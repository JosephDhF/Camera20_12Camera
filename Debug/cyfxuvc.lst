
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f174  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  40012174  40012174  00012174  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  400122c4  400122c4  000122c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  4001235c  4001235c  0001235c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  400127c8  400127c8  000127c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  400127f4  400127f4  000127f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  400128ec  400128ec  000128ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  400128f8  400128f8  000128f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  40012904  40012904  00012904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  4001292c  4001292c  0001292c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  4001293c  4001293c  0001293c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  4001294c  4001294c  0001294c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  4001295c  4001295c  0001295c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012970  40012970  00012970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012980  40012980  00012980  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  4001298c  4001298c  0001298c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  400129a0  400129a0  000129a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  400129dc  400129dc  000129dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012a04  40012a04  00012a04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012a3c  40012a3c  00012a3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012a70  40012a70  00012a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012a88  40012a88  00012a88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012aa0  40012aa0  00012aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012abc  40012abc  00012abc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012b40  40012b40  00012b40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40012c14  40012c14  00012c14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40012c5c  40012c5c  00012c5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40012dec  40012dec  00012dec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40012e6c  40012e6c  00012e6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  40012e7c  40012e7c  00012e7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  400130b0  400130b0  000130b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  400131a8  400131a8  000131a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  40013440  40013440  00013440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  40013478  40013478  00013478  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  400134d4  400134d4  000134d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  400134f4  400134f4  000134f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013550  40013550  00013550  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  40013574  40013574  00013574  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013594  40013594  00013594  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  40013688  40013688  00013688  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  40013714  40013714  00013714  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013718  40013718  00013718  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  4001373c  4001373c  0001373c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013850  40013850  00013850  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  400138f0  400138f0  000138f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013948  40013948  00013948  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013998  40013998  00013998  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013a94  40013a94  00013a94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013b44  40013b44  00013b44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40013bf8  40013bf8  00013bf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40013c20  40013c20  00013c20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40013c30  40013c30  00013c30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40013dd0  40013dd0  00013dd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40013ee8  40013ee8  00013ee8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40013f38  40013f38  00013f38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  400140a8  400140a8  000140a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  40014180  40014180  00014180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  40014204  40014204  00014204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  4001421c  4001421c  0001421c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  4001439c  4001439c  0001439c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  400143dc  400143dc  000143dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  400143ec  400143ec  000143ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  400143fc  400143fc  000143fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  4001440c  4001440c  0001440c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  4001441c  4001441c  0001441c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  400144ec  400144ec  000144ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  4001471c  4001471c  0001471c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  400147ac  400147ac  000147ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014820  40014820  00014820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014848  40014848  00014848  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014884  40014884  00014884  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  400148ac  400148ac  000148ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  400148d4  400148d4  000148d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  400148fc  400148fc  000148fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014924  40014924  00014924  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  4001494c  4001494c  0001494c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014974  40014974  00014974  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  400149a0  400149a0  000149a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014a08  40014a08  00014a08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014a1c  40014a1c  00014a1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014a70  40014a70  00014a70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014ad0  40014ad0  00014ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014b70  40014b70  00014b70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40014c50  40014c50  00014c50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40014d30  40014d30  00014d30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  40014d78  40014d78  00014d78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40014e24  40014e24  00014e24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  40014e68  40014e68  00014e68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40014edc  40014edc  00014edc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  40015040  40015040  00015040  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  40015094  40015094  00015094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  400150e8  400150e8  000150e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  400153d8  400153d8  000153d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  40015468  40015468  00015468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  400156d4  400156d4  000156d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015abc  40015abc  00015abc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015b6c  40015b6c  00015b6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40015c40  40015c40  00015c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40015df4  40015df4  00015df4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  40016128  40016128  00016128  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  40016248  40016248  00016248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  400162b4  400162b4  000162b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  400163ac  400163ac  000163ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  40016488  40016488  00016488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016628  40016628  00016628  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016814  40016814  00016814  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016a34  40016a34  00016a34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40016c6c  40016c6c  00016c6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40016d9c  40016d9c  00016d9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  40016f40  40016f40  00016f40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  40017040  40017040  00017040  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  4001715c  4001715c  0001715c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  400171b0  400171b0  000171b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  40017570  40017570  00017570  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  4001785c  4001785c  0001785c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017b54  40017b54  00017b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  40018298  40018298  00018298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  400183ec  400183ec  000183ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  4001851c  4001851c  0001851c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  4001864c  4001864c  0001864c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018788  40018788  00018788  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  400189f8  400189f8  000189f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40018c54  40018c54  00018c54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40018dd4  40018dd4  00018dd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  40018f5c  40018f5c  00018f5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40019010  40019010  00019010  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  400190c8  400190c8  000190c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  40019164  40019164  00019164  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  40019204  40019204  00019204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  40019570  40019570  00019570  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019b00  40019b00  00019b00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a0e0  4001a0e0  0001a0e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001a768  4001a768  0001a768  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001a7cc  4001a7cc  0001a7cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001a81c  4001a81c  0001a81c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001a914  4001a914  0001a914  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001aa2c  4001aa2c  0001aa2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001aaa8  4001aaa8  0001aaa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001abdc  4001abdc  0001abdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001ad40  4001ad40  0001ad40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001ad90  4001ad90  0001ad90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b040  4001b040  0001b040  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b1c4  4001b1c4  0001b1c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b204  4001b204  0001b204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b2bc  4001b2bc  0001b2bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b34c  4001b34c  0001b34c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001b5d4  4001b5d4  0001b5d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001b5e4  4001b5e4  0001b5e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001b738  4001b738  0001b738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001b8b8  4001b8b8  0001b8b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bb1c  4001bb1c  0001bb1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bb2c  4001bb2c  0001bb2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001bbf8  4001bbf8  0001bbf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001bcb8  4001bcb8  0001bcb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001bcc8  4001bcc8  0001bcc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c2c0  4001c2c0  0001c2c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c344  4001c344  0001c344  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c50c  4001c50c  0001c50c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001c630  4001c630  0001c630  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001c778  4001c778  0001c778  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001c8ec  4001c8ec  0001c8ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001c9b8  4001c9b8  0001c9b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001cb80  4001cb80  0001cb80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001cb90  4001cb90  0001cb90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001cba0  4001cba0  0001cba0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001cbec  4001cbec  0001cbec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001cc58  4001cc58  0001cc58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001ccd4  4001ccd4  0001ccd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001cd88  4001cd88  0001cd88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001cf60  4001cf60  0001cf60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d280  4001d280  0001d280  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d28c  4001d28c  0001d28c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d370  4001d370  0001d370  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d548  4001d548  0001d548  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001d63c  4001d63c  0001d63c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001d72c  4001d72c  0001d72c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001d904  4001d904  0001d904  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001dac8  4001dac8  0001dac8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001dc1c  4001dc1c  0001dc1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001dfac  4001dfac  0001dfac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e324  4001e324  0001e324  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e39c  4001e39c  0001e39c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e414  4001e414  0001e414  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e5b0  4001e5b0  0001e5b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001e794  4001e794  0001e794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001ea04  4001ea04  0001ea04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001eabc  4001eabc  0001eabc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001eaec  4001eaec  0001eaec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001eb8c  4001eb8c  0001eb8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001ef6c  4001ef6c  0001ef6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f058  4001f058  0001f058  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001f674  4001f674  0001f674  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001f710  4001f710  0001f710  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001f780  4001f780  0001f780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001f7fc  4001f7fc  0001f7fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001f970  4001f970  0001f970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001f9dc  4001f9dc  0001f9dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4001fc10  4001fc10  0001fc10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4001fc2c  4001fc2c  0001fc2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  4001fe24  4001fe24  0001fe24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  40020098  40020098  00020098  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  40020150  40020150  00020150  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  40020268  40020268  00020268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020664  40020664  00020664  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  4002075c  4002075c  0002075c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020868  40020868  00020868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020a34  40020a34  00020a34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020a88  40020a88  00020a88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020ae8  40020ae8  00020ae8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40020c2c  40020c2c  00020c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  40020c7c  40020c7c  00020c7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  40020e70  40020e70  00020e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  40021000  40021000  00021000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  40021198  40021198  00021198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  400213a8  400213a8  000213a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021bb4  40021bb4  00021bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40021c04  40021c04  00021c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40021d08  40021d08  00021d08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40021e1c  40021e1c  00021e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40021e28  40021e28  00021e28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40021e38  40021e38  00021e38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40021e4c  40021e4c  00021e4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  40021e60  40021e60  00021e60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40021e70  40021e70  00021e70  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40021eb0  40021eb0  00021eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40021ec8  40021ec8  00021ec8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40021ee0  40021ee0  00021ee0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  40021f1c  40021f1c  00021f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  40021f4c  40021f4c  00021f4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  40021f78  40021f78  00021f78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40021ff8  40021ff8  00021ff8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  4002208c  4002208c  0002208c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  400221dc  400221dc  000221dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  40022268  40022268  00022268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022348  40022348  00022348  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  40022358  40022358  00022358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  400223ac  400223ac  000223ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022448  40022448  00022448  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  400224b4  400224b4  000224b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022520  40022520  00022520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022698  40022698  00022698  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  400227b4  400227b4  000227b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022978  40022978  00022978  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022a68  40022a68  00022a68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022b40  40022b40  00022b40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40022bc4  40022bc4  00022bc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40022bd4  40022bd4  00022bd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40022be4  40022be4  00022be4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40022c40  40022c40  00022c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40022d28  40022d28  00022d28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40022de0  40022de0  00022de0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40022e24  40022e24  00022e24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023040  40023040  00023040  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  40023090  40023090  00023090  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  4002321c  4002321c  0002321c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  40023278  40023278  00023278  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  4002336c  4002336c  0002336c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  4002345c  4002345c  0002345c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023618  40023618  00023618  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  4002365c  4002365c  0002365c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023874  40023874  00023874  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023aa4  40023aa4  00023aa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023ab4  40023ab4  00023ab4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f08  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  40030f20  40030f20  00028f08  2**5
                  ALLOC
266 .debug_abbrev 00001153  00000000  00000000  00028f08  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d37b  00000000  00000000  0002a05b  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   00023037  00000000  00000000  000a73d6  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca40d  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d62b2  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d62e8  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6498  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042c9  00000000  00000000  000d70a1  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000e79f  00000000  00000000  000db36a  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 0000765b  00000000  00000000  000e9b09  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1168  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a72c  00000000  00000000  000f1208  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 00000558  00000000  00000000  000fb934  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fbe8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	400315fc 	.word	0x400315fc

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xb>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xb>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x13>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$45+0x20>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$27+0x14>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1b>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20+0x2c>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1b>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x40>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$34+0x1c>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x48>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_frame$41+0x1c>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$48+0x4>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x30>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$55+0xc>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24+0x21>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_frame$62+0x1c>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_pubnames$38+0xf>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$45+0xc>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$66+0xc>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$66>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$73+0x14>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$73+0x8>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$73+0x20>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x9>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x8>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x6>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x2a>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp_.debug_frame$13+0x18>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d3c 	.word	0x40030d3c
     af8:	40030d24 	.word	0x40030d24
     afc:	40031a38 	.word	0x40031a38
     b00:	40031968 	.word	0x40031968
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d38 	.word	0x40030d38
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d40 	.word	0x40030d40

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x7>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp_.debug_frame$27+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$31+0xc>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x29>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$20>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$20>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x15>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$55>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$55>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$122+0x8>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_pubnames$115+0x20>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_frame$111+0x4>
     ca0:	ea00003a 	b	d90 <__ARM_grp_.debug_pubnames$45+0x7>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_frame$76+0xc>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_pubnames$108+0x13>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_frame$13+0x10>
     cbc:	ea000000 	b	cc4 <__ARM_grp_.debug_frame$62+0x14>
     cc0:	ea000001 	b	ccc <__ARM_grp_.debug_frame$62+0x1c>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$24+0x5>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_frame$76+0x8>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_frame$76+0x8>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp_.debug_pubnames$45+0x3>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp_.debug_pubnames$45+0x3>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x4>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$20>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x4>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$20>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_pubnames$31+0x7>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x23>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_pubnames$31+0x7>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x23>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$80+0x3>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_frame$111>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_pubnames$31+0xf>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$20>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$101+0x18>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$20>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_pubnames$108+0xf>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$20>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_pubnames$31+0xf>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_pubnames$31+0x13>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$20>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_pubnames$10+0x1a>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_frame$20+0x14>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_pubnames$24+0x1>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$31>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_pubnames$31+0x17>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$31+0xc>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$20>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$31+0xc>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$31+0xc>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_pubnames$45+0xf>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_pubnames$59+0x7>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x7>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp_.debug_frame$55+0x4>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0xb>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x33>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_pubnames$31+0x1b>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$20>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp_.debug_frame$62+0x10>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_pubnames$31+0x1b>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_frame$27+0x8>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$20>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$20>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$20>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_pubnames$24+0xc>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_pubnames$45+0x1d>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$20>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$20>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$87+0x8>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_pubnames$31+0x1f>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$20>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$20>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_pubnames$73+0x1d>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$87>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$94+0x10>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$20>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_frame$104+0x24>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_pubnames$122+0x20>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$20>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_pubnames$136+0xf>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_frame$27>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_frame$27+0x4>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$20>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$90+0xc>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_pubnames$38>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp..debug_pubnames$cyu3descriptor.h$.2_Os2000_h7PQidXgB29_l00000>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$90+0x4>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x1a>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp_.debug_pubnames$10+0x2>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp_.debug_frame$97+0x10>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_pubnames$17+0x16>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$20>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_frame$104+0x24>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x23>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_frame$111+0x1c>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$59>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$66+0x7>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_frame$125+0x4>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_pubnames$80+0x14>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_frame$132+0x10>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x3c>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$139+0x1c>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$20>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_line$15+0x1>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$20>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030d88 	.word	0x40030d88
    17d0:	40030d68 	.word	0x40030d68
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d74 	.word	0x40030d74
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d70 	.word	0x40030d70
    17e4:	40030da0 	.word	0x40030da0
    17e8:	40030d44 	.word	0x40030d44
    17ec:	40030da8 	.word	0x40030da8
    17f0:	40030db8 	.word	0x40030db8
    17f4:	40030d78 	.word	0x40030d78
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d6c 	.word	0x40030d6c
    1800:	80008000 	.word	0x80008000
    1804:	40030db4 	.word	0x40030db4
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a74 	.word	0x40031a74
    1810:	40031b14 	.word	0x40031b14
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_frame$41+0x4>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_frame$41+0x8>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_frame$41+0xc>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_frame$41+0x10>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_frame$41+0x14>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_frame$41+0x18>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_frame$41+0x1c>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_frame$41+0x20>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_frame$41+0x24>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_frame$41+0x28>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_pubnames$66+0x3>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_pubnames$66+0x7>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_pubnames$66+0xb>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_pubnames$66+0xf>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_pubnames$66+0x13>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_pubnames$66+0x17>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$48>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$48+0x4>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_frame$48+0x8>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	40012128 	.word	0x40012128
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xd>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xd>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x11>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dc0 	.word	0x40030dc0

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x14>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x14>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315ac 	.word	0x400315ac

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x9>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$80+0x1d>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$80+0x15>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x9>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0xd>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x22>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_pubnames$94+0x1a>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_pubnames$94+0x12>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_frame$20+0x18>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_pubnames$108+0x9>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_pubnames$108+0x1>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x15>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_pubnames$101+0xa>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x11>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$115+0x11>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$115+0x9>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_frame$34+0x8>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x15>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_pubnames$129+0x11>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$129+0x9>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$129+0x1>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x19>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x5>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp_.debug_frame$20+0x14>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp_.debug_frame$20+0xc>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$143+0x1>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000ac8c 	.word	0x4000ac8c

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__ARM_grp_.debug_frame$27>
    1fb4:	40013440 	.word	0x40013440

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40021ec8 	.word	0x40021ec8

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a420 	.word	0x4000a420

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40021e38 	.word	0x40021e38

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <___tx_thread_context_restore_veneer+0x4>
    1fd4:	4000ad7c 	.word	0x4000ad7c

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40021ff8 	.word	0x40021ff8

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	40014204 	.word	0x40014204

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x1>
    1fec:	4000ae94 	.word	0x4000ae94

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000aeb8 	.word	0x4000aeb8

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40021e1c 	.word	0x40021e1c

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__ARM_grp_.debug_pubnames$171+0x2>
    2004:	4001f970 	.word	0x4001f970

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000ac38 	.word	0x4000ac38

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a2e0 	.word	0x4000a2e0

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	40009d54 	.word	0x40009d54

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	40013bf8 	.word	0x40013bf8

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__ARM_grp_.debug_pubnames$178>
    202c:	4001c50c 	.word	0x4001c50c

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b1c4 	.word	0x4001b1c4

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	40022520 	.word	0x40022520

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	40020e70 	.word	0x40020e70

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	40016128 	.word	0x40016128

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260, //2B: 0
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea003f9a 	b	40012e7c <CyU3PDebugPrint>
40003010:	40010b10 	.word	0x40010b10

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb003f91 	bl	40012e7c <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb003f84 	bl	40012e7c <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb003f76 	bl	40012e7c <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb003f69 	bl	40012e7c <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb003f5c 	bl	40012e7c <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb003f4f 	bl	40012e7c <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb003f41 	bl	40012e7c <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb003f34 	bl	40012e7c <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb003f27 	bl	40012e7c <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb003f1a 	bl	40012e7c <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb003f0d 	bl	40012e7c <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb003f00 	bl	40012e7c <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb003ef3 	bl	40012e7c <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003ee6 	bl	40012e7c <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003ed9 	bl	40012e7c <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003ecc 	bl	40012e7c <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003ebf 	bl	40012e7c <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003eb3 	bl	40012e7c <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010b28 	.word	0x40010b28
400033b8:	40010b44 	.word	0x40010b44
400033bc:	40010ba4 	.word	0x40010ba4

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001a73 	bl	40009dbc <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010bfc 	.word	0x40010bfc

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb001537 	bl	40008974 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb001533 	bl	40008974 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003e50 	bl	40012e7c <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010a90 	.word	0x40010a90
40003548:	40010c10 	.word	0x40010c10

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea006777 	b	4001d370 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea001413 	b	4000865c <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	40033244 	.word	0x40033244

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea003fda 	b	40013594 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb001875 	bl	40009838 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb001436 	bl	40008760 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb001822 	bl	40009728 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0018e3 	b	40009a48 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb001871 	bl	40009dbc <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb0012d5 	bl	40008760 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb0016c1 	bl	40009728 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb00188e 	bl	40009f34 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb001292 	bl	40008760 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb0018a3 	bl	40009fb4 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001742 	bl	40009a48 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb0018cc 	bl	4000a088 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea001874 	b	40009f34 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb00127a 	bl	40008760 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb00188b 	bl	40009fb4 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb00188d 	bl	4000a088 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb001868 	bl	4000a088 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb001217 	bl	40008760 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb001828 	bl	40009fb4 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb001853 	bl	4000a088 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb0011cb 	bl	40008760 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb0017dc 	bl	40009fb4 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb00167a 	bl	40009a48 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb001804 	bl	4000a088 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb0017ad 	bl	40009f34 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001650 	bl	400099c8 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007de4 	bl	40023874 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001b 	bne	40004158 <SensorRead2B.clone.1+0xbc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003cd3 	bl	40013440 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
40004118:	eb007ccf 	bl	4002345c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003cc4 	bl	40013440 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f102c 	ldr	r1, [pc, #44]	; 40004174 <SensorRead2B.clone.1+0xd8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003b49 	bl	40012e7c <CyU3PDebugPrint>
40004154:	eafffff4 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004158:	e5d4c001 	ldrb	ip, [r4, #1]
4000415c:	e5d43000 	ldrb	r3, [r4]
40004160:	e59f1010 	ldr	r1, [pc, #16]	; 40004178 <SensorRead2B.clone.1+0xdc>
40004164:	e3a00004 	mov	r0, #4
40004168:	e58dc000 	str	ip, [sp]
4000416c:	eb003b42 	bl	40012e7c <CyU3PDebugPrint>
40004170:	eaffffde 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004174:	40010f10 	.word	0x40010f10
40004178:	40010ef4 	.word	0x40010ef4

4000417c <SensorWrite2B>:
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
4000417c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004180:	e35000a0 	cmp	r0, #160	; 0xa0
40004184:	13500070 	cmpne	r0, #112	; 0x70
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004188:	e24dd014 	sub	sp, sp, #20
4000418c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	03a0e000 	moveq	lr, #0
40004194:	13a0e001 	movne	lr, #1
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004198:	e1a07001 	mov	r7, r1
4000419c:	e1a06002 	mov	r6, r2
400041a0:	e1a05003 	mov	r5, r3
400041a4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a8:	1a000021 	bne	40004234 <SensorWrite2B+0xb8>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041ac:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b0:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041b4:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b8:	e28d100c 	add	r1, sp, #12
400041bc:	e3a02001 	mov	r2, #1
400041c0:	e1a0300e 	mov	r3, lr
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
400041c4:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = highAddr;
400041c8:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
400041cc:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e5cdc008 	strb	ip, [sp, #8]
	inbuf[0] = lowAddr;
400041d4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041d8:	eb007da5 	bl	40023874 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041dc:	e3500000 	cmp	r0, #0
400041e0:	0a000010 	beq	40004228 <SensorWrite2B+0xac>
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041e4:	e1a02004 	mov	r2, r4
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400041e8:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
400041ec:	e3a04001 	mov	r4, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041f0:	e1a0000d 	mov	r0, sp
400041f4:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
400041f8:	e3a03000 	mov	r3, #0
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e5cd4008 	strb	r4, [sp, #8]
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004204:	eb007d9a 	bl	40023874 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004208:	e2504000 	subs	r4, r0, #0
4000420c:	0a000002 	beq	4000421c <SensorWrite2B+0xa0>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004210:	e1a00004 	mov	r0, r4
40004214:	e28dd014 	add	sp, sp, #20
40004218:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
4000421c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004220:	eb003c86 	bl	40013440 <CyU3PBusyWait>
40004224:	eafffff9 	b	40004210 <SensorWrite2B+0x94>
40004228:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000422c:	eb003c83 	bl	40013440 <CyU3PBusyWait>
40004230:	eaffffeb 	b	400041e4 <SensorWrite2B+0x68>
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004234:	e3a00004 	mov	r0, #4
40004238:	e59f1008 	ldr	r1, [pc, #8]	; 40004248 <SensorWrite2B+0xcc>
4000423c:	eb003b0e 	bl	40012e7c <CyU3PDebugPrint>
		return 1;
40004240:	e3a04001 	mov	r4, #1
40004244:	eafffff1 	b	40004210 <SensorWrite2B+0x94>
40004248:	40010f2c 	.word	0x40010f2c

4000424c <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
4000424c:	e35000a0 	cmp	r0, #160	; 0xa0
40004250:	13500070 	cmpne	r0, #112	; 0x70
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004254:	e92d4010 	push	{r4, lr}
40004258:	e1a0c000 	mov	ip, r0
4000425c:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004260:	03a0e000 	moveq	lr, #0
40004264:	13a0e001 	movne	lr, #1
40004268:	1a00001a 	bne	400042d8 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
4000426c:	e3530040 	cmp	r3, #64	; 0x40
40004270:	8a000013 	bhi	400042c4 <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
40004274:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004278:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000427c:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004280:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
40004284:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004288:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000428c:	e28d0004 	add	r0, sp, #4
40004290:	e59d1018 	ldr	r1, [sp, #24]
40004294:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004298:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
4000429c:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
400042a0:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
400042a4:	eb007d72 	bl	40023874 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042a8:	e2504000 	subs	r4, r0, #0
400042ac:	1a000001 	bne	400042b8 <SensorWrite+0x6c>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400042b0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400042b4:	eb003c61 	bl	40013440 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400042b8:	e1a00004 	mov	r0, r4
400042bc:	e28dd010 	add	sp, sp, #16
400042c0:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400042c4:	e3a00004 	mov	r0, #4
400042c8:	e59f101c 	ldr	r1, [pc, #28]	; 400042ec <SensorWrite+0xa0>
400042cc:	eb003aea 	bl	40012e7c <CyU3PDebugPrint>
		return 1;
400042d0:	e3a04001 	mov	r4, #1
400042d4:	eafffff7 	b	400042b8 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400042d8:	e3a00004 	mov	r0, #4
400042dc:	e59f100c 	ldr	r1, [pc, #12]	; 400042f0 <SensorWrite+0xa4>
400042e0:	eb003ae5 	bl	40012e7c <CyU3PDebugPrint>
		return 1;
400042e4:	e3a04001 	mov	r4, #1
400042e8:	eafffff2 	b	400042b8 <SensorWrite+0x6c>
400042ec:	40010f50 	.word	0x40010f50
400042f0:	40010f2c 	.word	0x40010f2c

400042f4 <SensorRead2B>:
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
400042f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400042f8:	e35000a1 	cmp	r0, #161	; 0xa1
400042fc:	13500071 	cmpne	r0, #113	; 0x71
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
40004300:	e24dd018 	sub	sp, sp, #24
40004304:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004308:	03a0c000 	moveq	ip, #0
4000430c:	13a0c001 	movne	ip, #1
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
40004310:	e1a06001 	mov	r6, r1
40004314:	e1a0e002 	mov	lr, r2
40004318:	e59d5034 	ldr	r5, [sp, #52]	; 0x34
4000431c:	e5dd8030 	ldrb	r8, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004320:	1a000021 	bne	400043ac <SensorRead2B+0xb8>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
40004324:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004328:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000432c:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
40004330:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004334:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004338:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000433c:	e1a01005 	mov	r1, r5
40004340:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004344:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
40004348:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
4000434c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
40004350:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004354:	eb007d46 	bl	40023874 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004358:	e2502000 	subs	r2, r0, #0
4000435c:	1a000017 	bne	400043c0 <SensorRead2B+0xcc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004360:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004364:	eb003c35 	bl	40013440 <CyU3PBusyWait>

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004368:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
4000436c:	e3a0e001 	mov	lr, #1
	preamble.ctrlMask = 0x0000;
40004370:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
40004374:	e28d000c 	add	r0, sp, #12
40004378:	e1a01005 	mov	r1, r5
4000437c:	e1a02008 	mov	r2, r8
40004380:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004384:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004388:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
4000438c:	eb007c32 	bl	4002345c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004390:	e2504000 	subs	r4, r0, #0
40004394:	1a000010 	bne	400043dc <SensorRead2B+0xe8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004398:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000439c:	eb003c27 	bl	40013440 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
400043a0:	e1a00004 	mov	r0, r4
400043a4:	e28dd018 	add	sp, sp, #24
400043a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400043ac:	e3a00004 	mov	r0, #4
400043b0:	e59f1044 	ldr	r1, [pc, #68]	; 400043fc <SensorRead2B+0x108>
400043b4:	eb003ab0 	bl	40012e7c <CyU3PDebugPrint>
		return 1;
400043b8:	e3a04001 	mov	r4, #1
400043bc:	eafffff7 	b	400043a0 <SensorRead2B+0xac>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043c0:	e5d5c001 	ldrb	ip, [r5, #1]
400043c4:	e5d53000 	ldrb	r3, [r5]
400043c8:	e59f1030 	ldr	r1, [pc, #48]	; 40004400 <SensorRead2B+0x10c>
400043cc:	e3a00004 	mov	r0, #4
400043d0:	e58dc000 	str	ip, [sp]
400043d4:	eb003aa8 	bl	40012e7c <CyU3PDebugPrint>
400043d8:	eaffffe2 	b	40004368 <SensorRead2B+0x74>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043dc:	e5d5c001 	ldrb	ip, [r5, #1]
400043e0:	e5d53000 	ldrb	r3, [r5]
400043e4:	e59f1018 	ldr	r1, [pc, #24]	; 40004404 <SensorRead2B+0x110>
400043e8:	e1a02004 	mov	r2, r4
400043ec:	e3a00004 	mov	r0, #4
400043f0:	e58dc000 	str	ip, [sp]
400043f4:	eb003aa0 	bl	40012e7c <CyU3PDebugPrint>
400043f8:	eaffffe8 	b	400043a0 <SensorRead2B+0xac>
400043fc:	40010f2c 	.word	0x40010f2c
40004400:	40010ef4 	.word	0x40010ef4
40004404:	40010f10 	.word	0x40010f10

40004408 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004408:	e35000a1 	cmp	r0, #161	; 0xa1
4000440c:	13500071 	cmpne	r0, #113	; 0x71
#endif
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004410:	e92d4030 	push	{r4, r5, lr}
40004414:	e1a0c000 	mov	ip, r0
40004418:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000441c:	03a0e000 	moveq	lr, #0
40004420:	13a0e001 	movne	lr, #1
40004424:	1a00001c 	bne	4000449c <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004428:	e3530040 	cmp	r3, #64	; 0x40
4000442c:	8a000015 	bhi	40004488 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004430:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004434:	e1a02003 	mov	r2, r3
40004438:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000443c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004440:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004444:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004448:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000444c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004450:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004454:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
40004458:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
4000445c:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
40004460:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
40004464:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004468:	eb007bfb 	bl	4002345c <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000446c:	e2504000 	subs	r4, r0, #0
40004470:	1a000001 	bne	4000447c <SensorRead+0x74>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004474:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004478:	eb003bf0 	bl	40013440 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
4000447c:	e1a00004 	mov	r0, r4
40004480:	e28dd014 	add	sp, sp, #20
40004484:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
40004488:	e3a00004 	mov	r0, #4
4000448c:	e59f101c 	ldr	r1, [pc, #28]	; 400044b0 <SensorRead+0xa8>
40004490:	eb003a79 	bl	40012e7c <CyU3PDebugPrint>
		return 1;
40004494:	e3a04001 	mov	r4, #1
40004498:	eafffff7 	b	4000447c <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
4000449c:	e3a00004 	mov	r0, #4
400044a0:	e59f100c 	ldr	r1, [pc, #12]	; 400044b4 <SensorRead+0xac>
400044a4:	eb003a74 	bl	40012e7c <CyU3PDebugPrint>
		return 1;
400044a8:	e3a04001 	mov	r4, #1
400044ac:	eafffff2 	b	4000447c <SensorRead+0x74>
400044b0:	40010f50 	.word	0x40010f50
400044b4:	40010f2c 	.word	0x40010f2c

400044b8 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
400044b8:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
400044bc:	e3a00016 	mov	r0, #22
400044c0:	e3a01000 	mov	r1, #0
400044c4:	eb007967 	bl	40022a68 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
400044c8:	e2502000 	subs	r2, r0, #0
400044cc:	1a000022 	bne	4000455c <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
400044d0:	e59f1094 	ldr	r1, [pc, #148]	; 4000456c <SensorReset+0xb4>
400044d4:	e3a00004 	mov	r0, #4
400044d8:	eb003a67 	bl	40012e7c <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
400044dc:	eb001316 	bl	4000913c <_tx_time_get>
400044e0:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
400044e4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400044e8:	eb001121 	bl	40008974 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
400044ec:	eb001312 	bl	4000913c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
400044f0:	e1a04804 	lsl	r4, r4, #16
400044f4:	e1a02824 	lsr	r2, r4, #16
400044f8:	e59f1070 	ldr	r1, [pc, #112]	; 40004570 <SensorReset+0xb8>
400044fc:	e1a00800 	lsl	r0, r0, #16
40004500:	e1a03820 	lsr	r3, r0, #16
40004504:	e3a00004 	mov	r0, #4
40004508:	eb003a5b 	bl	40012e7c <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000450c:	eb00130a 	bl	4000913c <_tx_time_get>
40004510:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004514:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004518:	eb001115 	bl	40008974 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000451c:	eb001306 	bl	4000913c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004520:	e1a02804 	lsl	r2, r4, #16
40004524:	e1a02822 	lsr	r2, r2, #16
40004528:	e59f1040 	ldr	r1, [pc, #64]	; 40004570 <SensorReset+0xb8>
4000452c:	e1a03800 	lsl	r3, r0, #16
40004530:	e1a03823 	lsr	r3, r3, #16
40004534:	e3a00004 	mov	r0, #4
40004538:	eb003a4f 	bl	40012e7c <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000453c:	e3a00016 	mov	r0, #22
40004540:	e3a01001 	mov	r1, #1
40004544:	eb007947 	bl	40022a68 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004548:	e2502000 	subs	r2, r0, #0
4000454c:	1a000002 	bne	4000455c <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004550:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004554:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004558:	ea001105 	b	40008974 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
4000455c:	e59f1010 	ldr	r1, [pc, #16]	; 40004574 <SensorReset+0xbc>
40004560:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004564:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004568:	ea003a43 	b	40012e7c <CyU3PDebugPrint>
4000456c:	40010f98 	.word	0x40010f98
40004570:	40010fac 	.word	0x40010fac
40004574:	40010f70 	.word	0x40010f70

40004578 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
40004578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000457c:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
40004580:	e3a00052 	mov	r0, #82	; 0x52
40004584:	e3a01030 	mov	r1, #48	; 0x30
40004588:	e3a020f2 	mov	r2, #242	; 0xf2
4000458c:	e28d3004 	add	r3, sp, #4
40004590:	ebfffec1 	bl	4000409c <SensorRead2B.clone.1>
40004594:	e3500000 	cmp	r0, #0
40004598:	1a000002 	bne	400045a8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
4000459c:	e5dd3004 	ldrb	r3, [sp, #4]
400045a0:	e3530056 	cmp	r3, #86	; 0x56
400045a4:	0a000002 	beq	400045b4 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400045a8:	e3a00004 	mov	r0, #4
400045ac:	e59f1008 	ldr	r1, [pc, #8]	; 400045bc <SensorInit+0x44>
400045b0:	eb003a31 	bl	40012e7c <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
400045b4:	e28dd00c 	add	sp, sp, #12
400045b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400045bc:	40010fc0 	.word	0x40010fc0

400045c0 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400045c4:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
400045c8:	e3a00052 	mov	r0, #82	; 0x52
400045cc:	e3a01030 	mov	r1, #48	; 0x30
400045d0:	e3a020f2 	mov	r2, #242	; 0xf2
400045d4:	e28d3004 	add	r3, sp, #4
400045d8:	ebfffeaf 	bl	4000409c <SensorRead2B.clone.1>
400045dc:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
400045e0:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
400045e4:	1a000002 	bne	400045f4 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045e8:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
400045ec:	e2500056 	subs	r0, r0, #86	; 0x56
400045f0:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
400045f4:	e28dd00c 	add	sp, sp, #12
400045f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400045fc <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
400045fc:	e92d4010 	push	{r4, lr}
40004600:	e24dd008 	sub	sp, sp, #8
40004604:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, 1, buf);
40004608:	e1a02000 	mov	r2, r0
4000460c:	e28d3004 	add	r3, sp, #4
40004610:	e3a00053 	mov	r0, #83	; 0x53
40004614:	ebfffea0 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004618:	e59f1018 	ldr	r1, [pc, #24]	; 40004638 <SensorGetControl+0x3c>
4000461c:	e1a02004 	mov	r2, r4
40004620:	e5dd3004 	ldrb	r3, [sp, #4]
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003a13 	bl	40012e7c <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000462c:	e5dd0004 	ldrb	r0, [sp, #4]
40004630:	e28dd008 	add	sp, sp, #8
40004634:	e8bd8010 	pop	{r4, pc}
40004638:	40010fe4 	.word	0x40010fe4

4000463c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000463c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
40004640:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004644:	e24dd01c 	sub	sp, sp, #28
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004648:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000464c:	e1a05000 	mov	r5, r0
40004650:	e1a04002 	mov	r4, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
40004654:	e5cd1006 	strb	r1, [sp, #6]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004658:	e5cde004 	strb	lr, [sp, #4]
	preamble.buffer[1] = boradAddr;
4000465c:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004660:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004664:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004668:	e28d0004 	add	r0, sp, #4
4000466c:	e28d1010 	add	r1, sp, #16
40004670:	e3a02001 	mov	r2, #1
40004674:	e3a03000 	mov	r3, #0
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	uint8_t buf[2];
	buf[0] = value;
40004678:	e5cd4014 	strb	r4, [sp, #20]
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
4000467c:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
40004680:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;
40004684:	e5cd5010 	strb	r5, [sp, #16]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004688:	eb007c79 	bl	40023874 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000468c:	e3500000 	cmp	r0, #0
40004690:	0a000015 	beq	400046ec <SensorSetControl+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004694:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004698:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
4000469c:	e28d0004 	add	r0, sp, #4
400046a0:	e28d1014 	add	r1, sp, #20
400046a4:	e1a0200c 	mov	r2, ip
400046a8:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400046ac:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
400046b0:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400046b4:	eb007c6e 	bl	40023874 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400046b8:	e3500000 	cmp	r0, #0
400046bc:	0a000007 	beq	400046e0 <SensorSetControl+0xa4>
{
	uint8_t buf[2];
	buf[0] = value;
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, 1, buf);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
400046c0:	e59f1030 	ldr	r1, [pc, #48]	; 400046f8 <SensorSetControl+0xbc>
400046c4:	e1a02005 	mov	r2, r5
400046c8:	e1a03004 	mov	r3, r4
400046cc:	e3a00004 	mov	r0, #4
400046d0:	eb0039e9 	bl	40012e7c <CyU3PDebugPrint>
//#endif
	return 0;
};
400046d4:	e3a00000 	mov	r0, #0
400046d8:	e28dd01c 	add	sp, sp, #28
400046dc:	e8bd8030 	pop	{r4, r5, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400046e0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046e4:	eb003b55 	bl	40013440 <CyU3PBusyWait>
400046e8:	eafffff4 	b	400046c0 <SensorSetControl+0x84>
400046ec:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046f0:	eb003b52 	bl	40013440 <CyU3PBusyWait>
400046f4:	eaffffe6 	b	40004694 <SensorSetControl+0x58>
400046f8:	40011004 	.word	0x40011004

400046fc <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
400046fc:	e1a0c000 	mov	ip, r0
40004700:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004704:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, 1, buf);
40004708:	e28d3004 	add	r3, sp, #4
4000470c:	e1a00002 	mov	r0, r2
40004710:	e1a0200c 	mov	r2, ip
40004714:	ebfffe60 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004718:	e5dd0004 	ldrb	r0, [sp, #4]
4000471c:	e28dd00c 	add	sp, sp, #12
40004720:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40004724 <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004724:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004728:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000472c:	e24dd01c 	sub	sp, sp, #28
	uint8_t buf[2];
	buf[0] = value;
40004730:	e5cd2014 	strb	r2, [sp, #20]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
40004734:	e5cd3005 	strb	r3, [sp, #5]
	preamble.buffer[2] = highAddr;
40004738:	e5cd1006 	strb	r1, [sp, #6]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;
4000473c:	e5cd0010 	strb	r0, [sp, #16]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004740:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004744:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004748:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
4000474c:	e28d0004 	add	r0, sp, #4
40004750:	e28d1010 	add	r1, sp, #16
40004754:	e3a02001 	mov	r2, #1
40004758:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
4000475c:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
40004760:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004764:	eb007c42 	bl	40023874 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004768:	e3500000 	cmp	r0, #0
4000476c:	0a000010 	beq	400047b4 <SensorSetIrisControl+0x90>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004770:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004774:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004778:	e28d0004 	add	r0, sp, #4
4000477c:	e28d1014 	add	r1, sp, #20
40004780:	e1a0200c 	mov	r2, ip
40004784:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004788:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
4000478c:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004790:	eb007c37 	bl	40023874 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004794:	e3500000 	cmp	r0, #0
40004798:	0a000002 	beq	400047a8 <SensorSetIrisControl+0x84>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, 1, buf);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
4000479c:	e3a00000 	mov	r0, #0
400047a0:	e28dd01c 	add	sp, sp, #28
400047a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400047a8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047ac:	eb003b23 	bl	40013440 <CyU3PBusyWait>
400047b0:	eafffff9 	b	4000479c <SensorSetIrisControl+0x78>
400047b4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047b8:	eb003b20 	bl	40013440 <CyU3PBusyWait>
400047bc:	eaffffeb 	b	40004770 <SensorSetIrisControl+0x4c>

400047c0 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047c4:	e59f2200 	ldr	r2, [pc, #512]	; 400049cc <I2cAppThread_Entry+0x20c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047c8:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047cc:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047d0:	e3a0effa 	mov	lr, #1000	; 0x3e8
400047d4:	e284c02c 	add	ip, r4, #44	; 0x2c
400047d8:	e3a0300b 	mov	r3, #11
400047dc:	e1a01004 	mov	r1, r4
400047e0:	e59f01e8 	ldr	r0, [pc, #488]	; 400049d0 <I2cAppThread_Entry+0x210>
400047e4:	e58de000 	str	lr, [sp]
400047e8:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047ec:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047f0:	e58d4004 	str	r4, [sp, #4]
400047f4:	e58d4008 	str	r4, [sp, #8]
400047f8:	eb00185d 	bl	4000a974 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
400047fc:	eb00124e 	bl	4000913c <_tx_time_get>
40004800:	e59f11cc 	ldr	r1, [pc, #460]	; 400049d4 <I2cAppThread_Entry+0x214>
40004804:	e59f51cc 	ldr	r5, [pc, #460]	; 400049d8 <I2cAppThread_Entry+0x218>
40004808:	e1a02000 	mov	r2, r0
4000480c:	e3a00004 	mov	r0, #4
40004810:	eb003999 	bl	40012e7c <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004814:	e3a00032 	mov	r0, #50	; 0x32
40004818:	eb001055 	bl	40008974 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
4000481c:	e59f01ac 	ldr	r0, [pc, #428]	; 400049d0 <I2cAppThread_Entry+0x210>
40004820:	eb001821 	bl	4000a8ac <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004824:	ea000000 	b	4000482c <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
40004828:	eb001802 	bl	4000a838 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
4000482c:	e5d5201a 	ldrb	r2, [r5, #26]
40004830:	e3520000 	cmp	r2, #0
40004834:	0afffffb 	beq	40004828 <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
40004838:	e59f0198 	ldr	r0, [pc, #408]	; 400049d8 <I2cAppThread_Entry+0x218>
4000483c:	e59f1198 	ldr	r1, [pc, #408]	; 400049dc <I2cAppThread_Entry+0x21c>
40004840:	e5903010 	ldr	r3, [r0, #16]
40004844:	e3a00004 	mov	r0, #4
40004848:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
4000484c:	eb00398a 	bl	40012e7c <CyU3PDebugPrint>
40004850:	e59f7188 	ldr	r7, [pc, #392]	; 400049e0 <I2cAppThread_Entry+0x220>
40004854:	e59fb188 	ldr	fp, [pc, #392]	; 400049e4 <I2cAppThread_Entry+0x224>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004858:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
4000485c:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
40004860:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004864:	e3a02003 	mov	r2, #3
40004868:	e28d3014 	add	r3, sp, #20
4000486c:	e3a01020 	mov	r1, #32
40004870:	e59f0170 	ldr	r0, [pc, #368]	; 400049e8 <I2cAppThread_Entry+0x228>
40004874:	e58d6000 	str	r6, [sp]
40004878:	eb001505 	bl	40009c94 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000487c:	e1a01006 	mov	r1, r6
40004880:	e597001c 	ldr	r0, [r7, #28]
40004884:	eb0015ca 	bl	40009fb4 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
40004888:	e597001c 	ldr	r0, [r7, #28]
4000488c:	eb0015fd 	bl	4000a088 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004890:	e595001c 	ldr	r0, [r5, #28]
40004894:	e1a01006 	mov	r1, r6
40004898:	eb0015c5 	bl	40009fb4 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
4000489c:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048a0:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400048a4:	e3520000 	cmp	r2, #0
400048a8:	1a000008 	bne	400048d0 <I2cAppThread_Entry+0x110>
400048ac:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400048b0:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400048b4:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048b8:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
400048bc:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048c0:	e353003f 	cmp	r3, #63	; 0x3f
400048c4:	93520000 	cmpls	r2, #0
400048c8:	0afffff8 	beq	400048b0 <I2cAppThread_Entry+0xf0>
400048cc:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
400048d0:	e3520000 	cmp	r2, #0
400048d4:	0a000029 	beq	40004980 <I2cAppThread_Entry+0x1c0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048d8:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048dc:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048e0:	e083e083 	add	lr, r3, r3, lsl #1
400048e4:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048e8:	e242c020 	sub	ip, r2, #32
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048ec:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
400048f0:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
400048f4:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
400048f8:	e1daa0b8 	ldrh	sl, [sl, #8]
					switch(lcCmdDes->CmdID){
400048fc:	e35c0003 	cmp	ip, #3
40004900:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004904:	ea00001a 	b	40004974 <I2cAppThread_Entry+0x1b4>
40004908:	40004918 	.word	0x40004918
4000490c:	40004918 	.word	0x40004918
40004910:	40004964 	.word	0x40004964
40004914:	40004964 	.word	0x40004964
						case 0x20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 0x21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004918:	e3a03052 	mov	r3, #82	; 0x52
4000491c:	ebffff80 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
40004920:	e3a01f7d 	mov	r1, #500	; 0x1f4
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
							break;
					}
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004924:	e3a02000 	mov	r2, #0
40004928:	e59f00a0 	ldr	r0, [pc, #160]	; 400049d0 <I2cAppThread_Entry+0x210>
4000492c:	eb0017ee 	bl	4000a8ec <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004930:	e59f0098 	ldr	r0, [pc, #152]	; 400049d0 <I2cAppThread_Entry+0x210>
40004934:	eb0017dc 	bl	4000a8ac <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004938:	e5d40001 	ldrb	r0, [r4, #1]
4000493c:	e5d41002 	ldrb	r1, [r4, #2]
40004940:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004944:	12800001 	addne	r0, r0, #1
40004948:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
4000494c:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004950:	0a000010 	beq	40004998 <I2cAppThread_Entry+0x1d8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004954:	e595001c 	ldr	r0, [r5, #28]
40004958:	eb0015ca 	bl	4000a088 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
4000495c:	eb0017b5 	bl	4000a838 <_txe_thread_relinquish>
		}
40004960:	eaffffbf 	b	40004864 <I2cAppThread_Entry+0xa4>
						case 0x22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 0x23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//opt Zoom
40004964:	e3a03082 	mov	r3, #130	; 0x82
40004968:	ebffff6d 	bl	40004724 <SensorSetIrisControl>
							delaytime = 300;
							break;
4000496c:	e3a01f4b 	mov	r1, #300	; 0x12c
40004970:	eaffffeb 	b	40004924 <I2cAppThread_Entry+0x164>
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004974:	ebffff30 	bl	4000463c <SensorSetControl>
40004978:	e1a0100a 	mov	r1, sl
							break;
4000497c:	eaffffe8 	b	40004924 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004980:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004984:	e59f0044 	ldr	r0, [pc, #68]	; 400049d0 <I2cAppThread_Entry+0x210>
40004988:	eb0017d7 	bl	4000a8ec <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
4000498c:	e59f003c 	ldr	r0, [pc, #60]	; 400049d0 <I2cAppThread_Entry+0x210>
40004990:	eb0017c5 	bl	4000a8ac <_txe_timer_activate>
40004994:	eaffffee 	b	40004954 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004998:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
4000499c:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049a0:	e35c0023 	cmp	ip, #35	; 0x23
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049a4:	824cc020 	subhi	ip, ip, #32
400049a8:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049ac:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b0:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049b4:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b8:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049bc:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
400049c0:	e5944034 	ldr	r4, [r4, #52]	; 0x34
400049c4:	e5854010 	str	r4, [r5, #16]
400049c8:	eaffffe1 	b	40004954 <I2cAppThread_Entry+0x194>
400049cc:	400049ec 	.word	0x400049ec
400049d0:	40032fc4 	.word	0x40032fc4
400049d4:	40011070 	.word	0x40011070
400049d8:	40032ec4 	.word	0x40032ec4
400049dc:	40011084 	.word	0x40011084
400049e0:	40033110 	.word	0x40033110
400049e4:	40030000 	.word	0x40030000
400049e8:	40030f90 	.word	0x40030f90

400049ec <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
400049ec:	e59f0008 	ldr	r0, [pc, #8]	; 400049fc <I2CCmdCb+0x10>
400049f0:	e3a01020 	mov	r1, #32
400049f4:	e3a02000 	mov	r2, #0
400049f8:	ea0014d5 	b	40009d54 <_txe_event_flags_set>
400049fc:	40030f90 	.word	0x40030f90

40004a00 <CyFxUvcApplnDmaCallback>:
        )
{
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a00:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004a04:	e92d4030 	push	{r4, r5, lr}
40004a08:	e1a04002 	mov	r4, r2
40004a0c:	e24dd00c 	sub	sp, sp, #12
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a10:	0a00000b 	beq	40004a44 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
                        status, input->buffer_p.count, prodCount - consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004a14:	e3510010 	cmp	r1, #16
40004a18:	1a000007 	bne	40004a3c <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004a1c:	e59f3104 	ldr	r3, [pc, #260]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
        streamingStarted = CyTrue;
40004a20:	e3a02001 	mov	r2, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a24:	e1d3c3b0 	ldrh	ip, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
40004a28:	e5832034 	str	r2, [r3, #52]	; 0x34
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a2c:	e08c0002 	add	r0, ip, r2
40004a30:	e1a01800 	lsl	r1, r0, #16
40004a34:	e1a02821 	lsr	r2, r1, #16
40004a38:	e1c323b0 	strh	r2, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
    }
}
40004a3c:	e28dd00c 	add	sp, sp, #12
40004a40:	e8bd8030 	pop	{r4, r5, pc}
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004a44:	e1d220b4 	ldrh	r2, [r2, #4]
40004a48:	e59f30dc 	ldr	r3, [pc, #220]	; 40004b2c <CyFxUvcApplnDmaCallback+0x12c>
40004a4c:	e1520003 	cmp	r2, r3
40004a50:	0a000029 	beq	40004afc <CyFxUvcApplnDmaCallback+0xfc>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004a54:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004a58:	e59f10d0 	ldr	r1, [pc, #208]	; 40004b30 <CyFxUvcApplnDmaCallback+0x130>
40004a5c:	e245000c 	sub	r0, r5, #12
40004a60:	e3a0200c 	mov	r2, #12
40004a64:	ebfffb9a 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a68:	e555c00b 	ldrb	ip, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a6c:	e59f30b4 	ldr	r3, [pc, #180]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a70:	e38c1002 	orr	r1, ip, #2
40004a74:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a78:	e1d302ba 	ldrh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a7c:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a80:	e2802001 	add	r2, r0, #1
40004a84:	e1c322ba 	strh	r2, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a88:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a8c:	e1d3e2be 	ldrh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004a90:	e281100c 	add	r1, r1, #12
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a94:	e28ec001 	add	ip, lr, #1
40004a98:	e1a0080c 	lsl	r0, ip, #16
40004a9c:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004aa0:	e1a02801 	lsl	r2, r1, #16
40004aa4:	e1a01822 	lsr	r1, r2, #16
40004aa8:	e59f0084 	ldr	r0, [pc, #132]	; 40004b34 <CyFxUvcApplnDmaCallback+0x134>
40004aac:	e3a02000 	mov	r2, #0
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ab0:	e1c3e2be 	strh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004ab4:	eb0049bd 	bl	400171b0 <CyU3PDmaMultiChannelCommitBuffer>
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ab8:	e59f1068 	ldr	r1, [pc, #104]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
40004abc:	e2502000 	subs	r2, r0, #0
40004ac0:	0affffdd 	beq	40004a3c <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004ac4:	e1d1c2be 	ldrh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004ac8:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
            {
                prodCount--;
40004acc:	e24c0001 	sub	r0, ip, #1
40004ad0:	e1a0e800 	lsl	lr, r0, #16
40004ad4:	e1a0c82e 	lsr	ip, lr, #16
40004ad8:	e1c1c2be 	strh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004adc:	e1d1e2be 	ldrh	lr, [r1, #46]	; 0x2e
40004ae0:	e1d103b0 	ldrh	r0, [r1, #48]	; 0x30
40004ae4:	e59f104c 	ldr	r1, [pc, #76]	; 40004b38 <CyFxUvcApplnDmaCallback+0x138>
40004ae8:	e060c00e 	rsb	ip, r0, lr
40004aec:	e3a00004 	mov	r0, #4
40004af0:	e58dc000 	str	ip, [sp]
40004af4:	eb0038e0 	bl	40012e7c <CyU3PDebugPrint>
40004af8:	eaffffcf 	b	40004a3c <CyFxUvcApplnDmaCallback+0x3c>
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004afc:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004b00:	e59f1028 	ldr	r1, [pc, #40]	; 40004b30 <CyFxUvcApplnDmaCallback+0x130>
40004b04:	e24e000c 	sub	r0, lr, #12
40004b08:	e3a0200c 	mov	r2, #12
40004b0c:	ebfffb70 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004b10:	e59f3010 	ldr	r3, [pc, #16]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
40004b14:	e1d410b4 	ldrh	r1, [r4, #4]
40004b18:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004b1c:	e28c0001 	add	r0, ip, #1
40004b20:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004b24:	eaffffd8 	b	40004a8c <CyFxUvcApplnDmaCallback+0x8c>
40004b28:	40030f90 	.word	0x40030f90
40004b2c:	00003ff0 	.word	0x00003ff0
40004b30:	40030480 	.word	0x40030480
40004b34:	40032ee4 	.word	0x40032ee4
40004b38:	400110a8 	.word	0x400110a8

40004b3c <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004b3c:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004b40:	e92d4070 	push	{r4, r5, r6, lr}
40004b44:	e1a03001 	mov	r3, r1
40004b48:	e24dd010 	sub	sp, sp, #16
40004b4c:	e1a04000 	mov	r4, r0
    switch (evtype)
40004b50:	0a000036 	beq	40004c30 <CyFxUVCApplnUSBEventCB+0xf4>
40004b54:	e3500004 	cmp	r0, #4
40004b58:	0a00001f 	beq	40004bdc <CyFxUVCApplnUSBEventCB+0xa0>
40004b5c:	e3500001 	cmp	r0, #1
40004b60:	0a000001 	beq	40004b6c <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004b64:	e28dd010 	add	sp, sp, #16
40004b68:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b6c:	e59f5128 	ldr	r5, [pc, #296]	; 40004c9c <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004b70:	e1a02000 	mov	r2, r0
40004b74:	e59f1124 	ldr	r1, [pc, #292]	; 40004ca0 <CyFxUVCApplnUSBEventCB+0x164>
40004b78:	e3a00004 	mov	r0, #4
40004b7c:	eb0038be 	bl	40012e7c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004b80:	e1a00004 	mov	r0, r4
40004b84:	eb0059cc 	bl	4001b2bc <CyU3PGpifDisable>
            gpif_initialized = 0;
40004b88:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004b8c:	e1a01004 	mov	r1, r4
40004b90:	e1a00005 	mov	r0, r5
40004b94:	e3a02002 	mov	r2, #2
40004b98:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b9c:	e585c038 	str	ip, [r5, #56]	; 0x38
            isUsbConnected = CyFalse;
40004ba0:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004ba4:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ba8:	e58dc000 	str	ip, [sp]
40004bac:	eb001438 	bl	40009c94 <_txe_event_flags_get>
40004bb0:	e2504000 	subs	r4, r0, #0
40004bb4:	1affffea 	bne	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004bb8:	e3e01001 	mvn	r1, #1
40004bbc:	e3a02002 	mov	r2, #2
40004bc0:	e1a00005 	mov	r0, r5
40004bc4:	eb001462 	bl	40009d54 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004bc8:	e1a00005 	mov	r0, r5
40004bcc:	e3a01002 	mov	r1, #2
40004bd0:	e1a02004 	mov	r2, r4
40004bd4:	eb00145e 	bl	40009d54 <_txe_event_flags_set>
40004bd8:	eaffffe1 	b	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004bdc:	e59f50b8 	ldr	r5, [pc, #184]	; 40004c9c <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004be0:	e59f10bc 	ldr	r1, [pc, #188]	; 40004ca4 <CyFxUVCApplnUSBEventCB+0x168>
40004be4:	e1a02000 	mov	r2, r0
40004be8:	eb0038a3 	bl	40012e7c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004bec:	e3a00001 	mov	r0, #1
40004bf0:	eb0059b1 	bl	4001b2bc <CyU3PGpifDisable>
            gpif_initialized = 0;
40004bf4:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004bf8:	e3a01001 	mov	r1, #1
40004bfc:	e3a02002 	mov	r2, #2
40004c00:	e1a00005 	mov	r0, r5
40004c04:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c08:	e585c038 	str	ip, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c0c:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c10:	e58dc000 	str	ip, [sp]
40004c14:	eb00141e 	bl	40009c94 <_txe_event_flags_get>
40004c18:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c1c:	01a00005 	moveq	r0, r5
40004c20:	03e01001 	mvneq	r1, #1
40004c24:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c28:	1affffcd 	bne	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
40004c2c:	eaffffe4 	b	40004bc4 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c30:	e59f5064 	ldr	r5, [pc, #100]	; 40004c9c <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004c34:	e1a02000 	mov	r2, r0
40004c38:	e59f1068 	ldr	r1, [pc, #104]	; 40004ca8 <CyFxUVCApplnUSBEventCB+0x16c>
40004c3c:	e3a00004 	mov	r0, #4
40004c40:	eb00388d 	bl	40012e7c <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c44:	e3a00001 	mov	r0, #1
40004c48:	eb00599b 	bl	4001b2bc <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c4c:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c50:	e1a00005 	mov	r0, r5
40004c54:	e3a01001 	mov	r1, #1
40004c58:	e1a02004 	mov	r2, r4
40004c5c:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c60:	e5856038 	str	r6, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c64:	e5856034 	str	r6, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c68:	e58d6000 	str	r6, [sp]
40004c6c:	eb001408 	bl	40009c94 <_txe_event_flags_get>
40004c70:	e2506000 	subs	r6, r0, #0
40004c74:	1affffba 	bne	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c78:	e1a02004 	mov	r2, r4
40004c7c:	e1a00005 	mov	r0, r5
40004c80:	e3e01001 	mvn	r1, #1
40004c84:	eb001432 	bl	40009d54 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004c88:	e1a00005 	mov	r0, r5
40004c8c:	e1a01004 	mov	r1, r4
40004c90:	e1a02006 	mov	r2, r6
40004c94:	eb00142e 	bl	40009d54 <_txe_event_flags_set>
40004c98:	eaffffb1 	b	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
40004c9c:	40030f90 	.word	0x40030f90
40004ca0:	40011134 	.word	0x40011134
40004ca4:	400110f0 	.word	0x400110f0
40004ca8:	40011110 	.word	0x40011110

40004cac <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cac:	e59f32c0 	ldr	r3, [pc, #704]	; 40004f74 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004cb0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cb4:	e59fc2bc 	ldr	ip, [pc, #700]	; 40004f78 <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cb8:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cbc:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cc0:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cc4:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cc8:	e59f22ac 	ldr	r2, [pc, #684]	; 40004f7c <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ccc:	e59f02ac 	ldr	r0, [pc, #684]	; 40004f80 <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cd0:	e59f32ac 	ldr	r3, [pc, #684]	; 40004f84 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cd4:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cd8:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cdc:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004ce0:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004ce4:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004ce8:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cec:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cf0:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cf4:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cf8:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004cfc:	0a00004f 	beq	40004e40 <CyFxUVCApplnUSBSetupCB+0x194>
40004d00:	9a000006 	bls	40004d20 <CyFxUVCApplnUSBSetupCB+0x74>
40004d04:	e3540021 	cmp	r4, #33	; 0x21
40004d08:	0a00003a 	beq	40004df8 <CyFxUVCApplnUSBSetupCB+0x14c>
40004d0c:	e35400a1 	cmp	r4, #161	; 0xa1
40004d10:	0a000038 	beq	40004df8 <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004d14:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004d18:	e28dd010 	add	sp, sp, #16
40004d1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d20:	e3540001 	cmp	r4, #1
40004d24:	1afffffa 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004d28:	e358000b 	cmp	r8, #11
40004d2c:	1afffff8 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004d30:	e3550001 	cmp	r5, #1
40004d34:	1afffff6 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
40004d38:	e3570000 	cmp	r7, #0
40004d3c:	1afffff4 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d40:	e59f4240 	ldr	r4, [pc, #576]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004d44:	e59f1240 	ldr	r1, [pc, #576]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2e0>
40004d48:	e3a00004 	mov	r0, #4
40004d4c:	eb00384a 	bl	40012e7c <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004d50:	e1a00005 	mov	r0, r5
40004d54:	eb005958 	bl	4001b2bc <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d58:	e1a01005 	mov	r1, r5
40004d5c:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d60:	e5847038 	str	r7, [r4, #56]	; 0x38
                    streamingStarted = CyFalse;
40004d64:	e5847034 	str	r7, [r4, #52]	; 0x34
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d68:	eb0062e5 	bl	4001d904 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d6c:	e3a00064 	mov	r0, #100	; 0x64
40004d70:	eb0039b2 	bl	40013440 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004d74:	e59f0214 	ldr	r0, [pc, #532]	; 40004f90 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004d78:	eb004d46 	bl	40018298 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004d7c:	e3a00083 	mov	r0, #131	; 0x83
40004d80:	eb005ed9 	bl	4001c8ec <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004d84:	e1a01007 	mov	r1, r7
40004d88:	e3a00083 	mov	r0, #131	; 0x83
40004d8c:	eb0062dc 	bl	4001d904 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d90:	e3a00064 	mov	r0, #100	; 0x64
40004d94:	eb0039a9 	bl	40013440 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004d98:	e1a01007 	mov	r1, r7
40004d9c:	e1a02005 	mov	r2, r5
40004da0:	e3a00083 	mov	r0, #131	; 0x83
40004da4:	eb00639c 	bl	4001dc1c <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004da8:	eb005dd7 	bl	4001c50c <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004dac:	e5845040 	str	r5, [r4, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004db0:	e1a00004 	mov	r0, r4
40004db4:	e1a01005 	mov	r1, r5
40004db8:	e3a02002 	mov	r2, #2
40004dbc:	e28d300c 	add	r3, sp, #12
40004dc0:	e58d7000 	str	r7, [sp]
40004dc4:	eb0013b2 	bl	40009c94 <_txe_event_flags_get>
40004dc8:	e2506000 	subs	r6, r0, #0
40004dcc:	1a00002e 	bne	40004e8c <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004dd0:	e3e01001 	mvn	r1, #1
40004dd4:	e3a02002 	mov	r2, #2
40004dd8:	e1a00004 	mov	r0, r4
40004ddc:	eb0013dc 	bl	40009d54 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004de0:	e1a00004 	mov	r0, r4
40004de4:	e3a01002 	mov	r1, #2
40004de8:	e1a02006 	mov	r2, r6
40004dec:	eb0013d8 	bl	40009d54 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004df0:	e1a00005 	mov	r0, r5
40004df4:	eaffffc7 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004df8:	e21550ff 	ands	r5, r5, #255	; 0xff
40004dfc:	1a00001a 	bne	40004e6c <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004e00:	e1a02005 	mov	r2, r5
40004e04:	e59f017c 	ldr	r0, [pc, #380]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e08:	e3a01004 	mov	r1, #4
40004e0c:	eb0013d0 	bl	40009d54 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e10:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e14:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e18:	0affffbe 	beq	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004e1c:	e59f1170 	ldr	r1, [pc, #368]	; 40004f94 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004e20:	e3a00004 	mov	r0, #4
40004e24:	eb003814 	bl	40012e7c <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004e28:	e1a00005 	mov	r0, r5
40004e2c:	e3a01001 	mov	r1, #1
40004e30:	e1a02005 	mov	r2, r5
40004e34:	eb006378 	bl	4001dc1c <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e38:	e3a00001 	mov	r0, #1
40004e3c:	eaffffb5 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004e40:	e3580001 	cmp	r8, #1
40004e44:	1affffb2 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004e48:	e3550083 	cmp	r5, #131	; 0x83
40004e4c:	1affffb0 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004e50:	e59f7130 	ldr	r7, [pc, #304]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e54:	e5976034 	ldr	r6, [r7, #52]	; 0x34
40004e58:	e3560001 	cmp	r6, #1
40004e5c:	0a000015 	beq	40004eb8 <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004e60:	eb005da9 	bl	4001c50c <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004e64:	e1a00008 	mov	r0, r8
40004e68:	eaffffaa 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e6c:	e3550001 	cmp	r5, #1
40004e70:	1affffa7 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004e74:	e3a02000 	mov	r2, #0
40004e78:	e59f0108 	ldr	r0, [pc, #264]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e7c:	e3a01008 	mov	r1, #8
40004e80:	eb0013b3 	bl	40009d54 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e84:	e2502000 	subs	r2, r0, #0
40004e88:	1a000001 	bne	40004e94 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004e8c:	e1a00005 	mov	r0, r5
40004e90:	eaffffa0 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004e94:	e59f10fc 	ldr	r1, [pc, #252]	; 40004f98 <CyFxUVCApplnUSBSetupCB+0x2ec>
40004e98:	e3a00004 	mov	r0, #4
40004e9c:	eb0037f6 	bl	40012e7c <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ea0:	e3a00000 	mov	r0, #0
40004ea4:	e1a01005 	mov	r1, r5
40004ea8:	e1a02000 	mov	r2, r0
40004eac:	eb00635a 	bl	4001dc1c <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004eb0:	e1a00005 	mov	r0, r5
40004eb4:	eaffff97 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40004eb8:	e59f10dc 	ldr	r1, [pc, #220]	; 40004f9c <CyFxUVCApplnUSBSetupCB+0x2f0>
40004ebc:	e3a00004 	mov	r0, #4
40004ec0:	eb0037ed 	bl	40012e7c <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ec4:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40004ec8:	e1a00006 	mov	r0, r6
40004ecc:	eb0058fa 	bl	4001b2bc <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ed0:	e1a01006 	mov	r1, r6
40004ed4:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ed8:	e5878038 	str	r8, [r7, #56]	; 0x38
                        streamingStarted = CyFalse;
40004edc:	e5878034 	str	r8, [r7, #52]	; 0x34

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ee0:	eb006287 	bl	4001d904 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004ee4:	e3a00064 	mov	r0, #100	; 0x64
40004ee8:	eb003954 	bl	40013440 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004eec:	e59f009c 	ldr	r0, [pc, #156]	; 40004f90 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004ef0:	eb004ce8 	bl	40018298 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004ef4:	e1a00005 	mov	r0, r5
40004ef8:	eb005e7b 	bl	4001c8ec <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004efc:	e1a01008 	mov	r1, r8
40004f00:	e1a00005 	mov	r0, r5
40004f04:	eb00627e 	bl	4001d904 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004f08:	e3a00064 	mov	r0, #100	; 0x64
40004f0c:	eb00394b 	bl	40013440 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f10:	e1a01008 	mov	r1, r8
40004f14:	e1a02006 	mov	r2, r6
40004f18:	e1a00005 	mov	r0, r5
40004f1c:	eb00633e 	bl	4001dc1c <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
40004f20:	eb005d79 	bl	4001c50c <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40004f24:	e5876040 	str	r6, [r7, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f28:	e1a00007 	mov	r0, r7
40004f2c:	e1a01006 	mov	r1, r6
40004f30:	e1a02004 	mov	r2, r4
40004f34:	e28d300c 	add	r3, sp, #12
40004f38:	e58d8000 	str	r8, [sp]
40004f3c:	eb001354 	bl	40009c94 <_txe_event_flags_get>
40004f40:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f44:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f48:	1affff72 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f4c:	e3e01001 	mvn	r1, #1
40004f50:	e1a02004 	mov	r2, r4
40004f54:	e1a00007 	mov	r0, r7
40004f58:	eb00137d 	bl	40009d54 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f5c:	e1a00007 	mov	r0, r7
40004f60:	e1a01004 	mov	r1, r4
40004f64:	e1a02005 	mov	r2, r5
40004f68:	eb001379 	bl	40009d54 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f6c:	e1a00006 	mov	r0, r6
40004f70:	eaffff68 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
40004f74:	40032ec0 	.word	0x40032ec0
40004f78:	4003310c 	.word	0x4003310c
40004f7c:	40032fc0 	.word	0x40032fc0
40004f80:	40032ff0 	.word	0x40032ff0
40004f84:	40032ff2 	.word	0x40032ff2
40004f88:	40030f90 	.word	0x40030f90
40004f8c:	400111c0 	.word	0x400111c0
40004f90:	40032ee4 	.word	0x40032ee4
40004f94:	40011154 	.word	0x40011154
40004f98:	4001118c 	.word	0x4001118c
40004f9c:	400111d8 	.word	0x400111d8

40004fa0 <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fa0:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40004fa4:	e92d4010 	push	{r4, lr}
40004fa8:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fac:	18bd8010 	popne	{r4, pc}
    {
        hitFV = CyTrue;
40004fb0:	e59f10d0 	ldr	r1, [pc, #208]	; 40005088 <CyFxGpifCB+0xe8>
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fb4:	e5d13048 	ldrb	r3, [r1, #72]	; 0x48
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
40004fb8:	e5810044 	str	r0, [r1, #68]	; 0x44
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fbc:	e3530003 	cmp	r3, #3
40004fc0:	0a000028 	beq	40005068 <CyFxGpifCB+0xc8>
                /* Unexpected current state. Return error. */
                return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40004fc4:	e3530002 	cmp	r3, #2
40004fc8:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40004fcc:	e2420008 	sub	r0, r2, #8
40004fd0:	e350000a 	cmp	r0, #10
40004fd4:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40004fd8:	ea00001b 	b	4000504c <CyFxGpifCB+0xac>
40004fdc:	4000500c 	.word	0x4000500c
40004fe0:	4000504c 	.word	0x4000504c
40004fe4:	4000504c 	.word	0x4000504c
40004fe8:	40005008 	.word	0x40005008
40004fec:	4000504c 	.word	0x4000504c
40004ff0:	4000504c 	.word	0x4000504c
40004ff4:	4000504c 	.word	0x4000504c
40004ff8:	40005044 	.word	0x40005044
40004ffc:	4000504c 	.word	0x4000504c
40005000:	4000504c 	.word	0x4000504c
40005004:	40005008 	.word	0x40005008
40005008:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
4000500c:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40005010:	e59f0074 	ldr	r0, [pc, #116]	; 4000508c <CyFxGpifCB+0xec>
40005014:	eb004fd0 	bl	40018f5c <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40005018:	e2502000 	subs	r2, r0, #0
4000501c:	0afffff9 	beq	40005008 <CyFxGpifCB+0x68>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40005020:	e3a00004 	mov	r0, #4
40005024:	e59f1064 	ldr	r1, [pc, #100]	; 40005090 <CyFxGpifCB+0xf0>
40005028:	eb003793 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000502c:	e59f1060 	ldr	r1, [pc, #96]	; 40005094 <CyFxGpifCB+0xf4>
40005030:	e3a00004 	mov	r0, #4
40005034:	eb003790 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40005038:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000503c:	eb000e4c 	bl	40008974 <_tx_thread_sleep>
40005040:	eafffff9 	b	4000502c <CyFxGpifCB+0x8c>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
40005044:	e3a01001 	mov	r1, #1
40005048:	eafffff0 	b	40005010 <CyFxGpifCB+0x70>
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
4000504c:	e59f1044 	ldr	r1, [pc, #68]	; 40005098 <CyFxGpifCB+0xf8>
40005050:	e3a00001 	mov	r0, #1
40005054:	eb003788 	bl	40012e7c <CyU3PDebugPrint>
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005058:	e59f103c 	ldr	r1, [pc, #60]	; 4000509c <CyFxGpifCB+0xfc>
4000505c:	e3a00004 	mov	r0, #4
    }
}
40005060:	e8bd4010 	pop	{r4, lr}
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005064:	ea003784 	b	40012e7c <CyU3PDebugPrint>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
40005068:	e242300b 	sub	r3, r2, #11
4000506c:	e3530003 	cmp	r3, #3
40005070:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40005074:	eafffff4 	b	4000504c <CyFxGpifCB+0xac>
40005078:	4000500c 	.word	0x4000500c
4000507c:	40005044 	.word	0x40005044
40005080:	40005008 	.word	0x40005008
40005084:	40005008 	.word	0x40005008
40005088:	40030f90 	.word	0x40030f90
4000508c:	40032ee4 	.word	0x40032ee4
40005090:	40011214 	.word	0x40011214
40005094:	40011244 	.word	0x40011244
40005098:	400111fc 	.word	0x400111fc
4000509c:	40011258 	.word	0x40011258

400050a0 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050a0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050a4:	e59f4108 	ldr	r4, [pc, #264]	; 400051b4 <I2CCmdHandler+0x114>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050a8:	e24dd034 	sub	sp, sp, #52	; 0x34
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050ac:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050b0:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
400050b4:	e5d46054 	ldrb	r6, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050b8:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
400050bc:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
400050c0:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
400050c4:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
400050c8:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
400050cc:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
400050d0:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
400050d4:	e58d201c 	str	r2, [sp, #28]
400050d8:	e3a00004 	mov	r0, #4
400050dc:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
400050e0:	e59f10d0 	ldr	r1, [pc, #208]	; 400051b8 <I2CCmdHandler+0x118>
400050e4:	e1a02005 	mov	r2, r5
400050e8:	e88d4080 	stm	sp, {r7, lr}
400050ec:	e58d8008 	str	r8, [sp, #8]
400050f0:	e58da00c 	str	sl, [sp, #12]
400050f4:	e58d9010 	str	r9, [sp, #16]
400050f8:	e58db014 	str	fp, [sp, #20]
400050fc:	e58d6018 	str	r6, [sp, #24]
40005100:	e58dc020 	str	ip, [sp, #32]
40005104:	eb00375c 	bl	40012e7c <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
40005108:	e3550000 	cmp	r5, #0
4000510c:	0a000003 	beq	40005120 <I2CCmdHandler+0x80>
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
40005110:	e3550001 	cmp	r5, #1
40005114:	0a000016 	beq	40005174 <I2CCmdHandler+0xd4>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
40005118:	e28dd034 	add	sp, sp, #52	; 0x34
4000511c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005120:	e5d4c054 	ldrb	ip, [r4, #84]	; 0x54
40005124:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005128:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
4000512c:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005130:	e3a0e00f 	mov	lr, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005134:	e58dc000 	str	ip, [sp]
40005138:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
4000513c:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005140:	e3800001 	orr	r0, r0, #1
40005144:	e3811001 	orr	r1, r1, #1
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005148:	e5c4e057 	strb	lr, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
4000514c:	e58dc004 	str	ip, [sp, #4]
40005150:	ebfffc67 	bl	400042f4 <SensorRead2B>
			I2CCMDArry[9] = buf[0];
40005154:	e5dd002c 	ldrb	r0, [sp, #44]	; 0x2c
			if(CmdDataLen == 2){
40005158:	e3560002 	cmp	r6, #2

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
			I2CCMDArry[9] = buf[0];
4000515c:	e5c40055 	strb	r0, [r4, #85]	; 0x55
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
40005160:	05dd002d 	ldrbeq	r0, [sp, #45]	; 0x2d
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
40005164:	e3e03000 	mvn	r3, #0
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
			I2CCMDArry[9] = buf[0];
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
40005168:	05c40056 	strbeq	r0, [r4, #86]	; 0x56
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
4000516c:	e5c43057 	strb	r3, [r4, #87]	; 0x57
40005170:	eaffffe8 	b	40005118 <I2CCmdHandler+0x78>
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005174:	e5d4c054 	ldrb	ip, [r4, #84]	; 0x54
40005178:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
4000517c:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
40005180:	e5d45055 	ldrb	r5, [r4, #85]	; 0x55
			buf[1] = I2CCMDArry[10];
40005184:	e5d4e056 	ldrb	lr, [r4, #86]	; 0x56
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005188:	e58dc000 	str	ip, [sp]
4000518c:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
40005190:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005194:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
40005198:	e20110fe 	and	r1, r1, #254	; 0xfe
4000519c:	e20000fe 	and	r0, r0, #254	; 0xfe
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
400051a0:	e5cd502c 	strb	r5, [sp, #44]	; 0x2c
			buf[1] = I2CCMDArry[10];
400051a4:	e5cde02d 	strb	lr, [sp, #45]	; 0x2d
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
400051a8:	e58dc004 	str	ip, [sp, #4]
400051ac:	ebfffbf2 	bl	4000417c <SensorWrite2B>
400051b0:	eaffffd8 	b	40005118 <I2CCmdHandler+0x78>
400051b4:	40030f90 	.word	0x40030f90
400051b8:	4001126c 	.word	0x4001126c

400051bc <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
400051bc:	e92d4070 	push	{r4, r5, r6, lr}
400051c0:	e1a06001 	mov	r6, r1
400051c4:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051c8:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
400051cc:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400051d0:	e3e01000 	mvn	r1, #0
400051d4:	e590001c 	ldr	r0, [r0, #28]
400051d8:	eb001375 	bl	40009fb4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051dc:	e0650006 	rsb	r0, r5, r6
400051e0:	e270c000 	rsbs	ip, r0, #0
400051e4:	e0acc000 	adc	ip, ip, r0
400051e8:	e3a01020 	mov	r1, #32
400051ec:	e3a02027 	mov	r2, #39	; 0x27
400051f0:	e3a03030 	mov	r3, #48	; 0x30
400051f4:	e1a00004 	mov	r0, r4
400051f8:	e58dc000 	str	ip, [sp]
400051fc:	e58d5004 	str	r5, [sp, #4]
40005200:	ebfff8ac 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40005204:	e1560005 	cmp	r6, r5
40005208:	03a06002 	moveq	r6, #2
4000520c:	11a06005 	movne	r6, r5
40005210:	e1a00004 	mov	r0, r4
40005214:	e3a01021 	mov	r1, #33	; 0x21
40005218:	e3a02025 	mov	r2, #37	; 0x25
4000521c:	e3a03030 	mov	r3, #48	; 0x30
40005220:	e58d6000 	str	r6, [sp]
40005224:	e58d5004 	str	r5, [sp, #4]
40005228:	ebfff8a2 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000522c:	e594001c 	ldr	r0, [r4, #28]
}
40005230:	e28dd008 	add	sp, sp, #8
40005234:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005238:	ea001392 	b	4000a088 <_txe_mutex_put>

4000523c <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
4000523c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005240:	e3500023 	cmp	r0, #35	; 0x23
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005244:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005248:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000524c:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005250:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005254:	9a000024 	bls	400052ec <ControlHandle+0xb0>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
40005258:	e59f6eec 	ldr	r6, [pc, #3820]	; 4000614c <ControlHandle+0xf10>
4000525c:	e0872087 	add	r2, r7, r7, lsl #1
40005260:	e1a02182 	lsl	r2, r2, #3
40005264:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
40005268:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
4000526c:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
40005270:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005274:	e59f3ed4 	ldr	r3, [pc, #3796]	; 40006150 <ControlHandle+0xf14>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
40005278:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000527c:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005280:	e3550083 	cmp	r5, #131	; 0x83
40005284:	0a000023 	beq	40005318 <ControlHandle+0xdc>
40005288:	9a00002c 	bls	40005340 <ControlHandle+0x104>
4000528c:	e3550085 	cmp	r5, #133	; 0x85
40005290:	0a00008b 	beq	400054c4 <ControlHandle+0x288>
40005294:	3a000079 	bcc	40005480 <ControlHandle+0x244>
40005298:	e3550086 	cmp	r5, #134	; 0x86
4000529c:	0a0000c8 	beq	400055c4 <ControlHandle+0x388>
400052a0:	e3550087 	cmp	r5, #135	; 0x87
400052a4:	0a0000bc 	beq	4000559c <ControlHandle+0x360>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400052a8:	e3a00000 	mov	r0, #0
400052ac:	e3a01001 	mov	r1, #1
400052b0:	e1a02000 	mov	r2, r0
400052b4:	eb006258 	bl	4001dc1c <CyU3PUsbStall>
			  break;
400052b8:	e3a0c0ff 	mov	ip, #255	; 0xff
400052bc:	e1a0700c 	mov	r7, ip
400052c0:	e1a0e00c 	mov	lr, ip
400052c4:	e1a0400c 	mov	r4, ip
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
400052c8:	e59f1e84 	ldr	r1, [pc, #3716]	; 40006154 <ControlHandle+0xf18>
400052cc:	e1a02005 	mov	r2, r5
400052d0:	e1a03004 	mov	r3, r4
400052d4:	e3a00004 	mov	r0, #4
400052d8:	e58de000 	str	lr, [sp]
400052dc:	e98d1080 	stmib	sp, {r7, ip}
400052e0:	eb0036e5 	bl	40012e7c <CyU3PDebugPrint>
}
400052e4:	e28dd02c 	add	sp, sp, #44	; 0x2c
400052e8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052ec:	e59f6e58 	ldr	r6, [pc, #3672]	; 4000614c <ControlHandle+0xf10>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052f0:	e59f3e58 	ldr	r3, [pc, #3672]	; 40006150 <ControlHandle+0xf14>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052f4:	e0805080 	add	r5, r0, r0, lsl #1
400052f8:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052fc:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005300:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005304:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
40005308:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
4000530c:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
40005310:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005314:	1affffdb 	bne	40005288 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005318:	e3540023 	cmp	r4, #35	; 0x23
4000531c:	9a0000c6 	bls	4000563c <ControlHandle+0x400>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005320:	e0870087 	add	r0, r7, r7, lsl #1
40005324:	e0866180 	add	r6, r6, r0, lsl #3
40005328:	e59fae28 	ldr	sl, [pc, #3624]	; 40006158 <ControlHandle+0xf1c>
4000532c:	e5d6c005 	ldrb	ip, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005330:	e5d6e006 	ldrb	lr, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005334:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005338:	e5cae059 	strb	lr, [sl, #89]	; 0x59
4000533c:	ea00000b 	b	40005370 <ControlHandle+0x134>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005340:	e3550081 	cmp	r5, #129	; 0x81
40005344:	0a00006a 	beq	400054f4 <ControlHandle+0x2b8>
40005348:	9a000010 	bls	40005390 <ControlHandle+0x154>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
4000534c:	e3540023 	cmp	r4, #35	; 0x23
40005350:	9a0000ad 	bls	4000560c <ControlHandle+0x3d0>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005354:	e087a087 	add	sl, r7, r7, lsl #1
40005358:	e086618a 	add	r6, r6, sl, lsl #3
4000535c:	e5d64003 	ldrb	r4, [r6, #3]
40005360:	e59fadf0 	ldr	sl, [pc, #3568]	; 40006158 <ControlHandle+0xf1c>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005364:	e5d67004 	ldrb	r7, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005368:	e5ca4058 	strb	r4, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
4000536c:	e5ca7059 	strb	r7, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005370:	e1a00008 	mov	r0, r8
40005374:	e59f1de0 	ldr	r1, [pc, #3552]	; 4000615c <ControlHandle+0xf20>
40005378:	eb005ffc 	bl	4001d370 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
4000537c:	e3a0c0ff 	mov	ip, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005380:	e5da7058 	ldrb	r7, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40005384:	e1a0e00c 	mov	lr, ip
40005388:	e1a0400c 	mov	r4, ip
4000538c:	eaffffcd 	b	400052c8 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005390:	e3550001 	cmp	r5, #1
40005394:	1affffc3 	bne	400052a8 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40005398:	e59f1db8 	ldr	r1, [pc, #3512]	; 40006158 <ControlHandle+0xf1c>
4000539c:	e28d2026 	add	r2, sp, #38	; 0x26
400053a0:	e3a00020 	mov	r0, #32
400053a4:	e2811058 	add	r1, r1, #88	; 0x58
400053a8:	eb005d82 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
400053ac:	e2502000 	subs	r2, r0, #0
400053b0:	1a000341 	bne	400060bc <ControlHandle+0xe80>
			   {
				  Data0 = glEp0Buffer[0];
400053b4:	e59f3d9c 	ldr	r3, [pc, #3484]	; 40006158 <ControlHandle+0xf1c>
				  Data1 = glEp0Buffer[1];
400053b8:	e59f0d98 	ldr	r0, [pc, #3480]	; 40006158 <ControlHandle+0xf1c>
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053bc:	e59fed94 	ldr	lr, [pc, #3476]	; 40006158 <ControlHandle+0xf1c>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053c0:	e5d33058 	ldrb	r3, [r3, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
400053c4:	e5d0c059 	ldrb	ip, [r0, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053c8:	e5dee05a 	ldrb	lr, [lr, #90]	; 0x5a
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053cc:	e58d3014 	str	r3, [sp, #20]
				  Data1 = glEp0Buffer[1];
400053d0:	e58dc01c 	str	ip, [sp, #28]
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053d4:	e58de018 	str	lr, [sp, #24]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
400053d8:	e3540026 	cmp	r4, #38	; 0x26
400053dc:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
400053e0:	ea00031b 	b	40006054 <ControlHandle+0xe18>
400053e4:	40005fd8 	.word	0x40005fd8
400053e8:	40005f18 	.word	0x40005f18
400053ec:	40006054 	.word	0x40006054
400053f0:	40006054 	.word	0x40006054
400053f4:	40005eb4 	.word	0x40005eb4
400053f8:	40005d74 	.word	0x40005d74
400053fc:	40005cf8 	.word	0x40005cf8
40005400:	40006054 	.word	0x40006054
40005404:	40006054 	.word	0x40006054
40005408:	40006054 	.word	0x40006054
4000540c:	40006054 	.word	0x40006054
40005410:	40005c70 	.word	0x40005c70
40005414:	40006054 	.word	0x40006054
40005418:	40006054 	.word	0x40006054
4000541c:	40006054 	.word	0x40006054
40005420:	40006054 	.word	0x40006054
40005424:	40005bec 	.word	0x40005bec
40005428:	40006054 	.word	0x40006054
4000542c:	40006054 	.word	0x40006054
40005430:	40006054 	.word	0x40006054
40005434:	40006054 	.word	0x40006054
40005438:	40006054 	.word	0x40006054
4000543c:	40006054 	.word	0x40006054
40005440:	40006054 	.word	0x40006054
40005444:	40006054 	.word	0x40006054
40005448:	40005b34 	.word	0x40005b34
4000544c:	40005a9c 	.word	0x40005a9c
40005450:	40006054 	.word	0x40006054
40005454:	40005a8c 	.word	0x40005a8c
40005458:	40006054 	.word	0x40006054
4000545c:	40005a30 	.word	0x40005a30
40005460:	400059ac 	.word	0x400059ac
40005464:	40006054 	.word	0x40006054
40005468:	40006054 	.word	0x40006054
4000546c:	40006054 	.word	0x40006054
40005470:	40006054 	.word	0x40006054
40005474:	40005910 	.word	0x40005910
40005478:	400058f8 	.word	0x400058f8
4000547c:	40005894 	.word	0x40005894
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005480:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005484:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005488:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
4000548c:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005490:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005494:	859facbc 	ldrhi	sl, [pc, #3260]	; 40006158 <ControlHandle+0xf1c>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005498:	959facb8 	ldrls	sl, [pc, #3256]	; 40006158 <ControlHandle+0xf1c>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
4000549c:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
400054a0:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054a4:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400054a8:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
400054ac:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054b0:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400054b4:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
400054b8:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400054bc:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
400054c0:	eaffffaa 	b	40005370 <ControlHandle+0x134>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054c4:	e59f4c8c 	ldr	r4, [pc, #3212]	; 40006158 <ControlHandle+0xf1c>
			  glEp0Buffer[1] = 0;
400054c8:	e3a0c000 	mov	ip, #0
400054cc:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054d0:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054d4:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054d8:	e3a00002 	mov	r0, #2
400054dc:	eb005fa3 	bl	4001d370 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400054e0:	e3a0c0ff 	mov	ip, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054e4:	e5d47058 	ldrb	r7, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400054e8:	e1a0e00c 	mov	lr, ip
400054ec:	e1a0400c 	mov	r4, ip
400054f0:	eaffff74 	b	400052c8 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
400054f4:	e2441001 	sub	r1, r4, #1
400054f8:	e3510025 	cmp	r1, #37	; 0x25
400054fc:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40005500:	ea0000da 	b	40005870 <ControlHandle+0x634>
40005504:	4000582c 	.word	0x4000582c
40005508:	40005870 	.word	0x40005870
4000550c:	40005870 	.word	0x40005870
40005510:	40005870 	.word	0x40005870
40005514:	4000580c 	.word	0x4000580c
40005518:	40005870 	.word	0x40005870
4000551c:	40005870 	.word	0x40005870
40005520:	40005870 	.word	0x40005870
40005524:	40005870 	.word	0x40005870
40005528:	40005870 	.word	0x40005870
4000552c:	400057e8 	.word	0x400057e8
40005530:	40005870 	.word	0x40005870
40005534:	40005870 	.word	0x40005870
40005538:	40005870 	.word	0x40005870
4000553c:	40005870 	.word	0x40005870
40005540:	40005870 	.word	0x40005870
40005544:	40005870 	.word	0x40005870
40005548:	40005870 	.word	0x40005870
4000554c:	40005870 	.word	0x40005870
40005550:	40005870 	.word	0x40005870
40005554:	40005870 	.word	0x40005870
40005558:	40005870 	.word	0x40005870
4000555c:	40005870 	.word	0x40005870
40005560:	40005870 	.word	0x40005870
40005564:	400057ac 	.word	0x400057ac
40005568:	40005870 	.word	0x40005870
4000556c:	40005870 	.word	0x40005870
40005570:	40005790 	.word	0x40005790
40005574:	40005870 	.word	0x40005870
40005578:	40005870 	.word	0x40005870
4000557c:	400056f4 	.word	0x400056f4
40005580:	40005870 	.word	0x40005870
40005584:	40005870 	.word	0x40005870
40005588:	40005870 	.word	0x40005870
4000558c:	40005870 	.word	0x40005870
40005590:	400056b8 	.word	0x400056b8
40005594:	400056b8 	.word	0x400056b8
40005598:	400056b8 	.word	0x400056b8
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
4000559c:	e3540023 	cmp	r4, #35	; 0x23
400055a0:	9a000031 	bls	4000566c <ControlHandle+0x430>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400055a4:	e0877087 	add	r7, r7, r7, lsl #1
400055a8:	e0866187 	add	r6, r6, r7, lsl #3
400055ac:	e59faba4 	ldr	sl, [pc, #2980]	; 40006158 <ControlHandle+0xf1c>
400055b0:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055b4:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400055b8:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055bc:	e5ca1059 	strb	r1, [sl, #89]	; 0x59
400055c0:	eaffff6a 	b	40005370 <ControlHandle+0x134>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400055c4:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055c8:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055cc:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055d0:	80866187 	addhi	r6, r6, r7, lsl #3
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055d4:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055d8:	859f8b78 	ldrhi	r8, [pc, #2936]	; 40006158 <ControlHandle+0xf1c>
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055dc:	959f8b74 	ldrls	r8, [pc, #2932]	; 40006158 <ControlHandle+0xf1c>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055e0:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055e4:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055e8:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055ec:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055f0:	e59f1b64 	ldr	r1, [pc, #2916]	; 4000615c <ControlHandle+0xf20>
400055f4:	eb005f5d 	bl	4001d370 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400055f8:	e3a0c0ff 	mov	ip, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055fc:	e5d87058 	ldrb	r7, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005600:	e1a0e00c 	mov	lr, ip
40005604:	e1a0400c 	mov	r4, ip
40005608:	eaffff2e 	b	400052c8 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000560c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005610:	10844084 	addne	r4, r4, r4, lsl #1
40005614:	10866184 	addne	r6, r6, r4, lsl #3
40005618:	159fab38 	ldrne	sl, [pc, #2872]	; 40006158 <ControlHandle+0xf1c>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000561c:	059fab34 	ldreq	sl, [pc, #2868]	; 40006158 <ControlHandle+0xf1c>
40005620:	059f3b38 	ldreq	r3, [pc, #2872]	; 40006160 <ControlHandle+0xf24>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005624:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005628:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000562c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005630:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005634:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005638:	eaffff4c 	b	40005370 <ControlHandle+0x134>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
4000563c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005640:	10844084 	addne	r4, r4, r4, lsl #1
40005644:	10866184 	addne	r6, r6, r4, lsl #3
40005648:	159fab08 	ldrne	sl, [pc, #2824]	; 40006158 <ControlHandle+0xf1c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000564c:	059fab04 	ldreq	sl, [pc, #2820]	; 40006158 <ControlHandle+0xf1c>
40005650:	059f3b0c 	ldreq	r3, [pc, #2828]	; 40006164 <ControlHandle+0xf28>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005654:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005658:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000565c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005660:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005664:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005668:	eaffff40 	b	40005370 <ControlHandle+0x134>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000566c:	e354000b 	cmp	r4, #11
40005670:	0a000007 	beq	40005694 <ControlHandle+0x458>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005674:	e084a084 	add	sl, r4, r4, lsl #1
40005678:	e086618a 	add	r6, r6, sl, lsl #3
4000567c:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
40005680:	e59faad0 	ldr	sl, [pc, #2768]	; 40006158 <ControlHandle+0xf1c>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005684:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005688:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
4000568c:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
40005690:	eaffff36 	b	40005370 <ControlHandle+0x134>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005694:	e59faabc 	ldr	sl, [pc, #2748]	; 40006158 <ControlHandle+0xf1c>
40005698:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
4000569c:	e5d6e294 	ldrb	lr, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
400056a0:	e3a04000 	mov	r4, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056a4:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
400056a8:	e5ca4059 	strb	r4, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400056ac:	e5cae05a 	strb	lr, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
400056b0:	e5ca405b 	strb	r4, [sl, #91]	; 0x5b
400056b4:	eaffff2d 	b	40005370 <ControlHandle+0x134>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056b8:	e0877087 	add	r7, r7, r7, lsl #1
400056bc:	e0866187 	add	r6, r6, r7, lsl #3
400056c0:	e59fea90 	ldr	lr, [pc, #2704]	; 40006158 <ControlHandle+0xf1c>
400056c4:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056c8:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056cc:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056d0:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056d4:	e1a00008 	mov	r0, r8
400056d8:	e59f1a7c 	ldr	r1, [pc, #2684]	; 4000615c <ControlHandle+0xf20>
400056dc:	eb005f23 	bl	4001d370 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056e0:	e3a0e0ff 	mov	lr, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056e4:	e1a07004 	mov	r7, r4
400056e8:	e1a0c006 	mov	ip, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056ec:	e1a0400e 	mov	r4, lr
400056f0:	eafffef4 	b	400052c8 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400056f4:	e3580000 	cmp	r8, #0
400056f8:	0a00028c 	beq	40006130 <ControlHandle+0xef4>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400056fc:	e1a0e128 	lsr	lr, r8, #2
40005700:	e35e0000 	cmp	lr, #0
40005704:	13580003 	cmpne	r8, #3
40005708:	83a02000 	movhi	r2, #0
4000570c:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005710:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005714:	9a000289 	bls	40006140 <ControlHandle+0xf04>
40005718:	e59f1a3c 	ldr	r1, [pc, #2620]	; 4000615c <ControlHandle+0xf20>
4000571c:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005720:	e4904004 	ldr	r4, [r0], #4
40005724:	e282c001 	add	ip, r2, #1
40005728:	e20c20ff 	and	r2, ip, #255	; 0xff
4000572c:	e15e0002 	cmp	lr, r2
40005730:	e4814004 	str	r4, [r1], #4
40005734:	8afffff9 	bhi	40005720 <ControlHandle+0x4e4>
40005738:	e1580003 	cmp	r8, r3
4000573c:	159f0a14 	ldrne	r0, [pc, #2580]	; 40006158 <ControlHandle+0xf1c>
40005740:	0a00027a 	beq	40006130 <ControlHandle+0xef4>
40005744:	e080e003 	add	lr, r0, r3
40005748:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
4000574c:	e2836001 	add	r6, r3, #1
40005750:	e20630ff 	and	r3, r6, #255	; 0xff
40005754:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005758:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
4000575c:	8afffff8 	bhi	40005744 <ControlHandle+0x508>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005760:	e5d07057 	ldrb	r7, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005764:	e59f39ec 	ldr	r3, [pc, #2540]	; 40006158 <ControlHandle+0xf1c>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005768:	e35700ff 	cmp	r7, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
4000576c:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
40005770:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005774:	0affffd6 	beq	400056d4 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
40005778:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
4000577c:	e59f19e4 	ldr	r1, [pc, #2532]	; 40006168 <ControlHandle+0xf2c>
40005780:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
40005784:	e3a00004 	mov	r0, #4
40005788:	eb0035bb 	bl	40012e7c <CyU3PDebugPrint>
4000578c:	eaffffd0 	b	400056d4 <ControlHandle+0x498>
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
40005790:	e59f39c0 	ldr	r3, [pc, #2496]	; 40006158 <ControlHandle+0xf1c>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
40005794:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
40005798:	e3a02000 	mov	r2, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
4000579c:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057a0:	e5c32059 	strb	r2, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400057a4:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400057a8:	eaffffc9 	b	400056d4 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057ac:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
400057b0:	e59fc9a0 	ldr	ip, [pc, #2464]	; 40006158 <ControlHandle+0xf1c>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057b4:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
400057b8:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057bc:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057c0:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057c4:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400057c8:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
400057cc:	e59f1998 	ldr	r1, [pc, #2456]	; 4000616c <ControlHandle+0xf30>
400057d0:	e1a02004 	mov	r2, r4
400057d4:	e1a0300e 	mov	r3, lr
400057d8:	e3a00004 	mov	r0, #4
400057dc:	e88d4040 	stm	sp, {r6, lr}
400057e0:	eb0035a5 	bl	40012e7c <CyU3PDebugPrint>
					 break;
400057e4:	eaffffba 	b	400056d4 <ControlHandle+0x498>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
400057e8:	e59fc968 	ldr	ip, [pc, #2408]	; 40006158 <ControlHandle+0xf1c>
400057ec:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
400057f0:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
400057f4:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
400057f8:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057fc:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005800:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005804:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005808:	eaffffb1 	b	400056d4 <ControlHandle+0x498>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
4000580c:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
40005810:	e59f7940 	ldr	r7, [pc, #2368]	; 40006158 <ControlHandle+0xf1c>
					 glEp0Buffer[1] = 0;
40005814:	e3a06000 	mov	r6, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005818:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
4000581c:	e5c76059 	strb	r6, [r7, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005820:	e5c74058 	strb	r4, [r7, #88]	; 0x58
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005824:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005828:	eaffffa9 	b	400056d4 <ControlHandle+0x498>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
4000582c:	e5d631a6 	ldrb	r3, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005830:	e5d611a5 	ldrb	r1, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005834:	e3130002 	tst	r3, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005838:	01a01121 	lsreq	r1, r1, #2
4000583c:	01e01c81 	mvneq	r1, r1, lsl #25
					 }
					 glEp0Buffer[0] = Data1;
40005840:	e59f2910 	ldr	r2, [pc, #2320]	; 40006158 <ControlHandle+0xf1c>

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005844:	11a03303 	lslne	r3, r3, #6
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005848:	01e01ca1 	mvneq	r1, r1, lsr #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
4000584c:	12034040 	andne	r4, r3, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005850:	01813303 	orreq	r3, r1, r3, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005854:	11844121 	orrne	r4, r4, r1, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005858:	020340ff 	andeq	r4, r3, #255	; 0xff
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
4000585c:	e3a00000 	mov	r0, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
40005860:	e5c24058 	strb	r4, [r2, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005864:	e5c20059 	strb	r0, [r2, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005868:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
4000586c:	eaffff98 	b	400056d4 <ControlHandle+0x498>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005870:	e0841084 	add	r1, r4, r4, lsl #1
40005874:	e0863181 	add	r3, r6, r1, lsl #3
40005878:	e59f28d8 	ldr	r2, [pc, #2264]	; 40006158 <ControlHandle+0xf1c>
4000587c:	e5d3418d 	ldrb	r4, [r3, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
40005880:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005884:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005888:	e5c24058 	strb	r4, [r2, #88]	; 0x58
					 glEp0Buffer[1] = 0;
4000588c:	e5c20059 	strb	r0, [r2, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
40005890:	eaffff8f 	b	400056d4 <ControlHandle+0x498>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005894:	e59f48d4 	ldr	r4, [pc, #2260]	; 40006170 <ControlHandle+0xf34>
40005898:	e3e01000 	mvn	r1, #0
4000589c:	e594001c 	ldr	r0, [r4, #28]
400058a0:	eb0011c3 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
400058a4:	e3a01026 	mov	r1, #38	; 0x26
400058a8:	e59dc014 	ldr	ip, [sp, #20]
400058ac:	e3a0e000 	mov	lr, #0
400058b0:	e1a0300a 	mov	r3, sl
400058b4:	e1a02009 	mov	r2, r9
400058b8:	e1a00004 	mov	r0, r4
400058bc:	e88d5000 	stm	sp, {ip, lr}
400058c0:	ebfff6fc 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400058c4:	e594001c 	ldr	r0, [r4, #28]
400058c8:	eb0011ee 	bl	4000a088 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058cc:	e59d1014 	ldr	r1, [sp, #20]
400058d0:	e0873087 	add	r3, r7, r7, lsl #1
400058d4:	e0866183 	add	r6, r6, r3, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058d8:	e3a07001 	mov	r7, #1
							 break;
400058dc:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058e0:	e5c67010 	strb	r7, [r6, #16]
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058e4:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058e8:	e1a04001 	mov	r4, r1
400058ec:	e59de018 	ldr	lr, [sp, #24]
							 break;
400058f0:	e1a0700c 	mov	r7, ip
400058f4:	eafffe73 	b	400052c8 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID5: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400058f8:	e59f4870 	ldr	r4, [pc, #2160]	; 40006170 <ControlHandle+0xf34>
400058fc:	e3e01000 	mvn	r1, #0
40005900:	e594001c 	ldr	r0, [r4, #28]
40005904:	eb0011aa 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005908:	e3a01025 	mov	r1, #37	; 0x25
4000590c:	eaffffe5 	b	400058a8 <ControlHandle+0x66c>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005910:	e59f4858 	ldr	r4, [pc, #2136]	; 40006170 <ControlHandle+0xf34>
40005914:	e3e01000 	mvn	r1, #0
40005918:	e594001c 	ldr	r0, [r4, #28]
4000591c:	eb0011a4 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005920:	e59d2014 	ldr	r2, [sp, #20]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005924:	e3a01024 	mov	r1, #36	; 0x24
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005928:	e202807f 	and	r8, r2, #127	; 0x7f
4000592c:	e58d8018 	str	r8, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005930:	e59dc018 	ldr	ip, [sp, #24]
40005934:	e1a02009 	mov	r2, r9
40005938:	e1a0300a 	mov	r3, sl
4000593c:	e1a00004 	mov	r0, r4
40005940:	e58dc000 	str	ip, [sp]
40005944:	e3a0c000 	mov	ip, #0
40005948:	e58dc004 	str	ip, [sp, #4]
4000594c:	ebfff6d9 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
40005950:	e59de01c 	ldr	lr, [sp, #28]
40005954:	e3a08001 	mov	r8, #1
40005958:	e3a01024 	mov	r1, #36	; 0x24
4000595c:	e1a0200b 	mov	r2, fp
40005960:	e1a0300a 	mov	r3, sl
40005964:	e1a00004 	mov	r0, r4
40005968:	e58de000 	str	lr, [sp]
4000596c:	e58d8004 	str	r8, [sp, #4]
40005970:	ebfff6d0 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005974:	e594001c 	ldr	r0, [r4, #28]
40005978:	eb0011c2 	bl	4000a088 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
4000597c:	e59d4018 	ldr	r4, [sp, #24]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005980:	e59d001c 	ldr	r0, [sp, #28]
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005984:	e087c087 	add	ip, r7, r7, lsl #1
40005988:	e086618c 	add	r6, r6, ip, lsl #3
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
4000598c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005990:	e5c6400d 	strb	r4, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005994:	e5c6000e 	strb	r0, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005998:	e5c68010 	strb	r8, [r6, #16]
4000599c:	e59d4014 	ldr	r4, [sp, #20]
400059a0:	e1a0e000 	mov	lr, r0
							 break;
400059a4:	e1a0700c 	mov	r7, ip
400059a8:	eafffe46 	b	400052c8 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
400059ac:	e3580000 	cmp	r8, #0
400059b0:	0a000018 	beq	40005a18 <ControlHandle+0x7dc>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059b4:	e1a0e128 	lsr	lr, r8, #2
400059b8:	e35e0000 	cmp	lr, #0
400059bc:	13580003 	cmpne	r8, #3
400059c0:	83a02000 	movhi	r2, #0
400059c4:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400059c8:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059cc:	9a0001d9 	bls	40006138 <ControlHandle+0xefc>
400059d0:	e59f179c 	ldr	r1, [pc, #1948]	; 40006174 <ControlHandle+0xf38>
400059d4:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
400059d8:	e4904004 	ldr	r4, [r0], #4
400059dc:	e2822001 	add	r2, r2, #1
400059e0:	e20220ff 	and	r2, r2, #255	; 0xff
400059e4:	e15e0002 	cmp	lr, r2
400059e8:	e4814004 	str	r4, [r1], #4
400059ec:	8afffff9 	bhi	400059d8 <ControlHandle+0x79c>
400059f0:	e1580003 	cmp	r8, r3
400059f4:	0a000007 	beq	40005a18 <ControlHandle+0x7dc>
400059f8:	e59fe758 	ldr	lr, [pc, #1880]	; 40006158 <ControlHandle+0xf1c>
400059fc:	e08e7003 	add	r7, lr, r3
40005a00:	e5d71058 	ldrb	r1, [r7, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a04:	e2833001 	add	r3, r3, #1
40005a08:	e20330ff 	and	r3, r3, #255	; 0xff
40005a0c:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a10:	e5c7104c 	strb	r1, [r7, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a14:	8afffff7 	bhi	400059f8 <ControlHandle+0x7bc>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a18:	ebfffda0 	bl	400050a0 <I2CCmdHandler>
							 break;
40005a1c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a20:	e59d4014 	ldr	r4, [sp, #20]
40005a24:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005a28:	e1a0700c 	mov	r7, ip
40005a2c:	eafffe25 	b	400052c8 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a30:	e59f7738 	ldr	r7, [pc, #1848]	; 40006170 <ControlHandle+0xf34>
40005a34:	e3e01000 	mvn	r1, #0
40005a38:	e597001c 	ldr	r0, [r7, #28]
40005a3c:	eb00115c 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005a40:	e59d0014 	ldr	r0, [sp, #20]
40005a44:	e3a0e000 	mov	lr, #0
40005a48:	e270c001 	rsbs	ip, r0, #1
40005a4c:	33a0c000 	movcc	ip, #0
40005a50:	e3a0101e 	mov	r1, #30
40005a54:	e1a02009 	mov	r2, r9
40005a58:	e1a0300a 	mov	r3, sl
40005a5c:	e1a00007 	mov	r0, r7
40005a60:	e88d5000 	stm	sp, {ip, lr}
40005a64:	ebfff693 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005a68:	e597001c 	ldr	r0, [r7, #28]
40005a6c:	eb001185 	bl	4000a088 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005a70:	e3a04001 	mov	r4, #1
							 break;
40005a74:	e3a0c0ff 	mov	ip, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005a78:	e5c64460 	strb	r4, [r6, #1120]	; 0x460
40005a7c:	e59de018 	ldr	lr, [sp, #24]
40005a80:	e59d4014 	ldr	r4, [sp, #20]
							 break;
40005a84:	e1a0700c 	mov	r7, ip
40005a88:	eafffe0e 	b	400052c8 <ControlHandle+0x8c>
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005a8c:	e3a0c0ff 	mov	ip, #255	; 0xff
40005a90:	e1a04003 	mov	r4, r3
40005a94:	e1a0700c 	mov	r7, ip
40005a98:	eafffe0a 	b	400052c8 <ControlHandle+0x8c>
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a9c:	e59f76cc 	ldr	r7, [pc, #1740]	; 40006170 <ControlHandle+0xf34>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
40005aa0:	e5c633fd 	strb	r3, [r6, #1021]	; 0x3fd
							 CtrlParArry[CtrlID][16] = CyTrue;
40005aa4:	e3a03001 	mov	r3, #1
40005aa8:	e5c63400 	strb	r3, [r6, #1024]	; 0x400
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005aac:	e3e01000 	mvn	r1, #0
40005ab0:	e597001c 	ldr	r0, [r7, #28]
40005ab4:	eb00113e 	bl	40009fb4 <_txe_mutex_get>
							 if(WDRflag)
40005ab8:	e596c610 	ldr	ip, [r6, #1552]	; 0x610
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005abc:	e3a0101a 	mov	r1, #26
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005ac0:	e35c0000 	cmp	ip, #0
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005ac4:	159dc014 	ldrne	ip, [sp, #20]
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ac8:	059de014 	ldreq	lr, [sp, #20]
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005acc:	158dc000 	strne	ip, [sp]
40005ad0:	11a0200b 	movne	r2, fp
40005ad4:	13a0c000 	movne	ip, #0
40005ad8:	11a0300a 	movne	r3, sl
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005adc:	01a02009 	moveq	r2, r9
40005ae0:	01a0300a 	moveq	r3, sl
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005ae4:	e1a00007 	mov	r0, r7
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ae8:	e58dc004 	str	ip, [sp, #4]
40005aec:	058de000 	streq	lr, [sp]
40005af0:	ebfff670 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005af4:	e597001c 	ldr	r0, [r7, #28]
40005af8:	eb001162 	bl	4000a088 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "Exe level. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005afc:	e59f2654 	ldr	r2, [pc, #1620]	; 40006158 <ControlHandle+0xf1c>
40005b00:	e5963610 	ldr	r3, [r6, #1552]	; 0x610
40005b04:	e5d2c05a 	ldrb	ip, [r2, #90]	; 0x5a
40005b08:	e5d2e05b 	ldrb	lr, [r2, #91]	; 0x5b
40005b0c:	e59d4014 	ldr	r4, [sp, #20]
40005b10:	e59f1660 	ldr	r1, [pc, #1632]	; 40006178 <ControlHandle+0xf3c>
40005b14:	e3a00004 	mov	r0, #4
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005b18:	e1a02004 	mov	r2, r4
40005b1c:	e88d5000 	stm	sp, {ip, lr}
40005b20:	eb0034d5 	bl	40012e7c <CyU3PDebugPrint>

					 		 break;
40005b24:	e3a0c0ff 	mov	ip, #255	; 0xff
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005b28:	e59de018 	ldr	lr, [sp, #24]

					 		 break;
40005b2c:	e1a0700c 	mov	r7, ip
40005b30:	eafffde4 	b	400052c8 <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b34:	e59f4634 	ldr	r4, [pc, #1588]	; 40006170 <ControlHandle+0xf34>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005b38:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005b3c:	e59d3018 	ldr	r3, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b40:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b44:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005b48:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b4c:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b50:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b54:	eb001116 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005b58:	e59dc014 	ldr	ip, [sp, #20]
40005b5c:	e3a01019 	mov	r1, #25
40005b60:	e58dc000 	str	ip, [sp]
40005b64:	e1a00004 	mov	r0, r4
40005b68:	e3a0c000 	mov	ip, #0
40005b6c:	e1a02009 	mov	r2, r9
40005b70:	e1a0300a 	mov	r3, sl
40005b74:	e58dc004 	str	ip, [sp, #4]
40005b78:	ebfff64e 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005b7c:	e59d1014 	ldr	r1, [sp, #20]
40005b80:	e3510000 	cmp	r1, #0
40005b84:	0a000007 	beq	40005ba8 <ControlHandle+0x96c>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005b88:	e59de018 	ldr	lr, [sp, #24]
40005b8c:	e1a00004 	mov	r0, r4
40005b90:	e3a01019 	mov	r1, #25
40005b94:	e1a0200b 	mov	r2, fp
40005b98:	e1a0300a 	mov	r3, sl
40005b9c:	e58de000 	str	lr, [sp]
40005ba0:	e58d7004 	str	r7, [sp, #4]
40005ba4:	ebfff643 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ba8:	e594001c 	ldr	r0, [r4, #28]
40005bac:	eb001135 	bl	4000a088 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005bb0:	e59f15a0 	ldr	r1, [pc, #1440]	; 40006158 <ControlHandle+0xf1c>
40005bb4:	e59f059c 	ldr	r0, [pc, #1436]	; 40006158 <ControlHandle+0xf1c>
40005bb8:	e5d1405a 	ldrb	r4, [r1, #90]	; 0x5a
40005bbc:	e5d0705b 	ldrb	r7, [r0, #91]	; 0x5b
40005bc0:	e5d12058 	ldrb	r2, [r1, #88]	; 0x58
40005bc4:	e5d13059 	ldrb	r3, [r1, #89]	; 0x59
40005bc8:	e3a00004 	mov	r0, #4
40005bcc:	e59f15a8 	ldr	r1, [pc, #1448]	; 4000617c <ControlHandle+0xf40>
40005bd0:	e88d0090 	stm	sp, {r4, r7}
40005bd4:	eb0034a8 	bl	40012e7c <CyU3PDebugPrint>
							 break;
40005bd8:	e3a0c0ff 	mov	ip, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005bdc:	e59d4014 	ldr	r4, [sp, #20]
40005be0:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005be4:	e1a0700c 	mov	r7, ip
40005be8:	eafffdb6 	b	400052c8 <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005bec:	e2530000 	subs	r0, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005bf0:	e5c6030d 	strb	r0, [r6, #781]	; 0x30d
40005bf4:	e59f3550 	ldr	r3, [pc, #1360]	; 4000614c <ControlHandle+0xf10>
							 if(Data0 == 0){//set exposure mode auto
40005bf8:	1a000137 	bne	400060dc <ControlHandle+0xea0>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005bfc:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40005c00:	e3520002 	cmp	r2, #2
40005c04:	13520008 	cmpne	r2, #8
40005c08:	0a000003 	beq	40005c1c <ControlHandle+0x9e0>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005c0c:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005c10:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005c14:	13a02002 	movne	r2, #2
40005c18:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c1c:	e59f454c 	ldr	r4, [pc, #1356]	; 40006170 <ControlHandle+0xf34>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c20:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c24:	e3e01000 	mvn	r1, #0
40005c28:	e594001c 	ldr	r0, [r4, #28]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c2c:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c30:	eb0010df 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c34:	e59dc014 	ldr	ip, [sp, #20]
40005c38:	e3a0e000 	mov	lr, #0
40005c3c:	e3a01010 	mov	r1, #16
40005c40:	e1a02009 	mov	r2, r9
40005c44:	e1a0300a 	mov	r3, sl
40005c48:	e1a00004 	mov	r0, r4
40005c4c:	e88d5000 	stm	sp, {ip, lr}
40005c50:	ebfff618 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c54:	e594001c 	ldr	r0, [r4, #28]
40005c58:	eb00110a 	bl	4000a088 <_txe_mutex_put>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
40005c5c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c60:	e59d4014 	ldr	r4, [sp, #20]
40005c64:	e59de018 	ldr	lr, [sp, #24]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
40005c68:	e1a0700c 	mov	r7, ip
40005c6c:	eafffd95 	b	400052c8 <ControlHandle+0x8c>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c70:	e59f44f8 	ldr	r4, [pc, #1272]	; 40006170 <ControlHandle+0xf34>
40005c74:	e3e01000 	mvn	r1, #0
40005c78:	e594001c 	ldr	r0, [r4, #28]
40005c7c:	eb0010cc 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c80:	e59dc014 	ldr	ip, [sp, #20]
40005c84:	e3a0100b 	mov	r1, #11
40005c88:	e1a02009 	mov	r2, r9
40005c8c:	e1a0300a 	mov	r3, sl
40005c90:	e1a00004 	mov	r0, r4
40005c94:	e58dc000 	str	ip, [sp]
40005c98:	e3a0c000 	mov	ip, #0
40005c9c:	e58dc004 	str	ip, [sp, #4]
40005ca0:	ebfff604 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005ca4:	e59de018 	ldr	lr, [sp, #24]
40005ca8:	e3a07001 	mov	r7, #1
40005cac:	e1a0200b 	mov	r2, fp
40005cb0:	e3a0100b 	mov	r1, #11
40005cb4:	e1a0300a 	mov	r3, sl
40005cb8:	e1a00004 	mov	r0, r4
40005cbc:	e58de000 	str	lr, [sp]
40005cc0:	e58d7004 	str	r7, [sp, #4]
40005cc4:	ebfff5fb 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005cc8:	e594001c 	ldr	r0, [r4, #28]
40005ccc:	eb0010ed 	bl	4000a088 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005cd0:	e59d0014 	ldr	r0, [sp, #20]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005cd4:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005cd8:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cdc:	e5c67298 	strb	r7, [r6, #664]	; 0x298
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ce0:	e5c6048c 	strb	r0, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ce4:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ce8:	e1a04000 	mov	r4, r0
40005cec:	e1a0e002 	mov	lr, r2
							 break;
40005cf0:	e1a0700c 	mov	r7, ip
40005cf4:	eafffd73 	b	400052c8 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cf8:	e59f4470 	ldr	r4, [pc, #1136]	; 40006170 <ControlHandle+0xf34>
40005cfc:	e3e01000 	mvn	r1, #0
40005d00:	e594001c 	ldr	r0, [r4, #28]
40005d04:	eb0010aa 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005d08:	e59dc014 	ldr	ip, [sp, #20]
40005d0c:	e3a01006 	mov	r1, #6
40005d10:	e1a02009 	mov	r2, r9
40005d14:	e1a0300a 	mov	r3, sl
40005d18:	e1a00004 	mov	r0, r4
40005d1c:	e58dc000 	str	ip, [sp]
40005d20:	e3a0c000 	mov	ip, #0
40005d24:	e58dc004 	str	ip, [sp, #4]
40005d28:	ebfff5e2 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005d2c:	e59de014 	ldr	lr, [sp, #20]
40005d30:	e3a07001 	mov	r7, #1
40005d34:	e3a01006 	mov	r1, #6
40005d38:	e1a0200b 	mov	r2, fp
40005d3c:	e1a0300a 	mov	r3, sl
40005d40:	e1a00004 	mov	r0, r4
40005d44:	e58de000 	str	lr, [sp]
40005d48:	e58d7004 	str	r7, [sp, #4]
40005d4c:	ebfff5d9 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d50:	e594001c 	ldr	r0, [r4, #28]
40005d54:	eb0010cb 	bl	4000a088 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005d58:	e59d4014 	ldr	r4, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d5c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d60:	e5c67220 	strb	r7, [r6, #544]	; 0x220
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005d64:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d68:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005d6c:	e1a0700c 	mov	r7, ip
40005d70:	eafffd54 	b	400052c8 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d74:	e59f43f4 	ldr	r4, [pc, #1012]	; 40006170 <ControlHandle+0xf34>
40005d78:	e3e01000 	mvn	r1, #0
40005d7c:	e594001c 	ldr	r0, [r4, #28]
40005d80:	eb00108b 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005d84:	e59d3014 	ldr	r3, [sp, #20]
40005d88:	e3a0c000 	mov	ip, #0
40005d8c:	e2431080 	sub	r1, r3, #128	; 0x80
40005d90:	e20170ff 	and	r7, r1, #255	; 0xff
40005d94:	e1a02009 	mov	r2, r9
40005d98:	e3a01005 	mov	r1, #5
40005d9c:	e1a0300a 	mov	r3, sl
40005da0:	e1a00004 	mov	r0, r4
40005da4:	e88d1080 	stm	sp, {r7, ip}
40005da8:	ebfff5c2 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005dac:	e59d0014 	ldr	r0, [sp, #20]
40005db0:	e3a01005 	mov	r1, #5
40005db4:	e2407076 	sub	r7, r0, #118	; 0x76
40005db8:	e207c0ff 	and	ip, r7, #255	; 0xff
40005dbc:	e3a020dc 	mov	r2, #220	; 0xdc
40005dc0:	e3a07001 	mov	r7, #1
40005dc4:	e1a0300a 	mov	r3, sl
40005dc8:	e1a00004 	mov	r0, r4
40005dcc:	e58dc000 	str	ip, [sp]
40005dd0:	e58d7004 	str	r7, [sp, #4]
40005dd4:	ebfff5b7 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005dd8:	e59d2014 	ldr	r2, [sp, #20]
40005ddc:	e3a01005 	mov	r1, #5
40005de0:	e282307e 	add	r3, r2, #126	; 0x7e
40005de4:	e203c0ff 	and	ip, r3, #255	; 0xff
40005de8:	e3a020de 	mov	r2, #222	; 0xde
40005dec:	e1a0300a 	mov	r3, sl
40005df0:	e1a00004 	mov	r0, r4
40005df4:	e58dc000 	str	ip, [sp]
40005df8:	e3a0c002 	mov	ip, #2
40005dfc:	e58dc004 	str	ip, [sp, #4]
40005e00:	ebfff5ac 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005e04:	e59d1014 	ldr	r1, [sp, #20]
40005e08:	e3a0e003 	mov	lr, #3
40005e0c:	e2810072 	add	r0, r1, #114	; 0x72
40005e10:	e200c0ff 	and	ip, r0, #255	; 0xff
40005e14:	e3a01005 	mov	r1, #5
40005e18:	e3a020e0 	mov	r2, #224	; 0xe0
40005e1c:	e1a0300a 	mov	r3, sl
40005e20:	e1a00004 	mov	r0, r4
40005e24:	e88d5000 	stm	sp, {ip, lr}
40005e28:	ebfff5a2 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40005e2c:	e59d2014 	ldr	r2, [sp, #20]
40005e30:	e3a01005 	mov	r1, #5
40005e34:	e242306f 	sub	r3, r2, #111	; 0x6f
40005e38:	e203c0ff 	and	ip, r3, #255	; 0xff
40005e3c:	e3a020dd 	mov	r2, #221	; 0xdd
40005e40:	e1a0300a 	mov	r3, sl
40005e44:	e1a00004 	mov	r0, r4
40005e48:	e58dc000 	str	ip, [sp]
40005e4c:	e3a0c004 	mov	ip, #4
40005e50:	e58dc004 	str	ip, [sp, #4]
40005e54:	ebfff597 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40005e58:	e59f12f8 	ldr	r1, [pc, #760]	; 40006158 <ControlHandle+0xf1c>
40005e5c:	e3a0e005 	mov	lr, #5
40005e60:	e5d10058 	ldrb	r0, [r1, #88]	; 0x58
40005e64:	e1a0300a 	mov	r3, sl
40005e68:	e280207f 	add	r2, r0, #127	; 0x7f
40005e6c:	e202c0ff 	and	ip, r2, #255	; 0xff
40005e70:	e1a0100e 	mov	r1, lr
40005e74:	e1a0200b 	mov	r2, fp
40005e78:	e1a00004 	mov	r0, r4
40005e7c:	e88d5000 	stm	sp, {ip, lr}
40005e80:	ebfff58c 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e84:	e594001c 	ldr	r0, [r4, #28]
40005e88:	eb00107e 	bl	4000a088 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005e8c:	e59f42c4 	ldr	r4, [pc, #708]	; 40006158 <ControlHandle+0xf1c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005e90:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005e94:	e5d43058 	ldrb	r3, [r4, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e98:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005e9c:	e2431080 	sub	r1, r3, #128	; 0x80
40005ea0:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ea4:	e59d4014 	ldr	r4, [sp, #20]
40005ea8:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005eac:	e1a0700c 	mov	r7, ip
40005eb0:	eafffd04 	b	400052c8 <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005eb4:	e59f42b4 	ldr	r4, [pc, #692]	; 40006170 <ControlHandle+0xf34>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
40005eb8:	e2433001 	sub	r3, r3, #1
40005ebc:	e20370ff 	and	r7, r3, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005ec0:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ec4:	e3e01000 	mvn	r1, #0
40005ec8:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005ecc:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ed0:	eb001037 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ed4:	e3a0c000 	mov	ip, #0
40005ed8:	e3a01004 	mov	r1, #4
40005edc:	e1a02009 	mov	r2, r9
40005ee0:	e1a0300a 	mov	r3, sl
40005ee4:	e1a00004 	mov	r0, r4
40005ee8:	e88d1080 	stm	sp, {r7, ip}
40005eec:	ebfff571 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ef0:	e594001c 	ldr	r0, [r4, #28]
40005ef4:	eb001063 	bl	4000a088 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ef8:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005efc:	e3a01001 	mov	r1, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005f00:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f04:	e5c611f0 	strb	r1, [r6, #496]	; 0x1f0
40005f08:	e59d4014 	ldr	r4, [sp, #20]
40005f0c:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005f10:	e1a0700c 	mov	r7, ip
40005f14:	eafffceb 	b	400052c8 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f18:	e59f7250 	ldr	r7, [pc, #592]	; 40006170 <ControlHandle+0xf34>
40005f1c:	e3e01000 	mvn	r1, #0
40005f20:	e597001c 	ldr	r0, [r7, #28]
40005f24:	eb001022 	bl	40009fb4 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f28:	e59d0014 	ldr	r0, [sp, #20]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f2c:	e5d6c1a6 	ldrb	ip, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f30:	e3100080 	tst	r0, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f34:	01a02320 	lsreq	r2, r0, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f38:	11a02c80 	lslne	r2, r0, #25
40005f3c:	13ccc003 	bicne	ip, ip, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f40:	03ccc003 	biceq	ip, ip, #3
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f44:	e59f0224 	ldr	r0, [pc, #548]	; 40006170 <ControlHandle+0xf34>
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f48:	03822002 	orreq	r2, r2, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f4c:	118ccfa2 	orrne	ip, ip, r2, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f50:	0182c00c 	orreq	ip, r2, ip
							  }
							 Data1 |= ~0x03;
40005f54:	e1e04f0c 	mvn	r4, ip, lsl #30
40005f58:	e1e03f24 	mvn	r3, r4, lsr #30
							 Data1 &= 0xC7;
40005f5c:	e20310c7 	and	r1, r3, #199	; 0xc7
40005f60:	e58d101c 	str	r1, [sp, #28]
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f64:	e59d801c 	ldr	r8, [sp, #28]
40005f68:	e3a0c000 	mov	ip, #0
40005f6c:	e3a01001 	mov	r1, #1
40005f70:	e1a0200b 	mov	r2, fp
40005f74:	e1a0300a 	mov	r3, sl
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f78:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f7c:	e88d1100 	stm	sp, {r8, ip}
40005f80:	ebfff54c 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005f84:	e59d2014 	ldr	r2, [sp, #20]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f88:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005f8c:	e1a08102 	lsl	r8, r2, #2
40005f90:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f94:	e1a02009 	mov	r2, r9
40005f98:	e1a0300a 	mov	r3, sl
40005f9c:	e59f01cc 	ldr	r0, [pc, #460]	; 40006170 <ControlHandle+0xf34>
40005fa0:	e58d4004 	str	r4, [sp, #4]
40005fa4:	e58d8000 	str	r8, [sp]
40005fa8:	ebfff542 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005fac:	e597001c 	ldr	r0, [r7, #28]
40005fb0:	eb001034 	bl	4000a088 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005fb4:	e59d001c 	ldr	r0, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
40005fb8:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fbc:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005fc0:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
40005fc4:	e5c601a6 	strb	r0, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fc8:	e59d4014 	ldr	r4, [sp, #20]
40005fcc:	e59de018 	ldr	lr, [sp, #24]

							 break;
40005fd0:	e1a0700c 	mov	r7, ip
40005fd4:	eafffcbb 	b	400052c8 <ControlHandle+0x8c>
									Data0 = 0; //set to default.
					 			 }
					 		 }
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fd8:	e59f7190 	ldr	r7, [pc, #400]	; 40006170 <ControlHandle+0xf34>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005fdc:	e59f0168 	ldr	r0, [pc, #360]	; 4000614c <ControlHandle+0xf10>
							 if(Data0 == 3)
40005fe0:	e3530003 	cmp	r3, #3
								 WDRflag = CyTrue; //WDR mode
40005fe4:	03a02001 	moveq	r2, #1
							 else
								 WDRflag = CyFalse;
40005fe8:	13a02000 	movne	r2, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fec:	e3a0c001 	mov	ip, #1
40005ff0:	e5c6c190 	strb	ip, [r6, #400]	; 0x190
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005ff4:	e5802610 	str	r2, [r0, #1552]	; 0x610

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005ff8:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
									Data0 = 0; //set to default.
					 			 }
					 		 }
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ffc:	e3e01000 	mvn	r1, #0
40006000:	e597001c 	ldr	r0, [r7, #28]
40006004:	eb000fea 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006008:	e59de014 	ldr	lr, [sp, #20]
4000600c:	e3a04000 	mov	r4, #0
40006010:	e1a01004 	mov	r1, r4
40006014:	e1a02009 	mov	r2, r9
40006018:	e1a0300a 	mov	r3, sl
4000601c:	e1a00007 	mov	r0, r7
40006020:	e58de000 	str	lr, [sp]
40006024:	e58d4004 	str	r4, [sp, #4]
40006028:	ebfff522 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000602c:	e597001c 	ldr	r0, [r7, #28]
40006030:	eb001014 	bl	4000a088 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40006034:	e59f211c 	ldr	r2, [pc, #284]	; 40006158 <ControlHandle+0xf1c>
40006038:	e5963610 	ldr	r3, [r6, #1552]	; 0x610
4000603c:	e5d2c05a 	ldrb	ip, [r2, #90]	; 0x5a
40006040:	e5d2e05b 	ldrb	lr, [r2, #91]	; 0x5b
40006044:	e59d4014 	ldr	r4, [sp, #20]
40006048:	e3a00004 	mov	r0, #4
4000604c:	e59f112c 	ldr	r1, [pc, #300]	; 40006180 <ControlHandle+0xf44>
40006050:	eafffeb0 	b	40005b18 <ControlHandle+0x8dc>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006054:	e59f7114 	ldr	r7, [pc, #276]	; 40006170 <ControlHandle+0xf34>
40006058:	e3e01000 	mvn	r1, #0
4000605c:	e597001c 	ldr	r0, [r7, #28]
40006060:	eb000fd3 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006064:	e59dc014 	ldr	ip, [sp, #20]
40006068:	e1a01004 	mov	r1, r4
4000606c:	e1a02009 	mov	r2, r9
40006070:	e1a0300a 	mov	r3, sl
40006074:	e1a00007 	mov	r0, r7
40006078:	e58dc000 	str	ip, [sp]
4000607c:	e3a0c000 	mov	ip, #0
40006080:	e58dc004 	str	ip, [sp, #4]
40006084:	ebfff50b 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006088:	e597001c 	ldr	r0, [r7, #28]
4000608c:	eb000ffd 	bl	4000a088 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40006090:	e59d2014 	ldr	r2, [sp, #20]
40006094:	e0847084 	add	r7, r4, r4, lsl #1
40006098:	e0866187 	add	r6, r6, r7, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
4000609c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
400060a0:	e3a03001 	mov	r3, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
400060a4:	e5c6218d 	strb	r2, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
400060a8:	e5c63190 	strb	r3, [r6, #400]	; 0x190
400060ac:	e1a04002 	mov	r4, r2
400060b0:	e59de018 	ldr	lr, [sp, #24]
							 break;
400060b4:	e1a0700c 	mov	r7, ip
400060b8:	eafffc82 	b	400052c8 <ControlHandle+0x8c>
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
400060bc:	e3a00004 	mov	r0, #4
400060c0:	e59f10bc 	ldr	r1, [pc, #188]	; 40006184 <ControlHandle+0xf48>
400060c4:	eb00336c 	bl	40012e7c <CyU3PDebugPrint>
400060c8:	e3a0c0ff 	mov	ip, #255	; 0xff
400060cc:	e1a0700c 	mov	r7, ip
400060d0:	e1a0e00c 	mov	lr, ip
400060d4:	e1a0400c 	mov	r4, ip
400060d8:	eafffc7a 	b	400052c8 <ControlHandle+0x8c>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060dc:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400060e0:	e2407001 	sub	r7, r0, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060e4:	e3520004 	cmp	r2, #4
400060e8:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400060ec:	e20710ff 	and	r1, r7, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060f0:	0a000003 	beq	40006104 <ControlHandle+0xec8>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
400060f4:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
400060f8:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
400060fc:	13a02004 	movne	r2, #4
40006100:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
40006104:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006108:	959f3078 	ldrls	r3, [pc, #120]	; 40006188 <ControlHandle+0xf4c>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
4000610c:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006110:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006114:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006118:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
4000611c:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006120:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006124:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006128:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
4000612c:	eafffeba 	b	40005c1c <ControlHandle+0x9e0>
40006130:	e59f0020 	ldr	r0, [pc, #32]	; 40006158 <ControlHandle+0xf1c>
40006134:	eafffd89 	b	40005760 <ControlHandle+0x524>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40006138:	e3a03000 	mov	r3, #0
4000613c:	eafffe2d 	b	400059f8 <ControlHandle+0x7bc>
40006140:	e59f0010 	ldr	r0, [pc, #16]	; 40006158 <ControlHandle+0xf1c>
40006144:	e3a03000 	mov	r3, #0
40006148:	eafffd7d 	b	40005744 <ControlHandle+0x508>
4000614c:	40030000 	.word	0x40030000
40006150:	4003310c 	.word	0x4003310c
40006154:	400113ac 	.word	0x400113ac
40006158:	40030f90 	.word	0x40030f90
4000615c:	40030fe8 	.word	0x40030fe8
40006160:	00010001 	.word	0x00010001
40006164:	00ff00ff 	.word	0x00ff00ff
40006168:	400112b8 	.word	0x400112b8
4000616c:	400112f4 	.word	0x400112f4
40006170:	40032ec4 	.word	0x40032ec4
40006174:	40030fdc 	.word	0x40030fdc
40006178:	40011348 	.word	0x40011348
4000617c:	4001131c 	.word	0x4001131c
40006180:	40011364 	.word	0x40011364
40006184:	4001137c 	.word	0x4001137c
40006188:	40011028 	.word	0x40011028

4000618c <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
4000618c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006190:	e59fa960 	ldr	sl, [pc, #2400]	; 40006af8 <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006194:	e59f8960 	ldr	r8, [pc, #2400]	; 40006afc <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006198:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
4000619c:	e1a09080 	lsl	r9, r0, #1
400061a0:	e0892000 	add	r2, r9, r0
400061a4:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400061a8:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400061ac:	e24dd05c 	sub	sp, sp, #92	; 0x5c
400061b0:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400061b4:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
400061b8:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
400061bc:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400061c0:	0a000076 	beq	400063a0 <CTControlHandle+0x214>
400061c4:	9a000021 	bls	40006250 <CTControlHandle+0xc4>
400061c8:	e3550085 	cmp	r5, #133	; 0x85
400061cc:	0a000059 	beq	40006338 <CTControlHandle+0x1ac>
400061d0:	3a00004e 	bcc	40006310 <CTControlHandle+0x184>
400061d4:	e3550086 	cmp	r5, #134	; 0x86
400061d8:	0a000080 	beq	400063e0 <CTControlHandle+0x254>
400061dc:	e3550087 	cmp	r5, #135	; 0x87
400061e0:	0a000076 	beq	400063c0 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400061e4:	e3a00000 	mov	r0, #0
400061e8:	e3a01001 	mov	r1, #1
400061ec:	e1a02000 	mov	r2, r0
400061f0:	eb005e89 	bl	4001dc1c <CyU3PUsbStall>
400061f4:	e59f4904 	ldr	r4, [pc, #2308]	; 40006b00 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400061f8:	e1a02006 	mov	r2, r6
400061fc:	e3a00004 	mov	r0, #4
40006200:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006b04 <CTControlHandle+0x978>
40006204:	e5da3000 	ldrb	r3, [sl]
40006208:	eb00331b 	bl	40012e7c <CyU3PDebugPrint>
			  break;
4000620c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006210:	e1a0600c 	mov	r6, ip
40006214:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
40006218:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
4000621c:	e58dc008 	str	ip, [sp, #8]
40006220:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006b08 <CTControlHandle+0x97c>
40006224:	e3a0c0ff 	mov	ip, #255	; 0xff
40006228:	e1a02005 	mov	r2, r5
4000622c:	e1a03008 	mov	r3, r8
40006230:	e3a00004 	mov	r0, #4
40006234:	e88d4040 	stm	sp, {r6, lr}
40006238:	e58dc00c 	str	ip, [sp, #12]
4000623c:	e58de010 	str	lr, [sp, #16]
40006240:	e58d7014 	str	r7, [sp, #20]
40006244:	eb00330c 	bl	40012e7c <CyU3PDebugPrint>
}
40006248:	e28dd05c 	add	sp, sp, #92	; 0x5c
4000624c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006250:	e3550081 	cmp	r5, #129	; 0x81
40006254:	0a000042 	beq	40006364 <CTControlHandle+0x1d8>
40006258:	9a000011 	bls	400062a4 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
4000625c:	e59f489c 	ldr	r4, [pc, #2204]	; 40006b00 <CTControlHandle+0x974>
40006260:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006264:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006268:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
4000626c:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006270:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006274:	0a00002c 	beq	4000632c <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
40006278:	e3a0e000 	mov	lr, #0
4000627c:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
40006280:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006284:	e1a00007 	mov	r0, r7
40006288:	e59f187c 	ldr	r1, [pc, #2172]	; 40006b0c <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
4000628c:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
40006290:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006294:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006298:	eb005c34 	bl	4001d370 <CyU3PUsbSendEP0Data>
4000629c:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400062a0:	eaffffdc 	b	40006218 <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400062a4:	e3550001 	cmp	r5, #1
400062a8:	1affffcd 	bne	400061e4 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400062ac:	e59f484c 	ldr	r4, [pc, #2124]	; 40006b00 <CTControlHandle+0x974>
400062b0:	e28d2056 	add	r2, sp, #86	; 0x56
400062b4:	e3a00020 	mov	r0, #32
400062b8:	e2841058 	add	r1, r4, #88	; 0x58
400062bc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400062c0:	eb0059bc 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400062c4:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
400062c8:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
400062cc:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400062d0:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
400062d4:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
400062d8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400062dc:	e3520009 	cmp	r2, #9
400062e0:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400062e4:	ea000155 	b	40006840 <CTControlHandle+0x6b4>
400062e8:	400067fc 	.word	0x400067fc
400062ec:	40006840 	.word	0x40006840
400062f0:	4000650c 	.word	0x4000650c
400062f4:	40006840 	.word	0x40006840
400062f8:	40006840 	.word	0x40006840
400062fc:	40006840 	.word	0x40006840
40006300:	40006488 	.word	0x40006488
40006304:	40006840 	.word	0x40006840
40006308:	40006840 	.word	0x40006840
4000630c:	4000640c 	.word	0x4000640c
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006310:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006b00 <CTControlHandle+0x974>
40006314:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006318:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000631c:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006320:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006324:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006328:	1affffd2 	bne	40006278 <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000632c:	e3a01001 	mov	r1, #1
40006330:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
40006334:	eaffffd1 	b	40006280 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006338:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006b00 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
4000633c:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006340:	e3a00002 	mov	r0, #2
40006344:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006348:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
4000634c:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
40006350:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006354:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006358:	eb005c04 	bl	4001d370 <CyU3PUsbSendEP0Data>
4000635c:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006360:	eaffffac 	b	40006218 <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006364:	e59f4794 	ldr	r4, [pc, #1940]	; 40006b00 <CTControlHandle+0x974>
40006368:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
4000636c:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
40006370:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006374:	e1a00007 	mov	r0, r7
40006378:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
4000637c:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006380:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
40006384:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40006388:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
4000638c:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006390:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006394:	eb005bf5 	bl	4001d370 <CyU3PUsbSendEP0Data>
40006398:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
4000639c:	eaffff9d 	b	40006218 <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
400063a0:	e59f4758 	ldr	r4, [pc, #1880]	; 40006b00 <CTControlHandle+0x974>
400063a4:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400063a8:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063ac:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
400063b0:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
400063b4:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063b8:	1affffae 	bne	40006278 <CTControlHandle+0xec>
400063bc:	eaffffda 	b	4000632c <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400063c0:	e59f4738 	ldr	r4, [pc, #1848]	; 40006b00 <CTControlHandle+0x974>
400063c4:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400063c8:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063cc:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400063d0:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400063d4:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063d8:	1affffa6 	bne	40006278 <CTControlHandle+0xec>
400063dc:	eaffffd2 	b	4000632c <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
400063e0:	e59f4718 	ldr	r4, [pc, #1816]	; 40006b00 <CTControlHandle+0x974>
400063e4:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
400063e8:	e1a01004 	mov	r1, r4
400063ec:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400063f0:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400063f4:	e3a00001 	mov	r0, #1
400063f8:	eb005bdc 	bl	4001d370 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400063fc:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006400:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006404:	e3a07001 	mov	r7, #1
40006408:	eaffff82 	b	40006218 <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000640c:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006b10 <CTControlHandle+0x984>
40006410:	e3e01000 	mvn	r1, #0
40006414:	e596001c 	ldr	r0, [r6, #28]
40006418:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000641c:	eb000ee4 	bl	40009fb4 <_txe_mutex_get>
					  if(getData == 1)
40006420:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006424:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006428:	e35e0001 	cmp	lr, #1
4000642c:	0a0001a9 	beq	40006ad8 <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
40006430:	e35e00ff 	cmp	lr, #255	; 0xff
40006434:	0a00019e 	beq	40006ab4 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, STOP, dataIdx);
40006438:	e3a08000 	mov	r8, #0
4000643c:	e1a00006 	mov	r0, r6
40006440:	e3a01023 	mov	r1, #35	; 0x23
40006444:	e1a0200b 	mov	r2, fp
40006448:	e58d8000 	str	r8, [sp]
4000644c:	e58d8004 	str	r8, [sp, #4]
40006450:	ebfff418 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006454:	e596001c 	ldr	r0, [r6, #28]
40006458:	eb000f0a 	bl	4000a088 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
4000645c:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40006460:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006464:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
40006468:	e3a00004 	mov	r0, #4
4000646c:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006b14 <CTControlHandle+0x988>
40006470:	e1a02008 	mov	r2, r8
40006474:	e1a03006 	mov	r3, r6
40006478:	e58dc000 	str	ip, [sp]
4000647c:	eb00327e 	bl	40012e7c <CyU3PDebugPrint>
					  break;
40006480:	e3a0c0ff 	mov	ip, #255	; 0xff
40006484:	eaffff63 	b	40006218 <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
40006488:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
4000648c:	e3580001 	cmp	r8, #1
40006490:	13580008 	cmpne	r8, #8
40006494:	13a00000 	movne	r0, #0
40006498:	03a00001 	moveq	r0, #1
4000649c:	1a000180 	bne	40006aa4 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400064a0:	e59f8668 	ldr	r8, [pc, #1640]	; 40006b10 <CTControlHandle+0x984>
400064a4:	e3e01000 	mvn	r1, #0
400064a8:	e598001c 	ldr	r0, [r8, #28]
400064ac:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400064b0:	eb000ebf 	bl	40009fb4 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
400064b4:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400064b8:	e3a01022 	mov	r1, #34	; 0x22
400064bc:	e1a0200b 	mov	r2, fp
400064c0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400064c4:	e3a0c000 	mov	ip, #0
400064c8:	e1a00008 	mov	r0, r8
400064cc:	e88d1400 	stm	sp, {sl, ip}
400064d0:	ebfff3f8 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400064d4:	e598001c 	ldr	r0, [r8, #28]
400064d8:	eb000eea 	bl	4000a088 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400064dc:	e59f0618 	ldr	r0, [pc, #1560]	; 40006afc <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
400064e0:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400064e4:	e0891006 	add	r1, r9, r6
400064e8:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400064ec:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400064f0:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
400064f4:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400064f8:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
400064fc:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
40006500:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
40006504:	e3a0c0ff 	mov	ip, #255	; 0xff
40006508:	eaffff42 	b	40006218 <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
4000650c:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
40006510:	e3500001 	cmp	r0, #1
40006514:	13500004 	cmpne	r0, #4
40006518:	1a00015c 	bne	40006a90 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
4000651c:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006520:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006524:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
40006528:	e35200f9 	cmp	r2, #249	; 0xf9
4000652c:	8a000157 	bhi	40006a90 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006530:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006534:	e1a0c80a 	lsl	ip, sl, #16
40006538:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
4000653c:	e262a027 	rsb	sl, r2, #39	; 0x27
40006540:	e58da038 	str	sl, [sp, #56]	; 0x38
40006544:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006548:	e26210c8 	rsb	r1, r2, #200	; 0xc8
4000654c:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006550:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
40006554:	e1a01801 	lsl	r1, r1, #16
40006558:	e262e064 	rsb	lr, r2, #100	; 0x64
4000655c:	81a0182a 	lsrhi	r1, sl, #16
40006560:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006564:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006568:	e3520064 	cmp	r2, #100	; 0x64
4000656c:	e1a0080e 	lsl	r0, lr, #16
40006570:	81a0082c 	lsrhi	r0, ip, #16
40006574:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006578:	e242a014 	sub	sl, r2, #20
4000657c:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006580:	91a00820 	lsrls	r0, r0, #16
40006584:	e262a014 	rsb	sl, r2, #20
40006588:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000658c:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
40006590:	e1510000 	cmp	r1, r0
40006594:	31a0a001 	movcc	sl, r1
40006598:	21a0a000 	movcs	sl, r0
4000659c:	e1a0c80c 	lsl	ip, ip, #16
400065a0:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065a4:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400065a8:	91a0e82c 	lsrls	lr, ip, #16
400065ac:	e59fc564 	ldr	ip, [pc, #1380]	; 40006b18 <CTControlHandle+0x98c>
400065b0:	e58da020 	str	sl, [sp, #32]
400065b4:	e06ca001 	rsb	sl, ip, r1
400065b8:	81a0e82e 	lsrhi	lr, lr, #16
400065bc:	e27ac000 	rsbs	ip, sl, #0
400065c0:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065c4:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400065c8:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065cc:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400065d0:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065d4:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
400065d8:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065dc:	e242a00a 	sub	sl, r2, #10
400065e0:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400065e4:	e59da020 	ldr	sl, [sp, #32]
400065e8:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400065ec:	e15e000a 	cmp	lr, sl
400065f0:	31a0a00e 	movcc	sl, lr
400065f4:	e262c00a 	rsb	ip, r2, #10
400065f8:	e58dc040 	str	ip, [sp, #64]	; 0x40
400065fc:	e58da038 	str	sl, [sp, #56]	; 0x38
40006600:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006604:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006608:	e3520014 	cmp	r2, #20
4000660c:	91a0a82c 	lsrls	sl, ip, #16
40006610:	81a0a82a 	lsrhi	sl, sl, #16
40006614:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006618:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000661c:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006620:	33a0c001 	movcc	ip, #1
40006624:	e58da03c 	str	sl, [sp, #60]	; 0x3c
40006628:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000662c:	e1a0a801 	lsl	sl, r1, #16
40006630:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006634:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006638:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
4000663c:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
40006640:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006644:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
40006648:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
4000664c:	e58d104c 	str	r1, [sp, #76]	; 0x4c
40006650:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
40006654:	e1a00800 	lsl	r0, r0, #16
40006658:	e15c000a 	cmp	ip, sl
4000665c:	21a0c00a 	movcs	ip, sl
40006660:	e352000a 	cmp	r2, #10
40006664:	e59da020 	ldr	sl, [sp, #32]
40006668:	81a00821 	lsrhi	r0, r1, #16
4000666c:	91a00820 	lsrls	r0, r0, #16
40006670:	e58d0048 	str	r0, [sp, #72]	; 0x48
40006674:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006678:	e15e000a 	cmp	lr, sl
4000667c:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006680:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
40006684:	e58dc044 	str	ip, [sp, #68]	; 0x44
40006688:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000668c:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006690:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006694:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
40006698:	e59de048 	ldr	lr, [sp, #72]	; 0x48
4000669c:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
400066a0:	e262a002 	rsb	sl, r2, #2
400066a4:	e15e0000 	cmp	lr, r0
400066a8:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066ac:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400066b0:	e3520005 	cmp	r2, #5
400066b4:	e58da040 	str	sl, [sp, #64]	; 0x40
400066b8:	e1a01801 	lsl	r1, r1, #16
400066bc:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400066c0:	81a0182c 	lsrhi	r1, ip, #16
400066c4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400066c8:	e58de04c 	str	lr, [sp, #76]	; 0x4c
400066cc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400066d0:	e59de040 	ldr	lr, [sp, #64]	; 0x40
400066d4:	91a01821 	lsrls	r1, r1, #16
400066d8:	e15a000c 	cmp	sl, ip
400066dc:	e58d1020 	str	r1, [sp, #32]
400066e0:	33a00003 	movcc	r0, #3
400066e4:	e58d0038 	str	r0, [sp, #56]	; 0x38
400066e8:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400066ec:	e1a0080e 	lsl	r0, lr, #16
400066f0:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066f4:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400066f8:	e15e000a 	cmp	lr, sl
400066fc:	21a0e00a 	movcs	lr, sl
40006700:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006704:	e59da048 	ldr	sl, [sp, #72]	; 0x48
40006708:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000670c:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006710:	91a01820 	lsrls	r1, r0, #16
40006714:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40006718:	81a01821 	lsrhi	r1, r1, #16
4000671c:	e15a000c 	cmp	sl, ip
40006720:	33a00004 	movcc	r0, #4
40006724:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006728:	e2420001 	sub	r0, r2, #1
4000672c:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006730:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006734:	e59d0020 	ldr	r0, [sp, #32]
40006738:	e262c001 	rsb	ip, r2, #1
4000673c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006740:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006744:	e59da038 	ldr	sl, [sp, #56]	; 0x38
40006748:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
4000674c:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006750:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006754:	e3520001 	cmp	r2, #1
40006758:	91a02800 	lslls	r2, r0, #16
4000675c:	81a0280a 	lslhi	r2, sl, #16
40006760:	e151000e 	cmp	r1, lr
40006764:	31a0a001 	movcc	sl, r1
40006768:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
4000676c:	e151000e 	cmp	r1, lr
40006770:	21a0100c 	movcs	r1, ip
40006774:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006778:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000677c:	e59fa38c 	ldr	sl, [pc, #908]	; 40006b10 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006780:	91a02001 	movls	r2, r1
40006784:	83a02007 	movhi	r2, #7
40006788:	e2822001 	add	r2, r2, #1
4000678c:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006790:	e3e01000 	mvn	r1, #0
40006794:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006798:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000679c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400067a0:	eb000e03 	bl	40009fb4 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
400067a4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400067a8:	e3a01003 	mov	r1, #3
400067ac:	e1a0200b 	mov	r2, fp
400067b0:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400067b4:	e58dc000 	str	ip, [sp]
400067b8:	e1a0000a 	mov	r0, sl
400067bc:	e3a0c000 	mov	ip, #0
400067c0:	e58dc004 	str	ip, [sp, #4]
400067c4:	ebfff33b 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400067c8:	e59a001c 	ldr	r0, [sl, #28]
400067cc:	eb000e2d 	bl	4000a088 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400067d0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
400067d4:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
400067d8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400067dc:	e0891006 	add	r1, r9, r6
400067e0:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
400067e4:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400067e8:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
400067ec:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
400067f0:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
400067f4:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
400067f8:	eaffff3f 	b	400064fc <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
400067fc:	e0892006 	add	r2, r9, r6
40006800:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006804:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006808:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
4000680c:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006810:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006814:	e35e0007 	cmp	lr, #7
40006818:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
4000681c:	ea000097 	b	40006a80 <CTControlHandle+0x8f4>
40006820:	40006a14 	.word	0x40006a14
40006824:	40006978 	.word	0x40006978
40006828:	40006a80 	.word	0x40006a80
4000682c:	40006914 	.word	0x40006914
40006830:	40006a80 	.word	0x40006a80
40006834:	40006a80 	.word	0x40006a80
40006838:	40006a80 	.word	0x40006a80
4000683c:	40006874 	.word	0x40006874
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006840:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006844:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006848:	e0899006 	add	r9, r9, r6
4000684c:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006850:	e1a02006 	mov	r2, r6
40006854:	e3a00004 	mov	r0, #4
40006858:	e59f12bc 	ldr	r1, [pc, #700]	; 40006b1c <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
4000685c:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006860:	eb003185 	bl	40012e7c <CyU3PDebugPrint>
			  		 break;
40006864:	e3a0c0ff 	mov	ip, #255	; 0xff
40006868:	e1a0600c 	mov	r6, ip
4000686c:	e1a0800c 	mov	r8, ip
40006870:	eafffe68 	b	40006218 <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006874:	e59f6294 	ldr	r6, [pc, #660]	; 40006b10 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006878:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000687c:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006880:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006884:	e3e01000 	mvn	r1, #0
40006888:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000688c:	eb000dc8 	bl	40009fb4 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006890:	e1a0200b 	mov	r2, fp
40006894:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006898:	e3a01010 	mov	r1, #16
4000689c:	e1a00006 	mov	r0, r6
400068a0:	e58da000 	str	sl, [sp]
400068a4:	e58da004 	str	sl, [sp, #4]
400068a8:	ebfff302 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400068ac:	e596001c 	ldr	r0, [r6, #28]
400068b0:	eb000df4 	bl	4000a088 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068b4:	e3e01000 	mvn	r1, #0
400068b8:	e596001c 	ldr	r0, [r6, #28]
400068bc:	eb000dbc 	bl	40009fb4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400068c0:	e3a08001 	mov	r8, #1
400068c4:	e3a01020 	mov	r1, #32
400068c8:	e3a02027 	mov	r2, #39	; 0x27
400068cc:	e3a03030 	mov	r3, #48	; 0x30
400068d0:	e1a00006 	mov	r0, r6
400068d4:	e88d0500 	stm	sp, {r8, sl}
400068d8:	ebfff2f6 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400068dc:	e3a0c002 	mov	ip, #2
400068e0:	e3a01021 	mov	r1, #33	; 0x21
400068e4:	e3a02025 	mov	r2, #37	; 0x25
400068e8:	e3a03030 	mov	r3, #48	; 0x30
400068ec:	e1a00006 	mov	r0, r6
400068f0:	e58dc000 	str	ip, [sp]
400068f4:	e58da004 	str	sl, [sp, #4]
400068f8:	ebfff2ee 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400068fc:	e596001c 	ldr	r0, [r6, #28]
40006900:	eb000de0 	bl	4000a088 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006904:	e3a0c0ff 	mov	ip, #255	; 0xff
40006908:	e1a0600c 	mov	r6, ip
4000690c:	e3a08008 	mov	r8, #8
40006910:	eafffe40 	b	40006218 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006914:	e59f81f4 	ldr	r8, [pc, #500]	; 40006b10 <CTControlHandle+0x984>
40006918:	e3e01000 	mvn	r1, #0
4000691c:	e598001c 	ldr	r0, [r8, #28]
40006920:	eb000da3 	bl	40009fb4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006924:	e3a06000 	mov	r6, #0
40006928:	e3a01020 	mov	r1, #32
4000692c:	e3a02027 	mov	r2, #39	; 0x27
40006930:	e3a03030 	mov	r3, #48	; 0x30
40006934:	e1a00008 	mov	r0, r8
40006938:	e58d6000 	str	r6, [sp]
4000693c:	e58d6004 	str	r6, [sp, #4]
40006940:	ebfff2dc 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006944:	e3a01021 	mov	r1, #33	; 0x21
40006948:	e3a02025 	mov	r2, #37	; 0x25
4000694c:	e3a03030 	mov	r3, #48	; 0x30
40006950:	e1a00008 	mov	r0, r8
40006954:	e58d6000 	str	r6, [sp]
40006958:	e58d6004 	str	r6, [sp, #4]
4000695c:	ebfff2d5 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006960:	e598001c 	ldr	r0, [r8, #28]
40006964:	eb000dc7 	bl	4000a088 <_txe_mutex_put>
40006968:	e3a0c0ff 	mov	ip, #255	; 0xff
4000696c:	e1a0600c 	mov	r6, ip
40006970:	e3a08004 	mov	r8, #4
40006974:	eafffe27 	b	40006218 <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006978:	e59fa190 	ldr	sl, [pc, #400]	; 40006b10 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
4000697c:	e3a06000 	mov	r6, #0
40006980:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006984:	e3e01000 	mvn	r1, #0
40006988:	e59a001c 	ldr	r0, [sl, #28]
4000698c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006990:	eb000d87 	bl	40009fb4 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006994:	e1a0200b 	mov	r2, fp
40006998:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000699c:	e3a01010 	mov	r1, #16
400069a0:	e1a0000a 	mov	r0, sl
400069a4:	e58d6000 	str	r6, [sp]
400069a8:	e58d6004 	str	r6, [sp, #4]
400069ac:	ebfff2c1 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069b0:	e59a001c 	ldr	r0, [sl, #28]
400069b4:	eb000db3 	bl	4000a088 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069b8:	e3e01000 	mvn	r1, #0
400069bc:	e59a001c 	ldr	r0, [sl, #28]
400069c0:	eb000d7b 	bl	40009fb4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400069c4:	e3a01020 	mov	r1, #32
400069c8:	e3a02027 	mov	r2, #39	; 0x27
400069cc:	e3a03030 	mov	r3, #48	; 0x30
400069d0:	e1a0000a 	mov	r0, sl
400069d4:	e58d6000 	str	r6, [sp]
400069d8:	e58d6004 	str	r6, [sp, #4]
400069dc:	ebfff2b5 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400069e0:	e3a01021 	mov	r1, #33	; 0x21
400069e4:	e3a02025 	mov	r2, #37	; 0x25
400069e8:	e3a03030 	mov	r3, #48	; 0x30
400069ec:	e1a0000a 	mov	r0, sl
400069f0:	e58d6000 	str	r6, [sp]
400069f4:	e58d6004 	str	r6, [sp, #4]
400069f8:	ebfff2ae 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069fc:	e59a001c 	ldr	r0, [sl, #28]
40006a00:	eb000da0 	bl	4000a088 <_txe_mutex_put>
40006a04:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a08:	e1a0600c 	mov	r6, ip
40006a0c:	e3a08002 	mov	r8, #2
40006a10:	eafffe00 	b	40006218 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a14:	e59f60f4 	ldr	r6, [pc, #244]	; 40006b10 <CTControlHandle+0x984>
40006a18:	e3e01000 	mvn	r1, #0
40006a1c:	e596001c 	ldr	r0, [r6, #28]
40006a20:	eb000d63 	bl	40009fb4 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a24:	e3a08000 	mov	r8, #0
40006a28:	e3a0a001 	mov	sl, #1
40006a2c:	e3a01020 	mov	r1, #32
40006a30:	e3a02027 	mov	r2, #39	; 0x27
40006a34:	e3a03030 	mov	r3, #48	; 0x30
40006a38:	e1a00006 	mov	r0, r6
40006a3c:	e58d8004 	str	r8, [sp, #4]
40006a40:	e58da000 	str	sl, [sp]
40006a44:	ebfff29b 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a48:	e3a0c002 	mov	ip, #2
40006a4c:	e3a01021 	mov	r1, #33	; 0x21
40006a50:	e3a02025 	mov	r2, #37	; 0x25
40006a54:	e3a03030 	mov	r3, #48	; 0x30
40006a58:	e1a00006 	mov	r0, r6
40006a5c:	e58dc000 	str	ip, [sp]
40006a60:	e58d8004 	str	r8, [sp, #4]
40006a64:	ebfff293 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a68:	e596001c 	ldr	r0, [r6, #28]
40006a6c:	eb000d85 	bl	4000a088 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006a70:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a74:	e1a0600c 	mov	r6, ip
40006a78:	e1a0800a 	mov	r8, sl
40006a7c:	eafffde5 	b	40006218 <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006a80:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a84:	e1a08000 	mov	r8, r0
40006a88:	e1a0600c 	mov	r6, ip
40006a8c:	eafffde1 	b	40006218 <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006a90:	e3a00000 	mov	r0, #0
40006a94:	e3a01001 	mov	r1, #1
40006a98:	e1a02000 	mov	r2, r0
40006a9c:	eb005c5e 	bl	4001dc1c <CyU3PUsbStall>
40006aa0:	eafffe95 	b	400064fc <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006aa4:	e3a01001 	mov	r1, #1
40006aa8:	e1a02000 	mov	r2, r0
40006aac:	eb005c5a 	bl	4001dc1c <CyU3PUsbStall>
40006ab0:	eafffe91 	b	400064fc <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006ab4:	e3a0e008 	mov	lr, #8
40006ab8:	e3a0c000 	mov	ip, #0
40006abc:	e1a00006 	mov	r0, r6
40006ac0:	e3a01023 	mov	r1, #35	; 0x23
40006ac4:	e1a0200b 	mov	r2, fp
40006ac8:	e58de000 	str	lr, [sp]
40006acc:	e58dc004 	str	ip, [sp, #4]
40006ad0:	ebfff278 	bl	400034b8 <cmdSet>
40006ad4:	eafffe5e 	b	40006454 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006ad8:	e3a08004 	mov	r8, #4
40006adc:	e3a0e000 	mov	lr, #0
40006ae0:	e1a00006 	mov	r0, r6
40006ae4:	e3a01023 	mov	r1, #35	; 0x23
40006ae8:	e1a0200b 	mov	r2, fp
40006aec:	e88d4100 	stm	sp, {r8, lr}
40006af0:	ebfff270 	bl	400034b8 <cmdSet>
40006af4:	eafffe56 	b	40006454 <CTControlHandle+0x2c8>
40006af8:	4003310c 	.word	0x4003310c
40006afc:	40030000 	.word	0x40030000
40006b00:	40030f90 	.word	0x40030f90
40006b04:	40011448 	.word	0x40011448
40006b08:	4001146c 	.word	0x4001146c
40006b0c:	40030fe8 	.word	0x40030fe8
40006b10:	40032ec4 	.word	0x40032ec4
40006b14:	400113fc 	.word	0x400113fc
40006b18:	0000ffff 	.word	0x0000ffff
40006b1c:	40011424 	.word	0x40011424

40006b20 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006b20:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006b24:	e59f49dc 	ldr	r4, [pc, #2524]	; 40007508 <UVCAppEP0Thread_Entry+0x9e8>
40006b28:	e59f69dc 	ldr	r6, [pc, #2524]	; 4000750c <UVCAppEP0Thread_Entry+0x9ec>
40006b2c:	e59f89dc 	ldr	r8, [pc, #2524]	; 40007510 <UVCAppEP0Thread_Entry+0x9f0>
40006b30:	e59f99dc 	ldr	r9, [pc, #2524]	; 40007514 <UVCAppEP0Thread_Entry+0x9f4>
40006b34:	e59fa9dc 	ldr	sl, [pc, #2524]	; 40007518 <UVCAppEP0Thread_Entry+0x9f8>
40006b38:	e59f79dc 	ldr	r7, [pc, #2524]	; 4000751c <UVCAppEP0Thread_Entry+0x9fc>
40006b3c:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006b40:	e1a05004 	mov	r5, r4
40006b44:	e3e0c000 	mvn	ip, #0
40006b48:	e59f09b8 	ldr	r0, [pc, #2488]	; 40007508 <UVCAppEP0Thread_Entry+0x9e8>
40006b4c:	e3a0104c 	mov	r1, #76	; 0x4c
40006b50:	e3a02001 	mov	r2, #1
40006b54:	e28d3030 	add	r3, sp, #48	; 0x30
40006b58:	e58dc000 	str	ip, [sp]
40006b5c:	eb000c4c 	bl	40009c94 <_txe_event_flags_get>
40006b60:	e3500000 	cmp	r0, #0
40006b64:	1a000030 	bne	40006c2c <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006b68:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40006b6c:	e3530000 	cmp	r3, #0
40006b70:	0a000089 	beq	40006d9c <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006b74:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006b78:	e313000c 	tst	r3, #12
40006b7c:	1a000072 	bne	40006d4c <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006b80:	e3130004 	tst	r3, #4
40006b84:	0a00001c 	beq	40006bfc <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006b88:	e1dae0b0 	ldrh	lr, [sl]
40006b8c:	e1a0242e 	lsr	r2, lr, #8
40006b90:	e3520003 	cmp	r2, #3
40006b94:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006b98:	ea000012 	b	40006be8 <UVCAppEP0Thread_Entry+0xc8>
40006b9c:	40006be8 	.word	0x40006be8
40006ba0:	40006ccc 	.word	0x40006ccc
40006ba4:	40006bac 	.word	0x40006bac
40006ba8:	40006d08 	.word	0x40006d08
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006bac:	e1d920b0 	ldrh	r2, [r9]
40006bb0:	e3520c06 	cmp	r2, #1536	; 0x600
40006bb4:	0a0001d9 	beq	40007320 <UVCAppEP0Thread_Entry+0x800>
40006bb8:	8a0000cc 	bhi	40006ef0 <UVCAppEP0Thread_Entry+0x3d0>
40006bbc:	e3520c03 	cmp	r2, #768	; 0x300
40006bc0:	0a0001d2 	beq	40007310 <UVCAppEP0Thread_Entry+0x7f0>
40006bc4:	8a0001c9 	bhi	400072f0 <UVCAppEP0Thread_Entry+0x7d0>
40006bc8:	e3520c01 	cmp	r2, #256	; 0x100
40006bcc:	0a000168 	beq	40007174 <UVCAppEP0Thread_Entry+0x654>
40006bd0:	e3520c02 	cmp	r2, #512	; 0x200
40006bd4:	0a000162 	beq	40007164 <UVCAppEP0Thread_Entry+0x644>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006bd8:	e59f1940 	ldr	r1, [pc, #2368]	; 40007520 <UVCAppEP0Thread_Entry+0xa00>
40006bdc:	e5d83000 	ldrb	r3, [r8]
40006be0:	e3a00004 	mov	r0, #4
40006be4:	eb0030a4 	bl	40012e7c <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006be8:	e3a00000 	mov	r0, #0
40006bec:	e3a01001 	mov	r1, #1
40006bf0:	e1a02000 	mov	r2, r0
40006bf4:	eb005c08 	bl	4001dc1c <CyU3PUsbStall>
40006bf8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006bfc:	e3130008 	tst	r3, #8
40006c00:	0a000007 	beq	40006c24 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006c04:	e1da30b0 	ldrh	r3, [sl]
40006c08:	e3530001 	cmp	r3, #1
40006c0c:	0a000068 	beq	40006db4 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006c10:	e3a00000 	mov	r0, #0
40006c14:	e3a01001 	mov	r1, #1
40006c18:	e1a02000 	mov	r2, r0
40006c1c:	eb005bfe 	bl	4001dc1c <CyU3PUsbStall>
40006c20:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006c24:	e3130040 	tst	r3, #64	; 0x40
40006c28:	1a000001 	bne	40006c34 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006c2c:	eb000f01 	bl	4000a838 <_txe_thread_relinquish>
    }
40006c30:	eaffffc3 	b	40006b44 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006c34:	e3a00018 	mov	r0, #24
40006c38:	e28d102c 	add	r1, sp, #44	; 0x2c
40006c3c:	eb006fbf 	bl	40022b40 <CyU3PGpioSimpleGetValue>
            		for(;;); //pause
            	}
				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006c40:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
40006c44:	e3520000 	cmp	r2, #0
40006c48:	0a00006d 	beq	40006e04 <UVCAppEP0Thread_Entry+0x2e4>
40006c4c:	e5d63663 	ldrb	r3, [r6, #1635]	; 0x663
40006c50:	e3530000 	cmp	r3, #0
40006c54:	1afffff4 	bne	40006c2c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006c58:	e5972000 	ldr	r2, [r7]
40006c5c:	e3a0b002 	mov	fp, #2
40006c60:	e5c2b000 	strb	fp, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006c64:	e5971000 	ldr	r1, [r7]
40006c68:	e3a0b001 	mov	fp, #1
40006c6c:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006c70:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006c74:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006c78:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006c7c:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006c80:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006c84:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006c88:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006c8c:	e3a0c004 	mov	ip, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006c90:	e59f088c 	ldr	r0, [pc, #2188]	; 40007524 <UVCAppEP0Thread_Entry+0xa04>
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006c94:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
40006c98:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;
40006c9c:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;
40006ca0:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ca4:	eb003ff0 	bl	40016c6c <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006ca8:	e59f0874 	ldr	r0, [pc, #2164]	; 40007524 <UVCAppEP0Thread_Entry+0xa04>
40006cac:	e28d1020 	add	r1, sp, #32
40006cb0:	eb003f5f 	bl	40016a34 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006cb4:	e2502000 	subs	r2, r0, #0
40006cb8:	1a000167 	bne	4000725c <UVCAppEP0Thread_Entry+0x73c>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006cbc:	e59f3848 	ldr	r3, [pc, #2120]	; 4000750c <UVCAppEP0Thread_Entry+0x9ec>
40006cc0:	e5c3b663 	strb	fp, [r3, #1635]	; 0x663
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006cc4:	eb000edb 	bl	4000a838 <_txe_thread_relinquish>
40006cc8:	eaffff9d 	b	40006b44 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006ccc:	e1d920b0 	ldrh	r2, [r9]
40006cd0:	e3520c06 	cmp	r2, #1536	; 0x600
40006cd4:	0a0000d5 	beq	40007030 <UVCAppEP0Thread_Entry+0x510>
40006cd8:	8a00008f 	bhi	40006f1c <UVCAppEP0Thread_Entry+0x3fc>
40006cdc:	e3520c03 	cmp	r2, #768	; 0x300
40006ce0:	0a000117 	beq	40007144 <UVCAppEP0Thread_Entry+0x624>
40006ce4:	8a00010e 	bhi	40007124 <UVCAppEP0Thread_Entry+0x604>
40006ce8:	e3520c01 	cmp	r2, #256	; 0x100
40006cec:	0a000156 	beq	4000724c <UVCAppEP0Thread_Entry+0x72c>
40006cf0:	e3520c02 	cmp	r2, #512	; 0x200
40006cf4:	1affffb7 	bne	40006bd8 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006cf8:	e3a00001 	mov	r0, #1
40006cfc:	ebfffd22 	bl	4000618c <CTControlHandle>
40006d00:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d04:	eaffffbc 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006d08:	e1d920b0 	ldrh	r2, [r9]
40006d0c:	e3520c09 	cmp	r2, #2304	; 0x900
40006d10:	0a0001ee 	beq	400074d0 <UVCAppEP0Thread_Entry+0x9b0>
40006d14:	8a000088 	bhi	40006f3c <UVCAppEP0Thread_Entry+0x41c>
40006d18:	e3520b01 	cmp	r2, #1024	; 0x400
40006d1c:	0a0001ef 	beq	400074e0 <UVCAppEP0Thread_Entry+0x9c0>
40006d20:	8a000187 	bhi	40007344 <UVCAppEP0Thread_Entry+0x824>
40006d24:	e3520c02 	cmp	r2, #512	; 0x200
40006d28:	0a0001e4 	beq	400074c0 <UVCAppEP0Thread_Entry+0x9a0>
40006d2c:	e3520c03 	cmp	r2, #768	; 0x300
40006d30:	0a0001c3 	beq	40007444 <UVCAppEP0Thread_Entry+0x924>
40006d34:	e3520c01 	cmp	r2, #256	; 0x100
40006d38:	1affffaa 	bne	40006be8 <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006d3c:	e3a00010 	mov	r0, #16
40006d40:	ebfff93d 	bl	4000523c <ControlHandle>
40006d44:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d48:	eaffffab 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006d4c:	e59fb7d4 	ldr	fp, [pc, #2004]	; 40007528 <UVCAppEP0Thread_Entry+0xa08>
40006d50:	e1d9c0b0 	ldrh	ip, [r9]
40006d54:	e1da00b0 	ldrh	r0, [sl]
40006d58:	e59f17cc 	ldr	r1, [pc, #1996]	; 4000752c <UVCAppEP0Thread_Entry+0xa0c>
40006d5c:	e5dbe000 	ldrb	lr, [fp]
40006d60:	e5d8b000 	ldrb	fp, [r8]
40006d64:	e58d000c 	str	r0, [sp, #12]
40006d68:	e58dc008 	str	ip, [sp, #8]
40006d6c:	e1d1c0b0 	ldrh	ip, [r1]
40006d70:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40006d74:	e58db004 	str	fp, [sp, #4]
40006d78:	e3a00004 	mov	r0, #4
40006d7c:	e59f17ac 	ldr	r1, [pc, #1964]	; 40007530 <UVCAppEP0Thread_Entry+0xa10>
40006d80:	e3a0b000 	mov	fp, #0
40006d84:	e58de000 	str	lr, [sp]
40006d88:	e58dc010 	str	ip, [sp, #16]
40006d8c:	e58db014 	str	fp, [sp, #20]
40006d90:	eb003039 	bl	40012e7c <CyU3PDebugPrint>
40006d94:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d98:	eaffff78 	b	40006b80 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006d9c:	eb005777 	bl	4001cb80 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006da0:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006da4:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006da8:	13a00001 	movne	r0, #1
40006dac:	1585003c 	strne	r0, [r5, #60]	; 0x3c
40006db0:	eaffff6f 	b	40006b74 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006db4:	e1d920b0 	ldrh	r2, [r9]
40006db8:	e3520c03 	cmp	r2, #768	; 0x300
40006dbc:	0a000081 	beq	40006fc8 <UVCAppEP0Thread_Entry+0x4a8>
40006dc0:	8a000033 	bhi	40006e94 <UVCAppEP0Thread_Entry+0x374>
40006dc4:	e3520c01 	cmp	r2, #256	; 0x100
40006dc8:	0a00008b 	beq	40006ffc <UVCAppEP0Thread_Entry+0x4dc>
40006dcc:	e3520c02 	cmp	r2, #512	; 0x200
40006dd0:	1affff8e 	bne	40006c10 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006dd4:	e5d83000 	ldrb	r3, [r8]
40006dd8:	e3530081 	cmp	r3, #129	; 0x81
40006ddc:	0a00008b 	beq	40007010 <UVCAppEP0Thread_Entry+0x4f0>
40006de0:	8a000126 	bhi	40007280 <UVCAppEP0Thread_Entry+0x760>
40006de4:	e3530001 	cmp	r3, #1
40006de8:	0a000184 	beq	40007400 <UVCAppEP0Thread_Entry+0x8e0>
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
                            }
                        }
                        break;
                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006dec:	e3a00000 	mov	r0, #0
40006df0:	e3a01001 	mov	r1, #1
40006df4:	e1a02000 	mov	r2, r0
40006df8:	eb005b87 	bl	4001dc1c <CyU3PUsbStall>
40006dfc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006e00:	eaffff87 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006e04:	e5d6e663 	ldrb	lr, [r6, #1635]	; 0x663
40006e08:	e35e0000 	cmp	lr, #0
40006e0c:	0affff86 	beq	40006c2c <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006e10:	e5973000 	ldr	r3, [r7]
40006e14:	e3a0b002 	mov	fp, #2
40006e18:	e5c3b000 	strb	fp, [r3]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e1c:	e5971000 	ldr	r1, [r7]
40006e20:	e3a0b001 	mov	fp, #1
40006e24:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e28:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e2c:	e3a0eb01 	mov	lr, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006e30:	e5c02002 	strb	r2, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006e34:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e38:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006e3c:	e5ccb003 	strb	fp, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006e40:	e5973000 	ldr	r3, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006e44:	e1a0c002 	mov	ip, r2
40006e48:	e1cd22b8 	strh	r2, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e4c:	e59f06d0 	ldr	r0, [pc, #1744]	; 40007524 <UVCAppEP0Thread_Entry+0xa04>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e50:	e3a02004 	mov	r2, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006e54:	e58d3020 	str	r3, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e58:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e5c:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e60:	e58dc01c 	str	ip, [sp, #28]
40006e64:	eb003f80 	bl	40016c6c <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006e68:	e59f06b4 	ldr	r0, [pc, #1716]	; 40007524 <UVCAppEP0Thread_Entry+0xa04>
40006e6c:	e28d1020 	add	r1, sp, #32
40006e70:	eb003eef 	bl	40016a34 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006e74:	e59d301c 	ldr	r3, [sp, #28]
40006e78:	e2502000 	subs	r2, r0, #0
40006e7c:	1a0000c0 	bne	40007184 <UVCAppEP0Thread_Entry+0x664>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006e80:	e59f2684 	ldr	r2, [pc, #1668]	; 4000750c <UVCAppEP0Thread_Entry+0x9ec>
					stiflag = CyTrue;
40006e84:	e584b098 	str	fp, [r4, #152]	; 0x98
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006e88:	e5c23663 	strb	r3, [r2, #1635]	; 0x663
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006e8c:	eb000e69 	bl	4000a838 <_txe_thread_relinquish>
40006e90:	eaffff2b 	b	40006b44 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006e94:	e3520b01 	cmp	r2, #1024	; 0x400
40006e98:	0a000038 	beq	40006f80 <UVCAppEP0Thread_Entry+0x460>
40006e9c:	e3520c05 	cmp	r2, #1280	; 0x500
40006ea0:	1affff5a 	bne	40006c10 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40006ea4:	e5d82000 	ldrb	r2, [r8]
40006ea8:	e3520081 	cmp	r2, #129	; 0x81
40006eac:	0a000057 	beq	40007010 <UVCAppEP0Thread_Entry+0x4f0>
40006eb0:	8a00011e 	bhi	40007330 <UVCAppEP0Thread_Entry+0x810>
40006eb4:	e3520001 	cmp	r2, #1
40006eb8:	1affff54 	bne	40006c10 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006ebc:	e3a00020 	mov	r0, #32
40006ec0:	e59f166c 	ldr	r1, [pc, #1644]	; 40007534 <UVCAppEP0Thread_Entry+0xa14>
40006ec4:	e28d2036 	add	r2, sp, #54	; 0x36
40006ec8:	eb0056ba 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006ecc:	e3500000 	cmp	r0, #0
40006ed0:	1a000186 	bne	400074f0 <UVCAppEP0Thread_Entry+0x9d0>
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40006ed4:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
40006ed8:	e2800004 	add	r0, r0, #4
40006edc:	e59f1654 	ldr	r1, [pc, #1620]	; 40007538 <UVCAppEP0Thread_Entry+0xa18>
40006ee0:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
40006ee4:	eb002fe4 	bl	40012e7c <CyU3PDebugPrint>
40006ee8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006eec:	eaffff4c 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006ef0:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006ef4:	0a0000f5 	beq	400072d0 <UVCAppEP0Thread_Entry+0x7b0>
40006ef8:	8a0000ea 	bhi	400072a8 <UVCAppEP0Thread_Entry+0x788>
40006efc:	e3520c07 	cmp	r2, #1792	; 0x700
40006f00:	0a0000e4 	beq	40007298 <UVCAppEP0Thread_Entry+0x778>
40006f04:	e3520b02 	cmp	r2, #2048	; 0x800
40006f08:	1affff32 	bne	40006bd8 <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40006f0c:	e3a00007 	mov	r0, #7
40006f10:	ebfff8c9 	bl	4000523c <ControlHandle>
40006f14:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f18:	eaffff37 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006f1c:	e3520c09 	cmp	r2, #2304	; 0x900
40006f20:	0a000126 	beq	400073c0 <UVCAppEP0Thread_Entry+0x8a0>
40006f24:	8a00011b 	bhi	40007398 <UVCAppEP0Thread_Entry+0x878>
40006f28:	e3520c07 	cmp	r2, #1792	; 0x700
40006f2c:	0a00010d 	beq	40007368 <UVCAppEP0Thread_Entry+0x848>
40006f30:	e3520b02 	cmp	r2, #2048	; 0x800
40006f34:	1affff27 	bne	40006bd8 <UVCAppEP0Thread_Entry+0xb8>
40006f38:	eaffff2f 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f3c:	e3520c0f 	cmp	r2, #3840	; 0xf00
40006f40:	0a00015a 	beq	400074b0 <UVCAppEP0Thread_Entry+0x990>
40006f44:	8a00003d 	bhi	40007040 <UVCAppEP0Thread_Entry+0x520>
40006f48:	e3520c0b 	cmp	r2, #2816	; 0xb00
40006f4c:	0a000153 	beq	400074a0 <UVCAppEP0Thread_Entry+0x980>
40006f50:	e3520c0d 	cmp	r2, #3328	; 0xd00
40006f54:	0a00014d 	beq	40007490 <UVCAppEP0Thread_Entry+0x970>
40006f58:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006f5c:	1affff21 	bne	40006be8 <UVCAppEP0Thread_Entry+0xc8>
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x %d\r\n", wValue, bRequest, CamMode);
40006f60:	e5d83000 	ldrb	r3, [r8]
40006f64:	e3a0c000 	mov	ip, #0
40006f68:	e3a00004 	mov	r0, #4
40006f6c:	e59f15c8 	ldr	r1, [pc, #1480]	; 4000753c <UVCAppEP0Thread_Entry+0xa1c>
40006f70:	e58dc000 	str	ip, [sp]
40006f74:	eb002fc0 	bl	40012e7c <CyU3PDebugPrint>
40006f78:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f7c:	eaffff1e 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40006f80:	e5d8b000 	ldrb	fp, [r8]
40006f84:	e35b0081 	cmp	fp, #129	; 0x81
40006f88:	0a000013 	beq	40006fdc <UVCAppEP0Thread_Entry+0x4bc>
40006f8c:	8a000085 	bhi	400071a8 <UVCAppEP0Thread_Entry+0x688>
40006f90:	e35b0001 	cmp	fp, #1
40006f94:	1affff1d 	bne	40006c10 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006f98:	e28d2036 	add	r2, sp, #54	; 0x36
40006f9c:	e3a00020 	mov	r0, #32
40006fa0:	e59f158c 	ldr	r1, [pc, #1420]	; 40007534 <UVCAppEP0Thread_Entry+0xa14>
40006fa4:	eb005683 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006fa8:	e2502000 	subs	r2, r0, #0
40006fac:	1affff1b 	bne	40006c20 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40006fb0:	e59f0550 	ldr	r0, [pc, #1360]	; 40007508 <UVCAppEP0Thread_Entry+0x9e8>
40006fb4:	e1a0100b 	mov	r1, fp
40006fb8:	eb000b65 	bl	40009d54 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40006fbc:	e2502000 	subs	r2, r0, #0
40006fc0:	0affff16 	beq	40006c20 <UVCAppEP0Thread_Entry+0x100>
40006fc4:	ea000119 	b	40007430 <UVCAppEP0Thread_Entry+0x910>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40006fc8:	e5d82000 	ldrb	r2, [r8]
40006fcc:	e3520083 	cmp	r2, #131	; 0x83
40006fd0:	8a000098 	bhi	40007238 <UVCAppEP0Thread_Entry+0x718>
40006fd4:	e3520081 	cmp	r2, #129	; 0x81
40006fd8:	3a00007d 	bcc	400071d4 <UVCAppEP0Thread_Entry+0x6b4>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40006fdc:	e5d4b048 	ldrb	fp, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40006fe0:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40006fe4:	e35b0003 	cmp	fp, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40006fe8:	059f1550 	ldreq	r1, [pc, #1360]	; 40007540 <UVCAppEP0Thread_Entry+0xa20>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40006fec:	159f1550 	ldrne	r1, [pc, #1360]	; 40007544 <UVCAppEP0Thread_Entry+0xa24>
40006ff0:	eb0058de 	bl	4001d370 <CyU3PUsbSendEP0Data>
40006ff4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006ff8:	eaffff09 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40006ffc:	e5d82000 	ldrb	r2, [r8]
40007000:	e3520083 	cmp	r2, #131	; 0x83
40007004:	8a00002f 	bhi	400070c8 <UVCAppEP0Thread_Entry+0x5a8>
40007008:	e3520081 	cmp	r2, #129	; 0x81
4000700c:	3a000014 	bcc	40007064 <UVCAppEP0Thread_Entry+0x544>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007010:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007014:	e3a0001a 	mov	r0, #26
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007018:	e3520003 	cmp	r2, #3
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
4000701c:	059f1524 	ldreq	r1, [pc, #1316]	; 40007548 <UVCAppEP0Thread_Entry+0xa28>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
40007020:	159f1524 	ldrne	r1, [pc, #1316]	; 4000754c <UVCAppEP0Thread_Entry+0xa2c>
40007024:	eb0058d1 	bl	4001d370 <CyU3PUsbSendEP0Data>
40007028:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000702c:	eafffefc 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007030:	e3a00005 	mov	r0, #5
40007034:	ebfffc54 	bl	4000618c <CTControlHandle>
40007038:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000703c:	eafffeee 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007040:	e3520c11 	cmp	r2, #4352	; 0x1100
40007044:	0a0000e9 	beq	400073f0 <UVCAppEP0Thread_Entry+0x8d0>
40007048:	8a00002d 	bhi	40007104 <UVCAppEP0Thread_Entry+0x5e4>
4000704c:	e3520a01 	cmp	r2, #4096	; 0x1000
40007050:	1afffee4 	bne	40006be8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007054:	e3a0001f 	mov	r0, #31
40007058:	ebfff877 	bl	4000523c <ControlHandle>
4000705c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007060:	eafffee5 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007064:	e3520001 	cmp	r2, #1
40007068:	1affff5f 	bne	40006dec <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000706c:	e3a00020 	mov	r0, #32
40007070:	e59f14bc 	ldr	r1, [pc, #1212]	; 40007534 <UVCAppEP0Thread_Entry+0xa14>
40007074:	e28d2036 	add	r2, sp, #54	; 0x36
40007078:	eb00564e 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
4000707c:	e3500000 	cmp	r0, #0
40007080:	1afffee6 	bne	40006c20 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007084:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
40007088:	e3530003 	cmp	r3, #3
4000708c:	1afffee3 	bne	40006c20 <UVCAppEP0Thread_Entry+0x100>
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
40007090:	e5d4e07a 	ldrb	lr, [r4, #122]	; 0x7a
                            glProbeCtrl[3] = glCommitCtrl[3];
40007094:	e5d4c07b 	ldrb	ip, [r4, #123]	; 0x7b
                            glProbeCtrl[4] = glCommitCtrl[4];
40007098:	e5d4007c 	ldrb	r0, [r4, #124]	; 0x7c
                            glProbeCtrl[5] = glCommitCtrl[5];
4000709c:	e5d4107d 	ldrb	r1, [r4, #125]	; 0x7d
                            glProbeCtrl[6] = glCommitCtrl[6];
400070a0:	e5d4207e 	ldrb	r2, [r4, #126]	; 0x7e
                            glProbeCtrl[7] = glCommitCtrl[7];
400070a4:	e5d4b07f 	ldrb	fp, [r4, #127]	; 0x7f
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
400070a8:	e5c6e616 	strb	lr, [r6, #1558]	; 0x616
                            glProbeCtrl[3] = glCommitCtrl[3];
400070ac:	e5c6c617 	strb	ip, [r6, #1559]	; 0x617
                            glProbeCtrl[4] = glCommitCtrl[4];
400070b0:	e5c60618 	strb	r0, [r6, #1560]	; 0x618
                            glProbeCtrl[5] = glCommitCtrl[5];
400070b4:	e5c61619 	strb	r1, [r6, #1561]	; 0x619
                            glProbeCtrl[6] = glCommitCtrl[6];
400070b8:	e5c6261a 	strb	r2, [r6, #1562]	; 0x61a
                            glProbeCtrl[7] = glCommitCtrl[7];
400070bc:	e5c6b61b 	strb	fp, [r6, #1563]	; 0x61b
400070c0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070c4:	eafffed6 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400070c8:	e3520086 	cmp	r2, #134	; 0x86
400070cc:	0a000039 	beq	400071b8 <UVCAppEP0Thread_Entry+0x698>
400070d0:	e3520087 	cmp	r2, #135	; 0x87
400070d4:	0affffcd 	beq	40007010 <UVCAppEP0Thread_Entry+0x4f0>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400070d8:	e3520085 	cmp	r2, #133	; 0x85
400070dc:	1affff42 	bne	40006dec <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400070e0:	e59f1468 	ldr	r1, [pc, #1128]	; 40007550 <UVCAppEP0Thread_Entry+0xa30>
400070e4:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
400070e8:	e3a0301a 	mov	r3, #26
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
400070ec:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
400070f0:	e3a03000 	mov	r3, #0
400070f4:	e5c43059 	strb	r3, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400070f8:	eb00589c 	bl	4001d370 <CyU3PUsbSendEP0Data>
400070fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007100:	eafffec7 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007104:	e3520c12 	cmp	r2, #4608	; 0x1200
40007108:	0a0000dc 	beq	40007480 <UVCAppEP0Thread_Entry+0x960>
4000710c:	e3520c13 	cmp	r2, #4864	; 0x1300
40007110:	1afffeb4 	bne	40006be8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID6-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCGridCtlID6);
40007114:	e3a00026 	mov	r0, #38	; 0x26
40007118:	ebfff847 	bl	4000523c <ControlHandle>
4000711c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007120:	eafffeb5 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007124:	e3520b01 	cmp	r2, #1024	; 0x400
40007128:	0a000009 	beq	40007154 <UVCAppEP0Thread_Entry+0x634>
4000712c:	e3520c05 	cmp	r2, #1280	; 0x500
40007130:	1afffea8 	bne	40006bd8 <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
40007134:	e3a00004 	mov	r0, #4
40007138:	ebfffc13 	bl	4000618c <CTControlHandle>
4000713c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007140:	eafffead 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007144:	e3a00002 	mov	r0, #2
40007148:	ebfffc0f 	bl	4000618c <CTControlHandle>
4000714c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007150:	eafffea9 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
40007154:	e3a00003 	mov	r0, #3
40007158:	ebfffc0b 	bl	4000618c <CTControlHandle>
4000715c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007160:	eafffea5 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007164:	e3a00001 	mov	r0, #1
40007168:	ebfff833 	bl	4000523c <ControlHandle>
4000716c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007170:	eafffea1 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
40007174:	e3a00000 	mov	r0, #0
40007178:	ebfff82f 	bl	4000523c <ControlHandle>
4000717c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007180:	eafffe9d 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007184:	e3a00004 	mov	r0, #4
40007188:	e59f13c4 	ldr	r1, [pc, #964]	; 40007554 <UVCAppEP0Thread_Entry+0xa34>
4000718c:	eb002f3a 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007190:	e59f13c0 	ldr	r1, [pc, #960]	; 40007558 <UVCAppEP0Thread_Entry+0xa38>
40007194:	e3a00004 	mov	r0, #4
40007198:	eb002f37 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000719c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400071a0:	eb0005f3 	bl	40008974 <_tx_thread_sleep>
400071a4:	eafffff9 	b	40007190 <UVCAppEP0Thread_Entry+0x670>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
400071a8:	e35b0085 	cmp	fp, #133	; 0x85
400071ac:	0affffcb 	beq	400070e0 <UVCAppEP0Thread_Entry+0x5c0>
400071b0:	e35b0086 	cmp	fp, #134	; 0x86
400071b4:	1afffe95 	bne	40006c10 <UVCAppEP0Thread_Entry+0xf0>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071b8:	e1a00003 	mov	r0, r3

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400071bc:	e3a03003 	mov	r3, #3
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071c0:	e59f1388 	ldr	r1, [pc, #904]	; 40007550 <UVCAppEP0Thread_Entry+0xa30>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400071c4:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071c8:	eb005868 	bl	4001d370 <CyU3PUsbSendEP0Data>
400071cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071d0:	eafffe93 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400071d4:	e3520001 	cmp	r2, #1
400071d8:	1affff03 	bne	40006dec <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400071dc:	e3a00020 	mov	r0, #32
400071e0:	e59f134c 	ldr	r1, [pc, #844]	; 40007534 <UVCAppEP0Thread_Entry+0xa14>
400071e4:	e28d2036 	add	r2, sp, #54	; 0x36
400071e8:	eb0055f2 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400071ec:	e3500000 	cmp	r0, #0
400071f0:	1afffe8a 	bne	40006c20 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
400071f4:	e5d5b048 	ldrb	fp, [r5, #72]	; 0x48
400071f8:	e35b0003 	cmp	fp, #3
400071fc:	1afffe87 	bne	40006c20 <UVCAppEP0Thread_Entry+0x100>
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007200:	e5d5307e 	ldrb	r3, [r5, #126]	; 0x7e
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007204:	e5d5e079 	ldrb	lr, [r5, #121]	; 0x79
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007208:	e5d5c07a 	ldrb	ip, [r5, #122]	; 0x7a
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
4000720c:	e5d5007b 	ldrb	r0, [r5, #123]	; 0x7b
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007210:	e5d5107c 	ldrb	r1, [r5, #124]	; 0x7c
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007214:	e5d5207d 	ldrb	r2, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007218:	e5c63652 	strb	r3, [r6, #1618]	; 0x652
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
4000721c:	e5c6e64d 	strb	lr, [r6, #1613]	; 0x64d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007220:	e5c6c64e 	strb	ip, [r6, #1614]	; 0x64e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007224:	e5c6064f 	strb	r0, [r6, #1615]	; 0x64f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007228:	e5c61650 	strb	r1, [r6, #1616]	; 0x650
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
4000722c:	e5c62651 	strb	r2, [r6, #1617]	; 0x651
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007230:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007234:	eafffe7a 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007238:	e3520086 	cmp	r2, #134	; 0x86
4000723c:	0affffdd 	beq	400071b8 <UVCAppEP0Thread_Entry+0x698>
40007240:	e3520087 	cmp	r2, #135	; 0x87
40007244:	1affffa3 	bne	400070d8 <UVCAppEP0Thread_Entry+0x5b8>
40007248:	eaffff63 	b	40006fdc <UVCAppEP0Thread_Entry+0x4bc>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
4000724c:	e3a00000 	mov	r0, #0
40007250:	ebfffbcd 	bl	4000618c <CTControlHandle>
40007254:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007258:	eafffe67 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
4000725c:	e3a00004 	mov	r0, #4
40007260:	e59f12ec 	ldr	r1, [pc, #748]	; 40007554 <UVCAppEP0Thread_Entry+0xa34>
40007264:	eb002f04 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007268:	e59f12e8 	ldr	r1, [pc, #744]	; 40007558 <UVCAppEP0Thread_Entry+0xa38>
4000726c:	e3a00004 	mov	r0, #4
40007270:	eb002f01 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007274:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007278:	eb0005bd 	bl	40008974 <_tx_thread_sleep>
4000727c:	eafffff9 	b	40007268 <UVCAppEP0Thread_Entry+0x748>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40007280:	e3530085 	cmp	r3, #133	; 0x85
40007284:	0affff95 	beq	400070e0 <UVCAppEP0Thread_Entry+0x5c0>
40007288:	e3530086 	cmp	r3, #134	; 0x86
4000728c:	1afffed6 	bne	40006dec <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007290:	e3a00001 	mov	r0, #1
40007294:	eaffffc8 	b	400071bc <UVCAppEP0Thread_Entry+0x69c>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
40007298:	e3a00006 	mov	r0, #6
4000729c:	ebfff7e6 	bl	4000523c <ControlHandle>
400072a0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072a4:	eafffe54 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400072a8:	e3520c0d 	cmp	r2, #3328	; 0xd00
400072ac:	0a000007 	beq	400072d0 <UVCAppEP0Thread_Entry+0x7b0>
400072b0:	e3520c0e 	cmp	r2, #3584	; 0xe00
400072b4:	0a000009 	beq	400072e0 <UVCAppEP0Thread_Entry+0x7c0>
400072b8:	e3520b03 	cmp	r2, #3072	; 0xc00
400072bc:	1afffe45 	bne	40006bd8 <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
400072c0:	e3a0000b 	mov	r0, #11
400072c4:	ebfff7dc 	bl	4000523c <ControlHandle>
400072c8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072cc:	eafffe4a 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
400072d0:	e3a00009 	mov	r0, #9
400072d4:	ebfff7d8 	bl	4000523c <ControlHandle>
400072d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072dc:	eafffe46 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
400072e0:	e3a0000e 	mov	r0, #14
400072e4:	ebfff7d4 	bl	4000523c <ControlHandle>
400072e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072ec:	eafffe42 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400072f0:	e3520b01 	cmp	r2, #1024	; 0x400
400072f4:	0afffe40 	beq	40006bfc <UVCAppEP0Thread_Entry+0xdc>
400072f8:	e3520c05 	cmp	r2, #1280	; 0x500
400072fc:	1afffe35 	bne	40006bd8 <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
40007300:	e3a00004 	mov	r0, #4
40007304:	ebfff7cc 	bl	4000523c <ControlHandle>
40007308:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000730c:	eafffe3a 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
40007310:	e3a00002 	mov	r0, #2
40007314:	ebfff7c8 	bl	4000523c <ControlHandle>
40007318:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000731c:	eafffe36 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
40007320:	e3a00005 	mov	r0, #5
40007324:	ebfff7c4 	bl	4000523c <ControlHandle>
40007328:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000732c:	eafffe32 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40007330:	e3520085 	cmp	r2, #133	; 0x85
40007334:	0a00004e 	beq	40007474 <UVCAppEP0Thread_Entry+0x954>
40007338:	e3520086 	cmp	r2, #134	; 0x86
4000733c:	1afffe33 	bne	40006c10 <UVCAppEP0Thread_Entry+0xf0>
40007340:	eaffffd2 	b	40007290 <UVCAppEP0Thread_Entry+0x770>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007344:	e3520c06 	cmp	r2, #1536	; 0x600
40007348:	0a000045 	beq	40007464 <UVCAppEP0Thread_Entry+0x944>
4000734c:	8a000009 	bhi	40007378 <UVCAppEP0Thread_Entry+0x858>
40007350:	e3520c05 	cmp	r2, #1280	; 0x500
40007354:	1afffe23 	bne	40006be8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
40007358:	e3a00014 	mov	r0, #20
4000735c:	ebfff7b6 	bl	4000523c <ControlHandle>
40007360:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007364:	eafffe24 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
40007368:	e3a00006 	mov	r0, #6
4000736c:	ebfffb86 	bl	4000618c <CTControlHandle>
40007370:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007374:	eafffe20 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007378:	e3520c07 	cmp	r2, #1792	; 0x700
4000737c:	0a000034 	beq	40007454 <UVCAppEP0Thread_Entry+0x934>
40007380:	e3520b02 	cmp	r2, #2048	; 0x800
40007384:	1afffe17 	bne	40006be8 <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
40007388:	e3a00017 	mov	r0, #23
4000738c:	ebfff7aa 	bl	4000523c <ControlHandle>
40007390:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007394:	eafffe18 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007398:	e3520c0b 	cmp	r2, #2816	; 0xb00
4000739c:	0a00000f 	beq	400073e0 <UVCAppEP0Thread_Entry+0x8c0>
400073a0:	e3520b03 	cmp	r2, #3072	; 0xc00
400073a4:	0a000009 	beq	400073d0 <UVCAppEP0Thread_Entry+0x8b0>
400073a8:	e3520c0a 	cmp	r2, #2560	; 0xa00
400073ac:	1afffe09 	bne	40006bd8 <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
400073b0:	e3a00008 	mov	r0, #8
400073b4:	ebfffb74 	bl	4000618c <CTControlHandle>
400073b8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073bc:	eafffe0e 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
400073c0:	e3a00007 	mov	r0, #7
400073c4:	ebfffb70 	bl	4000618c <CTControlHandle>
400073c8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073cc:	eafffe0a 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
400073d0:	e3a0000a 	mov	r0, #10
400073d4:	ebfffb6c 	bl	4000618c <CTControlHandle>
400073d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073dc:	eafffe06 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
400073e0:	e3a00009 	mov	r0, #9
400073e4:	ebfffb68 	bl	4000618c <CTControlHandle>
400073e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073ec:	eafffe02 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
400073f0:	e3a00024 	mov	r0, #36	; 0x24
400073f4:	ebfff790 	bl	4000523c <ControlHandle>
400073f8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073fc:	eafffdfe 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007400:	e3a00020 	mov	r0, #32
40007404:	e59f1128 	ldr	r1, [pc, #296]	; 40007534 <UVCAppEP0Thread_Entry+0xa14>
40007408:	e28d2036 	add	r2, sp, #54	; 0x36
4000740c:	eb005569 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007410:	e3500000 	cmp	r0, #0
40007414:	1afffe01 	bne	40006c20 <UVCAppEP0Thread_Entry+0x100>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007418:	e3a02000 	mov	r2, #0
4000741c:	e59f00e4 	ldr	r0, [pc, #228]	; 40007508 <UVCAppEP0Thread_Entry+0x9e8>
40007420:	e3a01001 	mov	r1, #1
40007424:	eb000a4a 	bl	40009d54 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
40007428:	e2502000 	subs	r2, r0, #0
4000742c:	0afffdfb 	beq	40006c20 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007430:	e3a00004 	mov	r0, #4
40007434:	e59f1120 	ldr	r1, [pc, #288]	; 4000755c <UVCAppEP0Thread_Entry+0xa3c>
40007438:	eb002e8f 	bl	40012e7c <CyU3PDebugPrint>
4000743c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007440:	eafffdf7 	b	40006c24 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
40007444:	e3a00012 	mov	r0, #18
40007448:	ebfff77b 	bl	4000523c <ControlHandle>
4000744c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007450:	eafffde9 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
40007454:	e3a00016 	mov	r0, #22
40007458:	ebfff777 	bl	4000523c <ControlHandle>
4000745c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007460:	eafffde5 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
40007464:	e3a00015 	mov	r0, #21
40007468:	ebfff773 	bl	4000523c <ControlHandle>
4000746c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007470:	eafffde1 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007474:	e3a00002 	mov	r0, #2
40007478:	e59f10d0 	ldr	r1, [pc, #208]	; 40007550 <UVCAppEP0Thread_Entry+0xa30>
4000747c:	eaffff1a 	b	400070ec <UVCAppEP0Thread_Entry+0x5cc>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
40007480:	e3a00025 	mov	r0, #37	; 0x25
40007484:	ebfff76c 	bl	4000523c <ControlHandle>
40007488:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000748c:	eafffdda 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
40007490:	e3a0001c 	mov	r0, #28
40007494:	ebfff768 	bl	4000523c <ControlHandle>
40007498:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000749c:	eafffdd6 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x %d\r\n", wValue, bRequest, CamMode);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
400074a0:	e3a0001a 	mov	r0, #26
400074a4:	ebfff764 	bl	4000523c <ControlHandle>
400074a8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074ac:	eafffdd2 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
400074b0:	e3a0001e 	mov	r0, #30
400074b4:	ebfff760 	bl	4000523c <ControlHandle>
400074b8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074bc:	eafffdce 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
400074c0:	e3a00011 	mov	r0, #17
400074c4:	ebfff75c 	bl	4000523c <ControlHandle>
400074c8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074cc:	eafffdca 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
400074d0:	e3a00018 	mov	r0, #24
400074d4:	ebfff758 	bl	4000523c <ControlHandle>
400074d8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074dc:	eafffdc6 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
400074e0:	e3a00013 	mov	r0, #19
400074e4:	ebfff754 	bl	4000523c <ControlHandle>
400074e8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074ec:	eafffdc2 	b	40006bfc <UVCAppEP0Thread_Entry+0xdc>
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
400074f0:	e59f1068 	ldr	r1, [pc, #104]	; 40007560 <UVCAppEP0Thread_Entry+0xa40>
400074f4:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
400074f8:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
400074fc:	e3a00004 	mov	r0, #4
40007500:	eb002e5d 	bl	40012e7c <CyU3PDebugPrint>
40007504:	eafffdc1 	b	40006c10 <UVCAppEP0Thread_Entry+0xf0>
40007508:	40030f90 	.word	0x40030f90
4000750c:	40030000 	.word	0x40030000
40007510:	4003310c 	.word	0x4003310c
40007514:	40032fc0 	.word	0x40032fc0
40007518:	40032ff0 	.word	0x40032ff0
4000751c:	400330d0 	.word	0x400330d0
40007520:	4001154c 	.word	0x4001154c
40007524:	40033030 	.word	0x40033030
40007528:	40032ec0 	.word	0x40032ec0
4000752c:	40032ff2 	.word	0x40032ff2
40007530:	400114d0 	.word	0x400114d0
40007534:	40031008 	.word	0x40031008
40007538:	400115e0 	.word	0x400115e0
4000753c:	40011578 	.word	0x40011578
40007540:	4003064c 	.word	0x4003064c
40007544:	40030658 	.word	0x40030658
40007548:	40030614 	.word	0x40030614
4000754c:	40030630 	.word	0x40030630
40007550:	40030fe8 	.word	0x40030fe8
40007554:	40011630 	.word	0x40011630
40007558:	40011244 	.word	0x40011244
4000755c:	400115b8 	.word	0x400115b8
40007560:	40011608 	.word	0x40011608

40007564 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007564:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
40007568:	e59f42ac 	ldr	r4, [pc, #684]	; 4000781c <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000756c:	e59f22ac 	ldr	r2, [pc, #684]	; 40007820 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
40007570:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007574:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007578:	e592001c 	ldr	r0, [r2, #28]
4000757c:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007580:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
40007584:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
40007588:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000758c:	eb000a88 	bl	40009fb4 <_txe_mutex_get>
    if(Data1&0x80){
40007590:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007594:	12066001 	andne	r6, r6, #1
40007598:	11e06006 	mvnne	r6, r6
4000759c:	1206603b 	andne	r6, r6, #59	; 0x3b
400075a0:	11e06006 	mvnne	r6, r6
400075a4:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
400075a8:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400075ac:	e3a08000 	mov	r8, #0
400075b0:	e1a0200a 	mov	r2, sl
400075b4:	e1a03007 	mov	r3, r7
400075b8:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400075bc:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400075c0:	e59f0258 	ldr	r0, [pc, #600]	; 40007820 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400075c4:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400075c8:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400075cc:	e88d0140 	stm	sp, {r6, r8}
400075d0:	ebffefb8 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400075d4:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
400075d8:	e1a01009 	mov	r1, r9
400075dc:	e1a03007 	mov	r3, r7
400075e0:	e59f0238 	ldr	r0, [pc, #568]	; 40007820 <CamDefSet+0x2bc>
400075e4:	e88d0220 	stm	sp, {r5, r9}
400075e8:	ebffefb2 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400075ec:	e1a02006 	mov	r2, r6
400075f0:	e1a03005 	mov	r3, r5
400075f4:	e59f1228 	ldr	r1, [pc, #552]	; 40007824 <CamDefSet+0x2c0>
400075f8:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
400075fc:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
40007600:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007604:	eb002e1c 	bl	40012e7c <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007608:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
4000760c:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007610:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007614:	e3a01002 	mov	r1, #2
40007618:	e59f0200 	ldr	r0, [pc, #512]	; 40007820 <CamDefSet+0x2bc>
4000761c:	e58db000 	str	fp, [sp]
40007620:	e58d8004 	str	r8, [sp, #4]
40007624:	ebffefa3 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007628:	e1a0200b 	mov	r2, fp
4000762c:	e1a03005 	mov	r3, r5
40007630:	e59f11ec 	ldr	r1, [pc, #492]	; 40007824 <CamDefSet+0x2c0>
40007634:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
40007638:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000763c:	eb002e0e 	bl	40012e7c <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007640:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007644:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007648:	e247b080 	sub	fp, r7, #128	; 0x80
4000764c:	e20b10ff 	and	r1, fp, #255	; 0xff
40007650:	e58d1014 	str	r1, [sp, #20]
40007654:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007658:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
4000765c:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007660:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007664:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007668:	e3a01005 	mov	r1, #5
4000766c:	e3a020df 	mov	r2, #223	; 0xdf
40007670:	e59f01a8 	ldr	r0, [pc, #424]	; 40007820 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007674:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007678:	e58dc000 	str	ip, [sp]
4000767c:	e58d8004 	str	r8, [sp, #4]
40007680:	ebffef8c 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007684:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007688:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
4000768c:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007690:	e1a03006 	mov	r3, r6
40007694:	e3a01005 	mov	r1, #5
40007698:	e3a020dc 	mov	r2, #220	; 0xdc
4000769c:	e59f017c 	ldr	r0, [pc, #380]	; 40007820 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400076a0:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076a4:	e58dc000 	str	ip, [sp]
400076a8:	e58d9004 	str	r9, [sp, #4]
400076ac:	ebffef81 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076b0:	e59d001c 	ldr	r0, [sp, #28]
400076b4:	e3a0e002 	mov	lr, #2
400076b8:	e200c0ff 	and	ip, r0, #255	; 0xff
400076bc:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400076c0:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076c4:	e3a01005 	mov	r1, #5
400076c8:	e3a020de 	mov	r2, #222	; 0xde
400076cc:	e59f014c 	ldr	r0, [pc, #332]	; 40007820 <CamDefSet+0x2bc>
400076d0:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400076d4:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076d8:	e58dc000 	str	ip, [sp]
400076dc:	ebffef75 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400076e0:	e59da020 	ldr	sl, [sp, #32]
400076e4:	e1a03006 	mov	r3, r6
400076e8:	e20ac0ff 	and	ip, sl, #255	; 0xff
400076ec:	e58dc000 	str	ip, [sp]
400076f0:	e3a01005 	mov	r1, #5
400076f4:	e3a0c003 	mov	ip, #3
400076f8:	e3a020e0 	mov	r2, #224	; 0xe0
400076fc:	e59f011c 	ldr	r0, [pc, #284]	; 40007820 <CamDefSet+0x2bc>
40007700:	e58dc004 	str	ip, [sp, #4]
40007704:	ebffef6b 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007708:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000770c:	e3a0a004 	mov	sl, #4
40007710:	e200c0ff 	and	ip, r0, #255	; 0xff
40007714:	e1a03006 	mov	r3, r6
40007718:	e3a01005 	mov	r1, #5
4000771c:	e3a020dd 	mov	r2, #221	; 0xdd
40007720:	e59f00f8 	ldr	r0, [pc, #248]	; 40007820 <CamDefSet+0x2bc>
40007724:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007728:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
4000772c:	e58da004 	str	sl, [sp, #4]
40007730:	ebffef60 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007734:	e3a0e005 	mov	lr, #5
40007738:	e1a0100e 	mov	r1, lr
4000773c:	e1a03006 	mov	r3, r6
40007740:	e3a020e1 	mov	r2, #225	; 0xe1
40007744:	e20760ff 	and	r6, r7, #255	; 0xff
40007748:	e59f00d0 	ldr	r0, [pc, #208]	; 40007820 <CamDefSet+0x2bc>
4000774c:	e88d4040 	stm	sp, {r6, lr}
40007750:	ebffef58 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007754:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007758:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000775c:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007760:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007764:	e59dc020 	ldr	ip, [sp, #32]
40007768:	e1a0200b 	mov	r2, fp
4000776c:	e59d3018 	ldr	r3, [sp, #24]
40007770:	e59f10b0 	ldr	r1, [pc, #176]	; 40007828 <CamDefSet+0x2c4>
40007774:	e1a0000a 	mov	r0, sl
40007778:	e88d5040 	stm	sp, {r6, ip, lr}
4000777c:	e58d700c 	str	r7, [sp, #12]
40007780:	eb002dbd 	bl	40012e7c <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
40007784:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
40007788:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
4000778c:	e1a03007 	mov	r3, r7
40007790:	e3a01006 	mov	r1, #6
40007794:	e3a02085 	mov	r2, #133	; 0x85
40007798:	e59f0080 	ldr	r0, [pc, #128]	; 40007820 <CamDefSet+0x2bc>
4000779c:	e88d0140 	stm	sp, {r6, r8}
400077a0:	ebffef44 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
400077a4:	e1a03007 	mov	r3, r7
400077a8:	e3a01006 	mov	r1, #6
400077ac:	e3a02086 	mov	r2, #134	; 0x86
400077b0:	e59f0068 	ldr	r0, [pc, #104]	; 40007820 <CamDefSet+0x2bc>
400077b4:	e88d0240 	stm	sp, {r6, r9}
400077b8:	ebffef3e 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400077bc:	e1a02006 	mov	r2, r6
400077c0:	e1a03005 	mov	r3, r5
400077c4:	e59f1058 	ldr	r1, [pc, #88]	; 40007824 <CamDefSet+0x2c0>
400077c8:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
400077cc:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400077d0:	eb002da9 	bl	40012e7c <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400077d4:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
400077d8:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
400077dc:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
400077e0:	e3a01007 	mov	r1, #7
400077e4:	e59f0034 	ldr	r0, [pc, #52]	; 40007820 <CamDefSet+0x2bc>
400077e8:	e88d0140 	stm	sp, {r6, r8}
400077ec:	ebffef31 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400077f0:	e1a03005 	mov	r3, r5
400077f4:	e1a0000a 	mov	r0, sl
400077f8:	e59f1024 	ldr	r1, [pc, #36]	; 40007824 <CamDefSet+0x2c0>
400077fc:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
40007800:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007804:	eb002d9c 	bl	40012e7c <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007808:	e59f3010 	ldr	r3, [pc, #16]	; 40007820 <CamDefSet+0x2bc>
4000780c:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007810:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007814:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007818:	ea000a1a 	b	4000a088 <_txe_mutex_put>
4000781c:	40030000 	.word	0x40030000
40007820:	40032ec4 	.word	0x40032ec4
40007824:	40011664 	.word	0x40011664
40007828:	40011684 	.word	0x40011684

4000782c <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
4000782c:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007830:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007834:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007838:	e59f1018 	ldr	r1, [pc, #24]	; 40007858 <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
4000783c:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007840:	ebfff023 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007844:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007848:	15d43001 	ldrbne	r3, [r4, #1]
4000784c:	13833002 	orrne	r3, r3, #2
40007850:	15c43001 	strbne	r3, [r4, #1]
40007854:	e8bd8038 	pop	{r3, r4, r5, pc}
40007858:	40030480 	.word	0x40030480

4000785c <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
4000785c:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007860:	e59f1010 	ldr	r1, [pc, #16]	; 40007878 <CyFxAppErrorHandler+0x1c>
40007864:	e3a00004 	mov	r0, #4
40007868:	eb002d83 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000786c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007870:	eb00043f 	bl	40008974 <_tx_thread_sleep>
40007874:	eafffff9 	b	40007860 <CyFxAppErrorHandler+0x4>
40007878:	40011244 	.word	0x40011244

4000787c <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
4000787c:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007880:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007884:	eb006ced 	bl	40022c40 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007888:	e2504000 	subs	r4, r0, #0
4000788c:	0a000004 	beq	400078a4 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007890:	e3a00004 	mov	r0, #4
40007894:	e59f1aa4 	ldr	r1, [pc, #2724]	; 40008340 <UVCAppThread_Entry+0xac4>
40007898:	eb002d77 	bl	40012e7c <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
4000789c:	e1a00004 	mov	r0, r4
400078a0:	ebffffed 	bl	4000785c <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
400078a4:	e59fca98 	ldr	ip, [pc, #2712]	; 40008344 <UVCAppThread_Entry+0xac8>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
400078a8:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
400078ac:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
400078b0:	e28d0050 	add	r0, sp, #80	; 0x50
400078b4:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
400078b8:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
400078bc:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
400078c0:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
400078c4:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
400078c8:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
400078cc:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
400078d0:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
400078d4:	eb006d52 	bl	40022e24 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
400078d8:	e3500000 	cmp	r0, #0
400078dc:	0a000000 	beq	400078e4 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
400078e0:	ebffffdd 	bl	4000785c <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
400078e4:	e3e00000 	mvn	r0, #0
400078e8:	eb006dd4 	bl	40023040 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
400078ec:	e3500000 	cmp	r0, #0
400078f0:	0a000000 	beq	400078f8 <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
400078f4:	ebffffd8 	bl	4000785c <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
400078f8:	e3a00003 	mov	r0, #3
400078fc:	e3a01004 	mov	r1, #4
40007900:	eb002cd5 	bl	40012c5c <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007904:	e3500000 	cmp	r0, #0
40007908:	0a000000 	beq	40007910 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
4000790c:	ebffffd2 	bl	4000785c <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007910:	e3a00000 	mov	r0, #0
40007914:	eb002d54 	bl	40012e6c <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007918:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000791c:	eb000414 	bl	40008974 <_tx_thread_sleep>
40007920:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007924:	eb000412 	bl	40008974 <_tx_thread_sleep>
40007928:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000792c:	eb000410 	bl	40008974 <_tx_thread_sleep>
40007930:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007934:	eb00040e 	bl	40008974 <_tx_thread_sleep>
40007938:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000793c:	eb00040c 	bl	40008974 <_tx_thread_sleep>
40007940:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007944:	eb00040a 	bl	40008974 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007948:	eb006e4a 	bl	40023278 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
4000794c:	e2502000 	subs	r2, r0, #0
40007950:	1a000102 	bne	40007d60 <UVCAppThread_Entry+0x4e4>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007954:	e59f59ec 	ldr	r5, [pc, #2540]	; 40008348 <UVCAppThread_Entry+0xacc>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40007958:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
4000795c:	e1a01002 	mov	r1, r2
40007960:	e28d008c 	add	r0, sp, #140	; 0x8c
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007964:	e58d508c 	str	r5, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
40007968:	e58d2090 	str	r2, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
4000796c:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007970:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007974:	eb006f38 	bl	4002365c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007978:	e2501000 	subs	r1, r0, #0
4000797c:	1a000100 	bne	40007d84 <UVCAppThread_Entry+0x508>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007980:	e59f69c4 	ldr	r6, [pc, #2500]	; 4000834c <UVCAppThread_Entry+0xad0>
40007984:	e3a02028 	mov	r2, #40	; 0x28
40007988:	e1a00006 	mov	r0, r6
4000798c:	eb000850 	bl	40009ad4 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007990:	e2502000 	subs	r2, r0, #0
40007994:	1a000103 	bne	40007da8 <UVCAppThread_Entry+0x52c>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007998:	e3a08002 	mov	r8, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
4000799c:	e1a01002 	mov	r1, r2
400079a0:	e28d009c 	add	r0, sp, #156	; 0x9c

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
400079a4:	e2887001 	add	r7, r8, #1

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
400079a8:	e586203c 	str	r2, [r6, #60]	; 0x3c
    clearFeatureRqtReceived = CyFalse;
400079ac:	e5862040 	str	r2, [r6, #64]	; 0x40

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
400079b0:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
400079b4:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
400079b8:	e5cd809c 	strb	r8, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
400079bc:	e5cd809d 	strb	r8, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
400079c0:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
400079c4:	eb006b33 	bl	40022698 <CyU3PGpioInit>
    if (apiRetStatus != 0)
400079c8:	e2502000 	subs	r2, r0, #0
400079cc:	1a00017b 	bne	40007fc0 <UVCAppThread_Entry+0x744>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
400079d0:	e3a00016 	mov	r0, #22
400079d4:	e3a01001 	mov	r1, #1
400079d8:	eb002c17 	bl	40012a3c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
400079dc:	e2502000 	subs	r2, r0, #0
400079e0:	1a00016d 	bne	40007f9c <UVCAppThread_Entry+0x720>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
400079e4:	e3a00014 	mov	r0, #20
400079e8:	e3a01001 	mov	r1, #1
400079ec:	eb002c12 	bl	40012a3c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
400079f0:	e2502000 	subs	r2, r0, #0
400079f4:	1a00015f 	bne	40007f78 <UVCAppThread_Entry+0x6fc>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
400079f8:	e3a00018 	mov	r0, #24
400079fc:	e3a01001 	mov	r1, #1
40007a00:	eb002c0d 	bl	40012a3c <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a04:	e2502000 	subs	r2, r0, #0
40007a08:	1a000151 	bne	40007f54 <UVCAppThread_Entry+0x6d8>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007a0c:	e3a04001 	mov	r4, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007a10:	e3a00016 	mov	r0, #22
40007a14:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007a18:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a1c:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007a20:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007a24:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007a28:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007a2c:	eb006bd1 	bl	40022978 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a30:	e2502000 	subs	r2, r0, #0
40007a34:	1a00011b 	bne	40007ea8 <UVCAppThread_Entry+0x62c>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007a38:	e3a00014 	mov	r0, #20
40007a3c:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007a40:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a44:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007a48:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007a4c:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007a50:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007a54:	eb006bc7 	bl	40022978 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a58:	e2502000 	subs	r2, r0, #0
40007a5c:	1a000108 	bne	40007e84 <UVCAppThread_Entry+0x608>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007a60:	e3a00018 	mov	r0, #24
40007a64:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007a68:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007a6c:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007a70:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a74:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007a78:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007a7c:	eb006bbd 	bl	40022978 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a80:	e2502000 	subs	r2, r0, #0
40007a84:	1a0000f5 	bne	40007e60 <UVCAppThread_Entry+0x5e4>
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007a88:	e3a0a000 	mov	sl, #0
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007a8c:	e3a07002 	mov	r7, #2
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007a90:	e3a08003 	mov	r8, #3
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007a94:	e3a00001 	mov	r0, #1
40007a98:	e28d107c 	add	r1, sp, #124	; 0x7c
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007a9c:	e1cd77bc 	strh	r7, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007aa0:	e5cd8088 	strb	r8, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
40007aa4:	e58da084 	str	sl, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007aa8:	e58da080 	str	sl, [sp, #128]	; 0x80

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007aac:	eb004c4a 	bl	4001abdc <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ab0:	e2502000 	subs	r2, r0, #0
40007ab4:	1a00017a 	bne	400080a4 <UVCAppThread_Entry+0x828>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007ab8:	e59f0890 	ldr	r0, [pc, #2192]	; 40008350 <UVCAppThread_Entry+0xad4>
40007abc:	eb004ec4 	bl	4001b5d4 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007ac0:	ebfff27c 	bl	400044b8 <SensorReset>
    SensorInit ();
40007ac4:	ebfff2ab 	bl	40004578 <SensorInit>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007ac8:	eb005937 	bl	4001dfac <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007acc:	e2504000 	subs	r4, r0, #0
40007ad0:	1a000169 	bne	4000807c <UVCAppThread_Entry+0x800>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007ad4:	e1a01004 	mov	r1, r4
40007ad8:	e59f0874 	ldr	r0, [pc, #2164]	; 40008354 <UVCAppThread_Entry+0xad8>
40007adc:	eb0063e9 	bl	40020a88 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007ae0:	e59f0870 	ldr	r0, [pc, #2160]	; 40008358 <UVCAppThread_Entry+0xadc>
40007ae4:	eb0063d2 	bl	40020a34 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007ae8:	e59f286c 	ldr	r2, [pc, #2156]	; 4000835c <UVCAppThread_Entry+0xae0>
40007aec:	e1a01004 	mov	r1, r4
40007af0:	e3a00001 	mov	r0, #1
40007af4:	eb00570c 	bl	4001d72c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007af8:	e1a01004 	mov	r1, r4
40007afc:	e59f285c 	ldr	r2, [pc, #2140]	; 40008360 <UVCAppThread_Entry+0xae4>
40007b00:	e1a00004 	mov	r0, r4
40007b04:	eb005708 	bl	4001d72c <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007b08:	e1a01004 	mov	r1, r4
40007b0c:	e59f2850 	ldr	r2, [pc, #2128]	; 40008364 <UVCAppThread_Entry+0xae8>
40007b10:	e3a00002 	mov	r0, #2
40007b14:	eb005704 	bl	4001d72c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007b18:	e1a01004 	mov	r1, r4
40007b1c:	e59f2844 	ldr	r2, [pc, #2116]	; 40008368 <UVCAppThread_Entry+0xaec>
40007b20:	e3a00007 	mov	r0, #7
40007b24:	eb005700 	bl	4001d72c <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007b28:	e59f283c 	ldr	r2, [pc, #2108]	; 4000836c <UVCAppThread_Entry+0xaf0>
40007b2c:	e1a01004 	mov	r1, r4
40007b30:	e3a00004 	mov	r0, #4
40007b34:	eb0056fc 	bl	4001d72c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007b38:	e1a01004 	mov	r1, r4
40007b3c:	e59f282c 	ldr	r2, [pc, #2092]	; 40008370 <UVCAppThread_Entry+0xaf4>
40007b40:	e1a00008 	mov	r0, r8
40007b44:	eb0056f8 	bl	4001d72c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007b48:	e1a01004 	mov	r1, r4
40007b4c:	e59f2820 	ldr	r2, [pc, #2080]	; 40008374 <UVCAppThread_Entry+0xaf8>
40007b50:	e3a00006 	mov	r0, #6
40007b54:	eb0056f4 	bl	4001d72c <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007b58:	e1a01004 	mov	r1, r4
40007b5c:	e59f2814 	ldr	r2, [pc, #2068]	; 40008378 <UVCAppThread_Entry+0xafc>
40007b60:	e3a00005 	mov	r0, #5
40007b64:	eb0056f0 	bl	4001d72c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007b68:	e3a01001 	mov	r1, #1
40007b6c:	e59f2808 	ldr	r2, [pc, #2056]	; 4000837c <UVCAppThread_Entry+0xb00>
40007b70:	e3a00005 	mov	r0, #5
40007b74:	eb0056ec 	bl	4001d72c <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007b78:	e3a01002 	mov	r1, #2
40007b7c:	e59f27fc 	ldr	r2, [pc, #2044]	; 40008380 <UVCAppThread_Entry+0xb04>
40007b80:	e3a00005 	mov	r0, #5
40007b84:	eb0056e8 	bl	4001d72c <CyU3PUsbSetDesc>
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007b88:	e3a05001 	mov	r5, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007b8c:	e3a02040 	mov	r2, #64	; 0x40
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007b90:	e3a00082 	mov	r0, #130	; 0x82
40007b94:	e28d10a8 	add	r1, sp, #168	; 0xa8
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007b98:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007b9c:	e5cd80ac 	strb	r8, [sp, #172]	; 0xac
    endPointConfig.pcktSize = 64;
40007ba0:	e1cd2bb0 	strh	r2, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007ba4:	e5cd40b3 	strb	r4, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007ba8:	e1cd4abe 	strh	r4, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007bac:	e5cd50b2 	strb	r5, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007bb0:	eb005044 	bl	4001bcc8 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007bb4:	e2503000 	subs	r3, r0, #0
40007bb8:	1a000125 	bne	40008054 <UVCAppThread_Entry+0x7d8>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007bbc:	e59fc7c0 	ldr	ip, [pc, #1984]	; 40008384 <UVCAppThread_Entry+0xb08>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007bc0:	e59fe7c0 	ldr	lr, [pc, #1984]	; 40008388 <UVCAppThread_Entry+0xb0c>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007bc4:	e3a08b01 	mov	r8, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007bc8:	e3a0a010 	mov	sl, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007bcc:	e59f07b8 	ldr	r0, [pc, #1976]	; 4000838c <UVCAppThread_Entry+0xb10>
40007bd0:	e3a01004 	mov	r1, #4
40007bd4:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007bd8:	e1cd83b4 	strh	r8, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007bdc:	e1cd53b6 	strh	r5, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007be0:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007be4:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007be8:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007bec:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007bf0:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007bf4:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007bf8:	e5cd4044 	strb	r4, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007bfc:	e58da048 	str	sl, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007c00:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007c04:	eb0036b2 	bl	400156d4 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c08:	e2508000 	subs	r8, r0, #0
40007c0c:	1a000106 	bne	4000802c <UVCAppThread_Entry+0x7b0>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007c10:	e3a00b01 	mov	r0, #1024	; 0x400
40007c14:	ebfff053 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007c18:	e59f1770 	ldr	r1, [pc, #1904]	; 40008390 <UVCAppThread_Entry+0xb14>
    if (glInterStaBuffer == 0)
40007c1c:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007c20:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007c24:	0a000130 	beq	400080ec <UVCAppThread_Entry+0x870>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007c28:	e3a03004 	mov	r3, #4
40007c2c:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007c30:	e59f375c 	ldr	r3, [pc, #1884]	; 40008394 <UVCAppThread_Entry+0xb18>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007c34:	e3a0e901 	mov	lr, #16384	; 0x4000
40007c38:	e1cde0bc 	strh	lr, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007c3c:	e59fe754 	ldr	lr, [pc, #1876]	; 40008398 <UVCAppThread_Entry+0xb1c>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007c40:	e1cd31ba 	strh	r3, [sp, #26]
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007c44:	e59f3750 	ldr	r3, [pc, #1872]	; 4000839c <UVCAppThread_Entry+0xb20>

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007c48:	e3a0cc01 	mov	ip, #256	; 0x100
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007c4c:	e28d200c 	add	r2, sp, #12

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007c50:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007c54:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007c58:	e3a0c00c 	mov	ip, #12
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007c5c:	e3a0e004 	mov	lr, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007c60:	e5cd402a 	strb	r4, [sp, #42]	; 0x2a
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007c64:	e59f0734 	ldr	r0, [pc, #1844]	; 400083a0 <UVCAppThread_Entry+0xb24>
40007c68:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007c6c:	e3a04018 	mov	r4, #24
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007c70:	e1cd71b0 	strh	r7, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007c74:	e1cd82b2 	strh	r8, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007c78:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007c7c:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007c80:	e1cd82b8 	strh	r8, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007c84:	e58d402c 	str	r4, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007c88:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007c8c:	eb003fb0 	bl	40017b54 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c90:	e2502000 	subs	r2, r0, #0
40007c94:	1a00010b 	bne	400080c8 <UVCAppThread_Entry+0x84c>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007c98:	e1a00005 	mov	r0, r5
40007c9c:	e1a01005 	mov	r1, r5
40007ca0:	eb004f04 	bl	4001b8b8 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ca4:	e2502000 	subs	r2, r0, #0
40007ca8:	1a000063 	bne	40007e3c <UVCAppThread_Entry+0x5c0>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007cac:	e3a00064 	mov	r0, #100	; 0x64
40007cb0:	eb002de2 	bl	40013440 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007cb4:	eb0053b1 	bl	4001cb80 <CyU3PUsbGetSpeed>

    endPointConfig.enable   = 1;
40007cb8:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007cbc:	e5cd70ac 	strb	r7, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007cc0:	e28d10a8 	add	r1, sp, #168	; 0xa8

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007cc4:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007cc8:	e5c60048 	strb	r0, [r6, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007ccc:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007cd0:	03a07b01 	moveq	r7, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007cd4:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
40007cd8:	15cd50b2 	strbne	r5, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007cdc:	e3a00083 	mov	r0, #131	; 0x83
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007ce0:	e3a05000 	mov	r5, #0

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007ce4:	01cd7bb0 	strheq	r7, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007ce8:	05cda0b2 	strbeq	sl, [sp, #178]	; 0xb2
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007cec:	e1cd5abe 	strh	r5, [sp, #174]	; 0xae
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007cf0:	eb004ff4 	bl	4001bcc8 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cf4:	e2502000 	subs	r2, r0, #0
40007cf8:	1a000046 	bne	40007e18 <UVCAppThread_Entry+0x59c>
40007cfc:	e59f86a0 	ldr	r8, [pc, #1696]	; 400083a4 <UVCAppThread_Entry+0xb28>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007d00:	e59f5644 	ldr	r5, [pc, #1604]	; 4000834c <UVCAppThread_Entry+0xad0>
40007d04:	e1a04002 	mov	r4, r2
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007d08:	e1a07008 	mov	r7, r8
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007d0c:	e59f0638 	ldr	r0, [pc, #1592]	; 4000834c <UVCAppThread_Entry+0xad0>
40007d10:	e3a01001 	mov	r1, #1
40007d14:	e3a02002 	mov	r2, #2
40007d18:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007d1c:	e58d4000 	str	r4, [sp]
40007d20:	eb0007db 	bl	40009c94 <_txe_event_flags_get>
40007d24:	e3500000 	cmp	r0, #0
40007d28:	1a000027 	bne	40007dcc <UVCAppThread_Entry+0x550>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007d2c:	e595a044 	ldr	sl, [r5, #68]	; 0x44
40007d30:	e35a0000 	cmp	sl, #0
40007d34:	0a000003 	beq	40007d48 <UVCAppThread_Entry+0x4cc>
40007d38:	e1d522be 	ldrh	r2, [r5, #46]	; 0x2e
40007d3c:	e1d513b0 	ldrh	r1, [r5, #48]	; 0x30
40007d40:	e1520001 	cmp	r2, r1
40007d44:	0a000060 	beq	40007ecc <UVCAppThread_Entry+0x650>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007d48:	e3a01040 	mov	r1, #64	; 0x40
40007d4c:	e3a02000 	mov	r2, #0
40007d50:	e59f05f4 	ldr	r0, [pc, #1524]	; 4000834c <UVCAppThread_Entry+0xad0>
40007d54:	eb0007fe 	bl	40009d54 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007d58:	eb000ab6 	bl	4000a838 <_txe_thread_relinquish>
    }
40007d5c:	eaffffea 	b	40007d0c <UVCAppThread_Entry+0x490>
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007d60:	e3a00004 	mov	r0, #4
40007d64:	e59f163c 	ldr	r1, [pc, #1596]	; 400083a8 <UVCAppThread_Entry+0xb2c>
40007d68:	eb002c43 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007d6c:	e59f1638 	ldr	r1, [pc, #1592]	; 400083ac <UVCAppThread_Entry+0xb30>
40007d70:	e3a00004 	mov	r0, #4
40007d74:	eb002c40 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007d78:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007d7c:	eb0002fc 	bl	40008974 <_tx_thread_sleep>
40007d80:	eafffff9 	b	40007d6c <UVCAppThread_Entry+0x4f0>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007d84:	e3a00004 	mov	r0, #4
40007d88:	e59f1620 	ldr	r1, [pc, #1568]	; 400083b0 <UVCAppThread_Entry+0xb34>
40007d8c:	eb002c3a 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007d90:	e59f1614 	ldr	r1, [pc, #1556]	; 400083ac <UVCAppThread_Entry+0xb30>
40007d94:	e3a00004 	mov	r0, #4
40007d98:	eb002c37 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007d9c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007da0:	eb0002f3 	bl	40008974 <_tx_thread_sleep>
40007da4:	eafffff9 	b	40007d90 <UVCAppThread_Entry+0x514>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40007da8:	e3a00004 	mov	r0, #4
40007dac:	e59f1600 	ldr	r1, [pc, #1536]	; 400083b4 <UVCAppThread_Entry+0xb38>
40007db0:	eb002c31 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007db4:	e59f15f0 	ldr	r1, [pc, #1520]	; 400083ac <UVCAppThread_Entry+0xb30>
40007db8:	e3a00004 	mov	r0, #4
40007dbc:	eb002c2e 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007dc0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007dc4:	eb0002ea 	bl	40008974 <_tx_thread_sleep>
40007dc8:	eafffff9 	b	40007db4 <UVCAppThread_Entry+0x538>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40007dcc:	e59f0578 	ldr	r0, [pc, #1400]	; 4000834c <UVCAppThread_Entry+0xad0>
40007dd0:	e3a01002 	mov	r1, #2
40007dd4:	e3a02003 	mov	r2, #3
40007dd8:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007ddc:	e58d4000 	str	r4, [sp]
40007de0:	eb0007ab 	bl	40009c94 <_txe_event_flags_get>
40007de4:	e3500000 	cmp	r0, #0
40007de8:	1a0000da 	bne	40008158 <UVCAppThread_Entry+0x8dc>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007dec:	e5952040 	ldr	r2, [r5, #64]	; 0x40
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40007df0:	e5854044 	str	r4, [r5, #68]	; 0x44
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007df4:	e3520000 	cmp	r2, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40007df8:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
40007dfc:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40007e00:	e1c543b0 	strh	r4, [r5, #48]	; 0x30
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
40007e04:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                pbc=0;
40007e08:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
40007e0c:	0a0000bf 	beq	40008110 <UVCAppThread_Entry+0x894>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
40007e10:	e5864040 	str	r4, [r6, #64]	; 0x40
40007e14:	eaffffcb 	b	40007d48 <UVCAppThread_Entry+0x4cc>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40007e18:	e3a00004 	mov	r0, #4
40007e1c:	e59f1594 	ldr	r1, [pc, #1428]	; 400083b8 <UVCAppThread_Entry+0xb3c>
40007e20:	eb002c15 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e24:	e59f1580 	ldr	r1, [pc, #1408]	; 400083ac <UVCAppThread_Entry+0xb30>
40007e28:	e3a00004 	mov	r0, #4
40007e2c:	eb002c12 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e30:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e34:	eb0002ce 	bl	40008974 <_tx_thread_sleep>
40007e38:	eafffff9 	b	40007e24 <UVCAppThread_Entry+0x5a8>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
40007e3c:	e3a00004 	mov	r0, #4
40007e40:	e59f1574 	ldr	r1, [pc, #1396]	; 400083bc <UVCAppThread_Entry+0xb40>
40007e44:	eb002c0c 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e48:	e59f155c 	ldr	r1, [pc, #1372]	; 400083ac <UVCAppThread_Entry+0xb30>
40007e4c:	e3a00004 	mov	r0, #4
40007e50:	eb002c09 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e54:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e58:	eb0002c5 	bl	40008974 <_tx_thread_sleep>
40007e5c:	eafffff9 	b	40007e48 <UVCAppThread_Entry+0x5cc>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
40007e60:	e3a00004 	mov	r0, #4
40007e64:	e59f1554 	ldr	r1, [pc, #1364]	; 400083c0 <UVCAppThread_Entry+0xb44>
40007e68:	eb002c03 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e6c:	e59f1538 	ldr	r1, [pc, #1336]	; 400083ac <UVCAppThread_Entry+0xb30>
40007e70:	e3a00004 	mov	r0, #4
40007e74:	eb002c00 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e78:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e7c:	eb0002bc 	bl	40008974 <_tx_thread_sleep>
40007e80:	eafffff9 	b	40007e6c <UVCAppThread_Entry+0x5f0>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40007e84:	e3a00004 	mov	r0, #4
40007e88:	e59f1534 	ldr	r1, [pc, #1332]	; 400083c4 <UVCAppThread_Entry+0xb48>
40007e8c:	eb002bfa 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e90:	e59f1514 	ldr	r1, [pc, #1300]	; 400083ac <UVCAppThread_Entry+0xb30>
40007e94:	e3a00004 	mov	r0, #4
40007e98:	eb002bf7 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e9c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ea0:	eb0002b3 	bl	40008974 <_tx_thread_sleep>
40007ea4:	eafffff9 	b	40007e90 <UVCAppThread_Entry+0x614>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
40007ea8:	e3a00004 	mov	r0, #4
40007eac:	e59f1514 	ldr	r1, [pc, #1300]	; 400083c8 <UVCAppThread_Entry+0xb4c>
40007eb0:	eb002bf1 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007eb4:	e59f14f0 	ldr	r1, [pc, #1264]	; 400083ac <UVCAppThread_Entry+0xb30>
40007eb8:	e3a00004 	mov	r0, #4
40007ebc:	eb002bee 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007ec0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ec4:	eb0002aa 	bl	40008974 <_tx_thread_sleep>
40007ec8:	eafffff9 	b	40007eb4 <UVCAppThread_Entry+0x638>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
40007ecc:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
                consCount = 0;
40007ed0:	e1c543b0 	strh	r4, [r5, #48]	; 0x30
                hitFV     = CyFalse;
40007ed4:	e5854044 	str	r4, [r5, #68]	; 0x44
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007ed8:	e5d80481 	ldrb	r0, [r8, #1153]	; 0x481
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
40007edc:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007ee0:	e220e001 	eor	lr, r0, #1
40007ee4:	e5c8e481 	strb	lr, [r8, #1153]	; 0x481
                if(stiflag){
40007ee8:	e5953098 	ldr	r3, [r5, #152]	; 0x98
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007eec:	e5d7c481 	ldrb	ip, [r7, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40007ef0:	e3530000 	cmp	r3, #0
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007ef4:	138cc020 	orrne	ip, ip, #32
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40007ef8:	020cc0df 	andeq	ip, ip, #223	; 0xdf
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007efc:	15c7c481 	strbne	ip, [r7, #1153]	; 0x481
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40007f00:	05c7c481 	strbeq	ip, [r7, #1153]	; 0x481
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
                	stiflag = CyFalse;
40007f04:	15854098 	strne	r4, [r5, #152]	; 0x98
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
40007f08:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
            	pbc=0;
40007f0c:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40007f10:	e59f0488 	ldr	r0, [pc, #1160]	; 400083a0 <UVCAppThread_Entry+0xb24>
40007f14:	eb0040df 	bl	40018298 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007f18:	e2502000 	subs	r2, r0, #0
40007f1c:	1a000039 	bne	40008008 <UVCAppThread_Entry+0x78c>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40007f20:	e1a01002 	mov	r1, r2
40007f24:	e59f0474 	ldr	r0, [pc, #1140]	; 400083a0 <UVCAppThread_Entry+0xb24>
40007f28:	eb0041c7 	bl	4001864c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007f2c:	e2502000 	subs	r2, r0, #0
40007f30:	1a00002b 	bne	40007fe4 <UVCAppThread_Entry+0x768>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40007f34:	e59f045c 	ldr	r0, [pc, #1116]	; 40008398 <UVCAppThread_Entry+0xb1c>
40007f38:	e1a01002 	mov	r1, r2
40007f3c:	e3a0a002 	mov	sl, #2
40007f40:	e1a02000 	mov	r2, r0
40007f44:	e1a03001 	mov	r3, r1
40007f48:	e58da000 	str	sl, [sp]
40007f4c:	eb004df9 	bl	4001b738 <CyU3PGpifSMSwitch>
40007f50:	eaffff7c 	b	40007d48 <UVCAppThread_Entry+0x4cc>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
40007f54:	e3a00004 	mov	r0, #4
40007f58:	e59f146c 	ldr	r1, [pc, #1132]	; 400083cc <UVCAppThread_Entry+0xb50>
40007f5c:	eb002bc6 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f60:	e59f1444 	ldr	r1, [pc, #1092]	; 400083ac <UVCAppThread_Entry+0xb30>
40007f64:	e3a00004 	mov	r0, #4
40007f68:	eb002bc3 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f6c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f70:	eb00027f 	bl	40008974 <_tx_thread_sleep>
40007f74:	eafffff9 	b	40007f60 <UVCAppThread_Entry+0x6e4>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40007f78:	e3a00004 	mov	r0, #4
40007f7c:	e59f144c 	ldr	r1, [pc, #1100]	; 400083d0 <UVCAppThread_Entry+0xb54>
40007f80:	eb002bbd 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f84:	e59f1420 	ldr	r1, [pc, #1056]	; 400083ac <UVCAppThread_Entry+0xb30>
40007f88:	e3a00004 	mov	r0, #4
40007f8c:	eb002bba 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f90:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f94:	eb000276 	bl	40008974 <_tx_thread_sleep>
40007f98:	eafffff9 	b	40007f84 <UVCAppThread_Entry+0x708>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40007f9c:	e3a00004 	mov	r0, #4
40007fa0:	e59f142c 	ldr	r1, [pc, #1068]	; 400083d4 <UVCAppThread_Entry+0xb58>
40007fa4:	eb002bb4 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fa8:	e59f13fc 	ldr	r1, [pc, #1020]	; 400083ac <UVCAppThread_Entry+0xb30>
40007fac:	e3a00004 	mov	r0, #4
40007fb0:	eb002bb1 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fb4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fb8:	eb00026d 	bl	40008974 <_tx_thread_sleep>
40007fbc:	eafffff9 	b	40007fa8 <UVCAppThread_Entry+0x72c>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
40007fc0:	e3a00004 	mov	r0, #4
40007fc4:	e59f140c 	ldr	r1, [pc, #1036]	; 400083d8 <UVCAppThread_Entry+0xb5c>
40007fc8:	eb002bab 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fcc:	e59f13d8 	ldr	r1, [pc, #984]	; 400083ac <UVCAppThread_Entry+0xb30>
40007fd0:	e3a00004 	mov	r0, #4
40007fd4:	eb002ba8 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fd8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fdc:	eb000264 	bl	40008974 <_tx_thread_sleep>
40007fe0:	eafffff9 	b	40007fcc <UVCAppThread_Entry+0x750>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40007fe4:	e3a00004 	mov	r0, #4
40007fe8:	e59f13ec 	ldr	r1, [pc, #1004]	; 400083dc <UVCAppThread_Entry+0xb60>
40007fec:	eb002ba2 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ff0:	e59f13b4 	ldr	r1, [pc, #948]	; 400083ac <UVCAppThread_Entry+0xb30>
40007ff4:	e3a00004 	mov	r0, #4
40007ff8:	eb002b9f 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007ffc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008000:	eb00025b 	bl	40008974 <_tx_thread_sleep>
40008004:	eafffff9 	b	40007ff0 <UVCAppThread_Entry+0x774>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40008008:	e3a00004 	mov	r0, #4
4000800c:	e59f13cc 	ldr	r1, [pc, #972]	; 400083e0 <UVCAppThread_Entry+0xb64>
40008010:	eb002b99 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008014:	e59f1390 	ldr	r1, [pc, #912]	; 400083ac <UVCAppThread_Entry+0xb30>
40008018:	e3a00004 	mov	r0, #4
4000801c:	eb002b96 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008020:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008024:	eb000252 	bl	40008974 <_tx_thread_sleep>
40008028:	eafffff9 	b	40008014 <UVCAppThread_Entry+0x798>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
4000802c:	e3a00004 	mov	r0, #4
40008030:	e59f13ac 	ldr	r1, [pc, #940]	; 400083e4 <UVCAppThread_Entry+0xb68>
40008034:	e1a02008 	mov	r2, r8
40008038:	eb002b8f 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000803c:	e59f1368 	ldr	r1, [pc, #872]	; 400083ac <UVCAppThread_Entry+0xb30>
40008040:	e3a00004 	mov	r0, #4
40008044:	eb002b8c 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008048:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000804c:	eb000248 	bl	40008974 <_tx_thread_sleep>
40008050:	eafffff9 	b	4000803c <UVCAppThread_Entry+0x7c0>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40008054:	e3a00004 	mov	r0, #4
40008058:	e59f1358 	ldr	r1, [pc, #856]	; 400083b8 <UVCAppThread_Entry+0xb3c>
4000805c:	e1a02003 	mov	r2, r3
40008060:	eb002b85 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008064:	e59f1340 	ldr	r1, [pc, #832]	; 400083ac <UVCAppThread_Entry+0xb30>
40008068:	e3a00004 	mov	r0, #4
4000806c:	eb002b82 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008070:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008074:	eb00023e 	bl	40008974 <_tx_thread_sleep>
40008078:	eafffff9 	b	40008064 <UVCAppThread_Entry+0x7e8>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
4000807c:	e3a00004 	mov	r0, #4
40008080:	e59f1360 	ldr	r1, [pc, #864]	; 400083e8 <UVCAppThread_Entry+0xb6c>
40008084:	e1a02004 	mov	r2, r4
40008088:	eb002b7b 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000808c:	e59f1318 	ldr	r1, [pc, #792]	; 400083ac <UVCAppThread_Entry+0xb30>
40008090:	e3a00004 	mov	r0, #4
40008094:	eb002b78 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008098:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000809c:	eb000234 	bl	40008974 <_tx_thread_sleep>
400080a0:	eafffff9 	b	4000808c <UVCAppThread_Entry+0x810>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
400080a4:	e3a00004 	mov	r0, #4
400080a8:	e59f133c 	ldr	r1, [pc, #828]	; 400083ec <UVCAppThread_Entry+0xb70>
400080ac:	eb002b72 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080b0:	e59f12f4 	ldr	r1, [pc, #756]	; 400083ac <UVCAppThread_Entry+0xb30>
400080b4:	e3a00004 	mov	r0, #4
400080b8:	eb002b6f 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080bc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080c0:	eb00022b 	bl	40008974 <_tx_thread_sleep>
400080c4:	eafffff9 	b	400080b0 <UVCAppThread_Entry+0x834>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400080c8:	e3a00004 	mov	r0, #4
400080cc:	e59f131c 	ldr	r1, [pc, #796]	; 400083f0 <UVCAppThread_Entry+0xb74>
400080d0:	eb002b69 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080d4:	e59f12d0 	ldr	r1, [pc, #720]	; 400083ac <UVCAppThread_Entry+0xb30>
400080d8:	e3a00004 	mov	r0, #4
400080dc:	eb002b66 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080e0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080e4:	eb000222 	bl	40008974 <_tx_thread_sleep>
400080e8:	eafffff9 	b	400080d4 <UVCAppThread_Entry+0x858>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
400080ec:	e2800004 	add	r0, r0, #4
400080f0:	e59f12fc 	ldr	r1, [pc, #764]	; 400083f4 <UVCAppThread_Entry+0xb78>
400080f4:	eb002b60 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080f8:	e59f12ac 	ldr	r1, [pc, #684]	; 400083ac <UVCAppThread_Entry+0xb30>
400080fc:	e3a00004 	mov	r0, #4
40008100:	eb002b5d 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008104:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008108:	eb000219 	bl	40008974 <_tx_thread_sleep>
4000810c:	eafffff9 	b	400080f8 <UVCAppThread_Entry+0x87c>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008110:	e59f0288 	ldr	r0, [pc, #648]	; 400083a0 <UVCAppThread_Entry+0xb24>
40008114:	eb00405f 	bl	40018298 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
40008118:	e3500000 	cmp	r0, #0
4000811c:	1a000002 	bne	4000812c <UVCAppThread_Entry+0x8b0>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40008120:	e3a00083 	mov	r0, #131	; 0x83
40008124:	eb0051f0 	bl	4001c8ec <CyU3PUsbFlushEp>
40008128:	eaffff38 	b	40007e10 <UVCAppThread_Entry+0x594>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000812c:	e59f1278 	ldr	r1, [pc, #632]	; 400083ac <UVCAppThread_Entry+0xb30>
40008130:	e3a00004 	mov	r0, #4
40008134:	eb002b50 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008138:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000813c:	eb00020c 	bl	40008974 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008140:	e59f1264 	ldr	r1, [pc, #612]	; 400083ac <UVCAppThread_Entry+0xb30>
40008144:	e3a00004 	mov	r0, #4
40008148:	eb002b4b 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000814c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008150:	eb000207 	bl	40008974 <_tx_thread_sleep>
40008154:	eafffff4 	b	4000812c <UVCAppThread_Entry+0x8b0>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40008158:	e3e0c000 	mvn	ip, #0
4000815c:	e3a01001 	mov	r1, #1
40008160:	e3a02002 	mov	r2, #2
40008164:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008168:	e59f01dc 	ldr	r0, [pc, #476]	; 4000834c <UVCAppThread_Entry+0xad0>
4000816c:	e58dc000 	str	ip, [sp]
40008170:	eb0006c7 	bl	40009c94 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008174:	e1a02004 	mov	r2, r4
40008178:	e59f0220 	ldr	r0, [pc, #544]	; 400083a0 <UVCAppThread_Entry+0xb24>
4000817c:	e1a01004 	mov	r1, r4
40008180:	eb004131 	bl	4001864c <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008184:	e2502000 	subs	r2, r0, #0
40008188:	1a00002f 	bne	4000824c <UVCAppThread_Entry+0x9d0>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
4000818c:	e5953038 	ldr	r3, [r5, #56]	; 0x38
40008190:	e3530000 	cmp	r3, #0
40008194:	1a000058 	bne	400082fc <UVCAppThread_Entry+0xa80>
                {
                    //for start up of the AF Lens
                   	SensorSetIrisControl(0x21, 0x30, 1, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris manual (AF Lens)
40008198:	e3a01030 	mov	r1, #48	; 0x30
4000819c:	e3a02001 	mov	r2, #1
400081a0:	e2833082 	add	r3, r3, #130	; 0x82
400081a4:	e3a00021 	mov	r0, #33	; 0x21
400081a8:	ebfff15d 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400081ac:	e3a00f7d 	mov	r0, #500	; 0x1f4
400081b0:	eb0001ef 	bl	40008974 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 2, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris manual (non AF Lens)
400081b4:	e3a01030 	mov	r1, #48	; 0x30
400081b8:	e3a02002 	mov	r2, #2
400081bc:	e3a03052 	mov	r3, #82	; 0x52
400081c0:	e3a00025 	mov	r0, #37	; 0x25
400081c4:	ebfff156 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400081c8:	e3a00f7d 	mov	r0, #500	; 0x1f4
400081cc:	eb0001e8 	bl	40008974 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x23, 0x30, 0xa, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
400081d0:	e3a01030 	mov	r1, #48	; 0x30
400081d4:	e3a0200a 	mov	r2, #10
400081d8:	e3a03082 	mov	r3, #130	; 0x82
400081dc:	e3a00023 	mov	r0, #35	; 0x23
400081e0:	ebfff14f 	bl	40004724 <SensorSetIrisControl>
                   	CyU3PThreadSleep(300);
400081e4:	e3a00f4b 	mov	r0, #300	; 0x12c
400081e8:	eb0001e1 	bl	40008974 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
400081ec:	e3a01030 	mov	r1, #48	; 0x30
400081f0:	e1a02004 	mov	r2, r4
400081f4:	e3a03082 	mov	r3, #130	; 0x82
400081f8:	e3a00021 	mov	r0, #33	; 0x21
400081fc:	ebfff148 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40008200:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008204:	eb0001da 	bl	40008974 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40008208:	e3a03052 	mov	r3, #82	; 0x52
4000820c:	e3a01030 	mov	r1, #48	; 0x30
40008210:	e1a02004 	mov	r2, r4
40008214:	e3a00025 	mov	r0, #37	; 0x25
40008218:	ebfff141 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
4000821c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008220:	eb0001d3 	bl	40008974 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008224:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
40008228:	e3530003 	cmp	r3, #3
4000822c:	0a00002b 	beq	400082e0 <UVCAppThread_Entry+0xa64>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008230:	e3530002 	cmp	r3, #2
40008234:	0a00000d 	beq	40008270 <UVCAppThread_Entry+0x9f4>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008238:	e3a01001 	mov	r1, #1
                    CyU3PThreadSleep(200);
4000823c:	e3a000c8 	mov	r0, #200	; 0xc8
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008240:	e5861038 	str	r1, [r6, #56]	; 0x38
                    CyU3PThreadSleep(200);
40008244:	eb0001ca 	bl	40008974 <_tx_thread_sleep>
40008248:	eafffebe 	b	40007d48 <UVCAppThread_Entry+0x4cc>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
4000824c:	e3a00004 	mov	r0, #4
40008250:	e59f11a0 	ldr	r1, [pc, #416]	; 400083f8 <UVCAppThread_Entry+0xb7c>
40008254:	eb002b08 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008258:	e59f114c 	ldr	r1, [pc, #332]	; 400083ac <UVCAppThread_Entry+0xb30>
4000825c:	e3a00004 	mov	r0, #4
40008260:	eb002b05 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008264:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008268:	eb0001c1 	bl	40008974 <_tx_thread_sleep>
4000826c:	eafffff9 	b	40008258 <UVCAppThread_Entry+0x9dc>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
40008270:	e59f1184 	ldr	r1, [pc, #388]	; 400083fc <UVCAppThread_Entry+0xb80>
40008274:	e3a00001 	mov	r0, #1
40008278:	eb002aff 	bl	40012e7c <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
4000827c:	e59f017c 	ldr	r0, [pc, #380]	; 40008400 <UVCAppThread_Entry+0xb84>
40008280:	eb004c31 	bl	4001b34c <CyU3PGpifLoad>
40008284:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008288:	e3520000 	cmp	r2, #0
4000828c:	1a000022 	bne	4000831c <UVCAppThread_Entry+0xaa0>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008290:	e5d63048 	ldrb	r3, [r6, #72]	; 0x48
40008294:	e3530003 	cmp	r3, #3
40008298:	0a000001 	beq	400082a4 <UVCAppThread_Entry+0xa28>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
4000829c:	e3530002 	cmp	r3, #2
400082a0:	1affffe4 	bne	40008238 <UVCAppThread_Entry+0x9bc>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400082a4:	e1a00002 	mov	r0, r2
400082a8:	e1a01002 	mov	r1, r2
400082ac:	eb004ccc 	bl	4001b5e4 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400082b0:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400082b4:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400082b8:	0affffde 	beq	40008238 <UVCAppThread_Entry+0x9bc>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
400082bc:	e3a00004 	mov	r0, #4
400082c0:	e59f113c 	ldr	r1, [pc, #316]	; 40008404 <UVCAppThread_Entry+0xb88>
400082c4:	eb002aec 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082c8:	e59f10dc 	ldr	r1, [pc, #220]	; 400083ac <UVCAppThread_Entry+0xb30>
400082cc:	e3a00004 	mov	r0, #4
400082d0:	eb002ae9 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082d4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082d8:	eb0001a5 	bl	40008974 <_tx_thread_sleep>
400082dc:	eafffff9 	b	400082c8 <UVCAppThread_Entry+0xa4c>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
400082e0:	e59f1120 	ldr	r1, [pc, #288]	; 40008408 <UVCAppThread_Entry+0xb8c>
400082e4:	e3a00001 	mov	r0, #1
400082e8:	eb002ae3 	bl	40012e7c <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
400082ec:	e59f0118 	ldr	r0, [pc, #280]	; 4000840c <UVCAppThread_Entry+0xb90>
400082f0:	eb004c15 	bl	4001b34c <CyU3PGpifLoad>
400082f4:	e1a02000 	mov	r2, r0
400082f8:	eaffffe2 	b	40008288 <UVCAppThread_Entry+0xa0c>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400082fc:	e59f0094 	ldr	r0, [pc, #148]	; 40008398 <UVCAppThread_Entry+0xb1c>
40008300:	e3a0e002 	mov	lr, #2
40008304:	e1a01004 	mov	r1, r4
40008308:	e1a02000 	mov	r2, r0
4000830c:	e1a03004 	mov	r3, r4
40008310:	e58de000 	str	lr, [sp]
40008314:	eb004d07 	bl	4001b738 <CyU3PGpifSMSwitch>
40008318:	eafffe8a 	b	40007d48 <UVCAppThread_Entry+0x4cc>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
4000831c:	e3a00004 	mov	r0, #4
40008320:	e59f10e8 	ldr	r1, [pc, #232]	; 40008410 <UVCAppThread_Entry+0xb94>
40008324:	eb002ad4 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008328:	e59f107c 	ldr	r1, [pc, #124]	; 400083ac <UVCAppThread_Entry+0xb30>
4000832c:	e3a00004 	mov	r0, #4
40008330:	eb002ad1 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008334:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008338:	eb00018d 	bl	40008974 <_tx_thread_sleep>
4000833c:	eafffff9 	b	40008328 <UVCAppThread_Entry+0xaac>
40008340:	400116bc 	.word	0x400116bc
40008344:	0001c200 	.word	0x0001c200
40008348:	000186a0 	.word	0x000186a0
4000834c:	40030f90 	.word	0x40030f90
40008350:	40004fa0 	.word	0x40004fa0
40008354:	40004cac 	.word	0x40004cac
40008358:	40004b3c 	.word	0x40004b3c
4000835c:	40010c64 	.word	0x40010c64
40008360:	40010c78 	.word	0x40010c78
40008364:	40010c8c 	.word	0x40010c8c
40008368:	40010d84 	.word	0x40010d84
4000836c:	40010ca4 	.word	0x40010ca4
40008370:	40010c98 	.word	0x40010c98
40008374:	40010d9c 	.word	0x40010d9c
40008378:	40010e88 	.word	0x40010e88
4000837c:	40010e8c 	.word	0x40010e8c
40008380:	40010ec4 	.word	0x40010ec4
40008384:	00003f01 	.word	0x00003f01
40008388:	00000302 	.word	0x00000302
4000838c:	40033030 	.word	0x40033030
40008390:	400330d0 	.word	0x400330d0
40008394:	00000303 	.word	0x00000303
40008398:	00000101 	.word	0x00000101
4000839c:	40004a00 	.word	0x40004a00
400083a0:	40032ee4 	.word	0x40032ee4
400083a4:	40030000 	.word	0x40030000
400083a8:	400116dc 	.word	0x400116dc
400083ac:	40011244 	.word	0x40011244
400083b0:	400116f8 	.word	0x400116f8
400083b4:	40011714 	.word	0x40011714
400083b8:	400118e4 	.word	0x400118e4
400083bc:	400119c0 	.word	0x400119c0
400083c0:	4001184c 	.word	0x4001184c
400083c4:	40011818 	.word	0x40011818
400083c8:	400117e4 	.word	0x400117e4
400083cc:	400117b8 	.word	0x400117b8
400083d0:	4001178c 	.word	0x4001178c
400083d4:	40011764 	.word	0x40011764
400083d8:	40011740 	.word	0x40011740
400083dc:	40011a14 	.word	0x40011a14
400083e0:	400119e8 	.word	0x400119e8
400083e4:	40011918 	.word	0x40011918
400083e8:	400118b4 	.word	0x400118b4
400083ec:	40011884 	.word	0x40011884
400083f0:	40011990 	.word	0x40011990
400083f4:	40011958 	.word	0x40011958
400083f8:	40011a48 	.word	0x40011a48
400083fc:	40011a8c 	.word	0x40011a8c
40008400:	40011054 	.word	0x40011054
40008404:	40011ad4 	.word	0x40011ad4
40008408:	40011a7c 	.word	0x40011a7c
4000840c:	40011038 	.word	0x40011038
40008410:	40011a9c 	.word	0x40011a9c

40008414 <CyFxUVCApplnI2CInit>:

/* I2C initialization. */
//static void
void
CyFxUVCApplnI2CInit (void)
{
40008414:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40008418:	e24dd014 	sub	sp, sp, #20
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
4000841c:	eb006b95 	bl	40023278 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40008420:	e2502000 	subs	r2, r0, #0
40008424:	1a00000b 	bne	40008458 <CyFxUVCApplnI2CInit+0x44>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40008428:	e59fc070 	ldr	ip, [pc, #112]	; 400084a0 <CyFxUVCApplnI2CInit+0x8c>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
4000842c:	e3e03000 	mvn	r3, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008430:	e1a0000d 	mov	r0, sp
40008434:	e1a01002 	mov	r1, r2
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40008438:	e58dc000 	str	ip, [sp]
    i2cConfig.isDma      = CyFalse;
4000843c:	e98d000c 	stmib	sp, {r2, r3}
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;
40008440:	e1cd30bc 	strh	r3, [sp, #12]

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008444:	eb006c84 	bl	4002365c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40008448:	e3500000 	cmp	r0, #0
4000844c:	1a00000a 	bne	4000847c <CyFxUVCApplnI2CInit+0x68>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
        CyFxAppErrorHandler (status);
    }
}
40008450:	e28dd014 	add	sp, sp, #20
40008454:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40008458:	e3a00004 	mov	r0, #4
4000845c:	e59f1040 	ldr	r1, [pc, #64]	; 400084a4 <CyFxUVCApplnI2CInit+0x90>
40008460:	eb002a85 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008464:	e59f103c 	ldr	r1, [pc, #60]	; 400084a8 <CyFxUVCApplnI2CInit+0x94>
40008468:	e3a00004 	mov	r0, #4
4000846c:	eb002a82 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008470:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008474:	eb00013e 	bl	40008974 <_tx_thread_sleep>
40008478:	eafffff9 	b	40008464 <CyFxUVCApplnI2CInit+0x50>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
4000847c:	e3a00004 	mov	r0, #4
40008480:	e59f1024 	ldr	r1, [pc, #36]	; 400084ac <CyFxUVCApplnI2CInit+0x98>
40008484:	eb002a7c 	bl	40012e7c <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008488:	e59f1018 	ldr	r1, [pc, #24]	; 400084a8 <CyFxUVCApplnI2CInit+0x94>
4000848c:	e3a00004 	mov	r0, #4
40008490:	eb002a79 	bl	40012e7c <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008494:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008498:	eb000135 	bl	40008974 <_tx_thread_sleep>
4000849c:	eafffff9 	b	40008488 <CyFxUVCApplnI2CInit+0x74>
400084a0:	000186a0 	.word	0x000186a0
400084a4:	400116dc 	.word	0x400116dc
400084a8:	40011244 	.word	0x40011244
400084ac:	400116f8 	.word	0x400116f8

400084b0 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400084b0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084b4:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400084b8:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084bc:	ebffec6c 	bl	40003674 <CyU3PMemAlloc>
400084c0:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084c4:	e3a00a01 	mov	r0, #4096	; 0x1000
400084c8:	ebffec69 	bl	40003674 <CyU3PMemAlloc>
400084cc:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084d0:	e3a00a01 	mov	r0, #4096	; 0x1000
400084d4:	ebffec66 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400084d8:	e35a0000 	cmp	sl, #0
400084dc:	135b0000 	cmpne	fp, #0
400084e0:	13a09000 	movne	r9, #0
400084e4:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084e8:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400084ec:	1a000000 	bne	400084f4 <CyFxApplicationDefine+0x44>
400084f0:	eafffffe 	b	400084f0 <CyFxApplicationDefine+0x40>
400084f4:	e3500000 	cmp	r0, #0
400084f8:	0afffffc 	beq	400084f0 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400084fc:	e28d4028 	add	r4, sp, #40	; 0x28
40008500:	e1a00004 	mov	r0, r4
40008504:	e3a01040 	mov	r1, #64	; 0x40
40008508:	e59f2118 	ldr	r2, [pc, #280]	; 40008628 <CyFxApplicationDefine+0x178>
4000850c:	ebffebab 	bl	400033c0 <cmdbufCreate>
40008510:	e1a05004 	mov	r5, r4
40008514:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
40008518:	e59f710c 	ldr	r7, [pc, #268]	; 4000862c <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000851c:	e59f810c 	ldr	r8, [pc, #268]	; 40008630 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008520:	e1a0c007 	mov	ip, r7
40008524:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008528:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000852c:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008530:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008534:	e59f20f8 	ldr	r2, [pc, #248]	; 40008634 <CyFxApplicationDefine+0x184>
40008538:	e1a00004 	mov	r0, r4
4000853c:	e3a01020 	mov	r1, #32
40008540:	ebffeb9e 	bl	400033c0 <cmdbufCreate>
40008544:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
40008548:	e1a0c008 	mov	ip, r8
4000854c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008550:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008554:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008558:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
4000855c:	e1a00007 	mov	r0, r7
40008560:	ebffebae 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
40008564:	e1a00008 	mov	r0, r8
40008568:	ebffebac 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000856c:	e3a050a8 	mov	r5, #168	; 0xa8
40008570:	e3a0ca01 	mov	ip, #4096	; 0x1000
40008574:	e59f00bc 	ldr	r0, [pc, #188]	; 40008638 <CyFxApplicationDefine+0x188>
40008578:	e59f10bc 	ldr	r1, [pc, #188]	; 4000863c <CyFxApplicationDefine+0x18c>
4000857c:	e59f20bc 	ldr	r2, [pc, #188]	; 40008640 <CyFxApplicationDefine+0x190>
40008580:	e1a03009 	mov	r3, r9
40008584:	e88d1400 	stm	sp, {sl, ip}
40008588:	e58d6008 	str	r6, [sp, #8]
4000858c:	e58d600c 	str	r6, [sp, #12]
40008590:	e58d9010 	str	r9, [sp, #16]
40008594:	e58d4014 	str	r4, [sp, #20]
40008598:	e58d5018 	str	r5, [sp, #24]
4000859c:	eb0007c7 	bl	4000a4c0 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400085a0:	e250c000 	subs	ip, r0, #0
400085a4:	1affffd1 	bne	400084f0 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
400085a8:	e1a0300c 	mov	r3, ip
400085ac:	e3a07b02 	mov	r7, #2048	; 0x800
400085b0:	e59f008c 	ldr	r0, [pc, #140]	; 40008644 <CyFxApplicationDefine+0x194>
400085b4:	e59f108c 	ldr	r1, [pc, #140]	; 40008648 <CyFxApplicationDefine+0x198>
400085b8:	e59f208c 	ldr	r2, [pc, #140]	; 4000864c <CyFxApplicationDefine+0x19c>
400085bc:	e58dc010 	str	ip, [sp, #16]
400085c0:	e58db000 	str	fp, [sp]
400085c4:	e58d7004 	str	r7, [sp, #4]
400085c8:	e58d6008 	str	r6, [sp, #8]
400085cc:	e58d600c 	str	r6, [sp, #12]
400085d0:	e58d4014 	str	r4, [sp, #20]
400085d4:	e58d5018 	str	r5, [sp, #24]
400085d8:	eb0007b8 	bl	4000a4c0 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400085dc:	e250c000 	subs	ip, r0, #0
400085e0:	1affffc2 	bne	400084f0 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
400085e4:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400085e8:	e59f0060 	ldr	r0, [pc, #96]	; 40008650 <CyFxApplicationDefine+0x1a0>
400085ec:	e59f1060 	ldr	r1, [pc, #96]	; 40008654 <CyFxApplicationDefine+0x1a4>
400085f0:	e59f2060 	ldr	r2, [pc, #96]	; 40008658 <CyFxApplicationDefine+0x1a8>
400085f4:	e1a0300c 	mov	r3, ip
400085f8:	e58de000 	str	lr, [sp]
400085fc:	e58d7004 	str	r7, [sp, #4]
40008600:	e58d6008 	str	r6, [sp, #8]
40008604:	e58d600c 	str	r6, [sp, #12]
40008608:	e58dc010 	str	ip, [sp, #16]
4000860c:	e58d4014 	str	r4, [sp, #20]
40008610:	e58d5018 	str	r5, [sp, #24]
40008614:	eb0007a9 	bl	4000a4c0 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008618:	e3500000 	cmp	r0, #0
4000861c:	1affffb3 	bne	400084f0 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008620:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008624:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40008628:	400330d4 	.word	0x400330d4
4000862c:	40032ec4 	.word	0x40032ec4
40008630:	40033110 	.word	0x40033110
40008634:	40032ff8 	.word	0x40032ff8
40008638:	4003102c 	.word	0x4003102c
4000863c:	40011b0c 	.word	0x40011b0c
40008640:	4000787c 	.word	0x4000787c
40008644:	400310d4 	.word	0x400310d4
40008648:	40011b20 	.word	0x40011b20
4000864c:	40006b20 	.word	0x40006b20
40008650:	4003117c 	.word	0x4003117c
40008654:	40011b38 	.word	0x40011b38
40008658:	400047c0 	.word	0x400047c0

4000865c <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
4000865c:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008660:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008664:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
40008668:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000866c:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008670:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008674:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008678:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
4000867c:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008680:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008684:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
40008688:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
4000868c:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008690:	eb002731 	bl	4001235c <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008694:	e2504000 	subs	r4, r0, #0
40008698:	0a000000 	beq	400086a0 <main+0x44>
4000869c:	eafffffe 	b	4000869c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
400086a0:	e1a01004 	mov	r1, r4
400086a4:	e1a02004 	mov	r2, r4
400086a8:	e1a00005 	mov	r0, r5
400086ac:	eb002704 	bl	400122c4 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400086b0:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
400086b4:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
400086b8:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
400086bc:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
400086c0:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
400086c4:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
400086c8:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
400086cc:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
400086d0:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
400086d4:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
400086d8:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400086dc:	eb0028c8 	bl	40012a04 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
400086e0:	e2504000 	subs	r4, r0, #0
400086e4:	1affffec 	bne	4000869c <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
400086e8:	eb000002 	bl	400086f8 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
400086ec:	e1a00004 	mov	r0, r4
400086f0:	e28dd03c 	add	sp, sp, #60	; 0x3c
400086f4:	e8bd8030 	pop	{r4, r5, pc}

400086f8 <_tx_initialize_kernel_enter>:
400086f8:	e92d4010 	push	{r4, lr}
400086fc:	e59f004c 	ldr	r0, [pc, #76]	; 40008750 <_tx_initialize_kernel_enter+0x58>
40008700:	e5900000 	ldr	r0, [r0]
40008704:	e59f1048 	ldr	r1, [pc, #72]	; 40008754 <_tx_initialize_kernel_enter+0x5c>
40008708:	e1500001 	cmp	r0, r1
4000870c:	0a000004 	beq	40008724 <_tx_initialize_kernel_enter+0x2c>
40008710:	e1e00221 	mvn	r0, r1, lsr #4
40008714:	e59f1034 	ldr	r1, [pc, #52]	; 40008750 <_tx_initialize_kernel_enter+0x58>
40008718:	e5810000 	str	r0, [r1]
4000871c:	eb0009ee 	bl	4000aedc <_tx_initialize_low_level>
40008720:	eb00105f 	bl	4000c8a4 <_tx_initialize_high_level>
40008724:	e59f002c 	ldr	r0, [pc, #44]	; 40008758 <_tx_initialize_kernel_enter+0x60>
40008728:	e59f1020 	ldr	r1, [pc, #32]	; 40008750 <_tx_initialize_kernel_enter+0x58>
4000872c:	e5810000 	str	r0, [r1]
40008730:	e59f0024 	ldr	r0, [pc, #36]	; 4000875c <_tx_initialize_kernel_enter+0x64>
40008734:	e5900000 	ldr	r0, [r0]
40008738:	ebffebb9 	bl	40003624 <tx_application_define>
4000873c:	e3a00000 	mov	r0, #0
40008740:	e59f1008 	ldr	r1, [pc, #8]	; 40008750 <_tx_initialize_kernel_enter+0x58>
40008744:	e5810000 	str	r0, [r1]
40008748:	eb00091f 	bl	4000abcc <_tx_thread_schedule>
4000874c:	e8bd8010 	pop	{r4, pc}
40008750:	40030e30 	.word	0x40030e30
40008754:	f0f0f0f1 	.word	0xf0f0f0f1
40008758:	f0f0f0f0 	.word	0xf0f0f0f0
4000875c:	40030dc8 	.word	0x40030dc8

40008760 <_tx_thread_identify>:
40008760:	e10f1000 	mrs	r1, CPSR
40008764:	e3812080 	orr	r2, r1, #128	; 0x80
40008768:	e121f002 	msr	CPSR_c, r2
4000876c:	e59f30e0 	ldr	r3, [pc, #224]	; 40008854 <_tx_thread_identify+0xf4>
40008770:	e5930000 	ldr	r0, [r3]
40008774:	e3500000 	cmp	r0, #0
40008778:	0a000031 	beq	40008844 <_tx_thread_identify+0xe4>
4000877c:	e59f30d4 	ldr	r3, [pc, #212]	; 40008858 <_tx_thread_identify+0xf8>
40008780:	e5933000 	ldr	r3, [r3]
40008784:	e2833001 	add	r3, r3, #1
40008788:	e59fc0c8 	ldr	ip, [pc, #200]	; 40008858 <_tx_thread_identify+0xf8>
4000878c:	e58c3000 	str	r3, [ip]
40008790:	e580300c 	str	r3, [r0, #12]
40008794:	e59f30c0 	ldr	r3, [pc, #192]	; 4000885c <_tx_thread_identify+0xfc>
40008798:	e5933000 	ldr	r3, [r3]
4000879c:	e3530000 	cmp	r3, #0
400087a0:	1a000006 	bne	400087c0 <_tx_thread_identify+0x60>
400087a4:	e59f30b4 	ldr	r3, [pc, #180]	; 40008860 <_tx_thread_identify+0x100>
400087a8:	e5933000 	ldr	r3, [r3]
400087ac:	e5803000 	str	r3, [r0]
400087b0:	e5903000 	ldr	r3, [r0]
400087b4:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400087b8:	e5803004 	str	r3, [r0, #4]
400087bc:	ea00000d 	b	400087f8 <_tx_thread_identify+0x98>
400087c0:	e59f3094 	ldr	r3, [pc, #148]	; 4000885c <_tx_thread_identify+0xfc>
400087c4:	e5933000 	ldr	r3, [r3]
400087c8:	e59fc094 	ldr	ip, [pc, #148]	; 40008864 <_tx_thread_identify+0x104>
400087cc:	e153000c 	cmp	r3, ip
400087d0:	2a000004 	bcs	400087e8 <_tx_thread_identify+0x88>
400087d4:	e3e03000 	mvn	r3, #0
400087d8:	e5803000 	str	r3, [r0]
400087dc:	e3a03000 	mov	r3, #0
400087e0:	e5803004 	str	r3, [r0, #4]
400087e4:	ea000003 	b	400087f8 <_tx_thread_identify+0x98>
400087e8:	e59f3074 	ldr	r3, [pc, #116]	; 40008864 <_tx_thread_identify+0x104>
400087ec:	e5803000 	str	r3, [r0]
400087f0:	e3a03000 	mov	r3, #0
400087f4:	e5803004 	str	r3, [r0, #4]
400087f8:	e3a03067 	mov	r3, #103	; 0x67
400087fc:	e5803008 	str	r3, [r0, #8]
40008800:	e3a03000 	mov	r3, #0
40008804:	e5803010 	str	r3, [r0, #16]
40008808:	e5803014 	str	r3, [r0, #20]
4000880c:	e5803018 	str	r3, [r0, #24]
40008810:	e580301c 	str	r3, [r0, #28]
40008814:	e2800020 	add	r0, r0, #32
40008818:	e59f3048 	ldr	r3, [pc, #72]	; 40008868 <_tx_thread_identify+0x108>
4000881c:	e5933000 	ldr	r3, [r3]
40008820:	e1500003 	cmp	r0, r3
40008824:	3a000001 	bcc	40008830 <_tx_thread_identify+0xd0>
40008828:	e59f303c 	ldr	r3, [pc, #60]	; 4000886c <_tx_thread_identify+0x10c>
4000882c:	e5930000 	ldr	r0, [r3]
40008830:	e59f301c 	ldr	r3, [pc, #28]	; 40008854 <_tx_thread_identify+0xf4>
40008834:	e5830000 	str	r0, [r3]
40008838:	e59f3030 	ldr	r3, [pc, #48]	; 40008870 <_tx_thread_identify+0x110>
4000883c:	e5933000 	ldr	r3, [r3]
40008840:	e5830020 	str	r0, [r3, #32]
40008844:	e121f001 	msr	CPSR_c, r1
40008848:	e59f0010 	ldr	r0, [pc, #16]	; 40008860 <_tx_thread_identify+0x100>
4000884c:	e5900000 	ldr	r0, [r0]
40008850:	e12fff1e 	bx	lr
40008854:	40030ea4 	.word	0x40030ea4
40008858:	40030ea8 	.word	0x40030ea8
4000885c:	40030e30 	.word	0x40030e30
40008860:	40030e38 	.word	0x40030e38
40008864:	f0f0f0f0 	.word	0xf0f0f0f0
40008868:	40030ea0 	.word	0x40030ea0
4000886c:	40030e9c 	.word	0x40030e9c
40008870:	40030e90 	.word	0x40030e90

40008874 <_tx_thread_initialize>:
40008874:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008878:	e3a00000 	mov	r0, #0
4000887c:	e59f10c0 	ldr	r1, [pc, #192]	; 40008944 <_tx_thread_initialize+0xd0>
40008880:	e5810000 	str	r0, [r1]
40008884:	e59f10bc 	ldr	r1, [pc, #188]	; 40008948 <_tx_thread_initialize+0xd4>
40008888:	e5810000 	str	r0, [r1]
4000888c:	e59f00b8 	ldr	r0, [pc, #184]	; 4000894c <_tx_thread_initialize+0xd8>
40008890:	e3a01000 	mov	r1, #0
40008894:	e5801000 	str	r1, [r0]
40008898:	e59f00b0 	ldr	r0, [pc, #176]	; 40008950 <_tx_thread_initialize+0xdc>
4000889c:	e5801000 	str	r1, [r0]
400088a0:	e3a00020 	mov	r0, #32
400088a4:	e59f10a8 	ldr	r1, [pc, #168]	; 40008954 <_tx_thread_initialize+0xe0>
400088a8:	e5810000 	str	r0, [r1]
400088ac:	e3a00000 	mov	r0, #0
400088b0:	e59f10a0 	ldr	r1, [pc, #160]	; 40008958 <_tx_thread_initialize+0xe4>
400088b4:	e5c10000 	strb	r0, [r1]
400088b8:	e2816001 	add	r6, r1, #1
400088bc:	e3a04001 	mov	r4, #1
400088c0:	ea000009 	b	400088ec <_tx_thread_initialize+0x78>
400088c4:	e1a07004 	mov	r7, r4
400088c8:	e3a05000 	mov	r5, #0
400088cc:	ea000002 	b	400088dc <_tx_thread_initialize+0x68>
400088d0:	e1a070a7 	lsr	r7, r7, #1
400088d4:	e2850001 	add	r0, r5, #1
400088d8:	e20050ff 	and	r5, r0, #255	; 0xff
400088dc:	e3170001 	tst	r7, #1
400088e0:	0afffffa 	beq	400088d0 <_tx_thread_initialize+0x5c>
400088e4:	e4c65001 	strb	r5, [r6], #1
400088e8:	e2844001 	add	r4, r4, #1
400088ec:	e3540c01 	cmp	r4, #256	; 0x100
400088f0:	3afffff3 	bcc	400088c4 <_tx_thread_initialize+0x50>
400088f4:	e3a01080 	mov	r1, #128	; 0x80
400088f8:	e59f005c 	ldr	r0, [pc, #92]	; 4000895c <_tx_thread_initialize+0xe8>
400088fc:	eb002af4 	bl	400134d4 <__aeabi_memclr4>
40008900:	e3a00000 	mov	r0, #0
40008904:	e59f1054 	ldr	r1, [pc, #84]	; 40008960 <_tx_thread_initialize+0xec>
40008908:	e5810000 	str	r0, [r1]
4000890c:	e59f1050 	ldr	r1, [pc, #80]	; 40008964 <_tx_thread_initialize+0xf0>
40008910:	e5810000 	str	r0, [r1]
40008914:	e59f104c 	ldr	r1, [pc, #76]	; 40008968 <_tx_thread_initialize+0xf4>
40008918:	e5810000 	str	r0, [r1]
4000891c:	e59f1048 	ldr	r1, [pc, #72]	; 4000896c <_tx_thread_initialize+0xf8>
40008920:	e5810000 	str	r0, [r1]
40008924:	e59f0044 	ldr	r0, [pc, #68]	; 40008970 <_tx_thread_initialize+0xfc>
40008928:	e5900000 	ldr	r0, [r0]
4000892c:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008930:	e3800c01 	orr	r0, r0, #256	; 0x100
40008934:	e3800002 	orr	r0, r0, #2
40008938:	e59f1030 	ldr	r1, [pc, #48]	; 40008970 <_tx_thread_initialize+0xfc>
4000893c:	e5810000 	str	r0, [r1]
40008940:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008944:	40030e38 	.word	0x40030e38
40008948:	40030e3c 	.word	0x40030e3c
4000894c:	40030e48 	.word	0x40030e48
40008950:	40030e4c 	.word	0x40030e4c
40008954:	40030e50 	.word	0x40030e50
40008958:	40032774 	.word	0x40032774
4000895c:	40032874 	.word	0x40032874
40008960:	40030e40 	.word	0x40030e40
40008964:	40030e44 	.word	0x40030e44
40008968:	40030e54 	.word	0x40030e54
4000896c:	40030e5c 	.word	0x40030e5c
40008970:	40030e58 	.word	0x40030e58

40008974 <_tx_thread_sleep>:
40008974:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008978:	e1a04000 	mov	r4, r0
4000897c:	e59f018c 	ldr	r0, [pc, #396]	; 40008b10 <_tx_thread_sleep+0x19c>
40008980:	e5900000 	ldr	r0, [r0]
40008984:	e58d0000 	str	r0, [sp]
40008988:	e59d0000 	ldr	r0, [sp]
4000898c:	e3500000 	cmp	r0, #0
40008990:	0a000007 	beq	400089b4 <_tx_thread_sleep+0x40>
40008994:	e59f1178 	ldr	r1, [pc, #376]	; 40008b14 <_tx_thread_sleep+0x1a0>
40008998:	e59d0000 	ldr	r0, [sp]
4000899c:	e1500001 	cmp	r0, r1
400089a0:	0a000003 	beq	400089b4 <_tx_thread_sleep+0x40>
400089a4:	e59f016c 	ldr	r0, [pc, #364]	; 40008b18 <_tx_thread_sleep+0x1a4>
400089a8:	e5900000 	ldr	r0, [r0]
400089ac:	e3500000 	cmp	r0, #0
400089b0:	0a000001 	beq	400089bc <_tx_thread_sleep+0x48>
400089b4:	e3a00013 	mov	r0, #19
400089b8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400089bc:	e3540000 	cmp	r4, #0
400089c0:	1a000001 	bne	400089cc <_tx_thread_sleep+0x58>
400089c4:	e3a00000 	mov	r0, #0
400089c8:	eafffffa 	b	400089b8 <_tx_thread_sleep+0x44>
400089cc:	e10f5000 	mrs	r5, CPSR
400089d0:	e3856080 	orr	r6, r5, #128	; 0x80
400089d4:	e121f006 	msr	CPSR_c, r6
400089d8:	e59f113c 	ldr	r1, [pc, #316]	; 40008b1c <_tx_thread_sleep+0x1a8>
400089dc:	e5910000 	ldr	r0, [r1]
400089e0:	e3500000 	cmp	r0, #0
400089e4:	0a000033 	beq	40008ab8 <_tx_thread_sleep+0x144>
400089e8:	e59f1130 	ldr	r1, [pc, #304]	; 40008b20 <_tx_thread_sleep+0x1ac>
400089ec:	e5911000 	ldr	r1, [r1]
400089f0:	e2811001 	add	r1, r1, #1
400089f4:	e59f2124 	ldr	r2, [pc, #292]	; 40008b20 <_tx_thread_sleep+0x1ac>
400089f8:	e5821000 	str	r1, [r2]
400089fc:	e580100c 	str	r1, [r0, #12]
40008a00:	e59f1110 	ldr	r1, [pc, #272]	; 40008b18 <_tx_thread_sleep+0x1a4>
40008a04:	e5911000 	ldr	r1, [r1]
40008a08:	e3510000 	cmp	r1, #0
40008a0c:	1a000006 	bne	40008a2c <_tx_thread_sleep+0xb8>
40008a10:	e59f10f8 	ldr	r1, [pc, #248]	; 40008b10 <_tx_thread_sleep+0x19c>
40008a14:	e5911000 	ldr	r1, [r1]
40008a18:	e5801000 	str	r1, [r0]
40008a1c:	e5901000 	ldr	r1, [r0]
40008a20:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008a24:	e5801004 	str	r1, [r0, #4]
40008a28:	ea00000d 	b	40008a64 <_tx_thread_sleep+0xf0>
40008a2c:	e59f10e4 	ldr	r1, [pc, #228]	; 40008b18 <_tx_thread_sleep+0x1a4>
40008a30:	e5911000 	ldr	r1, [r1]
40008a34:	e59f20e8 	ldr	r2, [pc, #232]	; 40008b24 <_tx_thread_sleep+0x1b0>
40008a38:	e1510002 	cmp	r1, r2
40008a3c:	2a000004 	bcs	40008a54 <_tx_thread_sleep+0xe0>
40008a40:	e3e01000 	mvn	r1, #0
40008a44:	e5801000 	str	r1, [r0]
40008a48:	e3a01000 	mov	r1, #0
40008a4c:	e5801004 	str	r1, [r0, #4]
40008a50:	ea000003 	b	40008a64 <_tx_thread_sleep+0xf0>
40008a54:	e59f10c8 	ldr	r1, [pc, #200]	; 40008b24 <_tx_thread_sleep+0x1b0>
40008a58:	e5801000 	str	r1, [r0]
40008a5c:	e3a01000 	mov	r1, #0
40008a60:	e5801004 	str	r1, [r0, #4]
40008a64:	e3a01070 	mov	r1, #112	; 0x70
40008a68:	e5801008 	str	r1, [r0, #8]
40008a6c:	e5804010 	str	r4, [r0, #16]
40008a70:	e59d1000 	ldr	r1, [sp]
40008a74:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008a78:	e5801014 	str	r1, [r0, #20]
40008a7c:	e580d018 	str	sp, [r0, #24]
40008a80:	e3a01000 	mov	r1, #0
40008a84:	e580101c 	str	r1, [r0, #28]
40008a88:	e2800020 	add	r0, r0, #32
40008a8c:	e59f1094 	ldr	r1, [pc, #148]	; 40008b28 <_tx_thread_sleep+0x1b4>
40008a90:	e5911000 	ldr	r1, [r1]
40008a94:	e1500001 	cmp	r0, r1
40008a98:	3a000001 	bcc	40008aa4 <_tx_thread_sleep+0x130>
40008a9c:	e59f1088 	ldr	r1, [pc, #136]	; 40008b2c <_tx_thread_sleep+0x1b8>
40008aa0:	e5910000 	ldr	r0, [r1]
40008aa4:	e59f1070 	ldr	r1, [pc, #112]	; 40008b1c <_tx_thread_sleep+0x1a8>
40008aa8:	e5810000 	str	r0, [r1]
40008aac:	e59f107c 	ldr	r1, [pc, #124]	; 40008b30 <_tx_thread_sleep+0x1bc>
40008ab0:	e5911000 	ldr	r1, [r1]
40008ab4:	e5810020 	str	r0, [r1, #32]
40008ab8:	e3a00004 	mov	r0, #4
40008abc:	e59d1000 	ldr	r1, [sp]
40008ac0:	e5810030 	str	r0, [r1, #48]	; 0x30
40008ac4:	e3a00001 	mov	r0, #1
40008ac8:	e59d1000 	ldr	r1, [sp]
40008acc:	e5810038 	str	r0, [r1, #56]	; 0x38
40008ad0:	e3a00000 	mov	r0, #0
40008ad4:	e59d1000 	ldr	r1, [sp]
40008ad8:	e5810084 	str	r0, [r1, #132]	; 0x84
40008adc:	e59d0000 	ldr	r0, [sp]
40008ae0:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008ae4:	e59f0048 	ldr	r0, [pc, #72]	; 40008b34 <_tx_thread_sleep+0x1c0>
40008ae8:	e5900000 	ldr	r0, [r0]
40008aec:	e2800001 	add	r0, r0, #1
40008af0:	e59f103c 	ldr	r1, [pc, #60]	; 40008b34 <_tx_thread_sleep+0x1c0>
40008af4:	e5810000 	str	r0, [r1]
40008af8:	e121f005 	msr	CPSR_c, r5
40008afc:	e59d0000 	ldr	r0, [sp]
40008b00:	eb00000c 	bl	40008b38 <_tx_thread_system_suspend>
40008b04:	e59d0000 	ldr	r0, [sp]
40008b08:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008b0c:	eaffffa9 	b	400089b8 <_tx_thread_sleep+0x44>
40008b10:	40030e38 	.word	0x40030e38
40008b14:	40032974 	.word	0x40032974
40008b18:	40030e30 	.word	0x40030e30
40008b1c:	40030ea4 	.word	0x40030ea4
40008b20:	40030ea8 	.word	0x40030ea8
40008b24:	f0f0f0f0 	.word	0xf0f0f0f0
40008b28:	40030ea0 	.word	0x40030ea0
40008b2c:	40030e9c 	.word	0x40030e9c
40008b30:	40030e90 	.word	0x40030e90
40008b34:	40030e54 	.word	0x40030e54

40008b38 <_tx_thread_system_suspend>:
40008b38:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008b3c:	e1a04000 	mov	r4, r0
40008b40:	e3a0b000 	mov	fp, #0
40008b44:	e59f05b0 	ldr	r0, [pc, #1456]	; 400090fc <_tx_thread_system_suspend+0x5c4>
40008b48:	e5900000 	ldr	r0, [r0]
40008b4c:	e1540000 	cmp	r4, r0
40008b50:	1a000009 	bne	40008b7c <_tx_thread_system_suspend+0x44>
40008b54:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008b58:	e58d0000 	str	r0, [sp]
40008b5c:	e59d0000 	ldr	r0, [sp]
40008b60:	e3500000 	cmp	r0, #0
40008b64:	0a000004 	beq	40008b7c <_tx_thread_system_suspend+0x44>
40008b68:	e59d0000 	ldr	r0, [sp]
40008b6c:	e3700001 	cmn	r0, #1
40008b70:	0a000001 	beq	40008b7c <_tx_thread_system_suspend+0x44>
40008b74:	e284004c 	add	r0, r4, #76	; 0x4c
40008b78:	eb00020a 	bl	400093a8 <_tx_timer_system_activate>
40008b7c:	e5940008 	ldr	r0, [r4, #8]
40008b80:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008b84:	e1500001 	cmp	r0, r1
40008b88:	2a000001 	bcs	40008b94 <_tx_thread_system_suspend+0x5c>
40008b8c:	e5940008 	ldr	r0, [r4, #8]
40008b90:	e5840040 	str	r0, [r4, #64]	; 0x40
40008b94:	e594000c 	ldr	r0, [r4, #12]
40008b98:	e5900000 	ldr	r0, [r0]
40008b9c:	e59f155c 	ldr	r1, [pc, #1372]	; 40009100 <_tx_thread_system_suspend+0x5c8>
40008ba0:	e1500001 	cmp	r0, r1
40008ba4:	1a000007 	bne	40008bc8 <_tx_thread_system_suspend+0x90>
40008ba8:	e5940010 	ldr	r0, [r4, #16]
40008bac:	e5900001 	ldr	r0, [r0, #1]
40008bb0:	e1500001 	cmp	r0, r1
40008bb4:	1a000003 	bne	40008bc8 <_tx_thread_system_suspend+0x90>
40008bb8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008bbc:	e594100c 	ldr	r1, [r4, #12]
40008bc0:	e1500001 	cmp	r0, r1
40008bc4:	2a000001 	bcs	40008bd0 <_tx_thread_system_suspend+0x98>
40008bc8:	e1a00004 	mov	r0, r4
40008bcc:	eb001941 	bl	4000f0d8 <_tx_thread_stack_error_handler>
40008bd0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008bd4:	e5100004 	ldr	r0, [r0, #-4]
40008bd8:	e59f1520 	ldr	r1, [pc, #1312]	; 40009100 <_tx_thread_system_suspend+0x5c8>
40008bdc:	e1500001 	cmp	r0, r1
40008be0:	0a000001 	beq	40008bec <_tx_thread_system_suspend+0xb4>
40008be4:	e1a00004 	mov	r0, r4
40008be8:	eb001905 	bl	4000f004 <_tx_thread_stack_analyze>
40008bec:	e10f5000 	mrs	r5, CPSR
40008bf0:	e3856080 	orr	r6, r5, #128	; 0x80
40008bf4:	e121f006 	msr	CPSR_c, r6
40008bf8:	e59f0504 	ldr	r0, [pc, #1284]	; 40009104 <_tx_thread_system_suspend+0x5cc>
40008bfc:	e5900000 	ldr	r0, [r0]
40008c00:	e2400001 	sub	r0, r0, #1
40008c04:	e59f14f8 	ldr	r1, [pc, #1272]	; 40009104 <_tx_thread_system_suspend+0x5cc>
40008c08:	e5810000 	str	r0, [r1]
40008c0c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008c10:	e3500000 	cmp	r0, #0
40008c14:	0a000112 	beq	40009064 <_tx_thread_system_suspend+0x52c>
40008c18:	e59f04e8 	ldr	r0, [pc, #1256]	; 40009108 <_tx_thread_system_suspend+0x5d0>
40008c1c:	e590a000 	ldr	sl, [r0]
40008c20:	e2801000 	add	r1, r0, #0
40008c24:	e5910000 	ldr	r0, [r1]
40008c28:	e3500000 	cmp	r0, #0
40008c2c:	0a000034 	beq	40008d04 <_tx_thread_system_suspend+0x1cc>
40008c30:	e59f14d4 	ldr	r1, [pc, #1236]	; 4000910c <_tx_thread_system_suspend+0x5d4>
40008c34:	e5911000 	ldr	r1, [r1]
40008c38:	e2811001 	add	r1, r1, #1
40008c3c:	e59f24c8 	ldr	r2, [pc, #1224]	; 4000910c <_tx_thread_system_suspend+0x5d4>
40008c40:	e5821000 	str	r1, [r2]
40008c44:	e580100c 	str	r1, [r0, #12]
40008c48:	e59f14c0 	ldr	r1, [pc, #1216]	; 40009110 <_tx_thread_system_suspend+0x5d8>
40008c4c:	e5911000 	ldr	r1, [r1]
40008c50:	e3510000 	cmp	r1, #0
40008c54:	1a000006 	bne	40008c74 <_tx_thread_system_suspend+0x13c>
40008c58:	e59f149c 	ldr	r1, [pc, #1180]	; 400090fc <_tx_thread_system_suspend+0x5c4>
40008c5c:	e5911000 	ldr	r1, [r1]
40008c60:	e5801000 	str	r1, [r0]
40008c64:	e5901000 	ldr	r1, [r0]
40008c68:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008c6c:	e5801004 	str	r1, [r0, #4]
40008c70:	ea00000d 	b	40008cac <_tx_thread_system_suspend+0x174>
40008c74:	e59f1494 	ldr	r1, [pc, #1172]	; 40009110 <_tx_thread_system_suspend+0x5d8>
40008c78:	e5911000 	ldr	r1, [r1]
40008c7c:	e59f2490 	ldr	r2, [pc, #1168]	; 40009114 <_tx_thread_system_suspend+0x5dc>
40008c80:	e1510002 	cmp	r1, r2
40008c84:	2a000004 	bcs	40008c9c <_tx_thread_system_suspend+0x164>
40008c88:	e3e01000 	mvn	r1, #0
40008c8c:	e5801000 	str	r1, [r0]
40008c90:	e3a01000 	mov	r1, #0
40008c94:	e5801004 	str	r1, [r0, #4]
40008c98:	ea000003 	b	40008cac <_tx_thread_system_suspend+0x174>
40008c9c:	e59f1470 	ldr	r1, [pc, #1136]	; 40009114 <_tx_thread_system_suspend+0x5dc>
40008ca0:	e5801000 	str	r1, [r0]
40008ca4:	e3a01000 	mov	r1, #0
40008ca8:	e5801004 	str	r1, [r0, #4]
40008cac:	e3a01002 	mov	r1, #2
40008cb0:	e5801008 	str	r1, [r0, #8]
40008cb4:	e5804010 	str	r4, [r0, #16]
40008cb8:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008cbc:	e5801014 	str	r1, [r0, #20]
40008cc0:	e28d1004 	add	r1, sp, #4
40008cc4:	e5801018 	str	r1, [r0, #24]
40008cc8:	e59f1448 	ldr	r1, [pc, #1096]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40008ccc:	e5911000 	ldr	r1, [r1]
40008cd0:	e580101c 	str	r1, [r0, #28]
40008cd4:	e2800020 	add	r0, r0, #32
40008cd8:	e59f143c 	ldr	r1, [pc, #1084]	; 4000911c <_tx_thread_system_suspend+0x5e4>
40008cdc:	e5911000 	ldr	r1, [r1]
40008ce0:	e1500001 	cmp	r0, r1
40008ce4:	3a000001 	bcc	40008cf0 <_tx_thread_system_suspend+0x1b8>
40008ce8:	e59f1430 	ldr	r1, [pc, #1072]	; 40009120 <_tx_thread_system_suspend+0x5e8>
40008cec:	e5910000 	ldr	r0, [r1]
40008cf0:	e59f1410 	ldr	r1, [pc, #1040]	; 40009108 <_tx_thread_system_suspend+0x5d0>
40008cf4:	e5810000 	str	r0, [r1]
40008cf8:	e59f1424 	ldr	r1, [pc, #1060]	; 40009124 <_tx_thread_system_suspend+0x5ec>
40008cfc:	e5911000 	ldr	r1, [r1]
40008d00:	e5810020 	str	r0, [r1, #32]
40008d04:	e35a0000 	cmp	sl, #0
40008d08:	0a000000 	beq	40008d10 <_tx_thread_system_suspend+0x1d8>
40008d0c:	e59ab00c 	ldr	fp, [sl, #12]
40008d10:	e3a00000 	mov	r0, #0
40008d14:	e5840038 	str	r0, [r4, #56]	; 0x38
40008d18:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40008d1c:	e5940020 	ldr	r0, [r4, #32]
40008d20:	e1500004 	cmp	r0, r4
40008d24:	0a000029 	beq	40008dd0 <_tx_thread_system_suspend+0x298>
40008d28:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40008d2c:	e5941020 	ldr	r1, [r4, #32]
40008d30:	e5810024 	str	r0, [r1, #36]	; 0x24
40008d34:	e5940020 	ldr	r0, [r4, #32]
40008d38:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40008d3c:	e5810020 	str	r0, [r1, #32]
40008d40:	e59f03e0 	ldr	r0, [pc, #992]	; 40009128 <_tx_thread_system_suspend+0x5f0>
40008d44:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008d48:	e1500004 	cmp	r0, r4
40008d4c:	1a0000c4 	bne	40009064 <_tx_thread_system_suspend+0x52c>
40008d50:	e59f13d0 	ldr	r1, [pc, #976]	; 40009128 <_tx_thread_system_suspend+0x5f0>
40008d54:	e5940020 	ldr	r0, [r4, #32]
40008d58:	e7810107 	str	r0, [r1, r7, lsl #2]
40008d5c:	e59f03c8 	ldr	r0, [pc, #968]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008d60:	e5900000 	ldr	r0, [r0]
40008d64:	e3500000 	cmp	r0, #0
40008d68:	0a000005 	beq	40008d84 <_tx_thread_system_suspend+0x24c>
40008d6c:	e59f03b8 	ldr	r0, [pc, #952]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008d70:	e5900000 	ldr	r0, [r0]
40008d74:	e3a01001 	mov	r1, #1
40008d78:	e1c00711 	bic	r0, r0, r1, lsl r7
40008d7c:	e59f13a8 	ldr	r1, [pc, #936]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008d80:	e5810000 	str	r0, [r1]
40008d84:	e59f038c 	ldr	r0, [pc, #908]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40008d88:	e5900000 	ldr	r0, [r0]
40008d8c:	e1540000 	cmp	r4, r0
40008d90:	1a0000b3 	bne	40009064 <_tx_thread_system_suspend+0x52c>
40008d94:	e59f038c 	ldr	r0, [pc, #908]	; 40009128 <_tx_thread_system_suspend+0x5f0>
40008d98:	e59f1390 	ldr	r1, [pc, #912]	; 40009130 <_tx_thread_system_suspend+0x5f8>
40008d9c:	e5911000 	ldr	r1, [r1]
40008da0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008da4:	e59f136c 	ldr	r1, [pc, #876]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40008da8:	e5810000 	str	r0, [r1]
40008dac:	e35a0000 	cmp	sl, #0
40008db0:	0a0000ab 	beq	40009064 <_tx_thread_system_suspend+0x52c>
40008db4:	e59a000c 	ldr	r0, [sl, #12]
40008db8:	e150000b 	cmp	r0, fp
40008dbc:	1a0000a8 	bne	40009064 <_tx_thread_system_suspend+0x52c>
40008dc0:	e2810000 	add	r0, r1, #0
40008dc4:	e5900000 	ldr	r0, [r0]
40008dc8:	e58a001c 	str	r0, [sl, #28]
40008dcc:	ea0000a4 	b	40009064 <_tx_thread_system_suspend+0x52c>
40008dd0:	e3a00000 	mov	r0, #0
40008dd4:	e59f134c 	ldr	r1, [pc, #844]	; 40009128 <_tx_thread_system_suspend+0x5f0>
40008dd8:	e7810107 	str	r0, [r1, r7, lsl #2]
40008ddc:	e59f0350 	ldr	r0, [pc, #848]	; 40009134 <_tx_thread_system_suspend+0x5fc>
40008de0:	e5900000 	ldr	r0, [r0]
40008de4:	e3a01001 	mov	r1, #1
40008de8:	e1c00711 	bic	r0, r0, r1, lsl r7
40008dec:	e59f1340 	ldr	r1, [pc, #832]	; 40009134 <_tx_thread_system_suspend+0x5fc>
40008df0:	e5810000 	str	r0, [r1]
40008df4:	e59f0330 	ldr	r0, [pc, #816]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008df8:	e5900000 	ldr	r0, [r0]
40008dfc:	e3500000 	cmp	r0, #0
40008e00:	0a000005 	beq	40008e1c <_tx_thread_system_suspend+0x2e4>
40008e04:	e59f0320 	ldr	r0, [pc, #800]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008e08:	e5900000 	ldr	r0, [r0]
40008e0c:	e3a01001 	mov	r1, #1
40008e10:	e1c00711 	bic	r0, r0, r1, lsl r7
40008e14:	e59f1310 	ldr	r1, [pc, #784]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008e18:	e5810000 	str	r0, [r1]
40008e1c:	e3a08000 	mov	r8, #0
40008e20:	e59f030c 	ldr	r0, [pc, #780]	; 40009134 <_tx_thread_system_suspend+0x5fc>
40008e24:	e5909000 	ldr	r9, [r0]
40008e28:	e20900ff 	and	r0, r9, #255	; 0xff
40008e2c:	e58d0004 	str	r0, [sp, #4]
40008e30:	e59d0004 	ldr	r0, [sp, #4]
40008e34:	e3500000 	cmp	r0, #0
40008e38:	1a00002a 	bne	40008ee8 <_tx_thread_system_suspend+0x3b0>
40008e3c:	e1a09429 	lsr	r9, r9, #8
40008e40:	e20900ff 	and	r0, r9, #255	; 0xff
40008e44:	e58d0004 	str	r0, [sp, #4]
40008e48:	e2888008 	add	r8, r8, #8
40008e4c:	e59d0004 	ldr	r0, [sp, #4]
40008e50:	e3500000 	cmp	r0, #0
40008e54:	1a000023 	bne	40008ee8 <_tx_thread_system_suspend+0x3b0>
40008e58:	e1a09429 	lsr	r9, r9, #8
40008e5c:	e20900ff 	and	r0, r9, #255	; 0xff
40008e60:	e58d0004 	str	r0, [sp, #4]
40008e64:	e2888008 	add	r8, r8, #8
40008e68:	e59d0004 	ldr	r0, [sp, #4]
40008e6c:	e3500000 	cmp	r0, #0
40008e70:	1a00001c 	bne	40008ee8 <_tx_thread_system_suspend+0x3b0>
40008e74:	e1a09429 	lsr	r9, r9, #8
40008e78:	e20900ff 	and	r0, r9, #255	; 0xff
40008e7c:	e58d0004 	str	r0, [sp, #4]
40008e80:	e2888008 	add	r8, r8, #8
40008e84:	e59d0004 	ldr	r0, [sp, #4]
40008e88:	e3500000 	cmp	r0, #0
40008e8c:	1a000015 	bne	40008ee8 <_tx_thread_system_suspend+0x3b0>
40008e90:	e3a00020 	mov	r0, #32
40008e94:	e59f1294 	ldr	r1, [pc, #660]	; 40009130 <_tx_thread_system_suspend+0x5f8>
40008e98:	e5810000 	str	r0, [r1]
40008e9c:	e3a00000 	mov	r0, #0
40008ea0:	e59f1270 	ldr	r1, [pc, #624]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40008ea4:	e5810000 	str	r0, [r1]
40008ea8:	e35a0000 	cmp	sl, #0
40008eac:	0a000004 	beq	40008ec4 <_tx_thread_system_suspend+0x38c>
40008eb0:	e59a000c 	ldr	r0, [sl, #12]
40008eb4:	e150000b 	cmp	r0, fp
40008eb8:	1a000001 	bne	40008ec4 <_tx_thread_system_suspend+0x38c>
40008ebc:	e3a00000 	mov	r0, #0
40008ec0:	e58a001c 	str	r0, [sl, #28]
40008ec4:	e121f005 	msr	CPSR_c, r5
40008ec8:	e59f0240 	ldr	r0, [pc, #576]	; 40009110 <_tx_thread_system_suspend+0x5d8>
40008ecc:	e5900000 	ldr	r0, [r0]
40008ed0:	e59f122c 	ldr	r1, [pc, #556]	; 40009104 <_tx_thread_system_suspend+0x5cc>
40008ed4:	e5911000 	ldr	r1, [r1]
40008ed8:	e1900001 	orrs	r0, r0, r1
40008edc:	1a000000 	bne	40008ee4 <_tx_thread_system_suspend+0x3ac>
40008ee0:	eb000725 	bl	4000ab7c <_tx_thread_system_return>
40008ee4:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40008ee8:	e59f0248 	ldr	r0, [pc, #584]	; 40009138 <_tx_thread_system_suspend+0x600>
40008eec:	e59d1004 	ldr	r1, [sp, #4]
40008ef0:	e7d00001 	ldrb	r0, [r0, r1]
40008ef4:	e0800008 	add	r0, r0, r8
40008ef8:	e59f1230 	ldr	r1, [pc, #560]	; 40009130 <_tx_thread_system_suspend+0x5f8>
40008efc:	e5810000 	str	r0, [r1]
40008f00:	e59f0210 	ldr	r0, [pc, #528]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40008f04:	e5900000 	ldr	r0, [r0]
40008f08:	e1540000 	cmp	r4, r0
40008f0c:	1a000054 	bne	40009064 <_tx_thread_system_suspend+0x52c>
40008f10:	e59f0210 	ldr	r0, [pc, #528]	; 40009128 <_tx_thread_system_suspend+0x5f0>
40008f14:	e5911000 	ldr	r1, [r1]
40008f18:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008f1c:	e59f11f4 	ldr	r1, [pc, #500]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40008f20:	e5810000 	str	r0, [r1]
40008f24:	e35a0000 	cmp	sl, #0
40008f28:	0a000005 	beq	40008f44 <_tx_thread_system_suspend+0x40c>
40008f2c:	e59a000c 	ldr	r0, [sl, #12]
40008f30:	e150000b 	cmp	r0, fp
40008f34:	1a000002 	bne	40008f44 <_tx_thread_system_suspend+0x40c>
40008f38:	e2810000 	add	r0, r1, #0
40008f3c:	e5900000 	ldr	r0, [r0]
40008f40:	e58a001c 	str	r0, [sl, #28]
40008f44:	e59f01e0 	ldr	r0, [pc, #480]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008f48:	e5900000 	ldr	r0, [r0]
40008f4c:	e3500000 	cmp	r0, #0
40008f50:	0a000043 	beq	40009064 <_tx_thread_system_suspend+0x52c>
40008f54:	e59f01a8 	ldr	r0, [pc, #424]	; 40009104 <_tx_thread_system_suspend+0x5cc>
40008f58:	e5900000 	ldr	r0, [r0]
40008f5c:	e2800001 	add	r0, r0, #1
40008f60:	e59f119c 	ldr	r1, [pc, #412]	; 40009104 <_tx_thread_system_suspend+0x5cc>
40008f64:	e5810000 	str	r0, [r1]
40008f68:	e121f005 	msr	CPSR_c, r5
40008f6c:	e10f5000 	mrs	r5, CPSR
40008f70:	e3856080 	orr	r6, r5, #128	; 0x80
40008f74:	e121f006 	msr	CPSR_c, r6
40008f78:	e2810000 	add	r0, r1, #0
40008f7c:	e5900000 	ldr	r0, [r0]
40008f80:	e2400001 	sub	r0, r0, #1
40008f84:	e5810000 	str	r0, [r1]
40008f88:	e3a08000 	mov	r8, #0
40008f8c:	e59f0198 	ldr	r0, [pc, #408]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40008f90:	e5909000 	ldr	r9, [r0]
40008f94:	e20900ff 	and	r0, r9, #255	; 0xff
40008f98:	e58d0004 	str	r0, [sp, #4]
40008f9c:	e59d0004 	ldr	r0, [sp, #4]
40008fa0:	e3500000 	cmp	r0, #0
40008fa4:	1a000011 	bne	40008ff0 <_tx_thread_system_suspend+0x4b8>
40008fa8:	e1a09429 	lsr	r9, r9, #8
40008fac:	e20900ff 	and	r0, r9, #255	; 0xff
40008fb0:	e58d0004 	str	r0, [sp, #4]
40008fb4:	e2888008 	add	r8, r8, #8
40008fb8:	e59d0004 	ldr	r0, [sp, #4]
40008fbc:	e3500000 	cmp	r0, #0
40008fc0:	1a00000a 	bne	40008ff0 <_tx_thread_system_suspend+0x4b8>
40008fc4:	e1a09429 	lsr	r9, r9, #8
40008fc8:	e20900ff 	and	r0, r9, #255	; 0xff
40008fcc:	e58d0004 	str	r0, [sp, #4]
40008fd0:	e2888008 	add	r8, r8, #8
40008fd4:	e59d0004 	ldr	r0, [sp, #4]
40008fd8:	e3500000 	cmp	r0, #0
40008fdc:	1a000003 	bne	40008ff0 <_tx_thread_system_suspend+0x4b8>
40008fe0:	e1a09429 	lsr	r9, r9, #8
40008fe4:	e20900ff 	and	r0, r9, #255	; 0xff
40008fe8:	e58d0004 	str	r0, [sp, #4]
40008fec:	e2888008 	add	r8, r8, #8
40008ff0:	e59f0140 	ldr	r0, [pc, #320]	; 40009138 <_tx_thread_system_suspend+0x600>
40008ff4:	e59d1004 	ldr	r1, [sp, #4]
40008ff8:	e7d00001 	ldrb	r0, [r0, r1]
40008ffc:	e0807008 	add	r7, r0, r8
40009000:	e59f0120 	ldr	r0, [pc, #288]	; 40009128 <_tx_thread_system_suspend+0x5f0>
40009004:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009008:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000900c:	e59f111c 	ldr	r1, [pc, #284]	; 40009130 <_tx_thread_system_suspend+0x5f8>
40009010:	e5911000 	ldr	r1, [r1]
40009014:	e1500001 	cmp	r0, r1
40009018:	8a000011 	bhi	40009064 <_tx_thread_system_suspend+0x52c>
4000901c:	e59f0104 	ldr	r0, [pc, #260]	; 40009128 <_tx_thread_system_suspend+0x5f0>
40009020:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009024:	e59f10ec 	ldr	r1, [pc, #236]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40009028:	e5810000 	str	r0, [r1]
4000902c:	e35a0000 	cmp	sl, #0
40009030:	0a000005 	beq	4000904c <_tx_thread_system_suspend+0x514>
40009034:	e59a000c 	ldr	r0, [sl, #12]
40009038:	e150000b 	cmp	r0, fp
4000903c:	1a000002 	bne	4000904c <_tx_thread_system_suspend+0x514>
40009040:	e2810000 	add	r0, r1, #0
40009044:	e5900000 	ldr	r0, [r0]
40009048:	e58a001c 	str	r0, [sl, #28]
4000904c:	e59f00d8 	ldr	r0, [pc, #216]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40009050:	e5900000 	ldr	r0, [r0]
40009054:	e3a01001 	mov	r1, #1
40009058:	e1c00711 	bic	r0, r0, r1, lsl r7
4000905c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000912c <_tx_thread_system_suspend+0x5f4>
40009060:	e5810000 	str	r0, [r1]
40009064:	e121f005 	msr	CPSR_c, r5
40009068:	e59f008c 	ldr	r0, [pc, #140]	; 400090fc <_tx_thread_system_suspend+0x5c4>
4000906c:	e5900000 	ldr	r0, [r0]
40009070:	e59f10a0 	ldr	r1, [pc, #160]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40009074:	e5911000 	ldr	r1, [r1]
40009078:	e1500001 	cmp	r0, r1
4000907c:	0a00001d 	beq	400090f8 <_tx_thread_system_suspend+0x5c0>
40009080:	e59f0090 	ldr	r0, [pc, #144]	; 40009118 <_tx_thread_system_suspend+0x5e0>
40009084:	e5904000 	ldr	r4, [r0]
40009088:	e5940008 	ldr	r0, [r4, #8]
4000908c:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40009090:	e1500001 	cmp	r0, r1
40009094:	2a000001 	bcs	400090a0 <_tx_thread_system_suspend+0x568>
40009098:	e5940008 	ldr	r0, [r4, #8]
4000909c:	e5840040 	str	r0, [r4, #64]	; 0x40
400090a0:	e594000c 	ldr	r0, [r4, #12]
400090a4:	e5900000 	ldr	r0, [r0]
400090a8:	e59f1050 	ldr	r1, [pc, #80]	; 40009100 <_tx_thread_system_suspend+0x5c8>
400090ac:	e1500001 	cmp	r0, r1
400090b0:	1a000007 	bne	400090d4 <_tx_thread_system_suspend+0x59c>
400090b4:	e5940010 	ldr	r0, [r4, #16]
400090b8:	e5900001 	ldr	r0, [r0, #1]
400090bc:	e1500001 	cmp	r0, r1
400090c0:	1a000003 	bne	400090d4 <_tx_thread_system_suspend+0x59c>
400090c4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
400090c8:	e594100c 	ldr	r1, [r4, #12]
400090cc:	e1500001 	cmp	r0, r1
400090d0:	2a000001 	bcs	400090dc <_tx_thread_system_suspend+0x5a4>
400090d4:	e1a00004 	mov	r0, r4
400090d8:	eb0017fe 	bl	4000f0d8 <_tx_thread_stack_error_handler>
400090dc:	e59f002c 	ldr	r0, [pc, #44]	; 40009110 <_tx_thread_system_suspend+0x5d8>
400090e0:	e5900000 	ldr	r0, [r0]
400090e4:	e59f1018 	ldr	r1, [pc, #24]	; 40009104 <_tx_thread_system_suspend+0x5cc>
400090e8:	e5911000 	ldr	r1, [r1]
400090ec:	e1900001 	orrs	r0, r0, r1
400090f0:	1a000000 	bne	400090f8 <_tx_thread_system_suspend+0x5c0>
400090f4:	eb0006a0 	bl	4000ab7c <_tx_thread_system_return>
400090f8:	eaffff79 	b	40008ee4 <_tx_thread_system_suspend+0x3ac>
400090fc:	40030e38 	.word	0x40030e38
40009100:	efefefef 	.word	0xefefefef
40009104:	40030e54 	.word	0x40030e54
40009108:	40030ea4 	.word	0x40030ea4
4000910c:	40030ea8 	.word	0x40030ea8
40009110:	40030e30 	.word	0x40030e30
40009114:	f0f0f0f0 	.word	0xf0f0f0f0
40009118:	40030e3c 	.word	0x40030e3c
4000911c:	40030ea0 	.word	0x40030ea0
40009120:	40030e9c 	.word	0x40030e9c
40009124:	40030e90 	.word	0x40030e90
40009128:	40032874 	.word	0x40032874
4000912c:	40030e4c 	.word	0x40030e4c
40009130:	40030e50 	.word	0x40030e50
40009134:	40030e48 	.word	0x40030e48
40009138:	40032774 	.word	0x40032774

4000913c <_tx_time_get>:
4000913c:	e92d4008 	push	{r3, lr}
40009140:	e10f1000 	mrs	r1, CPSR
40009144:	e3812080 	orr	r2, r1, #128	; 0x80
40009148:	e121f002 	msr	CPSR_c, r2
4000914c:	e59f00ec 	ldr	r0, [pc, #236]	; 40009240 <_tx_time_get+0x104>
40009150:	e5900000 	ldr	r0, [r0]
40009154:	e58d0000 	str	r0, [sp]
40009158:	e59f30e4 	ldr	r3, [pc, #228]	; 40009244 <_tx_time_get+0x108>
4000915c:	e5930000 	ldr	r0, [r3]
40009160:	e3500000 	cmp	r0, #0
40009164:	0a000032 	beq	40009234 <_tx_time_get+0xf8>
40009168:	e59f30d8 	ldr	r3, [pc, #216]	; 40009248 <_tx_time_get+0x10c>
4000916c:	e5933000 	ldr	r3, [r3]
40009170:	e2833001 	add	r3, r3, #1
40009174:	e59fc0cc 	ldr	ip, [pc, #204]	; 40009248 <_tx_time_get+0x10c>
40009178:	e58c3000 	str	r3, [ip]
4000917c:	e580300c 	str	r3, [r0, #12]
40009180:	e59f30c4 	ldr	r3, [pc, #196]	; 4000924c <_tx_time_get+0x110>
40009184:	e5933000 	ldr	r3, [r3]
40009188:	e3530000 	cmp	r3, #0
4000918c:	1a000006 	bne	400091ac <_tx_time_get+0x70>
40009190:	e59f30b8 	ldr	r3, [pc, #184]	; 40009250 <_tx_time_get+0x114>
40009194:	e5933000 	ldr	r3, [r3]
40009198:	e5803000 	str	r3, [r0]
4000919c:	e5903000 	ldr	r3, [r0]
400091a0:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400091a4:	e5803004 	str	r3, [r0, #4]
400091a8:	ea00000d 	b	400091e4 <_tx_time_get+0xa8>
400091ac:	e59f3098 	ldr	r3, [pc, #152]	; 4000924c <_tx_time_get+0x110>
400091b0:	e5933000 	ldr	r3, [r3]
400091b4:	e59fc098 	ldr	ip, [pc, #152]	; 40009254 <_tx_time_get+0x118>
400091b8:	e153000c 	cmp	r3, ip
400091bc:	2a000004 	bcs	400091d4 <_tx_time_get+0x98>
400091c0:	e3e03000 	mvn	r3, #0
400091c4:	e5803000 	str	r3, [r0]
400091c8:	e3a03000 	mov	r3, #0
400091cc:	e5803004 	str	r3, [r0, #4]
400091d0:	ea000003 	b	400091e4 <_tx_time_get+0xa8>
400091d4:	e59f3078 	ldr	r3, [pc, #120]	; 40009254 <_tx_time_get+0x118>
400091d8:	e5803000 	str	r3, [r0]
400091dc:	e3a03000 	mov	r3, #0
400091e0:	e5803004 	str	r3, [r0, #4]
400091e4:	e3a03078 	mov	r3, #120	; 0x78
400091e8:	e5803008 	str	r3, [r0, #8]
400091ec:	e59d3000 	ldr	r3, [sp]
400091f0:	e5803010 	str	r3, [r0, #16]
400091f4:	e580d014 	str	sp, [r0, #20]
400091f8:	e3a03000 	mov	r3, #0
400091fc:	e5803018 	str	r3, [r0, #24]
40009200:	e580301c 	str	r3, [r0, #28]
40009204:	e2800020 	add	r0, r0, #32
40009208:	e59f3048 	ldr	r3, [pc, #72]	; 40009258 <_tx_time_get+0x11c>
4000920c:	e5933000 	ldr	r3, [r3]
40009210:	e1500003 	cmp	r0, r3
40009214:	3a000001 	bcc	40009220 <_tx_time_get+0xe4>
40009218:	e59f303c 	ldr	r3, [pc, #60]	; 4000925c <_tx_time_get+0x120>
4000921c:	e5930000 	ldr	r0, [r3]
40009220:	e59f301c 	ldr	r3, [pc, #28]	; 40009244 <_tx_time_get+0x108>
40009224:	e5830000 	str	r0, [r3]
40009228:	e59f3030 	ldr	r3, [pc, #48]	; 40009260 <_tx_time_get+0x124>
4000922c:	e5933000 	ldr	r3, [r3]
40009230:	e5830020 	str	r0, [r3, #32]
40009234:	e121f001 	msr	CPSR_c, r1
40009238:	e59d0000 	ldr	r0, [sp]
4000923c:	e8bd8008 	pop	{r3, pc}
40009240:	40030e60 	.word	0x40030e60
40009244:	40030ea4 	.word	0x40030ea4
40009248:	40030ea8 	.word	0x40030ea8
4000924c:	40030e30 	.word	0x40030e30
40009250:	40030e38 	.word	0x40030e38
40009254:	f0f0f0f0 	.word	0xf0f0f0f0
40009258:	40030ea0 	.word	0x40030ea0
4000925c:	40030e9c 	.word	0x40030e9c
40009260:	40030e90 	.word	0x40030e90

40009264 <_tx_timer_initialize>:
40009264:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40009268:	e24dd01c 	sub	sp, sp, #28
4000926c:	e3a00000 	mov	r0, #0
40009270:	e59f10d8 	ldr	r1, [pc, #216]	; 40009350 <_tx_timer_initialize+0xec>
40009274:	e5810000 	str	r0, [r1]
40009278:	e59f10d4 	ldr	r1, [pc, #212]	; 40009354 <_tx_timer_initialize+0xf0>
4000927c:	e5810000 	str	r0, [r1]
40009280:	e59f10d0 	ldr	r1, [pc, #208]	; 40009358 <_tx_timer_initialize+0xf4>
40009284:	e5810000 	str	r0, [r1]
40009288:	e59f10cc 	ldr	r1, [pc, #204]	; 4000935c <_tx_timer_initialize+0xf8>
4000928c:	e5810000 	str	r0, [r1]
40009290:	e3a01080 	mov	r1, #128	; 0x80
40009294:	e59f00c4 	ldr	r0, [pc, #196]	; 40009360 <_tx_timer_initialize+0xfc>
40009298:	eb00288d 	bl	400134d4 <__aeabi_memclr4>
4000929c:	e59f00bc 	ldr	r0, [pc, #188]	; 40009360 <_tx_timer_initialize+0xfc>
400092a0:	e59f10bc 	ldr	r1, [pc, #188]	; 40009364 <_tx_timer_initialize+0x100>
400092a4:	e5810000 	str	r0, [r1]
400092a8:	e59f10b8 	ldr	r1, [pc, #184]	; 40009368 <_tx_timer_initialize+0x104>
400092ac:	e5810000 	str	r0, [r1]
400092b0:	e280007c 	add	r0, r0, #124	; 0x7c
400092b4:	e59f10b0 	ldr	r1, [pc, #176]	; 4000936c <_tx_timer_initialize+0x108>
400092b8:	e5810000 	str	r0, [r1]
400092bc:	e2810000 	add	r0, r1, #0
400092c0:	e5900000 	ldr	r0, [r0]
400092c4:	e2800004 	add	r0, r0, #4
400092c8:	e5810000 	str	r0, [r1]
400092cc:	e59f009c 	ldr	r0, [pc, #156]	; 40009370 <_tx_timer_initialize+0x10c>
400092d0:	e59f109c 	ldr	r1, [pc, #156]	; 40009374 <_tx_timer_initialize+0x110>
400092d4:	e5810000 	str	r0, [r1]
400092d8:	e3a00b01 	mov	r0, #1024	; 0x400
400092dc:	e59f1094 	ldr	r1, [pc, #148]	; 40009378 <_tx_timer_initialize+0x114>
400092e0:	e5810000 	str	r0, [r1]
400092e4:	e3a00000 	mov	r0, #0
400092e8:	e59f108c 	ldr	r1, [pc, #140]	; 4000937c <_tx_timer_initialize+0x118>
400092ec:	e5810000 	str	r0, [r1]
400092f0:	e3a03000 	mov	r3, #0
400092f4:	e2810000 	add	r0, r1, #0
400092f8:	e5901000 	ldr	r1, [r0]
400092fc:	e5900000 	ldr	r0, [r0]
40009300:	e28d2008 	add	r2, sp, #8
40009304:	e882000b 	stm	r2, {r0, r1, r3}
40009308:	e59f0068 	ldr	r0, [pc, #104]	; 40009378 <_tx_timer_initialize+0x114>
4000930c:	e58d3014 	str	r3, [sp, #20]
40009310:	e5903000 	ldr	r3, [r0]
40009314:	e59f0058 	ldr	r0, [pc, #88]	; 40009374 <_tx_timer_initialize+0x110>
40009318:	e5902000 	ldr	r2, [r0]
4000931c:	e1cd20f0 	strd	r2, [sp]
40009320:	e59f3058 	ldr	r3, [pc, #88]	; 40009380 <_tx_timer_initialize+0x11c>
40009324:	e59f2058 	ldr	r2, [pc, #88]	; 40009384 <_tx_timer_initialize+0x120>
40009328:	e28f1058 	add	r1, pc, #88	; 0x58
4000932c:	e59f0068 	ldr	r0, [pc, #104]	; 4000939c <_tx_timer_initialize+0x138>
40009330:	eb00143b 	bl	4000e424 <_tx_thread_create>
40009334:	e3a00000 	mov	r0, #0
40009338:	e59f1060 	ldr	r1, [pc, #96]	; 400093a0 <_tx_timer_initialize+0x13c>
4000933c:	e5810000 	str	r0, [r1]
40009340:	e59f105c 	ldr	r1, [pc, #92]	; 400093a4 <_tx_timer_initialize+0x140>
40009344:	e5810000 	str	r0, [r1]
40009348:	e28dd01c 	add	sp, sp, #28
4000934c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40009350:	40030e60 	.word	0x40030e60
40009354:	40030e64 	.word	0x40030e64
40009358:	40030e68 	.word	0x40030e68
4000935c:	40030e78 	.word	0x40030e78
40009360:	400328f4 	.word	0x400328f4
40009364:	40030e6c 	.word	0x40030e6c
40009368:	40030e74 	.word	0x40030e74
4000936c:	40030e70 	.word	0x40030e70
40009370:	40032a1c 	.word	0x40032a1c
40009374:	40030e84 	.word	0x40030e84
40009378:	40030e88 	.word	0x40030e88
4000937c:	40030e8c 	.word	0x40030e8c
40009380:	4154494d 	.word	0x4154494d
40009384:	40009494 	.word	0x40009494
40009388:	74737953 	.word	0x74737953
4000938c:	54206d65 	.word	0x54206d65
40009390:	72656d69 	.word	0x72656d69
40009394:	72685420 	.word	0x72685420
40009398:	00646165 	.word	0x00646165
4000939c:	40032974 	.word	0x40032974
400093a0:	40030e7c 	.word	0x40030e7c
400093a4:	40030e80 	.word	0x40030e80

400093a8 <_tx_timer_system_activate>:
400093a8:	e92d4010 	push	{r4, lr}
400093ac:	e1a01000 	mov	r1, r0
400093b0:	e10f2000 	mrs	r2, CPSR
400093b4:	e3823080 	orr	r3, r2, #128	; 0x80
400093b8:	e121f003 	msr	CPSR_c, r3
400093bc:	e5910000 	ldr	r0, [r1]
400093c0:	e3500000 	cmp	r0, #0
400093c4:	0a00002c 	beq	4000947c <_tx_timer_system_activate+0xd4>
400093c8:	e5910000 	ldr	r0, [r1]
400093cc:	e3700001 	cmn	r0, #1
400093d0:	0a000029 	beq	4000947c <_tx_timer_system_activate+0xd4>
400093d4:	e5910018 	ldr	r0, [r1, #24]
400093d8:	e3500000 	cmp	r0, #0
400093dc:	1a000026 	bne	4000947c <_tx_timer_system_activate+0xd4>
400093e0:	e5910000 	ldr	r0, [r1]
400093e4:	e3500020 	cmp	r0, #32
400093e8:	9a000001 	bls	400093f4 <_tx_timer_system_activate+0x4c>
400093ec:	e3a0e01f 	mov	lr, #31
400093f0:	ea000001 	b	400093fc <_tx_timer_system_activate+0x54>
400093f4:	e5910000 	ldr	r0, [r1]
400093f8:	e240e001 	sub	lr, r0, #1
400093fc:	e59f0084 	ldr	r0, [pc, #132]	; 40009488 <_tx_timer_system_activate+0xe0>
40009400:	e5900000 	ldr	r0, [r0]
40009404:	e080c10e 	add	ip, r0, lr, lsl #2
40009408:	e59f007c 	ldr	r0, [pc, #124]	; 4000948c <_tx_timer_system_activate+0xe4>
4000940c:	e5900000 	ldr	r0, [r0]
40009410:	e15c0000 	cmp	ip, r0
40009414:	3a000006 	bcc	40009434 <_tx_timer_system_activate+0x8c>
40009418:	e59f006c 	ldr	r0, [pc, #108]	; 4000948c <_tx_timer_system_activate+0xe4>
4000941c:	e5900000 	ldr	r0, [r0]
40009420:	e04c0000 	sub	r0, ip, r0
40009424:	e1a00140 	asr	r0, r0, #2
40009428:	e59f4060 	ldr	r4, [pc, #96]	; 40009490 <_tx_timer_system_activate+0xe8>
4000942c:	e5944000 	ldr	r4, [r4]
40009430:	e084c100 	add	ip, r4, r0, lsl #2
40009434:	e59c0000 	ldr	r0, [ip]
40009438:	e3500000 	cmp	r0, #0
4000943c:	0a00000a 	beq	4000946c <_tx_timer_system_activate+0xc4>
40009440:	e59c0000 	ldr	r0, [ip]
40009444:	e5810010 	str	r0, [r1, #16]
40009448:	e59c0000 	ldr	r0, [ip]
4000944c:	e5900014 	ldr	r0, [r0, #20]
40009450:	e5810014 	str	r0, [r1, #20]
40009454:	e5910014 	ldr	r0, [r1, #20]
40009458:	e5801010 	str	r1, [r0, #16]
4000945c:	e59c0000 	ldr	r0, [ip]
40009460:	e5801014 	str	r1, [r0, #20]
40009464:	e581c018 	str	ip, [r1, #24]
40009468:	ea000003 	b	4000947c <_tx_timer_system_activate+0xd4>
4000946c:	e5811010 	str	r1, [r1, #16]
40009470:	e5811014 	str	r1, [r1, #20]
40009474:	e581c018 	str	ip, [r1, #24]
40009478:	e58c1000 	str	r1, [ip]
4000947c:	e121f002 	msr	CPSR_c, r2
40009480:	e3a00000 	mov	r0, #0
40009484:	e8bd8010 	pop	{r4, pc}
40009488:	40030e74 	.word	0x40030e74
4000948c:	40030e70 	.word	0x40030e70
40009490:	40030e6c 	.word	0x40030e6c

40009494 <_tx_timer_thread_entry>:
40009494:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40009498:	e1a04000 	mov	r4, r0
4000949c:	e3a09000 	mov	r9, #0
400094a0:	e59f0214 	ldr	r0, [pc, #532]	; 400096bc <_tx_timer_thread_entry+0x228>
400094a4:	e1540000 	cmp	r4, r0
400094a8:	0a000000 	beq	400094b0 <_tx_timer_thread_entry+0x1c>
400094ac:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
400094b0:	e3a00000 	mov	r0, #0
400094b4:	e58d0000 	str	r0, [sp]
400094b8:	e1a00000 	nop			; (mov r0, r0)
400094bc:	e10f5000 	mrs	r5, CPSR
400094c0:	e3856080 	orr	r6, r5, #128	; 0x80
400094c4:	e121f006 	msr	CPSR_c, r6
400094c8:	e59f01f0 	ldr	r0, [pc, #496]	; 400096c0 <_tx_timer_thread_entry+0x22c>
400094cc:	e5900000 	ldr	r0, [r0]
400094d0:	e5900000 	ldr	r0, [r0]
400094d4:	e58d0004 	str	r0, [sp, #4]
400094d8:	e59d0004 	ldr	r0, [sp, #4]
400094dc:	e3500000 	cmp	r0, #0
400094e0:	0a000002 	beq	400094f0 <_tx_timer_thread_entry+0x5c>
400094e4:	e28d0004 	add	r0, sp, #4
400094e8:	e59d1004 	ldr	r1, [sp, #4]
400094ec:	e5810018 	str	r0, [r1, #24]
400094f0:	e3a00000 	mov	r0, #0
400094f4:	e59f11c4 	ldr	r1, [pc, #452]	; 400096c0 <_tx_timer_thread_entry+0x22c>
400094f8:	e5911000 	ldr	r1, [r1]
400094fc:	e5810000 	str	r0, [r1]
40009500:	e59f01b8 	ldr	r0, [pc, #440]	; 400096c0 <_tx_timer_thread_entry+0x22c>
40009504:	e5900000 	ldr	r0, [r0]
40009508:	e2800004 	add	r0, r0, #4
4000950c:	e59f11ac 	ldr	r1, [pc, #428]	; 400096c0 <_tx_timer_thread_entry+0x22c>
40009510:	e5810000 	str	r0, [r1]
40009514:	e2810000 	add	r0, r1, #0
40009518:	e5900000 	ldr	r0, [r0]
4000951c:	e59f11a0 	ldr	r1, [pc, #416]	; 400096c4 <_tx_timer_thread_entry+0x230>
40009520:	e5911000 	ldr	r1, [r1]
40009524:	e1500001 	cmp	r0, r1
40009528:	1a000003 	bne	4000953c <_tx_timer_thread_entry+0xa8>
4000952c:	e59f0194 	ldr	r0, [pc, #404]	; 400096c8 <_tx_timer_thread_entry+0x234>
40009530:	e5900000 	ldr	r0, [r0]
40009534:	e59f1184 	ldr	r1, [pc, #388]	; 400096c0 <_tx_timer_thread_entry+0x22c>
40009538:	e5810000 	str	r0, [r1]
4000953c:	e3a00000 	mov	r0, #0
40009540:	e59f1184 	ldr	r1, [pc, #388]	; 400096cc <_tx_timer_thread_entry+0x238>
40009544:	e5810000 	str	r0, [r1]
40009548:	e121f005 	msr	CPSR_c, r5
4000954c:	e10f5000 	mrs	r5, CPSR
40009550:	e3856080 	orr	r6, r5, #128	; 0x80
40009554:	e121f006 	msr	CPSR_c, r6
40009558:	ea000040 	b	40009660 <_tx_timer_thread_entry+0x1cc>
4000955c:	e59d7004 	ldr	r7, [sp, #4]
40009560:	e59d0004 	ldr	r0, [sp, #4]
40009564:	e5900010 	ldr	r0, [r0, #16]
40009568:	e1500007 	cmp	r0, r7
4000956c:	1a000002 	bne	4000957c <_tx_timer_thread_entry+0xe8>
40009570:	e3a00000 	mov	r0, #0
40009574:	e58d0004 	str	r0, [sp, #4]
40009578:	ea00000a 	b	400095a8 <_tx_timer_thread_entry+0x114>
4000957c:	e5970014 	ldr	r0, [r7, #20]
40009580:	e5971010 	ldr	r1, [r7, #16]
40009584:	e5810014 	str	r0, [r1, #20]
40009588:	e5970010 	ldr	r0, [r7, #16]
4000958c:	e5971014 	ldr	r1, [r7, #20]
40009590:	e5810010 	str	r0, [r1, #16]
40009594:	e28d0004 	add	r0, sp, #4
40009598:	e5971010 	ldr	r1, [r7, #16]
4000959c:	e5810018 	str	r0, [r1, #24]
400095a0:	e5970010 	ldr	r0, [r7, #16]
400095a4:	e58d0004 	str	r0, [sp, #4]
400095a8:	e5970000 	ldr	r0, [r7]
400095ac:	e3500020 	cmp	r0, #32
400095b0:	9a000006 	bls	400095d0 <_tx_timer_thread_entry+0x13c>
400095b4:	e5970000 	ldr	r0, [r7]
400095b8:	e2400020 	sub	r0, r0, #32
400095bc:	e5870000 	str	r0, [r7]
400095c0:	e3a08000 	mov	r8, #0
400095c4:	e587d018 	str	sp, [r7, #24]
400095c8:	e5877010 	str	r7, [r7, #16]
400095cc:	ea00000b 	b	40009600 <_tx_timer_thread_entry+0x16c>
400095d0:	e5978008 	ldr	r8, [r7, #8]
400095d4:	e597900c 	ldr	r9, [r7, #12]
400095d8:	e5970004 	ldr	r0, [r7, #4]
400095dc:	e5870000 	str	r0, [r7]
400095e0:	e5970000 	ldr	r0, [r7]
400095e4:	e3500000 	cmp	r0, #0
400095e8:	0a000002 	beq	400095f8 <_tx_timer_thread_entry+0x164>
400095ec:	e587d018 	str	sp, [r7, #24]
400095f0:	e5877010 	str	r7, [r7, #16]
400095f4:	ea000001 	b	40009600 <_tx_timer_thread_entry+0x16c>
400095f8:	e3a00000 	mov	r0, #0
400095fc:	e5870018 	str	r0, [r7, #24]
40009600:	e121f005 	msr	CPSR_c, r5
40009604:	e3580000 	cmp	r8, #0
40009608:	0a000001 	beq	40009614 <_tx_timer_thread_entry+0x180>
4000960c:	e1a00009 	mov	r0, r9
40009610:	e12fff38 	blx	r8
40009614:	e10f5000 	mrs	r5, CPSR
40009618:	e3856080 	orr	r6, r5, #128	; 0x80
4000961c:	e121f006 	msr	CPSR_c, r6
40009620:	e1a0100d 	mov	r1, sp
40009624:	e5970018 	ldr	r0, [r7, #24]
40009628:	e1500001 	cmp	r0, r1
4000962c:	1a000007 	bne	40009650 <_tx_timer_thread_entry+0x1bc>
40009630:	e3a00000 	mov	r0, #0
40009634:	e5870018 	str	r0, [r7, #24]
40009638:	e121f005 	msr	CPSR_c, r5
4000963c:	e1a00007 	mov	r0, r7
40009640:	ebffff58 	bl	400093a8 <_tx_timer_system_activate>
40009644:	e10f5000 	mrs	r5, CPSR
40009648:	e3856080 	orr	r6, r5, #128	; 0x80
4000964c:	e121f006 	msr	CPSR_c, r6
40009650:	e121f005 	msr	CPSR_c, r5
40009654:	e10f5000 	mrs	r5, CPSR
40009658:	e3856080 	orr	r6, r5, #128	; 0x80
4000965c:	e121f006 	msr	CPSR_c, r6
40009660:	e59d0004 	ldr	r0, [sp, #4]
40009664:	e3500000 	cmp	r0, #0
40009668:	1affffbb 	bne	4000955c <_tx_timer_thread_entry+0xc8>
4000966c:	e59f0058 	ldr	r0, [pc, #88]	; 400096cc <_tx_timer_thread_entry+0x238>
40009670:	e5900000 	ldr	r0, [r0]
40009674:	e3500000 	cmp	r0, #0
40009678:	1a00000d 	bne	400096b4 <_tx_timer_thread_entry+0x220>
4000967c:	e59fa04c 	ldr	sl, [pc, #76]	; 400096d0 <_tx_timer_thread_entry+0x23c>
40009680:	e3a00003 	mov	r0, #3
40009684:	e58a0030 	str	r0, [sl, #48]	; 0x30
40009688:	e3a00001 	mov	r0, #1
4000968c:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009690:	e59f003c 	ldr	r0, [pc, #60]	; 400096d4 <_tx_timer_thread_entry+0x240>
40009694:	e5900000 	ldr	r0, [r0]
40009698:	e2800001 	add	r0, r0, #1
4000969c:	e59f1030 	ldr	r1, [pc, #48]	; 400096d4 <_tx_timer_thread_entry+0x240>
400096a0:	e5810000 	str	r0, [r1]
400096a4:	e121f005 	msr	CPSR_c, r5
400096a8:	e1a0000a 	mov	r0, sl
400096ac:	ebfffd21 	bl	40008b38 <_tx_thread_system_suspend>
400096b0:	ea000000 	b	400096b8 <_tx_timer_thread_entry+0x224>
400096b4:	e121f005 	msr	CPSR_c, r5
400096b8:	eaffff7f 	b	400094bc <_tx_timer_thread_entry+0x28>
400096bc:	4154494d 	.word	0x4154494d
400096c0:	40030e74 	.word	0x40030e74
400096c4:	40030e70 	.word	0x40030e70
400096c8:	40030e6c 	.word	0x40030e6c
400096cc:	40030e78 	.word	0x40030e78
400096d0:	40032974 	.word	0x40032974
400096d4:	40030e54 	.word	0x40030e54

400096d8 <_tx_trace_initialize>:
400096d8:	e3a00000 	mov	r0, #0
400096dc:	e59f102c 	ldr	r1, [pc, #44]	; 40009710 <_tx_trace_initialize+0x38>
400096e0:	e5810000 	str	r0, [r1]
400096e4:	e59f1028 	ldr	r1, [pc, #40]	; 40009714 <_tx_trace_initialize+0x3c>
400096e8:	e5810000 	str	r0, [r1]
400096ec:	e59f1024 	ldr	r1, [pc, #36]	; 40009718 <_tx_trace_initialize+0x40>
400096f0:	e5810000 	str	r0, [r1]
400096f4:	e59f1020 	ldr	r1, [pc, #32]	; 4000971c <_tx_trace_initialize+0x44>
400096f8:	e5810000 	str	r0, [r1]
400096fc:	e59f101c 	ldr	r1, [pc, #28]	; 40009720 <_tx_trace_initialize+0x48>
40009700:	e5810000 	str	r0, [r1]
40009704:	e59f1018 	ldr	r1, [pc, #24]	; 40009724 <_tx_trace_initialize+0x4c>
40009708:	e5810000 	str	r0, [r1]
4000970c:	e12fff1e 	bx	lr
40009710:	40030e90 	.word	0x40030e90
40009714:	40030e94 	.word	0x40030e94
40009718:	40030e98 	.word	0x40030e98
4000971c:	40030e9c 	.word	0x40030e9c
40009720:	40030ea0 	.word	0x40030ea0
40009724:	40030ea4 	.word	0x40030ea4

40009728 <_txe_byte_allocate>:
40009728:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000972c:	e1a04000 	mov	r4, r0
40009730:	e1a05001 	mov	r5, r1
40009734:	e1a06002 	mov	r6, r2
40009738:	e1a07003 	mov	r7, r3
4000973c:	e3540000 	cmp	r4, #0
40009740:	0a000003 	beq	40009754 <_txe_byte_allocate+0x2c>
40009744:	e5940000 	ldr	r0, [r4]
40009748:	e59f10d4 	ldr	r1, [pc, #212]	; 40009824 <_txe_byte_allocate+0xfc>
4000974c:	e1500001 	cmp	r0, r1
40009750:	0a000001 	beq	4000975c <_txe_byte_allocate+0x34>
40009754:	e3a00002 	mov	r0, #2
40009758:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000975c:	e3550000 	cmp	r5, #0
40009760:	1a000001 	bne	4000976c <_txe_byte_allocate+0x44>
40009764:	e3a00003 	mov	r0, #3
40009768:	eafffffa 	b	40009758 <_txe_byte_allocate+0x30>
4000976c:	e3560000 	cmp	r6, #0
40009770:	0a000002 	beq	40009780 <_txe_byte_allocate+0x58>
40009774:	e594001c 	ldr	r0, [r4, #28]
40009778:	e1500006 	cmp	r0, r6
4000977c:	2a000001 	bcs	40009788 <_txe_byte_allocate+0x60>
40009780:	e3a00005 	mov	r0, #5
40009784:	eafffff3 	b	40009758 <_txe_byte_allocate+0x30>
40009788:	e59f0098 	ldr	r0, [pc, #152]	; 40009828 <_txe_byte_allocate+0x100>
4000978c:	e5908000 	ldr	r8, [r0]
40009790:	e3570000 	cmp	r7, #0
40009794:	0a000008 	beq	400097bc <_txe_byte_allocate+0x94>
40009798:	e59f008c 	ldr	r0, [pc, #140]	; 4000982c <_txe_byte_allocate+0x104>
4000979c:	e5900000 	ldr	r0, [r0]
400097a0:	e3500000 	cmp	r0, #0
400097a4:	1a000002 	bne	400097b4 <_txe_byte_allocate+0x8c>
400097a8:	e59f0080 	ldr	r0, [pc, #128]	; 40009830 <_txe_byte_allocate+0x108>
400097ac:	e1580000 	cmp	r8, r0
400097b0:	1a000001 	bne	400097bc <_txe_byte_allocate+0x94>
400097b4:	e3a00004 	mov	r0, #4
400097b8:	eaffffe6 	b	40009758 <_txe_byte_allocate+0x30>
400097bc:	e3580000 	cmp	r8, #0
400097c0:	0a000008 	beq	400097e8 <_txe_byte_allocate+0xc0>
400097c4:	e59f0064 	ldr	r0, [pc, #100]	; 40009830 <_txe_byte_allocate+0x108>
400097c8:	e1580000 	cmp	r8, r0
400097cc:	0a000003 	beq	400097e0 <_txe_byte_allocate+0xb8>
400097d0:	e59f0054 	ldr	r0, [pc, #84]	; 4000982c <_txe_byte_allocate+0x104>
400097d4:	e5900000 	ldr	r0, [r0]
400097d8:	e3500000 	cmp	r0, #0
400097dc:	0a000008 	beq	40009804 <_txe_byte_allocate+0xdc>
400097e0:	e3a00013 	mov	r0, #19
400097e4:	eaffffdb 	b	40009758 <_txe_byte_allocate+0x30>
400097e8:	e59f003c 	ldr	r0, [pc, #60]	; 4000982c <_txe_byte_allocate+0x104>
400097ec:	e5900000 	ldr	r0, [r0]
400097f0:	e59f103c 	ldr	r1, [pc, #60]	; 40009834 <_txe_byte_allocate+0x10c>
400097f4:	e1500001 	cmp	r0, r1
400097f8:	2a000001 	bcs	40009804 <_txe_byte_allocate+0xdc>
400097fc:	e3a00013 	mov	r0, #19
40009800:	eaffffd4 	b	40009758 <_txe_byte_allocate+0x30>
40009804:	e1a03007 	mov	r3, r7
40009808:	e1a02006 	mov	r2, r6
4000980c:	e1a01005 	mov	r1, r5
40009810:	e1a00004 	mov	r0, r4
40009814:	eb0005bf 	bl	4000af18 <_tx_byte_allocate>
40009818:	e1a09000 	mov	r9, r0
4000981c:	e1a00009 	mov	r0, r9
40009820:	eaffffcc 	b	40009758 <_txe_byte_allocate+0x30>
40009824:	42595445 	.word	0x42595445
40009828:	40030e38 	.word	0x40030e38
4000982c:	40030e30 	.word	0x40030e30
40009830:	40032974 	.word	0x40032974
40009834:	f0f0f0f0 	.word	0xf0f0f0f0

40009838 <_txe_byte_pool_create>:
40009838:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000983c:	e1a04000 	mov	r4, r0
40009840:	e1a05001 	mov	r5, r1
40009844:	e1a06002 	mov	r6, r2
40009848:	e1a07003 	mov	r7, r3
4000984c:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009850:	e3540000 	cmp	r4, #0
40009854:	0a000001 	beq	40009860 <_txe_byte_pool_create+0x28>
40009858:	e3580034 	cmp	r8, #52	; 0x34
4000985c:	0a000001 	beq	40009868 <_txe_byte_pool_create+0x30>
40009860:	e3a00002 	mov	r0, #2
40009864:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009868:	e10f9000 	mrs	r9, CPSR
4000986c:	e389a080 	orr	sl, r9, #128	; 0x80
40009870:	e121f00a 	msr	CPSR_c, sl
40009874:	e59f0130 	ldr	r0, [pc, #304]	; 400099ac <_txe_byte_pool_create+0x174>
40009878:	e5900000 	ldr	r0, [r0]
4000987c:	e2800001 	add	r0, r0, #1
40009880:	e59f1124 	ldr	r1, [pc, #292]	; 400099ac <_txe_byte_pool_create+0x174>
40009884:	e5810000 	str	r0, [r1]
40009888:	e121f009 	msr	CPSR_c, r9
4000988c:	e59f011c 	ldr	r0, [pc, #284]	; 400099b0 <_txe_byte_pool_create+0x178>
40009890:	e5900000 	ldr	r0, [r0]
40009894:	e58d0004 	str	r0, [sp, #4]
40009898:	e3a0b000 	mov	fp, #0
4000989c:	ea000007 	b	400098c0 <_txe_byte_pool_create+0x88>
400098a0:	e59d0004 	ldr	r0, [sp, #4]
400098a4:	e1540000 	cmp	r4, r0
400098a8:	1a000000 	bne	400098b0 <_txe_byte_pool_create+0x78>
400098ac:	ea000007 	b	400098d0 <_txe_byte_pool_create+0x98>
400098b0:	e59d0004 	ldr	r0, [sp, #4]
400098b4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400098b8:	e58d0004 	str	r0, [sp, #4]
400098bc:	e28bb001 	add	fp, fp, #1
400098c0:	e59f00ec 	ldr	r0, [pc, #236]	; 400099b4 <_txe_byte_pool_create+0x17c>
400098c4:	e5900000 	ldr	r0, [r0]
400098c8:	e15b0000 	cmp	fp, r0
400098cc:	3afffff3 	bcc	400098a0 <_txe_byte_pool_create+0x68>
400098d0:	e1a00000 	nop			; (mov r0, r0)
400098d4:	e10f9000 	mrs	r9, CPSR
400098d8:	e389a080 	orr	sl, r9, #128	; 0x80
400098dc:	e121f00a 	msr	CPSR_c, sl
400098e0:	e59f00c4 	ldr	r0, [pc, #196]	; 400099ac <_txe_byte_pool_create+0x174>
400098e4:	e5900000 	ldr	r0, [r0]
400098e8:	e2400001 	sub	r0, r0, #1
400098ec:	e59f10b8 	ldr	r1, [pc, #184]	; 400099ac <_txe_byte_pool_create+0x174>
400098f0:	e5810000 	str	r0, [r1]
400098f4:	e121f009 	msr	CPSR_c, r9
400098f8:	eb001609 	bl	4000f124 <_tx_thread_system_preempt_check>
400098fc:	e59d0004 	ldr	r0, [sp, #4]
40009900:	e1540000 	cmp	r4, r0
40009904:	1a000001 	bne	40009910 <_txe_byte_pool_create+0xd8>
40009908:	e3a00002 	mov	r0, #2
4000990c:	eaffffd4 	b	40009864 <_txe_byte_pool_create+0x2c>
40009910:	e3560000 	cmp	r6, #0
40009914:	1a000001 	bne	40009920 <_txe_byte_pool_create+0xe8>
40009918:	e3a00003 	mov	r0, #3
4000991c:	eaffffd0 	b	40009864 <_txe_byte_pool_create+0x2c>
40009920:	e3570064 	cmp	r7, #100	; 0x64
40009924:	2a000001 	bcs	40009930 <_txe_byte_pool_create+0xf8>
40009928:	e3a00005 	mov	r0, #5
4000992c:	eaffffcc 	b	40009864 <_txe_byte_pool_create+0x2c>
40009930:	e59f0080 	ldr	r0, [pc, #128]	; 400099b8 <_txe_byte_pool_create+0x180>
40009934:	e5900000 	ldr	r0, [r0]
40009938:	e58d0000 	str	r0, [sp]
4000993c:	e59d0000 	ldr	r0, [sp]
40009940:	e3500000 	cmp	r0, #0
40009944:	0a000009 	beq	40009970 <_txe_byte_pool_create+0x138>
40009948:	e59f106c 	ldr	r1, [pc, #108]	; 400099bc <_txe_byte_pool_create+0x184>
4000994c:	e59d0000 	ldr	r0, [sp]
40009950:	e1500001 	cmp	r0, r1
40009954:	0a000003 	beq	40009968 <_txe_byte_pool_create+0x130>
40009958:	e59f0060 	ldr	r0, [pc, #96]	; 400099c0 <_txe_byte_pool_create+0x188>
4000995c:	e5900000 	ldr	r0, [r0]
40009960:	e3500000 	cmp	r0, #0
40009964:	0a000008 	beq	4000998c <_txe_byte_pool_create+0x154>
40009968:	e3a00013 	mov	r0, #19
4000996c:	eaffffbc 	b	40009864 <_txe_byte_pool_create+0x2c>
40009970:	e59f0048 	ldr	r0, [pc, #72]	; 400099c0 <_txe_byte_pool_create+0x188>
40009974:	e5900000 	ldr	r0, [r0]
40009978:	e59f1044 	ldr	r1, [pc, #68]	; 400099c4 <_txe_byte_pool_create+0x18c>
4000997c:	e1500001 	cmp	r0, r1
40009980:	2a000001 	bcs	4000998c <_txe_byte_pool_create+0x154>
40009984:	e3a00013 	mov	r0, #19
40009988:	eaffffb5 	b	40009864 <_txe_byte_pool_create+0x2c>
4000998c:	e1a03007 	mov	r3, r7
40009990:	e1a02006 	mov	r2, r6
40009994:	e1a01005 	mov	r1, r5
40009998:	e1a00004 	mov	r0, r4
4000999c:	eb000643 	bl	4000b2b0 <_tx_byte_pool_create>
400099a0:	e58d0008 	str	r0, [sp, #8]
400099a4:	e59d0008 	ldr	r0, [sp, #8]
400099a8:	eaffffad 	b	40009864 <_txe_byte_pool_create+0x2c>
400099ac:	40030e54 	.word	0x40030e54
400099b0:	40030ed4 	.word	0x40030ed4
400099b4:	40030ed8 	.word	0x40030ed8
400099b8:	40030e38 	.word	0x40030e38
400099bc:	40032974 	.word	0x40032974
400099c0:	40030e30 	.word	0x40030e30
400099c4:	f0f0f0f0 	.word	0xf0f0f0f0

400099c8 <_txe_byte_pool_delete>:
400099c8:	e92d4070 	push	{r4, r5, r6, lr}
400099cc:	e1a04000 	mov	r4, r0
400099d0:	e3540000 	cmp	r4, #0
400099d4:	0a000003 	beq	400099e8 <_txe_byte_pool_delete+0x20>
400099d8:	e5940000 	ldr	r0, [r4]
400099dc:	e59f1054 	ldr	r1, [pc, #84]	; 40009a38 <_txe_byte_pool_delete+0x70>
400099e0:	e1500001 	cmp	r0, r1
400099e4:	0a000001 	beq	400099f0 <_txe_byte_pool_delete+0x28>
400099e8:	e3a00002 	mov	r0, #2
400099ec:	e8bd8070 	pop	{r4, r5, r6, pc}
400099f0:	e59f0044 	ldr	r0, [pc, #68]	; 40009a3c <_txe_byte_pool_delete+0x74>
400099f4:	e5905000 	ldr	r5, [r0]
400099f8:	e3550000 	cmp	r5, #0
400099fc:	0a000006 	beq	40009a1c <_txe_byte_pool_delete+0x54>
40009a00:	e59f0038 	ldr	r0, [pc, #56]	; 40009a40 <_txe_byte_pool_delete+0x78>
40009a04:	e5900000 	ldr	r0, [r0]
40009a08:	e3500000 	cmp	r0, #0
40009a0c:	1a000002 	bne	40009a1c <_txe_byte_pool_delete+0x54>
40009a10:	e59f002c 	ldr	r0, [pc, #44]	; 40009a44 <_txe_byte_pool_delete+0x7c>
40009a14:	e1550000 	cmp	r5, r0
40009a18:	1a000001 	bne	40009a24 <_txe_byte_pool_delete+0x5c>
40009a1c:	e3a00013 	mov	r0, #19
40009a20:	eafffff1 	b	400099ec <_txe_byte_pool_delete+0x24>
40009a24:	e1a00004 	mov	r0, r4
40009a28:	eb0006b6 	bl	4000b508 <_tx_byte_pool_delete>
40009a2c:	e1a06000 	mov	r6, r0
40009a30:	e1a00006 	mov	r0, r6
40009a34:	eaffffec 	b	400099ec <_txe_byte_pool_delete+0x24>
40009a38:	42595445 	.word	0x42595445
40009a3c:	40030e38 	.word	0x40030e38
40009a40:	40030e30 	.word	0x40030e30
40009a44:	40032974 	.word	0x40032974

40009a48 <_txe_byte_release>:
40009a48:	e92d4070 	push	{r4, r5, r6, lr}
40009a4c:	e1a04000 	mov	r4, r0
40009a50:	e3540000 	cmp	r4, #0
40009a54:	1a000001 	bne	40009a60 <_txe_byte_release+0x18>
40009a58:	e3a00003 	mov	r0, #3
40009a5c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009a60:	e59f005c 	ldr	r0, [pc, #92]	; 40009ac4 <_txe_byte_release+0x7c>
40009a64:	e5905000 	ldr	r5, [r0]
40009a68:	e3550000 	cmp	r5, #0
40009a6c:	0a000008 	beq	40009a94 <_txe_byte_release+0x4c>
40009a70:	e59f0050 	ldr	r0, [pc, #80]	; 40009ac8 <_txe_byte_release+0x80>
40009a74:	e1550000 	cmp	r5, r0
40009a78:	0a000003 	beq	40009a8c <_txe_byte_release+0x44>
40009a7c:	e59f0048 	ldr	r0, [pc, #72]	; 40009acc <_txe_byte_release+0x84>
40009a80:	e5900000 	ldr	r0, [r0]
40009a84:	e3500000 	cmp	r0, #0
40009a88:	0a000008 	beq	40009ab0 <_txe_byte_release+0x68>
40009a8c:	e3a00013 	mov	r0, #19
40009a90:	eafffff1 	b	40009a5c <_txe_byte_release+0x14>
40009a94:	e59f0030 	ldr	r0, [pc, #48]	; 40009acc <_txe_byte_release+0x84>
40009a98:	e5900000 	ldr	r0, [r0]
40009a9c:	e59f102c 	ldr	r1, [pc, #44]	; 40009ad0 <_txe_byte_release+0x88>
40009aa0:	e1500001 	cmp	r0, r1
40009aa4:	2a000001 	bcs	40009ab0 <_txe_byte_release+0x68>
40009aa8:	e3a00013 	mov	r0, #19
40009aac:	eaffffea 	b	40009a5c <_txe_byte_release+0x14>
40009ab0:	e1a00004 	mov	r0, r4
40009ab4:	eb000794 	bl	4000b90c <_tx_byte_release>
40009ab8:	e1a06000 	mov	r6, r0
40009abc:	e1a00006 	mov	r0, r6
40009ac0:	eaffffe5 	b	40009a5c <_txe_byte_release+0x14>
40009ac4:	40030e38 	.word	0x40030e38
40009ac8:	40032974 	.word	0x40032974
40009acc:	40030e30 	.word	0x40030e30
40009ad0:	f0f0f0f0 	.word	0xf0f0f0f0

40009ad4 <_txe_event_flags_create>:
40009ad4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009ad8:	e1a04000 	mov	r4, r0
40009adc:	e1a05001 	mov	r5, r1
40009ae0:	e1a06002 	mov	r6, r2
40009ae4:	e3540000 	cmp	r4, #0
40009ae8:	0a000001 	beq	40009af4 <_txe_event_flags_create+0x20>
40009aec:	e3560028 	cmp	r6, #40	; 0x28
40009af0:	0a000001 	beq	40009afc <_txe_event_flags_create+0x28>
40009af4:	e3a00006 	mov	r0, #6
40009af8:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009afc:	e10f7000 	mrs	r7, CPSR
40009b00:	e3878080 	orr	r8, r7, #128	; 0x80
40009b04:	e121f008 	msr	CPSR_c, r8
40009b08:	e59f00e8 	ldr	r0, [pc, #232]	; 40009bf8 <_txe_event_flags_create+0x124>
40009b0c:	e5900000 	ldr	r0, [r0]
40009b10:	e2800001 	add	r0, r0, #1
40009b14:	e59f10dc 	ldr	r1, [pc, #220]	; 40009bf8 <_txe_event_flags_create+0x124>
40009b18:	e5810000 	str	r0, [r1]
40009b1c:	e121f007 	msr	CPSR_c, r7
40009b20:	e59f00d4 	ldr	r0, [pc, #212]	; 40009bfc <_txe_event_flags_create+0x128>
40009b24:	e590a000 	ldr	sl, [r0]
40009b28:	e3a09000 	mov	r9, #0
40009b2c:	ea000004 	b	40009b44 <_txe_event_flags_create+0x70>
40009b30:	e154000a 	cmp	r4, sl
40009b34:	1a000000 	bne	40009b3c <_txe_event_flags_create+0x68>
40009b38:	ea000005 	b	40009b54 <_txe_event_flags_create+0x80>
40009b3c:	e59aa018 	ldr	sl, [sl, #24]
40009b40:	e2899001 	add	r9, r9, #1
40009b44:	e59f00b4 	ldr	r0, [pc, #180]	; 40009c00 <_txe_event_flags_create+0x12c>
40009b48:	e5900000 	ldr	r0, [r0]
40009b4c:	e1590000 	cmp	r9, r0
40009b50:	3afffff6 	bcc	40009b30 <_txe_event_flags_create+0x5c>
40009b54:	e1a00000 	nop			; (mov r0, r0)
40009b58:	e10f7000 	mrs	r7, CPSR
40009b5c:	e3878080 	orr	r8, r7, #128	; 0x80
40009b60:	e121f008 	msr	CPSR_c, r8
40009b64:	e59f008c 	ldr	r0, [pc, #140]	; 40009bf8 <_txe_event_flags_create+0x124>
40009b68:	e5900000 	ldr	r0, [r0]
40009b6c:	e2400001 	sub	r0, r0, #1
40009b70:	e59f1080 	ldr	r1, [pc, #128]	; 40009bf8 <_txe_event_flags_create+0x124>
40009b74:	e5810000 	str	r0, [r1]
40009b78:	e121f007 	msr	CPSR_c, r7
40009b7c:	eb001568 	bl	4000f124 <_tx_thread_system_preempt_check>
40009b80:	e154000a 	cmp	r4, sl
40009b84:	1a000001 	bne	40009b90 <_txe_event_flags_create+0xbc>
40009b88:	e3a00006 	mov	r0, #6
40009b8c:	eaffffd9 	b	40009af8 <_txe_event_flags_create+0x24>
40009b90:	e59f006c 	ldr	r0, [pc, #108]	; 40009c04 <_txe_event_flags_create+0x130>
40009b94:	e590b000 	ldr	fp, [r0]
40009b98:	e35b0000 	cmp	fp, #0
40009b9c:	0a000008 	beq	40009bc4 <_txe_event_flags_create+0xf0>
40009ba0:	e59f0060 	ldr	r0, [pc, #96]	; 40009c08 <_txe_event_flags_create+0x134>
40009ba4:	e15b0000 	cmp	fp, r0
40009ba8:	0a000003 	beq	40009bbc <_txe_event_flags_create+0xe8>
40009bac:	e59f0058 	ldr	r0, [pc, #88]	; 40009c0c <_txe_event_flags_create+0x138>
40009bb0:	e5900000 	ldr	r0, [r0]
40009bb4:	e3500000 	cmp	r0, #0
40009bb8:	0a000008 	beq	40009be0 <_txe_event_flags_create+0x10c>
40009bbc:	e3a00013 	mov	r0, #19
40009bc0:	eaffffcc 	b	40009af8 <_txe_event_flags_create+0x24>
40009bc4:	e59f0040 	ldr	r0, [pc, #64]	; 40009c0c <_txe_event_flags_create+0x138>
40009bc8:	e5900000 	ldr	r0, [r0]
40009bcc:	e59f103c 	ldr	r1, [pc, #60]	; 40009c10 <_txe_event_flags_create+0x13c>
40009bd0:	e1500001 	cmp	r0, r1
40009bd4:	2a000001 	bcs	40009be0 <_txe_event_flags_create+0x10c>
40009bd8:	e3a00013 	mov	r0, #19
40009bdc:	eaffffc5 	b	40009af8 <_txe_event_flags_create+0x24>
40009be0:	e1a01005 	mov	r1, r5
40009be4:	e1a00004 	mov	r0, r4
40009be8:	eb0007f9 	bl	4000bbd4 <_tx_event_flags_create>
40009bec:	e58d0000 	str	r0, [sp]
40009bf0:	e59d0000 	ldr	r0, [sp]
40009bf4:	eaffffbf 	b	40009af8 <_txe_event_flags_create+0x24>
40009bf8:	40030e54 	.word	0x40030e54
40009bfc:	40030ebc 	.word	0x40030ebc
40009c00:	40030ec0 	.word	0x40030ec0
40009c04:	40030e38 	.word	0x40030e38
40009c08:	40032974 	.word	0x40032974
40009c0c:	40030e30 	.word	0x40030e30
40009c10:	f0f0f0f0 	.word	0xf0f0f0f0

40009c14 <_txe_event_flags_delete>:
40009c14:	e92d4070 	push	{r4, r5, r6, lr}
40009c18:	e1a04000 	mov	r4, r0
40009c1c:	e3540000 	cmp	r4, #0
40009c20:	0a000003 	beq	40009c34 <_txe_event_flags_delete+0x20>
40009c24:	e5940000 	ldr	r0, [r4]
40009c28:	e59f1054 	ldr	r1, [pc, #84]	; 40009c84 <_txe_event_flags_delete+0x70>
40009c2c:	e1500001 	cmp	r0, r1
40009c30:	0a000001 	beq	40009c3c <_txe_event_flags_delete+0x28>
40009c34:	e3a00006 	mov	r0, #6
40009c38:	e8bd8070 	pop	{r4, r5, r6, pc}
40009c3c:	e59f0044 	ldr	r0, [pc, #68]	; 40009c88 <_txe_event_flags_delete+0x74>
40009c40:	e5905000 	ldr	r5, [r0]
40009c44:	e3550000 	cmp	r5, #0
40009c48:	0a000006 	beq	40009c68 <_txe_event_flags_delete+0x54>
40009c4c:	e59f0038 	ldr	r0, [pc, #56]	; 40009c8c <_txe_event_flags_delete+0x78>
40009c50:	e5900000 	ldr	r0, [r0]
40009c54:	e3500000 	cmp	r0, #0
40009c58:	1a000002 	bne	40009c68 <_txe_event_flags_delete+0x54>
40009c5c:	e59f002c 	ldr	r0, [pc, #44]	; 40009c90 <_txe_event_flags_delete+0x7c>
40009c60:	e1550000 	cmp	r5, r0
40009c64:	1a000001 	bne	40009c70 <_txe_event_flags_delete+0x5c>
40009c68:	e3a00013 	mov	r0, #19
40009c6c:	eafffff1 	b	40009c38 <_txe_event_flags_delete+0x24>
40009c70:	e1a00004 	mov	r0, r4
40009c74:	eb000849 	bl	4000bda0 <_tx_event_flags_delete>
40009c78:	e1a06000 	mov	r6, r0
40009c7c:	e1a00006 	mov	r0, r6
40009c80:	eaffffec 	b	40009c38 <_txe_event_flags_delete+0x24>
40009c84:	4456444e 	.word	0x4456444e
40009c88:	40030e38 	.word	0x40030e38
40009c8c:	40030e30 	.word	0x40030e30
40009c90:	40032974 	.word	0x40032974

40009c94 <_txe_event_flags_get>:
40009c94:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009c98:	e1a04000 	mov	r4, r0
40009c9c:	e1a05001 	mov	r5, r1
40009ca0:	e1a06002 	mov	r6, r2
40009ca4:	e1a08003 	mov	r8, r3
40009ca8:	e59d9020 	ldr	r9, [sp, #32]
40009cac:	e3540000 	cmp	r4, #0
40009cb0:	0a000003 	beq	40009cc4 <_txe_event_flags_get+0x30>
40009cb4:	e5940000 	ldr	r0, [r4]
40009cb8:	e59f1084 	ldr	r1, [pc, #132]	; 40009d44 <_txe_event_flags_get+0xb0>
40009cbc:	e1500001 	cmp	r0, r1
40009cc0:	0a000001 	beq	40009ccc <_txe_event_flags_get+0x38>
40009cc4:	e3a00006 	mov	r0, #6
40009cc8:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009ccc:	e3580000 	cmp	r8, #0
40009cd0:	1a000001 	bne	40009cdc <_txe_event_flags_get+0x48>
40009cd4:	e3a00003 	mov	r0, #3
40009cd8:	eafffffa 	b	40009cc8 <_txe_event_flags_get+0x34>
40009cdc:	e3590000 	cmp	r9, #0
40009ce0:	0a00000a 	beq	40009d10 <_txe_event_flags_get+0x7c>
40009ce4:	e59f005c 	ldr	r0, [pc, #92]	; 40009d48 <_txe_event_flags_get+0xb4>
40009ce8:	e5900000 	ldr	r0, [r0]
40009cec:	e3500000 	cmp	r0, #0
40009cf0:	1a000004 	bne	40009d08 <_txe_event_flags_get+0x74>
40009cf4:	e59f0050 	ldr	r0, [pc, #80]	; 40009d4c <_txe_event_flags_get+0xb8>
40009cf8:	e5900000 	ldr	r0, [r0]
40009cfc:	e59f104c 	ldr	r1, [pc, #76]	; 40009d50 <_txe_event_flags_get+0xbc>
40009d00:	e1500001 	cmp	r0, r1
40009d04:	1a000001 	bne	40009d10 <_txe_event_flags_get+0x7c>
40009d08:	e3a00004 	mov	r0, #4
40009d0c:	eaffffed 	b	40009cc8 <_txe_event_flags_get+0x34>
40009d10:	e3560003 	cmp	r6, #3
40009d14:	9a000001 	bls	40009d20 <_txe_event_flags_get+0x8c>
40009d18:	e3a00008 	mov	r0, #8
40009d1c:	eaffffe9 	b	40009cc8 <_txe_event_flags_get+0x34>
40009d20:	e1a03008 	mov	r3, r8
40009d24:	e1a02006 	mov	r2, r6
40009d28:	e1a01005 	mov	r1, r5
40009d2c:	e1a00004 	mov	r0, r4
40009d30:	e58d9000 	str	r9, [sp]
40009d34:	eb0008ac 	bl	4000bfec <_tx_event_flags_get>
40009d38:	e1a07000 	mov	r7, r0
40009d3c:	e1a00007 	mov	r0, r7
40009d40:	eaffffe0 	b	40009cc8 <_txe_event_flags_get+0x34>
40009d44:	4456444e 	.word	0x4456444e
40009d48:	40030e30 	.word	0x40030e30
40009d4c:	40030e38 	.word	0x40030e38
40009d50:	40032974 	.word	0x40032974

40009d54 <_txe_event_flags_set>:
40009d54:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009d58:	e1a04000 	mov	r4, r0
40009d5c:	e1a05001 	mov	r5, r1
40009d60:	e1a06002 	mov	r6, r2
40009d64:	e3540000 	cmp	r4, #0
40009d68:	0a000003 	beq	40009d7c <_txe_event_flags_set+0x28>
40009d6c:	e5940000 	ldr	r0, [r4]
40009d70:	e59f1040 	ldr	r1, [pc, #64]	; 40009db8 <_txe_event_flags_set+0x64>
40009d74:	e1500001 	cmp	r0, r1
40009d78:	0a000001 	beq	40009d84 <_txe_event_flags_set+0x30>
40009d7c:	e3a00006 	mov	r0, #6
40009d80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009d84:	e3560002 	cmp	r6, #2
40009d88:	0a000003 	beq	40009d9c <_txe_event_flags_set+0x48>
40009d8c:	e3560000 	cmp	r6, #0
40009d90:	0a000001 	beq	40009d9c <_txe_event_flags_set+0x48>
40009d94:	e3a00008 	mov	r0, #8
40009d98:	eafffff8 	b	40009d80 <_txe_event_flags_set+0x2c>
40009d9c:	e1a02006 	mov	r2, r6
40009da0:	e1a01005 	mov	r1, r5
40009da4:	e1a00004 	mov	r0, r4
40009da8:	eb000943 	bl	4000c2bc <_tx_event_flags_set>
40009dac:	e1a07000 	mov	r7, r0
40009db0:	e1a00007 	mov	r0, r7
40009db4:	eafffff1 	b	40009d80 <_txe_event_flags_set+0x2c>
40009db8:	4456444e 	.word	0x4456444e

40009dbc <_txe_mutex_create>:
40009dbc:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40009dc0:	e1a04000 	mov	r4, r0
40009dc4:	e1a05001 	mov	r5, r1
40009dc8:	e1a06002 	mov	r6, r2
40009dcc:	e1a07003 	mov	r7, r3
40009dd0:	e3540000 	cmp	r4, #0
40009dd4:	0a000001 	beq	40009de0 <_txe_mutex_create+0x24>
40009dd8:	e3570038 	cmp	r7, #56	; 0x38
40009ddc:	0a000001 	beq	40009de8 <_txe_mutex_create+0x2c>
40009de0:	e3a0001c 	mov	r0, #28
40009de4:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009de8:	e10f0000 	mrs	r0, CPSR
40009dec:	e58d0004 	str	r0, [sp, #4]
40009df0:	e59d0004 	ldr	r0, [sp, #4]
40009df4:	e3808080 	orr	r8, r0, #128	; 0x80
40009df8:	e121f008 	msr	CPSR_c, r8
40009dfc:	e59f0114 	ldr	r0, [pc, #276]	; 40009f18 <_txe_mutex_create+0x15c>
40009e00:	e5900000 	ldr	r0, [r0]
40009e04:	e2800001 	add	r0, r0, #1
40009e08:	e59f1108 	ldr	r1, [pc, #264]	; 40009f18 <_txe_mutex_create+0x15c>
40009e0c:	e5810000 	str	r0, [r1]
40009e10:	e59d0004 	ldr	r0, [sp, #4]
40009e14:	e121f000 	msr	CPSR_c, r0
40009e18:	e59f00fc 	ldr	r0, [pc, #252]	; 40009f1c <_txe_mutex_create+0x160>
40009e1c:	e590a000 	ldr	sl, [r0]
40009e20:	e3a09000 	mov	r9, #0
40009e24:	ea000004 	b	40009e3c <_txe_mutex_create+0x80>
40009e28:	e154000a 	cmp	r4, sl
40009e2c:	1a000000 	bne	40009e34 <_txe_mutex_create+0x78>
40009e30:	ea000005 	b	40009e4c <_txe_mutex_create+0x90>
40009e34:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
40009e38:	e2899001 	add	r9, r9, #1
40009e3c:	e59f00dc 	ldr	r0, [pc, #220]	; 40009f20 <_txe_mutex_create+0x164>
40009e40:	e5900000 	ldr	r0, [r0]
40009e44:	e1590000 	cmp	r9, r0
40009e48:	3afffff6 	bcc	40009e28 <_txe_mutex_create+0x6c>
40009e4c:	e1a00000 	nop			; (mov r0, r0)
40009e50:	e10f0000 	mrs	r0, CPSR
40009e54:	e58d0004 	str	r0, [sp, #4]
40009e58:	e59d0004 	ldr	r0, [sp, #4]
40009e5c:	e3808080 	orr	r8, r0, #128	; 0x80
40009e60:	e121f008 	msr	CPSR_c, r8
40009e64:	e59f00ac 	ldr	r0, [pc, #172]	; 40009f18 <_txe_mutex_create+0x15c>
40009e68:	e5900000 	ldr	r0, [r0]
40009e6c:	e2400001 	sub	r0, r0, #1
40009e70:	e59f10a0 	ldr	r1, [pc, #160]	; 40009f18 <_txe_mutex_create+0x15c>
40009e74:	e5810000 	str	r0, [r1]
40009e78:	e59d0004 	ldr	r0, [sp, #4]
40009e7c:	e121f000 	msr	CPSR_c, r0
40009e80:	eb0014a7 	bl	4000f124 <_tx_thread_system_preempt_check>
40009e84:	e154000a 	cmp	r4, sl
40009e88:	1a000001 	bne	40009e94 <_txe_mutex_create+0xd8>
40009e8c:	e3a0001c 	mov	r0, #28
40009e90:	eaffffd3 	b	40009de4 <_txe_mutex_create+0x28>
40009e94:	e3560001 	cmp	r6, #1
40009e98:	0a000003 	beq	40009eac <_txe_mutex_create+0xf0>
40009e9c:	e3560000 	cmp	r6, #0
40009ea0:	0a000001 	beq	40009eac <_txe_mutex_create+0xf0>
40009ea4:	e3a0001f 	mov	r0, #31
40009ea8:	eaffffcd 	b	40009de4 <_txe_mutex_create+0x28>
40009eac:	e59f0070 	ldr	r0, [pc, #112]	; 40009f24 <_txe_mutex_create+0x168>
40009eb0:	e590b000 	ldr	fp, [r0]
40009eb4:	e35b0000 	cmp	fp, #0
40009eb8:	0a000008 	beq	40009ee0 <_txe_mutex_create+0x124>
40009ebc:	e59f0064 	ldr	r0, [pc, #100]	; 40009f28 <_txe_mutex_create+0x16c>
40009ec0:	e15b0000 	cmp	fp, r0
40009ec4:	0a000003 	beq	40009ed8 <_txe_mutex_create+0x11c>
40009ec8:	e59f005c 	ldr	r0, [pc, #92]	; 40009f2c <_txe_mutex_create+0x170>
40009ecc:	e5900000 	ldr	r0, [r0]
40009ed0:	e3500000 	cmp	r0, #0
40009ed4:	0a000008 	beq	40009efc <_txe_mutex_create+0x140>
40009ed8:	e3a00013 	mov	r0, #19
40009edc:	eaffffc0 	b	40009de4 <_txe_mutex_create+0x28>
40009ee0:	e59f0044 	ldr	r0, [pc, #68]	; 40009f2c <_txe_mutex_create+0x170>
40009ee4:	e5900000 	ldr	r0, [r0]
40009ee8:	e59f1040 	ldr	r1, [pc, #64]	; 40009f30 <_txe_mutex_create+0x174>
40009eec:	e1500001 	cmp	r0, r1
40009ef0:	2a000001 	bcs	40009efc <_txe_mutex_create+0x140>
40009ef4:	e3a00013 	mov	r0, #19
40009ef8:	eaffffb9 	b	40009de4 <_txe_mutex_create+0x28>
40009efc:	e1a02006 	mov	r2, r6
40009f00:	e1a01005 	mov	r1, r5
40009f04:	e1a00004 	mov	r0, r4
40009f08:	eb000a8f 	bl	4000c94c <_tx_mutex_create>
40009f0c:	e58d0000 	str	r0, [sp]
40009f10:	e59d0000 	ldr	r0, [sp]
40009f14:	eaffffb2 	b	40009de4 <_txe_mutex_create+0x28>
40009f18:	40030e54 	.word	0x40030e54
40009f1c:	40030ec4 	.word	0x40030ec4
40009f20:	40030ec8 	.word	0x40030ec8
40009f24:	40030e38 	.word	0x40030e38
40009f28:	40032974 	.word	0x40032974
40009f2c:	40030e30 	.word	0x40030e30
40009f30:	f0f0f0f0 	.word	0xf0f0f0f0

40009f34 <_txe_mutex_delete>:
40009f34:	e92d4070 	push	{r4, r5, r6, lr}
40009f38:	e1a04000 	mov	r4, r0
40009f3c:	e3540000 	cmp	r4, #0
40009f40:	0a000003 	beq	40009f54 <_txe_mutex_delete+0x20>
40009f44:	e5940000 	ldr	r0, [r4]
40009f48:	e59f1054 	ldr	r1, [pc, #84]	; 40009fa4 <_txe_mutex_delete+0x70>
40009f4c:	e1500001 	cmp	r0, r1
40009f50:	0a000001 	beq	40009f5c <_txe_mutex_delete+0x28>
40009f54:	e3a0001c 	mov	r0, #28
40009f58:	e8bd8070 	pop	{r4, r5, r6, pc}
40009f5c:	e59f0044 	ldr	r0, [pc, #68]	; 40009fa8 <_txe_mutex_delete+0x74>
40009f60:	e5905000 	ldr	r5, [r0]
40009f64:	e3550000 	cmp	r5, #0
40009f68:	0a000006 	beq	40009f88 <_txe_mutex_delete+0x54>
40009f6c:	e59f0038 	ldr	r0, [pc, #56]	; 40009fac <_txe_mutex_delete+0x78>
40009f70:	e5900000 	ldr	r0, [r0]
40009f74:	e3500000 	cmp	r0, #0
40009f78:	1a000002 	bne	40009f88 <_txe_mutex_delete+0x54>
40009f7c:	e59f002c 	ldr	r0, [pc, #44]	; 40009fb0 <_txe_mutex_delete+0x7c>
40009f80:	e1550000 	cmp	r5, r0
40009f84:	1a000001 	bne	40009f90 <_txe_mutex_delete+0x5c>
40009f88:	e3a00013 	mov	r0, #19
40009f8c:	eafffff1 	b	40009f58 <_txe_mutex_delete+0x24>
40009f90:	e1a00004 	mov	r0, r4
40009f94:	eb000ae2 	bl	4000cb24 <_tx_mutex_delete>
40009f98:	e1a06000 	mov	r6, r0
40009f9c:	e1a00006 	mov	r0, r6
40009fa0:	eaffffec 	b	40009f58 <_txe_mutex_delete+0x24>
40009fa4:	4d555445 	.word	0x4d555445
40009fa8:	40030e38 	.word	0x40030e38
40009fac:	40030e30 	.word	0x40030e30
40009fb0:	40032974 	.word	0x40032974

40009fb4 <_txe_mutex_get>:
40009fb4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009fb8:	e1a04000 	mov	r4, r0
40009fbc:	e1a05001 	mov	r5, r1
40009fc0:	e3540000 	cmp	r4, #0
40009fc4:	0a000003 	beq	40009fd8 <_txe_mutex_get+0x24>
40009fc8:	e5940000 	ldr	r0, [r4]
40009fcc:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a074 <_txe_mutex_get+0xc0>
40009fd0:	e1500001 	cmp	r0, r1
40009fd4:	0a000001 	beq	40009fe0 <_txe_mutex_get+0x2c>
40009fd8:	e3a0001c 	mov	r0, #28
40009fdc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009fe0:	e59f0090 	ldr	r0, [pc, #144]	; 4000a078 <_txe_mutex_get+0xc4>
40009fe4:	e5906000 	ldr	r6, [r0]
40009fe8:	e3550000 	cmp	r5, #0
40009fec:	0a000008 	beq	4000a014 <_txe_mutex_get+0x60>
40009ff0:	e59f0084 	ldr	r0, [pc, #132]	; 4000a07c <_txe_mutex_get+0xc8>
40009ff4:	e5900000 	ldr	r0, [r0]
40009ff8:	e3500000 	cmp	r0, #0
40009ffc:	1a000002 	bne	4000a00c <_txe_mutex_get+0x58>
4000a000:	e59f0078 	ldr	r0, [pc, #120]	; 4000a080 <_txe_mutex_get+0xcc>
4000a004:	e1560000 	cmp	r6, r0
4000a008:	1a000001 	bne	4000a014 <_txe_mutex_get+0x60>
4000a00c:	e3a00004 	mov	r0, #4
4000a010:	eafffff1 	b	40009fdc <_txe_mutex_get+0x28>
4000a014:	e3560000 	cmp	r6, #0
4000a018:	0a000008 	beq	4000a040 <_txe_mutex_get+0x8c>
4000a01c:	e59f005c 	ldr	r0, [pc, #92]	; 4000a080 <_txe_mutex_get+0xcc>
4000a020:	e1560000 	cmp	r6, r0
4000a024:	0a000003 	beq	4000a038 <_txe_mutex_get+0x84>
4000a028:	e59f004c 	ldr	r0, [pc, #76]	; 4000a07c <_txe_mutex_get+0xc8>
4000a02c:	e5900000 	ldr	r0, [r0]
4000a030:	e3500000 	cmp	r0, #0
4000a034:	0a000008 	beq	4000a05c <_txe_mutex_get+0xa8>
4000a038:	e3a00013 	mov	r0, #19
4000a03c:	eaffffe6 	b	40009fdc <_txe_mutex_get+0x28>
4000a040:	e59f0034 	ldr	r0, [pc, #52]	; 4000a07c <_txe_mutex_get+0xc8>
4000a044:	e5900000 	ldr	r0, [r0]
4000a048:	e59f1034 	ldr	r1, [pc, #52]	; 4000a084 <_txe_mutex_get+0xd0>
4000a04c:	e1500001 	cmp	r0, r1
4000a050:	2a000001 	bcs	4000a05c <_txe_mutex_get+0xa8>
4000a054:	e3a00013 	mov	r0, #19
4000a058:	eaffffdf 	b	40009fdc <_txe_mutex_get+0x28>
4000a05c:	e1a01005 	mov	r1, r5
4000a060:	e1a00004 	mov	r0, r4
4000a064:	eb000b65 	bl	4000ce00 <_tx_mutex_get>
4000a068:	e1a07000 	mov	r7, r0
4000a06c:	e1a00007 	mov	r0, r7
4000a070:	eaffffd9 	b	40009fdc <_txe_mutex_get+0x28>
4000a074:	4d555445 	.word	0x4d555445
4000a078:	40030e38 	.word	0x40030e38
4000a07c:	40030e30 	.word	0x40030e30
4000a080:	40032974 	.word	0x40032974
4000a084:	f0f0f0f0 	.word	0xf0f0f0f0

4000a088 <_txe_mutex_put>:
4000a088:	e92d4070 	push	{r4, r5, r6, lr}
4000a08c:	e1a04000 	mov	r4, r0
4000a090:	e3540000 	cmp	r4, #0
4000a094:	0a000003 	beq	4000a0a8 <_txe_mutex_put+0x20>
4000a098:	e5940000 	ldr	r0, [r4]
4000a09c:	e59f1070 	ldr	r1, [pc, #112]	; 4000a114 <_txe_mutex_put+0x8c>
4000a0a0:	e1500001 	cmp	r0, r1
4000a0a4:	0a000001 	beq	4000a0b0 <_txe_mutex_put+0x28>
4000a0a8:	e3a0001c 	mov	r0, #28
4000a0ac:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a0b0:	e59f0060 	ldr	r0, [pc, #96]	; 4000a118 <_txe_mutex_put+0x90>
4000a0b4:	e5905000 	ldr	r5, [r0]
4000a0b8:	e3550000 	cmp	r5, #0
4000a0bc:	0a000008 	beq	4000a0e4 <_txe_mutex_put+0x5c>
4000a0c0:	e59f0054 	ldr	r0, [pc, #84]	; 4000a11c <_txe_mutex_put+0x94>
4000a0c4:	e1550000 	cmp	r5, r0
4000a0c8:	0a000003 	beq	4000a0dc <_txe_mutex_put+0x54>
4000a0cc:	e59f004c 	ldr	r0, [pc, #76]	; 4000a120 <_txe_mutex_put+0x98>
4000a0d0:	e5900000 	ldr	r0, [r0]
4000a0d4:	e3500000 	cmp	r0, #0
4000a0d8:	0a000008 	beq	4000a100 <_txe_mutex_put+0x78>
4000a0dc:	e3a00013 	mov	r0, #19
4000a0e0:	eafffff1 	b	4000a0ac <_txe_mutex_put+0x24>
4000a0e4:	e59f0034 	ldr	r0, [pc, #52]	; 4000a120 <_txe_mutex_put+0x98>
4000a0e8:	e5900000 	ldr	r0, [r0]
4000a0ec:	e59f1030 	ldr	r1, [pc, #48]	; 4000a124 <_txe_mutex_put+0x9c>
4000a0f0:	e1500001 	cmp	r0, r1
4000a0f4:	2a000001 	bcs	4000a100 <_txe_mutex_put+0x78>
4000a0f8:	e3a00013 	mov	r0, #19
4000a0fc:	eaffffea 	b	4000a0ac <_txe_mutex_put+0x24>
4000a100:	e1a00004 	mov	r0, r4
4000a104:	eb000c1c 	bl	4000d17c <_tx_mutex_put>
4000a108:	e1a06000 	mov	r6, r0
4000a10c:	e1a00006 	mov	r0, r6
4000a110:	eaffffe5 	b	4000a0ac <_txe_mutex_put+0x24>
4000a114:	4d555445 	.word	0x4d555445
4000a118:	40030e38 	.word	0x40030e38
4000a11c:	40032974 	.word	0x40032974
4000a120:	40030e30 	.word	0x40030e30
4000a124:	f0f0f0f0 	.word	0xf0f0f0f0

4000a128 <_txe_queue_create>:
4000a128:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a12c:	e24dd014 	sub	sp, sp, #20
4000a130:	e1a04000 	mov	r4, r0
4000a134:	e1a05002 	mov	r5, r2
4000a138:	e1a06003 	mov	r6, r3
4000a13c:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a140:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a144:	e3540000 	cmp	r4, #0
4000a148:	0a000001 	beq	4000a154 <_txe_queue_create+0x2c>
4000a14c:	e358003c 	cmp	r8, #60	; 0x3c
4000a150:	0a000002 	beq	4000a160 <_txe_queue_create+0x38>
4000a154:	e3a00009 	mov	r0, #9
4000a158:	e28dd024 	add	sp, sp, #36	; 0x24
4000a15c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a160:	e10f9000 	mrs	r9, CPSR
4000a164:	e389a080 	orr	sl, r9, #128	; 0x80
4000a168:	e121f00a 	msr	CPSR_c, sl
4000a16c:	e59f0150 	ldr	r0, [pc, #336]	; 4000a2c4 <_txe_queue_create+0x19c>
4000a170:	e5900000 	ldr	r0, [r0]
4000a174:	e2800001 	add	r0, r0, #1
4000a178:	e59f1144 	ldr	r1, [pc, #324]	; 4000a2c4 <_txe_queue_create+0x19c>
4000a17c:	e5810000 	str	r0, [r1]
4000a180:	e121f009 	msr	CPSR_c, r9
4000a184:	e59f013c 	ldr	r0, [pc, #316]	; 4000a2c8 <_txe_queue_create+0x1a0>
4000a188:	e5900000 	ldr	r0, [r0]
4000a18c:	e58d0008 	str	r0, [sp, #8]
4000a190:	e3a00000 	mov	r0, #0
4000a194:	e58d000c 	str	r0, [sp, #12]
4000a198:	ea000009 	b	4000a1c4 <_txe_queue_create+0x9c>
4000a19c:	e59d0008 	ldr	r0, [sp, #8]
4000a1a0:	e1540000 	cmp	r4, r0
4000a1a4:	1a000000 	bne	4000a1ac <_txe_queue_create+0x84>
4000a1a8:	ea00000a 	b	4000a1d8 <_txe_queue_create+0xb0>
4000a1ac:	e59d0008 	ldr	r0, [sp, #8]
4000a1b0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a1b4:	e58d0008 	str	r0, [sp, #8]
4000a1b8:	e59d000c 	ldr	r0, [sp, #12]
4000a1bc:	e2800001 	add	r0, r0, #1
4000a1c0:	e58d000c 	str	r0, [sp, #12]
4000a1c4:	e59f1100 	ldr	r1, [pc, #256]	; 4000a2cc <_txe_queue_create+0x1a4>
4000a1c8:	e59d000c 	ldr	r0, [sp, #12]
4000a1cc:	e5911000 	ldr	r1, [r1]
4000a1d0:	e1500001 	cmp	r0, r1
4000a1d4:	3afffff0 	bcc	4000a19c <_txe_queue_create+0x74>
4000a1d8:	e1a00000 	nop			; (mov r0, r0)
4000a1dc:	e10f9000 	mrs	r9, CPSR
4000a1e0:	e389a080 	orr	sl, r9, #128	; 0x80
4000a1e4:	e121f00a 	msr	CPSR_c, sl
4000a1e8:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a2c4 <_txe_queue_create+0x19c>
4000a1ec:	e5900000 	ldr	r0, [r0]
4000a1f0:	e2400001 	sub	r0, r0, #1
4000a1f4:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a2c4 <_txe_queue_create+0x19c>
4000a1f8:	e5810000 	str	r0, [r1]
4000a1fc:	e121f009 	msr	CPSR_c, r9
4000a200:	eb0013c7 	bl	4000f124 <_tx_thread_system_preempt_check>
4000a204:	e59d0008 	ldr	r0, [sp, #8]
4000a208:	e1540000 	cmp	r4, r0
4000a20c:	1a000001 	bne	4000a218 <_txe_queue_create+0xf0>
4000a210:	e3a00009 	mov	r0, #9
4000a214:	eaffffcf 	b	4000a158 <_txe_queue_create+0x30>
4000a218:	e3560000 	cmp	r6, #0
4000a21c:	1a000001 	bne	4000a228 <_txe_queue_create+0x100>
4000a220:	e3a00003 	mov	r0, #3
4000a224:	eaffffcb 	b	4000a158 <_txe_queue_create+0x30>
4000a228:	e3550000 	cmp	r5, #0
4000a22c:	0a000001 	beq	4000a238 <_txe_queue_create+0x110>
4000a230:	e3550010 	cmp	r5, #16
4000a234:	9a000001 	bls	4000a240 <_txe_queue_create+0x118>
4000a238:	e3a00005 	mov	r0, #5
4000a23c:	eaffffc5 	b	4000a158 <_txe_queue_create+0x30>
4000a240:	e1550127 	cmp	r5, r7, lsr #2
4000a244:	9a000001 	bls	4000a250 <_txe_queue_create+0x128>
4000a248:	e3a00005 	mov	r0, #5
4000a24c:	eaffffc1 	b	4000a158 <_txe_queue_create+0x30>
4000a250:	e59f0078 	ldr	r0, [pc, #120]	; 4000a2d0 <_txe_queue_create+0x1a8>
4000a254:	e590b000 	ldr	fp, [r0]
4000a258:	e35b0000 	cmp	fp, #0
4000a25c:	0a000008 	beq	4000a284 <_txe_queue_create+0x15c>
4000a260:	e59f006c 	ldr	r0, [pc, #108]	; 4000a2d4 <_txe_queue_create+0x1ac>
4000a264:	e15b0000 	cmp	fp, r0
4000a268:	0a000003 	beq	4000a27c <_txe_queue_create+0x154>
4000a26c:	e59f0064 	ldr	r0, [pc, #100]	; 4000a2d8 <_txe_queue_create+0x1b0>
4000a270:	e5900000 	ldr	r0, [r0]
4000a274:	e3500000 	cmp	r0, #0
4000a278:	0a000008 	beq	4000a2a0 <_txe_queue_create+0x178>
4000a27c:	e3a00013 	mov	r0, #19
4000a280:	eaffffb4 	b	4000a158 <_txe_queue_create+0x30>
4000a284:	e59f004c 	ldr	r0, [pc, #76]	; 4000a2d8 <_txe_queue_create+0x1b0>
4000a288:	e5900000 	ldr	r0, [r0]
4000a28c:	e59f1048 	ldr	r1, [pc, #72]	; 4000a2dc <_txe_queue_create+0x1b4>
4000a290:	e1500001 	cmp	r0, r1
4000a294:	2a000001 	bcs	4000a2a0 <_txe_queue_create+0x178>
4000a298:	e3a00013 	mov	r0, #19
4000a29c:	eaffffad 	b	4000a158 <_txe_queue_create+0x30>
4000a2a0:	e1a03006 	mov	r3, r6
4000a2a4:	e1a02005 	mov	r2, r5
4000a2a8:	e58d7000 	str	r7, [sp]
4000a2ac:	e1a00004 	mov	r0, r4
4000a2b0:	e59d1018 	ldr	r1, [sp, #24]
4000a2b4:	eb000ce5 	bl	4000d650 <_tx_queue_create>
4000a2b8:	e58d0010 	str	r0, [sp, #16]
4000a2bc:	e59d0010 	ldr	r0, [sp, #16]
4000a2c0:	eaffffa4 	b	4000a158 <_txe_queue_create+0x30>
4000a2c4:	40030e54 	.word	0x40030e54
4000a2c8:	40030eb4 	.word	0x40030eb4
4000a2cc:	40030eb8 	.word	0x40030eb8
4000a2d0:	40030e38 	.word	0x40030e38
4000a2d4:	40032974 	.word	0x40032974
4000a2d8:	40030e30 	.word	0x40030e30
4000a2dc:	f0f0f0f0 	.word	0xf0f0f0f0

4000a2e0 <_txe_queue_front_send>:
4000a2e0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a2e4:	e1a04000 	mov	r4, r0
4000a2e8:	e1a05001 	mov	r5, r1
4000a2ec:	e1a06002 	mov	r6, r2
4000a2f0:	e3540000 	cmp	r4, #0
4000a2f4:	0a000003 	beq	4000a308 <_txe_queue_front_send+0x28>
4000a2f8:	e5940000 	ldr	r0, [r4]
4000a2fc:	e59f106c 	ldr	r1, [pc, #108]	; 4000a370 <_txe_queue_front_send+0x90>
4000a300:	e1500001 	cmp	r0, r1
4000a304:	0a000001 	beq	4000a310 <_txe_queue_front_send+0x30>
4000a308:	e3a00009 	mov	r0, #9
4000a30c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a310:	e3550000 	cmp	r5, #0
4000a314:	1a000001 	bne	4000a320 <_txe_queue_front_send+0x40>
4000a318:	e3a00003 	mov	r0, #3
4000a31c:	eafffffa 	b	4000a30c <_txe_queue_front_send+0x2c>
4000a320:	e3560000 	cmp	r6, #0
4000a324:	0a00000a 	beq	4000a354 <_txe_queue_front_send+0x74>
4000a328:	e59f0044 	ldr	r0, [pc, #68]	; 4000a374 <_txe_queue_front_send+0x94>
4000a32c:	e5900000 	ldr	r0, [r0]
4000a330:	e3500000 	cmp	r0, #0
4000a334:	1a000004 	bne	4000a34c <_txe_queue_front_send+0x6c>
4000a338:	e59f0038 	ldr	r0, [pc, #56]	; 4000a378 <_txe_queue_front_send+0x98>
4000a33c:	e5900000 	ldr	r0, [r0]
4000a340:	e59f1034 	ldr	r1, [pc, #52]	; 4000a37c <_txe_queue_front_send+0x9c>
4000a344:	e1500001 	cmp	r0, r1
4000a348:	1a000001 	bne	4000a354 <_txe_queue_front_send+0x74>
4000a34c:	e3a00004 	mov	r0, #4
4000a350:	eaffffed 	b	4000a30c <_txe_queue_front_send+0x2c>
4000a354:	e1a02006 	mov	r2, r6
4000a358:	e1a01005 	mov	r1, r5
4000a35c:	e1a00004 	mov	r0, r4
4000a360:	eb000d3d 	bl	4000d85c <_tx_queue_front_send>
4000a364:	e1a07000 	mov	r7, r0
4000a368:	e1a00007 	mov	r0, r7
4000a36c:	eaffffe6 	b	4000a30c <_txe_queue_front_send+0x2c>
4000a370:	51554555 	.word	0x51554555
4000a374:	40030e30 	.word	0x40030e30
4000a378:	40030e38 	.word	0x40030e38
4000a37c:	40032974 	.word	0x40032974

4000a380 <_txe_queue_receive>:
4000a380:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a384:	e1a04000 	mov	r4, r0
4000a388:	e1a05001 	mov	r5, r1
4000a38c:	e1a06002 	mov	r6, r2
4000a390:	e3540000 	cmp	r4, #0
4000a394:	0a000003 	beq	4000a3a8 <_txe_queue_receive+0x28>
4000a398:	e5940000 	ldr	r0, [r4]
4000a39c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a410 <_txe_queue_receive+0x90>
4000a3a0:	e1500001 	cmp	r0, r1
4000a3a4:	0a000001 	beq	4000a3b0 <_txe_queue_receive+0x30>
4000a3a8:	e3a00009 	mov	r0, #9
4000a3ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a3b0:	e3550000 	cmp	r5, #0
4000a3b4:	1a000001 	bne	4000a3c0 <_txe_queue_receive+0x40>
4000a3b8:	e3a00003 	mov	r0, #3
4000a3bc:	eafffffa 	b	4000a3ac <_txe_queue_receive+0x2c>
4000a3c0:	e3560000 	cmp	r6, #0
4000a3c4:	0a00000a 	beq	4000a3f4 <_txe_queue_receive+0x74>
4000a3c8:	e59f0044 	ldr	r0, [pc, #68]	; 4000a414 <_txe_queue_receive+0x94>
4000a3cc:	e5900000 	ldr	r0, [r0]
4000a3d0:	e3500000 	cmp	r0, #0
4000a3d4:	1a000004 	bne	4000a3ec <_txe_queue_receive+0x6c>
4000a3d8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a418 <_txe_queue_receive+0x98>
4000a3dc:	e5900000 	ldr	r0, [r0]
4000a3e0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a41c <_txe_queue_receive+0x9c>
4000a3e4:	e1500001 	cmp	r0, r1
4000a3e8:	1a000001 	bne	4000a3f4 <_txe_queue_receive+0x74>
4000a3ec:	e3a00004 	mov	r0, #4
4000a3f0:	eaffffed 	b	4000a3ac <_txe_queue_receive+0x2c>
4000a3f4:	e1a02006 	mov	r2, r6
4000a3f8:	e1a01005 	mov	r1, r5
4000a3fc:	e1a00004 	mov	r0, r4
4000a400:	eb000e04 	bl	4000dc18 <_tx_queue_receive>
4000a404:	e1a07000 	mov	r7, r0
4000a408:	e1a00007 	mov	r0, r7
4000a40c:	eaffffe6 	b	4000a3ac <_txe_queue_receive+0x2c>
4000a410:	51554555 	.word	0x51554555
4000a414:	40030e30 	.word	0x40030e30
4000a418:	40030e38 	.word	0x40030e38
4000a41c:	40032974 	.word	0x40032974

4000a420 <_txe_queue_send>:
4000a420:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a424:	e1a04000 	mov	r4, r0
4000a428:	e1a05001 	mov	r5, r1
4000a42c:	e1a06002 	mov	r6, r2
4000a430:	e3540000 	cmp	r4, #0
4000a434:	0a000003 	beq	4000a448 <_txe_queue_send+0x28>
4000a438:	e5940000 	ldr	r0, [r4]
4000a43c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a4b0 <_txe_queue_send+0x90>
4000a440:	e1500001 	cmp	r0, r1
4000a444:	0a000001 	beq	4000a450 <_txe_queue_send+0x30>
4000a448:	e3a00009 	mov	r0, #9
4000a44c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a450:	e3550000 	cmp	r5, #0
4000a454:	1a000001 	bne	4000a460 <_txe_queue_send+0x40>
4000a458:	e3a00003 	mov	r0, #3
4000a45c:	eafffffa 	b	4000a44c <_txe_queue_send+0x2c>
4000a460:	e3560000 	cmp	r6, #0
4000a464:	0a00000a 	beq	4000a494 <_txe_queue_send+0x74>
4000a468:	e59f0044 	ldr	r0, [pc, #68]	; 4000a4b4 <_txe_queue_send+0x94>
4000a46c:	e5900000 	ldr	r0, [r0]
4000a470:	e3500000 	cmp	r0, #0
4000a474:	1a000004 	bne	4000a48c <_txe_queue_send+0x6c>
4000a478:	e59f0038 	ldr	r0, [pc, #56]	; 4000a4b8 <_txe_queue_send+0x98>
4000a47c:	e5900000 	ldr	r0, [r0]
4000a480:	e59f1034 	ldr	r1, [pc, #52]	; 4000a4bc <_txe_queue_send+0x9c>
4000a484:	e1500001 	cmp	r0, r1
4000a488:	1a000001 	bne	4000a494 <_txe_queue_send+0x74>
4000a48c:	e3a00004 	mov	r0, #4
4000a490:	eaffffed 	b	4000a44c <_txe_queue_send+0x2c>
4000a494:	e1a02006 	mov	r2, r6
4000a498:	e1a01005 	mov	r1, r5
4000a49c:	e1a00004 	mov	r0, r4
4000a4a0:	eb000ef4 	bl	4000e078 <_tx_queue_send>
4000a4a4:	e1a07000 	mov	r7, r0
4000a4a8:	e1a00007 	mov	r0, r7
4000a4ac:	eaffffe6 	b	4000a44c <_txe_queue_send+0x2c>
4000a4b0:	51554555 	.word	0x51554555
4000a4b4:	40030e30 	.word	0x40030e30
4000a4b8:	40030e38 	.word	0x40030e38
4000a4bc:	40032974 	.word	0x40032974

4000a4c0 <_txe_thread_create>:
4000a4c0:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a4c4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a4c8:	e1a04000 	mov	r4, r0
4000a4cc:	e1a05002 	mov	r5, r2
4000a4d0:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a4d4:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a4d8:	e3540000 	cmp	r4, #0
4000a4dc:	0a000002 	beq	4000a4ec <_txe_thread_create+0x2c>
4000a4e0:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a4e4:	e35000a8 	cmp	r0, #168	; 0xa8
4000a4e8:	0a000002 	beq	4000a4f8 <_txe_thread_create+0x38>
4000a4ec:	e3a0000e 	mov	r0, #14
4000a4f0:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a4f4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a4f8:	e10f0000 	mrs	r0, CPSR
4000a4fc:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a500:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a504:	e3800080 	orr	r0, r0, #128	; 0x80
4000a508:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a50c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a510:	e121f000 	msr	CPSR_c, r0
4000a514:	e59f01ec 	ldr	r0, [pc, #492]	; 4000a708 <_txe_thread_create+0x248>
4000a518:	e5900000 	ldr	r0, [r0]
4000a51c:	e2800001 	add	r0, r0, #1
4000a520:	e59f11e0 	ldr	r1, [pc, #480]	; 4000a708 <_txe_thread_create+0x248>
4000a524:	e5810000 	str	r0, [r1]
4000a528:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a52c:	e121f000 	msr	CPSR_c, r0
4000a530:	e59f01d4 	ldr	r0, [pc, #468]	; 4000a70c <_txe_thread_create+0x24c>
4000a534:	e5900000 	ldr	r0, [r0]
4000a538:	e58d0018 	str	r0, [sp, #24]
4000a53c:	e2470001 	sub	r0, r7, #1
4000a540:	e080b006 	add	fp, r0, r6
4000a544:	e3a00000 	mov	r0, #0
4000a548:	e58d001c 	str	r0, [sp, #28]
4000a54c:	ea00001d 	b	4000a5c8 <_txe_thread_create+0x108>
4000a550:	e59d0018 	ldr	r0, [sp, #24]
4000a554:	e1540000 	cmp	r4, r0
4000a558:	1a000000 	bne	4000a560 <_txe_thread_create+0xa0>
4000a55c:	ea00001e 	b	4000a5dc <_txe_thread_create+0x11c>
4000a560:	e59d0018 	ldr	r0, [sp, #24]
4000a564:	e590000c 	ldr	r0, [r0, #12]
4000a568:	e1500006 	cmp	r0, r6
4000a56c:	8a000005 	bhi	4000a588 <_txe_thread_create+0xc8>
4000a570:	e59d0018 	ldr	r0, [sp, #24]
4000a574:	e5900010 	ldr	r0, [r0, #16]
4000a578:	e1500006 	cmp	r0, r6
4000a57c:	9a000001 	bls	4000a588 <_txe_thread_create+0xc8>
4000a580:	e3a06000 	mov	r6, #0
4000a584:	ea000014 	b	4000a5dc <_txe_thread_create+0x11c>
4000a588:	e59d0018 	ldr	r0, [sp, #24]
4000a58c:	e590000c 	ldr	r0, [r0, #12]
4000a590:	e150000b 	cmp	r0, fp
4000a594:	8a000005 	bhi	4000a5b0 <_txe_thread_create+0xf0>
4000a598:	e59d0018 	ldr	r0, [sp, #24]
4000a59c:	e5900010 	ldr	r0, [r0, #16]
4000a5a0:	e150000b 	cmp	r0, fp
4000a5a4:	9a000001 	bls	4000a5b0 <_txe_thread_create+0xf0>
4000a5a8:	e3a06000 	mov	r6, #0
4000a5ac:	ea00000a 	b	4000a5dc <_txe_thread_create+0x11c>
4000a5b0:	e59d0018 	ldr	r0, [sp, #24]
4000a5b4:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a5b8:	e58d0018 	str	r0, [sp, #24]
4000a5bc:	e59d001c 	ldr	r0, [sp, #28]
4000a5c0:	e2800001 	add	r0, r0, #1
4000a5c4:	e58d001c 	str	r0, [sp, #28]
4000a5c8:	e59f1140 	ldr	r1, [pc, #320]	; 4000a710 <_txe_thread_create+0x250>
4000a5cc:	e59d001c 	ldr	r0, [sp, #28]
4000a5d0:	e5911000 	ldr	r1, [r1]
4000a5d4:	e1500001 	cmp	r0, r1
4000a5d8:	3affffdc 	bcc	4000a550 <_txe_thread_create+0x90>
4000a5dc:	e1a00000 	nop			; (mov r0, r0)
4000a5e0:	e10f0000 	mrs	r0, CPSR
4000a5e4:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a5e8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a5ec:	e3800080 	orr	r0, r0, #128	; 0x80
4000a5f0:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a5f4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a5f8:	e121f000 	msr	CPSR_c, r0
4000a5fc:	e59f0104 	ldr	r0, [pc, #260]	; 4000a708 <_txe_thread_create+0x248>
4000a600:	e5900000 	ldr	r0, [r0]
4000a604:	e2400001 	sub	r0, r0, #1
4000a608:	e59f10f8 	ldr	r1, [pc, #248]	; 4000a708 <_txe_thread_create+0x248>
4000a60c:	e5810000 	str	r0, [r1]
4000a610:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a614:	e121f000 	msr	CPSR_c, r0
4000a618:	eb0012c1 	bl	4000f124 <_tx_thread_system_preempt_check>
4000a61c:	e59d0018 	ldr	r0, [sp, #24]
4000a620:	e1540000 	cmp	r4, r0
4000a624:	1a000001 	bne	4000a630 <_txe_thread_create+0x170>
4000a628:	e3a0000e 	mov	r0, #14
4000a62c:	eaffffaf 	b	4000a4f0 <_txe_thread_create+0x30>
4000a630:	e3560000 	cmp	r6, #0
4000a634:	0a000001 	beq	4000a640 <_txe_thread_create+0x180>
4000a638:	e3550000 	cmp	r5, #0
4000a63c:	1a000001 	bne	4000a648 <_txe_thread_create+0x188>
4000a640:	e3a00003 	mov	r0, #3
4000a644:	eaffffa9 	b	4000a4f0 <_txe_thread_create+0x30>
4000a648:	e35700c8 	cmp	r7, #200	; 0xc8
4000a64c:	2a000001 	bcs	4000a658 <_txe_thread_create+0x198>
4000a650:	e3a00005 	mov	r0, #5
4000a654:	eaffffa5 	b	4000a4f0 <_txe_thread_create+0x30>
4000a658:	e3580020 	cmp	r8, #32
4000a65c:	3a000001 	bcc	4000a668 <_txe_thread_create+0x1a8>
4000a660:	e3a0000f 	mov	r0, #15
4000a664:	eaffffa1 	b	4000a4f0 <_txe_thread_create+0x30>
4000a668:	e1590008 	cmp	r9, r8
4000a66c:	9a000001 	bls	4000a678 <_txe_thread_create+0x1b8>
4000a670:	e3a00018 	mov	r0, #24
4000a674:	eaffff9d 	b	4000a4f0 <_txe_thread_create+0x30>
4000a678:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a67c:	e3500001 	cmp	r0, #1
4000a680:	9a000001 	bls	4000a68c <_txe_thread_create+0x1cc>
4000a684:	e3a00010 	mov	r0, #16
4000a688:	eaffff98 	b	4000a4f0 <_txe_thread_create+0x30>
4000a68c:	e59f0080 	ldr	r0, [pc, #128]	; 4000a714 <_txe_thread_create+0x254>
4000a690:	e590a000 	ldr	sl, [r0]
4000a694:	e35a0000 	cmp	sl, #0
4000a698:	0a000008 	beq	4000a6c0 <_txe_thread_create+0x200>
4000a69c:	e59f0074 	ldr	r0, [pc, #116]	; 4000a718 <_txe_thread_create+0x258>
4000a6a0:	e15a0000 	cmp	sl, r0
4000a6a4:	0a000003 	beq	4000a6b8 <_txe_thread_create+0x1f8>
4000a6a8:	e59f006c 	ldr	r0, [pc, #108]	; 4000a71c <_txe_thread_create+0x25c>
4000a6ac:	e5900000 	ldr	r0, [r0]
4000a6b0:	e3500000 	cmp	r0, #0
4000a6b4:	0a000008 	beq	4000a6dc <_txe_thread_create+0x21c>
4000a6b8:	e3a00013 	mov	r0, #19
4000a6bc:	eaffff8b 	b	4000a4f0 <_txe_thread_create+0x30>
4000a6c0:	e59f0054 	ldr	r0, [pc, #84]	; 4000a71c <_txe_thread_create+0x25c>
4000a6c4:	e5900000 	ldr	r0, [r0]
4000a6c8:	e59f1050 	ldr	r1, [pc, #80]	; 4000a720 <_txe_thread_create+0x260>
4000a6cc:	e1500001 	cmp	r0, r1
4000a6d0:	2a000001 	bcs	4000a6dc <_txe_thread_create+0x21c>
4000a6d4:	e3a00013 	mov	r0, #19
4000a6d8:	eaffff84 	b	4000a4f0 <_txe_thread_create+0x30>
4000a6dc:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a6e0:	e1cd21f0 	strd	r2, [sp, #16]
4000a6e4:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a6e8:	e1a02005 	mov	r2, r5
4000a6ec:	e1a00004 	mov	r0, r4
4000a6f0:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a6f4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a6f8:	eb000f49 	bl	4000e424 <_tx_thread_create>
4000a6fc:	e58d0020 	str	r0, [sp, #32]
4000a700:	e59d0020 	ldr	r0, [sp, #32]
4000a704:	eaffff79 	b	4000a4f0 <_txe_thread_create+0x30>
4000a708:	40030e54 	.word	0x40030e54
4000a70c:	40030e40 	.word	0x40030e40
4000a710:	40030e44 	.word	0x40030e44
4000a714:	40030e38 	.word	0x40030e38
4000a718:	40032974 	.word	0x40032974
4000a71c:	40030e30 	.word	0x40030e30
4000a720:	f0f0f0f0 	.word	0xf0f0f0f0

4000a724 <_txe_thread_info_get>:
4000a724:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a728:	e24dd01c 	sub	sp, sp, #28
4000a72c:	e1a04000 	mov	r4, r0
4000a730:	e1a05001 	mov	r5, r1
4000a734:	e1a06002 	mov	r6, r2
4000a738:	e1a07003 	mov	r7, r3
4000a73c:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000a740:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000a744:	e3540000 	cmp	r4, #0
4000a748:	0a000003 	beq	4000a75c <_txe_thread_info_get+0x38>
4000a74c:	e5940000 	ldr	r0, [r4]
4000a750:	e59f103c 	ldr	r1, [pc, #60]	; 4000a794 <_txe_thread_info_get+0x70>
4000a754:	e1500001 	cmp	r0, r1
4000a758:	0a000002 	beq	4000a768 <_txe_thread_info_get+0x44>
4000a75c:	e3a0000e 	mov	r0, #14
4000a760:	e28dd01c 	add	sp, sp, #28
4000a764:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a768:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000a76c:	e58d3010 	str	r3, [sp, #16]
4000a770:	e1a03007 	mov	r3, r7
4000a774:	e1a02006 	mov	r2, r6
4000a778:	e1a01005 	mov	r1, r5
4000a77c:	e1a00004 	mov	r0, r4
4000a780:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000a784:	eb000ff5 	bl	4000e760 <_tx_thread_info_get>
4000a788:	e58d0018 	str	r0, [sp, #24]
4000a78c:	e59d0018 	ldr	r0, [sp, #24]
4000a790:	eafffff2 	b	4000a760 <_txe_thread_info_get+0x3c>
4000a794:	54485244 	.word	0x54485244

4000a798 <_txe_thread_priority_change>:
4000a798:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a79c:	e1a04000 	mov	r4, r0
4000a7a0:	e1a05001 	mov	r5, r1
4000a7a4:	e1a06002 	mov	r6, r2
4000a7a8:	e3540000 	cmp	r4, #0
4000a7ac:	0a000003 	beq	4000a7c0 <_txe_thread_priority_change+0x28>
4000a7b0:	e5940000 	ldr	r0, [r4]
4000a7b4:	e59f1070 	ldr	r1, [pc, #112]	; 4000a82c <_txe_thread_priority_change+0x94>
4000a7b8:	e1500001 	cmp	r0, r1
4000a7bc:	0a000001 	beq	4000a7c8 <_txe_thread_priority_change+0x30>
4000a7c0:	e3a0000e 	mov	r0, #14
4000a7c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a7c8:	e3560000 	cmp	r6, #0
4000a7cc:	1a000001 	bne	4000a7d8 <_txe_thread_priority_change+0x40>
4000a7d0:	e3a00003 	mov	r0, #3
4000a7d4:	eafffffa 	b	4000a7c4 <_txe_thread_priority_change+0x2c>
4000a7d8:	e3550020 	cmp	r5, #32
4000a7dc:	3a000001 	bcc	4000a7e8 <_txe_thread_priority_change+0x50>
4000a7e0:	e3a0000f 	mov	r0, #15
4000a7e4:	eafffff6 	b	4000a7c4 <_txe_thread_priority_change+0x2c>
4000a7e8:	e59f0040 	ldr	r0, [pc, #64]	; 4000a830 <_txe_thread_priority_change+0x98>
4000a7ec:	e5900000 	ldr	r0, [r0]
4000a7f0:	e3500000 	cmp	r0, #0
4000a7f4:	0a000003 	beq	4000a808 <_txe_thread_priority_change+0x70>
4000a7f8:	e59f0034 	ldr	r0, [pc, #52]	; 4000a834 <_txe_thread_priority_change+0x9c>
4000a7fc:	e5900000 	ldr	r0, [r0]
4000a800:	e3500000 	cmp	r0, #0
4000a804:	0a000001 	beq	4000a810 <_txe_thread_priority_change+0x78>
4000a808:	e3a00013 	mov	r0, #19
4000a80c:	eaffffec 	b	4000a7c4 <_txe_thread_priority_change+0x2c>
4000a810:	e1a02006 	mov	r2, r6
4000a814:	e1a01005 	mov	r1, r5
4000a818:	e1a00004 	mov	r0, r4
4000a81c:	eb001039 	bl	4000e908 <_tx_thread_priority_change>
4000a820:	e1a07000 	mov	r7, r0
4000a824:	e1a00007 	mov	r0, r7
4000a828:	eaffffe5 	b	4000a7c4 <_txe_thread_priority_change+0x2c>
4000a82c:	54485244 	.word	0x54485244
4000a830:	40030e38 	.word	0x40030e38
4000a834:	40030e30 	.word	0x40030e30

4000a838 <_txe_thread_relinquish>:
4000a838:	e92d4010 	push	{r4, lr}
4000a83c:	e59f0020 	ldr	r0, [pc, #32]	; 4000a864 <_txe_thread_relinquish+0x2c>
4000a840:	e5900000 	ldr	r0, [r0]
4000a844:	e3500000 	cmp	r0, #0
4000a848:	0a000004 	beq	4000a860 <_txe_thread_relinquish+0x28>
4000a84c:	e59f0014 	ldr	r0, [pc, #20]	; 4000a868 <_txe_thread_relinquish+0x30>
4000a850:	e5900000 	ldr	r0, [r0]
4000a854:	e3500000 	cmp	r0, #0
4000a858:	1a000000 	bne	4000a860 <_txe_thread_relinquish+0x28>
4000a85c:	eb001091 	bl	4000eaa8 <_tx_thread_relinquish>
4000a860:	e8bd8010 	pop	{r4, pc}
4000a864:	40030e38 	.word	0x40030e38
4000a868:	40030e30 	.word	0x40030e30

4000a86c <_txe_thread_resume>:
4000a86c:	e92d4070 	push	{r4, r5, r6, lr}
4000a870:	e1a04000 	mov	r4, r0
4000a874:	e3540000 	cmp	r4, #0
4000a878:	0a000003 	beq	4000a88c <_txe_thread_resume+0x20>
4000a87c:	e5940000 	ldr	r0, [r4]
4000a880:	e59f1020 	ldr	r1, [pc, #32]	; 4000a8a8 <_txe_thread_resume+0x3c>
4000a884:	e1500001 	cmp	r0, r1
4000a888:	0a000001 	beq	4000a894 <_txe_thread_resume+0x28>
4000a88c:	e3a0000e 	mov	r0, #14
4000a890:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a894:	e1a00004 	mov	r0, r4
4000a898:	eb00113e 	bl	4000ed98 <_tx_thread_resume>
4000a89c:	e1a05000 	mov	r5, r0
4000a8a0:	e1a00005 	mov	r0, r5
4000a8a4:	eafffff9 	b	4000a890 <_txe_thread_resume+0x24>
4000a8a8:	54485244 	.word	0x54485244

4000a8ac <_txe_timer_activate>:
4000a8ac:	e92d4070 	push	{r4, r5, r6, lr}
4000a8b0:	e1a04000 	mov	r4, r0
4000a8b4:	e3540000 	cmp	r4, #0
4000a8b8:	0a000003 	beq	4000a8cc <_txe_timer_activate+0x20>
4000a8bc:	e5940000 	ldr	r0, [r4]
4000a8c0:	e59f1020 	ldr	r1, [pc, #32]	; 4000a8e8 <_txe_timer_activate+0x3c>
4000a8c4:	e1500001 	cmp	r0, r1
4000a8c8:	0a000001 	beq	4000a8d4 <_txe_timer_activate+0x28>
4000a8cc:	e3a00015 	mov	r0, #21
4000a8d0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a8d4:	e1a00004 	mov	r0, r4
4000a8d8:	eb0013a4 	bl	4000f770 <_tx_timer_activate>
4000a8dc:	e1a05000 	mov	r5, r0
4000a8e0:	e1a00005 	mov	r0, r5
4000a8e4:	eafffff9 	b	4000a8d0 <_txe_timer_activate+0x24>
4000a8e8:	4154494d 	.word	0x4154494d

4000a8ec <_txe_timer_change>:
4000a8ec:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a8f0:	e1a04000 	mov	r4, r0
4000a8f4:	e1a05001 	mov	r5, r1
4000a8f8:	e1a06002 	mov	r6, r2
4000a8fc:	e3540000 	cmp	r4, #0
4000a900:	0a000003 	beq	4000a914 <_txe_timer_change+0x28>
4000a904:	e5940000 	ldr	r0, [r4]
4000a908:	e59f1058 	ldr	r1, [pc, #88]	; 4000a968 <_txe_timer_change+0x7c>
4000a90c:	e1500001 	cmp	r0, r1
4000a910:	0a000001 	beq	4000a91c <_txe_timer_change+0x30>
4000a914:	e3a00015 	mov	r0, #21
4000a918:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a91c:	e3550000 	cmp	r5, #0
4000a920:	1a000001 	bne	4000a92c <_txe_timer_change+0x40>
4000a924:	e3a00016 	mov	r0, #22
4000a928:	eafffffa 	b	4000a918 <_txe_timer_change+0x2c>
4000a92c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a96c <_txe_timer_change+0x80>
4000a930:	e5900000 	ldr	r0, [r0]
4000a934:	e3c0000f 	bic	r0, r0, #15
4000a938:	e59f1030 	ldr	r1, [pc, #48]	; 4000a970 <_txe_timer_change+0x84>
4000a93c:	e1500001 	cmp	r0, r1
4000a940:	1a000001 	bne	4000a94c <_txe_timer_change+0x60>
4000a944:	e3a00013 	mov	r0, #19
4000a948:	eafffff2 	b	4000a918 <_txe_timer_change+0x2c>
4000a94c:	e1a02006 	mov	r2, r6
4000a950:	e1a01005 	mov	r1, r5
4000a954:	e1a00004 	mov	r0, r4
4000a958:	eb0013d4 	bl	4000f8b0 <_tx_timer_change>
4000a95c:	e1a07000 	mov	r7, r0
4000a960:	e1a00007 	mov	r0, r7
4000a964:	eaffffeb 	b	4000a918 <_txe_timer_change+0x2c>
4000a968:	4154494d 	.word	0x4154494d
4000a96c:	40030e30 	.word	0x40030e30
4000a970:	f0f0f0f0 	.word	0xf0f0f0f0

4000a974 <_txe_timer_create>:
4000a974:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a978:	e24dd01c 	sub	sp, sp, #28
4000a97c:	e1a04000 	mov	r4, r0
4000a980:	e1a05001 	mov	r5, r1
4000a984:	e1a06002 	mov	r6, r2
4000a988:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000a98c:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000a990:	e3540000 	cmp	r4, #0
4000a994:	0a000001 	beq	4000a9a0 <_txe_timer_create+0x2c>
4000a998:	e358002c 	cmp	r8, #44	; 0x2c
4000a99c:	0a000002 	beq	4000a9ac <_txe_timer_create+0x38>
4000a9a0:	e3a00015 	mov	r0, #21
4000a9a4:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000a9a8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a9ac:	e10f9000 	mrs	r9, CPSR
4000a9b0:	e389a080 	orr	sl, r9, #128	; 0x80
4000a9b4:	e121f00a 	msr	CPSR_c, sl
4000a9b8:	e59f0160 	ldr	r0, [pc, #352]	; 4000ab20 <_txe_timer_create+0x1ac>
4000a9bc:	e5900000 	ldr	r0, [r0]
4000a9c0:	e2800001 	add	r0, r0, #1
4000a9c4:	e59f1154 	ldr	r1, [pc, #340]	; 4000ab20 <_txe_timer_create+0x1ac>
4000a9c8:	e5810000 	str	r0, [r1]
4000a9cc:	e121f009 	msr	CPSR_c, r9
4000a9d0:	e59f014c 	ldr	r0, [pc, #332]	; 4000ab24 <_txe_timer_create+0x1b0>
4000a9d4:	e5900000 	ldr	r0, [r0]
4000a9d8:	e58d0014 	str	r0, [sp, #20]
4000a9dc:	e3a00000 	mov	r0, #0
4000a9e0:	e58d0018 	str	r0, [sp, #24]
4000a9e4:	ea000009 	b	4000aa10 <_txe_timer_create+0x9c>
4000a9e8:	e59d0014 	ldr	r0, [sp, #20]
4000a9ec:	e1540000 	cmp	r4, r0
4000a9f0:	1a000000 	bne	4000a9f8 <_txe_timer_create+0x84>
4000a9f4:	ea00000a 	b	4000aa24 <_txe_timer_create+0xb0>
4000a9f8:	e59d0014 	ldr	r0, [sp, #20]
4000a9fc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000aa00:	e58d0014 	str	r0, [sp, #20]
4000aa04:	e59d0018 	ldr	r0, [sp, #24]
4000aa08:	e2800001 	add	r0, r0, #1
4000aa0c:	e58d0018 	str	r0, [sp, #24]
4000aa10:	e59f1110 	ldr	r1, [pc, #272]	; 4000ab28 <_txe_timer_create+0x1b4>
4000aa14:	e59d0018 	ldr	r0, [sp, #24]
4000aa18:	e5911000 	ldr	r1, [r1]
4000aa1c:	e1500001 	cmp	r0, r1
4000aa20:	3afffff0 	bcc	4000a9e8 <_txe_timer_create+0x74>
4000aa24:	e1a00000 	nop			; (mov r0, r0)
4000aa28:	e10f9000 	mrs	r9, CPSR
4000aa2c:	e389a080 	orr	sl, r9, #128	; 0x80
4000aa30:	e121f00a 	msr	CPSR_c, sl
4000aa34:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ab20 <_txe_timer_create+0x1ac>
4000aa38:	e5900000 	ldr	r0, [r0]
4000aa3c:	e2400001 	sub	r0, r0, #1
4000aa40:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ab20 <_txe_timer_create+0x1ac>
4000aa44:	e5810000 	str	r0, [r1]
4000aa48:	e121f009 	msr	CPSR_c, r9
4000aa4c:	eb0011b4 	bl	4000f124 <_tx_thread_system_preempt_check>
4000aa50:	e59d0014 	ldr	r0, [sp, #20]
4000aa54:	e1540000 	cmp	r4, r0
4000aa58:	1a000001 	bne	4000aa64 <_txe_timer_create+0xf0>
4000aa5c:	e3a00015 	mov	r0, #21
4000aa60:	eaffffcf 	b	4000a9a4 <_txe_timer_create+0x30>
4000aa64:	e3570000 	cmp	r7, #0
4000aa68:	1a000001 	bne	4000aa74 <_txe_timer_create+0x100>
4000aa6c:	e3a00016 	mov	r0, #22
4000aa70:	eaffffcb 	b	4000a9a4 <_txe_timer_create+0x30>
4000aa74:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aa78:	e3500001 	cmp	r0, #1
4000aa7c:	0a000004 	beq	4000aa94 <_txe_timer_create+0x120>
4000aa80:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aa84:	e3500000 	cmp	r0, #0
4000aa88:	0a000001 	beq	4000aa94 <_txe_timer_create+0x120>
4000aa8c:	e3a00017 	mov	r0, #23
4000aa90:	eaffffc3 	b	4000a9a4 <_txe_timer_create+0x30>
4000aa94:	e59f0090 	ldr	r0, [pc, #144]	; 4000ab2c <_txe_timer_create+0x1b8>
4000aa98:	e5900000 	ldr	r0, [r0]
4000aa9c:	e58d0010 	str	r0, [sp, #16]
4000aaa0:	e59d0010 	ldr	r0, [sp, #16]
4000aaa4:	e3500000 	cmp	r0, #0
4000aaa8:	0a000009 	beq	4000aad4 <_txe_timer_create+0x160>
4000aaac:	e59f107c 	ldr	r1, [pc, #124]	; 4000ab30 <_txe_timer_create+0x1bc>
4000aab0:	e59d0010 	ldr	r0, [sp, #16]
4000aab4:	e1500001 	cmp	r0, r1
4000aab8:	0a000003 	beq	4000aacc <_txe_timer_create+0x158>
4000aabc:	e59f0070 	ldr	r0, [pc, #112]	; 4000ab34 <_txe_timer_create+0x1c0>
4000aac0:	e5900000 	ldr	r0, [r0]
4000aac4:	e3500000 	cmp	r0, #0
4000aac8:	0a000008 	beq	4000aaf0 <_txe_timer_create+0x17c>
4000aacc:	e3a00013 	mov	r0, #19
4000aad0:	eaffffb3 	b	4000a9a4 <_txe_timer_create+0x30>
4000aad4:	e59f0058 	ldr	r0, [pc, #88]	; 4000ab34 <_txe_timer_create+0x1c0>
4000aad8:	e5900000 	ldr	r0, [r0]
4000aadc:	e59f1054 	ldr	r1, [pc, #84]	; 4000ab38 <_txe_timer_create+0x1c4>
4000aae0:	e1500001 	cmp	r0, r1
4000aae4:	2a000001 	bcs	4000aaf0 <_txe_timer_create+0x17c>
4000aae8:	e3a00013 	mov	r0, #19
4000aaec:	eaffffac 	b	4000a9a4 <_txe_timer_create+0x30>
4000aaf0:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000aaf4:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000aaf8:	e98d000c 	stmib	sp, {r2, r3}
4000aafc:	e58d7000 	str	r7, [sp]
4000ab00:	e1a02006 	mov	r2, r6
4000ab04:	e1a01005 	mov	r1, r5
4000ab08:	e1a00004 	mov	r0, r4
4000ab0c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000ab10:	eb0013b1 	bl	4000f9dc <_tx_timer_create>
4000ab14:	e1a0b000 	mov	fp, r0
4000ab18:	e1a0000b 	mov	r0, fp
4000ab1c:	eaffffa0 	b	4000a9a4 <_txe_timer_create+0x30>
4000ab20:	40030e54 	.word	0x40030e54
4000ab24:	40030e7c 	.word	0x40030e7c
4000ab28:	40030e80 	.word	0x40030e80
4000ab2c:	40030e38 	.word	0x40030e38
4000ab30:	40032974 	.word	0x40032974
4000ab34:	40030e30 	.word	0x40030e30
4000ab38:	f0f0f0f0 	.word	0xf0f0f0f0

4000ab3c <_txe_timer_deactivate>:
4000ab3c:	e92d4070 	push	{r4, r5, r6, lr}
4000ab40:	e1a04000 	mov	r4, r0
4000ab44:	e3540000 	cmp	r4, #0
4000ab48:	0a000003 	beq	4000ab5c <_txe_timer_deactivate+0x20>
4000ab4c:	e5940000 	ldr	r0, [r4]
4000ab50:	e59f1020 	ldr	r1, [pc, #32]	; 4000ab78 <_txe_timer_deactivate+0x3c>
4000ab54:	e1500001 	cmp	r0, r1
4000ab58:	0a000001 	beq	4000ab64 <_txe_timer_deactivate+0x28>
4000ab5c:	e3a00015 	mov	r0, #21
4000ab60:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ab64:	e1a00004 	mov	r0, r4
4000ab68:	eb00141a 	bl	4000fbd8 <_tx_timer_deactivate>
4000ab6c:	e1a05000 	mov	r5, r0
4000ab70:	e1a00005 	mov	r0, r5
4000ab74:	eafffff9 	b	4000ab60 <_txe_timer_deactivate+0x24>
4000ab78:	4154494d 	.word	0x4154494d

4000ab7c <_tx_thread_system_return>:
4000ab7c:	e3a00000 	mov	r0, #0
4000ab80:	e10f1000 	mrs	r1, CPSR
4000ab84:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ab88:	e3812080 	orr	r2, r1, #128	; 0x80
4000ab8c:	e12ff002 	msr	CPSR_fsxc, r2
4000ab90:	e59f302c 	ldr	r3, [pc, #44]	; 4000abc4 <_tx_thread_system_return+0x48>
4000ab94:	e5930000 	ldr	r0, [r3]
4000ab98:	e59f2028 	ldr	r2, [pc, #40]	; 4000abc8 <_tx_thread_system_return+0x4c>
4000ab9c:	e5921000 	ldr	r1, [r2]
4000aba0:	e580d008 	str	sp, [r0, #8]
4000aba4:	e3a04000 	mov	r4, #0
4000aba8:	e3510000 	cmp	r1, #0
4000abac:	0a000002 	beq	4000abbc <_tx_thread_system_return+0x40>
4000abb0:	e590101c 	ldr	r1, [r0, #28]
4000abb4:	e5824000 	str	r4, [r2]
4000abb8:	e5801018 	str	r1, [r0, #24]
4000abbc:	e5834000 	str	r4, [r3]
4000abc0:	ea000001 	b	4000abcc <_tx_thread_schedule>
4000abc4:	40030e38 	.word	0x40030e38
4000abc8:	40030e64 	.word	0x40030e64

4000abcc <_tx_thread_schedule>:
4000abcc:	e10f2000 	mrs	r2, CPSR
4000abd0:	e3c20080 	bic	r0, r2, #128	; 0x80
4000abd4:	e12ff000 	msr	CPSR_fsxc, r0
4000abd8:	e59f104c 	ldr	r1, [pc, #76]	; 4000ac2c <_tx_thread_schedule+0x60>
4000abdc:	e5910000 	ldr	r0, [r1]
4000abe0:	e3500000 	cmp	r0, #0
4000abe4:	0afffffc 	beq	4000abdc <_tx_thread_schedule+0x10>
4000abe8:	e12ff002 	msr	CPSR_fsxc, r2
4000abec:	e59f103c 	ldr	r1, [pc, #60]	; 4000ac30 <_tx_thread_schedule+0x64>
4000abf0:	e5810000 	str	r0, [r1]
4000abf4:	e5902004 	ldr	r2, [r0, #4]
4000abf8:	e5903018 	ldr	r3, [r0, #24]
4000abfc:	e2822001 	add	r2, r2, #1
4000ac00:	e5802004 	str	r2, [r0, #4]
4000ac04:	e59f2028 	ldr	r2, [pc, #40]	; 4000ac34 <_tx_thread_schedule+0x68>
4000ac08:	e590d008 	ldr	sp, [r0, #8]
4000ac0c:	e5823000 	str	r3, [r2]
4000ac10:	e8bd0003 	pop	{r0, r1}
4000ac14:	e3500000 	cmp	r0, #0
4000ac18:	116ff001 	msrne	SPSR_fsxc, r1
4000ac1c:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000ac20:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ac24:	e12ff001 	msr	CPSR_fsxc, r1
4000ac28:	e12fff1e 	bx	lr
4000ac2c:	40030e3c 	.word	0x40030e3c
4000ac30:	40030e38 	.word	0x40030e38
4000ac34:	40030e64 	.word	0x40030e64

4000ac38 <_tx_thread_vectored_context_save>:
4000ac38:	e59f3044 	ldr	r3, [pc, #68]	; 4000ac84 <_tx_thread_vectored_context_save+0x4c>
4000ac3c:	e5932000 	ldr	r2, [r3]
4000ac40:	e3520000 	cmp	r2, #0
4000ac44:	0a000003 	beq	4000ac58 <_tx_thread_vectored_context_save+0x20>
4000ac48:	e2822001 	add	r2, r2, #1
4000ac4c:	e5832000 	str	r2, [r3]
4000ac50:	e3a0a000 	mov	sl, #0
4000ac54:	e12fff1e 	bx	lr
4000ac58:	e2822001 	add	r2, r2, #1
4000ac5c:	e5832000 	str	r2, [r3]
4000ac60:	e59f1020 	ldr	r1, [pc, #32]	; 4000ac88 <_tx_thread_vectored_context_save+0x50>
4000ac64:	e5910000 	ldr	r0, [r1]
4000ac68:	e3500000 	cmp	r0, #0
4000ac6c:	0a000001 	beq	4000ac78 <_tx_thread_vectored_context_save+0x40>
4000ac70:	e3a0a000 	mov	sl, #0
4000ac74:	e12fff1e 	bx	lr
4000ac78:	e3a0a000 	mov	sl, #0
4000ac7c:	e28dd020 	add	sp, sp, #32
4000ac80:	e12fff1e 	bx	lr
4000ac84:	40030e30 	.word	0x40030e30
4000ac88:	40030e38 	.word	0x40030e38

4000ac8c <_tx_timer_interrupt>:
4000ac8c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ad60 <_tx_timer_interrupt+0xd4>
4000ac90:	e5910000 	ldr	r0, [r1]
4000ac94:	e2800001 	add	r0, r0, #1
4000ac98:	e5810000 	str	r0, [r1]
4000ac9c:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ad64 <_tx_timer_interrupt+0xd8>
4000aca0:	e5932000 	ldr	r2, [r3]
4000aca4:	e3520000 	cmp	r2, #0
4000aca8:	0a000006 	beq	4000acc8 <_tx_timer_interrupt+0x3c>
4000acac:	e2422001 	sub	r2, r2, #1
4000acb0:	e5832000 	str	r2, [r3]
4000acb4:	e3520000 	cmp	r2, #0
4000acb8:	1a000002 	bne	4000acc8 <_tx_timer_interrupt+0x3c>
4000acbc:	e59f30a4 	ldr	r3, [pc, #164]	; 4000ad68 <_tx_timer_interrupt+0xdc>
4000acc0:	e3a00001 	mov	r0, #1
4000acc4:	e5830000 	str	r0, [r3]
4000acc8:	e59f109c 	ldr	r1, [pc, #156]	; 4000ad6c <_tx_timer_interrupt+0xe0>
4000accc:	e5910000 	ldr	r0, [r1]
4000acd0:	e5902000 	ldr	r2, [r0]
4000acd4:	e3520000 	cmp	r2, #0
4000acd8:	0a000003 	beq	4000acec <_tx_timer_interrupt+0x60>
4000acdc:	e59f308c 	ldr	r3, [pc, #140]	; 4000ad70 <_tx_timer_interrupt+0xe4>
4000ace0:	e3a02001 	mov	r2, #1
4000ace4:	e5832000 	str	r2, [r3]
4000ace8:	ea000007 	b	4000ad0c <_tx_timer_interrupt+0x80>
4000acec:	e2800004 	add	r0, r0, #4
4000acf0:	e59f307c 	ldr	r3, [pc, #124]	; 4000ad74 <_tx_timer_interrupt+0xe8>
4000acf4:	e5932000 	ldr	r2, [r3]
4000acf8:	e1500002 	cmp	r0, r2
4000acfc:	1a000001 	bne	4000ad08 <_tx_timer_interrupt+0x7c>
4000ad00:	e59f3070 	ldr	r3, [pc, #112]	; 4000ad78 <_tx_timer_interrupt+0xec>
4000ad04:	e5930000 	ldr	r0, [r3]
4000ad08:	e5810000 	str	r0, [r1]
4000ad0c:	e59f3054 	ldr	r3, [pc, #84]	; 4000ad68 <_tx_timer_interrupt+0xdc>
4000ad10:	e5932000 	ldr	r2, [r3]
4000ad14:	e3520000 	cmp	r2, #0
4000ad18:	1a000003 	bne	4000ad2c <_tx_timer_interrupt+0xa0>
4000ad1c:	e59f104c 	ldr	r1, [pc, #76]	; 4000ad70 <_tx_timer_interrupt+0xe4>
4000ad20:	e5910000 	ldr	r0, [r1]
4000ad24:	e3500000 	cmp	r0, #0
4000ad28:	0a00000b 	beq	4000ad5c <_tx_timer_interrupt+0xd0>
4000ad2c:	e92d4001 	push	{r0, lr}
4000ad30:	e59f1038 	ldr	r1, [pc, #56]	; 4000ad70 <_tx_timer_interrupt+0xe4>
4000ad34:	e5910000 	ldr	r0, [r1]
4000ad38:	e3500000 	cmp	r0, #0
4000ad3c:	0a000000 	beq	4000ad44 <_tx_timer_interrupt+0xb8>
4000ad40:	eb001441 	bl	4000fe4c <_tx_timer_expiration_process>
4000ad44:	e59f301c 	ldr	r3, [pc, #28]	; 4000ad68 <_tx_timer_interrupt+0xdc>
4000ad48:	e5932000 	ldr	r2, [r3]
4000ad4c:	e3520000 	cmp	r2, #0
4000ad50:	0a000000 	beq	4000ad58 <_tx_timer_interrupt+0xcc>
4000ad54:	eb001210 	bl	4000f59c <_tx_thread_time_slice>
4000ad58:	e8bd4001 	pop	{r0, lr}
4000ad5c:	e12fff1e 	bx	lr
4000ad60:	40030e60 	.word	0x40030e60
4000ad64:	40030e64 	.word	0x40030e64
4000ad68:	40030e68 	.word	0x40030e68
4000ad6c:	40030e74 	.word	0x40030e74
4000ad70:	40030e78 	.word	0x40030e78
4000ad74:	40030e70 	.word	0x40030e70
4000ad78:	40030e6c 	.word	0x40030e6c

4000ad7c <_tx_thread_context_restore>:
4000ad7c:	e10f3000 	mrs	r3, CPSR
4000ad80:	e3830080 	orr	r0, r3, #128	; 0x80
4000ad84:	e12ff000 	msr	CPSR_fsxc, r0
4000ad88:	e59f30f0 	ldr	r3, [pc, #240]	; 4000ae80 <_tx_thread_context_restore+0x104>
4000ad8c:	e5932000 	ldr	r2, [r3]
4000ad90:	e2422001 	sub	r2, r2, #1
4000ad94:	e5832000 	str	r2, [r3]
4000ad98:	e3520000 	cmp	r2, #0
4000ad9c:	0a000003 	beq	4000adb0 <_tx_thread_context_restore+0x34>
4000ada0:	e8bd5401 	pop	{r0, sl, ip, lr}
4000ada4:	e16ff000 	msr	SPSR_fsxc, r0
4000ada8:	e8bd000f 	pop	{r0, r1, r2, r3}
4000adac:	e1b0f00e 	movs	pc, lr
4000adb0:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ae84 <_tx_thread_context_restore+0x108>
4000adb4:	e5910000 	ldr	r0, [r1]
4000adb8:	e3500000 	cmp	r0, #0
4000adbc:	0a00002a 	beq	4000ae6c <_tx_thread_context_restore+0xf0>
4000adc0:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ae88 <_tx_thread_context_restore+0x10c>
4000adc4:	e5932000 	ldr	r2, [r3]
4000adc8:	e3520000 	cmp	r2, #0
4000adcc:	1a000003 	bne	4000ade0 <_tx_thread_context_restore+0x64>
4000add0:	e59f30b4 	ldr	r3, [pc, #180]	; 4000ae8c <_tx_thread_context_restore+0x110>
4000add4:	e5932000 	ldr	r2, [r3]
4000add8:	e1500002 	cmp	r0, r2
4000addc:	1a000003 	bne	4000adf0 <_tx_thread_context_restore+0x74>
4000ade0:	e8bd5401 	pop	{r0, sl, ip, lr}
4000ade4:	e16ff000 	msr	SPSR_fsxc, r0
4000ade8:	e8bd000f 	pop	{r0, r1, r2, r3}
4000adec:	e1b0f00e 	movs	pc, lr
4000adf0:	e8bd5408 	pop	{r3, sl, ip, lr}
4000adf4:	e1a0100e 	mov	r1, lr
4000adf8:	e3a020d3 	mov	r2, #211	; 0xd3
4000adfc:	e121f002 	msr	CPSR_c, r2
4000ae00:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000ae04:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000ae08:	e1a04003 	mov	r4, r3
4000ae0c:	e3a020d2 	mov	r2, #210	; 0xd2
4000ae10:	e121f002 	msr	CPSR_c, r2
4000ae14:	e8bd000f 	pop	{r0, r1, r2, r3}
4000ae18:	e3a050d3 	mov	r5, #211	; 0xd3
4000ae1c:	e121f005 	msr	CPSR_c, r5
4000ae20:	e92d000f 	push	{r0, r1, r2, r3}
4000ae24:	e3a03001 	mov	r3, #1
4000ae28:	e92d0018 	push	{r3, r4}
4000ae2c:	e59f1050 	ldr	r1, [pc, #80]	; 4000ae84 <_tx_thread_context_restore+0x108>
4000ae30:	e5910000 	ldr	r0, [r1]
4000ae34:	e580d008 	str	sp, [r0, #8]
4000ae38:	e3c44020 	bic	r4, r4, #32
4000ae3c:	e3843080 	orr	r3, r4, #128	; 0x80
4000ae40:	e12ff003 	msr	CPSR_fsxc, r3
4000ae44:	e59f3044 	ldr	r3, [pc, #68]	; 4000ae90 <_tx_thread_context_restore+0x114>
4000ae48:	e5932000 	ldr	r2, [r3]
4000ae4c:	e3520000 	cmp	r2, #0
4000ae50:	0a000002 	beq	4000ae60 <_tx_thread_context_restore+0xe4>
4000ae54:	e5802018 	str	r2, [r0, #24]
4000ae58:	e3a02000 	mov	r2, #0
4000ae5c:	e5832000 	str	r2, [r3]
4000ae60:	e3a00000 	mov	r0, #0
4000ae64:	e5810000 	str	r0, [r1]
4000ae68:	eaffff57 	b	4000abcc <_tx_thread_schedule>
4000ae6c:	e10f3000 	mrs	r3, CPSR
4000ae70:	e3c3301f 	bic	r3, r3, #31
4000ae74:	e3833013 	orr	r3, r3, #19
4000ae78:	e12ff003 	msr	CPSR_fsxc, r3
4000ae7c:	eaffff52 	b	4000abcc <_tx_thread_schedule>
4000ae80:	40030e30 	.word	0x40030e30
4000ae84:	40030e38 	.word	0x40030e38
4000ae88:	40030e54 	.word	0x40030e54
4000ae8c:	40030e3c 	.word	0x40030e3c
4000ae90:	40030e64 	.word	0x40030e64

4000ae94 <_tx_thread_irq_nesting_end>:
4000ae94:	e1a0300e 	mov	r3, lr
4000ae98:	e10f0000 	mrs	r0, CPSR
4000ae9c:	e3800080 	orr	r0, r0, #128	; 0x80
4000aea0:	e12ff000 	msr	CPSR_fsxc, r0
4000aea4:	e8bd4002 	pop	{r1, lr}
4000aea8:	e3c0001f 	bic	r0, r0, #31
4000aeac:	e3800012 	orr	r0, r0, #18
4000aeb0:	e12ff000 	msr	CPSR_fsxc, r0
4000aeb4:	e12fff13 	bx	r3

4000aeb8 <_tx_thread_irq_nesting_start>:
4000aeb8:	e1a0300e 	mov	r3, lr
4000aebc:	e10f0000 	mrs	r0, CPSR
4000aec0:	e3c0001f 	bic	r0, r0, #31
4000aec4:	e380001f 	orr	r0, r0, #31
4000aec8:	e12ff000 	msr	CPSR_fsxc, r0
4000aecc:	e92d4002 	push	{r1, lr}
4000aed0:	e3c00080 	bic	r0, r0, #128	; 0x80
4000aed4:	e12ff000 	msr	CPSR_fsxc, r0
4000aed8:	e12fff13 	bx	r3

4000aedc <_tx_initialize_low_level>:
4000aedc:	e1a0100d 	mov	r1, sp
4000aee0:	e59f3024 	ldr	r3, [pc, #36]	; 4000af0c <_tx_initialize_low_level+0x30>
4000aee4:	e5831000 	str	r1, [r3]
4000aee8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000aeec:	e3a00000 	mov	r0, #0
4000aef0:	eb005b84 	bl	40021d08 <CyU3POsTimerInit>
4000aef4:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000aef8:	e12fff1e 	bx	lr
4000aefc:	e59f200c 	ldr	r2, [pc, #12]	; 4000af10 <_tx_initialize_low_level+0x34>
4000af00:	e5920000 	ldr	r0, [r2]
4000af04:	e59f2008 	ldr	r2, [pc, #8]	; 4000af14 <_tx_initialize_low_level+0x38>
4000af08:	e5920000 	ldr	r0, [r2]
4000af0c:	40030e34 	.word	0x40030e34
4000af10:	40030e58 	.word	0x40030e58
4000af14:	40030dcc 	.word	0x40030dcc

4000af18 <_tx_byte_allocate>:
4000af18:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000af1c:	e1a04000 	mov	r4, r0
4000af20:	e1a05001 	mov	r5, r1
4000af24:	e1a06002 	mov	r6, r2
4000af28:	e1a07003 	mov	r7, r3
4000af2c:	e3a00000 	mov	r0, #0
4000af30:	e58d0000 	str	r0, [sp]
4000af34:	e59f027c 	ldr	r0, [pc, #636]	; 4000b1b8 <_tx_byte_allocate+0x2a0>
4000af38:	e590a000 	ldr	sl, [r0]
4000af3c:	e10f8000 	mrs	r8, CPSR
4000af40:	e3889080 	orr	r9, r8, #128	; 0x80
4000af44:	e121f009 	msr	CPSR_c, r9
4000af48:	e2860003 	add	r0, r6, #3
4000af4c:	e1a00120 	lsr	r0, r0, #2
4000af50:	e1a06100 	lsl	r6, r0, #2
4000af54:	e59f0260 	ldr	r0, [pc, #608]	; 4000b1bc <_tx_byte_allocate+0x2a4>
4000af58:	e5900000 	ldr	r0, [r0]
4000af5c:	e58d0004 	str	r0, [sp, #4]
4000af60:	e59f1254 	ldr	r1, [pc, #596]	; 4000b1bc <_tx_byte_allocate+0x2a4>
4000af64:	e5910000 	ldr	r0, [r1]
4000af68:	e3500000 	cmp	r0, #0
4000af6c:	0a000031 	beq	4000b038 <_tx_byte_allocate+0x120>
4000af70:	e59f1248 	ldr	r1, [pc, #584]	; 4000b1c0 <_tx_byte_allocate+0x2a8>
4000af74:	e5911000 	ldr	r1, [r1]
4000af78:	e2811001 	add	r1, r1, #1
4000af7c:	e59f223c 	ldr	r2, [pc, #572]	; 4000b1c0 <_tx_byte_allocate+0x2a8>
4000af80:	e5821000 	str	r1, [r2]
4000af84:	e580100c 	str	r1, [r0, #12]
4000af88:	e59f1234 	ldr	r1, [pc, #564]	; 4000b1c4 <_tx_byte_allocate+0x2ac>
4000af8c:	e5911000 	ldr	r1, [r1]
4000af90:	e3510000 	cmp	r1, #0
4000af94:	1a000006 	bne	4000afb4 <_tx_byte_allocate+0x9c>
4000af98:	e59f1218 	ldr	r1, [pc, #536]	; 4000b1b8 <_tx_byte_allocate+0x2a0>
4000af9c:	e5911000 	ldr	r1, [r1]
4000afa0:	e5801000 	str	r1, [r0]
4000afa4:	e5901000 	ldr	r1, [r0]
4000afa8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000afac:	e5801004 	str	r1, [r0, #4]
4000afb0:	ea00000d 	b	4000afec <_tx_byte_allocate+0xd4>
4000afb4:	e59f1208 	ldr	r1, [pc, #520]	; 4000b1c4 <_tx_byte_allocate+0x2ac>
4000afb8:	e5911000 	ldr	r1, [r1]
4000afbc:	e59f2204 	ldr	r2, [pc, #516]	; 4000b1c8 <_tx_byte_allocate+0x2b0>
4000afc0:	e1510002 	cmp	r1, r2
4000afc4:	2a000004 	bcs	4000afdc <_tx_byte_allocate+0xc4>
4000afc8:	e3e01000 	mvn	r1, #0
4000afcc:	e5801000 	str	r1, [r0]
4000afd0:	e3a01000 	mov	r1, #0
4000afd4:	e5801004 	str	r1, [r0, #4]
4000afd8:	ea000003 	b	4000afec <_tx_byte_allocate+0xd4>
4000afdc:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b1c8 <_tx_byte_allocate+0x2b0>
4000afe0:	e5801000 	str	r1, [r0]
4000afe4:	e3a01000 	mov	r1, #0
4000afe8:	e5801004 	str	r1, [r0, #4]
4000afec:	e3a01014 	mov	r1, #20
4000aff0:	e5801008 	str	r1, [r0, #8]
4000aff4:	e5804010 	str	r4, [r0, #16]
4000aff8:	e3a01000 	mov	r1, #0
4000affc:	e5801014 	str	r1, [r0, #20]
4000b000:	e5806018 	str	r6, [r0, #24]
4000b004:	e580701c 	str	r7, [r0, #28]
4000b008:	e2800020 	add	r0, r0, #32
4000b00c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b1cc <_tx_byte_allocate+0x2b4>
4000b010:	e5911000 	ldr	r1, [r1]
4000b014:	e1500001 	cmp	r0, r1
4000b018:	3a000001 	bcc	4000b024 <_tx_byte_allocate+0x10c>
4000b01c:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b1d0 <_tx_byte_allocate+0x2b8>
4000b020:	e5910000 	ldr	r0, [r1]
4000b024:	e59f1190 	ldr	r1, [pc, #400]	; 4000b1bc <_tx_byte_allocate+0x2a4>
4000b028:	e5810000 	str	r0, [r1]
4000b02c:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b1d4 <_tx_byte_allocate+0x2bc>
4000b030:	e5911000 	ldr	r1, [r1]
4000b034:	e5810020 	str	r0, [r1, #32]
4000b038:	e59d0004 	ldr	r0, [sp, #4]
4000b03c:	e3500000 	cmp	r0, #0
4000b040:	0a000002 	beq	4000b050 <_tx_byte_allocate+0x138>
4000b044:	e59d0004 	ldr	r0, [sp, #4]
4000b048:	e590000c 	ldr	r0, [r0, #12]
4000b04c:	e58d0000 	str	r0, [sp]
4000b050:	e1a00000 	nop			; (mov r0, r0)
4000b054:	e584a020 	str	sl, [r4, #32]
4000b058:	e121f008 	msr	CPSR_c, r8
4000b05c:	e1a01006 	mov	r1, r6
4000b060:	e1a00004 	mov	r0, r4
4000b064:	eb0001ba 	bl	4000b754 <_tx_byte_pool_search>
4000b068:	e1a0b000 	mov	fp, r0
4000b06c:	e10f8000 	mrs	r8, CPSR
4000b070:	e3889080 	orr	r9, r8, #128	; 0x80
4000b074:	e121f009 	msr	CPSR_c, r9
4000b078:	e35b0000 	cmp	fp, #0
4000b07c:	1a000002 	bne	4000b08c <_tx_byte_allocate+0x174>
4000b080:	e5940020 	ldr	r0, [r4, #32]
4000b084:	e150000a 	cmp	r0, sl
4000b088:	1afffff1 	bne	4000b054 <_tx_byte_allocate+0x13c>
4000b08c:	e35b0000 	cmp	fp, #0
4000b090:	0a00000e 	beq	4000b0d0 <_tx_byte_allocate+0x1b8>
4000b094:	e585b000 	str	fp, [r5]
4000b098:	e59d0004 	ldr	r0, [sp, #4]
4000b09c:	e3500000 	cmp	r0, #0
4000b0a0:	0a000007 	beq	4000b0c4 <_tx_byte_allocate+0x1ac>
4000b0a4:	e59d0004 	ldr	r0, [sp, #4]
4000b0a8:	e590100c 	ldr	r1, [r0, #12]
4000b0ac:	e59d0000 	ldr	r0, [sp]
4000b0b0:	e1510000 	cmp	r1, r0
4000b0b4:	1a000002 	bne	4000b0c4 <_tx_byte_allocate+0x1ac>
4000b0b8:	e5950000 	ldr	r0, [r5]
4000b0bc:	e59d1004 	ldr	r1, [sp, #4]
4000b0c0:	e5810014 	str	r0, [r1, #20]
4000b0c4:	e3a00000 	mov	r0, #0
4000b0c8:	e58d0008 	str	r0, [sp, #8]
4000b0cc:	ea000036 	b	4000b1ac <_tx_byte_allocate+0x294>
4000b0d0:	e3570000 	cmp	r7, #0
4000b0d4:	0a000032 	beq	4000b1a4 <_tx_byte_allocate+0x28c>
4000b0d8:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b1d8 <_tx_byte_allocate+0x2c0>
4000b0dc:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b0e0:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b0e4:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b0e8:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b0ec:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0f0:	e3500000 	cmp	r0, #0
4000b0f4:	0a00000a 	beq	4000b124 <_tx_byte_allocate+0x20c>
4000b0f8:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0fc:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b100:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b104:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b108:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b10c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b110:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b114:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b118:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b11c:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b120:	ea000002 	b	4000b130 <_tx_byte_allocate+0x218>
4000b124:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b128:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b12c:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b130:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b134:	e2800001 	add	r0, r0, #1
4000b138:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b13c:	e3a00009 	mov	r0, #9
4000b140:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b144:	e3a00001 	mov	r0, #1
4000b148:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b14c:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b150:	e59f0084 	ldr	r0, [pc, #132]	; 4000b1dc <_tx_byte_allocate+0x2c4>
4000b154:	e5900000 	ldr	r0, [r0]
4000b158:	e2800001 	add	r0, r0, #1
4000b15c:	e59f1078 	ldr	r1, [pc, #120]	; 4000b1dc <_tx_byte_allocate+0x2c4>
4000b160:	e5810000 	str	r0, [r1]
4000b164:	e121f008 	msr	CPSR_c, r8
4000b168:	e1a0000a 	mov	r0, sl
4000b16c:	ebfff671 	bl	40008b38 <_tx_thread_system_suspend>
4000b170:	e59d0004 	ldr	r0, [sp, #4]
4000b174:	e3500000 	cmp	r0, #0
4000b178:	0a000007 	beq	4000b19c <_tx_byte_allocate+0x284>
4000b17c:	e59d0004 	ldr	r0, [sp, #4]
4000b180:	e590100c 	ldr	r1, [r0, #12]
4000b184:	e59d0000 	ldr	r0, [sp]
4000b188:	e1510000 	cmp	r1, r0
4000b18c:	1a000002 	bne	4000b19c <_tx_byte_allocate+0x284>
4000b190:	e5950000 	ldr	r0, [r5]
4000b194:	e59d1004 	ldr	r1, [sp, #4]
4000b198:	e5810014 	str	r0, [r1, #20]
4000b19c:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b1a0:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b1a4:	e3a00010 	mov	r0, #16
4000b1a8:	e58d0008 	str	r0, [sp, #8]
4000b1ac:	e121f008 	msr	CPSR_c, r8
4000b1b0:	e59d0008 	ldr	r0, [sp, #8]
4000b1b4:	eafffff9 	b	4000b1a0 <_tx_byte_allocate+0x288>
4000b1b8:	40030e38 	.word	0x40030e38
4000b1bc:	40030ea4 	.word	0x40030ea4
4000b1c0:	40030ea8 	.word	0x40030ea8
4000b1c4:	40030e30 	.word	0x40030e30
4000b1c8:	f0f0f0f0 	.word	0xf0f0f0f0
4000b1cc:	40030ea0 	.word	0x40030ea0
4000b1d0:	40030e9c 	.word	0x40030e9c
4000b1d4:	40030e90 	.word	0x40030e90
4000b1d8:	4000b1e0 	.word	0x4000b1e0
4000b1dc:	40030e54 	.word	0x40030e54

4000b1e0 <_tx_byte_pool_cleanup>:
4000b1e0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b1e4:	e1a04000 	mov	r4, r0
4000b1e8:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b1ec:	e10f5000 	mrs	r5, CPSR
4000b1f0:	e3856080 	orr	r6, r5, #128	; 0x80
4000b1f4:	e121f006 	msr	CPSR_c, r6
4000b1f8:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b1fc:	e3500000 	cmp	r0, #0
4000b200:	0a000026 	beq	4000b2a0 <_tx_byte_pool_cleanup+0xc0>
4000b204:	e3570000 	cmp	r7, #0
4000b208:	0a000024 	beq	4000b2a0 <_tx_byte_pool_cleanup+0xc0>
4000b20c:	e5970000 	ldr	r0, [r7]
4000b210:	e59f1090 	ldr	r1, [pc, #144]	; 4000b2a8 <_tx_byte_pool_cleanup+0xc8>
4000b214:	e1500001 	cmp	r0, r1
4000b218:	1a000020 	bne	4000b2a0 <_tx_byte_pool_cleanup+0xc0>
4000b21c:	e3a00000 	mov	r0, #0
4000b220:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b224:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b228:	e1500004 	cmp	r0, r4
4000b22c:	1a000002 	bne	4000b23c <_tx_byte_pool_cleanup+0x5c>
4000b230:	e3a00000 	mov	r0, #0
4000b234:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b238:	ea000007 	b	4000b25c <_tx_byte_pool_cleanup+0x7c>
4000b23c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b240:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b244:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b248:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b24c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b250:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b254:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b258:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b25c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b260:	e2400001 	sub	r0, r0, #1
4000b264:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b268:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b26c:	e3500009 	cmp	r0, #9
4000b270:	1a00000a 	bne	4000b2a0 <_tx_byte_pool_cleanup+0xc0>
4000b274:	e3a00010 	mov	r0, #16
4000b278:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b27c:	e59f0028 	ldr	r0, [pc, #40]	; 4000b2ac <_tx_byte_pool_cleanup+0xcc>
4000b280:	e5900000 	ldr	r0, [r0]
4000b284:	e2800001 	add	r0, r0, #1
4000b288:	e59f101c 	ldr	r1, [pc, #28]	; 4000b2ac <_tx_byte_pool_cleanup+0xcc>
4000b28c:	e5810000 	str	r0, [r1]
4000b290:	e121f005 	msr	CPSR_c, r5
4000b294:	e1a00004 	mov	r0, r4
4000b298:	eb000fcd 	bl	4000f1d4 <_tx_thread_system_resume>
4000b29c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b2a0:	e121f005 	msr	CPSR_c, r5
4000b2a4:	eafffffc 	b	4000b29c <_tx_byte_pool_cleanup+0xbc>
4000b2a8:	42595445 	.word	0x42595445
4000b2ac:	40030e54 	.word	0x40030e54

4000b2b0 <_tx_byte_pool_create>:
4000b2b0:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b2b4:	e1a04000 	mov	r4, r0
4000b2b8:	e1a05001 	mov	r5, r1
4000b2bc:	e1a06002 	mov	r6, r2
4000b2c0:	e1a07003 	mov	r7, r3
4000b2c4:	e3a01034 	mov	r1, #52	; 0x34
4000b2c8:	e1a00004 	mov	r0, r4
4000b2cc:	eb002080 	bl	400134d4 <__aeabi_memclr4>
4000b2d0:	e1a00127 	lsr	r0, r7, #2
4000b2d4:	e1a07100 	lsl	r7, r0, #2
4000b2d8:	e5845004 	str	r5, [r4, #4]
4000b2dc:	e5846018 	str	r6, [r4, #24]
4000b2e0:	e584701c 	str	r7, [r4, #28]
4000b2e4:	e5846010 	str	r6, [r4, #16]
4000b2e8:	e5846014 	str	r6, [r4, #20]
4000b2ec:	e2470008 	sub	r0, r7, #8
4000b2f0:	e5840008 	str	r0, [r4, #8]
4000b2f4:	e3a00002 	mov	r0, #2
4000b2f8:	e584000c 	str	r0, [r4, #12]
4000b2fc:	e0860007 	add	r0, r6, r7
4000b300:	e58d0004 	str	r0, [sp, #4]
4000b304:	e59d0004 	ldr	r0, [sp, #4]
4000b308:	e2400004 	sub	r0, r0, #4
4000b30c:	e58d0004 	str	r0, [sp, #4]
4000b310:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b4d4 <_tx_byte_pool_create+0x224>
4000b314:	e59d1004 	ldr	r1, [sp, #4]
4000b318:	e5810000 	str	r0, [r1]
4000b31c:	e59d0004 	ldr	r0, [sp, #4]
4000b320:	e2400004 	sub	r0, r0, #4
4000b324:	e58d0004 	str	r0, [sp, #4]
4000b328:	e59d0004 	ldr	r0, [sp, #4]
4000b32c:	e5806000 	str	r6, [r0]
4000b330:	e59d0004 	ldr	r0, [sp, #4]
4000b334:	e5860000 	str	r0, [r6]
4000b338:	e58d6004 	str	r6, [sp, #4]
4000b33c:	e59d0004 	ldr	r0, [sp, #4]
4000b340:	e2800004 	add	r0, r0, #4
4000b344:	e58d0004 	str	r0, [sp, #4]
4000b348:	e59f0188 	ldr	r0, [pc, #392]	; 4000b4d8 <_tx_byte_pool_create+0x228>
4000b34c:	e59d1004 	ldr	r1, [sp, #4]
4000b350:	e5810000 	str	r0, [r1]
4000b354:	e3a00000 	mov	r0, #0
4000b358:	e5840020 	str	r0, [r4, #32]
4000b35c:	e10f8000 	mrs	r8, CPSR
4000b360:	e3889080 	orr	r9, r8, #128	; 0x80
4000b364:	e121f009 	msr	CPSR_c, r9
4000b368:	e59f016c 	ldr	r0, [pc, #364]	; 4000b4dc <_tx_byte_pool_create+0x22c>
4000b36c:	e5840000 	str	r0, [r4]
4000b370:	e59f0168 	ldr	r0, [pc, #360]	; 4000b4e0 <_tx_byte_pool_create+0x230>
4000b374:	e5900000 	ldr	r0, [r0]
4000b378:	e3500000 	cmp	r0, #0
4000b37c:	0a00000b 	beq	4000b3b0 <_tx_byte_pool_create+0x100>
4000b380:	e59f0158 	ldr	r0, [pc, #344]	; 4000b4e0 <_tx_byte_pool_create+0x230>
4000b384:	e5900000 	ldr	r0, [r0]
4000b388:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b38c:	e59f014c 	ldr	r0, [pc, #332]	; 4000b4e0 <_tx_byte_pool_create+0x230>
4000b390:	e5900000 	ldr	r0, [r0]
4000b394:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b398:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b39c:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b3a0:	e59f0138 	ldr	r0, [pc, #312]	; 4000b4e0 <_tx_byte_pool_create+0x230>
4000b3a4:	e5900000 	ldr	r0, [r0]
4000b3a8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b3ac:	ea000003 	b	4000b3c0 <_tx_byte_pool_create+0x110>
4000b3b0:	e59f0128 	ldr	r0, [pc, #296]	; 4000b4e0 <_tx_byte_pool_create+0x230>
4000b3b4:	e5804000 	str	r4, [r0]
4000b3b8:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b3bc:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b3c0:	e59f011c 	ldr	r0, [pc, #284]	; 4000b4e4 <_tx_byte_pool_create+0x234>
4000b3c4:	e5900000 	ldr	r0, [r0]
4000b3c8:	e2800001 	add	r0, r0, #1
4000b3cc:	e59f1110 	ldr	r1, [pc, #272]	; 4000b4e4 <_tx_byte_pool_create+0x234>
4000b3d0:	e5810000 	str	r0, [r1]
4000b3d4:	e3a03000 	mov	r3, #0
4000b3d8:	e58d3000 	str	r3, [sp]
4000b3dc:	e1a03007 	mov	r3, r7
4000b3e0:	e1a02005 	mov	r2, r5
4000b3e4:	e1a01004 	mov	r1, r4
4000b3e8:	e3a00008 	mov	r0, #8
4000b3ec:	eb0012ce 	bl	4000ff2c <_tx_trace_object_register>
4000b3f0:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b4e8 <_tx_byte_pool_create+0x238>
4000b3f4:	e5910000 	ldr	r0, [r1]
4000b3f8:	e3500000 	cmp	r0, #0
4000b3fc:	0a000031 	beq	4000b4c8 <_tx_byte_pool_create+0x218>
4000b400:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b4ec <_tx_byte_pool_create+0x23c>
4000b404:	e5911000 	ldr	r1, [r1]
4000b408:	e2811001 	add	r1, r1, #1
4000b40c:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b4ec <_tx_byte_pool_create+0x23c>
4000b410:	e5821000 	str	r1, [r2]
4000b414:	e580100c 	str	r1, [r0, #12]
4000b418:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b4f0 <_tx_byte_pool_create+0x240>
4000b41c:	e5911000 	ldr	r1, [r1]
4000b420:	e3510000 	cmp	r1, #0
4000b424:	1a000006 	bne	4000b444 <_tx_byte_pool_create+0x194>
4000b428:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b4f4 <_tx_byte_pool_create+0x244>
4000b42c:	e5911000 	ldr	r1, [r1]
4000b430:	e5801000 	str	r1, [r0]
4000b434:	e5901000 	ldr	r1, [r0]
4000b438:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b43c:	e5801004 	str	r1, [r0, #4]
4000b440:	ea00000d 	b	4000b47c <_tx_byte_pool_create+0x1cc>
4000b444:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b4f0 <_tx_byte_pool_create+0x240>
4000b448:	e5911000 	ldr	r1, [r1]
4000b44c:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b4f8 <_tx_byte_pool_create+0x248>
4000b450:	e1510002 	cmp	r1, r2
4000b454:	2a000004 	bcs	4000b46c <_tx_byte_pool_create+0x1bc>
4000b458:	e3e01000 	mvn	r1, #0
4000b45c:	e5801000 	str	r1, [r0]
4000b460:	e3a01000 	mov	r1, #0
4000b464:	e5801004 	str	r1, [r0, #4]
4000b468:	ea000003 	b	4000b47c <_tx_byte_pool_create+0x1cc>
4000b46c:	e59f1084 	ldr	r1, [pc, #132]	; 4000b4f8 <_tx_byte_pool_create+0x248>
4000b470:	e5801000 	str	r1, [r0]
4000b474:	e3a01000 	mov	r1, #0
4000b478:	e5801004 	str	r1, [r0, #4]
4000b47c:	e3a01015 	mov	r1, #21
4000b480:	e5801008 	str	r1, [r0, #8]
4000b484:	e5804010 	str	r4, [r0, #16]
4000b488:	e5806014 	str	r6, [r0, #20]
4000b48c:	e5807018 	str	r7, [r0, #24]
4000b490:	e28d1004 	add	r1, sp, #4
4000b494:	e580101c 	str	r1, [r0, #28]
4000b498:	e2800020 	add	r0, r0, #32
4000b49c:	e59f1058 	ldr	r1, [pc, #88]	; 4000b4fc <_tx_byte_pool_create+0x24c>
4000b4a0:	e5911000 	ldr	r1, [r1]
4000b4a4:	e1500001 	cmp	r0, r1
4000b4a8:	3a000001 	bcc	4000b4b4 <_tx_byte_pool_create+0x204>
4000b4ac:	e59f104c 	ldr	r1, [pc, #76]	; 4000b500 <_tx_byte_pool_create+0x250>
4000b4b0:	e5910000 	ldr	r0, [r1]
4000b4b4:	e59f102c 	ldr	r1, [pc, #44]	; 4000b4e8 <_tx_byte_pool_create+0x238>
4000b4b8:	e5810000 	str	r0, [r1]
4000b4bc:	e59f1040 	ldr	r1, [pc, #64]	; 4000b504 <_tx_byte_pool_create+0x254>
4000b4c0:	e5911000 	ldr	r1, [r1]
4000b4c4:	e5810020 	str	r0, [r1, #32]
4000b4c8:	e121f008 	msr	CPSR_c, r8
4000b4cc:	e3a00000 	mov	r0, #0
4000b4d0:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b4d4:	aaaaaaaa 	.word	0xaaaaaaaa
4000b4d8:	ffffeeee 	.word	0xffffeeee
4000b4dc:	42595445 	.word	0x42595445
4000b4e0:	40030ed4 	.word	0x40030ed4
4000b4e4:	40030ed8 	.word	0x40030ed8
4000b4e8:	40030ea4 	.word	0x40030ea4
4000b4ec:	40030ea8 	.word	0x40030ea8
4000b4f0:	40030e30 	.word	0x40030e30
4000b4f4:	40030e38 	.word	0x40030e38
4000b4f8:	f0f0f0f0 	.word	0xf0f0f0f0
4000b4fc:	40030ea0 	.word	0x40030ea0
4000b500:	40030e9c 	.word	0x40030e9c
4000b504:	40030e90 	.word	0x40030e90

4000b508 <_tx_byte_pool_delete>:
4000b508:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b50c:	e1a04000 	mov	r4, r0
4000b510:	e10f5000 	mrs	r5, CPSR
4000b514:	e3856080 	orr	r6, r5, #128	; 0x80
4000b518:	e121f006 	msr	CPSR_c, r6
4000b51c:	e59f1204 	ldr	r1, [pc, #516]	; 4000b728 <_tx_byte_pool_delete+0x220>
4000b520:	e5910000 	ldr	r0, [r1]
4000b524:	e3500000 	cmp	r0, #0
4000b528:	0a000031 	beq	4000b5f4 <_tx_byte_pool_delete+0xec>
4000b52c:	e59f11f8 	ldr	r1, [pc, #504]	; 4000b72c <_tx_byte_pool_delete+0x224>
4000b530:	e5911000 	ldr	r1, [r1]
4000b534:	e2811001 	add	r1, r1, #1
4000b538:	e59f21ec 	ldr	r2, [pc, #492]	; 4000b72c <_tx_byte_pool_delete+0x224>
4000b53c:	e5821000 	str	r1, [r2]
4000b540:	e580100c 	str	r1, [r0, #12]
4000b544:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b730 <_tx_byte_pool_delete+0x228>
4000b548:	e5911000 	ldr	r1, [r1]
4000b54c:	e3510000 	cmp	r1, #0
4000b550:	1a000006 	bne	4000b570 <_tx_byte_pool_delete+0x68>
4000b554:	e59f11d8 	ldr	r1, [pc, #472]	; 4000b734 <_tx_byte_pool_delete+0x22c>
4000b558:	e5911000 	ldr	r1, [r1]
4000b55c:	e5801000 	str	r1, [r0]
4000b560:	e5901000 	ldr	r1, [r0]
4000b564:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b568:	e5801004 	str	r1, [r0, #4]
4000b56c:	ea00000d 	b	4000b5a8 <_tx_byte_pool_delete+0xa0>
4000b570:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b730 <_tx_byte_pool_delete+0x228>
4000b574:	e5911000 	ldr	r1, [r1]
4000b578:	e59f21b8 	ldr	r2, [pc, #440]	; 4000b738 <_tx_byte_pool_delete+0x230>
4000b57c:	e1510002 	cmp	r1, r2
4000b580:	2a000004 	bcs	4000b598 <_tx_byte_pool_delete+0x90>
4000b584:	e3e01000 	mvn	r1, #0
4000b588:	e5801000 	str	r1, [r0]
4000b58c:	e3a01000 	mov	r1, #0
4000b590:	e5801004 	str	r1, [r0, #4]
4000b594:	ea000003 	b	4000b5a8 <_tx_byte_pool_delete+0xa0>
4000b598:	e59f1198 	ldr	r1, [pc, #408]	; 4000b738 <_tx_byte_pool_delete+0x230>
4000b59c:	e5801000 	str	r1, [r0]
4000b5a0:	e3a01000 	mov	r1, #0
4000b5a4:	e5801004 	str	r1, [r0, #4]
4000b5a8:	e3a01016 	mov	r1, #22
4000b5ac:	e5801008 	str	r1, [r0, #8]
4000b5b0:	e5804010 	str	r4, [r0, #16]
4000b5b4:	e580d014 	str	sp, [r0, #20]
4000b5b8:	e3a01000 	mov	r1, #0
4000b5bc:	e5801018 	str	r1, [r0, #24]
4000b5c0:	e580101c 	str	r1, [r0, #28]
4000b5c4:	e2800020 	add	r0, r0, #32
4000b5c8:	e59f116c 	ldr	r1, [pc, #364]	; 4000b73c <_tx_byte_pool_delete+0x234>
4000b5cc:	e5911000 	ldr	r1, [r1]
4000b5d0:	e1500001 	cmp	r0, r1
4000b5d4:	3a000001 	bcc	4000b5e0 <_tx_byte_pool_delete+0xd8>
4000b5d8:	e59f1160 	ldr	r1, [pc, #352]	; 4000b740 <_tx_byte_pool_delete+0x238>
4000b5dc:	e5910000 	ldr	r0, [r1]
4000b5e0:	e59f1140 	ldr	r1, [pc, #320]	; 4000b728 <_tx_byte_pool_delete+0x220>
4000b5e4:	e5810000 	str	r0, [r1]
4000b5e8:	e59f1154 	ldr	r1, [pc, #340]	; 4000b744 <_tx_byte_pool_delete+0x23c>
4000b5ec:	e5911000 	ldr	r1, [r1]
4000b5f0:	e5810020 	str	r0, [r1, #32]
4000b5f4:	e1a00004 	mov	r0, r4
4000b5f8:	eb0012b6 	bl	400100d8 <_tx_trace_object_unregister>
4000b5fc:	e59f0144 	ldr	r0, [pc, #324]	; 4000b748 <_tx_byte_pool_delete+0x240>
4000b600:	e5900000 	ldr	r0, [r0]
4000b604:	e2400001 	sub	r0, r0, #1
4000b608:	e59f1138 	ldr	r1, [pc, #312]	; 4000b748 <_tx_byte_pool_delete+0x240>
4000b60c:	e5810000 	str	r0, [r1]
4000b610:	e3a00000 	mov	r0, #0
4000b614:	e5840000 	str	r0, [r4]
4000b618:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b61c:	e1500004 	cmp	r0, r4
4000b620:	1a000003 	bne	4000b634 <_tx_byte_pool_delete+0x12c>
4000b624:	e3a00000 	mov	r0, #0
4000b628:	e59f111c 	ldr	r1, [pc, #284]	; 4000b74c <_tx_byte_pool_delete+0x244>
4000b62c:	e5810000 	str	r0, [r1]
4000b630:	ea00000c 	b	4000b668 <_tx_byte_pool_delete+0x160>
4000b634:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b638:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b63c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b640:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b644:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b648:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b64c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b74c <_tx_byte_pool_delete+0x244>
4000b650:	e5900000 	ldr	r0, [r0]
4000b654:	e1500004 	cmp	r0, r4
4000b658:	1a000002 	bne	4000b668 <_tx_byte_pool_delete+0x160>
4000b65c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000b74c <_tx_byte_pool_delete+0x244>
4000b660:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b664:	e5810000 	str	r0, [r1]
4000b668:	e59f00e0 	ldr	r0, [pc, #224]	; 4000b750 <_tx_byte_pool_delete+0x248>
4000b66c:	e5900000 	ldr	r0, [r0]
4000b670:	e2800001 	add	r0, r0, #1
4000b674:	e59f10d4 	ldr	r1, [pc, #212]	; 4000b750 <_tx_byte_pool_delete+0x248>
4000b678:	e5810000 	str	r0, [r1]
4000b67c:	e121f005 	msr	CPSR_c, r5
4000b680:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b684:	e58d0000 	str	r0, [sp]
4000b688:	ea000017 	b	4000b6ec <_tx_byte_pool_delete+0x1e4>
4000b68c:	e10f5000 	mrs	r5, CPSR
4000b690:	e3856080 	orr	r6, r5, #128	; 0x80
4000b694:	e121f006 	msr	CPSR_c, r6
4000b698:	e3a00000 	mov	r0, #0
4000b69c:	e59d1000 	ldr	r1, [sp]
4000b6a0:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b6a4:	e59f00a4 	ldr	r0, [pc, #164]	; 4000b750 <_tx_byte_pool_delete+0x248>
4000b6a8:	e5900000 	ldr	r0, [r0]
4000b6ac:	e2800001 	add	r0, r0, #1
4000b6b0:	e59f1098 	ldr	r1, [pc, #152]	; 4000b750 <_tx_byte_pool_delete+0x248>
4000b6b4:	e5810000 	str	r0, [r1]
4000b6b8:	e121f005 	msr	CPSR_c, r5
4000b6bc:	e3a00001 	mov	r0, #1
4000b6c0:	e59d1000 	ldr	r1, [sp]
4000b6c4:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b6c8:	e59d0000 	ldr	r0, [sp]
4000b6cc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b6d0:	e58d0000 	str	r0, [sp]
4000b6d4:	e59d1000 	ldr	r1, [sp]
4000b6d8:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b6dc:	eb000ebc 	bl	4000f1d4 <_tx_thread_system_resume>
4000b6e0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b6e4:	e2400001 	sub	r0, r0, #1
4000b6e8:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b6ec:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b6f0:	e3500000 	cmp	r0, #0
4000b6f4:	1affffe4 	bne	4000b68c <_tx_byte_pool_delete+0x184>
4000b6f8:	e10f5000 	mrs	r5, CPSR
4000b6fc:	e3856080 	orr	r6, r5, #128	; 0x80
4000b700:	e121f006 	msr	CPSR_c, r6
4000b704:	e59f0044 	ldr	r0, [pc, #68]	; 4000b750 <_tx_byte_pool_delete+0x248>
4000b708:	e5900000 	ldr	r0, [r0]
4000b70c:	e2400001 	sub	r0, r0, #1
4000b710:	e59f1038 	ldr	r1, [pc, #56]	; 4000b750 <_tx_byte_pool_delete+0x248>
4000b714:	e5810000 	str	r0, [r1]
4000b718:	e121f005 	msr	CPSR_c, r5
4000b71c:	eb000e80 	bl	4000f124 <_tx_thread_system_preempt_check>
4000b720:	e3a00000 	mov	r0, #0
4000b724:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000b728:	40030ea4 	.word	0x40030ea4
4000b72c:	40030ea8 	.word	0x40030ea8
4000b730:	40030e30 	.word	0x40030e30
4000b734:	40030e38 	.word	0x40030e38
4000b738:	f0f0f0f0 	.word	0xf0f0f0f0
4000b73c:	40030ea0 	.word	0x40030ea0
4000b740:	40030e9c 	.word	0x40030e9c
4000b744:	40030e90 	.word	0x40030e90
4000b748:	40030ed8 	.word	0x40030ed8
4000b74c:	40030ed4 	.word	0x40030ed4
4000b750:	40030e54 	.word	0x40030e54

4000b754 <_tx_byte_pool_search>:
4000b754:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b758:	e1a02000 	mov	r2, r0
4000b75c:	e3a08000 	mov	r8, #0
4000b760:	e10f3000 	mrs	r3, CPSR
4000b764:	e383c080 	orr	ip, r3, #128	; 0x80
4000b768:	e121f00c 	msr	CPSR_c, ip
4000b76c:	e5920008 	ldr	r0, [r2, #8]
4000b770:	e1500001 	cmp	r0, r1
4000b774:	8a000002 	bhi	4000b784 <_tx_byte_pool_search+0x30>
4000b778:	e121f003 	msr	CPSR_c, r3
4000b77c:	e3a00000 	mov	r0, #0
4000b780:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b784:	e5925014 	ldr	r5, [r2, #20]
4000b788:	e1a0e005 	mov	lr, r5
4000b78c:	e592000c 	ldr	r0, [r2, #12]
4000b790:	e2807001 	add	r7, r0, #1
4000b794:	e3a06000 	mov	r6, #0
4000b798:	e1a00000 	nop			; (mov r0, r0)
4000b79c:	e59e0004 	ldr	r0, [lr, #4]
4000b7a0:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b7a4:	e29aa012 	adds	sl, sl, #18
4000b7a8:	1a000020 	bne	4000b830 <_tx_byte_pool_search+0xdc>
4000b7ac:	e3580000 	cmp	r8, #0
4000b7b0:	1a000004 	bne	4000b7c8 <_tx_byte_pool_search+0x74>
4000b7b4:	e5920014 	ldr	r0, [r2, #20]
4000b7b8:	e1500005 	cmp	r0, r5
4000b7bc:	1a000000 	bne	4000b7c4 <_tx_byte_pool_search+0x70>
4000b7c0:	e582e014 	str	lr, [r2, #20]
4000b7c4:	e3a08001 	mov	r8, #1
4000b7c8:	e59e4000 	ldr	r4, [lr]
4000b7cc:	e044000e 	sub	r0, r4, lr
4000b7d0:	e2406008 	sub	r6, r0, #8
4000b7d4:	e1560001 	cmp	r6, r1
4000b7d8:	3a000000 	bcc	4000b7e0 <_tx_byte_pool_search+0x8c>
4000b7dc:	ea000026 	b	4000b87c <_tx_byte_pool_search+0x128>
4000b7e0:	e3a06000 	mov	r6, #0
4000b7e4:	e5940004 	ldr	r0, [r4, #4]
4000b7e8:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b7ec:	e29aa012 	adds	sl, sl, #18
4000b7f0:	1a000009 	bne	4000b81c <_tx_byte_pool_search+0xc8>
4000b7f4:	e5940000 	ldr	r0, [r4]
4000b7f8:	e58e0000 	str	r0, [lr]
4000b7fc:	e592000c 	ldr	r0, [r2, #12]
4000b800:	e2400001 	sub	r0, r0, #1
4000b804:	e582000c 	str	r0, [r2, #12]
4000b808:	e5920014 	ldr	r0, [r2, #20]
4000b80c:	e1500004 	cmp	r0, r4
4000b810:	1a000007 	bne	4000b834 <_tx_byte_pool_search+0xe0>
4000b814:	e582e014 	str	lr, [r2, #20]
4000b818:	ea000005 	b	4000b834 <_tx_byte_pool_search+0xe0>
4000b81c:	e594e000 	ldr	lr, [r4]
4000b820:	e3570000 	cmp	r7, #0
4000b824:	0a000002 	beq	4000b834 <_tx_byte_pool_search+0xe0>
4000b828:	e2477001 	sub	r7, r7, #1
4000b82c:	ea000000 	b	4000b834 <_tx_byte_pool_search+0xe0>
4000b830:	e59ee000 	ldr	lr, [lr]
4000b834:	e3570000 	cmp	r7, #0
4000b838:	0a000000 	beq	4000b840 <_tx_byte_pool_search+0xec>
4000b83c:	e2477001 	sub	r7, r7, #1
4000b840:	e121f003 	msr	CPSR_c, r3
4000b844:	e10f3000 	mrs	r3, CPSR
4000b848:	e383c080 	orr	ip, r3, #128	; 0x80
4000b84c:	e121f00c 	msr	CPSR_c, ip
4000b850:	e59f00ac 	ldr	r0, [pc, #172]	; 4000b904 <_tx_byte_pool_search+0x1b0>
4000b854:	e5909000 	ldr	r9, [r0]
4000b858:	e5920020 	ldr	r0, [r2, #32]
4000b85c:	e1500009 	cmp	r0, r9
4000b860:	0a000003 	beq	4000b874 <_tx_byte_pool_search+0x120>
4000b864:	e592e014 	ldr	lr, [r2, #20]
4000b868:	e592000c 	ldr	r0, [r2, #12]
4000b86c:	e2807001 	add	r7, r0, #1
4000b870:	e5829020 	str	r9, [r2, #32]
4000b874:	e3570000 	cmp	r7, #0
4000b878:	1affffc7 	bne	4000b79c <_tx_byte_pool_search+0x48>
4000b87c:	e1a00000 	nop			; (mov r0, r0)
4000b880:	e3560000 	cmp	r6, #0
4000b884:	0a00001a 	beq	4000b8f4 <_tx_byte_pool_search+0x1a0>
4000b888:	e0460001 	sub	r0, r6, r1
4000b88c:	e3500014 	cmp	r0, #20
4000b890:	3a00000a 	bcc	4000b8c0 <_tx_byte_pool_search+0x16c>
4000b894:	e08e0001 	add	r0, lr, r1
4000b898:	e2804008 	add	r4, r0, #8
4000b89c:	e59e0000 	ldr	r0, [lr]
4000b8a0:	e5840000 	str	r0, [r4]
4000b8a4:	e59f005c 	ldr	r0, [pc, #92]	; 4000b908 <_tx_byte_pool_search+0x1b4>
4000b8a8:	e5840004 	str	r0, [r4, #4]
4000b8ac:	e592000c 	ldr	r0, [r2, #12]
4000b8b0:	e2800001 	add	r0, r0, #1
4000b8b4:	e582000c 	str	r0, [r2, #12]
4000b8b8:	e58e4000 	str	r4, [lr]
4000b8bc:	e1a06001 	mov	r6, r1
4000b8c0:	e58e2004 	str	r2, [lr, #4]
4000b8c4:	e5920008 	ldr	r0, [r2, #8]
4000b8c8:	e0400006 	sub	r0, r0, r6
4000b8cc:	e2400008 	sub	r0, r0, #8
4000b8d0:	e5820008 	str	r0, [r2, #8]
4000b8d4:	e5920014 	ldr	r0, [r2, #20]
4000b8d8:	e150000e 	cmp	r0, lr
4000b8dc:	1a000001 	bne	4000b8e8 <_tx_byte_pool_search+0x194>
4000b8e0:	e59e0000 	ldr	r0, [lr]
4000b8e4:	e5820014 	str	r0, [r2, #20]
4000b8e8:	e121f003 	msr	CPSR_c, r3
4000b8ec:	e28ee008 	add	lr, lr, #8
4000b8f0:	ea000001 	b	4000b8fc <_tx_byte_pool_search+0x1a8>
4000b8f4:	e121f003 	msr	CPSR_c, r3
4000b8f8:	e3a0e000 	mov	lr, #0
4000b8fc:	e1a0000e 	mov	r0, lr
4000b900:	eaffff9e 	b	4000b780 <_tx_byte_pool_search+0x2c>
4000b904:	40030e38 	.word	0x40030e38
4000b908:	ffffeeee 	.word	0xffffeeee

4000b90c <_tx_byte_release>:
4000b90c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b910:	e1a04000 	mov	r4, r0
4000b914:	e1a09004 	mov	r9, r4
4000b918:	e1b04009 	movs	r4, r9
4000b91c:	0a00000f 	beq	4000b960 <_tx_byte_release+0x54>
4000b920:	e2499008 	sub	r9, r9, #8
4000b924:	e5990004 	ldr	r0, [r9, #4]
4000b928:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000b92c:	e2911012 	adds	r1, r1, #18
4000b930:	0a000008 	beq	4000b958 <_tx_byte_release+0x4c>
4000b934:	e5997004 	ldr	r7, [r9, #4]
4000b938:	e3570000 	cmp	r7, #0
4000b93c:	0a000003 	beq	4000b950 <_tx_byte_release+0x44>
4000b940:	e5970000 	ldr	r0, [r7]
4000b944:	e59f125c 	ldr	r1, [pc, #604]	; 4000bba8 <_tx_byte_release+0x29c>
4000b948:	e1500001 	cmp	r0, r1
4000b94c:	0a000005 	beq	4000b968 <_tx_byte_release+0x5c>
4000b950:	e3a00003 	mov	r0, #3
4000b954:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b958:	e3a00003 	mov	r0, #3
4000b95c:	eafffffc 	b	4000b954 <_tx_byte_release+0x48>
4000b960:	e3a00003 	mov	r0, #3
4000b964:	eafffffa 	b	4000b954 <_tx_byte_release+0x48>
4000b968:	e59f023c 	ldr	r0, [pc, #572]	; 4000bbac <_tx_byte_release+0x2a0>
4000b96c:	e5908000 	ldr	r8, [r0]
4000b970:	e5878020 	str	r8, [r7, #32]
4000b974:	e10f5000 	mrs	r5, CPSR
4000b978:	e3856080 	orr	r6, r5, #128	; 0x80
4000b97c:	e121f006 	msr	CPSR_c, r6
4000b980:	e59f1228 	ldr	r1, [pc, #552]	; 4000bbb0 <_tx_byte_release+0x2a4>
4000b984:	e5910000 	ldr	r0, [r1]
4000b988:	e3500000 	cmp	r0, #0
4000b98c:	0a000032 	beq	4000ba5c <_tx_byte_release+0x150>
4000b990:	e59f121c 	ldr	r1, [pc, #540]	; 4000bbb4 <_tx_byte_release+0x2a8>
4000b994:	e5911000 	ldr	r1, [r1]
4000b998:	e2811001 	add	r1, r1, #1
4000b99c:	e59f2210 	ldr	r2, [pc, #528]	; 4000bbb4 <_tx_byte_release+0x2a8>
4000b9a0:	e5821000 	str	r1, [r2]
4000b9a4:	e580100c 	str	r1, [r0, #12]
4000b9a8:	e59f1208 	ldr	r1, [pc, #520]	; 4000bbb8 <_tx_byte_release+0x2ac>
4000b9ac:	e5911000 	ldr	r1, [r1]
4000b9b0:	e3510000 	cmp	r1, #0
4000b9b4:	1a000006 	bne	4000b9d4 <_tx_byte_release+0xc8>
4000b9b8:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bbac <_tx_byte_release+0x2a0>
4000b9bc:	e5911000 	ldr	r1, [r1]
4000b9c0:	e5801000 	str	r1, [r0]
4000b9c4:	e5901000 	ldr	r1, [r0]
4000b9c8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b9cc:	e5801004 	str	r1, [r0, #4]
4000b9d0:	ea00000d 	b	4000ba0c <_tx_byte_release+0x100>
4000b9d4:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bbb8 <_tx_byte_release+0x2ac>
4000b9d8:	e5911000 	ldr	r1, [r1]
4000b9dc:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bbbc <_tx_byte_release+0x2b0>
4000b9e0:	e1510002 	cmp	r1, r2
4000b9e4:	2a000004 	bcs	4000b9fc <_tx_byte_release+0xf0>
4000b9e8:	e3e01000 	mvn	r1, #0
4000b9ec:	e5801000 	str	r1, [r0]
4000b9f0:	e3a01000 	mov	r1, #0
4000b9f4:	e5801004 	str	r1, [r0, #4]
4000b9f8:	ea000003 	b	4000ba0c <_tx_byte_release+0x100>
4000b9fc:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bbbc <_tx_byte_release+0x2b0>
4000ba00:	e5801000 	str	r1, [r0]
4000ba04:	e3a01000 	mov	r1, #0
4000ba08:	e5801004 	str	r1, [r0, #4]
4000ba0c:	e3a0101b 	mov	r1, #27
4000ba10:	e5801008 	str	r1, [r0, #8]
4000ba14:	e5807010 	str	r7, [r0, #16]
4000ba18:	e5804014 	str	r4, [r0, #20]
4000ba1c:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000ba20:	e5801018 	str	r1, [r0, #24]
4000ba24:	e5971008 	ldr	r1, [r7, #8]
4000ba28:	e580101c 	str	r1, [r0, #28]
4000ba2c:	e2800020 	add	r0, r0, #32
4000ba30:	e59f1188 	ldr	r1, [pc, #392]	; 4000bbc0 <_tx_byte_release+0x2b4>
4000ba34:	e5911000 	ldr	r1, [r1]
4000ba38:	e1500001 	cmp	r0, r1
4000ba3c:	3a000001 	bcc	4000ba48 <_tx_byte_release+0x13c>
4000ba40:	e59f117c 	ldr	r1, [pc, #380]	; 4000bbc4 <_tx_byte_release+0x2b8>
4000ba44:	e5910000 	ldr	r0, [r1]
4000ba48:	e59f1160 	ldr	r1, [pc, #352]	; 4000bbb0 <_tx_byte_release+0x2a4>
4000ba4c:	e5810000 	str	r0, [r1]
4000ba50:	e59f1170 	ldr	r1, [pc, #368]	; 4000bbc8 <_tx_byte_release+0x2bc>
4000ba54:	e5911000 	ldr	r1, [r1]
4000ba58:	e5810020 	str	r0, [r1, #32]
4000ba5c:	e59f0168 	ldr	r0, [pc, #360]	; 4000bbcc <_tx_byte_release+0x2c0>
4000ba60:	e5890004 	str	r0, [r9, #4]
4000ba64:	e5970008 	ldr	r0, [r7, #8]
4000ba68:	e5991000 	ldr	r1, [r9]
4000ba6c:	e0411009 	sub	r1, r1, r9
4000ba70:	e0800001 	add	r0, r0, r1
4000ba74:	e5870008 	str	r0, [r7, #8]
4000ba78:	e5970014 	ldr	r0, [r7, #20]
4000ba7c:	e1500009 	cmp	r0, r9
4000ba80:	9a000000 	bls	4000ba88 <_tx_byte_release+0x17c>
4000ba84:	e5879014 	str	r9, [r7, #20]
4000ba88:	ea00003e 	b	4000bb88 <_tx_byte_release+0x27c>
4000ba8c:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000ba90:	e121f005 	msr	CPSR_c, r5
4000ba94:	e1a00007 	mov	r0, r7
4000ba98:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000ba9c:	ebffff2c 	bl	4000b754 <_tx_byte_pool_search>
4000baa0:	e1a09000 	mov	r9, r0
4000baa4:	e10f5000 	mrs	r5, CPSR
4000baa8:	e3856080 	orr	r6, r5, #128	; 0x80
4000baac:	e121f006 	msr	CPSR_c, r6
4000bab0:	e3590000 	cmp	r9, #0
4000bab4:	1a000000 	bne	4000babc <_tx_byte_release+0x1b0>
4000bab8:	ea000035 	b	4000bb94 <_tx_byte_release+0x288>
4000babc:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bac0:	e150000a 	cmp	r0, sl
4000bac4:	0a00000c 	beq	4000bafc <_tx_byte_release+0x1f0>
4000bac8:	e2499008 	sub	r9, r9, #8
4000bacc:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bbcc <_tx_byte_release+0x2c0>
4000bad0:	e5890004 	str	r0, [r9, #4]
4000bad4:	e5970008 	ldr	r0, [r7, #8]
4000bad8:	e5991000 	ldr	r1, [r9]
4000badc:	e0411009 	sub	r1, r1, r9
4000bae0:	e0800001 	add	r0, r0, r1
4000bae4:	e5870008 	str	r0, [r7, #8]
4000bae8:	e5970014 	ldr	r0, [r7, #20]
4000baec:	e1500009 	cmp	r0, r9
4000baf0:	9a000000 	bls	4000baf8 <_tx_byte_release+0x1ec>
4000baf4:	e5879014 	str	r9, [r7, #20]
4000baf8:	ea000022 	b	4000bb88 <_tx_byte_release+0x27c>
4000bafc:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bb00:	e150000a 	cmp	r0, sl
4000bb04:	1a000002 	bne	4000bb14 <_tx_byte_release+0x208>
4000bb08:	e3a00000 	mov	r0, #0
4000bb0c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bb10:	ea000007 	b	4000bb34 <_tx_byte_release+0x228>
4000bb14:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bb18:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bb1c:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bb20:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bb24:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bb28:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bb2c:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bb30:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bb34:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bb38:	e2400001 	sub	r0, r0, #1
4000bb3c:	e5870028 	str	r0, [r7, #40]	; 0x28
4000bb40:	e3a00000 	mov	r0, #0
4000bb44:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bb48:	e59f0080 	ldr	r0, [pc, #128]	; 4000bbd0 <_tx_byte_release+0x2c4>
4000bb4c:	e5900000 	ldr	r0, [r0]
4000bb50:	e2800001 	add	r0, r0, #1
4000bb54:	e59f1074 	ldr	r1, [pc, #116]	; 4000bbd0 <_tx_byte_release+0x2c4>
4000bb58:	e5810000 	str	r0, [r1]
4000bb5c:	e121f005 	msr	CPSR_c, r5
4000bb60:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bb64:	e5809000 	str	r9, [r0]
4000bb68:	e3a00000 	mov	r0, #0
4000bb6c:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bb70:	e1a0000a 	mov	r0, sl
4000bb74:	eb000d96 	bl	4000f1d4 <_tx_thread_system_resume>
4000bb78:	e10f5000 	mrs	r5, CPSR
4000bb7c:	e3856080 	orr	r6, r5, #128	; 0x80
4000bb80:	e121f006 	msr	CPSR_c, r6
4000bb84:	e1a00000 	nop			; (mov r0, r0)
4000bb88:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bb8c:	e3500000 	cmp	r0, #0
4000bb90:	1affffbd 	bne	4000ba8c <_tx_byte_release+0x180>
4000bb94:	e1a00000 	nop			; (mov r0, r0)
4000bb98:	e121f005 	msr	CPSR_c, r5
4000bb9c:	eb000d60 	bl	4000f124 <_tx_thread_system_preempt_check>
4000bba0:	e3a00000 	mov	r0, #0
4000bba4:	eaffff6a 	b	4000b954 <_tx_byte_release+0x48>
4000bba8:	42595445 	.word	0x42595445
4000bbac:	40030e38 	.word	0x40030e38
4000bbb0:	40030ea4 	.word	0x40030ea4
4000bbb4:	40030ea8 	.word	0x40030ea8
4000bbb8:	40030e30 	.word	0x40030e30
4000bbbc:	f0f0f0f0 	.word	0xf0f0f0f0
4000bbc0:	40030ea0 	.word	0x40030ea0
4000bbc4:	40030e9c 	.word	0x40030e9c
4000bbc8:	40030e90 	.word	0x40030e90
4000bbcc:	ffffeeee 	.word	0xffffeeee
4000bbd0:	40030e54 	.word	0x40030e54

4000bbd4 <_tx_event_flags_create>:
4000bbd4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bbd8:	e1a04000 	mov	r4, r0
4000bbdc:	e1a05001 	mov	r5, r1
4000bbe0:	e3a01028 	mov	r1, #40	; 0x28
4000bbe4:	e1a00004 	mov	r0, r4
4000bbe8:	eb001e39 	bl	400134d4 <__aeabi_memclr4>
4000bbec:	e5845004 	str	r5, [r4, #4]
4000bbf0:	e10f6000 	mrs	r6, CPSR
4000bbf4:	e3867080 	orr	r7, r6, #128	; 0x80
4000bbf8:	e121f007 	msr	CPSR_c, r7
4000bbfc:	e59f0170 	ldr	r0, [pc, #368]	; 4000bd74 <_tx_event_flags_create+0x1a0>
4000bc00:	e5840000 	str	r0, [r4]
4000bc04:	e59f016c 	ldr	r0, [pc, #364]	; 4000bd78 <_tx_event_flags_create+0x1a4>
4000bc08:	e5900000 	ldr	r0, [r0]
4000bc0c:	e3500000 	cmp	r0, #0
4000bc10:	0a00000e 	beq	4000bc50 <_tx_event_flags_create+0x7c>
4000bc14:	e59f015c 	ldr	r0, [pc, #348]	; 4000bd78 <_tx_event_flags_create+0x1a4>
4000bc18:	e5900000 	ldr	r0, [r0]
4000bc1c:	e590001c 	ldr	r0, [r0, #28]
4000bc20:	e58d0004 	str	r0, [sp, #4]
4000bc24:	e59f014c 	ldr	r0, [pc, #332]	; 4000bd78 <_tx_event_flags_create+0x1a4>
4000bc28:	e5900000 	ldr	r0, [r0]
4000bc2c:	e580401c 	str	r4, [r0, #28]
4000bc30:	e59d0004 	ldr	r0, [sp, #4]
4000bc34:	e5804018 	str	r4, [r0, #24]
4000bc38:	e59d0004 	ldr	r0, [sp, #4]
4000bc3c:	e584001c 	str	r0, [r4, #28]
4000bc40:	e59f0130 	ldr	r0, [pc, #304]	; 4000bd78 <_tx_event_flags_create+0x1a4>
4000bc44:	e5900000 	ldr	r0, [r0]
4000bc48:	e5840018 	str	r0, [r4, #24]
4000bc4c:	ea000003 	b	4000bc60 <_tx_event_flags_create+0x8c>
4000bc50:	e59f0120 	ldr	r0, [pc, #288]	; 4000bd78 <_tx_event_flags_create+0x1a4>
4000bc54:	e5804000 	str	r4, [r0]
4000bc58:	e5844018 	str	r4, [r4, #24]
4000bc5c:	e584401c 	str	r4, [r4, #28]
4000bc60:	e59f0114 	ldr	r0, [pc, #276]	; 4000bd7c <_tx_event_flags_create+0x1a8>
4000bc64:	e5900000 	ldr	r0, [r0]
4000bc68:	e2800001 	add	r0, r0, #1
4000bc6c:	e59f1108 	ldr	r1, [pc, #264]	; 4000bd7c <_tx_event_flags_create+0x1a8>
4000bc70:	e5810000 	str	r0, [r1]
4000bc74:	e3a03000 	mov	r3, #0
4000bc78:	e1a02005 	mov	r2, r5
4000bc7c:	e1a01004 	mov	r1, r4
4000bc80:	e3a00006 	mov	r0, #6
4000bc84:	e58d3000 	str	r3, [sp]
4000bc88:	eb0010a7 	bl	4000ff2c <_tx_trace_object_register>
4000bc8c:	e59f10ec 	ldr	r1, [pc, #236]	; 4000bd80 <_tx_event_flags_create+0x1ac>
4000bc90:	e5910000 	ldr	r0, [r1]
4000bc94:	e3500000 	cmp	r0, #0
4000bc98:	0a000032 	beq	4000bd68 <_tx_event_flags_create+0x194>
4000bc9c:	e59f10e0 	ldr	r1, [pc, #224]	; 4000bd84 <_tx_event_flags_create+0x1b0>
4000bca0:	e5911000 	ldr	r1, [r1]
4000bca4:	e2811001 	add	r1, r1, #1
4000bca8:	e59f20d4 	ldr	r2, [pc, #212]	; 4000bd84 <_tx_event_flags_create+0x1b0>
4000bcac:	e5821000 	str	r1, [r2]
4000bcb0:	e580100c 	str	r1, [r0, #12]
4000bcb4:	e59f10cc 	ldr	r1, [pc, #204]	; 4000bd88 <_tx_event_flags_create+0x1b4>
4000bcb8:	e5911000 	ldr	r1, [r1]
4000bcbc:	e3510000 	cmp	r1, #0
4000bcc0:	1a000006 	bne	4000bce0 <_tx_event_flags_create+0x10c>
4000bcc4:	e59f10c0 	ldr	r1, [pc, #192]	; 4000bd8c <_tx_event_flags_create+0x1b8>
4000bcc8:	e5911000 	ldr	r1, [r1]
4000bccc:	e5801000 	str	r1, [r0]
4000bcd0:	e5901000 	ldr	r1, [r0]
4000bcd4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bcd8:	e5801004 	str	r1, [r0, #4]
4000bcdc:	ea00000d 	b	4000bd18 <_tx_event_flags_create+0x144>
4000bce0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000bd88 <_tx_event_flags_create+0x1b4>
4000bce4:	e5911000 	ldr	r1, [r1]
4000bce8:	e59f20a0 	ldr	r2, [pc, #160]	; 4000bd90 <_tx_event_flags_create+0x1bc>
4000bcec:	e1510002 	cmp	r1, r2
4000bcf0:	2a000004 	bcs	4000bd08 <_tx_event_flags_create+0x134>
4000bcf4:	e3e01000 	mvn	r1, #0
4000bcf8:	e5801000 	str	r1, [r0]
4000bcfc:	e3a01000 	mov	r1, #0
4000bd00:	e5801004 	str	r1, [r0, #4]
4000bd04:	ea000003 	b	4000bd18 <_tx_event_flags_create+0x144>
4000bd08:	e59f1080 	ldr	r1, [pc, #128]	; 4000bd90 <_tx_event_flags_create+0x1bc>
4000bd0c:	e5801000 	str	r1, [r0]
4000bd10:	e3a01000 	mov	r1, #0
4000bd14:	e5801004 	str	r1, [r0, #4]
4000bd18:	e3a0101e 	mov	r1, #30
4000bd1c:	e5801008 	str	r1, [r0, #8]
4000bd20:	e5804010 	str	r4, [r0, #16]
4000bd24:	e28d1004 	add	r1, sp, #4
4000bd28:	e5801014 	str	r1, [r0, #20]
4000bd2c:	e3a01000 	mov	r1, #0
4000bd30:	e5801018 	str	r1, [r0, #24]
4000bd34:	e580101c 	str	r1, [r0, #28]
4000bd38:	e2800020 	add	r0, r0, #32
4000bd3c:	e59f1050 	ldr	r1, [pc, #80]	; 4000bd94 <_tx_event_flags_create+0x1c0>
4000bd40:	e5911000 	ldr	r1, [r1]
4000bd44:	e1500001 	cmp	r0, r1
4000bd48:	3a000001 	bcc	4000bd54 <_tx_event_flags_create+0x180>
4000bd4c:	e59f1044 	ldr	r1, [pc, #68]	; 4000bd98 <_tx_event_flags_create+0x1c4>
4000bd50:	e5910000 	ldr	r0, [r1]
4000bd54:	e59f1024 	ldr	r1, [pc, #36]	; 4000bd80 <_tx_event_flags_create+0x1ac>
4000bd58:	e5810000 	str	r0, [r1]
4000bd5c:	e59f1038 	ldr	r1, [pc, #56]	; 4000bd9c <_tx_event_flags_create+0x1c8>
4000bd60:	e5911000 	ldr	r1, [r1]
4000bd64:	e5810020 	str	r0, [r1, #32]
4000bd68:	e121f006 	msr	CPSR_c, r6
4000bd6c:	e3a00000 	mov	r0, #0
4000bd70:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000bd74:	4456444e 	.word	0x4456444e
4000bd78:	40030ebc 	.word	0x40030ebc
4000bd7c:	40030ec0 	.word	0x40030ec0
4000bd80:	40030ea4 	.word	0x40030ea4
4000bd84:	40030ea8 	.word	0x40030ea8
4000bd88:	40030e30 	.word	0x40030e30
4000bd8c:	40030e38 	.word	0x40030e38
4000bd90:	f0f0f0f0 	.word	0xf0f0f0f0
4000bd94:	40030ea0 	.word	0x40030ea0
4000bd98:	40030e9c 	.word	0x40030e9c
4000bd9c:	40030e90 	.word	0x40030e90

4000bda0 <_tx_event_flags_delete>:
4000bda0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000bda4:	e1a04000 	mov	r4, r0
4000bda8:	e10f5000 	mrs	r5, CPSR
4000bdac:	e3856080 	orr	r6, r5, #128	; 0x80
4000bdb0:	e121f006 	msr	CPSR_c, r6
4000bdb4:	e59f1204 	ldr	r1, [pc, #516]	; 4000bfc0 <_tx_event_flags_delete+0x220>
4000bdb8:	e5910000 	ldr	r0, [r1]
4000bdbc:	e3500000 	cmp	r0, #0
4000bdc0:	0a000031 	beq	4000be8c <_tx_event_flags_delete+0xec>
4000bdc4:	e59f11f8 	ldr	r1, [pc, #504]	; 4000bfc4 <_tx_event_flags_delete+0x224>
4000bdc8:	e5911000 	ldr	r1, [r1]
4000bdcc:	e2811001 	add	r1, r1, #1
4000bdd0:	e59f21ec 	ldr	r2, [pc, #492]	; 4000bfc4 <_tx_event_flags_delete+0x224>
4000bdd4:	e5821000 	str	r1, [r2]
4000bdd8:	e580100c 	str	r1, [r0, #12]
4000bddc:	e59f11e4 	ldr	r1, [pc, #484]	; 4000bfc8 <_tx_event_flags_delete+0x228>
4000bde0:	e5911000 	ldr	r1, [r1]
4000bde4:	e3510000 	cmp	r1, #0
4000bde8:	1a000006 	bne	4000be08 <_tx_event_flags_delete+0x68>
4000bdec:	e59f11d8 	ldr	r1, [pc, #472]	; 4000bfcc <_tx_event_flags_delete+0x22c>
4000bdf0:	e5911000 	ldr	r1, [r1]
4000bdf4:	e5801000 	str	r1, [r0]
4000bdf8:	e5901000 	ldr	r1, [r0]
4000bdfc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000be00:	e5801004 	str	r1, [r0, #4]
4000be04:	ea00000d 	b	4000be40 <_tx_event_flags_delete+0xa0>
4000be08:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bfc8 <_tx_event_flags_delete+0x228>
4000be0c:	e5911000 	ldr	r1, [r1]
4000be10:	e59f21b8 	ldr	r2, [pc, #440]	; 4000bfd0 <_tx_event_flags_delete+0x230>
4000be14:	e1510002 	cmp	r1, r2
4000be18:	2a000004 	bcs	4000be30 <_tx_event_flags_delete+0x90>
4000be1c:	e3e01000 	mvn	r1, #0
4000be20:	e5801000 	str	r1, [r0]
4000be24:	e3a01000 	mov	r1, #0
4000be28:	e5801004 	str	r1, [r0, #4]
4000be2c:	ea000003 	b	4000be40 <_tx_event_flags_delete+0xa0>
4000be30:	e59f1198 	ldr	r1, [pc, #408]	; 4000bfd0 <_tx_event_flags_delete+0x230>
4000be34:	e5801000 	str	r1, [r0]
4000be38:	e3a01000 	mov	r1, #0
4000be3c:	e5801004 	str	r1, [r0, #4]
4000be40:	e3a0101f 	mov	r1, #31
4000be44:	e5801008 	str	r1, [r0, #8]
4000be48:	e5804010 	str	r4, [r0, #16]
4000be4c:	e580d014 	str	sp, [r0, #20]
4000be50:	e3a01000 	mov	r1, #0
4000be54:	e5801018 	str	r1, [r0, #24]
4000be58:	e580101c 	str	r1, [r0, #28]
4000be5c:	e2800020 	add	r0, r0, #32
4000be60:	e59f116c 	ldr	r1, [pc, #364]	; 4000bfd4 <_tx_event_flags_delete+0x234>
4000be64:	e5911000 	ldr	r1, [r1]
4000be68:	e1500001 	cmp	r0, r1
4000be6c:	3a000001 	bcc	4000be78 <_tx_event_flags_delete+0xd8>
4000be70:	e59f1160 	ldr	r1, [pc, #352]	; 4000bfd8 <_tx_event_flags_delete+0x238>
4000be74:	e5910000 	ldr	r0, [r1]
4000be78:	e59f1140 	ldr	r1, [pc, #320]	; 4000bfc0 <_tx_event_flags_delete+0x220>
4000be7c:	e5810000 	str	r0, [r1]
4000be80:	e59f1154 	ldr	r1, [pc, #340]	; 4000bfdc <_tx_event_flags_delete+0x23c>
4000be84:	e5911000 	ldr	r1, [r1]
4000be88:	e5810020 	str	r0, [r1, #32]
4000be8c:	e1a00004 	mov	r0, r4
4000be90:	eb001090 	bl	400100d8 <_tx_trace_object_unregister>
4000be94:	e59f0144 	ldr	r0, [pc, #324]	; 4000bfe0 <_tx_event_flags_delete+0x240>
4000be98:	e5900000 	ldr	r0, [r0]
4000be9c:	e2400001 	sub	r0, r0, #1
4000bea0:	e59f1138 	ldr	r1, [pc, #312]	; 4000bfe0 <_tx_event_flags_delete+0x240>
4000bea4:	e5810000 	str	r0, [r1]
4000bea8:	e3a00000 	mov	r0, #0
4000beac:	e5840000 	str	r0, [r4]
4000beb0:	e5940018 	ldr	r0, [r4, #24]
4000beb4:	e1500004 	cmp	r0, r4
4000beb8:	1a000003 	bne	4000becc <_tx_event_flags_delete+0x12c>
4000bebc:	e3a00000 	mov	r0, #0
4000bec0:	e59f111c 	ldr	r1, [pc, #284]	; 4000bfe4 <_tx_event_flags_delete+0x244>
4000bec4:	e5810000 	str	r0, [r1]
4000bec8:	ea00000c 	b	4000bf00 <_tx_event_flags_delete+0x160>
4000becc:	e594001c 	ldr	r0, [r4, #28]
4000bed0:	e5941018 	ldr	r1, [r4, #24]
4000bed4:	e581001c 	str	r0, [r1, #28]
4000bed8:	e5940018 	ldr	r0, [r4, #24]
4000bedc:	e594101c 	ldr	r1, [r4, #28]
4000bee0:	e5810018 	str	r0, [r1, #24]
4000bee4:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bfe4 <_tx_event_flags_delete+0x244>
4000bee8:	e5900000 	ldr	r0, [r0]
4000beec:	e1500004 	cmp	r0, r4
4000bef0:	1a000002 	bne	4000bf00 <_tx_event_flags_delete+0x160>
4000bef4:	e59f10e8 	ldr	r1, [pc, #232]	; 4000bfe4 <_tx_event_flags_delete+0x244>
4000bef8:	e5940018 	ldr	r0, [r4, #24]
4000befc:	e5810000 	str	r0, [r1]
4000bf00:	e59f00e0 	ldr	r0, [pc, #224]	; 4000bfe8 <_tx_event_flags_delete+0x248>
4000bf04:	e5900000 	ldr	r0, [r0]
4000bf08:	e2800001 	add	r0, r0, #1
4000bf0c:	e59f10d4 	ldr	r1, [pc, #212]	; 4000bfe8 <_tx_event_flags_delete+0x248>
4000bf10:	e5810000 	str	r0, [r1]
4000bf14:	e121f005 	msr	CPSR_c, r5
4000bf18:	e5940010 	ldr	r0, [r4, #16]
4000bf1c:	e58d0000 	str	r0, [sp]
4000bf20:	ea000017 	b	4000bf84 <_tx_event_flags_delete+0x1e4>
4000bf24:	e10f5000 	mrs	r5, CPSR
4000bf28:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf2c:	e121f006 	msr	CPSR_c, r6
4000bf30:	e3a00000 	mov	r0, #0
4000bf34:	e59d1000 	ldr	r1, [sp]
4000bf38:	e5810068 	str	r0, [r1, #104]	; 0x68
4000bf3c:	e59f00a4 	ldr	r0, [pc, #164]	; 4000bfe8 <_tx_event_flags_delete+0x248>
4000bf40:	e5900000 	ldr	r0, [r0]
4000bf44:	e2800001 	add	r0, r0, #1
4000bf48:	e59f1098 	ldr	r1, [pc, #152]	; 4000bfe8 <_tx_event_flags_delete+0x248>
4000bf4c:	e5810000 	str	r0, [r1]
4000bf50:	e121f005 	msr	CPSR_c, r5
4000bf54:	e3a00001 	mov	r0, #1
4000bf58:	e59d1000 	ldr	r1, [sp]
4000bf5c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000bf60:	e59d0000 	ldr	r0, [sp]
4000bf64:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000bf68:	e58d0000 	str	r0, [sp]
4000bf6c:	e59d1000 	ldr	r1, [sp]
4000bf70:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000bf74:	eb000c96 	bl	4000f1d4 <_tx_thread_system_resume>
4000bf78:	e5940014 	ldr	r0, [r4, #20]
4000bf7c:	e2400001 	sub	r0, r0, #1
4000bf80:	e5840014 	str	r0, [r4, #20]
4000bf84:	e5940014 	ldr	r0, [r4, #20]
4000bf88:	e3500000 	cmp	r0, #0
4000bf8c:	1affffe4 	bne	4000bf24 <_tx_event_flags_delete+0x184>
4000bf90:	e10f5000 	mrs	r5, CPSR
4000bf94:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf98:	e121f006 	msr	CPSR_c, r6
4000bf9c:	e59f0044 	ldr	r0, [pc, #68]	; 4000bfe8 <_tx_event_flags_delete+0x248>
4000bfa0:	e5900000 	ldr	r0, [r0]
4000bfa4:	e2400001 	sub	r0, r0, #1
4000bfa8:	e59f1038 	ldr	r1, [pc, #56]	; 4000bfe8 <_tx_event_flags_delete+0x248>
4000bfac:	e5810000 	str	r0, [r1]
4000bfb0:	e121f005 	msr	CPSR_c, r5
4000bfb4:	eb000c5a 	bl	4000f124 <_tx_thread_system_preempt_check>
4000bfb8:	e3a00000 	mov	r0, #0
4000bfbc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000bfc0:	40030ea4 	.word	0x40030ea4
4000bfc4:	40030ea8 	.word	0x40030ea8
4000bfc8:	40030e30 	.word	0x40030e30
4000bfcc:	40030e38 	.word	0x40030e38
4000bfd0:	f0f0f0f0 	.word	0xf0f0f0f0
4000bfd4:	40030ea0 	.word	0x40030ea0
4000bfd8:	40030e9c 	.word	0x40030e9c
4000bfdc:	40030e90 	.word	0x40030e90
4000bfe0:	40030ec0 	.word	0x40030ec0
4000bfe4:	40030ebc 	.word	0x40030ebc
4000bfe8:	40030e54 	.word	0x40030e54

4000bfec <_tx_event_flags_get>:
4000bfec:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000bff0:	e1a04000 	mov	r4, r0
4000bff4:	e1a05001 	mov	r5, r1
4000bff8:	e1a06002 	mov	r6, r2
4000bffc:	e1a07003 	mov	r7, r3
4000c000:	e10f8000 	mrs	r8, CPSR
4000c004:	e3880080 	orr	r0, r8, #128	; 0x80
4000c008:	e58d0004 	str	r0, [sp, #4]
4000c00c:	e59d0004 	ldr	r0, [sp, #4]
4000c010:	e121f000 	msr	CPSR_c, r0
4000c014:	e59f1278 	ldr	r1, [pc, #632]	; 4000c294 <_tx_event_flags_get+0x2a8>
4000c018:	e5910000 	ldr	r0, [r1]
4000c01c:	e3500000 	cmp	r0, #0
4000c020:	0a000031 	beq	4000c0ec <_tx_event_flags_get+0x100>
4000c024:	e59f126c 	ldr	r1, [pc, #620]	; 4000c298 <_tx_event_flags_get+0x2ac>
4000c028:	e5911000 	ldr	r1, [r1]
4000c02c:	e2811001 	add	r1, r1, #1
4000c030:	e59f2260 	ldr	r2, [pc, #608]	; 4000c298 <_tx_event_flags_get+0x2ac>
4000c034:	e5821000 	str	r1, [r2]
4000c038:	e580100c 	str	r1, [r0, #12]
4000c03c:	e59f1258 	ldr	r1, [pc, #600]	; 4000c29c <_tx_event_flags_get+0x2b0>
4000c040:	e5911000 	ldr	r1, [r1]
4000c044:	e3510000 	cmp	r1, #0
4000c048:	1a000006 	bne	4000c068 <_tx_event_flags_get+0x7c>
4000c04c:	e59f124c 	ldr	r1, [pc, #588]	; 4000c2a0 <_tx_event_flags_get+0x2b4>
4000c050:	e5911000 	ldr	r1, [r1]
4000c054:	e5801000 	str	r1, [r0]
4000c058:	e5901000 	ldr	r1, [r0]
4000c05c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c060:	e5801004 	str	r1, [r0, #4]
4000c064:	ea00000d 	b	4000c0a0 <_tx_event_flags_get+0xb4>
4000c068:	e59f122c 	ldr	r1, [pc, #556]	; 4000c29c <_tx_event_flags_get+0x2b0>
4000c06c:	e5911000 	ldr	r1, [r1]
4000c070:	e59f222c 	ldr	r2, [pc, #556]	; 4000c2a4 <_tx_event_flags_get+0x2b8>
4000c074:	e1510002 	cmp	r1, r2
4000c078:	2a000004 	bcs	4000c090 <_tx_event_flags_get+0xa4>
4000c07c:	e3e01000 	mvn	r1, #0
4000c080:	e5801000 	str	r1, [r0]
4000c084:	e3a01000 	mov	r1, #0
4000c088:	e5801004 	str	r1, [r0, #4]
4000c08c:	ea000003 	b	4000c0a0 <_tx_event_flags_get+0xb4>
4000c090:	e59f120c 	ldr	r1, [pc, #524]	; 4000c2a4 <_tx_event_flags_get+0x2b8>
4000c094:	e5801000 	str	r1, [r0]
4000c098:	e3a01000 	mov	r1, #0
4000c09c:	e5801004 	str	r1, [r0, #4]
4000c0a0:	e3a01020 	mov	r1, #32
4000c0a4:	e5801008 	str	r1, [r0, #8]
4000c0a8:	e5804010 	str	r4, [r0, #16]
4000c0ac:	e5805014 	str	r5, [r0, #20]
4000c0b0:	e5941008 	ldr	r1, [r4, #8]
4000c0b4:	e5801018 	str	r1, [r0, #24]
4000c0b8:	e580601c 	str	r6, [r0, #28]
4000c0bc:	e2800020 	add	r0, r0, #32
4000c0c0:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c2a8 <_tx_event_flags_get+0x2bc>
4000c0c4:	e5911000 	ldr	r1, [r1]
4000c0c8:	e1500001 	cmp	r0, r1
4000c0cc:	3a000001 	bcc	4000c0d8 <_tx_event_flags_get+0xec>
4000c0d0:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c2ac <_tx_event_flags_get+0x2c0>
4000c0d4:	e5910000 	ldr	r0, [r1]
4000c0d8:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c294 <_tx_event_flags_get+0x2a8>
4000c0dc:	e5810000 	str	r0, [r1]
4000c0e0:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c2b0 <_tx_event_flags_get+0x2c4>
4000c0e4:	e5911000 	ldr	r1, [r1]
4000c0e8:	e5810020 	str	r0, [r1, #32]
4000c0ec:	e594a008 	ldr	sl, [r4, #8]
4000c0f0:	e594b020 	ldr	fp, [r4, #32]
4000c0f4:	e35b0000 	cmp	fp, #0
4000c0f8:	0a000000 	beq	4000c100 <_tx_event_flags_get+0x114>
4000c0fc:	e1caa00b 	bic	sl, sl, fp
4000c100:	e3160002 	tst	r6, #2
4000c104:	0a000006 	beq	4000c124 <_tx_event_flags_get+0x138>
4000c108:	e00a0005 	and	r0, sl, r5
4000c10c:	e1500005 	cmp	r0, r5
4000c110:	1a000001 	bne	4000c11c <_tx_event_flags_get+0x130>
4000c114:	e3a09000 	mov	r9, #0
4000c118:	ea000006 	b	4000c138 <_tx_event_flags_get+0x14c>
4000c11c:	e3a09007 	mov	r9, #7
4000c120:	ea000004 	b	4000c138 <_tx_event_flags_get+0x14c>
4000c124:	e11a0005 	tst	sl, r5
4000c128:	0a000001 	beq	4000c134 <_tx_event_flags_get+0x148>
4000c12c:	e3a09000 	mov	r9, #0
4000c130:	ea000000 	b	4000c138 <_tx_event_flags_get+0x14c>
4000c134:	e3a09007 	mov	r9, #7
4000c138:	e3590000 	cmp	r9, #0
4000c13c:	1a000010 	bne	4000c184 <_tx_event_flags_get+0x198>
4000c140:	e587a000 	str	sl, [r7]
4000c144:	e3160001 	tst	r6, #1
4000c148:	0a00004e 	beq	4000c288 <_tx_event_flags_get+0x29c>
4000c14c:	e5940014 	ldr	r0, [r4, #20]
4000c150:	e3500000 	cmp	r0, #0
4000c154:	0a000006 	beq	4000c174 <_tx_event_flags_get+0x188>
4000c158:	e5940010 	ldr	r0, [r4, #16]
4000c15c:	e3500000 	cmp	r0, #0
4000c160:	1a000003 	bne	4000c174 <_tx_event_flags_get+0x188>
4000c164:	e5940020 	ldr	r0, [r4, #32]
4000c168:	e1800005 	orr	r0, r0, r5
4000c16c:	e5840020 	str	r0, [r4, #32]
4000c170:	ea000044 	b	4000c288 <_tx_event_flags_get+0x29c>
4000c174:	e5940008 	ldr	r0, [r4, #8]
4000c178:	e1c00005 	bic	r0, r0, r5
4000c17c:	e5840008 	str	r0, [r4, #8]
4000c180:	ea000040 	b	4000c288 <_tx_event_flags_get+0x29c>
4000c184:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c188:	e3500000 	cmp	r0, #0
4000c18c:	0a00003c 	beq	4000c284 <_tx_event_flags_get+0x298>
4000c190:	e59f0108 	ldr	r0, [pc, #264]	; 4000c2a0 <_tx_event_flags_get+0x2b4>
4000c194:	e5900000 	ldr	r0, [r0]
4000c198:	e58d0000 	str	r0, [sp]
4000c19c:	e59f1110 	ldr	r1, [pc, #272]	; 4000c2b4 <_tx_event_flags_get+0x2c8>
4000c1a0:	e59d0000 	ldr	r0, [sp]
4000c1a4:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c1a8:	e59d0000 	ldr	r0, [sp]
4000c1ac:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c1b0:	e59d0000 	ldr	r0, [sp]
4000c1b4:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c1b8:	e59d0000 	ldr	r0, [sp]
4000c1bc:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c1c0:	e59d0000 	ldr	r0, [sp]
4000c1c4:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c1c8:	e5940010 	ldr	r0, [r4, #16]
4000c1cc:	e3500000 	cmp	r0, #0
4000c1d0:	0a00000e 	beq	4000c210 <_tx_event_flags_get+0x224>
4000c1d4:	e5941010 	ldr	r1, [r4, #16]
4000c1d8:	e59d0000 	ldr	r0, [sp]
4000c1dc:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c1e0:	e5940010 	ldr	r0, [r4, #16]
4000c1e4:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c1e8:	e59d0000 	ldr	r0, [sp]
4000c1ec:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c1f0:	e59d0000 	ldr	r0, [sp]
4000c1f4:	e5941010 	ldr	r1, [r4, #16]
4000c1f8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c1fc:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c200:	e59d0000 	ldr	r0, [sp]
4000c204:	e5941010 	ldr	r1, [r4, #16]
4000c208:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c20c:	ea000005 	b	4000c228 <_tx_event_flags_get+0x23c>
4000c210:	e59d0000 	ldr	r0, [sp]
4000c214:	e5840010 	str	r0, [r4, #16]
4000c218:	e59d0000 	ldr	r0, [sp]
4000c21c:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c220:	e59d0000 	ldr	r0, [sp]
4000c224:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c228:	e5940014 	ldr	r0, [r4, #20]
4000c22c:	e2800001 	add	r0, r0, #1
4000c230:	e5840014 	str	r0, [r4, #20]
4000c234:	e3a00007 	mov	r0, #7
4000c238:	e59d1000 	ldr	r1, [sp]
4000c23c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c240:	e3a01001 	mov	r1, #1
4000c244:	e59d0000 	ldr	r0, [sp]
4000c248:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c24c:	e59d0000 	ldr	r0, [sp]
4000c250:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c254:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c258:	e59f0058 	ldr	r0, [pc, #88]	; 4000c2b8 <_tx_event_flags_get+0x2cc>
4000c25c:	e5900000 	ldr	r0, [r0]
4000c260:	e2800001 	add	r0, r0, #1
4000c264:	e59f104c 	ldr	r1, [pc, #76]	; 4000c2b8 <_tx_event_flags_get+0x2cc>
4000c268:	e5810000 	str	r0, [r1]
4000c26c:	e121f008 	msr	CPSR_c, r8
4000c270:	e59d0000 	ldr	r0, [sp]
4000c274:	ebfff22f 	bl	40008b38 <_tx_thread_system_suspend>
4000c278:	e59d0000 	ldr	r0, [sp]
4000c27c:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c280:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c284:	e3a09007 	mov	r9, #7
4000c288:	e121f008 	msr	CPSR_c, r8
4000c28c:	e1a00009 	mov	r0, r9
4000c290:	eafffffa 	b	4000c280 <_tx_event_flags_get+0x294>
4000c294:	40030ea4 	.word	0x40030ea4
4000c298:	40030ea8 	.word	0x40030ea8
4000c29c:	40030e30 	.word	0x40030e30
4000c2a0:	40030e38 	.word	0x40030e38
4000c2a4:	f0f0f0f0 	.word	0xf0f0f0f0
4000c2a8:	40030ea0 	.word	0x40030ea0
4000c2ac:	40030e9c 	.word	0x40030e9c
4000c2b0:	40030e90 	.word	0x40030e90
4000c2b4:	400101e4 	.word	0x400101e4
4000c2b8:	40030e54 	.word	0x40030e54

4000c2bc <_tx_event_flags_set>:
4000c2bc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c2c0:	e24dd01c 	sub	sp, sp, #28
4000c2c4:	e1a04000 	mov	r4, r0
4000c2c8:	e1a05001 	mov	r5, r1
4000c2cc:	e1a06002 	mov	r6, r2
4000c2d0:	e10f7000 	mrs	r7, CPSR
4000c2d4:	e3870080 	orr	r0, r7, #128	; 0x80
4000c2d8:	e58d0018 	str	r0, [sp, #24]
4000c2dc:	e59d0018 	ldr	r0, [sp, #24]
4000c2e0:	e121f000 	msr	CPSR_c, r0
4000c2e4:	e59f1594 	ldr	r1, [pc, #1428]	; 4000c880 <_tx_event_flags_set+0x5c4>
4000c2e8:	e5910000 	ldr	r0, [r1]
4000c2ec:	e3500000 	cmp	r0, #0
4000c2f0:	0a000031 	beq	4000c3bc <_tx_event_flags_set+0x100>
4000c2f4:	e59f1588 	ldr	r1, [pc, #1416]	; 4000c884 <_tx_event_flags_set+0x5c8>
4000c2f8:	e5911000 	ldr	r1, [r1]
4000c2fc:	e2811001 	add	r1, r1, #1
4000c300:	e59f257c 	ldr	r2, [pc, #1404]	; 4000c884 <_tx_event_flags_set+0x5c8>
4000c304:	e5821000 	str	r1, [r2]
4000c308:	e580100c 	str	r1, [r0, #12]
4000c30c:	e59f1574 	ldr	r1, [pc, #1396]	; 4000c888 <_tx_event_flags_set+0x5cc>
4000c310:	e5911000 	ldr	r1, [r1]
4000c314:	e3510000 	cmp	r1, #0
4000c318:	1a000006 	bne	4000c338 <_tx_event_flags_set+0x7c>
4000c31c:	e59f1568 	ldr	r1, [pc, #1384]	; 4000c88c <_tx_event_flags_set+0x5d0>
4000c320:	e5911000 	ldr	r1, [r1]
4000c324:	e5801000 	str	r1, [r0]
4000c328:	e5901000 	ldr	r1, [r0]
4000c32c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c330:	e5801004 	str	r1, [r0, #4]
4000c334:	ea00000d 	b	4000c370 <_tx_event_flags_set+0xb4>
4000c338:	e59f1548 	ldr	r1, [pc, #1352]	; 4000c888 <_tx_event_flags_set+0x5cc>
4000c33c:	e5911000 	ldr	r1, [r1]
4000c340:	e59f2548 	ldr	r2, [pc, #1352]	; 4000c890 <_tx_event_flags_set+0x5d4>
4000c344:	e1510002 	cmp	r1, r2
4000c348:	2a000004 	bcs	4000c360 <_tx_event_flags_set+0xa4>
4000c34c:	e3e01000 	mvn	r1, #0
4000c350:	e5801000 	str	r1, [r0]
4000c354:	e3a01000 	mov	r1, #0
4000c358:	e5801004 	str	r1, [r0, #4]
4000c35c:	ea000003 	b	4000c370 <_tx_event_flags_set+0xb4>
4000c360:	e59f1528 	ldr	r1, [pc, #1320]	; 4000c890 <_tx_event_flags_set+0x5d4>
4000c364:	e5801000 	str	r1, [r0]
4000c368:	e3a01000 	mov	r1, #0
4000c36c:	e5801004 	str	r1, [r0, #4]
4000c370:	e3a01024 	mov	r1, #36	; 0x24
4000c374:	e5801008 	str	r1, [r0, #8]
4000c378:	e5804010 	str	r4, [r0, #16]
4000c37c:	e5805014 	str	r5, [r0, #20]
4000c380:	e5806018 	str	r6, [r0, #24]
4000c384:	e5941014 	ldr	r1, [r4, #20]
4000c388:	e580101c 	str	r1, [r0, #28]
4000c38c:	e2800020 	add	r0, r0, #32
4000c390:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000c894 <_tx_event_flags_set+0x5d8>
4000c394:	e5911000 	ldr	r1, [r1]
4000c398:	e1500001 	cmp	r0, r1
4000c39c:	3a000001 	bcc	4000c3a8 <_tx_event_flags_set+0xec>
4000c3a0:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000c898 <_tx_event_flags_set+0x5dc>
4000c3a4:	e5910000 	ldr	r0, [r1]
4000c3a8:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000c880 <_tx_event_flags_set+0x5c4>
4000c3ac:	e5810000 	str	r0, [r1]
4000c3b0:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000c89c <_tx_event_flags_set+0x5e0>
4000c3b4:	e5911000 	ldr	r1, [r1]
4000c3b8:	e5810020 	str	r0, [r1, #32]
4000c3bc:	e3160002 	tst	r6, #2
4000c3c0:	0a000011 	beq	4000c40c <_tx_event_flags_set+0x150>
4000c3c4:	e5940014 	ldr	r0, [r4, #20]
4000c3c8:	e3500000 	cmp	r0, #0
4000c3cc:	0a000007 	beq	4000c3f0 <_tx_event_flags_set+0x134>
4000c3d0:	e5940010 	ldr	r0, [r4, #16]
4000c3d4:	e3500000 	cmp	r0, #0
4000c3d8:	1a000004 	bne	4000c3f0 <_tx_event_flags_set+0x134>
4000c3dc:	e1e01005 	mvn	r1, r5
4000c3e0:	e5940020 	ldr	r0, [r4, #32]
4000c3e4:	e1800001 	orr	r0, r0, r1
4000c3e8:	e5840020 	str	r0, [r4, #32]
4000c3ec:	ea000002 	b	4000c3fc <_tx_event_flags_set+0x140>
4000c3f0:	e5940008 	ldr	r0, [r4, #8]
4000c3f4:	e0000005 	and	r0, r0, r5
4000c3f8:	e5840008 	str	r0, [r4, #8]
4000c3fc:	e121f007 	msr	CPSR_c, r7
4000c400:	e3a00000 	mov	r0, #0
4000c404:	e28dd01c 	add	sp, sp, #28
4000c408:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c40c:	e5940008 	ldr	r0, [r4, #8]
4000c410:	e1800005 	orr	r0, r0, r5
4000c414:	e5840008 	str	r0, [r4, #8]
4000c418:	e5940020 	ldr	r0, [r4, #32]
4000c41c:	e3500000 	cmp	r0, #0
4000c420:	0a000002 	beq	4000c430 <_tx_event_flags_set+0x174>
4000c424:	e5940020 	ldr	r0, [r4, #32]
4000c428:	e1c00005 	bic	r0, r0, r5
4000c42c:	e5840020 	str	r0, [r4, #32]
4000c430:	e5940010 	ldr	r0, [r4, #16]
4000c434:	e3500000 	cmp	r0, #0
4000c438:	0a000102 	beq	4000c848 <_tx_event_flags_set+0x58c>
4000c43c:	e5940014 	ldr	r0, [r4, #20]
4000c440:	e3500001 	cmp	r0, #1
4000c444:	1a000048 	bne	4000c56c <_tx_event_flags_set+0x2b0>
4000c448:	e5940010 	ldr	r0, [r4, #16]
4000c44c:	e58d0014 	str	r0, [sp, #20]
4000c450:	e59d0014 	ldr	r0, [sp, #20]
4000c454:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c458:	e3100002 	tst	r0, #2
4000c45c:	0a00000b 	beq	4000c490 <_tx_event_flags_set+0x1d4>
4000c460:	e5940008 	ldr	r0, [r4, #8]
4000c464:	e59d1014 	ldr	r1, [sp, #20]
4000c468:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c46c:	e0000001 	and	r0, r0, r1
4000c470:	e59d1014 	ldr	r1, [sp, #20]
4000c474:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c478:	e1500001 	cmp	r0, r1
4000c47c:	1a000001 	bne	4000c488 <_tx_event_flags_set+0x1cc>
4000c480:	e3a08000 	mov	r8, #0
4000c484:	ea000009 	b	4000c4b0 <_tx_event_flags_set+0x1f4>
4000c488:	e3a08007 	mov	r8, #7
4000c48c:	ea000007 	b	4000c4b0 <_tx_event_flags_set+0x1f4>
4000c490:	e5940008 	ldr	r0, [r4, #8]
4000c494:	e59d1014 	ldr	r1, [sp, #20]
4000c498:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c49c:	e1100001 	tst	r0, r1
4000c4a0:	0a000001 	beq	4000c4ac <_tx_event_flags_set+0x1f0>
4000c4a4:	e3a08000 	mov	r8, #0
4000c4a8:	ea000000 	b	4000c4b0 <_tx_event_flags_set+0x1f4>
4000c4ac:	e3a08007 	mov	r8, #7
4000c4b0:	e3580000 	cmp	r8, #0
4000c4b4:	1a000024 	bne	4000c54c <_tx_event_flags_set+0x290>
4000c4b8:	e5941008 	ldr	r1, [r4, #8]
4000c4bc:	e59d0014 	ldr	r0, [sp, #20]
4000c4c0:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c4c4:	e5801000 	str	r1, [r0]
4000c4c8:	e59d0014 	ldr	r0, [sp, #20]
4000c4cc:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c4d0:	e3100001 	tst	r0, #1
4000c4d4:	0a000004 	beq	4000c4ec <_tx_event_flags_set+0x230>
4000c4d8:	e5940008 	ldr	r0, [r4, #8]
4000c4dc:	e59d1014 	ldr	r1, [sp, #20]
4000c4e0:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c4e4:	e1c00001 	bic	r0, r0, r1
4000c4e8:	e5840008 	str	r0, [r4, #8]
4000c4ec:	e3a00000 	mov	r0, #0
4000c4f0:	e5840010 	str	r0, [r4, #16]
4000c4f4:	e5840014 	str	r0, [r4, #20]
4000c4f8:	e3a01000 	mov	r1, #0
4000c4fc:	e59d0014 	ldr	r0, [sp, #20]
4000c500:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c504:	e59f0394 	ldr	r0, [pc, #916]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c508:	e5900000 	ldr	r0, [r0]
4000c50c:	e2800001 	add	r0, r0, #1
4000c510:	e59f1388 	ldr	r1, [pc, #904]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c514:	e5810000 	str	r0, [r1]
4000c518:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c51c:	e121f007 	msr	CPSR_c, r7
4000c520:	e35b0000 	cmp	fp, #0
4000c524:	0a000001 	beq	4000c530 <_tx_event_flags_set+0x274>
4000c528:	e1a00004 	mov	r0, r4
4000c52c:	e12fff3b 	blx	fp
4000c530:	e3a00000 	mov	r0, #0
4000c534:	e59d1014 	ldr	r1, [sp, #20]
4000c538:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c53c:	e59d0014 	ldr	r0, [sp, #20]
4000c540:	eb000b23 	bl	4000f1d4 <_tx_thread_system_resume>
4000c544:	e3a00000 	mov	r0, #0
4000c548:	eaffffad 	b	4000c404 <_tx_event_flags_set+0x148>
4000c54c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c550:	e121f007 	msr	CPSR_c, r7
4000c554:	e35b0000 	cmp	fp, #0
4000c558:	0a000001 	beq	4000c564 <_tx_event_flags_set+0x2a8>
4000c55c:	e1a00004 	mov	r0, r4
4000c560:	e12fff3b 	blx	fp
4000c564:	e3a00000 	mov	r0, #0
4000c568:	eaffffa5 	b	4000c404 <_tx_event_flags_set+0x148>
4000c56c:	e5940010 	ldr	r0, [r4, #16]
4000c570:	e58d0004 	str	r0, [sp, #4]
4000c574:	e59d0004 	ldr	r0, [sp, #4]
4000c578:	e58d0014 	str	r0, [sp, #20]
4000c57c:	e3a00000 	mov	r0, #0
4000c580:	e5840010 	str	r0, [r4, #16]
4000c584:	e58d000c 	str	r0, [sp, #12]
4000c588:	e58d0008 	str	r0, [sp, #8]
4000c58c:	e5940014 	ldr	r0, [r4, #20]
4000c590:	e58d0000 	str	r0, [sp]
4000c594:	e5949008 	ldr	r9, [r4, #8]
4000c598:	e59f0300 	ldr	r0, [pc, #768]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c59c:	e5900000 	ldr	r0, [r0]
4000c5a0:	e2800001 	add	r0, r0, #1
4000c5a4:	e59f12f4 	ldr	r1, [pc, #756]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c5a8:	e5810000 	str	r0, [r1]
4000c5ac:	e1a00000 	nop			; (mov r0, r0)
4000c5b0:	e121f007 	msr	CPSR_c, r7
4000c5b4:	e10f7000 	mrs	r7, CPSR
4000c5b8:	e3870080 	orr	r0, r7, #128	; 0x80
4000c5bc:	e58d0018 	str	r0, [sp, #24]
4000c5c0:	e59d0018 	ldr	r0, [sp, #24]
4000c5c4:	e121f000 	msr	CPSR_c, r0
4000c5c8:	e594000c 	ldr	r0, [r4, #12]
4000c5cc:	e3500000 	cmp	r0, #0
4000c5d0:	0a00000b 	beq	4000c604 <_tx_event_flags_set+0x348>
4000c5d4:	e3a00000 	mov	r0, #0
4000c5d8:	e584000c 	str	r0, [r4, #12]
4000c5dc:	e59d0004 	ldr	r0, [sp, #4]
4000c5e0:	e58d0014 	str	r0, [sp, #20]
4000c5e4:	e5940014 	ldr	r0, [r4, #20]
4000c5e8:	e58d0000 	str	r0, [sp]
4000c5ec:	e5940008 	ldr	r0, [r4, #8]
4000c5f0:	e1899000 	orr	r9, r9, r0
4000c5f4:	e59d0014 	ldr	r0, [sp, #20]
4000c5f8:	e3500000 	cmp	r0, #0
4000c5fc:	1a000000 	bne	4000c604 <_tx_event_flags_set+0x348>
4000c600:	ea00005d 	b	4000c77c <_tx_event_flags_set+0x4c0>
4000c604:	e59d0014 	ldr	r0, [sp, #20]
4000c608:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c60c:	e31a0002 	tst	sl, #2
4000c610:	0a00000a 	beq	4000c640 <_tx_event_flags_set+0x384>
4000c614:	e59d0014 	ldr	r0, [sp, #20]
4000c618:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c61c:	e0000009 	and	r0, r0, r9
4000c620:	e59d1014 	ldr	r1, [sp, #20]
4000c624:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c628:	e1500001 	cmp	r0, r1
4000c62c:	1a000001 	bne	4000c638 <_tx_event_flags_set+0x37c>
4000c630:	e3a08000 	mov	r8, #0
4000c634:	ea000008 	b	4000c65c <_tx_event_flags_set+0x3a0>
4000c638:	e3a08007 	mov	r8, #7
4000c63c:	ea000006 	b	4000c65c <_tx_event_flags_set+0x3a0>
4000c640:	e59d0014 	ldr	r0, [sp, #20]
4000c644:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c648:	e1100009 	tst	r0, r9
4000c64c:	0a000001 	beq	4000c658 <_tx_event_flags_set+0x39c>
4000c650:	e3a08000 	mov	r8, #0
4000c654:	ea000000 	b	4000c65c <_tx_event_flags_set+0x3a0>
4000c658:	e3a08007 	mov	r8, #7
4000c65c:	e59d0014 	ldr	r0, [sp, #20]
4000c660:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c664:	e58d0010 	str	r0, [sp, #16]
4000c668:	e3580000 	cmp	r8, #0
4000c66c:	1a00003c 	bne	4000c764 <_tx_event_flags_set+0x4a8>
4000c670:	e59d0014 	ldr	r0, [sp, #20]
4000c674:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c678:	e5809000 	str	r9, [r0]
4000c67c:	e31a0001 	tst	sl, #1
4000c680:	0a000004 	beq	4000c698 <_tx_event_flags_set+0x3dc>
4000c684:	e5940008 	ldr	r0, [r4, #8]
4000c688:	e59d1014 	ldr	r1, [sp, #20]
4000c68c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c690:	e1c00001 	bic	r0, r0, r1
4000c694:	e5840008 	str	r0, [r4, #8]
4000c698:	e59d0014 	ldr	r0, [sp, #20]
4000c69c:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c6a0:	e1510000 	cmp	r1, r0
4000c6a4:	1a000002 	bne	4000c6b4 <_tx_event_flags_set+0x3f8>
4000c6a8:	e3a00000 	mov	r0, #0
4000c6ac:	e58d0004 	str	r0, [sp, #4]
4000c6b0:	ea000010 	b	4000c6f8 <_tx_event_flags_set+0x43c>
4000c6b4:	e59d0004 	ldr	r0, [sp, #4]
4000c6b8:	e59d1014 	ldr	r1, [sp, #20]
4000c6bc:	e1500001 	cmp	r0, r1
4000c6c0:	1a000002 	bne	4000c6d0 <_tx_event_flags_set+0x414>
4000c6c4:	e59d0014 	ldr	r0, [sp, #20]
4000c6c8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c6cc:	e58d0004 	str	r0, [sp, #4]
4000c6d0:	e59d0014 	ldr	r0, [sp, #20]
4000c6d4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c6d8:	e59d1014 	ldr	r1, [sp, #20]
4000c6dc:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c6e0:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c6e4:	e59d0014 	ldr	r0, [sp, #20]
4000c6e8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c6ec:	e59d1014 	ldr	r1, [sp, #20]
4000c6f0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c6f4:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c6f8:	e5940014 	ldr	r0, [r4, #20]
4000c6fc:	e2400001 	sub	r0, r0, #1
4000c700:	e5840014 	str	r0, [r4, #20]
4000c704:	e3a00000 	mov	r0, #0
4000c708:	e59d1014 	ldr	r1, [sp, #20]
4000c70c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c710:	e59d1014 	ldr	r1, [sp, #20]
4000c714:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c718:	e59d000c 	ldr	r0, [sp, #12]
4000c71c:	e3500000 	cmp	r0, #0
4000c720:	1a000007 	bne	4000c744 <_tx_event_flags_set+0x488>
4000c724:	e59d0014 	ldr	r0, [sp, #20]
4000c728:	e58d000c 	str	r0, [sp, #12]
4000c72c:	e59d0014 	ldr	r0, [sp, #20]
4000c730:	e58d0008 	str	r0, [sp, #8]
4000c734:	e3a01000 	mov	r1, #0
4000c738:	e59d0014 	ldr	r0, [sp, #20]
4000c73c:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c740:	ea000007 	b	4000c764 <_tx_event_flags_set+0x4a8>
4000c744:	e59d0014 	ldr	r0, [sp, #20]
4000c748:	e59d1008 	ldr	r1, [sp, #8]
4000c74c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c750:	e3a00000 	mov	r0, #0
4000c754:	e59d1014 	ldr	r1, [sp, #20]
4000c758:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c75c:	e59d0014 	ldr	r0, [sp, #20]
4000c760:	e58d0008 	str	r0, [sp, #8]
4000c764:	e59d0010 	ldr	r0, [sp, #16]
4000c768:	e58d0014 	str	r0, [sp, #20]
4000c76c:	e59d0000 	ldr	r0, [sp]
4000c770:	e2500001 	subs	r0, r0, #1
4000c774:	e58d0000 	str	r0, [sp]
4000c778:	1affff8c 	bne	4000c5b0 <_tx_event_flags_set+0x2f4>
4000c77c:	e1a00000 	nop			; (mov r0, r0)
4000c780:	e59d0004 	ldr	r0, [sp, #4]
4000c784:	e5840010 	str	r0, [r4, #16]
4000c788:	e5940020 	ldr	r0, [r4, #32]
4000c78c:	e3500000 	cmp	r0, #0
4000c790:	0a000005 	beq	4000c7ac <_tx_event_flags_set+0x4f0>
4000c794:	e5940008 	ldr	r0, [r4, #8]
4000c798:	e5941020 	ldr	r1, [r4, #32]
4000c79c:	e1c00001 	bic	r0, r0, r1
4000c7a0:	e5840008 	str	r0, [r4, #8]
4000c7a4:	e3a00000 	mov	r0, #0
4000c7a8:	e5840020 	str	r0, [r4, #32]
4000c7ac:	e121f007 	msr	CPSR_c, r7
4000c7b0:	e59d000c 	ldr	r0, [sp, #12]
4000c7b4:	e58d0014 	str	r0, [sp, #20]
4000c7b8:	ea000011 	b	4000c804 <_tx_event_flags_set+0x548>
4000c7bc:	e59d0014 	ldr	r0, [sp, #20]
4000c7c0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c7c4:	e58d0010 	str	r0, [sp, #16]
4000c7c8:	e10f7000 	mrs	r7, CPSR
4000c7cc:	e3870080 	orr	r0, r7, #128	; 0x80
4000c7d0:	e58d0018 	str	r0, [sp, #24]
4000c7d4:	e59d0018 	ldr	r0, [sp, #24]
4000c7d8:	e121f000 	msr	CPSR_c, r0
4000c7dc:	e59f00bc 	ldr	r0, [pc, #188]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c7e0:	e5900000 	ldr	r0, [r0]
4000c7e4:	e2800001 	add	r0, r0, #1
4000c7e8:	e59f10b0 	ldr	r1, [pc, #176]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c7ec:	e5810000 	str	r0, [r1]
4000c7f0:	e121f007 	msr	CPSR_c, r7
4000c7f4:	e59d0014 	ldr	r0, [sp, #20]
4000c7f8:	eb000a75 	bl	4000f1d4 <_tx_thread_system_resume>
4000c7fc:	e59d0010 	ldr	r0, [sp, #16]
4000c800:	e58d0014 	str	r0, [sp, #20]
4000c804:	e59d0014 	ldr	r0, [sp, #20]
4000c808:	e3500000 	cmp	r0, #0
4000c80c:	1affffea 	bne	4000c7bc <_tx_event_flags_set+0x500>
4000c810:	e10f7000 	mrs	r7, CPSR
4000c814:	e3870080 	orr	r0, r7, #128	; 0x80
4000c818:	e58d0018 	str	r0, [sp, #24]
4000c81c:	e59d0018 	ldr	r0, [sp, #24]
4000c820:	e121f000 	msr	CPSR_c, r0
4000c824:	e59f0074 	ldr	r0, [pc, #116]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c828:	e5900000 	ldr	r0, [r0]
4000c82c:	e2400001 	sub	r0, r0, #1
4000c830:	e59f1068 	ldr	r1, [pc, #104]	; 4000c8a0 <_tx_event_flags_set+0x5e4>
4000c834:	e5810000 	str	r0, [r1]
4000c838:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c83c:	e121f007 	msr	CPSR_c, r7
4000c840:	eb000a37 	bl	4000f124 <_tx_thread_system_preempt_check>
4000c844:	ea000007 	b	4000c868 <_tx_event_flags_set+0x5ac>
4000c848:	e5940014 	ldr	r0, [r4, #20]
4000c84c:	e3500000 	cmp	r0, #0
4000c850:	0a000002 	beq	4000c860 <_tx_event_flags_set+0x5a4>
4000c854:	e594000c 	ldr	r0, [r4, #12]
4000c858:	e2800001 	add	r0, r0, #1
4000c85c:	e584000c 	str	r0, [r4, #12]
4000c860:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c864:	e121f007 	msr	CPSR_c, r7
4000c868:	e35b0000 	cmp	fp, #0
4000c86c:	0a000001 	beq	4000c878 <_tx_event_flags_set+0x5bc>
4000c870:	e1a00004 	mov	r0, r4
4000c874:	e12fff3b 	blx	fp
4000c878:	e3a00000 	mov	r0, #0
4000c87c:	eafffee0 	b	4000c404 <_tx_event_flags_set+0x148>
4000c880:	40030ea4 	.word	0x40030ea4
4000c884:	40030ea8 	.word	0x40030ea8
4000c888:	40030e30 	.word	0x40030e30
4000c88c:	40030e38 	.word	0x40030e38
4000c890:	f0f0f0f0 	.word	0xf0f0f0f0
4000c894:	40030ea0 	.word	0x40030ea0
4000c898:	40030e9c 	.word	0x40030e9c
4000c89c:	40030e90 	.word	0x40030e90
4000c8a0:	40030e54 	.word	0x40030e54

4000c8a4 <_tx_initialize_high_level>:
4000c8a4:	e92d4010 	push	{r4, lr}
4000c8a8:	ebfff38a 	bl	400096d8 <_tx_trace_initialize>
4000c8ac:	ebffeff0 	bl	40008874 <_tx_thread_initialize>
4000c8b0:	ebfff26b 	bl	40009264 <_tx_timer_initialize>
4000c8b4:	e3a00000 	mov	r0, #0
4000c8b8:	e59f105c 	ldr	r1, [pc, #92]	; 4000c91c <_tx_initialize_high_level+0x78>
4000c8bc:	e5810000 	str	r0, [r1]
4000c8c0:	e59f1058 	ldr	r1, [pc, #88]	; 4000c920 <_tx_initialize_high_level+0x7c>
4000c8c4:	e5810000 	str	r0, [r1]
4000c8c8:	e59f1054 	ldr	r1, [pc, #84]	; 4000c924 <_tx_initialize_high_level+0x80>
4000c8cc:	e5810000 	str	r0, [r1]
4000c8d0:	e59f1050 	ldr	r1, [pc, #80]	; 4000c928 <_tx_initialize_high_level+0x84>
4000c8d4:	e5810000 	str	r0, [r1]
4000c8d8:	e59f104c 	ldr	r1, [pc, #76]	; 4000c92c <_tx_initialize_high_level+0x88>
4000c8dc:	e5810000 	str	r0, [r1]
4000c8e0:	e59f1048 	ldr	r1, [pc, #72]	; 4000c930 <_tx_initialize_high_level+0x8c>
4000c8e4:	e5810000 	str	r0, [r1]
4000c8e8:	e59f1044 	ldr	r1, [pc, #68]	; 4000c934 <_tx_initialize_high_level+0x90>
4000c8ec:	e5810000 	str	r0, [r1]
4000c8f0:	e59f1040 	ldr	r1, [pc, #64]	; 4000c938 <_tx_initialize_high_level+0x94>
4000c8f4:	e5810000 	str	r0, [r1]
4000c8f8:	e59f103c 	ldr	r1, [pc, #60]	; 4000c93c <_tx_initialize_high_level+0x98>
4000c8fc:	e5810000 	str	r0, [r1]
4000c900:	e59f1038 	ldr	r1, [pc, #56]	; 4000c940 <_tx_initialize_high_level+0x9c>
4000c904:	e5810000 	str	r0, [r1]
4000c908:	e59f1034 	ldr	r1, [pc, #52]	; 4000c944 <_tx_initialize_high_level+0xa0>
4000c90c:	e5810000 	str	r0, [r1]
4000c910:	e59f1030 	ldr	r1, [pc, #48]	; 4000c948 <_tx_initialize_high_level+0xa4>
4000c914:	e5810000 	str	r0, [r1]
4000c918:	e8bd8010 	pop	{r4, pc}
4000c91c:	40030eac 	.word	0x40030eac
4000c920:	40030eb0 	.word	0x40030eb0
4000c924:	40030eb4 	.word	0x40030eb4
4000c928:	40030eb8 	.word	0x40030eb8
4000c92c:	40030ebc 	.word	0x40030ebc
4000c930:	40030ec0 	.word	0x40030ec0
4000c934:	40030ecc 	.word	0x40030ecc
4000c938:	40030ed0 	.word	0x40030ed0
4000c93c:	40030ed4 	.word	0x40030ed4
4000c940:	40030ed8 	.word	0x40030ed8
4000c944:	40030ec4 	.word	0x40030ec4
4000c948:	40030ec8 	.word	0x40030ec8

4000c94c <_tx_mutex_create>:
4000c94c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000c950:	e1a04000 	mov	r4, r0
4000c954:	e1a05001 	mov	r5, r1
4000c958:	e1a06002 	mov	r6, r2
4000c95c:	e3a01038 	mov	r1, #56	; 0x38
4000c960:	e1a00004 	mov	r0, r4
4000c964:	eb001ada 	bl	400134d4 <__aeabi_memclr4>
4000c968:	e5845004 	str	r5, [r4, #4]
4000c96c:	e5846010 	str	r6, [r4, #16]
4000c970:	e10f7000 	mrs	r7, CPSR
4000c974:	e3878080 	orr	r8, r7, #128	; 0x80
4000c978:	e121f008 	msr	CPSR_c, r8
4000c97c:	e59f0174 	ldr	r0, [pc, #372]	; 4000caf8 <_tx_mutex_create+0x1ac>
4000c980:	e5840000 	str	r0, [r4]
4000c984:	e59f0170 	ldr	r0, [pc, #368]	; 4000cafc <_tx_mutex_create+0x1b0>
4000c988:	e5900000 	ldr	r0, [r0]
4000c98c:	e3500000 	cmp	r0, #0
4000c990:	0a00000e 	beq	4000c9d0 <_tx_mutex_create+0x84>
4000c994:	e59f0160 	ldr	r0, [pc, #352]	; 4000cafc <_tx_mutex_create+0x1b0>
4000c998:	e5900000 	ldr	r0, [r0]
4000c99c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000c9a0:	e58d0004 	str	r0, [sp, #4]
4000c9a4:	e59f0150 	ldr	r0, [pc, #336]	; 4000cafc <_tx_mutex_create+0x1b0>
4000c9a8:	e5900000 	ldr	r0, [r0]
4000c9ac:	e5804028 	str	r4, [r0, #40]	; 0x28
4000c9b0:	e59d0004 	ldr	r0, [sp, #4]
4000c9b4:	e5804024 	str	r4, [r0, #36]	; 0x24
4000c9b8:	e59d0004 	ldr	r0, [sp, #4]
4000c9bc:	e5840028 	str	r0, [r4, #40]	; 0x28
4000c9c0:	e59f0134 	ldr	r0, [pc, #308]	; 4000cafc <_tx_mutex_create+0x1b0>
4000c9c4:	e5900000 	ldr	r0, [r0]
4000c9c8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000c9cc:	ea000003 	b	4000c9e0 <_tx_mutex_create+0x94>
4000c9d0:	e59f0124 	ldr	r0, [pc, #292]	; 4000cafc <_tx_mutex_create+0x1b0>
4000c9d4:	e5804000 	str	r4, [r0]
4000c9d8:	e5844024 	str	r4, [r4, #36]	; 0x24
4000c9dc:	e5844028 	str	r4, [r4, #40]	; 0x28
4000c9e0:	e59f0118 	ldr	r0, [pc, #280]	; 4000cb00 <_tx_mutex_create+0x1b4>
4000c9e4:	e5900000 	ldr	r0, [r0]
4000c9e8:	e2800001 	add	r0, r0, #1
4000c9ec:	e59f110c 	ldr	r1, [pc, #268]	; 4000cb00 <_tx_mutex_create+0x1b4>
4000c9f0:	e5810000 	str	r0, [r1]
4000c9f4:	e3a03000 	mov	r3, #0
4000c9f8:	e58d3000 	str	r3, [sp]
4000c9fc:	e1a03006 	mov	r3, r6
4000ca00:	e1a02005 	mov	r2, r5
4000ca04:	e1a01004 	mov	r1, r4
4000ca08:	e3a00005 	mov	r0, #5
4000ca0c:	eb000d46 	bl	4000ff2c <_tx_trace_object_register>
4000ca10:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cb04 <_tx_mutex_create+0x1b8>
4000ca14:	e5910000 	ldr	r0, [r1]
4000ca18:	e3500000 	cmp	r0, #0
4000ca1c:	0a000032 	beq	4000caec <_tx_mutex_create+0x1a0>
4000ca20:	e59f10e0 	ldr	r1, [pc, #224]	; 4000cb08 <_tx_mutex_create+0x1bc>
4000ca24:	e5911000 	ldr	r1, [r1]
4000ca28:	e2811001 	add	r1, r1, #1
4000ca2c:	e59f20d4 	ldr	r2, [pc, #212]	; 4000cb08 <_tx_mutex_create+0x1bc>
4000ca30:	e5821000 	str	r1, [r2]
4000ca34:	e580100c 	str	r1, [r0, #12]
4000ca38:	e59f10cc 	ldr	r1, [pc, #204]	; 4000cb0c <_tx_mutex_create+0x1c0>
4000ca3c:	e5911000 	ldr	r1, [r1]
4000ca40:	e3510000 	cmp	r1, #0
4000ca44:	1a000006 	bne	4000ca64 <_tx_mutex_create+0x118>
4000ca48:	e59f10c0 	ldr	r1, [pc, #192]	; 4000cb10 <_tx_mutex_create+0x1c4>
4000ca4c:	e5911000 	ldr	r1, [r1]
4000ca50:	e5801000 	str	r1, [r0]
4000ca54:	e5901000 	ldr	r1, [r0]
4000ca58:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ca5c:	e5801004 	str	r1, [r0, #4]
4000ca60:	ea00000d 	b	4000ca9c <_tx_mutex_create+0x150>
4000ca64:	e59f10a0 	ldr	r1, [pc, #160]	; 4000cb0c <_tx_mutex_create+0x1c0>
4000ca68:	e5911000 	ldr	r1, [r1]
4000ca6c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000cb14 <_tx_mutex_create+0x1c8>
4000ca70:	e1510002 	cmp	r1, r2
4000ca74:	2a000004 	bcs	4000ca8c <_tx_mutex_create+0x140>
4000ca78:	e3e01000 	mvn	r1, #0
4000ca7c:	e5801000 	str	r1, [r0]
4000ca80:	e3a01000 	mov	r1, #0
4000ca84:	e5801004 	str	r1, [r0, #4]
4000ca88:	ea000003 	b	4000ca9c <_tx_mutex_create+0x150>
4000ca8c:	e59f1080 	ldr	r1, [pc, #128]	; 4000cb14 <_tx_mutex_create+0x1c8>
4000ca90:	e5801000 	str	r1, [r0]
4000ca94:	e3a01000 	mov	r1, #0
4000ca98:	e5801004 	str	r1, [r0, #4]
4000ca9c:	e3a01032 	mov	r1, #50	; 0x32
4000caa0:	e5801008 	str	r1, [r0, #8]
4000caa4:	e5804010 	str	r4, [r0, #16]
4000caa8:	e5806014 	str	r6, [r0, #20]
4000caac:	e28d1004 	add	r1, sp, #4
4000cab0:	e5801018 	str	r1, [r0, #24]
4000cab4:	e3a01000 	mov	r1, #0
4000cab8:	e580101c 	str	r1, [r0, #28]
4000cabc:	e2800020 	add	r0, r0, #32
4000cac0:	e59f1050 	ldr	r1, [pc, #80]	; 4000cb18 <_tx_mutex_create+0x1cc>
4000cac4:	e5911000 	ldr	r1, [r1]
4000cac8:	e1500001 	cmp	r0, r1
4000cacc:	3a000001 	bcc	4000cad8 <_tx_mutex_create+0x18c>
4000cad0:	e59f1044 	ldr	r1, [pc, #68]	; 4000cb1c <_tx_mutex_create+0x1d0>
4000cad4:	e5910000 	ldr	r0, [r1]
4000cad8:	e59f1024 	ldr	r1, [pc, #36]	; 4000cb04 <_tx_mutex_create+0x1b8>
4000cadc:	e5810000 	str	r0, [r1]
4000cae0:	e59f1038 	ldr	r1, [pc, #56]	; 4000cb20 <_tx_mutex_create+0x1d4>
4000cae4:	e5911000 	ldr	r1, [r1]
4000cae8:	e5810020 	str	r0, [r1, #32]
4000caec:	e121f007 	msr	CPSR_c, r7
4000caf0:	e3a00000 	mov	r0, #0
4000caf4:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000caf8:	4d555445 	.word	0x4d555445
4000cafc:	40030ec4 	.word	0x40030ec4
4000cb00:	40030ec8 	.word	0x40030ec8
4000cb04:	40030ea4 	.word	0x40030ea4
4000cb08:	40030ea8 	.word	0x40030ea8
4000cb0c:	40030e30 	.word	0x40030e30
4000cb10:	40030e38 	.word	0x40030e38
4000cb14:	f0f0f0f0 	.word	0xf0f0f0f0
4000cb18:	40030ea0 	.word	0x40030ea0
4000cb1c:	40030e9c 	.word	0x40030e9c
4000cb20:	40030e90 	.word	0x40030e90

4000cb24 <_tx_mutex_delete>:
4000cb24:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cb28:	e1a04000 	mov	r4, r0
4000cb2c:	e10f5000 	mrs	r5, CPSR
4000cb30:	e3856080 	orr	r6, r5, #128	; 0x80
4000cb34:	e121f006 	msr	CPSR_c, r6
4000cb38:	e59f1294 	ldr	r1, [pc, #660]	; 4000cdd4 <_tx_mutex_delete+0x2b0>
4000cb3c:	e5910000 	ldr	r0, [r1]
4000cb40:	e3500000 	cmp	r0, #0
4000cb44:	0a000031 	beq	4000cc10 <_tx_mutex_delete+0xec>
4000cb48:	e59f1288 	ldr	r1, [pc, #648]	; 4000cdd8 <_tx_mutex_delete+0x2b4>
4000cb4c:	e5911000 	ldr	r1, [r1]
4000cb50:	e2811001 	add	r1, r1, #1
4000cb54:	e59f227c 	ldr	r2, [pc, #636]	; 4000cdd8 <_tx_mutex_delete+0x2b4>
4000cb58:	e5821000 	str	r1, [r2]
4000cb5c:	e580100c 	str	r1, [r0, #12]
4000cb60:	e59f1274 	ldr	r1, [pc, #628]	; 4000cddc <_tx_mutex_delete+0x2b8>
4000cb64:	e5911000 	ldr	r1, [r1]
4000cb68:	e3510000 	cmp	r1, #0
4000cb6c:	1a000006 	bne	4000cb8c <_tx_mutex_delete+0x68>
4000cb70:	e59f1268 	ldr	r1, [pc, #616]	; 4000cde0 <_tx_mutex_delete+0x2bc>
4000cb74:	e5911000 	ldr	r1, [r1]
4000cb78:	e5801000 	str	r1, [r0]
4000cb7c:	e5901000 	ldr	r1, [r0]
4000cb80:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cb84:	e5801004 	str	r1, [r0, #4]
4000cb88:	ea00000d 	b	4000cbc4 <_tx_mutex_delete+0xa0>
4000cb8c:	e59f1248 	ldr	r1, [pc, #584]	; 4000cddc <_tx_mutex_delete+0x2b8>
4000cb90:	e5911000 	ldr	r1, [r1]
4000cb94:	e59f2248 	ldr	r2, [pc, #584]	; 4000cde4 <_tx_mutex_delete+0x2c0>
4000cb98:	e1510002 	cmp	r1, r2
4000cb9c:	2a000004 	bcs	4000cbb4 <_tx_mutex_delete+0x90>
4000cba0:	e3e01000 	mvn	r1, #0
4000cba4:	e5801000 	str	r1, [r0]
4000cba8:	e3a01000 	mov	r1, #0
4000cbac:	e5801004 	str	r1, [r0, #4]
4000cbb0:	ea000003 	b	4000cbc4 <_tx_mutex_delete+0xa0>
4000cbb4:	e59f1228 	ldr	r1, [pc, #552]	; 4000cde4 <_tx_mutex_delete+0x2c0>
4000cbb8:	e5801000 	str	r1, [r0]
4000cbbc:	e3a01000 	mov	r1, #0
4000cbc0:	e5801004 	str	r1, [r0, #4]
4000cbc4:	e3a01033 	mov	r1, #51	; 0x33
4000cbc8:	e5801008 	str	r1, [r0, #8]
4000cbcc:	e5804010 	str	r4, [r0, #16]
4000cbd0:	e580d014 	str	sp, [r0, #20]
4000cbd4:	e3a01000 	mov	r1, #0
4000cbd8:	e5801018 	str	r1, [r0, #24]
4000cbdc:	e580101c 	str	r1, [r0, #28]
4000cbe0:	e2800020 	add	r0, r0, #32
4000cbe4:	e59f11fc 	ldr	r1, [pc, #508]	; 4000cde8 <_tx_mutex_delete+0x2c4>
4000cbe8:	e5911000 	ldr	r1, [r1]
4000cbec:	e1500001 	cmp	r0, r1
4000cbf0:	3a000001 	bcc	4000cbfc <_tx_mutex_delete+0xd8>
4000cbf4:	e59f11f0 	ldr	r1, [pc, #496]	; 4000cdec <_tx_mutex_delete+0x2c8>
4000cbf8:	e5910000 	ldr	r0, [r1]
4000cbfc:	e59f11d0 	ldr	r1, [pc, #464]	; 4000cdd4 <_tx_mutex_delete+0x2b0>
4000cc00:	e5810000 	str	r0, [r1]
4000cc04:	e59f11e4 	ldr	r1, [pc, #484]	; 4000cdf0 <_tx_mutex_delete+0x2cc>
4000cc08:	e5911000 	ldr	r1, [r1]
4000cc0c:	e5810020 	str	r0, [r1, #32]
4000cc10:	e1a00004 	mov	r0, r4
4000cc14:	eb000d2f 	bl	400100d8 <_tx_trace_object_unregister>
4000cc18:	e59f01d4 	ldr	r0, [pc, #468]	; 4000cdf4 <_tx_mutex_delete+0x2d0>
4000cc1c:	e5900000 	ldr	r0, [r0]
4000cc20:	e2400001 	sub	r0, r0, #1
4000cc24:	e59f11c8 	ldr	r1, [pc, #456]	; 4000cdf4 <_tx_mutex_delete+0x2d0>
4000cc28:	e5810000 	str	r0, [r1]
4000cc2c:	e3a00000 	mov	r0, #0
4000cc30:	e5840000 	str	r0, [r4]
4000cc34:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc38:	e1500004 	cmp	r0, r4
4000cc3c:	1a000003 	bne	4000cc50 <_tx_mutex_delete+0x12c>
4000cc40:	e3a00000 	mov	r0, #0
4000cc44:	e59f11ac 	ldr	r1, [pc, #428]	; 4000cdf8 <_tx_mutex_delete+0x2d4>
4000cc48:	e5810000 	str	r0, [r1]
4000cc4c:	ea00000c 	b	4000cc84 <_tx_mutex_delete+0x160>
4000cc50:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cc54:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cc58:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cc5c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc60:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cc64:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cc68:	e59f0188 	ldr	r0, [pc, #392]	; 4000cdf8 <_tx_mutex_delete+0x2d4>
4000cc6c:	e5900000 	ldr	r0, [r0]
4000cc70:	e1500004 	cmp	r0, r4
4000cc74:	1a000002 	bne	4000cc84 <_tx_mutex_delete+0x160>
4000cc78:	e59f1178 	ldr	r1, [pc, #376]	; 4000cdf8 <_tx_mutex_delete+0x2d4>
4000cc7c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc80:	e5810000 	str	r0, [r1]
4000cc84:	e594000c 	ldr	r0, [r4, #12]
4000cc88:	e58d0000 	str	r0, [sp]
4000cc8c:	e5940010 	ldr	r0, [r4, #16]
4000cc90:	e3500000 	cmp	r0, #0
4000cc94:	0a00001c 	beq	4000cd0c <_tx_mutex_delete+0x1e8>
4000cc98:	e59d0000 	ldr	r0, [sp]
4000cc9c:	e3500000 	cmp	r0, #0
4000cca0:	0a000019 	beq	4000cd0c <_tx_mutex_delete+0x1e8>
4000cca4:	e59d0000 	ldr	r0, [sp]
4000cca8:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000ccac:	e2400001 	sub	r0, r0, #1
4000ccb0:	e59d1000 	ldr	r1, [sp]
4000ccb4:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000ccb8:	e59d0000 	ldr	r0, [sp]
4000ccbc:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000ccc0:	e3500000 	cmp	r0, #0
4000ccc4:	1a000003 	bne	4000ccd8 <_tx_mutex_delete+0x1b4>
4000ccc8:	e3a00000 	mov	r0, #0
4000cccc:	e59d1000 	ldr	r1, [sp]
4000ccd0:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000ccd4:	ea00000c 	b	4000cd0c <_tx_mutex_delete+0x1e8>
4000ccd8:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000ccdc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000cce0:	e5810034 	str	r0, [r1, #52]	; 0x34
4000cce4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cce8:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000ccec:	e5810030 	str	r0, [r1, #48]	; 0x30
4000ccf0:	e59d0000 	ldr	r0, [sp]
4000ccf4:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000ccf8:	e1500004 	cmp	r0, r4
4000ccfc:	1a000002 	bne	4000cd0c <_tx_mutex_delete+0x1e8>
4000cd00:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cd04:	e59d1000 	ldr	r1, [sp]
4000cd08:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cd0c:	e3a00000 	mov	r0, #0
4000cd10:	e584000c 	str	r0, [r4, #12]
4000cd14:	e59f00e0 	ldr	r0, [pc, #224]	; 4000cdfc <_tx_mutex_delete+0x2d8>
4000cd18:	e5900000 	ldr	r0, [r0]
4000cd1c:	e2800001 	add	r0, r0, #1
4000cd20:	e59f10d4 	ldr	r1, [pc, #212]	; 4000cdfc <_tx_mutex_delete+0x2d8>
4000cd24:	e5810000 	str	r0, [r1]
4000cd28:	e121f005 	msr	CPSR_c, r5
4000cd2c:	e594001c 	ldr	r0, [r4, #28]
4000cd30:	e58d0000 	str	r0, [sp]
4000cd34:	ea000017 	b	4000cd98 <_tx_mutex_delete+0x274>
4000cd38:	e10f5000 	mrs	r5, CPSR
4000cd3c:	e3856080 	orr	r6, r5, #128	; 0x80
4000cd40:	e121f006 	msr	CPSR_c, r6
4000cd44:	e3a00000 	mov	r0, #0
4000cd48:	e59d1000 	ldr	r1, [sp]
4000cd4c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000cd50:	e59f00a4 	ldr	r0, [pc, #164]	; 4000cdfc <_tx_mutex_delete+0x2d8>
4000cd54:	e5900000 	ldr	r0, [r0]
4000cd58:	e2800001 	add	r0, r0, #1
4000cd5c:	e59f1098 	ldr	r1, [pc, #152]	; 4000cdfc <_tx_mutex_delete+0x2d8>
4000cd60:	e5810000 	str	r0, [r1]
4000cd64:	e121f005 	msr	CPSR_c, r5
4000cd68:	e3a00001 	mov	r0, #1
4000cd6c:	e59d1000 	ldr	r1, [sp]
4000cd70:	e5810084 	str	r0, [r1, #132]	; 0x84
4000cd74:	e59d0000 	ldr	r0, [sp]
4000cd78:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cd7c:	e58d0000 	str	r0, [sp]
4000cd80:	e59d1000 	ldr	r1, [sp]
4000cd84:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000cd88:	eb000911 	bl	4000f1d4 <_tx_thread_system_resume>
4000cd8c:	e5940020 	ldr	r0, [r4, #32]
4000cd90:	e2400001 	sub	r0, r0, #1
4000cd94:	e5840020 	str	r0, [r4, #32]
4000cd98:	e5940020 	ldr	r0, [r4, #32]
4000cd9c:	e3500000 	cmp	r0, #0
4000cda0:	1affffe4 	bne	4000cd38 <_tx_mutex_delete+0x214>
4000cda4:	e10f5000 	mrs	r5, CPSR
4000cda8:	e3856080 	orr	r6, r5, #128	; 0x80
4000cdac:	e121f006 	msr	CPSR_c, r6
4000cdb0:	e59f0044 	ldr	r0, [pc, #68]	; 4000cdfc <_tx_mutex_delete+0x2d8>
4000cdb4:	e5900000 	ldr	r0, [r0]
4000cdb8:	e2400001 	sub	r0, r0, #1
4000cdbc:	e59f1038 	ldr	r1, [pc, #56]	; 4000cdfc <_tx_mutex_delete+0x2d8>
4000cdc0:	e5810000 	str	r0, [r1]
4000cdc4:	e121f005 	msr	CPSR_c, r5
4000cdc8:	eb0008d5 	bl	4000f124 <_tx_thread_system_preempt_check>
4000cdcc:	e3a00000 	mov	r0, #0
4000cdd0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000cdd4:	40030ea4 	.word	0x40030ea4
4000cdd8:	40030ea8 	.word	0x40030ea8
4000cddc:	40030e30 	.word	0x40030e30
4000cde0:	40030e38 	.word	0x40030e38
4000cde4:	f0f0f0f0 	.word	0xf0f0f0f0
4000cde8:	40030ea0 	.word	0x40030ea0
4000cdec:	40030e9c 	.word	0x40030e9c
4000cdf0:	40030e90 	.word	0x40030e90
4000cdf4:	40030ec8 	.word	0x40030ec8
4000cdf8:	40030ec4 	.word	0x40030ec4
4000cdfc:	40030e54 	.word	0x40030e54

4000ce00 <_tx_mutex_get>:
4000ce00:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000ce04:	e1a04000 	mov	r4, r0
4000ce08:	e1a05001 	mov	r5, r1
4000ce0c:	e10f6000 	mrs	r6, CPSR
4000ce10:	e3867080 	orr	r7, r6, #128	; 0x80
4000ce14:	e121f007 	msr	CPSR_c, r7
4000ce18:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d0cc <_tx_mutex_get+0x2cc>
4000ce1c:	e5910000 	ldr	r0, [r1]
4000ce20:	e3500000 	cmp	r0, #0
4000ce24:	0a000032 	beq	4000cef4 <_tx_mutex_get+0xf4>
4000ce28:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d0d0 <_tx_mutex_get+0x2d0>
4000ce2c:	e5911000 	ldr	r1, [r1]
4000ce30:	e2811001 	add	r1, r1, #1
4000ce34:	e59f2294 	ldr	r2, [pc, #660]	; 4000d0d0 <_tx_mutex_get+0x2d0>
4000ce38:	e5821000 	str	r1, [r2]
4000ce3c:	e580100c 	str	r1, [r0, #12]
4000ce40:	e59f128c 	ldr	r1, [pc, #652]	; 4000d0d4 <_tx_mutex_get+0x2d4>
4000ce44:	e5911000 	ldr	r1, [r1]
4000ce48:	e3510000 	cmp	r1, #0
4000ce4c:	1a000006 	bne	4000ce6c <_tx_mutex_get+0x6c>
4000ce50:	e59f1280 	ldr	r1, [pc, #640]	; 4000d0d8 <_tx_mutex_get+0x2d8>
4000ce54:	e5911000 	ldr	r1, [r1]
4000ce58:	e5801000 	str	r1, [r0]
4000ce5c:	e5901000 	ldr	r1, [r0]
4000ce60:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ce64:	e5801004 	str	r1, [r0, #4]
4000ce68:	ea00000d 	b	4000cea4 <_tx_mutex_get+0xa4>
4000ce6c:	e59f1260 	ldr	r1, [pc, #608]	; 4000d0d4 <_tx_mutex_get+0x2d4>
4000ce70:	e5911000 	ldr	r1, [r1]
4000ce74:	e59f2260 	ldr	r2, [pc, #608]	; 4000d0dc <_tx_mutex_get+0x2dc>
4000ce78:	e1510002 	cmp	r1, r2
4000ce7c:	2a000004 	bcs	4000ce94 <_tx_mutex_get+0x94>
4000ce80:	e3e01000 	mvn	r1, #0
4000ce84:	e5801000 	str	r1, [r0]
4000ce88:	e3a01000 	mov	r1, #0
4000ce8c:	e5801004 	str	r1, [r0, #4]
4000ce90:	ea000003 	b	4000cea4 <_tx_mutex_get+0xa4>
4000ce94:	e59f1240 	ldr	r1, [pc, #576]	; 4000d0dc <_tx_mutex_get+0x2dc>
4000ce98:	e5801000 	str	r1, [r0]
4000ce9c:	e3a01000 	mov	r1, #0
4000cea0:	e5801004 	str	r1, [r0, #4]
4000cea4:	e3a01034 	mov	r1, #52	; 0x34
4000cea8:	e5801008 	str	r1, [r0, #8]
4000ceac:	e5804010 	str	r4, [r0, #16]
4000ceb0:	e5805014 	str	r5, [r0, #20]
4000ceb4:	e594100c 	ldr	r1, [r4, #12]
4000ceb8:	e5801018 	str	r1, [r0, #24]
4000cebc:	e5941008 	ldr	r1, [r4, #8]
4000cec0:	e580101c 	str	r1, [r0, #28]
4000cec4:	e2800020 	add	r0, r0, #32
4000cec8:	e59f1210 	ldr	r1, [pc, #528]	; 4000d0e0 <_tx_mutex_get+0x2e0>
4000cecc:	e5911000 	ldr	r1, [r1]
4000ced0:	e1500001 	cmp	r0, r1
4000ced4:	3a000001 	bcc	4000cee0 <_tx_mutex_get+0xe0>
4000ced8:	e59f1204 	ldr	r1, [pc, #516]	; 4000d0e4 <_tx_mutex_get+0x2e4>
4000cedc:	e5910000 	ldr	r0, [r1]
4000cee0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d0cc <_tx_mutex_get+0x2cc>
4000cee4:	e5810000 	str	r0, [r1]
4000cee8:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d0e8 <_tx_mutex_get+0x2e8>
4000ceec:	e5911000 	ldr	r1, [r1]
4000cef0:	e5810020 	str	r0, [r1, #32]
4000cef4:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d0d8 <_tx_mutex_get+0x2d8>
4000cef8:	e5909000 	ldr	r9, [r0]
4000cefc:	e5940008 	ldr	r0, [r4, #8]
4000cf00:	e3500000 	cmp	r0, #0
4000cf04:	1a000025 	bne	4000cfa0 <_tx_mutex_get+0x1a0>
4000cf08:	e3a00001 	mov	r0, #1
4000cf0c:	e5840008 	str	r0, [r4, #8]
4000cf10:	e584900c 	str	r9, [r4, #12]
4000cf14:	e5940010 	ldr	r0, [r4, #16]
4000cf18:	e3500000 	cmp	r0, #0
4000cf1c:	0a00001d 	beq	4000cf98 <_tx_mutex_get+0x198>
4000cf20:	e3590000 	cmp	r9, #0
4000cf24:	0a00001b 	beq	4000cf98 <_tx_mutex_get+0x198>
4000cf28:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cf2c:	e5840014 	str	r0, [r4, #20]
4000cf30:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cf34:	e5840018 	str	r0, [r4, #24]
4000cf38:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf3c:	e3500000 	cmp	r0, #0
4000cf40:	0a000008 	beq	4000cf68 <_tx_mutex_get+0x168>
4000cf44:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf48:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000cf4c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf50:	e5804034 	str	r4, [r0, #52]	; 0x34
4000cf54:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000cf58:	e584a034 	str	sl, [r4, #52]	; 0x34
4000cf5c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf60:	e5840030 	str	r0, [r4, #48]	; 0x30
4000cf64:	ea000006 	b	4000cf84 <_tx_mutex_get+0x184>
4000cf68:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000cf6c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000cf70:	e5844034 	str	r4, [r4, #52]	; 0x34
4000cf74:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cf78:	e5890094 	str	r0, [r9, #148]	; 0x94
4000cf7c:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cf80:	e5890098 	str	r0, [r9, #152]	; 0x98
4000cf84:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000cf88:	e2800001 	add	r0, r0, #1
4000cf8c:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000cf90:	e3a00020 	mov	r0, #32
4000cf94:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000cf98:	e3a08000 	mov	r8, #0
4000cf9c:	ea000047 	b	4000d0c0 <_tx_mutex_get+0x2c0>
4000cfa0:	e594000c 	ldr	r0, [r4, #12]
4000cfa4:	e1500009 	cmp	r0, r9
4000cfa8:	1a000004 	bne	4000cfc0 <_tx_mutex_get+0x1c0>
4000cfac:	e5940008 	ldr	r0, [r4, #8]
4000cfb0:	e2800001 	add	r0, r0, #1
4000cfb4:	e5840008 	str	r0, [r4, #8]
4000cfb8:	e3a08000 	mov	r8, #0
4000cfbc:	ea00003f 	b	4000d0c0 <_tx_mutex_get+0x2c0>
4000cfc0:	e3550000 	cmp	r5, #0
4000cfc4:	0a00003c 	beq	4000d0bc <_tx_mutex_get+0x2bc>
4000cfc8:	e59f011c 	ldr	r0, [pc, #284]	; 4000d0ec <_tx_mutex_get+0x2ec>
4000cfcc:	e5890068 	str	r0, [r9, #104]	; 0x68
4000cfd0:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000cfd4:	e594001c 	ldr	r0, [r4, #28]
4000cfd8:	e3500000 	cmp	r0, #0
4000cfdc:	0a00000a 	beq	4000d00c <_tx_mutex_get+0x20c>
4000cfe0:	e594001c 	ldr	r0, [r4, #28]
4000cfe4:	e5890070 	str	r0, [r9, #112]	; 0x70
4000cfe8:	e594001c 	ldr	r0, [r4, #28]
4000cfec:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000cff0:	e5890074 	str	r0, [r9, #116]	; 0x74
4000cff4:	e594001c 	ldr	r0, [r4, #28]
4000cff8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000cffc:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d000:	e594001c 	ldr	r0, [r4, #28]
4000d004:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d008:	ea000002 	b	4000d018 <_tx_mutex_get+0x218>
4000d00c:	e584901c 	str	r9, [r4, #28]
4000d010:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d014:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d018:	e5940020 	ldr	r0, [r4, #32]
4000d01c:	e2800001 	add	r0, r0, #1
4000d020:	e5840020 	str	r0, [r4, #32]
4000d024:	e3a0000d 	mov	r0, #13
4000d028:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d02c:	e3a00001 	mov	r0, #1
4000d030:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d034:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d038:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d0f0 <_tx_mutex_get+0x2f0>
4000d03c:	e5900000 	ldr	r0, [r0]
4000d040:	e2800001 	add	r0, r0, #1
4000d044:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d0f0 <_tx_mutex_get+0x2f0>
4000d048:	e5810000 	str	r0, [r1]
4000d04c:	e121f006 	msr	CPSR_c, r6
4000d050:	e5940010 	ldr	r0, [r4, #16]
4000d054:	e3500000 	cmp	r0, #0
4000d058:	0a000013 	beq	4000d0ac <_tx_mutex_get+0x2ac>
4000d05c:	e594000c 	ldr	r0, [r4, #12]
4000d060:	e3500000 	cmp	r0, #0
4000d064:	0a000010 	beq	4000d0ac <_tx_mutex_get+0x2ac>
4000d068:	e3590000 	cmp	r9, #0
4000d06c:	0a00000e 	beq	4000d0ac <_tx_mutex_get+0x2ac>
4000d070:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d074:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d078:	e1500001 	cmp	r0, r1
4000d07c:	9a000001 	bls	4000d088 <_tx_mutex_get+0x288>
4000d080:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d084:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d088:	e594000c 	ldr	r0, [r4, #12]
4000d08c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d090:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d094:	e1500001 	cmp	r0, r1
4000d098:	9a000003 	bls	4000d0ac <_tx_mutex_get+0x2ac>
4000d09c:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d0a0:	e1a01002 	mov	r1, r2
4000d0a4:	e594000c 	ldr	r0, [r4, #12]
4000d0a8:	eb000011 	bl	4000d0f4 <_tx_mutex_priority_change>
4000d0ac:	e1a00009 	mov	r0, r9
4000d0b0:	ebffeea0 	bl	40008b38 <_tx_thread_system_suspend>
4000d0b4:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d0b8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d0bc:	e3a0801d 	mov	r8, #29
4000d0c0:	e121f006 	msr	CPSR_c, r6
4000d0c4:	e1a00008 	mov	r0, r8
4000d0c8:	eafffffa 	b	4000d0b8 <_tx_mutex_get+0x2b8>
4000d0cc:	40030ea4 	.word	0x40030ea4
4000d0d0:	40030ea8 	.word	0x40030ea8
4000d0d4:	40030e30 	.word	0x40030e30
4000d0d8:	40030e38 	.word	0x40030e38
4000d0dc:	f0f0f0f0 	.word	0xf0f0f0f0
4000d0e0:	40030ea0 	.word	0x40030ea0
4000d0e4:	40030e9c 	.word	0x40030e9c
4000d0e8:	40030e90 	.word	0x40030e90
4000d0ec:	400102b4 	.word	0x400102b4
4000d0f0:	40030e54 	.word	0x40030e54

4000d0f4 <_tx_mutex_priority_change>:
4000d0f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d0f8:	e1a04000 	mov	r4, r0
4000d0fc:	e1a05001 	mov	r5, r1
4000d100:	e1a06002 	mov	r6, r2
4000d104:	e10f7000 	mrs	r7, CPSR
4000d108:	e3878080 	orr	r8, r7, #128	; 0x80
4000d10c:	e121f008 	msr	CPSR_c, r8
4000d110:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d114:	e3500000 	cmp	r0, #0
4000d118:	0a000003 	beq	4000d12c <_tx_mutex_priority_change+0x38>
4000d11c:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d120:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d124:	e121f007 	msr	CPSR_c, r7
4000d128:	ea000011 	b	4000d174 <_tx_mutex_priority_change+0x80>
4000d12c:	e59f0044 	ldr	r0, [pc, #68]	; 4000d178 <_tx_mutex_priority_change+0x84>
4000d130:	e5900000 	ldr	r0, [r0]
4000d134:	e2800002 	add	r0, r0, #2
4000d138:	e59f1038 	ldr	r1, [pc, #56]	; 4000d178 <_tx_mutex_priority_change+0x84>
4000d13c:	e5810000 	str	r0, [r1]
4000d140:	e3a00003 	mov	r0, #3
4000d144:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d148:	e3a00001 	mov	r0, #1
4000d14c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d150:	e3a00000 	mov	r0, #0
4000d154:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d158:	e121f007 	msr	CPSR_c, r7
4000d15c:	e1a00004 	mov	r0, r4
4000d160:	ebffee74 	bl	40008b38 <_tx_thread_system_suspend>
4000d164:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d168:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d16c:	e1a00004 	mov	r0, r4
4000d170:	eb000817 	bl	4000f1d4 <_tx_thread_system_resume>
4000d174:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d178:	40030e54 	.word	0x40030e54

4000d17c <_tx_mutex_put>:
4000d17c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d180:	e1a04000 	mov	r4, r0
4000d184:	e10f5000 	mrs	r5, CPSR
4000d188:	e3856080 	orr	r6, r5, #128	; 0x80
4000d18c:	e121f006 	msr	CPSR_c, r6
4000d190:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d62c <_tx_mutex_put+0x4b0>
4000d194:	e5910000 	ldr	r0, [r1]
4000d198:	e3500000 	cmp	r0, #0
4000d19c:	0a000032 	beq	4000d26c <_tx_mutex_put+0xf0>
4000d1a0:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d630 <_tx_mutex_put+0x4b4>
4000d1a4:	e5911000 	ldr	r1, [r1]
4000d1a8:	e2811001 	add	r1, r1, #1
4000d1ac:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d630 <_tx_mutex_put+0x4b4>
4000d1b0:	e5821000 	str	r1, [r2]
4000d1b4:	e580100c 	str	r1, [r0, #12]
4000d1b8:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d634 <_tx_mutex_put+0x4b8>
4000d1bc:	e5911000 	ldr	r1, [r1]
4000d1c0:	e3510000 	cmp	r1, #0
4000d1c4:	1a000006 	bne	4000d1e4 <_tx_mutex_put+0x68>
4000d1c8:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d638 <_tx_mutex_put+0x4bc>
4000d1cc:	e5911000 	ldr	r1, [r1]
4000d1d0:	e5801000 	str	r1, [r0]
4000d1d4:	e5901000 	ldr	r1, [r0]
4000d1d8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d1dc:	e5801004 	str	r1, [r0, #4]
4000d1e0:	ea00000d 	b	4000d21c <_tx_mutex_put+0xa0>
4000d1e4:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d634 <_tx_mutex_put+0x4b8>
4000d1e8:	e5911000 	ldr	r1, [r1]
4000d1ec:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d63c <_tx_mutex_put+0x4c0>
4000d1f0:	e1510002 	cmp	r1, r2
4000d1f4:	2a000004 	bcs	4000d20c <_tx_mutex_put+0x90>
4000d1f8:	e3e01000 	mvn	r1, #0
4000d1fc:	e5801000 	str	r1, [r0]
4000d200:	e3a01000 	mov	r1, #0
4000d204:	e5801004 	str	r1, [r0, #4]
4000d208:	ea000003 	b	4000d21c <_tx_mutex_put+0xa0>
4000d20c:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d63c <_tx_mutex_put+0x4c0>
4000d210:	e5801000 	str	r1, [r0]
4000d214:	e3a01000 	mov	r1, #0
4000d218:	e5801004 	str	r1, [r0, #4]
4000d21c:	e3a01039 	mov	r1, #57	; 0x39
4000d220:	e5801008 	str	r1, [r0, #8]
4000d224:	e5804010 	str	r4, [r0, #16]
4000d228:	e594100c 	ldr	r1, [r4, #12]
4000d22c:	e5801014 	str	r1, [r0, #20]
4000d230:	e5941008 	ldr	r1, [r4, #8]
4000d234:	e5801018 	str	r1, [r0, #24]
4000d238:	e580d01c 	str	sp, [r0, #28]
4000d23c:	e2800020 	add	r0, r0, #32
4000d240:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d640 <_tx_mutex_put+0x4c4>
4000d244:	e5911000 	ldr	r1, [r1]
4000d248:	e1500001 	cmp	r0, r1
4000d24c:	3a000001 	bcc	4000d258 <_tx_mutex_put+0xdc>
4000d250:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d644 <_tx_mutex_put+0x4c8>
4000d254:	e5910000 	ldr	r0, [r1]
4000d258:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d62c <_tx_mutex_put+0x4b0>
4000d25c:	e5810000 	str	r0, [r1]
4000d260:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d648 <_tx_mutex_put+0x4cc>
4000d264:	e5911000 	ldr	r1, [r1]
4000d268:	e5810020 	str	r0, [r1, #32]
4000d26c:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d638 <_tx_mutex_put+0x4bc>
4000d270:	e5907000 	ldr	r7, [r0]
4000d274:	e5940008 	ldr	r0, [r4, #8]
4000d278:	e3500000 	cmp	r0, #0
4000d27c:	0a0000e7 	beq	4000d620 <_tx_mutex_put+0x4a4>
4000d280:	e594000c 	ldr	r0, [r4, #12]
4000d284:	e1500007 	cmp	r0, r7
4000d288:	1a0000e4 	bne	4000d620 <_tx_mutex_put+0x4a4>
4000d28c:	e5940008 	ldr	r0, [r4, #8]
4000d290:	e2400001 	sub	r0, r0, #1
4000d294:	e5840008 	str	r0, [r4, #8]
4000d298:	e5940008 	ldr	r0, [r4, #8]
4000d29c:	e3500000 	cmp	r0, #0
4000d2a0:	0a000002 	beq	4000d2b0 <_tx_mutex_put+0x134>
4000d2a4:	e121f005 	msr	CPSR_c, r5
4000d2a8:	e3a00000 	mov	r0, #0
4000d2ac:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d2b0:	e3a08000 	mov	r8, #0
4000d2b4:	e3a09000 	mov	r9, #0
4000d2b8:	e3a0a000 	mov	sl, #0
4000d2bc:	e5940010 	ldr	r0, [r4, #16]
4000d2c0:	e3500000 	cmp	r0, #0
4000d2c4:	0a000033 	beq	4000d398 <_tx_mutex_put+0x21c>
4000d2c8:	e3570000 	cmp	r7, #0
4000d2cc:	0a000031 	beq	4000d398 <_tx_mutex_put+0x21c>
4000d2d0:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d2d4:	e2400001 	sub	r0, r0, #1
4000d2d8:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d2dc:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d2e0:	e3500000 	cmp	r0, #0
4000d2e4:	1a000002 	bne	4000d2f4 <_tx_mutex_put+0x178>
4000d2e8:	e3a00000 	mov	r0, #0
4000d2ec:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d2f0:	ea00000a 	b	4000d320 <_tx_mutex_put+0x1a4>
4000d2f4:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d2f8:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d2fc:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d300:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d304:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d308:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d30c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d310:	e1500004 	cmp	r0, r4
4000d314:	1a000001 	bne	4000d320 <_tx_mutex_put+0x1a4>
4000d318:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d31c:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d320:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d324:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d328:	e59f031c 	ldr	r0, [pc, #796]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d32c:	e5900000 	ldr	r0, [r0]
4000d330:	e2800001 	add	r0, r0, #1
4000d334:	e59f1310 	ldr	r1, [pc, #784]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d338:	e5810000 	str	r0, [r1]
4000d33c:	e121f005 	msr	CPSR_c, r5
4000d340:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d344:	ea000009 	b	4000d370 <_tx_mutex_put+0x1f4>
4000d348:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d34c:	e1500009 	cmp	r0, r9
4000d350:	2a000001 	bcs	4000d35c <_tx_mutex_put+0x1e0>
4000d354:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d358:	e1a0a009 	mov	sl, r9
4000d35c:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d360:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d364:	e150000b 	cmp	r0, fp
4000d368:	1a000000 	bne	4000d370 <_tx_mutex_put+0x1f4>
4000d36c:	e3a0b000 	mov	fp, #0
4000d370:	e35b0000 	cmp	fp, #0
4000d374:	1afffff3 	bne	4000d348 <_tx_mutex_put+0x1cc>
4000d378:	e10f5000 	mrs	r5, CPSR
4000d37c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d380:	e121f006 	msr	CPSR_c, r6
4000d384:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d388:	e5900000 	ldr	r0, [r0]
4000d38c:	e2400001 	sub	r0, r0, #1
4000d390:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d394:	e5810000 	str	r0, [r1]
4000d398:	e5940020 	ldr	r0, [r4, #32]
4000d39c:	e3500001 	cmp	r0, #1
4000d3a0:	9a000012 	bls	4000d3f0 <_tx_mutex_put+0x274>
4000d3a4:	e5940010 	ldr	r0, [r4, #16]
4000d3a8:	e3500000 	cmp	r0, #0
4000d3ac:	0a00000f 	beq	4000d3f0 <_tx_mutex_put+0x274>
4000d3b0:	e59f0294 	ldr	r0, [pc, #660]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d3b4:	e5900000 	ldr	r0, [r0]
4000d3b8:	e2800001 	add	r0, r0, #1
4000d3bc:	e59f1288 	ldr	r1, [pc, #648]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d3c0:	e5810000 	str	r0, [r1]
4000d3c4:	e121f005 	msr	CPSR_c, r5
4000d3c8:	e1a00004 	mov	r0, r4
4000d3cc:	eb000bec 	bl	40010384 <_tx_mutex_prioritize>
4000d3d0:	e10f5000 	mrs	r5, CPSR
4000d3d4:	e3856080 	orr	r6, r5, #128	; 0x80
4000d3d8:	e121f006 	msr	CPSR_c, r6
4000d3dc:	e59f0268 	ldr	r0, [pc, #616]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d3e0:	e5900000 	ldr	r0, [r0]
4000d3e4:	e2400001 	sub	r0, r0, #1
4000d3e8:	e59f125c 	ldr	r1, [pc, #604]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d3ec:	e5810000 	str	r0, [r1]
4000d3f0:	e594001c 	ldr	r0, [r4, #28]
4000d3f4:	e3500000 	cmp	r0, #0
4000d3f8:	1a000024 	bne	4000d490 <_tx_mutex_put+0x314>
4000d3fc:	e59f0248 	ldr	r0, [pc, #584]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d400:	e5900000 	ldr	r0, [r0]
4000d404:	e2800001 	add	r0, r0, #1
4000d408:	e59f123c 	ldr	r1, [pc, #572]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d40c:	e5810000 	str	r0, [r1]
4000d410:	e121f005 	msr	CPSR_c, r5
4000d414:	e5940010 	ldr	r0, [r4, #16]
4000d418:	e3500000 	cmp	r0, #0
4000d41c:	0a00000a 	beq	4000d44c <_tx_mutex_put+0x2d0>
4000d420:	e3a00020 	mov	r0, #32
4000d424:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d428:	e3570000 	cmp	r7, #0
4000d42c:	0a000006 	beq	4000d44c <_tx_mutex_put+0x2d0>
4000d430:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d434:	e1500009 	cmp	r0, r9
4000d438:	0a000003 	beq	4000d44c <_tx_mutex_put+0x2d0>
4000d43c:	e1a0200a 	mov	r2, sl
4000d440:	e1a01009 	mov	r1, r9
4000d444:	e594000c 	ldr	r0, [r4, #12]
4000d448:	ebffff29 	bl	4000d0f4 <_tx_mutex_priority_change>
4000d44c:	e10f5000 	mrs	r5, CPSR
4000d450:	e3856080 	orr	r6, r5, #128	; 0x80
4000d454:	e121f006 	msr	CPSR_c, r6
4000d458:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d45c:	e5900000 	ldr	r0, [r0]
4000d460:	e2400001 	sub	r0, r0, #1
4000d464:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d468:	e5810000 	str	r0, [r1]
4000d46c:	e5940008 	ldr	r0, [r4, #8]
4000d470:	e3500000 	cmp	r0, #0
4000d474:	1a000001 	bne	4000d480 <_tx_mutex_put+0x304>
4000d478:	e3a00000 	mov	r0, #0
4000d47c:	e584000c 	str	r0, [r4, #12]
4000d480:	e121f005 	msr	CPSR_c, r5
4000d484:	eb000726 	bl	4000f124 <_tx_thread_system_preempt_check>
4000d488:	e3a00000 	mov	r0, #0
4000d48c:	eaffff86 	b	4000d2ac <_tx_mutex_put+0x130>
4000d490:	e594701c 	ldr	r7, [r4, #28]
4000d494:	e5940010 	ldr	r0, [r4, #16]
4000d498:	e3500000 	cmp	r0, #0
4000d49c:	0a00001f 	beq	4000d520 <_tx_mutex_put+0x3a4>
4000d4a0:	e594800c 	ldr	r8, [r4, #12]
4000d4a4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d4a8:	e5840014 	str	r0, [r4, #20]
4000d4ac:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d4b0:	e5840018 	str	r0, [r4, #24]
4000d4b4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4b8:	e3500000 	cmp	r0, #0
4000d4bc:	0a00000b 	beq	4000d4f0 <_tx_mutex_put+0x374>
4000d4c0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4c4:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d4c8:	e58d0000 	str	r0, [sp]
4000d4cc:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4d0:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d4d4:	e59d0000 	ldr	r0, [sp]
4000d4d8:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d4dc:	e59d0000 	ldr	r0, [sp]
4000d4e0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d4e4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4e8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d4ec:	ea000006 	b	4000d50c <_tx_mutex_put+0x390>
4000d4f0:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d4f4:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d4f8:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d4fc:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d500:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d504:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d508:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d50c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d510:	e2800001 	add	r0, r0, #1
4000d514:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d518:	e3a00020 	mov	r0, #32
4000d51c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d520:	e3a00001 	mov	r0, #1
4000d524:	e5840008 	str	r0, [r4, #8]
4000d528:	e584700c 	str	r7, [r4, #12]
4000d52c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d530:	e1500007 	cmp	r0, r7
4000d534:	1a000002 	bne	4000d544 <_tx_mutex_put+0x3c8>
4000d538:	e3a00000 	mov	r0, #0
4000d53c:	e584001c 	str	r0, [r4, #28]
4000d540:	ea000007 	b	4000d564 <_tx_mutex_put+0x3e8>
4000d544:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d548:	e584001c 	str	r0, [r4, #28]
4000d54c:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d550:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d554:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d558:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d55c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d560:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d564:	e5940020 	ldr	r0, [r4, #32]
4000d568:	e2400001 	sub	r0, r0, #1
4000d56c:	e5840020 	str	r0, [r4, #32]
4000d570:	e3a00000 	mov	r0, #0
4000d574:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d578:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d57c:	e5900000 	ldr	r0, [r0]
4000d580:	e2800001 	add	r0, r0, #1
4000d584:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d64c <_tx_mutex_put+0x4d0>
4000d588:	e5810000 	str	r0, [r1]
4000d58c:	e121f005 	msr	CPSR_c, r5
4000d590:	e3a00000 	mov	r0, #0
4000d594:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d598:	e5940010 	ldr	r0, [r4, #16]
4000d59c:	e3500000 	cmp	r0, #0
4000d5a0:	0a00001a 	beq	4000d610 <_tx_mutex_put+0x494>
4000d5a4:	e5940020 	ldr	r0, [r4, #32]
4000d5a8:	e3500000 	cmp	r0, #0
4000d5ac:	0a00000e 	beq	4000d5ec <_tx_mutex_put+0x470>
4000d5b0:	e5940020 	ldr	r0, [r4, #32]
4000d5b4:	e3500001 	cmp	r0, #1
4000d5b8:	9a000001 	bls	4000d5c4 <_tx_mutex_put+0x448>
4000d5bc:	e1a00004 	mov	r0, r4
4000d5c0:	eb000b6f 	bl	40010384 <_tx_mutex_prioritize>
4000d5c4:	e10f5000 	mrs	r5, CPSR
4000d5c8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d5cc:	e121f006 	msr	CPSR_c, r6
4000d5d0:	e594001c 	ldr	r0, [r4, #28]
4000d5d4:	e3500000 	cmp	r0, #0
4000d5d8:	0a000002 	beq	4000d5e8 <_tx_mutex_put+0x46c>
4000d5dc:	e594001c 	ldr	r0, [r4, #28]
4000d5e0:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d5e4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d5e8:	e121f005 	msr	CPSR_c, r5
4000d5ec:	e3580000 	cmp	r8, #0
4000d5f0:	0a000006 	beq	4000d610 <_tx_mutex_put+0x494>
4000d5f4:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d5f8:	e1500009 	cmp	r0, r9
4000d5fc:	0a000003 	beq	4000d610 <_tx_mutex_put+0x494>
4000d600:	e1a0200a 	mov	r2, sl
4000d604:	e1a01009 	mov	r1, r9
4000d608:	e1a00008 	mov	r0, r8
4000d60c:	ebfffeb8 	bl	4000d0f4 <_tx_mutex_priority_change>
4000d610:	e1a00007 	mov	r0, r7
4000d614:	eb0006ee 	bl	4000f1d4 <_tx_thread_system_resume>
4000d618:	e3a00000 	mov	r0, #0
4000d61c:	eaffff22 	b	4000d2ac <_tx_mutex_put+0x130>
4000d620:	e121f005 	msr	CPSR_c, r5
4000d624:	e3a0001e 	mov	r0, #30
4000d628:	eaffff1f 	b	4000d2ac <_tx_mutex_put+0x130>
4000d62c:	40030ea4 	.word	0x40030ea4
4000d630:	40030ea8 	.word	0x40030ea8
4000d634:	40030e30 	.word	0x40030e30
4000d638:	40030e38 	.word	0x40030e38
4000d63c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d640:	40030ea0 	.word	0x40030ea0
4000d644:	40030e9c 	.word	0x40030e9c
4000d648:	40030e90 	.word	0x40030e90
4000d64c:	40030e54 	.word	0x40030e54

4000d650 <_tx_queue_create>:
4000d650:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d654:	e1a04000 	mov	r4, r0
4000d658:	e1a05001 	mov	r5, r1
4000d65c:	e1a06002 	mov	r6, r2
4000d660:	e1a07003 	mov	r7, r3
4000d664:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d668:	e3a0103c 	mov	r1, #60	; 0x3c
4000d66c:	e1a00004 	mov	r0, r4
4000d670:	eb001797 	bl	400134d4 <__aeabi_memclr4>
4000d674:	e5845004 	str	r5, [r4, #4]
4000d678:	e5846008 	str	r6, [r4, #8]
4000d67c:	e1a01106 	lsl	r1, r6, #2
4000d680:	e1a00008 	mov	r0, r8
4000d684:	eb000ca6 	bl	40010924 <__aeabi_uidivmod>
4000d688:	e1a0b000 	mov	fp, r0
4000d68c:	e000069b 	mul	r0, fp, r6
4000d690:	e58d0004 	str	r0, [sp, #4]
4000d694:	e5847018 	str	r7, [r4, #24]
4000d698:	e59d0004 	ldr	r0, [sp, #4]
4000d69c:	e0870100 	add	r0, r7, r0, lsl #2
4000d6a0:	e584001c 	str	r0, [r4, #28]
4000d6a4:	e5847020 	str	r7, [r4, #32]
4000d6a8:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d6ac:	e584b014 	str	fp, [r4, #20]
4000d6b0:	e584b00c 	str	fp, [r4, #12]
4000d6b4:	e10f9000 	mrs	r9, CPSR
4000d6b8:	e3890080 	orr	r0, r9, #128	; 0x80
4000d6bc:	e58d0008 	str	r0, [sp, #8]
4000d6c0:	e59d0008 	ldr	r0, [sp, #8]
4000d6c4:	e121f000 	msr	CPSR_c, r0
4000d6c8:	e59f0160 	ldr	r0, [pc, #352]	; 4000d830 <_tx_queue_create+0x1e0>
4000d6cc:	e5840000 	str	r0, [r4]
4000d6d0:	e59f015c 	ldr	r0, [pc, #348]	; 4000d834 <_tx_queue_create+0x1e4>
4000d6d4:	e5900000 	ldr	r0, [r0]
4000d6d8:	e3500000 	cmp	r0, #0
4000d6dc:	0a00000b 	beq	4000d710 <_tx_queue_create+0xc0>
4000d6e0:	e59f014c 	ldr	r0, [pc, #332]	; 4000d834 <_tx_queue_create+0x1e4>
4000d6e4:	e5900000 	ldr	r0, [r0]
4000d6e8:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d6ec:	e59f0140 	ldr	r0, [pc, #320]	; 4000d834 <_tx_queue_create+0x1e4>
4000d6f0:	e5900000 	ldr	r0, [r0]
4000d6f4:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d6f8:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d6fc:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d700:	e59f012c 	ldr	r0, [pc, #300]	; 4000d834 <_tx_queue_create+0x1e4>
4000d704:	e5900000 	ldr	r0, [r0]
4000d708:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d70c:	ea000003 	b	4000d720 <_tx_queue_create+0xd0>
4000d710:	e59f011c 	ldr	r0, [pc, #284]	; 4000d834 <_tx_queue_create+0x1e4>
4000d714:	e5804000 	str	r4, [r0]
4000d718:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d71c:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d720:	e59f0110 	ldr	r0, [pc, #272]	; 4000d838 <_tx_queue_create+0x1e8>
4000d724:	e5900000 	ldr	r0, [r0]
4000d728:	e2800001 	add	r0, r0, #1
4000d72c:	e59f1104 	ldr	r1, [pc, #260]	; 4000d838 <_tx_queue_create+0x1e8>
4000d730:	e5810000 	str	r0, [r1]
4000d734:	e3a03000 	mov	r3, #0
4000d738:	e58d3000 	str	r3, [sp]
4000d73c:	e1a03008 	mov	r3, r8
4000d740:	e1a02005 	mov	r2, r5
4000d744:	e1a01004 	mov	r1, r4
4000d748:	e3a00003 	mov	r0, #3
4000d74c:	eb0009f6 	bl	4000ff2c <_tx_trace_object_register>
4000d750:	e59f10e4 	ldr	r1, [pc, #228]	; 4000d83c <_tx_queue_create+0x1ec>
4000d754:	e5910000 	ldr	r0, [r1]
4000d758:	e3500000 	cmp	r0, #0
4000d75c:	0a000030 	beq	4000d824 <_tx_queue_create+0x1d4>
4000d760:	e59f10d8 	ldr	r1, [pc, #216]	; 4000d840 <_tx_queue_create+0x1f0>
4000d764:	e5911000 	ldr	r1, [r1]
4000d768:	e2811001 	add	r1, r1, #1
4000d76c:	e59f20cc 	ldr	r2, [pc, #204]	; 4000d840 <_tx_queue_create+0x1f0>
4000d770:	e5821000 	str	r1, [r2]
4000d774:	e580100c 	str	r1, [r0, #12]
4000d778:	e59f10c4 	ldr	r1, [pc, #196]	; 4000d844 <_tx_queue_create+0x1f4>
4000d77c:	e5911000 	ldr	r1, [r1]
4000d780:	e3510000 	cmp	r1, #0
4000d784:	1a000006 	bne	4000d7a4 <_tx_queue_create+0x154>
4000d788:	e59f10b8 	ldr	r1, [pc, #184]	; 4000d848 <_tx_queue_create+0x1f8>
4000d78c:	e5911000 	ldr	r1, [r1]
4000d790:	e5801000 	str	r1, [r0]
4000d794:	e5901000 	ldr	r1, [r0]
4000d798:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d79c:	e5801004 	str	r1, [r0, #4]
4000d7a0:	ea00000d 	b	4000d7dc <_tx_queue_create+0x18c>
4000d7a4:	e59f1098 	ldr	r1, [pc, #152]	; 4000d844 <_tx_queue_create+0x1f4>
4000d7a8:	e5911000 	ldr	r1, [r1]
4000d7ac:	e59f2098 	ldr	r2, [pc, #152]	; 4000d84c <_tx_queue_create+0x1fc>
4000d7b0:	e1510002 	cmp	r1, r2
4000d7b4:	2a000004 	bcs	4000d7cc <_tx_queue_create+0x17c>
4000d7b8:	e3e01000 	mvn	r1, #0
4000d7bc:	e5801000 	str	r1, [r0]
4000d7c0:	e3a01000 	mov	r1, #0
4000d7c4:	e5801004 	str	r1, [r0, #4]
4000d7c8:	ea000003 	b	4000d7dc <_tx_queue_create+0x18c>
4000d7cc:	e59f1078 	ldr	r1, [pc, #120]	; 4000d84c <_tx_queue_create+0x1fc>
4000d7d0:	e5801000 	str	r1, [r0]
4000d7d4:	e3a01000 	mov	r1, #0
4000d7d8:	e5801004 	str	r1, [r0, #4]
4000d7dc:	e3a0103c 	mov	r1, #60	; 0x3c
4000d7e0:	e5801008 	str	r1, [r0, #8]
4000d7e4:	e5804010 	str	r4, [r0, #16]
4000d7e8:	e5806014 	str	r6, [r0, #20]
4000d7ec:	e5807018 	str	r7, [r0, #24]
4000d7f0:	e580801c 	str	r8, [r0, #28]
4000d7f4:	e2800020 	add	r0, r0, #32
4000d7f8:	e59f1050 	ldr	r1, [pc, #80]	; 4000d850 <_tx_queue_create+0x200>
4000d7fc:	e5911000 	ldr	r1, [r1]
4000d800:	e1500001 	cmp	r0, r1
4000d804:	3a000001 	bcc	4000d810 <_tx_queue_create+0x1c0>
4000d808:	e59f1044 	ldr	r1, [pc, #68]	; 4000d854 <_tx_queue_create+0x204>
4000d80c:	e5910000 	ldr	r0, [r1]
4000d810:	e59f1024 	ldr	r1, [pc, #36]	; 4000d83c <_tx_queue_create+0x1ec>
4000d814:	e5810000 	str	r0, [r1]
4000d818:	e59f1038 	ldr	r1, [pc, #56]	; 4000d858 <_tx_queue_create+0x208>
4000d81c:	e5911000 	ldr	r1, [r1]
4000d820:	e5810020 	str	r0, [r1, #32]
4000d824:	e121f009 	msr	CPSR_c, r9
4000d828:	e3a00000 	mov	r0, #0
4000d82c:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d830:	51554555 	.word	0x51554555
4000d834:	40030eb4 	.word	0x40030eb4
4000d838:	40030eb8 	.word	0x40030eb8
4000d83c:	40030ea4 	.word	0x40030ea4
4000d840:	40030ea8 	.word	0x40030ea8
4000d844:	40030e30 	.word	0x40030e30
4000d848:	40030e38 	.word	0x40030e38
4000d84c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d850:	40030ea0 	.word	0x40030ea0
4000d854:	40030e9c 	.word	0x40030e9c
4000d858:	40030e90 	.word	0x40030e90

4000d85c <_tx_queue_front_send>:
4000d85c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000d860:	e1a04000 	mov	r4, r0
4000d864:	e1a05001 	mov	r5, r1
4000d868:	e1a06002 	mov	r6, r2
4000d86c:	e10f7000 	mrs	r7, CPSR
4000d870:	e3870080 	orr	r0, r7, #128	; 0x80
4000d874:	e58d0004 	str	r0, [sp, #4]
4000d878:	e59d0004 	ldr	r0, [sp, #4]
4000d87c:	e121f000 	msr	CPSR_c, r0
4000d880:	e59f1368 	ldr	r1, [pc, #872]	; 4000dbf0 <_tx_queue_front_send+0x394>
4000d884:	e5910000 	ldr	r0, [r1]
4000d888:	e3500000 	cmp	r0, #0
4000d88c:	0a000031 	beq	4000d958 <_tx_queue_front_send+0xfc>
4000d890:	e59f135c 	ldr	r1, [pc, #860]	; 4000dbf4 <_tx_queue_front_send+0x398>
4000d894:	e5911000 	ldr	r1, [r1]
4000d898:	e2811001 	add	r1, r1, #1
4000d89c:	e59f2350 	ldr	r2, [pc, #848]	; 4000dbf4 <_tx_queue_front_send+0x398>
4000d8a0:	e5821000 	str	r1, [r2]
4000d8a4:	e580100c 	str	r1, [r0, #12]
4000d8a8:	e59f1348 	ldr	r1, [pc, #840]	; 4000dbf8 <_tx_queue_front_send+0x39c>
4000d8ac:	e5911000 	ldr	r1, [r1]
4000d8b0:	e3510000 	cmp	r1, #0
4000d8b4:	1a000006 	bne	4000d8d4 <_tx_queue_front_send+0x78>
4000d8b8:	e59f133c 	ldr	r1, [pc, #828]	; 4000dbfc <_tx_queue_front_send+0x3a0>
4000d8bc:	e5911000 	ldr	r1, [r1]
4000d8c0:	e5801000 	str	r1, [r0]
4000d8c4:	e5901000 	ldr	r1, [r0]
4000d8c8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d8cc:	e5801004 	str	r1, [r0, #4]
4000d8d0:	ea00000d 	b	4000d90c <_tx_queue_front_send+0xb0>
4000d8d4:	e59f131c 	ldr	r1, [pc, #796]	; 4000dbf8 <_tx_queue_front_send+0x39c>
4000d8d8:	e5911000 	ldr	r1, [r1]
4000d8dc:	e59f231c 	ldr	r2, [pc, #796]	; 4000dc00 <_tx_queue_front_send+0x3a4>
4000d8e0:	e1510002 	cmp	r1, r2
4000d8e4:	2a000004 	bcs	4000d8fc <_tx_queue_front_send+0xa0>
4000d8e8:	e3e01000 	mvn	r1, #0
4000d8ec:	e5801000 	str	r1, [r0]
4000d8f0:	e3a01000 	mov	r1, #0
4000d8f4:	e5801004 	str	r1, [r0, #4]
4000d8f8:	ea000003 	b	4000d90c <_tx_queue_front_send+0xb0>
4000d8fc:	e59f12fc 	ldr	r1, [pc, #764]	; 4000dc00 <_tx_queue_front_send+0x3a4>
4000d900:	e5801000 	str	r1, [r0]
4000d904:	e3a01000 	mov	r1, #0
4000d908:	e5801004 	str	r1, [r0, #4]
4000d90c:	e3a0103f 	mov	r1, #63	; 0x3f
4000d910:	e5801008 	str	r1, [r0, #8]
4000d914:	e5804010 	str	r4, [r0, #16]
4000d918:	e5805014 	str	r5, [r0, #20]
4000d91c:	e5806018 	str	r6, [r0, #24]
4000d920:	e5941010 	ldr	r1, [r4, #16]
4000d924:	e580101c 	str	r1, [r0, #28]
4000d928:	e2800020 	add	r0, r0, #32
4000d92c:	e59f12d0 	ldr	r1, [pc, #720]	; 4000dc04 <_tx_queue_front_send+0x3a8>
4000d930:	e5911000 	ldr	r1, [r1]
4000d934:	e1500001 	cmp	r0, r1
4000d938:	3a000001 	bcc	4000d944 <_tx_queue_front_send+0xe8>
4000d93c:	e59f12c4 	ldr	r1, [pc, #708]	; 4000dc08 <_tx_queue_front_send+0x3ac>
4000d940:	e5910000 	ldr	r0, [r1]
4000d944:	e59f12a4 	ldr	r1, [pc, #676]	; 4000dbf0 <_tx_queue_front_send+0x394>
4000d948:	e5810000 	str	r0, [r1]
4000d94c:	e59f12b8 	ldr	r1, [pc, #696]	; 4000dc0c <_tx_queue_front_send+0x3b0>
4000d950:	e5911000 	ldr	r1, [r1]
4000d954:	e5810020 	str	r0, [r1, #32]
4000d958:	e5940014 	ldr	r0, [r4, #20]
4000d95c:	e3500000 	cmp	r0, #0
4000d960:	0a000064 	beq	4000daf8 <_tx_queue_front_send+0x29c>
4000d964:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000d968:	e3500000 	cmp	r0, #0
4000d96c:	1a00002b 	bne	4000da20 <_tx_queue_front_send+0x1c4>
4000d970:	e5940020 	ldr	r0, [r4, #32]
4000d974:	e5941018 	ldr	r1, [r4, #24]
4000d978:	e1500001 	cmp	r0, r1
4000d97c:	1a000004 	bne	4000d994 <_tx_queue_front_send+0x138>
4000d980:	e594001c 	ldr	r0, [r4, #28]
4000d984:	e5941008 	ldr	r1, [r4, #8]
4000d988:	e0400101 	sub	r0, r0, r1, lsl #2
4000d98c:	e5840020 	str	r0, [r4, #32]
4000d990:	ea000003 	b	4000d9a4 <_tx_queue_front_send+0x148>
4000d994:	e5940020 	ldr	r0, [r4, #32]
4000d998:	e5941008 	ldr	r1, [r4, #8]
4000d99c:	e0400101 	sub	r0, r0, r1, lsl #2
4000d9a0:	e5840020 	str	r0, [r4, #32]
4000d9a4:	e5940014 	ldr	r0, [r4, #20]
4000d9a8:	e2400001 	sub	r0, r0, #1
4000d9ac:	e5840014 	str	r0, [r4, #20]
4000d9b0:	e5940010 	ldr	r0, [r4, #16]
4000d9b4:	e2800001 	add	r0, r0, #1
4000d9b8:	e5840010 	str	r0, [r4, #16]
4000d9bc:	e1a09005 	mov	r9, r5
4000d9c0:	e594a020 	ldr	sl, [r4, #32]
4000d9c4:	e594b008 	ldr	fp, [r4, #8]
4000d9c8:	e1a00000 	nop			; (mov r0, r0)
4000d9cc:	e5990000 	ldr	r0, [r9]
4000d9d0:	e58a0000 	str	r0, [sl]
4000d9d4:	e24bb001 	sub	fp, fp, #1
4000d9d8:	e35b0000 	cmp	fp, #0
4000d9dc:	1a000000 	bne	4000d9e4 <_tx_queue_front_send+0x188>
4000d9e0:	ea000002 	b	4000d9f0 <_tx_queue_front_send+0x194>
4000d9e4:	e28aa004 	add	sl, sl, #4
4000d9e8:	e2899004 	add	r9, r9, #4
4000d9ec:	eafffff6 	b	4000d9cc <_tx_queue_front_send+0x170>
4000d9f0:	e1a00000 	nop			; (mov r0, r0)
4000d9f4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000d9f8:	e58d0000 	str	r0, [sp]
4000d9fc:	e121f007 	msr	CPSR_c, r7
4000da00:	e59d0000 	ldr	r0, [sp]
4000da04:	e3500000 	cmp	r0, #0
4000da08:	0a000002 	beq	4000da18 <_tx_queue_front_send+0x1bc>
4000da0c:	e1a00004 	mov	r0, r4
4000da10:	e59d1000 	ldr	r1, [sp]
4000da14:	e12fff31 	blx	r1
4000da18:	e3a00000 	mov	r0, #0
4000da1c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000da20:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000da24:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da28:	e1500008 	cmp	r0, r8
4000da2c:	1a000002 	bne	4000da3c <_tx_queue_front_send+0x1e0>
4000da30:	e3a00000 	mov	r0, #0
4000da34:	e5840028 	str	r0, [r4, #40]	; 0x28
4000da38:	ea000007 	b	4000da5c <_tx_queue_front_send+0x200>
4000da3c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da40:	e5840028 	str	r0, [r4, #40]	; 0x28
4000da44:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000da48:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000da4c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000da50:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da54:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000da58:	e5810070 	str	r0, [r1, #112]	; 0x70
4000da5c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000da60:	e2400001 	sub	r0, r0, #1
4000da64:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000da68:	e3a00000 	mov	r0, #0
4000da6c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000da70:	e59f0198 	ldr	r0, [pc, #408]	; 4000dc10 <_tx_queue_front_send+0x3b4>
4000da74:	e5900000 	ldr	r0, [r0]
4000da78:	e2800001 	add	r0, r0, #1
4000da7c:	e59f118c 	ldr	r1, [pc, #396]	; 4000dc10 <_tx_queue_front_send+0x3b4>
4000da80:	e5810000 	str	r0, [r1]
4000da84:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000da88:	e58d0000 	str	r0, [sp]
4000da8c:	e121f007 	msr	CPSR_c, r7
4000da90:	e1a09005 	mov	r9, r5
4000da94:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000da98:	e594b008 	ldr	fp, [r4, #8]
4000da9c:	e1a00000 	nop			; (mov r0, r0)
4000daa0:	e5990000 	ldr	r0, [r9]
4000daa4:	e58a0000 	str	r0, [sl]
4000daa8:	e24bb001 	sub	fp, fp, #1
4000daac:	e35b0000 	cmp	fp, #0
4000dab0:	1a000000 	bne	4000dab8 <_tx_queue_front_send+0x25c>
4000dab4:	ea000002 	b	4000dac4 <_tx_queue_front_send+0x268>
4000dab8:	e28aa004 	add	sl, sl, #4
4000dabc:	e2899004 	add	r9, r9, #4
4000dac0:	eafffff6 	b	4000daa0 <_tx_queue_front_send+0x244>
4000dac4:	e1a00000 	nop			; (mov r0, r0)
4000dac8:	e3a00000 	mov	r0, #0
4000dacc:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dad0:	e1a00008 	mov	r0, r8
4000dad4:	eb0005be 	bl	4000f1d4 <_tx_thread_system_resume>
4000dad8:	e59d0000 	ldr	r0, [sp]
4000dadc:	e3500000 	cmp	r0, #0
4000dae0:	0a000002 	beq	4000daf0 <_tx_queue_front_send+0x294>
4000dae4:	e1a00004 	mov	r0, r4
4000dae8:	e59d1000 	ldr	r1, [sp]
4000daec:	e12fff31 	blx	r1
4000daf0:	e3a00000 	mov	r0, #0
4000daf4:	eaffffc8 	b	4000da1c <_tx_queue_front_send+0x1c0>
4000daf8:	e3560000 	cmp	r6, #0
4000dafc:	0a000038 	beq	4000dbe4 <_tx_queue_front_send+0x388>
4000db00:	e59f00f4 	ldr	r0, [pc, #244]	; 4000dbfc <_tx_queue_front_send+0x3a0>
4000db04:	e5908000 	ldr	r8, [r0]
4000db08:	e59f0104 	ldr	r0, [pc, #260]	; 4000dc14 <_tx_queue_front_send+0x3b8>
4000db0c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000db10:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000db14:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000db18:	e3a00001 	mov	r0, #1
4000db1c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000db20:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db24:	e3500000 	cmp	r0, #0
4000db28:	0a00000b 	beq	4000db5c <_tx_queue_front_send+0x300>
4000db2c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db30:	e5880070 	str	r0, [r8, #112]	; 0x70
4000db34:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db38:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000db3c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000db40:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db44:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000db48:	e5808070 	str	r8, [r0, #112]	; 0x70
4000db4c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db50:	e5808074 	str	r8, [r0, #116]	; 0x74
4000db54:	e5848028 	str	r8, [r4, #40]	; 0x28
4000db58:	ea000002 	b	4000db68 <_tx_queue_front_send+0x30c>
4000db5c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000db60:	e5888070 	str	r8, [r8, #112]	; 0x70
4000db64:	e5888074 	str	r8, [r8, #116]	; 0x74
4000db68:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000db6c:	e2800001 	add	r0, r0, #1
4000db70:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000db74:	e3a00005 	mov	r0, #5
4000db78:	e5880030 	str	r0, [r8, #48]	; 0x30
4000db7c:	e3a00001 	mov	r0, #1
4000db80:	e5880038 	str	r0, [r8, #56]	; 0x38
4000db84:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000db88:	e59f0080 	ldr	r0, [pc, #128]	; 4000dc10 <_tx_queue_front_send+0x3b4>
4000db8c:	e5900000 	ldr	r0, [r0]
4000db90:	e2800001 	add	r0, r0, #1
4000db94:	e59f1074 	ldr	r1, [pc, #116]	; 4000dc10 <_tx_queue_front_send+0x3b4>
4000db98:	e5810000 	str	r0, [r1]
4000db9c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dba0:	e58d0000 	str	r0, [sp]
4000dba4:	e121f007 	msr	CPSR_c, r7
4000dba8:	e1a00008 	mov	r0, r8
4000dbac:	ebffebe1 	bl	40008b38 <_tx_thread_system_suspend>
4000dbb0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dbb4:	e58d0000 	str	r0, [sp]
4000dbb8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dbbc:	e3500000 	cmp	r0, #0
4000dbc0:	1a000005 	bne	4000dbdc <_tx_queue_front_send+0x380>
4000dbc4:	e59d0000 	ldr	r0, [sp]
4000dbc8:	e3500000 	cmp	r0, #0
4000dbcc:	0a000002 	beq	4000dbdc <_tx_queue_front_send+0x380>
4000dbd0:	e1a00004 	mov	r0, r4
4000dbd4:	e59d1000 	ldr	r1, [sp]
4000dbd8:	e12fff31 	blx	r1
4000dbdc:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dbe0:	eaffff8d 	b	4000da1c <_tx_queue_front_send+0x1c0>
4000dbe4:	e121f007 	msr	CPSR_c, r7
4000dbe8:	e3a0000b 	mov	r0, #11
4000dbec:	eaffff8a 	b	4000da1c <_tx_queue_front_send+0x1c0>
4000dbf0:	40030ea4 	.word	0x40030ea4
4000dbf4:	40030ea8 	.word	0x40030ea8
4000dbf8:	40030e30 	.word	0x40030e30
4000dbfc:	40030e38 	.word	0x40030e38
4000dc00:	f0f0f0f0 	.word	0xf0f0f0f0
4000dc04:	40030ea0 	.word	0x40030ea0
4000dc08:	40030e9c 	.word	0x40030e9c
4000dc0c:	40030e90 	.word	0x40030e90
4000dc10:	40030e54 	.word	0x40030e54
4000dc14:	400105f8 	.word	0x400105f8

4000dc18 <_tx_queue_receive>:
4000dc18:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dc1c:	e1a04000 	mov	r4, r0
4000dc20:	e1a05001 	mov	r5, r1
4000dc24:	e1a06002 	mov	r6, r2
4000dc28:	e10f7000 	mrs	r7, CPSR
4000dc2c:	e3870080 	orr	r0, r7, #128	; 0x80
4000dc30:	e58d0000 	str	r0, [sp]
4000dc34:	e59d0000 	ldr	r0, [sp]
4000dc38:	e121f000 	msr	CPSR_c, r0
4000dc3c:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e050 <_tx_queue_receive+0x438>
4000dc40:	e5910000 	ldr	r0, [r1]
4000dc44:	e3500000 	cmp	r0, #0
4000dc48:	0a000031 	beq	4000dd14 <_tx_queue_receive+0xfc>
4000dc4c:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e054 <_tx_queue_receive+0x43c>
4000dc50:	e5911000 	ldr	r1, [r1]
4000dc54:	e2811001 	add	r1, r1, #1
4000dc58:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e054 <_tx_queue_receive+0x43c>
4000dc5c:	e5821000 	str	r1, [r2]
4000dc60:	e580100c 	str	r1, [r0, #12]
4000dc64:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e058 <_tx_queue_receive+0x440>
4000dc68:	e5911000 	ldr	r1, [r1]
4000dc6c:	e3510000 	cmp	r1, #0
4000dc70:	1a000006 	bne	4000dc90 <_tx_queue_receive+0x78>
4000dc74:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e05c <_tx_queue_receive+0x444>
4000dc78:	e5911000 	ldr	r1, [r1]
4000dc7c:	e5801000 	str	r1, [r0]
4000dc80:	e5901000 	ldr	r1, [r0]
4000dc84:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dc88:	e5801004 	str	r1, [r0, #4]
4000dc8c:	ea00000d 	b	4000dcc8 <_tx_queue_receive+0xb0>
4000dc90:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e058 <_tx_queue_receive+0x440>
4000dc94:	e5911000 	ldr	r1, [r1]
4000dc98:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e060 <_tx_queue_receive+0x448>
4000dc9c:	e1510002 	cmp	r1, r2
4000dca0:	2a000004 	bcs	4000dcb8 <_tx_queue_receive+0xa0>
4000dca4:	e3e01000 	mvn	r1, #0
4000dca8:	e5801000 	str	r1, [r0]
4000dcac:	e3a01000 	mov	r1, #0
4000dcb0:	e5801004 	str	r1, [r0, #4]
4000dcb4:	ea000003 	b	4000dcc8 <_tx_queue_receive+0xb0>
4000dcb8:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e060 <_tx_queue_receive+0x448>
4000dcbc:	e5801000 	str	r1, [r0]
4000dcc0:	e3a01000 	mov	r1, #0
4000dcc4:	e5801004 	str	r1, [r0, #4]
4000dcc8:	e3a01044 	mov	r1, #68	; 0x44
4000dccc:	e5801008 	str	r1, [r0, #8]
4000dcd0:	e5804010 	str	r4, [r0, #16]
4000dcd4:	e5805014 	str	r5, [r0, #20]
4000dcd8:	e5806018 	str	r6, [r0, #24]
4000dcdc:	e5941010 	ldr	r1, [r4, #16]
4000dce0:	e580101c 	str	r1, [r0, #28]
4000dce4:	e2800020 	add	r0, r0, #32
4000dce8:	e59f1374 	ldr	r1, [pc, #884]	; 4000e064 <_tx_queue_receive+0x44c>
4000dcec:	e5911000 	ldr	r1, [r1]
4000dcf0:	e1500001 	cmp	r0, r1
4000dcf4:	3a000001 	bcc	4000dd00 <_tx_queue_receive+0xe8>
4000dcf8:	e59f1368 	ldr	r1, [pc, #872]	; 4000e068 <_tx_queue_receive+0x450>
4000dcfc:	e5910000 	ldr	r0, [r1]
4000dd00:	e59f1348 	ldr	r1, [pc, #840]	; 4000e050 <_tx_queue_receive+0x438>
4000dd04:	e5810000 	str	r0, [r1]
4000dd08:	e59f135c 	ldr	r1, [pc, #860]	; 4000e06c <_tx_queue_receive+0x454>
4000dd0c:	e5911000 	ldr	r1, [r1]
4000dd10:	e5810020 	str	r0, [r1, #32]
4000dd14:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dd18:	e3580000 	cmp	r8, #0
4000dd1c:	0a00002f 	beq	4000dde0 <_tx_queue_receive+0x1c8>
4000dd20:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000dd24:	e3500000 	cmp	r0, #0
4000dd28:	0a00002c 	beq	4000dde0 <_tx_queue_receive+0x1c8>
4000dd2c:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000dd30:	e1a0a005 	mov	sl, r5
4000dd34:	e594b008 	ldr	fp, [r4, #8]
4000dd38:	e1a00000 	nop			; (mov r0, r0)
4000dd3c:	e5990000 	ldr	r0, [r9]
4000dd40:	e58a0000 	str	r0, [sl]
4000dd44:	e24bb001 	sub	fp, fp, #1
4000dd48:	e35b0000 	cmp	fp, #0
4000dd4c:	1a000000 	bne	4000dd54 <_tx_queue_receive+0x13c>
4000dd50:	ea000002 	b	4000dd60 <_tx_queue_receive+0x148>
4000dd54:	e28aa004 	add	sl, sl, #4
4000dd58:	e2899004 	add	r9, r9, #4
4000dd5c:	eafffff6 	b	4000dd3c <_tx_queue_receive+0x124>
4000dd60:	e1a00000 	nop			; (mov r0, r0)
4000dd64:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd68:	e1500008 	cmp	r0, r8
4000dd6c:	1a000002 	bne	4000dd7c <_tx_queue_receive+0x164>
4000dd70:	e3a00000 	mov	r0, #0
4000dd74:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd78:	ea000007 	b	4000dd9c <_tx_queue_receive+0x184>
4000dd7c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd80:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd84:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dd88:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dd8c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dd90:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd94:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000dd98:	e5810070 	str	r0, [r1, #112]	; 0x70
4000dd9c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dda0:	e2400001 	sub	r0, r0, #1
4000dda4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dda8:	e3a00000 	mov	r0, #0
4000ddac:	e5880068 	str	r0, [r8, #104]	; 0x68
4000ddb0:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e070 <_tx_queue_receive+0x458>
4000ddb4:	e5900000 	ldr	r0, [r0]
4000ddb8:	e2800001 	add	r0, r0, #1
4000ddbc:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e070 <_tx_queue_receive+0x458>
4000ddc0:	e5810000 	str	r0, [r1]
4000ddc4:	e121f007 	msr	CPSR_c, r7
4000ddc8:	e3a00000 	mov	r0, #0
4000ddcc:	e5880084 	str	r0, [r8, #132]	; 0x84
4000ddd0:	e1a00008 	mov	r0, r8
4000ddd4:	eb0004fe 	bl	4000f1d4 <_tx_thread_system_resume>
4000ddd8:	e3a00000 	mov	r0, #0
4000dddc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000dde0:	e5940010 	ldr	r0, [r4, #16]
4000dde4:	e3500000 	cmp	r0, #0
4000dde8:	0a000068 	beq	4000df90 <_tx_queue_receive+0x378>
4000ddec:	e5949020 	ldr	r9, [r4, #32]
4000ddf0:	e1a0a005 	mov	sl, r5
4000ddf4:	e594b008 	ldr	fp, [r4, #8]
4000ddf8:	e1a00000 	nop			; (mov r0, r0)
4000ddfc:	e5990000 	ldr	r0, [r9]
4000de00:	e58a0000 	str	r0, [sl]
4000de04:	e24bb001 	sub	fp, fp, #1
4000de08:	e35b0000 	cmp	fp, #0
4000de0c:	1a000000 	bne	4000de14 <_tx_queue_receive+0x1fc>
4000de10:	ea000002 	b	4000de20 <_tx_queue_receive+0x208>
4000de14:	e28aa004 	add	sl, sl, #4
4000de18:	e2899004 	add	r9, r9, #4
4000de1c:	eafffff6 	b	4000ddfc <_tx_queue_receive+0x1e4>
4000de20:	e1a00000 	nop			; (mov r0, r0)
4000de24:	e5940020 	ldr	r0, [r4, #32]
4000de28:	e5941008 	ldr	r1, [r4, #8]
4000de2c:	e0800101 	add	r0, r0, r1, lsl #2
4000de30:	e5840020 	str	r0, [r4, #32]
4000de34:	e5940020 	ldr	r0, [r4, #32]
4000de38:	e594101c 	ldr	r1, [r4, #28]
4000de3c:	e1500001 	cmp	r0, r1
4000de40:	3a000001 	bcc	4000de4c <_tx_queue_receive+0x234>
4000de44:	e5940018 	ldr	r0, [r4, #24]
4000de48:	e5840020 	str	r0, [r4, #32]
4000de4c:	e3580000 	cmp	r8, #0
4000de50:	1a000008 	bne	4000de78 <_tx_queue_receive+0x260>
4000de54:	e5940014 	ldr	r0, [r4, #20]
4000de58:	e2800001 	add	r0, r0, #1
4000de5c:	e5840014 	str	r0, [r4, #20]
4000de60:	e5940010 	ldr	r0, [r4, #16]
4000de64:	e2400001 	sub	r0, r0, #1
4000de68:	e5840010 	str	r0, [r4, #16]
4000de6c:	e121f007 	msr	CPSR_c, r7
4000de70:	e3a00000 	mov	r0, #0
4000de74:	eaffffd8 	b	4000dddc <_tx_queue_receive+0x1c4>
4000de78:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e070 <_tx_queue_receive+0x458>
4000de7c:	e5900000 	ldr	r0, [r0]
4000de80:	e2800001 	add	r0, r0, #1
4000de84:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e070 <_tx_queue_receive+0x458>
4000de88:	e5810000 	str	r0, [r1]
4000de8c:	e121f007 	msr	CPSR_c, r7
4000de90:	e10f7000 	mrs	r7, CPSR
4000de94:	e3870080 	orr	r0, r7, #128	; 0x80
4000de98:	e58d0000 	str	r0, [sp]
4000de9c:	e59d0000 	ldr	r0, [sp]
4000dea0:	e121f000 	msr	CPSR_c, r0
4000dea4:	e2810000 	add	r0, r1, #0
4000dea8:	e5900000 	ldr	r0, [r0]
4000deac:	e2400001 	sub	r0, r0, #1
4000deb0:	e5810000 	str	r0, [r1]
4000deb4:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000deb8:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000debc:	e594b008 	ldr	fp, [r4, #8]
4000dec0:	e1a00000 	nop			; (mov r0, r0)
4000dec4:	e5990000 	ldr	r0, [r9]
4000dec8:	e58a0000 	str	r0, [sl]
4000decc:	e24bb001 	sub	fp, fp, #1
4000ded0:	e35b0000 	cmp	fp, #0
4000ded4:	1a000000 	bne	4000dedc <_tx_queue_receive+0x2c4>
4000ded8:	ea000002 	b	4000dee8 <_tx_queue_receive+0x2d0>
4000dedc:	e28aa004 	add	sl, sl, #4
4000dee0:	e2899004 	add	r9, r9, #4
4000dee4:	eafffff6 	b	4000dec4 <_tx_queue_receive+0x2ac>
4000dee8:	e1a00000 	nop			; (mov r0, r0)
4000deec:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000def0:	e5941008 	ldr	r1, [r4, #8]
4000def4:	e0800101 	add	r0, r0, r1, lsl #2
4000def8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000defc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000df00:	e594101c 	ldr	r1, [r4, #28]
4000df04:	e1500001 	cmp	r0, r1
4000df08:	3a000001 	bcc	4000df14 <_tx_queue_receive+0x2fc>
4000df0c:	e5940018 	ldr	r0, [r4, #24]
4000df10:	e5840024 	str	r0, [r4, #36]	; 0x24
4000df14:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df18:	e1500008 	cmp	r0, r8
4000df1c:	1a000002 	bne	4000df2c <_tx_queue_receive+0x314>
4000df20:	e3a00000 	mov	r0, #0
4000df24:	e5840028 	str	r0, [r4, #40]	; 0x28
4000df28:	ea000007 	b	4000df4c <_tx_queue_receive+0x334>
4000df2c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df30:	e5840028 	str	r0, [r4, #40]	; 0x28
4000df34:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000df38:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000df3c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000df40:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df44:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000df48:	e5810070 	str	r0, [r1, #112]	; 0x70
4000df4c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000df50:	e2400001 	sub	r0, r0, #1
4000df54:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000df58:	e3a00000 	mov	r0, #0
4000df5c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000df60:	e59f0108 	ldr	r0, [pc, #264]	; 4000e070 <_tx_queue_receive+0x458>
4000df64:	e5900000 	ldr	r0, [r0]
4000df68:	e2800001 	add	r0, r0, #1
4000df6c:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e070 <_tx_queue_receive+0x458>
4000df70:	e5810000 	str	r0, [r1]
4000df74:	e121f007 	msr	CPSR_c, r7
4000df78:	e3a00000 	mov	r0, #0
4000df7c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000df80:	e1a00008 	mov	r0, r8
4000df84:	eb000492 	bl	4000f1d4 <_tx_thread_system_resume>
4000df88:	e3a00000 	mov	r0, #0
4000df8c:	eaffff92 	b	4000dddc <_tx_queue_receive+0x1c4>
4000df90:	e3560000 	cmp	r6, #0
4000df94:	0a00002a 	beq	4000e044 <_tx_queue_receive+0x42c>
4000df98:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e05c <_tx_queue_receive+0x444>
4000df9c:	e5908000 	ldr	r8, [r0]
4000dfa0:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e074 <_tx_queue_receive+0x45c>
4000dfa4:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dfa8:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000dfac:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000dfb0:	e3a00000 	mov	r0, #0
4000dfb4:	e5880080 	str	r0, [r8, #128]	; 0x80
4000dfb8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfbc:	e3500000 	cmp	r0, #0
4000dfc0:	0a00000a 	beq	4000dff0 <_tx_queue_receive+0x3d8>
4000dfc4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfc8:	e5880070 	str	r0, [r8, #112]	; 0x70
4000dfcc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfd0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dfd4:	e5880074 	str	r0, [r8, #116]	; 0x74
4000dfd8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfdc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dfe0:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dfe4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfe8:	e5808074 	str	r8, [r0, #116]	; 0x74
4000dfec:	ea000002 	b	4000dffc <_tx_queue_receive+0x3e4>
4000dff0:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dff4:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dff8:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dffc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e000:	e2800001 	add	r0, r0, #1
4000e004:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e008:	e3a00005 	mov	r0, #5
4000e00c:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e010:	e3a00001 	mov	r0, #1
4000e014:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e018:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e01c:	e59f004c 	ldr	r0, [pc, #76]	; 4000e070 <_tx_queue_receive+0x458>
4000e020:	e5900000 	ldr	r0, [r0]
4000e024:	e2800001 	add	r0, r0, #1
4000e028:	e59f1040 	ldr	r1, [pc, #64]	; 4000e070 <_tx_queue_receive+0x458>
4000e02c:	e5810000 	str	r0, [r1]
4000e030:	e121f007 	msr	CPSR_c, r7
4000e034:	e1a00008 	mov	r0, r8
4000e038:	ebffeabe 	bl	40008b38 <_tx_thread_system_suspend>
4000e03c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e040:	eaffff65 	b	4000dddc <_tx_queue_receive+0x1c4>
4000e044:	e121f007 	msr	CPSR_c, r7
4000e048:	e3a0000a 	mov	r0, #10
4000e04c:	eaffff62 	b	4000dddc <_tx_queue_receive+0x1c4>
4000e050:	40030ea4 	.word	0x40030ea4
4000e054:	40030ea8 	.word	0x40030ea8
4000e058:	40030e30 	.word	0x40030e30
4000e05c:	40030e38 	.word	0x40030e38
4000e060:	f0f0f0f0 	.word	0xf0f0f0f0
4000e064:	40030ea0 	.word	0x40030ea0
4000e068:	40030e9c 	.word	0x40030e9c
4000e06c:	40030e90 	.word	0x40030e90
4000e070:	40030e54 	.word	0x40030e54
4000e074:	400105f8 	.word	0x400105f8

4000e078 <_tx_queue_send>:
4000e078:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e07c:	e1a04000 	mov	r4, r0
4000e080:	e1a05001 	mov	r5, r1
4000e084:	e1a06002 	mov	r6, r2
4000e088:	e10f7000 	mrs	r7, CPSR
4000e08c:	e3870080 	orr	r0, r7, #128	; 0x80
4000e090:	e58d0004 	str	r0, [sp, #4]
4000e094:	e59d0004 	ldr	r0, [sp, #4]
4000e098:	e121f000 	msr	CPSR_c, r0
4000e09c:	e59f1358 	ldr	r1, [pc, #856]	; 4000e3fc <_tx_queue_send+0x384>
4000e0a0:	e5910000 	ldr	r0, [r1]
4000e0a4:	e3500000 	cmp	r0, #0
4000e0a8:	0a000031 	beq	4000e174 <_tx_queue_send+0xfc>
4000e0ac:	e59f134c 	ldr	r1, [pc, #844]	; 4000e400 <_tx_queue_send+0x388>
4000e0b0:	e5911000 	ldr	r1, [r1]
4000e0b4:	e2811001 	add	r1, r1, #1
4000e0b8:	e59f2340 	ldr	r2, [pc, #832]	; 4000e400 <_tx_queue_send+0x388>
4000e0bc:	e5821000 	str	r1, [r2]
4000e0c0:	e580100c 	str	r1, [r0, #12]
4000e0c4:	e59f1338 	ldr	r1, [pc, #824]	; 4000e404 <_tx_queue_send+0x38c>
4000e0c8:	e5911000 	ldr	r1, [r1]
4000e0cc:	e3510000 	cmp	r1, #0
4000e0d0:	1a000006 	bne	4000e0f0 <_tx_queue_send+0x78>
4000e0d4:	e59f132c 	ldr	r1, [pc, #812]	; 4000e408 <_tx_queue_send+0x390>
4000e0d8:	e5911000 	ldr	r1, [r1]
4000e0dc:	e5801000 	str	r1, [r0]
4000e0e0:	e5901000 	ldr	r1, [r0]
4000e0e4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e0e8:	e5801004 	str	r1, [r0, #4]
4000e0ec:	ea00000d 	b	4000e128 <_tx_queue_send+0xb0>
4000e0f0:	e59f130c 	ldr	r1, [pc, #780]	; 4000e404 <_tx_queue_send+0x38c>
4000e0f4:	e5911000 	ldr	r1, [r1]
4000e0f8:	e59f230c 	ldr	r2, [pc, #780]	; 4000e40c <_tx_queue_send+0x394>
4000e0fc:	e1510002 	cmp	r1, r2
4000e100:	2a000004 	bcs	4000e118 <_tx_queue_send+0xa0>
4000e104:	e3e01000 	mvn	r1, #0
4000e108:	e5801000 	str	r1, [r0]
4000e10c:	e3a01000 	mov	r1, #0
4000e110:	e5801004 	str	r1, [r0, #4]
4000e114:	ea000003 	b	4000e128 <_tx_queue_send+0xb0>
4000e118:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e40c <_tx_queue_send+0x394>
4000e11c:	e5801000 	str	r1, [r0]
4000e120:	e3a01000 	mov	r1, #0
4000e124:	e5801004 	str	r1, [r0, #4]
4000e128:	e3a01045 	mov	r1, #69	; 0x45
4000e12c:	e5801008 	str	r1, [r0, #8]
4000e130:	e5804010 	str	r4, [r0, #16]
4000e134:	e5805014 	str	r5, [r0, #20]
4000e138:	e5806018 	str	r6, [r0, #24]
4000e13c:	e5941010 	ldr	r1, [r4, #16]
4000e140:	e580101c 	str	r1, [r0, #28]
4000e144:	e2800020 	add	r0, r0, #32
4000e148:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e410 <_tx_queue_send+0x398>
4000e14c:	e5911000 	ldr	r1, [r1]
4000e150:	e1500001 	cmp	r0, r1
4000e154:	3a000001 	bcc	4000e160 <_tx_queue_send+0xe8>
4000e158:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e414 <_tx_queue_send+0x39c>
4000e15c:	e5910000 	ldr	r0, [r1]
4000e160:	e59f1294 	ldr	r1, [pc, #660]	; 4000e3fc <_tx_queue_send+0x384>
4000e164:	e5810000 	str	r0, [r1]
4000e168:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e418 <_tx_queue_send+0x3a0>
4000e16c:	e5911000 	ldr	r1, [r1]
4000e170:	e5810020 	str	r0, [r1, #32]
4000e174:	e5940014 	ldr	r0, [r4, #20]
4000e178:	e3500000 	cmp	r0, #0
4000e17c:	0a000061 	beq	4000e308 <_tx_queue_send+0x290>
4000e180:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e184:	e3500000 	cmp	r0, #0
4000e188:	1a000028 	bne	4000e230 <_tx_queue_send+0x1b8>
4000e18c:	e5940014 	ldr	r0, [r4, #20]
4000e190:	e2400001 	sub	r0, r0, #1
4000e194:	e5840014 	str	r0, [r4, #20]
4000e198:	e5940010 	ldr	r0, [r4, #16]
4000e19c:	e2800001 	add	r0, r0, #1
4000e1a0:	e5840010 	str	r0, [r4, #16]
4000e1a4:	e1a09005 	mov	r9, r5
4000e1a8:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e1ac:	e594b008 	ldr	fp, [r4, #8]
4000e1b0:	e1a00000 	nop			; (mov r0, r0)
4000e1b4:	e5990000 	ldr	r0, [r9]
4000e1b8:	e58a0000 	str	r0, [sl]
4000e1bc:	e24bb001 	sub	fp, fp, #1
4000e1c0:	e35b0000 	cmp	fp, #0
4000e1c4:	1a000000 	bne	4000e1cc <_tx_queue_send+0x154>
4000e1c8:	ea000002 	b	4000e1d8 <_tx_queue_send+0x160>
4000e1cc:	e28aa004 	add	sl, sl, #4
4000e1d0:	e2899004 	add	r9, r9, #4
4000e1d4:	eafffff6 	b	4000e1b4 <_tx_queue_send+0x13c>
4000e1d8:	e1a00000 	nop			; (mov r0, r0)
4000e1dc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e1e0:	e5941008 	ldr	r1, [r4, #8]
4000e1e4:	e0800101 	add	r0, r0, r1, lsl #2
4000e1e8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e1ec:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e1f0:	e594101c 	ldr	r1, [r4, #28]
4000e1f4:	e1500001 	cmp	r0, r1
4000e1f8:	3a000001 	bcc	4000e204 <_tx_queue_send+0x18c>
4000e1fc:	e5940018 	ldr	r0, [r4, #24]
4000e200:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e204:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e208:	e58d0000 	str	r0, [sp]
4000e20c:	e121f007 	msr	CPSR_c, r7
4000e210:	e59d0000 	ldr	r0, [sp]
4000e214:	e3500000 	cmp	r0, #0
4000e218:	0a000002 	beq	4000e228 <_tx_queue_send+0x1b0>
4000e21c:	e1a00004 	mov	r0, r4
4000e220:	e59d1000 	ldr	r1, [sp]
4000e224:	e12fff31 	blx	r1
4000e228:	e3a00000 	mov	r0, #0
4000e22c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e230:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e234:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e238:	e1500008 	cmp	r0, r8
4000e23c:	1a000002 	bne	4000e24c <_tx_queue_send+0x1d4>
4000e240:	e3a00000 	mov	r0, #0
4000e244:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e248:	ea000007 	b	4000e26c <_tx_queue_send+0x1f4>
4000e24c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e250:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e254:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e258:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e25c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e260:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e264:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e268:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e26c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e270:	e2400001 	sub	r0, r0, #1
4000e274:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e278:	e3a00000 	mov	r0, #0
4000e27c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e280:	e59f0194 	ldr	r0, [pc, #404]	; 4000e41c <_tx_queue_send+0x3a4>
4000e284:	e5900000 	ldr	r0, [r0]
4000e288:	e2800001 	add	r0, r0, #1
4000e28c:	e59f1188 	ldr	r1, [pc, #392]	; 4000e41c <_tx_queue_send+0x3a4>
4000e290:	e5810000 	str	r0, [r1]
4000e294:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e298:	e58d0000 	str	r0, [sp]
4000e29c:	e121f007 	msr	CPSR_c, r7
4000e2a0:	e1a09005 	mov	r9, r5
4000e2a4:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e2a8:	e594b008 	ldr	fp, [r4, #8]
4000e2ac:	e1a00000 	nop			; (mov r0, r0)
4000e2b0:	e5990000 	ldr	r0, [r9]
4000e2b4:	e58a0000 	str	r0, [sl]
4000e2b8:	e24bb001 	sub	fp, fp, #1
4000e2bc:	e35b0000 	cmp	fp, #0
4000e2c0:	1a000000 	bne	4000e2c8 <_tx_queue_send+0x250>
4000e2c4:	ea000002 	b	4000e2d4 <_tx_queue_send+0x25c>
4000e2c8:	e28aa004 	add	sl, sl, #4
4000e2cc:	e2899004 	add	r9, r9, #4
4000e2d0:	eafffff6 	b	4000e2b0 <_tx_queue_send+0x238>
4000e2d4:	e1a00000 	nop			; (mov r0, r0)
4000e2d8:	e3a00000 	mov	r0, #0
4000e2dc:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e2e0:	e1a00008 	mov	r0, r8
4000e2e4:	eb0003ba 	bl	4000f1d4 <_tx_thread_system_resume>
4000e2e8:	e59d0000 	ldr	r0, [sp]
4000e2ec:	e3500000 	cmp	r0, #0
4000e2f0:	0a000002 	beq	4000e300 <_tx_queue_send+0x288>
4000e2f4:	e1a00004 	mov	r0, r4
4000e2f8:	e59d1000 	ldr	r1, [sp]
4000e2fc:	e12fff31 	blx	r1
4000e300:	e3a00000 	mov	r0, #0
4000e304:	eaffffc8 	b	4000e22c <_tx_queue_send+0x1b4>
4000e308:	e3560000 	cmp	r6, #0
4000e30c:	0a000037 	beq	4000e3f0 <_tx_queue_send+0x378>
4000e310:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e408 <_tx_queue_send+0x390>
4000e314:	e5908000 	ldr	r8, [r0]
4000e318:	e59f0100 	ldr	r0, [pc, #256]	; 4000e420 <_tx_queue_send+0x3a8>
4000e31c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e320:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e324:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e328:	e3a00000 	mov	r0, #0
4000e32c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e330:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e334:	e3500000 	cmp	r0, #0
4000e338:	0a00000a 	beq	4000e368 <_tx_queue_send+0x2f0>
4000e33c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e340:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e344:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e348:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e34c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e350:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e354:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e358:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e35c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e360:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e364:	ea000002 	b	4000e374 <_tx_queue_send+0x2fc>
4000e368:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e36c:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e370:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e374:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e378:	e2800001 	add	r0, r0, #1
4000e37c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e380:	e3a00005 	mov	r0, #5
4000e384:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e388:	e3a00001 	mov	r0, #1
4000e38c:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e390:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e394:	e59f0080 	ldr	r0, [pc, #128]	; 4000e41c <_tx_queue_send+0x3a4>
4000e398:	e5900000 	ldr	r0, [r0]
4000e39c:	e2800001 	add	r0, r0, #1
4000e3a0:	e59f1074 	ldr	r1, [pc, #116]	; 4000e41c <_tx_queue_send+0x3a4>
4000e3a4:	e5810000 	str	r0, [r1]
4000e3a8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e3ac:	e58d0000 	str	r0, [sp]
4000e3b0:	e121f007 	msr	CPSR_c, r7
4000e3b4:	e1a00008 	mov	r0, r8
4000e3b8:	ebffe9de 	bl	40008b38 <_tx_thread_system_suspend>
4000e3bc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e3c0:	e58d0000 	str	r0, [sp]
4000e3c4:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e3c8:	e3500000 	cmp	r0, #0
4000e3cc:	1a000005 	bne	4000e3e8 <_tx_queue_send+0x370>
4000e3d0:	e59d0000 	ldr	r0, [sp]
4000e3d4:	e3500000 	cmp	r0, #0
4000e3d8:	0a000002 	beq	4000e3e8 <_tx_queue_send+0x370>
4000e3dc:	e1a00004 	mov	r0, r4
4000e3e0:	e59d1000 	ldr	r1, [sp]
4000e3e4:	e12fff31 	blx	r1
4000e3e8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e3ec:	eaffff8e 	b	4000e22c <_tx_queue_send+0x1b4>
4000e3f0:	e121f007 	msr	CPSR_c, r7
4000e3f4:	e3a0000b 	mov	r0, #11
4000e3f8:	eaffff8b 	b	4000e22c <_tx_queue_send+0x1b4>
4000e3fc:	40030ea4 	.word	0x40030ea4
4000e400:	40030ea8 	.word	0x40030ea8
4000e404:	40030e30 	.word	0x40030e30
4000e408:	40030e38 	.word	0x40030e38
4000e40c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e410:	40030ea0 	.word	0x40030ea0
4000e414:	40030e9c 	.word	0x40030e9c
4000e418:	40030e90 	.word	0x40030e90
4000e41c:	40030e54 	.word	0x40030e54
4000e420:	400105f8 	.word	0x400105f8

4000e424 <_tx_thread_create>:
4000e424:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e428:	e24dd014 	sub	sp, sp, #20
4000e42c:	e1a04000 	mov	r4, r0
4000e430:	e1a05001 	mov	r5, r1
4000e434:	e28da048 	add	sl, sp, #72	; 0x48
4000e438:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e43c:	e3a00000 	mov	r0, #0
4000e440:	e58d0004 	str	r0, [sp, #4]
4000e444:	e3a020ef 	mov	r2, #239	; 0xef
4000e448:	e1a01007 	mov	r1, r7
4000e44c:	e1a00006 	mov	r0, r6
4000e450:	eb001447 	bl	40013574 <__aeabi_memset>
4000e454:	e1a00127 	lsr	r0, r7, #2
4000e458:	e3a01004 	mov	r1, #4
4000e45c:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e460:	e3a010a8 	mov	r1, #168	; 0xa8
4000e464:	e1a00004 	mov	r0, r4
4000e468:	eb001419 	bl	400134d4 <__aeabi_memclr4>
4000e46c:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e470:	e59d001c 	ldr	r0, [sp, #28]
4000e474:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e478:	e59d0020 	ldr	r0, [sp, #32]
4000e47c:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e480:	e584600c 	str	r6, [r4, #12]
4000e484:	e5847014 	str	r7, [r4, #20]
4000e488:	e2470001 	sub	r0, r7, #1
4000e48c:	e0800006 	add	r0, r0, r6
4000e490:	e5840010 	str	r0, [r4, #16]
4000e494:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e498:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e49c:	e584a018 	str	sl, [r4, #24]
4000e4a0:	e584a01c 	str	sl, [r4, #28]
4000e4a4:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e4a8:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e4ac:	e3a00003 	mov	r0, #3
4000e4b0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e4b4:	e59f0268 	ldr	r0, [pc, #616]	; 4000e724 <_tx_thread_create+0x300>
4000e4b8:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e4bc:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e4c0:	e59f1260 	ldr	r1, [pc, #608]	; 4000e728 <_tx_thread_create+0x304>
4000e4c4:	e1a00004 	mov	r0, r4
4000e4c8:	eb000727 	bl	4001016c <_tx_thread_stack_build>
4000e4cc:	e5940008 	ldr	r0, [r4, #8]
4000e4d0:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e4d4:	e10f0000 	mrs	r0, CPSR
4000e4d8:	e58d0010 	str	r0, [sp, #16]
4000e4dc:	e59d0010 	ldr	r0, [sp, #16]
4000e4e0:	e380b080 	orr	fp, r0, #128	; 0x80
4000e4e4:	e121f00b 	msr	CPSR_c, fp
4000e4e8:	e59f023c 	ldr	r0, [pc, #572]	; 4000e72c <_tx_thread_create+0x308>
4000e4ec:	e5840000 	str	r0, [r4]
4000e4f0:	e59f0238 	ldr	r0, [pc, #568]	; 4000e730 <_tx_thread_create+0x30c>
4000e4f4:	e5900000 	ldr	r0, [r0]
4000e4f8:	e3500000 	cmp	r0, #0
4000e4fc:	0a00000e 	beq	4000e53c <_tx_thread_create+0x118>
4000e500:	e59f0228 	ldr	r0, [pc, #552]	; 4000e730 <_tx_thread_create+0x30c>
4000e504:	e5900000 	ldr	r0, [r0]
4000e508:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e50c:	e58d000c 	str	r0, [sp, #12]
4000e510:	e59f0218 	ldr	r0, [pc, #536]	; 4000e730 <_tx_thread_create+0x30c>
4000e514:	e5900000 	ldr	r0, [r0]
4000e518:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e51c:	e59d000c 	ldr	r0, [sp, #12]
4000e520:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e524:	e59d000c 	ldr	r0, [sp, #12]
4000e528:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e52c:	e59f01fc 	ldr	r0, [pc, #508]	; 4000e730 <_tx_thread_create+0x30c>
4000e530:	e5900000 	ldr	r0, [r0]
4000e534:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e538:	ea000003 	b	4000e54c <_tx_thread_create+0x128>
4000e53c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000e730 <_tx_thread_create+0x30c>
4000e540:	e5804000 	str	r4, [r0]
4000e544:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e548:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e54c:	e59f01e0 	ldr	r0, [pc, #480]	; 4000e734 <_tx_thread_create+0x310>
4000e550:	e5900000 	ldr	r0, [r0]
4000e554:	e2800001 	add	r0, r0, #1
4000e558:	e59f11d4 	ldr	r1, [pc, #468]	; 4000e734 <_tx_thread_create+0x310>
4000e55c:	e5810000 	str	r0, [r1]
4000e560:	e59f01d0 	ldr	r0, [pc, #464]	; 4000e738 <_tx_thread_create+0x314>
4000e564:	e5900000 	ldr	r0, [r0]
4000e568:	e2800001 	add	r0, r0, #1
4000e56c:	e59f11c4 	ldr	r1, [pc, #452]	; 4000e738 <_tx_thread_create+0x314>
4000e570:	e5810000 	str	r0, [r1]
4000e574:	e1a03006 	mov	r3, r6
4000e578:	e1a02005 	mov	r2, r5
4000e57c:	e1a01004 	mov	r1, r4
4000e580:	e3a00001 	mov	r0, #1
4000e584:	e58d7000 	str	r7, [sp]
4000e588:	eb000667 	bl	4000ff2c <_tx_trace_object_register>
4000e58c:	e59f11a8 	ldr	r1, [pc, #424]	; 4000e73c <_tx_thread_create+0x318>
4000e590:	e5910000 	ldr	r0, [r1]
4000e594:	e3500000 	cmp	r0, #0
4000e598:	0a000030 	beq	4000e660 <_tx_thread_create+0x23c>
4000e59c:	e59f119c 	ldr	r1, [pc, #412]	; 4000e740 <_tx_thread_create+0x31c>
4000e5a0:	e5911000 	ldr	r1, [r1]
4000e5a4:	e2811001 	add	r1, r1, #1
4000e5a8:	e59f2190 	ldr	r2, [pc, #400]	; 4000e740 <_tx_thread_create+0x31c>
4000e5ac:	e5821000 	str	r1, [r2]
4000e5b0:	e580100c 	str	r1, [r0, #12]
4000e5b4:	e59f1188 	ldr	r1, [pc, #392]	; 4000e744 <_tx_thread_create+0x320>
4000e5b8:	e5911000 	ldr	r1, [r1]
4000e5bc:	e3510000 	cmp	r1, #0
4000e5c0:	1a000006 	bne	4000e5e0 <_tx_thread_create+0x1bc>
4000e5c4:	e59f117c 	ldr	r1, [pc, #380]	; 4000e748 <_tx_thread_create+0x324>
4000e5c8:	e5911000 	ldr	r1, [r1]
4000e5cc:	e5801000 	str	r1, [r0]
4000e5d0:	e5901000 	ldr	r1, [r0]
4000e5d4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e5d8:	e5801004 	str	r1, [r0, #4]
4000e5dc:	ea00000d 	b	4000e618 <_tx_thread_create+0x1f4>
4000e5e0:	e59f115c 	ldr	r1, [pc, #348]	; 4000e744 <_tx_thread_create+0x320>
4000e5e4:	e5911000 	ldr	r1, [r1]
4000e5e8:	e59f215c 	ldr	r2, [pc, #348]	; 4000e74c <_tx_thread_create+0x328>
4000e5ec:	e1510002 	cmp	r1, r2
4000e5f0:	2a000004 	bcs	4000e608 <_tx_thread_create+0x1e4>
4000e5f4:	e3e01000 	mvn	r1, #0
4000e5f8:	e5801000 	str	r1, [r0]
4000e5fc:	e3a01000 	mov	r1, #0
4000e600:	e5801004 	str	r1, [r0, #4]
4000e604:	ea000003 	b	4000e618 <_tx_thread_create+0x1f4>
4000e608:	e59f113c 	ldr	r1, [pc, #316]	; 4000e74c <_tx_thread_create+0x328>
4000e60c:	e5801000 	str	r1, [r0]
4000e610:	e3a01000 	mov	r1, #0
4000e614:	e5801004 	str	r1, [r0, #4]
4000e618:	e3a01064 	mov	r1, #100	; 0x64
4000e61c:	e5801008 	str	r1, [r0, #8]
4000e620:	e5804010 	str	r4, [r0, #16]
4000e624:	e5808014 	str	r8, [r0, #20]
4000e628:	e5806018 	str	r6, [r0, #24]
4000e62c:	e580701c 	str	r7, [r0, #28]
4000e630:	e2800020 	add	r0, r0, #32
4000e634:	e59f1114 	ldr	r1, [pc, #276]	; 4000e750 <_tx_thread_create+0x32c>
4000e638:	e5911000 	ldr	r1, [r1]
4000e63c:	e1500001 	cmp	r0, r1
4000e640:	3a000001 	bcc	4000e64c <_tx_thread_create+0x228>
4000e644:	e59f1108 	ldr	r1, [pc, #264]	; 4000e754 <_tx_thread_create+0x330>
4000e648:	e5910000 	ldr	r0, [r1]
4000e64c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000e73c <_tx_thread_create+0x318>
4000e650:	e5810000 	str	r0, [r1]
4000e654:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e758 <_tx_thread_create+0x334>
4000e658:	e5911000 	ldr	r1, [r1]
4000e65c:	e5810020 	str	r0, [r1, #32]
4000e660:	e59d0010 	ldr	r0, [sp, #16]
4000e664:	e121f000 	msr	CPSR_c, r0
4000e668:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e66c:	e3500000 	cmp	r0, #0
4000e670:	0a00001c 	beq	4000e6e8 <_tx_thread_create+0x2c4>
4000e674:	e59f00c8 	ldr	r0, [pc, #200]	; 4000e744 <_tx_thread_create+0x320>
4000e678:	e5900000 	ldr	r0, [r0]
4000e67c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000e74c <_tx_thread_create+0x328>
4000e680:	e1500001 	cmp	r0, r1
4000e684:	3a00000c 	bcc	4000e6bc <_tx_thread_create+0x298>
4000e688:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e75c <_tx_thread_create+0x338>
4000e68c:	e5900000 	ldr	r0, [r0]
4000e690:	e58d0008 	str	r0, [sp, #8]
4000e694:	e59d0008 	ldr	r0, [sp, #8]
4000e698:	e3500000 	cmp	r0, #0
4000e69c:	0a000008 	beq	4000e6c4 <_tx_thread_create+0x2a0>
4000e6a0:	e59d0008 	ldr	r0, [sp, #8]
4000e6a4:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e6a8:	e58d0004 	str	r0, [sp, #4]
4000e6ac:	e59d0008 	ldr	r0, [sp, #8]
4000e6b0:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e6b4:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e6b8:	ea000001 	b	4000e6c4 <_tx_thread_create+0x2a0>
4000e6bc:	e3a00000 	mov	r0, #0
4000e6c0:	e58d0008 	str	r0, [sp, #8]
4000e6c4:	e1a00004 	mov	r0, r4
4000e6c8:	eb0002c1 	bl	4000f1d4 <_tx_thread_system_resume>
4000e6cc:	e59d0008 	ldr	r0, [sp, #8]
4000e6d0:	e3500000 	cmp	r0, #0
4000e6d4:	0a00000f 	beq	4000e718 <_tx_thread_create+0x2f4>
4000e6d8:	e59d0008 	ldr	r0, [sp, #8]
4000e6dc:	e59d1004 	ldr	r1, [sp, #4]
4000e6e0:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e6e4:	ea00000b 	b	4000e718 <_tx_thread_create+0x2f4>
4000e6e8:	e10f0000 	mrs	r0, CPSR
4000e6ec:	e58d0010 	str	r0, [sp, #16]
4000e6f0:	e59d0010 	ldr	r0, [sp, #16]
4000e6f4:	e380b080 	orr	fp, r0, #128	; 0x80
4000e6f8:	e121f00b 	msr	CPSR_c, fp
4000e6fc:	e59f0034 	ldr	r0, [pc, #52]	; 4000e738 <_tx_thread_create+0x314>
4000e700:	e5900000 	ldr	r0, [r0]
4000e704:	e2400001 	sub	r0, r0, #1
4000e708:	e59f1028 	ldr	r1, [pc, #40]	; 4000e738 <_tx_thread_create+0x314>
4000e70c:	e5810000 	str	r0, [r1]
4000e710:	e59d0010 	ldr	r0, [sp, #16]
4000e714:	e121f000 	msr	CPSR_c, r0
4000e718:	e3a00000 	mov	r0, #0
4000e71c:	e28dd024 	add	sp, sp, #36	; 0x24
4000e720:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e724:	4000f704 	.word	0x4000f704
4000e728:	4000ef68 	.word	0x4000ef68
4000e72c:	54485244 	.word	0x54485244
4000e730:	40030e40 	.word	0x40030e40
4000e734:	40030e44 	.word	0x40030e44
4000e738:	40030e54 	.word	0x40030e54
4000e73c:	40030ea4 	.word	0x40030ea4
4000e740:	40030ea8 	.word	0x40030ea8
4000e744:	40030e30 	.word	0x40030e30
4000e748:	40030e38 	.word	0x40030e38
4000e74c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e750:	40030ea0 	.word	0x40030ea0
4000e754:	40030e9c 	.word	0x40030e9c
4000e758:	40030e90 	.word	0x40030e90
4000e75c:	40030e3c 	.word	0x40030e3c

4000e760 <_tx_thread_info_get>:
4000e760:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e764:	e1a0c000 	mov	ip, r0
4000e768:	e28d7028 	add	r7, sp, #40	; 0x28
4000e76c:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000e770:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000e774:	e10f8000 	mrs	r8, CPSR
4000e778:	e3889080 	orr	r9, r8, #128	; 0x80
4000e77c:	e121f009 	msr	CPSR_c, r9
4000e780:	e59fa160 	ldr	sl, [pc, #352]	; 4000e8e8 <_tx_thread_info_get+0x188>
4000e784:	e59a0000 	ldr	r0, [sl]
4000e788:	e3500000 	cmp	r0, #0
4000e78c:	0a000032 	beq	4000e85c <_tx_thread_info_get+0xfc>
4000e790:	e59fa154 	ldr	sl, [pc, #340]	; 4000e8ec <_tx_thread_info_get+0x18c>
4000e794:	e59aa000 	ldr	sl, [sl]
4000e798:	e28aa001 	add	sl, sl, #1
4000e79c:	e59fb148 	ldr	fp, [pc, #328]	; 4000e8ec <_tx_thread_info_get+0x18c>
4000e7a0:	e58ba000 	str	sl, [fp]
4000e7a4:	e580a00c 	str	sl, [r0, #12]
4000e7a8:	e59fa140 	ldr	sl, [pc, #320]	; 4000e8f0 <_tx_thread_info_get+0x190>
4000e7ac:	e59aa000 	ldr	sl, [sl]
4000e7b0:	e35a0000 	cmp	sl, #0
4000e7b4:	1a000006 	bne	4000e7d4 <_tx_thread_info_get+0x74>
4000e7b8:	e59fa134 	ldr	sl, [pc, #308]	; 4000e8f4 <_tx_thread_info_get+0x194>
4000e7bc:	e59aa000 	ldr	sl, [sl]
4000e7c0:	e580a000 	str	sl, [r0]
4000e7c4:	e590a000 	ldr	sl, [r0]
4000e7c8:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000e7cc:	e580a004 	str	sl, [r0, #4]
4000e7d0:	ea00000d 	b	4000e80c <_tx_thread_info_get+0xac>
4000e7d4:	e59fa114 	ldr	sl, [pc, #276]	; 4000e8f0 <_tx_thread_info_get+0x190>
4000e7d8:	e59aa000 	ldr	sl, [sl]
4000e7dc:	e59fb114 	ldr	fp, [pc, #276]	; 4000e8f8 <_tx_thread_info_get+0x198>
4000e7e0:	e15a000b 	cmp	sl, fp
4000e7e4:	2a000004 	bcs	4000e7fc <_tx_thread_info_get+0x9c>
4000e7e8:	e3e0a000 	mvn	sl, #0
4000e7ec:	e580a000 	str	sl, [r0]
4000e7f0:	e3a0a000 	mov	sl, #0
4000e7f4:	e580a004 	str	sl, [r0, #4]
4000e7f8:	ea000003 	b	4000e80c <_tx_thread_info_get+0xac>
4000e7fc:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000e8f8 <_tx_thread_info_get+0x198>
4000e800:	e580a000 	str	sl, [r0]
4000e804:	e3a0a000 	mov	sl, #0
4000e808:	e580a004 	str	sl, [r0, #4]
4000e80c:	e3a0a068 	mov	sl, #104	; 0x68
4000e810:	e580a008 	str	sl, [r0, #8]
4000e814:	e580c010 	str	ip, [r0, #16]
4000e818:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000e81c:	e580a014 	str	sl, [r0, #20]
4000e820:	e3a0a000 	mov	sl, #0
4000e824:	e580a018 	str	sl, [r0, #24]
4000e828:	e580a01c 	str	sl, [r0, #28]
4000e82c:	e2800020 	add	r0, r0, #32
4000e830:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000e8fc <_tx_thread_info_get+0x19c>
4000e834:	e59aa000 	ldr	sl, [sl]
4000e838:	e150000a 	cmp	r0, sl
4000e83c:	3a000001 	bcc	4000e848 <_tx_thread_info_get+0xe8>
4000e840:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000e900 <_tx_thread_info_get+0x1a0>
4000e844:	e59a0000 	ldr	r0, [sl]
4000e848:	e59fa098 	ldr	sl, [pc, #152]	; 4000e8e8 <_tx_thread_info_get+0x188>
4000e84c:	e58a0000 	str	r0, [sl]
4000e850:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000e904 <_tx_thread_info_get+0x1a4>
4000e854:	e59aa000 	ldr	sl, [sl]
4000e858:	e58a0020 	str	r0, [sl, #32]
4000e85c:	e3510000 	cmp	r1, #0
4000e860:	0a000001 	beq	4000e86c <_tx_thread_info_get+0x10c>
4000e864:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000e868:	e5810000 	str	r0, [r1]
4000e86c:	e3520000 	cmp	r2, #0
4000e870:	0a000001 	beq	4000e87c <_tx_thread_info_get+0x11c>
4000e874:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000e878:	e5820000 	str	r0, [r2]
4000e87c:	e3530000 	cmp	r3, #0
4000e880:	0a000001 	beq	4000e88c <_tx_thread_info_get+0x12c>
4000e884:	e59c0004 	ldr	r0, [ip, #4]
4000e888:	e5830000 	str	r0, [r3]
4000e88c:	e35e0000 	cmp	lr, #0
4000e890:	0a000001 	beq	4000e89c <_tx_thread_info_get+0x13c>
4000e894:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000e898:	e58e0000 	str	r0, [lr]
4000e89c:	e3540000 	cmp	r4, #0
4000e8a0:	0a000001 	beq	4000e8ac <_tx_thread_info_get+0x14c>
4000e8a4:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000e8a8:	e5840000 	str	r0, [r4]
4000e8ac:	e3550000 	cmp	r5, #0
4000e8b0:	0a000001 	beq	4000e8bc <_tx_thread_info_get+0x15c>
4000e8b4:	e59c0018 	ldr	r0, [ip, #24]
4000e8b8:	e5850000 	str	r0, [r5]
4000e8bc:	e3560000 	cmp	r6, #0
4000e8c0:	0a000001 	beq	4000e8cc <_tx_thread_info_get+0x16c>
4000e8c4:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000e8c8:	e5860000 	str	r0, [r6]
4000e8cc:	e3570000 	cmp	r7, #0
4000e8d0:	0a000001 	beq	4000e8dc <_tx_thread_info_get+0x17c>
4000e8d4:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000e8d8:	e5870000 	str	r0, [r7]
4000e8dc:	e121f008 	msr	CPSR_c, r8
4000e8e0:	e3a00000 	mov	r0, #0
4000e8e4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e8e8:	40030ea4 	.word	0x40030ea4
4000e8ec:	40030ea8 	.word	0x40030ea8
4000e8f0:	40030e30 	.word	0x40030e30
4000e8f4:	40030e38 	.word	0x40030e38
4000e8f8:	f0f0f0f0 	.word	0xf0f0f0f0
4000e8fc:	40030ea0 	.word	0x40030ea0
4000e900:	40030e9c 	.word	0x40030e9c
4000e904:	40030e90 	.word	0x40030e90

4000e908 <_tx_thread_priority_change>:
4000e908:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000e90c:	e1a04000 	mov	r4, r0
4000e910:	e1a05001 	mov	r5, r1
4000e914:	e1a06002 	mov	r6, r2
4000e918:	e10f7000 	mrs	r7, CPSR
4000e91c:	e3878080 	orr	r8, r7, #128	; 0x80
4000e920:	e121f008 	msr	CPSR_c, r8
4000e924:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000e928:	e5860000 	str	r0, [r6]
4000e92c:	e59f1150 	ldr	r1, [pc, #336]	; 4000ea84 <_tx_thread_priority_change+0x17c>
4000e930:	e5910000 	ldr	r0, [r1]
4000e934:	e3500000 	cmp	r0, #0
4000e938:	0a000032 	beq	4000ea08 <_tx_thread_priority_change+0x100>
4000e93c:	e59f1144 	ldr	r1, [pc, #324]	; 4000ea88 <_tx_thread_priority_change+0x180>
4000e940:	e5911000 	ldr	r1, [r1]
4000e944:	e2811001 	add	r1, r1, #1
4000e948:	e59f2138 	ldr	r2, [pc, #312]	; 4000ea88 <_tx_thread_priority_change+0x180>
4000e94c:	e5821000 	str	r1, [r2]
4000e950:	e580100c 	str	r1, [r0, #12]
4000e954:	e59f1130 	ldr	r1, [pc, #304]	; 4000ea8c <_tx_thread_priority_change+0x184>
4000e958:	e5911000 	ldr	r1, [r1]
4000e95c:	e3510000 	cmp	r1, #0
4000e960:	1a000006 	bne	4000e980 <_tx_thread_priority_change+0x78>
4000e964:	e59f1124 	ldr	r1, [pc, #292]	; 4000ea90 <_tx_thread_priority_change+0x188>
4000e968:	e5911000 	ldr	r1, [r1]
4000e96c:	e5801000 	str	r1, [r0]
4000e970:	e5901000 	ldr	r1, [r0]
4000e974:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e978:	e5801004 	str	r1, [r0, #4]
4000e97c:	ea00000d 	b	4000e9b8 <_tx_thread_priority_change+0xb0>
4000e980:	e59f1104 	ldr	r1, [pc, #260]	; 4000ea8c <_tx_thread_priority_change+0x184>
4000e984:	e5911000 	ldr	r1, [r1]
4000e988:	e59f2104 	ldr	r2, [pc, #260]	; 4000ea94 <_tx_thread_priority_change+0x18c>
4000e98c:	e1510002 	cmp	r1, r2
4000e990:	2a000004 	bcs	4000e9a8 <_tx_thread_priority_change+0xa0>
4000e994:	e3e01000 	mvn	r1, #0
4000e998:	e5801000 	str	r1, [r0]
4000e99c:	e3a01000 	mov	r1, #0
4000e9a0:	e5801004 	str	r1, [r0, #4]
4000e9a4:	ea000003 	b	4000e9b8 <_tx_thread_priority_change+0xb0>
4000e9a8:	e59f10e4 	ldr	r1, [pc, #228]	; 4000ea94 <_tx_thread_priority_change+0x18c>
4000e9ac:	e5801000 	str	r1, [r0]
4000e9b0:	e3a01000 	mov	r1, #0
4000e9b4:	e5801004 	str	r1, [r0, #4]
4000e9b8:	e3a0106c 	mov	r1, #108	; 0x6c
4000e9bc:	e5801008 	str	r1, [r0, #8]
4000e9c0:	e5804010 	str	r4, [r0, #16]
4000e9c4:	e5805014 	str	r5, [r0, #20]
4000e9c8:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000e9cc:	e5801018 	str	r1, [r0, #24]
4000e9d0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000e9d4:	e580101c 	str	r1, [r0, #28]
4000e9d8:	e2800020 	add	r0, r0, #32
4000e9dc:	e59f10b4 	ldr	r1, [pc, #180]	; 4000ea98 <_tx_thread_priority_change+0x190>
4000e9e0:	e5911000 	ldr	r1, [r1]
4000e9e4:	e1500001 	cmp	r0, r1
4000e9e8:	3a000001 	bcc	4000e9f4 <_tx_thread_priority_change+0xec>
4000e9ec:	e59f10a8 	ldr	r1, [pc, #168]	; 4000ea9c <_tx_thread_priority_change+0x194>
4000e9f0:	e5910000 	ldr	r0, [r1]
4000e9f4:	e59f1088 	ldr	r1, [pc, #136]	; 4000ea84 <_tx_thread_priority_change+0x17c>
4000e9f8:	e5810000 	str	r0, [r1]
4000e9fc:	e59f109c 	ldr	r1, [pc, #156]	; 4000eaa0 <_tx_thread_priority_change+0x198>
4000ea00:	e5911000 	ldr	r1, [r1]
4000ea04:	e5810020 	str	r0, [r1, #32]
4000ea08:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ea0c:	e3500000 	cmp	r0, #0
4000ea10:	0a000005 	beq	4000ea2c <_tx_thread_priority_change+0x124>
4000ea14:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ea18:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ea1c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ea20:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ea24:	e121f007 	msr	CPSR_c, r7
4000ea28:	ea000013 	b	4000ea7c <_tx_thread_priority_change+0x174>
4000ea2c:	e59f0070 	ldr	r0, [pc, #112]	; 4000eaa4 <_tx_thread_priority_change+0x19c>
4000ea30:	e5900000 	ldr	r0, [r0]
4000ea34:	e2800002 	add	r0, r0, #2
4000ea38:	e59f1064 	ldr	r1, [pc, #100]	; 4000eaa4 <_tx_thread_priority_change+0x19c>
4000ea3c:	e5810000 	str	r0, [r1]
4000ea40:	e3a00003 	mov	r0, #3
4000ea44:	e5840030 	str	r0, [r4, #48]	; 0x30
4000ea48:	e3a00001 	mov	r0, #1
4000ea4c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000ea50:	e3a00000 	mov	r0, #0
4000ea54:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000ea58:	e121f007 	msr	CPSR_c, r7
4000ea5c:	e1a00004 	mov	r0, r4
4000ea60:	ebffe834 	bl	40008b38 <_tx_thread_system_suspend>
4000ea64:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ea68:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ea6c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ea70:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ea74:	e1a00004 	mov	r0, r4
4000ea78:	eb0001d5 	bl	4000f1d4 <_tx_thread_system_resume>
4000ea7c:	e3a00000 	mov	r0, #0
4000ea80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ea84:	40030ea4 	.word	0x40030ea4
4000ea88:	40030ea8 	.word	0x40030ea8
4000ea8c:	40030e30 	.word	0x40030e30
4000ea90:	40030e38 	.word	0x40030e38
4000ea94:	f0f0f0f0 	.word	0xf0f0f0f0
4000ea98:	40030ea0 	.word	0x40030ea0
4000ea9c:	40030e9c 	.word	0x40030e9c
4000eaa0:	40030e90 	.word	0x40030e90
4000eaa4:	40030e54 	.word	0x40030e54

4000eaa8 <_tx_thread_relinquish>:
4000eaa8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000eaac:	e59f02b0 	ldr	r0, [pc, #688]	; 4000ed64 <_tx_thread_relinquish+0x2bc>
4000eab0:	e5900000 	ldr	r0, [r0]
4000eab4:	e58d0000 	str	r0, [sp]
4000eab8:	e59d0000 	ldr	r0, [sp]
4000eabc:	e5900008 	ldr	r0, [r0, #8]
4000eac0:	e59d1000 	ldr	r1, [sp]
4000eac4:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000eac8:	e1500001 	cmp	r0, r1
4000eacc:	2a000003 	bcs	4000eae0 <_tx_thread_relinquish+0x38>
4000ead0:	e59d0000 	ldr	r0, [sp]
4000ead4:	e5900008 	ldr	r0, [r0, #8]
4000ead8:	e59d1000 	ldr	r1, [sp]
4000eadc:	e5810040 	str	r0, [r1, #64]	; 0x40
4000eae0:	e59d0000 	ldr	r0, [sp]
4000eae4:	e590000c 	ldr	r0, [r0, #12]
4000eae8:	e5900000 	ldr	r0, [r0]
4000eaec:	e59f1274 	ldr	r1, [pc, #628]	; 4000ed68 <_tx_thread_relinquish+0x2c0>
4000eaf0:	e1500001 	cmp	r0, r1
4000eaf4:	1a00000a 	bne	4000eb24 <_tx_thread_relinquish+0x7c>
4000eaf8:	e59d0000 	ldr	r0, [sp]
4000eafc:	e5900010 	ldr	r0, [r0, #16]
4000eb00:	e5900001 	ldr	r0, [r0, #1]
4000eb04:	e1500001 	cmp	r0, r1
4000eb08:	1a000005 	bne	4000eb24 <_tx_thread_relinquish+0x7c>
4000eb0c:	e59d0000 	ldr	r0, [sp]
4000eb10:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eb14:	e59d1000 	ldr	r1, [sp]
4000eb18:	e591100c 	ldr	r1, [r1, #12]
4000eb1c:	e1500001 	cmp	r0, r1
4000eb20:	2a000001 	bcs	4000eb2c <_tx_thread_relinquish+0x84>
4000eb24:	e59d0000 	ldr	r0, [sp]
4000eb28:	eb00016a 	bl	4000f0d8 <_tx_thread_stack_error_handler>
4000eb2c:	e59d0000 	ldr	r0, [sp]
4000eb30:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eb34:	e5100004 	ldr	r0, [r0, #-4]
4000eb38:	e59f1228 	ldr	r1, [pc, #552]	; 4000ed68 <_tx_thread_relinquish+0x2c0>
4000eb3c:	e1500001 	cmp	r0, r1
4000eb40:	0a000001 	beq	4000eb4c <_tx_thread_relinquish+0xa4>
4000eb44:	e59d0000 	ldr	r0, [sp]
4000eb48:	eb00012d 	bl	4000f004 <_tx_thread_stack_analyze>
4000eb4c:	e10f4000 	mrs	r4, CPSR
4000eb50:	e3845080 	orr	r5, r4, #128	; 0x80
4000eb54:	e121f005 	msr	CPSR_c, r5
4000eb58:	e59f120c 	ldr	r1, [pc, #524]	; 4000ed6c <_tx_thread_relinquish+0x2c4>
4000eb5c:	e5910000 	ldr	r0, [r1]
4000eb60:	e3500000 	cmp	r0, #0
4000eb64:	0a000031 	beq	4000ec30 <_tx_thread_relinquish+0x188>
4000eb68:	e59f1200 	ldr	r1, [pc, #512]	; 4000ed70 <_tx_thread_relinquish+0x2c8>
4000eb6c:	e5911000 	ldr	r1, [r1]
4000eb70:	e2811001 	add	r1, r1, #1
4000eb74:	e59f21f4 	ldr	r2, [pc, #500]	; 4000ed70 <_tx_thread_relinquish+0x2c8>
4000eb78:	e5821000 	str	r1, [r2]
4000eb7c:	e580100c 	str	r1, [r0, #12]
4000eb80:	e59f11ec 	ldr	r1, [pc, #492]	; 4000ed74 <_tx_thread_relinquish+0x2cc>
4000eb84:	e5911000 	ldr	r1, [r1]
4000eb88:	e3510000 	cmp	r1, #0
4000eb8c:	1a000006 	bne	4000ebac <_tx_thread_relinquish+0x104>
4000eb90:	e59f11cc 	ldr	r1, [pc, #460]	; 4000ed64 <_tx_thread_relinquish+0x2bc>
4000eb94:	e5911000 	ldr	r1, [r1]
4000eb98:	e5801000 	str	r1, [r0]
4000eb9c:	e5901000 	ldr	r1, [r0]
4000eba0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eba4:	e5801004 	str	r1, [r0, #4]
4000eba8:	ea00000d 	b	4000ebe4 <_tx_thread_relinquish+0x13c>
4000ebac:	e59f11c0 	ldr	r1, [pc, #448]	; 4000ed74 <_tx_thread_relinquish+0x2cc>
4000ebb0:	e5911000 	ldr	r1, [r1]
4000ebb4:	e59f21bc 	ldr	r2, [pc, #444]	; 4000ed78 <_tx_thread_relinquish+0x2d0>
4000ebb8:	e1510002 	cmp	r1, r2
4000ebbc:	2a000004 	bcs	4000ebd4 <_tx_thread_relinquish+0x12c>
4000ebc0:	e3e01000 	mvn	r1, #0
4000ebc4:	e5801000 	str	r1, [r0]
4000ebc8:	e3a01000 	mov	r1, #0
4000ebcc:	e5801004 	str	r1, [r0, #4]
4000ebd0:	ea000003 	b	4000ebe4 <_tx_thread_relinquish+0x13c>
4000ebd4:	e59f119c 	ldr	r1, [pc, #412]	; 4000ed78 <_tx_thread_relinquish+0x2d0>
4000ebd8:	e5801000 	str	r1, [r0]
4000ebdc:	e3a01000 	mov	r1, #0
4000ebe0:	e5801004 	str	r1, [r0, #4]
4000ebe4:	e3a0106d 	mov	r1, #109	; 0x6d
4000ebe8:	e5801008 	str	r1, [r0, #8]
4000ebec:	e580d010 	str	sp, [r0, #16]
4000ebf0:	e3a01000 	mov	r1, #0
4000ebf4:	e5801014 	str	r1, [r0, #20]
4000ebf8:	e5801018 	str	r1, [r0, #24]
4000ebfc:	e580101c 	str	r1, [r0, #28]
4000ec00:	e2800020 	add	r0, r0, #32
4000ec04:	e59f1170 	ldr	r1, [pc, #368]	; 4000ed7c <_tx_thread_relinquish+0x2d4>
4000ec08:	e5911000 	ldr	r1, [r1]
4000ec0c:	e1500001 	cmp	r0, r1
4000ec10:	3a000001 	bcc	4000ec1c <_tx_thread_relinquish+0x174>
4000ec14:	e59f1164 	ldr	r1, [pc, #356]	; 4000ed80 <_tx_thread_relinquish+0x2d8>
4000ec18:	e5910000 	ldr	r0, [r1]
4000ec1c:	e59f1148 	ldr	r1, [pc, #328]	; 4000ed6c <_tx_thread_relinquish+0x2c4>
4000ec20:	e5810000 	str	r0, [r1]
4000ec24:	e59f1158 	ldr	r1, [pc, #344]	; 4000ed84 <_tx_thread_relinquish+0x2dc>
4000ec28:	e5911000 	ldr	r1, [r1]
4000ec2c:	e5810020 	str	r0, [r1, #32]
4000ec30:	e59d0000 	ldr	r0, [sp]
4000ec34:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ec38:	e59d0000 	ldr	r0, [sp]
4000ec3c:	e5900020 	ldr	r0, [r0, #32]
4000ec40:	e59d1000 	ldr	r1, [sp]
4000ec44:	e1500001 	cmp	r0, r1
4000ec48:	0a000013 	beq	4000ec9c <_tx_thread_relinquish+0x1f4>
4000ec4c:	e59d0000 	ldr	r0, [sp]
4000ec50:	e5900020 	ldr	r0, [r0, #32]
4000ec54:	e59f112c 	ldr	r1, [pc, #300]	; 4000ed88 <_tx_thread_relinquish+0x2e0>
4000ec58:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ec5c:	e59d0000 	ldr	r0, [sp]
4000ec60:	e5900020 	ldr	r0, [r0, #32]
4000ec64:	e59f1120 	ldr	r1, [pc, #288]	; 4000ed8c <_tx_thread_relinquish+0x2e4>
4000ec68:	e5810000 	str	r0, [r1]
4000ec6c:	e59f011c 	ldr	r0, [pc, #284]	; 4000ed90 <_tx_thread_relinquish+0x2e8>
4000ec70:	e5900000 	ldr	r0, [r0]
4000ec74:	e3500000 	cmp	r0, #0
4000ec78:	0a000007 	beq	4000ec9c <_tx_thread_relinquish+0x1f4>
4000ec7c:	e59f010c 	ldr	r0, [pc, #268]	; 4000ed90 <_tx_thread_relinquish+0x2e8>
4000ec80:	e5900000 	ldr	r0, [r0]
4000ec84:	e59d1000 	ldr	r1, [sp]
4000ec88:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ec8c:	e3a02001 	mov	r2, #1
4000ec90:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ec94:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ed90 <_tx_thread_relinquish+0x2e8>
4000ec98:	e5810000 	str	r0, [r1]
4000ec9c:	e59f00f0 	ldr	r0, [pc, #240]	; 4000ed94 <_tx_thread_relinquish+0x2ec>
4000eca0:	e5900000 	ldr	r0, [r0]
4000eca4:	e1500006 	cmp	r0, r6
4000eca8:	2a000005 	bcs	4000ecc4 <_tx_thread_relinquish+0x21c>
4000ecac:	e59f00d4 	ldr	r0, [pc, #212]	; 4000ed88 <_tx_thread_relinquish+0x2e0>
4000ecb0:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ed94 <_tx_thread_relinquish+0x2ec>
4000ecb4:	e5911000 	ldr	r1, [r1]
4000ecb8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000ecbc:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ed8c <_tx_thread_relinquish+0x2e4>
4000ecc0:	e5810000 	str	r0, [r1]
4000ecc4:	e121f004 	msr	CPSR_c, r4
4000ecc8:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ed8c <_tx_thread_relinquish+0x2e4>
4000eccc:	e5900000 	ldr	r0, [r0]
4000ecd0:	e59d1000 	ldr	r1, [sp]
4000ecd4:	e1500001 	cmp	r0, r1
4000ecd8:	0a000020 	beq	4000ed60 <_tx_thread_relinquish+0x2b8>
4000ecdc:	e59f00a8 	ldr	r0, [pc, #168]	; 4000ed8c <_tx_thread_relinquish+0x2e4>
4000ece0:	e5900000 	ldr	r0, [r0]
4000ece4:	e58d0000 	str	r0, [sp]
4000ece8:	e59d0000 	ldr	r0, [sp]
4000ecec:	e5900008 	ldr	r0, [r0, #8]
4000ecf0:	e59d1000 	ldr	r1, [sp]
4000ecf4:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ecf8:	e1500001 	cmp	r0, r1
4000ecfc:	2a000003 	bcs	4000ed10 <_tx_thread_relinquish+0x268>
4000ed00:	e59d0000 	ldr	r0, [sp]
4000ed04:	e5900008 	ldr	r0, [r0, #8]
4000ed08:	e59d1000 	ldr	r1, [sp]
4000ed0c:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ed10:	e59d0000 	ldr	r0, [sp]
4000ed14:	e590000c 	ldr	r0, [r0, #12]
4000ed18:	e5900000 	ldr	r0, [r0]
4000ed1c:	e59f1044 	ldr	r1, [pc, #68]	; 4000ed68 <_tx_thread_relinquish+0x2c0>
4000ed20:	e1500001 	cmp	r0, r1
4000ed24:	1a00000a 	bne	4000ed54 <_tx_thread_relinquish+0x2ac>
4000ed28:	e59d0000 	ldr	r0, [sp]
4000ed2c:	e5900010 	ldr	r0, [r0, #16]
4000ed30:	e5900001 	ldr	r0, [r0, #1]
4000ed34:	e1500001 	cmp	r0, r1
4000ed38:	1a000005 	bne	4000ed54 <_tx_thread_relinquish+0x2ac>
4000ed3c:	e59d0000 	ldr	r0, [sp]
4000ed40:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ed44:	e59d1000 	ldr	r1, [sp]
4000ed48:	e591100c 	ldr	r1, [r1, #12]
4000ed4c:	e1500001 	cmp	r0, r1
4000ed50:	2a000001 	bcs	4000ed5c <_tx_thread_relinquish+0x2b4>
4000ed54:	e59d0000 	ldr	r0, [sp]
4000ed58:	eb0000de 	bl	4000f0d8 <_tx_thread_stack_error_handler>
4000ed5c:	ebffef86 	bl	4000ab7c <_tx_thread_system_return>
4000ed60:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ed64:	40030e38 	.word	0x40030e38
4000ed68:	efefefef 	.word	0xefefefef
4000ed6c:	40030ea4 	.word	0x40030ea4
4000ed70:	40030ea8 	.word	0x40030ea8
4000ed74:	40030e30 	.word	0x40030e30
4000ed78:	f0f0f0f0 	.word	0xf0f0f0f0
4000ed7c:	40030ea0 	.word	0x40030ea0
4000ed80:	40030e9c 	.word	0x40030e9c
4000ed84:	40030e90 	.word	0x40030e90
4000ed88:	40032874 	.word	0x40032874
4000ed8c:	40030e3c 	.word	0x40030e3c
4000ed90:	40030e4c 	.word	0x40030e4c
4000ed94:	40030e50 	.word	0x40030e50

4000ed98 <_tx_thread_resume>:
4000ed98:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000ed9c:	e1a04000 	mov	r4, r0
4000eda0:	e3a00000 	mov	r0, #0
4000eda4:	e58d0000 	str	r0, [sp]
4000eda8:	e10f5000 	mrs	r5, CPSR
4000edac:	e3856080 	orr	r6, r5, #128	; 0x80
4000edb0:	e121f006 	msr	CPSR_c, r6
4000edb4:	e59f1184 	ldr	r1, [pc, #388]	; 4000ef40 <_tx_thread_resume+0x1a8>
4000edb8:	e5910000 	ldr	r0, [r1]
4000edbc:	e3500000 	cmp	r0, #0
4000edc0:	0a000032 	beq	4000ee90 <_tx_thread_resume+0xf8>
4000edc4:	e59f1178 	ldr	r1, [pc, #376]	; 4000ef44 <_tx_thread_resume+0x1ac>
4000edc8:	e5911000 	ldr	r1, [r1]
4000edcc:	e2811001 	add	r1, r1, #1
4000edd0:	e59f216c 	ldr	r2, [pc, #364]	; 4000ef44 <_tx_thread_resume+0x1ac>
4000edd4:	e5821000 	str	r1, [r2]
4000edd8:	e580100c 	str	r1, [r0, #12]
4000eddc:	e59f1164 	ldr	r1, [pc, #356]	; 4000ef48 <_tx_thread_resume+0x1b0>
4000ede0:	e5911000 	ldr	r1, [r1]
4000ede4:	e3510000 	cmp	r1, #0
4000ede8:	1a000006 	bne	4000ee08 <_tx_thread_resume+0x70>
4000edec:	e59f1158 	ldr	r1, [pc, #344]	; 4000ef4c <_tx_thread_resume+0x1b4>
4000edf0:	e5911000 	ldr	r1, [r1]
4000edf4:	e5801000 	str	r1, [r0]
4000edf8:	e5901000 	ldr	r1, [r0]
4000edfc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ee00:	e5801004 	str	r1, [r0, #4]
4000ee04:	ea00000d 	b	4000ee40 <_tx_thread_resume+0xa8>
4000ee08:	e59f1138 	ldr	r1, [pc, #312]	; 4000ef48 <_tx_thread_resume+0x1b0>
4000ee0c:	e5911000 	ldr	r1, [r1]
4000ee10:	e59f2138 	ldr	r2, [pc, #312]	; 4000ef50 <_tx_thread_resume+0x1b8>
4000ee14:	e1510002 	cmp	r1, r2
4000ee18:	2a000004 	bcs	4000ee30 <_tx_thread_resume+0x98>
4000ee1c:	e3e01000 	mvn	r1, #0
4000ee20:	e5801000 	str	r1, [r0]
4000ee24:	e3a01000 	mov	r1, #0
4000ee28:	e5801004 	str	r1, [r0, #4]
4000ee2c:	ea000003 	b	4000ee40 <_tx_thread_resume+0xa8>
4000ee30:	e59f1118 	ldr	r1, [pc, #280]	; 4000ef50 <_tx_thread_resume+0x1b8>
4000ee34:	e5801000 	str	r1, [r0]
4000ee38:	e3a01000 	mov	r1, #0
4000ee3c:	e5801004 	str	r1, [r0, #4]
4000ee40:	e3a0106f 	mov	r1, #111	; 0x6f
4000ee44:	e5801008 	str	r1, [r0, #8]
4000ee48:	e5804010 	str	r4, [r0, #16]
4000ee4c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ee50:	e5801014 	str	r1, [r0, #20]
4000ee54:	e580d018 	str	sp, [r0, #24]
4000ee58:	e3a01000 	mov	r1, #0
4000ee5c:	e580101c 	str	r1, [r0, #28]
4000ee60:	e2800020 	add	r0, r0, #32
4000ee64:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ef54 <_tx_thread_resume+0x1bc>
4000ee68:	e5911000 	ldr	r1, [r1]
4000ee6c:	e1500001 	cmp	r0, r1
4000ee70:	3a000001 	bcc	4000ee7c <_tx_thread_resume+0xe4>
4000ee74:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ef58 <_tx_thread_resume+0x1c0>
4000ee78:	e5910000 	ldr	r0, [r1]
4000ee7c:	e59f10bc 	ldr	r1, [pc, #188]	; 4000ef40 <_tx_thread_resume+0x1a8>
4000ee80:	e5810000 	str	r0, [r1]
4000ee84:	e59f10d0 	ldr	r1, [pc, #208]	; 4000ef5c <_tx_thread_resume+0x1c4>
4000ee88:	e5911000 	ldr	r1, [r1]
4000ee8c:	e5810020 	str	r0, [r1, #32]
4000ee90:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ee94:	e3500003 	cmp	r0, #3
4000ee98:	1a00001c 	bne	4000ef10 <_tx_thread_resume+0x178>
4000ee9c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ef60 <_tx_thread_resume+0x1c8>
4000eea0:	e5900000 	ldr	r0, [r0]
4000eea4:	e2800001 	add	r0, r0, #1
4000eea8:	e59f10b0 	ldr	r1, [pc, #176]	; 4000ef60 <_tx_thread_resume+0x1c8>
4000eeac:	e5810000 	str	r0, [r1]
4000eeb0:	e121f005 	msr	CPSR_c, r5
4000eeb4:	e59f008c 	ldr	r0, [pc, #140]	; 4000ef48 <_tx_thread_resume+0x1b0>
4000eeb8:	e5900000 	ldr	r0, [r0]
4000eebc:	e59f108c 	ldr	r1, [pc, #140]	; 4000ef50 <_tx_thread_resume+0x1b8>
4000eec0:	e1500001 	cmp	r0, r1
4000eec4:	3a000008 	bcc	4000eeec <_tx_thread_resume+0x154>
4000eec8:	e59f0094 	ldr	r0, [pc, #148]	; 4000ef64 <_tx_thread_resume+0x1cc>
4000eecc:	e5907000 	ldr	r7, [r0]
4000eed0:	e3570000 	cmp	r7, #0
4000eed4:	0a000005 	beq	4000eef0 <_tx_thread_resume+0x158>
4000eed8:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000eedc:	e58d0000 	str	r0, [sp]
4000eee0:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000eee4:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000eee8:	ea000000 	b	4000eef0 <_tx_thread_resume+0x158>
4000eeec:	e3a07000 	mov	r7, #0
4000eef0:	e1a00004 	mov	r0, r4
4000eef4:	eb0000b6 	bl	4000f1d4 <_tx_thread_system_resume>
4000eef8:	e3570000 	cmp	r7, #0
4000eefc:	0a000001 	beq	4000ef08 <_tx_thread_resume+0x170>
4000ef00:	e59d0000 	ldr	r0, [sp]
4000ef04:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000ef08:	e3a08000 	mov	r8, #0
4000ef0c:	ea000009 	b	4000ef38 <_tx_thread_resume+0x1a0>
4000ef10:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000ef14:	e3500000 	cmp	r0, #0
4000ef18:	0a000004 	beq	4000ef30 <_tx_thread_resume+0x198>
4000ef1c:	e3a00000 	mov	r0, #0
4000ef20:	e5840034 	str	r0, [r4, #52]	; 0x34
4000ef24:	e121f005 	msr	CPSR_c, r5
4000ef28:	e3a08019 	mov	r8, #25
4000ef2c:	ea000001 	b	4000ef38 <_tx_thread_resume+0x1a0>
4000ef30:	e121f005 	msr	CPSR_c, r5
4000ef34:	e3a08012 	mov	r8, #18
4000ef38:	e1a00008 	mov	r0, r8
4000ef3c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000ef40:	40030ea4 	.word	0x40030ea4
4000ef44:	40030ea8 	.word	0x40030ea8
4000ef48:	40030e30 	.word	0x40030e30
4000ef4c:	40030e38 	.word	0x40030e38
4000ef50:	f0f0f0f0 	.word	0xf0f0f0f0
4000ef54:	40030ea0 	.word	0x40030ea0
4000ef58:	40030e9c 	.word	0x40030e9c
4000ef5c:	40030e90 	.word	0x40030e90
4000ef60:	40030e54 	.word	0x40030e54
4000ef64:	40030e3c 	.word	0x40030e3c

4000ef68 <_tx_thread_shell_entry>:
4000ef68:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ef6c:	e59f0088 	ldr	r0, [pc, #136]	; 4000effc <_tx_thread_shell_entry+0x94>
4000ef70:	e5907000 	ldr	r7, [r0]
4000ef74:	e10f4000 	mrs	r4, CPSR
4000ef78:	e3845080 	orr	r5, r4, #128	; 0x80
4000ef7c:	e121f005 	msr	CPSR_c, r5
4000ef80:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000ef84:	e121f004 	msr	CPSR_c, r4
4000ef88:	e3560000 	cmp	r6, #0
4000ef8c:	0a000002 	beq	4000ef9c <_tx_thread_shell_entry+0x34>
4000ef90:	e3a01000 	mov	r1, #0
4000ef94:	e1a00007 	mov	r0, r7
4000ef98:	e12fff36 	blx	r6
4000ef9c:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000efa0:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000efa4:	e12fff31 	blx	r1
4000efa8:	e10f4000 	mrs	r4, CPSR
4000efac:	e3845080 	orr	r5, r4, #128	; 0x80
4000efb0:	e121f005 	msr	CPSR_c, r5
4000efb4:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000efb8:	e3a00001 	mov	r0, #1
4000efbc:	e5870030 	str	r0, [r7, #48]	; 0x30
4000efc0:	e5870038 	str	r0, [r7, #56]	; 0x38
4000efc4:	e59f0034 	ldr	r0, [pc, #52]	; 4000f000 <_tx_thread_shell_entry+0x98>
4000efc8:	e5900000 	ldr	r0, [r0]
4000efcc:	e2800001 	add	r0, r0, #1
4000efd0:	e59f1028 	ldr	r1, [pc, #40]	; 4000f000 <_tx_thread_shell_entry+0x98>
4000efd4:	e5810000 	str	r0, [r1]
4000efd8:	e121f004 	msr	CPSR_c, r4
4000efdc:	e3560000 	cmp	r6, #0
4000efe0:	0a000002 	beq	4000eff0 <_tx_thread_shell_entry+0x88>
4000efe4:	e3a01001 	mov	r1, #1
4000efe8:	e1a00007 	mov	r0, r7
4000efec:	e12fff36 	blx	r6
4000eff0:	e1a00007 	mov	r0, r7
4000eff4:	ebffe6cf 	bl	40008b38 <_tx_thread_system_suspend>
4000eff8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000effc:	40030e38 	.word	0x40030e38
4000f000:	40030e54 	.word	0x40030e54

4000f004 <_tx_thread_stack_analyze>:
4000f004:	e92d4070 	push	{r4, r5, r6, lr}
4000f008:	e10f1000 	mrs	r1, CPSR
4000f00c:	e3812080 	orr	r2, r1, #128	; 0x80
4000f010:	e121f002 	msr	CPSR_c, r2
4000f014:	e3500000 	cmp	r0, #0
4000f018:	0a000003 	beq	4000f02c <_tx_thread_stack_analyze+0x28>
4000f01c:	e5905000 	ldr	r5, [r0]
4000f020:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f0d0 <_tx_thread_stack_analyze+0xcc>
4000f024:	e1550006 	cmp	r5, r6
4000f028:	0a000001 	beq	4000f034 <_tx_thread_stack_analyze+0x30>
4000f02c:	e121f001 	msr	CPSR_c, r1
4000f030:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f034:	e590c008 	ldr	ip, [r0, #8]
4000f038:	e590300c 	ldr	r3, [r0, #12]
4000f03c:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f040:	e121f001 	msr	CPSR_c, r1
4000f044:	e24ec004 	sub	ip, lr, #4
4000f048:	e04e6003 	sub	r6, lr, r3
4000f04c:	e1a05146 	asr	r5, r6, #2
4000f050:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f054:	e1a040c6 	asr	r4, r6, #1
4000f058:	e083c104 	add	ip, r3, r4, lsl #2
4000f05c:	e1a00000 	nop			; (mov r0, r0)
4000f060:	e59c5000 	ldr	r5, [ip]
4000f064:	e59f6068 	ldr	r6, [pc, #104]	; 4000f0d4 <_tx_thread_stack_analyze+0xd0>
4000f068:	e1550006 	cmp	r5, r6
4000f06c:	0a000002 	beq	4000f07c <_tx_thread_stack_analyze+0x78>
4000f070:	e1a050a4 	lsr	r5, r4, #1
4000f074:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f078:	ea000001 	b	4000f084 <_tx_thread_stack_analyze+0x80>
4000f07c:	e1a050a4 	lsr	r5, r4, #1
4000f080:	e08cc105 	add	ip, ip, r5, lsl #2
4000f084:	e1a040a4 	lsr	r4, r4, #1
4000f088:	e3540001 	cmp	r4, #1
4000f08c:	8afffff3 	bhi	4000f060 <_tx_thread_stack_analyze+0x5c>
4000f090:	ea000000 	b	4000f098 <_tx_thread_stack_analyze+0x94>
4000f094:	e28cc004 	add	ip, ip, #4
4000f098:	e59c5000 	ldr	r5, [ip]
4000f09c:	e59f6030 	ldr	r6, [pc, #48]	; 4000f0d4 <_tx_thread_stack_analyze+0xd0>
4000f0a0:	e1550006 	cmp	r5, r6
4000f0a4:	0afffffa 	beq	4000f094 <_tx_thread_stack_analyze+0x90>
4000f0a8:	e10f1000 	mrs	r1, CPSR
4000f0ac:	e3812080 	orr	r2, r1, #128	; 0x80
4000f0b0:	e121f002 	msr	CPSR_c, r2
4000f0b4:	e5905000 	ldr	r5, [r0]
4000f0b8:	e59f6010 	ldr	r6, [pc, #16]	; 4000f0d0 <_tx_thread_stack_analyze+0xcc>
4000f0bc:	e1550006 	cmp	r5, r6
4000f0c0:	1a000000 	bne	4000f0c8 <_tx_thread_stack_analyze+0xc4>
4000f0c4:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f0c8:	e121f001 	msr	CPSR_c, r1
4000f0cc:	eaffffd7 	b	4000f030 <_tx_thread_stack_analyze+0x2c>
4000f0d0:	54485244 	.word	0x54485244
4000f0d4:	efefefef 	.word	0xefefefef

4000f0d8 <_tx_thread_stack_error_handler>:
4000f0d8:	e92d4070 	push	{r4, r5, r6, lr}
4000f0dc:	e1a04000 	mov	r4, r0
4000f0e0:	e10f5000 	mrs	r5, CPSR
4000f0e4:	e3856080 	orr	r6, r5, #128	; 0x80
4000f0e8:	e121f006 	msr	CPSR_c, r6
4000f0ec:	e59f002c 	ldr	r0, [pc, #44]	; 4000f120 <_tx_thread_stack_error_handler+0x48>
4000f0f0:	e5900000 	ldr	r0, [r0]
4000f0f4:	e3500000 	cmp	r0, #0
4000f0f8:	0a000004 	beq	4000f110 <_tx_thread_stack_error_handler+0x38>
4000f0fc:	e1a00004 	mov	r0, r4
4000f100:	e59f1018 	ldr	r1, [pc, #24]	; 4000f120 <_tx_thread_stack_error_handler+0x48>
4000f104:	e5911000 	ldr	r1, [r1]
4000f108:	e12fff31 	blx	r1
4000f10c:	ea000001 	b	4000f118 <_tx_thread_stack_error_handler+0x40>
4000f110:	e1a00000 	nop			; (mov r0, r0)
4000f114:	eafffffe 	b	4000f114 <_tx_thread_stack_error_handler+0x3c>
4000f118:	e121f005 	msr	CPSR_c, r5
4000f11c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f120:	40030e5c 	.word	0x40030e5c

4000f124 <_tx_thread_system_preempt_check>:
4000f124:	e92d4010 	push	{r4, lr}
4000f128:	e59f0090 	ldr	r0, [pc, #144]	; 4000f1c0 <_tx_thread_system_preempt_check+0x9c>
4000f12c:	e5900000 	ldr	r0, [r0]
4000f130:	e59f108c 	ldr	r1, [pc, #140]	; 4000f1c4 <_tx_thread_system_preempt_check+0xa0>
4000f134:	e5911000 	ldr	r1, [r1]
4000f138:	e1500001 	cmp	r0, r1
4000f13c:	0a00001e 	beq	4000f1bc <_tx_thread_system_preempt_check+0x98>
4000f140:	e59f0080 	ldr	r0, [pc, #128]	; 4000f1c8 <_tx_thread_system_preempt_check+0xa4>
4000f144:	e5900000 	ldr	r0, [r0]
4000f148:	e59f107c 	ldr	r1, [pc, #124]	; 4000f1cc <_tx_thread_system_preempt_check+0xa8>
4000f14c:	e5911000 	ldr	r1, [r1]
4000f150:	e1900001 	orrs	r0, r0, r1
4000f154:	1a000018 	bne	4000f1bc <_tx_thread_system_preempt_check+0x98>
4000f158:	e59f0064 	ldr	r0, [pc, #100]	; 4000f1c4 <_tx_thread_system_preempt_check+0xa0>
4000f15c:	e5904000 	ldr	r4, [r0]
4000f160:	e5940008 	ldr	r0, [r4, #8]
4000f164:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f168:	e1500001 	cmp	r0, r1
4000f16c:	2a000001 	bcs	4000f178 <_tx_thread_system_preempt_check+0x54>
4000f170:	e5940008 	ldr	r0, [r4, #8]
4000f174:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f178:	e594000c 	ldr	r0, [r4, #12]
4000f17c:	e5900000 	ldr	r0, [r0]
4000f180:	e59f1048 	ldr	r1, [pc, #72]	; 4000f1d0 <_tx_thread_system_preempt_check+0xac>
4000f184:	e1500001 	cmp	r0, r1
4000f188:	1a000007 	bne	4000f1ac <_tx_thread_system_preempt_check+0x88>
4000f18c:	e5940010 	ldr	r0, [r4, #16]
4000f190:	e5900001 	ldr	r0, [r0, #1]
4000f194:	e1500001 	cmp	r0, r1
4000f198:	1a000003 	bne	4000f1ac <_tx_thread_system_preempt_check+0x88>
4000f19c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f1a0:	e594100c 	ldr	r1, [r4, #12]
4000f1a4:	e1500001 	cmp	r0, r1
4000f1a8:	2a000001 	bcs	4000f1b4 <_tx_thread_system_preempt_check+0x90>
4000f1ac:	e1a00004 	mov	r0, r4
4000f1b0:	ebffffc8 	bl	4000f0d8 <_tx_thread_stack_error_handler>
4000f1b4:	ebffee70 	bl	4000ab7c <_tx_thread_system_return>
4000f1b8:	e1a00000 	nop			; (mov r0, r0)
4000f1bc:	e8bd8010 	pop	{r4, pc}
4000f1c0:	40030e38 	.word	0x40030e38
4000f1c4:	40030e3c 	.word	0x40030e3c
4000f1c8:	40030e30 	.word	0x40030e30
4000f1cc:	40030e54 	.word	0x40030e54
4000f1d0:	efefefef 	.word	0xefefefef

4000f1d4 <_tx_thread_system_resume>:
4000f1d4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f1d8:	e1a04000 	mov	r4, r0
4000f1dc:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f1e0:	e3500000 	cmp	r0, #0
4000f1e4:	0a000002 	beq	4000f1f4 <_tx_thread_system_resume+0x20>
4000f1e8:	e284004c 	add	r0, r4, #76	; 0x4c
4000f1ec:	eb000325 	bl	4000fe88 <_tx_timer_system_deactivate>
4000f1f0:	ea000001 	b	4000f1fc <_tx_thread_system_resume+0x28>
4000f1f4:	e3a00000 	mov	r0, #0
4000f1f8:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f1fc:	e5940008 	ldr	r0, [r4, #8]
4000f200:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f204:	e1500001 	cmp	r0, r1
4000f208:	2a000001 	bcs	4000f214 <_tx_thread_system_resume+0x40>
4000f20c:	e5940008 	ldr	r0, [r4, #8]
4000f210:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f214:	e594000c 	ldr	r0, [r4, #12]
4000f218:	e5900000 	ldr	r0, [r0]
4000f21c:	e59f133c 	ldr	r1, [pc, #828]	; 4000f560 <_tx_thread_system_resume+0x38c>
4000f220:	e1500001 	cmp	r0, r1
4000f224:	1a000007 	bne	4000f248 <_tx_thread_system_resume+0x74>
4000f228:	e5940010 	ldr	r0, [r4, #16]
4000f22c:	e5900001 	ldr	r0, [r0, #1]
4000f230:	e1500001 	cmp	r0, r1
4000f234:	1a000003 	bne	4000f248 <_tx_thread_system_resume+0x74>
4000f238:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f23c:	e594100c 	ldr	r1, [r4, #12]
4000f240:	e1500001 	cmp	r0, r1
4000f244:	2a000001 	bcs	4000f250 <_tx_thread_system_resume+0x7c>
4000f248:	e1a00004 	mov	r0, r4
4000f24c:	ebffffa1 	bl	4000f0d8 <_tx_thread_stack_error_handler>
4000f250:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f254:	e5100004 	ldr	r0, [r0, #-4]
4000f258:	e59f1300 	ldr	r1, [pc, #768]	; 4000f560 <_tx_thread_system_resume+0x38c>
4000f25c:	e1500001 	cmp	r0, r1
4000f260:	0a000001 	beq	4000f26c <_tx_thread_system_resume+0x98>
4000f264:	e1a00004 	mov	r0, r4
4000f268:	ebffff65 	bl	4000f004 <_tx_thread_stack_analyze>
4000f26c:	e10f5000 	mrs	r5, CPSR
4000f270:	e3856080 	orr	r6, r5, #128	; 0x80
4000f274:	e121f006 	msr	CPSR_c, r6
4000f278:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f564 <_tx_thread_system_resume+0x390>
4000f27c:	e5900000 	ldr	r0, [r0]
4000f280:	e2400001 	sub	r0, r0, #1
4000f284:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f564 <_tx_thread_system_resume+0x390>
4000f288:	e5810000 	str	r0, [r1]
4000f28c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f290:	e3500000 	cmp	r0, #0
4000f294:	0a000009 	beq	4000f2c0 <_tx_thread_system_resume+0xec>
4000f298:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f29c:	e3500001 	cmp	r0, #1
4000f2a0:	0a000084 	beq	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f2a4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f2a8:	e3500002 	cmp	r0, #2
4000f2ac:	0a000081 	beq	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f2b0:	e3a00000 	mov	r0, #0
4000f2b4:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f2b8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f2bc:	ea00007d 	b	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f2c0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f2c4:	e3500000 	cmp	r0, #0
4000f2c8:	0a00007a 	beq	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f2cc:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f2d0:	e3500000 	cmp	r0, #0
4000f2d4:	0a000004 	beq	4000f2ec <_tx_thread_system_resume+0x118>
4000f2d8:	e3a00000 	mov	r0, #0
4000f2dc:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f2e0:	e3a00003 	mov	r0, #3
4000f2e4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f2e8:	ea000072 	b	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f2ec:	e59f1274 	ldr	r1, [pc, #628]	; 4000f568 <_tx_thread_system_resume+0x394>
4000f2f0:	e5910000 	ldr	r0, [r1]
4000f2f4:	e3500000 	cmp	r0, #0
4000f2f8:	0a000032 	beq	4000f3c8 <_tx_thread_system_resume+0x1f4>
4000f2fc:	e59f1268 	ldr	r1, [pc, #616]	; 4000f56c <_tx_thread_system_resume+0x398>
4000f300:	e5911000 	ldr	r1, [r1]
4000f304:	e2811001 	add	r1, r1, #1
4000f308:	e59f225c 	ldr	r2, [pc, #604]	; 4000f56c <_tx_thread_system_resume+0x398>
4000f30c:	e5821000 	str	r1, [r2]
4000f310:	e580100c 	str	r1, [r0, #12]
4000f314:	e59f1254 	ldr	r1, [pc, #596]	; 4000f570 <_tx_thread_system_resume+0x39c>
4000f318:	e5911000 	ldr	r1, [r1]
4000f31c:	e3510000 	cmp	r1, #0
4000f320:	1a000006 	bne	4000f340 <_tx_thread_system_resume+0x16c>
4000f324:	e59f1248 	ldr	r1, [pc, #584]	; 4000f574 <_tx_thread_system_resume+0x3a0>
4000f328:	e5911000 	ldr	r1, [r1]
4000f32c:	e5801000 	str	r1, [r0]
4000f330:	e5901000 	ldr	r1, [r0]
4000f334:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f338:	e5801004 	str	r1, [r0, #4]
4000f33c:	ea00000d 	b	4000f378 <_tx_thread_system_resume+0x1a4>
4000f340:	e59f1228 	ldr	r1, [pc, #552]	; 4000f570 <_tx_thread_system_resume+0x39c>
4000f344:	e5911000 	ldr	r1, [r1]
4000f348:	e59f2228 	ldr	r2, [pc, #552]	; 4000f578 <_tx_thread_system_resume+0x3a4>
4000f34c:	e1510002 	cmp	r1, r2
4000f350:	2a000004 	bcs	4000f368 <_tx_thread_system_resume+0x194>
4000f354:	e3e01000 	mvn	r1, #0
4000f358:	e5801000 	str	r1, [r0]
4000f35c:	e3a01000 	mov	r1, #0
4000f360:	e5801004 	str	r1, [r0, #4]
4000f364:	ea000003 	b	4000f378 <_tx_thread_system_resume+0x1a4>
4000f368:	e59f1208 	ldr	r1, [pc, #520]	; 4000f578 <_tx_thread_system_resume+0x3a4>
4000f36c:	e5801000 	str	r1, [r0]
4000f370:	e3a01000 	mov	r1, #0
4000f374:	e5801004 	str	r1, [r0, #4]
4000f378:	e3a01001 	mov	r1, #1
4000f37c:	e5801008 	str	r1, [r0, #8]
4000f380:	e5804010 	str	r4, [r0, #16]
4000f384:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f388:	e5801014 	str	r1, [r0, #20]
4000f38c:	e580d018 	str	sp, [r0, #24]
4000f390:	e3a01000 	mov	r1, #0
4000f394:	e580101c 	str	r1, [r0, #28]
4000f398:	e2800020 	add	r0, r0, #32
4000f39c:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f57c <_tx_thread_system_resume+0x3a8>
4000f3a0:	e5911000 	ldr	r1, [r1]
4000f3a4:	e1500001 	cmp	r0, r1
4000f3a8:	3a000001 	bcc	4000f3b4 <_tx_thread_system_resume+0x1e0>
4000f3ac:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f580 <_tx_thread_system_resume+0x3ac>
4000f3b0:	e5910000 	ldr	r0, [r1]
4000f3b4:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f568 <_tx_thread_system_resume+0x394>
4000f3b8:	e5810000 	str	r0, [r1]
4000f3bc:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f584 <_tx_thread_system_resume+0x3b0>
4000f3c0:	e5911000 	ldr	r1, [r1]
4000f3c4:	e5810020 	str	r0, [r1, #32]
4000f3c8:	e3a00000 	mov	r0, #0
4000f3cc:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f3d0:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f3d4:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f588 <_tx_thread_system_resume+0x3b4>
4000f3d8:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f3dc:	e3580000 	cmp	r8, #0
4000f3e0:	0a000005 	beq	4000f3fc <_tx_thread_system_resume+0x228>
4000f3e4:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f3e8:	e5894020 	str	r4, [r9, #32]
4000f3ec:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f3f0:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f3f4:	e5848020 	str	r8, [r4, #32]
4000f3f8:	ea00002e 	b	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f3fc:	e59f0184 	ldr	r0, [pc, #388]	; 4000f588 <_tx_thread_system_resume+0x3b4>
4000f400:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f404:	e5844020 	str	r4, [r4, #32]
4000f408:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f40c:	e59f0178 	ldr	r0, [pc, #376]	; 4000f58c <_tx_thread_system_resume+0x3b8>
4000f410:	e5900000 	ldr	r0, [r0]
4000f414:	e3a01001 	mov	r1, #1
4000f418:	e1800711 	orr	r0, r0, r1, lsl r7
4000f41c:	e59f1168 	ldr	r1, [pc, #360]	; 4000f58c <_tx_thread_system_resume+0x3b8>
4000f420:	e5810000 	str	r0, [r1]
4000f424:	e59f0164 	ldr	r0, [pc, #356]	; 4000f590 <_tx_thread_system_resume+0x3bc>
4000f428:	e5900000 	ldr	r0, [r0]
4000f42c:	e58d0000 	str	r0, [sp]
4000f430:	e59d0000 	ldr	r0, [sp]
4000f434:	e3500000 	cmp	r0, #0
4000f438:	1a000004 	bne	4000f450 <_tx_thread_system_resume+0x27c>
4000f43c:	e59f014c 	ldr	r0, [pc, #332]	; 4000f590 <_tx_thread_system_resume+0x3bc>
4000f440:	e5804000 	str	r4, [r0]
4000f444:	e59f0148 	ldr	r0, [pc, #328]	; 4000f594 <_tx_thread_system_resume+0x3c0>
4000f448:	e5807000 	str	r7, [r0]
4000f44c:	ea000019 	b	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f450:	e59f013c 	ldr	r0, [pc, #316]	; 4000f594 <_tx_thread_system_resume+0x3c0>
4000f454:	e5900000 	ldr	r0, [r0]
4000f458:	e1570000 	cmp	r7, r0
4000f45c:	2a000015 	bcs	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f460:	e59f012c 	ldr	r0, [pc, #300]	; 4000f594 <_tx_thread_system_resume+0x3c0>
4000f464:	e5807000 	str	r7, [r0]
4000f468:	e59d0000 	ldr	r0, [sp]
4000f46c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f470:	e1500007 	cmp	r0, r7
4000f474:	9a00000f 	bls	4000f4b8 <_tx_thread_system_resume+0x2e4>
4000f478:	e59d0000 	ldr	r0, [sp]
4000f47c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f480:	e59d1000 	ldr	r1, [sp]
4000f484:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f488:	e1500001 	cmp	r0, r1
4000f48c:	0a000007 	beq	4000f4b0 <_tx_thread_system_resume+0x2dc>
4000f490:	e59f0100 	ldr	r0, [pc, #256]	; 4000f598 <_tx_thread_system_resume+0x3c4>
4000f494:	e5900000 	ldr	r0, [r0]
4000f498:	e59d1000 	ldr	r1, [sp]
4000f49c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f4a0:	e3a02001 	mov	r2, #1
4000f4a4:	e1800112 	orr	r0, r0, r2, lsl r1
4000f4a8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f598 <_tx_thread_system_resume+0x3c4>
4000f4ac:	e5810000 	str	r0, [r1]
4000f4b0:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f590 <_tx_thread_system_resume+0x3bc>
4000f4b4:	e5804000 	str	r4, [r0]
4000f4b8:	e121f005 	msr	CPSR_c, r5
4000f4bc:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f574 <_tx_thread_system_resume+0x3a0>
4000f4c0:	e5900000 	ldr	r0, [r0]
4000f4c4:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f590 <_tx_thread_system_resume+0x3bc>
4000f4c8:	e5911000 	ldr	r1, [r1]
4000f4cc:	e1500001 	cmp	r0, r1
4000f4d0:	0a000021 	beq	4000f55c <_tx_thread_system_resume+0x388>
4000f4d4:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f590 <_tx_thread_system_resume+0x3bc>
4000f4d8:	e5900000 	ldr	r0, [r0]
4000f4dc:	e1540000 	cmp	r4, r0
4000f4e0:	0a000016 	beq	4000f540 <_tx_thread_system_resume+0x36c>
4000f4e4:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f590 <_tx_thread_system_resume+0x3bc>
4000f4e8:	e5904000 	ldr	r4, [r0]
4000f4ec:	e5940008 	ldr	r0, [r4, #8]
4000f4f0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f4f4:	e1500001 	cmp	r0, r1
4000f4f8:	2a000001 	bcs	4000f504 <_tx_thread_system_resume+0x330>
4000f4fc:	e5940008 	ldr	r0, [r4, #8]
4000f500:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f504:	e594000c 	ldr	r0, [r4, #12]
4000f508:	e5900000 	ldr	r0, [r0]
4000f50c:	e59f104c 	ldr	r1, [pc, #76]	; 4000f560 <_tx_thread_system_resume+0x38c>
4000f510:	e1500001 	cmp	r0, r1
4000f514:	1a000007 	bne	4000f538 <_tx_thread_system_resume+0x364>
4000f518:	e5940010 	ldr	r0, [r4, #16]
4000f51c:	e5900001 	ldr	r0, [r0, #1]
4000f520:	e1500001 	cmp	r0, r1
4000f524:	1a000003 	bne	4000f538 <_tx_thread_system_resume+0x364>
4000f528:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f52c:	e594100c 	ldr	r1, [r4, #12]
4000f530:	e1500001 	cmp	r0, r1
4000f534:	2a000001 	bcs	4000f540 <_tx_thread_system_resume+0x36c>
4000f538:	e1a00004 	mov	r0, r4
4000f53c:	ebfffee5 	bl	4000f0d8 <_tx_thread_stack_error_handler>
4000f540:	e59f0028 	ldr	r0, [pc, #40]	; 4000f570 <_tx_thread_system_resume+0x39c>
4000f544:	e5900000 	ldr	r0, [r0]
4000f548:	e59f1014 	ldr	r1, [pc, #20]	; 4000f564 <_tx_thread_system_resume+0x390>
4000f54c:	e5911000 	ldr	r1, [r1]
4000f550:	e1900001 	orrs	r0, r0, r1
4000f554:	1a000000 	bne	4000f55c <_tx_thread_system_resume+0x388>
4000f558:	ebffed87 	bl	4000ab7c <_tx_thread_system_return>
4000f55c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f560:	efefefef 	.word	0xefefefef
4000f564:	40030e54 	.word	0x40030e54
4000f568:	40030ea4 	.word	0x40030ea4
4000f56c:	40030ea8 	.word	0x40030ea8
4000f570:	40030e30 	.word	0x40030e30
4000f574:	40030e38 	.word	0x40030e38
4000f578:	f0f0f0f0 	.word	0xf0f0f0f0
4000f57c:	40030ea0 	.word	0x40030ea0
4000f580:	40030e9c 	.word	0x40030e9c
4000f584:	40030e90 	.word	0x40030e90
4000f588:	40032874 	.word	0x40032874
4000f58c:	40030e48 	.word	0x40030e48
4000f590:	40030e3c 	.word	0x40030e3c
4000f594:	40030e50 	.word	0x40030e50
4000f598:	40030e4c 	.word	0x40030e4c

4000f59c <_tx_thread_time_slice>:
4000f59c:	e92d4070 	push	{r4, r5, r6, lr}
4000f5a0:	e59f0140 	ldr	r0, [pc, #320]	; 4000f6e8 <_tx_thread_time_slice+0x14c>
4000f5a4:	e5906000 	ldr	r6, [r0]
4000f5a8:	e5960008 	ldr	r0, [r6, #8]
4000f5ac:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f5b0:	e1500001 	cmp	r0, r1
4000f5b4:	2a000001 	bcs	4000f5c0 <_tx_thread_time_slice+0x24>
4000f5b8:	e5960008 	ldr	r0, [r6, #8]
4000f5bc:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f5c0:	e596000c 	ldr	r0, [r6, #12]
4000f5c4:	e5900000 	ldr	r0, [r0]
4000f5c8:	e59f111c 	ldr	r1, [pc, #284]	; 4000f6ec <_tx_thread_time_slice+0x150>
4000f5cc:	e1500001 	cmp	r0, r1
4000f5d0:	1a000007 	bne	4000f5f4 <_tx_thread_time_slice+0x58>
4000f5d4:	e5960010 	ldr	r0, [r6, #16]
4000f5d8:	e5900001 	ldr	r0, [r0, #1]
4000f5dc:	e1500001 	cmp	r0, r1
4000f5e0:	1a000003 	bne	4000f5f4 <_tx_thread_time_slice+0x58>
4000f5e4:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f5e8:	e596100c 	ldr	r1, [r6, #12]
4000f5ec:	e1500001 	cmp	r0, r1
4000f5f0:	2a000001 	bcs	4000f5fc <_tx_thread_time_slice+0x60>
4000f5f4:	e1a00006 	mov	r0, r6
4000f5f8:	ebfffeb6 	bl	4000f0d8 <_tx_thread_stack_error_handler>
4000f5fc:	e10f4000 	mrs	r4, CPSR
4000f600:	e3845080 	orr	r5, r4, #128	; 0x80
4000f604:	e121f005 	msr	CPSR_c, r5
4000f608:	e3a00000 	mov	r0, #0
4000f60c:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f6f0 <_tx_thread_time_slice+0x154>
4000f610:	e5810000 	str	r0, [r1]
4000f614:	e3560000 	cmp	r6, #0
4000f618:	0a000030 	beq	4000f6e0 <_tx_thread_time_slice+0x144>
4000f61c:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f620:	e3500000 	cmp	r0, #0
4000f624:	1a00002d 	bne	4000f6e0 <_tx_thread_time_slice+0x144>
4000f628:	e596001c 	ldr	r0, [r6, #28]
4000f62c:	e5860018 	str	r0, [r6, #24]
4000f630:	e5960020 	ldr	r0, [r6, #32]
4000f634:	e1500006 	cmp	r0, r6
4000f638:	0a000025 	beq	4000f6d4 <_tx_thread_time_slice+0x138>
4000f63c:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f640:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f644:	e1500001 	cmp	r0, r1
4000f648:	1a000021 	bne	4000f6d4 <_tx_thread_time_slice+0x138>
4000f64c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f6f4 <_tx_thread_time_slice+0x158>
4000f650:	e5960020 	ldr	r0, [r6, #32]
4000f654:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f658:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f65c:	e2820000 	add	r0, r2, #0
4000f660:	e59f1090 	ldr	r1, [pc, #144]	; 4000f6f8 <_tx_thread_time_slice+0x15c>
4000f664:	e5911000 	ldr	r1, [r1]
4000f668:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f66c:	e59f1088 	ldr	r1, [pc, #136]	; 4000f6fc <_tx_thread_time_slice+0x160>
4000f670:	e5810000 	str	r0, [r1]
4000f674:	e2810000 	add	r0, r1, #0
4000f678:	e5906000 	ldr	r6, [r0]
4000f67c:	e5960008 	ldr	r0, [r6, #8]
4000f680:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f684:	e1500001 	cmp	r0, r1
4000f688:	2a000001 	bcs	4000f694 <_tx_thread_time_slice+0xf8>
4000f68c:	e5960008 	ldr	r0, [r6, #8]
4000f690:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f694:	e596000c 	ldr	r0, [r6, #12]
4000f698:	e5900000 	ldr	r0, [r0]
4000f69c:	e59f1048 	ldr	r1, [pc, #72]	; 4000f6ec <_tx_thread_time_slice+0x150>
4000f6a0:	e1500001 	cmp	r0, r1
4000f6a4:	1a000007 	bne	4000f6c8 <_tx_thread_time_slice+0x12c>
4000f6a8:	e5960010 	ldr	r0, [r6, #16]
4000f6ac:	e5900001 	ldr	r0, [r0, #1]
4000f6b0:	e1500001 	cmp	r0, r1
4000f6b4:	1a000003 	bne	4000f6c8 <_tx_thread_time_slice+0x12c>
4000f6b8:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f6bc:	e596100c 	ldr	r1, [r6, #12]
4000f6c0:	e1500001 	cmp	r0, r1
4000f6c4:	2a000005 	bcs	4000f6e0 <_tx_thread_time_slice+0x144>
4000f6c8:	e1a00006 	mov	r0, r6
4000f6cc:	ebfffe81 	bl	4000f0d8 <_tx_thread_stack_error_handler>
4000f6d0:	ea000002 	b	4000f6e0 <_tx_thread_time_slice+0x144>
4000f6d4:	e59f1024 	ldr	r1, [pc, #36]	; 4000f700 <_tx_thread_time_slice+0x164>
4000f6d8:	e5960018 	ldr	r0, [r6, #24]
4000f6dc:	e5810000 	str	r0, [r1]
4000f6e0:	e121f004 	msr	CPSR_c, r4
4000f6e4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f6e8:	40030e38 	.word	0x40030e38
4000f6ec:	efefefef 	.word	0xefefefef
4000f6f0:	40030e68 	.word	0x40030e68
4000f6f4:	40032874 	.word	0x40032874
4000f6f8:	40030e50 	.word	0x40030e50
4000f6fc:	40030e3c 	.word	0x40030e3c
4000f700:	40030e64 	.word	0x40030e64

4000f704 <_tx_thread_timeout>:
4000f704:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f708:	e1a04000 	mov	r4, r0
4000f70c:	e1a08004 	mov	r8, r4
4000f710:	e10f5000 	mrs	r5, CPSR
4000f714:	e3856080 	orr	r6, r5, #128	; 0x80
4000f718:	e121f006 	msr	CPSR_c, r6
4000f71c:	e1a04008 	mov	r4, r8
4000f720:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000f724:	e3500004 	cmp	r0, #4
4000f728:	1a000008 	bne	4000f750 <_tx_thread_timeout+0x4c>
4000f72c:	e59f0038 	ldr	r0, [pc, #56]	; 4000f76c <_tx_thread_timeout+0x68>
4000f730:	e5900000 	ldr	r0, [r0]
4000f734:	e2800001 	add	r0, r0, #1
4000f738:	e59f102c 	ldr	r1, [pc, #44]	; 4000f76c <_tx_thread_timeout+0x68>
4000f73c:	e5810000 	str	r0, [r1]
4000f740:	e121f005 	msr	CPSR_c, r5
4000f744:	e1a00008 	mov	r0, r8
4000f748:	ebfffea1 	bl	4000f1d4 <_tx_thread_system_resume>
4000f74c:	ea000005 	b	4000f768 <_tx_thread_timeout+0x64>
4000f750:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000f754:	e121f005 	msr	CPSR_c, r5
4000f758:	e3570000 	cmp	r7, #0
4000f75c:	0a000001 	beq	4000f768 <_tx_thread_timeout+0x64>
4000f760:	e1a00008 	mov	r0, r8
4000f764:	e12fff37 	blx	r7
4000f768:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f76c:	40030e54 	.word	0x40030e54

4000f770 <_tx_timer_activate>:
4000f770:	e92d4070 	push	{r4, r5, r6, lr}
4000f774:	e1a04000 	mov	r4, r0
4000f778:	e10f5000 	mrs	r5, CPSR
4000f77c:	e3856080 	orr	r6, r5, #128	; 0x80
4000f780:	e121f006 	msr	CPSR_c, r6
4000f784:	e59f1104 	ldr	r1, [pc, #260]	; 4000f890 <_tx_timer_activate+0x120>
4000f788:	e5910000 	ldr	r0, [r1]
4000f78c:	e3500000 	cmp	r0, #0
4000f790:	0a000031 	beq	4000f85c <_tx_timer_activate+0xec>
4000f794:	e59f10f8 	ldr	r1, [pc, #248]	; 4000f894 <_tx_timer_activate+0x124>
4000f798:	e5911000 	ldr	r1, [r1]
4000f79c:	e2811001 	add	r1, r1, #1
4000f7a0:	e59f20ec 	ldr	r2, [pc, #236]	; 4000f894 <_tx_timer_activate+0x124>
4000f7a4:	e5821000 	str	r1, [r2]
4000f7a8:	e580100c 	str	r1, [r0, #12]
4000f7ac:	e59f10e4 	ldr	r1, [pc, #228]	; 4000f898 <_tx_timer_activate+0x128>
4000f7b0:	e5911000 	ldr	r1, [r1]
4000f7b4:	e3510000 	cmp	r1, #0
4000f7b8:	1a000006 	bne	4000f7d8 <_tx_timer_activate+0x68>
4000f7bc:	e59f10d8 	ldr	r1, [pc, #216]	; 4000f89c <_tx_timer_activate+0x12c>
4000f7c0:	e5911000 	ldr	r1, [r1]
4000f7c4:	e5801000 	str	r1, [r0]
4000f7c8:	e5901000 	ldr	r1, [r0]
4000f7cc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f7d0:	e5801004 	str	r1, [r0, #4]
4000f7d4:	ea00000d 	b	4000f810 <_tx_timer_activate+0xa0>
4000f7d8:	e59f10b8 	ldr	r1, [pc, #184]	; 4000f898 <_tx_timer_activate+0x128>
4000f7dc:	e5911000 	ldr	r1, [r1]
4000f7e0:	e59f20b8 	ldr	r2, [pc, #184]	; 4000f8a0 <_tx_timer_activate+0x130>
4000f7e4:	e1510002 	cmp	r1, r2
4000f7e8:	2a000004 	bcs	4000f800 <_tx_timer_activate+0x90>
4000f7ec:	e3e01000 	mvn	r1, #0
4000f7f0:	e5801000 	str	r1, [r0]
4000f7f4:	e3a01000 	mov	r1, #0
4000f7f8:	e5801004 	str	r1, [r0, #4]
4000f7fc:	ea000003 	b	4000f810 <_tx_timer_activate+0xa0>
4000f800:	e59f1098 	ldr	r1, [pc, #152]	; 4000f8a0 <_tx_timer_activate+0x130>
4000f804:	e5801000 	str	r1, [r0]
4000f808:	e3a01000 	mov	r1, #0
4000f80c:	e5801004 	str	r1, [r0, #4]
4000f810:	e3a0107a 	mov	r1, #122	; 0x7a
4000f814:	e5801008 	str	r1, [r0, #8]
4000f818:	e5804010 	str	r4, [r0, #16]
4000f81c:	e3a01000 	mov	r1, #0
4000f820:	e5801014 	str	r1, [r0, #20]
4000f824:	e5801018 	str	r1, [r0, #24]
4000f828:	e580101c 	str	r1, [r0, #28]
4000f82c:	e2800020 	add	r0, r0, #32
4000f830:	e59f106c 	ldr	r1, [pc, #108]	; 4000f8a4 <_tx_timer_activate+0x134>
4000f834:	e5911000 	ldr	r1, [r1]
4000f838:	e1500001 	cmp	r0, r1
4000f83c:	3a000001 	bcc	4000f848 <_tx_timer_activate+0xd8>
4000f840:	e59f1060 	ldr	r1, [pc, #96]	; 4000f8a8 <_tx_timer_activate+0x138>
4000f844:	e5910000 	ldr	r0, [r1]
4000f848:	e59f1040 	ldr	r1, [pc, #64]	; 4000f890 <_tx_timer_activate+0x120>
4000f84c:	e5810000 	str	r0, [r1]
4000f850:	e59f1054 	ldr	r1, [pc, #84]	; 4000f8ac <_tx_timer_activate+0x13c>
4000f854:	e5911000 	ldr	r1, [r1]
4000f858:	e5810020 	str	r0, [r1, #32]
4000f85c:	e121f005 	msr	CPSR_c, r5
4000f860:	e5940020 	ldr	r0, [r4, #32]
4000f864:	e3500000 	cmp	r0, #0
4000f868:	1a000002 	bne	4000f878 <_tx_timer_activate+0x108>
4000f86c:	e5940008 	ldr	r0, [r4, #8]
4000f870:	e3500000 	cmp	r0, #0
4000f874:	1a000001 	bne	4000f880 <_tx_timer_activate+0x110>
4000f878:	e3a00017 	mov	r0, #23
4000f87c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f880:	e2840008 	add	r0, r4, #8
4000f884:	ebffe6c7 	bl	400093a8 <_tx_timer_system_activate>
4000f888:	e3a00000 	mov	r0, #0
4000f88c:	eafffffa 	b	4000f87c <_tx_timer_activate+0x10c>
4000f890:	40030ea4 	.word	0x40030ea4
4000f894:	40030ea8 	.word	0x40030ea8
4000f898:	40030e30 	.word	0x40030e30
4000f89c:	40030e38 	.word	0x40030e38
4000f8a0:	f0f0f0f0 	.word	0xf0f0f0f0
4000f8a4:	40030ea0 	.word	0x40030ea0
4000f8a8:	40030e9c 	.word	0x40030e9c
4000f8ac:	40030e90 	.word	0x40030e90

4000f8b0 <_tx_timer_change>:
4000f8b0:	e92d4030 	push	{r4, r5, lr}
4000f8b4:	e1a03000 	mov	r3, r0
4000f8b8:	e10fc000 	mrs	ip, CPSR
4000f8bc:	e38ce080 	orr	lr, ip, #128	; 0x80
4000f8c0:	e121f00e 	msr	CPSR_c, lr
4000f8c4:	e59f40f0 	ldr	r4, [pc, #240]	; 4000f9bc <_tx_timer_change+0x10c>
4000f8c8:	e5940000 	ldr	r0, [r4]
4000f8cc:	e3500000 	cmp	r0, #0
4000f8d0:	0a000031 	beq	4000f99c <_tx_timer_change+0xec>
4000f8d4:	e59f40e4 	ldr	r4, [pc, #228]	; 4000f9c0 <_tx_timer_change+0x110>
4000f8d8:	e5944000 	ldr	r4, [r4]
4000f8dc:	e2844001 	add	r4, r4, #1
4000f8e0:	e59f50d8 	ldr	r5, [pc, #216]	; 4000f9c0 <_tx_timer_change+0x110>
4000f8e4:	e5854000 	str	r4, [r5]
4000f8e8:	e580400c 	str	r4, [r0, #12]
4000f8ec:	e59f40d0 	ldr	r4, [pc, #208]	; 4000f9c4 <_tx_timer_change+0x114>
4000f8f0:	e5944000 	ldr	r4, [r4]
4000f8f4:	e3540000 	cmp	r4, #0
4000f8f8:	1a000006 	bne	4000f918 <_tx_timer_change+0x68>
4000f8fc:	e59f40c4 	ldr	r4, [pc, #196]	; 4000f9c8 <_tx_timer_change+0x118>
4000f900:	e5944000 	ldr	r4, [r4]
4000f904:	e5804000 	str	r4, [r0]
4000f908:	e5904000 	ldr	r4, [r0]
4000f90c:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000f910:	e5804004 	str	r4, [r0, #4]
4000f914:	ea00000d 	b	4000f950 <_tx_timer_change+0xa0>
4000f918:	e59f40a4 	ldr	r4, [pc, #164]	; 4000f9c4 <_tx_timer_change+0x114>
4000f91c:	e5944000 	ldr	r4, [r4]
4000f920:	e59f50a4 	ldr	r5, [pc, #164]	; 4000f9cc <_tx_timer_change+0x11c>
4000f924:	e1540005 	cmp	r4, r5
4000f928:	2a000004 	bcs	4000f940 <_tx_timer_change+0x90>
4000f92c:	e3e04000 	mvn	r4, #0
4000f930:	e5804000 	str	r4, [r0]
4000f934:	e3a04000 	mov	r4, #0
4000f938:	e5804004 	str	r4, [r0, #4]
4000f93c:	ea000003 	b	4000f950 <_tx_timer_change+0xa0>
4000f940:	e59f4084 	ldr	r4, [pc, #132]	; 4000f9cc <_tx_timer_change+0x11c>
4000f944:	e5804000 	str	r4, [r0]
4000f948:	e3a04000 	mov	r4, #0
4000f94c:	e5804004 	str	r4, [r0, #4]
4000f950:	e3a0407b 	mov	r4, #123	; 0x7b
4000f954:	e5804008 	str	r4, [r0, #8]
4000f958:	e5803010 	str	r3, [r0, #16]
4000f95c:	e5801014 	str	r1, [r0, #20]
4000f960:	e5802018 	str	r2, [r0, #24]
4000f964:	e3a04000 	mov	r4, #0
4000f968:	e580401c 	str	r4, [r0, #28]
4000f96c:	e2800020 	add	r0, r0, #32
4000f970:	e59f4058 	ldr	r4, [pc, #88]	; 4000f9d0 <_tx_timer_change+0x120>
4000f974:	e5944000 	ldr	r4, [r4]
4000f978:	e1500004 	cmp	r0, r4
4000f97c:	3a000001 	bcc	4000f988 <_tx_timer_change+0xd8>
4000f980:	e59f404c 	ldr	r4, [pc, #76]	; 4000f9d4 <_tx_timer_change+0x124>
4000f984:	e5940000 	ldr	r0, [r4]
4000f988:	e59f402c 	ldr	r4, [pc, #44]	; 4000f9bc <_tx_timer_change+0x10c>
4000f98c:	e5840000 	str	r0, [r4]
4000f990:	e59f4040 	ldr	r4, [pc, #64]	; 4000f9d8 <_tx_timer_change+0x128>
4000f994:	e5944000 	ldr	r4, [r4]
4000f998:	e5840020 	str	r0, [r4, #32]
4000f99c:	e5930020 	ldr	r0, [r3, #32]
4000f9a0:	e3500000 	cmp	r0, #0
4000f9a4:	1a000001 	bne	4000f9b0 <_tx_timer_change+0x100>
4000f9a8:	e5831008 	str	r1, [r3, #8]
4000f9ac:	e583200c 	str	r2, [r3, #12]
4000f9b0:	e121f00c 	msr	CPSR_c, ip
4000f9b4:	e3a00000 	mov	r0, #0
4000f9b8:	e8bd8030 	pop	{r4, r5, pc}
4000f9bc:	40030ea4 	.word	0x40030ea4
4000f9c0:	40030ea8 	.word	0x40030ea8
4000f9c4:	40030e30 	.word	0x40030e30
4000f9c8:	40030e38 	.word	0x40030e38
4000f9cc:	f0f0f0f0 	.word	0xf0f0f0f0
4000f9d0:	40030ea0 	.word	0x40030ea0
4000f9d4:	40030e9c 	.word	0x40030e9c
4000f9d8:	40030e90 	.word	0x40030e90

4000f9dc <_tx_timer_create>:
4000f9dc:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000f9e0:	e1a04000 	mov	r4, r0
4000f9e4:	e1a05001 	mov	r5, r1
4000f9e8:	e1a06002 	mov	r6, r2
4000f9ec:	e1a07003 	mov	r7, r3
4000f9f0:	e28da030 	add	sl, sp, #48	; 0x30
4000f9f4:	e89a0700 	ldm	sl, {r8, r9, sl}
4000f9f8:	e3a0102c 	mov	r1, #44	; 0x2c
4000f9fc:	e1a00004 	mov	r0, r4
4000fa00:	eb000eb3 	bl	400134d4 <__aeabi_memclr4>
4000fa04:	e5845004 	str	r5, [r4, #4]
4000fa08:	e5848008 	str	r8, [r4, #8]
4000fa0c:	e584900c 	str	r9, [r4, #12]
4000fa10:	e5846010 	str	r6, [r4, #16]
4000fa14:	e5847014 	str	r7, [r4, #20]
4000fa18:	e10fb000 	mrs	fp, CPSR
4000fa1c:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fa20:	e58d0008 	str	r0, [sp, #8]
4000fa24:	e59d0008 	ldr	r0, [sp, #8]
4000fa28:	e121f000 	msr	CPSR_c, r0
4000fa2c:	e59f0178 	ldr	r0, [pc, #376]	; 4000fbac <_tx_timer_create+0x1d0>
4000fa30:	e5840000 	str	r0, [r4]
4000fa34:	e59f0174 	ldr	r0, [pc, #372]	; 4000fbb0 <_tx_timer_create+0x1d4>
4000fa38:	e5900000 	ldr	r0, [r0]
4000fa3c:	e3500000 	cmp	r0, #0
4000fa40:	0a00000e 	beq	4000fa80 <_tx_timer_create+0xa4>
4000fa44:	e59f0164 	ldr	r0, [pc, #356]	; 4000fbb0 <_tx_timer_create+0x1d4>
4000fa48:	e5900000 	ldr	r0, [r0]
4000fa4c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fa50:	e58d0004 	str	r0, [sp, #4]
4000fa54:	e59f0154 	ldr	r0, [pc, #340]	; 4000fbb0 <_tx_timer_create+0x1d4>
4000fa58:	e5900000 	ldr	r0, [r0]
4000fa5c:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fa60:	e59d0004 	ldr	r0, [sp, #4]
4000fa64:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fa68:	e59d0004 	ldr	r0, [sp, #4]
4000fa6c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fa70:	e59f0138 	ldr	r0, [pc, #312]	; 4000fbb0 <_tx_timer_create+0x1d4>
4000fa74:	e5900000 	ldr	r0, [r0]
4000fa78:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fa7c:	ea000003 	b	4000fa90 <_tx_timer_create+0xb4>
4000fa80:	e59f0128 	ldr	r0, [pc, #296]	; 4000fbb0 <_tx_timer_create+0x1d4>
4000fa84:	e5804000 	str	r4, [r0]
4000fa88:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fa8c:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fa90:	e59f011c 	ldr	r0, [pc, #284]	; 4000fbb4 <_tx_timer_create+0x1d8>
4000fa94:	e5900000 	ldr	r0, [r0]
4000fa98:	e2800001 	add	r0, r0, #1
4000fa9c:	e59f1110 	ldr	r1, [pc, #272]	; 4000fbb4 <_tx_timer_create+0x1d8>
4000faa0:	e5810000 	str	r0, [r1]
4000faa4:	e1a03008 	mov	r3, r8
4000faa8:	e1a02005 	mov	r2, r5
4000faac:	e1a01004 	mov	r1, r4
4000fab0:	e3a00002 	mov	r0, #2
4000fab4:	e58d9000 	str	r9, [sp]
4000fab8:	eb00011b 	bl	4000ff2c <_tx_trace_object_register>
4000fabc:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fbb8 <_tx_timer_create+0x1dc>
4000fac0:	e5910000 	ldr	r0, [r1]
4000fac4:	e3500000 	cmp	r0, #0
4000fac8:	0a000030 	beq	4000fb90 <_tx_timer_create+0x1b4>
4000facc:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fbbc <_tx_timer_create+0x1e0>
4000fad0:	e5911000 	ldr	r1, [r1]
4000fad4:	e2811001 	add	r1, r1, #1
4000fad8:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fbbc <_tx_timer_create+0x1e0>
4000fadc:	e5821000 	str	r1, [r2]
4000fae0:	e580100c 	str	r1, [r0, #12]
4000fae4:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fbc0 <_tx_timer_create+0x1e4>
4000fae8:	e5911000 	ldr	r1, [r1]
4000faec:	e3510000 	cmp	r1, #0
4000faf0:	1a000006 	bne	4000fb10 <_tx_timer_create+0x134>
4000faf4:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fbc4 <_tx_timer_create+0x1e8>
4000faf8:	e5911000 	ldr	r1, [r1]
4000fafc:	e5801000 	str	r1, [r0]
4000fb00:	e5901000 	ldr	r1, [r0]
4000fb04:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fb08:	e5801004 	str	r1, [r0, #4]
4000fb0c:	ea00000d 	b	4000fb48 <_tx_timer_create+0x16c>
4000fb10:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fbc0 <_tx_timer_create+0x1e4>
4000fb14:	e5911000 	ldr	r1, [r1]
4000fb18:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fbc8 <_tx_timer_create+0x1ec>
4000fb1c:	e1510002 	cmp	r1, r2
4000fb20:	2a000004 	bcs	4000fb38 <_tx_timer_create+0x15c>
4000fb24:	e3e01000 	mvn	r1, #0
4000fb28:	e5801000 	str	r1, [r0]
4000fb2c:	e3a01000 	mov	r1, #0
4000fb30:	e5801004 	str	r1, [r0, #4]
4000fb34:	ea000003 	b	4000fb48 <_tx_timer_create+0x16c>
4000fb38:	e59f1088 	ldr	r1, [pc, #136]	; 4000fbc8 <_tx_timer_create+0x1ec>
4000fb3c:	e5801000 	str	r1, [r0]
4000fb40:	e3a01000 	mov	r1, #0
4000fb44:	e5801004 	str	r1, [r0, #4]
4000fb48:	e3a0107c 	mov	r1, #124	; 0x7c
4000fb4c:	e5801008 	str	r1, [r0, #8]
4000fb50:	e5804010 	str	r4, [r0, #16]
4000fb54:	e5808014 	str	r8, [r0, #20]
4000fb58:	e5809018 	str	r9, [r0, #24]
4000fb5c:	e580a01c 	str	sl, [r0, #28]
4000fb60:	e2800020 	add	r0, r0, #32
4000fb64:	e59f1060 	ldr	r1, [pc, #96]	; 4000fbcc <_tx_timer_create+0x1f0>
4000fb68:	e5911000 	ldr	r1, [r1]
4000fb6c:	e1500001 	cmp	r0, r1
4000fb70:	3a000001 	bcc	4000fb7c <_tx_timer_create+0x1a0>
4000fb74:	e59f1054 	ldr	r1, [pc, #84]	; 4000fbd0 <_tx_timer_create+0x1f4>
4000fb78:	e5910000 	ldr	r0, [r1]
4000fb7c:	e59f1034 	ldr	r1, [pc, #52]	; 4000fbb8 <_tx_timer_create+0x1dc>
4000fb80:	e5810000 	str	r0, [r1]
4000fb84:	e59f1048 	ldr	r1, [pc, #72]	; 4000fbd4 <_tx_timer_create+0x1f8>
4000fb88:	e5911000 	ldr	r1, [r1]
4000fb8c:	e5810020 	str	r0, [r1, #32]
4000fb90:	e121f00b 	msr	CPSR_c, fp
4000fb94:	e35a0000 	cmp	sl, #0
4000fb98:	0a000001 	beq	4000fba4 <_tx_timer_create+0x1c8>
4000fb9c:	e2840008 	add	r0, r4, #8
4000fba0:	ebffe600 	bl	400093a8 <_tx_timer_system_activate>
4000fba4:	e3a00000 	mov	r0, #0
4000fba8:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000fbac:	4154494d 	.word	0x4154494d
4000fbb0:	40030e7c 	.word	0x40030e7c
4000fbb4:	40030e80 	.word	0x40030e80
4000fbb8:	40030ea4 	.word	0x40030ea4
4000fbbc:	40030ea8 	.word	0x40030ea8
4000fbc0:	40030e30 	.word	0x40030e30
4000fbc4:	40030e38 	.word	0x40030e38
4000fbc8:	f0f0f0f0 	.word	0xf0f0f0f0
4000fbcc:	40030ea0 	.word	0x40030ea0
4000fbd0:	40030e9c 	.word	0x40030e9c
4000fbd4:	40030e90 	.word	0x40030e90

4000fbd8 <_tx_timer_deactivate>:
4000fbd8:	e92d4018 	push	{r3, r4, lr}
4000fbdc:	e1a01000 	mov	r1, r0
4000fbe0:	e281c008 	add	ip, r1, #8
4000fbe4:	e10f2000 	mrs	r2, CPSR
4000fbe8:	e3823080 	orr	r3, r2, #128	; 0x80
4000fbec:	e121f003 	msr	CPSR_c, r3
4000fbf0:	e59fe228 	ldr	lr, [pc, #552]	; 4000fe20 <_tx_timer_deactivate+0x248>
4000fbf4:	e59e0000 	ldr	r0, [lr]
4000fbf8:	e3500000 	cmp	r0, #0
4000fbfc:	0a000031 	beq	4000fcc8 <_tx_timer_deactivate+0xf0>
4000fc00:	e59fe21c 	ldr	lr, [pc, #540]	; 4000fe24 <_tx_timer_deactivate+0x24c>
4000fc04:	e59ee000 	ldr	lr, [lr]
4000fc08:	e28ee001 	add	lr, lr, #1
4000fc0c:	e59f4210 	ldr	r4, [pc, #528]	; 4000fe24 <_tx_timer_deactivate+0x24c>
4000fc10:	e584e000 	str	lr, [r4]
4000fc14:	e580e00c 	str	lr, [r0, #12]
4000fc18:	e59fe208 	ldr	lr, [pc, #520]	; 4000fe28 <_tx_timer_deactivate+0x250>
4000fc1c:	e59ee000 	ldr	lr, [lr]
4000fc20:	e35e0000 	cmp	lr, #0
4000fc24:	1a000006 	bne	4000fc44 <_tx_timer_deactivate+0x6c>
4000fc28:	e59fe1fc 	ldr	lr, [pc, #508]	; 4000fe2c <_tx_timer_deactivate+0x254>
4000fc2c:	e59ee000 	ldr	lr, [lr]
4000fc30:	e580e000 	str	lr, [r0]
4000fc34:	e590e000 	ldr	lr, [r0]
4000fc38:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000fc3c:	e580e004 	str	lr, [r0, #4]
4000fc40:	ea00000d 	b	4000fc7c <_tx_timer_deactivate+0xa4>
4000fc44:	e59fe1dc 	ldr	lr, [pc, #476]	; 4000fe28 <_tx_timer_deactivate+0x250>
4000fc48:	e59ee000 	ldr	lr, [lr]
4000fc4c:	e59f41dc 	ldr	r4, [pc, #476]	; 4000fe30 <_tx_timer_deactivate+0x258>
4000fc50:	e15e0004 	cmp	lr, r4
4000fc54:	2a000004 	bcs	4000fc6c <_tx_timer_deactivate+0x94>
4000fc58:	e3e0e000 	mvn	lr, #0
4000fc5c:	e580e000 	str	lr, [r0]
4000fc60:	e3a0e000 	mov	lr, #0
4000fc64:	e580e004 	str	lr, [r0, #4]
4000fc68:	ea000003 	b	4000fc7c <_tx_timer_deactivate+0xa4>
4000fc6c:	e59fe1bc 	ldr	lr, [pc, #444]	; 4000fe30 <_tx_timer_deactivate+0x258>
4000fc70:	e580e000 	str	lr, [r0]
4000fc74:	e3a0e000 	mov	lr, #0
4000fc78:	e580e004 	str	lr, [r0, #4]
4000fc7c:	e3a0e07d 	mov	lr, #125	; 0x7d
4000fc80:	e580e008 	str	lr, [r0, #8]
4000fc84:	e5801010 	str	r1, [r0, #16]
4000fc88:	e580d014 	str	sp, [r0, #20]
4000fc8c:	e3a0e000 	mov	lr, #0
4000fc90:	e580e018 	str	lr, [r0, #24]
4000fc94:	e580e01c 	str	lr, [r0, #28]
4000fc98:	e2800020 	add	r0, r0, #32
4000fc9c:	e59fe190 	ldr	lr, [pc, #400]	; 4000fe34 <_tx_timer_deactivate+0x25c>
4000fca0:	e59ee000 	ldr	lr, [lr]
4000fca4:	e150000e 	cmp	r0, lr
4000fca8:	3a000001 	bcc	4000fcb4 <_tx_timer_deactivate+0xdc>
4000fcac:	e59fe184 	ldr	lr, [pc, #388]	; 4000fe38 <_tx_timer_deactivate+0x260>
4000fcb0:	e59e0000 	ldr	r0, [lr]
4000fcb4:	e59fe164 	ldr	lr, [pc, #356]	; 4000fe20 <_tx_timer_deactivate+0x248>
4000fcb8:	e58e0000 	str	r0, [lr]
4000fcbc:	e59fe178 	ldr	lr, [pc, #376]	; 4000fe3c <_tx_timer_deactivate+0x264>
4000fcc0:	e59ee000 	ldr	lr, [lr]
4000fcc4:	e58e0020 	str	r0, [lr, #32]
4000fcc8:	e59fe170 	ldr	lr, [pc, #368]	; 4000fe40 <_tx_timer_deactivate+0x268>
4000fccc:	e59c0018 	ldr	r0, [ip, #24]
4000fcd0:	e59ee000 	ldr	lr, [lr]
4000fcd4:	e150000e 	cmp	r0, lr
4000fcd8:	3a00002b 	bcc	4000fd8c <_tx_timer_deactivate+0x1b4>
4000fcdc:	e59fe160 	ldr	lr, [pc, #352]	; 4000fe44 <_tx_timer_deactivate+0x26c>
4000fce0:	e59c0018 	ldr	r0, [ip, #24]
4000fce4:	e59ee000 	ldr	lr, [lr]
4000fce8:	e150000e 	cmp	r0, lr
4000fcec:	2a000026 	bcs	4000fd8c <_tx_timer_deactivate+0x1b4>
4000fcf0:	e59fe150 	ldr	lr, [pc, #336]	; 4000fe48 <_tx_timer_deactivate+0x270>
4000fcf4:	e59c0018 	ldr	r0, [ip, #24]
4000fcf8:	e59ee000 	ldr	lr, [lr]
4000fcfc:	e150000e 	cmp	r0, lr
4000fd00:	3a000007 	bcc	4000fd24 <_tx_timer_deactivate+0x14c>
4000fd04:	e59fe13c 	ldr	lr, [pc, #316]	; 4000fe48 <_tx_timer_deactivate+0x270>
4000fd08:	e59c0018 	ldr	r0, [ip, #24]
4000fd0c:	e59ee000 	ldr	lr, [lr]
4000fd10:	e040000e 	sub	r0, r0, lr
4000fd14:	e3a0e001 	mov	lr, #1
4000fd18:	e08e0140 	add	r0, lr, r0, asr #2
4000fd1c:	e58d0000 	str	r0, [sp]
4000fd20:	ea00000e 	b	4000fd60 <_tx_timer_deactivate+0x188>
4000fd24:	e59fe114 	ldr	lr, [pc, #276]	; 4000fe40 <_tx_timer_deactivate+0x268>
4000fd28:	e59c0018 	ldr	r0, [ip, #24]
4000fd2c:	e59ee000 	ldr	lr, [lr]
4000fd30:	e040000e 	sub	r0, r0, lr
4000fd34:	e1a00140 	asr	r0, r0, #2
4000fd38:	e58d0000 	str	r0, [sp]
4000fd3c:	e59f0100 	ldr	r0, [pc, #256]	; 4000fe44 <_tx_timer_deactivate+0x26c>
4000fd40:	e5900000 	ldr	r0, [r0]
4000fd44:	e59fe0fc 	ldr	lr, [pc, #252]	; 4000fe48 <_tx_timer_deactivate+0x270>
4000fd48:	e59ee000 	ldr	lr, [lr]
4000fd4c:	e040000e 	sub	r0, r0, lr
4000fd50:	e59de000 	ldr	lr, [sp]
4000fd54:	e08e0140 	add	r0, lr, r0, asr #2
4000fd58:	e2800001 	add	r0, r0, #1
4000fd5c:	e58d0000 	str	r0, [sp]
4000fd60:	e59c0000 	ldr	r0, [ip]
4000fd64:	e3500020 	cmp	r0, #32
4000fd68:	9a000005 	bls	4000fd84 <_tx_timer_deactivate+0x1ac>
4000fd6c:	e59c0000 	ldr	r0, [ip]
4000fd70:	e2400020 	sub	r0, r0, #32
4000fd74:	e59de000 	ldr	lr, [sp]
4000fd78:	e080000e 	add	r0, r0, lr
4000fd7c:	e58c0000 	str	r0, [ip]
4000fd80:	ea000001 	b	4000fd8c <_tx_timer_deactivate+0x1b4>
4000fd84:	e59d0000 	ldr	r0, [sp]
4000fd88:	e58c0000 	str	r0, [ip]
4000fd8c:	e59c0018 	ldr	r0, [ip, #24]
4000fd90:	e3500000 	cmp	r0, #0
4000fd94:	0a00001e 	beq	4000fe14 <_tx_timer_deactivate+0x23c>
4000fd98:	e59c0010 	ldr	r0, [ip, #16]
4000fd9c:	e150000c 	cmp	r0, ip
4000fda0:	1a000009 	bne	4000fdcc <_tx_timer_deactivate+0x1f4>
4000fda4:	e59c0018 	ldr	r0, [ip, #24]
4000fda8:	e5900000 	ldr	r0, [r0]
4000fdac:	e150000c 	cmp	r0, ip
4000fdb0:	1a000002 	bne	4000fdc0 <_tx_timer_deactivate+0x1e8>
4000fdb4:	e3a00000 	mov	r0, #0
4000fdb8:	e59ce018 	ldr	lr, [ip, #24]
4000fdbc:	e58e0000 	str	r0, [lr]
4000fdc0:	e3a00000 	mov	r0, #0
4000fdc4:	e58c0018 	str	r0, [ip, #24]
4000fdc8:	ea000011 	b	4000fe14 <_tx_timer_deactivate+0x23c>
4000fdcc:	e59c0014 	ldr	r0, [ip, #20]
4000fdd0:	e59ce010 	ldr	lr, [ip, #16]
4000fdd4:	e58e0014 	str	r0, [lr, #20]
4000fdd8:	e59c0010 	ldr	r0, [ip, #16]
4000fddc:	e59ce014 	ldr	lr, [ip, #20]
4000fde0:	e58e0010 	str	r0, [lr, #16]
4000fde4:	e59c0018 	ldr	r0, [ip, #24]
4000fde8:	e5900000 	ldr	r0, [r0]
4000fdec:	e150000c 	cmp	r0, ip
4000fdf0:	1a000005 	bne	4000fe0c <_tx_timer_deactivate+0x234>
4000fdf4:	e59c0018 	ldr	r0, [ip, #24]
4000fdf8:	e59ce010 	ldr	lr, [ip, #16]
4000fdfc:	e58e0018 	str	r0, [lr, #24]
4000fe00:	e59c0010 	ldr	r0, [ip, #16]
4000fe04:	e59ce018 	ldr	lr, [ip, #24]
4000fe08:	e58e0000 	str	r0, [lr]
4000fe0c:	e3a00000 	mov	r0, #0
4000fe10:	e58c0018 	str	r0, [ip, #24]
4000fe14:	e121f002 	msr	CPSR_c, r2
4000fe18:	e3a00000 	mov	r0, #0
4000fe1c:	e8bd8018 	pop	{r3, r4, pc}
4000fe20:	40030ea4 	.word	0x40030ea4
4000fe24:	40030ea8 	.word	0x40030ea8
4000fe28:	40030e30 	.word	0x40030e30
4000fe2c:	40030e38 	.word	0x40030e38
4000fe30:	f0f0f0f0 	.word	0xf0f0f0f0
4000fe34:	40030ea0 	.word	0x40030ea0
4000fe38:	40030e9c 	.word	0x40030e9c
4000fe3c:	40030e90 	.word	0x40030e90
4000fe40:	40030e6c 	.word	0x40030e6c
4000fe44:	40030e70 	.word	0x40030e70
4000fe48:	40030e74 	.word	0x40030e74

4000fe4c <_tx_timer_expiration_process>:
4000fe4c:	e92d4070 	push	{r4, r5, r6, lr}
4000fe50:	e10f4000 	mrs	r4, CPSR
4000fe54:	e3845080 	orr	r5, r4, #128	; 0x80
4000fe58:	e121f005 	msr	CPSR_c, r5
4000fe5c:	e59f001c 	ldr	r0, [pc, #28]	; 4000fe80 <_tx_timer_expiration_process+0x34>
4000fe60:	e5900000 	ldr	r0, [r0]
4000fe64:	e2800001 	add	r0, r0, #1
4000fe68:	e59f1010 	ldr	r1, [pc, #16]	; 4000fe80 <_tx_timer_expiration_process+0x34>
4000fe6c:	e5810000 	str	r0, [r1]
4000fe70:	e121f004 	msr	CPSR_c, r4
4000fe74:	e59f0008 	ldr	r0, [pc, #8]	; 4000fe84 <_tx_timer_expiration_process+0x38>
4000fe78:	ebfffcd5 	bl	4000f1d4 <_tx_thread_system_resume>
4000fe7c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fe80:	40030e54 	.word	0x40030e54
4000fe84:	40032974 	.word	0x40032974

4000fe88 <_tx_timer_system_deactivate>:
4000fe88:	e1a01000 	mov	r1, r0
4000fe8c:	e10f2000 	mrs	r2, CPSR
4000fe90:	e3823080 	orr	r3, r2, #128	; 0x80
4000fe94:	e121f003 	msr	CPSR_c, r3
4000fe98:	e5910018 	ldr	r0, [r1, #24]
4000fe9c:	e3500000 	cmp	r0, #0
4000fea0:	0a00001e 	beq	4000ff20 <_tx_timer_system_deactivate+0x98>
4000fea4:	e5910010 	ldr	r0, [r1, #16]
4000fea8:	e1500001 	cmp	r0, r1
4000feac:	1a000009 	bne	4000fed8 <_tx_timer_system_deactivate+0x50>
4000feb0:	e5910018 	ldr	r0, [r1, #24]
4000feb4:	e5900000 	ldr	r0, [r0]
4000feb8:	e1500001 	cmp	r0, r1
4000febc:	1a000002 	bne	4000fecc <_tx_timer_system_deactivate+0x44>
4000fec0:	e3a00000 	mov	r0, #0
4000fec4:	e591c018 	ldr	ip, [r1, #24]
4000fec8:	e58c0000 	str	r0, [ip]
4000fecc:	e3a00000 	mov	r0, #0
4000fed0:	e5810018 	str	r0, [r1, #24]
4000fed4:	ea000011 	b	4000ff20 <_tx_timer_system_deactivate+0x98>
4000fed8:	e5910014 	ldr	r0, [r1, #20]
4000fedc:	e591c010 	ldr	ip, [r1, #16]
4000fee0:	e58c0014 	str	r0, [ip, #20]
4000fee4:	e5910010 	ldr	r0, [r1, #16]
4000fee8:	e591c014 	ldr	ip, [r1, #20]
4000feec:	e58c0010 	str	r0, [ip, #16]
4000fef0:	e5910018 	ldr	r0, [r1, #24]
4000fef4:	e5900000 	ldr	r0, [r0]
4000fef8:	e1500001 	cmp	r0, r1
4000fefc:	1a000005 	bne	4000ff18 <_tx_timer_system_deactivate+0x90>
4000ff00:	e5910018 	ldr	r0, [r1, #24]
4000ff04:	e591c010 	ldr	ip, [r1, #16]
4000ff08:	e58c0018 	str	r0, [ip, #24]
4000ff0c:	e5910010 	ldr	r0, [r1, #16]
4000ff10:	e591c018 	ldr	ip, [r1, #24]
4000ff14:	e58c0000 	str	r0, [ip]
4000ff18:	e3a00000 	mov	r0, #0
4000ff1c:	e5810018 	str	r0, [r1, #24]
4000ff20:	e121f002 	msr	CPSR_c, r2
4000ff24:	e3a00000 	mov	r0, #0
4000ff28:	e12fff1e 	bx	lr

4000ff2c <_tx_trace_object_register>:
4000ff2c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000ff30:	e1a04000 	mov	r4, r0
4000ff34:	e1a05001 	mov	r5, r1
4000ff38:	e1a06002 	mov	r6, r2
4000ff3c:	e1a07003 	mov	r7, r3
4000ff40:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
4000ff44:	e59f0184 	ldr	r0, [pc, #388]	; 400100d0 <_tx_trace_object_register+0x1a4>
4000ff48:	e5900000 	ldr	r0, [r0]
4000ff4c:	e3500000 	cmp	r0, #0
4000ff50:	1a000000 	bne	4000ff58 <_tx_trace_object_register+0x2c>
4000ff54:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000ff58:	e59f1174 	ldr	r1, [pc, #372]	; 400100d4 <_tx_trace_object_register+0x1a8>
4000ff5c:	e5911000 	ldr	r1, [r1]
4000ff60:	e59f2168 	ldr	r2, [pc, #360]	; 400100d0 <_tx_trace_object_register+0x1a4>
4000ff64:	e5922000 	ldr	r2, [r2]
4000ff68:	e0410002 	sub	r0, r1, r2
4000ff6c:	e3a01030 	mov	r1, #48	; 0x30
4000ff70:	eb0002bd 	bl	40010a6c <__aeabi_idivmod>
4000ff74:	e1a0a000 	mov	sl, r0
4000ff78:	e1a0b00a 	mov	fp, sl
4000ff7c:	e3a09000 	mov	r9, #0
4000ff80:	ea00001b 	b	4000fff4 <_tx_trace_object_register+0xc8>
4000ff84:	e0890089 	add	r0, r9, r9, lsl #1
4000ff88:	e59f1140 	ldr	r1, [pc, #320]	; 400100d0 <_tx_trace_object_register+0x1a4>
4000ff8c:	e5911000 	ldr	r1, [r1]
4000ff90:	e0810200 	add	r0, r1, r0, lsl #4
4000ff94:	e5900004 	ldr	r0, [r0, #4]
4000ff98:	e1500005 	cmp	r0, r5
4000ff9c:	1a000001 	bne	4000ffa8 <_tx_trace_object_register+0x7c>
4000ffa0:	e1a0b009 	mov	fp, r9
4000ffa4:	ea000014 	b	4000fffc <_tx_trace_object_register+0xd0>
4000ffa8:	e0890089 	add	r0, r9, r9, lsl #1
4000ffac:	e59f111c 	ldr	r1, [pc, #284]	; 400100d0 <_tx_trace_object_register+0x1a4>
4000ffb0:	e5911000 	ldr	r1, [r1]
4000ffb4:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
4000ffb8:	e3500000 	cmp	r0, #0
4000ffbc:	0a00000b 	beq	4000fff0 <_tx_trace_object_register+0xc4>
4000ffc0:	e15b000a 	cmp	fp, sl
4000ffc4:	1a000001 	bne	4000ffd0 <_tx_trace_object_register+0xa4>
4000ffc8:	e1a0b009 	mov	fp, r9
4000ffcc:	ea000007 	b	4000fff0 <_tx_trace_object_register+0xc4>
4000ffd0:	e08b008b 	add	r0, fp, fp, lsl #1
4000ffd4:	e59f10f4 	ldr	r1, [pc, #244]	; 400100d0 <_tx_trace_object_register+0x1a4>
4000ffd8:	e5911000 	ldr	r1, [r1]
4000ffdc:	e0810200 	add	r0, r1, r0, lsl #4
4000ffe0:	e5d00001 	ldrb	r0, [r0, #1]
4000ffe4:	e3500000 	cmp	r0, #0
4000ffe8:	0a000000 	beq	4000fff0 <_tx_trace_object_register+0xc4>
4000ffec:	e1a0b009 	mov	fp, r9
4000fff0:	e2899001 	add	r9, r9, #1
4000fff4:	e159000a 	cmp	r9, sl
4000fff8:	3affffe1 	bcc	4000ff84 <_tx_trace_object_register+0x58>
4000fffc:	e1a00000 	nop			; (mov r0, r0)
40010000:	e15b000a 	cmp	fp, sl
40010004:	2a000030 	bcs	400100cc <_tx_trace_object_register+0x1a0>
40010008:	e3a00000 	mov	r0, #0
4001000c:	e08b108b 	add	r1, fp, fp, lsl #1
40010010:	e59f20b8 	ldr	r2, [pc, #184]	; 400100d0 <_tx_trace_object_register+0x1a4>
40010014:	e5922000 	ldr	r2, [r2]
40010018:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001001c:	e08b008b 	add	r0, fp, fp, lsl #1
40010020:	e59f10a8 	ldr	r1, [pc, #168]	; 400100d0 <_tx_trace_object_register+0x1a4>
40010024:	e5911000 	ldr	r1, [r1]
40010028:	e0810200 	add	r0, r1, r0, lsl #4
4001002c:	e5c04001 	strb	r4, [r0, #1]
40010030:	e08b008b 	add	r0, fp, fp, lsl #1
40010034:	e59f1094 	ldr	r1, [pc, #148]	; 400100d0 <_tx_trace_object_register+0x1a4>
40010038:	e5911000 	ldr	r1, [r1]
4001003c:	e0810200 	add	r0, r1, r0, lsl #4
40010040:	e5805004 	str	r5, [r0, #4]
40010044:	e08b008b 	add	r0, fp, fp, lsl #1
40010048:	e59f1080 	ldr	r1, [pc, #128]	; 400100d0 <_tx_trace_object_register+0x1a4>
4001004c:	e5911000 	ldr	r1, [r1]
40010050:	e0810200 	add	r0, r1, r0, lsl #4
40010054:	e5807008 	str	r7, [r0, #8]
40010058:	e08b008b 	add	r0, fp, fp, lsl #1
4001005c:	e59f106c 	ldr	r1, [pc, #108]	; 400100d0 <_tx_trace_object_register+0x1a4>
40010060:	e5911000 	ldr	r1, [r1]
40010064:	e0810200 	add	r0, r1, r0, lsl #4
40010068:	e580800c 	str	r8, [r0, #12]
4001006c:	e3a09000 	mov	r9, #0
40010070:	ea00000b 	b	400100a4 <_tx_trace_object_register+0x178>
40010074:	e7d60009 	ldrb	r0, [r6, r9]
40010078:	e08b108b 	add	r1, fp, fp, lsl #1
4001007c:	e59f204c 	ldr	r2, [pc, #76]	; 400100d0 <_tx_trace_object_register+0x1a4>
40010080:	e5922000 	ldr	r2, [r2]
40010084:	e0821201 	add	r1, r2, r1, lsl #4
40010088:	e2811010 	add	r1, r1, #16
4001008c:	e7c10009 	strb	r0, [r1, r9]
40010090:	e7d60009 	ldrb	r0, [r6, r9]
40010094:	e3500000 	cmp	r0, #0
40010098:	1a000000 	bne	400100a0 <_tx_trace_object_register+0x174>
4001009c:	ea000002 	b	400100ac <_tx_trace_object_register+0x180>
400100a0:	e2899001 	add	r9, r9, #1
400100a4:	e359001f 	cmp	r9, #31
400100a8:	3afffff1 	bcc	40010074 <_tx_trace_object_register+0x148>
400100ac:	e1a00000 	nop			; (mov r0, r0)
400100b0:	e3a00000 	mov	r0, #0
400100b4:	e08b108b 	add	r1, fp, fp, lsl #1
400100b8:	e59f2010 	ldr	r2, [pc, #16]	; 400100d0 <_tx_trace_object_register+0x1a4>
400100bc:	e5922000 	ldr	r2, [r2]
400100c0:	e0821201 	add	r1, r2, r1, lsl #4
400100c4:	e2811010 	add	r1, r1, #16
400100c8:	e7c10009 	strb	r0, [r1, r9]
400100cc:	eaffffa0 	b	4000ff54 <_tx_trace_object_register+0x28>
400100d0:	40030e94 	.word	0x40030e94
400100d4:	40030e98 	.word	0x40030e98

400100d8 <_tx_trace_object_unregister>:
400100d8:	e92d4070 	push	{r4, r5, r6, lr}
400100dc:	e1a04000 	mov	r4, r0
400100e0:	e59f007c 	ldr	r0, [pc, #124]	; 40010164 <_tx_trace_object_unregister+0x8c>
400100e4:	e5900000 	ldr	r0, [r0]
400100e8:	e3500000 	cmp	r0, #0
400100ec:	1a000000 	bne	400100f4 <_tx_trace_object_unregister+0x1c>
400100f0:	e8bd8070 	pop	{r4, r5, r6, pc}
400100f4:	e59f106c 	ldr	r1, [pc, #108]	; 40010168 <_tx_trace_object_unregister+0x90>
400100f8:	e5911000 	ldr	r1, [r1]
400100fc:	e59f2060 	ldr	r2, [pc, #96]	; 40010164 <_tx_trace_object_unregister+0x8c>
40010100:	e5922000 	ldr	r2, [r2]
40010104:	e0410002 	sub	r0, r1, r2
40010108:	e3a01030 	mov	r1, #48	; 0x30
4001010c:	eb000256 	bl	40010a6c <__aeabi_idivmod>
40010110:	e1a05000 	mov	r5, r0
40010114:	e3a06000 	mov	r6, #0
40010118:	ea00000d 	b	40010154 <_tx_trace_object_unregister+0x7c>
4001011c:	e0860086 	add	r0, r6, r6, lsl #1
40010120:	e59f103c 	ldr	r1, [pc, #60]	; 40010164 <_tx_trace_object_unregister+0x8c>
40010124:	e5911000 	ldr	r1, [r1]
40010128:	e0810200 	add	r0, r1, r0, lsl #4
4001012c:	e5900004 	ldr	r0, [r0, #4]
40010130:	e1500004 	cmp	r0, r4
40010134:	1a000005 	bne	40010150 <_tx_trace_object_unregister+0x78>
40010138:	e3a00001 	mov	r0, #1
4001013c:	e0861086 	add	r1, r6, r6, lsl #1
40010140:	e59f201c 	ldr	r2, [pc, #28]	; 40010164 <_tx_trace_object_unregister+0x8c>
40010144:	e5922000 	ldr	r2, [r2]
40010148:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001014c:	ea000002 	b	4001015c <_tx_trace_object_unregister+0x84>
40010150:	e2866001 	add	r6, r6, #1
40010154:	e1560005 	cmp	r6, r5
40010158:	3affffef 	bcc	4001011c <_tx_trace_object_unregister+0x44>
4001015c:	e1a00000 	nop			; (mov r0, r0)
40010160:	eaffffe2 	b	400100f0 <_tx_trace_object_unregister+0x18>
40010164:	40030e94 	.word	0x40030e94
40010168:	40030e98 	.word	0x40030e98

4001016c <_tx_thread_stack_build>:
4001016c:	e5902010 	ldr	r2, [r0, #16]
40010170:	e3c22007 	bic	r2, r2, #7
40010174:	e242204c 	sub	r2, r2, #76	; 0x4c
40010178:	e3a03001 	mov	r3, #1
4001017c:	e5823000 	str	r3, [r2]
40010180:	e3a03000 	mov	r3, #0
40010184:	e5823008 	str	r3, [r2, #8]
40010188:	e582300c 	str	r3, [r2, #12]
4001018c:	e5823010 	str	r3, [r2, #16]
40010190:	e5823014 	str	r3, [r2, #20]
40010194:	e5823018 	str	r3, [r2, #24]
40010198:	e582301c 	str	r3, [r2, #28]
4001019c:	e5823020 	str	r3, [r2, #32]
400101a0:	e5823024 	str	r3, [r2, #36]	; 0x24
400101a4:	e5823028 	str	r3, [r2, #40]	; 0x28
400101a8:	e582302c 	str	r3, [r2, #44]	; 0x2c
400101ac:	e590300c 	ldr	r3, [r0, #12]
400101b0:	e5823030 	str	r3, [r2, #48]	; 0x30
400101b4:	e3a03000 	mov	r3, #0
400101b8:	e5823034 	str	r3, [r2, #52]	; 0x34
400101bc:	e5823038 	str	r3, [r2, #56]	; 0x38
400101c0:	e582303c 	str	r3, [r2, #60]	; 0x3c
400101c4:	e5821040 	str	r1, [r2, #64]	; 0x40
400101c8:	e5823044 	str	r3, [r2, #68]	; 0x44
400101cc:	e10f1000 	mrs	r1, CPSR
400101d0:	e3c1109f 	bic	r1, r1, #159	; 0x9f
400101d4:	e3813013 	orr	r3, r1, #19
400101d8:	e5823004 	str	r3, [r2, #4]
400101dc:	e5802008 	str	r2, [r0, #8]
400101e0:	e12fff1e 	bx	lr

400101e4 <_tx_event_flags_cleanup>:
400101e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400101e8:	e1a04000 	mov	r4, r0
400101ec:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400101f0:	e10f5000 	mrs	r5, CPSR
400101f4:	e3856080 	orr	r6, r5, #128	; 0x80
400101f8:	e121f006 	msr	CPSR_c, r6
400101fc:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010200:	e3500000 	cmp	r0, #0
40010204:	0a000026 	beq	400102a4 <_tx_event_flags_cleanup+0xc0>
40010208:	e3570000 	cmp	r7, #0
4001020c:	0a000024 	beq	400102a4 <_tx_event_flags_cleanup+0xc0>
40010210:	e5970000 	ldr	r0, [r7]
40010214:	e59f1090 	ldr	r1, [pc, #144]	; 400102ac <_tx_event_flags_cleanup+0xc8>
40010218:	e1500001 	cmp	r0, r1
4001021c:	1a000020 	bne	400102a4 <_tx_event_flags_cleanup+0xc0>
40010220:	e3a00000 	mov	r0, #0
40010224:	e5840068 	str	r0, [r4, #104]	; 0x68
40010228:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001022c:	e1500004 	cmp	r0, r4
40010230:	1a000002 	bne	40010240 <_tx_event_flags_cleanup+0x5c>
40010234:	e3a00000 	mov	r0, #0
40010238:	e5870010 	str	r0, [r7, #16]
4001023c:	ea000007 	b	40010260 <_tx_event_flags_cleanup+0x7c>
40010240:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010244:	e5870010 	str	r0, [r7, #16]
40010248:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001024c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010250:	e5810074 	str	r0, [r1, #116]	; 0x74
40010254:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010258:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001025c:	e5810070 	str	r0, [r1, #112]	; 0x70
40010260:	e5970014 	ldr	r0, [r7, #20]
40010264:	e2400001 	sub	r0, r0, #1
40010268:	e5870014 	str	r0, [r7, #20]
4001026c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010270:	e3500007 	cmp	r0, #7
40010274:	1a00000a 	bne	400102a4 <_tx_event_flags_cleanup+0xc0>
40010278:	e3a00007 	mov	r0, #7
4001027c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010280:	e59f0028 	ldr	r0, [pc, #40]	; 400102b0 <_tx_event_flags_cleanup+0xcc>
40010284:	e5900000 	ldr	r0, [r0]
40010288:	e2800001 	add	r0, r0, #1
4001028c:	e59f101c 	ldr	r1, [pc, #28]	; 400102b0 <_tx_event_flags_cleanup+0xcc>
40010290:	e5810000 	str	r0, [r1]
40010294:	e121f005 	msr	CPSR_c, r5
40010298:	e1a00004 	mov	r0, r4
4001029c:	ebfffbcc 	bl	4000f1d4 <_tx_thread_system_resume>
400102a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400102a4:	e121f005 	msr	CPSR_c, r5
400102a8:	eafffffc 	b	400102a0 <_tx_event_flags_cleanup+0xbc>
400102ac:	4456444e 	.word	0x4456444e
400102b0:	40030e54 	.word	0x40030e54

400102b4 <_tx_mutex_cleanup>:
400102b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400102b8:	e1a04000 	mov	r4, r0
400102bc:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400102c0:	e10f5000 	mrs	r5, CPSR
400102c4:	e3856080 	orr	r6, r5, #128	; 0x80
400102c8:	e121f006 	msr	CPSR_c, r6
400102cc:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400102d0:	e3500000 	cmp	r0, #0
400102d4:	0a000026 	beq	40010374 <_tx_mutex_cleanup+0xc0>
400102d8:	e3570000 	cmp	r7, #0
400102dc:	0a000024 	beq	40010374 <_tx_mutex_cleanup+0xc0>
400102e0:	e5970000 	ldr	r0, [r7]
400102e4:	e59f1090 	ldr	r1, [pc, #144]	; 4001037c <_tx_mutex_cleanup+0xc8>
400102e8:	e1500001 	cmp	r0, r1
400102ec:	1a000020 	bne	40010374 <_tx_mutex_cleanup+0xc0>
400102f0:	e3a00000 	mov	r0, #0
400102f4:	e5840068 	str	r0, [r4, #104]	; 0x68
400102f8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102fc:	e1500004 	cmp	r0, r4
40010300:	1a000002 	bne	40010310 <_tx_mutex_cleanup+0x5c>
40010304:	e3a00000 	mov	r0, #0
40010308:	e587001c 	str	r0, [r7, #28]
4001030c:	ea000007 	b	40010330 <_tx_mutex_cleanup+0x7c>
40010310:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010314:	e587001c 	str	r0, [r7, #28]
40010318:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001031c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010320:	e5810074 	str	r0, [r1, #116]	; 0x74
40010324:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010328:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001032c:	e5810070 	str	r0, [r1, #112]	; 0x70
40010330:	e5970020 	ldr	r0, [r7, #32]
40010334:	e2400001 	sub	r0, r0, #1
40010338:	e5870020 	str	r0, [r7, #32]
4001033c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010340:	e350000d 	cmp	r0, #13
40010344:	1a00000a 	bne	40010374 <_tx_mutex_cleanup+0xc0>
40010348:	e3a0001d 	mov	r0, #29
4001034c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010350:	e59f0028 	ldr	r0, [pc, #40]	; 40010380 <_tx_mutex_cleanup+0xcc>
40010354:	e5900000 	ldr	r0, [r0]
40010358:	e2800001 	add	r0, r0, #1
4001035c:	e59f101c 	ldr	r1, [pc, #28]	; 40010380 <_tx_mutex_cleanup+0xcc>
40010360:	e5810000 	str	r0, [r1]
40010364:	e121f005 	msr	CPSR_c, r5
40010368:	e1a00004 	mov	r0, r4
4001036c:	ebfffb98 	bl	4000f1d4 <_tx_thread_system_resume>
40010370:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010374:	e121f005 	msr	CPSR_c, r5
40010378:	eafffffc 	b	40010370 <_tx_mutex_cleanup+0xbc>
4001037c:	4d555445 	.word	0x4d555445
40010380:	40030e54 	.word	0x40030e54

40010384 <_tx_mutex_prioritize>:
40010384:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40010388:	e1a04000 	mov	r4, r0
4001038c:	e10f5000 	mrs	r5, CPSR
40010390:	e3856080 	orr	r6, r5, #128	; 0x80
40010394:	e121f006 	msr	CPSR_c, r6
40010398:	e59f1234 	ldr	r1, [pc, #564]	; 400105d4 <_tx_mutex_prioritize+0x250>
4001039c:	e5910000 	ldr	r0, [r1]
400103a0:	e3500000 	cmp	r0, #0
400103a4:	0a000032 	beq	40010474 <_tx_mutex_prioritize+0xf0>
400103a8:	e59f1228 	ldr	r1, [pc, #552]	; 400105d8 <_tx_mutex_prioritize+0x254>
400103ac:	e5911000 	ldr	r1, [r1]
400103b0:	e2811001 	add	r1, r1, #1
400103b4:	e59f221c 	ldr	r2, [pc, #540]	; 400105d8 <_tx_mutex_prioritize+0x254>
400103b8:	e5821000 	str	r1, [r2]
400103bc:	e580100c 	str	r1, [r0, #12]
400103c0:	e59f1214 	ldr	r1, [pc, #532]	; 400105dc <_tx_mutex_prioritize+0x258>
400103c4:	e5911000 	ldr	r1, [r1]
400103c8:	e3510000 	cmp	r1, #0
400103cc:	1a000006 	bne	400103ec <_tx_mutex_prioritize+0x68>
400103d0:	e59f1208 	ldr	r1, [pc, #520]	; 400105e0 <_tx_mutex_prioritize+0x25c>
400103d4:	e5911000 	ldr	r1, [r1]
400103d8:	e5801000 	str	r1, [r0]
400103dc:	e5901000 	ldr	r1, [r0]
400103e0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400103e4:	e5801004 	str	r1, [r0, #4]
400103e8:	ea00000d 	b	40010424 <_tx_mutex_prioritize+0xa0>
400103ec:	e59f11e8 	ldr	r1, [pc, #488]	; 400105dc <_tx_mutex_prioritize+0x258>
400103f0:	e5911000 	ldr	r1, [r1]
400103f4:	e59f21e8 	ldr	r2, [pc, #488]	; 400105e4 <_tx_mutex_prioritize+0x260>
400103f8:	e1510002 	cmp	r1, r2
400103fc:	2a000004 	bcs	40010414 <_tx_mutex_prioritize+0x90>
40010400:	e3e01000 	mvn	r1, #0
40010404:	e5801000 	str	r1, [r0]
40010408:	e3a01000 	mov	r1, #0
4001040c:	e5801004 	str	r1, [r0, #4]
40010410:	ea000003 	b	40010424 <_tx_mutex_prioritize+0xa0>
40010414:	e59f11c8 	ldr	r1, [pc, #456]	; 400105e4 <_tx_mutex_prioritize+0x260>
40010418:	e5801000 	str	r1, [r0]
4001041c:	e3a01000 	mov	r1, #0
40010420:	e5801004 	str	r1, [r0, #4]
40010424:	e3a01038 	mov	r1, #56	; 0x38
40010428:	e5801008 	str	r1, [r0, #8]
4001042c:	e5804010 	str	r4, [r0, #16]
40010430:	e5941020 	ldr	r1, [r4, #32]
40010434:	e5801014 	str	r1, [r0, #20]
40010438:	e580d018 	str	sp, [r0, #24]
4001043c:	e3a01000 	mov	r1, #0
40010440:	e580101c 	str	r1, [r0, #28]
40010444:	e2800020 	add	r0, r0, #32
40010448:	e59f1198 	ldr	r1, [pc, #408]	; 400105e8 <_tx_mutex_prioritize+0x264>
4001044c:	e5911000 	ldr	r1, [r1]
40010450:	e1500001 	cmp	r0, r1
40010454:	3a000001 	bcc	40010460 <_tx_mutex_prioritize+0xdc>
40010458:	e59f118c 	ldr	r1, [pc, #396]	; 400105ec <_tx_mutex_prioritize+0x268>
4001045c:	e5910000 	ldr	r0, [r1]
40010460:	e59f116c 	ldr	r1, [pc, #364]	; 400105d4 <_tx_mutex_prioritize+0x250>
40010464:	e5810000 	str	r0, [r1]
40010468:	e59f1180 	ldr	r1, [pc, #384]	; 400105f0 <_tx_mutex_prioritize+0x26c>
4001046c:	e5911000 	ldr	r1, [r1]
40010470:	e5810020 	str	r0, [r1, #32]
40010474:	e5940020 	ldr	r0, [r4, #32]
40010478:	e3500002 	cmp	r0, #2
4001047c:	2a000002 	bcs	4001048c <_tx_mutex_prioritize+0x108>
40010480:	e121f005 	msr	CPSR_c, r5
40010484:	e3a00000 	mov	r0, #0
40010488:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4001048c:	e5940020 	ldr	r0, [r4, #32]
40010490:	e3500002 	cmp	r0, #2
40010494:	1a00000c 	bne	400104cc <_tx_mutex_prioritize+0x148>
40010498:	e594001c 	ldr	r0, [r4, #28]
4001049c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400104a0:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400104a4:	e594101c 	ldr	r1, [r4, #28]
400104a8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400104ac:	e1500001 	cmp	r0, r1
400104b0:	2a000002 	bcs	400104c0 <_tx_mutex_prioritize+0x13c>
400104b4:	e594001c 	ldr	r0, [r4, #28]
400104b8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400104bc:	e584001c 	str	r0, [r4, #28]
400104c0:	e121f005 	msr	CPSR_c, r5
400104c4:	e3a00000 	mov	r0, #0
400104c8:	eaffffee 	b	40010488 <_tx_mutex_prioritize+0x104>
400104cc:	e594901c 	ldr	r9, [r4, #28]
400104d0:	e5940020 	ldr	r0, [r4, #32]
400104d4:	e58d0000 	str	r0, [sp]
400104d8:	e594801c 	ldr	r8, [r4, #28]
400104dc:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400104e0:	e59f010c 	ldr	r0, [pc, #268]	; 400105f4 <_tx_mutex_prioritize+0x270>
400104e4:	e5900000 	ldr	r0, [r0]
400104e8:	e2800001 	add	r0, r0, #1
400104ec:	e59f1100 	ldr	r1, [pc, #256]	; 400105f4 <_tx_mutex_prioritize+0x270>
400104f0:	e5810000 	str	r0, [r1]
400104f4:	e1a00000 	nop			; (mov r0, r0)
400104f8:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
400104fc:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
40010500:	e1500001 	cmp	r0, r1
40010504:	2a000000 	bcs	4001050c <_tx_mutex_prioritize+0x188>
40010508:	e1a08007 	mov	r8, r7
4001050c:	e121f005 	msr	CPSR_c, r5
40010510:	e10f5000 	mrs	r5, CPSR
40010514:	e3856080 	orr	r6, r5, #128	; 0x80
40010518:	e121f006 	msr	CPSR_c, r6
4001051c:	e594001c 	ldr	r0, [r4, #28]
40010520:	e1500009 	cmp	r0, r9
40010524:	1a000005 	bne	40010540 <_tx_mutex_prioritize+0x1bc>
40010528:	e5940020 	ldr	r0, [r4, #32]
4001052c:	e59d1000 	ldr	r1, [sp]
40010530:	e1500001 	cmp	r0, r1
40010534:	1a000001 	bne	40010540 <_tx_mutex_prioritize+0x1bc>
40010538:	e5977070 	ldr	r7, [r7, #112]	; 0x70
4001053c:	ea000004 	b	40010554 <_tx_mutex_prioritize+0x1d0>
40010540:	e594901c 	ldr	r9, [r4, #28]
40010544:	e5940020 	ldr	r0, [r4, #32]
40010548:	e58d0000 	str	r0, [sp]
4001054c:	e594801c 	ldr	r8, [r4, #28]
40010550:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010554:	e594001c 	ldr	r0, [r4, #28]
40010558:	e1500007 	cmp	r0, r7
4001055c:	1affffe5 	bne	400104f8 <_tx_mutex_prioritize+0x174>
40010560:	e59f008c 	ldr	r0, [pc, #140]	; 400105f4 <_tx_mutex_prioritize+0x270>
40010564:	e5900000 	ldr	r0, [r0]
40010568:	e2400001 	sub	r0, r0, #1
4001056c:	e59f1080 	ldr	r1, [pc, #128]	; 400105f4 <_tx_mutex_prioritize+0x270>
40010570:	e5810000 	str	r0, [r1]
40010574:	e594001c 	ldr	r0, [r4, #28]
40010578:	e1500008 	cmp	r0, r8
4001057c:	0a000010 	beq	400105c4 <_tx_mutex_prioritize+0x240>
40010580:	e5980074 	ldr	r0, [r8, #116]	; 0x74
40010584:	e5981070 	ldr	r1, [r8, #112]	; 0x70
40010588:	e5810074 	str	r0, [r1, #116]	; 0x74
4001058c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
40010590:	e5981074 	ldr	r1, [r8, #116]	; 0x74
40010594:	e5810070 	str	r0, [r1, #112]	; 0x70
40010598:	e594001c 	ldr	r0, [r4, #28]
4001059c:	e5880070 	str	r0, [r8, #112]	; 0x70
400105a0:	e594001c 	ldr	r0, [r4, #28]
400105a4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400105a8:	e5880074 	str	r0, [r8, #116]	; 0x74
400105ac:	e594001c 	ldr	r0, [r4, #28]
400105b0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400105b4:	e5808070 	str	r8, [r0, #112]	; 0x70
400105b8:	e594001c 	ldr	r0, [r4, #28]
400105bc:	e5808074 	str	r8, [r0, #116]	; 0x74
400105c0:	e584801c 	str	r8, [r4, #28]
400105c4:	e121f005 	msr	CPSR_c, r5
400105c8:	ebfffad5 	bl	4000f124 <_tx_thread_system_preempt_check>
400105cc:	e3a00000 	mov	r0, #0
400105d0:	eaffffac 	b	40010488 <_tx_mutex_prioritize+0x104>
400105d4:	40030ea4 	.word	0x40030ea4
400105d8:	40030ea8 	.word	0x40030ea8
400105dc:	40030e30 	.word	0x40030e30
400105e0:	40030e38 	.word	0x40030e38
400105e4:	f0f0f0f0 	.word	0xf0f0f0f0
400105e8:	40030ea0 	.word	0x40030ea0
400105ec:	40030e9c 	.word	0x40030e9c
400105f0:	40030e90 	.word	0x40030e90
400105f4:	40030e54 	.word	0x40030e54

400105f8 <_tx_queue_cleanup>:
400105f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400105fc:	e1a04000 	mov	r4, r0
40010600:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010604:	e10f5000 	mrs	r5, CPSR
40010608:	e3856080 	orr	r6, r5, #128	; 0x80
4001060c:	e121f006 	msr	CPSR_c, r6
40010610:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010614:	e3500000 	cmp	r0, #0
40010618:	0a00002c 	beq	400106d0 <_tx_queue_cleanup+0xd8>
4001061c:	e3570000 	cmp	r7, #0
40010620:	0a00002a 	beq	400106d0 <_tx_queue_cleanup+0xd8>
40010624:	e5970000 	ldr	r0, [r7]
40010628:	e59f10a8 	ldr	r1, [pc, #168]	; 400106d8 <_tx_queue_cleanup+0xe0>
4001062c:	e1500001 	cmp	r0, r1
40010630:	1a000026 	bne	400106d0 <_tx_queue_cleanup+0xd8>
40010634:	e3a00000 	mov	r0, #0
40010638:	e5840068 	str	r0, [r4, #104]	; 0x68
4001063c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010640:	e1500004 	cmp	r0, r4
40010644:	1a000002 	bne	40010654 <_tx_queue_cleanup+0x5c>
40010648:	e3a00000 	mov	r0, #0
4001064c:	e5870028 	str	r0, [r7, #40]	; 0x28
40010650:	ea000007 	b	40010674 <_tx_queue_cleanup+0x7c>
40010654:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010658:	e5870028 	str	r0, [r7, #40]	; 0x28
4001065c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010660:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010664:	e5810074 	str	r0, [r1, #116]	; 0x74
40010668:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001066c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010670:	e5810070 	str	r0, [r1, #112]	; 0x70
40010674:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010678:	e2400001 	sub	r0, r0, #1
4001067c:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010680:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010684:	e3500005 	cmp	r0, #5
40010688:	1a000010 	bne	400106d0 <_tx_queue_cleanup+0xd8>
4001068c:	e5970010 	ldr	r0, [r7, #16]
40010690:	e3500000 	cmp	r0, #0
40010694:	0a000002 	beq	400106a4 <_tx_queue_cleanup+0xac>
40010698:	e3a0000b 	mov	r0, #11
4001069c:	e5840084 	str	r0, [r4, #132]	; 0x84
400106a0:	ea000001 	b	400106ac <_tx_queue_cleanup+0xb4>
400106a4:	e3a0000a 	mov	r0, #10
400106a8:	e5840084 	str	r0, [r4, #132]	; 0x84
400106ac:	e59f0028 	ldr	r0, [pc, #40]	; 400106dc <_tx_queue_cleanup+0xe4>
400106b0:	e5900000 	ldr	r0, [r0]
400106b4:	e2800001 	add	r0, r0, #1
400106b8:	e59f101c 	ldr	r1, [pc, #28]	; 400106dc <_tx_queue_cleanup+0xe4>
400106bc:	e5810000 	str	r0, [r1]
400106c0:	e121f005 	msr	CPSR_c, r5
400106c4:	e1a00004 	mov	r0, r4
400106c8:	ebfffac1 	bl	4000f1d4 <_tx_thread_system_resume>
400106cc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400106d0:	e121f005 	msr	CPSR_c, r5
400106d4:	eafffffc 	b	400106cc <_tx_queue_cleanup+0xd4>
400106d8:	51554555 	.word	0x51554555
400106dc:	40030e54 	.word	0x40030e54

400106e0 <strcpy>:
400106e0:	e0202001 	eor	r2, r0, r1
400106e4:	e1a0c000 	mov	ip, r0
400106e8:	e3120003 	tst	r2, #3
400106ec:	1a000032 	bne	400107bc <strcpy+0xdc>
400106f0:	e3110003 	tst	r1, #3
400106f4:	1a000021 	bne	40010780 <strcpy+0xa0>
400106f8:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
400106fc:	e3a05001 	mov	r5, #1
40010700:	e1855405 	orr	r5, r5, r5, lsl #8
40010704:	e1855805 	orr	r5, r5, r5, lsl #16
40010708:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
4001070c:	e3110004 	tst	r1, #4
40010710:	e4913004 	ldr	r3, [r1], #4
40010714:	0a000005 	beq	40010730 <strcpy+0x50>
40010718:	e0432005 	sub	r2, r3, r5
4001071c:	e1d22003 	bics	r2, r2, r3
40010720:	e1120385 	tst	r2, r5, lsl #7
40010724:	048c3004 	streq	r3, [ip], #4
40010728:	04913004 	ldreq	r3, [r1], #4
4001072c:	1a00000c 	bne	40010764 <strcpy+0x84>
40010730:	e4914004 	ldr	r4, [r1], #4
40010734:	e0432005 	sub	r2, r3, r5
40010738:	e1d22003 	bics	r2, r2, r3
4001073c:	e1120385 	tst	r2, r5, lsl #7
40010740:	e0442005 	sub	r2, r4, r5
40010744:	1a000006 	bne	40010764 <strcpy+0x84>
40010748:	e48c3004 	str	r3, [ip], #4
4001074c:	e1d22004 	bics	r2, r2, r4
40010750:	e1120385 	tst	r2, r5, lsl #7
40010754:	04913004 	ldreq	r3, [r1], #4
40010758:	048c4004 	streq	r4, [ip], #4
4001075c:	0afffff3 	beq	40010730 <strcpy+0x50>
40010760:	e1a03004 	mov	r3, r4
40010764:	e4cc3001 	strb	r3, [ip], #1
40010768:	e31300ff 	tst	r3, #255	; 0xff
4001076c:	e1a03463 	ror	r3, r3, #8
40010770:	1afffffb 	bne	40010764 <strcpy+0x84>
40010774:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
40010778:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
4001077c:	e12fff1e 	bx	lr
40010780:	e3110001 	tst	r1, #1
40010784:	0a000003 	beq	40010798 <strcpy+0xb8>
40010788:	e4d12001 	ldrb	r2, [r1], #1
4001078c:	e4cc2001 	strb	r2, [ip], #1
40010790:	e3520000 	cmp	r2, #0
40010794:	012fff1e 	bxeq	lr
40010798:	e3110002 	tst	r1, #2
4001079c:	0affffd5 	beq	400106f8 <strcpy+0x18>
400107a0:	e0d120b2 	ldrh	r2, [r1], #2
400107a4:	e31200ff 	tst	r2, #255	; 0xff
400107a8:	10cc20b2 	strhne	r2, [ip], #2
400107ac:	05cc2000 	strbeq	r2, [ip]
400107b0:	13120cff 	tstne	r2, #65280	; 0xff00
400107b4:	1affffcf 	bne	400106f8 <strcpy+0x18>
400107b8:	e12fff1e 	bx	lr
400107bc:	e4d12001 	ldrb	r2, [r1], #1
400107c0:	e4cc2001 	strb	r2, [ip], #1
400107c4:	e3520000 	cmp	r2, #0
400107c8:	1afffffb 	bne	400107bc <strcpy+0xdc>
400107cc:	e12fff1e 	bx	lr

400107d0 <strlen>:
400107d0:	e3c01003 	bic	r1, r0, #3
400107d4:	e2100003 	ands	r0, r0, #3
400107d8:	e2600000 	rsb	r0, r0, #0
400107dc:	e4913004 	ldr	r3, [r1], #4
400107e0:	e280c004 	add	ip, r0, #4
400107e4:	e1a0c18c 	lsl	ip, ip, #3
400107e8:	e3e02000 	mvn	r2, #0
400107ec:	11833c32 	orrne	r3, r3, r2, lsr ip
400107f0:	e3a0c001 	mov	ip, #1
400107f4:	e18cc40c 	orr	ip, ip, ip, lsl #8
400107f8:	e18cc80c 	orr	ip, ip, ip, lsl #16
400107fc:	e043200c 	sub	r2, r3, ip
40010800:	e1c22003 	bic	r2, r2, r3
40010804:	e012238c 	ands	r2, r2, ip, lsl #7
40010808:	04913004 	ldreq	r3, [r1], #4
4001080c:	02800004 	addeq	r0, r0, #4
40010810:	0afffff9 	beq	400107fc <strlen+0x2c>
40010814:	e31300ff 	tst	r3, #255	; 0xff
40010818:	12800001 	addne	r0, r0, #1
4001081c:	13130cff 	tstne	r3, #65280	; 0xff00
40010820:	12800001 	addne	r0, r0, #1
40010824:	131308ff 	tstne	r3, #16711680	; 0xff0000
40010828:	12800001 	addne	r0, r0, #1
4001082c:	e12fff1e 	bx	lr

40010830 <__aeabi_uidiv>:
40010830:	e2512001 	subs	r2, r1, #1
40010834:	012fff1e 	bxeq	lr
40010838:	3a000036 	bcc	40010918 <__aeabi_uidiv+0xe8>
4001083c:	e1500001 	cmp	r0, r1
40010840:	9a000022 	bls	400108d0 <__aeabi_uidiv+0xa0>
40010844:	e1110002 	tst	r1, r2
40010848:	0a000023 	beq	400108dc <__aeabi_uidiv+0xac>
4001084c:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010850:	01a01181 	lsleq	r1, r1, #3
40010854:	03a03008 	moveq	r3, #8
40010858:	13a03001 	movne	r3, #1
4001085c:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010860:	31510000 	cmpcc	r1, r0
40010864:	31a01201 	lslcc	r1, r1, #4
40010868:	31a03203 	lslcc	r3, r3, #4
4001086c:	3afffffa 	bcc	4001085c <__aeabi_uidiv+0x2c>
40010870:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010874:	31510000 	cmpcc	r1, r0
40010878:	31a01081 	lslcc	r1, r1, #1
4001087c:	31a03083 	lslcc	r3, r3, #1
40010880:	3afffffa 	bcc	40010870 <__aeabi_uidiv+0x40>
40010884:	e3a02000 	mov	r2, #0
40010888:	e1500001 	cmp	r0, r1
4001088c:	20400001 	subcs	r0, r0, r1
40010890:	21822003 	orrcs	r2, r2, r3
40010894:	e15000a1 	cmp	r0, r1, lsr #1
40010898:	204000a1 	subcs	r0, r0, r1, lsr #1
4001089c:	218220a3 	orrcs	r2, r2, r3, lsr #1
400108a0:	e1500121 	cmp	r0, r1, lsr #2
400108a4:	20400121 	subcs	r0, r0, r1, lsr #2
400108a8:	21822123 	orrcs	r2, r2, r3, lsr #2
400108ac:	e15001a1 	cmp	r0, r1, lsr #3
400108b0:	204001a1 	subcs	r0, r0, r1, lsr #3
400108b4:	218221a3 	orrcs	r2, r2, r3, lsr #3
400108b8:	e3500000 	cmp	r0, #0
400108bc:	11b03223 	lsrsne	r3, r3, #4
400108c0:	11a01221 	lsrne	r1, r1, #4
400108c4:	1affffef 	bne	40010888 <__aeabi_uidiv+0x58>
400108c8:	e1a00002 	mov	r0, r2
400108cc:	e12fff1e 	bx	lr
400108d0:	03a00001 	moveq	r0, #1
400108d4:	13a00000 	movne	r0, #0
400108d8:	e12fff1e 	bx	lr
400108dc:	e3510801 	cmp	r1, #65536	; 0x10000
400108e0:	21a01821 	lsrcs	r1, r1, #16
400108e4:	23a02010 	movcs	r2, #16
400108e8:	33a02000 	movcc	r2, #0
400108ec:	e3510c01 	cmp	r1, #256	; 0x100
400108f0:	21a01421 	lsrcs	r1, r1, #8
400108f4:	22822008 	addcs	r2, r2, #8
400108f8:	e3510010 	cmp	r1, #16
400108fc:	21a01221 	lsrcs	r1, r1, #4
40010900:	22822004 	addcs	r2, r2, #4
40010904:	e3510004 	cmp	r1, #4
40010908:	82822003 	addhi	r2, r2, #3
4001090c:	908220a1 	addls	r2, r2, r1, lsr #1
40010910:	e1a00230 	lsr	r0, r0, r2
40010914:	e12fff1e 	bx	lr
40010918:	e3500000 	cmp	r0, #0
4001091c:	13e00000 	mvnne	r0, #0
40010920:	ea000059 	b	40010a8c <__aeabi_idiv0>

40010924 <__aeabi_uidivmod>:
40010924:	e3510000 	cmp	r1, #0
40010928:	0afffffa 	beq	40010918 <__aeabi_uidiv+0xe8>
4001092c:	e92d4003 	push	{r0, r1, lr}
40010930:	ebffffbe 	bl	40010830 <__aeabi_uidiv>
40010934:	e8bd4006 	pop	{r1, r2, lr}
40010938:	e0030092 	mul	r3, r2, r0
4001093c:	e0411003 	sub	r1, r1, r3
40010940:	e12fff1e 	bx	lr

40010944 <__aeabi_idiv>:
40010944:	e3510000 	cmp	r1, #0
40010948:	0a000043 	beq	40010a5c <.divsi3_skip_div0_test+0x110>

4001094c <.divsi3_skip_div0_test>:
4001094c:	e020c001 	eor	ip, r0, r1
40010950:	42611000 	rsbmi	r1, r1, #0
40010954:	e2512001 	subs	r2, r1, #1
40010958:	0a000027 	beq	400109fc <.divsi3_skip_div0_test+0xb0>
4001095c:	e1b03000 	movs	r3, r0
40010960:	42603000 	rsbmi	r3, r0, #0
40010964:	e1530001 	cmp	r3, r1
40010968:	9a000026 	bls	40010a08 <.divsi3_skip_div0_test+0xbc>
4001096c:	e1110002 	tst	r1, r2
40010970:	0a000028 	beq	40010a18 <.divsi3_skip_div0_test+0xcc>
40010974:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010978:	01a01181 	lsleq	r1, r1, #3
4001097c:	03a02008 	moveq	r2, #8
40010980:	13a02001 	movne	r2, #1
40010984:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010988:	31510003 	cmpcc	r1, r3
4001098c:	31a01201 	lslcc	r1, r1, #4
40010990:	31a02202 	lslcc	r2, r2, #4
40010994:	3afffffa 	bcc	40010984 <.divsi3_skip_div0_test+0x38>
40010998:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
4001099c:	31510003 	cmpcc	r1, r3
400109a0:	31a01081 	lslcc	r1, r1, #1
400109a4:	31a02082 	lslcc	r2, r2, #1
400109a8:	3afffffa 	bcc	40010998 <.divsi3_skip_div0_test+0x4c>
400109ac:	e3a00000 	mov	r0, #0
400109b0:	e1530001 	cmp	r3, r1
400109b4:	20433001 	subcs	r3, r3, r1
400109b8:	21800002 	orrcs	r0, r0, r2
400109bc:	e15300a1 	cmp	r3, r1, lsr #1
400109c0:	204330a1 	subcs	r3, r3, r1, lsr #1
400109c4:	218000a2 	orrcs	r0, r0, r2, lsr #1
400109c8:	e1530121 	cmp	r3, r1, lsr #2
400109cc:	20433121 	subcs	r3, r3, r1, lsr #2
400109d0:	21800122 	orrcs	r0, r0, r2, lsr #2
400109d4:	e15301a1 	cmp	r3, r1, lsr #3
400109d8:	204331a1 	subcs	r3, r3, r1, lsr #3
400109dc:	218001a2 	orrcs	r0, r0, r2, lsr #3
400109e0:	e3530000 	cmp	r3, #0
400109e4:	11b02222 	lsrsne	r2, r2, #4
400109e8:	11a01221 	lsrne	r1, r1, #4
400109ec:	1affffef 	bne	400109b0 <.divsi3_skip_div0_test+0x64>
400109f0:	e35c0000 	cmp	ip, #0
400109f4:	42600000 	rsbmi	r0, r0, #0
400109f8:	e12fff1e 	bx	lr
400109fc:	e13c0000 	teq	ip, r0
40010a00:	42600000 	rsbmi	r0, r0, #0
40010a04:	e12fff1e 	bx	lr
40010a08:	33a00000 	movcc	r0, #0
40010a0c:	01a00fcc 	asreq	r0, ip, #31
40010a10:	03800001 	orreq	r0, r0, #1
40010a14:	e12fff1e 	bx	lr
40010a18:	e3510801 	cmp	r1, #65536	; 0x10000
40010a1c:	21a01821 	lsrcs	r1, r1, #16
40010a20:	23a02010 	movcs	r2, #16
40010a24:	33a02000 	movcc	r2, #0
40010a28:	e3510c01 	cmp	r1, #256	; 0x100
40010a2c:	21a01421 	lsrcs	r1, r1, #8
40010a30:	22822008 	addcs	r2, r2, #8
40010a34:	e3510010 	cmp	r1, #16
40010a38:	21a01221 	lsrcs	r1, r1, #4
40010a3c:	22822004 	addcs	r2, r2, #4
40010a40:	e3510004 	cmp	r1, #4
40010a44:	82822003 	addhi	r2, r2, #3
40010a48:	908220a1 	addls	r2, r2, r1, lsr #1
40010a4c:	e35c0000 	cmp	ip, #0
40010a50:	e1a00233 	lsr	r0, r3, r2
40010a54:	42600000 	rsbmi	r0, r0, #0
40010a58:	e12fff1e 	bx	lr
40010a5c:	e3500000 	cmp	r0, #0
40010a60:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010a64:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010a68:	ea000007 	b	40010a8c <__aeabi_idiv0>

40010a6c <__aeabi_idivmod>:
40010a6c:	e3510000 	cmp	r1, #0
40010a70:	0afffff9 	beq	40010a5c <.divsi3_skip_div0_test+0x110>
40010a74:	e92d4003 	push	{r0, r1, lr}
40010a78:	ebffffb3 	bl	4001094c <.divsi3_skip_div0_test>
40010a7c:	e8bd4006 	pop	{r1, r2, lr}
40010a80:	e0030092 	mul	r3, r2, r0
40010a84:	e0411003 	sub	r1, r1, r3
40010a88:	e12fff1e 	bx	lr

40010a8c <__aeabi_idiv0>:
40010a8c:	e12fff1e 	bx	lr

40010a90 <DelayArray>:
40010a90:	010402bc 01040104 010402bc 01040104     ................
40010aa0:	01040104 01040104 01040104 01040104     ................
40010ab0:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010ac0:	02bc0104 010402bc 010402bc 010401f4     ................
40010ad0:	01040104 01040104 01040104 01040104     ................
40010ae0:	01040104 01040104 00000000 00000000     ................
	...
40010b10:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010b20:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010b30:	75657551 73252065 61747320 25206574     Queue %s state %
40010b40:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010b50:	68632065 206b6365 75657571 20444965     e check queueID 
40010b60:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010b70:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010b80:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010b90:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010ba0:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010bb0:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010bc0:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010bd0:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010be0:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010bf0:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010c00:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010c10:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010c20:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010c30:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010c40:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010c50:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010c60:	00000a0d                                ....

40010c64 <CyFxUSBDeviceDscr>:
40010c64:	02000112 400102ef 30611bbd 02010000     .......@..a0....
40010c74:	00000100                                ....

40010c78 <CyFxUSBDeviceDscrSS>:
40010c78:	03000112 090102ef 30611bbd 02010000     ..........a0....
40010c88:	00000100                                ....

40010c8c <CyFxUSBDeviceQualDscr>:
40010c8c:	0200060a 400102ef 00000001              .......@....

40010c98 <CyFxUSBFSConfigDscr>:
40010c98:	00090209 80000100 00000032              ........2...

40010ca4 <CyFxUSBHSConfigDscr>:
40010ca4:	00dd0209 80000102 000b08fa 00030e02     ................
40010cb4:	00040900 010e0100 240d0000 50010001     ...........$...P
40010cc4:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010cd4:	0a03e800 059e0300 05240c00 02580102     ..........$...X.
40010ce4:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010cf4:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40010d04:	03240900 00010104 05070003 04000382     ..$.............
40010d14:	03250501 04090040 0e010001 0e000002     ..%.@...........
40010d24:	57010124 04008300 01010102 04241b00     $..W..........$.
40010d34:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
40010d44:	0110719b 00000608 0105241e 1c03c002     .q.......$......
40010d54:	d4e00002 d4e0000e 0fd2000e 05161500     ................
40010d64:	16150100 240a0005 c0010003 00021c03     .......$........
40010d74:	000d2406 05070000 02000283 00000001     .$..............

40010d84 <CyFxUSBBOSDscr>:
40010d84:	00160f05 02100702 00000000 0003100a     ................
40010d94:	0003000e 00000000                       ........

40010d9c <CyFxUSBSSConfigDscr>:
40010d9c:	00e90209 80000102 000b0864 00030e02     ........d.......
40010dac:	00040900 010e0100 240d0000 50010001     ...........$...P
40010dbc:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010dcc:	0a038e00 059e0300 05240c00 02580102     ..........$...X.
40010ddc:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010dec:	8e8d9649 76961f36 02010b50 07d7ff03     I...6..vP.......
40010dfc:	03240900 00010104 05070003 04000382     ..$.............
40010e0c:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40010e1c:	00020e01 01240e00 83005701 01020400     ......$..W......
40010e2c:	1b000101 01010424 32595559 00100000     ....$...YUY2....
40010e3c:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40010e4c:	80020105 00043807 00317040 003b5380     .....8..@p1..S;.
40010e5c:	15001fa4 01000516 00051615 0003240a     .............$..
40010e6c:	38078001 24060004 0000000d 02830507     ...8...$........
40010e7c:	06010400 00000f30 00000000              ....0.......

40010e88 <CyFxUSBStringLangIDDscr>:
40010e88:	04090304                                ....

40010e8c <CyFxUSBManufactureDscr>:
40010e8c:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40010e9c:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40010eac:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40010ebc:	006f0069 0073006e                       i.o.n.s.

40010ec4 <CyFxUSBProductDscr>:
40010ec4:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40010ed4:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40010ee4:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40010ef4:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40010f04:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40010f14:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40010f24:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40010f34:	64612065 73657264 73692073 746f6e20     e address is not
40010f44:	6c617620 0a216469 00000000 4f525245      valid!.....ERRO
40010f54:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
40010f64:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
40010f74:	74655320 6c615620 45206575 726f7272      Set Value Error
40010f84:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40010f94:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
40010fa4:	0a0d6575 00000000 20656854 6b636974     ue......The tick
40010fb4:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40010fc4:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40010fd4:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40010fe4:	20656854 20746547 746e6f63 206c6f72     The Get control 
40010ff4:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40011004:	20656854 20746553 746e6f63 206c6f72     The Set control 
40011014:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40011024:	00000a0d                                ....

40011028 <ExTime>:
40011028:	004e009c 00140027 0005000a 00010002     ..N.'...........

40011038 <CyFxGpifConfig>:
40011038:	0000000f 40030670 40030790 00000005     ....p..@...@....
40011048:	40030664 0000004c 400307a0              d..@L......@

40011054 <CyFxGpifConfig_usb2>:
40011054:	00000093 400308e0 40030a90 00000008     .......@...@....
40011064:	400308d0 0000004c 40030b24 20433249     ...@L...$..@I2C 
40011074:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
40011084:	20656854 6d6d6f63 20646e61 75657571     The command queu
40011094:	73692065 61657220 25207964 64252064     e is ready %d %d
400110a4:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
400110b4:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
400110c4:	65666675 43203a72 2065646f 6425203d     uffer: Code = %d
400110d4:	6973202c 3d20657a 2c782520 616d6420     , size = %x, dma
400110e4:	656e6f44 0d782520 0000000a 45534552     Done %x.....RESE
400110f4:	6e652054 6e756f63 65726574 2e2e2e64     T encountered...
40011104:	78257830 25783020 000a0d78 50535553     0x%x 0x%x...SUSP
40011114:	20444e45 6f636e65 65746e75 2e646572     END encountered.
40011124:	78302e2e 30207825 0d782578 0000000a     ..0x%x 0x%x.....
40011134:	20425355 63736964 656e6e6f 64657463     USB disconnected
40011144:	302e2e2e 20782578 78257830 00000a0d     ...0x%x 0x%x....
40011154:	20746553 465f5943 56555f58 49565f43     Set CY_FX_UVC_VI
40011164:	5f4f4544 544e4f43 5f4c4f52 55514552     DEO_CONTROL_REQU
40011174:	5f545345 4e455645 61462054 64656c69     EST_EVENT Failed
40011184:	0a782520 00000000 20746553 465f5943      %x.....Set CY_F
40011194:	56555f58 49565f43 5f4f4544 45525453     X_UVC_VIDEO_STRE
400111a4:	525f4d41 45555145 455f5453 544e4556     AM_REQUEST_EVENT
400111b4:	69614620 2064656c 000a7825 65746c41      Failed %x..Alte
400111c4:	74616e72 65732065 6e697474 2e302067     rnate setting 0.
400111d4:	000a0d2e 61656c43 65662072 72757461     ....Clear featur
400111e4:	65722065 73657571 65642074 74636574     e request detect
400111f4:	2e2e6465 00000a0d 63200a0d 696d6d6f     ed........ commi
40011204:	666f6574 61747320 3d206574 00642520     teof state = %d.
40011214:	6e616843 206c656e 20746553 70617257     Channel Set Wrap
40011224:	66207055 656c6961 45202c64 726f7272     Up failed, Error
40011234:	646f6320 203d2065 0a0d6425 00000000      code = %d......
40011244:	6f727245 61682072 656c646e 2e2e2e72     Error handler...
40011254:	00000a0d 6d6d6f43 45207469 6620464f     ....Commit EOF f
40011264:	656c6961 000a2164 20656854 20433249     ailed!..The I2C 
40011274:	6d6d6f63 20646e61 30207369 20782578     command is 0x%x 
40011284:	78257830 25783020 78302078 30207825     0x%x 0x%x 0x%x 0
40011294:	20782578 78257830 25783020 78302078     x%x 0x%x 0x%x 0x
400112a4:	30207825 20782578 78257830 25783020     %x 0x%x 0x%x 0x%
400112b4:	000a0d78 20656854 20433249 72727563     x...The I2C curr
400112c4:	20746e65 61746164 20736920 20746f6e     ent data is not 
400112d4:	69617661 6c62616c 74202e65 61207972     available. try a
400112e4:	6e696167 6425202e 0d642520 0000000a     gain. %d %d.....
400112f4:	4d707845 43474126 6e657320 6f742074     ExpM&AGC sent to
40011304:	736f6820 25202e74 64252064 6425203b      host. %d %d; %d
40011314:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
40011324:	746f6720 206e6574 6d6f7266 736f6820      gotten from hos
40011334:	25202e74 64252064 6425203b 0d642520     t. %d %d; %d %d.
40011344:	0000000a 20657845 6576656c 25202e6c     ....Exe level. %
40011354:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
40011364:	20434c42 2e746573 20642520 203b6425     BLC set. %d %d; 
40011374:	25206425 000a0d64 20656854 20746567     %d %d...The get 
40011384:	61746164 6f726620 6f68206d 66207473     data from host f
40011394:	206c6961 6f727265 6f632072 25206564     ail error code %
400113a4:	0a0d2e64 00000000 20656854 75716552     d.......The Requ
400113b4:	20747365 78257830 72617020 74656d61     est 0x%x paramet
400113c4:	67207265 66207465 206d6f72 74736f68     er get from host
400113d4:	25783020 78302078 2f207825 6e657320      0x%x 0x%x / sen
400113e4:	6f742064 736f6820 78302074 30207825     d to host 0x%x 0
400113f4:	0d782578 0000000a 6d6f6f5a 20704f20     x%x.....Zoom Op 
40011404:	65636572 73657669 54432820 78302029     receives (CT) 0x
40011414:	30207825 20782578 78257830 00000a0d     %x 0x%x 0x%x....
40011424:	61666564 20746c75 656c6573 726f7463     default selector
40011434:	54432820 78302029 30207825 0d782578      (CT) 0x%x 0x%x.
40011444:	0000000a 61666564 20746c75 75716572     ....default requ
40011454:	20747365 29544328 25783020 78302078     est (CT) 0x%x 0x
40011464:	0a0d7825 00000000 20656854 75716552     %x......The Requ
40011474:	20747365 78257830 72617020 74656d61     est 0x%x paramet
40011484:	67207265 66207465 206d6f72 74736f68     er get from host
40011494:	54432820 78302029 30207825 20782578      (CT) 0x%x 0x%x 
400114a4:	78257830 73202f20 20646e65 68206f74     0x%x / send to h
400114b4:	2074736f 78257830 25783020 78302078     ost 0x%x 0x%x 0x
400114c4:	202c7825 0a0d6425 00000000 20425355     %x, %d......USB 
400114d4:	65657073 203d2064 65206425 666e6576     speed = %d evenf
400114e4:	2067616c 7830203d 62207825 7165526d     lag = 0x%x bmReq
400114f4:	65707954 30203d20 0d782578 6552620a     Type = 0x%x..bRe
40011504:	73657571 203d2074 78257830 61567720     quest = 0x%x wVa
40011514:	2065756c 7830203d 77207825 65646e49     lue = 0x%x wInde
40011524:	203d2078 78257830 654c7720 6874676e     x = 0x%x wLength
40011534:	30203d20 20782578 6c667369 30206761      = 0x%x isflag 0
40011544:	0d782578 0000000a 20656854 61666564     x%x.....The defa
40011554:	20746c75 75746573 65722070 73657571     ult setup reques
40011564:	61762074 2065756c 78257830 25783020     t value 0x%x 0x%
40011574:	000a0d78 20656854 74736f68 6d6f6320     x...The host com
40011584:	646e616d 20736920 20746f6e 72726f63     mand is not corr
40011594:	20746365 20726f66 30383031 61632070     ect for 1080p ca
400115a4:	6172656d 25783020 78302078 25207825     mera 0x%x 0x%x %
400115b4:	000a0d64 20746553 465f5943 56555f58     d...Set CY_FX_UV
400115c4:	54535f43 4d414552 4556455f 6620544e     C_STREAM_EVENT f
400115d4:	656c6961 78252064 0000000a 20746547     ailed %x....Get 
400115e4:	20435655 6c697473 7274206c 65676769     UVC still trigge
400115f4:	6f632072 6f72746e 6425206c 0d642520     r control %d %d.
40011604:	0000000a 20435655 6c697473 7274206c     ....UVC still tr
40011614:	65676769 6f632072 6f72746e 6166206c     igger control fa
40011624:	25206c69 64252064 00000a0d 6c696146     il %d %d....Fail
40011634:	74206465 6573206f 6920646e 7265746e     ed to send inter
40011644:	74707572 61747320 2c737574 72724520     rupt status, Err
40011654:	6320726f 2065646f 6425203d 00000a0d     or code = %d....
40011664:	20656854 20746573 20666564 61746164     The set def data
40011674:	25783020 30202c78 2e782578 00000a0d      0x%x, 0x%x.....
40011684:	20656854 20746573 20666564 61746164     The set def data
40011694:	25783020 30202c78 2c782578 25783020      0x%x, 0x%x, 0x%
400116a4:	30202c78 2c782578 25783020 30202c78     x, 0x%x, 0x%x, 0
400116b4:	2e782578 00000a0d 54524155 696e6920     x%x.....UART ini
400116c4:	6c616974 74617a69 206e6f69 6c696166     tialization fail
400116d4:	0a216465 00000000 20433249 74696e69     ed!.....I2C init
400116e4:	696c6169 6974617a 66206e6f 656c6961     ialization faile
400116f4:	000a2164 20433249 666e6f63 72756769     d!..I2C configur
40011704:	6f697461 6166206e 64656c69 00000a21     ation failed!...
40011714:	20435655 61657243 45206574 746e6576     UVC Create Event
40011724:	69616620 2c64656c 72724520 4320726f      failed, Error C
40011734:	2065646f 6425203d 0000000a 4f495047     ode = %d....GPIO
40011744:	696e4920 61662074 64656c69 7245202c      Init failed, Er
40011754:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011764:	4f495047 65764f20 64697272 61662065     GPIO Override fa
40011774:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011784:	25203d20 00000a64 4f495047 29303228      = %d...GPIO(20)
40011794:	65764f20 64697272 61662065 64656c69      Override failed
400117a4:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400117b4:	00000a64 4f495047 29343228 65764f20     d...GPIO(24) Ove
400117c4:	64697272 61662065 64656c69 7245202c     rride failed, Er
400117d4:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400117e4:	4f495047 74655320 65722820 20746573     GPIO Set (reset 
400117f4:	20293232 666e6f43 45206769 726f7272     22) Config Error
40011804:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011814:	00000a64 4f495047 74655320 6f702820     d...GPIO Set (po
40011824:	20726577 20293032 666e6f43 45206769     wer 20) Config E
40011834:	726f7272 7245202c 20726f72 65646f43     rror, Error Code
40011844:	25203d20 00000a64 4f495047 74655320      = %d...GPIO Set
40011854:	6e732820 73207061 20746f68 20293432      (snap shot 24) 
40011864:	666e6f43 45206769 726f7272 7245202c     Config Error, Er
40011874:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011884:	20424950 636e7546 6e6f6974 69614620     PIB Function Fai
40011894:	2064656c 53206f74 74726174 7245202c     led to Start, Er
400118a4:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400118b4:	20425355 636e7546 6e6f6974 69614620     USB Function Fai
400118c4:	2064656c 53206f74 74726174 7245202c     led to Start, Er
400118d4:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400118e4:	20425355 20746553 70646e45 746e696f     USB Set Endpoint
400118f4:	6e6f6320 20676966 6c696166 202c6465      config failed, 
40011904:	6f727245 6f432072 3d206564 0a642520     Error Code = %d.
40011914:	00000000 20414d44 65746e49 70757272     ....DMA Interrup
40011924:	74532074 73757461 61684320 6c656e6e     t Status Channel
40011934:	65724320 6f697461 6146206e 64656c69      Creation Failed
40011944:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011954:	00000a64 6c696146 74206465 6c61206f     d...Failed to al
40011964:	61636f6c 6d206574 726f6d65 6f662079     locate memory fo
40011974:	6e692072 72726574 20747075 74617473     r interrupt stat
40011984:	62207375 65666675 000a0d72 20414d44     us buffer...DMA 
40011994:	6e616843 206c656e 61657243 6e6f6974     Channel Creation
400119a4:	69614620 2c64656c 72724520 4320726f      Failed, Error C
400119b4:	2065646f 6425203d 0000000a 20425355     ode = %d....USB 
400119c4:	6e6e6f43 20746365 6c696166 202c6465     Connect failed, 
400119d4:	6f727245 6f432072 3d206564 0a642520     Error Code = %d.
400119e4:	00000000 20414d44 6e616843 206c656e     ....DMA Channel 
400119f4:	65736552 61462074 64656c69 7245202c     Reset Failed, Er
40011a04:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011a14:	20414d44 6e616843 206c656e 20746553     DMA Channel Set 
40011a24:	6e617254 72656673 69614620 2c64656c     Transfer Failed,
40011a34:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011a44:	0000000a 20414d44 6e616843 206c656e     ....DMA Channel 
40011a54:	20746553 6e617254 72656673 69614620     Set Transfer Fai
40011a64:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011a74:	6425203d 00000a0d 73200a0d 72657075     = %d...... super
40011a84:	69706720 00000066 68200a0d 20686769      gpif..... high 
40011a94:	66697067 00000000 64616f4c 20676e69     gpif....Loading 
40011aa4:	46495047 6e6f4320 75676966 69746172     GPIF Configurati
40011ab4:	66206e6f 656c6961 45202c64 726f7272     on failed, Error
40011ac4:	646f4320 203d2065 0a0d6425 00000000      Code = %d......
40011ad4:	72617453 676e6974 49504720 74732046     Starting GPIF st
40011ae4:	20657461 6863616d 20656e69 6c696166     ate machine fail
40011af4:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011b04:	0d642520 0000000a 553a3033 41204356      %d.....30:UVC A
40011b14:	54207070 61657268 00000064 553a3133     pp Thread...31:U
40011b24:	41204356 45207070 54203050 61657268     VC App EP0 Threa
40011b34:	00000064 493a3233 41204332 43207070     d...32:I2C App C
40011b44:	204c5254 65726854 00006461              TRL Thread..

40011b50 <glFx3PartProperties>:
40011b50:	00000000 0000009f 00000010 0000009b     ................
40011b60:	00000020 0000008f 00000030 0000008b      .......0.......
40011b70:	00000004 000000ef 00000104 000000ef     ................
40011b80:	00000184 000000af 00000154 000000e9     ........T.......
40011b90:	000001d4 000000a9 10000004 000000ee     ................
40011ba0:	10000104 000000ee 10000184 000000ae     ................
40011bb0:	10000154 000000e8 100001d4 000000a8     T...............
40011bc0:	00000002 00000077 00000102 00000077     ....w.......w...
40011bd0:	000001c2 00000035 000001d2 00000031     ....5.......1...
40011be0:	10000002 00000076 10000102 00000076     ....v.......v...
40011bf0:	100001c2 00000034 00000258 00000199     ....4...X.......
40011c00:	00000248 0000019d 00000458 00000299     H.......X.......
40011c10:	00000448 0000029d 00000848 0000049d     H.......H.......
40011c20:	10000448 0000029c                       H.......

40011c28 <glPmmcCsdValue>:
40011c28:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40011c38 <glPmmcExtCsdValue>:
40011c38:	40040000 03020200 00000404 32321414     ...@..........22
40011c48:	00406464 00000000                       dd@.....

40011c50 <glConstGpifDefaults>:
40011c50:	00000220 00000000 00000000 00000000      ...............
40011c60:	000f0000 00000000 00000000 00000082     ................
40011c70:	00000782 00000000 00000000 00000000     ................
	...
40011cc4:	00000006 00000000 0000ffff 0000010a     ................
40011cd4:	00000000 0000ffff 00000000 0000ffff     ................
40011ce4:	0000010a 00000000 0000ffff 00000000     ................
	...
40011d4c:	00010400 00010400 00010400 00010400     ................
40011d5c:	10000000 00000000 00000000 00000000     ................
	...
40011d7c:	00000001                                ....

40011d80 <glGpifConstMaxState>:
40011d80:	1f3f7fff                                ..?.

40011d84 <CyU3PSSEpTypeMap>:
40011d84:	01020003                                ....

40011d88 <glUsbMaxPacketSize>:
40011d88:	000003ff 00000040 00000040 00000400     ....@...@.......
40011d98:	00000200 00000400 00000400 00000400     ................
40011da8:	00000400                                ....

40011dac <glUsb3CompliancePatterns>:
40011dac:	00000600 0000044a 00000478 000005bc     ....J...x.......
40011dbc:	00000c00 000005fc 000001fc 00001400     ................
40011dcc:	00001000                                ....

40011dd0 <CyU3PFirmwareEntry>:
40011dd0:	e59f1038 	ldr	r1, [pc, #56]	; 40011e10 <CyU3PFirmwareEntry+0x40>
40011dd4:	e3e00000 	mvn	r0, #0
40011dd8:	e5810000 	str	r0, [r1]
40011ddc:	e59f1030 	ldr	r1, [pc, #48]	; 40011e14 <CyU3PFirmwareEntry+0x44>
40011de0:	e2411008 	sub	r1, r1, #8
40011de4:	e3a02a01 	mov	r2, #4096	; 0x1000
40011de8:	e3a000d3 	mov	r0, #211	; 0xd3
40011dec:	e121f000 	msr	CPSR_c, r0
40011df0:	e0811002 	add	r1, r1, r2
40011df4:	e3c11007 	bic	r1, r1, #7
40011df8:	e1a0d001 	mov	sp, r1
40011dfc:	eb000271 	bl	400127c8 <CyU3PSysSetupMMU>
40011e00:	eb000620 	bl	40013688 <CyU3PSysCheckBootState>
40011e04:	eb000003 	bl	40011e18 <CyU3PSetupStackPtrs>
40011e08:	eb0000d1 	bl	40012154 <__CyU3PEntryKeep>
40011e0c:	eaffc5f7 	b	400035f0 <CyU3PToolChainInit>
40011e10:	fffff014 	.word	0xfffff014
40011e14:	40002000 	.word	0x40002000

40011e18 <CyU3PSetupStackPtrs>:
40011e18:	e3a01201 	mov	r1, #268435456	; 0x10000000
40011e1c:	e2411008 	sub	r1, r1, #8
40011e20:	e3a02b02 	mov	r2, #2048	; 0x800
40011e24:	e3a030df 	mov	r3, #223	; 0xdf
40011e28:	e12ff003 	msr	CPSR_fsxc, r3
40011e2c:	e0811002 	add	r1, r1, r2
40011e30:	e3c11007 	bic	r1, r1, #7
40011e34:	e1a0d001 	mov	sp, r1
40011e38:	e3a0a000 	mov	sl, #0
40011e3c:	e3a0b000 	mov	fp, #0
40011e40:	e3a02c01 	mov	r2, #256	; 0x100
40011e44:	e3a030d7 	mov	r3, #215	; 0xd7
40011e48:	e12ff003 	msr	CPSR_fsxc, r3
40011e4c:	e0811002 	add	r1, r1, r2
40011e50:	e3c11007 	bic	r1, r1, #7
40011e54:	e1a0d001 	mov	sp, r1
40011e58:	e3a0a000 	mov	sl, #0
40011e5c:	e3a0b000 	mov	fp, #0
40011e60:	e3a02c01 	mov	r2, #256	; 0x100
40011e64:	e3a030db 	mov	r3, #219	; 0xdb
40011e68:	e12ff003 	msr	CPSR_fsxc, r3
40011e6c:	e0811002 	add	r1, r1, r2
40011e70:	e3c11007 	bic	r1, r1, #7
40011e74:	e1a0d001 	mov	sp, r1
40011e78:	e3a0a000 	mov	sl, #0
40011e7c:	e3a0b000 	mov	fp, #0
40011e80:	e3a02c02 	mov	r2, #512	; 0x200
40011e84:	e3a000d1 	mov	r0, #209	; 0xd1
40011e88:	e121f000 	msr	CPSR_c, r0
40011e8c:	e0811002 	add	r1, r1, r2
40011e90:	e3c11007 	bic	r1, r1, #7
40011e94:	e1a0d001 	mov	sp, r1
40011e98:	e3a0a000 	mov	sl, #0
40011e9c:	e3a0b000 	mov	fp, #0
40011ea0:	e3a02b01 	mov	r2, #1024	; 0x400
40011ea4:	e3a000d2 	mov	r0, #210	; 0xd2
40011ea8:	e121f000 	msr	CPSR_c, r0
40011eac:	e0811002 	add	r1, r1, r2
40011eb0:	e3c11007 	bic	r1, r1, #7
40011eb4:	e1a0d001 	mov	sp, r1
40011eb8:	e3a02a01 	mov	r2, #4096	; 0x1000
40011ebc:	e3a000d3 	mov	r0, #211	; 0xd3
40011ec0:	e121f000 	msr	CPSR_c, r0
40011ec4:	e0811002 	add	r1, r1, r2
40011ec8:	e3c11007 	bic	r1, r1, #7
40011ecc:	e1a0d001 	mov	sp, r1
40011ed0:	e12fff1e 	bx	lr

40011ed4 <CyU3PSysCleanDCache>:
40011ed4:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40011ed8:	1afffffd 	bne	40011ed4 <CyU3PSysCleanDCache>
40011edc:	e12fff1e 	bx	lr

40011ee0 <CyU3PSysClearDCache>:
40011ee0:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40011ee4:	1afffffd 	bne	40011ee0 <CyU3PSysClearDCache>
40011ee8:	e12fff1e 	bx	lr

40011eec <CyU3PSysFlushIRegion>:
40011eec:	e3510000 	cmp	r1, #0
40011ef0:	0a00000a 	beq	40011f20 <CyU3PSysFlushIRegion+0x34>
40011ef4:	e0801001 	add	r1, r0, r1
40011ef8:	e3c0001f 	bic	r0, r0, #31
40011efc:	e3a0201f 	mov	r2, #31
40011f00:	e1110002 	tst	r1, r2
40011f04:	e0411000 	sub	r1, r1, r0
40011f08:	e1a012a1 	lsr	r1, r1, #5
40011f0c:	12811001 	addne	r1, r1, #1
40011f10:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40011f14:	e2800020 	add	r0, r0, #32
40011f18:	e2511001 	subs	r1, r1, #1
40011f1c:	1afffffb 	bne	40011f10 <CyU3PSysFlushIRegion+0x24>
40011f20:	e12fff1e 	bx	lr

40011f24 <CyU3PSysClearDRegion>:
40011f24:	e3510000 	cmp	r1, #0
40011f28:	0a00000a 	beq	40011f58 <CyU3PSysClearDRegion+0x34>
40011f2c:	e0801001 	add	r1, r0, r1
40011f30:	e3c0001f 	bic	r0, r0, #31
40011f34:	e3a0201f 	mov	r2, #31
40011f38:	e1110002 	tst	r1, r2
40011f3c:	e0411000 	sub	r1, r1, r0
40011f40:	e1a012a1 	lsr	r1, r1, #5
40011f44:	12811001 	addne	r1, r1, #1
40011f48:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
40011f4c:	e2800020 	add	r0, r0, #32
40011f50:	e2511001 	subs	r1, r1, #1
40011f54:	1afffffb 	bne	40011f48 <CyU3PSysClearDRegion+0x24>
40011f58:	e12fff1e 	bx	lr

40011f5c <CyU3PSysCleanDRegion>:
40011f5c:	e3510000 	cmp	r1, #0
40011f60:	0a00000a 	beq	40011f90 <CyU3PSysCleanDRegion+0x34>
40011f64:	e0801001 	add	r1, r0, r1
40011f68:	e3c0001f 	bic	r0, r0, #31
40011f6c:	e3a0201f 	mov	r2, #31
40011f70:	e1110002 	tst	r1, r2
40011f74:	e0411000 	sub	r1, r1, r0
40011f78:	e1a012a1 	lsr	r1, r1, #5
40011f7c:	12811001 	addne	r1, r1, #1
40011f80:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
40011f84:	e2800020 	add	r0, r0, #32
40011f88:	e2511001 	subs	r1, r1, #1
40011f8c:	1afffffb 	bne	40011f80 <CyU3PSysCleanDRegion+0x24>
40011f90:	e12fff1e 	bx	lr

40011f94 <CyU3PSysFlushDRegion>:
40011f94:	e3510000 	cmp	r1, #0
40011f98:	0a00000a 	beq	40011fc8 <CyU3PSysFlushDRegion+0x34>
40011f9c:	e0801001 	add	r1, r0, r1
40011fa0:	e3c0001f 	bic	r0, r0, #31
40011fa4:	e3a0201f 	mov	r2, #31
40011fa8:	e1110002 	tst	r1, r2
40011fac:	e0411000 	sub	r1, r1, r0
40011fb0:	e1a012a1 	lsr	r1, r1, #5
40011fb4:	12811001 	addne	r1, r1, #1
40011fb8:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40011fbc:	e2800020 	add	r0, r0, #32
40011fc0:	e2511001 	subs	r1, r1, #1
40011fc4:	1afffffb 	bne	40011fb8 <CyU3PSysFlushDRegion+0x24>
40011fc8:	e12fff1e 	bx	lr

40011fcc <CyU3PSysCacheIRegion>:
40011fcc:	e3a03000 	mov	r3, #0
40011fd0:	e3510000 	cmp	r1, #0
40011fd4:	0a000023 	beq	40012068 <CyU3PSysCacheIRegion+0x9c>
40011fd8:	e0801001 	add	r1, r0, r1
40011fdc:	e3c0001f 	bic	r0, r0, #31
40011fe0:	e3a0201f 	mov	r2, #31
40011fe4:	e1110002 	tst	r1, r2
40011fe8:	e0411000 	sub	r1, r1, r0
40011fec:	e1a012a1 	lsr	r1, r1, #5
40011ff0:	12811001 	addne	r1, r1, #1
40011ff4:	e351003f 	cmp	r1, #63	; 0x3f
40011ff8:	8a00001a 	bhi	40012068 <CyU3PSysCacheIRegion+0x9c>
40011ffc:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
40012000:	e20c200f 	and	r2, ip, #15
40012004:	e3a03001 	mov	r3, #1
40012008:	e11c0003 	tst	ip, r3
4001200c:	11a03083 	lslne	r3, r3, #1
40012010:	111c0003 	tstne	ip, r3
40012014:	11a03083 	lslne	r3, r3, #1
40012018:	111c0003 	tstne	ip, r3
4001201c:	11a03083 	lslne	r3, r3, #1
40012020:	1a000010 	bne	40012068 <CyU3PSysCacheIRegion+0x9c>
40012024:	e3510000 	cmp	r1, #0
40012028:	0a00000e 	beq	40012068 <CyU3PSysCacheIRegion+0x9c>
4001202c:	e1e03003 	mvn	r3, r3
40012030:	e203300f 	and	r3, r3, #15
40012034:	e3ccc00f 	bic	ip, ip, #15
40012038:	e08cc003 	add	ip, ip, r3
4001203c:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
40012040:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
40012044:	e2800020 	add	r0, r0, #32
40012048:	e2511001 	subs	r1, r1, #1
4001204c:	1afffffb 	bne	40012040 <CyU3PSysCacheIRegion+0x74>
40012050:	e1e0300c 	mvn	r3, ip
40012054:	e203300f 	and	r3, r3, #15
40012058:	e1822003 	orr	r2, r2, r3
4001205c:	e3ccc00f 	bic	ip, ip, #15
40012060:	e00cc002 	and	ip, ip, r2
40012064:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
40012068:	e1a00003 	mov	r0, r3
4001206c:	e12fff1e 	bx	lr

40012070 <CyU3PSysCacheDRegion>:
40012070:	e3a03000 	mov	r3, #0
40012074:	e3510000 	cmp	r1, #0
40012078:	0a000022 	beq	40012108 <CyU3PSysCacheDRegion+0x98>
4001207c:	e0801001 	add	r1, r0, r1
40012080:	e3c0001f 	bic	r0, r0, #31
40012084:	e3a0201f 	mov	r2, #31
40012088:	e1110002 	tst	r1, r2
4001208c:	e0411000 	sub	r1, r1, r0
40012090:	e1a012a1 	lsr	r1, r1, #5
40012094:	12811001 	addne	r1, r1, #1
40012098:	e351003f 	cmp	r1, #63	; 0x3f
4001209c:	8a000019 	bhi	40012108 <CyU3PSysCacheDRegion+0x98>
400120a0:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
400120a4:	e20c200f 	and	r2, ip, #15
400120a8:	e3a03001 	mov	r3, #1
400120ac:	e11c0003 	tst	ip, r3
400120b0:	11a03083 	lslne	r3, r3, #1
400120b4:	111c0003 	tstne	ip, r3
400120b8:	11a03083 	lslne	r3, r3, #1
400120bc:	111c0003 	tstne	ip, r3
400120c0:	11a03083 	lslne	r3, r3, #1
400120c4:	1a00000f 	bne	40012108 <CyU3PSysCacheDRegion+0x98>
400120c8:	e3510000 	cmp	r1, #0
400120cc:	0a00000d 	beq	40012108 <CyU3PSysCacheDRegion+0x98>
400120d0:	e1e03003 	mvn	r3, r3
400120d4:	e203300f 	and	r3, r3, #15
400120d8:	e3ccc00f 	bic	ip, ip, #15
400120dc:	e08cc003 	add	ip, ip, r3
400120e0:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
400120e4:	e4903020 	ldr	r3, [r0], #32
400120e8:	e2511001 	subs	r1, r1, #1
400120ec:	1afffffc 	bne	400120e4 <CyU3PSysCacheDRegion+0x74>
400120f0:	e1e0300c 	mvn	r3, ip
400120f4:	e203300f 	and	r3, r3, #15
400120f8:	e1822003 	orr	r2, r2, r3
400120fc:	e3ccc00f 	bic	ip, ip, #15
40012100:	e00cc002 	and	ip, ip, r2
40012104:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
40012108:	e1a00003 	mov	r0, r3
4001210c:	e12fff1e 	bx	lr

40012110 <CyU3PSysUnlockICache>:
40012110:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
40012114:	e3c0000f 	bic	r0, r0, #15
40012118:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

4001211c <CyU3PSysUnlockDCache>:
4001211c:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
40012120:	e3c0000f 	bic	r0, r0, #15
40012124:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

40012128 <__cyu3p_exception_vectors>:
40012128:	e59ff028 	ldr	pc, [pc, #40]	; 40012158 <__CyU3PEntryKeep+0x4>
4001212c:	e59ff028 	ldr	pc, [pc, #40]	; 4001215c <__CyU3PEntryKeep+0x8>
40012130:	e59ff028 	ldr	pc, [pc, #40]	; 40012160 <__CyU3PEntryKeep+0xc>
40012134:	e59ff028 	ldr	pc, [pc, #40]	; 40012164 <__CyU3PEntryKeep+0x10>
40012138:	e59ff028 	ldr	pc, [pc, #40]	; 40012168 <__CyU3PEntryKeep+0x14>
4001213c:	e59ff028 	ldr	pc, [pc, #40]	; 4001216c <__CyU3PEntryKeep+0x18>
40012140:	e51ff120 	ldr	pc, [pc, #-288]	; 40012028 <CyU3PSysCacheIRegion+0x5c>
40012144:	e59ff024 	ldr	pc, [pc, #36]	; 40012170 <__CyU3PEntryKeep+0x1c>

40012148 <__CyU3PSWIHandler>:
40012148:	eafffffe 	b	40012148 <__CyU3PSWIHandler>

4001214c <__CyU3PReservedHandler>:
4001214c:	eafffffe 	b	4001214c <__CyU3PReservedHandler>

40012150 <__CyU3PFiqHandler>:
40012150:	eafffffe 	b	40012150 <__CyU3PFiqHandler>

40012154 <__CyU3PEntryKeep>:
40012154:	e12fff1e 	bx	lr
40012158:	40011dd0 	.word	0x40011dd0
4001215c:	40003618 	.word	0x40003618
40012160:	40012148 	.word	0x40012148
40012164:	4000361c 	.word	0x4000361c
40012168:	40003620 	.word	0x40003620
4001216c:	4001214c 	.word	0x4001214c
40012170:	40012150 	.word	0x40012150

Disassembly of section i.CyU3PDevCheckDevStateStruct:

40012174 <CyU3PDevCheckDevStateStruct>:
40012174:	e92d4038 	push	{r3, r4, r5, lr}
40012178:	e59f4118 	ldr	r4, [pc, #280]	; 40012298 <_etext+0x124>
4001217c:	e3a00000 	mov	r0, #0
40012180:	e58d0000 	str	r0, [sp]
40012184:	e5940000 	ldr	r0, [r4]
40012188:	e59f110c 	ldr	r1, [pc, #268]	; 4001229c <_etext+0x128>
4001218c:	e1500001 	cmp	r0, r1
40012190:	0a000000 	beq	40012198 <CyU3PDevCheckDevStateStruct+0x24>
40012194:	ea00003b 	b	40012288 <CyU3PDevCheckDevStateStruct+0x114>
40012198:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001219c:	e59f10fc 	ldr	r1, [pc, #252]	; 400122a0 <_etext+0x12c>
400121a0:	e1500001 	cmp	r0, r1
400121a4:	1a000005 	bne	400121c0 <CyU3PDevCheckDevStateStruct+0x4c>
400121a8:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
400121ac:	e59f10f0 	ldr	r1, [pc, #240]	; 400122a4 <_etext+0x130>
400121b0:	e1500001 	cmp	r0, r1
400121b4:	3a000001 	bcc	400121c0 <CyU3PDevCheckDevStateStruct+0x4c>
400121b8:	e594500c 	ldr	r5, [r4, #12]
400121bc:	ea000001 	b	400121c8 <CyU3PDevCheckDevStateStruct+0x54>
400121c0:	e594000c 	ldr	r0, [r4, #12]
400121c4:	e20050ff 	and	r5, r0, #255	; 0xff
400121c8:	e594000c 	ldr	r0, [r4, #12]
400121cc:	e3500000 	cmp	r0, #0
400121d0:	0a000003 	beq	400121e4 <CyU3PDevCheckDevStateStruct+0x70>
400121d4:	e594000c 	ldr	r0, [r4, #12]
400121d8:	e59f10c8 	ldr	r1, [pc, #200]	; 400122a8 <_etext+0x134>
400121dc:	e1500001 	cmp	r0, r1
400121e0:	9a000000 	bls	400121e8 <CyU3PDevCheckDevStateStruct+0x74>
400121e4:	ea000027 	b	40012288 <CyU3PDevCheckDevStateStruct+0x114>
400121e8:	e1a0200d 	mov	r2, sp
400121ec:	e1a01005 	mov	r1, r5
400121f0:	e59f00a0 	ldr	r0, [pc, #160]	; 40012298 <_etext+0x124>
400121f4:	eb00049f 	bl	40013478 <CyU3PComputeChecksum>
400121f8:	e594000c 	ldr	r0, [r4, #12]
400121fc:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
40012200:	e2800a02 	add	r0, r0, #8192	; 0x2000
40012204:	e5900000 	ldr	r0, [r0]
40012208:	e59d1000 	ldr	r1, [sp]
4001220c:	e1500001 	cmp	r0, r1
40012210:	0a000000 	beq	40012218 <CyU3PDevCheckDevStateStruct+0xa4>
40012214:	ea00001b 	b	40012288 <CyU3PDevCheckDevStateStruct+0x114>
40012218:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001221c:	e59f107c 	ldr	r1, [pc, #124]	; 400122a0 <_etext+0x12c>
40012220:	e1500001 	cmp	r0, r1
40012224:	0a000001 	beq	40012230 <CyU3PDevCheckDevStateStruct+0xbc>
40012228:	e59f007c 	ldr	r0, [pc, #124]	; 400122ac <_etext+0x138>
4001222c:	e58400dc 	str	r0, [r4, #220]	; 0xdc
40012230:	e3a00001 	mov	r0, #1
40012234:	e59f1074 	ldr	r1, [pc, #116]	; 400122b0 <_etext+0x13c>
40012238:	e5810000 	str	r0, [r1]
4001223c:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012240:	e59f106c 	ldr	r1, [pc, #108]	; 400122b4 <_etext+0x140>
40012244:	e1500001 	cmp	r0, r1
40012248:	3a00000d 	bcc	40012284 <CyU3PDevCheckDevStateStruct+0x110>
4001224c:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
40012250:	e3500000 	cmp	r0, #0
40012254:	0a00000a 	beq	40012284 <CyU3PDevCheckDevStateStruct+0x110>
40012258:	e59f0058 	ldr	r0, [pc, #88]	; 400122b8 <_etext+0x144>
4001225c:	e5900018 	ldr	r0, [r0, #24]
40012260:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012264:	0a000006 	beq	40012284 <CyU3PDevCheckDevStateStruct+0x110>
40012268:	e59f004c 	ldr	r0, [pc, #76]	; 400122bc <_etext+0x148>
4001226c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40012270:	e3100001 	tst	r0, #1
40012274:	0a000002 	beq	40012284 <CyU3PDevCheckDevStateStruct+0x110>
40012278:	e3a00001 	mov	r0, #1
4001227c:	e59f103c 	ldr	r1, [pc, #60]	; 400122c0 <_etext+0x14c>
40012280:	e5810000 	str	r0, [r1]
40012284:	e8bd8038 	pop	{r3, r4, r5, pc}
40012288:	e1a00000 	nop			; (mov r0, r0)
4001228c:	e3e00000 	mvn	r0, #0
40012290:	e5840000 	str	r0, [r4]
40012294:	eafffffa 	b	40012284 <CyU3PDevCheckDevStateStruct+0x110>
40012298:	40002000 	.word	0x40002000
4001229c:	42575943 	.word	0x42575943
400122a0:	42335846 	.word	0x42335846
400122a4:	00010300 	.word	0x00010300
400122a8:	00000ff8 	.word	0x00000ff8
400122ac:	00010101 	.word	0x00010101
400122b0:	40030c6c 	.word	0x40030c6c
400122b4:	00010201 	.word	0x00010201
400122b8:	e0052000 	.word	0xe0052000
400122bc:	e0001000 	.word	0xe0001000
400122c0:	40030c70 	.word	0x40030c70

Disassembly of section i.CyU3PDeviceCacheControl:

400122c4 <CyU3PDeviceCacheControl>:
400122c4:	e92d4070 	push	{r4, r5, r6, lr}
400122c8:	e1a04000 	mov	r4, r0
400122cc:	e1a06001 	mov	r6, r1
400122d0:	e1a05002 	mov	r5, r2
400122d4:	e3550000 	cmp	r5, #0
400122d8:	0a000003 	beq	400122ec <CyU3PDeviceCacheControl+0x28>
400122dc:	e3560000 	cmp	r6, #0
400122e0:	1a000001 	bne	400122ec <CyU3PDeviceCacheControl+0x28>
400122e4:	e3a00040 	mov	r0, #64	; 0x40
400122e8:	e8bd8070 	pop	{r4, r5, r6, pc}
400122ec:	eb000181 	bl	400128f8 <CyU3PSysBarrierSync>
400122f0:	ebfffefa 	bl	40011ee0 <CyU3PSysClearDCache>
400122f4:	eb0001a1 	bl	40012980 <CyU3PSysFlushICache>
400122f8:	eb00018f 	bl	4001293c <CyU3PSysDisableICache>
400122fc:	eb00018a 	bl	4001292c <CyU3PSysDisableDCache>
40012300:	e3540000 	cmp	r4, #0
40012304:	0a000003 	beq	40012318 <CyU3PDeviceCacheControl+0x54>
40012308:	eb000193 	bl	4001295c <CyU3PSysEnableICache>
4001230c:	eb000179 	bl	400128f8 <CyU3PSysBarrierSync>
40012310:	e59f0038 	ldr	r0, [pc, #56]	; 40012350 <CyU3PDeviceCacheControl+0x8c>
40012314:	e5804000 	str	r4, [r0]
40012318:	e3a00000 	mov	r0, #0
4001231c:	e59f1030 	ldr	r1, [pc, #48]	; 40012354 <CyU3PDeviceCacheControl+0x90>
40012320:	e5810000 	str	r0, [r1]
40012324:	e3560000 	cmp	r6, #0
40012328:	0a000005 	beq	40012344 <CyU3PDeviceCacheControl+0x80>
4001232c:	eb000186 	bl	4001294c <CyU3PSysEnableDCache>
40012330:	eb000170 	bl	400128f8 <CyU3PSysBarrierSync>
40012334:	e59f0018 	ldr	r0, [pc, #24]	; 40012354 <CyU3PDeviceCacheControl+0x90>
40012338:	e5805000 	str	r5, [r0]
4001233c:	e59f0014 	ldr	r0, [pc, #20]	; 40012358 <CyU3PDeviceCacheControl+0x94>
40012340:	e5806000 	str	r6, [r0]
40012344:	eb00016b 	bl	400128f8 <CyU3PSysBarrierSync>
40012348:	e3a00000 	mov	r0, #0
4001234c:	eaffffe5 	b	400122e8 <CyU3PDeviceCacheControl+0x24>
40012350:	40030c60 	.word	0x40030c60
40012354:	40030c68 	.word	0x40030c68
40012358:	40030c64 	.word	0x40030c64

Disassembly of section i.CyU3PDeviceInit:

4001235c <CyU3PDeviceInit>:
4001235c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40012360:	e1a04000 	mov	r4, r0
40012364:	e3a06000 	mov	r6, #0
40012368:	e3a07000 	mov	r7, #0
4001236c:	e3a09000 	mov	r9, #0
40012370:	e3a0a000 	mov	sl, #0
40012374:	e3540000 	cmp	r4, #0
40012378:	0a000033 	beq	4001244c <CyU3PDeviceInit+0xf0>
4001237c:	e5d40004 	ldrb	r0, [r4, #4]
40012380:	e3500002 	cmp	r0, #2
40012384:	ba000002 	blt	40012394 <CyU3PDeviceInit+0x38>
40012388:	e5d40004 	ldrb	r0, [r4, #4]
4001238c:	e3500010 	cmp	r0, #16
40012390:	da000001 	ble	4001239c <CyU3PDeviceInit+0x40>
40012394:	e3a00040 	mov	r0, #64	; 0x40
40012398:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001239c:	e5d40005 	ldrb	r0, [r4, #5]
400123a0:	e3500002 	cmp	r0, #2
400123a4:	ba000002 	blt	400123b4 <CyU3PDeviceInit+0x58>
400123a8:	e5d40005 	ldrb	r0, [r4, #5]
400123ac:	e3500010 	cmp	r0, #16
400123b0:	da000001 	ble	400123bc <CyU3PDeviceInit+0x60>
400123b4:	e3a00040 	mov	r0, #64	; 0x40
400123b8:	eafffff6 	b	40012398 <CyU3PDeviceInit+0x3c>
400123bc:	e5d40006 	ldrb	r0, [r4, #6]
400123c0:	e3500002 	cmp	r0, #2
400123c4:	ba000002 	blt	400123d4 <CyU3PDeviceInit+0x78>
400123c8:	e5d40006 	ldrb	r0, [r4, #6]
400123cc:	e3500010 	cmp	r0, #16
400123d0:	da000001 	ble	400123dc <CyU3PDeviceInit+0x80>
400123d4:	e3a00040 	mov	r0, #64	; 0x40
400123d8:	eaffffee 	b	40012398 <CyU3PDeviceInit+0x3c>
400123dc:	e5d40006 	ldrb	r0, [r4, #6]
400123e0:	e5d41005 	ldrb	r1, [r4, #5]
400123e4:	e1500001 	cmp	r0, r1
400123e8:	ba000004 	blt	40012400 <CyU3PDeviceInit+0xa4>
400123ec:	e5d41005 	ldrb	r1, [r4, #5]
400123f0:	e5d40006 	ldrb	r0, [r4, #6]
400123f4:	ebfff99c 	bl	40010a6c <__aeabi_idivmod>
400123f8:	e3510000 	cmp	r1, #0
400123fc:	0a000001 	beq	40012408 <CyU3PDeviceInit+0xac>
40012400:	e3a00040 	mov	r0, #64	; 0x40
40012404:	eaffffe3 	b	40012398 <CyU3PDeviceInit+0x3c>
40012408:	e5d4000c 	ldrb	r0, [r4, #12]
4001240c:	e3500004 	cmp	r0, #4
40012410:	ba000001 	blt	4001241c <CyU3PDeviceInit+0xc0>
40012414:	e3a00040 	mov	r0, #64	; 0x40
40012418:	eaffffde 	b	40012398 <CyU3PDeviceInit+0x3c>
4001241c:	e5d40004 	ldrb	r0, [r4, #4]
40012420:	e2400001 	sub	r0, r0, #1
40012424:	e5d41005 	ldrb	r1, [r4, #5]
40012428:	e2411001 	sub	r1, r1, #1
4001242c:	e1800401 	orr	r0, r0, r1, lsl #8
40012430:	e5d41006 	ldrb	r1, [r4, #6]
40012434:	e2411001 	sub	r1, r1, #1
40012438:	e1800601 	orr	r0, r0, r1, lsl #12
4001243c:	e5d4100c 	ldrb	r1, [r4, #12]
40012440:	e1805201 	orr	r5, r0, r1, lsl #4
40012444:	e594a000 	ldr	sl, [r4]
40012448:	ea000000 	b	40012450 <CyU3PDeviceInit+0xf4>
4001244c:	e59f5334 	ldr	r5, [pc, #820]	; 40012788 <CyU3PDeviceInit+0x42c>
40012450:	e59f0334 	ldr	r0, [pc, #820]	; 4001278c <CyU3PDeviceInit+0x430>
40012454:	e5805004 	str	r5, [r0, #4]
40012458:	e5905004 	ldr	r5, [r0, #4]
4001245c:	e3a0000a 	mov	r0, #10
40012460:	eb0003f6 	bl	40013440 <CyU3PBusyWait>
40012464:	e59f0320 	ldr	r0, [pc, #800]	; 4001278c <CyU3PDeviceInit+0x430>
40012468:	e5900000 	ldr	r0, [r0]
4001246c:	e2000807 	and	r0, r0, #458752	; 0x70000
40012470:	e1a05820 	lsr	r5, r0, #16
40012474:	e2150003 	ands	r0, r5, #3
40012478:	0a000004 	beq	40012490 <CyU3PDeviceInit+0x134>
4001247c:	e3500001 	cmp	r0, #1
40012480:	0a00000e 	beq	400124c0 <CyU3PDeviceInit+0x164>
40012484:	e3500002 	cmp	r0, #2
40012488:	1a000024 	bne	40012520 <CyU3PDeviceInit+0x1c4>
4001248c:	ea000014 	b	400124e4 <CyU3PDeviceInit+0x188>
40012490:	e1a00000 	nop			; (mov r0, r0)
40012494:	e59f92f4 	ldr	r9, [pc, #756]	; 40012790 <CyU3PDeviceInit+0x434>
40012498:	e35a0000 	cmp	sl, #0
4001249c:	0a000003 	beq	400124b0 <CyU3PDeviceInit+0x154>
400124a0:	e59f02ec 	ldr	r0, [pc, #748]	; 40012794 <CyU3PDeviceInit+0x438>
400124a4:	e59f12ec 	ldr	r1, [pc, #748]	; 40012798 <CyU3PDeviceInit+0x43c>
400124a8:	e5810000 	str	r0, [r1]
400124ac:	ea000002 	b	400124bc <CyU3PDeviceInit+0x160>
400124b0:	e59f02e4 	ldr	r0, [pc, #740]	; 4001279c <CyU3PDeviceInit+0x440>
400124b4:	e59f12dc 	ldr	r1, [pc, #732]	; 40012798 <CyU3PDeviceInit+0x43c>
400124b8:	e5810000 	str	r0, [r1]
400124bc:	ea000020 	b	40012544 <CyU3PDeviceInit+0x1e8>
400124c0:	e1a00000 	nop			; (mov r0, r0)
400124c4:	e59f92d4 	ldr	r9, [pc, #724]	; 400127a0 <CyU3PDeviceInit+0x444>
400124c8:	e1a00209 	lsl	r0, r9, #4
400124cc:	e59f12c4 	ldr	r1, [pc, #708]	; 40012798 <CyU3PDeviceInit+0x43c>
400124d0:	e5810000 	str	r0, [r1]
400124d4:	e59f02c8 	ldr	r0, [pc, #712]	; 400127a4 <CyU3PDeviceInit+0x448>
400124d8:	e59f12c8 	ldr	r1, [pc, #712]	; 400127a8 <CyU3PDeviceInit+0x44c>
400124dc:	e5810000 	str	r0, [r1]
400124e0:	ea000017 	b	40012544 <CyU3PDeviceInit+0x1e8>
400124e4:	e1a00000 	nop			; (mov r0, r0)
400124e8:	e59f92bc 	ldr	r9, [pc, #700]	; 400127ac <CyU3PDeviceInit+0x450>
400124ec:	e59f02bc 	ldr	r0, [pc, #700]	; 400127b0 <CyU3PDeviceInit+0x454>
400124f0:	e59f12b0 	ldr	r1, [pc, #688]	; 400127a8 <CyU3PDeviceInit+0x44c>
400124f4:	e5810000 	str	r0, [r1]
400124f8:	e35a0000 	cmp	sl, #0
400124fc:	0a000003 	beq	40012510 <CyU3PDeviceInit+0x1b4>
40012500:	e59f028c 	ldr	r0, [pc, #652]	; 40012794 <CyU3PDeviceInit+0x438>
40012504:	e59f128c 	ldr	r1, [pc, #652]	; 40012798 <CyU3PDeviceInit+0x43c>
40012508:	e5810000 	str	r0, [r1]
4001250c:	ea000002 	b	4001251c <CyU3PDeviceInit+0x1c0>
40012510:	e59f0284 	ldr	r0, [pc, #644]	; 4001279c <CyU3PDeviceInit+0x440>
40012514:	e59f127c 	ldr	r1, [pc, #636]	; 40012798 <CyU3PDeviceInit+0x43c>
40012518:	e5810000 	str	r0, [r1]
4001251c:	ea000008 	b	40012544 <CyU3PDeviceInit+0x1e8>
40012520:	e1a00000 	nop			; (mov r0, r0)
40012524:	e59f9288 	ldr	r9, [pc, #648]	; 400127b4 <CyU3PDeviceInit+0x458>
40012528:	e1a00189 	lsl	r0, r9, #3
4001252c:	e59f1264 	ldr	r1, [pc, #612]	; 40012798 <CyU3PDeviceInit+0x43c>
40012530:	e5810000 	str	r0, [r1]
40012534:	e59f027c 	ldr	r0, [pc, #636]	; 400127b8 <CyU3PDeviceInit+0x45c>
40012538:	e59f1268 	ldr	r1, [pc, #616]	; 400127a8 <CyU3PDeviceInit+0x44c>
4001253c:	e5810000 	str	r0, [r1]
40012540:	e1a00000 	nop			; (mov r0, r0)
40012544:	e1a00000 	nop			; (mov r0, r0)
40012548:	e59f023c 	ldr	r0, [pc, #572]	; 4001278c <CyU3PDeviceInit+0x430>
4001254c:	e5900000 	ldr	r0, [r0]
40012550:	e200003f 	and	r0, r0, #63	; 0x3f
40012554:	e3500015 	cmp	r0, #21
40012558:	1a000002 	bne	40012568 <CyU3PDeviceInit+0x20c>
4001255c:	e59f0230 	ldr	r0, [pc, #560]	; 40012794 <CyU3PDeviceInit+0x438>
40012560:	e59f1230 	ldr	r1, [pc, #560]	; 40012798 <CyU3PDeviceInit+0x43c>
40012564:	e5810000 	str	r0, [r1]
40012568:	e59f0228 	ldr	r0, [pc, #552]	; 40012798 <CyU3PDeviceInit+0x43c>
4001256c:	e5900000 	ldr	r0, [r0]
40012570:	e59f121c 	ldr	r1, [pc, #540]	; 40012794 <CyU3PDeviceInit+0x438>
40012574:	e1500001 	cmp	r0, r1
40012578:	1a000013 	bne	400125cc <CyU3PDeviceInit+0x270>
4001257c:	e59f0208 	ldr	r0, [pc, #520]	; 4001278c <CyU3PDeviceInit+0x430>
40012580:	e5900000 	ldr	r0, [r0]
40012584:	e200003f 	and	r0, r0, #63	; 0x3f
40012588:	e3500015 	cmp	r0, #21
4001258c:	0a00000e 	beq	400125cc <CyU3PDeviceInit+0x270>
40012590:	e59f01f4 	ldr	r0, [pc, #500]	; 4001278c <CyU3PDeviceInit+0x430>
40012594:	e5900000 	ldr	r0, [r0]
40012598:	e3c0003f 	bic	r0, r0, #63	; 0x3f
4001259c:	e3800015 	orr	r0, r0, #21
400125a0:	e59f11e4 	ldr	r1, [pc, #484]	; 4001278c <CyU3PDeviceInit+0x430>
400125a4:	e5810000 	str	r0, [r1]
400125a8:	e3a00064 	mov	r0, #100	; 0x64
400125ac:	eb0003a3 	bl	40013440 <CyU3PBusyWait>
400125b0:	e1a00000 	nop			; (mov r0, r0)
400125b4:	e59f01d0 	ldr	r0, [pc, #464]	; 4001278c <CyU3PDeviceInit+0x430>
400125b8:	e5900000 	ldr	r0, [r0]
400125bc:	e3100702 	tst	r0, #524288	; 0x80000
400125c0:	0afffffb 	beq	400125b4 <CyU3PDeviceInit+0x258>
400125c4:	e3a00064 	mov	r0, #100	; 0x64
400125c8:	eb00039c 	bl	40013440 <CyU3PBusyWait>
400125cc:	e59f01e8 	ldr	r0, [pc, #488]	; 400127bc <CyU3PDeviceInit+0x460>
400125d0:	e5908014 	ldr	r8, [r0, #20]
400125d4:	e3a0000a 	mov	r0, #10
400125d8:	eb000398 	bl	40013440 <CyU3PBusyWait>
400125dc:	e2080003 	and	r0, r8, #3
400125e0:	e3500002 	cmp	r0, #2
400125e4:	1a000005 	bne	40012600 <CyU3PDeviceInit+0x2a4>
400125e8:	e3a07001 	mov	r7, #1
400125ec:	e3880003 	orr	r0, r8, #3
400125f0:	e59f11c4 	ldr	r1, [pc, #452]	; 400127bc <CyU3PDeviceInit+0x460>
400125f4:	e5810014 	str	r0, [r1, #20]
400125f8:	e3a0000a 	mov	r0, #10
400125fc:	eb00038f 	bl	40013440 <CyU3PBusyWait>
40012600:	e3180102 	tst	r8, #-2147483648	; 0x80000000
40012604:	1a000004 	bne	4001261c <CyU3PDeviceInit+0x2c0>
40012608:	e3540000 	cmp	r4, #0
4001260c:	0a000003 	beq	40012620 <CyU3PDeviceInit+0x2c4>
40012610:	e5940008 	ldr	r0, [r4, #8]
40012614:	e3500000 	cmp	r0, #0
40012618:	1a000000 	bne	40012620 <CyU3PDeviceInit+0x2c4>
4001261c:	e3a06001 	mov	r6, #1
40012620:	e3560000 	cmp	r6, #0
40012624:	1a000014 	bne	4001267c <CyU3PDeviceInit+0x320>
40012628:	e3c80003 	bic	r0, r8, #3
4001262c:	e3800001 	orr	r0, r0, #1
40012630:	e59f1184 	ldr	r1, [pc, #388]	; 400127bc <CyU3PDeviceInit+0x460>
40012634:	e5810014 	str	r0, [r1, #20]
40012638:	e3a00064 	mov	r0, #100	; 0x64
4001263c:	eb00037f 	bl	40013440 <CyU3PBusyWait>
40012640:	e59f0174 	ldr	r0, [pc, #372]	; 400127bc <CyU3PDeviceInit+0x460>
40012644:	e5905018 	ldr	r5, [r0, #24]
40012648:	e3a000c8 	mov	r0, #200	; 0xc8
4001264c:	eb00037b 	bl	40013440 <CyU3PBusyWait>
40012650:	e59f0164 	ldr	r0, [pc, #356]	; 400127bc <CyU3PDeviceInit+0x460>
40012654:	e5900018 	ldr	r0, [r0, #24]
40012658:	e1500005 	cmp	r0, r5
4001265c:	1a000000 	bne	40012664 <CyU3PDeviceInit+0x308>
40012660:	e3a06001 	mov	r6, #1
40012664:	e3a00064 	mov	r0, #100	; 0x64
40012668:	eb000374 	bl	40013440 <CyU3PBusyWait>
4001266c:	e59f0148 	ldr	r0, [pc, #328]	; 400127bc <CyU3PDeviceInit+0x460>
40012670:	e5808014 	str	r8, [r0, #20]
40012674:	e3a00064 	mov	r0, #100	; 0x64
40012678:	eb000370 	bl	40013440 <CyU3PBusyWait>
4001267c:	e3560000 	cmp	r6, #0
40012680:	0a000026 	beq	40012720 <CyU3PDeviceInit+0x3c4>
40012684:	e59f0130 	ldr	r0, [pc, #304]	; 400127bc <CyU3PDeviceInit+0x460>
40012688:	e5900014 	ldr	r0, [r0, #20]
4001268c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012690:	1a000022 	bne	40012720 <CyU3PDeviceInit+0x3c4>
40012694:	e1a09109 	lsl	r9, r9, #2
40012698:	e3a01c7d 	mov	r1, #32000	; 0x7d00
4001269c:	e1a00009 	mov	r0, r9
400126a0:	ebfff89f 	bl	40010924 <__aeabi_uidivmod>
400126a4:	e1a09000 	mov	r9, r0
400126a8:	e2095003 	and	r5, r9, #3
400126ac:	e1a09129 	lsr	r9, r9, #2
400126b0:	e3550010 	cmp	r5, #16
400126b4:	2a000000 	bcs	400126bc <CyU3PDeviceInit+0x360>
400126b8:	e2499001 	sub	r9, r9, #1
400126bc:	e1a09809 	lsl	r9, r9, #16
400126c0:	e59f00f8 	ldr	r0, [pc, #248]	; 400127c0 <CyU3PDeviceInit+0x464>
400126c4:	e1590000 	cmp	r9, r0
400126c8:	9a000000 	bls	400126d0 <CyU3PDeviceInit+0x374>
400126cc:	e1a09000 	mov	r9, r0
400126d0:	e3a00064 	mov	r0, #100	; 0x64
400126d4:	eb000359 	bl	40013440 <CyU3PBusyWait>
400126d8:	e59f00dc 	ldr	r0, [pc, #220]	; 400127bc <CyU3PDeviceInit+0x460>
400126dc:	e5905014 	ldr	r5, [r0, #20]
400126e0:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
400126e4:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
400126e8:	e1805009 	orr	r5, r0, r9
400126ec:	e3a00064 	mov	r0, #100	; 0x64
400126f0:	eb000352 	bl	40013440 <CyU3PBusyWait>
400126f4:	e59f00c0 	ldr	r0, [pc, #192]	; 400127bc <CyU3PDeviceInit+0x460>
400126f8:	e5805014 	str	r5, [r0, #20]
400126fc:	e3a00064 	mov	r0, #100	; 0x64
40012700:	eb00034e 	bl	40013440 <CyU3PBusyWait>
40012704:	e59f00b0 	ldr	r0, [pc, #176]	; 400127bc <CyU3PDeviceInit+0x460>
40012708:	e5900014 	ldr	r0, [r0, #20]
4001270c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40012710:	e59f10a4 	ldr	r1, [pc, #164]	; 400127bc <CyU3PDeviceInit+0x460>
40012714:	e5810014 	str	r0, [r1, #20]
40012718:	e3a00064 	mov	r0, #100	; 0x64
4001271c:	eb000347 	bl	40013440 <CyU3PBusyWait>
40012720:	e59f0094 	ldr	r0, [pc, #148]	; 400127bc <CyU3PDeviceInit+0x460>
40012724:	e5900000 	ldr	r0, [r0]
40012728:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001272c:	e59f1088 	ldr	r1, [pc, #136]	; 400127bc <CyU3PDeviceInit+0x460>
40012730:	e5810000 	str	r0, [r1]
40012734:	e3a00064 	mov	r0, #100	; 0x64
40012738:	eb000340 	bl	40013440 <CyU3PBusyWait>
4001273c:	eb003dcb 	bl	40021e70 <CyU3PVicInit>
40012740:	e10f0000 	mrs	r0, CPSR
40012744:	e3c00080 	bic	r0, r0, #128	; 0x80
40012748:	e121f000 	msr	CPSR_c, r0
4001274c:	e3570000 	cmp	r7, #0
40012750:	0a000002 	beq	40012760 <CyU3PDeviceInit+0x404>
40012754:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012758:	e3a00001 	mov	r0, #1
4001275c:	eb000024 	bl	400127f4 <CyU3PSysWatchDogConfigure>
40012760:	e59f005c 	ldr	r0, [pc, #92]	; 400127c4 <CyU3PDeviceInit+0x468>
40012764:	e5900000 	ldr	r0, [r0]
40012768:	e3500000 	cmp	r0, #0
4001276c:	0a000002 	beq	4001277c <CyU3PDeviceInit+0x420>
40012770:	e59f004c 	ldr	r0, [pc, #76]	; 400127c4 <CyU3PDeviceInit+0x468>
40012774:	e5900000 	ldr	r0, [r0]
40012778:	eb000594 	bl	40013dd0 <CyU3PLppRestoreState>
4001277c:	ebfffe7c 	bl	40012174 <_etext>
40012780:	e3a00000 	mov	r0, #0
40012784:	eaffff03 	b	40012398 <CyU3PDeviceInit+0x3c>
40012788:	00001131 	.word	0x00001131
4001278c:	e0052000 	.word	0xe0052000
40012790:	0124f800 	.word	0x0124f800
40012794:	18085800 	.word	0x18085800
40012798:	40030c54 	.word	0x40030c54
4001279c:	16e36000 	.word	0x16e36000
400127a0:	018cba80 	.word	0x018cba80
400127a4:	00910700 	.word	0x00910700
400127a8:	40030c5c 	.word	0x40030c5c
400127ac:	0249f000 	.word	0x0249f000
400127b0:	00910608 	.word	0x00910608
400127b4:	03197500 	.word	0x03197500
400127b8:	00910580 	.word	0x00910580
400127bc:	e0050000 	.word	0xe0050000
400127c0:	7fff0000 	.word	0x7fff0000
400127c4:	40030c90 	.word	0x40030c90

Disassembly of section i.CyU3PSysSetupMMU:

400127c8 <CyU3PSysSetupMMU>:
400127c8:	e92d4010 	push	{r4, lr}
400127cc:	eb000049 	bl	400128f8 <CyU3PSysBarrierSync>
400127d0:	ebfffdc2 	bl	40011ee0 <CyU3PSysClearDCache>
400127d4:	eb000069 	bl	40012980 <CyU3PSysFlushICache>
400127d8:	eb000049 	bl	40012904 <CyU3PSysDisableCacheMMU>
400127dc:	eb00006a 	bl	4001298c <CyU3PSysInitTCMs>
400127e0:	eb000041 	bl	400128ec <CyU3PInitPageTable>
400127e4:	eb000061 	bl	40012970 <CyU3PSysEnableMMU>
400127e8:	eb00006c 	bl	400129a0 <CyU3PSysLoadTLB>
400127ec:	eb000041 	bl	400128f8 <CyU3PSysBarrierSync>
400127f0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

400127f4 <CyU3PSysWatchDogConfigure>:
400127f4:	e92d4070 	push	{r4, r5, r6, lr}
400127f8:	e1a04000 	mov	r4, r0
400127fc:	e1a05001 	mov	r5, r1
40012800:	e59f00d8 	ldr	r0, [pc, #216]	; 400128e0 <CyU3PSysWatchDogConfigure+0xec>
40012804:	e5906014 	ldr	r6, [r0, #20]
40012808:	e3a00064 	mov	r0, #100	; 0x64
4001280c:	eb00030b 	bl	40013440 <CyU3PBusyWait>
40012810:	e3540000 	cmp	r4, #0
40012814:	0a000023 	beq	400128a8 <CyU3PSysWatchDogConfigure+0xb4>
40012818:	e2060003 	and	r0, r6, #3
4001281c:	e3500003 	cmp	r0, #3
40012820:	0a000004 	beq	40012838 <CyU3PSysWatchDogConfigure+0x44>
40012824:	e3860003 	orr	r0, r6, #3
40012828:	e59f10b0 	ldr	r1, [pc, #176]	; 400128e0 <CyU3PSysWatchDogConfigure+0xec>
4001282c:	e5810014 	str	r0, [r1, #20]
40012830:	e3a00064 	mov	r0, #100	; 0x64
40012834:	eb000301 	bl	40013440 <CyU3PBusyWait>
40012838:	e0850285 	add	r0, r5, r5, lsl #5
4001283c:	e59f10a0 	ldr	r1, [pc, #160]	; 400128e4 <CyU3PSysWatchDogConfigure+0xf0>
40012840:	e5810000 	str	r0, [r1]
40012844:	e2810000 	add	r0, r1, #0
40012848:	e5900000 	ldr	r0, [r0]
4001284c:	e1500005 	cmp	r0, r5
40012850:	2a000001 	bcs	4001285c <CyU3PSysWatchDogConfigure+0x68>
40012854:	e3e00000 	mvn	r0, #0
40012858:	e5810000 	str	r0, [r1]
4001285c:	e59f0080 	ldr	r0, [pc, #128]	; 400128e4 <CyU3PSysWatchDogConfigure+0xf0>
40012860:	e5900000 	ldr	r0, [r0]
40012864:	e59f1074 	ldr	r1, [pc, #116]	; 400128e0 <CyU3PSysWatchDogConfigure+0xec>
40012868:	e5810018 	str	r0, [r1, #24]
4001286c:	e3a00064 	mov	r0, #100	; 0x64
40012870:	eb0002f2 	bl	40013440 <CyU3PBusyWait>
40012874:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012878:	e38660fa 	orr	r6, r6, #250	; 0xfa
4001287c:	e59f005c 	ldr	r0, [pc, #92]	; 400128e0 <CyU3PSysWatchDogConfigure+0xec>
40012880:	e5806014 	str	r6, [r0, #20]
40012884:	e3a00064 	mov	r0, #100	; 0x64
40012888:	eb0002ec 	bl	40013440 <CyU3PBusyWait>
4001288c:	e2060c03 	and	r0, r6, #768	; 0x300
40012890:	e3500c03 	cmp	r0, #768	; 0x300
40012894:	1a000010 	bne	400128dc <CyU3PSysWatchDogConfigure+0xe8>
40012898:	e59f0048 	ldr	r0, [pc, #72]	; 400128e8 <CyU3PSysWatchDogConfigure+0xf4>
4001289c:	e1d000b0 	ldrh	r0, [r0]
400128a0:	eb003d18 	bl	40021d08 <CyU3POsTimerInit>
400128a4:	ea00000c 	b	400128dc <CyU3PSysWatchDogConfigure+0xe8>
400128a8:	e2060003 	and	r0, r6, #3
400128ac:	e3500003 	cmp	r0, #3
400128b0:	0a000006 	beq	400128d0 <CyU3PSysWatchDogConfigure+0xdc>
400128b4:	e59f0024 	ldr	r0, [pc, #36]	; 400128e0 <CyU3PSysWatchDogConfigure+0xec>
400128b8:	e5900014 	ldr	r0, [r0, #20]
400128bc:	e3800003 	orr	r0, r0, #3
400128c0:	e59f1018 	ldr	r1, [pc, #24]	; 400128e0 <CyU3PSysWatchDogConfigure+0xec>
400128c4:	e5810014 	str	r0, [r1, #20]
400128c8:	e3a00064 	mov	r0, #100	; 0x64
400128cc:	eb0002db 	bl	40013440 <CyU3PBusyWait>
400128d0:	e3a00000 	mov	r0, #0
400128d4:	e59f1008 	ldr	r1, [pc, #8]	; 400128e4 <CyU3PSysWatchDogConfigure+0xf0>
400128d8:	e5810000 	str	r0, [r1]
400128dc:	e8bd8070 	pop	{r4, r5, r6, pc}
400128e0:	e0050000 	.word	0xe0050000
400128e4:	40030c58 	.word	0x40030c58
400128e8:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PInitPageTable:

400128ec <CyU3PInitPageTable>:
400128ec:	e92d4010 	push	{r4, lr}
400128f0:	eb0007ad 	bl	400147ac <CyFx3DevInitPageTables>
400128f4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

400128f8 <CyU3PSysBarrierSync>:
400128f8:	e3a00000 	mov	r0, #0
400128fc:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012900:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

40012904 <CyU3PSysDisableCacheMMU>:
40012904:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012908:	e59f2018 	ldr	r2, [pc, #24]	; 40012928 <CyU3PSysDisableCacheMMU+0x24>
4001290c:	e1c00002 	bic	r0, r0, r2
40012910:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012914:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012918:	e3e01801 	mvn	r1, #65536	; 0x10000
4001291c:	e0000001 	and	r0, r0, r1
40012920:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012924:	e12fff1e 	bx	lr
40012928:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

4001292c <CyU3PSysDisableDCache>:
4001292c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012930:	e3c00004 	bic	r0, r0, #4
40012934:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012938:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

4001293c <CyU3PSysDisableICache>:
4001293c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012940:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012944:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012948:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

4001294c <CyU3PSysEnableDCache>:
4001294c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012950:	e3800004 	orr	r0, r0, #4
40012954:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012958:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

4001295c <CyU3PSysEnableICache>:
4001295c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012960:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012964:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012968:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001296c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012970 <CyU3PSysEnableMMU>:
40012970:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012974:	e3800001 	orr	r0, r0, #1
40012978:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001297c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012980 <CyU3PSysFlushICache>:
40012980:	e3a00000 	mov	r0, #0
40012984:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012988:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

4001298c <CyU3PSysInitTCMs>:
4001298c:	e3a00015 	mov	r0, #21
40012990:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012994:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012998:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
4001299c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

400129a0 <CyU3PSysLoadTLB>:
400129a0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400129a4:	e3a00000 	mov	r0, #0
400129a8:	eb00000b 	bl	400129dc <CyU3PSysLockTLBEntry>
400129ac:	e3a00201 	mov	r0, #268435456	; 0x10000000
400129b0:	eb000009 	bl	400129dc <CyU3PSysLockTLBEntry>
400129b4:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400129b8:	eb000007 	bl	400129dc <CyU3PSysLockTLBEntry>
400129bc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400129c0:	eb000005 	bl	400129dc <CyU3PSysLockTLBEntry>
400129c4:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
400129c8:	eb000003 	bl	400129dc <CyU3PSysLockTLBEntry>
400129cc:	e59f0004 	ldr	r0, [pc, #4]	; 400129d8 <CyU3PSysLoadTLB+0x38>
400129d0:	eb000001 	bl	400129dc <CyU3PSysLockTLBEntry>
400129d4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400129d8:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

400129dc <CyU3PSysLockTLBEntry>:
400129dc:	e3a01000 	mov	r1, #0
400129e0:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
400129e4:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
400129e8:	e3811001 	orr	r1, r1, #1
400129ec:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
400129f0:	e5900000 	ldr	r0, [r0]
400129f4:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
400129f8:	e3c11001 	bic	r1, r1, #1
400129fc:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012a00:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012a04 <CyU3PDeviceConfigureIOMatrix>:
40012a04:	e92d4010 	push	{r4, lr}
40012a08:	e1a04000 	mov	r4, r0
40012a0c:	e3540000 	cmp	r4, #0
40012a10:	1a000001 	bne	40012a1c <CyU3PDeviceConfigureIOMatrix+0x18>
40012a14:	e3a00041 	mov	r0, #65	; 0x41
40012a18:	e8bd8010 	pop	{r4, pc}
40012a1c:	e1a00004 	mov	r0, r4
40012a20:	eb0005fd 	bl	4001421c <CyFx3DevIOConfigure>
40012a24:	e3500000 	cmp	r0, #0
40012a28:	1a000001 	bne	40012a34 <CyU3PDeviceConfigureIOMatrix+0x30>
40012a2c:	e3a00040 	mov	r0, #64	; 0x40
40012a30:	eafffff8 	b	40012a18 <CyU3PDeviceConfigureIOMatrix+0x14>
40012a34:	e3a00000 	mov	r0, #0
40012a38:	eafffff6 	b	40012a18 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012a3c <CyU3PDeviceGpioOverride>:
40012a3c:	e92d4070 	push	{r4, r5, r6, lr}
40012a40:	e1a04000 	mov	r4, r0
40012a44:	e1a05001 	mov	r5, r1
40012a48:	e354003d 	cmp	r4, #61	; 0x3d
40012a4c:	ba000001 	blt	40012a58 <CyU3PDeviceGpioOverride+0x1c>
40012a50:	e3a00040 	mov	r0, #64	; 0x40
40012a54:	e8bd8070 	pop	{r4, r5, r6, pc}
40012a58:	e1a02005 	mov	r2, r5
40012a5c:	e3a01001 	mov	r1, #1
40012a60:	e1a00004 	mov	r0, r4
40012a64:	eb00066c 	bl	4001441c <CyFx3DevIOSelectGpio>
40012a68:	e3a00000 	mov	r0, #0
40012a6c:	eafffff8 	b	40012a54 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012a70 <CyU3PIsGpioComplexIOConfigured>:
40012a70:	e92d4010 	push	{r4, lr}
40012a74:	e1a04000 	mov	r4, r0
40012a78:	e3a01000 	mov	r1, #0
40012a7c:	e1a00004 	mov	r0, r4
40012a80:	eb000645 	bl	4001439c <CyFx3DevIOIsGpio>
40012a84:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012a88 <CyU3PIsGpioSimpleIOConfigured>:
40012a88:	e92d4010 	push	{r4, lr}
40012a8c:	e1a04000 	mov	r4, r0
40012a90:	e3a01001 	mov	r1, #1
40012a94:	e1a00004 	mov	r0, r4
40012a98:	eb00063f 	bl	4001439c <CyFx3DevIOIsGpio>
40012a9c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012aa0 <CyU3PIsGpioValid>:
40012aa0:	e1a01000 	mov	r1, r0
40012aa4:	e351003d 	cmp	r1, #61	; 0x3d
40012aa8:	aa000001 	bge	40012ab4 <CyU3PIsGpioValid+0x14>
40012aac:	e3a00001 	mov	r0, #1
40012ab0:	e12fff1e 	bx	lr
40012ab4:	e3a00000 	mov	r0, #0
40012ab8:	eafffffc 	b	40012ab0 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012abc <CyU3PIsLppIOConfigured>:
40012abc:	e92d4070 	push	{r4, r5, r6, lr}
40012ac0:	e1a04000 	mov	r4, r0
40012ac4:	e3a05000 	mov	r5, #0
40012ac8:	e3540000 	cmp	r4, #0
40012acc:	0a00000a 	beq	40012afc <CyU3PIsLppIOConfigured+0x40>
40012ad0:	e3540001 	cmp	r4, #1
40012ad4:	0a000004 	beq	40012aec <CyU3PIsLppIOConfigured+0x30>
40012ad8:	e3540002 	cmp	r4, #2
40012adc:	0a00000e 	beq	40012b1c <CyU3PIsLppIOConfigured+0x60>
40012ae0:	e3540003 	cmp	r4, #3
40012ae4:	1a000010 	bne	40012b2c <CyU3PIsLppIOConfigured+0x70>
40012ae8:	ea000007 	b	40012b0c <CyU3PIsLppIOConfigured+0x50>
40012aec:	e1a00000 	nop			; (mov r0, r0)
40012af0:	eb00063d 	bl	400143ec <CyFx3DevIOIsI2sConfigured>
40012af4:	e1a05000 	mov	r5, r0
40012af8:	ea00000d 	b	40012b34 <CyU3PIsLppIOConfigured+0x78>
40012afc:	e1a00000 	nop			; (mov r0, r0)
40012b00:	eb000635 	bl	400143dc <CyFx3DevIOIsI2cConfigured>
40012b04:	e1a05000 	mov	r5, r0
40012b08:	ea000009 	b	40012b34 <CyU3PIsLppIOConfigured+0x78>
40012b0c:	e1a00000 	nop			; (mov r0, r0)
40012b10:	eb00063d 	bl	4001440c <CyFx3DevIOIsUartConfigured>
40012b14:	e1a05000 	mov	r5, r0
40012b18:	ea000005 	b	40012b34 <CyU3PIsLppIOConfigured+0x78>
40012b1c:	e1a00000 	nop			; (mov r0, r0)
40012b20:	eb000635 	bl	400143fc <CyFx3DevIOIsSpiConfigured>
40012b24:	e1a05000 	mov	r5, r0
40012b28:	ea000001 	b	40012b34 <CyU3PIsLppIOConfigured+0x78>
40012b2c:	e1a00000 	nop			; (mov r0, r0)
40012b30:	e1a00000 	nop			; (mov r0, r0)
40012b34:	e1a00000 	nop			; (mov r0, r0)
40012b38:	e1a00005 	mov	r0, r5
40012b3c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012b40 <CyU3PDebugApplicationDefine>:
40012b40:	e92d4010 	push	{r4, lr}
40012b44:	e24dd020 	sub	sp, sp, #32
40012b48:	e3a00000 	mov	r0, #0
40012b4c:	e59f109c 	ldr	r1, [pc, #156]	; 40012bf0 <CyU3PDebugApplicationDefine+0xb0>
40012b50:	e5810000 	str	r0, [r1]
40012b54:	e3a00001 	mov	r0, #1
40012b58:	e2811008 	add	r1, r1, #8
40012b5c:	e5810000 	str	r0, [r1]
40012b60:	e3a00c02 	mov	r0, #512	; 0x200
40012b64:	ebffc2c2 	bl	40003674 <CyU3PMemAlloc>
40012b68:	e1a04000 	mov	r4, r0
40012b6c:	e3a030a8 	mov	r3, #168	; 0xa8
40012b70:	e3a02001 	mov	r2, #1
40012b74:	e3a01000 	mov	r1, #0
40012b78:	e3a00006 	mov	r0, #6
40012b7c:	e28dc00c 	add	ip, sp, #12
40012b80:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012b84:	e3a02c02 	mov	r2, #512	; 0x200
40012b88:	e1a03001 	mov	r3, r1
40012b8c:	e58d2004 	str	r2, [sp, #4]
40012b90:	e59f205c 	ldr	r2, [pc, #92]	; 40012bf4 <CyU3PDebugApplicationDefine+0xb4>
40012b94:	e28f105c 	add	r1, pc, #92	; 0x5c
40012b98:	e58d0008 	str	r0, [sp, #8]
40012b9c:	e59f0064 	ldr	r0, [pc, #100]	; 40012c08 <CyU3PDebugApplicationDefine+0xc8>
40012ba0:	e58d4000 	str	r4, [sp]
40012ba4:	ebffde45 	bl	4000a4c0 <_txe_thread_create>
40012ba8:	e3a00084 	mov	r0, #132	; 0x84
40012bac:	ebffc2b0 	bl	40003674 <CyU3PMemAlloc>
40012bb0:	e1a04000 	mov	r4, r0
40012bb4:	e3a0303c 	mov	r3, #60	; 0x3c
40012bb8:	e3a02084 	mov	r2, #132	; 0x84
40012bbc:	e1cd20f0 	strd	r2, [sp]
40012bc0:	e1a03004 	mov	r3, r4
40012bc4:	e3a02003 	mov	r2, #3
40012bc8:	e3a01000 	mov	r1, #0
40012bcc:	e59f0038 	ldr	r0, [pc, #56]	; 40012c0c <CyU3PDebugApplicationDefine+0xcc>
40012bd0:	ebffdd54 	bl	4000a128 <_txe_queue_create>
40012bd4:	e3a03038 	mov	r3, #56	; 0x38
40012bd8:	e3a02000 	mov	r2, #0
40012bdc:	e1a01002 	mov	r1, r2
40012be0:	e59f0028 	ldr	r0, [pc, #40]	; 40012c10 <CyU3PDebugApplicationDefine+0xd0>
40012be4:	ebffdc74 	bl	40009dbc <_txe_mutex_create>
40012be8:	e28dd020 	add	sp, sp, #32
40012bec:	e8bd8010 	pop	{r4, pc}
40012bf0:	40030c74 	.word	0x40030c74
40012bf4:	400130b0 	.word	0x400130b0
40012bf8:	75626544 	.word	0x75626544
40012bfc:	68542067 	.word	0x68542067
40012c00:	64616572 	.word	0x64616572
40012c04:	00000000 	.word	0x00000000
40012c08:	40031230 	.word	0x40031230
40012c0c:	400312d8 	.word	0x400312d8
40012c10:	40031314 	.word	0x40031314

Disassembly of section i.CyU3PDebugChannelReset:

40012c14 <CyU3PDebugChannelReset>:
40012c14:	e92d4010 	push	{r4, lr}
40012c18:	e59f0034 	ldr	r0, [pc, #52]	; 40012c54 <CyU3PDebugChannelReset+0x40>
40012c1c:	eb000d41 	bl	40016128 <CyU3PDmaChannelReset>
40012c20:	e3a01000 	mov	r1, #0
40012c24:	e59f0028 	ldr	r0, [pc, #40]	; 40012c54 <CyU3PDebugChannelReset+0x40>
40012c28:	eb000ddf 	bl	400163ac <CyU3PDmaChannelSetXfer>
40012c2c:	e1a04000 	mov	r4, r0
40012c30:	e3540000 	cmp	r4, #0
40012c34:	1a000004 	bne	40012c4c <CyU3PDebugChannelReset+0x38>
40012c38:	e3e02000 	mvn	r2, #0
40012c3c:	e59f1014 	ldr	r1, [pc, #20]	; 40012c58 <CyU3PDebugChannelReset+0x44>
40012c40:	e281000c 	add	r0, r1, #12
40012c44:	eb000c6a 	bl	40015df4 <CyU3PDmaChannelGetBuffer>
40012c48:	e1a04000 	mov	r4, r0
40012c4c:	e1a00004 	mov	r0, r4
40012c50:	e8bd8010 	pop	{r4, pc}
40012c54:	40031358 	.word	0x40031358
40012c58:	4003134c 	.word	0x4003134c

Disassembly of section i.CyU3PDebugInit:

40012c5c <CyU3PDebugInit>:
40012c5c:	e92d4070 	push	{r4, r5, r6, lr}
40012c60:	e24dd020 	sub	sp, sp, #32
40012c64:	e1a04000 	mov	r4, r0
40012c68:	e1a06001 	mov	r6, r1
40012c6c:	e59f0150 	ldr	r0, [pc, #336]	; 40012dc4 <CyU3PDebugInit+0x168>
40012c70:	e5900000 	ldr	r0, [r0]
40012c74:	e3500000 	cmp	r0, #0
40012c78:	1a000003 	bne	40012c8c <CyU3PDebugInit+0x30>
40012c7c:	e59f0144 	ldr	r0, [pc, #324]	; 40012dc8 <CyU3PDebugInit+0x16c>
40012c80:	e5900000 	ldr	r0, [r0]
40012c84:	e3500000 	cmp	r0, #0
40012c88:	0a000002 	beq	40012c98 <CyU3PDebugInit+0x3c>
40012c8c:	e3a00043 	mov	r0, #67	; 0x43
40012c90:	e28dd020 	add	sp, sp, #32
40012c94:	e8bd8070 	pop	{r4, r5, r6, pc}
40012c98:	e1a00004 	mov	r0, r4
40012c9c:	eb0007b3 	bl	40014b70 <CyU3PDmaSocketIsValidConsumer>
40012ca0:	e1a05000 	mov	r5, r0
40012ca4:	e3550000 	cmp	r5, #0
40012ca8:	1a000001 	bne	40012cb4 <CyU3PDebugInit+0x58>
40012cac:	e3a00040 	mov	r0, #64	; 0x40
40012cb0:	eafffff6 	b	40012c90 <CyU3PDebugInit+0x34>
40012cb4:	e3e01000 	mvn	r1, #0
40012cb8:	e59f010c 	ldr	r0, [pc, #268]	; 40012dcc <CyU3PDebugInit+0x170>
40012cbc:	ebffdcbc 	bl	40009fb4 <_txe_mutex_get>
40012cc0:	e3a00c01 	mov	r0, #256	; 0x100
40012cc4:	e1cd00b4 	strh	r0, [sp, #4]
40012cc8:	e3a00008 	mov	r0, #8
40012ccc:	e1cd00b6 	strh	r0, [sp, #6]
40012cd0:	e3a00000 	mov	r0, #0
40012cd4:	e1cd00bc 	strh	r0, [sp, #12]
40012cd8:	e59f00f0 	ldr	r0, [pc, #240]	; 40012dd0 <CyU3PDebugInit+0x174>
40012cdc:	e1cd00b8 	strh	r0, [sp, #8]
40012ce0:	e1cd40ba 	strh	r4, [sp, #10]
40012ce4:	e3a00000 	mov	r0, #0
40012ce8:	e5cd0014 	strb	r0, [sp, #20]
40012cec:	e1cd00be 	strh	r0, [sp, #14]
40012cf0:	e1cd01b0 	strh	r0, [sp, #16]
40012cf4:	e1cd01b2 	strh	r0, [sp, #18]
40012cf8:	e58d001c 	str	r0, [sp, #28]
40012cfc:	e28d2004 	add	r2, sp, #4
40012d00:	e3a01004 	mov	r1, #4
40012d04:	e59f00c8 	ldr	r0, [pc, #200]	; 40012dd4 <CyU3PDebugInit+0x178>
40012d08:	eb000a71 	bl	400156d4 <CyU3PDmaChannelCreate>
40012d0c:	e1a05000 	mov	r5, r0
40012d10:	e3550000 	cmp	r5, #0
40012d14:	1a000007 	bne	40012d38 <CyU3PDebugInit+0xdc>
40012d18:	e59f00b8 	ldr	r0, [pc, #184]	; 40012dd8 <CyU3PDebugInit+0x17c>
40012d1c:	e5900000 	ldr	r0, [r0]
40012d20:	e3500000 	cmp	r0, #0
40012d24:	0a000003 	beq	40012d38 <CyU3PDebugInit+0xdc>
40012d28:	e3a01001 	mov	r1, #1
40012d2c:	e59f00a0 	ldr	r0, [pc, #160]	; 40012dd4 <CyU3PDebugInit+0x178>
40012d30:	eb0008d7 	bl	40015094 <CyU3PDmaChannelCacheControl>
40012d34:	e1a05000 	mov	r5, r0
40012d38:	e3550000 	cmp	r5, #0
40012d3c:	1a000003 	bne	40012d50 <CyU3PDebugInit+0xf4>
40012d40:	e3a01000 	mov	r1, #0
40012d44:	e59f0088 	ldr	r0, [pc, #136]	; 40012dd4 <CyU3PDebugInit+0x178>
40012d48:	eb000d97 	bl	400163ac <CyU3PDmaChannelSetXfer>
40012d4c:	e1a05000 	mov	r5, r0
40012d50:	e3550000 	cmp	r5, #0
40012d54:	1a000004 	bne	40012d6c <CyU3PDebugInit+0x110>
40012d58:	e3e02000 	mvn	r2, #0
40012d5c:	e59f1078 	ldr	r1, [pc, #120]	; 40012ddc <CyU3PDebugInit+0x180>
40012d60:	e281000c 	add	r0, r1, #12
40012d64:	eb000c22 	bl	40015df4 <CyU3PDmaChannelGetBuffer>
40012d68:	e1a05000 	mov	r5, r0
40012d6c:	e3550000 	cmp	r5, #0
40012d70:	0a000005 	beq	40012d8c <CyU3PDebugInit+0x130>
40012d74:	e59f0058 	ldr	r0, [pc, #88]	; 40012dd4 <CyU3PDebugInit+0x178>
40012d78:	eb000b4f 	bl	40015abc <CyU3PDmaChannelDestroy>
40012d7c:	e59f0048 	ldr	r0, [pc, #72]	; 40012dcc <CyU3PDebugInit+0x170>
40012d80:	ebffdcc0 	bl	4000a088 <_txe_mutex_put>
40012d84:	e1a00005 	mov	r0, r5
40012d88:	eaffffc0 	b	40012c90 <CyU3PDebugInit+0x34>
40012d8c:	e3a00000 	mov	r0, #0
40012d90:	e59f1048 	ldr	r1, [pc, #72]	; 40012de0 <CyU3PDebugInit+0x184>
40012d94:	e1c100b0 	strh	r0, [r1]
40012d98:	e59f1044 	ldr	r1, [pc, #68]	; 40012de4 <CyU3PDebugInit+0x188>
40012d9c:	e1c100b0 	strh	r0, [r1]
40012da0:	e59f0040 	ldr	r0, [pc, #64]	; 40012de8 <CyU3PDebugInit+0x18c>
40012da4:	e5c06000 	strb	r6, [r0]
40012da8:	e3a00001 	mov	r0, #1
40012dac:	e2411010 	sub	r1, r1, #16
40012db0:	e5810000 	str	r0, [r1]
40012db4:	e59f0010 	ldr	r0, [pc, #16]	; 40012dcc <CyU3PDebugInit+0x170>
40012db8:	ebffdcb2 	bl	4000a088 <_txe_mutex_put>
40012dbc:	e1a00005 	mov	r0, r5
40012dc0:	eaffffb2 	b	40012c90 <CyU3PDebugInit+0x34>
40012dc4:	40030c74 	.word	0x40030c74
40012dc8:	40030c78 	.word	0x40030c78
40012dcc:	40031314 	.word	0x40031314
40012dd0:	00003f01 	.word	0x00003f01
40012dd4:	40031358 	.word	0x40031358
40012dd8:	40030c64 	.word	0x40030c64
40012ddc:	4003134c 	.word	0x4003134c
40012de0:	40030c82 	.word	0x40030c82
40012de4:	40030c84 	.word	0x40030c84
40012de8:	40030c80 	.word	0x40030c80

Disassembly of section i.CyU3PDebugIntToStr:

40012dec <CyU3PDebugIntToStr>:
40012dec:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012df0:	e1a04000 	mov	r4, r0
40012df4:	e1a05001 	mov	r5, r1
40012df8:	e1a08002 	mov	r8, r2
40012dfc:	e3a0600a 	mov	r6, #10
40012e00:	e1a07004 	mov	r7, r4
40012e04:	e3a00000 	mov	r0, #0
40012e08:	e1a04007 	mov	r4, r7
40012e0c:	e7c70006 	strb	r0, [r7, r6]
40012e10:	e1a00000 	nop			; (mov r0, r0)
40012e14:	e1a01008 	mov	r1, r8
40012e18:	e1a00005 	mov	r0, r5
40012e1c:	ebfff6c0 	bl	40010924 <__aeabi_uidivmod>
40012e20:	e28f0030 	add	r0, pc, #48	; 0x30
40012e24:	e7d00001 	ldrb	r0, [r0, r1]
40012e28:	e2461001 	sub	r1, r6, #1
40012e2c:	e20110ff 	and	r1, r1, #255	; 0xff
40012e30:	e1a06001 	mov	r6, r1
40012e34:	e7c70001 	strb	r0, [r7, r1]
40012e38:	e1a01008 	mov	r1, r8
40012e3c:	e1a00005 	mov	r0, r5
40012e40:	ebfff6b7 	bl	40010924 <__aeabi_uidivmod>
40012e44:	e1a05000 	mov	r5, r0
40012e48:	e3550000 	cmp	r5, #0
40012e4c:	1afffff0 	bne	40012e14 <CyU3PDebugIntToStr+0x28>
40012e50:	e0870006 	add	r0, r7, r6
40012e54:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40012e58:	33323130 	.word	0x33323130
40012e5c:	37363534 	.word	0x37363534
40012e60:	42413938 	.word	0x42413938
40012e64:	46454443 	.word	0x46454443
40012e68:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40012e6c <CyU3PDebugPreamble>:
40012e6c:	e59f1004 	ldr	r1, [pc, #4]	; 40012e78 <CyU3PDebugPreamble+0xc>
40012e70:	e5810000 	str	r0, [r1]
40012e74:	e12fff1e 	bx	lr
40012e78:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugPrint:

40012e7c <CyU3PDebugPrint>:
40012e7c:	e92d000f 	push	{r0, r1, r2, r3}
40012e80:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012e84:	e24dd028 	sub	sp, sp, #40	; 0x28
40012e88:	e1a04000 	mov	r4, r0
40012e8c:	e59f0200 	ldr	r0, [pc, #512]	; 40013094 <CyU3PDebugPrint+0x218>
40012e90:	e5900000 	ldr	r0, [r0]
40012e94:	e3500000 	cmp	r0, #0
40012e98:	1a000003 	bne	40012eac <CyU3PDebugPrint+0x30>
40012e9c:	e3a00042 	mov	r0, #66	; 0x42
40012ea0:	e28dd028 	add	sp, sp, #40	; 0x28
40012ea4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
40012ea8:	e49df014 	ldr	pc, [sp], #20
40012eac:	e59f01e4 	ldr	r0, [pc, #484]	; 40013098 <CyU3PDebugPrint+0x21c>
40012eb0:	e5d00000 	ldrb	r0, [r0]
40012eb4:	e1540000 	cmp	r4, r0
40012eb8:	da000001 	ble	40012ec4 <CyU3PDebugPrint+0x48>
40012ebc:	e3a00000 	mov	r0, #0
40012ec0:	eafffff6 	b	40012ea0 <CyU3PDebugPrint+0x24>
40012ec4:	ebffd625 	bl	40008760 <_tx_thread_identify>
40012ec8:	e1a05000 	mov	r5, r0
40012ecc:	e3550000 	cmp	r5, #0
40012ed0:	1a000001 	bne	40012edc <CyU3PDebugPrint+0x60>
40012ed4:	e3a00013 	mov	r0, #19
40012ed8:	eafffff0 	b	40012ea0 <CyU3PDebugPrint+0x24>
40012edc:	e3a03000 	mov	r3, #0
40012ee0:	e58d3004 	str	r3, [sp, #4]
40012ee4:	e58d3008 	str	r3, [sp, #8]
40012ee8:	e58d300c 	str	r3, [sp, #12]
40012eec:	e58d3010 	str	r3, [sp, #16]
40012ef0:	e58d3000 	str	r3, [sp]
40012ef4:	e1a02003 	mov	r2, r3
40012ef8:	e28d1018 	add	r1, sp, #24
40012efc:	e1a00005 	mov	r0, r5
40012f00:	ebffde07 	bl	4000a724 <_txe_thread_info_get>
40012f04:	e59d0018 	ldr	r0, [sp, #24]
40012f08:	e5d00001 	ldrb	r0, [r0, #1]
40012f0c:	e2400030 	sub	r0, r0, #48	; 0x30
40012f10:	e59d1018 	ldr	r1, [sp, #24]
40012f14:	e5d11000 	ldrb	r1, [r1]
40012f18:	e2411030 	sub	r1, r1, #48	; 0x30
40012f1c:	e3a0200a 	mov	r2, #10
40012f20:	e1000182 	smlabb	r0, r2, r1, r0
40012f24:	e20080ff 	and	r8, r0, #255	; 0xff
40012f28:	e3e01000 	mvn	r1, #0
40012f2c:	e59f0168 	ldr	r0, [pc, #360]	; 4001309c <CyU3PDebugPrint+0x220>
40012f30:	ebffdc1f 	bl	40009fb4 <_txe_mutex_get>
40012f34:	e59f0164 	ldr	r0, [pc, #356]	; 400130a0 <CyU3PDebugPrint+0x224>
40012f38:	e1d000b0 	ldrh	r0, [r0]
40012f3c:	e3500000 	cmp	r0, #0
40012f40:	0a000011 	beq	40012f8c <CyU3PDebugPrint+0x110>
40012f44:	e3a02000 	mov	r2, #0
40012f48:	e3a01c01 	mov	r1, #256	; 0x100
40012f4c:	e59f0150 	ldr	r0, [pc, #336]	; 400130a4 <CyU3PDebugPrint+0x228>
40012f50:	eb000864 	bl	400150e8 <CyU3PDmaChannelCommitBuffer>
40012f54:	e1a06000 	mov	r6, r0
40012f58:	e3560000 	cmp	r6, #0
40012f5c:	1a000004 	bne	40012f74 <CyU3PDebugPrint+0xf8>
40012f60:	e3e02000 	mvn	r2, #0
40012f64:	e59f113c 	ldr	r1, [pc, #316]	; 400130a8 <CyU3PDebugPrint+0x22c>
40012f68:	e281000c 	add	r0, r1, #12
40012f6c:	eb000ba0 	bl	40015df4 <CyU3PDmaChannelGetBuffer>
40012f70:	e1a06000 	mov	r6, r0
40012f74:	e3560000 	cmp	r6, #0
40012f78:	0a000000 	beq	40012f80 <CyU3PDebugPrint+0x104>
40012f7c:	ebffff24 	bl	40012c14 <CyU3PDebugChannelReset>
40012f80:	e3a00000 	mov	r0, #0
40012f84:	e59f1114 	ldr	r1, [pc, #276]	; 400130a0 <CyU3PDebugPrint+0x224>
40012f88:	e1c100b0 	strh	r0, [r1]
40012f8c:	e59f0114 	ldr	r0, [pc, #276]	; 400130a8 <CyU3PDebugPrint+0x22c>
40012f90:	e5907000 	ldr	r7, [r0]
40012f94:	e3a00c01 	mov	r0, #256	; 0x100
40012f98:	e58d0014 	str	r0, [sp, #20]
40012f9c:	e59f0108 	ldr	r0, [pc, #264]	; 400130ac <CyU3PDebugPrint+0x230>
40012fa0:	e5900000 	ldr	r0, [r0]
40012fa4:	e3500000 	cmp	r0, #0
40012fa8:	0a000005 	beq	40012fc4 <CyU3PDebugPrint+0x148>
40012fac:	e2877008 	add	r7, r7, #8
40012fb0:	e1dd01b4 	ldrh	r0, [sp, #20]
40012fb4:	e2400008 	sub	r0, r0, #8
40012fb8:	e1a00800 	lsl	r0, r0, #16
40012fbc:	e1a00820 	lsr	r0, r0, #16
40012fc0:	e58d0014 	str	r0, [sp, #20]
40012fc4:	e28d0048 	add	r0, sp, #72	; 0x48
40012fc8:	e58d001c 	str	r0, [sp, #28]
40012fcc:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40012fd0:	e59d301c 	ldr	r3, [sp, #28]
40012fd4:	e28d1014 	add	r1, sp, #20
40012fd8:	e1a00007 	mov	r0, r7
40012fdc:	eb000071 	bl	400131a8 <MyDebugSNPrint>
40012fe0:	e1a06000 	mov	r6, r0
40012fe4:	e59f00c0 	ldr	r0, [pc, #192]	; 400130ac <CyU3PDebugPrint+0x230>
40012fe8:	e5900000 	ldr	r0, [r0]
40012fec:	e3500000 	cmp	r0, #0
40012ff0:	0a00000f 	beq	40013034 <CyU3PDebugPrint+0x1b8>
40012ff4:	e59f00ac 	ldr	r0, [pc, #172]	; 400130a8 <CyU3PDebugPrint+0x22c>
40012ff8:	e5907000 	ldr	r7, [r0]
40012ffc:	e5cd4020 	strb	r4, [sp, #32]
40013000:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40013004:	e3e00000 	mvn	r0, #0
40013008:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001300c:	e1dd01b4 	ldrh	r0, [sp, #20]
40013010:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013014:	e3a02008 	mov	r2, #8
40013018:	e28d1020 	add	r1, sp, #32
4001301c:	e1a00007 	mov	r0, r7
40013020:	ebffc22b 	bl	400038d4 <CyU3PMemCopy>
40013024:	e1dd01b4 	ldrh	r0, [sp, #20]
40013028:	e2800008 	add	r0, r0, #8
4001302c:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40013030:	e58d0014 	str	r0, [sp, #20]
40013034:	e3a02000 	mov	r2, #0
40013038:	e1dd11b4 	ldrh	r1, [sp, #20]
4001303c:	e59f0060 	ldr	r0, [pc, #96]	; 400130a4 <CyU3PDebugPrint+0x228>
40013040:	eb000828 	bl	400150e8 <CyU3PDmaChannelCommitBuffer>
40013044:	e1a06000 	mov	r6, r0
40013048:	e3560000 	cmp	r6, #0
4001304c:	1a000004 	bne	40013064 <CyU3PDebugPrint+0x1e8>
40013050:	e3e02000 	mvn	r2, #0
40013054:	e59f104c 	ldr	r1, [pc, #76]	; 400130a8 <CyU3PDebugPrint+0x22c>
40013058:	e281000c 	add	r0, r1, #12
4001305c:	eb000b64 	bl	40015df4 <CyU3PDmaChannelGetBuffer>
40013060:	e1a06000 	mov	r6, r0
40013064:	e3560000 	cmp	r6, #0
40013068:	0a000002 	beq	40013078 <CyU3PDebugPrint+0x1fc>
4001306c:	ebfffee8 	bl	40012c14 <CyU3PDebugChannelReset>
40013070:	e1a00006 	mov	r0, r6
40013074:	eaffff89 	b	40012ea0 <CyU3PDebugPrint+0x24>
40013078:	e3a00000 	mov	r0, #0
4001307c:	e59f101c 	ldr	r1, [pc, #28]	; 400130a0 <CyU3PDebugPrint+0x224>
40013080:	e1c100b0 	strh	r0, [r1]
40013084:	e59f0010 	ldr	r0, [pc, #16]	; 4001309c <CyU3PDebugPrint+0x220>
40013088:	ebffdbfe 	bl	4000a088 <_txe_mutex_put>
4001308c:	e3a00000 	mov	r0, #0
40013090:	eaffff82 	b	40012ea0 <CyU3PDebugPrint+0x24>
40013094:	40030c74 	.word	0x40030c74
40013098:	40030c80 	.word	0x40030c80
4001309c:	40031314 	.word	0x40031314
400130a0:	40030c84 	.word	0x40030c84
400130a4:	40031358 	.word	0x40031358
400130a8:	4003134c 	.word	0x4003134c
400130ac:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugThreadEntry:

400130b0 <CyU3PDebugThreadEntry>:
400130b0:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
400130b4:	e1a06000 	mov	r6, r0
400130b8:	e3a05000 	mov	r5, #0
400130bc:	e1a00000 	nop			; (mov r0, r0)
400130c0:	e3e02000 	mvn	r2, #0
400130c4:	e1a0100d 	mov	r1, sp
400130c8:	e59f00c4 	ldr	r0, [pc, #196]	; 40013194 <CyU3PDebugThreadEntry+0xe4>
400130cc:	ebffdcab 	bl	4000a380 <_txe_queue_receive>
400130d0:	e1a04000 	mov	r4, r0
400130d4:	e3540000 	cmp	r4, #0
400130d8:	1afffff8 	bne	400130c0 <CyU3PDebugThreadEntry+0x10>
400130dc:	e3e01000 	mvn	r1, #0
400130e0:	e59f00b0 	ldr	r0, [pc, #176]	; 40013198 <CyU3PDebugThreadEntry+0xe8>
400130e4:	ebffdbb2 	bl	40009fb4 <_txe_mutex_get>
400130e8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001319c <CyU3PDebugThreadEntry+0xec>
400130ec:	e1d000b0 	ldrh	r0, [r0]
400130f0:	e3500c01 	cmp	r0, #256	; 0x100
400130f4:	0a000007 	beq	40013118 <CyU3PDebugThreadEntry+0x68>
400130f8:	e59f10a0 	ldr	r1, [pc, #160]	; 400131a0 <CyU3PDebugThreadEntry+0xf0>
400130fc:	e5911000 	ldr	r1, [r1]
40013100:	e59f2094 	ldr	r2, [pc, #148]	; 4001319c <CyU3PDebugThreadEntry+0xec>
40013104:	e1d220b0 	ldrh	r2, [r2]
40013108:	e0810002 	add	r0, r1, r2
4001310c:	e3a02008 	mov	r2, #8
40013110:	e1a0100d 	mov	r1, sp
40013114:	ebffc1ee 	bl	400038d4 <CyU3PMemCopy>
40013118:	e59f007c 	ldr	r0, [pc, #124]	; 4001319c <CyU3PDebugThreadEntry+0xec>
4001311c:	e1d000b0 	ldrh	r0, [r0]
40013120:	e35000f8 	cmp	r0, #248	; 0xf8
40013124:	1a000015 	bne	40013180 <CyU3PDebugThreadEntry+0xd0>
40013128:	e3a02000 	mov	r2, #0
4001312c:	e3a01c01 	mov	r1, #256	; 0x100
40013130:	e59f006c 	ldr	r0, [pc, #108]	; 400131a4 <CyU3PDebugThreadEntry+0xf4>
40013134:	eb0007eb 	bl	400150e8 <CyU3PDmaChannelCommitBuffer>
40013138:	e1a05000 	mov	r5, r0
4001313c:	e3550000 	cmp	r5, #0
40013140:	1a000004 	bne	40013158 <CyU3PDebugThreadEntry+0xa8>
40013144:	e3e02000 	mvn	r2, #0
40013148:	e59f1050 	ldr	r1, [pc, #80]	; 400131a0 <CyU3PDebugThreadEntry+0xf0>
4001314c:	e281000c 	add	r0, r1, #12
40013150:	eb000b27 	bl	40015df4 <CyU3PDmaChannelGetBuffer>
40013154:	e1a05000 	mov	r5, r0
40013158:	e3550000 	cmp	r5, #0
4001315c:	0a000004 	beq	40013174 <CyU3PDebugThreadEntry+0xc4>
40013160:	ebfffeab 	bl	40012c14 <CyU3PDebugChannelReset>
40013164:	e1a05000 	mov	r5, r0
40013168:	e3550000 	cmp	r5, #0
4001316c:	0a000000 	beq	40013174 <CyU3PDebugThreadEntry+0xc4>
40013170:	ea000005 	b	4001318c <CyU3PDebugThreadEntry+0xdc>
40013174:	e3a00000 	mov	r0, #0
40013178:	e59f101c 	ldr	r1, [pc, #28]	; 4001319c <CyU3PDebugThreadEntry+0xec>
4001317c:	e1c100b0 	strh	r0, [r1]
40013180:	e59f0010 	ldr	r0, [pc, #16]	; 40013198 <CyU3PDebugThreadEntry+0xe8>
40013184:	ebffdbbf 	bl	4000a088 <_txe_mutex_put>
40013188:	eaffffcc 	b	400130c0 <CyU3PDebugThreadEntry+0x10>
4001318c:	e1a00000 	nop			; (mov r0, r0)
40013190:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
40013194:	400312d8 	.word	0x400312d8
40013198:	40031314 	.word	0x40031314
4001319c:	40030c84 	.word	0x40030c84
400131a0:	4003134c 	.word	0x4003134c
400131a4:	40031358 	.word	0x40031358

Disassembly of section i.MyDebugSNPrint:

400131a8 <MyDebugSNPrint>:
400131a8:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400131ac:	e24dd01c 	sub	sp, sp, #28
400131b0:	e1a04000 	mov	r4, r0
400131b4:	e1a05001 	mov	r5, r1
400131b8:	e1a06002 	mov	r6, r2
400131bc:	e3a08000 	mov	r8, #0
400131c0:	e3a00000 	mov	r0, #0
400131c4:	e58d0018 	str	r0, [sp, #24]
400131c8:	e3a09000 	mov	r9, #0
400131cc:	e1d5b0b0 	ldrh	fp, [r5]
400131d0:	e3540000 	cmp	r4, #0
400131d4:	1a000002 	bne	400131e4 <MyDebugSNPrint+0x3c>
400131d8:	e3a00040 	mov	r0, #64	; 0x40
400131dc:	e28dd02c 	add	sp, sp, #44	; 0x2c
400131e0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400131e4:	e1a07006 	mov	r7, r6
400131e8:	ea00008d 	b	40013424 <MyDebugSNPrint+0x27c>
400131ec:	e24b0002 	sub	r0, fp, #2
400131f0:	e1500009 	cmp	r0, r9
400131f4:	ca000001 	bgt	40013200 <MyDebugSNPrint+0x58>
400131f8:	e3a00040 	mov	r0, #64	; 0x40
400131fc:	eafffff6 	b	400131dc <MyDebugSNPrint+0x34>
40013200:	e5d70000 	ldrb	r0, [r7]
40013204:	e3500025 	cmp	r0, #37	; 0x25
40013208:	0a000005 	beq	40013224 <MyDebugSNPrint+0x7c>
4001320c:	e5d71000 	ldrb	r1, [r7]
40013210:	e1a00009 	mov	r0, r9
40013214:	e2892001 	add	r2, r9, #1
40013218:	e3c29801 	bic	r9, r2, #65536	; 0x10000
4001321c:	e7c41000 	strb	r1, [r4, r0]
40013220:	ea00007e 	b	40013420 <MyDebugSNPrint+0x278>
40013224:	e2877001 	add	r7, r7, #1
40013228:	e5d70000 	ldrb	r0, [r7]
4001322c:	e3500064 	cmp	r0, #100	; 0x64
40013230:	0a000021 	beq	400132bc <MyDebugSNPrint+0x114>
40013234:	ca000006 	bgt	40013254 <MyDebugSNPrint+0xac>
40013238:	e3500025 	cmp	r0, #37	; 0x25
4001323c:	0a00000b 	beq	40013270 <MyDebugSNPrint+0xc8>
40013240:	e3500058 	cmp	r0, #88	; 0x58
40013244:	0a00004c 	beq	4001337c <MyDebugSNPrint+0x1d4>
40013248:	e3500063 	cmp	r0, #99	; 0x63
4001324c:	1a00005a 	bne	400133bc <MyDebugSNPrint+0x214>
40013250:	ea00000d 	b	4001328c <MyDebugSNPrint+0xe4>
40013254:	e3500073 	cmp	r0, #115	; 0x73
40013258:	0a000031 	beq	40013324 <MyDebugSNPrint+0x17c>
4001325c:	e3500075 	cmp	r0, #117	; 0x75
40013260:	0a000036 	beq	40013340 <MyDebugSNPrint+0x198>
40013264:	e3500078 	cmp	r0, #120	; 0x78
40013268:	1a000053 	bne	400133bc <MyDebugSNPrint+0x214>
4001326c:	ea000044 	b	40013384 <MyDebugSNPrint+0x1dc>
40013270:	e1a00000 	nop			; (mov r0, r0)
40013274:	e3a01025 	mov	r1, #37	; 0x25
40013278:	e1a00009 	mov	r0, r9
4001327c:	e2892001 	add	r2, r9, #1
40013280:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013284:	e7c41000 	strb	r1, [r4, r0]
40013288:	ea00004e 	b	400133c8 <MyDebugSNPrint+0x220>
4001328c:	e1a00000 	nop			; (mov r0, r0)
40013290:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013294:	e5900000 	ldr	r0, [r0]
40013298:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
4001329c:	e2811004 	add	r1, r1, #4
400132a0:	e58d1028 	str	r1, [sp, #40]	; 0x28
400132a4:	e20010ff 	and	r1, r0, #255	; 0xff
400132a8:	e1a00009 	mov	r0, r9
400132ac:	e2892001 	add	r2, r9, #1
400132b0:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400132b4:	e7c41000 	strb	r1, [r4, r0]
400132b8:	ea000042 	b	400133c8 <MyDebugSNPrint+0x220>
400132bc:	e1a00000 	nop			; (mov r0, r0)
400132c0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400132c4:	e5900000 	ldr	r0, [r0]
400132c8:	e58d0014 	str	r0, [sp, #20]
400132cc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400132d0:	e2800004 	add	r0, r0, #4
400132d4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400132d8:	e59d0014 	ldr	r0, [sp, #20]
400132dc:	e3500000 	cmp	r0, #0
400132e0:	aa000007 	bge	40013304 <MyDebugSNPrint+0x15c>
400132e4:	e3a0102d 	mov	r1, #45	; 0x2d
400132e8:	e1a00009 	mov	r0, r9
400132ec:	e2892001 	add	r2, r9, #1
400132f0:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400132f4:	e7c41000 	strb	r1, [r4, r0]
400132f8:	e59d0014 	ldr	r0, [sp, #20]
400132fc:	e2600000 	rsb	r0, r0, #0
40013300:	e58d0014 	str	r0, [sp, #20]
40013304:	e3a0200a 	mov	r2, #10
40013308:	e59d1014 	ldr	r1, [sp, #20]
4001330c:	e28d0004 	add	r0, sp, #4
40013310:	ebfffeb5 	bl	40012dec <CyU3PDebugIntToStr>
40013314:	e1a08000 	mov	r8, r0
40013318:	e3a00001 	mov	r0, #1
4001331c:	e58d0018 	str	r0, [sp, #24]
40013320:	ea000028 	b	400133c8 <MyDebugSNPrint+0x220>
40013324:	e1a00000 	nop			; (mov r0, r0)
40013328:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001332c:	e4908004 	ldr	r8, [r0], #4
40013330:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013334:	e3a00001 	mov	r0, #1
40013338:	e58d0018 	str	r0, [sp, #24]
4001333c:	ea000021 	b	400133c8 <MyDebugSNPrint+0x220>
40013340:	e1a00000 	nop			; (mov r0, r0)
40013344:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013348:	e5900000 	ldr	r0, [r0]
4001334c:	e58d0010 	str	r0, [sp, #16]
40013350:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013354:	e2800004 	add	r0, r0, #4
40013358:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001335c:	e3a0200a 	mov	r2, #10
40013360:	e59d1010 	ldr	r1, [sp, #16]
40013364:	e28d0004 	add	r0, sp, #4
40013368:	ebfffe9f 	bl	40012dec <CyU3PDebugIntToStr>
4001336c:	e1a08000 	mov	r8, r0
40013370:	e3a00001 	mov	r0, #1
40013374:	e58d0018 	str	r0, [sp, #24]
40013378:	ea000012 	b	400133c8 <MyDebugSNPrint+0x220>
4001337c:	e1a00000 	nop			; (mov r0, r0)
40013380:	e1a00000 	nop			; (mov r0, r0)
40013384:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013388:	e5900000 	ldr	r0, [r0]
4001338c:	e58d0010 	str	r0, [sp, #16]
40013390:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013394:	e2800004 	add	r0, r0, #4
40013398:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001339c:	e3a02010 	mov	r2, #16
400133a0:	e59d1010 	ldr	r1, [sp, #16]
400133a4:	e28d0004 	add	r0, sp, #4
400133a8:	ebfffe8f 	bl	40012dec <CyU3PDebugIntToStr>
400133ac:	e1a08000 	mov	r8, r0
400133b0:	e3a00001 	mov	r0, #1
400133b4:	e58d0018 	str	r0, [sp, #24]
400133b8:	ea000002 	b	400133c8 <MyDebugSNPrint+0x220>
400133bc:	e1a00000 	nop			; (mov r0, r0)
400133c0:	e3a00040 	mov	r0, #64	; 0x40
400133c4:	eaffff84 	b	400131dc <MyDebugSNPrint+0x34>
400133c8:	e1a00000 	nop			; (mov r0, r0)
400133cc:	e59d0018 	ldr	r0, [sp, #24]
400133d0:	e3500000 	cmp	r0, #0
400133d4:	0a000010 	beq	4001341c <MyDebugSNPrint+0x274>
400133d8:	e1a00008 	mov	r0, r8
400133dc:	ebfff4fb 	bl	400107d0 <strlen>
400133e0:	e1a0a800 	lsl	sl, r0, #16
400133e4:	e1a0a82a 	lsr	sl, sl, #16
400133e8:	e04b000a 	sub	r0, fp, sl
400133ec:	e2400001 	sub	r0, r0, #1
400133f0:	e1500009 	cmp	r0, r9
400133f4:	ca000001 	bgt	40013400 <MyDebugSNPrint+0x258>
400133f8:	e3a00040 	mov	r0, #64	; 0x40
400133fc:	eaffff76 	b	400131dc <MyDebugSNPrint+0x34>
40013400:	e0840009 	add	r0, r4, r9
40013404:	e1a01008 	mov	r1, r8
40013408:	ebfff4b4 	bl	400106e0 <strcpy>
4001340c:	e089000a 	add	r0, r9, sl
40013410:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40013414:	e3a00000 	mov	r0, #0
40013418:	e58d0018 	str	r0, [sp, #24]
4001341c:	e1a00000 	nop			; (mov r0, r0)
40013420:	e2877001 	add	r7, r7, #1
40013424:	e5d70000 	ldrb	r0, [r7]
40013428:	e3500000 	cmp	r0, #0
4001342c:	1affff6e 	bne	400131ec <MyDebugSNPrint+0x44>
40013430:	e3a00000 	mov	r0, #0
40013434:	e7c40009 	strb	r0, [r4, r9]
40013438:	e1c590b0 	strh	r9, [r5]
4001343c:	eaffff66 	b	400131dc <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

40013440 <CyU3PBusyWait>:
40013440:	ea000006 	b	40013460 <CyU3PBusyWait+0x20>
40013444:	e3a01000 	mov	r1, #0
40013448:	ea000002 	b	40013458 <CyU3PBusyWait+0x18>
4001344c:	e281100a 	add	r1, r1, #10
40013450:	e241100a 	sub	r1, r1, #10
40013454:	e2811001 	add	r1, r1, #1
40013458:	e351001f 	cmp	r1, #31
4001345c:	3afffffa 	bcc	4001344c <CyU3PBusyWait+0xc>
40013460:	e1b02000 	movs	r2, r0
40013464:	e2403001 	sub	r3, r0, #1
40013468:	e1a00803 	lsl	r0, r3, #16
4001346c:	e1a00820 	lsr	r0, r0, #16
40013470:	1afffff3 	bne	40013444 <CyU3PBusyWait+0x4>
40013474:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

40013478 <CyU3PComputeChecksum>:
40013478:	e92d4010 	push	{r4, lr}
4001347c:	e1a03000 	mov	r3, r0
40013480:	e3a00000 	mov	r0, #0
40013484:	e3530000 	cmp	r3, #0
40013488:	0a000003 	beq	4001349c <CyU3PComputeChecksum+0x24>
4001348c:	e3510000 	cmp	r1, #0
40013490:	0a000001 	beq	4001349c <CyU3PComputeChecksum+0x24>
40013494:	e3520000 	cmp	r2, #0
40013498:	1a000001 	bne	400134a4 <CyU3PComputeChecksum+0x2c>
4001349c:	e3a00040 	mov	r0, #64	; 0x40
400134a0:	ea00000a 	b	400134d0 <CyU3PComputeChecksum+0x58>
400134a4:	e3a0e000 	mov	lr, #0
400134a8:	e582e000 	str	lr, [r2]
400134ac:	e3a0c000 	mov	ip, #0
400134b0:	ea000004 	b	400134c8 <CyU3PComputeChecksum+0x50>
400134b4:	e592e000 	ldr	lr, [r2]
400134b8:	e793410c 	ldr	r4, [r3, ip, lsl #2]
400134bc:	e08ee004 	add	lr, lr, r4
400134c0:	e582e000 	str	lr, [r2]
400134c4:	e28cc001 	add	ip, ip, #1
400134c8:	e15c0121 	cmp	ip, r1, lsr #2
400134cc:	3afffff8 	bcc	400134b4 <CyU3PComputeChecksum+0x3c>
400134d0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

400134d4 <__aeabi_memclr4>:
400134d4:	e92d4030 	push	{r4, r5, lr}
400134d8:	e1a04000 	mov	r4, r0
400134dc:	e1a05001 	mov	r5, r1
400134e0:	e3a02000 	mov	r2, #0
400134e4:	e1a01005 	mov	r1, r5
400134e8:	e1a00004 	mov	r0, r4
400134ec:	eb000020 	bl	40013574 <__aeabi_memset>
400134f0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

400134f4 <__aeabi_memcpy>:
400134f4:	e92d4010 	push	{r4, lr}
400134f8:	e1a03000 	mov	r3, r0
400134fc:	e1a0c001 	mov	ip, r1
40013500:	e1500001 	cmp	r0, r1
40013504:	2a000006 	bcs	40013524 <__aeabi_memcpy+0x30>
40013508:	ea000001 	b	40013514 <__aeabi_memcpy+0x20>
4001350c:	e4dce001 	ldrb	lr, [ip], #1
40013510:	e4c3e001 	strb	lr, [r3], #1
40013514:	e1b0e002 	movs	lr, r2
40013518:	e2422001 	sub	r2, r2, #1
4001351c:	1afffffa 	bne	4001350c <__aeabi_memcpy+0x18>
40013520:	ea000009 	b	4001354c <__aeabi_memcpy+0x58>
40013524:	e080e002 	add	lr, r0, r2
40013528:	e24e3001 	sub	r3, lr, #1
4001352c:	e081e002 	add	lr, r1, r2
40013530:	e24ec001 	sub	ip, lr, #1
40013534:	ea000001 	b	40013540 <__aeabi_memcpy+0x4c>
40013538:	e45ce001 	ldrb	lr, [ip], #-1
4001353c:	e443e001 	strb	lr, [r3], #-1
40013540:	e1b0e002 	movs	lr, r2
40013544:	e2422001 	sub	r2, r2, #1
40013548:	1afffffa 	bne	40013538 <__aeabi_memcpy+0x44>
4001354c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013550 <__aeabi_memcpy4>:
40013550:	e92d4070 	push	{r4, r5, r6, lr}
40013554:	e1a04000 	mov	r4, r0
40013558:	e1a05001 	mov	r5, r1
4001355c:	e1a06002 	mov	r6, r2
40013560:	e1a02006 	mov	r2, r6
40013564:	e1a01005 	mov	r1, r5
40013568:	e1a00004 	mov	r0, r4
4001356c:	ebffffe0 	bl	400134f4 <__aeabi_memcpy>
40013570:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

40013574 <__aeabi_memset>:
40013574:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40013578:	e1a03000 	mov	r3, r0
4001357c:	ea000000 	b	40013584 <__aeabi_memset+0x10>
40013580:	e4c32001 	strb	r2, [r3], #1
40013584:	e1b0c001 	movs	ip, r1
40013588:	e2411001 	sub	r1, r1, #1
4001358c:	1afffffb 	bne	40013580 <__aeabi_memset+0xc>
40013590:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013594 <CyU3PApplicationDefine>:
40013594:	e92d4010 	push	{r4, lr}
40013598:	e24dd020 	sub	sp, sp, #32
4001359c:	e3e00000 	mvn	r0, #0
400135a0:	e59f10b4 	ldr	r1, [pc, #180]	; 4001365c <CyU3PApplicationDefine+0xc8>
400135a4:	e5810000 	str	r0, [r1]
400135a8:	e3a00000 	mov	r0, #0
400135ac:	e59f10ac 	ldr	r1, [pc, #172]	; 40013660 <CyU3PApplicationDefine+0xcc>
400135b0:	e5810000 	str	r0, [r1]
400135b4:	ebffc01b 	bl	40003628 <CyU3PMemInit>
400135b8:	eb001694 	bl	40019010 <CyU3PDmaApplicationDefine>
400135bc:	e3a02028 	mov	r2, #40	; 0x28
400135c0:	e3a01000 	mov	r1, #0
400135c4:	e59f0098 	ldr	r0, [pc, #152]	; 40013664 <CyU3PApplicationDefine+0xd0>
400135c8:	ebffd941 	bl	40009ad4 <_txe_event_flags_create>
400135cc:	e3a00080 	mov	r0, #128	; 0x80
400135d0:	ebffc027 	bl	40003674 <CyU3PMemAlloc>
400135d4:	e1a04000 	mov	r4, r0
400135d8:	e3a0303c 	mov	r3, #60	; 0x3c
400135dc:	e3a02080 	mov	r2, #128	; 0x80
400135e0:	e1cd20f0 	strd	r2, [sp]
400135e4:	e1a03004 	mov	r3, r4
400135e8:	e3a02006 	mov	r2, #6
400135ec:	e3a01000 	mov	r1, #0
400135f0:	e59f0070 	ldr	r0, [pc, #112]	; 40013668 <CyU3PApplicationDefine+0xd4>
400135f4:	ebffdacb 	bl	4000a128 <_txe_queue_create>
400135f8:	e3a00b01 	mov	r0, #1024	; 0x400
400135fc:	ebffc01c 	bl	40003674 <CyU3PMemAlloc>
40013600:	e1a04000 	mov	r4, r0
40013604:	e3a030a8 	mov	r3, #168	; 0xa8
40013608:	e3a02001 	mov	r2, #1
4001360c:	e3a01000 	mov	r1, #0
40013610:	e3a00004 	mov	r0, #4
40013614:	e28dc00c 	add	ip, sp, #12
40013618:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001361c:	e3a02b01 	mov	r2, #1024	; 0x400
40013620:	e1a03001 	mov	r3, r1
40013624:	e58d2004 	str	r2, [sp, #4]
40013628:	e59f203c 	ldr	r2, [pc, #60]	; 4001366c <CyU3PApplicationDefine+0xd8>
4001362c:	e28f103c 	add	r1, pc, #60	; 0x3c
40013630:	e58d0008 	str	r0, [sp, #8]
40013634:	e59f0048 	ldr	r0, [pc, #72]	; 40013684 <CyU3PApplicationDefine+0xf0>
40013638:	e58d4000 	str	r4, [sp]
4001363c:	ebffdb9f 	bl	4000a4c0 <_txe_thread_create>
40013640:	eb000082 	bl	40013850 <CyU3PSibApplicationDefine>
40013644:	ebfffd3d 	bl	40012b40 <CyU3PDebugApplicationDefine>
40013648:	eb001d16 	bl	4001aaa8 <CyU3PPibApplicationDefine>
4001364c:	eb00013c 	bl	40013b44 <CyU3PLppApplicationDefine>
40013650:	eb002b6f 	bl	4001e414 <CyU3PUibApplicationDefine>
40013654:	e28dd020 	add	sp, sp, #32
40013658:	e8bd8010 	pop	{r4, pc}
4001365c:	40030c88 	.word	0x40030c88
40013660:	40030c8c 	.word	0x40030c8c
40013664:	400314a0 	.word	0x400314a0
40013668:	400314c8 	.word	0x400314c8
4001366c:	4001373c 	.word	0x4001373c
40013670:	535f3230 	.word	0x535f3230
40013674:	45545359 	.word	0x45545359
40013678:	48545f4d 	.word	0x48545f4d
4001367c:	44414552 	.word	0x44414552
40013680:	00000000 	.word	0x00000000
40013684:	400313f8 	.word	0x400313f8

Disassembly of section i.CyU3PSysCheckBootState:

40013688 <CyU3PSysCheckBootState>:
40013688:	e92d4070 	push	{r4, r5, r6, lr}
4001368c:	e3a00000 	mov	r0, #0
40013690:	e59f106c 	ldr	r1, [pc, #108]	; 40013704 <CyU3PSysCheckBootState+0x7c>
40013694:	e5810000 	str	r0, [r1]
40013698:	e59f0068 	ldr	r0, [pc, #104]	; 40013708 <CyU3PSysCheckBootState+0x80>
4001369c:	e5900000 	ldr	r0, [r0]
400136a0:	e3100401 	tst	r0, #16777216	; 0x1000000
400136a4:	0a000015 	beq	40013700 <CyU3PSysCheckBootState+0x78>
400136a8:	e59f005c 	ldr	r0, [pc, #92]	; 4001370c <CyU3PSysCheckBootState+0x84>
400136ac:	e5900000 	ldr	r0, [r0]
400136b0:	e3500001 	cmp	r0, #1
400136b4:	1a000011 	bne	40013700 <CyU3PSysCheckBootState+0x78>
400136b8:	e3a00000 	mov	r0, #0
400136bc:	e59f1048 	ldr	r1, [pc, #72]	; 4001370c <CyU3PSysCheckBootState+0x84>
400136c0:	e5810000 	str	r0, [r1]
400136c4:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400136c8:	e5904004 	ldr	r4, [r0, #4]
400136cc:	e1a05004 	mov	r5, r4
400136d0:	e3a02901 	mov	r2, #16384	; 0x4000
400136d4:	e1a01005 	mov	r1, r5
400136d8:	e3a00000 	mov	r0, #0
400136dc:	ebffc07c 	bl	400038d4 <CyU3PMemCopy>
400136e0:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400136e4:	e5900008 	ldr	r0, [r0, #8]
400136e8:	e59f1020 	ldr	r1, [pc, #32]	; 40013710 <CyU3PSysCheckBootState+0x88>
400136ec:	e1500001 	cmp	r0, r1
400136f0:	1a000002 	bne	40013700 <CyU3PSysCheckBootState+0x78>
400136f4:	e2840901 	add	r0, r4, #16384	; 0x4000
400136f8:	e59f1004 	ldr	r1, [pc, #4]	; 40013704 <CyU3PSysCheckBootState+0x7c>
400136fc:	e5810000 	str	r0, [r1]
40013700:	e8bd8070 	pop	{r4, r5, r6, pc}
40013704:	40030c90 	.word	0x40030c90
40013708:	e0050000 	.word	0xe0050000
4001370c:	40030c8c 	.word	0x40030c8c
40013710:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

40013714 <CyU3PSysFwMsgHandler>:
40013714:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013718 <CyU3PSysModuleInitCompleteEvt>:
40013718:	e92d4010 	push	{r4, lr}
4001371c:	e1a04000 	mov	r4, r0
40013720:	e3a00010 	mov	r0, #16
40013724:	e1a01410 	lsl	r1, r0, r4
40013728:	e3a02000 	mov	r2, #0
4001372c:	e59f0004 	ldr	r0, [pc, #4]	; 40013738 <CyU3PSysModuleInitCompleteEvt+0x20>
40013730:	ebffd987 	bl	40009d54 <_txe_event_flags_set>
40013734:	e8bd8010 	pop	{r4, pc}
40013738:	400314a0 	.word	0x400314a0

Disassembly of section i.CyU3PSysThreadEntry:

4001373c <CyU3PSysThreadEntry>:
4001373c:	e92d4010 	push	{r4, lr}
40013740:	e24dd028 	sub	sp, sp, #40	; 0x28
40013744:	e3a04c02 	mov	r4, #512	; 0x200
40013748:	e3844080 	orr	r4, r4, #128	; 0x80
4001374c:	e3e03000 	mvn	r3, #0
40013750:	e58d3000 	str	r3, [sp]
40013754:	e28d3024 	add	r3, sp, #36	; 0x24
40013758:	e3a02003 	mov	r2, #3
4001375c:	e1a01004 	mov	r1, r4
40013760:	e59f00d8 	ldr	r0, [pc, #216]	; 40013840 <CyU3PSysThreadEntry+0x104>
40013764:	ebffd94a 	bl	40009c94 <_txe_event_flags_get>
40013768:	e28d2020 	add	r2, sp, #32
4001376c:	e3a01000 	mov	r1, #0
40013770:	e59f00cc 	ldr	r0, [pc, #204]	; 40013844 <CyU3PSysThreadEntry+0x108>
40013774:	ebffdc07 	bl	4000a798 <_txe_thread_priority_change>
40013778:	ebffd34c 	bl	400084b0 <CyFxApplicationDefine>
4001377c:	e28d2020 	add	r2, sp, #32
40013780:	e3a01004 	mov	r1, #4
40013784:	e59f00b8 	ldr	r0, [pc, #184]	; 40013844 <CyU3PSysThreadEntry+0x108>
40013788:	ebffdc02 	bl	4000a798 <_txe_thread_priority_change>
4001378c:	ea00002a 	b	4001383c <CyU3PSysThreadEntry+0x100>
40013790:	e59f00b0 	ldr	r0, [pc, #176]	; 40013848 <CyU3PSysThreadEntry+0x10c>
40013794:	e5903000 	ldr	r3, [r0]
40013798:	e58d3000 	str	r3, [sp]
4001379c:	e28d3024 	add	r3, sp, #36	; 0x24
400137a0:	e3a02001 	mov	r2, #1
400137a4:	e3e01000 	mvn	r1, #0
400137a8:	e59f0090 	ldr	r0, [pc, #144]	; 40013840 <CyU3PSysThreadEntry+0x104>
400137ac:	ebffd938 	bl	40009c94 <_txe_event_flags_get>
400137b0:	e58d0020 	str	r0, [sp, #32]
400137b4:	e59d0020 	ldr	r0, [sp, #32]
400137b8:	e3500000 	cmp	r0, #0
400137bc:	0a000000 	beq	400137c4 <CyU3PSysThreadEntry+0x88>
400137c0:	ea00001d 	b	4001383c <CyU3PSysThreadEntry+0x100>
400137c4:	e3a04001 	mov	r4, #1
400137c8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400137cc:	e0000004 	and	r0, r0, r4
400137d0:	e58d0024 	str	r0, [sp, #36]	; 0x24
400137d4:	ea000014 	b	4001382c <CyU3PSysThreadEntry+0xf0>
400137d8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400137dc:	e3100001 	tst	r0, #1
400137e0:	0a000011 	beq	4001382c <CyU3PSysThreadEntry+0xf0>
400137e4:	e3a02000 	mov	r2, #0
400137e8:	e28d1008 	add	r1, sp, #8
400137ec:	e59f0058 	ldr	r0, [pc, #88]	; 4001384c <CyU3PSysThreadEntry+0x110>
400137f0:	ebffdae2 	bl	4000a380 <_txe_queue_receive>
400137f4:	e58d0020 	str	r0, [sp, #32]
400137f8:	e59d0020 	ldr	r0, [sp, #32]
400137fc:	e3500000 	cmp	r0, #0
40013800:	1a000006 	bne	40013820 <CyU3PSysThreadEntry+0xe4>
40013804:	e1dd00b8 	ldrh	r0, [sp, #8]
40013808:	e2000902 	and	r0, r0, #32768	; 0x8000
4001380c:	e1b007a0 	lsrs	r0, r0, #15
40013810:	1a000005 	bne	4001382c <CyU3PSysThreadEntry+0xf0>
40013814:	e28d0008 	add	r0, sp, #8
40013818:	ebffffbd 	bl	40013714 <CyU3PSysFwMsgHandler>
4001381c:	ea000002 	b	4001382c <CyU3PSysThreadEntry+0xf0>
40013820:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013824:	e3c00001 	bic	r0, r0, #1
40013828:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001382c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013830:	e3500000 	cmp	r0, #0
40013834:	1affffe7 	bne	400137d8 <CyU3PSysThreadEntry+0x9c>
40013838:	e1a00000 	nop			; (mov r0, r0)
4001383c:	eaffffd3 	b	40013790 <CyU3PSysThreadEntry+0x54>
40013840:	400314a0 	.word	0x400314a0
40013844:	400313f8 	.word	0x400313f8
40013848:	40030c88 	.word	0x40030c88
4001384c:	400314c8 	.word	0x400314c8

Disassembly of section i.CyU3PSibApplicationDefine:

40013850 <CyU3PSibApplicationDefine>:
40013850:	e92d4010 	push	{r4, lr}
40013854:	e24dd020 	sub	sp, sp, #32
40013858:	e3a04000 	mov	r4, #0
4001385c:	e3a02028 	mov	r2, #40	; 0x28
40013860:	e3a01000 	mov	r1, #0
40013864:	e59f0064 	ldr	r0, [pc, #100]	; 400138d0 <CyU3PSibApplicationDefine+0x80>
40013868:	ebffd899 	bl	40009ad4 <_txe_event_flags_create>
4001386c:	e3a00000 	mov	r0, #0
40013870:	e59f105c 	ldr	r1, [pc, #92]	; 400138d4 <CyU3PSibApplicationDefine+0x84>
40013874:	e5810000 	str	r0, [r1]
40013878:	e3a00b02 	mov	r0, #2048	; 0x800
4001387c:	ebffbf7c 	bl	40003674 <CyU3PMemAlloc>
40013880:	e1a04000 	mov	r4, r0
40013884:	e3540000 	cmp	r4, #0
40013888:	0a00000e 	beq	400138c8 <CyU3PSibApplicationDefine+0x78>
4001388c:	e3a030a8 	mov	r3, #168	; 0xa8
40013890:	e3a02001 	mov	r2, #1
40013894:	e3a01000 	mov	r1, #0
40013898:	e3a00004 	mov	r0, #4
4001389c:	e28dc00c 	add	ip, sp, #12
400138a0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400138a4:	e3a02b02 	mov	r2, #2048	; 0x800
400138a8:	e1a03001 	mov	r3, r1
400138ac:	e58d2004 	str	r2, [sp, #4]
400138b0:	e59f2020 	ldr	r2, [pc, #32]	; 400138d8 <CyU3PSibApplicationDefine+0x88>
400138b4:	e28f1020 	add	r1, pc, #32
400138b8:	e58d0008 	str	r0, [sp, #8]
400138bc:	e59f0028 	ldr	r0, [pc, #40]	; 400138ec <CyU3PSibApplicationDefine+0x9c>
400138c0:	e58d4000 	str	r4, [sp]
400138c4:	ebffdafd 	bl	4000a4c0 <_txe_thread_create>
400138c8:	e28dd020 	add	sp, sp, #32
400138cc:	e8bd8010 	pop	{r4, pc}
400138d0:	400315ac 	.word	0x400315ac
400138d4:	40030c94 	.word	0x40030c94
400138d8:	40013948 	.word	0x40013948
400138dc:	535f3630 	.word	0x535f3630
400138e0:	545f4249 	.word	0x545f4249
400138e4:	41455248 	.word	0x41455248
400138e8:	00000044 	.word	0x00000044
400138ec:	40031504 	.word	0x40031504

Disassembly of section i.CyU3PSibInitIntfParams:

400138f0 <CyU3PSibInitIntfParams>:
400138f0:	e0802100 	add	r2, r0, r0, lsl #2
400138f4:	e59f3048 	ldr	r3, [pc, #72]	; 40013944 <CyU3PSibInitIntfParams+0x54>
400138f8:	e0831102 	add	r1, r3, r2, lsl #2
400138fc:	e3a020ff 	mov	r2, #255	; 0xff
40013900:	e5c12000 	strb	r2, [r1]
40013904:	e3a02002 	mov	r2, #2
40013908:	e5c12008 	strb	r2, [r1, #8]
4001390c:	e3a02001 	mov	r2, #1
40013910:	e5c12009 	strb	r2, [r1, #9]
40013914:	e3a02000 	mov	r2, #0
40013918:	e5c12010 	strb	r2, [r1, #16]
4001391c:	e5c1200a 	strb	r2, [r1, #10]
40013920:	e3a020ff 	mov	r2, #255	; 0xff
40013924:	e5c1200b 	strb	r2, [r1, #11]
40013928:	e3a02000 	mov	r2, #0
4001392c:	e581200c 	str	r2, [r1, #12]
40013930:	e3a02004 	mov	r2, #4
40013934:	e5c12011 	strb	r2, [r1, #17]
40013938:	e3a02000 	mov	r2, #0
4001393c:	e5c12012 	strb	r2, [r1, #18]
40013940:	e12fff1e 	bx	lr
40013944:	400315d4 	.word	0x400315d4

Disassembly of section i.CyU3PSibThreadEntry:

40013948 <CyU3PSibThreadEntry>:
40013948:	e92d4010 	push	{r4, lr}
4001394c:	e3a00000 	mov	r0, #0
40013950:	ebffffe6 	bl	400138f0 <CyU3PSibInitIntfParams>
40013954:	e3a00001 	mov	r0, #1
40013958:	ebffffe4 	bl	400138f0 <CyU3PSibInitIntfParams>
4001395c:	e3a00003 	mov	r0, #3
40013960:	ebffff6c 	bl	40013718 <CyU3PSysModuleInitCompleteEvt>
40013964:	ea000009 	b	40013990 <CyU3PSibThreadEntry+0x48>
40013968:	e59f0024 	ldr	r0, [pc, #36]	; 40013994 <CyU3PSibThreadEntry+0x4c>
4001396c:	e5900000 	ldr	r0, [r0]
40013970:	e3500000 	cmp	r0, #0
40013974:	0a000003 	beq	40013988 <CyU3PSibThreadEntry+0x40>
40013978:	e59f0014 	ldr	r0, [pc, #20]	; 40013994 <CyU3PSibThreadEntry+0x4c>
4001397c:	e5900000 	ldr	r0, [r0]
40013980:	e12fff30 	blx	r0
40013984:	ea000001 	b	40013990 <CyU3PSibThreadEntry+0x48>
40013988:	e3a0000a 	mov	r0, #10
4001398c:	ebffd3f8 	bl	40008974 <_tx_thread_sleep>
40013990:	eafffff4 	b	40013968 <CyU3PSibThreadEntry+0x20>
40013994:	40030c94 	.word	0x40030c94

Disassembly of section i.CyU3PGpioSetClock:

40013998 <CyU3PGpioSetClock>:
40013998:	e92d4070 	push	{r4, r5, r6, lr}
4001399c:	e1a04000 	mov	r4, r0
400139a0:	e3a05000 	mov	r5, #0
400139a4:	e5d40000 	ldrb	r0, [r4]
400139a8:	e3500002 	cmp	r0, #2
400139ac:	ba000002 	blt	400139bc <CyU3PGpioSetClock+0x24>
400139b0:	e5d40000 	ldrb	r0, [r4]
400139b4:	e3500010 	cmp	r0, #16
400139b8:	da000001 	ble	400139c4 <CyU3PGpioSetClock+0x2c>
400139bc:	e3a00040 	mov	r0, #64	; 0x40
400139c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400139c4:	e5d40001 	ldrb	r0, [r4, #1]
400139c8:	e3500000 	cmp	r0, #0
400139cc:	1a000004 	bne	400139e4 <CyU3PGpioSetClock+0x4c>
400139d0:	e5940004 	ldr	r0, [r4, #4]
400139d4:	e3500000 	cmp	r0, #0
400139d8:	0a000009 	beq	40013a04 <CyU3PGpioSetClock+0x6c>
400139dc:	e3a00040 	mov	r0, #64	; 0x40
400139e0:	eafffff6 	b	400139c0 <CyU3PGpioSetClock+0x28>
400139e4:	e5d40001 	ldrb	r0, [r4, #1]
400139e8:	e3500002 	cmp	r0, #2
400139ec:	ba000002 	blt	400139fc <CyU3PGpioSetClock+0x64>
400139f0:	e5d40001 	ldrb	r0, [r4, #1]
400139f4:	e3500040 	cmp	r0, #64	; 0x40
400139f8:	da000001 	ble	40013a04 <CyU3PGpioSetClock+0x6c>
400139fc:	e3a00040 	mov	r0, #64	; 0x40
40013a00:	eaffffee 	b	400139c0 <CyU3PGpioSetClock+0x28>
40013a04:	e5d40009 	ldrb	r0, [r4, #9]
40013a08:	e3500004 	cmp	r0, #4
40013a0c:	ba000001 	blt	40013a18 <CyU3PGpioSetClock+0x80>
40013a10:	e3a00040 	mov	r0, #64	; 0x40
40013a14:	eaffffe9 	b	400139c0 <CyU3PGpioSetClock+0x28>
40013a18:	e5d40008 	ldrb	r0, [r4, #8]
40013a1c:	e3500004 	cmp	r0, #4
40013a20:	ba000001 	blt	40013a2c <CyU3PGpioSetClock+0x94>
40013a24:	e3a00040 	mov	r0, #64	; 0x40
40013a28:	eaffffe4 	b	400139c0 <CyU3PGpioSetClock+0x28>
40013a2c:	e5d40000 	ldrb	r0, [r4]
40013a30:	e2400001 	sub	r0, r0, #1
40013a34:	e5d41009 	ldrb	r1, [r4, #9]
40013a38:	e1800281 	orr	r0, r0, r1, lsl #5
40013a3c:	e5d41008 	ldrb	r1, [r4, #8]
40013a40:	e1800381 	orr	r0, r0, r1, lsl #7
40013a44:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013a48:	e5940004 	ldr	r0, [r4, #4]
40013a4c:	e3500000 	cmp	r0, #0
40013a50:	0a000000 	beq	40013a58 <CyU3PGpioSetClock+0xc0>
40013a54:	e3855010 	orr	r5, r5, #16
40013a58:	e59f0030 	ldr	r0, [pc, #48]	; 40013a90 <CyU3PGpioSetClock+0xf8>
40013a5c:	e5805018 	str	r5, [r0, #24]
40013a60:	e5d40001 	ldrb	r0, [r4, #1]
40013a64:	e3500000 	cmp	r0, #0
40013a68:	0a000006 	beq	40013a88 <CyU3PGpioSetClock+0xf0>
40013a6c:	e3a00001 	mov	r0, #1
40013a70:	ebfffe72 	bl	40013440 <CyU3PBusyWait>
40013a74:	e5d40001 	ldrb	r0, [r4, #1]
40013a78:	e2400001 	sub	r0, r0, #1
40013a7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013a80:	e59f1008 	ldr	r1, [pc, #8]	; 40013a90 <CyU3PGpioSetClock+0xf8>
40013a84:	e581001c 	str	r0, [r1, #28]
40013a88:	e3a00000 	mov	r0, #0
40013a8c:	eaffffcb 	b	400139c0 <CyU3PGpioSetClock+0x28>
40013a90:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013a94 <CyU3PI2cSetClock>:
40013a94:	e92d4070 	push	{r4, r5, r6, lr}
40013a98:	e1a05000 	mov	r5, r0
40013a9c:	e3a06000 	mov	r6, #0
40013aa0:	e3550000 	cmp	r5, #0
40013aa4:	1a000001 	bne	40013ab0 <CyU3PI2cSetClock+0x1c>
40013aa8:	e3a00040 	mov	r0, #64	; 0x40
40013aac:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ab0:	e0852105 	add	r2, r5, r5, lsl #2
40013ab4:	e1a01082 	lsl	r1, r2, #1
40013ab8:	e59f207c 	ldr	r2, [pc, #124]	; 40013b3c <CyU3PI2cSetClock+0xa8>
40013abc:	e5922000 	ldr	r2, [r2]
40013ac0:	e1a00122 	lsr	r0, r2, #2
40013ac4:	ebfff396 	bl	40010924 <__aeabi_uidivmod>
40013ac8:	e1a04000 	mov	r4, r0
40013acc:	e3140003 	tst	r4, #3
40013ad0:	1a000001 	bne	40013adc <CyU3PI2cSetClock+0x48>
40013ad4:	e1a04144 	asr	r4, r4, #2
40013ad8:	ea00000a 	b	40013b08 <CyU3PI2cSetClock+0x74>
40013adc:	e2040003 	and	r0, r4, #3
40013ae0:	e3500001 	cmp	r0, #1
40013ae4:	0a000002 	beq	40013af4 <CyU3PI2cSetClock+0x60>
40013ae8:	e2040003 	and	r0, r4, #3
40013aec:	e3500002 	cmp	r0, #2
40013af0:	1a000002 	bne	40013b00 <CyU3PI2cSetClock+0x6c>
40013af4:	e1a04144 	asr	r4, r4, #2
40013af8:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013afc:	ea000001 	b	40013b08 <CyU3PI2cSetClock+0x74>
40013b00:	e3a00001 	mov	r0, #1
40013b04:	e0804144 	add	r4, r0, r4, asr #2
40013b08:	e2444001 	sub	r4, r4, #1
40013b0c:	e3540001 	cmp	r4, #1
40013b10:	ba000001 	blt	40013b1c <CyU3PI2cSetClock+0x88>
40013b14:	e3540a01 	cmp	r4, #4096	; 0x1000
40013b18:	ba000001 	blt	40013b24 <CyU3PI2cSetClock+0x90>
40013b1c:	e3a00040 	mov	r0, #64	; 0x40
40013b20:	eaffffe1 	b	40013aac <CyU3PI2cSetClock+0x18>
40013b24:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013b28:	e1866000 	orr	r6, r6, r0
40013b2c:	e59f000c 	ldr	r0, [pc, #12]	; 40013b40 <CyU3PI2cSetClock+0xac>
40013b30:	e5806020 	str	r6, [r0, #32]
40013b34:	e3a00000 	mov	r0, #0
40013b38:	eaffffdb 	b	40013aac <CyU3PI2cSetClock+0x18>
40013b3c:	40030c54 	.word	0x40030c54
40013b40:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013b44 <CyU3PLppApplicationDefine>:
40013b44:	e92d4010 	push	{r4, lr}
40013b48:	e24dd020 	sub	sp, sp, #32
40013b4c:	e3a00b01 	mov	r0, #1024	; 0x400
40013b50:	ebffbec7 	bl	40003674 <CyU3PMemAlloc>
40013b54:	e1a04000 	mov	r4, r0
40013b58:	e3a030a8 	mov	r3, #168	; 0xa8
40013b5c:	e3a02001 	mov	r2, #1
40013b60:	e3a01000 	mov	r1, #0
40013b64:	e3a00004 	mov	r0, #4
40013b68:	e28dc00c 	add	ip, sp, #12
40013b6c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013b70:	e3a02b01 	mov	r2, #1024	; 0x400
40013b74:	e1a03001 	mov	r3, r1
40013b78:	e58d2004 	str	r2, [sp, #4]
40013b7c:	e59f2054 	ldr	r2, [pc, #84]	; 40013bd8 <CyU3PLppApplicationDefine+0x94>
40013b80:	e28f1054 	add	r1, pc, #84	; 0x54
40013b84:	e58d0008 	str	r0, [sp, #8]
40013b88:	e59f005c 	ldr	r0, [pc, #92]	; 40013bec <CyU3PLppApplicationDefine+0xa8>
40013b8c:	e58d4000 	str	r4, [sp]
40013b90:	ebffda4a 	bl	4000a4c0 <_txe_thread_create>
40013b94:	e3a02028 	mov	r2, #40	; 0x28
40013b98:	e3a01000 	mov	r1, #0
40013b9c:	e59f004c 	ldr	r0, [pc, #76]	; 40013bf0 <CyU3PLppApplicationDefine+0xac>
40013ba0:	ebffd7cb 	bl	40009ad4 <_txe_event_flags_create>
40013ba4:	e3a00040 	mov	r0, #64	; 0x40
40013ba8:	ebffbeb1 	bl	40003674 <CyU3PMemAlloc>
40013bac:	e1a04000 	mov	r4, r0
40013bb0:	e3a0303c 	mov	r3, #60	; 0x3c
40013bb4:	e3a02040 	mov	r2, #64	; 0x40
40013bb8:	e1cd20f0 	strd	r2, [sp]
40013bbc:	e1a03004 	mov	r3, r4
40013bc0:	e3a02005 	mov	r2, #5
40013bc4:	e3a01000 	mov	r1, #0
40013bc8:	e59f0024 	ldr	r0, [pc, #36]	; 40013bf4 <CyU3PLppApplicationDefine+0xb0>
40013bcc:	ebffd955 	bl	4000a128 <_txe_queue_create>
40013bd0:	e28dd020 	add	sp, sp, #32
40013bd4:	e8bd8010 	pop	{r4, pc}
40013bd8:	40013f38 	.word	0x40013f38
40013bdc:	4c5f3530 	.word	0x4c5f3530
40013be0:	545f5050 	.word	0x545f5050
40013be4:	41455248 	.word	0x41455248
40013be8:	00000044 	.word	0x00000044
40013bec:	40031638 	.word	0x40031638
40013bf0:	40031610 	.word	0x40031610
40013bf4:	400316e0 	.word	0x400316e0

Disassembly of section i.CyU3PLppEventSend:

40013bf8 <CyU3PLppEventSend>:
40013bf8:	e92d4070 	push	{r4, r5, r6, lr}
40013bfc:	e1a04000 	mov	r4, r0
40013c00:	e3a02000 	mov	r2, #0
40013c04:	e1a01004 	mov	r1, r4
40013c08:	e59f000c 	ldr	r0, [pc, #12]	; 40013c1c <CyU3PLppEventSend+0x24>
40013c0c:	ebffd850 	bl	40009d54 <_txe_event_flags_set>
40013c10:	e1a05000 	mov	r5, r0
40013c14:	e1a00005 	mov	r0, r5
40013c18:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c1c:	40031610 	.word	0x40031610

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40013c20 <CyU3PLppGpioBlockIsOn>:
40013c20:	e59f0004 	ldr	r0, [pc, #4]	; 40013c2c <CyU3PLppGpioBlockIsOn+0xc>
40013c24:	e5900000 	ldr	r0, [r0]
40013c28:	e12fff1e 	bx	lr
40013c2c:	40030c70 	.word	0x40030c70

Disassembly of section i.CyU3PLppInit:

40013c30 <CyU3PLppInit>:
40013c30:	e92d4070 	push	{r4, r5, r6, lr}
40013c34:	e1a04000 	mov	r4, r0
40013c38:	e1a05001 	mov	r5, r1
40013c3c:	e3a06000 	mov	r6, #0
40013c40:	e3a00001 	mov	r0, #1
40013c44:	e59f1174 	ldr	r1, [pc, #372]	; 40013dc0 <CyU3PLppInit+0x190>
40013c48:	e5d11000 	ldrb	r1, [r1]
40013c4c:	e1110410 	tst	r1, r0, lsl r4
40013c50:	0a000001 	beq	40013c5c <CyU3PLppInit+0x2c>
40013c54:	e3a00043 	mov	r0, #67	; 0x43
40013c58:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c5c:	e3540001 	cmp	r4, #1
40013c60:	1a000004 	bne	40013c78 <CyU3PLppInit+0x48>
40013c64:	eb000310 	bl	400148ac <CyFx3DevIsI2sSupported>
40013c68:	e3500000 	cmp	r0, #0
40013c6c:	1a000001 	bne	40013c78 <CyU3PLppInit+0x48>
40013c70:	e3a00046 	mov	r0, #70	; 0x46
40013c74:	eafffff7 	b	40013c58 <CyU3PLppInit+0x28>
40013c78:	e3540005 	cmp	r4, #5
40013c7c:	308ff104 	addcc	pc, pc, r4, lsl #2
40013c80:	ea000027 	b	40013d24 <CyU3PLppInit+0xf4>
40013c84:	ea000003 	b	40013c98 <CyU3PLppInit+0x68>
40013c88:	ea000009 	b	40013cb4 <CyU3PLppInit+0x84>
40013c8c:	ea00000f 	b	40013cd0 <CyU3PLppInit+0xa0>
40013c90:	ea000015 	b	40013cec <CyU3PLppInit+0xbc>
40013c94:	ea00001b 	b	40013d08 <CyU3PLppInit+0xd8>
40013c98:	e1a00000 	nop			; (mov r0, r0)
40013c9c:	e59f0120 	ldr	r0, [pc, #288]	; 40013dc4 <CyU3PLppInit+0x194>
40013ca0:	e5900020 	ldr	r0, [r0, #32]
40013ca4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013ca8:	0a000000 	beq	40013cb0 <CyU3PLppInit+0x80>
40013cac:	e3a06001 	mov	r6, #1
40013cb0:	ea00001b 	b	40013d24 <CyU3PLppInit+0xf4>
40013cb4:	e1a00000 	nop			; (mov r0, r0)
40013cb8:	e59f0104 	ldr	r0, [pc, #260]	; 40013dc4 <CyU3PLppInit+0x194>
40013cbc:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40013cc0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013cc4:	0a000000 	beq	40013ccc <CyU3PLppInit+0x9c>
40013cc8:	e3a06001 	mov	r6, #1
40013ccc:	ea000014 	b	40013d24 <CyU3PLppInit+0xf4>
40013cd0:	e1a00000 	nop			; (mov r0, r0)
40013cd4:	e59f00e8 	ldr	r0, [pc, #232]	; 40013dc4 <CyU3PLppInit+0x194>
40013cd8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40013cdc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013ce0:	0a000000 	beq	40013ce8 <CyU3PLppInit+0xb8>
40013ce4:	e3a06001 	mov	r6, #1
40013ce8:	ea00000d 	b	40013d24 <CyU3PLppInit+0xf4>
40013cec:	e1a00000 	nop			; (mov r0, r0)
40013cf0:	e59f00cc 	ldr	r0, [pc, #204]	; 40013dc4 <CyU3PLppInit+0x194>
40013cf4:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40013cf8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013cfc:	0a000000 	beq	40013d04 <CyU3PLppInit+0xd4>
40013d00:	e3a06001 	mov	r6, #1
40013d04:	ea000006 	b	40013d24 <CyU3PLppInit+0xf4>
40013d08:	e1a00000 	nop			; (mov r0, r0)
40013d0c:	e59f00b0 	ldr	r0, [pc, #176]	; 40013dc4 <CyU3PLppInit+0x194>
40013d10:	e5900018 	ldr	r0, [r0, #24]
40013d14:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013d18:	0a000000 	beq	40013d20 <CyU3PLppInit+0xf0>
40013d1c:	e3a06001 	mov	r6, #1
40013d20:	e1a00000 	nop			; (mov r0, r0)
40013d24:	e1a00000 	nop			; (mov r0, r0)
40013d28:	e3560000 	cmp	r6, #0
40013d2c:	1a000001 	bne	40013d38 <CyU3PLppInit+0x108>
40013d30:	e3a00047 	mov	r0, #71	; 0x47
40013d34:	eaffffc7 	b	40013c58 <CyU3PLppInit+0x28>
40013d38:	e59f0080 	ldr	r0, [pc, #128]	; 40013dc0 <CyU3PLppInit+0x190>
40013d3c:	e5d00000 	ldrb	r0, [r0]
40013d40:	e3500000 	cmp	r0, #0
40013d44:	1a000017 	bne	40013da8 <CyU3PLppInit+0x178>
40013d48:	e59f0078 	ldr	r0, [pc, #120]	; 40013dc8 <CyU3PLppInit+0x198>
40013d4c:	e5900000 	ldr	r0, [r0]
40013d50:	e3500000 	cmp	r0, #0
40013d54:	1a000010 	bne	40013d9c <CyU3PLppInit+0x16c>
40013d58:	e59f006c 	ldr	r0, [pc, #108]	; 40013dcc <CyU3PLppInit+0x19c>
40013d5c:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d60:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40013d64:	e59f1060 	ldr	r1, [pc, #96]	; 40013dcc <CyU3PLppInit+0x19c>
40013d68:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013d6c:	e3a0000a 	mov	r0, #10
40013d70:	ebfffdb2 	bl	40013440 <CyU3PBusyWait>
40013d74:	e59f0050 	ldr	r0, [pc, #80]	; 40013dcc <CyU3PLppInit+0x19c>
40013d78:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013d80:	e59f1044 	ldr	r1, [pc, #68]	; 40013dcc <CyU3PLppInit+0x19c>
40013d84:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013d88:	e1a00000 	nop			; (mov r0, r0)
40013d8c:	e59f0038 	ldr	r0, [pc, #56]	; 40013dcc <CyU3PLppInit+0x19c>
40013d90:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d94:	e3100001 	tst	r0, #1
40013d98:	0afffffb 	beq	40013d8c <CyU3PLppInit+0x15c>
40013d9c:	eb000051 	bl	40013ee8 <CyU3PLppSocketInit>
40013da0:	e3a00014 	mov	r0, #20
40013da4:	eb003828 	bl	40021e4c <CyU3PVicEnableInt>
40013da8:	e1a02005 	mov	r2, r5
40013dac:	e3a01001 	mov	r1, #1
40013db0:	e1a00004 	mov	r0, r4
40013db4:	eb0000f1 	bl	40014180 <CyU3UpdateLppActiveInfo>
40013db8:	e3a00000 	mov	r0, #0
40013dbc:	eaffffa5 	b	40013c58 <CyU3PLppInit+0x28>
40013dc0:	40030c98 	.word	0x40030c98
40013dc4:	e0052000 	.word	0xe0052000
40013dc8:	40030c70 	.word	0x40030c70
40013dcc:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40013dd0 <CyU3PLppRestoreState>:
40013dd0:	e92d4070 	push	{r4, r5, r6, lr}
40013dd4:	e1a04000 	mov	r4, r0
40013dd8:	e3a00000 	mov	r0, #0
40013ddc:	e59f10ec 	ldr	r1, [pc, #236]	; 40013ed0 <CyU3PLppRestoreState+0x100>
40013de0:	e5c10000 	strb	r0, [r1]
40013de4:	e5940000 	ldr	r0, [r4]
40013de8:	e59f10e4 	ldr	r1, [pc, #228]	; 40013ed4 <CyU3PLppRestoreState+0x104>
40013dec:	e5810018 	str	r0, [r1, #24]
40013df0:	e3a00001 	mov	r0, #1
40013df4:	ebfffd91 	bl	40013440 <CyU3PBusyWait>
40013df8:	e5940004 	ldr	r0, [r4, #4]
40013dfc:	e59f10d0 	ldr	r1, [pc, #208]	; 40013ed4 <CyU3PLppRestoreState+0x104>
40013e00:	e581001c 	str	r0, [r1, #28]
40013e04:	e3a00001 	mov	r0, #1
40013e08:	ebfffd8c 	bl	40013440 <CyU3PBusyWait>
40013e0c:	e5940008 	ldr	r0, [r4, #8]
40013e10:	e59f10c0 	ldr	r1, [pc, #192]	; 40013ed8 <CyU3PLppRestoreState+0x108>
40013e14:	e581000c 	str	r0, [r1, #12]
40013e18:	e3a00001 	mov	r0, #1
40013e1c:	ebfffd87 	bl	40013440 <CyU3PBusyWait>
40013e20:	e594000c 	ldr	r0, [r4, #12]
40013e24:	e59f10ac 	ldr	r1, [pc, #172]	; 40013ed8 <CyU3PLppRestoreState+0x108>
40013e28:	e5810010 	str	r0, [r1, #16]
40013e2c:	e3a00001 	mov	r0, #1
40013e30:	ebfffd82 	bl	40013440 <CyU3PBusyWait>
40013e34:	e5940010 	ldr	r0, [r4, #16]
40013e38:	e59f1098 	ldr	r1, [pc, #152]	; 40013ed8 <CyU3PLppRestoreState+0x108>
40013e3c:	e5810008 	str	r0, [r1, #8]
40013e40:	e3a00001 	mov	r0, #1
40013e44:	ebfffd7d 	bl	40013440 <CyU3PBusyWait>
40013e48:	e3a00004 	mov	r0, #4
40013e4c:	e5941014 	ldr	r1, [r4, #20]
40013e50:	ebffff76 	bl	40013c30 <CyU3PLppInit>
40013e54:	e3a00001 	mov	r0, #1
40013e58:	ebfffd78 	bl	40013440 <CyU3PBusyWait>
40013e5c:	e59f0078 	ldr	r0, [pc, #120]	; 40013edc <CyU3PLppRestoreState+0x10c>
40013e60:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013e64:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013e68:	e59f106c 	ldr	r1, [pc, #108]	; 40013edc <CyU3PLppRestoreState+0x10c>
40013e6c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40013e70:	e3a0000a 	mov	r0, #10
40013e74:	ebfffd71 	bl	40013440 <CyU3PBusyWait>
40013e78:	e1a00000 	nop			; (mov r0, r0)
40013e7c:	e59f0058 	ldr	r0, [pc, #88]	; 40013edc <CyU3PLppRestoreState+0x10c>
40013e80:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013e84:	e3100001 	tst	r0, #1
40013e88:	0afffffb 	beq	40013e7c <CyU3PLppRestoreState+0xac>
40013e8c:	e3a05000 	mov	r5, #0
40013e90:	ea000006 	b	40013eb0 <CyU3PLppRestoreState+0xe0>
40013e94:	e2850006 	add	r0, r5, #6
40013e98:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40013e9c:	e59f103c 	ldr	r1, [pc, #60]	; 40013ee0 <CyU3PLppRestoreState+0x110>
40013ea0:	e7810105 	str	r0, [r1, r5, lsl #2]
40013ea4:	e3a00001 	mov	r0, #1
40013ea8:	ebfffd64 	bl	40013440 <CyU3PBusyWait>
40013eac:	e2855001 	add	r5, r5, #1
40013eb0:	e355003d 	cmp	r5, #61	; 0x3d
40013eb4:	3afffff6 	bcc	40013e94 <CyU3PLppRestoreState+0xc4>
40013eb8:	e59f0024 	ldr	r0, [pc, #36]	; 40013ee4 <CyU3PLppRestoreState+0x114>
40013ebc:	e5900000 	ldr	r0, [r0]
40013ec0:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40013ec4:	e59f1018 	ldr	r1, [pc, #24]	; 40013ee4 <CyU3PLppRestoreState+0x114>
40013ec8:	e5810000 	str	r0, [r1]
40013ecc:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ed0:	40030c98 	.word	0x40030c98
40013ed4:	e0052000 	.word	0xe0052000
40013ed8:	e0051000 	.word	0xe0051000
40013edc:	e0001000 	.word	0xe0001000
40013ee0:	e0001100 	.word	0xe0001100
40013ee4:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40013ee8 <CyU3PLppSocketInit>:
40013ee8:	e3a00000 	mov	r0, #0
40013eec:	ea00000d 	b	40013f28 <CyU3PLppSocketInit+0x40>
40013ef0:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40013ef4:	e59f2038 	ldr	r2, [pc, #56]	; 40013f34 <CyU3PLppSocketInit+0x4c>
40013ef8:	e0822380 	add	r2, r2, r0, lsl #7
40013efc:	e582100c 	str	r1, [r2, #12]
40013f00:	e3e01000 	mvn	r1, #0
40013f04:	e59f2028 	ldr	r2, [pc, #40]	; 40013f34 <CyU3PLppSocketInit+0x4c>
40013f08:	e0822380 	add	r2, r2, r0, lsl #7
40013f0c:	e5821010 	str	r1, [r2, #16]
40013f10:	e3a01000 	mov	r1, #0
40013f14:	e59f2018 	ldr	r2, [pc, #24]	; 40013f34 <CyU3PLppSocketInit+0x4c>
40013f18:	e0822380 	add	r2, r2, r0, lsl #7
40013f1c:	e5821014 	str	r1, [r2, #20]
40013f20:	e2801001 	add	r1, r0, #1
40013f24:	e20100ff 	and	r0, r1, #255	; 0xff
40013f28:	e3500008 	cmp	r0, #8
40013f2c:	baffffef 	blt	40013ef0 <CyU3PLppSocketInit+0x8>
40013f30:	e12fff1e 	bx	lr
40013f34:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40013f38 <CyU3PLppThreadEntry>:
40013f38:	e92d4010 	push	{r4, lr}
40013f3c:	e24dd020 	sub	sp, sp, #32
40013f40:	e3a00006 	mov	r0, #6
40013f44:	ebfffdf3 	bl	40013718 <CyU3PSysModuleInitCompleteEvt>
40013f48:	e3a000f1 	mov	r0, #241	; 0xf1
40013f4c:	e59f1144 	ldr	r1, [pc, #324]	; 40014098 <CyU3PLppThreadEntry+0x160>
40013f50:	e5810000 	str	r0, [r1]
40013f54:	e1a00000 	nop			; (mov r0, r0)
40013f58:	e3e03000 	mvn	r3, #0
40013f5c:	e58d3000 	str	r3, [sp]
40013f60:	e28d301c 	add	r3, sp, #28
40013f64:	e3a02001 	mov	r2, #1
40013f68:	e59f0128 	ldr	r0, [pc, #296]	; 40014098 <CyU3PLppThreadEntry+0x160>
40013f6c:	e5901000 	ldr	r1, [r0]
40013f70:	e59f0124 	ldr	r0, [pc, #292]	; 4001409c <CyU3PLppThreadEntry+0x164>
40013f74:	ebffd746 	bl	40009c94 <_txe_event_flags_get>
40013f78:	e1a04000 	mov	r4, r0
40013f7c:	e59f1114 	ldr	r1, [pc, #276]	; 40014098 <CyU3PLppThreadEntry+0x160>
40013f80:	e59d001c 	ldr	r0, [sp, #28]
40013f84:	e5911000 	ldr	r1, [r1]
40013f88:	e0000001 	and	r0, r0, r1
40013f8c:	e58d001c 	str	r0, [sp, #28]
40013f90:	e3540000 	cmp	r4, #0
40013f94:	0a000000 	beq	40013f9c <CyU3PLppThreadEntry+0x64>
40013f98:	eaffffee 	b	40013f58 <CyU3PLppThreadEntry+0x20>
40013f9c:	ea000009 	b	40013fc8 <CyU3PLppThreadEntry+0x90>
40013fa0:	e3a02000 	mov	r2, #0
40013fa4:	e28d1008 	add	r1, sp, #8
40013fa8:	e59f00f0 	ldr	r0, [pc, #240]	; 400140a0 <CyU3PLppThreadEntry+0x168>
40013fac:	ebffd8f3 	bl	4000a380 <_txe_queue_receive>
40013fb0:	e1a04000 	mov	r4, r0
40013fb4:	e3540000 	cmp	r4, #0
40013fb8:	0a000002 	beq	40013fc8 <CyU3PLppThreadEntry+0x90>
40013fbc:	e59d001c 	ldr	r0, [sp, #28]
40013fc0:	e3c00001 	bic	r0, r0, #1
40013fc4:	e58d001c 	str	r0, [sp, #28]
40013fc8:	e59d001c 	ldr	r0, [sp, #28]
40013fcc:	e3100001 	tst	r0, #1
40013fd0:	1afffff2 	bne	40013fa0 <CyU3PLppThreadEntry+0x68>
40013fd4:	e59d001c 	ldr	r0, [sp, #28]
40013fd8:	e3100020 	tst	r0, #32
40013fdc:	0a000008 	beq	40014004 <CyU3PLppThreadEntry+0xcc>
40013fe0:	e59f00bc 	ldr	r0, [pc, #188]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40013fe4:	e5900000 	ldr	r0, [r0]
40013fe8:	e3500000 	cmp	r0, #0
40013fec:	0a000002 	beq	40013ffc <CyU3PLppThreadEntry+0xc4>
40013ff0:	e59f10ac 	ldr	r1, [pc, #172]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40013ff4:	e5910000 	ldr	r0, [r1]
40013ff8:	e12fff30 	blx	r0
40013ffc:	e3a0000f 	mov	r0, #15
40014000:	eb003791 	bl	40021e4c <CyU3PVicEnableInt>
40014004:	e59d001c 	ldr	r0, [sp, #28]
40014008:	e3100010 	tst	r0, #16
4001400c:	0a000008 	beq	40014034 <CyU3PLppThreadEntry+0xfc>
40014010:	e59f008c 	ldr	r0, [pc, #140]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40014014:	e5900004 	ldr	r0, [r0, #4]
40014018:	e3500000 	cmp	r0, #0
4001401c:	0a000002 	beq	4001402c <CyU3PLppThreadEntry+0xf4>
40014020:	e59f107c 	ldr	r1, [pc, #124]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40014024:	e5910004 	ldr	r0, [r1, #4]
40014028:	e12fff30 	blx	r0
4001402c:	e3a00010 	mov	r0, #16
40014030:	eb003785 	bl	40021e4c <CyU3PVicEnableInt>
40014034:	e59d001c 	ldr	r0, [sp, #28]
40014038:	e3100080 	tst	r0, #128	; 0x80
4001403c:	0a000008 	beq	40014064 <CyU3PLppThreadEntry+0x12c>
40014040:	e59f005c 	ldr	r0, [pc, #92]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40014044:	e5900008 	ldr	r0, [r0, #8]
40014048:	e3500000 	cmp	r0, #0
4001404c:	0a000002 	beq	4001405c <CyU3PLppThreadEntry+0x124>
40014050:	e59f104c 	ldr	r1, [pc, #76]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40014054:	e5910008 	ldr	r0, [r1, #8]
40014058:	e12fff30 	blx	r0
4001405c:	e3a00011 	mov	r0, #17
40014060:	eb003779 	bl	40021e4c <CyU3PVicEnableInt>
40014064:	e59d001c 	ldr	r0, [sp, #28]
40014068:	e3100040 	tst	r0, #64	; 0x40
4001406c:	0a000008 	beq	40014094 <CyU3PLppThreadEntry+0x15c>
40014070:	e59f002c 	ldr	r0, [pc, #44]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40014074:	e590000c 	ldr	r0, [r0, #12]
40014078:	e3500000 	cmp	r0, #0
4001407c:	0a000002 	beq	4001408c <CyU3PLppThreadEntry+0x154>
40014080:	e59f101c 	ldr	r1, [pc, #28]	; 400140a4 <CyU3PLppThreadEntry+0x16c>
40014084:	e591000c 	ldr	r0, [r1, #12]
40014088:	e12fff30 	blx	r0
4001408c:	e3a00012 	mov	r0, #18
40014090:	eb00376d 	bl	40021e4c <CyU3PVicEnableInt>
40014094:	eaffffaf 	b	40013f58 <CyU3PLppThreadEntry+0x20>
40014098:	40030c9c 	.word	0x40030c9c
4001409c:	40031610 	.word	0x40031610
400140a0:	400316e0 	.word	0x400316e0
400140a4:	400315fc 	.word	0x400315fc

Disassembly of section i.CyU3PUartSetClock:

400140a8 <CyU3PUartSetClock>:
400140a8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400140ac:	e1a04000 	mov	r4, r0
400140b0:	e3a06000 	mov	r6, #0
400140b4:	e59f00bc 	ldr	r0, [pc, #188]	; 40014178 <CyU3PUartSetClock+0xd0>
400140b8:	e5907000 	ldr	r7, [r0]
400140bc:	e3540000 	cmp	r4, #0
400140c0:	1a000001 	bne	400140cc <CyU3PUartSetClock+0x24>
400140c4:	e3a00040 	mov	r0, #64	; 0x40
400140c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400140cc:	e3540f96 	cmp	r4, #600	; 0x258
400140d0:	2a000002 	bcs	400140e0 <CyU3PUartSetClock+0x38>
400140d4:	e59f009c 	ldr	r0, [pc, #156]	; 40014178 <CyU3PUartSetClock+0xd0>
400140d8:	e5900000 	ldr	r0, [r0]
400140dc:	e1a07220 	lsr	r7, r0, #4
400140e0:	e1a01204 	lsl	r1, r4, #4
400140e4:	e1a00107 	lsl	r0, r7, #2
400140e8:	ebfff20d 	bl	40010924 <__aeabi_uidivmod>
400140ec:	e1a05000 	mov	r5, r0
400140f0:	e3150003 	tst	r5, #3
400140f4:	1a000001 	bne	40014100 <CyU3PUartSetClock+0x58>
400140f8:	e1a05145 	asr	r5, r5, #2
400140fc:	ea00000a 	b	4001412c <CyU3PUartSetClock+0x84>
40014100:	e2050003 	and	r0, r5, #3
40014104:	e3500001 	cmp	r0, #1
40014108:	0a000002 	beq	40014118 <CyU3PUartSetClock+0x70>
4001410c:	e2050003 	and	r0, r5, #3
40014110:	e3500002 	cmp	r0, #2
40014114:	1a000002 	bne	40014124 <CyU3PUartSetClock+0x7c>
40014118:	e1a05145 	asr	r5, r5, #2
4001411c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40014120:	ea000001 	b	4001412c <CyU3PUartSetClock+0x84>
40014124:	e3a00001 	mov	r0, #1
40014128:	e0805145 	add	r5, r0, r5, asr #2
4001412c:	e2455001 	sub	r5, r5, #1
40014130:	e3550001 	cmp	r5, #1
40014134:	ba000001 	blt	40014140 <CyU3PUartSetClock+0x98>
40014138:	e3550801 	cmp	r5, #65536	; 0x10000
4001413c:	ba000001 	blt	40014148 <CyU3PUartSetClock+0xa0>
40014140:	e3a00040 	mov	r0, #64	; 0x40
40014144:	eaffffdf 	b	400140c8 <CyU3PUartSetClock+0x20>
40014148:	e3540f96 	cmp	r4, #600	; 0x258
4001414c:	2a000002 	bcs	4001415c <CyU3PUartSetClock+0xb4>
40014150:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014154:	e1866000 	orr	r6, r6, r0
40014158:	ea000002 	b	40014168 <CyU3PUartSetClock+0xc0>
4001415c:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014160:	e3800806 	orr	r0, r0, #393216	; 0x60000
40014164:	e1866000 	orr	r6, r6, r0
40014168:	e59f000c 	ldr	r0, [pc, #12]	; 4001417c <CyU3PUartSetClock+0xd4>
4001416c:	e5806024 	str	r6, [r0, #36]	; 0x24
40014170:	e3a00000 	mov	r0, #0
40014174:	eaffffd3 	b	400140c8 <CyU3PUartSetClock+0x20>
40014178:	40030c54 	.word	0x40030c54
4001417c:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

40014180 <CyU3UpdateLppActiveInfo>:
40014180:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014184:	e1a04000 	mov	r4, r0
40014188:	e1a05001 	mov	r5, r1
4001418c:	e1a06002 	mov	r6, r2
40014190:	e3a00001 	mov	r0, #1
40014194:	e1a00410 	lsl	r0, r0, r4
40014198:	e20070ff 	and	r7, r0, #255	; 0xff
4001419c:	e284000f 	add	r0, r4, #15
400141a0:	e20080ff 	and	r8, r0, #255	; 0xff
400141a4:	e59f0050 	ldr	r0, [pc, #80]	; 400141fc <CyU3UpdateLppActiveInfo+0x7c>
400141a8:	e7806104 	str	r6, [r0, r4, lsl #2]
400141ac:	e3550000 	cmp	r5, #0
400141b0:	0a000009 	beq	400141dc <CyU3UpdateLppActiveInfo+0x5c>
400141b4:	e3560000 	cmp	r6, #0
400141b8:	0a000001 	beq	400141c4 <CyU3UpdateLppActiveInfo+0x44>
400141bc:	e1a00008 	mov	r0, r8
400141c0:	eb003721 	bl	40021e4c <CyU3PVicEnableInt>
400141c4:	e59f0034 	ldr	r0, [pc, #52]	; 40014200 <CyU3UpdateLppActiveInfo+0x80>
400141c8:	e5d00000 	ldrb	r0, [r0]
400141cc:	e1800007 	orr	r0, r0, r7
400141d0:	e59f1028 	ldr	r1, [pc, #40]	; 40014200 <CyU3UpdateLppActiveInfo+0x80>
400141d4:	e5c10000 	strb	r0, [r1]
400141d8:	ea000006 	b	400141f8 <CyU3UpdateLppActiveInfo+0x78>
400141dc:	e59f001c 	ldr	r0, [pc, #28]	; 40014200 <CyU3UpdateLppActiveInfo+0x80>
400141e0:	e5d00000 	ldrb	r0, [r0]
400141e4:	e1c00007 	bic	r0, r0, r7
400141e8:	e59f1010 	ldr	r1, [pc, #16]	; 40014200 <CyU3UpdateLppActiveInfo+0x80>
400141ec:	e5c10000 	strb	r0, [r1]
400141f0:	e1a00008 	mov	r0, r8
400141f4:	eb00370f 	bl	40021e38 <CyU3PVicDisableInt>
400141f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400141fc:	400315fc 	.word	0x400315fc
40014200:	40030c98 	.word	0x40030c98

Disassembly of section i.CyFx3DevClearSwInterrupt:

40014204 <CyFx3DevClearSwInterrupt>:
40014204:	e59f000c 	ldr	r0, [pc, #12]	; 40014218 <CyFx3DevClearSwInterrupt+0x14>
40014208:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
4001420c:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
40014210:	e580104c 	str	r1, [r0, #76]	; 0x4c
40014214:	e12fff1e 	bx	lr
40014218:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

4001421c <CyFx3DevIOConfigure>:
4001421c:	e92d4030 	push	{r4, r5, lr}
40014220:	e1b04000 	movs	r4, r0
40014224:	e24dd024 	sub	sp, sp, #36	; 0x24
40014228:	0a000045 	beq	40014344 <CyFx3DevIOConfigure+0x128>
4001422c:	eb00017b 	bl	40014820 <CyFx3DevIsGpif32Supported>
40014230:	e3500000 	cmp	r0, #0
40014234:	e3a05000 	mov	r5, #0
40014238:	05845000 	streq	r5, [r4]
4001423c:	eb0001ae 	bl	400148fc <CyFx3DevIsSib0Supported>
40014240:	e3500000 	cmp	r0, #0
40014244:	05c45014 	strbeq	r5, [r4, #20]
40014248:	eb0001b5 	bl	40014924 <CyFx3DevIsSib1Supported>
4001424c:	e3500000 	cmp	r0, #0
40014250:	05c45015 	strbeq	r5, [r4, #21]
40014254:	eb000194 	bl	400148ac <CyFx3DevIsI2sSupported>
40014258:	e3500000 	cmp	r0, #0
4001425c:	1a000002 	bne	4001426c <CyFx3DevIOConfigure+0x50>
40014260:	e594000c 	ldr	r0, [r4, #12]
40014264:	e3500000 	cmp	r0, #0
40014268:	1a000035 	bne	40014344 <CyFx3DevIOConfigure+0x128>
4001426c:	e5940000 	ldr	r0, [r4]
40014270:	e3500000 	cmp	r0, #0
40014274:	0a000009 	beq	400142a0 <CyFx3DevIOConfigure+0x84>
40014278:	e5d40016 	ldrb	r0, [r4, #22]
4001427c:	e3500000 	cmp	r0, #0
40014280:	05d40014 	ldrbeq	r0, [r4, #20]
40014284:	03500000 	cmpeq	r0, #0
40014288:	05d40015 	ldrbeq	r0, [r4, #21]
4001428c:	03500000 	cmpeq	r0, #0
40014290:	1a00002b 	bne	40014344 <CyFx3DevIOConfigure+0x128>
40014294:	e3a00002 	mov	r0, #2
40014298:	e5cd0000 	strb	r0, [sp]
4001429c:	ea000022 	b	4001432c <CyFx3DevIOConfigure+0x110>
400142a0:	e5d40014 	ldrb	r0, [r4, #20]
400142a4:	e3a02003 	mov	r2, #3
400142a8:	e3a03001 	mov	r3, #1
400142ac:	e3500000 	cmp	r0, #0
400142b0:	05cd2000 	strbeq	r2, [sp]
400142b4:	0a000004 	beq	400142cc <CyFx3DevIOConfigure+0xb0>
400142b8:	e3500001 	cmp	r0, #1
400142bc:	05cd3000 	strbeq	r3, [sp]
400142c0:	0a000001 	beq	400142cc <CyFx3DevIOConfigure+0xb0>
400142c4:	e3500002 	cmp	r0, #2
400142c8:	05cd5000 	strbeq	r5, [sp]
400142cc:	e5d41015 	ldrb	r1, [r4, #21]
400142d0:	e5d40016 	ldrb	r0, [r4, #22]
400142d4:	e3510002 	cmp	r1, #2
400142d8:	1a000009 	bne	40014304 <CyFx3DevIOConfigure+0xe8>
400142dc:	e3500004 	cmp	r0, #4
400142e0:	05940004 	ldreq	r0, [r4, #4]
400142e4:	03500000 	cmpeq	r0, #0
400142e8:	05940010 	ldreq	r0, [r4, #16]
400142ec:	03500000 	cmpeq	r0, #0
400142f0:	0594000c 	ldreq	r0, [r4, #12]
400142f4:	03500000 	cmpeq	r0, #0
400142f8:	05cd5001 	strbeq	r5, [sp, #1]
400142fc:	0a000013 	beq	40014350 <CyFx3DevIOConfigure+0x134>
40014300:	ea00000f 	b	40014344 <CyFx3DevIOConfigure+0x128>
40014304:	e3500000 	cmp	r0, #0
40014308:	0a000009 	beq	40014334 <CyFx3DevIOConfigure+0x118>
4001430c:	e3500001 	cmp	r0, #1
40014310:	13500002 	cmpne	r0, #2
40014314:	13500003 	cmpne	r0, #3
40014318:	1a000009 	bne	40014344 <CyFx3DevIOConfigure+0x128>
4001431c:	e3510001 	cmp	r1, #1
40014320:	05cd3001 	strbeq	r3, [sp, #1]
40014324:	0a000009 	beq	40014350 <CyFx3DevIOConfigure+0x134>
40014328:	e3a00004 	mov	r0, #4
4001432c:	e5cd0001 	strb	r0, [sp, #1]
40014330:	ea000006 	b	40014350 <CyFx3DevIOConfigure+0x134>
40014334:	e5cd2001 	strb	r2, [sp, #1]
40014338:	e5d40015 	ldrb	r0, [r4, #21]
4001433c:	e3500000 	cmp	r0, #0
40014340:	0a000002 	beq	40014350 <CyFx3DevIOConfigure+0x134>
40014344:	e3a00000 	mov	r0, #0
40014348:	e28dd024 	add	sp, sp, #36	; 0x24
4001434c:	e8bd8030 	pop	{r4, r5, pc}
40014350:	e5940004 	ldr	r0, [r4, #4]
40014354:	e58d0004 	str	r0, [sp, #4]
40014358:	e594000c 	ldr	r0, [r4, #12]
4001435c:	e58d000c 	str	r0, [sp, #12]
40014360:	e5940010 	ldr	r0, [r4, #16]
40014364:	e58d0010 	str	r0, [sp, #16]
40014368:	e5940008 	ldr	r0, [r4, #8]
4001436c:	e58d0008 	str	r0, [sp, #8]
40014370:	e5940018 	ldr	r0, [r4, #24]
40014374:	e58d0014 	str	r0, [sp, #20]
40014378:	e594001c 	ldr	r0, [r4, #28]
4001437c:	e58d0018 	str	r0, [sp, #24]
40014380:	e5940020 	ldr	r0, [r4, #32]
40014384:	e58d001c 	str	r0, [sp, #28]
40014388:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4001438c:	e58d0020 	str	r0, [sp, #32]
40014390:	e1a0000d 	mov	r0, sp
40014394:	eb000054 	bl	400144ec <CyFx3DevIOSetConfig>
40014398:	eaffffea 	b	40014348 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

4001439c <CyFx3DevIOIsGpio>:
4001439c:	e350003d 	cmp	r0, #61	; 0x3d
400143a0:	e3a02000 	mov	r2, #0
400143a4:	23a00000 	movcs	r0, #0
400143a8:	212fff1e 	bxcs	lr
400143ac:	e3500020 	cmp	r0, #32
400143b0:	83a02001 	movhi	r2, #1
400143b4:	82400020 	subhi	r0, r0, #32
400143b8:	e59fc018 	ldr	ip, [pc, #24]	; 400143d8 <CyFx3DevIOIsGpio+0x3c>
400143bc:	e3510000 	cmp	r1, #0
400143c0:	e08c1102 	add	r1, ip, r2, lsl #2
400143c4:	0591101c 	ldreq	r1, [r1, #28]
400143c8:	15911014 	ldrne	r1, [r1, #20]
400143cc:	e3a03001 	mov	r3, #1
400143d0:	e0010013 	and	r0, r1, r3, lsl r0
400143d4:	e12fff1e 	bx	lr
400143d8:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

400143dc <CyFx3DevIOIsI2cConfigured>:
400143dc:	e59f0004 	ldr	r0, [pc, #4]	; 400143e8 <CyFx3DevIOIsI2cConfigured+0xc>
400143e0:	e5900008 	ldr	r0, [r0, #8]
400143e4:	e12fff1e 	bx	lr
400143e8:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

400143ec <CyFx3DevIOIsI2sConfigured>:
400143ec:	e59f0004 	ldr	r0, [pc, #4]	; 400143f8 <CyFx3DevIOIsI2sConfigured+0xc>
400143f0:	e590000c 	ldr	r0, [r0, #12]
400143f4:	e12fff1e 	bx	lr
400143f8:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

400143fc <CyFx3DevIOIsSpiConfigured>:
400143fc:	e59f0004 	ldr	r0, [pc, #4]	; 40014408 <CyFx3DevIOIsSpiConfigured+0xc>
40014400:	e5900010 	ldr	r0, [r0, #16]
40014404:	e12fff1e 	bx	lr
40014408:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsUartConfigured:

4001440c <CyFx3DevIOIsUartConfigured>:
4001440c:	e59f0004 	ldr	r0, [pc, #4]	; 40014418 <CyFx3DevIOIsUartConfigured+0xc>
40014410:	e5900004 	ldr	r0, [r0, #4]
40014414:	e12fff1e 	bx	lr
40014418:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOSelectGpio:

4001441c <CyFx3DevIOSelectGpio>:
4001441c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014420:	e350003d 	cmp	r0, #61	; 0x3d
40014424:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
40014428:	e3a08001 	mov	r8, #1
4001442c:	e59f30b0 	ldr	r3, [pc, #176]	; 400144e4 <CyFx3DevIOSelectGpio+0xc8>
40014430:	e1a0c018 	lsl	ip, r8, r0
40014434:	e2837014 	add	r7, r3, #20
40014438:	e89700d0 	ldm	r7, {r4, r6, r7}
4001443c:	e5935020 	ldr	r5, [r3, #32]
40014440:	e3510000 	cmp	r1, #0
40014444:	e240e020 	sub	lr, r0, #32
40014448:	0a00000f 	beq	4001448c <CyFx3DevIOSelectGpio+0x70>
4001444c:	e3500020 	cmp	r0, #32
40014450:	2a000005 	bcs	4001446c <CyFx3DevIOSelectGpio+0x50>
40014454:	e3520000 	cmp	r2, #0
40014458:	0187000c 	orreq	r0, r7, ip
4001445c:	0a00000f 	beq	400144a0 <CyFx3DevIOSelectGpio+0x84>
40014460:	e184000c 	orr	r0, r4, ip
40014464:	e5830014 	str	r0, [r3, #20]
40014468:	ea000013 	b	400144bc <CyFx3DevIOSelectGpio+0xa0>
4001446c:	e3520000 	cmp	r2, #0
40014470:	e20e00ff 	and	r0, lr, #255	; 0xff
40014474:	e1a00018 	lsl	r0, r8, r0
40014478:	01800005 	orreq	r0, r0, r5
4001447c:	0a00000d 	beq	400144b8 <CyFx3DevIOSelectGpio+0x9c>
40014480:	e1800006 	orr	r0, r0, r6
40014484:	e5830018 	str	r0, [r3, #24]
40014488:	ea00000b 	b	400144bc <CyFx3DevIOSelectGpio+0xa0>
4001448c:	e3500020 	cmp	r0, #32
40014490:	2a000004 	bcs	400144a8 <CyFx3DevIOSelectGpio+0x8c>
40014494:	e1c4000c 	bic	r0, r4, ip
40014498:	e5830014 	str	r0, [r3, #20]
4001449c:	e1c7000c 	bic	r0, r7, ip
400144a0:	e583001c 	str	r0, [r3, #28]
400144a4:	ea000004 	b	400144bc <CyFx3DevIOSelectGpio+0xa0>
400144a8:	e1a00e18 	lsl	r0, r8, lr
400144ac:	e1c61000 	bic	r1, r6, r0
400144b0:	e1c50000 	bic	r0, r5, r0
400144b4:	e5831018 	str	r1, [r3, #24]
400144b8:	e5830020 	str	r0, [r3, #32]
400144bc:	e5931014 	ldr	r1, [r3, #20]
400144c0:	e59f0020 	ldr	r0, [pc, #32]	; 400144e8 <CyFx3DevIOSelectGpio+0xcc>
400144c4:	e580100c 	str	r1, [r0, #12]
400144c8:	e5931018 	ldr	r1, [r3, #24]
400144cc:	e5801010 	str	r1, [r0, #16]
400144d0:	e593101c 	ldr	r1, [r3, #28]
400144d4:	e5801014 	str	r1, [r0, #20]
400144d8:	e5931020 	ldr	r1, [r3, #32]
400144dc:	e5801018 	str	r1, [r0, #24]
400144e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400144e4:	40030cb4 	.word	0x40030cb4
400144e8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

400144ec <CyFx3DevIOSetConfig>:
400144ec:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400144f0:	e59f8208 	ldr	r8, [pc, #520]	; 40014700 <CyFx3DevIOSetConfig+0x214>
400144f4:	e1a05000 	mov	r5, r0
400144f8:	e5980008 	ldr	r0, [r8, #8]
400144fc:	e59f7200 	ldr	r7, [pc, #512]	; 40014704 <CyFx3DevIOSetConfig+0x218>
40014500:	e2006002 	and	r6, r0, #2
40014504:	e5d50000 	ldrb	r0, [r5]
40014508:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
4001450c:	e3500000 	cmp	r0, #0
40014510:	01c44944 	biceq	r4, r4, r4, asr #18
40014514:	0a000008 	beq	4001453c <CyFx3DevIOSetConfig+0x50>
40014518:	e3500001 	cmp	r0, #1
4001451c:	059f41e4 	ldreq	r4, [pc, #484]	; 40014708 <CyFx3DevIOSetConfig+0x21c>
40014520:	0a000005 	beq	4001453c <CyFx3DevIOSetConfig+0x50>
40014524:	e3500002 	cmp	r0, #2
40014528:	059f41dc 	ldreq	r4, [pc, #476]	; 4001470c <CyFx3DevIOSetConfig+0x220>
4001452c:	0a000001 	beq	40014538 <CyFx3DevIOSetConfig+0x4c>
40014530:	e3500003 	cmp	r0, #3
40014534:	1a000058 	bne	4001469c <CyFx3DevIOSetConfig+0x1b0>
40014538:	e3866010 	orr	r6, r6, #16
4001453c:	e5d50001 	ldrb	r0, [r5, #1]
40014540:	e3500005 	cmp	r0, #5
40014544:	308ff100 	addcc	pc, pc, r0, lsl #2
40014548:	ea000053 	b	4001469c <CyFx3DevIOSetConfig+0x1b0>
4001454c:	ea000003 	b	40014560 <CyFx3DevIOSetConfig+0x74>
40014550:	ea000005 	b	4001456c <CyFx3DevIOSetConfig+0x80>
40014554:	ea000021 	b	400145e0 <CyFx3DevIOSetConfig+0xf4>
40014558:	ea00002c 	b	40014610 <CyFx3DevIOSetConfig+0x124>
4001455c:	ea000002 	b	4001456c <CyFx3DevIOSetConfig+0x80>
40014560:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
40014564:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
40014568:	ea000032 	b	40014638 <CyFx3DevIOSetConfig+0x14c>
4001456c:	e3500001 	cmp	r0, #1
40014570:	e5950004 	ldr	r0, [r5, #4]
40014574:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
40014578:	e3500000 	cmp	r0, #0
4001457c:	1a000006 	bne	4001459c <CyFx3DevIOSetConfig+0xb0>
40014580:	e5950010 	ldr	r0, [r5, #16]
40014584:	e3500000 	cmp	r0, #0
40014588:	1a00000b 	bne	400145bc <CyFx3DevIOSetConfig+0xd0>
4001458c:	e595000c 	ldr	r0, [r5, #12]
40014590:	e3500000 	cmp	r0, #0
40014594:	1a00000e 	bne	400145d4 <CyFx3DevIOSetConfig+0xe8>
40014598:	ea000005 	b	400145b4 <CyFx3DevIOSetConfig+0xc8>
4001459c:	e595000c 	ldr	r0, [r5, #12]
400145a0:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
400145a4:	e3500000 	cmp	r0, #0
400145a8:	05950010 	ldreq	r0, [r5, #16]
400145ac:	03500000 	cmpeq	r0, #0
400145b0:	1a000039 	bne	4001469c <CyFx3DevIOSetConfig+0x1b0>
400145b4:	e3866c01 	orr	r6, r6, #256	; 0x100
400145b8:	ea00001e 	b	40014638 <CyFx3DevIOSetConfig+0x14c>
400145bc:	e595000c 	ldr	r0, [r5, #12]
400145c0:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
400145c4:	e3500000 	cmp	r0, #0
400145c8:	1a000033 	bne	4001469c <CyFx3DevIOSetConfig+0x1b0>
400145cc:	e3866c02 	orr	r6, r6, #512	; 0x200
400145d0:	ea000018 	b	40014638 <CyFx3DevIOSetConfig+0x14c>
400145d4:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
400145d8:	e3866c03 	orr	r6, r6, #768	; 0x300
400145dc:	ea000015 	b	40014638 <CyFx3DevIOSetConfig+0x14c>
400145e0:	e5950010 	ldr	r0, [r5, #16]
400145e4:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
400145e8:	e3500000 	cmp	r0, #0
400145ec:	1a00002a 	bne	4001469c <CyFx3DevIOSetConfig+0x1b0>
400145f0:	e5950004 	ldr	r0, [r5, #4]
400145f4:	e3866c05 	orr	r6, r6, #1280	; 0x500
400145f8:	e3500000 	cmp	r0, #0
400145fc:	e595000c 	ldr	r0, [r5, #12]
40014600:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014604:	e3500000 	cmp	r0, #0
40014608:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
4001460c:	ea000009 	b	40014638 <CyFx3DevIOSetConfig+0x14c>
40014610:	e5950004 	ldr	r0, [r5, #4]
40014614:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014618:	e3500000 	cmp	r0, #0
4001461c:	e5950010 	ldr	r0, [r5, #16]
40014620:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014624:	e3500000 	cmp	r0, #0
40014628:	e595000c 	ldr	r0, [r5, #12]
4001462c:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014630:	e3500000 	cmp	r0, #0
40014634:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014638:	e5950008 	ldr	r0, [r5, #8]
4001463c:	e5959014 	ldr	r9, [r5, #20]
40014640:	e3500000 	cmp	r0, #0
40014644:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014648:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
4001464c:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014650:	05950018 	ldreq	r0, [r5, #24]
40014654:	01d00004 	bicseq	r0, r0, r4
40014658:	0595e01c 	ldreq	lr, [r5, #28]
4001465c:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014660:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014664:	0595c020 	ldreq	ip, [r5, #32]
40014668:	01dc0004 	bicseq	r0, ip, r4
4001466c:	1a00000a 	bne	4001469c <CyFx3DevIOSetConfig+0x1b0>
40014670:	e59f0098 	ldr	r0, [pc, #152]	; 40014710 <CyFx3DevIOSetConfig+0x224>
40014674:	e3a01000 	mov	r1, #0
40014678:	e01e2000 	ands	r2, lr, r0
4001467c:	000c2000 	andeq	r2, ip, r0
40014680:	0a000001 	beq	4001468c <CyFx3DevIOSetConfig+0x1a0>
40014684:	e11c0000 	tst	ip, r0
40014688:	1a000003 	bne	4001469c <CyFx3DevIOSetConfig+0x1b0>
4001468c:	e2523001 	subs	r3, r2, #1
40014690:	13a03001 	movne	r3, #1
40014694:	e1120003 	tst	r2, r3
40014698:	0a000001 	beq	400146a4 <CyFx3DevIOSetConfig+0x1b8>
4001469c:	e3a00000 	mov	r0, #0
400146a0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400146a4:	e2811001 	add	r1, r1, #1
400146a8:	e3510008 	cmp	r1, #8
400146ac:	e1a00080 	lsl	r0, r0, #1
400146b0:	3afffff0 	bcc	40014678 <CyFx3DevIOSetConfig+0x18c>
400146b4:	e588900c 	str	r9, [r8, #12]
400146b8:	e5950018 	ldr	r0, [r5, #24]
400146bc:	e5880010 	str	r0, [r8, #16]
400146c0:	e595001c 	ldr	r0, [r5, #28]
400146c4:	e5880014 	str	r0, [r8, #20]
400146c8:	e5950020 	ldr	r0, [r5, #32]
400146cc:	e5880018 	str	r0, [r8, #24]
400146d0:	e3a00001 	mov	r0, #1
400146d4:	eb0000a6 	bl	40014974 <CyFx3BusyWait>
400146d8:	e5886008 	str	r6, [r8, #8]
400146dc:	e59f0030 	ldr	r0, [pc, #48]	; 40014714 <CyFx3DevIOSetConfig+0x228>
400146e0:	e3a02024 	mov	r2, #36	; 0x24
400146e4:	e1a01005 	mov	r1, r5
400146e8:	ebfffb98 	bl	40013550 <__aeabi_memcpy4>
400146ec:	e59f0024 	ldr	r0, [pc, #36]	; 40014718 <CyFx3DevIOSetConfig+0x22c>
400146f0:	e5804004 	str	r4, [r0, #4]
400146f4:	e5807000 	str	r7, [r0]
400146f8:	e3a00001 	mov	r0, #1
400146fc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014700:	e0051000 	.word	0xe0051000
40014704:	3fe00000 	.word	0x3fe00000
40014708:	1ffff9e0 	.word	0x1ffff9e0
4001470c:	1fffe000 	.word	0x1fffe000
40014710:	01010101 	.word	0x01010101
40014714:	40030cb4 	.word	0x40030cb4
40014718:	40030cac 	.word	0x40030cac

Disassembly of section i.CyFx3DevIdentifyPart:

4001471c <CyFx3DevIdentifyPart>:
4001471c:	e59f0078 	ldr	r0, [pc, #120]	; 4001479c <CyFx3DevIdentifyPart+0x80>
40014720:	e5901008 	ldr	r1, [r0, #8]
40014724:	e59f2074 	ldr	r2, [pc, #116]	; 400147a0 <CyFx3DevIdentifyPart+0x84>
40014728:	e1a01221 	lsr	r1, r1, #4
4001472c:	e5923004 	ldr	r3, [r2, #4]
40014730:	e3530000 	cmp	r3, #0
40014734:	15d20000 	ldrbne	r0, [r2]
40014738:	112fff1e 	bxne	lr
4001473c:	e5900004 	ldr	r0, [r0, #4]
40014740:	e3100040 	tst	r0, #64	; 0x40
40014744:	e59f2058 	ldr	r2, [pc, #88]	; 400147a4 <CyFx3DevIdentifyPart+0x88>
40014748:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
4001474c:	e3a00000 	mov	r0, #0
40014750:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014754:	e1530001 	cmp	r3, r1
40014758:	12800001 	addne	r0, r0, #1
4001475c:	120000ff 	andne	r0, r0, #255	; 0xff
40014760:	1350001b 	cmpne	r0, #27
40014764:	3afffff9 	bcc	40014750 <CyFx3DevIdentifyPart+0x34>
40014768:	e350001b 	cmp	r0, #27
4001476c:	03a00003 	moveq	r0, #3
40014770:	0a000000 	beq	40014778 <CyFx3DevIdentifyPart+0x5c>
40014774:	2a000003 	bcs	40014788 <CyFx3DevIdentifyPart+0x6c>
40014778:	e0821180 	add	r1, r2, r0, lsl #3
4001477c:	e5911004 	ldr	r1, [r1, #4]
40014780:	e3110004 	tst	r1, #4
40014784:	112fff1e 	bxne	lr
40014788:	e59f1018 	ldr	r1, [pc, #24]	; 400147a8 <CyFx3DevIdentifyPart+0x8c>
4001478c:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014790:	e3822004 	orr	r2, r2, #4
40014794:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014798:	e12fff1e 	bx	lr
4001479c:	e0055000 	.word	0xe0055000
400147a0:	40030ca0 	.word	0x40030ca0
400147a4:	40011b50 	.word	0x40011b50
400147a8:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

400147ac <CyFx3DevInitPageTables>:
400147ac:	e92d4030 	push	{r4, r5, lr}
400147b0:	e59f0058 	ldr	r0, [pc, #88]	; 40014810 <CyFx3DevInitPageTables+0x64>
400147b4:	e3a04000 	mov	r4, #0
400147b8:	e59f504c 	ldr	r5, [pc, #76]	; 4001480c <CyFx3DevInitPageTables+0x60>
400147bc:	e5804004 	str	r4, [r0, #4]
400147c0:	ebffffd5 	bl	4001471c <CyFx3DevIdentifyPart>
400147c4:	e59f1048 	ldr	r1, [pc, #72]	; 40014814 <CyFx3DevInitPageTables+0x68>
400147c8:	e2450a05 	sub	r0, r5, #20480	; 0x5000
400147cc:	e5801000 	str	r1, [r0]
400147d0:	e2811201 	add	r1, r1, #268435456	; 0x10000000
400147d4:	e5801008 	str	r1, [r0, #8]
400147d8:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
400147dc:	e5801010 	str	r1, [r0, #16]
400147e0:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
400147e4:	e5801018 	str	r1, [r0, #24]
400147e8:	e59f1028 	ldr	r1, [pc, #40]	; 40014818 <CyFx3DevInitPageTables+0x6c>
400147ec:	e5801020 	str	r1, [r0, #32]
400147f0:	e59f1024 	ldr	r1, [pc, #36]	; 4001481c <CyFx3DevInitPageTables+0x70>
400147f4:	e580101c 	str	r1, [r0, #28]
400147f8:	e5804024 	str	r4, [r0, #36]	; 0x24
400147fc:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
40014800:	e3a00003 	mov	r0, #3
40014804:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014808:	e8bd8030 	pop	{r4, r5, pc}
4001480c:	e0058000 	.word	0xe0058000
40014810:	40030ca0 	.word	0x40030ca0
40014814:	00000c12 	.word	0x00000c12
40014818:	fff00c12 	.word	0xfff00c12
4001481c:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014820 <CyFx3DevIsGpif32Supported>:
40014820:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014824:	ebffffbc 	bl	4001471c <CyFx3DevIdentifyPart>
40014828:	e350001b 	cmp	r0, #27
4001482c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014844 <CyFx3DevIsGpif32Supported+0x24>
40014830:	30810180 	addcc	r0, r1, r0, lsl #3
40014834:	35900004 	ldrcc	r0, [r0, #4]
40014838:	32000010 	andcc	r0, r0, #16
4001483c:	23a00000 	movcs	r0, #0
40014840:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014844:	40011b50 	.word	0x40011b50

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014848 <CyFx3DevIsGpifConfigurable>:
40014848:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001484c:	ebffffb2 	bl	4001471c <CyFx3DevIdentifyPart>
40014850:	e350001b 	cmp	r0, #27
40014854:	2a000006 	bcs	40014874 <CyFx3DevIsGpifConfigurable+0x2c>
40014858:	e59f101c 	ldr	r1, [pc, #28]	; 4001487c <CyFx3DevIsGpifConfigurable+0x34>
4001485c:	e0810180 	add	r0, r1, r0, lsl #3
40014860:	e5900004 	ldr	r0, [r0, #4]
40014864:	e3100c0f 	tst	r0, #3840	; 0xf00
40014868:	159f0010 	ldrne	r0, [pc, #16]	; 40014880 <CyFx3DevIsGpifConfigurable+0x38>
4001486c:	15900008 	ldrne	r0, [r0, #8]
40014870:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014874:	e3a00001 	mov	r0, #1
40014878:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001487c:	40011b50 	.word	0x40011b50
40014880:	40030ca0 	.word	0x40030ca0

Disassembly of section i.CyFx3DevIsGpifSupported:

40014884 <CyFx3DevIsGpifSupported>:
40014884:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014888:	ebffffa3 	bl	4001471c <CyFx3DevIdentifyPart>
4001488c:	e350001b 	cmp	r0, #27
40014890:	359f1010 	ldrcc	r1, [pc, #16]	; 400148a8 <CyFx3DevIsGpifSupported+0x24>
40014894:	30810180 	addcc	r0, r1, r0, lsl #3
40014898:	35900004 	ldrcc	r0, [r0, #4]
4001489c:	32000008 	andcc	r0, r0, #8
400148a0:	23a00000 	movcs	r0, #0
400148a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148a8:	40011b50 	.word	0x40011b50

Disassembly of section i.CyFx3DevIsI2sSupported:

400148ac <CyFx3DevIsI2sSupported>:
400148ac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148b0:	ebffff99 	bl	4001471c <CyFx3DevIdentifyPart>
400148b4:	e350001b 	cmp	r0, #27
400148b8:	359f1010 	ldrcc	r1, [pc, #16]	; 400148d0 <CyFx3DevIsI2sSupported+0x24>
400148bc:	30810180 	addcc	r0, r1, r0, lsl #3
400148c0:	35900004 	ldrcc	r0, [r0, #4]
400148c4:	32000080 	andcc	r0, r0, #128	; 0x80
400148c8:	23a00000 	movcs	r0, #0
400148cc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148d0:	40011b50 	.word	0x40011b50

Disassembly of section i.CyFx3DevIsOtgSupported:

400148d4 <CyFx3DevIsOtgSupported>:
400148d4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148d8:	ebffff8f 	bl	4001471c <CyFx3DevIdentifyPart>
400148dc:	e350001b 	cmp	r0, #27
400148e0:	359f1010 	ldrcc	r1, [pc, #16]	; 400148f8 <CyFx3DevIsOtgSupported+0x24>
400148e4:	30810180 	addcc	r0, r1, r0, lsl #3
400148e8:	35900004 	ldrcc	r0, [r0, #4]
400148ec:	32000002 	andcc	r0, r0, #2
400148f0:	23a00000 	movcs	r0, #0
400148f4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148f8:	40011b50 	.word	0x40011b50

Disassembly of section i.CyFx3DevIsSib0Supported:

400148fc <CyFx3DevIsSib0Supported>:
400148fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014900:	ebffff85 	bl	4001471c <CyFx3DevIdentifyPart>
40014904:	e350001b 	cmp	r0, #27
40014908:	359f1010 	ldrcc	r1, [pc, #16]	; 40014920 <CyFx3DevIsSib0Supported+0x24>
4001490c:	30810180 	addcc	r0, r1, r0, lsl #3
40014910:	35900004 	ldrcc	r0, [r0, #4]
40014914:	32000020 	andcc	r0, r0, #32
40014918:	23a00000 	movcs	r0, #0
4001491c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014920:	40011b50 	.word	0x40011b50

Disassembly of section i.CyFx3DevIsSib1Supported:

40014924 <CyFx3DevIsSib1Supported>:
40014924:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014928:	ebffff7b 	bl	4001471c <CyFx3DevIdentifyPart>
4001492c:	e350001b 	cmp	r0, #27
40014930:	359f1010 	ldrcc	r1, [pc, #16]	; 40014948 <CyFx3DevIsSib1Supported+0x24>
40014934:	30810180 	addcc	r0, r1, r0, lsl #3
40014938:	35900004 	ldrcc	r0, [r0, #4]
4001493c:	32000040 	andcc	r0, r0, #64	; 0x40
40014940:	23a00000 	movcs	r0, #0
40014944:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014948:	40011b50 	.word	0x40011b50

Disassembly of section i.CyFx3DevIsUsb3Supported:

4001494c <CyFx3DevIsUsb3Supported>:
4001494c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014950:	ebffff71 	bl	4001471c <CyFx3DevIdentifyPart>
40014954:	e350001b 	cmp	r0, #27
40014958:	359f1010 	ldrcc	r1, [pc, #16]	; 40014970 <CyFx3DevIsUsb3Supported+0x24>
4001495c:	30810180 	addcc	r0, r1, r0, lsl #3
40014960:	35900004 	ldrcc	r0, [r0, #4]
40014964:	32000001 	andcc	r0, r0, #1
40014968:	23a00000 	movcs	r0, #0
4001496c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014970:	40011b50 	.word	0x40011b50

Disassembly of section i.CyFx3BusyWait:

40014974 <CyFx3BusyWait>:
40014974:	ea000003 	b	40014988 <CyFx3BusyWait+0x14>
40014978:	e3a01000 	mov	r1, #0
4001497c:	e2811001 	add	r1, r1, #1
40014980:	e351002f 	cmp	r1, #47	; 0x2f
40014984:	3afffffc 	bcc	4001497c <CyFx3BusyWait+0x8>
40014988:	e1b01000 	movs	r1, r0
4001498c:	e2400001 	sub	r0, r0, #1
40014990:	e1a00800 	lsl	r0, r0, #16
40014994:	e1a00820 	lsr	r0, r0, #16
40014998:	1afffff6 	bne	40014978 <CyFx3BusyWait+0x4>
4001499c:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

400149a0 <CyFx3PibDllEnable>:
400149a0:	e59f205c 	ldr	r2, [pc, #92]	; 40014a04 <CyFx3PibDllEnable+0x64>
400149a4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400149a8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149ac:	e3c00001 	bic	r0, r0, #1
400149b0:	e5820028 	str	r0, [r2, #40]	; 0x28
400149b4:	e3a00001 	mov	r0, #1
400149b8:	ebffffed 	bl	40014974 <CyFx3BusyWait>
400149bc:	e3a00003 	mov	r0, #3
400149c0:	e5820028 	str	r0, [r2, #40]	; 0x28
400149c4:	e3a00001 	mov	r0, #1
400149c8:	ebffffe9 	bl	40014974 <CyFx3BusyWait>
400149cc:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149d0:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
400149d4:	e5820028 	str	r0, [r2, #40]	; 0x28
400149d8:	e3a00001 	mov	r0, #1
400149dc:	ebffffe4 	bl	40014974 <CyFx3BusyWait>
400149e0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149e4:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
400149e8:	e5820028 	str	r0, [r2, #40]	; 0x28
400149ec:	e3a00001 	mov	r0, #1
400149f0:	ebffffdf 	bl	40014974 <CyFx3BusyWait>
400149f4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149f8:	e3100004 	tst	r0, #4
400149fc:	0afffffc 	beq	400149f4 <CyFx3PibDllEnable+0x54>
40014a00:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a04:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014a08 <CyFx3PibGetDllStatus>:
40014a08:	e59f0008 	ldr	r0, [pc, #8]	; 40014a18 <CyFx3PibGetDllStatus+0x10>
40014a0c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014a10:	e2000004 	and	r0, r0, #4
40014a14:	e12fff1e 	bx	lr
40014a18:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014a1c <CyFx3PibPowerOn>:
40014a1c:	e92d4010 	push	{r4, lr}
40014a20:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014a24:	ebffff96 	bl	40014884 <CyFx3DevIsGpifSupported>
40014a28:	e3500000 	cmp	r0, #0
40014a2c:	1a000002 	bne	40014a3c <CyFx3PibPowerOn+0x20>
40014a30:	e4940004 	ldr	r0, [r4], #4
40014a34:	e3500000 	cmp	r0, #0
40014a38:	1afffffc 	bne	40014a30 <CyFx3PibPowerOn+0x14>
40014a3c:	e59f2028 	ldr	r2, [pc, #40]	; 40014a6c <CyFx3PibPowerOn+0x50>
40014a40:	e3a00000 	mov	r0, #0
40014a44:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014a48:	e3a0000a 	mov	r0, #10
40014a4c:	ebffffc8 	bl	40014974 <CyFx3BusyWait>
40014a50:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014a54:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014a58:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014a5c:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014a60:	e3100001 	tst	r0, #1
40014a64:	0afffffc 	beq	40014a5c <CyFx3PibPowerOn+0x40>
40014a68:	e8bd8010 	pop	{r4, pc}
40014a6c:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014a70 <CyU3PDmaSocketDisable>:
40014a70:	e3a0c03f 	mov	ip, #63	; 0x3f
40014a74:	e00c1440 	and	r1, ip, r0, asr #8
40014a78:	e20030ff 	and	r3, r0, #255	; 0xff
40014a7c:	e59fc048 	ldr	ip, [pc, #72]	; 40014acc <CyU3PDmaSocketDisable+0x5c>
40014a80:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014a84:	e08cc383 	add	ip, ip, r3, lsl #7
40014a88:	e59c200c 	ldr	r2, [ip, #12]
40014a8c:	e3120601 	tst	r2, #1048576	; 0x100000
40014a90:	1a000000 	bne	40014a98 <CyU3PDmaSocketDisable+0x28>
40014a94:	e12fff1e 	bx	lr
40014a98:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014a9c:	e59fc028 	ldr	ip, [pc, #40]	; 40014acc <CyU3PDmaSocketDisable+0x5c>
40014aa0:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014aa4:	e08cc383 	add	ip, ip, r3, lsl #7
40014aa8:	e58c200c 	str	r2, [ip, #12]
40014aac:	e1a00000 	nop			; (mov r0, r0)
40014ab0:	e59fc014 	ldr	ip, [pc, #20]	; 40014acc <CyU3PDmaSocketDisable+0x5c>
40014ab4:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014ab8:	e08cc383 	add	ip, ip, r3, lsl #7
40014abc:	e59cc00c 	ldr	ip, [ip, #12]
40014ac0:	e31c0601 	tst	ip, #1048576	; 0x100000
40014ac4:	1afffff9 	bne	40014ab0 <CyU3PDmaSocketDisable+0x40>
40014ac8:	eafffff1 	b	40014a94 <CyU3PDmaSocketDisable+0x24>
40014acc:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014ad0 <CyU3PDmaSocketGetConfig>:
40014ad0:	e1a02000 	mov	r2, r0
40014ad4:	e3a0003f 	mov	r0, #63	; 0x3f
40014ad8:	e0003442 	and	r3, r0, r2, asr #8
40014adc:	e202c0ff 	and	ip, r2, #255	; 0xff
40014ae0:	e3510000 	cmp	r1, #0
40014ae4:	1a000001 	bne	40014af0 <CyU3PDmaSocketGetConfig+0x20>
40014ae8:	e3a00040 	mov	r0, #64	; 0x40
40014aec:	e12fff1e 	bx	lr
40014af0:	e59f0074 	ldr	r0, [pc, #116]	; 40014b6c <CyU3PDmaSocketGetConfig+0x9c>
40014af4:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014af8:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014afc:	e5810000 	str	r0, [r1]
40014b00:	e59f0064 	ldr	r0, [pc, #100]	; 40014b6c <CyU3PDmaSocketGetConfig+0x9c>
40014b04:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b08:	e080038c 	add	r0, r0, ip, lsl #7
40014b0c:	e5900004 	ldr	r0, [r0, #4]
40014b10:	e5810004 	str	r0, [r1, #4]
40014b14:	e59f0050 	ldr	r0, [pc, #80]	; 40014b6c <CyU3PDmaSocketGetConfig+0x9c>
40014b18:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b1c:	e080038c 	add	r0, r0, ip, lsl #7
40014b20:	e5900008 	ldr	r0, [r0, #8]
40014b24:	e5810008 	str	r0, [r1, #8]
40014b28:	e59f003c 	ldr	r0, [pc, #60]	; 40014b6c <CyU3PDmaSocketGetConfig+0x9c>
40014b2c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b30:	e080038c 	add	r0, r0, ip, lsl #7
40014b34:	e590000c 	ldr	r0, [r0, #12]
40014b38:	e581000c 	str	r0, [r1, #12]
40014b3c:	e59f0028 	ldr	r0, [pc, #40]	; 40014b6c <CyU3PDmaSocketGetConfig+0x9c>
40014b40:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b44:	e080038c 	add	r0, r0, ip, lsl #7
40014b48:	e5900010 	ldr	r0, [r0, #16]
40014b4c:	e5810010 	str	r0, [r1, #16]
40014b50:	e59f0014 	ldr	r0, [pc, #20]	; 40014b6c <CyU3PDmaSocketGetConfig+0x9c>
40014b54:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b58:	e080038c 	add	r0, r0, ip, lsl #7
40014b5c:	e5900014 	ldr	r0, [r0, #20]
40014b60:	e5810014 	str	r0, [r1, #20]
40014b64:	e3a00000 	mov	r0, #0
40014b68:	eaffffdf 	b	40014aec <CyU3PDmaSocketGetConfig+0x1c>
40014b6c:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014b70 <CyU3PDmaSocketIsValidConsumer>:
40014b70:	e92d4010 	push	{r4, lr}
40014b74:	e1a01000 	mov	r1, r0
40014b78:	e3a0003f 	mov	r0, #63	; 0x3f
40014b7c:	e0002441 	and	r2, r0, r1, asr #8
40014b80:	e20130ff 	and	r3, r1, #255	; 0xff
40014b84:	e3a04000 	mov	r4, #0
40014b88:	e3520000 	cmp	r2, #0
40014b8c:	0a000006 	beq	40014bac <CyU3PDmaSocketIsValidConsumer+0x3c>
40014b90:	e3520001 	cmp	r2, #1
40014b94:	0a000009 	beq	40014bc0 <CyU3PDmaSocketIsValidConsumer+0x50>
40014b98:	e3520002 	cmp	r2, #2
40014b9c:	0a00000c 	beq	40014bd4 <CyU3PDmaSocketIsValidConsumer+0x64>
40014ba0:	e3520003 	cmp	r2, #3
40014ba4:	1a000014 	bne	40014bfc <CyU3PDmaSocketIsValidConsumer+0x8c>
40014ba8:	ea00000e 	b	40014be8 <CyU3PDmaSocketIsValidConsumer+0x78>
40014bac:	e1a00000 	nop			; (mov r0, r0)
40014bb0:	e3a0c000 	mov	ip, #0
40014bb4:	e3a0e004 	mov	lr, #4
40014bb8:	e59f4080 	ldr	r4, [pc, #128]	; 40014c40 <CyU3PDmaSocketIsValidConsumer+0xd0>
40014bbc:	ea000011 	b	40014c08 <CyU3PDmaSocketIsValidConsumer+0x98>
40014bc0:	e1a00000 	nop			; (mov r0, r0)
40014bc4:	e3a0c000 	mov	ip, #0
40014bc8:	e3a0e00f 	mov	lr, #15
40014bcc:	e59f4070 	ldr	r4, [pc, #112]	; 40014c44 <CyU3PDmaSocketIsValidConsumer+0xd4>
40014bd0:	ea00000c 	b	40014c08 <CyU3PDmaSocketIsValidConsumer+0x98>
40014bd4:	e1a00000 	nop			; (mov r0, r0)
40014bd8:	e3a0c000 	mov	ip, #0
40014bdc:	e3a0e007 	mov	lr, #7
40014be0:	e59f4060 	ldr	r4, [pc, #96]	; 40014c48 <CyU3PDmaSocketIsValidConsumer+0xd8>
40014be4:	ea000007 	b	40014c08 <CyU3PDmaSocketIsValidConsumer+0x98>
40014be8:	e1a00000 	nop			; (mov r0, r0)
40014bec:	e3a0c000 	mov	ip, #0
40014bf0:	e3a0e00f 	mov	lr, #15
40014bf4:	e59f4050 	ldr	r4, [pc, #80]	; 40014c4c <CyU3PDmaSocketIsValidConsumer+0xdc>
40014bf8:	ea000002 	b	40014c08 <CyU3PDmaSocketIsValidConsumer+0x98>
40014bfc:	e1a00000 	nop			; (mov r0, r0)
40014c00:	e3a00000 	mov	r0, #0
40014c04:	e8bd8010 	pop	{r4, pc}
40014c08:	e1a00000 	nop			; (mov r0, r0)
40014c0c:	e5940000 	ldr	r0, [r4]
40014c10:	e3100001 	tst	r0, #1
40014c14:	1a000001 	bne	40014c20 <CyU3PDmaSocketIsValidConsumer+0xb0>
40014c18:	e3a00000 	mov	r0, #0
40014c1c:	eafffff8 	b	40014c04 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c20:	e153000c 	cmp	r3, ip
40014c24:	ba000003 	blt	40014c38 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014c28:	e153000e 	cmp	r3, lr
40014c2c:	ca000001 	bgt	40014c38 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014c30:	e3a00001 	mov	r0, #1
40014c34:	eafffff2 	b	40014c04 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c38:	e3a00000 	mov	r0, #0
40014c3c:	eafffff0 	b	40014c04 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c40:	e0007f04 	.word	0xe0007f04
40014c44:	e0017f04 	.word	0xe0017f04
40014c48:	e0027f04 	.word	0xe0027f04
40014c4c:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40014c50 <CyU3PDmaSocketIsValidProducer>:
40014c50:	e92d4010 	push	{r4, lr}
40014c54:	e1a01000 	mov	r1, r0
40014c58:	e3a0003f 	mov	r0, #63	; 0x3f
40014c5c:	e0002441 	and	r2, r0, r1, asr #8
40014c60:	e20130ff 	and	r3, r1, #255	; 0xff
40014c64:	e3a04000 	mov	r4, #0
40014c68:	e3520000 	cmp	r2, #0
40014c6c:	0a000006 	beq	40014c8c <CyU3PDmaSocketIsValidProducer+0x3c>
40014c70:	e3520001 	cmp	r2, #1
40014c74:	0a000009 	beq	40014ca0 <CyU3PDmaSocketIsValidProducer+0x50>
40014c78:	e3520002 	cmp	r2, #2
40014c7c:	0a00000c 	beq	40014cb4 <CyU3PDmaSocketIsValidProducer+0x64>
40014c80:	e3520004 	cmp	r2, #4
40014c84:	1a000014 	bne	40014cdc <CyU3PDmaSocketIsValidProducer+0x8c>
40014c88:	ea00000e 	b	40014cc8 <CyU3PDmaSocketIsValidProducer+0x78>
40014c8c:	e1a00000 	nop			; (mov r0, r0)
40014c90:	e3a0c005 	mov	ip, #5
40014c94:	e3a0e007 	mov	lr, #7
40014c98:	e59f4080 	ldr	r4, [pc, #128]	; 40014d20 <CyU3PDmaSocketIsValidProducer+0xd0>
40014c9c:	ea000011 	b	40014ce8 <CyU3PDmaSocketIsValidProducer+0x98>
40014ca0:	e1a00000 	nop			; (mov r0, r0)
40014ca4:	e3a0c000 	mov	ip, #0
40014ca8:	e3a0e01f 	mov	lr, #31
40014cac:	e59f4070 	ldr	r4, [pc, #112]	; 40014d24 <CyU3PDmaSocketIsValidProducer+0xd4>
40014cb0:	ea00000c 	b	40014ce8 <CyU3PDmaSocketIsValidProducer+0x98>
40014cb4:	e1a00000 	nop			; (mov r0, r0)
40014cb8:	e3a0c000 	mov	ip, #0
40014cbc:	e3a0e007 	mov	lr, #7
40014cc0:	e59f4060 	ldr	r4, [pc, #96]	; 40014d28 <CyU3PDmaSocketIsValidProducer+0xd8>
40014cc4:	ea000007 	b	40014ce8 <CyU3PDmaSocketIsValidProducer+0x98>
40014cc8:	e1a00000 	nop			; (mov r0, r0)
40014ccc:	e3a0c000 	mov	ip, #0
40014cd0:	e3a0e00f 	mov	lr, #15
40014cd4:	e59f4050 	ldr	r4, [pc, #80]	; 40014d2c <CyU3PDmaSocketIsValidProducer+0xdc>
40014cd8:	ea000002 	b	40014ce8 <CyU3PDmaSocketIsValidProducer+0x98>
40014cdc:	e1a00000 	nop			; (mov r0, r0)
40014ce0:	e3a00000 	mov	r0, #0
40014ce4:	e8bd8010 	pop	{r4, pc}
40014ce8:	e1a00000 	nop			; (mov r0, r0)
40014cec:	e5940000 	ldr	r0, [r4]
40014cf0:	e3100001 	tst	r0, #1
40014cf4:	1a000001 	bne	40014d00 <CyU3PDmaSocketIsValidProducer+0xb0>
40014cf8:	e3a00000 	mov	r0, #0
40014cfc:	eafffff8 	b	40014ce4 <CyU3PDmaSocketIsValidProducer+0x94>
40014d00:	e153000c 	cmp	r3, ip
40014d04:	ba000003 	blt	40014d18 <CyU3PDmaSocketIsValidProducer+0xc8>
40014d08:	e153000e 	cmp	r3, lr
40014d0c:	ca000001 	bgt	40014d18 <CyU3PDmaSocketIsValidProducer+0xc8>
40014d10:	e3a00001 	mov	r0, #1
40014d14:	eafffff2 	b	40014ce4 <CyU3PDmaSocketIsValidProducer+0x94>
40014d18:	e3a00000 	mov	r0, #0
40014d1c:	eafffff0 	b	40014ce4 <CyU3PDmaSocketIsValidProducer+0x94>
40014d20:	e0007f04 	.word	0xe0007f04
40014d24:	e0017f04 	.word	0xe0017f04
40014d28:	e0027f04 	.word	0xe0027f04
40014d2c:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40014d30 <CyU3PDmaSocketSendEvent>:
40014d30:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014d34:	e1a04000 	mov	r4, r0
40014d38:	e1a05001 	mov	r5, r1
40014d3c:	e1a06002 	mov	r6, r2
40014d40:	e3a0003f 	mov	r0, #63	; 0x3f
40014d44:	e0007444 	and	r7, r0, r4, asr #8
40014d48:	e20480ff 	and	r8, r4, #255	; 0xff
40014d4c:	e1a09005 	mov	r9, r5
40014d50:	e3560001 	cmp	r6, #1
40014d54:	1a000000 	bne	40014d5c <CyU3PDmaSocketSendEvent+0x2c>
40014d58:	e3899801 	orr	r9, r9, #65536	; 0x10000
40014d5c:	e59f0010 	ldr	r0, [pc, #16]	; 40014d74 <CyU3PDmaSocketSendEvent+0x44>
40014d60:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40014d64:	e0800388 	add	r0, r0, r8, lsl #7
40014d68:	e580907c 	str	r9, [r0, #124]	; 0x7c
40014d6c:	ebfff6e1 	bl	400128f8 <CyU3PSysBarrierSync>
40014d70:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014d74:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketSetConfig:

40014d78 <CyU3PDmaSocketSetConfig>:
40014d78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014d7c:	e1a04000 	mov	r4, r0
40014d80:	e1a05001 	mov	r5, r1
40014d84:	e3a0003f 	mov	r0, #63	; 0x3f
40014d88:	e0006444 	and	r6, r0, r4, asr #8
40014d8c:	e20470ff 	and	r7, r4, #255	; 0xff
40014d90:	e3550000 	cmp	r5, #0
40014d94:	1a000001 	bne	40014da0 <CyU3PDmaSocketSetConfig+0x28>
40014d98:	e3a00040 	mov	r0, #64	; 0x40
40014d9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014da0:	e59f1078 	ldr	r1, [pc, #120]	; 40014e20 <CyU3PDmaSocketSetConfig+0xa8>
40014da4:	e5950000 	ldr	r0, [r5]
40014da8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014dac:	e7810387 	str	r0, [r1, r7, lsl #7]
40014db0:	e59f1068 	ldr	r1, [pc, #104]	; 40014e20 <CyU3PDmaSocketSetConfig+0xa8>
40014db4:	e5950004 	ldr	r0, [r5, #4]
40014db8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014dbc:	e0811387 	add	r1, r1, r7, lsl #7
40014dc0:	e5810004 	str	r0, [r1, #4]
40014dc4:	e59f1054 	ldr	r1, [pc, #84]	; 40014e20 <CyU3PDmaSocketSetConfig+0xa8>
40014dc8:	e5950008 	ldr	r0, [r5, #8]
40014dcc:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014dd0:	e0811387 	add	r1, r1, r7, lsl #7
40014dd4:	e5810008 	str	r0, [r1, #8]
40014dd8:	e59f1040 	ldr	r1, [pc, #64]	; 40014e20 <CyU3PDmaSocketSetConfig+0xa8>
40014ddc:	e5950010 	ldr	r0, [r5, #16]
40014de0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014de4:	e0811387 	add	r1, r1, r7, lsl #7
40014de8:	e5810010 	str	r0, [r1, #16]
40014dec:	e59f102c 	ldr	r1, [pc, #44]	; 40014e20 <CyU3PDmaSocketSetConfig+0xa8>
40014df0:	e5950014 	ldr	r0, [r5, #20]
40014df4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014df8:	e0811387 	add	r1, r1, r7, lsl #7
40014dfc:	e5810014 	str	r0, [r1, #20]
40014e00:	e59f1018 	ldr	r1, [pc, #24]	; 40014e20 <CyU3PDmaSocketSetConfig+0xa8>
40014e04:	e595000c 	ldr	r0, [r5, #12]
40014e08:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e0c:	e0811387 	add	r1, r1, r7, lsl #7
40014e10:	e581000c 	str	r0, [r1, #12]
40014e14:	ebfff6b7 	bl	400128f8 <CyU3PSysBarrierSync>
40014e18:	e3a00000 	mov	r0, #0
40014e1c:	eaffffde 	b	40014d9c <CyU3PDmaSocketSetConfig+0x24>
40014e20:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40014e24 <CyU3PDmaSocketSetWrapUp>:
40014e24:	e3a0c03f 	mov	ip, #63	; 0x3f
40014e28:	e00c1440 	and	r1, ip, r0, asr #8
40014e2c:	e20030ff 	and	r3, r0, #255	; 0xff
40014e30:	e59fc02c 	ldr	ip, [pc, #44]	; 40014e64 <CyU3PDmaSocketSetWrapUp+0x40>
40014e34:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014e38:	e08cc383 	add	ip, ip, r3, lsl #7
40014e3c:	e59c200c 	ldr	r2, [ip, #12]
40014e40:	e3120601 	tst	r2, #1048576	; 0x100000
40014e44:	1a000000 	bne	40014e4c <CyU3PDmaSocketSetWrapUp+0x28>
40014e48:	e12fff1e 	bx	lr
40014e4c:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40014e50:	e59fc00c 	ldr	ip, [pc, #12]	; 40014e64 <CyU3PDmaSocketSetWrapUp+0x40>
40014e54:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014e58:	e08cc383 	add	ip, ip, r3, lsl #7
40014e5c:	e58c200c 	str	r2, [ip, #12]
40014e60:	eafffff8 	b	40014e48 <CyU3PDmaSocketSetWrapUp+0x24>
40014e64:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

40014e68 <CyU3PDmaSocketUpdateStatus>:
40014e68:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014e6c:	e1a04000 	mov	r4, r0
40014e70:	e1a05001 	mov	r5, r1
40014e74:	e3a0003f 	mov	r0, #63	; 0x3f
40014e78:	e0006444 	and	r6, r0, r4, asr #8
40014e7c:	e20470ff 	and	r7, r4, #255	; 0xff
40014e80:	e3550000 	cmp	r5, #0
40014e84:	1a000001 	bne	40014e90 <CyU3PDmaSocketUpdateStatus+0x28>
40014e88:	e3a00040 	mov	r0, #64	; 0x40
40014e8c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014e90:	e59f1040 	ldr	r1, [pc, #64]	; 40014ed8 <CyU3PDmaSocketUpdateStatus+0x70>
40014e94:	e5950010 	ldr	r0, [r5, #16]
40014e98:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e9c:	e0811387 	add	r1, r1, r7, lsl #7
40014ea0:	e5810010 	str	r0, [r1, #16]
40014ea4:	e59f102c 	ldr	r1, [pc, #44]	; 40014ed8 <CyU3PDmaSocketUpdateStatus+0x70>
40014ea8:	e5950014 	ldr	r0, [r5, #20]
40014eac:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014eb0:	e0811387 	add	r1, r1, r7, lsl #7
40014eb4:	e5810014 	str	r0, [r1, #20]
40014eb8:	e59f1018 	ldr	r1, [pc, #24]	; 40014ed8 <CyU3PDmaSocketUpdateStatus+0x70>
40014ebc:	e595000c 	ldr	r0, [r5, #12]
40014ec0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ec4:	e0811387 	add	r1, r1, r7, lsl #7
40014ec8:	e581000c 	str	r0, [r1, #12]
40014ecc:	ebfff689 	bl	400128f8 <CyU3PSysBarrierSync>
40014ed0:	e3a00000 	mov	r0, #0
40014ed4:	eaffffec 	b	40014e8c <CyU3PDmaSocketUpdateStatus+0x24>
40014ed8:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40014edc <CyU3PDmaUpdateSocketSuspendOption>:
40014edc:	e92d4070 	push	{r4, r5, r6, lr}
40014ee0:	e24dd018 	sub	sp, sp, #24
40014ee4:	e1a04000 	mov	r4, r0
40014ee8:	e1a06001 	mov	r6, r1
40014eec:	e1a0100d 	mov	r1, sp
40014ef0:	e1a00004 	mov	r0, r4
40014ef4:	ebfffef5 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40014ef8:	e59d000c 	ldr	r0, [sp, #12]
40014efc:	e2000702 	and	r0, r0, #524288	; 0x80000
40014f00:	e1a059a0 	lsr	r5, r0, #19
40014f04:	e3550001 	cmp	r5, #1
40014f08:	1a000010 	bne	40014f50 <CyU3PDmaUpdateSocketSuspendOption+0x74>
40014f0c:	e59d000c 	ldr	r0, [sp, #12]
40014f10:	e3100101 	tst	r0, #1073741824	; 0x40000000
40014f14:	1a00000a 	bne	40014f44 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40014f18:	e59d000c 	ldr	r0, [sp, #12]
40014f1c:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014f20:	e58d000c 	str	r0, [sp, #12]
40014f24:	e3a00000 	mov	r0, #0
40014f28:	e58d0010 	str	r0, [sp, #16]
40014f2c:	e1a0100d 	mov	r1, sp
40014f30:	e1a00004 	mov	r0, r4
40014f34:	ebffffcb 	bl	40014e68 <CyU3PDmaSocketUpdateStatus>
40014f38:	e1a0100d 	mov	r1, sp
40014f3c:	e1a00004 	mov	r0, r4
40014f40:	ebfffee2 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40014f44:	e3a00000 	mov	r0, #0
40014f48:	e58d0010 	str	r0, [sp, #16]
40014f4c:	ea000004 	b	40014f64 <CyU3PDmaUpdateSocketSuspendOption+0x88>
40014f50:	e59d000c 	ldr	r0, [sp, #12]
40014f54:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014f58:	e58d000c 	str	r0, [sp, #12]
40014f5c:	e3a00e12 	mov	r0, #288	; 0x120
40014f60:	e58d0010 	str	r0, [sp, #16]
40014f64:	e59d000c 	ldr	r0, [sp, #12]
40014f68:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
40014f6c:	e58d000c 	str	r0, [sp, #12]
40014f70:	e59d0014 	ldr	r0, [sp, #20]
40014f74:	e3c00e12 	bic	r0, r0, #288	; 0x120
40014f78:	e58d0014 	str	r0, [sp, #20]
40014f7c:	e3560000 	cmp	r6, #0
40014f80:	0a000006 	beq	40014fa0 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
40014f84:	e3560001 	cmp	r6, #1
40014f88:	0a000006 	beq	40014fa8 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
40014f8c:	e3560002 	cmp	r6, #2
40014f90:	0a00000e 	beq	40014fd0 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40014f94:	e3560003 	cmp	r6, #3
40014f98:	1a000020 	bne	40015020 <CyU3PDmaUpdateSocketSuspendOption+0x144>
40014f9c:	ea000015 	b	40014ff8 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40014fa0:	e1a00000 	nop			; (mov r0, r0)
40014fa4:	ea00001f 	b	40015028 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014fa8:	e1a00000 	nop			; (mov r0, r0)
40014fac:	e59d000c 	ldr	r0, [sp, #12]
40014fb0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40014fb4:	e58d000c 	str	r0, [sp, #12]
40014fb8:	e3550000 	cmp	r5, #0
40014fbc:	1a000002 	bne	40014fcc <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40014fc0:	e59d0014 	ldr	r0, [sp, #20]
40014fc4:	e3800020 	orr	r0, r0, #32
40014fc8:	e58d0014 	str	r0, [sp, #20]
40014fcc:	ea000015 	b	40015028 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014fd0:	e1a00000 	nop			; (mov r0, r0)
40014fd4:	e3550000 	cmp	r5, #0
40014fd8:	1a000005 	bne	40014ff4 <CyU3PDmaUpdateSocketSuspendOption+0x118>
40014fdc:	e59d000c 	ldr	r0, [sp, #12]
40014fe0:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014fe4:	e58d000c 	str	r0, [sp, #12]
40014fe8:	e59d0014 	ldr	r0, [sp, #20]
40014fec:	e3800020 	orr	r0, r0, #32
40014ff0:	e58d0014 	str	r0, [sp, #20]
40014ff4:	ea00000b 	b	40015028 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014ff8:	e1a00000 	nop			; (mov r0, r0)
40014ffc:	e59d000c 	ldr	r0, [sp, #12]
40015000:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40015004:	e58d000c 	str	r0, [sp, #12]
40015008:	e3550000 	cmp	r5, #0
4001500c:	1a000002 	bne	4001501c <CyU3PDmaUpdateSocketSuspendOption+0x140>
40015010:	e59d0014 	ldr	r0, [sp, #20]
40015014:	e3800c01 	orr	r0, r0, #256	; 0x100
40015018:	e58d0014 	str	r0, [sp, #20]
4001501c:	ea000001 	b	40015028 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015020:	e1a00000 	nop			; (mov r0, r0)
40015024:	e1a00000 	nop			; (mov r0, r0)
40015028:	e1a00000 	nop			; (mov r0, r0)
4001502c:	e1a0100d 	mov	r1, sp
40015030:	e1a00004 	mov	r0, r4
40015034:	ebffff8b 	bl	40014e68 <CyU3PDmaSocketUpdateStatus>
40015038:	e28dd018 	add	sp, sp, #24
4001503c:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

40015040 <CyU3PDmaChannelAcquireLock>:
40015040:	e92d4070 	push	{r4, r5, r6, lr}
40015044:	e1a04000 	mov	r4, r0
40015048:	e1a05001 	mov	r5, r1
4001504c:	e3540000 	cmp	r4, #0
40015050:	1a000001 	bne	4001505c <CyU3PDmaChannelAcquireLock+0x1c>
40015054:	e3a00041 	mov	r0, #65	; 0x41
40015058:	e8bd8070 	pop	{r4, r5, r6, pc}
4001505c:	e5940000 	ldr	r0, [r4]
40015060:	e3500000 	cmp	r0, #0
40015064:	1a000001 	bne	40015070 <CyU3PDmaChannelAcquireLock+0x30>
40015068:	e3a00044 	mov	r0, #68	; 0x44
4001506c:	eafffff9 	b	40015058 <CyU3PDmaChannelAcquireLock+0x18>
40015070:	e1a01005 	mov	r1, r5
40015074:	e284003c 	add	r0, r4, #60	; 0x3c
40015078:	ebffd3cd 	bl	40009fb4 <_txe_mutex_get>
4001507c:	e3500000 	cmp	r0, #0
40015080:	0a000001 	beq	4001508c <CyU3PDmaChannelAcquireLock+0x4c>
40015084:	e3a0001d 	mov	r0, #29
40015088:	eafffff2 	b	40015058 <CyU3PDmaChannelAcquireLock+0x18>
4001508c:	e3a00000 	mov	r0, #0
40015090:	eafffff0 	b	40015058 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

40015094 <CyU3PDmaChannelCacheControl>:
40015094:	e92d4070 	push	{r4, r5, r6, lr}
40015098:	e1a04000 	mov	r4, r0
4001509c:	e1a05001 	mov	r5, r1
400150a0:	e3e01000 	mvn	r1, #0
400150a4:	e1a00004 	mov	r0, r4
400150a8:	ebffffe4 	bl	40015040 <CyU3PDmaChannelAcquireLock>
400150ac:	e1a06000 	mov	r6, r0
400150b0:	e3560000 	cmp	r6, #0
400150b4:	0a000001 	beq	400150c0 <CyU3PDmaChannelCacheControl+0x2c>
400150b8:	e1a00006 	mov	r0, r6
400150bc:	e8bd8070 	pop	{r4, r5, r6, pc}
400150c0:	e5940000 	ldr	r0, [r4]
400150c4:	e3500001 	cmp	r0, #1
400150c8:	1a000001 	bne	400150d4 <CyU3PDmaChannelCacheControl+0x40>
400150cc:	e5845038 	str	r5, [r4, #56]	; 0x38
400150d0:	ea000000 	b	400150d8 <CyU3PDmaChannelCacheControl+0x44>
400150d4:	e3a06047 	mov	r6, #71	; 0x47
400150d8:	e284003c 	add	r0, r4, #60	; 0x3c
400150dc:	ebffd3e9 	bl	4000a088 <_txe_mutex_put>
400150e0:	e1a00006 	mov	r0, r6
400150e4:	eafffff4 	b	400150bc <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

400150e8 <CyU3PDmaChannelCommitBuffer>:
400150e8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400150ec:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400150f0:	e1a04000 	mov	r4, r0
400150f4:	e1a05001 	mov	r5, r1
400150f8:	e1a06002 	mov	r6, r2
400150fc:	e3e01000 	mvn	r1, #0
40015100:	e1a00004 	mov	r0, r4
40015104:	ebffffcd 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40015108:	e1a09000 	mov	r9, r0
4001510c:	e3590000 	cmp	r9, #0
40015110:	0a000002 	beq	40015120 <CyU3PDmaChannelCommitBuffer+0x38>
40015114:	e1a00009 	mov	r0, r9
40015118:	e28dd03c 	add	sp, sp, #60	; 0x3c
4001511c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015120:	e1d400b6 	ldrh	r0, [r4, #6]
40015124:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015128:	e0400001 	sub	r0, r0, r1
4001512c:	e1500005 	cmp	r0, r5
40015130:	aa000000 	bge	40015138 <CyU3PDmaChannelCommitBuffer+0x50>
40015134:	e3a09040 	mov	r9, #64	; 0x40
40015138:	e5940000 	ldr	r0, [r4]
4001513c:	e3500002 	cmp	r0, #2
40015140:	0a000000 	beq	40015148 <CyU3PDmaChannelCommitBuffer+0x60>
40015144:	e3a09042 	mov	r9, #66	; 0x42
40015148:	e1d400b4 	ldrh	r0, [r4, #4]
4001514c:	e3500003 	cmp	r0, #3
40015150:	1a000000 	bne	40015158 <CyU3PDmaChannelCommitBuffer+0x70>
40015154:	e3a09046 	mov	r9, #70	; 0x46
40015158:	e3590000 	cmp	r9, #0
4001515c:	0a000003 	beq	40015170 <CyU3PDmaChannelCommitBuffer+0x88>
40015160:	e284003c 	add	r0, r4, #60	; 0x3c
40015164:	ebffd3c7 	bl	4000a088 <_txe_mutex_put>
40015168:	e1a00009 	mov	r0, r9
4001516c:	eaffffe9 	b	40015118 <CyU3PDmaChannelCommitBuffer+0x30>
40015170:	e1d400b4 	ldrh	r0, [r4, #4]
40015174:	e20070ff 	and	r7, r0, #255	; 0xff
40015178:	e3570002 	cmp	r7, #2
4001517c:	1a000037 	bne	40015260 <CyU3PDmaChannelCommitBuffer+0x178>
40015180:	e1d401b6 	ldrh	r0, [r4, #22]
40015184:	e28d1014 	add	r1, sp, #20
40015188:	eb0034ae 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001518c:	e1d401b8 	ldrh	r0, [r4, #24]
40015190:	e28d1004 	add	r1, sp, #4
40015194:	eb0034ab 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015198:	e59d0020 	ldr	r0, [sp, #32]
4001519c:	e3100008 	tst	r0, #8
400151a0:	1a000000 	bne	400151a8 <CyU3PDmaChannelCommitBuffer+0xc0>
400151a4:	e3a09047 	mov	r9, #71	; 0x47
400151a8:	e59d0010 	ldr	r0, [sp, #16]
400151ac:	e3100008 	tst	r0, #8
400151b0:	0a000000 	beq	400151b8 <CyU3PDmaChannelCommitBuffer+0xd0>
400151b4:	e3a09047 	mov	r9, #71	; 0x47
400151b8:	e3590000 	cmp	r9, #0
400151bc:	1a000080 	bne	400153c4 <CyU3PDmaChannelCommitBuffer+0x2dc>
400151c0:	e59d0010 	ldr	r0, [sp, #16]
400151c4:	e59f1208 	ldr	r1, [pc, #520]	; 400153d4 <CyU3PDmaChannelCommitBuffer+0x2ec>
400151c8:	e0000001 	and	r0, r0, r1
400151cc:	e58d0010 	str	r0, [sp, #16]
400151d0:	e59d0010 	ldr	r0, [sp, #16]
400151d4:	e1800805 	orr	r0, r0, r5, lsl #16
400151d8:	e58d0010 	str	r0, [sp, #16]
400151dc:	e3560000 	cmp	r6, #0
400151e0:	1a000005 	bne	400151fc <CyU3PDmaChannelCommitBuffer+0x114>
400151e4:	e59d1020 	ldr	r1, [sp, #32]
400151e8:	e201100f 	and	r1, r1, #15
400151ec:	e59d0010 	ldr	r0, [sp, #16]
400151f0:	e1800001 	orr	r0, r0, r1
400151f4:	e58d0010 	str	r0, [sp, #16]
400151f8:	ea000004 	b	40015210 <CyU3PDmaChannelCommitBuffer+0x128>
400151fc:	e206100e 	and	r1, r6, #14
40015200:	e3811008 	orr	r1, r1, #8
40015204:	e59d0010 	ldr	r0, [sp, #16]
40015208:	e1800001 	orr	r0, r0, r1
4001520c:	e58d0010 	str	r0, [sp, #16]
40015210:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015214:	e3500000 	cmp	r0, #0
40015218:	0a000004 	beq	40015230 <CyU3PDmaChannelCommitBuffer+0x148>
4001521c:	e59d2010 	ldr	r2, [sp, #16]
40015220:	e59f31ac 	ldr	r3, [pc, #428]	; 400153d4 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015224:	e0021003 	and	r1, r2, r3
40015228:	e59d0004 	ldr	r0, [sp, #4]
4001522c:	ebfff34a 	bl	40011f5c <CyU3PSysCleanDRegion>
40015230:	e1d401b8 	ldrh	r0, [r4, #24]
40015234:	e28d1004 	add	r1, sp, #4
40015238:	eb00349d 	bl	400224b4 <CyU3PDmaDscrSetConfig>
4001523c:	e1d411b8 	ldrh	r1, [r4, #24]
40015240:	e1d401b2 	ldrh	r0, [r4, #18]
40015244:	e3a02001 	mov	r2, #1
40015248:	ebfffeb8 	bl	40014d30 <CyU3PDmaSocketSendEvent>
4001524c:	e59d001c 	ldr	r0, [sp, #28]
40015250:	e1c401b6 	strh	r0, [r4, #22]
40015254:	e59d000c 	ldr	r0, [sp, #12]
40015258:	e1c401b8 	strh	r0, [r4, #24]
4001525c:	ea000058 	b	400153c4 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015260:	e3570004 	cmp	r7, #4
40015264:	1a000027 	bne	40015308 <CyU3PDmaChannelCommitBuffer+0x220>
40015268:	e1d401b8 	ldrh	r0, [r4, #24]
4001526c:	e28d1004 	add	r1, sp, #4
40015270:	eb003474 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015274:	e59d0010 	ldr	r0, [sp, #16]
40015278:	e3100008 	tst	r0, #8
4001527c:	0a000000 	beq	40015284 <CyU3PDmaChannelCommitBuffer+0x19c>
40015280:	e3a09047 	mov	r9, #71	; 0x47
40015284:	e3590000 	cmp	r9, #0
40015288:	1a00004d 	bne	400153c4 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001528c:	e59d0010 	ldr	r0, [sp, #16]
40015290:	e1a00800 	lsl	r0, r0, #16
40015294:	e1a00820 	lsr	r0, r0, #16
40015298:	e58d0010 	str	r0, [sp, #16]
4001529c:	e3a01008 	mov	r1, #8
400152a0:	e1811805 	orr	r1, r1, r5, lsl #16
400152a4:	e59d0010 	ldr	r0, [sp, #16]
400152a8:	e1800001 	orr	r0, r0, r1
400152ac:	e58d0010 	str	r0, [sp, #16]
400152b0:	e206100e 	and	r1, r6, #14
400152b4:	e59d0010 	ldr	r0, [sp, #16]
400152b8:	e1800001 	orr	r0, r0, r1
400152bc:	e58d0010 	str	r0, [sp, #16]
400152c0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400152c4:	e3500000 	cmp	r0, #0
400152c8:	0a000004 	beq	400152e0 <CyU3PDmaChannelCommitBuffer+0x1f8>
400152cc:	e59d2010 	ldr	r2, [sp, #16]
400152d0:	e59f30fc 	ldr	r3, [pc, #252]	; 400153d4 <CyU3PDmaChannelCommitBuffer+0x2ec>
400152d4:	e0021003 	and	r1, r2, r3
400152d8:	e59d0004 	ldr	r0, [sp, #4]
400152dc:	ebfff31e 	bl	40011f5c <CyU3PSysCleanDRegion>
400152e0:	e1d401b8 	ldrh	r0, [r4, #24]
400152e4:	e28d1004 	add	r1, sp, #4
400152e8:	eb003471 	bl	400224b4 <CyU3PDmaDscrSetConfig>
400152ec:	e1d411b8 	ldrh	r1, [r4, #24]
400152f0:	e1d401b2 	ldrh	r0, [r4, #18]
400152f4:	e3a02001 	mov	r2, #1
400152f8:	ebfffe8c 	bl	40014d30 <CyU3PDmaSocketSendEvent>
400152fc:	e59d000c 	ldr	r0, [sp, #12]
40015300:	e1c401b8 	strh	r0, [r4, #24]
40015304:	ea00002e 	b	400153c4 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015308:	e1d401b2 	ldrh	r0, [r4, #18]
4001530c:	e28d1024 	add	r1, sp, #36	; 0x24
40015310:	ebfffdee 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40015314:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40015318:	e3100702 	tst	r0, #524288	; 0x80000
4001531c:	0a000027 	beq	400153c0 <CyU3PDmaChannelCommitBuffer+0x2d8>
40015320:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40015324:	e1a08800 	lsl	r8, r0, #16
40015328:	e1a08828 	lsr	r8, r8, #16
4001532c:	e28d1004 	add	r1, sp, #4
40015330:	e1a00008 	mov	r0, r8
40015334:	eb003443 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015338:	e59d0010 	ldr	r0, [sp, #16]
4001533c:	e3100008 	tst	r0, #8
40015340:	0a00001c 	beq	400153b8 <CyU3PDmaChannelCommitBuffer+0x2d0>
40015344:	e59d0010 	ldr	r0, [sp, #16]
40015348:	e1a00800 	lsl	r0, r0, #16
4001534c:	e1a00820 	lsr	r0, r0, #16
40015350:	e58d0010 	str	r0, [sp, #16]
40015354:	e59d0010 	ldr	r0, [sp, #16]
40015358:	e1800805 	orr	r0, r0, r5, lsl #16
4001535c:	e58d0010 	str	r0, [sp, #16]
40015360:	e3560000 	cmp	r6, #0
40015364:	0a000007 	beq	40015388 <CyU3PDmaChannelCommitBuffer+0x2a0>
40015368:	e59d0010 	ldr	r0, [sp, #16]
4001536c:	e3c0000f 	bic	r0, r0, #15
40015370:	e58d0010 	str	r0, [sp, #16]
40015374:	e206100e 	and	r1, r6, #14
40015378:	e3811008 	orr	r1, r1, #8
4001537c:	e59d0010 	ldr	r0, [sp, #16]
40015380:	e1800001 	orr	r0, r0, r1
40015384:	e58d0010 	str	r0, [sp, #16]
40015388:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001538c:	e3500000 	cmp	r0, #0
40015390:	0a000004 	beq	400153a8 <CyU3PDmaChannelCommitBuffer+0x2c0>
40015394:	e59d2010 	ldr	r2, [sp, #16]
40015398:	e59f3034 	ldr	r3, [pc, #52]	; 400153d4 <CyU3PDmaChannelCommitBuffer+0x2ec>
4001539c:	e0021003 	and	r1, r2, r3
400153a0:	e59d0004 	ldr	r0, [sp, #4]
400153a4:	ebfff2ec 	bl	40011f5c <CyU3PSysCleanDRegion>
400153a8:	e28d1004 	add	r1, sp, #4
400153ac:	e1a00008 	mov	r0, r8
400153b0:	eb00343f 	bl	400224b4 <CyU3PDmaDscrSetConfig>
400153b4:	ea000002 	b	400153c4 <CyU3PDmaChannelCommitBuffer+0x2dc>
400153b8:	e3a09047 	mov	r9, #71	; 0x47
400153bc:	ea000000 	b	400153c4 <CyU3PDmaChannelCommitBuffer+0x2dc>
400153c0:	e3a09047 	mov	r9, #71	; 0x47
400153c4:	e284003c 	add	r0, r4, #60	; 0x3c
400153c8:	ebffd32e 	bl	4000a088 <_txe_mutex_put>
400153cc:	e1a00009 	mov	r0, r9
400153d0:	eaffff50 	b	40015118 <CyU3PDmaChannelCommitBuffer+0x30>
400153d4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

400153d8 <CyU3PDmaChannelConfigure_TypeAuto>:
400153d8:	e92d4070 	push	{r4, r5, r6, lr}
400153dc:	e1a05000 	mov	r5, r0
400153e0:	e1d501b2 	ldrh	r0, [r5, #18]
400153e4:	e3806901 	orr	r6, r0, #16384	; 0x4000
400153e8:	e1d501b0 	ldrh	r0, [r5, #16]
400153ec:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400153f0:	e1810800 	orr	r0, r1, r0, lsl #16
400153f4:	e1866000 	orr	r6, r6, r0
400153f8:	e1d500b4 	ldrh	r0, [r5, #4]
400153fc:	e3500001 	cmp	r0, #1
40015400:	1a000000 	bne	40015408 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
40015404:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40015408:	e1d520b6 	ldrh	r2, [r5, #6]
4001540c:	e1d510b8 	ldrh	r1, [r5, #8]
40015410:	e1a03006 	mov	r3, r6
40015414:	e285000c 	add	r0, r5, #12
40015418:	eb00331b 	bl	4002208c <CyU3PDmaDscrChainCreate>
4001541c:	e1a04000 	mov	r4, r0
40015420:	e3540000 	cmp	r4, #0
40015424:	0a000001 	beq	40015430 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
40015428:	e1a00004 	mov	r0, r4
4001542c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015430:	e1d500bc 	ldrh	r0, [r5, #12]
40015434:	e1c501b6 	strh	r0, [r5, #22]
40015438:	e1c501ba 	strh	r0, [r5, #26]
4001543c:	e1c501be 	strh	r0, [r5, #30]
40015440:	e1d500be 	ldrh	r0, [r5, #14]
40015444:	e1c501b8 	strh	r0, [r5, #24]
40015448:	e1c501bc 	strh	r0, [r5, #28]
4001544c:	e1c502b0 	strh	r0, [r5, #32]
40015450:	e2850014 	add	r0, r5, #20
40015454:	eb003383 	bl	40022268 <CyU3PDmaDscrGet>
40015458:	e1a00005 	mov	r0, r5
4001545c:	eb0006b7 	bl	40016f40 <CyU3PDmaConfigureSockets_TypeAuto>
40015460:	e3a00000 	mov	r0, #0
40015464:	eafffff0 	b	4001542c <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

40015468 <CyU3PDmaChannelConfigure_TypeManual>:
40015468:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001546c:	e24dd024 	sub	sp, sp, #36	; 0x24
40015470:	e1a04000 	mov	r4, r0
40015474:	e284700c 	add	r7, r4, #12
40015478:	e3a06cff 	mov	r6, #65280	; 0xff00
4001547c:	e1d401b0 	ldrh	r0, [r4, #16]
40015480:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015484:	e1810800 	orr	r0, r1, r0, lsl #16
40015488:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001548c:	e1866000 	orr	r6, r6, r0
40015490:	e1d400b4 	ldrh	r0, [r4, #4]
40015494:	e3500003 	cmp	r0, #3
40015498:	1a000002 	bne	400154a8 <CyU3PDmaChannelConfigure_TypeManual+0x40>
4001549c:	e3a00c3f 	mov	r0, #16128	; 0x3f00
400154a0:	e1c401b2 	strh	r0, [r4, #18]
400154a4:	ea000009 	b	400154d0 <CyU3PDmaChannelConfigure_TypeManual+0x68>
400154a8:	e1d400b4 	ldrh	r0, [r4, #4]
400154ac:	e3500004 	cmp	r0, #4
400154b0:	1a000006 	bne	400154d0 <CyU3PDmaChannelConfigure_TypeManual+0x68>
400154b4:	e59f020c 	ldr	r0, [pc, #524]	; 400156c8 <CyU3PDmaChannelConfigure_TypeManual+0x260>
400154b8:	e1c401b0 	strh	r0, [r4, #16]
400154bc:	e284700e 	add	r7, r4, #14
400154c0:	e1d401b2 	ldrh	r0, [r4, #18]
400154c4:	e3806903 	orr	r6, r0, #49152	; 0xc000
400154c8:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400154cc:	e3866801 	orr	r6, r6, #65536	; 0x10000
400154d0:	e1d400b8 	ldrh	r0, [r4, #8]
400154d4:	e3500000 	cmp	r0, #0
400154d8:	0a00006b 	beq	4001568c <CyU3PDmaChannelConfigure_TypeManual+0x224>
400154dc:	e1d420b6 	ldrh	r2, [r4, #6]
400154e0:	e1d410b8 	ldrh	r1, [r4, #8]
400154e4:	e1a03006 	mov	r3, r6
400154e8:	e1a00007 	mov	r0, r7
400154ec:	eb0032e6 	bl	4002208c <CyU3PDmaDscrChainCreate>
400154f0:	e1a05000 	mov	r5, r0
400154f4:	e3550000 	cmp	r5, #0
400154f8:	0a000002 	beq	40015508 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
400154fc:	e1a00005 	mov	r0, r5
40015500:	e28dd024 	add	sp, sp, #36	; 0x24
40015504:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015508:	e1d400b4 	ldrh	r0, [r4, #4]
4001550c:	e3500002 	cmp	r0, #2
40015510:	1a000012 	bne	40015560 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015514:	e1d401b2 	ldrh	r0, [r4, #18]
40015518:	e3806903 	orr	r6, r0, #49152	; 0xc000
4001551c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015520:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015524:	e1d410b8 	ldrh	r1, [r4, #8]
40015528:	e1a03006 	mov	r3, r6
4001552c:	e3a02000 	mov	r2, #0
40015530:	e284000e 	add	r0, r4, #14
40015534:	eb0032d4 	bl	4002208c <CyU3PDmaDscrChainCreate>
40015538:	e1a05000 	mov	r5, r0
4001553c:	e3550000 	cmp	r5, #0
40015540:	0a000006 	beq	40015560 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015544:	e1d410b8 	ldrh	r1, [r4, #8]
40015548:	e1d700b0 	ldrh	r0, [r7]
4001554c:	e3a03001 	mov	r3, #1
40015550:	e1a02003 	mov	r2, r3
40015554:	eb003320 	bl	400221dc <CyU3PDmaDscrChainDestroy>
40015558:	e1a00005 	mov	r0, r5
4001555c:	eaffffe7 	b	40015500 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015560:	e1d400bc 	ldrh	r0, [r4, #12]
40015564:	e1c401b6 	strh	r0, [r4, #22]
40015568:	e1c401ba 	strh	r0, [r4, #26]
4001556c:	e1c401be 	strh	r0, [r4, #30]
40015570:	e1d400be 	ldrh	r0, [r4, #14]
40015574:	e1c401b8 	strh	r0, [r4, #24]
40015578:	e1c401bc 	strh	r0, [r4, #28]
4001557c:	e1c402b0 	strh	r0, [r4, #32]
40015580:	e3a08000 	mov	r8, #0
40015584:	e1d790b0 	ldrh	r9, [r7]
40015588:	ea00003b 	b	4001567c <CyU3PDmaChannelConfigure_TypeManual+0x214>
4001558c:	e28d1014 	add	r1, sp, #20
40015590:	e1a00009 	mov	r0, r9
40015594:	eb0033ab 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015598:	e1d400b4 	ldrh	r0, [r4, #4]
4001559c:	e3500004 	cmp	r0, #4
400155a0:	1a00000b 	bne	400155d4 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
400155a4:	e59d0014 	ldr	r0, [sp, #20]
400155a8:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155ac:	e0800001 	add	r0, r0, r1
400155b0:	e58d0014 	str	r0, [sp, #20]
400155b4:	e1d400b6 	ldrh	r0, [r4, #6]
400155b8:	e280000f 	add	r0, r0, #15
400155bc:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155c0:	e0400001 	sub	r0, r0, r1
400155c4:	e59f1100 	ldr	r1, [pc, #256]	; 400156cc <CyU3PDmaChannelConfigure_TypeManual+0x264>
400155c8:	e0000001 	and	r0, r0, r1
400155cc:	e58d0020 	str	r0, [sp, #32]
400155d0:	ea000021 	b	4001565c <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
400155d4:	e1d400b4 	ldrh	r0, [r4, #4]
400155d8:	e3500002 	cmp	r0, #2
400155dc:	1a000012 	bne	4001562c <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
400155e0:	e1d401b8 	ldrh	r0, [r4, #24]
400155e4:	e28d1004 	add	r1, sp, #4
400155e8:	eb003396 	bl	40022448 <CyU3PDmaDscrGetConfig>
400155ec:	e59d0014 	ldr	r0, [sp, #20]
400155f0:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155f4:	e0800001 	add	r0, r0, r1
400155f8:	e58d0004 	str	r0, [sp, #4]
400155fc:	e1d400b6 	ldrh	r0, [r4, #6]
40015600:	e280000f 	add	r0, r0, #15
40015604:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015608:	e0400001 	sub	r0, r0, r1
4001560c:	e59f10b8 	ldr	r1, [pc, #184]	; 400156cc <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015610:	e0000001 	and	r0, r0, r1
40015614:	e58d0010 	str	r0, [sp, #16]
40015618:	e1d401b8 	ldrh	r0, [r4, #24]
4001561c:	e28d1004 	add	r1, sp, #4
40015620:	eb0033a3 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40015624:	e59d000c 	ldr	r0, [sp, #12]
40015628:	e1c401b8 	strh	r0, [r4, #24]
4001562c:	e59d0014 	ldr	r0, [sp, #20]
40015630:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015634:	e0800001 	add	r0, r0, r1
40015638:	e58d0014 	str	r0, [sp, #20]
4001563c:	e1d400b6 	ldrh	r0, [r4, #6]
40015640:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015644:	e0400001 	sub	r0, r0, r1
40015648:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
4001564c:	e0400001 	sub	r0, r0, r1
40015650:	e59f1074 	ldr	r1, [pc, #116]	; 400156cc <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015654:	e0000001 	and	r0, r0, r1
40015658:	e58d0020 	str	r0, [sp, #32]
4001565c:	e28d1014 	add	r1, sp, #20
40015660:	e1a00009 	mov	r0, r9
40015664:	eb003392 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40015668:	e59d001c 	ldr	r0, [sp, #28]
4001566c:	e1a09800 	lsl	r9, r0, #16
40015670:	e1a09829 	lsr	r9, r9, #16
40015674:	e2880001 	add	r0, r8, #1
40015678:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001567c:	e1d400b8 	ldrh	r0, [r4, #8]
40015680:	e1500008 	cmp	r0, r8
40015684:	caffffc0 	bgt	4001558c <CyU3PDmaChannelConfigure_TypeManual+0x124>
40015688:	ea000008 	b	400156b0 <CyU3PDmaChannelConfigure_TypeManual+0x248>
4001568c:	e59f003c 	ldr	r0, [pc, #60]	; 400156d0 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015690:	e1c400bc 	strh	r0, [r4, #12]
40015694:	e1c401b6 	strh	r0, [r4, #22]
40015698:	e1c401ba 	strh	r0, [r4, #26]
4001569c:	e1c401be 	strh	r0, [r4, #30]
400156a0:	e1c400be 	strh	r0, [r4, #14]
400156a4:	e1c401b8 	strh	r0, [r4, #24]
400156a8:	e1c401bc 	strh	r0, [r4, #28]
400156ac:	e1c402b0 	strh	r0, [r4, #32]
400156b0:	e2840014 	add	r0, r4, #20
400156b4:	eb0032eb 	bl	40022268 <CyU3PDmaDscrGet>
400156b8:	e1a00004 	mov	r0, r4
400156bc:	eb00065f 	bl	40017040 <CyU3PDmaConfigureSockets_TypeManual>
400156c0:	e3a00000 	mov	r0, #0
400156c4:	eaffff8d 	b	40015500 <CyU3PDmaChannelConfigure_TypeManual+0x98>
400156c8:	00003f01 	.word	0x00003f01
400156cc:	0000fff0 	.word	0x0000fff0
400156d0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

400156d4 <CyU3PDmaChannelCreate>:
400156d4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400156d8:	e1a04000 	mov	r4, r0
400156dc:	e1a05001 	mov	r5, r1
400156e0:	e1a06002 	mov	r6, r2
400156e4:	e3560000 	cmp	r6, #0
400156e8:	1a000001 	bne	400156f4 <CyU3PDmaChannelCreate+0x20>
400156ec:	e3a00041 	mov	r0, #65	; 0x41
400156f0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400156f4:	e3540000 	cmp	r4, #0
400156f8:	1a000001 	bne	40015704 <CyU3PDmaChannelCreate+0x30>
400156fc:	e3a00041 	mov	r0, #65	; 0x41
40015700:	eafffffa 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015704:	eb00330f 	bl	40022348 <CyU3PDmaDscrGetFreeCount>
40015708:	e1d610b2 	ldrh	r1, [r6, #2]
4001570c:	e2811001 	add	r1, r1, #1
40015710:	e1500001 	cmp	r0, r1
40015714:	da000007 	ble	40015738 <CyU3PDmaChannelCreate+0x64>
40015718:	e3550002 	cmp	r5, #2
4001571c:	1a000007 	bne	40015740 <CyU3PDmaChannelCreate+0x6c>
40015720:	eb003308 	bl	40022348 <CyU3PDmaDscrGetFreeCount>
40015724:	e1d610b2 	ldrh	r1, [r6, #2]
40015728:	e3a02001 	mov	r2, #1
4001572c:	e0821101 	add	r1, r2, r1, lsl #2
40015730:	e1500001 	cmp	r0, r1
40015734:	ca000001 	bgt	40015740 <CyU3PDmaChannelCreate+0x6c>
40015738:	e3a00010 	mov	r0, #16
4001573c:	eaffffeb 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015740:	e1d600b0 	ldrh	r0, [r6]
40015744:	e3500000 	cmp	r0, #0
40015748:	0a000003 	beq	4001575c <CyU3PDmaChannelCreate+0x88>
4001574c:	e1d600b0 	ldrh	r0, [r6]
40015750:	e59f1354 	ldr	r1, [pc, #852]	; 40015aac <CyU3PDmaChannelCreate+0x3d8>
40015754:	e1500001 	cmp	r0, r1
40015758:	da000001 	ble	40015764 <CyU3PDmaChannelCreate+0x90>
4001575c:	e3a00040 	mov	r0, #64	; 0x40
40015760:	eaffffe2 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015764:	e3550000 	cmp	r5, #0
40015768:	0a000001 	beq	40015774 <CyU3PDmaChannelCreate+0xa0>
4001576c:	e3550001 	cmp	r5, #1
40015770:	1a000009 	bne	4001579c <CyU3PDmaChannelCreate+0xc8>
40015774:	e1d600b0 	ldrh	r0, [r6]
40015778:	e310000f 	tst	r0, #15
4001577c:	0a000001 	beq	40015788 <CyU3PDmaChannelCreate+0xb4>
40015780:	e3a00040 	mov	r0, #64	; 0x40
40015784:	eaffffd9 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015788:	e1d600b2 	ldrh	r0, [r6, #2]
4001578c:	e3500000 	cmp	r0, #0
40015790:	1a00000b 	bne	400157c4 <CyU3PDmaChannelCreate+0xf0>
40015794:	e3a00040 	mov	r0, #64	; 0x40
40015798:	eaffffd4 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
4001579c:	e1d600b0 	ldrh	r0, [r6]
400157a0:	e1d610ba 	ldrh	r1, [r6, #10]
400157a4:	e0400001 	sub	r0, r0, r1
400157a8:	e1d610bc 	ldrh	r1, [r6, #12]
400157ac:	e0400001 	sub	r0, r0, r1
400157b0:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
400157b4:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
400157b8:	0a000001 	beq	400157c4 <CyU3PDmaChannelCreate+0xf0>
400157bc:	e3a00040 	mov	r0, #64	; 0x40
400157c0:	eaffffca 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
400157c4:	e5d60010 	ldrb	r0, [r6, #16]
400157c8:	e3500002 	cmp	r0, #2
400157cc:	ba000001 	blt	400157d8 <CyU3PDmaChannelCreate+0x104>
400157d0:	e3a00040 	mov	r0, #64	; 0x40
400157d4:	eaffffc5 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
400157d8:	e3550004 	cmp	r5, #4
400157dc:	0a000011 	beq	40015828 <CyU3PDmaChannelCreate+0x154>
400157e0:	e1d600b4 	ldrh	r0, [r6, #4]
400157e4:	e3a0103f 	mov	r1, #63	; 0x3f
400157e8:	e0018440 	and	r8, r1, r0, asr #8
400157ec:	e1d600b4 	ldrh	r0, [r6, #4]
400157f0:	e20090ff 	and	r9, r0, #255	; 0xff
400157f4:	e1d600b4 	ldrh	r0, [r6, #4]
400157f8:	ebfffd14 	bl	40014c50 <CyU3PDmaSocketIsValidProducer>
400157fc:	e3500000 	cmp	r0, #0
40015800:	1a000001 	bne	4001580c <CyU3PDmaChannelCreate+0x138>
40015804:	e3a00040 	mov	r0, #64	; 0x40
40015808:	eaffffb8 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
4001580c:	e59f029c 	ldr	r0, [pc, #668]	; 40015ab0 <CyU3PDmaChannelCreate+0x3dc>
40015810:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015814:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015818:	e3500000 	cmp	r0, #0
4001581c:	0a000007 	beq	40015840 <CyU3PDmaChannelCreate+0x16c>
40015820:	e3a00040 	mov	r0, #64	; 0x40
40015824:	eaffffb1 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015828:	e1d600b4 	ldrh	r0, [r6, #4]
4001582c:	e59f1280 	ldr	r1, [pc, #640]	; 40015ab4 <CyU3PDmaChannelCreate+0x3e0>
40015830:	e1500001 	cmp	r0, r1
40015834:	0a000001 	beq	40015840 <CyU3PDmaChannelCreate+0x16c>
40015838:	e3a00040 	mov	r0, #64	; 0x40
4001583c:	eaffffab 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015840:	e3550003 	cmp	r5, #3
40015844:	0a000011 	beq	40015890 <CyU3PDmaChannelCreate+0x1bc>
40015848:	e1d600b6 	ldrh	r0, [r6, #6]
4001584c:	e3a0103f 	mov	r1, #63	; 0x3f
40015850:	e0018440 	and	r8, r1, r0, asr #8
40015854:	e1d600b6 	ldrh	r0, [r6, #6]
40015858:	e20090ff 	and	r9, r0, #255	; 0xff
4001585c:	e1d600b6 	ldrh	r0, [r6, #6]
40015860:	ebfffcc2 	bl	40014b70 <CyU3PDmaSocketIsValidConsumer>
40015864:	e3500000 	cmp	r0, #0
40015868:	1a000001 	bne	40015874 <CyU3PDmaChannelCreate+0x1a0>
4001586c:	e3a00040 	mov	r0, #64	; 0x40
40015870:	eaffff9e 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015874:	e59f0234 	ldr	r0, [pc, #564]	; 40015ab0 <CyU3PDmaChannelCreate+0x3dc>
40015878:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001587c:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015880:	e3500000 	cmp	r0, #0
40015884:	0a000006 	beq	400158a4 <CyU3PDmaChannelCreate+0x1d0>
40015888:	e3a00040 	mov	r0, #64	; 0x40
4001588c:	eaffff97 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015890:	e1d600b6 	ldrh	r0, [r6, #6]
40015894:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015898:	0a000001 	beq	400158a4 <CyU3PDmaChannelCreate+0x1d0>
4001589c:	e3a00040 	mov	r0, #64	; 0x40
400158a0:	eaffff92 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
400158a4:	e1d600b8 	ldrh	r0, [r6, #8]
400158a8:	e3500000 	cmp	r0, #0
400158ac:	0a000008 	beq	400158d4 <CyU3PDmaChannelCreate+0x200>
400158b0:	e1d600b8 	ldrh	r0, [r6, #8]
400158b4:	e1d610b2 	ldrh	r1, [r6, #2]
400158b8:	e1500001 	cmp	r0, r1
400158bc:	aa000002 	bge	400158cc <CyU3PDmaChannelCreate+0x1f8>
400158c0:	e1d600b2 	ldrh	r0, [r6, #2]
400158c4:	e350001f 	cmp	r0, #31
400158c8:	da000001 	ble	400158d4 <CyU3PDmaChannelCreate+0x200>
400158cc:	e3a00040 	mov	r0, #64	; 0x40
400158d0:	eaffff86 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
400158d4:	e3550004 	cmp	r5, #4
400158d8:	0a000007 	beq	400158fc <CyU3PDmaChannelCreate+0x228>
400158dc:	e1d600b4 	ldrh	r0, [r6, #4]
400158e0:	e3a0103f 	mov	r1, #63	; 0x3f
400158e4:	e0018440 	and	r8, r1, r0, asr #8
400158e8:	e1d600b4 	ldrh	r0, [r6, #4]
400158ec:	e20090ff 	and	r9, r0, #255	; 0xff
400158f0:	e59f01b8 	ldr	r0, [pc, #440]	; 40015ab0 <CyU3PDmaChannelCreate+0x3dc>
400158f4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400158f8:	e7804109 	str	r4, [r0, r9, lsl #2]
400158fc:	e3550003 	cmp	r5, #3
40015900:	0a000007 	beq	40015924 <CyU3PDmaChannelCreate+0x250>
40015904:	e1d600b6 	ldrh	r0, [r6, #6]
40015908:	e3a0103f 	mov	r1, #63	; 0x3f
4001590c:	e0018440 	and	r8, r1, r0, asr #8
40015910:	e1d600b6 	ldrh	r0, [r6, #6]
40015914:	e20090ff 	and	r9, r0, #255	; 0xff
40015918:	e59f0190 	ldr	r0, [pc, #400]	; 40015ab0 <CyU3PDmaChannelCreate+0x3dc>
4001591c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015920:	e7804109 	str	r4, [r0, r9, lsl #2]
40015924:	e1c450b4 	strh	r5, [r4, #4]
40015928:	e1d600b0 	ldrh	r0, [r6]
4001592c:	e1c400b6 	strh	r0, [r4, #6]
40015930:	e1d600b2 	ldrh	r0, [r6, #2]
40015934:	e1c400b8 	strh	r0, [r4, #8]
40015938:	e1d600b8 	ldrh	r0, [r6, #8]
4001593c:	e1c400ba 	strh	r0, [r4, #10]
40015940:	e1d600b4 	ldrh	r0, [r6, #4]
40015944:	e1c401b0 	strh	r0, [r4, #16]
40015948:	e1d600b6 	ldrh	r0, [r6, #6]
4001594c:	e1c401b2 	strh	r0, [r4, #18]
40015950:	e1d600ba 	ldrh	r0, [r6, #10]
40015954:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015958:	e1d600bc 	ldrh	r0, [r6, #12]
4001595c:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015960:	e1d600be 	ldrh	r0, [r6, #14]
40015964:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015968:	e5d60010 	ldrb	r0, [r6, #16]
4001596c:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015970:	e5960014 	ldr	r0, [r6, #20]
40015974:	e5840030 	str	r0, [r4, #48]	; 0x30
40015978:	e3a00000 	mov	r0, #0
4001597c:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015980:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015984:	e3a03038 	mov	r3, #56	; 0x38
40015988:	e3a02000 	mov	r2, #0
4001598c:	e1a01002 	mov	r1, r2
40015990:	e284003c 	add	r0, r4, #60	; 0x3c
40015994:	ebffd108 	bl	40009dbc <_txe_mutex_create>
40015998:	e3a02028 	mov	r2, #40	; 0x28
4001599c:	e3a01000 	mov	r1, #0
400159a0:	e2840074 	add	r0, r4, #116	; 0x74
400159a4:	ebffd04a 	bl	40009ad4 <_txe_event_flags_create>
400159a8:	e5960018 	ldr	r0, [r6, #24]
400159ac:	e584009c 	str	r0, [r4, #156]	; 0x9c
400159b0:	e59f0100 	ldr	r0, [pc, #256]	; 40015ab8 <CyU3PDmaChannelCreate+0x3e4>
400159b4:	e5900000 	ldr	r0, [r0]
400159b8:	e5840038 	str	r0, [r4, #56]	; 0x38
400159bc:	e3550005 	cmp	r5, #5
400159c0:	308ff105 	addcc	pc, pc, r5, lsl #2
400159c4:	ea000011 	b	40015a10 <CyU3PDmaChannelCreate+0x33c>
400159c8:	ea000003 	b	400159dc <CyU3PDmaChannelCreate+0x308>
400159cc:	ea000004 	b	400159e4 <CyU3PDmaChannelCreate+0x310>
400159d0:	ea00000a 	b	40015a00 <CyU3PDmaChannelCreate+0x32c>
400159d4:	ea000006 	b	400159f4 <CyU3PDmaChannelCreate+0x320>
400159d8:	ea000007 	b	400159fc <CyU3PDmaChannelCreate+0x328>
400159dc:	e1a00000 	nop			; (mov r0, r0)
400159e0:	e1a00000 	nop			; (mov r0, r0)
400159e4:	e1a00004 	mov	r0, r4
400159e8:	ebfffe7a 	bl	400153d8 <CyU3PDmaChannelConfigure_TypeAuto>
400159ec:	e1a07000 	mov	r7, r0
400159f0:	ea000009 	b	40015a1c <CyU3PDmaChannelCreate+0x348>
400159f4:	e1a00000 	nop			; (mov r0, r0)
400159f8:	e1a00000 	nop			; (mov r0, r0)
400159fc:	e1a00000 	nop			; (mov r0, r0)
40015a00:	e1a00004 	mov	r0, r4
40015a04:	ebfffe97 	bl	40015468 <CyU3PDmaChannelConfigure_TypeManual>
40015a08:	e1a07000 	mov	r7, r0
40015a0c:	ea000002 	b	40015a1c <CyU3PDmaChannelCreate+0x348>
40015a10:	e1a00000 	nop			; (mov r0, r0)
40015a14:	e3a07040 	mov	r7, #64	; 0x40
40015a18:	e1a00000 	nop			; (mov r0, r0)
40015a1c:	e1a00000 	nop			; (mov r0, r0)
40015a20:	e3570000 	cmp	r7, #0
40015a24:	1a000002 	bne	40015a34 <CyU3PDmaChannelCreate+0x360>
40015a28:	e3a00001 	mov	r0, #1
40015a2c:	e5840000 	str	r0, [r4]
40015a30:	ea00001b 	b	40015aa4 <CyU3PDmaChannelCreate+0x3d0>
40015a34:	e284003c 	add	r0, r4, #60	; 0x3c
40015a38:	ebffd13d 	bl	40009f34 <_txe_mutex_delete>
40015a3c:	e2840074 	add	r0, r4, #116	; 0x74
40015a40:	ebffd073 	bl	40009c14 <_txe_event_flags_delete>
40015a44:	e3550004 	cmp	r5, #4
40015a48:	0a000008 	beq	40015a70 <CyU3PDmaChannelCreate+0x39c>
40015a4c:	e1d600b4 	ldrh	r0, [r6, #4]
40015a50:	e3a0103f 	mov	r1, #63	; 0x3f
40015a54:	e0018440 	and	r8, r1, r0, asr #8
40015a58:	e1d600b4 	ldrh	r0, [r6, #4]
40015a5c:	e20090ff 	and	r9, r0, #255	; 0xff
40015a60:	e3a00000 	mov	r0, #0
40015a64:	e59f1044 	ldr	r1, [pc, #68]	; 40015ab0 <CyU3PDmaChannelCreate+0x3dc>
40015a68:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015a6c:	e7810109 	str	r0, [r1, r9, lsl #2]
40015a70:	e3550003 	cmp	r5, #3
40015a74:	0a000008 	beq	40015a9c <CyU3PDmaChannelCreate+0x3c8>
40015a78:	e1d600b6 	ldrh	r0, [r6, #6]
40015a7c:	e3a0103f 	mov	r1, #63	; 0x3f
40015a80:	e0018440 	and	r8, r1, r0, asr #8
40015a84:	e1d600b6 	ldrh	r0, [r6, #6]
40015a88:	e20090ff 	and	r9, r0, #255	; 0xff
40015a8c:	e3a00000 	mov	r0, #0
40015a90:	e59f1018 	ldr	r1, [pc, #24]	; 40015ab0 <CyU3PDmaChannelCreate+0x3dc>
40015a94:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015a98:	e7810109 	str	r0, [r1, r9, lsl #2]
40015a9c:	e3a00000 	mov	r0, #0
40015aa0:	e5840000 	str	r0, [r4]
40015aa4:	e1a00007 	mov	r0, r7
40015aa8:	eaffff10 	b	400156f0 <CyU3PDmaChannelCreate+0x1c>
40015aac:	0000fff0 	.word	0x0000fff0
40015ab0:	40030d04 	.word	0x40030d04
40015ab4:	00003f01 	.word	0x00003f01
40015ab8:	40030c68 	.word	0x40030c68

Disassembly of section i.CyU3PDmaChannelDestroy:

40015abc <CyU3PDmaChannelDestroy>:
40015abc:	e92d4070 	push	{r4, r5, r6, lr}
40015ac0:	e1a04000 	mov	r4, r0
40015ac4:	e3e01000 	mvn	r1, #0
40015ac8:	e1a00004 	mov	r0, r4
40015acc:	ebfffd5b 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40015ad0:	e1a05000 	mov	r5, r0
40015ad4:	e3550000 	cmp	r5, #0
40015ad8:	0a000001 	beq	40015ae4 <CyU3PDmaChannelDestroy+0x28>
40015adc:	e1a00005 	mov	r0, r5
40015ae0:	e8bd8070 	pop	{r4, r5, r6, pc}
40015ae4:	e1d400b4 	ldrh	r0, [r4, #4]
40015ae8:	e3500005 	cmp	r0, #5
40015aec:	308ff100 	addcc	pc, pc, r0, lsl #2
40015af0:	ea00000f 	b	40015b34 <CyU3PDmaChannelDestroy+0x78>
40015af4:	ea000003 	b	40015b08 <CyU3PDmaChannelDestroy+0x4c>
40015af8:	ea000004 	b	40015b10 <CyU3PDmaChannelDestroy+0x54>
40015afc:	ea000009 	b	40015b28 <CyU3PDmaChannelDestroy+0x6c>
40015b00:	ea000005 	b	40015b1c <CyU3PDmaChannelDestroy+0x60>
40015b04:	ea000006 	b	40015b24 <CyU3PDmaChannelDestroy+0x68>
40015b08:	e1a00000 	nop			; (mov r0, r0)
40015b0c:	e1a00000 	nop			; (mov r0, r0)
40015b10:	e1a00004 	mov	r0, r4
40015b14:	eb000014 	bl	40015b6c <CyU3PDmaChannelDestroy_TypeAuto>
40015b18:	ea00000a 	b	40015b48 <CyU3PDmaChannelDestroy+0x8c>
40015b1c:	e1a00000 	nop			; (mov r0, r0)
40015b20:	e1a00000 	nop			; (mov r0, r0)
40015b24:	e1a00000 	nop			; (mov r0, r0)
40015b28:	e1a00004 	mov	r0, r4
40015b2c:	eb000043 	bl	40015c40 <CyU3PDmaChannelDestroy_TypeManual>
40015b30:	ea000004 	b	40015b48 <CyU3PDmaChannelDestroy+0x8c>
40015b34:	e1a00000 	nop			; (mov r0, r0)
40015b38:	e284003c 	add	r0, r4, #60	; 0x3c
40015b3c:	ebffd151 	bl	4000a088 <_txe_mutex_put>
40015b40:	e3a00040 	mov	r0, #64	; 0x40
40015b44:	eaffffe5 	b	40015ae0 <CyU3PDmaChannelDestroy+0x24>
40015b48:	e1a00000 	nop			; (mov r0, r0)
40015b4c:	e3a00000 	mov	r0, #0
40015b50:	e5840000 	str	r0, [r4]
40015b54:	e284003c 	add	r0, r4, #60	; 0x3c
40015b58:	ebffd0f5 	bl	40009f34 <_txe_mutex_delete>
40015b5c:	e2840074 	add	r0, r4, #116	; 0x74
40015b60:	ebffd02b 	bl	40009c14 <_txe_event_flags_delete>
40015b64:	e3a00000 	mov	r0, #0
40015b68:	eaffffdc 	b	40015ae0 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015b6c <CyU3PDmaChannelDestroy_TypeAuto>:
40015b6c:	e92d4070 	push	{r4, r5, r6, lr}
40015b70:	e24dd018 	sub	sp, sp, #24
40015b74:	e1a04000 	mov	r4, r0
40015b78:	e1d401b0 	ldrh	r0, [r4, #16]
40015b7c:	ebfffbbb 	bl	40014a70 <CyU3PDmaSocketDisable>
40015b80:	e1d401b2 	ldrh	r0, [r4, #18]
40015b84:	ebfffbb9 	bl	40014a70 <CyU3PDmaSocketDisable>
40015b88:	e1d401b0 	ldrh	r0, [r4, #16]
40015b8c:	e1a0100d 	mov	r1, sp
40015b90:	ebfffbce 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40015b94:	e59f009c 	ldr	r0, [pc, #156]	; 40015c38 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015b98:	e58d0000 	str	r0, [sp]
40015b9c:	e1d401b0 	ldrh	r0, [r4, #16]
40015ba0:	e1a0100d 	mov	r1, sp
40015ba4:	ebfffc73 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40015ba8:	e1d401b0 	ldrh	r0, [r4, #16]
40015bac:	e20050ff 	and	r5, r0, #255	; 0xff
40015bb0:	e1d401b0 	ldrh	r0, [r4, #16]
40015bb4:	e3a0103f 	mov	r1, #63	; 0x3f
40015bb8:	e0016440 	and	r6, r1, r0, asr #8
40015bbc:	e3a00000 	mov	r0, #0
40015bc0:	e59f1074 	ldr	r1, [pc, #116]	; 40015c3c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015bc4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015bc8:	e7810105 	str	r0, [r1, r5, lsl #2]
40015bcc:	e1d401b2 	ldrh	r0, [r4, #18]
40015bd0:	e1a0100d 	mov	r1, sp
40015bd4:	ebfffbbd 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40015bd8:	e59f0058 	ldr	r0, [pc, #88]	; 40015c38 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015bdc:	e58d0000 	str	r0, [sp]
40015be0:	e1d401b2 	ldrh	r0, [r4, #18]
40015be4:	e1a0100d 	mov	r1, sp
40015be8:	ebfffc62 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40015bec:	e1d401b2 	ldrh	r0, [r4, #18]
40015bf0:	e20050ff 	and	r5, r0, #255	; 0xff
40015bf4:	e1d401b2 	ldrh	r0, [r4, #18]
40015bf8:	e3a0103f 	mov	r1, #63	; 0x3f
40015bfc:	e0016440 	and	r6, r1, r0, asr #8
40015c00:	e3a00000 	mov	r0, #0
40015c04:	e59f1030 	ldr	r1, [pc, #48]	; 40015c3c <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015c08:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015c0c:	e7810105 	str	r0, [r1, r5, lsl #2]
40015c10:	e1d410b8 	ldrh	r1, [r4, #8]
40015c14:	e1d400bc 	ldrh	r0, [r4, #12]
40015c18:	e3a03001 	mov	r3, #1
40015c1c:	e1a02003 	mov	r2, r3
40015c20:	eb00316d 	bl	400221dc <CyU3PDmaDscrChainDestroy>
40015c24:	e1d401b4 	ldrh	r0, [r4, #20]
40015c28:	eb0031df 	bl	400223ac <CyU3PDmaDscrPut>
40015c2c:	e3a00000 	mov	r0, #0
40015c30:	e28dd018 	add	sp, sp, #24
40015c34:	e8bd8070 	pop	{r4, r5, r6, pc}
40015c38:	0000ffff 	.word	0x0000ffff
40015c3c:	40030d04 	.word	0x40030d04

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40015c40 <CyU3PDmaChannelDestroy_TypeManual>:
40015c40:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015c44:	e24dd028 	sub	sp, sp, #40	; 0x28
40015c48:	e1a04000 	mov	r4, r0
40015c4c:	e1d400b4 	ldrh	r0, [r4, #4]
40015c50:	e3500004 	cmp	r0, #4
40015c54:	0a000012 	beq	40015ca4 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40015c58:	e1d401b0 	ldrh	r0, [r4, #16]
40015c5c:	ebfffb83 	bl	40014a70 <CyU3PDmaSocketDisable>
40015c60:	e1d401b0 	ldrh	r0, [r4, #16]
40015c64:	e1a0100d 	mov	r1, sp
40015c68:	ebfffb98 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40015c6c:	e59f0178 	ldr	r0, [pc, #376]	; 40015dec <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015c70:	e58d0000 	str	r0, [sp]
40015c74:	e1d401b0 	ldrh	r0, [r4, #16]
40015c78:	e1a0100d 	mov	r1, sp
40015c7c:	ebfffc3d 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40015c80:	e1d401b0 	ldrh	r0, [r4, #16]
40015c84:	e20070ff 	and	r7, r0, #255	; 0xff
40015c88:	e1d401b0 	ldrh	r0, [r4, #16]
40015c8c:	e3a0103f 	mov	r1, #63	; 0x3f
40015c90:	e0018440 	and	r8, r1, r0, asr #8
40015c94:	e3a00000 	mov	r0, #0
40015c98:	e59f1150 	ldr	r1, [pc, #336]	; 40015df0 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015c9c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015ca0:	e7810107 	str	r0, [r1, r7, lsl #2]
40015ca4:	e1d400b4 	ldrh	r0, [r4, #4]
40015ca8:	e3500003 	cmp	r0, #3
40015cac:	0a000012 	beq	40015cfc <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40015cb0:	e1d401b2 	ldrh	r0, [r4, #18]
40015cb4:	ebfffb6d 	bl	40014a70 <CyU3PDmaSocketDisable>
40015cb8:	e1d401b2 	ldrh	r0, [r4, #18]
40015cbc:	e1a0100d 	mov	r1, sp
40015cc0:	ebfffb82 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40015cc4:	e59f0120 	ldr	r0, [pc, #288]	; 40015dec <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015cc8:	e58d0000 	str	r0, [sp]
40015ccc:	e1d401b2 	ldrh	r0, [r4, #18]
40015cd0:	e1a0100d 	mov	r1, sp
40015cd4:	ebfffc27 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40015cd8:	e1d401b2 	ldrh	r0, [r4, #18]
40015cdc:	e20070ff 	and	r7, r0, #255	; 0xff
40015ce0:	e1d401b2 	ldrh	r0, [r4, #18]
40015ce4:	e3a0103f 	mov	r1, #63	; 0x3f
40015ce8:	e0018440 	and	r8, r1, r0, asr #8
40015cec:	e3a00000 	mov	r0, #0
40015cf0:	e59f10f8 	ldr	r1, [pc, #248]	; 40015df0 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015cf4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015cf8:	e7810107 	str	r0, [r1, r7, lsl #2]
40015cfc:	e1d400b8 	ldrh	r0, [r4, #8]
40015d00:	e3500000 	cmp	r0, #0
40015d04:	0a000033 	beq	40015dd8 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015d08:	e1d400b4 	ldrh	r0, [r4, #4]
40015d0c:	e3500004 	cmp	r0, #4
40015d10:	1a000014 	bne	40015d68 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40015d14:	e1d450be 	ldrh	r5, [r4, #14]
40015d18:	e3a06000 	mov	r6, #0
40015d1c:	ea00000d 	b	40015d58 <CyU3PDmaChannelDestroy_TypeManual+0x118>
40015d20:	e28d1018 	add	r1, sp, #24
40015d24:	e1a00005 	mov	r0, r5
40015d28:	eb0031c6 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015d2c:	e59d1018 	ldr	r1, [sp, #24]
40015d30:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40015d34:	e0410002 	sub	r0, r1, r2
40015d38:	ebffb86d 	bl	40003ef4 <CyU3PDmaBufferFree>
40015d3c:	e1a00005 	mov	r0, r5
40015d40:	eb003199 	bl	400223ac <CyU3PDmaDscrPut>
40015d44:	e59d0020 	ldr	r0, [sp, #32]
40015d48:	e1a05800 	lsl	r5, r0, #16
40015d4c:	e1a05825 	lsr	r5, r5, #16
40015d50:	e2860001 	add	r0, r6, #1
40015d54:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015d58:	e1d400b8 	ldrh	r0, [r4, #8]
40015d5c:	e1500006 	cmp	r0, r6
40015d60:	caffffee 	bgt	40015d20 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40015d64:	ea000013 	b	40015db8 <CyU3PDmaChannelDestroy_TypeManual+0x178>
40015d68:	e1d450bc 	ldrh	r5, [r4, #12]
40015d6c:	e3a06000 	mov	r6, #0
40015d70:	ea00000d 	b	40015dac <CyU3PDmaChannelDestroy_TypeManual+0x16c>
40015d74:	e28d1018 	add	r1, sp, #24
40015d78:	e1a00005 	mov	r0, r5
40015d7c:	eb0031b1 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015d80:	e59d1018 	ldr	r1, [sp, #24]
40015d84:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
40015d88:	e0410002 	sub	r0, r1, r2
40015d8c:	ebffb858 	bl	40003ef4 <CyU3PDmaBufferFree>
40015d90:	e1a00005 	mov	r0, r5
40015d94:	eb003184 	bl	400223ac <CyU3PDmaDscrPut>
40015d98:	e59d0020 	ldr	r0, [sp, #32]
40015d9c:	e1a05800 	lsl	r5, r0, #16
40015da0:	e1a05825 	lsr	r5, r5, #16
40015da4:	e2860001 	add	r0, r6, #1
40015da8:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015dac:	e1d400b8 	ldrh	r0, [r4, #8]
40015db0:	e1500006 	cmp	r0, r6
40015db4:	caffffee 	bgt	40015d74 <CyU3PDmaChannelDestroy_TypeManual+0x134>
40015db8:	e1d400b4 	ldrh	r0, [r4, #4]
40015dbc:	e3500002 	cmp	r0, #2
40015dc0:	1a000004 	bne	40015dd8 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015dc4:	e1d410b8 	ldrh	r1, [r4, #8]
40015dc8:	e1d400be 	ldrh	r0, [r4, #14]
40015dcc:	e3a03000 	mov	r3, #0
40015dd0:	e1a02003 	mov	r2, r3
40015dd4:	eb003100 	bl	400221dc <CyU3PDmaDscrChainDestroy>
40015dd8:	e1d401b4 	ldrh	r0, [r4, #20]
40015ddc:	eb003172 	bl	400223ac <CyU3PDmaDscrPut>
40015de0:	e3a00000 	mov	r0, #0
40015de4:	e28dd028 	add	sp, sp, #40	; 0x28
40015de8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015dec:	0000ffff 	.word	0x0000ffff
40015df0:	40030d04 	.word	0x40030d04

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40015df4 <CyU3PDmaChannelGetBuffer>:
40015df4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015df8:	e24dd030 	sub	sp, sp, #48	; 0x30
40015dfc:	e1a04000 	mov	r4, r0
40015e00:	e1a05001 	mov	r5, r1
40015e04:	e1a06002 	mov	r6, r2
40015e08:	e3550000 	cmp	r5, #0
40015e0c:	1a000002 	bne	40015e1c <CyU3PDmaChannelGetBuffer+0x28>
40015e10:	e3a00041 	mov	r0, #65	; 0x41
40015e14:	e28dd030 	add	sp, sp, #48	; 0x30
40015e18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015e1c:	e1a01006 	mov	r1, r6
40015e20:	e1a00004 	mov	r0, r4
40015e24:	ebfffc85 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40015e28:	e1a08000 	mov	r8, r0
40015e2c:	e3580000 	cmp	r8, #0
40015e30:	0a000001 	beq	40015e3c <CyU3PDmaChannelGetBuffer+0x48>
40015e34:	e1a00008 	mov	r0, r8
40015e38:	eafffff5 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40015e3c:	e5940000 	ldr	r0, [r4]
40015e40:	e3500002 	cmp	r0, #2
40015e44:	0a000003 	beq	40015e58 <CyU3PDmaChannelGetBuffer+0x64>
40015e48:	e5940000 	ldr	r0, [r4]
40015e4c:	e3500006 	cmp	r0, #6
40015e50:	0a000000 	beq	40015e58 <CyU3PDmaChannelGetBuffer+0x64>
40015e54:	e3a08042 	mov	r8, #66	; 0x42
40015e58:	e5940000 	ldr	r0, [r4]
40015e5c:	e3500005 	cmp	r0, #5
40015e60:	1a000000 	bne	40015e68 <CyU3PDmaChannelGetBuffer+0x74>
40015e64:	e3a08049 	mov	r8, #73	; 0x49
40015e68:	e5940000 	ldr	r0, [r4]
40015e6c:	e3500007 	cmp	r0, #7
40015e70:	1a000000 	bne	40015e78 <CyU3PDmaChannelGetBuffer+0x84>
40015e74:	e3a08048 	mov	r8, #72	; 0x48
40015e78:	e3580000 	cmp	r8, #0
40015e7c:	0a000003 	beq	40015e90 <CyU3PDmaChannelGetBuffer+0x9c>
40015e80:	e284003c 	add	r0, r4, #60	; 0x3c
40015e84:	ebffd07f 	bl	4000a088 <_txe_mutex_put>
40015e88:	e1a00008 	mov	r0, r8
40015e8c:	eaffffe0 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40015e90:	e1d400b4 	ldrh	r0, [r4, #4]
40015e94:	e20070ff 	and	r7, r0, #255	; 0xff
40015e98:	e3570002 	cmp	r7, #2
40015e9c:	0a000001 	beq	40015ea8 <CyU3PDmaChannelGetBuffer+0xb4>
40015ea0:	e3570003 	cmp	r7, #3
40015ea4:	1a00003e 	bne	40015fa4 <CyU3PDmaChannelGetBuffer+0x1b0>
40015ea8:	e3a02002 	mov	r2, #2
40015eac:	e3e01008 	mvn	r1, #8
40015eb0:	e2840074 	add	r0, r4, #116	; 0x74
40015eb4:	ebffcfa6 	bl	40009d54 <_txe_event_flags_set>
40015eb8:	e1d401b6 	ldrh	r0, [r4, #22]
40015ebc:	e28d101c 	add	r1, sp, #28
40015ec0:	eb003160 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015ec4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015ec8:	e3100008 	tst	r0, #8
40015ecc:	1a000022 	bne	40015f5c <CyU3PDmaChannelGetBuffer+0x168>
40015ed0:	e284003c 	add	r0, r4, #60	; 0x3c
40015ed4:	ebffd06b 	bl	4000a088 <_txe_mutex_put>
40015ed8:	e58d6000 	str	r6, [sp]
40015edc:	e28d302c 	add	r3, sp, #44	; 0x2c
40015ee0:	e3a02000 	mov	r2, #0
40015ee4:	e3a01068 	mov	r1, #104	; 0x68
40015ee8:	e2840074 	add	r0, r4, #116	; 0x74
40015eec:	ebffcf68 	bl	40009c94 <_txe_event_flags_get>
40015ef0:	e1a08000 	mov	r8, r0
40015ef4:	e3580000 	cmp	r8, #0
40015ef8:	0a000001 	beq	40015f04 <CyU3PDmaChannelGetBuffer+0x110>
40015efc:	e3a00045 	mov	r0, #69	; 0x45
40015f00:	eaffffc3 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40015f04:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015f08:	e3100040 	tst	r0, #64	; 0x40
40015f0c:	0a000001 	beq	40015f18 <CyU3PDmaChannelGetBuffer+0x124>
40015f10:	e3a00049 	mov	r0, #73	; 0x49
40015f14:	eaffffbe 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40015f18:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015f1c:	e3100020 	tst	r0, #32
40015f20:	0a000001 	beq	40015f2c <CyU3PDmaChannelGetBuffer+0x138>
40015f24:	e3a00048 	mov	r0, #72	; 0x48
40015f28:	eaffffb9 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40015f2c:	e1a01006 	mov	r1, r6
40015f30:	e1a00004 	mov	r0, r4
40015f34:	ebfffc41 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40015f38:	e1a08000 	mov	r8, r0
40015f3c:	e3580000 	cmp	r8, #0
40015f40:	0a000001 	beq	40015f4c <CyU3PDmaChannelGetBuffer+0x158>
40015f44:	e1a00008 	mov	r0, r8
40015f48:	eaffffb1 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40015f4c:	e1d401b6 	ldrh	r0, [r4, #22]
40015f50:	e28d101c 	add	r1, sp, #28
40015f54:	eb00313b 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015f58:	ea000003 	b	40015f6c <CyU3PDmaChannelGetBuffer+0x178>
40015f5c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015f60:	e3500000 	cmp	r0, #0
40015f64:	0a000000 	beq	40015f6c <CyU3PDmaChannelGetBuffer+0x178>
40015f68:	ebffd232 	bl	4000a838 <_txe_thread_relinquish>
40015f6c:	e59d001c 	ldr	r0, [sp, #28]
40015f70:	e5850000 	str	r0, [r5]
40015f74:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f78:	e59f11a4 	ldr	r1, [pc, #420]	; 40016124 <CyU3PDmaChannelGetBuffer+0x330>
40015f7c:	e0010820 	and	r0, r1, r0, lsr #16
40015f80:	e1c500b4 	strh	r0, [r5, #4]
40015f84:	e241100f 	sub	r1, r1, #15
40015f88:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f8c:	e0000001 	and	r0, r0, r1
40015f90:	e1c500b6 	strh	r0, [r5, #6]
40015f94:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f98:	e200000f 	and	r0, r0, #15
40015f9c:	e1c500b8 	strh	r0, [r5, #8]
40015fa0:	ea00005b 	b	40016114 <CyU3PDmaChannelGetBuffer+0x320>
40015fa4:	e3570004 	cmp	r7, #4
40015fa8:	1a000036 	bne	40016088 <CyU3PDmaChannelGetBuffer+0x294>
40015fac:	e3a02002 	mov	r2, #2
40015fb0:	e3e01010 	mvn	r1, #16
40015fb4:	e2840074 	add	r0, r4, #116	; 0x74
40015fb8:	ebffcf65 	bl	40009d54 <_txe_event_flags_set>
40015fbc:	e1d401b8 	ldrh	r0, [r4, #24]
40015fc0:	e28d101c 	add	r1, sp, #28
40015fc4:	eb00311f 	bl	40022448 <CyU3PDmaDscrGetConfig>
40015fc8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015fcc:	e3100008 	tst	r0, #8
40015fd0:	0a000021 	beq	4001605c <CyU3PDmaChannelGetBuffer+0x268>
40015fd4:	e284003c 	add	r0, r4, #60	; 0x3c
40015fd8:	ebffd02a 	bl	4000a088 <_txe_mutex_put>
40015fdc:	e58d6000 	str	r6, [sp]
40015fe0:	e28d302c 	add	r3, sp, #44	; 0x2c
40015fe4:	e3a02000 	mov	r2, #0
40015fe8:	e3a01070 	mov	r1, #112	; 0x70
40015fec:	e2840074 	add	r0, r4, #116	; 0x74
40015ff0:	ebffcf27 	bl	40009c94 <_txe_event_flags_get>
40015ff4:	e1a08000 	mov	r8, r0
40015ff8:	e3580000 	cmp	r8, #0
40015ffc:	0a000001 	beq	40016008 <CyU3PDmaChannelGetBuffer+0x214>
40016000:	e3a00045 	mov	r0, #69	; 0x45
40016004:	eaffff82 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40016008:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001600c:	e3100040 	tst	r0, #64	; 0x40
40016010:	0a000001 	beq	4001601c <CyU3PDmaChannelGetBuffer+0x228>
40016014:	e3a00049 	mov	r0, #73	; 0x49
40016018:	eaffff7d 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
4001601c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016020:	e3100020 	tst	r0, #32
40016024:	0a000001 	beq	40016030 <CyU3PDmaChannelGetBuffer+0x23c>
40016028:	e3a00048 	mov	r0, #72	; 0x48
4001602c:	eaffff78 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40016030:	e1a01006 	mov	r1, r6
40016034:	e1a00004 	mov	r0, r4
40016038:	ebfffc00 	bl	40015040 <CyU3PDmaChannelAcquireLock>
4001603c:	e1a08000 	mov	r8, r0
40016040:	e3580000 	cmp	r8, #0
40016044:	0a000001 	beq	40016050 <CyU3PDmaChannelGetBuffer+0x25c>
40016048:	e1a00008 	mov	r0, r8
4001604c:	eaffff70 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40016050:	e1d401b8 	ldrh	r0, [r4, #24]
40016054:	e28d101c 	add	r1, sp, #28
40016058:	eb0030fa 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001605c:	e59d001c 	ldr	r0, [sp, #28]
40016060:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40016064:	e0400001 	sub	r0, r0, r1
40016068:	e5850000 	str	r0, [r5]
4001606c:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
40016070:	e1c500b4 	strh	r0, [r5, #4]
40016074:	e1d400b6 	ldrh	r0, [r4, #6]
40016078:	e1c500b6 	strh	r0, [r5, #6]
4001607c:	e3a00000 	mov	r0, #0
40016080:	e1c500b8 	strh	r0, [r5, #8]
40016084:	ea000022 	b	40016114 <CyU3PDmaChannelGetBuffer+0x320>
40016088:	e1d401b2 	ldrh	r0, [r4, #18]
4001608c:	e28d1004 	add	r1, sp, #4
40016090:	ebfffa8e 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40016094:	e59d1004 	ldr	r1, [sp, #4]
40016098:	e1a00801 	lsl	r0, r1, #16
4001609c:	e1a00820 	lsr	r0, r0, #16
400160a0:	e28d101c 	add	r1, sp, #28
400160a4:	eb0030e7 	bl	40022448 <CyU3PDmaDscrGetConfig>
400160a8:	e59d0010 	ldr	r0, [sp, #16]
400160ac:	e3100702 	tst	r0, #524288	; 0x80000
400160b0:	0a000016 	beq	40016110 <CyU3PDmaChannelGetBuffer+0x31c>
400160b4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160b8:	e3100008 	tst	r0, #8
400160bc:	0a000013 	beq	40016110 <CyU3PDmaChannelGetBuffer+0x31c>
400160c0:	e59d001c 	ldr	r0, [sp, #28]
400160c4:	e5850000 	str	r0, [r5]
400160c8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160cc:	e59f1050 	ldr	r1, [pc, #80]	; 40016124 <CyU3PDmaChannelGetBuffer+0x330>
400160d0:	e0010820 	and	r0, r1, r0, lsr #16
400160d4:	e1c500b4 	strh	r0, [r5, #4]
400160d8:	e241100f 	sub	r1, r1, #15
400160dc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160e0:	e0000001 	and	r0, r0, r1
400160e4:	e1c500b6 	strh	r0, [r5, #6]
400160e8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160ec:	e200000f 	and	r0, r0, #15
400160f0:	e1c500b8 	strh	r0, [r5, #8]
400160f4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400160f8:	e3500000 	cmp	r0, #0
400160fc:	0a000004 	beq	40016114 <CyU3PDmaChannelGetBuffer+0x320>
40016100:	e1d510b6 	ldrh	r1, [r5, #6]
40016104:	e5950000 	ldr	r0, [r5]
40016108:	ebffefa1 	bl	40011f94 <CyU3PSysFlushDRegion>
4001610c:	ea000000 	b	40016114 <CyU3PDmaChannelGetBuffer+0x320>
40016110:	e3a08047 	mov	r8, #71	; 0x47
40016114:	e284003c 	add	r0, r4, #60	; 0x3c
40016118:	ebffcfda 	bl	4000a088 <_txe_mutex_put>
4001611c:	e1a00008 	mov	r0, r8
40016120:	eaffff3b 	b	40015e14 <CyU3PDmaChannelGetBuffer+0x20>
40016124:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

40016128 <CyU3PDmaChannelReset>:
40016128:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4001612c:	e1a04000 	mov	r4, r0
40016130:	e3e01000 	mvn	r1, #0
40016134:	e1a00004 	mov	r0, r4
40016138:	ebfffbc0 	bl	40015040 <CyU3PDmaChannelAcquireLock>
4001613c:	e1a06000 	mov	r6, r0
40016140:	e3560000 	cmp	r6, #0
40016144:	0a000001 	beq	40016150 <CyU3PDmaChannelReset+0x28>
40016148:	e1a00006 	mov	r0, r6
4001614c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40016150:	e1d400b4 	ldrh	r0, [r4, #4]
40016154:	e3500005 	cmp	r0, #5
40016158:	308ff100 	addcc	pc, pc, r0, lsl #2
4001615c:	ea00000f 	b	400161a0 <CyU3PDmaChannelReset+0x78>
40016160:	ea000003 	b	40016174 <CyU3PDmaChannelReset+0x4c>
40016164:	ea000004 	b	4001617c <CyU3PDmaChannelReset+0x54>
40016168:	ea000009 	b	40016194 <CyU3PDmaChannelReset+0x6c>
4001616c:	ea000005 	b	40016188 <CyU3PDmaChannelReset+0x60>
40016170:	ea000006 	b	40016190 <CyU3PDmaChannelReset+0x68>
40016174:	e1a00000 	nop			; (mov r0, r0)
40016178:	e1a00000 	nop			; (mov r0, r0)
4001617c:	e1a00004 	mov	r0, r4
40016180:	eb000030 	bl	40016248 <CyU3PDmaChannelReset_TypeAuto>
40016184:	ea000007 	b	400161a8 <CyU3PDmaChannelReset+0x80>
40016188:	e1a00000 	nop			; (mov r0, r0)
4001618c:	e1a00000 	nop			; (mov r0, r0)
40016190:	e1a00000 	nop			; (mov r0, r0)
40016194:	e1a00004 	mov	r0, r4
40016198:	eb000045 	bl	400162b4 <CyU3PDmaChannelReset_TypeManual>
4001619c:	ea000001 	b	400161a8 <CyU3PDmaChannelReset+0x80>
400161a0:	e1a00000 	nop			; (mov r0, r0)
400161a4:	e1a00000 	nop			; (mov r0, r0)
400161a8:	e1a00000 	nop			; (mov r0, r0)
400161ac:	ebffc96b 	bl	40008760 <_tx_thread_identify>
400161b0:	e1a05000 	mov	r5, r0
400161b4:	e3550000 	cmp	r5, #0
400161b8:	0a000003 	beq	400161cc <CyU3PDmaChannelReset+0xa4>
400161bc:	e1a0200d 	mov	r2, sp
400161c0:	e3a01002 	mov	r1, #2
400161c4:	e1a00005 	mov	r0, r5
400161c8:	ebffd172 	bl	4000a798 <_txe_thread_priority_change>
400161cc:	e3a02002 	mov	r2, #2
400161d0:	e3e01007 	mvn	r1, #7
400161d4:	e2840074 	add	r0, r4, #116	; 0x74
400161d8:	ebffcedd 	bl	40009d54 <_txe_event_flags_set>
400161dc:	e3a02000 	mov	r2, #0
400161e0:	e3a01020 	mov	r1, #32
400161e4:	e2840074 	add	r0, r4, #116	; 0x74
400161e8:	ebffced9 	bl	40009d54 <_txe_event_flags_set>
400161ec:	e3a00001 	mov	r0, #1
400161f0:	e5840000 	str	r0, [r4]
400161f4:	e284003c 	add	r0, r4, #60	; 0x3c
400161f8:	ebffcfa2 	bl	4000a088 <_txe_mutex_put>
400161fc:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40016200:	e3500000 	cmp	r0, #0
40016204:	0a000007 	beq	40016228 <CyU3PDmaChannelReset+0x100>
40016208:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001620c:	e3100020 	tst	r0, #32
40016210:	0a000004 	beq	40016228 <CyU3PDmaChannelReset+0x100>
40016214:	e3a02000 	mov	r2, #0
40016218:	e3a01020 	mov	r1, #32
4001621c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40016220:	e1a00004 	mov	r0, r4
40016224:	e12fff33 	blx	r3
40016228:	e3550000 	cmp	r5, #0
4001622c:	0a000003 	beq	40016240 <CyU3PDmaChannelReset+0x118>
40016230:	e1a0200d 	mov	r2, sp
40016234:	e1a00005 	mov	r0, r5
40016238:	e59d1000 	ldr	r1, [sp]
4001623c:	ebffd155 	bl	4000a798 <_txe_thread_priority_change>
40016240:	e3a00000 	mov	r0, #0
40016244:	eaffffc0 	b	4001614c <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

40016248 <CyU3PDmaChannelReset_TypeAuto>:
40016248:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4001624c:	e1a04000 	mov	r4, r0
40016250:	e1d450b8 	ldrh	r5, [r4, #8]
40016254:	e1d460bc 	ldrh	r6, [r4, #12]
40016258:	e1a00004 	mov	r0, r4
4001625c:	eb000337 	bl	40016f40 <CyU3PDmaConfigureSockets_TypeAuto>
40016260:	ea00000c 	b	40016298 <CyU3PDmaChannelReset_TypeAuto+0x50>
40016264:	e1a0100d 	mov	r1, sp
40016268:	e1a00006 	mov	r0, r6
4001626c:	eb003075 	bl	40022448 <CyU3PDmaDscrGetConfig>
40016270:	e59d000c 	ldr	r0, [sp, #12]
40016274:	e59f1034 	ldr	r1, [pc, #52]	; 400162b0 <CyU3PDmaChannelReset_TypeAuto+0x68>
40016278:	e0000001 	and	r0, r0, r1
4001627c:	e58d000c 	str	r0, [sp, #12]
40016280:	e1a0100d 	mov	r1, sp
40016284:	e1a00006 	mov	r0, r6
40016288:	eb003089 	bl	400224b4 <CyU3PDmaDscrSetConfig>
4001628c:	e59d0008 	ldr	r0, [sp, #8]
40016290:	e1a06800 	lsl	r6, r0, #16
40016294:	e1a06826 	lsr	r6, r6, #16
40016298:	e1b00005 	movs	r0, r5
4001629c:	e2451001 	sub	r1, r5, #1
400162a0:	e1a05801 	lsl	r5, r1, #16
400162a4:	e1a05825 	lsr	r5, r5, #16
400162a8:	1affffed 	bne	40016264 <CyU3PDmaChannelReset_TypeAuto+0x1c>
400162ac:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400162b0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

400162b4 <CyU3PDmaChannelReset_TypeManual>:
400162b4:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
400162b8:	e1a04000 	mov	r4, r0
400162bc:	e1d450b8 	ldrh	r5, [r4, #8]
400162c0:	e1a00004 	mov	r0, r4
400162c4:	eb00035d 	bl	40017040 <CyU3PDmaConfigureSockets_TypeManual>
400162c8:	e1d400b4 	ldrh	r0, [r4, #4]
400162cc:	e3500004 	cmp	r0, #4
400162d0:	0a000017 	beq	40016334 <CyU3PDmaChannelReset_TypeManual+0x80>
400162d4:	e1d460bc 	ldrh	r6, [r4, #12]
400162d8:	ea00000c 	b	40016310 <CyU3PDmaChannelReset_TypeManual+0x5c>
400162dc:	e1a0100d 	mov	r1, sp
400162e0:	e1a00006 	mov	r0, r6
400162e4:	eb003057 	bl	40022448 <CyU3PDmaDscrGetConfig>
400162e8:	e59d000c 	ldr	r0, [sp, #12]
400162ec:	e59f10b4 	ldr	r1, [pc, #180]	; 400163a8 <CyU3PDmaChannelReset_TypeManual+0xf4>
400162f0:	e0000001 	and	r0, r0, r1
400162f4:	e58d000c 	str	r0, [sp, #12]
400162f8:	e1a0100d 	mov	r1, sp
400162fc:	e1a00006 	mov	r0, r6
40016300:	eb00306b 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40016304:	e59d0008 	ldr	r0, [sp, #8]
40016308:	e1a06800 	lsl	r6, r0, #16
4001630c:	e1a06826 	lsr	r6, r6, #16
40016310:	e1b00005 	movs	r0, r5
40016314:	e2451001 	sub	r1, r5, #1
40016318:	e1a05801 	lsl	r5, r1, #16
4001631c:	e1a05825 	lsr	r5, r5, #16
40016320:	1affffed 	bne	400162dc <CyU3PDmaChannelReset_TypeManual+0x28>
40016324:	e1d400bc 	ldrh	r0, [r4, #12]
40016328:	e1c401b6 	strh	r0, [r4, #22]
4001632c:	e1c401ba 	strh	r0, [r4, #26]
40016330:	e1c401be 	strh	r0, [r4, #30]
40016334:	e1d400b4 	ldrh	r0, [r4, #4]
40016338:	e3500003 	cmp	r0, #3
4001633c:	0a000018 	beq	400163a4 <CyU3PDmaChannelReset_TypeManual+0xf0>
40016340:	e1d460be 	ldrh	r6, [r4, #14]
40016344:	e1d450b8 	ldrh	r5, [r4, #8]
40016348:	ea00000c 	b	40016380 <CyU3PDmaChannelReset_TypeManual+0xcc>
4001634c:	e1a0100d 	mov	r1, sp
40016350:	e1a00006 	mov	r0, r6
40016354:	eb00303b 	bl	40022448 <CyU3PDmaDscrGetConfig>
40016358:	e59d000c 	ldr	r0, [sp, #12]
4001635c:	e59f1044 	ldr	r1, [pc, #68]	; 400163a8 <CyU3PDmaChannelReset_TypeManual+0xf4>
40016360:	e0000001 	and	r0, r0, r1
40016364:	e58d000c 	str	r0, [sp, #12]
40016368:	e1a0100d 	mov	r1, sp
4001636c:	e1a00006 	mov	r0, r6
40016370:	eb00304f 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40016374:	e59d0008 	ldr	r0, [sp, #8]
40016378:	e1a06800 	lsl	r6, r0, #16
4001637c:	e1a06826 	lsr	r6, r6, #16
40016380:	e1b00005 	movs	r0, r5
40016384:	e2451001 	sub	r1, r5, #1
40016388:	e1a05801 	lsl	r5, r1, #16
4001638c:	e1a05825 	lsr	r5, r5, #16
40016390:	1affffed 	bne	4001634c <CyU3PDmaChannelReset_TypeManual+0x98>
40016394:	e1d400be 	ldrh	r0, [r4, #14]
40016398:	e1c401b8 	strh	r0, [r4, #24]
4001639c:	e1c401bc 	strh	r0, [r4, #28]
400163a0:	e1c402b0 	strh	r0, [r4, #32]
400163a4:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400163a8:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

400163ac <CyU3PDmaChannelSetXfer>:
400163ac:	e92d4070 	push	{r4, r5, r6, lr}
400163b0:	e1a04000 	mov	r4, r0
400163b4:	e1a05001 	mov	r5, r1
400163b8:	e3e01000 	mvn	r1, #0
400163bc:	e1a00004 	mov	r0, r4
400163c0:	ebfffb1e 	bl	40015040 <CyU3PDmaChannelAcquireLock>
400163c4:	e1a06000 	mov	r6, r0
400163c8:	e3560000 	cmp	r6, #0
400163cc:	0a000001 	beq	400163d8 <CyU3PDmaChannelSetXfer+0x2c>
400163d0:	e1a00006 	mov	r0, r6
400163d4:	e8bd8070 	pop	{r4, r5, r6, pc}
400163d8:	e5940000 	ldr	r0, [r4]
400163dc:	e3500001 	cmp	r0, #1
400163e0:	0a000000 	beq	400163e8 <CyU3PDmaChannelSetXfer+0x3c>
400163e4:	e3a06043 	mov	r6, #67	; 0x43
400163e8:	e1d400b8 	ldrh	r0, [r4, #8]
400163ec:	e3500000 	cmp	r0, #0
400163f0:	1a000000 	bne	400163f8 <CyU3PDmaChannelSetXfer+0x4c>
400163f4:	e3a06046 	mov	r6, #70	; 0x46
400163f8:	e3560000 	cmp	r6, #0
400163fc:	1a00001d 	bne	40016478 <CyU3PDmaChannelSetXfer+0xcc>
40016400:	e3a02002 	mov	r2, #2
40016404:	e3e01027 	mvn	r1, #39	; 0x27
40016408:	e2840074 	add	r0, r4, #116	; 0x74
4001640c:	ebffce50 	bl	40009d54 <_txe_event_flags_set>
40016410:	e5845034 	str	r5, [r4, #52]	; 0x34
40016414:	e1d400b4 	ldrh	r0, [r4, #4]
40016418:	e3500005 	cmp	r0, #5
4001641c:	308ff100 	addcc	pc, pc, r0, lsl #2
40016420:	ea000011 	b	4001646c <CyU3PDmaChannelSetXfer+0xc0>
40016424:	ea000003 	b	40016438 <CyU3PDmaChannelSetXfer+0x8c>
40016428:	ea000004 	b	40016440 <CyU3PDmaChannelSetXfer+0x94>
4001642c:	ea00000a 	b	4001645c <CyU3PDmaChannelSetXfer+0xb0>
40016430:	ea000006 	b	40016450 <CyU3PDmaChannelSetXfer+0xa4>
40016434:	ea000007 	b	40016458 <CyU3PDmaChannelSetXfer+0xac>
40016438:	e1a00000 	nop			; (mov r0, r0)
4001643c:	e1a00000 	nop			; (mov r0, r0)
40016440:	e1a01005 	mov	r1, r5
40016444:	e1a00004 	mov	r0, r4
40016448:	eb00000e 	bl	40016488 <CyU3PDmaChannelSetXfer_TypeAuto>
4001644c:	ea000008 	b	40016474 <CyU3PDmaChannelSetXfer+0xc8>
40016450:	e1a00000 	nop			; (mov r0, r0)
40016454:	e1a00000 	nop			; (mov r0, r0)
40016458:	e1a00000 	nop			; (mov r0, r0)
4001645c:	e1a01005 	mov	r1, r5
40016460:	e1a00004 	mov	r0, r4
40016464:	eb00006f 	bl	40016628 <CyU3PDmaChannelSetXfer_TypeManual>
40016468:	ea000001 	b	40016474 <CyU3PDmaChannelSetXfer+0xc8>
4001646c:	e1a00000 	nop			; (mov r0, r0)
40016470:	e1a00000 	nop			; (mov r0, r0)
40016474:	e1a00000 	nop			; (mov r0, r0)
40016478:	e284003c 	add	r0, r4, #60	; 0x3c
4001647c:	ebffcf01 	bl	4000a088 <_txe_mutex_put>
40016480:	e1a00006 	mov	r0, r6
40016484:	eaffffd2 	b	400163d4 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

40016488 <CyU3PDmaChannelSetXfer_TypeAuto>:
40016488:	e92d4030 	push	{r4, r5, lr}
4001648c:	e24dd01c 	sub	sp, sp, #28
40016490:	e1a04000 	mov	r4, r0
40016494:	e1a05001 	mov	r5, r1
40016498:	e1d401b0 	ldrh	r0, [r4, #16]
4001649c:	ebfff973 	bl	40014a70 <CyU3PDmaSocketDisable>
400164a0:	e1d401b2 	ldrh	r0, [r4, #18]
400164a4:	ebfff971 	bl	40014a70 <CyU3PDmaSocketDisable>
400164a8:	e3a00002 	mov	r0, #2
400164ac:	e5840000 	str	r0, [r4]
400164b0:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
400164b4:	e1d401b0 	ldrh	r0, [r4, #16]
400164b8:	ebfffa87 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
400164bc:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
400164c0:	e1d401b2 	ldrh	r0, [r4, #18]
400164c4:	ebfffa84 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
400164c8:	e1d401b0 	ldrh	r0, [r4, #16]
400164cc:	e28d1004 	add	r1, sp, #4
400164d0:	ebfff97e 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
400164d4:	e58d5008 	str	r5, [sp, #8]
400164d8:	e3a00000 	mov	r0, #0
400164dc:	e58d000c 	str	r0, [sp, #12]
400164e0:	e3550000 	cmp	r5, #0
400164e4:	1a000003 	bne	400164f8 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
400164e8:	e59d0010 	ldr	r0, [sp, #16]
400164ec:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400164f0:	e58d0010 	str	r0, [sp, #16]
400164f4:	ea000002 	b	40016504 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
400164f8:	e59d0010 	ldr	r0, [sp, #16]
400164fc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016500:	e58d0010 	str	r0, [sp, #16]
40016504:	e59d0010 	ldr	r0, [sp, #16]
40016508:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
4001650c:	e58d0010 	str	r0, [sp, #16]
40016510:	e59d0010 	ldr	r0, [sp, #16]
40016514:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016518:	e58d0010 	str	r0, [sp, #16]
4001651c:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016520:	e3500001 	cmp	r0, #1
40016524:	1a000003 	bne	40016538 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
40016528:	e59d0010 	ldr	r0, [sp, #16]
4001652c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016530:	e58d0010 	str	r0, [sp, #16]
40016534:	ea000002 	b	40016544 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
40016538:	e59d0010 	ldr	r0, [sp, #16]
4001653c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016540:	e58d0010 	str	r0, [sp, #16]
40016544:	e1d400ba 	ldrh	r0, [r4, #10]
40016548:	e3500000 	cmp	r0, #0
4001654c:	0a000006 	beq	4001656c <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016550:	e1d400b8 	ldrh	r0, [r4, #8]
40016554:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016558:	e1d410ba 	ldrh	r1, [r4, #10]
4001655c:	e1800281 	orr	r0, r0, r1, lsl #5
40016560:	e59d1010 	ldr	r1, [sp, #16]
40016564:	e1800001 	orr	r0, r0, r1
40016568:	e58d0010 	str	r0, [sp, #16]
4001656c:	e3e00000 	mvn	r0, #0
40016570:	e58d0014 	str	r0, [sp, #20]
40016574:	e1d401b0 	ldrh	r0, [r4, #16]
40016578:	e28d1004 	add	r1, sp, #4
4001657c:	ebfff9fd 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40016580:	e1d401b2 	ldrh	r0, [r4, #18]
40016584:	e28d1004 	add	r1, sp, #4
40016588:	ebfff950 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001658c:	e58d5008 	str	r5, [sp, #8]
40016590:	e3a00000 	mov	r0, #0
40016594:	e58d000c 	str	r0, [sp, #12]
40016598:	e3550000 	cmp	r5, #0
4001659c:	1a000006 	bne	400165bc <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
400165a0:	e59d0018 	ldr	r0, [sp, #24]
400165a4:	e3c00080 	bic	r0, r0, #128	; 0x80
400165a8:	e58d0018 	str	r0, [sp, #24]
400165ac:	e59d0010 	ldr	r0, [sp, #16]
400165b0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400165b4:	e58d0010 	str	r0, [sp, #16]
400165b8:	ea000005 	b	400165d4 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
400165bc:	e59d0018 	ldr	r0, [sp, #24]
400165c0:	e3800080 	orr	r0, r0, #128	; 0x80
400165c4:	e58d0018 	str	r0, [sp, #24]
400165c8:	e59d0010 	ldr	r0, [sp, #16]
400165cc:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400165d0:	e58d0010 	str	r0, [sp, #16]
400165d4:	e59d0010 	ldr	r0, [sp, #16]
400165d8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400165dc:	e58d0010 	str	r0, [sp, #16]
400165e0:	e59d0010 	ldr	r0, [sp, #16]
400165e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400165e8:	e58d0010 	str	r0, [sp, #16]
400165ec:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400165f0:	e3500001 	cmp	r0, #1
400165f4:	1a000003 	bne	40016608 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
400165f8:	e59d0010 	ldr	r0, [sp, #16]
400165fc:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016600:	e58d0010 	str	r0, [sp, #16]
40016604:	ea000002 	b	40016614 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
40016608:	e59d0010 	ldr	r0, [sp, #16]
4001660c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016610:	e58d0010 	str	r0, [sp, #16]
40016614:	e1d401b2 	ldrh	r0, [r4, #18]
40016618:	e28d1004 	add	r1, sp, #4
4001661c:	ebfff9d5 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40016620:	e28dd01c 	add	sp, sp, #28
40016624:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016628 <CyU3PDmaChannelSetXfer_TypeManual>:
40016628:	e92d4030 	push	{r4, r5, lr}
4001662c:	e24dd01c 	sub	sp, sp, #28
40016630:	e1a04000 	mov	r4, r0
40016634:	e1a05001 	mov	r5, r1
40016638:	e3a00002 	mov	r0, #2
4001663c:	e5840000 	str	r0, [r4]
40016640:	e1d400b4 	ldrh	r0, [r4, #4]
40016644:	e3500004 	cmp	r0, #4
40016648:	0a00003d 	beq	40016744 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
4001664c:	e1d401b0 	ldrh	r0, [r4, #16]
40016650:	ebfff906 	bl	40014a70 <CyU3PDmaSocketDisable>
40016654:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016658:	e1d401b0 	ldrh	r0, [r4, #16]
4001665c:	ebfffa1e 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
40016660:	e1d401b0 	ldrh	r0, [r4, #16]
40016664:	e28d1004 	add	r1, sp, #4
40016668:	ebfff918 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001666c:	e58d5008 	str	r5, [sp, #8]
40016670:	e3a00000 	mov	r0, #0
40016674:	e58d000c 	str	r0, [sp, #12]
40016678:	e59d0010 	ldr	r0, [sp, #16]
4001667c:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016680:	e58d0010 	str	r0, [sp, #16]
40016684:	e59d0010 	ldr	r0, [sp, #16]
40016688:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001668c:	e58d0010 	str	r0, [sp, #16]
40016690:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016694:	e3500001 	cmp	r0, #1
40016698:	1a000003 	bne	400166ac <CyU3PDmaChannelSetXfer_TypeManual+0x84>
4001669c:	e59d0010 	ldr	r0, [sp, #16]
400166a0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400166a4:	e58d0010 	str	r0, [sp, #16]
400166a8:	ea000002 	b	400166b8 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
400166ac:	e59d0010 	ldr	r0, [sp, #16]
400166b0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400166b4:	e58d0010 	str	r0, [sp, #16]
400166b8:	e1d400ba 	ldrh	r0, [r4, #10]
400166bc:	e3500000 	cmp	r0, #0
400166c0:	0a000006 	beq	400166e0 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
400166c4:	e1d400b8 	ldrh	r0, [r4, #8]
400166c8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400166cc:	e1d410ba 	ldrh	r1, [r4, #10]
400166d0:	e1800281 	orr	r0, r0, r1, lsl #5
400166d4:	e59d1010 	ldr	r1, [sp, #16]
400166d8:	e1800001 	orr	r0, r0, r1
400166dc:	e58d0010 	str	r0, [sp, #16]
400166e0:	e3e00000 	mvn	r0, #0
400166e4:	e58d0014 	str	r0, [sp, #20]
400166e8:	e3550000 	cmp	r5, #0
400166ec:	0a000002 	beq	400166fc <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
400166f0:	e1d400b4 	ldrh	r0, [r4, #4]
400166f4:	e3500002 	cmp	r0, #2
400166f8:	1a000008 	bne	40016720 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
400166fc:	e3a00000 	mov	r0, #0
40016700:	e58d0008 	str	r0, [sp, #8]
40016704:	e59d0010 	ldr	r0, [sp, #16]
40016708:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001670c:	e58d0010 	str	r0, [sp, #16]
40016710:	e59d0018 	ldr	r0, [sp, #24]
40016714:	e3c00080 	bic	r0, r0, #128	; 0x80
40016718:	e58d0018 	str	r0, [sp, #24]
4001671c:	ea000005 	b	40016738 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016720:	e59d0010 	ldr	r0, [sp, #16]
40016724:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016728:	e58d0010 	str	r0, [sp, #16]
4001672c:	e59d0018 	ldr	r0, [sp, #24]
40016730:	e3800080 	orr	r0, r0, #128	; 0x80
40016734:	e58d0018 	str	r0, [sp, #24]
40016738:	e1d401b0 	ldrh	r0, [r4, #16]
4001673c:	e28d1004 	add	r1, sp, #4
40016740:	ebfff98c 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40016744:	e1d400b4 	ldrh	r0, [r4, #4]
40016748:	e3500003 	cmp	r0, #3
4001674c:	0a00002e 	beq	4001680c <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016750:	e1d401b2 	ldrh	r0, [r4, #18]
40016754:	ebfff8c5 	bl	40014a70 <CyU3PDmaSocketDisable>
40016758:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
4001675c:	e1d401b2 	ldrh	r0, [r4, #18]
40016760:	ebfff9dd 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
40016764:	e1d401b2 	ldrh	r0, [r4, #18]
40016768:	e28d1004 	add	r1, sp, #4
4001676c:	ebfff8d7 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40016770:	e58d5008 	str	r5, [sp, #8]
40016774:	e3a00000 	mov	r0, #0
40016778:	e58d000c 	str	r0, [sp, #12]
4001677c:	e59d0010 	ldr	r0, [sp, #16]
40016780:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016784:	e58d0010 	str	r0, [sp, #16]
40016788:	e59d0010 	ldr	r0, [sp, #16]
4001678c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016790:	e58d0010 	str	r0, [sp, #16]
40016794:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016798:	e3500001 	cmp	r0, #1
4001679c:	1a000003 	bne	400167b0 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
400167a0:	e59d0010 	ldr	r0, [sp, #16]
400167a4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400167a8:	e58d0010 	str	r0, [sp, #16]
400167ac:	ea000002 	b	400167bc <CyU3PDmaChannelSetXfer_TypeManual+0x194>
400167b0:	e59d0010 	ldr	r0, [sp, #16]
400167b4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400167b8:	e58d0010 	str	r0, [sp, #16]
400167bc:	e3e00000 	mvn	r0, #0
400167c0:	e58d0014 	str	r0, [sp, #20]
400167c4:	e3550000 	cmp	r5, #0
400167c8:	1a000006 	bne	400167e8 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
400167cc:	e59d0010 	ldr	r0, [sp, #16]
400167d0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400167d4:	e58d0010 	str	r0, [sp, #16]
400167d8:	e59d0018 	ldr	r0, [sp, #24]
400167dc:	e3c00080 	bic	r0, r0, #128	; 0x80
400167e0:	e58d0018 	str	r0, [sp, #24]
400167e4:	ea000005 	b	40016800 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
400167e8:	e59d0010 	ldr	r0, [sp, #16]
400167ec:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400167f0:	e58d0010 	str	r0, [sp, #16]
400167f4:	e59d0018 	ldr	r0, [sp, #24]
400167f8:	e3800080 	orr	r0, r0, #128	; 0x80
400167fc:	e58d0018 	str	r0, [sp, #24]
40016800:	e1d401b2 	ldrh	r0, [r4, #18]
40016804:	e28d1004 	add	r1, sp, #4
40016808:	ebfff95a 	bl	40014d78 <CyU3PDmaSocketSetConfig>
4001680c:	e28dd01c 	add	sp, sp, #28
40016810:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016814 <CyU3PDmaChannelSetupRecvBuffer>:
40016814:	e92d4070 	push	{r4, r5, r6, lr}
40016818:	e24dd028 	sub	sp, sp, #40	; 0x28
4001681c:	e1a04000 	mov	r4, r0
40016820:	e1a05001 	mov	r5, r1
40016824:	e3550000 	cmp	r5, #0
40016828:	1a000002 	bne	40016838 <CyU3PDmaChannelSetupRecvBuffer+0x24>
4001682c:	e3a00041 	mov	r0, #65	; 0x41
40016830:	e28dd028 	add	sp, sp, #40	; 0x28
40016834:	e8bd8070 	pop	{r4, r5, r6, pc}
40016838:	e5950000 	ldr	r0, [r5]
4001683c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016840:	3a000005 	bcc	4001685c <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016844:	e5950000 	ldr	r0, [r5]
40016848:	e1d510b6 	ldrh	r1, [r5, #6]
4001684c:	e0800001 	add	r0, r0, r1
40016850:	e59f11d4 	ldr	r1, [pc, #468]	; 40016a2c <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016854:	e1500001 	cmp	r0, r1
40016858:	3a000001 	bcc	40016864 <CyU3PDmaChannelSetupRecvBuffer+0x50>
4001685c:	e3a00040 	mov	r0, #64	; 0x40
40016860:	eafffff2 	b	40016830 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016864:	e1d500b6 	ldrh	r0, [r5, #6]
40016868:	e59f11c0 	ldr	r1, [pc, #448]	; 40016a30 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
4001686c:	e1500001 	cmp	r0, r1
40016870:	da000001 	ble	4001687c <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016874:	e3a00040 	mov	r0, #64	; 0x40
40016878:	eaffffec 	b	40016830 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001687c:	e1d500b6 	ldrh	r0, [r5, #6]
40016880:	e3500000 	cmp	r0, #0
40016884:	0a000002 	beq	40016894 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016888:	e1d500b6 	ldrh	r0, [r5, #6]
4001688c:	e310000f 	tst	r0, #15
40016890:	0a000001 	beq	4001689c <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016894:	e3a00040 	mov	r0, #64	; 0x40
40016898:	eaffffe4 	b	40016830 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001689c:	e3e01000 	mvn	r1, #0
400168a0:	e1a00004 	mov	r0, r4
400168a4:	ebfff9e5 	bl	40015040 <CyU3PDmaChannelAcquireLock>
400168a8:	e1a06000 	mov	r6, r0
400168ac:	e3560000 	cmp	r6, #0
400168b0:	0a000001 	beq	400168bc <CyU3PDmaChannelSetupRecvBuffer+0xa8>
400168b4:	e1a00006 	mov	r0, r6
400168b8:	eaffffdc 	b	40016830 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168bc:	e1d400b4 	ldrh	r0, [r4, #4]
400168c0:	e3500004 	cmp	r0, #4
400168c4:	1a000000 	bne	400168cc <CyU3PDmaChannelSetupRecvBuffer+0xb8>
400168c8:	e3a06046 	mov	r6, #70	; 0x46
400168cc:	e5940000 	ldr	r0, [r4]
400168d0:	e3500001 	cmp	r0, #1
400168d4:	0a000000 	beq	400168dc <CyU3PDmaChannelSetupRecvBuffer+0xc8>
400168d8:	e3a06043 	mov	r6, #67	; 0x43
400168dc:	e3560000 	cmp	r6, #0
400168e0:	0a000003 	beq	400168f4 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
400168e4:	e284003c 	add	r0, r4, #60	; 0x3c
400168e8:	ebffcde6 	bl	4000a088 <_txe_mutex_put>
400168ec:	e1a00006 	mov	r0, r6
400168f0:	eaffffce 	b	40016830 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168f4:	e1d401b0 	ldrh	r0, [r4, #16]
400168f8:	ebfff85c 	bl	40014a70 <CyU3PDmaSocketDisable>
400168fc:	e1d401b0 	ldrh	r0, [r4, #16]
40016900:	e3a01000 	mov	r1, #0
40016904:	ebfff974 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
40016908:	e3a02002 	mov	r2, #2
4001690c:	e3e01027 	mvn	r1, #39	; 0x27
40016910:	e2840074 	add	r0, r4, #116	; 0x74
40016914:	ebffcd0e 	bl	40009d54 <_txe_event_flags_set>
40016918:	e3a00004 	mov	r0, #4
4001691c:	e5840000 	str	r0, [r4]
40016920:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016924:	e3500000 	cmp	r0, #0
40016928:	0a000002 	beq	40016938 <CyU3PDmaChannelSetupRecvBuffer+0x124>
4001692c:	e1d510b6 	ldrh	r1, [r5, #6]
40016930:	e5950000 	ldr	r0, [r5]
40016934:	ebffed96 	bl	40011f94 <CyU3PSysFlushDRegion>
40016938:	e1d401b0 	ldrh	r0, [r4, #16]
4001693c:	e1a0100d 	mov	r1, sp
40016940:	ebfff862 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40016944:	e59d0000 	ldr	r0, [sp]
40016948:	e1c401b6 	strh	r0, [r4, #22]
4001694c:	e1d401b4 	ldrh	r0, [r4, #20]
40016950:	e28d1018 	add	r1, sp, #24
40016954:	eb002ebb 	bl	40022448 <CyU3PDmaDscrGetConfig>
40016958:	e5950000 	ldr	r0, [r5]
4001695c:	e58d0018 	str	r0, [sp, #24]
40016960:	e1d401b0 	ldrh	r0, [r4, #16]
40016964:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016968:	e1810800 	orr	r0, r1, r0, lsl #16
4001696c:	e58d001c 	str	r0, [sp, #28]
40016970:	e59d001c 	ldr	r0, [sp, #28]
40016974:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016978:	e58d001c 	str	r0, [sp, #28]
4001697c:	e1d401b6 	ldrh	r0, [r4, #22]
40016980:	e1e01741 	mvn	r1, r1, asr #14
40016984:	e1810800 	orr	r0, r1, r0, lsl #16
40016988:	e58d0020 	str	r0, [sp, #32]
4001698c:	e1d500b6 	ldrh	r0, [r5, #6]
40016990:	e241100f 	sub	r1, r1, #15
40016994:	e0000001 	and	r0, r0, r1
40016998:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001699c:	e1d401b4 	ldrh	r0, [r4, #20]
400169a0:	e28d1018 	add	r1, sp, #24
400169a4:	eb002ec2 	bl	400224b4 <CyU3PDmaDscrSetConfig>
400169a8:	e59d000c 	ldr	r0, [sp, #12]
400169ac:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
400169b0:	e58d000c 	str	r0, [sp, #12]
400169b4:	e59d000c 	ldr	r0, [sp, #12]
400169b8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400169bc:	e58d000c 	str	r0, [sp, #12]
400169c0:	e59d000c 	ldr	r0, [sp, #12]
400169c4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400169c8:	e58d000c 	str	r0, [sp, #12]
400169cc:	e59d000c 	ldr	r0, [sp, #12]
400169d0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400169d4:	e58d000c 	str	r0, [sp, #12]
400169d8:	e3a00001 	mov	r0, #1
400169dc:	e58d0004 	str	r0, [sp, #4]
400169e0:	e3a00000 	mov	r0, #0
400169e4:	e58d0008 	str	r0, [sp, #8]
400169e8:	e3e00000 	mvn	r0, #0
400169ec:	e58d0010 	str	r0, [sp, #16]
400169f0:	e59d0014 	ldr	r0, [sp, #20]
400169f4:	e3800001 	orr	r0, r0, #1
400169f8:	e58d0014 	str	r0, [sp, #20]
400169fc:	e59d0014 	ldr	r0, [sp, #20]
40016a00:	e3c00080 	bic	r0, r0, #128	; 0x80
40016a04:	e58d0014 	str	r0, [sp, #20]
40016a08:	e1d401b4 	ldrh	r0, [r4, #20]
40016a0c:	e58d0000 	str	r0, [sp]
40016a10:	e1d401b0 	ldrh	r0, [r4, #16]
40016a14:	e1a0100d 	mov	r1, sp
40016a18:	ebfff8d6 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40016a1c:	e284003c 	add	r0, r4, #60	; 0x3c
40016a20:	ebffcd98 	bl	4000a088 <_txe_mutex_put>
40016a24:	e3a00000 	mov	r0, #0
40016a28:	eaffff80 	b	40016830 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016a2c:	40080000 	.word	0x40080000
40016a30:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016a34 <CyU3PDmaChannelSetupSendBuffer>:
40016a34:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016a38:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016a3c:	e1a04000 	mov	r4, r0
40016a40:	e1a05001 	mov	r5, r1
40016a44:	e3550000 	cmp	r5, #0
40016a48:	1a000002 	bne	40016a58 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016a4c:	e3a00041 	mov	r0, #65	; 0x41
40016a50:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016a54:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016a58:	e5950000 	ldr	r0, [r5]
40016a5c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016a60:	3a000005 	bcc	40016a7c <CyU3PDmaChannelSetupSendBuffer+0x48>
40016a64:	e5950000 	ldr	r0, [r5]
40016a68:	e1d510b4 	ldrh	r1, [r5, #4]
40016a6c:	e0800001 	add	r0, r0, r1
40016a70:	e59f11ec 	ldr	r1, [pc, #492]	; 40016c64 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016a74:	e1500001 	cmp	r0, r1
40016a78:	3a000001 	bcc	40016a84 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016a7c:	e3a00040 	mov	r0, #64	; 0x40
40016a80:	eafffff2 	b	40016a50 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016a84:	e1d500b4 	ldrh	r0, [r5, #4]
40016a88:	e59f11d8 	ldr	r1, [pc, #472]	; 40016c68 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016a8c:	e1500001 	cmp	r0, r1
40016a90:	da000001 	ble	40016a9c <CyU3PDmaChannelSetupSendBuffer+0x68>
40016a94:	e3a00040 	mov	r0, #64	; 0x40
40016a98:	eaffffec 	b	40016a50 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016a9c:	e3e01000 	mvn	r1, #0
40016aa0:	e1a00004 	mov	r0, r4
40016aa4:	ebfff965 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40016aa8:	e1a07000 	mov	r7, r0
40016aac:	e3570000 	cmp	r7, #0
40016ab0:	0a000001 	beq	40016abc <CyU3PDmaChannelSetupSendBuffer+0x88>
40016ab4:	e1a00007 	mov	r0, r7
40016ab8:	eaffffe4 	b	40016a50 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016abc:	e1d400b4 	ldrh	r0, [r4, #4]
40016ac0:	e3500003 	cmp	r0, #3
40016ac4:	1a000000 	bne	40016acc <CyU3PDmaChannelSetupSendBuffer+0x98>
40016ac8:	e3a07046 	mov	r7, #70	; 0x46
40016acc:	e5940000 	ldr	r0, [r4]
40016ad0:	e3500001 	cmp	r0, #1
40016ad4:	0a000000 	beq	40016adc <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016ad8:	e3a07043 	mov	r7, #67	; 0x43
40016adc:	e3570000 	cmp	r7, #0
40016ae0:	0a000003 	beq	40016af4 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016ae4:	e284003c 	add	r0, r4, #60	; 0x3c
40016ae8:	ebffcd66 	bl	4000a088 <_txe_mutex_put>
40016aec:	e1a00007 	mov	r0, r7
40016af0:	eaffffd6 	b	40016a50 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016af4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016af8:	e3500000 	cmp	r0, #0
40016afc:	0a000005 	beq	40016b18 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016b00:	e1d500b4 	ldrh	r0, [r5, #4]
40016b04:	e3500000 	cmp	r0, #0
40016b08:	0a000002 	beq	40016b18 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016b0c:	e1d510b4 	ldrh	r1, [r5, #4]
40016b10:	e5950000 	ldr	r0, [r5]
40016b14:	ebffed10 	bl	40011f5c <CyU3PSysCleanDRegion>
40016b18:	e1d401b2 	ldrh	r0, [r4, #18]
40016b1c:	ebfff7d3 	bl	40014a70 <CyU3PDmaSocketDisable>
40016b20:	e1d401b2 	ldrh	r0, [r4, #18]
40016b24:	e3a01000 	mov	r1, #0
40016b28:	ebfff8eb 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
40016b2c:	e3a02002 	mov	r2, #2
40016b30:	e3e01027 	mvn	r1, #39	; 0x27
40016b34:	e2840074 	add	r0, r4, #116	; 0x74
40016b38:	ebffcc85 	bl	40009d54 <_txe_event_flags_set>
40016b3c:	e3a00003 	mov	r0, #3
40016b40:	e5840000 	str	r0, [r4]
40016b44:	e1d401b2 	ldrh	r0, [r4, #18]
40016b48:	e28d1004 	add	r1, sp, #4
40016b4c:	ebfff7df 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40016b50:	e59d0004 	ldr	r0, [sp, #4]
40016b54:	e1c401b8 	strh	r0, [r4, #24]
40016b58:	e1d401b4 	ldrh	r0, [r4, #20]
40016b5c:	e28d101c 	add	r1, sp, #28
40016b60:	eb002e38 	bl	40022448 <CyU3PDmaDscrGetConfig>
40016b64:	e5950000 	ldr	r0, [r5]
40016b68:	e58d001c 	str	r0, [sp, #28]
40016b6c:	e1d401b2 	ldrh	r0, [r4, #18]
40016b70:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016b74:	e58d0020 	str	r0, [sp, #32]
40016b78:	e59d0020 	ldr	r0, [sp, #32]
40016b7c:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016b80:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016b84:	e58d0020 	str	r0, [sp, #32]
40016b88:	e1d401b8 	ldrh	r0, [r4, #24]
40016b8c:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016b90:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016b94:	e1d500b4 	ldrh	r0, [r5, #4]
40016b98:	e280000f 	add	r0, r0, #15
40016b9c:	e59f10c4 	ldr	r1, [pc, #196]	; 40016c68 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016ba0:	e0006001 	and	r6, r0, r1
40016ba4:	e1d500b4 	ldrh	r0, [r5, #4]
40016ba8:	e1860800 	orr	r0, r6, r0, lsl #16
40016bac:	e3800008 	orr	r0, r0, #8
40016bb0:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016bb4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016bb8:	e1d510b8 	ldrh	r1, [r5, #8]
40016bbc:	e201100e 	and	r1, r1, #14
40016bc0:	e1800001 	orr	r0, r0, r1
40016bc4:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016bc8:	e1d401b4 	ldrh	r0, [r4, #20]
40016bcc:	e28d101c 	add	r1, sp, #28
40016bd0:	eb002e37 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40016bd4:	e59d0010 	ldr	r0, [sp, #16]
40016bd8:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016bdc:	e58d0010 	str	r0, [sp, #16]
40016be0:	e59d0010 	ldr	r0, [sp, #16]
40016be4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016be8:	e58d0010 	str	r0, [sp, #16]
40016bec:	e59d0010 	ldr	r0, [sp, #16]
40016bf0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016bf4:	e58d0010 	str	r0, [sp, #16]
40016bf8:	e59d0010 	ldr	r0, [sp, #16]
40016bfc:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40016c00:	e58d0010 	str	r0, [sp, #16]
40016c04:	e59d0010 	ldr	r0, [sp, #16]
40016c08:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016c0c:	e58d0010 	str	r0, [sp, #16]
40016c10:	e1d500b4 	ldrh	r0, [r5, #4]
40016c14:	e58d0008 	str	r0, [sp, #8]
40016c18:	e3a00000 	mov	r0, #0
40016c1c:	e58d000c 	str	r0, [sp, #12]
40016c20:	e3e00000 	mvn	r0, #0
40016c24:	e58d0014 	str	r0, [sp, #20]
40016c28:	e59d0018 	ldr	r0, [sp, #24]
40016c2c:	e3800002 	orr	r0, r0, #2
40016c30:	e58d0018 	str	r0, [sp, #24]
40016c34:	e59d0018 	ldr	r0, [sp, #24]
40016c38:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c3c:	e58d0018 	str	r0, [sp, #24]
40016c40:	e1d401b4 	ldrh	r0, [r4, #20]
40016c44:	e58d0004 	str	r0, [sp, #4]
40016c48:	e1d401b2 	ldrh	r0, [r4, #18]
40016c4c:	e28d1004 	add	r1, sp, #4
40016c50:	ebfff848 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40016c54:	e284003c 	add	r0, r4, #60	; 0x3c
40016c58:	ebffcd0a 	bl	4000a088 <_txe_mutex_put>
40016c5c:	e3a00000 	mov	r0, #0
40016c60:	eaffff7a 	b	40016a50 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016c64:	40080000 	.word	0x40080000
40016c68:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40016c6c <CyU3PDmaChannelWaitForCompletion>:
40016c6c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40016c70:	e1a04000 	mov	r4, r0
40016c74:	e1a05001 	mov	r5, r1
40016c78:	e3a08000 	mov	r8, #0
40016c7c:	e1a01005 	mov	r1, r5
40016c80:	e1a00004 	mov	r0, r4
40016c84:	ebfff8ed 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40016c88:	e1a07000 	mov	r7, r0
40016c8c:	e3570000 	cmp	r7, #0
40016c90:	0a000001 	beq	40016c9c <CyU3PDmaChannelWaitForCompletion+0x30>
40016c94:	e1a00007 	mov	r0, r7
40016c98:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40016c9c:	e5946000 	ldr	r6, [r4]
40016ca0:	e3560001 	cmp	r6, #1
40016ca4:	1a00000b 	bne	40016cd8 <CyU3PDmaChannelWaitForCompletion+0x6c>
40016ca8:	e3a03000 	mov	r3, #0
40016cac:	e58d3000 	str	r3, [sp]
40016cb0:	e28d3004 	add	r3, sp, #4
40016cb4:	e3a02000 	mov	r2, #0
40016cb8:	e3a01007 	mov	r1, #7
40016cbc:	e2840074 	add	r0, r4, #116	; 0x74
40016cc0:	ebffcbf3 	bl	40009c94 <_txe_event_flags_get>
40016cc4:	e1a07000 	mov	r7, r0
40016cc8:	e3570000 	cmp	r7, #0
40016ccc:	0a000016 	beq	40016d2c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cd0:	e3a07042 	mov	r7, #66	; 0x42
40016cd4:	ea000014 	b	40016d2c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cd8:	e3560002 	cmp	r6, #2
40016cdc:	1a000005 	bne	40016cf8 <CyU3PDmaChannelWaitForCompletion+0x8c>
40016ce0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40016ce4:	e3500000 	cmp	r0, #0
40016ce8:	1a000000 	bne	40016cf0 <CyU3PDmaChannelWaitForCompletion+0x84>
40016cec:	e3a07046 	mov	r7, #70	; 0x46
40016cf0:	e3a08061 	mov	r8, #97	; 0x61
40016cf4:	ea00000c 	b	40016d2c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cf8:	e3560003 	cmp	r6, #3
40016cfc:	1a000001 	bne	40016d08 <CyU3PDmaChannelWaitForCompletion+0x9c>
40016d00:	e3a08062 	mov	r8, #98	; 0x62
40016d04:	ea000008 	b	40016d2c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d08:	e3560004 	cmp	r6, #4
40016d0c:	1a000001 	bne	40016d18 <CyU3PDmaChannelWaitForCompletion+0xac>
40016d10:	e3a08064 	mov	r8, #100	; 0x64
40016d14:	ea000004 	b	40016d2c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d18:	e3560005 	cmp	r6, #5
40016d1c:	1a000001 	bne	40016d28 <CyU3PDmaChannelWaitForCompletion+0xbc>
40016d20:	e3a07049 	mov	r7, #73	; 0x49
40016d24:	ea000000 	b	40016d2c <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d28:	e3a07042 	mov	r7, #66	; 0x42
40016d2c:	e284003c 	add	r0, r4, #60	; 0x3c
40016d30:	ebffccd4 	bl	4000a088 <_txe_mutex_put>
40016d34:	e3570000 	cmp	r7, #0
40016d38:	1a000015 	bne	40016d94 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d3c:	e3580000 	cmp	r8, #0
40016d40:	0a000013 	beq	40016d94 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d44:	e58d5000 	str	r5, [sp]
40016d48:	e28d3004 	add	r3, sp, #4
40016d4c:	e3a02000 	mov	r2, #0
40016d50:	e1a01008 	mov	r1, r8
40016d54:	e2840074 	add	r0, r4, #116	; 0x74
40016d58:	ebffcbcd 	bl	40009c94 <_txe_event_flags_get>
40016d5c:	e1a07000 	mov	r7, r0
40016d60:	e3570000 	cmp	r7, #0
40016d64:	0a000001 	beq	40016d70 <CyU3PDmaChannelWaitForCompletion+0x104>
40016d68:	e3a07045 	mov	r7, #69	; 0x45
40016d6c:	ea000008 	b	40016d94 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d70:	e59d0004 	ldr	r0, [sp, #4]
40016d74:	e3100040 	tst	r0, #64	; 0x40
40016d78:	0a000001 	beq	40016d84 <CyU3PDmaChannelWaitForCompletion+0x118>
40016d7c:	e3a07049 	mov	r7, #73	; 0x49
40016d80:	ea000003 	b	40016d94 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d84:	e59d0004 	ldr	r0, [sp, #4]
40016d88:	e3100020 	tst	r0, #32
40016d8c:	0a000000 	beq	40016d94 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d90:	e3a07048 	mov	r7, #72	; 0x48
40016d94:	e1a00007 	mov	r0, r7
40016d98:	eaffffbe 	b	40016c98 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40016d9c <CyU3PDmaChannelWaitForRecvBuffer>:
40016d9c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016da0:	e24dd018 	sub	sp, sp, #24
40016da4:	e1a04000 	mov	r4, r0
40016da8:	e1a05001 	mov	r5, r1
40016dac:	e1a06002 	mov	r6, r2
40016db0:	e3550000 	cmp	r5, #0
40016db4:	1a000002 	bne	40016dc4 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
40016db8:	e3a00041 	mov	r0, #65	; 0x41
40016dbc:	e28dd018 	add	sp, sp, #24
40016dc0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016dc4:	e1a01006 	mov	r1, r6
40016dc8:	e1a00004 	mov	r0, r4
40016dcc:	ebfff89b 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40016dd0:	e1a07000 	mov	r7, r0
40016dd4:	e3570000 	cmp	r7, #0
40016dd8:	0a000001 	beq	40016de4 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40016ddc:	e1a00007 	mov	r0, r7
40016de0:	eafffff5 	b	40016dbc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016de4:	e1d400b4 	ldrh	r0, [r4, #4]
40016de8:	e3500004 	cmp	r0, #4
40016dec:	1a000000 	bne	40016df4 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40016df0:	e3a07046 	mov	r7, #70	; 0x46
40016df4:	e5948000 	ldr	r8, [r4]
40016df8:	e3570000 	cmp	r7, #0
40016dfc:	1a000034 	bne	40016ed4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016e00:	e3580004 	cmp	r8, #4
40016e04:	1a00001e 	bne	40016e84 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40016e08:	e284003c 	add	r0, r4, #60	; 0x3c
40016e0c:	ebffcc9d 	bl	4000a088 <_txe_mutex_put>
40016e10:	e58d6000 	str	r6, [sp]
40016e14:	e28d3014 	add	r3, sp, #20
40016e18:	e3a02000 	mov	r2, #0
40016e1c:	e3a01064 	mov	r1, #100	; 0x64
40016e20:	e2840074 	add	r0, r4, #116	; 0x74
40016e24:	ebffcb9a 	bl	40009c94 <_txe_event_flags_get>
40016e28:	e1a07000 	mov	r7, r0
40016e2c:	e3570000 	cmp	r7, #0
40016e30:	0a000001 	beq	40016e3c <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40016e34:	e3a00045 	mov	r0, #69	; 0x45
40016e38:	eaffffdf 	b	40016dbc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e3c:	e59d0014 	ldr	r0, [sp, #20]
40016e40:	e3100040 	tst	r0, #64	; 0x40
40016e44:	0a000001 	beq	40016e50 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40016e48:	e3a00049 	mov	r0, #73	; 0x49
40016e4c:	eaffffda 	b	40016dbc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e50:	e59d0014 	ldr	r0, [sp, #20]
40016e54:	e3100020 	tst	r0, #32
40016e58:	0a000001 	beq	40016e64 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40016e5c:	e3a00048 	mov	r0, #72	; 0x48
40016e60:	eaffffd5 	b	40016dbc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e64:	e1a01006 	mov	r1, r6
40016e68:	e1a00004 	mov	r0, r4
40016e6c:	ebfff873 	bl	40015040 <CyU3PDmaChannelAcquireLock>
40016e70:	e1a07000 	mov	r7, r0
40016e74:	e3570000 	cmp	r7, #0
40016e78:	0a000015 	beq	40016ed4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016e7c:	e1a00007 	mov	r0, r7
40016e80:	eaffffcd 	b	40016dbc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e84:	e3580001 	cmp	r8, #1
40016e88:	1a000010 	bne	40016ed0 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40016e8c:	e3a03000 	mov	r3, #0
40016e90:	e58d3000 	str	r3, [sp]
40016e94:	e28d3014 	add	r3, sp, #20
40016e98:	e3a02000 	mov	r2, #0
40016e9c:	e3a01024 	mov	r1, #36	; 0x24
40016ea0:	e2840074 	add	r0, r4, #116	; 0x74
40016ea4:	ebffcb7a 	bl	40009c94 <_txe_event_flags_get>
40016ea8:	e1a07000 	mov	r7, r0
40016eac:	e3570000 	cmp	r7, #0
40016eb0:	0a000001 	beq	40016ebc <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40016eb4:	e3a07047 	mov	r7, #71	; 0x47
40016eb8:	ea000005 	b	40016ed4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016ebc:	e59d0014 	ldr	r0, [sp, #20]
40016ec0:	e3100020 	tst	r0, #32
40016ec4:	0a000002 	beq	40016ed4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016ec8:	e3a07042 	mov	r7, #66	; 0x42
40016ecc:	ea000000 	b	40016ed4 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016ed0:	e3a07047 	mov	r7, #71	; 0x47
40016ed4:	e3570000 	cmp	r7, #0
40016ed8:	0a000003 	beq	40016eec <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40016edc:	e284003c 	add	r0, r4, #60	; 0x3c
40016ee0:	ebffcc68 	bl	4000a088 <_txe_mutex_put>
40016ee4:	e1a00007 	mov	r0, r7
40016ee8:	eaffffb3 	b	40016dbc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016eec:	e1d401b4 	ldrh	r0, [r4, #20]
40016ef0:	e28d1004 	add	r1, sp, #4
40016ef4:	eb002d53 	bl	40022448 <CyU3PDmaDscrGetConfig>
40016ef8:	e59d0004 	ldr	r0, [sp, #4]
40016efc:	e5850000 	str	r0, [r5]
40016f00:	e59d0010 	ldr	r0, [sp, #16]
40016f04:	e59f1030 	ldr	r1, [pc, #48]	; 40016f3c <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40016f08:	e0010820 	and	r0, r1, r0, lsr #16
40016f0c:	e1c500b4 	strh	r0, [r5, #4]
40016f10:	e241100f 	sub	r1, r1, #15
40016f14:	e59d0010 	ldr	r0, [sp, #16]
40016f18:	e0000001 	and	r0, r0, r1
40016f1c:	e1c500b6 	strh	r0, [r5, #6]
40016f20:	e59d0010 	ldr	r0, [sp, #16]
40016f24:	e200000f 	and	r0, r0, #15
40016f28:	e1c500b8 	strh	r0, [r5, #8]
40016f2c:	e284003c 	add	r0, r4, #60	; 0x3c
40016f30:	ebffcc54 	bl	4000a088 <_txe_mutex_put>
40016f34:	e3a00000 	mov	r0, #0
40016f38:	eaffff9f 	b	40016dbc <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f3c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

40016f40 <CyU3PDmaConfigureSockets_TypeAuto>:
40016f40:	e92d4010 	push	{r4, lr}
40016f44:	e24dd018 	sub	sp, sp, #24
40016f48:	e1a04000 	mov	r4, r0
40016f4c:	e1d401b0 	ldrh	r0, [r4, #16]
40016f50:	ebfff6c6 	bl	40014a70 <CyU3PDmaSocketDisable>
40016f54:	e1d401b2 	ldrh	r0, [r4, #18]
40016f58:	ebfff6c4 	bl	40014a70 <CyU3PDmaSocketDisable>
40016f5c:	e1d401b0 	ldrh	r0, [r4, #16]
40016f60:	e1a0100d 	mov	r1, sp
40016f64:	ebfff6d9 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40016f68:	e1d400bc 	ldrh	r0, [r4, #12]
40016f6c:	e58d0000 	str	r0, [sp]
40016f70:	e3a00000 	mov	r0, #0
40016f74:	e58d0004 	str	r0, [sp, #4]
40016f78:	e58d0008 	str	r0, [sp, #8]
40016f7c:	e3a00646 	mov	r0, #73400320	; 0x4600000
40016f80:	e58d000c 	str	r0, [sp, #12]
40016f84:	e1d401b0 	ldrh	r0, [r4, #16]
40016f88:	eb000df6 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
40016f8c:	e3500000 	cmp	r0, #0
40016f90:	0a000002 	beq	40016fa0 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40016f94:	e59d000c 	ldr	r0, [sp, #12]
40016f98:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016f9c:	e58d000c 	str	r0, [sp, #12]
40016fa0:	e3e00000 	mvn	r0, #0
40016fa4:	e58d0010 	str	r0, [sp, #16]
40016fa8:	e1d400b4 	ldrh	r0, [r4, #4]
40016fac:	e3500001 	cmp	r0, #1
40016fb0:	1a000001 	bne	40016fbc <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40016fb4:	e3a00041 	mov	r0, #65	; 0x41
40016fb8:	ea000000 	b	40016fc0 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
40016fbc:	e3a00040 	mov	r0, #64	; 0x40
40016fc0:	e58d0014 	str	r0, [sp, #20]
40016fc4:	e1d401b0 	ldrh	r0, [r4, #16]
40016fc8:	e1a0100d 	mov	r1, sp
40016fcc:	ebfff769 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40016fd0:	e1d401b2 	ldrh	r0, [r4, #18]
40016fd4:	e1a0100d 	mov	r1, sp
40016fd8:	ebfff6bc 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40016fdc:	e1d400bc 	ldrh	r0, [r4, #12]
40016fe0:	e58d0000 	str	r0, [sp]
40016fe4:	e3a00000 	mov	r0, #0
40016fe8:	e58d0004 	str	r0, [sp, #4]
40016fec:	e58d0008 	str	r0, [sp, #8]
40016ff0:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40016ff4:	e58d000c 	str	r0, [sp, #12]
40016ff8:	e1d401b2 	ldrh	r0, [r4, #18]
40016ffc:	eb000dd9 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
40017000:	e3500000 	cmp	r0, #0
40017004:	0a000002 	beq	40017014 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40017008:	e59d000c 	ldr	r0, [sp, #12]
4001700c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017010:	e58d000c 	str	r0, [sp, #12]
40017014:	e3e00000 	mvn	r0, #0
40017018:	e58d0010 	str	r0, [sp, #16]
4001701c:	e3a000c0 	mov	r0, #192	; 0xc0
40017020:	e58d0014 	str	r0, [sp, #20]
40017024:	e1d401b2 	ldrh	r0, [r4, #18]
40017028:	e1a0100d 	mov	r1, sp
4001702c:	ebfff751 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40017030:	e3a00000 	mov	r0, #0
40017034:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017038:	e28dd018 	add	sp, sp, #24
4001703c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

40017040 <CyU3PDmaConfigureSockets_TypeManual>:
40017040:	e92d4010 	push	{r4, lr}
40017044:	e24dd018 	sub	sp, sp, #24
40017048:	e1a04000 	mov	r4, r0
4001704c:	e1d400b4 	ldrh	r0, [r4, #4]
40017050:	e3500004 	cmp	r0, #4
40017054:	0a00001f 	beq	400170d8 <CyU3PDmaConfigureSockets_TypeManual+0x98>
40017058:	e1d401b0 	ldrh	r0, [r4, #16]
4001705c:	ebfff683 	bl	40014a70 <CyU3PDmaSocketDisable>
40017060:	e1d401b0 	ldrh	r0, [r4, #16]
40017064:	e1a0100d 	mov	r1, sp
40017068:	ebfff698 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001706c:	e1d400bc 	ldrh	r0, [r4, #12]
40017070:	e58d0000 	str	r0, [sp]
40017074:	e3a00000 	mov	r0, #0
40017078:	e58d0004 	str	r0, [sp, #4]
4001707c:	e58d0008 	str	r0, [sp, #8]
40017080:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017084:	e58d000c 	str	r0, [sp, #12]
40017088:	e1d401b0 	ldrh	r0, [r4, #16]
4001708c:	eb000db5 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
40017090:	e3500000 	cmp	r0, #0
40017094:	0a000002 	beq	400170a4 <CyU3PDmaConfigureSockets_TypeManual+0x64>
40017098:	e59d000c 	ldr	r0, [sp, #12]
4001709c:	e3800b01 	orr	r0, r0, #1024	; 0x400
400170a0:	e58d000c 	str	r0, [sp, #12]
400170a4:	e3e00000 	mvn	r0, #0
400170a8:	e58d0010 	str	r0, [sp, #16]
400170ac:	e3a00041 	mov	r0, #65	; 0x41
400170b0:	e58d0014 	str	r0, [sp, #20]
400170b4:	e1d400b4 	ldrh	r0, [r4, #4]
400170b8:	e3500003 	cmp	r0, #3
400170bc:	1a000002 	bne	400170cc <CyU3PDmaConfigureSockets_TypeManual+0x8c>
400170c0:	e59d0014 	ldr	r0, [sp, #20]
400170c4:	e3800080 	orr	r0, r0, #128	; 0x80
400170c8:	e58d0014 	str	r0, [sp, #20]
400170cc:	e1d401b0 	ldrh	r0, [r4, #16]
400170d0:	e1a0100d 	mov	r1, sp
400170d4:	ebfff727 	bl	40014d78 <CyU3PDmaSocketSetConfig>
400170d8:	e1d400b4 	ldrh	r0, [r4, #4]
400170dc:	e3500003 	cmp	r0, #3
400170e0:	0a000019 	beq	4001714c <CyU3PDmaConfigureSockets_TypeManual+0x10c>
400170e4:	e1d401b2 	ldrh	r0, [r4, #18]
400170e8:	ebfff660 	bl	40014a70 <CyU3PDmaSocketDisable>
400170ec:	e1d401b2 	ldrh	r0, [r4, #18]
400170f0:	e1a0100d 	mov	r1, sp
400170f4:	ebfff675 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
400170f8:	e1d400be 	ldrh	r0, [r4, #14]
400170fc:	e58d0000 	str	r0, [sp]
40017100:	e3a00000 	mov	r0, #0
40017104:	e58d0004 	str	r0, [sp, #4]
40017108:	e58d0008 	str	r0, [sp, #8]
4001710c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017110:	e58d000c 	str	r0, [sp, #12]
40017114:	e1d401b2 	ldrh	r0, [r4, #18]
40017118:	eb000d92 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
4001711c:	e3500000 	cmp	r0, #0
40017120:	0a000002 	beq	40017130 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
40017124:	e59d000c 	ldr	r0, [sp, #12]
40017128:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001712c:	e58d000c 	str	r0, [sp, #12]
40017130:	e3e00000 	mvn	r0, #0
40017134:	e58d0010 	str	r0, [sp, #16]
40017138:	e3a000c2 	mov	r0, #194	; 0xc2
4001713c:	e58d0014 	str	r0, [sp, #20]
40017140:	e1d401b2 	ldrh	r0, [r4, #18]
40017144:	e1a0100d 	mov	r1, sp
40017148:	ebfff70a 	bl	40014d78 <CyU3PDmaSocketSetConfig>
4001714c:	e3a00000 	mov	r0, #0
40017150:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017154:	e28dd018 	add	sp, sp, #24
40017158:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

4001715c <CyU3PDmaMultiChannelAcquireLock>:
4001715c:	e92d4070 	push	{r4, r5, r6, lr}
40017160:	e1a04000 	mov	r4, r0
40017164:	e1a05001 	mov	r5, r1
40017168:	e3540000 	cmp	r4, #0
4001716c:	1a000001 	bne	40017178 <CyU3PDmaMultiChannelAcquireLock+0x1c>
40017170:	e3a00041 	mov	r0, #65	; 0x41
40017174:	e8bd8070 	pop	{r4, r5, r6, pc}
40017178:	e5940000 	ldr	r0, [r4]
4001717c:	e3500000 	cmp	r0, #0
40017180:	1a000001 	bne	4001718c <CyU3PDmaMultiChannelAcquireLock+0x30>
40017184:	e3a00044 	mov	r0, #68	; 0x44
40017188:	eafffff9 	b	40017174 <CyU3PDmaMultiChannelAcquireLock+0x18>
4001718c:	e1a01005 	mov	r1, r5
40017190:	e2840078 	add	r0, r4, #120	; 0x78
40017194:	ebffcb86 	bl	40009fb4 <_txe_mutex_get>
40017198:	e3500000 	cmp	r0, #0
4001719c:	0a000001 	beq	400171a8 <CyU3PDmaMultiChannelAcquireLock+0x4c>
400171a0:	e3a0001d 	mov	r0, #29
400171a4:	eafffff2 	b	40017174 <CyU3PDmaMultiChannelAcquireLock+0x18>
400171a8:	e3a00000 	mov	r0, #0
400171ac:	eafffff0 	b	40017174 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

400171b0 <CyU3PDmaMultiChannelCommitBuffer>:
400171b0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400171b4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400171b8:	e1a04000 	mov	r4, r0
400171bc:	e1a05001 	mov	r5, r1
400171c0:	e1a06002 	mov	r6, r2
400171c4:	e3e01000 	mvn	r1, #0
400171c8:	e1a00004 	mov	r0, r4
400171cc:	ebffffe2 	bl	4001715c <CyU3PDmaMultiChannelAcquireLock>
400171d0:	e1a0b000 	mov	fp, r0
400171d4:	e35b0000 	cmp	fp, #0
400171d8:	0a000002 	beq	400171e8 <CyU3PDmaMultiChannelCommitBuffer+0x38>
400171dc:	e1a0000b 	mov	r0, fp
400171e0:	e28dd03c 	add	sp, sp, #60	; 0x3c
400171e4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400171e8:	e1d400b4 	ldrh	r0, [r4, #4]
400171ec:	e20070ff 	and	r7, r0, #255	; 0xff
400171f0:	e1d400b6 	ldrh	r0, [r4, #6]
400171f4:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400171f8:	e0400001 	sub	r0, r0, r1
400171fc:	e1500005 	cmp	r0, r5
40017200:	aa000000 	bge	40017208 <CyU3PDmaMultiChannelCommitBuffer+0x58>
40017204:	e3a0b040 	mov	fp, #64	; 0x40
40017208:	e5940000 	ldr	r0, [r4]
4001720c:	e3500002 	cmp	r0, #2
40017210:	0a000000 	beq	40017218 <CyU3PDmaMultiChannelCommitBuffer+0x68>
40017214:	e3a0b042 	mov	fp, #66	; 0x42
40017218:	e5940000 	ldr	r0, [r4]
4001721c:	e3500005 	cmp	r0, #5
40017220:	1a000000 	bne	40017228 <CyU3PDmaMultiChannelCommitBuffer+0x78>
40017224:	e3a0b049 	mov	fp, #73	; 0x49
40017228:	e5940000 	ldr	r0, [r4]
4001722c:	e3500007 	cmp	r0, #7
40017230:	1a000000 	bne	40017238 <CyU3PDmaMultiChannelCommitBuffer+0x88>
40017234:	e3a0b048 	mov	fp, #72	; 0x48
40017238:	e3570006 	cmp	r7, #6
4001723c:	1a000000 	bne	40017244 <CyU3PDmaMultiChannelCommitBuffer+0x94>
40017240:	e3a0b046 	mov	fp, #70	; 0x46
40017244:	e3570005 	cmp	r7, #5
40017248:	1a000034 	bne	40017320 <CyU3PDmaMultiChannelCommitBuffer+0x170>
4001724c:	e35b0000 	cmp	fp, #0
40017250:	1a000032 	bne	40017320 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017254:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017258:	e28d1024 	add	r1, sp, #36	; 0x24
4001725c:	ebfff61b 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40017260:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40017264:	e3100702 	tst	r0, #524288	; 0x80000
40017268:	0a000027 	beq	4001730c <CyU3PDmaMultiChannelCommitBuffer+0x15c>
4001726c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40017270:	e1a09800 	lsl	r9, r0, #16
40017274:	e1a09829 	lsr	r9, r9, #16
40017278:	e28d1004 	add	r1, sp, #4
4001727c:	e1a00009 	mov	r0, r9
40017280:	eb002c70 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017284:	e59d0010 	ldr	r0, [sp, #16]
40017288:	e3100008 	tst	r0, #8
4001728c:	0a00001c 	beq	40017304 <CyU3PDmaMultiChannelCommitBuffer+0x154>
40017290:	e59d0010 	ldr	r0, [sp, #16]
40017294:	e1a00800 	lsl	r0, r0, #16
40017298:	e1a00820 	lsr	r0, r0, #16
4001729c:	e58d0010 	str	r0, [sp, #16]
400172a0:	e59d0010 	ldr	r0, [sp, #16]
400172a4:	e1800805 	orr	r0, r0, r5, lsl #16
400172a8:	e58d0010 	str	r0, [sp, #16]
400172ac:	e3560000 	cmp	r6, #0
400172b0:	0a000007 	beq	400172d4 <CyU3PDmaMultiChannelCommitBuffer+0x124>
400172b4:	e59d0010 	ldr	r0, [sp, #16]
400172b8:	e3c0000f 	bic	r0, r0, #15
400172bc:	e58d0010 	str	r0, [sp, #16]
400172c0:	e206100e 	and	r1, r6, #14
400172c4:	e3811008 	orr	r1, r1, #8
400172c8:	e59d0010 	ldr	r0, [sp, #16]
400172cc:	e1800001 	orr	r0, r0, r1
400172d0:	e58d0010 	str	r0, [sp, #16]
400172d4:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400172d8:	e3500000 	cmp	r0, #0
400172dc:	0a000004 	beq	400172f4 <CyU3PDmaMultiChannelCommitBuffer+0x144>
400172e0:	e59d2010 	ldr	r2, [sp, #16]
400172e4:	e59f327c 	ldr	r3, [pc, #636]	; 40017568 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400172e8:	e0021003 	and	r1, r2, r3
400172ec:	e59d0004 	ldr	r0, [sp, #4]
400172f0:	ebffeb19 	bl	40011f5c <CyU3PSysCleanDRegion>
400172f4:	e28d1004 	add	r1, sp, #4
400172f8:	e1a00009 	mov	r0, r9
400172fc:	eb002c6c 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40017300:	ea000002 	b	40017310 <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017304:	e3a0b047 	mov	fp, #71	; 0x47
40017308:	ea000000 	b	40017310 <CyU3PDmaMultiChannelCommitBuffer+0x160>
4001730c:	e3a0b047 	mov	fp, #71	; 0x47
40017310:	e2840078 	add	r0, r4, #120	; 0x78
40017314:	ebffcb5b 	bl	4000a088 <_txe_mutex_put>
40017318:	e1a0000b 	mov	r0, fp
4001731c:	eaffffaf 	b	400171e0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017320:	e35b0000 	cmp	fp, #0
40017324:	1a00000d 	bne	40017360 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017328:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
4001732c:	e28d1014 	add	r1, sp, #20
40017330:	eb002c44 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017334:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017338:	e28d1004 	add	r1, sp, #4
4001733c:	eb002c41 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017340:	e59d0020 	ldr	r0, [sp, #32]
40017344:	e3100008 	tst	r0, #8
40017348:	1a000000 	bne	40017350 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
4001734c:	e3a0b047 	mov	fp, #71	; 0x47
40017350:	e59d0010 	ldr	r0, [sp, #16]
40017354:	e3100008 	tst	r0, #8
40017358:	0a000000 	beq	40017360 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
4001735c:	e3a0b047 	mov	fp, #71	; 0x47
40017360:	e35b0000 	cmp	fp, #0
40017364:	0a000003 	beq	40017378 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
40017368:	e2840078 	add	r0, r4, #120	; 0x78
4001736c:	ebffcb45 	bl	4000a088 <_txe_mutex_put>
40017370:	e1a0000b 	mov	r0, fp
40017374:	eaffff99 	b	400171e0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017378:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001737c:	e3500000 	cmp	r0, #0
40017380:	0a000004 	beq	40017398 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
40017384:	e59d2010 	ldr	r2, [sp, #16]
40017388:	e59f31d8 	ldr	r3, [pc, #472]	; 40017568 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
4001738c:	e0021003 	and	r1, r2, r3
40017390:	e59d0004 	ldr	r0, [sp, #4]
40017394:	ebffeaf0 	bl	40011f5c <CyU3PSysCleanDRegion>
40017398:	e3570009 	cmp	r7, #9
4001739c:	1a00003a 	bne	4001748c <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
400173a0:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
400173a4:	e3a0a000 	mov	sl, #0
400173a8:	ea00002a 	b	40017458 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
400173ac:	e28d1004 	add	r1, sp, #4
400173b0:	e1a00009 	mov	r0, r9
400173b4:	eb002c23 	bl	40022448 <CyU3PDmaDscrGetConfig>
400173b8:	e284000c 	add	r0, r4, #12
400173bc:	e080008a 	add	r0, r0, sl, lsl #1
400173c0:	e1d000b0 	ldrh	r0, [r0]
400173c4:	e3500000 	cmp	r0, #0
400173c8:	1a00001d 	bne	40017444 <CyU3PDmaMultiChannelCommitBuffer+0x294>
400173cc:	e59d0010 	ldr	r0, [sp, #16]
400173d0:	e59f1190 	ldr	r1, [pc, #400]	; 40017568 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400173d4:	e0000001 	and	r0, r0, r1
400173d8:	e58d0010 	str	r0, [sp, #16]
400173dc:	e59d0010 	ldr	r0, [sp, #16]
400173e0:	e1800805 	orr	r0, r0, r5, lsl #16
400173e4:	e58d0010 	str	r0, [sp, #16]
400173e8:	e3560000 	cmp	r6, #0
400173ec:	1a000005 	bne	40017408 <CyU3PDmaMultiChannelCommitBuffer+0x258>
400173f0:	e59d1020 	ldr	r1, [sp, #32]
400173f4:	e201100f 	and	r1, r1, #15
400173f8:	e59d0010 	ldr	r0, [sp, #16]
400173fc:	e1800001 	orr	r0, r0, r1
40017400:	e58d0010 	str	r0, [sp, #16]
40017404:	ea000004 	b	4001741c <CyU3PDmaMultiChannelCommitBuffer+0x26c>
40017408:	e206100e 	and	r1, r6, #14
4001740c:	e3811008 	orr	r1, r1, #8
40017410:	e59d0010 	ldr	r0, [sp, #16]
40017414:	e1800001 	orr	r0, r0, r1
40017418:	e58d0010 	str	r0, [sp, #16]
4001741c:	e28d1004 	add	r1, sp, #4
40017420:	e1a00009 	mov	r0, r9
40017424:	eb002c22 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40017428:	e59d0008 	ldr	r0, [sp, #8]
4001742c:	e1a08900 	lsl	r8, r0, #18
40017430:	e1a08928 	lsr	r8, r8, #18
40017434:	e3a02001 	mov	r2, #1
40017438:	e1a01009 	mov	r1, r9
4001743c:	e1a00008 	mov	r0, r8
40017440:	ebfff63a 	bl	40014d30 <CyU3PDmaSocketSendEvent>
40017444:	e59d000c 	ldr	r0, [sp, #12]
40017448:	e59f111c 	ldr	r1, [pc, #284]	; 4001756c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001744c:	e0019820 	and	r9, r1, r0, lsr #16
40017450:	e28a0001 	add	r0, sl, #1
40017454:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
40017458:	e1d400ba 	ldrh	r0, [r4, #10]
4001745c:	e150000a 	cmp	r0, sl
40017460:	caffffd1 	bgt	400173ac <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
40017464:	e59d001c 	ldr	r0, [sp, #28]
40017468:	e59f10fc 	ldr	r1, [pc, #252]	; 4001756c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001746c:	e0010820 	and	r0, r1, r0, lsr #16
40017470:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017474:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017478:	e28d1014 	add	r1, sp, #20
4001747c:	eb002bf1 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017480:	e59d001c 	ldr	r0, [sp, #28]
40017484:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017488:	ea000032 	b	40017558 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
4001748c:	e59d0010 	ldr	r0, [sp, #16]
40017490:	e59f10d0 	ldr	r1, [pc, #208]	; 40017568 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017494:	e0000001 	and	r0, r0, r1
40017498:	e58d0010 	str	r0, [sp, #16]
4001749c:	e59d0010 	ldr	r0, [sp, #16]
400174a0:	e1800805 	orr	r0, r0, r5, lsl #16
400174a4:	e58d0010 	str	r0, [sp, #16]
400174a8:	e3560000 	cmp	r6, #0
400174ac:	1a000005 	bne	400174c8 <CyU3PDmaMultiChannelCommitBuffer+0x318>
400174b0:	e59d1020 	ldr	r1, [sp, #32]
400174b4:	e201100f 	and	r1, r1, #15
400174b8:	e59d0010 	ldr	r0, [sp, #16]
400174bc:	e1800001 	orr	r0, r0, r1
400174c0:	e58d0010 	str	r0, [sp, #16]
400174c4:	ea000004 	b	400174dc <CyU3PDmaMultiChannelCommitBuffer+0x32c>
400174c8:	e206100e 	and	r1, r6, #14
400174cc:	e3811008 	orr	r1, r1, #8
400174d0:	e59d0010 	ldr	r0, [sp, #16]
400174d4:	e1800001 	orr	r0, r0, r1
400174d8:	e58d0010 	str	r0, [sp, #16]
400174dc:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400174e0:	e28d1004 	add	r1, sp, #4
400174e4:	eb002bf2 	bl	400224b4 <CyU3PDmaDscrSetConfig>
400174e8:	e59d0008 	ldr	r0, [sp, #8]
400174ec:	e1a08900 	lsl	r8, r0, #18
400174f0:	e1a08928 	lsr	r8, r8, #18
400174f4:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
400174f8:	e3a02001 	mov	r2, #1
400174fc:	e1a00008 	mov	r0, r8
40017500:	ebfff60a 	bl	40014d30 <CyU3PDmaSocketSendEvent>
40017504:	e3570007 	cmp	r7, #7
40017508:	1a000009 	bne	40017534 <CyU3PDmaMultiChannelCommitBuffer+0x384>
4001750c:	e59d000c 	ldr	r0, [sp, #12]
40017510:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017514:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017518:	e28d1004 	add	r1, sp, #4
4001751c:	eb002bc9 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017520:	e59d000c 	ldr	r0, [sp, #12]
40017524:	e59f1040 	ldr	r1, [pc, #64]	; 4001756c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017528:	e0010820 	and	r0, r1, r0, lsr #16
4001752c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017530:	ea000008 	b	40017558 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017534:	e59d001c 	ldr	r0, [sp, #28]
40017538:	e59f102c 	ldr	r1, [pc, #44]	; 4001756c <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001753c:	e0010820 	and	r0, r1, r0, lsr #16
40017540:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017544:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017548:	e28d1014 	add	r1, sp, #20
4001754c:	eb002bbd 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017550:	e59d001c 	ldr	r0, [sp, #28]
40017554:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017558:	e2840078 	add	r0, r4, #120	; 0x78
4001755c:	ebffcac9 	bl	4000a088 <_txe_mutex_put>
40017560:	e3a00000 	mov	r0, #0
40017564:	eaffff1d 	b	400171e0 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017568:	0000fff0 	.word	0x0000fff0
4001756c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

40017570 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
40017570:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017574:	e24dd024 	sub	sp, sp, #36	; 0x24
40017578:	e1a04000 	mov	r4, r0
4001757c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017580:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017584:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017588:	e3866801 	orr	r6, r6, #65536	; 0x10000
4001758c:	e1d400b8 	ldrh	r0, [r4, #8]
40017590:	e1d430ba 	ldrh	r3, [r4, #10]
40017594:	e0000093 	mul	r0, r3, r0
40017598:	e1a01800 	lsl	r1, r0, #16
4001759c:	e1a01821 	lsr	r1, r1, #16
400175a0:	e1d420b6 	ldrh	r2, [r4, #6]
400175a4:	e1a03006 	mov	r3, r6
400175a8:	e284001c 	add	r0, r4, #28
400175ac:	eb002ab6 	bl	4002208c <CyU3PDmaDscrChainCreate>
400175b0:	e1a05000 	mov	r5, r0
400175b4:	e3550000 	cmp	r5, #0
400175b8:	0a000002 	beq	400175c8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
400175bc:	e1a00005 	mov	r0, r5
400175c0:	e28dd024 	add	sp, sp, #36	; 0x24
400175c4:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400175c8:	e1d400b4 	ldrh	r0, [r4, #4]
400175cc:	e3500005 	cmp	r0, #5
400175d0:	1a00003c 	bne	400176c8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
400175d4:	e3a07000 	mov	r7, #0
400175d8:	e1d481bc 	ldrh	r8, [r4, #28]
400175dc:	ea000035 	b	400176b8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
400175e0:	e3a09000 	mov	r9, #0
400175e4:	ea00002e 	b	400176a4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
400175e8:	e28d1004 	add	r1, sp, #4
400175ec:	e1a00008 	mov	r0, r8
400175f0:	eb002b94 	bl	40022448 <CyU3PDmaDscrGetConfig>
400175f4:	e3570000 	cmp	r7, #0
400175f8:	1a000003 	bne	4001760c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
400175fc:	e2840014 	add	r0, r4, #20
40017600:	e0800089 	add	r0, r0, r9, lsl #1
40017604:	e1c080b0 	strh	r8, [r0]
40017608:	ea000020 	b	40017690 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
4001760c:	e2841014 	add	r1, r4, #20
40017610:	e0811089 	add	r1, r1, r9, lsl #1
40017614:	e1d100b0 	ldrh	r0, [r1]
40017618:	e28d1014 	add	r1, sp, #20
4001761c:	eb002b89 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017620:	e59d0018 	ldr	r0, [sp, #24]
40017624:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017628:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001762c:	e58d0018 	str	r0, [sp, #24]
40017630:	e2841024 	add	r1, r4, #36	; 0x24
40017634:	e0811089 	add	r1, r1, r9, lsl #1
40017638:	e59d0018 	ldr	r0, [sp, #24]
4001763c:	e1d110b0 	ldrh	r1, [r1]
40017640:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017644:	e1821801 	orr	r1, r2, r1, lsl #16
40017648:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
4001764c:	e1800001 	orr	r0, r0, r1
40017650:	e58d0018 	str	r0, [sp, #24]
40017654:	e59d001c 	ldr	r0, [sp, #28]
40017658:	e1a00800 	lsl	r0, r0, #16
4001765c:	e1a00820 	lsr	r0, r0, #16
40017660:	e58d001c 	str	r0, [sp, #28]
40017664:	e59d001c 	ldr	r0, [sp, #28]
40017668:	e1800808 	orr	r0, r0, r8, lsl #16
4001766c:	e58d001c 	str	r0, [sp, #28]
40017670:	e2841014 	add	r1, r4, #20
40017674:	e0811089 	add	r1, r1, r9, lsl #1
40017678:	e1d100b0 	ldrh	r0, [r1]
4001767c:	e28d1014 	add	r1, sp, #20
40017680:	eb002b8b 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40017684:	e2840014 	add	r0, r4, #20
40017688:	e0800089 	add	r0, r0, r9, lsl #1
4001768c:	e1c080b0 	strh	r8, [r0]
40017690:	e59d000c 	ldr	r0, [sp, #12]
40017694:	e1a08800 	lsl	r8, r0, #16
40017698:	e1a08828 	lsr	r8, r8, #16
4001769c:	e2890001 	add	r0, r9, #1
400176a0:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400176a4:	e1d400ba 	ldrh	r0, [r4, #10]
400176a8:	e1500009 	cmp	r0, r9
400176ac:	caffffcd 	bgt	400175e8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
400176b0:	e2870001 	add	r0, r7, #1
400176b4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400176b8:	e1d400b8 	ldrh	r0, [r4, #8]
400176bc:	e1500007 	cmp	r0, r7
400176c0:	aaffffc6 	bge	400175e0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
400176c4:	ea000056 	b	40017824 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
400176c8:	e3a07000 	mov	r7, #0
400176cc:	e1d481bc 	ldrh	r8, [r4, #28]
400176d0:	ea000050 	b	40017818 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
400176d4:	e3a09000 	mov	r9, #0
400176d8:	ea000049 	b	40017804 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
400176dc:	e3570000 	cmp	r7, #0
400176e0:	1a00000d 	bne	4001771c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
400176e4:	e3a06cff 	mov	r6, #65280	; 0xff00
400176e8:	e2840024 	add	r0, r4, #36	; 0x24
400176ec:	e0800089 	add	r0, r0, r9, lsl #1
400176f0:	e1d000b0 	ldrh	r0, [r0]
400176f4:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400176f8:	e1810800 	orr	r0, r1, r0, lsl #16
400176fc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017700:	e1866000 	orr	r6, r6, r0
40017704:	e1d410b8 	ldrh	r1, [r4, #8]
40017708:	e2842014 	add	r2, r4, #20
4001770c:	e0820089 	add	r0, r2, r9, lsl #1
40017710:	e1a03006 	mov	r3, r6
40017714:	e3a02000 	mov	r2, #0
40017718:	eb002a5b 	bl	4002208c <CyU3PDmaDscrChainCreate>
4001771c:	e2841014 	add	r1, r4, #20
40017720:	e0811089 	add	r1, r1, r9, lsl #1
40017724:	e1d100b0 	ldrh	r0, [r1]
40017728:	e28d1014 	add	r1, sp, #20
4001772c:	eb002b45 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017730:	e28d1004 	add	r1, sp, #4
40017734:	e1a00008 	mov	r0, r8
40017738:	eb002b42 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001773c:	e59d0004 	ldr	r0, [sp, #4]
40017740:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017744:	e0800001 	add	r0, r0, r1
40017748:	e58d0014 	str	r0, [sp, #20]
4001774c:	e59d0010 	ldr	r0, [sp, #16]
40017750:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017754:	e0400001 	sub	r0, r0, r1
40017758:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
4001775c:	e0400001 	sub	r0, r0, r1
40017760:	e58d0020 	str	r0, [sp, #32]
40017764:	e2841014 	add	r1, r4, #20
40017768:	e0811089 	add	r1, r1, r9, lsl #1
4001776c:	e1d100b0 	ldrh	r0, [r1]
40017770:	e28d1014 	add	r1, sp, #20
40017774:	eb002b4e 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40017778:	e59d0004 	ldr	r0, [sp, #4]
4001777c:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017780:	e0800001 	add	r0, r0, r1
40017784:	e58d0004 	str	r0, [sp, #4]
40017788:	e1d400b6 	ldrh	r0, [r4, #6]
4001778c:	e280000f 	add	r0, r0, #15
40017790:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017794:	e0400001 	sub	r0, r0, r1
40017798:	e59f10b4 	ldr	r1, [pc, #180]	; 40017854 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
4001779c:	e0000001 	and	r0, r0, r1
400177a0:	e58d0010 	str	r0, [sp, #16]
400177a4:	e59d000c 	ldr	r0, [sp, #12]
400177a8:	e1a00800 	lsl	r0, r0, #16
400177ac:	e1a00820 	lsr	r0, r0, #16
400177b0:	e58d000c 	str	r0, [sp, #12]
400177b4:	e2841014 	add	r1, r4, #20
400177b8:	e0811089 	add	r1, r1, r9, lsl #1
400177bc:	e59d000c 	ldr	r0, [sp, #12]
400177c0:	e1d110b0 	ldrh	r1, [r1]
400177c4:	e1800801 	orr	r0, r0, r1, lsl #16
400177c8:	e58d000c 	str	r0, [sp, #12]
400177cc:	e28d1004 	add	r1, sp, #4
400177d0:	e1a00008 	mov	r0, r8
400177d4:	eb002b36 	bl	400224b4 <CyU3PDmaDscrSetConfig>
400177d8:	e59d000c 	ldr	r0, [sp, #12]
400177dc:	e1a08800 	lsl	r8, r0, #16
400177e0:	e1a08828 	lsr	r8, r8, #16
400177e4:	e59d001c 	ldr	r0, [sp, #28]
400177e8:	e59f1068 	ldr	r1, [pc, #104]	; 40017858 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
400177ec:	e0010820 	and	r0, r1, r0, lsr #16
400177f0:	e2841014 	add	r1, r4, #20
400177f4:	e0811089 	add	r1, r1, r9, lsl #1
400177f8:	e1c100b0 	strh	r0, [r1]
400177fc:	e2890001 	add	r0, r9, #1
40017800:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017804:	e1d400ba 	ldrh	r0, [r4, #10]
40017808:	e1500009 	cmp	r0, r9
4001780c:	caffffb2 	bgt	400176dc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017810:	e2870001 	add	r0, r7, #1
40017814:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017818:	e1d400b8 	ldrh	r0, [r4, #8]
4001781c:	e1500007 	cmp	r0, r7
40017820:	caffffab 	bgt	400176d4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017824:	e1a00004 	mov	r0, r4
40017828:	eb000509 	bl	40018c54 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
4001782c:	e1d401b4 	ldrh	r0, [r4, #20]
40017830:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017834:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017838:	e1d401bc 	ldrh	r0, [r4, #28]
4001783c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017840:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017844:	e2840034 	add	r0, r4, #52	; 0x34
40017848:	eb002a86 	bl	40022268 <CyU3PDmaDscrGet>
4001784c:	e3a00000 	mov	r0, #0
40017850:	eaffff5a 	b	400175c0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017854:	0000fff0 	.word	0x0000fff0
40017858:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

4001785c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
4001785c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017860:	e24dd024 	sub	sp, sp, #36	; 0x24
40017864:	e1a04000 	mov	r4, r0
40017868:	e3a06cff 	mov	r6, #65280	; 0xff00
4001786c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017870:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017874:	e1810800 	orr	r0, r1, r0, lsl #16
40017878:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001787c:	e1866000 	orr	r6, r6, r0
40017880:	e1d400b8 	ldrh	r0, [r4, #8]
40017884:	e1d430ba 	ldrh	r3, [r4, #10]
40017888:	e0000093 	mul	r0, r3, r0
4001788c:	e1a01800 	lsl	r1, r0, #16
40017890:	e1a01821 	lsr	r1, r1, #16
40017894:	e1d420b6 	ldrh	r2, [r4, #6]
40017898:	e1a03006 	mov	r3, r6
4001789c:	e2840014 	add	r0, r4, #20
400178a0:	eb0029f9 	bl	4002208c <CyU3PDmaDscrChainCreate>
400178a4:	e1a05000 	mov	r5, r0
400178a8:	e3550000 	cmp	r5, #0
400178ac:	0a000002 	beq	400178bc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
400178b0:	e1a00005 	mov	r0, r5
400178b4:	e28dd024 	add	sp, sp, #36	; 0x24
400178b8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400178bc:	e1d400b4 	ldrh	r0, [r4, #4]
400178c0:	e3500006 	cmp	r0, #6
400178c4:	1a00003a 	bne	400179b4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
400178c8:	e3a07000 	mov	r7, #0
400178cc:	e1d481b4 	ldrh	r8, [r4, #20]
400178d0:	ea000033 	b	400179a4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
400178d4:	e3a09000 	mov	r9, #0
400178d8:	ea00002c 	b	40017990 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
400178dc:	e28d1014 	add	r1, sp, #20
400178e0:	e1a00008 	mov	r0, r8
400178e4:	eb002ad7 	bl	40022448 <CyU3PDmaDscrGetConfig>
400178e8:	e3570000 	cmp	r7, #0
400178ec:	1a000003 	bne	40017900 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
400178f0:	e284001c 	add	r0, r4, #28
400178f4:	e0800089 	add	r0, r0, r9, lsl #1
400178f8:	e1c080b0 	strh	r8, [r0]
400178fc:	ea00001e 	b	4001797c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017900:	e284101c 	add	r1, r4, #28
40017904:	e0811089 	add	r1, r1, r9, lsl #1
40017908:	e1d100b0 	ldrh	r0, [r1]
4001790c:	e28d1004 	add	r1, sp, #4
40017910:	eb002acc 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017914:	e59d0008 	ldr	r0, [sp, #8]
40017918:	e1a00720 	lsr	r0, r0, #14
4001791c:	e1a00700 	lsl	r0, r0, #14
40017920:	e58d0008 	str	r0, [sp, #8]
40017924:	e284102c 	add	r1, r4, #44	; 0x2c
40017928:	e0811089 	add	r1, r1, r9, lsl #1
4001792c:	e59d0008 	ldr	r0, [sp, #8]
40017930:	e1d110b0 	ldrh	r1, [r1]
40017934:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017938:	e1800001 	orr	r0, r0, r1
4001793c:	e58d0008 	str	r0, [sp, #8]
40017940:	e59d000c 	ldr	r0, [sp, #12]
40017944:	e1a00820 	lsr	r0, r0, #16
40017948:	e1a00800 	lsl	r0, r0, #16
4001794c:	e58d000c 	str	r0, [sp, #12]
40017950:	e59d000c 	ldr	r0, [sp, #12]
40017954:	e1800008 	orr	r0, r0, r8
40017958:	e58d000c 	str	r0, [sp, #12]
4001795c:	e284101c 	add	r1, r4, #28
40017960:	e0811089 	add	r1, r1, r9, lsl #1
40017964:	e1d100b0 	ldrh	r0, [r1]
40017968:	e28d1004 	add	r1, sp, #4
4001796c:	eb002ad0 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40017970:	e284001c 	add	r0, r4, #28
40017974:	e0800089 	add	r0, r0, r9, lsl #1
40017978:	e1c080b0 	strh	r8, [r0]
4001797c:	e59d001c 	ldr	r0, [sp, #28]
40017980:	e59f11c4 	ldr	r1, [pc, #452]	; 40017b4c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017984:	e0018820 	and	r8, r1, r0, lsr #16
40017988:	e2890001 	add	r0, r9, #1
4001798c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017990:	e1d400ba 	ldrh	r0, [r4, #10]
40017994:	e1500009 	cmp	r0, r9
40017998:	caffffcf 	bgt	400178dc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
4001799c:	e2870001 	add	r0, r7, #1
400179a0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400179a4:	e1d400b8 	ldrh	r0, [r4, #8]
400179a8:	e1500007 	cmp	r0, r7
400179ac:	aaffffc8 	bge	400178d4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
400179b0:	ea000059 	b	40017b1c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
400179b4:	e3a07000 	mov	r7, #0
400179b8:	e1d481b4 	ldrh	r8, [r4, #20]
400179bc:	ea000053 	b	40017b10 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
400179c0:	e3a09000 	mov	r9, #0
400179c4:	ea00004c 	b	40017afc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
400179c8:	e3570000 	cmp	r7, #0
400179cc:	1a00000b 	bne	40017a00 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
400179d0:	e284002c 	add	r0, r4, #44	; 0x2c
400179d4:	e0800089 	add	r0, r0, r9, lsl #1
400179d8:	e1d000b0 	ldrh	r0, [r0]
400179dc:	e3806903 	orr	r6, r0, #49152	; 0xc000
400179e0:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400179e4:	e3866801 	orr	r6, r6, #65536	; 0x10000
400179e8:	e1d410b8 	ldrh	r1, [r4, #8]
400179ec:	e284201c 	add	r2, r4, #28
400179f0:	e0820089 	add	r0, r2, r9, lsl #1
400179f4:	e1a03006 	mov	r3, r6
400179f8:	e3a02000 	mov	r2, #0
400179fc:	eb0029a2 	bl	4002208c <CyU3PDmaDscrChainCreate>
40017a00:	e284101c 	add	r1, r4, #28
40017a04:	e0811089 	add	r1, r1, r9, lsl #1
40017a08:	e1d100b0 	ldrh	r0, [r1]
40017a0c:	e28d1004 	add	r1, sp, #4
40017a10:	eb002a8c 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017a14:	e28d1014 	add	r1, sp, #20
40017a18:	e1a00008 	mov	r0, r8
40017a1c:	eb002a89 	bl	40022448 <CyU3PDmaDscrGetConfig>
40017a20:	e59d0014 	ldr	r0, [sp, #20]
40017a24:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a28:	e0800001 	add	r0, r0, r1
40017a2c:	e58d0004 	str	r0, [sp, #4]
40017a30:	e1d400b6 	ldrh	r0, [r4, #6]
40017a34:	e280000f 	add	r0, r0, #15
40017a38:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a3c:	e0400001 	sub	r0, r0, r1
40017a40:	e59f1108 	ldr	r1, [pc, #264]	; 40017b50 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017a44:	e0000001 	and	r0, r0, r1
40017a48:	e58d0010 	str	r0, [sp, #16]
40017a4c:	e59d000c 	ldr	r0, [sp, #12]
40017a50:	e1a00800 	lsl	r0, r0, #16
40017a54:	e1a00820 	lsr	r0, r0, #16
40017a58:	e58d000c 	str	r0, [sp, #12]
40017a5c:	e59d000c 	ldr	r0, [sp, #12]
40017a60:	e1800808 	orr	r0, r0, r8, lsl #16
40017a64:	e58d000c 	str	r0, [sp, #12]
40017a68:	e284101c 	add	r1, r4, #28
40017a6c:	e0811089 	add	r1, r1, r9, lsl #1
40017a70:	e1d100b0 	ldrh	r0, [r1]
40017a74:	e28d1004 	add	r1, sp, #4
40017a78:	eb002a8d 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40017a7c:	e59d0014 	ldr	r0, [sp, #20]
40017a80:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a84:	e0800001 	add	r0, r0, r1
40017a88:	e58d0014 	str	r0, [sp, #20]
40017a8c:	e1d400b6 	ldrh	r0, [r4, #6]
40017a90:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a94:	e0400001 	sub	r0, r0, r1
40017a98:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017a9c:	e0400001 	sub	r0, r0, r1
40017aa0:	e58d0020 	str	r0, [sp, #32]
40017aa4:	e59d001c 	ldr	r0, [sp, #28]
40017aa8:	e1a00820 	lsr	r0, r0, #16
40017aac:	e1a00800 	lsl	r0, r0, #16
40017ab0:	e58d001c 	str	r0, [sp, #28]
40017ab4:	e284101c 	add	r1, r4, #28
40017ab8:	e0811089 	add	r1, r1, r9, lsl #1
40017abc:	e59d001c 	ldr	r0, [sp, #28]
40017ac0:	e1d110b0 	ldrh	r1, [r1]
40017ac4:	e1800001 	orr	r0, r0, r1
40017ac8:	e58d001c 	str	r0, [sp, #28]
40017acc:	e28d1014 	add	r1, sp, #20
40017ad0:	e1a00008 	mov	r0, r8
40017ad4:	eb002a76 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40017ad8:	e59d001c 	ldr	r0, [sp, #28]
40017adc:	e59f1068 	ldr	r1, [pc, #104]	; 40017b4c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017ae0:	e0018820 	and	r8, r1, r0, lsr #16
40017ae4:	e284101c 	add	r1, r4, #28
40017ae8:	e0811089 	add	r1, r1, r9, lsl #1
40017aec:	e59d000c 	ldr	r0, [sp, #12]
40017af0:	e1c100b0 	strh	r0, [r1]
40017af4:	e2890001 	add	r0, r9, #1
40017af8:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017afc:	e1d400ba 	ldrh	r0, [r4, #10]
40017b00:	e1500009 	cmp	r0, r9
40017b04:	caffffaf 	bgt	400179c8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017b08:	e2870001 	add	r0, r7, #1
40017b0c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017b10:	e1d400b8 	ldrh	r0, [r4, #8]
40017b14:	e1500007 	cmp	r0, r7
40017b18:	caffffa8 	bgt	400179c0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017b1c:	e1d401b4 	ldrh	r0, [r4, #20]
40017b20:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017b24:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017b28:	e1d401bc 	ldrh	r0, [r4, #28]
40017b2c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017b30:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017b34:	e2840034 	add	r0, r4, #52	; 0x34
40017b38:	eb0029ca 	bl	40022268 <CyU3PDmaDscrGet>
40017b3c:	e1a00004 	mov	r0, r4
40017b40:	eb0004a3 	bl	40018dd4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017b44:	e3a00000 	mov	r0, #0
40017b48:	eaffff59 	b	400178b4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017b4c:	0000ffff 	.word	0x0000ffff
40017b50:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017b54 <CyU3PDmaMultiChannelCreate>:
40017b54:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017b58:	e1a04000 	mov	r4, r0
40017b5c:	e1a05001 	mov	r5, r1
40017b60:	e1a06002 	mov	r6, r2
40017b64:	e3560000 	cmp	r6, #0
40017b68:	1a000001 	bne	40017b74 <CyU3PDmaMultiChannelCreate+0x20>
40017b6c:	e3a00041 	mov	r0, #65	; 0x41
40017b70:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017b74:	e3540000 	cmp	r4, #0
40017b78:	1a000001 	bne	40017b84 <CyU3PDmaMultiChannelCreate+0x30>
40017b7c:	e3a00041 	mov	r0, #65	; 0x41
40017b80:	eafffffa 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017b84:	e1d600b2 	ldrh	r0, [r6, #2]
40017b88:	e3500000 	cmp	r0, #0
40017b8c:	1a000001 	bne	40017b98 <CyU3PDmaMultiChannelCreate+0x44>
40017b90:	e3a00040 	mov	r0, #64	; 0x40
40017b94:	eafffff5 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017b98:	e1d600b4 	ldrh	r0, [r6, #4]
40017b9c:	e3500002 	cmp	r0, #2
40017ba0:	ba000002 	blt	40017bb0 <CyU3PDmaMultiChannelCreate+0x5c>
40017ba4:	e1d600b4 	ldrh	r0, [r6, #4]
40017ba8:	e3500004 	cmp	r0, #4
40017bac:	da000001 	ble	40017bb8 <CyU3PDmaMultiChannelCreate+0x64>
40017bb0:	e3a00040 	mov	r0, #64	; 0x40
40017bb4:	eaffffed 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017bb8:	e3550006 	cmp	r5, #6
40017bbc:	0a000001 	beq	40017bc8 <CyU3PDmaMultiChannelCreate+0x74>
40017bc0:	e3550005 	cmp	r5, #5
40017bc4:	1a000007 	bne	40017be8 <CyU3PDmaMultiChannelCreate+0x94>
40017bc8:	eb0029de 	bl	40022348 <CyU3PDmaDscrGetFreeCount>
40017bcc:	e1d610b2 	ldrh	r1, [r6, #2]
40017bd0:	e1d620b4 	ldrh	r2, [r6, #4]
40017bd4:	e0010192 	mul	r1, r2, r1
40017bd8:	e1500001 	cmp	r0, r1
40017bdc:	ca000016 	bgt	40017c3c <CyU3PDmaMultiChannelCreate+0xe8>
40017be0:	e3a00010 	mov	r0, #16
40017be4:	eaffffe1 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017be8:	e3550008 	cmp	r5, #8
40017bec:	0a000001 	beq	40017bf8 <CyU3PDmaMultiChannelCreate+0xa4>
40017bf0:	e3550007 	cmp	r5, #7
40017bf4:	1a000007 	bne	40017c18 <CyU3PDmaMultiChannelCreate+0xc4>
40017bf8:	eb0029d2 	bl	40022348 <CyU3PDmaDscrGetFreeCount>
40017bfc:	e1d610b2 	ldrh	r1, [r6, #2]
40017c00:	e1d620b4 	ldrh	r2, [r6, #4]
40017c04:	e0010192 	mul	r1, r2, r1
40017c08:	e1500081 	cmp	r0, r1, lsl #1
40017c0c:	ca00000a 	bgt	40017c3c <CyU3PDmaMultiChannelCreate+0xe8>
40017c10:	e3a00010 	mov	r0, #16
40017c14:	eaffffd5 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017c18:	eb0029ca 	bl	40022348 <CyU3PDmaDscrGetFreeCount>
40017c1c:	e1d610b2 	ldrh	r1, [r6, #2]
40017c20:	e1d620b4 	ldrh	r2, [r6, #4]
40017c24:	e2822001 	add	r2, r2, #1
40017c28:	e0010192 	mul	r1, r2, r1
40017c2c:	e1500001 	cmp	r0, r1
40017c30:	ca000001 	bgt	40017c3c <CyU3PDmaMultiChannelCreate+0xe8>
40017c34:	e3a00010 	mov	r0, #16
40017c38:	eaffffcc 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017c3c:	e1d600b0 	ldrh	r0, [r6]
40017c40:	e3500000 	cmp	r0, #0
40017c44:	0a000003 	beq	40017c58 <CyU3PDmaMultiChannelCreate+0x104>
40017c48:	e1d600b0 	ldrh	r0, [r6]
40017c4c:	e59f1634 	ldr	r1, [pc, #1588]	; 40018288 <CyU3PDmaMultiChannelCreate+0x734>
40017c50:	e1500001 	cmp	r0, r1
40017c54:	da000001 	ble	40017c60 <CyU3PDmaMultiChannelCreate+0x10c>
40017c58:	e3a00040 	mov	r0, #64	; 0x40
40017c5c:	eaffffc3 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017c60:	e3550005 	cmp	r5, #5
40017c64:	0a000001 	beq	40017c70 <CyU3PDmaMultiChannelCreate+0x11c>
40017c68:	e3550006 	cmp	r5, #6
40017c6c:	1a000004 	bne	40017c84 <CyU3PDmaMultiChannelCreate+0x130>
40017c70:	e1d600b0 	ldrh	r0, [r6]
40017c74:	e310000f 	tst	r0, #15
40017c78:	0a00000b 	beq	40017cac <CyU3PDmaMultiChannelCreate+0x158>
40017c7c:	e3a00040 	mov	r0, #64	; 0x40
40017c80:	eaffffba 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017c84:	e1d600b0 	ldrh	r0, [r6]
40017c88:	e1d611b8 	ldrh	r1, [r6, #24]
40017c8c:	e0400001 	sub	r0, r0, r1
40017c90:	e1d611ba 	ldrh	r1, [r6, #26]
40017c94:	e0400001 	sub	r0, r0, r1
40017c98:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40017c9c:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40017ca0:	0a000001 	beq	40017cac <CyU3PDmaMultiChannelCreate+0x158>
40017ca4:	e3a00040 	mov	r0, #64	; 0x40
40017ca8:	eaffffb0 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017cac:	e5d6001e 	ldrb	r0, [r6, #30]
40017cb0:	e3500002 	cmp	r0, #2
40017cb4:	ba000001 	blt	40017cc0 <CyU3PDmaMultiChannelCreate+0x16c>
40017cb8:	e3a00040 	mov	r0, #64	; 0x40
40017cbc:	eaffffab 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017cc0:	e3550005 	cmp	r5, #5
40017cc4:	0a000001 	beq	40017cd0 <CyU3PDmaMultiChannelCreate+0x17c>
40017cc8:	e3550007 	cmp	r5, #7
40017ccc:	1a000065 	bne	40017e68 <CyU3PDmaMultiChannelCreate+0x314>
40017cd0:	e1d601b6 	ldrh	r0, [r6, #22]
40017cd4:	e3500000 	cmp	r0, #0
40017cd8:	0a000008 	beq	40017d00 <CyU3PDmaMultiChannelCreate+0x1ac>
40017cdc:	e1d601b6 	ldrh	r0, [r6, #22]
40017ce0:	e1d610b2 	ldrh	r1, [r6, #2]
40017ce4:	e1500001 	cmp	r0, r1
40017ce8:	aa000002 	bge	40017cf8 <CyU3PDmaMultiChannelCreate+0x1a4>
40017cec:	e1d600b2 	ldrh	r0, [r6, #2]
40017cf0:	e350001f 	cmp	r0, #31
40017cf4:	da000001 	ble	40017d00 <CyU3PDmaMultiChannelCreate+0x1ac>
40017cf8:	e3a00040 	mov	r0, #64	; 0x40
40017cfc:	eaffff9b 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017d00:	e3a09000 	mov	r9, #0
40017d04:	ea00002b 	b	40017db8 <CyU3PDmaMultiChannelCreate+0x264>
40017d08:	e2860006 	add	r0, r6, #6
40017d0c:	e0800089 	add	r0, r0, r9, lsl #1
40017d10:	e1d000b0 	ldrh	r0, [r0]
40017d14:	e3a0103f 	mov	r1, #63	; 0x3f
40017d18:	e0018440 	and	r8, r1, r0, asr #8
40017d1c:	e2860006 	add	r0, r6, #6
40017d20:	e0800089 	add	r0, r0, r9, lsl #1
40017d24:	e1d000b0 	ldrh	r0, [r0]
40017d28:	e20070ff 	and	r7, r0, #255	; 0xff
40017d2c:	e2861006 	add	r1, r6, #6
40017d30:	e0811089 	add	r1, r1, r9, lsl #1
40017d34:	e1d100b0 	ldrh	r0, [r1]
40017d38:	ebfff3c4 	bl	40014c50 <CyU3PDmaSocketIsValidProducer>
40017d3c:	e3500000 	cmp	r0, #0
40017d40:	1a000001 	bne	40017d4c <CyU3PDmaMultiChannelCreate+0x1f8>
40017d44:	e3a00040 	mov	r0, #64	; 0x40
40017d48:	eaffff88 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017d4c:	e59f0538 	ldr	r0, [pc, #1336]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017d50:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017d54:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017d58:	e3500000 	cmp	r0, #0
40017d5c:	0a000001 	beq	40017d68 <CyU3PDmaMultiChannelCreate+0x214>
40017d60:	e3a00040 	mov	r0, #64	; 0x40
40017d64:	eaffff81 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017d68:	e2890001 	add	r0, r9, #1
40017d6c:	e200a0ff 	and	sl, r0, #255	; 0xff
40017d70:	ea00000b 	b	40017da4 <CyU3PDmaMultiChannelCreate+0x250>
40017d74:	e2860006 	add	r0, r6, #6
40017d78:	e0800089 	add	r0, r0, r9, lsl #1
40017d7c:	e1d000b0 	ldrh	r0, [r0]
40017d80:	e2861006 	add	r1, r6, #6
40017d84:	e081108a 	add	r1, r1, sl, lsl #1
40017d88:	e1d110b0 	ldrh	r1, [r1]
40017d8c:	e1500001 	cmp	r0, r1
40017d90:	1a000001 	bne	40017d9c <CyU3PDmaMultiChannelCreate+0x248>
40017d94:	e3a00040 	mov	r0, #64	; 0x40
40017d98:	eaffff74 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017d9c:	e28a0001 	add	r0, sl, #1
40017da0:	e200a0ff 	and	sl, r0, #255	; 0xff
40017da4:	e1d600b4 	ldrh	r0, [r6, #4]
40017da8:	e150000a 	cmp	r0, sl
40017dac:	cafffff0 	bgt	40017d74 <CyU3PDmaMultiChannelCreate+0x220>
40017db0:	e2890001 	add	r0, r9, #1
40017db4:	e20090ff 	and	r9, r0, #255	; 0xff
40017db8:	e1d600b4 	ldrh	r0, [r6, #4]
40017dbc:	e1500009 	cmp	r0, r9
40017dc0:	caffffd0 	bgt	40017d08 <CyU3PDmaMultiChannelCreate+0x1b4>
40017dc4:	e1d600be 	ldrh	r0, [r6, #14]
40017dc8:	e3a0103f 	mov	r1, #63	; 0x3f
40017dcc:	e0018440 	and	r8, r1, r0, asr #8
40017dd0:	e1d600be 	ldrh	r0, [r6, #14]
40017dd4:	e20070ff 	and	r7, r0, #255	; 0xff
40017dd8:	e1d600be 	ldrh	r0, [r6, #14]
40017ddc:	ebfff363 	bl	40014b70 <CyU3PDmaSocketIsValidConsumer>
40017de0:	e3500000 	cmp	r0, #0
40017de4:	1a000001 	bne	40017df0 <CyU3PDmaMultiChannelCreate+0x29c>
40017de8:	e3a00040 	mov	r0, #64	; 0x40
40017dec:	eaffff5f 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017df0:	e59f0494 	ldr	r0, [pc, #1172]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017df4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017df8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017dfc:	e3500000 	cmp	r0, #0
40017e00:	0a000001 	beq	40017e0c <CyU3PDmaMultiChannelCreate+0x2b8>
40017e04:	e3a00040 	mov	r0, #64	; 0x40
40017e08:	eaffff58 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017e0c:	e59f0478 	ldr	r0, [pc, #1144]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017e10:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e14:	e7804107 	str	r4, [r0, r7, lsl #2]
40017e18:	e3a09000 	mov	r9, #0
40017e1c:	ea00000d 	b	40017e58 <CyU3PDmaMultiChannelCreate+0x304>
40017e20:	e2860006 	add	r0, r6, #6
40017e24:	e0800089 	add	r0, r0, r9, lsl #1
40017e28:	e1d000b0 	ldrh	r0, [r0]
40017e2c:	e3a0103f 	mov	r1, #63	; 0x3f
40017e30:	e0018440 	and	r8, r1, r0, asr #8
40017e34:	e2860006 	add	r0, r6, #6
40017e38:	e0800089 	add	r0, r0, r9, lsl #1
40017e3c:	e1d000b0 	ldrh	r0, [r0]
40017e40:	e20070ff 	and	r7, r0, #255	; 0xff
40017e44:	e59f0440 	ldr	r0, [pc, #1088]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017e48:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e4c:	e7804107 	str	r4, [r0, r7, lsl #2]
40017e50:	e2890001 	add	r0, r9, #1
40017e54:	e20090ff 	and	r9, r0, #255	; 0xff
40017e58:	e1d600b4 	ldrh	r0, [r6, #4]
40017e5c:	e1500009 	cmp	r0, r9
40017e60:	caffffee 	bgt	40017e20 <CyU3PDmaMultiChannelCreate+0x2cc>
40017e64:	ea00005d 	b	40017fe0 <CyU3PDmaMultiChannelCreate+0x48c>
40017e68:	e1d601b6 	ldrh	r0, [r6, #22]
40017e6c:	e3500000 	cmp	r0, #0
40017e70:	0a000001 	beq	40017e7c <CyU3PDmaMultiChannelCreate+0x328>
40017e74:	e3a00040 	mov	r0, #64	; 0x40
40017e78:	eaffff3c 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017e7c:	e3a09000 	mov	r9, #0
40017e80:	ea00002b 	b	40017f34 <CyU3PDmaMultiChannelCreate+0x3e0>
40017e84:	e286000e 	add	r0, r6, #14
40017e88:	e0800089 	add	r0, r0, r9, lsl #1
40017e8c:	e1d000b0 	ldrh	r0, [r0]
40017e90:	e3a0103f 	mov	r1, #63	; 0x3f
40017e94:	e0018440 	and	r8, r1, r0, asr #8
40017e98:	e286000e 	add	r0, r6, #14
40017e9c:	e0800089 	add	r0, r0, r9, lsl #1
40017ea0:	e1d000b0 	ldrh	r0, [r0]
40017ea4:	e20070ff 	and	r7, r0, #255	; 0xff
40017ea8:	e286100e 	add	r1, r6, #14
40017eac:	e0811089 	add	r1, r1, r9, lsl #1
40017eb0:	e1d100b0 	ldrh	r0, [r1]
40017eb4:	ebfff32d 	bl	40014b70 <CyU3PDmaSocketIsValidConsumer>
40017eb8:	e3500000 	cmp	r0, #0
40017ebc:	1a000001 	bne	40017ec8 <CyU3PDmaMultiChannelCreate+0x374>
40017ec0:	e3a00040 	mov	r0, #64	; 0x40
40017ec4:	eaffff29 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017ec8:	e59f03bc 	ldr	r0, [pc, #956]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017ecc:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017ed0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017ed4:	e3500000 	cmp	r0, #0
40017ed8:	0a000001 	beq	40017ee4 <CyU3PDmaMultiChannelCreate+0x390>
40017edc:	e3a00040 	mov	r0, #64	; 0x40
40017ee0:	eaffff22 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017ee4:	e2890001 	add	r0, r9, #1
40017ee8:	e200a0ff 	and	sl, r0, #255	; 0xff
40017eec:	ea00000b 	b	40017f20 <CyU3PDmaMultiChannelCreate+0x3cc>
40017ef0:	e286000e 	add	r0, r6, #14
40017ef4:	e0800089 	add	r0, r0, r9, lsl #1
40017ef8:	e1d000b0 	ldrh	r0, [r0]
40017efc:	e286100e 	add	r1, r6, #14
40017f00:	e081108a 	add	r1, r1, sl, lsl #1
40017f04:	e1d110b0 	ldrh	r1, [r1]
40017f08:	e1500001 	cmp	r0, r1
40017f0c:	1a000001 	bne	40017f18 <CyU3PDmaMultiChannelCreate+0x3c4>
40017f10:	e3a00040 	mov	r0, #64	; 0x40
40017f14:	eaffff15 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017f18:	e28a0001 	add	r0, sl, #1
40017f1c:	e200a0ff 	and	sl, r0, #255	; 0xff
40017f20:	e1d600b4 	ldrh	r0, [r6, #4]
40017f24:	e150000a 	cmp	r0, sl
40017f28:	cafffff0 	bgt	40017ef0 <CyU3PDmaMultiChannelCreate+0x39c>
40017f2c:	e2890001 	add	r0, r9, #1
40017f30:	e20090ff 	and	r9, r0, #255	; 0xff
40017f34:	e1d600b4 	ldrh	r0, [r6, #4]
40017f38:	e1500009 	cmp	r0, r9
40017f3c:	caffffd0 	bgt	40017e84 <CyU3PDmaMultiChannelCreate+0x330>
40017f40:	e1d600b6 	ldrh	r0, [r6, #6]
40017f44:	e3a0103f 	mov	r1, #63	; 0x3f
40017f48:	e0018440 	and	r8, r1, r0, asr #8
40017f4c:	e1d600b6 	ldrh	r0, [r6, #6]
40017f50:	e20070ff 	and	r7, r0, #255	; 0xff
40017f54:	e1d600b6 	ldrh	r0, [r6, #6]
40017f58:	ebfff33c 	bl	40014c50 <CyU3PDmaSocketIsValidProducer>
40017f5c:	e3500000 	cmp	r0, #0
40017f60:	1a000001 	bne	40017f6c <CyU3PDmaMultiChannelCreate+0x418>
40017f64:	e3a00040 	mov	r0, #64	; 0x40
40017f68:	eaffff00 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017f6c:	e59f0318 	ldr	r0, [pc, #792]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017f70:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f74:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017f78:	e3500000 	cmp	r0, #0
40017f7c:	0a000001 	beq	40017f88 <CyU3PDmaMultiChannelCreate+0x434>
40017f80:	e3a00040 	mov	r0, #64	; 0x40
40017f84:	eafffef9 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40017f88:	e59f02fc 	ldr	r0, [pc, #764]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017f8c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f90:	e7804107 	str	r4, [r0, r7, lsl #2]
40017f94:	e3a09000 	mov	r9, #0
40017f98:	ea00000d 	b	40017fd4 <CyU3PDmaMultiChannelCreate+0x480>
40017f9c:	e286000e 	add	r0, r6, #14
40017fa0:	e0800089 	add	r0, r0, r9, lsl #1
40017fa4:	e1d000b0 	ldrh	r0, [r0]
40017fa8:	e3a0103f 	mov	r1, #63	; 0x3f
40017fac:	e0018440 	and	r8, r1, r0, asr #8
40017fb0:	e286000e 	add	r0, r6, #14
40017fb4:	e0800089 	add	r0, r0, r9, lsl #1
40017fb8:	e1d000b0 	ldrh	r0, [r0]
40017fbc:	e20070ff 	and	r7, r0, #255	; 0xff
40017fc0:	e59f02c4 	ldr	r0, [pc, #708]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40017fc4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017fc8:	e7804107 	str	r4, [r0, r7, lsl #2]
40017fcc:	e2890001 	add	r0, r9, #1
40017fd0:	e20090ff 	and	r9, r0, #255	; 0xff
40017fd4:	e1d600b4 	ldrh	r0, [r6, #4]
40017fd8:	e1500009 	cmp	r0, r9
40017fdc:	caffffee 	bgt	40017f9c <CyU3PDmaMultiChannelCreate+0x448>
40017fe0:	e1c450b4 	strh	r5, [r4, #4]
40017fe4:	e1d600b0 	ldrh	r0, [r6]
40017fe8:	e1c400b6 	strh	r0, [r4, #6]
40017fec:	e1d600b2 	ldrh	r0, [r6, #2]
40017ff0:	e1c400b8 	strh	r0, [r4, #8]
40017ff4:	e1d601b6 	ldrh	r0, [r6, #22]
40017ff8:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
40017ffc:	e1d600b4 	ldrh	r0, [r6, #4]
40018000:	e1c400ba 	strh	r0, [r4, #10]
40018004:	e3a09000 	mov	r9, #0
40018008:	ea000014 	b	40018060 <CyU3PDmaMultiChannelCreate+0x50c>
4001800c:	e2860006 	add	r0, r6, #6
40018010:	e0800089 	add	r0, r0, r9, lsl #1
40018014:	e1d000b0 	ldrh	r0, [r0]
40018018:	e2841024 	add	r1, r4, #36	; 0x24
4001801c:	e0811089 	add	r1, r1, r9, lsl #1
40018020:	e1c100b0 	strh	r0, [r1]
40018024:	e286000e 	add	r0, r6, #14
40018028:	e0800089 	add	r0, r0, r9, lsl #1
4001802c:	e1d000b0 	ldrh	r0, [r0]
40018030:	e284102c 	add	r1, r4, #44	; 0x2c
40018034:	e0811089 	add	r1, r1, r9, lsl #1
40018038:	e1c100b0 	strh	r0, [r1]
4001803c:	e3a00000 	mov	r0, #0
40018040:	e284105c 	add	r1, r4, #92	; 0x5c
40018044:	e0811089 	add	r1, r1, r9, lsl #1
40018048:	e1c100b0 	strh	r0, [r1]
4001804c:	e2841064 	add	r1, r4, #100	; 0x64
40018050:	e0811089 	add	r1, r1, r9, lsl #1
40018054:	e1c100b0 	strh	r0, [r1]
40018058:	e2890001 	add	r0, r9, #1
4001805c:	e20090ff 	and	r9, r0, #255	; 0xff
40018060:	e3590004 	cmp	r9, #4
40018064:	baffffe8 	blt	4001800c <CyU3PDmaMultiChannelCreate+0x4b8>
40018068:	e1d601b8 	ldrh	r0, [r6, #24]
4001806c:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
40018070:	e1d601ba 	ldrh	r0, [r6, #26]
40018074:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
40018078:	e1d601bc 	ldrh	r0, [r6, #28]
4001807c:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
40018080:	e5d6001e 	ldrb	r0, [r6, #30]
40018084:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
40018088:	e5960020 	ldr	r0, [r6, #32]
4001808c:	e584006c 	str	r0, [r4, #108]	; 0x6c
40018090:	e3a03038 	mov	r3, #56	; 0x38
40018094:	e3a02000 	mov	r2, #0
40018098:	e1a01002 	mov	r1, r2
4001809c:	e2840078 	add	r0, r4, #120	; 0x78
400180a0:	ebffc745 	bl	40009dbc <_txe_mutex_create>
400180a4:	e3a02028 	mov	r2, #40	; 0x28
400180a8:	e3a01000 	mov	r1, #0
400180ac:	e28400b0 	add	r0, r4, #176	; 0xb0
400180b0:	ebffc687 	bl	40009ad4 <_txe_event_flags_create>
400180b4:	e5960024 	ldr	r0, [r6, #36]	; 0x24
400180b8:	e58400d8 	str	r0, [r4, #216]	; 0xd8
400180bc:	e59f01cc 	ldr	r0, [pc, #460]	; 40018290 <CyU3PDmaMultiChannelCreate+0x73c>
400180c0:	e5900000 	ldr	r0, [r0]
400180c4:	e5840074 	str	r0, [r4, #116]	; 0x74
400180c8:	e2450005 	sub	r0, r5, #5
400180cc:	e3500005 	cmp	r0, #5
400180d0:	308ff100 	addcc	pc, pc, r0, lsl #2
400180d4:	ea00001d 	b	40018150 <CyU3PDmaMultiChannelCreate+0x5fc>
400180d8:	ea000003 	b	400180ec <CyU3PDmaMultiChannelCreate+0x598>
400180dc:	ea000008 	b	40018104 <CyU3PDmaMultiChannelCreate+0x5b0>
400180e0:	ea000003 	b	400180f4 <CyU3PDmaMultiChannelCreate+0x5a0>
400180e4:	ea000008 	b	4001810c <CyU3PDmaMultiChannelCreate+0x5b8>
400180e8:	ea00000b 	b	4001811c <CyU3PDmaMultiChannelCreate+0x5c8>
400180ec:	e1a00000 	nop			; (mov r0, r0)
400180f0:	e1a00000 	nop			; (mov r0, r0)
400180f4:	e1a00004 	mov	r0, r4
400180f8:	ebfffd1c 	bl	40017570 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
400180fc:	e1a0b000 	mov	fp, r0
40018100:	ea000015 	b	4001815c <CyU3PDmaMultiChannelCreate+0x608>
40018104:	e1a00000 	nop			; (mov r0, r0)
40018108:	e1a00000 	nop			; (mov r0, r0)
4001810c:	e1a00004 	mov	r0, r4
40018110:	ebfffdd1 	bl	4001785c <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
40018114:	e1a0b000 	mov	fp, r0
40018118:	ea00000f 	b	4001815c <CyU3PDmaMultiChannelCreate+0x608>
4001811c:	e1a00000 	nop			; (mov r0, r0)
40018120:	e59f016c 	ldr	r0, [pc, #364]	; 40018294 <CyU3PDmaMultiChannelCreate+0x740>
40018124:	e5900000 	ldr	r0, [r0]
40018128:	e3500000 	cmp	r0, #0
4001812c:	1a000001 	bne	40018138 <CyU3PDmaMultiChannelCreate+0x5e4>
40018130:	e3a0b047 	mov	fp, #71	; 0x47
40018134:	ea000004 	b	4001814c <CyU3PDmaMultiChannelCreate+0x5f8>
40018138:	e1a00004 	mov	r0, r4
4001813c:	e59f1150 	ldr	r1, [pc, #336]	; 40018294 <CyU3PDmaMultiChannelCreate+0x740>
40018140:	e5911000 	ldr	r1, [r1]
40018144:	e12fff31 	blx	r1
40018148:	e1a0b000 	mov	fp, r0
4001814c:	ea000002 	b	4001815c <CyU3PDmaMultiChannelCreate+0x608>
40018150:	e1a00000 	nop			; (mov r0, r0)
40018154:	e3a0b040 	mov	fp, #64	; 0x40
40018158:	e1a00000 	nop			; (mov r0, r0)
4001815c:	e1a00000 	nop			; (mov r0, r0)
40018160:	e35b0000 	cmp	fp, #0
40018164:	1a000002 	bne	40018174 <CyU3PDmaMultiChannelCreate+0x620>
40018168:	e3a00001 	mov	r0, #1
4001816c:	e5840000 	str	r0, [r4]
40018170:	ea000042 	b	40018280 <CyU3PDmaMultiChannelCreate+0x72c>
40018174:	e2840078 	add	r0, r4, #120	; 0x78
40018178:	ebffc76d 	bl	40009f34 <_txe_mutex_delete>
4001817c:	e28400b0 	add	r0, r4, #176	; 0xb0
40018180:	ebffc6a3 	bl	40009c14 <_txe_event_flags_delete>
40018184:	e3550005 	cmp	r5, #5
40018188:	0a000001 	beq	40018194 <CyU3PDmaMultiChannelCreate+0x640>
4001818c:	e3550007 	cmp	r5, #7
40018190:	1a00001d 	bne	4001820c <CyU3PDmaMultiChannelCreate+0x6b8>
40018194:	e1d600be 	ldrh	r0, [r6, #14]
40018198:	e3a0103f 	mov	r1, #63	; 0x3f
4001819c:	e0018440 	and	r8, r1, r0, asr #8
400181a0:	e1d600be 	ldrh	r0, [r6, #14]
400181a4:	e20070ff 	and	r7, r0, #255	; 0xff
400181a8:	e3a00000 	mov	r0, #0
400181ac:	e59f10d8 	ldr	r1, [pc, #216]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
400181b0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400181b4:	e7810107 	str	r0, [r1, r7, lsl #2]
400181b8:	e3a09000 	mov	r9, #0
400181bc:	ea00000e 	b	400181fc <CyU3PDmaMultiChannelCreate+0x6a8>
400181c0:	e2860006 	add	r0, r6, #6
400181c4:	e0800089 	add	r0, r0, r9, lsl #1
400181c8:	e1d000b0 	ldrh	r0, [r0]
400181cc:	e3a0103f 	mov	r1, #63	; 0x3f
400181d0:	e0018440 	and	r8, r1, r0, asr #8
400181d4:	e2860006 	add	r0, r6, #6
400181d8:	e0800089 	add	r0, r0, r9, lsl #1
400181dc:	e1d000b0 	ldrh	r0, [r0]
400181e0:	e20070ff 	and	r7, r0, #255	; 0xff
400181e4:	e3a00000 	mov	r0, #0
400181e8:	e59f109c 	ldr	r1, [pc, #156]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
400181ec:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400181f0:	e7810107 	str	r0, [r1, r7, lsl #2]
400181f4:	e2890001 	add	r0, r9, #1
400181f8:	e20090ff 	and	r9, r0, #255	; 0xff
400181fc:	e1d600b4 	ldrh	r0, [r6, #4]
40018200:	e1500009 	cmp	r0, r9
40018204:	caffffed 	bgt	400181c0 <CyU3PDmaMultiChannelCreate+0x66c>
40018208:	ea00001c 	b	40018280 <CyU3PDmaMultiChannelCreate+0x72c>
4001820c:	e1d600b6 	ldrh	r0, [r6, #6]
40018210:	e3a0103f 	mov	r1, #63	; 0x3f
40018214:	e0018440 	and	r8, r1, r0, asr #8
40018218:	e1d600b6 	ldrh	r0, [r6, #6]
4001821c:	e20070ff 	and	r7, r0, #255	; 0xff
40018220:	e3a00000 	mov	r0, #0
40018224:	e59f1060 	ldr	r1, [pc, #96]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40018228:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001822c:	e7810107 	str	r0, [r1, r7, lsl #2]
40018230:	e3a09000 	mov	r9, #0
40018234:	ea00000e 	b	40018274 <CyU3PDmaMultiChannelCreate+0x720>
40018238:	e286000e 	add	r0, r6, #14
4001823c:	e0800089 	add	r0, r0, r9, lsl #1
40018240:	e1d000b0 	ldrh	r0, [r0]
40018244:	e3a0103f 	mov	r1, #63	; 0x3f
40018248:	e0018440 	and	r8, r1, r0, asr #8
4001824c:	e286000e 	add	r0, r6, #14
40018250:	e0800089 	add	r0, r0, r9, lsl #1
40018254:	e1d000b0 	ldrh	r0, [r0]
40018258:	e20070ff 	and	r7, r0, #255	; 0xff
4001825c:	e3a00000 	mov	r0, #0
40018260:	e59f1024 	ldr	r1, [pc, #36]	; 4001828c <CyU3PDmaMultiChannelCreate+0x738>
40018264:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018268:	e7810107 	str	r0, [r1, r7, lsl #2]
4001826c:	e2890001 	add	r0, r9, #1
40018270:	e20090ff 	and	r9, r0, #255	; 0xff
40018274:	e1d600b4 	ldrh	r0, [r6, #4]
40018278:	e1500009 	cmp	r0, r9
4001827c:	caffffed 	bgt	40018238 <CyU3PDmaMultiChannelCreate+0x6e4>
40018280:	e1a0000b 	mov	r0, fp
40018284:	eafffe39 	b	40017b70 <CyU3PDmaMultiChannelCreate+0x1c>
40018288:	0000fff0 	.word	0x0000fff0
4001828c:	40030d04 	.word	0x40030d04
40018290:	40030c68 	.word	0x40030c68
40018294:	40030cf0 	.word	0x40030cf0

Disassembly of section i.CyU3PDmaMultiChannelReset:

40018298 <CyU3PDmaMultiChannelReset>:
40018298:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4001829c:	e1a04000 	mov	r4, r0
400182a0:	e3e01000 	mvn	r1, #0
400182a4:	e1a00004 	mov	r0, r4
400182a8:	ebfffbab 	bl	4001715c <CyU3PDmaMultiChannelAcquireLock>
400182ac:	e1a06000 	mov	r6, r0
400182b0:	e3560000 	cmp	r6, #0
400182b4:	0a000001 	beq	400182c0 <CyU3PDmaMultiChannelReset+0x28>
400182b8:	e1a00006 	mov	r0, r6
400182bc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400182c0:	e1d400b4 	ldrh	r0, [r4, #4]
400182c4:	e2400005 	sub	r0, r0, #5
400182c8:	e3500005 	cmp	r0, #5
400182cc:	308ff100 	addcc	pc, pc, r0, lsl #2
400182d0:	ea00001a 	b	40018340 <CyU3PDmaMultiChannelReset+0xa8>
400182d4:	ea000003 	b	400182e8 <CyU3PDmaMultiChannelReset+0x50>
400182d8:	ea000007 	b	400182fc <CyU3PDmaMultiChannelReset+0x64>
400182dc:	ea000003 	b	400182f0 <CyU3PDmaMultiChannelReset+0x58>
400182e0:	ea000007 	b	40018304 <CyU3PDmaMultiChannelReset+0x6c>
400182e4:	ea000009 	b	40018310 <CyU3PDmaMultiChannelReset+0x78>
400182e8:	e1a00000 	nop			; (mov r0, r0)
400182ec:	e1a00000 	nop			; (mov r0, r0)
400182f0:	e1a00004 	mov	r0, r4
400182f4:	eb00003c 	bl	400183ec <CyU3PDmaMultiChannelReset_TypeManyToOne>
400182f8:	ea000012 	b	40018348 <CyU3PDmaMultiChannelReset+0xb0>
400182fc:	e1a00000 	nop			; (mov r0, r0)
40018300:	e1a00000 	nop			; (mov r0, r0)
40018304:	e1a00004 	mov	r0, r4
40018308:	eb000083 	bl	4001851c <CyU3PDmaMultiChannelReset_TypeOneToMany>
4001830c:	ea00000d 	b	40018348 <CyU3PDmaMultiChannelReset+0xb0>
40018310:	e1a00000 	nop			; (mov r0, r0)
40018314:	e59f00cc 	ldr	r0, [pc, #204]	; 400183e8 <CyU3PDmaMultiChannelReset+0x150>
40018318:	e5900000 	ldr	r0, [r0]
4001831c:	e3500000 	cmp	r0, #0
40018320:	1a000001 	bne	4001832c <CyU3PDmaMultiChannelReset+0x94>
40018324:	e3a00047 	mov	r0, #71	; 0x47
40018328:	eaffffe3 	b	400182bc <CyU3PDmaMultiChannelReset+0x24>
4001832c:	e1a00004 	mov	r0, r4
40018330:	e59f10b0 	ldr	r1, [pc, #176]	; 400183e8 <CyU3PDmaMultiChannelReset+0x150>
40018334:	e5911000 	ldr	r1, [r1]
40018338:	e12fff31 	blx	r1
4001833c:	ea000001 	b	40018348 <CyU3PDmaMultiChannelReset+0xb0>
40018340:	e1a00000 	nop			; (mov r0, r0)
40018344:	e1a00000 	nop			; (mov r0, r0)
40018348:	e1a00000 	nop			; (mov r0, r0)
4001834c:	ebffc103 	bl	40008760 <_tx_thread_identify>
40018350:	e1a05000 	mov	r5, r0
40018354:	e3550000 	cmp	r5, #0
40018358:	0a000003 	beq	4001836c <CyU3PDmaMultiChannelReset+0xd4>
4001835c:	e1a0200d 	mov	r2, sp
40018360:	e3a01002 	mov	r1, #2
40018364:	e1a00005 	mov	r0, r5
40018368:	ebffc90a 	bl	4000a798 <_txe_thread_priority_change>
4001836c:	e3a02002 	mov	r2, #2
40018370:	e3e01047 	mvn	r1, #71	; 0x47
40018374:	e28400b0 	add	r0, r4, #176	; 0xb0
40018378:	ebffc675 	bl	40009d54 <_txe_event_flags_set>
4001837c:	e3a02000 	mov	r2, #0
40018380:	e3a01020 	mov	r1, #32
40018384:	e28400b0 	add	r0, r4, #176	; 0xb0
40018388:	ebffc671 	bl	40009d54 <_txe_event_flags_set>
4001838c:	e3a00001 	mov	r0, #1
40018390:	e5840000 	str	r0, [r4]
40018394:	e2840078 	add	r0, r4, #120	; 0x78
40018398:	ebffc73a 	bl	4000a088 <_txe_mutex_put>
4001839c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400183a0:	e3500000 	cmp	r0, #0
400183a4:	0a000007 	beq	400183c8 <CyU3PDmaMultiChannelReset+0x130>
400183a8:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
400183ac:	e3100020 	tst	r0, #32
400183b0:	0a000004 	beq	400183c8 <CyU3PDmaMultiChannelReset+0x130>
400183b4:	e3a02000 	mov	r2, #0
400183b8:	e3a01020 	mov	r1, #32
400183bc:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
400183c0:	e1a00004 	mov	r0, r4
400183c4:	e12fff33 	blx	r3
400183c8:	e3550000 	cmp	r5, #0
400183cc:	0a000003 	beq	400183e0 <CyU3PDmaMultiChannelReset+0x148>
400183d0:	e1a0200d 	mov	r2, sp
400183d4:	e1a00005 	mov	r0, r5
400183d8:	e59d1000 	ldr	r1, [sp]
400183dc:	ebffc8ed 	bl	4000a798 <_txe_thread_priority_change>
400183e0:	e3a00000 	mov	r0, #0
400183e4:	eaffffb4 	b	400182bc <CyU3PDmaMultiChannelReset+0x24>
400183e8:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

400183ec <CyU3PDmaMultiChannelReset_TypeManyToOne>:
400183ec:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400183f0:	e1a04000 	mov	r4, r0
400183f4:	e1a00004 	mov	r0, r4
400183f8:	eb000215 	bl	40018c54 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
400183fc:	e1d451bc 	ldrh	r5, [r4, #28]
40018400:	e1d400b8 	ldrh	r0, [r4, #8]
40018404:	e1d410ba 	ldrh	r1, [r4, #10]
40018408:	e0000091 	mul	r0, r1, r0
4001840c:	e1a06800 	lsl	r6, r0, #16
40018410:	e1a06826 	lsr	r6, r6, #16
40018414:	ea00000c 	b	4001844c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
40018418:	e1a0100d 	mov	r1, sp
4001841c:	e1a00005 	mov	r0, r5
40018420:	eb002808 	bl	40022448 <CyU3PDmaDscrGetConfig>
40018424:	e59d000c 	ldr	r0, [sp, #12]
40018428:	e59f10e4 	ldr	r1, [pc, #228]	; 40018514 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
4001842c:	e0000001 	and	r0, r0, r1
40018430:	e58d000c 	str	r0, [sp, #12]
40018434:	e1a0100d 	mov	r1, sp
40018438:	e1a00005 	mov	r0, r5
4001843c:	eb00281c 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40018440:	e59d0008 	ldr	r0, [sp, #8]
40018444:	e1a05800 	lsl	r5, r0, #16
40018448:	e1a05825 	lsr	r5, r5, #16
4001844c:	e1b00006 	movs	r0, r6
40018450:	e2461001 	sub	r1, r6, #1
40018454:	e1a06801 	lsl	r6, r1, #16
40018458:	e1a06826 	lsr	r6, r6, #16
4001845c:	1affffed 	bne	40018418 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
40018460:	e1d400b4 	ldrh	r0, [r4, #4]
40018464:	e3500007 	cmp	r0, #7
40018468:	1a000021 	bne	400184f4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
4001846c:	e3a07000 	mov	r7, #0
40018470:	ea00001c 	b	400184e8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
40018474:	e2840014 	add	r0, r4, #20
40018478:	e0800087 	add	r0, r0, r7, lsl #1
4001847c:	e1d000b0 	ldrh	r0, [r0]
40018480:	e284103e 	add	r1, r4, #62	; 0x3e
40018484:	e0811087 	add	r1, r1, r7, lsl #1
40018488:	e1c100b0 	strh	r0, [r1]
4001848c:	e1a05000 	mov	r5, r0
40018490:	e3a06000 	mov	r6, #0
40018494:	ea00000e 	b	400184d4 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
40018498:	e1a0100d 	mov	r1, sp
4001849c:	e1a00005 	mov	r0, r5
400184a0:	eb0027e8 	bl	40022448 <CyU3PDmaDscrGetConfig>
400184a4:	e59d000c 	ldr	r0, [sp, #12]
400184a8:	e59f1064 	ldr	r1, [pc, #100]	; 40018514 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400184ac:	e0000001 	and	r0, r0, r1
400184b0:	e58d000c 	str	r0, [sp, #12]
400184b4:	e1a0100d 	mov	r1, sp
400184b8:	e1a00005 	mov	r0, r5
400184bc:	eb0027fc 	bl	400224b4 <CyU3PDmaDscrSetConfig>
400184c0:	e59d0008 	ldr	r0, [sp, #8]
400184c4:	e59f104c 	ldr	r1, [pc, #76]	; 40018518 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
400184c8:	e0015820 	and	r5, r1, r0, lsr #16
400184cc:	e2860001 	add	r0, r6, #1
400184d0:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400184d4:	e1d400b8 	ldrh	r0, [r4, #8]
400184d8:	e1500006 	cmp	r0, r6
400184dc:	caffffed 	bgt	40018498 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
400184e0:	e2870001 	add	r0, r7, #1
400184e4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400184e8:	e1d400ba 	ldrh	r0, [r4, #10]
400184ec:	e1500007 	cmp	r0, r7
400184f0:	caffffdf 	bgt	40018474 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
400184f4:	e1d401b4 	ldrh	r0, [r4, #20]
400184f8:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400184fc:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018500:	e1d401bc 	ldrh	r0, [r4, #28]
40018504:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018508:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001850c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018510:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018514:	0000fff0 	.word	0x0000fff0
40018518:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

4001851c <CyU3PDmaMultiChannelReset_TypeOneToMany>:
4001851c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018520:	e1a04000 	mov	r4, r0
40018524:	e1a00004 	mov	r0, r4
40018528:	eb000229 	bl	40018dd4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
4001852c:	e1d451b4 	ldrh	r5, [r4, #20]
40018530:	e1d400b8 	ldrh	r0, [r4, #8]
40018534:	e1d410ba 	ldrh	r1, [r4, #10]
40018538:	e0000091 	mul	r0, r1, r0
4001853c:	e1a06800 	lsl	r6, r0, #16
40018540:	e1a06826 	lsr	r6, r6, #16
40018544:	ea00000c 	b	4001857c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
40018548:	e1a0100d 	mov	r1, sp
4001854c:	e1a00005 	mov	r0, r5
40018550:	eb0027bc 	bl	40022448 <CyU3PDmaDscrGetConfig>
40018554:	e59d000c 	ldr	r0, [sp, #12]
40018558:	e59f10e4 	ldr	r1, [pc, #228]	; 40018644 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
4001855c:	e0000001 	and	r0, r0, r1
40018560:	e58d000c 	str	r0, [sp, #12]
40018564:	e1a0100d 	mov	r1, sp
40018568:	e1a00005 	mov	r0, r5
4001856c:	eb0027d0 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40018570:	e59d0008 	ldr	r0, [sp, #8]
40018574:	e59f10cc 	ldr	r1, [pc, #204]	; 40018648 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
40018578:	e0015820 	and	r5, r1, r0, lsr #16
4001857c:	e1b00006 	movs	r0, r6
40018580:	e2461001 	sub	r1, r6, #1
40018584:	e1a06801 	lsl	r6, r1, #16
40018588:	e1a06826 	lsr	r6, r6, #16
4001858c:	1affffed 	bne	40018548 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018590:	e1d400b4 	ldrh	r0, [r4, #4]
40018594:	e3500008 	cmp	r0, #8
40018598:	1a000021 	bne	40018624 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
4001859c:	e3a07000 	mov	r7, #0
400185a0:	ea00001c 	b	40018618 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
400185a4:	e284001c 	add	r0, r4, #28
400185a8:	e0800087 	add	r0, r0, r7, lsl #1
400185ac:	e1d000b0 	ldrh	r0, [r0]
400185b0:	e2841046 	add	r1, r4, #70	; 0x46
400185b4:	e0811087 	add	r1, r1, r7, lsl #1
400185b8:	e1c100b0 	strh	r0, [r1]
400185bc:	e1a05000 	mov	r5, r0
400185c0:	e3a06000 	mov	r6, #0
400185c4:	ea00000e 	b	40018604 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
400185c8:	e1a0100d 	mov	r1, sp
400185cc:	e1a00005 	mov	r0, r5
400185d0:	eb00279c 	bl	40022448 <CyU3PDmaDscrGetConfig>
400185d4:	e59d000c 	ldr	r0, [sp, #12]
400185d8:	e59f1064 	ldr	r1, [pc, #100]	; 40018644 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400185dc:	e0000001 	and	r0, r0, r1
400185e0:	e58d000c 	str	r0, [sp, #12]
400185e4:	e1a0100d 	mov	r1, sp
400185e8:	e1a00005 	mov	r0, r5
400185ec:	eb0027b0 	bl	400224b4 <CyU3PDmaDscrSetConfig>
400185f0:	e59d0008 	ldr	r0, [sp, #8]
400185f4:	e1a05800 	lsl	r5, r0, #16
400185f8:	e1a05825 	lsr	r5, r5, #16
400185fc:	e2860001 	add	r0, r6, #1
40018600:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018604:	e1d400b8 	ldrh	r0, [r4, #8]
40018608:	e1500006 	cmp	r0, r6
4001860c:	caffffed 	bgt	400185c8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
40018610:	e2870001 	add	r0, r7, #1
40018614:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018618:	e1d400ba 	ldrh	r0, [r4, #10]
4001861c:	e1500007 	cmp	r0, r7
40018620:	caffffdf 	bgt	400185a4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018624:	e1d401b4 	ldrh	r0, [r4, #20]
40018628:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
4001862c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018630:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018634:	e1d401bc 	ldrh	r0, [r4, #28]
40018638:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
4001863c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018640:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018644:	0000fff0 	.word	0x0000fff0
40018648:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

4001864c <CyU3PDmaMultiChannelSetXfer>:
4001864c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018650:	e1a04000 	mov	r4, r0
40018654:	e1a05001 	mov	r5, r1
40018658:	e1a06002 	mov	r6, r2
4001865c:	e3e01000 	mvn	r1, #0
40018660:	e1a00004 	mov	r0, r4
40018664:	ebfffabc 	bl	4001715c <CyU3PDmaMultiChannelAcquireLock>
40018668:	e1a07000 	mov	r7, r0
4001866c:	e3570000 	cmp	r7, #0
40018670:	0a000001 	beq	4001867c <CyU3PDmaMultiChannelSetXfer+0x30>
40018674:	e1a00007 	mov	r0, r7
40018678:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001867c:	e5940000 	ldr	r0, [r4]
40018680:	e3500001 	cmp	r0, #1
40018684:	0a000000 	beq	4001868c <CyU3PDmaMultiChannelSetXfer+0x40>
40018688:	e3a07043 	mov	r7, #67	; 0x43
4001868c:	e1d400ba 	ldrh	r0, [r4, #10]
40018690:	e1500006 	cmp	r0, r6
40018694:	ca000000 	bgt	4001869c <CyU3PDmaMultiChannelSetXfer+0x50>
40018698:	e3a07040 	mov	r7, #64	; 0x40
4001869c:	e1d400b4 	ldrh	r0, [r4, #4]
400186a0:	e3500009 	cmp	r0, #9
400186a4:	1a000002 	bne	400186b4 <CyU3PDmaMultiChannelSetXfer+0x68>
400186a8:	e3560000 	cmp	r6, #0
400186ac:	0a000000 	beq	400186b4 <CyU3PDmaMultiChannelSetXfer+0x68>
400186b0:	e3a07040 	mov	r7, #64	; 0x40
400186b4:	e3570000 	cmp	r7, #0
400186b8:	1a00002d 	bne	40018774 <CyU3PDmaMultiChannelSetXfer+0x128>
400186bc:	e3a02002 	mov	r2, #2
400186c0:	e3e01027 	mvn	r1, #39	; 0x27
400186c4:	e28400b0 	add	r0, r4, #176	; 0xb0
400186c8:	ebffc5a1 	bl	40009d54 <_txe_event_flags_set>
400186cc:	e5845070 	str	r5, [r4, #112]	; 0x70
400186d0:	e1d400b4 	ldrh	r0, [r4, #4]
400186d4:	e2400005 	sub	r0, r0, #5
400186d8:	e3500005 	cmp	r0, #5
400186dc:	308ff100 	addcc	pc, pc, r0, lsl #2
400186e0:	ea000020 	b	40018768 <CyU3PDmaMultiChannelSetXfer+0x11c>
400186e4:	ea000003 	b	400186f8 <CyU3PDmaMultiChannelSetXfer+0xac>
400186e8:	ea000009 	b	40018714 <CyU3PDmaMultiChannelSetXfer+0xc8>
400186ec:	ea000003 	b	40018700 <CyU3PDmaMultiChannelSetXfer+0xb4>
400186f0:	ea000009 	b	4001871c <CyU3PDmaMultiChannelSetXfer+0xd0>
400186f4:	ea00000d 	b	40018730 <CyU3PDmaMultiChannelSetXfer+0xe4>
400186f8:	e1a00000 	nop			; (mov r0, r0)
400186fc:	e1a00000 	nop			; (mov r0, r0)
40018700:	e1a02006 	mov	r2, r6
40018704:	e1a01005 	mov	r1, r5
40018708:	e1a00004 	mov	r0, r4
4001870c:	eb00001d 	bl	40018788 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
40018710:	ea000016 	b	40018770 <CyU3PDmaMultiChannelSetXfer+0x124>
40018714:	e1a00000 	nop			; (mov r0, r0)
40018718:	e1a00000 	nop			; (mov r0, r0)
4001871c:	e1a02006 	mov	r2, r6
40018720:	e1a01005 	mov	r1, r5
40018724:	e1a00004 	mov	r0, r4
40018728:	eb0000b2 	bl	400189f8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
4001872c:	ea00000f 	b	40018770 <CyU3PDmaMultiChannelSetXfer+0x124>
40018730:	e1a00000 	nop			; (mov r0, r0)
40018734:	e59f0048 	ldr	r0, [pc, #72]	; 40018784 <CyU3PDmaMultiChannelSetXfer+0x138>
40018738:	e5900000 	ldr	r0, [r0]
4001873c:	e3500000 	cmp	r0, #0
40018740:	1a000001 	bne	4001874c <CyU3PDmaMultiChannelSetXfer+0x100>
40018744:	e3a00047 	mov	r0, #71	; 0x47
40018748:	eaffffca 	b	40018678 <CyU3PDmaMultiChannelSetXfer+0x2c>
4001874c:	e1a02006 	mov	r2, r6
40018750:	e1a01005 	mov	r1, r5
40018754:	e1a00004 	mov	r0, r4
40018758:	e59f3024 	ldr	r3, [pc, #36]	; 40018784 <CyU3PDmaMultiChannelSetXfer+0x138>
4001875c:	e5933000 	ldr	r3, [r3]
40018760:	e12fff33 	blx	r3
40018764:	ea000001 	b	40018770 <CyU3PDmaMultiChannelSetXfer+0x124>
40018768:	e1a00000 	nop			; (mov r0, r0)
4001876c:	e1a00000 	nop			; (mov r0, r0)
40018770:	e1a00000 	nop			; (mov r0, r0)
40018774:	e2840078 	add	r0, r4, #120	; 0x78
40018778:	ebffc642 	bl	4000a088 <_txe_mutex_put>
4001877c:	e1a00007 	mov	r0, r7
40018780:	eaffffbc 	b	40018678 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018784:	40030cfc 	.word	0x40030cfc

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018788 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018788:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001878c:	e24dd028 	sub	sp, sp, #40	; 0x28
40018790:	e1a04000 	mov	r4, r0
40018794:	e1a05001 	mov	r5, r1
40018798:	e1a06002 	mov	r6, r2
4001879c:	e3a00002 	mov	r0, #2
400187a0:	e5840000 	str	r0, [r4]
400187a4:	e3a07000 	mov	r7, #0
400187a8:	ea000005 	b	400187c4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
400187ac:	e2841024 	add	r1, r4, #36	; 0x24
400187b0:	e0811087 	add	r1, r1, r7, lsl #1
400187b4:	e1d100b0 	ldrh	r0, [r1]
400187b8:	ebfff0ac 	bl	40014a70 <CyU3PDmaSocketDisable>
400187bc:	e2870001 	add	r0, r7, #1
400187c0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400187c4:	e1d400ba 	ldrh	r0, [r4, #10]
400187c8:	e1500007 	cmp	r0, r7
400187cc:	cafffff6 	bgt	400187ac <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
400187d0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400187d4:	ebfff0a5 	bl	40014a70 <CyU3PDmaSocketDisable>
400187d8:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
400187dc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400187e0:	ebfff1bd 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
400187e4:	e2840014 	add	r0, r4, #20
400187e8:	e0800086 	add	r0, r0, r6, lsl #1
400187ec:	e1d000b0 	ldrh	r0, [r0]
400187f0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400187f4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400187f8:	e3a07000 	mov	r7, #0
400187fc:	ea000040 	b	40018904 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
40018800:	e2841024 	add	r1, r4, #36	; 0x24
40018804:	e0811087 	add	r1, r1, r7, lsl #1
40018808:	e1d100b0 	ldrh	r0, [r1]
4001880c:	e28d1010 	add	r1, sp, #16
40018810:	ebfff0ae 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40018814:	e3a00000 	mov	r0, #0
40018818:	e58d0014 	str	r0, [sp, #20]
4001881c:	e58d0018 	str	r0, [sp, #24]
40018820:	e59d001c 	ldr	r0, [sp, #28]
40018824:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018828:	e58d001c 	str	r0, [sp, #28]
4001882c:	e59d001c 	ldr	r0, [sp, #28]
40018830:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018834:	e58d001c 	str	r0, [sp, #28]
40018838:	e59d001c 	ldr	r0, [sp, #28]
4001883c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018840:	e58d001c 	str	r0, [sp, #28]
40018844:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018848:	e3500001 	cmp	r0, #1
4001884c:	1a000003 	bne	40018860 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018850:	e59d001c 	ldr	r0, [sp, #28]
40018854:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018858:	e58d001c 	str	r0, [sp, #28]
4001885c:	ea000002 	b	4001886c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018860:	e59d001c 	ldr	r0, [sp, #28]
40018864:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018868:	e58d001c 	str	r0, [sp, #28]
4001886c:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018870:	e3500000 	cmp	r0, #0
40018874:	0a000006 	beq	40018894 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018878:	e1d400b8 	ldrh	r0, [r4, #8]
4001887c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018880:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018884:	e1800281 	orr	r0, r0, r1, lsl #5
40018888:	e59d101c 	ldr	r1, [sp, #28]
4001888c:	e1800001 	orr	r0, r0, r1
40018890:	e58d001c 	str	r0, [sp, #28]
40018894:	e3e00000 	mvn	r0, #0
40018898:	e58d0020 	str	r0, [sp, #32]
4001889c:	e1570006 	cmp	r7, r6
400188a0:	ba000004 	blt	400188b8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
400188a4:	e2840014 	add	r0, r4, #20
400188a8:	e0800087 	add	r0, r0, r7, lsl #1
400188ac:	e1d000b0 	ldrh	r0, [r0]
400188b0:	e58d0010 	str	r0, [sp, #16]
400188b4:	ea000007 	b	400188d8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
400188b8:	e2841014 	add	r1, r4, #20
400188bc:	e0811087 	add	r1, r1, r7, lsl #1
400188c0:	e1d100b0 	ldrh	r0, [r1]
400188c4:	e1a0100d 	mov	r1, sp
400188c8:	eb0026de 	bl	40022448 <CyU3PDmaDscrGetConfig>
400188cc:	e59d0008 	ldr	r0, [sp, #8]
400188d0:	e1a00820 	lsr	r0, r0, #16
400188d4:	e58d0010 	str	r0, [sp, #16]
400188d8:	e284103e 	add	r1, r4, #62	; 0x3e
400188dc:	e0811087 	add	r1, r1, r7, lsl #1
400188e0:	e59d0010 	ldr	r0, [sp, #16]
400188e4:	e1c100b0 	strh	r0, [r1]
400188e8:	e2841024 	add	r1, r4, #36	; 0x24
400188ec:	e0811087 	add	r1, r1, r7, lsl #1
400188f0:	e1d100b0 	ldrh	r0, [r1]
400188f4:	e28d1010 	add	r1, sp, #16
400188f8:	ebfff11e 	bl	40014d78 <CyU3PDmaSocketSetConfig>
400188fc:	e2870001 	add	r0, r7, #1
40018900:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018904:	e1d400ba 	ldrh	r0, [r4, #10]
40018908:	e1500007 	cmp	r0, r7
4001890c:	caffffbb 	bgt	40018800 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018910:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018914:	e28d1010 	add	r1, sp, #16
40018918:	ebfff06c 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001891c:	e58d5014 	str	r5, [sp, #20]
40018920:	e3a00000 	mov	r0, #0
40018924:	e58d0018 	str	r0, [sp, #24]
40018928:	e3550000 	cmp	r5, #0
4001892c:	1a000006 	bne	4001894c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018930:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018934:	e3c00080 	bic	r0, r0, #128	; 0x80
40018938:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001893c:	e59d001c 	ldr	r0, [sp, #28]
40018940:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018944:	e58d001c 	str	r0, [sp, #28]
40018948:	ea000005 	b	40018964 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
4001894c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018950:	e3800080 	orr	r0, r0, #128	; 0x80
40018954:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018958:	e59d001c 	ldr	r0, [sp, #28]
4001895c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018960:	e58d001c 	str	r0, [sp, #28]
40018964:	e59d001c 	ldr	r0, [sp, #28]
40018968:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001896c:	e58d001c 	str	r0, [sp, #28]
40018970:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018974:	e3500001 	cmp	r0, #1
40018978:	1a000003 	bne	4001898c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
4001897c:	e59d001c 	ldr	r0, [sp, #28]
40018980:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018984:	e58d001c 	str	r0, [sp, #28]
40018988:	ea000002 	b	40018998 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
4001898c:	e59d001c 	ldr	r0, [sp, #28]
40018990:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018994:	e58d001c 	str	r0, [sp, #28]
40018998:	e3e00000 	mvn	r0, #0
4001899c:	e58d0020 	str	r0, [sp, #32]
400189a0:	e1d481bc 	ldrh	r8, [r4, #28]
400189a4:	e3a07000 	mov	r7, #0
400189a8:	ea000007 	b	400189cc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
400189ac:	e1a0100d 	mov	r1, sp
400189b0:	e1a00008 	mov	r0, r8
400189b4:	eb0026a3 	bl	40022448 <CyU3PDmaDscrGetConfig>
400189b8:	e59d0008 	ldr	r0, [sp, #8]
400189bc:	e1a08800 	lsl	r8, r0, #16
400189c0:	e1a08828 	lsr	r8, r8, #16
400189c4:	e2870001 	add	r0, r7, #1
400189c8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400189cc:	e1570006 	cmp	r7, r6
400189d0:	bafffff5 	blt	400189ac <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
400189d4:	e58d8010 	str	r8, [sp, #16]
400189d8:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
400189dc:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
400189e0:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
400189e4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400189e8:	e28d1010 	add	r1, sp, #16
400189ec:	ebfff0e1 	bl	40014d78 <CyU3PDmaSocketSetConfig>
400189f0:	e28dd028 	add	sp, sp, #40	; 0x28
400189f4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

400189f8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
400189f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400189fc:	e24dd028 	sub	sp, sp, #40	; 0x28
40018a00:	e1a04000 	mov	r4, r0
40018a04:	e1a05001 	mov	r5, r1
40018a08:	e1a06002 	mov	r6, r2
40018a0c:	e3a00002 	mov	r0, #2
40018a10:	e5840000 	str	r0, [r4]
40018a14:	e3a07000 	mov	r7, #0
40018a18:	ea000005 	b	40018a34 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018a1c:	e284102c 	add	r1, r4, #44	; 0x2c
40018a20:	e0811087 	add	r1, r1, r7, lsl #1
40018a24:	e1d100b0 	ldrh	r0, [r1]
40018a28:	ebfff010 	bl	40014a70 <CyU3PDmaSocketDisable>
40018a2c:	e2870001 	add	r0, r7, #1
40018a30:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a34:	e1d400ba 	ldrh	r0, [r4, #10]
40018a38:	e1500007 	cmp	r0, r7
40018a3c:	cafffff6 	bgt	40018a1c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018a40:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a44:	ebfff009 	bl	40014a70 <CyU3PDmaSocketDisable>
40018a48:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018a4c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a50:	ebfff121 	bl	40014edc <CyU3PDmaUpdateSocketSuspendOption>
40018a54:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a58:	e28d1010 	add	r1, sp, #16
40018a5c:	ebfff01b 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40018a60:	e58d5014 	str	r5, [sp, #20]
40018a64:	e3a00000 	mov	r0, #0
40018a68:	e58d0018 	str	r0, [sp, #24]
40018a6c:	e3550000 	cmp	r5, #0
40018a70:	1a000006 	bne	40018a90 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018a74:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a78:	e3c00080 	bic	r0, r0, #128	; 0x80
40018a7c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a80:	e59d001c 	ldr	r0, [sp, #28]
40018a84:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018a88:	e58d001c 	str	r0, [sp, #28]
40018a8c:	ea000005 	b	40018aa8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018a90:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a94:	e3800080 	orr	r0, r0, #128	; 0x80
40018a98:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a9c:	e59d001c 	ldr	r0, [sp, #28]
40018aa0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018aa4:	e58d001c 	str	r0, [sp, #28]
40018aa8:	e59d001c 	ldr	r0, [sp, #28]
40018aac:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018ab0:	e58d001c 	str	r0, [sp, #28]
40018ab4:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018ab8:	e3500001 	cmp	r0, #1
40018abc:	1a000003 	bne	40018ad0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018ac0:	e59d001c 	ldr	r0, [sp, #28]
40018ac4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018ac8:	e58d001c 	str	r0, [sp, #28]
40018acc:	ea000002 	b	40018adc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018ad0:	e59d001c 	ldr	r0, [sp, #28]
40018ad4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018ad8:	e58d001c 	str	r0, [sp, #28]
40018adc:	e3e00000 	mvn	r0, #0
40018ae0:	e58d0020 	str	r0, [sp, #32]
40018ae4:	e1d481b4 	ldrh	r8, [r4, #20]
40018ae8:	e3a07000 	mov	r7, #0
40018aec:	ea000007 	b	40018b10 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018af0:	e1a0100d 	mov	r1, sp
40018af4:	e1a00008 	mov	r0, r8
40018af8:	eb002652 	bl	40022448 <CyU3PDmaDscrGetConfig>
40018afc:	e59d0008 	ldr	r0, [sp, #8]
40018b00:	e59f1148 	ldr	r1, [pc, #328]	; 40018c50 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018b04:	e0018820 	and	r8, r1, r0, lsr #16
40018b08:	e2870001 	add	r0, r7, #1
40018b0c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018b10:	e1570006 	cmp	r7, r6
40018b14:	bafffff5 	blt	40018af0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018b18:	e58d8010 	str	r8, [sp, #16]
40018b1c:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018b20:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018b24:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018b28:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018b2c:	e28d1010 	add	r1, sp, #16
40018b30:	ebfff090 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40018b34:	e284001c 	add	r0, r4, #28
40018b38:	e0800086 	add	r0, r0, r6, lsl #1
40018b3c:	e1d000b0 	ldrh	r0, [r0]
40018b40:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018b44:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018b48:	e3a07000 	mov	r7, #0
40018b4c:	ea00003a 	b	40018c3c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018b50:	e284102c 	add	r1, r4, #44	; 0x2c
40018b54:	e0811087 	add	r1, r1, r7, lsl #1
40018b58:	e1d100b0 	ldrh	r0, [r1]
40018b5c:	e28d1010 	add	r1, sp, #16
40018b60:	ebffefda 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40018b64:	e3a00000 	mov	r0, #0
40018b68:	e58d0014 	str	r0, [sp, #20]
40018b6c:	e58d0018 	str	r0, [sp, #24]
40018b70:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018b74:	e3c00080 	bic	r0, r0, #128	; 0x80
40018b78:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018b7c:	e59d001c 	ldr	r0, [sp, #28]
40018b80:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018b84:	e58d001c 	str	r0, [sp, #28]
40018b88:	e59d001c 	ldr	r0, [sp, #28]
40018b8c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018b90:	e58d001c 	str	r0, [sp, #28]
40018b94:	e59d001c 	ldr	r0, [sp, #28]
40018b98:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018b9c:	e58d001c 	str	r0, [sp, #28]
40018ba0:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018ba4:	e3500001 	cmp	r0, #1
40018ba8:	1a000003 	bne	40018bbc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018bac:	e59d001c 	ldr	r0, [sp, #28]
40018bb0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018bb4:	e58d001c 	str	r0, [sp, #28]
40018bb8:	ea000002 	b	40018bc8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018bbc:	e59d001c 	ldr	r0, [sp, #28]
40018bc0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018bc4:	e58d001c 	str	r0, [sp, #28]
40018bc8:	e3e00000 	mvn	r0, #0
40018bcc:	e58d0020 	str	r0, [sp, #32]
40018bd0:	e1570006 	cmp	r7, r6
40018bd4:	ba000004 	blt	40018bec <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40018bd8:	e284001c 	add	r0, r4, #28
40018bdc:	e0800087 	add	r0, r0, r7, lsl #1
40018be0:	e1d000b0 	ldrh	r0, [r0]
40018be4:	e58d0010 	str	r0, [sp, #16]
40018be8:	ea000008 	b	40018c10 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40018bec:	e284101c 	add	r1, r4, #28
40018bf0:	e0811087 	add	r1, r1, r7, lsl #1
40018bf4:	e1d100b0 	ldrh	r0, [r1]
40018bf8:	e1a0100d 	mov	r1, sp
40018bfc:	eb002611 	bl	40022448 <CyU3PDmaDscrGetConfig>
40018c00:	e59d0008 	ldr	r0, [sp, #8]
40018c04:	e1a00800 	lsl	r0, r0, #16
40018c08:	e1a00820 	lsr	r0, r0, #16
40018c0c:	e58d0010 	str	r0, [sp, #16]
40018c10:	e2841046 	add	r1, r4, #70	; 0x46
40018c14:	e0811087 	add	r1, r1, r7, lsl #1
40018c18:	e59d0010 	ldr	r0, [sp, #16]
40018c1c:	e1c100b0 	strh	r0, [r1]
40018c20:	e284102c 	add	r1, r4, #44	; 0x2c
40018c24:	e0811087 	add	r1, r1, r7, lsl #1
40018c28:	e1d100b0 	ldrh	r0, [r1]
40018c2c:	e28d1010 	add	r1, sp, #16
40018c30:	ebfff050 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40018c34:	e2870001 	add	r0, r7, #1
40018c38:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c3c:	e1d400ba 	ldrh	r0, [r4, #10]
40018c40:	e1500007 	cmp	r0, r7
40018c44:	caffffc1 	bgt	40018b50 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40018c48:	e28dd028 	add	sp, sp, #40	; 0x28
40018c4c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018c50:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40018c54 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40018c54:	e92d4030 	push	{r4, r5, lr}
40018c58:	e24dd01c 	sub	sp, sp, #28
40018c5c:	e1a04000 	mov	r4, r0
40018c60:	e3a05000 	mov	r5, #0
40018c64:	ea000031 	b	40018d30 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40018c68:	e2840014 	add	r0, r4, #20
40018c6c:	e0800085 	add	r0, r0, r5, lsl #1
40018c70:	e1d000b0 	ldrh	r0, [r0]
40018c74:	e284103e 	add	r1, r4, #62	; 0x3e
40018c78:	e0811085 	add	r1, r1, r5, lsl #1
40018c7c:	e1c100b0 	strh	r0, [r1]
40018c80:	e2841024 	add	r1, r4, #36	; 0x24
40018c84:	e0811085 	add	r1, r1, r5, lsl #1
40018c88:	e1d100b0 	ldrh	r0, [r1]
40018c8c:	ebffef77 	bl	40014a70 <CyU3PDmaSocketDisable>
40018c90:	e2841024 	add	r1, r4, #36	; 0x24
40018c94:	e0811085 	add	r1, r1, r5, lsl #1
40018c98:	e1d100b0 	ldrh	r0, [r1]
40018c9c:	e28d1004 	add	r1, sp, #4
40018ca0:	ebffef8a 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40018ca4:	e2840014 	add	r0, r4, #20
40018ca8:	e0800085 	add	r0, r0, r5, lsl #1
40018cac:	e1d000b0 	ldrh	r0, [r0]
40018cb0:	e58d0004 	str	r0, [sp, #4]
40018cb4:	e3a00000 	mov	r0, #0
40018cb8:	e58d0008 	str	r0, [sp, #8]
40018cbc:	e58d000c 	str	r0, [sp, #12]
40018cc0:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018cc4:	e58d0010 	str	r0, [sp, #16]
40018cc8:	e2841024 	add	r1, r4, #36	; 0x24
40018ccc:	e0811085 	add	r1, r1, r5, lsl #1
40018cd0:	e1d100b0 	ldrh	r0, [r1]
40018cd4:	eb0006a3 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
40018cd8:	e3500000 	cmp	r0, #0
40018cdc:	0a000002 	beq	40018cec <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40018ce0:	e59d0010 	ldr	r0, [sp, #16]
40018ce4:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018ce8:	e58d0010 	str	r0, [sp, #16]
40018cec:	e3e00000 	mvn	r0, #0
40018cf0:	e58d0014 	str	r0, [sp, #20]
40018cf4:	e1d400b4 	ldrh	r0, [r4, #4]
40018cf8:	e3500005 	cmp	r0, #5
40018cfc:	1a000002 	bne	40018d0c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40018d00:	e3a00040 	mov	r0, #64	; 0x40
40018d04:	e58d0018 	str	r0, [sp, #24]
40018d08:	ea000001 	b	40018d14 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40018d0c:	e3a00041 	mov	r0, #65	; 0x41
40018d10:	e58d0018 	str	r0, [sp, #24]
40018d14:	e2841024 	add	r1, r4, #36	; 0x24
40018d18:	e0811085 	add	r1, r1, r5, lsl #1
40018d1c:	e1d100b0 	ldrh	r0, [r1]
40018d20:	e28d1004 	add	r1, sp, #4
40018d24:	ebfff013 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40018d28:	e2850001 	add	r0, r5, #1
40018d2c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018d30:	e1d400ba 	ldrh	r0, [r4, #10]
40018d34:	e1500005 	cmp	r0, r5
40018d38:	caffffca 	bgt	40018c68 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40018d3c:	e1d401bc 	ldrh	r0, [r4, #28]
40018d40:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018d44:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d48:	ebffef48 	bl	40014a70 <CyU3PDmaSocketDisable>
40018d4c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d50:	e28d1004 	add	r1, sp, #4
40018d54:	ebffef5d 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40018d58:	e1d401bc 	ldrh	r0, [r4, #28]
40018d5c:	e58d0004 	str	r0, [sp, #4]
40018d60:	e3a00000 	mov	r0, #0
40018d64:	e58d0008 	str	r0, [sp, #8]
40018d68:	e58d000c 	str	r0, [sp, #12]
40018d6c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018d70:	e58d0010 	str	r0, [sp, #16]
40018d74:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d78:	eb00067a 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
40018d7c:	e3500000 	cmp	r0, #0
40018d80:	0a000002 	beq	40018d90 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40018d84:	e59d0010 	ldr	r0, [sp, #16]
40018d88:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018d8c:	e58d0010 	str	r0, [sp, #16]
40018d90:	e3e00000 	mvn	r0, #0
40018d94:	e58d0014 	str	r0, [sp, #20]
40018d98:	e1d400b4 	ldrh	r0, [r4, #4]
40018d9c:	e3500005 	cmp	r0, #5
40018da0:	1a000002 	bne	40018db0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40018da4:	e3a000c0 	mov	r0, #192	; 0xc0
40018da8:	e58d0018 	str	r0, [sp, #24]
40018dac:	ea000001 	b	40018db8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40018db0:	e3a000c2 	mov	r0, #194	; 0xc2
40018db4:	e58d0018 	str	r0, [sp, #24]
40018db8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018dbc:	e28d1004 	add	r1, sp, #4
40018dc0:	ebffefec 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40018dc4:	e3a00000 	mov	r0, #0
40018dc8:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40018dcc:	e28dd01c 	add	sp, sp, #28
40018dd0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40018dd4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40018dd4:	e92d4030 	push	{r4, r5, lr}
40018dd8:	e24dd01c 	sub	sp, sp, #28
40018ddc:	e1a04000 	mov	r4, r0
40018de0:	e1d401b4 	ldrh	r0, [r4, #20]
40018de4:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018de8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018dec:	ebffef1f 	bl	40014a70 <CyU3PDmaSocketDisable>
40018df0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018df4:	e28d1004 	add	r1, sp, #4
40018df8:	ebffef34 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40018dfc:	e1d401b4 	ldrh	r0, [r4, #20]
40018e00:	e58d0004 	str	r0, [sp, #4]
40018e04:	e3a00000 	mov	r0, #0
40018e08:	e58d0008 	str	r0, [sp, #8]
40018e0c:	e58d000c 	str	r0, [sp, #12]
40018e10:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018e14:	e58d0010 	str	r0, [sp, #16]
40018e18:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e1c:	eb000651 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
40018e20:	e3500000 	cmp	r0, #0
40018e24:	0a000002 	beq	40018e34 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40018e28:	e59d0010 	ldr	r0, [sp, #16]
40018e2c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018e30:	e58d0010 	str	r0, [sp, #16]
40018e34:	e3e00000 	mvn	r0, #0
40018e38:	e58d0014 	str	r0, [sp, #20]
40018e3c:	e1d400b4 	ldrh	r0, [r4, #4]
40018e40:	e3500006 	cmp	r0, #6
40018e44:	1a000002 	bne	40018e54 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40018e48:	e3a000c0 	mov	r0, #192	; 0xc0
40018e4c:	e58d0018 	str	r0, [sp, #24]
40018e50:	ea000001 	b	40018e5c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40018e54:	e3a000c1 	mov	r0, #193	; 0xc1
40018e58:	e58d0018 	str	r0, [sp, #24]
40018e5c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e60:	e28d1004 	add	r1, sp, #4
40018e64:	ebffefc3 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40018e68:	e3a05000 	mov	r5, #0
40018e6c:	ea000035 	b	40018f48 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
40018e70:	e284001c 	add	r0, r4, #28
40018e74:	e0800085 	add	r0, r0, r5, lsl #1
40018e78:	e1d000b0 	ldrh	r0, [r0]
40018e7c:	e2841046 	add	r1, r4, #70	; 0x46
40018e80:	e0811085 	add	r1, r1, r5, lsl #1
40018e84:	e1c100b0 	strh	r0, [r1]
40018e88:	e284102c 	add	r1, r4, #44	; 0x2c
40018e8c:	e0811085 	add	r1, r1, r5, lsl #1
40018e90:	e1d100b0 	ldrh	r0, [r1]
40018e94:	ebffeef5 	bl	40014a70 <CyU3PDmaSocketDisable>
40018e98:	e284102c 	add	r1, r4, #44	; 0x2c
40018e9c:	e0811085 	add	r1, r1, r5, lsl #1
40018ea0:	e1d100b0 	ldrh	r0, [r1]
40018ea4:	e28d1004 	add	r1, sp, #4
40018ea8:	ebffef08 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40018eac:	e284001c 	add	r0, r4, #28
40018eb0:	e0800085 	add	r0, r0, r5, lsl #1
40018eb4:	e1d000b0 	ldrh	r0, [r0]
40018eb8:	e58d0004 	str	r0, [sp, #4]
40018ebc:	e3a00000 	mov	r0, #0
40018ec0:	e58d0008 	str	r0, [sp, #8]
40018ec4:	e58d000c 	str	r0, [sp, #12]
40018ec8:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018ecc:	e58d0010 	str	r0, [sp, #16]
40018ed0:	e284102c 	add	r1, r4, #44	; 0x2c
40018ed4:	e0811085 	add	r1, r1, r5, lsl #1
40018ed8:	e1d100b0 	ldrh	r0, [r1]
40018edc:	eb000621 	bl	4001a768 <CyU3PDmaIsSockAvlEnReqd>
40018ee0:	e3500000 	cmp	r0, #0
40018ee4:	0a000002 	beq	40018ef4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40018ee8:	e59d0010 	ldr	r0, [sp, #16]
40018eec:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018ef0:	e58d0010 	str	r0, [sp, #16]
40018ef4:	e3e00000 	mvn	r0, #0
40018ef8:	e58d0014 	str	r0, [sp, #20]
40018efc:	e1d400b4 	ldrh	r0, [r4, #4]
40018f00:	e3500006 	cmp	r0, #6
40018f04:	1a000002 	bne	40018f14 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40018f08:	e3a00040 	mov	r0, #64	; 0x40
40018f0c:	e58d0018 	str	r0, [sp, #24]
40018f10:	ea000001 	b	40018f1c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40018f14:	e3a00042 	mov	r0, #66	; 0x42
40018f18:	e58d0018 	str	r0, [sp, #24]
40018f1c:	e284102c 	add	r1, r4, #44	; 0x2c
40018f20:	e0811085 	add	r1, r1, r5, lsl #1
40018f24:	e1d100b0 	ldrh	r0, [r1]
40018f28:	e28d1004 	add	r1, sp, #4
40018f2c:	ebffef91 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40018f30:	e3a00000 	mov	r0, #0
40018f34:	e2841064 	add	r1, r4, #100	; 0x64
40018f38:	e0811085 	add	r1, r1, r5, lsl #1
40018f3c:	e1c100b0 	strh	r0, [r1]
40018f40:	e2850001 	add	r0, r5, #1
40018f44:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018f48:	e1d400ba 	ldrh	r0, [r4, #10]
40018f4c:	e1500005 	cmp	r0, r5
40018f50:	caffffc6 	bgt	40018e70 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40018f54:	e28dd01c 	add	sp, sp, #28
40018f58:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

40018f5c <CyU3PDmaMultiChannelSetWrapUp>:
40018f5c:	e92d4070 	push	{r4, r5, r6, lr}
40018f60:	e1a04000 	mov	r4, r0
40018f64:	e1a05001 	mov	r5, r1
40018f68:	e3e01000 	mvn	r1, #0
40018f6c:	e1a00004 	mov	r0, r4
40018f70:	ebfff879 	bl	4001715c <CyU3PDmaMultiChannelAcquireLock>
40018f74:	e1a06000 	mov	r6, r0
40018f78:	e3560000 	cmp	r6, #0
40018f7c:	0a000001 	beq	40018f88 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
40018f80:	e1a00006 	mov	r0, r6
40018f84:	e8bd8070 	pop	{r4, r5, r6, pc}
40018f88:	e5940000 	ldr	r0, [r4]
40018f8c:	e3500004 	cmp	r0, #4
40018f90:	0a000003 	beq	40018fa4 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018f94:	e5940000 	ldr	r0, [r4]
40018f98:	e3500002 	cmp	r0, #2
40018f9c:	0a000000 	beq	40018fa4 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018fa0:	e3a06047 	mov	r6, #71	; 0x47
40018fa4:	e1d400b4 	ldrh	r0, [r4, #4]
40018fa8:	e3500006 	cmp	r0, #6
40018fac:	0a000005 	beq	40018fc8 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40018fb0:	e1d400b4 	ldrh	r0, [r4, #4]
40018fb4:	e3500008 	cmp	r0, #8
40018fb8:	0a000002 	beq	40018fc8 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40018fbc:	e1d400b4 	ldrh	r0, [r4, #4]
40018fc0:	e3500009 	cmp	r0, #9
40018fc4:	1a000003 	bne	40018fd8 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
40018fc8:	e3550000 	cmp	r5, #0
40018fcc:	0a000005 	beq	40018fe8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fd0:	e3a06040 	mov	r6, #64	; 0x40
40018fd4:	ea000003 	b	40018fe8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fd8:	e1d400ba 	ldrh	r0, [r4, #10]
40018fdc:	e1500005 	cmp	r0, r5
40018fe0:	ca000000 	bgt	40018fe8 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fe4:	e3a06040 	mov	r6, #64	; 0x40
40018fe8:	e3560000 	cmp	r6, #0
40018fec:	1a000003 	bne	40019000 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
40018ff0:	e2841024 	add	r1, r4, #36	; 0x24
40018ff4:	e0811085 	add	r1, r1, r5, lsl #1
40018ff8:	e1d100b0 	ldrh	r0, [r1]
40018ffc:	ebffef88 	bl	40014e24 <CyU3PDmaSocketSetWrapUp>
40019000:	e2840078 	add	r0, r4, #120	; 0x78
40019004:	ebffc41f 	bl	4000a088 <_txe_mutex_put>
40019008:	e1a00006 	mov	r0, r6
4001900c:	eaffffdc 	b	40018f84 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40019010 <CyU3PDmaApplicationDefine>:
40019010:	e92d4010 	push	{r4, lr}
40019014:	e24dd020 	sub	sp, sp, #32
40019018:	eb000051 	bl	40019164 <CyU3PDmaInit>
4001901c:	e3a02028 	mov	r2, #40	; 0x28
40019020:	e3a01000 	mov	r1, #0
40019024:	e59f007c 	ldr	r0, [pc, #124]	; 400190a8 <CyU3PDmaApplicationDefine+0x98>
40019028:	ebffc2a9 	bl	40009ad4 <_txe_event_flags_create>
4001902c:	e3a00c02 	mov	r0, #512	; 0x200
40019030:	ebffa98f 	bl	40003674 <CyU3PMemAlloc>
40019034:	e1a04000 	mov	r4, r0
40019038:	e3a0303c 	mov	r3, #60	; 0x3c
4001903c:	e3a02c02 	mov	r2, #512	; 0x200
40019040:	e1cd20f0 	strd	r2, [sp]
40019044:	e1a03004 	mov	r3, r4
40019048:	e3a02004 	mov	r2, #4
4001904c:	e3a01000 	mov	r1, #0
40019050:	e59f0054 	ldr	r0, [pc, #84]	; 400190ac <CyU3PDmaApplicationDefine+0x9c>
40019054:	ebffc433 	bl	4000a128 <_txe_queue_create>
40019058:	e3a00b01 	mov	r0, #1024	; 0x400
4001905c:	ebffa984 	bl	40003674 <CyU3PMemAlloc>
40019060:	e1a04000 	mov	r4, r0
40019064:	e3a030a8 	mov	r3, #168	; 0xa8
40019068:	e3a02001 	mov	r2, #1
4001906c:	e3a01000 	mov	r1, #0
40019070:	e3a00002 	mov	r0, #2
40019074:	e28dc00c 	add	ip, sp, #12
40019078:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001907c:	e3a02b01 	mov	r2, #1024	; 0x400
40019080:	e1a03001 	mov	r3, r1
40019084:	e58d2004 	str	r2, [sp, #4]
40019088:	e59f2020 	ldr	r2, [pc, #32]	; 400190b0 <CyU3PDmaApplicationDefine+0xa0>
4001908c:	e28f1020 	add	r1, pc, #32
40019090:	e58d0008 	str	r0, [sp, #8]
40019094:	e59f0028 	ldr	r0, [pc, #40]	; 400190c4 <CyU3PDmaApplicationDefine+0xb4>
40019098:	e58d4000 	str	r4, [sp]
4001909c:	ebffc507 	bl	4000a4c0 <_txe_thread_create>
400190a0:	e28dd020 	add	sp, sp, #32
400190a4:	e8bd8010 	pop	{r4, pc}
400190a8:	40031904 	.word	0x40031904
400190ac:	4003192c 	.word	0x4003192c
400190b0:	4001a914 	.word	0x4001a914
400190b4:	445f3130 	.word	0x445f3130
400190b8:	545f414d 	.word	0x545f414d
400190bc:	41455248 	.word	0x41455248
400190c0:	00000044 	.word	0x00000044
400190c4:	4003185c 	.word	0x4003185c

Disassembly of section i.CyU3PDmaChannelHandleError:

400190c8 <CyU3PDmaChannelHandleError>:
400190c8:	e92d4010 	push	{r4, lr}
400190cc:	e1a04000 	mov	r4, r0
400190d0:	e3e01000 	mvn	r1, #0
400190d4:	e284003c 	add	r0, r4, #60	; 0x3c
400190d8:	ebffc3b5 	bl	40009fb4 <_txe_mutex_get>
400190dc:	e1d400b4 	ldrh	r0, [r4, #4]
400190e0:	e3500004 	cmp	r0, #4
400190e4:	0a000001 	beq	400190f0 <CyU3PDmaChannelHandleError+0x28>
400190e8:	e1d401b0 	ldrh	r0, [r4, #16]
400190ec:	ebffee5f 	bl	40014a70 <CyU3PDmaSocketDisable>
400190f0:	e1d400b4 	ldrh	r0, [r4, #4]
400190f4:	e3500003 	cmp	r0, #3
400190f8:	0a000001 	beq	40019104 <CyU3PDmaChannelHandleError+0x3c>
400190fc:	e1d401b2 	ldrh	r0, [r4, #18]
40019100:	ebffee5a 	bl	40014a70 <CyU3PDmaSocketDisable>
40019104:	e3a02002 	mov	r2, #2
40019108:	e3e01007 	mvn	r1, #7
4001910c:	e2840074 	add	r0, r4, #116	; 0x74
40019110:	ebffc30f 	bl	40009d54 <_txe_event_flags_set>
40019114:	e3a02000 	mov	r2, #0
40019118:	e3a01040 	mov	r1, #64	; 0x40
4001911c:	e2840074 	add	r0, r4, #116	; 0x74
40019120:	ebffc30b 	bl	40009d54 <_txe_event_flags_set>
40019124:	e3a00005 	mov	r0, #5
40019128:	e5840000 	str	r0, [r4]
4001912c:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40019130:	e3500000 	cmp	r0, #0
40019134:	0a000007 	beq	40019158 <CyU3PDmaChannelHandleError+0x90>
40019138:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4001913c:	e3100040 	tst	r0, #64	; 0x40
40019140:	0a000004 	beq	40019158 <CyU3PDmaChannelHandleError+0x90>
40019144:	e3a02000 	mov	r2, #0
40019148:	e3a01040 	mov	r1, #64	; 0x40
4001914c:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40019150:	e1a00004 	mov	r0, r4
40019154:	e12fff33 	blx	r3
40019158:	e284003c 	add	r0, r4, #60	; 0x3c
4001915c:	ebffc3c9 	bl	4000a088 <_txe_mutex_put>
40019160:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

40019164 <CyU3PDmaInit>:
40019164:	e92d4010 	push	{r4, lr}
40019168:	e3a02020 	mov	r2, #32
4001916c:	e3a01000 	mov	r1, #0
40019170:	e59f006c 	ldr	r0, [pc, #108]	; 400191e4 <CyU3PDmaInit+0x80>
40019174:	ebffa94f 	bl	400036b8 <CyU3PMemSet>
40019178:	e3a02080 	mov	r2, #128	; 0x80
4001917c:	e3a01000 	mov	r1, #0
40019180:	e59f0060 	ldr	r0, [pc, #96]	; 400191e8 <CyU3PDmaInit+0x84>
40019184:	ebffa94b 	bl	400036b8 <CyU3PMemSet>
40019188:	e3a02020 	mov	r2, #32
4001918c:	e3a01000 	mov	r1, #0
40019190:	e59f0054 	ldr	r0, [pc, #84]	; 400191ec <CyU3PDmaInit+0x88>
40019194:	ebffa947 	bl	400036b8 <CyU3PMemSet>
40019198:	e3a02040 	mov	r2, #64	; 0x40
4001919c:	e3a01000 	mov	r1, #0
400191a0:	e59f0048 	ldr	r0, [pc, #72]	; 400191f0 <CyU3PDmaInit+0x8c>
400191a4:	ebffa943 	bl	400036b8 <CyU3PMemSet>
400191a8:	e3a02040 	mov	r2, #64	; 0x40
400191ac:	e3a01000 	mov	r1, #0
400191b0:	e59f003c 	ldr	r0, [pc, #60]	; 400191f4 <CyU3PDmaInit+0x90>
400191b4:	ebffa93f 	bl	400036b8 <CyU3PMemSet>
400191b8:	e3a00000 	mov	r0, #0
400191bc:	e59f1034 	ldr	r1, [pc, #52]	; 400191f8 <CyU3PDmaInit+0x94>
400191c0:	e5810000 	str	r0, [r1]
400191c4:	eb002463 	bl	40022358 <CyU3PDmaDscrListCreate>
400191c8:	ebffaa7b 	bl	40003bbc <CyU3PDmaBufferInit>
400191cc:	e3a00000 	mov	r0, #0
400191d0:	e59f1024 	ldr	r1, [pc, #36]	; 400191fc <CyU3PDmaInit+0x98>
400191d4:	e1c100b0 	strh	r0, [r1]
400191d8:	e59f1020 	ldr	r1, [pc, #32]	; 40019200 <CyU3PDmaInit+0x9c>
400191dc:	e1c100b0 	strh	r0, [r1]
400191e0:	e8bd8010 	pop	{r4, pc}
400191e4:	4003171c 	.word	0x4003171c
400191e8:	4003173c 	.word	0x4003173c
400191ec:	400317bc 	.word	0x400317bc
400191f0:	400317dc 	.word	0x400317dc
400191f4:	4003181c 	.word	0x4003181c
400191f8:	40030cd8 	.word	0x40030cd8
400191fc:	40030d00 	.word	0x40030d00
40019200:	40030d02 	.word	0x40030d02

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

40019204 <CyU3PDmaIntHandler_TypeAuto>:
40019204:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019208:	e24dd01c 	sub	sp, sp, #28
4001920c:	e1a04000 	mov	r4, r0
40019210:	e5949004 	ldr	r9, [r4, #4]
40019214:	e5948008 	ldr	r8, [r4, #8]
40019218:	e3180040 	tst	r8, #64	; 0x40
4001921c:	0a000003 	beq	40019230 <CyU3PDmaIntHandler_TypeAuto+0x2c>
40019220:	e1a00009 	mov	r0, r9
40019224:	ebffffa7 	bl	400190c8 <CyU3PDmaChannelHandleError>
40019228:	e28dd01c 	add	sp, sp, #28
4001922c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019230:	e3e01000 	mvn	r1, #0
40019234:	e289003c 	add	r0, r9, #60	; 0x3c
40019238:	ebffc35d 	bl	40009fb4 <_txe_mutex_get>
4001923c:	e1d901b2 	ldrh	r0, [r9, #18]
40019240:	e5941000 	ldr	r1, [r4]
40019244:	e1500821 	cmp	r0, r1, lsr #16
40019248:	1a00004b 	bne	4001937c <CyU3PDmaIntHandler_TypeAuto+0x178>
4001924c:	e1d901b2 	ldrh	r0, [r9, #18]
40019250:	e3a0103f 	mov	r1, #63	; 0x3f
40019254:	e0015440 	and	r5, r1, r0, asr #8
40019258:	e1d901b2 	ldrh	r0, [r9, #18]
4001925c:	e20060ff 	and	r6, r0, #255	; 0xff
40019260:	e594000c 	ldr	r0, [r4, #12]
40019264:	e1a07800 	lsl	r7, r0, #16
40019268:	e1a07827 	lsr	r7, r7, #16
4001926c:	e3180080 	tst	r8, #128	; 0x80
40019270:	0a000012 	beq	400192c0 <CyU3PDmaIntHandler_TypeAuto+0xbc>
40019274:	e3a00001 	mov	r0, #1
40019278:	e5890000 	str	r0, [r9]
4001927c:	e3a02000 	mov	r2, #0
40019280:	e3a01001 	mov	r1, #1
40019284:	e2890074 	add	r0, r9, #116	; 0x74
40019288:	ebffc2b1 	bl	40009d54 <_txe_event_flags_set>
4001928c:	ebffe599 	bl	400128f8 <CyU3PSysBarrierSync>
40019290:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019294:	e3500000 	cmp	r0, #0
40019298:	0a000028 	beq	40019340 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001929c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400192a0:	e3100001 	tst	r0, #1
400192a4:	0a000025 	beq	40019340 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192a8:	e3a02000 	mov	r2, #0
400192ac:	e3a01001 	mov	r1, #1
400192b0:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400192b4:	e1a00009 	mov	r0, r9
400192b8:	e12fff33 	blx	r3
400192bc:	ea00001f 	b	40019340 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192c0:	e3180002 	tst	r8, #2
400192c4:	0a00001d 	beq	40019340 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192c8:	e5990000 	ldr	r0, [r9]
400192cc:	e3500003 	cmp	r0, #3
400192d0:	1a00001a 	bne	40019340 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192d4:	e3a00001 	mov	r0, #1
400192d8:	e5890000 	str	r0, [r9]
400192dc:	e59f0284 	ldr	r0, [pc, #644]	; 40019568 <CyU3PDmaIntHandler_TypeAuto+0x364>
400192e0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400192e4:	e0800386 	add	r0, r0, r6, lsl #7
400192e8:	e5900014 	ldr	r0, [r0, #20]
400192ec:	e3c00002 	bic	r0, r0, #2
400192f0:	e59f1270 	ldr	r1, [pc, #624]	; 40019568 <CyU3PDmaIntHandler_TypeAuto+0x364>
400192f4:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400192f8:	e0811386 	add	r1, r1, r6, lsl #7
400192fc:	e5810014 	str	r0, [r1, #20]
40019300:	e3a02000 	mov	r2, #0
40019304:	e3a01002 	mov	r1, #2
40019308:	e2890074 	add	r0, r9, #116	; 0x74
4001930c:	ebffc290 	bl	40009d54 <_txe_event_flags_set>
40019310:	ebffe578 	bl	400128f8 <CyU3PSysBarrierSync>
40019314:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019318:	e3500000 	cmp	r0, #0
4001931c:	0a000007 	beq	40019340 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019320:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019324:	e3100002 	tst	r0, #2
40019328:	0a000004 	beq	40019340 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001932c:	e3a02000 	mov	r2, #0
40019330:	e3a01002 	mov	r1, #2
40019334:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019338:	e1a00009 	mov	r0, r9
4001933c:	e12fff33 	blx	r3
40019340:	e3180e12 	tst	r8, #288	; 0x120
40019344:	0a000084 	beq	4001955c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019348:	ebffe56a 	bl	400128f8 <CyU3PSysBarrierSync>
4001934c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019350:	e3500000 	cmp	r0, #0
40019354:	0a000080 	beq	4001955c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019358:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001935c:	e3100c01 	tst	r0, #256	; 0x100
40019360:	0a00007d 	beq	4001955c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019364:	e3a02000 	mov	r2, #0
40019368:	e3a01c01 	mov	r1, #256	; 0x100
4001936c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019370:	e1a00009 	mov	r0, r9
40019374:	e12fff33 	blx	r3
40019378:	ea000077 	b	4001955c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001937c:	e1d901b0 	ldrh	r0, [r9, #16]
40019380:	e3a0103f 	mov	r1, #63	; 0x3f
40019384:	e0015440 	and	r5, r1, r0, asr #8
40019388:	e1d901b0 	ldrh	r0, [r9, #16]
4001938c:	e20060ff 	and	r6, r0, #255	; 0xff
40019390:	e594000c 	ldr	r0, [r4, #12]
40019394:	e1a07800 	lsl	r7, r0, #16
40019398:	e1a07827 	lsr	r7, r7, #16
4001939c:	e3180001 	tst	r8, #1
400193a0:	0a00005f 	beq	40019524 <CyU3PDmaIntHandler_TypeAuto+0x320>
400193a4:	e5990000 	ldr	r0, [r9]
400193a8:	e3500004 	cmp	r0, #4
400193ac:	0a00002b 	beq	40019460 <CyU3PDmaIntHandler_TypeAuto+0x25c>
400193b0:	e1a00000 	nop			; (mov r0, r0)
400193b4:	e1d901b6 	ldrh	r0, [r9, #22]
400193b8:	e28d100c 	add	r1, sp, #12
400193bc:	eb002421 	bl	40022448 <CyU3PDmaDscrGetConfig>
400193c0:	e59d000c 	ldr	r0, [sp, #12]
400193c4:	e58d0000 	str	r0, [sp]
400193c8:	e59d0018 	ldr	r0, [sp, #24]
400193cc:	e59f1198 	ldr	r1, [pc, #408]	; 4001956c <CyU3PDmaIntHandler_TypeAuto+0x368>
400193d0:	e0010820 	and	r0, r1, r0, lsr #16
400193d4:	e1cd00b4 	strh	r0, [sp, #4]
400193d8:	e241100f 	sub	r1, r1, #15
400193dc:	e59d0018 	ldr	r0, [sp, #24]
400193e0:	e0000001 	and	r0, r0, r1
400193e4:	e1cd00b6 	strh	r0, [sp, #6]
400193e8:	e59d0018 	ldr	r0, [sp, #24]
400193ec:	e200000f 	and	r0, r0, #15
400193f0:	e1cd00b8 	strh	r0, [sp, #8]
400193f4:	e1811241 	orr	r1, r1, r1, asr #4
400193f8:	e59d0014 	ldr	r0, [sp, #20]
400193fc:	e0010820 	and	r0, r1, r0, lsr #16
40019400:	e1c901b6 	strh	r0, [r9, #22]
40019404:	ebffe53b 	bl	400128f8 <CyU3PSysBarrierSync>
40019408:	e5990038 	ldr	r0, [r9, #56]	; 0x38
4001940c:	e3500000 	cmp	r0, #0
40019410:	0a000002 	beq	40019420 <CyU3PDmaIntHandler_TypeAuto+0x21c>
40019414:	e1dd10b6 	ldrh	r1, [sp, #6]
40019418:	e59d0000 	ldr	r0, [sp]
4001941c:	ebffe2dc 	bl	40011f94 <CyU3PSysFlushDRegion>
40019420:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019424:	e3500000 	cmp	r0, #0
40019428:	0a000007 	beq	4001944c <CyU3PDmaIntHandler_TypeAuto+0x248>
4001942c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019430:	e3100008 	tst	r0, #8
40019434:	0a000004 	beq	4001944c <CyU3PDmaIntHandler_TypeAuto+0x248>
40019438:	e1a0200d 	mov	r2, sp
4001943c:	e3a01008 	mov	r1, #8
40019440:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019444:	e1a00009 	mov	r0, r9
40019448:	e12fff33 	blx	r3
4001944c:	e1d901b6 	ldrh	r0, [r9, #22]
40019450:	e1500007 	cmp	r0, r7
40019454:	1affffd6 	bne	400193b4 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
40019458:	e1c971be 	strh	r7, [r9, #30]
4001945c:	ea000030 	b	40019524 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019460:	e1d901b4 	ldrh	r0, [r9, #20]
40019464:	e28d100c 	add	r1, sp, #12
40019468:	eb0023f6 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001946c:	e59d000c 	ldr	r0, [sp, #12]
40019470:	e58d0000 	str	r0, [sp]
40019474:	e59d0018 	ldr	r0, [sp, #24]
40019478:	e59f10ec 	ldr	r1, [pc, #236]	; 4001956c <CyU3PDmaIntHandler_TypeAuto+0x368>
4001947c:	e0010820 	and	r0, r1, r0, lsr #16
40019480:	e1cd00b4 	strh	r0, [sp, #4]
40019484:	e241100f 	sub	r1, r1, #15
40019488:	e59d0018 	ldr	r0, [sp, #24]
4001948c:	e0000001 	and	r0, r0, r1
40019490:	e1cd00b6 	strh	r0, [sp, #6]
40019494:	e59d0018 	ldr	r0, [sp, #24]
40019498:	e200000f 	and	r0, r0, #15
4001949c:	e1cd00b8 	strh	r0, [sp, #8]
400194a0:	e3a00001 	mov	r0, #1
400194a4:	e5890000 	str	r0, [r9]
400194a8:	e59f00b8 	ldr	r0, [pc, #184]	; 40019568 <CyU3PDmaIntHandler_TypeAuto+0x364>
400194ac:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400194b0:	e0800386 	add	r0, r0, r6, lsl #7
400194b4:	e5900014 	ldr	r0, [r0, #20]
400194b8:	e3c00001 	bic	r0, r0, #1
400194bc:	e59f10a4 	ldr	r1, [pc, #164]	; 40019568 <CyU3PDmaIntHandler_TypeAuto+0x364>
400194c0:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400194c4:	e0811386 	add	r1, r1, r6, lsl #7
400194c8:	e5810014 	str	r0, [r1, #20]
400194cc:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400194d0:	e3500000 	cmp	r0, #0
400194d4:	0a000002 	beq	400194e4 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
400194d8:	e1dd10b6 	ldrh	r1, [sp, #6]
400194dc:	e59d0000 	ldr	r0, [sp]
400194e0:	ebffe2ab 	bl	40011f94 <CyU3PSysFlushDRegion>
400194e4:	e3a02000 	mov	r2, #0
400194e8:	e3a01004 	mov	r1, #4
400194ec:	e2890074 	add	r0, r9, #116	; 0x74
400194f0:	ebffc217 	bl	40009d54 <_txe_event_flags_set>
400194f4:	ebffe4ff 	bl	400128f8 <CyU3PSysBarrierSync>
400194f8:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400194fc:	e3500000 	cmp	r0, #0
40019500:	0a000007 	beq	40019524 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019504:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019508:	e3100004 	tst	r0, #4
4001950c:	0a000004 	beq	40019524 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019510:	e1a0200d 	mov	r2, sp
40019514:	e3a01004 	mov	r1, #4
40019518:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001951c:	e1a00009 	mov	r0, r9
40019520:	e12fff33 	blx	r3
40019524:	e3180020 	tst	r8, #32
40019528:	0a00000b 	beq	4001955c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001952c:	ebffe4f1 	bl	400128f8 <CyU3PSysBarrierSync>
40019530:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019534:	e3500000 	cmp	r0, #0
40019538:	0a000007 	beq	4001955c <CyU3PDmaIntHandler_TypeAuto+0x358>
4001953c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019540:	e3100080 	tst	r0, #128	; 0x80
40019544:	0a000004 	beq	4001955c <CyU3PDmaIntHandler_TypeAuto+0x358>
40019548:	e3a02000 	mov	r2, #0
4001954c:	e3a01080 	mov	r1, #128	; 0x80
40019550:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019554:	e1a00009 	mov	r0, r9
40019558:	e12fff33 	blx	r3
4001955c:	e289003c 	add	r0, r9, #60	; 0x3c
40019560:	ebffc2c8 	bl	4000a088 <_txe_mutex_put>
40019564:	eaffff2f 	b	40019228 <CyU3PDmaIntHandler_TypeAuto+0x24>
40019568:	40030cdc 	.word	0x40030cdc
4001956c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

40019570 <CyU3PDmaIntHandler_TypeManual>:
40019570:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40019574:	e24dd034 	sub	sp, sp, #52	; 0x34
40019578:	e1a04000 	mov	r4, r0
4001957c:	e5945004 	ldr	r5, [r4, #4]
40019580:	e5946008 	ldr	r6, [r4, #8]
40019584:	e3160040 	tst	r6, #64	; 0x40
40019588:	0a000003 	beq	4001959c <CyU3PDmaIntHandler_TypeManual+0x2c>
4001958c:	e1a00005 	mov	r0, r5
40019590:	ebfffecc 	bl	400190c8 <CyU3PDmaChannelHandleError>
40019594:	e28dd034 	add	sp, sp, #52	; 0x34
40019598:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001959c:	e3e01000 	mvn	r1, #0
400195a0:	e285003c 	add	r0, r5, #60	; 0x3c
400195a4:	ebffc282 	bl	40009fb4 <_txe_mutex_get>
400195a8:	e1d501b2 	ldrh	r0, [r5, #18]
400195ac:	e5941000 	ldr	r1, [r4]
400195b0:	e1500821 	cmp	r0, r1, lsr #16
400195b4:	1a0000d6 	bne	40019914 <CyU3PDmaIntHandler_TypeManual+0x3a4>
400195b8:	e594000c 	ldr	r0, [r4, #12]
400195bc:	e1a07800 	lsl	r7, r0, #16
400195c0:	e1a07827 	lsr	r7, r7, #16
400195c4:	e3160002 	tst	r6, #2
400195c8:	0a000060 	beq	40019750 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400195cc:	e5950000 	ldr	r0, [r5]
400195d0:	e3500003 	cmp	r0, #3
400195d4:	1a000013 	bne	40019628 <CyU3PDmaIntHandler_TypeManual+0xb8>
400195d8:	e3a00001 	mov	r0, #1
400195dc:	e5850000 	str	r0, [r5]
400195e0:	e3a02000 	mov	r2, #0
400195e4:	e3a01002 	mov	r1, #2
400195e8:	e2850074 	add	r0, r5, #116	; 0x74
400195ec:	ebffc1d8 	bl	40009d54 <_txe_event_flags_set>
400195f0:	e3c66080 	bic	r6, r6, #128	; 0x80
400195f4:	ebffe4bf 	bl	400128f8 <CyU3PSysBarrierSync>
400195f8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400195fc:	e3500000 	cmp	r0, #0
40019600:	0a000052 	beq	40019750 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019604:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019608:	e3100002 	tst	r0, #2
4001960c:	0a00004f 	beq	40019750 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019610:	e3a02000 	mov	r2, #0
40019614:	e3a01002 	mov	r1, #2
40019618:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
4001961c:	e1a00005 	mov	r0, r5
40019620:	e12fff33 	blx	r3
40019624:	ea000049 	b	40019750 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019628:	e1d500b4 	ldrh	r0, [r5, #4]
4001962c:	e3500002 	cmp	r0, #2
40019630:	1a000027 	bne	400196d4 <CyU3PDmaIntHandler_TypeManual+0x164>
40019634:	e1a00000 	nop			; (mov r0, r0)
40019638:	e1d501ba 	ldrh	r0, [r5, #26]
4001963c:	e28d1024 	add	r1, sp, #36	; 0x24
40019640:	eb002380 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019644:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019648:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019af8 <CyU3PDmaIntHandler_TypeManual+0x588>
4001964c:	e0000001 	and	r0, r0, r1
40019650:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019654:	e1d501ba 	ldrh	r0, [r5, #26]
40019658:	e28d1024 	add	r1, sp, #36	; 0x24
4001965c:	eb002394 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40019660:	e1d511ba 	ldrh	r1, [r5, #26]
40019664:	e1d501b0 	ldrh	r0, [r5, #16]
40019668:	e3a02000 	mov	r2, #0
4001966c:	ebffedaf 	bl	40014d30 <CyU3PDmaSocketSendEvent>
40019670:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019674:	e59f1480 	ldr	r1, [pc, #1152]	; 40019afc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019678:	e0010820 	and	r0, r1, r0, lsr #16
4001967c:	e1c501ba 	strh	r0, [r5, #26]
40019680:	e1d502b0 	ldrh	r0, [r5, #32]
40019684:	e28d1024 	add	r1, sp, #36	; 0x24
40019688:	eb00236e 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001968c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019690:	e1c502b0 	strh	r0, [r5, #32]
40019694:	ebffe497 	bl	400128f8 <CyU3PSysBarrierSync>
40019698:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
4001969c:	e3500000 	cmp	r0, #0
400196a0:	0a000007 	beq	400196c4 <CyU3PDmaIntHandler_TypeManual+0x154>
400196a4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400196a8:	e3100010 	tst	r0, #16
400196ac:	0a000004 	beq	400196c4 <CyU3PDmaIntHandler_TypeManual+0x154>
400196b0:	e3a02000 	mov	r2, #0
400196b4:	e3a01010 	mov	r1, #16
400196b8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400196bc:	e1a00005 	mov	r0, r5
400196c0:	e12fff33 	blx	r3
400196c4:	e1d502b0 	ldrh	r0, [r5, #32]
400196c8:	e1500007 	cmp	r0, r7
400196cc:	1affffd9 	bne	40019638 <CyU3PDmaIntHandler_TypeManual+0xc8>
400196d0:	ea00001e 	b	40019750 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400196d4:	e1a00000 	nop			; (mov r0, r0)
400196d8:	e1d501b8 	ldrh	r0, [r5, #24]
400196dc:	e28d1024 	add	r1, sp, #36	; 0x24
400196e0:	eb002358 	bl	40022448 <CyU3PDmaDscrGetConfig>
400196e4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400196e8:	e3100008 	tst	r0, #8
400196ec:	1a000003 	bne	40019700 <CyU3PDmaIntHandler_TypeManual+0x190>
400196f0:	e3a02000 	mov	r2, #0
400196f4:	e3a01010 	mov	r1, #16
400196f8:	e2850074 	add	r0, r5, #116	; 0x74
400196fc:	ebffc194 	bl	40009d54 <_txe_event_flags_set>
40019700:	e1d502b0 	ldrh	r0, [r5, #32]
40019704:	e28d1024 	add	r1, sp, #36	; 0x24
40019708:	eb00234e 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001970c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019710:	e1c502b0 	strh	r0, [r5, #32]
40019714:	ebffe477 	bl	400128f8 <CyU3PSysBarrierSync>
40019718:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
4001971c:	e3500000 	cmp	r0, #0
40019720:	0a000007 	beq	40019744 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019724:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019728:	e3100010 	tst	r0, #16
4001972c:	0a000004 	beq	40019744 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019730:	e3a02000 	mov	r2, #0
40019734:	e3a01010 	mov	r1, #16
40019738:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
4001973c:	e1a00005 	mov	r0, r5
40019740:	e12fff33 	blx	r3
40019744:	e1d502b0 	ldrh	r0, [r5, #32]
40019748:	e1500007 	cmp	r0, r7
4001974c:	1affffe1 	bne	400196d8 <CyU3PDmaIntHandler_TypeManual+0x168>
40019750:	e3160010 	tst	r6, #16
40019754:	0a000046 	beq	40019874 <CyU3PDmaIntHandler_TypeManual+0x304>
40019758:	e1d502b0 	ldrh	r0, [r5, #32]
4001975c:	e28d1024 	add	r1, sp, #36	; 0x24
40019760:	eb002338 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019764:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019768:	e3100001 	tst	r0, #1
4001976c:	0a000040 	beq	40019874 <CyU3PDmaIntHandler_TypeManual+0x304>
40019770:	e1d501b2 	ldrh	r0, [r5, #18]
40019774:	ebffecbd 	bl	40014a70 <CyU3PDmaSocketDisable>
40019778:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001977c:	e59f1374 	ldr	r1, [pc, #884]	; 40019af8 <CyU3PDmaIntHandler_TypeManual+0x588>
40019780:	e0000001 	and	r0, r0, r1
40019784:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019788:	e1d502b0 	ldrh	r0, [r5, #32]
4001978c:	e28d1024 	add	r1, sp, #36	; 0x24
40019790:	eb002347 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40019794:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019798:	e1c502b0 	strh	r0, [r5, #32]
4001979c:	e1d501b2 	ldrh	r0, [r5, #18]
400197a0:	e28d100c 	add	r1, sp, #12
400197a4:	ebffecc9 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
400197a8:	e59d0018 	ldr	r0, [sp, #24]
400197ac:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
400197b0:	e58d0018 	str	r0, [sp, #24]
400197b4:	e59d0018 	ldr	r0, [sp, #24]
400197b8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400197bc:	e58d0018 	str	r0, [sp, #24]
400197c0:	e3a00000 	mov	r0, #0
400197c4:	e58d001c 	str	r0, [sp, #28]
400197c8:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
400197cc:	e2400001 	sub	r0, r0, #1
400197d0:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
400197d4:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
400197d8:	e3500000 	cmp	r0, #0
400197dc:	1a000004 	bne	400197f4 <CyU3PDmaIntHandler_TypeManual+0x284>
400197e0:	e3a00010 	mov	r0, #16
400197e4:	e58d001c 	str	r0, [sp, #28]
400197e8:	e59d0020 	ldr	r0, [sp, #32]
400197ec:	e3c00010 	bic	r0, r0, #16
400197f0:	e58d0020 	str	r0, [sp, #32]
400197f4:	e1d502b0 	ldrh	r0, [r5, #32]
400197f8:	e58d000c 	str	r0, [sp, #12]
400197fc:	e1d501b2 	ldrh	r0, [r5, #18]
40019800:	e28d100c 	add	r1, sp, #12
40019804:	ebffed5b 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40019808:	e1d501ba 	ldrh	r0, [r5, #26]
4001980c:	e28d1024 	add	r1, sp, #36	; 0x24
40019810:	eb00230c 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019814:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019818:	e59f12d8 	ldr	r1, [pc, #728]	; 40019af8 <CyU3PDmaIntHandler_TypeManual+0x588>
4001981c:	e0000001 	and	r0, r0, r1
40019820:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019824:	e1d501ba 	ldrh	r0, [r5, #26]
40019828:	e28d1024 	add	r1, sp, #36	; 0x24
4001982c:	eb002320 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40019830:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019834:	e3500000 	cmp	r0, #0
40019838:	0a000004 	beq	40019850 <CyU3PDmaIntHandler_TypeManual+0x2e0>
4001983c:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019840:	e59f32b0 	ldr	r3, [pc, #688]	; 40019af8 <CyU3PDmaIntHandler_TypeManual+0x588>
40019844:	e0021003 	and	r1, r2, r3
40019848:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001984c:	ebffe1d0 	bl	40011f94 <CyU3PSysFlushDRegion>
40019850:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019854:	e59f12a0 	ldr	r1, [pc, #672]	; 40019afc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019858:	e0010820 	and	r0, r1, r0, lsr #16
4001985c:	e1c501ba 	strh	r0, [r5, #26]
40019860:	e1d511ba 	ldrh	r1, [r5, #26]
40019864:	e1d501b0 	ldrh	r0, [r5, #16]
40019868:	e3a02000 	mov	r2, #0
4001986c:	ebffed2f 	bl	40014d30 <CyU3PDmaSocketSendEvent>
40019870:	ebffe420 	bl	400128f8 <CyU3PSysBarrierSync>
40019874:	e3160080 	tst	r6, #128	; 0x80
40019878:	0a000016 	beq	400198d8 <CyU3PDmaIntHandler_TypeManual+0x368>
4001987c:	e1d500b4 	ldrh	r0, [r5, #4]
40019880:	e3500002 	cmp	r0, #2
40019884:	1a000001 	bne	40019890 <CyU3PDmaIntHandler_TypeManual+0x320>
40019888:	e1d501b0 	ldrh	r0, [r5, #16]
4001988c:	ebffec77 	bl	40014a70 <CyU3PDmaSocketDisable>
40019890:	e3a00001 	mov	r0, #1
40019894:	e5850000 	str	r0, [r5]
40019898:	e3a02000 	mov	r2, #0
4001989c:	e3a01001 	mov	r1, #1
400198a0:	e2850074 	add	r0, r5, #116	; 0x74
400198a4:	ebffc12a 	bl	40009d54 <_txe_event_flags_set>
400198a8:	ebffe412 	bl	400128f8 <CyU3PSysBarrierSync>
400198ac:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400198b0:	e3500000 	cmp	r0, #0
400198b4:	0a000007 	beq	400198d8 <CyU3PDmaIntHandler_TypeManual+0x368>
400198b8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400198bc:	e3100001 	tst	r0, #1
400198c0:	0a000004 	beq	400198d8 <CyU3PDmaIntHandler_TypeManual+0x368>
400198c4:	e3a02000 	mov	r2, #0
400198c8:	e3a01001 	mov	r1, #1
400198cc:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400198d0:	e1a00005 	mov	r0, r5
400198d4:	e12fff33 	blx	r3
400198d8:	e3160e12 	tst	r6, #288	; 0x120
400198dc:	0a000082 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x57c>
400198e0:	ebffe404 	bl	400128f8 <CyU3PSysBarrierSync>
400198e4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400198e8:	e3500000 	cmp	r0, #0
400198ec:	0a00007e 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x57c>
400198f0:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400198f4:	e3100c01 	tst	r0, #256	; 0x100
400198f8:	0a00007b 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x57c>
400198fc:	e3a02000 	mov	r2, #0
40019900:	e3a01c01 	mov	r1, #256	; 0x100
40019904:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019908:	e1a00005 	mov	r0, r5
4001990c:	e12fff33 	blx	r3
40019910:	ea000075 	b	40019aec <CyU3PDmaIntHandler_TypeManual+0x57c>
40019914:	e594000c 	ldr	r0, [r4, #12]
40019918:	e1a07800 	lsl	r7, r0, #16
4001991c:	e1a07827 	lsr	r7, r7, #16
40019920:	e3160001 	tst	r6, #1
40019924:	0a00005d 	beq	40019aa0 <CyU3PDmaIntHandler_TypeManual+0x530>
40019928:	e5950000 	ldr	r0, [r5]
4001992c:	e3500004 	cmp	r0, #4
40019930:	0a000031 	beq	400199fc <CyU3PDmaIntHandler_TypeManual+0x48c>
40019934:	e1a00000 	nop			; (mov r0, r0)
40019938:	e1d501be 	ldrh	r0, [r5, #30]
4001993c:	e28d1024 	add	r1, sp, #36	; 0x24
40019940:	eb0022c0 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019944:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019948:	e58d0000 	str	r0, [sp]
4001994c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019950:	e59f11a4 	ldr	r1, [pc, #420]	; 40019afc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019954:	e0010820 	and	r0, r1, r0, lsr #16
40019958:	e1cd00b4 	strh	r0, [sp, #4]
4001995c:	e241100f 	sub	r1, r1, #15
40019960:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019964:	e0000001 	and	r0, r0, r1
40019968:	e1cd00b6 	strh	r0, [sp, #6]
4001996c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019970:	e200000f 	and	r0, r0, #15
40019974:	e1cd00b8 	strh	r0, [sp, #8]
40019978:	e5950038 	ldr	r0, [r5, #56]	; 0x38
4001997c:	e3500000 	cmp	r0, #0
40019980:	0a000002 	beq	40019990 <CyU3PDmaIntHandler_TypeManual+0x420>
40019984:	e1dd10b6 	ldrh	r1, [sp, #6]
40019988:	e59d0000 	ldr	r0, [sp]
4001998c:	ebffe180 	bl	40011f94 <CyU3PSysFlushDRegion>
40019990:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019994:	e3100008 	tst	r0, #8
40019998:	0a000003 	beq	400199ac <CyU3PDmaIntHandler_TypeManual+0x43c>
4001999c:	e3a02000 	mov	r2, #0
400199a0:	e3a01008 	mov	r1, #8
400199a4:	e2850074 	add	r0, r5, #116	; 0x74
400199a8:	ebffc0e9 	bl	40009d54 <_txe_event_flags_set>
400199ac:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400199b0:	e59f1144 	ldr	r1, [pc, #324]	; 40019afc <CyU3PDmaIntHandler_TypeManual+0x58c>
400199b4:	e0010820 	and	r0, r1, r0, lsr #16
400199b8:	e1c501be 	strh	r0, [r5, #30]
400199bc:	ebffe3cd 	bl	400128f8 <CyU3PSysBarrierSync>
400199c0:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400199c4:	e3500000 	cmp	r0, #0
400199c8:	0a000007 	beq	400199ec <CyU3PDmaIntHandler_TypeManual+0x47c>
400199cc:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400199d0:	e3100008 	tst	r0, #8
400199d4:	0a000004 	beq	400199ec <CyU3PDmaIntHandler_TypeManual+0x47c>
400199d8:	e1a0200d 	mov	r2, sp
400199dc:	e3a01008 	mov	r1, #8
400199e0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400199e4:	e1a00005 	mov	r0, r5
400199e8:	e12fff33 	blx	r3
400199ec:	e1d501be 	ldrh	r0, [r5, #30]
400199f0:	e1500007 	cmp	r0, r7
400199f4:	1affffcf 	bne	40019938 <CyU3PDmaIntHandler_TypeManual+0x3c8>
400199f8:	ea000028 	b	40019aa0 <CyU3PDmaIntHandler_TypeManual+0x530>
400199fc:	e1d501b4 	ldrh	r0, [r5, #20]
40019a00:	e28d1024 	add	r1, sp, #36	; 0x24
40019a04:	eb00228f 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019a08:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019a0c:	e58d0000 	str	r0, [sp]
40019a10:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a14:	e59f10e0 	ldr	r1, [pc, #224]	; 40019afc <CyU3PDmaIntHandler_TypeManual+0x58c>
40019a18:	e0010820 	and	r0, r1, r0, lsr #16
40019a1c:	e1cd00b4 	strh	r0, [sp, #4]
40019a20:	e241100f 	sub	r1, r1, #15
40019a24:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a28:	e0000001 	and	r0, r0, r1
40019a2c:	e1cd00b6 	strh	r0, [sp, #6]
40019a30:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a34:	e200000f 	and	r0, r0, #15
40019a38:	e1cd00b8 	strh	r0, [sp, #8]
40019a3c:	e3a00001 	mov	r0, #1
40019a40:	e5850000 	str	r0, [r5]
40019a44:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019a48:	e3500000 	cmp	r0, #0
40019a4c:	0a000002 	beq	40019a5c <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019a50:	e1dd10b6 	ldrh	r1, [sp, #6]
40019a54:	e59d0000 	ldr	r0, [sp]
40019a58:	ebffe14d 	bl	40011f94 <CyU3PSysFlushDRegion>
40019a5c:	e3a02000 	mov	r2, #0
40019a60:	e3a01004 	mov	r1, #4
40019a64:	e2850074 	add	r0, r5, #116	; 0x74
40019a68:	ebffc0b9 	bl	40009d54 <_txe_event_flags_set>
40019a6c:	e3c66080 	bic	r6, r6, #128	; 0x80
40019a70:	ebffe3a0 	bl	400128f8 <CyU3PSysBarrierSync>
40019a74:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a78:	e3500000 	cmp	r0, #0
40019a7c:	0a000007 	beq	40019aa0 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a80:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a84:	e3100004 	tst	r0, #4
40019a88:	0a000004 	beq	40019aa0 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a8c:	e1a0200d 	mov	r2, sp
40019a90:	e3a01004 	mov	r1, #4
40019a94:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a98:	e1a00005 	mov	r0, r5
40019a9c:	e12fff33 	blx	r3
40019aa0:	e3160080 	tst	r6, #128	; 0x80
40019aa4:	0a000002 	beq	40019ab4 <CyU3PDmaIntHandler_TypeManual+0x544>
40019aa8:	e3a00006 	mov	r0, #6
40019aac:	e5850000 	str	r0, [r5]
40019ab0:	ebffe390 	bl	400128f8 <CyU3PSysBarrierSync>
40019ab4:	e3160020 	tst	r6, #32
40019ab8:	0a00000b 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x57c>
40019abc:	ebffe38d 	bl	400128f8 <CyU3PSysBarrierSync>
40019ac0:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019ac4:	e3500000 	cmp	r0, #0
40019ac8:	0a000007 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x57c>
40019acc:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ad0:	e3100080 	tst	r0, #128	; 0x80
40019ad4:	0a000004 	beq	40019aec <CyU3PDmaIntHandler_TypeManual+0x57c>
40019ad8:	e3a02000 	mov	r2, #0
40019adc:	e3a01080 	mov	r1, #128	; 0x80
40019ae0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019ae4:	e1a00005 	mov	r0, r5
40019ae8:	e12fff33 	blx	r3
40019aec:	e285003c 	add	r0, r5, #60	; 0x3c
40019af0:	ebffc164 	bl	4000a088 <_txe_mutex_put>
40019af4:	eafffea6 	b	40019594 <CyU3PDmaIntHandler_TypeManual+0x24>
40019af8:	0000fff0 	.word	0x0000fff0
40019afc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019b00 <CyU3PDmaIntHandler_TypeManyToOne>:
40019b00:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019b04:	e24dd034 	sub	sp, sp, #52	; 0x34
40019b08:	e1a04000 	mov	r4, r0
40019b0c:	e5945004 	ldr	r5, [r4, #4]
40019b10:	e5946008 	ldr	r6, [r4, #8]
40019b14:	e3160040 	tst	r6, #64	; 0x40
40019b18:	0a000003 	beq	40019b2c <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019b1c:	e1a00005 	mov	r0, r5
40019b20:	eb00033d 	bl	4001a81c <CyU3PDmaMultiChannelHandleError>
40019b24:	e28dd034 	add	sp, sp, #52	; 0x34
40019b28:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019b2c:	e3e01000 	mvn	r1, #0
40019b30:	e2850078 	add	r0, r5, #120	; 0x78
40019b34:	ebffc11e 	bl	40009fb4 <_txe_mutex_get>
40019b38:	e5940000 	ldr	r0, [r4]
40019b3c:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a0d4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019b40:	e0019820 	and	r9, r1, r0, lsr #16
40019b44:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019b48:	e1500009 	cmp	r0, r9
40019b4c:	1a0000d8 	bne	40019eb4 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019b50:	e594000c 	ldr	r0, [r4, #12]
40019b54:	e0007001 	and	r7, r0, r1
40019b58:	e3160002 	tst	r6, #2
40019b5c:	0a000054 	beq	40019cb4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019b60:	e5950000 	ldr	r0, [r5]
40019b64:	e3500003 	cmp	r0, #3
40019b68:	0a000030 	beq	40019c30 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019b6c:	e1a00000 	nop			; (mov r0, r0)
40019b70:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019b74:	e28d1024 	add	r1, sp, #36	; 0x24
40019b78:	eb002232 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019b7c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b80:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a0d4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019b84:	e0010820 	and	r0, r1, r0, lsr #16
40019b88:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019b8c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b90:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019b94:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019b98:	e28d1024 	add	r1, sp, #36	; 0x24
40019b9c:	eb002229 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019ba0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ba4:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a0d8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019ba8:	e0000001 	and	r0, r0, r1
40019bac:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019bb0:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019bb4:	e28d1024 	add	r1, sp, #36	; 0x24
40019bb8:	eb00223d 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40019bbc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019bc0:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a0dc <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019bc4:	e0000001 	and	r0, r0, r1
40019bc8:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019bcc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019bd0:	e1a00820 	lsr	r0, r0, #16
40019bd4:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019bd8:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019bdc:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019be0:	e1a00802 	lsl	r0, r2, #16
40019be4:	e1a00820 	lsr	r0, r0, #16
40019be8:	e3a02000 	mov	r2, #0
40019bec:	ebffec4f 	bl	40014d30 <CyU3PDmaSocketSendEvent>
40019bf0:	ebffe340 	bl	400128f8 <CyU3PSysBarrierSync>
40019bf4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019bf8:	e3500000 	cmp	r0, #0
40019bfc:	0a000007 	beq	40019c20 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019c00:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019c04:	e3100010 	tst	r0, #16
40019c08:	0a000004 	beq	40019c20 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019c0c:	e3a02000 	mov	r2, #0
40019c10:	e3a01010 	mov	r1, #16
40019c14:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019c18:	e1a00005 	mov	r0, r5
40019c1c:	e12fff33 	blx	r3
40019c20:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019c24:	e1500007 	cmp	r0, r7
40019c28:	1affffd0 	bne	40019b70 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
40019c2c:	ea000020 	b	40019cb4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c30:	e3a00001 	mov	r0, #1
40019c34:	e5850000 	str	r0, [r5]
40019c38:	e1d500b4 	ldrh	r0, [r5, #4]
40019c3c:	e3500005 	cmp	r0, #5
40019c40:	1a00000a 	bne	40019c70 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
40019c44:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c48:	e1a0100d 	mov	r1, sp
40019c4c:	ebffeb9f 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40019c50:	e3a00000 	mov	r0, #0
40019c54:	e58d0010 	str	r0, [sp, #16]
40019c58:	e59d0014 	ldr	r0, [sp, #20]
40019c5c:	e3c00002 	bic	r0, r0, #2
40019c60:	e58d0014 	str	r0, [sp, #20]
40019c64:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c68:	e1a0100d 	mov	r1, sp
40019c6c:	ebffec41 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40019c70:	e3a02000 	mov	r2, #0
40019c74:	e3a01002 	mov	r1, #2
40019c78:	e28500b0 	add	r0, r5, #176	; 0xb0
40019c7c:	ebffc034 	bl	40009d54 <_txe_event_flags_set>
40019c80:	e3c66080 	bic	r6, r6, #128	; 0x80
40019c84:	ebffe31b 	bl	400128f8 <CyU3PSysBarrierSync>
40019c88:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019c8c:	e3500000 	cmp	r0, #0
40019c90:	0a000007 	beq	40019cb4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c94:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019c98:	e3100002 	tst	r0, #2
40019c9c:	0a000004 	beq	40019cb4 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019ca0:	e3a02000 	mov	r2, #0
40019ca4:	e3a01002 	mov	r1, #2
40019ca8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019cac:	e1a00005 	mov	r0, r5
40019cb0:	e12fff33 	blx	r3
40019cb4:	e3160010 	tst	r6, #16
40019cb8:	0a00004f 	beq	40019dfc <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019cbc:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019cc0:	e28d1024 	add	r1, sp, #36	; 0x24
40019cc4:	eb0021df 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019cc8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019ccc:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a0d4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019cd0:	e0010820 	and	r0, r1, r0, lsr #16
40019cd4:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019cd8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cdc:	e3100001 	tst	r0, #1
40019ce0:	0a000045 	beq	40019dfc <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019ce4:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019ce8:	ebffeb60 	bl	40014a70 <CyU3PDmaSocketDisable>
40019cec:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cf0:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a0d8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019cf4:	e0000001 	and	r0, r0, r1
40019cf8:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019cfc:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d00:	e28d1024 	add	r1, sp, #36	; 0x24
40019d04:	eb0021ea 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40019d08:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019d0c:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019d10:	e1a0100d 	mov	r1, sp
40019d14:	e1a00009 	mov	r0, r9
40019d18:	ebffeb6c 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
40019d1c:	e59d000c 	ldr	r0, [sp, #12]
40019d20:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019d24:	e58d000c 	str	r0, [sp, #12]
40019d28:	e59d000c 	ldr	r0, [sp, #12]
40019d2c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019d30:	e58d000c 	str	r0, [sp, #12]
40019d34:	e3a00000 	mov	r0, #0
40019d38:	e58d0010 	str	r0, [sp, #16]
40019d3c:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d40:	e2400001 	sub	r0, r0, #1
40019d44:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
40019d48:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d4c:	e3500000 	cmp	r0, #0
40019d50:	1a000004 	bne	40019d68 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
40019d54:	e3a00010 	mov	r0, #16
40019d58:	e58d0010 	str	r0, [sp, #16]
40019d5c:	e59d0014 	ldr	r0, [sp, #20]
40019d60:	e3c00010 	bic	r0, r0, #16
40019d64:	e58d0014 	str	r0, [sp, #20]
40019d68:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d6c:	e58d0000 	str	r0, [sp]
40019d70:	e1a0100d 	mov	r1, sp
40019d74:	e1a00009 	mov	r0, r9
40019d78:	ebffebfe 	bl	40014d78 <CyU3PDmaSocketSetConfig>
40019d7c:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019d80:	e28d1024 	add	r1, sp, #36	; 0x24
40019d84:	eb0021af 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019d88:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d8c:	e59f1344 	ldr	r1, [pc, #836]	; 4001a0d8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019d90:	e0000001 	and	r0, r0, r1
40019d94:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019d98:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019d9c:	e28d1024 	add	r1, sp, #36	; 0x24
40019da0:	eb0021c3 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40019da4:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019da8:	e3500000 	cmp	r0, #0
40019dac:	0a000004 	beq	40019dc4 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
40019db0:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019db4:	e59f331c 	ldr	r3, [pc, #796]	; 4001a0d8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019db8:	e0021003 	and	r1, r2, r3
40019dbc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019dc0:	ebffe073 	bl	40011f94 <CyU3PSysFlushDRegion>
40019dc4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019dc8:	e59f130c 	ldr	r1, [pc, #780]	; 4001a0dc <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019dcc:	e0000001 	and	r0, r0, r1
40019dd0:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019dd4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019dd8:	e1a00820 	lsr	r0, r0, #16
40019ddc:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019de0:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019de4:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019de8:	e1a00802 	lsl	r0, r2, #16
40019dec:	e1a00820 	lsr	r0, r0, #16
40019df0:	e3a02000 	mov	r2, #0
40019df4:	ebffebcd 	bl	40014d30 <CyU3PDmaSocketSendEvent>
40019df8:	ebffe2be 	bl	400128f8 <CyU3PSysBarrierSync>
40019dfc:	e3160080 	tst	r6, #128	; 0x80
40019e00:	0a00001c 	beq	40019e78 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e04:	e3a08000 	mov	r8, #0
40019e08:	ea000005 	b	40019e24 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
40019e0c:	e2851024 	add	r1, r5, #36	; 0x24
40019e10:	e0811088 	add	r1, r1, r8, lsl #1
40019e14:	e1d100b0 	ldrh	r0, [r1]
40019e18:	ebffeb14 	bl	40014a70 <CyU3PDmaSocketDisable>
40019e1c:	e2880001 	add	r0, r8, #1
40019e20:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019e24:	e1d500ba 	ldrh	r0, [r5, #10]
40019e28:	e1500008 	cmp	r0, r8
40019e2c:	cafffff6 	bgt	40019e0c <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
40019e30:	e3a00001 	mov	r0, #1
40019e34:	e5850000 	str	r0, [r5]
40019e38:	e3a02000 	mov	r2, #0
40019e3c:	e3a01001 	mov	r1, #1
40019e40:	e28500b0 	add	r0, r5, #176	; 0xb0
40019e44:	ebffbfc2 	bl	40009d54 <_txe_event_flags_set>
40019e48:	ebffe2aa 	bl	400128f8 <CyU3PSysBarrierSync>
40019e4c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019e50:	e3500000 	cmp	r0, #0
40019e54:	0a000007 	beq	40019e78 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e58:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019e5c:	e3100001 	tst	r0, #1
40019e60:	0a000004 	beq	40019e78 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e64:	e3a02000 	mov	r2, #0
40019e68:	e3a01001 	mov	r1, #1
40019e6c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019e70:	e1a00005 	mov	r0, r5
40019e74:	e12fff33 	blx	r3
40019e78:	e3160e12 	tst	r6, #288	; 0x120
40019e7c:	0a000091 	beq	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e80:	ebffe29c 	bl	400128f8 <CyU3PSysBarrierSync>
40019e84:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019e88:	e3500000 	cmp	r0, #0
40019e8c:	0a00008d 	beq	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e90:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019e94:	e3100c01 	tst	r0, #256	; 0x100
40019e98:	0a00008a 	beq	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e9c:	e3a02000 	mov	r2, #0
40019ea0:	e3a01c01 	mov	r1, #256	; 0x100
40019ea4:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019ea8:	e1a00005 	mov	r0, r5
40019eac:	e12fff33 	blx	r3
40019eb0:	ea000084 	b	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019eb4:	e594000c 	ldr	r0, [r4, #12]
40019eb8:	e1a07800 	lsl	r7, r0, #16
40019ebc:	e1a07827 	lsr	r7, r7, #16
40019ec0:	e3160001 	tst	r6, #1
40019ec4:	0a000048 	beq	40019fec <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
40019ec8:	e5950000 	ldr	r0, [r5]
40019ecc:	e3500004 	cmp	r0, #4
40019ed0:	0a00007c 	beq	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019ed4:	e3a08000 	mov	r8, #0
40019ed8:	ea000007 	b	40019efc <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
40019edc:	e2850024 	add	r0, r5, #36	; 0x24
40019ee0:	e0800088 	add	r0, r0, r8, lsl #1
40019ee4:	e1d000b0 	ldrh	r0, [r0]
40019ee8:	e1500009 	cmp	r0, r9
40019eec:	1a000000 	bne	40019ef4 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
40019ef0:	ea000004 	b	40019f08 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
40019ef4:	e2880001 	add	r0, r8, #1
40019ef8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019efc:	e1d500ba 	ldrh	r0, [r5, #10]
40019f00:	e1500008 	cmp	r0, r8
40019f04:	cafffff4 	bgt	40019edc <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
40019f08:	e1a00000 	nop			; (mov r0, r0)
40019f0c:	e1a00000 	nop			; (mov r0, r0)
40019f10:	e285103e 	add	r1, r5, #62	; 0x3e
40019f14:	e0811088 	add	r1, r1, r8, lsl #1
40019f18:	e1d100b0 	ldrh	r0, [r1]
40019f1c:	e28d1024 	add	r1, sp, #36	; 0x24
40019f20:	eb002148 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019f24:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019f28:	e58d0018 	str	r0, [sp, #24]
40019f2c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f30:	e59f119c 	ldr	r1, [pc, #412]	; 4001a0d4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f34:	e0010820 	and	r0, r1, r0, lsr #16
40019f38:	e1cd01bc 	strh	r0, [sp, #28]
40019f3c:	e241100f 	sub	r1, r1, #15
40019f40:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f44:	e0000001 	and	r0, r0, r1
40019f48:	e1cd01be 	strh	r0, [sp, #30]
40019f4c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f50:	e200000f 	and	r0, r0, #15
40019f54:	e1cd02b0 	strh	r0, [sp, #32]
40019f58:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019f5c:	e3500000 	cmp	r0, #0
40019f60:	0a000002 	beq	40019f70 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
40019f64:	e1dd11be 	ldrh	r1, [sp, #30]
40019f68:	e59d0018 	ldr	r0, [sp, #24]
40019f6c:	ebffe008 	bl	40011f94 <CyU3PSysFlushDRegion>
40019f70:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f74:	e3100008 	tst	r0, #8
40019f78:	0a000003 	beq	40019f8c <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
40019f7c:	e3a02000 	mov	r2, #0
40019f80:	e3a01008 	mov	r1, #8
40019f84:	e28500b0 	add	r0, r5, #176	; 0xb0
40019f88:	ebffbf71 	bl	40009d54 <_txe_event_flags_set>
40019f8c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019f90:	e59f113c 	ldr	r1, [pc, #316]	; 4001a0d4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f94:	e0010820 	and	r0, r1, r0, lsr #16
40019f98:	e285103e 	add	r1, r5, #62	; 0x3e
40019f9c:	e0811088 	add	r1, r1, r8, lsl #1
40019fa0:	e1c100b0 	strh	r0, [r1]
40019fa4:	ebffe253 	bl	400128f8 <CyU3PSysBarrierSync>
40019fa8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019fac:	e3500000 	cmp	r0, #0
40019fb0:	0a000007 	beq	40019fd4 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
40019fb4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019fb8:	e3100008 	tst	r0, #8
40019fbc:	0a000004 	beq	40019fd4 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
40019fc0:	e28d2018 	add	r2, sp, #24
40019fc4:	e3a01008 	mov	r1, #8
40019fc8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019fcc:	e1a00005 	mov	r0, r5
40019fd0:	e12fff33 	blx	r3
40019fd4:	e285003e 	add	r0, r5, #62	; 0x3e
40019fd8:	e0800088 	add	r0, r0, r8, lsl #1
40019fdc:	e1d000b0 	ldrh	r0, [r0]
40019fe0:	e1500007 	cmp	r0, r7
40019fe4:	1affffc9 	bne	40019f10 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
40019fe8:	ea000036 	b	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019fec:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
40019ff0:	e28d1024 	add	r1, sp, #36	; 0x24
40019ff4:	eb002113 	bl	40022448 <CyU3PDmaDscrGetConfig>
40019ff8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019ffc:	e58d0018 	str	r0, [sp, #24]
4001a000:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a004:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a0d4 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a008:	e0010820 	and	r0, r1, r0, lsr #16
4001a00c:	e1cd01bc 	strh	r0, [sp, #28]
4001a010:	e241100f 	sub	r1, r1, #15
4001a014:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a018:	e0000001 	and	r0, r0, r1
4001a01c:	e1cd01be 	strh	r0, [sp, #30]
4001a020:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a024:	e200000f 	and	r0, r0, #15
4001a028:	e1cd02b0 	strh	r0, [sp, #32]
4001a02c:	e3a00001 	mov	r0, #1
4001a030:	e5850000 	str	r0, [r5]
4001a034:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a038:	e3500000 	cmp	r0, #0
4001a03c:	0a000002 	beq	4001a04c <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a040:	e1dd11be 	ldrh	r1, [sp, #30]
4001a044:	e59d0018 	ldr	r0, [sp, #24]
4001a048:	ebffdfd1 	bl	40011f94 <CyU3PSysFlushDRegion>
4001a04c:	e1d500b4 	ldrh	r0, [r5, #4]
4001a050:	e3500005 	cmp	r0, #5
4001a054:	1a00000a 	bne	4001a084 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a058:	e1a0100d 	mov	r1, sp
4001a05c:	e1a00009 	mov	r0, r9
4001a060:	ebffea9a 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001a064:	e3a00000 	mov	r0, #0
4001a068:	e58d0010 	str	r0, [sp, #16]
4001a06c:	e59d0014 	ldr	r0, [sp, #20]
4001a070:	e3c00001 	bic	r0, r0, #1
4001a074:	e58d0014 	str	r0, [sp, #20]
4001a078:	e1a0100d 	mov	r1, sp
4001a07c:	e1a00009 	mov	r0, r9
4001a080:	ebffeb3c 	bl	40014d78 <CyU3PDmaSocketSetConfig>
4001a084:	e3a02000 	mov	r2, #0
4001a088:	e3a01004 	mov	r1, #4
4001a08c:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a090:	ebffbf2f 	bl	40009d54 <_txe_event_flags_set>
4001a094:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a098:	ebffe216 	bl	400128f8 <CyU3PSysBarrierSync>
4001a09c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a0a0:	e3500000 	cmp	r0, #0
4001a0a4:	0a000007 	beq	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a0a8:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a0ac:	e3100004 	tst	r0, #4
4001a0b0:	0a000004 	beq	4001a0c8 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a0b4:	e28d2018 	add	r2, sp, #24
4001a0b8:	e3a01004 	mov	r1, #4
4001a0bc:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a0c0:	e1a00005 	mov	r0, r5
4001a0c4:	e12fff33 	blx	r3
4001a0c8:	e2850078 	add	r0, r5, #120	; 0x78
4001a0cc:	ebffbfed 	bl	4000a088 <_txe_mutex_put>
4001a0d0:	eafffe93 	b	40019b24 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a0d4:	0000ffff 	.word	0x0000ffff
4001a0d8:	0000fff0 	.word	0x0000fff0
4001a0dc:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a0e0 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a0e0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a0e4:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a0e8:	e1a04000 	mov	r4, r0
4001a0ec:	e594a004 	ldr	sl, [r4, #4]
4001a0f0:	e5940000 	ldr	r0, [r4]
4001a0f4:	e59f1664 	ldr	r1, [pc, #1636]	; 4001a760 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a0f8:	e0016820 	and	r6, r1, r0, lsr #16
4001a0fc:	e5945008 	ldr	r5, [r4, #8]
4001a100:	e3150040 	tst	r5, #64	; 0x40
4001a104:	0a000003 	beq	4001a118 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a108:	e1a0000a 	mov	r0, sl
4001a10c:	eb0001c2 	bl	4001a81c <CyU3PDmaMultiChannelHandleError>
4001a110:	e28dd038 	add	sp, sp, #56	; 0x38
4001a114:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a118:	e3e01000 	mvn	r1, #0
4001a11c:	e28a0078 	add	r0, sl, #120	; 0x78
4001a120:	ebffbfa3 	bl	40009fb4 <_txe_mutex_get>
4001a124:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a128:	e1500006 	cmp	r0, r6
4001a12c:	0a0000fc 	beq	4001a524 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a130:	e594000c 	ldr	r0, [r4, #12]
4001a134:	e1a09800 	lsl	r9, r0, #16
4001a138:	e1a09829 	lsr	r9, r9, #16
4001a13c:	e3a08000 	mov	r8, #0
4001a140:	ea000007 	b	4001a164 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a144:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a148:	e0800088 	add	r0, r0, r8, lsl #1
4001a14c:	e1d000b0 	ldrh	r0, [r0]
4001a150:	e1500006 	cmp	r0, r6
4001a154:	1a000000 	bne	4001a15c <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a158:	ea000004 	b	4001a170 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a15c:	e2880001 	add	r0, r8, #1
4001a160:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a164:	e1da00ba 	ldrh	r0, [sl, #10]
4001a168:	e1500008 	cmp	r0, r8
4001a16c:	cafffff4 	bgt	4001a144 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a170:	e1a00000 	nop			; (mov r0, r0)
4001a174:	e3150002 	tst	r5, #2
4001a178:	0a00007e 	beq	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a17c:	e59a0000 	ldr	r0, [sl]
4001a180:	e3500003 	cmp	r0, #3
4001a184:	0a00005a 	beq	4001a2f4 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a188:	e1a00000 	nop			; (mov r0, r0)
4001a18c:	e28a1046 	add	r1, sl, #70	; 0x46
4001a190:	e0811088 	add	r1, r1, r8, lsl #1
4001a194:	e1d100b0 	ldrh	r0, [r1]
4001a198:	e28d1028 	add	r1, sp, #40	; 0x28
4001a19c:	eb0020a9 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001a1a0:	e28a1046 	add	r1, sl, #70	; 0x46
4001a1a4:	e0811088 	add	r1, r1, r8, lsl #1
4001a1a8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a1ac:	e1c100b0 	strh	r0, [r1]
4001a1b0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a1b4:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001a760 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a1b8:	e0017820 	and	r7, r1, r0, lsr #16
4001a1bc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a1c0:	e1a00007 	mov	r0, r7
4001a1c4:	eb00209f 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001a1c8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a1cc:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a764 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a1d0:	e0000001 	and	r0, r0, r1
4001a1d4:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a1d8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a1dc:	e1a00007 	mov	r0, r7
4001a1e0:	eb0020b3 	bl	400224b4 <CyU3PDmaDscrSetConfig>
4001a1e4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a1e8:	e3a02000 	mov	r2, #0
4001a1ec:	e1a01007 	mov	r1, r7
4001a1f0:	ebffeace 	bl	40014d30 <CyU3PDmaSocketSendEvent>
4001a1f4:	ebffe1bf 	bl	400128f8 <CyU3PSysBarrierSync>
4001a1f8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a1fc:	e3500000 	cmp	r0, #0
4001a200:	0a000007 	beq	4001a224 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a204:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a208:	e3100010 	tst	r0, #16
4001a20c:	0a000004 	beq	4001a224 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a210:	e3a02000 	mov	r2, #0
4001a214:	e3a01010 	mov	r1, #16
4001a218:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a21c:	e1a0000a 	mov	r0, sl
4001a220:	e12fff33 	blx	r3
4001a224:	e28a0046 	add	r0, sl, #70	; 0x46
4001a228:	e0800088 	add	r0, r0, r8, lsl #1
4001a22c:	e1d000b0 	ldrh	r0, [r0]
4001a230:	e1500009 	cmp	r0, r9
4001a234:	1affffd4 	bne	4001a18c <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a238:	e59a0000 	ldr	r0, [sl]
4001a23c:	e3500006 	cmp	r0, #6
4001a240:	1a00004c 	bne	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a244:	e1da00b8 	ldrh	r0, [sl, #8]
4001a248:	e1da10ba 	ldrh	r1, [sl, #10]
4001a24c:	e0000091 	mul	r0, r1, r0
4001a250:	e1a08800 	lsl	r8, r0, #16
4001a254:	e1a08828 	lsr	r8, r8, #16
4001a258:	e1da71b4 	ldrh	r7, [sl, #20]
4001a25c:	ea00000c 	b	4001a294 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a260:	e28d1028 	add	r1, sp, #40	; 0x28
4001a264:	e1a00007 	mov	r0, r7
4001a268:	eb002076 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001a26c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a270:	e3100008 	tst	r0, #8
4001a274:	0a000000 	beq	4001a27c <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a278:	ea000007 	b	4001a29c <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a27c:	e2480001 	sub	r0, r8, #1
4001a280:	e1a08800 	lsl	r8, r0, #16
4001a284:	e1a08828 	lsr	r8, r8, #16
4001a288:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a28c:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001a760 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a290:	e0017820 	and	r7, r1, r0, lsr #16
4001a294:	e3580000 	cmp	r8, #0
4001a298:	1afffff0 	bne	4001a260 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a29c:	e1a00000 	nop			; (mov r0, r0)
4001a2a0:	e3580000 	cmp	r8, #0
4001a2a4:	1a000033 	bne	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2a8:	e3a00001 	mov	r0, #1
4001a2ac:	e58a0000 	str	r0, [sl]
4001a2b0:	e3a02000 	mov	r2, #0
4001a2b4:	e3a01001 	mov	r1, #1
4001a2b8:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a2bc:	ebffbea4 	bl	40009d54 <_txe_event_flags_set>
4001a2c0:	ebffe18c 	bl	400128f8 <CyU3PSysBarrierSync>
4001a2c4:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a2c8:	e3500000 	cmp	r0, #0
4001a2cc:	0a000029 	beq	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2d0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a2d4:	e3100001 	tst	r0, #1
4001a2d8:	0a000026 	beq	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2dc:	e3a02000 	mov	r2, #0
4001a2e0:	e3a01001 	mov	r1, #1
4001a2e4:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a2e8:	e1a0000a 	mov	r0, sl
4001a2ec:	e12fff33 	blx	r3
4001a2f0:	ea000020 	b	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2f4:	e3a00001 	mov	r0, #1
4001a2f8:	e58a0000 	str	r0, [sl]
4001a2fc:	e1da00b4 	ldrh	r0, [sl, #4]
4001a300:	e3500006 	cmp	r0, #6
4001a304:	1a00000a 	bne	4001a334 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a308:	e28d1004 	add	r1, sp, #4
4001a30c:	e1a00006 	mov	r0, r6
4001a310:	ebffe9ee 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001a314:	e3a00000 	mov	r0, #0
4001a318:	e58d0014 	str	r0, [sp, #20]
4001a31c:	e59d0018 	ldr	r0, [sp, #24]
4001a320:	e3c00002 	bic	r0, r0, #2
4001a324:	e58d0018 	str	r0, [sp, #24]
4001a328:	e28d1004 	add	r1, sp, #4
4001a32c:	e1a00006 	mov	r0, r6
4001a330:	ebffea90 	bl	40014d78 <CyU3PDmaSocketSetConfig>
4001a334:	e3a02000 	mov	r2, #0
4001a338:	e3a01002 	mov	r1, #2
4001a33c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a340:	ebffbe83 	bl	40009d54 <_txe_event_flags_set>
4001a344:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a348:	ebffe16a 	bl	400128f8 <CyU3PSysBarrierSync>
4001a34c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a350:	e3500000 	cmp	r0, #0
4001a354:	0a000007 	beq	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a358:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a35c:	e3100002 	tst	r0, #2
4001a360:	0a000004 	beq	4001a378 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a364:	e3a02000 	mov	r2, #0
4001a368:	e3a01002 	mov	r1, #2
4001a36c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a370:	e1a0000a 	mov	r0, sl
4001a374:	e12fff33 	blx	r3
4001a378:	e3150010 	tst	r5, #16
4001a37c:	0a000059 	beq	4001a4e8 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a380:	e28a1046 	add	r1, sl, #70	; 0x46
4001a384:	e0811088 	add	r1, r1, r8, lsl #1
4001a388:	e1d100b0 	ldrh	r0, [r1]
4001a38c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a390:	eb00202c 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001a394:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a398:	e3100001 	tst	r0, #1
4001a39c:	0a000051 	beq	4001a4e8 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a3a0:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a3a4:	e0811088 	add	r1, r1, r8, lsl #1
4001a3a8:	e1d100b0 	ldrh	r0, [r1]
4001a3ac:	ebffe9af 	bl	40014a70 <CyU3PDmaSocketDisable>
4001a3b0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a3b4:	e59f13a8 	ldr	r1, [pc, #936]	; 4001a764 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a3b8:	e0000001 	and	r0, r0, r1
4001a3bc:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a3c0:	e28a1046 	add	r1, sl, #70	; 0x46
4001a3c4:	e0811088 	add	r1, r1, r8, lsl #1
4001a3c8:	e1d100b0 	ldrh	r0, [r1]
4001a3cc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a3d0:	eb002037 	bl	400224b4 <CyU3PDmaDscrSetConfig>
4001a3d4:	e28a1046 	add	r1, sl, #70	; 0x46
4001a3d8:	e0811088 	add	r1, r1, r8, lsl #1
4001a3dc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3e0:	e1c100b0 	strh	r0, [r1]
4001a3e4:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a3e8:	e0811088 	add	r1, r1, r8, lsl #1
4001a3ec:	e1d100b0 	ldrh	r0, [r1]
4001a3f0:	e28d1004 	add	r1, sp, #4
4001a3f4:	ebffe9b5 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001a3f8:	e59d0010 	ldr	r0, [sp, #16]
4001a3fc:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a400:	e58d0010 	str	r0, [sp, #16]
4001a404:	e59d0010 	ldr	r0, [sp, #16]
4001a408:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a40c:	e58d0010 	str	r0, [sp, #16]
4001a410:	e3a00000 	mov	r0, #0
4001a414:	e58d0014 	str	r0, [sp, #20]
4001a418:	e28a0064 	add	r0, sl, #100	; 0x64
4001a41c:	e0800088 	add	r0, r0, r8, lsl #1
4001a420:	e1d000b0 	ldrh	r0, [r0]
4001a424:	e2400001 	sub	r0, r0, #1
4001a428:	e28a1064 	add	r1, sl, #100	; 0x64
4001a42c:	e0811088 	add	r1, r1, r8, lsl #1
4001a430:	e1c100b0 	strh	r0, [r1]
4001a434:	e28a0064 	add	r0, sl, #100	; 0x64
4001a438:	e0800088 	add	r0, r0, r8, lsl #1
4001a43c:	e1d000b0 	ldrh	r0, [r0]
4001a440:	e3500000 	cmp	r0, #0
4001a444:	1a000004 	bne	4001a45c <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a448:	e3a00010 	mov	r0, #16
4001a44c:	e58d0014 	str	r0, [sp, #20]
4001a450:	e59d0018 	ldr	r0, [sp, #24]
4001a454:	e3c00010 	bic	r0, r0, #16
4001a458:	e58d0018 	str	r0, [sp, #24]
4001a45c:	e28a0046 	add	r0, sl, #70	; 0x46
4001a460:	e0800088 	add	r0, r0, r8, lsl #1
4001a464:	e1d000b0 	ldrh	r0, [r0]
4001a468:	e58d0004 	str	r0, [sp, #4]
4001a46c:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a470:	e0811088 	add	r1, r1, r8, lsl #1
4001a474:	e1d100b0 	ldrh	r0, [r1]
4001a478:	e28d1004 	add	r1, sp, #4
4001a47c:	ebffea3d 	bl	40014d78 <CyU3PDmaSocketSetConfig>
4001a480:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a484:	e59f12d4 	ldr	r1, [pc, #724]	; 4001a760 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a488:	e0017820 	and	r7, r1, r0, lsr #16
4001a48c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a490:	e1a00007 	mov	r0, r7
4001a494:	eb001feb 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001a498:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a49c:	e59f12c0 	ldr	r1, [pc, #704]	; 4001a764 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a4a0:	e0000001 	and	r0, r0, r1
4001a4a4:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a4a8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a4ac:	e1a00007 	mov	r0, r7
4001a4b0:	eb001fff 	bl	400224b4 <CyU3PDmaDscrSetConfig>
4001a4b4:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a4b8:	e3500000 	cmp	r0, #0
4001a4bc:	0a000004 	beq	4001a4d4 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a4c0:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a4c4:	e59f3298 	ldr	r3, [pc, #664]	; 4001a764 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a4c8:	e0021003 	and	r1, r2, r3
4001a4cc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a4d0:	ebffdeaf 	bl	40011f94 <CyU3PSysFlushDRegion>
4001a4d4:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a4d8:	e3a02000 	mov	r2, #0
4001a4dc:	e1a01007 	mov	r1, r7
4001a4e0:	ebffea12 	bl	40014d30 <CyU3PDmaSocketSendEvent>
4001a4e4:	ebffe103 	bl	400128f8 <CyU3PSysBarrierSync>
4001a4e8:	e3150020 	tst	r5, #32
4001a4ec:	0a000098 	beq	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4f0:	ebffe100 	bl	400128f8 <CyU3PSysBarrierSync>
4001a4f4:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a4f8:	e3500000 	cmp	r0, #0
4001a4fc:	0a000094 	beq	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a500:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a504:	e3100080 	tst	r0, #128	; 0x80
4001a508:	0a000091 	beq	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a50c:	e3a02000 	mov	r2, #0
4001a510:	e3a01080 	mov	r1, #128	; 0x80
4001a514:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a518:	e1a0000a 	mov	r0, sl
4001a51c:	e12fff33 	blx	r3
4001a520:	ea00008b 	b	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a524:	e594000c 	ldr	r0, [r4, #12]
4001a528:	e1a09800 	lsl	r9, r0, #16
4001a52c:	e1a09829 	lsr	r9, r9, #16
4001a530:	e3150001 	tst	r5, #1
4001a534:	0a00006b 	beq	4001a6e8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a538:	e59a0000 	ldr	r0, [sl]
4001a53c:	e3500004 	cmp	r0, #4
4001a540:	0a000031 	beq	4001a60c <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a544:	e1a00000 	nop			; (mov r0, r0)
4001a548:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a54c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a550:	eb001fbc 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001a554:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a558:	e58d001c 	str	r0, [sp, #28]
4001a55c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a560:	e59f11f8 	ldr	r1, [pc, #504]	; 4001a760 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a564:	e0010820 	and	r0, r1, r0, lsr #16
4001a568:	e1cd02b0 	strh	r0, [sp, #32]
4001a56c:	e241100f 	sub	r1, r1, #15
4001a570:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a574:	e0000001 	and	r0, r0, r1
4001a578:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a57c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a580:	e200000f 	and	r0, r0, #15
4001a584:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a588:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a58c:	e3500000 	cmp	r0, #0
4001a590:	0a000002 	beq	4001a5a0 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a594:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a598:	e59d001c 	ldr	r0, [sp, #28]
4001a59c:	ebffde7c 	bl	40011f94 <CyU3PSysFlushDRegion>
4001a5a0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a5a4:	e3100008 	tst	r0, #8
4001a5a8:	0a000003 	beq	4001a5bc <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a5ac:	e3a02000 	mov	r2, #0
4001a5b0:	e3a01008 	mov	r1, #8
4001a5b4:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a5b8:	ebffbde5 	bl	40009d54 <_txe_event_flags_set>
4001a5bc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a5c0:	e59f1198 	ldr	r1, [pc, #408]	; 4001a760 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a5c4:	e0010820 	and	r0, r1, r0, lsr #16
4001a5c8:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001a5cc:	ebffe0c9 	bl	400128f8 <CyU3PSysBarrierSync>
4001a5d0:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a5d4:	e3500000 	cmp	r0, #0
4001a5d8:	0a000007 	beq	4001a5fc <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a5dc:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a5e0:	e3100008 	tst	r0, #8
4001a5e4:	0a000004 	beq	4001a5fc <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a5e8:	e28d201c 	add	r2, sp, #28
4001a5ec:	e3a01008 	mov	r1, #8
4001a5f0:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a5f4:	e1a0000a 	mov	r0, sl
4001a5f8:	e12fff33 	blx	r3
4001a5fc:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a600:	e1500009 	cmp	r0, r9
4001a604:	1affffcf 	bne	4001a548 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001a608:	ea000036 	b	4001a6e8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a60c:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001a610:	e28d1028 	add	r1, sp, #40	; 0x28
4001a614:	eb001f8b 	bl	40022448 <CyU3PDmaDscrGetConfig>
4001a618:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a61c:	e58d001c 	str	r0, [sp, #28]
4001a620:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a624:	e59f1134 	ldr	r1, [pc, #308]	; 4001a760 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a628:	e0010820 	and	r0, r1, r0, lsr #16
4001a62c:	e1cd02b0 	strh	r0, [sp, #32]
4001a630:	e241100f 	sub	r1, r1, #15
4001a634:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a638:	e0000001 	and	r0, r0, r1
4001a63c:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a640:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a644:	e200000f 	and	r0, r0, #15
4001a648:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a64c:	e3a00001 	mov	r0, #1
4001a650:	e58a0000 	str	r0, [sl]
4001a654:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a658:	e3500000 	cmp	r0, #0
4001a65c:	0a000002 	beq	4001a66c <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001a660:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a664:	e59d001c 	ldr	r0, [sp, #28]
4001a668:	ebffde49 	bl	40011f94 <CyU3PSysFlushDRegion>
4001a66c:	e1da00b4 	ldrh	r0, [sl, #4]
4001a670:	e3500006 	cmp	r0, #6
4001a674:	1a00000a 	bne	4001a6a4 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001a678:	e28d1004 	add	r1, sp, #4
4001a67c:	e1a00006 	mov	r0, r6
4001a680:	ebffe912 	bl	40014ad0 <CyU3PDmaSocketGetConfig>
4001a684:	e3a00000 	mov	r0, #0
4001a688:	e58d0014 	str	r0, [sp, #20]
4001a68c:	e59d0018 	ldr	r0, [sp, #24]
4001a690:	e3c00001 	bic	r0, r0, #1
4001a694:	e58d0018 	str	r0, [sp, #24]
4001a698:	e28d1004 	add	r1, sp, #4
4001a69c:	e1a00006 	mov	r0, r6
4001a6a0:	ebffe9b4 	bl	40014d78 <CyU3PDmaSocketSetConfig>
4001a6a4:	e3a02000 	mov	r2, #0
4001a6a8:	e3a01004 	mov	r1, #4
4001a6ac:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a6b0:	ebffbda7 	bl	40009d54 <_txe_event_flags_set>
4001a6b4:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a6b8:	ebffe08e 	bl	400128f8 <CyU3PSysBarrierSync>
4001a6bc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a6c0:	e3500000 	cmp	r0, #0
4001a6c4:	0a000007 	beq	4001a6e8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a6c8:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a6cc:	e3100004 	tst	r0, #4
4001a6d0:	0a000004 	beq	4001a6e8 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a6d4:	e28d201c 	add	r2, sp, #28
4001a6d8:	e3a01004 	mov	r1, #4
4001a6dc:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a6e0:	e1a0000a 	mov	r0, sl
4001a6e4:	e12fff33 	blx	r3
4001a6e8:	e3150080 	tst	r5, #128	; 0x80
4001a6ec:	0a000018 	beq	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a6f0:	e1da00b4 	ldrh	r0, [sl, #4]
4001a6f4:	e3500006 	cmp	r0, #6
4001a6f8:	1a000012 	bne	4001a748 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001a6fc:	e3a00001 	mov	r0, #1
4001a700:	e58a0000 	str	r0, [sl]
4001a704:	e3a02000 	mov	r2, #0
4001a708:	e3a01001 	mov	r1, #1
4001a70c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a710:	ebffbd8f 	bl	40009d54 <_txe_event_flags_set>
4001a714:	ebffe077 	bl	400128f8 <CyU3PSysBarrierSync>
4001a718:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a71c:	e3500000 	cmp	r0, #0
4001a720:	0a00000b 	beq	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a724:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a728:	e3100001 	tst	r0, #1
4001a72c:	0a000008 	beq	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a730:	e3a02000 	mov	r2, #0
4001a734:	e3a01001 	mov	r1, #1
4001a738:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a73c:	e1a0000a 	mov	r0, sl
4001a740:	e12fff33 	blx	r3
4001a744:	ea000002 	b	4001a754 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a748:	e3a00006 	mov	r0, #6
4001a74c:	e58a0000 	str	r0, [sl]
4001a750:	ebffe068 	bl	400128f8 <CyU3PSysBarrierSync>
4001a754:	e28a0078 	add	r0, sl, #120	; 0x78
4001a758:	ebffbe4a 	bl	4000a088 <_txe_mutex_put>
4001a75c:	eafffe6b 	b	4001a110 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001a760:	0000ffff 	.word	0x0000ffff
4001a764:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001a768 <CyU3PDmaIsSockAvlEnReqd>:
4001a768:	e1a01000 	mov	r1, r0
4001a76c:	e3a0003f 	mov	r0, #63	; 0x3f
4001a770:	e0000441 	and	r0, r0, r1, asr #8
4001a774:	e3500003 	cmp	r0, #3
4001a778:	1a000004 	bne	4001a790 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001a77c:	e3a00001 	mov	r0, #1
4001a780:	e59f203c 	ldr	r2, [pc, #60]	; 4001a7c4 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001a784:	e1d220b0 	ldrh	r2, [r2]
4001a788:	e1120110 	tst	r2, r0, lsl r1
4001a78c:	1a000008 	bne	4001a7b4 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001a790:	e3a0003f 	mov	r0, #63	; 0x3f
4001a794:	e0000441 	and	r0, r0, r1, asr #8
4001a798:	e3500004 	cmp	r0, #4
4001a79c:	1a000006 	bne	4001a7bc <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a7a0:	e3a00001 	mov	r0, #1
4001a7a4:	e59f201c 	ldr	r2, [pc, #28]	; 4001a7c8 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001a7a8:	e1d220b0 	ldrh	r2, [r2]
4001a7ac:	e1120110 	tst	r2, r0, lsl r1
4001a7b0:	0a000001 	beq	4001a7bc <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a7b4:	e3a00001 	mov	r0, #1
4001a7b8:	e12fff1e 	bx	lr
4001a7bc:	e3a00000 	mov	r0, #0
4001a7c0:	eafffffc 	b	4001a7b8 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001a7c4:	40030d00 	.word	0x40030d00
4001a7c8:	40030d02 	.word	0x40030d02

Disassembly of section i.CyU3PDmaMsgSend:

4001a7cc <CyU3PDmaMsgSend>:
4001a7cc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a7d0:	e1a04000 	mov	r4, r0
4001a7d4:	e1a05001 	mov	r5, r1
4001a7d8:	e1a07002 	mov	r7, r2
4001a7dc:	e3570001 	cmp	r7, #1
4001a7e0:	1a000005 	bne	4001a7fc <CyU3PDmaMsgSend+0x30>
4001a7e4:	e1a02005 	mov	r2, r5
4001a7e8:	e1a01004 	mov	r1, r4
4001a7ec:	e59f0024 	ldr	r0, [pc, #36]	; 4001a818 <CyU3PDmaMsgSend+0x4c>
4001a7f0:	ebffbeba 	bl	4000a2e0 <_txe_queue_front_send>
4001a7f4:	e1a06000 	mov	r6, r0
4001a7f8:	ea000004 	b	4001a810 <CyU3PDmaMsgSend+0x44>
4001a7fc:	e1a02005 	mov	r2, r5
4001a800:	e1a01004 	mov	r1, r4
4001a804:	e59f000c 	ldr	r0, [pc, #12]	; 4001a818 <CyU3PDmaMsgSend+0x4c>
4001a808:	ebffbf04 	bl	4000a420 <_txe_queue_send>
4001a80c:	e1a06000 	mov	r6, r0
4001a810:	e1a00006 	mov	r0, r6
4001a814:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001a818:	4003192c 	.word	0x4003192c

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001a81c <CyU3PDmaMultiChannelHandleError>:
4001a81c:	e92d4070 	push	{r4, r5, r6, lr}
4001a820:	e1a04000 	mov	r4, r0
4001a824:	e3e01000 	mvn	r1, #0
4001a828:	e2840078 	add	r0, r4, #120	; 0x78
4001a82c:	ebffbde0 	bl	40009fb4 <_txe_mutex_get>
4001a830:	e1d400b4 	ldrh	r0, [r4, #4]
4001a834:	e3500005 	cmp	r0, #5
4001a838:	0a000002 	beq	4001a848 <CyU3PDmaMultiChannelHandleError+0x2c>
4001a83c:	e1d400b4 	ldrh	r0, [r4, #4]
4001a840:	e3500007 	cmp	r0, #7
4001a844:	1a00000d 	bne	4001a880 <CyU3PDmaMultiChannelHandleError+0x64>
4001a848:	e3a05000 	mov	r5, #0
4001a84c:	ea000005 	b	4001a868 <CyU3PDmaMultiChannelHandleError+0x4c>
4001a850:	e2841024 	add	r1, r4, #36	; 0x24
4001a854:	e0811085 	add	r1, r1, r5, lsl #1
4001a858:	e1d100b0 	ldrh	r0, [r1]
4001a85c:	ebffe883 	bl	40014a70 <CyU3PDmaSocketDisable>
4001a860:	e2850001 	add	r0, r5, #1
4001a864:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a868:	e1d400ba 	ldrh	r0, [r4, #10]
4001a86c:	e1500005 	cmp	r0, r5
4001a870:	cafffff6 	bgt	4001a850 <CyU3PDmaMultiChannelHandleError+0x34>
4001a874:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001a878:	ebffe87c 	bl	40014a70 <CyU3PDmaSocketDisable>
4001a87c:	ea00000c 	b	4001a8b4 <CyU3PDmaMultiChannelHandleError+0x98>
4001a880:	e3a05000 	mov	r5, #0
4001a884:	ea000005 	b	4001a8a0 <CyU3PDmaMultiChannelHandleError+0x84>
4001a888:	e284102c 	add	r1, r4, #44	; 0x2c
4001a88c:	e0811085 	add	r1, r1, r5, lsl #1
4001a890:	e1d100b0 	ldrh	r0, [r1]
4001a894:	ebffe875 	bl	40014a70 <CyU3PDmaSocketDisable>
4001a898:	e2850001 	add	r0, r5, #1
4001a89c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a8a0:	e1d400ba 	ldrh	r0, [r4, #10]
4001a8a4:	e1500005 	cmp	r0, r5
4001a8a8:	cafffff6 	bgt	4001a888 <CyU3PDmaMultiChannelHandleError+0x6c>
4001a8ac:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001a8b0:	ebffe86e 	bl	40014a70 <CyU3PDmaSocketDisable>
4001a8b4:	e3a02002 	mov	r2, #2
4001a8b8:	e3e01007 	mvn	r1, #7
4001a8bc:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a8c0:	ebffbd23 	bl	40009d54 <_txe_event_flags_set>
4001a8c4:	e3a02000 	mov	r2, #0
4001a8c8:	e3a01040 	mov	r1, #64	; 0x40
4001a8cc:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a8d0:	ebffbd1f 	bl	40009d54 <_txe_event_flags_set>
4001a8d4:	e3a00005 	mov	r0, #5
4001a8d8:	e5840000 	str	r0, [r4]
4001a8dc:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001a8e0:	e3500000 	cmp	r0, #0
4001a8e4:	0a000007 	beq	4001a908 <CyU3PDmaMultiChannelHandleError+0xec>
4001a8e8:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001a8ec:	e3100040 	tst	r0, #64	; 0x40
4001a8f0:	0a000004 	beq	4001a908 <CyU3PDmaMultiChannelHandleError+0xec>
4001a8f4:	e3a02000 	mov	r2, #0
4001a8f8:	e3a01040 	mov	r1, #64	; 0x40
4001a8fc:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001a900:	e1a00004 	mov	r0, r4
4001a904:	e12fff33 	blx	r3
4001a908:	e2840078 	add	r0, r4, #120	; 0x78
4001a90c:	ebffbddd 	bl	4000a088 <_txe_mutex_put>
4001a910:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001a914 <CyU3PDmaThreadEntry>:
4001a914:	e92d4070 	push	{r4, r5, r6, lr}
4001a918:	e24dd040 	sub	sp, sp, #64	; 0x40
4001a91c:	ea00003f 	b	4001aa20 <CyU3PDmaThreadEntry+0x10c>
4001a920:	e3e02000 	mvn	r2, #0
4001a924:	e1a0100d 	mov	r1, sp
4001a928:	e59f00f4 	ldr	r0, [pc, #244]	; 4001aa24 <CyU3PDmaThreadEntry+0x110>
4001a92c:	ebffbe93 	bl	4000a380 <_txe_queue_receive>
4001a930:	e1a05000 	mov	r5, r0
4001a934:	e3550000 	cmp	r5, #0
4001a938:	0a000000 	beq	4001a940 <CyU3PDmaThreadEntry+0x2c>
4001a93c:	ea000037 	b	4001aa20 <CyU3PDmaThreadEntry+0x10c>
4001a940:	e59d0000 	ldr	r0, [sp]
4001a944:	e20040ff 	and	r4, r0, #255	; 0xff
4001a948:	e3540000 	cmp	r4, #0
4001a94c:	0a000000 	beq	4001a954 <CyU3PDmaThreadEntry+0x40>
4001a950:	ea000032 	b	4001aa20 <CyU3PDmaThreadEntry+0x10c>
4001a954:	e59d6004 	ldr	r6, [sp, #4]
4001a958:	e1d600b4 	ldrh	r0, [r6, #4]
4001a95c:	e350000a 	cmp	r0, #10
4001a960:	308ff100 	addcc	pc, pc, r0, lsl #2
4001a964:	ea000028 	b	4001aa0c <CyU3PDmaThreadEntry+0xf8>
4001a968:	ea000008 	b	4001a990 <CyU3PDmaThreadEntry+0x7c>
4001a96c:	ea000009 	b	4001a998 <CyU3PDmaThreadEntry+0x84>
4001a970:	ea00000e 	b	4001a9b0 <CyU3PDmaThreadEntry+0x9c>
4001a974:	ea00000a 	b	4001a9a4 <CyU3PDmaThreadEntry+0x90>
4001a978:	ea00000b 	b	4001a9ac <CyU3PDmaThreadEntry+0x98>
4001a97c:	ea00000e 	b	4001a9bc <CyU3PDmaThreadEntry+0xa8>
4001a980:	ea000012 	b	4001a9d0 <CyU3PDmaThreadEntry+0xbc>
4001a984:	ea00000e 	b	4001a9c4 <CyU3PDmaThreadEntry+0xb0>
4001a988:	ea000012 	b	4001a9d8 <CyU3PDmaThreadEntry+0xc4>
4001a98c:	ea000014 	b	4001a9e4 <CyU3PDmaThreadEntry+0xd0>
4001a990:	e1a00000 	nop			; (mov r0, r0)
4001a994:	e1a00000 	nop			; (mov r0, r0)
4001a998:	e1a0000d 	mov	r0, sp
4001a99c:	ebfffa18 	bl	40019204 <CyU3PDmaIntHandler_TypeAuto>
4001a9a0:	ea00001b 	b	4001aa14 <CyU3PDmaThreadEntry+0x100>
4001a9a4:	e1a00000 	nop			; (mov r0, r0)
4001a9a8:	e1a00000 	nop			; (mov r0, r0)
4001a9ac:	e1a00000 	nop			; (mov r0, r0)
4001a9b0:	e1a0000d 	mov	r0, sp
4001a9b4:	ebfffaed 	bl	40019570 <CyU3PDmaIntHandler_TypeManual>
4001a9b8:	ea000015 	b	4001aa14 <CyU3PDmaThreadEntry+0x100>
4001a9bc:	e1a00000 	nop			; (mov r0, r0)
4001a9c0:	e1a00000 	nop			; (mov r0, r0)
4001a9c4:	e1a0000d 	mov	r0, sp
4001a9c8:	ebfffc4c 	bl	40019b00 <CyU3PDmaIntHandler_TypeManyToOne>
4001a9cc:	ea000010 	b	4001aa14 <CyU3PDmaThreadEntry+0x100>
4001a9d0:	e1a00000 	nop			; (mov r0, r0)
4001a9d4:	e1a00000 	nop			; (mov r0, r0)
4001a9d8:	e1a0000d 	mov	r0, sp
4001a9dc:	ebfffdbf 	bl	4001a0e0 <CyU3PDmaIntHandler_TypeOneToMany>
4001a9e0:	ea00000b 	b	4001aa14 <CyU3PDmaThreadEntry+0x100>
4001a9e4:	e1a00000 	nop			; (mov r0, r0)
4001a9e8:	e59f0038 	ldr	r0, [pc, #56]	; 4001aa28 <CyU3PDmaThreadEntry+0x114>
4001a9ec:	e5900000 	ldr	r0, [r0]
4001a9f0:	e3500000 	cmp	r0, #0
4001a9f4:	0a000003 	beq	4001aa08 <CyU3PDmaThreadEntry+0xf4>
4001a9f8:	e1a0000d 	mov	r0, sp
4001a9fc:	e59f1024 	ldr	r1, [pc, #36]	; 4001aa28 <CyU3PDmaThreadEntry+0x114>
4001aa00:	e5911000 	ldr	r1, [r1]
4001aa04:	e12fff31 	blx	r1
4001aa08:	ea000001 	b	4001aa14 <CyU3PDmaThreadEntry+0x100>
4001aa0c:	e1a00000 	nop			; (mov r0, r0)
4001aa10:	e1a00000 	nop			; (mov r0, r0)
4001aa14:	e1a00000 	nop			; (mov r0, r0)
4001aa18:	ebffbf86 	bl	4000a838 <_txe_thread_relinquish>
4001aa1c:	e1a00000 	nop			; (mov r0, r0)
4001aa20:	eaffffbe 	b	4001a920 <CyU3PDmaThreadEntry+0xc>
4001aa24:	4003192c 	.word	0x4003192c
4001aa28:	40030d18 	.word	0x40030d18

Disassembly of section i.CyU3PGpifInit:

4001aa2c <CyU3PGpifInit>:
4001aa2c:	e92d4010 	push	{r4, lr}
4001aa30:	e1a04000 	mov	r4, r0
4001aa34:	e3540000 	cmp	r4, #0
4001aa38:	0a000006 	beq	4001aa58 <CyU3PGpifInit+0x2c>
4001aa3c:	e59f005c 	ldr	r0, [pc, #92]	; 4001aaa0 <CyU3PGpifInit+0x74>
4001aa40:	e5900000 	ldr	r0, [r0]
4001aa44:	e1a00800 	lsl	r0, r0, #16
4001aa48:	e1a00820 	lsr	r0, r0, #16
4001aa4c:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001aa50:	e59f1048 	ldr	r1, [pc, #72]	; 4001aaa0 <CyU3PGpifInit+0x74>
4001aa54:	e5810000 	str	r0, [r1]
4001aa58:	e3e00000 	mvn	r0, #0
4001aa5c:	e59f1040 	ldr	r1, [pc, #64]	; 4001aaa4 <CyU3PGpifInit+0x78>
4001aa60:	e5810014 	str	r0, [r1, #20]
4001aa64:	e3a00000 	mov	r0, #0
4001aa68:	e5810018 	str	r0, [r1, #24]
4001aa6c:	e3a00e11 	mov	r0, #272	; 0x110
4001aa70:	e1c11300 	bic	r1, r1, r0, lsl #6
4001aa74:	e5810008 	str	r0, [r1, #8]
4001aa78:	ebffdf9e 	bl	400128f8 <CyU3PSysBarrierSync>
4001aa7c:	e59f001c 	ldr	r0, [pc, #28]	; 4001aaa0 <CyU3PGpifInit+0x74>
4001aa80:	e5900000 	ldr	r0, [r0]
4001aa84:	e1a00800 	lsl	r0, r0, #16
4001aa88:	e1a00820 	lsr	r0, r0, #16
4001aa8c:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001aa90:	e59f1008 	ldr	r1, [pc, #8]	; 4001aaa0 <CyU3PGpifInit+0x74>
4001aa94:	e5810000 	str	r0, [r1]
4001aa98:	e3a00000 	mov	r0, #0
4001aa9c:	e8bd8010 	pop	{r4, pc}
4001aaa0:	e0010000 	.word	0xe0010000
4001aaa4:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001aaa8 <CyU3PPibApplicationDefine>:
4001aaa8:	e92d4010 	push	{r4, lr}
4001aaac:	e24dd020 	sub	sp, sp, #32
4001aab0:	e3a00000 	mov	r0, #0
4001aab4:	e59f10dc 	ldr	r1, [pc, #220]	; 4001ab98 <CyU3PPibApplicationDefine+0xf0>
4001aab8:	e5810000 	str	r0, [r1]
4001aabc:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ab9c <CyU3PPibApplicationDefine+0xf4>
4001aac0:	e5810000 	str	r0, [r1]
4001aac4:	e59f10d4 	ldr	r1, [pc, #212]	; 4001aba0 <CyU3PPibApplicationDefine+0xf8>
4001aac8:	e5810000 	str	r0, [r1]
4001aacc:	e59f10d0 	ldr	r1, [pc, #208]	; 4001aba4 <CyU3PPibApplicationDefine+0xfc>
4001aad0:	e5810000 	str	r0, [r1]
4001aad4:	e59f10cc 	ldr	r1, [pc, #204]	; 4001aba8 <CyU3PPibApplicationDefine+0x100>
4001aad8:	e5810000 	str	r0, [r1]
4001aadc:	e59f10c8 	ldr	r1, [pc, #200]	; 4001abac <CyU3PPibApplicationDefine+0x104>
4001aae0:	e5810000 	str	r0, [r1]
4001aae4:	e59f10c4 	ldr	r1, [pc, #196]	; 4001abb0 <CyU3PPibApplicationDefine+0x108>
4001aae8:	e5810000 	str	r0, [r1]
4001aaec:	e59f10c0 	ldr	r1, [pc, #192]	; 4001abb4 <CyU3PPibApplicationDefine+0x10c>
4001aaf0:	e5810000 	str	r0, [r1]
4001aaf4:	e59f10bc 	ldr	r1, [pc, #188]	; 4001abb8 <CyU3PPibApplicationDefine+0x110>
4001aaf8:	e5810000 	str	r0, [r1]
4001aafc:	e3a00b01 	mov	r0, #1024	; 0x400
4001ab00:	ebffa2db 	bl	40003674 <CyU3PMemAlloc>
4001ab04:	e1a04000 	mov	r4, r0
4001ab08:	e3a030a8 	mov	r3, #168	; 0xa8
4001ab0c:	e3a02001 	mov	r2, #1
4001ab10:	e3a01000 	mov	r1, #0
4001ab14:	e3a00004 	mov	r0, #4
4001ab18:	e28dc00c 	add	ip, sp, #12
4001ab1c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001ab20:	e3a02b01 	mov	r2, #1024	; 0x400
4001ab24:	e1a03001 	mov	r3, r1
4001ab28:	e58d2004 	str	r2, [sp, #4]
4001ab2c:	e59f2088 	ldr	r2, [pc, #136]	; 4001abbc <CyU3PPibApplicationDefine+0x114>
4001ab30:	e28f1088 	add	r1, pc, #136	; 0x88
4001ab34:	e58d0008 	str	r0, [sp, #8]
4001ab38:	e59f0090 	ldr	r0, [pc, #144]	; 4001abd0 <CyU3PPibApplicationDefine+0x128>
4001ab3c:	e58d4000 	str	r4, [sp]
4001ab40:	ebffbe5e 	bl	4000a4c0 <_txe_thread_create>
4001ab44:	e3a02028 	mov	r2, #40	; 0x28
4001ab48:	e3a01000 	mov	r1, #0
4001ab4c:	e59f0080 	ldr	r0, [pc, #128]	; 4001abd4 <CyU3PPibApplicationDefine+0x12c>
4001ab50:	ebffbbdf 	bl	40009ad4 <_txe_event_flags_create>
4001ab54:	e3a02000 	mov	r2, #0
4001ab58:	e3a01010 	mov	r1, #16
4001ab5c:	e59f0070 	ldr	r0, [pc, #112]	; 4001abd4 <CyU3PPibApplicationDefine+0x12c>
4001ab60:	ebffbc7b 	bl	40009d54 <_txe_event_flags_set>
4001ab64:	e3a00040 	mov	r0, #64	; 0x40
4001ab68:	ebffa2c1 	bl	40003674 <CyU3PMemAlloc>
4001ab6c:	e1a04000 	mov	r4, r0
4001ab70:	e3a0303c 	mov	r3, #60	; 0x3c
4001ab74:	e3a02040 	mov	r2, #64	; 0x40
4001ab78:	e1cd20f0 	strd	r2, [sp]
4001ab7c:	e1a03004 	mov	r3, r4
4001ab80:	e3a02001 	mov	r2, #1
4001ab84:	e3a01000 	mov	r1, #0
4001ab88:	e59f0048 	ldr	r0, [pc, #72]	; 4001abd8 <CyU3PPibApplicationDefine+0x130>
4001ab8c:	ebffbd65 	bl	4000a128 <_txe_queue_create>
4001ab90:	e28dd020 	add	sp, sp, #32
4001ab94:	e8bd8010 	pop	{r4, pc}
4001ab98:	40030d1c 	.word	0x40030d1c
4001ab9c:	40030d20 	.word	0x40030d20
4001aba0:	40030d28 	.word	0x40030d28
4001aba4:	40030d40 	.word	0x40030d40
4001aba8:	40030d34 	.word	0x40030d34
4001abac:	40030d38 	.word	0x40030d38
4001abb0:	40030d2c 	.word	0x40030d2c
4001abb4:	40030d30 	.word	0x40030d30
4001abb8:	40030d24 	.word	0x40030d24
4001abbc:	4001ad90 	.word	0x4001ad90
4001abc0:	505f3330 	.word	0x505f3330
4001abc4:	545f4249 	.word	0x545f4249
4001abc8:	41455248 	.word	0x41455248
4001abcc:	00000044 	.word	0x00000044
4001abd0:	40031990 	.word	0x40031990
4001abd4:	40031968 	.word	0x40031968
4001abd8:	40031a38 	.word	0x40031a38

Disassembly of section i.CyU3PPibInit:

4001abdc <CyU3PPibInit>:
4001abdc:	e92d4070 	push	{r4, r5, r6, lr}
4001abe0:	e1a04000 	mov	r4, r0
4001abe4:	e1a05001 	mov	r5, r1
4001abe8:	e3a06000 	mov	r6, #0
4001abec:	ebffe724 	bl	40014884 <CyFx3DevIsGpifSupported>
4001abf0:	e3500000 	cmp	r0, #0
4001abf4:	1a000001 	bne	4001ac00 <CyU3PPibInit+0x24>
4001abf8:	e3a00046 	mov	r0, #70	; 0x46
4001abfc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ac00:	e59f0128 	ldr	r0, [pc, #296]	; 4001ad30 <CyU3PPibInit+0x154>
4001ac04:	e5900000 	ldr	r0, [r0]
4001ac08:	e3500000 	cmp	r0, #0
4001ac0c:	0a000001 	beq	4001ac18 <CyU3PPibInit+0x3c>
4001ac10:	e3a00043 	mov	r0, #67	; 0x43
4001ac14:	eafffff8 	b	4001abfc <CyU3PPibInit+0x20>
4001ac18:	e3550000 	cmp	r5, #0
4001ac1c:	1a000001 	bne	4001ac28 <CyU3PPibInit+0x4c>
4001ac20:	e3a00041 	mov	r0, #65	; 0x41
4001ac24:	eafffff4 	b	4001abfc <CyU3PPibInit+0x20>
4001ac28:	e5d5000c 	ldrb	r0, [r5, #12]
4001ac2c:	e3500004 	cmp	r0, #4
4001ac30:	ba000001 	blt	4001ac3c <CyU3PPibInit+0x60>
4001ac34:	e3a00040 	mov	r0, #64	; 0x40
4001ac38:	eaffffef 	b	4001abfc <CyU3PPibInit+0x20>
4001ac3c:	e1d500b0 	ldrh	r0, [r5]
4001ac40:	e3500002 	cmp	r0, #2
4001ac44:	ba000002 	blt	4001ac54 <CyU3PPibInit+0x78>
4001ac48:	e1d500b0 	ldrh	r0, [r5]
4001ac4c:	e3500b01 	cmp	r0, #1024	; 0x400
4001ac50:	da000001 	ble	4001ac5c <CyU3PPibInit+0x80>
4001ac54:	e3a00040 	mov	r0, #64	; 0x40
4001ac58:	eaffffe7 	b	4001abfc <CyU3PPibInit+0x20>
4001ac5c:	e3a00001 	mov	r0, #1
4001ac60:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ad30 <CyU3PPibInit+0x154>
4001ac64:	e5810000 	str	r0, [r1]
4001ac68:	e5d5000c 	ldrb	r0, [r5, #12]
4001ac6c:	e3a01b06 	mov	r1, #6144	; 0x1800
4001ac70:	e0010580 	and	r0, r1, r0, lsl #11
4001ac74:	e1d510b0 	ldrh	r1, [r5]
4001ac78:	e2411001 	sub	r1, r1, #1
4001ac7c:	e1a01b01 	lsl	r1, r1, #22
4001ac80:	e1a01b21 	lsr	r1, r1, #22
4001ac84:	e1800001 	orr	r0, r0, r1
4001ac88:	e59f10a4 	ldr	r1, [pc, #164]	; 4001ad34 <CyU3PPibInit+0x158>
4001ac8c:	e581000c 	str	r0, [r1, #12]
4001ac90:	e5950004 	ldr	r0, [r5, #4]
4001ac94:	e3500000 	cmp	r0, #0
4001ac98:	0a000003 	beq	4001acac <CyU3PPibInit+0xd0>
4001ac9c:	e1a00001 	mov	r0, r1
4001aca0:	e590000c 	ldr	r0, [r0, #12]
4001aca4:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001aca8:	e581000c 	str	r0, [r1, #12]
4001acac:	e59f0080 	ldr	r0, [pc, #128]	; 4001ad34 <CyU3PPibInit+0x158>
4001acb0:	e590000c 	ldr	r0, [r0, #12]
4001acb4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001acb8:	e59f1074 	ldr	r1, [pc, #116]	; 4001ad34 <CyU3PPibInit+0x158>
4001acbc:	e581000c 	str	r0, [r1, #12]
4001acc0:	ebffe755 	bl	40014a1c <CyFx3PibPowerOn>
4001acc4:	e5950008 	ldr	r0, [r5, #8]
4001acc8:	e3500000 	cmp	r0, #0
4001accc:	0a000000 	beq	4001acd4 <CyU3PPibInit+0xf8>
4001acd0:	ebffe732 	bl	400149a0 <CyFx3PibDllEnable>
4001acd4:	e59f005c 	ldr	r0, [pc, #92]	; 4001ad38 <CyU3PPibInit+0x15c>
4001acd8:	e5900000 	ldr	r0, [r0]
4001acdc:	e3500000 	cmp	r0, #0
4001ace0:	0a000003 	beq	4001acf4 <CyU3PPibInit+0x118>
4001ace4:	e1a00004 	mov	r0, r4
4001ace8:	eb0000d4 	bl	4001b040 <CyU3PPmmcInit>
4001acec:	e1a06000 	mov	r6, r0
4001acf0:	ea000002 	b	4001ad00 <CyU3PPibInit+0x124>
4001acf4:	e1a00004 	mov	r0, r4
4001acf8:	ebffff4b 	bl	4001aa2c <CyU3PGpifInit>
4001acfc:	e1a06000 	mov	r6, r0
4001ad00:	e3e00000 	mvn	r0, #0
4001ad04:	e59f1030 	ldr	r1, [pc, #48]	; 4001ad3c <CyU3PPibInit+0x160>
4001ad08:	e5810024 	str	r0, [r1, #36]	; 0x24
4001ad0c:	e3560000 	cmp	r6, #0
4001ad10:	1a000004 	bne	4001ad28 <CyU3PPibInit+0x14c>
4001ad14:	eb000009 	bl	4001ad40 <CyU3PPibSocketInit>
4001ad18:	e3a00007 	mov	r0, #7
4001ad1c:	eb001c4a 	bl	40021e4c <CyU3PVicEnableInt>
4001ad20:	e3a00006 	mov	r0, #6
4001ad24:	eb001c48 	bl	40021e4c <CyU3PVicEnableInt>
4001ad28:	e1a00006 	mov	r0, r6
4001ad2c:	eaffffb2 	b	4001abfc <CyU3PPibInit+0x20>
4001ad30:	40030d1c 	.word	0x40030d1c
4001ad34:	e0052000 	.word	0xe0052000
4001ad38:	40030d20 	.word	0x40030d20
4001ad3c:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001ad40 <CyU3PPibSocketInit>:
4001ad40:	e3a00000 	mov	r0, #0
4001ad44:	ea00000d 	b	4001ad80 <CyU3PPibSocketInit+0x40>
4001ad48:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001ad4c:	e59f2038 	ldr	r2, [pc, #56]	; 4001ad8c <CyU3PPibSocketInit+0x4c>
4001ad50:	e0822380 	add	r2, r2, r0, lsl #7
4001ad54:	e582100c 	str	r1, [r2, #12]
4001ad58:	e3e01000 	mvn	r1, #0
4001ad5c:	e59f2028 	ldr	r2, [pc, #40]	; 4001ad8c <CyU3PPibSocketInit+0x4c>
4001ad60:	e0822380 	add	r2, r2, r0, lsl #7
4001ad64:	e5821010 	str	r1, [r2, #16]
4001ad68:	e3a01000 	mov	r1, #0
4001ad6c:	e59f2018 	ldr	r2, [pc, #24]	; 4001ad8c <CyU3PPibSocketInit+0x4c>
4001ad70:	e0822380 	add	r2, r2, r0, lsl #7
4001ad74:	e5821014 	str	r1, [r2, #20]
4001ad78:	e2801001 	add	r1, r0, #1
4001ad7c:	e20100ff 	and	r0, r1, #255	; 0xff
4001ad80:	e3500020 	cmp	r0, #32
4001ad84:	baffffef 	blt	4001ad48 <CyU3PPibSocketInit+0x8>
4001ad88:	e12fff1e 	bx	lr
4001ad8c:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001ad90 <CyU3PPibThreadEntry>:
4001ad90:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001ad94:	e3a00005 	mov	r0, #5
4001ad98:	ebffe25e 	bl	40013718 <CyU3PSysModuleInitCompleteEvt>
4001ad9c:	e59f0278 	ldr	r0, [pc, #632]	; 4001b01c <CyU3PPibThreadEntry+0x28c>
4001ada0:	e5900000 	ldr	r0, [r0]
4001ada4:	e1a00800 	lsl	r0, r0, #16
4001ada8:	e1a00820 	lsr	r0, r0, #16
4001adac:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001adb0:	e59f1264 	ldr	r1, [pc, #612]	; 4001b01c <CyU3PPibThreadEntry+0x28c>
4001adb4:	e5810000 	str	r0, [r1]
4001adb8:	e3a000e1 	mov	r0, #225	; 0xe1
4001adbc:	e59f125c 	ldr	r1, [pc, #604]	; 4001b020 <CyU3PPibThreadEntry+0x290>
4001adc0:	e5810000 	str	r0, [r1]
4001adc4:	ea000093 	b	4001b018 <CyU3PPibThreadEntry+0x288>
4001adc8:	e3e03000 	mvn	r3, #0
4001adcc:	e58d3000 	str	r3, [sp]
4001add0:	e28d3008 	add	r3, sp, #8
4001add4:	e3a02001 	mov	r2, #1
4001add8:	e59f0240 	ldr	r0, [pc, #576]	; 4001b020 <CyU3PPibThreadEntry+0x290>
4001addc:	e5901000 	ldr	r1, [r0]
4001ade0:	e59f023c 	ldr	r0, [pc, #572]	; 4001b024 <CyU3PPibThreadEntry+0x294>
4001ade4:	ebffbbaa 	bl	40009c94 <_txe_event_flags_get>
4001ade8:	e1a04000 	mov	r4, r0
4001adec:	e59f122c 	ldr	r1, [pc, #556]	; 4001b020 <CyU3PPibThreadEntry+0x290>
4001adf0:	e59d0008 	ldr	r0, [sp, #8]
4001adf4:	e5911000 	ldr	r1, [r1]
4001adf8:	e0000001 	and	r0, r0, r1
4001adfc:	e58d0008 	str	r0, [sp, #8]
4001ae00:	e3540000 	cmp	r4, #0
4001ae04:	0a000000 	beq	4001ae0c <CyU3PPibThreadEntry+0x7c>
4001ae08:	ea000082 	b	4001b018 <CyU3PPibThreadEntry+0x288>
4001ae0c:	ea00007d 	b	4001b008 <CyU3PPibThreadEntry+0x278>
4001ae10:	e59d0008 	ldr	r0, [sp, #8]
4001ae14:	e3100020 	tst	r0, #32
4001ae18:	0a000017 	beq	4001ae7c <CyU3PPibThreadEntry+0xec>
4001ae1c:	e59f0204 	ldr	r0, [pc, #516]	; 4001b028 <CyU3PPibThreadEntry+0x298>
4001ae20:	e5900000 	ldr	r0, [r0]
4001ae24:	e3500000 	cmp	r0, #0
4001ae28:	0a00000b 	beq	4001ae5c <CyU3PPibThreadEntry+0xcc>
4001ae2c:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b02c <CyU3PPibThreadEntry+0x29c>
4001ae30:	e5900000 	ldr	r0, [r0]
4001ae34:	e3100002 	tst	r0, #2
4001ae38:	0a000007 	beq	4001ae5c <CyU3PPibThreadEntry+0xcc>
4001ae3c:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b030 <CyU3PPibThreadEntry+0x2a0>
4001ae40:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001ae44:	e1a01800 	lsl	r1, r0, #16
4001ae48:	e1a01821 	lsr	r1, r1, #16
4001ae4c:	e3a00002 	mov	r0, #2
4001ae50:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b028 <CyU3PPibThreadEntry+0x298>
4001ae54:	e5922000 	ldr	r2, [r2]
4001ae58:	e12fff32 	blx	r2
4001ae5c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b01c <CyU3PPibThreadEntry+0x28c>
4001ae60:	e5900000 	ldr	r0, [r0]
4001ae64:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001ae68:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b01c <CyU3PPibThreadEntry+0x28c>
4001ae6c:	e5810000 	str	r0, [r1]
4001ae70:	e59d0008 	ldr	r0, [sp, #8]
4001ae74:	e3c00020 	bic	r0, r0, #32
4001ae78:	e58d0008 	str	r0, [sp, #8]
4001ae7c:	e59d0008 	ldr	r0, [sp, #8]
4001ae80:	e3100040 	tst	r0, #64	; 0x40
4001ae84:	0a000027 	beq	4001af28 <CyU3PPibThreadEntry+0x198>
4001ae88:	e59f0198 	ldr	r0, [pc, #408]	; 4001b028 <CyU3PPibThreadEntry+0x298>
4001ae8c:	e5900000 	ldr	r0, [r0]
4001ae90:	e3500000 	cmp	r0, #0
4001ae94:	0a000017 	beq	4001aef8 <CyU3PPibThreadEntry+0x168>
4001ae98:	e59f018c 	ldr	r0, [pc, #396]	; 4001b02c <CyU3PPibThreadEntry+0x29c>
4001ae9c:	e5900000 	ldr	r0, [r0]
4001aea0:	e3100004 	tst	r0, #4
4001aea4:	0a000013 	beq	4001aef8 <CyU3PPibThreadEntry+0x168>
4001aea8:	e59f016c 	ldr	r0, [pc, #364]	; 4001b01c <CyU3PPibThreadEntry+0x28c>
4001aeac:	e5900020 	ldr	r0, [r0, #32]
4001aeb0:	e1a05800 	lsl	r5, r0, #16
4001aeb4:	e1a05825 	lsr	r5, r5, #16
4001aeb8:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001aebc:	e3500a02 	cmp	r0, #8192	; 0x2000
4001aec0:	1a000000 	bne	4001aec8 <CyU3PPibThreadEntry+0x138>
4001aec4:	e3a05a02 	mov	r5, #8192	; 0x2000
4001aec8:	e59f0164 	ldr	r0, [pc, #356]	; 4001b034 <CyU3PPibThreadEntry+0x2a4>
4001aecc:	e5900000 	ldr	r0, [r0]
4001aed0:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001aed4:	1a000001 	bne	4001aee0 <CyU3PPibThreadEntry+0x150>
4001aed8:	e3550004 	cmp	r5, #4
4001aedc:	da000004 	ble	4001aef4 <CyU3PPibThreadEntry+0x164>
4001aee0:	e1a01005 	mov	r1, r5
4001aee4:	e3a00004 	mov	r0, #4
4001aee8:	e59f2138 	ldr	r2, [pc, #312]	; 4001b028 <CyU3PPibThreadEntry+0x298>
4001aeec:	e5922000 	ldr	r2, [r2]
4001aef0:	e12fff32 	blx	r2
4001aef4:	e1a00000 	nop			; (mov r0, r0)
4001aef8:	e59f012c 	ldr	r0, [pc, #300]	; 4001b02c <CyU3PPibThreadEntry+0x29c>
4001aefc:	e5900000 	ldr	r0, [r0]
4001af00:	e3100004 	tst	r0, #4
4001af04:	0a000004 	beq	4001af1c <CyU3PPibThreadEntry+0x18c>
4001af08:	e59f010c 	ldr	r0, [pc, #268]	; 4001b01c <CyU3PPibThreadEntry+0x28c>
4001af0c:	e5900008 	ldr	r0, [r0, #8]
4001af10:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001af14:	e59f1100 	ldr	r1, [pc, #256]	; 4001b01c <CyU3PPibThreadEntry+0x28c>
4001af18:	e5810008 	str	r0, [r1, #8]
4001af1c:	e59d0008 	ldr	r0, [sp, #8]
4001af20:	e3c00040 	bic	r0, r0, #64	; 0x40
4001af24:	e58d0008 	str	r0, [sp, #8]
4001af28:	e59d0008 	ldr	r0, [sp, #8]
4001af2c:	e3100080 	tst	r0, #128	; 0x80
4001af30:	0a000011 	beq	4001af7c <CyU3PPibThreadEntry+0x1ec>
4001af34:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b028 <CyU3PPibThreadEntry+0x298>
4001af38:	e5900000 	ldr	r0, [r0]
4001af3c:	e3500000 	cmp	r0, #0
4001af40:	0a00000a 	beq	4001af70 <CyU3PPibThreadEntry+0x1e0>
4001af44:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b02c <CyU3PPibThreadEntry+0x29c>
4001af48:	e5900000 	ldr	r0, [r0]
4001af4c:	e3100001 	tst	r0, #1
4001af50:	0a000006 	beq	4001af70 <CyU3PPibThreadEntry+0x1e0>
4001af54:	ebffe6ab 	bl	40014a08 <CyFx3PibGetDllStatus>
4001af58:	e1a05000 	mov	r5, r0
4001af5c:	e1a01000 	mov	r1, r0
4001af60:	e3a00001 	mov	r0, #1
4001af64:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b028 <CyU3PPibThreadEntry+0x298>
4001af68:	e5922000 	ldr	r2, [r2]
4001af6c:	e12fff32 	blx	r2
4001af70:	e59d0008 	ldr	r0, [sp, #8]
4001af74:	e3c00080 	bic	r0, r0, #128	; 0x80
4001af78:	e58d0008 	str	r0, [sp, #8]
4001af7c:	e59d0008 	ldr	r0, [sp, #8]
4001af80:	e3100001 	tst	r0, #1
4001af84:	0a00001f 	beq	4001b008 <CyU3PPibThreadEntry+0x278>
4001af88:	e3a02000 	mov	r2, #0
4001af8c:	e28d1004 	add	r1, sp, #4
4001af90:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b038 <CyU3PPibThreadEntry+0x2a8>
4001af94:	ebffbcf9 	bl	4000a380 <_txe_queue_receive>
4001af98:	e1a04000 	mov	r4, r0
4001af9c:	e3540000 	cmp	r4, #0
4001afa0:	1a000015 	bne	4001affc <CyU3PPibThreadEntry+0x26c>
4001afa4:	e1dd00b4 	ldrh	r0, [sp, #4]
4001afa8:	e2000901 	and	r0, r0, #16384	; 0x4000
4001afac:	e1b00720 	lsrs	r0, r0, #14
4001afb0:	0a000014 	beq	4001b008 <CyU3PPibThreadEntry+0x278>
4001afb4:	e1dd00b4 	ldrh	r0, [sp, #4]
4001afb8:	e20000ff 	and	r0, r0, #255	; 0xff
4001afbc:	e3500004 	cmp	r0, #4
4001afc0:	1a00000a 	bne	4001aff0 <CyU3PPibThreadEntry+0x260>
4001afc4:	e59f0070 	ldr	r0, [pc, #112]	; 4001b03c <CyU3PPibThreadEntry+0x2ac>
4001afc8:	e5900000 	ldr	r0, [r0]
4001afcc:	e3500000 	cmp	r0, #0
4001afd0:	0a000005 	beq	4001afec <CyU3PPibThreadEntry+0x25c>
4001afd4:	e1dd20b6 	ldrh	r2, [sp, #6]
4001afd8:	e1a01442 	asr	r1, r2, #8
4001afdc:	e20200ff 	and	r0, r2, #255	; 0xff
4001afe0:	e59f2054 	ldr	r2, [pc, #84]	; 4001b03c <CyU3PPibThreadEntry+0x2ac>
4001afe4:	e5922000 	ldr	r2, [r2]
4001afe8:	e12fff32 	blx	r2
4001afec:	ea000001 	b	4001aff8 <CyU3PPibThreadEntry+0x268>
4001aff0:	e1a00000 	nop			; (mov r0, r0)
4001aff4:	e1a00000 	nop			; (mov r0, r0)
4001aff8:	ea000002 	b	4001b008 <CyU3PPibThreadEntry+0x278>
4001affc:	e59d0008 	ldr	r0, [sp, #8]
4001b000:	e3c00001 	bic	r0, r0, #1
4001b004:	e58d0008 	str	r0, [sp, #8]
4001b008:	e59d0008 	ldr	r0, [sp, #8]
4001b00c:	e3500000 	cmp	r0, #0
4001b010:	1affff7e 	bne	4001ae10 <CyU3PPibThreadEntry+0x80>
4001b014:	e1a00000 	nop			; (mov r0, r0)
4001b018:	eaffff6a 	b	4001adc8 <CyU3PPibThreadEntry+0x38>
4001b01c:	e0010000 	.word	0xe0010000
4001b020:	40030d28 	.word	0x40030d28
4001b024:	40031968 	.word	0x40031968
4001b028:	40030d2c 	.word	0x40030d2c
4001b02c:	40030d30 	.word	0x40030d30
4001b030:	e0017000 	.word	0xe0017000
4001b034:	e0014000 	.word	0xe0014000
4001b038:	40031a38 	.word	0x40031a38
4001b03c:	40030d34 	.word	0x40030d34

Disassembly of section i.CyU3PPmmcInit:

4001b040 <CyU3PPmmcInit>:
4001b040:	e92d4010 	push	{r4, lr}
4001b044:	e1a04000 	mov	r4, r0
4001b048:	e3540000 	cmp	r4, #0
4001b04c:	0a000042 	beq	4001b15c <CyU3PPmmcInit+0x11c>
4001b050:	e3e00000 	mvn	r0, #0
4001b054:	e59f1148 	ldr	r1, [pc, #328]	; 4001b1a4 <CyU3PPmmcInit+0x164>
4001b058:	e581000c 	str	r0, [r1, #12]
4001b05c:	e3a00000 	mov	r0, #0
4001b060:	e5810010 	str	r0, [r1, #16]
4001b064:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b068:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b06c:	e3a00000 	mov	r0, #0
4001b070:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b074:	e5810008 	str	r0, [r1, #8]
4001b078:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b07c:	e5900000 	ldr	r0, [r0]
4001b080:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b084:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b088:	e5810000 	str	r0, [r1]
4001b08c:	e59f0114 	ldr	r0, [pc, #276]	; 4001b1a8 <CyU3PPmmcInit+0x168>
4001b090:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b094:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b098:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b09c:	e3a00001 	mov	r0, #1
4001b0a0:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b0a4:	e59f0100 	ldr	r0, [pc, #256]	; 4001b1ac <CyU3PPmmcInit+0x16c>
4001b0a8:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b0ac:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b1b0 <CyU3PPmmcInit+0x170>
4001b0b0:	e5900000 	ldr	r0, [r0]
4001b0b4:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b0b8:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b1b0 <CyU3PPmmcInit+0x170>
4001b0bc:	e5900004 	ldr	r0, [r0, #4]
4001b0c0:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b0c4:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b1b0 <CyU3PPmmcInit+0x170>
4001b0c8:	e5900008 	ldr	r0, [r0, #8]
4001b0cc:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b0d0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b1b0 <CyU3PPmmcInit+0x170>
4001b0d4:	e590000c 	ldr	r0, [r0, #12]
4001b0d8:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b0dc:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b1b4 <CyU3PPmmcInit+0x174>
4001b0e0:	e5900000 	ldr	r0, [r0]
4001b0e4:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b0e8:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b1b4 <CyU3PPmmcInit+0x174>
4001b0ec:	e5900004 	ldr	r0, [r0, #4]
4001b0f0:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b0f4:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b1b4 <CyU3PPmmcInit+0x174>
4001b0f8:	e5900008 	ldr	r0, [r0, #8]
4001b0fc:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b100:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b1b4 <CyU3PPmmcInit+0x174>
4001b104:	e590000c 	ldr	r0, [r0, #12]
4001b108:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b10c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b1b4 <CyU3PPmmcInit+0x174>
4001b110:	e5900010 	ldr	r0, [r0, #16]
4001b114:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b118:	e59f0094 	ldr	r0, [pc, #148]	; 4001b1b4 <CyU3PPmmcInit+0x174>
4001b11c:	e5900014 	ldr	r0, [r0, #20]
4001b120:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b124:	e59f008c 	ldr	r0, [pc, #140]	; 4001b1b8 <CyU3PPmmcInit+0x178>
4001b128:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b12c:	e3a00000 	mov	r0, #0
4001b130:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b134:	e3a00c02 	mov	r0, #512	; 0x200
4001b138:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b13c:	e3a00000 	mov	r0, #0
4001b140:	e5810004 	str	r0, [r1, #4]
4001b144:	e59f0070 	ldr	r0, [pc, #112]	; 4001b1bc <CyU3PPmmcInit+0x17c>
4001b148:	e5810010 	str	r0, [r1, #16]
4001b14c:	e3a00008 	mov	r0, #8
4001b150:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b154:	e5810008 	str	r0, [r1, #8]
4001b158:	ea000002 	b	4001b168 <CyU3PPmmcInit+0x128>
4001b15c:	e3a00000 	mov	r0, #0
4001b160:	e59f103c 	ldr	r1, [pc, #60]	; 4001b1a4 <CyU3PPmmcInit+0x164>
4001b164:	e5810010 	str	r0, [r1, #16]
4001b168:	e59f0034 	ldr	r0, [pc, #52]	; 4001b1a4 <CyU3PPmmcInit+0x164>
4001b16c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b170:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b174:	e59f1028 	ldr	r1, [pc, #40]	; 4001b1a4 <CyU3PPmmcInit+0x164>
4001b178:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b17c:	ebffdddd 	bl	400128f8 <CyU3PSysBarrierSync>
4001b180:	e59f0038 	ldr	r0, [pc, #56]	; 4001b1c0 <CyU3PPmmcInit+0x180>
4001b184:	e5900000 	ldr	r0, [r0]
4001b188:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b18c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b190:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b194:	e59f1024 	ldr	r1, [pc, #36]	; 4001b1c0 <CyU3PPmmcInit+0x180>
4001b198:	e5810000 	str	r0, [r1]
4001b19c:	e3a00000 	mov	r0, #0
4001b1a0:	e8bd8010 	pop	{r4, pc}
4001b1a4:	e0011000 	.word	0xe0011000
4001b1a8:	00019201 	.word	0x00019201
4001b1ac:	04010302 	.word	0x04010302
4001b1b0:	40011c28 	.word	0x40011c28
4001b1b4:	40011c38 	.word	0x40011c38
4001b1b8:	00ff8080 	.word	0x00ff8080
4001b1bc:	400a00fb 	.word	0x400a00fb
4001b1c0:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b1c4 <CyU3PMboxReset>:
4001b1c4:	e92d4010 	push	{r4, lr}
4001b1c8:	e3a00002 	mov	r0, #2
4001b1cc:	e59f1028 	ldr	r1, [pc, #40]	; 4001b1fc <CyU3PMboxReset+0x38>
4001b1d0:	e5810004 	str	r0, [r1, #4]
4001b1d4:	e3a02002 	mov	r2, #2
4001b1d8:	e3a01010 	mov	r1, #16
4001b1dc:	e59f001c 	ldr	r0, [pc, #28]	; 4001b200 <CyU3PMboxReset+0x3c>
4001b1e0:	ebffbadb 	bl	40009d54 <_txe_event_flags_set>
4001b1e4:	e59f0010 	ldr	r0, [pc, #16]	; 4001b1fc <CyU3PMboxReset+0x38>
4001b1e8:	e5900008 	ldr	r0, [r0, #8]
4001b1ec:	e3800003 	orr	r0, r0, #3
4001b1f0:	e59f1004 	ldr	r1, [pc, #4]	; 4001b1fc <CyU3PMboxReset+0x38>
4001b1f4:	e5810008 	str	r0, [r1, #8]
4001b1f8:	e8bd8010 	pop	{r4, pc}
4001b1fc:	e0010000 	.word	0xe0010000
4001b200:	40031968 	.word	0x40031968

Disassembly of section i.CyU3PGpifConfigure:

4001b204 <CyU3PGpifConfigure>:
4001b204:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b208:	e1a04000 	mov	r4, r0
4001b20c:	e1a05001 	mov	r5, r1
4001b210:	e59f609c 	ldr	r6, [pc, #156]	; 4001b2b4 <CyU3PGpifConfigure+0xb0>
4001b214:	e3540000 	cmp	r4, #0
4001b218:	0a000001 	beq	4001b224 <CyU3PGpifConfigure+0x20>
4001b21c:	e3550000 	cmp	r5, #0
4001b220:	1a000001 	bne	4001b22c <CyU3PGpifConfigure+0x28>
4001b224:	e3a00040 	mov	r0, #64	; 0x40
4001b228:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b22c:	ebffe585 	bl	40014848 <CyFx3DevIsGpifConfigurable>
4001b230:	e3500000 	cmp	r0, #0
4001b234:	1a000001 	bne	4001b240 <CyU3PGpifConfigure+0x3c>
4001b238:	e3a00046 	mov	r0, #70	; 0x46
4001b23c:	eafffff9 	b	4001b228 <CyU3PGpifConfigure+0x24>
4001b240:	ebffe576 	bl	40014820 <CyFx3DevIsGpif32Supported>
4001b244:	e3500000 	cmp	r0, #0
4001b248:	1a000007 	bne	4001b26c <CyU3PGpifConfigure+0x68>
4001b24c:	e3540001 	cmp	r4, #1
4001b250:	da000005 	ble	4001b26c <CyU3PGpifConfigure+0x68>
4001b254:	e5950004 	ldr	r0, [r5, #4]
4001b258:	e200000c 	and	r0, r0, #12
4001b25c:	e3500004 	cmp	r0, #4
4001b260:	9a000001 	bls	4001b26c <CyU3PGpifConfigure+0x68>
4001b264:	e3a00046 	mov	r0, #70	; 0x46
4001b268:	eaffffee 	b	4001b228 <CyU3PGpifConfigure+0x24>
4001b26c:	e59f0044 	ldr	r0, [pc, #68]	; 4001b2b8 <CyU3PGpifConfigure+0xb4>
4001b270:	e5900000 	ldr	r0, [r0]
4001b274:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b278:	0a000001 	beq	4001b284 <CyU3PGpifConfigure+0x80>
4001b27c:	e3a00043 	mov	r0, #67	; 0x43
4001b280:	eaffffe8 	b	4001b228 <CyU3PGpifConfigure+0x24>
4001b284:	e3a07001 	mov	r7, #1
4001b288:	ea000002 	b	4001b298 <CyU3PGpifConfigure+0x94>
4001b28c:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b290:	e4860004 	str	r0, [r6], #4
4001b294:	e2877001 	add	r7, r7, #1
4001b298:	e1570004 	cmp	r7, r4
4001b29c:	bafffffa 	blt	4001b28c <CyU3PGpifConfigure+0x88>
4001b2a0:	e5950000 	ldr	r0, [r5]
4001b2a4:	e59f100c 	ldr	r1, [pc, #12]	; 4001b2b8 <CyU3PGpifConfigure+0xb4>
4001b2a8:	e5810000 	str	r0, [r1]
4001b2ac:	e3a00000 	mov	r0, #0
4001b2b0:	eaffffdc 	b	4001b228 <CyU3PGpifConfigure+0x24>
4001b2b4:	e0014004 	.word	0xe0014004
4001b2b8:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b2bc <CyU3PGpifDisable>:
4001b2bc:	e92d4070 	push	{r4, r5, r6, lr}
4001b2c0:	e1a04000 	mov	r4, r0
4001b2c4:	e59f0070 	ldr	r0, [pc, #112]	; 4001b33c <CyU3PGpifDisable+0x80>
4001b2c8:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b2cc:	e3800002 	orr	r0, r0, #2
4001b2d0:	e59f1064 	ldr	r1, [pc, #100]	; 4001b33c <CyU3PGpifDisable+0x80>
4001b2d4:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b2d8:	e3a0000a 	mov	r0, #10
4001b2dc:	ebffe057 	bl	40013440 <CyU3PBusyWait>
4001b2e0:	e3a00000 	mov	r0, #0
4001b2e4:	e59f1050 	ldr	r1, [pc, #80]	; 4001b33c <CyU3PGpifDisable+0x80>
4001b2e8:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b2ec:	e3540000 	cmp	r4, #0
4001b2f0:	0a000010 	beq	4001b338 <CyU3PGpifDisable+0x7c>
4001b2f4:	e3a00e22 	mov	r0, #544	; 0x220
4001b2f8:	e5810000 	str	r0, [r1]
4001b2fc:	e3a05000 	mov	r5, #0
4001b300:	ea000007 	b	4001b324 <CyU3PGpifDisable+0x68>
4001b304:	e3a00000 	mov	r0, #0
4001b308:	e59f1030 	ldr	r1, [pc, #48]	; 4001b340 <CyU3PGpifDisable+0x84>
4001b30c:	e0811205 	add	r1, r1, r5, lsl #4
4001b310:	e5810008 	str	r0, [r1, #8]
4001b314:	e59f1028 	ldr	r1, [pc, #40]	; 4001b344 <CyU3PGpifDisable+0x88>
4001b318:	e0811205 	add	r1, r1, r5, lsl #4
4001b31c:	e5810008 	str	r0, [r1, #8]
4001b320:	e2855001 	add	r5, r5, #1
4001b324:	e3550c01 	cmp	r5, #256	; 0x100
4001b328:	3afffff5 	bcc	4001b304 <CyU3PGpifDisable+0x48>
4001b32c:	e59f1014 	ldr	r1, [pc, #20]	; 4001b348 <CyU3PGpifDisable+0x8c>
4001b330:	e3a0004c 	mov	r0, #76	; 0x4c
4001b334:	ebffffb2 	bl	4001b204 <CyU3PGpifConfigure>
4001b338:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b33c:	e0014000 	.word	0xe0014000
4001b340:	e0015000 	.word	0xe0015000
4001b344:	e0016000 	.word	0xe0016000
4001b348:	40011c50 	.word	0x40011c50

Disassembly of section i.CyU3PGpifLoad:

4001b34c <CyU3PGpifLoad>:
4001b34c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b350:	e1a04000 	mov	r4, r0
4001b354:	e59f7264 	ldr	r7, [pc, #612]	; 4001b5c0 <CyU3PGpifLoad+0x274>
4001b358:	e3540000 	cmp	r4, #0
4001b35c:	0a000008 	beq	4001b384 <CyU3PGpifLoad+0x38>
4001b360:	e1d400b0 	ldrh	r0, [r4]
4001b364:	e3500000 	cmp	r0, #0
4001b368:	1a000007 	bne	4001b38c <CyU3PGpifLoad+0x40>
4001b36c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b370:	e3500000 	cmp	r0, #0
4001b374:	1a000004 	bne	4001b38c <CyU3PGpifLoad+0x40>
4001b378:	e1d401b4 	ldrh	r0, [r4, #20]
4001b37c:	e3500000 	cmp	r0, #0
4001b380:	1a000001 	bne	4001b38c <CyU3PGpifLoad+0x40>
4001b384:	e3a00040 	mov	r0, #64	; 0x40
4001b388:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b38c:	e59f0230 	ldr	r0, [pc, #560]	; 4001b5c4 <CyU3PGpifLoad+0x278>
4001b390:	e5900000 	ldr	r0, [r0]
4001b394:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b398:	1a000003 	bne	4001b3ac <CyU3PGpifLoad+0x60>
4001b39c:	e59f0220 	ldr	r0, [pc, #544]	; 4001b5c4 <CyU3PGpifLoad+0x278>
4001b3a0:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b3a4:	e3100001 	tst	r0, #1
4001b3a8:	0a000001 	beq	4001b3b4 <CyU3PGpifLoad+0x68>
4001b3ac:	e3a00043 	mov	r0, #67	; 0x43
4001b3b0:	eafffff4 	b	4001b388 <CyU3PGpifLoad+0x3c>
4001b3b4:	ebffe523 	bl	40014848 <CyFx3DevIsGpifConfigurable>
4001b3b8:	e3500000 	cmp	r0, #0
4001b3bc:	1a000001 	bne	4001b3c8 <CyU3PGpifLoad+0x7c>
4001b3c0:	e3a00046 	mov	r0, #70	; 0x46
4001b3c4:	eaffffef 	b	4001b388 <CyU3PGpifLoad+0x3c>
4001b3c8:	ebffe514 	bl	40014820 <CyFx3DevIsGpif32Supported>
4001b3cc:	e3500000 	cmp	r0, #0
4001b3d0:	1a00000c 	bne	4001b408 <CyU3PGpifLoad+0xbc>
4001b3d4:	e1d401b4 	ldrh	r0, [r4, #20]
4001b3d8:	e3500002 	cmp	r0, #2
4001b3dc:	ba000009 	blt	4001b408 <CyU3PGpifLoad+0xbc>
4001b3e0:	e5940018 	ldr	r0, [r4, #24]
4001b3e4:	e3500000 	cmp	r0, #0
4001b3e8:	0a000006 	beq	4001b408 <CyU3PGpifLoad+0xbc>
4001b3ec:	e5940018 	ldr	r0, [r4, #24]
4001b3f0:	e5900004 	ldr	r0, [r0, #4]
4001b3f4:	e200000c 	and	r0, r0, #12
4001b3f8:	e3500004 	cmp	r0, #4
4001b3fc:	9a000001 	bls	4001b408 <CyU3PGpifLoad+0xbc>
4001b400:	e3a00046 	mov	r0, #70	; 0x46
4001b404:	eaffffdf 	b	4001b388 <CyU3PGpifLoad+0x3c>
4001b408:	e1d400b0 	ldrh	r0, [r4]
4001b40c:	e3500000 	cmp	r0, #0
4001b410:	0a00003b 	beq	4001b504 <CyU3PGpifLoad+0x1b8>
4001b414:	e5940004 	ldr	r0, [r4, #4]
4001b418:	e3500000 	cmp	r0, #0
4001b41c:	1a000001 	bne	4001b428 <CyU3PGpifLoad+0xdc>
4001b420:	e3a00040 	mov	r0, #64	; 0x40
4001b424:	eaffffd7 	b	4001b388 <CyU3PGpifLoad+0x3c>
4001b428:	e3a05000 	mov	r5, #0
4001b42c:	ea000031 	b	4001b4f8 <CyU3PGpifLoad+0x1ac>
4001b430:	e5940008 	ldr	r0, [r4, #8]
4001b434:	e3500000 	cmp	r0, #0
4001b438:	0a000002 	beq	4001b448 <CyU3PGpifLoad+0xfc>
4001b43c:	e5940008 	ldr	r0, [r4, #8]
4001b440:	e7d00005 	ldrb	r0, [r0, r5]
4001b444:	ea000000 	b	4001b44c <CyU3PGpifLoad+0x100>
4001b448:	e1a00005 	mov	r0, r5
4001b44c:	e1a06800 	lsl	r6, r0, #16
4001b450:	e1a06826 	lsr	r6, r6, #16
4001b454:	e0861086 	add	r1, r6, r6, lsl #1
4001b458:	e5940004 	ldr	r0, [r4, #4]
4001b45c:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b460:	e59f1160 	ldr	r1, [pc, #352]	; 4001b5c8 <CyU3PGpifLoad+0x27c>
4001b464:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b468:	e0861086 	add	r1, r6, r6, lsl #1
4001b46c:	e5940004 	ldr	r0, [r4, #4]
4001b470:	e0800181 	add	r0, r0, r1, lsl #3
4001b474:	e5900004 	ldr	r0, [r0, #4]
4001b478:	e59f1148 	ldr	r1, [pc, #328]	; 4001b5c8 <CyU3PGpifLoad+0x27c>
4001b47c:	e0811205 	add	r1, r1, r5, lsl #4
4001b480:	e5810004 	str	r0, [r1, #4]
4001b484:	e0861086 	add	r1, r6, r6, lsl #1
4001b488:	e5940004 	ldr	r0, [r4, #4]
4001b48c:	e0800181 	add	r0, r0, r1, lsl #3
4001b490:	e5900008 	ldr	r0, [r0, #8]
4001b494:	e59f112c 	ldr	r1, [pc, #300]	; 4001b5c8 <CyU3PGpifLoad+0x27c>
4001b498:	e0811205 	add	r1, r1, r5, lsl #4
4001b49c:	e5810008 	str	r0, [r1, #8]
4001b4a0:	e0861086 	add	r1, r6, r6, lsl #1
4001b4a4:	e5940004 	ldr	r0, [r4, #4]
4001b4a8:	e0800181 	add	r0, r0, r1, lsl #3
4001b4ac:	e590000c 	ldr	r0, [r0, #12]
4001b4b0:	e59f1114 	ldr	r1, [pc, #276]	; 4001b5cc <CyU3PGpifLoad+0x280>
4001b4b4:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b4b8:	e0861086 	add	r1, r6, r6, lsl #1
4001b4bc:	e5940004 	ldr	r0, [r4, #4]
4001b4c0:	e0800181 	add	r0, r0, r1, lsl #3
4001b4c4:	e5900010 	ldr	r0, [r0, #16]
4001b4c8:	e59f10fc 	ldr	r1, [pc, #252]	; 4001b5cc <CyU3PGpifLoad+0x280>
4001b4cc:	e0811205 	add	r1, r1, r5, lsl #4
4001b4d0:	e5810004 	str	r0, [r1, #4]
4001b4d4:	e0861086 	add	r1, r6, r6, lsl #1
4001b4d8:	e5940004 	ldr	r0, [r4, #4]
4001b4dc:	e0800181 	add	r0, r0, r1, lsl #3
4001b4e0:	e5900014 	ldr	r0, [r0, #20]
4001b4e4:	e59f10e0 	ldr	r1, [pc, #224]	; 4001b5cc <CyU3PGpifLoad+0x280>
4001b4e8:	e0811205 	add	r1, r1, r5, lsl #4
4001b4ec:	e5810008 	str	r0, [r1, #8]
4001b4f0:	e2850001 	add	r0, r5, #1
4001b4f4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b4f8:	e1d400b0 	ldrh	r0, [r4]
4001b4fc:	e1500005 	cmp	r0, r5
4001b500:	caffffca 	bgt	4001b430 <CyU3PGpifLoad+0xe4>
4001b504:	e1d400bc 	ldrh	r0, [r4, #12]
4001b508:	e3500000 	cmp	r0, #0
4001b50c:	0a000013 	beq	4001b560 <CyU3PGpifLoad+0x214>
4001b510:	e5940010 	ldr	r0, [r4, #16]
4001b514:	e3500000 	cmp	r0, #0
4001b518:	0a000002 	beq	4001b528 <CyU3PGpifLoad+0x1dc>
4001b51c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b520:	e3500020 	cmp	r0, #32
4001b524:	da000001 	ble	4001b530 <CyU3PGpifLoad+0x1e4>
4001b528:	e3a00040 	mov	r0, #64	; 0x40
4001b52c:	eaffff95 	b	4001b388 <CyU3PGpifLoad+0x3c>
4001b530:	e3a05000 	mov	r5, #0
4001b534:	ea000006 	b	4001b554 <CyU3PGpifLoad+0x208>
4001b538:	e5940010 	ldr	r0, [r4, #16]
4001b53c:	e0800085 	add	r0, r0, r5, lsl #1
4001b540:	e1d000b0 	ldrh	r0, [r0]
4001b544:	e59f1084 	ldr	r1, [pc, #132]	; 4001b5d0 <CyU3PGpifLoad+0x284>
4001b548:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b54c:	e2850001 	add	r0, r5, #1
4001b550:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b554:	e1d400bc 	ldrh	r0, [r4, #12]
4001b558:	e1500005 	cmp	r0, r5
4001b55c:	cafffff5 	bgt	4001b538 <CyU3PGpifLoad+0x1ec>
4001b560:	e1d401b4 	ldrh	r0, [r4, #20]
4001b564:	e3500000 	cmp	r0, #0
4001b568:	0a000012 	beq	4001b5b8 <CyU3PGpifLoad+0x26c>
4001b56c:	e5940018 	ldr	r0, [r4, #24]
4001b570:	e3500000 	cmp	r0, #0
4001b574:	1a000001 	bne	4001b580 <CyU3PGpifLoad+0x234>
4001b578:	e3a00040 	mov	r0, #64	; 0x40
4001b57c:	eaffff81 	b	4001b388 <CyU3PGpifLoad+0x3c>
4001b580:	e3a05001 	mov	r5, #1
4001b584:	ea000004 	b	4001b59c <CyU3PGpifLoad+0x250>
4001b588:	e5940018 	ldr	r0, [r4, #24]
4001b58c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b590:	e4870004 	str	r0, [r7], #4
4001b594:	e2850001 	add	r0, r5, #1
4001b598:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b59c:	e1d401b4 	ldrh	r0, [r4, #20]
4001b5a0:	e1500005 	cmp	r0, r5
4001b5a4:	cafffff7 	bgt	4001b588 <CyU3PGpifLoad+0x23c>
4001b5a8:	e5940018 	ldr	r0, [r4, #24]
4001b5ac:	e5900000 	ldr	r0, [r0]
4001b5b0:	e59f100c 	ldr	r1, [pc, #12]	; 4001b5c4 <CyU3PGpifLoad+0x278>
4001b5b4:	e5810000 	str	r0, [r1]
4001b5b8:	e3a00000 	mov	r0, #0
4001b5bc:	eaffff71 	b	4001b388 <CyU3PGpifLoad+0x3c>
4001b5c0:	e0014004 	.word	0xe0014004
4001b5c4:	e0014000 	.word	0xe0014000
4001b5c8:	e0015000 	.word	0xe0015000
4001b5cc:	e0016000 	.word	0xe0016000
4001b5d0:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001b5d4 <CyU3PGpifRegisterCallback>:
4001b5d4:	e59f1004 	ldr	r1, [pc, #4]	; 4001b5e0 <CyU3PGpifRegisterCallback+0xc>
4001b5d8:	e5810000 	str	r0, [r1]
4001b5dc:	e12fff1e 	bx	lr
4001b5e0:	40030d34 	.word	0x40030d34

Disassembly of section i.CyU3PGpifSMStart:

4001b5e4 <CyU3PGpifSMStart>:
4001b5e4:	e92d4010 	push	{r4, lr}
4001b5e8:	e1a02000 	mov	r2, r0
4001b5ec:	e59f012c 	ldr	r0, [pc, #300]	; 4001b720 <CyU3PGpifSMStart+0x13c>
4001b5f0:	e5900000 	ldr	r0, [r0]
4001b5f4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b5f8:	0a000004 	beq	4001b610 <CyU3PGpifSMStart+0x2c>
4001b5fc:	e59f0120 	ldr	r0, [pc, #288]	; 4001b724 <CyU3PGpifSMStart+0x140>
4001b600:	e0800202 	add	r0, r0, r2, lsl #4
4001b604:	e5900008 	ldr	r0, [r0, #8]
4001b608:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b60c:	1a000001 	bne	4001b618 <CyU3PGpifSMStart+0x34>
4001b610:	e3a00044 	mov	r0, #68	; 0x44
4001b614:	e8bd8010 	pop	{r4, pc}
4001b618:	e59f0100 	ldr	r0, [pc, #256]	; 4001b720 <CyU3PGpifSMStart+0x13c>
4001b61c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b620:	e3100001 	tst	r0, #1
4001b624:	0a000001 	beq	4001b630 <CyU3PGpifSMStart+0x4c>
4001b628:	e3a00043 	mov	r0, #67	; 0x43
4001b62c:	eafffff8 	b	4001b614 <CyU3PGpifSMStart+0x30>
4001b630:	e59f00e8 	ldr	r0, [pc, #232]	; 4001b720 <CyU3PGpifSMStart+0x13c>
4001b634:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b638:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b63c:	e1800801 	orr	r0, r0, r1, lsl #16
4001b640:	e3800001 	orr	r0, r0, #1
4001b644:	e59f40d4 	ldr	r4, [pc, #212]	; 4001b720 <CyU3PGpifSMStart+0x13c>
4001b648:	e5840118 	str	r0, [r4, #280]	; 0x118
4001b64c:	e1a00004 	mov	r0, r4
4001b650:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001b654:	e59f00cc 	ldr	r0, [pc, #204]	; 4001b728 <CyU3PGpifSMStart+0x144>
4001b658:	e000000e 	and	r0, r0, lr
4001b65c:	e180e802 	orr	lr, r0, r2, lsl #16
4001b660:	e1a00004 	mov	r0, r4
4001b664:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001b668:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001b66c:	e3800005 	orr	r0, r0, #5
4001b670:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b674:	e1a00004 	mov	r0, r4
4001b678:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001b67c:	e5900008 	ldr	r0, [r0, #8]
4001b680:	e2003007 	and	r3, r0, #7
4001b684:	e3530001 	cmp	r3, #1
4001b688:	0a000004 	beq	4001b6a0 <CyU3PGpifSMStart+0xbc>
4001b68c:	e3530002 	cmp	r3, #2
4001b690:	0a00000b 	beq	4001b6c4 <CyU3PGpifSMStart+0xe0>
4001b694:	e3530003 	cmp	r3, #3
4001b698:	1a00001b 	bne	4001b70c <CyU3PGpifSMStart+0x128>
4001b69c:	ea000011 	b	4001b6e8 <CyU3PGpifSMStart+0x104>
4001b6a0:	e1a00000 	nop			; (mov r0, r0)
4001b6a4:	e59f0080 	ldr	r0, [pc, #128]	; 4001b72c <CyU3PGpifSMStart+0x148>
4001b6a8:	e1ce0000 	bic	r0, lr, r0
4001b6ac:	e3800005 	orr	r0, r0, #5
4001b6b0:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001b6b4:	e1800424 	orr	r0, r0, r4, lsr #8
4001b6b8:	e59f4060 	ldr	r4, [pc, #96]	; 4001b720 <CyU3PGpifSMStart+0x13c>
4001b6bc:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6c0:	ea000013 	b	4001b714 <CyU3PGpifSMStart+0x130>
4001b6c4:	e1a00000 	nop			; (mov r0, r0)
4001b6c8:	e59f0060 	ldr	r0, [pc, #96]	; 4001b730 <CyU3PGpifSMStart+0x14c>
4001b6cc:	e1ce0000 	bic	r0, lr, r0
4001b6d0:	e3800005 	orr	r0, r0, #5
4001b6d4:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001b6d8:	e1800424 	orr	r0, r0, r4, lsr #8
4001b6dc:	e59f403c 	ldr	r4, [pc, #60]	; 4001b720 <CyU3PGpifSMStart+0x13c>
4001b6e0:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6e4:	ea00000a 	b	4001b714 <CyU3PGpifSMStart+0x130>
4001b6e8:	e1a00000 	nop			; (mov r0, r0)
4001b6ec:	e59f0040 	ldr	r0, [pc, #64]	; 4001b734 <CyU3PGpifSMStart+0x150>
4001b6f0:	e1ce0000 	bic	r0, lr, r0
4001b6f4:	e3800005 	orr	r0, r0, #5
4001b6f8:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001b6fc:	e1800424 	orr	r0, r0, r4, lsr #8
4001b700:	e59f4018 	ldr	r4, [pc, #24]	; 4001b720 <CyU3PGpifSMStart+0x13c>
4001b704:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b708:	ea000001 	b	4001b714 <CyU3PGpifSMStart+0x130>
4001b70c:	e1a00000 	nop			; (mov r0, r0)
4001b710:	e1a00000 	nop			; (mov r0, r0)
4001b714:	e1a00000 	nop			; (mov r0, r0)
4001b718:	e3a00000 	mov	r0, #0
4001b71c:	eaffffbc 	b	4001b614 <CyU3PGpifSMStart+0x30>
4001b720:	e0014000 	.word	0xe0014000
4001b724:	e0015000 	.word	0xe0015000
4001b728:	ff00003a 	.word	0xff00003a
4001b72c:	0080ffc5 	.word	0x0080ffc5
4001b730:	00c0ffc5 	.word	0x00c0ffc5
4001b734:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001b738 <CyU3PGpifSMSwitch>:
4001b738:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b73c:	e1a0c000 	mov	ip, r0
4001b740:	e59de018 	ldr	lr, [sp, #24]
4001b744:	e3a04000 	mov	r4, #0
4001b748:	e3510c01 	cmp	r1, #256	; 0x100
4001b74c:	ba000001 	blt	4001b758 <CyU3PGpifSMSwitch+0x20>
4001b750:	e3a00040 	mov	r0, #64	; 0x40
4001b754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b758:	e59f0150 	ldr	r0, [pc, #336]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b75c:	e5900000 	ldr	r0, [r0]
4001b760:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b764:	1a000001 	bne	4001b770 <CyU3PGpifSMSwitch+0x38>
4001b768:	e3a00044 	mov	r0, #68	; 0x44
4001b76c:	eafffff8 	b	4001b754 <CyU3PGpifSMSwitch+0x1c>
4001b770:	e59f0138 	ldr	r0, [pc, #312]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b774:	e5900008 	ldr	r0, [r0, #8]
4001b778:	e2006007 	and	r6, r0, #7
4001b77c:	e59f012c 	ldr	r0, [pc, #300]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b780:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b784:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b788:	e1800803 	orr	r0, r0, r3, lsl #16
4001b78c:	e3800001 	orr	r0, r0, #1
4001b790:	e59f8118 	ldr	r8, [pc, #280]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b794:	e5880118 	str	r0, [r8, #280]	; 0x118
4001b798:	e3a00001 	mov	r0, #1
4001b79c:	e1804801 	orr	r4, r0, r1, lsl #16
4001b7a0:	e35c0c01 	cmp	ip, #256	; 0x100
4001b7a4:	aa000012 	bge	4001b7f4 <CyU3PGpifSMSwitch+0xbc>
4001b7a8:	e1c80000 	bic	r0, r8, r0
4001b7ac:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b7b0:	e1a05c20 	lsr	r5, r0, #24
4001b7b4:	e59f00f8 	ldr	r0, [pc, #248]	; 4001b8b4 <CyU3PGpifSMSwitch+0x17c>
4001b7b8:	e7d00006 	ldrb	r0, [r0, r6]
4001b7bc:	e0000005 	and	r0, r0, r5
4001b7c0:	e59f80ec 	ldr	r8, [pc, #236]	; 4001b8b4 <CyU3PGpifSMSwitch+0x17c>
4001b7c4:	e7d88006 	ldrb	r8, [r8, r6]
4001b7c8:	e008800c 	and	r8, r8, ip
4001b7cc:	e1500008 	cmp	r0, r8
4001b7d0:	1a000001 	bne	4001b7dc <CyU3PGpifSMSwitch+0xa4>
4001b7d4:	e3844004 	orr	r4, r4, #4
4001b7d8:	ea000006 	b	4001b7f8 <CyU3PGpifSMSwitch+0xc0>
4001b7dc:	e3a00008 	mov	r0, #8
4001b7e0:	e180040c 	orr	r0, r0, ip, lsl #8
4001b7e4:	e1844000 	orr	r4, r4, r0
4001b7e8:	e59f00c0 	ldr	r0, [pc, #192]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b7ec:	e580e120 	str	lr, [r0, #288]	; 0x120
4001b7f0:	ea000000 	b	4001b7f8 <CyU3PGpifSMSwitch+0xc0>
4001b7f4:	e3844004 	orr	r4, r4, #4
4001b7f8:	e3520c01 	cmp	r2, #256	; 0x100
4001b7fc:	aa000007 	bge	4001b820 <CyU3PGpifSMSwitch+0xe8>
4001b800:	e3a00002 	mov	r0, #2
4001b804:	e1800c02 	orr	r0, r0, r2, lsl #24
4001b808:	e1844000 	orr	r4, r4, r0
4001b80c:	e59f009c 	ldr	r0, [pc, #156]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b810:	e5900018 	ldr	r0, [r0, #24]
4001b814:	e3800001 	orr	r0, r0, #1
4001b818:	e59f8090 	ldr	r8, [pc, #144]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b81c:	e5880018 	str	r0, [r8, #24]
4001b820:	e59f0088 	ldr	r0, [pc, #136]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b824:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001b828:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001b82c:	e3560001 	cmp	r6, #1
4001b830:	0a000004 	beq	4001b848 <CyU3PGpifSMSwitch+0x110>
4001b834:	e3560002 	cmp	r6, #2
4001b838:	0a000009 	beq	4001b864 <CyU3PGpifSMSwitch+0x12c>
4001b83c:	e3560003 	cmp	r6, #3
4001b840:	1a000015 	bne	4001b89c <CyU3PGpifSMSwitch+0x164>
4001b844:	ea00000d 	b	4001b880 <CyU3PGpifSMSwitch+0x148>
4001b848:	e1a00000 	nop			; (mov r0, r0)
4001b84c:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001b850:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001b854:	e1800428 	orr	r0, r0, r8, lsr #8
4001b858:	e59f8050 	ldr	r8, [pc, #80]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b85c:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b860:	ea00000f 	b	4001b8a4 <CyU3PGpifSMSwitch+0x16c>
4001b864:	e1a00000 	nop			; (mov r0, r0)
4001b868:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001b86c:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001b870:	e1800428 	orr	r0, r0, r8, lsr #8
4001b874:	e59f8034 	ldr	r8, [pc, #52]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b878:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b87c:	ea000008 	b	4001b8a4 <CyU3PGpifSMSwitch+0x16c>
4001b880:	e1a00000 	nop			; (mov r0, r0)
4001b884:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001b888:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001b88c:	e1800428 	orr	r0, r0, r8, lsr #8
4001b890:	e59f8018 	ldr	r8, [pc, #24]	; 4001b8b0 <CyU3PGpifSMSwitch+0x178>
4001b894:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b898:	ea000001 	b	4001b8a4 <CyU3PGpifSMSwitch+0x16c>
4001b89c:	e1a00000 	nop			; (mov r0, r0)
4001b8a0:	e1a00000 	nop			; (mov r0, r0)
4001b8a4:	e1a00000 	nop			; (mov r0, r0)
4001b8a8:	e3a00000 	mov	r0, #0
4001b8ac:	eaffffa8 	b	4001b754 <CyU3PGpifSMSwitch+0x1c>
4001b8b0:	e0014000 	.word	0xe0014000
4001b8b4:	40011d80 	.word	0x40011d80

Disassembly of section i.CyU3PConnectState:

4001b8b8 <CyU3PConnectState>:
4001b8b8:	e92d4070 	push	{r4, r5, r6, lr}
4001b8bc:	e1a04000 	mov	r4, r0
4001b8c0:	e1a06001 	mov	r6, r1
4001b8c4:	e59f0234 	ldr	r0, [pc, #564]	; 4001bb00 <CyU3PConnectState+0x248>
4001b8c8:	e5d00008 	ldrb	r0, [r0, #8]
4001b8cc:	e3500000 	cmp	r0, #0
4001b8d0:	1a000001 	bne	4001b8dc <CyU3PConnectState+0x24>
4001b8d4:	e3a00042 	mov	r0, #66	; 0x42
4001b8d8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b8dc:	ebffe41a 	bl	4001494c <CyFx3DevIsUsb3Supported>
4001b8e0:	e3500000 	cmp	r0, #0
4001b8e4:	1a000000 	bne	4001b8ec <CyU3PConnectState+0x34>
4001b8e8:	e3a06000 	mov	r6, #0
4001b8ec:	e3a05000 	mov	r5, #0
4001b8f0:	e3e01000 	mvn	r1, #0
4001b8f4:	e59f0208 	ldr	r0, [pc, #520]	; 4001bb04 <CyU3PConnectState+0x24c>
4001b8f8:	ebffb9ad 	bl	40009fb4 <_txe_mutex_get>
4001b8fc:	e3540000 	cmp	r4, #0
4001b900:	1a00001a 	bne	4001b970 <CyU3PConnectState+0xb8>
4001b904:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bb00 <CyU3PConnectState+0x248>
4001b908:	e5d00008 	ldrb	r0, [r0, #8]
4001b90c:	e3500004 	cmp	r0, #4
4001b910:	ba000012 	blt	4001b960 <CyU3PConnectState+0xa8>
4001b914:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bb00 <CyU3PConnectState+0x248>
4001b918:	e5d00008 	ldrb	r0, [r0, #8]
4001b91c:	e3500005 	cmp	r0, #5
4001b920:	ba000008 	blt	4001b948 <CyU3PConnectState+0x90>
4001b924:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bb00 <CyU3PConnectState+0x248>
4001b928:	e5d11009 	ldrb	r1, [r1, #9]
4001b92c:	e3510003 	cmp	r1, #3
4001b930:	1a000001 	bne	4001b93c <CyU3PConnectState+0x84>
4001b934:	e3a01001 	mov	r1, #1
4001b938:	ea000000 	b	4001b940 <CyU3PConnectState+0x88>
4001b93c:	e3a01000 	mov	r1, #0
4001b940:	e1a00001 	mov	r0, r1
4001b944:	eb00050f 	bl	4001cd88 <CyU3PUsbPhyDisable>
4001b948:	e3a00003 	mov	r0, #3
4001b94c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bb00 <CyU3PConnectState+0x248>
4001b950:	e5c10008 	strb	r0, [r1, #8]
4001b954:	e3a00000 	mov	r0, #0
4001b958:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001b95c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001b960:	e3a00000 	mov	r0, #0
4001b964:	e59f1194 	ldr	r1, [pc, #404]	; 4001bb00 <CyU3PConnectState+0x248>
4001b968:	e5810044 	str	r0, [r1, #68]	; 0x44
4001b96c:	ea00005f 	b	4001baf0 <CyU3PConnectState+0x238>
4001b970:	e59f0188 	ldr	r0, [pc, #392]	; 4001bb00 <CyU3PConnectState+0x248>
4001b974:	e5d00008 	ldrb	r0, [r0, #8]
4001b978:	e3500003 	cmp	r0, #3
4001b97c:	0a00000b 	beq	4001b9b0 <CyU3PConnectState+0xf8>
4001b980:	e3500004 	cmp	r0, #4
4001b984:	0a000004 	beq	4001b99c <CyU3PConnectState+0xe4>
4001b988:	e3500005 	cmp	r0, #5
4001b98c:	0a000004 	beq	4001b9a4 <CyU3PConnectState+0xec>
4001b990:	e3500006 	cmp	r0, #6
4001b994:	1a000051 	bne	4001bae0 <CyU3PConnectState+0x228>
4001b998:	ea000002 	b	4001b9a8 <CyU3PConnectState+0xf0>
4001b99c:	e1a00000 	nop			; (mov r0, r0)
4001b9a0:	e1a00000 	nop			; (mov r0, r0)
4001b9a4:	e1a00000 	nop			; (mov r0, r0)
4001b9a8:	e3a05043 	mov	r5, #67	; 0x43
4001b9ac:	ea00004e 	b	4001baec <CyU3PConnectState+0x234>
4001b9b0:	e1a00000 	nop			; (mov r0, r0)
4001b9b4:	e59f0144 	ldr	r0, [pc, #324]	; 4001bb00 <CyU3PConnectState+0x248>
4001b9b8:	e5d00007 	ldrb	r0, [r0, #7]
4001b9bc:	e3500001 	cmp	r0, #1
4001b9c0:	0a00000f 	beq	4001ba04 <CyU3PConnectState+0x14c>
4001b9c4:	e59f013c 	ldr	r0, [pc, #316]	; 4001bb08 <CyU3PConnectState+0x250>
4001b9c8:	e590001c 	ldr	r0, [r0, #28]
4001b9cc:	e3500000 	cmp	r0, #0
4001b9d0:	0a000007 	beq	4001b9f4 <CyU3PConnectState+0x13c>
4001b9d4:	e59f012c 	ldr	r0, [pc, #300]	; 4001bb08 <CyU3PConnectState+0x250>
4001b9d8:	e5900014 	ldr	r0, [r0, #20]
4001b9dc:	e3500000 	cmp	r0, #0
4001b9e0:	0a000003 	beq	4001b9f4 <CyU3PConnectState+0x13c>
4001b9e4:	e59f011c 	ldr	r0, [pc, #284]	; 4001bb08 <CyU3PConnectState+0x250>
4001b9e8:	e5900018 	ldr	r0, [r0, #24]
4001b9ec:	e3500000 	cmp	r0, #0
4001b9f0:	1a000003 	bne	4001ba04 <CyU3PConnectState+0x14c>
4001b9f4:	e59f0108 	ldr	r0, [pc, #264]	; 4001bb04 <CyU3PConnectState+0x24c>
4001b9f8:	ebffb9a2 	bl	4000a088 <_txe_mutex_put>
4001b9fc:	e3a00044 	mov	r0, #68	; 0x44
4001ba00:	eaffffb4 	b	4001b8d8 <CyU3PConnectState+0x20>
4001ba04:	e3560000 	cmp	r6, #0
4001ba08:	0a000007 	beq	4001ba2c <CyU3PConnectState+0x174>
4001ba0c:	e3a00000 	mov	r0, #0
4001ba10:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bb0c <CyU3PConnectState+0x254>
4001ba14:	e5810014 	str	r0, [r1, #20]
4001ba18:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bb10 <CyU3PConnectState+0x258>
4001ba1c:	e5810000 	str	r0, [r1]
4001ba20:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bb14 <CyU3PConnectState+0x25c>
4001ba24:	e5810000 	str	r0, [r1]
4001ba28:	ea000007 	b	4001ba4c <CyU3PConnectState+0x194>
4001ba2c:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bb00 <CyU3PConnectState+0x248>
4001ba30:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001ba34:	e3500000 	cmp	r0, #0
4001ba38:	0a000003 	beq	4001ba4c <CyU3PConnectState+0x194>
4001ba3c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bb04 <CyU3PConnectState+0x24c>
4001ba40:	ebffb990 	bl	4000a088 <_txe_mutex_put>
4001ba44:	e3a000ff 	mov	r0, #255	; 0xff
4001ba48:	eaffffa2 	b	4001b8d8 <CyU3PConnectState+0x20>
4001ba4c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bb00 <CyU3PConnectState+0x248>
4001ba50:	e5806024 	str	r6, [r0, #36]	; 0x24
4001ba54:	e3a00000 	mov	r0, #0
4001ba58:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bb00 <CyU3PConnectState+0x248>
4001ba5c:	e5810058 	str	r0, [r1, #88]	; 0x58
4001ba60:	e2810000 	add	r0, r1, #0
4001ba64:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ba68:	e3500000 	cmp	r0, #0
4001ba6c:	0a000004 	beq	4001ba84 <CyU3PConnectState+0x1cc>
4001ba70:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bb18 <CyU3PConnectState+0x260>
4001ba74:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ba78:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001ba7c:	e1100001 	tst	r0, r1
4001ba80:	0a000012 	beq	4001bad0 <CyU3PConnectState+0x218>
4001ba84:	e3560000 	cmp	r6, #0
4001ba88:	0a000007 	beq	4001baac <CyU3PConnectState+0x1f4>
4001ba8c:	e3a00000 	mov	r0, #0
4001ba90:	e59f1068 	ldr	r1, [pc, #104]	; 4001bb00 <CyU3PConnectState+0x248>
4001ba94:	e5810054 	str	r0, [r1, #84]	; 0x54
4001ba98:	e3a00001 	mov	r0, #1
4001ba9c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001baa0:	e3a00000 	mov	r0, #0
4001baa4:	e5810050 	str	r0, [r1, #80]	; 0x50
4001baa8:	ea000002 	b	4001bab8 <CyU3PConnectState+0x200>
4001baac:	e3a00000 	mov	r0, #0
4001bab0:	e59f1048 	ldr	r1, [pc, #72]	; 4001bb00 <CyU3PConnectState+0x248>
4001bab4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bab8:	e1a00006 	mov	r0, r6
4001babc:	eb000527 	bl	4001cf60 <CyU3PUsbPhyEnable>
4001bac0:	e3a00005 	mov	r0, #5
4001bac4:	e59f1034 	ldr	r1, [pc, #52]	; 4001bb00 <CyU3PConnectState+0x248>
4001bac8:	e5c10008 	strb	r0, [r1, #8]
4001bacc:	ea000002 	b	4001badc <CyU3PConnectState+0x224>
4001bad0:	e3a00004 	mov	r0, #4
4001bad4:	e59f1024 	ldr	r1, [pc, #36]	; 4001bb00 <CyU3PConnectState+0x248>
4001bad8:	e5c10008 	strb	r0, [r1, #8]
4001badc:	ea000002 	b	4001baec <CyU3PConnectState+0x234>
4001bae0:	e1a00000 	nop			; (mov r0, r0)
4001bae4:	e3a05044 	mov	r5, #68	; 0x44
4001bae8:	e1a00000 	nop			; (mov r0, r0)
4001baec:	e1a00000 	nop			; (mov r0, r0)
4001baf0:	e59f000c 	ldr	r0, [pc, #12]	; 4001bb04 <CyU3PConnectState+0x24c>
4001baf4:	ebffb963 	bl	4000a088 <_txe_mutex_put>
4001baf8:	e1a00005 	mov	r0, r5
4001bafc:	eaffff75 	b	4001b8d8 <CyU3PConnectState+0x20>
4001bb00:	40031d40 	.word	0x40031d40
4001bb04:	40031ee0 	.word	0x40031ee0
4001bb08:	40031f98 	.word	0x40031f98
4001bb0c:	e0033000 	.word	0xe0033000
4001bb10:	40030d88 	.word	0x40030d88
4001bb14:	40030d8c 	.word	0x40030d8c
4001bb18:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bb1c <CyU3POtgGetMode>:
4001bb1c:	e59f0004 	ldr	r0, [pc, #4]	; 4001bb28 <CyU3POtgGetMode+0xc>
4001bb20:	e5d00000 	ldrb	r0, [r0]
4001bb24:	e12fff1e 	bx	lr
4001bb28:	40030d58 	.word	0x40030d58

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bb2c <CyU3POtgIsDeviceMode>:
4001bb2c:	e3a01000 	mov	r1, #0
4001bb30:	e59f00b4 	ldr	r0, [pc, #180]	; 4001bbec <CyU3POtgIsDeviceMode+0xc0>
4001bb34:	e5d00000 	ldrb	r0, [r0]
4001bb38:	e3500000 	cmp	r0, #0
4001bb3c:	0a000003 	beq	4001bb50 <CyU3POtgIsDeviceMode+0x24>
4001bb40:	e59f00a4 	ldr	r0, [pc, #164]	; 4001bbec <CyU3POtgIsDeviceMode+0xc0>
4001bb44:	e5d00000 	ldrb	r0, [r0]
4001bb48:	e3500002 	cmp	r0, #2
4001bb4c:	1a000024 	bne	4001bbe4 <CyU3POtgIsDeviceMode+0xb8>
4001bb50:	e59f0098 	ldr	r0, [pc, #152]	; 4001bbf0 <CyU3POtgIsDeviceMode+0xc4>
4001bb54:	e5d00000 	ldrb	r0, [r0]
4001bb58:	e3500000 	cmp	r0, #0
4001bb5c:	0a000006 	beq	4001bb7c <CyU3POtgIsDeviceMode+0x50>
4001bb60:	e3500002 	cmp	r0, #2
4001bb64:	0a00000c 	beq	4001bb9c <CyU3POtgIsDeviceMode+0x70>
4001bb68:	e3500004 	cmp	r0, #4
4001bb6c:	0a00000b 	beq	4001bba0 <CyU3POtgIsDeviceMode+0x74>
4001bb70:	e3500005 	cmp	r0, #5
4001bb74:	1a00000c 	bne	4001bbac <CyU3POtgIsDeviceMode+0x80>
4001bb78:	ea000009 	b	4001bba4 <CyU3POtgIsDeviceMode+0x78>
4001bb7c:	e1a00000 	nop			; (mov r0, r0)
4001bb80:	e59f0064 	ldr	r0, [pc, #100]	; 4001bbec <CyU3POtgIsDeviceMode+0xc0>
4001bb84:	e5d00000 	ldrb	r0, [r0]
4001bb88:	e3500002 	cmp	r0, #2
4001bb8c:	1a000001 	bne	4001bb98 <CyU3POtgIsDeviceMode+0x6c>
4001bb90:	e3a00000 	mov	r0, #0
4001bb94:	e12fff1e 	bx	lr
4001bb98:	e1a00000 	nop			; (mov r0, r0)
4001bb9c:	e1a00000 	nop			; (mov r0, r0)
4001bba0:	e1a00000 	nop			; (mov r0, r0)
4001bba4:	e3a01001 	mov	r1, #1
4001bba8:	ea000002 	b	4001bbb8 <CyU3POtgIsDeviceMode+0x8c>
4001bbac:	e1a00000 	nop			; (mov r0, r0)
4001bbb0:	e3a01000 	mov	r1, #0
4001bbb4:	e1a00000 	nop			; (mov r0, r0)
4001bbb8:	e1a00000 	nop			; (mov r0, r0)
4001bbbc:	e59f0030 	ldr	r0, [pc, #48]	; 4001bbf4 <CyU3POtgIsDeviceMode+0xc8>
4001bbc0:	e5900000 	ldr	r0, [r0]
4001bbc4:	e3500000 	cmp	r0, #0
4001bbc8:	0a000005 	beq	4001bbe4 <CyU3POtgIsDeviceMode+0xb8>
4001bbcc:	e3510000 	cmp	r1, #0
4001bbd0:	1a000001 	bne	4001bbdc <CyU3POtgIsDeviceMode+0xb0>
4001bbd4:	e3a00001 	mov	r0, #1
4001bbd8:	ea000000 	b	4001bbe0 <CyU3POtgIsDeviceMode+0xb4>
4001bbdc:	e3a00000 	mov	r0, #0
4001bbe0:	e1a01000 	mov	r1, r0
4001bbe4:	e1a00001 	mov	r0, r1
4001bbe8:	eaffffe9 	b	4001bb94 <CyU3POtgIsDeviceMode+0x68>
4001bbec:	40030d58 	.word	0x40030d58
4001bbf0:	40030d54 	.word	0x40030d54
4001bbf4:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3POtgIsHostMode:

4001bbf8 <CyU3POtgIsHostMode>:
4001bbf8:	e3a01000 	mov	r1, #0
4001bbfc:	e59f00a8 	ldr	r0, [pc, #168]	; 4001bcac <CyU3POtgIsHostMode+0xb4>
4001bc00:	e5d00000 	ldrb	r0, [r0]
4001bc04:	e3500001 	cmp	r0, #1
4001bc08:	0a000003 	beq	4001bc1c <CyU3POtgIsHostMode+0x24>
4001bc0c:	e59f0098 	ldr	r0, [pc, #152]	; 4001bcac <CyU3POtgIsHostMode+0xb4>
4001bc10:	e5d00000 	ldrb	r0, [r0]
4001bc14:	e3500002 	cmp	r0, #2
4001bc18:	1a000021 	bne	4001bca4 <CyU3POtgIsHostMode+0xac>
4001bc1c:	e59f008c 	ldr	r0, [pc, #140]	; 4001bcb0 <CyU3POtgIsHostMode+0xb8>
4001bc20:	e5d00000 	ldrb	r0, [r0]
4001bc24:	e3500000 	cmp	r0, #0
4001bc28:	0a000004 	beq	4001bc40 <CyU3POtgIsHostMode+0x48>
4001bc2c:	e3500001 	cmp	r0, #1
4001bc30:	0a00000a 	beq	4001bc60 <CyU3POtgIsHostMode+0x68>
4001bc34:	e3500003 	cmp	r0, #3
4001bc38:	1a00000b 	bne	4001bc6c <CyU3POtgIsHostMode+0x74>
4001bc3c:	ea000008 	b	4001bc64 <CyU3POtgIsHostMode+0x6c>
4001bc40:	e1a00000 	nop			; (mov r0, r0)
4001bc44:	e59f0060 	ldr	r0, [pc, #96]	; 4001bcac <CyU3POtgIsHostMode+0xb4>
4001bc48:	e5d00000 	ldrb	r0, [r0]
4001bc4c:	e3500002 	cmp	r0, #2
4001bc50:	1a000001 	bne	4001bc5c <CyU3POtgIsHostMode+0x64>
4001bc54:	e3a00000 	mov	r0, #0
4001bc58:	e12fff1e 	bx	lr
4001bc5c:	e1a00000 	nop			; (mov r0, r0)
4001bc60:	e1a00000 	nop			; (mov r0, r0)
4001bc64:	e3a01001 	mov	r1, #1
4001bc68:	ea000002 	b	4001bc78 <CyU3POtgIsHostMode+0x80>
4001bc6c:	e1a00000 	nop			; (mov r0, r0)
4001bc70:	e3a01000 	mov	r1, #0
4001bc74:	e1a00000 	nop			; (mov r0, r0)
4001bc78:	e1a00000 	nop			; (mov r0, r0)
4001bc7c:	e59f0030 	ldr	r0, [pc, #48]	; 4001bcb4 <CyU3POtgIsHostMode+0xbc>
4001bc80:	e5900000 	ldr	r0, [r0]
4001bc84:	e3500000 	cmp	r0, #0
4001bc88:	0a000005 	beq	4001bca4 <CyU3POtgIsHostMode+0xac>
4001bc8c:	e3510000 	cmp	r1, #0
4001bc90:	1a000001 	bne	4001bc9c <CyU3POtgIsHostMode+0xa4>
4001bc94:	e3a00001 	mov	r0, #1
4001bc98:	ea000000 	b	4001bca0 <CyU3POtgIsHostMode+0xa8>
4001bc9c:	e3a00000 	mov	r0, #0
4001bca0:	e1a01000 	mov	r1, r0
4001bca4:	e1a00001 	mov	r0, r1
4001bca8:	eaffffea 	b	4001bc58 <CyU3POtgIsHostMode+0x60>
4001bcac:	40030d58 	.word	0x40030d58
4001bcb0:	40030d54 	.word	0x40030d54
4001bcb4:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3POtgIsStarted:

4001bcb8 <CyU3POtgIsStarted>:
4001bcb8:	e59f0004 	ldr	r0, [pc, #4]	; 4001bcc4 <CyU3POtgIsStarted+0xc>
4001bcbc:	e5900000 	ldr	r0, [r0]
4001bcc0:	e12fff1e 	bx	lr
4001bcc4:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3PSetEpConfig:

4001bcc8 <CyU3PSetEpConfig>:
4001bcc8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001bccc:	e1a04000 	mov	r4, r0
4001bcd0:	e1a05001 	mov	r5, r1
4001bcd4:	e204607f 	and	r6, r4, #127	; 0x7f
4001bcd8:	e3a07000 	mov	r7, #0
4001bcdc:	e3a08000 	mov	r8, #0
4001bce0:	e3a09000 	mov	r9, #0
4001bce4:	e3a0a000 	mov	sl, #0
4001bce8:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c278 <CyU3PSetEpConfig+0x5b0>
4001bcec:	e5d00008 	ldrb	r0, [r0, #8]
4001bcf0:	e3500000 	cmp	r0, #0
4001bcf4:	1a000001 	bne	4001bd00 <CyU3PSetEpConfig+0x38>
4001bcf8:	e3a00042 	mov	r0, #66	; 0x42
4001bcfc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001bd00:	e3550000 	cmp	r5, #0
4001bd04:	1a000001 	bne	4001bd10 <CyU3PSetEpConfig+0x48>
4001bd08:	e3a00041 	mov	r0, #65	; 0x41
4001bd0c:	eafffffa 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001bd10:	e5950000 	ldr	r0, [r5]
4001bd14:	e3500000 	cmp	r0, #0
4001bd18:	0a000074 	beq	4001bef0 <CyU3PSetEpConfig+0x228>
4001bd1c:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd20:	e3500b01 	cmp	r0, #1024	; 0x400
4001bd24:	ca000001 	bgt	4001bd30 <CyU3PSetEpConfig+0x68>
4001bd28:	e356000f 	cmp	r6, #15
4001bd2c:	da000001 	ble	4001bd38 <CyU3PSetEpConfig+0x70>
4001bd30:	e3a00040 	mov	r0, #64	; 0x40
4001bd34:	eafffff0 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001bd38:	e5d50004 	ldrb	r0, [r5, #4]
4001bd3c:	e3500000 	cmp	r0, #0
4001bd40:	0a000002 	beq	4001bd50 <CyU3PSetEpConfig+0x88>
4001bd44:	e5d50004 	ldrb	r0, [r5, #4]
4001bd48:	e3500003 	cmp	r0, #3
4001bd4c:	da000001 	ble	4001bd58 <CyU3PSetEpConfig+0x90>
4001bd50:	e3a00040 	mov	r0, #64	; 0x40
4001bd54:	eaffffe8 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001bd58:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd5c:	e3500010 	cmp	r0, #16
4001bd60:	ca000008 	bgt	4001bd88 <CyU3PSetEpConfig+0xc0>
4001bd64:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd68:	e3500001 	cmp	r0, #1
4001bd6c:	da000007 	ble	4001bd90 <CyU3PSetEpConfig+0xc8>
4001bd70:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd74:	e3500b01 	cmp	r0, #1024	; 0x400
4001bd78:	aa000004 	bge	4001bd90 <CyU3PSetEpConfig+0xc8>
4001bd7c:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd80:	e3500000 	cmp	r0, #0
4001bd84:	0a000001 	beq	4001bd90 <CyU3PSetEpConfig+0xc8>
4001bd88:	e3a00040 	mov	r0, #64	; 0x40
4001bd8c:	eaffffda 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001bd90:	e5d50004 	ldrb	r0, [r5, #4]
4001bd94:	e1a00f00 	lsl	r0, r0, #30
4001bd98:	e1a08a20 	lsr	r8, r0, #20
4001bd9c:	e5d50004 	ldrb	r0, [r5, #4]
4001bda0:	e2000003 	and	r0, r0, #3
4001bda4:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c27c <CyU3PSetEpConfig+0x5b4>
4001bda8:	e7d1a000 	ldrb	sl, [r1, r0]
4001bdac:	e5d5000a 	ldrb	r0, [r5, #10]
4001bdb0:	e3500000 	cmp	r0, #0
4001bdb4:	0a000004 	beq	4001bdcc <CyU3PSetEpConfig+0x104>
4001bdb8:	e5d5000a 	ldrb	r0, [r5, #10]
4001bdbc:	e2400001 	sub	r0, r0, #1
4001bdc0:	e200000f 	and	r0, r0, #15
4001bdc4:	e18aa400 	orr	sl, sl, r0, lsl #8
4001bdc8:	ea000001 	b	4001bdd4 <CyU3PSetEpConfig+0x10c>
4001bdcc:	e3a00001 	mov	r0, #1
4001bdd0:	e5c5000a 	strb	r0, [r5, #10]
4001bdd4:	e5d50004 	ldrb	r0, [r5, #4]
4001bdd8:	e3500001 	cmp	r0, #1
4001bddc:	1a000013 	bne	4001be30 <CyU3PSetEpConfig+0x168>
4001bde0:	e5950000 	ldr	r0, [r5]
4001bde4:	e3500000 	cmp	r0, #0
4001bde8:	0a000010 	beq	4001be30 <CyU3PSetEpConfig+0x168>
4001bdec:	e5d5000b 	ldrb	r0, [r5, #11]
4001bdf0:	e2000003 	and	r0, r0, #3
4001bdf4:	e1888600 	orr	r8, r8, r0, lsl #12
4001bdf8:	e5d5000a 	ldrb	r0, [r5, #10]
4001bdfc:	e5d5100b 	ldrb	r1, [r5, #11]
4001be00:	e1600180 	smulbb	r0, r0, r1
4001be04:	e200003f 	and	r0, r0, #63	; 0x3f
4001be08:	e18aa100 	orr	sl, sl, r0, lsl #2
4001be0c:	e5d5000b 	ldrb	r0, [r5, #11]
4001be10:	e3500001 	cmp	r0, #1
4001be14:	da000005 	ble	4001be30 <CyU3PSetEpConfig+0x168>
4001be18:	e3560003 	cmp	r6, #3
4001be1c:	0a000003 	beq	4001be30 <CyU3PSetEpConfig+0x168>
4001be20:	e3560007 	cmp	r6, #7
4001be24:	0a000001 	beq	4001be30 <CyU3PSetEpConfig+0x168>
4001be28:	e3a0004d 	mov	r0, #77	; 0x4d
4001be2c:	eaffffb2 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001be30:	e1d500b8 	ldrh	r0, [r5, #8]
4001be34:	e3500000 	cmp	r0, #0
4001be38:	0a000004 	beq	4001be50 <CyU3PSetEpConfig+0x188>
4001be3c:	e1d500b8 	ldrh	r0, [r5, #8]
4001be40:	e3500b01 	cmp	r0, #1024	; 0x400
4001be44:	ca000001 	bgt	4001be50 <CyU3PSetEpConfig+0x188>
4001be48:	e1d500b8 	ldrh	r0, [r5, #8]
4001be4c:	ea000000 	b	4001be54 <CyU3PSetEpConfig+0x18c>
4001be50:	e3a00b01 	mov	r0, #1024	; 0x400
4001be54:	e1a07800 	lsl	r7, r0, #16
4001be58:	e1a07827 	lsr	r7, r7, #16
4001be5c:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c278 <CyU3PSetEpConfig+0x5b0>
4001be60:	e5d00008 	ldrb	r0, [r0, #8]
4001be64:	e3500005 	cmp	r0, #5
4001be68:	da00001e 	ble	4001bee8 <CyU3PSetEpConfig+0x220>
4001be6c:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c278 <CyU3PSetEpConfig+0x5b0>
4001be70:	e5d00009 	ldrb	r0, [r0, #9]
4001be74:	e3500001 	cmp	r0, #1
4001be78:	0a000008 	beq	4001bea0 <CyU3PSetEpConfig+0x1d8>
4001be7c:	e3500002 	cmp	r0, #2
4001be80:	1a000015 	bne	4001bedc <CyU3PSetEpConfig+0x214>
4001be84:	e5d50004 	ldrb	r0, [r5, #4]
4001be88:	e3500002 	cmp	r0, #2
4001be8c:	1a000002 	bne	4001be9c <CyU3PSetEpConfig+0x1d4>
4001be90:	e3570c02 	cmp	r7, #512	; 0x200
4001be94:	da000000 	ble	4001be9c <CyU3PSetEpConfig+0x1d4>
4001be98:	e3a07c02 	mov	r7, #512	; 0x200
4001be9c:	ea000010 	b	4001bee4 <CyU3PSetEpConfig+0x21c>
4001bea0:	e1a00000 	nop			; (mov r0, r0)
4001bea4:	e5d50004 	ldrb	r0, [r5, #4]
4001bea8:	e3500001 	cmp	r0, #1
4001beac:	1a000003 	bne	4001bec0 <CyU3PSetEpConfig+0x1f8>
4001beb0:	e3570b01 	cmp	r7, #1024	; 0x400
4001beb4:	ba000001 	blt	4001bec0 <CyU3PSetEpConfig+0x1f8>
4001beb8:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c280 <CyU3PSetEpConfig+0x5b8>
4001bebc:	ea000005 	b	4001bed8 <CyU3PSetEpConfig+0x210>
4001bec0:	e5d50004 	ldrb	r0, [r5, #4]
4001bec4:	e3500001 	cmp	r0, #1
4001bec8:	0a000002 	beq	4001bed8 <CyU3PSetEpConfig+0x210>
4001becc:	e3570040 	cmp	r7, #64	; 0x40
4001bed0:	da000000 	ble	4001bed8 <CyU3PSetEpConfig+0x210>
4001bed4:	e3a07040 	mov	r7, #64	; 0x40
4001bed8:	ea000001 	b	4001bee4 <CyU3PSetEpConfig+0x21c>
4001bedc:	e1a00000 	nop			; (mov r0, r0)
4001bee0:	e1a00000 	nop			; (mov r0, r0)
4001bee4:	e1a00000 	nop			; (mov r0, r0)
4001bee8:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001beec:	e1888000 	orr	r8, r8, r0
4001bef0:	e3e01000 	mvn	r1, #0
4001bef4:	e59f0388 	ldr	r0, [pc, #904]	; 4001c284 <CyU3PSetEpConfig+0x5bc>
4001bef8:	ebffb82d 	bl	40009fb4 <_txe_mutex_get>
4001befc:	e3140080 	tst	r4, #128	; 0x80
4001bf00:	0a000062 	beq	4001c090 <CyU3PSetEpConfig+0x3c8>
4001bf04:	e5950000 	ldr	r0, [r5]
4001bf08:	e3500000 	cmp	r0, #0
4001bf0c:	1a00001d 	bne	4001bf88 <CyU3PSetEpConfig+0x2c0>
4001bf10:	e59f0370 	ldr	r0, [pc, #880]	; 4001c288 <CyU3PSetEpConfig+0x5c0>
4001bf14:	e59f1370 	ldr	r1, [pc, #880]	; 4001c28c <CyU3PSetEpConfig+0x5c4>
4001bf18:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bf1c:	e3a00020 	mov	r0, #32
4001bf20:	e59f1368 	ldr	r1, [pc, #872]	; 4001c290 <CyU3PSetEpConfig+0x5c8>
4001bf24:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bf28:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001bf2c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001bf30:	e3a01001 	mov	r1, #1
4001bf34:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf38:	e59f1354 	ldr	r1, [pc, #852]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001bf3c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001bf40:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001bf44:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001bf48:	e3a01001 	mov	r1, #1
4001bf4c:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf50:	e59f1340 	ldr	r1, [pc, #832]	; 4001c298 <CyU3PSetEpConfig+0x5d0>
4001bf54:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001bf58:	e3a00000 	mov	r0, #0
4001bf5c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf60:	e59f2334 	ldr	r2, [pc, #820]	; 4001c29c <CyU3PSetEpConfig+0x5d4>
4001bf64:	e0821101 	add	r1, r2, r1, lsl #2
4001bf68:	e5810004 	str	r0, [r1, #4]
4001bf6c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf70:	e0821101 	add	r1, r2, r1, lsl #2
4001bf74:	e5810008 	str	r0, [r1, #8]
4001bf78:	e59f0304 	ldr	r0, [pc, #772]	; 4001c284 <CyU3PSetEpConfig+0x5bc>
4001bf7c:	ebffb841 	bl	4000a088 <_txe_mutex_put>
4001bf80:	e3a00000 	mov	r0, #0
4001bf84:	eaffff5c 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001bf88:	e3a00001 	mov	r0, #1
4001bf8c:	e0861086 	add	r1, r6, r6, lsl #1
4001bf90:	e59f2304 	ldr	r2, [pc, #772]	; 4001c29c <CyU3PSetEpConfig+0x5d4>
4001bf94:	e0821101 	add	r1, r2, r1, lsl #2
4001bf98:	e5810004 	str	r0, [r1, #4]
4001bf9c:	e0861086 	add	r1, r6, r6, lsl #1
4001bfa0:	e0821101 	add	r1, r2, r1, lsl #2
4001bfa4:	e5810008 	str	r0, [r1, #8]
4001bfa8:	e1d500b8 	ldrh	r0, [r5, #8]
4001bfac:	e0861086 	add	r1, r6, r6, lsl #1
4001bfb0:	e0821101 	add	r1, r2, r1, lsl #2
4001bfb4:	e1c100b0 	strh	r0, [r1]
4001bfb8:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c2a0 <CyU3PSetEpConfig+0x5d8>
4001bfbc:	e7807106 	str	r7, [r0, r6, lsl #2]
4001bfc0:	e5d50004 	ldrb	r0, [r5, #4]
4001bfc4:	e3500002 	cmp	r0, #2
4001bfc8:	1a000007 	bne	4001bfec <CyU3PSetEpConfig+0x324>
4001bfcc:	e1d500b6 	ldrh	r0, [r5, #6]
4001bfd0:	e3500000 	cmp	r0, #0
4001bfd4:	da000004 	ble	4001bfec <CyU3PSetEpConfig+0x324>
4001bfd8:	e3a02001 	mov	r2, #1
4001bfdc:	e1a01006 	mov	r1, r6
4001bfe0:	e1a00004 	mov	r0, r4
4001bfe4:	eb00031b 	bl	4001cc58 <CyU3PUsbMapStream>
4001bfe8:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c2a4 <CyU3PSetEpConfig+0x5dc>
4001bfec:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001bff0:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001bff4:	e3a01001 	mov	r1, #1
4001bff8:	e1800611 	orr	r0, r0, r1, lsl r6
4001bffc:	e59f1290 	ldr	r1, [pc, #656]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001c000:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c004:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c008:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c00c:	e59f1278 	ldr	r1, [pc, #632]	; 4001c28c <CyU3PSetEpConfig+0x5c4>
4001c010:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c014:	e3890001 	orr	r0, r9, #1
4001c018:	e59f1270 	ldr	r1, [pc, #624]	; 4001c290 <CyU3PSetEpConfig+0x5c8>
4001c01c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c020:	e2810040 	add	r0, r1, #64	; 0x40
4001c024:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c028:	e59f0278 	ldr	r0, [pc, #632]	; 4001c2a8 <CyU3PSetEpConfig+0x5e0>
4001c02c:	e5900000 	ldr	r0, [r0]
4001c030:	e3500000 	cmp	r0, #0
4001c034:	0a00007f 	beq	4001c238 <CyU3PSetEpConfig+0x570>
4001c038:	e3a00001 	mov	r0, #1
4001c03c:	e59f1268 	ldr	r1, [pc, #616]	; 4001c2ac <CyU3PSetEpConfig+0x5e4>
4001c040:	e5911000 	ldr	r1, [r1]
4001c044:	e1110610 	tst	r1, r0, lsl r6
4001c048:	0a00007a 	beq	4001c238 <CyU3PSetEpConfig+0x570>
4001c04c:	e59f0244 	ldr	r0, [pc, #580]	; 4001c298 <CyU3PSetEpConfig+0x5d0>
4001c050:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c054:	e3a01001 	mov	r1, #1
4001c058:	e1800611 	orr	r0, r0, r1, lsl r6
4001c05c:	e59f1234 	ldr	r1, [pc, #564]	; 4001c298 <CyU3PSetEpConfig+0x5d0>
4001c060:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c064:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c068:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c06c:	e3a01001 	mov	r1, #1
4001c070:	e1800611 	orr	r0, r0, r1, lsl r6
4001c074:	e59f1218 	ldr	r1, [pc, #536]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001c078:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c07c:	e59f0224 	ldr	r0, [pc, #548]	; 4001c2a8 <CyU3PSetEpConfig+0x5e0>
4001c080:	e5901000 	ldr	r1, [r0]
4001c084:	e1a00004 	mov	r0, r4
4001c088:	eb0001ba 	bl	4001c778 <CyU3PUsbEnableEpInterrupts>
4001c08c:	ea000069 	b	4001c238 <CyU3PSetEpConfig+0x570>
4001c090:	e5950000 	ldr	r0, [r5]
4001c094:	e3500000 	cmp	r0, #0
4001c098:	1a00001e 	bne	4001c118 <CyU3PSetEpConfig+0x450>
4001c09c:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c288 <CyU3PSetEpConfig+0x5c0>
4001c0a0:	e59f1208 	ldr	r1, [pc, #520]	; 4001c2b0 <CyU3PSetEpConfig+0x5e8>
4001c0a4:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c0a8:	e3a00020 	mov	r0, #32
4001c0ac:	e59f1200 	ldr	r1, [pc, #512]	; 4001c2b4 <CyU3PSetEpConfig+0x5ec>
4001c0b0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c0b4:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c0b8:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c0bc:	e2861010 	add	r1, r6, #16
4001c0c0:	e3a02001 	mov	r2, #1
4001c0c4:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c0c8:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c298 <CyU3PSetEpConfig+0x5d0>
4001c0cc:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c0d0:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c0d4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c0d8:	e2861010 	add	r1, r6, #16
4001c0dc:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c0e0:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001c0e4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c0e8:	e3a00000 	mov	r0, #0
4001c0ec:	e0861086 	add	r1, r6, r6, lsl #1
4001c0f0:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c2b8 <CyU3PSetEpConfig+0x5f0>
4001c0f4:	e0821101 	add	r1, r2, r1, lsl #2
4001c0f8:	e5810004 	str	r0, [r1, #4]
4001c0fc:	e0861086 	add	r1, r6, r6, lsl #1
4001c100:	e0821101 	add	r1, r2, r1, lsl #2
4001c104:	e5810008 	str	r0, [r1, #8]
4001c108:	e59f0174 	ldr	r0, [pc, #372]	; 4001c284 <CyU3PSetEpConfig+0x5bc>
4001c10c:	ebffb7dd 	bl	4000a088 <_txe_mutex_put>
4001c110:	e3a00000 	mov	r0, #0
4001c114:	eafffef8 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001c118:	e3a00001 	mov	r0, #1
4001c11c:	e0861086 	add	r1, r6, r6, lsl #1
4001c120:	e59f2190 	ldr	r2, [pc, #400]	; 4001c2b8 <CyU3PSetEpConfig+0x5f0>
4001c124:	e0821101 	add	r1, r2, r1, lsl #2
4001c128:	e5810004 	str	r0, [r1, #4]
4001c12c:	e0861086 	add	r1, r6, r6, lsl #1
4001c130:	e0821101 	add	r1, r2, r1, lsl #2
4001c134:	e5810008 	str	r0, [r1, #8]
4001c138:	e1d500b8 	ldrh	r0, [r5, #8]
4001c13c:	e0861086 	add	r1, r6, r6, lsl #1
4001c140:	e0821101 	add	r1, r2, r1, lsl #2
4001c144:	e1c100b0 	strh	r0, [r1]
4001c148:	e59f016c 	ldr	r0, [pc, #364]	; 4001c2bc <CyU3PSetEpConfig+0x5f4>
4001c14c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c150:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c154:	e1800007 	orr	r0, r0, r7
4001c158:	e59f115c 	ldr	r1, [pc, #348]	; 4001c2bc <CyU3PSetEpConfig+0x5f4>
4001c15c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c160:	e5d50004 	ldrb	r0, [r5, #4]
4001c164:	e3500002 	cmp	r0, #2
4001c168:	1a00000e 	bne	4001c1a8 <CyU3PSetEpConfig+0x4e0>
4001c16c:	e1d500b6 	ldrh	r0, [r5, #6]
4001c170:	e3500000 	cmp	r0, #0
4001c174:	da00000b 	ble	4001c1a8 <CyU3PSetEpConfig+0x4e0>
4001c178:	e3a02001 	mov	r2, #1
4001c17c:	e1a01006 	mov	r1, r6
4001c180:	e1a00004 	mov	r0, r4
4001c184:	eb0002b3 	bl	4001cc58 <CyU3PUsbMapStream>
4001c188:	e59f0104 	ldr	r0, [pc, #260]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001c18c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c190:	e2861010 	add	r1, r6, #16
4001c194:	e3a02001 	mov	r2, #1
4001c198:	e1800112 	orr	r0, r0, r2, lsl r1
4001c19c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001c1a0:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c1a4:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c2a4 <CyU3PSetEpConfig+0x5dc>
4001c1a8:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c1ac:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c2b0 <CyU3PSetEpConfig+0x5e8>
4001c1b0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1b4:	e3890001 	orr	r0, r9, #1
4001c1b8:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c2b4 <CyU3PSetEpConfig+0x5ec>
4001c1bc:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1c0:	e2810040 	add	r0, r1, #64	; 0x40
4001c1c4:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c1c8:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c2a8 <CyU3PSetEpConfig+0x5e0>
4001c1cc:	e5900000 	ldr	r0, [r0]
4001c1d0:	e3500000 	cmp	r0, #0
4001c1d4:	0a000017 	beq	4001c238 <CyU3PSetEpConfig+0x570>
4001c1d8:	e2860010 	add	r0, r6, #16
4001c1dc:	e3a01001 	mov	r1, #1
4001c1e0:	e1a00011 	lsl	r0, r1, r0
4001c1e4:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c2ac <CyU3PSetEpConfig+0x5e4>
4001c1e8:	e5911000 	ldr	r1, [r1]
4001c1ec:	e1100001 	tst	r0, r1
4001c1f0:	0a000010 	beq	4001c238 <CyU3PSetEpConfig+0x570>
4001c1f4:	e59f009c 	ldr	r0, [pc, #156]	; 4001c298 <CyU3PSetEpConfig+0x5d0>
4001c1f8:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c1fc:	e2861010 	add	r1, r6, #16
4001c200:	e3a02001 	mov	r2, #1
4001c204:	e1800112 	orr	r0, r0, r2, lsl r1
4001c208:	e59f1088 	ldr	r1, [pc, #136]	; 4001c298 <CyU3PSetEpConfig+0x5d0>
4001c20c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c210:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c214:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c218:	e2861010 	add	r1, r6, #16
4001c21c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c220:	e59f106c 	ldr	r1, [pc, #108]	; 4001c294 <CyU3PSetEpConfig+0x5cc>
4001c224:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c228:	e59f0078 	ldr	r0, [pc, #120]	; 4001c2a8 <CyU3PSetEpConfig+0x5e0>
4001c22c:	e5901000 	ldr	r1, [r0]
4001c230:	e1a00004 	mov	r0, r4
4001c234:	eb00014f 	bl	4001c778 <CyU3PUsbEnableEpInterrupts>
4001c238:	e59f0038 	ldr	r0, [pc, #56]	; 4001c278 <CyU3PSetEpConfig+0x5b0>
4001c23c:	e5d00008 	ldrb	r0, [r0, #8]
4001c240:	e3500005 	cmp	r0, #5
4001c244:	ba000007 	blt	4001c268 <CyU3PSetEpConfig+0x5a0>
4001c248:	e1a00004 	mov	r0, r4
4001c24c:	eb00040e 	bl	4001d28c <CyU3PUsbResetEp>
4001c250:	e1a00004 	mov	r0, r4
4001c254:	eb0001a4 	bl	4001c8ec <CyU3PUsbFlushEp>
4001c258:	e3a02001 	mov	r2, #1
4001c25c:	e3a01000 	mov	r1, #0
4001c260:	e1a00004 	mov	r0, r4
4001c264:	eb00066c 	bl	4001dc1c <CyU3PUsbStall>
4001c268:	e59f0014 	ldr	r0, [pc, #20]	; 4001c284 <CyU3PSetEpConfig+0x5bc>
4001c26c:	ebffb785 	bl	4000a088 <_txe_mutex_put>
4001c270:	e3a00000 	mov	r0, #0
4001c274:	eafffea0 	b	4001bcfc <CyU3PSetEpConfig+0x34>
4001c278:	40031d40 	.word	0x40031d40
4001c27c:	40011d84 	.word	0x40011d84
4001c280:	000003ff 	.word	0x000003ff
4001c284:	40031ee0 	.word	0x40031ee0
4001c288:	00004040 	.word	0x00004040
4001c28c:	e0031418 	.word	0xe0031418
4001c290:	e0033500 	.word	0xe0033500
4001c294:	e0033000 	.word	0xe0033000
4001c298:	e0031000 	.word	0xe0031000
4001c29c:	40031bb4 	.word	0x40031bb4
4001c2a0:	e0031c40 	.word	0xe0031c40
4001c2a4:	00400028 	.word	0x00400028
4001c2a8:	40030d80 	.word	0x40030d80
4001c2ac:	40030d84 	.word	0x40030d84
4001c2b0:	e0031498 	.word	0xe0031498
4001c2b4:	e0033600 	.word	0xe0033600
4001c2b8:	40031c74 	.word	0x40031c74
4001c2bc:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c2c0 <CyU3PSetUsbCoreClock>:
4001c2c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c2c4:	e1a04000 	mov	r4, r0
4001c2c8:	e1a05001 	mov	r5, r1
4001c2cc:	eb0016d5 	bl	40021e28 <CyU3PVicDisableAllInterrupts>
4001c2d0:	e1a06000 	mov	r6, r0
4001c2d4:	e59f0064 	ldr	r0, [pc, #100]	; 4001c340 <CyU3PSetUsbCoreClock+0x80>
4001c2d8:	e5900008 	ldr	r0, [r0, #8]
4001c2dc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c2e0:	e59f1058 	ldr	r1, [pc, #88]	; 4001c340 <CyU3PSetUsbCoreClock+0x80>
4001c2e4:	e5810008 	str	r0, [r1, #8]
4001c2e8:	e3a07014 	mov	r7, #20
4001c2ec:	ea000001 	b	4001c2f8 <CyU3PSetUsbCoreClock+0x38>
4001c2f0:	e1a00000 	nop			; (mov r0, r0)
4001c2f4:	e2477001 	sub	r7, r7, #1
4001c2f8:	e3570000 	cmp	r7, #0
4001c2fc:	1afffffb 	bne	4001c2f0 <CyU3PSetUsbCoreClock+0x30>
4001c300:	e1850104 	orr	r0, r5, r4, lsl #2
4001c304:	e59f1034 	ldr	r1, [pc, #52]	; 4001c340 <CyU3PSetUsbCoreClock+0x80>
4001c308:	e5810008 	str	r0, [r1, #8]
4001c30c:	e1a00001 	mov	r0, r1
4001c310:	e5900008 	ldr	r0, [r0, #8]
4001c314:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c318:	e5810008 	str	r0, [r1, #8]
4001c31c:	e3a07050 	mov	r7, #80	; 0x50
4001c320:	ea000001 	b	4001c32c <CyU3PSetUsbCoreClock+0x6c>
4001c324:	e1a00000 	nop			; (mov r0, r0)
4001c328:	e2477001 	sub	r7, r7, #1
4001c32c:	e3570000 	cmp	r7, #0
4001c330:	1afffffb 	bne	4001c324 <CyU3PSetUsbCoreClock+0x64>
4001c334:	e1a00006 	mov	r0, r6
4001c338:	eb0016c8 	bl	40021e60 <CyU3PVicEnableInterrupts>
4001c33c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c340:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c344 <CyU3PUibInit>:
4001c344:	e92d4010 	push	{r4, lr}
4001c348:	e3a04000 	mov	r4, #0
4001c34c:	e3a00000 	mov	r0, #0
4001c350:	e59f117c 	ldr	r1, [pc, #380]	; 4001c4d4 <CyU3PUibInit+0x190>
4001c354:	e5810004 	str	r0, [r1, #4]
4001c358:	e5810008 	str	r0, [r1, #8]
4001c35c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c360:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c364:	e581001c 	str	r0, [r1, #28]
4001c368:	e3e00000 	mvn	r0, #0
4001c36c:	e581000c 	str	r0, [r1, #12]
4001c370:	e5810004 	str	r0, [r1, #4]
4001c374:	e59f015c 	ldr	r0, [pc, #348]	; 4001c4d8 <CyU3PUibInit+0x194>
4001c378:	e5810008 	str	r0, [r1, #8]
4001c37c:	e3a00000 	mov	r0, #0
4001c380:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c384:	e3e00000 	mvn	r0, #0
4001c388:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c38c:	e59f0148 	ldr	r0, [pc, #328]	; 4001c4dc <CyU3PUibInit+0x198>
4001c390:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c394:	eb0016c5 	bl	40021eb0 <CyFx3Usb2PhySetup>
4001c398:	e3e00000 	mvn	r0, #0
4001c39c:	e59f113c 	ldr	r1, [pc, #316]	; 4001c4e0 <CyU3PUibInit+0x19c>
4001c3a0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c3a4:	e59f0138 	ldr	r0, [pc, #312]	; 4001c4e4 <CyU3PUibInit+0x1a0>
4001c3a8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c3ac:	e3e00000 	mvn	r0, #0
4001c3b0:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c3b4:	e3a00000 	mov	r0, #0
4001c3b8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c3bc:	e3a00001 	mov	r0, #1
4001c3c0:	e1811680 	orr	r1, r1, r0, lsl #13
4001c3c4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c3c8:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c3cc:	e3a00043 	mov	r0, #67	; 0x43
4001c3d0:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c3d4:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c3d8:	e59f0108 	ldr	r0, [pc, #264]	; 4001c4e8 <CyU3PUibInit+0x1a4>
4001c3dc:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c3e0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c3e4:	e3a00040 	mov	r0, #64	; 0x40
4001c3e8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c3ec:	e1800400 	orr	r0, r0, r0, lsl #8
4001c3f0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c3f4:	e3a00040 	mov	r0, #64	; 0x40
4001c3f8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c3fc:	e3a04001 	mov	r4, #1
4001c400:	ea000015 	b	4001c45c <CyU3PUibInit+0x118>
4001c404:	e1a00004 	mov	r0, r4
4001c408:	eb000137 	bl	4001c8ec <CyU3PUsbFlushEp>
4001c40c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c4ec <CyU3PUibInit+0x1a8>
4001c410:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c414:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c418:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c4ec <CyU3PUibInit+0x1a8>
4001c41c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c420:	e3a00000 	mov	r0, #0
4001c424:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c4f0 <CyU3PUibInit+0x1ac>
4001c428:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c42c:	e3840080 	orr	r0, r4, #128	; 0x80
4001c430:	eb00012d 	bl	4001c8ec <CyU3PUsbFlushEp>
4001c434:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c4f4 <CyU3PUibInit+0x1b0>
4001c438:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c43c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c440:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c4f4 <CyU3PUibInit+0x1b0>
4001c444:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c448:	e3a00000 	mov	r0, #0
4001c44c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c4f8 <CyU3PUibInit+0x1b4>
4001c450:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c454:	e2840001 	add	r0, r4, #1
4001c458:	e20040ff 	and	r4, r0, #255	; 0xff
4001c45c:	e3540010 	cmp	r4, #16
4001c460:	baffffe7 	blt	4001c404 <CyU3PUibInit+0xc0>
4001c464:	e59f0090 	ldr	r0, [pc, #144]	; 4001c4fc <CyU3PUibInit+0x1b8>
4001c468:	e5900004 	ldr	r0, [r0, #4]
4001c46c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c470:	e59f1084 	ldr	r1, [pc, #132]	; 4001c4fc <CyU3PUibInit+0x1b8>
4001c474:	e5810004 	str	r0, [r1, #4]
4001c478:	e3e00000 	mvn	r0, #0
4001c47c:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c480:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c484:	e3a00b01 	mov	r0, #1024	; 0x400
4001c488:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c48c:	e59f106c 	ldr	r1, [pc, #108]	; 4001c500 <CyU3PUibInit+0x1bc>
4001c490:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c494:	e3a00015 	mov	r0, #21
4001c498:	eb00166b 	bl	40021e4c <CyU3PVicEnableInt>
4001c49c:	e59f0060 	ldr	r0, [pc, #96]	; 4001c504 <CyU3PUibInit+0x1c0>
4001c4a0:	e5900000 	ldr	r0, [r0]
4001c4a4:	e3500000 	cmp	r0, #0
4001c4a8:	0a000008 	beq	4001c4d0 <CyU3PUibInit+0x18c>
4001c4ac:	e59f0054 	ldr	r0, [pc, #84]	; 4001c508 <CyU3PUibInit+0x1c4>
4001c4b0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c4b4:	e3100b01 	tst	r0, #1024	; 0x400
4001c4b8:	0a000004 	beq	4001c4d0 <CyU3PUibInit+0x18c>
4001c4bc:	e3a01000 	mov	r1, #0
4001c4c0:	e3a0000b 	mov	r0, #11
4001c4c4:	e59f2038 	ldr	r2, [pc, #56]	; 4001c504 <CyU3PUibInit+0x1c0>
4001c4c8:	e5922000 	ldr	r2, [r2]
4001c4cc:	e12fff32 	blx	r2
4001c4d0:	e8bd8010 	pop	{r4, pc}
4001c4d4:	e0050000 	.word	0xe0050000
4001c4d8:	00038081 	.word	0x00038081
4001c4dc:	00004a3d 	.word	0x00004a3d
4001c4e0:	e0031000 	.word	0xe0031000
4001c4e4:	0000095c 	.word	0x0000095c
4001c4e8:	00004040 	.word	0x00004040
4001c4ec:	e0031498 	.word	0xe0031498
4001c4f0:	e0033600 	.word	0xe0033600
4001c4f4:	e0031418 	.word	0xe0031418
4001c4f8:	e0033500 	.word	0xe0033500
4001c4fc:	e0030000 	.word	0xe0030000
4001c500:	40031d40 	.word	0x40031d40
4001c504:	40030da0 	.word	0x40030da0
4001c508:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c50c <CyU3PUsbAckSetup>:
4001c50c:	e92d4010 	push	{r4, lr}
4001c510:	e3e01000 	mvn	r1, #0
4001c514:	e59f00fc 	ldr	r0, [pc, #252]	; 4001c618 <CyU3PUsbAckSetup+0x10c>
4001c518:	ebffb6a5 	bl	40009fb4 <_txe_mutex_get>
4001c51c:	eb000780 	bl	4001e324 <GetUsbLinkActive>
4001c520:	eb00019e 	bl	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c524:	e3500000 	cmp	r0, #0
4001c528:	0a000002 	beq	4001c538 <CyU3PUsbAckSetup+0x2c>
4001c52c:	e59f00e4 	ldr	r0, [pc, #228]	; 4001c618 <CyU3PUsbAckSetup+0x10c>
4001c530:	ebffb6d4 	bl	4000a088 <_txe_mutex_put>
4001c534:	e8bd8010 	pop	{r4, pc}
4001c538:	e3a00000 	mov	r0, #0
4001c53c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001c61c <CyU3PUsbAckSetup+0x110>
4001c540:	e5810014 	str	r0, [r1, #20]
4001c544:	e2810000 	add	r0, r1, #0
4001c548:	e5d00009 	ldrb	r0, [r0, #9]
4001c54c:	e3500003 	cmp	r0, #3
4001c550:	1a000026 	bne	4001c5f0 <CyU3PUsbAckSetup+0xe4>
4001c554:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c620 <CyU3PUsbAckSetup+0x114>
4001c558:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c55c:	e3c00004 	bic	r0, r0, #4
4001c560:	e59f10b8 	ldr	r1, [pc, #184]	; 4001c620 <CyU3PUsbAckSetup+0x114>
4001c564:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c568:	e1a00001 	mov	r0, r1
4001c56c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c570:	e3c00004 	bic	r0, r0, #4
4001c574:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c578:	eb00162a 	bl	40021e28 <CyU3PVicDisableAllInterrupts>
4001c57c:	e1a04000 	mov	r4, r0
4001c580:	e3a00001 	mov	r0, #1
4001c584:	ebffdbad 	bl	40013440 <CyU3PBusyWait>
4001c588:	e59f0090 	ldr	r0, [pc, #144]	; 4001c620 <CyU3PUsbAckSetup+0x114>
4001c58c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c590:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c594:	e59f1084 	ldr	r1, [pc, #132]	; 4001c620 <CyU3PUsbAckSetup+0x114>
4001c598:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c59c:	e1a00004 	mov	r0, r4
4001c5a0:	eb00162e 	bl	40021e60 <CyU3PVicEnableInterrupts>
4001c5a4:	e3a00c02 	mov	r0, #512	; 0x200
4001c5a8:	e59f1074 	ldr	r1, [pc, #116]	; 4001c624 <CyU3PUsbAckSetup+0x118>
4001c5ac:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c5b0:	e3a00016 	mov	r0, #22
4001c5b4:	eb000ced 	bl	4001f970 <CyU3PUsbAddToEventLog>
4001c5b8:	e59f005c 	ldr	r0, [pc, #92]	; 4001c61c <CyU3PUsbAckSetup+0x110>
4001c5bc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001c5c0:	e3500000 	cmp	r0, #0
4001c5c4:	1a000010 	bne	4001c60c <CyU3PUsbAckSetup+0x100>
4001c5c8:	e3a00001 	mov	r0, #1
4001c5cc:	e59f1054 	ldr	r1, [pc, #84]	; 4001c628 <CyU3PUsbAckSetup+0x11c>
4001c5d0:	e5810000 	str	r0, [r1]
4001c5d4:	e3a02000 	mov	r2, #0
4001c5d8:	e3a01064 	mov	r1, #100	; 0x64
4001c5dc:	e59f0048 	ldr	r0, [pc, #72]	; 4001c62c <CyU3PUsbAckSetup+0x120>
4001c5e0:	ebffb8c1 	bl	4000a8ec <_txe_timer_change>
4001c5e4:	e59f0040 	ldr	r0, [pc, #64]	; 4001c62c <CyU3PUsbAckSetup+0x120>
4001c5e8:	ebffb8af 	bl	4000a8ac <_txe_timer_activate>
4001c5ec:	ea000006 	b	4001c60c <CyU3PUsbAckSetup+0x100>
4001c5f0:	e59f002c 	ldr	r0, [pc, #44]	; 4001c624 <CyU3PUsbAckSetup+0x118>
4001c5f4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c5f8:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001c5fc:	e59f1020 	ldr	r1, [pc, #32]	; 4001c624 <CyU3PUsbAckSetup+0x118>
4001c600:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c604:	e3a00040 	mov	r0, #64	; 0x40
4001c608:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c60c:	e59f0004 	ldr	r0, [pc, #4]	; 4001c618 <CyU3PUsbAckSetup+0x10c>
4001c610:	ebffb69c 	bl	4000a088 <_txe_mutex_put>
4001c614:	eaffffc6 	b	4001c534 <CyU3PUsbAckSetup+0x28>
4001c618:	40031ee0 	.word	0x40031ee0
4001c61c:	40031d40 	.word	0x40031d40
4001c620:	e0033000 	.word	0xe0033000
4001c624:	e0031000 	.word	0xe0031000
4001c628:	40030db4 	.word	0x40030db4
4001c62c:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001c630 <CyU3PUsbCreateDmaChannels>:
4001c630:	e92d4010 	push	{r4, lr}
4001c634:	e24dd020 	sub	sp, sp, #32
4001c638:	e3a00c02 	mov	r0, #512	; 0x200
4001c63c:	e1cd00b4 	strh	r0, [sp, #4]
4001c640:	e3a00001 	mov	r0, #1
4001c644:	e1cd00b6 	strh	r0, [sp, #6]
4001c648:	e3a00000 	mov	r0, #0
4001c64c:	e1cd00bc 	strh	r0, [sp, #12]
4001c650:	e3a00c03 	mov	r0, #768	; 0x300
4001c654:	e1cd00ba 	strh	r0, [sp, #10]
4001c658:	e3a00000 	mov	r0, #0
4001c65c:	e5cd0014 	strb	r0, [sp, #20]
4001c660:	e1cd00be 	strh	r0, [sp, #14]
4001c664:	e1cd01b0 	strh	r0, [sp, #16]
4001c668:	e1cd01b2 	strh	r0, [sp, #18]
4001c66c:	e58d0018 	str	r0, [sp, #24]
4001c670:	e58d001c 	str	r0, [sp, #28]
4001c674:	e59f00ec 	ldr	r0, [pc, #236]	; 4001c768 <CyU3PUsbCreateDmaChannels+0x138>
4001c678:	e1cd00b8 	strh	r0, [sp, #8]
4001c67c:	e28d2004 	add	r2, sp, #4
4001c680:	e3a01004 	mov	r1, #4
4001c684:	e59f00e0 	ldr	r0, [pc, #224]	; 4001c76c <CyU3PUsbCreateDmaChannels+0x13c>
4001c688:	ebffe411 	bl	400156d4 <CyU3PDmaChannelCreate>
4001c68c:	e1a04000 	mov	r4, r0
4001c690:	e3540000 	cmp	r4, #0
4001c694:	0a000002 	beq	4001c6a4 <CyU3PUsbCreateDmaChannels+0x74>
4001c698:	e3a0004e 	mov	r0, #78	; 0x4e
4001c69c:	e28dd020 	add	sp, sp, #32
4001c6a0:	e8bd8010 	pop	{r4, pc}
4001c6a4:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c770 <CyU3PUsbCreateDmaChannels+0x140>
4001c6a8:	e5900000 	ldr	r0, [r0]
4001c6ac:	e3500000 	cmp	r0, #0
4001c6b0:	0a000009 	beq	4001c6dc <CyU3PUsbCreateDmaChannels+0xac>
4001c6b4:	e3a01001 	mov	r1, #1
4001c6b8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001c76c <CyU3PUsbCreateDmaChannels+0x13c>
4001c6bc:	ebffe274 	bl	40015094 <CyU3PDmaChannelCacheControl>
4001c6c0:	e1a04000 	mov	r4, r0
4001c6c4:	e3540000 	cmp	r4, #0
4001c6c8:	0a000003 	beq	4001c6dc <CyU3PUsbCreateDmaChannels+0xac>
4001c6cc:	e59f0098 	ldr	r0, [pc, #152]	; 4001c76c <CyU3PUsbCreateDmaChannels+0x13c>
4001c6d0:	ebffe4f9 	bl	40015abc <CyU3PDmaChannelDestroy>
4001c6d4:	e3a0004e 	mov	r0, #78	; 0x4e
4001c6d8:	eaffffef 	b	4001c69c <CyU3PUsbCreateDmaChannels+0x6c>
4001c6dc:	e3a00b01 	mov	r0, #1024	; 0x400
4001c6e0:	e1cd00b8 	strh	r0, [sp, #8]
4001c6e4:	e3a00000 	mov	r0, #0
4001c6e8:	e58d001c 	str	r0, [sp, #28]
4001c6ec:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001c6f0:	e1cd00ba 	strh	r0, [sp, #10]
4001c6f4:	e28d2004 	add	r2, sp, #4
4001c6f8:	e3a01003 	mov	r1, #3
4001c6fc:	e59f0070 	ldr	r0, [pc, #112]	; 4001c774 <CyU3PUsbCreateDmaChannels+0x144>
4001c700:	ebffe3f3 	bl	400156d4 <CyU3PDmaChannelCreate>
4001c704:	e1a04000 	mov	r4, r0
4001c708:	e3540000 	cmp	r4, #0
4001c70c:	0a000003 	beq	4001c720 <CyU3PUsbCreateDmaChannels+0xf0>
4001c710:	e59f0054 	ldr	r0, [pc, #84]	; 4001c76c <CyU3PUsbCreateDmaChannels+0x13c>
4001c714:	ebffe4e8 	bl	40015abc <CyU3PDmaChannelDestroy>
4001c718:	e3a0004e 	mov	r0, #78	; 0x4e
4001c71c:	eaffffde 	b	4001c69c <CyU3PUsbCreateDmaChannels+0x6c>
4001c720:	e59f0048 	ldr	r0, [pc, #72]	; 4001c770 <CyU3PUsbCreateDmaChannels+0x140>
4001c724:	e5900000 	ldr	r0, [r0]
4001c728:	e3500000 	cmp	r0, #0
4001c72c:	0a00000b 	beq	4001c760 <CyU3PUsbCreateDmaChannels+0x130>
4001c730:	e3a01001 	mov	r1, #1
4001c734:	e59f0038 	ldr	r0, [pc, #56]	; 4001c774 <CyU3PUsbCreateDmaChannels+0x144>
4001c738:	ebffe255 	bl	40015094 <CyU3PDmaChannelCacheControl>
4001c73c:	e1a04000 	mov	r4, r0
4001c740:	e3540000 	cmp	r4, #0
4001c744:	0a000005 	beq	4001c760 <CyU3PUsbCreateDmaChannels+0x130>
4001c748:	e59f001c 	ldr	r0, [pc, #28]	; 4001c76c <CyU3PUsbCreateDmaChannels+0x13c>
4001c74c:	ebffe4da 	bl	40015abc <CyU3PDmaChannelDestroy>
4001c750:	e59f001c 	ldr	r0, [pc, #28]	; 4001c774 <CyU3PUsbCreateDmaChannels+0x144>
4001c754:	ebffe4d8 	bl	40015abc <CyU3PDmaChannelDestroy>
4001c758:	e3a0004e 	mov	r0, #78	; 0x4e
4001c75c:	eaffffce 	b	4001c69c <CyU3PUsbCreateDmaChannels+0x6c>
4001c760:	e1a00004 	mov	r0, r4
4001c764:	eaffffcc 	b	4001c69c <CyU3PUsbCreateDmaChannels+0x6c>
4001c768:	00003f01 	.word	0x00003f01
4001c76c:	40031a74 	.word	0x40031a74
4001c770:	40030c64 	.word	0x40030c64
4001c774:	40031b14 	.word	0x40031b14

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001c778 <CyU3PUsbEnableEpInterrupts>:
4001c778:	e200300f 	and	r3, r0, #15
4001c77c:	e3100080 	tst	r0, #128	; 0x80
4001c780:	0a00002a 	beq	4001c830 <CyU3PUsbEnableEpInterrupts+0xb8>
4001c784:	e59fc150 	ldr	ip, [pc, #336]	; 4001c8dc <CyU3PUsbEnableEpInterrupts+0x164>
4001c788:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c78c:	e3120901 	tst	r2, #16384	; 0x4000
4001c790:	0a00000d 	beq	4001c7cc <CyU3PUsbEnableEpInterrupts+0x54>
4001c794:	e3110001 	tst	r1, #1
4001c798:	0a000000 	beq	4001c7a0 <CyU3PUsbEnableEpInterrupts+0x28>
4001c79c:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c7a0:	e3110002 	tst	r1, #2
4001c7a4:	0a000000 	beq	4001c7ac <CyU3PUsbEnableEpInterrupts+0x34>
4001c7a8:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c7ac:	e3110004 	tst	r1, #4
4001c7b0:	0a000000 	beq	4001c7b8 <CyU3PUsbEnableEpInterrupts+0x40>
4001c7b4:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c7b8:	e3110008 	tst	r1, #8
4001c7bc:	0a000000 	beq	4001c7c4 <CyU3PUsbEnableEpInterrupts+0x4c>
4001c7c0:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c7c4:	e59fc110 	ldr	ip, [pc, #272]	; 4001c8dc <CyU3PUsbEnableEpInterrupts+0x164>
4001c7c8:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c7cc:	e59fc10c 	ldr	ip, [pc, #268]	; 4001c8e0 <CyU3PUsbEnableEpInterrupts+0x168>
4001c7d0:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c7d4:	e3120001 	tst	r2, #1
4001c7d8:	0a00003e 	beq	4001c8d8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c7dc:	e3110001 	tst	r1, #1
4001c7e0:	0a000000 	beq	4001c7e8 <CyU3PUsbEnableEpInterrupts+0x70>
4001c7e4:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c7e8:	e3110002 	tst	r1, #2
4001c7ec:	0a000000 	beq	4001c7f4 <CyU3PUsbEnableEpInterrupts+0x7c>
4001c7f0:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c7f4:	e3110004 	tst	r1, #4
4001c7f8:	0a000000 	beq	4001c800 <CyU3PUsbEnableEpInterrupts+0x88>
4001c7fc:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c800:	e3110010 	tst	r1, #16
4001c804:	0a000000 	beq	4001c80c <CyU3PUsbEnableEpInterrupts+0x94>
4001c808:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c80c:	e3110020 	tst	r1, #32
4001c810:	0a000000 	beq	4001c818 <CyU3PUsbEnableEpInterrupts+0xa0>
4001c814:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c818:	e3110040 	tst	r1, #64	; 0x40
4001c81c:	0a000000 	beq	4001c824 <CyU3PUsbEnableEpInterrupts+0xac>
4001c820:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c824:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001c8e0 <CyU3PUsbEnableEpInterrupts+0x168>
4001c828:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c82c:	ea000029 	b	4001c8d8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c830:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001c8e4 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c834:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c838:	e3120901 	tst	r2, #16384	; 0x4000
4001c83c:	0a00000d 	beq	4001c878 <CyU3PUsbEnableEpInterrupts+0x100>
4001c840:	e3110001 	tst	r1, #1
4001c844:	0a000000 	beq	4001c84c <CyU3PUsbEnableEpInterrupts+0xd4>
4001c848:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c84c:	e3110002 	tst	r1, #2
4001c850:	0a000000 	beq	4001c858 <CyU3PUsbEnableEpInterrupts+0xe0>
4001c854:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c858:	e3110004 	tst	r1, #4
4001c85c:	0a000000 	beq	4001c864 <CyU3PUsbEnableEpInterrupts+0xec>
4001c860:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c864:	e3110008 	tst	r1, #8
4001c868:	0a000000 	beq	4001c870 <CyU3PUsbEnableEpInterrupts+0xf8>
4001c86c:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c870:	e59fc06c 	ldr	ip, [pc, #108]	; 4001c8e4 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c874:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c878:	e59fc068 	ldr	ip, [pc, #104]	; 4001c8e8 <CyU3PUsbEnableEpInterrupts+0x170>
4001c87c:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c880:	e3120001 	tst	r2, #1
4001c884:	0a000013 	beq	4001c8d8 <CyU3PUsbEnableEpInterrupts+0x160>
4001c888:	e3110001 	tst	r1, #1
4001c88c:	0a000000 	beq	4001c894 <CyU3PUsbEnableEpInterrupts+0x11c>
4001c890:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c894:	e3110002 	tst	r1, #2
4001c898:	0a000000 	beq	4001c8a0 <CyU3PUsbEnableEpInterrupts+0x128>
4001c89c:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c8a0:	e3110004 	tst	r1, #4
4001c8a4:	0a000000 	beq	4001c8ac <CyU3PUsbEnableEpInterrupts+0x134>
4001c8a8:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c8ac:	e3110010 	tst	r1, #16
4001c8b0:	0a000000 	beq	4001c8b8 <CyU3PUsbEnableEpInterrupts+0x140>
4001c8b4:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c8b8:	e3110020 	tst	r1, #32
4001c8bc:	0a000000 	beq	4001c8c4 <CyU3PUsbEnableEpInterrupts+0x14c>
4001c8c0:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c8c4:	e3110040 	tst	r1, #64	; 0x40
4001c8c8:	0a000000 	beq	4001c8d0 <CyU3PUsbEnableEpInterrupts+0x158>
4001c8cc:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c8d0:	e59fc010 	ldr	ip, [pc, #16]	; 4001c8e8 <CyU3PUsbEnableEpInterrupts+0x170>
4001c8d4:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c8d8:	e12fff1e 	bx	lr
4001c8dc:	e0031418 	.word	0xe0031418
4001c8e0:	e0033500 	.word	0xe0033500
4001c8e4:	e0031498 	.word	0xe0031498
4001c8e8:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001c8ec <CyU3PUsbFlushEp>:
4001c8ec:	e92d4070 	push	{r4, r5, r6, lr}
4001c8f0:	e1a04000 	mov	r4, r0
4001c8f4:	e204507f 	and	r5, r4, #127	; 0x7f
4001c8f8:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c9a8 <CyU3PUsbFlushEp+0xbc>
4001c8fc:	e5d00008 	ldrb	r0, [r0, #8]
4001c900:	e3500000 	cmp	r0, #0
4001c904:	1a000001 	bne	4001c910 <CyU3PUsbFlushEp+0x24>
4001c908:	e3a00042 	mov	r0, #66	; 0x42
4001c90c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001c910:	e355000f 	cmp	r5, #15
4001c914:	da000001 	ble	4001c920 <CyU3PUsbFlushEp+0x34>
4001c918:	e3a00040 	mov	r0, #64	; 0x40
4001c91c:	eafffffa 	b	4001c90c <CyU3PUsbFlushEp+0x20>
4001c920:	e3e01000 	mvn	r1, #0
4001c924:	e59f0080 	ldr	r0, [pc, #128]	; 4001c9ac <CyU3PUsbFlushEp+0xc0>
4001c928:	ebffb5a1 	bl	40009fb4 <_txe_mutex_get>
4001c92c:	e3140080 	tst	r4, #128	; 0x80
4001c930:	0a00000c 	beq	4001c968 <CyU3PUsbFlushEp+0x7c>
4001c934:	e59f0074 	ldr	r0, [pc, #116]	; 4001c9b0 <CyU3PUsbFlushEp+0xc4>
4001c938:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c93c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c940:	e59f1068 	ldr	r1, [pc, #104]	; 4001c9b0 <CyU3PUsbFlushEp+0xc4>
4001c944:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c948:	e3a0000a 	mov	r0, #10
4001c94c:	ebffdabb 	bl	40013440 <CyU3PBusyWait>
4001c950:	e59f0058 	ldr	r0, [pc, #88]	; 4001c9b0 <CyU3PUsbFlushEp+0xc4>
4001c954:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c958:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c95c:	e59f104c 	ldr	r1, [pc, #76]	; 4001c9b0 <CyU3PUsbFlushEp+0xc4>
4001c960:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c964:	ea00000b 	b	4001c998 <CyU3PUsbFlushEp+0xac>
4001c968:	e59f0044 	ldr	r0, [pc, #68]	; 4001c9b4 <CyU3PUsbFlushEp+0xc8>
4001c96c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c970:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c974:	e59f1038 	ldr	r1, [pc, #56]	; 4001c9b4 <CyU3PUsbFlushEp+0xc8>
4001c978:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c97c:	e3a0000a 	mov	r0, #10
4001c980:	ebffdaae 	bl	40013440 <CyU3PBusyWait>
4001c984:	e59f0028 	ldr	r0, [pc, #40]	; 4001c9b4 <CyU3PUsbFlushEp+0xc8>
4001c988:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c98c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c990:	e59f101c 	ldr	r1, [pc, #28]	; 4001c9b4 <CyU3PUsbFlushEp+0xc8>
4001c994:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c998:	e59f000c 	ldr	r0, [pc, #12]	; 4001c9ac <CyU3PUsbFlushEp+0xc0>
4001c99c:	ebffb5b9 	bl	4000a088 <_txe_mutex_put>
4001c9a0:	e3a00000 	mov	r0, #0
4001c9a4:	eaffffd8 	b	4001c90c <CyU3PUsbFlushEp+0x20>
4001c9a8:	40031d40 	.word	0x40031d40
4001c9ac:	40031ee0 	.word	0x40031ee0
4001c9b0:	e0031c40 	.word	0xe0031c40
4001c9b4:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001c9b8 <CyU3PUsbGetEP0Data>:
4001c9b8:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001c9bc:	e1a04000 	mov	r4, r0
4001c9c0:	e1a05001 	mov	r5, r1
4001c9c4:	e1a06002 	mov	r6, r2
4001c9c8:	e59f8198 	ldr	r8, [pc, #408]	; 4001cb68 <CyU3PUsbGetEP0Data+0x1b0>
4001c9cc:	e59f0198 	ldr	r0, [pc, #408]	; 4001cb6c <CyU3PUsbGetEP0Data+0x1b4>
4001c9d0:	e5d00008 	ldrb	r0, [r0, #8]
4001c9d4:	e3500000 	cmp	r0, #0
4001c9d8:	1a000001 	bne	4001c9e4 <CyU3PUsbGetEP0Data+0x2c>
4001c9dc:	e3a00042 	mov	r0, #66	; 0x42
4001c9e0:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001c9e4:	e3550000 	cmp	r5, #0
4001c9e8:	1a000001 	bne	4001c9f4 <CyU3PUsbGetEP0Data+0x3c>
4001c9ec:	e3a00040 	mov	r0, #64	; 0x40
4001c9f0:	eafffffa 	b	4001c9e0 <CyU3PUsbGetEP0Data+0x28>
4001c9f4:	e3e01000 	mvn	r1, #0
4001c9f8:	e59f0170 	ldr	r0, [pc, #368]	; 4001cb70 <CyU3PUsbGetEP0Data+0x1b8>
4001c9fc:	ebffb56c 	bl	40009fb4 <_txe_mutex_get>
4001ca00:	e284000f 	add	r0, r4, #15
4001ca04:	e59f1168 	ldr	r1, [pc, #360]	; 4001cb74 <CyU3PUsbGetEP0Data+0x1bc>
4001ca08:	e0004001 	and	r4, r0, r1
4001ca0c:	e59f0164 	ldr	r0, [pc, #356]	; 4001cb78 <CyU3PUsbGetEP0Data+0x1c0>
4001ca10:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca14:	e3c00008 	bic	r0, r0, #8
4001ca18:	e59f1158 	ldr	r1, [pc, #344]	; 4001cb78 <CyU3PUsbGetEP0Data+0x1c0>
4001ca1c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca20:	e59f0144 	ldr	r0, [pc, #324]	; 4001cb6c <CyU3PUsbGetEP0Data+0x1b4>
4001ca24:	e5900018 	ldr	r0, [r0, #24]
4001ca28:	e3500000 	cmp	r0, #0
4001ca2c:	1a000002 	bne	4001ca3c <CyU3PUsbGetEP0Data+0x84>
4001ca30:	eb00005a 	bl	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001ca34:	e3500000 	cmp	r0, #0
4001ca38:	0a000008 	beq	4001ca60 <CyU3PUsbGetEP0Data+0xa8>
4001ca3c:	e59f0134 	ldr	r0, [pc, #308]	; 4001cb78 <CyU3PUsbGetEP0Data+0x1c0>
4001ca40:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca44:	e3800008 	orr	r0, r0, #8
4001ca48:	e59f1128 	ldr	r1, [pc, #296]	; 4001cb78 <CyU3PUsbGetEP0Data+0x1c0>
4001ca4c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca50:	e59f0118 	ldr	r0, [pc, #280]	; 4001cb70 <CyU3PUsbGetEP0Data+0x1b8>
4001ca54:	ebffb58b 	bl	4000a088 <_txe_mutex_put>
4001ca58:	e3a00051 	mov	r0, #81	; 0x51
4001ca5c:	eaffffdf 	b	4001c9e0 <CyU3PUsbGetEP0Data+0x28>
4001ca60:	e59f0110 	ldr	r0, [pc, #272]	; 4001cb78 <CyU3PUsbGetEP0Data+0x1c0>
4001ca64:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca68:	e3800008 	orr	r0, r0, #8
4001ca6c:	e59f1104 	ldr	r1, [pc, #260]	; 4001cb78 <CyU3PUsbGetEP0Data+0x1c0>
4001ca70:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca74:	eb00062a 	bl	4001e324 <GetUsbLinkActive>
4001ca78:	e1cd40b6 	strh	r4, [sp, #6]
4001ca7c:	e58d5000 	str	r5, [sp]
4001ca80:	e3a00000 	mov	r0, #0
4001ca84:	e1cd00b8 	strh	r0, [sp, #8]
4001ca88:	e1a0100d 	mov	r1, sp
4001ca8c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cb7c <CyU3PUsbGetEP0Data+0x1c4>
4001ca90:	ebffe75f 	bl	40016814 <CyU3PDmaChannelSetupRecvBuffer>
4001ca94:	e20070ff 	and	r7, r0, #255	; 0xff
4001ca98:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cb70 <CyU3PUsbGetEP0Data+0x1b8>
4001ca9c:	ebffb579 	bl	4000a088 <_txe_mutex_put>
4001caa0:	e3570000 	cmp	r7, #0
4001caa4:	1a00002d 	bne	4001cb60 <CyU3PUsbGetEP0Data+0x1a8>
4001caa8:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cb6c <CyU3PUsbGetEP0Data+0x1b4>
4001caac:	e5900014 	ldr	r0, [r0, #20]
4001cab0:	e3500000 	cmp	r0, #0
4001cab4:	0a000000 	beq	4001cabc <CyU3PUsbGetEP0Data+0x104>
4001cab8:	ebfffe93 	bl	4001c50c <CyU3PUsbAckSetup>
4001cabc:	ea00000e 	b	4001cafc <CyU3PUsbGetEP0Data+0x144>
4001cac0:	e3a02064 	mov	r2, #100	; 0x64
4001cac4:	e1a0100d 	mov	r1, sp
4001cac8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cb7c <CyU3PUsbGetEP0Data+0x1c4>
4001cacc:	ebffe8b2 	bl	40016d9c <CyU3PDmaChannelWaitForRecvBuffer>
4001cad0:	e20070ff 	and	r7, r0, #255	; 0xff
4001cad4:	e3570045 	cmp	r7, #69	; 0x45
4001cad8:	1a000006 	bne	4001caf8 <CyU3PUsbGetEP0Data+0x140>
4001cadc:	eb00002f 	bl	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cae0:	e3500000 	cmp	r0, #0
4001cae4:	0a000001 	beq	4001caf0 <CyU3PUsbGetEP0Data+0x138>
4001cae8:	e3a00051 	mov	r0, #81	; 0x51
4001caec:	eaffffbb 	b	4001c9e0 <CyU3PUsbGetEP0Data+0x28>
4001caf0:	e2488064 	sub	r8, r8, #100	; 0x64
4001caf4:	ea000000 	b	4001cafc <CyU3PUsbGetEP0Data+0x144>
4001caf8:	ea000001 	b	4001cb04 <CyU3PUsbGetEP0Data+0x14c>
4001cafc:	e3580000 	cmp	r8, #0
4001cb00:	1affffee 	bne	4001cac0 <CyU3PUsbGetEP0Data+0x108>
4001cb04:	e1a00000 	nop			; (mov r0, r0)
4001cb08:	e3570000 	cmp	r7, #0
4001cb0c:	0a00000f 	beq	4001cb50 <CyU3PUsbGetEP0Data+0x198>
4001cb10:	e3e01000 	mvn	r1, #0
4001cb14:	e59f0054 	ldr	r0, [pc, #84]	; 4001cb70 <CyU3PUsbGetEP0Data+0x1b8>
4001cb18:	ebffb525 	bl	40009fb4 <_txe_mutex_get>
4001cb1c:	e3a01001 	mov	r1, #1
4001cb20:	e3a00000 	mov	r0, #0
4001cb24:	eb000376 	bl	4001d904 <CyU3PUsbSetEpNak>
4001cb28:	e3a00064 	mov	r0, #100	; 0x64
4001cb2c:	ebffda43 	bl	40013440 <CyU3PBusyWait>
4001cb30:	e59f0044 	ldr	r0, [pc, #68]	; 4001cb7c <CyU3PUsbGetEP0Data+0x1c4>
4001cb34:	ebffe57b 	bl	40016128 <CyU3PDmaChannelReset>
4001cb38:	e3a01000 	mov	r1, #0
4001cb3c:	e1a00001 	mov	r0, r1
4001cb40:	eb00036f 	bl	4001d904 <CyU3PUsbSetEpNak>
4001cb44:	e59f0024 	ldr	r0, [pc, #36]	; 4001cb70 <CyU3PUsbGetEP0Data+0x1b8>
4001cb48:	ebffb54e 	bl	4000a088 <_txe_mutex_put>
4001cb4c:	ea000003 	b	4001cb60 <CyU3PUsbGetEP0Data+0x1a8>
4001cb50:	e3560000 	cmp	r6, #0
4001cb54:	0a000001 	beq	4001cb60 <CyU3PUsbGetEP0Data+0x1a8>
4001cb58:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cb5c:	e1c600b0 	strh	r0, [r6]
4001cb60:	e1a00007 	mov	r0, r7
4001cb64:	eaffff9d 	b	4001c9e0 <CyU3PUsbGetEP0Data+0x28>
4001cb68:	00001388 	.word	0x00001388
4001cb6c:	40031d40 	.word	0x40031d40
4001cb70:	40031ee0 	.word	0x40031ee0
4001cb74:	0000fff0 	.word	0x0000fff0
4001cb78:	e0031000 	.word	0xe0031000
4001cb7c:	40031b14 	.word	0x40031b14

Disassembly of section i.CyU3PUsbGetSpeed:

4001cb80 <CyU3PUsbGetSpeed>:
4001cb80:	e59f0004 	ldr	r0, [pc, #4]	; 4001cb8c <CyU3PUsbGetSpeed+0xc>
4001cb84:	e5d00009 	ldrb	r0, [r0, #9]
4001cb88:	e12fff1e 	bx	lr
4001cb8c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001cb90 <CyU3PUsbHostIsStarted>:
4001cb90:	e59f0004 	ldr	r0, [pc, #4]	; 4001cb9c <CyU3PUsbHostIsStarted+0xc>
4001cb94:	e5900000 	ldr	r0, [r0]
4001cb98:	e12fff1e 	bx	lr
4001cb9c:	40030d60 	.word	0x40030d60

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001cba0:	e59f0038 	ldr	r0, [pc, #56]	; 4001cbe0 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001cba4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001cba8:	e3500000 	cmp	r0, #0
4001cbac:	1a000007 	bne	4001cbd0 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cbb0:	e59f002c 	ldr	r0, [pc, #44]	; 4001cbe4 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001cbb4:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001cbb8:	e3100040 	tst	r0, #64	; 0x40
4001cbbc:	1a000003 	bne	4001cbd0 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cbc0:	e59f0020 	ldr	r0, [pc, #32]	; 4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001cbc4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001cbc8:	e3100c02 	tst	r0, #512	; 0x200
4001cbcc:	0a000001 	beq	4001cbd8 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001cbd0:	e3a00001 	mov	r0, #1
4001cbd4:	e12fff1e 	bx	lr
4001cbd8:	e3a00000 	mov	r0, #0
4001cbdc:	eafffffc 	b	4001cbd4 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001cbe0:	40031d40 	.word	0x40031d40
4001cbe4:	e0031000 	.word	0xe0031000
4001cbe8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001cbec <CyU3PUsbLoadBootloaderDescs>:
4001cbec:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001cbf0:	e1a04000 	mov	r4, r0
4001cbf4:	e3a06000 	mov	r6, #0
4001cbf8:	e5940008 	ldr	r0, [r4, #8]
4001cbfc:	e20070ff 	and	r7, r0, #255	; 0xff
4001cc00:	e1a00000 	nop			; (mov r0, r0)
4001cc04:	ea00000f 	b	4001cc48 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001cc08:	e2843010 	add	r3, r4, #16
4001cc0c:	e0833186 	add	r3, r3, r6, lsl #3
4001cc10:	e5932004 	ldr	r2, [r3, #4]
4001cc14:	e2843010 	add	r3, r4, #16
4001cc18:	e0833186 	add	r3, r3, r6, lsl #3
4001cc1c:	e5d31001 	ldrb	r1, [r3, #1]
4001cc20:	e2843010 	add	r3, r4, #16
4001cc24:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001cc28:	eb0002bf 	bl	4001d72c <CyU3PUsbSetDesc>
4001cc2c:	e1a05000 	mov	r5, r0
4001cc30:	e3550000 	cmp	r5, #0
4001cc34:	0a000001 	beq	4001cc40 <CyU3PUsbLoadBootloaderDescs+0x54>
4001cc38:	e1a00005 	mov	r0, r5
4001cc3c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001cc40:	e2860001 	add	r0, r6, #1
4001cc44:	e20060ff 	and	r6, r0, #255	; 0xff
4001cc48:	e1560007 	cmp	r6, r7
4001cc4c:	baffffed 	blt	4001cc08 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001cc50:	e3a00000 	mov	r0, #0
4001cc54:	eafffff8 	b	4001cc3c <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001cc58 <CyU3PUsbMapStream>:
4001cc58:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cc5c:	e1a03000 	mov	r3, r0
4001cc60:	e203c07f 	and	ip, r3, #127	; 0x7f
4001cc64:	e59f005c 	ldr	r0, [pc, #92]	; 4001ccc8 <CyU3PUsbMapStream+0x70>
4001cc68:	e5d00008 	ldrb	r0, [r0, #8]
4001cc6c:	e3500000 	cmp	r0, #0
4001cc70:	1a000001 	bne	4001cc7c <CyU3PUsbMapStream+0x24>
4001cc74:	e3a00042 	mov	r0, #66	; 0x42
4001cc78:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001cc7c:	e35c000f 	cmp	ip, #15
4001cc80:	da000001 	ble	4001cc8c <CyU3PUsbMapStream+0x34>
4001cc84:	e3a00040 	mov	r0, #64	; 0x40
4001cc88:	eafffffa 	b	4001cc78 <CyU3PUsbMapStream+0x20>
4001cc8c:	e3130080 	tst	r3, #128	; 0x80
4001cc90:	0a000005 	beq	4001ccac <CyU3PUsbMapStream+0x54>
4001cc94:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cc98:	e180080c 	orr	r0, r0, ip, lsl #16
4001cc9c:	e1800002 	orr	r0, r0, r2
4001cca0:	e59fe024 	ldr	lr, [pc, #36]	; 4001cccc <CyU3PUsbMapStream+0x74>
4001cca4:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cca8:	ea000004 	b	4001ccc0 <CyU3PUsbMapStream+0x68>
4001ccac:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001ccb0:	e180080c 	orr	r0, r0, ip, lsl #16
4001ccb4:	e1800002 	orr	r0, r0, r2
4001ccb8:	e59fe010 	ldr	lr, [pc, #16]	; 4001ccd0 <CyU3PUsbMapStream+0x78>
4001ccbc:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001ccc0:	e3a00000 	mov	r0, #0
4001ccc4:	eaffffeb 	b	4001cc78 <CyU3PUsbMapStream+0x20>
4001ccc8:	40031d40 	.word	0x40031d40
4001cccc:	e00335c0 	.word	0xe00335c0
4001ccd0:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001ccd4 <CyU3PUsbOtgVbusChangeHandler>:
4001ccd4:	e92d4010 	push	{r4, lr}
4001ccd8:	e3a04000 	mov	r4, #0
4001ccdc:	e59f0094 	ldr	r0, [pc, #148]	; 4001cd78 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001cce0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001cce4:	e3500000 	cmp	r0, #0
4001cce8:	0a000005 	beq	4001cd04 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001ccec:	e59f0088 	ldr	r0, [pc, #136]	; 4001cd7c <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001ccf0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ccf4:	e59f107c 	ldr	r1, [pc, #124]	; 4001cd78 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001ccf8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001ccfc:	e1100001 	tst	r0, r1
4001cd00:	0a000008 	beq	4001cd28 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001cd04:	e3a04001 	mov	r4, #1
4001cd08:	e3a00018 	mov	r0, #24
4001cd0c:	e59f106c 	ldr	r1, [pc, #108]	; 4001cd80 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cd10:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cd14:	e1c10000 	bic	r0, r1, r0
4001cd18:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cd1c:	e3c00018 	bic	r0, r0, #24
4001cd20:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cd24:	ea000009 	b	4001cd50 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cd28:	ebfffbb2 	bl	4001bbf8 <CyU3POtgIsHostMode>
4001cd2c:	e3500000 	cmp	r0, #0
4001cd30:	0a000006 	beq	4001cd50 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cd34:	e3a00018 	mov	r0, #24
4001cd38:	e59f1040 	ldr	r1, [pc, #64]	; 4001cd80 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cd3c:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cd40:	e1c10000 	bic	r0, r1, r0
4001cd44:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cd48:	e3800018 	orr	r0, r0, #24
4001cd4c:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cd50:	e59f002c 	ldr	r0, [pc, #44]	; 4001cd84 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cd54:	e5900004 	ldr	r0, [r0, #4]
4001cd58:	e3500000 	cmp	r0, #0
4001cd5c:	0a000004 	beq	4001cd74 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001cd60:	e59f001c 	ldr	r0, [pc, #28]	; 4001cd84 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cd64:	e1a01004 	mov	r1, r4
4001cd68:	e5902004 	ldr	r2, [r0, #4]
4001cd6c:	e3a00002 	mov	r0, #2
4001cd70:	e12fff32 	blx	r2
4001cd74:	e8bd8010 	pop	{r4, pc}
4001cd78:	40031d40 	.word	0x40031d40
4001cd7c:	e0051000 	.word	0xe0051000
4001cd80:	e0031000 	.word	0xe0031000
4001cd84:	40030d58 	.word	0x40030d58

Disassembly of section i.CyU3PUsbPhyDisable:

4001cd88 <CyU3PUsbPhyDisable>:
4001cd88:	e92d4010 	push	{r4, lr}
4001cd8c:	e1a04000 	mov	r4, r0
4001cd90:	e2841003 	add	r1, r4, #3
4001cd94:	e20100ff 	and	r0, r1, #255	; 0xff
4001cd98:	eb000af4 	bl	4001f970 <CyU3PUsbAddToEventLog>
4001cd9c:	e3a00000 	mov	r0, #0
4001cda0:	e59f1184 	ldr	r1, [pc, #388]	; 4001cf2c <CyU3PUsbPhyDisable+0x1a4>
4001cda4:	e5810000 	str	r0, [r1]
4001cda8:	e59f0180 	ldr	r0, [pc, #384]	; 4001cf30 <CyU3PUsbPhyDisable+0x1a8>
4001cdac:	ebffb762 	bl	4000ab3c <_txe_timer_deactivate>
4001cdb0:	e3a00008 	mov	r0, #8
4001cdb4:	eb00141f 	bl	40021e38 <CyU3PVicDisableInt>
4001cdb8:	e59f0174 	ldr	r0, [pc, #372]	; 4001cf34 <CyU3PUsbPhyDisable+0x1ac>
4001cdbc:	e5900004 	ldr	r0, [r0, #4]
4001cdc0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001cdc4:	e59f1168 	ldr	r1, [pc, #360]	; 4001cf34 <CyU3PUsbPhyDisable+0x1ac>
4001cdc8:	e5810004 	str	r0, [r1, #4]
4001cdcc:	e3e00000 	mvn	r0, #0
4001cdd0:	e0411600 	sub	r1, r1, r0, lsl #12
4001cdd4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cdd8:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cddc:	e59f0154 	ldr	r0, [pc, #340]	; 4001cf38 <CyU3PUsbPhyDisable+0x1b0>
4001cde0:	ebffe4d0 	bl	40016128 <CyU3PDmaChannelReset>
4001cde4:	e59f0150 	ldr	r0, [pc, #336]	; 4001cf3c <CyU3PUsbPhyDisable+0x1b4>
4001cde8:	ebffe4ce 	bl	40016128 <CyU3PDmaChannelReset>
4001cdec:	e3540000 	cmp	r4, #0
4001cdf0:	0a00002b 	beq	4001cea4 <CyU3PUsbPhyDisable+0x11c>
4001cdf4:	e3a00001 	mov	r0, #1
4001cdf8:	e59f1140 	ldr	r1, [pc, #320]	; 4001cf40 <CyU3PUsbPhyDisable+0x1b8>
4001cdfc:	e5810060 	str	r0, [r1, #96]	; 0x60
4001ce00:	ebffb68c 	bl	4000a838 <_txe_thread_relinquish>
4001ce04:	e3e00000 	mvn	r0, #0
4001ce08:	e59f1134 	ldr	r1, [pc, #308]	; 4001cf44 <CyU3PUsbPhyDisable+0x1bc>
4001ce0c:	e5810004 	str	r0, [r1, #4]
4001ce10:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ce14:	e0010000 	and	r0, r1, r0
4001ce18:	e5900014 	ldr	r0, [r0, #20]
4001ce1c:	e59f1124 	ldr	r1, [pc, #292]	; 4001cf48 <CyU3PUsbPhyDisable+0x1c0>
4001ce20:	e5810000 	str	r0, [r1]
4001ce24:	e3a00000 	mov	r0, #0
4001ce28:	e59f111c 	ldr	r1, [pc, #284]	; 4001cf4c <CyU3PUsbPhyDisable+0x1c4>
4001ce2c:	e5810000 	str	r0, [r1]
4001ce30:	e3a01000 	mov	r1, #0
4001ce34:	e59f0114 	ldr	r0, [pc, #276]	; 4001cf50 <CyU3PUsbPhyDisable+0x1c8>
4001ce38:	eb00146e 	bl	40021ff8 <CyFx3UsbWritePhyReg>
4001ce3c:	e3a01002 	mov	r1, #2
4001ce40:	e1a00001 	mov	r0, r1
4001ce44:	ebfffd1d 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4001ce48:	e3a00002 	mov	r0, #2
4001ce4c:	ebffd97b 	bl	40013440 <CyU3PBusyWait>
4001ce50:	e59f00fc 	ldr	r0, [pc, #252]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001ce54:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ce58:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ce5c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001ce60:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ce64:	e3a00002 	mov	r0, #2
4001ce68:	ebffd974 	bl	40013440 <CyU3PBusyWait>
4001ce6c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001ce70:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ce74:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001ce78:	e59f10d4 	ldr	r1, [pc, #212]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001ce7c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ce80:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001ce84:	e590001c 	ldr	r0, [r0, #28]
4001ce88:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ce8c:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001ce90:	e581001c 	str	r0, [r1, #28]
4001ce94:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cf58 <CyU3PUsbPhyDisable+0x1d0>
4001ce98:	e5900000 	ldr	r0, [r0]
4001ce9c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001cea0:	ea00000e 	b	4001cee0 <CyU3PUsbPhyDisable+0x158>
4001cea4:	e59f00a8 	ldr	r0, [pc, #168]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001cea8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001ceac:	e3800008 	orr	r0, r0, #8
4001ceb0:	e59f109c 	ldr	r1, [pc, #156]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001ceb4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001ceb8:	e3a01002 	mov	r1, #2
4001cebc:	e1a00001 	mov	r0, r1
4001cec0:	ebfffcfe 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4001cec4:	e3a00002 	mov	r0, #2
4001cec8:	ebffd95c 	bl	40013440 <CyU3PBusyWait>
4001cecc:	e59f0080 	ldr	r0, [pc, #128]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001ced0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ced4:	e2000001 	and	r0, r0, #1
4001ced8:	e59f1074 	ldr	r1, [pc, #116]	; 4001cf54 <CyU3PUsbPhyDisable+0x1cc>
4001cedc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cee0:	e59f0074 	ldr	r0, [pc, #116]	; 4001cf5c <CyU3PUsbPhyDisable+0x1d4>
4001cee4:	e5900000 	ldr	r0, [r0]
4001cee8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001ceec:	e59f1068 	ldr	r1, [pc, #104]	; 4001cf5c <CyU3PUsbPhyDisable+0x1d4>
4001cef0:	e5810000 	str	r0, [r1]
4001cef4:	e3a00000 	mov	r0, #0
4001cef8:	e59f1040 	ldr	r1, [pc, #64]	; 4001cf40 <CyU3PUsbPhyDisable+0x1b8>
4001cefc:	e5c10009 	strb	r0, [r1, #9]
4001cf00:	ebfffb6c 	bl	4001bcb8 <CyU3POtgIsStarted>
4001cf04:	e3500000 	cmp	r0, #0
4001cf08:	0a000006 	beq	4001cf28 <CyU3PUsbPhyDisable+0x1a0>
4001cf0c:	e3a00064 	mov	r0, #100	; 0x64
4001cf10:	ebffd94a 	bl	40013440 <CyU3PBusyWait>
4001cf14:	e59f0040 	ldr	r0, [pc, #64]	; 4001cf5c <CyU3PUsbPhyDisable+0x1d4>
4001cf18:	e5900000 	ldr	r0, [r0]
4001cf1c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cf20:	e59f1034 	ldr	r1, [pc, #52]	; 4001cf5c <CyU3PUsbPhyDisable+0x1d4>
4001cf24:	e5810000 	str	r0, [r1]
4001cf28:	e8bd8010 	pop	{r4, pc}
4001cf2c:	40030db4 	.word	0x40030db4
4001cf30:	400326a0 	.word	0x400326a0
4001cf34:	e0030000 	.word	0xe0030000
4001cf38:	40031a74 	.word	0x40031a74
4001cf3c:	40031b14 	.word	0x40031b14
4001cf40:	40031d40 	.word	0x40031d40
4001cf44:	e0033000 	.word	0xe0033000
4001cf48:	40030d88 	.word	0x40030d88
4001cf4c:	40030db8 	.word	0x40030db8
4001cf50:	00001005 	.word	0x00001005
4001cf54:	e0031000 	.word	0xe0031000
4001cf58:	40030c5c 	.word	0x40030c5c
4001cf5c:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001cf60 <CyU3PUsbPhyEnable>:
4001cf60:	e92d4070 	push	{r4, r5, r6, lr}
4001cf64:	e1a04000 	mov	r4, r0
4001cf68:	e2841005 	add	r1, r4, #5
4001cf6c:	e20100ff 	and	r0, r1, #255	; 0xff
4001cf70:	eb000a7e 	bl	4001f970 <CyU3PUsbAddToEventLog>
4001cf74:	e3e00000 	mvn	r0, #0
4001cf78:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001cf7c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cf80:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cf84:	e3a00008 	mov	r0, #8
4001cf88:	eb0013af 	bl	40021e4c <CyU3PVicEnableInt>
4001cf8c:	e3a00009 	mov	r0, #9
4001cf90:	eb0013ad 	bl	40021e4c <CyU3PVicEnableInt>
4001cf94:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d23c <CyU3PUsbPhyEnable+0x2dc>
4001cf98:	e5900004 	ldr	r0, [r0, #4]
4001cf9c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001cfa0:	e59f1294 	ldr	r1, [pc, #660]	; 4001d23c <CyU3PUsbPhyEnable+0x2dc>
4001cfa4:	e5810004 	str	r0, [r1, #4]
4001cfa8:	e2810802 	add	r0, r1, #131072	; 0x20000
4001cfac:	e5900000 	ldr	r0, [r0]
4001cfb0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cfb4:	e2811802 	add	r1, r1, #131072	; 0x20000
4001cfb8:	e5810000 	str	r0, [r1]
4001cfbc:	e3540000 	cmp	r4, #0
4001cfc0:	0a000069 	beq	4001d16c <CyU3PUsbPhyEnable+0x20c>
4001cfc4:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001cfc8:	e5900014 	ldr	r0, [r0, #20]
4001cfcc:	e59f126c 	ldr	r1, [pc, #620]	; 4001d240 <CyU3PUsbPhyEnable+0x2e0>
4001cfd0:	e5810000 	str	r0, [r1]
4001cfd4:	e3a00000 	mov	r0, #0
4001cfd8:	e59f1264 	ldr	r1, [pc, #612]	; 4001d244 <CyU3PUsbPhyEnable+0x2e4>
4001cfdc:	e5810000 	str	r0, [r1]
4001cfe0:	e3e00000 	mvn	r0, #0
4001cfe4:	e59f125c 	ldr	r1, [pc, #604]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001cfe8:	e5810004 	str	r0, [r1, #4]
4001cfec:	e59f0258 	ldr	r0, [pc, #600]	; 4001d24c <CyU3PUsbPhyEnable+0x2ec>
4001cff0:	e5810008 	str	r0, [r1, #8]
4001cff4:	e3e00000 	mvn	r0, #0
4001cff8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001cffc:	e59f024c 	ldr	r0, [pc, #588]	; 4001d250 <CyU3PUsbPhyEnable+0x2f0>
4001d000:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d004:	e59f0248 	ldr	r0, [pc, #584]	; 4001d254 <CyU3PUsbPhyEnable+0x2f4>
4001d008:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d00c:	e3500000 	cmp	r0, #0
4001d010:	0a000003 	beq	4001d024 <CyU3PUsbPhyEnable+0xc4>
4001d014:	e1a00001 	mov	r0, r1
4001d018:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d01c:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d020:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d024:	e3a00000 	mov	r0, #0
4001d028:	e59f1224 	ldr	r1, [pc, #548]	; 4001d254 <CyU3PUsbPhyEnable+0x2f4>
4001d02c:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d030:	e59f0220 	ldr	r0, [pc, #544]	; 4001d258 <CyU3PUsbPhyEnable+0x2f8>
4001d034:	e5900000 	ldr	r0, [r0]
4001d038:	e3500000 	cmp	r0, #0
4001d03c:	0a000003 	beq	4001d050 <CyU3PUsbPhyEnable+0xf0>
4001d040:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d044:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d048:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d04c:	ea000002 	b	4001d05c <CyU3PUsbPhyEnable+0xfc>
4001d050:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d054:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d058:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d05c:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d25c <CyU3PUsbPhyEnable+0x2fc>
4001d060:	e5900000 	ldr	r0, [r0]
4001d064:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d068:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d06c:	eb00139b 	bl	40021ee0 <CyFx3Usb3LnkSetup>
4001d070:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d260 <CyU3PUsbPhyEnable+0x300>
4001d074:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d078:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d07c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d080:	e1c10000 	bic	r0, r1, r0
4001d084:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d088:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d08c:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d090:	e3a00000 	mov	r0, #0
4001d094:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d254 <CyU3PUsbPhyEnable+0x2f4>
4001d098:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d09c:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d0a0:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d0a4:	e581001c 	str	r0, [r1, #28]
4001d0a8:	e3a01002 	mov	r1, #2
4001d0ac:	e1a00001 	mov	r0, r1
4001d0b0:	ebfffc82 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4001d0b4:	eb00135b 	bl	40021e28 <CyU3PVicDisableAllInterrupts>
4001d0b8:	e1a05000 	mov	r5, r0
4001d0bc:	e3a00000 	mov	r0, #0
4001d0c0:	e59f119c 	ldr	r1, [pc, #412]	; 4001d264 <CyU3PUsbPhyEnable+0x304>
4001d0c4:	e5810000 	str	r0, [r1]
4001d0c8:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d0cc:	e59f1174 	ldr	r1, [pc, #372]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d0d0:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d0d4:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d0d8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d0dc:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d0e0:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d0e4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d0e8:	e3a00064 	mov	r0, #100	; 0x64
4001d0ec:	ebffd8d3 	bl	40013440 <CyU3PBusyWait>
4001d0f0:	e59f0150 	ldr	r0, [pc, #336]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d0f4:	e5900000 	ldr	r0, [r0]
4001d0f8:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d0fc:	e59f1144 	ldr	r1, [pc, #324]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d100:	e5810000 	str	r0, [r1]
4001d104:	e59f015c 	ldr	r0, [pc, #348]	; 4001d268 <CyU3PUsbPhyEnable+0x308>
4001d108:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d10c:	e3a01080 	mov	r1, #128	; 0x80
4001d110:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d114:	eb0013b7 	bl	40021ff8 <CyFx3UsbWritePhyReg>
4001d118:	e3a01d06 	mov	r1, #384	; 0x180
4001d11c:	e59f0148 	ldr	r0, [pc, #328]	; 4001d26c <CyU3PUsbPhyEnable+0x30c>
4001d120:	eb0013b4 	bl	40021ff8 <CyFx3UsbWritePhyReg>
4001d124:	e3a01080 	mov	r1, #128	; 0x80
4001d128:	e59f0140 	ldr	r0, [pc, #320]	; 4001d270 <CyU3PUsbPhyEnable+0x310>
4001d12c:	eb0013b1 	bl	40021ff8 <CyFx3UsbWritePhyReg>
4001d130:	e1a00005 	mov	r0, r5
4001d134:	eb001349 	bl	40021e60 <CyU3PVicEnableInterrupts>
4001d138:	e59f0108 	ldr	r0, [pc, #264]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d13c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d140:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d144:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d248 <CyU3PUsbPhyEnable+0x2e8>
4001d148:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d14c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d150:	e581001c 	str	r0, [r1, #28]
4001d154:	e3a00064 	mov	r0, #100	; 0x64
4001d158:	ebffd8b8 	bl	40013440 <CyU3PBusyWait>
4001d15c:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d160:	e59f110c 	ldr	r1, [pc, #268]	; 4001d274 <CyU3PUsbPhyEnable+0x314>
4001d164:	e5810008 	str	r0, [r1, #8]
4001d168:	ea000031 	b	4001d234 <CyU3PUsbPhyEnable+0x2d4>
4001d16c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d254 <CyU3PUsbPhyEnable+0x2f4>
4001d170:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d174:	e3500000 	cmp	r0, #0
4001d178:	0a000000 	beq	4001d180 <CyU3PUsbPhyEnable+0x220>
4001d17c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d180:	e3a00001 	mov	r0, #1
4001d184:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d254 <CyU3PUsbPhyEnable+0x2f4>
4001d188:	e5c10009 	strb	r0, [r1, #9]
4001d18c:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d190:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d278 <CyU3PUsbPhyEnable+0x318>
4001d194:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d198:	e3a00000 	mov	r0, #0
4001d19c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d254 <CyU3PUsbPhyEnable+0x2f4>
4001d1a0:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d1a4:	e59f008c 	ldr	r0, [pc, #140]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001d1a8:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d1ac:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d1b0:	e59f1080 	ldr	r1, [pc, #128]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001d1b4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d1b8:	e1a00001 	mov	r0, r1
4001d1bc:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d1c0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d1c4:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d1c8:	e3a00002 	mov	r0, #2
4001d1cc:	ebffd89b 	bl	40013440 <CyU3PBusyWait>
4001d1d0:	e59f0060 	ldr	r0, [pc, #96]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001d1d4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d1d8:	e2000001 	and	r0, r0, #1
4001d1dc:	e59f1054 	ldr	r1, [pc, #84]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001d1e0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1e4:	e1a00001 	mov	r0, r1
4001d1e8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d1ec:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d1f0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1f4:	e3a00064 	mov	r0, #100	; 0x64
4001d1f8:	ebffd890 	bl	40013440 <CyU3PBusyWait>
4001d1fc:	eb00132b 	bl	40021eb0 <CyFx3Usb2PhySetup>
4001d200:	e59f0074 	ldr	r0, [pc, #116]	; 4001d27c <CyU3PUsbPhyEnable+0x31c>
4001d204:	e59f102c 	ldr	r1, [pc, #44]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001d208:	e5810008 	str	r0, [r1, #8]
4001d20c:	e3a00050 	mov	r0, #80	; 0x50
4001d210:	ebffd88a 	bl	40013440 <CyU3PBusyWait>
4001d214:	e3a01000 	mov	r1, #0
4001d218:	e3a00002 	mov	r0, #2
4001d21c:	ebfffc27 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4001d220:	e59f0010 	ldr	r0, [pc, #16]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001d224:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d228:	e3c00008 	bic	r0, r0, #8
4001d22c:	e59f1004 	ldr	r1, [pc, #4]	; 4001d238 <CyU3PUsbPhyEnable+0x2d8>
4001d230:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d234:	eaffffd0 	b	4001d17c <CyU3PUsbPhyEnable+0x21c>
4001d238:	e0031000 	.word	0xe0031000
4001d23c:	e0030000 	.word	0xe0030000
4001d240:	40030d88 	.word	0x40030d88
4001d244:	40030db8 	.word	0x40030db8
4001d248:	e0033000 	.word	0xe0033000
4001d24c:	00038081 	.word	0x00038081
4001d250:	00004a3d 	.word	0x00004a3d
4001d254:	40031d40 	.word	0x40031d40
4001d258:	40030d44 	.word	0x40030d44
4001d25c:	40030d90 	.word	0x40030d90
4001d260:	00000908 	.word	0x00000908
4001d264:	40030d78 	.word	0x40030d78
4001d268:	00310418 	.word	0x00310418
4001d26c:	00001006 	.word	0x00001006
4001d270:	00001024 	.word	0x00001024
4001d274:	e0052000 	.word	0xe0052000
4001d278:	e0032000 	.word	0xe0032000
4001d27c:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d280 <CyU3PUsbPowerOn>:
4001d280:	e92d4010 	push	{r4, lr}
4001d284:	eb00133b 	bl	40021f78 <CyFx3UsbPowerOn>
4001d288:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d28c <CyU3PUsbResetEp>:
4001d28c:	e92d4070 	push	{r4, r5, r6, lr}
4001d290:	e1a04000 	mov	r4, r0
4001d294:	e204507f 	and	r5, r4, #127	; 0x7f
4001d298:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d35c <CyU3PUsbResetEp+0xd0>
4001d29c:	e5d00008 	ldrb	r0, [r0, #8]
4001d2a0:	e3500000 	cmp	r0, #0
4001d2a4:	1a000001 	bne	4001d2b0 <CyU3PUsbResetEp+0x24>
4001d2a8:	e3a00042 	mov	r0, #66	; 0x42
4001d2ac:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d2b0:	e355000f 	cmp	r5, #15
4001d2b4:	da000001 	ble	4001d2c0 <CyU3PUsbResetEp+0x34>
4001d2b8:	e3a00040 	mov	r0, #64	; 0x40
4001d2bc:	eafffffa 	b	4001d2ac <CyU3PUsbResetEp+0x20>
4001d2c0:	e3e01000 	mvn	r1, #0
4001d2c4:	e59f0094 	ldr	r0, [pc, #148]	; 4001d360 <CyU3PUsbResetEp+0xd4>
4001d2c8:	ebffb339 	bl	40009fb4 <_txe_mutex_get>
4001d2cc:	ebfffe2b 	bl	4001cb80 <CyU3PUsbGetSpeed>
4001d2d0:	e3500003 	cmp	r0, #3
4001d2d4:	1a00001c 	bne	4001d34c <CyU3PUsbResetEp+0xc0>
4001d2d8:	e59f0084 	ldr	r0, [pc, #132]	; 4001d364 <CyU3PUsbResetEp+0xd8>
4001d2dc:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d2e0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d2e4:	e59f1078 	ldr	r1, [pc, #120]	; 4001d364 <CyU3PUsbResetEp+0xd8>
4001d2e8:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d2ec:	e3140080 	tst	r4, #128	; 0x80
4001d2f0:	0a00000a 	beq	4001d320 <CyU3PUsbResetEp+0x94>
4001d2f4:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d2f8:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d2fc:	e3866011 	orr	r6, r6, #17
4001d300:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d304:	e3a00002 	mov	r0, #2
4001d308:	ebffd84c 	bl	40013440 <CyU3PBusyWait>
4001d30c:	e3c60010 	bic	r0, r6, #16
4001d310:	e3806001 	orr	r6, r0, #1
4001d314:	e59f004c 	ldr	r0, [pc, #76]	; 4001d368 <CyU3PUsbResetEp+0xdc>
4001d318:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d31c:	ea00000a 	b	4001d34c <CyU3PUsbResetEp+0xc0>
4001d320:	e59f0044 	ldr	r0, [pc, #68]	; 4001d36c <CyU3PUsbResetEp+0xe0>
4001d324:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d328:	e3806011 	orr	r6, r0, #17
4001d32c:	e59f0038 	ldr	r0, [pc, #56]	; 4001d36c <CyU3PUsbResetEp+0xe0>
4001d330:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d334:	e3a00002 	mov	r0, #2
4001d338:	ebffd840 	bl	40013440 <CyU3PBusyWait>
4001d33c:	e3c60010 	bic	r0, r6, #16
4001d340:	e3806001 	orr	r6, r0, #1
4001d344:	e59f0020 	ldr	r0, [pc, #32]	; 4001d36c <CyU3PUsbResetEp+0xe0>
4001d348:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d34c:	e59f000c 	ldr	r0, [pc, #12]	; 4001d360 <CyU3PUsbResetEp+0xd4>
4001d350:	ebffb34c 	bl	4000a088 <_txe_mutex_put>
4001d354:	e3a00000 	mov	r0, #0
4001d358:	eaffffd3 	b	4001d2ac <CyU3PUsbResetEp+0x20>
4001d35c:	40031d40 	.word	0x40031d40
4001d360:	40031ee0 	.word	0x40031ee0
4001d364:	e0033000 	.word	0xe0033000
4001d368:	e0033500 	.word	0xe0033500
4001d36c:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d370 <CyU3PUsbSendEP0Data>:
4001d370:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d374:	e1a04000 	mov	r4, r0
4001d378:	e1a05001 	mov	r5, r1
4001d37c:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d530 <CyU3PUsbSendEP0Data+0x1c0>
4001d380:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d534 <CyU3PUsbSendEP0Data+0x1c4>
4001d384:	e5d00008 	ldrb	r0, [r0, #8]
4001d388:	e3500000 	cmp	r0, #0
4001d38c:	1a000001 	bne	4001d398 <CyU3PUsbSendEP0Data+0x28>
4001d390:	e3a00042 	mov	r0, #66	; 0x42
4001d394:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d398:	e3550000 	cmp	r5, #0
4001d39c:	1a000001 	bne	4001d3a8 <CyU3PUsbSendEP0Data+0x38>
4001d3a0:	e3a00040 	mov	r0, #64	; 0x40
4001d3a4:	eafffffa 	b	4001d394 <CyU3PUsbSendEP0Data+0x24>
4001d3a8:	e3e01000 	mvn	r1, #0
4001d3ac:	e59f0184 	ldr	r0, [pc, #388]	; 4001d538 <CyU3PUsbSendEP0Data+0x1c8>
4001d3b0:	ebffb2ff 	bl	40009fb4 <_txe_mutex_get>
4001d3b4:	e59f0180 	ldr	r0, [pc, #384]	; 4001d53c <CyU3PUsbSendEP0Data+0x1cc>
4001d3b8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d3bc:	e3c00008 	bic	r0, r0, #8
4001d3c0:	e59f1174 	ldr	r1, [pc, #372]	; 4001d53c <CyU3PUsbSendEP0Data+0x1cc>
4001d3c4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d3c8:	e59f0164 	ldr	r0, [pc, #356]	; 4001d534 <CyU3PUsbSendEP0Data+0x1c4>
4001d3cc:	e5900018 	ldr	r0, [r0, #24]
4001d3d0:	e3500000 	cmp	r0, #0
4001d3d4:	1a000002 	bne	4001d3e4 <CyU3PUsbSendEP0Data+0x74>
4001d3d8:	ebfffdf0 	bl	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d3dc:	e3500000 	cmp	r0, #0
4001d3e0:	0a000008 	beq	4001d408 <CyU3PUsbSendEP0Data+0x98>
4001d3e4:	e59f0150 	ldr	r0, [pc, #336]	; 4001d53c <CyU3PUsbSendEP0Data+0x1cc>
4001d3e8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d3ec:	e3800008 	orr	r0, r0, #8
4001d3f0:	e59f1144 	ldr	r1, [pc, #324]	; 4001d53c <CyU3PUsbSendEP0Data+0x1cc>
4001d3f4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d3f8:	e59f0138 	ldr	r0, [pc, #312]	; 4001d538 <CyU3PUsbSendEP0Data+0x1c8>
4001d3fc:	ebffb321 	bl	4000a088 <_txe_mutex_put>
4001d400:	e3a00000 	mov	r0, #0
4001d404:	eaffffe2 	b	4001d394 <CyU3PUsbSendEP0Data+0x24>
4001d408:	e59f012c 	ldr	r0, [pc, #300]	; 4001d53c <CyU3PUsbSendEP0Data+0x1cc>
4001d40c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d410:	e3800008 	orr	r0, r0, #8
4001d414:	e59f1120 	ldr	r1, [pc, #288]	; 4001d53c <CyU3PUsbSendEP0Data+0x1cc>
4001d418:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d41c:	e1a00001 	mov	r0, r1
4001d420:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d424:	e1500004 	cmp	r0, r4
4001d428:	2a000003 	bcs	4001d43c <CyU3PUsbSendEP0Data+0xcc>
4001d42c:	e1a00001 	mov	r0, r1
4001d430:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d434:	e1a04800 	lsl	r4, r0, #16
4001d438:	e1a04824 	lsr	r4, r4, #16
4001d43c:	eb0003b8 	bl	4001e324 <GetUsbLinkActive>
4001d440:	e1cd40b4 	strh	r4, [sp, #4]
4001d444:	e284000f 	add	r0, r4, #15
4001d448:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d540 <CyU3PUsbSendEP0Data+0x1d0>
4001d44c:	e0000001 	and	r0, r0, r1
4001d450:	e1cd00b6 	strh	r0, [sp, #6]
4001d454:	e58d5000 	str	r5, [sp]
4001d458:	e3a00000 	mov	r0, #0
4001d45c:	e1cd00b8 	strh	r0, [sp, #8]
4001d460:	e1a0100d 	mov	r1, sp
4001d464:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d544 <CyU3PUsbSendEP0Data+0x1d4>
4001d468:	ebffe571 	bl	40016a34 <CyU3PDmaChannelSetupSendBuffer>
4001d46c:	e20060ff 	and	r6, r0, #255	; 0xff
4001d470:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d538 <CyU3PUsbSendEP0Data+0x1c8>
4001d474:	ebffb303 	bl	4000a088 <_txe_mutex_put>
4001d478:	e3560000 	cmp	r6, #0
4001d47c:	1a000029 	bne	4001d528 <CyU3PUsbSendEP0Data+0x1b8>
4001d480:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d534 <CyU3PUsbSendEP0Data+0x1c4>
4001d484:	e5900014 	ldr	r0, [r0, #20]
4001d488:	e3500000 	cmp	r0, #0
4001d48c:	0a000000 	beq	4001d494 <CyU3PUsbSendEP0Data+0x124>
4001d490:	ebfffc1d 	bl	4001c50c <CyU3PUsbAckSetup>
4001d494:	ea00000d 	b	4001d4d0 <CyU3PUsbSendEP0Data+0x160>
4001d498:	e3a01064 	mov	r1, #100	; 0x64
4001d49c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d544 <CyU3PUsbSendEP0Data+0x1d4>
4001d4a0:	ebffe5f1 	bl	40016c6c <CyU3PDmaChannelWaitForCompletion>
4001d4a4:	e20060ff 	and	r6, r0, #255	; 0xff
4001d4a8:	e3560045 	cmp	r6, #69	; 0x45
4001d4ac:	1a000006 	bne	4001d4cc <CyU3PUsbSendEP0Data+0x15c>
4001d4b0:	ebfffdba 	bl	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d4b4:	e3500000 	cmp	r0, #0
4001d4b8:	0a000001 	beq	4001d4c4 <CyU3PUsbSendEP0Data+0x154>
4001d4bc:	e3a00000 	mov	r0, #0
4001d4c0:	eaffffb3 	b	4001d394 <CyU3PUsbSendEP0Data+0x24>
4001d4c4:	e2477064 	sub	r7, r7, #100	; 0x64
4001d4c8:	ea000000 	b	4001d4d0 <CyU3PUsbSendEP0Data+0x160>
4001d4cc:	ea000001 	b	4001d4d8 <CyU3PUsbSendEP0Data+0x168>
4001d4d0:	e3570000 	cmp	r7, #0
4001d4d4:	1affffef 	bne	4001d498 <CyU3PUsbSendEP0Data+0x128>
4001d4d8:	e1a00000 	nop			; (mov r0, r0)
4001d4dc:	e3560000 	cmp	r6, #0
4001d4e0:	0a000010 	beq	4001d528 <CyU3PUsbSendEP0Data+0x1b8>
4001d4e4:	e3e01000 	mvn	r1, #0
4001d4e8:	e59f0048 	ldr	r0, [pc, #72]	; 4001d538 <CyU3PUsbSendEP0Data+0x1c8>
4001d4ec:	ebffb2b0 	bl	40009fb4 <_txe_mutex_get>
4001d4f0:	e3a01001 	mov	r1, #1
4001d4f4:	e3a00080 	mov	r0, #128	; 0x80
4001d4f8:	eb000101 	bl	4001d904 <CyU3PUsbSetEpNak>
4001d4fc:	e3a00064 	mov	r0, #100	; 0x64
4001d500:	ebffd7ce 	bl	40013440 <CyU3PBusyWait>
4001d504:	e59f0038 	ldr	r0, [pc, #56]	; 4001d544 <CyU3PUsbSendEP0Data+0x1d4>
4001d508:	ebffe306 	bl	40016128 <CyU3PDmaChannelReset>
4001d50c:	e3a00080 	mov	r0, #128	; 0x80
4001d510:	ebfffcf5 	bl	4001c8ec <CyU3PUsbFlushEp>
4001d514:	e3a01000 	mov	r1, #0
4001d518:	e3a00080 	mov	r0, #128	; 0x80
4001d51c:	eb0000f8 	bl	4001d904 <CyU3PUsbSetEpNak>
4001d520:	e59f0010 	ldr	r0, [pc, #16]	; 4001d538 <CyU3PUsbSendEP0Data+0x1c8>
4001d524:	ebffb2d7 	bl	4000a088 <_txe_mutex_put>
4001d528:	e1a00006 	mov	r0, r6
4001d52c:	eaffff98 	b	4001d394 <CyU3PUsbSendEP0Data+0x24>
4001d530:	00001388 	.word	0x00001388
4001d534:	40031d40 	.word	0x40031d40
4001d538:	40031ee0 	.word	0x40031ee0
4001d53c:	e0031000 	.word	0xe0031000
4001d540:	0000fff0 	.word	0x0000fff0
4001d544:	40031a74 	.word	0x40031a74

Disassembly of section i.CyU3PUsbSendErdy:

4001d548 <CyU3PUsbSendErdy>:
4001d548:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d54c:	e1a04000 	mov	r4, r0
4001d550:	e1a05001 	mov	r5, r1
4001d554:	e1a0000d 	mov	r0, sp
4001d558:	e3a02000 	mov	r2, #0
4001d55c:	e1a03002 	mov	r3, r2
4001d560:	e1a06002 	mov	r6, r2
4001d564:	e880004c 	stm	r0, {r2, r3, r6}
4001d568:	e204600f 	and	r6, r4, #15
4001d56c:	e2047080 	and	r7, r4, #128	; 0x80
4001d570:	e59f00b4 	ldr	r0, [pc, #180]	; 4001d62c <CyU3PUsbSendErdy+0xe4>
4001d574:	e5d00008 	ldrb	r0, [r0, #8]
4001d578:	e3500000 	cmp	r0, #0
4001d57c:	1a000001 	bne	4001d588 <CyU3PUsbSendErdy+0x40>
4001d580:	e3a00042 	mov	r0, #66	; 0x42
4001d584:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d588:	ebfffd7c 	bl	4001cb80 <CyU3PUsbGetSpeed>
4001d58c:	e3500003 	cmp	r0, #3
4001d590:	1a000004 	bne	4001d5a8 <CyU3PUsbSendErdy+0x60>
4001d594:	e59f0094 	ldr	r0, [pc, #148]	; 4001d630 <CyU3PUsbSendErdy+0xe8>
4001d598:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d59c:	e200003f 	and	r0, r0, #63	; 0x3f
4001d5a0:	e3500010 	cmp	r0, #16
4001d5a4:	0a000001 	beq	4001d5b0 <CyU3PUsbSendErdy+0x68>
4001d5a8:	e3a000ff 	mov	r0, #255	; 0xff
4001d5ac:	eafffff4 	b	4001d584 <CyU3PUsbSendErdy+0x3c>
4001d5b0:	e204007f 	and	r0, r4, #127	; 0x7f
4001d5b4:	e350000f 	cmp	r0, #15
4001d5b8:	da000001 	ble	4001d5c4 <CyU3PUsbSendErdy+0x7c>
4001d5bc:	e3a00040 	mov	r0, #64	; 0x40
4001d5c0:	eaffffef 	b	4001d584 <CyU3PUsbSendErdy+0x3c>
4001d5c4:	e59f0064 	ldr	r0, [pc, #100]	; 4001d630 <CyU3PUsbSendErdy+0xe8>
4001d5c8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d5cc:	e3a01004 	mov	r1, #4
4001d5d0:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d5d4:	e58d0000 	str	r0, [sp]
4001d5d8:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001d5dc:	e3800003 	orr	r0, r0, #3
4001d5e0:	e1800406 	orr	r0, r0, r6, lsl #8
4001d5e4:	e58d0004 	str	r0, [sp, #4]
4001d5e8:	e3570000 	cmp	r7, #0
4001d5ec:	0a000005 	beq	4001d608 <CyU3PUsbSendErdy+0xc0>
4001d5f0:	e59f003c 	ldr	r0, [pc, #60]	; 4001d634 <CyU3PUsbSendErdy+0xec>
4001d5f4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d5f8:	e3100008 	tst	r0, #8
4001d5fc:	0a000006 	beq	4001d61c <CyU3PUsbSendErdy+0xd4>
4001d600:	e58d5008 	str	r5, [sp, #8]
4001d604:	ea000004 	b	4001d61c <CyU3PUsbSendErdy+0xd4>
4001d608:	e59f0028 	ldr	r0, [pc, #40]	; 4001d638 <CyU3PUsbSendErdy+0xf0>
4001d60c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d610:	e3100008 	tst	r0, #8
4001d614:	0a000000 	beq	4001d61c <CyU3PUsbSendErdy+0xd4>
4001d618:	e58d5008 	str	r5, [sp, #8]
4001d61c:	e1a0000d 	mov	r0, sp
4001d620:	eb00123d 	bl	40021f1c <CyFx3Usb3SendTP>
4001d624:	e3a00000 	mov	r0, #0
4001d628:	eaffffd5 	b	4001d584 <CyU3PUsbSendErdy+0x3c>
4001d62c:	40031d40 	.word	0x40031d40
4001d630:	e0033000 	.word	0xe0033000
4001d634:	e0033500 	.word	0xe0033500
4001d638:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001d63c <CyU3PUsbSendNrdy>:
4001d63c:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d640:	e1a04000 	mov	r4, r0
4001d644:	e1a05001 	mov	r5, r1
4001d648:	e1a0000d 	mov	r0, sp
4001d64c:	e3a02000 	mov	r2, #0
4001d650:	e1a03002 	mov	r3, r2
4001d654:	e1a06002 	mov	r6, r2
4001d658:	e880004c 	stm	r0, {r2, r3, r6}
4001d65c:	e204600f 	and	r6, r4, #15
4001d660:	e2047080 	and	r7, r4, #128	; 0x80
4001d664:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d71c <CyU3PUsbSendNrdy+0xe0>
4001d668:	e5d00008 	ldrb	r0, [r0, #8]
4001d66c:	e3500000 	cmp	r0, #0
4001d670:	1a000001 	bne	4001d67c <CyU3PUsbSendNrdy+0x40>
4001d674:	e3a00042 	mov	r0, #66	; 0x42
4001d678:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d67c:	ebfffd3f 	bl	4001cb80 <CyU3PUsbGetSpeed>
4001d680:	e3500003 	cmp	r0, #3
4001d684:	1a000004 	bne	4001d69c <CyU3PUsbSendNrdy+0x60>
4001d688:	e59f0090 	ldr	r0, [pc, #144]	; 4001d720 <CyU3PUsbSendNrdy+0xe4>
4001d68c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d690:	e200003f 	and	r0, r0, #63	; 0x3f
4001d694:	e3500010 	cmp	r0, #16
4001d698:	0a000001 	beq	4001d6a4 <CyU3PUsbSendNrdy+0x68>
4001d69c:	e3a000ff 	mov	r0, #255	; 0xff
4001d6a0:	eafffff4 	b	4001d678 <CyU3PUsbSendNrdy+0x3c>
4001d6a4:	e204007f 	and	r0, r4, #127	; 0x7f
4001d6a8:	e350000f 	cmp	r0, #15
4001d6ac:	da000001 	ble	4001d6b8 <CyU3PUsbSendNrdy+0x7c>
4001d6b0:	e3a00040 	mov	r0, #64	; 0x40
4001d6b4:	eaffffef 	b	4001d678 <CyU3PUsbSendNrdy+0x3c>
4001d6b8:	e59f0060 	ldr	r0, [pc, #96]	; 4001d720 <CyU3PUsbSendNrdy+0xe4>
4001d6bc:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d6c0:	e3a01004 	mov	r1, #4
4001d6c4:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d6c8:	e58d0000 	str	r0, [sp]
4001d6cc:	e3870002 	orr	r0, r7, #2
4001d6d0:	e1800406 	orr	r0, r0, r6, lsl #8
4001d6d4:	e58d0004 	str	r0, [sp, #4]
4001d6d8:	e3570000 	cmp	r7, #0
4001d6dc:	0a000005 	beq	4001d6f8 <CyU3PUsbSendNrdy+0xbc>
4001d6e0:	e59f003c 	ldr	r0, [pc, #60]	; 4001d724 <CyU3PUsbSendNrdy+0xe8>
4001d6e4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d6e8:	e3100008 	tst	r0, #8
4001d6ec:	0a000006 	beq	4001d70c <CyU3PUsbSendNrdy+0xd0>
4001d6f0:	e58d5008 	str	r5, [sp, #8]
4001d6f4:	ea000004 	b	4001d70c <CyU3PUsbSendNrdy+0xd0>
4001d6f8:	e59f0028 	ldr	r0, [pc, #40]	; 4001d728 <CyU3PUsbSendNrdy+0xec>
4001d6fc:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d700:	e3100008 	tst	r0, #8
4001d704:	0a000000 	beq	4001d70c <CyU3PUsbSendNrdy+0xd0>
4001d708:	e58d5008 	str	r5, [sp, #8]
4001d70c:	e1a0000d 	mov	r0, sp
4001d710:	eb001201 	bl	40021f1c <CyFx3Usb3SendTP>
4001d714:	e3a00000 	mov	r0, #0
4001d718:	eaffffd6 	b	4001d678 <CyU3PUsbSendNrdy+0x3c>
4001d71c:	40031d40 	.word	0x40031d40
4001d720:	e0033000 	.word	0xe0033000
4001d724:	e0033500 	.word	0xe0033500
4001d728:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001d72c <CyU3PUsbSetDesc>:
4001d72c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d730:	e1a03000 	mov	r3, r0
4001d734:	e3a0c000 	mov	ip, #0
4001d738:	e59f01b8 	ldr	r0, [pc, #440]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d73c:	e5d00008 	ldrb	r0, [r0, #8]
4001d740:	e3500000 	cmp	r0, #0
4001d744:	1a000001 	bne	4001d750 <CyU3PUsbSetDesc+0x24>
4001d748:	e3a00042 	mov	r0, #66	; 0x42
4001d74c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d750:	e3520000 	cmp	r2, #0
4001d754:	1a000001 	bne	4001d760 <CyU3PUsbSetDesc+0x34>
4001d758:	e3a00040 	mov	r0, #64	; 0x40
4001d75c:	eafffffa 	b	4001d74c <CyU3PUsbSetDesc+0x20>
4001d760:	e3530009 	cmp	r3, #9
4001d764:	308ff103 	addcc	pc, pc, r3, lsl #2
4001d768:	ea00004d 	b	4001d8a4 <CyU3PUsbSetDesc+0x178>
4001d76c:	ea000007 	b	4001d790 <CyU3PUsbSetDesc+0x64>
4001d770:	ea00000a 	b	4001d7a0 <CyU3PUsbSetDesc+0x74>
4001d774:	ea000011 	b	4001d7c0 <CyU3PUsbSetDesc+0x94>
4001d778:	ea000022 	b	4001d808 <CyU3PUsbSetDesc+0xdc>
4001d77c:	ea00002f 	b	4001d840 <CyU3PUsbSetDesc+0x114>
4001d780:	ea00003c 	b	4001d878 <CyU3PUsbSetDesc+0x14c>
4001d784:	ea000011 	b	4001d7d0 <CyU3PUsbSetDesc+0xa4>
4001d788:	ea000008 	b	4001d7b0 <CyU3PUsbSetDesc+0x84>
4001d78c:	ea000040 	b	4001d894 <CyU3PUsbSetDesc+0x168>
4001d790:	e1a00000 	nop			; (mov r0, r0)
4001d794:	e59f0160 	ldr	r0, [pc, #352]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d798:	e5802004 	str	r2, [r0, #4]
4001d79c:	ea000043 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d7a0:	e1a00000 	nop			; (mov r0, r0)
4001d7a4:	e59f0150 	ldr	r0, [pc, #336]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d7a8:	e5802000 	str	r2, [r0]
4001d7ac:	ea00003f 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d7b0:	e1a00000 	nop			; (mov r0, r0)
4001d7b4:	e59f0140 	ldr	r0, [pc, #320]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d7b8:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001d7bc:	ea00003b 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d7c0:	e1a00000 	nop			; (mov r0, r0)
4001d7c4:	e59f0130 	ldr	r0, [pc, #304]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d7c8:	e5802008 	str	r2, [r0, #8]
4001d7cc:	ea000037 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d7d0:	e1a00000 	nop			; (mov r0, r0)
4001d7d4:	e59f0120 	ldr	r0, [pc, #288]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d7d8:	e580201c 	str	r2, [r0, #28]
4001d7dc:	e5d20007 	ldrb	r0, [r2, #7]
4001d7e0:	e3100040 	tst	r0, #64	; 0x40
4001d7e4:	0a000003 	beq	4001d7f8 <CyU3PUsbSetDesc+0xcc>
4001d7e8:	e3a00001 	mov	r0, #1
4001d7ec:	e59fe104 	ldr	lr, [pc, #260]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d7f0:	e5ce0006 	strb	r0, [lr, #6]
4001d7f4:	ea000002 	b	4001d804 <CyU3PUsbSetDesc+0xd8>
4001d7f8:	e3a00000 	mov	r0, #0
4001d7fc:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d800:	e5ce0006 	strb	r0, [lr, #6]
4001d804:	ea000029 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d808:	e1a00000 	nop			; (mov r0, r0)
4001d80c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d810:	e5802018 	str	r2, [r0, #24]
4001d814:	e5d20007 	ldrb	r0, [r2, #7]
4001d818:	e3100040 	tst	r0, #64	; 0x40
4001d81c:	0a000003 	beq	4001d830 <CyU3PUsbSetDesc+0x104>
4001d820:	e3a00001 	mov	r0, #1
4001d824:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d828:	e5ce0006 	strb	r0, [lr, #6]
4001d82c:	ea000002 	b	4001d83c <CyU3PUsbSetDesc+0x110>
4001d830:	e3a00000 	mov	r0, #0
4001d834:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d838:	e5ce0006 	strb	r0, [lr, #6]
4001d83c:	ea00001b 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d840:	e1a00000 	nop			; (mov r0, r0)
4001d844:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d848:	e5802014 	str	r2, [r0, #20]
4001d84c:	e5d20007 	ldrb	r0, [r2, #7]
4001d850:	e3100040 	tst	r0, #64	; 0x40
4001d854:	0a000003 	beq	4001d868 <CyU3PUsbSetDesc+0x13c>
4001d858:	e3a00001 	mov	r0, #1
4001d85c:	e59fe094 	ldr	lr, [pc, #148]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d860:	e5ce0006 	strb	r0, [lr, #6]
4001d864:	ea000002 	b	4001d874 <CyU3PUsbSetDesc+0x148>
4001d868:	e3a00000 	mov	r0, #0
4001d86c:	e59fe084 	ldr	lr, [pc, #132]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d870:	e5ce0006 	strb	r0, [lr, #6]
4001d874:	ea00000d 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d878:	e1a00000 	nop			; (mov r0, r0)
4001d87c:	e3510010 	cmp	r1, #16
4001d880:	da000000 	ble	4001d888 <CyU3PUsbSetDesc+0x15c>
4001d884:	e3a0c04b 	mov	ip, #75	; 0x4b
4001d888:	e59f0070 	ldr	r0, [pc, #112]	; 4001d900 <CyU3PUsbSetDesc+0x1d4>
4001d88c:	e7802101 	str	r2, [r0, r1, lsl #2]
4001d890:	ea000006 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d894:	e1a00000 	nop			; (mov r0, r0)
4001d898:	e59f005c 	ldr	r0, [pc, #92]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d89c:	e5802070 	str	r2, [r0, #112]	; 0x70
4001d8a0:	ea000002 	b	4001d8b0 <CyU3PUsbSetDesc+0x184>
4001d8a4:	e1a00000 	nop			; (mov r0, r0)
4001d8a8:	e3a00050 	mov	r0, #80	; 0x50
4001d8ac:	eaffffa6 	b	4001d74c <CyU3PUsbSetDesc+0x20>
4001d8b0:	e1a00000 	nop			; (mov r0, r0)
4001d8b4:	e59f0040 	ldr	r0, [pc, #64]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d8b8:	e5900000 	ldr	r0, [r0]
4001d8bc:	e3500000 	cmp	r0, #0
4001d8c0:	0a00000a 	beq	4001d8f0 <CyU3PUsbSetDesc+0x1c4>
4001d8c4:	e59f0030 	ldr	r0, [pc, #48]	; 4001d8fc <CyU3PUsbSetDesc+0x1d0>
4001d8c8:	e5900020 	ldr	r0, [r0, #32]
4001d8cc:	e3500000 	cmp	r0, #0
4001d8d0:	0a000006 	beq	4001d8f0 <CyU3PUsbSetDesc+0x1c4>
4001d8d4:	e59f001c 	ldr	r0, [pc, #28]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d8d8:	e5d00008 	ldrb	r0, [r0, #8]
4001d8dc:	e3500003 	cmp	r0, #3
4001d8e0:	aa000002 	bge	4001d8f0 <CyU3PUsbSetDesc+0x1c4>
4001d8e4:	e3a00003 	mov	r0, #3
4001d8e8:	e59fe008 	ldr	lr, [pc, #8]	; 4001d8f8 <CyU3PUsbSetDesc+0x1cc>
4001d8ec:	e5ce0008 	strb	r0, [lr, #8]
4001d8f0:	e1a0000c 	mov	r0, ip
4001d8f4:	eaffff94 	b	4001d74c <CyU3PUsbSetDesc+0x20>
4001d8f8:	40031d40 	.word	0x40031d40
4001d8fc:	40031f98 	.word	0x40031f98
4001d900:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001d904 <CyU3PUsbSetEpNak>:
4001d904:	e92d4070 	push	{r4, r5, r6, lr}
4001d908:	e1a04000 	mov	r4, r0
4001d90c:	e1a06001 	mov	r6, r1
4001d910:	e59f0198 	ldr	r0, [pc, #408]	; 4001dab0 <CyU3PUsbSetEpNak+0x1ac>
4001d914:	e5d00008 	ldrb	r0, [r0, #8]
4001d918:	e3500000 	cmp	r0, #0
4001d91c:	1a000001 	bne	4001d928 <CyU3PUsbSetEpNak+0x24>
4001d920:	e3a00042 	mov	r0, #66	; 0x42
4001d924:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d928:	e204007f 	and	r0, r4, #127	; 0x7f
4001d92c:	e350000f 	cmp	r0, #15
4001d930:	da000001 	ble	4001d93c <CyU3PUsbSetEpNak+0x38>
4001d934:	e3a00040 	mov	r0, #64	; 0x40
4001d938:	eafffff9 	b	4001d924 <CyU3PUsbSetEpNak+0x20>
4001d93c:	e3e01000 	mvn	r1, #0
4001d940:	e59f016c 	ldr	r0, [pc, #364]	; 4001dab4 <CyU3PUsbSetEpNak+0x1b0>
4001d944:	ebffb19a 	bl	40009fb4 <_txe_mutex_get>
4001d948:	e3560000 	cmp	r6, #0
4001d94c:	0a000028 	beq	4001d9f4 <CyU3PUsbSetEpNak+0xf0>
4001d950:	e3140080 	tst	r4, #128	; 0x80
4001d954:	0a000012 	beq	4001d9a4 <CyU3PUsbSetEpNak+0xa0>
4001d958:	e59f0150 	ldr	r0, [pc, #336]	; 4001dab0 <CyU3PUsbSetEpNak+0x1ac>
4001d95c:	e5d00009 	ldrb	r0, [r0, #9]
4001d960:	e3500003 	cmp	r0, #3
4001d964:	1a000006 	bne	4001d984 <CyU3PUsbSetEpNak+0x80>
4001d968:	e59f0148 	ldr	r0, [pc, #328]	; 4001dab8 <CyU3PUsbSetEpNak+0x1b4>
4001d96c:	e204100f 	and	r1, r4, #15
4001d970:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001d974:	e3855003 	orr	r5, r5, #3
4001d978:	e204100f 	and	r1, r4, #15
4001d97c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d980:	ea000046 	b	4001daa0 <CyU3PUsbSetEpNak+0x19c>
4001d984:	e59f0130 	ldr	r0, [pc, #304]	; 4001dabc <CyU3PUsbSetEpNak+0x1b8>
4001d988:	e204100f 	and	r1, r4, #15
4001d98c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d990:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001d994:	e59f1120 	ldr	r1, [pc, #288]	; 4001dabc <CyU3PUsbSetEpNak+0x1b8>
4001d998:	e204200f 	and	r2, r4, #15
4001d99c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001d9a0:	ea00003e 	b	4001daa0 <CyU3PUsbSetEpNak+0x19c>
4001d9a4:	e59f0104 	ldr	r0, [pc, #260]	; 4001dab0 <CyU3PUsbSetEpNak+0x1ac>
4001d9a8:	e5d00009 	ldrb	r0, [r0, #9]
4001d9ac:	e3500003 	cmp	r0, #3
4001d9b0:	1a000007 	bne	4001d9d4 <CyU3PUsbSetEpNak+0xd0>
4001d9b4:	e59f0104 	ldr	r0, [pc, #260]	; 4001dac0 <CyU3PUsbSetEpNak+0x1bc>
4001d9b8:	e204100f 	and	r1, r4, #15
4001d9bc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d9c0:	e3805003 	orr	r5, r0, #3
4001d9c4:	e59f00f4 	ldr	r0, [pc, #244]	; 4001dac0 <CyU3PUsbSetEpNak+0x1bc>
4001d9c8:	e204100f 	and	r1, r4, #15
4001d9cc:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d9d0:	ea000032 	b	4001daa0 <CyU3PUsbSetEpNak+0x19c>
4001d9d4:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dac4 <CyU3PUsbSetEpNak+0x1c0>
4001d9d8:	e204100f 	and	r1, r4, #15
4001d9dc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d9e0:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001d9e4:	e59f10d8 	ldr	r1, [pc, #216]	; 4001dac4 <CyU3PUsbSetEpNak+0x1c0>
4001d9e8:	e204200f 	and	r2, r4, #15
4001d9ec:	e7810102 	str	r0, [r1, r2, lsl #2]
4001d9f0:	ea00002a 	b	4001daa0 <CyU3PUsbSetEpNak+0x19c>
4001d9f4:	e3140080 	tst	r4, #128	; 0x80
4001d9f8:	0a000014 	beq	4001da50 <CyU3PUsbSetEpNak+0x14c>
4001d9fc:	e59f00ac 	ldr	r0, [pc, #172]	; 4001dab0 <CyU3PUsbSetEpNak+0x1ac>
4001da00:	e5d00009 	ldrb	r0, [r0, #9]
4001da04:	e3500003 	cmp	r0, #3
4001da08:	1a000008 	bne	4001da30 <CyU3PUsbSetEpNak+0x12c>
4001da0c:	e59f00a4 	ldr	r0, [pc, #164]	; 4001dab8 <CyU3PUsbSetEpNak+0x1b4>
4001da10:	e204100f 	and	r1, r4, #15
4001da14:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001da18:	e3c50002 	bic	r0, r5, #2
4001da1c:	e3805001 	orr	r5, r0, #1
4001da20:	e59f0090 	ldr	r0, [pc, #144]	; 4001dab8 <CyU3PUsbSetEpNak+0x1b4>
4001da24:	e204100f 	and	r1, r4, #15
4001da28:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da2c:	ea00001b 	b	4001daa0 <CyU3PUsbSetEpNak+0x19c>
4001da30:	e59f0084 	ldr	r0, [pc, #132]	; 4001dabc <CyU3PUsbSetEpNak+0x1b8>
4001da34:	e204100f 	and	r1, r4, #15
4001da38:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da3c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001da40:	e59f1074 	ldr	r1, [pc, #116]	; 4001dabc <CyU3PUsbSetEpNak+0x1b8>
4001da44:	e204200f 	and	r2, r4, #15
4001da48:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da4c:	ea000013 	b	4001daa0 <CyU3PUsbSetEpNak+0x19c>
4001da50:	e59f0058 	ldr	r0, [pc, #88]	; 4001dab0 <CyU3PUsbSetEpNak+0x1ac>
4001da54:	e5d00009 	ldrb	r0, [r0, #9]
4001da58:	e3500003 	cmp	r0, #3
4001da5c:	1a000008 	bne	4001da84 <CyU3PUsbSetEpNak+0x180>
4001da60:	e59f0058 	ldr	r0, [pc, #88]	; 4001dac0 <CyU3PUsbSetEpNak+0x1bc>
4001da64:	e204100f 	and	r1, r4, #15
4001da68:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da6c:	e3c00002 	bic	r0, r0, #2
4001da70:	e3805001 	orr	r5, r0, #1
4001da74:	e59f0044 	ldr	r0, [pc, #68]	; 4001dac0 <CyU3PUsbSetEpNak+0x1bc>
4001da78:	e204100f 	and	r1, r4, #15
4001da7c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da80:	ea000006 	b	4001daa0 <CyU3PUsbSetEpNak+0x19c>
4001da84:	e59f0038 	ldr	r0, [pc, #56]	; 4001dac4 <CyU3PUsbSetEpNak+0x1c0>
4001da88:	e204100f 	and	r1, r4, #15
4001da8c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da90:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001da94:	e59f1028 	ldr	r1, [pc, #40]	; 4001dac4 <CyU3PUsbSetEpNak+0x1c0>
4001da98:	e204200f 	and	r2, r4, #15
4001da9c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001daa0:	e59f000c 	ldr	r0, [pc, #12]	; 4001dab4 <CyU3PUsbSetEpNak+0x1b0>
4001daa4:	ebffb177 	bl	4000a088 <_txe_mutex_put>
4001daa8:	e3a00000 	mov	r0, #0
4001daac:	eaffff9c 	b	4001d924 <CyU3PUsbSetEpNak+0x20>
4001dab0:	40031d40 	.word	0x40031d40
4001dab4:	40031ee0 	.word	0x40031ee0
4001dab8:	e0033500 	.word	0xe0033500
4001dabc:	e0031418 	.word	0xe0031418
4001dac0:	e0033600 	.word	0xe0033600
4001dac4:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001dac8 <CyU3PUsbSetLinkPowerState>:
4001dac8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dacc:	e1a01000 	mov	r1, r0
4001dad0:	e3a030ff 	mov	r3, #255	; 0xff
4001dad4:	e59f0138 	ldr	r0, [pc, #312]	; 4001dc14 <CyU3PUsbSetLinkPowerState+0x14c>
4001dad8:	e5d00008 	ldrb	r0, [r0, #8]
4001dadc:	e3500000 	cmp	r0, #0
4001dae0:	1a000001 	bne	4001daec <CyU3PUsbSetLinkPowerState+0x24>
4001dae4:	e3a00042 	mov	r0, #66	; 0x42
4001dae8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001daec:	e59f0120 	ldr	r0, [pc, #288]	; 4001dc14 <CyU3PUsbSetLinkPowerState+0x14c>
4001daf0:	e5d00008 	ldrb	r0, [r0, #8]
4001daf4:	e3500005 	cmp	r0, #5
4001daf8:	aa000001 	bge	4001db04 <CyU3PUsbSetLinkPowerState+0x3c>
4001dafc:	e3a00044 	mov	r0, #68	; 0x44
4001db00:	eafffff8 	b	4001dae8 <CyU3PUsbSetLinkPowerState+0x20>
4001db04:	ebfffc1d 	bl	4001cb80 <CyU3PUsbGetSpeed>
4001db08:	e3500003 	cmp	r0, #3
4001db0c:	0a000001 	beq	4001db18 <CyU3PUsbSetLinkPowerState+0x50>
4001db10:	e3a000ff 	mov	r0, #255	; 0xff
4001db14:	eafffff3 	b	4001dae8 <CyU3PUsbSetLinkPowerState+0x20>
4001db18:	e59f00f8 	ldr	r0, [pc, #248]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001db1c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db20:	e200203f 	and	r2, r0, #63	; 0x3f
4001db24:	e3510000 	cmp	r1, #0
4001db28:	0a000004 	beq	4001db40 <CyU3PUsbSetLinkPowerState+0x78>
4001db2c:	e3510001 	cmp	r1, #1
4001db30:	0a000015 	beq	4001db8c <CyU3PUsbSetLinkPowerState+0xc4>
4001db34:	e3510002 	cmp	r1, #2
4001db38:	1a00002f 	bne	4001dbfc <CyU3PUsbSetLinkPowerState+0x134>
4001db3c:	ea000020 	b	4001dbc4 <CyU3PUsbSetLinkPowerState+0xfc>
4001db40:	e1a00000 	nop			; (mov r0, r0)
4001db44:	e59f00cc 	ldr	r0, [pc, #204]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001db48:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db4c:	e3100c02 	tst	r0, #512	; 0x200
4001db50:	1a00000b 	bne	4001db84 <CyU3PUsbSetLinkPowerState+0xbc>
4001db54:	e59f00bc 	ldr	r0, [pc, #188]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001db58:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db5c:	e200203f 	and	r2, r0, #63	; 0x3f
4001db60:	e3520011 	cmp	r2, #17
4001db64:	ba000006 	blt	4001db84 <CyU3PUsbSetLinkPowerState+0xbc>
4001db68:	e3520013 	cmp	r2, #19
4001db6c:	ca000004 	bgt	4001db84 <CyU3PUsbSetLinkPowerState+0xbc>
4001db70:	e59f00a0 	ldr	r0, [pc, #160]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001db74:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db78:	e3800c02 	orr	r0, r0, #512	; 0x200
4001db7c:	e59fc094 	ldr	ip, [pc, #148]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001db80:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001db84:	e3a03000 	mov	r3, #0
4001db88:	ea00001e 	b	4001dc08 <CyU3PUsbSetLinkPowerState+0x140>
4001db8c:	e1a00000 	nop			; (mov r0, r0)
4001db90:	e3520010 	cmp	r2, #16
4001db94:	1a000009 	bne	4001dbc0 <CyU3PUsbSetLinkPowerState+0xf8>
4001db98:	e59f0074 	ldr	r0, [pc, #116]	; 4001dc14 <CyU3PUsbSetLinkPowerState+0x14c>
4001db9c:	e5d00006 	ldrb	r0, [r0, #6]
4001dba0:	e3100004 	tst	r0, #4
4001dba4:	0a000005 	beq	4001dbc0 <CyU3PUsbSetLinkPowerState+0xf8>
4001dba8:	e59f0068 	ldr	r0, [pc, #104]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001dbac:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dbb0:	e3800001 	orr	r0, r0, #1
4001dbb4:	e59fc05c 	ldr	ip, [pc, #92]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001dbb8:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dbbc:	e3a03000 	mov	r3, #0
4001dbc0:	ea000010 	b	4001dc08 <CyU3PUsbSetLinkPowerState+0x140>
4001dbc4:	e1a00000 	nop			; (mov r0, r0)
4001dbc8:	e3520010 	cmp	r2, #16
4001dbcc:	1a000009 	bne	4001dbf8 <CyU3PUsbSetLinkPowerState+0x130>
4001dbd0:	e59f003c 	ldr	r0, [pc, #60]	; 4001dc14 <CyU3PUsbSetLinkPowerState+0x14c>
4001dbd4:	e5d00006 	ldrb	r0, [r0, #6]
4001dbd8:	e3100008 	tst	r0, #8
4001dbdc:	0a000005 	beq	4001dbf8 <CyU3PUsbSetLinkPowerState+0x130>
4001dbe0:	e59f0030 	ldr	r0, [pc, #48]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001dbe4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dbe8:	e3800002 	orr	r0, r0, #2
4001dbec:	e59fc024 	ldr	ip, [pc, #36]	; 4001dc18 <CyU3PUsbSetLinkPowerState+0x150>
4001dbf0:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dbf4:	e3a03000 	mov	r3, #0
4001dbf8:	ea000002 	b	4001dc08 <CyU3PUsbSetLinkPowerState+0x140>
4001dbfc:	e1a00000 	nop			; (mov r0, r0)
4001dc00:	e3a03040 	mov	r3, #64	; 0x40
4001dc04:	e1a00000 	nop			; (mov r0, r0)
4001dc08:	e1a00000 	nop			; (mov r0, r0)
4001dc0c:	e1a00003 	mov	r0, r3
4001dc10:	eaffffb4 	b	4001dae8 <CyU3PUsbSetLinkPowerState+0x20>
4001dc14:	40031d40 	.word	0x40031d40
4001dc18:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001dc1c <CyU3PUsbStall>:
4001dc1c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001dc20:	e1a04000 	mov	r4, r0
4001dc24:	e1a05001 	mov	r5, r1
4001dc28:	e1a06002 	mov	r6, r2
4001dc2c:	e204700f 	and	r7, r4, #15
4001dc30:	e3a08000 	mov	r8, #0
4001dc34:	e59f0344 	ldr	r0, [pc, #836]	; 4001df80 <CyU3PUsbStall+0x364>
4001dc38:	e5d00008 	ldrb	r0, [r0, #8]
4001dc3c:	e3500000 	cmp	r0, #0
4001dc40:	1a000001 	bne	4001dc4c <CyU3PUsbStall+0x30>
4001dc44:	e3a00042 	mov	r0, #66	; 0x42
4001dc48:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001dc4c:	e204007f 	and	r0, r4, #127	; 0x7f
4001dc50:	e350000f 	cmp	r0, #15
4001dc54:	da000001 	ble	4001dc60 <CyU3PUsbStall+0x44>
4001dc58:	e3a00040 	mov	r0, #64	; 0x40
4001dc5c:	eafffff9 	b	4001dc48 <CyU3PUsbStall+0x2c>
4001dc60:	e3570000 	cmp	r7, #0
4001dc64:	1a000003 	bne	4001dc78 <CyU3PUsbStall+0x5c>
4001dc68:	e3550000 	cmp	r5, #0
4001dc6c:	1a000001 	bne	4001dc78 <CyU3PUsbStall+0x5c>
4001dc70:	e3a00040 	mov	r0, #64	; 0x40
4001dc74:	eafffff3 	b	4001dc48 <CyU3PUsbStall+0x2c>
4001dc78:	e59f0300 	ldr	r0, [pc, #768]	; 4001df80 <CyU3PUsbStall+0x364>
4001dc7c:	e5d00009 	ldrb	r0, [r0, #9]
4001dc80:	e3500000 	cmp	r0, #0
4001dc84:	1a000001 	bne	4001dc90 <CyU3PUsbStall+0x74>
4001dc88:	e3a00000 	mov	r0, #0
4001dc8c:	eaffffed 	b	4001dc48 <CyU3PUsbStall+0x2c>
4001dc90:	e3e01000 	mvn	r1, #0
4001dc94:	e59f02e8 	ldr	r0, [pc, #744]	; 4001df84 <CyU3PUsbStall+0x368>
4001dc98:	ebffb0c5 	bl	40009fb4 <_txe_mutex_get>
4001dc9c:	e3570000 	cmp	r7, #0
4001dca0:	1a000037 	bne	4001dd84 <CyU3PUsbStall+0x168>
4001dca4:	ebfffbbd 	bl	4001cba0 <CyU3PUsbIsNewCtrlRqtRecvd>
4001dca8:	e3500000 	cmp	r0, #0
4001dcac:	0a000003 	beq	4001dcc0 <CyU3PUsbStall+0xa4>
4001dcb0:	e59f02cc 	ldr	r0, [pc, #716]	; 4001df84 <CyU3PUsbStall+0x368>
4001dcb4:	ebffb0f3 	bl	4000a088 <_txe_mutex_put>
4001dcb8:	e3a00000 	mov	r0, #0
4001dcbc:	eaffffe1 	b	4001dc48 <CyU3PUsbStall+0x2c>
4001dcc0:	e59f02b8 	ldr	r0, [pc, #696]	; 4001df80 <CyU3PUsbStall+0x364>
4001dcc4:	e5d00009 	ldrb	r0, [r0, #9]
4001dcc8:	e3500003 	cmp	r0, #3
4001dccc:	1a00001b 	bne	4001dd40 <CyU3PUsbStall+0x124>
4001dcd0:	e59f02b0 	ldr	r0, [pc, #688]	; 4001df88 <CyU3PUsbStall+0x36c>
4001dcd4:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001dcd8:	e3800004 	orr	r0, r0, #4
4001dcdc:	e59f12a4 	ldr	r1, [pc, #676]	; 4001df88 <CyU3PUsbStall+0x36c>
4001dce0:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001dce4:	e1a00001 	mov	r0, r1
4001dce8:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001dcec:	e3800004 	orr	r0, r0, #4
4001dcf0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001dcf4:	eb00104b 	bl	40021e28 <CyU3PVicDisableAllInterrupts>
4001dcf8:	e1a0a000 	mov	sl, r0
4001dcfc:	e3a00001 	mov	r0, #1
4001dd00:	ebffd5ce 	bl	40013440 <CyU3PBusyWait>
4001dd04:	e59f027c 	ldr	r0, [pc, #636]	; 4001df88 <CyU3PUsbStall+0x36c>
4001dd08:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dd0c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd10:	e59f1270 	ldr	r1, [pc, #624]	; 4001df88 <CyU3PUsbStall+0x36c>
4001dd14:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dd18:	e1a0000a 	mov	r0, sl
4001dd1c:	eb00104f 	bl	40021e60 <CyU3PVicEnableInterrupts>
4001dd20:	e3a00000 	mov	r0, #0
4001dd24:	e59f1260 	ldr	r1, [pc, #608]	; 4001df8c <CyU3PUsbStall+0x370>
4001dd28:	e5810000 	str	r0, [r1]
4001dd2c:	e59f125c 	ldr	r1, [pc, #604]	; 4001df90 <CyU3PUsbStall+0x374>
4001dd30:	e5810000 	str	r0, [r1]
4001dd34:	e59f0258 	ldr	r0, [pc, #600]	; 4001df94 <CyU3PUsbStall+0x378>
4001dd38:	ebffb37f 	bl	4000ab3c <_txe_timer_deactivate>
4001dd3c:	ea00000c 	b	4001dd74 <CyU3PUsbStall+0x158>
4001dd40:	e59f0250 	ldr	r0, [pc, #592]	; 4001df98 <CyU3PUsbStall+0x37c>
4001dd44:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001dd48:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd4c:	e59f1244 	ldr	r1, [pc, #580]	; 4001df98 <CyU3PUsbStall+0x37c>
4001dd50:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001dd54:	e1a00001 	mov	r0, r1
4001dd58:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001dd5c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd60:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001dd64:	e1a00001 	mov	r0, r1
4001dd68:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dd6c:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001dd70:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dd74:	e59f0208 	ldr	r0, [pc, #520]	; 4001df84 <CyU3PUsbStall+0x368>
4001dd78:	ebffb0c2 	bl	4000a088 <_txe_mutex_put>
4001dd7c:	e3a00000 	mov	r0, #0
4001dd80:	eaffffb0 	b	4001dc48 <CyU3PUsbStall+0x2c>
4001dd84:	e59f01f4 	ldr	r0, [pc, #500]	; 4001df80 <CyU3PUsbStall+0x364>
4001dd88:	e5d00009 	ldrb	r0, [r0, #9]
4001dd8c:	e3500003 	cmp	r0, #3
4001dd90:	1a000033 	bne	4001de64 <CyU3PUsbStall+0x248>
4001dd94:	e3140080 	tst	r4, #128	; 0x80
4001dd98:	0a000017 	beq	4001ddfc <CyU3PUsbStall+0x1e0>
4001dd9c:	e3550000 	cmp	r5, #0
4001dda0:	0a00000a 	beq	4001ddd0 <CyU3PUsbStall+0x1b4>
4001dda4:	e59f01f0 	ldr	r0, [pc, #496]	; 4001df9c <CyU3PUsbStall+0x380>
4001dda8:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001ddac:	e3899005 	orr	r9, r9, #5
4001ddb0:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ddb4:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001ddb8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001ddbc:	e1a01800 	lsl	r1, r0, #16
4001ddc0:	e1a01821 	lsr	r1, r1, #16
4001ddc4:	e1a00004 	mov	r0, r4
4001ddc8:	ebfffdde 	bl	4001d548 <CyU3PUsbSendErdy>
4001ddcc:	ea000041 	b	4001ded8 <CyU3PUsbStall+0x2bc>
4001ddd0:	e59f01c4 	ldr	r0, [pc, #452]	; 4001df9c <CyU3PUsbStall+0x380>
4001ddd4:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001ddd8:	e3899011 	orr	r9, r9, #17
4001dddc:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dde0:	e3a00001 	mov	r0, #1
4001dde4:	ebffd595 	bl	40013440 <CyU3PBusyWait>
4001dde8:	e3c90014 	bic	r0, r9, #20
4001ddec:	e3809001 	orr	r9, r0, #1
4001ddf0:	e59f01a4 	ldr	r0, [pc, #420]	; 4001df9c <CyU3PUsbStall+0x380>
4001ddf4:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ddf8:	ea000036 	b	4001ded8 <CyU3PUsbStall+0x2bc>
4001ddfc:	e3550000 	cmp	r5, #0
4001de00:	0a00000b 	beq	4001de34 <CyU3PUsbStall+0x218>
4001de04:	e59f0194 	ldr	r0, [pc, #404]	; 4001dfa0 <CyU3PUsbStall+0x384>
4001de08:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de0c:	e3809005 	orr	r9, r0, #5
4001de10:	e59f0188 	ldr	r0, [pc, #392]	; 4001dfa0 <CyU3PUsbStall+0x384>
4001de14:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de18:	e28000c0 	add	r0, r0, #192	; 0xc0
4001de1c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de20:	e1a01800 	lsl	r1, r0, #16
4001de24:	e1a01821 	lsr	r1, r1, #16
4001de28:	e1a00004 	mov	r0, r4
4001de2c:	ebfffdc5 	bl	4001d548 <CyU3PUsbSendErdy>
4001de30:	ea000028 	b	4001ded8 <CyU3PUsbStall+0x2bc>
4001de34:	e59f0164 	ldr	r0, [pc, #356]	; 4001dfa0 <CyU3PUsbStall+0x384>
4001de38:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de3c:	e3809011 	orr	r9, r0, #17
4001de40:	e59f0158 	ldr	r0, [pc, #344]	; 4001dfa0 <CyU3PUsbStall+0x384>
4001de44:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de48:	e3a00001 	mov	r0, #1
4001de4c:	ebffd57b 	bl	40013440 <CyU3PBusyWait>
4001de50:	e3c90014 	bic	r0, r9, #20
4001de54:	e3809001 	orr	r9, r0, #1
4001de58:	e59f0140 	ldr	r0, [pc, #320]	; 4001dfa0 <CyU3PUsbStall+0x384>
4001de5c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de60:	ea00001c 	b	4001ded8 <CyU3PUsbStall+0x2bc>
4001de64:	e3140080 	tst	r4, #128	; 0x80
4001de68:	0a00000d 	beq	4001dea4 <CyU3PUsbStall+0x288>
4001de6c:	e3550000 	cmp	r5, #0
4001de70:	0a000005 	beq	4001de8c <CyU3PUsbStall+0x270>
4001de74:	e59f0128 	ldr	r0, [pc, #296]	; 4001dfa4 <CyU3PUsbStall+0x388>
4001de78:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de7c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de80:	e59f111c 	ldr	r1, [pc, #284]	; 4001dfa4 <CyU3PUsbStall+0x388>
4001de84:	e7810107 	str	r0, [r1, r7, lsl #2]
4001de88:	ea000012 	b	4001ded8 <CyU3PUsbStall+0x2bc>
4001de8c:	e59f0110 	ldr	r0, [pc, #272]	; 4001dfa4 <CyU3PUsbStall+0x388>
4001de90:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de94:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001de98:	e59f1104 	ldr	r1, [pc, #260]	; 4001dfa4 <CyU3PUsbStall+0x388>
4001de9c:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dea0:	ea00000c 	b	4001ded8 <CyU3PUsbStall+0x2bc>
4001dea4:	e3550000 	cmp	r5, #0
4001dea8:	0a000005 	beq	4001dec4 <CyU3PUsbStall+0x2a8>
4001deac:	e59f00f4 	ldr	r0, [pc, #244]	; 4001dfa8 <CyU3PUsbStall+0x38c>
4001deb0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001deb4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001deb8:	e59f10e8 	ldr	r1, [pc, #232]	; 4001dfa8 <CyU3PUsbStall+0x38c>
4001debc:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dec0:	ea000004 	b	4001ded8 <CyU3PUsbStall+0x2bc>
4001dec4:	e59f00dc 	ldr	r0, [pc, #220]	; 4001dfa8 <CyU3PUsbStall+0x38c>
4001dec8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001decc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001ded0:	e59f10d0 	ldr	r1, [pc, #208]	; 4001dfa8 <CyU3PUsbStall+0x38c>
4001ded4:	e7810107 	str	r0, [r1, r7, lsl #2]
4001ded8:	e3560000 	cmp	r6, #0
4001dedc:	0a000023 	beq	4001df70 <CyU3PUsbStall+0x354>
4001dee0:	e3550000 	cmp	r5, #0
4001dee4:	1a000021 	bne	4001df70 <CyU3PUsbStall+0x354>
4001dee8:	e59f0090 	ldr	r0, [pc, #144]	; 4001df80 <CyU3PUsbStall+0x364>
4001deec:	e5d00009 	ldrb	r0, [r0, #9]
4001def0:	e3500003 	cmp	r0, #3
4001def4:	1a00000b 	bne	4001df28 <CyU3PUsbStall+0x30c>
4001def8:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001defc:	e3140080 	tst	r4, #128	; 0x80
4001df00:	0a000000 	beq	4001df08 <CyU3PUsbStall+0x2ec>
4001df04:	e3888010 	orr	r8, r8, #16
4001df08:	e59f0078 	ldr	r0, [pc, #120]	; 4001df88 <CyU3PUsbStall+0x36c>
4001df0c:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001df10:	e1a00000 	nop			; (mov r0, r0)
4001df14:	e59f006c 	ldr	r0, [pc, #108]	; 4001df88 <CyU3PUsbStall+0x36c>
4001df18:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001df1c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001df20:	0afffffb 	beq	4001df14 <CyU3PUsbStall+0x2f8>
4001df24:	ea000011 	b	4001df70 <CyU3PUsbStall+0x354>
4001df28:	e3140080 	tst	r4, #128	; 0x80
4001df2c:	0a000000 	beq	4001df34 <CyU3PUsbStall+0x318>
4001df30:	e3877010 	orr	r7, r7, #16
4001df34:	e59f005c 	ldr	r0, [pc, #92]	; 4001df98 <CyU3PUsbStall+0x37c>
4001df38:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001df3c:	e1a00000 	nop			; (mov r0, r0)
4001df40:	e59f0050 	ldr	r0, [pc, #80]	; 4001df98 <CyU3PUsbStall+0x37c>
4001df44:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001df48:	e3100c01 	tst	r0, #256	; 0x100
4001df4c:	0afffffb 	beq	4001df40 <CyU3PUsbStall+0x324>
4001df50:	e3877020 	orr	r7, r7, #32
4001df54:	e59f003c 	ldr	r0, [pc, #60]	; 4001df98 <CyU3PUsbStall+0x37c>
4001df58:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001df5c:	e1a00000 	nop			; (mov r0, r0)
4001df60:	e59f0030 	ldr	r0, [pc, #48]	; 4001df98 <CyU3PUsbStall+0x37c>
4001df64:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001df68:	e3100c01 	tst	r0, #256	; 0x100
4001df6c:	0afffffb 	beq	4001df60 <CyU3PUsbStall+0x344>
4001df70:	e59f000c 	ldr	r0, [pc, #12]	; 4001df84 <CyU3PUsbStall+0x368>
4001df74:	ebffb043 	bl	4000a088 <_txe_mutex_put>
4001df78:	e3a00000 	mov	r0, #0
4001df7c:	eaffff31 	b	4001dc48 <CyU3PUsbStall+0x2c>
4001df80:	40031d40 	.word	0x40031d40
4001df84:	40031ee0 	.word	0x40031ee0
4001df88:	e0033000 	.word	0xe0033000
4001df8c:	40030db4 	.word	0x40030db4
4001df90:	40030db8 	.word	0x40030db8
4001df94:	400326a0 	.word	0x400326a0
4001df98:	e0031000 	.word	0xe0031000
4001df9c:	e0033500 	.word	0xe0033500
4001dfa0:	e0033600 	.word	0xe0033600
4001dfa4:	e0031418 	.word	0xe0031418
4001dfa8:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001dfac <CyU3PUsbStart>:
4001dfac:	e92d4070 	push	{r4, r5, r6, lr}
4001dfb0:	e59f0324 	ldr	r0, [pc, #804]	; 4001e2dc <CyU3PUsbStart+0x330>
4001dfb4:	e5900000 	ldr	r0, [r0]
4001dfb8:	e3500000 	cmp	r0, #0
4001dfbc:	1a000001 	bne	4001dfc8 <CyU3PUsbStart+0x1c>
4001dfc0:	e3a00010 	mov	r0, #16
4001dfc4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001dfc8:	e59f0310 	ldr	r0, [pc, #784]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001dfcc:	e5d00008 	ldrb	r0, [r0, #8]
4001dfd0:	e3500000 	cmp	r0, #0
4001dfd4:	0a000001 	beq	4001dfe0 <CyU3PUsbStart+0x34>
4001dfd8:	e3a00043 	mov	r0, #67	; 0x43
4001dfdc:	eafffff8 	b	4001dfc4 <CyU3PUsbStart+0x18>
4001dfe0:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e2e4 <CyU3PUsbStart+0x338>
4001dfe4:	e5900000 	ldr	r0, [r0]
4001dfe8:	e3500000 	cmp	r0, #0
4001dfec:	0a00006b 	beq	4001e1a0 <CyU3PUsbStart+0x1f4>
4001dff0:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e2e8 <CyU3PUsbStart+0x33c>
4001dff4:	eb00059e 	bl	4001f674 <CyU3PUibSocketInit>
4001dff8:	ebfff98c 	bl	4001c630 <CyU3PUsbCreateDmaChannels>
4001dffc:	e1a04000 	mov	r4, r0
4001e000:	e3540000 	cmp	r4, #0
4001e004:	0a000001 	beq	4001e010 <CyU3PUsbStart+0x64>
4001e008:	e1a00004 	mov	r0, r4
4001e00c:	eaffffec 	b	4001dfc4 <CyU3PUsbStart+0x18>
4001e010:	e3a00001 	mov	r0, #1
4001e014:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001e018:	e5c10008 	strb	r0, [r1, #8]
4001e01c:	e5950004 	ldr	r0, [r5, #4]
4001e020:	e5c10009 	strb	r0, [r1, #9]
4001e024:	e1a00005 	mov	r0, r5
4001e028:	ebfffaef 	bl	4001cbec <CyU3PUsbLoadBootloaderDescs>
4001e02c:	e1a04000 	mov	r4, r0
4001e030:	e3540000 	cmp	r4, #0
4001e034:	0a000001 	beq	4001e040 <CyU3PUsbStart+0x94>
4001e038:	e1a00004 	mov	r0, r4
4001e03c:	eaffffe0 	b	4001dfc4 <CyU3PUsbStart+0x18>
4001e040:	e3a00006 	mov	r0, #6
4001e044:	e59f1294 	ldr	r1, [pc, #660]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001e048:	e5c10008 	strb	r0, [r1, #8]
4001e04c:	e2810000 	add	r0, r1, #0
4001e050:	e5d00009 	ldrb	r0, [r0, #9]
4001e054:	e3500003 	cmp	r0, #3
4001e058:	1a000002 	bne	4001e068 <CyU3PUsbStart+0xbc>
4001e05c:	e3a00001 	mov	r0, #1
4001e060:	e59f1284 	ldr	r1, [pc, #644]	; 4001e2ec <CyU3PUsbStart+0x340>
4001e064:	e5810000 	str	r0, [r1]
4001e068:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e06c:	e59f127c 	ldr	r1, [pc, #636]	; 4001e2f0 <CyU3PUsbStart+0x344>
4001e070:	e1500001 	cmp	r0, r1
4001e074:	1a000015 	bne	4001e0d0 <CyU3PUsbStart+0x124>
4001e078:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e07c:	e59f1270 	ldr	r1, [pc, #624]	; 4001e2f4 <CyU3PUsbStart+0x348>
4001e080:	e1500001 	cmp	r0, r1
4001e084:	3a000007 	bcc	4001e0a8 <CyU3PUsbStart+0xfc>
4001e088:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e08c:	e3500000 	cmp	r0, #0
4001e090:	0a000001 	beq	4001e09c <CyU3PUsbStart+0xf0>
4001e094:	e3a00001 	mov	r0, #1
4001e098:	ea000000 	b	4001e0a0 <CyU3PUsbStart+0xf4>
4001e09c:	e3a00000 	mov	r0, #0
4001e0a0:	e59f1238 	ldr	r1, [pc, #568]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001e0a4:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e0a8:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e0ac:	e59f1244 	ldr	r1, [pc, #580]	; 4001e2f8 <CyU3PUsbStart+0x34c>
4001e0b0:	e1500001 	cmp	r0, r1
4001e0b4:	3a000008 	bcc	4001e0dc <CyU3PUsbStart+0x130>
4001e0b8:	e59f023c 	ldr	r0, [pc, #572]	; 4001e2fc <CyU3PUsbStart+0x350>
4001e0bc:	e5900000 	ldr	r0, [r0]
4001e0c0:	e3800002 	orr	r0, r0, #2
4001e0c4:	e59f1230 	ldr	r1, [pc, #560]	; 4001e2fc <CyU3PUsbStart+0x350>
4001e0c8:	e5810000 	str	r0, [r1]
4001e0cc:	ea000002 	b	4001e0dc <CyU3PUsbStart+0x130>
4001e0d0:	e3a00001 	mov	r0, #1
4001e0d4:	e59f1204 	ldr	r1, [pc, #516]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001e0d8:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e0dc:	e3e00000 	mvn	r0, #0
4001e0e0:	e59f1218 	ldr	r1, [pc, #536]	; 4001e300 <CyU3PUsbStart+0x354>
4001e0e4:	e5810004 	str	r0, [r1, #4]
4001e0e8:	e59f0214 	ldr	r0, [pc, #532]	; 4001e304 <CyU3PUsbStart+0x358>
4001e0ec:	e5810008 	str	r0, [r1, #8]
4001e0f0:	e3e00000 	mvn	r0, #0
4001e0f4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e0f8:	e59f0208 	ldr	r0, [pc, #520]	; 4001e308 <CyU3PUsbStart+0x35c>
4001e0fc:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e100:	e3a00000 	mov	r0, #0
4001e104:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e108:	e3e00000 	mvn	r0, #0
4001e10c:	e0811680 	add	r1, r1, r0, lsl #13
4001e110:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e114:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e30c <CyU3PUsbStart+0x360>
4001e118:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e11c:	e3e00000 	mvn	r0, #0
4001e120:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e124:	e3a00000 	mov	r0, #0
4001e128:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e12c:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e130:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e134:	e5810004 	str	r0, [r1, #4]
4001e138:	e3a00008 	mov	r0, #8
4001e13c:	eb000f42 	bl	40021e4c <CyU3PVicEnableInt>
4001e140:	e3a00009 	mov	r0, #9
4001e144:	eb000f40 	bl	40021e4c <CyU3PVicEnableInt>
4001e148:	ebfffa8c 	bl	4001cb80 <CyU3PUsbGetSpeed>
4001e14c:	e1a06000 	mov	r6, r0
4001e150:	eb0006b5 	bl	4001fc2c <CyU3PUsbEpPrepare>
4001e154:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e2fc <CyU3PUsbStart+0x350>
4001e158:	e5900000 	ldr	r0, [r0]
4001e15c:	e3100002 	tst	r0, #2
4001e160:	1a000003 	bne	4001e174 <CyU3PUsbStart+0x1c8>
4001e164:	e3e00000 	mvn	r0, #0
4001e168:	e5850000 	str	r0, [r5]
4001e16c:	e3a00000 	mov	r0, #0
4001e170:	e585000c 	str	r0, [r5, #12]
4001e174:	e3e00000 	mvn	r0, #0
4001e178:	e59f1190 	ldr	r1, [pc, #400]	; 4001e310 <CyU3PUsbStart+0x364>
4001e17c:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e180:	e3a00b01 	mov	r0, #1024	; 0x400
4001e184:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e188:	e59f1150 	ldr	r1, [pc, #336]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001e18c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e190:	e3a00015 	mov	r0, #21
4001e194:	eb000f2c 	bl	40021e4c <CyU3PVicEnableInt>
4001e198:	e3a000fe 	mov	r0, #254	; 0xfe
4001e19c:	eaffff88 	b	4001dfc4 <CyU3PUsbStart+0x18>
4001e1a0:	e1a00000 	nop			; (mov r0, r0)
4001e1a4:	e59f0168 	ldr	r0, [pc, #360]	; 4001e314 <CyU3PUsbStart+0x368>
4001e1a8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e1ac:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e1b0:	e59f115c 	ldr	r1, [pc, #348]	; 4001e314 <CyU3PUsbStart+0x368>
4001e1b4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e1b8:	e3a00002 	mov	r0, #2
4001e1bc:	ebffd49f 	bl	40013440 <CyU3PBusyWait>
4001e1c0:	e59f014c 	ldr	r0, [pc, #332]	; 4001e314 <CyU3PUsbStart+0x368>
4001e1c4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e1c8:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e1cc:	e59f1140 	ldr	r1, [pc, #320]	; 4001e314 <CyU3PUsbStart+0x368>
4001e1d0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e1d4:	e1a00001 	mov	r0, r1
4001e1d8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e1dc:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e1e0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e1e4:	e1a00001 	mov	r0, r1
4001e1e8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e1ec:	e3800008 	orr	r0, r0, #8
4001e1f0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e1f4:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e1f8:	e5900008 	ldr	r0, [r0, #8]
4001e1fc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e200:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e204:	e5810008 	str	r0, [r1, #8]
4001e208:	e3a00002 	mov	r0, #2
4001e20c:	ebffd48b 	bl	40013440 <CyU3PBusyWait>
4001e210:	ebfff645 	bl	4001bb2c <CyU3POtgIsDeviceMode>
4001e214:	e3500000 	cmp	r0, #0
4001e218:	0a000002 	beq	4001e228 <CyU3PUsbStart+0x27c>
4001e21c:	ebfffa5b 	bl	4001cb90 <CyU3PUsbHostIsStarted>
4001e220:	e3500000 	cmp	r0, #0
4001e224:	0a000001 	beq	4001e230 <CyU3PUsbStart+0x284>
4001e228:	e3a00047 	mov	r0, #71	; 0x47
4001e22c:	eaffff64 	b	4001dfc4 <CyU3PUsbStart+0x18>
4001e230:	e3a01002 	mov	r1, #2
4001e234:	e1a00001 	mov	r0, r1
4001e238:	ebfff820 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4001e23c:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e318 <CyU3PUsbStart+0x36c>
4001e240:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e31c <CyU3PUsbStart+0x370>
4001e244:	e5810000 	str	r0, [r1]
4001e248:	ebfff633 	bl	4001bb1c <CyU3POtgGetMode>
4001e24c:	e3500000 	cmp	r0, #0
4001e250:	1a000003 	bne	4001e264 <CyU3PUsbStart+0x2b8>
4001e254:	ebfffc09 	bl	4001d280 <CyU3PUsbPowerOn>
4001e258:	e3a00000 	mov	r0, #0
4001e25c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e314 <CyU3PUsbStart+0x368>
4001e260:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e264:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e320 <CyU3PUsbStart+0x374>
4001e268:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e314 <CyU3PUsbStart+0x368>
4001e26c:	e5810008 	str	r0, [r1, #8]
4001e270:	e00108c0 	and	r0, r1, r0, asr #17
4001e274:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e278:	e3800008 	orr	r0, r0, #8
4001e27c:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e280:	eb000662 	bl	4001fc10 <CyU3PUsbDescInit>
4001e284:	ebfff8e9 	bl	4001c630 <CyU3PUsbCreateDmaChannels>
4001e288:	e1a04000 	mov	r4, r0
4001e28c:	e3540000 	cmp	r4, #0
4001e290:	0a000001 	beq	4001e29c <CyU3PUsbStart+0x2f0>
4001e294:	e1a00004 	mov	r0, r4
4001e298:	eaffff49 	b	4001dfc4 <CyU3PUsbStart+0x18>
4001e29c:	e3a00001 	mov	r0, #1
4001e2a0:	e59f1038 	ldr	r1, [pc, #56]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001e2a4:	e5c10008 	strb	r0, [r1, #8]
4001e2a8:	e2810000 	add	r0, r1, #0
4001e2ac:	e5d00007 	ldrb	r0, [r0, #7]
4001e2b0:	e3500001 	cmp	r0, #1
4001e2b4:	1a000002 	bne	4001e2c4 <CyU3PUsbStart+0x318>
4001e2b8:	e3a00003 	mov	r0, #3
4001e2bc:	e5c10008 	strb	r0, [r1, #8]
4001e2c0:	ea000002 	b	4001e2d0 <CyU3PUsbStart+0x324>
4001e2c4:	e3a00002 	mov	r0, #2
4001e2c8:	e59f1010 	ldr	r1, [pc, #16]	; 4001e2e0 <CyU3PUsbStart+0x334>
4001e2cc:	e5c10008 	strb	r0, [r1, #8]
4001e2d0:	ebfff81b 	bl	4001c344 <CyU3PUibInit>
4001e2d4:	e1a00004 	mov	r0, r4
4001e2d8:	eaffff39 	b	4001dfc4 <CyU3PUsbStart+0x18>
4001e2dc:	40030d64 	.word	0x40030d64
4001e2e0:	40031d40 	.word	0x40031d40
4001e2e4:	40030c6c 	.word	0x40030c6c
4001e2e8:	40002000 	.word	0x40002000
4001e2ec:	40030d74 	.word	0x40030d74
4001e2f0:	42335846 	.word	0x42335846
4001e2f4:	00010101 	.word	0x00010101
4001e2f8:	00010200 	.word	0x00010200
4001e2fc:	40030d48 	.word	0x40030d48
4001e300:	e0033000 	.word	0xe0033000
4001e304:	00038081 	.word	0x00038081
4001e308:	00004a3d 	.word	0x00004a3d
4001e30c:	0000095c 	.word	0x0000095c
4001e310:	e0051000 	.word	0xe0051000
4001e314:	e0031000 	.word	0xe0031000
4001e318:	de001011 	.word	0xde001011
4001e31c:	e0050000 	.word	0xe0050000
4001e320:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e324 <GetUsbLinkActive>:
4001e324:	e92d4010 	push	{r4, lr}
4001e328:	e59f0064 	ldr	r0, [pc, #100]	; 4001e394 <GetUsbLinkActive+0x70>
4001e32c:	e5d00009 	ldrb	r0, [r0, #9]
4001e330:	e3500003 	cmp	r0, #3
4001e334:	1a000015 	bne	4001e390 <GetUsbLinkActive+0x6c>
4001e338:	e59f0058 	ldr	r0, [pc, #88]	; 4001e398 <GetUsbLinkActive+0x74>
4001e33c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e340:	e3c00004 	bic	r0, r0, #4
4001e344:	e59f104c 	ldr	r1, [pc, #76]	; 4001e398 <GetUsbLinkActive+0x74>
4001e348:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e34c:	e1a00001 	mov	r0, r1
4001e350:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e354:	e3c00004 	bic	r0, r0, #4
4001e358:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e35c:	e59f0030 	ldr	r0, [pc, #48]	; 4001e394 <GetUsbLinkActive+0x70>
4001e360:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e364:	e3500000 	cmp	r0, #0
4001e368:	1a000008 	bne	4001e390 <GetUsbLinkActive+0x6c>
4001e36c:	e1a00001 	mov	r0, r1
4001e370:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e374:	e200403f 	and	r4, r0, #63	; 0x3f
4001e378:	e3540011 	cmp	r4, #17
4001e37c:	0a000001 	beq	4001e388 <GetUsbLinkActive+0x64>
4001e380:	e3540012 	cmp	r4, #18
4001e384:	1a000001 	bne	4001e390 <GetUsbLinkActive+0x6c>
4001e388:	e3a00000 	mov	r0, #0
4001e38c:	ebfffdcd 	bl	4001dac8 <CyU3PUsbSetLinkPowerState>
4001e390:	e8bd8010 	pop	{r4, pc}
4001e394:	40031d40 	.word	0x40031d40
4001e398:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e39c <CyU3PHsGrantIntrHandler>:
4001e39c:	e92d4010 	push	{r4, lr}
4001e3a0:	e59f005c 	ldr	r0, [pc, #92]	; 4001e404 <CyU3PHsGrantIntrHandler+0x68>
4001e3a4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e3a8:	e3100080 	tst	r0, #128	; 0x80
4001e3ac:	0a000013 	beq	4001e400 <CyU3PHsGrantIntrHandler+0x64>
4001e3b0:	e59f0050 	ldr	r0, [pc, #80]	; 4001e408 <CyU3PHsGrantIntrHandler+0x6c>
4001e3b4:	e5900014 	ldr	r0, [r0, #20]
4001e3b8:	e59f1048 	ldr	r1, [pc, #72]	; 4001e408 <CyU3PHsGrantIntrHandler+0x6c>
4001e3bc:	e581000c 	str	r0, [r1, #12]
4001e3c0:	e2810000 	add	r0, r1, #0
4001e3c4:	e5900018 	ldr	r0, [r0, #24]
4001e3c8:	e5810010 	str	r0, [r1, #16]
4001e3cc:	e59f0038 	ldr	r0, [pc, #56]	; 4001e40c <CyU3PHsGrantIntrHandler+0x70>
4001e3d0:	e5900000 	ldr	r0, [r0]
4001e3d4:	e3500000 	cmp	r0, #0
4001e3d8:	0a000004 	beq	4001e3f0 <CyU3PHsGrantIntrHandler+0x54>
4001e3dc:	e3a01001 	mov	r1, #1
4001e3e0:	e3a00006 	mov	r0, #6
4001e3e4:	e59f2020 	ldr	r2, [pc, #32]	; 4001e40c <CyU3PHsGrantIntrHandler+0x70>
4001e3e8:	e5922000 	ldr	r2, [r2]
4001e3ec:	e12fff32 	blx	r2
4001e3f0:	e3a00002 	mov	r0, #2
4001e3f4:	e59f1014 	ldr	r1, [pc, #20]	; 4001e410 <CyU3PHsGrantIntrHandler+0x74>
4001e3f8:	e5c10009 	strb	r0, [r1, #9]
4001e3fc:	eb00060a 	bl	4001fc2c <CyU3PUsbEpPrepare>
4001e400:	e8bd8010 	pop	{r4, pc}
4001e404:	e0031000 	.word	0xe0031000
4001e408:	40031f98 	.word	0x40031f98
4001e40c:	40030da0 	.word	0x40030da0
4001e410:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e414 <CyU3PUibApplicationDefine>:
4001e414:	e92d4030 	push	{r4, r5, lr}
4001e418:	e24dd01c 	sub	sp, sp, #28
4001e41c:	eb000178 	bl	4001ea04 <CyU3PUibInitVars>
4001e420:	e3a00b01 	mov	r0, #1024	; 0x400
4001e424:	ebff9492 	bl	40003674 <CyU3PMemAlloc>
4001e428:	e1a05000 	mov	r5, r0
4001e42c:	e3550000 	cmp	r5, #0
4001e430:	0a00004f 	beq	4001e574 <CyU3PUibApplicationDefine+0x160>
4001e434:	e3a030a8 	mov	r3, #168	; 0xa8
4001e438:	e3a02000 	mov	r2, #0
4001e43c:	e3a00004 	mov	r0, #4
4001e440:	e58d000c 	str	r0, [sp, #12]
4001e444:	e58d2010 	str	r2, [sp, #16]
4001e448:	e58d2014 	str	r2, [sp, #20]
4001e44c:	e58d3018 	str	r3, [sp, #24]
4001e450:	e3a02b01 	mov	r2, #1024	; 0x400
4001e454:	e3a03000 	mov	r3, #0
4001e458:	e58d2004 	str	r2, [sp, #4]
4001e45c:	e59f2118 	ldr	r2, [pc, #280]	; 4001e57c <CyU3PUibApplicationDefine+0x168>
4001e460:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e464:	e58d0008 	str	r0, [sp, #8]
4001e468:	e59f0120 	ldr	r0, [pc, #288]	; 4001e590 <CyU3PUibApplicationDefine+0x17c>
4001e46c:	e58d5000 	str	r5, [sp]
4001e470:	ebffb012 	bl	4000a4c0 <_txe_thread_create>
4001e474:	e1a04000 	mov	r4, r0
4001e478:	e3540000 	cmp	r4, #0
4001e47c:	1a00003c 	bne	4001e574 <CyU3PUibApplicationDefine+0x160>
4001e480:	e3a00080 	mov	r0, #128	; 0x80
4001e484:	ebff947a 	bl	40003674 <CyU3PMemAlloc>
4001e488:	e1a05000 	mov	r5, r0
4001e48c:	e3550000 	cmp	r5, #0
4001e490:	0a000009 	beq	4001e4bc <CyU3PUibApplicationDefine+0xa8>
4001e494:	e3a0303c 	mov	r3, #60	; 0x3c
4001e498:	e3a02080 	mov	r2, #128	; 0x80
4001e49c:	e1cd20f0 	strd	r2, [sp]
4001e4a0:	e1a03005 	mov	r3, r5
4001e4a4:	e3a02004 	mov	r2, #4
4001e4a8:	e3a01000 	mov	r1, #0
4001e4ac:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e594 <CyU3PUibApplicationDefine+0x180>
4001e4b0:	ebffaf1c 	bl	4000a128 <_txe_queue_create>
4001e4b4:	e1a04000 	mov	r4, r0
4001e4b8:	ea000000 	b	4001e4c0 <CyU3PUibApplicationDefine+0xac>
4001e4bc:	e3a04010 	mov	r4, #16
4001e4c0:	e3540000 	cmp	r4, #0
4001e4c4:	1a000004 	bne	4001e4dc <CyU3PUibApplicationDefine+0xc8>
4001e4c8:	e3a02028 	mov	r2, #40	; 0x28
4001e4cc:	e3a01000 	mov	r1, #0
4001e4d0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e598 <CyU3PUibApplicationDefine+0x184>
4001e4d4:	ebffad7e 	bl	40009ad4 <_txe_event_flags_create>
4001e4d8:	e1a04000 	mov	r4, r0
4001e4dc:	e3540000 	cmp	r4, #0
4001e4e0:	1a000005 	bne	4001e4fc <CyU3PUibApplicationDefine+0xe8>
4001e4e4:	e3a03038 	mov	r3, #56	; 0x38
4001e4e8:	e3a02000 	mov	r2, #0
4001e4ec:	e1a01002 	mov	r1, r2
4001e4f0:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e59c <CyU3PUibApplicationDefine+0x188>
4001e4f4:	ebffae30 	bl	40009dbc <_txe_mutex_create>
4001e4f8:	e1a04000 	mov	r4, r0
4001e4fc:	e3540000 	cmp	r4, #0
4001e500:	1a00000a 	bne	4001e530 <CyU3PUibApplicationDefine+0x11c>
4001e504:	e3a0302c 	mov	r3, #44	; 0x2c
4001e508:	e3a02000 	mov	r2, #0
4001e50c:	e3a00064 	mov	r0, #100	; 0x64
4001e510:	e88d0005 	stm	sp, {r0, r2}
4001e514:	e1cd20f8 	strd	r2, [sp, #8]
4001e518:	e1a03002 	mov	r3, r2
4001e51c:	e59f207c 	ldr	r2, [pc, #124]	; 4001e5a0 <CyU3PUibApplicationDefine+0x18c>
4001e520:	e3a01000 	mov	r1, #0
4001e524:	e59f0078 	ldr	r0, [pc, #120]	; 4001e5a4 <CyU3PUibApplicationDefine+0x190>
4001e528:	ebffb111 	bl	4000a974 <_txe_timer_create>
4001e52c:	e1a04000 	mov	r4, r0
4001e530:	e3540000 	cmp	r4, #0
4001e534:	1a00000a 	bne	4001e564 <CyU3PUibApplicationDefine+0x150>
4001e538:	e3a0302c 	mov	r3, #44	; 0x2c
4001e53c:	e3a02001 	mov	r2, #1
4001e540:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e544:	e58d1000 	str	r1, [sp]
4001e548:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e54c:	e3a03000 	mov	r3, #0
4001e550:	e59f2050 	ldr	r2, [pc, #80]	; 4001e5a8 <CyU3PUibApplicationDefine+0x194>
4001e554:	e1a01003 	mov	r1, r3
4001e558:	e59f004c 	ldr	r0, [pc, #76]	; 4001e5ac <CyU3PUibApplicationDefine+0x198>
4001e55c:	ebffb104 	bl	4000a974 <_txe_timer_create>
4001e560:	e1a04000 	mov	r4, r0
4001e564:	e3540000 	cmp	r4, #0
4001e568:	1a000001 	bne	4001e574 <CyU3PUibApplicationDefine+0x160>
4001e56c:	e59f001c 	ldr	r0, [pc, #28]	; 4001e590 <CyU3PUibApplicationDefine+0x17c>
4001e570:	ebffb0bd 	bl	4000a86c <_txe_thread_resume>
4001e574:	e28dd01c 	add	sp, sp, #28
4001e578:	e8bd8030 	pop	{r4, r5, pc}
4001e57c:	4001f780 	.word	0x4001f780
4001e580:	555f3430 	.word	0x555f3430
4001e584:	545f4249 	.word	0x545f4249
4001e588:	41455248 	.word	0x41455248
4001e58c:	00000044 	.word	0x00000044
4001e590:	40031dd4 	.word	0x40031dd4
4001e594:	40031e7c 	.word	0x40031e7c
4001e598:	40031eb8 	.word	0x40031eb8
4001e59c:	40031ee0 	.word	0x40031ee0
4001e5a0:	4001f710 	.word	0x4001f710
4001e5a4:	400326a0 	.word	0x400326a0
4001e5a8:	4001eabc 	.word	0x4001eabc
4001e5ac:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e5b0 <CyU3PUibDevCtrlEvtHandler>:
4001e5b0:	e92d4010 	push	{r4, lr}
4001e5b4:	e59f01c8 	ldr	r0, [pc, #456]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5b8:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e5bc:	e3140c01 	tst	r4, #256	; 0x100
4001e5c0:	0a000008 	beq	4001e5e8 <CyU3PUibDevCtrlEvtHandler+0x38>
4001e5c4:	e3a00c01 	mov	r0, #256	; 0x100
4001e5c8:	e59f11b4 	ldr	r1, [pc, #436]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e5d0:	eb000995 	bl	40020c2c <CyU3PUsbResumeHandler>
4001e5d4:	e59f01a8 	ldr	r0, [pc, #424]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e5dc:	e3800c01 	orr	r0, r0, #256	; 0x100
4001e5e0:	e59f119c 	ldr	r1, [pc, #412]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e5e8:	e3140004 	tst	r4, #4
4001e5ec:	0a000008 	beq	4001e614 <CyU3PUibDevCtrlEvtHandler+0x64>
4001e5f0:	e3a00004 	mov	r0, #4
4001e5f4:	e59f1188 	ldr	r1, [pc, #392]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5f8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e5fc:	eb000d6c 	bl	40021bb4 <CyU3PUsbSuspendHandler>
4001e600:	e59f017c 	ldr	r0, [pc, #380]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e604:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e608:	e3800004 	orr	r0, r0, #4
4001e60c:	e59f1170 	ldr	r1, [pc, #368]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e610:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e614:	e3140008 	tst	r4, #8
4001e618:	0a000008 	beq	4001e640 <CyU3PUibDevCtrlEvtHandler+0x90>
4001e61c:	e3a00008 	mov	r0, #8
4001e620:	e59f115c 	ldr	r1, [pc, #348]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e624:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e628:	eb00092e 	bl	40020ae8 <CyU3PUsbResetHandler>
4001e62c:	e59f0150 	ldr	r0, [pc, #336]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e630:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e634:	e3800008 	orr	r0, r0, #8
4001e638:	e59f1144 	ldr	r1, [pc, #324]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e63c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e640:	e3140010 	tst	r4, #16
4001e644:	0a000008 	beq	4001e66c <CyU3PUibDevCtrlEvtHandler+0xbc>
4001e648:	e3a00010 	mov	r0, #16
4001e64c:	e59f1130 	ldr	r1, [pc, #304]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e650:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e654:	ebffff50 	bl	4001e39c <CyU3PHsGrantIntrHandler>
4001e658:	e59f0124 	ldr	r0, [pc, #292]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e65c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e660:	e3800010 	orr	r0, r0, #16
4001e664:	e59f1118 	ldr	r1, [pc, #280]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e668:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e66c:	e3140040 	tst	r4, #64	; 0x40
4001e670:	0a000018 	beq	4001e6d8 <CyU3PUibDevCtrlEvtHandler+0x128>
4001e674:	e59f010c 	ldr	r0, [pc, #268]	; 4001e788 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e678:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001e67c:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001e680:	e59f1100 	ldr	r1, [pc, #256]	; 4001e788 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e684:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e688:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001e68c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e690:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e694:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001e698:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e69c:	e1a00001 	mov	r0, r1
4001e6a0:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e6a4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e6a8:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e6ac:	e3a00040 	mov	r0, #64	; 0x40
4001e6b0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6b4:	e3a00001 	mov	r0, #1
4001e6b8:	e59f10cc 	ldr	r1, [pc, #204]	; 4001e78c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e6bc:	e5810014 	str	r0, [r1, #20]
4001e6c0:	eb000b38 	bl	400213a8 <CyU3PUsbSetupCommand>
4001e6c4:	e59f00b8 	ldr	r0, [pc, #184]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6c8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6cc:	e3800040 	orr	r0, r0, #64	; 0x40
4001e6d0:	e59f10ac 	ldr	r1, [pc, #172]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6d4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6d8:	e3140080 	tst	r4, #128	; 0x80
4001e6dc:	0a000006 	beq	4001e6fc <CyU3PUibDevCtrlEvtHandler+0x14c>
4001e6e0:	e3a00080 	mov	r0, #128	; 0x80
4001e6e4:	e59f1098 	ldr	r1, [pc, #152]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6e8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6ec:	e1c10000 	bic	r0, r1, r0
4001e6f0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6f4:	e3800080 	orr	r0, r0, #128	; 0x80
4001e6f8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6fc:	e3140b02 	tst	r4, #2048	; 0x800
4001e700:	0a00001e 	beq	4001e780 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001e704:	e59f0080 	ldr	r0, [pc, #128]	; 4001e78c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e708:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e70c:	e3500000 	cmp	r0, #0
4001e710:	1a000002 	bne	4001e720 <CyU3PUibDevCtrlEvtHandler+0x170>
4001e714:	e3a00501 	mov	r0, #4194304	; 0x400000
4001e718:	e59f1068 	ldr	r1, [pc, #104]	; 4001e788 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e71c:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e720:	e3a00b02 	mov	r0, #2048	; 0x800
4001e724:	e59f1058 	ldr	r1, [pc, #88]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e728:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e72c:	e59f0058 	ldr	r0, [pc, #88]	; 4001e78c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e730:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001e734:	e3500000 	cmp	r0, #0
4001e738:	0a00000b 	beq	4001e76c <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001e73c:	e59f004c 	ldr	r0, [pc, #76]	; 4001e790 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e740:	e5900000 	ldr	r0, [r0]
4001e744:	e3500000 	cmp	r0, #0
4001e748:	0a000004 	beq	4001e760 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001e74c:	e3a01000 	mov	r1, #0
4001e750:	e3a0000a 	mov	r0, #10
4001e754:	e59f2034 	ldr	r2, [pc, #52]	; 4001e790 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e758:	e5922000 	ldr	r2, [r2]
4001e75c:	e12fff32 	blx	r2
4001e760:	e3a00000 	mov	r0, #0
4001e764:	e59f1020 	ldr	r1, [pc, #32]	; 4001e78c <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e768:	e5810040 	str	r0, [r1, #64]	; 0x40
4001e76c:	e59f0010 	ldr	r0, [pc, #16]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e770:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e774:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001e778:	e59f1004 	ldr	r1, [pc, #4]	; 4001e784 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e77c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e780:	e8bd8010 	pop	{r4, pc}
4001e784:	e0031000 	.word	0xe0031000
4001e788:	e0032000 	.word	0xe0032000
4001e78c:	40031d40 	.word	0x40031d40
4001e790:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibEPEvtHandler:

4001e794 <CyU3PUibEPEvtHandler>:
4001e794:	e92d4070 	push	{r4, r5, r6, lr}
4001e798:	e59f0244 	ldr	r0, [pc, #580]	; 4001e9e4 <CyU3PUibEPEvtHandler+0x250>
4001e79c:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001e7a0:	e59f123c 	ldr	r1, [pc, #572]	; 4001e9e4 <CyU3PUibEPEvtHandler+0x250>
4001e7a4:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001e7a8:	e0004001 	and	r4, r0, r1
4001e7ac:	e59f0234 	ldr	r0, [pc, #564]	; 4001e9e8 <CyU3PUibEPEvtHandler+0x254>
4001e7b0:	e5900000 	ldr	r0, [r0]
4001e7b4:	e0044000 	and	r4, r4, r0
4001e7b8:	e3a05001 	mov	r5, #1
4001e7bc:	ea000080 	b	4001e9c4 <CyU3PUibEPEvtHandler+0x230>
4001e7c0:	e3a00001 	mov	r0, #1
4001e7c4:	e1140510 	tst	r4, r0, lsl r5
4001e7c8:	0a00003b 	beq	4001e8bc <CyU3PUibEPEvtHandler+0x128>
4001e7cc:	e59f0218 	ldr	r0, [pc, #536]	; 4001e9ec <CyU3PUibEPEvtHandler+0x258>
4001e7d0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e7d4:	e59f0214 	ldr	r0, [pc, #532]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e7d8:	e5900000 	ldr	r0, [r0]
4001e7dc:	e3500000 	cmp	r0, #0
4001e7e0:	0a000033 	beq	4001e8b4 <CyU3PUibEPEvtHandler+0x120>
4001e7e4:	e59f0208 	ldr	r0, [pc, #520]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e7e8:	e5900000 	ldr	r0, [r0]
4001e7ec:	e3100001 	tst	r0, #1
4001e7f0:	0a000008 	beq	4001e818 <CyU3PUibEPEvtHandler+0x84>
4001e7f4:	e3160702 	tst	r6, #524288	; 0x80000
4001e7f8:	0a000006 	beq	4001e818 <CyU3PUibEPEvtHandler+0x84>
4001e7fc:	e3852080 	orr	r2, r5, #128	; 0x80
4001e800:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e804:	e5d01009 	ldrb	r1, [r0, #9]
4001e808:	e3a00001 	mov	r0, #1
4001e80c:	e59f31dc 	ldr	r3, [pc, #476]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e810:	e5933000 	ldr	r3, [r3]
4001e814:	e12fff33 	blx	r3
4001e818:	e59f01d4 	ldr	r0, [pc, #468]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e81c:	e5900000 	ldr	r0, [r0]
4001e820:	e3100002 	tst	r0, #2
4001e824:	0a000008 	beq	4001e84c <CyU3PUibEPEvtHandler+0xb8>
4001e828:	e3160602 	tst	r6, #2097152	; 0x200000
4001e82c:	0a000006 	beq	4001e84c <CyU3PUibEPEvtHandler+0xb8>
4001e830:	e3852080 	orr	r2, r5, #128	; 0x80
4001e834:	e59f01bc 	ldr	r0, [pc, #444]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e838:	e5d01009 	ldrb	r1, [r0, #9]
4001e83c:	e3a00002 	mov	r0, #2
4001e840:	e59f31a8 	ldr	r3, [pc, #424]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e844:	e5933000 	ldr	r3, [r3]
4001e848:	e12fff33 	blx	r3
4001e84c:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e850:	e5900000 	ldr	r0, [r0]
4001e854:	e3100004 	tst	r0, #4
4001e858:	0a000008 	beq	4001e880 <CyU3PUibEPEvtHandler+0xec>
4001e85c:	e3160501 	tst	r6, #4194304	; 0x400000
4001e860:	0a000006 	beq	4001e880 <CyU3PUibEPEvtHandler+0xec>
4001e864:	e3852080 	orr	r2, r5, #128	; 0x80
4001e868:	e59f0188 	ldr	r0, [pc, #392]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e86c:	e5d01009 	ldrb	r1, [r0, #9]
4001e870:	e3a00004 	mov	r0, #4
4001e874:	e59f3174 	ldr	r3, [pc, #372]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e878:	e5933000 	ldr	r3, [r3]
4001e87c:	e12fff33 	blx	r3
4001e880:	e59f016c 	ldr	r0, [pc, #364]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e884:	e5900000 	ldr	r0, [r0]
4001e888:	e3100008 	tst	r0, #8
4001e88c:	0a000008 	beq	4001e8b4 <CyU3PUibEPEvtHandler+0x120>
4001e890:	e3160502 	tst	r6, #8388608	; 0x800000
4001e894:	0a000006 	beq	4001e8b4 <CyU3PUibEPEvtHandler+0x120>
4001e898:	e3852080 	orr	r2, r5, #128	; 0x80
4001e89c:	e59f0154 	ldr	r0, [pc, #340]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e8a0:	e5d01009 	ldrb	r1, [r0, #9]
4001e8a4:	e3a00008 	mov	r0, #8
4001e8a8:	e59f3140 	ldr	r3, [pc, #320]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e8ac:	e5933000 	ldr	r3, [r3]
4001e8b0:	e12fff33 	blx	r3
4001e8b4:	e59f0130 	ldr	r0, [pc, #304]	; 4001e9ec <CyU3PUibEPEvtHandler+0x258>
4001e8b8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e8bc:	e2850010 	add	r0, r5, #16
4001e8c0:	e3a01001 	mov	r1, #1
4001e8c4:	e1140011 	tst	r4, r1, lsl r0
4001e8c8:	0a00003b 	beq	4001e9bc <CyU3PUibEPEvtHandler+0x228>
4001e8cc:	e59f0128 	ldr	r0, [pc, #296]	; 4001e9fc <CyU3PUibEPEvtHandler+0x268>
4001e8d0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e8d4:	e59f0114 	ldr	r0, [pc, #276]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e8d8:	e5900000 	ldr	r0, [r0]
4001e8dc:	e3500000 	cmp	r0, #0
4001e8e0:	0a000033 	beq	4001e9b4 <CyU3PUibEPEvtHandler+0x220>
4001e8e4:	e59f0108 	ldr	r0, [pc, #264]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e8e8:	e5900000 	ldr	r0, [r0]
4001e8ec:	e3100001 	tst	r0, #1
4001e8f0:	0a000008 	beq	4001e918 <CyU3PUibEPEvtHandler+0x184>
4001e8f4:	e3160702 	tst	r6, #524288	; 0x80000
4001e8f8:	0a000006 	beq	4001e918 <CyU3PUibEPEvtHandler+0x184>
4001e8fc:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e900:	e5d01009 	ldrb	r1, [r0, #9]
4001e904:	e1a02005 	mov	r2, r5
4001e908:	e3a00001 	mov	r0, #1
4001e90c:	e59f30dc 	ldr	r3, [pc, #220]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e910:	e5933000 	ldr	r3, [r3]
4001e914:	e12fff33 	blx	r3
4001e918:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e91c:	e5900000 	ldr	r0, [r0]
4001e920:	e3100002 	tst	r0, #2
4001e924:	0a000008 	beq	4001e94c <CyU3PUibEPEvtHandler+0x1b8>
4001e928:	e3160602 	tst	r6, #2097152	; 0x200000
4001e92c:	0a000006 	beq	4001e94c <CyU3PUibEPEvtHandler+0x1b8>
4001e930:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e934:	e5d01009 	ldrb	r1, [r0, #9]
4001e938:	e1a02005 	mov	r2, r5
4001e93c:	e3a00002 	mov	r0, #2
4001e940:	e59f30a8 	ldr	r3, [pc, #168]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e944:	e5933000 	ldr	r3, [r3]
4001e948:	e12fff33 	blx	r3
4001e94c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e950:	e5900000 	ldr	r0, [r0]
4001e954:	e3100004 	tst	r0, #4
4001e958:	0a000008 	beq	4001e980 <CyU3PUibEPEvtHandler+0x1ec>
4001e95c:	e3160501 	tst	r6, #4194304	; 0x400000
4001e960:	0a000006 	beq	4001e980 <CyU3PUibEPEvtHandler+0x1ec>
4001e964:	e59f008c 	ldr	r0, [pc, #140]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e968:	e5d01009 	ldrb	r1, [r0, #9]
4001e96c:	e1a02005 	mov	r2, r5
4001e970:	e3a00004 	mov	r0, #4
4001e974:	e59f3074 	ldr	r3, [pc, #116]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e978:	e5933000 	ldr	r3, [r3]
4001e97c:	e12fff33 	blx	r3
4001e980:	e59f006c 	ldr	r0, [pc, #108]	; 4001e9f4 <CyU3PUibEPEvtHandler+0x260>
4001e984:	e5900000 	ldr	r0, [r0]
4001e988:	e3100008 	tst	r0, #8
4001e98c:	0a000008 	beq	4001e9b4 <CyU3PUibEPEvtHandler+0x220>
4001e990:	e3160502 	tst	r6, #8388608	; 0x800000
4001e994:	0a000006 	beq	4001e9b4 <CyU3PUibEPEvtHandler+0x220>
4001e998:	e59f0058 	ldr	r0, [pc, #88]	; 4001e9f8 <CyU3PUibEPEvtHandler+0x264>
4001e99c:	e5d01009 	ldrb	r1, [r0, #9]
4001e9a0:	e1a02005 	mov	r2, r5
4001e9a4:	e3a00008 	mov	r0, #8
4001e9a8:	e59f3040 	ldr	r3, [pc, #64]	; 4001e9f0 <CyU3PUibEPEvtHandler+0x25c>
4001e9ac:	e5933000 	ldr	r3, [r3]
4001e9b0:	e12fff33 	blx	r3
4001e9b4:	e59f0040 	ldr	r0, [pc, #64]	; 4001e9fc <CyU3PUibEPEvtHandler+0x268>
4001e9b8:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e9bc:	e2850001 	add	r0, r5, #1
4001e9c0:	e20050ff 	and	r5, r0, #255	; 0xff
4001e9c4:	e3550010 	cmp	r5, #16
4001e9c8:	baffff7c 	blt	4001e7c0 <CyU3PUibEPEvtHandler+0x2c>
4001e9cc:	e59f002c 	ldr	r0, [pc, #44]	; 4001ea00 <CyU3PUibEPEvtHandler+0x26c>
4001e9d0:	e5900004 	ldr	r0, [r0, #4]
4001e9d4:	e3800010 	orr	r0, r0, #16
4001e9d8:	e59f1020 	ldr	r1, [pc, #32]	; 4001ea00 <CyU3PUibEPEvtHandler+0x26c>
4001e9dc:	e5810004 	str	r0, [r1, #4]
4001e9e0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e9e4:	e0031000 	.word	0xe0031000
4001e9e8:	40030d84 	.word	0x40030d84
4001e9ec:	e0031418 	.word	0xe0031418
4001e9f0:	40030d7c 	.word	0x40030d7c
4001e9f4:	40030d80 	.word	0x40030d80
4001e9f8:	40031d40 	.word	0x40031d40
4001e9fc:	e0031498 	.word	0xe0031498
4001ea00:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001ea04 <CyU3PUibInitVars>:
4001ea04:	e92d4010 	push	{r4, lr}
4001ea08:	e3a0207c 	mov	r2, #124	; 0x7c
4001ea0c:	e3a01000 	mov	r1, #0
4001ea10:	e59f0070 	ldr	r0, [pc, #112]	; 4001ea88 <CyU3PUibInitVars+0x84>
4001ea14:	ebff9327 	bl	400036b8 <CyU3PMemSet>
4001ea18:	e3a02074 	mov	r2, #116	; 0x74
4001ea1c:	e3a01000 	mov	r1, #0
4001ea20:	e59f0064 	ldr	r0, [pc, #100]	; 4001ea8c <CyU3PUibInitVars+0x88>
4001ea24:	ebff9323 	bl	400036b8 <CyU3PMemSet>
4001ea28:	e3a00000 	mov	r0, #0
4001ea2c:	e59f105c 	ldr	r1, [pc, #92]	; 4001ea90 <CyU3PUibInitVars+0x8c>
4001ea30:	e5810000 	str	r0, [r1]
4001ea34:	e59f1058 	ldr	r1, [pc, #88]	; 4001ea94 <CyU3PUibInitVars+0x90>
4001ea38:	e5810000 	str	r0, [r1]
4001ea3c:	e59f1054 	ldr	r1, [pc, #84]	; 4001ea98 <CyU3PUibInitVars+0x94>
4001ea40:	e5810000 	str	r0, [r1]
4001ea44:	e59f1050 	ldr	r1, [pc, #80]	; 4001ea9c <CyU3PUibInitVars+0x98>
4001ea48:	e5810000 	str	r0, [r1]
4001ea4c:	e59f104c 	ldr	r1, [pc, #76]	; 4001eaa0 <CyU3PUibInitVars+0x9c>
4001ea50:	e5810000 	str	r0, [r1]
4001ea54:	e59f1048 	ldr	r1, [pc, #72]	; 4001eaa4 <CyU3PUibInitVars+0xa0>
4001ea58:	e5810000 	str	r0, [r1]
4001ea5c:	e59f1044 	ldr	r1, [pc, #68]	; 4001eaa8 <CyU3PUibInitVars+0xa4>
4001ea60:	e5810000 	str	r0, [r1]
4001ea64:	e59f1040 	ldr	r1, [pc, #64]	; 4001eaac <CyU3PUibInitVars+0xa8>
4001ea68:	e5810000 	str	r0, [r1]
4001ea6c:	e59f103c 	ldr	r1, [pc, #60]	; 4001eab0 <CyU3PUibInitVars+0xac>
4001ea70:	e5810000 	str	r0, [r1]
4001ea74:	e59f1038 	ldr	r1, [pc, #56]	; 4001eab4 <CyU3PUibInitVars+0xb0>
4001ea78:	e5810000 	str	r0, [r1]
4001ea7c:	e59f1034 	ldr	r1, [pc, #52]	; 4001eab8 <CyU3PUibInitVars+0xb4>
4001ea80:	e5810000 	str	r0, [r1]
4001ea84:	e8bd8010 	pop	{r4, pc}
4001ea88:	40031d40 	.word	0x40031d40
4001ea8c:	40031f98 	.word	0x40031f98
4001ea90:	40030d64 	.word	0x40030d64
4001ea94:	40030d68 	.word	0x40030d68
4001ea98:	40030d6c 	.word	0x40030d6c
4001ea9c:	40030db8 	.word	0x40030db8
4001eaa0:	40030da0 	.word	0x40030da0
4001eaa4:	40030da4 	.word	0x40030da4
4001eaa8:	40030da8 	.word	0x40030da8
4001eaac:	40030d7c 	.word	0x40030d7c
4001eab0:	40030d80 	.word	0x40030d80
4001eab4:	40030d84 	.word	0x40030d84
4001eab8:	40030d44 	.word	0x40030d44

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001eabc <CyU3PUibLnkErrClrTimerCb>:
4001eabc:	e92d4010 	push	{r4, lr}
4001eac0:	e1a04000 	mov	r4, r0
4001eac4:	ebfff82d 	bl	4001cb80 <CyU3PUsbGetSpeed>
4001eac8:	e3500003 	cmp	r0, #3
4001eacc:	1a000003 	bne	4001eae0 <CyU3PUibLnkErrClrTimerCb+0x24>
4001ead0:	e59f000c 	ldr	r0, [pc, #12]	; 4001eae4 <CyU3PUibLnkErrClrTimerCb+0x28>
4001ead4:	e5900014 	ldr	r0, [r0, #20]
4001ead8:	e59f1008 	ldr	r1, [pc, #8]	; 4001eae8 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001eadc:	e5810000 	str	r0, [r1]
4001eae0:	e8bd8010 	pop	{r4, pc}
4001eae4:	e0033000 	.word	0xe0033000
4001eae8:	40030d88 	.word	0x40030d88

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001eaec <CyU3PUibLnkIntrEvtHandler>:
4001eaec:	e92d4010 	push	{r4, lr}
4001eaf0:	e59f008c 	ldr	r0, [pc, #140]	; 4001eb84 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eaf4:	e5904004 	ldr	r4, [r0, #4]
4001eaf8:	e3140902 	tst	r4, #32768	; 0x8000
4001eafc:	0a00000b 	beq	4001eb30 <CyU3PUibLnkIntrEvtHandler+0x44>
4001eb00:	e59f0080 	ldr	r0, [pc, #128]	; 4001eb88 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001eb04:	e5900000 	ldr	r0, [r0]
4001eb08:	e59f1074 	ldr	r1, [pc, #116]	; 4001eb84 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb0c:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001eb10:	eb000859 	bl	40020c7c <CyU3PUsbSSConnecthandler>
4001eb14:	e3a00902 	mov	r0, #32768	; 0x8000
4001eb18:	e59f1064 	ldr	r1, [pc, #100]	; 4001eb84 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb1c:	e5810004 	str	r0, [r1, #4]
4001eb20:	e1c10000 	bic	r0, r1, r0
4001eb24:	e5900008 	ldr	r0, [r0, #8]
4001eb28:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001eb2c:	e5810008 	str	r0, [r1, #8]
4001eb30:	e3140801 	tst	r4, #65536	; 0x10000
4001eb34:	0a000007 	beq	4001eb58 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001eb38:	eb0008cc 	bl	40020e70 <CyU3PUsbSSDisConnecthandler>
4001eb3c:	e3a00801 	mov	r0, #65536	; 0x10000
4001eb40:	e59f103c 	ldr	r1, [pc, #60]	; 4001eb84 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb44:	e5810004 	str	r0, [r1, #4]
4001eb48:	e1810000 	orr	r0, r1, r0
4001eb4c:	e5900008 	ldr	r0, [r0, #8]
4001eb50:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001eb54:	e5810008 	str	r0, [r1, #8]
4001eb58:	e3140802 	tst	r4, #131072	; 0x20000
4001eb5c:	0a000007 	beq	4001eb80 <CyU3PUibLnkIntrEvtHandler+0x94>
4001eb60:	eb000926 	bl	40021000 <CyU3PUsbSSReset>
4001eb64:	e3a00802 	mov	r0, #131072	; 0x20000
4001eb68:	e59f1014 	ldr	r1, [pc, #20]	; 4001eb84 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb6c:	e5810004 	str	r0, [r1, #4]
4001eb70:	e1810000 	orr	r0, r1, r0
4001eb74:	e5900008 	ldr	r0, [r0, #8]
4001eb78:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001eb7c:	e5810008 	str	r0, [r1, #8]
4001eb80:	e8bd8010 	pop	{r4, pc}
4001eb84:	e0033000 	.word	0xe0033000
4001eb88:	40030d90 	.word	0x40030d90

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001eb8c <CyU3PUibProtEpIntrEvtHandler>:
4001eb8c:	e92d4070 	push	{r4, r5, r6, lr}
4001eb90:	e59f03b4 	ldr	r0, [pc, #948]	; 4001ef4c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001eb94:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001eb98:	e59f13ac 	ldr	r1, [pc, #940]	; 4001ef4c <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001eb9c:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001eba0:	e0005001 	and	r5, r0, r1
4001eba4:	e3a04001 	mov	r4, #1
4001eba8:	ea0000df 	b	4001ef2c <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001ebac:	e3a00001 	mov	r0, #1
4001ebb0:	e1150410 	tst	r5, r0, lsl r4
4001ebb4:	0a000081 	beq	4001edc0 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001ebb8:	e59f0390 	ldr	r0, [pc, #912]	; 4001ef50 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ebbc:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001ebc0:	e3160901 	tst	r6, #16384	; 0x4000
4001ebc4:	0a00002a 	beq	4001ec74 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ebc8:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ebcc:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ebd0:	e3800002 	orr	r0, r0, #2
4001ebd4:	e59f1374 	ldr	r1, [pc, #884]	; 4001ef50 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ebd8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ebdc:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001ebe0:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ebe4:	e1a01802 	lsl	r1, r2, #16
4001ebe8:	e1a01821 	lsr	r1, r1, #16
4001ebec:	e20420ff 	and	r2, r4, #255	; 0xff
4001ebf0:	e3820080 	orr	r0, r2, #128	; 0x80
4001ebf4:	ebfffa90 	bl	4001d63c <CyU3PUsbSendNrdy>
4001ebf8:	e20410ff 	and	r1, r4, #255	; 0xff
4001ebfc:	e3810080 	orr	r0, r1, #128	; 0x80
4001ec00:	ebfff9a1 	bl	4001d28c <CyU3PUsbResetEp>
4001ec04:	e3a0000a 	mov	r0, #10
4001ec08:	ebffd20c 	bl	40013440 <CyU3PBusyWait>
4001ec0c:	e59f2340 	ldr	r2, [pc, #832]	; 4001ef54 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001ec10:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ec14:	e1a01802 	lsl	r1, r2, #16
4001ec18:	e1a01821 	lsr	r1, r1, #16
4001ec1c:	e20420ff 	and	r2, r4, #255	; 0xff
4001ec20:	e3820080 	orr	r0, r2, #128	; 0x80
4001ec24:	ebfffa47 	bl	4001d548 <CyU3PUsbSendErdy>
4001ec28:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001ec2c:	e59f131c 	ldr	r1, [pc, #796]	; 4001ef50 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec30:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec34:	e59f031c 	ldr	r0, [pc, #796]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ec38:	e5900000 	ldr	r0, [r0]
4001ec3c:	e3100020 	tst	r0, #32
4001ec40:	0a00000b 	beq	4001ec74 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec44:	e3a00001 	mov	r0, #1
4001ec48:	e59f130c 	ldr	r1, [pc, #780]	; 4001ef5c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ec4c:	e5911000 	ldr	r1, [r1]
4001ec50:	e1110410 	tst	r1, r0, lsl r4
4001ec54:	0a000006 	beq	4001ec74 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec58:	e20400ff 	and	r0, r4, #255	; 0xff
4001ec5c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ec60:	e3a01003 	mov	r1, #3
4001ec64:	e3a00020 	mov	r0, #32
4001ec68:	e59f32f0 	ldr	r3, [pc, #752]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ec6c:	e5933000 	ldr	r3, [r3]
4001ec70:	e12fff33 	blx	r3
4001ec74:	e3160801 	tst	r6, #65536	; 0x10000
4001ec78:	0a000004 	beq	4001ec90 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001ec7c:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ec80:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ec84:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ec88:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ef50 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec8c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec90:	e3a00001 	mov	r0, #1
4001ec94:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ef5c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ec98:	e5911000 	ldr	r1, [r1]
4001ec9c:	e1110410 	tst	r1, r0, lsl r4
4001eca0:	0a000044 	beq	4001edb8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001eca4:	e59f02b4 	ldr	r0, [pc, #692]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eca8:	e5900000 	ldr	r0, [r0]
4001ecac:	e3500000 	cmp	r0, #0
4001ecb0:	0a000040 	beq	4001edb8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ecb4:	e59f029c 	ldr	r0, [pc, #668]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ecb8:	e5900000 	ldr	r0, [r0]
4001ecbc:	e3100001 	tst	r0, #1
4001ecc0:	0a000008 	beq	4001ece8 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ecc4:	e3160b01 	tst	r6, #1024	; 0x400
4001ecc8:	0a000006 	beq	4001ece8 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001eccc:	e20400ff 	and	r0, r4, #255	; 0xff
4001ecd0:	e3802080 	orr	r2, r0, #128	; 0x80
4001ecd4:	e3a01003 	mov	r1, #3
4001ecd8:	e3a00001 	mov	r0, #1
4001ecdc:	e59f327c 	ldr	r3, [pc, #636]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ece0:	e5933000 	ldr	r3, [r3]
4001ece4:	e12fff33 	blx	r3
4001ece8:	e59f0268 	ldr	r0, [pc, #616]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ecec:	e5900000 	ldr	r0, [r0]
4001ecf0:	e3100002 	tst	r0, #2
4001ecf4:	0a000008 	beq	4001ed1c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ecf8:	e3160a01 	tst	r6, #4096	; 0x1000
4001ecfc:	0a000006 	beq	4001ed1c <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ed00:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed04:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed08:	e3a01003 	mov	r1, #3
4001ed0c:	e3a00002 	mov	r0, #2
4001ed10:	e59f3248 	ldr	r3, [pc, #584]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed14:	e5933000 	ldr	r3, [r3]
4001ed18:	e12fff33 	blx	r3
4001ed1c:	e59f0234 	ldr	r0, [pc, #564]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed20:	e5900000 	ldr	r0, [r0]
4001ed24:	e3100004 	tst	r0, #4
4001ed28:	0a000008 	beq	4001ed50 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ed2c:	e3160a02 	tst	r6, #8192	; 0x2000
4001ed30:	0a000006 	beq	4001ed50 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ed34:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed38:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed3c:	e3a01003 	mov	r1, #3
4001ed40:	e3a00004 	mov	r0, #4
4001ed44:	e59f3214 	ldr	r3, [pc, #532]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed48:	e5933000 	ldr	r3, [r3]
4001ed4c:	e12fff33 	blx	r3
4001ed50:	e59f0200 	ldr	r0, [pc, #512]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed54:	e5900000 	ldr	r0, [r0]
4001ed58:	e3100010 	tst	r0, #16
4001ed5c:	0a000008 	beq	4001ed84 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ed60:	e3160c02 	tst	r6, #512	; 0x200
4001ed64:	0a000006 	beq	4001ed84 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ed68:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed6c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed70:	e3a01003 	mov	r1, #3
4001ed74:	e3a00010 	mov	r0, #16
4001ed78:	e59f31e0 	ldr	r3, [pc, #480]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed7c:	e5933000 	ldr	r3, [r3]
4001ed80:	e12fff33 	blx	r3
4001ed84:	e59f01cc 	ldr	r0, [pc, #460]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed88:	e5900000 	ldr	r0, [r0]
4001ed8c:	e3100040 	tst	r0, #64	; 0x40
4001ed90:	0a000008 	beq	4001edb8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ed94:	e3160802 	tst	r6, #131072	; 0x20000
4001ed98:	0a000006 	beq	4001edb8 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ed9c:	e20400ff 	and	r0, r4, #255	; 0xff
4001eda0:	e3802080 	orr	r2, r0, #128	; 0x80
4001eda4:	e3a01003 	mov	r1, #3
4001eda8:	e3a00040 	mov	r0, #64	; 0x40
4001edac:	e59f31ac 	ldr	r3, [pc, #428]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edb0:	e5933000 	ldr	r3, [r3]
4001edb4:	e12fff33 	blx	r3
4001edb8:	e59f0190 	ldr	r0, [pc, #400]	; 4001ef50 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001edbc:	e7806104 	str	r6, [r0, r4, lsl #2]
4001edc0:	e2840010 	add	r0, r4, #16
4001edc4:	e3a01001 	mov	r1, #1
4001edc8:	e1150011 	tst	r5, r1, lsl r0
4001edcc:	0a000055 	beq	4001ef28 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001edd0:	e59f018c 	ldr	r0, [pc, #396]	; 4001ef64 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001edd4:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001edd8:	e2840010 	add	r0, r4, #16
4001eddc:	e1a00011 	lsl	r0, r1, r0
4001ede0:	e59f1174 	ldr	r1, [pc, #372]	; 4001ef5c <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ede4:	e5911000 	ldr	r1, [r1]
4001ede8:	e1100001 	tst	r0, r1
4001edec:	0a00004b 	beq	4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001edf0:	e59f0168 	ldr	r0, [pc, #360]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edf4:	e5900000 	ldr	r0, [r0]
4001edf8:	e3500000 	cmp	r0, #0
4001edfc:	0a000047 	beq	4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ee00:	e59f0150 	ldr	r0, [pc, #336]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee04:	e5900000 	ldr	r0, [r0]
4001ee08:	e3100001 	tst	r0, #1
4001ee0c:	0a000007 	beq	4001ee30 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ee10:	e3160b01 	tst	r6, #1024	; 0x400
4001ee14:	0a000005 	beq	4001ee30 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ee18:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee1c:	e3a01003 	mov	r1, #3
4001ee20:	e3a00001 	mov	r0, #1
4001ee24:	e59f3134 	ldr	r3, [pc, #308]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee28:	e5933000 	ldr	r3, [r3]
4001ee2c:	e12fff33 	blx	r3
4001ee30:	e59f0120 	ldr	r0, [pc, #288]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee34:	e5900000 	ldr	r0, [r0]
4001ee38:	e3100002 	tst	r0, #2
4001ee3c:	0a000007 	beq	4001ee60 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee40:	e3160a01 	tst	r6, #4096	; 0x1000
4001ee44:	0a000005 	beq	4001ee60 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee48:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee4c:	e3a01003 	mov	r1, #3
4001ee50:	e3a00002 	mov	r0, #2
4001ee54:	e59f3104 	ldr	r3, [pc, #260]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee58:	e5933000 	ldr	r3, [r3]
4001ee5c:	e12fff33 	blx	r3
4001ee60:	e59f00f0 	ldr	r0, [pc, #240]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee64:	e5900000 	ldr	r0, [r0]
4001ee68:	e3100004 	tst	r0, #4
4001ee6c:	0a000007 	beq	4001ee90 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ee70:	e3160a02 	tst	r6, #8192	; 0x2000
4001ee74:	0a000005 	beq	4001ee90 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ee78:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee7c:	e3a01003 	mov	r1, #3
4001ee80:	e3a00004 	mov	r0, #4
4001ee84:	e59f30d4 	ldr	r3, [pc, #212]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee88:	e5933000 	ldr	r3, [r3]
4001ee8c:	e12fff33 	blx	r3
4001ee90:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee94:	e5900000 	ldr	r0, [r0]
4001ee98:	e3100010 	tst	r0, #16
4001ee9c:	0a000007 	beq	4001eec0 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001eea0:	e3160c02 	tst	r6, #512	; 0x200
4001eea4:	0a000005 	beq	4001eec0 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001eea8:	e20420ff 	and	r2, r4, #255	; 0xff
4001eeac:	e3a01003 	mov	r1, #3
4001eeb0:	e3a00010 	mov	r0, #16
4001eeb4:	e59f30a4 	ldr	r3, [pc, #164]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eeb8:	e5933000 	ldr	r3, [r3]
4001eebc:	e12fff33 	blx	r3
4001eec0:	e59f0090 	ldr	r0, [pc, #144]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eec4:	e5900000 	ldr	r0, [r0]
4001eec8:	e3100040 	tst	r0, #64	; 0x40
4001eecc:	0a000007 	beq	4001eef0 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001eed0:	e3160802 	tst	r6, #131072	; 0x20000
4001eed4:	0a000005 	beq	4001eef0 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001eed8:	e20420ff 	and	r2, r4, #255	; 0xff
4001eedc:	e3a01003 	mov	r1, #3
4001eee0:	e3a00040 	mov	r0, #64	; 0x40
4001eee4:	e59f3074 	ldr	r3, [pc, #116]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eee8:	e5933000 	ldr	r3, [r3]
4001eeec:	e12fff33 	blx	r3
4001eef0:	e59f0060 	ldr	r0, [pc, #96]	; 4001ef58 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eef4:	e5900000 	ldr	r0, [r0]
4001eef8:	e3100020 	tst	r0, #32
4001eefc:	0a000007 	beq	4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ef00:	e3160901 	tst	r6, #16384	; 0x4000
4001ef04:	0a000005 	beq	4001ef20 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ef08:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef0c:	e3a01003 	mov	r1, #3
4001ef10:	e3a00020 	mov	r0, #32
4001ef14:	e59f3044 	ldr	r3, [pc, #68]	; 4001ef60 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef18:	e5933000 	ldr	r3, [r3]
4001ef1c:	e12fff33 	blx	r3
4001ef20:	e59f003c 	ldr	r0, [pc, #60]	; 4001ef64 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001ef24:	e7806104 	str	r6, [r0, r4, lsl #2]
4001ef28:	e2844001 	add	r4, r4, #1
4001ef2c:	e3540010 	cmp	r4, #16
4001ef30:	baffff1d 	blt	4001ebac <CyU3PUibProtEpIntrEvtHandler+0x20>
4001ef34:	e59f002c 	ldr	r0, [pc, #44]	; 4001ef68 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef38:	e5900004 	ldr	r0, [r0, #4]
4001ef3c:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ef40:	e59f1020 	ldr	r1, [pc, #32]	; 4001ef68 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef44:	e5810004 	str	r0, [r1, #4]
4001ef48:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ef4c:	e0033000 	.word	0xe0033000
4001ef50:	e0033500 	.word	0xe0033500
4001ef54:	e00335c0 	.word	0xe00335c0
4001ef58:	40030d80 	.word	0x40030d80
4001ef5c:	40030d84 	.word	0x40030d84
4001ef60:	40030d7c 	.word	0x40030d7c
4001ef64:	e0033600 	.word	0xe0033600
4001ef68:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001ef6c <CyU3PUibProtIntrEvtHandler>:
4001ef6c:	e92d4010 	push	{r4, lr}
4001ef70:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f048 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef74:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001ef78:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f048 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef7c:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001ef80:	e0004001 	and	r4, r0, r1
4001ef84:	e3140c02 	tst	r4, #512	; 0x200
4001ef88:	0a000006 	beq	4001efa8 <CyU3PUibProtIntrEvtHandler+0x3c>
4001ef8c:	e3a00c02 	mov	r0, #512	; 0x200
4001ef90:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f048 <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef94:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ef98:	e3a00001 	mov	r0, #1
4001ef9c:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f04c <CyU3PUibProtIntrEvtHandler+0xe0>
4001efa0:	e5810014 	str	r0, [r1, #20]
4001efa4:	eb0008ff 	bl	400213a8 <CyU3PUsbSetupCommand>
4001efa8:	e3140901 	tst	r4, #16384	; 0x4000
4001efac:	0a00000a 	beq	4001efdc <CyU3PUibProtIntrEvtHandler+0x70>
4001efb0:	e59f0090 	ldr	r0, [pc, #144]	; 4001f048 <CyU3PUibProtIntrEvtHandler+0xdc>
4001efb4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001efb8:	e3c00004 	bic	r0, r0, #4
4001efbc:	e59f1084 	ldr	r1, [pc, #132]	; 4001f048 <CyU3PUibProtIntrEvtHandler+0xdc>
4001efc0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001efc4:	e1a00001 	mov	r0, r1
4001efc8:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001efcc:	e3c00004 	bic	r0, r0, #4
4001efd0:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001efd4:	e3a00901 	mov	r0, #16384	; 0x4000
4001efd8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001efdc:	e3140b02 	tst	r4, #2048	; 0x800
4001efe0:	0a000012 	beq	4001f030 <CyU3PUibProtIntrEvtHandler+0xc4>
4001efe4:	e59f0060 	ldr	r0, [pc, #96]	; 4001f04c <CyU3PUibProtIntrEvtHandler+0xe0>
4001efe8:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001efec:	e3500000 	cmp	r0, #0
4001eff0:	0a00000b 	beq	4001f024 <CyU3PUibProtIntrEvtHandler+0xb8>
4001eff4:	e59f0054 	ldr	r0, [pc, #84]	; 4001f050 <CyU3PUibProtIntrEvtHandler+0xe4>
4001eff8:	e5900000 	ldr	r0, [r0]
4001effc:	e3500000 	cmp	r0, #0
4001f000:	0a000004 	beq	4001f018 <CyU3PUibProtIntrEvtHandler+0xac>
4001f004:	e3a01000 	mov	r1, #0
4001f008:	e3a0000a 	mov	r0, #10
4001f00c:	e59f203c 	ldr	r2, [pc, #60]	; 4001f050 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f010:	e5922000 	ldr	r2, [r2]
4001f014:	e12fff32 	blx	r2
4001f018:	e3a00000 	mov	r0, #0
4001f01c:	e59f1028 	ldr	r1, [pc, #40]	; 4001f04c <CyU3PUibProtIntrEvtHandler+0xe0>
4001f020:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f024:	e3a00b02 	mov	r0, #2048	; 0x800
4001f028:	e59f1018 	ldr	r1, [pc, #24]	; 4001f048 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f02c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f030:	e59f001c 	ldr	r0, [pc, #28]	; 4001f054 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f034:	e5900004 	ldr	r0, [r0, #4]
4001f038:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f03c:	e59f1010 	ldr	r1, [pc, #16]	; 4001f054 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f040:	e5810004 	str	r0, [r1, #4]
4001f044:	e8bd8010 	pop	{r4, pc}
4001f048:	e0033000 	.word	0xe0033000
4001f04c:	40031d40 	.word	0x40031d40
4001f050:	40030da0 	.word	0x40030da0
4001f054:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f058 <CyU3PUibSendDescr>:
4001f058:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f05c:	e1a04000 	mov	r4, r0
4001f060:	e1a05001 	mov	r5, r1
4001f064:	e3a06000 	mov	r6, #0
4001f068:	e3a07000 	mov	r7, #0
4001f06c:	e3a08000 	mov	r8, #0
4001f070:	e3a09000 	mov	r9, #0
4001f074:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001f660 <CyU3PUibSendDescr+0x608>
4001f078:	e0000825 	and	r0, r0, r5, lsr #16
4001f07c:	e58d0000 	str	r0, [sp]
4001f080:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f084:	e5d00009 	ldrb	r0, [r0, #9]
4001f088:	e3500003 	cmp	r0, #3
4001f08c:	1a000001 	bne	4001f098 <CyU3PUibSendDescr+0x40>
4001f090:	e3a00c02 	mov	r0, #512	; 0x200
4001f094:	ea000000 	b	4001f09c <CyU3PUibSendDescr+0x44>
4001f098:	e3a00040 	mov	r0, #64	; 0x40
4001f09c:	e1a0a800 	lsl	sl, r0, #16
4001f0a0:	e1a0a82a 	lsr	sl, sl, #16
4001f0a4:	e1a00c24 	lsr	r0, r4, #24
4001f0a8:	e3500006 	cmp	r0, #6
4001f0ac:	0a0000b4 	beq	4001f384 <CyU3PUibSendDescr+0x32c>
4001f0b0:	ca000006 	bgt	4001f0d0 <CyU3PUibSendDescr+0x78>
4001f0b4:	e3500001 	cmp	r0, #1
4001f0b8:	0a00000b 	beq	4001f0ec <CyU3PUibSendDescr+0x94>
4001f0bc:	e3500002 	cmp	r0, #2
4001f0c0:	0a000020 	beq	4001f148 <CyU3PUibSendDescr+0xf0>
4001f0c4:	e3500003 	cmp	r0, #3
4001f0c8:	1a00013b 	bne	4001f5bc <CyU3PUibSendDescr+0x564>
4001f0cc:	ea00007b 	b	4001f2c0 <CyU3PUibSendDescr+0x268>
4001f0d0:	e3500007 	cmp	r0, #7
4001f0d4:	0a0000b8 	beq	4001f3bc <CyU3PUibSendDescr+0x364>
4001f0d8:	e3500009 	cmp	r0, #9
4001f0dc:	0a000122 	beq	4001f56c <CyU3PUibSendDescr+0x514>
4001f0e0:	e350000f 	cmp	r0, #15
4001f0e4:	1a000134 	bne	4001f5bc <CyU3PUibSendDescr+0x564>
4001f0e8:	ea0000f6 	b	4001f4c8 <CyU3PUibSendDescr+0x470>
4001f0ec:	e1a00000 	nop			; (mov r0, r0)
4001f0f0:	e59f056c 	ldr	r0, [pc, #1388]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f0f4:	e5d00009 	ldrb	r0, [r0, #9]
4001f0f8:	e3500003 	cmp	r0, #3
4001f0fc:	1a000008 	bne	4001f124 <CyU3PUibSendDescr+0xcc>
4001f100:	e59f0560 	ldr	r0, [pc, #1376]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f104:	e5900004 	ldr	r0, [r0, #4]
4001f108:	e3500000 	cmp	r0, #0
4001f10c:	0a00000c 	beq	4001f144 <CyU3PUibSendDescr+0xec>
4001f110:	e3a09001 	mov	r9, #1
4001f114:	e3a06012 	mov	r6, #18
4001f118:	e59f0548 	ldr	r0, [pc, #1352]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f11c:	e5908004 	ldr	r8, [r0, #4]
4001f120:	ea000007 	b	4001f144 <CyU3PUibSendDescr+0xec>
4001f124:	e59f053c 	ldr	r0, [pc, #1340]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f128:	e5900000 	ldr	r0, [r0]
4001f12c:	e3500000 	cmp	r0, #0
4001f130:	0a000003 	beq	4001f144 <CyU3PUibSendDescr+0xec>
4001f134:	e3a09001 	mov	r9, #1
4001f138:	e3a06012 	mov	r6, #18
4001f13c:	e59f0524 	ldr	r0, [pc, #1316]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f140:	e5908000 	ldr	r8, [r0]
4001f144:	ea000128 	b	4001f5ec <CyU3PUibSendDescr+0x594>
4001f148:	e1a00000 	nop			; (mov r0, r0)
4001f14c:	e59f0510 	ldr	r0, [pc, #1296]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f150:	e5d00009 	ldrb	r0, [r0, #9]
4001f154:	e3500002 	cmp	r0, #2
4001f158:	1a00001a 	bne	4001f1c8 <CyU3PUibSendDescr+0x170>
4001f15c:	e59f0504 	ldr	r0, [pc, #1284]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f160:	e5900014 	ldr	r0, [r0, #20]
4001f164:	e3500000 	cmp	r0, #0
4001f168:	0a00004f 	beq	4001f2ac <CyU3PUibSendDescr+0x254>
4001f16c:	e3a09001 	mov	r9, #1
4001f170:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f174:	e5908014 	ldr	r8, [r0, #20]
4001f178:	e5900014 	ldr	r0, [r0, #20]
4001f17c:	e5d00002 	ldrb	r0, [r0, #2]
4001f180:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f184:	e5911014 	ldr	r1, [r1, #20]
4001f188:	e5d11003 	ldrb	r1, [r1, #3]
4001f18c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f190:	e1500825 	cmp	r0, r5, lsr #16
4001f194:	2a000007 	bcs	4001f1b8 <CyU3PUibSendDescr+0x160>
4001f198:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f19c:	e5900014 	ldr	r0, [r0, #20]
4001f1a0:	e5d00002 	ldrb	r0, [r0, #2]
4001f1a4:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f1a8:	e5911014 	ldr	r1, [r1, #20]
4001f1ac:	e5d11003 	ldrb	r1, [r1, #3]
4001f1b0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f1b4:	ea000000 	b	4001f1bc <CyU3PUibSendDescr+0x164>
4001f1b8:	e1a00825 	lsr	r0, r5, #16
4001f1bc:	e1a06800 	lsl	r6, r0, #16
4001f1c0:	e1a06826 	lsr	r6, r6, #16
4001f1c4:	ea000038 	b	4001f2ac <CyU3PUibSendDescr+0x254>
4001f1c8:	e59f0494 	ldr	r0, [pc, #1172]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f1cc:	e5d00009 	ldrb	r0, [r0, #9]
4001f1d0:	e3500001 	cmp	r0, #1
4001f1d4:	1a00001a 	bne	4001f244 <CyU3PUibSendDescr+0x1ec>
4001f1d8:	e59f0488 	ldr	r0, [pc, #1160]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f1dc:	e5900018 	ldr	r0, [r0, #24]
4001f1e0:	e3500000 	cmp	r0, #0
4001f1e4:	0a000030 	beq	4001f2ac <CyU3PUibSendDescr+0x254>
4001f1e8:	e3a09001 	mov	r9, #1
4001f1ec:	e59f0474 	ldr	r0, [pc, #1140]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f1f0:	e5908018 	ldr	r8, [r0, #24]
4001f1f4:	e5900018 	ldr	r0, [r0, #24]
4001f1f8:	e5d00002 	ldrb	r0, [r0, #2]
4001f1fc:	e59f1464 	ldr	r1, [pc, #1124]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f200:	e5911018 	ldr	r1, [r1, #24]
4001f204:	e5d11003 	ldrb	r1, [r1, #3]
4001f208:	e1800401 	orr	r0, r0, r1, lsl #8
4001f20c:	e1500825 	cmp	r0, r5, lsr #16
4001f210:	2a000007 	bcs	4001f234 <CyU3PUibSendDescr+0x1dc>
4001f214:	e59f044c 	ldr	r0, [pc, #1100]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f218:	e5900018 	ldr	r0, [r0, #24]
4001f21c:	e5d00002 	ldrb	r0, [r0, #2]
4001f220:	e59f1440 	ldr	r1, [pc, #1088]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f224:	e5911018 	ldr	r1, [r1, #24]
4001f228:	e5d11003 	ldrb	r1, [r1, #3]
4001f22c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f230:	ea000000 	b	4001f238 <CyU3PUibSendDescr+0x1e0>
4001f234:	e1a00825 	lsr	r0, r5, #16
4001f238:	e1a06800 	lsl	r6, r0, #16
4001f23c:	e1a06826 	lsr	r6, r6, #16
4001f240:	ea000019 	b	4001f2ac <CyU3PUibSendDescr+0x254>
4001f244:	e59f041c 	ldr	r0, [pc, #1052]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f248:	e590001c 	ldr	r0, [r0, #28]
4001f24c:	e3500000 	cmp	r0, #0
4001f250:	0a000015 	beq	4001f2ac <CyU3PUibSendDescr+0x254>
4001f254:	e3a09001 	mov	r9, #1
4001f258:	e59f0408 	ldr	r0, [pc, #1032]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f25c:	e590801c 	ldr	r8, [r0, #28]
4001f260:	e590001c 	ldr	r0, [r0, #28]
4001f264:	e5d00002 	ldrb	r0, [r0, #2]
4001f268:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f26c:	e591101c 	ldr	r1, [r1, #28]
4001f270:	e5d11003 	ldrb	r1, [r1, #3]
4001f274:	e1800401 	orr	r0, r0, r1, lsl #8
4001f278:	e1500825 	cmp	r0, r5, lsr #16
4001f27c:	2a000007 	bcs	4001f2a0 <CyU3PUibSendDescr+0x248>
4001f280:	e59f03e0 	ldr	r0, [pc, #992]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f284:	e590001c 	ldr	r0, [r0, #28]
4001f288:	e5d00002 	ldrb	r0, [r0, #2]
4001f28c:	e59f13d4 	ldr	r1, [pc, #980]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f290:	e591101c 	ldr	r1, [r1, #28]
4001f294:	e5d11003 	ldrb	r1, [r1, #3]
4001f298:	e1800401 	orr	r0, r0, r1, lsl #8
4001f29c:	ea000000 	b	4001f2a4 <CyU3PUibSendDescr+0x24c>
4001f2a0:	e1a00825 	lsr	r0, r5, #16
4001f2a4:	e1a06800 	lsl	r6, r0, #16
4001f2a8:	e1a06826 	lsr	r6, r6, #16
4001f2ac:	e3580000 	cmp	r8, #0
4001f2b0:	0a000001 	beq	4001f2bc <CyU3PUibSendDescr+0x264>
4001f2b4:	e3a00002 	mov	r0, #2
4001f2b8:	e5c80001 	strb	r0, [r8, #1]
4001f2bc:	ea0000ca 	b	4001f5ec <CyU3PUibSendDescr+0x594>
4001f2c0:	e1a00000 	nop			; (mov r0, r0)
4001f2c4:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f2c8:	e1a0b820 	lsr	fp, r0, #16
4001f2cc:	e35b0010 	cmp	fp, #16
4001f2d0:	ca000003 	bgt	4001f2e4 <CyU3PUibSendDescr+0x28c>
4001f2d4:	e59f0390 	ldr	r0, [pc, #912]	; 4001f66c <CyU3PUibSendDescr+0x614>
4001f2d8:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f2dc:	e3500000 	cmp	r0, #0
4001f2e0:	1a000013 	bne	4001f334 <CyU3PUibSendDescr+0x2dc>
4001f2e4:	e59f0378 	ldr	r0, [pc, #888]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f2e8:	e5d00007 	ldrb	r0, [r0, #7]
4001f2ec:	e3500001 	cmp	r0, #1
4001f2f0:	0a000022 	beq	4001f380 <CyU3PUibSendDescr+0x328>
4001f2f4:	e59f0374 	ldr	r0, [pc, #884]	; 4001f670 <CyU3PUibSendDescr+0x618>
4001f2f8:	e5900000 	ldr	r0, [r0]
4001f2fc:	e3500000 	cmp	r0, #0
4001f300:	0a00001e 	beq	4001f380 <CyU3PUibSendDescr+0x328>
4001f304:	e1a01005 	mov	r1, r5
4001f308:	e1a00004 	mov	r0, r4
4001f30c:	e59f235c 	ldr	r2, [pc, #860]	; 4001f670 <CyU3PUibSendDescr+0x618>
4001f310:	e5922000 	ldr	r2, [r2]
4001f314:	e12fff32 	blx	r2
4001f318:	e1a09000 	mov	r9, r0
4001f31c:	e3590000 	cmp	r9, #0
4001f320:	0a000016 	beq	4001f380 <CyU3PUibSendDescr+0x328>
4001f324:	e3a00001 	mov	r0, #1
4001f328:	e59f1334 	ldr	r1, [pc, #820]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f32c:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f330:	ea000012 	b	4001f380 <CyU3PUibSendDescr+0x328>
4001f334:	e59f0330 	ldr	r0, [pc, #816]	; 4001f66c <CyU3PUibSendDescr+0x614>
4001f338:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f33c:	e5d00000 	ldrb	r0, [r0]
4001f340:	e1500825 	cmp	r0, r5, lsr #16
4001f344:	2a000003 	bcs	4001f358 <CyU3PUibSendDescr+0x300>
4001f348:	e59f031c 	ldr	r0, [pc, #796]	; 4001f66c <CyU3PUibSendDescr+0x614>
4001f34c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f350:	e5d00000 	ldrb	r0, [r0]
4001f354:	ea000000 	b	4001f35c <CyU3PUibSendDescr+0x304>
4001f358:	e1a00825 	lsr	r0, r5, #16
4001f35c:	e1a06800 	lsl	r6, r0, #16
4001f360:	e1a06826 	lsr	r6, r6, #16
4001f364:	e59f0300 	ldr	r0, [pc, #768]	; 4001f66c <CyU3PUibSendDescr+0x614>
4001f368:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f36c:	e3500000 	cmp	r0, #0
4001f370:	0a000002 	beq	4001f380 <CyU3PUibSendDescr+0x328>
4001f374:	e3a09001 	mov	r9, #1
4001f378:	e59f02ec 	ldr	r0, [pc, #748]	; 4001f66c <CyU3PUibSendDescr+0x614>
4001f37c:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f380:	ea000099 	b	4001f5ec <CyU3PUibSendDescr+0x594>
4001f384:	e1a00000 	nop			; (mov r0, r0)
4001f388:	e59f02d8 	ldr	r0, [pc, #728]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f38c:	e5900008 	ldr	r0, [r0, #8]
4001f390:	e3500000 	cmp	r0, #0
4001f394:	0a000007 	beq	4001f3b8 <CyU3PUibSendDescr+0x360>
4001f398:	e59f02c4 	ldr	r0, [pc, #708]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f39c:	e5d00009 	ldrb	r0, [r0, #9]
4001f3a0:	e3500003 	cmp	r0, #3
4001f3a4:	0a000003 	beq	4001f3b8 <CyU3PUibSendDescr+0x360>
4001f3a8:	e3a09001 	mov	r9, #1
4001f3ac:	e3a0600a 	mov	r6, #10
4001f3b0:	e59f02b0 	ldr	r0, [pc, #688]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f3b4:	e5908008 	ldr	r8, [r0, #8]
4001f3b8:	ea00008b 	b	4001f5ec <CyU3PUibSendDescr+0x594>
4001f3bc:	e1a00000 	nop			; (mov r0, r0)
4001f3c0:	e59f029c 	ldr	r0, [pc, #668]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f3c4:	e5d00009 	ldrb	r0, [r0, #9]
4001f3c8:	e3500002 	cmp	r0, #2
4001f3cc:	1a00001a 	bne	4001f43c <CyU3PUibSendDescr+0x3e4>
4001f3d0:	e59f0290 	ldr	r0, [pc, #656]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f3d4:	e5900018 	ldr	r0, [r0, #24]
4001f3d8:	e3500000 	cmp	r0, #0
4001f3dc:	0a000034 	beq	4001f4b4 <CyU3PUibSendDescr+0x45c>
4001f3e0:	e3a09001 	mov	r9, #1
4001f3e4:	e59f027c 	ldr	r0, [pc, #636]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f3e8:	e5908018 	ldr	r8, [r0, #24]
4001f3ec:	e5900018 	ldr	r0, [r0, #24]
4001f3f0:	e5d00002 	ldrb	r0, [r0, #2]
4001f3f4:	e59f126c 	ldr	r1, [pc, #620]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f3f8:	e5911018 	ldr	r1, [r1, #24]
4001f3fc:	e5d11003 	ldrb	r1, [r1, #3]
4001f400:	e1800401 	orr	r0, r0, r1, lsl #8
4001f404:	e1500825 	cmp	r0, r5, lsr #16
4001f408:	2a000007 	bcs	4001f42c <CyU3PUibSendDescr+0x3d4>
4001f40c:	e59f0254 	ldr	r0, [pc, #596]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f410:	e5900018 	ldr	r0, [r0, #24]
4001f414:	e5d00002 	ldrb	r0, [r0, #2]
4001f418:	e59f1248 	ldr	r1, [pc, #584]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f41c:	e5911018 	ldr	r1, [r1, #24]
4001f420:	e5d11003 	ldrb	r1, [r1, #3]
4001f424:	e1800401 	orr	r0, r0, r1, lsl #8
4001f428:	ea000000 	b	4001f430 <CyU3PUibSendDescr+0x3d8>
4001f42c:	e1a00825 	lsr	r0, r5, #16
4001f430:	e1a06800 	lsl	r6, r0, #16
4001f434:	e1a06826 	lsr	r6, r6, #16
4001f438:	ea00001d 	b	4001f4b4 <CyU3PUibSendDescr+0x45c>
4001f43c:	e59f0220 	ldr	r0, [pc, #544]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f440:	e5d00009 	ldrb	r0, [r0, #9]
4001f444:	e3500001 	cmp	r0, #1
4001f448:	1a000019 	bne	4001f4b4 <CyU3PUibSendDescr+0x45c>
4001f44c:	e59f0214 	ldr	r0, [pc, #532]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f450:	e5900014 	ldr	r0, [r0, #20]
4001f454:	e3500000 	cmp	r0, #0
4001f458:	0a000015 	beq	4001f4b4 <CyU3PUibSendDescr+0x45c>
4001f45c:	e3a09001 	mov	r9, #1
4001f460:	e59f0200 	ldr	r0, [pc, #512]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f464:	e5908014 	ldr	r8, [r0, #20]
4001f468:	e5900014 	ldr	r0, [r0, #20]
4001f46c:	e5d00002 	ldrb	r0, [r0, #2]
4001f470:	e59f11f0 	ldr	r1, [pc, #496]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f474:	e5911014 	ldr	r1, [r1, #20]
4001f478:	e5d11003 	ldrb	r1, [r1, #3]
4001f47c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f480:	e1500825 	cmp	r0, r5, lsr #16
4001f484:	2a000007 	bcs	4001f4a8 <CyU3PUibSendDescr+0x450>
4001f488:	e59f01d8 	ldr	r0, [pc, #472]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f48c:	e5900014 	ldr	r0, [r0, #20]
4001f490:	e5d00002 	ldrb	r0, [r0, #2]
4001f494:	e59f11cc 	ldr	r1, [pc, #460]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f498:	e5911014 	ldr	r1, [r1, #20]
4001f49c:	e5d11003 	ldrb	r1, [r1, #3]
4001f4a0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f4a4:	ea000000 	b	4001f4ac <CyU3PUibSendDescr+0x454>
4001f4a8:	e1a00825 	lsr	r0, r5, #16
4001f4ac:	e1a06800 	lsl	r6, r0, #16
4001f4b0:	e1a06826 	lsr	r6, r6, #16
4001f4b4:	e3580000 	cmp	r8, #0
4001f4b8:	0a000001 	beq	4001f4c4 <CyU3PUibSendDescr+0x46c>
4001f4bc:	e3a00007 	mov	r0, #7
4001f4c0:	e5c80001 	strb	r0, [r8, #1]
4001f4c4:	ea000048 	b	4001f5ec <CyU3PUibSendDescr+0x594>
4001f4c8:	e1a00000 	nop			; (mov r0, r0)
4001f4cc:	e59f0194 	ldr	r0, [pc, #404]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f4d0:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f4d4:	e3500000 	cmp	r0, #0
4001f4d8:	0a000022 	beq	4001f568 <CyU3PUibSendDescr+0x510>
4001f4dc:	e59f0180 	ldr	r0, [pc, #384]	; 4001f664 <CyU3PUibSendDescr+0x60c>
4001f4e0:	e5d00009 	ldrb	r0, [r0, #9]
4001f4e4:	e3500003 	cmp	r0, #3
4001f4e8:	0a000008 	beq	4001f510 <CyU3PUibSendDescr+0x4b8>
4001f4ec:	e59f0174 	ldr	r0, [pc, #372]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f4f0:	e5900000 	ldr	r0, [r0]
4001f4f4:	e3500000 	cmp	r0, #0
4001f4f8:	0a00001a 	beq	4001f568 <CyU3PUibSendDescr+0x510>
4001f4fc:	e59f0164 	ldr	r0, [pc, #356]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f500:	e5900000 	ldr	r0, [r0]
4001f504:	e5d00002 	ldrb	r0, [r0, #2]
4001f508:	e3500010 	cmp	r0, #16
4001f50c:	1a000015 	bne	4001f568 <CyU3PUibSendDescr+0x510>
4001f510:	e3a09001 	mov	r9, #1
4001f514:	e59f014c 	ldr	r0, [pc, #332]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f518:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f51c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f520:	e5d00002 	ldrb	r0, [r0, #2]
4001f524:	e59f113c 	ldr	r1, [pc, #316]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f528:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f52c:	e5d11003 	ldrb	r1, [r1, #3]
4001f530:	e1800401 	orr	r0, r0, r1, lsl #8
4001f534:	e1500825 	cmp	r0, r5, lsr #16
4001f538:	2a000007 	bcs	4001f55c <CyU3PUibSendDescr+0x504>
4001f53c:	e59f0124 	ldr	r0, [pc, #292]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f540:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f544:	e5d00002 	ldrb	r0, [r0, #2]
4001f548:	e59f1118 	ldr	r1, [pc, #280]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f54c:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f550:	e5d11003 	ldrb	r1, [r1, #3]
4001f554:	e1800401 	orr	r0, r0, r1, lsl #8
4001f558:	ea000000 	b	4001f560 <CyU3PUibSendDescr+0x508>
4001f55c:	e1a00825 	lsr	r0, r5, #16
4001f560:	e1a06800 	lsl	r6, r0, #16
4001f564:	e1a06826 	lsr	r6, r6, #16
4001f568:	ea00001f 	b	4001f5ec <CyU3PUibSendDescr+0x594>
4001f56c:	e1a00000 	nop			; (mov r0, r0)
4001f570:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f574:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f578:	e3500000 	cmp	r0, #0
4001f57c:	0a00000d 	beq	4001f5b8 <CyU3PUibSendDescr+0x560>
4001f580:	e3a09001 	mov	r9, #1
4001f584:	e59f00dc 	ldr	r0, [pc, #220]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f588:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f58c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f590:	e5d00000 	ldrb	r0, [r0]
4001f594:	e1500825 	cmp	r0, r5, lsr #16
4001f598:	2a000003 	bcs	4001f5ac <CyU3PUibSendDescr+0x554>
4001f59c:	e59f00c4 	ldr	r0, [pc, #196]	; 4001f668 <CyU3PUibSendDescr+0x610>
4001f5a0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f5a4:	e5d00000 	ldrb	r0, [r0]
4001f5a8:	ea000000 	b	4001f5b0 <CyU3PUibSendDescr+0x558>
4001f5ac:	e1a00825 	lsr	r0, r5, #16
4001f5b0:	e1a06800 	lsl	r6, r0, #16
4001f5b4:	e1a06826 	lsr	r6, r6, #16
4001f5b8:	ea00000b 	b	4001f5ec <CyU3PUibSendDescr+0x594>
4001f5bc:	e1a00000 	nop			; (mov r0, r0)
4001f5c0:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f670 <CyU3PUibSendDescr+0x618>
4001f5c4:	e5900000 	ldr	r0, [r0]
4001f5c8:	e3500000 	cmp	r0, #0
4001f5cc:	0a000005 	beq	4001f5e8 <CyU3PUibSendDescr+0x590>
4001f5d0:	e1a01005 	mov	r1, r5
4001f5d4:	e1a00004 	mov	r0, r4
4001f5d8:	e59f2090 	ldr	r2, [pc, #144]	; 4001f670 <CyU3PUibSendDescr+0x618>
4001f5dc:	e5922000 	ldr	r2, [r2]
4001f5e0:	e12fff32 	blx	r2
4001f5e4:	e1a09000 	mov	r9, r0
4001f5e8:	e1a00000 	nop			; (mov r0, r0)
4001f5ec:	e1a00000 	nop			; (mov r0, r0)
4001f5f0:	e3590001 	cmp	r9, #1
4001f5f4:	1a000017 	bne	4001f658 <CyU3PUibSendDescr+0x600>
4001f5f8:	e3580000 	cmp	r8, #0
4001f5fc:	0a000015 	beq	4001f658 <CyU3PUibSendDescr+0x600>
4001f600:	e1a01008 	mov	r1, r8
4001f604:	e1a00006 	mov	r0, r6
4001f608:	ebfff758 	bl	4001d370 <CyU3PUsbSendEP0Data>
4001f60c:	e1a07000 	mov	r7, r0
4001f610:	e3570000 	cmp	r7, #0
4001f614:	1a000009 	bne	4001f640 <CyU3PUibSendDescr+0x5e8>
4001f618:	e59d0000 	ldr	r0, [sp]
4001f61c:	e1560000 	cmp	r6, r0
4001f620:	aa000006 	bge	4001f640 <CyU3PUibSendDescr+0x5e8>
4001f624:	e24a0001 	sub	r0, sl, #1
4001f628:	e1100006 	tst	r0, r6
4001f62c:	1a000003 	bne	4001f640 <CyU3PUibSendDescr+0x5e8>
4001f630:	e1a01008 	mov	r1, r8
4001f634:	e3a00000 	mov	r0, #0
4001f638:	ebfff74c 	bl	4001d370 <CyU3PUsbSendEP0Data>
4001f63c:	e1a07000 	mov	r7, r0
4001f640:	e3570000 	cmp	r7, #0
4001f644:	0a000003 	beq	4001f658 <CyU3PUibSendDescr+0x600>
4001f648:	e3a02000 	mov	r2, #0
4001f64c:	e3a01001 	mov	r1, #1
4001f650:	e1a00002 	mov	r0, r2
4001f654:	ebfff970 	bl	4001dc1c <CyU3PUsbStall>
4001f658:	e1a00009 	mov	r0, r9
4001f65c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f660:	0000ffff 	.word	0x0000ffff
4001f664:	40031d40 	.word	0x40031d40
4001f668:	40031f98 	.word	0x40031f98
4001f66c:	40031fb8 	.word	0x40031fb8
4001f670:	40030da4 	.word	0x40030da4

Disassembly of section i.CyU3PUibSocketInit:

4001f674 <CyU3PUibSocketInit>:
4001f674:	e3a00000 	mov	r0, #0
4001f678:	ea00000d 	b	4001f6b4 <CyU3PUibSocketInit+0x40>
4001f67c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f680:	e59f2080 	ldr	r2, [pc, #128]	; 4001f708 <CyU3PUibSocketInit+0x94>
4001f684:	e0822380 	add	r2, r2, r0, lsl #7
4001f688:	e582100c 	str	r1, [r2, #12]
4001f68c:	e3e01000 	mvn	r1, #0
4001f690:	e59f2070 	ldr	r2, [pc, #112]	; 4001f708 <CyU3PUibSocketInit+0x94>
4001f694:	e0822380 	add	r2, r2, r0, lsl #7
4001f698:	e5821010 	str	r1, [r2, #16]
4001f69c:	e3a01000 	mov	r1, #0
4001f6a0:	e59f2060 	ldr	r2, [pc, #96]	; 4001f708 <CyU3PUibSocketInit+0x94>
4001f6a4:	e0822380 	add	r2, r2, r0, lsl #7
4001f6a8:	e5821014 	str	r1, [r2, #20]
4001f6ac:	e2801001 	add	r1, r0, #1
4001f6b0:	e20100ff 	and	r0, r1, #255	; 0xff
4001f6b4:	e3500010 	cmp	r0, #16
4001f6b8:	baffffef 	blt	4001f67c <CyU3PUibSocketInit+0x8>
4001f6bc:	e3a00000 	mov	r0, #0
4001f6c0:	ea00000d 	b	4001f6fc <CyU3PUibSocketInit+0x88>
4001f6c4:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f6c8:	e59f203c 	ldr	r2, [pc, #60]	; 4001f70c <CyU3PUibSocketInit+0x98>
4001f6cc:	e0822380 	add	r2, r2, r0, lsl #7
4001f6d0:	e582100c 	str	r1, [r2, #12]
4001f6d4:	e3e01000 	mvn	r1, #0
4001f6d8:	e59f202c 	ldr	r2, [pc, #44]	; 4001f70c <CyU3PUibSocketInit+0x98>
4001f6dc:	e0822380 	add	r2, r2, r0, lsl #7
4001f6e0:	e5821010 	str	r1, [r2, #16]
4001f6e4:	e3a01000 	mov	r1, #0
4001f6e8:	e59f201c 	ldr	r2, [pc, #28]	; 4001f70c <CyU3PUibSocketInit+0x98>
4001f6ec:	e0822380 	add	r2, r2, r0, lsl #7
4001f6f0:	e5821014 	str	r1, [r2, #20]
4001f6f4:	e2801001 	add	r1, r0, #1
4001f6f8:	e20100ff 	and	r0, r1, #255	; 0xff
4001f6fc:	e3500010 	cmp	r0, #16
4001f700:	baffffef 	blt	4001f6c4 <CyU3PUibSocketInit+0x50>
4001f704:	e12fff1e 	bx	lr
4001f708:	e0038000 	.word	0xe0038000
4001f70c:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001f710 <CyU3PUibStatusTimerCb>:
4001f710:	e92d4010 	push	{r4, lr}
4001f714:	e1a04000 	mov	r4, r0
4001f718:	e59f0050 	ldr	r0, [pc, #80]	; 4001f770 <CyU3PUibStatusTimerCb+0x60>
4001f71c:	e5900000 	ldr	r0, [r0]
4001f720:	e3500000 	cmp	r0, #0
4001f724:	0a000010 	beq	4001f76c <CyU3PUibStatusTimerCb+0x5c>
4001f728:	e59f0044 	ldr	r0, [pc, #68]	; 4001f774 <CyU3PUibStatusTimerCb+0x64>
4001f72c:	e5d00009 	ldrb	r0, [r0, #9]
4001f730:	e3500003 	cmp	r0, #3
4001f734:	1a00000c 	bne	4001f76c <CyU3PUibStatusTimerCb+0x5c>
4001f738:	e59f0038 	ldr	r0, [pc, #56]	; 4001f778 <CyU3PUibStatusTimerCb+0x68>
4001f73c:	e5900000 	ldr	r0, [r0]
4001f740:	e3500000 	cmp	r0, #0
4001f744:	0a000008 	beq	4001f76c <CyU3PUibStatusTimerCb+0x5c>
4001f748:	e3a01000 	mov	r1, #0
4001f74c:	e1a00001 	mov	r0, r1
4001f750:	ebfff77c 	bl	4001d548 <CyU3PUsbSendErdy>
4001f754:	e3a02000 	mov	r2, #0
4001f758:	e3a01064 	mov	r1, #100	; 0x64
4001f75c:	e59f0018 	ldr	r0, [pc, #24]	; 4001f77c <CyU3PUibStatusTimerCb+0x6c>
4001f760:	ebffac61 	bl	4000a8ec <_txe_timer_change>
4001f764:	e59f0010 	ldr	r0, [pc, #16]	; 4001f77c <CyU3PUibStatusTimerCb+0x6c>
4001f768:	ebffac4f 	bl	4000a8ac <_txe_timer_activate>
4001f76c:	e8bd8010 	pop	{r4, pc}
4001f770:	40030db4 	.word	0x40030db4
4001f774:	40031d40 	.word	0x40031d40
4001f778:	40030db8 	.word	0x40030db8
4001f77c:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001f780 <CyU3PUibThreadEntry>:
4001f780:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001f784:	e3a05000 	mov	r5, #0
4001f788:	e59f505c 	ldr	r5, [pc, #92]	; 4001f7ec <CyU3PUibThreadEntry+0x6c>
4001f78c:	e3a00001 	mov	r0, #1
4001f790:	e59f1058 	ldr	r1, [pc, #88]	; 4001f7f0 <CyU3PUibThreadEntry+0x70>
4001f794:	e5810000 	str	r0, [r1]
4001f798:	e3a02020 	mov	r2, #32
4001f79c:	e3a01000 	mov	r1, #0
4001f7a0:	e59f004c 	ldr	r0, [pc, #76]	; 4001f7f4 <CyU3PUibThreadEntry+0x74>
4001f7a4:	ebff8fc3 	bl	400036b8 <CyU3PMemSet>
4001f7a8:	ea00000e 	b	4001f7e8 <CyU3PUibThreadEntry+0x68>
4001f7ac:	e3e03000 	mvn	r3, #0
4001f7b0:	e58d3000 	str	r3, [sp]
4001f7b4:	e28d3004 	add	r3, sp, #4
4001f7b8:	e3a02001 	mov	r2, #1
4001f7bc:	e1a01005 	mov	r1, r5
4001f7c0:	e59f0030 	ldr	r0, [pc, #48]	; 4001f7f8 <CyU3PUibThreadEntry+0x78>
4001f7c4:	ebffa932 	bl	40009c94 <_txe_event_flags_get>
4001f7c8:	e1a04000 	mov	r4, r0
4001f7cc:	e3540000 	cmp	r4, #0
4001f7d0:	0a000000 	beq	4001f7d8 <CyU3PUibThreadEntry+0x58>
4001f7d4:	ea000003 	b	4001f7e8 <CyU3PUibThreadEntry+0x68>
4001f7d8:	e59d0004 	ldr	r0, [sp, #4]
4001f7dc:	eb0002a1 	bl	40020268 <CyU3PUsbHandleEvents>
4001f7e0:	ebffac14 	bl	4000a838 <_txe_thread_relinquish>
4001f7e4:	e1a00000 	nop			; (mov r0, r0)
4001f7e8:	eaffffef 	b	4001f7ac <CyU3PUibThreadEntry+0x2c>
4001f7ec:	073fbfe1 	.word	0x073fbfe1
4001f7f0:	40030d64 	.word	0x40030d64
4001f7f4:	40032680 	.word	0x40032680
4001f7f8:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001f7fc <CyU3PUibVbusChangeHandler>:
4001f7fc:	e92d4010 	push	{r4, lr}
4001f800:	e3a00000 	mov	r0, #0
4001f804:	e59f114c 	ldr	r1, [pc, #332]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f808:	e5810060 	str	r0, [r1, #96]	; 0x60
4001f80c:	e59f0148 	ldr	r0, [pc, #328]	; 4001f95c <CyU3PUibVbusChangeHandler+0x160>
4001f810:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f814:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f818:	e1100001 	tst	r0, r1
4001f81c:	0a00000b 	beq	4001f850 <CyU3PUibVbusChangeHandler+0x54>
4001f820:	e3a00002 	mov	r0, #2
4001f824:	eb000051 	bl	4001f970 <CyU3PUsbAddToEventLog>
4001f828:	e59f0130 	ldr	r0, [pc, #304]	; 4001f960 <CyU3PUibVbusChangeHandler+0x164>
4001f82c:	e5900000 	ldr	r0, [r0]
4001f830:	e3500000 	cmp	r0, #0
4001f834:	0a000010 	beq	4001f87c <CyU3PUibVbusChangeHandler+0x80>
4001f838:	e3a01000 	mov	r1, #0
4001f83c:	e3a0000b 	mov	r0, #11
4001f840:	e59f2118 	ldr	r2, [pc, #280]	; 4001f960 <CyU3PUibVbusChangeHandler+0x164>
4001f844:	e5922000 	ldr	r2, [r2]
4001f848:	e12fff32 	blx	r2
4001f84c:	ea00000a 	b	4001f87c <CyU3PUibVbusChangeHandler+0x80>
4001f850:	e3a00001 	mov	r0, #1
4001f854:	eb000045 	bl	4001f970 <CyU3PUsbAddToEventLog>
4001f858:	e59f0100 	ldr	r0, [pc, #256]	; 4001f960 <CyU3PUibVbusChangeHandler+0x164>
4001f85c:	e5900000 	ldr	r0, [r0]
4001f860:	e3500000 	cmp	r0, #0
4001f864:	0a000004 	beq	4001f87c <CyU3PUibVbusChangeHandler+0x80>
4001f868:	e3a01000 	mov	r1, #0
4001f86c:	e3a0000c 	mov	r0, #12
4001f870:	e59f20e8 	ldr	r2, [pc, #232]	; 4001f960 <CyU3PUibVbusChangeHandler+0x164>
4001f874:	e5922000 	ldr	r2, [r2]
4001f878:	e12fff32 	blx	r2
4001f87c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001f95c <CyU3PUibVbusChangeHandler+0x160>
4001f880:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f884:	e59f10cc 	ldr	r1, [pc, #204]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f888:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f88c:	e1100001 	tst	r0, r1
4001f890:	0a000022 	beq	4001f920 <CyU3PUibVbusChangeHandler+0x124>
4001f894:	e59f00bc 	ldr	r0, [pc, #188]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f898:	e5d00008 	ldrb	r0, [r0, #8]
4001f89c:	e3500005 	cmp	r0, #5
4001f8a0:	ba000000 	blt	4001f8a8 <CyU3PUibVbusChangeHandler+0xac>
4001f8a4:	eb0008d6 	bl	40021c04 <HandleVbusOffEvent>
4001f8a8:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f8ac:	e5d00008 	ldrb	r0, [r0, #8]
4001f8b0:	e3500004 	cmp	r0, #4
4001f8b4:	1a00001e 	bne	4001f934 <CyU3PUibVbusChangeHandler+0x138>
4001f8b8:	e59f0098 	ldr	r0, [pc, #152]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f8bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f8c0:	e59f1090 	ldr	r1, [pc, #144]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f8c4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001f8c8:	e2810000 	add	r0, r1, #0
4001f8cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f8d0:	e3500000 	cmp	r0, #0
4001f8d4:	0a00000a 	beq	4001f904 <CyU3PUibVbusChangeHandler+0x108>
4001f8d8:	e3a00000 	mov	r0, #0
4001f8dc:	e59f1080 	ldr	r1, [pc, #128]	; 4001f964 <CyU3PUibVbusChangeHandler+0x168>
4001f8e0:	e5810014 	str	r0, [r1, #20]
4001f8e4:	e59f107c 	ldr	r1, [pc, #124]	; 4001f968 <CyU3PUibVbusChangeHandler+0x16c>
4001f8e8:	e5810000 	str	r0, [r1]
4001f8ec:	e59f1078 	ldr	r1, [pc, #120]	; 4001f96c <CyU3PUibVbusChangeHandler+0x170>
4001f8f0:	e5810000 	str	r0, [r1]
4001f8f4:	e59f105c 	ldr	r1, [pc, #92]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f8f8:	e5810054 	str	r0, [r1, #84]	; 0x54
4001f8fc:	e5810050 	str	r0, [r1, #80]	; 0x50
4001f900:	e5810058 	str	r0, [r1, #88]	; 0x58
4001f904:	e59f104c 	ldr	r1, [pc, #76]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f908:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001f90c:	ebfff593 	bl	4001cf60 <CyU3PUsbPhyEnable>
4001f910:	e3a00005 	mov	r0, #5
4001f914:	e59f103c 	ldr	r1, [pc, #60]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f918:	e5c10008 	strb	r0, [r1, #8]
4001f91c:	ea000004 	b	4001f934 <CyU3PUibVbusChangeHandler+0x138>
4001f920:	e59f0030 	ldr	r0, [pc, #48]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f924:	e5d00008 	ldrb	r0, [r0, #8]
4001f928:	e3500005 	cmp	r0, #5
4001f92c:	ba000000 	blt	4001f934 <CyU3PUibVbusChangeHandler+0x138>
4001f930:	eb0008b3 	bl	40021c04 <HandleVbusOffEvent>
4001f934:	ebfff0df 	bl	4001bcb8 <CyU3POtgIsStarted>
4001f938:	e3500000 	cmp	r0, #0
4001f93c:	0a000000 	beq	4001f944 <CyU3PUibVbusChangeHandler+0x148>
4001f940:	ebfff4e3 	bl	4001ccd4 <CyU3PUsbOtgVbusChangeHandler>
4001f944:	e59f000c 	ldr	r0, [pc, #12]	; 4001f958 <CyU3PUibVbusChangeHandler+0x15c>
4001f948:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001f94c:	e59f1008 	ldr	r1, [pc, #8]	; 4001f95c <CyU3PUibVbusChangeHandler+0x160>
4001f950:	e5810038 	str	r0, [r1, #56]	; 0x38
4001f954:	e8bd8010 	pop	{r4, pc}
4001f958:	40031d40 	.word	0x40031d40
4001f95c:	e0051000 	.word	0xe0051000
4001f960:	40030da0 	.word	0x40030da0
4001f964:	e0033000 	.word	0xe0033000
4001f968:	40030d88 	.word	0x40030d88
4001f96c:	40030d8c 	.word	0x40030d8c

Disassembly of section i.CyU3PUsbAddToEventLog:

4001f970 <CyU3PUsbAddToEventLog>:
4001f970:	e59f1058 	ldr	r1, [pc, #88]	; 4001f9d0 <CyU3PUsbAddToEventLog+0x60>
4001f974:	e5911000 	ldr	r1, [r1]
4001f978:	e3510000 	cmp	r1, #0
4001f97c:	0a000012 	beq	4001f9cc <CyU3PUsbAddToEventLog+0x5c>
4001f980:	e59f104c 	ldr	r1, [pc, #76]	; 4001f9d4 <CyU3PUsbAddToEventLog+0x64>
4001f984:	e5911000 	ldr	r1, [r1]
4001f988:	e59f2044 	ldr	r2, [pc, #68]	; 4001f9d4 <CyU3PUsbAddToEventLog+0x64>
4001f98c:	e5922000 	ldr	r2, [r2]
4001f990:	e2822001 	add	r2, r2, #1
4001f994:	e59f3038 	ldr	r3, [pc, #56]	; 4001f9d4 <CyU3PUsbAddToEventLog+0x64>
4001f998:	e5832000 	str	r2, [r3]
4001f99c:	e59f202c 	ldr	r2, [pc, #44]	; 4001f9d0 <CyU3PUsbAddToEventLog+0x60>
4001f9a0:	e5922000 	ldr	r2, [r2]
4001f9a4:	e7c20001 	strb	r0, [r2, r1]
4001f9a8:	e2831000 	add	r1, r3, #0
4001f9ac:	e5911000 	ldr	r1, [r1]
4001f9b0:	e59f2020 	ldr	r2, [pc, #32]	; 4001f9d8 <CyU3PUsbAddToEventLog+0x68>
4001f9b4:	e5922000 	ldr	r2, [r2]
4001f9b8:	e1510002 	cmp	r1, r2
4001f9bc:	3a000002 	bcc	4001f9cc <CyU3PUsbAddToEventLog+0x5c>
4001f9c0:	e3a01000 	mov	r1, #0
4001f9c4:	e2832000 	add	r2, r3, #0
4001f9c8:	e5821000 	str	r1, [r2]
4001f9cc:	e12fff1e 	bx	lr
4001f9d0:	40030d94 	.word	0x40030d94
4001f9d4:	40030d98 	.word	0x40030d98
4001f9d8:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001f9dc <CyU3PUsbCheckUsb3Disconnect>:
4001f9dc:	e92d4070 	push	{r4, r5, r6, lr}
4001f9e0:	e3a04e19 	mov	r4, #400	; 0x190
4001f9e4:	e3a06002 	mov	r6, #2
4001f9e8:	e59f01fc 	ldr	r0, [pc, #508]	; 4001fbec <CyU3PUsbCheckUsb3Disconnect+0x210>
4001f9ec:	e1d000b0 	ldrh	r0, [r0]
4001f9f0:	e3500001 	cmp	r0, #1
4001f9f4:	da000008 	ble	4001fa1c <CyU3PUsbCheckUsb3Disconnect+0x40>
4001f9f8:	e59f01ec 	ldr	r0, [pc, #492]	; 4001fbec <CyU3PUsbCheckUsb3Disconnect+0x210>
4001f9fc:	e1d010b0 	ldrh	r1, [r0]
4001fa00:	e1a00004 	mov	r0, r4
4001fa04:	ebffc418 	bl	40010a6c <__aeabi_idivmod>
4001fa08:	e1a04800 	lsl	r4, r0, #16
4001fa0c:	e1a04824 	lsr	r4, r4, #16
4001fa10:	e2840001 	add	r0, r4, #1
4001fa14:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fa18:	e3a06001 	mov	r6, #1
4001fa1c:	e59f01cc 	ldr	r0, [pc, #460]	; 4001fbf0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fa20:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fa24:	e200503f 	and	r5, r0, #63	; 0x3f
4001fa28:	e3550010 	cmp	r5, #16
4001fa2c:	ba000004 	blt	4001fa44 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa30:	e3550017 	cmp	r5, #23
4001fa34:	ca000002 	bgt	4001fa44 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa38:	e3a00000 	mov	r0, #0
4001fa3c:	e59f11b0 	ldr	r1, [pc, #432]	; 4001fbf4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa40:	e5810000 	str	r0, [r1]
4001fa44:	e59f01a8 	ldr	r0, [pc, #424]	; 4001fbf4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa48:	e5900000 	ldr	r0, [r0]
4001fa4c:	e3500000 	cmp	r0, #0
4001fa50:	1a000000 	bne	4001fa58 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fa54:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fa58:	ea000010 	b	4001faa0 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa5c:	e1a00006 	mov	r0, r6
4001fa60:	ebffa3c3 	bl	40008974 <_tx_thread_sleep>
4001fa64:	e59f0184 	ldr	r0, [pc, #388]	; 4001fbf0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fa68:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fa6c:	e200503f 	and	r5, r0, #63	; 0x3f
4001fa70:	e59f017c 	ldr	r0, [pc, #380]	; 4001fbf4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa74:	e5900000 	ldr	r0, [r0]
4001fa78:	e3500000 	cmp	r0, #0
4001fa7c:	0a000003 	beq	4001fa90 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fa80:	e3550010 	cmp	r5, #16
4001fa84:	ba000005 	blt	4001faa0 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa88:	e3550017 	cmp	r5, #23
4001fa8c:	ca000003 	bgt	4001faa0 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa90:	e3a00000 	mov	r0, #0
4001fa94:	e59f1158 	ldr	r1, [pc, #344]	; 4001fbf4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa98:	e5810000 	str	r0, [r1]
4001fa9c:	ea000004 	b	4001fab4 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001faa0:	e1b00004 	movs	r0, r4
4001faa4:	e2441001 	sub	r1, r4, #1
4001faa8:	e1a04801 	lsl	r4, r1, #16
4001faac:	e1a04824 	lsr	r4, r4, #16
4001fab0:	1affffe9 	bne	4001fa5c <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fab4:	e1a00000 	nop			; (mov r0, r0)
4001fab8:	e59f0134 	ldr	r0, [pc, #308]	; 4001fbf4 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fabc:	e5900000 	ldr	r0, [r0]
4001fac0:	e3500000 	cmp	r0, #0
4001fac4:	0a000047 	beq	4001fbe8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fac8:	e59f0128 	ldr	r0, [pc, #296]	; 4001fbf8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001facc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fad0:	e3100a02 	tst	r0, #8192	; 0x2000
4001fad4:	0a000020 	beq	4001fb5c <CyU3PUsbCheckUsb3Disconnect+0x180>
4001fad8:	e59f0118 	ldr	r0, [pc, #280]	; 4001fbf8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fadc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fae0:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001fae4:	e59f110c 	ldr	r1, [pc, #268]	; 4001fbf8 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fae8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001faec:	e3a00002 	mov	r0, #2
4001faf0:	ebffce52 	bl	40013440 <CyU3PBusyWait>
4001faf4:	e59f0100 	ldr	r0, [pc, #256]	; 4001fbfc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001faf8:	e5900004 	ldr	r0, [r0, #4]
4001fafc:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fb00:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fbfc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb04:	e5810004 	str	r0, [r1, #4]
4001fb08:	e3a00001 	mov	r0, #1
4001fb0c:	ebffce4b 	bl	40013440 <CyU3PBusyWait>
4001fb10:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fbf0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb14:	e590001c 	ldr	r0, [r0, #28]
4001fb18:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fb1c:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fbf0 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb20:	e581001c 	str	r0, [r1, #28]
4001fb24:	e59f00d4 	ldr	r0, [pc, #212]	; 4001fc00 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001fb28:	e5900000 	ldr	r0, [r0]
4001fb2c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fb30:	e3a00001 	mov	r0, #1
4001fb34:	ebffce41 	bl	40013440 <CyU3PBusyWait>
4001fb38:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fbfc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb3c:	e5900004 	ldr	r0, [r0, #4]
4001fb40:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001fb44:	e59f10b0 	ldr	r1, [pc, #176]	; 4001fbfc <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb48:	e5810004 	str	r0, [r1, #4]
4001fb4c:	e3a01000 	mov	r1, #0
4001fb50:	e3a00002 	mov	r0, #2
4001fb54:	ebfff1d9 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4001fb58:	ea000022 	b	4001fbe8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fb5c:	e59f00a0 	ldr	r0, [pc, #160]	; 4001fc04 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fb60:	e5900000 	ldr	r0, [r0]
4001fb64:	e3500000 	cmp	r0, #0
4001fb68:	0a000007 	beq	4001fb8c <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001fb6c:	e3a00000 	mov	r0, #0
4001fb70:	e59f108c 	ldr	r1, [pc, #140]	; 4001fc04 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fb74:	e5810000 	str	r0, [r1]
4001fb78:	e3a00001 	mov	r0, #1
4001fb7c:	ebfff481 	bl	4001cd88 <CyU3PUsbPhyDisable>
4001fb80:	e3a00001 	mov	r0, #1
4001fb84:	ebfff4f5 	bl	4001cf60 <CyU3PUsbPhyEnable>
4001fb88:	eaffffb1 	b	4001fa54 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fb8c:	e59f0074 	ldr	r0, [pc, #116]	; 4001fc08 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fb90:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001fb94:	e3500000 	cmp	r0, #0
4001fb98:	0a000011 	beq	4001fbe4 <CyU3PUsbCheckUsb3Disconnect+0x208>
4001fb9c:	e3a00001 	mov	r0, #1
4001fba0:	ebfff478 	bl	4001cd88 <CyU3PUsbPhyDisable>
4001fba4:	e3a00003 	mov	r0, #3
4001fba8:	e59f1058 	ldr	r1, [pc, #88]	; 4001fc08 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fbac:	e5c10008 	strb	r0, [r1, #8]
4001fbb0:	e3a00000 	mov	r0, #0
4001fbb4:	e5c10009 	strb	r0, [r1, #9]
4001fbb8:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fbbc:	e59f0048 	ldr	r0, [pc, #72]	; 4001fc0c <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fbc0:	e5900000 	ldr	r0, [r0]
4001fbc4:	e3500000 	cmp	r0, #0
4001fbc8:	0a000006 	beq	4001fbe8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fbcc:	e3a01000 	mov	r1, #0
4001fbd0:	e3a00014 	mov	r0, #20
4001fbd4:	e59f2030 	ldr	r2, [pc, #48]	; 4001fc0c <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fbd8:	e5922000 	ldr	r2, [r2]
4001fbdc:	e12fff32 	blx	r2
4001fbe0:	ea000000 	b	4001fbe8 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fbe4:	eb00008e 	bl	4001fe24 <CyU3PUsbFallBackToUsb2>
4001fbe8:	eaffff99 	b	4001fa54 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fbec:	40030dbc 	.word	0x40030dbc
4001fbf0:	e0033000 	.word	0xe0033000
4001fbf4:	40030d68 	.word	0x40030d68
4001fbf8:	e0031000 	.word	0xe0031000
4001fbfc:	e0030000 	.word	0xe0030000
4001fc00:	40030c5c 	.word	0x40030c5c
4001fc04:	40030d78 	.word	0x40030d78
4001fc08:	40031d40 	.word	0x40031d40
4001fc0c:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbDescInit:

4001fc10 <CyU3PUsbDescInit>:
4001fc10:	e92d4010 	push	{r4, lr}
4001fc14:	e3a02074 	mov	r2, #116	; 0x74
4001fc18:	e3a01000 	mov	r1, #0
4001fc1c:	e59f0004 	ldr	r0, [pc, #4]	; 4001fc28 <CyU3PUsbDescInit+0x18>
4001fc20:	ebff8ea4 	bl	400036b8 <CyU3PMemSet>
4001fc24:	e8bd8010 	pop	{r4, pc}
4001fc28:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

4001fc2c <CyU3PUsbEpPrepare>:
4001fc2c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fc30:	e1a04000 	mov	r4, r0
4001fc34:	e3a05001 	mov	r5, #1
4001fc38:	ea000061 	b	4001fdc4 <CyU3PUsbEpPrepare+0x198>
4001fc3c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001fdfc <CyU3PUsbEpPrepare+0x1d0>
4001fc40:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc44:	e3100901 	tst	r0, #16384	; 0x4000
4001fc48:	0a000029 	beq	4001fcf4 <CyU3PUsbEpPrepare+0xc8>
4001fc4c:	e0850085 	add	r0, r5, r5, lsl #1
4001fc50:	e59f11a8 	ldr	r1, [pc, #424]	; 4001fe00 <CyU3PUsbEpPrepare+0x1d4>
4001fc54:	e0810100 	add	r0, r1, r0, lsl #2
4001fc58:	e1d070b0 	ldrh	r7, [r0]
4001fc5c:	e59f0198 	ldr	r0, [pc, #408]	; 4001fdfc <CyU3PUsbEpPrepare+0x1d0>
4001fc60:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc64:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fc68:	e1a06520 	lsr	r6, r0, #10
4001fc6c:	e2440001 	sub	r0, r4, #1
4001fc70:	e0800080 	add	r0, r0, r0, lsl #1
4001fc74:	e59f1188 	ldr	r1, [pc, #392]	; 4001fe04 <CyU3PUsbEpPrepare+0x1d8>
4001fc78:	e0810100 	add	r0, r1, r0, lsl #2
4001fc7c:	e2461001 	sub	r1, r6, #1
4001fc80:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fc84:	e1570008 	cmp	r7, r8
4001fc88:	8a000001 	bhi	4001fc94 <CyU3PUsbEpPrepare+0x68>
4001fc8c:	e3570000 	cmp	r7, #0
4001fc90:	1a000000 	bne	4001fc98 <CyU3PUsbEpPrepare+0x6c>
4001fc94:	e1a07008 	mov	r7, r8
4001fc98:	e3540003 	cmp	r4, #3
4001fc9c:	1a000005 	bne	4001fcb8 <CyU3PUsbEpPrepare+0x8c>
4001fca0:	e59f0160 	ldr	r0, [pc, #352]	; 4001fe08 <CyU3PUsbEpPrepare+0x1dc>
4001fca4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fca8:	e3800001 	orr	r0, r0, #1
4001fcac:	e59f1154 	ldr	r1, [pc, #340]	; 4001fe08 <CyU3PUsbEpPrepare+0x1dc>
4001fcb0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fcb4:	ea000008 	b	4001fcdc <CyU3PUsbEpPrepare+0xb0>
4001fcb8:	e59f013c 	ldr	r0, [pc, #316]	; 4001fdfc <CyU3PUsbEpPrepare+0x1d0>
4001fcbc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fcc0:	e1a00520 	lsr	r0, r0, #10
4001fcc4:	e1a00500 	lsl	r0, r0, #10
4001fcc8:	e1a01b07 	lsl	r1, r7, #22
4001fccc:	e1a01b21 	lsr	r1, r1, #22
4001fcd0:	e1800001 	orr	r0, r0, r1
4001fcd4:	e59f1120 	ldr	r1, [pc, #288]	; 4001fdfc <CyU3PUsbEpPrepare+0x1d0>
4001fcd8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fcdc:	e59f0128 	ldr	r0, [pc, #296]	; 4001fe0c <CyU3PUsbEpPrepare+0x1e0>
4001fce0:	e7807105 	str	r7, [r0, r5, lsl #2]
4001fce4:	e3850080 	orr	r0, r5, #128	; 0x80
4001fce8:	e3a02001 	mov	r2, #1
4001fcec:	e3a01000 	mov	r1, #0
4001fcf0:	ebfff7c9 	bl	4001dc1c <CyU3PUsbStall>
4001fcf4:	e59f0114 	ldr	r0, [pc, #276]	; 4001fe10 <CyU3PUsbEpPrepare+0x1e4>
4001fcf8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fcfc:	e3100901 	tst	r0, #16384	; 0x4000
4001fd00:	0a00002d 	beq	4001fdbc <CyU3PUsbEpPrepare+0x190>
4001fd04:	e0850085 	add	r0, r5, r5, lsl #1
4001fd08:	e59f1104 	ldr	r1, [pc, #260]	; 4001fe14 <CyU3PUsbEpPrepare+0x1e8>
4001fd0c:	e0810100 	add	r0, r1, r0, lsl #2
4001fd10:	e1d070b0 	ldrh	r7, [r0]
4001fd14:	e59f00f4 	ldr	r0, [pc, #244]	; 4001fe10 <CyU3PUsbEpPrepare+0x1e4>
4001fd18:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd1c:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fd20:	e1a06520 	lsr	r6, r0, #10
4001fd24:	e2440001 	sub	r0, r4, #1
4001fd28:	e0800080 	add	r0, r0, r0, lsl #1
4001fd2c:	e59f10d0 	ldr	r1, [pc, #208]	; 4001fe04 <CyU3PUsbEpPrepare+0x1d8>
4001fd30:	e0810100 	add	r0, r1, r0, lsl #2
4001fd34:	e2461001 	sub	r1, r6, #1
4001fd38:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fd3c:	e1570008 	cmp	r7, r8
4001fd40:	8a000001 	bhi	4001fd4c <CyU3PUsbEpPrepare+0x120>
4001fd44:	e3570000 	cmp	r7, #0
4001fd48:	1a000000 	bne	4001fd50 <CyU3PUsbEpPrepare+0x124>
4001fd4c:	e1a07008 	mov	r7, r8
4001fd50:	e3540003 	cmp	r4, #3
4001fd54:	1a000005 	bne	4001fd70 <CyU3PUsbEpPrepare+0x144>
4001fd58:	e59f00b8 	ldr	r0, [pc, #184]	; 4001fe18 <CyU3PUsbEpPrepare+0x1ec>
4001fd5c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd60:	e3800001 	orr	r0, r0, #1
4001fd64:	e59f10ac 	ldr	r1, [pc, #172]	; 4001fe18 <CyU3PUsbEpPrepare+0x1ec>
4001fd68:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd6c:	ea000008 	b	4001fd94 <CyU3PUsbEpPrepare+0x168>
4001fd70:	e59f0098 	ldr	r0, [pc, #152]	; 4001fe10 <CyU3PUsbEpPrepare+0x1e4>
4001fd74:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd78:	e1a00520 	lsr	r0, r0, #10
4001fd7c:	e1a00500 	lsl	r0, r0, #10
4001fd80:	e1a01b07 	lsl	r1, r7, #22
4001fd84:	e1a01b21 	lsr	r1, r1, #22
4001fd88:	e1800001 	orr	r0, r0, r1
4001fd8c:	e59f107c 	ldr	r1, [pc, #124]	; 4001fe10 <CyU3PUsbEpPrepare+0x1e4>
4001fd90:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd94:	e59f0080 	ldr	r0, [pc, #128]	; 4001fe1c <CyU3PUsbEpPrepare+0x1f0>
4001fd98:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd9c:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001fda0:	e1800007 	orr	r0, r0, r7
4001fda4:	e59f1070 	ldr	r1, [pc, #112]	; 4001fe1c <CyU3PUsbEpPrepare+0x1f0>
4001fda8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fdac:	e3a02001 	mov	r2, #1
4001fdb0:	e3a01000 	mov	r1, #0
4001fdb4:	e1a00005 	mov	r0, r5
4001fdb8:	ebfff797 	bl	4001dc1c <CyU3PUsbStall>
4001fdbc:	e2850001 	add	r0, r5, #1
4001fdc0:	e20050ff 	and	r5, r0, #255	; 0xff
4001fdc4:	e3550010 	cmp	r5, #16
4001fdc8:	baffff9b 	blt	4001fc3c <CyU3PUsbEpPrepare+0x10>
4001fdcc:	e3540003 	cmp	r4, #3
4001fdd0:	1a000005 	bne	4001fdec <CyU3PUsbEpPrepare+0x1c0>
4001fdd4:	e59f1044 	ldr	r1, [pc, #68]	; 4001fe20 <CyU3PUsbEpPrepare+0x1f4>
4001fdd8:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4001fddc:	e3510000 	cmp	r1, #0
4001fde0:	0a000001 	beq	4001fdec <CyU3PUsbEpPrepare+0x1c0>
4001fde4:	e3a01001 	mov	r1, #1
4001fde8:	ea000000 	b	4001fdf0 <CyU3PUsbEpPrepare+0x1c4>
4001fdec:	e3a01000 	mov	r1, #0
4001fdf0:	e1a00001 	mov	r0, r1
4001fdf4:	eb000854 	bl	40021f4c <CyFx3UsbDmaPrefetchEnable>
4001fdf8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001fdfc:	e0031418 	.word	0xe0031418
4001fe00:	40031bb4 	.word	0x40031bb4
4001fe04:	40011d88 	.word	0x40011d88
4001fe08:	e0033500 	.word	0xe0033500
4001fe0c:	e0031c40 	.word	0xe0031c40
4001fe10:	e0031498 	.word	0xe0031498
4001fe14:	40031c74 	.word	0x40031c74
4001fe18:	e0033600 	.word	0xe0033600
4001fe1c:	e0031c80 	.word	0xe0031c80
4001fe20:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

4001fe24 <CyU3PUsbFallBackToUsb2>:
4001fe24:	e92d4010 	push	{r4, lr}
4001fe28:	e59f0234 	ldr	r0, [pc, #564]	; 40020064 <CyU3PUsbFallBackToUsb2+0x240>
4001fe2c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fe30:	e3500000 	cmp	r0, #0
4001fe34:	0a000006 	beq	4001fe54 <CyU3PUsbFallBackToUsb2+0x30>
4001fe38:	e59f0228 	ldr	r0, [pc, #552]	; 40020068 <CyU3PUsbFallBackToUsb2+0x244>
4001fe3c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fe40:	e59f121c 	ldr	r1, [pc, #540]	; 40020064 <CyU3PUsbFallBackToUsb2+0x240>
4001fe44:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fe48:	e1100001 	tst	r0, r1
4001fe4c:	1a000000 	bne	4001fe54 <CyU3PUsbFallBackToUsb2+0x30>
4001fe50:	e8bd8010 	pop	{r4, pc}
4001fe54:	e3a00050 	mov	r0, #80	; 0x50
4001fe58:	ebfffec4 	bl	4001f970 <CyU3PUsbAddToEventLog>
4001fe5c:	eb0007f1 	bl	40021e28 <CyU3PVicDisableAllInterrupts>
4001fe60:	e1a04000 	mov	r4, r0
4001fe64:	e3a01000 	mov	r1, #0
4001fe68:	e59f01fc 	ldr	r0, [pc, #508]	; 4002006c <CyU3PUsbFallBackToUsb2+0x248>
4001fe6c:	eb000861 	bl	40021ff8 <CyFx3UsbWritePhyReg>
4001fe70:	e1a00004 	mov	r0, r4
4001fe74:	eb0007f9 	bl	40021e60 <CyU3PVicEnableInterrupts>
4001fe78:	e3a00a01 	mov	r0, #4096	; 0x1000
4001fe7c:	e59f11ec 	ldr	r1, [pc, #492]	; 40020070 <CyU3PUsbFallBackToUsb2+0x24c>
4001fe80:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fe84:	e59f01d8 	ldr	r0, [pc, #472]	; 40020064 <CyU3PUsbFallBackToUsb2+0x240>
4001fe88:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4001fe8c:	e2800001 	add	r0, r0, #1
4001fe90:	e59f11cc 	ldr	r1, [pc, #460]	; 40020064 <CyU3PUsbFallBackToUsb2+0x240>
4001fe94:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fe98:	e3a00000 	mov	r0, #0
4001fe9c:	e59f11d0 	ldr	r1, [pc, #464]	; 40020074 <CyU3PUsbFallBackToUsb2+0x250>
4001fea0:	e5810000 	str	r0, [r1]
4001fea4:	e59f01cc 	ldr	r0, [pc, #460]	; 40020078 <CyU3PUsbFallBackToUsb2+0x254>
4001fea8:	ebffab23 	bl	4000ab3c <_txe_timer_deactivate>
4001feac:	e3a00002 	mov	r0, #2
4001feb0:	ebffcd62 	bl	40013440 <CyU3PBusyWait>
4001feb4:	e3a01002 	mov	r1, #2
4001feb8:	e1a00001 	mov	r0, r1
4001febc:	ebfff0ff 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4001fec0:	e3a00002 	mov	r0, #2
4001fec4:	ebffcd5d 	bl	40013440 <CyU3PBusyWait>
4001fec8:	e59f01ac 	ldr	r0, [pc, #428]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
4001fecc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fed0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001fed4:	e59f11a0 	ldr	r1, [pc, #416]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
4001fed8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fedc:	e3a00002 	mov	r0, #2
4001fee0:	ebffcd56 	bl	40013440 <CyU3PBusyWait>
4001fee4:	e59f0190 	ldr	r0, [pc, #400]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
4001fee8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001feec:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001fef0:	e59f1184 	ldr	r1, [pc, #388]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
4001fef4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fef8:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001fefc:	e5900004 	ldr	r0, [r0, #4]
4001ff00:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001ff04:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001ff08:	e5810004 	str	r0, [r1, #4]
4001ff0c:	e2810a03 	add	r0, r1, #12288	; 0x3000
4001ff10:	e590001c 	ldr	r0, [r0, #28]
4001ff14:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ff18:	e2811a03 	add	r1, r1, #12288	; 0x3000
4001ff1c:	e581001c 	str	r0, [r1, #28]
4001ff20:	e59f0158 	ldr	r0, [pc, #344]	; 40020080 <CyU3PUsbFallBackToUsb2+0x25c>
4001ff24:	e5900000 	ldr	r0, [r0]
4001ff28:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ff2c:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
4001ff30:	e5900000 	ldr	r0, [r0]
4001ff34:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001ff38:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
4001ff3c:	e5810000 	str	r0, [r1]
4001ff40:	e3a00005 	mov	r0, #5
4001ff44:	ebffcd3d 	bl	40013440 <CyU3PBusyWait>
4001ff48:	e59f0134 	ldr	r0, [pc, #308]	; 40020084 <CyU3PUsbFallBackToUsb2+0x260>
4001ff4c:	e5900000 	ldr	r0, [r0]
4001ff50:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001ff54:	e59f1128 	ldr	r1, [pc, #296]	; 40020084 <CyU3PUsbFallBackToUsb2+0x260>
4001ff58:	e5810000 	str	r0, [r1]
4001ff5c:	e3a0000a 	mov	r0, #10
4001ff60:	ebffcd36 	bl	40013440 <CyU3PBusyWait>
4001ff64:	e3e00000 	mvn	r0, #0
4001ff68:	e59f110c 	ldr	r1, [pc, #268]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
4001ff6c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ff70:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001ff74:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ff78:	e59f0108 	ldr	r0, [pc, #264]	; 40020088 <CyU3PUsbFallBackToUsb2+0x264>
4001ff7c:	ebffd869 	bl	40016128 <CyU3PDmaChannelReset>
4001ff80:	e59f0104 	ldr	r0, [pc, #260]	; 4002008c <CyU3PUsbFallBackToUsb2+0x268>
4001ff84:	ebffd867 	bl	40016128 <CyU3PDmaChannelReset>
4001ff88:	e3a00000 	mov	r0, #0
4001ff8c:	e59f10dc 	ldr	r1, [pc, #220]	; 40020070 <CyU3PUsbFallBackToUsb2+0x24c>
4001ff90:	e5810008 	str	r0, [r1, #8]
4001ff94:	e3e00000 	mvn	r0, #0
4001ff98:	e5810004 	str	r0, [r1, #4]
4001ff9c:	e3a00000 	mov	r0, #0
4001ffa0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001ffa4:	e3e00000 	mvn	r0, #0
4001ffa8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ffac:	e1c10820 	bic	r0, r1, r0, lsr #16
4001ffb0:	e5900004 	ldr	r0, [r0, #4]
4001ffb4:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001ffb8:	e2411a03 	sub	r1, r1, #12288	; 0x3000
4001ffbc:	e5810004 	str	r0, [r1, #4]
4001ffc0:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001ffc4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001ffc8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ffcc:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001ffd0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001ffd4:	e1a00001 	mov	r0, r1
4001ffd8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001ffdc:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ffe0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001ffe4:	e3a00001 	mov	r0, #1
4001ffe8:	e59f1074 	ldr	r1, [pc, #116]	; 40020064 <CyU3PUsbFallBackToUsb2+0x240>
4001ffec:	e5c10009 	strb	r0, [r1, #9]
4001fff0:	e3a00000 	mov	r0, #0
4001fff4:	e5810044 	str	r0, [r1, #68]	; 0x44
4001fff8:	e3a00501 	mov	r0, #4194304	; 0x400000
4001fffc:	e59f108c 	ldr	r1, [pc, #140]	; 40020090 <CyU3PUsbFallBackToUsb2+0x26c>
40020000:	e5810074 	str	r0, [r1, #116]	; 0x74
40020004:	e3a00002 	mov	r0, #2
40020008:	ebffcd0c 	bl	40013440 <CyU3PBusyWait>
4002000c:	e59f0068 	ldr	r0, [pc, #104]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
40020010:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020014:	e3800a02 	orr	r0, r0, #8192	; 0x2000
40020018:	e59f105c 	ldr	r1, [pc, #92]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
4002001c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020020:	e3a00064 	mov	r0, #100	; 0x64
40020024:	ebffcd05 	bl	40013440 <CyU3PBusyWait>
40020028:	eb0007a0 	bl	40021eb0 <CyFx3Usb2PhySetup>
4002002c:	e59f0060 	ldr	r0, [pc, #96]	; 40020094 <CyU3PUsbFallBackToUsb2+0x270>
40020030:	e59f1044 	ldr	r1, [pc, #68]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
40020034:	e5810008 	str	r0, [r1, #8]
40020038:	e3a00050 	mov	r0, #80	; 0x50
4002003c:	ebffccff 	bl	40013440 <CyU3PBusyWait>
40020040:	e3a01000 	mov	r1, #0
40020044:	e3a00002 	mov	r0, #2
40020048:	ebfff09c 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4002004c:	e59f0028 	ldr	r0, [pc, #40]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
40020050:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020054:	e3c00008 	bic	r0, r0, #8
40020058:	e59f101c 	ldr	r1, [pc, #28]	; 4002007c <CyU3PUsbFallBackToUsb2+0x258>
4002005c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020060:	eaffff7a 	b	4001fe50 <CyU3PUsbFallBackToUsb2+0x2c>
40020064:	40031d40 	.word	0x40031d40
40020068:	e0051000 	.word	0xe0051000
4002006c:	00001005 	.word	0x00001005
40020070:	e0033000 	.word	0xe0033000
40020074:	40030db4 	.word	0x40030db4
40020078:	400326a0 	.word	0x400326a0
4002007c:	e0031000 	.word	0xe0031000
40020080:	40030c5c 	.word	0x40030c5c
40020084:	e0050000 	.word	0xe0050000
40020088:	40031a74 	.word	0x40031a74
4002008c:	40031b14 	.word	0x40031b14
40020090:	e0032000 	.word	0xe0032000
40020094:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

40020098 <CyU3PUsbGetEpStatus>:
40020098:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4002009c:	e1a04000 	mov	r4, r0
400200a0:	e204600f 	and	r6, r4, #15
400200a4:	e59f0090 	ldr	r0, [pc, #144]	; 4002013c <CyU3PUsbGetEpStatus+0xa4>
400200a8:	e5d00009 	ldrb	r0, [r0, #9]
400200ac:	e3500003 	cmp	r0, #3
400200b0:	1a00000b 	bne	400200e4 <CyU3PUsbGetEpStatus+0x4c>
400200b4:	e3140080 	tst	r4, #128	; 0x80
400200b8:	0a000004 	beq	400200d0 <CyU3PUsbGetEpStatus+0x38>
400200bc:	e59f007c 	ldr	r0, [pc, #124]	; 40020140 <CyU3PUsbGetEpStatus+0xa8>
400200c0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200c4:	e2000004 	and	r0, r0, #4
400200c8:	e58d0000 	str	r0, [sp]
400200cc:	ea00000f 	b	40020110 <CyU3PUsbGetEpStatus+0x78>
400200d0:	e59f006c 	ldr	r0, [pc, #108]	; 40020144 <CyU3PUsbGetEpStatus+0xac>
400200d4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200d8:	e2000004 	and	r0, r0, #4
400200dc:	e58d0000 	str	r0, [sp]
400200e0:	ea00000a 	b	40020110 <CyU3PUsbGetEpStatus+0x78>
400200e4:	e3140080 	tst	r4, #128	; 0x80
400200e8:	0a000004 	beq	40020100 <CyU3PUsbGetEpStatus+0x68>
400200ec:	e59f0054 	ldr	r0, [pc, #84]	; 40020148 <CyU3PUsbGetEpStatus+0xb0>
400200f0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200f4:	e2000801 	and	r0, r0, #65536	; 0x10000
400200f8:	e58d0000 	str	r0, [sp]
400200fc:	ea000003 	b	40020110 <CyU3PUsbGetEpStatus+0x78>
40020100:	e59f0044 	ldr	r0, [pc, #68]	; 4002014c <CyU3PUsbGetEpStatus+0xb4>
40020104:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020108:	e2000801 	and	r0, r0, #65536	; 0x10000
4002010c:	e58d0000 	str	r0, [sp]
40020110:	e59d0000 	ldr	r0, [sp]
40020114:	e3500000 	cmp	r0, #0
40020118:	0a000001 	beq	40020124 <CyU3PUsbGetEpStatus+0x8c>
4002011c:	e3a00001 	mov	r0, #1
40020120:	e58d0000 	str	r0, [sp]
40020124:	e1a0100d 	mov	r1, sp
40020128:	e3a00002 	mov	r0, #2
4002012c:	ebfff48f 	bl	4001d370 <CyU3PUsbSendEP0Data>
40020130:	e1a05000 	mov	r5, r0
40020134:	e1a00005 	mov	r0, r5
40020138:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4002013c:	40031d40 	.word	0x40031d40
40020140:	e0033500 	.word	0xe0033500
40020144:	e0033600 	.word	0xe0033600
40020148:	e0031418 	.word	0xe0031418
4002014c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

40020150 <CyU3PUsbHandleClearFeature>:
40020150:	e92d4070 	push	{r4, r5, r6, lr}
40020154:	e1a04000 	mov	r4, r0
40020158:	e3a05000 	mov	r5, #0
4002015c:	e3540001 	cmp	r4, #1
40020160:	0a000006 	beq	40020180 <CyU3PUsbHandleClearFeature+0x30>
40020164:	e3540002 	cmp	r4, #2
40020168:	0a00000b 	beq	4002019c <CyU3PUsbHandleClearFeature+0x4c>
4002016c:	e3540030 	cmp	r4, #48	; 0x30
40020170:	0a00000f 	beq	400201b4 <CyU3PUsbHandleClearFeature+0x64>
40020174:	e3540031 	cmp	r4, #49	; 0x31
40020178:	1a00002d 	bne	40020234 <CyU3PUsbHandleClearFeature+0xe4>
4002017c:	ea00001c 	b	400201f4 <CyU3PUsbHandleClearFeature+0xa4>
40020180:	e1a00000 	nop			; (mov r0, r0)
40020184:	e59f00d8 	ldr	r0, [pc, #216]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
40020188:	e5d00006 	ldrb	r0, [r0, #6]
4002018c:	e3c00002 	bic	r0, r0, #2
40020190:	e59f10cc 	ldr	r1, [pc, #204]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
40020194:	e5c10006 	strb	r0, [r1, #6]
40020198:	e1a00000 	nop			; (mov r0, r0)
4002019c:	e59f00c0 	ldr	r0, [pc, #192]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
400201a0:	e5d00009 	ldrb	r0, [r0, #9]
400201a4:	e3500003 	cmp	r0, #3
400201a8:	0a000000 	beq	400201b0 <CyU3PUsbHandleClearFeature+0x60>
400201ac:	e3a05001 	mov	r5, #1
400201b0:	ea000021 	b	4002023c <CyU3PUsbHandleClearFeature+0xec>
400201b4:	e1a00000 	nop			; (mov r0, r0)
400201b8:	e59f00a4 	ldr	r0, [pc, #164]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
400201bc:	e5d00009 	ldrb	r0, [r0, #9]
400201c0:	e3500003 	cmp	r0, #3
400201c4:	1a000009 	bne	400201f0 <CyU3PUsbHandleClearFeature+0xa0>
400201c8:	e59f0094 	ldr	r0, [pc, #148]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
400201cc:	e5d00008 	ldrb	r0, [r0, #8]
400201d0:	e3500006 	cmp	r0, #6
400201d4:	1a000005 	bne	400201f0 <CyU3PUsbHandleClearFeature+0xa0>
400201d8:	e59f0084 	ldr	r0, [pc, #132]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
400201dc:	e5d00006 	ldrb	r0, [r0, #6]
400201e0:	e3c00004 	bic	r0, r0, #4
400201e4:	e59f1078 	ldr	r1, [pc, #120]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
400201e8:	e5c10006 	strb	r0, [r1, #6]
400201ec:	e3a05001 	mov	r5, #1
400201f0:	ea000011 	b	4002023c <CyU3PUsbHandleClearFeature+0xec>
400201f4:	e1a00000 	nop			; (mov r0, r0)
400201f8:	e59f0064 	ldr	r0, [pc, #100]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
400201fc:	e5d00009 	ldrb	r0, [r0, #9]
40020200:	e3500003 	cmp	r0, #3
40020204:	1a000009 	bne	40020230 <CyU3PUsbHandleClearFeature+0xe0>
40020208:	e59f0054 	ldr	r0, [pc, #84]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
4002020c:	e5d00008 	ldrb	r0, [r0, #8]
40020210:	e3500006 	cmp	r0, #6
40020214:	1a000005 	bne	40020230 <CyU3PUsbHandleClearFeature+0xe0>
40020218:	e59f0044 	ldr	r0, [pc, #68]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
4002021c:	e5d00006 	ldrb	r0, [r0, #6]
40020220:	e3c00008 	bic	r0, r0, #8
40020224:	e59f1038 	ldr	r1, [pc, #56]	; 40020264 <CyU3PUsbHandleClearFeature+0x114>
40020228:	e5c10006 	strb	r0, [r1, #6]
4002022c:	e3a05001 	mov	r5, #1
40020230:	ea000001 	b	4002023c <CyU3PUsbHandleClearFeature+0xec>
40020234:	e1a00000 	nop			; (mov r0, r0)
40020238:	e1a00000 	nop			; (mov r0, r0)
4002023c:	e1a00000 	nop			; (mov r0, r0)
40020240:	e3550000 	cmp	r5, #0
40020244:	0a000001 	beq	40020250 <CyU3PUsbHandleClearFeature+0x100>
40020248:	ebfff0af 	bl	4001c50c <CyU3PUsbAckSetup>
4002024c:	ea000003 	b	40020260 <CyU3PUsbHandleClearFeature+0x110>
40020250:	e3a02000 	mov	r2, #0
40020254:	e3a01001 	mov	r1, #1
40020258:	e1a00002 	mov	r0, r2
4002025c:	ebfff66e 	bl	4001dc1c <CyU3PUsbStall>
40020260:	e8bd8070 	pop	{r4, r5, r6, pc}
40020264:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

40020268 <CyU3PUsbHandleEvents>:
40020268:	e92d4070 	push	{r4, r5, r6, lr}
4002026c:	e1a04000 	mov	r4, r0
40020270:	e3140040 	tst	r4, #64	; 0x40
40020274:	0a000000 	beq	4002027c <CyU3PUsbHandleEvents+0x14>
40020278:	ebfff8cc 	bl	4001e5b0 <CyU3PUibDevCtrlEvtHandler>
4002027c:	e3140020 	tst	r4, #32
40020280:	0a000000 	beq	40020288 <CyU3PUsbHandleEvents+0x20>
40020284:	ebfff942 	bl	4001e794 <CyU3PUibEPEvtHandler>
40020288:	e3140080 	tst	r4, #128	; 0x80
4002028c:	0a000000 	beq	40020294 <CyU3PUsbHandleEvents+0x2c>
40020290:	ebfffa15 	bl	4001eaec <CyU3PUibLnkIntrEvtHandler>
40020294:	e3140c01 	tst	r4, #256	; 0x100
40020298:	0a000000 	beq	400202a0 <CyU3PUsbHandleEvents+0x38>
4002029c:	ebfffb32 	bl	4001ef6c <CyU3PUibProtIntrEvtHandler>
400202a0:	e3140c02 	tst	r4, #512	; 0x200
400202a4:	0a000000 	beq	400202ac <CyU3PUsbHandleEvents+0x44>
400202a8:	ebfffa37 	bl	4001eb8c <CyU3PUibProtEpIntrEvtHandler>
400202ac:	e3140b01 	tst	r4, #1024	; 0x400
400202b0:	0a000006 	beq	400202d0 <CyU3PUsbHandleEvents+0x68>
400202b4:	e59f0378 	ldr	r0, [pc, #888]	; 40020634 <CyU3PUsbHandleEvents+0x3cc>
400202b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400202bc:	e3500b02 	cmp	r0, #2048	; 0x800
400202c0:	1a000001 	bne	400202cc <CyU3PUsbHandleEvents+0x64>
400202c4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400202c8:	ebffa1a9 	bl	40008974 <_tx_thread_sleep>
400202cc:	ebfffd4a 	bl	4001f7fc <CyU3PUibVbusChangeHandler>
400202d0:	e3140b02 	tst	r4, #2048	; 0x800
400202d4:	0a000000 	beq	400202dc <CyU3PUsbHandleEvents+0x74>
400202d8:	eb0003ae 	bl	40021198 <CyU3PUsbSendCompliancePatterns>
400202dc:	e3140a01 	tst	r4, #4096	; 0x1000
400202e0:	0a00000c 	beq	40020318 <CyU3PUsbHandleEvents+0xb0>
400202e4:	e59f034c 	ldr	r0, [pc, #844]	; 40020638 <CyU3PUsbHandleEvents+0x3d0>
400202e8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400202ec:	e3100902 	tst	r0, #32768	; 0x8000
400202f0:	0a000008 	beq	40020318 <CyU3PUsbHandleEvents+0xb0>
400202f4:	e3a00001 	mov	r0, #1
400202f8:	e59f133c 	ldr	r1, [pc, #828]	; 4002063c <CyU3PUsbHandleEvents+0x3d4>
400202fc:	e5810000 	str	r0, [r1]
40020300:	e59f1338 	ldr	r1, [pc, #824]	; 40020640 <CyU3PUsbHandleEvents+0x3d8>
40020304:	e5810000 	str	r0, [r1]
40020308:	ebfffdb3 	bl	4001f9dc <CyU3PUsbCheckUsb3Disconnect>
4002030c:	e3a00000 	mov	r0, #0
40020310:	e59f1328 	ldr	r1, [pc, #808]	; 40020640 <CyU3PUsbHandleEvents+0x3d8>
40020314:	e5810000 	str	r0, [r1]
40020318:	e3140301 	tst	r4, #67108864	; 0x4000000
4002031c:	0a000013 	beq	40020370 <CyU3PUsbHandleEvents+0x108>
40020320:	e59f031c 	ldr	r0, [pc, #796]	; 40020644 <CyU3PUsbHandleEvents+0x3dc>
40020324:	e5900000 	ldr	r0, [r0]
40020328:	e3500000 	cmp	r0, #0
4002032c:	0a000008 	beq	40020354 <CyU3PUsbHandleEvents+0xec>
40020330:	e59f0300 	ldr	r0, [pc, #768]	; 40020638 <CyU3PUsbHandleEvents+0x3d0>
40020334:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
40020338:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
4002033c:	e3a02080 	mov	r2, #128	; 0x80
40020340:	e1821920 	orr	r1, r2, r0, lsr #18
40020344:	e3a00012 	mov	r0, #18
40020348:	e59f22f4 	ldr	r2, [pc, #756]	; 40020644 <CyU3PUsbHandleEvents+0x3dc>
4002034c:	e5922000 	ldr	r2, [r2]
40020350:	e12fff32 	blx	r2
40020354:	e3a00b02 	mov	r0, #2048	; 0x800
40020358:	e59f12e8 	ldr	r1, [pc, #744]	; 40020648 <CyU3PUsbHandleEvents+0x3e0>
4002035c:	e5810000 	str	r0, [r1]
40020360:	e1c10000 	bic	r0, r1, r0
40020364:	e5900004 	ldr	r0, [r0, #4]
40020368:	e3800b02 	orr	r0, r0, #2048	; 0x800
4002036c:	e5810004 	str	r0, [r1, #4]
40020370:	e3140901 	tst	r4, #16384	; 0x4000
40020374:	0a000008 	beq	4002039c <CyU3PUsbHandleEvents+0x134>
40020378:	e59f02c4 	ldr	r0, [pc, #708]	; 40020644 <CyU3PUsbHandleEvents+0x3dc>
4002037c:	e5900000 	ldr	r0, [r0]
40020380:	e3500000 	cmp	r0, #0
40020384:	0a000004 	beq	4002039c <CyU3PUsbHandleEvents+0x134>
40020388:	e3a01000 	mov	r1, #0
4002038c:	e3a00003 	mov	r0, #3
40020390:	e59f22ac 	ldr	r2, [pc, #684]	; 40020644 <CyU3PUsbHandleEvents+0x3dc>
40020394:	e5922000 	ldr	r2, [r2]
40020398:	e12fff32 	blx	r2
4002039c:	e3140a02 	tst	r4, #8192	; 0x2000
400203a0:	0a000008 	beq	400203c8 <CyU3PUsbHandleEvents+0x160>
400203a4:	e59f0298 	ldr	r0, [pc, #664]	; 40020644 <CyU3PUsbHandleEvents+0x3dc>
400203a8:	e5900000 	ldr	r0, [r0]
400203ac:	e3500000 	cmp	r0, #0
400203b0:	0a000004 	beq	400203c8 <CyU3PUsbHandleEvents+0x160>
400203b4:	e3a01000 	mov	r1, #0
400203b8:	e3a00002 	mov	r0, #2
400203bc:	e59f2280 	ldr	r2, [pc, #640]	; 40020644 <CyU3PUsbHandleEvents+0x3dc>
400203c0:	e5922000 	ldr	r2, [r2]
400203c4:	e12fff32 	blx	r2
400203c8:	e3140902 	tst	r4, #32768	; 0x8000
400203cc:	0a000022 	beq	4002045c <CyU3PUsbHandleEvents+0x1f4>
400203d0:	e59f0274 	ldr	r0, [pc, #628]	; 4002064c <CyU3PUsbHandleEvents+0x3e4>
400203d4:	e5900000 	ldr	r0, [r0]
400203d8:	e3500000 	cmp	r0, #0
400203dc:	0a00001e 	beq	4002045c <CyU3PUsbHandleEvents+0x1f4>
400203e0:	eb000690 	bl	40021e28 <CyU3PVicDisableAllInterrupts>
400203e4:	e1a06000 	mov	r6, r0
400203e8:	e3a00001 	mov	r0, #1
400203ec:	ebffcc13 	bl	40013440 <CyU3PBusyWait>
400203f0:	e59f0258 	ldr	r0, [pc, #600]	; 40020650 <CyU3PUsbHandleEvents+0x3e8>
400203f4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400203f8:	e3c00803 	bic	r0, r0, #196608	; 0x30000
400203fc:	e59f124c 	ldr	r1, [pc, #588]	; 40020650 <CyU3PUsbHandleEvents+0x3e8>
40020400:	e5810400 	str	r0, [r1, #1024]	; 0x400
40020404:	e1a00006 	mov	r0, r6
40020408:	eb000694 	bl	40021e60 <CyU3PVicEnableInterrupts>
4002040c:	e3a00001 	mov	r0, #1
40020410:	ebffa157 	bl	40008974 <_tx_thread_sleep>
40020414:	e3a00000 	mov	r0, #0
40020418:	e59f122c 	ldr	r1, [pc, #556]	; 4002064c <CyU3PUsbHandleEvents+0x3e4>
4002041c:	e5810000 	str	r0, [r1]
40020420:	e59f0228 	ldr	r0, [pc, #552]	; 40020650 <CyU3PUsbHandleEvents+0x3e8>
40020424:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40020428:	e3100c02 	tst	r0, #512	; 0x200
4002042c:	1a00000a 	bne	4002045c <CyU3PUsbHandleEvents+0x1f4>
40020430:	e59f01fc 	ldr	r0, [pc, #508]	; 40020634 <CyU3PUsbHandleEvents+0x3cc>
40020434:	e5900044 	ldr	r0, [r0, #68]	; 0x44
40020438:	e3500000 	cmp	r0, #0
4002043c:	1a000006 	bne	4002045c <CyU3PUsbHandleEvents+0x1f4>
40020440:	e59f01ec 	ldr	r0, [pc, #492]	; 40020634 <CyU3PUsbHandleEvents+0x3cc>
40020444:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
40020448:	e3500000 	cmp	r0, #0
4002044c:	1a000002 	bne	4002045c <CyU3PUsbHandleEvents+0x1f4>
40020450:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020454:	e59f11f4 	ldr	r1, [pc, #500]	; 40020650 <CyU3PUsbHandleEvents+0x3e8>
40020458:	e5810050 	str	r0, [r1, #80]	; 0x50
4002045c:	e3140401 	tst	r4, #16777216	; 0x1000000
40020460:	0a000020 	beq	400204e8 <CyU3PUsbHandleEvents+0x280>
40020464:	e59f01e4 	ldr	r0, [pc, #484]	; 40020650 <CyU3PUsbHandleEvents+0x3e8>
40020468:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002046c:	e200503f 	and	r5, r0, #63	; 0x3f
40020470:	e3550011 	cmp	r5, #17
40020474:	0a000001 	beq	40020480 <CyU3PUsbHandleEvents+0x218>
40020478:	e3550012 	cmp	r5, #18
4002047c:	1a000018 	bne	400204e4 <CyU3PUsbHandleEvents+0x27c>
40020480:	e59f01cc 	ldr	r0, [pc, #460]	; 40020654 <CyU3PUsbHandleEvents+0x3ec>
40020484:	e5900000 	ldr	r0, [r0]
40020488:	e3500000 	cmp	r0, #0
4002048c:	0a000014 	beq	400204e4 <CyU3PUsbHandleEvents+0x27c>
40020490:	e3a00005 	mov	r0, #5
40020494:	ebffcbe9 	bl	40013440 <CyU3PBusyWait>
40020498:	e59f01b0 	ldr	r0, [pc, #432]	; 40020650 <CyU3PUsbHandleEvents+0x3e8>
4002049c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400204a0:	e200503f 	and	r5, r0, #63	; 0x3f
400204a4:	e3550011 	cmp	r5, #17
400204a8:	0a000001 	beq	400204b4 <CyU3PUsbHandleEvents+0x24c>
400204ac:	e3550012 	cmp	r5, #18
400204b0:	1a000001 	bne	400204bc <CyU3PUsbHandleEvents+0x254>
400204b4:	e3a00000 	mov	r0, #0
400204b8:	ebfff582 	bl	4001dac8 <CyU3PUsbSetLinkPowerState>
400204bc:	e3a00001 	mov	r0, #1
400204c0:	ebffa12b 	bl	40008974 <_tx_thread_sleep>
400204c4:	e59f0188 	ldr	r0, [pc, #392]	; 40020654 <CyU3PUsbHandleEvents+0x3ec>
400204c8:	e5900000 	ldr	r0, [r0]
400204cc:	e3500000 	cmp	r0, #0
400204d0:	0a000003 	beq	400204e4 <CyU3PUsbHandleEvents+0x27c>
400204d4:	e3a02000 	mov	r2, #0
400204d8:	e3a01401 	mov	r1, #16777216	; 0x1000000
400204dc:	e59f0174 	ldr	r0, [pc, #372]	; 40020658 <CyU3PUsbHandleEvents+0x3f0>
400204e0:	ebffa61b 	bl	40009d54 <_txe_event_flags_set>
400204e4:	e1a00000 	nop			; (mov r0, r0)
400204e8:	e3140402 	tst	r4, #33554432	; 0x2000000
400204ec:	0a000019 	beq	40020558 <CyU3PUsbHandleEvents+0x2f0>
400204f0:	e3a00052 	mov	r0, #82	; 0x52
400204f4:	ebfffd1d 	bl	4001f970 <CyU3PUsbAddToEventLog>
400204f8:	e59f1134 	ldr	r1, [pc, #308]	; 40020634 <CyU3PUsbHandleEvents+0x3cc>
400204fc:	e5d11009 	ldrb	r1, [r1, #9]
40020500:	e3510003 	cmp	r1, #3
40020504:	1a000001 	bne	40020510 <CyU3PUsbHandleEvents+0x2a8>
40020508:	e3a01001 	mov	r1, #1
4002050c:	ea000000 	b	40020514 <CyU3PUsbHandleEvents+0x2ac>
40020510:	e3a01000 	mov	r1, #0
40020514:	e1a00001 	mov	r0, r1
40020518:	ebfff21a 	bl	4001cd88 <CyU3PUsbPhyDisable>
4002051c:	e3a00001 	mov	r0, #1
40020520:	ebffa113 	bl	40008974 <_tx_thread_sleep>
40020524:	e59f0108 	ldr	r0, [pc, #264]	; 40020634 <CyU3PUsbHandleEvents+0x3cc>
40020528:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4002052c:	e3500000 	cmp	r0, #0
40020530:	0a000005 	beq	4002054c <CyU3PUsbHandleEvents+0x2e4>
40020534:	e59f0120 	ldr	r0, [pc, #288]	; 4002065c <CyU3PUsbHandleEvents+0x3f4>
40020538:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002053c:	e59f10f0 	ldr	r1, [pc, #240]	; 40020634 <CyU3PUsbHandleEvents+0x3cc>
40020540:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020544:	e1100001 	tst	r0, r1
40020548:	0a000002 	beq	40020558 <CyU3PUsbHandleEvents+0x2f0>
4002054c:	e59f10e0 	ldr	r1, [pc, #224]	; 40020634 <CyU3PUsbHandleEvents+0x3cc>
40020550:	e5910024 	ldr	r0, [r1, #36]	; 0x24
40020554:	ebfff281 	bl	4001cf60 <CyU3PUsbPhyEnable>
40020558:	e3140801 	tst	r4, #65536	; 0x10000
4002055c:	0a000006 	beq	4002057c <CyU3PUsbHandleEvents+0x314>
40020560:	e59f00f8 	ldr	r0, [pc, #248]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
40020564:	e5900000 	ldr	r0, [r0]
40020568:	e3500000 	cmp	r0, #0
4002056c:	0a000002 	beq	4002057c <CyU3PUsbHandleEvents+0x314>
40020570:	e59f10e8 	ldr	r1, [pc, #232]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
40020574:	e5910000 	ldr	r0, [r1]
40020578:	e12fff30 	blx	r0
4002057c:	e3140802 	tst	r4, #131072	; 0x20000
40020580:	0a000006 	beq	400205a0 <CyU3PUsbHandleEvents+0x338>
40020584:	e59f00d4 	ldr	r0, [pc, #212]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
40020588:	e5900004 	ldr	r0, [r0, #4]
4002058c:	e3500000 	cmp	r0, #0
40020590:	0a000002 	beq	400205a0 <CyU3PUsbHandleEvents+0x338>
40020594:	e59f10c4 	ldr	r1, [pc, #196]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
40020598:	e5910004 	ldr	r0, [r1, #4]
4002059c:	e12fff30 	blx	r0
400205a0:	e3140701 	tst	r4, #262144	; 0x40000
400205a4:	0a000006 	beq	400205c4 <CyU3PUsbHandleEvents+0x35c>
400205a8:	e59f00b0 	ldr	r0, [pc, #176]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
400205ac:	e5900008 	ldr	r0, [r0, #8]
400205b0:	e3500000 	cmp	r0, #0
400205b4:	0a000002 	beq	400205c4 <CyU3PUsbHandleEvents+0x35c>
400205b8:	e59f10a0 	ldr	r1, [pc, #160]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
400205bc:	e5910008 	ldr	r0, [r1, #8]
400205c0:	e12fff30 	blx	r0
400205c4:	e3140702 	tst	r4, #524288	; 0x80000
400205c8:	0a000006 	beq	400205e8 <CyU3PUsbHandleEvents+0x380>
400205cc:	e59f008c 	ldr	r0, [pc, #140]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
400205d0:	e590000c 	ldr	r0, [r0, #12]
400205d4:	e3500000 	cmp	r0, #0
400205d8:	0a000002 	beq	400205e8 <CyU3PUsbHandleEvents+0x380>
400205dc:	e59f107c 	ldr	r1, [pc, #124]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
400205e0:	e591000c 	ldr	r0, [r1, #12]
400205e4:	e12fff30 	blx	r0
400205e8:	e3140601 	tst	r4, #1048576	; 0x100000
400205ec:	0a000006 	beq	4002060c <CyU3PUsbHandleEvents+0x3a4>
400205f0:	e59f0068 	ldr	r0, [pc, #104]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
400205f4:	e5900010 	ldr	r0, [r0, #16]
400205f8:	e3500000 	cmp	r0, #0
400205fc:	0a000002 	beq	4002060c <CyU3PUsbHandleEvents+0x3a4>
40020600:	e59f1058 	ldr	r1, [pc, #88]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
40020604:	e5910010 	ldr	r0, [r1, #16]
40020608:	e12fff30 	blx	r0
4002060c:	e3140602 	tst	r4, #2097152	; 0x200000
40020610:	0a000006 	beq	40020630 <CyU3PUsbHandleEvents+0x3c8>
40020614:	e59f0044 	ldr	r0, [pc, #68]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
40020618:	e5900014 	ldr	r0, [r0, #20]
4002061c:	e3500000 	cmp	r0, #0
40020620:	0a000002 	beq	40020630 <CyU3PUsbHandleEvents+0x3c8>
40020624:	e59f1034 	ldr	r1, [pc, #52]	; 40020660 <CyU3PUsbHandleEvents+0x3f8>
40020628:	e5910014 	ldr	r0, [r1, #20]
4002062c:	e12fff30 	blx	r0
40020630:	e8bd8070 	pop	{r4, r5, r6, pc}
40020634:	40031d40 	.word	0x40031d40
40020638:	e0031000 	.word	0xe0031000
4002063c:	40030d68 	.word	0x40030d68
40020640:	40030d6c 	.word	0x40030d6c
40020644:	40030da0 	.word	0x40030da0
40020648:	e0030000 	.word	0xe0030000
4002064c:	40030d70 	.word	0x40030d70
40020650:	e0033000 	.word	0xe0033000
40020654:	40030db8 	.word	0x40030db8
40020658:	40031eb8 	.word	0x40031eb8
4002065c:	e0051000 	.word	0xe0051000
40020660:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020664 <CyU3PUsbHandleGetStatus>:
40020664:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020668:	e1a04000 	mov	r4, r0
4002066c:	e1a05001 	mov	r5, r1
40020670:	e3a07000 	mov	r7, #0
40020674:	e3a00000 	mov	r0, #0
40020678:	e58d0000 	str	r0, [sp]
4002067c:	e3540000 	cmp	r4, #0
40020680:	0a000004 	beq	40020698 <CyU3PUsbHandleGetStatus+0x34>
40020684:	e3540001 	cmp	r4, #1
40020688:	0a00001e 	beq	40020708 <CyU3PUsbHandleGetStatus+0xa4>
4002068c:	e3540002 	cmp	r4, #2
40020690:	1a00002b 	bne	40020744 <CyU3PUsbHandleGetStatus+0xe0>
40020694:	ea000023 	b	40020728 <CyU3PUsbHandleGetStatus+0xc4>
40020698:	e1a00000 	nop			; (mov r0, r0)
4002069c:	e3550a0f 	cmp	r5, #61440	; 0xf000
400206a0:	1a00000d 	bne	400206dc <CyU3PUsbHandleGetStatus+0x78>
400206a4:	ebffed1c 	bl	4001bb1c <CyU3POtgGetMode>
400206a8:	e3500002 	cmp	r0, #2
400206ac:	1a000008 	bne	400206d4 <CyU3PUsbHandleGetStatus+0x70>
400206b0:	e59f00a0 	ldr	r0, [pc, #160]	; 40020758 <CyU3PUsbHandleGetStatus+0xf4>
400206b4:	e5900034 	ldr	r0, [r0, #52]	; 0x34
400206b8:	e3500000 	cmp	r0, #0
400206bc:	0a000001 	beq	400206c8 <CyU3PUsbHandleGetStatus+0x64>
400206c0:	e3a00001 	mov	r0, #1
400206c4:	ea000000 	b	400206cc <CyU3PUsbHandleGetStatus+0x68>
400206c8:	e3a00000 	mov	r0, #0
400206cc:	e5cd0000 	strb	r0, [sp]
400206d0:	ea00000b 	b	40020704 <CyU3PUsbHandleGetStatus+0xa0>
400206d4:	e3a00000 	mov	r0, #0
400206d8:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400206dc:	e59f0074 	ldr	r0, [pc, #116]	; 40020758 <CyU3PUsbHandleGetStatus+0xf4>
400206e0:	e5d00006 	ldrb	r0, [r0, #6]
400206e4:	e5cd0000 	strb	r0, [sp]
400206e8:	e59f0068 	ldr	r0, [pc, #104]	; 40020758 <CyU3PUsbHandleGetStatus+0xf4>
400206ec:	e5d00009 	ldrb	r0, [r0, #9]
400206f0:	e3500003 	cmp	r0, #3
400206f4:	1a000002 	bne	40020704 <CyU3PUsbHandleGetStatus+0xa0>
400206f8:	e5dd0000 	ldrb	r0, [sp]
400206fc:	e3c00002 	bic	r0, r0, #2
40020700:	e5cd0000 	strb	r0, [sp]
40020704:	e1a00000 	nop			; (mov r0, r0)
40020708:	e1a0100d 	mov	r1, sp
4002070c:	e3a00002 	mov	r0, #2
40020710:	ebfff316 	bl	4001d370 <CyU3PUsbSendEP0Data>
40020714:	e1a06000 	mov	r6, r0
40020718:	e3560000 	cmp	r6, #0
4002071c:	1a000000 	bne	40020724 <CyU3PUsbHandleGetStatus+0xc0>
40020720:	e3a07001 	mov	r7, #1
40020724:	ea000008 	b	4002074c <CyU3PUsbHandleGetStatus+0xe8>
40020728:	e1a00000 	nop			; (mov r0, r0)
4002072c:	e20500ff 	and	r0, r5, #255	; 0xff
40020730:	ebfffe58 	bl	40020098 <CyU3PUsbGetEpStatus>
40020734:	e3500000 	cmp	r0, #0
40020738:	1a000000 	bne	40020740 <CyU3PUsbHandleGetStatus+0xdc>
4002073c:	e3a07001 	mov	r7, #1
40020740:	ea000001 	b	4002074c <CyU3PUsbHandleGetStatus+0xe8>
40020744:	e1a00000 	nop			; (mov r0, r0)
40020748:	e1a00000 	nop			; (mov r0, r0)
4002074c:	e1a00000 	nop			; (mov r0, r0)
40020750:	e1a00007 	mov	r0, r7
40020754:	eaffffdf 	b	400206d8 <CyU3PUsbHandleGetStatus+0x74>
40020758:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

4002075c <CyU3PUsbHandleSetFeature>:
4002075c:	e92d4070 	push	{r4, r5, r6, lr}
40020760:	e1a04000 	mov	r4, r0
40020764:	e3a05000 	mov	r5, #0
40020768:	e3540001 	cmp	r4, #1
4002076c:	0a000006 	beq	4002078c <CyU3PUsbHandleSetFeature+0x30>
40020770:	e3540002 	cmp	r4, #2
40020774:	0a00000b 	beq	400207a8 <CyU3PUsbHandleSetFeature+0x4c>
40020778:	e3540030 	cmp	r4, #48	; 0x30
4002077c:	0a00000e 	beq	400207bc <CyU3PUsbHandleSetFeature+0x60>
40020780:	e3540031 	cmp	r4, #49	; 0x31
40020784:	1a00002a 	bne	40020834 <CyU3PUsbHandleSetFeature+0xd8>
40020788:	ea00001a 	b	400207f8 <CyU3PUsbHandleSetFeature+0x9c>
4002078c:	e1a00000 	nop			; (mov r0, r0)
40020790:	e59f00cc 	ldr	r0, [pc, #204]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
40020794:	e5d00006 	ldrb	r0, [r0, #6]
40020798:	e3800002 	orr	r0, r0, #2
4002079c:	e59f10c0 	ldr	r1, [pc, #192]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
400207a0:	e5c10006 	strb	r0, [r1, #6]
400207a4:	e1a00000 	nop			; (mov r0, r0)
400207a8:	ebfff0f4 	bl	4001cb80 <CyU3PUsbGetSpeed>
400207ac:	e3500003 	cmp	r0, #3
400207b0:	0a000000 	beq	400207b8 <CyU3PUsbHandleSetFeature+0x5c>
400207b4:	e3a05001 	mov	r5, #1
400207b8:	ea00001f 	b	4002083c <CyU3PUsbHandleSetFeature+0xe0>
400207bc:	e1a00000 	nop			; (mov r0, r0)
400207c0:	ebfff0ee 	bl	4001cb80 <CyU3PUsbGetSpeed>
400207c4:	e3500003 	cmp	r0, #3
400207c8:	1a000009 	bne	400207f4 <CyU3PUsbHandleSetFeature+0x98>
400207cc:	e59f0090 	ldr	r0, [pc, #144]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
400207d0:	e5d00008 	ldrb	r0, [r0, #8]
400207d4:	e3500006 	cmp	r0, #6
400207d8:	1a000005 	bne	400207f4 <CyU3PUsbHandleSetFeature+0x98>
400207dc:	e59f0080 	ldr	r0, [pc, #128]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
400207e0:	e5d00006 	ldrb	r0, [r0, #6]
400207e4:	e3800004 	orr	r0, r0, #4
400207e8:	e59f1074 	ldr	r1, [pc, #116]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
400207ec:	e5c10006 	strb	r0, [r1, #6]
400207f0:	e3a05001 	mov	r5, #1
400207f4:	ea000010 	b	4002083c <CyU3PUsbHandleSetFeature+0xe0>
400207f8:	e1a00000 	nop			; (mov r0, r0)
400207fc:	ebfff0df 	bl	4001cb80 <CyU3PUsbGetSpeed>
40020800:	e3500003 	cmp	r0, #3
40020804:	1a000009 	bne	40020830 <CyU3PUsbHandleSetFeature+0xd4>
40020808:	e59f0054 	ldr	r0, [pc, #84]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
4002080c:	e5d00008 	ldrb	r0, [r0, #8]
40020810:	e3500006 	cmp	r0, #6
40020814:	1a000005 	bne	40020830 <CyU3PUsbHandleSetFeature+0xd4>
40020818:	e59f0044 	ldr	r0, [pc, #68]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
4002081c:	e5d00006 	ldrb	r0, [r0, #6]
40020820:	e3800008 	orr	r0, r0, #8
40020824:	e59f1038 	ldr	r1, [pc, #56]	; 40020864 <CyU3PUsbHandleSetFeature+0x108>
40020828:	e5c10006 	strb	r0, [r1, #6]
4002082c:	e3a05001 	mov	r5, #1
40020830:	ea000001 	b	4002083c <CyU3PUsbHandleSetFeature+0xe0>
40020834:	e1a00000 	nop			; (mov r0, r0)
40020838:	e1a00000 	nop			; (mov r0, r0)
4002083c:	e1a00000 	nop			; (mov r0, r0)
40020840:	e3550000 	cmp	r5, #0
40020844:	0a000001 	beq	40020850 <CyU3PUsbHandleSetFeature+0xf4>
40020848:	ebffef2f 	bl	4001c50c <CyU3PUsbAckSetup>
4002084c:	ea000003 	b	40020860 <CyU3PUsbHandleSetFeature+0x104>
40020850:	e3a02000 	mov	r2, #0
40020854:	e3a01001 	mov	r1, #1
40020858:	e1a00002 	mov	r0, r2
4002085c:	ebfff4ee 	bl	4001dc1c <CyU3PUsbStall>
40020860:	e8bd8070 	pop	{r4, r5, r6, pc}
40020864:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020868 <CyU3PUsbReEnableUsb3>:
40020868:	e92d4010 	push	{r4, lr}
4002086c:	e3a00051 	mov	r0, #81	; 0x51
40020870:	ebfffc3e 	bl	4001f970 <CyU3PUsbAddToEventLog>
40020874:	e59f018c 	ldr	r0, [pc, #396]	; 40020a08 <CyU3PUsbReEnableUsb3+0x1a0>
40020878:	e5900004 	ldr	r0, [r0, #4]
4002087c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020880:	e59f1180 	ldr	r1, [pc, #384]	; 40020a08 <CyU3PUsbReEnableUsb3+0x1a0>
40020884:	e5810004 	str	r0, [r1, #4]
40020888:	e3e00000 	mvn	r0, #0
4002088c:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020890:	e5810004 	str	r0, [r1, #4]
40020894:	e59f0170 	ldr	r0, [pc, #368]	; 40020a0c <CyU3PUsbReEnableUsb3+0x1a4>
40020898:	e5810008 	str	r0, [r1, #8]
4002089c:	e3e00000 	mvn	r0, #0
400208a0:	e5810404 	str	r0, [r1, #1028]	; 0x404
400208a4:	e59f0164 	ldr	r0, [pc, #356]	; 40020a10 <CyU3PUsbReEnableUsb3+0x1a8>
400208a8:	e5810408 	str	r0, [r1, #1032]	; 0x408
400208ac:	e59f0160 	ldr	r0, [pc, #352]	; 40020a14 <CyU3PUsbReEnableUsb3+0x1ac>
400208b0:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
400208b4:	e3500000 	cmp	r0, #0
400208b8:	0a000003 	beq	400208cc <CyU3PUsbReEnableUsb3+0x64>
400208bc:	e1a00001 	mov	r0, r1
400208c0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400208c4:	e3800c01 	orr	r0, r0, #256	; 0x100
400208c8:	e5810408 	str	r0, [r1, #1032]	; 0x408
400208cc:	e3a00000 	mov	r0, #0
400208d0:	e59f113c 	ldr	r1, [pc, #316]	; 40020a14 <CyU3PUsbReEnableUsb3+0x1ac>
400208d4:	e5810044 	str	r0, [r1, #68]	; 0x44
400208d8:	e59f0138 	ldr	r0, [pc, #312]	; 40020a18 <CyU3PUsbReEnableUsb3+0x1b0>
400208dc:	e5900000 	ldr	r0, [r0]
400208e0:	e3500000 	cmp	r0, #0
400208e4:	0a000003 	beq	400208f8 <CyU3PUsbReEnableUsb3+0x90>
400208e8:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
400208ec:	e59f1128 	ldr	r1, [pc, #296]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
400208f0:	e5810050 	str	r0, [r1, #80]	; 0x50
400208f4:	ea000002 	b	40020904 <CyU3PUsbReEnableUsb3+0x9c>
400208f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
400208fc:	e59f1118 	ldr	r1, [pc, #280]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
40020900:	e5810050 	str	r0, [r1, #80]	; 0x50
40020904:	eb000575 	bl	40021ee0 <CyFx3Usb3LnkSetup>
40020908:	e59f0110 	ldr	r0, [pc, #272]	; 40020a20 <CyU3PUsbReEnableUsb3+0x1b8>
4002090c:	e59f1108 	ldr	r1, [pc, #264]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
40020910:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020914:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020918:	e1c10000 	bic	r0, r1, r0
4002091c:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020920:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020924:	e5810158 	str	r0, [r1, #344]	; 0x158
40020928:	e3a00212 	mov	r0, #536870913	; 0x20000001
4002092c:	e581001c 	str	r0, [r1, #28]
40020930:	e3a01000 	mov	r1, #0
40020934:	e3a00001 	mov	r0, #1
40020938:	ebffee60 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
4002093c:	e3a0000a 	mov	r0, #10
40020940:	ebffcabe 	bl	40013440 <CyU3PBusyWait>
40020944:	eb000537 	bl	40021e28 <CyU3PVicDisableAllInterrupts>
40020948:	e1a04000 	mov	r4, r0
4002094c:	e3a00000 	mov	r0, #0
40020950:	e59f10cc 	ldr	r1, [pc, #204]	; 40020a24 <CyU3PUsbReEnableUsb3+0x1bc>
40020954:	e5810000 	str	r0, [r1]
40020958:	e3a00a01 	mov	r0, #4096	; 0x1000
4002095c:	e59f10b8 	ldr	r1, [pc, #184]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
40020960:	e5810054 	str	r0, [r1, #84]	; 0x54
40020964:	e1c10080 	bic	r0, r1, r0, lsl #1
40020968:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002096c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020970:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020974:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020978:	e3a00064 	mov	r0, #100	; 0x64
4002097c:	ebffcaaf 	bl	40013440 <CyU3PBusyWait>
40020980:	e59f0094 	ldr	r0, [pc, #148]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
40020984:	e5900000 	ldr	r0, [r0]
40020988:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
4002098c:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020990:	e59f1084 	ldr	r1, [pc, #132]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
40020994:	e5810000 	str	r0, [r1]
40020998:	e59f0088 	ldr	r0, [pc, #136]	; 40020a28 <CyU3PUsbReEnableUsb3+0x1c0>
4002099c:	e581002c 	str	r0, [r1, #44]	; 0x2c
400209a0:	e3a01080 	mov	r1, #128	; 0x80
400209a4:	e2810ef9 	add	r0, r1, #3984	; 0xf90
400209a8:	eb000592 	bl	40021ff8 <CyFx3UsbWritePhyReg>
400209ac:	e3a01d06 	mov	r1, #384	; 0x180
400209b0:	e59f0074 	ldr	r0, [pc, #116]	; 40020a2c <CyU3PUsbReEnableUsb3+0x1c4>
400209b4:	eb00058f 	bl	40021ff8 <CyFx3UsbWritePhyReg>
400209b8:	e3a01080 	mov	r1, #128	; 0x80
400209bc:	e59f006c 	ldr	r0, [pc, #108]	; 40020a30 <CyU3PUsbReEnableUsb3+0x1c8>
400209c0:	eb00058c 	bl	40021ff8 <CyFx3UsbWritePhyReg>
400209c4:	e59f003c 	ldr	r0, [pc, #60]	; 40020a08 <CyU3PUsbReEnableUsb3+0x1a0>
400209c8:	e5900004 	ldr	r0, [r0, #4]
400209cc:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400209d0:	e59f1030 	ldr	r1, [pc, #48]	; 40020a08 <CyU3PUsbReEnableUsb3+0x1a0>
400209d4:	e5810004 	str	r0, [r1, #4]
400209d8:	e1a00004 	mov	r0, r4
400209dc:	eb00051f 	bl	40021e60 <CyU3PVicEnableInterrupts>
400209e0:	e59f0034 	ldr	r0, [pc, #52]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
400209e4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400209e8:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
400209ec:	e59f1028 	ldr	r1, [pc, #40]	; 40020a1c <CyU3PUsbReEnableUsb3+0x1b4>
400209f0:	e5810054 	str	r0, [r1, #84]	; 0x54
400209f4:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
400209f8:	e581001c 	str	r0, [r1, #28]
400209fc:	e3a00064 	mov	r0, #100	; 0x64
40020a00:	ebffca8e 	bl	40013440 <CyU3PBusyWait>
40020a04:	e8bd8010 	pop	{r4, pc}
40020a08:	e0030000 	.word	0xe0030000
40020a0c:	00038081 	.word	0x00038081
40020a10:	00004a3d 	.word	0x00004a3d
40020a14:	40031d40 	.word	0x40031d40
40020a18:	40030d44 	.word	0x40030d44
40020a1c:	e0033000 	.word	0xe0033000
40020a20:	00000908 	.word	0x00000908
40020a24:	40030d78 	.word	0x40030d78
40020a28:	00310418 	.word	0x00310418
40020a2c:	00001006 	.word	0x00001006
40020a30:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020a34 <CyU3PUsbRegisterEventCallback>:
40020a34:	e92d4010 	push	{r4, lr}
40020a38:	e1a04000 	mov	r4, r0
40020a3c:	e59f0038 	ldr	r0, [pc, #56]	; 40020a7c <CyU3PUsbRegisterEventCallback+0x48>
40020a40:	e5804000 	str	r4, [r0]
40020a44:	e59f0034 	ldr	r0, [pc, #52]	; 40020a80 <CyU3PUsbRegisterEventCallback+0x4c>
40020a48:	e5d00008 	ldrb	r0, [r0, #8]
40020a4c:	e3500000 	cmp	r0, #0
40020a50:	0a000008 	beq	40020a78 <CyU3PUsbRegisterEventCallback+0x44>
40020a54:	e59f0028 	ldr	r0, [pc, #40]	; 40020a84 <CyU3PUsbRegisterEventCallback+0x50>
40020a58:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020a5c:	e59f101c 	ldr	r1, [pc, #28]	; 40020a80 <CyU3PUsbRegisterEventCallback+0x4c>
40020a60:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020a64:	e1100001 	tst	r0, r1
40020a68:	0a000002 	beq	40020a78 <CyU3PUsbRegisterEventCallback+0x44>
40020a6c:	e3a01000 	mov	r1, #0
40020a70:	e3a0000b 	mov	r0, #11
40020a74:	e12fff34 	blx	r4
40020a78:	e8bd8010 	pop	{r4, pc}
40020a7c:	40030da0 	.word	0x40030da0
40020a80:	40031d40 	.word	0x40031d40
40020a84:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020a88 <CyU3PUsbRegisterSetupCallback>:
40020a88:	e59f2050 	ldr	r2, [pc, #80]	; 40020ae0 <CyU3PUsbRegisterSetupCallback+0x58>
40020a8c:	e5820000 	str	r0, [r2]
40020a90:	e3510001 	cmp	r1, #1
40020a94:	1a000003 	bne	40020aa8 <CyU3PUsbRegisterSetupCallback+0x20>
40020a98:	e3a02000 	mov	r2, #0
40020a9c:	e59f3040 	ldr	r3, [pc, #64]	; 40020ae4 <CyU3PUsbRegisterSetupCallback+0x5c>
40020aa0:	e5c32007 	strb	r2, [r3, #7]
40020aa4:	ea00000c 	b	40020adc <CyU3PUsbRegisterSetupCallback+0x54>
40020aa8:	e3a02001 	mov	r2, #1
40020aac:	e59f3030 	ldr	r3, [pc, #48]	; 40020ae4 <CyU3PUsbRegisterSetupCallback+0x5c>
40020ab0:	e5c32007 	strb	r2, [r3, #7]
40020ab4:	e2832000 	add	r2, r3, #0
40020ab8:	e5d22008 	ldrb	r2, [r2, #8]
40020abc:	e3520000 	cmp	r2, #0
40020ac0:	da000005 	ble	40020adc <CyU3PUsbRegisterSetupCallback+0x54>
40020ac4:	e2832000 	add	r2, r3, #0
40020ac8:	e5d22008 	ldrb	r2, [r2, #8]
40020acc:	e3520003 	cmp	r2, #3
40020ad0:	aa000001 	bge	40020adc <CyU3PUsbRegisterSetupCallback+0x54>
40020ad4:	e3a02003 	mov	r2, #3
40020ad8:	e5c32008 	strb	r2, [r3, #8]
40020adc:	e12fff1e 	bx	lr
40020ae0:	40030da4 	.word	0x40030da4
40020ae4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020ae8 <CyU3PUsbResetHandler>:
40020ae8:	e92d4010 	push	{r4, lr}
40020aec:	e3a00001 	mov	r0, #1
40020af0:	e59f1124 	ldr	r1, [pc, #292]	; 40020c1c <CyU3PUsbResetHandler+0x134>
40020af4:	e5c10009 	strb	r0, [r1, #9]
40020af8:	e59f0120 	ldr	r0, [pc, #288]	; 40020c20 <CyU3PUsbResetHandler+0x138>
40020afc:	e5900018 	ldr	r0, [r0, #24]
40020b00:	e59f1118 	ldr	r1, [pc, #280]	; 40020c20 <CyU3PUsbResetHandler+0x138>
40020b04:	e581000c 	str	r0, [r1, #12]
40020b08:	e2810000 	add	r0, r1, #0
40020b0c:	e5900014 	ldr	r0, [r0, #20]
40020b10:	e5810010 	str	r0, [r1, #16]
40020b14:	e59f0108 	ldr	r0, [pc, #264]	; 40020c24 <CyU3PUsbResetHandler+0x13c>
40020b18:	e5900000 	ldr	r0, [r0]
40020b1c:	e3500000 	cmp	r0, #0
40020b20:	0a000010 	beq	40020b68 <CyU3PUsbResetHandler+0x80>
40020b24:	e59f00f0 	ldr	r0, [pc, #240]	; 40020c1c <CyU3PUsbResetHandler+0x134>
40020b28:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020b2c:	e3500000 	cmp	r0, #0
40020b30:	1a000007 	bne	40020b54 <CyU3PUsbResetHandler+0x6c>
40020b34:	e3a01000 	mov	r1, #0
40020b38:	e1a00001 	mov	r0, r1
40020b3c:	e59f20e0 	ldr	r2, [pc, #224]	; 40020c24 <CyU3PUsbResetHandler+0x13c>
40020b40:	e5922000 	ldr	r2, [r2]
40020b44:	e12fff32 	blx	r2
40020b48:	e3a00001 	mov	r0, #1
40020b4c:	e59f10c8 	ldr	r1, [pc, #200]	; 40020c1c <CyU3PUsbResetHandler+0x134>
40020b50:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020b54:	e3a01000 	mov	r1, #0
40020b58:	e3a00004 	mov	r0, #4
40020b5c:	e59f20c0 	ldr	r2, [pc, #192]	; 40020c24 <CyU3PUsbResetHandler+0x13c>
40020b60:	e5922000 	ldr	r2, [r2]
40020b64:	e12fff32 	blx	r2
40020b68:	e59f00b8 	ldr	r0, [pc, #184]	; 40020c28 <CyU3PUsbResetHandler+0x140>
40020b6c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020b70:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020b74:	e59f10ac 	ldr	r1, [pc, #172]	; 40020c28 <CyU3PUsbResetHandler+0x140>
40020b78:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020b7c:	e3a00001 	mov	r0, #1
40020b80:	ebffca2e 	bl	40013440 <CyU3PBusyWait>
40020b84:	e59f009c 	ldr	r0, [pc, #156]	; 40020c28 <CyU3PUsbResetHandler+0x140>
40020b88:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020b8c:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020b90:	e59f1090 	ldr	r1, [pc, #144]	; 40020c28 <CyU3PUsbResetHandler+0x140>
40020b94:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020b98:	e3a00001 	mov	r0, #1
40020b9c:	ebffca27 	bl	40013440 <CyU3PBusyWait>
40020ba0:	e3a00040 	mov	r0, #64	; 0x40
40020ba4:	e59f107c 	ldr	r1, [pc, #124]	; 40020c28 <CyU3PUsbResetHandler+0x140>
40020ba8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020bac:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020bb0:	e1c10000 	bic	r0, r1, r0
40020bb4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020bb8:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020bbc:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020bc0:	e1a00001 	mov	r0, r1
40020bc4:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020bc8:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020bcc:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020bd0:	e3a00001 	mov	r0, #1
40020bd4:	ebfffc14 	bl	4001fc2c <CyU3PUsbEpPrepare>
40020bd8:	e59f003c 	ldr	r0, [pc, #60]	; 40020c1c <CyU3PUsbResetHandler+0x134>
40020bdc:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40020be0:	e3500000 	cmp	r0, #0
40020be4:	0a00000b 	beq	40020c18 <CyU3PUsbResetHandler+0x130>
40020be8:	e59f002c 	ldr	r0, [pc, #44]	; 40020c1c <CyU3PUsbResetHandler+0x134>
40020bec:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020bf0:	e3500003 	cmp	r0, #3
40020bf4:	3a000002 	bcc	40020c04 <CyU3PUsbResetHandler+0x11c>
40020bf8:	e3a00000 	mov	r0, #0
40020bfc:	e59f1018 	ldr	r1, [pc, #24]	; 40020c1c <CyU3PUsbResetHandler+0x134>
40020c00:	e581004c 	str	r0, [r1, #76]	; 0x4c
40020c04:	e59f001c 	ldr	r0, [pc, #28]	; 40020c28 <CyU3PUsbResetHandler+0x140>
40020c08:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c0c:	e3100901 	tst	r0, #16384	; 0x4000
40020c10:	1a000000 	bne	40020c18 <CyU3PUsbResetHandler+0x130>
40020c14:	ebffff13 	bl	40020868 <CyU3PUsbReEnableUsb3>
40020c18:	e8bd8010 	pop	{r4, pc}
40020c1c:	40031d40 	.word	0x40031d40
40020c20:	40031f98 	.word	0x40031f98
40020c24:	40030da0 	.word	0x40030da0
40020c28:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40020c2c <CyU3PUsbResumeHandler>:
40020c2c:	e92d4010 	push	{r4, lr}
40020c30:	e59f003c 	ldr	r0, [pc, #60]	; 40020c74 <CyU3PUsbResumeHandler+0x48>
40020c34:	e5d00008 	ldrb	r0, [r0, #8]
40020c38:	e3500005 	cmp	r0, #5
40020c3c:	ba00000b 	blt	40020c70 <CyU3PUsbResumeHandler+0x44>
40020c40:	e59f0030 	ldr	r0, [pc, #48]	; 40020c78 <CyU3PUsbResumeHandler+0x4c>
40020c44:	e5900000 	ldr	r0, [r0]
40020c48:	e3500000 	cmp	r0, #0
40020c4c:	0a000004 	beq	40020c64 <CyU3PUsbResumeHandler+0x38>
40020c50:	e3a01000 	mov	r1, #0
40020c54:	e3a00003 	mov	r0, #3
40020c58:	e59f2018 	ldr	r2, [pc, #24]	; 40020c78 <CyU3PUsbResumeHandler+0x4c>
40020c5c:	e5922000 	ldr	r2, [r2]
40020c60:	e12fff32 	blx	r2
40020c64:	e3a00006 	mov	r0, #6
40020c68:	e59f1004 	ldr	r1, [pc, #4]	; 40020c74 <CyU3PUsbResumeHandler+0x48>
40020c6c:	e5c10008 	strb	r0, [r1, #8]
40020c70:	e8bd8010 	pop	{r4, pc}
40020c74:	40031d40 	.word	0x40031d40
40020c78:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbSSConnecthandler:

40020c7c <CyU3PUsbSSConnecthandler>:
40020c7c:	e92d4010 	push	{r4, lr}
40020c80:	e59f01d4 	ldr	r0, [pc, #468]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020c84:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c88:	e3100a02 	tst	r0, #8192	; 0x2000
40020c8c:	0a00002b 	beq	40020d40 <CyU3PUsbSSConnecthandler+0xc4>
40020c90:	e59f01c8 	ldr	r0, [pc, #456]	; 40020e60 <CyU3PUsbSSConnecthandler+0x1e4>
40020c94:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020c98:	e200403f 	and	r4, r0, #63	; 0x3f
40020c9c:	ea000003 	b	40020cb0 <CyU3PUsbSSConnecthandler+0x34>
40020ca0:	ebffa6e4 	bl	4000a838 <_txe_thread_relinquish>
40020ca4:	e59f01b4 	ldr	r0, [pc, #436]	; 40020e60 <CyU3PUsbSSConnecthandler+0x1e4>
40020ca8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020cac:	e200403f 	and	r4, r0, #63	; 0x3f
40020cb0:	e59f01a4 	ldr	r0, [pc, #420]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020cb4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020cb8:	e3100901 	tst	r0, #16384	; 0x4000
40020cbc:	0a000001 	beq	40020cc8 <CyU3PUsbSSConnecthandler+0x4c>
40020cc0:	e3540008 	cmp	r4, #8
40020cc4:	0afffff5 	beq	40020ca0 <CyU3PUsbSSConnecthandler+0x24>
40020cc8:	e3540017 	cmp	r4, #23
40020ccc:	1a00000a 	bne	40020cfc <CyU3PUsbSSConnecthandler+0x80>
40020cd0:	e59f018c 	ldr	r0, [pc, #396]	; 40020e64 <CyU3PUsbSSConnecthandler+0x1e8>
40020cd4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40020cd8:	e3500000 	cmp	r0, #0
40020cdc:	1a000002 	bne	40020cec <CyU3PUsbSSConnecthandler+0x70>
40020ce0:	e3a00010 	mov	r0, #16
40020ce4:	ebfffb21 	bl	4001f970 <CyU3PUsbAddToEventLog>
40020ce8:	eb000060 	bl	40020e70 <CyU3PUsbSSDisConnecthandler>
40020cec:	e3a00003 	mov	r0, #3
40020cf0:	e59f116c 	ldr	r1, [pc, #364]	; 40020e64 <CyU3PUsbSSConnecthandler+0x1e8>
40020cf4:	e5c10009 	strb	r0, [r1, #9]
40020cf8:	e8bd8010 	pop	{r4, pc}
40020cfc:	e59f0158 	ldr	r0, [pc, #344]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020d00:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d04:	e3100901 	tst	r0, #16384	; 0x4000
40020d08:	1a000000 	bne	40020d10 <CyU3PUsbSSConnecthandler+0x94>
40020d0c:	eafffff9 	b	40020cf8 <CyU3PUsbSSConnecthandler+0x7c>
40020d10:	e59f0144 	ldr	r0, [pc, #324]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020d14:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020d18:	e3800008 	orr	r0, r0, #8
40020d1c:	e59f1138 	ldr	r1, [pc, #312]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020d20:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d24:	e1a00001 	mov	r0, r1
40020d28:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d2c:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40020d30:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020d34:	e1a00001 	mov	r0, r1
40020d38:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40020d3c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020d40:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40020d44:	e59f111c 	ldr	r1, [pc, #284]	; 40020e68 <CyU3PUsbSSConnecthandler+0x1ec>
40020d48:	e5810008 	str	r0, [r1, #8]
40020d4c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020d50:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40020d54:	e581001c 	str	r0, [r1, #28]
40020d58:	e3a00003 	mov	r0, #3
40020d5c:	e59f1100 	ldr	r1, [pc, #256]	; 40020e64 <CyU3PUsbSSConnecthandler+0x1e8>
40020d60:	e5c10009 	strb	r0, [r1, #9]
40020d64:	e59f00f0 	ldr	r0, [pc, #240]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020d68:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d6c:	e3800902 	orr	r0, r0, #32768	; 0x8000
40020d70:	e59f10e4 	ldr	r1, [pc, #228]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020d74:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020d78:	e1a00001 	mov	r0, r1
40020d7c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020d80:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020d84:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020d88:	e3a00001 	mov	r0, #1
40020d8c:	ebffc9ab 	bl	40013440 <CyU3PBusyWait>
40020d90:	e59f00c4 	ldr	r0, [pc, #196]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020d94:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020d98:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020d9c:	e59f10b8 	ldr	r1, [pc, #184]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020da0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020da4:	e3a00001 	mov	r0, #1
40020da8:	ebffc9a4 	bl	40013440 <CyU3PBusyWait>
40020dac:	e3a00000 	mov	r0, #0
40020db0:	ebffeecd 	bl	4001c8ec <CyU3PUsbFlushEp>
40020db4:	e3a00080 	mov	r0, #128	; 0x80
40020db8:	ebffeecb 	bl	4001c8ec <CyU3PUsbFlushEp>
40020dbc:	e59f009c 	ldr	r0, [pc, #156]	; 40020e60 <CyU3PUsbSSConnecthandler+0x1e4>
40020dc0:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40020dc4:	e3800001 	orr	r0, r0, #1
40020dc8:	e59f1090 	ldr	r1, [pc, #144]	; 40020e60 <CyU3PUsbSSConnecthandler+0x1e4>
40020dcc:	e5810500 	str	r0, [r1, #1280]	; 0x500
40020dd0:	e3a00c02 	mov	r0, #512	; 0x200
40020dd4:	e1c11200 	bic	r1, r1, r0, lsl #4
40020dd8:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020ddc:	e1810200 	orr	r0, r1, r0, lsl #4
40020de0:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40020de4:	e3800001 	orr	r0, r0, #1
40020de8:	e2811a02 	add	r1, r1, #8192	; 0x2000
40020dec:	e5810600 	str	r0, [r1, #1536]	; 0x600
40020df0:	e3a00c02 	mov	r0, #512	; 0x200
40020df4:	e1c11200 	bic	r1, r1, r0, lsl #4
40020df8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020dfc:	e3a00000 	mov	r0, #0
40020e00:	ebfff121 	bl	4001d28c <CyU3PUsbResetEp>
40020e04:	e3a00000 	mov	r0, #0
40020e08:	ebffeeb7 	bl	4001c8ec <CyU3PUsbFlushEp>
40020e0c:	e3a00080 	mov	r0, #128	; 0x80
40020e10:	ebfff11d 	bl	4001d28c <CyU3PUsbResetEp>
40020e14:	e3a00080 	mov	r0, #128	; 0x80
40020e18:	ebffeeb3 	bl	4001c8ec <CyU3PUsbFlushEp>
40020e1c:	e3a00c02 	mov	r0, #512	; 0x200
40020e20:	e59f1034 	ldr	r1, [pc, #52]	; 40020e5c <CyU3PUsbSSConnecthandler+0x1e0>
40020e24:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020e28:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020e2c:	e59f0038 	ldr	r0, [pc, #56]	; 40020e6c <CyU3PUsbSSConnecthandler+0x1f0>
40020e30:	e5900000 	ldr	r0, [r0]
40020e34:	e3500000 	cmp	r0, #0
40020e38:	0a000004 	beq	40020e50 <CyU3PUsbSSConnecthandler+0x1d4>
40020e3c:	e3a01001 	mov	r1, #1
40020e40:	e3a00000 	mov	r0, #0
40020e44:	e59f2020 	ldr	r2, [pc, #32]	; 40020e6c <CyU3PUsbSSConnecthandler+0x1f0>
40020e48:	e5922000 	ldr	r2, [r2]
40020e4c:	e12fff32 	blx	r2
40020e50:	e3a00003 	mov	r0, #3
40020e54:	ebfffb74 	bl	4001fc2c <CyU3PUsbEpPrepare>
40020e58:	eaffffa6 	b	40020cf8 <CyU3PUsbSSConnecthandler+0x7c>
40020e5c:	e0031000 	.word	0xe0031000
40020e60:	e0033000 	.word	0xe0033000
40020e64:	40031d40 	.word	0x40031d40
40020e68:	e0052000 	.word	0xe0052000
40020e6c:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

40020e70 <CyU3PUsbSSDisConnecthandler>:
40020e70:	e92d4010 	push	{r4, lr}
40020e74:	e59f0164 	ldr	r0, [pc, #356]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x170>
40020e78:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020e7c:	e3500000 	cmp	r0, #0
40020e80:	0a000005 	beq	40020e9c <CyU3PUsbSSDisConnecthandler+0x2c>
40020e84:	e59f0158 	ldr	r0, [pc, #344]	; 40020fe4 <CyU3PUsbSSDisConnecthandler+0x174>
40020e88:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020e8c:	e59f114c 	ldr	r1, [pc, #332]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x170>
40020e90:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020e94:	e1100001 	tst	r0, r1
40020e98:	0a00004e 	beq	40020fd8 <CyU3PUsbSSDisConnecthandler+0x168>
40020e9c:	e59f013c 	ldr	r0, [pc, #316]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x170>
40020ea0:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020ea4:	e2800001 	add	r0, r0, #1
40020ea8:	e59f1130 	ldr	r1, [pc, #304]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x170>
40020eac:	e5810058 	str	r0, [r1, #88]	; 0x58
40020eb0:	e59f0130 	ldr	r0, [pc, #304]	; 40020fe8 <CyU3PUsbSSDisConnecthandler+0x178>
40020eb4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020eb8:	e3100a02 	tst	r0, #8192	; 0x2000
40020ebc:	0a000020 	beq	40020f44 <CyU3PUsbSSDisConnecthandler+0xd4>
40020ec0:	e59f0120 	ldr	r0, [pc, #288]	; 40020fe8 <CyU3PUsbSSDisConnecthandler+0x178>
40020ec4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020ec8:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40020ecc:	e59f1114 	ldr	r1, [pc, #276]	; 40020fe8 <CyU3PUsbSSDisConnecthandler+0x178>
40020ed0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020ed4:	e3a00002 	mov	r0, #2
40020ed8:	ebffc958 	bl	40013440 <CyU3PBusyWait>
40020edc:	e59f0108 	ldr	r0, [pc, #264]	; 40020fec <CyU3PUsbSSDisConnecthandler+0x17c>
40020ee0:	e5900004 	ldr	r0, [r0, #4]
40020ee4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020ee8:	e59f10fc 	ldr	r1, [pc, #252]	; 40020fec <CyU3PUsbSSDisConnecthandler+0x17c>
40020eec:	e5810004 	str	r0, [r1, #4]
40020ef0:	e3a00001 	mov	r0, #1
40020ef4:	ebffc951 	bl	40013440 <CyU3PBusyWait>
40020ef8:	e59f00f0 	ldr	r0, [pc, #240]	; 40020ff0 <CyU3PUsbSSDisConnecthandler+0x180>
40020efc:	e590001c 	ldr	r0, [r0, #28]
40020f00:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020f04:	e59f10e4 	ldr	r1, [pc, #228]	; 40020ff0 <CyU3PUsbSSDisConnecthandler+0x180>
40020f08:	e581001c 	str	r0, [r1, #28]
40020f0c:	e59f00e0 	ldr	r0, [pc, #224]	; 40020ff4 <CyU3PUsbSSDisConnecthandler+0x184>
40020f10:	e5900000 	ldr	r0, [r0]
40020f14:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020f18:	e3a00001 	mov	r0, #1
40020f1c:	ebffc947 	bl	40013440 <CyU3PBusyWait>
40020f20:	e59f00c4 	ldr	r0, [pc, #196]	; 40020fec <CyU3PUsbSSDisConnecthandler+0x17c>
40020f24:	e5900004 	ldr	r0, [r0, #4]
40020f28:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020f2c:	e59f10b8 	ldr	r1, [pc, #184]	; 40020fec <CyU3PUsbSSDisConnecthandler+0x17c>
40020f30:	e5810004 	str	r0, [r1, #4]
40020f34:	e3a01000 	mov	r1, #0
40020f38:	e3a00002 	mov	r0, #2
40020f3c:	ebffecdf 	bl	4001c2c0 <CyU3PSetUsbCoreClock>
40020f40:	ea000025 	b	40020fdc <CyU3PUsbSSDisConnecthandler+0x16c>
40020f44:	e3a00001 	mov	r0, #1
40020f48:	e59f1090 	ldr	r1, [pc, #144]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f4c:	e5c10009 	strb	r0, [r1, #9]
40020f50:	ebffef8c 	bl	4001cd88 <CyU3PUsbPhyDisable>
40020f54:	e59f0084 	ldr	r0, [pc, #132]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f58:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40020f5c:	e3500000 	cmp	r0, #0
40020f60:	0a000019 	beq	40020fcc <CyU3PUsbSSDisConnecthandler+0x15c>
40020f64:	e59f008c 	ldr	r0, [pc, #140]	; 40020ff8 <CyU3PUsbSSDisConnecthandler+0x188>
40020f68:	e5900000 	ldr	r0, [r0]
40020f6c:	e3500000 	cmp	r0, #0
40020f70:	0a000005 	beq	40020f8c <CyU3PUsbSSDisConnecthandler+0x11c>
40020f74:	e3a00000 	mov	r0, #0
40020f78:	e59f1078 	ldr	r1, [pc, #120]	; 40020ff8 <CyU3PUsbSSDisConnecthandler+0x188>
40020f7c:	e5810000 	str	r0, [r1]
40020f80:	e3a00001 	mov	r0, #1
40020f84:	ebffeff5 	bl	4001cf60 <CyU3PUsbPhyEnable>
40020f88:	ea000013 	b	40020fdc <CyU3PUsbSSDisConnecthandler+0x16c>
40020f8c:	e3a00003 	mov	r0, #3
40020f90:	e59f1048 	ldr	r1, [pc, #72]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x170>
40020f94:	e5c10008 	strb	r0, [r1, #8]
40020f98:	e3a00000 	mov	r0, #0
40020f9c:	e5c10009 	strb	r0, [r1, #9]
40020fa0:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020fa4:	e59f0050 	ldr	r0, [pc, #80]	; 40020ffc <CyU3PUsbSSDisConnecthandler+0x18c>
40020fa8:	e5900000 	ldr	r0, [r0]
40020fac:	e3500000 	cmp	r0, #0
40020fb0:	0a000009 	beq	40020fdc <CyU3PUsbSSDisConnecthandler+0x16c>
40020fb4:	e3a01000 	mov	r1, #0
40020fb8:	e3a00014 	mov	r0, #20
40020fbc:	e59f2038 	ldr	r2, [pc, #56]	; 40020ffc <CyU3PUsbSSDisConnecthandler+0x18c>
40020fc0:	e5922000 	ldr	r2, [r2]
40020fc4:	e12fff32 	blx	r2
40020fc8:	ea000003 	b	40020fdc <CyU3PUsbSSDisConnecthandler+0x16c>
40020fcc:	e3a00000 	mov	r0, #0
40020fd0:	ebffefe2 	bl	4001cf60 <CyU3PUsbPhyEnable>
40020fd4:	ea000000 	b	40020fdc <CyU3PUsbSSDisConnecthandler+0x16c>
40020fd8:	ebfffa07 	bl	4001f7fc <CyU3PUibVbusChangeHandler>
40020fdc:	e8bd8010 	pop	{r4, pc}
40020fe0:	40031d40 	.word	0x40031d40
40020fe4:	e0051000 	.word	0xe0051000
40020fe8:	e0031000 	.word	0xe0031000
40020fec:	e0030000 	.word	0xe0030000
40020ff0:	e0033000 	.word	0xe0033000
40020ff4:	40030c5c 	.word	0x40030c5c
40020ff8:	40030d78 	.word	0x40030d78
40020ffc:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbSSReset:

40021000 <CyU3PUsbSSReset>:
40021000:	e92d4010 	push	{r4, lr}
40021004:	e3a04000 	mov	r4, #0
40021008:	e59f0170 	ldr	r0, [pc, #368]	; 40021180 <CyU3PUsbSSReset+0x180>
4002100c:	e5d00009 	ldrb	r0, [r0, #9]
40021010:	e3500003 	cmp	r0, #3
40021014:	0a000000 	beq	4002101c <CyU3PUsbSSReset+0x1c>
40021018:	e8bd8010 	pop	{r4, pc}
4002101c:	e59f0160 	ldr	r0, [pc, #352]	; 40021184 <CyU3PUsbSSReset+0x184>
40021020:	e5900000 	ldr	r0, [r0]
40021024:	e3500000 	cmp	r0, #0
40021028:	0a000004 	beq	40021040 <CyU3PUsbSSReset+0x40>
4002102c:	e3a01001 	mov	r1, #1
40021030:	e3a00004 	mov	r0, #4
40021034:	e59f2148 	ldr	r2, [pc, #328]	; 40021184 <CyU3PUsbSSReset+0x184>
40021038:	e5922000 	ldr	r2, [r2]
4002103c:	e12fff32 	blx	r2
40021040:	e59f0140 	ldr	r0, [pc, #320]	; 40021188 <CyU3PUsbSSReset+0x188>
40021044:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021048:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
4002104c:	e59f1134 	ldr	r1, [pc, #308]	; 40021188 <CyU3PUsbSSReset+0x188>
40021050:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021054:	e3a00001 	mov	r0, #1
40021058:	ebffc8f8 	bl	40013440 <CyU3PBusyWait>
4002105c:	e59f0124 	ldr	r0, [pc, #292]	; 40021188 <CyU3PUsbSSReset+0x188>
40021060:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021064:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021068:	e59f1118 	ldr	r1, [pc, #280]	; 40021188 <CyU3PUsbSSReset+0x188>
4002106c:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021070:	e3a00001 	mov	r0, #1
40021074:	ebffc8f1 	bl	40013440 <CyU3PBusyWait>
40021078:	e3a00000 	mov	r0, #0
4002107c:	ebffee1a 	bl	4001c8ec <CyU3PUsbFlushEp>
40021080:	e3a00080 	mov	r0, #128	; 0x80
40021084:	ebffee18 	bl	4001c8ec <CyU3PUsbFlushEp>
40021088:	e59f00fc 	ldr	r0, [pc, #252]	; 4002118c <CyU3PUsbSSReset+0x18c>
4002108c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021090:	e3800001 	orr	r0, r0, #1
40021094:	e59f10f0 	ldr	r1, [pc, #240]	; 4002118c <CyU3PUsbSSReset+0x18c>
40021098:	e5810500 	str	r0, [r1, #1280]	; 0x500
4002109c:	e3a00c02 	mov	r0, #512	; 0x200
400210a0:	e1c11200 	bic	r1, r1, r0, lsl #4
400210a4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210a8:	e1810200 	orr	r0, r1, r0, lsl #4
400210ac:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
400210b0:	e3800001 	orr	r0, r0, #1
400210b4:	e2811a02 	add	r1, r1, #8192	; 0x2000
400210b8:	e5810600 	str	r0, [r1, #1536]	; 0x600
400210bc:	e3a00c02 	mov	r0, #512	; 0x200
400210c0:	e1c11200 	bic	r1, r1, r0, lsl #4
400210c4:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210c8:	e3a00000 	mov	r0, #0
400210cc:	ebfff06e 	bl	4001d28c <CyU3PUsbResetEp>
400210d0:	e3a00000 	mov	r0, #0
400210d4:	ebffee04 	bl	4001c8ec <CyU3PUsbFlushEp>
400210d8:	e3a00080 	mov	r0, #128	; 0x80
400210dc:	ebfff06a 	bl	4001d28c <CyU3PUsbResetEp>
400210e0:	e3a00080 	mov	r0, #128	; 0x80
400210e4:	ebffee00 	bl	4001c8ec <CyU3PUsbFlushEp>
400210e8:	e3a00c02 	mov	r0, #512	; 0x200
400210ec:	e59f1094 	ldr	r1, [pc, #148]	; 40021188 <CyU3PUsbSSReset+0x188>
400210f0:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210f4:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210f8:	e3a04001 	mov	r4, #1
400210fc:	ea000019 	b	40021168 <CyU3PUsbSSReset+0x168>
40021100:	e0840084 	add	r0, r4, r4, lsl #1
40021104:	e59f1084 	ldr	r1, [pc, #132]	; 40021190 <CyU3PUsbSSReset+0x190>
40021108:	e0810100 	add	r0, r1, r0, lsl #2
4002110c:	e5900004 	ldr	r0, [r0, #4]
40021110:	e3500001 	cmp	r0, #1
40021114:	1a000005 	bne	40021130 <CyU3PUsbSSReset+0x130>
40021118:	e3840080 	orr	r0, r4, #128	; 0x80
4002111c:	ebffedf2 	bl	4001c8ec <CyU3PUsbFlushEp>
40021120:	e3840080 	orr	r0, r4, #128	; 0x80
40021124:	e3a02001 	mov	r2, #1
40021128:	e3a01000 	mov	r1, #0
4002112c:	ebfff2ba 	bl	4001dc1c <CyU3PUsbStall>
40021130:	e0840084 	add	r0, r4, r4, lsl #1
40021134:	e59f1058 	ldr	r1, [pc, #88]	; 40021194 <CyU3PUsbSSReset+0x194>
40021138:	e0810100 	add	r0, r1, r0, lsl #2
4002113c:	e5900004 	ldr	r0, [r0, #4]
40021140:	e3500001 	cmp	r0, #1
40021144:	1a000005 	bne	40021160 <CyU3PUsbSSReset+0x160>
40021148:	e1a00004 	mov	r0, r4
4002114c:	ebffede6 	bl	4001c8ec <CyU3PUsbFlushEp>
40021150:	e3a02001 	mov	r2, #1
40021154:	e3a01000 	mov	r1, #0
40021158:	e1a00004 	mov	r0, r4
4002115c:	ebfff2ae 	bl	4001dc1c <CyU3PUsbStall>
40021160:	e2840001 	add	r0, r4, #1
40021164:	e20040ff 	and	r4, r0, #255	; 0xff
40021168:	e3540010 	cmp	r4, #16
4002116c:	baffffe3 	blt	40021100 <CyU3PUsbSSReset+0x100>
40021170:	e3a00005 	mov	r0, #5
40021174:	e59f1004 	ldr	r1, [pc, #4]	; 40021180 <CyU3PUsbSSReset+0x180>
40021178:	e5c10008 	strb	r0, [r1, #8]
4002117c:	eaffffa5 	b	40021018 <CyU3PUsbSSReset+0x18>
40021180:	40031d40 	.word	0x40031d40
40021184:	40030da0 	.word	0x40030da0
40021188:	e0031000 	.word	0xe0031000
4002118c:	e0033000 	.word	0xe0033000
40021190:	40031bb4 	.word	0x40031bb4
40021194:	40031c74 	.word	0x40031c74

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

40021198 <CyU3PUsbSendCompliancePatterns>:
40021198:	e92d4070 	push	{r4, r5, r6, lr}
4002119c:	e3a04001 	mov	r4, #1
400211a0:	e59f01ec 	ldr	r0, [pc, #492]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
400211a4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400211a8:	e200503f 	and	r5, r0, #63	; 0x3f
400211ac:	e3550017 	cmp	r5, #23
400211b0:	0a000000 	beq	400211b8 <CyU3PUsbSendCompliancePatterns+0x20>
400211b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400211b8:	e3a00003 	mov	r0, #3
400211bc:	e59f11d4 	ldr	r1, [pc, #468]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
400211c0:	e5c10009 	strb	r0, [r1, #9]
400211c4:	e3a00001 	mov	r0, #1
400211c8:	e5810064 	str	r0, [r1, #100]	; 0x64
400211cc:	e3a00000 	mov	r0, #0
400211d0:	e5810060 	str	r0, [r1, #96]	; 0x60
400211d4:	e3a00d57 	mov	r0, #5568	; 0x15c0
400211d8:	e59f11b4 	ldr	r1, [pc, #436]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
400211dc:	e5810054 	str	r0, [r1, #84]	; 0x54
400211e0:	e59f01b4 	ldr	r0, [pc, #436]	; 4002139c <CyU3PUsbSendCompliancePatterns+0x204>
400211e4:	e5900000 	ldr	r0, [r0]
400211e8:	e3500000 	cmp	r0, #0
400211ec:	0a000004 	beq	40021204 <CyU3PUsbSendCompliancePatterns+0x6c>
400211f0:	e3a01000 	mov	r1, #0
400211f4:	e3a00015 	mov	r0, #21
400211f8:	e59f219c 	ldr	r2, [pc, #412]	; 4002139c <CyU3PUsbSendCompliancePatterns+0x204>
400211fc:	e5922000 	ldr	r2, [r2]
40021200:	e12fff32 	blx	r2
40021204:	e1a00000 	nop			; (mov r0, r0)
40021208:	e59f0184 	ldr	r0, [pc, #388]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002120c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021210:	e3100002 	tst	r0, #2
40021214:	0a000031 	beq	400212e0 <CyU3PUsbSendCompliancePatterns+0x148>
40021218:	e59f0180 	ldr	r0, [pc, #384]	; 400213a0 <CyU3PUsbSendCompliancePatterns+0x208>
4002121c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40021220:	e59f116c 	ldr	r1, [pc, #364]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021224:	e5810138 	str	r0, [r1, #312]	; 0x138
40021228:	e3a00001 	mov	r0, #1
4002122c:	ebff9dd0 	bl	40008974 <_tx_thread_sleep>
40021230:	e59f015c 	ldr	r0, [pc, #348]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021234:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021238:	e3c00002 	bic	r0, r0, #2
4002123c:	e59f1150 	ldr	r1, [pc, #336]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021240:	e5810064 	str	r0, [r1, #100]	; 0x64
40021244:	e3540004 	cmp	r4, #4
40021248:	1a000020 	bne	400212d0 <CyU3PUsbSendCompliancePatterns+0x138>
4002124c:	ea00000d 	b	40021288 <CyU3PUsbSendCompliancePatterns+0xf0>
40021250:	e59f013c 	ldr	r0, [pc, #316]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021254:	e590001c 	ldr	r0, [r0, #28]
40021258:	e3800008 	orr	r0, r0, #8
4002125c:	e59f1130 	ldr	r1, [pc, #304]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021260:	e581001c 	str	r0, [r1, #28]
40021264:	e3a0000a 	mov	r0, #10
40021268:	ebffc874 	bl	40013440 <CyU3PBusyWait>
4002126c:	e59f0120 	ldr	r0, [pc, #288]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021270:	e590001c 	ldr	r0, [r0, #28]
40021274:	e3c00008 	bic	r0, r0, #8
40021278:	e59f1114 	ldr	r1, [pc, #276]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002127c:	e581001c 	str	r0, [r1, #28]
40021280:	e3a0001e 	mov	r0, #30
40021284:	ebffc86d 	bl	40013440 <CyU3PBusyWait>
40021288:	e59f0104 	ldr	r0, [pc, #260]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002128c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021290:	e3100006 	tst	r0, #6
40021294:	1a00000d 	bne	400212d0 <CyU3PUsbSendCompliancePatterns+0x138>
40021298:	e59f00f8 	ldr	r0, [pc, #248]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
4002129c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212a0:	e3500000 	cmp	r0, #0
400212a4:	0a000005 	beq	400212c0 <CyU3PUsbSendCompliancePatterns+0x128>
400212a8:	e59f00f4 	ldr	r0, [pc, #244]	; 400213a4 <CyU3PUsbSendCompliancePatterns+0x20c>
400212ac:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400212b0:	e59f10e0 	ldr	r1, [pc, #224]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
400212b4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400212b8:	e1100001 	tst	r0, r1
400212bc:	0a000003 	beq	400212d0 <CyU3PUsbSendCompliancePatterns+0x138>
400212c0:	e59f00d0 	ldr	r0, [pc, #208]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
400212c4:	e5900060 	ldr	r0, [r0, #96]	; 0x60
400212c8:	e3500000 	cmp	r0, #0
400212cc:	0affffdf 	beq	40021250 <CyU3PUsbSendCompliancePatterns+0xb8>
400212d0:	e3a01009 	mov	r1, #9
400212d4:	e2840001 	add	r0, r4, #1
400212d8:	ebffbde3 	bl	40010a6c <__aeabi_idivmod>
400212dc:	e20140ff 	and	r4, r1, #255	; 0xff
400212e0:	e59f00ac 	ldr	r0, [pc, #172]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
400212e4:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400212e8:	e3100004 	tst	r0, #4
400212ec:	1a00000d 	bne	40021328 <CyU3PUsbSendCompliancePatterns+0x190>
400212f0:	e59f00a0 	ldr	r0, [pc, #160]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
400212f4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212f8:	e3500000 	cmp	r0, #0
400212fc:	0a000005 	beq	40021318 <CyU3PUsbSendCompliancePatterns+0x180>
40021300:	e59f009c 	ldr	r0, [pc, #156]	; 400213a4 <CyU3PUsbSendCompliancePatterns+0x20c>
40021304:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021308:	e59f1088 	ldr	r1, [pc, #136]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
4002130c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021310:	e1100001 	tst	r0, r1
40021314:	0a000003 	beq	40021328 <CyU3PUsbSendCompliancePatterns+0x190>
40021318:	e59f0078 	ldr	r0, [pc, #120]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
4002131c:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021320:	e3500001 	cmp	r0, #1
40021324:	1a000009 	bne	40021350 <CyU3PUsbSendCompliancePatterns+0x1b8>
40021328:	e59f0064 	ldr	r0, [pc, #100]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002132c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021330:	e3c00004 	bic	r0, r0, #4
40021334:	e59f1058 	ldr	r1, [pc, #88]	; 40021394 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021338:	e5810064 	str	r0, [r1, #100]	; 0x64
4002133c:	e3a00c06 	mov	r0, #1536	; 0x600
40021340:	e5810138 	str	r0, [r1, #312]	; 0x138
40021344:	e3a00000 	mov	r0, #0
40021348:	e5810054 	str	r0, [r1, #84]	; 0x54
4002134c:	ea000002 	b	4002135c <CyU3PUsbSendCompliancePatterns+0x1c4>
40021350:	e3a00001 	mov	r0, #1
40021354:	ebff9d86 	bl	40008974 <_tx_thread_sleep>
40021358:	eaffffaa 	b	40021208 <CyU3PUsbSendCompliancePatterns+0x70>
4002135c:	e1a00000 	nop			; (mov r0, r0)
40021360:	e59f0034 	ldr	r0, [pc, #52]	; 4002139c <CyU3PUsbSendCompliancePatterns+0x204>
40021364:	e5900000 	ldr	r0, [r0]
40021368:	e3500000 	cmp	r0, #0
4002136c:	0a000004 	beq	40021384 <CyU3PUsbSendCompliancePatterns+0x1ec>
40021370:	e3a01000 	mov	r1, #0
40021374:	e3a00016 	mov	r0, #22
40021378:	e59f201c 	ldr	r2, [pc, #28]	; 4002139c <CyU3PUsbSendCompliancePatterns+0x204>
4002137c:	e5922000 	ldr	r2, [r2]
40021380:	e12fff32 	blx	r2
40021384:	e3a00000 	mov	r0, #0
40021388:	e59f1008 	ldr	r1, [pc, #8]	; 40021398 <CyU3PUsbSendCompliancePatterns+0x200>
4002138c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021390:	eaffff87 	b	400211b4 <CyU3PUsbSendCompliancePatterns+0x1c>
40021394:	e0033000 	.word	0xe0033000
40021398:	40031d40 	.word	0x40031d40
4002139c:	40030da0 	.word	0x40030da0
400213a0:	40011dac 	.word	0x40011dac
400213a4:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

400213a8 <CyU3PUsbSetupCommand>:
400213a8:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400213ac:	e3a06000 	mov	r6, #0
400213b0:	e3a07000 	mov	r7, #0
400213b4:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
400213b8:	e5d00009 	ldrb	r0, [r0, #9]
400213bc:	e3500003 	cmp	r0, #3
400213c0:	1a00001a 	bne	40021430 <CyU3PUsbSetupCommand+0x88>
400213c4:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021b80 <CyU3PUsbSetupCommand+0x7d8>
400213c8:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
400213cc:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
400213d0:	e3a00001 	mov	r0, #1
400213d4:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
400213d8:	e5810050 	str	r0, [r1, #80]	; 0x50
400213dc:	e3a00000 	mov	r0, #0
400213e0:	e59f179c 	ldr	r1, [pc, #1948]	; 40021b84 <CyU3PUsbSetupCommand+0x7dc>
400213e4:	e5810000 	str	r0, [r1]
400213e8:	e59f0798 	ldr	r0, [pc, #1944]	; 40021b88 <CyU3PUsbSetupCommand+0x7e0>
400213ec:	ebffa5d2 	bl	4000ab3c <_txe_timer_deactivate>
400213f0:	e3a00b02 	mov	r0, #2048	; 0x800
400213f4:	e59f1784 	ldr	r1, [pc, #1924]	; 40021b80 <CyU3PUsbSetupCommand+0x7d8>
400213f8:	e5810404 	str	r0, [r1, #1028]	; 0x404
400213fc:	e1c10000 	bic	r0, r1, r0
40021400:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021404:	e200603f 	and	r6, r0, #63	; 0x3f
40021408:	e3560011 	cmp	r6, #17
4002140c:	0a000001 	beq	40021418 <CyU3PUsbSetupCommand+0x70>
40021410:	e3560012 	cmp	r6, #18
40021414:	1a000003 	bne	40021428 <CyU3PUsbSetupCommand+0x80>
40021418:	e3a02000 	mov	r2, #0
4002141c:	e3a01401 	mov	r1, #16777216	; 0x1000000
40021420:	e59f0764 	ldr	r0, [pc, #1892]	; 40021b8c <CyU3PUsbSetupCommand+0x7e4>
40021424:	ebffa24a 	bl	40009d54 <_txe_event_flags_set>
40021428:	e3a06000 	mov	r6, #0
4002142c:	ea00000d 	b	40021468 <CyU3PUsbSetupCommand+0xc0>
40021430:	e59f0744 	ldr	r0, [pc, #1860]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021434:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40021438:	e3500000 	cmp	r0, #0
4002143c:	0a000006 	beq	4002145c <CyU3PUsbSetupCommand+0xb4>
40021440:	e59f0734 	ldr	r0, [pc, #1844]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021444:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021448:	e3500003 	cmp	r0, #3
4002144c:	2a000002 	bcs	4002145c <CyU3PUsbSetupCommand+0xb4>
40021450:	e3a00001 	mov	r0, #1
40021454:	e59f1720 	ldr	r1, [pc, #1824]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021458:	e581004c 	str	r0, [r1, #76]	; 0x4c
4002145c:	e59f072c 	ldr	r0, [pc, #1836]	; 40021b90 <CyU3PUsbSetupCommand+0x7e8>
40021460:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
40021464:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
40021468:	e3a01064 	mov	r1, #100	; 0x64
4002146c:	e59f0720 	ldr	r0, [pc, #1824]	; 40021b94 <CyU3PUsbSetupCommand+0x7ec>
40021470:	ebffd5fd 	bl	40016c6c <CyU3PDmaChannelWaitForCompletion>
40021474:	e1a06000 	mov	r6, r0
40021478:	e3560000 	cmp	r6, #0
4002147c:	0a00000b 	beq	400214b0 <CyU3PUsbSetupCommand+0x108>
40021480:	e3560042 	cmp	r6, #66	; 0x42
40021484:	0a000009 	beq	400214b0 <CyU3PUsbSetupCommand+0x108>
40021488:	e3a01001 	mov	r1, #1
4002148c:	e3a00000 	mov	r0, #0
40021490:	ebfff11b 	bl	4001d904 <CyU3PUsbSetEpNak>
40021494:	e3a00064 	mov	r0, #100	; 0x64
40021498:	ebffc7e8 	bl	40013440 <CyU3PBusyWait>
4002149c:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021b94 <CyU3PUsbSetupCommand+0x7ec>
400214a0:	ebffd320 	bl	40016128 <CyU3PDmaChannelReset>
400214a4:	e3a01000 	mov	r1, #0
400214a8:	e1a00001 	mov	r0, r1
400214ac:	ebfff114 	bl	4001d904 <CyU3PUsbSetEpNak>
400214b0:	e3a01064 	mov	r1, #100	; 0x64
400214b4:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021b98 <CyU3PUsbSetupCommand+0x7f0>
400214b8:	ebffd5eb 	bl	40016c6c <CyU3PDmaChannelWaitForCompletion>
400214bc:	e1a06000 	mov	r6, r0
400214c0:	e3560000 	cmp	r6, #0
400214c4:	0a00000d 	beq	40021500 <CyU3PUsbSetupCommand+0x158>
400214c8:	e3560042 	cmp	r6, #66	; 0x42
400214cc:	0a00000b 	beq	40021500 <CyU3PUsbSetupCommand+0x158>
400214d0:	e3a01001 	mov	r1, #1
400214d4:	e3a00080 	mov	r0, #128	; 0x80
400214d8:	ebfff109 	bl	4001d904 <CyU3PUsbSetEpNak>
400214dc:	e3a00064 	mov	r0, #100	; 0x64
400214e0:	ebffc7d6 	bl	40013440 <CyU3PBusyWait>
400214e4:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021b98 <CyU3PUsbSetupCommand+0x7f0>
400214e8:	ebffd30e 	bl	40016128 <CyU3PDmaChannelReset>
400214ec:	e3a00080 	mov	r0, #128	; 0x80
400214f0:	ebffecfd 	bl	4001c8ec <CyU3PUsbFlushEp>
400214f4:	e3a01000 	mov	r1, #0
400214f8:	e3a00080 	mov	r0, #128	; 0x80
400214fc:	ebfff100 	bl	4001d904 <CyU3PUsbSetEpNak>
40021500:	e3a06000 	mov	r6, #0
40021504:	e20490ff 	and	r9, r4, #255	; 0xff
40021508:	e209a060 	and	sl, r9, #96	; 0x60
4002150c:	e2090003 	and	r0, r9, #3
40021510:	e58d0008 	str	r0, [sp, #8]
40021514:	e2040cff 	and	r0, r4, #65280	; 0xff00
40021518:	e1a08420 	lsr	r8, r0, #8
4002151c:	e59f0678 	ldr	r0, [pc, #1656]	; 40021b9c <CyU3PUsbSetupCommand+0x7f4>
40021520:	e000b824 	and	fp, r0, r4, lsr #16
40021524:	e0050000 	and	r0, r5, r0
40021528:	e58d0004 	str	r0, [sp, #4]
4002152c:	e59f0668 	ldr	r0, [pc, #1640]	; 40021b9c <CyU3PUsbSetupCommand+0x7f4>
40021530:	e0000825 	and	r0, r0, r5, lsr #16
40021534:	e58d0000 	str	r0, [sp]
40021538:	e3140080 	tst	r4, #128	; 0x80
4002153c:	0a000003 	beq	40021550 <CyU3PUsbSetupCommand+0x1a8>
40021540:	e59d0000 	ldr	r0, [sp]
40021544:	e59f1644 	ldr	r1, [pc, #1604]	; 40021b90 <CyU3PUsbSetupCommand+0x7e8>
40021548:	e5810458 	str	r0, [r1, #1112]	; 0x458
4002154c:	ea000002 	b	4002155c <CyU3PUsbSetupCommand+0x1b4>
40021550:	e59d0000 	ldr	r0, [sp]
40021554:	e59f1634 	ldr	r1, [pc, #1588]	; 40021b90 <CyU3PUsbSetupCommand+0x7e8>
40021558:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
4002155c:	e3a00000 	mov	r0, #0
40021560:	e59f1614 	ldr	r1, [pc, #1556]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021564:	e5810040 	str	r0, [r1, #64]	; 0x40
40021568:	e59f0620 	ldr	r0, [pc, #1568]	; 40021b90 <CyU3PUsbSetupCommand+0x7e8>
4002156c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021570:	e3c00008 	bic	r0, r0, #8
40021574:	e59f1614 	ldr	r1, [pc, #1556]	; 40021b90 <CyU3PUsbSetupCommand+0x7e8>
40021578:	e5810518 	str	r0, [r1, #1304]	; 0x518
4002157c:	e3a00000 	mov	r0, #0
40021580:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021584:	e5810018 	str	r0, [r1, #24]
40021588:	e5810070 	str	r0, [r1, #112]	; 0x70
4002158c:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021b90 <CyU3PUsbSetupCommand+0x7e8>
40021590:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021594:	e3800008 	orr	r0, r0, #8
40021598:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021b90 <CyU3PUsbSetupCommand+0x7e8>
4002159c:	e5810518 	str	r0, [r1, #1304]	; 0x518
400215a0:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
400215a4:	e5d00007 	ldrb	r0, [r0, #7]
400215a8:	e3500001 	cmp	r0, #1
400215ac:	0a000001 	beq	400215b8 <CyU3PUsbSetupCommand+0x210>
400215b0:	e35a0000 	cmp	sl, #0
400215b4:	0a000024 	beq	4002164c <CyU3PUsbSetupCommand+0x2a4>
400215b8:	e35a0000 	cmp	sl, #0
400215bc:	1a000012 	bne	4002160c <CyU3PUsbSetupCommand+0x264>
400215c0:	e3580009 	cmp	r8, #9
400215c4:	1a000010 	bne	4002160c <CyU3PUsbSetupCommand+0x264>
400215c8:	e35b0001 	cmp	fp, #1
400215cc:	1a00000b 	bne	40021600 <CyU3PUsbSetupCommand+0x258>
400215d0:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
400215d4:	e5d10009 	ldrb	r0, [r1, #9]
400215d8:	ebfff993 	bl	4001fc2c <CyU3PUsbEpPrepare>
400215dc:	e3a00006 	mov	r0, #6
400215e0:	e59f1594 	ldr	r1, [pc, #1428]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
400215e4:	e5c10008 	strb	r0, [r1, #8]
400215e8:	e5c1b00c 	strb	fp, [r1, #12]
400215ec:	e2810000 	add	r0, r1, #0
400215f0:	e5d00006 	ldrb	r0, [r0, #6]
400215f4:	e2000001 	and	r0, r0, #1
400215f8:	e5c10006 	strb	r0, [r1, #6]
400215fc:	ea000002 	b	4002160c <CyU3PUsbSetupCommand+0x264>
40021600:	e3a00005 	mov	r0, #5
40021604:	e59f1570 	ldr	r1, [pc, #1392]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021608:	e5c10008 	strb	r0, [r1, #8]
4002160c:	e59f058c 	ldr	r0, [pc, #1420]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021610:	e5900000 	ldr	r0, [r0]
40021614:	e3500000 	cmp	r0, #0
40021618:	0a000005 	beq	40021634 <CyU3PUsbSetupCommand+0x28c>
4002161c:	e1a01005 	mov	r1, r5
40021620:	e1a00004 	mov	r0, r4
40021624:	e59f2574 	ldr	r2, [pc, #1396]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021628:	e5922000 	ldr	r2, [r2]
4002162c:	e12fff32 	blx	r2
40021630:	e1a07000 	mov	r7, r0
40021634:	e3570001 	cmp	r7, #1
40021638:	1a000003 	bne	4002164c <CyU3PUsbSetupCommand+0x2a4>
4002163c:	e3a00001 	mov	r0, #1
40021640:	e59f1534 	ldr	r1, [pc, #1332]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021644:	e5810040 	str	r0, [r1, #64]	; 0x40
40021648:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4002164c:	e35a0000 	cmp	sl, #0
40021650:	1a000140 	bne	40021b58 <CyU3PUsbSetupCommand+0x7b0>
40021654:	e3580009 	cmp	r8, #9
40021658:	0a0000b1 	beq	40021924 <CyU3PUsbSetupCommand+0x57c>
4002165c:	ca00000b 	bgt	40021690 <CyU3PUsbSetupCommand+0x2e8>
40021660:	e3580009 	cmp	r8, #9
40021664:	308ff108 	addcc	pc, pc, r8, lsl #2
40021668:	ea000137 	b	40021b4c <CyU3PUsbSetupCommand+0x7a4>
4002166c:	ea000014 	b	400216c4 <CyU3PUsbSetupCommand+0x31c>
40021670:	ea000029 	b	4002171c <CyU3PUsbSetupCommand+0x374>
40021674:	ea000134 	b	40021b4c <CyU3PUsbSetupCommand+0x7a4>
40021678:	ea000057 	b	400217dc <CyU3PUsbSetupCommand+0x434>
4002167c:	ea000132 	b	40021b4c <CyU3PUsbSetupCommand+0x7a4>
40021680:	ea000131 	b	40021b4c <CyU3PUsbSetupCommand+0x7a4>
40021684:	ea000099 	b	400218f0 <CyU3PUsbSetupCommand+0x548>
40021688:	ea00012f 	b	40021b4c <CyU3PUsbSetupCommand+0x7a4>
4002168c:	ea00009d 	b	40021908 <CyU3PUsbSetupCommand+0x560>
40021690:	e358000c 	cmp	r8, #12
40021694:	0a0000fb 	beq	40021a88 <CyU3PUsbSetupCommand+0x6e0>
40021698:	ca000004 	bgt	400216b0 <CyU3PUsbSetupCommand+0x308>
4002169c:	e358000a 	cmp	r8, #10
400216a0:	0a0000c5 	beq	400219bc <CyU3PUsbSetupCommand+0x614>
400216a4:	e358000b 	cmp	r8, #11
400216a8:	1a000127 	bne	40021b4c <CyU3PUsbSetupCommand+0x7a4>
400216ac:	ea0000d6 	b	40021a0c <CyU3PUsbSetupCommand+0x664>
400216b0:	e3580030 	cmp	r8, #48	; 0x30
400216b4:	0a0000f7 	beq	40021a98 <CyU3PUsbSetupCommand+0x6f0>
400216b8:	e3580031 	cmp	r8, #49	; 0x31
400216bc:	1a000122 	bne	40021b4c <CyU3PUsbSetupCommand+0x7a4>
400216c0:	ea000114 	b	40021b18 <CyU3PUsbSetupCommand+0x770>
400216c4:	e1a00000 	nop			; (mov r0, r0)
400216c8:	e59d0008 	ldr	r0, [sp, #8]
400216cc:	e3500001 	cmp	r0, #1
400216d0:	1a00000c 	bne	40021708 <CyU3PUsbSetupCommand+0x360>
400216d4:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
400216d8:	e5900000 	ldr	r0, [r0]
400216dc:	e3500000 	cmp	r0, #0
400216e0:	0a000008 	beq	40021708 <CyU3PUsbSetupCommand+0x360>
400216e4:	e1a01005 	mov	r1, r5
400216e8:	e1a00004 	mov	r0, r4
400216ec:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
400216f0:	e5922000 	ldr	r2, [r2]
400216f4:	e12fff32 	blx	r2
400216f8:	e1a07000 	mov	r7, r0
400216fc:	e3570000 	cmp	r7, #0
40021700:	0a000000 	beq	40021708 <CyU3PUsbSetupCommand+0x360>
40021704:	ea000112 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021708:	e59d0008 	ldr	r0, [sp, #8]
4002170c:	e59d1004 	ldr	r1, [sp, #4]
40021710:	ebfffbd3 	bl	40020664 <CyU3PUsbHandleGetStatus>
40021714:	e1a07000 	mov	r7, r0
40021718:	ea00010d 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
4002171c:	e1a00000 	nop			; (mov r0, r0)
40021720:	e59d0008 	ldr	r0, [sp, #8]
40021724:	e3500000 	cmp	r0, #0
40021728:	1a000002 	bne	40021738 <CyU3PUsbSetupCommand+0x390>
4002172c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021730:	ebfffa86 	bl	40020150 <CyU3PUsbHandleClearFeature>
40021734:	eaffffc3 	b	40021648 <CyU3PUsbSetupCommand+0x2a0>
40021738:	e3a07000 	mov	r7, #0
4002173c:	e59f0438 	ldr	r0, [pc, #1080]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021740:	e5d00007 	ldrb	r0, [r0, #7]
40021744:	e3500000 	cmp	r0, #0
40021748:	1a00000e 	bne	40021788 <CyU3PUsbSetupCommand+0x3e0>
4002174c:	e59f044c 	ldr	r0, [pc, #1100]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021750:	e5900000 	ldr	r0, [r0]
40021754:	e3500000 	cmp	r0, #0
40021758:	0a00000a 	beq	40021788 <CyU3PUsbSetupCommand+0x3e0>
4002175c:	e1a01005 	mov	r1, r5
40021760:	e1a00004 	mov	r0, r4
40021764:	e59f2434 	ldr	r2, [pc, #1076]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021768:	e5922000 	ldr	r2, [r2]
4002176c:	e12fff32 	blx	r2
40021770:	e1a07000 	mov	r7, r0
40021774:	e3570000 	cmp	r7, #0
40021778:	0a000002 	beq	40021788 <CyU3PUsbSetupCommand+0x3e0>
4002177c:	e3a00001 	mov	r0, #1
40021780:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021784:	e5810040 	str	r0, [r1, #64]	; 0x40
40021788:	e3570000 	cmp	r7, #0
4002178c:	1a000011 	bne	400217d8 <CyU3PUsbSetupCommand+0x430>
40021790:	e59d0008 	ldr	r0, [sp, #8]
40021794:	e3500002 	cmp	r0, #2
40021798:	1a00000e 	bne	400217d8 <CyU3PUsbSetupCommand+0x430>
4002179c:	e35b0000 	cmp	fp, #0
400217a0:	1a00000c 	bne	400217d8 <CyU3PUsbSetupCommand+0x430>
400217a4:	e59d1004 	ldr	r1, [sp, #4]
400217a8:	e20100ff 	and	r0, r1, #255	; 0xff
400217ac:	e3a02001 	mov	r2, #1
400217b0:	e3a01000 	mov	r1, #0
400217b4:	ebfff118 	bl	4001dc1c <CyU3PUsbStall>
400217b8:	e3500000 	cmp	r0, #0
400217bc:	1a000005 	bne	400217d8 <CyU3PUsbSetupCommand+0x430>
400217c0:	e59d1004 	ldr	r1, [sp, #4]
400217c4:	e20100ff 	and	r0, r1, #255	; 0xff
400217c8:	ebffeeaf 	bl	4001d28c <CyU3PUsbResetEp>
400217cc:	ebffeb4e 	bl	4001c50c <CyU3PUsbAckSetup>
400217d0:	e3a07001 	mov	r7, #1
400217d4:	ea0000de 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
400217d8:	ea0000dd 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
400217dc:	e1a00000 	nop			; (mov r0, r0)
400217e0:	e59d0008 	ldr	r0, [sp, #8]
400217e4:	e3500000 	cmp	r0, #0
400217e8:	1a00001b 	bne	4002185c <CyU3PUsbSetupCommand+0x4b4>
400217ec:	e35b0003 	cmp	fp, #3
400217f0:	0a000004 	beq	40021808 <CyU3PUsbSetupCommand+0x460>
400217f4:	e35b0004 	cmp	fp, #4
400217f8:	0a000002 	beq	40021808 <CyU3PUsbSetupCommand+0x460>
400217fc:	e20b00ff 	and	r0, fp, #255	; 0xff
40021800:	ebfffbd5 	bl	4002075c <CyU3PUsbHandleSetFeature>
40021804:	eaffff8f 	b	40021648 <CyU3PUsbSetupCommand+0x2a0>
40021808:	e59f036c 	ldr	r0, [pc, #876]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
4002180c:	e5d00007 	ldrb	r0, [r0, #7]
40021810:	e3500000 	cmp	r0, #0
40021814:	1a00000f 	bne	40021858 <CyU3PUsbSetupCommand+0x4b0>
40021818:	e59f0380 	ldr	r0, [pc, #896]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
4002181c:	e5900000 	ldr	r0, [r0]
40021820:	e3500000 	cmp	r0, #0
40021824:	0a00000b 	beq	40021858 <CyU3PUsbSetupCommand+0x4b0>
40021828:	e1a01005 	mov	r1, r5
4002182c:	e1a00004 	mov	r0, r4
40021830:	e59f2368 	ldr	r2, [pc, #872]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021834:	e5922000 	ldr	r2, [r2]
40021838:	e12fff32 	blx	r2
4002183c:	e1a07000 	mov	r7, r0
40021840:	e3570000 	cmp	r7, #0
40021844:	0a000003 	beq	40021858 <CyU3PUsbSetupCommand+0x4b0>
40021848:	e3a00001 	mov	r0, #1
4002184c:	e59f1328 	ldr	r1, [pc, #808]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021850:	e5810040 	str	r0, [r1, #64]	; 0x40
40021854:	eaffff7b 	b	40021648 <CyU3PUsbSetupCommand+0x2a0>
40021858:	ea0000bd 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
4002185c:	e3a07000 	mov	r7, #0
40021860:	e59f0314 	ldr	r0, [pc, #788]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021864:	e5d00007 	ldrb	r0, [r0, #7]
40021868:	e3500000 	cmp	r0, #0
4002186c:	1a00000e 	bne	400218ac <CyU3PUsbSetupCommand+0x504>
40021870:	e59f0328 	ldr	r0, [pc, #808]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021874:	e5900000 	ldr	r0, [r0]
40021878:	e3500000 	cmp	r0, #0
4002187c:	0a00000a 	beq	400218ac <CyU3PUsbSetupCommand+0x504>
40021880:	e1a01005 	mov	r1, r5
40021884:	e1a00004 	mov	r0, r4
40021888:	e59f2310 	ldr	r2, [pc, #784]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
4002188c:	e5922000 	ldr	r2, [r2]
40021890:	e12fff32 	blx	r2
40021894:	e1a07000 	mov	r7, r0
40021898:	e3570000 	cmp	r7, #0
4002189c:	0a000002 	beq	400218ac <CyU3PUsbSetupCommand+0x504>
400218a0:	e3a00001 	mov	r0, #1
400218a4:	e59f12d0 	ldr	r1, [pc, #720]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
400218a8:	e5810040 	str	r0, [r1, #64]	; 0x40
400218ac:	e3570000 	cmp	r7, #0
400218b0:	1a00000d 	bne	400218ec <CyU3PUsbSetupCommand+0x544>
400218b4:	e59d0008 	ldr	r0, [sp, #8]
400218b8:	e3500002 	cmp	r0, #2
400218bc:	1a00000a 	bne	400218ec <CyU3PUsbSetupCommand+0x544>
400218c0:	e35b0000 	cmp	fp, #0
400218c4:	1a000008 	bne	400218ec <CyU3PUsbSetupCommand+0x544>
400218c8:	e59d1004 	ldr	r1, [sp, #4]
400218cc:	e20100ff 	and	r0, r1, #255	; 0xff
400218d0:	e3a02000 	mov	r2, #0
400218d4:	e3a01001 	mov	r1, #1
400218d8:	ebfff0cf 	bl	4001dc1c <CyU3PUsbStall>
400218dc:	e3500000 	cmp	r0, #0
400218e0:	1a000001 	bne	400218ec <CyU3PUsbSetupCommand+0x544>
400218e4:	ebffeb08 	bl	4001c50c <CyU3PUsbAckSetup>
400218e8:	e3a07001 	mov	r7, #1
400218ec:	ea000098 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
400218f0:	e1a00000 	nop			; (mov r0, r0)
400218f4:	e1a01005 	mov	r1, r5
400218f8:	e1a00004 	mov	r0, r4
400218fc:	ebfff5d5 	bl	4001f058 <CyU3PUibSendDescr>
40021900:	e1a07000 	mov	r7, r0
40021904:	ea000092 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021908:	e1a00000 	nop			; (mov r0, r0)
4002190c:	e3a07001 	mov	r7, #1
40021910:	e59f128c 	ldr	r1, [pc, #652]	; 40021ba4 <CyU3PUsbSetupCommand+0x7fc>
40021914:	e3a00001 	mov	r0, #1
40021918:	ebffee94 	bl	4001d370 <CyU3PUsbSendEP0Data>
4002191c:	e1a06000 	mov	r6, r0
40021920:	ea00008b 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021924:	e1a00000 	nop			; (mov r0, r0)
40021928:	e3a07001 	mov	r7, #1
4002192c:	e35b0000 	cmp	fp, #0
40021930:	0a000005 	beq	4002194c <CyU3PUsbSetupCommand+0x5a4>
40021934:	e35b0001 	cmp	fp, #1
40021938:	1a00001a 	bne	400219a8 <CyU3PUsbSetupCommand+0x600>
4002193c:	e59f1238 	ldr	r1, [pc, #568]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021940:	e5d10009 	ldrb	r0, [r1, #9]
40021944:	ebfff8b8 	bl	4001fc2c <CyU3PUsbEpPrepare>
40021948:	e1a00000 	nop			; (mov r0, r0)
4002194c:	e35b0000 	cmp	fp, #0
40021950:	1a000001 	bne	4002195c <CyU3PUsbSetupCommand+0x5b4>
40021954:	e3a00005 	mov	r0, #5
40021958:	ea000000 	b	40021960 <CyU3PUsbSetupCommand+0x5b8>
4002195c:	e3a00006 	mov	r0, #6
40021960:	e59f1214 	ldr	r1, [pc, #532]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021964:	e5c10008 	strb	r0, [r1, #8]
40021968:	e5c1b00c 	strb	fp, [r1, #12]
4002196c:	e2810000 	add	r0, r1, #0
40021970:	e5d00006 	ldrb	r0, [r0, #6]
40021974:	e2000001 	and	r0, r0, #1
40021978:	e5c10006 	strb	r0, [r1, #6]
4002197c:	e59f0224 	ldr	r0, [pc, #548]	; 40021ba8 <CyU3PUsbSetupCommand+0x800>
40021980:	e5900000 	ldr	r0, [r0]
40021984:	e3500000 	cmp	r0, #0
40021988:	0a000004 	beq	400219a0 <CyU3PUsbSetupCommand+0x5f8>
4002198c:	e1a0100b 	mov	r1, fp
40021990:	e3a00005 	mov	r0, #5
40021994:	e59f220c 	ldr	r2, [pc, #524]	; 40021ba8 <CyU3PUsbSetupCommand+0x800>
40021998:	e5922000 	ldr	r2, [r2]
4002199c:	e12fff32 	blx	r2
400219a0:	ebffead9 	bl	4001c50c <CyU3PUsbAckSetup>
400219a4:	ea000002 	b	400219b4 <CyU3PUsbSetupCommand+0x60c>
400219a8:	e1a00000 	nop			; (mov r0, r0)
400219ac:	e3a06040 	mov	r6, #64	; 0x40
400219b0:	e1a00000 	nop			; (mov r0, r0)
400219b4:	e1a00000 	nop			; (mov r0, r0)
400219b8:	ea000065 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
400219bc:	e1a00000 	nop			; (mov r0, r0)
400219c0:	e59f01d8 	ldr	r0, [pc, #472]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
400219c4:	e5900000 	ldr	r0, [r0]
400219c8:	e3500000 	cmp	r0, #0
400219cc:	0a000008 	beq	400219f4 <CyU3PUsbSetupCommand+0x64c>
400219d0:	e1a01005 	mov	r1, r5
400219d4:	e1a00004 	mov	r0, r4
400219d8:	e59f21c0 	ldr	r2, [pc, #448]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
400219dc:	e5922000 	ldr	r2, [r2]
400219e0:	e12fff32 	blx	r2
400219e4:	e1a07000 	mov	r7, r0
400219e8:	e3570000 	cmp	r7, #0
400219ec:	0a000000 	beq	400219f4 <CyU3PUsbSetupCommand+0x64c>
400219f0:	ea000057 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
400219f4:	e3a07001 	mov	r7, #1
400219f8:	e59f11ac 	ldr	r1, [pc, #428]	; 40021bac <CyU3PUsbSetupCommand+0x804>
400219fc:	e3a00001 	mov	r0, #1
40021a00:	ebffee5a 	bl	4001d370 <CyU3PUsbSendEP0Data>
40021a04:	e1a06000 	mov	r6, r0
40021a08:	ea000051 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021a0c:	e1a00000 	nop			; (mov r0, r0)
40021a10:	e59f0188 	ldr	r0, [pc, #392]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021a14:	e5900000 	ldr	r0, [r0]
40021a18:	e3500000 	cmp	r0, #0
40021a1c:	0a000008 	beq	40021a44 <CyU3PUsbSetupCommand+0x69c>
40021a20:	e1a01005 	mov	r1, r5
40021a24:	e1a00004 	mov	r0, r4
40021a28:	e59f2170 	ldr	r2, [pc, #368]	; 40021ba0 <CyU3PUsbSetupCommand+0x7f8>
40021a2c:	e5922000 	ldr	r2, [r2]
40021a30:	e12fff32 	blx	r2
40021a34:	e1a07000 	mov	r7, r0
40021a38:	e3570000 	cmp	r7, #0
40021a3c:	0a000000 	beq	40021a44 <CyU3PUsbSetupCommand+0x69c>
40021a40:	ea000043 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021a44:	e59f1130 	ldr	r1, [pc, #304]	; 40021b7c <CyU3PUsbSetupCommand+0x7d4>
40021a48:	e5c1b00d 	strb	fp, [r1, #13]
40021a4c:	e59f0154 	ldr	r0, [pc, #340]	; 40021ba8 <CyU3PUsbSetupCommand+0x800>
40021a50:	e5900000 	ldr	r0, [r0]
40021a54:	e3500000 	cmp	r0, #0
40021a58:	0a000007 	beq	40021a7c <CyU3PUsbSetupCommand+0x6d4>
40021a5c:	e20b00ff 	and	r0, fp, #255	; 0xff
40021a60:	e59d2004 	ldr	r2, [sp, #4]
40021a64:	e1800402 	orr	r0, r0, r2, lsl #8
40021a68:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021a6c:	e3a00007 	mov	r0, #7
40021a70:	e59f2130 	ldr	r2, [pc, #304]	; 40021ba8 <CyU3PUsbSetupCommand+0x800>
40021a74:	e5922000 	ldr	r2, [r2]
40021a78:	e12fff32 	blx	r2
40021a7c:	e3a07001 	mov	r7, #1
40021a80:	ebffeaa1 	bl	4001c50c <CyU3PUsbAckSetup>
40021a84:	ea000032 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021a88:	e1a00000 	nop			; (mov r0, r0)
40021a8c:	e3a07001 	mov	r7, #1
40021a90:	ebffea9d 	bl	4001c50c <CyU3PUsbAckSetup>
40021a94:	ea00002e 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021a98:	e1a00000 	nop			; (mov r0, r0)
40021a9c:	ebffec37 	bl	4001cb80 <CyU3PUsbGetSpeed>
40021aa0:	e3500003 	cmp	r0, #3
40021aa4:	1a000019 	bne	40021b10 <CyU3PUsbSetupCommand+0x768>
40021aa8:	e35b0000 	cmp	fp, #0
40021aac:	1a000017 	bne	40021b10 <CyU3PUsbSetupCommand+0x768>
40021ab0:	e59d0004 	ldr	r0, [sp, #4]
40021ab4:	e3500000 	cmp	r0, #0
40021ab8:	1a000014 	bne	40021b10 <CyU3PUsbSetupCommand+0x768>
40021abc:	e59d0000 	ldr	r0, [sp]
40021ac0:	e3500006 	cmp	r0, #6
40021ac4:	1a000011 	bne	40021b10 <CyU3PUsbSetupCommand+0x768>
40021ac8:	e3a07001 	mov	r7, #1
40021acc:	e3a02000 	mov	r2, #0
40021ad0:	e59f10d8 	ldr	r1, [pc, #216]	; 40021bb0 <CyU3PUsbSetupCommand+0x808>
40021ad4:	e3a00020 	mov	r0, #32
40021ad8:	ebffebb6 	bl	4001c9b8 <CyU3PUsbGetEP0Data>
40021adc:	e1a06000 	mov	r6, r0
40021ae0:	e59f00c0 	ldr	r0, [pc, #192]	; 40021ba8 <CyU3PUsbSetupCommand+0x800>
40021ae4:	e5900000 	ldr	r0, [r0]
40021ae8:	e3500000 	cmp	r0, #0
40021aec:	0a000008 	beq	40021b14 <CyU3PUsbSetupCommand+0x76c>
40021af0:	e3560000 	cmp	r6, #0
40021af4:	1a000006 	bne	40021b14 <CyU3PUsbSetupCommand+0x76c>
40021af8:	e3a01000 	mov	r1, #0
40021afc:	e3a00008 	mov	r0, #8
40021b00:	e59f20a0 	ldr	r2, [pc, #160]	; 40021ba8 <CyU3PUsbSetupCommand+0x800>
40021b04:	e5922000 	ldr	r2, [r2]
40021b08:	e12fff32 	blx	r2
40021b0c:	ea000000 	b	40021b14 <CyU3PUsbSetupCommand+0x76c>
40021b10:	e3a07000 	mov	r7, #0
40021b14:	ea00000e 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021b18:	e1a00000 	nop			; (mov r0, r0)
40021b1c:	ebffec17 	bl	4001cb80 <CyU3PUsbGetSpeed>
40021b20:	e3500003 	cmp	r0, #3
40021b24:	1a000007 	bne	40021b48 <CyU3PUsbSetupCommand+0x7a0>
40021b28:	e59d0004 	ldr	r0, [sp, #4]
40021b2c:	e3500000 	cmp	r0, #0
40021b30:	1a000004 	bne	40021b48 <CyU3PUsbSetupCommand+0x7a0>
40021b34:	e59d0000 	ldr	r0, [sp]
40021b38:	e3500000 	cmp	r0, #0
40021b3c:	1a000001 	bne	40021b48 <CyU3PUsbSetupCommand+0x7a0>
40021b40:	e3a07001 	mov	r7, #1
40021b44:	ebffea70 	bl	4001c50c <CyU3PUsbAckSetup>
40021b48:	ea000001 	b	40021b54 <CyU3PUsbSetupCommand+0x7ac>
40021b4c:	e1a00000 	nop			; (mov r0, r0)
40021b50:	e1a00000 	nop			; (mov r0, r0)
40021b54:	e1a00000 	nop			; (mov r0, r0)
40021b58:	e3570001 	cmp	r7, #1
40021b5c:	1a000001 	bne	40021b68 <CyU3PUsbSetupCommand+0x7c0>
40021b60:	e3560000 	cmp	r6, #0
40021b64:	0a000003 	beq	40021b78 <CyU3PUsbSetupCommand+0x7d0>
40021b68:	e3a02000 	mov	r2, #0
40021b6c:	e3a01001 	mov	r1, #1
40021b70:	e1a00002 	mov	r0, r2
40021b74:	ebfff028 	bl	4001dc1c <CyU3PUsbStall>
40021b78:	eafffeb2 	b	40021648 <CyU3PUsbSetupCommand+0x2a0>
40021b7c:	40031d40 	.word	0x40031d40
40021b80:	e0033000 	.word	0xe0033000
40021b84:	40030db4 	.word	0x40030db4
40021b88:	400326a0 	.word	0x400326a0
40021b8c:	40031eb8 	.word	0x40031eb8
40021b90:	e0031000 	.word	0xe0031000
40021b94:	40031b14 	.word	0x40031b14
40021b98:	40031a74 	.word	0x40031a74
40021b9c:	0000ffff 	.word	0x0000ffff
40021ba0:	40030da4 	.word	0x40030da4
40021ba4:	40031d4c 	.word	0x40031d4c
40021ba8:	40030da0 	.word	0x40030da0
40021bac:	40031d4d 	.word	0x40031d4d
40021bb0:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40021bb4 <CyU3PUsbSuspendHandler>:
40021bb4:	e92d4010 	push	{r4, lr}
40021bb8:	e59f003c 	ldr	r0, [pc, #60]	; 40021bfc <CyU3PUsbSuspendHandler+0x48>
40021bbc:	e5d00008 	ldrb	r0, [r0, #8]
40021bc0:	e3500005 	cmp	r0, #5
40021bc4:	ba00000b 	blt	40021bf8 <CyU3PUsbSuspendHandler+0x44>
40021bc8:	e59f0030 	ldr	r0, [pc, #48]	; 40021c00 <CyU3PUsbSuspendHandler+0x4c>
40021bcc:	e5900000 	ldr	r0, [r0]
40021bd0:	e3500000 	cmp	r0, #0
40021bd4:	0a000004 	beq	40021bec <CyU3PUsbSuspendHandler+0x38>
40021bd8:	e3a01000 	mov	r1, #0
40021bdc:	e3a00002 	mov	r0, #2
40021be0:	e59f2018 	ldr	r2, [pc, #24]	; 40021c00 <CyU3PUsbSuspendHandler+0x4c>
40021be4:	e5922000 	ldr	r2, [r2]
40021be8:	e12fff32 	blx	r2
40021bec:	e3a00005 	mov	r0, #5
40021bf0:	e59f1004 	ldr	r1, [pc, #4]	; 40021bfc <CyU3PUsbSuspendHandler+0x48>
40021bf4:	e5c10008 	strb	r0, [r1, #8]
40021bf8:	e8bd8010 	pop	{r4, pc}
40021bfc:	40031d40 	.word	0x40031d40
40021c00:	40030da0 	.word	0x40030da0

Disassembly of section i.HandleVbusOffEvent:

40021c04 <HandleVbusOffEvent>:
40021c04:	e92d4010 	push	{r4, lr}
40021c08:	e59f00e0 	ldr	r0, [pc, #224]	; 40021cf0 <HandleVbusOffEvent+0xec>
40021c0c:	e5d00009 	ldrb	r0, [r0, #9]
40021c10:	e3500003 	cmp	r0, #3
40021c14:	1a000002 	bne	40021c24 <HandleVbusOffEvent+0x20>
40021c18:	e3a00001 	mov	r0, #1
40021c1c:	ebffec59 	bl	4001cd88 <CyU3PUsbPhyDisable>
40021c20:	ea000022 	b	40021cb0 <HandleVbusOffEvent+0xac>
40021c24:	e59f00c8 	ldr	r0, [pc, #200]	; 40021cf4 <HandleVbusOffEvent+0xf0>
40021c28:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021c2c:	e3100901 	tst	r0, #16384	; 0x4000
40021c30:	0a00001c 	beq	40021ca8 <HandleVbusOffEvent+0xa4>
40021c34:	e59f00b8 	ldr	r0, [pc, #184]	; 40021cf4 <HandleVbusOffEvent+0xf0>
40021c38:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021c3c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021c40:	e59f10ac 	ldr	r1, [pc, #172]	; 40021cf4 <HandleVbusOffEvent+0xf0>
40021c44:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021c48:	e3a00002 	mov	r0, #2
40021c4c:	ebffc5fb 	bl	40013440 <CyU3PBusyWait>
40021c50:	e59f00a0 	ldr	r0, [pc, #160]	; 40021cf8 <HandleVbusOffEvent+0xf4>
40021c54:	e5900004 	ldr	r0, [r0, #4]
40021c58:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021c5c:	e59f1094 	ldr	r1, [pc, #148]	; 40021cf8 <HandleVbusOffEvent+0xf4>
40021c60:	e5810004 	str	r0, [r1, #4]
40021c64:	e3a00001 	mov	r0, #1
40021c68:	ebffc5f4 	bl	40013440 <CyU3PBusyWait>
40021c6c:	e59f0088 	ldr	r0, [pc, #136]	; 40021cfc <HandleVbusOffEvent+0xf8>
40021c70:	e590001c 	ldr	r0, [r0, #28]
40021c74:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021c78:	e59f107c 	ldr	r1, [pc, #124]	; 40021cfc <HandleVbusOffEvent+0xf8>
40021c7c:	e581001c 	str	r0, [r1, #28]
40021c80:	e59f0078 	ldr	r0, [pc, #120]	; 40021d00 <HandleVbusOffEvent+0xfc>
40021c84:	e5900000 	ldr	r0, [r0]
40021c88:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021c8c:	e3a00001 	mov	r0, #1
40021c90:	ebffc5ea 	bl	40013440 <CyU3PBusyWait>
40021c94:	e59f005c 	ldr	r0, [pc, #92]	; 40021cf8 <HandleVbusOffEvent+0xf4>
40021c98:	e5900004 	ldr	r0, [r0, #4]
40021c9c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021ca0:	e59f1050 	ldr	r1, [pc, #80]	; 40021cf8 <HandleVbusOffEvent+0xf4>
40021ca4:	e5810004 	str	r0, [r1, #4]
40021ca8:	e3a00000 	mov	r0, #0
40021cac:	ebffec35 	bl	4001cd88 <CyU3PUsbPhyDisable>
40021cb0:	e3a01000 	mov	r1, #0
40021cb4:	e3a00001 	mov	r0, #1
40021cb8:	e59f2044 	ldr	r2, [pc, #68]	; 40021d04 <HandleVbusOffEvent+0x100>
40021cbc:	e5922000 	ldr	r2, [r2]
40021cc0:	e12fff32 	blx	r2
40021cc4:	e3a00000 	mov	r0, #0
40021cc8:	e59f1020 	ldr	r1, [pc, #32]	; 40021cf0 <HandleVbusOffEvent+0xec>
40021ccc:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021cd0:	e3a00004 	mov	r0, #4
40021cd4:	e5c10008 	strb	r0, [r1, #8]
40021cd8:	e3a00000 	mov	r0, #0
40021cdc:	e5c10009 	strb	r0, [r1, #9]
40021ce0:	e5810054 	str	r0, [r1, #84]	; 0x54
40021ce4:	e5810058 	str	r0, [r1, #88]	; 0x58
40021ce8:	e5810048 	str	r0, [r1, #72]	; 0x48
40021cec:	e8bd8010 	pop	{r4, pc}
40021cf0:	40031d40 	.word	0x40031d40
40021cf4:	e0031000 	.word	0xe0031000
40021cf8:	e0030000 	.word	0xe0030000
40021cfc:	e0033000 	.word	0xe0033000
40021d00:	40030c5c 	.word	0x40030c5c
40021d04:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3POsTimerInit:

40021d08 <CyU3POsTimerInit>:
40021d08:	e92d4070 	push	{r4, r5, r6, lr}
40021d0c:	e1a04000 	mov	r4, r0
40021d10:	e3a00004 	mov	r0, #4
40021d14:	eb000047 	bl	40021e38 <CyU3PVicDisableInt>
40021d18:	e59f00f0 	ldr	r0, [pc, #240]	; 40021e10 <CyU3POsTimerInit+0x108>
40021d1c:	e5905014 	ldr	r5, [r0, #20]
40021d20:	e3a00064 	mov	r0, #100	; 0x64
40021d24:	ebffc5c5 	bl	40013440 <CyU3PBusyWait>
40021d28:	e3850c03 	orr	r0, r5, #768	; 0x300
40021d2c:	e59f10dc 	ldr	r1, [pc, #220]	; 40021e10 <CyU3POsTimerInit+0x108>
40021d30:	e5810014 	str	r0, [r1, #20]
40021d34:	e3a00064 	mov	r0, #100	; 0x64
40021d38:	ebffc5c0 	bl	40013440 <CyU3PBusyWait>
40021d3c:	e59f00cc 	ldr	r0, [pc, #204]	; 40021e10 <CyU3POsTimerInit+0x108>
40021d40:	e5905014 	ldr	r5, [r0, #20]
40021d44:	e3540000 	cmp	r4, #0
40021d48:	0a000001 	beq	40021d54 <CyU3POsTimerInit+0x4c>
40021d4c:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40021d50:	da000006 	ble	40021d70 <CyU3POsTimerInit+0x68>
40021d54:	e3a00001 	mov	r0, #1
40021d58:	e59f10b4 	ldr	r1, [pc, #180]	; 40021e14 <CyU3POsTimerInit+0x10c>
40021d5c:	e1c100b0 	strh	r0, [r1]
40021d60:	e3a00020 	mov	r0, #32
40021d64:	e59f10ac 	ldr	r1, [pc, #172]	; 40021e18 <CyU3POsTimerInit+0x110>
40021d68:	e5810000 	str	r0, [r1]
40021d6c:	ea000004 	b	40021d84 <CyU3POsTimerInit+0x7c>
40021d70:	e59f009c 	ldr	r0, [pc, #156]	; 40021e14 <CyU3POsTimerInit+0x10c>
40021d74:	e1c040b0 	strh	r4, [r0]
40021d78:	e1a00284 	lsl	r0, r4, #5
40021d7c:	e59f1094 	ldr	r1, [pc, #148]	; 40021e18 <CyU3POsTimerInit+0x110>
40021d80:	e5810000 	str	r0, [r1]
40021d84:	e59f008c 	ldr	r0, [pc, #140]	; 40021e18 <CyU3POsTimerInit+0x110>
40021d88:	e5900000 	ldr	r0, [r0]
40021d8c:	e2400007 	sub	r0, r0, #7
40021d90:	e59f1080 	ldr	r1, [pc, #128]	; 40021e18 <CyU3POsTimerInit+0x110>
40021d94:	e5810000 	str	r0, [r1]
40021d98:	e3a06000 	mov	r6, #0
40021d9c:	ea000001 	b	40021da8 <CyU3POsTimerInit+0xa0>
40021da0:	e2860001 	add	r0, r6, #1
40021da4:	e20060ff 	and	r6, r0, #255	; 0xff
40021da8:	e3a00001 	mov	r0, #1
40021dac:	e1a00610 	lsl	r0, r0, r6
40021db0:	e59f1060 	ldr	r1, [pc, #96]	; 40021e18 <CyU3POsTimerInit+0x110>
40021db4:	e5911000 	ldr	r1, [r1]
40021db8:	e1500001 	cmp	r0, r1
40021dbc:	9afffff7 	bls	40021da0 <CyU3POsTimerInit+0x98>
40021dc0:	e59f0050 	ldr	r0, [pc, #80]	; 40021e18 <CyU3POsTimerInit+0x110>
40021dc4:	e5900000 	ldr	r0, [r0]
40021dc8:	e59f1040 	ldr	r1, [pc, #64]	; 40021e10 <CyU3POsTimerInit+0x108>
40021dcc:	e581001c 	str	r0, [r1, #28]
40021dd0:	e3a00064 	mov	r0, #100	; 0x64
40021dd4:	ebffc599 	bl	40013440 <CyU3PBusyWait>
40021dd8:	e3a00004 	mov	r0, #4
40021ddc:	eb00001a 	bl	40021e4c <CyU3PVicEnableInt>
40021de0:	e59f0028 	ldr	r0, [pc, #40]	; 40021e10 <CyU3POsTimerInit+0x108>
40021de4:	e5900014 	ldr	r0, [r0, #20]
40021de8:	e3c05c03 	bic	r5, r0, #768	; 0x300
40021dec:	e3a00b01 	mov	r0, #1024	; 0x400
40021df0:	e1800586 	orr	r0, r0, r6, lsl #11
40021df4:	e1855000 	orr	r5, r5, r0
40021df8:	e3855c01 	orr	r5, r5, #256	; 0x100
40021dfc:	e3a00064 	mov	r0, #100	; 0x64
40021e00:	ebffc58e 	bl	40013440 <CyU3PBusyWait>
40021e04:	e59f0004 	ldr	r0, [pc, #4]	; 40021e10 <CyU3POsTimerInit+0x108>
40021e08:	e5805014 	str	r5, [r0, #20]
40021e0c:	e8bd8070 	pop	{r4, r5, r6, pc}
40021e10:	e0050000 	.word	0xe0050000
40021e14:	40030dbc 	.word	0x40030dbc
40021e18:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PVicClearInt:

40021e1c <CyU3PVicClearInt>:
40021e1c:	e3a00000 	mov	r0, #0
40021e20:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40021e24:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40021e28 <CyU3PVicDisableAllInterrupts>:
40021e28:	e3a01000 	mov	r1, #0
40021e2c:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
40021e30:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021e34:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40021e38 <CyU3PVicDisableInt>:
40021e38:	e3a01001 	mov	r1, #1
40021e3c:	e1a01011 	lsl	r1, r1, r0
40021e40:	e3a02000 	mov	r2, #0
40021e44:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40021e48:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40021e4c <CyU3PVicEnableInt>:
40021e4c:	e3a01001 	mov	r1, #1
40021e50:	e1a01011 	lsl	r1, r1, r0
40021e54:	e3a02000 	mov	r2, #0
40021e58:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40021e5c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

40021e60 <CyU3PVicEnableInterrupts>:
40021e60:	e3a01000 	mov	r1, #0
40021e64:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
40021e68:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40021e70 <CyU3PVicInit>:
40021e70:	e92d4010 	push	{r4, lr}
40021e74:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
40021e78:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
40021e7c:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40021e80:	e3e00000 	mvn	r0, #0
40021e84:	e3a01000 	mov	r1, #0
40021e88:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021e8c:	e3a00000 	mov	r0, #0
40021e90:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40021e94:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40021e98:	ebffffdf 	bl	40021e1c <CyU3PVicClearInt>
40021e9c:	eb000001 	bl	40021ea8 <__CyU3PVicSetupIntVectors_veneer>
40021ea0:	e8bd8010 	pop	{r4, pc}
40021ea4:	00000000 	andeq	r0, r0, r0

40021ea8 <__CyU3PVicSetupIntVectors_veneer>:
40021ea8:	e51ff004 	ldr	pc, [pc, #-4]	; 40021eac <__CyU3PVicSetupIntVectors_veneer+0x4>
40021eac:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40021eb0 <CyFx3Usb2PhySetup>:
40021eb0:	e59f0008 	ldr	r0, [pc, #8]	; 40021ec0 <CyFx3Usb2PhySetup+0x10>
40021eb4:	e59f1008 	ldr	r1, [pc, #8]	; 40021ec4 <CyFx3Usb2PhySetup+0x14>
40021eb8:	e581000c 	str	r0, [r1, #12]
40021ebc:	e12fff1e 	bx	lr
40021ec0:	00d4a480 	.word	0x00d4a480
40021ec4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40021ec8 <CyFx3Usb3LnkRelaxHpTimeout>:
40021ec8:	e59f0008 	ldr	r0, [pc, #8]	; 40021ed8 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
40021ecc:	e59f1008 	ldr	r1, [pc, #8]	; 40021edc <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40021ed0:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40021ed4:	e12fff1e 	bx	lr
40021ed8:	000009c4 	.word	0x000009c4
40021edc:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40021ee0 <CyFx3Usb3LnkSetup>:
40021ee0:	e59f1024 	ldr	r1, [pc, #36]	; 40021f0c <CyFx3Usb3LnkSetup+0x2c>
40021ee4:	e59f0024 	ldr	r0, [pc, #36]	; 40021f10 <CyFx3Usb3LnkSetup+0x30>
40021ee8:	e580109c 	str	r1, [r0, #156]	; 0x9c
40021eec:	e5801080 	str	r1, [r0, #128]	; 0x80
40021ef0:	e59f101c 	ldr	r1, [pc, #28]	; 40021f14 <CyFx3Usb3LnkSetup+0x34>
40021ef4:	e5801084 	str	r1, [r0, #132]	; 0x84
40021ef8:	e59f1018 	ldr	r1, [pc, #24]	; 40021f18 <CyFx3Usb3LnkSetup+0x38>
40021efc:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40021f00:	e3a0107d 	mov	r1, #125	; 0x7d
40021f04:	e5801078 	str	r1, [r0, #120]	; 0x78
40021f08:	e12fff1e 	bx	lr
40021f0c:	00002710 	.word	0x00002710
40021f10:	e0033000 	.word	0xe0033000
40021f14:	00fa004b 	.word	0x00fa004b
40021f18:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

40021f1c <CyFx3Usb3SendTP>:
40021f1c:	e5902000 	ldr	r2, [r0]
40021f20:	e59f1020 	ldr	r1, [pc, #32]	; 40021f48 <CyFx3Usb3SendTP+0x2c>
40021f24:	e5812450 	str	r2, [r1, #1104]	; 0x450
40021f28:	e5902004 	ldr	r2, [r0, #4]
40021f2c:	e5812454 	str	r2, [r1, #1108]	; 0x454
40021f30:	e5900008 	ldr	r0, [r0, #8]
40021f34:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021f38:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
40021f3c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021f40:	e5810460 	str	r0, [r1, #1120]	; 0x460
40021f44:	e12fff1e 	bx	lr
40021f48:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

40021f4c <CyFx3UsbDmaPrefetchEnable>:
40021f4c:	e3500000 	cmp	r0, #0
40021f50:	e59f001c 	ldr	r0, [pc, #28]	; 40021f74 <CyFx3UsbDmaPrefetchEnable+0x28>
40021f54:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40021f58:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
40021f5c:	12811a09 	addne	r1, r1, #36864	; 0x9000
40021f60:	e3c22903 	bic	r2, r2, #49152	; 0xc000
40021f64:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
40021f68:	e1811002 	orr	r1, r1, r2
40021f6c:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
40021f70:	e12fff1e 	bx	lr
40021f74:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

40021f78 <CyFx3UsbPowerOn>:
40021f78:	e92d4010 	push	{r4, lr}
40021f7c:	e59f406c 	ldr	r4, [pc, #108]	; 40021ff0 <CyFx3UsbPowerOn+0x78>
40021f80:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f84:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40021f88:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021f8c:	e3a0000a 	mov	r0, #10
40021f90:	ebffca77 	bl	40014974 <CyFx3BusyWait>
40021f94:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f98:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021f9c:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021fa0:	e3a00064 	mov	r0, #100	; 0x64
40021fa4:	ebffca72 	bl	40014974 <CyFx3BusyWait>
40021fa8:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021fac:	e3100001 	tst	r0, #1
40021fb0:	0afffffc 	beq	40021fa8 <CyFx3UsbPowerOn+0x30>
40021fb4:	ebffca64 	bl	4001494c <CyFx3DevIsUsb3Supported>
40021fb8:	e59f4034 	ldr	r4, [pc, #52]	; 40021ff4 <CyFx3UsbPowerOn+0x7c>
40021fbc:	e3500000 	cmp	r0, #0
40021fc0:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
40021fc4:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40021fc8:	03a0000a 	moveq	r0, #10
40021fcc:	0bffca68 	bleq	40014974 <CyFx3BusyWait>
40021fd0:	ebffca3f 	bl	400148d4 <CyFx3DevIsOtgSupported>
40021fd4:	e3500000 	cmp	r0, #0
40021fd8:	18bd8010 	popne	{r4, pc}
40021fdc:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40021fe0:	e584080c 	str	r0, [r4, #2060]	; 0x80c
40021fe4:	e8bd4010 	pop	{r4, lr}
40021fe8:	e3a0000a 	mov	r0, #10
40021fec:	eaffca60 	b	40014974 <CyFx3BusyWait>
40021ff0:	e0037000 	.word	0xe0037000
40021ff4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40021ff8 <CyFx3UsbWritePhyReg>:
40021ff8:	e59f2084 	ldr	r2, [pc, #132]	; 40022084 <CyFx3UsbWritePhyReg+0x8c>
40021ffc:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40022000:	e3120901 	tst	r2, #16384	; 0x4000
40022004:	012fff1e 	bxeq	lr
40022008:	e59f2078 	ldr	r2, [pc, #120]	; 40022088 <CyFx3UsbWritePhyReg+0x90>
4002200c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022010:	e3803801 	orr	r3, r0, #65536	; 0x10000
40022014:	e5823024 	str	r3, [r2, #36]	; 0x24
40022018:	e5923028 	ldr	r3, [r2, #40]	; 0x28
4002201c:	e3130801 	tst	r3, #65536	; 0x10000
40022020:	0afffffc 	beq	40022018 <CyFx3UsbWritePhyReg+0x20>
40022024:	e5820024 	str	r0, [r2, #36]	; 0x24
40022028:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002202c:	e3100801 	tst	r0, #65536	; 0x10000
40022030:	1afffffc 	bne	40022028 <CyFx3UsbWritePhyReg+0x30>
40022034:	e5821024 	str	r1, [r2, #36]	; 0x24
40022038:	e3810802 	orr	r0, r1, #131072	; 0x20000
4002203c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022040:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022044:	e3100801 	tst	r0, #65536	; 0x10000
40022048:	0afffffc 	beq	40022040 <CyFx3UsbWritePhyReg+0x48>
4002204c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022050:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022054:	e3100801 	tst	r0, #65536	; 0x10000
40022058:	1afffffc 	bne	40022050 <CyFx3UsbWritePhyReg+0x58>
4002205c:	e3810702 	orr	r0, r1, #524288	; 0x80000
40022060:	e5820024 	str	r0, [r2, #36]	; 0x24
40022064:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022068:	e3100801 	tst	r0, #65536	; 0x10000
4002206c:	0afffffc 	beq	40022064 <CyFx3UsbWritePhyReg+0x6c>
40022070:	e5821024 	str	r1, [r2, #36]	; 0x24
40022074:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022078:	e3100801 	tst	r0, #65536	; 0x10000
4002207c:	1afffffc 	bne	40022074 <CyFx3UsbWritePhyReg+0x7c>
40022080:	e12fff1e 	bx	lr
40022084:	e0031000 	.word	0xe0031000
40022088:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

4002208c <CyU3PDmaDscrChainCreate>:
4002208c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40022090:	e24dd018 	sub	sp, sp, #24
40022094:	e1a04000 	mov	r4, r0
40022098:	e1a05001 	mov	r5, r1
4002209c:	e1a06002 	mov	r6, r2
400220a0:	e1a07003 	mov	r7, r3
400220a4:	e3a0a000 	mov	sl, #0
400220a8:	eb0000a6 	bl	40022348 <CyU3PDmaDscrGetFreeCount>
400220ac:	e1500005 	cmp	r0, r5
400220b0:	aa000002 	bge	400220c0 <CyU3PDmaDscrChainCreate+0x34>
400220b4:	e3a00010 	mov	r0, #16
400220b8:	e28dd018 	add	sp, sp, #24
400220bc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400220c0:	e3540000 	cmp	r4, #0
400220c4:	1a000001 	bne	400220d0 <CyU3PDmaDscrChainCreate+0x44>
400220c8:	e3a00040 	mov	r0, #64	; 0x40
400220cc:	eafffff9 	b	400220b8 <CyU3PDmaDscrChainCreate+0x2c>
400220d0:	e3550000 	cmp	r5, #0
400220d4:	1a000001 	bne	400220e0 <CyU3PDmaDscrChainCreate+0x54>
400220d8:	e3a00040 	mov	r0, #64	; 0x40
400220dc:	eafffff5 	b	400220b8 <CyU3PDmaDscrChainCreate+0x2c>
400220e0:	e1a09005 	mov	r9, r5
400220e4:	e1a00004 	mov	r0, r4
400220e8:	eb00005e 	bl	40022268 <CyU3PDmaDscrGet>
400220ec:	e1d480b0 	ldrh	r8, [r4]
400220f0:	ea000029 	b	4002219c <CyU3PDmaDscrChainCreate+0x110>
400220f4:	e3590000 	cmp	r9, #0
400220f8:	0a000002 	beq	40022108 <CyU3PDmaDscrChainCreate+0x7c>
400220fc:	e28d0014 	add	r0, sp, #20
40022100:	eb000058 	bl	40022268 <CyU3PDmaDscrGet>
40022104:	ea000001 	b	40022110 <CyU3PDmaDscrChainCreate+0x84>
40022108:	e1d400b0 	ldrh	r0, [r4]
4002210c:	e58d0014 	str	r0, [sp, #20]
40022110:	e3560000 	cmp	r6, #0
40022114:	0a000015 	beq	40022170 <CyU3PDmaDscrChainCreate+0xe4>
40022118:	e35a0000 	cmp	sl, #0
4002211c:	1a000013 	bne	40022170 <CyU3PDmaDscrChainCreate+0xe4>
40022120:	e1a00006 	mov	r0, r6
40022124:	ebff870f 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022128:	e58d0004 	str	r0, [sp, #4]
4002212c:	e59f00a0 	ldr	r0, [pc, #160]	; 400221d4 <CyU3PDmaDscrChainCreate+0x148>
40022130:	e0000006 	and	r0, r0, r6
40022134:	e58d0010 	str	r0, [sp, #16]
40022138:	e59d0004 	ldr	r0, [sp, #4]
4002213c:	e3500000 	cmp	r0, #0
40022140:	1a000000 	bne	40022148 <CyU3PDmaDscrChainCreate+0xbc>
40022144:	e3a0a010 	mov	sl, #16
40022148:	e59d0004 	ldr	r0, [sp, #4]
4002214c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022150:	3a000004 	bcc	40022168 <CyU3PDmaDscrChainCreate+0xdc>
40022154:	e59d0004 	ldr	r0, [sp, #4]
40022158:	e0800006 	add	r0, r0, r6
4002215c:	e59f1074 	ldr	r1, [pc, #116]	; 400221d8 <CyU3PDmaDscrChainCreate+0x14c>
40022160:	e1500001 	cmp	r0, r1
40022164:	3a000004 	bcc	4002217c <CyU3PDmaDscrChainCreate+0xf0>
40022168:	e3a0a010 	mov	sl, #16
4002216c:	ea000002 	b	4002217c <CyU3PDmaDscrChainCreate+0xf0>
40022170:	e3a00000 	mov	r0, #0
40022174:	e58d0004 	str	r0, [sp, #4]
40022178:	e58d0010 	str	r0, [sp, #16]
4002217c:	e58d7008 	str	r7, [sp, #8]
40022180:	e1dd01b4 	ldrh	r0, [sp, #20]
40022184:	e1800800 	orr	r0, r0, r0, lsl #16
40022188:	e58d000c 	str	r0, [sp, #12]
4002218c:	e28d1004 	add	r1, sp, #4
40022190:	e1a00008 	mov	r0, r8
40022194:	eb0000c6 	bl	400224b4 <CyU3PDmaDscrSetConfig>
40022198:	e1dd81b4 	ldrh	r8, [sp, #20]
4002219c:	e1b00009 	movs	r0, r9
400221a0:	e2491001 	sub	r1, r9, #1
400221a4:	e1a09801 	lsl	r9, r1, #16
400221a8:	e1a09829 	lsr	r9, r9, #16
400221ac:	1affffd0 	bne	400220f4 <CyU3PDmaDscrChainCreate+0x68>
400221b0:	e35a0000 	cmp	sl, #0
400221b4:	0a000004 	beq	400221cc <CyU3PDmaDscrChainCreate+0x140>
400221b8:	e1d400b0 	ldrh	r0, [r4]
400221bc:	e3a03001 	mov	r3, #1
400221c0:	e1a02003 	mov	r2, r3
400221c4:	e1a01005 	mov	r1, r5
400221c8:	eb000003 	bl	400221dc <CyU3PDmaDscrChainDestroy>
400221cc:	e1a0000a 	mov	r0, sl
400221d0:	eaffffb8 	b	400220b8 <CyU3PDmaDscrChainCreate+0x2c>
400221d4:	0000fff0 	.word	0x0000fff0
400221d8:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

400221dc <CyU3PDmaDscrChainDestroy>:
400221dc:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400221e0:	e1a04000 	mov	r4, r0
400221e4:	e1a05001 	mov	r5, r1
400221e8:	e1a06002 	mov	r6, r2
400221ec:	e1a07003 	mov	r7, r3
400221f0:	ea000015 	b	4002224c <CyU3PDmaDscrChainDestroy+0x70>
400221f4:	e1a0100d 	mov	r1, sp
400221f8:	e1a00004 	mov	r0, r4
400221fc:	eb000091 	bl	40022448 <CyU3PDmaDscrGetConfig>
40022200:	e3570000 	cmp	r7, #0
40022204:	0a000004 	beq	4002221c <CyU3PDmaDscrChainDestroy+0x40>
40022208:	e59d0000 	ldr	r0, [sp]
4002220c:	e3500000 	cmp	r0, #0
40022210:	0a000001 	beq	4002221c <CyU3PDmaDscrChainDestroy+0x40>
40022214:	e59d0000 	ldr	r0, [sp]
40022218:	ebff8735 	bl	40003ef4 <CyU3PDmaBufferFree>
4002221c:	e3560000 	cmp	r6, #0
40022220:	0a000003 	beq	40022234 <CyU3PDmaDscrChainDestroy+0x58>
40022224:	e59d0008 	ldr	r0, [sp, #8]
40022228:	e59f1034 	ldr	r1, [pc, #52]	; 40022264 <CyU3PDmaDscrChainDestroy+0x88>
4002222c:	e0018820 	and	r8, r1, r0, lsr #16
40022230:	ea000002 	b	40022240 <CyU3PDmaDscrChainDestroy+0x64>
40022234:	e59d0008 	ldr	r0, [sp, #8]
40022238:	e1a08800 	lsl	r8, r0, #16
4002223c:	e1a08828 	lsr	r8, r8, #16
40022240:	e1a00004 	mov	r0, r4
40022244:	eb000058 	bl	400223ac <CyU3PDmaDscrPut>
40022248:	e1a04008 	mov	r4, r8
4002224c:	e1b00005 	movs	r0, r5
40022250:	e2451001 	sub	r1, r5, #1
40022254:	e1a05801 	lsl	r5, r1, #16
40022258:	e1a05825 	lsr	r5, r5, #16
4002225c:	1affffe4 	bne	400221f4 <CyU3PDmaDscrChainDestroy+0x18>
40022260:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40022264:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

40022268 <CyU3PDmaDscrGet>:
40022268:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002226c:	e1a04000 	mov	r4, r0
40022270:	e3a08000 	mov	r8, #0
40022274:	e3540000 	cmp	r4, #0
40022278:	1a000001 	bne	40022284 <CyU3PDmaDscrGet+0x1c>
4002227c:	e3a00040 	mov	r0, #64	; 0x40
40022280:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022284:	e3e01000 	mvn	r1, #0
40022288:	e59f00ac 	ldr	r0, [pc, #172]	; 4002233c <CyU3PDmaDscrGet+0xd4>
4002228c:	ebff9f48 	bl	40009fb4 <_txe_mutex_get>
40022290:	e59f00a8 	ldr	r0, [pc, #168]	; 40022340 <CyU3PDmaDscrGet+0xd8>
40022294:	e1d000b0 	ldrh	r0, [r0]
40022298:	e3500000 	cmp	r0, #0
4002229c:	0a000022 	beq	4002232c <CyU3PDmaDscrGet+0xc4>
400222a0:	e3a06000 	mov	r6, #0
400222a4:	ea00001e 	b	40022324 <CyU3PDmaDscrGet+0xbc>
400222a8:	e59f0094 	ldr	r0, [pc, #148]	; 40022344 <CyU3PDmaDscrGet+0xdc>
400222ac:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400222b0:	e3750001 	cmn	r5, #1
400222b4:	0a000017 	beq	40022318 <CyU3PDmaDscrGet+0xb0>
400222b8:	e3a07001 	mov	r7, #1
400222bc:	ea000012 	b	4002230c <CyU3PDmaDscrGet+0xa4>
400222c0:	e1150007 	tst	r5, r7
400222c4:	1a00000d 	bne	40022300 <CyU3PDmaDscrGet+0x98>
400222c8:	e1850007 	orr	r0, r5, r7
400222cc:	e59f1070 	ldr	r1, [pc, #112]	; 40022344 <CyU3PDmaDscrGet+0xdc>
400222d0:	e7810106 	str	r0, [r1, r6, lsl #2]
400222d4:	e2410004 	sub	r0, r1, #4
400222d8:	e1c080b2 	strh	r8, [r0, #2]
400222dc:	e1d000b0 	ldrh	r0, [r0]
400222e0:	e2400001 	sub	r0, r0, #1
400222e4:	e2411004 	sub	r1, r1, #4
400222e8:	e1c100b0 	strh	r0, [r1]
400222ec:	e1c480b0 	strh	r8, [r4]
400222f0:	e2810044 	add	r0, r1, #68	; 0x44
400222f4:	ebff9f63 	bl	4000a088 <_txe_mutex_put>
400222f8:	e3a00000 	mov	r0, #0
400222fc:	eaffffdf 	b	40022280 <CyU3PDmaDscrGet+0x18>
40022300:	e1a07087 	lsl	r7, r7, #1
40022304:	e2880001 	add	r0, r8, #1
40022308:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4002230c:	e3570000 	cmp	r7, #0
40022310:	1affffea 	bne	400222c0 <CyU3PDmaDscrGet+0x58>
40022314:	ea000001 	b	40022320 <CyU3PDmaDscrGet+0xb8>
40022318:	e2880020 	add	r0, r8, #32
4002231c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022320:	e2866001 	add	r6, r6, #1
40022324:	e3560010 	cmp	r6, #16
40022328:	3affffde 	bcc	400222a8 <CyU3PDmaDscrGet+0x40>
4002232c:	e59f0008 	ldr	r0, [pc, #8]	; 4002233c <CyU3PDmaDscrGet+0xd4>
40022330:	ebff9f54 	bl	4000a088 <_txe_mutex_put>
40022334:	e3a0004a 	mov	r0, #74	; 0x4a
40022338:	eaffffd0 	b	40022280 <CyU3PDmaDscrGet+0x18>
4002233c:	4003273c 	.word	0x4003273c
40022340:	400326f8 	.word	0x400326f8
40022344:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022348 <CyU3PDmaDscrGetFreeCount>:
40022348:	e59f0004 	ldr	r0, [pc, #4]	; 40022354 <CyU3PDmaDscrGetFreeCount+0xc>
4002234c:	e1d000b0 	ldrh	r0, [r0]
40022350:	e12fff1e 	bx	lr
40022354:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

40022358 <CyU3PDmaDscrListCreate>:
40022358:	e92d4010 	push	{r4, lr}
4002235c:	e3a02040 	mov	r2, #64	; 0x40
40022360:	e3a01000 	mov	r1, #0
40022364:	e59f0034 	ldr	r0, [pc, #52]	; 400223a0 <CyU3PDmaDscrListCreate+0x48>
40022368:	ebff84d2 	bl	400036b8 <CyU3PMemSet>
4002236c:	e3a00001 	mov	r0, #1
40022370:	e59f102c 	ldr	r1, [pc, #44]	; 400223a4 <CyU3PDmaDscrListCreate+0x4c>
40022374:	e5810004 	str	r0, [r1, #4]
40022378:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
4002237c:	e1c100b0 	strh	r0, [r1]
40022380:	e3a00001 	mov	r0, #1
40022384:	e1c100b2 	strh	r0, [r1, #2]
40022388:	e3a03038 	mov	r3, #56	; 0x38
4002238c:	e3a02000 	mov	r2, #0
40022390:	e1a01002 	mov	r1, r2
40022394:	e59f000c 	ldr	r0, [pc, #12]	; 400223a8 <CyU3PDmaDscrListCreate+0x50>
40022398:	ebff9e87 	bl	40009dbc <_txe_mutex_create>
4002239c:	e8bd8010 	pop	{r4, pc}
400223a0:	400326fc 	.word	0x400326fc
400223a4:	400326f8 	.word	0x400326f8
400223a8:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

400223ac <CyU3PDmaDscrPut>:
400223ac:	e92d4070 	push	{r4, r5, r6, lr}
400223b0:	e1a04000 	mov	r4, r0
400223b4:	e3540c02 	cmp	r4, #512	; 0x200
400223b8:	aa000001 	bge	400223c4 <CyU3PDmaDscrPut+0x18>
400223bc:	e3540000 	cmp	r4, #0
400223c0:	1a000001 	bne	400223cc <CyU3PDmaDscrPut+0x20>
400223c4:	e3a00040 	mov	r0, #64	; 0x40
400223c8:	e8bd8070 	pop	{r4, r5, r6, pc}
400223cc:	e3e01000 	mvn	r1, #0
400223d0:	e59f0064 	ldr	r0, [pc, #100]	; 4002243c <CyU3PDmaDscrPut+0x90>
400223d4:	ebff9ef6 	bl	40009fb4 <_txe_mutex_get>
400223d8:	e1a00004 	mov	r0, r4
400223dc:	e1a01fc4 	asr	r1, r4, #31
400223e0:	e0841da1 	add	r1, r4, r1, lsr #27
400223e4:	e1a062c1 	asr	r6, r1, #5
400223e8:	e59f0050 	ldr	r0, [pc, #80]	; 40022440 <CyU3PDmaDscrPut+0x94>
400223ec:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400223f0:	e1a00004 	mov	r0, r4
400223f4:	e1a01fc4 	asr	r1, r4, #31
400223f8:	e0841da1 	add	r1, r4, r1, lsr #27
400223fc:	e1a012c1 	asr	r1, r1, #5
40022400:	e0441281 	sub	r1, r4, r1, lsl #5
40022404:	e3a02001 	mov	r2, #1
40022408:	e1c55112 	bic	r5, r5, r2, lsl r1
4002240c:	e59f002c 	ldr	r0, [pc, #44]	; 40022440 <CyU3PDmaDscrPut+0x94>
40022410:	e7805106 	str	r5, [r0, r6, lsl #2]
40022414:	e2400004 	sub	r0, r0, #4
40022418:	e1d000b0 	ldrh	r0, [r0]
4002241c:	e2800001 	add	r0, r0, #1
40022420:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40022424:	e59f1018 	ldr	r1, [pc, #24]	; 40022444 <CyU3PDmaDscrPut+0x98>
40022428:	e1c100b0 	strh	r0, [r1]
4002242c:	e2810044 	add	r0, r1, #68	; 0x44
40022430:	ebff9f14 	bl	4000a088 <_txe_mutex_put>
40022434:	e3a00000 	mov	r0, #0
40022438:	eaffffe2 	b	400223c8 <CyU3PDmaDscrPut+0x1c>
4002243c:	4003273c 	.word	0x4003273c
40022440:	400326fc 	.word	0x400326fc
40022444:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022448 <CyU3PDmaDscrGetConfig>:
40022448:	e92d4070 	push	{r4, r5, r6, lr}
4002244c:	e1a05000 	mov	r5, r0
40022450:	e1a04001 	mov	r4, r1
40022454:	e3550c02 	cmp	r5, #512	; 0x200
40022458:	aa000001 	bge	40022464 <CyU3PDmaDscrGetConfig+0x1c>
4002245c:	e3550000 	cmp	r5, #0
40022460:	1a000001 	bne	4002246c <CyU3PDmaDscrGetConfig+0x24>
40022464:	e3a00040 	mov	r0, #64	; 0x40
40022468:	e8bd8070 	pop	{r4, r5, r6, pc}
4002246c:	e3540000 	cmp	r4, #0
40022470:	1a000001 	bne	4002247c <CyU3PDmaDscrGetConfig+0x34>
40022474:	e3a00040 	mov	r0, #64	; 0x40
40022478:	eafffffa 	b	40022468 <CyU3PDmaDscrGetConfig+0x20>
4002247c:	e59f102c 	ldr	r1, [pc, #44]	; 400224b0 <CyU3PDmaDscrGetConfig+0x68>
40022480:	e5911000 	ldr	r1, [r1]
40022484:	e0810205 	add	r0, r1, r5, lsl #4
40022488:	e3a01010 	mov	r1, #16
4002248c:	ebffbea4 	bl	40011f24 <CyU3PSysClearDRegion>
40022490:	ebffc118 	bl	400128f8 <CyU3PSysBarrierSync>
40022494:	e59f0014 	ldr	r0, [pc, #20]	; 400224b0 <CyU3PDmaDscrGetConfig+0x68>
40022498:	e5900000 	ldr	r0, [r0]
4002249c:	e0800205 	add	r0, r0, r5, lsl #4
400224a0:	e890004e 	ldm	r0, {r1, r2, r3, r6}
400224a4:	e884004e 	stm	r4, {r1, r2, r3, r6}
400224a8:	e3a00000 	mov	r0, #0
400224ac:	eaffffed 	b	40022468 <CyU3PDmaDscrGetConfig+0x20>
400224b0:	40030dc4 	.word	0x40030dc4

Disassembly of section i.CyU3PDmaDscrSetConfig:

400224b4 <CyU3PDmaDscrSetConfig>:
400224b4:	e92d4070 	push	{r4, r5, r6, lr}
400224b8:	e1a04000 	mov	r4, r0
400224bc:	e1a05001 	mov	r5, r1
400224c0:	e3540c02 	cmp	r4, #512	; 0x200
400224c4:	aa000001 	bge	400224d0 <CyU3PDmaDscrSetConfig+0x1c>
400224c8:	e3540000 	cmp	r4, #0
400224cc:	1a000001 	bne	400224d8 <CyU3PDmaDscrSetConfig+0x24>
400224d0:	e3a00040 	mov	r0, #64	; 0x40
400224d4:	e8bd8070 	pop	{r4, r5, r6, pc}
400224d8:	e3550000 	cmp	r5, #0
400224dc:	1a000001 	bne	400224e8 <CyU3PDmaDscrSetConfig+0x34>
400224e0:	e3a00040 	mov	r0, #64	; 0x40
400224e4:	eafffffa 	b	400224d4 <CyU3PDmaDscrSetConfig+0x20>
400224e8:	e59f002c 	ldr	r0, [pc, #44]	; 4002251c <CyU3PDmaDscrSetConfig+0x68>
400224ec:	e5900000 	ldr	r0, [r0]
400224f0:	e0800204 	add	r0, r0, r4, lsl #4
400224f4:	e895004e 	ldm	r5, {r1, r2, r3, r6}
400224f8:	e880004e 	stm	r0, {r1, r2, r3, r6}
400224fc:	e59f1018 	ldr	r1, [pc, #24]	; 4002251c <CyU3PDmaDscrSetConfig+0x68>
40022500:	e5911000 	ldr	r1, [r1]
40022504:	e0810204 	add	r0, r1, r4, lsl #4
40022508:	e3a01010 	mov	r1, #16
4002250c:	ebffbe84 	bl	40011f24 <CyU3PSysClearDRegion>
40022510:	ebffc0f8 	bl	400128f8 <CyU3PSysBarrierSync>
40022514:	e3a00000 	mov	r0, #0
40022518:	eaffffed 	b	400224d4 <CyU3PDmaDscrSetConfig+0x20>
4002251c:	40030dc4 	.word	0x40030dc4

Disassembly of section i.CyU3PDmaIntHandler:

40022520 <CyU3PDmaIntHandler>:
40022520:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40022524:	e1a04000 	mov	r4, r0
40022528:	e1a05001 	mov	r5, r1
4002252c:	e204003f 	and	r0, r4, #63	; 0x3f
40022530:	e1857400 	orr	r7, r5, r0, lsl #8
40022534:	e59f0150 	ldr	r0, [pc, #336]	; 4002268c <CyU3PDmaIntHandler+0x16c>
40022538:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002253c:	e0800385 	add	r0, r0, r5, lsl #7
40022540:	e5900010 	ldr	r0, [r0, #16]
40022544:	e59f1140 	ldr	r1, [pc, #320]	; 4002268c <CyU3PDmaIntHandler+0x16c>
40022548:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002254c:	e0811385 	add	r1, r1, r5, lsl #7
40022550:	e5911014 	ldr	r1, [r1, #20]
40022554:	e0009001 	and	r9, r0, r1
40022558:	e59f0130 	ldr	r0, [pc, #304]	; 40022690 <CyU3PDmaIntHandler+0x170>
4002255c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022560:	e7906105 	ldr	r6, [r0, r5, lsl #2]
40022564:	e3560000 	cmp	r6, #0
40022568:	0a000038 	beq	40022650 <CyU3PDmaIntHandler+0x130>
4002256c:	e1a00000 	nop			; (mov r0, r0)
40022570:	e59f0114 	ldr	r0, [pc, #276]	; 4002268c <CyU3PDmaIntHandler+0x16c>
40022574:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022578:	e0800385 	add	r0, r0, r5, lsl #7
4002257c:	e5900010 	ldr	r0, [r0, #16]
40022580:	e59f1104 	ldr	r1, [pc, #260]	; 4002268c <CyU3PDmaIntHandler+0x16c>
40022584:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022588:	e0811385 	add	r1, r1, r5, lsl #7
4002258c:	e5911014 	ldr	r1, [r1, #20]
40022590:	e0000001 	and	r0, r0, r1
40022594:	e1899000 	orr	r9, r9, r0
40022598:	e2098e12 	and	r8, r9, #288	; 0x120
4002259c:	e59f00e8 	ldr	r0, [pc, #232]	; 4002268c <CyU3PDmaIntHandler+0x16c>
400225a0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225a4:	e0800385 	add	r0, r0, r5, lsl #7
400225a8:	e5900014 	ldr	r0, [r0, #20]
400225ac:	e1c00008 	bic	r0, r0, r8
400225b0:	e59f10d4 	ldr	r1, [pc, #212]	; 4002268c <CyU3PDmaIntHandler+0x16c>
400225b4:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400225b8:	e0811385 	add	r1, r1, r5, lsl #7
400225bc:	e5810014 	str	r0, [r1, #20]
400225c0:	e1c90008 	bic	r0, r9, r8
400225c4:	e59f10c0 	ldr	r1, [pc, #192]	; 4002268c <CyU3PDmaIntHandler+0x16c>
400225c8:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400225cc:	e0811385 	add	r1, r1, r5, lsl #7
400225d0:	e5810010 	str	r0, [r1, #16]
400225d4:	e59f00b0 	ldr	r0, [pc, #176]	; 4002268c <CyU3PDmaIntHandler+0x16c>
400225d8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225dc:	e7900385 	ldr	r0, [r0, r5, lsl #7]
400225e0:	e1a00800 	lsl	r0, r0, #16
400225e4:	e1a00820 	lsr	r0, r0, #16
400225e8:	e58d000c 	str	r0, [sp, #12]
400225ec:	e59f0098 	ldr	r0, [pc, #152]	; 4002268c <CyU3PDmaIntHandler+0x16c>
400225f0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225f4:	e0800385 	add	r0, r0, r5, lsl #7
400225f8:	e5900010 	ldr	r0, [r0, #16]
400225fc:	e59f1088 	ldr	r1, [pc, #136]	; 4002268c <CyU3PDmaIntHandler+0x16c>
40022600:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022604:	e0811385 	add	r1, r1, r5, lsl #7
40022608:	e5911014 	ldr	r1, [r1, #20]
4002260c:	e0008001 	and	r8, r0, r1
40022610:	e3580000 	cmp	r8, #0
40022614:	1affffd5 	bne	40022570 <CyU3PDmaIntHandler+0x50>
40022618:	e3a00901 	mov	r0, #16384	; 0x4000
4002261c:	e58d0000 	str	r0, [sp]
40022620:	e59d0000 	ldr	r0, [sp]
40022624:	e58d0000 	str	r0, [sp]
40022628:	e59d0000 	ldr	r0, [sp]
4002262c:	e1800807 	orr	r0, r0, r7, lsl #16
40022630:	e58d0000 	str	r0, [sp]
40022634:	e58d6004 	str	r6, [sp, #4]
40022638:	e58d9008 	str	r9, [sp, #8]
4002263c:	e3a02000 	mov	r2, #0
40022640:	e1a01002 	mov	r1, r2
40022644:	e1a0000d 	mov	r0, sp
40022648:	ebffe05f 	bl	4001a7cc <CyU3PDmaMsgSend>
4002264c:	ea00000d 	b	40022688 <CyU3PDmaIntHandler+0x168>
40022650:	e59f003c 	ldr	r0, [pc, #60]	; 40022694 <CyU3PDmaIntHandler+0x174>
40022654:	e5900000 	ldr	r0, [r0]
40022658:	e3500000 	cmp	r0, #0
4002265c:	0a000005 	beq	40022678 <CyU3PDmaIntHandler+0x158>
40022660:	e1a01009 	mov	r1, r9
40022664:	e1a00007 	mov	r0, r7
40022668:	e59f2024 	ldr	r2, [pc, #36]	; 40022694 <CyU3PDmaIntHandler+0x174>
4002266c:	e5922000 	ldr	r2, [r2]
40022670:	e12fff32 	blx	r2
40022674:	ea000003 	b	40022688 <CyU3PDmaIntHandler+0x168>
40022678:	e59f000c 	ldr	r0, [pc, #12]	; 4002268c <CyU3PDmaIntHandler+0x16c>
4002267c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022680:	e0800385 	add	r0, r0, r5, lsl #7
40022684:	e5809010 	str	r9, [r0, #16]
40022688:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4002268c:	40030cdc 	.word	0x40030cdc
40022690:	40030d04 	.word	0x40030d04
40022694:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PGpioInit:

40022698 <CyU3PGpioInit>:
40022698:	e92d4070 	push	{r4, r5, r6, lr}
4002269c:	e1a04000 	mov	r4, r0
400226a0:	e1a06001 	mov	r6, r1
400226a4:	e59f00fc 	ldr	r0, [pc, #252]	; 400227a8 <CyU3PGpioInit+0x110>
400226a8:	e5900000 	ldr	r0, [r0]
400226ac:	e3500000 	cmp	r0, #0
400226b0:	0a000001 	beq	400226bc <CyU3PGpioInit+0x24>
400226b4:	e3a00043 	mov	r0, #67	; 0x43
400226b8:	e8bd8070 	pop	{r4, r5, r6, pc}
400226bc:	e3540000 	cmp	r4, #0
400226c0:	1a000001 	bne	400226cc <CyU3PGpioInit+0x34>
400226c4:	e3a00041 	mov	r0, #65	; 0x41
400226c8:	eafffffa 	b	400226b8 <CyU3PGpioInit+0x20>
400226cc:	e1a00006 	mov	r0, r6
400226d0:	eb00013b 	bl	40022bc4 <CyU3PRegisterGpioCallBack>
400226d4:	ebffc551 	bl	40013c20 <CyU3PLppGpioBlockIsOn>
400226d8:	e3500000 	cmp	r0, #0
400226dc:	0a000003 	beq	400226f0 <CyU3PGpioInit+0x58>
400226e0:	e59f00c4 	ldr	r0, [pc, #196]	; 400227ac <CyU3PGpioInit+0x114>
400226e4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400226e8:	e3100001 	tst	r0, #1
400226ec:	1a000020 	bne	40022774 <CyU3PGpioInit+0xdc>
400226f0:	e1a00004 	mov	r0, r4
400226f4:	ebffc4a7 	bl	40013998 <CyU3PGpioSetClock>
400226f8:	e1a05000 	mov	r5, r0
400226fc:	e3550000 	cmp	r5, #0
40022700:	0a000001 	beq	4002270c <CyU3PGpioInit+0x74>
40022704:	e1a00005 	mov	r0, r5
40022708:	eaffffea 	b	400226b8 <CyU3PGpioInit+0x20>
4002270c:	e59f109c 	ldr	r1, [pc, #156]	; 400227b0 <CyU3PGpioInit+0x118>
40022710:	e3a00004 	mov	r0, #4
40022714:	ebffc545 	bl	40013c30 <CyU3PLppInit>
40022718:	e1a05000 	mov	r5, r0
4002271c:	e3550000 	cmp	r5, #0
40022720:	0a000001 	beq	4002272c <CyU3PGpioInit+0x94>
40022724:	e1a00005 	mov	r0, r5
40022728:	eaffffe2 	b	400226b8 <CyU3PGpioInit+0x20>
4002272c:	e59f0078 	ldr	r0, [pc, #120]	; 400227ac <CyU3PGpioInit+0x114>
40022730:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022734:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022738:	e59f106c 	ldr	r1, [pc, #108]	; 400227ac <CyU3PGpioInit+0x114>
4002273c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022740:	e3a0000a 	mov	r0, #10
40022744:	ebffc33d 	bl	40013440 <CyU3PBusyWait>
40022748:	e59f005c 	ldr	r0, [pc, #92]	; 400227ac <CyU3PGpioInit+0x114>
4002274c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022750:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022754:	e59f1050 	ldr	r1, [pc, #80]	; 400227ac <CyU3PGpioInit+0x114>
40022758:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
4002275c:	e1a00000 	nop			; (mov r0, r0)
40022760:	e59f0044 	ldr	r0, [pc, #68]	; 400227ac <CyU3PGpioInit+0x114>
40022764:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022768:	e3100001 	tst	r0, #1
4002276c:	0afffffb 	beq	40022760 <CyU3PGpioInit+0xc8>
40022770:	ea000007 	b	40022794 <CyU3PGpioInit+0xfc>
40022774:	e59f1034 	ldr	r1, [pc, #52]	; 400227b0 <CyU3PGpioInit+0x118>
40022778:	e3a00004 	mov	r0, #4
4002277c:	ebffc52b 	bl	40013c30 <CyU3PLppInit>
40022780:	e1a05000 	mov	r5, r0
40022784:	e3550000 	cmp	r5, #0
40022788:	0a000001 	beq	40022794 <CyU3PGpioInit+0xfc>
4002278c:	e1a00005 	mov	r0, r5
40022790:	eaffffc8 	b	400226b8 <CyU3PGpioInit+0x20>
40022794:	e3a00001 	mov	r0, #1
40022798:	e59f1008 	ldr	r1, [pc, #8]	; 400227a8 <CyU3PGpioInit+0x110>
4002279c:	e5810000 	str	r0, [r1]
400227a0:	e3a00000 	mov	r0, #0
400227a4:	eaffffc3 	b	400226b8 <CyU3PGpioInit+0x20>
400227a8:	40030edc 	.word	0x40030edc
400227ac:	e0001000 	.word	0xe0001000
400227b0:	400227b4 	.word	0x400227b4

Disassembly of section i.CyU3PGpioInt_Handler:

400227b4 <CyU3PGpioInt_Handler>:
400227b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400227b8:	e3a06000 	mov	r6, #0
400227bc:	e3a05000 	mov	r5, #0
400227c0:	e3a04001 	mov	r4, #1
400227c4:	ea000029 	b	40022870 <CyU3PGpioInt_Handler+0xbc>
400227c8:	e59f0198 	ldr	r0, [pc, #408]	; 40022968 <CyU3PGpioInt_Handler+0x1b4>
400227cc:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
400227d0:	e1100004 	tst	r0, r4
400227d4:	0a000021 	beq	40022860 <CyU3PGpioInt_Handler+0xac>
400227d8:	e59f0188 	ldr	r0, [pc, #392]	; 40022968 <CyU3PGpioInt_Handler+0x1b4>
400227dc:	e7900205 	ldr	r0, [r0, r5, lsl #4]
400227e0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400227e4:	e59f117c 	ldr	r1, [pc, #380]	; 40022968 <CyU3PGpioInt_Handler+0x1b4>
400227e8:	e7810205 	str	r0, [r1, r5, lsl #4]
400227ec:	e59f0178 	ldr	r0, [pc, #376]	; 4002296c <CyU3PGpioInt_Handler+0x1b8>
400227f0:	e5900000 	ldr	r0, [r0]
400227f4:	e3500000 	cmp	r0, #0
400227f8:	0a000018 	beq	40022860 <CyU3PGpioInt_Handler+0xac>
400227fc:	e1a06005 	mov	r6, r5
40022800:	e1a07005 	mov	r7, r5
40022804:	ea00000e 	b	40022844 <CyU3PGpioInt_Handler+0x90>
40022808:	e1a00007 	mov	r0, r7
4002280c:	ebffc097 	bl	40012a70 <CyU3PIsGpioComplexIOConfigured>
40022810:	e3500000 	cmp	r0, #0
40022814:	0a000001 	beq	40022820 <CyU3PGpioInt_Handler+0x6c>
40022818:	e1a06007 	mov	r6, r7
4002281c:	ea00000a 	b	4002284c <CyU3PGpioInt_Handler+0x98>
40022820:	e2870020 	add	r0, r7, #32
40022824:	ebffc091 	bl	40012a70 <CyU3PIsGpioComplexIOConfigured>
40022828:	e3500000 	cmp	r0, #0
4002282c:	0a000002 	beq	4002283c <CyU3PGpioInt_Handler+0x88>
40022830:	e2870020 	add	r0, r7, #32
40022834:	e20060ff 	and	r6, r0, #255	; 0xff
40022838:	ea000003 	b	4002284c <CyU3PGpioInt_Handler+0x98>
4002283c:	e2870008 	add	r0, r7, #8
40022840:	e20070ff 	and	r7, r0, #255	; 0xff
40022844:	e3570020 	cmp	r7, #32
40022848:	baffffee 	blt	40022808 <CyU3PGpioInt_Handler+0x54>
4002284c:	e1a00000 	nop			; (mov r0, r0)
40022850:	e1a00006 	mov	r0, r6
40022854:	e59f1110 	ldr	r1, [pc, #272]	; 4002296c <CyU3PGpioInt_Handler+0x1b8>
40022858:	e5911000 	ldr	r1, [r1]
4002285c:	e12fff31 	blx	r1
40022860:	e59f0108 	ldr	r0, [pc, #264]	; 40022970 <CyU3PGpioInt_Handler+0x1bc>
40022864:	e0004084 	and	r4, r0, r4, lsl #1
40022868:	e2850001 	add	r0, r5, #1
4002286c:	e20050ff 	and	r5, r0, #255	; 0xff
40022870:	e3540080 	cmp	r4, #128	; 0x80
40022874:	9affffd3 	bls	400227c8 <CyU3PGpioInt_Handler+0x14>
40022878:	e59f00e8 	ldr	r0, [pc, #232]	; 40022968 <CyU3PGpioInt_Handler+0x1b4>
4002287c:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022880:	e3500000 	cmp	r0, #0
40022884:	0a000017 	beq	400228e8 <CyU3PGpioInt_Handler+0x134>
40022888:	e3a05000 	mov	r5, #0
4002288c:	ea000013 	b	400228e0 <CyU3PGpioInt_Handler+0x12c>
40022890:	e59f00d0 	ldr	r0, [pc, #208]	; 40022968 <CyU3PGpioInt_Handler+0x1b4>
40022894:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022898:	e3a01001 	mov	r1, #1
4002289c:	e1100511 	tst	r0, r1, lsl r5
400228a0:	0a00000c 	beq	400228d8 <CyU3PGpioInt_Handler+0x124>
400228a4:	e59f00c8 	ldr	r0, [pc, #200]	; 40022974 <CyU3PGpioInt_Handler+0x1c0>
400228a8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400228ac:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400228b0:	e59f10bc 	ldr	r1, [pc, #188]	; 40022974 <CyU3PGpioInt_Handler+0x1c0>
400228b4:	e7810105 	str	r0, [r1, r5, lsl #2]
400228b8:	e59f00ac 	ldr	r0, [pc, #172]	; 4002296c <CyU3PGpioInt_Handler+0x1b8>
400228bc:	e5900000 	ldr	r0, [r0]
400228c0:	e3500000 	cmp	r0, #0
400228c4:	0a000003 	beq	400228d8 <CyU3PGpioInt_Handler+0x124>
400228c8:	e1a00005 	mov	r0, r5
400228cc:	e59f1098 	ldr	r1, [pc, #152]	; 4002296c <CyU3PGpioInt_Handler+0x1b8>
400228d0:	e5911000 	ldr	r1, [r1]
400228d4:	e12fff31 	blx	r1
400228d8:	e2850001 	add	r0, r5, #1
400228dc:	e20050ff 	and	r5, r0, #255	; 0xff
400228e0:	e3550020 	cmp	r5, #32
400228e4:	baffffe9 	blt	40022890 <CyU3PGpioInt_Handler+0xdc>
400228e8:	e59f0078 	ldr	r0, [pc, #120]	; 40022968 <CyU3PGpioInt_Handler+0x1b4>
400228ec:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
400228f0:	e3500000 	cmp	r0, #0
400228f4:	0a00001a 	beq	40022964 <CyU3PGpioInt_Handler+0x1b0>
400228f8:	e3a05000 	mov	r5, #0
400228fc:	ea000016 	b	4002295c <CyU3PGpioInt_Handler+0x1a8>
40022900:	e59f0060 	ldr	r0, [pc, #96]	; 40022968 <CyU3PGpioInt_Handler+0x1b4>
40022904:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022908:	e3a01001 	mov	r1, #1
4002290c:	e1100511 	tst	r0, r1, lsl r5
40022910:	0a00000f 	beq	40022954 <CyU3PGpioInt_Handler+0x1a0>
40022914:	e59f0058 	ldr	r0, [pc, #88]	; 40022974 <CyU3PGpioInt_Handler+0x1c0>
40022918:	e2851020 	add	r1, r5, #32
4002291c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022920:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022924:	e59f0048 	ldr	r0, [pc, #72]	; 40022974 <CyU3PGpioInt_Handler+0x1c0>
40022928:	e2852020 	add	r2, r5, #32
4002292c:	e7801102 	str	r1, [r0, r2, lsl #2]
40022930:	e59f0034 	ldr	r0, [pc, #52]	; 4002296c <CyU3PGpioInt_Handler+0x1b8>
40022934:	e5900000 	ldr	r0, [r0]
40022938:	e3500000 	cmp	r0, #0
4002293c:	0a000004 	beq	40022954 <CyU3PGpioInt_Handler+0x1a0>
40022940:	e2851020 	add	r1, r5, #32
40022944:	e20100ff 	and	r0, r1, #255	; 0xff
40022948:	e59f101c 	ldr	r1, [pc, #28]	; 4002296c <CyU3PGpioInt_Handler+0x1b8>
4002294c:	e5911000 	ldr	r1, [r1]
40022950:	e12fff31 	blx	r1
40022954:	e2850001 	add	r0, r5, #1
40022958:	e20050ff 	and	r5, r0, #255	; 0xff
4002295c:	e3550020 	cmp	r5, #32
40022960:	baffffe6 	blt	40022900 <CyU3PGpioInt_Handler+0x14c>
40022964:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022968:	e0001000 	.word	0xe0001000
4002296c:	40030ee0 	.word	0x40030ee0
40022970:	0000ffff 	.word	0x0000ffff
40022974:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022978 <CyU3PGpioSetSimpleConfig>:
40022978:	e92d4070 	push	{r4, r5, r6, lr}
4002297c:	e1a04000 	mov	r4, r0
40022980:	e1a05001 	mov	r5, r1
40022984:	e3a06000 	mov	r6, #0
40022988:	e59f00d0 	ldr	r0, [pc, #208]	; 40022a60 <CyU3PGpioSetSimpleConfig+0xe8>
4002298c:	e5900000 	ldr	r0, [r0]
40022990:	e3500000 	cmp	r0, #0
40022994:	1a000001 	bne	400229a0 <CyU3PGpioSetSimpleConfig+0x28>
40022998:	e3a00042 	mov	r0, #66	; 0x42
4002299c:	e8bd8070 	pop	{r4, r5, r6, pc}
400229a0:	e1a00004 	mov	r0, r4
400229a4:	ebffc03d 	bl	40012aa0 <CyU3PIsGpioValid>
400229a8:	e3500000 	cmp	r0, #0
400229ac:	1a000001 	bne	400229b8 <CyU3PGpioSetSimpleConfig+0x40>
400229b0:	e3a00040 	mov	r0, #64	; 0x40
400229b4:	eafffff8 	b	4002299c <CyU3PGpioSetSimpleConfig+0x24>
400229b8:	e3550000 	cmp	r5, #0
400229bc:	1a000001 	bne	400229c8 <CyU3PGpioSetSimpleConfig+0x50>
400229c0:	e3a00041 	mov	r0, #65	; 0x41
400229c4:	eafffff4 	b	4002299c <CyU3PGpioSetSimpleConfig+0x24>
400229c8:	e5d50010 	ldrb	r0, [r5, #16]
400229cc:	e3500005 	cmp	r0, #5
400229d0:	da000001 	ble	400229dc <CyU3PGpioSetSimpleConfig+0x64>
400229d4:	e3a00040 	mov	r0, #64	; 0x40
400229d8:	eaffffef 	b	4002299c <CyU3PGpioSetSimpleConfig+0x24>
400229dc:	e1a00004 	mov	r0, r4
400229e0:	ebffc028 	bl	40012a88 <CyU3PIsGpioSimpleIOConfigured>
400229e4:	e3500000 	cmp	r0, #0
400229e8:	1a000001 	bne	400229f4 <CyU3PGpioSetSimpleConfig+0x7c>
400229ec:	e3a00044 	mov	r0, #68	; 0x44
400229f0:	eaffffe9 	b	4002299c <CyU3PGpioSetSimpleConfig+0x24>
400229f4:	e595000c 	ldr	r0, [r5, #12]
400229f8:	e3500000 	cmp	r0, #0
400229fc:	0a000000 	beq	40022a04 <CyU3PGpioSetSimpleConfig+0x8c>
40022a00:	e3866040 	orr	r6, r6, #64	; 0x40
40022a04:	e5950004 	ldr	r0, [r5, #4]
40022a08:	e3500000 	cmp	r0, #0
40022a0c:	0a000000 	beq	40022a14 <CyU3PGpioSetSimpleConfig+0x9c>
40022a10:	e3866010 	orr	r6, r6, #16
40022a14:	e5950008 	ldr	r0, [r5, #8]
40022a18:	e3500000 	cmp	r0, #0
40022a1c:	0a000000 	beq	40022a24 <CyU3PGpioSetSimpleConfig+0xac>
40022a20:	e3866020 	orr	r6, r6, #32
40022a24:	e5950000 	ldr	r0, [r5]
40022a28:	e3500000 	cmp	r0, #0
40022a2c:	0a000000 	beq	40022a34 <CyU3PGpioSetSimpleConfig+0xbc>
40022a30:	e3866001 	orr	r6, r6, #1
40022a34:	e5d50010 	ldrb	r0, [r5, #16]
40022a38:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022a3c:	e0010c00 	and	r0, r1, r0, lsl #24
40022a40:	e1866000 	orr	r6, r6, r0
40022a44:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022a48:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022a4c:	e59f0010 	ldr	r0, [pc, #16]	; 40022a64 <CyU3PGpioSetSimpleConfig+0xec>
40022a50:	e7806104 	str	r6, [r0, r4, lsl #2]
40022a54:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022a58:	e3a00000 	mov	r0, #0
40022a5c:	eaffffce 	b	4002299c <CyU3PGpioSetSimpleConfig+0x24>
40022a60:	40030edc 	.word	0x40030edc
40022a64:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022a68 <CyU3PGpioSetValue>:
40022a68:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022a6c:	e1a04000 	mov	r4, r0
40022a70:	e1a05001 	mov	r5, r1
40022a74:	e59f00b8 	ldr	r0, [pc, #184]	; 40022b34 <CyU3PGpioSetValue+0xcc>
40022a78:	e5900000 	ldr	r0, [r0]
40022a7c:	e3500000 	cmp	r0, #0
40022a80:	1a000001 	bne	40022a8c <CyU3PGpioSetValue+0x24>
40022a84:	e3a00042 	mov	r0, #66	; 0x42
40022a88:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022a8c:	e1a00004 	mov	r0, r4
40022a90:	ebffc002 	bl	40012aa0 <CyU3PIsGpioValid>
40022a94:	e3500000 	cmp	r0, #0
40022a98:	1a000001 	bne	40022aa4 <CyU3PGpioSetValue+0x3c>
40022a9c:	e3a00040 	mov	r0, #64	; 0x40
40022aa0:	eafffff8 	b	40022a88 <CyU3PGpioSetValue+0x20>
40022aa4:	e1a00004 	mov	r0, r4
40022aa8:	ebffbff6 	bl	40012a88 <CyU3PIsGpioSimpleIOConfigured>
40022aac:	e3500000 	cmp	r0, #0
40022ab0:	0a000002 	beq	40022ac0 <CyU3PGpioSetValue+0x58>
40022ab4:	e59f007c 	ldr	r0, [pc, #124]	; 40022b38 <CyU3PGpioSetValue+0xd0>
40022ab8:	e0807104 	add	r7, r0, r4, lsl #2
40022abc:	ea00000d 	b	40022af8 <CyU3PGpioSetValue+0x90>
40022ac0:	e1a00004 	mov	r0, r4
40022ac4:	ebffbfe9 	bl	40012a70 <CyU3PIsGpioComplexIOConfigured>
40022ac8:	e3500000 	cmp	r0, #0
40022acc:	0a000007 	beq	40022af0 <CyU3PGpioSetValue+0x88>
40022ad0:	e1a00004 	mov	r0, r4
40022ad4:	e1a01fc4 	asr	r1, r4, #31
40022ad8:	e0841ea1 	add	r1, r4, r1, lsr #29
40022adc:	e1a011c1 	asr	r1, r1, #3
40022ae0:	e0441181 	sub	r1, r4, r1, lsl #3
40022ae4:	e59f2050 	ldr	r2, [pc, #80]	; 40022b3c <CyU3PGpioSetValue+0xd4>
40022ae8:	e0827201 	add	r7, r2, r1, lsl #4
40022aec:	ea000001 	b	40022af8 <CyU3PGpioSetValue+0x90>
40022af0:	e3a00044 	mov	r0, #68	; 0x44
40022af4:	eaffffe3 	b	40022a88 <CyU3PGpioSetValue+0x20>
40022af8:	e5970000 	ldr	r0, [r7]
40022afc:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022b00:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022b04:	1a000001 	bne	40022b10 <CyU3PGpioSetValue+0xa8>
40022b08:	e3a00044 	mov	r0, #68	; 0x44
40022b0c:	eaffffdd 	b	40022a88 <CyU3PGpioSetValue+0x20>
40022b10:	e3550000 	cmp	r5, #0
40022b14:	0a000001 	beq	40022b20 <CyU3PGpioSetValue+0xb8>
40022b18:	e3866001 	orr	r6, r6, #1
40022b1c:	ea000000 	b	40022b24 <CyU3PGpioSetValue+0xbc>
40022b20:	e3c66001 	bic	r6, r6, #1
40022b24:	e5876000 	str	r6, [r7]
40022b28:	e5976000 	ldr	r6, [r7]
40022b2c:	e3a00000 	mov	r0, #0
40022b30:	eaffffd4 	b	40022a88 <CyU3PGpioSetValue+0x20>
40022b34:	40030edc 	.word	0x40030edc
40022b38:	e0001100 	.word	0xe0001100
40022b3c:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022b40 <CyU3PGpioSimpleGetValue>:
40022b40:	e92d4070 	push	{r4, r5, r6, lr}
40022b44:	e1a04000 	mov	r4, r0
40022b48:	e1a06001 	mov	r6, r1
40022b4c:	e59f0068 	ldr	r0, [pc, #104]	; 40022bbc <CyU3PGpioSimpleGetValue+0x7c>
40022b50:	e5900000 	ldr	r0, [r0]
40022b54:	e3500000 	cmp	r0, #0
40022b58:	1a000001 	bne	40022b64 <CyU3PGpioSimpleGetValue+0x24>
40022b5c:	e3a00042 	mov	r0, #66	; 0x42
40022b60:	e8bd8070 	pop	{r4, r5, r6, pc}
40022b64:	e1a00004 	mov	r0, r4
40022b68:	ebffbfcc 	bl	40012aa0 <CyU3PIsGpioValid>
40022b6c:	e3500000 	cmp	r0, #0
40022b70:	1a000001 	bne	40022b7c <CyU3PGpioSimpleGetValue+0x3c>
40022b74:	e3a00040 	mov	r0, #64	; 0x40
40022b78:	eafffff8 	b	40022b60 <CyU3PGpioSimpleGetValue+0x20>
40022b7c:	e3560000 	cmp	r6, #0
40022b80:	1a000001 	bne	40022b8c <CyU3PGpioSimpleGetValue+0x4c>
40022b84:	e3a00041 	mov	r0, #65	; 0x41
40022b88:	eafffff4 	b	40022b60 <CyU3PGpioSimpleGetValue+0x20>
40022b8c:	e59f002c 	ldr	r0, [pc, #44]	; 40022bc0 <CyU3PGpioSimpleGetValue+0x80>
40022b90:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022b94:	e3150040 	tst	r5, #64	; 0x40
40022b98:	0a000003 	beq	40022bac <CyU3PGpioSimpleGetValue+0x6c>
40022b9c:	e2050002 	and	r0, r5, #2
40022ba0:	e1a000a0 	lsr	r0, r0, #1
40022ba4:	e5860000 	str	r0, [r6]
40022ba8:	ea000001 	b	40022bb4 <CyU3PGpioSimpleGetValue+0x74>
40022bac:	e2050001 	and	r0, r5, #1
40022bb0:	e5860000 	str	r0, [r6]
40022bb4:	e3a00000 	mov	r0, #0
40022bb8:	eaffffe8 	b	40022b60 <CyU3PGpioSimpleGetValue+0x20>
40022bbc:	40030edc 	.word	0x40030edc
40022bc0:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40022bc4 <CyU3PRegisterGpioCallBack>:
40022bc4:	e59f1004 	ldr	r1, [pc, #4]	; 40022bd0 <CyU3PRegisterGpioCallBack+0xc>
40022bc8:	e5810000 	str	r0, [r1]
40022bcc:	e12fff1e 	bx	lr
40022bd0:	40030ee0 	.word	0x40030ee0

Disassembly of section i.CyU3PRegisterUartCallBack:

40022bd4 <CyU3PRegisterUartCallBack>:
40022bd4:	e59f1004 	ldr	r1, [pc, #4]	; 40022be0 <CyU3PRegisterUartCallBack+0xc>
40022bd8:	e5810000 	str	r0, [r1]
40022bdc:	e12fff1e 	bx	lr
40022be0:	40030ef0 	.word	0x40030ef0

Disassembly of section i.CyU3PUartGetLock:

40022be4 <CyU3PUartGetLock>:
40022be4:	e92d4010 	push	{r4, lr}
40022be8:	e3a04000 	mov	r4, #0
40022bec:	e59f0044 	ldr	r0, [pc, #68]	; 40022c38 <CyU3PUartGetLock+0x54>
40022bf0:	e5900000 	ldr	r0, [r0]
40022bf4:	e3500000 	cmp	r0, #0
40022bf8:	1a000001 	bne	40022c04 <CyU3PUartGetLock+0x20>
40022bfc:	e3a00044 	mov	r0, #68	; 0x44
40022c00:	e8bd8010 	pop	{r4, pc}
40022c04:	ebff96d5 	bl	40008760 <_tx_thread_identify>
40022c08:	e3500000 	cmp	r0, #0
40022c0c:	0a000000 	beq	40022c14 <CyU3PUartGetLock+0x30>
40022c10:	e3e04000 	mvn	r4, #0
40022c14:	e1a01004 	mov	r1, r4
40022c18:	e59f001c 	ldr	r0, [pc, #28]	; 40022c3c <CyU3PUartGetLock+0x58>
40022c1c:	ebff9ce4 	bl	40009fb4 <_txe_mutex_get>
40022c20:	e3500000 	cmp	r0, #0
40022c24:	0a000001 	beq	40022c30 <CyU3PUartGetLock+0x4c>
40022c28:	e3a0001d 	mov	r0, #29
40022c2c:	eafffff3 	b	40022c00 <CyU3PUartGetLock+0x1c>
40022c30:	e3a00000 	mov	r0, #0
40022c34:	eafffff1 	b	40022c00 <CyU3PUartGetLock+0x1c>
40022c38:	40030eec 	.word	0x40030eec
40022c3c:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

40022c40 <CyU3PUartInit>:
40022c40:	e92d4010 	push	{r4, lr}
40022c44:	e3a00003 	mov	r0, #3
40022c48:	ebffbf9b 	bl	40012abc <CyU3PIsLppIOConfigured>
40022c4c:	e3500000 	cmp	r0, #0
40022c50:	1a000001 	bne	40022c5c <CyU3PUartInit+0x1c>
40022c54:	e3a00044 	mov	r0, #68	; 0x44
40022c58:	e8bd8010 	pop	{r4, pc}
40022c5c:	e59f00b8 	ldr	r0, [pc, #184]	; 40022d1c <CyU3PUartInit+0xdc>
40022c60:	e5900000 	ldr	r0, [r0]
40022c64:	e3500000 	cmp	r0, #0
40022c68:	0a000001 	beq	40022c74 <CyU3PUartInit+0x34>
40022c6c:	e3a00043 	mov	r0, #67	; 0x43
40022c70:	eafffff8 	b	40022c58 <CyU3PUartInit+0x18>
40022c74:	e3a03038 	mov	r3, #56	; 0x38
40022c78:	e3a02000 	mov	r2, #0
40022c7c:	e1a01002 	mov	r1, r2
40022c80:	e59f0098 	ldr	r0, [pc, #152]	; 40022d20 <CyU3PUartInit+0xe0>
40022c84:	ebff9c4c 	bl	40009dbc <_txe_mutex_create>
40022c88:	e3a00d96 	mov	r0, #9600	; 0x2580
40022c8c:	ebffc505 	bl	400140a8 <CyU3PUartSetClock>
40022c90:	e1a04000 	mov	r4, r0
40022c94:	e3540000 	cmp	r4, #0
40022c98:	0a000001 	beq	40022ca4 <CyU3PUartInit+0x64>
40022c9c:	e1a00004 	mov	r0, r4
40022ca0:	eaffffec 	b	40022c58 <CyU3PUartInit+0x18>
40022ca4:	e59f1078 	ldr	r1, [pc, #120]	; 40022d24 <CyU3PUartInit+0xe4>
40022ca8:	e3a00003 	mov	r0, #3
40022cac:	ebffc3df 	bl	40013c30 <CyU3PLppInit>
40022cb0:	e1a04000 	mov	r4, r0
40022cb4:	e3540000 	cmp	r4, #0
40022cb8:	0a000001 	beq	40022cc4 <CyU3PUartInit+0x84>
40022cbc:	e1a00004 	mov	r0, r4
40022cc0:	eaffffe4 	b	40022c58 <CyU3PUartInit+0x18>
40022cc4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022cc8:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022ccc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022cd0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022cd4:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022cd8:	e3a0000a 	mov	r0, #10
40022cdc:	ebffc1d7 	bl	40013440 <CyU3PBusyWait>
40022ce0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ce4:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022ce8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022cec:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022cf0:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022cf4:	e1a00000 	nop			; (mov r0, r0)
40022cf8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022cfc:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022d00:	e3100001 	tst	r0, #1
40022d04:	0afffffb 	beq	40022cf8 <CyU3PUartInit+0xb8>
40022d08:	e3a00001 	mov	r0, #1
40022d0c:	e59f1008 	ldr	r1, [pc, #8]	; 40022d1c <CyU3PUartInit+0xdc>
40022d10:	e5810000 	str	r0, [r1]
40022d14:	e3a00000 	mov	r0, #0
40022d18:	eaffffce 	b	40022c58 <CyU3PUartInit+0x18>
40022d1c:	40030eec 	.word	0x40030eec
40022d20:	40032e1c 	.word	0x40032e1c
40022d24:	40022d28 	.word	0x40022d28

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40022d28 <CyU3PUartInt_ThreadHandler>:
40022d28:	e92d4070 	push	{r4, r5, r6, lr}
40022d2c:	ebffffac 	bl	40022be4 <CyU3PUartGetLock>
40022d30:	e1a05000 	mov	r5, r0
40022d34:	e3550000 	cmp	r5, #0
40022d38:	0a000000 	beq	40022d40 <CyU3PUartInt_ThreadHandler+0x18>
40022d3c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022d40:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d44:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40022d48:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022d4c:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40022d50:	e0004001 	and	r4, r0, r1
40022d54:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d58:	e5804808 	str	r4, [r0, #2056]	; 0x808
40022d5c:	e59f0078 	ldr	r0, [pc, #120]	; 40022ddc <CyU3PUartInt_ThreadHandler+0xb4>
40022d60:	e5900000 	ldr	r0, [r0]
40022d64:	e3500000 	cmp	r0, #0
40022d68:	1a000001 	bne	40022d74 <CyU3PUartInt_ThreadHandler+0x4c>
40022d6c:	eb00001b 	bl	40022de0 <CyU3PUartReleaseLock>
40022d70:	eafffff1 	b	40022d3c <CyU3PUartInt_ThreadHandler+0x14>
40022d74:	e3140001 	tst	r4, #1
40022d78:	0a000004 	beq	40022d90 <CyU3PUartInt_ThreadHandler+0x68>
40022d7c:	e3a01000 	mov	r1, #0
40022d80:	e1a00001 	mov	r0, r1
40022d84:	e59f2050 	ldr	r2, [pc, #80]	; 40022ddc <CyU3PUartInt_ThreadHandler+0xb4>
40022d88:	e5922000 	ldr	r2, [r2]
40022d8c:	e12fff32 	blx	r2
40022d90:	e3140008 	tst	r4, #8
40022d94:	0a000004 	beq	40022dac <CyU3PUartInt_ThreadHandler+0x84>
40022d98:	e3a01000 	mov	r1, #0
40022d9c:	e3a00001 	mov	r0, #1
40022da0:	e59f2034 	ldr	r2, [pc, #52]	; 40022ddc <CyU3PUartInt_ThreadHandler+0xb4>
40022da4:	e5922000 	ldr	r2, [r2]
40022da8:	e12fff32 	blx	r2
40022dac:	e3140c02 	tst	r4, #512	; 0x200
40022db0:	0a000007 	beq	40022dd4 <CyU3PUartInt_ThreadHandler+0xac>
40022db4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022db8:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
40022dbc:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40022dc0:	e1a01c20 	lsr	r1, r0, #24
40022dc4:	e3a00002 	mov	r0, #2
40022dc8:	e59f200c 	ldr	r2, [pc, #12]	; 40022ddc <CyU3PUartInt_ThreadHandler+0xb4>
40022dcc:	e5922000 	ldr	r2, [r2]
40022dd0:	e12fff32 	blx	r2
40022dd4:	eb000001 	bl	40022de0 <CyU3PUartReleaseLock>
40022dd8:	eaffffd7 	b	40022d3c <CyU3PUartInt_ThreadHandler+0x14>
40022ddc:	40030ef0 	.word	0x40030ef0

Disassembly of section i.CyU3PUartReleaseLock:

40022de0 <CyU3PUartReleaseLock>:
40022de0:	e92d4010 	push	{r4, lr}
40022de4:	e59f0030 	ldr	r0, [pc, #48]	; 40022e1c <CyU3PUartReleaseLock+0x3c>
40022de8:	e5900000 	ldr	r0, [r0]
40022dec:	e3500000 	cmp	r0, #0
40022df0:	1a000001 	bne	40022dfc <CyU3PUartReleaseLock+0x1c>
40022df4:	e3a00044 	mov	r0, #68	; 0x44
40022df8:	e8bd8010 	pop	{r4, pc}
40022dfc:	e59f001c 	ldr	r0, [pc, #28]	; 40022e20 <CyU3PUartReleaseLock+0x40>
40022e00:	ebff9ca0 	bl	4000a088 <_txe_mutex_put>
40022e04:	e3500000 	cmp	r0, #0
40022e08:	0a000001 	beq	40022e14 <CyU3PUartReleaseLock+0x34>
40022e0c:	e3a0001d 	mov	r0, #29
40022e10:	eafffff8 	b	40022df8 <CyU3PUartReleaseLock+0x18>
40022e14:	e3a00000 	mov	r0, #0
40022e18:	eafffff6 	b	40022df8 <CyU3PUartReleaseLock+0x18>
40022e1c:	40030eec 	.word	0x40030eec
40022e20:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

40022e24 <CyU3PUartSetConfig>:
40022e24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022e28:	e1a04000 	mov	r4, r0
40022e2c:	e1a05001 	mov	r5, r1
40022e30:	e3a07000 	mov	r7, #0
40022e34:	e59f01f0 	ldr	r0, [pc, #496]	; 4002302c <CyU3PUartSetConfig+0x208>
40022e38:	e5900000 	ldr	r0, [r0]
40022e3c:	e3500000 	cmp	r0, #0
40022e40:	1a000001 	bne	40022e4c <CyU3PUartSetConfig+0x28>
40022e44:	e3a00042 	mov	r0, #66	; 0x42
40022e48:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022e4c:	e3540000 	cmp	r4, #0
40022e50:	1a000001 	bne	40022e5c <CyU3PUartSetConfig+0x38>
40022e54:	e3a00041 	mov	r0, #65	; 0x41
40022e58:	eafffffa 	b	40022e48 <CyU3PUartSetConfig+0x24>
40022e5c:	e5940004 	ldr	r0, [r4, #4]
40022e60:	e5941000 	ldr	r1, [r4]
40022e64:	e1900001 	orrs	r0, r0, r1
40022e68:	1a000001 	bne	40022e74 <CyU3PUartSetConfig+0x50>
40022e6c:	e3a00040 	mov	r0, #64	; 0x40
40022e70:	eafffff4 	b	40022e48 <CyU3PUartSetConfig+0x24>
40022e74:	e5d40015 	ldrb	r0, [r4, #21]
40022e78:	e3500003 	cmp	r0, #3
40022e7c:	ba000001 	blt	40022e88 <CyU3PUartSetConfig+0x64>
40022e80:	e3a00040 	mov	r0, #64	; 0x40
40022e84:	eaffffef 	b	40022e48 <CyU3PUartSetConfig+0x24>
40022e88:	e5d40014 	ldrb	r0, [r4, #20]
40022e8c:	e3500001 	cmp	r0, #1
40022e90:	0a000004 	beq	40022ea8 <CyU3PUartSetConfig+0x84>
40022e94:	e5d40014 	ldrb	r0, [r4, #20]
40022e98:	e3500002 	cmp	r0, #2
40022e9c:	0a000001 	beq	40022ea8 <CyU3PUartSetConfig+0x84>
40022ea0:	e3a00040 	mov	r0, #64	; 0x40
40022ea4:	eaffffe7 	b	40022e48 <CyU3PUartSetConfig+0x24>
40022ea8:	e594000c 	ldr	r0, [r4, #12]
40022eac:	e3500000 	cmp	r0, #0
40022eb0:	1a000003 	bne	40022ec4 <CyU3PUartSetConfig+0xa0>
40022eb4:	e3550000 	cmp	r5, #0
40022eb8:	0a000001 	beq	40022ec4 <CyU3PUartSetConfig+0xa0>
40022ebc:	e3a00040 	mov	r0, #64	; 0x40
40022ec0:	eaffffe0 	b	40022e48 <CyU3PUartSetConfig+0x24>
40022ec4:	ebffff46 	bl	40022be4 <CyU3PUartGetLock>
40022ec8:	e1a06000 	mov	r6, r0
40022ecc:	e3560000 	cmp	r6, #0
40022ed0:	0a000001 	beq	40022edc <CyU3PUartSetConfig+0xb8>
40022ed4:	e3a0001d 	mov	r0, #29
40022ed8:	eaffffda 	b	40022e48 <CyU3PUartSetConfig+0x24>
40022edc:	e5940010 	ldr	r0, [r4, #16]
40022ee0:	ebffc470 	bl	400140a8 <CyU3PUartSetClock>
40022ee4:	e1a06000 	mov	r6, r0
40022ee8:	e3560000 	cmp	r6, #0
40022eec:	0a000002 	beq	40022efc <CyU3PUartSetConfig+0xd8>
40022ef0:	ebffffba 	bl	40022de0 <CyU3PUartReleaseLock>
40022ef4:	e1a00006 	mov	r0, r6
40022ef8:	eaffffd2 	b	40022e48 <CyU3PUartSetConfig+0x24>
40022efc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022f00:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40022f04:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022f08:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022f0c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40022f10:	e5940004 	ldr	r0, [r4, #4]
40022f14:	e3500000 	cmp	r0, #0
40022f18:	0a000001 	beq	40022f24 <CyU3PUartSetConfig+0x100>
40022f1c:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40022f20:	e3877001 	orr	r7, r7, #1
40022f24:	e5940000 	ldr	r0, [r4]
40022f28:	e3500000 	cmp	r0, #0
40022f2c:	0a000000 	beq	40022f34 <CyU3PUartSetConfig+0x110>
40022f30:	e3877002 	orr	r7, r7, #2
40022f34:	e5940008 	ldr	r0, [r4, #8]
40022f38:	e3500000 	cmp	r0, #0
40022f3c:	0a000000 	beq	40022f44 <CyU3PUartSetConfig+0x120>
40022f40:	e3877a06 	orr	r7, r7, #24576	; 0x6000
40022f44:	e594000c 	ldr	r0, [r4, #12]
40022f48:	e3500000 	cmp	r0, #0
40022f4c:	0a000004 	beq	40022f64 <CyU3PUartSetConfig+0x140>
40022f50:	e3877b01 	orr	r7, r7, #1024	; 0x400
40022f54:	e3a00001 	mov	r0, #1
40022f58:	e59f10d0 	ldr	r1, [pc, #208]	; 40023030 <CyU3PUartSetConfig+0x20c>
40022f5c:	e5810000 	str	r0, [r1]
40022f60:	ea000002 	b	40022f70 <CyU3PUartSetConfig+0x14c>
40022f64:	e3a00000 	mov	r0, #0
40022f68:	e59f10c0 	ldr	r1, [pc, #192]	; 40023030 <CyU3PUartSetConfig+0x20c>
40022f6c:	e5810000 	str	r0, [r1]
40022f70:	e5d40014 	ldrb	r0, [r4, #20]
40022f74:	e3a01c03 	mov	r1, #768	; 0x300
40022f78:	e0010400 	and	r0, r1, r0, lsl #8
40022f7c:	e1877000 	orr	r7, r7, r0
40022f80:	e5d40015 	ldrb	r0, [r4, #21]
40022f84:	e3500001 	cmp	r0, #1
40022f88:	0a000002 	beq	40022f98 <CyU3PUartSetConfig+0x174>
40022f8c:	e3500002 	cmp	r0, #2
40022f90:	1a000006 	bne	40022fb0 <CyU3PUartSetConfig+0x18c>
40022f94:	ea000002 	b	40022fa4 <CyU3PUartSetConfig+0x180>
40022f98:	e1a00000 	nop			; (mov r0, r0)
40022f9c:	e3877008 	orr	r7, r7, #8
40022fa0:	ea000004 	b	40022fb8 <CyU3PUartSetConfig+0x194>
40022fa4:	e1a00000 	nop			; (mov r0, r0)
40022fa8:	e3877018 	orr	r7, r7, #24
40022fac:	ea000001 	b	40022fb8 <CyU3PUartSetConfig+0x194>
40022fb0:	e1a00000 	nop			; (mov r0, r0)
40022fb4:	e1a00000 	nop			; (mov r0, r0)
40022fb8:	e1a00000 	nop			; (mov r0, r0)
40022fbc:	e3877807 	orr	r7, r7, #458752	; 0x70000
40022fc0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022fc4:	e5807800 	str	r7, [r0, #2048]	; 0x800
40022fc8:	e59f0064 	ldr	r0, [pc, #100]	; 40023034 <CyU3PUartSetConfig+0x210>
40022fcc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fd0:	e5810818 	str	r0, [r1, #2072]	; 0x818
40022fd4:	e1a00005 	mov	r0, r5
40022fd8:	ebfffefd 	bl	40022bd4 <CyU3PRegisterUartCallBack>
40022fdc:	e3550000 	cmp	r5, #0
40022fe0:	0a000003 	beq	40022ff4 <CyU3PUartSetConfig+0x1d0>
40022fe4:	e59f004c 	ldr	r0, [pc, #76]	; 40023038 <CyU3PUartSetConfig+0x214>
40022fe8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fec:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40022ff0:	ea000002 	b	40023000 <CyU3PUartSetConfig+0x1dc>
40022ff4:	e3a00000 	mov	r0, #0
40022ff8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022ffc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023000:	e3a00001 	mov	r0, #1
40023004:	e59f1030 	ldr	r1, [pc, #48]	; 4002303c <CyU3PUartSetConfig+0x218>
40023008:	e5810000 	str	r0, [r1]
4002300c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023010:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023014:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023018:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002301c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023020:	ebffff6e 	bl	40022de0 <CyU3PUartReleaseLock>
40023024:	e3a00000 	mov	r0, #0
40023028:	eaffff86 	b	40022e48 <CyU3PUartSetConfig+0x24>
4002302c:	40030eec 	.word	0x40030eec
40023030:	40030ee4 	.word	0x40030ee4
40023034:	00000603 	.word	0x00000603
40023038:	00000309 	.word	0x00000309
4002303c:	40030ee8 	.word	0x40030ee8

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023040 <CyU3PUartTxSetBlockXfer>:
40023040:	e92d4070 	push	{r4, r5, r6, lr}
40023044:	e1a05000 	mov	r5, r0
40023048:	e59f003c 	ldr	r0, [pc, #60]	; 4002308c <CyU3PUartTxSetBlockXfer+0x4c>
4002304c:	e5900000 	ldr	r0, [r0]
40023050:	e3500000 	cmp	r0, #0
40023054:	1a000001 	bne	40023060 <CyU3PUartTxSetBlockXfer+0x20>
40023058:	e3a00044 	mov	r0, #68	; 0x44
4002305c:	e8bd8070 	pop	{r4, r5, r6, pc}
40023060:	ebfffedf 	bl	40022be4 <CyU3PUartGetLock>
40023064:	e1a04000 	mov	r4, r0
40023068:	e3540000 	cmp	r4, #0
4002306c:	0a000001 	beq	40023078 <CyU3PUartTxSetBlockXfer+0x38>
40023070:	e1a00004 	mov	r0, r4
40023074:	eafffff8 	b	4002305c <CyU3PUartTxSetBlockXfer+0x1c>
40023078:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002307c:	e5805820 	str	r5, [r0, #2080]	; 0x820
40023080:	ebffff56 	bl	40022de0 <CyU3PUartReleaseLock>
40023084:	e3a00000 	mov	r0, #0
40023088:	eafffff3 	b	4002305c <CyU3PUartTxSetBlockXfer+0x1c>
4002308c:	40030ee4 	.word	0x40030ee4

Disassembly of section i.CyU3PI2cErrorRecovery:

40023090 <CyU3PI2cErrorRecovery>:
40023090:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023094:	e1a04000 	mov	r4, r0
40023098:	e3a07000 	mov	r7, #0
4002309c:	e3a08000 	mov	r8, #0
400230a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230a4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400230a8:	e59f1164 	ldr	r1, [pc, #356]	; 40023214 <CyU3PI2cErrorRecovery+0x184>
400230ac:	e5810000 	str	r0, [r1]
400230b0:	e59f5160 	ldr	r5, [pc, #352]	; 40023218 <CyU3PI2cErrorRecovery+0x188>
400230b4:	e1a00000 	nop			; (mov r0, r0)
400230b8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230bc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400230c0:	e3100201 	tst	r0, #268435456	; 0x10000000
400230c4:	0a000002 	beq	400230d4 <CyU3PI2cErrorRecovery+0x44>
400230c8:	e1b00005 	movs	r0, r5
400230cc:	e2455001 	sub	r5, r5, #1
400230d0:	1afffff8 	bne	400230b8 <CyU3PI2cErrorRecovery+0x28>
400230d4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230d8:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
400230dc:	e3a00000 	mov	r0, #0
400230e0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230e4:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400230e8:	e3e00000 	mvn	r0, #0
400230ec:	e5810408 	str	r0, [r1, #1032]	; 0x408
400230f0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230f4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400230f8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400230fc:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023100:	e3a00005 	mov	r0, #5
40023104:	ebffc0cd 	bl	40013440 <CyU3PBusyWait>
40023108:	e3540000 	cmp	r4, #0
4002310c:	0a000032 	beq	400231dc <CyU3PI2cErrorRecovery+0x14c>
40023110:	e3a00000 	mov	r0, #0
40023114:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023118:	e5810438 	str	r0, [r1, #1080]	; 0x438
4002311c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023120:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023124:	e3100008 	tst	r0, #8
40023128:	1a000000 	bne	40023130 <CyU3PI2cErrorRecovery+0xa0>
4002312c:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023130:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023134:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023138:	e3100002 	tst	r0, #2
4002313c:	0a000000 	beq	40023144 <CyU3PI2cErrorRecovery+0xb4>
40023140:	e3a07202 	mov	r7, #536870912	; 0x20000000
40023144:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023148:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002314c:	e1800007 	orr	r0, r0, r7
40023150:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023154:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023158:	e1e05741 	mvn	r5, r1, asr #14
4002315c:	ea000004 	b	40023174 <CyU3PI2cErrorRecovery+0xe4>
40023160:	e1b00005 	movs	r0, r5
40023164:	e2455001 	sub	r5, r5, #1
40023168:	1a000001 	bne	40023174 <CyU3PI2cErrorRecovery+0xe4>
4002316c:	e3a08054 	mov	r8, #84	; 0x54
40023170:	ea000003 	b	40023184 <CyU3PI2cErrorRecovery+0xf4>
40023174:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023178:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002317c:	e3100008 	tst	r0, #8
40023180:	0afffff6 	beq	40023160 <CyU3PI2cErrorRecovery+0xd0>
40023184:	e1a00000 	nop			; (mov r0, r0)
40023188:	e3580000 	cmp	r8, #0
4002318c:	1a00000b 	bne	400231c0 <CyU3PI2cErrorRecovery+0x130>
40023190:	e59f5080 	ldr	r5, [pc, #128]	; 40023218 <CyU3PI2cErrorRecovery+0x188>
40023194:	ea000004 	b	400231ac <CyU3PI2cErrorRecovery+0x11c>
40023198:	e1b00005 	movs	r0, r5
4002319c:	e2455001 	sub	r5, r5, #1
400231a0:	1a000001 	bne	400231ac <CyU3PI2cErrorRecovery+0x11c>
400231a4:	e3a08054 	mov	r8, #84	; 0x54
400231a8:	ea000003 	b	400231bc <CyU3PI2cErrorRecovery+0x12c>
400231ac:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231b0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400231b4:	e3100002 	tst	r0, #2
400231b8:	1afffff6 	bne	40023198 <CyU3PI2cErrorRecovery+0x108>
400231bc:	e1a00000 	nop			; (mov r0, r0)
400231c0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231c4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400231c8:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
400231cc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231d0:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231d4:	e3a00001 	mov	r0, #1
400231d8:	ebffc098 	bl	40013440 <CyU3PBusyWait>
400231dc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231e0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400231e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400231e8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231ec:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231f0:	e3a00005 	mov	r0, #5
400231f4:	ebffc091 	bl	40013440 <CyU3PBusyWait>
400231f8:	e3e00000 	mvn	r0, #0
400231fc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023200:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023204:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023208:	e580640c 	str	r6, [r0, #1036]	; 0x40c
4002320c:	e1a00008 	mov	r0, r8
40023210:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023214:	40030f04 	.word	0x40030f04
40023218:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

4002321c <CyU3PI2cGetLock>:
4002321c:	e92d4010 	push	{r4, lr}
40023220:	e3a04000 	mov	r4, #0
40023224:	e59f0044 	ldr	r0, [pc, #68]	; 40023270 <CyU3PI2cGetLock+0x54>
40023228:	e5900000 	ldr	r0, [r0]
4002322c:	e3500000 	cmp	r0, #0
40023230:	1a000001 	bne	4002323c <CyU3PI2cGetLock+0x20>
40023234:	e3a00044 	mov	r0, #68	; 0x44
40023238:	e8bd8010 	pop	{r4, pc}
4002323c:	ebff9547 	bl	40008760 <_tx_thread_identify>
40023240:	e3500000 	cmp	r0, #0
40023244:	0a000000 	beq	4002324c <CyU3PI2cGetLock+0x30>
40023248:	e3e04000 	mvn	r4, #0
4002324c:	e1a01004 	mov	r1, r4
40023250:	e59f001c 	ldr	r0, [pc, #28]	; 40023274 <CyU3PI2cGetLock+0x58>
40023254:	ebff9b56 	bl	40009fb4 <_txe_mutex_get>
40023258:	e3500000 	cmp	r0, #0
4002325c:	0a000001 	beq	40023268 <CyU3PI2cGetLock+0x4c>
40023260:	e3a0001d 	mov	r0, #29
40023264:	eafffff3 	b	40023238 <CyU3PI2cGetLock+0x1c>
40023268:	e3a00000 	mov	r0, #0
4002326c:	eafffff1 	b	40023238 <CyU3PI2cGetLock+0x1c>
40023270:	40030efc 	.word	0x40030efc
40023274:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

40023278 <CyU3PI2cInit>:
40023278:	e92d4010 	push	{r4, lr}
4002327c:	e3a00000 	mov	r0, #0
40023280:	ebffbe0d 	bl	40012abc <CyU3PIsLppIOConfigured>
40023284:	e3500000 	cmp	r0, #0
40023288:	1a000001 	bne	40023294 <CyU3PI2cInit+0x1c>
4002328c:	e3a00044 	mov	r0, #68	; 0x44
40023290:	e8bd8010 	pop	{r4, pc}
40023294:	e59f00bc 	ldr	r0, [pc, #188]	; 40023358 <CyU3PI2cInit+0xe0>
40023298:	e5900000 	ldr	r0, [r0]
4002329c:	e3500000 	cmp	r0, #0
400232a0:	0a000001 	beq	400232ac <CyU3PI2cInit+0x34>
400232a4:	e3a00043 	mov	r0, #67	; 0x43
400232a8:	eafffff8 	b	40023290 <CyU3PI2cInit+0x18>
400232ac:	e59f00a8 	ldr	r0, [pc, #168]	; 4002335c <CyU3PI2cInit+0xe4>
400232b0:	ebffc1f7 	bl	40013a94 <CyU3PI2cSetClock>
400232b4:	e1a04000 	mov	r4, r0
400232b8:	e3540000 	cmp	r4, #0
400232bc:	0a000001 	beq	400232c8 <CyU3PI2cInit+0x50>
400232c0:	e1a00004 	mov	r0, r4
400232c4:	eafffff1 	b	40023290 <CyU3PI2cInit+0x18>
400232c8:	e59f1090 	ldr	r1, [pc, #144]	; 40023360 <CyU3PI2cInit+0xe8>
400232cc:	e3a00000 	mov	r0, #0
400232d0:	ebffc256 	bl	40013c30 <CyU3PLppInit>
400232d4:	e1a04000 	mov	r4, r0
400232d8:	e3540000 	cmp	r4, #0
400232dc:	0a000001 	beq	400232e8 <CyU3PI2cInit+0x70>
400232e0:	e1a00004 	mov	r0, r4
400232e4:	eaffffe9 	b	40023290 <CyU3PI2cInit+0x18>
400232e8:	e3a03038 	mov	r3, #56	; 0x38
400232ec:	e3a02000 	mov	r2, #0
400232f0:	e1a01002 	mov	r1, r2
400232f4:	e59f0068 	ldr	r0, [pc, #104]	; 40023364 <CyU3PI2cInit+0xec>
400232f8:	ebff9aaf 	bl	40009dbc <_txe_mutex_create>
400232fc:	e3a00000 	mov	r0, #0
40023300:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023304:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023308:	e3a0000a 	mov	r0, #10
4002330c:	ebffc04b 	bl	40013440 <CyU3PBusyWait>
40023310:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023314:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023318:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002331c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023320:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023324:	e1a00000 	nop			; (mov r0, r0)
40023328:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002332c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023330:	e3100001 	tst	r0, #1
40023334:	0afffffb 	beq	40023328 <CyU3PI2cInit+0xb0>
40023338:	e3a00000 	mov	r0, #0
4002333c:	e59f1024 	ldr	r1, [pc, #36]	; 40023368 <CyU3PI2cInit+0xf0>
40023340:	e5810000 	str	r0, [r1]
40023344:	e3a00001 	mov	r0, #1
40023348:	e2411008 	sub	r1, r1, #8
4002334c:	e5810000 	str	r0, [r1]
40023350:	e3a00000 	mov	r0, #0
40023354:	eaffffcd 	b	40023290 <CyU3PI2cInit+0x18>
40023358:	40030efc 	.word	0x40030efc
4002335c:	000186a0 	.word	0x000186a0
40023360:	4002336c 	.word	0x4002336c
40023364:	40032e54 	.word	0x40032e54
40023368:	40030f04 	.word	0x40030f04

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

4002336c <CyU3PI2cInt_ThreadHandler>:
4002336c:	e92d4070 	push	{r4, r5, r6, lr}
40023370:	ebffffa9 	bl	4002321c <CyU3PI2cGetLock>
40023374:	e1a05000 	mov	r5, r0
40023378:	e3550000 	cmp	r5, #0
4002337c:	0a000000 	beq	40023384 <CyU3PI2cInt_ThreadHandler+0x18>
40023380:	e8bd8070 	pop	{r4, r5, r6, pc}
40023384:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023388:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002338c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023390:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
40023394:	e0004001 	and	r4, r0, r1
40023398:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002339c:	e5804408 	str	r4, [r0, #1032]	; 0x408
400233a0:	e59f00b0 	ldr	r0, [pc, #176]	; 40023458 <CyU3PI2cInt_ThreadHandler+0xec>
400233a4:	e5900000 	ldr	r0, [r0]
400233a8:	e3500000 	cmp	r0, #0
400233ac:	1a000001 	bne	400233b8 <CyU3PI2cInt_ThreadHandler+0x4c>
400233b0:	eb000098 	bl	40023618 <CyU3PI2cReleaseLock>
400233b4:	eafffff1 	b	40023380 <CyU3PI2cInt_ThreadHandler+0x14>
400233b8:	e3140001 	tst	r4, #1
400233bc:	0a000004 	beq	400233d4 <CyU3PI2cInt_ThreadHandler+0x68>
400233c0:	e3a01000 	mov	r1, #0
400233c4:	e1a00001 	mov	r0, r1
400233c8:	e59f2088 	ldr	r2, [pc, #136]	; 40023458 <CyU3PI2cInt_ThreadHandler+0xec>
400233cc:	e5922000 	ldr	r2, [r2]
400233d0:	e12fff32 	blx	r2
400233d4:	e3140008 	tst	r4, #8
400233d8:	0a000004 	beq	400233f0 <CyU3PI2cInt_ThreadHandler+0x84>
400233dc:	e3a01000 	mov	r1, #0
400233e0:	e3a00001 	mov	r0, #1
400233e4:	e59f206c 	ldr	r2, [pc, #108]	; 40023458 <CyU3PI2cInt_ThreadHandler+0xec>
400233e8:	e5922000 	ldr	r2, [r2]
400233ec:	e12fff32 	blx	r2
400233f0:	e3140040 	tst	r4, #64	; 0x40
400233f4:	0a000004 	beq	4002340c <CyU3PI2cInt_ThreadHandler+0xa0>
400233f8:	e3a01000 	mov	r1, #0
400233fc:	e3a00002 	mov	r0, #2
40023400:	e59f2050 	ldr	r2, [pc, #80]	; 40023458 <CyU3PI2cInt_ThreadHandler+0xec>
40023404:	e5922000 	ldr	r2, [r2]
40023408:	e12fff32 	blx	r2
4002340c:	e3140080 	tst	r4, #128	; 0x80
40023410:	0a000004 	beq	40023428 <CyU3PI2cInt_ThreadHandler+0xbc>
40023414:	e3a01000 	mov	r1, #0
40023418:	e3a00003 	mov	r0, #3
4002341c:	e59f2034 	ldr	r2, [pc, #52]	; 40023458 <CyU3PI2cInt_ThreadHandler+0xec>
40023420:	e5922000 	ldr	r2, [r2]
40023424:	e12fff32 	blx	r2
40023428:	e3140c01 	tst	r4, #256	; 0x100
4002342c:	0a000007 	beq	40023450 <CyU3PI2cInt_ThreadHandler+0xe4>
40023430:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023434:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023438:	e200040f 	and	r0, r0, #251658240	; 0xf000000
4002343c:	e1a01c20 	lsr	r1, r0, #24
40023440:	e3a00004 	mov	r0, #4
40023444:	e59f200c 	ldr	r2, [pc, #12]	; 40023458 <CyU3PI2cInt_ThreadHandler+0xec>
40023448:	e5922000 	ldr	r2, [r2]
4002344c:	e12fff32 	blx	r2
40023450:	eb000070 	bl	40023618 <CyU3PI2cReleaseLock>
40023454:	eaffffc9 	b	40023380 <CyU3PI2cInt_ThreadHandler+0x14>
40023458:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cReceiveBytes:

4002345c <CyU3PI2cReceiveBytes>:
4002345c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40023460:	e1a04000 	mov	r4, r0
40023464:	e1a05001 	mov	r5, r1
40023468:	e1a06002 	mov	r6, r2
4002346c:	e1a07003 	mov	r7, r3
40023470:	e59f0194 	ldr	r0, [pc, #404]	; 4002360c <CyU3PI2cReceiveBytes+0x1b0>
40023474:	e5900000 	ldr	r0, [r0]
40023478:	e3500000 	cmp	r0, #0
4002347c:	1a000001 	bne	40023488 <CyU3PI2cReceiveBytes+0x2c>
40023480:	e3a00044 	mov	r0, #68	; 0x44
40023484:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40023488:	e59f0180 	ldr	r0, [pc, #384]	; 40023610 <CyU3PI2cReceiveBytes+0x1b4>
4002348c:	e5900000 	ldr	r0, [r0]
40023490:	e3500000 	cmp	r0, #0
40023494:	0a000001 	beq	400234a0 <CyU3PI2cReceiveBytes+0x44>
40023498:	e3a00044 	mov	r0, #68	; 0x44
4002349c:	eafffff8 	b	40023484 <CyU3PI2cReceiveBytes+0x28>
400234a0:	e3550000 	cmp	r5, #0
400234a4:	0a000001 	beq	400234b0 <CyU3PI2cReceiveBytes+0x54>
400234a8:	e3540000 	cmp	r4, #0
400234ac:	1a000001 	bne	400234b8 <CyU3PI2cReceiveBytes+0x5c>
400234b0:	e3a00041 	mov	r0, #65	; 0x41
400234b4:	eafffff2 	b	40023484 <CyU3PI2cReceiveBytes+0x28>
400234b8:	e5d40008 	ldrb	r0, [r4, #8]
400234bc:	e3500000 	cmp	r0, #0
400234c0:	0a000002 	beq	400234d0 <CyU3PI2cReceiveBytes+0x74>
400234c4:	e5d40008 	ldrb	r0, [r4, #8]
400234c8:	e3500008 	cmp	r0, #8
400234cc:	da000001 	ble	400234d8 <CyU3PI2cReceiveBytes+0x7c>
400234d0:	e3a00040 	mov	r0, #64	; 0x40
400234d4:	eaffffea 	b	40023484 <CyU3PI2cReceiveBytes+0x28>
400234d8:	e3560000 	cmp	r6, #0
400234dc:	1a000001 	bne	400234e8 <CyU3PI2cReceiveBytes+0x8c>
400234e0:	e3a00000 	mov	r0, #0
400234e4:	eaffffe6 	b	40023484 <CyU3PI2cReceiveBytes+0x28>
400234e8:	ebffff4b 	bl	4002321c <CyU3PI2cGetLock>
400234ec:	e1a08000 	mov	r8, r0
400234f0:	e3580000 	cmp	r8, #0
400234f4:	0a000001 	beq	40023500 <CyU3PI2cReceiveBytes+0xa4>
400234f8:	e1a00008 	mov	r0, r8
400234fc:	eaffffe0 	b	40023484 <CyU3PI2cReceiveBytes+0x28>
40023500:	e3a0bd07 	mov	fp, #448	; 0x1c0
40023504:	e1a00000 	nop			; (mov r0, r0)
40023508:	e3a02001 	mov	r2, #1
4002350c:	e1a01006 	mov	r1, r6
40023510:	e1a00004 	mov	r0, r4
40023514:	eb000166 	bl	40023ab4 <MyI2cSendCommand>
40023518:	e1a08000 	mov	r8, r0
4002351c:	e3580000 	cmp	r8, #0
40023520:	0a000000 	beq	40023528 <CyU3PI2cReceiveBytes+0xcc>
40023524:	ea00002a 	b	400235d4 <CyU3PI2cReceiveBytes+0x178>
40023528:	e3a0a000 	mov	sl, #0
4002352c:	ea000020 	b	400235b4 <CyU3PI2cReceiveBytes+0x158>
40023530:	e59f00dc 	ldr	r0, [pc, #220]	; 40023614 <CyU3PI2cReceiveBytes+0x1b8>
40023534:	e58d0000 	str	r0, [sp]
40023538:	ea000006 	b	40023558 <CyU3PI2cReceiveBytes+0xfc>
4002353c:	e59d0000 	ldr	r0, [sp]
40023540:	e2401001 	sub	r1, r0, #1
40023544:	e3500000 	cmp	r0, #0
40023548:	e58d1000 	str	r1, [sp]
4002354c:	1a000001 	bne	40023558 <CyU3PI2cReceiveBytes+0xfc>
40023550:	e3a08055 	mov	r8, #85	; 0x55
40023554:	ea000004 	b	4002356c <CyU3PI2cReceiveBytes+0x110>
40023558:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002355c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023560:	e38b1002 	orr	r1, fp, #2
40023564:	e1100001 	tst	r0, r1
40023568:	0afffff3 	beq	4002353c <CyU3PI2cReceiveBytes+0xe0>
4002356c:	e1a00000 	nop			; (mov r0, r0)
40023570:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023574:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023578:	e110000b 	tst	r0, fp
4002357c:	0a000000 	beq	40023584 <CyU3PI2cReceiveBytes+0x128>
40023580:	e3a0804a 	mov	r8, #74	; 0x4a
40023584:	e3580000 	cmp	r8, #0
40023588:	0a000005 	beq	400235a4 <CyU3PI2cReceiveBytes+0x148>
4002358c:	e3a00001 	mov	r0, #1
40023590:	ebfffebe 	bl	40023090 <CyU3PI2cErrorRecovery>
40023594:	e3500000 	cmp	r0, #0
40023598:	0a000000 	beq	400235a0 <CyU3PI2cReceiveBytes+0x144>
4002359c:	e3a08054 	mov	r8, #84	; 0x54
400235a0:	ea000005 	b	400235bc <CyU3PI2cReceiveBytes+0x160>
400235a4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235a8:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
400235ac:	e7c5000a 	strb	r0, [r5, sl]
400235b0:	e28aa001 	add	sl, sl, #1
400235b4:	e15a0006 	cmp	sl, r6
400235b8:	3affffdc 	bcc	40023530 <CyU3PI2cReceiveBytes+0xd4>
400235bc:	e1a00000 	nop			; (mov r0, r0)
400235c0:	e3580000 	cmp	r8, #0
400235c4:	0a000002 	beq	400235d4 <CyU3PI2cReceiveBytes+0x178>
400235c8:	e1b00007 	movs	r0, r7
400235cc:	e2477001 	sub	r7, r7, #1
400235d0:	1affffcc 	bne	40023508 <CyU3PI2cReceiveBytes+0xac>
400235d4:	e1a00000 	nop			; (mov r0, r0)
400235d8:	e358004a 	cmp	r8, #74	; 0x4a
400235dc:	1a000007 	bne	40023600 <CyU3PI2cReceiveBytes+0x1a4>
400235e0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235e4:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
400235e8:	e3190040 	tst	r9, #64	; 0x40
400235ec:	0a000000 	beq	400235f4 <CyU3PI2cReceiveBytes+0x198>
400235f0:	e3a08045 	mov	r8, #69	; 0x45
400235f4:	e3190080 	tst	r9, #128	; 0x80
400235f8:	0a000000 	beq	40023600 <CyU3PI2cReceiveBytes+0x1a4>
400235fc:	e3a08055 	mov	r8, #85	; 0x55
40023600:	eb000004 	bl	40023618 <CyU3PI2cReleaseLock>
40023604:	e1a00008 	mov	r0, r8
40023608:	eaffff9d 	b	40023484 <CyU3PI2cReceiveBytes+0x28>
4002360c:	40030ef8 	.word	0x40030ef8
40023610:	40030ef4 	.word	0x40030ef4
40023614:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023618 <CyU3PI2cReleaseLock>:
40023618:	e92d4010 	push	{r4, lr}
4002361c:	e59f0030 	ldr	r0, [pc, #48]	; 40023654 <CyU3PI2cReleaseLock+0x3c>
40023620:	e5900000 	ldr	r0, [r0]
40023624:	e3500000 	cmp	r0, #0
40023628:	1a000001 	bne	40023634 <CyU3PI2cReleaseLock+0x1c>
4002362c:	e3a00044 	mov	r0, #68	; 0x44
40023630:	e8bd8010 	pop	{r4, pc}
40023634:	e59f001c 	ldr	r0, [pc, #28]	; 40023658 <CyU3PI2cReleaseLock+0x40>
40023638:	ebff9a92 	bl	4000a088 <_txe_mutex_put>
4002363c:	e3500000 	cmp	r0, #0
40023640:	0a000001 	beq	4002364c <CyU3PI2cReleaseLock+0x34>
40023644:	e3a0001d 	mov	r0, #29
40023648:	eafffff8 	b	40023630 <CyU3PI2cReleaseLock+0x18>
4002364c:	e3a00000 	mov	r0, #0
40023650:	eafffff6 	b	40023630 <CyU3PI2cReleaseLock+0x18>
40023654:	40030efc 	.word	0x40030efc
40023658:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

4002365c <CyU3PI2cSetConfig>:
4002365c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023660:	e1a04000 	mov	r4, r0
40023664:	e1a05001 	mov	r5, r1
40023668:	e59f01e0 	ldr	r0, [pc, #480]	; 40023850 <CyU3PI2cSetConfig+0x1f4>
4002366c:	e5900000 	ldr	r0, [r0]
40023670:	e3500000 	cmp	r0, #0
40023674:	1a000001 	bne	40023680 <CyU3PI2cSetConfig+0x24>
40023678:	e3a00042 	mov	r0, #66	; 0x42
4002367c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023680:	e3540000 	cmp	r4, #0
40023684:	1a000001 	bne	40023690 <CyU3PI2cSetConfig+0x34>
40023688:	e3a00041 	mov	r0, #65	; 0x41
4002368c:	eafffffa 	b	4002367c <CyU3PI2cSetConfig+0x20>
40023690:	e5940004 	ldr	r0, [r4, #4]
40023694:	e3500000 	cmp	r0, #0
40023698:	1a000003 	bne	400236ac <CyU3PI2cSetConfig+0x50>
4002369c:	e3550000 	cmp	r5, #0
400236a0:	0a000001 	beq	400236ac <CyU3PI2cSetConfig+0x50>
400236a4:	e3a00040 	mov	r0, #64	; 0x40
400236a8:	eafffff3 	b	4002367c <CyU3PI2cSetConfig+0x20>
400236ac:	ebfffeda 	bl	4002321c <CyU3PI2cGetLock>
400236b0:	e1a06000 	mov	r6, r0
400236b4:	e3560000 	cmp	r6, #0
400236b8:	0a000001 	beq	400236c4 <CyU3PI2cSetConfig+0x68>
400236bc:	e1a00006 	mov	r0, r6
400236c0:	eaffffed 	b	4002367c <CyU3PI2cSetConfig+0x20>
400236c4:	e3a00000 	mov	r0, #0
400236c8:	e59f1184 	ldr	r1, [pc, #388]	; 40023854 <CyU3PI2cSetConfig+0x1f8>
400236cc:	e5810000 	str	r0, [r1]
400236d0:	e5940000 	ldr	r0, [r4]
400236d4:	ebffc0ee 	bl	40013a94 <CyU3PI2cSetClock>
400236d8:	e1a06000 	mov	r6, r0
400236dc:	e3560000 	cmp	r6, #0
400236e0:	1a00000e 	bne	40023720 <CyU3PI2cSetConfig+0xc4>
400236e4:	e3a00206 	mov	r0, #1610612736	; 0x60000000
400236e8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400236ec:	e5810400 	str	r0, [r1, #1024]	; 0x400
400236f0:	e1e07741 	mvn	r7, r1, asr #14
400236f4:	ea000004 	b	4002370c <CyU3PI2cSetConfig+0xb0>
400236f8:	e1b00007 	movs	r0, r7
400236fc:	e2477001 	sub	r7, r7, #1
40023700:	1a000001 	bne	4002370c <CyU3PI2cSetConfig+0xb0>
40023704:	e3a06054 	mov	r6, #84	; 0x54
40023708:	ea000003 	b	4002371c <CyU3PI2cSetConfig+0xc0>
4002370c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023710:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023714:	e3100008 	tst	r0, #8
40023718:	0afffff6 	beq	400236f8 <CyU3PI2cSetConfig+0x9c>
4002371c:	e1a00000 	nop			; (mov r0, r0)
40023720:	e3560000 	cmp	r6, #0
40023724:	1a00000b 	bne	40023758 <CyU3PI2cSetConfig+0xfc>
40023728:	e59f7128 	ldr	r7, [pc, #296]	; 40023858 <CyU3PI2cSetConfig+0x1fc>
4002372c:	ea000004 	b	40023744 <CyU3PI2cSetConfig+0xe8>
40023730:	e1b00007 	movs	r0, r7
40023734:	e2477001 	sub	r7, r7, #1
40023738:	1a000001 	bne	40023744 <CyU3PI2cSetConfig+0xe8>
4002373c:	e3a06054 	mov	r6, #84	; 0x54
40023740:	ea000003 	b	40023754 <CyU3PI2cSetConfig+0xf8>
40023744:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023748:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002374c:	e3100002 	tst	r0, #2
40023750:	1afffff6 	bne	40023730 <CyU3PI2cSetConfig+0xd4>
40023754:	e1a00000 	nop			; (mov r0, r0)
40023758:	e3560000 	cmp	r6, #0
4002375c:	0a000002 	beq	4002376c <CyU3PI2cSetConfig+0x110>
40023760:	ebffffac 	bl	40023618 <CyU3PI2cReleaseLock>
40023764:	e1a00006 	mov	r0, r6
40023768:	eaffffc3 	b	4002367c <CyU3PI2cSetConfig+0x20>
4002376c:	e3a00000 	mov	r0, #0
40023770:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023774:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023778:	e3a06000 	mov	r6, #0
4002377c:	e5940000 	ldr	r0, [r4]
40023780:	e59f10d4 	ldr	r1, [pc, #212]	; 4002385c <CyU3PI2cSetConfig+0x200>
40023784:	e1500001 	cmp	r0, r1
40023788:	8a000000 	bhi	40023790 <CyU3PI2cSetConfig+0x134>
4002378c:	e3a06004 	mov	r6, #4
40023790:	e5940004 	ldr	r0, [r4, #4]
40023794:	e3500000 	cmp	r0, #0
40023798:	0a000007 	beq	400237bc <CyU3PI2cSetConfig+0x160>
4002379c:	e3866001 	orr	r6, r6, #1
400237a0:	e3a00001 	mov	r0, #1
400237a4:	e59f10b4 	ldr	r1, [pc, #180]	; 40023860 <CyU3PI2cSetConfig+0x204>
400237a8:	e5810000 	str	r0, [r1]
400237ac:	e1d400bc 	ldrh	r0, [r4, #12]
400237b0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237b4:	e5810414 	str	r0, [r1, #1044]	; 0x414
400237b8:	ea000005 	b	400237d4 <CyU3PI2cSetConfig+0x178>
400237bc:	e3a00000 	mov	r0, #0
400237c0:	e59f1098 	ldr	r1, [pc, #152]	; 40023860 <CyU3PI2cSetConfig+0x204>
400237c4:	e5810000 	str	r0, [r1]
400237c8:	e59f0094 	ldr	r0, [pc, #148]	; 40023864 <CyU3PI2cSetConfig+0x208>
400237cc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237d0:	e5810414 	str	r0, [r1, #1044]	; 0x414
400237d4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400237d8:	e5806400 	str	r6, [r0, #1024]	; 0x400
400237dc:	e59f0084 	ldr	r0, [pc, #132]	; 40023868 <CyU3PI2cSetConfig+0x20c>
400237e0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237e4:	e5810440 	str	r0, [r1, #1088]	; 0x440
400237e8:	e5940008 	ldr	r0, [r4, #8]
400237ec:	e5810410 	str	r0, [r1, #1040]	; 0x410
400237f0:	e3e00000 	mvn	r0, #0
400237f4:	e5810408 	str	r0, [r1, #1032]	; 0x408
400237f8:	e1a00005 	mov	r0, r5
400237fc:	eb0000a8 	bl	40023aa4 <CyU3PRegisterI2cCallBack>
40023800:	e3550000 	cmp	r5, #0
40023804:	0a000003 	beq	40023818 <CyU3PI2cSetConfig+0x1bc>
40023808:	e59f005c 	ldr	r0, [pc, #92]	; 4002386c <CyU3PI2cSetConfig+0x210>
4002380c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023810:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023814:	ea000002 	b	40023824 <CyU3PI2cSetConfig+0x1c8>
40023818:	e3a00000 	mov	r0, #0
4002381c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023820:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023824:	e3a00001 	mov	r0, #1
40023828:	e59f1040 	ldr	r1, [pc, #64]	; 40023870 <CyU3PI2cSetConfig+0x214>
4002382c:	e5810000 	str	r0, [r1]
40023830:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023834:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023838:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002383c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023840:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023844:	ebffff73 	bl	40023618 <CyU3PI2cReleaseLock>
40023848:	e3a00000 	mov	r0, #0
4002384c:	eaffff8a 	b	4002367c <CyU3PI2cSetConfig+0x20>
40023850:	40030efc 	.word	0x40030efc
40023854:	40030f04 	.word	0x40030f04
40023858:	00007fff 	.word	0x00007fff
4002385c:	000186a0 	.word	0x000186a0
40023860:	40030ef4 	.word	0x40030ef4
40023864:	0000ffff 	.word	0x0000ffff
40023868:	00000502 	.word	0x00000502
4002386c:	000001c9 	.word	0x000001c9
40023870:	40030ef8 	.word	0x40030ef8

Disassembly of section i.CyU3PI2cTransmitBytes:

40023874 <CyU3PI2cTransmitBytes>:
40023874:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023878:	e1a04000 	mov	r4, r0
4002387c:	e1a05001 	mov	r5, r1
40023880:	e1a06002 	mov	r6, r2
40023884:	e59f020c 	ldr	r0, [pc, #524]	; 40023a98 <CyU3PI2cTransmitBytes+0x224>
40023888:	e5900000 	ldr	r0, [r0]
4002388c:	e3500000 	cmp	r0, #0
40023890:	1a000002 	bne	400238a0 <CyU3PI2cTransmitBytes+0x2c>
40023894:	e3a00044 	mov	r0, #68	; 0x44
40023898:	e28dd010 	add	sp, sp, #16
4002389c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400238a0:	e59f01f4 	ldr	r0, [pc, #500]	; 40023a9c <CyU3PI2cTransmitBytes+0x228>
400238a4:	e5900000 	ldr	r0, [r0]
400238a8:	e3500000 	cmp	r0, #0
400238ac:	0a000001 	beq	400238b8 <CyU3PI2cTransmitBytes+0x44>
400238b0:	e3a00044 	mov	r0, #68	; 0x44
400238b4:	eafffff7 	b	40023898 <CyU3PI2cTransmitBytes+0x24>
400238b8:	e3550000 	cmp	r5, #0
400238bc:	0a000001 	beq	400238c8 <CyU3PI2cTransmitBytes+0x54>
400238c0:	e3540000 	cmp	r4, #0
400238c4:	1a000001 	bne	400238d0 <CyU3PI2cTransmitBytes+0x5c>
400238c8:	e3a00041 	mov	r0, #65	; 0x41
400238cc:	eafffff1 	b	40023898 <CyU3PI2cTransmitBytes+0x24>
400238d0:	e5d40008 	ldrb	r0, [r4, #8]
400238d4:	e3500000 	cmp	r0, #0
400238d8:	0a000002 	beq	400238e8 <CyU3PI2cTransmitBytes+0x74>
400238dc:	e5d40008 	ldrb	r0, [r4, #8]
400238e0:	e3500008 	cmp	r0, #8
400238e4:	da000001 	ble	400238f0 <CyU3PI2cTransmitBytes+0x7c>
400238e8:	e3a00040 	mov	r0, #64	; 0x40
400238ec:	eaffffe9 	b	40023898 <CyU3PI2cTransmitBytes+0x24>
400238f0:	e3560000 	cmp	r6, #0
400238f4:	1a000001 	bne	40023900 <CyU3PI2cTransmitBytes+0x8c>
400238f8:	e3a00000 	mov	r0, #0
400238fc:	eaffffe5 	b	40023898 <CyU3PI2cTransmitBytes+0x24>
40023900:	ebfffe45 	bl	4002321c <CyU3PI2cGetLock>
40023904:	e1a07000 	mov	r7, r0
40023908:	e3570000 	cmp	r7, #0
4002390c:	0a000001 	beq	40023918 <CyU3PI2cTransmitBytes+0xa4>
40023910:	e1a00007 	mov	r0, r7
40023914:	eaffffdf 	b	40023898 <CyU3PI2cTransmitBytes+0x24>
40023918:	e3a0ad07 	mov	sl, #448	; 0x1c0
4002391c:	e1a00000 	nop			; (mov r0, r0)
40023920:	e3a07000 	mov	r7, #0
40023924:	e5d50000 	ldrb	r0, [r5]
40023928:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002392c:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023930:	e3a02000 	mov	r2, #0
40023934:	e1a01006 	mov	r1, r6
40023938:	e1a00004 	mov	r0, r4
4002393c:	eb00005c 	bl	40023ab4 <MyI2cSendCommand>
40023940:	e1a07000 	mov	r7, r0
40023944:	e3570000 	cmp	r7, #0
40023948:	0a000000 	beq	40023950 <CyU3PI2cTransmitBytes+0xdc>
4002394c:	ea000043 	b	40023a60 <CyU3PI2cTransmitBytes+0x1ec>
40023950:	e3a08001 	mov	r8, #1
40023954:	ea000018 	b	400239bc <CyU3PI2cTransmitBytes+0x148>
40023958:	e59f9140 	ldr	r9, [pc, #320]	; 40023aa0 <CyU3PI2cTransmitBytes+0x22c>
4002395c:	ea000004 	b	40023974 <CyU3PI2cTransmitBytes+0x100>
40023960:	e1b00009 	movs	r0, r9
40023964:	e2499001 	sub	r9, r9, #1
40023968:	1a000001 	bne	40023974 <CyU3PI2cTransmitBytes+0x100>
4002396c:	e3a07055 	mov	r7, #85	; 0x55
40023970:	ea000004 	b	40023988 <CyU3PI2cTransmitBytes+0x114>
40023974:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023978:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002397c:	e38a1010 	orr	r1, sl, #16
40023980:	e1100001 	tst	r0, r1
40023984:	0afffff5 	beq	40023960 <CyU3PI2cTransmitBytes+0xec>
40023988:	e1a00000 	nop			; (mov r0, r0)
4002398c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023990:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023994:	e110000a 	tst	r0, sl
40023998:	0a000000 	beq	400239a0 <CyU3PI2cTransmitBytes+0x12c>
4002399c:	e3a0704a 	mov	r7, #74	; 0x4a
400239a0:	e3570000 	cmp	r7, #0
400239a4:	0a000000 	beq	400239ac <CyU3PI2cTransmitBytes+0x138>
400239a8:	ea000005 	b	400239c4 <CyU3PI2cTransmitBytes+0x150>
400239ac:	e7d50008 	ldrb	r0, [r5, r8]
400239b0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400239b4:	e581042c 	str	r0, [r1, #1068]	; 0x42c
400239b8:	e2888001 	add	r8, r8, #1
400239bc:	e1580006 	cmp	r8, r6
400239c0:	3affffe4 	bcc	40023958 <CyU3PI2cTransmitBytes+0xe4>
400239c4:	e1a00000 	nop			; (mov r0, r0)
400239c8:	e1560008 	cmp	r6, r8
400239cc:	1a000013 	bne	40023a20 <CyU3PI2cTransmitBytes+0x1ac>
400239d0:	e3570000 	cmp	r7, #0
400239d4:	1a000011 	bne	40023a20 <CyU3PI2cTransmitBytes+0x1ac>
400239d8:	e59f90c0 	ldr	r9, [pc, #192]	; 40023aa0 <CyU3PI2cTransmitBytes+0x22c>
400239dc:	ea000004 	b	400239f4 <CyU3PI2cTransmitBytes+0x180>
400239e0:	e1b00009 	movs	r0, r9
400239e4:	e2499001 	sub	r9, r9, #1
400239e8:	1a000001 	bne	400239f4 <CyU3PI2cTransmitBytes+0x180>
400239ec:	e3a07055 	mov	r7, #85	; 0x55
400239f0:	ea000004 	b	40023a08 <CyU3PI2cTransmitBytes+0x194>
400239f4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239f8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400239fc:	e38a1008 	orr	r1, sl, #8
40023a00:	e1100001 	tst	r0, r1
40023a04:	0afffff5 	beq	400239e0 <CyU3PI2cTransmitBytes+0x16c>
40023a08:	e1a00000 	nop			; (mov r0, r0)
40023a0c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a10:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023a14:	e110000a 	tst	r0, sl
40023a18:	0a000000 	beq	40023a20 <CyU3PI2cTransmitBytes+0x1ac>
40023a1c:	e3a0704a 	mov	r7, #74	; 0x4a
40023a20:	e3570000 	cmp	r7, #0
40023a24:	0a000006 	beq	40023a44 <CyU3PI2cTransmitBytes+0x1d0>
40023a28:	e3a00001 	mov	r0, #1
40023a2c:	ebfffd97 	bl	40023090 <CyU3PI2cErrorRecovery>
40023a30:	e3500000 	cmp	r0, #0
40023a34:	0a000002 	beq	40023a44 <CyU3PI2cTransmitBytes+0x1d0>
40023a38:	ebfffef6 	bl	40023618 <CyU3PI2cReleaseLock>
40023a3c:	e3a00054 	mov	r0, #84	; 0x54
40023a40:	eaffff94 	b	40023898 <CyU3PI2cTransmitBytes+0x24>
40023a44:	e3570000 	cmp	r7, #0
40023a48:	0a000004 	beq	40023a60 <CyU3PI2cTransmitBytes+0x1ec>
40023a4c:	e59d000c 	ldr	r0, [sp, #12]
40023a50:	e2401001 	sub	r1, r0, #1
40023a54:	e3500000 	cmp	r0, #0
40023a58:	e58d100c 	str	r1, [sp, #12]
40023a5c:	1affffaf 	bne	40023920 <CyU3PI2cTransmitBytes+0xac>
40023a60:	e1a00000 	nop			; (mov r0, r0)
40023a64:	e357004a 	cmp	r7, #74	; 0x4a
40023a68:	1a000007 	bne	40023a8c <CyU3PI2cTransmitBytes+0x218>
40023a6c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a70:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023a74:	e31b0040 	tst	fp, #64	; 0x40
40023a78:	0a000000 	beq	40023a80 <CyU3PI2cTransmitBytes+0x20c>
40023a7c:	e3a07045 	mov	r7, #69	; 0x45
40023a80:	e31b0080 	tst	fp, #128	; 0x80
40023a84:	0a000000 	beq	40023a8c <CyU3PI2cTransmitBytes+0x218>
40023a88:	e3a07055 	mov	r7, #85	; 0x55
40023a8c:	ebfffee1 	bl	40023618 <CyU3PI2cReleaseLock>
40023a90:	e1a00007 	mov	r0, r7
40023a94:	eaffff7f 	b	40023898 <CyU3PI2cTransmitBytes+0x24>
40023a98:	40030ef8 	.word	0x40030ef8
40023a9c:	40030ef4 	.word	0x40030ef4
40023aa0:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023aa4 <CyU3PRegisterI2cCallBack>:
40023aa4:	e59f1004 	ldr	r1, [pc, #4]	; 40023ab0 <CyU3PRegisterI2cCallBack+0xc>
40023aa8:	e5810000 	str	r0, [r1]
40023aac:	e12fff1e 	bx	lr
40023ab0:	40030f00 	.word	0x40030f00

Disassembly of section i.MyI2cSendCommand:

40023ab4 <MyI2cSendCommand>:
40023ab4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023ab8:	e1a04000 	mov	r4, r0
40023abc:	e1a06001 	mov	r6, r1
40023ac0:	e1a07002 	mov	r7, r2
40023ac4:	e3a00000 	mov	r0, #0
40023ac8:	e59f1108 	ldr	r1, [pc, #264]	; 40023bd8 <MyI2cSendCommand+0x124>
40023acc:	e5810000 	str	r0, [r1]
40023ad0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ad4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023ad8:	e3100202 	tst	r0, #536870912	; 0x20000000
40023adc:	0a000006 	beq	40023afc <MyI2cSendCommand+0x48>
40023ae0:	e3a00000 	mov	r0, #0
40023ae4:	ebfffd69 	bl	40023090 <CyU3PI2cErrorRecovery>
40023ae8:	e1a05000 	mov	r5, r0
40023aec:	e3550000 	cmp	r5, #0
40023af0:	0a000001 	beq	40023afc <MyI2cSendCommand+0x48>
40023af4:	e1a00005 	mov	r0, r5
40023af8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023afc:	e59f80d8 	ldr	r8, [pc, #216]	; 40023bdc <MyI2cSendCommand+0x128>
40023b00:	e1a00000 	nop			; (mov r0, r0)
40023b04:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b08:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b0c:	e3100203 	tst	r0, #805306368	; 0x30000000
40023b10:	0a000002 	beq	40023b20 <MyI2cSendCommand+0x6c>
40023b14:	e1b00008 	movs	r0, r8
40023b18:	e2488001 	sub	r8, r8, #1
40023b1c:	1afffff8 	bne	40023b04 <MyI2cSendCommand+0x50>
40023b20:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b24:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b28:	e3100203 	tst	r0, #805306368	; 0x30000000
40023b2c:	0a000001 	beq	40023b38 <MyI2cSendCommand+0x84>
40023b30:	e3a00045 	mov	r0, #69	; 0x45
40023b34:	eaffffef 	b	40023af8 <MyI2cSendCommand+0x44>
40023b38:	e3a00000 	mov	r0, #0
40023b3c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b40:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023b44:	e5d42008 	ldrb	r2, [r4, #8]
40023b48:	e1a01004 	mov	r1, r4
40023b4c:	e1a0000d 	mov	r0, sp
40023b50:	ebff7f5f 	bl	400038d4 <CyU3PMemCopy>
40023b54:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b58:	e59d0000 	ldr	r0, [sp]
40023b5c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023b60:	e59d0004 	ldr	r0, [sp, #4]
40023b64:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023b68:	e3a00000 	mov	r0, #0
40023b6c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023b70:	e3e00000 	mvn	r0, #0
40023b74:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023b78:	e3a00d07 	mov	r0, #448	; 0x1c0
40023b7c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023b80:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b84:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023b88:	e1d400ba 	ldrh	r0, [r4, #10]
40023b8c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023b90:	e3570000 	cmp	r7, #0
40023b94:	0a000004 	beq	40023bac <MyI2cSendCommand+0xf8>
40023b98:	e5d40008 	ldrb	r0, [r4, #8]
40023b9c:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023ba0:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023ba4:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023ba8:	ea000003 	b	40023bbc <MyI2cSendCommand+0x108>
40023bac:	e5d40008 	ldrb	r0, [r4, #8]
40023bb0:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023bb4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023bb8:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023bbc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023bc0:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40023bc4:	e3800010 	orr	r0, r0, #16
40023bc8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023bcc:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023bd0:	e3a00000 	mov	r0, #0
40023bd4:	eaffffc7 	b	40023af8 <MyI2cSendCommand+0x44>
40023bd8:	40030f04 	.word	0x40030f04
40023bdc:	00007fff 	.word	0x00007fff
