
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f158  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  40012158  40012158  00012158  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  400122a8  400122a8  000122a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  40012340  40012340  00012340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  400127ac  400127ac  000127ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  400127d8  400127d8  000127d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  400128d0  400128d0  000128d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  400128dc  400128dc  000128dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  400128e8  400128e8  000128e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012910  40012910  00012910  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012920  40012920  00012920  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012930  40012930  00012930  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012940  40012940  00012940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012954  40012954  00012954  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012964  40012964  00012964  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012970  40012970  00012970  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012984  40012984  00012984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  400129c0  400129c0  000129c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  400129e8  400129e8  000129e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012a20  40012a20  00012a20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012a54  40012a54  00012a54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012a6c  40012a6c  00012a6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012a84  40012a84  00012a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012aa0  40012aa0  00012aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012b24  40012b24  00012b24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40012bf8  40012bf8  00012bf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40012c40  40012c40  00012c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40012dd0  40012dd0  00012dd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40012e50  40012e50  00012e50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  40012e60  40012e60  00012e60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  40013094  40013094  00013094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  4001318c  4001318c  0001318c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  40013424  40013424  00013424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  4001345c  4001345c  0001345c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  400134b8  400134b8  000134b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  400134d8  400134d8  000134d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013534  40013534  00013534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  40013558  40013558  00013558  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013578  40013578  00013578  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  4001366c  4001366c  0001366c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  400136f8  400136f8  000136f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  400136fc  400136fc  000136fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013720  40013720  00013720  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013834  40013834  00013834  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  400138d4  400138d4  000138d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  4001392c  4001392c  0001392c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  4001397c  4001397c  0001397c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013a78  40013a78  00013a78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013b28  40013b28  00013b28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40013bdc  40013bdc  00013bdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40013c04  40013c04  00013c04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40013c14  40013c14  00013c14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40013db4  40013db4  00013db4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40013ecc  40013ecc  00013ecc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40013f1c  40013f1c  00013f1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  4001408c  4001408c  0001408c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  40014164  40014164  00014164  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  400141e8  400141e8  000141e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  40014200  40014200  00014200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  40014380  40014380  00014380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  400143c0  400143c0  000143c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  400143d0  400143d0  000143d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  400143e0  400143e0  000143e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  400143f0  400143f0  000143f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  40014400  40014400  00014400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  400144d0  400144d0  000144d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  40014700  40014700  00014700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  40014790  40014790  00014790  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014804  40014804  00014804  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  4001482c  4001482c  0001482c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014868  40014868  00014868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  40014890  40014890  00014890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  400148b8  400148b8  000148b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  400148e0  400148e0  000148e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014908  40014908  00014908  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014930  40014930  00014930  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014958  40014958  00014958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014984  40014984  00014984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  400149ec  400149ec  000149ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014a00  40014a00  00014a00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014a54  40014a54  00014a54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014ab4  40014ab4  00014ab4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014b54  40014b54  00014b54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40014c34  40014c34  00014c34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40014d14  40014d14  00014d14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  40014d5c  40014d5c  00014d5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40014e08  40014e08  00014e08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  40014e4c  40014e4c  00014e4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40014ec0  40014ec0  00014ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  40015024  40015024  00015024  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  40015078  40015078  00015078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  400150cc  400150cc  000150cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  400153bc  400153bc  000153bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  4001544c  4001544c  0001544c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  400156b8  400156b8  000156b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015aa0  40015aa0  00015aa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015b50  40015b50  00015b50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40015c24  40015c24  00015c24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40015dd8  40015dd8  00015dd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  4001610c  4001610c  0001610c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  4001622c  4001622c  0001622c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  40016298  40016298  00016298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  40016390  40016390  00016390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  4001646c  4001646c  0001646c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  4001660c  4001660c  0001660c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  400167f8  400167f8  000167f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016a18  40016a18  00016a18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40016c50  40016c50  00016c50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40016d80  40016d80  00016d80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  40016f24  40016f24  00016f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  40017024  40017024  00017024  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  40017140  40017140  00017140  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  40017194  40017194  00017194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  40017554  40017554  00017554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  40017840  40017840  00017840  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017b38  40017b38  00017b38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  4001827c  4001827c  0001827c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  400183d0  400183d0  000183d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  40018500  40018500  00018500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  40018630  40018630  00018630  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  4001876c  4001876c  0001876c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  400189dc  400189dc  000189dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40018c38  40018c38  00018c38  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40018db8  40018db8  00018db8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  40018f40  40018f40  00018f40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40018ff4  40018ff4  00018ff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  400190ac  400190ac  000190ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  40019148  40019148  00019148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  400191e8  400191e8  000191e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  40019554  40019554  00019554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019ae4  40019ae4  00019ae4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a0c4  4001a0c4  0001a0c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001a74c  4001a74c  0001a74c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001a7b0  4001a7b0  0001a7b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001a800  4001a800  0001a800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001a8f8  4001a8f8  0001a8f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001aa10  4001aa10  0001aa10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001aa8c  4001aa8c  0001aa8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001abc0  4001abc0  0001abc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001ad24  4001ad24  0001ad24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001ad74  4001ad74  0001ad74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b024  4001b024  0001b024  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b1a8  4001b1a8  0001b1a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b1e8  4001b1e8  0001b1e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b2a0  4001b2a0  0001b2a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b330  4001b330  0001b330  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001b5b8  4001b5b8  0001b5b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001b5c8  4001b5c8  0001b5c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001b71c  4001b71c  0001b71c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001b89c  4001b89c  0001b89c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bb00  4001bb00  0001bb00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bb10  4001bb10  0001bb10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001bbdc  4001bbdc  0001bbdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001bc9c  4001bc9c  0001bc9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001bcac  4001bcac  0001bcac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c2a4  4001c2a4  0001c2a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c328  4001c328  0001c328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c4f0  4001c4f0  0001c4f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001c614  4001c614  0001c614  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001c75c  4001c75c  0001c75c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001c8d0  4001c8d0  0001c8d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001c99c  4001c99c  0001c99c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001cb64  4001cb64  0001cb64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001cb74  4001cb74  0001cb74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001cb84  4001cb84  0001cb84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001cbd0  4001cbd0  0001cbd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001cc3c  4001cc3c  0001cc3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001ccb8  4001ccb8  0001ccb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001cd6c  4001cd6c  0001cd6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001cf44  4001cf44  0001cf44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d264  4001d264  0001d264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d270  4001d270  0001d270  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d354  4001d354  0001d354  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d52c  4001d52c  0001d52c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001d620  4001d620  0001d620  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001d710  4001d710  0001d710  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001d8e8  4001d8e8  0001d8e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001daac  4001daac  0001daac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001dc00  4001dc00  0001dc00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001df90  4001df90  0001df90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e308  4001e308  0001e308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e380  4001e380  0001e380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e3f8  4001e3f8  0001e3f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e594  4001e594  0001e594  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001e778  4001e778  0001e778  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001e9e8  4001e9e8  0001e9e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001eaa0  4001eaa0  0001eaa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001ead0  4001ead0  0001ead0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001eb70  4001eb70  0001eb70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001ef50  4001ef50  0001ef50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f03c  4001f03c  0001f03c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001f658  4001f658  0001f658  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001f6f4  4001f6f4  0001f6f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001f764  4001f764  0001f764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001f7e0  4001f7e0  0001f7e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001f954  4001f954  0001f954  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001f9c0  4001f9c0  0001f9c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4001fbf4  4001fbf4  0001fbf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4001fc10  4001fc10  0001fc10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  4001fe08  4001fe08  0001fe08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  4002007c  4002007c  0002007c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  40020134  40020134  00020134  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  4002024c  4002024c  0002024c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020648  40020648  00020648  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  40020740  40020740  00020740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  4002084c  4002084c  0002084c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020a18  40020a18  00020a18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020a6c  40020a6c  00020a6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020acc  40020acc  00020acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40020c10  40020c10  00020c10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  40020c60  40020c60  00020c60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  40020e54  40020e54  00020e54  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  40020fe4  40020fe4  00020fe4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  4002117c  4002117c  0002117c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  4002138c  4002138c  0002138c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021b98  40021b98  00021b98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40021be8  40021be8  00021be8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40021cec  40021cec  00021cec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40021e00  40021e00  00021e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40021e0c  40021e0c  00021e0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40021e1c  40021e1c  00021e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40021e30  40021e30  00021e30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  40021e44  40021e44  00021e44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40021e50  40021e50  00021e50  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40021e90  40021e90  00021e90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40021ea8  40021ea8  00021ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40021ec0  40021ec0  00021ec0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  40021efc  40021efc  00021efc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  40021f2c  40021f2c  00021f2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  40021f58  40021f58  00021f58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40021fd8  40021fd8  00021fd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  4002206c  4002206c  0002206c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  400221bc  400221bc  000221bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  40022248  40022248  00022248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022328  40022328  00022328  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  40022338  40022338  00022338  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  4002238c  4002238c  0002238c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022428  40022428  00022428  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  40022494  40022494  00022494  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022500  40022500  00022500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022678  40022678  00022678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  40022794  40022794  00022794  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022958  40022958  00022958  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022a48  40022a48  00022a48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022b20  40022b20  00022b20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40022ba4  40022ba4  00022ba4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40022bb4  40022bb4  00022bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40022bc4  40022bc4  00022bc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40022c20  40022c20  00022c20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40022d08  40022d08  00022d08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40022dc0  40022dc0  00022dc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40022e04  40022e04  00022e04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023020  40023020  00023020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  40023070  40023070  00023070  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  400231fc  400231fc  000231fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  40023258  40023258  00023258  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  4002334c  4002334c  0002334c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  4002343c  4002343c  0002343c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  400235f8  400235f8  000235f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  4002363c  4002363c  0002363c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023854  40023854  00023854  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023a84  40023a84  00023a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023a94  40023a94  00023a94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f08  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  40030f20  40030f20  00028f08  2**5
                  ALLOC
266 .debug_abbrev 00001159  00000000  00000000  00028f08  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d329  00000000  00000000  0002a061  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   00023037  00000000  00000000  000a738a  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca3c1  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d6266  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d629c  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d644c  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042c2  00000000  00000000  000d7055  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000e7d6  00000000  00000000  000db317  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 0000765b  00000000  00000000  000e9aed  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1148  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a72c  00000000  00000000  000f11e8  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 00000568  00000000  00000000  000fb914  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fbe7c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	400315fc 	.word	0x400315fc

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xb>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xb>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x13>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$45+0x20>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$27+0x14>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1b>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20+0x2c>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1b>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x40>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$34+0x1c>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x48>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_frame$41+0x1c>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$48+0x4>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x30>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$55+0xc>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24+0x21>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_frame$62+0x1c>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_pubnames$38+0xf>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$45+0xc>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$66+0xc>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$66>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$73+0x14>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$73+0x8>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$73+0x20>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x9>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x8>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x6>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x2a>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp_.debug_frame$13+0x18>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d3c 	.word	0x40030d3c
     af8:	40030d24 	.word	0x40030d24
     afc:	40031a38 	.word	0x40031a38
     b00:	40031968 	.word	0x40031968
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d38 	.word	0x40030d38
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d40 	.word	0x40030d40

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x7>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp_.debug_frame$27+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$31+0xc>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x23>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$20>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$20>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0xf>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$55>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$55>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$122+0x8>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_pubnames$115+0x20>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_frame$111+0x4>
     ca0:	ea00003a 	b	d90 <__ARM_grp_.debug_pubnames$45+0x7>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_frame$76+0xc>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_pubnames$108+0x13>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_frame$13+0x10>
     cbc:	ea000000 	b	cc4 <__ARM_grp_.debug_frame$62+0x14>
     cc0:	ea000001 	b	ccc <__ARM_grp_.debug_frame$62+0x1c>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$24+0x5>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_frame$76+0x8>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_frame$76+0x8>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp_.debug_pubnames$45+0x3>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp_.debug_pubnames$45+0x3>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x4>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$20>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x4>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$20>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_pubnames$31+0x7>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x23>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_pubnames$31+0x7>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x23>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$80+0x3>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_frame$111>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_pubnames$31+0xf>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$20>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$101+0x18>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$20>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_pubnames$108+0xf>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$20>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_pubnames$31+0xf>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_pubnames$31+0x13>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$20>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_pubnames$10+0x1a>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_frame$20+0x14>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_pubnames$24+0x1>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$31>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_pubnames$31+0x17>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$31+0xc>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$20>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$31+0xc>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$31+0xc>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_pubnames$45+0xf>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_pubnames$59+0x7>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x7>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp_.debug_frame$55+0x4>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0xb>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x33>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_pubnames$31+0x1b>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$20>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp_.debug_frame$62+0x10>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_pubnames$31+0x1b>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_frame$27+0x8>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$20>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$20>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$20>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_pubnames$24+0xc>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_pubnames$45+0x1d>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$20>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$20>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$87+0x8>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_pubnames$31+0x1f>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$20>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$20>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_pubnames$73+0x1d>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$87>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$94+0x10>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_line$15+0x9>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$20>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_frame$104+0x24>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_pubnames$122+0x20>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$20>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_pubnames$136+0xf>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_frame$27>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_frame$27+0x4>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$20>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$90+0xc>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_pubnames$38>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp..debug_pubnames$cyu3descriptor.h$.2_Os2000_h7PQidXgB29_l00000>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$90+0x4>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x1a>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp_.debug_pubnames$10+0x2>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp_.debug_frame$97+0x10>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_pubnames$17+0x16>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$20>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_frame$104+0x24>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x23>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_frame$111+0x1c>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$59>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$66+0x7>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_frame$125+0x4>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_pubnames$80+0x14>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_frame$132+0x10>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x3c>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$139+0x1c>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_line$15+0x5>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$20>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_line$15+0x1>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$20>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030d88 	.word	0x40030d88
    17d0:	40030d68 	.word	0x40030d68
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d74 	.word	0x40030d74
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d70 	.word	0x40030d70
    17e4:	40030da0 	.word	0x40030da0
    17e8:	40030d44 	.word	0x40030d44
    17ec:	40030da8 	.word	0x40030da8
    17f0:	40030db8 	.word	0x40030db8
    17f4:	40030d78 	.word	0x40030d78
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d6c 	.word	0x40030d6c
    1800:	80008000 	.word	0x80008000
    1804:	40030db4 	.word	0x40030db4
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a74 	.word	0x40031a74
    1810:	40031b14 	.word	0x40031b14
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_frame$41+0x4>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_frame$41+0x8>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_frame$41+0xc>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_frame$41+0x10>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_frame$41+0x14>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_frame$41+0x18>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_frame$41+0x1c>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_frame$41+0x20>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_frame$41+0x24>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_frame$41+0x28>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_pubnames$66+0x3>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_pubnames$66+0x7>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_pubnames$66+0xb>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_pubnames$66+0xf>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_pubnames$66+0x13>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_pubnames$66+0x17>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$48>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$48+0x4>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_frame$48+0x8>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	4001210c 	.word	0x4001210c
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_line$29+0x9>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_line$29+0xd>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xd>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xd>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x11>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dc0 	.word	0x40030dc0

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x14>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x14>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315ac 	.word	0x400315ac

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x9>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$80+0x1d>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$80+0x15>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x9>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0xd>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x22>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_pubnames$94+0x1a>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_pubnames$94+0x12>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_frame$20+0x18>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_pubnames$108+0x9>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_pubnames$108+0x1>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x15>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_pubnames$101+0xa>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x11>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$115+0x11>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$115+0x9>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_frame$34+0x8>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x15>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_pubnames$129+0x11>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$129+0x9>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$129+0x1>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x19>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x5>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp_.debug_frame$20+0x14>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp_.debug_frame$20+0xc>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$143+0x1>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000ac70 	.word	0x4000ac70

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__ARM_grp_.debug_frame$27>
    1fb4:	40013424 	.word	0x40013424

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40021ea8 	.word	0x40021ea8

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a404 	.word	0x4000a404

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40021e1c 	.word	0x40021e1c

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <___tx_thread_context_restore_veneer+0x4>
    1fd4:	4000ad60 	.word	0x4000ad60

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40021fd8 	.word	0x40021fd8

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	400141e8 	.word	0x400141e8

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x1>
    1fec:	4000ae78 	.word	0x4000ae78

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000ae9c 	.word	0x4000ae9c

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40021e00 	.word	0x40021e00

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__ARM_grp_.debug_pubnames$171+0x2>
    2004:	4001f954 	.word	0x4001f954

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000ac1c 	.word	0x4000ac1c

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a2c4 	.word	0x4000a2c4

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	40009d38 	.word	0x40009d38

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	40013bdc 	.word	0x40013bdc

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__ARM_grp_.debug_pubnames$178>
    202c:	4001c4f0 	.word	0x4001c4f0

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b1a8 	.word	0x4001b1a8

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	40022500 	.word	0x40022500

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	40020e54 	.word	0x40020e54

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	4001610c 	.word	0x4001610c

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260, //2B: 0
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea003f93 	b	40012e60 <CyU3PDebugPrint>
40003010:	40010af4 	.word	0x40010af4

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb003f8a 	bl	40012e60 <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb003f7d 	bl	40012e60 <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb003f6f 	bl	40012e60 <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb003f62 	bl	40012e60 <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb003f55 	bl	40012e60 <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb003f48 	bl	40012e60 <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb003f3a 	bl	40012e60 <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb003f2d 	bl	40012e60 <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb003f20 	bl	40012e60 <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb003f13 	bl	40012e60 <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb003f06 	bl	40012e60 <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb003ef9 	bl	40012e60 <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb003eec 	bl	40012e60 <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003edf 	bl	40012e60 <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003ed2 	bl	40012e60 <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003ec5 	bl	40012e60 <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003eb8 	bl	40012e60 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003eac 	bl	40012e60 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010b0c 	.word	0x40010b0c
400033b8:	40010b28 	.word	0x40010b28
400033bc:	40010b88 	.word	0x40010b88

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001a6c 	bl	40009da0 <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010be0 	.word	0x40010be0

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb001530 	bl	40008958 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb00152c 	bl	40008958 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003e49 	bl	40012e60 <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010a74 	.word	0x40010a74
40003548:	40010bf4 	.word	0x40010bf4

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea006770 	b	4001d354 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea00140c 	b	40008640 <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	40033244 	.word	0x40033244

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea003fd3 	b	40013578 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb00186e 	bl	4000981c <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb00142f 	bl	40008744 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb00181b 	bl	4000970c <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0018dc 	b	40009a2c <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb00186a 	bl	40009da0 <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb0012ce 	bl	40008744 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb0016ba 	bl	4000970c <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb001887 	bl	40009f18 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb00128b 	bl	40008744 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb00189c 	bl	40009f98 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb00173b 	bl	40009a2c <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb0018c5 	bl	4000a06c <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea00186d 	b	40009f18 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb001273 	bl	40008744 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb001884 	bl	40009f98 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb001886 	bl	4000a06c <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb001861 	bl	4000a06c <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb001210 	bl	40008744 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb001821 	bl	40009f98 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb00184c 	bl	4000a06c <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb0011c4 	bl	40008744 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb0017d5 	bl	40009f98 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb001673 	bl	40009a2c <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb0017fd 	bl	4000a06c <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb0017a6 	bl	40009f18 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001649 	bl	400099ac <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007ddc 	bl	40023854 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001b 	bne	40004158 <SensorRead2B.clone.1+0xbc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003ccc 	bl	40013424 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007cc7 	bl	4002343c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003cbd 	bl	40013424 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f102c 	ldr	r1, [pc, #44]	; 40004174 <SensorRead2B.clone.1+0xd8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003b42 	bl	40012e60 <CyU3PDebugPrint>
40004154:	eafffff4 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004158:	e5d4c001 	ldrb	ip, [r4, #1]
4000415c:	e5d43000 	ldrb	r3, [r4]
40004160:	e59f1010 	ldr	r1, [pc, #16]	; 40004178 <SensorRead2B.clone.1+0xdc>
40004164:	e3a00004 	mov	r0, #4
40004168:	e58dc000 	str	ip, [sp]
4000416c:	eb003b3b 	bl	40012e60 <CyU3PDebugPrint>
40004170:	eaffffde 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004174:	40010ef4 	.word	0x40010ef4
40004178:	40010ed8 	.word	0x40010ed8

4000417c <SensorWrite2B>:
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
4000417c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004180:	e35000a0 	cmp	r0, #160	; 0xa0
40004184:	13500070 	cmpne	r0, #112	; 0x70
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004188:	e24dd014 	sub	sp, sp, #20
4000418c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	03a0e000 	moveq	lr, #0
40004194:	13a0e001 	movne	lr, #1
CyU3PReturnStatus_t SensorWrite2B(
	uint8_t slaveAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t highData, 
	uint8_t lowData) {
40004198:	e1a07001 	mov	r7, r1
4000419c:	e1a06002 	mov	r6, r2
400041a0:	e1a05003 	mov	r5, r3
400041a4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a8:	1a000022 	bne	40004238 <SensorWrite2B+0xbc>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041ac:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041b0:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041b4:	e3a0c003 	mov	ip, #3
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041b8:	e28d100c 	add	r1, sp, #12
400041bc:	e3a02001 	mov	r2, #1
400041c0:	e1a0300e 	mov	r3, lr
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
400041c4:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = lowAddr;
400041c8:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
400041cc:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
400041d4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041d8:	eb007d9d 	bl	40023854 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041dc:	e3500000 	cmp	r0, #0
400041e0:	0a000011 	beq	4000422c <SensorWrite2B+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041e4:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400041e8:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400041ec:	e1a0000d 	mov	r0, sp
400041f0:	e28d100c 	add	r1, sp, #12
400041f4:	e1a0200c 	mov	r2, ip
400041f8:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400041fc:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
40004200:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004204:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004208:	eb007d91 	bl	40023854 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000420c:	e2504000 	subs	r4, r0, #0
40004210:	0a000002 	beq	40004220 <SensorWrite2B+0xa4>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004214:	e1a00004 	mov	r0, r4
40004218:	e28dd014 	add	sp, sp, #20
4000421c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004220:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004224:	eb003c7e 	bl	40013424 <CyU3PBusyWait>
40004228:	eafffff9 	b	40004214 <SensorWrite2B+0x98>
4000422c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004230:	eb003c7b 	bl	40013424 <CyU3PBusyWait>
40004234:	eaffffea 	b	400041e4 <SensorWrite2B+0x68>
	CyU3PI2cPreamble_t preamble;
	uint8_t buf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004238:	e3a00004 	mov	r0, #4
4000423c:	e59f1008 	ldr	r1, [pc, #8]	; 4000424c <SensorWrite2B+0xd0>
40004240:	eb003b06 	bl	40012e60 <CyU3PDebugPrint>
		return 1;
40004244:	e3a04001 	mov	r4, #1
40004248:	eafffff1 	b	40004214 <SensorWrite2B+0x98>
4000424c:	40010f10 	.word	0x40010f10

40004250 <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004250:	e35000a0 	cmp	r0, #160	; 0xa0
40004254:	13500070 	cmpne	r0, #112	; 0x70
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004258:	e92d4010 	push	{r4, lr}
4000425c:	e1a0c000 	mov	ip, r0
40004260:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004264:	03a0e000 	moveq	lr, #0
40004268:	13a0e001 	movne	lr, #1
4000426c:	1a00001a 	bne	400042dc <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
40004270:	e3530040 	cmp	r3, #64	; 0x40
40004274:	8a000013 	bhi	400042c8 <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
40004278:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
4000427c:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004280:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004284:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
40004288:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
4000428c:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
40004290:	e28d0004 	add	r0, sp, #4
40004294:	e59d1018 	ldr	r1, [sp, #24]
40004298:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
4000429c:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
400042a0:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
400042a4:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
400042a8:	eb007d69 	bl	40023854 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042ac:	e2504000 	subs	r4, r0, #0
400042b0:	1a000001 	bne	400042bc <SensorWrite+0x6c>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400042b4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400042b8:	eb003c59 	bl	40013424 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400042bc:	e1a00004 	mov	r0, r4
400042c0:	e28dd010 	add	sp, sp, #16
400042c4:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400042c8:	e3a00004 	mov	r0, #4
400042cc:	e59f101c 	ldr	r1, [pc, #28]	; 400042f0 <SensorWrite+0xa0>
400042d0:	eb003ae2 	bl	40012e60 <CyU3PDebugPrint>
		return 1;
400042d4:	e3a04001 	mov	r4, #1
400042d8:	eafffff7 	b	400042bc <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400042dc:	e3a00004 	mov	r0, #4
400042e0:	e59f100c 	ldr	r1, [pc, #12]	; 400042f4 <SensorWrite+0xa4>
400042e4:	eb003add 	bl	40012e60 <CyU3PDebugPrint>
		return 1;
400042e8:	e3a04001 	mov	r4, #1
400042ec:	eafffff2 	b	400042bc <SensorWrite+0x6c>
400042f0:	40010f34 	.word	0x40010f34
400042f4:	40010f10 	.word	0x40010f10

400042f8 <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400042f8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400042fc:	e35000a1 	cmp	r0, #161	; 0xa1
40004300:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004304:	e24dd01c 	sub	sp, sp, #28
40004308:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000430c:	03a0c000 	moveq	ip, #0
40004310:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004314:	e1a06001 	mov	r6, r1
40004318:	e1a0e002 	mov	lr, r2
4000431c:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004320:	1a000021 	bne	400043ac <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
40004324:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004328:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000432c:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
40004330:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004334:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004338:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000433c:	e1a01005 	mov	r1, r5
40004340:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004344:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
40004348:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
4000434c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
40004350:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004354:	eb007d3e 	bl	40023854 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004358:	e2502000 	subs	r2, r0, #0
4000435c:	1a000017 	bne	400043c0 <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004360:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004364:	eb003c2e 	bl	40013424 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004368:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
4000436c:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004370:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004374:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004378:	e1a01005 	mov	r1, r5
4000437c:	e1a0200e 	mov	r2, lr
40004380:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004384:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004388:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
4000438c:	eb007c2a 	bl	4002343c <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004390:	e2504000 	subs	r4, r0, #0
40004394:	1a000010 	bne	400043dc <SensorRead2B+0xe4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004398:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000439c:	eb003c20 	bl	40013424 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
400043a0:	e1a00004 	mov	r0, r4
400043a4:	e28dd01c 	add	sp, sp, #28
400043a8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400043ac:	e3a00004 	mov	r0, #4
400043b0:	e59f1044 	ldr	r1, [pc, #68]	; 400043fc <SensorRead2B+0x104>
400043b4:	eb003aa9 	bl	40012e60 <CyU3PDebugPrint>
		return 1;
400043b8:	e3a04001 	mov	r4, #1
400043bc:	eafffff7 	b	400043a0 <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043c0:	e5d5c001 	ldrb	ip, [r5, #1]
400043c4:	e5d53000 	ldrb	r3, [r5]
400043c8:	e59f1030 	ldr	r1, [pc, #48]	; 40004400 <SensorRead2B+0x108>
400043cc:	e3a00004 	mov	r0, #4
400043d0:	e58dc000 	str	ip, [sp]
400043d4:	eb003aa1 	bl	40012e60 <CyU3PDebugPrint>
400043d8:	eaffffe2 	b	40004368 <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043dc:	e5d5c001 	ldrb	ip, [r5, #1]
400043e0:	e5d53000 	ldrb	r3, [r5]
400043e4:	e59f1018 	ldr	r1, [pc, #24]	; 40004404 <SensorRead2B+0x10c>
400043e8:	e1a02004 	mov	r2, r4
400043ec:	e3a00004 	mov	r0, #4
400043f0:	e58dc000 	str	ip, [sp]
400043f4:	eb003a99 	bl	40012e60 <CyU3PDebugPrint>
400043f8:	eaffffe8 	b	400043a0 <SensorRead2B+0xa8>
400043fc:	40010f10 	.word	0x40010f10
40004400:	40010ed8 	.word	0x40010ed8
40004404:	40010ef4 	.word	0x40010ef4

40004408 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004408:	e35000a1 	cmp	r0, #161	; 0xa1
4000440c:	13500071 	cmpne	r0, #113	; 0x71
#endif
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004410:	e92d4030 	push	{r4, r5, lr}
40004414:	e1a0c000 	mov	ip, r0
40004418:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000441c:	03a0e000 	moveq	lr, #0
40004420:	13a0e001 	movne	lr, #1
40004424:	1a00001c 	bne	4000449c <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004428:	e3530040 	cmp	r3, #64	; 0x40
4000442c:	8a000015 	bhi	40004488 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004430:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004434:	e1a02003 	mov	r2, r3
40004438:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000443c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004440:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004444:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004448:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000444c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004450:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004454:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
40004458:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
4000445c:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
40004460:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
40004464:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004468:	eb007bf3 	bl	4002343c <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000446c:	e2504000 	subs	r4, r0, #0
40004470:	1a000001 	bne	4000447c <SensorRead+0x74>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004474:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004478:	eb003be9 	bl	40013424 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
4000447c:	e1a00004 	mov	r0, r4
40004480:	e28dd014 	add	sp, sp, #20
40004484:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
40004488:	e3a00004 	mov	r0, #4
4000448c:	e59f101c 	ldr	r1, [pc, #28]	; 400044b0 <SensorRead+0xa8>
40004490:	eb003a72 	bl	40012e60 <CyU3PDebugPrint>
		return 1;
40004494:	e3a04001 	mov	r4, #1
40004498:	eafffff7 	b	4000447c <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
4000449c:	e3a00004 	mov	r0, #4
400044a0:	e59f100c 	ldr	r1, [pc, #12]	; 400044b4 <SensorRead+0xac>
400044a4:	eb003a6d 	bl	40012e60 <CyU3PDebugPrint>
		return 1;
400044a8:	e3a04001 	mov	r4, #1
400044ac:	eafffff2 	b	4000447c <SensorRead+0x74>
400044b0:	40010f34 	.word	0x40010f34
400044b4:	40010f10 	.word	0x40010f10

400044b8 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
400044b8:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
400044bc:	e3a00016 	mov	r0, #22
400044c0:	e3a01000 	mov	r1, #0
400044c4:	eb00795f 	bl	40022a48 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
400044c8:	e2502000 	subs	r2, r0, #0
400044cc:	1a000022 	bne	4000455c <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
400044d0:	e59f1094 	ldr	r1, [pc, #148]	; 4000456c <SensorReset+0xb4>
400044d4:	e3a00004 	mov	r0, #4
400044d8:	eb003a60 	bl	40012e60 <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
400044dc:	eb00130f 	bl	40009120 <_tx_time_get>
400044e0:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
400044e4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400044e8:	eb00111a 	bl	40008958 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
400044ec:	eb00130b 	bl	40009120 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
400044f0:	e1a04804 	lsl	r4, r4, #16
400044f4:	e1a02824 	lsr	r2, r4, #16
400044f8:	e59f1070 	ldr	r1, [pc, #112]	; 40004570 <SensorReset+0xb8>
400044fc:	e1a00800 	lsl	r0, r0, #16
40004500:	e1a03820 	lsr	r3, r0, #16
40004504:	e3a00004 	mov	r0, #4
40004508:	eb003a54 	bl	40012e60 <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000450c:	eb001303 	bl	40009120 <_tx_time_get>
40004510:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004514:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004518:	eb00110e 	bl	40008958 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000451c:	eb0012ff 	bl	40009120 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004520:	e1a02804 	lsl	r2, r4, #16
40004524:	e1a02822 	lsr	r2, r2, #16
40004528:	e59f1040 	ldr	r1, [pc, #64]	; 40004570 <SensorReset+0xb8>
4000452c:	e1a03800 	lsl	r3, r0, #16
40004530:	e1a03823 	lsr	r3, r3, #16
40004534:	e3a00004 	mov	r0, #4
40004538:	eb003a48 	bl	40012e60 <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000453c:	e3a00016 	mov	r0, #22
40004540:	e3a01001 	mov	r1, #1
40004544:	eb00793f 	bl	40022a48 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004548:	e2502000 	subs	r2, r0, #0
4000454c:	1a000002 	bne	4000455c <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004550:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004554:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004558:	ea0010fe 	b	40008958 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
4000455c:	e59f1010 	ldr	r1, [pc, #16]	; 40004574 <SensorReset+0xbc>
40004560:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004564:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004568:	ea003a3c 	b	40012e60 <CyU3PDebugPrint>
4000456c:	40010f7c 	.word	0x40010f7c
40004570:	40010f90 	.word	0x40010f90
40004574:	40010f54 	.word	0x40010f54

40004578 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
40004578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000457c:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
40004580:	e3a00052 	mov	r0, #82	; 0x52
40004584:	e3a01030 	mov	r1, #48	; 0x30
40004588:	e3a020f2 	mov	r2, #242	; 0xf2
4000458c:	e28d3004 	add	r3, sp, #4
40004590:	ebfffec1 	bl	4000409c <SensorRead2B.clone.1>
40004594:	e3500000 	cmp	r0, #0
40004598:	1a000002 	bne	400045a8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
4000459c:	e5dd3004 	ldrb	r3, [sp, #4]
400045a0:	e3530056 	cmp	r3, #86	; 0x56
400045a4:	0a000002 	beq	400045b4 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400045a8:	e3a00004 	mov	r0, #4
400045ac:	e59f1008 	ldr	r1, [pc, #8]	; 400045bc <SensorInit+0x44>
400045b0:	eb003a2a 	bl	40012e60 <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
400045b4:	e28dd00c 	add	sp, sp, #12
400045b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400045bc:	40010fa4 	.word	0x40010fa4

400045c0 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400045c4:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045c8:	e3a00052 	mov	r0, #82	; 0x52
400045cc:	e3a01030 	mov	r1, #48	; 0x30
400045d0:	e3a020f2 	mov	r2, #242	; 0xf2
400045d4:	e28d3004 	add	r3, sp, #4
400045d8:	ebfffeaf 	bl	4000409c <SensorRead2B.clone.1>
400045dc:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
400045e0:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045e4:	1a000002 	bne	400045f4 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045e8:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
400045ec:	e2500056 	subs	r0, r0, #86	; 0x56
400045f0:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
400045f4:	e28dd00c 	add	sp, sp, #12
400045f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400045fc <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
400045fc:	e92d4010 	push	{r4, lr}
40004600:	e24dd008 	sub	sp, sp, #8
40004604:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004608:	e1a02000 	mov	r2, r0
4000460c:	e28d3004 	add	r3, sp, #4
40004610:	e3a00053 	mov	r0, #83	; 0x53
40004614:	ebfffea0 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004618:	e59f1018 	ldr	r1, [pc, #24]	; 40004638 <SensorGetControl+0x3c>
4000461c:	e1a02004 	mov	r2, r4
40004620:	e5dd3004 	ldrb	r3, [sp, #4]
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003a0c 	bl	40012e60 <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000462c:	e5dd0004 	ldrb	r0, [sp, #4]
40004630:	e28dd008 	add	sp, sp, #8
40004634:	e8bd8010 	pop	{r4, pc}
40004638:	40010fc8 	.word	0x40010fc8

4000463c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000463c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004640:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004644:	e24dd014 	sub	sp, sp, #20
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004648:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000464c:	e1a04000 	mov	r4, r0
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
40004650:	e5cd1002 	strb	r1, [sp, #2]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004654:	e5cde000 	strb	lr, [sp]
	preamble.buffer[1] = highAddr;
40004658:	e5cdc001 	strb	ip, [sp, #1]
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
4000465c:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004660:	e3a0c003 	mov	ip, #3
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004664:	e1a05002 	mov	r5, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004668:	e1a0000d 	mov	r0, sp
4000466c:	e28d100c 	add	r1, sp, #12
40004670:	e3a02001 	mov	r2, #1
40004674:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004678:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
4000467c:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;
40004680:	e5cd400c 	strb	r4, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004684:	eb007c72 	bl	40023854 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004688:	e3500000 	cmp	r0, #0
4000468c:	0a000016 	beq	400046ec <SensorSetControl+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004690:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004694:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004698:	e1a0000d 	mov	r0, sp
4000469c:	e28d100c 	add	r1, sp, #12
400046a0:	e1a0200c 	mov	r2, ip
400046a4:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
400046a8:	e5cd500c 	strb	r5, [sp, #12]
	preamble.ctrlMask = 0x0000;
400046ac:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
400046b0:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
400046b4:	eb007c66 	bl	40023854 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400046b8:	e3500000 	cmp	r0, #0
400046bc:	0a000007 	beq	400046e0 <SensorSetControl+0xa4>

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, value);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
400046c0:	e59f1030 	ldr	r1, [pc, #48]	; 400046f8 <SensorSetControl+0xbc>
400046c4:	e1a02004 	mov	r2, r4
400046c8:	e1a03005 	mov	r3, r5
400046cc:	e3a00004 	mov	r0, #4
400046d0:	eb0039e2 	bl	40012e60 <CyU3PDebugPrint>
//#endif
	return 0;
};
400046d4:	e3a00000 	mov	r0, #0
400046d8:	e28dd014 	add	sp, sp, #20
400046dc:	e8bd8030 	pop	{r4, r5, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400046e0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046e4:	eb003b4e 	bl	40013424 <CyU3PBusyWait>
400046e8:	eafffff4 	b	400046c0 <SensorSetControl+0x84>
400046ec:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046f0:	eb003b4b 	bl	40013424 <CyU3PBusyWait>
400046f4:	eaffffe5 	b	40004690 <SensorSetControl+0x54>
400046f8:	40010fe8 	.word	0x40010fe8

400046fc <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
400046fc:	e1a0c000 	mov	ip, r0
40004700:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004704:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004708:	e28d3004 	add	r3, sp, #4
4000470c:	e1a00002 	mov	r0, r2
40004710:	e1a0200c 	mov	r2, ip
40004714:	ebfffe60 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004718:	e5dd0004 	ldrb	r0, [sp, #4]
4000471c:	e28dd00c 	add	sp, sp, #12
40004720:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40004724 <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004724:	e92d4010 	push	{r4, lr}
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004728:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000472c:	e24dd010 	sub	sp, sp, #16
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
40004730:	e5cd3001 	strb	r3, [sp, #1]
	preamble.buffer[2] = lowAddr;
40004734:	e5cd1002 	strb	r1, [sp, #2]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;
40004738:	e5cd000c 	strb	r0, [sp, #12]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
4000473c:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
40004740:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004744:	e3a0c003 	mov	ip, #3
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004748:	e1a04002 	mov	r4, r2
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
4000474c:	e1a0000d 	mov	r0, sp
40004750:	e28d100c 	add	r1, sp, #12
40004754:	e3a02001 	mov	r2, #1
40004758:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = highAddr;
	preamble.buffer[2] = lowAddr;
	preamble.ctrlMask = 0x0000;
4000475c:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
40004760:	e5cdc008 	strb	ip, [sp, #8]
	buf[0] = highData;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004764:	eb007c3a 	bl	40023854 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004768:	e3500000 	cmp	r0, #0
4000476c:	0a000011 	beq	400047b8 <SensorSetIrisControl+0x94>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004770:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004774:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004778:	e1a0000d 	mov	r0, sp
4000477c:	e28d100c 	add	r1, sp, #12
40004780:	e1a0200c 	mov	r2, ip
40004784:	e3a03000 	mov	r3, #0
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	buf[0] = lowData;								/****************** data block *****************************************/
40004788:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0000;
4000478c:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
40004790:	e5cdc008 	strb	ip, [sp, #8]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0);
40004794:	eb007c2e 	bl	40023854 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004798:	e3500000 	cmp	r0, #0
4000479c:	0a000002 	beq	400047ac <SensorSetIrisControl+0x88>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, value);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
400047a0:	e3a00000 	mov	r0, #0
400047a4:	e28dd010 	add	sp, sp, #16
400047a8:	e8bd8010 	pop	{r4, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400047ac:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047b0:	eb003b1b 	bl	40013424 <CyU3PBusyWait>
400047b4:	eafffff9 	b	400047a0 <SensorSetIrisControl+0x7c>
400047b8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047bc:	eb003b18 	bl	40013424 <CyU3PBusyWait>
400047c0:	eaffffea 	b	40004770 <SensorSetIrisControl+0x4c>

400047c4 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047c4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047c8:	e59f2200 	ldr	r2, [pc, #512]	; 400049d0 <I2cAppThread_Entry+0x20c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047cc:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047d0:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047d4:	e3a0effa 	mov	lr, #1000	; 0x3e8
400047d8:	e284c02c 	add	ip, r4, #44	; 0x2c
400047dc:	e3a0300b 	mov	r3, #11
400047e0:	e1a01004 	mov	r1, r4
400047e4:	e59f01e8 	ldr	r0, [pc, #488]	; 400049d4 <I2cAppThread_Entry+0x210>
400047e8:	e58de000 	str	lr, [sp]
400047ec:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047f0:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047f4:	e58d4004 	str	r4, [sp, #4]
400047f8:	e58d4008 	str	r4, [sp, #8]
400047fc:	eb001855 	bl	4000a958 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
40004800:	eb001246 	bl	40009120 <_tx_time_get>
40004804:	e59f11cc 	ldr	r1, [pc, #460]	; 400049d8 <I2cAppThread_Entry+0x214>
40004808:	e59f51cc 	ldr	r5, [pc, #460]	; 400049dc <I2cAppThread_Entry+0x218>
4000480c:	e1a02000 	mov	r2, r0
40004810:	e3a00004 	mov	r0, #4
40004814:	eb003991 	bl	40012e60 <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004818:	e3a00032 	mov	r0, #50	; 0x32
4000481c:	eb00104d 	bl	40008958 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004820:	e59f01ac 	ldr	r0, [pc, #428]	; 400049d4 <I2cAppThread_Entry+0x210>
40004824:	eb001819 	bl	4000a890 <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004828:	ea000000 	b	40004830 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
4000482c:	eb0017fa 	bl	4000a81c <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004830:	e5d5201a 	ldrb	r2, [r5, #26]
40004834:	e3520000 	cmp	r2, #0
40004838:	0afffffb 	beq	4000482c <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
4000483c:	e59f0198 	ldr	r0, [pc, #408]	; 400049dc <I2cAppThread_Entry+0x218>
40004840:	e59f1198 	ldr	r1, [pc, #408]	; 400049e0 <I2cAppThread_Entry+0x21c>
40004844:	e5903010 	ldr	r3, [r0, #16]
40004848:	e3a00004 	mov	r0, #4
4000484c:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004850:	eb003982 	bl	40012e60 <CyU3PDebugPrint>
40004854:	e59f7188 	ldr	r7, [pc, #392]	; 400049e4 <I2cAppThread_Entry+0x220>
40004858:	e59fb188 	ldr	fp, [pc, #392]	; 400049e8 <I2cAppThread_Entry+0x224>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
4000485c:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004860:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
40004864:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004868:	e3a02003 	mov	r2, #3
4000486c:	e28d3014 	add	r3, sp, #20
40004870:	e3a01020 	mov	r1, #32
40004874:	e59f0170 	ldr	r0, [pc, #368]	; 400049ec <I2cAppThread_Entry+0x228>
40004878:	e58d6000 	str	r6, [sp]
4000487c:	eb0014fd 	bl	40009c78 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004880:	e1a01006 	mov	r1, r6
40004884:	e597001c 	ldr	r0, [r7, #28]
40004888:	eb0015c2 	bl	40009f98 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
4000488c:	e597001c 	ldr	r0, [r7, #28]
40004890:	eb0015f5 	bl	4000a06c <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004894:	e595001c 	ldr	r0, [r5, #28]
40004898:	e1a01006 	mov	r1, r6
4000489c:	eb0015bd 	bl	40009f98 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
400048a0:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048a4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400048a8:	e3520000 	cmp	r2, #0
400048ac:	1a000008 	bne	400048d4 <I2cAppThread_Entry+0x110>
400048b0:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400048b4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400048b8:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048bc:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
400048c0:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048c4:	e353003f 	cmp	r3, #63	; 0x3f
400048c8:	93520000 	cmpls	r2, #0
400048cc:	0afffff8 	beq	400048b4 <I2cAppThread_Entry+0xf0>
400048d0:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
400048d4:	e3520000 	cmp	r2, #0
400048d8:	0a000029 	beq	40004984 <I2cAppThread_Entry+0x1c0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048dc:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048e0:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048e4:	e083e083 	add	lr, r3, r3, lsl #1
400048e8:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048ec:	e242c020 	sub	ip, r2, #32
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048f0:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
400048f4:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
400048f8:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
400048fc:	e1daa0b8 	ldrh	sl, [sl, #8]
					switch(lcCmdDes->CmdID){
40004900:	e35c0003 	cmp	ip, #3
40004904:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004908:	ea00001a 	b	40004978 <I2cAppThread_Entry+0x1b4>
4000490c:	4000491c 	.word	0x4000491c
40004910:	4000491c 	.word	0x4000491c
40004914:	40004968 	.word	0x40004968
40004918:	40004968 	.word	0x40004968
						case 0x20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 0x21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
4000491c:	e3a03052 	mov	r3, #82	; 0x52
40004920:	ebffff7f 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
40004924:	e3a01f7d 	mov	r1, #500	; 0x1f4
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
							break;
					}
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004928:	e3a02000 	mov	r2, #0
4000492c:	e59f00a0 	ldr	r0, [pc, #160]	; 400049d4 <I2cAppThread_Entry+0x210>
40004930:	eb0017e6 	bl	4000a8d0 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004934:	e59f0098 	ldr	r0, [pc, #152]	; 400049d4 <I2cAppThread_Entry+0x210>
40004938:	eb0017d4 	bl	4000a890 <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
4000493c:	e5d40001 	ldrb	r0, [r4, #1]
40004940:	e5d41002 	ldrb	r1, [r4, #2]
40004944:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004948:	12800001 	addne	r0, r0, #1
4000494c:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004950:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004954:	0a000010 	beq	4000499c <I2cAppThread_Entry+0x1d8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004958:	e595001c 	ldr	r0, [r5, #28]
4000495c:	eb0015c2 	bl	4000a06c <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004960:	eb0017ad 	bl	4000a81c <_txe_thread_relinquish>
		}
40004964:	eaffffbf 	b	40004868 <I2cAppThread_Entry+0xa4>
						case 0x22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 0x23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//opt Zoom
40004968:	e3a03082 	mov	r3, #130	; 0x82
4000496c:	ebffff6c 	bl	40004724 <SensorSetIrisControl>
							delaytime = 300;
							break;
40004970:	e3a01f4b 	mov	r1, #300	; 0x12c
40004974:	eaffffeb 	b	40004928 <I2cAppThread_Entry+0x164>
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004978:	ebffff2f 	bl	4000463c <SensorSetControl>
4000497c:	e1a0100a 	mov	r1, sl
							break;
40004980:	eaffffe8 	b	40004928 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004984:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004988:	e59f0044 	ldr	r0, [pc, #68]	; 400049d4 <I2cAppThread_Entry+0x210>
4000498c:	eb0017cf 	bl	4000a8d0 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
40004990:	e59f003c 	ldr	r0, [pc, #60]	; 400049d4 <I2cAppThread_Entry+0x210>
40004994:	eb0017bd 	bl	4000a890 <_txe_timer_activate>
40004998:	eaffffee 	b	40004958 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
4000499c:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
400049a0:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049a4:	e35c0023 	cmp	ip, #35	; 0x23
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049a8:	824cc020 	subhi	ip, ip, #32
400049ac:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049b0:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b4:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049b8:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049bc:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049c0:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
400049c4:	e5944034 	ldr	r4, [r4, #52]	; 0x34
400049c8:	e5854010 	str	r4, [r5, #16]
400049cc:	eaffffe1 	b	40004958 <I2cAppThread_Entry+0x194>
400049d0:	400049f0 	.word	0x400049f0
400049d4:	40032fc4 	.word	0x40032fc4
400049d8:	40011054 	.word	0x40011054
400049dc:	40032ec4 	.word	0x40032ec4
400049e0:	40011068 	.word	0x40011068
400049e4:	40033110 	.word	0x40033110
400049e8:	40030000 	.word	0x40030000
400049ec:	40030f90 	.word	0x40030f90

400049f0 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
400049f0:	e59f0008 	ldr	r0, [pc, #8]	; 40004a00 <I2CCmdCb+0x10>
400049f4:	e3a01020 	mov	r1, #32
400049f8:	e3a02000 	mov	r2, #0
400049fc:	ea0014cd 	b	40009d38 <_txe_event_flags_set>
40004a00:	40030f90 	.word	0x40030f90

40004a04 <CyFxUvcApplnDmaCallback>:
        )
{
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a04:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004a08:	e92d4030 	push	{r4, r5, lr}
40004a0c:	e1a04002 	mov	r4, r2
40004a10:	e24dd00c 	sub	sp, sp, #12
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a14:	0a00000b 	beq	40004a48 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
                        status, input->buffer_p.count, prodCount - consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004a18:	e3510010 	cmp	r1, #16
40004a1c:	1a000007 	bne	40004a40 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004a20:	e59f3104 	ldr	r3, [pc, #260]	; 40004b2c <CyFxUvcApplnDmaCallback+0x128>
        streamingStarted = CyTrue;
40004a24:	e3a02001 	mov	r2, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a28:	e1d3c3b0 	ldrh	ip, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
40004a2c:	e5832034 	str	r2, [r3, #52]	; 0x34
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a30:	e08c0002 	add	r0, ip, r2
40004a34:	e1a01800 	lsl	r1, r0, #16
40004a38:	e1a02821 	lsr	r2, r1, #16
40004a3c:	e1c323b0 	strh	r2, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
    }
}
40004a40:	e28dd00c 	add	sp, sp, #12
40004a44:	e8bd8030 	pop	{r4, r5, pc}
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004a48:	e1d220b4 	ldrh	r2, [r2, #4]
40004a4c:	e59f30dc 	ldr	r3, [pc, #220]	; 40004b30 <CyFxUvcApplnDmaCallback+0x12c>
40004a50:	e1520003 	cmp	r2, r3
40004a54:	0a000029 	beq	40004b00 <CyFxUvcApplnDmaCallback+0xfc>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004a58:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004a5c:	e59f10d0 	ldr	r1, [pc, #208]	; 40004b34 <CyFxUvcApplnDmaCallback+0x130>
40004a60:	e245000c 	sub	r0, r5, #12
40004a64:	e3a0200c 	mov	r2, #12
40004a68:	ebfffb99 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a6c:	e555c00b 	ldrb	ip, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a70:	e59f30b4 	ldr	r3, [pc, #180]	; 40004b2c <CyFxUvcApplnDmaCallback+0x128>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a74:	e38c1002 	orr	r1, ip, #2
40004a78:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a7c:	e1d302ba 	ldrh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a80:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a84:	e2802001 	add	r2, r0, #1
40004a88:	e1c322ba 	strh	r2, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a8c:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a90:	e1d3e2be 	ldrh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004a94:	e281100c 	add	r1, r1, #12
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a98:	e28ec001 	add	ip, lr, #1
40004a9c:	e1a0080c 	lsl	r0, ip, #16
40004aa0:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004aa4:	e1a02801 	lsl	r2, r1, #16
40004aa8:	e1a01822 	lsr	r1, r2, #16
40004aac:	e59f0084 	ldr	r0, [pc, #132]	; 40004b38 <CyFxUvcApplnDmaCallback+0x134>
40004ab0:	e3a02000 	mov	r2, #0
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ab4:	e1c3e2be 	strh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004ab8:	eb0049b5 	bl	40017194 <CyU3PDmaMultiChannelCommitBuffer>
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004abc:	e59f1068 	ldr	r1, [pc, #104]	; 40004b2c <CyFxUvcApplnDmaCallback+0x128>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
40004ac0:	e2502000 	subs	r2, r0, #0
40004ac4:	0affffdd 	beq	40004a40 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004ac8:	e1d1c2be 	ldrh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004acc:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
            {
                prodCount--;
40004ad0:	e24c0001 	sub	r0, ip, #1
40004ad4:	e1a0e800 	lsl	lr, r0, #16
40004ad8:	e1a0c82e 	lsr	ip, lr, #16
40004adc:	e1c1c2be 	strh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004ae0:	e1d1e2be 	ldrh	lr, [r1, #46]	; 0x2e
40004ae4:	e1d103b0 	ldrh	r0, [r1, #48]	; 0x30
40004ae8:	e59f104c 	ldr	r1, [pc, #76]	; 40004b3c <CyFxUvcApplnDmaCallback+0x138>
40004aec:	e060c00e 	rsb	ip, r0, lr
40004af0:	e3a00004 	mov	r0, #4
40004af4:	e58dc000 	str	ip, [sp]
40004af8:	eb0038d8 	bl	40012e60 <CyU3PDebugPrint>
40004afc:	eaffffcf 	b	40004a40 <CyFxUvcApplnDmaCallback+0x3c>
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004b00:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004b04:	e59f1028 	ldr	r1, [pc, #40]	; 40004b34 <CyFxUvcApplnDmaCallback+0x130>
40004b08:	e24e000c 	sub	r0, lr, #12
40004b0c:	e3a0200c 	mov	r2, #12
40004b10:	ebfffb6f 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004b14:	e59f3010 	ldr	r3, [pc, #16]	; 40004b2c <CyFxUvcApplnDmaCallback+0x128>
40004b18:	e1d410b4 	ldrh	r1, [r4, #4]
40004b1c:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004b20:	e28c0001 	add	r0, ip, #1
40004b24:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004b28:	eaffffd8 	b	40004a90 <CyFxUvcApplnDmaCallback+0x8c>
40004b2c:	40030f90 	.word	0x40030f90
40004b30:	00003ff0 	.word	0x00003ff0
40004b34:	40030480 	.word	0x40030480
40004b38:	40032ee4 	.word	0x40032ee4
40004b3c:	4001108c 	.word	0x4001108c

40004b40 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004b40:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004b44:	e92d4070 	push	{r4, r5, r6, lr}
40004b48:	e1a03001 	mov	r3, r1
40004b4c:	e24dd010 	sub	sp, sp, #16
40004b50:	e1a04000 	mov	r4, r0
    switch (evtype)
40004b54:	0a000036 	beq	40004c34 <CyFxUVCApplnUSBEventCB+0xf4>
40004b58:	e3500004 	cmp	r0, #4
40004b5c:	0a00001f 	beq	40004be0 <CyFxUVCApplnUSBEventCB+0xa0>
40004b60:	e3500001 	cmp	r0, #1
40004b64:	0a000001 	beq	40004b70 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004b68:	e28dd010 	add	sp, sp, #16
40004b6c:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b70:	e59f5128 	ldr	r5, [pc, #296]	; 40004ca0 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004b74:	e1a02000 	mov	r2, r0
40004b78:	e59f1124 	ldr	r1, [pc, #292]	; 40004ca4 <CyFxUVCApplnUSBEventCB+0x164>
40004b7c:	e3a00004 	mov	r0, #4
40004b80:	eb0038b6 	bl	40012e60 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004b84:	e1a00004 	mov	r0, r4
40004b88:	eb0059c4 	bl	4001b2a0 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004b8c:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004b90:	e1a01004 	mov	r1, r4
40004b94:	e1a00005 	mov	r0, r5
40004b98:	e3a02002 	mov	r2, #2
40004b9c:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004ba0:	e585c038 	str	ip, [r5, #56]	; 0x38
            isUsbConnected = CyFalse;
40004ba4:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004ba8:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004bac:	e58dc000 	str	ip, [sp]
40004bb0:	eb001430 	bl	40009c78 <_txe_event_flags_get>
40004bb4:	e2504000 	subs	r4, r0, #0
40004bb8:	1affffea 	bne	40004b68 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004bbc:	e3e01001 	mvn	r1, #1
40004bc0:	e3a02002 	mov	r2, #2
40004bc4:	e1a00005 	mov	r0, r5
40004bc8:	eb00145a 	bl	40009d38 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004bcc:	e1a00005 	mov	r0, r5
40004bd0:	e3a01002 	mov	r1, #2
40004bd4:	e1a02004 	mov	r2, r4
40004bd8:	eb001456 	bl	40009d38 <_txe_event_flags_set>
40004bdc:	eaffffe1 	b	40004b68 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004be0:	e59f50b8 	ldr	r5, [pc, #184]	; 40004ca0 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004be4:	e59f10bc 	ldr	r1, [pc, #188]	; 40004ca8 <CyFxUVCApplnUSBEventCB+0x168>
40004be8:	e1a02000 	mov	r2, r0
40004bec:	eb00389b 	bl	40012e60 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004bf0:	e3a00001 	mov	r0, #1
40004bf4:	eb0059a9 	bl	4001b2a0 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004bf8:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004bfc:	e3a01001 	mov	r1, #1
40004c00:	e3a02002 	mov	r2, #2
40004c04:	e1a00005 	mov	r0, r5
40004c08:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c0c:	e585c038 	str	ip, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c10:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c14:	e58dc000 	str	ip, [sp]
40004c18:	eb001416 	bl	40009c78 <_txe_event_flags_get>
40004c1c:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c20:	01a00005 	moveq	r0, r5
40004c24:	03e01001 	mvneq	r1, #1
40004c28:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c2c:	1affffcd 	bne	40004b68 <CyFxUVCApplnUSBEventCB+0x28>
40004c30:	eaffffe4 	b	40004bc8 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c34:	e59f5064 	ldr	r5, [pc, #100]	; 40004ca0 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004c38:	e1a02000 	mov	r2, r0
40004c3c:	e59f1068 	ldr	r1, [pc, #104]	; 40004cac <CyFxUVCApplnUSBEventCB+0x16c>
40004c40:	e3a00004 	mov	r0, #4
40004c44:	eb003885 	bl	40012e60 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c48:	e3a00001 	mov	r0, #1
40004c4c:	eb005993 	bl	4001b2a0 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c50:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c54:	e1a00005 	mov	r0, r5
40004c58:	e3a01001 	mov	r1, #1
40004c5c:	e1a02004 	mov	r2, r4
40004c60:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c64:	e5856038 	str	r6, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c68:	e5856034 	str	r6, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c6c:	e58d6000 	str	r6, [sp]
40004c70:	eb001400 	bl	40009c78 <_txe_event_flags_get>
40004c74:	e2506000 	subs	r6, r0, #0
40004c78:	1affffba 	bne	40004b68 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c7c:	e1a02004 	mov	r2, r4
40004c80:	e1a00005 	mov	r0, r5
40004c84:	e3e01001 	mvn	r1, #1
40004c88:	eb00142a 	bl	40009d38 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004c8c:	e1a00005 	mov	r0, r5
40004c90:	e1a01004 	mov	r1, r4
40004c94:	e1a02006 	mov	r2, r6
40004c98:	eb001426 	bl	40009d38 <_txe_event_flags_set>
40004c9c:	eaffffb1 	b	40004b68 <CyFxUVCApplnUSBEventCB+0x28>
40004ca0:	40030f90 	.word	0x40030f90
40004ca4:	40011118 	.word	0x40011118
40004ca8:	400110d4 	.word	0x400110d4
40004cac:	400110f4 	.word	0x400110f4

40004cb0 <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cb0:	e59f32c0 	ldr	r3, [pc, #704]	; 40004f78 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004cb4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cb8:	e59fc2bc 	ldr	ip, [pc, #700]	; 40004f7c <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cbc:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cc0:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cc4:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cc8:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004ccc:	e59f22ac 	ldr	r2, [pc, #684]	; 40004f80 <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cd0:	e59f02ac 	ldr	r0, [pc, #684]	; 40004f84 <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cd4:	e59f32ac 	ldr	r3, [pc, #684]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cd8:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cdc:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ce0:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004ce4:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004ce8:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004cec:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cf0:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cf4:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cf8:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cfc:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d00:	0a00004f 	beq	40004e44 <CyFxUVCApplnUSBSetupCB+0x194>
40004d04:	9a000006 	bls	40004d24 <CyFxUVCApplnUSBSetupCB+0x74>
40004d08:	e3540021 	cmp	r4, #33	; 0x21
40004d0c:	0a00003a 	beq	40004dfc <CyFxUVCApplnUSBSetupCB+0x14c>
40004d10:	e35400a1 	cmp	r4, #161	; 0xa1
40004d14:	0a000038 	beq	40004dfc <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004d18:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004d1c:	e28dd010 	add	sp, sp, #16
40004d20:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d24:	e3540001 	cmp	r4, #1
40004d28:	1afffffa 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004d2c:	e358000b 	cmp	r8, #11
40004d30:	1afffff8 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004d34:	e3550001 	cmp	r5, #1
40004d38:	1afffff6 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x68>
40004d3c:	e3570000 	cmp	r7, #0
40004d40:	1afffff4 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d44:	e59f4240 	ldr	r4, [pc, #576]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004d48:	e59f1240 	ldr	r1, [pc, #576]	; 40004f90 <CyFxUVCApplnUSBSetupCB+0x2e0>
40004d4c:	e3a00004 	mov	r0, #4
40004d50:	eb003842 	bl	40012e60 <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004d54:	e1a00005 	mov	r0, r5
40004d58:	eb005950 	bl	4001b2a0 <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d5c:	e1a01005 	mov	r1, r5
40004d60:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d64:	e5847038 	str	r7, [r4, #56]	; 0x38
                    streamingStarted = CyFalse;
40004d68:	e5847034 	str	r7, [r4, #52]	; 0x34
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d6c:	eb0062dd 	bl	4001d8e8 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d70:	e3a00064 	mov	r0, #100	; 0x64
40004d74:	eb0039aa 	bl	40013424 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004d78:	e59f0214 	ldr	r0, [pc, #532]	; 40004f94 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004d7c:	eb004d3e 	bl	4001827c <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004d80:	e3a00083 	mov	r0, #131	; 0x83
40004d84:	eb005ed1 	bl	4001c8d0 <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004d88:	e1a01007 	mov	r1, r7
40004d8c:	e3a00083 	mov	r0, #131	; 0x83
40004d90:	eb0062d4 	bl	4001d8e8 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d94:	e3a00064 	mov	r0, #100	; 0x64
40004d98:	eb0039a1 	bl	40013424 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004d9c:	e1a01007 	mov	r1, r7
40004da0:	e1a02005 	mov	r2, r5
40004da4:	e3a00083 	mov	r0, #131	; 0x83
40004da8:	eb006394 	bl	4001dc00 <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004dac:	eb005dcf 	bl	4001c4f0 <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004db0:	e5845040 	str	r5, [r4, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004db4:	e1a00004 	mov	r0, r4
40004db8:	e1a01005 	mov	r1, r5
40004dbc:	e3a02002 	mov	r2, #2
40004dc0:	e28d300c 	add	r3, sp, #12
40004dc4:	e58d7000 	str	r7, [sp]
40004dc8:	eb0013aa 	bl	40009c78 <_txe_event_flags_get>
40004dcc:	e2506000 	subs	r6, r0, #0
40004dd0:	1a00002e 	bne	40004e90 <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004dd4:	e3e01001 	mvn	r1, #1
40004dd8:	e3a02002 	mov	r2, #2
40004ddc:	e1a00004 	mov	r0, r4
40004de0:	eb0013d4 	bl	40009d38 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004de4:	e1a00004 	mov	r0, r4
40004de8:	e3a01002 	mov	r1, #2
40004dec:	e1a02006 	mov	r2, r6
40004df0:	eb0013d0 	bl	40009d38 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004df4:	e1a00005 	mov	r0, r5
40004df8:	eaffffc7 	b	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004dfc:	e21550ff 	ands	r5, r5, #255	; 0xff
40004e00:	1a00001a 	bne	40004e70 <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004e04:	e1a02005 	mov	r2, r5
40004e08:	e59f017c 	ldr	r0, [pc, #380]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e0c:	e3a01004 	mov	r1, #4
40004e10:	eb0013c8 	bl	40009d38 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e14:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e18:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e1c:	0affffbe 	beq	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004e20:	e59f1170 	ldr	r1, [pc, #368]	; 40004f98 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004e24:	e3a00004 	mov	r0, #4
40004e28:	eb00380c 	bl	40012e60 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004e2c:	e1a00005 	mov	r0, r5
40004e30:	e3a01001 	mov	r1, #1
40004e34:	e1a02005 	mov	r2, r5
40004e38:	eb006370 	bl	4001dc00 <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e3c:	e3a00001 	mov	r0, #1
40004e40:	eaffffb5 	b	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004e44:	e3580001 	cmp	r8, #1
40004e48:	1affffb2 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004e4c:	e3550083 	cmp	r5, #131	; 0x83
40004e50:	1affffb0 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004e54:	e59f7130 	ldr	r7, [pc, #304]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e58:	e5976034 	ldr	r6, [r7, #52]	; 0x34
40004e5c:	e3560001 	cmp	r6, #1
40004e60:	0a000015 	beq	40004ebc <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004e64:	eb005da1 	bl	4001c4f0 <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004e68:	e1a00008 	mov	r0, r8
40004e6c:	eaffffaa 	b	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e70:	e3550001 	cmp	r5, #1
40004e74:	1affffa7 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004e78:	e3a02000 	mov	r2, #0
40004e7c:	e59f0108 	ldr	r0, [pc, #264]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e80:	e3a01008 	mov	r1, #8
40004e84:	eb0013ab 	bl	40009d38 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e88:	e2502000 	subs	r2, r0, #0
40004e8c:	1a000001 	bne	40004e98 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004e90:	e1a00005 	mov	r0, r5
40004e94:	eaffffa0 	b	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004e98:	e59f10fc 	ldr	r1, [pc, #252]	; 40004f9c <CyFxUVCApplnUSBSetupCB+0x2ec>
40004e9c:	e3a00004 	mov	r0, #4
40004ea0:	eb0037ee 	bl	40012e60 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ea4:	e3a00000 	mov	r0, #0
40004ea8:	e1a01005 	mov	r1, r5
40004eac:	e1a02000 	mov	r2, r0
40004eb0:	eb006352 	bl	4001dc00 <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004eb4:	e1a00005 	mov	r0, r5
40004eb8:	eaffff97 	b	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40004ebc:	e59f10dc 	ldr	r1, [pc, #220]	; 40004fa0 <CyFxUVCApplnUSBSetupCB+0x2f0>
40004ec0:	e3a00004 	mov	r0, #4
40004ec4:	eb0037e5 	bl	40012e60 <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ec8:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40004ecc:	e1a00006 	mov	r0, r6
40004ed0:	eb0058f2 	bl	4001b2a0 <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ed4:	e1a01006 	mov	r1, r6
40004ed8:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004edc:	e5878038 	str	r8, [r7, #56]	; 0x38
                        streamingStarted = CyFalse;
40004ee0:	e5878034 	str	r8, [r7, #52]	; 0x34

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ee4:	eb00627f 	bl	4001d8e8 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004ee8:	e3a00064 	mov	r0, #100	; 0x64
40004eec:	eb00394c 	bl	40013424 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004ef0:	e59f009c 	ldr	r0, [pc, #156]	; 40004f94 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004ef4:	eb004ce0 	bl	4001827c <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004ef8:	e1a00005 	mov	r0, r5
40004efc:	eb005e73 	bl	4001c8d0 <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004f00:	e1a01008 	mov	r1, r8
40004f04:	e1a00005 	mov	r0, r5
40004f08:	eb006276 	bl	4001d8e8 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004f0c:	e3a00064 	mov	r0, #100	; 0x64
40004f10:	eb003943 	bl	40013424 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f14:	e1a01008 	mov	r1, r8
40004f18:	e1a02006 	mov	r2, r6
40004f1c:	e1a00005 	mov	r0, r5
40004f20:	eb006336 	bl	4001dc00 <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
40004f24:	eb005d71 	bl	4001c4f0 <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40004f28:	e5876040 	str	r6, [r7, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f2c:	e1a00007 	mov	r0, r7
40004f30:	e1a01006 	mov	r1, r6
40004f34:	e1a02004 	mov	r2, r4
40004f38:	e28d300c 	add	r3, sp, #12
40004f3c:	e58d8000 	str	r8, [sp]
40004f40:	eb00134c 	bl	40009c78 <_txe_event_flags_get>
40004f44:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f48:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f4c:	1affff72 	bne	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f50:	e3e01001 	mvn	r1, #1
40004f54:	e1a02004 	mov	r2, r4
40004f58:	e1a00007 	mov	r0, r7
40004f5c:	eb001375 	bl	40009d38 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f60:	e1a00007 	mov	r0, r7
40004f64:	e1a01004 	mov	r1, r4
40004f68:	e1a02005 	mov	r2, r5
40004f6c:	eb001371 	bl	40009d38 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f70:	e1a00006 	mov	r0, r6
40004f74:	eaffff68 	b	40004d1c <CyFxUVCApplnUSBSetupCB+0x6c>
40004f78:	40032ec0 	.word	0x40032ec0
40004f7c:	4003310c 	.word	0x4003310c
40004f80:	40032fc0 	.word	0x40032fc0
40004f84:	40032ff0 	.word	0x40032ff0
40004f88:	40032ff2 	.word	0x40032ff2
40004f8c:	40030f90 	.word	0x40030f90
40004f90:	400111a4 	.word	0x400111a4
40004f94:	40032ee4 	.word	0x40032ee4
40004f98:	40011138 	.word	0x40011138
40004f9c:	40011170 	.word	0x40011170
40004fa0:	400111bc 	.word	0x400111bc

40004fa4 <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fa4:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40004fa8:	e92d4010 	push	{r4, lr}
40004fac:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fb0:	18bd8010 	popne	{r4, pc}
    {
        hitFV = CyTrue;
40004fb4:	e59f10d0 	ldr	r1, [pc, #208]	; 4000508c <CyFxGpifCB+0xe8>
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fb8:	e5d13048 	ldrb	r3, [r1, #72]	; 0x48
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
40004fbc:	e5810044 	str	r0, [r1, #68]	; 0x44
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fc0:	e3530003 	cmp	r3, #3
40004fc4:	0a000028 	beq	4000506c <CyFxGpifCB+0xc8>
                /* Unexpected current state. Return error. */
                return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40004fc8:	e3530002 	cmp	r3, #2
40004fcc:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40004fd0:	e2420008 	sub	r0, r2, #8
40004fd4:	e350000a 	cmp	r0, #10
40004fd8:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40004fdc:	ea00001b 	b	40005050 <CyFxGpifCB+0xac>
40004fe0:	40005010 	.word	0x40005010
40004fe4:	40005050 	.word	0x40005050
40004fe8:	40005050 	.word	0x40005050
40004fec:	4000500c 	.word	0x4000500c
40004ff0:	40005050 	.word	0x40005050
40004ff4:	40005050 	.word	0x40005050
40004ff8:	40005050 	.word	0x40005050
40004ffc:	40005048 	.word	0x40005048
40005000:	40005050 	.word	0x40005050
40005004:	40005050 	.word	0x40005050
40005008:	4000500c 	.word	0x4000500c
4000500c:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40005010:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40005014:	e59f0074 	ldr	r0, [pc, #116]	; 40005090 <CyFxGpifCB+0xec>
40005018:	eb004fc8 	bl	40018f40 <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
4000501c:	e2502000 	subs	r2, r0, #0
40005020:	0afffff9 	beq	4000500c <CyFxGpifCB+0x68>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40005024:	e3a00004 	mov	r0, #4
40005028:	e59f1064 	ldr	r1, [pc, #100]	; 40005094 <CyFxGpifCB+0xf0>
4000502c:	eb00378b 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40005030:	e59f1060 	ldr	r1, [pc, #96]	; 40005098 <CyFxGpifCB+0xf4>
40005034:	e3a00004 	mov	r0, #4
40005038:	eb003788 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000503c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40005040:	eb000e44 	bl	40008958 <_tx_thread_sleep>
40005044:	eafffff9 	b	40005030 <CyFxGpifCB+0x8c>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
40005048:	e3a01001 	mov	r1, #1
4000504c:	eafffff0 	b	40005014 <CyFxGpifCB+0x70>
                socket = 1;
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
40005050:	e59f1044 	ldr	r1, [pc, #68]	; 4000509c <CyFxGpifCB+0xf8>
40005054:	e3a00001 	mov	r0, #1
40005058:	eb003780 	bl	40012e60 <CyU3PDebugPrint>
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
4000505c:	e59f103c 	ldr	r1, [pc, #60]	; 400050a0 <CyFxGpifCB+0xfc>
40005060:	e3a00004 	mov	r0, #4
    }
}
40005064:	e8bd4010 	pop	{r4, lr}
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005068:	ea00377c 	b	40012e60 <CyU3PDebugPrint>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
4000506c:	e242300b 	sub	r3, r2, #11
40005070:	e3530003 	cmp	r3, #3
40005074:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40005078:	eafffff4 	b	40005050 <CyFxGpifCB+0xac>
4000507c:	40005010 	.word	0x40005010
40005080:	40005048 	.word	0x40005048
40005084:	4000500c 	.word	0x4000500c
40005088:	4000500c 	.word	0x4000500c
4000508c:	40030f90 	.word	0x40030f90
40005090:	40032ee4 	.word	0x40032ee4
40005094:	400111f8 	.word	0x400111f8
40005098:	40011228 	.word	0x40011228
4000509c:	400111e0 	.word	0x400111e0
400050a0:	4001123c 	.word	0x4001123c

400050a4 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050a4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050a8:	e59f40e8 	ldr	r4, [pc, #232]	; 40005198 <I2CCmdHandler+0xf4>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050ac:	e24dd034 	sub	sp, sp, #52	; 0x34
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050b0:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050b4:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
400050b8:	e5d46054 	ldrb	r6, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050bc:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
400050c0:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
400050c4:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
400050c8:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
400050cc:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
400050d0:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
400050d4:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
400050d8:	e58d201c 	str	r2, [sp, #28]
400050dc:	e3a00004 	mov	r0, #4
400050e0:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
400050e4:	e59f10b0 	ldr	r1, [pc, #176]	; 4000519c <I2CCmdHandler+0xf8>
400050e8:	e1a02005 	mov	r2, r5
400050ec:	e88d4080 	stm	sp, {r7, lr}
400050f0:	e58d8008 	str	r8, [sp, #8]
400050f4:	e58da00c 	str	sl, [sp, #12]
400050f8:	e58d9010 	str	r9, [sp, #16]
400050fc:	e58db014 	str	fp, [sp, #20]
40005100:	e58d6018 	str	r6, [sp, #24]
40005104:	e58dc020 	str	ip, [sp, #32]
40005108:	eb003754 	bl	40012e60 <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
4000510c:	e3550000 	cmp	r5, #0
40005110:	0a000003 	beq	40005124 <I2CCmdHandler+0x80>
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
40005114:	e3550001 	cmp	r5, #1
40005118:	0a000014 	beq	40005170 <I2CCmdHandler+0xcc>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
4000511c:	e28dd034 	add	sp, sp, #52	; 0x34
40005120:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005124:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005128:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
4000512c:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005130:	e3a0e00f 	mov	lr, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005134:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005138:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
4000513c:	e3800001 	orr	r0, r0, #1
40005140:	e3811001 	orr	r1, r1, #1
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005144:	e5c4e057 	strb	lr, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005148:	e58dc000 	str	ip, [sp]
4000514c:	ebfffc69 	bl	400042f8 <SensorRead2B>
			I2CCMDArry[9] = buf[0];
40005150:	e5dd002c 	ldrb	r0, [sp, #44]	; 0x2c
			if(CmdDataLen == 2){
40005154:	e3560002 	cmp	r6, #2

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
40005158:	e5c40055 	strb	r0, [r4, #85]	; 0x55
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
4000515c:	05dd002d 	ldrbeq	r0, [sp, #45]	; 0x2d
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
40005160:	e3e03000 	mvn	r3, #0
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
40005164:	05c40056 	strbeq	r0, [r4, #86]	; 0x56
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
40005168:	e5c43057 	strb	r3, [r4, #87]	; 0x57
4000516c:	eaffffea 	b	4000511c <I2CCmdHandler+0x78>
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[9]);
40005170:	e5d4104e 	ldrb	r1, [r4, #78]	; 0x4e
40005174:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
40005178:	e5d4c055 	ldrb	ip, [r4, #85]	; 0x55
4000517c:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
40005180:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
40005184:	e20100fe 	and	r0, r1, #254	; 0xfe
40005188:	e20e10fe 	and	r1, lr, #254	; 0xfe
4000518c:	e58dc000 	str	ip, [sp]
40005190:	ebfffbf9 	bl	4000417c <SensorWrite2B>
40005194:	eaffffe0 	b	4000511c <I2CCmdHandler+0x78>
40005198:	40030f90 	.word	0x40030f90
4000519c:	40011250 	.word	0x40011250

400051a0 <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
400051a0:	e92d4070 	push	{r4, r5, r6, lr}
400051a4:	e1a06001 	mov	r6, r1
400051a8:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051ac:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
400051b0:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400051b4:	e3e01000 	mvn	r1, #0
400051b8:	e590001c 	ldr	r0, [r0, #28]
400051bc:	eb001375 	bl	40009f98 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051c0:	e0650006 	rsb	r0, r5, r6
400051c4:	e270c000 	rsbs	ip, r0, #0
400051c8:	e0acc000 	adc	ip, ip, r0
400051cc:	e3a01020 	mov	r1, #32
400051d0:	e3a02027 	mov	r2, #39	; 0x27
400051d4:	e3a03030 	mov	r3, #48	; 0x30
400051d8:	e1a00004 	mov	r0, r4
400051dc:	e58dc000 	str	ip, [sp]
400051e0:	e58d5004 	str	r5, [sp, #4]
400051e4:	ebfff8b3 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400051e8:	e1560005 	cmp	r6, r5
400051ec:	03a06002 	moveq	r6, #2
400051f0:	11a06005 	movne	r6, r5
400051f4:	e1a00004 	mov	r0, r4
400051f8:	e3a01021 	mov	r1, #33	; 0x21
400051fc:	e3a02025 	mov	r2, #37	; 0x25
40005200:	e3a03030 	mov	r3, #48	; 0x30
40005204:	e58d6000 	str	r6, [sp]
40005208:	e58d5004 	str	r5, [sp, #4]
4000520c:	ebfff8a9 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005210:	e594001c 	ldr	r0, [r4, #28]
}
40005214:	e28dd008 	add	sp, sp, #8
40005218:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000521c:	ea001392 	b	4000a06c <_txe_mutex_put>

40005220 <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
40005220:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005224:	e3500023 	cmp	r0, #35	; 0x23
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005228:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000522c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40005230:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005234:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005238:	9a000024 	bls	400052d0 <ControlHandle+0xb0>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
4000523c:	e59f6eec 	ldr	r6, [pc, #3820]	; 40006130 <ControlHandle+0xf10>
40005240:	e0872087 	add	r2, r7, r7, lsl #1
40005244:	e1a02182 	lsl	r2, r2, #3
40005248:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
4000524c:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
40005250:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
40005254:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005258:	e59f3ed4 	ldr	r3, [pc, #3796]	; 40006134 <ControlHandle+0xf14>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
4000525c:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005260:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005264:	e3550083 	cmp	r5, #131	; 0x83
40005268:	0a000023 	beq	400052fc <ControlHandle+0xdc>
4000526c:	9a00002c 	bls	40005324 <ControlHandle+0x104>
40005270:	e3550085 	cmp	r5, #133	; 0x85
40005274:	0a00008b 	beq	400054a8 <ControlHandle+0x288>
40005278:	3a000079 	bcc	40005464 <ControlHandle+0x244>
4000527c:	e3550086 	cmp	r5, #134	; 0x86
40005280:	0a0000c8 	beq	400055a8 <ControlHandle+0x388>
40005284:	e3550087 	cmp	r5, #135	; 0x87
40005288:	0a0000bc 	beq	40005580 <ControlHandle+0x360>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
4000528c:	e3a00000 	mov	r0, #0
40005290:	e3a01001 	mov	r1, #1
40005294:	e1a02000 	mov	r2, r0
40005298:	eb006258 	bl	4001dc00 <CyU3PUsbStall>
			  break;
4000529c:	e3a0c0ff 	mov	ip, #255	; 0xff
400052a0:	e1a0700c 	mov	r7, ip
400052a4:	e1a0e00c 	mov	lr, ip
400052a8:	e1a0400c 	mov	r4, ip
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
400052ac:	e59f1e84 	ldr	r1, [pc, #3716]	; 40006138 <ControlHandle+0xf18>
400052b0:	e1a02005 	mov	r2, r5
400052b4:	e1a03004 	mov	r3, r4
400052b8:	e3a00004 	mov	r0, #4
400052bc:	e58de000 	str	lr, [sp]
400052c0:	e98d1080 	stmib	sp, {r7, ip}
400052c4:	eb0036e5 	bl	40012e60 <CyU3PDebugPrint>
}
400052c8:	e28dd02c 	add	sp, sp, #44	; 0x2c
400052cc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052d0:	e59f6e58 	ldr	r6, [pc, #3672]	; 40006130 <ControlHandle+0xf10>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052d4:	e59f3e58 	ldr	r3, [pc, #3672]	; 40006134 <ControlHandle+0xf14>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052d8:	e0805080 	add	r5, r0, r0, lsl #1
400052dc:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052e0:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052e4:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400052e8:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
400052ec:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
400052f0:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
400052f4:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400052f8:	1affffdb 	bne	4000526c <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400052fc:	e3540023 	cmp	r4, #35	; 0x23
40005300:	9a0000c6 	bls	40005620 <ControlHandle+0x400>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005304:	e0870087 	add	r0, r7, r7, lsl #1
40005308:	e0866180 	add	r6, r6, r0, lsl #3
4000530c:	e59fae28 	ldr	sl, [pc, #3624]	; 4000613c <ControlHandle+0xf1c>
40005310:	e5d6c005 	ldrb	ip, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005314:	e5d6e006 	ldrb	lr, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005318:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
4000531c:	e5cae059 	strb	lr, [sl, #89]	; 0x59
40005320:	ea00000b 	b	40005354 <ControlHandle+0x134>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005324:	e3550081 	cmp	r5, #129	; 0x81
40005328:	0a00006a 	beq	400054d8 <ControlHandle+0x2b8>
4000532c:	9a000010 	bls	40005374 <ControlHandle+0x154>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
40005330:	e3540023 	cmp	r4, #35	; 0x23
40005334:	9a0000ad 	bls	400055f0 <ControlHandle+0x3d0>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005338:	e087a087 	add	sl, r7, r7, lsl #1
4000533c:	e086618a 	add	r6, r6, sl, lsl #3
40005340:	e5d64003 	ldrb	r4, [r6, #3]
40005344:	e59fadf0 	ldr	sl, [pc, #3568]	; 4000613c <ControlHandle+0xf1c>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005348:	e5d67004 	ldrb	r7, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
4000534c:	e5ca4058 	strb	r4, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005350:	e5ca7059 	strb	r7, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005354:	e1a00008 	mov	r0, r8
40005358:	e59f1de0 	ldr	r1, [pc, #3552]	; 40006140 <ControlHandle+0xf20>
4000535c:	eb005ffc 	bl	4001d354 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005360:	e3a0c0ff 	mov	ip, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005364:	e5da7058 	ldrb	r7, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40005368:	e1a0e00c 	mov	lr, ip
4000536c:	e1a0400c 	mov	r4, ip
40005370:	eaffffcd 	b	400052ac <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005374:	e3550001 	cmp	r5, #1
40005378:	1affffc3 	bne	4000528c <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000537c:	e59f1db8 	ldr	r1, [pc, #3512]	; 4000613c <ControlHandle+0xf1c>
40005380:	e28d2026 	add	r2, sp, #38	; 0x26
40005384:	e3a00020 	mov	r0, #32
40005388:	e2811058 	add	r1, r1, #88	; 0x58
4000538c:	eb005d82 	bl	4001c99c <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
40005390:	e2502000 	subs	r2, r0, #0
40005394:	1a000341 	bne	400060a0 <ControlHandle+0xe80>
			   {
				  Data0 = glEp0Buffer[0];
40005398:	e59f3d9c 	ldr	r3, [pc, #3484]	; 4000613c <ControlHandle+0xf1c>
				  Data1 = glEp0Buffer[1];
4000539c:	e59f0d98 	ldr	r0, [pc, #3480]	; 4000613c <ControlHandle+0xf1c>
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053a0:	e59fed94 	ldr	lr, [pc, #3476]	; 4000613c <ControlHandle+0xf1c>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053a4:	e5d33058 	ldrb	r3, [r3, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
400053a8:	e5d0c059 	ldrb	ip, [r0, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053ac:	e5dee05a 	ldrb	lr, [lr, #90]	; 0x5a
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053b0:	e58d3014 	str	r3, [sp, #20]
				  Data1 = glEp0Buffer[1];
400053b4:	e58dc01c 	str	ip, [sp, #28]
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053b8:	e58de018 	str	lr, [sp, #24]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
400053bc:	e3540026 	cmp	r4, #38	; 0x26
400053c0:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
400053c4:	ea00031b 	b	40006038 <ControlHandle+0xe18>
400053c8:	40005fbc 	.word	0x40005fbc
400053cc:	40005efc 	.word	0x40005efc
400053d0:	40006038 	.word	0x40006038
400053d4:	40006038 	.word	0x40006038
400053d8:	40005e98 	.word	0x40005e98
400053dc:	40005d58 	.word	0x40005d58
400053e0:	40005cdc 	.word	0x40005cdc
400053e4:	40006038 	.word	0x40006038
400053e8:	40006038 	.word	0x40006038
400053ec:	40006038 	.word	0x40006038
400053f0:	40006038 	.word	0x40006038
400053f4:	40005c54 	.word	0x40005c54
400053f8:	40006038 	.word	0x40006038
400053fc:	40006038 	.word	0x40006038
40005400:	40006038 	.word	0x40006038
40005404:	40006038 	.word	0x40006038
40005408:	40005bd0 	.word	0x40005bd0
4000540c:	40006038 	.word	0x40006038
40005410:	40006038 	.word	0x40006038
40005414:	40006038 	.word	0x40006038
40005418:	40006038 	.word	0x40006038
4000541c:	40006038 	.word	0x40006038
40005420:	40006038 	.word	0x40006038
40005424:	40006038 	.word	0x40006038
40005428:	40006038 	.word	0x40006038
4000542c:	40005b18 	.word	0x40005b18
40005430:	40005a80 	.word	0x40005a80
40005434:	40006038 	.word	0x40006038
40005438:	40005a70 	.word	0x40005a70
4000543c:	40006038 	.word	0x40006038
40005440:	40005a14 	.word	0x40005a14
40005444:	40005990 	.word	0x40005990
40005448:	40006038 	.word	0x40006038
4000544c:	40006038 	.word	0x40006038
40005450:	40006038 	.word	0x40006038
40005454:	40006038 	.word	0x40006038
40005458:	400058f4 	.word	0x400058f4
4000545c:	400058dc 	.word	0x400058dc
40005460:	40005878 	.word	0x40005878
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005464:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005468:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000546c:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005470:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005474:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005478:	859facbc 	ldrhi	sl, [pc, #3260]	; 4000613c <ControlHandle+0xf1c>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000547c:	959facb8 	ldrls	sl, [pc, #3256]	; 4000613c <ControlHandle+0xf1c>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005480:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
40005484:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005488:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
4000548c:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
40005490:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005494:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
40005498:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
4000549c:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400054a0:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
400054a4:	eaffffaa 	b	40005354 <ControlHandle+0x134>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054a8:	e59f4c8c 	ldr	r4, [pc, #3212]	; 4000613c <ControlHandle+0xf1c>
			  glEp0Buffer[1] = 0;
400054ac:	e3a0c000 	mov	ip, #0
400054b0:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054b4:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054b8:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054bc:	e3a00002 	mov	r0, #2
400054c0:	eb005fa3 	bl	4001d354 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400054c4:	e3a0c0ff 	mov	ip, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054c8:	e5d47058 	ldrb	r7, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400054cc:	e1a0e00c 	mov	lr, ip
400054d0:	e1a0400c 	mov	r4, ip
400054d4:	eaffff74 	b	400052ac <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
400054d8:	e2441001 	sub	r1, r4, #1
400054dc:	e3510025 	cmp	r1, #37	; 0x25
400054e0:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
400054e4:	ea0000da 	b	40005854 <ControlHandle+0x634>
400054e8:	40005810 	.word	0x40005810
400054ec:	40005854 	.word	0x40005854
400054f0:	40005854 	.word	0x40005854
400054f4:	40005854 	.word	0x40005854
400054f8:	400057f0 	.word	0x400057f0
400054fc:	40005854 	.word	0x40005854
40005500:	40005854 	.word	0x40005854
40005504:	40005854 	.word	0x40005854
40005508:	40005854 	.word	0x40005854
4000550c:	40005854 	.word	0x40005854
40005510:	400057cc 	.word	0x400057cc
40005514:	40005854 	.word	0x40005854
40005518:	40005854 	.word	0x40005854
4000551c:	40005854 	.word	0x40005854
40005520:	40005854 	.word	0x40005854
40005524:	40005854 	.word	0x40005854
40005528:	40005854 	.word	0x40005854
4000552c:	40005854 	.word	0x40005854
40005530:	40005854 	.word	0x40005854
40005534:	40005854 	.word	0x40005854
40005538:	40005854 	.word	0x40005854
4000553c:	40005854 	.word	0x40005854
40005540:	40005854 	.word	0x40005854
40005544:	40005854 	.word	0x40005854
40005548:	40005790 	.word	0x40005790
4000554c:	40005854 	.word	0x40005854
40005550:	40005854 	.word	0x40005854
40005554:	40005774 	.word	0x40005774
40005558:	40005854 	.word	0x40005854
4000555c:	40005854 	.word	0x40005854
40005560:	400056d8 	.word	0x400056d8
40005564:	40005854 	.word	0x40005854
40005568:	40005854 	.word	0x40005854
4000556c:	40005854 	.word	0x40005854
40005570:	40005854 	.word	0x40005854
40005574:	4000569c 	.word	0x4000569c
40005578:	4000569c 	.word	0x4000569c
4000557c:	4000569c 	.word	0x4000569c
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005580:	e3540023 	cmp	r4, #35	; 0x23
40005584:	9a000031 	bls	40005650 <ControlHandle+0x430>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
40005588:	e0877087 	add	r7, r7, r7, lsl #1
4000558c:	e0866187 	add	r6, r6, r7, lsl #3
40005590:	e59faba4 	ldr	sl, [pc, #2980]	; 4000613c <ControlHandle+0xf1c>
40005594:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
40005598:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
4000559c:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055a0:	e5ca1059 	strb	r1, [sl, #89]	; 0x59
400055a4:	eaffff6a 	b	40005354 <ControlHandle+0x134>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400055a8:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055ac:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055b0:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055b4:	80866187 	addhi	r6, r6, r7, lsl #3
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055b8:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055bc:	859f8b78 	ldrhi	r8, [pc, #2936]	; 4000613c <ControlHandle+0xf1c>
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055c0:	959f8b74 	ldrls	r8, [pc, #2932]	; 4000613c <ControlHandle+0xf1c>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055c4:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055c8:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055cc:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055d0:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055d4:	e59f1b64 	ldr	r1, [pc, #2916]	; 40006140 <ControlHandle+0xf20>
400055d8:	eb005f5d 	bl	4001d354 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400055dc:	e3a0c0ff 	mov	ip, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055e0:	e5d87058 	ldrb	r7, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400055e4:	e1a0e00c 	mov	lr, ip
400055e8:	e1a0400c 	mov	r4, ip
400055ec:	eaffff2e 	b	400052ac <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
400055f0:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
400055f4:	10844084 	addne	r4, r4, r4, lsl #1
400055f8:	10866184 	addne	r6, r6, r4, lsl #3
400055fc:	159fab38 	ldrne	sl, [pc, #2872]	; 4000613c <ControlHandle+0xf1c>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005600:	059fab34 	ldreq	sl, [pc, #2868]	; 4000613c <ControlHandle+0xf1c>
40005604:	059f3b38 	ldreq	r3, [pc, #2872]	; 40006144 <ControlHandle+0xf24>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005608:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
4000560c:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005610:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005614:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005618:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
4000561c:	eaffff4c 	b	40005354 <ControlHandle+0x134>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
40005620:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005624:	10844084 	addne	r4, r4, r4, lsl #1
40005628:	10866184 	addne	r6, r6, r4, lsl #3
4000562c:	159fab08 	ldrne	sl, [pc, #2824]	; 4000613c <ControlHandle+0xf1c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005630:	059fab04 	ldreq	sl, [pc, #2820]	; 4000613c <ControlHandle+0xf1c>
40005634:	059f3b0c 	ldreq	r3, [pc, #2828]	; 40006148 <ControlHandle+0xf28>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005638:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
4000563c:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005640:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005644:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005648:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
4000564c:	eaffff40 	b	40005354 <ControlHandle+0x134>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005650:	e354000b 	cmp	r4, #11
40005654:	0a000007 	beq	40005678 <ControlHandle+0x458>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005658:	e084a084 	add	sl, r4, r4, lsl #1
4000565c:	e086618a 	add	r6, r6, sl, lsl #3
40005660:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
40005664:	e59faad0 	ldr	sl, [pc, #2768]	; 4000613c <ControlHandle+0xf1c>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005668:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
4000566c:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005670:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
40005674:	eaffff36 	b	40005354 <ControlHandle+0x134>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005678:	e59faabc 	ldr	sl, [pc, #2748]	; 4000613c <ControlHandle+0xf1c>
4000567c:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005680:	e5d6e294 	ldrb	lr, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
40005684:	e3a04000 	mov	r4, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005688:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
4000568c:	e5ca4059 	strb	r4, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005690:	e5cae05a 	strb	lr, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
40005694:	e5ca405b 	strb	r4, [sl, #91]	; 0x5b
40005698:	eaffff2d 	b	40005354 <ControlHandle+0x134>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
4000569c:	e0877087 	add	r7, r7, r7, lsl #1
400056a0:	e0866187 	add	r6, r6, r7, lsl #3
400056a4:	e59fea90 	ldr	lr, [pc, #2704]	; 4000613c <ControlHandle+0xf1c>
400056a8:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056ac:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056b0:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056b4:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056b8:	e1a00008 	mov	r0, r8
400056bc:	e59f1a7c 	ldr	r1, [pc, #2684]	; 40006140 <ControlHandle+0xf20>
400056c0:	eb005f23 	bl	4001d354 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056c4:	e3a0e0ff 	mov	lr, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056c8:	e1a07004 	mov	r7, r4
400056cc:	e1a0c006 	mov	ip, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056d0:	e1a0400e 	mov	r4, lr
400056d4:	eafffef4 	b	400052ac <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400056d8:	e3580000 	cmp	r8, #0
400056dc:	0a00028c 	beq	40006114 <ControlHandle+0xef4>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400056e0:	e1a0e128 	lsr	lr, r8, #2
400056e4:	e35e0000 	cmp	lr, #0
400056e8:	13580003 	cmpne	r8, #3
400056ec:	83a02000 	movhi	r2, #0
400056f0:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400056f4:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400056f8:	9a000289 	bls	40006124 <ControlHandle+0xf04>
400056fc:	e59f1a3c 	ldr	r1, [pc, #2620]	; 40006140 <ControlHandle+0xf20>
40005700:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005704:	e4904004 	ldr	r4, [r0], #4
40005708:	e282c001 	add	ip, r2, #1
4000570c:	e20c20ff 	and	r2, ip, #255	; 0xff
40005710:	e15e0002 	cmp	lr, r2
40005714:	e4814004 	str	r4, [r1], #4
40005718:	8afffff9 	bhi	40005704 <ControlHandle+0x4e4>
4000571c:	e1580003 	cmp	r8, r3
40005720:	159f0a14 	ldrne	r0, [pc, #2580]	; 4000613c <ControlHandle+0xf1c>
40005724:	0a00027a 	beq	40006114 <ControlHandle+0xef4>
40005728:	e080e003 	add	lr, r0, r3
4000572c:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005730:	e2836001 	add	r6, r3, #1
40005734:	e20630ff 	and	r3, r6, #255	; 0xff
40005738:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
4000573c:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005740:	8afffff8 	bhi	40005728 <ControlHandle+0x508>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005744:	e5d07057 	ldrb	r7, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005748:	e59f39ec 	ldr	r3, [pc, #2540]	; 4000613c <ControlHandle+0xf1c>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
4000574c:	e35700ff 	cmp	r7, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005750:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
40005754:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005758:	0affffd6 	beq	400056b8 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
4000575c:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
40005760:	e59f19e4 	ldr	r1, [pc, #2532]	; 4000614c <ControlHandle+0xf2c>
40005764:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
40005768:	e3a00004 	mov	r0, #4
4000576c:	eb0035bb 	bl	40012e60 <CyU3PDebugPrint>
40005770:	eaffffd0 	b	400056b8 <ControlHandle+0x498>
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
40005774:	e59f39c0 	ldr	r3, [pc, #2496]	; 4000613c <ControlHandle+0xf1c>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
40005778:	e5d6442d 	ldrb	r4, [r6, #1069]	; 0x42d
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
4000577c:	e3a02000 	mov	r2, #0
							CtrlParArry[CtrlID][13] = 0;
						}
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
40005780:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005784:	e5c32059 	strb	r2, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005788:	e3a060ff 	mov	r6, #255	; 0xff
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
4000578c:	eaffffc9 	b	400056b8 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
40005790:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
40005794:	e59fc9a0 	ldr	ip, [pc, #2464]	; 4000613c <ControlHandle+0xf1c>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
40005798:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
4000579c:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057a0:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057a4:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057a8:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400057ac:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
400057b0:	e59f1998 	ldr	r1, [pc, #2456]	; 40006150 <ControlHandle+0xf30>
400057b4:	e1a02004 	mov	r2, r4
400057b8:	e1a0300e 	mov	r3, lr
400057bc:	e3a00004 	mov	r0, #4
400057c0:	e88d4040 	stm	sp, {r6, lr}
400057c4:	eb0035a5 	bl	40012e60 <CyU3PDebugPrint>
					 break;
400057c8:	eaffffba 	b	400056b8 <ControlHandle+0x498>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
400057cc:	e59fc968 	ldr	ip, [pc, #2408]	; 4000613c <ControlHandle+0xf1c>
400057d0:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
400057d4:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
400057d8:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
400057dc:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057e0:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
400057e4:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400057e8:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
400057ec:	eaffffb1 	b	400056b8 <ControlHandle+0x498>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
400057f0:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
400057f4:	e59f7940 	ldr	r7, [pc, #2368]	; 4000613c <ControlHandle+0xf1c>
					 glEp0Buffer[1] = 0;
400057f8:	e3a06000 	mov	r6, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
400057fc:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005800:	e5c76059 	strb	r6, [r7, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005804:	e5c74058 	strb	r4, [r7, #88]	; 0x58
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005808:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
4000580c:	eaffffa9 	b	400056b8 <ControlHandle+0x498>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005810:	e5d631a6 	ldrb	r3, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005814:	e5d611a5 	ldrb	r1, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005818:	e3130002 	tst	r3, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
4000581c:	01a01121 	lsreq	r1, r1, #2
40005820:	01e01c81 	mvneq	r1, r1, lsl #25
					 }
					 glEp0Buffer[0] = Data1;
40005824:	e59f2910 	ldr	r2, [pc, #2320]	; 4000613c <ControlHandle+0xf1c>

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005828:	11a03303 	lslne	r3, r3, #6
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
4000582c:	01e01ca1 	mvneq	r1, r1, lsr #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005830:	12034040 	andne	r4, r3, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005834:	01813303 	orreq	r3, r1, r3, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005838:	11844121 	orrne	r4, r4, r1, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
4000583c:	020340ff 	andeq	r4, r3, #255	; 0xff
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
40005840:	e3a00000 	mov	r0, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
40005844:	e5c24058 	strb	r4, [r2, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005848:	e5c20059 	strb	r0, [r2, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
4000584c:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005850:	eaffff98 	b	400056b8 <ControlHandle+0x498>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005854:	e0841084 	add	r1, r4, r4, lsl #1
40005858:	e0863181 	add	r3, r6, r1, lsl #3
4000585c:	e59f28d8 	ldr	r2, [pc, #2264]	; 4000613c <ControlHandle+0xf1c>
40005860:	e5d3418d 	ldrb	r4, [r3, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
40005864:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005868:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
4000586c:	e5c24058 	strb	r4, [r2, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005870:	e5c20059 	strb	r0, [r2, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
40005874:	eaffff8f 	b	400056b8 <ControlHandle+0x498>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005878:	e59f48d4 	ldr	r4, [pc, #2260]	; 40006154 <ControlHandle+0xf34>
4000587c:	e3e01000 	mvn	r1, #0
40005880:	e594001c 	ldr	r0, [r4, #28]
40005884:	eb0011c3 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
40005888:	e3a01026 	mov	r1, #38	; 0x26
4000588c:	e59dc014 	ldr	ip, [sp, #20]
40005890:	e3a0e000 	mov	lr, #0
40005894:	e1a0300a 	mov	r3, sl
40005898:	e1a02009 	mov	r2, r9
4000589c:	e1a00004 	mov	r0, r4
400058a0:	e88d5000 	stm	sp, {ip, lr}
400058a4:	ebfff703 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400058a8:	e594001c 	ldr	r0, [r4, #28]
400058ac:	eb0011ee 	bl	4000a06c <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058b0:	e59d1014 	ldr	r1, [sp, #20]
400058b4:	e0873087 	add	r3, r7, r7, lsl #1
400058b8:	e0866183 	add	r6, r6, r3, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058bc:	e3a07001 	mov	r7, #1
							 break;
400058c0:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058c4:	e5c67010 	strb	r7, [r6, #16]
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058c8:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058cc:	e1a04001 	mov	r4, r1
400058d0:	e59de018 	ldr	lr, [sp, #24]
							 break;
400058d4:	e1a0700c 	mov	r7, ip
400058d8:	eafffe73 	b	400052ac <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID5: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400058dc:	e59f4870 	ldr	r4, [pc, #2160]	; 40006154 <ControlHandle+0xf34>
400058e0:	e3e01000 	mvn	r1, #0
400058e4:	e594001c 	ldr	r0, [r4, #28]
400058e8:	eb0011aa 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
400058ec:	e3a01025 	mov	r1, #37	; 0x25
400058f0:	eaffffe5 	b	4000588c <ControlHandle+0x66c>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400058f4:	e59f4858 	ldr	r4, [pc, #2136]	; 40006154 <ControlHandle+0xf34>
400058f8:	e3e01000 	mvn	r1, #0
400058fc:	e594001c 	ldr	r0, [r4, #28]
40005900:	eb0011a4 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005904:	e59d2014 	ldr	r2, [sp, #20]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005908:	e3a01024 	mov	r1, #36	; 0x24
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
4000590c:	e202807f 	and	r8, r2, #127	; 0x7f
40005910:	e58d8018 	str	r8, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005914:	e59dc018 	ldr	ip, [sp, #24]
40005918:	e1a02009 	mov	r2, r9
4000591c:	e1a0300a 	mov	r3, sl
40005920:	e1a00004 	mov	r0, r4
40005924:	e58dc000 	str	ip, [sp]
40005928:	e3a0c000 	mov	ip, #0
4000592c:	e58dc004 	str	ip, [sp, #4]
40005930:	ebfff6e0 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
40005934:	e59de01c 	ldr	lr, [sp, #28]
40005938:	e3a08001 	mov	r8, #1
4000593c:	e3a01024 	mov	r1, #36	; 0x24
40005940:	e1a0200b 	mov	r2, fp
40005944:	e1a0300a 	mov	r3, sl
40005948:	e1a00004 	mov	r0, r4
4000594c:	e58de000 	str	lr, [sp]
40005950:	e58d8004 	str	r8, [sp, #4]
40005954:	ebfff6d7 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005958:	e594001c 	ldr	r0, [r4, #28]
4000595c:	eb0011c2 	bl	4000a06c <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005960:	e59d4018 	ldr	r4, [sp, #24]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005964:	e59d001c 	ldr	r0, [sp, #28]
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005968:	e087c087 	add	ip, r7, r7, lsl #1
4000596c:	e086618c 	add	r6, r6, ip, lsl #3
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005970:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005974:	e5c6400d 	strb	r4, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005978:	e5c6000e 	strb	r0, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
4000597c:	e5c68010 	strb	r8, [r6, #16]
40005980:	e59d4014 	ldr	r4, [sp, #20]
40005984:	e1a0e000 	mov	lr, r0
							 break;
40005988:	e1a0700c 	mov	r7, ip
4000598c:	eafffe46 	b	400052ac <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005990:	e3580000 	cmp	r8, #0
40005994:	0a000018 	beq	400059fc <ControlHandle+0x7dc>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005998:	e1a0e128 	lsr	lr, r8, #2
4000599c:	e35e0000 	cmp	lr, #0
400059a0:	13580003 	cmpne	r8, #3
400059a4:	83a02000 	movhi	r2, #0
400059a8:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400059ac:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059b0:	9a0001d9 	bls	4000611c <ControlHandle+0xefc>
400059b4:	e59f179c 	ldr	r1, [pc, #1948]	; 40006158 <ControlHandle+0xf38>
400059b8:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
400059bc:	e4904004 	ldr	r4, [r0], #4
400059c0:	e2822001 	add	r2, r2, #1
400059c4:	e20220ff 	and	r2, r2, #255	; 0xff
400059c8:	e15e0002 	cmp	lr, r2
400059cc:	e4814004 	str	r4, [r1], #4
400059d0:	8afffff9 	bhi	400059bc <ControlHandle+0x79c>
400059d4:	e1580003 	cmp	r8, r3
400059d8:	0a000007 	beq	400059fc <ControlHandle+0x7dc>
400059dc:	e59fe758 	ldr	lr, [pc, #1880]	; 4000613c <ControlHandle+0xf1c>
400059e0:	e08e7003 	add	r7, lr, r3
400059e4:	e5d71058 	ldrb	r1, [r7, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
400059e8:	e2833001 	add	r3, r3, #1
400059ec:	e20330ff 	and	r3, r3, #255	; 0xff
400059f0:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
400059f4:	e5c7104c 	strb	r1, [r7, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
400059f8:	8afffff7 	bhi	400059dc <ControlHandle+0x7bc>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
400059fc:	ebfffda8 	bl	400050a4 <I2CCmdHandler>
							 break;
40005a00:	e3a0c0ff 	mov	ip, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a04:	e59d4014 	ldr	r4, [sp, #20]
40005a08:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005a0c:	e1a0700c 	mov	r7, ip
40005a10:	eafffe25 	b	400052ac <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a14:	e59f7738 	ldr	r7, [pc, #1848]	; 40006154 <ControlHandle+0xf34>
40005a18:	e3e01000 	mvn	r1, #0
40005a1c:	e597001c 	ldr	r0, [r7, #28]
40005a20:	eb00115c 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005a24:	e59d0014 	ldr	r0, [sp, #20]
40005a28:	e3a0e000 	mov	lr, #0
40005a2c:	e270c001 	rsbs	ip, r0, #1
40005a30:	33a0c000 	movcc	ip, #0
40005a34:	e3a0101e 	mov	r1, #30
40005a38:	e1a02009 	mov	r2, r9
40005a3c:	e1a0300a 	mov	r3, sl
40005a40:	e1a00007 	mov	r0, r7
40005a44:	e88d5000 	stm	sp, {ip, lr}
40005a48:	ebfff69a 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005a4c:	e597001c 	ldr	r0, [r7, #28]
40005a50:	eb001185 	bl	4000a06c <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
40005a54:	e3a04001 	mov	r4, #1
							 break;
40005a58:	e3a0c0ff 	mov	ip, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005a5c:	e5c64460 	strb	r4, [r6, #1120]	; 0x460
40005a60:	e59de018 	ldr	lr, [sp, #24]
40005a64:	e59d4014 	ldr	r4, [sp, #20]
							 break;
40005a68:	e1a0700c 	mov	r7, ip
40005a6c:	eafffe0e 	b	400052ac <ControlHandle+0x8c>
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005a70:	e3a0c0ff 	mov	ip, #255	; 0xff
40005a74:	e1a04003 	mov	r4, r3
40005a78:	e1a0700c 	mov	r7, ip
40005a7c:	eafffe0a 	b	400052ac <ControlHandle+0x8c>
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a80:	e59f76cc 	ldr	r7, [pc, #1740]	; 40006154 <ControlHandle+0xf34>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
40005a84:	e5c633fd 	strb	r3, [r6, #1021]	; 0x3fd
							 CtrlParArry[CtrlID][16] = CyTrue;
40005a88:	e3a03001 	mov	r3, #1
40005a8c:	e5c63400 	strb	r3, [r6, #1024]	; 0x400
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a90:	e3e01000 	mvn	r1, #0
40005a94:	e597001c 	ldr	r0, [r7, #28]
40005a98:	eb00113e 	bl	40009f98 <_txe_mutex_get>
							 if(WDRflag)
40005a9c:	e596c610 	ldr	ip, [r6, #1552]	; 0x610
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005aa0:	e3a0101a 	mov	r1, #26
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005aa4:	e35c0000 	cmp	ip, #0
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005aa8:	159dc014 	ldrne	ip, [sp, #20]
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005aac:	059de014 	ldreq	lr, [sp, #20]
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005ab0:	158dc000 	strne	ip, [sp]
40005ab4:	11a0200b 	movne	r2, fp
40005ab8:	13a0c000 	movne	ip, #0
40005abc:	11a0300a 	movne	r3, sl
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ac0:	01a02009 	moveq	r2, r9
40005ac4:	01a0300a 	moveq	r3, sl
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005ac8:	e1a00007 	mov	r0, r7
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005acc:	e58dc004 	str	ip, [sp, #4]
40005ad0:	058de000 	streq	lr, [sp]
40005ad4:	ebfff677 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ad8:	e597001c 	ldr	r0, [r7, #28]
40005adc:	eb001162 	bl	4000a06c <_txe_mutex_put>
							 CyU3PDebugPrint (4, "Exe level. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005ae0:	e59f2654 	ldr	r2, [pc, #1620]	; 4000613c <ControlHandle+0xf1c>
40005ae4:	e5963610 	ldr	r3, [r6, #1552]	; 0x610
40005ae8:	e5d2c05a 	ldrb	ip, [r2, #90]	; 0x5a
40005aec:	e5d2e05b 	ldrb	lr, [r2, #91]	; 0x5b
40005af0:	e59d4014 	ldr	r4, [sp, #20]
40005af4:	e59f1660 	ldr	r1, [pc, #1632]	; 4000615c <ControlHandle+0xf3c>
40005af8:	e3a00004 	mov	r0, #4
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005afc:	e1a02004 	mov	r2, r4
40005b00:	e88d5000 	stm	sp, {ip, lr}
40005b04:	eb0034d5 	bl	40012e60 <CyU3PDebugPrint>

					 		 break;
40005b08:	e3a0c0ff 	mov	ip, #255	; 0xff
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005b0c:	e59de018 	ldr	lr, [sp, #24]

					 		 break;
40005b10:	e1a0700c 	mov	r7, ip
40005b14:	eafffde4 	b	400052ac <ControlHandle+0x8c>
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b18:	e59f4634 	ldr	r4, [pc, #1588]	; 40006154 <ControlHandle+0xf34>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005b1c:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005b20:	e59d3018 	ldr	r3, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b24:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b28:	e3e01000 	mvn	r1, #0
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005b2c:	e5c633e6 	strb	r3, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b30:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b34:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b38:	eb001116 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005b3c:	e59dc014 	ldr	ip, [sp, #20]
40005b40:	e3a01019 	mov	r1, #25
40005b44:	e58dc000 	str	ip, [sp]
40005b48:	e1a00004 	mov	r0, r4
40005b4c:	e3a0c000 	mov	ip, #0
40005b50:	e1a02009 	mov	r2, r9
40005b54:	e1a0300a 	mov	r3, sl
40005b58:	e58dc004 	str	ip, [sp, #4]
40005b5c:	ebfff655 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40005b60:	e59d1014 	ldr	r1, [sp, #20]
40005b64:	e3510000 	cmp	r1, #0
40005b68:	0a000007 	beq	40005b8c <ControlHandle+0x96c>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40005b6c:	e59de018 	ldr	lr, [sp, #24]
40005b70:	e1a00004 	mov	r0, r4
40005b74:	e3a01019 	mov	r1, #25
40005b78:	e1a0200b 	mov	r2, fp
40005b7c:	e1a0300a 	mov	r3, sl
40005b80:	e58de000 	str	lr, [sp]
40005b84:	e58d7004 	str	r7, [sp, #4]
40005b88:	ebfff64a 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b8c:	e594001c 	ldr	r0, [r4, #28]
40005b90:	eb001135 	bl	4000a06c <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005b94:	e59f15a0 	ldr	r1, [pc, #1440]	; 4000613c <ControlHandle+0xf1c>
40005b98:	e59f059c 	ldr	r0, [pc, #1436]	; 4000613c <ControlHandle+0xf1c>
40005b9c:	e5d1405a 	ldrb	r4, [r1, #90]	; 0x5a
40005ba0:	e5d0705b 	ldrb	r7, [r0, #91]	; 0x5b
40005ba4:	e5d12058 	ldrb	r2, [r1, #88]	; 0x58
40005ba8:	e5d13059 	ldrb	r3, [r1, #89]	; 0x59
40005bac:	e3a00004 	mov	r0, #4
40005bb0:	e59f15a8 	ldr	r1, [pc, #1448]	; 40006160 <ControlHandle+0xf40>
40005bb4:	e88d0090 	stm	sp, {r4, r7}
40005bb8:	eb0034a8 	bl	40012e60 <CyU3PDebugPrint>
							 break;
40005bbc:	e3a0c0ff 	mov	ip, #255	; 0xff
							 if(getData != 0){
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40005bc0:	e59d4014 	ldr	r4, [sp, #20]
40005bc4:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005bc8:	e1a0700c 	mov	r7, ip
40005bcc:	eafffdb6 	b	400052ac <ControlHandle+0x8c>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40005bd0:	e2530000 	subs	r0, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005bd4:	e5c6030d 	strb	r0, [r6, #781]	; 0x30d
40005bd8:	e59f3550 	ldr	r3, [pc, #1360]	; 40006130 <ControlHandle+0xf10>
							 if(Data0 == 0){//set exposure mode auto
40005bdc:	1a000137 	bne	400060c0 <ControlHandle+0xea0>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40005be0:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40005be4:	e3520002 	cmp	r2, #2
40005be8:	13520008 	cmpne	r2, #8
40005bec:	0a000003 	beq	40005c00 <ControlHandle+0x9e0>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40005bf0:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40005bf4:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40005bf8:	13a02002 	movne	r2, #2
40005bfc:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c00:	e59f454c 	ldr	r4, [pc, #1356]	; 40006154 <ControlHandle+0xf34>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c04:	e3a02001 	mov	r2, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c08:	e3e01000 	mvn	r1, #0
40005c0c:	e594001c 	ldr	r0, [r4, #28]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40005c10:	e5c62310 	strb	r2, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c14:	eb0010df 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c18:	e59dc014 	ldr	ip, [sp, #20]
40005c1c:	e3a0e000 	mov	lr, #0
40005c20:	e3a01010 	mov	r1, #16
40005c24:	e1a02009 	mov	r2, r9
40005c28:	e1a0300a 	mov	r3, sl
40005c2c:	e1a00004 	mov	r0, r4
40005c30:	e88d5000 	stm	sp, {ip, lr}
40005c34:	ebfff61f 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c38:	e594001c 	ldr	r0, [r4, #28]
40005c3c:	eb00110a 	bl	4000a06c <_txe_mutex_put>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
40005c40:	e3a0c0ff 	mov	ip, #255	; 0xff
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c44:	e59d4014 	ldr	r4, [sp, #20]
40005c48:	e59de018 	ldr	lr, [sp, #24]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
40005c4c:	e1a0700c 	mov	r7, ip
40005c50:	eafffd95 	b	400052ac <ControlHandle+0x8c>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005c54:	e59f44f8 	ldr	r4, [pc, #1272]	; 40006154 <ControlHandle+0xf34>
40005c58:	e3e01000 	mvn	r1, #0
40005c5c:	e594001c 	ldr	r0, [r4, #28]
40005c60:	eb0010cc 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005c64:	e59dc014 	ldr	ip, [sp, #20]
40005c68:	e3a0100b 	mov	r1, #11
40005c6c:	e1a02009 	mov	r2, r9
40005c70:	e1a0300a 	mov	r3, sl
40005c74:	e1a00004 	mov	r0, r4
40005c78:	e58dc000 	str	ip, [sp]
40005c7c:	e3a0c000 	mov	ip, #0
40005c80:	e58dc004 	str	ip, [sp, #4]
40005c84:	ebfff60b 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005c88:	e59de018 	ldr	lr, [sp, #24]
40005c8c:	e3a07001 	mov	r7, #1
40005c90:	e1a0200b 	mov	r2, fp
40005c94:	e3a0100b 	mov	r1, #11
40005c98:	e1a0300a 	mov	r3, sl
40005c9c:	e1a00004 	mov	r0, r4
40005ca0:	e58de000 	str	lr, [sp]
40005ca4:	e58d7004 	str	r7, [sp, #4]
40005ca8:	ebfff602 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005cac:	e594001c 	ldr	r0, [r4, #28]
40005cb0:	eb0010ed 	bl	4000a06c <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005cb4:	e59d0014 	ldr	r0, [sp, #20]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005cb8:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005cbc:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cc0:	e5c67298 	strb	r7, [r6, #664]	; 0x298
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005cc4:	e5c6048c 	strb	r0, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005cc8:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ccc:	e1a04000 	mov	r4, r0
40005cd0:	e1a0e002 	mov	lr, r2
							 break;
40005cd4:	e1a0700c 	mov	r7, ip
40005cd8:	eafffd73 	b	400052ac <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cdc:	e59f4470 	ldr	r4, [pc, #1136]	; 40006154 <ControlHandle+0xf34>
40005ce0:	e3e01000 	mvn	r1, #0
40005ce4:	e594001c 	ldr	r0, [r4, #28]
40005ce8:	eb0010aa 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005cec:	e59dc014 	ldr	ip, [sp, #20]
40005cf0:	e3a01006 	mov	r1, #6
40005cf4:	e1a02009 	mov	r2, r9
40005cf8:	e1a0300a 	mov	r3, sl
40005cfc:	e1a00004 	mov	r0, r4
40005d00:	e58dc000 	str	ip, [sp]
40005d04:	e3a0c000 	mov	ip, #0
40005d08:	e58dc004 	str	ip, [sp, #4]
40005d0c:	ebfff5e9 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005d10:	e59de014 	ldr	lr, [sp, #20]
40005d14:	e3a07001 	mov	r7, #1
40005d18:	e3a01006 	mov	r1, #6
40005d1c:	e1a0200b 	mov	r2, fp
40005d20:	e1a0300a 	mov	r3, sl
40005d24:	e1a00004 	mov	r0, r4
40005d28:	e58de000 	str	lr, [sp]
40005d2c:	e58d7004 	str	r7, [sp, #4]
40005d30:	ebfff5e0 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d34:	e594001c 	ldr	r0, [r4, #28]
40005d38:	eb0010cb 	bl	4000a06c <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005d3c:	e59d4014 	ldr	r4, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d40:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d44:	e5c67220 	strb	r7, [r6, #544]	; 0x220
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005d48:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d4c:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005d50:	e1a0700c 	mov	r7, ip
40005d54:	eafffd54 	b	400052ac <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d58:	e59f43f4 	ldr	r4, [pc, #1012]	; 40006154 <ControlHandle+0xf34>
40005d5c:	e3e01000 	mvn	r1, #0
40005d60:	e594001c 	ldr	r0, [r4, #28]
40005d64:	eb00108b 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005d68:	e59d3014 	ldr	r3, [sp, #20]
40005d6c:	e3a0c000 	mov	ip, #0
40005d70:	e2431080 	sub	r1, r3, #128	; 0x80
40005d74:	e20170ff 	and	r7, r1, #255	; 0xff
40005d78:	e1a02009 	mov	r2, r9
40005d7c:	e3a01005 	mov	r1, #5
40005d80:	e1a0300a 	mov	r3, sl
40005d84:	e1a00004 	mov	r0, r4
40005d88:	e88d1080 	stm	sp, {r7, ip}
40005d8c:	ebfff5c9 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005d90:	e59d0014 	ldr	r0, [sp, #20]
40005d94:	e3a01005 	mov	r1, #5
40005d98:	e2407076 	sub	r7, r0, #118	; 0x76
40005d9c:	e207c0ff 	and	ip, r7, #255	; 0xff
40005da0:	e3a020dc 	mov	r2, #220	; 0xdc
40005da4:	e3a07001 	mov	r7, #1
40005da8:	e1a0300a 	mov	r3, sl
40005dac:	e1a00004 	mov	r0, r4
40005db0:	e58dc000 	str	ip, [sp]
40005db4:	e58d7004 	str	r7, [sp, #4]
40005db8:	ebfff5be 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005dbc:	e59d2014 	ldr	r2, [sp, #20]
40005dc0:	e3a01005 	mov	r1, #5
40005dc4:	e282307e 	add	r3, r2, #126	; 0x7e
40005dc8:	e203c0ff 	and	ip, r3, #255	; 0xff
40005dcc:	e3a020de 	mov	r2, #222	; 0xde
40005dd0:	e1a0300a 	mov	r3, sl
40005dd4:	e1a00004 	mov	r0, r4
40005dd8:	e58dc000 	str	ip, [sp]
40005ddc:	e3a0c002 	mov	ip, #2
40005de0:	e58dc004 	str	ip, [sp, #4]
40005de4:	ebfff5b3 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005de8:	e59d1014 	ldr	r1, [sp, #20]
40005dec:	e3a0e003 	mov	lr, #3
40005df0:	e2810072 	add	r0, r1, #114	; 0x72
40005df4:	e200c0ff 	and	ip, r0, #255	; 0xff
40005df8:	e3a01005 	mov	r1, #5
40005dfc:	e3a020e0 	mov	r2, #224	; 0xe0
40005e00:	e1a0300a 	mov	r3, sl
40005e04:	e1a00004 	mov	r0, r4
40005e08:	e88d5000 	stm	sp, {ip, lr}
40005e0c:	ebfff5a9 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40005e10:	e59d2014 	ldr	r2, [sp, #20]
40005e14:	e3a01005 	mov	r1, #5
40005e18:	e242306f 	sub	r3, r2, #111	; 0x6f
40005e1c:	e203c0ff 	and	ip, r3, #255	; 0xff
40005e20:	e3a020dd 	mov	r2, #221	; 0xdd
40005e24:	e1a0300a 	mov	r3, sl
40005e28:	e1a00004 	mov	r0, r4
40005e2c:	e58dc000 	str	ip, [sp]
40005e30:	e3a0c004 	mov	ip, #4
40005e34:	e58dc004 	str	ip, [sp, #4]
40005e38:	ebfff59e 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40005e3c:	e59f12f8 	ldr	r1, [pc, #760]	; 4000613c <ControlHandle+0xf1c>
40005e40:	e3a0e005 	mov	lr, #5
40005e44:	e5d10058 	ldrb	r0, [r1, #88]	; 0x58
40005e48:	e1a0300a 	mov	r3, sl
40005e4c:	e280207f 	add	r2, r0, #127	; 0x7f
40005e50:	e202c0ff 	and	ip, r2, #255	; 0xff
40005e54:	e1a0100e 	mov	r1, lr
40005e58:	e1a0200b 	mov	r2, fp
40005e5c:	e1a00004 	mov	r0, r4
40005e60:	e88d5000 	stm	sp, {ip, lr}
40005e64:	ebfff593 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e68:	e594001c 	ldr	r0, [r4, #28]
40005e6c:	eb00107e 	bl	4000a06c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005e70:	e59f42c4 	ldr	r4, [pc, #708]	; 4000613c <ControlHandle+0xf1c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005e74:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005e78:	e5d43058 	ldrb	r3, [r4, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e7c:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005e80:	e2431080 	sub	r1, r3, #128	; 0x80
40005e84:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e88:	e59d4014 	ldr	r4, [sp, #20]
40005e8c:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005e90:	e1a0700c 	mov	r7, ip
40005e94:	eafffd04 	b	400052ac <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e98:	e59f42b4 	ldr	r4, [pc, #692]	; 40006154 <ControlHandle+0xf34>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
40005e9c:	e2433001 	sub	r3, r3, #1
40005ea0:	e20370ff 	and	r7, r3, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005ea4:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ea8:	e3e01000 	mvn	r1, #0
40005eac:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005eb0:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005eb4:	eb001037 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005eb8:	e3a0c000 	mov	ip, #0
40005ebc:	e3a01004 	mov	r1, #4
40005ec0:	e1a02009 	mov	r2, r9
40005ec4:	e1a0300a 	mov	r3, sl
40005ec8:	e1a00004 	mov	r0, r4
40005ecc:	e88d1080 	stm	sp, {r7, ip}
40005ed0:	ebfff578 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ed4:	e594001c 	ldr	r0, [r4, #28]
40005ed8:	eb001063 	bl	4000a06c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005edc:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ee0:	e3a01001 	mov	r1, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005ee4:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ee8:	e5c611f0 	strb	r1, [r6, #496]	; 0x1f0
40005eec:	e59d4014 	ldr	r4, [sp, #20]
40005ef0:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005ef4:	e1a0700c 	mov	r7, ip
40005ef8:	eafffceb 	b	400052ac <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005efc:	e59f7250 	ldr	r7, [pc, #592]	; 40006154 <ControlHandle+0xf34>
40005f00:	e3e01000 	mvn	r1, #0
40005f04:	e597001c 	ldr	r0, [r7, #28]
40005f08:	eb001022 	bl	40009f98 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f0c:	e59d0014 	ldr	r0, [sp, #20]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f10:	e5d6c1a6 	ldrb	ip, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005f14:	e3100080 	tst	r0, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f18:	01a02320 	lsreq	r2, r0, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f1c:	11a02c80 	lslne	r2, r0, #25
40005f20:	13ccc003 	bicne	ip, ip, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f24:	03ccc003 	biceq	ip, ip, #3
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f28:	e59f0224 	ldr	r0, [pc, #548]	; 40006154 <ControlHandle+0xf34>
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f2c:	03822002 	orreq	r2, r2, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005f30:	118ccfa2 	orrne	ip, ip, r2, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005f34:	0182c00c 	orreq	ip, r2, ip
							  }
							 Data1 |= ~0x03;
40005f38:	e1e04f0c 	mvn	r4, ip, lsl #30
40005f3c:	e1e03f24 	mvn	r3, r4, lsr #30
							 Data1 &= 0xC7;
40005f40:	e20310c7 	and	r1, r3, #199	; 0xc7
40005f44:	e58d101c 	str	r1, [sp, #28]
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f48:	e59d801c 	ldr	r8, [sp, #28]
40005f4c:	e3a0c000 	mov	ip, #0
40005f50:	e3a01001 	mov	r1, #1
40005f54:	e1a0200b 	mov	r2, fp
40005f58:	e1a0300a 	mov	r3, sl
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f5c:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005f60:	e88d1100 	stm	sp, {r8, ip}
40005f64:	ebfff553 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005f68:	e59d2014 	ldr	r2, [sp, #20]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f6c:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005f70:	e1a08102 	lsl	r8, r2, #2
40005f74:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005f78:	e1a02009 	mov	r2, r9
40005f7c:	e1a0300a 	mov	r3, sl
40005f80:	e59f01cc 	ldr	r0, [pc, #460]	; 40006154 <ControlHandle+0xf34>
40005f84:	e58d4004 	str	r4, [sp, #4]
40005f88:	e58d8000 	str	r8, [sp]
40005f8c:	ebfff549 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f90:	e597001c 	ldr	r0, [r7, #28]
40005f94:	eb001034 	bl	4000a06c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005f98:	e59d001c 	ldr	r0, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
40005f9c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fa0:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005fa4:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
40005fa8:	e5c601a6 	strb	r0, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fac:	e59d4014 	ldr	r4, [sp, #20]
40005fb0:	e59de018 	ldr	lr, [sp, #24]

							 break;
40005fb4:	e1a0700c 	mov	r7, ip
40005fb8:	eafffcbb 	b	400052ac <ControlHandle+0x8c>
									Data0 = 0; //set to default.
					 			 }
					 		 }
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fbc:	e59f7190 	ldr	r7, [pc, #400]	; 40006154 <ControlHandle+0xf34>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005fc0:	e59f0168 	ldr	r0, [pc, #360]	; 40006130 <ControlHandle+0xf10>
							 if(Data0 == 3)
40005fc4:	e3530003 	cmp	r3, #3
								 WDRflag = CyTrue; //WDR mode
40005fc8:	03a02001 	moveq	r2, #1
							 else
								 WDRflag = CyFalse;
40005fcc:	13a02000 	movne	r2, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fd0:	e3a0c001 	mov	ip, #1
40005fd4:	e5c6c190 	strb	ip, [r6, #400]	; 0x190
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005fd8:	e5802610 	str	r2, [r0, #1552]	; 0x610

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005fdc:	e5c6318d 	strb	r3, [r6, #397]	; 0x18d
									Data0 = 0; //set to default.
					 			 }
					 		 }
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fe0:	e3e01000 	mvn	r1, #0
40005fe4:	e597001c 	ldr	r0, [r7, #28]
40005fe8:	eb000fea 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005fec:	e59de014 	ldr	lr, [sp, #20]
40005ff0:	e3a04000 	mov	r4, #0
40005ff4:	e1a01004 	mov	r1, r4
40005ff8:	e1a02009 	mov	r2, r9
40005ffc:	e1a0300a 	mov	r3, sl
40006000:	e1a00007 	mov	r0, r7
40006004:	e58de000 	str	lr, [sp]
40006008:	e58d4004 	str	r4, [sp, #4]
4000600c:	ebfff529 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006010:	e597001c 	ldr	r0, [r7, #28]
40006014:	eb001014 	bl	4000a06c <_txe_mutex_put>
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40006018:	e59f211c 	ldr	r2, [pc, #284]	; 4000613c <ControlHandle+0xf1c>
4000601c:	e5963610 	ldr	r3, [r6, #1552]	; 0x610
40006020:	e5d2c05a 	ldrb	ip, [r2, #90]	; 0x5a
40006024:	e5d2e05b 	ldrb	lr, [r2, #91]	; 0x5b
40006028:	e59d4014 	ldr	r4, [sp, #20]
4000602c:	e3a00004 	mov	r0, #4
40006030:	e59f112c 	ldr	r1, [pc, #300]	; 40006164 <ControlHandle+0xf44>
40006034:	eafffeb0 	b	40005afc <ControlHandle+0x8dc>

					 		 break;
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006038:	e59f7114 	ldr	r7, [pc, #276]	; 40006154 <ControlHandle+0xf34>
4000603c:	e3e01000 	mvn	r1, #0
40006040:	e597001c 	ldr	r0, [r7, #28]
40006044:	eb000fd3 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40006048:	e59dc014 	ldr	ip, [sp, #20]
4000604c:	e1a01004 	mov	r1, r4
40006050:	e1a02009 	mov	r2, r9
40006054:	e1a0300a 	mov	r3, sl
40006058:	e1a00007 	mov	r0, r7
4000605c:	e58dc000 	str	ip, [sp]
40006060:	e3a0c000 	mov	ip, #0
40006064:	e58dc004 	str	ip, [sp, #4]
40006068:	ebfff512 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000606c:	e597001c 	ldr	r0, [r7, #28]
40006070:	eb000ffd 	bl	4000a06c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40006074:	e59d2014 	ldr	r2, [sp, #20]
40006078:	e0847084 	add	r7, r4, r4, lsl #1
4000607c:	e0866187 	add	r6, r6, r7, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40006080:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006084:	e3a03001 	mov	r3, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40006088:	e5c6218d 	strb	r2, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
4000608c:	e5c63190 	strb	r3, [r6, #400]	; 0x190
40006090:	e1a04002 	mov	r4, r2
40006094:	e59de018 	ldr	lr, [sp, #24]
							 break;
40006098:	e1a0700c 	mov	r7, ip
4000609c:	eafffc82 	b	400052ac <ControlHandle+0x8c>
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
400060a0:	e3a00004 	mov	r0, #4
400060a4:	e59f10bc 	ldr	r1, [pc, #188]	; 40006168 <ControlHandle+0xf48>
400060a8:	eb00336c 	bl	40012e60 <CyU3PDebugPrint>
400060ac:	e3a0c0ff 	mov	ip, #255	; 0xff
400060b0:	e1a0700c 	mov	r7, ip
400060b4:	e1a0e00c 	mov	lr, ip
400060b8:	e1a0400c 	mov	r4, ip
400060bc:	eafffc7a 	b	400052ac <ControlHandle+0x8c>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060c0:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400060c4:	e2407001 	sub	r7, r0, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060c8:	e3520004 	cmp	r2, #4
400060cc:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
400060d0:	e20710ff 	and	r1, r7, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
400060d4:	0a000003 	beq	400060e8 <ControlHandle+0xec8>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
400060d8:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
400060dc:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
400060e0:	13a02004 	movne	r2, #4
400060e4:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
400060e8:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400060ec:	959f3078 	ldrls	r3, [pc, #120]	; 4000616c <ControlHandle+0xf4c>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
400060f0:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
400060f4:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
400060f8:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
400060fc:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006100:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006104:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006108:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
4000610c:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
40006110:	eafffeba 	b	40005c00 <ControlHandle+0x9e0>
40006114:	e59f0020 	ldr	r0, [pc, #32]	; 4000613c <ControlHandle+0xf1c>
40006118:	eafffd89 	b	40005744 <ControlHandle+0x524>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000611c:	e3a03000 	mov	r3, #0
40006120:	eafffe2d 	b	400059dc <ControlHandle+0x7bc>
40006124:	e59f0010 	ldr	r0, [pc, #16]	; 4000613c <ControlHandle+0xf1c>
40006128:	e3a03000 	mov	r3, #0
4000612c:	eafffd7d 	b	40005728 <ControlHandle+0x508>
40006130:	40030000 	.word	0x40030000
40006134:	4003310c 	.word	0x4003310c
40006138:	40011390 	.word	0x40011390
4000613c:	40030f90 	.word	0x40030f90
40006140:	40030fe8 	.word	0x40030fe8
40006144:	00010001 	.word	0x00010001
40006148:	00ff00ff 	.word	0x00ff00ff
4000614c:	4001129c 	.word	0x4001129c
40006150:	400112d8 	.word	0x400112d8
40006154:	40032ec4 	.word	0x40032ec4
40006158:	40030fdc 	.word	0x40030fdc
4000615c:	4001132c 	.word	0x4001132c
40006160:	40011300 	.word	0x40011300
40006164:	40011348 	.word	0x40011348
40006168:	40011360 	.word	0x40011360
4000616c:	4001100c 	.word	0x4001100c

40006170 <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006170:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006174:	e59fa960 	ldr	sl, [pc, #2400]	; 40006adc <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006178:	e59f8960 	ldr	r8, [pc, #2400]	; 40006ae0 <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000617c:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006180:	e1a09080 	lsl	r9, r0, #1
40006184:	e0892000 	add	r2, r9, r0
40006188:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
4000618c:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006190:	e24dd05c 	sub	sp, sp, #92	; 0x5c
40006194:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006198:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
4000619c:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
400061a0:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400061a4:	0a000076 	beq	40006384 <CTControlHandle+0x214>
400061a8:	9a000021 	bls	40006234 <CTControlHandle+0xc4>
400061ac:	e3550085 	cmp	r5, #133	; 0x85
400061b0:	0a000059 	beq	4000631c <CTControlHandle+0x1ac>
400061b4:	3a00004e 	bcc	400062f4 <CTControlHandle+0x184>
400061b8:	e3550086 	cmp	r5, #134	; 0x86
400061bc:	0a000080 	beq	400063c4 <CTControlHandle+0x254>
400061c0:	e3550087 	cmp	r5, #135	; 0x87
400061c4:	0a000076 	beq	400063a4 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400061c8:	e3a00000 	mov	r0, #0
400061cc:	e3a01001 	mov	r1, #1
400061d0:	e1a02000 	mov	r2, r0
400061d4:	eb005e89 	bl	4001dc00 <CyU3PUsbStall>
400061d8:	e59f4904 	ldr	r4, [pc, #2308]	; 40006ae4 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400061dc:	e1a02006 	mov	r2, r6
400061e0:	e3a00004 	mov	r0, #4
400061e4:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006ae8 <CTControlHandle+0x978>
400061e8:	e5da3000 	ldrb	r3, [sl]
400061ec:	eb00331b 	bl	40012e60 <CyU3PDebugPrint>
			  break;
400061f0:	e3a0c0ff 	mov	ip, #255	; 0xff
400061f4:	e1a0600c 	mov	r6, ip
400061f8:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
400061fc:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
40006200:	e58dc008 	str	ip, [sp, #8]
40006204:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006aec <CTControlHandle+0x97c>
40006208:	e3a0c0ff 	mov	ip, #255	; 0xff
4000620c:	e1a02005 	mov	r2, r5
40006210:	e1a03008 	mov	r3, r8
40006214:	e3a00004 	mov	r0, #4
40006218:	e88d4040 	stm	sp, {r6, lr}
4000621c:	e58dc00c 	str	ip, [sp, #12]
40006220:	e58de010 	str	lr, [sp, #16]
40006224:	e58d7014 	str	r7, [sp, #20]
40006228:	eb00330c 	bl	40012e60 <CyU3PDebugPrint>
}
4000622c:	e28dd05c 	add	sp, sp, #92	; 0x5c
40006230:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006234:	e3550081 	cmp	r5, #129	; 0x81
40006238:	0a000042 	beq	40006348 <CTControlHandle+0x1d8>
4000623c:	9a000011 	bls	40006288 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006240:	e59f489c 	ldr	r4, [pc, #2204]	; 40006ae4 <CTControlHandle+0x974>
40006244:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006248:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
4000624c:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
40006250:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
40006254:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
40006258:	0a00002c 	beq	40006310 <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
4000625c:	e3a0e000 	mov	lr, #0
40006260:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
40006264:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006268:	e1a00007 	mov	r0, r7
4000626c:	e59f187c 	ldr	r1, [pc, #2172]	; 40006af0 <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
40006270:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
40006274:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006278:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
4000627c:	eb005c34 	bl	4001d354 <CyU3PUsbSendEP0Data>
40006280:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006284:	eaffffdc 	b	400061fc <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006288:	e3550001 	cmp	r5, #1
4000628c:	1affffcd 	bne	400061c8 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006290:	e59f484c 	ldr	r4, [pc, #2124]	; 40006ae4 <CTControlHandle+0x974>
40006294:	e28d2056 	add	r2, sp, #86	; 0x56
40006298:	e3a00020 	mov	r0, #32
4000629c:	e2841058 	add	r1, r4, #88	; 0x58
400062a0:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400062a4:	eb0059bc 	bl	4001c99c <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400062a8:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
400062ac:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
400062b0:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
400062b4:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
400062b8:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
400062bc:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400062c0:	e3520009 	cmp	r2, #9
400062c4:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
400062c8:	ea000155 	b	40006824 <CTControlHandle+0x6b4>
400062cc:	400067e0 	.word	0x400067e0
400062d0:	40006824 	.word	0x40006824
400062d4:	400064f0 	.word	0x400064f0
400062d8:	40006824 	.word	0x40006824
400062dc:	40006824 	.word	0x40006824
400062e0:	40006824 	.word	0x40006824
400062e4:	4000646c 	.word	0x4000646c
400062e8:	40006824 	.word	0x40006824
400062ec:	40006824 	.word	0x40006824
400062f0:	400063f0 	.word	0x400063f0
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
400062f4:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006ae4 <CTControlHandle+0x974>
400062f8:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
400062fc:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006300:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006304:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006308:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000630c:	1affffd2 	bne	4000625c <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006310:	e3a01001 	mov	r1, #1
40006314:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
40006318:	eaffffd1 	b	40006264 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
4000631c:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006ae4 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
40006320:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40006324:	e3a00002 	mov	r0, #2
40006328:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
4000632c:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
40006330:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
40006334:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006338:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000633c:	eb005c04 	bl	4001d354 <CyU3PUsbSendEP0Data>
40006340:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006344:	eaffffac 	b	400061fc <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006348:	e59f4794 	ldr	r4, [pc, #1940]	; 40006ae4 <CTControlHandle+0x974>
4000634c:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006350:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
40006354:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006358:	e1a00007 	mov	r0, r7
4000635c:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006360:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
40006364:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
40006368:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
4000636c:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
40006370:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006374:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006378:	eb005bf5 	bl	4001d354 <CyU3PUsbSendEP0Data>
4000637c:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006380:	eaffff9d 	b	400061fc <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006384:	e59f4758 	ldr	r4, [pc, #1880]	; 40006ae4 <CTControlHandle+0x974>
40006388:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
4000638c:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006390:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006394:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006398:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000639c:	1affffae 	bne	4000625c <CTControlHandle+0xec>
400063a0:	eaffffda 	b	40006310 <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400063a4:	e59f4738 	ldr	r4, [pc, #1848]	; 40006ae4 <CTControlHandle+0x974>
400063a8:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400063ac:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063b0:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
400063b4:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
400063b8:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
400063bc:	1affffa6 	bne	4000625c <CTControlHandle+0xec>
400063c0:	eaffffd2 	b	40006310 <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
400063c4:	e59f4718 	ldr	r4, [pc, #1816]	; 40006ae4 <CTControlHandle+0x974>
400063c8:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
400063cc:	e1a01004 	mov	r1, r4
400063d0:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400063d4:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400063d8:	e3a00001 	mov	r0, #1
400063dc:	eb005bdc 	bl	4001d354 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400063e0:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400063e4:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400063e8:	e3a07001 	mov	r7, #1
400063ec:	eaffff82 	b	400061fc <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400063f0:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006af4 <CTControlHandle+0x984>
400063f4:	e3e01000 	mvn	r1, #0
400063f8:	e596001c 	ldr	r0, [r6, #28]
400063fc:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006400:	eb000ee4 	bl	40009f98 <_txe_mutex_get>
					  if(getData == 1)
40006404:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006408:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000640c:	e35e0001 	cmp	lr, #1
40006410:	0a0001a9 	beq	40006abc <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
40006414:	e35e00ff 	cmp	lr, #255	; 0xff
40006418:	0a00019e 	beq	40006a98 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, STOP, dataIdx);
4000641c:	e3a08000 	mov	r8, #0
40006420:	e1a00006 	mov	r0, r6
40006424:	e3a01023 	mov	r1, #35	; 0x23
40006428:	e1a0200b 	mov	r2, fp
4000642c:	e58d8000 	str	r8, [sp]
40006430:	e58d8004 	str	r8, [sp, #4]
40006434:	ebfff41f 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006438:	e596001c 	ldr	r0, [r6, #28]
4000643c:	eb000f0a 	bl	4000a06c <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
40006440:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40006444:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
40006448:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
4000644c:	e3a00004 	mov	r0, #4
40006450:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006af8 <CTControlHandle+0x988>
40006454:	e1a02008 	mov	r2, r8
40006458:	e1a03006 	mov	r3, r6
4000645c:	e58dc000 	str	ip, [sp]
40006460:	eb00327e 	bl	40012e60 <CyU3PDebugPrint>
					  break;
40006464:	e3a0c0ff 	mov	ip, #255	; 0xff
40006468:	eaffff63 	b	400061fc <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
4000646c:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
40006470:	e3580001 	cmp	r8, #1
40006474:	13580008 	cmpne	r8, #8
40006478:	13a00000 	movne	r0, #0
4000647c:	03a00001 	moveq	r0, #1
40006480:	1a000180 	bne	40006a88 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006484:	e59f8668 	ldr	r8, [pc, #1640]	; 40006af4 <CTControlHandle+0x984>
40006488:	e3e01000 	mvn	r1, #0
4000648c:	e598001c 	ldr	r0, [r8, #28]
40006490:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006494:	eb000ebf 	bl	40009f98 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
40006498:	e59da030 	ldr	sl, [sp, #48]	; 0x30
4000649c:	e3a01022 	mov	r1, #34	; 0x22
400064a0:	e1a0200b 	mov	r2, fp
400064a4:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400064a8:	e3a0c000 	mov	ip, #0
400064ac:	e1a00008 	mov	r0, r8
400064b0:	e88d1400 	stm	sp, {sl, ip}
400064b4:	ebfff3ff 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400064b8:	e598001c 	ldr	r0, [r8, #28]
400064bc:	eb000eea 	bl	4000a06c <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400064c0:	e59f0618 	ldr	r0, [pc, #1560]	; 40006ae0 <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
400064c4:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400064c8:	e0891006 	add	r1, r9, r6
400064cc:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400064d0:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
400064d4:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
400064d8:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
400064dc:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
400064e0:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
400064e4:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
400064e8:	e3a0c0ff 	mov	ip, #255	; 0xff
400064ec:	eaffff42 	b	400061fc <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
400064f0:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
400064f4:	e3500001 	cmp	r0, #1
400064f8:	13500004 	cmpne	r0, #4
400064fc:	1a00015c 	bne	40006a74 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
40006500:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006504:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006508:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
4000650c:	e35200f9 	cmp	r2, #249	; 0xf9
40006510:	8a000157 	bhi	40006a74 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006514:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006518:	e1a0c80a 	lsl	ip, sl, #16
4000651c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
40006520:	e262a027 	rsb	sl, r2, #39	; 0x27
40006524:	e58da038 	str	sl, [sp, #56]	; 0x38
40006528:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
4000652c:	e26210c8 	rsb	r1, r2, #200	; 0xc8
40006530:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006534:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
40006538:	e1a01801 	lsl	r1, r1, #16
4000653c:	e262e064 	rsb	lr, r2, #100	; 0x64
40006540:	81a0182a 	lsrhi	r1, sl, #16
40006544:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006548:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000654c:	e3520064 	cmp	r2, #100	; 0x64
40006550:	e1a0080e 	lsl	r0, lr, #16
40006554:	81a0082c 	lsrhi	r0, ip, #16
40006558:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000655c:	e242a014 	sub	sl, r2, #20
40006560:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006564:	91a00820 	lsrls	r0, r0, #16
40006568:	e262a014 	rsb	sl, r2, #20
4000656c:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006570:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
40006574:	e1510000 	cmp	r1, r0
40006578:	31a0a001 	movcc	sl, r1
4000657c:	21a0a000 	movcs	sl, r0
40006580:	e1a0c80c 	lsl	ip, ip, #16
40006584:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006588:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000658c:	91a0e82c 	lsrls	lr, ip, #16
40006590:	e59fc564 	ldr	ip, [pc, #1380]	; 40006afc <CTControlHandle+0x98c>
40006594:	e58da020 	str	sl, [sp, #32]
40006598:	e06ca001 	rsb	sl, ip, r1
4000659c:	81a0e82e 	lsrhi	lr, lr, #16
400065a0:	e27ac000 	rsbs	ip, sl, #0
400065a4:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065a8:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400065ac:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065b0:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400065b4:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065b8:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
400065bc:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065c0:	e242a00a 	sub	sl, r2, #10
400065c4:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400065c8:	e59da020 	ldr	sl, [sp, #32]
400065cc:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400065d0:	e15e000a 	cmp	lr, sl
400065d4:	31a0a00e 	movcc	sl, lr
400065d8:	e262c00a 	rsb	ip, r2, #10
400065dc:	e58dc040 	str	ip, [sp, #64]	; 0x40
400065e0:	e58da038 	str	sl, [sp, #56]	; 0x38
400065e4:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400065e8:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400065ec:	e3520014 	cmp	r2, #20
400065f0:	91a0a82c 	lsrls	sl, ip, #16
400065f4:	81a0a82a 	lsrhi	sl, sl, #16
400065f8:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400065fc:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006600:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006604:	33a0c001 	movcc	ip, #1
40006608:	e58da03c 	str	sl, [sp, #60]	; 0x3c
4000660c:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006610:	e1a0a801 	lsl	sl, r1, #16
40006614:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006618:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000661c:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006620:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
40006624:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006628:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
4000662c:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006630:	e58d104c 	str	r1, [sp, #76]	; 0x4c
40006634:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
40006638:	e1a00800 	lsl	r0, r0, #16
4000663c:	e15c000a 	cmp	ip, sl
40006640:	21a0c00a 	movcs	ip, sl
40006644:	e352000a 	cmp	r2, #10
40006648:	e59da020 	ldr	sl, [sp, #32]
4000664c:	81a00821 	lsrhi	r0, r1, #16
40006650:	91a00820 	lsrls	r0, r0, #16
40006654:	e58d0048 	str	r0, [sp, #72]	; 0x48
40006658:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000665c:	e15e000a 	cmp	lr, sl
40006660:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006664:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
40006668:	e58dc044 	str	ip, [sp, #68]	; 0x44
4000666c:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006670:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006674:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006678:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
4000667c:	e59de048 	ldr	lr, [sp, #72]	; 0x48
40006680:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
40006684:	e262a002 	rsb	sl, r2, #2
40006688:	e15e0000 	cmp	lr, r0
4000668c:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006690:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006694:	e3520005 	cmp	r2, #5
40006698:	e58da040 	str	sl, [sp, #64]	; 0x40
4000669c:	e1a01801 	lsl	r1, r1, #16
400066a0:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400066a4:	81a0182c 	lsrhi	r1, ip, #16
400066a8:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
400066ac:	e58de04c 	str	lr, [sp, #76]	; 0x4c
400066b0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400066b4:	e59de040 	ldr	lr, [sp, #64]	; 0x40
400066b8:	91a01821 	lsrls	r1, r1, #16
400066bc:	e15a000c 	cmp	sl, ip
400066c0:	e58d1020 	str	r1, [sp, #32]
400066c4:	33a00003 	movcc	r0, #3
400066c8:	e58d0038 	str	r0, [sp, #56]	; 0x38
400066cc:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400066d0:	e1a0080e 	lsl	r0, lr, #16
400066d4:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066d8:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400066dc:	e15e000a 	cmp	lr, sl
400066e0:	21a0e00a 	movcs	lr, sl
400066e4:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
400066e8:	e59da048 	ldr	sl, [sp, #72]	; 0x48
400066ec:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066f0:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400066f4:	91a01820 	lsrls	r1, r0, #16
400066f8:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
400066fc:	81a01821 	lsrhi	r1, r1, #16
40006700:	e15a000c 	cmp	sl, ip
40006704:	33a00004 	movcc	r0, #4
40006708:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000670c:	e2420001 	sub	r0, r2, #1
40006710:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006714:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006718:	e59d0020 	ldr	r0, [sp, #32]
4000671c:	e262c001 	rsb	ip, r2, #1
40006720:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006724:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006728:	e59da038 	ldr	sl, [sp, #56]	; 0x38
4000672c:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006730:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006734:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006738:	e3520001 	cmp	r2, #1
4000673c:	91a02800 	lslls	r2, r0, #16
40006740:	81a0280a 	lslhi	r2, sl, #16
40006744:	e151000e 	cmp	r1, lr
40006748:	31a0a001 	movcc	sl, r1
4000674c:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
40006750:	e151000e 	cmp	r1, lr
40006754:	21a0100c 	movcs	r1, ip
40006758:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
4000675c:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006760:	e59fa38c 	ldr	sl, [pc, #908]	; 40006af4 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006764:	91a02001 	movls	r2, r1
40006768:	83a02007 	movhi	r2, #7
4000676c:	e2822001 	add	r2, r2, #1
40006770:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006774:	e3e01000 	mvn	r1, #0
40006778:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
4000677c:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006780:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006784:	eb000e03 	bl	40009f98 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006788:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
4000678c:	e3a01003 	mov	r1, #3
40006790:	e1a0200b 	mov	r2, fp
40006794:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006798:	e58dc000 	str	ip, [sp]
4000679c:	e1a0000a 	mov	r0, sl
400067a0:	e3a0c000 	mov	ip, #0
400067a4:	e58dc004 	str	ip, [sp, #4]
400067a8:	ebfff342 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400067ac:	e59a001c 	ldr	r0, [sl, #28]
400067b0:	eb000e2d 	bl	4000a06c <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400067b4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
400067b8:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
400067bc:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400067c0:	e0891006 	add	r1, r9, r6
400067c4:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
400067c8:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
400067cc:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
400067d0:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
400067d4:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
400067d8:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
400067dc:	eaffff3f 	b	400064e0 <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
400067e0:	e0892006 	add	r2, r9, r6
400067e4:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
400067e8:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
400067ec:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
400067f0:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
400067f4:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
400067f8:	e35e0007 	cmp	lr, #7
400067fc:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
40006800:	ea000097 	b	40006a64 <CTControlHandle+0x8f4>
40006804:	400069f8 	.word	0x400069f8
40006808:	4000695c 	.word	0x4000695c
4000680c:	40006a64 	.word	0x40006a64
40006810:	400068f8 	.word	0x400068f8
40006814:	40006a64 	.word	0x40006a64
40006818:	40006a64 	.word	0x40006a64
4000681c:	40006a64 	.word	0x40006a64
40006820:	40006858 	.word	0x40006858
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006824:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006828:	e59da030 	ldr	sl, [sp, #48]	; 0x30
4000682c:	e0899006 	add	r9, r9, r6
40006830:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006834:	e1a02006 	mov	r2, r6
40006838:	e3a00004 	mov	r0, #4
4000683c:	e59f12bc 	ldr	r1, [pc, #700]	; 40006b00 <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
40006840:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006844:	eb003185 	bl	40012e60 <CyU3PDebugPrint>
			  		 break;
40006848:	e3a0c0ff 	mov	ip, #255	; 0xff
4000684c:	e1a0600c 	mov	r6, ip
40006850:	e1a0800c 	mov	r8, ip
40006854:	eafffe68 	b	400061fc <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006858:	e59f6294 	ldr	r6, [pc, #660]	; 40006af4 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
4000685c:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006860:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006864:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006868:	e3e01000 	mvn	r1, #0
4000686c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006870:	eb000dc8 	bl	40009f98 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006874:	e1a0200b 	mov	r2, fp
40006878:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000687c:	e3a01010 	mov	r1, #16
40006880:	e1a00006 	mov	r0, r6
40006884:	e58da000 	str	sl, [sp]
40006888:	e58da004 	str	sl, [sp, #4]
4000688c:	ebfff309 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006890:	e596001c 	ldr	r0, [r6, #28]
40006894:	eb000df4 	bl	4000a06c <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006898:	e3e01000 	mvn	r1, #0
4000689c:	e596001c 	ldr	r0, [r6, #28]
400068a0:	eb000dbc 	bl	40009f98 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400068a4:	e3a08001 	mov	r8, #1
400068a8:	e3a01020 	mov	r1, #32
400068ac:	e3a02027 	mov	r2, #39	; 0x27
400068b0:	e3a03030 	mov	r3, #48	; 0x30
400068b4:	e1a00006 	mov	r0, r6
400068b8:	e88d0500 	stm	sp, {r8, sl}
400068bc:	ebfff2fd 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400068c0:	e3a0c002 	mov	ip, #2
400068c4:	e3a01021 	mov	r1, #33	; 0x21
400068c8:	e3a02025 	mov	r2, #37	; 0x25
400068cc:	e3a03030 	mov	r3, #48	; 0x30
400068d0:	e1a00006 	mov	r0, r6
400068d4:	e58dc000 	str	ip, [sp]
400068d8:	e58da004 	str	sl, [sp, #4]
400068dc:	ebfff2f5 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400068e0:	e596001c 	ldr	r0, [r6, #28]
400068e4:	eb000de0 	bl	4000a06c <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
400068e8:	e3a0c0ff 	mov	ip, #255	; 0xff
400068ec:	e1a0600c 	mov	r6, ip
400068f0:	e3a08008 	mov	r8, #8
400068f4:	eafffe40 	b	400061fc <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068f8:	e59f81f4 	ldr	r8, [pc, #500]	; 40006af4 <CTControlHandle+0x984>
400068fc:	e3e01000 	mvn	r1, #0
40006900:	e598001c 	ldr	r0, [r8, #28]
40006904:	eb000da3 	bl	40009f98 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006908:	e3a06000 	mov	r6, #0
4000690c:	e3a01020 	mov	r1, #32
40006910:	e3a02027 	mov	r2, #39	; 0x27
40006914:	e3a03030 	mov	r3, #48	; 0x30
40006918:	e1a00008 	mov	r0, r8
4000691c:	e58d6000 	str	r6, [sp]
40006920:	e58d6004 	str	r6, [sp, #4]
40006924:	ebfff2e3 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006928:	e3a01021 	mov	r1, #33	; 0x21
4000692c:	e3a02025 	mov	r2, #37	; 0x25
40006930:	e3a03030 	mov	r3, #48	; 0x30
40006934:	e1a00008 	mov	r0, r8
40006938:	e58d6000 	str	r6, [sp]
4000693c:	e58d6004 	str	r6, [sp, #4]
40006940:	ebfff2dc 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006944:	e598001c 	ldr	r0, [r8, #28]
40006948:	eb000dc7 	bl	4000a06c <_txe_mutex_put>
4000694c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006950:	e1a0600c 	mov	r6, ip
40006954:	e3a08004 	mov	r8, #4
40006958:	eafffe27 	b	400061fc <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000695c:	e59fa190 	ldr	sl, [pc, #400]	; 40006af4 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
40006960:	e3a06000 	mov	r6, #0
40006964:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006968:	e3e01000 	mvn	r1, #0
4000696c:	e59a001c 	ldr	r0, [sl, #28]
40006970:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006974:	eb000d87 	bl	40009f98 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006978:	e1a0200b 	mov	r2, fp
4000697c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006980:	e3a01010 	mov	r1, #16
40006984:	e1a0000a 	mov	r0, sl
40006988:	e58d6000 	str	r6, [sp]
4000698c:	e58d6004 	str	r6, [sp, #4]
40006990:	ebfff2c8 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006994:	e59a001c 	ldr	r0, [sl, #28]
40006998:	eb000db3 	bl	4000a06c <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000699c:	e3e01000 	mvn	r1, #0
400069a0:	e59a001c 	ldr	r0, [sl, #28]
400069a4:	eb000d7b 	bl	40009f98 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400069a8:	e3a01020 	mov	r1, #32
400069ac:	e3a02027 	mov	r2, #39	; 0x27
400069b0:	e3a03030 	mov	r3, #48	; 0x30
400069b4:	e1a0000a 	mov	r0, sl
400069b8:	e58d6000 	str	r6, [sp]
400069bc:	e58d6004 	str	r6, [sp, #4]
400069c0:	ebfff2bc 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400069c4:	e3a01021 	mov	r1, #33	; 0x21
400069c8:	e3a02025 	mov	r2, #37	; 0x25
400069cc:	e3a03030 	mov	r3, #48	; 0x30
400069d0:	e1a0000a 	mov	r0, sl
400069d4:	e58d6000 	str	r6, [sp]
400069d8:	e58d6004 	str	r6, [sp, #4]
400069dc:	ebfff2b5 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069e0:	e59a001c 	ldr	r0, [sl, #28]
400069e4:	eb000da0 	bl	4000a06c <_txe_mutex_put>
400069e8:	e3a0c0ff 	mov	ip, #255	; 0xff
400069ec:	e1a0600c 	mov	r6, ip
400069f0:	e3a08002 	mov	r8, #2
400069f4:	eafffe00 	b	400061fc <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069f8:	e59f60f4 	ldr	r6, [pc, #244]	; 40006af4 <CTControlHandle+0x984>
400069fc:	e3e01000 	mvn	r1, #0
40006a00:	e596001c 	ldr	r0, [r6, #28]
40006a04:	eb000d63 	bl	40009f98 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a08:	e3a08000 	mov	r8, #0
40006a0c:	e3a0a001 	mov	sl, #1
40006a10:	e3a01020 	mov	r1, #32
40006a14:	e3a02027 	mov	r2, #39	; 0x27
40006a18:	e3a03030 	mov	r3, #48	; 0x30
40006a1c:	e1a00006 	mov	r0, r6
40006a20:	e58d8004 	str	r8, [sp, #4]
40006a24:	e58da000 	str	sl, [sp]
40006a28:	ebfff2a2 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a2c:	e3a0c002 	mov	ip, #2
40006a30:	e3a01021 	mov	r1, #33	; 0x21
40006a34:	e3a02025 	mov	r2, #37	; 0x25
40006a38:	e3a03030 	mov	r3, #48	; 0x30
40006a3c:	e1a00006 	mov	r0, r6
40006a40:	e58dc000 	str	ip, [sp]
40006a44:	e58d8004 	str	r8, [sp, #4]
40006a48:	ebfff29a 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a4c:	e596001c 	ldr	r0, [r6, #28]
40006a50:	eb000d85 	bl	4000a06c <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006a54:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a58:	e1a0600c 	mov	r6, ip
40006a5c:	e1a0800a 	mov	r8, sl
40006a60:	eafffde5 	b	400061fc <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006a64:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a68:	e1a08000 	mov	r8, r0
40006a6c:	e1a0600c 	mov	r6, ip
40006a70:	eafffde1 	b	400061fc <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006a74:	e3a00000 	mov	r0, #0
40006a78:	e3a01001 	mov	r1, #1
40006a7c:	e1a02000 	mov	r2, r0
40006a80:	eb005c5e 	bl	4001dc00 <CyU3PUsbStall>
40006a84:	eafffe95 	b	400064e0 <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006a88:	e3a01001 	mov	r1, #1
40006a8c:	e1a02000 	mov	r2, r0
40006a90:	eb005c5a 	bl	4001dc00 <CyU3PUsbStall>
40006a94:	eafffe91 	b	400064e0 <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006a98:	e3a0e008 	mov	lr, #8
40006a9c:	e3a0c000 	mov	ip, #0
40006aa0:	e1a00006 	mov	r0, r6
40006aa4:	e3a01023 	mov	r1, #35	; 0x23
40006aa8:	e1a0200b 	mov	r2, fp
40006aac:	e58de000 	str	lr, [sp]
40006ab0:	e58dc004 	str	ip, [sp, #4]
40006ab4:	ebfff27f 	bl	400034b8 <cmdSet>
40006ab8:	eafffe5e 	b	40006438 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006abc:	e3a08004 	mov	r8, #4
40006ac0:	e3a0e000 	mov	lr, #0
40006ac4:	e1a00006 	mov	r0, r6
40006ac8:	e3a01023 	mov	r1, #35	; 0x23
40006acc:	e1a0200b 	mov	r2, fp
40006ad0:	e88d4100 	stm	sp, {r8, lr}
40006ad4:	ebfff277 	bl	400034b8 <cmdSet>
40006ad8:	eafffe56 	b	40006438 <CTControlHandle+0x2c8>
40006adc:	4003310c 	.word	0x4003310c
40006ae0:	40030000 	.word	0x40030000
40006ae4:	40030f90 	.word	0x40030f90
40006ae8:	4001142c 	.word	0x4001142c
40006aec:	40011450 	.word	0x40011450
40006af0:	40030fe8 	.word	0x40030fe8
40006af4:	40032ec4 	.word	0x40032ec4
40006af8:	400113e0 	.word	0x400113e0
40006afc:	0000ffff 	.word	0x0000ffff
40006b00:	40011408 	.word	0x40011408

40006b04 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006b04:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006b08:	e59f49dc 	ldr	r4, [pc, #2524]	; 400074ec <UVCAppEP0Thread_Entry+0x9e8>
40006b0c:	e59f69dc 	ldr	r6, [pc, #2524]	; 400074f0 <UVCAppEP0Thread_Entry+0x9ec>
40006b10:	e59f89dc 	ldr	r8, [pc, #2524]	; 400074f4 <UVCAppEP0Thread_Entry+0x9f0>
40006b14:	e59f99dc 	ldr	r9, [pc, #2524]	; 400074f8 <UVCAppEP0Thread_Entry+0x9f4>
40006b18:	e59fa9dc 	ldr	sl, [pc, #2524]	; 400074fc <UVCAppEP0Thread_Entry+0x9f8>
40006b1c:	e59f79dc 	ldr	r7, [pc, #2524]	; 40007500 <UVCAppEP0Thread_Entry+0x9fc>
40006b20:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006b24:	e1a05004 	mov	r5, r4
40006b28:	e3e0c000 	mvn	ip, #0
40006b2c:	e59f09b8 	ldr	r0, [pc, #2488]	; 400074ec <UVCAppEP0Thread_Entry+0x9e8>
40006b30:	e3a0104c 	mov	r1, #76	; 0x4c
40006b34:	e3a02001 	mov	r2, #1
40006b38:	e28d3030 	add	r3, sp, #48	; 0x30
40006b3c:	e58dc000 	str	ip, [sp]
40006b40:	eb000c4c 	bl	40009c78 <_txe_event_flags_get>
40006b44:	e3500000 	cmp	r0, #0
40006b48:	1a000030 	bne	40006c10 <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006b4c:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40006b50:	e3530000 	cmp	r3, #0
40006b54:	0a000089 	beq	40006d80 <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006b58:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006b5c:	e313000c 	tst	r3, #12
40006b60:	1a000072 	bne	40006d30 <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006b64:	e3130004 	tst	r3, #4
40006b68:	0a00001c 	beq	40006be0 <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006b6c:	e1dae0b0 	ldrh	lr, [sl]
40006b70:	e1a0242e 	lsr	r2, lr, #8
40006b74:	e3520003 	cmp	r2, #3
40006b78:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006b7c:	ea000012 	b	40006bcc <UVCAppEP0Thread_Entry+0xc8>
40006b80:	40006bcc 	.word	0x40006bcc
40006b84:	40006cb0 	.word	0x40006cb0
40006b88:	40006b90 	.word	0x40006b90
40006b8c:	40006cec 	.word	0x40006cec
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006b90:	e1d920b0 	ldrh	r2, [r9]
40006b94:	e3520c06 	cmp	r2, #1536	; 0x600
40006b98:	0a0001d9 	beq	40007304 <UVCAppEP0Thread_Entry+0x800>
40006b9c:	8a0000cc 	bhi	40006ed4 <UVCAppEP0Thread_Entry+0x3d0>
40006ba0:	e3520c03 	cmp	r2, #768	; 0x300
40006ba4:	0a0001d2 	beq	400072f4 <UVCAppEP0Thread_Entry+0x7f0>
40006ba8:	8a0001c9 	bhi	400072d4 <UVCAppEP0Thread_Entry+0x7d0>
40006bac:	e3520c01 	cmp	r2, #256	; 0x100
40006bb0:	0a000168 	beq	40007158 <UVCAppEP0Thread_Entry+0x654>
40006bb4:	e3520c02 	cmp	r2, #512	; 0x200
40006bb8:	0a000162 	beq	40007148 <UVCAppEP0Thread_Entry+0x644>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006bbc:	e59f1940 	ldr	r1, [pc, #2368]	; 40007504 <UVCAppEP0Thread_Entry+0xa00>
40006bc0:	e5d83000 	ldrb	r3, [r8]
40006bc4:	e3a00004 	mov	r0, #4
40006bc8:	eb0030a4 	bl	40012e60 <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006bcc:	e3a00000 	mov	r0, #0
40006bd0:	e3a01001 	mov	r1, #1
40006bd4:	e1a02000 	mov	r2, r0
40006bd8:	eb005c08 	bl	4001dc00 <CyU3PUsbStall>
40006bdc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006be0:	e3130008 	tst	r3, #8
40006be4:	0a000007 	beq	40006c08 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006be8:	e1da30b0 	ldrh	r3, [sl]
40006bec:	e3530001 	cmp	r3, #1
40006bf0:	0a000068 	beq	40006d98 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006bf4:	e3a00000 	mov	r0, #0
40006bf8:	e3a01001 	mov	r1, #1
40006bfc:	e1a02000 	mov	r2, r0
40006c00:	eb005bfe 	bl	4001dc00 <CyU3PUsbStall>
40006c04:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006c08:	e3130040 	tst	r3, #64	; 0x40
40006c0c:	1a000001 	bne	40006c18 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006c10:	eb000f01 	bl	4000a81c <_txe_thread_relinquish>
    }
40006c14:	eaffffc3 	b	40006b28 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006c18:	e3a00018 	mov	r0, #24
40006c1c:	e28d102c 	add	r1, sp, #44	; 0x2c
40006c20:	eb006fbe 	bl	40022b20 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006c24:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
40006c28:	e3520000 	cmp	r2, #0
40006c2c:	0a00006d 	beq	40006de8 <UVCAppEP0Thread_Entry+0x2e4>
40006c30:	e5d63663 	ldrb	r3, [r6, #1635]	; 0x663
40006c34:	e3530000 	cmp	r3, #0
40006c38:	1afffff4 	bne	40006c10 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006c3c:	e5972000 	ldr	r2, [r7]
40006c40:	e3a0b002 	mov	fp, #2
40006c44:	e5c2b000 	strb	fp, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006c48:	e5971000 	ldr	r1, [r7]
40006c4c:	e3a0b001 	mov	fp, #1
40006c50:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006c54:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006c58:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006c5c:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006c60:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006c64:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006c68:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006c6c:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006c70:	e3a0c004 	mov	ip, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006c74:	e59f088c 	ldr	r0, [pc, #2188]	; 40007508 <UVCAppEP0Thread_Entry+0xa04>
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006c78:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
40006c7c:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;
40006c80:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;
40006c84:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006c88:	eb003ff0 	bl	40016c50 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006c8c:	e59f0874 	ldr	r0, [pc, #2164]	; 40007508 <UVCAppEP0Thread_Entry+0xa04>
40006c90:	e28d1020 	add	r1, sp, #32
40006c94:	eb003f5f 	bl	40016a18 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006c98:	e2502000 	subs	r2, r0, #0
40006c9c:	1a000167 	bne	40007240 <UVCAppEP0Thread_Entry+0x73c>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006ca0:	e59f3848 	ldr	r3, [pc, #2120]	; 400074f0 <UVCAppEP0Thread_Entry+0x9ec>
40006ca4:	e5c3b663 	strb	fp, [r3, #1635]	; 0x663
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006ca8:	eb000edb 	bl	4000a81c <_txe_thread_relinquish>
40006cac:	eaffff9d 	b	40006b28 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006cb0:	e1d920b0 	ldrh	r2, [r9]
40006cb4:	e3520c06 	cmp	r2, #1536	; 0x600
40006cb8:	0a0000d5 	beq	40007014 <UVCAppEP0Thread_Entry+0x510>
40006cbc:	8a00008f 	bhi	40006f00 <UVCAppEP0Thread_Entry+0x3fc>
40006cc0:	e3520c03 	cmp	r2, #768	; 0x300
40006cc4:	0a000117 	beq	40007128 <UVCAppEP0Thread_Entry+0x624>
40006cc8:	8a00010e 	bhi	40007108 <UVCAppEP0Thread_Entry+0x604>
40006ccc:	e3520c01 	cmp	r2, #256	; 0x100
40006cd0:	0a000156 	beq	40007230 <UVCAppEP0Thread_Entry+0x72c>
40006cd4:	e3520c02 	cmp	r2, #512	; 0x200
40006cd8:	1affffb7 	bne	40006bbc <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006cdc:	e3a00001 	mov	r0, #1
40006ce0:	ebfffd22 	bl	40006170 <CTControlHandle>
40006ce4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006ce8:	eaffffbc 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006cec:	e1d920b0 	ldrh	r2, [r9]
40006cf0:	e3520c09 	cmp	r2, #2304	; 0x900
40006cf4:	0a0001ee 	beq	400074b4 <UVCAppEP0Thread_Entry+0x9b0>
40006cf8:	8a000088 	bhi	40006f20 <UVCAppEP0Thread_Entry+0x41c>
40006cfc:	e3520b01 	cmp	r2, #1024	; 0x400
40006d00:	0a0001ef 	beq	400074c4 <UVCAppEP0Thread_Entry+0x9c0>
40006d04:	8a000187 	bhi	40007328 <UVCAppEP0Thread_Entry+0x824>
40006d08:	e3520c02 	cmp	r2, #512	; 0x200
40006d0c:	0a0001e4 	beq	400074a4 <UVCAppEP0Thread_Entry+0x9a0>
40006d10:	e3520c03 	cmp	r2, #768	; 0x300
40006d14:	0a0001c3 	beq	40007428 <UVCAppEP0Thread_Entry+0x924>
40006d18:	e3520c01 	cmp	r2, #256	; 0x100
40006d1c:	1affffaa 	bne	40006bcc <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006d20:	e3a00010 	mov	r0, #16
40006d24:	ebfff93d 	bl	40005220 <ControlHandle>
40006d28:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d2c:	eaffffab 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006d30:	e59fb7d4 	ldr	fp, [pc, #2004]	; 4000750c <UVCAppEP0Thread_Entry+0xa08>
40006d34:	e1d9c0b0 	ldrh	ip, [r9]
40006d38:	e1da00b0 	ldrh	r0, [sl]
40006d3c:	e59f17cc 	ldr	r1, [pc, #1996]	; 40007510 <UVCAppEP0Thread_Entry+0xa0c>
40006d40:	e5dbe000 	ldrb	lr, [fp]
40006d44:	e5d8b000 	ldrb	fp, [r8]
40006d48:	e58d000c 	str	r0, [sp, #12]
40006d4c:	e58dc008 	str	ip, [sp, #8]
40006d50:	e1d1c0b0 	ldrh	ip, [r1]
40006d54:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40006d58:	e58db004 	str	fp, [sp, #4]
40006d5c:	e3a00004 	mov	r0, #4
40006d60:	e59f17ac 	ldr	r1, [pc, #1964]	; 40007514 <UVCAppEP0Thread_Entry+0xa10>
40006d64:	e3a0b000 	mov	fp, #0
40006d68:	e58de000 	str	lr, [sp]
40006d6c:	e58dc010 	str	ip, [sp, #16]
40006d70:	e58db014 	str	fp, [sp, #20]
40006d74:	eb003039 	bl	40012e60 <CyU3PDebugPrint>
40006d78:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d7c:	eaffff78 	b	40006b64 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006d80:	eb005777 	bl	4001cb64 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006d84:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006d88:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006d8c:	13a00001 	movne	r0, #1
40006d90:	1585003c 	strne	r0, [r5, #60]	; 0x3c
40006d94:	eaffff6f 	b	40006b58 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006d98:	e1d920b0 	ldrh	r2, [r9]
40006d9c:	e3520c03 	cmp	r2, #768	; 0x300
40006da0:	0a000081 	beq	40006fac <UVCAppEP0Thread_Entry+0x4a8>
40006da4:	8a000033 	bhi	40006e78 <UVCAppEP0Thread_Entry+0x374>
40006da8:	e3520c01 	cmp	r2, #256	; 0x100
40006dac:	0a00008b 	beq	40006fe0 <UVCAppEP0Thread_Entry+0x4dc>
40006db0:	e3520c02 	cmp	r2, #512	; 0x200
40006db4:	1affff8e 	bne	40006bf4 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006db8:	e5d83000 	ldrb	r3, [r8]
40006dbc:	e3530081 	cmp	r3, #129	; 0x81
40006dc0:	0a00008b 	beq	40006ff4 <UVCAppEP0Thread_Entry+0x4f0>
40006dc4:	8a000126 	bhi	40007264 <UVCAppEP0Thread_Entry+0x760>
40006dc8:	e3530001 	cmp	r3, #1
40006dcc:	0a000184 	beq	400073e4 <UVCAppEP0Thread_Entry+0x8e0>
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
                            }
                        }
                        break;
                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006dd0:	e3a00000 	mov	r0, #0
40006dd4:	e3a01001 	mov	r1, #1
40006dd8:	e1a02000 	mov	r2, r0
40006ddc:	eb005b87 	bl	4001dc00 <CyU3PUsbStall>
40006de0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006de4:	eaffff87 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006de8:	e5d6e663 	ldrb	lr, [r6, #1635]	; 0x663
40006dec:	e35e0000 	cmp	lr, #0
40006df0:	0affff86 	beq	40006c10 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006df4:	e5973000 	ldr	r3, [r7]
40006df8:	e3a0b002 	mov	fp, #2
40006dfc:	e5c3b000 	strb	fp, [r3]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e00:	e5971000 	ldr	r1, [r7]
40006e04:	e3a0b001 	mov	fp, #1
40006e08:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e0c:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e10:	e3a0eb01 	mov	lr, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006e14:	e5c02002 	strb	r2, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006e18:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e1c:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006e20:	e5ccb003 	strb	fp, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006e24:	e5973000 	ldr	r3, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006e28:	e1a0c002 	mov	ip, r2
40006e2c:	e1cd22b8 	strh	r2, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e30:	e59f06d0 	ldr	r0, [pc, #1744]	; 40007508 <UVCAppEP0Thread_Entry+0xa04>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e34:	e3a02004 	mov	r2, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006e38:	e58d3020 	str	r3, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006e3c:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e40:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e44:	e58dc01c 	str	ip, [sp, #28]
40006e48:	eb003f80 	bl	40016c50 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006e4c:	e59f06b4 	ldr	r0, [pc, #1716]	; 40007508 <UVCAppEP0Thread_Entry+0xa04>
40006e50:	e28d1020 	add	r1, sp, #32
40006e54:	eb003eef 	bl	40016a18 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006e58:	e59d301c 	ldr	r3, [sp, #28]
40006e5c:	e2502000 	subs	r2, r0, #0
40006e60:	1a0000c0 	bne	40007168 <UVCAppEP0Thread_Entry+0x664>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006e64:	e59f2684 	ldr	r2, [pc, #1668]	; 400074f0 <UVCAppEP0Thread_Entry+0x9ec>
					stiflag = CyTrue;
40006e68:	e584b098 	str	fp, [r4, #152]	; 0x98
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006e6c:	e5c23663 	strb	r3, [r2, #1635]	; 0x663
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006e70:	eb000e69 	bl	4000a81c <_txe_thread_relinquish>
40006e74:	eaffff2b 	b	40006b28 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006e78:	e3520b01 	cmp	r2, #1024	; 0x400
40006e7c:	0a000038 	beq	40006f64 <UVCAppEP0Thread_Entry+0x460>
40006e80:	e3520c05 	cmp	r2, #1280	; 0x500
40006e84:	1affff5a 	bne	40006bf4 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40006e88:	e5d82000 	ldrb	r2, [r8]
40006e8c:	e3520081 	cmp	r2, #129	; 0x81
40006e90:	0a000057 	beq	40006ff4 <UVCAppEP0Thread_Entry+0x4f0>
40006e94:	8a00011e 	bhi	40007314 <UVCAppEP0Thread_Entry+0x810>
40006e98:	e3520001 	cmp	r2, #1
40006e9c:	1affff54 	bne	40006bf4 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006ea0:	e3a00020 	mov	r0, #32
40006ea4:	e59f166c 	ldr	r1, [pc, #1644]	; 40007518 <UVCAppEP0Thread_Entry+0xa14>
40006ea8:	e28d2036 	add	r2, sp, #54	; 0x36
40006eac:	eb0056ba 	bl	4001c99c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006eb0:	e3500000 	cmp	r0, #0
40006eb4:	1a000186 	bne	400074d4 <UVCAppEP0Thread_Entry+0x9d0>
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40006eb8:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
40006ebc:	e2800004 	add	r0, r0, #4
40006ec0:	e59f1654 	ldr	r1, [pc, #1620]	; 4000751c <UVCAppEP0Thread_Entry+0xa18>
40006ec4:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
40006ec8:	eb002fe4 	bl	40012e60 <CyU3PDebugPrint>
40006ecc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006ed0:	eaffff4c 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006ed4:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006ed8:	0a0000f5 	beq	400072b4 <UVCAppEP0Thread_Entry+0x7b0>
40006edc:	8a0000ea 	bhi	4000728c <UVCAppEP0Thread_Entry+0x788>
40006ee0:	e3520c07 	cmp	r2, #1792	; 0x700
40006ee4:	0a0000e4 	beq	4000727c <UVCAppEP0Thread_Entry+0x778>
40006ee8:	e3520b02 	cmp	r2, #2048	; 0x800
40006eec:	1affff32 	bne	40006bbc <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40006ef0:	e3a00007 	mov	r0, #7
40006ef4:	ebfff8c9 	bl	40005220 <ControlHandle>
40006ef8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006efc:	eaffff37 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006f00:	e3520c09 	cmp	r2, #2304	; 0x900
40006f04:	0a000126 	beq	400073a4 <UVCAppEP0Thread_Entry+0x8a0>
40006f08:	8a00011b 	bhi	4000737c <UVCAppEP0Thread_Entry+0x878>
40006f0c:	e3520c07 	cmp	r2, #1792	; 0x700
40006f10:	0a00010d 	beq	4000734c <UVCAppEP0Thread_Entry+0x848>
40006f14:	e3520b02 	cmp	r2, #2048	; 0x800
40006f18:	1affff27 	bne	40006bbc <UVCAppEP0Thread_Entry+0xb8>
40006f1c:	eaffff2f 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f20:	e3520c0f 	cmp	r2, #3840	; 0xf00
40006f24:	0a00015a 	beq	40007494 <UVCAppEP0Thread_Entry+0x990>
40006f28:	8a00003d 	bhi	40007024 <UVCAppEP0Thread_Entry+0x520>
40006f2c:	e3520c0b 	cmp	r2, #2816	; 0xb00
40006f30:	0a000153 	beq	40007484 <UVCAppEP0Thread_Entry+0x980>
40006f34:	e3520c0d 	cmp	r2, #3328	; 0xd00
40006f38:	0a00014d 	beq	40007474 <UVCAppEP0Thread_Entry+0x970>
40006f3c:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006f40:	1affff21 	bne	40006bcc <UVCAppEP0Thread_Entry+0xc8>
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x %d\r\n", wValue, bRequest, CamMode);
40006f44:	e5d83000 	ldrb	r3, [r8]
40006f48:	e3a0c000 	mov	ip, #0
40006f4c:	e3a00004 	mov	r0, #4
40006f50:	e59f15c8 	ldr	r1, [pc, #1480]	; 40007520 <UVCAppEP0Thread_Entry+0xa1c>
40006f54:	e58dc000 	str	ip, [sp]
40006f58:	eb002fc0 	bl	40012e60 <CyU3PDebugPrint>
40006f5c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f60:	eaffff1e 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40006f64:	e5d8b000 	ldrb	fp, [r8]
40006f68:	e35b0081 	cmp	fp, #129	; 0x81
40006f6c:	0a000013 	beq	40006fc0 <UVCAppEP0Thread_Entry+0x4bc>
40006f70:	8a000085 	bhi	4000718c <UVCAppEP0Thread_Entry+0x688>
40006f74:	e35b0001 	cmp	fp, #1
40006f78:	1affff1d 	bne	40006bf4 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006f7c:	e28d2036 	add	r2, sp, #54	; 0x36
40006f80:	e3a00020 	mov	r0, #32
40006f84:	e59f158c 	ldr	r1, [pc, #1420]	; 40007518 <UVCAppEP0Thread_Entry+0xa14>
40006f88:	eb005683 	bl	4001c99c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006f8c:	e2502000 	subs	r2, r0, #0
40006f90:	1affff1b 	bne	40006c04 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40006f94:	e59f0550 	ldr	r0, [pc, #1360]	; 400074ec <UVCAppEP0Thread_Entry+0x9e8>
40006f98:	e1a0100b 	mov	r1, fp
40006f9c:	eb000b65 	bl	40009d38 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40006fa0:	e2502000 	subs	r2, r0, #0
40006fa4:	0affff16 	beq	40006c04 <UVCAppEP0Thread_Entry+0x100>
40006fa8:	ea000119 	b	40007414 <UVCAppEP0Thread_Entry+0x910>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40006fac:	e5d82000 	ldrb	r2, [r8]
40006fb0:	e3520083 	cmp	r2, #131	; 0x83
40006fb4:	8a000098 	bhi	4000721c <UVCAppEP0Thread_Entry+0x718>
40006fb8:	e3520081 	cmp	r2, #129	; 0x81
40006fbc:	3a00007d 	bcc	400071b8 <UVCAppEP0Thread_Entry+0x6b4>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40006fc0:	e5d4b048 	ldrb	fp, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40006fc4:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40006fc8:	e35b0003 	cmp	fp, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40006fcc:	059f1550 	ldreq	r1, [pc, #1360]	; 40007524 <UVCAppEP0Thread_Entry+0xa20>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40006fd0:	159f1550 	ldrne	r1, [pc, #1360]	; 40007528 <UVCAppEP0Thread_Entry+0xa24>
40006fd4:	eb0058de 	bl	4001d354 <CyU3PUsbSendEP0Data>
40006fd8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006fdc:	eaffff09 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40006fe0:	e5d82000 	ldrb	r2, [r8]
40006fe4:	e3520083 	cmp	r2, #131	; 0x83
40006fe8:	8a00002f 	bhi	400070ac <UVCAppEP0Thread_Entry+0x5a8>
40006fec:	e3520081 	cmp	r2, #129	; 0x81
40006ff0:	3a000014 	bcc	40007048 <UVCAppEP0Thread_Entry+0x544>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40006ff4:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40006ff8:	e3a0001a 	mov	r0, #26
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40006ffc:	e3520003 	cmp	r2, #3
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007000:	059f1524 	ldreq	r1, [pc, #1316]	; 4000752c <UVCAppEP0Thread_Entry+0xa28>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
40007004:	159f1524 	ldrne	r1, [pc, #1316]	; 40007530 <UVCAppEP0Thread_Entry+0xa2c>
40007008:	eb0058d1 	bl	4001d354 <CyU3PUsbSendEP0Data>
4000700c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007010:	eafffefc 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007014:	e3a00005 	mov	r0, #5
40007018:	ebfffc54 	bl	40006170 <CTControlHandle>
4000701c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007020:	eafffeee 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007024:	e3520c11 	cmp	r2, #4352	; 0x1100
40007028:	0a0000e9 	beq	400073d4 <UVCAppEP0Thread_Entry+0x8d0>
4000702c:	8a00002d 	bhi	400070e8 <UVCAppEP0Thread_Entry+0x5e4>
40007030:	e3520a01 	cmp	r2, #4096	; 0x1000
40007034:	1afffee4 	bne	40006bcc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007038:	e3a0001f 	mov	r0, #31
4000703c:	ebfff877 	bl	40005220 <ControlHandle>
40007040:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007044:	eafffee5 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007048:	e3520001 	cmp	r2, #1
4000704c:	1affff5f 	bne	40006dd0 <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007050:	e3a00020 	mov	r0, #32
40007054:	e59f14bc 	ldr	r1, [pc, #1212]	; 40007518 <UVCAppEP0Thread_Entry+0xa14>
40007058:	e28d2036 	add	r2, sp, #54	; 0x36
4000705c:	eb00564e 	bl	4001c99c <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007060:	e3500000 	cmp	r0, #0
40007064:	1afffee6 	bne	40006c04 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007068:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
4000706c:	e3530003 	cmp	r3, #3
40007070:	1afffee3 	bne	40006c04 <UVCAppEP0Thread_Entry+0x100>
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
40007074:	e5d4e07a 	ldrb	lr, [r4, #122]	; 0x7a
                            glProbeCtrl[3] = glCommitCtrl[3];
40007078:	e5d4c07b 	ldrb	ip, [r4, #123]	; 0x7b
                            glProbeCtrl[4] = glCommitCtrl[4];
4000707c:	e5d4007c 	ldrb	r0, [r4, #124]	; 0x7c
                            glProbeCtrl[5] = glCommitCtrl[5];
40007080:	e5d4107d 	ldrb	r1, [r4, #125]	; 0x7d
                            glProbeCtrl[6] = glCommitCtrl[6];
40007084:	e5d4207e 	ldrb	r2, [r4, #126]	; 0x7e
                            glProbeCtrl[7] = glCommitCtrl[7];
40007088:	e5d4b07f 	ldrb	fp, [r4, #127]	; 0x7f
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
4000708c:	e5c6e616 	strb	lr, [r6, #1558]	; 0x616
                            glProbeCtrl[3] = glCommitCtrl[3];
40007090:	e5c6c617 	strb	ip, [r6, #1559]	; 0x617
                            glProbeCtrl[4] = glCommitCtrl[4];
40007094:	e5c60618 	strb	r0, [r6, #1560]	; 0x618
                            glProbeCtrl[5] = glCommitCtrl[5];
40007098:	e5c61619 	strb	r1, [r6, #1561]	; 0x619
                            glProbeCtrl[6] = glCommitCtrl[6];
4000709c:	e5c6261a 	strb	r2, [r6, #1562]	; 0x61a
                            glProbeCtrl[7] = glCommitCtrl[7];
400070a0:	e5c6b61b 	strb	fp, [r6, #1563]	; 0x61b
400070a4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070a8:	eafffed6 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400070ac:	e3520086 	cmp	r2, #134	; 0x86
400070b0:	0a000039 	beq	4000719c <UVCAppEP0Thread_Entry+0x698>
400070b4:	e3520087 	cmp	r2, #135	; 0x87
400070b8:	0affffcd 	beq	40006ff4 <UVCAppEP0Thread_Entry+0x4f0>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400070bc:	e3520085 	cmp	r2, #133	; 0x85
400070c0:	1affff42 	bne	40006dd0 <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400070c4:	e59f1468 	ldr	r1, [pc, #1128]	; 40007534 <UVCAppEP0Thread_Entry+0xa30>
400070c8:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
400070cc:	e3a0301a 	mov	r3, #26
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
400070d0:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
400070d4:	e3a03000 	mov	r3, #0
400070d8:	e5c43059 	strb	r3, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400070dc:	eb00589c 	bl	4001d354 <CyU3PUsbSendEP0Data>
400070e0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070e4:	eafffec7 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400070e8:	e3520c12 	cmp	r2, #4608	; 0x1200
400070ec:	0a0000dc 	beq	40007464 <UVCAppEP0Thread_Entry+0x960>
400070f0:	e3520c13 	cmp	r2, #4864	; 0x1300
400070f4:	1afffeb4 	bne	40006bcc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID6-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCGridCtlID6);
400070f8:	e3a00026 	mov	r0, #38	; 0x26
400070fc:	ebfff847 	bl	40005220 <ControlHandle>
40007100:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007104:	eafffeb5 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007108:	e3520b01 	cmp	r2, #1024	; 0x400
4000710c:	0a000009 	beq	40007138 <UVCAppEP0Thread_Entry+0x634>
40007110:	e3520c05 	cmp	r2, #1280	; 0x500
40007114:	1afffea8 	bne	40006bbc <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
40007118:	e3a00004 	mov	r0, #4
4000711c:	ebfffc13 	bl	40006170 <CTControlHandle>
40007120:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007124:	eafffead 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007128:	e3a00002 	mov	r0, #2
4000712c:	ebfffc0f 	bl	40006170 <CTControlHandle>
40007130:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007134:	eafffea9 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
40007138:	e3a00003 	mov	r0, #3
4000713c:	ebfffc0b 	bl	40006170 <CTControlHandle>
40007140:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007144:	eafffea5 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
40007148:	e3a00001 	mov	r0, #1
4000714c:	ebfff833 	bl	40005220 <ControlHandle>
40007150:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007154:	eafffea1 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
40007158:	e3a00000 	mov	r0, #0
4000715c:	ebfff82f 	bl	40005220 <ControlHandle>
40007160:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007164:	eafffe9d 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007168:	e3a00004 	mov	r0, #4
4000716c:	e59f13c4 	ldr	r1, [pc, #964]	; 40007538 <UVCAppEP0Thread_Entry+0xa34>
40007170:	eb002f3a 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007174:	e59f13c0 	ldr	r1, [pc, #960]	; 4000753c <UVCAppEP0Thread_Entry+0xa38>
40007178:	e3a00004 	mov	r0, #4
4000717c:	eb002f37 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007180:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007184:	eb0005f3 	bl	40008958 <_tx_thread_sleep>
40007188:	eafffff9 	b	40007174 <UVCAppEP0Thread_Entry+0x670>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
4000718c:	e35b0085 	cmp	fp, #133	; 0x85
40007190:	0affffcb 	beq	400070c4 <UVCAppEP0Thread_Entry+0x5c0>
40007194:	e35b0086 	cmp	fp, #134	; 0x86
40007198:	1afffe95 	bne	40006bf4 <UVCAppEP0Thread_Entry+0xf0>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000719c:	e1a00003 	mov	r0, r3

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400071a0:	e3a03003 	mov	r3, #3
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071a4:	e59f1388 	ldr	r1, [pc, #904]	; 40007534 <UVCAppEP0Thread_Entry+0xa30>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400071a8:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400071ac:	eb005868 	bl	4001d354 <CyU3PUsbSendEP0Data>
400071b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071b4:	eafffe93 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400071b8:	e3520001 	cmp	r2, #1
400071bc:	1affff03 	bne	40006dd0 <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400071c0:	e3a00020 	mov	r0, #32
400071c4:	e59f134c 	ldr	r1, [pc, #844]	; 40007518 <UVCAppEP0Thread_Entry+0xa14>
400071c8:	e28d2036 	add	r2, sp, #54	; 0x36
400071cc:	eb0055f2 	bl	4001c99c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400071d0:	e3500000 	cmp	r0, #0
400071d4:	1afffe8a 	bne	40006c04 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
400071d8:	e5d5b048 	ldrb	fp, [r5, #72]	; 0x48
400071dc:	e35b0003 	cmp	fp, #3
400071e0:	1afffe87 	bne	40006c04 <UVCAppEP0Thread_Entry+0x100>
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400071e4:	e5d5307e 	ldrb	r3, [r5, #126]	; 0x7e
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
400071e8:	e5d5e079 	ldrb	lr, [r5, #121]	; 0x79
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400071ec:	e5d5c07a 	ldrb	ip, [r5, #122]	; 0x7a
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400071f0:	e5d5007b 	ldrb	r0, [r5, #123]	; 0x7b
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400071f4:	e5d5107c 	ldrb	r1, [r5, #124]	; 0x7c
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
400071f8:	e5d5207d 	ldrb	r2, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
400071fc:	e5c63652 	strb	r3, [r6, #1618]	; 0x652
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007200:	e5c6e64d 	strb	lr, [r6, #1613]	; 0x64d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007204:	e5c6c64e 	strb	ip, [r6, #1614]	; 0x64e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007208:	e5c6064f 	strb	r0, [r6, #1615]	; 0x64f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
4000720c:	e5c61650 	strb	r1, [r6, #1616]	; 0x650
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007210:	e5c62651 	strb	r2, [r6, #1617]	; 0x651
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007214:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007218:	eafffe7a 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000721c:	e3520086 	cmp	r2, #134	; 0x86
40007220:	0affffdd 	beq	4000719c <UVCAppEP0Thread_Entry+0x698>
40007224:	e3520087 	cmp	r2, #135	; 0x87
40007228:	1affffa3 	bne	400070bc <UVCAppEP0Thread_Entry+0x5b8>
4000722c:	eaffff63 	b	40006fc0 <UVCAppEP0Thread_Entry+0x4bc>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
40007230:	e3a00000 	mov	r0, #0
40007234:	ebfffbcd 	bl	40006170 <CTControlHandle>
40007238:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000723c:	eafffe67 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007240:	e3a00004 	mov	r0, #4
40007244:	e59f12ec 	ldr	r1, [pc, #748]	; 40007538 <UVCAppEP0Thread_Entry+0xa34>
40007248:	eb002f04 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000724c:	e59f12e8 	ldr	r1, [pc, #744]	; 4000753c <UVCAppEP0Thread_Entry+0xa38>
40007250:	e3a00004 	mov	r0, #4
40007254:	eb002f01 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007258:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000725c:	eb0005bd 	bl	40008958 <_tx_thread_sleep>
40007260:	eafffff9 	b	4000724c <UVCAppEP0Thread_Entry+0x748>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40007264:	e3530085 	cmp	r3, #133	; 0x85
40007268:	0affff95 	beq	400070c4 <UVCAppEP0Thread_Entry+0x5c0>
4000726c:	e3530086 	cmp	r3, #134	; 0x86
40007270:	1afffed6 	bne	40006dd0 <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007274:	e3a00001 	mov	r0, #1
40007278:	eaffffc8 	b	400071a0 <UVCAppEP0Thread_Entry+0x69c>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
4000727c:	e3a00006 	mov	r0, #6
40007280:	ebfff7e6 	bl	40005220 <ControlHandle>
40007284:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007288:	eafffe54 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000728c:	e3520c0d 	cmp	r2, #3328	; 0xd00
40007290:	0a000007 	beq	400072b4 <UVCAppEP0Thread_Entry+0x7b0>
40007294:	e3520c0e 	cmp	r2, #3584	; 0xe00
40007298:	0a000009 	beq	400072c4 <UVCAppEP0Thread_Entry+0x7c0>
4000729c:	e3520b03 	cmp	r2, #3072	; 0xc00
400072a0:	1afffe45 	bne	40006bbc <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
400072a4:	e3a0000b 	mov	r0, #11
400072a8:	ebfff7dc 	bl	40005220 <ControlHandle>
400072ac:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072b0:	eafffe4a 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
400072b4:	e3a00009 	mov	r0, #9
400072b8:	ebfff7d8 	bl	40005220 <ControlHandle>
400072bc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072c0:	eafffe46 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
400072c4:	e3a0000e 	mov	r0, #14
400072c8:	ebfff7d4 	bl	40005220 <ControlHandle>
400072cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072d0:	eafffe42 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400072d4:	e3520b01 	cmp	r2, #1024	; 0x400
400072d8:	0afffe40 	beq	40006be0 <UVCAppEP0Thread_Entry+0xdc>
400072dc:	e3520c05 	cmp	r2, #1280	; 0x500
400072e0:	1afffe35 	bne	40006bbc <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
400072e4:	e3a00004 	mov	r0, #4
400072e8:	ebfff7cc 	bl	40005220 <ControlHandle>
400072ec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072f0:	eafffe3a 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
400072f4:	e3a00002 	mov	r0, #2
400072f8:	ebfff7c8 	bl	40005220 <ControlHandle>
400072fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007300:	eafffe36 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
40007304:	e3a00005 	mov	r0, #5
40007308:	ebfff7c4 	bl	40005220 <ControlHandle>
4000730c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007310:	eafffe32 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40007314:	e3520085 	cmp	r2, #133	; 0x85
40007318:	0a00004e 	beq	40007458 <UVCAppEP0Thread_Entry+0x954>
4000731c:	e3520086 	cmp	r2, #134	; 0x86
40007320:	1afffe33 	bne	40006bf4 <UVCAppEP0Thread_Entry+0xf0>
40007324:	eaffffd2 	b	40007274 <UVCAppEP0Thread_Entry+0x770>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007328:	e3520c06 	cmp	r2, #1536	; 0x600
4000732c:	0a000045 	beq	40007448 <UVCAppEP0Thread_Entry+0x944>
40007330:	8a000009 	bhi	4000735c <UVCAppEP0Thread_Entry+0x858>
40007334:	e3520c05 	cmp	r2, #1280	; 0x500
40007338:	1afffe23 	bne	40006bcc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
4000733c:	e3a00014 	mov	r0, #20
40007340:	ebfff7b6 	bl	40005220 <ControlHandle>
40007344:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007348:	eafffe24 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
4000734c:	e3a00006 	mov	r0, #6
40007350:	ebfffb86 	bl	40006170 <CTControlHandle>
40007354:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007358:	eafffe20 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000735c:	e3520c07 	cmp	r2, #1792	; 0x700
40007360:	0a000034 	beq	40007438 <UVCAppEP0Thread_Entry+0x934>
40007364:	e3520b02 	cmp	r2, #2048	; 0x800
40007368:	1afffe17 	bne	40006bcc <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
4000736c:	e3a00017 	mov	r0, #23
40007370:	ebfff7aa 	bl	40005220 <ControlHandle>
40007374:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007378:	eafffe18 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
4000737c:	e3520c0b 	cmp	r2, #2816	; 0xb00
40007380:	0a00000f 	beq	400073c4 <UVCAppEP0Thread_Entry+0x8c0>
40007384:	e3520b03 	cmp	r2, #3072	; 0xc00
40007388:	0a000009 	beq	400073b4 <UVCAppEP0Thread_Entry+0x8b0>
4000738c:	e3520c0a 	cmp	r2, #2560	; 0xa00
40007390:	1afffe09 	bne	40006bbc <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
40007394:	e3a00008 	mov	r0, #8
40007398:	ebfffb74 	bl	40006170 <CTControlHandle>
4000739c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073a0:	eafffe0e 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
400073a4:	e3a00007 	mov	r0, #7
400073a8:	ebfffb70 	bl	40006170 <CTControlHandle>
400073ac:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073b0:	eafffe0a 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
400073b4:	e3a0000a 	mov	r0, #10
400073b8:	ebfffb6c 	bl	40006170 <CTControlHandle>
400073bc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073c0:	eafffe06 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
400073c4:	e3a00009 	mov	r0, #9
400073c8:	ebfffb68 	bl	40006170 <CTControlHandle>
400073cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073d0:	eafffe02 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
400073d4:	e3a00024 	mov	r0, #36	; 0x24
400073d8:	ebfff790 	bl	40005220 <ControlHandle>
400073dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073e0:	eafffdfe 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400073e4:	e3a00020 	mov	r0, #32
400073e8:	e59f1128 	ldr	r1, [pc, #296]	; 40007518 <UVCAppEP0Thread_Entry+0xa14>
400073ec:	e28d2036 	add	r2, sp, #54	; 0x36
400073f0:	eb005569 	bl	4001c99c <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
400073f4:	e3500000 	cmp	r0, #0
400073f8:	1afffe01 	bne	40006c04 <UVCAppEP0Thread_Entry+0x100>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
400073fc:	e3a02000 	mov	r2, #0
40007400:	e59f00e4 	ldr	r0, [pc, #228]	; 400074ec <UVCAppEP0Thread_Entry+0x9e8>
40007404:	e3a01001 	mov	r1, #1
40007408:	eb000a4a 	bl	40009d38 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
4000740c:	e2502000 	subs	r2, r0, #0
40007410:	0afffdfb 	beq	40006c04 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007414:	e3a00004 	mov	r0, #4
40007418:	e59f1120 	ldr	r1, [pc, #288]	; 40007540 <UVCAppEP0Thread_Entry+0xa3c>
4000741c:	eb002e8f 	bl	40012e60 <CyU3PDebugPrint>
40007420:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007424:	eafffdf7 	b	40006c08 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
40007428:	e3a00012 	mov	r0, #18
4000742c:	ebfff77b 	bl	40005220 <ControlHandle>
40007430:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007434:	eafffde9 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
40007438:	e3a00016 	mov	r0, #22
4000743c:	ebfff777 	bl	40005220 <ControlHandle>
40007440:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007444:	eafffde5 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
40007448:	e3a00015 	mov	r0, #21
4000744c:	ebfff773 	bl	40005220 <ControlHandle>
40007450:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007454:	eafffde1 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007458:	e3a00002 	mov	r0, #2
4000745c:	e59f10d0 	ldr	r1, [pc, #208]	; 40007534 <UVCAppEP0Thread_Entry+0xa30>
40007460:	eaffff1a 	b	400070d0 <UVCAppEP0Thread_Entry+0x5cc>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
40007464:	e3a00025 	mov	r0, #37	; 0x25
40007468:	ebfff76c 	bl	40005220 <ControlHandle>
4000746c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007470:	eafffdda 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
40007474:	e3a0001c 	mov	r0, #28
40007478:	ebfff768 	bl	40005220 <ControlHandle>
4000747c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007480:	eafffdd6 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x %d\r\n", wValue, bRequest, CamMode);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
40007484:	e3a0001a 	mov	r0, #26
40007488:	ebfff764 	bl	40005220 <ControlHandle>
4000748c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007490:	eafffdd2 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
40007494:	e3a0001e 	mov	r0, #30
40007498:	ebfff760 	bl	40005220 <ControlHandle>
4000749c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074a0:	eafffdce 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
400074a4:	e3a00011 	mov	r0, #17
400074a8:	ebfff75c 	bl	40005220 <ControlHandle>
400074ac:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074b0:	eafffdca 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
400074b4:	e3a00018 	mov	r0, #24
400074b8:	ebfff758 	bl	40005220 <ControlHandle>
400074bc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074c0:	eafffdc6 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
400074c4:	e3a00013 	mov	r0, #19
400074c8:	ebfff754 	bl	40005220 <ControlHandle>
400074cc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074d0:	eafffdc2 	b	40006be0 <UVCAppEP0Thread_Entry+0xdc>
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
400074d4:	e59f1068 	ldr	r1, [pc, #104]	; 40007544 <UVCAppEP0Thread_Entry+0xa40>
400074d8:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
400074dc:	e5d43078 	ldrb	r3, [r4, #120]	; 0x78
400074e0:	e3a00004 	mov	r0, #4
400074e4:	eb002e5d 	bl	40012e60 <CyU3PDebugPrint>
400074e8:	eafffdc1 	b	40006bf4 <UVCAppEP0Thread_Entry+0xf0>
400074ec:	40030f90 	.word	0x40030f90
400074f0:	40030000 	.word	0x40030000
400074f4:	4003310c 	.word	0x4003310c
400074f8:	40032fc0 	.word	0x40032fc0
400074fc:	40032ff0 	.word	0x40032ff0
40007500:	400330d0 	.word	0x400330d0
40007504:	40011530 	.word	0x40011530
40007508:	40033030 	.word	0x40033030
4000750c:	40032ec0 	.word	0x40032ec0
40007510:	40032ff2 	.word	0x40032ff2
40007514:	400114b4 	.word	0x400114b4
40007518:	40031008 	.word	0x40031008
4000751c:	400115c4 	.word	0x400115c4
40007520:	4001155c 	.word	0x4001155c
40007524:	4003064c 	.word	0x4003064c
40007528:	40030658 	.word	0x40030658
4000752c:	40030614 	.word	0x40030614
40007530:	40030630 	.word	0x40030630
40007534:	40030fe8 	.word	0x40030fe8
40007538:	40011614 	.word	0x40011614
4000753c:	40011228 	.word	0x40011228
40007540:	4001159c 	.word	0x4001159c
40007544:	400115ec 	.word	0x400115ec

40007548 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007548:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
4000754c:	e59f42ac 	ldr	r4, [pc, #684]	; 40007800 <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007550:	e59f22ac 	ldr	r2, [pc, #684]	; 40007804 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
40007554:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007558:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000755c:	e592001c 	ldr	r0, [r2, #28]
40007560:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007564:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
40007568:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
4000756c:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007570:	eb000a88 	bl	40009f98 <_txe_mutex_get>
    if(Data1&0x80){
40007574:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007578:	12066001 	andne	r6, r6, #1
4000757c:	11e06006 	mvnne	r6, r6
40007580:	1206603b 	andne	r6, r6, #59	; 0x3b
40007584:	11e06006 	mvnne	r6, r6
40007588:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
4000758c:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007590:	e3a08000 	mov	r8, #0
40007594:	e1a0200a 	mov	r2, sl
40007598:	e1a03007 	mov	r3, r7
4000759c:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400075a0:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400075a4:	e59f0258 	ldr	r0, [pc, #600]	; 40007804 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400075a8:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400075ac:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400075b0:	e88d0140 	stm	sp, {r6, r8}
400075b4:	ebffefbf 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400075b8:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
400075bc:	e1a01009 	mov	r1, r9
400075c0:	e1a03007 	mov	r3, r7
400075c4:	e59f0238 	ldr	r0, [pc, #568]	; 40007804 <CamDefSet+0x2bc>
400075c8:	e88d0220 	stm	sp, {r5, r9}
400075cc:	ebffefb9 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400075d0:	e1a02006 	mov	r2, r6
400075d4:	e1a03005 	mov	r3, r5
400075d8:	e59f1228 	ldr	r1, [pc, #552]	; 40007808 <CamDefSet+0x2c0>
400075dc:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
400075e0:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
400075e4:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400075e8:	eb002e1c 	bl	40012e60 <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400075ec:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
400075f0:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
400075f4:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
400075f8:	e3a01002 	mov	r1, #2
400075fc:	e59f0200 	ldr	r0, [pc, #512]	; 40007804 <CamDefSet+0x2bc>
40007600:	e58db000 	str	fp, [sp]
40007604:	e58d8004 	str	r8, [sp, #4]
40007608:	ebffefaa 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000760c:	e1a0200b 	mov	r2, fp
40007610:	e1a03005 	mov	r3, r5
40007614:	e59f11ec 	ldr	r1, [pc, #492]	; 40007808 <CamDefSet+0x2c0>
40007618:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
4000761c:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007620:	eb002e0e 	bl	40012e60 <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007624:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007628:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000762c:	e247b080 	sub	fp, r7, #128	; 0x80
40007630:	e20b10ff 	and	r1, fp, #255	; 0xff
40007634:	e58d1014 	str	r1, [sp, #20]
40007638:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
4000763c:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007640:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007644:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007648:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000764c:	e3a01005 	mov	r1, #5
40007650:	e3a020df 	mov	r2, #223	; 0xdf
40007654:	e59f01a8 	ldr	r0, [pc, #424]	; 40007804 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007658:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000765c:	e58dc000 	str	ip, [sp]
40007660:	e58d8004 	str	r8, [sp, #4]
40007664:	ebffef93 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007668:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
4000766c:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007670:	e20ac0ff 	and	ip, sl, #255	; 0xff
40007674:	e1a03006 	mov	r3, r6
40007678:	e3a01005 	mov	r1, #5
4000767c:	e3a020dc 	mov	r2, #220	; 0xdc
40007680:	e59f017c 	ldr	r0, [pc, #380]	; 40007804 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007684:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007688:	e58dc000 	str	ip, [sp]
4000768c:	e58d9004 	str	r9, [sp, #4]
40007690:	ebffef88 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007694:	e59d001c 	ldr	r0, [sp, #28]
40007698:	e3a0e002 	mov	lr, #2
4000769c:	e200c0ff 	and	ip, r0, #255	; 0xff
400076a0:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400076a4:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076a8:	e3a01005 	mov	r1, #5
400076ac:	e3a020de 	mov	r2, #222	; 0xde
400076b0:	e59f014c 	ldr	r0, [pc, #332]	; 40007804 <CamDefSet+0x2bc>
400076b4:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400076b8:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076bc:	e58dc000 	str	ip, [sp]
400076c0:	ebffef7c 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400076c4:	e59da020 	ldr	sl, [sp, #32]
400076c8:	e1a03006 	mov	r3, r6
400076cc:	e20ac0ff 	and	ip, sl, #255	; 0xff
400076d0:	e58dc000 	str	ip, [sp]
400076d4:	e3a01005 	mov	r1, #5
400076d8:	e3a0c003 	mov	ip, #3
400076dc:	e3a020e0 	mov	r2, #224	; 0xe0
400076e0:	e59f011c 	ldr	r0, [pc, #284]	; 40007804 <CamDefSet+0x2bc>
400076e4:	e58dc004 	str	ip, [sp, #4]
400076e8:	ebffef72 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400076ec:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400076f0:	e3a0a004 	mov	sl, #4
400076f4:	e200c0ff 	and	ip, r0, #255	; 0xff
400076f8:	e1a03006 	mov	r3, r6
400076fc:	e3a01005 	mov	r1, #5
40007700:	e3a020dd 	mov	r2, #221	; 0xdd
40007704:	e59f00f8 	ldr	r0, [pc, #248]	; 40007804 <CamDefSet+0x2bc>
40007708:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
4000770c:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007710:	e58da004 	str	sl, [sp, #4]
40007714:	ebffef67 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007718:	e3a0e005 	mov	lr, #5
4000771c:	e1a0100e 	mov	r1, lr
40007720:	e1a03006 	mov	r3, r6
40007724:	e3a020e1 	mov	r2, #225	; 0xe1
40007728:	e20760ff 	and	r6, r7, #255	; 0xff
4000772c:	e59f00d0 	ldr	r0, [pc, #208]	; 40007804 <CamDefSet+0x2bc>
40007730:	e88d4040 	stm	sp, {r6, lr}
40007734:	ebffef5f 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007738:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
4000773c:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40007740:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007744:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007748:	e59dc020 	ldr	ip, [sp, #32]
4000774c:	e1a0200b 	mov	r2, fp
40007750:	e59d3018 	ldr	r3, [sp, #24]
40007754:	e59f10b0 	ldr	r1, [pc, #176]	; 4000780c <CamDefSet+0x2c4>
40007758:	e1a0000a 	mov	r0, sl
4000775c:	e88d5040 	stm	sp, {r6, ip, lr}
40007760:	e58d700c 	str	r7, [sp, #12]
40007764:	eb002dbd 	bl	40012e60 <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
40007768:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
4000776c:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
40007770:	e1a03007 	mov	r3, r7
40007774:	e3a01006 	mov	r1, #6
40007778:	e3a02085 	mov	r2, #133	; 0x85
4000777c:	e59f0080 	ldr	r0, [pc, #128]	; 40007804 <CamDefSet+0x2bc>
40007780:	e88d0140 	stm	sp, {r6, r8}
40007784:	ebffef4b 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007788:	e1a03007 	mov	r3, r7
4000778c:	e3a01006 	mov	r1, #6
40007790:	e3a02086 	mov	r2, #134	; 0x86
40007794:	e59f0068 	ldr	r0, [pc, #104]	; 40007804 <CamDefSet+0x2bc>
40007798:	e88d0240 	stm	sp, {r6, r9}
4000779c:	ebffef45 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400077a0:	e1a02006 	mov	r2, r6
400077a4:	e1a03005 	mov	r3, r5
400077a8:	e59f1058 	ldr	r1, [pc, #88]	; 40007808 <CamDefSet+0x2c0>
400077ac:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
400077b0:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400077b4:	eb002da9 	bl	40012e60 <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400077b8:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
400077bc:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
400077c0:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
400077c4:	e3a01007 	mov	r1, #7
400077c8:	e59f0034 	ldr	r0, [pc, #52]	; 40007804 <CamDefSet+0x2bc>
400077cc:	e88d0140 	stm	sp, {r6, r8}
400077d0:	ebffef38 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400077d4:	e1a03005 	mov	r3, r5
400077d8:	e1a0000a 	mov	r0, sl
400077dc:	e59f1024 	ldr	r1, [pc, #36]	; 40007808 <CamDefSet+0x2c0>
400077e0:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
400077e4:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400077e8:	eb002d9c 	bl	40012e60 <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400077ec:	e59f3010 	ldr	r3, [pc, #16]	; 40007804 <CamDefSet+0x2bc>
400077f0:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
400077f4:	e28dd02c 	add	sp, sp, #44	; 0x2c
400077f8:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400077fc:	ea000a1a 	b	4000a06c <_txe_mutex_put>
40007800:	40030000 	.word	0x40030000
40007804:	40032ec4 	.word	0x40032ec4
40007808:	40011648 	.word	0x40011648
4000780c:	40011668 	.word	0x40011668

40007810 <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007810:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007814:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007818:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
4000781c:	e59f1018 	ldr	r1, [pc, #24]	; 4000783c <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007820:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007824:	ebfff02a 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007828:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
4000782c:	15d43001 	ldrbne	r3, [r4, #1]
40007830:	13833002 	orrne	r3, r3, #2
40007834:	15c43001 	strbne	r3, [r4, #1]
40007838:	e8bd8038 	pop	{r3, r4, r5, pc}
4000783c:	40030480 	.word	0x40030480

40007840 <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
40007840:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007844:	e59f1010 	ldr	r1, [pc, #16]	; 4000785c <CyFxAppErrorHandler+0x1c>
40007848:	e3a00004 	mov	r0, #4
4000784c:	eb002d83 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007850:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007854:	eb00043f 	bl	40008958 <_tx_thread_sleep>
40007858:	eafffff9 	b	40007844 <CyFxAppErrorHandler+0x4>
4000785c:	40011228 	.word	0x40011228

40007860 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007860:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007864:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007868:	eb006cec 	bl	40022c20 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
4000786c:	e2504000 	subs	r4, r0, #0
40007870:	0a000004 	beq	40007888 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007874:	e3a00004 	mov	r0, #4
40007878:	e59f1aa4 	ldr	r1, [pc, #2724]	; 40008324 <UVCAppThread_Entry+0xac4>
4000787c:	eb002d77 	bl	40012e60 <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
40007880:	e1a00004 	mov	r0, r4
40007884:	ebffffed 	bl	40007840 <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007888:	e59fca98 	ldr	ip, [pc, #2712]	; 40008328 <UVCAppThread_Entry+0xac8>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
4000788c:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007890:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007894:	e28d0050 	add	r0, sp, #80	; 0x50
40007898:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
4000789c:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
400078a0:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
400078a4:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
400078a8:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
400078ac:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
400078b0:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
400078b4:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
400078b8:	eb006d51 	bl	40022e04 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
400078bc:	e3500000 	cmp	r0, #0
400078c0:	0a000000 	beq	400078c8 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
400078c4:	ebffffdd 	bl	40007840 <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
400078c8:	e3e00000 	mvn	r0, #0
400078cc:	eb006dd3 	bl	40023020 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
400078d0:	e3500000 	cmp	r0, #0
400078d4:	0a000000 	beq	400078dc <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
400078d8:	ebffffd8 	bl	40007840 <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
400078dc:	e3a00003 	mov	r0, #3
400078e0:	e3a01004 	mov	r1, #4
400078e4:	eb002cd5 	bl	40012c40 <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
400078e8:	e3500000 	cmp	r0, #0
400078ec:	0a000000 	beq	400078f4 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
400078f0:	ebffffd2 	bl	40007840 <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
400078f4:	e3a00000 	mov	r0, #0
400078f8:	eb002d54 	bl	40012e50 <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
400078fc:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007900:	eb000414 	bl	40008958 <_tx_thread_sleep>
40007904:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007908:	eb000412 	bl	40008958 <_tx_thread_sleep>
4000790c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007910:	eb000410 	bl	40008958 <_tx_thread_sleep>
40007914:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007918:	eb00040e 	bl	40008958 <_tx_thread_sleep>
4000791c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007920:	eb00040c 	bl	40008958 <_tx_thread_sleep>
40007924:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007928:	eb00040a 	bl	40008958 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
4000792c:	eb006e49 	bl	40023258 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007930:	e2502000 	subs	r2, r0, #0
40007934:	1a000102 	bne	40007d44 <UVCAppThread_Entry+0x4e4>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007938:	e59f59ec 	ldr	r5, [pc, #2540]	; 4000832c <UVCAppThread_Entry+0xacc>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
4000793c:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007940:	e1a01002 	mov	r1, r2
40007944:	e28d008c 	add	r0, sp, #140	; 0x8c
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007948:	e58d508c 	str	r5, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
4000794c:	e58d2090 	str	r2, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
40007950:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007954:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007958:	eb006f37 	bl	4002363c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
4000795c:	e2501000 	subs	r1, r0, #0
40007960:	1a000100 	bne	40007d68 <UVCAppThread_Entry+0x508>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007964:	e59f69c4 	ldr	r6, [pc, #2500]	; 40008330 <UVCAppThread_Entry+0xad0>
40007968:	e3a02028 	mov	r2, #40	; 0x28
4000796c:	e1a00006 	mov	r0, r6
40007970:	eb000850 	bl	40009ab8 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007974:	e2502000 	subs	r2, r0, #0
40007978:	1a000103 	bne	40007d8c <UVCAppThread_Entry+0x52c>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
4000797c:	e3a08002 	mov	r8, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007980:	e1a01002 	mov	r1, r2
40007984:	e28d009c 	add	r0, sp, #156	; 0x9c

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007988:	e2887001 	add	r7, r8, #1

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
4000798c:	e586203c 	str	r2, [r6, #60]	; 0x3c
    clearFeatureRqtReceived = CyFalse;
40007990:	e5862040 	str	r2, [r6, #64]	; 0x40

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007994:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007998:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
4000799c:	e5cd809c 	strb	r8, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
400079a0:	e5cd809d 	strb	r8, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
400079a4:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
400079a8:	eb006b32 	bl	40022678 <CyU3PGpioInit>
    if (apiRetStatus != 0)
400079ac:	e2502000 	subs	r2, r0, #0
400079b0:	1a00017b 	bne	40007fa4 <UVCAppThread_Entry+0x744>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
400079b4:	e3a00016 	mov	r0, #22
400079b8:	e3a01001 	mov	r1, #1
400079bc:	eb002c17 	bl	40012a20 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
400079c0:	e2502000 	subs	r2, r0, #0
400079c4:	1a00016d 	bne	40007f80 <UVCAppThread_Entry+0x720>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
400079c8:	e3a00014 	mov	r0, #20
400079cc:	e3a01001 	mov	r1, #1
400079d0:	eb002c12 	bl	40012a20 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
400079d4:	e2502000 	subs	r2, r0, #0
400079d8:	1a00015f 	bne	40007f5c <UVCAppThread_Entry+0x6fc>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
400079dc:	e3a00018 	mov	r0, #24
400079e0:	e3a01001 	mov	r1, #1
400079e4:	eb002c0d 	bl	40012a20 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
400079e8:	e2502000 	subs	r2, r0, #0
400079ec:	1a000151 	bne	40007f38 <UVCAppThread_Entry+0x6d8>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
400079f0:	e3a04001 	mov	r4, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
400079f4:	e3a00016 	mov	r0, #22
400079f8:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
400079fc:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a00:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007a04:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007a08:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007a0c:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007a10:	eb006bd0 	bl	40022958 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a14:	e2502000 	subs	r2, r0, #0
40007a18:	1a00011b 	bne	40007e8c <UVCAppThread_Entry+0x62c>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007a1c:	e3a00014 	mov	r0, #20
40007a20:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007a24:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a28:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007a2c:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007a30:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007a34:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007a38:	eb006bc6 	bl	40022958 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a3c:	e2502000 	subs	r2, r0, #0
40007a40:	1a000108 	bne	40007e68 <UVCAppThread_Entry+0x608>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007a44:	e3a00018 	mov	r0, #24
40007a48:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007a4c:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007a50:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007a54:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a58:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007a5c:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007a60:	eb006bbc 	bl	40022958 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a64:	e2502000 	subs	r2, r0, #0
40007a68:	1a0000f5 	bne	40007e44 <UVCAppThread_Entry+0x5e4>
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007a6c:	e3a0a000 	mov	sl, #0
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007a70:	e3a07002 	mov	r7, #2
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007a74:	e3a08003 	mov	r8, #3
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007a78:	e3a00001 	mov	r0, #1
40007a7c:	e28d107c 	add	r1, sp, #124	; 0x7c
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007a80:	e1cd77bc 	strh	r7, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007a84:	e5cd8088 	strb	r8, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
40007a88:	e58da084 	str	sl, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007a8c:	e58da080 	str	sl, [sp, #128]	; 0x80

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007a90:	eb004c4a 	bl	4001abc0 <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a94:	e2502000 	subs	r2, r0, #0
40007a98:	1a00017a 	bne	40008088 <UVCAppThread_Entry+0x828>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007a9c:	e59f0890 	ldr	r0, [pc, #2192]	; 40008334 <UVCAppThread_Entry+0xad4>
40007aa0:	eb004ec4 	bl	4001b5b8 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007aa4:	ebfff283 	bl	400044b8 <SensorReset>
    SensorInit ();
40007aa8:	ebfff2b2 	bl	40004578 <SensorInit>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007aac:	eb005937 	bl	4001df90 <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ab0:	e2504000 	subs	r4, r0, #0
40007ab4:	1a000169 	bne	40008060 <UVCAppThread_Entry+0x800>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007ab8:	e1a01004 	mov	r1, r4
40007abc:	e59f0874 	ldr	r0, [pc, #2164]	; 40008338 <UVCAppThread_Entry+0xad8>
40007ac0:	eb0063e9 	bl	40020a6c <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007ac4:	e59f0870 	ldr	r0, [pc, #2160]	; 4000833c <UVCAppThread_Entry+0xadc>
40007ac8:	eb0063d2 	bl	40020a18 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007acc:	e59f286c 	ldr	r2, [pc, #2156]	; 40008340 <UVCAppThread_Entry+0xae0>
40007ad0:	e1a01004 	mov	r1, r4
40007ad4:	e3a00001 	mov	r0, #1
40007ad8:	eb00570c 	bl	4001d710 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007adc:	e1a01004 	mov	r1, r4
40007ae0:	e59f285c 	ldr	r2, [pc, #2140]	; 40008344 <UVCAppThread_Entry+0xae4>
40007ae4:	e1a00004 	mov	r0, r4
40007ae8:	eb005708 	bl	4001d710 <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007aec:	e1a01004 	mov	r1, r4
40007af0:	e59f2850 	ldr	r2, [pc, #2128]	; 40008348 <UVCAppThread_Entry+0xae8>
40007af4:	e3a00002 	mov	r0, #2
40007af8:	eb005704 	bl	4001d710 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007afc:	e1a01004 	mov	r1, r4
40007b00:	e59f2844 	ldr	r2, [pc, #2116]	; 4000834c <UVCAppThread_Entry+0xaec>
40007b04:	e3a00007 	mov	r0, #7
40007b08:	eb005700 	bl	4001d710 <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007b0c:	e59f283c 	ldr	r2, [pc, #2108]	; 40008350 <UVCAppThread_Entry+0xaf0>
40007b10:	e1a01004 	mov	r1, r4
40007b14:	e3a00004 	mov	r0, #4
40007b18:	eb0056fc 	bl	4001d710 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007b1c:	e1a01004 	mov	r1, r4
40007b20:	e59f282c 	ldr	r2, [pc, #2092]	; 40008354 <UVCAppThread_Entry+0xaf4>
40007b24:	e1a00008 	mov	r0, r8
40007b28:	eb0056f8 	bl	4001d710 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007b2c:	e1a01004 	mov	r1, r4
40007b30:	e59f2820 	ldr	r2, [pc, #2080]	; 40008358 <UVCAppThread_Entry+0xaf8>
40007b34:	e3a00006 	mov	r0, #6
40007b38:	eb0056f4 	bl	4001d710 <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007b3c:	e1a01004 	mov	r1, r4
40007b40:	e59f2814 	ldr	r2, [pc, #2068]	; 4000835c <UVCAppThread_Entry+0xafc>
40007b44:	e3a00005 	mov	r0, #5
40007b48:	eb0056f0 	bl	4001d710 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007b4c:	e3a01001 	mov	r1, #1
40007b50:	e59f2808 	ldr	r2, [pc, #2056]	; 40008360 <UVCAppThread_Entry+0xb00>
40007b54:	e3a00005 	mov	r0, #5
40007b58:	eb0056ec 	bl	4001d710 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007b5c:	e3a01002 	mov	r1, #2
40007b60:	e59f27fc 	ldr	r2, [pc, #2044]	; 40008364 <UVCAppThread_Entry+0xb04>
40007b64:	e3a00005 	mov	r0, #5
40007b68:	eb0056e8 	bl	4001d710 <CyU3PUsbSetDesc>
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007b6c:	e3a05001 	mov	r5, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007b70:	e3a02040 	mov	r2, #64	; 0x40
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007b74:	e3a00082 	mov	r0, #130	; 0x82
40007b78:	e28d10a8 	add	r1, sp, #168	; 0xa8
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007b7c:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007b80:	e5cd80ac 	strb	r8, [sp, #172]	; 0xac
    endPointConfig.pcktSize = 64;
40007b84:	e1cd2bb0 	strh	r2, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007b88:	e5cd40b3 	strb	r4, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007b8c:	e1cd4abe 	strh	r4, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007b90:	e5cd50b2 	strb	r5, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007b94:	eb005044 	bl	4001bcac <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b98:	e2503000 	subs	r3, r0, #0
40007b9c:	1a000125 	bne	40008038 <UVCAppThread_Entry+0x7d8>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007ba0:	e59fc7c0 	ldr	ip, [pc, #1984]	; 40008368 <UVCAppThread_Entry+0xb08>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007ba4:	e59fe7c0 	ldr	lr, [pc, #1984]	; 4000836c <UVCAppThread_Entry+0xb0c>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007ba8:	e3a08b01 	mov	r8, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007bac:	e3a0a010 	mov	sl, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007bb0:	e59f07b8 	ldr	r0, [pc, #1976]	; 40008370 <UVCAppThread_Entry+0xb10>
40007bb4:	e3a01004 	mov	r1, #4
40007bb8:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007bbc:	e1cd83b4 	strh	r8, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007bc0:	e1cd53b6 	strh	r5, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007bc4:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007bc8:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007bcc:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007bd0:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007bd4:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007bd8:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007bdc:	e5cd4044 	strb	r4, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007be0:	e58da048 	str	sl, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007be4:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007be8:	eb0036b2 	bl	400156b8 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007bec:	e2508000 	subs	r8, r0, #0
40007bf0:	1a000106 	bne	40008010 <UVCAppThread_Entry+0x7b0>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007bf4:	e3a00b01 	mov	r0, #1024	; 0x400
40007bf8:	ebfff05a 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007bfc:	e59f1770 	ldr	r1, [pc, #1904]	; 40008374 <UVCAppThread_Entry+0xb14>
    if (glInterStaBuffer == 0)
40007c00:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007c04:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007c08:	0a000130 	beq	400080d0 <UVCAppThread_Entry+0x870>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007c0c:	e3a03004 	mov	r3, #4
40007c10:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007c14:	e59f375c 	ldr	r3, [pc, #1884]	; 40008378 <UVCAppThread_Entry+0xb18>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007c18:	e3a0e901 	mov	lr, #16384	; 0x4000
40007c1c:	e1cde0bc 	strh	lr, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007c20:	e59fe754 	ldr	lr, [pc, #1876]	; 4000837c <UVCAppThread_Entry+0xb1c>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007c24:	e1cd31ba 	strh	r3, [sp, #26]
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007c28:	e59f3750 	ldr	r3, [pc, #1872]	; 40008380 <UVCAppThread_Entry+0xb20>

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007c2c:	e3a0cc01 	mov	ip, #256	; 0x100
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007c30:	e28d200c 	add	r2, sp, #12

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007c34:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007c38:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007c3c:	e3a0c00c 	mov	ip, #12
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007c40:	e3a0e004 	mov	lr, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007c44:	e5cd402a 	strb	r4, [sp, #42]	; 0x2a
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007c48:	e59f0734 	ldr	r0, [pc, #1844]	; 40008384 <UVCAppThread_Entry+0xb24>
40007c4c:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007c50:	e3a04018 	mov	r4, #24
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007c54:	e1cd71b0 	strh	r7, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007c58:	e1cd82b2 	strh	r8, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007c5c:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007c60:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007c64:	e1cd82b8 	strh	r8, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007c68:	e58d402c 	str	r4, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007c6c:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007c70:	eb003fb0 	bl	40017b38 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c74:	e2502000 	subs	r2, r0, #0
40007c78:	1a00010b 	bne	400080ac <UVCAppThread_Entry+0x84c>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007c7c:	e1a00005 	mov	r0, r5
40007c80:	e1a01005 	mov	r1, r5
40007c84:	eb004f04 	bl	4001b89c <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c88:	e2502000 	subs	r2, r0, #0
40007c8c:	1a000063 	bne	40007e20 <UVCAppThread_Entry+0x5c0>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007c90:	e3a00064 	mov	r0, #100	; 0x64
40007c94:	eb002de2 	bl	40013424 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007c98:	eb0053b1 	bl	4001cb64 <CyU3PUsbGetSpeed>

    endPointConfig.enable   = 1;
40007c9c:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007ca0:	e5cd70ac 	strb	r7, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007ca4:	e28d10a8 	add	r1, sp, #168	; 0xa8

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007ca8:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007cac:	e5c60048 	strb	r0, [r6, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007cb0:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007cb4:	03a07b01 	moveq	r7, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007cb8:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
40007cbc:	15cd50b2 	strbne	r5, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007cc0:	e3a00083 	mov	r0, #131	; 0x83
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007cc4:	e3a05000 	mov	r5, #0

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007cc8:	01cd7bb0 	strheq	r7, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007ccc:	05cda0b2 	strbeq	sl, [sp, #178]	; 0xb2
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007cd0:	e1cd5abe 	strh	r5, [sp, #174]	; 0xae
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007cd4:	eb004ff4 	bl	4001bcac <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cd8:	e2502000 	subs	r2, r0, #0
40007cdc:	1a000046 	bne	40007dfc <UVCAppThread_Entry+0x59c>
40007ce0:	e59f86a0 	ldr	r8, [pc, #1696]	; 40008388 <UVCAppThread_Entry+0xb28>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007ce4:	e59f5644 	ldr	r5, [pc, #1604]	; 40008330 <UVCAppThread_Entry+0xad0>
40007ce8:	e1a04002 	mov	r4, r2
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007cec:	e1a07008 	mov	r7, r8
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007cf0:	e59f0638 	ldr	r0, [pc, #1592]	; 40008330 <UVCAppThread_Entry+0xad0>
40007cf4:	e3a01001 	mov	r1, #1
40007cf8:	e3a02002 	mov	r2, #2
40007cfc:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007d00:	e58d4000 	str	r4, [sp]
40007d04:	eb0007db 	bl	40009c78 <_txe_event_flags_get>
40007d08:	e3500000 	cmp	r0, #0
40007d0c:	1a000027 	bne	40007db0 <UVCAppThread_Entry+0x550>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007d10:	e595a044 	ldr	sl, [r5, #68]	; 0x44
40007d14:	e35a0000 	cmp	sl, #0
40007d18:	0a000003 	beq	40007d2c <UVCAppThread_Entry+0x4cc>
40007d1c:	e1d522be 	ldrh	r2, [r5, #46]	; 0x2e
40007d20:	e1d513b0 	ldrh	r1, [r5, #48]	; 0x30
40007d24:	e1520001 	cmp	r2, r1
40007d28:	0a000060 	beq	40007eb0 <UVCAppThread_Entry+0x650>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007d2c:	e3a01040 	mov	r1, #64	; 0x40
40007d30:	e3a02000 	mov	r2, #0
40007d34:	e59f05f4 	ldr	r0, [pc, #1524]	; 40008330 <UVCAppThread_Entry+0xad0>
40007d38:	eb0007fe 	bl	40009d38 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007d3c:	eb000ab6 	bl	4000a81c <_txe_thread_relinquish>
    }
40007d40:	eaffffea 	b	40007cf0 <UVCAppThread_Entry+0x490>
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007d44:	e3a00004 	mov	r0, #4
40007d48:	e59f163c 	ldr	r1, [pc, #1596]	; 4000838c <UVCAppThread_Entry+0xb2c>
40007d4c:	eb002c43 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007d50:	e59f1638 	ldr	r1, [pc, #1592]	; 40008390 <UVCAppThread_Entry+0xb30>
40007d54:	e3a00004 	mov	r0, #4
40007d58:	eb002c40 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007d5c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007d60:	eb0002fc 	bl	40008958 <_tx_thread_sleep>
40007d64:	eafffff9 	b	40007d50 <UVCAppThread_Entry+0x4f0>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007d68:	e3a00004 	mov	r0, #4
40007d6c:	e59f1620 	ldr	r1, [pc, #1568]	; 40008394 <UVCAppThread_Entry+0xb34>
40007d70:	eb002c3a 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007d74:	e59f1614 	ldr	r1, [pc, #1556]	; 40008390 <UVCAppThread_Entry+0xb30>
40007d78:	e3a00004 	mov	r0, #4
40007d7c:	eb002c37 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007d80:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007d84:	eb0002f3 	bl	40008958 <_tx_thread_sleep>
40007d88:	eafffff9 	b	40007d74 <UVCAppThread_Entry+0x514>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40007d8c:	e3a00004 	mov	r0, #4
40007d90:	e59f1600 	ldr	r1, [pc, #1536]	; 40008398 <UVCAppThread_Entry+0xb38>
40007d94:	eb002c31 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007d98:	e59f15f0 	ldr	r1, [pc, #1520]	; 40008390 <UVCAppThread_Entry+0xb30>
40007d9c:	e3a00004 	mov	r0, #4
40007da0:	eb002c2e 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007da4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007da8:	eb0002ea 	bl	40008958 <_tx_thread_sleep>
40007dac:	eafffff9 	b	40007d98 <UVCAppThread_Entry+0x538>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40007db0:	e59f0578 	ldr	r0, [pc, #1400]	; 40008330 <UVCAppThread_Entry+0xad0>
40007db4:	e3a01002 	mov	r1, #2
40007db8:	e3a02003 	mov	r2, #3
40007dbc:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007dc0:	e58d4000 	str	r4, [sp]
40007dc4:	eb0007ab 	bl	40009c78 <_txe_event_flags_get>
40007dc8:	e3500000 	cmp	r0, #0
40007dcc:	1a0000da 	bne	4000813c <UVCAppThread_Entry+0x8dc>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007dd0:	e5952040 	ldr	r2, [r5, #64]	; 0x40
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40007dd4:	e5854044 	str	r4, [r5, #68]	; 0x44
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007dd8:	e3520000 	cmp	r2, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40007ddc:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
40007de0:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40007de4:	e1c543b0 	strh	r4, [r5, #48]	; 0x30
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
40007de8:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                pbc=0;
40007dec:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
40007df0:	0a0000bf 	beq	400080f4 <UVCAppThread_Entry+0x894>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
40007df4:	e5864040 	str	r4, [r6, #64]	; 0x40
40007df8:	eaffffcb 	b	40007d2c <UVCAppThread_Entry+0x4cc>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40007dfc:	e3a00004 	mov	r0, #4
40007e00:	e59f1594 	ldr	r1, [pc, #1428]	; 4000839c <UVCAppThread_Entry+0xb3c>
40007e04:	eb002c15 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e08:	e59f1580 	ldr	r1, [pc, #1408]	; 40008390 <UVCAppThread_Entry+0xb30>
40007e0c:	e3a00004 	mov	r0, #4
40007e10:	eb002c12 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e14:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e18:	eb0002ce 	bl	40008958 <_tx_thread_sleep>
40007e1c:	eafffff9 	b	40007e08 <UVCAppThread_Entry+0x5a8>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
40007e20:	e3a00004 	mov	r0, #4
40007e24:	e59f1574 	ldr	r1, [pc, #1396]	; 400083a0 <UVCAppThread_Entry+0xb40>
40007e28:	eb002c0c 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e2c:	e59f155c 	ldr	r1, [pc, #1372]	; 40008390 <UVCAppThread_Entry+0xb30>
40007e30:	e3a00004 	mov	r0, #4
40007e34:	eb002c09 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e38:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e3c:	eb0002c5 	bl	40008958 <_tx_thread_sleep>
40007e40:	eafffff9 	b	40007e2c <UVCAppThread_Entry+0x5cc>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
40007e44:	e3a00004 	mov	r0, #4
40007e48:	e59f1554 	ldr	r1, [pc, #1364]	; 400083a4 <UVCAppThread_Entry+0xb44>
40007e4c:	eb002c03 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e50:	e59f1538 	ldr	r1, [pc, #1336]	; 40008390 <UVCAppThread_Entry+0xb30>
40007e54:	e3a00004 	mov	r0, #4
40007e58:	eb002c00 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e5c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e60:	eb0002bc 	bl	40008958 <_tx_thread_sleep>
40007e64:	eafffff9 	b	40007e50 <UVCAppThread_Entry+0x5f0>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40007e68:	e3a00004 	mov	r0, #4
40007e6c:	e59f1534 	ldr	r1, [pc, #1332]	; 400083a8 <UVCAppThread_Entry+0xb48>
40007e70:	eb002bfa 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e74:	e59f1514 	ldr	r1, [pc, #1300]	; 40008390 <UVCAppThread_Entry+0xb30>
40007e78:	e3a00004 	mov	r0, #4
40007e7c:	eb002bf7 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e80:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e84:	eb0002b3 	bl	40008958 <_tx_thread_sleep>
40007e88:	eafffff9 	b	40007e74 <UVCAppThread_Entry+0x614>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
40007e8c:	e3a00004 	mov	r0, #4
40007e90:	e59f1514 	ldr	r1, [pc, #1300]	; 400083ac <UVCAppThread_Entry+0xb4c>
40007e94:	eb002bf1 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e98:	e59f14f0 	ldr	r1, [pc, #1264]	; 40008390 <UVCAppThread_Entry+0xb30>
40007e9c:	e3a00004 	mov	r0, #4
40007ea0:	eb002bee 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007ea4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ea8:	eb0002aa 	bl	40008958 <_tx_thread_sleep>
40007eac:	eafffff9 	b	40007e98 <UVCAppThread_Entry+0x638>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
40007eb0:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
                consCount = 0;
40007eb4:	e1c543b0 	strh	r4, [r5, #48]	; 0x30
                hitFV     = CyFalse;
40007eb8:	e5854044 	str	r4, [r5, #68]	; 0x44
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007ebc:	e5d80481 	ldrb	r0, [r8, #1153]	; 0x481
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
40007ec0:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007ec4:	e220e001 	eor	lr, r0, #1
40007ec8:	e5c8e481 	strb	lr, [r8, #1153]	; 0x481
                if(stiflag){
40007ecc:	e5953098 	ldr	r3, [r5, #152]	; 0x98
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007ed0:	e5d7c481 	ldrb	ip, [r7, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40007ed4:	e3530000 	cmp	r3, #0
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007ed8:	138cc020 	orrne	ip, ip, #32
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40007edc:	020cc0df 	andeq	ip, ip, #223	; 0xdf
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007ee0:	15c7c481 	strbne	ip, [r7, #1153]	; 0x481
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40007ee4:	05c7c481 	strbeq	ip, [r7, #1153]	; 0x481
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
                	stiflag = CyFalse;
40007ee8:	15854098 	strne	r4, [r5, #152]	; 0x98
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
40007eec:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
            	pbc=0;
40007ef0:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40007ef4:	e59f0488 	ldr	r0, [pc, #1160]	; 40008384 <UVCAppThread_Entry+0xb24>
40007ef8:	eb0040df 	bl	4001827c <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007efc:	e2502000 	subs	r2, r0, #0
40007f00:	1a000039 	bne	40007fec <UVCAppThread_Entry+0x78c>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40007f04:	e1a01002 	mov	r1, r2
40007f08:	e59f0474 	ldr	r0, [pc, #1140]	; 40008384 <UVCAppThread_Entry+0xb24>
40007f0c:	eb0041c7 	bl	40018630 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007f10:	e2502000 	subs	r2, r0, #0
40007f14:	1a00002b 	bne	40007fc8 <UVCAppThread_Entry+0x768>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40007f18:	e59f045c 	ldr	r0, [pc, #1116]	; 4000837c <UVCAppThread_Entry+0xb1c>
40007f1c:	e1a01002 	mov	r1, r2
40007f20:	e3a0a002 	mov	sl, #2
40007f24:	e1a02000 	mov	r2, r0
40007f28:	e1a03001 	mov	r3, r1
40007f2c:	e58da000 	str	sl, [sp]
40007f30:	eb004df9 	bl	4001b71c <CyU3PGpifSMSwitch>
40007f34:	eaffff7c 	b	40007d2c <UVCAppThread_Entry+0x4cc>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
40007f38:	e3a00004 	mov	r0, #4
40007f3c:	e59f146c 	ldr	r1, [pc, #1132]	; 400083b0 <UVCAppThread_Entry+0xb50>
40007f40:	eb002bc6 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f44:	e59f1444 	ldr	r1, [pc, #1092]	; 40008390 <UVCAppThread_Entry+0xb30>
40007f48:	e3a00004 	mov	r0, #4
40007f4c:	eb002bc3 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f50:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f54:	eb00027f 	bl	40008958 <_tx_thread_sleep>
40007f58:	eafffff9 	b	40007f44 <UVCAppThread_Entry+0x6e4>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40007f5c:	e3a00004 	mov	r0, #4
40007f60:	e59f144c 	ldr	r1, [pc, #1100]	; 400083b4 <UVCAppThread_Entry+0xb54>
40007f64:	eb002bbd 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f68:	e59f1420 	ldr	r1, [pc, #1056]	; 40008390 <UVCAppThread_Entry+0xb30>
40007f6c:	e3a00004 	mov	r0, #4
40007f70:	eb002bba 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f74:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f78:	eb000276 	bl	40008958 <_tx_thread_sleep>
40007f7c:	eafffff9 	b	40007f68 <UVCAppThread_Entry+0x708>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40007f80:	e3a00004 	mov	r0, #4
40007f84:	e59f142c 	ldr	r1, [pc, #1068]	; 400083b8 <UVCAppThread_Entry+0xb58>
40007f88:	eb002bb4 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f8c:	e59f13fc 	ldr	r1, [pc, #1020]	; 40008390 <UVCAppThread_Entry+0xb30>
40007f90:	e3a00004 	mov	r0, #4
40007f94:	eb002bb1 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f98:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f9c:	eb00026d 	bl	40008958 <_tx_thread_sleep>
40007fa0:	eafffff9 	b	40007f8c <UVCAppThread_Entry+0x72c>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
40007fa4:	e3a00004 	mov	r0, #4
40007fa8:	e59f140c 	ldr	r1, [pc, #1036]	; 400083bc <UVCAppThread_Entry+0xb5c>
40007fac:	eb002bab 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fb0:	e59f13d8 	ldr	r1, [pc, #984]	; 40008390 <UVCAppThread_Entry+0xb30>
40007fb4:	e3a00004 	mov	r0, #4
40007fb8:	eb002ba8 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fbc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fc0:	eb000264 	bl	40008958 <_tx_thread_sleep>
40007fc4:	eafffff9 	b	40007fb0 <UVCAppThread_Entry+0x750>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40007fc8:	e3a00004 	mov	r0, #4
40007fcc:	e59f13ec 	ldr	r1, [pc, #1004]	; 400083c0 <UVCAppThread_Entry+0xb60>
40007fd0:	eb002ba2 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fd4:	e59f13b4 	ldr	r1, [pc, #948]	; 40008390 <UVCAppThread_Entry+0xb30>
40007fd8:	e3a00004 	mov	r0, #4
40007fdc:	eb002b9f 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fe0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fe4:	eb00025b 	bl	40008958 <_tx_thread_sleep>
40007fe8:	eafffff9 	b	40007fd4 <UVCAppThread_Entry+0x774>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40007fec:	e3a00004 	mov	r0, #4
40007ff0:	e59f13cc 	ldr	r1, [pc, #972]	; 400083c4 <UVCAppThread_Entry+0xb64>
40007ff4:	eb002b99 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ff8:	e59f1390 	ldr	r1, [pc, #912]	; 40008390 <UVCAppThread_Entry+0xb30>
40007ffc:	e3a00004 	mov	r0, #4
40008000:	eb002b96 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008004:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008008:	eb000252 	bl	40008958 <_tx_thread_sleep>
4000800c:	eafffff9 	b	40007ff8 <UVCAppThread_Entry+0x798>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008010:	e3a00004 	mov	r0, #4
40008014:	e59f13ac 	ldr	r1, [pc, #940]	; 400083c8 <UVCAppThread_Entry+0xb68>
40008018:	e1a02008 	mov	r2, r8
4000801c:	eb002b8f 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008020:	e59f1368 	ldr	r1, [pc, #872]	; 40008390 <UVCAppThread_Entry+0xb30>
40008024:	e3a00004 	mov	r0, #4
40008028:	eb002b8c 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000802c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008030:	eb000248 	bl	40008958 <_tx_thread_sleep>
40008034:	eafffff9 	b	40008020 <UVCAppThread_Entry+0x7c0>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40008038:	e3a00004 	mov	r0, #4
4000803c:	e59f1358 	ldr	r1, [pc, #856]	; 4000839c <UVCAppThread_Entry+0xb3c>
40008040:	e1a02003 	mov	r2, r3
40008044:	eb002b85 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008048:	e59f1340 	ldr	r1, [pc, #832]	; 40008390 <UVCAppThread_Entry+0xb30>
4000804c:	e3a00004 	mov	r0, #4
40008050:	eb002b82 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008054:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008058:	eb00023e 	bl	40008958 <_tx_thread_sleep>
4000805c:	eafffff9 	b	40008048 <UVCAppThread_Entry+0x7e8>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008060:	e3a00004 	mov	r0, #4
40008064:	e59f1360 	ldr	r1, [pc, #864]	; 400083cc <UVCAppThread_Entry+0xb6c>
40008068:	e1a02004 	mov	r2, r4
4000806c:	eb002b7b 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008070:	e59f1318 	ldr	r1, [pc, #792]	; 40008390 <UVCAppThread_Entry+0xb30>
40008074:	e3a00004 	mov	r0, #4
40008078:	eb002b78 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000807c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008080:	eb000234 	bl	40008958 <_tx_thread_sleep>
40008084:	eafffff9 	b	40008070 <UVCAppThread_Entry+0x810>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
40008088:	e3a00004 	mov	r0, #4
4000808c:	e59f133c 	ldr	r1, [pc, #828]	; 400083d0 <UVCAppThread_Entry+0xb70>
40008090:	eb002b72 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008094:	e59f12f4 	ldr	r1, [pc, #756]	; 40008390 <UVCAppThread_Entry+0xb30>
40008098:	e3a00004 	mov	r0, #4
4000809c:	eb002b6f 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080a0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080a4:	eb00022b 	bl	40008958 <_tx_thread_sleep>
400080a8:	eafffff9 	b	40008094 <UVCAppThread_Entry+0x834>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400080ac:	e3a00004 	mov	r0, #4
400080b0:	e59f131c 	ldr	r1, [pc, #796]	; 400083d4 <UVCAppThread_Entry+0xb74>
400080b4:	eb002b69 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080b8:	e59f12d0 	ldr	r1, [pc, #720]	; 40008390 <UVCAppThread_Entry+0xb30>
400080bc:	e3a00004 	mov	r0, #4
400080c0:	eb002b66 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080c4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080c8:	eb000222 	bl	40008958 <_tx_thread_sleep>
400080cc:	eafffff9 	b	400080b8 <UVCAppThread_Entry+0x858>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
400080d0:	e2800004 	add	r0, r0, #4
400080d4:	e59f12fc 	ldr	r1, [pc, #764]	; 400083d8 <UVCAppThread_Entry+0xb78>
400080d8:	eb002b60 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080dc:	e59f12ac 	ldr	r1, [pc, #684]	; 40008390 <UVCAppThread_Entry+0xb30>
400080e0:	e3a00004 	mov	r0, #4
400080e4:	eb002b5d 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080e8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080ec:	eb000219 	bl	40008958 <_tx_thread_sleep>
400080f0:	eafffff9 	b	400080dc <UVCAppThread_Entry+0x87c>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
400080f4:	e59f0288 	ldr	r0, [pc, #648]	; 40008384 <UVCAppThread_Entry+0xb24>
400080f8:	eb00405f 	bl	4001827c <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
400080fc:	e3500000 	cmp	r0, #0
40008100:	1a000002 	bne	40008110 <UVCAppThread_Entry+0x8b0>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40008104:	e3a00083 	mov	r0, #131	; 0x83
40008108:	eb0051f0 	bl	4001c8d0 <CyU3PUsbFlushEp>
4000810c:	eaffff38 	b	40007df4 <UVCAppThread_Entry+0x594>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008110:	e59f1278 	ldr	r1, [pc, #632]	; 40008390 <UVCAppThread_Entry+0xb30>
40008114:	e3a00004 	mov	r0, #4
40008118:	eb002b50 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000811c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008120:	eb00020c 	bl	40008958 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008124:	e59f1264 	ldr	r1, [pc, #612]	; 40008390 <UVCAppThread_Entry+0xb30>
40008128:	e3a00004 	mov	r0, #4
4000812c:	eb002b4b 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008130:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008134:	eb000207 	bl	40008958 <_tx_thread_sleep>
40008138:	eafffff4 	b	40008110 <UVCAppThread_Entry+0x8b0>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
4000813c:	e3e0c000 	mvn	ip, #0
40008140:	e3a01001 	mov	r1, #1
40008144:	e3a02002 	mov	r2, #2
40008148:	e28d30b4 	add	r3, sp, #180	; 0xb4
4000814c:	e59f01dc 	ldr	r0, [pc, #476]	; 40008330 <UVCAppThread_Entry+0xad0>
40008150:	e58dc000 	str	ip, [sp]
40008154:	eb0006c7 	bl	40009c78 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008158:	e1a02004 	mov	r2, r4
4000815c:	e59f0220 	ldr	r0, [pc, #544]	; 40008384 <UVCAppThread_Entry+0xb24>
40008160:	e1a01004 	mov	r1, r4
40008164:	eb004131 	bl	40018630 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008168:	e2502000 	subs	r2, r0, #0
4000816c:	1a00002f 	bne	40008230 <UVCAppThread_Entry+0x9d0>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40008170:	e5953038 	ldr	r3, [r5, #56]	; 0x38
40008174:	e3530000 	cmp	r3, #0
40008178:	1a000058 	bne	400082e0 <UVCAppThread_Entry+0xa80>
                {
                    //for start up of the AF Lens
                   	SensorSetIrisControl(0x21, 0x30, 1, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris manual (AF Lens)
4000817c:	e3a01030 	mov	r1, #48	; 0x30
40008180:	e3a02001 	mov	r2, #1
40008184:	e2833082 	add	r3, r3, #130	; 0x82
40008188:	e3a00021 	mov	r0, #33	; 0x21
4000818c:	ebfff164 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40008190:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008194:	eb0001ef 	bl	40008958 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 2, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris manual (non AF Lens)
40008198:	e3a01030 	mov	r1, #48	; 0x30
4000819c:	e3a02002 	mov	r2, #2
400081a0:	e3a03052 	mov	r3, #82	; 0x52
400081a4:	e3a00025 	mov	r0, #37	; 0x25
400081a8:	ebfff15d 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400081ac:	e3a00f7d 	mov	r0, #500	; 0x1f4
400081b0:	eb0001e8 	bl	40008958 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x23, 0x30, 0xa, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
400081b4:	e3a01030 	mov	r1, #48	; 0x30
400081b8:	e3a0200a 	mov	r2, #10
400081bc:	e3a03082 	mov	r3, #130	; 0x82
400081c0:	e3a00023 	mov	r0, #35	; 0x23
400081c4:	ebfff156 	bl	40004724 <SensorSetIrisControl>
                   	CyU3PThreadSleep(300);
400081c8:	e3a00f4b 	mov	r0, #300	; 0x12c
400081cc:	eb0001e1 	bl	40008958 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
400081d0:	e3a01030 	mov	r1, #48	; 0x30
400081d4:	e1a02004 	mov	r2, r4
400081d8:	e3a03082 	mov	r3, #130	; 0x82
400081dc:	e3a00021 	mov	r0, #33	; 0x21
400081e0:	ebfff14f 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400081e4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400081e8:	eb0001da 	bl	40008958 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
400081ec:	e3a03052 	mov	r3, #82	; 0x52
400081f0:	e3a01030 	mov	r1, #48	; 0x30
400081f4:	e1a02004 	mov	r2, r4
400081f8:	e3a00025 	mov	r0, #37	; 0x25
400081fc:	ebfff148 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40008200:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008204:	eb0001d3 	bl	40008958 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008208:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
4000820c:	e3530003 	cmp	r3, #3
40008210:	0a00002b 	beq	400082c4 <UVCAppThread_Entry+0xa64>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008214:	e3530002 	cmp	r3, #2
40008218:	0a00000d 	beq	40008254 <UVCAppThread_Entry+0x9f4>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
4000821c:	e3a01001 	mov	r1, #1
                    CyU3PThreadSleep(200);
40008220:	e3a000c8 	mov	r0, #200	; 0xc8
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008224:	e5861038 	str	r1, [r6, #56]	; 0x38
                    CyU3PThreadSleep(200);
40008228:	eb0001ca 	bl	40008958 <_tx_thread_sleep>
4000822c:	eafffebe 	b	40007d2c <UVCAppThread_Entry+0x4cc>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008230:	e3a00004 	mov	r0, #4
40008234:	e59f11a0 	ldr	r1, [pc, #416]	; 400083dc <UVCAppThread_Entry+0xb7c>
40008238:	eb002b08 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000823c:	e59f114c 	ldr	r1, [pc, #332]	; 40008390 <UVCAppThread_Entry+0xb30>
40008240:	e3a00004 	mov	r0, #4
40008244:	eb002b05 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008248:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000824c:	eb0001c1 	bl	40008958 <_tx_thread_sleep>
40008250:	eafffff9 	b	4000823c <UVCAppThread_Entry+0x9dc>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
40008254:	e59f1184 	ldr	r1, [pc, #388]	; 400083e0 <UVCAppThread_Entry+0xb80>
40008258:	e3a00001 	mov	r0, #1
4000825c:	eb002aff 	bl	40012e60 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
40008260:	e59f017c 	ldr	r0, [pc, #380]	; 400083e4 <UVCAppThread_Entry+0xb84>
40008264:	eb004c31 	bl	4001b330 <CyU3PGpifLoad>
40008268:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
4000826c:	e3520000 	cmp	r2, #0
40008270:	1a000022 	bne	40008300 <UVCAppThread_Entry+0xaa0>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008274:	e5d63048 	ldrb	r3, [r6, #72]	; 0x48
40008278:	e3530003 	cmp	r3, #3
4000827c:	0a000001 	beq	40008288 <UVCAppThread_Entry+0xa28>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
40008280:	e3530002 	cmp	r3, #2
40008284:	1affffe4 	bne	4000821c <UVCAppThread_Entry+0x9bc>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008288:	e1a00002 	mov	r0, r2
4000828c:	e1a01002 	mov	r1, r2
40008290:	eb004ccc 	bl	4001b5c8 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008294:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008298:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
4000829c:	0affffde 	beq	4000821c <UVCAppThread_Entry+0x9bc>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
400082a0:	e3a00004 	mov	r0, #4
400082a4:	e59f113c 	ldr	r1, [pc, #316]	; 400083e8 <UVCAppThread_Entry+0xb88>
400082a8:	eb002aec 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082ac:	e59f10dc 	ldr	r1, [pc, #220]	; 40008390 <UVCAppThread_Entry+0xb30>
400082b0:	e3a00004 	mov	r0, #4
400082b4:	eb002ae9 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082b8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082bc:	eb0001a5 	bl	40008958 <_tx_thread_sleep>
400082c0:	eafffff9 	b	400082ac <UVCAppThread_Entry+0xa4c>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
400082c4:	e59f1120 	ldr	r1, [pc, #288]	; 400083ec <UVCAppThread_Entry+0xb8c>
400082c8:	e3a00001 	mov	r0, #1
400082cc:	eb002ae3 	bl	40012e60 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
400082d0:	e59f0118 	ldr	r0, [pc, #280]	; 400083f0 <UVCAppThread_Entry+0xb90>
400082d4:	eb004c15 	bl	4001b330 <CyU3PGpifLoad>
400082d8:	e1a02000 	mov	r2, r0
400082dc:	eaffffe2 	b	4000826c <UVCAppThread_Entry+0xa0c>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400082e0:	e59f0094 	ldr	r0, [pc, #148]	; 4000837c <UVCAppThread_Entry+0xb1c>
400082e4:	e3a0e002 	mov	lr, #2
400082e8:	e1a01004 	mov	r1, r4
400082ec:	e1a02000 	mov	r2, r0
400082f0:	e1a03004 	mov	r3, r4
400082f4:	e58de000 	str	lr, [sp]
400082f8:	eb004d07 	bl	4001b71c <CyU3PGpifSMSwitch>
400082fc:	eafffe8a 	b	40007d2c <UVCAppThread_Entry+0x4cc>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
40008300:	e3a00004 	mov	r0, #4
40008304:	e59f10e8 	ldr	r1, [pc, #232]	; 400083f4 <UVCAppThread_Entry+0xb94>
40008308:	eb002ad4 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000830c:	e59f107c 	ldr	r1, [pc, #124]	; 40008390 <UVCAppThread_Entry+0xb30>
40008310:	e3a00004 	mov	r0, #4
40008314:	eb002ad1 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008318:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000831c:	eb00018d 	bl	40008958 <_tx_thread_sleep>
40008320:	eafffff9 	b	4000830c <UVCAppThread_Entry+0xaac>
40008324:	400116a0 	.word	0x400116a0
40008328:	0001c200 	.word	0x0001c200
4000832c:	000186a0 	.word	0x000186a0
40008330:	40030f90 	.word	0x40030f90
40008334:	40004fa4 	.word	0x40004fa4
40008338:	40004cb0 	.word	0x40004cb0
4000833c:	40004b40 	.word	0x40004b40
40008340:	40010c48 	.word	0x40010c48
40008344:	40010c5c 	.word	0x40010c5c
40008348:	40010c70 	.word	0x40010c70
4000834c:	40010d68 	.word	0x40010d68
40008350:	40010c88 	.word	0x40010c88
40008354:	40010c7c 	.word	0x40010c7c
40008358:	40010d80 	.word	0x40010d80
4000835c:	40010e6c 	.word	0x40010e6c
40008360:	40010e70 	.word	0x40010e70
40008364:	40010ea8 	.word	0x40010ea8
40008368:	00003f01 	.word	0x00003f01
4000836c:	00000302 	.word	0x00000302
40008370:	40033030 	.word	0x40033030
40008374:	400330d0 	.word	0x400330d0
40008378:	00000303 	.word	0x00000303
4000837c:	00000101 	.word	0x00000101
40008380:	40004a04 	.word	0x40004a04
40008384:	40032ee4 	.word	0x40032ee4
40008388:	40030000 	.word	0x40030000
4000838c:	400116c0 	.word	0x400116c0
40008390:	40011228 	.word	0x40011228
40008394:	400116dc 	.word	0x400116dc
40008398:	400116f8 	.word	0x400116f8
4000839c:	400118c8 	.word	0x400118c8
400083a0:	400119a4 	.word	0x400119a4
400083a4:	40011830 	.word	0x40011830
400083a8:	400117fc 	.word	0x400117fc
400083ac:	400117c8 	.word	0x400117c8
400083b0:	4001179c 	.word	0x4001179c
400083b4:	40011770 	.word	0x40011770
400083b8:	40011748 	.word	0x40011748
400083bc:	40011724 	.word	0x40011724
400083c0:	400119f8 	.word	0x400119f8
400083c4:	400119cc 	.word	0x400119cc
400083c8:	400118fc 	.word	0x400118fc
400083cc:	40011898 	.word	0x40011898
400083d0:	40011868 	.word	0x40011868
400083d4:	40011974 	.word	0x40011974
400083d8:	4001193c 	.word	0x4001193c
400083dc:	40011a2c 	.word	0x40011a2c
400083e0:	40011a70 	.word	0x40011a70
400083e4:	40011038 	.word	0x40011038
400083e8:	40011ab8 	.word	0x40011ab8
400083ec:	40011a60 	.word	0x40011a60
400083f0:	4001101c 	.word	0x4001101c
400083f4:	40011a80 	.word	0x40011a80

400083f8 <CyFxUVCApplnI2CInit>:

/* I2C initialization. */
//static void
void
CyFxUVCApplnI2CInit (void)
{
400083f8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400083fc:	e24dd014 	sub	sp, sp, #20
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40008400:	eb006b94 	bl	40023258 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40008404:	e2502000 	subs	r2, r0, #0
40008408:	1a00000b 	bne	4000843c <CyFxUVCApplnI2CInit+0x44>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
4000840c:	e59fc070 	ldr	ip, [pc, #112]	; 40008484 <CyFxUVCApplnI2CInit+0x8c>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40008410:	e3e03000 	mvn	r3, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008414:	e1a0000d 	mov	r0, sp
40008418:	e1a01002 	mov	r1, r2
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
4000841c:	e58dc000 	str	ip, [sp]
    i2cConfig.isDma      = CyFalse;
40008420:	e98d000c 	stmib	sp, {r2, r3}
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;
40008424:	e1cd30bc 	strh	r3, [sp, #12]

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008428:	eb006c83 	bl	4002363c <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
4000842c:	e3500000 	cmp	r0, #0
40008430:	1a00000a 	bne	40008460 <CyFxUVCApplnI2CInit+0x68>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
        CyFxAppErrorHandler (status);
    }
}
40008434:	e28dd014 	add	sp, sp, #20
40008438:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
4000843c:	e3a00004 	mov	r0, #4
40008440:	e59f1040 	ldr	r1, [pc, #64]	; 40008488 <CyFxUVCApplnI2CInit+0x90>
40008444:	eb002a85 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008448:	e59f103c 	ldr	r1, [pc, #60]	; 4000848c <CyFxUVCApplnI2CInit+0x94>
4000844c:	e3a00004 	mov	r0, #4
40008450:	eb002a82 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008454:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008458:	eb00013e 	bl	40008958 <_tx_thread_sleep>
4000845c:	eafffff9 	b	40008448 <CyFxUVCApplnI2CInit+0x50>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40008460:	e3a00004 	mov	r0, #4
40008464:	e59f1024 	ldr	r1, [pc, #36]	; 40008490 <CyFxUVCApplnI2CInit+0x98>
40008468:	eb002a7c 	bl	40012e60 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000846c:	e59f1018 	ldr	r1, [pc, #24]	; 4000848c <CyFxUVCApplnI2CInit+0x94>
40008470:	e3a00004 	mov	r0, #4
40008474:	eb002a79 	bl	40012e60 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008478:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000847c:	eb000135 	bl	40008958 <_tx_thread_sleep>
40008480:	eafffff9 	b	4000846c <CyFxUVCApplnI2CInit+0x74>
40008484:	000186a0 	.word	0x000186a0
40008488:	400116c0 	.word	0x400116c0
4000848c:	40011228 	.word	0x40011228
40008490:	400116dc 	.word	0x400116dc

40008494 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008494:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008498:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
4000849c:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084a0:	ebffec73 	bl	40003674 <CyU3PMemAlloc>
400084a4:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084a8:	e3a00a01 	mov	r0, #4096	; 0x1000
400084ac:	ebffec70 	bl	40003674 <CyU3PMemAlloc>
400084b0:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084b4:	e3a00a01 	mov	r0, #4096	; 0x1000
400084b8:	ebffec6d 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400084bc:	e35a0000 	cmp	sl, #0
400084c0:	135b0000 	cmpne	fp, #0
400084c4:	13a09000 	movne	r9, #0
400084c8:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400084cc:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400084d0:	1a000000 	bne	400084d8 <CyFxApplicationDefine+0x44>
400084d4:	eafffffe 	b	400084d4 <CyFxApplicationDefine+0x40>
400084d8:	e3500000 	cmp	r0, #0
400084dc:	0afffffc 	beq	400084d4 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
400084e0:	e28d4028 	add	r4, sp, #40	; 0x28
400084e4:	e1a00004 	mov	r0, r4
400084e8:	e3a01040 	mov	r1, #64	; 0x40
400084ec:	e59f2118 	ldr	r2, [pc, #280]	; 4000860c <CyFxApplicationDefine+0x178>
400084f0:	ebffebb2 	bl	400033c0 <cmdbufCreate>
400084f4:	e1a05004 	mov	r5, r4
400084f8:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
400084fc:	e59f710c 	ldr	r7, [pc, #268]	; 40008610 <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008500:	e59f810c 	ldr	r8, [pc, #268]	; 40008614 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008504:	e1a0c007 	mov	ip, r7
40008508:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
4000850c:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008510:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008514:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008518:	e59f20f8 	ldr	r2, [pc, #248]	; 40008618 <CyFxApplicationDefine+0x184>
4000851c:	e1a00004 	mov	r0, r4
40008520:	e3a01020 	mov	r1, #32
40008524:	ebffeba5 	bl	400033c0 <cmdbufCreate>
40008528:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
4000852c:	e1a0c008 	mov	ip, r8
40008530:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008534:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008538:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000853c:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
40008540:	e1a00007 	mov	r0, r7
40008544:	ebffebb5 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
40008548:	e1a00008 	mov	r0, r8
4000854c:	ebffebb3 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008550:	e3a050a8 	mov	r5, #168	; 0xa8
40008554:	e3a0ca01 	mov	ip, #4096	; 0x1000
40008558:	e59f00bc 	ldr	r0, [pc, #188]	; 4000861c <CyFxApplicationDefine+0x188>
4000855c:	e59f10bc 	ldr	r1, [pc, #188]	; 40008620 <CyFxApplicationDefine+0x18c>
40008560:	e59f20bc 	ldr	r2, [pc, #188]	; 40008624 <CyFxApplicationDefine+0x190>
40008564:	e1a03009 	mov	r3, r9
40008568:	e88d1400 	stm	sp, {sl, ip}
4000856c:	e58d6008 	str	r6, [sp, #8]
40008570:	e58d600c 	str	r6, [sp, #12]
40008574:	e58d9010 	str	r9, [sp, #16]
40008578:	e58d4014 	str	r4, [sp, #20]
4000857c:	e58d5018 	str	r5, [sp, #24]
40008580:	eb0007c7 	bl	4000a4a4 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008584:	e250c000 	subs	ip, r0, #0
40008588:	1affffd1 	bne	400084d4 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
4000858c:	e1a0300c 	mov	r3, ip
40008590:	e3a07b02 	mov	r7, #2048	; 0x800
40008594:	e59f008c 	ldr	r0, [pc, #140]	; 40008628 <CyFxApplicationDefine+0x194>
40008598:	e59f108c 	ldr	r1, [pc, #140]	; 4000862c <CyFxApplicationDefine+0x198>
4000859c:	e59f208c 	ldr	r2, [pc, #140]	; 40008630 <CyFxApplicationDefine+0x19c>
400085a0:	e58dc010 	str	ip, [sp, #16]
400085a4:	e58db000 	str	fp, [sp]
400085a8:	e58d7004 	str	r7, [sp, #4]
400085ac:	e58d6008 	str	r6, [sp, #8]
400085b0:	e58d600c 	str	r6, [sp, #12]
400085b4:	e58d4014 	str	r4, [sp, #20]
400085b8:	e58d5018 	str	r5, [sp, #24]
400085bc:	eb0007b8 	bl	4000a4a4 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400085c0:	e250c000 	subs	ip, r0, #0
400085c4:	1affffc2 	bne	400084d4 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
400085c8:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400085cc:	e59f0060 	ldr	r0, [pc, #96]	; 40008634 <CyFxApplicationDefine+0x1a0>
400085d0:	e59f1060 	ldr	r1, [pc, #96]	; 40008638 <CyFxApplicationDefine+0x1a4>
400085d4:	e59f2060 	ldr	r2, [pc, #96]	; 4000863c <CyFxApplicationDefine+0x1a8>
400085d8:	e1a0300c 	mov	r3, ip
400085dc:	e58de000 	str	lr, [sp]
400085e0:	e58d7004 	str	r7, [sp, #4]
400085e4:	e58d6008 	str	r6, [sp, #8]
400085e8:	e58d600c 	str	r6, [sp, #12]
400085ec:	e58dc010 	str	ip, [sp, #16]
400085f0:	e58d4014 	str	r4, [sp, #20]
400085f4:	e58d5018 	str	r5, [sp, #24]
400085f8:	eb0007a9 	bl	4000a4a4 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400085fc:	e3500000 	cmp	r0, #0
40008600:	1affffb3 	bne	400084d4 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008604:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008608:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000860c:	400330d4 	.word	0x400330d4
40008610:	40032ec4 	.word	0x40032ec4
40008614:	40033110 	.word	0x40033110
40008618:	40032ff8 	.word	0x40032ff8
4000861c:	4003102c 	.word	0x4003102c
40008620:	40011af0 	.word	0x40011af0
40008624:	40007860 	.word	0x40007860
40008628:	400310d4 	.word	0x400310d4
4000862c:	40011b04 	.word	0x40011b04
40008630:	40006b04 	.word	0x40006b04
40008634:	4003117c 	.word	0x4003117c
40008638:	40011b1c 	.word	0x40011b1c
4000863c:	400047c4 	.word	0x400047c4

40008640 <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008640:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008644:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008648:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
4000864c:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008650:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008654:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008658:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
4000865c:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
40008660:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008664:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008668:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
4000866c:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008670:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008674:	eb002731 	bl	40012340 <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008678:	e2504000 	subs	r4, r0, #0
4000867c:	0a000000 	beq	40008684 <main+0x44>
40008680:	eafffffe 	b	40008680 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
40008684:	e1a01004 	mov	r1, r4
40008688:	e1a02004 	mov	r2, r4
4000868c:	e1a00005 	mov	r0, r5
40008690:	eb002704 	bl	400122a8 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008694:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
40008698:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
4000869c:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
400086a0:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
400086a4:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
400086a8:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
400086ac:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
400086b0:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
400086b4:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
400086b8:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
400086bc:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400086c0:	eb0028c8 	bl	400129e8 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
400086c4:	e2504000 	subs	r4, r0, #0
400086c8:	1affffec 	bne	40008680 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
400086cc:	eb000002 	bl	400086dc <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
400086d0:	e1a00004 	mov	r0, r4
400086d4:	e28dd03c 	add	sp, sp, #60	; 0x3c
400086d8:	e8bd8030 	pop	{r4, r5, pc}

400086dc <_tx_initialize_kernel_enter>:
400086dc:	e92d4010 	push	{r4, lr}
400086e0:	e59f004c 	ldr	r0, [pc, #76]	; 40008734 <_tx_initialize_kernel_enter+0x58>
400086e4:	e5900000 	ldr	r0, [r0]
400086e8:	e59f1048 	ldr	r1, [pc, #72]	; 40008738 <_tx_initialize_kernel_enter+0x5c>
400086ec:	e1500001 	cmp	r0, r1
400086f0:	0a000004 	beq	40008708 <_tx_initialize_kernel_enter+0x2c>
400086f4:	e1e00221 	mvn	r0, r1, lsr #4
400086f8:	e59f1034 	ldr	r1, [pc, #52]	; 40008734 <_tx_initialize_kernel_enter+0x58>
400086fc:	e5810000 	str	r0, [r1]
40008700:	eb0009ee 	bl	4000aec0 <_tx_initialize_low_level>
40008704:	eb00105f 	bl	4000c888 <_tx_initialize_high_level>
40008708:	e59f002c 	ldr	r0, [pc, #44]	; 4000873c <_tx_initialize_kernel_enter+0x60>
4000870c:	e59f1020 	ldr	r1, [pc, #32]	; 40008734 <_tx_initialize_kernel_enter+0x58>
40008710:	e5810000 	str	r0, [r1]
40008714:	e59f0024 	ldr	r0, [pc, #36]	; 40008740 <_tx_initialize_kernel_enter+0x64>
40008718:	e5900000 	ldr	r0, [r0]
4000871c:	ebffebc0 	bl	40003624 <tx_application_define>
40008720:	e3a00000 	mov	r0, #0
40008724:	e59f1008 	ldr	r1, [pc, #8]	; 40008734 <_tx_initialize_kernel_enter+0x58>
40008728:	e5810000 	str	r0, [r1]
4000872c:	eb00091f 	bl	4000abb0 <_tx_thread_schedule>
40008730:	e8bd8010 	pop	{r4, pc}
40008734:	40030e30 	.word	0x40030e30
40008738:	f0f0f0f1 	.word	0xf0f0f0f1
4000873c:	f0f0f0f0 	.word	0xf0f0f0f0
40008740:	40030dc8 	.word	0x40030dc8

40008744 <_tx_thread_identify>:
40008744:	e10f1000 	mrs	r1, CPSR
40008748:	e3812080 	orr	r2, r1, #128	; 0x80
4000874c:	e121f002 	msr	CPSR_c, r2
40008750:	e59f30e0 	ldr	r3, [pc, #224]	; 40008838 <_tx_thread_identify+0xf4>
40008754:	e5930000 	ldr	r0, [r3]
40008758:	e3500000 	cmp	r0, #0
4000875c:	0a000031 	beq	40008828 <_tx_thread_identify+0xe4>
40008760:	e59f30d4 	ldr	r3, [pc, #212]	; 4000883c <_tx_thread_identify+0xf8>
40008764:	e5933000 	ldr	r3, [r3]
40008768:	e2833001 	add	r3, r3, #1
4000876c:	e59fc0c8 	ldr	ip, [pc, #200]	; 4000883c <_tx_thread_identify+0xf8>
40008770:	e58c3000 	str	r3, [ip]
40008774:	e580300c 	str	r3, [r0, #12]
40008778:	e59f30c0 	ldr	r3, [pc, #192]	; 40008840 <_tx_thread_identify+0xfc>
4000877c:	e5933000 	ldr	r3, [r3]
40008780:	e3530000 	cmp	r3, #0
40008784:	1a000006 	bne	400087a4 <_tx_thread_identify+0x60>
40008788:	e59f30b4 	ldr	r3, [pc, #180]	; 40008844 <_tx_thread_identify+0x100>
4000878c:	e5933000 	ldr	r3, [r3]
40008790:	e5803000 	str	r3, [r0]
40008794:	e5903000 	ldr	r3, [r0]
40008798:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
4000879c:	e5803004 	str	r3, [r0, #4]
400087a0:	ea00000d 	b	400087dc <_tx_thread_identify+0x98>
400087a4:	e59f3094 	ldr	r3, [pc, #148]	; 40008840 <_tx_thread_identify+0xfc>
400087a8:	e5933000 	ldr	r3, [r3]
400087ac:	e59fc094 	ldr	ip, [pc, #148]	; 40008848 <_tx_thread_identify+0x104>
400087b0:	e153000c 	cmp	r3, ip
400087b4:	2a000004 	bcs	400087cc <_tx_thread_identify+0x88>
400087b8:	e3e03000 	mvn	r3, #0
400087bc:	e5803000 	str	r3, [r0]
400087c0:	e3a03000 	mov	r3, #0
400087c4:	e5803004 	str	r3, [r0, #4]
400087c8:	ea000003 	b	400087dc <_tx_thread_identify+0x98>
400087cc:	e59f3074 	ldr	r3, [pc, #116]	; 40008848 <_tx_thread_identify+0x104>
400087d0:	e5803000 	str	r3, [r0]
400087d4:	e3a03000 	mov	r3, #0
400087d8:	e5803004 	str	r3, [r0, #4]
400087dc:	e3a03067 	mov	r3, #103	; 0x67
400087e0:	e5803008 	str	r3, [r0, #8]
400087e4:	e3a03000 	mov	r3, #0
400087e8:	e5803010 	str	r3, [r0, #16]
400087ec:	e5803014 	str	r3, [r0, #20]
400087f0:	e5803018 	str	r3, [r0, #24]
400087f4:	e580301c 	str	r3, [r0, #28]
400087f8:	e2800020 	add	r0, r0, #32
400087fc:	e59f3048 	ldr	r3, [pc, #72]	; 4000884c <_tx_thread_identify+0x108>
40008800:	e5933000 	ldr	r3, [r3]
40008804:	e1500003 	cmp	r0, r3
40008808:	3a000001 	bcc	40008814 <_tx_thread_identify+0xd0>
4000880c:	e59f303c 	ldr	r3, [pc, #60]	; 40008850 <_tx_thread_identify+0x10c>
40008810:	e5930000 	ldr	r0, [r3]
40008814:	e59f301c 	ldr	r3, [pc, #28]	; 40008838 <_tx_thread_identify+0xf4>
40008818:	e5830000 	str	r0, [r3]
4000881c:	e59f3030 	ldr	r3, [pc, #48]	; 40008854 <_tx_thread_identify+0x110>
40008820:	e5933000 	ldr	r3, [r3]
40008824:	e5830020 	str	r0, [r3, #32]
40008828:	e121f001 	msr	CPSR_c, r1
4000882c:	e59f0010 	ldr	r0, [pc, #16]	; 40008844 <_tx_thread_identify+0x100>
40008830:	e5900000 	ldr	r0, [r0]
40008834:	e12fff1e 	bx	lr
40008838:	40030ea4 	.word	0x40030ea4
4000883c:	40030ea8 	.word	0x40030ea8
40008840:	40030e30 	.word	0x40030e30
40008844:	40030e38 	.word	0x40030e38
40008848:	f0f0f0f0 	.word	0xf0f0f0f0
4000884c:	40030ea0 	.word	0x40030ea0
40008850:	40030e9c 	.word	0x40030e9c
40008854:	40030e90 	.word	0x40030e90

40008858 <_tx_thread_initialize>:
40008858:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000885c:	e3a00000 	mov	r0, #0
40008860:	e59f10c0 	ldr	r1, [pc, #192]	; 40008928 <_tx_thread_initialize+0xd0>
40008864:	e5810000 	str	r0, [r1]
40008868:	e59f10bc 	ldr	r1, [pc, #188]	; 4000892c <_tx_thread_initialize+0xd4>
4000886c:	e5810000 	str	r0, [r1]
40008870:	e59f00b8 	ldr	r0, [pc, #184]	; 40008930 <_tx_thread_initialize+0xd8>
40008874:	e3a01000 	mov	r1, #0
40008878:	e5801000 	str	r1, [r0]
4000887c:	e59f00b0 	ldr	r0, [pc, #176]	; 40008934 <_tx_thread_initialize+0xdc>
40008880:	e5801000 	str	r1, [r0]
40008884:	e3a00020 	mov	r0, #32
40008888:	e59f10a8 	ldr	r1, [pc, #168]	; 40008938 <_tx_thread_initialize+0xe0>
4000888c:	e5810000 	str	r0, [r1]
40008890:	e3a00000 	mov	r0, #0
40008894:	e59f10a0 	ldr	r1, [pc, #160]	; 4000893c <_tx_thread_initialize+0xe4>
40008898:	e5c10000 	strb	r0, [r1]
4000889c:	e2816001 	add	r6, r1, #1
400088a0:	e3a04001 	mov	r4, #1
400088a4:	ea000009 	b	400088d0 <_tx_thread_initialize+0x78>
400088a8:	e1a07004 	mov	r7, r4
400088ac:	e3a05000 	mov	r5, #0
400088b0:	ea000002 	b	400088c0 <_tx_thread_initialize+0x68>
400088b4:	e1a070a7 	lsr	r7, r7, #1
400088b8:	e2850001 	add	r0, r5, #1
400088bc:	e20050ff 	and	r5, r0, #255	; 0xff
400088c0:	e3170001 	tst	r7, #1
400088c4:	0afffffa 	beq	400088b4 <_tx_thread_initialize+0x5c>
400088c8:	e4c65001 	strb	r5, [r6], #1
400088cc:	e2844001 	add	r4, r4, #1
400088d0:	e3540c01 	cmp	r4, #256	; 0x100
400088d4:	3afffff3 	bcc	400088a8 <_tx_thread_initialize+0x50>
400088d8:	e3a01080 	mov	r1, #128	; 0x80
400088dc:	e59f005c 	ldr	r0, [pc, #92]	; 40008940 <_tx_thread_initialize+0xe8>
400088e0:	eb002af4 	bl	400134b8 <__aeabi_memclr4>
400088e4:	e3a00000 	mov	r0, #0
400088e8:	e59f1054 	ldr	r1, [pc, #84]	; 40008944 <_tx_thread_initialize+0xec>
400088ec:	e5810000 	str	r0, [r1]
400088f0:	e59f1050 	ldr	r1, [pc, #80]	; 40008948 <_tx_thread_initialize+0xf0>
400088f4:	e5810000 	str	r0, [r1]
400088f8:	e59f104c 	ldr	r1, [pc, #76]	; 4000894c <_tx_thread_initialize+0xf4>
400088fc:	e5810000 	str	r0, [r1]
40008900:	e59f1048 	ldr	r1, [pc, #72]	; 40008950 <_tx_thread_initialize+0xf8>
40008904:	e5810000 	str	r0, [r1]
40008908:	e59f0044 	ldr	r0, [pc, #68]	; 40008954 <_tx_thread_initialize+0xfc>
4000890c:	e5900000 	ldr	r0, [r0]
40008910:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008914:	e3800c01 	orr	r0, r0, #256	; 0x100
40008918:	e3800002 	orr	r0, r0, #2
4000891c:	e59f1030 	ldr	r1, [pc, #48]	; 40008954 <_tx_thread_initialize+0xfc>
40008920:	e5810000 	str	r0, [r1]
40008924:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008928:	40030e38 	.word	0x40030e38
4000892c:	40030e3c 	.word	0x40030e3c
40008930:	40030e48 	.word	0x40030e48
40008934:	40030e4c 	.word	0x40030e4c
40008938:	40030e50 	.word	0x40030e50
4000893c:	40032774 	.word	0x40032774
40008940:	40032874 	.word	0x40032874
40008944:	40030e40 	.word	0x40030e40
40008948:	40030e44 	.word	0x40030e44
4000894c:	40030e54 	.word	0x40030e54
40008950:	40030e5c 	.word	0x40030e5c
40008954:	40030e58 	.word	0x40030e58

40008958 <_tx_thread_sleep>:
40008958:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000895c:	e1a04000 	mov	r4, r0
40008960:	e59f018c 	ldr	r0, [pc, #396]	; 40008af4 <_tx_thread_sleep+0x19c>
40008964:	e5900000 	ldr	r0, [r0]
40008968:	e58d0000 	str	r0, [sp]
4000896c:	e59d0000 	ldr	r0, [sp]
40008970:	e3500000 	cmp	r0, #0
40008974:	0a000007 	beq	40008998 <_tx_thread_sleep+0x40>
40008978:	e59f1178 	ldr	r1, [pc, #376]	; 40008af8 <_tx_thread_sleep+0x1a0>
4000897c:	e59d0000 	ldr	r0, [sp]
40008980:	e1500001 	cmp	r0, r1
40008984:	0a000003 	beq	40008998 <_tx_thread_sleep+0x40>
40008988:	e59f016c 	ldr	r0, [pc, #364]	; 40008afc <_tx_thread_sleep+0x1a4>
4000898c:	e5900000 	ldr	r0, [r0]
40008990:	e3500000 	cmp	r0, #0
40008994:	0a000001 	beq	400089a0 <_tx_thread_sleep+0x48>
40008998:	e3a00013 	mov	r0, #19
4000899c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400089a0:	e3540000 	cmp	r4, #0
400089a4:	1a000001 	bne	400089b0 <_tx_thread_sleep+0x58>
400089a8:	e3a00000 	mov	r0, #0
400089ac:	eafffffa 	b	4000899c <_tx_thread_sleep+0x44>
400089b0:	e10f5000 	mrs	r5, CPSR
400089b4:	e3856080 	orr	r6, r5, #128	; 0x80
400089b8:	e121f006 	msr	CPSR_c, r6
400089bc:	e59f113c 	ldr	r1, [pc, #316]	; 40008b00 <_tx_thread_sleep+0x1a8>
400089c0:	e5910000 	ldr	r0, [r1]
400089c4:	e3500000 	cmp	r0, #0
400089c8:	0a000033 	beq	40008a9c <_tx_thread_sleep+0x144>
400089cc:	e59f1130 	ldr	r1, [pc, #304]	; 40008b04 <_tx_thread_sleep+0x1ac>
400089d0:	e5911000 	ldr	r1, [r1]
400089d4:	e2811001 	add	r1, r1, #1
400089d8:	e59f2124 	ldr	r2, [pc, #292]	; 40008b04 <_tx_thread_sleep+0x1ac>
400089dc:	e5821000 	str	r1, [r2]
400089e0:	e580100c 	str	r1, [r0, #12]
400089e4:	e59f1110 	ldr	r1, [pc, #272]	; 40008afc <_tx_thread_sleep+0x1a4>
400089e8:	e5911000 	ldr	r1, [r1]
400089ec:	e3510000 	cmp	r1, #0
400089f0:	1a000006 	bne	40008a10 <_tx_thread_sleep+0xb8>
400089f4:	e59f10f8 	ldr	r1, [pc, #248]	; 40008af4 <_tx_thread_sleep+0x19c>
400089f8:	e5911000 	ldr	r1, [r1]
400089fc:	e5801000 	str	r1, [r0]
40008a00:	e5901000 	ldr	r1, [r0]
40008a04:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008a08:	e5801004 	str	r1, [r0, #4]
40008a0c:	ea00000d 	b	40008a48 <_tx_thread_sleep+0xf0>
40008a10:	e59f10e4 	ldr	r1, [pc, #228]	; 40008afc <_tx_thread_sleep+0x1a4>
40008a14:	e5911000 	ldr	r1, [r1]
40008a18:	e59f20e8 	ldr	r2, [pc, #232]	; 40008b08 <_tx_thread_sleep+0x1b0>
40008a1c:	e1510002 	cmp	r1, r2
40008a20:	2a000004 	bcs	40008a38 <_tx_thread_sleep+0xe0>
40008a24:	e3e01000 	mvn	r1, #0
40008a28:	e5801000 	str	r1, [r0]
40008a2c:	e3a01000 	mov	r1, #0
40008a30:	e5801004 	str	r1, [r0, #4]
40008a34:	ea000003 	b	40008a48 <_tx_thread_sleep+0xf0>
40008a38:	e59f10c8 	ldr	r1, [pc, #200]	; 40008b08 <_tx_thread_sleep+0x1b0>
40008a3c:	e5801000 	str	r1, [r0]
40008a40:	e3a01000 	mov	r1, #0
40008a44:	e5801004 	str	r1, [r0, #4]
40008a48:	e3a01070 	mov	r1, #112	; 0x70
40008a4c:	e5801008 	str	r1, [r0, #8]
40008a50:	e5804010 	str	r4, [r0, #16]
40008a54:	e59d1000 	ldr	r1, [sp]
40008a58:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008a5c:	e5801014 	str	r1, [r0, #20]
40008a60:	e580d018 	str	sp, [r0, #24]
40008a64:	e3a01000 	mov	r1, #0
40008a68:	e580101c 	str	r1, [r0, #28]
40008a6c:	e2800020 	add	r0, r0, #32
40008a70:	e59f1094 	ldr	r1, [pc, #148]	; 40008b0c <_tx_thread_sleep+0x1b4>
40008a74:	e5911000 	ldr	r1, [r1]
40008a78:	e1500001 	cmp	r0, r1
40008a7c:	3a000001 	bcc	40008a88 <_tx_thread_sleep+0x130>
40008a80:	e59f1088 	ldr	r1, [pc, #136]	; 40008b10 <_tx_thread_sleep+0x1b8>
40008a84:	e5910000 	ldr	r0, [r1]
40008a88:	e59f1070 	ldr	r1, [pc, #112]	; 40008b00 <_tx_thread_sleep+0x1a8>
40008a8c:	e5810000 	str	r0, [r1]
40008a90:	e59f107c 	ldr	r1, [pc, #124]	; 40008b14 <_tx_thread_sleep+0x1bc>
40008a94:	e5911000 	ldr	r1, [r1]
40008a98:	e5810020 	str	r0, [r1, #32]
40008a9c:	e3a00004 	mov	r0, #4
40008aa0:	e59d1000 	ldr	r1, [sp]
40008aa4:	e5810030 	str	r0, [r1, #48]	; 0x30
40008aa8:	e3a00001 	mov	r0, #1
40008aac:	e59d1000 	ldr	r1, [sp]
40008ab0:	e5810038 	str	r0, [r1, #56]	; 0x38
40008ab4:	e3a00000 	mov	r0, #0
40008ab8:	e59d1000 	ldr	r1, [sp]
40008abc:	e5810084 	str	r0, [r1, #132]	; 0x84
40008ac0:	e59d0000 	ldr	r0, [sp]
40008ac4:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008ac8:	e59f0048 	ldr	r0, [pc, #72]	; 40008b18 <_tx_thread_sleep+0x1c0>
40008acc:	e5900000 	ldr	r0, [r0]
40008ad0:	e2800001 	add	r0, r0, #1
40008ad4:	e59f103c 	ldr	r1, [pc, #60]	; 40008b18 <_tx_thread_sleep+0x1c0>
40008ad8:	e5810000 	str	r0, [r1]
40008adc:	e121f005 	msr	CPSR_c, r5
40008ae0:	e59d0000 	ldr	r0, [sp]
40008ae4:	eb00000c 	bl	40008b1c <_tx_thread_system_suspend>
40008ae8:	e59d0000 	ldr	r0, [sp]
40008aec:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008af0:	eaffffa9 	b	4000899c <_tx_thread_sleep+0x44>
40008af4:	40030e38 	.word	0x40030e38
40008af8:	40032974 	.word	0x40032974
40008afc:	40030e30 	.word	0x40030e30
40008b00:	40030ea4 	.word	0x40030ea4
40008b04:	40030ea8 	.word	0x40030ea8
40008b08:	f0f0f0f0 	.word	0xf0f0f0f0
40008b0c:	40030ea0 	.word	0x40030ea0
40008b10:	40030e9c 	.word	0x40030e9c
40008b14:	40030e90 	.word	0x40030e90
40008b18:	40030e54 	.word	0x40030e54

40008b1c <_tx_thread_system_suspend>:
40008b1c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008b20:	e1a04000 	mov	r4, r0
40008b24:	e3a0b000 	mov	fp, #0
40008b28:	e59f05b0 	ldr	r0, [pc, #1456]	; 400090e0 <_tx_thread_system_suspend+0x5c4>
40008b2c:	e5900000 	ldr	r0, [r0]
40008b30:	e1540000 	cmp	r4, r0
40008b34:	1a000009 	bne	40008b60 <_tx_thread_system_suspend+0x44>
40008b38:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008b3c:	e58d0000 	str	r0, [sp]
40008b40:	e59d0000 	ldr	r0, [sp]
40008b44:	e3500000 	cmp	r0, #0
40008b48:	0a000004 	beq	40008b60 <_tx_thread_system_suspend+0x44>
40008b4c:	e59d0000 	ldr	r0, [sp]
40008b50:	e3700001 	cmn	r0, #1
40008b54:	0a000001 	beq	40008b60 <_tx_thread_system_suspend+0x44>
40008b58:	e284004c 	add	r0, r4, #76	; 0x4c
40008b5c:	eb00020a 	bl	4000938c <_tx_timer_system_activate>
40008b60:	e5940008 	ldr	r0, [r4, #8]
40008b64:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008b68:	e1500001 	cmp	r0, r1
40008b6c:	2a000001 	bcs	40008b78 <_tx_thread_system_suspend+0x5c>
40008b70:	e5940008 	ldr	r0, [r4, #8]
40008b74:	e5840040 	str	r0, [r4, #64]	; 0x40
40008b78:	e594000c 	ldr	r0, [r4, #12]
40008b7c:	e5900000 	ldr	r0, [r0]
40008b80:	e59f155c 	ldr	r1, [pc, #1372]	; 400090e4 <_tx_thread_system_suspend+0x5c8>
40008b84:	e1500001 	cmp	r0, r1
40008b88:	1a000007 	bne	40008bac <_tx_thread_system_suspend+0x90>
40008b8c:	e5940010 	ldr	r0, [r4, #16]
40008b90:	e5900001 	ldr	r0, [r0, #1]
40008b94:	e1500001 	cmp	r0, r1
40008b98:	1a000003 	bne	40008bac <_tx_thread_system_suspend+0x90>
40008b9c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008ba0:	e594100c 	ldr	r1, [r4, #12]
40008ba4:	e1500001 	cmp	r0, r1
40008ba8:	2a000001 	bcs	40008bb4 <_tx_thread_system_suspend+0x98>
40008bac:	e1a00004 	mov	r0, r4
40008bb0:	eb001941 	bl	4000f0bc <_tx_thread_stack_error_handler>
40008bb4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008bb8:	e5100004 	ldr	r0, [r0, #-4]
40008bbc:	e59f1520 	ldr	r1, [pc, #1312]	; 400090e4 <_tx_thread_system_suspend+0x5c8>
40008bc0:	e1500001 	cmp	r0, r1
40008bc4:	0a000001 	beq	40008bd0 <_tx_thread_system_suspend+0xb4>
40008bc8:	e1a00004 	mov	r0, r4
40008bcc:	eb001905 	bl	4000efe8 <_tx_thread_stack_analyze>
40008bd0:	e10f5000 	mrs	r5, CPSR
40008bd4:	e3856080 	orr	r6, r5, #128	; 0x80
40008bd8:	e121f006 	msr	CPSR_c, r6
40008bdc:	e59f0504 	ldr	r0, [pc, #1284]	; 400090e8 <_tx_thread_system_suspend+0x5cc>
40008be0:	e5900000 	ldr	r0, [r0]
40008be4:	e2400001 	sub	r0, r0, #1
40008be8:	e59f14f8 	ldr	r1, [pc, #1272]	; 400090e8 <_tx_thread_system_suspend+0x5cc>
40008bec:	e5810000 	str	r0, [r1]
40008bf0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008bf4:	e3500000 	cmp	r0, #0
40008bf8:	0a000112 	beq	40009048 <_tx_thread_system_suspend+0x52c>
40008bfc:	e59f04e8 	ldr	r0, [pc, #1256]	; 400090ec <_tx_thread_system_suspend+0x5d0>
40008c00:	e590a000 	ldr	sl, [r0]
40008c04:	e2801000 	add	r1, r0, #0
40008c08:	e5910000 	ldr	r0, [r1]
40008c0c:	e3500000 	cmp	r0, #0
40008c10:	0a000034 	beq	40008ce8 <_tx_thread_system_suspend+0x1cc>
40008c14:	e59f14d4 	ldr	r1, [pc, #1236]	; 400090f0 <_tx_thread_system_suspend+0x5d4>
40008c18:	e5911000 	ldr	r1, [r1]
40008c1c:	e2811001 	add	r1, r1, #1
40008c20:	e59f24c8 	ldr	r2, [pc, #1224]	; 400090f0 <_tx_thread_system_suspend+0x5d4>
40008c24:	e5821000 	str	r1, [r2]
40008c28:	e580100c 	str	r1, [r0, #12]
40008c2c:	e59f14c0 	ldr	r1, [pc, #1216]	; 400090f4 <_tx_thread_system_suspend+0x5d8>
40008c30:	e5911000 	ldr	r1, [r1]
40008c34:	e3510000 	cmp	r1, #0
40008c38:	1a000006 	bne	40008c58 <_tx_thread_system_suspend+0x13c>
40008c3c:	e59f149c 	ldr	r1, [pc, #1180]	; 400090e0 <_tx_thread_system_suspend+0x5c4>
40008c40:	e5911000 	ldr	r1, [r1]
40008c44:	e5801000 	str	r1, [r0]
40008c48:	e5901000 	ldr	r1, [r0]
40008c4c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008c50:	e5801004 	str	r1, [r0, #4]
40008c54:	ea00000d 	b	40008c90 <_tx_thread_system_suspend+0x174>
40008c58:	e59f1494 	ldr	r1, [pc, #1172]	; 400090f4 <_tx_thread_system_suspend+0x5d8>
40008c5c:	e5911000 	ldr	r1, [r1]
40008c60:	e59f2490 	ldr	r2, [pc, #1168]	; 400090f8 <_tx_thread_system_suspend+0x5dc>
40008c64:	e1510002 	cmp	r1, r2
40008c68:	2a000004 	bcs	40008c80 <_tx_thread_system_suspend+0x164>
40008c6c:	e3e01000 	mvn	r1, #0
40008c70:	e5801000 	str	r1, [r0]
40008c74:	e3a01000 	mov	r1, #0
40008c78:	e5801004 	str	r1, [r0, #4]
40008c7c:	ea000003 	b	40008c90 <_tx_thread_system_suspend+0x174>
40008c80:	e59f1470 	ldr	r1, [pc, #1136]	; 400090f8 <_tx_thread_system_suspend+0x5dc>
40008c84:	e5801000 	str	r1, [r0]
40008c88:	e3a01000 	mov	r1, #0
40008c8c:	e5801004 	str	r1, [r0, #4]
40008c90:	e3a01002 	mov	r1, #2
40008c94:	e5801008 	str	r1, [r0, #8]
40008c98:	e5804010 	str	r4, [r0, #16]
40008c9c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008ca0:	e5801014 	str	r1, [r0, #20]
40008ca4:	e28d1004 	add	r1, sp, #4
40008ca8:	e5801018 	str	r1, [r0, #24]
40008cac:	e59f1448 	ldr	r1, [pc, #1096]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40008cb0:	e5911000 	ldr	r1, [r1]
40008cb4:	e580101c 	str	r1, [r0, #28]
40008cb8:	e2800020 	add	r0, r0, #32
40008cbc:	e59f143c 	ldr	r1, [pc, #1084]	; 40009100 <_tx_thread_system_suspend+0x5e4>
40008cc0:	e5911000 	ldr	r1, [r1]
40008cc4:	e1500001 	cmp	r0, r1
40008cc8:	3a000001 	bcc	40008cd4 <_tx_thread_system_suspend+0x1b8>
40008ccc:	e59f1430 	ldr	r1, [pc, #1072]	; 40009104 <_tx_thread_system_suspend+0x5e8>
40008cd0:	e5910000 	ldr	r0, [r1]
40008cd4:	e59f1410 	ldr	r1, [pc, #1040]	; 400090ec <_tx_thread_system_suspend+0x5d0>
40008cd8:	e5810000 	str	r0, [r1]
40008cdc:	e59f1424 	ldr	r1, [pc, #1060]	; 40009108 <_tx_thread_system_suspend+0x5ec>
40008ce0:	e5911000 	ldr	r1, [r1]
40008ce4:	e5810020 	str	r0, [r1, #32]
40008ce8:	e35a0000 	cmp	sl, #0
40008cec:	0a000000 	beq	40008cf4 <_tx_thread_system_suspend+0x1d8>
40008cf0:	e59ab00c 	ldr	fp, [sl, #12]
40008cf4:	e3a00000 	mov	r0, #0
40008cf8:	e5840038 	str	r0, [r4, #56]	; 0x38
40008cfc:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40008d00:	e5940020 	ldr	r0, [r4, #32]
40008d04:	e1500004 	cmp	r0, r4
40008d08:	0a000029 	beq	40008db4 <_tx_thread_system_suspend+0x298>
40008d0c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40008d10:	e5941020 	ldr	r1, [r4, #32]
40008d14:	e5810024 	str	r0, [r1, #36]	; 0x24
40008d18:	e5940020 	ldr	r0, [r4, #32]
40008d1c:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40008d20:	e5810020 	str	r0, [r1, #32]
40008d24:	e59f03e0 	ldr	r0, [pc, #992]	; 4000910c <_tx_thread_system_suspend+0x5f0>
40008d28:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008d2c:	e1500004 	cmp	r0, r4
40008d30:	1a0000c4 	bne	40009048 <_tx_thread_system_suspend+0x52c>
40008d34:	e59f13d0 	ldr	r1, [pc, #976]	; 4000910c <_tx_thread_system_suspend+0x5f0>
40008d38:	e5940020 	ldr	r0, [r4, #32]
40008d3c:	e7810107 	str	r0, [r1, r7, lsl #2]
40008d40:	e59f03c8 	ldr	r0, [pc, #968]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008d44:	e5900000 	ldr	r0, [r0]
40008d48:	e3500000 	cmp	r0, #0
40008d4c:	0a000005 	beq	40008d68 <_tx_thread_system_suspend+0x24c>
40008d50:	e59f03b8 	ldr	r0, [pc, #952]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008d54:	e5900000 	ldr	r0, [r0]
40008d58:	e3a01001 	mov	r1, #1
40008d5c:	e1c00711 	bic	r0, r0, r1, lsl r7
40008d60:	e59f13a8 	ldr	r1, [pc, #936]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008d64:	e5810000 	str	r0, [r1]
40008d68:	e59f038c 	ldr	r0, [pc, #908]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40008d6c:	e5900000 	ldr	r0, [r0]
40008d70:	e1540000 	cmp	r4, r0
40008d74:	1a0000b3 	bne	40009048 <_tx_thread_system_suspend+0x52c>
40008d78:	e59f038c 	ldr	r0, [pc, #908]	; 4000910c <_tx_thread_system_suspend+0x5f0>
40008d7c:	e59f1390 	ldr	r1, [pc, #912]	; 40009114 <_tx_thread_system_suspend+0x5f8>
40008d80:	e5911000 	ldr	r1, [r1]
40008d84:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008d88:	e59f136c 	ldr	r1, [pc, #876]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40008d8c:	e5810000 	str	r0, [r1]
40008d90:	e35a0000 	cmp	sl, #0
40008d94:	0a0000ab 	beq	40009048 <_tx_thread_system_suspend+0x52c>
40008d98:	e59a000c 	ldr	r0, [sl, #12]
40008d9c:	e150000b 	cmp	r0, fp
40008da0:	1a0000a8 	bne	40009048 <_tx_thread_system_suspend+0x52c>
40008da4:	e2810000 	add	r0, r1, #0
40008da8:	e5900000 	ldr	r0, [r0]
40008dac:	e58a001c 	str	r0, [sl, #28]
40008db0:	ea0000a4 	b	40009048 <_tx_thread_system_suspend+0x52c>
40008db4:	e3a00000 	mov	r0, #0
40008db8:	e59f134c 	ldr	r1, [pc, #844]	; 4000910c <_tx_thread_system_suspend+0x5f0>
40008dbc:	e7810107 	str	r0, [r1, r7, lsl #2]
40008dc0:	e59f0350 	ldr	r0, [pc, #848]	; 40009118 <_tx_thread_system_suspend+0x5fc>
40008dc4:	e5900000 	ldr	r0, [r0]
40008dc8:	e3a01001 	mov	r1, #1
40008dcc:	e1c00711 	bic	r0, r0, r1, lsl r7
40008dd0:	e59f1340 	ldr	r1, [pc, #832]	; 40009118 <_tx_thread_system_suspend+0x5fc>
40008dd4:	e5810000 	str	r0, [r1]
40008dd8:	e59f0330 	ldr	r0, [pc, #816]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008ddc:	e5900000 	ldr	r0, [r0]
40008de0:	e3500000 	cmp	r0, #0
40008de4:	0a000005 	beq	40008e00 <_tx_thread_system_suspend+0x2e4>
40008de8:	e59f0320 	ldr	r0, [pc, #800]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008dec:	e5900000 	ldr	r0, [r0]
40008df0:	e3a01001 	mov	r1, #1
40008df4:	e1c00711 	bic	r0, r0, r1, lsl r7
40008df8:	e59f1310 	ldr	r1, [pc, #784]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008dfc:	e5810000 	str	r0, [r1]
40008e00:	e3a08000 	mov	r8, #0
40008e04:	e59f030c 	ldr	r0, [pc, #780]	; 40009118 <_tx_thread_system_suspend+0x5fc>
40008e08:	e5909000 	ldr	r9, [r0]
40008e0c:	e20900ff 	and	r0, r9, #255	; 0xff
40008e10:	e58d0004 	str	r0, [sp, #4]
40008e14:	e59d0004 	ldr	r0, [sp, #4]
40008e18:	e3500000 	cmp	r0, #0
40008e1c:	1a00002a 	bne	40008ecc <_tx_thread_system_suspend+0x3b0>
40008e20:	e1a09429 	lsr	r9, r9, #8
40008e24:	e20900ff 	and	r0, r9, #255	; 0xff
40008e28:	e58d0004 	str	r0, [sp, #4]
40008e2c:	e2888008 	add	r8, r8, #8
40008e30:	e59d0004 	ldr	r0, [sp, #4]
40008e34:	e3500000 	cmp	r0, #0
40008e38:	1a000023 	bne	40008ecc <_tx_thread_system_suspend+0x3b0>
40008e3c:	e1a09429 	lsr	r9, r9, #8
40008e40:	e20900ff 	and	r0, r9, #255	; 0xff
40008e44:	e58d0004 	str	r0, [sp, #4]
40008e48:	e2888008 	add	r8, r8, #8
40008e4c:	e59d0004 	ldr	r0, [sp, #4]
40008e50:	e3500000 	cmp	r0, #0
40008e54:	1a00001c 	bne	40008ecc <_tx_thread_system_suspend+0x3b0>
40008e58:	e1a09429 	lsr	r9, r9, #8
40008e5c:	e20900ff 	and	r0, r9, #255	; 0xff
40008e60:	e58d0004 	str	r0, [sp, #4]
40008e64:	e2888008 	add	r8, r8, #8
40008e68:	e59d0004 	ldr	r0, [sp, #4]
40008e6c:	e3500000 	cmp	r0, #0
40008e70:	1a000015 	bne	40008ecc <_tx_thread_system_suspend+0x3b0>
40008e74:	e3a00020 	mov	r0, #32
40008e78:	e59f1294 	ldr	r1, [pc, #660]	; 40009114 <_tx_thread_system_suspend+0x5f8>
40008e7c:	e5810000 	str	r0, [r1]
40008e80:	e3a00000 	mov	r0, #0
40008e84:	e59f1270 	ldr	r1, [pc, #624]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40008e88:	e5810000 	str	r0, [r1]
40008e8c:	e35a0000 	cmp	sl, #0
40008e90:	0a000004 	beq	40008ea8 <_tx_thread_system_suspend+0x38c>
40008e94:	e59a000c 	ldr	r0, [sl, #12]
40008e98:	e150000b 	cmp	r0, fp
40008e9c:	1a000001 	bne	40008ea8 <_tx_thread_system_suspend+0x38c>
40008ea0:	e3a00000 	mov	r0, #0
40008ea4:	e58a001c 	str	r0, [sl, #28]
40008ea8:	e121f005 	msr	CPSR_c, r5
40008eac:	e59f0240 	ldr	r0, [pc, #576]	; 400090f4 <_tx_thread_system_suspend+0x5d8>
40008eb0:	e5900000 	ldr	r0, [r0]
40008eb4:	e59f122c 	ldr	r1, [pc, #556]	; 400090e8 <_tx_thread_system_suspend+0x5cc>
40008eb8:	e5911000 	ldr	r1, [r1]
40008ebc:	e1900001 	orrs	r0, r0, r1
40008ec0:	1a000000 	bne	40008ec8 <_tx_thread_system_suspend+0x3ac>
40008ec4:	eb000725 	bl	4000ab60 <_tx_thread_system_return>
40008ec8:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40008ecc:	e59f0248 	ldr	r0, [pc, #584]	; 4000911c <_tx_thread_system_suspend+0x600>
40008ed0:	e59d1004 	ldr	r1, [sp, #4]
40008ed4:	e7d00001 	ldrb	r0, [r0, r1]
40008ed8:	e0800008 	add	r0, r0, r8
40008edc:	e59f1230 	ldr	r1, [pc, #560]	; 40009114 <_tx_thread_system_suspend+0x5f8>
40008ee0:	e5810000 	str	r0, [r1]
40008ee4:	e59f0210 	ldr	r0, [pc, #528]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40008ee8:	e5900000 	ldr	r0, [r0]
40008eec:	e1540000 	cmp	r4, r0
40008ef0:	1a000054 	bne	40009048 <_tx_thread_system_suspend+0x52c>
40008ef4:	e59f0210 	ldr	r0, [pc, #528]	; 4000910c <_tx_thread_system_suspend+0x5f0>
40008ef8:	e5911000 	ldr	r1, [r1]
40008efc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008f00:	e59f11f4 	ldr	r1, [pc, #500]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40008f04:	e5810000 	str	r0, [r1]
40008f08:	e35a0000 	cmp	sl, #0
40008f0c:	0a000005 	beq	40008f28 <_tx_thread_system_suspend+0x40c>
40008f10:	e59a000c 	ldr	r0, [sl, #12]
40008f14:	e150000b 	cmp	r0, fp
40008f18:	1a000002 	bne	40008f28 <_tx_thread_system_suspend+0x40c>
40008f1c:	e2810000 	add	r0, r1, #0
40008f20:	e5900000 	ldr	r0, [r0]
40008f24:	e58a001c 	str	r0, [sl, #28]
40008f28:	e59f01e0 	ldr	r0, [pc, #480]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008f2c:	e5900000 	ldr	r0, [r0]
40008f30:	e3500000 	cmp	r0, #0
40008f34:	0a000043 	beq	40009048 <_tx_thread_system_suspend+0x52c>
40008f38:	e59f01a8 	ldr	r0, [pc, #424]	; 400090e8 <_tx_thread_system_suspend+0x5cc>
40008f3c:	e5900000 	ldr	r0, [r0]
40008f40:	e2800001 	add	r0, r0, #1
40008f44:	e59f119c 	ldr	r1, [pc, #412]	; 400090e8 <_tx_thread_system_suspend+0x5cc>
40008f48:	e5810000 	str	r0, [r1]
40008f4c:	e121f005 	msr	CPSR_c, r5
40008f50:	e10f5000 	mrs	r5, CPSR
40008f54:	e3856080 	orr	r6, r5, #128	; 0x80
40008f58:	e121f006 	msr	CPSR_c, r6
40008f5c:	e2810000 	add	r0, r1, #0
40008f60:	e5900000 	ldr	r0, [r0]
40008f64:	e2400001 	sub	r0, r0, #1
40008f68:	e5810000 	str	r0, [r1]
40008f6c:	e3a08000 	mov	r8, #0
40008f70:	e59f0198 	ldr	r0, [pc, #408]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40008f74:	e5909000 	ldr	r9, [r0]
40008f78:	e20900ff 	and	r0, r9, #255	; 0xff
40008f7c:	e58d0004 	str	r0, [sp, #4]
40008f80:	e59d0004 	ldr	r0, [sp, #4]
40008f84:	e3500000 	cmp	r0, #0
40008f88:	1a000011 	bne	40008fd4 <_tx_thread_system_suspend+0x4b8>
40008f8c:	e1a09429 	lsr	r9, r9, #8
40008f90:	e20900ff 	and	r0, r9, #255	; 0xff
40008f94:	e58d0004 	str	r0, [sp, #4]
40008f98:	e2888008 	add	r8, r8, #8
40008f9c:	e59d0004 	ldr	r0, [sp, #4]
40008fa0:	e3500000 	cmp	r0, #0
40008fa4:	1a00000a 	bne	40008fd4 <_tx_thread_system_suspend+0x4b8>
40008fa8:	e1a09429 	lsr	r9, r9, #8
40008fac:	e20900ff 	and	r0, r9, #255	; 0xff
40008fb0:	e58d0004 	str	r0, [sp, #4]
40008fb4:	e2888008 	add	r8, r8, #8
40008fb8:	e59d0004 	ldr	r0, [sp, #4]
40008fbc:	e3500000 	cmp	r0, #0
40008fc0:	1a000003 	bne	40008fd4 <_tx_thread_system_suspend+0x4b8>
40008fc4:	e1a09429 	lsr	r9, r9, #8
40008fc8:	e20900ff 	and	r0, r9, #255	; 0xff
40008fcc:	e58d0004 	str	r0, [sp, #4]
40008fd0:	e2888008 	add	r8, r8, #8
40008fd4:	e59f0140 	ldr	r0, [pc, #320]	; 4000911c <_tx_thread_system_suspend+0x600>
40008fd8:	e59d1004 	ldr	r1, [sp, #4]
40008fdc:	e7d00001 	ldrb	r0, [r0, r1]
40008fe0:	e0807008 	add	r7, r0, r8
40008fe4:	e59f0120 	ldr	r0, [pc, #288]	; 4000910c <_tx_thread_system_suspend+0x5f0>
40008fe8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008fec:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40008ff0:	e59f111c 	ldr	r1, [pc, #284]	; 40009114 <_tx_thread_system_suspend+0x5f8>
40008ff4:	e5911000 	ldr	r1, [r1]
40008ff8:	e1500001 	cmp	r0, r1
40008ffc:	8a000011 	bhi	40009048 <_tx_thread_system_suspend+0x52c>
40009000:	e59f0104 	ldr	r0, [pc, #260]	; 4000910c <_tx_thread_system_suspend+0x5f0>
40009004:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009008:	e59f10ec 	ldr	r1, [pc, #236]	; 400090fc <_tx_thread_system_suspend+0x5e0>
4000900c:	e5810000 	str	r0, [r1]
40009010:	e35a0000 	cmp	sl, #0
40009014:	0a000005 	beq	40009030 <_tx_thread_system_suspend+0x514>
40009018:	e59a000c 	ldr	r0, [sl, #12]
4000901c:	e150000b 	cmp	r0, fp
40009020:	1a000002 	bne	40009030 <_tx_thread_system_suspend+0x514>
40009024:	e2810000 	add	r0, r1, #0
40009028:	e5900000 	ldr	r0, [r0]
4000902c:	e58a001c 	str	r0, [sl, #28]
40009030:	e59f00d8 	ldr	r0, [pc, #216]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40009034:	e5900000 	ldr	r0, [r0]
40009038:	e3a01001 	mov	r1, #1
4000903c:	e1c00711 	bic	r0, r0, r1, lsl r7
40009040:	e59f10c8 	ldr	r1, [pc, #200]	; 40009110 <_tx_thread_system_suspend+0x5f4>
40009044:	e5810000 	str	r0, [r1]
40009048:	e121f005 	msr	CPSR_c, r5
4000904c:	e59f008c 	ldr	r0, [pc, #140]	; 400090e0 <_tx_thread_system_suspend+0x5c4>
40009050:	e5900000 	ldr	r0, [r0]
40009054:	e59f10a0 	ldr	r1, [pc, #160]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40009058:	e5911000 	ldr	r1, [r1]
4000905c:	e1500001 	cmp	r0, r1
40009060:	0a00001d 	beq	400090dc <_tx_thread_system_suspend+0x5c0>
40009064:	e59f0090 	ldr	r0, [pc, #144]	; 400090fc <_tx_thread_system_suspend+0x5e0>
40009068:	e5904000 	ldr	r4, [r0]
4000906c:	e5940008 	ldr	r0, [r4, #8]
40009070:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40009074:	e1500001 	cmp	r0, r1
40009078:	2a000001 	bcs	40009084 <_tx_thread_system_suspend+0x568>
4000907c:	e5940008 	ldr	r0, [r4, #8]
40009080:	e5840040 	str	r0, [r4, #64]	; 0x40
40009084:	e594000c 	ldr	r0, [r4, #12]
40009088:	e5900000 	ldr	r0, [r0]
4000908c:	e59f1050 	ldr	r1, [pc, #80]	; 400090e4 <_tx_thread_system_suspend+0x5c8>
40009090:	e1500001 	cmp	r0, r1
40009094:	1a000007 	bne	400090b8 <_tx_thread_system_suspend+0x59c>
40009098:	e5940010 	ldr	r0, [r4, #16]
4000909c:	e5900001 	ldr	r0, [r0, #1]
400090a0:	e1500001 	cmp	r0, r1
400090a4:	1a000003 	bne	400090b8 <_tx_thread_system_suspend+0x59c>
400090a8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
400090ac:	e594100c 	ldr	r1, [r4, #12]
400090b0:	e1500001 	cmp	r0, r1
400090b4:	2a000001 	bcs	400090c0 <_tx_thread_system_suspend+0x5a4>
400090b8:	e1a00004 	mov	r0, r4
400090bc:	eb0017fe 	bl	4000f0bc <_tx_thread_stack_error_handler>
400090c0:	e59f002c 	ldr	r0, [pc, #44]	; 400090f4 <_tx_thread_system_suspend+0x5d8>
400090c4:	e5900000 	ldr	r0, [r0]
400090c8:	e59f1018 	ldr	r1, [pc, #24]	; 400090e8 <_tx_thread_system_suspend+0x5cc>
400090cc:	e5911000 	ldr	r1, [r1]
400090d0:	e1900001 	orrs	r0, r0, r1
400090d4:	1a000000 	bne	400090dc <_tx_thread_system_suspend+0x5c0>
400090d8:	eb0006a0 	bl	4000ab60 <_tx_thread_system_return>
400090dc:	eaffff79 	b	40008ec8 <_tx_thread_system_suspend+0x3ac>
400090e0:	40030e38 	.word	0x40030e38
400090e4:	efefefef 	.word	0xefefefef
400090e8:	40030e54 	.word	0x40030e54
400090ec:	40030ea4 	.word	0x40030ea4
400090f0:	40030ea8 	.word	0x40030ea8
400090f4:	40030e30 	.word	0x40030e30
400090f8:	f0f0f0f0 	.word	0xf0f0f0f0
400090fc:	40030e3c 	.word	0x40030e3c
40009100:	40030ea0 	.word	0x40030ea0
40009104:	40030e9c 	.word	0x40030e9c
40009108:	40030e90 	.word	0x40030e90
4000910c:	40032874 	.word	0x40032874
40009110:	40030e4c 	.word	0x40030e4c
40009114:	40030e50 	.word	0x40030e50
40009118:	40030e48 	.word	0x40030e48
4000911c:	40032774 	.word	0x40032774

40009120 <_tx_time_get>:
40009120:	e92d4008 	push	{r3, lr}
40009124:	e10f1000 	mrs	r1, CPSR
40009128:	e3812080 	orr	r2, r1, #128	; 0x80
4000912c:	e121f002 	msr	CPSR_c, r2
40009130:	e59f00ec 	ldr	r0, [pc, #236]	; 40009224 <_tx_time_get+0x104>
40009134:	e5900000 	ldr	r0, [r0]
40009138:	e58d0000 	str	r0, [sp]
4000913c:	e59f30e4 	ldr	r3, [pc, #228]	; 40009228 <_tx_time_get+0x108>
40009140:	e5930000 	ldr	r0, [r3]
40009144:	e3500000 	cmp	r0, #0
40009148:	0a000032 	beq	40009218 <_tx_time_get+0xf8>
4000914c:	e59f30d8 	ldr	r3, [pc, #216]	; 4000922c <_tx_time_get+0x10c>
40009150:	e5933000 	ldr	r3, [r3]
40009154:	e2833001 	add	r3, r3, #1
40009158:	e59fc0cc 	ldr	ip, [pc, #204]	; 4000922c <_tx_time_get+0x10c>
4000915c:	e58c3000 	str	r3, [ip]
40009160:	e580300c 	str	r3, [r0, #12]
40009164:	e59f30c4 	ldr	r3, [pc, #196]	; 40009230 <_tx_time_get+0x110>
40009168:	e5933000 	ldr	r3, [r3]
4000916c:	e3530000 	cmp	r3, #0
40009170:	1a000006 	bne	40009190 <_tx_time_get+0x70>
40009174:	e59f30b8 	ldr	r3, [pc, #184]	; 40009234 <_tx_time_get+0x114>
40009178:	e5933000 	ldr	r3, [r3]
4000917c:	e5803000 	str	r3, [r0]
40009180:	e5903000 	ldr	r3, [r0]
40009184:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40009188:	e5803004 	str	r3, [r0, #4]
4000918c:	ea00000d 	b	400091c8 <_tx_time_get+0xa8>
40009190:	e59f3098 	ldr	r3, [pc, #152]	; 40009230 <_tx_time_get+0x110>
40009194:	e5933000 	ldr	r3, [r3]
40009198:	e59fc098 	ldr	ip, [pc, #152]	; 40009238 <_tx_time_get+0x118>
4000919c:	e153000c 	cmp	r3, ip
400091a0:	2a000004 	bcs	400091b8 <_tx_time_get+0x98>
400091a4:	e3e03000 	mvn	r3, #0
400091a8:	e5803000 	str	r3, [r0]
400091ac:	e3a03000 	mov	r3, #0
400091b0:	e5803004 	str	r3, [r0, #4]
400091b4:	ea000003 	b	400091c8 <_tx_time_get+0xa8>
400091b8:	e59f3078 	ldr	r3, [pc, #120]	; 40009238 <_tx_time_get+0x118>
400091bc:	e5803000 	str	r3, [r0]
400091c0:	e3a03000 	mov	r3, #0
400091c4:	e5803004 	str	r3, [r0, #4]
400091c8:	e3a03078 	mov	r3, #120	; 0x78
400091cc:	e5803008 	str	r3, [r0, #8]
400091d0:	e59d3000 	ldr	r3, [sp]
400091d4:	e5803010 	str	r3, [r0, #16]
400091d8:	e580d014 	str	sp, [r0, #20]
400091dc:	e3a03000 	mov	r3, #0
400091e0:	e5803018 	str	r3, [r0, #24]
400091e4:	e580301c 	str	r3, [r0, #28]
400091e8:	e2800020 	add	r0, r0, #32
400091ec:	e59f3048 	ldr	r3, [pc, #72]	; 4000923c <_tx_time_get+0x11c>
400091f0:	e5933000 	ldr	r3, [r3]
400091f4:	e1500003 	cmp	r0, r3
400091f8:	3a000001 	bcc	40009204 <_tx_time_get+0xe4>
400091fc:	e59f303c 	ldr	r3, [pc, #60]	; 40009240 <_tx_time_get+0x120>
40009200:	e5930000 	ldr	r0, [r3]
40009204:	e59f301c 	ldr	r3, [pc, #28]	; 40009228 <_tx_time_get+0x108>
40009208:	e5830000 	str	r0, [r3]
4000920c:	e59f3030 	ldr	r3, [pc, #48]	; 40009244 <_tx_time_get+0x124>
40009210:	e5933000 	ldr	r3, [r3]
40009214:	e5830020 	str	r0, [r3, #32]
40009218:	e121f001 	msr	CPSR_c, r1
4000921c:	e59d0000 	ldr	r0, [sp]
40009220:	e8bd8008 	pop	{r3, pc}
40009224:	40030e60 	.word	0x40030e60
40009228:	40030ea4 	.word	0x40030ea4
4000922c:	40030ea8 	.word	0x40030ea8
40009230:	40030e30 	.word	0x40030e30
40009234:	40030e38 	.word	0x40030e38
40009238:	f0f0f0f0 	.word	0xf0f0f0f0
4000923c:	40030ea0 	.word	0x40030ea0
40009240:	40030e9c 	.word	0x40030e9c
40009244:	40030e90 	.word	0x40030e90

40009248 <_tx_timer_initialize>:
40009248:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000924c:	e24dd01c 	sub	sp, sp, #28
40009250:	e3a00000 	mov	r0, #0
40009254:	e59f10d8 	ldr	r1, [pc, #216]	; 40009334 <_tx_timer_initialize+0xec>
40009258:	e5810000 	str	r0, [r1]
4000925c:	e59f10d4 	ldr	r1, [pc, #212]	; 40009338 <_tx_timer_initialize+0xf0>
40009260:	e5810000 	str	r0, [r1]
40009264:	e59f10d0 	ldr	r1, [pc, #208]	; 4000933c <_tx_timer_initialize+0xf4>
40009268:	e5810000 	str	r0, [r1]
4000926c:	e59f10cc 	ldr	r1, [pc, #204]	; 40009340 <_tx_timer_initialize+0xf8>
40009270:	e5810000 	str	r0, [r1]
40009274:	e3a01080 	mov	r1, #128	; 0x80
40009278:	e59f00c4 	ldr	r0, [pc, #196]	; 40009344 <_tx_timer_initialize+0xfc>
4000927c:	eb00288d 	bl	400134b8 <__aeabi_memclr4>
40009280:	e59f00bc 	ldr	r0, [pc, #188]	; 40009344 <_tx_timer_initialize+0xfc>
40009284:	e59f10bc 	ldr	r1, [pc, #188]	; 40009348 <_tx_timer_initialize+0x100>
40009288:	e5810000 	str	r0, [r1]
4000928c:	e59f10b8 	ldr	r1, [pc, #184]	; 4000934c <_tx_timer_initialize+0x104>
40009290:	e5810000 	str	r0, [r1]
40009294:	e280007c 	add	r0, r0, #124	; 0x7c
40009298:	e59f10b0 	ldr	r1, [pc, #176]	; 40009350 <_tx_timer_initialize+0x108>
4000929c:	e5810000 	str	r0, [r1]
400092a0:	e2810000 	add	r0, r1, #0
400092a4:	e5900000 	ldr	r0, [r0]
400092a8:	e2800004 	add	r0, r0, #4
400092ac:	e5810000 	str	r0, [r1]
400092b0:	e59f009c 	ldr	r0, [pc, #156]	; 40009354 <_tx_timer_initialize+0x10c>
400092b4:	e59f109c 	ldr	r1, [pc, #156]	; 40009358 <_tx_timer_initialize+0x110>
400092b8:	e5810000 	str	r0, [r1]
400092bc:	e3a00b01 	mov	r0, #1024	; 0x400
400092c0:	e59f1094 	ldr	r1, [pc, #148]	; 4000935c <_tx_timer_initialize+0x114>
400092c4:	e5810000 	str	r0, [r1]
400092c8:	e3a00000 	mov	r0, #0
400092cc:	e59f108c 	ldr	r1, [pc, #140]	; 40009360 <_tx_timer_initialize+0x118>
400092d0:	e5810000 	str	r0, [r1]
400092d4:	e3a03000 	mov	r3, #0
400092d8:	e2810000 	add	r0, r1, #0
400092dc:	e5901000 	ldr	r1, [r0]
400092e0:	e5900000 	ldr	r0, [r0]
400092e4:	e28d2008 	add	r2, sp, #8
400092e8:	e882000b 	stm	r2, {r0, r1, r3}
400092ec:	e59f0068 	ldr	r0, [pc, #104]	; 4000935c <_tx_timer_initialize+0x114>
400092f0:	e58d3014 	str	r3, [sp, #20]
400092f4:	e5903000 	ldr	r3, [r0]
400092f8:	e59f0058 	ldr	r0, [pc, #88]	; 40009358 <_tx_timer_initialize+0x110>
400092fc:	e5902000 	ldr	r2, [r0]
40009300:	e1cd20f0 	strd	r2, [sp]
40009304:	e59f3058 	ldr	r3, [pc, #88]	; 40009364 <_tx_timer_initialize+0x11c>
40009308:	e59f2058 	ldr	r2, [pc, #88]	; 40009368 <_tx_timer_initialize+0x120>
4000930c:	e28f1058 	add	r1, pc, #88	; 0x58
40009310:	e59f0068 	ldr	r0, [pc, #104]	; 40009380 <_tx_timer_initialize+0x138>
40009314:	eb00143b 	bl	4000e408 <_tx_thread_create>
40009318:	e3a00000 	mov	r0, #0
4000931c:	e59f1060 	ldr	r1, [pc, #96]	; 40009384 <_tx_timer_initialize+0x13c>
40009320:	e5810000 	str	r0, [r1]
40009324:	e59f105c 	ldr	r1, [pc, #92]	; 40009388 <_tx_timer_initialize+0x140>
40009328:	e5810000 	str	r0, [r1]
4000932c:	e28dd01c 	add	sp, sp, #28
40009330:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40009334:	40030e60 	.word	0x40030e60
40009338:	40030e64 	.word	0x40030e64
4000933c:	40030e68 	.word	0x40030e68
40009340:	40030e78 	.word	0x40030e78
40009344:	400328f4 	.word	0x400328f4
40009348:	40030e6c 	.word	0x40030e6c
4000934c:	40030e74 	.word	0x40030e74
40009350:	40030e70 	.word	0x40030e70
40009354:	40032a1c 	.word	0x40032a1c
40009358:	40030e84 	.word	0x40030e84
4000935c:	40030e88 	.word	0x40030e88
40009360:	40030e8c 	.word	0x40030e8c
40009364:	4154494d 	.word	0x4154494d
40009368:	40009478 	.word	0x40009478
4000936c:	74737953 	.word	0x74737953
40009370:	54206d65 	.word	0x54206d65
40009374:	72656d69 	.word	0x72656d69
40009378:	72685420 	.word	0x72685420
4000937c:	00646165 	.word	0x00646165
40009380:	40032974 	.word	0x40032974
40009384:	40030e7c 	.word	0x40030e7c
40009388:	40030e80 	.word	0x40030e80

4000938c <_tx_timer_system_activate>:
4000938c:	e92d4010 	push	{r4, lr}
40009390:	e1a01000 	mov	r1, r0
40009394:	e10f2000 	mrs	r2, CPSR
40009398:	e3823080 	orr	r3, r2, #128	; 0x80
4000939c:	e121f003 	msr	CPSR_c, r3
400093a0:	e5910000 	ldr	r0, [r1]
400093a4:	e3500000 	cmp	r0, #0
400093a8:	0a00002c 	beq	40009460 <_tx_timer_system_activate+0xd4>
400093ac:	e5910000 	ldr	r0, [r1]
400093b0:	e3700001 	cmn	r0, #1
400093b4:	0a000029 	beq	40009460 <_tx_timer_system_activate+0xd4>
400093b8:	e5910018 	ldr	r0, [r1, #24]
400093bc:	e3500000 	cmp	r0, #0
400093c0:	1a000026 	bne	40009460 <_tx_timer_system_activate+0xd4>
400093c4:	e5910000 	ldr	r0, [r1]
400093c8:	e3500020 	cmp	r0, #32
400093cc:	9a000001 	bls	400093d8 <_tx_timer_system_activate+0x4c>
400093d0:	e3a0e01f 	mov	lr, #31
400093d4:	ea000001 	b	400093e0 <_tx_timer_system_activate+0x54>
400093d8:	e5910000 	ldr	r0, [r1]
400093dc:	e240e001 	sub	lr, r0, #1
400093e0:	e59f0084 	ldr	r0, [pc, #132]	; 4000946c <_tx_timer_system_activate+0xe0>
400093e4:	e5900000 	ldr	r0, [r0]
400093e8:	e080c10e 	add	ip, r0, lr, lsl #2
400093ec:	e59f007c 	ldr	r0, [pc, #124]	; 40009470 <_tx_timer_system_activate+0xe4>
400093f0:	e5900000 	ldr	r0, [r0]
400093f4:	e15c0000 	cmp	ip, r0
400093f8:	3a000006 	bcc	40009418 <_tx_timer_system_activate+0x8c>
400093fc:	e59f006c 	ldr	r0, [pc, #108]	; 40009470 <_tx_timer_system_activate+0xe4>
40009400:	e5900000 	ldr	r0, [r0]
40009404:	e04c0000 	sub	r0, ip, r0
40009408:	e1a00140 	asr	r0, r0, #2
4000940c:	e59f4060 	ldr	r4, [pc, #96]	; 40009474 <_tx_timer_system_activate+0xe8>
40009410:	e5944000 	ldr	r4, [r4]
40009414:	e084c100 	add	ip, r4, r0, lsl #2
40009418:	e59c0000 	ldr	r0, [ip]
4000941c:	e3500000 	cmp	r0, #0
40009420:	0a00000a 	beq	40009450 <_tx_timer_system_activate+0xc4>
40009424:	e59c0000 	ldr	r0, [ip]
40009428:	e5810010 	str	r0, [r1, #16]
4000942c:	e59c0000 	ldr	r0, [ip]
40009430:	e5900014 	ldr	r0, [r0, #20]
40009434:	e5810014 	str	r0, [r1, #20]
40009438:	e5910014 	ldr	r0, [r1, #20]
4000943c:	e5801010 	str	r1, [r0, #16]
40009440:	e59c0000 	ldr	r0, [ip]
40009444:	e5801014 	str	r1, [r0, #20]
40009448:	e581c018 	str	ip, [r1, #24]
4000944c:	ea000003 	b	40009460 <_tx_timer_system_activate+0xd4>
40009450:	e5811010 	str	r1, [r1, #16]
40009454:	e5811014 	str	r1, [r1, #20]
40009458:	e581c018 	str	ip, [r1, #24]
4000945c:	e58c1000 	str	r1, [ip]
40009460:	e121f002 	msr	CPSR_c, r2
40009464:	e3a00000 	mov	r0, #0
40009468:	e8bd8010 	pop	{r4, pc}
4000946c:	40030e74 	.word	0x40030e74
40009470:	40030e70 	.word	0x40030e70
40009474:	40030e6c 	.word	0x40030e6c

40009478 <_tx_timer_thread_entry>:
40009478:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000947c:	e1a04000 	mov	r4, r0
40009480:	e3a09000 	mov	r9, #0
40009484:	e59f0214 	ldr	r0, [pc, #532]	; 400096a0 <_tx_timer_thread_entry+0x228>
40009488:	e1540000 	cmp	r4, r0
4000948c:	0a000000 	beq	40009494 <_tx_timer_thread_entry+0x1c>
40009490:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40009494:	e3a00000 	mov	r0, #0
40009498:	e58d0000 	str	r0, [sp]
4000949c:	e1a00000 	nop			; (mov r0, r0)
400094a0:	e10f5000 	mrs	r5, CPSR
400094a4:	e3856080 	orr	r6, r5, #128	; 0x80
400094a8:	e121f006 	msr	CPSR_c, r6
400094ac:	e59f01f0 	ldr	r0, [pc, #496]	; 400096a4 <_tx_timer_thread_entry+0x22c>
400094b0:	e5900000 	ldr	r0, [r0]
400094b4:	e5900000 	ldr	r0, [r0]
400094b8:	e58d0004 	str	r0, [sp, #4]
400094bc:	e59d0004 	ldr	r0, [sp, #4]
400094c0:	e3500000 	cmp	r0, #0
400094c4:	0a000002 	beq	400094d4 <_tx_timer_thread_entry+0x5c>
400094c8:	e28d0004 	add	r0, sp, #4
400094cc:	e59d1004 	ldr	r1, [sp, #4]
400094d0:	e5810018 	str	r0, [r1, #24]
400094d4:	e3a00000 	mov	r0, #0
400094d8:	e59f11c4 	ldr	r1, [pc, #452]	; 400096a4 <_tx_timer_thread_entry+0x22c>
400094dc:	e5911000 	ldr	r1, [r1]
400094e0:	e5810000 	str	r0, [r1]
400094e4:	e59f01b8 	ldr	r0, [pc, #440]	; 400096a4 <_tx_timer_thread_entry+0x22c>
400094e8:	e5900000 	ldr	r0, [r0]
400094ec:	e2800004 	add	r0, r0, #4
400094f0:	e59f11ac 	ldr	r1, [pc, #428]	; 400096a4 <_tx_timer_thread_entry+0x22c>
400094f4:	e5810000 	str	r0, [r1]
400094f8:	e2810000 	add	r0, r1, #0
400094fc:	e5900000 	ldr	r0, [r0]
40009500:	e59f11a0 	ldr	r1, [pc, #416]	; 400096a8 <_tx_timer_thread_entry+0x230>
40009504:	e5911000 	ldr	r1, [r1]
40009508:	e1500001 	cmp	r0, r1
4000950c:	1a000003 	bne	40009520 <_tx_timer_thread_entry+0xa8>
40009510:	e59f0194 	ldr	r0, [pc, #404]	; 400096ac <_tx_timer_thread_entry+0x234>
40009514:	e5900000 	ldr	r0, [r0]
40009518:	e59f1184 	ldr	r1, [pc, #388]	; 400096a4 <_tx_timer_thread_entry+0x22c>
4000951c:	e5810000 	str	r0, [r1]
40009520:	e3a00000 	mov	r0, #0
40009524:	e59f1184 	ldr	r1, [pc, #388]	; 400096b0 <_tx_timer_thread_entry+0x238>
40009528:	e5810000 	str	r0, [r1]
4000952c:	e121f005 	msr	CPSR_c, r5
40009530:	e10f5000 	mrs	r5, CPSR
40009534:	e3856080 	orr	r6, r5, #128	; 0x80
40009538:	e121f006 	msr	CPSR_c, r6
4000953c:	ea000040 	b	40009644 <_tx_timer_thread_entry+0x1cc>
40009540:	e59d7004 	ldr	r7, [sp, #4]
40009544:	e59d0004 	ldr	r0, [sp, #4]
40009548:	e5900010 	ldr	r0, [r0, #16]
4000954c:	e1500007 	cmp	r0, r7
40009550:	1a000002 	bne	40009560 <_tx_timer_thread_entry+0xe8>
40009554:	e3a00000 	mov	r0, #0
40009558:	e58d0004 	str	r0, [sp, #4]
4000955c:	ea00000a 	b	4000958c <_tx_timer_thread_entry+0x114>
40009560:	e5970014 	ldr	r0, [r7, #20]
40009564:	e5971010 	ldr	r1, [r7, #16]
40009568:	e5810014 	str	r0, [r1, #20]
4000956c:	e5970010 	ldr	r0, [r7, #16]
40009570:	e5971014 	ldr	r1, [r7, #20]
40009574:	e5810010 	str	r0, [r1, #16]
40009578:	e28d0004 	add	r0, sp, #4
4000957c:	e5971010 	ldr	r1, [r7, #16]
40009580:	e5810018 	str	r0, [r1, #24]
40009584:	e5970010 	ldr	r0, [r7, #16]
40009588:	e58d0004 	str	r0, [sp, #4]
4000958c:	e5970000 	ldr	r0, [r7]
40009590:	e3500020 	cmp	r0, #32
40009594:	9a000006 	bls	400095b4 <_tx_timer_thread_entry+0x13c>
40009598:	e5970000 	ldr	r0, [r7]
4000959c:	e2400020 	sub	r0, r0, #32
400095a0:	e5870000 	str	r0, [r7]
400095a4:	e3a08000 	mov	r8, #0
400095a8:	e587d018 	str	sp, [r7, #24]
400095ac:	e5877010 	str	r7, [r7, #16]
400095b0:	ea00000b 	b	400095e4 <_tx_timer_thread_entry+0x16c>
400095b4:	e5978008 	ldr	r8, [r7, #8]
400095b8:	e597900c 	ldr	r9, [r7, #12]
400095bc:	e5970004 	ldr	r0, [r7, #4]
400095c0:	e5870000 	str	r0, [r7]
400095c4:	e5970000 	ldr	r0, [r7]
400095c8:	e3500000 	cmp	r0, #0
400095cc:	0a000002 	beq	400095dc <_tx_timer_thread_entry+0x164>
400095d0:	e587d018 	str	sp, [r7, #24]
400095d4:	e5877010 	str	r7, [r7, #16]
400095d8:	ea000001 	b	400095e4 <_tx_timer_thread_entry+0x16c>
400095dc:	e3a00000 	mov	r0, #0
400095e0:	e5870018 	str	r0, [r7, #24]
400095e4:	e121f005 	msr	CPSR_c, r5
400095e8:	e3580000 	cmp	r8, #0
400095ec:	0a000001 	beq	400095f8 <_tx_timer_thread_entry+0x180>
400095f0:	e1a00009 	mov	r0, r9
400095f4:	e12fff38 	blx	r8
400095f8:	e10f5000 	mrs	r5, CPSR
400095fc:	e3856080 	orr	r6, r5, #128	; 0x80
40009600:	e121f006 	msr	CPSR_c, r6
40009604:	e1a0100d 	mov	r1, sp
40009608:	e5970018 	ldr	r0, [r7, #24]
4000960c:	e1500001 	cmp	r0, r1
40009610:	1a000007 	bne	40009634 <_tx_timer_thread_entry+0x1bc>
40009614:	e3a00000 	mov	r0, #0
40009618:	e5870018 	str	r0, [r7, #24]
4000961c:	e121f005 	msr	CPSR_c, r5
40009620:	e1a00007 	mov	r0, r7
40009624:	ebffff58 	bl	4000938c <_tx_timer_system_activate>
40009628:	e10f5000 	mrs	r5, CPSR
4000962c:	e3856080 	orr	r6, r5, #128	; 0x80
40009630:	e121f006 	msr	CPSR_c, r6
40009634:	e121f005 	msr	CPSR_c, r5
40009638:	e10f5000 	mrs	r5, CPSR
4000963c:	e3856080 	orr	r6, r5, #128	; 0x80
40009640:	e121f006 	msr	CPSR_c, r6
40009644:	e59d0004 	ldr	r0, [sp, #4]
40009648:	e3500000 	cmp	r0, #0
4000964c:	1affffbb 	bne	40009540 <_tx_timer_thread_entry+0xc8>
40009650:	e59f0058 	ldr	r0, [pc, #88]	; 400096b0 <_tx_timer_thread_entry+0x238>
40009654:	e5900000 	ldr	r0, [r0]
40009658:	e3500000 	cmp	r0, #0
4000965c:	1a00000d 	bne	40009698 <_tx_timer_thread_entry+0x220>
40009660:	e59fa04c 	ldr	sl, [pc, #76]	; 400096b4 <_tx_timer_thread_entry+0x23c>
40009664:	e3a00003 	mov	r0, #3
40009668:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000966c:	e3a00001 	mov	r0, #1
40009670:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009674:	e59f003c 	ldr	r0, [pc, #60]	; 400096b8 <_tx_timer_thread_entry+0x240>
40009678:	e5900000 	ldr	r0, [r0]
4000967c:	e2800001 	add	r0, r0, #1
40009680:	e59f1030 	ldr	r1, [pc, #48]	; 400096b8 <_tx_timer_thread_entry+0x240>
40009684:	e5810000 	str	r0, [r1]
40009688:	e121f005 	msr	CPSR_c, r5
4000968c:	e1a0000a 	mov	r0, sl
40009690:	ebfffd21 	bl	40008b1c <_tx_thread_system_suspend>
40009694:	ea000000 	b	4000969c <_tx_timer_thread_entry+0x224>
40009698:	e121f005 	msr	CPSR_c, r5
4000969c:	eaffff7f 	b	400094a0 <_tx_timer_thread_entry+0x28>
400096a0:	4154494d 	.word	0x4154494d
400096a4:	40030e74 	.word	0x40030e74
400096a8:	40030e70 	.word	0x40030e70
400096ac:	40030e6c 	.word	0x40030e6c
400096b0:	40030e78 	.word	0x40030e78
400096b4:	40032974 	.word	0x40032974
400096b8:	40030e54 	.word	0x40030e54

400096bc <_tx_trace_initialize>:
400096bc:	e3a00000 	mov	r0, #0
400096c0:	e59f102c 	ldr	r1, [pc, #44]	; 400096f4 <_tx_trace_initialize+0x38>
400096c4:	e5810000 	str	r0, [r1]
400096c8:	e59f1028 	ldr	r1, [pc, #40]	; 400096f8 <_tx_trace_initialize+0x3c>
400096cc:	e5810000 	str	r0, [r1]
400096d0:	e59f1024 	ldr	r1, [pc, #36]	; 400096fc <_tx_trace_initialize+0x40>
400096d4:	e5810000 	str	r0, [r1]
400096d8:	e59f1020 	ldr	r1, [pc, #32]	; 40009700 <_tx_trace_initialize+0x44>
400096dc:	e5810000 	str	r0, [r1]
400096e0:	e59f101c 	ldr	r1, [pc, #28]	; 40009704 <_tx_trace_initialize+0x48>
400096e4:	e5810000 	str	r0, [r1]
400096e8:	e59f1018 	ldr	r1, [pc, #24]	; 40009708 <_tx_trace_initialize+0x4c>
400096ec:	e5810000 	str	r0, [r1]
400096f0:	e12fff1e 	bx	lr
400096f4:	40030e90 	.word	0x40030e90
400096f8:	40030e94 	.word	0x40030e94
400096fc:	40030e98 	.word	0x40030e98
40009700:	40030e9c 	.word	0x40030e9c
40009704:	40030ea0 	.word	0x40030ea0
40009708:	40030ea4 	.word	0x40030ea4

4000970c <_txe_byte_allocate>:
4000970c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40009710:	e1a04000 	mov	r4, r0
40009714:	e1a05001 	mov	r5, r1
40009718:	e1a06002 	mov	r6, r2
4000971c:	e1a07003 	mov	r7, r3
40009720:	e3540000 	cmp	r4, #0
40009724:	0a000003 	beq	40009738 <_txe_byte_allocate+0x2c>
40009728:	e5940000 	ldr	r0, [r4]
4000972c:	e59f10d4 	ldr	r1, [pc, #212]	; 40009808 <_txe_byte_allocate+0xfc>
40009730:	e1500001 	cmp	r0, r1
40009734:	0a000001 	beq	40009740 <_txe_byte_allocate+0x34>
40009738:	e3a00002 	mov	r0, #2
4000973c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40009740:	e3550000 	cmp	r5, #0
40009744:	1a000001 	bne	40009750 <_txe_byte_allocate+0x44>
40009748:	e3a00003 	mov	r0, #3
4000974c:	eafffffa 	b	4000973c <_txe_byte_allocate+0x30>
40009750:	e3560000 	cmp	r6, #0
40009754:	0a000002 	beq	40009764 <_txe_byte_allocate+0x58>
40009758:	e594001c 	ldr	r0, [r4, #28]
4000975c:	e1500006 	cmp	r0, r6
40009760:	2a000001 	bcs	4000976c <_txe_byte_allocate+0x60>
40009764:	e3a00005 	mov	r0, #5
40009768:	eafffff3 	b	4000973c <_txe_byte_allocate+0x30>
4000976c:	e59f0098 	ldr	r0, [pc, #152]	; 4000980c <_txe_byte_allocate+0x100>
40009770:	e5908000 	ldr	r8, [r0]
40009774:	e3570000 	cmp	r7, #0
40009778:	0a000008 	beq	400097a0 <_txe_byte_allocate+0x94>
4000977c:	e59f008c 	ldr	r0, [pc, #140]	; 40009810 <_txe_byte_allocate+0x104>
40009780:	e5900000 	ldr	r0, [r0]
40009784:	e3500000 	cmp	r0, #0
40009788:	1a000002 	bne	40009798 <_txe_byte_allocate+0x8c>
4000978c:	e59f0080 	ldr	r0, [pc, #128]	; 40009814 <_txe_byte_allocate+0x108>
40009790:	e1580000 	cmp	r8, r0
40009794:	1a000001 	bne	400097a0 <_txe_byte_allocate+0x94>
40009798:	e3a00004 	mov	r0, #4
4000979c:	eaffffe6 	b	4000973c <_txe_byte_allocate+0x30>
400097a0:	e3580000 	cmp	r8, #0
400097a4:	0a000008 	beq	400097cc <_txe_byte_allocate+0xc0>
400097a8:	e59f0064 	ldr	r0, [pc, #100]	; 40009814 <_txe_byte_allocate+0x108>
400097ac:	e1580000 	cmp	r8, r0
400097b0:	0a000003 	beq	400097c4 <_txe_byte_allocate+0xb8>
400097b4:	e59f0054 	ldr	r0, [pc, #84]	; 40009810 <_txe_byte_allocate+0x104>
400097b8:	e5900000 	ldr	r0, [r0]
400097bc:	e3500000 	cmp	r0, #0
400097c0:	0a000008 	beq	400097e8 <_txe_byte_allocate+0xdc>
400097c4:	e3a00013 	mov	r0, #19
400097c8:	eaffffdb 	b	4000973c <_txe_byte_allocate+0x30>
400097cc:	e59f003c 	ldr	r0, [pc, #60]	; 40009810 <_txe_byte_allocate+0x104>
400097d0:	e5900000 	ldr	r0, [r0]
400097d4:	e59f103c 	ldr	r1, [pc, #60]	; 40009818 <_txe_byte_allocate+0x10c>
400097d8:	e1500001 	cmp	r0, r1
400097dc:	2a000001 	bcs	400097e8 <_txe_byte_allocate+0xdc>
400097e0:	e3a00013 	mov	r0, #19
400097e4:	eaffffd4 	b	4000973c <_txe_byte_allocate+0x30>
400097e8:	e1a03007 	mov	r3, r7
400097ec:	e1a02006 	mov	r2, r6
400097f0:	e1a01005 	mov	r1, r5
400097f4:	e1a00004 	mov	r0, r4
400097f8:	eb0005bf 	bl	4000aefc <_tx_byte_allocate>
400097fc:	e1a09000 	mov	r9, r0
40009800:	e1a00009 	mov	r0, r9
40009804:	eaffffcc 	b	4000973c <_txe_byte_allocate+0x30>
40009808:	42595445 	.word	0x42595445
4000980c:	40030e38 	.word	0x40030e38
40009810:	40030e30 	.word	0x40030e30
40009814:	40032974 	.word	0x40032974
40009818:	f0f0f0f0 	.word	0xf0f0f0f0

4000981c <_txe_byte_pool_create>:
4000981c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009820:	e1a04000 	mov	r4, r0
40009824:	e1a05001 	mov	r5, r1
40009828:	e1a06002 	mov	r6, r2
4000982c:	e1a07003 	mov	r7, r3
40009830:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009834:	e3540000 	cmp	r4, #0
40009838:	0a000001 	beq	40009844 <_txe_byte_pool_create+0x28>
4000983c:	e3580034 	cmp	r8, #52	; 0x34
40009840:	0a000001 	beq	4000984c <_txe_byte_pool_create+0x30>
40009844:	e3a00002 	mov	r0, #2
40009848:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000984c:	e10f9000 	mrs	r9, CPSR
40009850:	e389a080 	orr	sl, r9, #128	; 0x80
40009854:	e121f00a 	msr	CPSR_c, sl
40009858:	e59f0130 	ldr	r0, [pc, #304]	; 40009990 <_txe_byte_pool_create+0x174>
4000985c:	e5900000 	ldr	r0, [r0]
40009860:	e2800001 	add	r0, r0, #1
40009864:	e59f1124 	ldr	r1, [pc, #292]	; 40009990 <_txe_byte_pool_create+0x174>
40009868:	e5810000 	str	r0, [r1]
4000986c:	e121f009 	msr	CPSR_c, r9
40009870:	e59f011c 	ldr	r0, [pc, #284]	; 40009994 <_txe_byte_pool_create+0x178>
40009874:	e5900000 	ldr	r0, [r0]
40009878:	e58d0004 	str	r0, [sp, #4]
4000987c:	e3a0b000 	mov	fp, #0
40009880:	ea000007 	b	400098a4 <_txe_byte_pool_create+0x88>
40009884:	e59d0004 	ldr	r0, [sp, #4]
40009888:	e1540000 	cmp	r4, r0
4000988c:	1a000000 	bne	40009894 <_txe_byte_pool_create+0x78>
40009890:	ea000007 	b	400098b4 <_txe_byte_pool_create+0x98>
40009894:	e59d0004 	ldr	r0, [sp, #4]
40009898:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000989c:	e58d0004 	str	r0, [sp, #4]
400098a0:	e28bb001 	add	fp, fp, #1
400098a4:	e59f00ec 	ldr	r0, [pc, #236]	; 40009998 <_txe_byte_pool_create+0x17c>
400098a8:	e5900000 	ldr	r0, [r0]
400098ac:	e15b0000 	cmp	fp, r0
400098b0:	3afffff3 	bcc	40009884 <_txe_byte_pool_create+0x68>
400098b4:	e1a00000 	nop			; (mov r0, r0)
400098b8:	e10f9000 	mrs	r9, CPSR
400098bc:	e389a080 	orr	sl, r9, #128	; 0x80
400098c0:	e121f00a 	msr	CPSR_c, sl
400098c4:	e59f00c4 	ldr	r0, [pc, #196]	; 40009990 <_txe_byte_pool_create+0x174>
400098c8:	e5900000 	ldr	r0, [r0]
400098cc:	e2400001 	sub	r0, r0, #1
400098d0:	e59f10b8 	ldr	r1, [pc, #184]	; 40009990 <_txe_byte_pool_create+0x174>
400098d4:	e5810000 	str	r0, [r1]
400098d8:	e121f009 	msr	CPSR_c, r9
400098dc:	eb001609 	bl	4000f108 <_tx_thread_system_preempt_check>
400098e0:	e59d0004 	ldr	r0, [sp, #4]
400098e4:	e1540000 	cmp	r4, r0
400098e8:	1a000001 	bne	400098f4 <_txe_byte_pool_create+0xd8>
400098ec:	e3a00002 	mov	r0, #2
400098f0:	eaffffd4 	b	40009848 <_txe_byte_pool_create+0x2c>
400098f4:	e3560000 	cmp	r6, #0
400098f8:	1a000001 	bne	40009904 <_txe_byte_pool_create+0xe8>
400098fc:	e3a00003 	mov	r0, #3
40009900:	eaffffd0 	b	40009848 <_txe_byte_pool_create+0x2c>
40009904:	e3570064 	cmp	r7, #100	; 0x64
40009908:	2a000001 	bcs	40009914 <_txe_byte_pool_create+0xf8>
4000990c:	e3a00005 	mov	r0, #5
40009910:	eaffffcc 	b	40009848 <_txe_byte_pool_create+0x2c>
40009914:	e59f0080 	ldr	r0, [pc, #128]	; 4000999c <_txe_byte_pool_create+0x180>
40009918:	e5900000 	ldr	r0, [r0]
4000991c:	e58d0000 	str	r0, [sp]
40009920:	e59d0000 	ldr	r0, [sp]
40009924:	e3500000 	cmp	r0, #0
40009928:	0a000009 	beq	40009954 <_txe_byte_pool_create+0x138>
4000992c:	e59f106c 	ldr	r1, [pc, #108]	; 400099a0 <_txe_byte_pool_create+0x184>
40009930:	e59d0000 	ldr	r0, [sp]
40009934:	e1500001 	cmp	r0, r1
40009938:	0a000003 	beq	4000994c <_txe_byte_pool_create+0x130>
4000993c:	e59f0060 	ldr	r0, [pc, #96]	; 400099a4 <_txe_byte_pool_create+0x188>
40009940:	e5900000 	ldr	r0, [r0]
40009944:	e3500000 	cmp	r0, #0
40009948:	0a000008 	beq	40009970 <_txe_byte_pool_create+0x154>
4000994c:	e3a00013 	mov	r0, #19
40009950:	eaffffbc 	b	40009848 <_txe_byte_pool_create+0x2c>
40009954:	e59f0048 	ldr	r0, [pc, #72]	; 400099a4 <_txe_byte_pool_create+0x188>
40009958:	e5900000 	ldr	r0, [r0]
4000995c:	e59f1044 	ldr	r1, [pc, #68]	; 400099a8 <_txe_byte_pool_create+0x18c>
40009960:	e1500001 	cmp	r0, r1
40009964:	2a000001 	bcs	40009970 <_txe_byte_pool_create+0x154>
40009968:	e3a00013 	mov	r0, #19
4000996c:	eaffffb5 	b	40009848 <_txe_byte_pool_create+0x2c>
40009970:	e1a03007 	mov	r3, r7
40009974:	e1a02006 	mov	r2, r6
40009978:	e1a01005 	mov	r1, r5
4000997c:	e1a00004 	mov	r0, r4
40009980:	eb000643 	bl	4000b294 <_tx_byte_pool_create>
40009984:	e58d0008 	str	r0, [sp, #8]
40009988:	e59d0008 	ldr	r0, [sp, #8]
4000998c:	eaffffad 	b	40009848 <_txe_byte_pool_create+0x2c>
40009990:	40030e54 	.word	0x40030e54
40009994:	40030ed4 	.word	0x40030ed4
40009998:	40030ed8 	.word	0x40030ed8
4000999c:	40030e38 	.word	0x40030e38
400099a0:	40032974 	.word	0x40032974
400099a4:	40030e30 	.word	0x40030e30
400099a8:	f0f0f0f0 	.word	0xf0f0f0f0

400099ac <_txe_byte_pool_delete>:
400099ac:	e92d4070 	push	{r4, r5, r6, lr}
400099b0:	e1a04000 	mov	r4, r0
400099b4:	e3540000 	cmp	r4, #0
400099b8:	0a000003 	beq	400099cc <_txe_byte_pool_delete+0x20>
400099bc:	e5940000 	ldr	r0, [r4]
400099c0:	e59f1054 	ldr	r1, [pc, #84]	; 40009a1c <_txe_byte_pool_delete+0x70>
400099c4:	e1500001 	cmp	r0, r1
400099c8:	0a000001 	beq	400099d4 <_txe_byte_pool_delete+0x28>
400099cc:	e3a00002 	mov	r0, #2
400099d0:	e8bd8070 	pop	{r4, r5, r6, pc}
400099d4:	e59f0044 	ldr	r0, [pc, #68]	; 40009a20 <_txe_byte_pool_delete+0x74>
400099d8:	e5905000 	ldr	r5, [r0]
400099dc:	e3550000 	cmp	r5, #0
400099e0:	0a000006 	beq	40009a00 <_txe_byte_pool_delete+0x54>
400099e4:	e59f0038 	ldr	r0, [pc, #56]	; 40009a24 <_txe_byte_pool_delete+0x78>
400099e8:	e5900000 	ldr	r0, [r0]
400099ec:	e3500000 	cmp	r0, #0
400099f0:	1a000002 	bne	40009a00 <_txe_byte_pool_delete+0x54>
400099f4:	e59f002c 	ldr	r0, [pc, #44]	; 40009a28 <_txe_byte_pool_delete+0x7c>
400099f8:	e1550000 	cmp	r5, r0
400099fc:	1a000001 	bne	40009a08 <_txe_byte_pool_delete+0x5c>
40009a00:	e3a00013 	mov	r0, #19
40009a04:	eafffff1 	b	400099d0 <_txe_byte_pool_delete+0x24>
40009a08:	e1a00004 	mov	r0, r4
40009a0c:	eb0006b6 	bl	4000b4ec <_tx_byte_pool_delete>
40009a10:	e1a06000 	mov	r6, r0
40009a14:	e1a00006 	mov	r0, r6
40009a18:	eaffffec 	b	400099d0 <_txe_byte_pool_delete+0x24>
40009a1c:	42595445 	.word	0x42595445
40009a20:	40030e38 	.word	0x40030e38
40009a24:	40030e30 	.word	0x40030e30
40009a28:	40032974 	.word	0x40032974

40009a2c <_txe_byte_release>:
40009a2c:	e92d4070 	push	{r4, r5, r6, lr}
40009a30:	e1a04000 	mov	r4, r0
40009a34:	e3540000 	cmp	r4, #0
40009a38:	1a000001 	bne	40009a44 <_txe_byte_release+0x18>
40009a3c:	e3a00003 	mov	r0, #3
40009a40:	e8bd8070 	pop	{r4, r5, r6, pc}
40009a44:	e59f005c 	ldr	r0, [pc, #92]	; 40009aa8 <_txe_byte_release+0x7c>
40009a48:	e5905000 	ldr	r5, [r0]
40009a4c:	e3550000 	cmp	r5, #0
40009a50:	0a000008 	beq	40009a78 <_txe_byte_release+0x4c>
40009a54:	e59f0050 	ldr	r0, [pc, #80]	; 40009aac <_txe_byte_release+0x80>
40009a58:	e1550000 	cmp	r5, r0
40009a5c:	0a000003 	beq	40009a70 <_txe_byte_release+0x44>
40009a60:	e59f0048 	ldr	r0, [pc, #72]	; 40009ab0 <_txe_byte_release+0x84>
40009a64:	e5900000 	ldr	r0, [r0]
40009a68:	e3500000 	cmp	r0, #0
40009a6c:	0a000008 	beq	40009a94 <_txe_byte_release+0x68>
40009a70:	e3a00013 	mov	r0, #19
40009a74:	eafffff1 	b	40009a40 <_txe_byte_release+0x14>
40009a78:	e59f0030 	ldr	r0, [pc, #48]	; 40009ab0 <_txe_byte_release+0x84>
40009a7c:	e5900000 	ldr	r0, [r0]
40009a80:	e59f102c 	ldr	r1, [pc, #44]	; 40009ab4 <_txe_byte_release+0x88>
40009a84:	e1500001 	cmp	r0, r1
40009a88:	2a000001 	bcs	40009a94 <_txe_byte_release+0x68>
40009a8c:	e3a00013 	mov	r0, #19
40009a90:	eaffffea 	b	40009a40 <_txe_byte_release+0x14>
40009a94:	e1a00004 	mov	r0, r4
40009a98:	eb000794 	bl	4000b8f0 <_tx_byte_release>
40009a9c:	e1a06000 	mov	r6, r0
40009aa0:	e1a00006 	mov	r0, r6
40009aa4:	eaffffe5 	b	40009a40 <_txe_byte_release+0x14>
40009aa8:	40030e38 	.word	0x40030e38
40009aac:	40032974 	.word	0x40032974
40009ab0:	40030e30 	.word	0x40030e30
40009ab4:	f0f0f0f0 	.word	0xf0f0f0f0

40009ab8 <_txe_event_flags_create>:
40009ab8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009abc:	e1a04000 	mov	r4, r0
40009ac0:	e1a05001 	mov	r5, r1
40009ac4:	e1a06002 	mov	r6, r2
40009ac8:	e3540000 	cmp	r4, #0
40009acc:	0a000001 	beq	40009ad8 <_txe_event_flags_create+0x20>
40009ad0:	e3560028 	cmp	r6, #40	; 0x28
40009ad4:	0a000001 	beq	40009ae0 <_txe_event_flags_create+0x28>
40009ad8:	e3a00006 	mov	r0, #6
40009adc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009ae0:	e10f7000 	mrs	r7, CPSR
40009ae4:	e3878080 	orr	r8, r7, #128	; 0x80
40009ae8:	e121f008 	msr	CPSR_c, r8
40009aec:	e59f00e8 	ldr	r0, [pc, #232]	; 40009bdc <_txe_event_flags_create+0x124>
40009af0:	e5900000 	ldr	r0, [r0]
40009af4:	e2800001 	add	r0, r0, #1
40009af8:	e59f10dc 	ldr	r1, [pc, #220]	; 40009bdc <_txe_event_flags_create+0x124>
40009afc:	e5810000 	str	r0, [r1]
40009b00:	e121f007 	msr	CPSR_c, r7
40009b04:	e59f00d4 	ldr	r0, [pc, #212]	; 40009be0 <_txe_event_flags_create+0x128>
40009b08:	e590a000 	ldr	sl, [r0]
40009b0c:	e3a09000 	mov	r9, #0
40009b10:	ea000004 	b	40009b28 <_txe_event_flags_create+0x70>
40009b14:	e154000a 	cmp	r4, sl
40009b18:	1a000000 	bne	40009b20 <_txe_event_flags_create+0x68>
40009b1c:	ea000005 	b	40009b38 <_txe_event_flags_create+0x80>
40009b20:	e59aa018 	ldr	sl, [sl, #24]
40009b24:	e2899001 	add	r9, r9, #1
40009b28:	e59f00b4 	ldr	r0, [pc, #180]	; 40009be4 <_txe_event_flags_create+0x12c>
40009b2c:	e5900000 	ldr	r0, [r0]
40009b30:	e1590000 	cmp	r9, r0
40009b34:	3afffff6 	bcc	40009b14 <_txe_event_flags_create+0x5c>
40009b38:	e1a00000 	nop			; (mov r0, r0)
40009b3c:	e10f7000 	mrs	r7, CPSR
40009b40:	e3878080 	orr	r8, r7, #128	; 0x80
40009b44:	e121f008 	msr	CPSR_c, r8
40009b48:	e59f008c 	ldr	r0, [pc, #140]	; 40009bdc <_txe_event_flags_create+0x124>
40009b4c:	e5900000 	ldr	r0, [r0]
40009b50:	e2400001 	sub	r0, r0, #1
40009b54:	e59f1080 	ldr	r1, [pc, #128]	; 40009bdc <_txe_event_flags_create+0x124>
40009b58:	e5810000 	str	r0, [r1]
40009b5c:	e121f007 	msr	CPSR_c, r7
40009b60:	eb001568 	bl	4000f108 <_tx_thread_system_preempt_check>
40009b64:	e154000a 	cmp	r4, sl
40009b68:	1a000001 	bne	40009b74 <_txe_event_flags_create+0xbc>
40009b6c:	e3a00006 	mov	r0, #6
40009b70:	eaffffd9 	b	40009adc <_txe_event_flags_create+0x24>
40009b74:	e59f006c 	ldr	r0, [pc, #108]	; 40009be8 <_txe_event_flags_create+0x130>
40009b78:	e590b000 	ldr	fp, [r0]
40009b7c:	e35b0000 	cmp	fp, #0
40009b80:	0a000008 	beq	40009ba8 <_txe_event_flags_create+0xf0>
40009b84:	e59f0060 	ldr	r0, [pc, #96]	; 40009bec <_txe_event_flags_create+0x134>
40009b88:	e15b0000 	cmp	fp, r0
40009b8c:	0a000003 	beq	40009ba0 <_txe_event_flags_create+0xe8>
40009b90:	e59f0058 	ldr	r0, [pc, #88]	; 40009bf0 <_txe_event_flags_create+0x138>
40009b94:	e5900000 	ldr	r0, [r0]
40009b98:	e3500000 	cmp	r0, #0
40009b9c:	0a000008 	beq	40009bc4 <_txe_event_flags_create+0x10c>
40009ba0:	e3a00013 	mov	r0, #19
40009ba4:	eaffffcc 	b	40009adc <_txe_event_flags_create+0x24>
40009ba8:	e59f0040 	ldr	r0, [pc, #64]	; 40009bf0 <_txe_event_flags_create+0x138>
40009bac:	e5900000 	ldr	r0, [r0]
40009bb0:	e59f103c 	ldr	r1, [pc, #60]	; 40009bf4 <_txe_event_flags_create+0x13c>
40009bb4:	e1500001 	cmp	r0, r1
40009bb8:	2a000001 	bcs	40009bc4 <_txe_event_flags_create+0x10c>
40009bbc:	e3a00013 	mov	r0, #19
40009bc0:	eaffffc5 	b	40009adc <_txe_event_flags_create+0x24>
40009bc4:	e1a01005 	mov	r1, r5
40009bc8:	e1a00004 	mov	r0, r4
40009bcc:	eb0007f9 	bl	4000bbb8 <_tx_event_flags_create>
40009bd0:	e58d0000 	str	r0, [sp]
40009bd4:	e59d0000 	ldr	r0, [sp]
40009bd8:	eaffffbf 	b	40009adc <_txe_event_flags_create+0x24>
40009bdc:	40030e54 	.word	0x40030e54
40009be0:	40030ebc 	.word	0x40030ebc
40009be4:	40030ec0 	.word	0x40030ec0
40009be8:	40030e38 	.word	0x40030e38
40009bec:	40032974 	.word	0x40032974
40009bf0:	40030e30 	.word	0x40030e30
40009bf4:	f0f0f0f0 	.word	0xf0f0f0f0

40009bf8 <_txe_event_flags_delete>:
40009bf8:	e92d4070 	push	{r4, r5, r6, lr}
40009bfc:	e1a04000 	mov	r4, r0
40009c00:	e3540000 	cmp	r4, #0
40009c04:	0a000003 	beq	40009c18 <_txe_event_flags_delete+0x20>
40009c08:	e5940000 	ldr	r0, [r4]
40009c0c:	e59f1054 	ldr	r1, [pc, #84]	; 40009c68 <_txe_event_flags_delete+0x70>
40009c10:	e1500001 	cmp	r0, r1
40009c14:	0a000001 	beq	40009c20 <_txe_event_flags_delete+0x28>
40009c18:	e3a00006 	mov	r0, #6
40009c1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009c20:	e59f0044 	ldr	r0, [pc, #68]	; 40009c6c <_txe_event_flags_delete+0x74>
40009c24:	e5905000 	ldr	r5, [r0]
40009c28:	e3550000 	cmp	r5, #0
40009c2c:	0a000006 	beq	40009c4c <_txe_event_flags_delete+0x54>
40009c30:	e59f0038 	ldr	r0, [pc, #56]	; 40009c70 <_txe_event_flags_delete+0x78>
40009c34:	e5900000 	ldr	r0, [r0]
40009c38:	e3500000 	cmp	r0, #0
40009c3c:	1a000002 	bne	40009c4c <_txe_event_flags_delete+0x54>
40009c40:	e59f002c 	ldr	r0, [pc, #44]	; 40009c74 <_txe_event_flags_delete+0x7c>
40009c44:	e1550000 	cmp	r5, r0
40009c48:	1a000001 	bne	40009c54 <_txe_event_flags_delete+0x5c>
40009c4c:	e3a00013 	mov	r0, #19
40009c50:	eafffff1 	b	40009c1c <_txe_event_flags_delete+0x24>
40009c54:	e1a00004 	mov	r0, r4
40009c58:	eb000849 	bl	4000bd84 <_tx_event_flags_delete>
40009c5c:	e1a06000 	mov	r6, r0
40009c60:	e1a00006 	mov	r0, r6
40009c64:	eaffffec 	b	40009c1c <_txe_event_flags_delete+0x24>
40009c68:	4456444e 	.word	0x4456444e
40009c6c:	40030e38 	.word	0x40030e38
40009c70:	40030e30 	.word	0x40030e30
40009c74:	40032974 	.word	0x40032974

40009c78 <_txe_event_flags_get>:
40009c78:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009c7c:	e1a04000 	mov	r4, r0
40009c80:	e1a05001 	mov	r5, r1
40009c84:	e1a06002 	mov	r6, r2
40009c88:	e1a08003 	mov	r8, r3
40009c8c:	e59d9020 	ldr	r9, [sp, #32]
40009c90:	e3540000 	cmp	r4, #0
40009c94:	0a000003 	beq	40009ca8 <_txe_event_flags_get+0x30>
40009c98:	e5940000 	ldr	r0, [r4]
40009c9c:	e59f1084 	ldr	r1, [pc, #132]	; 40009d28 <_txe_event_flags_get+0xb0>
40009ca0:	e1500001 	cmp	r0, r1
40009ca4:	0a000001 	beq	40009cb0 <_txe_event_flags_get+0x38>
40009ca8:	e3a00006 	mov	r0, #6
40009cac:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009cb0:	e3580000 	cmp	r8, #0
40009cb4:	1a000001 	bne	40009cc0 <_txe_event_flags_get+0x48>
40009cb8:	e3a00003 	mov	r0, #3
40009cbc:	eafffffa 	b	40009cac <_txe_event_flags_get+0x34>
40009cc0:	e3590000 	cmp	r9, #0
40009cc4:	0a00000a 	beq	40009cf4 <_txe_event_flags_get+0x7c>
40009cc8:	e59f005c 	ldr	r0, [pc, #92]	; 40009d2c <_txe_event_flags_get+0xb4>
40009ccc:	e5900000 	ldr	r0, [r0]
40009cd0:	e3500000 	cmp	r0, #0
40009cd4:	1a000004 	bne	40009cec <_txe_event_flags_get+0x74>
40009cd8:	e59f0050 	ldr	r0, [pc, #80]	; 40009d30 <_txe_event_flags_get+0xb8>
40009cdc:	e5900000 	ldr	r0, [r0]
40009ce0:	e59f104c 	ldr	r1, [pc, #76]	; 40009d34 <_txe_event_flags_get+0xbc>
40009ce4:	e1500001 	cmp	r0, r1
40009ce8:	1a000001 	bne	40009cf4 <_txe_event_flags_get+0x7c>
40009cec:	e3a00004 	mov	r0, #4
40009cf0:	eaffffed 	b	40009cac <_txe_event_flags_get+0x34>
40009cf4:	e3560003 	cmp	r6, #3
40009cf8:	9a000001 	bls	40009d04 <_txe_event_flags_get+0x8c>
40009cfc:	e3a00008 	mov	r0, #8
40009d00:	eaffffe9 	b	40009cac <_txe_event_flags_get+0x34>
40009d04:	e1a03008 	mov	r3, r8
40009d08:	e1a02006 	mov	r2, r6
40009d0c:	e1a01005 	mov	r1, r5
40009d10:	e1a00004 	mov	r0, r4
40009d14:	e58d9000 	str	r9, [sp]
40009d18:	eb0008ac 	bl	4000bfd0 <_tx_event_flags_get>
40009d1c:	e1a07000 	mov	r7, r0
40009d20:	e1a00007 	mov	r0, r7
40009d24:	eaffffe0 	b	40009cac <_txe_event_flags_get+0x34>
40009d28:	4456444e 	.word	0x4456444e
40009d2c:	40030e30 	.word	0x40030e30
40009d30:	40030e38 	.word	0x40030e38
40009d34:	40032974 	.word	0x40032974

40009d38 <_txe_event_flags_set>:
40009d38:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009d3c:	e1a04000 	mov	r4, r0
40009d40:	e1a05001 	mov	r5, r1
40009d44:	e1a06002 	mov	r6, r2
40009d48:	e3540000 	cmp	r4, #0
40009d4c:	0a000003 	beq	40009d60 <_txe_event_flags_set+0x28>
40009d50:	e5940000 	ldr	r0, [r4]
40009d54:	e59f1040 	ldr	r1, [pc, #64]	; 40009d9c <_txe_event_flags_set+0x64>
40009d58:	e1500001 	cmp	r0, r1
40009d5c:	0a000001 	beq	40009d68 <_txe_event_flags_set+0x30>
40009d60:	e3a00006 	mov	r0, #6
40009d64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009d68:	e3560002 	cmp	r6, #2
40009d6c:	0a000003 	beq	40009d80 <_txe_event_flags_set+0x48>
40009d70:	e3560000 	cmp	r6, #0
40009d74:	0a000001 	beq	40009d80 <_txe_event_flags_set+0x48>
40009d78:	e3a00008 	mov	r0, #8
40009d7c:	eafffff8 	b	40009d64 <_txe_event_flags_set+0x2c>
40009d80:	e1a02006 	mov	r2, r6
40009d84:	e1a01005 	mov	r1, r5
40009d88:	e1a00004 	mov	r0, r4
40009d8c:	eb000943 	bl	4000c2a0 <_tx_event_flags_set>
40009d90:	e1a07000 	mov	r7, r0
40009d94:	e1a00007 	mov	r0, r7
40009d98:	eafffff1 	b	40009d64 <_txe_event_flags_set+0x2c>
40009d9c:	4456444e 	.word	0x4456444e

40009da0 <_txe_mutex_create>:
40009da0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40009da4:	e1a04000 	mov	r4, r0
40009da8:	e1a05001 	mov	r5, r1
40009dac:	e1a06002 	mov	r6, r2
40009db0:	e1a07003 	mov	r7, r3
40009db4:	e3540000 	cmp	r4, #0
40009db8:	0a000001 	beq	40009dc4 <_txe_mutex_create+0x24>
40009dbc:	e3570038 	cmp	r7, #56	; 0x38
40009dc0:	0a000001 	beq	40009dcc <_txe_mutex_create+0x2c>
40009dc4:	e3a0001c 	mov	r0, #28
40009dc8:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009dcc:	e10f0000 	mrs	r0, CPSR
40009dd0:	e58d0004 	str	r0, [sp, #4]
40009dd4:	e59d0004 	ldr	r0, [sp, #4]
40009dd8:	e3808080 	orr	r8, r0, #128	; 0x80
40009ddc:	e121f008 	msr	CPSR_c, r8
40009de0:	e59f0114 	ldr	r0, [pc, #276]	; 40009efc <_txe_mutex_create+0x15c>
40009de4:	e5900000 	ldr	r0, [r0]
40009de8:	e2800001 	add	r0, r0, #1
40009dec:	e59f1108 	ldr	r1, [pc, #264]	; 40009efc <_txe_mutex_create+0x15c>
40009df0:	e5810000 	str	r0, [r1]
40009df4:	e59d0004 	ldr	r0, [sp, #4]
40009df8:	e121f000 	msr	CPSR_c, r0
40009dfc:	e59f00fc 	ldr	r0, [pc, #252]	; 40009f00 <_txe_mutex_create+0x160>
40009e00:	e590a000 	ldr	sl, [r0]
40009e04:	e3a09000 	mov	r9, #0
40009e08:	ea000004 	b	40009e20 <_txe_mutex_create+0x80>
40009e0c:	e154000a 	cmp	r4, sl
40009e10:	1a000000 	bne	40009e18 <_txe_mutex_create+0x78>
40009e14:	ea000005 	b	40009e30 <_txe_mutex_create+0x90>
40009e18:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
40009e1c:	e2899001 	add	r9, r9, #1
40009e20:	e59f00dc 	ldr	r0, [pc, #220]	; 40009f04 <_txe_mutex_create+0x164>
40009e24:	e5900000 	ldr	r0, [r0]
40009e28:	e1590000 	cmp	r9, r0
40009e2c:	3afffff6 	bcc	40009e0c <_txe_mutex_create+0x6c>
40009e30:	e1a00000 	nop			; (mov r0, r0)
40009e34:	e10f0000 	mrs	r0, CPSR
40009e38:	e58d0004 	str	r0, [sp, #4]
40009e3c:	e59d0004 	ldr	r0, [sp, #4]
40009e40:	e3808080 	orr	r8, r0, #128	; 0x80
40009e44:	e121f008 	msr	CPSR_c, r8
40009e48:	e59f00ac 	ldr	r0, [pc, #172]	; 40009efc <_txe_mutex_create+0x15c>
40009e4c:	e5900000 	ldr	r0, [r0]
40009e50:	e2400001 	sub	r0, r0, #1
40009e54:	e59f10a0 	ldr	r1, [pc, #160]	; 40009efc <_txe_mutex_create+0x15c>
40009e58:	e5810000 	str	r0, [r1]
40009e5c:	e59d0004 	ldr	r0, [sp, #4]
40009e60:	e121f000 	msr	CPSR_c, r0
40009e64:	eb0014a7 	bl	4000f108 <_tx_thread_system_preempt_check>
40009e68:	e154000a 	cmp	r4, sl
40009e6c:	1a000001 	bne	40009e78 <_txe_mutex_create+0xd8>
40009e70:	e3a0001c 	mov	r0, #28
40009e74:	eaffffd3 	b	40009dc8 <_txe_mutex_create+0x28>
40009e78:	e3560001 	cmp	r6, #1
40009e7c:	0a000003 	beq	40009e90 <_txe_mutex_create+0xf0>
40009e80:	e3560000 	cmp	r6, #0
40009e84:	0a000001 	beq	40009e90 <_txe_mutex_create+0xf0>
40009e88:	e3a0001f 	mov	r0, #31
40009e8c:	eaffffcd 	b	40009dc8 <_txe_mutex_create+0x28>
40009e90:	e59f0070 	ldr	r0, [pc, #112]	; 40009f08 <_txe_mutex_create+0x168>
40009e94:	e590b000 	ldr	fp, [r0]
40009e98:	e35b0000 	cmp	fp, #0
40009e9c:	0a000008 	beq	40009ec4 <_txe_mutex_create+0x124>
40009ea0:	e59f0064 	ldr	r0, [pc, #100]	; 40009f0c <_txe_mutex_create+0x16c>
40009ea4:	e15b0000 	cmp	fp, r0
40009ea8:	0a000003 	beq	40009ebc <_txe_mutex_create+0x11c>
40009eac:	e59f005c 	ldr	r0, [pc, #92]	; 40009f10 <_txe_mutex_create+0x170>
40009eb0:	e5900000 	ldr	r0, [r0]
40009eb4:	e3500000 	cmp	r0, #0
40009eb8:	0a000008 	beq	40009ee0 <_txe_mutex_create+0x140>
40009ebc:	e3a00013 	mov	r0, #19
40009ec0:	eaffffc0 	b	40009dc8 <_txe_mutex_create+0x28>
40009ec4:	e59f0044 	ldr	r0, [pc, #68]	; 40009f10 <_txe_mutex_create+0x170>
40009ec8:	e5900000 	ldr	r0, [r0]
40009ecc:	e59f1040 	ldr	r1, [pc, #64]	; 40009f14 <_txe_mutex_create+0x174>
40009ed0:	e1500001 	cmp	r0, r1
40009ed4:	2a000001 	bcs	40009ee0 <_txe_mutex_create+0x140>
40009ed8:	e3a00013 	mov	r0, #19
40009edc:	eaffffb9 	b	40009dc8 <_txe_mutex_create+0x28>
40009ee0:	e1a02006 	mov	r2, r6
40009ee4:	e1a01005 	mov	r1, r5
40009ee8:	e1a00004 	mov	r0, r4
40009eec:	eb000a8f 	bl	4000c930 <_tx_mutex_create>
40009ef0:	e58d0000 	str	r0, [sp]
40009ef4:	e59d0000 	ldr	r0, [sp]
40009ef8:	eaffffb2 	b	40009dc8 <_txe_mutex_create+0x28>
40009efc:	40030e54 	.word	0x40030e54
40009f00:	40030ec4 	.word	0x40030ec4
40009f04:	40030ec8 	.word	0x40030ec8
40009f08:	40030e38 	.word	0x40030e38
40009f0c:	40032974 	.word	0x40032974
40009f10:	40030e30 	.word	0x40030e30
40009f14:	f0f0f0f0 	.word	0xf0f0f0f0

40009f18 <_txe_mutex_delete>:
40009f18:	e92d4070 	push	{r4, r5, r6, lr}
40009f1c:	e1a04000 	mov	r4, r0
40009f20:	e3540000 	cmp	r4, #0
40009f24:	0a000003 	beq	40009f38 <_txe_mutex_delete+0x20>
40009f28:	e5940000 	ldr	r0, [r4]
40009f2c:	e59f1054 	ldr	r1, [pc, #84]	; 40009f88 <_txe_mutex_delete+0x70>
40009f30:	e1500001 	cmp	r0, r1
40009f34:	0a000001 	beq	40009f40 <_txe_mutex_delete+0x28>
40009f38:	e3a0001c 	mov	r0, #28
40009f3c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009f40:	e59f0044 	ldr	r0, [pc, #68]	; 40009f8c <_txe_mutex_delete+0x74>
40009f44:	e5905000 	ldr	r5, [r0]
40009f48:	e3550000 	cmp	r5, #0
40009f4c:	0a000006 	beq	40009f6c <_txe_mutex_delete+0x54>
40009f50:	e59f0038 	ldr	r0, [pc, #56]	; 40009f90 <_txe_mutex_delete+0x78>
40009f54:	e5900000 	ldr	r0, [r0]
40009f58:	e3500000 	cmp	r0, #0
40009f5c:	1a000002 	bne	40009f6c <_txe_mutex_delete+0x54>
40009f60:	e59f002c 	ldr	r0, [pc, #44]	; 40009f94 <_txe_mutex_delete+0x7c>
40009f64:	e1550000 	cmp	r5, r0
40009f68:	1a000001 	bne	40009f74 <_txe_mutex_delete+0x5c>
40009f6c:	e3a00013 	mov	r0, #19
40009f70:	eafffff1 	b	40009f3c <_txe_mutex_delete+0x24>
40009f74:	e1a00004 	mov	r0, r4
40009f78:	eb000ae2 	bl	4000cb08 <_tx_mutex_delete>
40009f7c:	e1a06000 	mov	r6, r0
40009f80:	e1a00006 	mov	r0, r6
40009f84:	eaffffec 	b	40009f3c <_txe_mutex_delete+0x24>
40009f88:	4d555445 	.word	0x4d555445
40009f8c:	40030e38 	.word	0x40030e38
40009f90:	40030e30 	.word	0x40030e30
40009f94:	40032974 	.word	0x40032974

40009f98 <_txe_mutex_get>:
40009f98:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009f9c:	e1a04000 	mov	r4, r0
40009fa0:	e1a05001 	mov	r5, r1
40009fa4:	e3540000 	cmp	r4, #0
40009fa8:	0a000003 	beq	40009fbc <_txe_mutex_get+0x24>
40009fac:	e5940000 	ldr	r0, [r4]
40009fb0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a058 <_txe_mutex_get+0xc0>
40009fb4:	e1500001 	cmp	r0, r1
40009fb8:	0a000001 	beq	40009fc4 <_txe_mutex_get+0x2c>
40009fbc:	e3a0001c 	mov	r0, #28
40009fc0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009fc4:	e59f0090 	ldr	r0, [pc, #144]	; 4000a05c <_txe_mutex_get+0xc4>
40009fc8:	e5906000 	ldr	r6, [r0]
40009fcc:	e3550000 	cmp	r5, #0
40009fd0:	0a000008 	beq	40009ff8 <_txe_mutex_get+0x60>
40009fd4:	e59f0084 	ldr	r0, [pc, #132]	; 4000a060 <_txe_mutex_get+0xc8>
40009fd8:	e5900000 	ldr	r0, [r0]
40009fdc:	e3500000 	cmp	r0, #0
40009fe0:	1a000002 	bne	40009ff0 <_txe_mutex_get+0x58>
40009fe4:	e59f0078 	ldr	r0, [pc, #120]	; 4000a064 <_txe_mutex_get+0xcc>
40009fe8:	e1560000 	cmp	r6, r0
40009fec:	1a000001 	bne	40009ff8 <_txe_mutex_get+0x60>
40009ff0:	e3a00004 	mov	r0, #4
40009ff4:	eafffff1 	b	40009fc0 <_txe_mutex_get+0x28>
40009ff8:	e3560000 	cmp	r6, #0
40009ffc:	0a000008 	beq	4000a024 <_txe_mutex_get+0x8c>
4000a000:	e59f005c 	ldr	r0, [pc, #92]	; 4000a064 <_txe_mutex_get+0xcc>
4000a004:	e1560000 	cmp	r6, r0
4000a008:	0a000003 	beq	4000a01c <_txe_mutex_get+0x84>
4000a00c:	e59f004c 	ldr	r0, [pc, #76]	; 4000a060 <_txe_mutex_get+0xc8>
4000a010:	e5900000 	ldr	r0, [r0]
4000a014:	e3500000 	cmp	r0, #0
4000a018:	0a000008 	beq	4000a040 <_txe_mutex_get+0xa8>
4000a01c:	e3a00013 	mov	r0, #19
4000a020:	eaffffe6 	b	40009fc0 <_txe_mutex_get+0x28>
4000a024:	e59f0034 	ldr	r0, [pc, #52]	; 4000a060 <_txe_mutex_get+0xc8>
4000a028:	e5900000 	ldr	r0, [r0]
4000a02c:	e59f1034 	ldr	r1, [pc, #52]	; 4000a068 <_txe_mutex_get+0xd0>
4000a030:	e1500001 	cmp	r0, r1
4000a034:	2a000001 	bcs	4000a040 <_txe_mutex_get+0xa8>
4000a038:	e3a00013 	mov	r0, #19
4000a03c:	eaffffdf 	b	40009fc0 <_txe_mutex_get+0x28>
4000a040:	e1a01005 	mov	r1, r5
4000a044:	e1a00004 	mov	r0, r4
4000a048:	eb000b65 	bl	4000cde4 <_tx_mutex_get>
4000a04c:	e1a07000 	mov	r7, r0
4000a050:	e1a00007 	mov	r0, r7
4000a054:	eaffffd9 	b	40009fc0 <_txe_mutex_get+0x28>
4000a058:	4d555445 	.word	0x4d555445
4000a05c:	40030e38 	.word	0x40030e38
4000a060:	40030e30 	.word	0x40030e30
4000a064:	40032974 	.word	0x40032974
4000a068:	f0f0f0f0 	.word	0xf0f0f0f0

4000a06c <_txe_mutex_put>:
4000a06c:	e92d4070 	push	{r4, r5, r6, lr}
4000a070:	e1a04000 	mov	r4, r0
4000a074:	e3540000 	cmp	r4, #0
4000a078:	0a000003 	beq	4000a08c <_txe_mutex_put+0x20>
4000a07c:	e5940000 	ldr	r0, [r4]
4000a080:	e59f1070 	ldr	r1, [pc, #112]	; 4000a0f8 <_txe_mutex_put+0x8c>
4000a084:	e1500001 	cmp	r0, r1
4000a088:	0a000001 	beq	4000a094 <_txe_mutex_put+0x28>
4000a08c:	e3a0001c 	mov	r0, #28
4000a090:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a094:	e59f0060 	ldr	r0, [pc, #96]	; 4000a0fc <_txe_mutex_put+0x90>
4000a098:	e5905000 	ldr	r5, [r0]
4000a09c:	e3550000 	cmp	r5, #0
4000a0a0:	0a000008 	beq	4000a0c8 <_txe_mutex_put+0x5c>
4000a0a4:	e59f0054 	ldr	r0, [pc, #84]	; 4000a100 <_txe_mutex_put+0x94>
4000a0a8:	e1550000 	cmp	r5, r0
4000a0ac:	0a000003 	beq	4000a0c0 <_txe_mutex_put+0x54>
4000a0b0:	e59f004c 	ldr	r0, [pc, #76]	; 4000a104 <_txe_mutex_put+0x98>
4000a0b4:	e5900000 	ldr	r0, [r0]
4000a0b8:	e3500000 	cmp	r0, #0
4000a0bc:	0a000008 	beq	4000a0e4 <_txe_mutex_put+0x78>
4000a0c0:	e3a00013 	mov	r0, #19
4000a0c4:	eafffff1 	b	4000a090 <_txe_mutex_put+0x24>
4000a0c8:	e59f0034 	ldr	r0, [pc, #52]	; 4000a104 <_txe_mutex_put+0x98>
4000a0cc:	e5900000 	ldr	r0, [r0]
4000a0d0:	e59f1030 	ldr	r1, [pc, #48]	; 4000a108 <_txe_mutex_put+0x9c>
4000a0d4:	e1500001 	cmp	r0, r1
4000a0d8:	2a000001 	bcs	4000a0e4 <_txe_mutex_put+0x78>
4000a0dc:	e3a00013 	mov	r0, #19
4000a0e0:	eaffffea 	b	4000a090 <_txe_mutex_put+0x24>
4000a0e4:	e1a00004 	mov	r0, r4
4000a0e8:	eb000c1c 	bl	4000d160 <_tx_mutex_put>
4000a0ec:	e1a06000 	mov	r6, r0
4000a0f0:	e1a00006 	mov	r0, r6
4000a0f4:	eaffffe5 	b	4000a090 <_txe_mutex_put+0x24>
4000a0f8:	4d555445 	.word	0x4d555445
4000a0fc:	40030e38 	.word	0x40030e38
4000a100:	40032974 	.word	0x40032974
4000a104:	40030e30 	.word	0x40030e30
4000a108:	f0f0f0f0 	.word	0xf0f0f0f0

4000a10c <_txe_queue_create>:
4000a10c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a110:	e24dd014 	sub	sp, sp, #20
4000a114:	e1a04000 	mov	r4, r0
4000a118:	e1a05002 	mov	r5, r2
4000a11c:	e1a06003 	mov	r6, r3
4000a120:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a124:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a128:	e3540000 	cmp	r4, #0
4000a12c:	0a000001 	beq	4000a138 <_txe_queue_create+0x2c>
4000a130:	e358003c 	cmp	r8, #60	; 0x3c
4000a134:	0a000002 	beq	4000a144 <_txe_queue_create+0x38>
4000a138:	e3a00009 	mov	r0, #9
4000a13c:	e28dd024 	add	sp, sp, #36	; 0x24
4000a140:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a144:	e10f9000 	mrs	r9, CPSR
4000a148:	e389a080 	orr	sl, r9, #128	; 0x80
4000a14c:	e121f00a 	msr	CPSR_c, sl
4000a150:	e59f0150 	ldr	r0, [pc, #336]	; 4000a2a8 <_txe_queue_create+0x19c>
4000a154:	e5900000 	ldr	r0, [r0]
4000a158:	e2800001 	add	r0, r0, #1
4000a15c:	e59f1144 	ldr	r1, [pc, #324]	; 4000a2a8 <_txe_queue_create+0x19c>
4000a160:	e5810000 	str	r0, [r1]
4000a164:	e121f009 	msr	CPSR_c, r9
4000a168:	e59f013c 	ldr	r0, [pc, #316]	; 4000a2ac <_txe_queue_create+0x1a0>
4000a16c:	e5900000 	ldr	r0, [r0]
4000a170:	e58d0008 	str	r0, [sp, #8]
4000a174:	e3a00000 	mov	r0, #0
4000a178:	e58d000c 	str	r0, [sp, #12]
4000a17c:	ea000009 	b	4000a1a8 <_txe_queue_create+0x9c>
4000a180:	e59d0008 	ldr	r0, [sp, #8]
4000a184:	e1540000 	cmp	r4, r0
4000a188:	1a000000 	bne	4000a190 <_txe_queue_create+0x84>
4000a18c:	ea00000a 	b	4000a1bc <_txe_queue_create+0xb0>
4000a190:	e59d0008 	ldr	r0, [sp, #8]
4000a194:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a198:	e58d0008 	str	r0, [sp, #8]
4000a19c:	e59d000c 	ldr	r0, [sp, #12]
4000a1a0:	e2800001 	add	r0, r0, #1
4000a1a4:	e58d000c 	str	r0, [sp, #12]
4000a1a8:	e59f1100 	ldr	r1, [pc, #256]	; 4000a2b0 <_txe_queue_create+0x1a4>
4000a1ac:	e59d000c 	ldr	r0, [sp, #12]
4000a1b0:	e5911000 	ldr	r1, [r1]
4000a1b4:	e1500001 	cmp	r0, r1
4000a1b8:	3afffff0 	bcc	4000a180 <_txe_queue_create+0x74>
4000a1bc:	e1a00000 	nop			; (mov r0, r0)
4000a1c0:	e10f9000 	mrs	r9, CPSR
4000a1c4:	e389a080 	orr	sl, r9, #128	; 0x80
4000a1c8:	e121f00a 	msr	CPSR_c, sl
4000a1cc:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a2a8 <_txe_queue_create+0x19c>
4000a1d0:	e5900000 	ldr	r0, [r0]
4000a1d4:	e2400001 	sub	r0, r0, #1
4000a1d8:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a2a8 <_txe_queue_create+0x19c>
4000a1dc:	e5810000 	str	r0, [r1]
4000a1e0:	e121f009 	msr	CPSR_c, r9
4000a1e4:	eb0013c7 	bl	4000f108 <_tx_thread_system_preempt_check>
4000a1e8:	e59d0008 	ldr	r0, [sp, #8]
4000a1ec:	e1540000 	cmp	r4, r0
4000a1f0:	1a000001 	bne	4000a1fc <_txe_queue_create+0xf0>
4000a1f4:	e3a00009 	mov	r0, #9
4000a1f8:	eaffffcf 	b	4000a13c <_txe_queue_create+0x30>
4000a1fc:	e3560000 	cmp	r6, #0
4000a200:	1a000001 	bne	4000a20c <_txe_queue_create+0x100>
4000a204:	e3a00003 	mov	r0, #3
4000a208:	eaffffcb 	b	4000a13c <_txe_queue_create+0x30>
4000a20c:	e3550000 	cmp	r5, #0
4000a210:	0a000001 	beq	4000a21c <_txe_queue_create+0x110>
4000a214:	e3550010 	cmp	r5, #16
4000a218:	9a000001 	bls	4000a224 <_txe_queue_create+0x118>
4000a21c:	e3a00005 	mov	r0, #5
4000a220:	eaffffc5 	b	4000a13c <_txe_queue_create+0x30>
4000a224:	e1550127 	cmp	r5, r7, lsr #2
4000a228:	9a000001 	bls	4000a234 <_txe_queue_create+0x128>
4000a22c:	e3a00005 	mov	r0, #5
4000a230:	eaffffc1 	b	4000a13c <_txe_queue_create+0x30>
4000a234:	e59f0078 	ldr	r0, [pc, #120]	; 4000a2b4 <_txe_queue_create+0x1a8>
4000a238:	e590b000 	ldr	fp, [r0]
4000a23c:	e35b0000 	cmp	fp, #0
4000a240:	0a000008 	beq	4000a268 <_txe_queue_create+0x15c>
4000a244:	e59f006c 	ldr	r0, [pc, #108]	; 4000a2b8 <_txe_queue_create+0x1ac>
4000a248:	e15b0000 	cmp	fp, r0
4000a24c:	0a000003 	beq	4000a260 <_txe_queue_create+0x154>
4000a250:	e59f0064 	ldr	r0, [pc, #100]	; 4000a2bc <_txe_queue_create+0x1b0>
4000a254:	e5900000 	ldr	r0, [r0]
4000a258:	e3500000 	cmp	r0, #0
4000a25c:	0a000008 	beq	4000a284 <_txe_queue_create+0x178>
4000a260:	e3a00013 	mov	r0, #19
4000a264:	eaffffb4 	b	4000a13c <_txe_queue_create+0x30>
4000a268:	e59f004c 	ldr	r0, [pc, #76]	; 4000a2bc <_txe_queue_create+0x1b0>
4000a26c:	e5900000 	ldr	r0, [r0]
4000a270:	e59f1048 	ldr	r1, [pc, #72]	; 4000a2c0 <_txe_queue_create+0x1b4>
4000a274:	e1500001 	cmp	r0, r1
4000a278:	2a000001 	bcs	4000a284 <_txe_queue_create+0x178>
4000a27c:	e3a00013 	mov	r0, #19
4000a280:	eaffffad 	b	4000a13c <_txe_queue_create+0x30>
4000a284:	e1a03006 	mov	r3, r6
4000a288:	e1a02005 	mov	r2, r5
4000a28c:	e58d7000 	str	r7, [sp]
4000a290:	e1a00004 	mov	r0, r4
4000a294:	e59d1018 	ldr	r1, [sp, #24]
4000a298:	eb000ce5 	bl	4000d634 <_tx_queue_create>
4000a29c:	e58d0010 	str	r0, [sp, #16]
4000a2a0:	e59d0010 	ldr	r0, [sp, #16]
4000a2a4:	eaffffa4 	b	4000a13c <_txe_queue_create+0x30>
4000a2a8:	40030e54 	.word	0x40030e54
4000a2ac:	40030eb4 	.word	0x40030eb4
4000a2b0:	40030eb8 	.word	0x40030eb8
4000a2b4:	40030e38 	.word	0x40030e38
4000a2b8:	40032974 	.word	0x40032974
4000a2bc:	40030e30 	.word	0x40030e30
4000a2c0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a2c4 <_txe_queue_front_send>:
4000a2c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a2c8:	e1a04000 	mov	r4, r0
4000a2cc:	e1a05001 	mov	r5, r1
4000a2d0:	e1a06002 	mov	r6, r2
4000a2d4:	e3540000 	cmp	r4, #0
4000a2d8:	0a000003 	beq	4000a2ec <_txe_queue_front_send+0x28>
4000a2dc:	e5940000 	ldr	r0, [r4]
4000a2e0:	e59f106c 	ldr	r1, [pc, #108]	; 4000a354 <_txe_queue_front_send+0x90>
4000a2e4:	e1500001 	cmp	r0, r1
4000a2e8:	0a000001 	beq	4000a2f4 <_txe_queue_front_send+0x30>
4000a2ec:	e3a00009 	mov	r0, #9
4000a2f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a2f4:	e3550000 	cmp	r5, #0
4000a2f8:	1a000001 	bne	4000a304 <_txe_queue_front_send+0x40>
4000a2fc:	e3a00003 	mov	r0, #3
4000a300:	eafffffa 	b	4000a2f0 <_txe_queue_front_send+0x2c>
4000a304:	e3560000 	cmp	r6, #0
4000a308:	0a00000a 	beq	4000a338 <_txe_queue_front_send+0x74>
4000a30c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a358 <_txe_queue_front_send+0x94>
4000a310:	e5900000 	ldr	r0, [r0]
4000a314:	e3500000 	cmp	r0, #0
4000a318:	1a000004 	bne	4000a330 <_txe_queue_front_send+0x6c>
4000a31c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a35c <_txe_queue_front_send+0x98>
4000a320:	e5900000 	ldr	r0, [r0]
4000a324:	e59f1034 	ldr	r1, [pc, #52]	; 4000a360 <_txe_queue_front_send+0x9c>
4000a328:	e1500001 	cmp	r0, r1
4000a32c:	1a000001 	bne	4000a338 <_txe_queue_front_send+0x74>
4000a330:	e3a00004 	mov	r0, #4
4000a334:	eaffffed 	b	4000a2f0 <_txe_queue_front_send+0x2c>
4000a338:	e1a02006 	mov	r2, r6
4000a33c:	e1a01005 	mov	r1, r5
4000a340:	e1a00004 	mov	r0, r4
4000a344:	eb000d3d 	bl	4000d840 <_tx_queue_front_send>
4000a348:	e1a07000 	mov	r7, r0
4000a34c:	e1a00007 	mov	r0, r7
4000a350:	eaffffe6 	b	4000a2f0 <_txe_queue_front_send+0x2c>
4000a354:	51554555 	.word	0x51554555
4000a358:	40030e30 	.word	0x40030e30
4000a35c:	40030e38 	.word	0x40030e38
4000a360:	40032974 	.word	0x40032974

4000a364 <_txe_queue_receive>:
4000a364:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a368:	e1a04000 	mov	r4, r0
4000a36c:	e1a05001 	mov	r5, r1
4000a370:	e1a06002 	mov	r6, r2
4000a374:	e3540000 	cmp	r4, #0
4000a378:	0a000003 	beq	4000a38c <_txe_queue_receive+0x28>
4000a37c:	e5940000 	ldr	r0, [r4]
4000a380:	e59f106c 	ldr	r1, [pc, #108]	; 4000a3f4 <_txe_queue_receive+0x90>
4000a384:	e1500001 	cmp	r0, r1
4000a388:	0a000001 	beq	4000a394 <_txe_queue_receive+0x30>
4000a38c:	e3a00009 	mov	r0, #9
4000a390:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a394:	e3550000 	cmp	r5, #0
4000a398:	1a000001 	bne	4000a3a4 <_txe_queue_receive+0x40>
4000a39c:	e3a00003 	mov	r0, #3
4000a3a0:	eafffffa 	b	4000a390 <_txe_queue_receive+0x2c>
4000a3a4:	e3560000 	cmp	r6, #0
4000a3a8:	0a00000a 	beq	4000a3d8 <_txe_queue_receive+0x74>
4000a3ac:	e59f0044 	ldr	r0, [pc, #68]	; 4000a3f8 <_txe_queue_receive+0x94>
4000a3b0:	e5900000 	ldr	r0, [r0]
4000a3b4:	e3500000 	cmp	r0, #0
4000a3b8:	1a000004 	bne	4000a3d0 <_txe_queue_receive+0x6c>
4000a3bc:	e59f0038 	ldr	r0, [pc, #56]	; 4000a3fc <_txe_queue_receive+0x98>
4000a3c0:	e5900000 	ldr	r0, [r0]
4000a3c4:	e59f1034 	ldr	r1, [pc, #52]	; 4000a400 <_txe_queue_receive+0x9c>
4000a3c8:	e1500001 	cmp	r0, r1
4000a3cc:	1a000001 	bne	4000a3d8 <_txe_queue_receive+0x74>
4000a3d0:	e3a00004 	mov	r0, #4
4000a3d4:	eaffffed 	b	4000a390 <_txe_queue_receive+0x2c>
4000a3d8:	e1a02006 	mov	r2, r6
4000a3dc:	e1a01005 	mov	r1, r5
4000a3e0:	e1a00004 	mov	r0, r4
4000a3e4:	eb000e04 	bl	4000dbfc <_tx_queue_receive>
4000a3e8:	e1a07000 	mov	r7, r0
4000a3ec:	e1a00007 	mov	r0, r7
4000a3f0:	eaffffe6 	b	4000a390 <_txe_queue_receive+0x2c>
4000a3f4:	51554555 	.word	0x51554555
4000a3f8:	40030e30 	.word	0x40030e30
4000a3fc:	40030e38 	.word	0x40030e38
4000a400:	40032974 	.word	0x40032974

4000a404 <_txe_queue_send>:
4000a404:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a408:	e1a04000 	mov	r4, r0
4000a40c:	e1a05001 	mov	r5, r1
4000a410:	e1a06002 	mov	r6, r2
4000a414:	e3540000 	cmp	r4, #0
4000a418:	0a000003 	beq	4000a42c <_txe_queue_send+0x28>
4000a41c:	e5940000 	ldr	r0, [r4]
4000a420:	e59f106c 	ldr	r1, [pc, #108]	; 4000a494 <_txe_queue_send+0x90>
4000a424:	e1500001 	cmp	r0, r1
4000a428:	0a000001 	beq	4000a434 <_txe_queue_send+0x30>
4000a42c:	e3a00009 	mov	r0, #9
4000a430:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a434:	e3550000 	cmp	r5, #0
4000a438:	1a000001 	bne	4000a444 <_txe_queue_send+0x40>
4000a43c:	e3a00003 	mov	r0, #3
4000a440:	eafffffa 	b	4000a430 <_txe_queue_send+0x2c>
4000a444:	e3560000 	cmp	r6, #0
4000a448:	0a00000a 	beq	4000a478 <_txe_queue_send+0x74>
4000a44c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a498 <_txe_queue_send+0x94>
4000a450:	e5900000 	ldr	r0, [r0]
4000a454:	e3500000 	cmp	r0, #0
4000a458:	1a000004 	bne	4000a470 <_txe_queue_send+0x6c>
4000a45c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a49c <_txe_queue_send+0x98>
4000a460:	e5900000 	ldr	r0, [r0]
4000a464:	e59f1034 	ldr	r1, [pc, #52]	; 4000a4a0 <_txe_queue_send+0x9c>
4000a468:	e1500001 	cmp	r0, r1
4000a46c:	1a000001 	bne	4000a478 <_txe_queue_send+0x74>
4000a470:	e3a00004 	mov	r0, #4
4000a474:	eaffffed 	b	4000a430 <_txe_queue_send+0x2c>
4000a478:	e1a02006 	mov	r2, r6
4000a47c:	e1a01005 	mov	r1, r5
4000a480:	e1a00004 	mov	r0, r4
4000a484:	eb000ef4 	bl	4000e05c <_tx_queue_send>
4000a488:	e1a07000 	mov	r7, r0
4000a48c:	e1a00007 	mov	r0, r7
4000a490:	eaffffe6 	b	4000a430 <_txe_queue_send+0x2c>
4000a494:	51554555 	.word	0x51554555
4000a498:	40030e30 	.word	0x40030e30
4000a49c:	40030e38 	.word	0x40030e38
4000a4a0:	40032974 	.word	0x40032974

4000a4a4 <_txe_thread_create>:
4000a4a4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a4a8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a4ac:	e1a04000 	mov	r4, r0
4000a4b0:	e1a05002 	mov	r5, r2
4000a4b4:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a4b8:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a4bc:	e3540000 	cmp	r4, #0
4000a4c0:	0a000002 	beq	4000a4d0 <_txe_thread_create+0x2c>
4000a4c4:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a4c8:	e35000a8 	cmp	r0, #168	; 0xa8
4000a4cc:	0a000002 	beq	4000a4dc <_txe_thread_create+0x38>
4000a4d0:	e3a0000e 	mov	r0, #14
4000a4d4:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a4d8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a4dc:	e10f0000 	mrs	r0, CPSR
4000a4e0:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a4e4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a4e8:	e3800080 	orr	r0, r0, #128	; 0x80
4000a4ec:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a4f0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a4f4:	e121f000 	msr	CPSR_c, r0
4000a4f8:	e59f01ec 	ldr	r0, [pc, #492]	; 4000a6ec <_txe_thread_create+0x248>
4000a4fc:	e5900000 	ldr	r0, [r0]
4000a500:	e2800001 	add	r0, r0, #1
4000a504:	e59f11e0 	ldr	r1, [pc, #480]	; 4000a6ec <_txe_thread_create+0x248>
4000a508:	e5810000 	str	r0, [r1]
4000a50c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a510:	e121f000 	msr	CPSR_c, r0
4000a514:	e59f01d4 	ldr	r0, [pc, #468]	; 4000a6f0 <_txe_thread_create+0x24c>
4000a518:	e5900000 	ldr	r0, [r0]
4000a51c:	e58d0018 	str	r0, [sp, #24]
4000a520:	e2470001 	sub	r0, r7, #1
4000a524:	e080b006 	add	fp, r0, r6
4000a528:	e3a00000 	mov	r0, #0
4000a52c:	e58d001c 	str	r0, [sp, #28]
4000a530:	ea00001d 	b	4000a5ac <_txe_thread_create+0x108>
4000a534:	e59d0018 	ldr	r0, [sp, #24]
4000a538:	e1540000 	cmp	r4, r0
4000a53c:	1a000000 	bne	4000a544 <_txe_thread_create+0xa0>
4000a540:	ea00001e 	b	4000a5c0 <_txe_thread_create+0x11c>
4000a544:	e59d0018 	ldr	r0, [sp, #24]
4000a548:	e590000c 	ldr	r0, [r0, #12]
4000a54c:	e1500006 	cmp	r0, r6
4000a550:	8a000005 	bhi	4000a56c <_txe_thread_create+0xc8>
4000a554:	e59d0018 	ldr	r0, [sp, #24]
4000a558:	e5900010 	ldr	r0, [r0, #16]
4000a55c:	e1500006 	cmp	r0, r6
4000a560:	9a000001 	bls	4000a56c <_txe_thread_create+0xc8>
4000a564:	e3a06000 	mov	r6, #0
4000a568:	ea000014 	b	4000a5c0 <_txe_thread_create+0x11c>
4000a56c:	e59d0018 	ldr	r0, [sp, #24]
4000a570:	e590000c 	ldr	r0, [r0, #12]
4000a574:	e150000b 	cmp	r0, fp
4000a578:	8a000005 	bhi	4000a594 <_txe_thread_create+0xf0>
4000a57c:	e59d0018 	ldr	r0, [sp, #24]
4000a580:	e5900010 	ldr	r0, [r0, #16]
4000a584:	e150000b 	cmp	r0, fp
4000a588:	9a000001 	bls	4000a594 <_txe_thread_create+0xf0>
4000a58c:	e3a06000 	mov	r6, #0
4000a590:	ea00000a 	b	4000a5c0 <_txe_thread_create+0x11c>
4000a594:	e59d0018 	ldr	r0, [sp, #24]
4000a598:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a59c:	e58d0018 	str	r0, [sp, #24]
4000a5a0:	e59d001c 	ldr	r0, [sp, #28]
4000a5a4:	e2800001 	add	r0, r0, #1
4000a5a8:	e58d001c 	str	r0, [sp, #28]
4000a5ac:	e59f1140 	ldr	r1, [pc, #320]	; 4000a6f4 <_txe_thread_create+0x250>
4000a5b0:	e59d001c 	ldr	r0, [sp, #28]
4000a5b4:	e5911000 	ldr	r1, [r1]
4000a5b8:	e1500001 	cmp	r0, r1
4000a5bc:	3affffdc 	bcc	4000a534 <_txe_thread_create+0x90>
4000a5c0:	e1a00000 	nop			; (mov r0, r0)
4000a5c4:	e10f0000 	mrs	r0, CPSR
4000a5c8:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a5cc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a5d0:	e3800080 	orr	r0, r0, #128	; 0x80
4000a5d4:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a5d8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a5dc:	e121f000 	msr	CPSR_c, r0
4000a5e0:	e59f0104 	ldr	r0, [pc, #260]	; 4000a6ec <_txe_thread_create+0x248>
4000a5e4:	e5900000 	ldr	r0, [r0]
4000a5e8:	e2400001 	sub	r0, r0, #1
4000a5ec:	e59f10f8 	ldr	r1, [pc, #248]	; 4000a6ec <_txe_thread_create+0x248>
4000a5f0:	e5810000 	str	r0, [r1]
4000a5f4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a5f8:	e121f000 	msr	CPSR_c, r0
4000a5fc:	eb0012c1 	bl	4000f108 <_tx_thread_system_preempt_check>
4000a600:	e59d0018 	ldr	r0, [sp, #24]
4000a604:	e1540000 	cmp	r4, r0
4000a608:	1a000001 	bne	4000a614 <_txe_thread_create+0x170>
4000a60c:	e3a0000e 	mov	r0, #14
4000a610:	eaffffaf 	b	4000a4d4 <_txe_thread_create+0x30>
4000a614:	e3560000 	cmp	r6, #0
4000a618:	0a000001 	beq	4000a624 <_txe_thread_create+0x180>
4000a61c:	e3550000 	cmp	r5, #0
4000a620:	1a000001 	bne	4000a62c <_txe_thread_create+0x188>
4000a624:	e3a00003 	mov	r0, #3
4000a628:	eaffffa9 	b	4000a4d4 <_txe_thread_create+0x30>
4000a62c:	e35700c8 	cmp	r7, #200	; 0xc8
4000a630:	2a000001 	bcs	4000a63c <_txe_thread_create+0x198>
4000a634:	e3a00005 	mov	r0, #5
4000a638:	eaffffa5 	b	4000a4d4 <_txe_thread_create+0x30>
4000a63c:	e3580020 	cmp	r8, #32
4000a640:	3a000001 	bcc	4000a64c <_txe_thread_create+0x1a8>
4000a644:	e3a0000f 	mov	r0, #15
4000a648:	eaffffa1 	b	4000a4d4 <_txe_thread_create+0x30>
4000a64c:	e1590008 	cmp	r9, r8
4000a650:	9a000001 	bls	4000a65c <_txe_thread_create+0x1b8>
4000a654:	e3a00018 	mov	r0, #24
4000a658:	eaffff9d 	b	4000a4d4 <_txe_thread_create+0x30>
4000a65c:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a660:	e3500001 	cmp	r0, #1
4000a664:	9a000001 	bls	4000a670 <_txe_thread_create+0x1cc>
4000a668:	e3a00010 	mov	r0, #16
4000a66c:	eaffff98 	b	4000a4d4 <_txe_thread_create+0x30>
4000a670:	e59f0080 	ldr	r0, [pc, #128]	; 4000a6f8 <_txe_thread_create+0x254>
4000a674:	e590a000 	ldr	sl, [r0]
4000a678:	e35a0000 	cmp	sl, #0
4000a67c:	0a000008 	beq	4000a6a4 <_txe_thread_create+0x200>
4000a680:	e59f0074 	ldr	r0, [pc, #116]	; 4000a6fc <_txe_thread_create+0x258>
4000a684:	e15a0000 	cmp	sl, r0
4000a688:	0a000003 	beq	4000a69c <_txe_thread_create+0x1f8>
4000a68c:	e59f006c 	ldr	r0, [pc, #108]	; 4000a700 <_txe_thread_create+0x25c>
4000a690:	e5900000 	ldr	r0, [r0]
4000a694:	e3500000 	cmp	r0, #0
4000a698:	0a000008 	beq	4000a6c0 <_txe_thread_create+0x21c>
4000a69c:	e3a00013 	mov	r0, #19
4000a6a0:	eaffff8b 	b	4000a4d4 <_txe_thread_create+0x30>
4000a6a4:	e59f0054 	ldr	r0, [pc, #84]	; 4000a700 <_txe_thread_create+0x25c>
4000a6a8:	e5900000 	ldr	r0, [r0]
4000a6ac:	e59f1050 	ldr	r1, [pc, #80]	; 4000a704 <_txe_thread_create+0x260>
4000a6b0:	e1500001 	cmp	r0, r1
4000a6b4:	2a000001 	bcs	4000a6c0 <_txe_thread_create+0x21c>
4000a6b8:	e3a00013 	mov	r0, #19
4000a6bc:	eaffff84 	b	4000a4d4 <_txe_thread_create+0x30>
4000a6c0:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a6c4:	e1cd21f0 	strd	r2, [sp, #16]
4000a6c8:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a6cc:	e1a02005 	mov	r2, r5
4000a6d0:	e1a00004 	mov	r0, r4
4000a6d4:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a6d8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a6dc:	eb000f49 	bl	4000e408 <_tx_thread_create>
4000a6e0:	e58d0020 	str	r0, [sp, #32]
4000a6e4:	e59d0020 	ldr	r0, [sp, #32]
4000a6e8:	eaffff79 	b	4000a4d4 <_txe_thread_create+0x30>
4000a6ec:	40030e54 	.word	0x40030e54
4000a6f0:	40030e40 	.word	0x40030e40
4000a6f4:	40030e44 	.word	0x40030e44
4000a6f8:	40030e38 	.word	0x40030e38
4000a6fc:	40032974 	.word	0x40032974
4000a700:	40030e30 	.word	0x40030e30
4000a704:	f0f0f0f0 	.word	0xf0f0f0f0

4000a708 <_txe_thread_info_get>:
4000a708:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a70c:	e24dd01c 	sub	sp, sp, #28
4000a710:	e1a04000 	mov	r4, r0
4000a714:	e1a05001 	mov	r5, r1
4000a718:	e1a06002 	mov	r6, r2
4000a71c:	e1a07003 	mov	r7, r3
4000a720:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000a724:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000a728:	e3540000 	cmp	r4, #0
4000a72c:	0a000003 	beq	4000a740 <_txe_thread_info_get+0x38>
4000a730:	e5940000 	ldr	r0, [r4]
4000a734:	e59f103c 	ldr	r1, [pc, #60]	; 4000a778 <_txe_thread_info_get+0x70>
4000a738:	e1500001 	cmp	r0, r1
4000a73c:	0a000002 	beq	4000a74c <_txe_thread_info_get+0x44>
4000a740:	e3a0000e 	mov	r0, #14
4000a744:	e28dd01c 	add	sp, sp, #28
4000a748:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a74c:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000a750:	e58d3010 	str	r3, [sp, #16]
4000a754:	e1a03007 	mov	r3, r7
4000a758:	e1a02006 	mov	r2, r6
4000a75c:	e1a01005 	mov	r1, r5
4000a760:	e1a00004 	mov	r0, r4
4000a764:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000a768:	eb000ff5 	bl	4000e744 <_tx_thread_info_get>
4000a76c:	e58d0018 	str	r0, [sp, #24]
4000a770:	e59d0018 	ldr	r0, [sp, #24]
4000a774:	eafffff2 	b	4000a744 <_txe_thread_info_get+0x3c>
4000a778:	54485244 	.word	0x54485244

4000a77c <_txe_thread_priority_change>:
4000a77c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a780:	e1a04000 	mov	r4, r0
4000a784:	e1a05001 	mov	r5, r1
4000a788:	e1a06002 	mov	r6, r2
4000a78c:	e3540000 	cmp	r4, #0
4000a790:	0a000003 	beq	4000a7a4 <_txe_thread_priority_change+0x28>
4000a794:	e5940000 	ldr	r0, [r4]
4000a798:	e59f1070 	ldr	r1, [pc, #112]	; 4000a810 <_txe_thread_priority_change+0x94>
4000a79c:	e1500001 	cmp	r0, r1
4000a7a0:	0a000001 	beq	4000a7ac <_txe_thread_priority_change+0x30>
4000a7a4:	e3a0000e 	mov	r0, #14
4000a7a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a7ac:	e3560000 	cmp	r6, #0
4000a7b0:	1a000001 	bne	4000a7bc <_txe_thread_priority_change+0x40>
4000a7b4:	e3a00003 	mov	r0, #3
4000a7b8:	eafffffa 	b	4000a7a8 <_txe_thread_priority_change+0x2c>
4000a7bc:	e3550020 	cmp	r5, #32
4000a7c0:	3a000001 	bcc	4000a7cc <_txe_thread_priority_change+0x50>
4000a7c4:	e3a0000f 	mov	r0, #15
4000a7c8:	eafffff6 	b	4000a7a8 <_txe_thread_priority_change+0x2c>
4000a7cc:	e59f0040 	ldr	r0, [pc, #64]	; 4000a814 <_txe_thread_priority_change+0x98>
4000a7d0:	e5900000 	ldr	r0, [r0]
4000a7d4:	e3500000 	cmp	r0, #0
4000a7d8:	0a000003 	beq	4000a7ec <_txe_thread_priority_change+0x70>
4000a7dc:	e59f0034 	ldr	r0, [pc, #52]	; 4000a818 <_txe_thread_priority_change+0x9c>
4000a7e0:	e5900000 	ldr	r0, [r0]
4000a7e4:	e3500000 	cmp	r0, #0
4000a7e8:	0a000001 	beq	4000a7f4 <_txe_thread_priority_change+0x78>
4000a7ec:	e3a00013 	mov	r0, #19
4000a7f0:	eaffffec 	b	4000a7a8 <_txe_thread_priority_change+0x2c>
4000a7f4:	e1a02006 	mov	r2, r6
4000a7f8:	e1a01005 	mov	r1, r5
4000a7fc:	e1a00004 	mov	r0, r4
4000a800:	eb001039 	bl	4000e8ec <_tx_thread_priority_change>
4000a804:	e1a07000 	mov	r7, r0
4000a808:	e1a00007 	mov	r0, r7
4000a80c:	eaffffe5 	b	4000a7a8 <_txe_thread_priority_change+0x2c>
4000a810:	54485244 	.word	0x54485244
4000a814:	40030e38 	.word	0x40030e38
4000a818:	40030e30 	.word	0x40030e30

4000a81c <_txe_thread_relinquish>:
4000a81c:	e92d4010 	push	{r4, lr}
4000a820:	e59f0020 	ldr	r0, [pc, #32]	; 4000a848 <_txe_thread_relinquish+0x2c>
4000a824:	e5900000 	ldr	r0, [r0]
4000a828:	e3500000 	cmp	r0, #0
4000a82c:	0a000004 	beq	4000a844 <_txe_thread_relinquish+0x28>
4000a830:	e59f0014 	ldr	r0, [pc, #20]	; 4000a84c <_txe_thread_relinquish+0x30>
4000a834:	e5900000 	ldr	r0, [r0]
4000a838:	e3500000 	cmp	r0, #0
4000a83c:	1a000000 	bne	4000a844 <_txe_thread_relinquish+0x28>
4000a840:	eb001091 	bl	4000ea8c <_tx_thread_relinquish>
4000a844:	e8bd8010 	pop	{r4, pc}
4000a848:	40030e38 	.word	0x40030e38
4000a84c:	40030e30 	.word	0x40030e30

4000a850 <_txe_thread_resume>:
4000a850:	e92d4070 	push	{r4, r5, r6, lr}
4000a854:	e1a04000 	mov	r4, r0
4000a858:	e3540000 	cmp	r4, #0
4000a85c:	0a000003 	beq	4000a870 <_txe_thread_resume+0x20>
4000a860:	e5940000 	ldr	r0, [r4]
4000a864:	e59f1020 	ldr	r1, [pc, #32]	; 4000a88c <_txe_thread_resume+0x3c>
4000a868:	e1500001 	cmp	r0, r1
4000a86c:	0a000001 	beq	4000a878 <_txe_thread_resume+0x28>
4000a870:	e3a0000e 	mov	r0, #14
4000a874:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a878:	e1a00004 	mov	r0, r4
4000a87c:	eb00113e 	bl	4000ed7c <_tx_thread_resume>
4000a880:	e1a05000 	mov	r5, r0
4000a884:	e1a00005 	mov	r0, r5
4000a888:	eafffff9 	b	4000a874 <_txe_thread_resume+0x24>
4000a88c:	54485244 	.word	0x54485244

4000a890 <_txe_timer_activate>:
4000a890:	e92d4070 	push	{r4, r5, r6, lr}
4000a894:	e1a04000 	mov	r4, r0
4000a898:	e3540000 	cmp	r4, #0
4000a89c:	0a000003 	beq	4000a8b0 <_txe_timer_activate+0x20>
4000a8a0:	e5940000 	ldr	r0, [r4]
4000a8a4:	e59f1020 	ldr	r1, [pc, #32]	; 4000a8cc <_txe_timer_activate+0x3c>
4000a8a8:	e1500001 	cmp	r0, r1
4000a8ac:	0a000001 	beq	4000a8b8 <_txe_timer_activate+0x28>
4000a8b0:	e3a00015 	mov	r0, #21
4000a8b4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a8b8:	e1a00004 	mov	r0, r4
4000a8bc:	eb0013a4 	bl	4000f754 <_tx_timer_activate>
4000a8c0:	e1a05000 	mov	r5, r0
4000a8c4:	e1a00005 	mov	r0, r5
4000a8c8:	eafffff9 	b	4000a8b4 <_txe_timer_activate+0x24>
4000a8cc:	4154494d 	.word	0x4154494d

4000a8d0 <_txe_timer_change>:
4000a8d0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a8d4:	e1a04000 	mov	r4, r0
4000a8d8:	e1a05001 	mov	r5, r1
4000a8dc:	e1a06002 	mov	r6, r2
4000a8e0:	e3540000 	cmp	r4, #0
4000a8e4:	0a000003 	beq	4000a8f8 <_txe_timer_change+0x28>
4000a8e8:	e5940000 	ldr	r0, [r4]
4000a8ec:	e59f1058 	ldr	r1, [pc, #88]	; 4000a94c <_txe_timer_change+0x7c>
4000a8f0:	e1500001 	cmp	r0, r1
4000a8f4:	0a000001 	beq	4000a900 <_txe_timer_change+0x30>
4000a8f8:	e3a00015 	mov	r0, #21
4000a8fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a900:	e3550000 	cmp	r5, #0
4000a904:	1a000001 	bne	4000a910 <_txe_timer_change+0x40>
4000a908:	e3a00016 	mov	r0, #22
4000a90c:	eafffffa 	b	4000a8fc <_txe_timer_change+0x2c>
4000a910:	e59f0038 	ldr	r0, [pc, #56]	; 4000a950 <_txe_timer_change+0x80>
4000a914:	e5900000 	ldr	r0, [r0]
4000a918:	e3c0000f 	bic	r0, r0, #15
4000a91c:	e59f1030 	ldr	r1, [pc, #48]	; 4000a954 <_txe_timer_change+0x84>
4000a920:	e1500001 	cmp	r0, r1
4000a924:	1a000001 	bne	4000a930 <_txe_timer_change+0x60>
4000a928:	e3a00013 	mov	r0, #19
4000a92c:	eafffff2 	b	4000a8fc <_txe_timer_change+0x2c>
4000a930:	e1a02006 	mov	r2, r6
4000a934:	e1a01005 	mov	r1, r5
4000a938:	e1a00004 	mov	r0, r4
4000a93c:	eb0013d4 	bl	4000f894 <_tx_timer_change>
4000a940:	e1a07000 	mov	r7, r0
4000a944:	e1a00007 	mov	r0, r7
4000a948:	eaffffeb 	b	4000a8fc <_txe_timer_change+0x2c>
4000a94c:	4154494d 	.word	0x4154494d
4000a950:	40030e30 	.word	0x40030e30
4000a954:	f0f0f0f0 	.word	0xf0f0f0f0

4000a958 <_txe_timer_create>:
4000a958:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a95c:	e24dd01c 	sub	sp, sp, #28
4000a960:	e1a04000 	mov	r4, r0
4000a964:	e1a05001 	mov	r5, r1
4000a968:	e1a06002 	mov	r6, r2
4000a96c:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000a970:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000a974:	e3540000 	cmp	r4, #0
4000a978:	0a000001 	beq	4000a984 <_txe_timer_create+0x2c>
4000a97c:	e358002c 	cmp	r8, #44	; 0x2c
4000a980:	0a000002 	beq	4000a990 <_txe_timer_create+0x38>
4000a984:	e3a00015 	mov	r0, #21
4000a988:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000a98c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a990:	e10f9000 	mrs	r9, CPSR
4000a994:	e389a080 	orr	sl, r9, #128	; 0x80
4000a998:	e121f00a 	msr	CPSR_c, sl
4000a99c:	e59f0160 	ldr	r0, [pc, #352]	; 4000ab04 <_txe_timer_create+0x1ac>
4000a9a0:	e5900000 	ldr	r0, [r0]
4000a9a4:	e2800001 	add	r0, r0, #1
4000a9a8:	e59f1154 	ldr	r1, [pc, #340]	; 4000ab04 <_txe_timer_create+0x1ac>
4000a9ac:	e5810000 	str	r0, [r1]
4000a9b0:	e121f009 	msr	CPSR_c, r9
4000a9b4:	e59f014c 	ldr	r0, [pc, #332]	; 4000ab08 <_txe_timer_create+0x1b0>
4000a9b8:	e5900000 	ldr	r0, [r0]
4000a9bc:	e58d0014 	str	r0, [sp, #20]
4000a9c0:	e3a00000 	mov	r0, #0
4000a9c4:	e58d0018 	str	r0, [sp, #24]
4000a9c8:	ea000009 	b	4000a9f4 <_txe_timer_create+0x9c>
4000a9cc:	e59d0014 	ldr	r0, [sp, #20]
4000a9d0:	e1540000 	cmp	r4, r0
4000a9d4:	1a000000 	bne	4000a9dc <_txe_timer_create+0x84>
4000a9d8:	ea00000a 	b	4000aa08 <_txe_timer_create+0xb0>
4000a9dc:	e59d0014 	ldr	r0, [sp, #20]
4000a9e0:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000a9e4:	e58d0014 	str	r0, [sp, #20]
4000a9e8:	e59d0018 	ldr	r0, [sp, #24]
4000a9ec:	e2800001 	add	r0, r0, #1
4000a9f0:	e58d0018 	str	r0, [sp, #24]
4000a9f4:	e59f1110 	ldr	r1, [pc, #272]	; 4000ab0c <_txe_timer_create+0x1b4>
4000a9f8:	e59d0018 	ldr	r0, [sp, #24]
4000a9fc:	e5911000 	ldr	r1, [r1]
4000aa00:	e1500001 	cmp	r0, r1
4000aa04:	3afffff0 	bcc	4000a9cc <_txe_timer_create+0x74>
4000aa08:	e1a00000 	nop			; (mov r0, r0)
4000aa0c:	e10f9000 	mrs	r9, CPSR
4000aa10:	e389a080 	orr	sl, r9, #128	; 0x80
4000aa14:	e121f00a 	msr	CPSR_c, sl
4000aa18:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ab04 <_txe_timer_create+0x1ac>
4000aa1c:	e5900000 	ldr	r0, [r0]
4000aa20:	e2400001 	sub	r0, r0, #1
4000aa24:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ab04 <_txe_timer_create+0x1ac>
4000aa28:	e5810000 	str	r0, [r1]
4000aa2c:	e121f009 	msr	CPSR_c, r9
4000aa30:	eb0011b4 	bl	4000f108 <_tx_thread_system_preempt_check>
4000aa34:	e59d0014 	ldr	r0, [sp, #20]
4000aa38:	e1540000 	cmp	r4, r0
4000aa3c:	1a000001 	bne	4000aa48 <_txe_timer_create+0xf0>
4000aa40:	e3a00015 	mov	r0, #21
4000aa44:	eaffffcf 	b	4000a988 <_txe_timer_create+0x30>
4000aa48:	e3570000 	cmp	r7, #0
4000aa4c:	1a000001 	bne	4000aa58 <_txe_timer_create+0x100>
4000aa50:	e3a00016 	mov	r0, #22
4000aa54:	eaffffcb 	b	4000a988 <_txe_timer_create+0x30>
4000aa58:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aa5c:	e3500001 	cmp	r0, #1
4000aa60:	0a000004 	beq	4000aa78 <_txe_timer_create+0x120>
4000aa64:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aa68:	e3500000 	cmp	r0, #0
4000aa6c:	0a000001 	beq	4000aa78 <_txe_timer_create+0x120>
4000aa70:	e3a00017 	mov	r0, #23
4000aa74:	eaffffc3 	b	4000a988 <_txe_timer_create+0x30>
4000aa78:	e59f0090 	ldr	r0, [pc, #144]	; 4000ab10 <_txe_timer_create+0x1b8>
4000aa7c:	e5900000 	ldr	r0, [r0]
4000aa80:	e58d0010 	str	r0, [sp, #16]
4000aa84:	e59d0010 	ldr	r0, [sp, #16]
4000aa88:	e3500000 	cmp	r0, #0
4000aa8c:	0a000009 	beq	4000aab8 <_txe_timer_create+0x160>
4000aa90:	e59f107c 	ldr	r1, [pc, #124]	; 4000ab14 <_txe_timer_create+0x1bc>
4000aa94:	e59d0010 	ldr	r0, [sp, #16]
4000aa98:	e1500001 	cmp	r0, r1
4000aa9c:	0a000003 	beq	4000aab0 <_txe_timer_create+0x158>
4000aaa0:	e59f0070 	ldr	r0, [pc, #112]	; 4000ab18 <_txe_timer_create+0x1c0>
4000aaa4:	e5900000 	ldr	r0, [r0]
4000aaa8:	e3500000 	cmp	r0, #0
4000aaac:	0a000008 	beq	4000aad4 <_txe_timer_create+0x17c>
4000aab0:	e3a00013 	mov	r0, #19
4000aab4:	eaffffb3 	b	4000a988 <_txe_timer_create+0x30>
4000aab8:	e59f0058 	ldr	r0, [pc, #88]	; 4000ab18 <_txe_timer_create+0x1c0>
4000aabc:	e5900000 	ldr	r0, [r0]
4000aac0:	e59f1054 	ldr	r1, [pc, #84]	; 4000ab1c <_txe_timer_create+0x1c4>
4000aac4:	e1500001 	cmp	r0, r1
4000aac8:	2a000001 	bcs	4000aad4 <_txe_timer_create+0x17c>
4000aacc:	e3a00013 	mov	r0, #19
4000aad0:	eaffffac 	b	4000a988 <_txe_timer_create+0x30>
4000aad4:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000aad8:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000aadc:	e98d000c 	stmib	sp, {r2, r3}
4000aae0:	e58d7000 	str	r7, [sp]
4000aae4:	e1a02006 	mov	r2, r6
4000aae8:	e1a01005 	mov	r1, r5
4000aaec:	e1a00004 	mov	r0, r4
4000aaf0:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000aaf4:	eb0013b1 	bl	4000f9c0 <_tx_timer_create>
4000aaf8:	e1a0b000 	mov	fp, r0
4000aafc:	e1a0000b 	mov	r0, fp
4000ab00:	eaffffa0 	b	4000a988 <_txe_timer_create+0x30>
4000ab04:	40030e54 	.word	0x40030e54
4000ab08:	40030e7c 	.word	0x40030e7c
4000ab0c:	40030e80 	.word	0x40030e80
4000ab10:	40030e38 	.word	0x40030e38
4000ab14:	40032974 	.word	0x40032974
4000ab18:	40030e30 	.word	0x40030e30
4000ab1c:	f0f0f0f0 	.word	0xf0f0f0f0

4000ab20 <_txe_timer_deactivate>:
4000ab20:	e92d4070 	push	{r4, r5, r6, lr}
4000ab24:	e1a04000 	mov	r4, r0
4000ab28:	e3540000 	cmp	r4, #0
4000ab2c:	0a000003 	beq	4000ab40 <_txe_timer_deactivate+0x20>
4000ab30:	e5940000 	ldr	r0, [r4]
4000ab34:	e59f1020 	ldr	r1, [pc, #32]	; 4000ab5c <_txe_timer_deactivate+0x3c>
4000ab38:	e1500001 	cmp	r0, r1
4000ab3c:	0a000001 	beq	4000ab48 <_txe_timer_deactivate+0x28>
4000ab40:	e3a00015 	mov	r0, #21
4000ab44:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ab48:	e1a00004 	mov	r0, r4
4000ab4c:	eb00141a 	bl	4000fbbc <_tx_timer_deactivate>
4000ab50:	e1a05000 	mov	r5, r0
4000ab54:	e1a00005 	mov	r0, r5
4000ab58:	eafffff9 	b	4000ab44 <_txe_timer_deactivate+0x24>
4000ab5c:	4154494d 	.word	0x4154494d

4000ab60 <_tx_thread_system_return>:
4000ab60:	e3a00000 	mov	r0, #0
4000ab64:	e10f1000 	mrs	r1, CPSR
4000ab68:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ab6c:	e3812080 	orr	r2, r1, #128	; 0x80
4000ab70:	e12ff002 	msr	CPSR_fsxc, r2
4000ab74:	e59f302c 	ldr	r3, [pc, #44]	; 4000aba8 <_tx_thread_system_return+0x48>
4000ab78:	e5930000 	ldr	r0, [r3]
4000ab7c:	e59f2028 	ldr	r2, [pc, #40]	; 4000abac <_tx_thread_system_return+0x4c>
4000ab80:	e5921000 	ldr	r1, [r2]
4000ab84:	e580d008 	str	sp, [r0, #8]
4000ab88:	e3a04000 	mov	r4, #0
4000ab8c:	e3510000 	cmp	r1, #0
4000ab90:	0a000002 	beq	4000aba0 <_tx_thread_system_return+0x40>
4000ab94:	e590101c 	ldr	r1, [r0, #28]
4000ab98:	e5824000 	str	r4, [r2]
4000ab9c:	e5801018 	str	r1, [r0, #24]
4000aba0:	e5834000 	str	r4, [r3]
4000aba4:	ea000001 	b	4000abb0 <_tx_thread_schedule>
4000aba8:	40030e38 	.word	0x40030e38
4000abac:	40030e64 	.word	0x40030e64

4000abb0 <_tx_thread_schedule>:
4000abb0:	e10f2000 	mrs	r2, CPSR
4000abb4:	e3c20080 	bic	r0, r2, #128	; 0x80
4000abb8:	e12ff000 	msr	CPSR_fsxc, r0
4000abbc:	e59f104c 	ldr	r1, [pc, #76]	; 4000ac10 <_tx_thread_schedule+0x60>
4000abc0:	e5910000 	ldr	r0, [r1]
4000abc4:	e3500000 	cmp	r0, #0
4000abc8:	0afffffc 	beq	4000abc0 <_tx_thread_schedule+0x10>
4000abcc:	e12ff002 	msr	CPSR_fsxc, r2
4000abd0:	e59f103c 	ldr	r1, [pc, #60]	; 4000ac14 <_tx_thread_schedule+0x64>
4000abd4:	e5810000 	str	r0, [r1]
4000abd8:	e5902004 	ldr	r2, [r0, #4]
4000abdc:	e5903018 	ldr	r3, [r0, #24]
4000abe0:	e2822001 	add	r2, r2, #1
4000abe4:	e5802004 	str	r2, [r0, #4]
4000abe8:	e59f2028 	ldr	r2, [pc, #40]	; 4000ac18 <_tx_thread_schedule+0x68>
4000abec:	e590d008 	ldr	sp, [r0, #8]
4000abf0:	e5823000 	str	r3, [r2]
4000abf4:	e8bd0003 	pop	{r0, r1}
4000abf8:	e3500000 	cmp	r0, #0
4000abfc:	116ff001 	msrne	SPSR_fsxc, r1
4000ac00:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000ac04:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ac08:	e12ff001 	msr	CPSR_fsxc, r1
4000ac0c:	e12fff1e 	bx	lr
4000ac10:	40030e3c 	.word	0x40030e3c
4000ac14:	40030e38 	.word	0x40030e38
4000ac18:	40030e64 	.word	0x40030e64

4000ac1c <_tx_thread_vectored_context_save>:
4000ac1c:	e59f3044 	ldr	r3, [pc, #68]	; 4000ac68 <_tx_thread_vectored_context_save+0x4c>
4000ac20:	e5932000 	ldr	r2, [r3]
4000ac24:	e3520000 	cmp	r2, #0
4000ac28:	0a000003 	beq	4000ac3c <_tx_thread_vectored_context_save+0x20>
4000ac2c:	e2822001 	add	r2, r2, #1
4000ac30:	e5832000 	str	r2, [r3]
4000ac34:	e3a0a000 	mov	sl, #0
4000ac38:	e12fff1e 	bx	lr
4000ac3c:	e2822001 	add	r2, r2, #1
4000ac40:	e5832000 	str	r2, [r3]
4000ac44:	e59f1020 	ldr	r1, [pc, #32]	; 4000ac6c <_tx_thread_vectored_context_save+0x50>
4000ac48:	e5910000 	ldr	r0, [r1]
4000ac4c:	e3500000 	cmp	r0, #0
4000ac50:	0a000001 	beq	4000ac5c <_tx_thread_vectored_context_save+0x40>
4000ac54:	e3a0a000 	mov	sl, #0
4000ac58:	e12fff1e 	bx	lr
4000ac5c:	e3a0a000 	mov	sl, #0
4000ac60:	e28dd020 	add	sp, sp, #32
4000ac64:	e12fff1e 	bx	lr
4000ac68:	40030e30 	.word	0x40030e30
4000ac6c:	40030e38 	.word	0x40030e38

4000ac70 <_tx_timer_interrupt>:
4000ac70:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ad44 <_tx_timer_interrupt+0xd4>
4000ac74:	e5910000 	ldr	r0, [r1]
4000ac78:	e2800001 	add	r0, r0, #1
4000ac7c:	e5810000 	str	r0, [r1]
4000ac80:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ad48 <_tx_timer_interrupt+0xd8>
4000ac84:	e5932000 	ldr	r2, [r3]
4000ac88:	e3520000 	cmp	r2, #0
4000ac8c:	0a000006 	beq	4000acac <_tx_timer_interrupt+0x3c>
4000ac90:	e2422001 	sub	r2, r2, #1
4000ac94:	e5832000 	str	r2, [r3]
4000ac98:	e3520000 	cmp	r2, #0
4000ac9c:	1a000002 	bne	4000acac <_tx_timer_interrupt+0x3c>
4000aca0:	e59f30a4 	ldr	r3, [pc, #164]	; 4000ad4c <_tx_timer_interrupt+0xdc>
4000aca4:	e3a00001 	mov	r0, #1
4000aca8:	e5830000 	str	r0, [r3]
4000acac:	e59f109c 	ldr	r1, [pc, #156]	; 4000ad50 <_tx_timer_interrupt+0xe0>
4000acb0:	e5910000 	ldr	r0, [r1]
4000acb4:	e5902000 	ldr	r2, [r0]
4000acb8:	e3520000 	cmp	r2, #0
4000acbc:	0a000003 	beq	4000acd0 <_tx_timer_interrupt+0x60>
4000acc0:	e59f308c 	ldr	r3, [pc, #140]	; 4000ad54 <_tx_timer_interrupt+0xe4>
4000acc4:	e3a02001 	mov	r2, #1
4000acc8:	e5832000 	str	r2, [r3]
4000accc:	ea000007 	b	4000acf0 <_tx_timer_interrupt+0x80>
4000acd0:	e2800004 	add	r0, r0, #4
4000acd4:	e59f307c 	ldr	r3, [pc, #124]	; 4000ad58 <_tx_timer_interrupt+0xe8>
4000acd8:	e5932000 	ldr	r2, [r3]
4000acdc:	e1500002 	cmp	r0, r2
4000ace0:	1a000001 	bne	4000acec <_tx_timer_interrupt+0x7c>
4000ace4:	e59f3070 	ldr	r3, [pc, #112]	; 4000ad5c <_tx_timer_interrupt+0xec>
4000ace8:	e5930000 	ldr	r0, [r3]
4000acec:	e5810000 	str	r0, [r1]
4000acf0:	e59f3054 	ldr	r3, [pc, #84]	; 4000ad4c <_tx_timer_interrupt+0xdc>
4000acf4:	e5932000 	ldr	r2, [r3]
4000acf8:	e3520000 	cmp	r2, #0
4000acfc:	1a000003 	bne	4000ad10 <_tx_timer_interrupt+0xa0>
4000ad00:	e59f104c 	ldr	r1, [pc, #76]	; 4000ad54 <_tx_timer_interrupt+0xe4>
4000ad04:	e5910000 	ldr	r0, [r1]
4000ad08:	e3500000 	cmp	r0, #0
4000ad0c:	0a00000b 	beq	4000ad40 <_tx_timer_interrupt+0xd0>
4000ad10:	e92d4001 	push	{r0, lr}
4000ad14:	e59f1038 	ldr	r1, [pc, #56]	; 4000ad54 <_tx_timer_interrupt+0xe4>
4000ad18:	e5910000 	ldr	r0, [r1]
4000ad1c:	e3500000 	cmp	r0, #0
4000ad20:	0a000000 	beq	4000ad28 <_tx_timer_interrupt+0xb8>
4000ad24:	eb001441 	bl	4000fe30 <_tx_timer_expiration_process>
4000ad28:	e59f301c 	ldr	r3, [pc, #28]	; 4000ad4c <_tx_timer_interrupt+0xdc>
4000ad2c:	e5932000 	ldr	r2, [r3]
4000ad30:	e3520000 	cmp	r2, #0
4000ad34:	0a000000 	beq	4000ad3c <_tx_timer_interrupt+0xcc>
4000ad38:	eb001210 	bl	4000f580 <_tx_thread_time_slice>
4000ad3c:	e8bd4001 	pop	{r0, lr}
4000ad40:	e12fff1e 	bx	lr
4000ad44:	40030e60 	.word	0x40030e60
4000ad48:	40030e64 	.word	0x40030e64
4000ad4c:	40030e68 	.word	0x40030e68
4000ad50:	40030e74 	.word	0x40030e74
4000ad54:	40030e78 	.word	0x40030e78
4000ad58:	40030e70 	.word	0x40030e70
4000ad5c:	40030e6c 	.word	0x40030e6c

4000ad60 <_tx_thread_context_restore>:
4000ad60:	e10f3000 	mrs	r3, CPSR
4000ad64:	e3830080 	orr	r0, r3, #128	; 0x80
4000ad68:	e12ff000 	msr	CPSR_fsxc, r0
4000ad6c:	e59f30f0 	ldr	r3, [pc, #240]	; 4000ae64 <_tx_thread_context_restore+0x104>
4000ad70:	e5932000 	ldr	r2, [r3]
4000ad74:	e2422001 	sub	r2, r2, #1
4000ad78:	e5832000 	str	r2, [r3]
4000ad7c:	e3520000 	cmp	r2, #0
4000ad80:	0a000003 	beq	4000ad94 <_tx_thread_context_restore+0x34>
4000ad84:	e8bd5401 	pop	{r0, sl, ip, lr}
4000ad88:	e16ff000 	msr	SPSR_fsxc, r0
4000ad8c:	e8bd000f 	pop	{r0, r1, r2, r3}
4000ad90:	e1b0f00e 	movs	pc, lr
4000ad94:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ae68 <_tx_thread_context_restore+0x108>
4000ad98:	e5910000 	ldr	r0, [r1]
4000ad9c:	e3500000 	cmp	r0, #0
4000ada0:	0a00002a 	beq	4000ae50 <_tx_thread_context_restore+0xf0>
4000ada4:	e59f30c0 	ldr	r3, [pc, #192]	; 4000ae6c <_tx_thread_context_restore+0x10c>
4000ada8:	e5932000 	ldr	r2, [r3]
4000adac:	e3520000 	cmp	r2, #0
4000adb0:	1a000003 	bne	4000adc4 <_tx_thread_context_restore+0x64>
4000adb4:	e59f30b4 	ldr	r3, [pc, #180]	; 4000ae70 <_tx_thread_context_restore+0x110>
4000adb8:	e5932000 	ldr	r2, [r3]
4000adbc:	e1500002 	cmp	r0, r2
4000adc0:	1a000003 	bne	4000add4 <_tx_thread_context_restore+0x74>
4000adc4:	e8bd5401 	pop	{r0, sl, ip, lr}
4000adc8:	e16ff000 	msr	SPSR_fsxc, r0
4000adcc:	e8bd000f 	pop	{r0, r1, r2, r3}
4000add0:	e1b0f00e 	movs	pc, lr
4000add4:	e8bd5408 	pop	{r3, sl, ip, lr}
4000add8:	e1a0100e 	mov	r1, lr
4000addc:	e3a020d3 	mov	r2, #211	; 0xd3
4000ade0:	e121f002 	msr	CPSR_c, r2
4000ade4:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000ade8:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000adec:	e1a04003 	mov	r4, r3
4000adf0:	e3a020d2 	mov	r2, #210	; 0xd2
4000adf4:	e121f002 	msr	CPSR_c, r2
4000adf8:	e8bd000f 	pop	{r0, r1, r2, r3}
4000adfc:	e3a050d3 	mov	r5, #211	; 0xd3
4000ae00:	e121f005 	msr	CPSR_c, r5
4000ae04:	e92d000f 	push	{r0, r1, r2, r3}
4000ae08:	e3a03001 	mov	r3, #1
4000ae0c:	e92d0018 	push	{r3, r4}
4000ae10:	e59f1050 	ldr	r1, [pc, #80]	; 4000ae68 <_tx_thread_context_restore+0x108>
4000ae14:	e5910000 	ldr	r0, [r1]
4000ae18:	e580d008 	str	sp, [r0, #8]
4000ae1c:	e3c44020 	bic	r4, r4, #32
4000ae20:	e3843080 	orr	r3, r4, #128	; 0x80
4000ae24:	e12ff003 	msr	CPSR_fsxc, r3
4000ae28:	e59f3044 	ldr	r3, [pc, #68]	; 4000ae74 <_tx_thread_context_restore+0x114>
4000ae2c:	e5932000 	ldr	r2, [r3]
4000ae30:	e3520000 	cmp	r2, #0
4000ae34:	0a000002 	beq	4000ae44 <_tx_thread_context_restore+0xe4>
4000ae38:	e5802018 	str	r2, [r0, #24]
4000ae3c:	e3a02000 	mov	r2, #0
4000ae40:	e5832000 	str	r2, [r3]
4000ae44:	e3a00000 	mov	r0, #0
4000ae48:	e5810000 	str	r0, [r1]
4000ae4c:	eaffff57 	b	4000abb0 <_tx_thread_schedule>
4000ae50:	e10f3000 	mrs	r3, CPSR
4000ae54:	e3c3301f 	bic	r3, r3, #31
4000ae58:	e3833013 	orr	r3, r3, #19
4000ae5c:	e12ff003 	msr	CPSR_fsxc, r3
4000ae60:	eaffff52 	b	4000abb0 <_tx_thread_schedule>
4000ae64:	40030e30 	.word	0x40030e30
4000ae68:	40030e38 	.word	0x40030e38
4000ae6c:	40030e54 	.word	0x40030e54
4000ae70:	40030e3c 	.word	0x40030e3c
4000ae74:	40030e64 	.word	0x40030e64

4000ae78 <_tx_thread_irq_nesting_end>:
4000ae78:	e1a0300e 	mov	r3, lr
4000ae7c:	e10f0000 	mrs	r0, CPSR
4000ae80:	e3800080 	orr	r0, r0, #128	; 0x80
4000ae84:	e12ff000 	msr	CPSR_fsxc, r0
4000ae88:	e8bd4002 	pop	{r1, lr}
4000ae8c:	e3c0001f 	bic	r0, r0, #31
4000ae90:	e3800012 	orr	r0, r0, #18
4000ae94:	e12ff000 	msr	CPSR_fsxc, r0
4000ae98:	e12fff13 	bx	r3

4000ae9c <_tx_thread_irq_nesting_start>:
4000ae9c:	e1a0300e 	mov	r3, lr
4000aea0:	e10f0000 	mrs	r0, CPSR
4000aea4:	e3c0001f 	bic	r0, r0, #31
4000aea8:	e380001f 	orr	r0, r0, #31
4000aeac:	e12ff000 	msr	CPSR_fsxc, r0
4000aeb0:	e92d4002 	push	{r1, lr}
4000aeb4:	e3c00080 	bic	r0, r0, #128	; 0x80
4000aeb8:	e12ff000 	msr	CPSR_fsxc, r0
4000aebc:	e12fff13 	bx	r3

4000aec0 <_tx_initialize_low_level>:
4000aec0:	e1a0100d 	mov	r1, sp
4000aec4:	e59f3024 	ldr	r3, [pc, #36]	; 4000aef0 <_tx_initialize_low_level+0x30>
4000aec8:	e5831000 	str	r1, [r3]
4000aecc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000aed0:	e3a00000 	mov	r0, #0
4000aed4:	eb005b84 	bl	40021cec <CyU3POsTimerInit>
4000aed8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000aedc:	e12fff1e 	bx	lr
4000aee0:	e59f200c 	ldr	r2, [pc, #12]	; 4000aef4 <_tx_initialize_low_level+0x34>
4000aee4:	e5920000 	ldr	r0, [r2]
4000aee8:	e59f2008 	ldr	r2, [pc, #8]	; 4000aef8 <_tx_initialize_low_level+0x38>
4000aeec:	e5920000 	ldr	r0, [r2]
4000aef0:	40030e34 	.word	0x40030e34
4000aef4:	40030e58 	.word	0x40030e58
4000aef8:	40030dcc 	.word	0x40030dcc

4000aefc <_tx_byte_allocate>:
4000aefc:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000af00:	e1a04000 	mov	r4, r0
4000af04:	e1a05001 	mov	r5, r1
4000af08:	e1a06002 	mov	r6, r2
4000af0c:	e1a07003 	mov	r7, r3
4000af10:	e3a00000 	mov	r0, #0
4000af14:	e58d0000 	str	r0, [sp]
4000af18:	e59f027c 	ldr	r0, [pc, #636]	; 4000b19c <_tx_byte_allocate+0x2a0>
4000af1c:	e590a000 	ldr	sl, [r0]
4000af20:	e10f8000 	mrs	r8, CPSR
4000af24:	e3889080 	orr	r9, r8, #128	; 0x80
4000af28:	e121f009 	msr	CPSR_c, r9
4000af2c:	e2860003 	add	r0, r6, #3
4000af30:	e1a00120 	lsr	r0, r0, #2
4000af34:	e1a06100 	lsl	r6, r0, #2
4000af38:	e59f0260 	ldr	r0, [pc, #608]	; 4000b1a0 <_tx_byte_allocate+0x2a4>
4000af3c:	e5900000 	ldr	r0, [r0]
4000af40:	e58d0004 	str	r0, [sp, #4]
4000af44:	e59f1254 	ldr	r1, [pc, #596]	; 4000b1a0 <_tx_byte_allocate+0x2a4>
4000af48:	e5910000 	ldr	r0, [r1]
4000af4c:	e3500000 	cmp	r0, #0
4000af50:	0a000031 	beq	4000b01c <_tx_byte_allocate+0x120>
4000af54:	e59f1248 	ldr	r1, [pc, #584]	; 4000b1a4 <_tx_byte_allocate+0x2a8>
4000af58:	e5911000 	ldr	r1, [r1]
4000af5c:	e2811001 	add	r1, r1, #1
4000af60:	e59f223c 	ldr	r2, [pc, #572]	; 4000b1a4 <_tx_byte_allocate+0x2a8>
4000af64:	e5821000 	str	r1, [r2]
4000af68:	e580100c 	str	r1, [r0, #12]
4000af6c:	e59f1234 	ldr	r1, [pc, #564]	; 4000b1a8 <_tx_byte_allocate+0x2ac>
4000af70:	e5911000 	ldr	r1, [r1]
4000af74:	e3510000 	cmp	r1, #0
4000af78:	1a000006 	bne	4000af98 <_tx_byte_allocate+0x9c>
4000af7c:	e59f1218 	ldr	r1, [pc, #536]	; 4000b19c <_tx_byte_allocate+0x2a0>
4000af80:	e5911000 	ldr	r1, [r1]
4000af84:	e5801000 	str	r1, [r0]
4000af88:	e5901000 	ldr	r1, [r0]
4000af8c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000af90:	e5801004 	str	r1, [r0, #4]
4000af94:	ea00000d 	b	4000afd0 <_tx_byte_allocate+0xd4>
4000af98:	e59f1208 	ldr	r1, [pc, #520]	; 4000b1a8 <_tx_byte_allocate+0x2ac>
4000af9c:	e5911000 	ldr	r1, [r1]
4000afa0:	e59f2204 	ldr	r2, [pc, #516]	; 4000b1ac <_tx_byte_allocate+0x2b0>
4000afa4:	e1510002 	cmp	r1, r2
4000afa8:	2a000004 	bcs	4000afc0 <_tx_byte_allocate+0xc4>
4000afac:	e3e01000 	mvn	r1, #0
4000afb0:	e5801000 	str	r1, [r0]
4000afb4:	e3a01000 	mov	r1, #0
4000afb8:	e5801004 	str	r1, [r0, #4]
4000afbc:	ea000003 	b	4000afd0 <_tx_byte_allocate+0xd4>
4000afc0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b1ac <_tx_byte_allocate+0x2b0>
4000afc4:	e5801000 	str	r1, [r0]
4000afc8:	e3a01000 	mov	r1, #0
4000afcc:	e5801004 	str	r1, [r0, #4]
4000afd0:	e3a01014 	mov	r1, #20
4000afd4:	e5801008 	str	r1, [r0, #8]
4000afd8:	e5804010 	str	r4, [r0, #16]
4000afdc:	e3a01000 	mov	r1, #0
4000afe0:	e5801014 	str	r1, [r0, #20]
4000afe4:	e5806018 	str	r6, [r0, #24]
4000afe8:	e580701c 	str	r7, [r0, #28]
4000afec:	e2800020 	add	r0, r0, #32
4000aff0:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b1b0 <_tx_byte_allocate+0x2b4>
4000aff4:	e5911000 	ldr	r1, [r1]
4000aff8:	e1500001 	cmp	r0, r1
4000affc:	3a000001 	bcc	4000b008 <_tx_byte_allocate+0x10c>
4000b000:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b1b4 <_tx_byte_allocate+0x2b8>
4000b004:	e5910000 	ldr	r0, [r1]
4000b008:	e59f1190 	ldr	r1, [pc, #400]	; 4000b1a0 <_tx_byte_allocate+0x2a4>
4000b00c:	e5810000 	str	r0, [r1]
4000b010:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b1b8 <_tx_byte_allocate+0x2bc>
4000b014:	e5911000 	ldr	r1, [r1]
4000b018:	e5810020 	str	r0, [r1, #32]
4000b01c:	e59d0004 	ldr	r0, [sp, #4]
4000b020:	e3500000 	cmp	r0, #0
4000b024:	0a000002 	beq	4000b034 <_tx_byte_allocate+0x138>
4000b028:	e59d0004 	ldr	r0, [sp, #4]
4000b02c:	e590000c 	ldr	r0, [r0, #12]
4000b030:	e58d0000 	str	r0, [sp]
4000b034:	e1a00000 	nop			; (mov r0, r0)
4000b038:	e584a020 	str	sl, [r4, #32]
4000b03c:	e121f008 	msr	CPSR_c, r8
4000b040:	e1a01006 	mov	r1, r6
4000b044:	e1a00004 	mov	r0, r4
4000b048:	eb0001ba 	bl	4000b738 <_tx_byte_pool_search>
4000b04c:	e1a0b000 	mov	fp, r0
4000b050:	e10f8000 	mrs	r8, CPSR
4000b054:	e3889080 	orr	r9, r8, #128	; 0x80
4000b058:	e121f009 	msr	CPSR_c, r9
4000b05c:	e35b0000 	cmp	fp, #0
4000b060:	1a000002 	bne	4000b070 <_tx_byte_allocate+0x174>
4000b064:	e5940020 	ldr	r0, [r4, #32]
4000b068:	e150000a 	cmp	r0, sl
4000b06c:	1afffff1 	bne	4000b038 <_tx_byte_allocate+0x13c>
4000b070:	e35b0000 	cmp	fp, #0
4000b074:	0a00000e 	beq	4000b0b4 <_tx_byte_allocate+0x1b8>
4000b078:	e585b000 	str	fp, [r5]
4000b07c:	e59d0004 	ldr	r0, [sp, #4]
4000b080:	e3500000 	cmp	r0, #0
4000b084:	0a000007 	beq	4000b0a8 <_tx_byte_allocate+0x1ac>
4000b088:	e59d0004 	ldr	r0, [sp, #4]
4000b08c:	e590100c 	ldr	r1, [r0, #12]
4000b090:	e59d0000 	ldr	r0, [sp]
4000b094:	e1510000 	cmp	r1, r0
4000b098:	1a000002 	bne	4000b0a8 <_tx_byte_allocate+0x1ac>
4000b09c:	e5950000 	ldr	r0, [r5]
4000b0a0:	e59d1004 	ldr	r1, [sp, #4]
4000b0a4:	e5810014 	str	r0, [r1, #20]
4000b0a8:	e3a00000 	mov	r0, #0
4000b0ac:	e58d0008 	str	r0, [sp, #8]
4000b0b0:	ea000036 	b	4000b190 <_tx_byte_allocate+0x294>
4000b0b4:	e3570000 	cmp	r7, #0
4000b0b8:	0a000032 	beq	4000b188 <_tx_byte_allocate+0x28c>
4000b0bc:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b1bc <_tx_byte_allocate+0x2c0>
4000b0c0:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b0c4:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b0c8:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b0cc:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b0d0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0d4:	e3500000 	cmp	r0, #0
4000b0d8:	0a00000a 	beq	4000b108 <_tx_byte_allocate+0x20c>
4000b0dc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0e0:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b0e4:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0e8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b0ec:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b0f0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b0f4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b0f8:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b0fc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b100:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b104:	ea000002 	b	4000b114 <_tx_byte_allocate+0x218>
4000b108:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b10c:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b110:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b114:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b118:	e2800001 	add	r0, r0, #1
4000b11c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b120:	e3a00009 	mov	r0, #9
4000b124:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b128:	e3a00001 	mov	r0, #1
4000b12c:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b130:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b134:	e59f0084 	ldr	r0, [pc, #132]	; 4000b1c0 <_tx_byte_allocate+0x2c4>
4000b138:	e5900000 	ldr	r0, [r0]
4000b13c:	e2800001 	add	r0, r0, #1
4000b140:	e59f1078 	ldr	r1, [pc, #120]	; 4000b1c0 <_tx_byte_allocate+0x2c4>
4000b144:	e5810000 	str	r0, [r1]
4000b148:	e121f008 	msr	CPSR_c, r8
4000b14c:	e1a0000a 	mov	r0, sl
4000b150:	ebfff671 	bl	40008b1c <_tx_thread_system_suspend>
4000b154:	e59d0004 	ldr	r0, [sp, #4]
4000b158:	e3500000 	cmp	r0, #0
4000b15c:	0a000007 	beq	4000b180 <_tx_byte_allocate+0x284>
4000b160:	e59d0004 	ldr	r0, [sp, #4]
4000b164:	e590100c 	ldr	r1, [r0, #12]
4000b168:	e59d0000 	ldr	r0, [sp]
4000b16c:	e1510000 	cmp	r1, r0
4000b170:	1a000002 	bne	4000b180 <_tx_byte_allocate+0x284>
4000b174:	e5950000 	ldr	r0, [r5]
4000b178:	e59d1004 	ldr	r1, [sp, #4]
4000b17c:	e5810014 	str	r0, [r1, #20]
4000b180:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b184:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b188:	e3a00010 	mov	r0, #16
4000b18c:	e58d0008 	str	r0, [sp, #8]
4000b190:	e121f008 	msr	CPSR_c, r8
4000b194:	e59d0008 	ldr	r0, [sp, #8]
4000b198:	eafffff9 	b	4000b184 <_tx_byte_allocate+0x288>
4000b19c:	40030e38 	.word	0x40030e38
4000b1a0:	40030ea4 	.word	0x40030ea4
4000b1a4:	40030ea8 	.word	0x40030ea8
4000b1a8:	40030e30 	.word	0x40030e30
4000b1ac:	f0f0f0f0 	.word	0xf0f0f0f0
4000b1b0:	40030ea0 	.word	0x40030ea0
4000b1b4:	40030e9c 	.word	0x40030e9c
4000b1b8:	40030e90 	.word	0x40030e90
4000b1bc:	4000b1c4 	.word	0x4000b1c4
4000b1c0:	40030e54 	.word	0x40030e54

4000b1c4 <_tx_byte_pool_cleanup>:
4000b1c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b1c8:	e1a04000 	mov	r4, r0
4000b1cc:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b1d0:	e10f5000 	mrs	r5, CPSR
4000b1d4:	e3856080 	orr	r6, r5, #128	; 0x80
4000b1d8:	e121f006 	msr	CPSR_c, r6
4000b1dc:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b1e0:	e3500000 	cmp	r0, #0
4000b1e4:	0a000026 	beq	4000b284 <_tx_byte_pool_cleanup+0xc0>
4000b1e8:	e3570000 	cmp	r7, #0
4000b1ec:	0a000024 	beq	4000b284 <_tx_byte_pool_cleanup+0xc0>
4000b1f0:	e5970000 	ldr	r0, [r7]
4000b1f4:	e59f1090 	ldr	r1, [pc, #144]	; 4000b28c <_tx_byte_pool_cleanup+0xc8>
4000b1f8:	e1500001 	cmp	r0, r1
4000b1fc:	1a000020 	bne	4000b284 <_tx_byte_pool_cleanup+0xc0>
4000b200:	e3a00000 	mov	r0, #0
4000b204:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b208:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b20c:	e1500004 	cmp	r0, r4
4000b210:	1a000002 	bne	4000b220 <_tx_byte_pool_cleanup+0x5c>
4000b214:	e3a00000 	mov	r0, #0
4000b218:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b21c:	ea000007 	b	4000b240 <_tx_byte_pool_cleanup+0x7c>
4000b220:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b224:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b228:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b22c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b230:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b234:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b238:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b23c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b240:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b244:	e2400001 	sub	r0, r0, #1
4000b248:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b24c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b250:	e3500009 	cmp	r0, #9
4000b254:	1a00000a 	bne	4000b284 <_tx_byte_pool_cleanup+0xc0>
4000b258:	e3a00010 	mov	r0, #16
4000b25c:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b260:	e59f0028 	ldr	r0, [pc, #40]	; 4000b290 <_tx_byte_pool_cleanup+0xcc>
4000b264:	e5900000 	ldr	r0, [r0]
4000b268:	e2800001 	add	r0, r0, #1
4000b26c:	e59f101c 	ldr	r1, [pc, #28]	; 4000b290 <_tx_byte_pool_cleanup+0xcc>
4000b270:	e5810000 	str	r0, [r1]
4000b274:	e121f005 	msr	CPSR_c, r5
4000b278:	e1a00004 	mov	r0, r4
4000b27c:	eb000fcd 	bl	4000f1b8 <_tx_thread_system_resume>
4000b280:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b284:	e121f005 	msr	CPSR_c, r5
4000b288:	eafffffc 	b	4000b280 <_tx_byte_pool_cleanup+0xbc>
4000b28c:	42595445 	.word	0x42595445
4000b290:	40030e54 	.word	0x40030e54

4000b294 <_tx_byte_pool_create>:
4000b294:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b298:	e1a04000 	mov	r4, r0
4000b29c:	e1a05001 	mov	r5, r1
4000b2a0:	e1a06002 	mov	r6, r2
4000b2a4:	e1a07003 	mov	r7, r3
4000b2a8:	e3a01034 	mov	r1, #52	; 0x34
4000b2ac:	e1a00004 	mov	r0, r4
4000b2b0:	eb002080 	bl	400134b8 <__aeabi_memclr4>
4000b2b4:	e1a00127 	lsr	r0, r7, #2
4000b2b8:	e1a07100 	lsl	r7, r0, #2
4000b2bc:	e5845004 	str	r5, [r4, #4]
4000b2c0:	e5846018 	str	r6, [r4, #24]
4000b2c4:	e584701c 	str	r7, [r4, #28]
4000b2c8:	e5846010 	str	r6, [r4, #16]
4000b2cc:	e5846014 	str	r6, [r4, #20]
4000b2d0:	e2470008 	sub	r0, r7, #8
4000b2d4:	e5840008 	str	r0, [r4, #8]
4000b2d8:	e3a00002 	mov	r0, #2
4000b2dc:	e584000c 	str	r0, [r4, #12]
4000b2e0:	e0860007 	add	r0, r6, r7
4000b2e4:	e58d0004 	str	r0, [sp, #4]
4000b2e8:	e59d0004 	ldr	r0, [sp, #4]
4000b2ec:	e2400004 	sub	r0, r0, #4
4000b2f0:	e58d0004 	str	r0, [sp, #4]
4000b2f4:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b4b8 <_tx_byte_pool_create+0x224>
4000b2f8:	e59d1004 	ldr	r1, [sp, #4]
4000b2fc:	e5810000 	str	r0, [r1]
4000b300:	e59d0004 	ldr	r0, [sp, #4]
4000b304:	e2400004 	sub	r0, r0, #4
4000b308:	e58d0004 	str	r0, [sp, #4]
4000b30c:	e59d0004 	ldr	r0, [sp, #4]
4000b310:	e5806000 	str	r6, [r0]
4000b314:	e59d0004 	ldr	r0, [sp, #4]
4000b318:	e5860000 	str	r0, [r6]
4000b31c:	e58d6004 	str	r6, [sp, #4]
4000b320:	e59d0004 	ldr	r0, [sp, #4]
4000b324:	e2800004 	add	r0, r0, #4
4000b328:	e58d0004 	str	r0, [sp, #4]
4000b32c:	e59f0188 	ldr	r0, [pc, #392]	; 4000b4bc <_tx_byte_pool_create+0x228>
4000b330:	e59d1004 	ldr	r1, [sp, #4]
4000b334:	e5810000 	str	r0, [r1]
4000b338:	e3a00000 	mov	r0, #0
4000b33c:	e5840020 	str	r0, [r4, #32]
4000b340:	e10f8000 	mrs	r8, CPSR
4000b344:	e3889080 	orr	r9, r8, #128	; 0x80
4000b348:	e121f009 	msr	CPSR_c, r9
4000b34c:	e59f016c 	ldr	r0, [pc, #364]	; 4000b4c0 <_tx_byte_pool_create+0x22c>
4000b350:	e5840000 	str	r0, [r4]
4000b354:	e59f0168 	ldr	r0, [pc, #360]	; 4000b4c4 <_tx_byte_pool_create+0x230>
4000b358:	e5900000 	ldr	r0, [r0]
4000b35c:	e3500000 	cmp	r0, #0
4000b360:	0a00000b 	beq	4000b394 <_tx_byte_pool_create+0x100>
4000b364:	e59f0158 	ldr	r0, [pc, #344]	; 4000b4c4 <_tx_byte_pool_create+0x230>
4000b368:	e5900000 	ldr	r0, [r0]
4000b36c:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b370:	e59f014c 	ldr	r0, [pc, #332]	; 4000b4c4 <_tx_byte_pool_create+0x230>
4000b374:	e5900000 	ldr	r0, [r0]
4000b378:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b37c:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b380:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b384:	e59f0138 	ldr	r0, [pc, #312]	; 4000b4c4 <_tx_byte_pool_create+0x230>
4000b388:	e5900000 	ldr	r0, [r0]
4000b38c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b390:	ea000003 	b	4000b3a4 <_tx_byte_pool_create+0x110>
4000b394:	e59f0128 	ldr	r0, [pc, #296]	; 4000b4c4 <_tx_byte_pool_create+0x230>
4000b398:	e5804000 	str	r4, [r0]
4000b39c:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b3a0:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b3a4:	e59f011c 	ldr	r0, [pc, #284]	; 4000b4c8 <_tx_byte_pool_create+0x234>
4000b3a8:	e5900000 	ldr	r0, [r0]
4000b3ac:	e2800001 	add	r0, r0, #1
4000b3b0:	e59f1110 	ldr	r1, [pc, #272]	; 4000b4c8 <_tx_byte_pool_create+0x234>
4000b3b4:	e5810000 	str	r0, [r1]
4000b3b8:	e3a03000 	mov	r3, #0
4000b3bc:	e58d3000 	str	r3, [sp]
4000b3c0:	e1a03007 	mov	r3, r7
4000b3c4:	e1a02005 	mov	r2, r5
4000b3c8:	e1a01004 	mov	r1, r4
4000b3cc:	e3a00008 	mov	r0, #8
4000b3d0:	eb0012ce 	bl	4000ff10 <_tx_trace_object_register>
4000b3d4:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b4cc <_tx_byte_pool_create+0x238>
4000b3d8:	e5910000 	ldr	r0, [r1]
4000b3dc:	e3500000 	cmp	r0, #0
4000b3e0:	0a000031 	beq	4000b4ac <_tx_byte_pool_create+0x218>
4000b3e4:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b4d0 <_tx_byte_pool_create+0x23c>
4000b3e8:	e5911000 	ldr	r1, [r1]
4000b3ec:	e2811001 	add	r1, r1, #1
4000b3f0:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b4d0 <_tx_byte_pool_create+0x23c>
4000b3f4:	e5821000 	str	r1, [r2]
4000b3f8:	e580100c 	str	r1, [r0, #12]
4000b3fc:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b4d4 <_tx_byte_pool_create+0x240>
4000b400:	e5911000 	ldr	r1, [r1]
4000b404:	e3510000 	cmp	r1, #0
4000b408:	1a000006 	bne	4000b428 <_tx_byte_pool_create+0x194>
4000b40c:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b4d8 <_tx_byte_pool_create+0x244>
4000b410:	e5911000 	ldr	r1, [r1]
4000b414:	e5801000 	str	r1, [r0]
4000b418:	e5901000 	ldr	r1, [r0]
4000b41c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b420:	e5801004 	str	r1, [r0, #4]
4000b424:	ea00000d 	b	4000b460 <_tx_byte_pool_create+0x1cc>
4000b428:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b4d4 <_tx_byte_pool_create+0x240>
4000b42c:	e5911000 	ldr	r1, [r1]
4000b430:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b4dc <_tx_byte_pool_create+0x248>
4000b434:	e1510002 	cmp	r1, r2
4000b438:	2a000004 	bcs	4000b450 <_tx_byte_pool_create+0x1bc>
4000b43c:	e3e01000 	mvn	r1, #0
4000b440:	e5801000 	str	r1, [r0]
4000b444:	e3a01000 	mov	r1, #0
4000b448:	e5801004 	str	r1, [r0, #4]
4000b44c:	ea000003 	b	4000b460 <_tx_byte_pool_create+0x1cc>
4000b450:	e59f1084 	ldr	r1, [pc, #132]	; 4000b4dc <_tx_byte_pool_create+0x248>
4000b454:	e5801000 	str	r1, [r0]
4000b458:	e3a01000 	mov	r1, #0
4000b45c:	e5801004 	str	r1, [r0, #4]
4000b460:	e3a01015 	mov	r1, #21
4000b464:	e5801008 	str	r1, [r0, #8]
4000b468:	e5804010 	str	r4, [r0, #16]
4000b46c:	e5806014 	str	r6, [r0, #20]
4000b470:	e5807018 	str	r7, [r0, #24]
4000b474:	e28d1004 	add	r1, sp, #4
4000b478:	e580101c 	str	r1, [r0, #28]
4000b47c:	e2800020 	add	r0, r0, #32
4000b480:	e59f1058 	ldr	r1, [pc, #88]	; 4000b4e0 <_tx_byte_pool_create+0x24c>
4000b484:	e5911000 	ldr	r1, [r1]
4000b488:	e1500001 	cmp	r0, r1
4000b48c:	3a000001 	bcc	4000b498 <_tx_byte_pool_create+0x204>
4000b490:	e59f104c 	ldr	r1, [pc, #76]	; 4000b4e4 <_tx_byte_pool_create+0x250>
4000b494:	e5910000 	ldr	r0, [r1]
4000b498:	e59f102c 	ldr	r1, [pc, #44]	; 4000b4cc <_tx_byte_pool_create+0x238>
4000b49c:	e5810000 	str	r0, [r1]
4000b4a0:	e59f1040 	ldr	r1, [pc, #64]	; 4000b4e8 <_tx_byte_pool_create+0x254>
4000b4a4:	e5911000 	ldr	r1, [r1]
4000b4a8:	e5810020 	str	r0, [r1, #32]
4000b4ac:	e121f008 	msr	CPSR_c, r8
4000b4b0:	e3a00000 	mov	r0, #0
4000b4b4:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b4b8:	aaaaaaaa 	.word	0xaaaaaaaa
4000b4bc:	ffffeeee 	.word	0xffffeeee
4000b4c0:	42595445 	.word	0x42595445
4000b4c4:	40030ed4 	.word	0x40030ed4
4000b4c8:	40030ed8 	.word	0x40030ed8
4000b4cc:	40030ea4 	.word	0x40030ea4
4000b4d0:	40030ea8 	.word	0x40030ea8
4000b4d4:	40030e30 	.word	0x40030e30
4000b4d8:	40030e38 	.word	0x40030e38
4000b4dc:	f0f0f0f0 	.word	0xf0f0f0f0
4000b4e0:	40030ea0 	.word	0x40030ea0
4000b4e4:	40030e9c 	.word	0x40030e9c
4000b4e8:	40030e90 	.word	0x40030e90

4000b4ec <_tx_byte_pool_delete>:
4000b4ec:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b4f0:	e1a04000 	mov	r4, r0
4000b4f4:	e10f5000 	mrs	r5, CPSR
4000b4f8:	e3856080 	orr	r6, r5, #128	; 0x80
4000b4fc:	e121f006 	msr	CPSR_c, r6
4000b500:	e59f1204 	ldr	r1, [pc, #516]	; 4000b70c <_tx_byte_pool_delete+0x220>
4000b504:	e5910000 	ldr	r0, [r1]
4000b508:	e3500000 	cmp	r0, #0
4000b50c:	0a000031 	beq	4000b5d8 <_tx_byte_pool_delete+0xec>
4000b510:	e59f11f8 	ldr	r1, [pc, #504]	; 4000b710 <_tx_byte_pool_delete+0x224>
4000b514:	e5911000 	ldr	r1, [r1]
4000b518:	e2811001 	add	r1, r1, #1
4000b51c:	e59f21ec 	ldr	r2, [pc, #492]	; 4000b710 <_tx_byte_pool_delete+0x224>
4000b520:	e5821000 	str	r1, [r2]
4000b524:	e580100c 	str	r1, [r0, #12]
4000b528:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b714 <_tx_byte_pool_delete+0x228>
4000b52c:	e5911000 	ldr	r1, [r1]
4000b530:	e3510000 	cmp	r1, #0
4000b534:	1a000006 	bne	4000b554 <_tx_byte_pool_delete+0x68>
4000b538:	e59f11d8 	ldr	r1, [pc, #472]	; 4000b718 <_tx_byte_pool_delete+0x22c>
4000b53c:	e5911000 	ldr	r1, [r1]
4000b540:	e5801000 	str	r1, [r0]
4000b544:	e5901000 	ldr	r1, [r0]
4000b548:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b54c:	e5801004 	str	r1, [r0, #4]
4000b550:	ea00000d 	b	4000b58c <_tx_byte_pool_delete+0xa0>
4000b554:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b714 <_tx_byte_pool_delete+0x228>
4000b558:	e5911000 	ldr	r1, [r1]
4000b55c:	e59f21b8 	ldr	r2, [pc, #440]	; 4000b71c <_tx_byte_pool_delete+0x230>
4000b560:	e1510002 	cmp	r1, r2
4000b564:	2a000004 	bcs	4000b57c <_tx_byte_pool_delete+0x90>
4000b568:	e3e01000 	mvn	r1, #0
4000b56c:	e5801000 	str	r1, [r0]
4000b570:	e3a01000 	mov	r1, #0
4000b574:	e5801004 	str	r1, [r0, #4]
4000b578:	ea000003 	b	4000b58c <_tx_byte_pool_delete+0xa0>
4000b57c:	e59f1198 	ldr	r1, [pc, #408]	; 4000b71c <_tx_byte_pool_delete+0x230>
4000b580:	e5801000 	str	r1, [r0]
4000b584:	e3a01000 	mov	r1, #0
4000b588:	e5801004 	str	r1, [r0, #4]
4000b58c:	e3a01016 	mov	r1, #22
4000b590:	e5801008 	str	r1, [r0, #8]
4000b594:	e5804010 	str	r4, [r0, #16]
4000b598:	e580d014 	str	sp, [r0, #20]
4000b59c:	e3a01000 	mov	r1, #0
4000b5a0:	e5801018 	str	r1, [r0, #24]
4000b5a4:	e580101c 	str	r1, [r0, #28]
4000b5a8:	e2800020 	add	r0, r0, #32
4000b5ac:	e59f116c 	ldr	r1, [pc, #364]	; 4000b720 <_tx_byte_pool_delete+0x234>
4000b5b0:	e5911000 	ldr	r1, [r1]
4000b5b4:	e1500001 	cmp	r0, r1
4000b5b8:	3a000001 	bcc	4000b5c4 <_tx_byte_pool_delete+0xd8>
4000b5bc:	e59f1160 	ldr	r1, [pc, #352]	; 4000b724 <_tx_byte_pool_delete+0x238>
4000b5c0:	e5910000 	ldr	r0, [r1]
4000b5c4:	e59f1140 	ldr	r1, [pc, #320]	; 4000b70c <_tx_byte_pool_delete+0x220>
4000b5c8:	e5810000 	str	r0, [r1]
4000b5cc:	e59f1154 	ldr	r1, [pc, #340]	; 4000b728 <_tx_byte_pool_delete+0x23c>
4000b5d0:	e5911000 	ldr	r1, [r1]
4000b5d4:	e5810020 	str	r0, [r1, #32]
4000b5d8:	e1a00004 	mov	r0, r4
4000b5dc:	eb0012b6 	bl	400100bc <_tx_trace_object_unregister>
4000b5e0:	e59f0144 	ldr	r0, [pc, #324]	; 4000b72c <_tx_byte_pool_delete+0x240>
4000b5e4:	e5900000 	ldr	r0, [r0]
4000b5e8:	e2400001 	sub	r0, r0, #1
4000b5ec:	e59f1138 	ldr	r1, [pc, #312]	; 4000b72c <_tx_byte_pool_delete+0x240>
4000b5f0:	e5810000 	str	r0, [r1]
4000b5f4:	e3a00000 	mov	r0, #0
4000b5f8:	e5840000 	str	r0, [r4]
4000b5fc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b600:	e1500004 	cmp	r0, r4
4000b604:	1a000003 	bne	4000b618 <_tx_byte_pool_delete+0x12c>
4000b608:	e3a00000 	mov	r0, #0
4000b60c:	e59f111c 	ldr	r1, [pc, #284]	; 4000b730 <_tx_byte_pool_delete+0x244>
4000b610:	e5810000 	str	r0, [r1]
4000b614:	ea00000c 	b	4000b64c <_tx_byte_pool_delete+0x160>
4000b618:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b61c:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b620:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b624:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b628:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b62c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b630:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b730 <_tx_byte_pool_delete+0x244>
4000b634:	e5900000 	ldr	r0, [r0]
4000b638:	e1500004 	cmp	r0, r4
4000b63c:	1a000002 	bne	4000b64c <_tx_byte_pool_delete+0x160>
4000b640:	e59f10e8 	ldr	r1, [pc, #232]	; 4000b730 <_tx_byte_pool_delete+0x244>
4000b644:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b648:	e5810000 	str	r0, [r1]
4000b64c:	e59f00e0 	ldr	r0, [pc, #224]	; 4000b734 <_tx_byte_pool_delete+0x248>
4000b650:	e5900000 	ldr	r0, [r0]
4000b654:	e2800001 	add	r0, r0, #1
4000b658:	e59f10d4 	ldr	r1, [pc, #212]	; 4000b734 <_tx_byte_pool_delete+0x248>
4000b65c:	e5810000 	str	r0, [r1]
4000b660:	e121f005 	msr	CPSR_c, r5
4000b664:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b668:	e58d0000 	str	r0, [sp]
4000b66c:	ea000017 	b	4000b6d0 <_tx_byte_pool_delete+0x1e4>
4000b670:	e10f5000 	mrs	r5, CPSR
4000b674:	e3856080 	orr	r6, r5, #128	; 0x80
4000b678:	e121f006 	msr	CPSR_c, r6
4000b67c:	e3a00000 	mov	r0, #0
4000b680:	e59d1000 	ldr	r1, [sp]
4000b684:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b688:	e59f00a4 	ldr	r0, [pc, #164]	; 4000b734 <_tx_byte_pool_delete+0x248>
4000b68c:	e5900000 	ldr	r0, [r0]
4000b690:	e2800001 	add	r0, r0, #1
4000b694:	e59f1098 	ldr	r1, [pc, #152]	; 4000b734 <_tx_byte_pool_delete+0x248>
4000b698:	e5810000 	str	r0, [r1]
4000b69c:	e121f005 	msr	CPSR_c, r5
4000b6a0:	e3a00001 	mov	r0, #1
4000b6a4:	e59d1000 	ldr	r1, [sp]
4000b6a8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b6ac:	e59d0000 	ldr	r0, [sp]
4000b6b0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b6b4:	e58d0000 	str	r0, [sp]
4000b6b8:	e59d1000 	ldr	r1, [sp]
4000b6bc:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b6c0:	eb000ebc 	bl	4000f1b8 <_tx_thread_system_resume>
4000b6c4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b6c8:	e2400001 	sub	r0, r0, #1
4000b6cc:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b6d0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b6d4:	e3500000 	cmp	r0, #0
4000b6d8:	1affffe4 	bne	4000b670 <_tx_byte_pool_delete+0x184>
4000b6dc:	e10f5000 	mrs	r5, CPSR
4000b6e0:	e3856080 	orr	r6, r5, #128	; 0x80
4000b6e4:	e121f006 	msr	CPSR_c, r6
4000b6e8:	e59f0044 	ldr	r0, [pc, #68]	; 4000b734 <_tx_byte_pool_delete+0x248>
4000b6ec:	e5900000 	ldr	r0, [r0]
4000b6f0:	e2400001 	sub	r0, r0, #1
4000b6f4:	e59f1038 	ldr	r1, [pc, #56]	; 4000b734 <_tx_byte_pool_delete+0x248>
4000b6f8:	e5810000 	str	r0, [r1]
4000b6fc:	e121f005 	msr	CPSR_c, r5
4000b700:	eb000e80 	bl	4000f108 <_tx_thread_system_preempt_check>
4000b704:	e3a00000 	mov	r0, #0
4000b708:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000b70c:	40030ea4 	.word	0x40030ea4
4000b710:	40030ea8 	.word	0x40030ea8
4000b714:	40030e30 	.word	0x40030e30
4000b718:	40030e38 	.word	0x40030e38
4000b71c:	f0f0f0f0 	.word	0xf0f0f0f0
4000b720:	40030ea0 	.word	0x40030ea0
4000b724:	40030e9c 	.word	0x40030e9c
4000b728:	40030e90 	.word	0x40030e90
4000b72c:	40030ed8 	.word	0x40030ed8
4000b730:	40030ed4 	.word	0x40030ed4
4000b734:	40030e54 	.word	0x40030e54

4000b738 <_tx_byte_pool_search>:
4000b738:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b73c:	e1a02000 	mov	r2, r0
4000b740:	e3a08000 	mov	r8, #0
4000b744:	e10f3000 	mrs	r3, CPSR
4000b748:	e383c080 	orr	ip, r3, #128	; 0x80
4000b74c:	e121f00c 	msr	CPSR_c, ip
4000b750:	e5920008 	ldr	r0, [r2, #8]
4000b754:	e1500001 	cmp	r0, r1
4000b758:	8a000002 	bhi	4000b768 <_tx_byte_pool_search+0x30>
4000b75c:	e121f003 	msr	CPSR_c, r3
4000b760:	e3a00000 	mov	r0, #0
4000b764:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b768:	e5925014 	ldr	r5, [r2, #20]
4000b76c:	e1a0e005 	mov	lr, r5
4000b770:	e592000c 	ldr	r0, [r2, #12]
4000b774:	e2807001 	add	r7, r0, #1
4000b778:	e3a06000 	mov	r6, #0
4000b77c:	e1a00000 	nop			; (mov r0, r0)
4000b780:	e59e0004 	ldr	r0, [lr, #4]
4000b784:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b788:	e29aa012 	adds	sl, sl, #18
4000b78c:	1a000020 	bne	4000b814 <_tx_byte_pool_search+0xdc>
4000b790:	e3580000 	cmp	r8, #0
4000b794:	1a000004 	bne	4000b7ac <_tx_byte_pool_search+0x74>
4000b798:	e5920014 	ldr	r0, [r2, #20]
4000b79c:	e1500005 	cmp	r0, r5
4000b7a0:	1a000000 	bne	4000b7a8 <_tx_byte_pool_search+0x70>
4000b7a4:	e582e014 	str	lr, [r2, #20]
4000b7a8:	e3a08001 	mov	r8, #1
4000b7ac:	e59e4000 	ldr	r4, [lr]
4000b7b0:	e044000e 	sub	r0, r4, lr
4000b7b4:	e2406008 	sub	r6, r0, #8
4000b7b8:	e1560001 	cmp	r6, r1
4000b7bc:	3a000000 	bcc	4000b7c4 <_tx_byte_pool_search+0x8c>
4000b7c0:	ea000026 	b	4000b860 <_tx_byte_pool_search+0x128>
4000b7c4:	e3a06000 	mov	r6, #0
4000b7c8:	e5940004 	ldr	r0, [r4, #4]
4000b7cc:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b7d0:	e29aa012 	adds	sl, sl, #18
4000b7d4:	1a000009 	bne	4000b800 <_tx_byte_pool_search+0xc8>
4000b7d8:	e5940000 	ldr	r0, [r4]
4000b7dc:	e58e0000 	str	r0, [lr]
4000b7e0:	e592000c 	ldr	r0, [r2, #12]
4000b7e4:	e2400001 	sub	r0, r0, #1
4000b7e8:	e582000c 	str	r0, [r2, #12]
4000b7ec:	e5920014 	ldr	r0, [r2, #20]
4000b7f0:	e1500004 	cmp	r0, r4
4000b7f4:	1a000007 	bne	4000b818 <_tx_byte_pool_search+0xe0>
4000b7f8:	e582e014 	str	lr, [r2, #20]
4000b7fc:	ea000005 	b	4000b818 <_tx_byte_pool_search+0xe0>
4000b800:	e594e000 	ldr	lr, [r4]
4000b804:	e3570000 	cmp	r7, #0
4000b808:	0a000002 	beq	4000b818 <_tx_byte_pool_search+0xe0>
4000b80c:	e2477001 	sub	r7, r7, #1
4000b810:	ea000000 	b	4000b818 <_tx_byte_pool_search+0xe0>
4000b814:	e59ee000 	ldr	lr, [lr]
4000b818:	e3570000 	cmp	r7, #0
4000b81c:	0a000000 	beq	4000b824 <_tx_byte_pool_search+0xec>
4000b820:	e2477001 	sub	r7, r7, #1
4000b824:	e121f003 	msr	CPSR_c, r3
4000b828:	e10f3000 	mrs	r3, CPSR
4000b82c:	e383c080 	orr	ip, r3, #128	; 0x80
4000b830:	e121f00c 	msr	CPSR_c, ip
4000b834:	e59f00ac 	ldr	r0, [pc, #172]	; 4000b8e8 <_tx_byte_pool_search+0x1b0>
4000b838:	e5909000 	ldr	r9, [r0]
4000b83c:	e5920020 	ldr	r0, [r2, #32]
4000b840:	e1500009 	cmp	r0, r9
4000b844:	0a000003 	beq	4000b858 <_tx_byte_pool_search+0x120>
4000b848:	e592e014 	ldr	lr, [r2, #20]
4000b84c:	e592000c 	ldr	r0, [r2, #12]
4000b850:	e2807001 	add	r7, r0, #1
4000b854:	e5829020 	str	r9, [r2, #32]
4000b858:	e3570000 	cmp	r7, #0
4000b85c:	1affffc7 	bne	4000b780 <_tx_byte_pool_search+0x48>
4000b860:	e1a00000 	nop			; (mov r0, r0)
4000b864:	e3560000 	cmp	r6, #0
4000b868:	0a00001a 	beq	4000b8d8 <_tx_byte_pool_search+0x1a0>
4000b86c:	e0460001 	sub	r0, r6, r1
4000b870:	e3500014 	cmp	r0, #20
4000b874:	3a00000a 	bcc	4000b8a4 <_tx_byte_pool_search+0x16c>
4000b878:	e08e0001 	add	r0, lr, r1
4000b87c:	e2804008 	add	r4, r0, #8
4000b880:	e59e0000 	ldr	r0, [lr]
4000b884:	e5840000 	str	r0, [r4]
4000b888:	e59f005c 	ldr	r0, [pc, #92]	; 4000b8ec <_tx_byte_pool_search+0x1b4>
4000b88c:	e5840004 	str	r0, [r4, #4]
4000b890:	e592000c 	ldr	r0, [r2, #12]
4000b894:	e2800001 	add	r0, r0, #1
4000b898:	e582000c 	str	r0, [r2, #12]
4000b89c:	e58e4000 	str	r4, [lr]
4000b8a0:	e1a06001 	mov	r6, r1
4000b8a4:	e58e2004 	str	r2, [lr, #4]
4000b8a8:	e5920008 	ldr	r0, [r2, #8]
4000b8ac:	e0400006 	sub	r0, r0, r6
4000b8b0:	e2400008 	sub	r0, r0, #8
4000b8b4:	e5820008 	str	r0, [r2, #8]
4000b8b8:	e5920014 	ldr	r0, [r2, #20]
4000b8bc:	e150000e 	cmp	r0, lr
4000b8c0:	1a000001 	bne	4000b8cc <_tx_byte_pool_search+0x194>
4000b8c4:	e59e0000 	ldr	r0, [lr]
4000b8c8:	e5820014 	str	r0, [r2, #20]
4000b8cc:	e121f003 	msr	CPSR_c, r3
4000b8d0:	e28ee008 	add	lr, lr, #8
4000b8d4:	ea000001 	b	4000b8e0 <_tx_byte_pool_search+0x1a8>
4000b8d8:	e121f003 	msr	CPSR_c, r3
4000b8dc:	e3a0e000 	mov	lr, #0
4000b8e0:	e1a0000e 	mov	r0, lr
4000b8e4:	eaffff9e 	b	4000b764 <_tx_byte_pool_search+0x2c>
4000b8e8:	40030e38 	.word	0x40030e38
4000b8ec:	ffffeeee 	.word	0xffffeeee

4000b8f0 <_tx_byte_release>:
4000b8f0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b8f4:	e1a04000 	mov	r4, r0
4000b8f8:	e1a09004 	mov	r9, r4
4000b8fc:	e1b04009 	movs	r4, r9
4000b900:	0a00000f 	beq	4000b944 <_tx_byte_release+0x54>
4000b904:	e2499008 	sub	r9, r9, #8
4000b908:	e5990004 	ldr	r0, [r9, #4]
4000b90c:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000b910:	e2911012 	adds	r1, r1, #18
4000b914:	0a000008 	beq	4000b93c <_tx_byte_release+0x4c>
4000b918:	e5997004 	ldr	r7, [r9, #4]
4000b91c:	e3570000 	cmp	r7, #0
4000b920:	0a000003 	beq	4000b934 <_tx_byte_release+0x44>
4000b924:	e5970000 	ldr	r0, [r7]
4000b928:	e59f125c 	ldr	r1, [pc, #604]	; 4000bb8c <_tx_byte_release+0x29c>
4000b92c:	e1500001 	cmp	r0, r1
4000b930:	0a000005 	beq	4000b94c <_tx_byte_release+0x5c>
4000b934:	e3a00003 	mov	r0, #3
4000b938:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b93c:	e3a00003 	mov	r0, #3
4000b940:	eafffffc 	b	4000b938 <_tx_byte_release+0x48>
4000b944:	e3a00003 	mov	r0, #3
4000b948:	eafffffa 	b	4000b938 <_tx_byte_release+0x48>
4000b94c:	e59f023c 	ldr	r0, [pc, #572]	; 4000bb90 <_tx_byte_release+0x2a0>
4000b950:	e5908000 	ldr	r8, [r0]
4000b954:	e5878020 	str	r8, [r7, #32]
4000b958:	e10f5000 	mrs	r5, CPSR
4000b95c:	e3856080 	orr	r6, r5, #128	; 0x80
4000b960:	e121f006 	msr	CPSR_c, r6
4000b964:	e59f1228 	ldr	r1, [pc, #552]	; 4000bb94 <_tx_byte_release+0x2a4>
4000b968:	e5910000 	ldr	r0, [r1]
4000b96c:	e3500000 	cmp	r0, #0
4000b970:	0a000032 	beq	4000ba40 <_tx_byte_release+0x150>
4000b974:	e59f121c 	ldr	r1, [pc, #540]	; 4000bb98 <_tx_byte_release+0x2a8>
4000b978:	e5911000 	ldr	r1, [r1]
4000b97c:	e2811001 	add	r1, r1, #1
4000b980:	e59f2210 	ldr	r2, [pc, #528]	; 4000bb98 <_tx_byte_release+0x2a8>
4000b984:	e5821000 	str	r1, [r2]
4000b988:	e580100c 	str	r1, [r0, #12]
4000b98c:	e59f1208 	ldr	r1, [pc, #520]	; 4000bb9c <_tx_byte_release+0x2ac>
4000b990:	e5911000 	ldr	r1, [r1]
4000b994:	e3510000 	cmp	r1, #0
4000b998:	1a000006 	bne	4000b9b8 <_tx_byte_release+0xc8>
4000b99c:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bb90 <_tx_byte_release+0x2a0>
4000b9a0:	e5911000 	ldr	r1, [r1]
4000b9a4:	e5801000 	str	r1, [r0]
4000b9a8:	e5901000 	ldr	r1, [r0]
4000b9ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b9b0:	e5801004 	str	r1, [r0, #4]
4000b9b4:	ea00000d 	b	4000b9f0 <_tx_byte_release+0x100>
4000b9b8:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bb9c <_tx_byte_release+0x2ac>
4000b9bc:	e5911000 	ldr	r1, [r1]
4000b9c0:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bba0 <_tx_byte_release+0x2b0>
4000b9c4:	e1510002 	cmp	r1, r2
4000b9c8:	2a000004 	bcs	4000b9e0 <_tx_byte_release+0xf0>
4000b9cc:	e3e01000 	mvn	r1, #0
4000b9d0:	e5801000 	str	r1, [r0]
4000b9d4:	e3a01000 	mov	r1, #0
4000b9d8:	e5801004 	str	r1, [r0, #4]
4000b9dc:	ea000003 	b	4000b9f0 <_tx_byte_release+0x100>
4000b9e0:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bba0 <_tx_byte_release+0x2b0>
4000b9e4:	e5801000 	str	r1, [r0]
4000b9e8:	e3a01000 	mov	r1, #0
4000b9ec:	e5801004 	str	r1, [r0, #4]
4000b9f0:	e3a0101b 	mov	r1, #27
4000b9f4:	e5801008 	str	r1, [r0, #8]
4000b9f8:	e5807010 	str	r7, [r0, #16]
4000b9fc:	e5804014 	str	r4, [r0, #20]
4000ba00:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000ba04:	e5801018 	str	r1, [r0, #24]
4000ba08:	e5971008 	ldr	r1, [r7, #8]
4000ba0c:	e580101c 	str	r1, [r0, #28]
4000ba10:	e2800020 	add	r0, r0, #32
4000ba14:	e59f1188 	ldr	r1, [pc, #392]	; 4000bba4 <_tx_byte_release+0x2b4>
4000ba18:	e5911000 	ldr	r1, [r1]
4000ba1c:	e1500001 	cmp	r0, r1
4000ba20:	3a000001 	bcc	4000ba2c <_tx_byte_release+0x13c>
4000ba24:	e59f117c 	ldr	r1, [pc, #380]	; 4000bba8 <_tx_byte_release+0x2b8>
4000ba28:	e5910000 	ldr	r0, [r1]
4000ba2c:	e59f1160 	ldr	r1, [pc, #352]	; 4000bb94 <_tx_byte_release+0x2a4>
4000ba30:	e5810000 	str	r0, [r1]
4000ba34:	e59f1170 	ldr	r1, [pc, #368]	; 4000bbac <_tx_byte_release+0x2bc>
4000ba38:	e5911000 	ldr	r1, [r1]
4000ba3c:	e5810020 	str	r0, [r1, #32]
4000ba40:	e59f0168 	ldr	r0, [pc, #360]	; 4000bbb0 <_tx_byte_release+0x2c0>
4000ba44:	e5890004 	str	r0, [r9, #4]
4000ba48:	e5970008 	ldr	r0, [r7, #8]
4000ba4c:	e5991000 	ldr	r1, [r9]
4000ba50:	e0411009 	sub	r1, r1, r9
4000ba54:	e0800001 	add	r0, r0, r1
4000ba58:	e5870008 	str	r0, [r7, #8]
4000ba5c:	e5970014 	ldr	r0, [r7, #20]
4000ba60:	e1500009 	cmp	r0, r9
4000ba64:	9a000000 	bls	4000ba6c <_tx_byte_release+0x17c>
4000ba68:	e5879014 	str	r9, [r7, #20]
4000ba6c:	ea00003e 	b	4000bb6c <_tx_byte_release+0x27c>
4000ba70:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000ba74:	e121f005 	msr	CPSR_c, r5
4000ba78:	e1a00007 	mov	r0, r7
4000ba7c:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000ba80:	ebffff2c 	bl	4000b738 <_tx_byte_pool_search>
4000ba84:	e1a09000 	mov	r9, r0
4000ba88:	e10f5000 	mrs	r5, CPSR
4000ba8c:	e3856080 	orr	r6, r5, #128	; 0x80
4000ba90:	e121f006 	msr	CPSR_c, r6
4000ba94:	e3590000 	cmp	r9, #0
4000ba98:	1a000000 	bne	4000baa0 <_tx_byte_release+0x1b0>
4000ba9c:	ea000035 	b	4000bb78 <_tx_byte_release+0x288>
4000baa0:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000baa4:	e150000a 	cmp	r0, sl
4000baa8:	0a00000c 	beq	4000bae0 <_tx_byte_release+0x1f0>
4000baac:	e2499008 	sub	r9, r9, #8
4000bab0:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bbb0 <_tx_byte_release+0x2c0>
4000bab4:	e5890004 	str	r0, [r9, #4]
4000bab8:	e5970008 	ldr	r0, [r7, #8]
4000babc:	e5991000 	ldr	r1, [r9]
4000bac0:	e0411009 	sub	r1, r1, r9
4000bac4:	e0800001 	add	r0, r0, r1
4000bac8:	e5870008 	str	r0, [r7, #8]
4000bacc:	e5970014 	ldr	r0, [r7, #20]
4000bad0:	e1500009 	cmp	r0, r9
4000bad4:	9a000000 	bls	4000badc <_tx_byte_release+0x1ec>
4000bad8:	e5879014 	str	r9, [r7, #20]
4000badc:	ea000022 	b	4000bb6c <_tx_byte_release+0x27c>
4000bae0:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bae4:	e150000a 	cmp	r0, sl
4000bae8:	1a000002 	bne	4000baf8 <_tx_byte_release+0x208>
4000baec:	e3a00000 	mov	r0, #0
4000baf0:	e5870024 	str	r0, [r7, #36]	; 0x24
4000baf4:	ea000007 	b	4000bb18 <_tx_byte_release+0x228>
4000baf8:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bafc:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bb00:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bb04:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bb08:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bb0c:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bb10:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bb14:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bb18:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bb1c:	e2400001 	sub	r0, r0, #1
4000bb20:	e5870028 	str	r0, [r7, #40]	; 0x28
4000bb24:	e3a00000 	mov	r0, #0
4000bb28:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bb2c:	e59f0080 	ldr	r0, [pc, #128]	; 4000bbb4 <_tx_byte_release+0x2c4>
4000bb30:	e5900000 	ldr	r0, [r0]
4000bb34:	e2800001 	add	r0, r0, #1
4000bb38:	e59f1074 	ldr	r1, [pc, #116]	; 4000bbb4 <_tx_byte_release+0x2c4>
4000bb3c:	e5810000 	str	r0, [r1]
4000bb40:	e121f005 	msr	CPSR_c, r5
4000bb44:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bb48:	e5809000 	str	r9, [r0]
4000bb4c:	e3a00000 	mov	r0, #0
4000bb50:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bb54:	e1a0000a 	mov	r0, sl
4000bb58:	eb000d96 	bl	4000f1b8 <_tx_thread_system_resume>
4000bb5c:	e10f5000 	mrs	r5, CPSR
4000bb60:	e3856080 	orr	r6, r5, #128	; 0x80
4000bb64:	e121f006 	msr	CPSR_c, r6
4000bb68:	e1a00000 	nop			; (mov r0, r0)
4000bb6c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bb70:	e3500000 	cmp	r0, #0
4000bb74:	1affffbd 	bne	4000ba70 <_tx_byte_release+0x180>
4000bb78:	e1a00000 	nop			; (mov r0, r0)
4000bb7c:	e121f005 	msr	CPSR_c, r5
4000bb80:	eb000d60 	bl	4000f108 <_tx_thread_system_preempt_check>
4000bb84:	e3a00000 	mov	r0, #0
4000bb88:	eaffff6a 	b	4000b938 <_tx_byte_release+0x48>
4000bb8c:	42595445 	.word	0x42595445
4000bb90:	40030e38 	.word	0x40030e38
4000bb94:	40030ea4 	.word	0x40030ea4
4000bb98:	40030ea8 	.word	0x40030ea8
4000bb9c:	40030e30 	.word	0x40030e30
4000bba0:	f0f0f0f0 	.word	0xf0f0f0f0
4000bba4:	40030ea0 	.word	0x40030ea0
4000bba8:	40030e9c 	.word	0x40030e9c
4000bbac:	40030e90 	.word	0x40030e90
4000bbb0:	ffffeeee 	.word	0xffffeeee
4000bbb4:	40030e54 	.word	0x40030e54

4000bbb8 <_tx_event_flags_create>:
4000bbb8:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bbbc:	e1a04000 	mov	r4, r0
4000bbc0:	e1a05001 	mov	r5, r1
4000bbc4:	e3a01028 	mov	r1, #40	; 0x28
4000bbc8:	e1a00004 	mov	r0, r4
4000bbcc:	eb001e39 	bl	400134b8 <__aeabi_memclr4>
4000bbd0:	e5845004 	str	r5, [r4, #4]
4000bbd4:	e10f6000 	mrs	r6, CPSR
4000bbd8:	e3867080 	orr	r7, r6, #128	; 0x80
4000bbdc:	e121f007 	msr	CPSR_c, r7
4000bbe0:	e59f0170 	ldr	r0, [pc, #368]	; 4000bd58 <_tx_event_flags_create+0x1a0>
4000bbe4:	e5840000 	str	r0, [r4]
4000bbe8:	e59f016c 	ldr	r0, [pc, #364]	; 4000bd5c <_tx_event_flags_create+0x1a4>
4000bbec:	e5900000 	ldr	r0, [r0]
4000bbf0:	e3500000 	cmp	r0, #0
4000bbf4:	0a00000e 	beq	4000bc34 <_tx_event_flags_create+0x7c>
4000bbf8:	e59f015c 	ldr	r0, [pc, #348]	; 4000bd5c <_tx_event_flags_create+0x1a4>
4000bbfc:	e5900000 	ldr	r0, [r0]
4000bc00:	e590001c 	ldr	r0, [r0, #28]
4000bc04:	e58d0004 	str	r0, [sp, #4]
4000bc08:	e59f014c 	ldr	r0, [pc, #332]	; 4000bd5c <_tx_event_flags_create+0x1a4>
4000bc0c:	e5900000 	ldr	r0, [r0]
4000bc10:	e580401c 	str	r4, [r0, #28]
4000bc14:	e59d0004 	ldr	r0, [sp, #4]
4000bc18:	e5804018 	str	r4, [r0, #24]
4000bc1c:	e59d0004 	ldr	r0, [sp, #4]
4000bc20:	e584001c 	str	r0, [r4, #28]
4000bc24:	e59f0130 	ldr	r0, [pc, #304]	; 4000bd5c <_tx_event_flags_create+0x1a4>
4000bc28:	e5900000 	ldr	r0, [r0]
4000bc2c:	e5840018 	str	r0, [r4, #24]
4000bc30:	ea000003 	b	4000bc44 <_tx_event_flags_create+0x8c>
4000bc34:	e59f0120 	ldr	r0, [pc, #288]	; 4000bd5c <_tx_event_flags_create+0x1a4>
4000bc38:	e5804000 	str	r4, [r0]
4000bc3c:	e5844018 	str	r4, [r4, #24]
4000bc40:	e584401c 	str	r4, [r4, #28]
4000bc44:	e59f0114 	ldr	r0, [pc, #276]	; 4000bd60 <_tx_event_flags_create+0x1a8>
4000bc48:	e5900000 	ldr	r0, [r0]
4000bc4c:	e2800001 	add	r0, r0, #1
4000bc50:	e59f1108 	ldr	r1, [pc, #264]	; 4000bd60 <_tx_event_flags_create+0x1a8>
4000bc54:	e5810000 	str	r0, [r1]
4000bc58:	e3a03000 	mov	r3, #0
4000bc5c:	e1a02005 	mov	r2, r5
4000bc60:	e1a01004 	mov	r1, r4
4000bc64:	e3a00006 	mov	r0, #6
4000bc68:	e58d3000 	str	r3, [sp]
4000bc6c:	eb0010a7 	bl	4000ff10 <_tx_trace_object_register>
4000bc70:	e59f10ec 	ldr	r1, [pc, #236]	; 4000bd64 <_tx_event_flags_create+0x1ac>
4000bc74:	e5910000 	ldr	r0, [r1]
4000bc78:	e3500000 	cmp	r0, #0
4000bc7c:	0a000032 	beq	4000bd4c <_tx_event_flags_create+0x194>
4000bc80:	e59f10e0 	ldr	r1, [pc, #224]	; 4000bd68 <_tx_event_flags_create+0x1b0>
4000bc84:	e5911000 	ldr	r1, [r1]
4000bc88:	e2811001 	add	r1, r1, #1
4000bc8c:	e59f20d4 	ldr	r2, [pc, #212]	; 4000bd68 <_tx_event_flags_create+0x1b0>
4000bc90:	e5821000 	str	r1, [r2]
4000bc94:	e580100c 	str	r1, [r0, #12]
4000bc98:	e59f10cc 	ldr	r1, [pc, #204]	; 4000bd6c <_tx_event_flags_create+0x1b4>
4000bc9c:	e5911000 	ldr	r1, [r1]
4000bca0:	e3510000 	cmp	r1, #0
4000bca4:	1a000006 	bne	4000bcc4 <_tx_event_flags_create+0x10c>
4000bca8:	e59f10c0 	ldr	r1, [pc, #192]	; 4000bd70 <_tx_event_flags_create+0x1b8>
4000bcac:	e5911000 	ldr	r1, [r1]
4000bcb0:	e5801000 	str	r1, [r0]
4000bcb4:	e5901000 	ldr	r1, [r0]
4000bcb8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bcbc:	e5801004 	str	r1, [r0, #4]
4000bcc0:	ea00000d 	b	4000bcfc <_tx_event_flags_create+0x144>
4000bcc4:	e59f10a0 	ldr	r1, [pc, #160]	; 4000bd6c <_tx_event_flags_create+0x1b4>
4000bcc8:	e5911000 	ldr	r1, [r1]
4000bccc:	e59f20a0 	ldr	r2, [pc, #160]	; 4000bd74 <_tx_event_flags_create+0x1bc>
4000bcd0:	e1510002 	cmp	r1, r2
4000bcd4:	2a000004 	bcs	4000bcec <_tx_event_flags_create+0x134>
4000bcd8:	e3e01000 	mvn	r1, #0
4000bcdc:	e5801000 	str	r1, [r0]
4000bce0:	e3a01000 	mov	r1, #0
4000bce4:	e5801004 	str	r1, [r0, #4]
4000bce8:	ea000003 	b	4000bcfc <_tx_event_flags_create+0x144>
4000bcec:	e59f1080 	ldr	r1, [pc, #128]	; 4000bd74 <_tx_event_flags_create+0x1bc>
4000bcf0:	e5801000 	str	r1, [r0]
4000bcf4:	e3a01000 	mov	r1, #0
4000bcf8:	e5801004 	str	r1, [r0, #4]
4000bcfc:	e3a0101e 	mov	r1, #30
4000bd00:	e5801008 	str	r1, [r0, #8]
4000bd04:	e5804010 	str	r4, [r0, #16]
4000bd08:	e28d1004 	add	r1, sp, #4
4000bd0c:	e5801014 	str	r1, [r0, #20]
4000bd10:	e3a01000 	mov	r1, #0
4000bd14:	e5801018 	str	r1, [r0, #24]
4000bd18:	e580101c 	str	r1, [r0, #28]
4000bd1c:	e2800020 	add	r0, r0, #32
4000bd20:	e59f1050 	ldr	r1, [pc, #80]	; 4000bd78 <_tx_event_flags_create+0x1c0>
4000bd24:	e5911000 	ldr	r1, [r1]
4000bd28:	e1500001 	cmp	r0, r1
4000bd2c:	3a000001 	bcc	4000bd38 <_tx_event_flags_create+0x180>
4000bd30:	e59f1044 	ldr	r1, [pc, #68]	; 4000bd7c <_tx_event_flags_create+0x1c4>
4000bd34:	e5910000 	ldr	r0, [r1]
4000bd38:	e59f1024 	ldr	r1, [pc, #36]	; 4000bd64 <_tx_event_flags_create+0x1ac>
4000bd3c:	e5810000 	str	r0, [r1]
4000bd40:	e59f1038 	ldr	r1, [pc, #56]	; 4000bd80 <_tx_event_flags_create+0x1c8>
4000bd44:	e5911000 	ldr	r1, [r1]
4000bd48:	e5810020 	str	r0, [r1, #32]
4000bd4c:	e121f006 	msr	CPSR_c, r6
4000bd50:	e3a00000 	mov	r0, #0
4000bd54:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000bd58:	4456444e 	.word	0x4456444e
4000bd5c:	40030ebc 	.word	0x40030ebc
4000bd60:	40030ec0 	.word	0x40030ec0
4000bd64:	40030ea4 	.word	0x40030ea4
4000bd68:	40030ea8 	.word	0x40030ea8
4000bd6c:	40030e30 	.word	0x40030e30
4000bd70:	40030e38 	.word	0x40030e38
4000bd74:	f0f0f0f0 	.word	0xf0f0f0f0
4000bd78:	40030ea0 	.word	0x40030ea0
4000bd7c:	40030e9c 	.word	0x40030e9c
4000bd80:	40030e90 	.word	0x40030e90

4000bd84 <_tx_event_flags_delete>:
4000bd84:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000bd88:	e1a04000 	mov	r4, r0
4000bd8c:	e10f5000 	mrs	r5, CPSR
4000bd90:	e3856080 	orr	r6, r5, #128	; 0x80
4000bd94:	e121f006 	msr	CPSR_c, r6
4000bd98:	e59f1204 	ldr	r1, [pc, #516]	; 4000bfa4 <_tx_event_flags_delete+0x220>
4000bd9c:	e5910000 	ldr	r0, [r1]
4000bda0:	e3500000 	cmp	r0, #0
4000bda4:	0a000031 	beq	4000be70 <_tx_event_flags_delete+0xec>
4000bda8:	e59f11f8 	ldr	r1, [pc, #504]	; 4000bfa8 <_tx_event_flags_delete+0x224>
4000bdac:	e5911000 	ldr	r1, [r1]
4000bdb0:	e2811001 	add	r1, r1, #1
4000bdb4:	e59f21ec 	ldr	r2, [pc, #492]	; 4000bfa8 <_tx_event_flags_delete+0x224>
4000bdb8:	e5821000 	str	r1, [r2]
4000bdbc:	e580100c 	str	r1, [r0, #12]
4000bdc0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000bfac <_tx_event_flags_delete+0x228>
4000bdc4:	e5911000 	ldr	r1, [r1]
4000bdc8:	e3510000 	cmp	r1, #0
4000bdcc:	1a000006 	bne	4000bdec <_tx_event_flags_delete+0x68>
4000bdd0:	e59f11d8 	ldr	r1, [pc, #472]	; 4000bfb0 <_tx_event_flags_delete+0x22c>
4000bdd4:	e5911000 	ldr	r1, [r1]
4000bdd8:	e5801000 	str	r1, [r0]
4000bddc:	e5901000 	ldr	r1, [r0]
4000bde0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bde4:	e5801004 	str	r1, [r0, #4]
4000bde8:	ea00000d 	b	4000be24 <_tx_event_flags_delete+0xa0>
4000bdec:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bfac <_tx_event_flags_delete+0x228>
4000bdf0:	e5911000 	ldr	r1, [r1]
4000bdf4:	e59f21b8 	ldr	r2, [pc, #440]	; 4000bfb4 <_tx_event_flags_delete+0x230>
4000bdf8:	e1510002 	cmp	r1, r2
4000bdfc:	2a000004 	bcs	4000be14 <_tx_event_flags_delete+0x90>
4000be00:	e3e01000 	mvn	r1, #0
4000be04:	e5801000 	str	r1, [r0]
4000be08:	e3a01000 	mov	r1, #0
4000be0c:	e5801004 	str	r1, [r0, #4]
4000be10:	ea000003 	b	4000be24 <_tx_event_flags_delete+0xa0>
4000be14:	e59f1198 	ldr	r1, [pc, #408]	; 4000bfb4 <_tx_event_flags_delete+0x230>
4000be18:	e5801000 	str	r1, [r0]
4000be1c:	e3a01000 	mov	r1, #0
4000be20:	e5801004 	str	r1, [r0, #4]
4000be24:	e3a0101f 	mov	r1, #31
4000be28:	e5801008 	str	r1, [r0, #8]
4000be2c:	e5804010 	str	r4, [r0, #16]
4000be30:	e580d014 	str	sp, [r0, #20]
4000be34:	e3a01000 	mov	r1, #0
4000be38:	e5801018 	str	r1, [r0, #24]
4000be3c:	e580101c 	str	r1, [r0, #28]
4000be40:	e2800020 	add	r0, r0, #32
4000be44:	e59f116c 	ldr	r1, [pc, #364]	; 4000bfb8 <_tx_event_flags_delete+0x234>
4000be48:	e5911000 	ldr	r1, [r1]
4000be4c:	e1500001 	cmp	r0, r1
4000be50:	3a000001 	bcc	4000be5c <_tx_event_flags_delete+0xd8>
4000be54:	e59f1160 	ldr	r1, [pc, #352]	; 4000bfbc <_tx_event_flags_delete+0x238>
4000be58:	e5910000 	ldr	r0, [r1]
4000be5c:	e59f1140 	ldr	r1, [pc, #320]	; 4000bfa4 <_tx_event_flags_delete+0x220>
4000be60:	e5810000 	str	r0, [r1]
4000be64:	e59f1154 	ldr	r1, [pc, #340]	; 4000bfc0 <_tx_event_flags_delete+0x23c>
4000be68:	e5911000 	ldr	r1, [r1]
4000be6c:	e5810020 	str	r0, [r1, #32]
4000be70:	e1a00004 	mov	r0, r4
4000be74:	eb001090 	bl	400100bc <_tx_trace_object_unregister>
4000be78:	e59f0144 	ldr	r0, [pc, #324]	; 4000bfc4 <_tx_event_flags_delete+0x240>
4000be7c:	e5900000 	ldr	r0, [r0]
4000be80:	e2400001 	sub	r0, r0, #1
4000be84:	e59f1138 	ldr	r1, [pc, #312]	; 4000bfc4 <_tx_event_flags_delete+0x240>
4000be88:	e5810000 	str	r0, [r1]
4000be8c:	e3a00000 	mov	r0, #0
4000be90:	e5840000 	str	r0, [r4]
4000be94:	e5940018 	ldr	r0, [r4, #24]
4000be98:	e1500004 	cmp	r0, r4
4000be9c:	1a000003 	bne	4000beb0 <_tx_event_flags_delete+0x12c>
4000bea0:	e3a00000 	mov	r0, #0
4000bea4:	e59f111c 	ldr	r1, [pc, #284]	; 4000bfc8 <_tx_event_flags_delete+0x244>
4000bea8:	e5810000 	str	r0, [r1]
4000beac:	ea00000c 	b	4000bee4 <_tx_event_flags_delete+0x160>
4000beb0:	e594001c 	ldr	r0, [r4, #28]
4000beb4:	e5941018 	ldr	r1, [r4, #24]
4000beb8:	e581001c 	str	r0, [r1, #28]
4000bebc:	e5940018 	ldr	r0, [r4, #24]
4000bec0:	e594101c 	ldr	r1, [r4, #28]
4000bec4:	e5810018 	str	r0, [r1, #24]
4000bec8:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bfc8 <_tx_event_flags_delete+0x244>
4000becc:	e5900000 	ldr	r0, [r0]
4000bed0:	e1500004 	cmp	r0, r4
4000bed4:	1a000002 	bne	4000bee4 <_tx_event_flags_delete+0x160>
4000bed8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000bfc8 <_tx_event_flags_delete+0x244>
4000bedc:	e5940018 	ldr	r0, [r4, #24]
4000bee0:	e5810000 	str	r0, [r1]
4000bee4:	e59f00e0 	ldr	r0, [pc, #224]	; 4000bfcc <_tx_event_flags_delete+0x248>
4000bee8:	e5900000 	ldr	r0, [r0]
4000beec:	e2800001 	add	r0, r0, #1
4000bef0:	e59f10d4 	ldr	r1, [pc, #212]	; 4000bfcc <_tx_event_flags_delete+0x248>
4000bef4:	e5810000 	str	r0, [r1]
4000bef8:	e121f005 	msr	CPSR_c, r5
4000befc:	e5940010 	ldr	r0, [r4, #16]
4000bf00:	e58d0000 	str	r0, [sp]
4000bf04:	ea000017 	b	4000bf68 <_tx_event_flags_delete+0x1e4>
4000bf08:	e10f5000 	mrs	r5, CPSR
4000bf0c:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf10:	e121f006 	msr	CPSR_c, r6
4000bf14:	e3a00000 	mov	r0, #0
4000bf18:	e59d1000 	ldr	r1, [sp]
4000bf1c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000bf20:	e59f00a4 	ldr	r0, [pc, #164]	; 4000bfcc <_tx_event_flags_delete+0x248>
4000bf24:	e5900000 	ldr	r0, [r0]
4000bf28:	e2800001 	add	r0, r0, #1
4000bf2c:	e59f1098 	ldr	r1, [pc, #152]	; 4000bfcc <_tx_event_flags_delete+0x248>
4000bf30:	e5810000 	str	r0, [r1]
4000bf34:	e121f005 	msr	CPSR_c, r5
4000bf38:	e3a00001 	mov	r0, #1
4000bf3c:	e59d1000 	ldr	r1, [sp]
4000bf40:	e5810084 	str	r0, [r1, #132]	; 0x84
4000bf44:	e59d0000 	ldr	r0, [sp]
4000bf48:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000bf4c:	e58d0000 	str	r0, [sp]
4000bf50:	e59d1000 	ldr	r1, [sp]
4000bf54:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000bf58:	eb000c96 	bl	4000f1b8 <_tx_thread_system_resume>
4000bf5c:	e5940014 	ldr	r0, [r4, #20]
4000bf60:	e2400001 	sub	r0, r0, #1
4000bf64:	e5840014 	str	r0, [r4, #20]
4000bf68:	e5940014 	ldr	r0, [r4, #20]
4000bf6c:	e3500000 	cmp	r0, #0
4000bf70:	1affffe4 	bne	4000bf08 <_tx_event_flags_delete+0x184>
4000bf74:	e10f5000 	mrs	r5, CPSR
4000bf78:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf7c:	e121f006 	msr	CPSR_c, r6
4000bf80:	e59f0044 	ldr	r0, [pc, #68]	; 4000bfcc <_tx_event_flags_delete+0x248>
4000bf84:	e5900000 	ldr	r0, [r0]
4000bf88:	e2400001 	sub	r0, r0, #1
4000bf8c:	e59f1038 	ldr	r1, [pc, #56]	; 4000bfcc <_tx_event_flags_delete+0x248>
4000bf90:	e5810000 	str	r0, [r1]
4000bf94:	e121f005 	msr	CPSR_c, r5
4000bf98:	eb000c5a 	bl	4000f108 <_tx_thread_system_preempt_check>
4000bf9c:	e3a00000 	mov	r0, #0
4000bfa0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000bfa4:	40030ea4 	.word	0x40030ea4
4000bfa8:	40030ea8 	.word	0x40030ea8
4000bfac:	40030e30 	.word	0x40030e30
4000bfb0:	40030e38 	.word	0x40030e38
4000bfb4:	f0f0f0f0 	.word	0xf0f0f0f0
4000bfb8:	40030ea0 	.word	0x40030ea0
4000bfbc:	40030e9c 	.word	0x40030e9c
4000bfc0:	40030e90 	.word	0x40030e90
4000bfc4:	40030ec0 	.word	0x40030ec0
4000bfc8:	40030ebc 	.word	0x40030ebc
4000bfcc:	40030e54 	.word	0x40030e54

4000bfd0 <_tx_event_flags_get>:
4000bfd0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000bfd4:	e1a04000 	mov	r4, r0
4000bfd8:	e1a05001 	mov	r5, r1
4000bfdc:	e1a06002 	mov	r6, r2
4000bfe0:	e1a07003 	mov	r7, r3
4000bfe4:	e10f8000 	mrs	r8, CPSR
4000bfe8:	e3880080 	orr	r0, r8, #128	; 0x80
4000bfec:	e58d0004 	str	r0, [sp, #4]
4000bff0:	e59d0004 	ldr	r0, [sp, #4]
4000bff4:	e121f000 	msr	CPSR_c, r0
4000bff8:	e59f1278 	ldr	r1, [pc, #632]	; 4000c278 <_tx_event_flags_get+0x2a8>
4000bffc:	e5910000 	ldr	r0, [r1]
4000c000:	e3500000 	cmp	r0, #0
4000c004:	0a000031 	beq	4000c0d0 <_tx_event_flags_get+0x100>
4000c008:	e59f126c 	ldr	r1, [pc, #620]	; 4000c27c <_tx_event_flags_get+0x2ac>
4000c00c:	e5911000 	ldr	r1, [r1]
4000c010:	e2811001 	add	r1, r1, #1
4000c014:	e59f2260 	ldr	r2, [pc, #608]	; 4000c27c <_tx_event_flags_get+0x2ac>
4000c018:	e5821000 	str	r1, [r2]
4000c01c:	e580100c 	str	r1, [r0, #12]
4000c020:	e59f1258 	ldr	r1, [pc, #600]	; 4000c280 <_tx_event_flags_get+0x2b0>
4000c024:	e5911000 	ldr	r1, [r1]
4000c028:	e3510000 	cmp	r1, #0
4000c02c:	1a000006 	bne	4000c04c <_tx_event_flags_get+0x7c>
4000c030:	e59f124c 	ldr	r1, [pc, #588]	; 4000c284 <_tx_event_flags_get+0x2b4>
4000c034:	e5911000 	ldr	r1, [r1]
4000c038:	e5801000 	str	r1, [r0]
4000c03c:	e5901000 	ldr	r1, [r0]
4000c040:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c044:	e5801004 	str	r1, [r0, #4]
4000c048:	ea00000d 	b	4000c084 <_tx_event_flags_get+0xb4>
4000c04c:	e59f122c 	ldr	r1, [pc, #556]	; 4000c280 <_tx_event_flags_get+0x2b0>
4000c050:	e5911000 	ldr	r1, [r1]
4000c054:	e59f222c 	ldr	r2, [pc, #556]	; 4000c288 <_tx_event_flags_get+0x2b8>
4000c058:	e1510002 	cmp	r1, r2
4000c05c:	2a000004 	bcs	4000c074 <_tx_event_flags_get+0xa4>
4000c060:	e3e01000 	mvn	r1, #0
4000c064:	e5801000 	str	r1, [r0]
4000c068:	e3a01000 	mov	r1, #0
4000c06c:	e5801004 	str	r1, [r0, #4]
4000c070:	ea000003 	b	4000c084 <_tx_event_flags_get+0xb4>
4000c074:	e59f120c 	ldr	r1, [pc, #524]	; 4000c288 <_tx_event_flags_get+0x2b8>
4000c078:	e5801000 	str	r1, [r0]
4000c07c:	e3a01000 	mov	r1, #0
4000c080:	e5801004 	str	r1, [r0, #4]
4000c084:	e3a01020 	mov	r1, #32
4000c088:	e5801008 	str	r1, [r0, #8]
4000c08c:	e5804010 	str	r4, [r0, #16]
4000c090:	e5805014 	str	r5, [r0, #20]
4000c094:	e5941008 	ldr	r1, [r4, #8]
4000c098:	e5801018 	str	r1, [r0, #24]
4000c09c:	e580601c 	str	r6, [r0, #28]
4000c0a0:	e2800020 	add	r0, r0, #32
4000c0a4:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c28c <_tx_event_flags_get+0x2bc>
4000c0a8:	e5911000 	ldr	r1, [r1]
4000c0ac:	e1500001 	cmp	r0, r1
4000c0b0:	3a000001 	bcc	4000c0bc <_tx_event_flags_get+0xec>
4000c0b4:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c290 <_tx_event_flags_get+0x2c0>
4000c0b8:	e5910000 	ldr	r0, [r1]
4000c0bc:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c278 <_tx_event_flags_get+0x2a8>
4000c0c0:	e5810000 	str	r0, [r1]
4000c0c4:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c294 <_tx_event_flags_get+0x2c4>
4000c0c8:	e5911000 	ldr	r1, [r1]
4000c0cc:	e5810020 	str	r0, [r1, #32]
4000c0d0:	e594a008 	ldr	sl, [r4, #8]
4000c0d4:	e594b020 	ldr	fp, [r4, #32]
4000c0d8:	e35b0000 	cmp	fp, #0
4000c0dc:	0a000000 	beq	4000c0e4 <_tx_event_flags_get+0x114>
4000c0e0:	e1caa00b 	bic	sl, sl, fp
4000c0e4:	e3160002 	tst	r6, #2
4000c0e8:	0a000006 	beq	4000c108 <_tx_event_flags_get+0x138>
4000c0ec:	e00a0005 	and	r0, sl, r5
4000c0f0:	e1500005 	cmp	r0, r5
4000c0f4:	1a000001 	bne	4000c100 <_tx_event_flags_get+0x130>
4000c0f8:	e3a09000 	mov	r9, #0
4000c0fc:	ea000006 	b	4000c11c <_tx_event_flags_get+0x14c>
4000c100:	e3a09007 	mov	r9, #7
4000c104:	ea000004 	b	4000c11c <_tx_event_flags_get+0x14c>
4000c108:	e11a0005 	tst	sl, r5
4000c10c:	0a000001 	beq	4000c118 <_tx_event_flags_get+0x148>
4000c110:	e3a09000 	mov	r9, #0
4000c114:	ea000000 	b	4000c11c <_tx_event_flags_get+0x14c>
4000c118:	e3a09007 	mov	r9, #7
4000c11c:	e3590000 	cmp	r9, #0
4000c120:	1a000010 	bne	4000c168 <_tx_event_flags_get+0x198>
4000c124:	e587a000 	str	sl, [r7]
4000c128:	e3160001 	tst	r6, #1
4000c12c:	0a00004e 	beq	4000c26c <_tx_event_flags_get+0x29c>
4000c130:	e5940014 	ldr	r0, [r4, #20]
4000c134:	e3500000 	cmp	r0, #0
4000c138:	0a000006 	beq	4000c158 <_tx_event_flags_get+0x188>
4000c13c:	e5940010 	ldr	r0, [r4, #16]
4000c140:	e3500000 	cmp	r0, #0
4000c144:	1a000003 	bne	4000c158 <_tx_event_flags_get+0x188>
4000c148:	e5940020 	ldr	r0, [r4, #32]
4000c14c:	e1800005 	orr	r0, r0, r5
4000c150:	e5840020 	str	r0, [r4, #32]
4000c154:	ea000044 	b	4000c26c <_tx_event_flags_get+0x29c>
4000c158:	e5940008 	ldr	r0, [r4, #8]
4000c15c:	e1c00005 	bic	r0, r0, r5
4000c160:	e5840008 	str	r0, [r4, #8]
4000c164:	ea000040 	b	4000c26c <_tx_event_flags_get+0x29c>
4000c168:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c16c:	e3500000 	cmp	r0, #0
4000c170:	0a00003c 	beq	4000c268 <_tx_event_flags_get+0x298>
4000c174:	e59f0108 	ldr	r0, [pc, #264]	; 4000c284 <_tx_event_flags_get+0x2b4>
4000c178:	e5900000 	ldr	r0, [r0]
4000c17c:	e58d0000 	str	r0, [sp]
4000c180:	e59f1110 	ldr	r1, [pc, #272]	; 4000c298 <_tx_event_flags_get+0x2c8>
4000c184:	e59d0000 	ldr	r0, [sp]
4000c188:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c18c:	e59d0000 	ldr	r0, [sp]
4000c190:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c194:	e59d0000 	ldr	r0, [sp]
4000c198:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c19c:	e59d0000 	ldr	r0, [sp]
4000c1a0:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c1a4:	e59d0000 	ldr	r0, [sp]
4000c1a8:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c1ac:	e5940010 	ldr	r0, [r4, #16]
4000c1b0:	e3500000 	cmp	r0, #0
4000c1b4:	0a00000e 	beq	4000c1f4 <_tx_event_flags_get+0x224>
4000c1b8:	e5941010 	ldr	r1, [r4, #16]
4000c1bc:	e59d0000 	ldr	r0, [sp]
4000c1c0:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c1c4:	e5940010 	ldr	r0, [r4, #16]
4000c1c8:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c1cc:	e59d0000 	ldr	r0, [sp]
4000c1d0:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c1d4:	e59d0000 	ldr	r0, [sp]
4000c1d8:	e5941010 	ldr	r1, [r4, #16]
4000c1dc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c1e0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c1e4:	e59d0000 	ldr	r0, [sp]
4000c1e8:	e5941010 	ldr	r1, [r4, #16]
4000c1ec:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c1f0:	ea000005 	b	4000c20c <_tx_event_flags_get+0x23c>
4000c1f4:	e59d0000 	ldr	r0, [sp]
4000c1f8:	e5840010 	str	r0, [r4, #16]
4000c1fc:	e59d0000 	ldr	r0, [sp]
4000c200:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c204:	e59d0000 	ldr	r0, [sp]
4000c208:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c20c:	e5940014 	ldr	r0, [r4, #20]
4000c210:	e2800001 	add	r0, r0, #1
4000c214:	e5840014 	str	r0, [r4, #20]
4000c218:	e3a00007 	mov	r0, #7
4000c21c:	e59d1000 	ldr	r1, [sp]
4000c220:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c224:	e3a01001 	mov	r1, #1
4000c228:	e59d0000 	ldr	r0, [sp]
4000c22c:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c230:	e59d0000 	ldr	r0, [sp]
4000c234:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c238:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c23c:	e59f0058 	ldr	r0, [pc, #88]	; 4000c29c <_tx_event_flags_get+0x2cc>
4000c240:	e5900000 	ldr	r0, [r0]
4000c244:	e2800001 	add	r0, r0, #1
4000c248:	e59f104c 	ldr	r1, [pc, #76]	; 4000c29c <_tx_event_flags_get+0x2cc>
4000c24c:	e5810000 	str	r0, [r1]
4000c250:	e121f008 	msr	CPSR_c, r8
4000c254:	e59d0000 	ldr	r0, [sp]
4000c258:	ebfff22f 	bl	40008b1c <_tx_thread_system_suspend>
4000c25c:	e59d0000 	ldr	r0, [sp]
4000c260:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c264:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c268:	e3a09007 	mov	r9, #7
4000c26c:	e121f008 	msr	CPSR_c, r8
4000c270:	e1a00009 	mov	r0, r9
4000c274:	eafffffa 	b	4000c264 <_tx_event_flags_get+0x294>
4000c278:	40030ea4 	.word	0x40030ea4
4000c27c:	40030ea8 	.word	0x40030ea8
4000c280:	40030e30 	.word	0x40030e30
4000c284:	40030e38 	.word	0x40030e38
4000c288:	f0f0f0f0 	.word	0xf0f0f0f0
4000c28c:	40030ea0 	.word	0x40030ea0
4000c290:	40030e9c 	.word	0x40030e9c
4000c294:	40030e90 	.word	0x40030e90
4000c298:	400101c8 	.word	0x400101c8
4000c29c:	40030e54 	.word	0x40030e54

4000c2a0 <_tx_event_flags_set>:
4000c2a0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c2a4:	e24dd01c 	sub	sp, sp, #28
4000c2a8:	e1a04000 	mov	r4, r0
4000c2ac:	e1a05001 	mov	r5, r1
4000c2b0:	e1a06002 	mov	r6, r2
4000c2b4:	e10f7000 	mrs	r7, CPSR
4000c2b8:	e3870080 	orr	r0, r7, #128	; 0x80
4000c2bc:	e58d0018 	str	r0, [sp, #24]
4000c2c0:	e59d0018 	ldr	r0, [sp, #24]
4000c2c4:	e121f000 	msr	CPSR_c, r0
4000c2c8:	e59f1594 	ldr	r1, [pc, #1428]	; 4000c864 <_tx_event_flags_set+0x5c4>
4000c2cc:	e5910000 	ldr	r0, [r1]
4000c2d0:	e3500000 	cmp	r0, #0
4000c2d4:	0a000031 	beq	4000c3a0 <_tx_event_flags_set+0x100>
4000c2d8:	e59f1588 	ldr	r1, [pc, #1416]	; 4000c868 <_tx_event_flags_set+0x5c8>
4000c2dc:	e5911000 	ldr	r1, [r1]
4000c2e0:	e2811001 	add	r1, r1, #1
4000c2e4:	e59f257c 	ldr	r2, [pc, #1404]	; 4000c868 <_tx_event_flags_set+0x5c8>
4000c2e8:	e5821000 	str	r1, [r2]
4000c2ec:	e580100c 	str	r1, [r0, #12]
4000c2f0:	e59f1574 	ldr	r1, [pc, #1396]	; 4000c86c <_tx_event_flags_set+0x5cc>
4000c2f4:	e5911000 	ldr	r1, [r1]
4000c2f8:	e3510000 	cmp	r1, #0
4000c2fc:	1a000006 	bne	4000c31c <_tx_event_flags_set+0x7c>
4000c300:	e59f1568 	ldr	r1, [pc, #1384]	; 4000c870 <_tx_event_flags_set+0x5d0>
4000c304:	e5911000 	ldr	r1, [r1]
4000c308:	e5801000 	str	r1, [r0]
4000c30c:	e5901000 	ldr	r1, [r0]
4000c310:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c314:	e5801004 	str	r1, [r0, #4]
4000c318:	ea00000d 	b	4000c354 <_tx_event_flags_set+0xb4>
4000c31c:	e59f1548 	ldr	r1, [pc, #1352]	; 4000c86c <_tx_event_flags_set+0x5cc>
4000c320:	e5911000 	ldr	r1, [r1]
4000c324:	e59f2548 	ldr	r2, [pc, #1352]	; 4000c874 <_tx_event_flags_set+0x5d4>
4000c328:	e1510002 	cmp	r1, r2
4000c32c:	2a000004 	bcs	4000c344 <_tx_event_flags_set+0xa4>
4000c330:	e3e01000 	mvn	r1, #0
4000c334:	e5801000 	str	r1, [r0]
4000c338:	e3a01000 	mov	r1, #0
4000c33c:	e5801004 	str	r1, [r0, #4]
4000c340:	ea000003 	b	4000c354 <_tx_event_flags_set+0xb4>
4000c344:	e59f1528 	ldr	r1, [pc, #1320]	; 4000c874 <_tx_event_flags_set+0x5d4>
4000c348:	e5801000 	str	r1, [r0]
4000c34c:	e3a01000 	mov	r1, #0
4000c350:	e5801004 	str	r1, [r0, #4]
4000c354:	e3a01024 	mov	r1, #36	; 0x24
4000c358:	e5801008 	str	r1, [r0, #8]
4000c35c:	e5804010 	str	r4, [r0, #16]
4000c360:	e5805014 	str	r5, [r0, #20]
4000c364:	e5806018 	str	r6, [r0, #24]
4000c368:	e5941014 	ldr	r1, [r4, #20]
4000c36c:	e580101c 	str	r1, [r0, #28]
4000c370:	e2800020 	add	r0, r0, #32
4000c374:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000c878 <_tx_event_flags_set+0x5d8>
4000c378:	e5911000 	ldr	r1, [r1]
4000c37c:	e1500001 	cmp	r0, r1
4000c380:	3a000001 	bcc	4000c38c <_tx_event_flags_set+0xec>
4000c384:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000c87c <_tx_event_flags_set+0x5dc>
4000c388:	e5910000 	ldr	r0, [r1]
4000c38c:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000c864 <_tx_event_flags_set+0x5c4>
4000c390:	e5810000 	str	r0, [r1]
4000c394:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000c880 <_tx_event_flags_set+0x5e0>
4000c398:	e5911000 	ldr	r1, [r1]
4000c39c:	e5810020 	str	r0, [r1, #32]
4000c3a0:	e3160002 	tst	r6, #2
4000c3a4:	0a000011 	beq	4000c3f0 <_tx_event_flags_set+0x150>
4000c3a8:	e5940014 	ldr	r0, [r4, #20]
4000c3ac:	e3500000 	cmp	r0, #0
4000c3b0:	0a000007 	beq	4000c3d4 <_tx_event_flags_set+0x134>
4000c3b4:	e5940010 	ldr	r0, [r4, #16]
4000c3b8:	e3500000 	cmp	r0, #0
4000c3bc:	1a000004 	bne	4000c3d4 <_tx_event_flags_set+0x134>
4000c3c0:	e1e01005 	mvn	r1, r5
4000c3c4:	e5940020 	ldr	r0, [r4, #32]
4000c3c8:	e1800001 	orr	r0, r0, r1
4000c3cc:	e5840020 	str	r0, [r4, #32]
4000c3d0:	ea000002 	b	4000c3e0 <_tx_event_flags_set+0x140>
4000c3d4:	e5940008 	ldr	r0, [r4, #8]
4000c3d8:	e0000005 	and	r0, r0, r5
4000c3dc:	e5840008 	str	r0, [r4, #8]
4000c3e0:	e121f007 	msr	CPSR_c, r7
4000c3e4:	e3a00000 	mov	r0, #0
4000c3e8:	e28dd01c 	add	sp, sp, #28
4000c3ec:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c3f0:	e5940008 	ldr	r0, [r4, #8]
4000c3f4:	e1800005 	orr	r0, r0, r5
4000c3f8:	e5840008 	str	r0, [r4, #8]
4000c3fc:	e5940020 	ldr	r0, [r4, #32]
4000c400:	e3500000 	cmp	r0, #0
4000c404:	0a000002 	beq	4000c414 <_tx_event_flags_set+0x174>
4000c408:	e5940020 	ldr	r0, [r4, #32]
4000c40c:	e1c00005 	bic	r0, r0, r5
4000c410:	e5840020 	str	r0, [r4, #32]
4000c414:	e5940010 	ldr	r0, [r4, #16]
4000c418:	e3500000 	cmp	r0, #0
4000c41c:	0a000102 	beq	4000c82c <_tx_event_flags_set+0x58c>
4000c420:	e5940014 	ldr	r0, [r4, #20]
4000c424:	e3500001 	cmp	r0, #1
4000c428:	1a000048 	bne	4000c550 <_tx_event_flags_set+0x2b0>
4000c42c:	e5940010 	ldr	r0, [r4, #16]
4000c430:	e58d0014 	str	r0, [sp, #20]
4000c434:	e59d0014 	ldr	r0, [sp, #20]
4000c438:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c43c:	e3100002 	tst	r0, #2
4000c440:	0a00000b 	beq	4000c474 <_tx_event_flags_set+0x1d4>
4000c444:	e5940008 	ldr	r0, [r4, #8]
4000c448:	e59d1014 	ldr	r1, [sp, #20]
4000c44c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c450:	e0000001 	and	r0, r0, r1
4000c454:	e59d1014 	ldr	r1, [sp, #20]
4000c458:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c45c:	e1500001 	cmp	r0, r1
4000c460:	1a000001 	bne	4000c46c <_tx_event_flags_set+0x1cc>
4000c464:	e3a08000 	mov	r8, #0
4000c468:	ea000009 	b	4000c494 <_tx_event_flags_set+0x1f4>
4000c46c:	e3a08007 	mov	r8, #7
4000c470:	ea000007 	b	4000c494 <_tx_event_flags_set+0x1f4>
4000c474:	e5940008 	ldr	r0, [r4, #8]
4000c478:	e59d1014 	ldr	r1, [sp, #20]
4000c47c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c480:	e1100001 	tst	r0, r1
4000c484:	0a000001 	beq	4000c490 <_tx_event_flags_set+0x1f0>
4000c488:	e3a08000 	mov	r8, #0
4000c48c:	ea000000 	b	4000c494 <_tx_event_flags_set+0x1f4>
4000c490:	e3a08007 	mov	r8, #7
4000c494:	e3580000 	cmp	r8, #0
4000c498:	1a000024 	bne	4000c530 <_tx_event_flags_set+0x290>
4000c49c:	e5941008 	ldr	r1, [r4, #8]
4000c4a0:	e59d0014 	ldr	r0, [sp, #20]
4000c4a4:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c4a8:	e5801000 	str	r1, [r0]
4000c4ac:	e59d0014 	ldr	r0, [sp, #20]
4000c4b0:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c4b4:	e3100001 	tst	r0, #1
4000c4b8:	0a000004 	beq	4000c4d0 <_tx_event_flags_set+0x230>
4000c4bc:	e5940008 	ldr	r0, [r4, #8]
4000c4c0:	e59d1014 	ldr	r1, [sp, #20]
4000c4c4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c4c8:	e1c00001 	bic	r0, r0, r1
4000c4cc:	e5840008 	str	r0, [r4, #8]
4000c4d0:	e3a00000 	mov	r0, #0
4000c4d4:	e5840010 	str	r0, [r4, #16]
4000c4d8:	e5840014 	str	r0, [r4, #20]
4000c4dc:	e3a01000 	mov	r1, #0
4000c4e0:	e59d0014 	ldr	r0, [sp, #20]
4000c4e4:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c4e8:	e59f0394 	ldr	r0, [pc, #916]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c4ec:	e5900000 	ldr	r0, [r0]
4000c4f0:	e2800001 	add	r0, r0, #1
4000c4f4:	e59f1388 	ldr	r1, [pc, #904]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c4f8:	e5810000 	str	r0, [r1]
4000c4fc:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c500:	e121f007 	msr	CPSR_c, r7
4000c504:	e35b0000 	cmp	fp, #0
4000c508:	0a000001 	beq	4000c514 <_tx_event_flags_set+0x274>
4000c50c:	e1a00004 	mov	r0, r4
4000c510:	e12fff3b 	blx	fp
4000c514:	e3a00000 	mov	r0, #0
4000c518:	e59d1014 	ldr	r1, [sp, #20]
4000c51c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c520:	e59d0014 	ldr	r0, [sp, #20]
4000c524:	eb000b23 	bl	4000f1b8 <_tx_thread_system_resume>
4000c528:	e3a00000 	mov	r0, #0
4000c52c:	eaffffad 	b	4000c3e8 <_tx_event_flags_set+0x148>
4000c530:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c534:	e121f007 	msr	CPSR_c, r7
4000c538:	e35b0000 	cmp	fp, #0
4000c53c:	0a000001 	beq	4000c548 <_tx_event_flags_set+0x2a8>
4000c540:	e1a00004 	mov	r0, r4
4000c544:	e12fff3b 	blx	fp
4000c548:	e3a00000 	mov	r0, #0
4000c54c:	eaffffa5 	b	4000c3e8 <_tx_event_flags_set+0x148>
4000c550:	e5940010 	ldr	r0, [r4, #16]
4000c554:	e58d0004 	str	r0, [sp, #4]
4000c558:	e59d0004 	ldr	r0, [sp, #4]
4000c55c:	e58d0014 	str	r0, [sp, #20]
4000c560:	e3a00000 	mov	r0, #0
4000c564:	e5840010 	str	r0, [r4, #16]
4000c568:	e58d000c 	str	r0, [sp, #12]
4000c56c:	e58d0008 	str	r0, [sp, #8]
4000c570:	e5940014 	ldr	r0, [r4, #20]
4000c574:	e58d0000 	str	r0, [sp]
4000c578:	e5949008 	ldr	r9, [r4, #8]
4000c57c:	e59f0300 	ldr	r0, [pc, #768]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c580:	e5900000 	ldr	r0, [r0]
4000c584:	e2800001 	add	r0, r0, #1
4000c588:	e59f12f4 	ldr	r1, [pc, #756]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c58c:	e5810000 	str	r0, [r1]
4000c590:	e1a00000 	nop			; (mov r0, r0)
4000c594:	e121f007 	msr	CPSR_c, r7
4000c598:	e10f7000 	mrs	r7, CPSR
4000c59c:	e3870080 	orr	r0, r7, #128	; 0x80
4000c5a0:	e58d0018 	str	r0, [sp, #24]
4000c5a4:	e59d0018 	ldr	r0, [sp, #24]
4000c5a8:	e121f000 	msr	CPSR_c, r0
4000c5ac:	e594000c 	ldr	r0, [r4, #12]
4000c5b0:	e3500000 	cmp	r0, #0
4000c5b4:	0a00000b 	beq	4000c5e8 <_tx_event_flags_set+0x348>
4000c5b8:	e3a00000 	mov	r0, #0
4000c5bc:	e584000c 	str	r0, [r4, #12]
4000c5c0:	e59d0004 	ldr	r0, [sp, #4]
4000c5c4:	e58d0014 	str	r0, [sp, #20]
4000c5c8:	e5940014 	ldr	r0, [r4, #20]
4000c5cc:	e58d0000 	str	r0, [sp]
4000c5d0:	e5940008 	ldr	r0, [r4, #8]
4000c5d4:	e1899000 	orr	r9, r9, r0
4000c5d8:	e59d0014 	ldr	r0, [sp, #20]
4000c5dc:	e3500000 	cmp	r0, #0
4000c5e0:	1a000000 	bne	4000c5e8 <_tx_event_flags_set+0x348>
4000c5e4:	ea00005d 	b	4000c760 <_tx_event_flags_set+0x4c0>
4000c5e8:	e59d0014 	ldr	r0, [sp, #20]
4000c5ec:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c5f0:	e31a0002 	tst	sl, #2
4000c5f4:	0a00000a 	beq	4000c624 <_tx_event_flags_set+0x384>
4000c5f8:	e59d0014 	ldr	r0, [sp, #20]
4000c5fc:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c600:	e0000009 	and	r0, r0, r9
4000c604:	e59d1014 	ldr	r1, [sp, #20]
4000c608:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c60c:	e1500001 	cmp	r0, r1
4000c610:	1a000001 	bne	4000c61c <_tx_event_flags_set+0x37c>
4000c614:	e3a08000 	mov	r8, #0
4000c618:	ea000008 	b	4000c640 <_tx_event_flags_set+0x3a0>
4000c61c:	e3a08007 	mov	r8, #7
4000c620:	ea000006 	b	4000c640 <_tx_event_flags_set+0x3a0>
4000c624:	e59d0014 	ldr	r0, [sp, #20]
4000c628:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c62c:	e1100009 	tst	r0, r9
4000c630:	0a000001 	beq	4000c63c <_tx_event_flags_set+0x39c>
4000c634:	e3a08000 	mov	r8, #0
4000c638:	ea000000 	b	4000c640 <_tx_event_flags_set+0x3a0>
4000c63c:	e3a08007 	mov	r8, #7
4000c640:	e59d0014 	ldr	r0, [sp, #20]
4000c644:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c648:	e58d0010 	str	r0, [sp, #16]
4000c64c:	e3580000 	cmp	r8, #0
4000c650:	1a00003c 	bne	4000c748 <_tx_event_flags_set+0x4a8>
4000c654:	e59d0014 	ldr	r0, [sp, #20]
4000c658:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c65c:	e5809000 	str	r9, [r0]
4000c660:	e31a0001 	tst	sl, #1
4000c664:	0a000004 	beq	4000c67c <_tx_event_flags_set+0x3dc>
4000c668:	e5940008 	ldr	r0, [r4, #8]
4000c66c:	e59d1014 	ldr	r1, [sp, #20]
4000c670:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c674:	e1c00001 	bic	r0, r0, r1
4000c678:	e5840008 	str	r0, [r4, #8]
4000c67c:	e59d0014 	ldr	r0, [sp, #20]
4000c680:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c684:	e1510000 	cmp	r1, r0
4000c688:	1a000002 	bne	4000c698 <_tx_event_flags_set+0x3f8>
4000c68c:	e3a00000 	mov	r0, #0
4000c690:	e58d0004 	str	r0, [sp, #4]
4000c694:	ea000010 	b	4000c6dc <_tx_event_flags_set+0x43c>
4000c698:	e59d0004 	ldr	r0, [sp, #4]
4000c69c:	e59d1014 	ldr	r1, [sp, #20]
4000c6a0:	e1500001 	cmp	r0, r1
4000c6a4:	1a000002 	bne	4000c6b4 <_tx_event_flags_set+0x414>
4000c6a8:	e59d0014 	ldr	r0, [sp, #20]
4000c6ac:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c6b0:	e58d0004 	str	r0, [sp, #4]
4000c6b4:	e59d0014 	ldr	r0, [sp, #20]
4000c6b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c6bc:	e59d1014 	ldr	r1, [sp, #20]
4000c6c0:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c6c4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c6c8:	e59d0014 	ldr	r0, [sp, #20]
4000c6cc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c6d0:	e59d1014 	ldr	r1, [sp, #20]
4000c6d4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c6d8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c6dc:	e5940014 	ldr	r0, [r4, #20]
4000c6e0:	e2400001 	sub	r0, r0, #1
4000c6e4:	e5840014 	str	r0, [r4, #20]
4000c6e8:	e3a00000 	mov	r0, #0
4000c6ec:	e59d1014 	ldr	r1, [sp, #20]
4000c6f0:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c6f4:	e59d1014 	ldr	r1, [sp, #20]
4000c6f8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c6fc:	e59d000c 	ldr	r0, [sp, #12]
4000c700:	e3500000 	cmp	r0, #0
4000c704:	1a000007 	bne	4000c728 <_tx_event_flags_set+0x488>
4000c708:	e59d0014 	ldr	r0, [sp, #20]
4000c70c:	e58d000c 	str	r0, [sp, #12]
4000c710:	e59d0014 	ldr	r0, [sp, #20]
4000c714:	e58d0008 	str	r0, [sp, #8]
4000c718:	e3a01000 	mov	r1, #0
4000c71c:	e59d0014 	ldr	r0, [sp, #20]
4000c720:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c724:	ea000007 	b	4000c748 <_tx_event_flags_set+0x4a8>
4000c728:	e59d0014 	ldr	r0, [sp, #20]
4000c72c:	e59d1008 	ldr	r1, [sp, #8]
4000c730:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c734:	e3a00000 	mov	r0, #0
4000c738:	e59d1014 	ldr	r1, [sp, #20]
4000c73c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c740:	e59d0014 	ldr	r0, [sp, #20]
4000c744:	e58d0008 	str	r0, [sp, #8]
4000c748:	e59d0010 	ldr	r0, [sp, #16]
4000c74c:	e58d0014 	str	r0, [sp, #20]
4000c750:	e59d0000 	ldr	r0, [sp]
4000c754:	e2500001 	subs	r0, r0, #1
4000c758:	e58d0000 	str	r0, [sp]
4000c75c:	1affff8c 	bne	4000c594 <_tx_event_flags_set+0x2f4>
4000c760:	e1a00000 	nop			; (mov r0, r0)
4000c764:	e59d0004 	ldr	r0, [sp, #4]
4000c768:	e5840010 	str	r0, [r4, #16]
4000c76c:	e5940020 	ldr	r0, [r4, #32]
4000c770:	e3500000 	cmp	r0, #0
4000c774:	0a000005 	beq	4000c790 <_tx_event_flags_set+0x4f0>
4000c778:	e5940008 	ldr	r0, [r4, #8]
4000c77c:	e5941020 	ldr	r1, [r4, #32]
4000c780:	e1c00001 	bic	r0, r0, r1
4000c784:	e5840008 	str	r0, [r4, #8]
4000c788:	e3a00000 	mov	r0, #0
4000c78c:	e5840020 	str	r0, [r4, #32]
4000c790:	e121f007 	msr	CPSR_c, r7
4000c794:	e59d000c 	ldr	r0, [sp, #12]
4000c798:	e58d0014 	str	r0, [sp, #20]
4000c79c:	ea000011 	b	4000c7e8 <_tx_event_flags_set+0x548>
4000c7a0:	e59d0014 	ldr	r0, [sp, #20]
4000c7a4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c7a8:	e58d0010 	str	r0, [sp, #16]
4000c7ac:	e10f7000 	mrs	r7, CPSR
4000c7b0:	e3870080 	orr	r0, r7, #128	; 0x80
4000c7b4:	e58d0018 	str	r0, [sp, #24]
4000c7b8:	e59d0018 	ldr	r0, [sp, #24]
4000c7bc:	e121f000 	msr	CPSR_c, r0
4000c7c0:	e59f00bc 	ldr	r0, [pc, #188]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c7c4:	e5900000 	ldr	r0, [r0]
4000c7c8:	e2800001 	add	r0, r0, #1
4000c7cc:	e59f10b0 	ldr	r1, [pc, #176]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c7d0:	e5810000 	str	r0, [r1]
4000c7d4:	e121f007 	msr	CPSR_c, r7
4000c7d8:	e59d0014 	ldr	r0, [sp, #20]
4000c7dc:	eb000a75 	bl	4000f1b8 <_tx_thread_system_resume>
4000c7e0:	e59d0010 	ldr	r0, [sp, #16]
4000c7e4:	e58d0014 	str	r0, [sp, #20]
4000c7e8:	e59d0014 	ldr	r0, [sp, #20]
4000c7ec:	e3500000 	cmp	r0, #0
4000c7f0:	1affffea 	bne	4000c7a0 <_tx_event_flags_set+0x500>
4000c7f4:	e10f7000 	mrs	r7, CPSR
4000c7f8:	e3870080 	orr	r0, r7, #128	; 0x80
4000c7fc:	e58d0018 	str	r0, [sp, #24]
4000c800:	e59d0018 	ldr	r0, [sp, #24]
4000c804:	e121f000 	msr	CPSR_c, r0
4000c808:	e59f0074 	ldr	r0, [pc, #116]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c80c:	e5900000 	ldr	r0, [r0]
4000c810:	e2400001 	sub	r0, r0, #1
4000c814:	e59f1068 	ldr	r1, [pc, #104]	; 4000c884 <_tx_event_flags_set+0x5e4>
4000c818:	e5810000 	str	r0, [r1]
4000c81c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c820:	e121f007 	msr	CPSR_c, r7
4000c824:	eb000a37 	bl	4000f108 <_tx_thread_system_preempt_check>
4000c828:	ea000007 	b	4000c84c <_tx_event_flags_set+0x5ac>
4000c82c:	e5940014 	ldr	r0, [r4, #20]
4000c830:	e3500000 	cmp	r0, #0
4000c834:	0a000002 	beq	4000c844 <_tx_event_flags_set+0x5a4>
4000c838:	e594000c 	ldr	r0, [r4, #12]
4000c83c:	e2800001 	add	r0, r0, #1
4000c840:	e584000c 	str	r0, [r4, #12]
4000c844:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c848:	e121f007 	msr	CPSR_c, r7
4000c84c:	e35b0000 	cmp	fp, #0
4000c850:	0a000001 	beq	4000c85c <_tx_event_flags_set+0x5bc>
4000c854:	e1a00004 	mov	r0, r4
4000c858:	e12fff3b 	blx	fp
4000c85c:	e3a00000 	mov	r0, #0
4000c860:	eafffee0 	b	4000c3e8 <_tx_event_flags_set+0x148>
4000c864:	40030ea4 	.word	0x40030ea4
4000c868:	40030ea8 	.word	0x40030ea8
4000c86c:	40030e30 	.word	0x40030e30
4000c870:	40030e38 	.word	0x40030e38
4000c874:	f0f0f0f0 	.word	0xf0f0f0f0
4000c878:	40030ea0 	.word	0x40030ea0
4000c87c:	40030e9c 	.word	0x40030e9c
4000c880:	40030e90 	.word	0x40030e90
4000c884:	40030e54 	.word	0x40030e54

4000c888 <_tx_initialize_high_level>:
4000c888:	e92d4010 	push	{r4, lr}
4000c88c:	ebfff38a 	bl	400096bc <_tx_trace_initialize>
4000c890:	ebffeff0 	bl	40008858 <_tx_thread_initialize>
4000c894:	ebfff26b 	bl	40009248 <_tx_timer_initialize>
4000c898:	e3a00000 	mov	r0, #0
4000c89c:	e59f105c 	ldr	r1, [pc, #92]	; 4000c900 <_tx_initialize_high_level+0x78>
4000c8a0:	e5810000 	str	r0, [r1]
4000c8a4:	e59f1058 	ldr	r1, [pc, #88]	; 4000c904 <_tx_initialize_high_level+0x7c>
4000c8a8:	e5810000 	str	r0, [r1]
4000c8ac:	e59f1054 	ldr	r1, [pc, #84]	; 4000c908 <_tx_initialize_high_level+0x80>
4000c8b0:	e5810000 	str	r0, [r1]
4000c8b4:	e59f1050 	ldr	r1, [pc, #80]	; 4000c90c <_tx_initialize_high_level+0x84>
4000c8b8:	e5810000 	str	r0, [r1]
4000c8bc:	e59f104c 	ldr	r1, [pc, #76]	; 4000c910 <_tx_initialize_high_level+0x88>
4000c8c0:	e5810000 	str	r0, [r1]
4000c8c4:	e59f1048 	ldr	r1, [pc, #72]	; 4000c914 <_tx_initialize_high_level+0x8c>
4000c8c8:	e5810000 	str	r0, [r1]
4000c8cc:	e59f1044 	ldr	r1, [pc, #68]	; 4000c918 <_tx_initialize_high_level+0x90>
4000c8d0:	e5810000 	str	r0, [r1]
4000c8d4:	e59f1040 	ldr	r1, [pc, #64]	; 4000c91c <_tx_initialize_high_level+0x94>
4000c8d8:	e5810000 	str	r0, [r1]
4000c8dc:	e59f103c 	ldr	r1, [pc, #60]	; 4000c920 <_tx_initialize_high_level+0x98>
4000c8e0:	e5810000 	str	r0, [r1]
4000c8e4:	e59f1038 	ldr	r1, [pc, #56]	; 4000c924 <_tx_initialize_high_level+0x9c>
4000c8e8:	e5810000 	str	r0, [r1]
4000c8ec:	e59f1034 	ldr	r1, [pc, #52]	; 4000c928 <_tx_initialize_high_level+0xa0>
4000c8f0:	e5810000 	str	r0, [r1]
4000c8f4:	e59f1030 	ldr	r1, [pc, #48]	; 4000c92c <_tx_initialize_high_level+0xa4>
4000c8f8:	e5810000 	str	r0, [r1]
4000c8fc:	e8bd8010 	pop	{r4, pc}
4000c900:	40030eac 	.word	0x40030eac
4000c904:	40030eb0 	.word	0x40030eb0
4000c908:	40030eb4 	.word	0x40030eb4
4000c90c:	40030eb8 	.word	0x40030eb8
4000c910:	40030ebc 	.word	0x40030ebc
4000c914:	40030ec0 	.word	0x40030ec0
4000c918:	40030ecc 	.word	0x40030ecc
4000c91c:	40030ed0 	.word	0x40030ed0
4000c920:	40030ed4 	.word	0x40030ed4
4000c924:	40030ed8 	.word	0x40030ed8
4000c928:	40030ec4 	.word	0x40030ec4
4000c92c:	40030ec8 	.word	0x40030ec8

4000c930 <_tx_mutex_create>:
4000c930:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000c934:	e1a04000 	mov	r4, r0
4000c938:	e1a05001 	mov	r5, r1
4000c93c:	e1a06002 	mov	r6, r2
4000c940:	e3a01038 	mov	r1, #56	; 0x38
4000c944:	e1a00004 	mov	r0, r4
4000c948:	eb001ada 	bl	400134b8 <__aeabi_memclr4>
4000c94c:	e5845004 	str	r5, [r4, #4]
4000c950:	e5846010 	str	r6, [r4, #16]
4000c954:	e10f7000 	mrs	r7, CPSR
4000c958:	e3878080 	orr	r8, r7, #128	; 0x80
4000c95c:	e121f008 	msr	CPSR_c, r8
4000c960:	e59f0174 	ldr	r0, [pc, #372]	; 4000cadc <_tx_mutex_create+0x1ac>
4000c964:	e5840000 	str	r0, [r4]
4000c968:	e59f0170 	ldr	r0, [pc, #368]	; 4000cae0 <_tx_mutex_create+0x1b0>
4000c96c:	e5900000 	ldr	r0, [r0]
4000c970:	e3500000 	cmp	r0, #0
4000c974:	0a00000e 	beq	4000c9b4 <_tx_mutex_create+0x84>
4000c978:	e59f0160 	ldr	r0, [pc, #352]	; 4000cae0 <_tx_mutex_create+0x1b0>
4000c97c:	e5900000 	ldr	r0, [r0]
4000c980:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000c984:	e58d0004 	str	r0, [sp, #4]
4000c988:	e59f0150 	ldr	r0, [pc, #336]	; 4000cae0 <_tx_mutex_create+0x1b0>
4000c98c:	e5900000 	ldr	r0, [r0]
4000c990:	e5804028 	str	r4, [r0, #40]	; 0x28
4000c994:	e59d0004 	ldr	r0, [sp, #4]
4000c998:	e5804024 	str	r4, [r0, #36]	; 0x24
4000c99c:	e59d0004 	ldr	r0, [sp, #4]
4000c9a0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000c9a4:	e59f0134 	ldr	r0, [pc, #308]	; 4000cae0 <_tx_mutex_create+0x1b0>
4000c9a8:	e5900000 	ldr	r0, [r0]
4000c9ac:	e5840024 	str	r0, [r4, #36]	; 0x24
4000c9b0:	ea000003 	b	4000c9c4 <_tx_mutex_create+0x94>
4000c9b4:	e59f0124 	ldr	r0, [pc, #292]	; 4000cae0 <_tx_mutex_create+0x1b0>
4000c9b8:	e5804000 	str	r4, [r0]
4000c9bc:	e5844024 	str	r4, [r4, #36]	; 0x24
4000c9c0:	e5844028 	str	r4, [r4, #40]	; 0x28
4000c9c4:	e59f0118 	ldr	r0, [pc, #280]	; 4000cae4 <_tx_mutex_create+0x1b4>
4000c9c8:	e5900000 	ldr	r0, [r0]
4000c9cc:	e2800001 	add	r0, r0, #1
4000c9d0:	e59f110c 	ldr	r1, [pc, #268]	; 4000cae4 <_tx_mutex_create+0x1b4>
4000c9d4:	e5810000 	str	r0, [r1]
4000c9d8:	e3a03000 	mov	r3, #0
4000c9dc:	e58d3000 	str	r3, [sp]
4000c9e0:	e1a03006 	mov	r3, r6
4000c9e4:	e1a02005 	mov	r2, r5
4000c9e8:	e1a01004 	mov	r1, r4
4000c9ec:	e3a00005 	mov	r0, #5
4000c9f0:	eb000d46 	bl	4000ff10 <_tx_trace_object_register>
4000c9f4:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cae8 <_tx_mutex_create+0x1b8>
4000c9f8:	e5910000 	ldr	r0, [r1]
4000c9fc:	e3500000 	cmp	r0, #0
4000ca00:	0a000032 	beq	4000cad0 <_tx_mutex_create+0x1a0>
4000ca04:	e59f10e0 	ldr	r1, [pc, #224]	; 4000caec <_tx_mutex_create+0x1bc>
4000ca08:	e5911000 	ldr	r1, [r1]
4000ca0c:	e2811001 	add	r1, r1, #1
4000ca10:	e59f20d4 	ldr	r2, [pc, #212]	; 4000caec <_tx_mutex_create+0x1bc>
4000ca14:	e5821000 	str	r1, [r2]
4000ca18:	e580100c 	str	r1, [r0, #12]
4000ca1c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000caf0 <_tx_mutex_create+0x1c0>
4000ca20:	e5911000 	ldr	r1, [r1]
4000ca24:	e3510000 	cmp	r1, #0
4000ca28:	1a000006 	bne	4000ca48 <_tx_mutex_create+0x118>
4000ca2c:	e59f10c0 	ldr	r1, [pc, #192]	; 4000caf4 <_tx_mutex_create+0x1c4>
4000ca30:	e5911000 	ldr	r1, [r1]
4000ca34:	e5801000 	str	r1, [r0]
4000ca38:	e5901000 	ldr	r1, [r0]
4000ca3c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ca40:	e5801004 	str	r1, [r0, #4]
4000ca44:	ea00000d 	b	4000ca80 <_tx_mutex_create+0x150>
4000ca48:	e59f10a0 	ldr	r1, [pc, #160]	; 4000caf0 <_tx_mutex_create+0x1c0>
4000ca4c:	e5911000 	ldr	r1, [r1]
4000ca50:	e59f20a0 	ldr	r2, [pc, #160]	; 4000caf8 <_tx_mutex_create+0x1c8>
4000ca54:	e1510002 	cmp	r1, r2
4000ca58:	2a000004 	bcs	4000ca70 <_tx_mutex_create+0x140>
4000ca5c:	e3e01000 	mvn	r1, #0
4000ca60:	e5801000 	str	r1, [r0]
4000ca64:	e3a01000 	mov	r1, #0
4000ca68:	e5801004 	str	r1, [r0, #4]
4000ca6c:	ea000003 	b	4000ca80 <_tx_mutex_create+0x150>
4000ca70:	e59f1080 	ldr	r1, [pc, #128]	; 4000caf8 <_tx_mutex_create+0x1c8>
4000ca74:	e5801000 	str	r1, [r0]
4000ca78:	e3a01000 	mov	r1, #0
4000ca7c:	e5801004 	str	r1, [r0, #4]
4000ca80:	e3a01032 	mov	r1, #50	; 0x32
4000ca84:	e5801008 	str	r1, [r0, #8]
4000ca88:	e5804010 	str	r4, [r0, #16]
4000ca8c:	e5806014 	str	r6, [r0, #20]
4000ca90:	e28d1004 	add	r1, sp, #4
4000ca94:	e5801018 	str	r1, [r0, #24]
4000ca98:	e3a01000 	mov	r1, #0
4000ca9c:	e580101c 	str	r1, [r0, #28]
4000caa0:	e2800020 	add	r0, r0, #32
4000caa4:	e59f1050 	ldr	r1, [pc, #80]	; 4000cafc <_tx_mutex_create+0x1cc>
4000caa8:	e5911000 	ldr	r1, [r1]
4000caac:	e1500001 	cmp	r0, r1
4000cab0:	3a000001 	bcc	4000cabc <_tx_mutex_create+0x18c>
4000cab4:	e59f1044 	ldr	r1, [pc, #68]	; 4000cb00 <_tx_mutex_create+0x1d0>
4000cab8:	e5910000 	ldr	r0, [r1]
4000cabc:	e59f1024 	ldr	r1, [pc, #36]	; 4000cae8 <_tx_mutex_create+0x1b8>
4000cac0:	e5810000 	str	r0, [r1]
4000cac4:	e59f1038 	ldr	r1, [pc, #56]	; 4000cb04 <_tx_mutex_create+0x1d4>
4000cac8:	e5911000 	ldr	r1, [r1]
4000cacc:	e5810020 	str	r0, [r1, #32]
4000cad0:	e121f007 	msr	CPSR_c, r7
4000cad4:	e3a00000 	mov	r0, #0
4000cad8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000cadc:	4d555445 	.word	0x4d555445
4000cae0:	40030ec4 	.word	0x40030ec4
4000cae4:	40030ec8 	.word	0x40030ec8
4000cae8:	40030ea4 	.word	0x40030ea4
4000caec:	40030ea8 	.word	0x40030ea8
4000caf0:	40030e30 	.word	0x40030e30
4000caf4:	40030e38 	.word	0x40030e38
4000caf8:	f0f0f0f0 	.word	0xf0f0f0f0
4000cafc:	40030ea0 	.word	0x40030ea0
4000cb00:	40030e9c 	.word	0x40030e9c
4000cb04:	40030e90 	.word	0x40030e90

4000cb08 <_tx_mutex_delete>:
4000cb08:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cb0c:	e1a04000 	mov	r4, r0
4000cb10:	e10f5000 	mrs	r5, CPSR
4000cb14:	e3856080 	orr	r6, r5, #128	; 0x80
4000cb18:	e121f006 	msr	CPSR_c, r6
4000cb1c:	e59f1294 	ldr	r1, [pc, #660]	; 4000cdb8 <_tx_mutex_delete+0x2b0>
4000cb20:	e5910000 	ldr	r0, [r1]
4000cb24:	e3500000 	cmp	r0, #0
4000cb28:	0a000031 	beq	4000cbf4 <_tx_mutex_delete+0xec>
4000cb2c:	e59f1288 	ldr	r1, [pc, #648]	; 4000cdbc <_tx_mutex_delete+0x2b4>
4000cb30:	e5911000 	ldr	r1, [r1]
4000cb34:	e2811001 	add	r1, r1, #1
4000cb38:	e59f227c 	ldr	r2, [pc, #636]	; 4000cdbc <_tx_mutex_delete+0x2b4>
4000cb3c:	e5821000 	str	r1, [r2]
4000cb40:	e580100c 	str	r1, [r0, #12]
4000cb44:	e59f1274 	ldr	r1, [pc, #628]	; 4000cdc0 <_tx_mutex_delete+0x2b8>
4000cb48:	e5911000 	ldr	r1, [r1]
4000cb4c:	e3510000 	cmp	r1, #0
4000cb50:	1a000006 	bne	4000cb70 <_tx_mutex_delete+0x68>
4000cb54:	e59f1268 	ldr	r1, [pc, #616]	; 4000cdc4 <_tx_mutex_delete+0x2bc>
4000cb58:	e5911000 	ldr	r1, [r1]
4000cb5c:	e5801000 	str	r1, [r0]
4000cb60:	e5901000 	ldr	r1, [r0]
4000cb64:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cb68:	e5801004 	str	r1, [r0, #4]
4000cb6c:	ea00000d 	b	4000cba8 <_tx_mutex_delete+0xa0>
4000cb70:	e59f1248 	ldr	r1, [pc, #584]	; 4000cdc0 <_tx_mutex_delete+0x2b8>
4000cb74:	e5911000 	ldr	r1, [r1]
4000cb78:	e59f2248 	ldr	r2, [pc, #584]	; 4000cdc8 <_tx_mutex_delete+0x2c0>
4000cb7c:	e1510002 	cmp	r1, r2
4000cb80:	2a000004 	bcs	4000cb98 <_tx_mutex_delete+0x90>
4000cb84:	e3e01000 	mvn	r1, #0
4000cb88:	e5801000 	str	r1, [r0]
4000cb8c:	e3a01000 	mov	r1, #0
4000cb90:	e5801004 	str	r1, [r0, #4]
4000cb94:	ea000003 	b	4000cba8 <_tx_mutex_delete+0xa0>
4000cb98:	e59f1228 	ldr	r1, [pc, #552]	; 4000cdc8 <_tx_mutex_delete+0x2c0>
4000cb9c:	e5801000 	str	r1, [r0]
4000cba0:	e3a01000 	mov	r1, #0
4000cba4:	e5801004 	str	r1, [r0, #4]
4000cba8:	e3a01033 	mov	r1, #51	; 0x33
4000cbac:	e5801008 	str	r1, [r0, #8]
4000cbb0:	e5804010 	str	r4, [r0, #16]
4000cbb4:	e580d014 	str	sp, [r0, #20]
4000cbb8:	e3a01000 	mov	r1, #0
4000cbbc:	e5801018 	str	r1, [r0, #24]
4000cbc0:	e580101c 	str	r1, [r0, #28]
4000cbc4:	e2800020 	add	r0, r0, #32
4000cbc8:	e59f11fc 	ldr	r1, [pc, #508]	; 4000cdcc <_tx_mutex_delete+0x2c4>
4000cbcc:	e5911000 	ldr	r1, [r1]
4000cbd0:	e1500001 	cmp	r0, r1
4000cbd4:	3a000001 	bcc	4000cbe0 <_tx_mutex_delete+0xd8>
4000cbd8:	e59f11f0 	ldr	r1, [pc, #496]	; 4000cdd0 <_tx_mutex_delete+0x2c8>
4000cbdc:	e5910000 	ldr	r0, [r1]
4000cbe0:	e59f11d0 	ldr	r1, [pc, #464]	; 4000cdb8 <_tx_mutex_delete+0x2b0>
4000cbe4:	e5810000 	str	r0, [r1]
4000cbe8:	e59f11e4 	ldr	r1, [pc, #484]	; 4000cdd4 <_tx_mutex_delete+0x2cc>
4000cbec:	e5911000 	ldr	r1, [r1]
4000cbf0:	e5810020 	str	r0, [r1, #32]
4000cbf4:	e1a00004 	mov	r0, r4
4000cbf8:	eb000d2f 	bl	400100bc <_tx_trace_object_unregister>
4000cbfc:	e59f01d4 	ldr	r0, [pc, #468]	; 4000cdd8 <_tx_mutex_delete+0x2d0>
4000cc00:	e5900000 	ldr	r0, [r0]
4000cc04:	e2400001 	sub	r0, r0, #1
4000cc08:	e59f11c8 	ldr	r1, [pc, #456]	; 4000cdd8 <_tx_mutex_delete+0x2d0>
4000cc0c:	e5810000 	str	r0, [r1]
4000cc10:	e3a00000 	mov	r0, #0
4000cc14:	e5840000 	str	r0, [r4]
4000cc18:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc1c:	e1500004 	cmp	r0, r4
4000cc20:	1a000003 	bne	4000cc34 <_tx_mutex_delete+0x12c>
4000cc24:	e3a00000 	mov	r0, #0
4000cc28:	e59f11ac 	ldr	r1, [pc, #428]	; 4000cddc <_tx_mutex_delete+0x2d4>
4000cc2c:	e5810000 	str	r0, [r1]
4000cc30:	ea00000c 	b	4000cc68 <_tx_mutex_delete+0x160>
4000cc34:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cc38:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cc3c:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cc40:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc44:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cc48:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cc4c:	e59f0188 	ldr	r0, [pc, #392]	; 4000cddc <_tx_mutex_delete+0x2d4>
4000cc50:	e5900000 	ldr	r0, [r0]
4000cc54:	e1500004 	cmp	r0, r4
4000cc58:	1a000002 	bne	4000cc68 <_tx_mutex_delete+0x160>
4000cc5c:	e59f1178 	ldr	r1, [pc, #376]	; 4000cddc <_tx_mutex_delete+0x2d4>
4000cc60:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc64:	e5810000 	str	r0, [r1]
4000cc68:	e594000c 	ldr	r0, [r4, #12]
4000cc6c:	e58d0000 	str	r0, [sp]
4000cc70:	e5940010 	ldr	r0, [r4, #16]
4000cc74:	e3500000 	cmp	r0, #0
4000cc78:	0a00001c 	beq	4000ccf0 <_tx_mutex_delete+0x1e8>
4000cc7c:	e59d0000 	ldr	r0, [sp]
4000cc80:	e3500000 	cmp	r0, #0
4000cc84:	0a000019 	beq	4000ccf0 <_tx_mutex_delete+0x1e8>
4000cc88:	e59d0000 	ldr	r0, [sp]
4000cc8c:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cc90:	e2400001 	sub	r0, r0, #1
4000cc94:	e59d1000 	ldr	r1, [sp]
4000cc98:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000cc9c:	e59d0000 	ldr	r0, [sp]
4000cca0:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cca4:	e3500000 	cmp	r0, #0
4000cca8:	1a000003 	bne	4000ccbc <_tx_mutex_delete+0x1b4>
4000ccac:	e3a00000 	mov	r0, #0
4000ccb0:	e59d1000 	ldr	r1, [sp]
4000ccb4:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000ccb8:	ea00000c 	b	4000ccf0 <_tx_mutex_delete+0x1e8>
4000ccbc:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000ccc0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ccc4:	e5810034 	str	r0, [r1, #52]	; 0x34
4000ccc8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cccc:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000ccd0:	e5810030 	str	r0, [r1, #48]	; 0x30
4000ccd4:	e59d0000 	ldr	r0, [sp]
4000ccd8:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000ccdc:	e1500004 	cmp	r0, r4
4000cce0:	1a000002 	bne	4000ccf0 <_tx_mutex_delete+0x1e8>
4000cce4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cce8:	e59d1000 	ldr	r1, [sp]
4000ccec:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000ccf0:	e3a00000 	mov	r0, #0
4000ccf4:	e584000c 	str	r0, [r4, #12]
4000ccf8:	e59f00e0 	ldr	r0, [pc, #224]	; 4000cde0 <_tx_mutex_delete+0x2d8>
4000ccfc:	e5900000 	ldr	r0, [r0]
4000cd00:	e2800001 	add	r0, r0, #1
4000cd04:	e59f10d4 	ldr	r1, [pc, #212]	; 4000cde0 <_tx_mutex_delete+0x2d8>
4000cd08:	e5810000 	str	r0, [r1]
4000cd0c:	e121f005 	msr	CPSR_c, r5
4000cd10:	e594001c 	ldr	r0, [r4, #28]
4000cd14:	e58d0000 	str	r0, [sp]
4000cd18:	ea000017 	b	4000cd7c <_tx_mutex_delete+0x274>
4000cd1c:	e10f5000 	mrs	r5, CPSR
4000cd20:	e3856080 	orr	r6, r5, #128	; 0x80
4000cd24:	e121f006 	msr	CPSR_c, r6
4000cd28:	e3a00000 	mov	r0, #0
4000cd2c:	e59d1000 	ldr	r1, [sp]
4000cd30:	e5810068 	str	r0, [r1, #104]	; 0x68
4000cd34:	e59f00a4 	ldr	r0, [pc, #164]	; 4000cde0 <_tx_mutex_delete+0x2d8>
4000cd38:	e5900000 	ldr	r0, [r0]
4000cd3c:	e2800001 	add	r0, r0, #1
4000cd40:	e59f1098 	ldr	r1, [pc, #152]	; 4000cde0 <_tx_mutex_delete+0x2d8>
4000cd44:	e5810000 	str	r0, [r1]
4000cd48:	e121f005 	msr	CPSR_c, r5
4000cd4c:	e3a00001 	mov	r0, #1
4000cd50:	e59d1000 	ldr	r1, [sp]
4000cd54:	e5810084 	str	r0, [r1, #132]	; 0x84
4000cd58:	e59d0000 	ldr	r0, [sp]
4000cd5c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cd60:	e58d0000 	str	r0, [sp]
4000cd64:	e59d1000 	ldr	r1, [sp]
4000cd68:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000cd6c:	eb000911 	bl	4000f1b8 <_tx_thread_system_resume>
4000cd70:	e5940020 	ldr	r0, [r4, #32]
4000cd74:	e2400001 	sub	r0, r0, #1
4000cd78:	e5840020 	str	r0, [r4, #32]
4000cd7c:	e5940020 	ldr	r0, [r4, #32]
4000cd80:	e3500000 	cmp	r0, #0
4000cd84:	1affffe4 	bne	4000cd1c <_tx_mutex_delete+0x214>
4000cd88:	e10f5000 	mrs	r5, CPSR
4000cd8c:	e3856080 	orr	r6, r5, #128	; 0x80
4000cd90:	e121f006 	msr	CPSR_c, r6
4000cd94:	e59f0044 	ldr	r0, [pc, #68]	; 4000cde0 <_tx_mutex_delete+0x2d8>
4000cd98:	e5900000 	ldr	r0, [r0]
4000cd9c:	e2400001 	sub	r0, r0, #1
4000cda0:	e59f1038 	ldr	r1, [pc, #56]	; 4000cde0 <_tx_mutex_delete+0x2d8>
4000cda4:	e5810000 	str	r0, [r1]
4000cda8:	e121f005 	msr	CPSR_c, r5
4000cdac:	eb0008d5 	bl	4000f108 <_tx_thread_system_preempt_check>
4000cdb0:	e3a00000 	mov	r0, #0
4000cdb4:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000cdb8:	40030ea4 	.word	0x40030ea4
4000cdbc:	40030ea8 	.word	0x40030ea8
4000cdc0:	40030e30 	.word	0x40030e30
4000cdc4:	40030e38 	.word	0x40030e38
4000cdc8:	f0f0f0f0 	.word	0xf0f0f0f0
4000cdcc:	40030ea0 	.word	0x40030ea0
4000cdd0:	40030e9c 	.word	0x40030e9c
4000cdd4:	40030e90 	.word	0x40030e90
4000cdd8:	40030ec8 	.word	0x40030ec8
4000cddc:	40030ec4 	.word	0x40030ec4
4000cde0:	40030e54 	.word	0x40030e54

4000cde4 <_tx_mutex_get>:
4000cde4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000cde8:	e1a04000 	mov	r4, r0
4000cdec:	e1a05001 	mov	r5, r1
4000cdf0:	e10f6000 	mrs	r6, CPSR
4000cdf4:	e3867080 	orr	r7, r6, #128	; 0x80
4000cdf8:	e121f007 	msr	CPSR_c, r7
4000cdfc:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d0b0 <_tx_mutex_get+0x2cc>
4000ce00:	e5910000 	ldr	r0, [r1]
4000ce04:	e3500000 	cmp	r0, #0
4000ce08:	0a000032 	beq	4000ced8 <_tx_mutex_get+0xf4>
4000ce0c:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d0b4 <_tx_mutex_get+0x2d0>
4000ce10:	e5911000 	ldr	r1, [r1]
4000ce14:	e2811001 	add	r1, r1, #1
4000ce18:	e59f2294 	ldr	r2, [pc, #660]	; 4000d0b4 <_tx_mutex_get+0x2d0>
4000ce1c:	e5821000 	str	r1, [r2]
4000ce20:	e580100c 	str	r1, [r0, #12]
4000ce24:	e59f128c 	ldr	r1, [pc, #652]	; 4000d0b8 <_tx_mutex_get+0x2d4>
4000ce28:	e5911000 	ldr	r1, [r1]
4000ce2c:	e3510000 	cmp	r1, #0
4000ce30:	1a000006 	bne	4000ce50 <_tx_mutex_get+0x6c>
4000ce34:	e59f1280 	ldr	r1, [pc, #640]	; 4000d0bc <_tx_mutex_get+0x2d8>
4000ce38:	e5911000 	ldr	r1, [r1]
4000ce3c:	e5801000 	str	r1, [r0]
4000ce40:	e5901000 	ldr	r1, [r0]
4000ce44:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ce48:	e5801004 	str	r1, [r0, #4]
4000ce4c:	ea00000d 	b	4000ce88 <_tx_mutex_get+0xa4>
4000ce50:	e59f1260 	ldr	r1, [pc, #608]	; 4000d0b8 <_tx_mutex_get+0x2d4>
4000ce54:	e5911000 	ldr	r1, [r1]
4000ce58:	e59f2260 	ldr	r2, [pc, #608]	; 4000d0c0 <_tx_mutex_get+0x2dc>
4000ce5c:	e1510002 	cmp	r1, r2
4000ce60:	2a000004 	bcs	4000ce78 <_tx_mutex_get+0x94>
4000ce64:	e3e01000 	mvn	r1, #0
4000ce68:	e5801000 	str	r1, [r0]
4000ce6c:	e3a01000 	mov	r1, #0
4000ce70:	e5801004 	str	r1, [r0, #4]
4000ce74:	ea000003 	b	4000ce88 <_tx_mutex_get+0xa4>
4000ce78:	e59f1240 	ldr	r1, [pc, #576]	; 4000d0c0 <_tx_mutex_get+0x2dc>
4000ce7c:	e5801000 	str	r1, [r0]
4000ce80:	e3a01000 	mov	r1, #0
4000ce84:	e5801004 	str	r1, [r0, #4]
4000ce88:	e3a01034 	mov	r1, #52	; 0x34
4000ce8c:	e5801008 	str	r1, [r0, #8]
4000ce90:	e5804010 	str	r4, [r0, #16]
4000ce94:	e5805014 	str	r5, [r0, #20]
4000ce98:	e594100c 	ldr	r1, [r4, #12]
4000ce9c:	e5801018 	str	r1, [r0, #24]
4000cea0:	e5941008 	ldr	r1, [r4, #8]
4000cea4:	e580101c 	str	r1, [r0, #28]
4000cea8:	e2800020 	add	r0, r0, #32
4000ceac:	e59f1210 	ldr	r1, [pc, #528]	; 4000d0c4 <_tx_mutex_get+0x2e0>
4000ceb0:	e5911000 	ldr	r1, [r1]
4000ceb4:	e1500001 	cmp	r0, r1
4000ceb8:	3a000001 	bcc	4000cec4 <_tx_mutex_get+0xe0>
4000cebc:	e59f1204 	ldr	r1, [pc, #516]	; 4000d0c8 <_tx_mutex_get+0x2e4>
4000cec0:	e5910000 	ldr	r0, [r1]
4000cec4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d0b0 <_tx_mutex_get+0x2cc>
4000cec8:	e5810000 	str	r0, [r1]
4000cecc:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d0cc <_tx_mutex_get+0x2e8>
4000ced0:	e5911000 	ldr	r1, [r1]
4000ced4:	e5810020 	str	r0, [r1, #32]
4000ced8:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d0bc <_tx_mutex_get+0x2d8>
4000cedc:	e5909000 	ldr	r9, [r0]
4000cee0:	e5940008 	ldr	r0, [r4, #8]
4000cee4:	e3500000 	cmp	r0, #0
4000cee8:	1a000025 	bne	4000cf84 <_tx_mutex_get+0x1a0>
4000ceec:	e3a00001 	mov	r0, #1
4000cef0:	e5840008 	str	r0, [r4, #8]
4000cef4:	e584900c 	str	r9, [r4, #12]
4000cef8:	e5940010 	ldr	r0, [r4, #16]
4000cefc:	e3500000 	cmp	r0, #0
4000cf00:	0a00001d 	beq	4000cf7c <_tx_mutex_get+0x198>
4000cf04:	e3590000 	cmp	r9, #0
4000cf08:	0a00001b 	beq	4000cf7c <_tx_mutex_get+0x198>
4000cf0c:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cf10:	e5840014 	str	r0, [r4, #20]
4000cf14:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cf18:	e5840018 	str	r0, [r4, #24]
4000cf1c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf20:	e3500000 	cmp	r0, #0
4000cf24:	0a000008 	beq	4000cf4c <_tx_mutex_get+0x168>
4000cf28:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf2c:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000cf30:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf34:	e5804034 	str	r4, [r0, #52]	; 0x34
4000cf38:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000cf3c:	e584a034 	str	sl, [r4, #52]	; 0x34
4000cf40:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf44:	e5840030 	str	r0, [r4, #48]	; 0x30
4000cf48:	ea000006 	b	4000cf68 <_tx_mutex_get+0x184>
4000cf4c:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000cf50:	e5844030 	str	r4, [r4, #48]	; 0x30
4000cf54:	e5844034 	str	r4, [r4, #52]	; 0x34
4000cf58:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cf5c:	e5890094 	str	r0, [r9, #148]	; 0x94
4000cf60:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cf64:	e5890098 	str	r0, [r9, #152]	; 0x98
4000cf68:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000cf6c:	e2800001 	add	r0, r0, #1
4000cf70:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000cf74:	e3a00020 	mov	r0, #32
4000cf78:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000cf7c:	e3a08000 	mov	r8, #0
4000cf80:	ea000047 	b	4000d0a4 <_tx_mutex_get+0x2c0>
4000cf84:	e594000c 	ldr	r0, [r4, #12]
4000cf88:	e1500009 	cmp	r0, r9
4000cf8c:	1a000004 	bne	4000cfa4 <_tx_mutex_get+0x1c0>
4000cf90:	e5940008 	ldr	r0, [r4, #8]
4000cf94:	e2800001 	add	r0, r0, #1
4000cf98:	e5840008 	str	r0, [r4, #8]
4000cf9c:	e3a08000 	mov	r8, #0
4000cfa0:	ea00003f 	b	4000d0a4 <_tx_mutex_get+0x2c0>
4000cfa4:	e3550000 	cmp	r5, #0
4000cfa8:	0a00003c 	beq	4000d0a0 <_tx_mutex_get+0x2bc>
4000cfac:	e59f011c 	ldr	r0, [pc, #284]	; 4000d0d0 <_tx_mutex_get+0x2ec>
4000cfb0:	e5890068 	str	r0, [r9, #104]	; 0x68
4000cfb4:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000cfb8:	e594001c 	ldr	r0, [r4, #28]
4000cfbc:	e3500000 	cmp	r0, #0
4000cfc0:	0a00000a 	beq	4000cff0 <_tx_mutex_get+0x20c>
4000cfc4:	e594001c 	ldr	r0, [r4, #28]
4000cfc8:	e5890070 	str	r0, [r9, #112]	; 0x70
4000cfcc:	e594001c 	ldr	r0, [r4, #28]
4000cfd0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000cfd4:	e5890074 	str	r0, [r9, #116]	; 0x74
4000cfd8:	e594001c 	ldr	r0, [r4, #28]
4000cfdc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000cfe0:	e5809070 	str	r9, [r0, #112]	; 0x70
4000cfe4:	e594001c 	ldr	r0, [r4, #28]
4000cfe8:	e5809074 	str	r9, [r0, #116]	; 0x74
4000cfec:	ea000002 	b	4000cffc <_tx_mutex_get+0x218>
4000cff0:	e584901c 	str	r9, [r4, #28]
4000cff4:	e5899070 	str	r9, [r9, #112]	; 0x70
4000cff8:	e5899074 	str	r9, [r9, #116]	; 0x74
4000cffc:	e5940020 	ldr	r0, [r4, #32]
4000d000:	e2800001 	add	r0, r0, #1
4000d004:	e5840020 	str	r0, [r4, #32]
4000d008:	e3a0000d 	mov	r0, #13
4000d00c:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d010:	e3a00001 	mov	r0, #1
4000d014:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d018:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d01c:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d0d4 <_tx_mutex_get+0x2f0>
4000d020:	e5900000 	ldr	r0, [r0]
4000d024:	e2800001 	add	r0, r0, #1
4000d028:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d0d4 <_tx_mutex_get+0x2f0>
4000d02c:	e5810000 	str	r0, [r1]
4000d030:	e121f006 	msr	CPSR_c, r6
4000d034:	e5940010 	ldr	r0, [r4, #16]
4000d038:	e3500000 	cmp	r0, #0
4000d03c:	0a000013 	beq	4000d090 <_tx_mutex_get+0x2ac>
4000d040:	e594000c 	ldr	r0, [r4, #12]
4000d044:	e3500000 	cmp	r0, #0
4000d048:	0a000010 	beq	4000d090 <_tx_mutex_get+0x2ac>
4000d04c:	e3590000 	cmp	r9, #0
4000d050:	0a00000e 	beq	4000d090 <_tx_mutex_get+0x2ac>
4000d054:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d058:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d05c:	e1500001 	cmp	r0, r1
4000d060:	9a000001 	bls	4000d06c <_tx_mutex_get+0x288>
4000d064:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d068:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d06c:	e594000c 	ldr	r0, [r4, #12]
4000d070:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d074:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d078:	e1500001 	cmp	r0, r1
4000d07c:	9a000003 	bls	4000d090 <_tx_mutex_get+0x2ac>
4000d080:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d084:	e1a01002 	mov	r1, r2
4000d088:	e594000c 	ldr	r0, [r4, #12]
4000d08c:	eb000011 	bl	4000d0d8 <_tx_mutex_priority_change>
4000d090:	e1a00009 	mov	r0, r9
4000d094:	ebffeea0 	bl	40008b1c <_tx_thread_system_suspend>
4000d098:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d09c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d0a0:	e3a0801d 	mov	r8, #29
4000d0a4:	e121f006 	msr	CPSR_c, r6
4000d0a8:	e1a00008 	mov	r0, r8
4000d0ac:	eafffffa 	b	4000d09c <_tx_mutex_get+0x2b8>
4000d0b0:	40030ea4 	.word	0x40030ea4
4000d0b4:	40030ea8 	.word	0x40030ea8
4000d0b8:	40030e30 	.word	0x40030e30
4000d0bc:	40030e38 	.word	0x40030e38
4000d0c0:	f0f0f0f0 	.word	0xf0f0f0f0
4000d0c4:	40030ea0 	.word	0x40030ea0
4000d0c8:	40030e9c 	.word	0x40030e9c
4000d0cc:	40030e90 	.word	0x40030e90
4000d0d0:	40010298 	.word	0x40010298
4000d0d4:	40030e54 	.word	0x40030e54

4000d0d8 <_tx_mutex_priority_change>:
4000d0d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d0dc:	e1a04000 	mov	r4, r0
4000d0e0:	e1a05001 	mov	r5, r1
4000d0e4:	e1a06002 	mov	r6, r2
4000d0e8:	e10f7000 	mrs	r7, CPSR
4000d0ec:	e3878080 	orr	r8, r7, #128	; 0x80
4000d0f0:	e121f008 	msr	CPSR_c, r8
4000d0f4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d0f8:	e3500000 	cmp	r0, #0
4000d0fc:	0a000003 	beq	4000d110 <_tx_mutex_priority_change+0x38>
4000d100:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d104:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d108:	e121f007 	msr	CPSR_c, r7
4000d10c:	ea000011 	b	4000d158 <_tx_mutex_priority_change+0x80>
4000d110:	e59f0044 	ldr	r0, [pc, #68]	; 4000d15c <_tx_mutex_priority_change+0x84>
4000d114:	e5900000 	ldr	r0, [r0]
4000d118:	e2800002 	add	r0, r0, #2
4000d11c:	e59f1038 	ldr	r1, [pc, #56]	; 4000d15c <_tx_mutex_priority_change+0x84>
4000d120:	e5810000 	str	r0, [r1]
4000d124:	e3a00003 	mov	r0, #3
4000d128:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d12c:	e3a00001 	mov	r0, #1
4000d130:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d134:	e3a00000 	mov	r0, #0
4000d138:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d13c:	e121f007 	msr	CPSR_c, r7
4000d140:	e1a00004 	mov	r0, r4
4000d144:	ebffee74 	bl	40008b1c <_tx_thread_system_suspend>
4000d148:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d14c:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d150:	e1a00004 	mov	r0, r4
4000d154:	eb000817 	bl	4000f1b8 <_tx_thread_system_resume>
4000d158:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d15c:	40030e54 	.word	0x40030e54

4000d160 <_tx_mutex_put>:
4000d160:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d164:	e1a04000 	mov	r4, r0
4000d168:	e10f5000 	mrs	r5, CPSR
4000d16c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d170:	e121f006 	msr	CPSR_c, r6
4000d174:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d610 <_tx_mutex_put+0x4b0>
4000d178:	e5910000 	ldr	r0, [r1]
4000d17c:	e3500000 	cmp	r0, #0
4000d180:	0a000032 	beq	4000d250 <_tx_mutex_put+0xf0>
4000d184:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d614 <_tx_mutex_put+0x4b4>
4000d188:	e5911000 	ldr	r1, [r1]
4000d18c:	e2811001 	add	r1, r1, #1
4000d190:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d614 <_tx_mutex_put+0x4b4>
4000d194:	e5821000 	str	r1, [r2]
4000d198:	e580100c 	str	r1, [r0, #12]
4000d19c:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d618 <_tx_mutex_put+0x4b8>
4000d1a0:	e5911000 	ldr	r1, [r1]
4000d1a4:	e3510000 	cmp	r1, #0
4000d1a8:	1a000006 	bne	4000d1c8 <_tx_mutex_put+0x68>
4000d1ac:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d61c <_tx_mutex_put+0x4bc>
4000d1b0:	e5911000 	ldr	r1, [r1]
4000d1b4:	e5801000 	str	r1, [r0]
4000d1b8:	e5901000 	ldr	r1, [r0]
4000d1bc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d1c0:	e5801004 	str	r1, [r0, #4]
4000d1c4:	ea00000d 	b	4000d200 <_tx_mutex_put+0xa0>
4000d1c8:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d618 <_tx_mutex_put+0x4b8>
4000d1cc:	e5911000 	ldr	r1, [r1]
4000d1d0:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d620 <_tx_mutex_put+0x4c0>
4000d1d4:	e1510002 	cmp	r1, r2
4000d1d8:	2a000004 	bcs	4000d1f0 <_tx_mutex_put+0x90>
4000d1dc:	e3e01000 	mvn	r1, #0
4000d1e0:	e5801000 	str	r1, [r0]
4000d1e4:	e3a01000 	mov	r1, #0
4000d1e8:	e5801004 	str	r1, [r0, #4]
4000d1ec:	ea000003 	b	4000d200 <_tx_mutex_put+0xa0>
4000d1f0:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d620 <_tx_mutex_put+0x4c0>
4000d1f4:	e5801000 	str	r1, [r0]
4000d1f8:	e3a01000 	mov	r1, #0
4000d1fc:	e5801004 	str	r1, [r0, #4]
4000d200:	e3a01039 	mov	r1, #57	; 0x39
4000d204:	e5801008 	str	r1, [r0, #8]
4000d208:	e5804010 	str	r4, [r0, #16]
4000d20c:	e594100c 	ldr	r1, [r4, #12]
4000d210:	e5801014 	str	r1, [r0, #20]
4000d214:	e5941008 	ldr	r1, [r4, #8]
4000d218:	e5801018 	str	r1, [r0, #24]
4000d21c:	e580d01c 	str	sp, [r0, #28]
4000d220:	e2800020 	add	r0, r0, #32
4000d224:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d624 <_tx_mutex_put+0x4c4>
4000d228:	e5911000 	ldr	r1, [r1]
4000d22c:	e1500001 	cmp	r0, r1
4000d230:	3a000001 	bcc	4000d23c <_tx_mutex_put+0xdc>
4000d234:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d628 <_tx_mutex_put+0x4c8>
4000d238:	e5910000 	ldr	r0, [r1]
4000d23c:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d610 <_tx_mutex_put+0x4b0>
4000d240:	e5810000 	str	r0, [r1]
4000d244:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d62c <_tx_mutex_put+0x4cc>
4000d248:	e5911000 	ldr	r1, [r1]
4000d24c:	e5810020 	str	r0, [r1, #32]
4000d250:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d61c <_tx_mutex_put+0x4bc>
4000d254:	e5907000 	ldr	r7, [r0]
4000d258:	e5940008 	ldr	r0, [r4, #8]
4000d25c:	e3500000 	cmp	r0, #0
4000d260:	0a0000e7 	beq	4000d604 <_tx_mutex_put+0x4a4>
4000d264:	e594000c 	ldr	r0, [r4, #12]
4000d268:	e1500007 	cmp	r0, r7
4000d26c:	1a0000e4 	bne	4000d604 <_tx_mutex_put+0x4a4>
4000d270:	e5940008 	ldr	r0, [r4, #8]
4000d274:	e2400001 	sub	r0, r0, #1
4000d278:	e5840008 	str	r0, [r4, #8]
4000d27c:	e5940008 	ldr	r0, [r4, #8]
4000d280:	e3500000 	cmp	r0, #0
4000d284:	0a000002 	beq	4000d294 <_tx_mutex_put+0x134>
4000d288:	e121f005 	msr	CPSR_c, r5
4000d28c:	e3a00000 	mov	r0, #0
4000d290:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d294:	e3a08000 	mov	r8, #0
4000d298:	e3a09000 	mov	r9, #0
4000d29c:	e3a0a000 	mov	sl, #0
4000d2a0:	e5940010 	ldr	r0, [r4, #16]
4000d2a4:	e3500000 	cmp	r0, #0
4000d2a8:	0a000033 	beq	4000d37c <_tx_mutex_put+0x21c>
4000d2ac:	e3570000 	cmp	r7, #0
4000d2b0:	0a000031 	beq	4000d37c <_tx_mutex_put+0x21c>
4000d2b4:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d2b8:	e2400001 	sub	r0, r0, #1
4000d2bc:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d2c0:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d2c4:	e3500000 	cmp	r0, #0
4000d2c8:	1a000002 	bne	4000d2d8 <_tx_mutex_put+0x178>
4000d2cc:	e3a00000 	mov	r0, #0
4000d2d0:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d2d4:	ea00000a 	b	4000d304 <_tx_mutex_put+0x1a4>
4000d2d8:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d2dc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d2e0:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d2e4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d2e8:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d2ec:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d2f0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d2f4:	e1500004 	cmp	r0, r4
4000d2f8:	1a000001 	bne	4000d304 <_tx_mutex_put+0x1a4>
4000d2fc:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d300:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d304:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d308:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d30c:	e59f031c 	ldr	r0, [pc, #796]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d310:	e5900000 	ldr	r0, [r0]
4000d314:	e2800001 	add	r0, r0, #1
4000d318:	e59f1310 	ldr	r1, [pc, #784]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d31c:	e5810000 	str	r0, [r1]
4000d320:	e121f005 	msr	CPSR_c, r5
4000d324:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d328:	ea000009 	b	4000d354 <_tx_mutex_put+0x1f4>
4000d32c:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d330:	e1500009 	cmp	r0, r9
4000d334:	2a000001 	bcs	4000d340 <_tx_mutex_put+0x1e0>
4000d338:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d33c:	e1a0a009 	mov	sl, r9
4000d340:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d344:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d348:	e150000b 	cmp	r0, fp
4000d34c:	1a000000 	bne	4000d354 <_tx_mutex_put+0x1f4>
4000d350:	e3a0b000 	mov	fp, #0
4000d354:	e35b0000 	cmp	fp, #0
4000d358:	1afffff3 	bne	4000d32c <_tx_mutex_put+0x1cc>
4000d35c:	e10f5000 	mrs	r5, CPSR
4000d360:	e3856080 	orr	r6, r5, #128	; 0x80
4000d364:	e121f006 	msr	CPSR_c, r6
4000d368:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d36c:	e5900000 	ldr	r0, [r0]
4000d370:	e2400001 	sub	r0, r0, #1
4000d374:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d378:	e5810000 	str	r0, [r1]
4000d37c:	e5940020 	ldr	r0, [r4, #32]
4000d380:	e3500001 	cmp	r0, #1
4000d384:	9a000012 	bls	4000d3d4 <_tx_mutex_put+0x274>
4000d388:	e5940010 	ldr	r0, [r4, #16]
4000d38c:	e3500000 	cmp	r0, #0
4000d390:	0a00000f 	beq	4000d3d4 <_tx_mutex_put+0x274>
4000d394:	e59f0294 	ldr	r0, [pc, #660]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d398:	e5900000 	ldr	r0, [r0]
4000d39c:	e2800001 	add	r0, r0, #1
4000d3a0:	e59f1288 	ldr	r1, [pc, #648]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d3a4:	e5810000 	str	r0, [r1]
4000d3a8:	e121f005 	msr	CPSR_c, r5
4000d3ac:	e1a00004 	mov	r0, r4
4000d3b0:	eb000bec 	bl	40010368 <_tx_mutex_prioritize>
4000d3b4:	e10f5000 	mrs	r5, CPSR
4000d3b8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d3bc:	e121f006 	msr	CPSR_c, r6
4000d3c0:	e59f0268 	ldr	r0, [pc, #616]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d3c4:	e5900000 	ldr	r0, [r0]
4000d3c8:	e2400001 	sub	r0, r0, #1
4000d3cc:	e59f125c 	ldr	r1, [pc, #604]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d3d0:	e5810000 	str	r0, [r1]
4000d3d4:	e594001c 	ldr	r0, [r4, #28]
4000d3d8:	e3500000 	cmp	r0, #0
4000d3dc:	1a000024 	bne	4000d474 <_tx_mutex_put+0x314>
4000d3e0:	e59f0248 	ldr	r0, [pc, #584]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d3e4:	e5900000 	ldr	r0, [r0]
4000d3e8:	e2800001 	add	r0, r0, #1
4000d3ec:	e59f123c 	ldr	r1, [pc, #572]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d3f0:	e5810000 	str	r0, [r1]
4000d3f4:	e121f005 	msr	CPSR_c, r5
4000d3f8:	e5940010 	ldr	r0, [r4, #16]
4000d3fc:	e3500000 	cmp	r0, #0
4000d400:	0a00000a 	beq	4000d430 <_tx_mutex_put+0x2d0>
4000d404:	e3a00020 	mov	r0, #32
4000d408:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d40c:	e3570000 	cmp	r7, #0
4000d410:	0a000006 	beq	4000d430 <_tx_mutex_put+0x2d0>
4000d414:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d418:	e1500009 	cmp	r0, r9
4000d41c:	0a000003 	beq	4000d430 <_tx_mutex_put+0x2d0>
4000d420:	e1a0200a 	mov	r2, sl
4000d424:	e1a01009 	mov	r1, r9
4000d428:	e594000c 	ldr	r0, [r4, #12]
4000d42c:	ebffff29 	bl	4000d0d8 <_tx_mutex_priority_change>
4000d430:	e10f5000 	mrs	r5, CPSR
4000d434:	e3856080 	orr	r6, r5, #128	; 0x80
4000d438:	e121f006 	msr	CPSR_c, r6
4000d43c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d440:	e5900000 	ldr	r0, [r0]
4000d444:	e2400001 	sub	r0, r0, #1
4000d448:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d44c:	e5810000 	str	r0, [r1]
4000d450:	e5940008 	ldr	r0, [r4, #8]
4000d454:	e3500000 	cmp	r0, #0
4000d458:	1a000001 	bne	4000d464 <_tx_mutex_put+0x304>
4000d45c:	e3a00000 	mov	r0, #0
4000d460:	e584000c 	str	r0, [r4, #12]
4000d464:	e121f005 	msr	CPSR_c, r5
4000d468:	eb000726 	bl	4000f108 <_tx_thread_system_preempt_check>
4000d46c:	e3a00000 	mov	r0, #0
4000d470:	eaffff86 	b	4000d290 <_tx_mutex_put+0x130>
4000d474:	e594701c 	ldr	r7, [r4, #28]
4000d478:	e5940010 	ldr	r0, [r4, #16]
4000d47c:	e3500000 	cmp	r0, #0
4000d480:	0a00001f 	beq	4000d504 <_tx_mutex_put+0x3a4>
4000d484:	e594800c 	ldr	r8, [r4, #12]
4000d488:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d48c:	e5840014 	str	r0, [r4, #20]
4000d490:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d494:	e5840018 	str	r0, [r4, #24]
4000d498:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d49c:	e3500000 	cmp	r0, #0
4000d4a0:	0a00000b 	beq	4000d4d4 <_tx_mutex_put+0x374>
4000d4a4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4a8:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d4ac:	e58d0000 	str	r0, [sp]
4000d4b0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4b4:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d4b8:	e59d0000 	ldr	r0, [sp]
4000d4bc:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d4c0:	e59d0000 	ldr	r0, [sp]
4000d4c4:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d4c8:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d4cc:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d4d0:	ea000006 	b	4000d4f0 <_tx_mutex_put+0x390>
4000d4d4:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d4d8:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d4dc:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d4e0:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d4e4:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d4e8:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d4ec:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d4f0:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d4f4:	e2800001 	add	r0, r0, #1
4000d4f8:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d4fc:	e3a00020 	mov	r0, #32
4000d500:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d504:	e3a00001 	mov	r0, #1
4000d508:	e5840008 	str	r0, [r4, #8]
4000d50c:	e584700c 	str	r7, [r4, #12]
4000d510:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d514:	e1500007 	cmp	r0, r7
4000d518:	1a000002 	bne	4000d528 <_tx_mutex_put+0x3c8>
4000d51c:	e3a00000 	mov	r0, #0
4000d520:	e584001c 	str	r0, [r4, #28]
4000d524:	ea000007 	b	4000d548 <_tx_mutex_put+0x3e8>
4000d528:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d52c:	e584001c 	str	r0, [r4, #28]
4000d530:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d534:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d538:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d53c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d540:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d544:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d548:	e5940020 	ldr	r0, [r4, #32]
4000d54c:	e2400001 	sub	r0, r0, #1
4000d550:	e5840020 	str	r0, [r4, #32]
4000d554:	e3a00000 	mov	r0, #0
4000d558:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d55c:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d560:	e5900000 	ldr	r0, [r0]
4000d564:	e2800001 	add	r0, r0, #1
4000d568:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d630 <_tx_mutex_put+0x4d0>
4000d56c:	e5810000 	str	r0, [r1]
4000d570:	e121f005 	msr	CPSR_c, r5
4000d574:	e3a00000 	mov	r0, #0
4000d578:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d57c:	e5940010 	ldr	r0, [r4, #16]
4000d580:	e3500000 	cmp	r0, #0
4000d584:	0a00001a 	beq	4000d5f4 <_tx_mutex_put+0x494>
4000d588:	e5940020 	ldr	r0, [r4, #32]
4000d58c:	e3500000 	cmp	r0, #0
4000d590:	0a00000e 	beq	4000d5d0 <_tx_mutex_put+0x470>
4000d594:	e5940020 	ldr	r0, [r4, #32]
4000d598:	e3500001 	cmp	r0, #1
4000d59c:	9a000001 	bls	4000d5a8 <_tx_mutex_put+0x448>
4000d5a0:	e1a00004 	mov	r0, r4
4000d5a4:	eb000b6f 	bl	40010368 <_tx_mutex_prioritize>
4000d5a8:	e10f5000 	mrs	r5, CPSR
4000d5ac:	e3856080 	orr	r6, r5, #128	; 0x80
4000d5b0:	e121f006 	msr	CPSR_c, r6
4000d5b4:	e594001c 	ldr	r0, [r4, #28]
4000d5b8:	e3500000 	cmp	r0, #0
4000d5bc:	0a000002 	beq	4000d5cc <_tx_mutex_put+0x46c>
4000d5c0:	e594001c 	ldr	r0, [r4, #28]
4000d5c4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d5c8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d5cc:	e121f005 	msr	CPSR_c, r5
4000d5d0:	e3580000 	cmp	r8, #0
4000d5d4:	0a000006 	beq	4000d5f4 <_tx_mutex_put+0x494>
4000d5d8:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d5dc:	e1500009 	cmp	r0, r9
4000d5e0:	0a000003 	beq	4000d5f4 <_tx_mutex_put+0x494>
4000d5e4:	e1a0200a 	mov	r2, sl
4000d5e8:	e1a01009 	mov	r1, r9
4000d5ec:	e1a00008 	mov	r0, r8
4000d5f0:	ebfffeb8 	bl	4000d0d8 <_tx_mutex_priority_change>
4000d5f4:	e1a00007 	mov	r0, r7
4000d5f8:	eb0006ee 	bl	4000f1b8 <_tx_thread_system_resume>
4000d5fc:	e3a00000 	mov	r0, #0
4000d600:	eaffff22 	b	4000d290 <_tx_mutex_put+0x130>
4000d604:	e121f005 	msr	CPSR_c, r5
4000d608:	e3a0001e 	mov	r0, #30
4000d60c:	eaffff1f 	b	4000d290 <_tx_mutex_put+0x130>
4000d610:	40030ea4 	.word	0x40030ea4
4000d614:	40030ea8 	.word	0x40030ea8
4000d618:	40030e30 	.word	0x40030e30
4000d61c:	40030e38 	.word	0x40030e38
4000d620:	f0f0f0f0 	.word	0xf0f0f0f0
4000d624:	40030ea0 	.word	0x40030ea0
4000d628:	40030e9c 	.word	0x40030e9c
4000d62c:	40030e90 	.word	0x40030e90
4000d630:	40030e54 	.word	0x40030e54

4000d634 <_tx_queue_create>:
4000d634:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d638:	e1a04000 	mov	r4, r0
4000d63c:	e1a05001 	mov	r5, r1
4000d640:	e1a06002 	mov	r6, r2
4000d644:	e1a07003 	mov	r7, r3
4000d648:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d64c:	e3a0103c 	mov	r1, #60	; 0x3c
4000d650:	e1a00004 	mov	r0, r4
4000d654:	eb001797 	bl	400134b8 <__aeabi_memclr4>
4000d658:	e5845004 	str	r5, [r4, #4]
4000d65c:	e5846008 	str	r6, [r4, #8]
4000d660:	e1a01106 	lsl	r1, r6, #2
4000d664:	e1a00008 	mov	r0, r8
4000d668:	eb000ca6 	bl	40010908 <__aeabi_uidivmod>
4000d66c:	e1a0b000 	mov	fp, r0
4000d670:	e000069b 	mul	r0, fp, r6
4000d674:	e58d0004 	str	r0, [sp, #4]
4000d678:	e5847018 	str	r7, [r4, #24]
4000d67c:	e59d0004 	ldr	r0, [sp, #4]
4000d680:	e0870100 	add	r0, r7, r0, lsl #2
4000d684:	e584001c 	str	r0, [r4, #28]
4000d688:	e5847020 	str	r7, [r4, #32]
4000d68c:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d690:	e584b014 	str	fp, [r4, #20]
4000d694:	e584b00c 	str	fp, [r4, #12]
4000d698:	e10f9000 	mrs	r9, CPSR
4000d69c:	e3890080 	orr	r0, r9, #128	; 0x80
4000d6a0:	e58d0008 	str	r0, [sp, #8]
4000d6a4:	e59d0008 	ldr	r0, [sp, #8]
4000d6a8:	e121f000 	msr	CPSR_c, r0
4000d6ac:	e59f0160 	ldr	r0, [pc, #352]	; 4000d814 <_tx_queue_create+0x1e0>
4000d6b0:	e5840000 	str	r0, [r4]
4000d6b4:	e59f015c 	ldr	r0, [pc, #348]	; 4000d818 <_tx_queue_create+0x1e4>
4000d6b8:	e5900000 	ldr	r0, [r0]
4000d6bc:	e3500000 	cmp	r0, #0
4000d6c0:	0a00000b 	beq	4000d6f4 <_tx_queue_create+0xc0>
4000d6c4:	e59f014c 	ldr	r0, [pc, #332]	; 4000d818 <_tx_queue_create+0x1e4>
4000d6c8:	e5900000 	ldr	r0, [r0]
4000d6cc:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d6d0:	e59f0140 	ldr	r0, [pc, #320]	; 4000d818 <_tx_queue_create+0x1e4>
4000d6d4:	e5900000 	ldr	r0, [r0]
4000d6d8:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d6dc:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d6e0:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d6e4:	e59f012c 	ldr	r0, [pc, #300]	; 4000d818 <_tx_queue_create+0x1e4>
4000d6e8:	e5900000 	ldr	r0, [r0]
4000d6ec:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d6f0:	ea000003 	b	4000d704 <_tx_queue_create+0xd0>
4000d6f4:	e59f011c 	ldr	r0, [pc, #284]	; 4000d818 <_tx_queue_create+0x1e4>
4000d6f8:	e5804000 	str	r4, [r0]
4000d6fc:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d700:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d704:	e59f0110 	ldr	r0, [pc, #272]	; 4000d81c <_tx_queue_create+0x1e8>
4000d708:	e5900000 	ldr	r0, [r0]
4000d70c:	e2800001 	add	r0, r0, #1
4000d710:	e59f1104 	ldr	r1, [pc, #260]	; 4000d81c <_tx_queue_create+0x1e8>
4000d714:	e5810000 	str	r0, [r1]
4000d718:	e3a03000 	mov	r3, #0
4000d71c:	e58d3000 	str	r3, [sp]
4000d720:	e1a03008 	mov	r3, r8
4000d724:	e1a02005 	mov	r2, r5
4000d728:	e1a01004 	mov	r1, r4
4000d72c:	e3a00003 	mov	r0, #3
4000d730:	eb0009f6 	bl	4000ff10 <_tx_trace_object_register>
4000d734:	e59f10e4 	ldr	r1, [pc, #228]	; 4000d820 <_tx_queue_create+0x1ec>
4000d738:	e5910000 	ldr	r0, [r1]
4000d73c:	e3500000 	cmp	r0, #0
4000d740:	0a000030 	beq	4000d808 <_tx_queue_create+0x1d4>
4000d744:	e59f10d8 	ldr	r1, [pc, #216]	; 4000d824 <_tx_queue_create+0x1f0>
4000d748:	e5911000 	ldr	r1, [r1]
4000d74c:	e2811001 	add	r1, r1, #1
4000d750:	e59f20cc 	ldr	r2, [pc, #204]	; 4000d824 <_tx_queue_create+0x1f0>
4000d754:	e5821000 	str	r1, [r2]
4000d758:	e580100c 	str	r1, [r0, #12]
4000d75c:	e59f10c4 	ldr	r1, [pc, #196]	; 4000d828 <_tx_queue_create+0x1f4>
4000d760:	e5911000 	ldr	r1, [r1]
4000d764:	e3510000 	cmp	r1, #0
4000d768:	1a000006 	bne	4000d788 <_tx_queue_create+0x154>
4000d76c:	e59f10b8 	ldr	r1, [pc, #184]	; 4000d82c <_tx_queue_create+0x1f8>
4000d770:	e5911000 	ldr	r1, [r1]
4000d774:	e5801000 	str	r1, [r0]
4000d778:	e5901000 	ldr	r1, [r0]
4000d77c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d780:	e5801004 	str	r1, [r0, #4]
4000d784:	ea00000d 	b	4000d7c0 <_tx_queue_create+0x18c>
4000d788:	e59f1098 	ldr	r1, [pc, #152]	; 4000d828 <_tx_queue_create+0x1f4>
4000d78c:	e5911000 	ldr	r1, [r1]
4000d790:	e59f2098 	ldr	r2, [pc, #152]	; 4000d830 <_tx_queue_create+0x1fc>
4000d794:	e1510002 	cmp	r1, r2
4000d798:	2a000004 	bcs	4000d7b0 <_tx_queue_create+0x17c>
4000d79c:	e3e01000 	mvn	r1, #0
4000d7a0:	e5801000 	str	r1, [r0]
4000d7a4:	e3a01000 	mov	r1, #0
4000d7a8:	e5801004 	str	r1, [r0, #4]
4000d7ac:	ea000003 	b	4000d7c0 <_tx_queue_create+0x18c>
4000d7b0:	e59f1078 	ldr	r1, [pc, #120]	; 4000d830 <_tx_queue_create+0x1fc>
4000d7b4:	e5801000 	str	r1, [r0]
4000d7b8:	e3a01000 	mov	r1, #0
4000d7bc:	e5801004 	str	r1, [r0, #4]
4000d7c0:	e3a0103c 	mov	r1, #60	; 0x3c
4000d7c4:	e5801008 	str	r1, [r0, #8]
4000d7c8:	e5804010 	str	r4, [r0, #16]
4000d7cc:	e5806014 	str	r6, [r0, #20]
4000d7d0:	e5807018 	str	r7, [r0, #24]
4000d7d4:	e580801c 	str	r8, [r0, #28]
4000d7d8:	e2800020 	add	r0, r0, #32
4000d7dc:	e59f1050 	ldr	r1, [pc, #80]	; 4000d834 <_tx_queue_create+0x200>
4000d7e0:	e5911000 	ldr	r1, [r1]
4000d7e4:	e1500001 	cmp	r0, r1
4000d7e8:	3a000001 	bcc	4000d7f4 <_tx_queue_create+0x1c0>
4000d7ec:	e59f1044 	ldr	r1, [pc, #68]	; 4000d838 <_tx_queue_create+0x204>
4000d7f0:	e5910000 	ldr	r0, [r1]
4000d7f4:	e59f1024 	ldr	r1, [pc, #36]	; 4000d820 <_tx_queue_create+0x1ec>
4000d7f8:	e5810000 	str	r0, [r1]
4000d7fc:	e59f1038 	ldr	r1, [pc, #56]	; 4000d83c <_tx_queue_create+0x208>
4000d800:	e5911000 	ldr	r1, [r1]
4000d804:	e5810020 	str	r0, [r1, #32]
4000d808:	e121f009 	msr	CPSR_c, r9
4000d80c:	e3a00000 	mov	r0, #0
4000d810:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d814:	51554555 	.word	0x51554555
4000d818:	40030eb4 	.word	0x40030eb4
4000d81c:	40030eb8 	.word	0x40030eb8
4000d820:	40030ea4 	.word	0x40030ea4
4000d824:	40030ea8 	.word	0x40030ea8
4000d828:	40030e30 	.word	0x40030e30
4000d82c:	40030e38 	.word	0x40030e38
4000d830:	f0f0f0f0 	.word	0xf0f0f0f0
4000d834:	40030ea0 	.word	0x40030ea0
4000d838:	40030e9c 	.word	0x40030e9c
4000d83c:	40030e90 	.word	0x40030e90

4000d840 <_tx_queue_front_send>:
4000d840:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000d844:	e1a04000 	mov	r4, r0
4000d848:	e1a05001 	mov	r5, r1
4000d84c:	e1a06002 	mov	r6, r2
4000d850:	e10f7000 	mrs	r7, CPSR
4000d854:	e3870080 	orr	r0, r7, #128	; 0x80
4000d858:	e58d0004 	str	r0, [sp, #4]
4000d85c:	e59d0004 	ldr	r0, [sp, #4]
4000d860:	e121f000 	msr	CPSR_c, r0
4000d864:	e59f1368 	ldr	r1, [pc, #872]	; 4000dbd4 <_tx_queue_front_send+0x394>
4000d868:	e5910000 	ldr	r0, [r1]
4000d86c:	e3500000 	cmp	r0, #0
4000d870:	0a000031 	beq	4000d93c <_tx_queue_front_send+0xfc>
4000d874:	e59f135c 	ldr	r1, [pc, #860]	; 4000dbd8 <_tx_queue_front_send+0x398>
4000d878:	e5911000 	ldr	r1, [r1]
4000d87c:	e2811001 	add	r1, r1, #1
4000d880:	e59f2350 	ldr	r2, [pc, #848]	; 4000dbd8 <_tx_queue_front_send+0x398>
4000d884:	e5821000 	str	r1, [r2]
4000d888:	e580100c 	str	r1, [r0, #12]
4000d88c:	e59f1348 	ldr	r1, [pc, #840]	; 4000dbdc <_tx_queue_front_send+0x39c>
4000d890:	e5911000 	ldr	r1, [r1]
4000d894:	e3510000 	cmp	r1, #0
4000d898:	1a000006 	bne	4000d8b8 <_tx_queue_front_send+0x78>
4000d89c:	e59f133c 	ldr	r1, [pc, #828]	; 4000dbe0 <_tx_queue_front_send+0x3a0>
4000d8a0:	e5911000 	ldr	r1, [r1]
4000d8a4:	e5801000 	str	r1, [r0]
4000d8a8:	e5901000 	ldr	r1, [r0]
4000d8ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d8b0:	e5801004 	str	r1, [r0, #4]
4000d8b4:	ea00000d 	b	4000d8f0 <_tx_queue_front_send+0xb0>
4000d8b8:	e59f131c 	ldr	r1, [pc, #796]	; 4000dbdc <_tx_queue_front_send+0x39c>
4000d8bc:	e5911000 	ldr	r1, [r1]
4000d8c0:	e59f231c 	ldr	r2, [pc, #796]	; 4000dbe4 <_tx_queue_front_send+0x3a4>
4000d8c4:	e1510002 	cmp	r1, r2
4000d8c8:	2a000004 	bcs	4000d8e0 <_tx_queue_front_send+0xa0>
4000d8cc:	e3e01000 	mvn	r1, #0
4000d8d0:	e5801000 	str	r1, [r0]
4000d8d4:	e3a01000 	mov	r1, #0
4000d8d8:	e5801004 	str	r1, [r0, #4]
4000d8dc:	ea000003 	b	4000d8f0 <_tx_queue_front_send+0xb0>
4000d8e0:	e59f12fc 	ldr	r1, [pc, #764]	; 4000dbe4 <_tx_queue_front_send+0x3a4>
4000d8e4:	e5801000 	str	r1, [r0]
4000d8e8:	e3a01000 	mov	r1, #0
4000d8ec:	e5801004 	str	r1, [r0, #4]
4000d8f0:	e3a0103f 	mov	r1, #63	; 0x3f
4000d8f4:	e5801008 	str	r1, [r0, #8]
4000d8f8:	e5804010 	str	r4, [r0, #16]
4000d8fc:	e5805014 	str	r5, [r0, #20]
4000d900:	e5806018 	str	r6, [r0, #24]
4000d904:	e5941010 	ldr	r1, [r4, #16]
4000d908:	e580101c 	str	r1, [r0, #28]
4000d90c:	e2800020 	add	r0, r0, #32
4000d910:	e59f12d0 	ldr	r1, [pc, #720]	; 4000dbe8 <_tx_queue_front_send+0x3a8>
4000d914:	e5911000 	ldr	r1, [r1]
4000d918:	e1500001 	cmp	r0, r1
4000d91c:	3a000001 	bcc	4000d928 <_tx_queue_front_send+0xe8>
4000d920:	e59f12c4 	ldr	r1, [pc, #708]	; 4000dbec <_tx_queue_front_send+0x3ac>
4000d924:	e5910000 	ldr	r0, [r1]
4000d928:	e59f12a4 	ldr	r1, [pc, #676]	; 4000dbd4 <_tx_queue_front_send+0x394>
4000d92c:	e5810000 	str	r0, [r1]
4000d930:	e59f12b8 	ldr	r1, [pc, #696]	; 4000dbf0 <_tx_queue_front_send+0x3b0>
4000d934:	e5911000 	ldr	r1, [r1]
4000d938:	e5810020 	str	r0, [r1, #32]
4000d93c:	e5940014 	ldr	r0, [r4, #20]
4000d940:	e3500000 	cmp	r0, #0
4000d944:	0a000064 	beq	4000dadc <_tx_queue_front_send+0x29c>
4000d948:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000d94c:	e3500000 	cmp	r0, #0
4000d950:	1a00002b 	bne	4000da04 <_tx_queue_front_send+0x1c4>
4000d954:	e5940020 	ldr	r0, [r4, #32]
4000d958:	e5941018 	ldr	r1, [r4, #24]
4000d95c:	e1500001 	cmp	r0, r1
4000d960:	1a000004 	bne	4000d978 <_tx_queue_front_send+0x138>
4000d964:	e594001c 	ldr	r0, [r4, #28]
4000d968:	e5941008 	ldr	r1, [r4, #8]
4000d96c:	e0400101 	sub	r0, r0, r1, lsl #2
4000d970:	e5840020 	str	r0, [r4, #32]
4000d974:	ea000003 	b	4000d988 <_tx_queue_front_send+0x148>
4000d978:	e5940020 	ldr	r0, [r4, #32]
4000d97c:	e5941008 	ldr	r1, [r4, #8]
4000d980:	e0400101 	sub	r0, r0, r1, lsl #2
4000d984:	e5840020 	str	r0, [r4, #32]
4000d988:	e5940014 	ldr	r0, [r4, #20]
4000d98c:	e2400001 	sub	r0, r0, #1
4000d990:	e5840014 	str	r0, [r4, #20]
4000d994:	e5940010 	ldr	r0, [r4, #16]
4000d998:	e2800001 	add	r0, r0, #1
4000d99c:	e5840010 	str	r0, [r4, #16]
4000d9a0:	e1a09005 	mov	r9, r5
4000d9a4:	e594a020 	ldr	sl, [r4, #32]
4000d9a8:	e594b008 	ldr	fp, [r4, #8]
4000d9ac:	e1a00000 	nop			; (mov r0, r0)
4000d9b0:	e5990000 	ldr	r0, [r9]
4000d9b4:	e58a0000 	str	r0, [sl]
4000d9b8:	e24bb001 	sub	fp, fp, #1
4000d9bc:	e35b0000 	cmp	fp, #0
4000d9c0:	1a000000 	bne	4000d9c8 <_tx_queue_front_send+0x188>
4000d9c4:	ea000002 	b	4000d9d4 <_tx_queue_front_send+0x194>
4000d9c8:	e28aa004 	add	sl, sl, #4
4000d9cc:	e2899004 	add	r9, r9, #4
4000d9d0:	eafffff6 	b	4000d9b0 <_tx_queue_front_send+0x170>
4000d9d4:	e1a00000 	nop			; (mov r0, r0)
4000d9d8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000d9dc:	e58d0000 	str	r0, [sp]
4000d9e0:	e121f007 	msr	CPSR_c, r7
4000d9e4:	e59d0000 	ldr	r0, [sp]
4000d9e8:	e3500000 	cmp	r0, #0
4000d9ec:	0a000002 	beq	4000d9fc <_tx_queue_front_send+0x1bc>
4000d9f0:	e1a00004 	mov	r0, r4
4000d9f4:	e59d1000 	ldr	r1, [sp]
4000d9f8:	e12fff31 	blx	r1
4000d9fc:	e3a00000 	mov	r0, #0
4000da00:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000da04:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000da08:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da0c:	e1500008 	cmp	r0, r8
4000da10:	1a000002 	bne	4000da20 <_tx_queue_front_send+0x1e0>
4000da14:	e3a00000 	mov	r0, #0
4000da18:	e5840028 	str	r0, [r4, #40]	; 0x28
4000da1c:	ea000007 	b	4000da40 <_tx_queue_front_send+0x200>
4000da20:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da24:	e5840028 	str	r0, [r4, #40]	; 0x28
4000da28:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000da2c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000da30:	e5810074 	str	r0, [r1, #116]	; 0x74
4000da34:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da38:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000da3c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000da40:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000da44:	e2400001 	sub	r0, r0, #1
4000da48:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000da4c:	e3a00000 	mov	r0, #0
4000da50:	e5880068 	str	r0, [r8, #104]	; 0x68
4000da54:	e59f0198 	ldr	r0, [pc, #408]	; 4000dbf4 <_tx_queue_front_send+0x3b4>
4000da58:	e5900000 	ldr	r0, [r0]
4000da5c:	e2800001 	add	r0, r0, #1
4000da60:	e59f118c 	ldr	r1, [pc, #396]	; 4000dbf4 <_tx_queue_front_send+0x3b4>
4000da64:	e5810000 	str	r0, [r1]
4000da68:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000da6c:	e58d0000 	str	r0, [sp]
4000da70:	e121f007 	msr	CPSR_c, r7
4000da74:	e1a09005 	mov	r9, r5
4000da78:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000da7c:	e594b008 	ldr	fp, [r4, #8]
4000da80:	e1a00000 	nop			; (mov r0, r0)
4000da84:	e5990000 	ldr	r0, [r9]
4000da88:	e58a0000 	str	r0, [sl]
4000da8c:	e24bb001 	sub	fp, fp, #1
4000da90:	e35b0000 	cmp	fp, #0
4000da94:	1a000000 	bne	4000da9c <_tx_queue_front_send+0x25c>
4000da98:	ea000002 	b	4000daa8 <_tx_queue_front_send+0x268>
4000da9c:	e28aa004 	add	sl, sl, #4
4000daa0:	e2899004 	add	r9, r9, #4
4000daa4:	eafffff6 	b	4000da84 <_tx_queue_front_send+0x244>
4000daa8:	e1a00000 	nop			; (mov r0, r0)
4000daac:	e3a00000 	mov	r0, #0
4000dab0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dab4:	e1a00008 	mov	r0, r8
4000dab8:	eb0005be 	bl	4000f1b8 <_tx_thread_system_resume>
4000dabc:	e59d0000 	ldr	r0, [sp]
4000dac0:	e3500000 	cmp	r0, #0
4000dac4:	0a000002 	beq	4000dad4 <_tx_queue_front_send+0x294>
4000dac8:	e1a00004 	mov	r0, r4
4000dacc:	e59d1000 	ldr	r1, [sp]
4000dad0:	e12fff31 	blx	r1
4000dad4:	e3a00000 	mov	r0, #0
4000dad8:	eaffffc8 	b	4000da00 <_tx_queue_front_send+0x1c0>
4000dadc:	e3560000 	cmp	r6, #0
4000dae0:	0a000038 	beq	4000dbc8 <_tx_queue_front_send+0x388>
4000dae4:	e59f00f4 	ldr	r0, [pc, #244]	; 4000dbe0 <_tx_queue_front_send+0x3a0>
4000dae8:	e5908000 	ldr	r8, [r0]
4000daec:	e59f0104 	ldr	r0, [pc, #260]	; 4000dbf8 <_tx_queue_front_send+0x3b8>
4000daf0:	e5880068 	str	r0, [r8, #104]	; 0x68
4000daf4:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000daf8:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000dafc:	e3a00001 	mov	r0, #1
4000db00:	e5880080 	str	r0, [r8, #128]	; 0x80
4000db04:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db08:	e3500000 	cmp	r0, #0
4000db0c:	0a00000b 	beq	4000db40 <_tx_queue_front_send+0x300>
4000db10:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db14:	e5880070 	str	r0, [r8, #112]	; 0x70
4000db18:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db1c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000db20:	e5880074 	str	r0, [r8, #116]	; 0x74
4000db24:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db28:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000db2c:	e5808070 	str	r8, [r0, #112]	; 0x70
4000db30:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db34:	e5808074 	str	r8, [r0, #116]	; 0x74
4000db38:	e5848028 	str	r8, [r4, #40]	; 0x28
4000db3c:	ea000002 	b	4000db4c <_tx_queue_front_send+0x30c>
4000db40:	e5848028 	str	r8, [r4, #40]	; 0x28
4000db44:	e5888070 	str	r8, [r8, #112]	; 0x70
4000db48:	e5888074 	str	r8, [r8, #116]	; 0x74
4000db4c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000db50:	e2800001 	add	r0, r0, #1
4000db54:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000db58:	e3a00005 	mov	r0, #5
4000db5c:	e5880030 	str	r0, [r8, #48]	; 0x30
4000db60:	e3a00001 	mov	r0, #1
4000db64:	e5880038 	str	r0, [r8, #56]	; 0x38
4000db68:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000db6c:	e59f0080 	ldr	r0, [pc, #128]	; 4000dbf4 <_tx_queue_front_send+0x3b4>
4000db70:	e5900000 	ldr	r0, [r0]
4000db74:	e2800001 	add	r0, r0, #1
4000db78:	e59f1074 	ldr	r1, [pc, #116]	; 4000dbf4 <_tx_queue_front_send+0x3b4>
4000db7c:	e5810000 	str	r0, [r1]
4000db80:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000db84:	e58d0000 	str	r0, [sp]
4000db88:	e121f007 	msr	CPSR_c, r7
4000db8c:	e1a00008 	mov	r0, r8
4000db90:	ebffebe1 	bl	40008b1c <_tx_thread_system_suspend>
4000db94:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000db98:	e58d0000 	str	r0, [sp]
4000db9c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dba0:	e3500000 	cmp	r0, #0
4000dba4:	1a000005 	bne	4000dbc0 <_tx_queue_front_send+0x380>
4000dba8:	e59d0000 	ldr	r0, [sp]
4000dbac:	e3500000 	cmp	r0, #0
4000dbb0:	0a000002 	beq	4000dbc0 <_tx_queue_front_send+0x380>
4000dbb4:	e1a00004 	mov	r0, r4
4000dbb8:	e59d1000 	ldr	r1, [sp]
4000dbbc:	e12fff31 	blx	r1
4000dbc0:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dbc4:	eaffff8d 	b	4000da00 <_tx_queue_front_send+0x1c0>
4000dbc8:	e121f007 	msr	CPSR_c, r7
4000dbcc:	e3a0000b 	mov	r0, #11
4000dbd0:	eaffff8a 	b	4000da00 <_tx_queue_front_send+0x1c0>
4000dbd4:	40030ea4 	.word	0x40030ea4
4000dbd8:	40030ea8 	.word	0x40030ea8
4000dbdc:	40030e30 	.word	0x40030e30
4000dbe0:	40030e38 	.word	0x40030e38
4000dbe4:	f0f0f0f0 	.word	0xf0f0f0f0
4000dbe8:	40030ea0 	.word	0x40030ea0
4000dbec:	40030e9c 	.word	0x40030e9c
4000dbf0:	40030e90 	.word	0x40030e90
4000dbf4:	40030e54 	.word	0x40030e54
4000dbf8:	400105dc 	.word	0x400105dc

4000dbfc <_tx_queue_receive>:
4000dbfc:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dc00:	e1a04000 	mov	r4, r0
4000dc04:	e1a05001 	mov	r5, r1
4000dc08:	e1a06002 	mov	r6, r2
4000dc0c:	e10f7000 	mrs	r7, CPSR
4000dc10:	e3870080 	orr	r0, r7, #128	; 0x80
4000dc14:	e58d0000 	str	r0, [sp]
4000dc18:	e59d0000 	ldr	r0, [sp]
4000dc1c:	e121f000 	msr	CPSR_c, r0
4000dc20:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e034 <_tx_queue_receive+0x438>
4000dc24:	e5910000 	ldr	r0, [r1]
4000dc28:	e3500000 	cmp	r0, #0
4000dc2c:	0a000031 	beq	4000dcf8 <_tx_queue_receive+0xfc>
4000dc30:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e038 <_tx_queue_receive+0x43c>
4000dc34:	e5911000 	ldr	r1, [r1]
4000dc38:	e2811001 	add	r1, r1, #1
4000dc3c:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e038 <_tx_queue_receive+0x43c>
4000dc40:	e5821000 	str	r1, [r2]
4000dc44:	e580100c 	str	r1, [r0, #12]
4000dc48:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e03c <_tx_queue_receive+0x440>
4000dc4c:	e5911000 	ldr	r1, [r1]
4000dc50:	e3510000 	cmp	r1, #0
4000dc54:	1a000006 	bne	4000dc74 <_tx_queue_receive+0x78>
4000dc58:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e040 <_tx_queue_receive+0x444>
4000dc5c:	e5911000 	ldr	r1, [r1]
4000dc60:	e5801000 	str	r1, [r0]
4000dc64:	e5901000 	ldr	r1, [r0]
4000dc68:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dc6c:	e5801004 	str	r1, [r0, #4]
4000dc70:	ea00000d 	b	4000dcac <_tx_queue_receive+0xb0>
4000dc74:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e03c <_tx_queue_receive+0x440>
4000dc78:	e5911000 	ldr	r1, [r1]
4000dc7c:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e044 <_tx_queue_receive+0x448>
4000dc80:	e1510002 	cmp	r1, r2
4000dc84:	2a000004 	bcs	4000dc9c <_tx_queue_receive+0xa0>
4000dc88:	e3e01000 	mvn	r1, #0
4000dc8c:	e5801000 	str	r1, [r0]
4000dc90:	e3a01000 	mov	r1, #0
4000dc94:	e5801004 	str	r1, [r0, #4]
4000dc98:	ea000003 	b	4000dcac <_tx_queue_receive+0xb0>
4000dc9c:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e044 <_tx_queue_receive+0x448>
4000dca0:	e5801000 	str	r1, [r0]
4000dca4:	e3a01000 	mov	r1, #0
4000dca8:	e5801004 	str	r1, [r0, #4]
4000dcac:	e3a01044 	mov	r1, #68	; 0x44
4000dcb0:	e5801008 	str	r1, [r0, #8]
4000dcb4:	e5804010 	str	r4, [r0, #16]
4000dcb8:	e5805014 	str	r5, [r0, #20]
4000dcbc:	e5806018 	str	r6, [r0, #24]
4000dcc0:	e5941010 	ldr	r1, [r4, #16]
4000dcc4:	e580101c 	str	r1, [r0, #28]
4000dcc8:	e2800020 	add	r0, r0, #32
4000dccc:	e59f1374 	ldr	r1, [pc, #884]	; 4000e048 <_tx_queue_receive+0x44c>
4000dcd0:	e5911000 	ldr	r1, [r1]
4000dcd4:	e1500001 	cmp	r0, r1
4000dcd8:	3a000001 	bcc	4000dce4 <_tx_queue_receive+0xe8>
4000dcdc:	e59f1368 	ldr	r1, [pc, #872]	; 4000e04c <_tx_queue_receive+0x450>
4000dce0:	e5910000 	ldr	r0, [r1]
4000dce4:	e59f1348 	ldr	r1, [pc, #840]	; 4000e034 <_tx_queue_receive+0x438>
4000dce8:	e5810000 	str	r0, [r1]
4000dcec:	e59f135c 	ldr	r1, [pc, #860]	; 4000e050 <_tx_queue_receive+0x454>
4000dcf0:	e5911000 	ldr	r1, [r1]
4000dcf4:	e5810020 	str	r0, [r1, #32]
4000dcf8:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dcfc:	e3580000 	cmp	r8, #0
4000dd00:	0a00002f 	beq	4000ddc4 <_tx_queue_receive+0x1c8>
4000dd04:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000dd08:	e3500000 	cmp	r0, #0
4000dd0c:	0a00002c 	beq	4000ddc4 <_tx_queue_receive+0x1c8>
4000dd10:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000dd14:	e1a0a005 	mov	sl, r5
4000dd18:	e594b008 	ldr	fp, [r4, #8]
4000dd1c:	e1a00000 	nop			; (mov r0, r0)
4000dd20:	e5990000 	ldr	r0, [r9]
4000dd24:	e58a0000 	str	r0, [sl]
4000dd28:	e24bb001 	sub	fp, fp, #1
4000dd2c:	e35b0000 	cmp	fp, #0
4000dd30:	1a000000 	bne	4000dd38 <_tx_queue_receive+0x13c>
4000dd34:	ea000002 	b	4000dd44 <_tx_queue_receive+0x148>
4000dd38:	e28aa004 	add	sl, sl, #4
4000dd3c:	e2899004 	add	r9, r9, #4
4000dd40:	eafffff6 	b	4000dd20 <_tx_queue_receive+0x124>
4000dd44:	e1a00000 	nop			; (mov r0, r0)
4000dd48:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd4c:	e1500008 	cmp	r0, r8
4000dd50:	1a000002 	bne	4000dd60 <_tx_queue_receive+0x164>
4000dd54:	e3a00000 	mov	r0, #0
4000dd58:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd5c:	ea000007 	b	4000dd80 <_tx_queue_receive+0x184>
4000dd60:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd64:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd68:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dd6c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dd70:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dd74:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd78:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000dd7c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000dd80:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dd84:	e2400001 	sub	r0, r0, #1
4000dd88:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dd8c:	e3a00000 	mov	r0, #0
4000dd90:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dd94:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e054 <_tx_queue_receive+0x458>
4000dd98:	e5900000 	ldr	r0, [r0]
4000dd9c:	e2800001 	add	r0, r0, #1
4000dda0:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e054 <_tx_queue_receive+0x458>
4000dda4:	e5810000 	str	r0, [r1]
4000dda8:	e121f007 	msr	CPSR_c, r7
4000ddac:	e3a00000 	mov	r0, #0
4000ddb0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000ddb4:	e1a00008 	mov	r0, r8
4000ddb8:	eb0004fe 	bl	4000f1b8 <_tx_thread_system_resume>
4000ddbc:	e3a00000 	mov	r0, #0
4000ddc0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ddc4:	e5940010 	ldr	r0, [r4, #16]
4000ddc8:	e3500000 	cmp	r0, #0
4000ddcc:	0a000068 	beq	4000df74 <_tx_queue_receive+0x378>
4000ddd0:	e5949020 	ldr	r9, [r4, #32]
4000ddd4:	e1a0a005 	mov	sl, r5
4000ddd8:	e594b008 	ldr	fp, [r4, #8]
4000dddc:	e1a00000 	nop			; (mov r0, r0)
4000dde0:	e5990000 	ldr	r0, [r9]
4000dde4:	e58a0000 	str	r0, [sl]
4000dde8:	e24bb001 	sub	fp, fp, #1
4000ddec:	e35b0000 	cmp	fp, #0
4000ddf0:	1a000000 	bne	4000ddf8 <_tx_queue_receive+0x1fc>
4000ddf4:	ea000002 	b	4000de04 <_tx_queue_receive+0x208>
4000ddf8:	e28aa004 	add	sl, sl, #4
4000ddfc:	e2899004 	add	r9, r9, #4
4000de00:	eafffff6 	b	4000dde0 <_tx_queue_receive+0x1e4>
4000de04:	e1a00000 	nop			; (mov r0, r0)
4000de08:	e5940020 	ldr	r0, [r4, #32]
4000de0c:	e5941008 	ldr	r1, [r4, #8]
4000de10:	e0800101 	add	r0, r0, r1, lsl #2
4000de14:	e5840020 	str	r0, [r4, #32]
4000de18:	e5940020 	ldr	r0, [r4, #32]
4000de1c:	e594101c 	ldr	r1, [r4, #28]
4000de20:	e1500001 	cmp	r0, r1
4000de24:	3a000001 	bcc	4000de30 <_tx_queue_receive+0x234>
4000de28:	e5940018 	ldr	r0, [r4, #24]
4000de2c:	e5840020 	str	r0, [r4, #32]
4000de30:	e3580000 	cmp	r8, #0
4000de34:	1a000008 	bne	4000de5c <_tx_queue_receive+0x260>
4000de38:	e5940014 	ldr	r0, [r4, #20]
4000de3c:	e2800001 	add	r0, r0, #1
4000de40:	e5840014 	str	r0, [r4, #20]
4000de44:	e5940010 	ldr	r0, [r4, #16]
4000de48:	e2400001 	sub	r0, r0, #1
4000de4c:	e5840010 	str	r0, [r4, #16]
4000de50:	e121f007 	msr	CPSR_c, r7
4000de54:	e3a00000 	mov	r0, #0
4000de58:	eaffffd8 	b	4000ddc0 <_tx_queue_receive+0x1c4>
4000de5c:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e054 <_tx_queue_receive+0x458>
4000de60:	e5900000 	ldr	r0, [r0]
4000de64:	e2800001 	add	r0, r0, #1
4000de68:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e054 <_tx_queue_receive+0x458>
4000de6c:	e5810000 	str	r0, [r1]
4000de70:	e121f007 	msr	CPSR_c, r7
4000de74:	e10f7000 	mrs	r7, CPSR
4000de78:	e3870080 	orr	r0, r7, #128	; 0x80
4000de7c:	e58d0000 	str	r0, [sp]
4000de80:	e59d0000 	ldr	r0, [sp]
4000de84:	e121f000 	msr	CPSR_c, r0
4000de88:	e2810000 	add	r0, r1, #0
4000de8c:	e5900000 	ldr	r0, [r0]
4000de90:	e2400001 	sub	r0, r0, #1
4000de94:	e5810000 	str	r0, [r1]
4000de98:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000de9c:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000dea0:	e594b008 	ldr	fp, [r4, #8]
4000dea4:	e1a00000 	nop			; (mov r0, r0)
4000dea8:	e5990000 	ldr	r0, [r9]
4000deac:	e58a0000 	str	r0, [sl]
4000deb0:	e24bb001 	sub	fp, fp, #1
4000deb4:	e35b0000 	cmp	fp, #0
4000deb8:	1a000000 	bne	4000dec0 <_tx_queue_receive+0x2c4>
4000debc:	ea000002 	b	4000decc <_tx_queue_receive+0x2d0>
4000dec0:	e28aa004 	add	sl, sl, #4
4000dec4:	e2899004 	add	r9, r9, #4
4000dec8:	eafffff6 	b	4000dea8 <_tx_queue_receive+0x2ac>
4000decc:	e1a00000 	nop			; (mov r0, r0)
4000ded0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000ded4:	e5941008 	ldr	r1, [r4, #8]
4000ded8:	e0800101 	add	r0, r0, r1, lsl #2
4000dedc:	e5840024 	str	r0, [r4, #36]	; 0x24
4000dee0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000dee4:	e594101c 	ldr	r1, [r4, #28]
4000dee8:	e1500001 	cmp	r0, r1
4000deec:	3a000001 	bcc	4000def8 <_tx_queue_receive+0x2fc>
4000def0:	e5940018 	ldr	r0, [r4, #24]
4000def4:	e5840024 	str	r0, [r4, #36]	; 0x24
4000def8:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000defc:	e1500008 	cmp	r0, r8
4000df00:	1a000002 	bne	4000df10 <_tx_queue_receive+0x314>
4000df04:	e3a00000 	mov	r0, #0
4000df08:	e5840028 	str	r0, [r4, #40]	; 0x28
4000df0c:	ea000007 	b	4000df30 <_tx_queue_receive+0x334>
4000df10:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df14:	e5840028 	str	r0, [r4, #40]	; 0x28
4000df18:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000df1c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000df20:	e5810074 	str	r0, [r1, #116]	; 0x74
4000df24:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df28:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000df2c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000df30:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000df34:	e2400001 	sub	r0, r0, #1
4000df38:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000df3c:	e3a00000 	mov	r0, #0
4000df40:	e5880068 	str	r0, [r8, #104]	; 0x68
4000df44:	e59f0108 	ldr	r0, [pc, #264]	; 4000e054 <_tx_queue_receive+0x458>
4000df48:	e5900000 	ldr	r0, [r0]
4000df4c:	e2800001 	add	r0, r0, #1
4000df50:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e054 <_tx_queue_receive+0x458>
4000df54:	e5810000 	str	r0, [r1]
4000df58:	e121f007 	msr	CPSR_c, r7
4000df5c:	e3a00000 	mov	r0, #0
4000df60:	e5880084 	str	r0, [r8, #132]	; 0x84
4000df64:	e1a00008 	mov	r0, r8
4000df68:	eb000492 	bl	4000f1b8 <_tx_thread_system_resume>
4000df6c:	e3a00000 	mov	r0, #0
4000df70:	eaffff92 	b	4000ddc0 <_tx_queue_receive+0x1c4>
4000df74:	e3560000 	cmp	r6, #0
4000df78:	0a00002a 	beq	4000e028 <_tx_queue_receive+0x42c>
4000df7c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e040 <_tx_queue_receive+0x444>
4000df80:	e5908000 	ldr	r8, [r0]
4000df84:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e058 <_tx_queue_receive+0x45c>
4000df88:	e5880068 	str	r0, [r8, #104]	; 0x68
4000df8c:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000df90:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000df94:	e3a00000 	mov	r0, #0
4000df98:	e5880080 	str	r0, [r8, #128]	; 0x80
4000df9c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfa0:	e3500000 	cmp	r0, #0
4000dfa4:	0a00000a 	beq	4000dfd4 <_tx_queue_receive+0x3d8>
4000dfa8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfac:	e5880070 	str	r0, [r8, #112]	; 0x70
4000dfb0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfb4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dfb8:	e5880074 	str	r0, [r8, #116]	; 0x74
4000dfbc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfc0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000dfc4:	e5808070 	str	r8, [r0, #112]	; 0x70
4000dfc8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dfcc:	e5808074 	str	r8, [r0, #116]	; 0x74
4000dfd0:	ea000002 	b	4000dfe0 <_tx_queue_receive+0x3e4>
4000dfd4:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dfd8:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dfdc:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dfe0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dfe4:	e2800001 	add	r0, r0, #1
4000dfe8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dfec:	e3a00005 	mov	r0, #5
4000dff0:	e5880030 	str	r0, [r8, #48]	; 0x30
4000dff4:	e3a00001 	mov	r0, #1
4000dff8:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dffc:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e000:	e59f004c 	ldr	r0, [pc, #76]	; 4000e054 <_tx_queue_receive+0x458>
4000e004:	e5900000 	ldr	r0, [r0]
4000e008:	e2800001 	add	r0, r0, #1
4000e00c:	e59f1040 	ldr	r1, [pc, #64]	; 4000e054 <_tx_queue_receive+0x458>
4000e010:	e5810000 	str	r0, [r1]
4000e014:	e121f007 	msr	CPSR_c, r7
4000e018:	e1a00008 	mov	r0, r8
4000e01c:	ebffeabe 	bl	40008b1c <_tx_thread_system_suspend>
4000e020:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e024:	eaffff65 	b	4000ddc0 <_tx_queue_receive+0x1c4>
4000e028:	e121f007 	msr	CPSR_c, r7
4000e02c:	e3a0000a 	mov	r0, #10
4000e030:	eaffff62 	b	4000ddc0 <_tx_queue_receive+0x1c4>
4000e034:	40030ea4 	.word	0x40030ea4
4000e038:	40030ea8 	.word	0x40030ea8
4000e03c:	40030e30 	.word	0x40030e30
4000e040:	40030e38 	.word	0x40030e38
4000e044:	f0f0f0f0 	.word	0xf0f0f0f0
4000e048:	40030ea0 	.word	0x40030ea0
4000e04c:	40030e9c 	.word	0x40030e9c
4000e050:	40030e90 	.word	0x40030e90
4000e054:	40030e54 	.word	0x40030e54
4000e058:	400105dc 	.word	0x400105dc

4000e05c <_tx_queue_send>:
4000e05c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e060:	e1a04000 	mov	r4, r0
4000e064:	e1a05001 	mov	r5, r1
4000e068:	e1a06002 	mov	r6, r2
4000e06c:	e10f7000 	mrs	r7, CPSR
4000e070:	e3870080 	orr	r0, r7, #128	; 0x80
4000e074:	e58d0004 	str	r0, [sp, #4]
4000e078:	e59d0004 	ldr	r0, [sp, #4]
4000e07c:	e121f000 	msr	CPSR_c, r0
4000e080:	e59f1358 	ldr	r1, [pc, #856]	; 4000e3e0 <_tx_queue_send+0x384>
4000e084:	e5910000 	ldr	r0, [r1]
4000e088:	e3500000 	cmp	r0, #0
4000e08c:	0a000031 	beq	4000e158 <_tx_queue_send+0xfc>
4000e090:	e59f134c 	ldr	r1, [pc, #844]	; 4000e3e4 <_tx_queue_send+0x388>
4000e094:	e5911000 	ldr	r1, [r1]
4000e098:	e2811001 	add	r1, r1, #1
4000e09c:	e59f2340 	ldr	r2, [pc, #832]	; 4000e3e4 <_tx_queue_send+0x388>
4000e0a0:	e5821000 	str	r1, [r2]
4000e0a4:	e580100c 	str	r1, [r0, #12]
4000e0a8:	e59f1338 	ldr	r1, [pc, #824]	; 4000e3e8 <_tx_queue_send+0x38c>
4000e0ac:	e5911000 	ldr	r1, [r1]
4000e0b0:	e3510000 	cmp	r1, #0
4000e0b4:	1a000006 	bne	4000e0d4 <_tx_queue_send+0x78>
4000e0b8:	e59f132c 	ldr	r1, [pc, #812]	; 4000e3ec <_tx_queue_send+0x390>
4000e0bc:	e5911000 	ldr	r1, [r1]
4000e0c0:	e5801000 	str	r1, [r0]
4000e0c4:	e5901000 	ldr	r1, [r0]
4000e0c8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e0cc:	e5801004 	str	r1, [r0, #4]
4000e0d0:	ea00000d 	b	4000e10c <_tx_queue_send+0xb0>
4000e0d4:	e59f130c 	ldr	r1, [pc, #780]	; 4000e3e8 <_tx_queue_send+0x38c>
4000e0d8:	e5911000 	ldr	r1, [r1]
4000e0dc:	e59f230c 	ldr	r2, [pc, #780]	; 4000e3f0 <_tx_queue_send+0x394>
4000e0e0:	e1510002 	cmp	r1, r2
4000e0e4:	2a000004 	bcs	4000e0fc <_tx_queue_send+0xa0>
4000e0e8:	e3e01000 	mvn	r1, #0
4000e0ec:	e5801000 	str	r1, [r0]
4000e0f0:	e3a01000 	mov	r1, #0
4000e0f4:	e5801004 	str	r1, [r0, #4]
4000e0f8:	ea000003 	b	4000e10c <_tx_queue_send+0xb0>
4000e0fc:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e3f0 <_tx_queue_send+0x394>
4000e100:	e5801000 	str	r1, [r0]
4000e104:	e3a01000 	mov	r1, #0
4000e108:	e5801004 	str	r1, [r0, #4]
4000e10c:	e3a01045 	mov	r1, #69	; 0x45
4000e110:	e5801008 	str	r1, [r0, #8]
4000e114:	e5804010 	str	r4, [r0, #16]
4000e118:	e5805014 	str	r5, [r0, #20]
4000e11c:	e5806018 	str	r6, [r0, #24]
4000e120:	e5941010 	ldr	r1, [r4, #16]
4000e124:	e580101c 	str	r1, [r0, #28]
4000e128:	e2800020 	add	r0, r0, #32
4000e12c:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e3f4 <_tx_queue_send+0x398>
4000e130:	e5911000 	ldr	r1, [r1]
4000e134:	e1500001 	cmp	r0, r1
4000e138:	3a000001 	bcc	4000e144 <_tx_queue_send+0xe8>
4000e13c:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e3f8 <_tx_queue_send+0x39c>
4000e140:	e5910000 	ldr	r0, [r1]
4000e144:	e59f1294 	ldr	r1, [pc, #660]	; 4000e3e0 <_tx_queue_send+0x384>
4000e148:	e5810000 	str	r0, [r1]
4000e14c:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e3fc <_tx_queue_send+0x3a0>
4000e150:	e5911000 	ldr	r1, [r1]
4000e154:	e5810020 	str	r0, [r1, #32]
4000e158:	e5940014 	ldr	r0, [r4, #20]
4000e15c:	e3500000 	cmp	r0, #0
4000e160:	0a000061 	beq	4000e2ec <_tx_queue_send+0x290>
4000e164:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e168:	e3500000 	cmp	r0, #0
4000e16c:	1a000028 	bne	4000e214 <_tx_queue_send+0x1b8>
4000e170:	e5940014 	ldr	r0, [r4, #20]
4000e174:	e2400001 	sub	r0, r0, #1
4000e178:	e5840014 	str	r0, [r4, #20]
4000e17c:	e5940010 	ldr	r0, [r4, #16]
4000e180:	e2800001 	add	r0, r0, #1
4000e184:	e5840010 	str	r0, [r4, #16]
4000e188:	e1a09005 	mov	r9, r5
4000e18c:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e190:	e594b008 	ldr	fp, [r4, #8]
4000e194:	e1a00000 	nop			; (mov r0, r0)
4000e198:	e5990000 	ldr	r0, [r9]
4000e19c:	e58a0000 	str	r0, [sl]
4000e1a0:	e24bb001 	sub	fp, fp, #1
4000e1a4:	e35b0000 	cmp	fp, #0
4000e1a8:	1a000000 	bne	4000e1b0 <_tx_queue_send+0x154>
4000e1ac:	ea000002 	b	4000e1bc <_tx_queue_send+0x160>
4000e1b0:	e28aa004 	add	sl, sl, #4
4000e1b4:	e2899004 	add	r9, r9, #4
4000e1b8:	eafffff6 	b	4000e198 <_tx_queue_send+0x13c>
4000e1bc:	e1a00000 	nop			; (mov r0, r0)
4000e1c0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e1c4:	e5941008 	ldr	r1, [r4, #8]
4000e1c8:	e0800101 	add	r0, r0, r1, lsl #2
4000e1cc:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e1d0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e1d4:	e594101c 	ldr	r1, [r4, #28]
4000e1d8:	e1500001 	cmp	r0, r1
4000e1dc:	3a000001 	bcc	4000e1e8 <_tx_queue_send+0x18c>
4000e1e0:	e5940018 	ldr	r0, [r4, #24]
4000e1e4:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e1e8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e1ec:	e58d0000 	str	r0, [sp]
4000e1f0:	e121f007 	msr	CPSR_c, r7
4000e1f4:	e59d0000 	ldr	r0, [sp]
4000e1f8:	e3500000 	cmp	r0, #0
4000e1fc:	0a000002 	beq	4000e20c <_tx_queue_send+0x1b0>
4000e200:	e1a00004 	mov	r0, r4
4000e204:	e59d1000 	ldr	r1, [sp]
4000e208:	e12fff31 	blx	r1
4000e20c:	e3a00000 	mov	r0, #0
4000e210:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e214:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e218:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e21c:	e1500008 	cmp	r0, r8
4000e220:	1a000002 	bne	4000e230 <_tx_queue_send+0x1d4>
4000e224:	e3a00000 	mov	r0, #0
4000e228:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e22c:	ea000007 	b	4000e250 <_tx_queue_send+0x1f4>
4000e230:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e234:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e238:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e23c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e240:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e244:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e248:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e24c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e250:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e254:	e2400001 	sub	r0, r0, #1
4000e258:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e25c:	e3a00000 	mov	r0, #0
4000e260:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e264:	e59f0194 	ldr	r0, [pc, #404]	; 4000e400 <_tx_queue_send+0x3a4>
4000e268:	e5900000 	ldr	r0, [r0]
4000e26c:	e2800001 	add	r0, r0, #1
4000e270:	e59f1188 	ldr	r1, [pc, #392]	; 4000e400 <_tx_queue_send+0x3a4>
4000e274:	e5810000 	str	r0, [r1]
4000e278:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e27c:	e58d0000 	str	r0, [sp]
4000e280:	e121f007 	msr	CPSR_c, r7
4000e284:	e1a09005 	mov	r9, r5
4000e288:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e28c:	e594b008 	ldr	fp, [r4, #8]
4000e290:	e1a00000 	nop			; (mov r0, r0)
4000e294:	e5990000 	ldr	r0, [r9]
4000e298:	e58a0000 	str	r0, [sl]
4000e29c:	e24bb001 	sub	fp, fp, #1
4000e2a0:	e35b0000 	cmp	fp, #0
4000e2a4:	1a000000 	bne	4000e2ac <_tx_queue_send+0x250>
4000e2a8:	ea000002 	b	4000e2b8 <_tx_queue_send+0x25c>
4000e2ac:	e28aa004 	add	sl, sl, #4
4000e2b0:	e2899004 	add	r9, r9, #4
4000e2b4:	eafffff6 	b	4000e294 <_tx_queue_send+0x238>
4000e2b8:	e1a00000 	nop			; (mov r0, r0)
4000e2bc:	e3a00000 	mov	r0, #0
4000e2c0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e2c4:	e1a00008 	mov	r0, r8
4000e2c8:	eb0003ba 	bl	4000f1b8 <_tx_thread_system_resume>
4000e2cc:	e59d0000 	ldr	r0, [sp]
4000e2d0:	e3500000 	cmp	r0, #0
4000e2d4:	0a000002 	beq	4000e2e4 <_tx_queue_send+0x288>
4000e2d8:	e1a00004 	mov	r0, r4
4000e2dc:	e59d1000 	ldr	r1, [sp]
4000e2e0:	e12fff31 	blx	r1
4000e2e4:	e3a00000 	mov	r0, #0
4000e2e8:	eaffffc8 	b	4000e210 <_tx_queue_send+0x1b4>
4000e2ec:	e3560000 	cmp	r6, #0
4000e2f0:	0a000037 	beq	4000e3d4 <_tx_queue_send+0x378>
4000e2f4:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e3ec <_tx_queue_send+0x390>
4000e2f8:	e5908000 	ldr	r8, [r0]
4000e2fc:	e59f0100 	ldr	r0, [pc, #256]	; 4000e404 <_tx_queue_send+0x3a8>
4000e300:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e304:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e308:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e30c:	e3a00000 	mov	r0, #0
4000e310:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e314:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e318:	e3500000 	cmp	r0, #0
4000e31c:	0a00000a 	beq	4000e34c <_tx_queue_send+0x2f0>
4000e320:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e324:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e328:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e32c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e330:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e334:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e338:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e33c:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e340:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e344:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e348:	ea000002 	b	4000e358 <_tx_queue_send+0x2fc>
4000e34c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e350:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e354:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e358:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e35c:	e2800001 	add	r0, r0, #1
4000e360:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e364:	e3a00005 	mov	r0, #5
4000e368:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e36c:	e3a00001 	mov	r0, #1
4000e370:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e374:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e378:	e59f0080 	ldr	r0, [pc, #128]	; 4000e400 <_tx_queue_send+0x3a4>
4000e37c:	e5900000 	ldr	r0, [r0]
4000e380:	e2800001 	add	r0, r0, #1
4000e384:	e59f1074 	ldr	r1, [pc, #116]	; 4000e400 <_tx_queue_send+0x3a4>
4000e388:	e5810000 	str	r0, [r1]
4000e38c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e390:	e58d0000 	str	r0, [sp]
4000e394:	e121f007 	msr	CPSR_c, r7
4000e398:	e1a00008 	mov	r0, r8
4000e39c:	ebffe9de 	bl	40008b1c <_tx_thread_system_suspend>
4000e3a0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e3a4:	e58d0000 	str	r0, [sp]
4000e3a8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e3ac:	e3500000 	cmp	r0, #0
4000e3b0:	1a000005 	bne	4000e3cc <_tx_queue_send+0x370>
4000e3b4:	e59d0000 	ldr	r0, [sp]
4000e3b8:	e3500000 	cmp	r0, #0
4000e3bc:	0a000002 	beq	4000e3cc <_tx_queue_send+0x370>
4000e3c0:	e1a00004 	mov	r0, r4
4000e3c4:	e59d1000 	ldr	r1, [sp]
4000e3c8:	e12fff31 	blx	r1
4000e3cc:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e3d0:	eaffff8e 	b	4000e210 <_tx_queue_send+0x1b4>
4000e3d4:	e121f007 	msr	CPSR_c, r7
4000e3d8:	e3a0000b 	mov	r0, #11
4000e3dc:	eaffff8b 	b	4000e210 <_tx_queue_send+0x1b4>
4000e3e0:	40030ea4 	.word	0x40030ea4
4000e3e4:	40030ea8 	.word	0x40030ea8
4000e3e8:	40030e30 	.word	0x40030e30
4000e3ec:	40030e38 	.word	0x40030e38
4000e3f0:	f0f0f0f0 	.word	0xf0f0f0f0
4000e3f4:	40030ea0 	.word	0x40030ea0
4000e3f8:	40030e9c 	.word	0x40030e9c
4000e3fc:	40030e90 	.word	0x40030e90
4000e400:	40030e54 	.word	0x40030e54
4000e404:	400105dc 	.word	0x400105dc

4000e408 <_tx_thread_create>:
4000e408:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e40c:	e24dd014 	sub	sp, sp, #20
4000e410:	e1a04000 	mov	r4, r0
4000e414:	e1a05001 	mov	r5, r1
4000e418:	e28da048 	add	sl, sp, #72	; 0x48
4000e41c:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e420:	e3a00000 	mov	r0, #0
4000e424:	e58d0004 	str	r0, [sp, #4]
4000e428:	e3a020ef 	mov	r2, #239	; 0xef
4000e42c:	e1a01007 	mov	r1, r7
4000e430:	e1a00006 	mov	r0, r6
4000e434:	eb001447 	bl	40013558 <__aeabi_memset>
4000e438:	e1a00127 	lsr	r0, r7, #2
4000e43c:	e3a01004 	mov	r1, #4
4000e440:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e444:	e3a010a8 	mov	r1, #168	; 0xa8
4000e448:	e1a00004 	mov	r0, r4
4000e44c:	eb001419 	bl	400134b8 <__aeabi_memclr4>
4000e450:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e454:	e59d001c 	ldr	r0, [sp, #28]
4000e458:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e45c:	e59d0020 	ldr	r0, [sp, #32]
4000e460:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e464:	e584600c 	str	r6, [r4, #12]
4000e468:	e5847014 	str	r7, [r4, #20]
4000e46c:	e2470001 	sub	r0, r7, #1
4000e470:	e0800006 	add	r0, r0, r6
4000e474:	e5840010 	str	r0, [r4, #16]
4000e478:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e47c:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e480:	e584a018 	str	sl, [r4, #24]
4000e484:	e584a01c 	str	sl, [r4, #28]
4000e488:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e48c:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e490:	e3a00003 	mov	r0, #3
4000e494:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e498:	e59f0268 	ldr	r0, [pc, #616]	; 4000e708 <_tx_thread_create+0x300>
4000e49c:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e4a0:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e4a4:	e59f1260 	ldr	r1, [pc, #608]	; 4000e70c <_tx_thread_create+0x304>
4000e4a8:	e1a00004 	mov	r0, r4
4000e4ac:	eb000727 	bl	40010150 <_tx_thread_stack_build>
4000e4b0:	e5940008 	ldr	r0, [r4, #8]
4000e4b4:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e4b8:	e10f0000 	mrs	r0, CPSR
4000e4bc:	e58d0010 	str	r0, [sp, #16]
4000e4c0:	e59d0010 	ldr	r0, [sp, #16]
4000e4c4:	e380b080 	orr	fp, r0, #128	; 0x80
4000e4c8:	e121f00b 	msr	CPSR_c, fp
4000e4cc:	e59f023c 	ldr	r0, [pc, #572]	; 4000e710 <_tx_thread_create+0x308>
4000e4d0:	e5840000 	str	r0, [r4]
4000e4d4:	e59f0238 	ldr	r0, [pc, #568]	; 4000e714 <_tx_thread_create+0x30c>
4000e4d8:	e5900000 	ldr	r0, [r0]
4000e4dc:	e3500000 	cmp	r0, #0
4000e4e0:	0a00000e 	beq	4000e520 <_tx_thread_create+0x118>
4000e4e4:	e59f0228 	ldr	r0, [pc, #552]	; 4000e714 <_tx_thread_create+0x30c>
4000e4e8:	e5900000 	ldr	r0, [r0]
4000e4ec:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e4f0:	e58d000c 	str	r0, [sp, #12]
4000e4f4:	e59f0218 	ldr	r0, [pc, #536]	; 4000e714 <_tx_thread_create+0x30c>
4000e4f8:	e5900000 	ldr	r0, [r0]
4000e4fc:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e500:	e59d000c 	ldr	r0, [sp, #12]
4000e504:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e508:	e59d000c 	ldr	r0, [sp, #12]
4000e50c:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e510:	e59f01fc 	ldr	r0, [pc, #508]	; 4000e714 <_tx_thread_create+0x30c>
4000e514:	e5900000 	ldr	r0, [r0]
4000e518:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e51c:	ea000003 	b	4000e530 <_tx_thread_create+0x128>
4000e520:	e59f01ec 	ldr	r0, [pc, #492]	; 4000e714 <_tx_thread_create+0x30c>
4000e524:	e5804000 	str	r4, [r0]
4000e528:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e52c:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e530:	e59f01e0 	ldr	r0, [pc, #480]	; 4000e718 <_tx_thread_create+0x310>
4000e534:	e5900000 	ldr	r0, [r0]
4000e538:	e2800001 	add	r0, r0, #1
4000e53c:	e59f11d4 	ldr	r1, [pc, #468]	; 4000e718 <_tx_thread_create+0x310>
4000e540:	e5810000 	str	r0, [r1]
4000e544:	e59f01d0 	ldr	r0, [pc, #464]	; 4000e71c <_tx_thread_create+0x314>
4000e548:	e5900000 	ldr	r0, [r0]
4000e54c:	e2800001 	add	r0, r0, #1
4000e550:	e59f11c4 	ldr	r1, [pc, #452]	; 4000e71c <_tx_thread_create+0x314>
4000e554:	e5810000 	str	r0, [r1]
4000e558:	e1a03006 	mov	r3, r6
4000e55c:	e1a02005 	mov	r2, r5
4000e560:	e1a01004 	mov	r1, r4
4000e564:	e3a00001 	mov	r0, #1
4000e568:	e58d7000 	str	r7, [sp]
4000e56c:	eb000667 	bl	4000ff10 <_tx_trace_object_register>
4000e570:	e59f11a8 	ldr	r1, [pc, #424]	; 4000e720 <_tx_thread_create+0x318>
4000e574:	e5910000 	ldr	r0, [r1]
4000e578:	e3500000 	cmp	r0, #0
4000e57c:	0a000030 	beq	4000e644 <_tx_thread_create+0x23c>
4000e580:	e59f119c 	ldr	r1, [pc, #412]	; 4000e724 <_tx_thread_create+0x31c>
4000e584:	e5911000 	ldr	r1, [r1]
4000e588:	e2811001 	add	r1, r1, #1
4000e58c:	e59f2190 	ldr	r2, [pc, #400]	; 4000e724 <_tx_thread_create+0x31c>
4000e590:	e5821000 	str	r1, [r2]
4000e594:	e580100c 	str	r1, [r0, #12]
4000e598:	e59f1188 	ldr	r1, [pc, #392]	; 4000e728 <_tx_thread_create+0x320>
4000e59c:	e5911000 	ldr	r1, [r1]
4000e5a0:	e3510000 	cmp	r1, #0
4000e5a4:	1a000006 	bne	4000e5c4 <_tx_thread_create+0x1bc>
4000e5a8:	e59f117c 	ldr	r1, [pc, #380]	; 4000e72c <_tx_thread_create+0x324>
4000e5ac:	e5911000 	ldr	r1, [r1]
4000e5b0:	e5801000 	str	r1, [r0]
4000e5b4:	e5901000 	ldr	r1, [r0]
4000e5b8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e5bc:	e5801004 	str	r1, [r0, #4]
4000e5c0:	ea00000d 	b	4000e5fc <_tx_thread_create+0x1f4>
4000e5c4:	e59f115c 	ldr	r1, [pc, #348]	; 4000e728 <_tx_thread_create+0x320>
4000e5c8:	e5911000 	ldr	r1, [r1]
4000e5cc:	e59f215c 	ldr	r2, [pc, #348]	; 4000e730 <_tx_thread_create+0x328>
4000e5d0:	e1510002 	cmp	r1, r2
4000e5d4:	2a000004 	bcs	4000e5ec <_tx_thread_create+0x1e4>
4000e5d8:	e3e01000 	mvn	r1, #0
4000e5dc:	e5801000 	str	r1, [r0]
4000e5e0:	e3a01000 	mov	r1, #0
4000e5e4:	e5801004 	str	r1, [r0, #4]
4000e5e8:	ea000003 	b	4000e5fc <_tx_thread_create+0x1f4>
4000e5ec:	e59f113c 	ldr	r1, [pc, #316]	; 4000e730 <_tx_thread_create+0x328>
4000e5f0:	e5801000 	str	r1, [r0]
4000e5f4:	e3a01000 	mov	r1, #0
4000e5f8:	e5801004 	str	r1, [r0, #4]
4000e5fc:	e3a01064 	mov	r1, #100	; 0x64
4000e600:	e5801008 	str	r1, [r0, #8]
4000e604:	e5804010 	str	r4, [r0, #16]
4000e608:	e5808014 	str	r8, [r0, #20]
4000e60c:	e5806018 	str	r6, [r0, #24]
4000e610:	e580701c 	str	r7, [r0, #28]
4000e614:	e2800020 	add	r0, r0, #32
4000e618:	e59f1114 	ldr	r1, [pc, #276]	; 4000e734 <_tx_thread_create+0x32c>
4000e61c:	e5911000 	ldr	r1, [r1]
4000e620:	e1500001 	cmp	r0, r1
4000e624:	3a000001 	bcc	4000e630 <_tx_thread_create+0x228>
4000e628:	e59f1108 	ldr	r1, [pc, #264]	; 4000e738 <_tx_thread_create+0x330>
4000e62c:	e5910000 	ldr	r0, [r1]
4000e630:	e59f10e8 	ldr	r1, [pc, #232]	; 4000e720 <_tx_thread_create+0x318>
4000e634:	e5810000 	str	r0, [r1]
4000e638:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e73c <_tx_thread_create+0x334>
4000e63c:	e5911000 	ldr	r1, [r1]
4000e640:	e5810020 	str	r0, [r1, #32]
4000e644:	e59d0010 	ldr	r0, [sp, #16]
4000e648:	e121f000 	msr	CPSR_c, r0
4000e64c:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e650:	e3500000 	cmp	r0, #0
4000e654:	0a00001c 	beq	4000e6cc <_tx_thread_create+0x2c4>
4000e658:	e59f00c8 	ldr	r0, [pc, #200]	; 4000e728 <_tx_thread_create+0x320>
4000e65c:	e5900000 	ldr	r0, [r0]
4000e660:	e59f10c8 	ldr	r1, [pc, #200]	; 4000e730 <_tx_thread_create+0x328>
4000e664:	e1500001 	cmp	r0, r1
4000e668:	3a00000c 	bcc	4000e6a0 <_tx_thread_create+0x298>
4000e66c:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e740 <_tx_thread_create+0x338>
4000e670:	e5900000 	ldr	r0, [r0]
4000e674:	e58d0008 	str	r0, [sp, #8]
4000e678:	e59d0008 	ldr	r0, [sp, #8]
4000e67c:	e3500000 	cmp	r0, #0
4000e680:	0a000008 	beq	4000e6a8 <_tx_thread_create+0x2a0>
4000e684:	e59d0008 	ldr	r0, [sp, #8]
4000e688:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e68c:	e58d0004 	str	r0, [sp, #4]
4000e690:	e59d0008 	ldr	r0, [sp, #8]
4000e694:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e698:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e69c:	ea000001 	b	4000e6a8 <_tx_thread_create+0x2a0>
4000e6a0:	e3a00000 	mov	r0, #0
4000e6a4:	e58d0008 	str	r0, [sp, #8]
4000e6a8:	e1a00004 	mov	r0, r4
4000e6ac:	eb0002c1 	bl	4000f1b8 <_tx_thread_system_resume>
4000e6b0:	e59d0008 	ldr	r0, [sp, #8]
4000e6b4:	e3500000 	cmp	r0, #0
4000e6b8:	0a00000f 	beq	4000e6fc <_tx_thread_create+0x2f4>
4000e6bc:	e59d0008 	ldr	r0, [sp, #8]
4000e6c0:	e59d1004 	ldr	r1, [sp, #4]
4000e6c4:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e6c8:	ea00000b 	b	4000e6fc <_tx_thread_create+0x2f4>
4000e6cc:	e10f0000 	mrs	r0, CPSR
4000e6d0:	e58d0010 	str	r0, [sp, #16]
4000e6d4:	e59d0010 	ldr	r0, [sp, #16]
4000e6d8:	e380b080 	orr	fp, r0, #128	; 0x80
4000e6dc:	e121f00b 	msr	CPSR_c, fp
4000e6e0:	e59f0034 	ldr	r0, [pc, #52]	; 4000e71c <_tx_thread_create+0x314>
4000e6e4:	e5900000 	ldr	r0, [r0]
4000e6e8:	e2400001 	sub	r0, r0, #1
4000e6ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000e71c <_tx_thread_create+0x314>
4000e6f0:	e5810000 	str	r0, [r1]
4000e6f4:	e59d0010 	ldr	r0, [sp, #16]
4000e6f8:	e121f000 	msr	CPSR_c, r0
4000e6fc:	e3a00000 	mov	r0, #0
4000e700:	e28dd024 	add	sp, sp, #36	; 0x24
4000e704:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e708:	4000f6e8 	.word	0x4000f6e8
4000e70c:	4000ef4c 	.word	0x4000ef4c
4000e710:	54485244 	.word	0x54485244
4000e714:	40030e40 	.word	0x40030e40
4000e718:	40030e44 	.word	0x40030e44
4000e71c:	40030e54 	.word	0x40030e54
4000e720:	40030ea4 	.word	0x40030ea4
4000e724:	40030ea8 	.word	0x40030ea8
4000e728:	40030e30 	.word	0x40030e30
4000e72c:	40030e38 	.word	0x40030e38
4000e730:	f0f0f0f0 	.word	0xf0f0f0f0
4000e734:	40030ea0 	.word	0x40030ea0
4000e738:	40030e9c 	.word	0x40030e9c
4000e73c:	40030e90 	.word	0x40030e90
4000e740:	40030e3c 	.word	0x40030e3c

4000e744 <_tx_thread_info_get>:
4000e744:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e748:	e1a0c000 	mov	ip, r0
4000e74c:	e28d7028 	add	r7, sp, #40	; 0x28
4000e750:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000e754:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000e758:	e10f8000 	mrs	r8, CPSR
4000e75c:	e3889080 	orr	r9, r8, #128	; 0x80
4000e760:	e121f009 	msr	CPSR_c, r9
4000e764:	e59fa160 	ldr	sl, [pc, #352]	; 4000e8cc <_tx_thread_info_get+0x188>
4000e768:	e59a0000 	ldr	r0, [sl]
4000e76c:	e3500000 	cmp	r0, #0
4000e770:	0a000032 	beq	4000e840 <_tx_thread_info_get+0xfc>
4000e774:	e59fa154 	ldr	sl, [pc, #340]	; 4000e8d0 <_tx_thread_info_get+0x18c>
4000e778:	e59aa000 	ldr	sl, [sl]
4000e77c:	e28aa001 	add	sl, sl, #1
4000e780:	e59fb148 	ldr	fp, [pc, #328]	; 4000e8d0 <_tx_thread_info_get+0x18c>
4000e784:	e58ba000 	str	sl, [fp]
4000e788:	e580a00c 	str	sl, [r0, #12]
4000e78c:	e59fa140 	ldr	sl, [pc, #320]	; 4000e8d4 <_tx_thread_info_get+0x190>
4000e790:	e59aa000 	ldr	sl, [sl]
4000e794:	e35a0000 	cmp	sl, #0
4000e798:	1a000006 	bne	4000e7b8 <_tx_thread_info_get+0x74>
4000e79c:	e59fa134 	ldr	sl, [pc, #308]	; 4000e8d8 <_tx_thread_info_get+0x194>
4000e7a0:	e59aa000 	ldr	sl, [sl]
4000e7a4:	e580a000 	str	sl, [r0]
4000e7a8:	e590a000 	ldr	sl, [r0]
4000e7ac:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000e7b0:	e580a004 	str	sl, [r0, #4]
4000e7b4:	ea00000d 	b	4000e7f0 <_tx_thread_info_get+0xac>
4000e7b8:	e59fa114 	ldr	sl, [pc, #276]	; 4000e8d4 <_tx_thread_info_get+0x190>
4000e7bc:	e59aa000 	ldr	sl, [sl]
4000e7c0:	e59fb114 	ldr	fp, [pc, #276]	; 4000e8dc <_tx_thread_info_get+0x198>
4000e7c4:	e15a000b 	cmp	sl, fp
4000e7c8:	2a000004 	bcs	4000e7e0 <_tx_thread_info_get+0x9c>
4000e7cc:	e3e0a000 	mvn	sl, #0
4000e7d0:	e580a000 	str	sl, [r0]
4000e7d4:	e3a0a000 	mov	sl, #0
4000e7d8:	e580a004 	str	sl, [r0, #4]
4000e7dc:	ea000003 	b	4000e7f0 <_tx_thread_info_get+0xac>
4000e7e0:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000e8dc <_tx_thread_info_get+0x198>
4000e7e4:	e580a000 	str	sl, [r0]
4000e7e8:	e3a0a000 	mov	sl, #0
4000e7ec:	e580a004 	str	sl, [r0, #4]
4000e7f0:	e3a0a068 	mov	sl, #104	; 0x68
4000e7f4:	e580a008 	str	sl, [r0, #8]
4000e7f8:	e580c010 	str	ip, [r0, #16]
4000e7fc:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000e800:	e580a014 	str	sl, [r0, #20]
4000e804:	e3a0a000 	mov	sl, #0
4000e808:	e580a018 	str	sl, [r0, #24]
4000e80c:	e580a01c 	str	sl, [r0, #28]
4000e810:	e2800020 	add	r0, r0, #32
4000e814:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000e8e0 <_tx_thread_info_get+0x19c>
4000e818:	e59aa000 	ldr	sl, [sl]
4000e81c:	e150000a 	cmp	r0, sl
4000e820:	3a000001 	bcc	4000e82c <_tx_thread_info_get+0xe8>
4000e824:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000e8e4 <_tx_thread_info_get+0x1a0>
4000e828:	e59a0000 	ldr	r0, [sl]
4000e82c:	e59fa098 	ldr	sl, [pc, #152]	; 4000e8cc <_tx_thread_info_get+0x188>
4000e830:	e58a0000 	str	r0, [sl]
4000e834:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000e8e8 <_tx_thread_info_get+0x1a4>
4000e838:	e59aa000 	ldr	sl, [sl]
4000e83c:	e58a0020 	str	r0, [sl, #32]
4000e840:	e3510000 	cmp	r1, #0
4000e844:	0a000001 	beq	4000e850 <_tx_thread_info_get+0x10c>
4000e848:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000e84c:	e5810000 	str	r0, [r1]
4000e850:	e3520000 	cmp	r2, #0
4000e854:	0a000001 	beq	4000e860 <_tx_thread_info_get+0x11c>
4000e858:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000e85c:	e5820000 	str	r0, [r2]
4000e860:	e3530000 	cmp	r3, #0
4000e864:	0a000001 	beq	4000e870 <_tx_thread_info_get+0x12c>
4000e868:	e59c0004 	ldr	r0, [ip, #4]
4000e86c:	e5830000 	str	r0, [r3]
4000e870:	e35e0000 	cmp	lr, #0
4000e874:	0a000001 	beq	4000e880 <_tx_thread_info_get+0x13c>
4000e878:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000e87c:	e58e0000 	str	r0, [lr]
4000e880:	e3540000 	cmp	r4, #0
4000e884:	0a000001 	beq	4000e890 <_tx_thread_info_get+0x14c>
4000e888:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000e88c:	e5840000 	str	r0, [r4]
4000e890:	e3550000 	cmp	r5, #0
4000e894:	0a000001 	beq	4000e8a0 <_tx_thread_info_get+0x15c>
4000e898:	e59c0018 	ldr	r0, [ip, #24]
4000e89c:	e5850000 	str	r0, [r5]
4000e8a0:	e3560000 	cmp	r6, #0
4000e8a4:	0a000001 	beq	4000e8b0 <_tx_thread_info_get+0x16c>
4000e8a8:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000e8ac:	e5860000 	str	r0, [r6]
4000e8b0:	e3570000 	cmp	r7, #0
4000e8b4:	0a000001 	beq	4000e8c0 <_tx_thread_info_get+0x17c>
4000e8b8:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000e8bc:	e5870000 	str	r0, [r7]
4000e8c0:	e121f008 	msr	CPSR_c, r8
4000e8c4:	e3a00000 	mov	r0, #0
4000e8c8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e8cc:	40030ea4 	.word	0x40030ea4
4000e8d0:	40030ea8 	.word	0x40030ea8
4000e8d4:	40030e30 	.word	0x40030e30
4000e8d8:	40030e38 	.word	0x40030e38
4000e8dc:	f0f0f0f0 	.word	0xf0f0f0f0
4000e8e0:	40030ea0 	.word	0x40030ea0
4000e8e4:	40030e9c 	.word	0x40030e9c
4000e8e8:	40030e90 	.word	0x40030e90

4000e8ec <_tx_thread_priority_change>:
4000e8ec:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000e8f0:	e1a04000 	mov	r4, r0
4000e8f4:	e1a05001 	mov	r5, r1
4000e8f8:	e1a06002 	mov	r6, r2
4000e8fc:	e10f7000 	mrs	r7, CPSR
4000e900:	e3878080 	orr	r8, r7, #128	; 0x80
4000e904:	e121f008 	msr	CPSR_c, r8
4000e908:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000e90c:	e5860000 	str	r0, [r6]
4000e910:	e59f1150 	ldr	r1, [pc, #336]	; 4000ea68 <_tx_thread_priority_change+0x17c>
4000e914:	e5910000 	ldr	r0, [r1]
4000e918:	e3500000 	cmp	r0, #0
4000e91c:	0a000032 	beq	4000e9ec <_tx_thread_priority_change+0x100>
4000e920:	e59f1144 	ldr	r1, [pc, #324]	; 4000ea6c <_tx_thread_priority_change+0x180>
4000e924:	e5911000 	ldr	r1, [r1]
4000e928:	e2811001 	add	r1, r1, #1
4000e92c:	e59f2138 	ldr	r2, [pc, #312]	; 4000ea6c <_tx_thread_priority_change+0x180>
4000e930:	e5821000 	str	r1, [r2]
4000e934:	e580100c 	str	r1, [r0, #12]
4000e938:	e59f1130 	ldr	r1, [pc, #304]	; 4000ea70 <_tx_thread_priority_change+0x184>
4000e93c:	e5911000 	ldr	r1, [r1]
4000e940:	e3510000 	cmp	r1, #0
4000e944:	1a000006 	bne	4000e964 <_tx_thread_priority_change+0x78>
4000e948:	e59f1124 	ldr	r1, [pc, #292]	; 4000ea74 <_tx_thread_priority_change+0x188>
4000e94c:	e5911000 	ldr	r1, [r1]
4000e950:	e5801000 	str	r1, [r0]
4000e954:	e5901000 	ldr	r1, [r0]
4000e958:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e95c:	e5801004 	str	r1, [r0, #4]
4000e960:	ea00000d 	b	4000e99c <_tx_thread_priority_change+0xb0>
4000e964:	e59f1104 	ldr	r1, [pc, #260]	; 4000ea70 <_tx_thread_priority_change+0x184>
4000e968:	e5911000 	ldr	r1, [r1]
4000e96c:	e59f2104 	ldr	r2, [pc, #260]	; 4000ea78 <_tx_thread_priority_change+0x18c>
4000e970:	e1510002 	cmp	r1, r2
4000e974:	2a000004 	bcs	4000e98c <_tx_thread_priority_change+0xa0>
4000e978:	e3e01000 	mvn	r1, #0
4000e97c:	e5801000 	str	r1, [r0]
4000e980:	e3a01000 	mov	r1, #0
4000e984:	e5801004 	str	r1, [r0, #4]
4000e988:	ea000003 	b	4000e99c <_tx_thread_priority_change+0xb0>
4000e98c:	e59f10e4 	ldr	r1, [pc, #228]	; 4000ea78 <_tx_thread_priority_change+0x18c>
4000e990:	e5801000 	str	r1, [r0]
4000e994:	e3a01000 	mov	r1, #0
4000e998:	e5801004 	str	r1, [r0, #4]
4000e99c:	e3a0106c 	mov	r1, #108	; 0x6c
4000e9a0:	e5801008 	str	r1, [r0, #8]
4000e9a4:	e5804010 	str	r4, [r0, #16]
4000e9a8:	e5805014 	str	r5, [r0, #20]
4000e9ac:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000e9b0:	e5801018 	str	r1, [r0, #24]
4000e9b4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000e9b8:	e580101c 	str	r1, [r0, #28]
4000e9bc:	e2800020 	add	r0, r0, #32
4000e9c0:	e59f10b4 	ldr	r1, [pc, #180]	; 4000ea7c <_tx_thread_priority_change+0x190>
4000e9c4:	e5911000 	ldr	r1, [r1]
4000e9c8:	e1500001 	cmp	r0, r1
4000e9cc:	3a000001 	bcc	4000e9d8 <_tx_thread_priority_change+0xec>
4000e9d0:	e59f10a8 	ldr	r1, [pc, #168]	; 4000ea80 <_tx_thread_priority_change+0x194>
4000e9d4:	e5910000 	ldr	r0, [r1]
4000e9d8:	e59f1088 	ldr	r1, [pc, #136]	; 4000ea68 <_tx_thread_priority_change+0x17c>
4000e9dc:	e5810000 	str	r0, [r1]
4000e9e0:	e59f109c 	ldr	r1, [pc, #156]	; 4000ea84 <_tx_thread_priority_change+0x198>
4000e9e4:	e5911000 	ldr	r1, [r1]
4000e9e8:	e5810020 	str	r0, [r1, #32]
4000e9ec:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000e9f0:	e3500000 	cmp	r0, #0
4000e9f4:	0a000005 	beq	4000ea10 <_tx_thread_priority_change+0x124>
4000e9f8:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000e9fc:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ea00:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ea04:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ea08:	e121f007 	msr	CPSR_c, r7
4000ea0c:	ea000013 	b	4000ea60 <_tx_thread_priority_change+0x174>
4000ea10:	e59f0070 	ldr	r0, [pc, #112]	; 4000ea88 <_tx_thread_priority_change+0x19c>
4000ea14:	e5900000 	ldr	r0, [r0]
4000ea18:	e2800002 	add	r0, r0, #2
4000ea1c:	e59f1064 	ldr	r1, [pc, #100]	; 4000ea88 <_tx_thread_priority_change+0x19c>
4000ea20:	e5810000 	str	r0, [r1]
4000ea24:	e3a00003 	mov	r0, #3
4000ea28:	e5840030 	str	r0, [r4, #48]	; 0x30
4000ea2c:	e3a00001 	mov	r0, #1
4000ea30:	e5840038 	str	r0, [r4, #56]	; 0x38
4000ea34:	e3a00000 	mov	r0, #0
4000ea38:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000ea3c:	e121f007 	msr	CPSR_c, r7
4000ea40:	e1a00004 	mov	r0, r4
4000ea44:	ebffe834 	bl	40008b1c <_tx_thread_system_suspend>
4000ea48:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ea4c:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ea50:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ea54:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ea58:	e1a00004 	mov	r0, r4
4000ea5c:	eb0001d5 	bl	4000f1b8 <_tx_thread_system_resume>
4000ea60:	e3a00000 	mov	r0, #0
4000ea64:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ea68:	40030ea4 	.word	0x40030ea4
4000ea6c:	40030ea8 	.word	0x40030ea8
4000ea70:	40030e30 	.word	0x40030e30
4000ea74:	40030e38 	.word	0x40030e38
4000ea78:	f0f0f0f0 	.word	0xf0f0f0f0
4000ea7c:	40030ea0 	.word	0x40030ea0
4000ea80:	40030e9c 	.word	0x40030e9c
4000ea84:	40030e90 	.word	0x40030e90
4000ea88:	40030e54 	.word	0x40030e54

4000ea8c <_tx_thread_relinquish>:
4000ea8c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ea90:	e59f02b0 	ldr	r0, [pc, #688]	; 4000ed48 <_tx_thread_relinquish+0x2bc>
4000ea94:	e5900000 	ldr	r0, [r0]
4000ea98:	e58d0000 	str	r0, [sp]
4000ea9c:	e59d0000 	ldr	r0, [sp]
4000eaa0:	e5900008 	ldr	r0, [r0, #8]
4000eaa4:	e59d1000 	ldr	r1, [sp]
4000eaa8:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000eaac:	e1500001 	cmp	r0, r1
4000eab0:	2a000003 	bcs	4000eac4 <_tx_thread_relinquish+0x38>
4000eab4:	e59d0000 	ldr	r0, [sp]
4000eab8:	e5900008 	ldr	r0, [r0, #8]
4000eabc:	e59d1000 	ldr	r1, [sp]
4000eac0:	e5810040 	str	r0, [r1, #64]	; 0x40
4000eac4:	e59d0000 	ldr	r0, [sp]
4000eac8:	e590000c 	ldr	r0, [r0, #12]
4000eacc:	e5900000 	ldr	r0, [r0]
4000ead0:	e59f1274 	ldr	r1, [pc, #628]	; 4000ed4c <_tx_thread_relinquish+0x2c0>
4000ead4:	e1500001 	cmp	r0, r1
4000ead8:	1a00000a 	bne	4000eb08 <_tx_thread_relinquish+0x7c>
4000eadc:	e59d0000 	ldr	r0, [sp]
4000eae0:	e5900010 	ldr	r0, [r0, #16]
4000eae4:	e5900001 	ldr	r0, [r0, #1]
4000eae8:	e1500001 	cmp	r0, r1
4000eaec:	1a000005 	bne	4000eb08 <_tx_thread_relinquish+0x7c>
4000eaf0:	e59d0000 	ldr	r0, [sp]
4000eaf4:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eaf8:	e59d1000 	ldr	r1, [sp]
4000eafc:	e591100c 	ldr	r1, [r1, #12]
4000eb00:	e1500001 	cmp	r0, r1
4000eb04:	2a000001 	bcs	4000eb10 <_tx_thread_relinquish+0x84>
4000eb08:	e59d0000 	ldr	r0, [sp]
4000eb0c:	eb00016a 	bl	4000f0bc <_tx_thread_stack_error_handler>
4000eb10:	e59d0000 	ldr	r0, [sp]
4000eb14:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eb18:	e5100004 	ldr	r0, [r0, #-4]
4000eb1c:	e59f1228 	ldr	r1, [pc, #552]	; 4000ed4c <_tx_thread_relinquish+0x2c0>
4000eb20:	e1500001 	cmp	r0, r1
4000eb24:	0a000001 	beq	4000eb30 <_tx_thread_relinquish+0xa4>
4000eb28:	e59d0000 	ldr	r0, [sp]
4000eb2c:	eb00012d 	bl	4000efe8 <_tx_thread_stack_analyze>
4000eb30:	e10f4000 	mrs	r4, CPSR
4000eb34:	e3845080 	orr	r5, r4, #128	; 0x80
4000eb38:	e121f005 	msr	CPSR_c, r5
4000eb3c:	e59f120c 	ldr	r1, [pc, #524]	; 4000ed50 <_tx_thread_relinquish+0x2c4>
4000eb40:	e5910000 	ldr	r0, [r1]
4000eb44:	e3500000 	cmp	r0, #0
4000eb48:	0a000031 	beq	4000ec14 <_tx_thread_relinquish+0x188>
4000eb4c:	e59f1200 	ldr	r1, [pc, #512]	; 4000ed54 <_tx_thread_relinquish+0x2c8>
4000eb50:	e5911000 	ldr	r1, [r1]
4000eb54:	e2811001 	add	r1, r1, #1
4000eb58:	e59f21f4 	ldr	r2, [pc, #500]	; 4000ed54 <_tx_thread_relinquish+0x2c8>
4000eb5c:	e5821000 	str	r1, [r2]
4000eb60:	e580100c 	str	r1, [r0, #12]
4000eb64:	e59f11ec 	ldr	r1, [pc, #492]	; 4000ed58 <_tx_thread_relinquish+0x2cc>
4000eb68:	e5911000 	ldr	r1, [r1]
4000eb6c:	e3510000 	cmp	r1, #0
4000eb70:	1a000006 	bne	4000eb90 <_tx_thread_relinquish+0x104>
4000eb74:	e59f11cc 	ldr	r1, [pc, #460]	; 4000ed48 <_tx_thread_relinquish+0x2bc>
4000eb78:	e5911000 	ldr	r1, [r1]
4000eb7c:	e5801000 	str	r1, [r0]
4000eb80:	e5901000 	ldr	r1, [r0]
4000eb84:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eb88:	e5801004 	str	r1, [r0, #4]
4000eb8c:	ea00000d 	b	4000ebc8 <_tx_thread_relinquish+0x13c>
4000eb90:	e59f11c0 	ldr	r1, [pc, #448]	; 4000ed58 <_tx_thread_relinquish+0x2cc>
4000eb94:	e5911000 	ldr	r1, [r1]
4000eb98:	e59f21bc 	ldr	r2, [pc, #444]	; 4000ed5c <_tx_thread_relinquish+0x2d0>
4000eb9c:	e1510002 	cmp	r1, r2
4000eba0:	2a000004 	bcs	4000ebb8 <_tx_thread_relinquish+0x12c>
4000eba4:	e3e01000 	mvn	r1, #0
4000eba8:	e5801000 	str	r1, [r0]
4000ebac:	e3a01000 	mov	r1, #0
4000ebb0:	e5801004 	str	r1, [r0, #4]
4000ebb4:	ea000003 	b	4000ebc8 <_tx_thread_relinquish+0x13c>
4000ebb8:	e59f119c 	ldr	r1, [pc, #412]	; 4000ed5c <_tx_thread_relinquish+0x2d0>
4000ebbc:	e5801000 	str	r1, [r0]
4000ebc0:	e3a01000 	mov	r1, #0
4000ebc4:	e5801004 	str	r1, [r0, #4]
4000ebc8:	e3a0106d 	mov	r1, #109	; 0x6d
4000ebcc:	e5801008 	str	r1, [r0, #8]
4000ebd0:	e580d010 	str	sp, [r0, #16]
4000ebd4:	e3a01000 	mov	r1, #0
4000ebd8:	e5801014 	str	r1, [r0, #20]
4000ebdc:	e5801018 	str	r1, [r0, #24]
4000ebe0:	e580101c 	str	r1, [r0, #28]
4000ebe4:	e2800020 	add	r0, r0, #32
4000ebe8:	e59f1170 	ldr	r1, [pc, #368]	; 4000ed60 <_tx_thread_relinquish+0x2d4>
4000ebec:	e5911000 	ldr	r1, [r1]
4000ebf0:	e1500001 	cmp	r0, r1
4000ebf4:	3a000001 	bcc	4000ec00 <_tx_thread_relinquish+0x174>
4000ebf8:	e59f1164 	ldr	r1, [pc, #356]	; 4000ed64 <_tx_thread_relinquish+0x2d8>
4000ebfc:	e5910000 	ldr	r0, [r1]
4000ec00:	e59f1148 	ldr	r1, [pc, #328]	; 4000ed50 <_tx_thread_relinquish+0x2c4>
4000ec04:	e5810000 	str	r0, [r1]
4000ec08:	e59f1158 	ldr	r1, [pc, #344]	; 4000ed68 <_tx_thread_relinquish+0x2dc>
4000ec0c:	e5911000 	ldr	r1, [r1]
4000ec10:	e5810020 	str	r0, [r1, #32]
4000ec14:	e59d0000 	ldr	r0, [sp]
4000ec18:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ec1c:	e59d0000 	ldr	r0, [sp]
4000ec20:	e5900020 	ldr	r0, [r0, #32]
4000ec24:	e59d1000 	ldr	r1, [sp]
4000ec28:	e1500001 	cmp	r0, r1
4000ec2c:	0a000013 	beq	4000ec80 <_tx_thread_relinquish+0x1f4>
4000ec30:	e59d0000 	ldr	r0, [sp]
4000ec34:	e5900020 	ldr	r0, [r0, #32]
4000ec38:	e59f112c 	ldr	r1, [pc, #300]	; 4000ed6c <_tx_thread_relinquish+0x2e0>
4000ec3c:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ec40:	e59d0000 	ldr	r0, [sp]
4000ec44:	e5900020 	ldr	r0, [r0, #32]
4000ec48:	e59f1120 	ldr	r1, [pc, #288]	; 4000ed70 <_tx_thread_relinquish+0x2e4>
4000ec4c:	e5810000 	str	r0, [r1]
4000ec50:	e59f011c 	ldr	r0, [pc, #284]	; 4000ed74 <_tx_thread_relinquish+0x2e8>
4000ec54:	e5900000 	ldr	r0, [r0]
4000ec58:	e3500000 	cmp	r0, #0
4000ec5c:	0a000007 	beq	4000ec80 <_tx_thread_relinquish+0x1f4>
4000ec60:	e59f010c 	ldr	r0, [pc, #268]	; 4000ed74 <_tx_thread_relinquish+0x2e8>
4000ec64:	e5900000 	ldr	r0, [r0]
4000ec68:	e59d1000 	ldr	r1, [sp]
4000ec6c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ec70:	e3a02001 	mov	r2, #1
4000ec74:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ec78:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ed74 <_tx_thread_relinquish+0x2e8>
4000ec7c:	e5810000 	str	r0, [r1]
4000ec80:	e59f00f0 	ldr	r0, [pc, #240]	; 4000ed78 <_tx_thread_relinquish+0x2ec>
4000ec84:	e5900000 	ldr	r0, [r0]
4000ec88:	e1500006 	cmp	r0, r6
4000ec8c:	2a000005 	bcs	4000eca8 <_tx_thread_relinquish+0x21c>
4000ec90:	e59f00d4 	ldr	r0, [pc, #212]	; 4000ed6c <_tx_thread_relinquish+0x2e0>
4000ec94:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ed78 <_tx_thread_relinquish+0x2ec>
4000ec98:	e5911000 	ldr	r1, [r1]
4000ec9c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000eca0:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ed70 <_tx_thread_relinquish+0x2e4>
4000eca4:	e5810000 	str	r0, [r1]
4000eca8:	e121f004 	msr	CPSR_c, r4
4000ecac:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ed70 <_tx_thread_relinquish+0x2e4>
4000ecb0:	e5900000 	ldr	r0, [r0]
4000ecb4:	e59d1000 	ldr	r1, [sp]
4000ecb8:	e1500001 	cmp	r0, r1
4000ecbc:	0a000020 	beq	4000ed44 <_tx_thread_relinquish+0x2b8>
4000ecc0:	e59f00a8 	ldr	r0, [pc, #168]	; 4000ed70 <_tx_thread_relinquish+0x2e4>
4000ecc4:	e5900000 	ldr	r0, [r0]
4000ecc8:	e58d0000 	str	r0, [sp]
4000eccc:	e59d0000 	ldr	r0, [sp]
4000ecd0:	e5900008 	ldr	r0, [r0, #8]
4000ecd4:	e59d1000 	ldr	r1, [sp]
4000ecd8:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ecdc:	e1500001 	cmp	r0, r1
4000ece0:	2a000003 	bcs	4000ecf4 <_tx_thread_relinquish+0x268>
4000ece4:	e59d0000 	ldr	r0, [sp]
4000ece8:	e5900008 	ldr	r0, [r0, #8]
4000ecec:	e59d1000 	ldr	r1, [sp]
4000ecf0:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ecf4:	e59d0000 	ldr	r0, [sp]
4000ecf8:	e590000c 	ldr	r0, [r0, #12]
4000ecfc:	e5900000 	ldr	r0, [r0]
4000ed00:	e59f1044 	ldr	r1, [pc, #68]	; 4000ed4c <_tx_thread_relinquish+0x2c0>
4000ed04:	e1500001 	cmp	r0, r1
4000ed08:	1a00000a 	bne	4000ed38 <_tx_thread_relinquish+0x2ac>
4000ed0c:	e59d0000 	ldr	r0, [sp]
4000ed10:	e5900010 	ldr	r0, [r0, #16]
4000ed14:	e5900001 	ldr	r0, [r0, #1]
4000ed18:	e1500001 	cmp	r0, r1
4000ed1c:	1a000005 	bne	4000ed38 <_tx_thread_relinquish+0x2ac>
4000ed20:	e59d0000 	ldr	r0, [sp]
4000ed24:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ed28:	e59d1000 	ldr	r1, [sp]
4000ed2c:	e591100c 	ldr	r1, [r1, #12]
4000ed30:	e1500001 	cmp	r0, r1
4000ed34:	2a000001 	bcs	4000ed40 <_tx_thread_relinquish+0x2b4>
4000ed38:	e59d0000 	ldr	r0, [sp]
4000ed3c:	eb0000de 	bl	4000f0bc <_tx_thread_stack_error_handler>
4000ed40:	ebffef86 	bl	4000ab60 <_tx_thread_system_return>
4000ed44:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ed48:	40030e38 	.word	0x40030e38
4000ed4c:	efefefef 	.word	0xefefefef
4000ed50:	40030ea4 	.word	0x40030ea4
4000ed54:	40030ea8 	.word	0x40030ea8
4000ed58:	40030e30 	.word	0x40030e30
4000ed5c:	f0f0f0f0 	.word	0xf0f0f0f0
4000ed60:	40030ea0 	.word	0x40030ea0
4000ed64:	40030e9c 	.word	0x40030e9c
4000ed68:	40030e90 	.word	0x40030e90
4000ed6c:	40032874 	.word	0x40032874
4000ed70:	40030e3c 	.word	0x40030e3c
4000ed74:	40030e4c 	.word	0x40030e4c
4000ed78:	40030e50 	.word	0x40030e50

4000ed7c <_tx_thread_resume>:
4000ed7c:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000ed80:	e1a04000 	mov	r4, r0
4000ed84:	e3a00000 	mov	r0, #0
4000ed88:	e58d0000 	str	r0, [sp]
4000ed8c:	e10f5000 	mrs	r5, CPSR
4000ed90:	e3856080 	orr	r6, r5, #128	; 0x80
4000ed94:	e121f006 	msr	CPSR_c, r6
4000ed98:	e59f1184 	ldr	r1, [pc, #388]	; 4000ef24 <_tx_thread_resume+0x1a8>
4000ed9c:	e5910000 	ldr	r0, [r1]
4000eda0:	e3500000 	cmp	r0, #0
4000eda4:	0a000032 	beq	4000ee74 <_tx_thread_resume+0xf8>
4000eda8:	e59f1178 	ldr	r1, [pc, #376]	; 4000ef28 <_tx_thread_resume+0x1ac>
4000edac:	e5911000 	ldr	r1, [r1]
4000edb0:	e2811001 	add	r1, r1, #1
4000edb4:	e59f216c 	ldr	r2, [pc, #364]	; 4000ef28 <_tx_thread_resume+0x1ac>
4000edb8:	e5821000 	str	r1, [r2]
4000edbc:	e580100c 	str	r1, [r0, #12]
4000edc0:	e59f1164 	ldr	r1, [pc, #356]	; 4000ef2c <_tx_thread_resume+0x1b0>
4000edc4:	e5911000 	ldr	r1, [r1]
4000edc8:	e3510000 	cmp	r1, #0
4000edcc:	1a000006 	bne	4000edec <_tx_thread_resume+0x70>
4000edd0:	e59f1158 	ldr	r1, [pc, #344]	; 4000ef30 <_tx_thread_resume+0x1b4>
4000edd4:	e5911000 	ldr	r1, [r1]
4000edd8:	e5801000 	str	r1, [r0]
4000eddc:	e5901000 	ldr	r1, [r0]
4000ede0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ede4:	e5801004 	str	r1, [r0, #4]
4000ede8:	ea00000d 	b	4000ee24 <_tx_thread_resume+0xa8>
4000edec:	e59f1138 	ldr	r1, [pc, #312]	; 4000ef2c <_tx_thread_resume+0x1b0>
4000edf0:	e5911000 	ldr	r1, [r1]
4000edf4:	e59f2138 	ldr	r2, [pc, #312]	; 4000ef34 <_tx_thread_resume+0x1b8>
4000edf8:	e1510002 	cmp	r1, r2
4000edfc:	2a000004 	bcs	4000ee14 <_tx_thread_resume+0x98>
4000ee00:	e3e01000 	mvn	r1, #0
4000ee04:	e5801000 	str	r1, [r0]
4000ee08:	e3a01000 	mov	r1, #0
4000ee0c:	e5801004 	str	r1, [r0, #4]
4000ee10:	ea000003 	b	4000ee24 <_tx_thread_resume+0xa8>
4000ee14:	e59f1118 	ldr	r1, [pc, #280]	; 4000ef34 <_tx_thread_resume+0x1b8>
4000ee18:	e5801000 	str	r1, [r0]
4000ee1c:	e3a01000 	mov	r1, #0
4000ee20:	e5801004 	str	r1, [r0, #4]
4000ee24:	e3a0106f 	mov	r1, #111	; 0x6f
4000ee28:	e5801008 	str	r1, [r0, #8]
4000ee2c:	e5804010 	str	r4, [r0, #16]
4000ee30:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ee34:	e5801014 	str	r1, [r0, #20]
4000ee38:	e580d018 	str	sp, [r0, #24]
4000ee3c:	e3a01000 	mov	r1, #0
4000ee40:	e580101c 	str	r1, [r0, #28]
4000ee44:	e2800020 	add	r0, r0, #32
4000ee48:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ef38 <_tx_thread_resume+0x1bc>
4000ee4c:	e5911000 	ldr	r1, [r1]
4000ee50:	e1500001 	cmp	r0, r1
4000ee54:	3a000001 	bcc	4000ee60 <_tx_thread_resume+0xe4>
4000ee58:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ef3c <_tx_thread_resume+0x1c0>
4000ee5c:	e5910000 	ldr	r0, [r1]
4000ee60:	e59f10bc 	ldr	r1, [pc, #188]	; 4000ef24 <_tx_thread_resume+0x1a8>
4000ee64:	e5810000 	str	r0, [r1]
4000ee68:	e59f10d0 	ldr	r1, [pc, #208]	; 4000ef40 <_tx_thread_resume+0x1c4>
4000ee6c:	e5911000 	ldr	r1, [r1]
4000ee70:	e5810020 	str	r0, [r1, #32]
4000ee74:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ee78:	e3500003 	cmp	r0, #3
4000ee7c:	1a00001c 	bne	4000eef4 <_tx_thread_resume+0x178>
4000ee80:	e59f00bc 	ldr	r0, [pc, #188]	; 4000ef44 <_tx_thread_resume+0x1c8>
4000ee84:	e5900000 	ldr	r0, [r0]
4000ee88:	e2800001 	add	r0, r0, #1
4000ee8c:	e59f10b0 	ldr	r1, [pc, #176]	; 4000ef44 <_tx_thread_resume+0x1c8>
4000ee90:	e5810000 	str	r0, [r1]
4000ee94:	e121f005 	msr	CPSR_c, r5
4000ee98:	e59f008c 	ldr	r0, [pc, #140]	; 4000ef2c <_tx_thread_resume+0x1b0>
4000ee9c:	e5900000 	ldr	r0, [r0]
4000eea0:	e59f108c 	ldr	r1, [pc, #140]	; 4000ef34 <_tx_thread_resume+0x1b8>
4000eea4:	e1500001 	cmp	r0, r1
4000eea8:	3a000008 	bcc	4000eed0 <_tx_thread_resume+0x154>
4000eeac:	e59f0094 	ldr	r0, [pc, #148]	; 4000ef48 <_tx_thread_resume+0x1cc>
4000eeb0:	e5907000 	ldr	r7, [r0]
4000eeb4:	e3570000 	cmp	r7, #0
4000eeb8:	0a000005 	beq	4000eed4 <_tx_thread_resume+0x158>
4000eebc:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000eec0:	e58d0000 	str	r0, [sp]
4000eec4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000eec8:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000eecc:	ea000000 	b	4000eed4 <_tx_thread_resume+0x158>
4000eed0:	e3a07000 	mov	r7, #0
4000eed4:	e1a00004 	mov	r0, r4
4000eed8:	eb0000b6 	bl	4000f1b8 <_tx_thread_system_resume>
4000eedc:	e3570000 	cmp	r7, #0
4000eee0:	0a000001 	beq	4000eeec <_tx_thread_resume+0x170>
4000eee4:	e59d0000 	ldr	r0, [sp]
4000eee8:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000eeec:	e3a08000 	mov	r8, #0
4000eef0:	ea000009 	b	4000ef1c <_tx_thread_resume+0x1a0>
4000eef4:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000eef8:	e3500000 	cmp	r0, #0
4000eefc:	0a000004 	beq	4000ef14 <_tx_thread_resume+0x198>
4000ef00:	e3a00000 	mov	r0, #0
4000ef04:	e5840034 	str	r0, [r4, #52]	; 0x34
4000ef08:	e121f005 	msr	CPSR_c, r5
4000ef0c:	e3a08019 	mov	r8, #25
4000ef10:	ea000001 	b	4000ef1c <_tx_thread_resume+0x1a0>
4000ef14:	e121f005 	msr	CPSR_c, r5
4000ef18:	e3a08012 	mov	r8, #18
4000ef1c:	e1a00008 	mov	r0, r8
4000ef20:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000ef24:	40030ea4 	.word	0x40030ea4
4000ef28:	40030ea8 	.word	0x40030ea8
4000ef2c:	40030e30 	.word	0x40030e30
4000ef30:	40030e38 	.word	0x40030e38
4000ef34:	f0f0f0f0 	.word	0xf0f0f0f0
4000ef38:	40030ea0 	.word	0x40030ea0
4000ef3c:	40030e9c 	.word	0x40030e9c
4000ef40:	40030e90 	.word	0x40030e90
4000ef44:	40030e54 	.word	0x40030e54
4000ef48:	40030e3c 	.word	0x40030e3c

4000ef4c <_tx_thread_shell_entry>:
4000ef4c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ef50:	e59f0088 	ldr	r0, [pc, #136]	; 4000efe0 <_tx_thread_shell_entry+0x94>
4000ef54:	e5907000 	ldr	r7, [r0]
4000ef58:	e10f4000 	mrs	r4, CPSR
4000ef5c:	e3845080 	orr	r5, r4, #128	; 0x80
4000ef60:	e121f005 	msr	CPSR_c, r5
4000ef64:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000ef68:	e121f004 	msr	CPSR_c, r4
4000ef6c:	e3560000 	cmp	r6, #0
4000ef70:	0a000002 	beq	4000ef80 <_tx_thread_shell_entry+0x34>
4000ef74:	e3a01000 	mov	r1, #0
4000ef78:	e1a00007 	mov	r0, r7
4000ef7c:	e12fff36 	blx	r6
4000ef80:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000ef84:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000ef88:	e12fff31 	blx	r1
4000ef8c:	e10f4000 	mrs	r4, CPSR
4000ef90:	e3845080 	orr	r5, r4, #128	; 0x80
4000ef94:	e121f005 	msr	CPSR_c, r5
4000ef98:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000ef9c:	e3a00001 	mov	r0, #1
4000efa0:	e5870030 	str	r0, [r7, #48]	; 0x30
4000efa4:	e5870038 	str	r0, [r7, #56]	; 0x38
4000efa8:	e59f0034 	ldr	r0, [pc, #52]	; 4000efe4 <_tx_thread_shell_entry+0x98>
4000efac:	e5900000 	ldr	r0, [r0]
4000efb0:	e2800001 	add	r0, r0, #1
4000efb4:	e59f1028 	ldr	r1, [pc, #40]	; 4000efe4 <_tx_thread_shell_entry+0x98>
4000efb8:	e5810000 	str	r0, [r1]
4000efbc:	e121f004 	msr	CPSR_c, r4
4000efc0:	e3560000 	cmp	r6, #0
4000efc4:	0a000002 	beq	4000efd4 <_tx_thread_shell_entry+0x88>
4000efc8:	e3a01001 	mov	r1, #1
4000efcc:	e1a00007 	mov	r0, r7
4000efd0:	e12fff36 	blx	r6
4000efd4:	e1a00007 	mov	r0, r7
4000efd8:	ebffe6cf 	bl	40008b1c <_tx_thread_system_suspend>
4000efdc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000efe0:	40030e38 	.word	0x40030e38
4000efe4:	40030e54 	.word	0x40030e54

4000efe8 <_tx_thread_stack_analyze>:
4000efe8:	e92d4070 	push	{r4, r5, r6, lr}
4000efec:	e10f1000 	mrs	r1, CPSR
4000eff0:	e3812080 	orr	r2, r1, #128	; 0x80
4000eff4:	e121f002 	msr	CPSR_c, r2
4000eff8:	e3500000 	cmp	r0, #0
4000effc:	0a000003 	beq	4000f010 <_tx_thread_stack_analyze+0x28>
4000f000:	e5905000 	ldr	r5, [r0]
4000f004:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f0b4 <_tx_thread_stack_analyze+0xcc>
4000f008:	e1550006 	cmp	r5, r6
4000f00c:	0a000001 	beq	4000f018 <_tx_thread_stack_analyze+0x30>
4000f010:	e121f001 	msr	CPSR_c, r1
4000f014:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f018:	e590c008 	ldr	ip, [r0, #8]
4000f01c:	e590300c 	ldr	r3, [r0, #12]
4000f020:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f024:	e121f001 	msr	CPSR_c, r1
4000f028:	e24ec004 	sub	ip, lr, #4
4000f02c:	e04e6003 	sub	r6, lr, r3
4000f030:	e1a05146 	asr	r5, r6, #2
4000f034:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f038:	e1a040c6 	asr	r4, r6, #1
4000f03c:	e083c104 	add	ip, r3, r4, lsl #2
4000f040:	e1a00000 	nop			; (mov r0, r0)
4000f044:	e59c5000 	ldr	r5, [ip]
4000f048:	e59f6068 	ldr	r6, [pc, #104]	; 4000f0b8 <_tx_thread_stack_analyze+0xd0>
4000f04c:	e1550006 	cmp	r5, r6
4000f050:	0a000002 	beq	4000f060 <_tx_thread_stack_analyze+0x78>
4000f054:	e1a050a4 	lsr	r5, r4, #1
4000f058:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f05c:	ea000001 	b	4000f068 <_tx_thread_stack_analyze+0x80>
4000f060:	e1a050a4 	lsr	r5, r4, #1
4000f064:	e08cc105 	add	ip, ip, r5, lsl #2
4000f068:	e1a040a4 	lsr	r4, r4, #1
4000f06c:	e3540001 	cmp	r4, #1
4000f070:	8afffff3 	bhi	4000f044 <_tx_thread_stack_analyze+0x5c>
4000f074:	ea000000 	b	4000f07c <_tx_thread_stack_analyze+0x94>
4000f078:	e28cc004 	add	ip, ip, #4
4000f07c:	e59c5000 	ldr	r5, [ip]
4000f080:	e59f6030 	ldr	r6, [pc, #48]	; 4000f0b8 <_tx_thread_stack_analyze+0xd0>
4000f084:	e1550006 	cmp	r5, r6
4000f088:	0afffffa 	beq	4000f078 <_tx_thread_stack_analyze+0x90>
4000f08c:	e10f1000 	mrs	r1, CPSR
4000f090:	e3812080 	orr	r2, r1, #128	; 0x80
4000f094:	e121f002 	msr	CPSR_c, r2
4000f098:	e5905000 	ldr	r5, [r0]
4000f09c:	e59f6010 	ldr	r6, [pc, #16]	; 4000f0b4 <_tx_thread_stack_analyze+0xcc>
4000f0a0:	e1550006 	cmp	r5, r6
4000f0a4:	1a000000 	bne	4000f0ac <_tx_thread_stack_analyze+0xc4>
4000f0a8:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f0ac:	e121f001 	msr	CPSR_c, r1
4000f0b0:	eaffffd7 	b	4000f014 <_tx_thread_stack_analyze+0x2c>
4000f0b4:	54485244 	.word	0x54485244
4000f0b8:	efefefef 	.word	0xefefefef

4000f0bc <_tx_thread_stack_error_handler>:
4000f0bc:	e92d4070 	push	{r4, r5, r6, lr}
4000f0c0:	e1a04000 	mov	r4, r0
4000f0c4:	e10f5000 	mrs	r5, CPSR
4000f0c8:	e3856080 	orr	r6, r5, #128	; 0x80
4000f0cc:	e121f006 	msr	CPSR_c, r6
4000f0d0:	e59f002c 	ldr	r0, [pc, #44]	; 4000f104 <_tx_thread_stack_error_handler+0x48>
4000f0d4:	e5900000 	ldr	r0, [r0]
4000f0d8:	e3500000 	cmp	r0, #0
4000f0dc:	0a000004 	beq	4000f0f4 <_tx_thread_stack_error_handler+0x38>
4000f0e0:	e1a00004 	mov	r0, r4
4000f0e4:	e59f1018 	ldr	r1, [pc, #24]	; 4000f104 <_tx_thread_stack_error_handler+0x48>
4000f0e8:	e5911000 	ldr	r1, [r1]
4000f0ec:	e12fff31 	blx	r1
4000f0f0:	ea000001 	b	4000f0fc <_tx_thread_stack_error_handler+0x40>
4000f0f4:	e1a00000 	nop			; (mov r0, r0)
4000f0f8:	eafffffe 	b	4000f0f8 <_tx_thread_stack_error_handler+0x3c>
4000f0fc:	e121f005 	msr	CPSR_c, r5
4000f100:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f104:	40030e5c 	.word	0x40030e5c

4000f108 <_tx_thread_system_preempt_check>:
4000f108:	e92d4010 	push	{r4, lr}
4000f10c:	e59f0090 	ldr	r0, [pc, #144]	; 4000f1a4 <_tx_thread_system_preempt_check+0x9c>
4000f110:	e5900000 	ldr	r0, [r0]
4000f114:	e59f108c 	ldr	r1, [pc, #140]	; 4000f1a8 <_tx_thread_system_preempt_check+0xa0>
4000f118:	e5911000 	ldr	r1, [r1]
4000f11c:	e1500001 	cmp	r0, r1
4000f120:	0a00001e 	beq	4000f1a0 <_tx_thread_system_preempt_check+0x98>
4000f124:	e59f0080 	ldr	r0, [pc, #128]	; 4000f1ac <_tx_thread_system_preempt_check+0xa4>
4000f128:	e5900000 	ldr	r0, [r0]
4000f12c:	e59f107c 	ldr	r1, [pc, #124]	; 4000f1b0 <_tx_thread_system_preempt_check+0xa8>
4000f130:	e5911000 	ldr	r1, [r1]
4000f134:	e1900001 	orrs	r0, r0, r1
4000f138:	1a000018 	bne	4000f1a0 <_tx_thread_system_preempt_check+0x98>
4000f13c:	e59f0064 	ldr	r0, [pc, #100]	; 4000f1a8 <_tx_thread_system_preempt_check+0xa0>
4000f140:	e5904000 	ldr	r4, [r0]
4000f144:	e5940008 	ldr	r0, [r4, #8]
4000f148:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f14c:	e1500001 	cmp	r0, r1
4000f150:	2a000001 	bcs	4000f15c <_tx_thread_system_preempt_check+0x54>
4000f154:	e5940008 	ldr	r0, [r4, #8]
4000f158:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f15c:	e594000c 	ldr	r0, [r4, #12]
4000f160:	e5900000 	ldr	r0, [r0]
4000f164:	e59f1048 	ldr	r1, [pc, #72]	; 4000f1b4 <_tx_thread_system_preempt_check+0xac>
4000f168:	e1500001 	cmp	r0, r1
4000f16c:	1a000007 	bne	4000f190 <_tx_thread_system_preempt_check+0x88>
4000f170:	e5940010 	ldr	r0, [r4, #16]
4000f174:	e5900001 	ldr	r0, [r0, #1]
4000f178:	e1500001 	cmp	r0, r1
4000f17c:	1a000003 	bne	4000f190 <_tx_thread_system_preempt_check+0x88>
4000f180:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f184:	e594100c 	ldr	r1, [r4, #12]
4000f188:	e1500001 	cmp	r0, r1
4000f18c:	2a000001 	bcs	4000f198 <_tx_thread_system_preempt_check+0x90>
4000f190:	e1a00004 	mov	r0, r4
4000f194:	ebffffc8 	bl	4000f0bc <_tx_thread_stack_error_handler>
4000f198:	ebffee70 	bl	4000ab60 <_tx_thread_system_return>
4000f19c:	e1a00000 	nop			; (mov r0, r0)
4000f1a0:	e8bd8010 	pop	{r4, pc}
4000f1a4:	40030e38 	.word	0x40030e38
4000f1a8:	40030e3c 	.word	0x40030e3c
4000f1ac:	40030e30 	.word	0x40030e30
4000f1b0:	40030e54 	.word	0x40030e54
4000f1b4:	efefefef 	.word	0xefefefef

4000f1b8 <_tx_thread_system_resume>:
4000f1b8:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f1bc:	e1a04000 	mov	r4, r0
4000f1c0:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f1c4:	e3500000 	cmp	r0, #0
4000f1c8:	0a000002 	beq	4000f1d8 <_tx_thread_system_resume+0x20>
4000f1cc:	e284004c 	add	r0, r4, #76	; 0x4c
4000f1d0:	eb000325 	bl	4000fe6c <_tx_timer_system_deactivate>
4000f1d4:	ea000001 	b	4000f1e0 <_tx_thread_system_resume+0x28>
4000f1d8:	e3a00000 	mov	r0, #0
4000f1dc:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f1e0:	e5940008 	ldr	r0, [r4, #8]
4000f1e4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f1e8:	e1500001 	cmp	r0, r1
4000f1ec:	2a000001 	bcs	4000f1f8 <_tx_thread_system_resume+0x40>
4000f1f0:	e5940008 	ldr	r0, [r4, #8]
4000f1f4:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f1f8:	e594000c 	ldr	r0, [r4, #12]
4000f1fc:	e5900000 	ldr	r0, [r0]
4000f200:	e59f133c 	ldr	r1, [pc, #828]	; 4000f544 <_tx_thread_system_resume+0x38c>
4000f204:	e1500001 	cmp	r0, r1
4000f208:	1a000007 	bne	4000f22c <_tx_thread_system_resume+0x74>
4000f20c:	e5940010 	ldr	r0, [r4, #16]
4000f210:	e5900001 	ldr	r0, [r0, #1]
4000f214:	e1500001 	cmp	r0, r1
4000f218:	1a000003 	bne	4000f22c <_tx_thread_system_resume+0x74>
4000f21c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f220:	e594100c 	ldr	r1, [r4, #12]
4000f224:	e1500001 	cmp	r0, r1
4000f228:	2a000001 	bcs	4000f234 <_tx_thread_system_resume+0x7c>
4000f22c:	e1a00004 	mov	r0, r4
4000f230:	ebffffa1 	bl	4000f0bc <_tx_thread_stack_error_handler>
4000f234:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f238:	e5100004 	ldr	r0, [r0, #-4]
4000f23c:	e59f1300 	ldr	r1, [pc, #768]	; 4000f544 <_tx_thread_system_resume+0x38c>
4000f240:	e1500001 	cmp	r0, r1
4000f244:	0a000001 	beq	4000f250 <_tx_thread_system_resume+0x98>
4000f248:	e1a00004 	mov	r0, r4
4000f24c:	ebffff65 	bl	4000efe8 <_tx_thread_stack_analyze>
4000f250:	e10f5000 	mrs	r5, CPSR
4000f254:	e3856080 	orr	r6, r5, #128	; 0x80
4000f258:	e121f006 	msr	CPSR_c, r6
4000f25c:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f548 <_tx_thread_system_resume+0x390>
4000f260:	e5900000 	ldr	r0, [r0]
4000f264:	e2400001 	sub	r0, r0, #1
4000f268:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f548 <_tx_thread_system_resume+0x390>
4000f26c:	e5810000 	str	r0, [r1]
4000f270:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f274:	e3500000 	cmp	r0, #0
4000f278:	0a000009 	beq	4000f2a4 <_tx_thread_system_resume+0xec>
4000f27c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f280:	e3500001 	cmp	r0, #1
4000f284:	0a000084 	beq	4000f49c <_tx_thread_system_resume+0x2e4>
4000f288:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f28c:	e3500002 	cmp	r0, #2
4000f290:	0a000081 	beq	4000f49c <_tx_thread_system_resume+0x2e4>
4000f294:	e3a00000 	mov	r0, #0
4000f298:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f29c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f2a0:	ea00007d 	b	4000f49c <_tx_thread_system_resume+0x2e4>
4000f2a4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f2a8:	e3500000 	cmp	r0, #0
4000f2ac:	0a00007a 	beq	4000f49c <_tx_thread_system_resume+0x2e4>
4000f2b0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f2b4:	e3500000 	cmp	r0, #0
4000f2b8:	0a000004 	beq	4000f2d0 <_tx_thread_system_resume+0x118>
4000f2bc:	e3a00000 	mov	r0, #0
4000f2c0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f2c4:	e3a00003 	mov	r0, #3
4000f2c8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f2cc:	ea000072 	b	4000f49c <_tx_thread_system_resume+0x2e4>
4000f2d0:	e59f1274 	ldr	r1, [pc, #628]	; 4000f54c <_tx_thread_system_resume+0x394>
4000f2d4:	e5910000 	ldr	r0, [r1]
4000f2d8:	e3500000 	cmp	r0, #0
4000f2dc:	0a000032 	beq	4000f3ac <_tx_thread_system_resume+0x1f4>
4000f2e0:	e59f1268 	ldr	r1, [pc, #616]	; 4000f550 <_tx_thread_system_resume+0x398>
4000f2e4:	e5911000 	ldr	r1, [r1]
4000f2e8:	e2811001 	add	r1, r1, #1
4000f2ec:	e59f225c 	ldr	r2, [pc, #604]	; 4000f550 <_tx_thread_system_resume+0x398>
4000f2f0:	e5821000 	str	r1, [r2]
4000f2f4:	e580100c 	str	r1, [r0, #12]
4000f2f8:	e59f1254 	ldr	r1, [pc, #596]	; 4000f554 <_tx_thread_system_resume+0x39c>
4000f2fc:	e5911000 	ldr	r1, [r1]
4000f300:	e3510000 	cmp	r1, #0
4000f304:	1a000006 	bne	4000f324 <_tx_thread_system_resume+0x16c>
4000f308:	e59f1248 	ldr	r1, [pc, #584]	; 4000f558 <_tx_thread_system_resume+0x3a0>
4000f30c:	e5911000 	ldr	r1, [r1]
4000f310:	e5801000 	str	r1, [r0]
4000f314:	e5901000 	ldr	r1, [r0]
4000f318:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f31c:	e5801004 	str	r1, [r0, #4]
4000f320:	ea00000d 	b	4000f35c <_tx_thread_system_resume+0x1a4>
4000f324:	e59f1228 	ldr	r1, [pc, #552]	; 4000f554 <_tx_thread_system_resume+0x39c>
4000f328:	e5911000 	ldr	r1, [r1]
4000f32c:	e59f2228 	ldr	r2, [pc, #552]	; 4000f55c <_tx_thread_system_resume+0x3a4>
4000f330:	e1510002 	cmp	r1, r2
4000f334:	2a000004 	bcs	4000f34c <_tx_thread_system_resume+0x194>
4000f338:	e3e01000 	mvn	r1, #0
4000f33c:	e5801000 	str	r1, [r0]
4000f340:	e3a01000 	mov	r1, #0
4000f344:	e5801004 	str	r1, [r0, #4]
4000f348:	ea000003 	b	4000f35c <_tx_thread_system_resume+0x1a4>
4000f34c:	e59f1208 	ldr	r1, [pc, #520]	; 4000f55c <_tx_thread_system_resume+0x3a4>
4000f350:	e5801000 	str	r1, [r0]
4000f354:	e3a01000 	mov	r1, #0
4000f358:	e5801004 	str	r1, [r0, #4]
4000f35c:	e3a01001 	mov	r1, #1
4000f360:	e5801008 	str	r1, [r0, #8]
4000f364:	e5804010 	str	r4, [r0, #16]
4000f368:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f36c:	e5801014 	str	r1, [r0, #20]
4000f370:	e580d018 	str	sp, [r0, #24]
4000f374:	e3a01000 	mov	r1, #0
4000f378:	e580101c 	str	r1, [r0, #28]
4000f37c:	e2800020 	add	r0, r0, #32
4000f380:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f560 <_tx_thread_system_resume+0x3a8>
4000f384:	e5911000 	ldr	r1, [r1]
4000f388:	e1500001 	cmp	r0, r1
4000f38c:	3a000001 	bcc	4000f398 <_tx_thread_system_resume+0x1e0>
4000f390:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f564 <_tx_thread_system_resume+0x3ac>
4000f394:	e5910000 	ldr	r0, [r1]
4000f398:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f54c <_tx_thread_system_resume+0x394>
4000f39c:	e5810000 	str	r0, [r1]
4000f3a0:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f568 <_tx_thread_system_resume+0x3b0>
4000f3a4:	e5911000 	ldr	r1, [r1]
4000f3a8:	e5810020 	str	r0, [r1, #32]
4000f3ac:	e3a00000 	mov	r0, #0
4000f3b0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f3b4:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f3b8:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f56c <_tx_thread_system_resume+0x3b4>
4000f3bc:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f3c0:	e3580000 	cmp	r8, #0
4000f3c4:	0a000005 	beq	4000f3e0 <_tx_thread_system_resume+0x228>
4000f3c8:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f3cc:	e5894020 	str	r4, [r9, #32]
4000f3d0:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f3d4:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f3d8:	e5848020 	str	r8, [r4, #32]
4000f3dc:	ea00002e 	b	4000f49c <_tx_thread_system_resume+0x2e4>
4000f3e0:	e59f0184 	ldr	r0, [pc, #388]	; 4000f56c <_tx_thread_system_resume+0x3b4>
4000f3e4:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f3e8:	e5844020 	str	r4, [r4, #32]
4000f3ec:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f3f0:	e59f0178 	ldr	r0, [pc, #376]	; 4000f570 <_tx_thread_system_resume+0x3b8>
4000f3f4:	e5900000 	ldr	r0, [r0]
4000f3f8:	e3a01001 	mov	r1, #1
4000f3fc:	e1800711 	orr	r0, r0, r1, lsl r7
4000f400:	e59f1168 	ldr	r1, [pc, #360]	; 4000f570 <_tx_thread_system_resume+0x3b8>
4000f404:	e5810000 	str	r0, [r1]
4000f408:	e59f0164 	ldr	r0, [pc, #356]	; 4000f574 <_tx_thread_system_resume+0x3bc>
4000f40c:	e5900000 	ldr	r0, [r0]
4000f410:	e58d0000 	str	r0, [sp]
4000f414:	e59d0000 	ldr	r0, [sp]
4000f418:	e3500000 	cmp	r0, #0
4000f41c:	1a000004 	bne	4000f434 <_tx_thread_system_resume+0x27c>
4000f420:	e59f014c 	ldr	r0, [pc, #332]	; 4000f574 <_tx_thread_system_resume+0x3bc>
4000f424:	e5804000 	str	r4, [r0]
4000f428:	e59f0148 	ldr	r0, [pc, #328]	; 4000f578 <_tx_thread_system_resume+0x3c0>
4000f42c:	e5807000 	str	r7, [r0]
4000f430:	ea000019 	b	4000f49c <_tx_thread_system_resume+0x2e4>
4000f434:	e59f013c 	ldr	r0, [pc, #316]	; 4000f578 <_tx_thread_system_resume+0x3c0>
4000f438:	e5900000 	ldr	r0, [r0]
4000f43c:	e1570000 	cmp	r7, r0
4000f440:	2a000015 	bcs	4000f49c <_tx_thread_system_resume+0x2e4>
4000f444:	e59f012c 	ldr	r0, [pc, #300]	; 4000f578 <_tx_thread_system_resume+0x3c0>
4000f448:	e5807000 	str	r7, [r0]
4000f44c:	e59d0000 	ldr	r0, [sp]
4000f450:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f454:	e1500007 	cmp	r0, r7
4000f458:	9a00000f 	bls	4000f49c <_tx_thread_system_resume+0x2e4>
4000f45c:	e59d0000 	ldr	r0, [sp]
4000f460:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f464:	e59d1000 	ldr	r1, [sp]
4000f468:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f46c:	e1500001 	cmp	r0, r1
4000f470:	0a000007 	beq	4000f494 <_tx_thread_system_resume+0x2dc>
4000f474:	e59f0100 	ldr	r0, [pc, #256]	; 4000f57c <_tx_thread_system_resume+0x3c4>
4000f478:	e5900000 	ldr	r0, [r0]
4000f47c:	e59d1000 	ldr	r1, [sp]
4000f480:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f484:	e3a02001 	mov	r2, #1
4000f488:	e1800112 	orr	r0, r0, r2, lsl r1
4000f48c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f57c <_tx_thread_system_resume+0x3c4>
4000f490:	e5810000 	str	r0, [r1]
4000f494:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f574 <_tx_thread_system_resume+0x3bc>
4000f498:	e5804000 	str	r4, [r0]
4000f49c:	e121f005 	msr	CPSR_c, r5
4000f4a0:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f558 <_tx_thread_system_resume+0x3a0>
4000f4a4:	e5900000 	ldr	r0, [r0]
4000f4a8:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f574 <_tx_thread_system_resume+0x3bc>
4000f4ac:	e5911000 	ldr	r1, [r1]
4000f4b0:	e1500001 	cmp	r0, r1
4000f4b4:	0a000021 	beq	4000f540 <_tx_thread_system_resume+0x388>
4000f4b8:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f574 <_tx_thread_system_resume+0x3bc>
4000f4bc:	e5900000 	ldr	r0, [r0]
4000f4c0:	e1540000 	cmp	r4, r0
4000f4c4:	0a000016 	beq	4000f524 <_tx_thread_system_resume+0x36c>
4000f4c8:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f574 <_tx_thread_system_resume+0x3bc>
4000f4cc:	e5904000 	ldr	r4, [r0]
4000f4d0:	e5940008 	ldr	r0, [r4, #8]
4000f4d4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f4d8:	e1500001 	cmp	r0, r1
4000f4dc:	2a000001 	bcs	4000f4e8 <_tx_thread_system_resume+0x330>
4000f4e0:	e5940008 	ldr	r0, [r4, #8]
4000f4e4:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f4e8:	e594000c 	ldr	r0, [r4, #12]
4000f4ec:	e5900000 	ldr	r0, [r0]
4000f4f0:	e59f104c 	ldr	r1, [pc, #76]	; 4000f544 <_tx_thread_system_resume+0x38c>
4000f4f4:	e1500001 	cmp	r0, r1
4000f4f8:	1a000007 	bne	4000f51c <_tx_thread_system_resume+0x364>
4000f4fc:	e5940010 	ldr	r0, [r4, #16]
4000f500:	e5900001 	ldr	r0, [r0, #1]
4000f504:	e1500001 	cmp	r0, r1
4000f508:	1a000003 	bne	4000f51c <_tx_thread_system_resume+0x364>
4000f50c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f510:	e594100c 	ldr	r1, [r4, #12]
4000f514:	e1500001 	cmp	r0, r1
4000f518:	2a000001 	bcs	4000f524 <_tx_thread_system_resume+0x36c>
4000f51c:	e1a00004 	mov	r0, r4
4000f520:	ebfffee5 	bl	4000f0bc <_tx_thread_stack_error_handler>
4000f524:	e59f0028 	ldr	r0, [pc, #40]	; 4000f554 <_tx_thread_system_resume+0x39c>
4000f528:	e5900000 	ldr	r0, [r0]
4000f52c:	e59f1014 	ldr	r1, [pc, #20]	; 4000f548 <_tx_thread_system_resume+0x390>
4000f530:	e5911000 	ldr	r1, [r1]
4000f534:	e1900001 	orrs	r0, r0, r1
4000f538:	1a000000 	bne	4000f540 <_tx_thread_system_resume+0x388>
4000f53c:	ebffed87 	bl	4000ab60 <_tx_thread_system_return>
4000f540:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f544:	efefefef 	.word	0xefefefef
4000f548:	40030e54 	.word	0x40030e54
4000f54c:	40030ea4 	.word	0x40030ea4
4000f550:	40030ea8 	.word	0x40030ea8
4000f554:	40030e30 	.word	0x40030e30
4000f558:	40030e38 	.word	0x40030e38
4000f55c:	f0f0f0f0 	.word	0xf0f0f0f0
4000f560:	40030ea0 	.word	0x40030ea0
4000f564:	40030e9c 	.word	0x40030e9c
4000f568:	40030e90 	.word	0x40030e90
4000f56c:	40032874 	.word	0x40032874
4000f570:	40030e48 	.word	0x40030e48
4000f574:	40030e3c 	.word	0x40030e3c
4000f578:	40030e50 	.word	0x40030e50
4000f57c:	40030e4c 	.word	0x40030e4c

4000f580 <_tx_thread_time_slice>:
4000f580:	e92d4070 	push	{r4, r5, r6, lr}
4000f584:	e59f0140 	ldr	r0, [pc, #320]	; 4000f6cc <_tx_thread_time_slice+0x14c>
4000f588:	e5906000 	ldr	r6, [r0]
4000f58c:	e5960008 	ldr	r0, [r6, #8]
4000f590:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f594:	e1500001 	cmp	r0, r1
4000f598:	2a000001 	bcs	4000f5a4 <_tx_thread_time_slice+0x24>
4000f59c:	e5960008 	ldr	r0, [r6, #8]
4000f5a0:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f5a4:	e596000c 	ldr	r0, [r6, #12]
4000f5a8:	e5900000 	ldr	r0, [r0]
4000f5ac:	e59f111c 	ldr	r1, [pc, #284]	; 4000f6d0 <_tx_thread_time_slice+0x150>
4000f5b0:	e1500001 	cmp	r0, r1
4000f5b4:	1a000007 	bne	4000f5d8 <_tx_thread_time_slice+0x58>
4000f5b8:	e5960010 	ldr	r0, [r6, #16]
4000f5bc:	e5900001 	ldr	r0, [r0, #1]
4000f5c0:	e1500001 	cmp	r0, r1
4000f5c4:	1a000003 	bne	4000f5d8 <_tx_thread_time_slice+0x58>
4000f5c8:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f5cc:	e596100c 	ldr	r1, [r6, #12]
4000f5d0:	e1500001 	cmp	r0, r1
4000f5d4:	2a000001 	bcs	4000f5e0 <_tx_thread_time_slice+0x60>
4000f5d8:	e1a00006 	mov	r0, r6
4000f5dc:	ebfffeb6 	bl	4000f0bc <_tx_thread_stack_error_handler>
4000f5e0:	e10f4000 	mrs	r4, CPSR
4000f5e4:	e3845080 	orr	r5, r4, #128	; 0x80
4000f5e8:	e121f005 	msr	CPSR_c, r5
4000f5ec:	e3a00000 	mov	r0, #0
4000f5f0:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f6d4 <_tx_thread_time_slice+0x154>
4000f5f4:	e5810000 	str	r0, [r1]
4000f5f8:	e3560000 	cmp	r6, #0
4000f5fc:	0a000030 	beq	4000f6c4 <_tx_thread_time_slice+0x144>
4000f600:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f604:	e3500000 	cmp	r0, #0
4000f608:	1a00002d 	bne	4000f6c4 <_tx_thread_time_slice+0x144>
4000f60c:	e596001c 	ldr	r0, [r6, #28]
4000f610:	e5860018 	str	r0, [r6, #24]
4000f614:	e5960020 	ldr	r0, [r6, #32]
4000f618:	e1500006 	cmp	r0, r6
4000f61c:	0a000025 	beq	4000f6b8 <_tx_thread_time_slice+0x138>
4000f620:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f624:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f628:	e1500001 	cmp	r0, r1
4000f62c:	1a000021 	bne	4000f6b8 <_tx_thread_time_slice+0x138>
4000f630:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f6d8 <_tx_thread_time_slice+0x158>
4000f634:	e5960020 	ldr	r0, [r6, #32]
4000f638:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f63c:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f640:	e2820000 	add	r0, r2, #0
4000f644:	e59f1090 	ldr	r1, [pc, #144]	; 4000f6dc <_tx_thread_time_slice+0x15c>
4000f648:	e5911000 	ldr	r1, [r1]
4000f64c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f650:	e59f1088 	ldr	r1, [pc, #136]	; 4000f6e0 <_tx_thread_time_slice+0x160>
4000f654:	e5810000 	str	r0, [r1]
4000f658:	e2810000 	add	r0, r1, #0
4000f65c:	e5906000 	ldr	r6, [r0]
4000f660:	e5960008 	ldr	r0, [r6, #8]
4000f664:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f668:	e1500001 	cmp	r0, r1
4000f66c:	2a000001 	bcs	4000f678 <_tx_thread_time_slice+0xf8>
4000f670:	e5960008 	ldr	r0, [r6, #8]
4000f674:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f678:	e596000c 	ldr	r0, [r6, #12]
4000f67c:	e5900000 	ldr	r0, [r0]
4000f680:	e59f1048 	ldr	r1, [pc, #72]	; 4000f6d0 <_tx_thread_time_slice+0x150>
4000f684:	e1500001 	cmp	r0, r1
4000f688:	1a000007 	bne	4000f6ac <_tx_thread_time_slice+0x12c>
4000f68c:	e5960010 	ldr	r0, [r6, #16]
4000f690:	e5900001 	ldr	r0, [r0, #1]
4000f694:	e1500001 	cmp	r0, r1
4000f698:	1a000003 	bne	4000f6ac <_tx_thread_time_slice+0x12c>
4000f69c:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f6a0:	e596100c 	ldr	r1, [r6, #12]
4000f6a4:	e1500001 	cmp	r0, r1
4000f6a8:	2a000005 	bcs	4000f6c4 <_tx_thread_time_slice+0x144>
4000f6ac:	e1a00006 	mov	r0, r6
4000f6b0:	ebfffe81 	bl	4000f0bc <_tx_thread_stack_error_handler>
4000f6b4:	ea000002 	b	4000f6c4 <_tx_thread_time_slice+0x144>
4000f6b8:	e59f1024 	ldr	r1, [pc, #36]	; 4000f6e4 <_tx_thread_time_slice+0x164>
4000f6bc:	e5960018 	ldr	r0, [r6, #24]
4000f6c0:	e5810000 	str	r0, [r1]
4000f6c4:	e121f004 	msr	CPSR_c, r4
4000f6c8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f6cc:	40030e38 	.word	0x40030e38
4000f6d0:	efefefef 	.word	0xefefefef
4000f6d4:	40030e68 	.word	0x40030e68
4000f6d8:	40032874 	.word	0x40032874
4000f6dc:	40030e50 	.word	0x40030e50
4000f6e0:	40030e3c 	.word	0x40030e3c
4000f6e4:	40030e64 	.word	0x40030e64

4000f6e8 <_tx_thread_timeout>:
4000f6e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f6ec:	e1a04000 	mov	r4, r0
4000f6f0:	e1a08004 	mov	r8, r4
4000f6f4:	e10f5000 	mrs	r5, CPSR
4000f6f8:	e3856080 	orr	r6, r5, #128	; 0x80
4000f6fc:	e121f006 	msr	CPSR_c, r6
4000f700:	e1a04008 	mov	r4, r8
4000f704:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000f708:	e3500004 	cmp	r0, #4
4000f70c:	1a000008 	bne	4000f734 <_tx_thread_timeout+0x4c>
4000f710:	e59f0038 	ldr	r0, [pc, #56]	; 4000f750 <_tx_thread_timeout+0x68>
4000f714:	e5900000 	ldr	r0, [r0]
4000f718:	e2800001 	add	r0, r0, #1
4000f71c:	e59f102c 	ldr	r1, [pc, #44]	; 4000f750 <_tx_thread_timeout+0x68>
4000f720:	e5810000 	str	r0, [r1]
4000f724:	e121f005 	msr	CPSR_c, r5
4000f728:	e1a00008 	mov	r0, r8
4000f72c:	ebfffea1 	bl	4000f1b8 <_tx_thread_system_resume>
4000f730:	ea000005 	b	4000f74c <_tx_thread_timeout+0x64>
4000f734:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000f738:	e121f005 	msr	CPSR_c, r5
4000f73c:	e3570000 	cmp	r7, #0
4000f740:	0a000001 	beq	4000f74c <_tx_thread_timeout+0x64>
4000f744:	e1a00008 	mov	r0, r8
4000f748:	e12fff37 	blx	r7
4000f74c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f750:	40030e54 	.word	0x40030e54

4000f754 <_tx_timer_activate>:
4000f754:	e92d4070 	push	{r4, r5, r6, lr}
4000f758:	e1a04000 	mov	r4, r0
4000f75c:	e10f5000 	mrs	r5, CPSR
4000f760:	e3856080 	orr	r6, r5, #128	; 0x80
4000f764:	e121f006 	msr	CPSR_c, r6
4000f768:	e59f1104 	ldr	r1, [pc, #260]	; 4000f874 <_tx_timer_activate+0x120>
4000f76c:	e5910000 	ldr	r0, [r1]
4000f770:	e3500000 	cmp	r0, #0
4000f774:	0a000031 	beq	4000f840 <_tx_timer_activate+0xec>
4000f778:	e59f10f8 	ldr	r1, [pc, #248]	; 4000f878 <_tx_timer_activate+0x124>
4000f77c:	e5911000 	ldr	r1, [r1]
4000f780:	e2811001 	add	r1, r1, #1
4000f784:	e59f20ec 	ldr	r2, [pc, #236]	; 4000f878 <_tx_timer_activate+0x124>
4000f788:	e5821000 	str	r1, [r2]
4000f78c:	e580100c 	str	r1, [r0, #12]
4000f790:	e59f10e4 	ldr	r1, [pc, #228]	; 4000f87c <_tx_timer_activate+0x128>
4000f794:	e5911000 	ldr	r1, [r1]
4000f798:	e3510000 	cmp	r1, #0
4000f79c:	1a000006 	bne	4000f7bc <_tx_timer_activate+0x68>
4000f7a0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000f880 <_tx_timer_activate+0x12c>
4000f7a4:	e5911000 	ldr	r1, [r1]
4000f7a8:	e5801000 	str	r1, [r0]
4000f7ac:	e5901000 	ldr	r1, [r0]
4000f7b0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f7b4:	e5801004 	str	r1, [r0, #4]
4000f7b8:	ea00000d 	b	4000f7f4 <_tx_timer_activate+0xa0>
4000f7bc:	e59f10b8 	ldr	r1, [pc, #184]	; 4000f87c <_tx_timer_activate+0x128>
4000f7c0:	e5911000 	ldr	r1, [r1]
4000f7c4:	e59f20b8 	ldr	r2, [pc, #184]	; 4000f884 <_tx_timer_activate+0x130>
4000f7c8:	e1510002 	cmp	r1, r2
4000f7cc:	2a000004 	bcs	4000f7e4 <_tx_timer_activate+0x90>
4000f7d0:	e3e01000 	mvn	r1, #0
4000f7d4:	e5801000 	str	r1, [r0]
4000f7d8:	e3a01000 	mov	r1, #0
4000f7dc:	e5801004 	str	r1, [r0, #4]
4000f7e0:	ea000003 	b	4000f7f4 <_tx_timer_activate+0xa0>
4000f7e4:	e59f1098 	ldr	r1, [pc, #152]	; 4000f884 <_tx_timer_activate+0x130>
4000f7e8:	e5801000 	str	r1, [r0]
4000f7ec:	e3a01000 	mov	r1, #0
4000f7f0:	e5801004 	str	r1, [r0, #4]
4000f7f4:	e3a0107a 	mov	r1, #122	; 0x7a
4000f7f8:	e5801008 	str	r1, [r0, #8]
4000f7fc:	e5804010 	str	r4, [r0, #16]
4000f800:	e3a01000 	mov	r1, #0
4000f804:	e5801014 	str	r1, [r0, #20]
4000f808:	e5801018 	str	r1, [r0, #24]
4000f80c:	e580101c 	str	r1, [r0, #28]
4000f810:	e2800020 	add	r0, r0, #32
4000f814:	e59f106c 	ldr	r1, [pc, #108]	; 4000f888 <_tx_timer_activate+0x134>
4000f818:	e5911000 	ldr	r1, [r1]
4000f81c:	e1500001 	cmp	r0, r1
4000f820:	3a000001 	bcc	4000f82c <_tx_timer_activate+0xd8>
4000f824:	e59f1060 	ldr	r1, [pc, #96]	; 4000f88c <_tx_timer_activate+0x138>
4000f828:	e5910000 	ldr	r0, [r1]
4000f82c:	e59f1040 	ldr	r1, [pc, #64]	; 4000f874 <_tx_timer_activate+0x120>
4000f830:	e5810000 	str	r0, [r1]
4000f834:	e59f1054 	ldr	r1, [pc, #84]	; 4000f890 <_tx_timer_activate+0x13c>
4000f838:	e5911000 	ldr	r1, [r1]
4000f83c:	e5810020 	str	r0, [r1, #32]
4000f840:	e121f005 	msr	CPSR_c, r5
4000f844:	e5940020 	ldr	r0, [r4, #32]
4000f848:	e3500000 	cmp	r0, #0
4000f84c:	1a000002 	bne	4000f85c <_tx_timer_activate+0x108>
4000f850:	e5940008 	ldr	r0, [r4, #8]
4000f854:	e3500000 	cmp	r0, #0
4000f858:	1a000001 	bne	4000f864 <_tx_timer_activate+0x110>
4000f85c:	e3a00017 	mov	r0, #23
4000f860:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f864:	e2840008 	add	r0, r4, #8
4000f868:	ebffe6c7 	bl	4000938c <_tx_timer_system_activate>
4000f86c:	e3a00000 	mov	r0, #0
4000f870:	eafffffa 	b	4000f860 <_tx_timer_activate+0x10c>
4000f874:	40030ea4 	.word	0x40030ea4
4000f878:	40030ea8 	.word	0x40030ea8
4000f87c:	40030e30 	.word	0x40030e30
4000f880:	40030e38 	.word	0x40030e38
4000f884:	f0f0f0f0 	.word	0xf0f0f0f0
4000f888:	40030ea0 	.word	0x40030ea0
4000f88c:	40030e9c 	.word	0x40030e9c
4000f890:	40030e90 	.word	0x40030e90

4000f894 <_tx_timer_change>:
4000f894:	e92d4030 	push	{r4, r5, lr}
4000f898:	e1a03000 	mov	r3, r0
4000f89c:	e10fc000 	mrs	ip, CPSR
4000f8a0:	e38ce080 	orr	lr, ip, #128	; 0x80
4000f8a4:	e121f00e 	msr	CPSR_c, lr
4000f8a8:	e59f40f0 	ldr	r4, [pc, #240]	; 4000f9a0 <_tx_timer_change+0x10c>
4000f8ac:	e5940000 	ldr	r0, [r4]
4000f8b0:	e3500000 	cmp	r0, #0
4000f8b4:	0a000031 	beq	4000f980 <_tx_timer_change+0xec>
4000f8b8:	e59f40e4 	ldr	r4, [pc, #228]	; 4000f9a4 <_tx_timer_change+0x110>
4000f8bc:	e5944000 	ldr	r4, [r4]
4000f8c0:	e2844001 	add	r4, r4, #1
4000f8c4:	e59f50d8 	ldr	r5, [pc, #216]	; 4000f9a4 <_tx_timer_change+0x110>
4000f8c8:	e5854000 	str	r4, [r5]
4000f8cc:	e580400c 	str	r4, [r0, #12]
4000f8d0:	e59f40d0 	ldr	r4, [pc, #208]	; 4000f9a8 <_tx_timer_change+0x114>
4000f8d4:	e5944000 	ldr	r4, [r4]
4000f8d8:	e3540000 	cmp	r4, #0
4000f8dc:	1a000006 	bne	4000f8fc <_tx_timer_change+0x68>
4000f8e0:	e59f40c4 	ldr	r4, [pc, #196]	; 4000f9ac <_tx_timer_change+0x118>
4000f8e4:	e5944000 	ldr	r4, [r4]
4000f8e8:	e5804000 	str	r4, [r0]
4000f8ec:	e5904000 	ldr	r4, [r0]
4000f8f0:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000f8f4:	e5804004 	str	r4, [r0, #4]
4000f8f8:	ea00000d 	b	4000f934 <_tx_timer_change+0xa0>
4000f8fc:	e59f40a4 	ldr	r4, [pc, #164]	; 4000f9a8 <_tx_timer_change+0x114>
4000f900:	e5944000 	ldr	r4, [r4]
4000f904:	e59f50a4 	ldr	r5, [pc, #164]	; 4000f9b0 <_tx_timer_change+0x11c>
4000f908:	e1540005 	cmp	r4, r5
4000f90c:	2a000004 	bcs	4000f924 <_tx_timer_change+0x90>
4000f910:	e3e04000 	mvn	r4, #0
4000f914:	e5804000 	str	r4, [r0]
4000f918:	e3a04000 	mov	r4, #0
4000f91c:	e5804004 	str	r4, [r0, #4]
4000f920:	ea000003 	b	4000f934 <_tx_timer_change+0xa0>
4000f924:	e59f4084 	ldr	r4, [pc, #132]	; 4000f9b0 <_tx_timer_change+0x11c>
4000f928:	e5804000 	str	r4, [r0]
4000f92c:	e3a04000 	mov	r4, #0
4000f930:	e5804004 	str	r4, [r0, #4]
4000f934:	e3a0407b 	mov	r4, #123	; 0x7b
4000f938:	e5804008 	str	r4, [r0, #8]
4000f93c:	e5803010 	str	r3, [r0, #16]
4000f940:	e5801014 	str	r1, [r0, #20]
4000f944:	e5802018 	str	r2, [r0, #24]
4000f948:	e3a04000 	mov	r4, #0
4000f94c:	e580401c 	str	r4, [r0, #28]
4000f950:	e2800020 	add	r0, r0, #32
4000f954:	e59f4058 	ldr	r4, [pc, #88]	; 4000f9b4 <_tx_timer_change+0x120>
4000f958:	e5944000 	ldr	r4, [r4]
4000f95c:	e1500004 	cmp	r0, r4
4000f960:	3a000001 	bcc	4000f96c <_tx_timer_change+0xd8>
4000f964:	e59f404c 	ldr	r4, [pc, #76]	; 4000f9b8 <_tx_timer_change+0x124>
4000f968:	e5940000 	ldr	r0, [r4]
4000f96c:	e59f402c 	ldr	r4, [pc, #44]	; 4000f9a0 <_tx_timer_change+0x10c>
4000f970:	e5840000 	str	r0, [r4]
4000f974:	e59f4040 	ldr	r4, [pc, #64]	; 4000f9bc <_tx_timer_change+0x128>
4000f978:	e5944000 	ldr	r4, [r4]
4000f97c:	e5840020 	str	r0, [r4, #32]
4000f980:	e5930020 	ldr	r0, [r3, #32]
4000f984:	e3500000 	cmp	r0, #0
4000f988:	1a000001 	bne	4000f994 <_tx_timer_change+0x100>
4000f98c:	e5831008 	str	r1, [r3, #8]
4000f990:	e583200c 	str	r2, [r3, #12]
4000f994:	e121f00c 	msr	CPSR_c, ip
4000f998:	e3a00000 	mov	r0, #0
4000f99c:	e8bd8030 	pop	{r4, r5, pc}
4000f9a0:	40030ea4 	.word	0x40030ea4
4000f9a4:	40030ea8 	.word	0x40030ea8
4000f9a8:	40030e30 	.word	0x40030e30
4000f9ac:	40030e38 	.word	0x40030e38
4000f9b0:	f0f0f0f0 	.word	0xf0f0f0f0
4000f9b4:	40030ea0 	.word	0x40030ea0
4000f9b8:	40030e9c 	.word	0x40030e9c
4000f9bc:	40030e90 	.word	0x40030e90

4000f9c0 <_tx_timer_create>:
4000f9c0:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000f9c4:	e1a04000 	mov	r4, r0
4000f9c8:	e1a05001 	mov	r5, r1
4000f9cc:	e1a06002 	mov	r6, r2
4000f9d0:	e1a07003 	mov	r7, r3
4000f9d4:	e28da030 	add	sl, sp, #48	; 0x30
4000f9d8:	e89a0700 	ldm	sl, {r8, r9, sl}
4000f9dc:	e3a0102c 	mov	r1, #44	; 0x2c
4000f9e0:	e1a00004 	mov	r0, r4
4000f9e4:	eb000eb3 	bl	400134b8 <__aeabi_memclr4>
4000f9e8:	e5845004 	str	r5, [r4, #4]
4000f9ec:	e5848008 	str	r8, [r4, #8]
4000f9f0:	e584900c 	str	r9, [r4, #12]
4000f9f4:	e5846010 	str	r6, [r4, #16]
4000f9f8:	e5847014 	str	r7, [r4, #20]
4000f9fc:	e10fb000 	mrs	fp, CPSR
4000fa00:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fa04:	e58d0008 	str	r0, [sp, #8]
4000fa08:	e59d0008 	ldr	r0, [sp, #8]
4000fa0c:	e121f000 	msr	CPSR_c, r0
4000fa10:	e59f0178 	ldr	r0, [pc, #376]	; 4000fb90 <_tx_timer_create+0x1d0>
4000fa14:	e5840000 	str	r0, [r4]
4000fa18:	e59f0174 	ldr	r0, [pc, #372]	; 4000fb94 <_tx_timer_create+0x1d4>
4000fa1c:	e5900000 	ldr	r0, [r0]
4000fa20:	e3500000 	cmp	r0, #0
4000fa24:	0a00000e 	beq	4000fa64 <_tx_timer_create+0xa4>
4000fa28:	e59f0164 	ldr	r0, [pc, #356]	; 4000fb94 <_tx_timer_create+0x1d4>
4000fa2c:	e5900000 	ldr	r0, [r0]
4000fa30:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fa34:	e58d0004 	str	r0, [sp, #4]
4000fa38:	e59f0154 	ldr	r0, [pc, #340]	; 4000fb94 <_tx_timer_create+0x1d4>
4000fa3c:	e5900000 	ldr	r0, [r0]
4000fa40:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fa44:	e59d0004 	ldr	r0, [sp, #4]
4000fa48:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fa4c:	e59d0004 	ldr	r0, [sp, #4]
4000fa50:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fa54:	e59f0138 	ldr	r0, [pc, #312]	; 4000fb94 <_tx_timer_create+0x1d4>
4000fa58:	e5900000 	ldr	r0, [r0]
4000fa5c:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fa60:	ea000003 	b	4000fa74 <_tx_timer_create+0xb4>
4000fa64:	e59f0128 	ldr	r0, [pc, #296]	; 4000fb94 <_tx_timer_create+0x1d4>
4000fa68:	e5804000 	str	r4, [r0]
4000fa6c:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fa70:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fa74:	e59f011c 	ldr	r0, [pc, #284]	; 4000fb98 <_tx_timer_create+0x1d8>
4000fa78:	e5900000 	ldr	r0, [r0]
4000fa7c:	e2800001 	add	r0, r0, #1
4000fa80:	e59f1110 	ldr	r1, [pc, #272]	; 4000fb98 <_tx_timer_create+0x1d8>
4000fa84:	e5810000 	str	r0, [r1]
4000fa88:	e1a03008 	mov	r3, r8
4000fa8c:	e1a02005 	mov	r2, r5
4000fa90:	e1a01004 	mov	r1, r4
4000fa94:	e3a00002 	mov	r0, #2
4000fa98:	e58d9000 	str	r9, [sp]
4000fa9c:	eb00011b 	bl	4000ff10 <_tx_trace_object_register>
4000faa0:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fb9c <_tx_timer_create+0x1dc>
4000faa4:	e5910000 	ldr	r0, [r1]
4000faa8:	e3500000 	cmp	r0, #0
4000faac:	0a000030 	beq	4000fb74 <_tx_timer_create+0x1b4>
4000fab0:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fba0 <_tx_timer_create+0x1e0>
4000fab4:	e5911000 	ldr	r1, [r1]
4000fab8:	e2811001 	add	r1, r1, #1
4000fabc:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fba0 <_tx_timer_create+0x1e0>
4000fac0:	e5821000 	str	r1, [r2]
4000fac4:	e580100c 	str	r1, [r0, #12]
4000fac8:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fba4 <_tx_timer_create+0x1e4>
4000facc:	e5911000 	ldr	r1, [r1]
4000fad0:	e3510000 	cmp	r1, #0
4000fad4:	1a000006 	bne	4000faf4 <_tx_timer_create+0x134>
4000fad8:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fba8 <_tx_timer_create+0x1e8>
4000fadc:	e5911000 	ldr	r1, [r1]
4000fae0:	e5801000 	str	r1, [r0]
4000fae4:	e5901000 	ldr	r1, [r0]
4000fae8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000faec:	e5801004 	str	r1, [r0, #4]
4000faf0:	ea00000d 	b	4000fb2c <_tx_timer_create+0x16c>
4000faf4:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fba4 <_tx_timer_create+0x1e4>
4000faf8:	e5911000 	ldr	r1, [r1]
4000fafc:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fbac <_tx_timer_create+0x1ec>
4000fb00:	e1510002 	cmp	r1, r2
4000fb04:	2a000004 	bcs	4000fb1c <_tx_timer_create+0x15c>
4000fb08:	e3e01000 	mvn	r1, #0
4000fb0c:	e5801000 	str	r1, [r0]
4000fb10:	e3a01000 	mov	r1, #0
4000fb14:	e5801004 	str	r1, [r0, #4]
4000fb18:	ea000003 	b	4000fb2c <_tx_timer_create+0x16c>
4000fb1c:	e59f1088 	ldr	r1, [pc, #136]	; 4000fbac <_tx_timer_create+0x1ec>
4000fb20:	e5801000 	str	r1, [r0]
4000fb24:	e3a01000 	mov	r1, #0
4000fb28:	e5801004 	str	r1, [r0, #4]
4000fb2c:	e3a0107c 	mov	r1, #124	; 0x7c
4000fb30:	e5801008 	str	r1, [r0, #8]
4000fb34:	e5804010 	str	r4, [r0, #16]
4000fb38:	e5808014 	str	r8, [r0, #20]
4000fb3c:	e5809018 	str	r9, [r0, #24]
4000fb40:	e580a01c 	str	sl, [r0, #28]
4000fb44:	e2800020 	add	r0, r0, #32
4000fb48:	e59f1060 	ldr	r1, [pc, #96]	; 4000fbb0 <_tx_timer_create+0x1f0>
4000fb4c:	e5911000 	ldr	r1, [r1]
4000fb50:	e1500001 	cmp	r0, r1
4000fb54:	3a000001 	bcc	4000fb60 <_tx_timer_create+0x1a0>
4000fb58:	e59f1054 	ldr	r1, [pc, #84]	; 4000fbb4 <_tx_timer_create+0x1f4>
4000fb5c:	e5910000 	ldr	r0, [r1]
4000fb60:	e59f1034 	ldr	r1, [pc, #52]	; 4000fb9c <_tx_timer_create+0x1dc>
4000fb64:	e5810000 	str	r0, [r1]
4000fb68:	e59f1048 	ldr	r1, [pc, #72]	; 4000fbb8 <_tx_timer_create+0x1f8>
4000fb6c:	e5911000 	ldr	r1, [r1]
4000fb70:	e5810020 	str	r0, [r1, #32]
4000fb74:	e121f00b 	msr	CPSR_c, fp
4000fb78:	e35a0000 	cmp	sl, #0
4000fb7c:	0a000001 	beq	4000fb88 <_tx_timer_create+0x1c8>
4000fb80:	e2840008 	add	r0, r4, #8
4000fb84:	ebffe600 	bl	4000938c <_tx_timer_system_activate>
4000fb88:	e3a00000 	mov	r0, #0
4000fb8c:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000fb90:	4154494d 	.word	0x4154494d
4000fb94:	40030e7c 	.word	0x40030e7c
4000fb98:	40030e80 	.word	0x40030e80
4000fb9c:	40030ea4 	.word	0x40030ea4
4000fba0:	40030ea8 	.word	0x40030ea8
4000fba4:	40030e30 	.word	0x40030e30
4000fba8:	40030e38 	.word	0x40030e38
4000fbac:	f0f0f0f0 	.word	0xf0f0f0f0
4000fbb0:	40030ea0 	.word	0x40030ea0
4000fbb4:	40030e9c 	.word	0x40030e9c
4000fbb8:	40030e90 	.word	0x40030e90

4000fbbc <_tx_timer_deactivate>:
4000fbbc:	e92d4018 	push	{r3, r4, lr}
4000fbc0:	e1a01000 	mov	r1, r0
4000fbc4:	e281c008 	add	ip, r1, #8
4000fbc8:	e10f2000 	mrs	r2, CPSR
4000fbcc:	e3823080 	orr	r3, r2, #128	; 0x80
4000fbd0:	e121f003 	msr	CPSR_c, r3
4000fbd4:	e59fe228 	ldr	lr, [pc, #552]	; 4000fe04 <_tx_timer_deactivate+0x248>
4000fbd8:	e59e0000 	ldr	r0, [lr]
4000fbdc:	e3500000 	cmp	r0, #0
4000fbe0:	0a000031 	beq	4000fcac <_tx_timer_deactivate+0xf0>
4000fbe4:	e59fe21c 	ldr	lr, [pc, #540]	; 4000fe08 <_tx_timer_deactivate+0x24c>
4000fbe8:	e59ee000 	ldr	lr, [lr]
4000fbec:	e28ee001 	add	lr, lr, #1
4000fbf0:	e59f4210 	ldr	r4, [pc, #528]	; 4000fe08 <_tx_timer_deactivate+0x24c>
4000fbf4:	e584e000 	str	lr, [r4]
4000fbf8:	e580e00c 	str	lr, [r0, #12]
4000fbfc:	e59fe208 	ldr	lr, [pc, #520]	; 4000fe0c <_tx_timer_deactivate+0x250>
4000fc00:	e59ee000 	ldr	lr, [lr]
4000fc04:	e35e0000 	cmp	lr, #0
4000fc08:	1a000006 	bne	4000fc28 <_tx_timer_deactivate+0x6c>
4000fc0c:	e59fe1fc 	ldr	lr, [pc, #508]	; 4000fe10 <_tx_timer_deactivate+0x254>
4000fc10:	e59ee000 	ldr	lr, [lr]
4000fc14:	e580e000 	str	lr, [r0]
4000fc18:	e590e000 	ldr	lr, [r0]
4000fc1c:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000fc20:	e580e004 	str	lr, [r0, #4]
4000fc24:	ea00000d 	b	4000fc60 <_tx_timer_deactivate+0xa4>
4000fc28:	e59fe1dc 	ldr	lr, [pc, #476]	; 4000fe0c <_tx_timer_deactivate+0x250>
4000fc2c:	e59ee000 	ldr	lr, [lr]
4000fc30:	e59f41dc 	ldr	r4, [pc, #476]	; 4000fe14 <_tx_timer_deactivate+0x258>
4000fc34:	e15e0004 	cmp	lr, r4
4000fc38:	2a000004 	bcs	4000fc50 <_tx_timer_deactivate+0x94>
4000fc3c:	e3e0e000 	mvn	lr, #0
4000fc40:	e580e000 	str	lr, [r0]
4000fc44:	e3a0e000 	mov	lr, #0
4000fc48:	e580e004 	str	lr, [r0, #4]
4000fc4c:	ea000003 	b	4000fc60 <_tx_timer_deactivate+0xa4>
4000fc50:	e59fe1bc 	ldr	lr, [pc, #444]	; 4000fe14 <_tx_timer_deactivate+0x258>
4000fc54:	e580e000 	str	lr, [r0]
4000fc58:	e3a0e000 	mov	lr, #0
4000fc5c:	e580e004 	str	lr, [r0, #4]
4000fc60:	e3a0e07d 	mov	lr, #125	; 0x7d
4000fc64:	e580e008 	str	lr, [r0, #8]
4000fc68:	e5801010 	str	r1, [r0, #16]
4000fc6c:	e580d014 	str	sp, [r0, #20]
4000fc70:	e3a0e000 	mov	lr, #0
4000fc74:	e580e018 	str	lr, [r0, #24]
4000fc78:	e580e01c 	str	lr, [r0, #28]
4000fc7c:	e2800020 	add	r0, r0, #32
4000fc80:	e59fe190 	ldr	lr, [pc, #400]	; 4000fe18 <_tx_timer_deactivate+0x25c>
4000fc84:	e59ee000 	ldr	lr, [lr]
4000fc88:	e150000e 	cmp	r0, lr
4000fc8c:	3a000001 	bcc	4000fc98 <_tx_timer_deactivate+0xdc>
4000fc90:	e59fe184 	ldr	lr, [pc, #388]	; 4000fe1c <_tx_timer_deactivate+0x260>
4000fc94:	e59e0000 	ldr	r0, [lr]
4000fc98:	e59fe164 	ldr	lr, [pc, #356]	; 4000fe04 <_tx_timer_deactivate+0x248>
4000fc9c:	e58e0000 	str	r0, [lr]
4000fca0:	e59fe178 	ldr	lr, [pc, #376]	; 4000fe20 <_tx_timer_deactivate+0x264>
4000fca4:	e59ee000 	ldr	lr, [lr]
4000fca8:	e58e0020 	str	r0, [lr, #32]
4000fcac:	e59fe170 	ldr	lr, [pc, #368]	; 4000fe24 <_tx_timer_deactivate+0x268>
4000fcb0:	e59c0018 	ldr	r0, [ip, #24]
4000fcb4:	e59ee000 	ldr	lr, [lr]
4000fcb8:	e150000e 	cmp	r0, lr
4000fcbc:	3a00002b 	bcc	4000fd70 <_tx_timer_deactivate+0x1b4>
4000fcc0:	e59fe160 	ldr	lr, [pc, #352]	; 4000fe28 <_tx_timer_deactivate+0x26c>
4000fcc4:	e59c0018 	ldr	r0, [ip, #24]
4000fcc8:	e59ee000 	ldr	lr, [lr]
4000fccc:	e150000e 	cmp	r0, lr
4000fcd0:	2a000026 	bcs	4000fd70 <_tx_timer_deactivate+0x1b4>
4000fcd4:	e59fe150 	ldr	lr, [pc, #336]	; 4000fe2c <_tx_timer_deactivate+0x270>
4000fcd8:	e59c0018 	ldr	r0, [ip, #24]
4000fcdc:	e59ee000 	ldr	lr, [lr]
4000fce0:	e150000e 	cmp	r0, lr
4000fce4:	3a000007 	bcc	4000fd08 <_tx_timer_deactivate+0x14c>
4000fce8:	e59fe13c 	ldr	lr, [pc, #316]	; 4000fe2c <_tx_timer_deactivate+0x270>
4000fcec:	e59c0018 	ldr	r0, [ip, #24]
4000fcf0:	e59ee000 	ldr	lr, [lr]
4000fcf4:	e040000e 	sub	r0, r0, lr
4000fcf8:	e3a0e001 	mov	lr, #1
4000fcfc:	e08e0140 	add	r0, lr, r0, asr #2
4000fd00:	e58d0000 	str	r0, [sp]
4000fd04:	ea00000e 	b	4000fd44 <_tx_timer_deactivate+0x188>
4000fd08:	e59fe114 	ldr	lr, [pc, #276]	; 4000fe24 <_tx_timer_deactivate+0x268>
4000fd0c:	e59c0018 	ldr	r0, [ip, #24]
4000fd10:	e59ee000 	ldr	lr, [lr]
4000fd14:	e040000e 	sub	r0, r0, lr
4000fd18:	e1a00140 	asr	r0, r0, #2
4000fd1c:	e58d0000 	str	r0, [sp]
4000fd20:	e59f0100 	ldr	r0, [pc, #256]	; 4000fe28 <_tx_timer_deactivate+0x26c>
4000fd24:	e5900000 	ldr	r0, [r0]
4000fd28:	e59fe0fc 	ldr	lr, [pc, #252]	; 4000fe2c <_tx_timer_deactivate+0x270>
4000fd2c:	e59ee000 	ldr	lr, [lr]
4000fd30:	e040000e 	sub	r0, r0, lr
4000fd34:	e59de000 	ldr	lr, [sp]
4000fd38:	e08e0140 	add	r0, lr, r0, asr #2
4000fd3c:	e2800001 	add	r0, r0, #1
4000fd40:	e58d0000 	str	r0, [sp]
4000fd44:	e59c0000 	ldr	r0, [ip]
4000fd48:	e3500020 	cmp	r0, #32
4000fd4c:	9a000005 	bls	4000fd68 <_tx_timer_deactivate+0x1ac>
4000fd50:	e59c0000 	ldr	r0, [ip]
4000fd54:	e2400020 	sub	r0, r0, #32
4000fd58:	e59de000 	ldr	lr, [sp]
4000fd5c:	e080000e 	add	r0, r0, lr
4000fd60:	e58c0000 	str	r0, [ip]
4000fd64:	ea000001 	b	4000fd70 <_tx_timer_deactivate+0x1b4>
4000fd68:	e59d0000 	ldr	r0, [sp]
4000fd6c:	e58c0000 	str	r0, [ip]
4000fd70:	e59c0018 	ldr	r0, [ip, #24]
4000fd74:	e3500000 	cmp	r0, #0
4000fd78:	0a00001e 	beq	4000fdf8 <_tx_timer_deactivate+0x23c>
4000fd7c:	e59c0010 	ldr	r0, [ip, #16]
4000fd80:	e150000c 	cmp	r0, ip
4000fd84:	1a000009 	bne	4000fdb0 <_tx_timer_deactivate+0x1f4>
4000fd88:	e59c0018 	ldr	r0, [ip, #24]
4000fd8c:	e5900000 	ldr	r0, [r0]
4000fd90:	e150000c 	cmp	r0, ip
4000fd94:	1a000002 	bne	4000fda4 <_tx_timer_deactivate+0x1e8>
4000fd98:	e3a00000 	mov	r0, #0
4000fd9c:	e59ce018 	ldr	lr, [ip, #24]
4000fda0:	e58e0000 	str	r0, [lr]
4000fda4:	e3a00000 	mov	r0, #0
4000fda8:	e58c0018 	str	r0, [ip, #24]
4000fdac:	ea000011 	b	4000fdf8 <_tx_timer_deactivate+0x23c>
4000fdb0:	e59c0014 	ldr	r0, [ip, #20]
4000fdb4:	e59ce010 	ldr	lr, [ip, #16]
4000fdb8:	e58e0014 	str	r0, [lr, #20]
4000fdbc:	e59c0010 	ldr	r0, [ip, #16]
4000fdc0:	e59ce014 	ldr	lr, [ip, #20]
4000fdc4:	e58e0010 	str	r0, [lr, #16]
4000fdc8:	e59c0018 	ldr	r0, [ip, #24]
4000fdcc:	e5900000 	ldr	r0, [r0]
4000fdd0:	e150000c 	cmp	r0, ip
4000fdd4:	1a000005 	bne	4000fdf0 <_tx_timer_deactivate+0x234>
4000fdd8:	e59c0018 	ldr	r0, [ip, #24]
4000fddc:	e59ce010 	ldr	lr, [ip, #16]
4000fde0:	e58e0018 	str	r0, [lr, #24]
4000fde4:	e59c0010 	ldr	r0, [ip, #16]
4000fde8:	e59ce018 	ldr	lr, [ip, #24]
4000fdec:	e58e0000 	str	r0, [lr]
4000fdf0:	e3a00000 	mov	r0, #0
4000fdf4:	e58c0018 	str	r0, [ip, #24]
4000fdf8:	e121f002 	msr	CPSR_c, r2
4000fdfc:	e3a00000 	mov	r0, #0
4000fe00:	e8bd8018 	pop	{r3, r4, pc}
4000fe04:	40030ea4 	.word	0x40030ea4
4000fe08:	40030ea8 	.word	0x40030ea8
4000fe0c:	40030e30 	.word	0x40030e30
4000fe10:	40030e38 	.word	0x40030e38
4000fe14:	f0f0f0f0 	.word	0xf0f0f0f0
4000fe18:	40030ea0 	.word	0x40030ea0
4000fe1c:	40030e9c 	.word	0x40030e9c
4000fe20:	40030e90 	.word	0x40030e90
4000fe24:	40030e6c 	.word	0x40030e6c
4000fe28:	40030e70 	.word	0x40030e70
4000fe2c:	40030e74 	.word	0x40030e74

4000fe30 <_tx_timer_expiration_process>:
4000fe30:	e92d4070 	push	{r4, r5, r6, lr}
4000fe34:	e10f4000 	mrs	r4, CPSR
4000fe38:	e3845080 	orr	r5, r4, #128	; 0x80
4000fe3c:	e121f005 	msr	CPSR_c, r5
4000fe40:	e59f001c 	ldr	r0, [pc, #28]	; 4000fe64 <_tx_timer_expiration_process+0x34>
4000fe44:	e5900000 	ldr	r0, [r0]
4000fe48:	e2800001 	add	r0, r0, #1
4000fe4c:	e59f1010 	ldr	r1, [pc, #16]	; 4000fe64 <_tx_timer_expiration_process+0x34>
4000fe50:	e5810000 	str	r0, [r1]
4000fe54:	e121f004 	msr	CPSR_c, r4
4000fe58:	e59f0008 	ldr	r0, [pc, #8]	; 4000fe68 <_tx_timer_expiration_process+0x38>
4000fe5c:	ebfffcd5 	bl	4000f1b8 <_tx_thread_system_resume>
4000fe60:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fe64:	40030e54 	.word	0x40030e54
4000fe68:	40032974 	.word	0x40032974

4000fe6c <_tx_timer_system_deactivate>:
4000fe6c:	e1a01000 	mov	r1, r0
4000fe70:	e10f2000 	mrs	r2, CPSR
4000fe74:	e3823080 	orr	r3, r2, #128	; 0x80
4000fe78:	e121f003 	msr	CPSR_c, r3
4000fe7c:	e5910018 	ldr	r0, [r1, #24]
4000fe80:	e3500000 	cmp	r0, #0
4000fe84:	0a00001e 	beq	4000ff04 <_tx_timer_system_deactivate+0x98>
4000fe88:	e5910010 	ldr	r0, [r1, #16]
4000fe8c:	e1500001 	cmp	r0, r1
4000fe90:	1a000009 	bne	4000febc <_tx_timer_system_deactivate+0x50>
4000fe94:	e5910018 	ldr	r0, [r1, #24]
4000fe98:	e5900000 	ldr	r0, [r0]
4000fe9c:	e1500001 	cmp	r0, r1
4000fea0:	1a000002 	bne	4000feb0 <_tx_timer_system_deactivate+0x44>
4000fea4:	e3a00000 	mov	r0, #0
4000fea8:	e591c018 	ldr	ip, [r1, #24]
4000feac:	e58c0000 	str	r0, [ip]
4000feb0:	e3a00000 	mov	r0, #0
4000feb4:	e5810018 	str	r0, [r1, #24]
4000feb8:	ea000011 	b	4000ff04 <_tx_timer_system_deactivate+0x98>
4000febc:	e5910014 	ldr	r0, [r1, #20]
4000fec0:	e591c010 	ldr	ip, [r1, #16]
4000fec4:	e58c0014 	str	r0, [ip, #20]
4000fec8:	e5910010 	ldr	r0, [r1, #16]
4000fecc:	e591c014 	ldr	ip, [r1, #20]
4000fed0:	e58c0010 	str	r0, [ip, #16]
4000fed4:	e5910018 	ldr	r0, [r1, #24]
4000fed8:	e5900000 	ldr	r0, [r0]
4000fedc:	e1500001 	cmp	r0, r1
4000fee0:	1a000005 	bne	4000fefc <_tx_timer_system_deactivate+0x90>
4000fee4:	e5910018 	ldr	r0, [r1, #24]
4000fee8:	e591c010 	ldr	ip, [r1, #16]
4000feec:	e58c0018 	str	r0, [ip, #24]
4000fef0:	e5910010 	ldr	r0, [r1, #16]
4000fef4:	e591c018 	ldr	ip, [r1, #24]
4000fef8:	e58c0000 	str	r0, [ip]
4000fefc:	e3a00000 	mov	r0, #0
4000ff00:	e5810018 	str	r0, [r1, #24]
4000ff04:	e121f002 	msr	CPSR_c, r2
4000ff08:	e3a00000 	mov	r0, #0
4000ff0c:	e12fff1e 	bx	lr

4000ff10 <_tx_trace_object_register>:
4000ff10:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000ff14:	e1a04000 	mov	r4, r0
4000ff18:	e1a05001 	mov	r5, r1
4000ff1c:	e1a06002 	mov	r6, r2
4000ff20:	e1a07003 	mov	r7, r3
4000ff24:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
4000ff28:	e59f0184 	ldr	r0, [pc, #388]	; 400100b4 <_tx_trace_object_register+0x1a4>
4000ff2c:	e5900000 	ldr	r0, [r0]
4000ff30:	e3500000 	cmp	r0, #0
4000ff34:	1a000000 	bne	4000ff3c <_tx_trace_object_register+0x2c>
4000ff38:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000ff3c:	e59f1174 	ldr	r1, [pc, #372]	; 400100b8 <_tx_trace_object_register+0x1a8>
4000ff40:	e5911000 	ldr	r1, [r1]
4000ff44:	e59f2168 	ldr	r2, [pc, #360]	; 400100b4 <_tx_trace_object_register+0x1a4>
4000ff48:	e5922000 	ldr	r2, [r2]
4000ff4c:	e0410002 	sub	r0, r1, r2
4000ff50:	e3a01030 	mov	r1, #48	; 0x30
4000ff54:	eb0002bd 	bl	40010a50 <__aeabi_idivmod>
4000ff58:	e1a0a000 	mov	sl, r0
4000ff5c:	e1a0b00a 	mov	fp, sl
4000ff60:	e3a09000 	mov	r9, #0
4000ff64:	ea00001b 	b	4000ffd8 <_tx_trace_object_register+0xc8>
4000ff68:	e0890089 	add	r0, r9, r9, lsl #1
4000ff6c:	e59f1140 	ldr	r1, [pc, #320]	; 400100b4 <_tx_trace_object_register+0x1a4>
4000ff70:	e5911000 	ldr	r1, [r1]
4000ff74:	e0810200 	add	r0, r1, r0, lsl #4
4000ff78:	e5900004 	ldr	r0, [r0, #4]
4000ff7c:	e1500005 	cmp	r0, r5
4000ff80:	1a000001 	bne	4000ff8c <_tx_trace_object_register+0x7c>
4000ff84:	e1a0b009 	mov	fp, r9
4000ff88:	ea000014 	b	4000ffe0 <_tx_trace_object_register+0xd0>
4000ff8c:	e0890089 	add	r0, r9, r9, lsl #1
4000ff90:	e59f111c 	ldr	r1, [pc, #284]	; 400100b4 <_tx_trace_object_register+0x1a4>
4000ff94:	e5911000 	ldr	r1, [r1]
4000ff98:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
4000ff9c:	e3500000 	cmp	r0, #0
4000ffa0:	0a00000b 	beq	4000ffd4 <_tx_trace_object_register+0xc4>
4000ffa4:	e15b000a 	cmp	fp, sl
4000ffa8:	1a000001 	bne	4000ffb4 <_tx_trace_object_register+0xa4>
4000ffac:	e1a0b009 	mov	fp, r9
4000ffb0:	ea000007 	b	4000ffd4 <_tx_trace_object_register+0xc4>
4000ffb4:	e08b008b 	add	r0, fp, fp, lsl #1
4000ffb8:	e59f10f4 	ldr	r1, [pc, #244]	; 400100b4 <_tx_trace_object_register+0x1a4>
4000ffbc:	e5911000 	ldr	r1, [r1]
4000ffc0:	e0810200 	add	r0, r1, r0, lsl #4
4000ffc4:	e5d00001 	ldrb	r0, [r0, #1]
4000ffc8:	e3500000 	cmp	r0, #0
4000ffcc:	0a000000 	beq	4000ffd4 <_tx_trace_object_register+0xc4>
4000ffd0:	e1a0b009 	mov	fp, r9
4000ffd4:	e2899001 	add	r9, r9, #1
4000ffd8:	e159000a 	cmp	r9, sl
4000ffdc:	3affffe1 	bcc	4000ff68 <_tx_trace_object_register+0x58>
4000ffe0:	e1a00000 	nop			; (mov r0, r0)
4000ffe4:	e15b000a 	cmp	fp, sl
4000ffe8:	2a000030 	bcs	400100b0 <_tx_trace_object_register+0x1a0>
4000ffec:	e3a00000 	mov	r0, #0
4000fff0:	e08b108b 	add	r1, fp, fp, lsl #1
4000fff4:	e59f20b8 	ldr	r2, [pc, #184]	; 400100b4 <_tx_trace_object_register+0x1a4>
4000fff8:	e5922000 	ldr	r2, [r2]
4000fffc:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010000:	e08b008b 	add	r0, fp, fp, lsl #1
40010004:	e59f10a8 	ldr	r1, [pc, #168]	; 400100b4 <_tx_trace_object_register+0x1a4>
40010008:	e5911000 	ldr	r1, [r1]
4001000c:	e0810200 	add	r0, r1, r0, lsl #4
40010010:	e5c04001 	strb	r4, [r0, #1]
40010014:	e08b008b 	add	r0, fp, fp, lsl #1
40010018:	e59f1094 	ldr	r1, [pc, #148]	; 400100b4 <_tx_trace_object_register+0x1a4>
4001001c:	e5911000 	ldr	r1, [r1]
40010020:	e0810200 	add	r0, r1, r0, lsl #4
40010024:	e5805004 	str	r5, [r0, #4]
40010028:	e08b008b 	add	r0, fp, fp, lsl #1
4001002c:	e59f1080 	ldr	r1, [pc, #128]	; 400100b4 <_tx_trace_object_register+0x1a4>
40010030:	e5911000 	ldr	r1, [r1]
40010034:	e0810200 	add	r0, r1, r0, lsl #4
40010038:	e5807008 	str	r7, [r0, #8]
4001003c:	e08b008b 	add	r0, fp, fp, lsl #1
40010040:	e59f106c 	ldr	r1, [pc, #108]	; 400100b4 <_tx_trace_object_register+0x1a4>
40010044:	e5911000 	ldr	r1, [r1]
40010048:	e0810200 	add	r0, r1, r0, lsl #4
4001004c:	e580800c 	str	r8, [r0, #12]
40010050:	e3a09000 	mov	r9, #0
40010054:	ea00000b 	b	40010088 <_tx_trace_object_register+0x178>
40010058:	e7d60009 	ldrb	r0, [r6, r9]
4001005c:	e08b108b 	add	r1, fp, fp, lsl #1
40010060:	e59f204c 	ldr	r2, [pc, #76]	; 400100b4 <_tx_trace_object_register+0x1a4>
40010064:	e5922000 	ldr	r2, [r2]
40010068:	e0821201 	add	r1, r2, r1, lsl #4
4001006c:	e2811010 	add	r1, r1, #16
40010070:	e7c10009 	strb	r0, [r1, r9]
40010074:	e7d60009 	ldrb	r0, [r6, r9]
40010078:	e3500000 	cmp	r0, #0
4001007c:	1a000000 	bne	40010084 <_tx_trace_object_register+0x174>
40010080:	ea000002 	b	40010090 <_tx_trace_object_register+0x180>
40010084:	e2899001 	add	r9, r9, #1
40010088:	e359001f 	cmp	r9, #31
4001008c:	3afffff1 	bcc	40010058 <_tx_trace_object_register+0x148>
40010090:	e1a00000 	nop			; (mov r0, r0)
40010094:	e3a00000 	mov	r0, #0
40010098:	e08b108b 	add	r1, fp, fp, lsl #1
4001009c:	e59f2010 	ldr	r2, [pc, #16]	; 400100b4 <_tx_trace_object_register+0x1a4>
400100a0:	e5922000 	ldr	r2, [r2]
400100a4:	e0821201 	add	r1, r2, r1, lsl #4
400100a8:	e2811010 	add	r1, r1, #16
400100ac:	e7c10009 	strb	r0, [r1, r9]
400100b0:	eaffffa0 	b	4000ff38 <_tx_trace_object_register+0x28>
400100b4:	40030e94 	.word	0x40030e94
400100b8:	40030e98 	.word	0x40030e98

400100bc <_tx_trace_object_unregister>:
400100bc:	e92d4070 	push	{r4, r5, r6, lr}
400100c0:	e1a04000 	mov	r4, r0
400100c4:	e59f007c 	ldr	r0, [pc, #124]	; 40010148 <_tx_trace_object_unregister+0x8c>
400100c8:	e5900000 	ldr	r0, [r0]
400100cc:	e3500000 	cmp	r0, #0
400100d0:	1a000000 	bne	400100d8 <_tx_trace_object_unregister+0x1c>
400100d4:	e8bd8070 	pop	{r4, r5, r6, pc}
400100d8:	e59f106c 	ldr	r1, [pc, #108]	; 4001014c <_tx_trace_object_unregister+0x90>
400100dc:	e5911000 	ldr	r1, [r1]
400100e0:	e59f2060 	ldr	r2, [pc, #96]	; 40010148 <_tx_trace_object_unregister+0x8c>
400100e4:	e5922000 	ldr	r2, [r2]
400100e8:	e0410002 	sub	r0, r1, r2
400100ec:	e3a01030 	mov	r1, #48	; 0x30
400100f0:	eb000256 	bl	40010a50 <__aeabi_idivmod>
400100f4:	e1a05000 	mov	r5, r0
400100f8:	e3a06000 	mov	r6, #0
400100fc:	ea00000d 	b	40010138 <_tx_trace_object_unregister+0x7c>
40010100:	e0860086 	add	r0, r6, r6, lsl #1
40010104:	e59f103c 	ldr	r1, [pc, #60]	; 40010148 <_tx_trace_object_unregister+0x8c>
40010108:	e5911000 	ldr	r1, [r1]
4001010c:	e0810200 	add	r0, r1, r0, lsl #4
40010110:	e5900004 	ldr	r0, [r0, #4]
40010114:	e1500004 	cmp	r0, r4
40010118:	1a000005 	bne	40010134 <_tx_trace_object_unregister+0x78>
4001011c:	e3a00001 	mov	r0, #1
40010120:	e0861086 	add	r1, r6, r6, lsl #1
40010124:	e59f201c 	ldr	r2, [pc, #28]	; 40010148 <_tx_trace_object_unregister+0x8c>
40010128:	e5922000 	ldr	r2, [r2]
4001012c:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010130:	ea000002 	b	40010140 <_tx_trace_object_unregister+0x84>
40010134:	e2866001 	add	r6, r6, #1
40010138:	e1560005 	cmp	r6, r5
4001013c:	3affffef 	bcc	40010100 <_tx_trace_object_unregister+0x44>
40010140:	e1a00000 	nop			; (mov r0, r0)
40010144:	eaffffe2 	b	400100d4 <_tx_trace_object_unregister+0x18>
40010148:	40030e94 	.word	0x40030e94
4001014c:	40030e98 	.word	0x40030e98

40010150 <_tx_thread_stack_build>:
40010150:	e5902010 	ldr	r2, [r0, #16]
40010154:	e3c22007 	bic	r2, r2, #7
40010158:	e242204c 	sub	r2, r2, #76	; 0x4c
4001015c:	e3a03001 	mov	r3, #1
40010160:	e5823000 	str	r3, [r2]
40010164:	e3a03000 	mov	r3, #0
40010168:	e5823008 	str	r3, [r2, #8]
4001016c:	e582300c 	str	r3, [r2, #12]
40010170:	e5823010 	str	r3, [r2, #16]
40010174:	e5823014 	str	r3, [r2, #20]
40010178:	e5823018 	str	r3, [r2, #24]
4001017c:	e582301c 	str	r3, [r2, #28]
40010180:	e5823020 	str	r3, [r2, #32]
40010184:	e5823024 	str	r3, [r2, #36]	; 0x24
40010188:	e5823028 	str	r3, [r2, #40]	; 0x28
4001018c:	e582302c 	str	r3, [r2, #44]	; 0x2c
40010190:	e590300c 	ldr	r3, [r0, #12]
40010194:	e5823030 	str	r3, [r2, #48]	; 0x30
40010198:	e3a03000 	mov	r3, #0
4001019c:	e5823034 	str	r3, [r2, #52]	; 0x34
400101a0:	e5823038 	str	r3, [r2, #56]	; 0x38
400101a4:	e582303c 	str	r3, [r2, #60]	; 0x3c
400101a8:	e5821040 	str	r1, [r2, #64]	; 0x40
400101ac:	e5823044 	str	r3, [r2, #68]	; 0x44
400101b0:	e10f1000 	mrs	r1, CPSR
400101b4:	e3c1109f 	bic	r1, r1, #159	; 0x9f
400101b8:	e3813013 	orr	r3, r1, #19
400101bc:	e5823004 	str	r3, [r2, #4]
400101c0:	e5802008 	str	r2, [r0, #8]
400101c4:	e12fff1e 	bx	lr

400101c8 <_tx_event_flags_cleanup>:
400101c8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400101cc:	e1a04000 	mov	r4, r0
400101d0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400101d4:	e10f5000 	mrs	r5, CPSR
400101d8:	e3856080 	orr	r6, r5, #128	; 0x80
400101dc:	e121f006 	msr	CPSR_c, r6
400101e0:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400101e4:	e3500000 	cmp	r0, #0
400101e8:	0a000026 	beq	40010288 <_tx_event_flags_cleanup+0xc0>
400101ec:	e3570000 	cmp	r7, #0
400101f0:	0a000024 	beq	40010288 <_tx_event_flags_cleanup+0xc0>
400101f4:	e5970000 	ldr	r0, [r7]
400101f8:	e59f1090 	ldr	r1, [pc, #144]	; 40010290 <_tx_event_flags_cleanup+0xc8>
400101fc:	e1500001 	cmp	r0, r1
40010200:	1a000020 	bne	40010288 <_tx_event_flags_cleanup+0xc0>
40010204:	e3a00000 	mov	r0, #0
40010208:	e5840068 	str	r0, [r4, #104]	; 0x68
4001020c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010210:	e1500004 	cmp	r0, r4
40010214:	1a000002 	bne	40010224 <_tx_event_flags_cleanup+0x5c>
40010218:	e3a00000 	mov	r0, #0
4001021c:	e5870010 	str	r0, [r7, #16]
40010220:	ea000007 	b	40010244 <_tx_event_flags_cleanup+0x7c>
40010224:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010228:	e5870010 	str	r0, [r7, #16]
4001022c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010230:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010234:	e5810074 	str	r0, [r1, #116]	; 0x74
40010238:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001023c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010240:	e5810070 	str	r0, [r1, #112]	; 0x70
40010244:	e5970014 	ldr	r0, [r7, #20]
40010248:	e2400001 	sub	r0, r0, #1
4001024c:	e5870014 	str	r0, [r7, #20]
40010250:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010254:	e3500007 	cmp	r0, #7
40010258:	1a00000a 	bne	40010288 <_tx_event_flags_cleanup+0xc0>
4001025c:	e3a00007 	mov	r0, #7
40010260:	e5840084 	str	r0, [r4, #132]	; 0x84
40010264:	e59f0028 	ldr	r0, [pc, #40]	; 40010294 <_tx_event_flags_cleanup+0xcc>
40010268:	e5900000 	ldr	r0, [r0]
4001026c:	e2800001 	add	r0, r0, #1
40010270:	e59f101c 	ldr	r1, [pc, #28]	; 40010294 <_tx_event_flags_cleanup+0xcc>
40010274:	e5810000 	str	r0, [r1]
40010278:	e121f005 	msr	CPSR_c, r5
4001027c:	e1a00004 	mov	r0, r4
40010280:	ebfffbcc 	bl	4000f1b8 <_tx_thread_system_resume>
40010284:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010288:	e121f005 	msr	CPSR_c, r5
4001028c:	eafffffc 	b	40010284 <_tx_event_flags_cleanup+0xbc>
40010290:	4456444e 	.word	0x4456444e
40010294:	40030e54 	.word	0x40030e54

40010298 <_tx_mutex_cleanup>:
40010298:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001029c:	e1a04000 	mov	r4, r0
400102a0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400102a4:	e10f5000 	mrs	r5, CPSR
400102a8:	e3856080 	orr	r6, r5, #128	; 0x80
400102ac:	e121f006 	msr	CPSR_c, r6
400102b0:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400102b4:	e3500000 	cmp	r0, #0
400102b8:	0a000026 	beq	40010358 <_tx_mutex_cleanup+0xc0>
400102bc:	e3570000 	cmp	r7, #0
400102c0:	0a000024 	beq	40010358 <_tx_mutex_cleanup+0xc0>
400102c4:	e5970000 	ldr	r0, [r7]
400102c8:	e59f1090 	ldr	r1, [pc, #144]	; 40010360 <_tx_mutex_cleanup+0xc8>
400102cc:	e1500001 	cmp	r0, r1
400102d0:	1a000020 	bne	40010358 <_tx_mutex_cleanup+0xc0>
400102d4:	e3a00000 	mov	r0, #0
400102d8:	e5840068 	str	r0, [r4, #104]	; 0x68
400102dc:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102e0:	e1500004 	cmp	r0, r4
400102e4:	1a000002 	bne	400102f4 <_tx_mutex_cleanup+0x5c>
400102e8:	e3a00000 	mov	r0, #0
400102ec:	e587001c 	str	r0, [r7, #28]
400102f0:	ea000007 	b	40010314 <_tx_mutex_cleanup+0x7c>
400102f4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102f8:	e587001c 	str	r0, [r7, #28]
400102fc:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010300:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010304:	e5810074 	str	r0, [r1, #116]	; 0x74
40010308:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001030c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010310:	e5810070 	str	r0, [r1, #112]	; 0x70
40010314:	e5970020 	ldr	r0, [r7, #32]
40010318:	e2400001 	sub	r0, r0, #1
4001031c:	e5870020 	str	r0, [r7, #32]
40010320:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010324:	e350000d 	cmp	r0, #13
40010328:	1a00000a 	bne	40010358 <_tx_mutex_cleanup+0xc0>
4001032c:	e3a0001d 	mov	r0, #29
40010330:	e5840084 	str	r0, [r4, #132]	; 0x84
40010334:	e59f0028 	ldr	r0, [pc, #40]	; 40010364 <_tx_mutex_cleanup+0xcc>
40010338:	e5900000 	ldr	r0, [r0]
4001033c:	e2800001 	add	r0, r0, #1
40010340:	e59f101c 	ldr	r1, [pc, #28]	; 40010364 <_tx_mutex_cleanup+0xcc>
40010344:	e5810000 	str	r0, [r1]
40010348:	e121f005 	msr	CPSR_c, r5
4001034c:	e1a00004 	mov	r0, r4
40010350:	ebfffb98 	bl	4000f1b8 <_tx_thread_system_resume>
40010354:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010358:	e121f005 	msr	CPSR_c, r5
4001035c:	eafffffc 	b	40010354 <_tx_mutex_cleanup+0xbc>
40010360:	4d555445 	.word	0x4d555445
40010364:	40030e54 	.word	0x40030e54

40010368 <_tx_mutex_prioritize>:
40010368:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4001036c:	e1a04000 	mov	r4, r0
40010370:	e10f5000 	mrs	r5, CPSR
40010374:	e3856080 	orr	r6, r5, #128	; 0x80
40010378:	e121f006 	msr	CPSR_c, r6
4001037c:	e59f1234 	ldr	r1, [pc, #564]	; 400105b8 <_tx_mutex_prioritize+0x250>
40010380:	e5910000 	ldr	r0, [r1]
40010384:	e3500000 	cmp	r0, #0
40010388:	0a000032 	beq	40010458 <_tx_mutex_prioritize+0xf0>
4001038c:	e59f1228 	ldr	r1, [pc, #552]	; 400105bc <_tx_mutex_prioritize+0x254>
40010390:	e5911000 	ldr	r1, [r1]
40010394:	e2811001 	add	r1, r1, #1
40010398:	e59f221c 	ldr	r2, [pc, #540]	; 400105bc <_tx_mutex_prioritize+0x254>
4001039c:	e5821000 	str	r1, [r2]
400103a0:	e580100c 	str	r1, [r0, #12]
400103a4:	e59f1214 	ldr	r1, [pc, #532]	; 400105c0 <_tx_mutex_prioritize+0x258>
400103a8:	e5911000 	ldr	r1, [r1]
400103ac:	e3510000 	cmp	r1, #0
400103b0:	1a000006 	bne	400103d0 <_tx_mutex_prioritize+0x68>
400103b4:	e59f1208 	ldr	r1, [pc, #520]	; 400105c4 <_tx_mutex_prioritize+0x25c>
400103b8:	e5911000 	ldr	r1, [r1]
400103bc:	e5801000 	str	r1, [r0]
400103c0:	e5901000 	ldr	r1, [r0]
400103c4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400103c8:	e5801004 	str	r1, [r0, #4]
400103cc:	ea00000d 	b	40010408 <_tx_mutex_prioritize+0xa0>
400103d0:	e59f11e8 	ldr	r1, [pc, #488]	; 400105c0 <_tx_mutex_prioritize+0x258>
400103d4:	e5911000 	ldr	r1, [r1]
400103d8:	e59f21e8 	ldr	r2, [pc, #488]	; 400105c8 <_tx_mutex_prioritize+0x260>
400103dc:	e1510002 	cmp	r1, r2
400103e0:	2a000004 	bcs	400103f8 <_tx_mutex_prioritize+0x90>
400103e4:	e3e01000 	mvn	r1, #0
400103e8:	e5801000 	str	r1, [r0]
400103ec:	e3a01000 	mov	r1, #0
400103f0:	e5801004 	str	r1, [r0, #4]
400103f4:	ea000003 	b	40010408 <_tx_mutex_prioritize+0xa0>
400103f8:	e59f11c8 	ldr	r1, [pc, #456]	; 400105c8 <_tx_mutex_prioritize+0x260>
400103fc:	e5801000 	str	r1, [r0]
40010400:	e3a01000 	mov	r1, #0
40010404:	e5801004 	str	r1, [r0, #4]
40010408:	e3a01038 	mov	r1, #56	; 0x38
4001040c:	e5801008 	str	r1, [r0, #8]
40010410:	e5804010 	str	r4, [r0, #16]
40010414:	e5941020 	ldr	r1, [r4, #32]
40010418:	e5801014 	str	r1, [r0, #20]
4001041c:	e580d018 	str	sp, [r0, #24]
40010420:	e3a01000 	mov	r1, #0
40010424:	e580101c 	str	r1, [r0, #28]
40010428:	e2800020 	add	r0, r0, #32
4001042c:	e59f1198 	ldr	r1, [pc, #408]	; 400105cc <_tx_mutex_prioritize+0x264>
40010430:	e5911000 	ldr	r1, [r1]
40010434:	e1500001 	cmp	r0, r1
40010438:	3a000001 	bcc	40010444 <_tx_mutex_prioritize+0xdc>
4001043c:	e59f118c 	ldr	r1, [pc, #396]	; 400105d0 <_tx_mutex_prioritize+0x268>
40010440:	e5910000 	ldr	r0, [r1]
40010444:	e59f116c 	ldr	r1, [pc, #364]	; 400105b8 <_tx_mutex_prioritize+0x250>
40010448:	e5810000 	str	r0, [r1]
4001044c:	e59f1180 	ldr	r1, [pc, #384]	; 400105d4 <_tx_mutex_prioritize+0x26c>
40010450:	e5911000 	ldr	r1, [r1]
40010454:	e5810020 	str	r0, [r1, #32]
40010458:	e5940020 	ldr	r0, [r4, #32]
4001045c:	e3500002 	cmp	r0, #2
40010460:	2a000002 	bcs	40010470 <_tx_mutex_prioritize+0x108>
40010464:	e121f005 	msr	CPSR_c, r5
40010468:	e3a00000 	mov	r0, #0
4001046c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40010470:	e5940020 	ldr	r0, [r4, #32]
40010474:	e3500002 	cmp	r0, #2
40010478:	1a00000c 	bne	400104b0 <_tx_mutex_prioritize+0x148>
4001047c:	e594001c 	ldr	r0, [r4, #28]
40010480:	e5900070 	ldr	r0, [r0, #112]	; 0x70
40010484:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40010488:	e594101c 	ldr	r1, [r4, #28]
4001048c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40010490:	e1500001 	cmp	r0, r1
40010494:	2a000002 	bcs	400104a4 <_tx_mutex_prioritize+0x13c>
40010498:	e594001c 	ldr	r0, [r4, #28]
4001049c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400104a0:	e584001c 	str	r0, [r4, #28]
400104a4:	e121f005 	msr	CPSR_c, r5
400104a8:	e3a00000 	mov	r0, #0
400104ac:	eaffffee 	b	4001046c <_tx_mutex_prioritize+0x104>
400104b0:	e594901c 	ldr	r9, [r4, #28]
400104b4:	e5940020 	ldr	r0, [r4, #32]
400104b8:	e58d0000 	str	r0, [sp]
400104bc:	e594801c 	ldr	r8, [r4, #28]
400104c0:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400104c4:	e59f010c 	ldr	r0, [pc, #268]	; 400105d8 <_tx_mutex_prioritize+0x270>
400104c8:	e5900000 	ldr	r0, [r0]
400104cc:	e2800001 	add	r0, r0, #1
400104d0:	e59f1100 	ldr	r1, [pc, #256]	; 400105d8 <_tx_mutex_prioritize+0x270>
400104d4:	e5810000 	str	r0, [r1]
400104d8:	e1a00000 	nop			; (mov r0, r0)
400104dc:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
400104e0:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
400104e4:	e1500001 	cmp	r0, r1
400104e8:	2a000000 	bcs	400104f0 <_tx_mutex_prioritize+0x188>
400104ec:	e1a08007 	mov	r8, r7
400104f0:	e121f005 	msr	CPSR_c, r5
400104f4:	e10f5000 	mrs	r5, CPSR
400104f8:	e3856080 	orr	r6, r5, #128	; 0x80
400104fc:	e121f006 	msr	CPSR_c, r6
40010500:	e594001c 	ldr	r0, [r4, #28]
40010504:	e1500009 	cmp	r0, r9
40010508:	1a000005 	bne	40010524 <_tx_mutex_prioritize+0x1bc>
4001050c:	e5940020 	ldr	r0, [r4, #32]
40010510:	e59d1000 	ldr	r1, [sp]
40010514:	e1500001 	cmp	r0, r1
40010518:	1a000001 	bne	40010524 <_tx_mutex_prioritize+0x1bc>
4001051c:	e5977070 	ldr	r7, [r7, #112]	; 0x70
40010520:	ea000004 	b	40010538 <_tx_mutex_prioritize+0x1d0>
40010524:	e594901c 	ldr	r9, [r4, #28]
40010528:	e5940020 	ldr	r0, [r4, #32]
4001052c:	e58d0000 	str	r0, [sp]
40010530:	e594801c 	ldr	r8, [r4, #28]
40010534:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010538:	e594001c 	ldr	r0, [r4, #28]
4001053c:	e1500007 	cmp	r0, r7
40010540:	1affffe5 	bne	400104dc <_tx_mutex_prioritize+0x174>
40010544:	e59f008c 	ldr	r0, [pc, #140]	; 400105d8 <_tx_mutex_prioritize+0x270>
40010548:	e5900000 	ldr	r0, [r0]
4001054c:	e2400001 	sub	r0, r0, #1
40010550:	e59f1080 	ldr	r1, [pc, #128]	; 400105d8 <_tx_mutex_prioritize+0x270>
40010554:	e5810000 	str	r0, [r1]
40010558:	e594001c 	ldr	r0, [r4, #28]
4001055c:	e1500008 	cmp	r0, r8
40010560:	0a000010 	beq	400105a8 <_tx_mutex_prioritize+0x240>
40010564:	e5980074 	ldr	r0, [r8, #116]	; 0x74
40010568:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4001056c:	e5810074 	str	r0, [r1, #116]	; 0x74
40010570:	e5980070 	ldr	r0, [r8, #112]	; 0x70
40010574:	e5981074 	ldr	r1, [r8, #116]	; 0x74
40010578:	e5810070 	str	r0, [r1, #112]	; 0x70
4001057c:	e594001c 	ldr	r0, [r4, #28]
40010580:	e5880070 	str	r0, [r8, #112]	; 0x70
40010584:	e594001c 	ldr	r0, [r4, #28]
40010588:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001058c:	e5880074 	str	r0, [r8, #116]	; 0x74
40010590:	e594001c 	ldr	r0, [r4, #28]
40010594:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010598:	e5808070 	str	r8, [r0, #112]	; 0x70
4001059c:	e594001c 	ldr	r0, [r4, #28]
400105a0:	e5808074 	str	r8, [r0, #116]	; 0x74
400105a4:	e584801c 	str	r8, [r4, #28]
400105a8:	e121f005 	msr	CPSR_c, r5
400105ac:	ebfffad5 	bl	4000f108 <_tx_thread_system_preempt_check>
400105b0:	e3a00000 	mov	r0, #0
400105b4:	eaffffac 	b	4001046c <_tx_mutex_prioritize+0x104>
400105b8:	40030ea4 	.word	0x40030ea4
400105bc:	40030ea8 	.word	0x40030ea8
400105c0:	40030e30 	.word	0x40030e30
400105c4:	40030e38 	.word	0x40030e38
400105c8:	f0f0f0f0 	.word	0xf0f0f0f0
400105cc:	40030ea0 	.word	0x40030ea0
400105d0:	40030e9c 	.word	0x40030e9c
400105d4:	40030e90 	.word	0x40030e90
400105d8:	40030e54 	.word	0x40030e54

400105dc <_tx_queue_cleanup>:
400105dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400105e0:	e1a04000 	mov	r4, r0
400105e4:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400105e8:	e10f5000 	mrs	r5, CPSR
400105ec:	e3856080 	orr	r6, r5, #128	; 0x80
400105f0:	e121f006 	msr	CPSR_c, r6
400105f4:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400105f8:	e3500000 	cmp	r0, #0
400105fc:	0a00002c 	beq	400106b4 <_tx_queue_cleanup+0xd8>
40010600:	e3570000 	cmp	r7, #0
40010604:	0a00002a 	beq	400106b4 <_tx_queue_cleanup+0xd8>
40010608:	e5970000 	ldr	r0, [r7]
4001060c:	e59f10a8 	ldr	r1, [pc, #168]	; 400106bc <_tx_queue_cleanup+0xe0>
40010610:	e1500001 	cmp	r0, r1
40010614:	1a000026 	bne	400106b4 <_tx_queue_cleanup+0xd8>
40010618:	e3a00000 	mov	r0, #0
4001061c:	e5840068 	str	r0, [r4, #104]	; 0x68
40010620:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010624:	e1500004 	cmp	r0, r4
40010628:	1a000002 	bne	40010638 <_tx_queue_cleanup+0x5c>
4001062c:	e3a00000 	mov	r0, #0
40010630:	e5870028 	str	r0, [r7, #40]	; 0x28
40010634:	ea000007 	b	40010658 <_tx_queue_cleanup+0x7c>
40010638:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001063c:	e5870028 	str	r0, [r7, #40]	; 0x28
40010640:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010644:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010648:	e5810074 	str	r0, [r1, #116]	; 0x74
4001064c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010650:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010654:	e5810070 	str	r0, [r1, #112]	; 0x70
40010658:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4001065c:	e2400001 	sub	r0, r0, #1
40010660:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010664:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010668:	e3500005 	cmp	r0, #5
4001066c:	1a000010 	bne	400106b4 <_tx_queue_cleanup+0xd8>
40010670:	e5970010 	ldr	r0, [r7, #16]
40010674:	e3500000 	cmp	r0, #0
40010678:	0a000002 	beq	40010688 <_tx_queue_cleanup+0xac>
4001067c:	e3a0000b 	mov	r0, #11
40010680:	e5840084 	str	r0, [r4, #132]	; 0x84
40010684:	ea000001 	b	40010690 <_tx_queue_cleanup+0xb4>
40010688:	e3a0000a 	mov	r0, #10
4001068c:	e5840084 	str	r0, [r4, #132]	; 0x84
40010690:	e59f0028 	ldr	r0, [pc, #40]	; 400106c0 <_tx_queue_cleanup+0xe4>
40010694:	e5900000 	ldr	r0, [r0]
40010698:	e2800001 	add	r0, r0, #1
4001069c:	e59f101c 	ldr	r1, [pc, #28]	; 400106c0 <_tx_queue_cleanup+0xe4>
400106a0:	e5810000 	str	r0, [r1]
400106a4:	e121f005 	msr	CPSR_c, r5
400106a8:	e1a00004 	mov	r0, r4
400106ac:	ebfffac1 	bl	4000f1b8 <_tx_thread_system_resume>
400106b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400106b4:	e121f005 	msr	CPSR_c, r5
400106b8:	eafffffc 	b	400106b0 <_tx_queue_cleanup+0xd4>
400106bc:	51554555 	.word	0x51554555
400106c0:	40030e54 	.word	0x40030e54

400106c4 <strcpy>:
400106c4:	e0202001 	eor	r2, r0, r1
400106c8:	e1a0c000 	mov	ip, r0
400106cc:	e3120003 	tst	r2, #3
400106d0:	1a000032 	bne	400107a0 <strcpy+0xdc>
400106d4:	e3110003 	tst	r1, #3
400106d8:	1a000021 	bne	40010764 <strcpy+0xa0>
400106dc:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
400106e0:	e3a05001 	mov	r5, #1
400106e4:	e1855405 	orr	r5, r5, r5, lsl #8
400106e8:	e1855805 	orr	r5, r5, r5, lsl #16
400106ec:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
400106f0:	e3110004 	tst	r1, #4
400106f4:	e4913004 	ldr	r3, [r1], #4
400106f8:	0a000005 	beq	40010714 <strcpy+0x50>
400106fc:	e0432005 	sub	r2, r3, r5
40010700:	e1d22003 	bics	r2, r2, r3
40010704:	e1120385 	tst	r2, r5, lsl #7
40010708:	048c3004 	streq	r3, [ip], #4
4001070c:	04913004 	ldreq	r3, [r1], #4
40010710:	1a00000c 	bne	40010748 <strcpy+0x84>
40010714:	e4914004 	ldr	r4, [r1], #4
40010718:	e0432005 	sub	r2, r3, r5
4001071c:	e1d22003 	bics	r2, r2, r3
40010720:	e1120385 	tst	r2, r5, lsl #7
40010724:	e0442005 	sub	r2, r4, r5
40010728:	1a000006 	bne	40010748 <strcpy+0x84>
4001072c:	e48c3004 	str	r3, [ip], #4
40010730:	e1d22004 	bics	r2, r2, r4
40010734:	e1120385 	tst	r2, r5, lsl #7
40010738:	04913004 	ldreq	r3, [r1], #4
4001073c:	048c4004 	streq	r4, [ip], #4
40010740:	0afffff3 	beq	40010714 <strcpy+0x50>
40010744:	e1a03004 	mov	r3, r4
40010748:	e4cc3001 	strb	r3, [ip], #1
4001074c:	e31300ff 	tst	r3, #255	; 0xff
40010750:	e1a03463 	ror	r3, r3, #8
40010754:	1afffffb 	bne	40010748 <strcpy+0x84>
40010758:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
4001075c:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
40010760:	e12fff1e 	bx	lr
40010764:	e3110001 	tst	r1, #1
40010768:	0a000003 	beq	4001077c <strcpy+0xb8>
4001076c:	e4d12001 	ldrb	r2, [r1], #1
40010770:	e4cc2001 	strb	r2, [ip], #1
40010774:	e3520000 	cmp	r2, #0
40010778:	012fff1e 	bxeq	lr
4001077c:	e3110002 	tst	r1, #2
40010780:	0affffd5 	beq	400106dc <strcpy+0x18>
40010784:	e0d120b2 	ldrh	r2, [r1], #2
40010788:	e31200ff 	tst	r2, #255	; 0xff
4001078c:	10cc20b2 	strhne	r2, [ip], #2
40010790:	05cc2000 	strbeq	r2, [ip]
40010794:	13120cff 	tstne	r2, #65280	; 0xff00
40010798:	1affffcf 	bne	400106dc <strcpy+0x18>
4001079c:	e12fff1e 	bx	lr
400107a0:	e4d12001 	ldrb	r2, [r1], #1
400107a4:	e4cc2001 	strb	r2, [ip], #1
400107a8:	e3520000 	cmp	r2, #0
400107ac:	1afffffb 	bne	400107a0 <strcpy+0xdc>
400107b0:	e12fff1e 	bx	lr

400107b4 <strlen>:
400107b4:	e3c01003 	bic	r1, r0, #3
400107b8:	e2100003 	ands	r0, r0, #3
400107bc:	e2600000 	rsb	r0, r0, #0
400107c0:	e4913004 	ldr	r3, [r1], #4
400107c4:	e280c004 	add	ip, r0, #4
400107c8:	e1a0c18c 	lsl	ip, ip, #3
400107cc:	e3e02000 	mvn	r2, #0
400107d0:	11833c32 	orrne	r3, r3, r2, lsr ip
400107d4:	e3a0c001 	mov	ip, #1
400107d8:	e18cc40c 	orr	ip, ip, ip, lsl #8
400107dc:	e18cc80c 	orr	ip, ip, ip, lsl #16
400107e0:	e043200c 	sub	r2, r3, ip
400107e4:	e1c22003 	bic	r2, r2, r3
400107e8:	e012238c 	ands	r2, r2, ip, lsl #7
400107ec:	04913004 	ldreq	r3, [r1], #4
400107f0:	02800004 	addeq	r0, r0, #4
400107f4:	0afffff9 	beq	400107e0 <strlen+0x2c>
400107f8:	e31300ff 	tst	r3, #255	; 0xff
400107fc:	12800001 	addne	r0, r0, #1
40010800:	13130cff 	tstne	r3, #65280	; 0xff00
40010804:	12800001 	addne	r0, r0, #1
40010808:	131308ff 	tstne	r3, #16711680	; 0xff0000
4001080c:	12800001 	addne	r0, r0, #1
40010810:	e12fff1e 	bx	lr

40010814 <__aeabi_uidiv>:
40010814:	e2512001 	subs	r2, r1, #1
40010818:	012fff1e 	bxeq	lr
4001081c:	3a000036 	bcc	400108fc <__aeabi_uidiv+0xe8>
40010820:	e1500001 	cmp	r0, r1
40010824:	9a000022 	bls	400108b4 <__aeabi_uidiv+0xa0>
40010828:	e1110002 	tst	r1, r2
4001082c:	0a000023 	beq	400108c0 <__aeabi_uidiv+0xac>
40010830:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010834:	01a01181 	lsleq	r1, r1, #3
40010838:	03a03008 	moveq	r3, #8
4001083c:	13a03001 	movne	r3, #1
40010840:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010844:	31510000 	cmpcc	r1, r0
40010848:	31a01201 	lslcc	r1, r1, #4
4001084c:	31a03203 	lslcc	r3, r3, #4
40010850:	3afffffa 	bcc	40010840 <__aeabi_uidiv+0x2c>
40010854:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010858:	31510000 	cmpcc	r1, r0
4001085c:	31a01081 	lslcc	r1, r1, #1
40010860:	31a03083 	lslcc	r3, r3, #1
40010864:	3afffffa 	bcc	40010854 <__aeabi_uidiv+0x40>
40010868:	e3a02000 	mov	r2, #0
4001086c:	e1500001 	cmp	r0, r1
40010870:	20400001 	subcs	r0, r0, r1
40010874:	21822003 	orrcs	r2, r2, r3
40010878:	e15000a1 	cmp	r0, r1, lsr #1
4001087c:	204000a1 	subcs	r0, r0, r1, lsr #1
40010880:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010884:	e1500121 	cmp	r0, r1, lsr #2
40010888:	20400121 	subcs	r0, r0, r1, lsr #2
4001088c:	21822123 	orrcs	r2, r2, r3, lsr #2
40010890:	e15001a1 	cmp	r0, r1, lsr #3
40010894:	204001a1 	subcs	r0, r0, r1, lsr #3
40010898:	218221a3 	orrcs	r2, r2, r3, lsr #3
4001089c:	e3500000 	cmp	r0, #0
400108a0:	11b03223 	lsrsne	r3, r3, #4
400108a4:	11a01221 	lsrne	r1, r1, #4
400108a8:	1affffef 	bne	4001086c <__aeabi_uidiv+0x58>
400108ac:	e1a00002 	mov	r0, r2
400108b0:	e12fff1e 	bx	lr
400108b4:	03a00001 	moveq	r0, #1
400108b8:	13a00000 	movne	r0, #0
400108bc:	e12fff1e 	bx	lr
400108c0:	e3510801 	cmp	r1, #65536	; 0x10000
400108c4:	21a01821 	lsrcs	r1, r1, #16
400108c8:	23a02010 	movcs	r2, #16
400108cc:	33a02000 	movcc	r2, #0
400108d0:	e3510c01 	cmp	r1, #256	; 0x100
400108d4:	21a01421 	lsrcs	r1, r1, #8
400108d8:	22822008 	addcs	r2, r2, #8
400108dc:	e3510010 	cmp	r1, #16
400108e0:	21a01221 	lsrcs	r1, r1, #4
400108e4:	22822004 	addcs	r2, r2, #4
400108e8:	e3510004 	cmp	r1, #4
400108ec:	82822003 	addhi	r2, r2, #3
400108f0:	908220a1 	addls	r2, r2, r1, lsr #1
400108f4:	e1a00230 	lsr	r0, r0, r2
400108f8:	e12fff1e 	bx	lr
400108fc:	e3500000 	cmp	r0, #0
40010900:	13e00000 	mvnne	r0, #0
40010904:	ea000059 	b	40010a70 <__aeabi_idiv0>

40010908 <__aeabi_uidivmod>:
40010908:	e3510000 	cmp	r1, #0
4001090c:	0afffffa 	beq	400108fc <__aeabi_uidiv+0xe8>
40010910:	e92d4003 	push	{r0, r1, lr}
40010914:	ebffffbe 	bl	40010814 <__aeabi_uidiv>
40010918:	e8bd4006 	pop	{r1, r2, lr}
4001091c:	e0030092 	mul	r3, r2, r0
40010920:	e0411003 	sub	r1, r1, r3
40010924:	e12fff1e 	bx	lr

40010928 <__aeabi_idiv>:
40010928:	e3510000 	cmp	r1, #0
4001092c:	0a000043 	beq	40010a40 <.divsi3_skip_div0_test+0x110>

40010930 <.divsi3_skip_div0_test>:
40010930:	e020c001 	eor	ip, r0, r1
40010934:	42611000 	rsbmi	r1, r1, #0
40010938:	e2512001 	subs	r2, r1, #1
4001093c:	0a000027 	beq	400109e0 <.divsi3_skip_div0_test+0xb0>
40010940:	e1b03000 	movs	r3, r0
40010944:	42603000 	rsbmi	r3, r0, #0
40010948:	e1530001 	cmp	r3, r1
4001094c:	9a000026 	bls	400109ec <.divsi3_skip_div0_test+0xbc>
40010950:	e1110002 	tst	r1, r2
40010954:	0a000028 	beq	400109fc <.divsi3_skip_div0_test+0xcc>
40010958:	e311020e 	tst	r1, #-536870912	; 0xe0000000
4001095c:	01a01181 	lsleq	r1, r1, #3
40010960:	03a02008 	moveq	r2, #8
40010964:	13a02001 	movne	r2, #1
40010968:	e3510201 	cmp	r1, #268435456	; 0x10000000
4001096c:	31510003 	cmpcc	r1, r3
40010970:	31a01201 	lslcc	r1, r1, #4
40010974:	31a02202 	lslcc	r2, r2, #4
40010978:	3afffffa 	bcc	40010968 <.divsi3_skip_div0_test+0x38>
4001097c:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010980:	31510003 	cmpcc	r1, r3
40010984:	31a01081 	lslcc	r1, r1, #1
40010988:	31a02082 	lslcc	r2, r2, #1
4001098c:	3afffffa 	bcc	4001097c <.divsi3_skip_div0_test+0x4c>
40010990:	e3a00000 	mov	r0, #0
40010994:	e1530001 	cmp	r3, r1
40010998:	20433001 	subcs	r3, r3, r1
4001099c:	21800002 	orrcs	r0, r0, r2
400109a0:	e15300a1 	cmp	r3, r1, lsr #1
400109a4:	204330a1 	subcs	r3, r3, r1, lsr #1
400109a8:	218000a2 	orrcs	r0, r0, r2, lsr #1
400109ac:	e1530121 	cmp	r3, r1, lsr #2
400109b0:	20433121 	subcs	r3, r3, r1, lsr #2
400109b4:	21800122 	orrcs	r0, r0, r2, lsr #2
400109b8:	e15301a1 	cmp	r3, r1, lsr #3
400109bc:	204331a1 	subcs	r3, r3, r1, lsr #3
400109c0:	218001a2 	orrcs	r0, r0, r2, lsr #3
400109c4:	e3530000 	cmp	r3, #0
400109c8:	11b02222 	lsrsne	r2, r2, #4
400109cc:	11a01221 	lsrne	r1, r1, #4
400109d0:	1affffef 	bne	40010994 <.divsi3_skip_div0_test+0x64>
400109d4:	e35c0000 	cmp	ip, #0
400109d8:	42600000 	rsbmi	r0, r0, #0
400109dc:	e12fff1e 	bx	lr
400109e0:	e13c0000 	teq	ip, r0
400109e4:	42600000 	rsbmi	r0, r0, #0
400109e8:	e12fff1e 	bx	lr
400109ec:	33a00000 	movcc	r0, #0
400109f0:	01a00fcc 	asreq	r0, ip, #31
400109f4:	03800001 	orreq	r0, r0, #1
400109f8:	e12fff1e 	bx	lr
400109fc:	e3510801 	cmp	r1, #65536	; 0x10000
40010a00:	21a01821 	lsrcs	r1, r1, #16
40010a04:	23a02010 	movcs	r2, #16
40010a08:	33a02000 	movcc	r2, #0
40010a0c:	e3510c01 	cmp	r1, #256	; 0x100
40010a10:	21a01421 	lsrcs	r1, r1, #8
40010a14:	22822008 	addcs	r2, r2, #8
40010a18:	e3510010 	cmp	r1, #16
40010a1c:	21a01221 	lsrcs	r1, r1, #4
40010a20:	22822004 	addcs	r2, r2, #4
40010a24:	e3510004 	cmp	r1, #4
40010a28:	82822003 	addhi	r2, r2, #3
40010a2c:	908220a1 	addls	r2, r2, r1, lsr #1
40010a30:	e35c0000 	cmp	ip, #0
40010a34:	e1a00233 	lsr	r0, r3, r2
40010a38:	42600000 	rsbmi	r0, r0, #0
40010a3c:	e12fff1e 	bx	lr
40010a40:	e3500000 	cmp	r0, #0
40010a44:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010a48:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010a4c:	ea000007 	b	40010a70 <__aeabi_idiv0>

40010a50 <__aeabi_idivmod>:
40010a50:	e3510000 	cmp	r1, #0
40010a54:	0afffff9 	beq	40010a40 <.divsi3_skip_div0_test+0x110>
40010a58:	e92d4003 	push	{r0, r1, lr}
40010a5c:	ebffffb3 	bl	40010930 <.divsi3_skip_div0_test>
40010a60:	e8bd4006 	pop	{r1, r2, lr}
40010a64:	e0030092 	mul	r3, r2, r0
40010a68:	e0411003 	sub	r1, r1, r3
40010a6c:	e12fff1e 	bx	lr

40010a70 <__aeabi_idiv0>:
40010a70:	e12fff1e 	bx	lr

40010a74 <DelayArray>:
40010a74:	010402bc 01040104 010402bc 01040104     ................
40010a84:	01040104 01040104 01040104 01040104     ................
40010a94:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010aa4:	02bc0104 010402bc 010402bc 010401f4     ................
40010ab4:	01040104 01040104 01040104 01040104     ................
40010ac4:	01040104 01040104 00000000 00000000     ................
	...
40010af4:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010b04:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010b14:	75657551 73252065 61747320 25206574     Queue %s state %
40010b24:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010b34:	68632065 206b6365 75657571 20444965     e check queueID 
40010b44:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010b54:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010b64:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010b74:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010b84:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010b94:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010ba4:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010bb4:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010bc4:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010bd4:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010be4:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010bf4:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010c04:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010c14:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010c24:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010c34:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010c44:	00000a0d                                ....

40010c48 <CyFxUSBDeviceDscr>:
40010c48:	02000112 400102ef 30611bbd 02010000     .......@..a0....
40010c58:	00000100                                ....

40010c5c <CyFxUSBDeviceDscrSS>:
40010c5c:	03000112 090102ef 30611bbd 02010000     ..........a0....
40010c6c:	00000100                                ....

40010c70 <CyFxUSBDeviceQualDscr>:
40010c70:	0200060a 400102ef 00000001              .......@....

40010c7c <CyFxUSBFSConfigDscr>:
40010c7c:	00090209 80000100 00000032              ........2...

40010c88 <CyFxUSBHSConfigDscr>:
40010c88:	00dd0209 80000102 000b08fa 00030e02     ................
40010c98:	00040900 010e0100 240d0000 50010001     ...........$...P
40010ca8:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010cb8:	0a03e800 059e0300 05240c00 02580102     ..........$...X.
40010cc8:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010cd8:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40010ce8:	03240900 00010104 05070003 04000382     ..$.............
40010cf8:	03250501 04090040 0e010001 0e000002     ..%.@...........
40010d08:	57010124 04008300 01010102 04241b00     $..W..........$.
40010d18:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
40010d28:	0110719b 00000608 0105241e 1c03c002     .q.......$......
40010d38:	d4e00002 d4e0000e 0fd2000e 05161500     ................
40010d48:	16150100 240a0005 c0010003 00021c03     .......$........
40010d58:	000d2406 05070000 02000283 00000001     .$..............

40010d68 <CyFxUSBBOSDscr>:
40010d68:	00160f05 02100702 00000000 0003100a     ................
40010d78:	0003000e 00000000                       ........

40010d80 <CyFxUSBSSConfigDscr>:
40010d80:	00e90209 80000102 000b0864 00030e02     ........d.......
40010d90:	00040900 010e0100 240d0000 50010001     ...........$...P
40010da0:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010db0:	0a038e00 059e0300 05240c00 02580102     ..........$...X.
40010dc0:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010dd0:	8e8d9649 76961f36 02010b50 07d7ff03     I...6..vP.......
40010de0:	03240900 00010104 05070003 04000382     ..$.............
40010df0:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40010e00:	00020e01 01240e00 83005701 01020400     ......$..W......
40010e10:	1b000101 01010424 32595559 00100000     ....$...YUY2....
40010e20:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40010e30:	80020105 00043807 00317040 003b5380     .....8..@p1..S;.
40010e40:	15001fa4 01000516 00051615 0003240a     .............$..
40010e50:	38078001 24060004 0000000d 02830507     ...8...$........
40010e60:	06010400 00000f30 00000000              ....0.......

40010e6c <CyFxUSBStringLangIDDscr>:
40010e6c:	04090304                                ....

40010e70 <CyFxUSBManufactureDscr>:
40010e70:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40010e80:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40010e90:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40010ea0:	006f0069 0073006e                       i.o.n.s.

40010ea8 <CyFxUSBProductDscr>:
40010ea8:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40010eb8:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40010ec8:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40010ed8:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40010ee8:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40010ef8:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40010f08:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40010f18:	64612065 73657264 73692073 746f6e20     e address is not
40010f28:	6c617620 0a216469 00000000 4f525245      valid!.....ERRO
40010f38:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
40010f48:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
40010f58:	74655320 6c615620 45206575 726f7272      Set Value Error
40010f68:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40010f78:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
40010f88:	0a0d6575 00000000 20656854 6b636974     ue......The tick
40010f98:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40010fa8:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40010fb8:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40010fc8:	20656854 20746547 746e6f63 206c6f72     The Get control 
40010fd8:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40010fe8:	20656854 20746553 746e6f63 206c6f72     The Set control 
40010ff8:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40011008:	00000a0d                                ....

4001100c <ExTime>:
4001100c:	004e009c 00140027 0005000a 00010002     ..N.'...........

4001101c <CyFxGpifConfig>:
4001101c:	0000000f 40030670 40030790 00000005     ....p..@...@....
4001102c:	40030664 0000004c 400307a0              d..@L......@

40011038 <CyFxGpifConfig_usb2>:
40011038:	00000093 400308e0 40030a90 00000008     .......@...@....
40011048:	400308d0 0000004c 40030b24 20433249     ...@L...$..@I2C 
40011058:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
40011068:	20656854 6d6d6f63 20646e61 75657571     The command queu
40011078:	73692065 61657220 25207964 64252064     e is ready %d %d
40011088:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
40011098:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
400110a8:	65666675 43203a72 2065646f 6425203d     uffer: Code = %d
400110b8:	6973202c 3d20657a 2c782520 616d6420     , size = %x, dma
400110c8:	656e6f44 0d782520 0000000a 45534552     Done %x.....RESE
400110d8:	6e652054 6e756f63 65726574 2e2e2e64     T encountered...
400110e8:	78257830 25783020 000a0d78 50535553     0x%x 0x%x...SUSP
400110f8:	20444e45 6f636e65 65746e75 2e646572     END encountered.
40011108:	78302e2e 30207825 0d782578 0000000a     ..0x%x 0x%x.....
40011118:	20425355 63736964 656e6e6f 64657463     USB disconnected
40011128:	302e2e2e 20782578 78257830 00000a0d     ...0x%x 0x%x....
40011138:	20746553 465f5943 56555f58 49565f43     Set CY_FX_UVC_VI
40011148:	5f4f4544 544e4f43 5f4c4f52 55514552     DEO_CONTROL_REQU
40011158:	5f545345 4e455645 61462054 64656c69     EST_EVENT Failed
40011168:	0a782520 00000000 20746553 465f5943      %x.....Set CY_F
40011178:	56555f58 49565f43 5f4f4544 45525453     X_UVC_VIDEO_STRE
40011188:	525f4d41 45555145 455f5453 544e4556     AM_REQUEST_EVENT
40011198:	69614620 2064656c 000a7825 65746c41      Failed %x..Alte
400111a8:	74616e72 65732065 6e697474 2e302067     rnate setting 0.
400111b8:	000a0d2e 61656c43 65662072 72757461     ....Clear featur
400111c8:	65722065 73657571 65642074 74636574     e request detect
400111d8:	2e2e6465 00000a0d 63200a0d 696d6d6f     ed........ commi
400111e8:	666f6574 61747320 3d206574 00642520     teof state = %d.
400111f8:	6e616843 206c656e 20746553 70617257     Channel Set Wrap
40011208:	66207055 656c6961 45202c64 726f7272     Up failed, Error
40011218:	646f6320 203d2065 0a0d6425 00000000      code = %d......
40011228:	6f727245 61682072 656c646e 2e2e2e72     Error handler...
40011238:	00000a0d 6d6d6f43 45207469 6620464f     ....Commit EOF f
40011248:	656c6961 000a2164 20656854 20433249     ailed!..The I2C 
40011258:	6d6d6f63 20646e61 30207369 20782578     command is 0x%x 
40011268:	78257830 25783020 78302078 30207825     0x%x 0x%x 0x%x 0
40011278:	20782578 78257830 25783020 78302078     x%x 0x%x 0x%x 0x
40011288:	30207825 20782578 78257830 25783020     %x 0x%x 0x%x 0x%
40011298:	000a0d78 20656854 20433249 72727563     x...The I2C curr
400112a8:	20746e65 61746164 20736920 20746f6e     ent data is not 
400112b8:	69617661 6c62616c 74202e65 61207972     available. try a
400112c8:	6e696167 6425202e 0d642520 0000000a     gain. %d %d.....
400112d8:	4d707845 43474126 6e657320 6f742074     ExpM&AGC sent to
400112e8:	736f6820 25202e74 64252064 6425203b      host. %d %d; %d
400112f8:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
40011308:	746f6720 206e6574 6d6f7266 736f6820      gotten from hos
40011318:	25202e74 64252064 6425203b 0d642520     t. %d %d; %d %d.
40011328:	0000000a 20657845 6576656c 25202e6c     ....Exe level. %
40011338:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
40011348:	20434c42 2e746573 20642520 203b6425     BLC set. %d %d; 
40011358:	25206425 000a0d64 20656854 20746567     %d %d...The get 
40011368:	61746164 6f726620 6f68206d 66207473     data from host f
40011378:	206c6961 6f727265 6f632072 25206564     ail error code %
40011388:	0a0d2e64 00000000 20656854 75716552     d.......The Requ
40011398:	20747365 78257830 72617020 74656d61     est 0x%x paramet
400113a8:	67207265 66207465 206d6f72 74736f68     er get from host
400113b8:	25783020 78302078 2f207825 6e657320      0x%x 0x%x / sen
400113c8:	6f742064 736f6820 78302074 30207825     d to host 0x%x 0
400113d8:	0d782578 0000000a 6d6f6f5a 20704f20     x%x.....Zoom Op 
400113e8:	65636572 73657669 54432820 78302029     receives (CT) 0x
400113f8:	30207825 20782578 78257830 00000a0d     %x 0x%x 0x%x....
40011408:	61666564 20746c75 656c6573 726f7463     default selector
40011418:	54432820 78302029 30207825 0d782578      (CT) 0x%x 0x%x.
40011428:	0000000a 61666564 20746c75 75716572     ....default requ
40011438:	20747365 29544328 25783020 78302078     est (CT) 0x%x 0x
40011448:	0a0d7825 00000000 20656854 75716552     %x......The Requ
40011458:	20747365 78257830 72617020 74656d61     est 0x%x paramet
40011468:	67207265 66207465 206d6f72 74736f68     er get from host
40011478:	54432820 78302029 30207825 20782578      (CT) 0x%x 0x%x 
40011488:	78257830 73202f20 20646e65 68206f74     0x%x / send to h
40011498:	2074736f 78257830 25783020 78302078     ost 0x%x 0x%x 0x
400114a8:	202c7825 0a0d6425 00000000 20425355     %x, %d......USB 
400114b8:	65657073 203d2064 65206425 666e6576     speed = %d evenf
400114c8:	2067616c 7830203d 62207825 7165526d     lag = 0x%x bmReq
400114d8:	65707954 30203d20 0d782578 6552620a     Type = 0x%x..bRe
400114e8:	73657571 203d2074 78257830 61567720     quest = 0x%x wVa
400114f8:	2065756c 7830203d 77207825 65646e49     lue = 0x%x wInde
40011508:	203d2078 78257830 654c7720 6874676e     x = 0x%x wLength
40011518:	30203d20 20782578 6c667369 30206761      = 0x%x isflag 0
40011528:	0d782578 0000000a 20656854 61666564     x%x.....The defa
40011538:	20746c75 75746573 65722070 73657571     ult setup reques
40011548:	61762074 2065756c 78257830 25783020     t value 0x%x 0x%
40011558:	000a0d78 20656854 74736f68 6d6f6320     x...The host com
40011568:	646e616d 20736920 20746f6e 72726f63     mand is not corr
40011578:	20746365 20726f66 30383031 61632070     ect for 1080p ca
40011588:	6172656d 25783020 78302078 25207825     mera 0x%x 0x%x %
40011598:	000a0d64 20746553 465f5943 56555f58     d...Set CY_FX_UV
400115a8:	54535f43 4d414552 4556455f 6620544e     C_STREAM_EVENT f
400115b8:	656c6961 78252064 0000000a 20746547     ailed %x....Get 
400115c8:	20435655 6c697473 7274206c 65676769     UVC still trigge
400115d8:	6f632072 6f72746e 6425206c 0d642520     r control %d %d.
400115e8:	0000000a 20435655 6c697473 7274206c     ....UVC still tr
400115f8:	65676769 6f632072 6f72746e 6166206c     igger control fa
40011608:	25206c69 64252064 00000a0d 6c696146     il %d %d....Fail
40011618:	74206465 6573206f 6920646e 7265746e     ed to send inter
40011628:	74707572 61747320 2c737574 72724520     rupt status, Err
40011638:	6320726f 2065646f 6425203d 00000a0d     or code = %d....
40011648:	20656854 20746573 20666564 61746164     The set def data
40011658:	25783020 30202c78 2e782578 00000a0d      0x%x, 0x%x.....
40011668:	20656854 20746573 20666564 61746164     The set def data
40011678:	25783020 30202c78 2c782578 25783020      0x%x, 0x%x, 0x%
40011688:	30202c78 2c782578 25783020 30202c78     x, 0x%x, 0x%x, 0
40011698:	2e782578 00000a0d 54524155 696e6920     x%x.....UART ini
400116a8:	6c616974 74617a69 206e6f69 6c696166     tialization fail
400116b8:	0a216465 00000000 20433249 74696e69     ed!.....I2C init
400116c8:	696c6169 6974617a 66206e6f 656c6961     ialization faile
400116d8:	000a2164 20433249 666e6f63 72756769     d!..I2C configur
400116e8:	6f697461 6166206e 64656c69 00000a21     ation failed!...
400116f8:	20435655 61657243 45206574 746e6576     UVC Create Event
40011708:	69616620 2c64656c 72724520 4320726f      failed, Error C
40011718:	2065646f 6425203d 0000000a 4f495047     ode = %d....GPIO
40011728:	696e4920 61662074 64656c69 7245202c      Init failed, Er
40011738:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011748:	4f495047 65764f20 64697272 61662065     GPIO Override fa
40011758:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011768:	25203d20 00000a64 4f495047 29303228      = %d...GPIO(20)
40011778:	65764f20 64697272 61662065 64656c69      Override failed
40011788:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011798:	00000a64 4f495047 29343228 65764f20     d...GPIO(24) Ove
400117a8:	64697272 61662065 64656c69 7245202c     rride failed, Er
400117b8:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400117c8:	4f495047 74655320 65722820 20746573     GPIO Set (reset 
400117d8:	20293232 666e6f43 45206769 726f7272     22) Config Error
400117e8:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400117f8:	00000a64 4f495047 74655320 6f702820     d...GPIO Set (po
40011808:	20726577 20293032 666e6f43 45206769     wer 20) Config E
40011818:	726f7272 7245202c 20726f72 65646f43     rror, Error Code
40011828:	25203d20 00000a64 4f495047 74655320      = %d...GPIO Set
40011838:	6e732820 73207061 20746f68 20293432      (snap shot 24) 
40011848:	666e6f43 45206769 726f7272 7245202c     Config Error, Er
40011858:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011868:	20424950 636e7546 6e6f6974 69614620     PIB Function Fai
40011878:	2064656c 53206f74 74726174 7245202c     led to Start, Er
40011888:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011898:	20425355 636e7546 6e6f6974 69614620     USB Function Fai
400118a8:	2064656c 53206f74 74726174 7245202c     led to Start, Er
400118b8:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400118c8:	20425355 20746553 70646e45 746e696f     USB Set Endpoint
400118d8:	6e6f6320 20676966 6c696166 202c6465      config failed, 
400118e8:	6f727245 6f432072 3d206564 0a642520     Error Code = %d.
400118f8:	00000000 20414d44 65746e49 70757272     ....DMA Interrup
40011908:	74532074 73757461 61684320 6c656e6e     t Status Channel
40011918:	65724320 6f697461 6146206e 64656c69      Creation Failed
40011928:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011938:	00000a64 6c696146 74206465 6c61206f     d...Failed to al
40011948:	61636f6c 6d206574 726f6d65 6f662079     locate memory fo
40011958:	6e692072 72726574 20747075 74617473     r interrupt stat
40011968:	62207375 65666675 000a0d72 20414d44     us buffer...DMA 
40011978:	6e616843 206c656e 61657243 6e6f6974     Channel Creation
40011988:	69614620 2c64656c 72724520 4320726f      Failed, Error C
40011998:	2065646f 6425203d 0000000a 20425355     ode = %d....USB 
400119a8:	6e6e6f43 20746365 6c696166 202c6465     Connect failed, 
400119b8:	6f727245 6f432072 3d206564 0a642520     Error Code = %d.
400119c8:	00000000 20414d44 6e616843 206c656e     ....DMA Channel 
400119d8:	65736552 61462074 64656c69 7245202c     Reset Failed, Er
400119e8:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400119f8:	20414d44 6e616843 206c656e 20746553     DMA Channel Set 
40011a08:	6e617254 72656673 69614620 2c64656c     Transfer Failed,
40011a18:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011a28:	0000000a 20414d44 6e616843 206c656e     ....DMA Channel 
40011a38:	20746553 6e617254 72656673 69614620     Set Transfer Fai
40011a48:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011a58:	6425203d 00000a0d 73200a0d 72657075     = %d...... super
40011a68:	69706720 00000066 68200a0d 20686769      gpif..... high 
40011a78:	66697067 00000000 64616f4c 20676e69     gpif....Loading 
40011a88:	46495047 6e6f4320 75676966 69746172     GPIF Configurati
40011a98:	66206e6f 656c6961 45202c64 726f7272     on failed, Error
40011aa8:	646f4320 203d2065 0a0d6425 00000000      Code = %d......
40011ab8:	72617453 676e6974 49504720 74732046     Starting GPIF st
40011ac8:	20657461 6863616d 20656e69 6c696166     ate machine fail
40011ad8:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011ae8:	0d642520 0000000a 553a3033 41204356      %d.....30:UVC A
40011af8:	54207070 61657268 00000064 553a3133     pp Thread...31:U
40011b08:	41204356 45207070 54203050 61657268     VC App EP0 Threa
40011b18:	00000064 493a3233 41204332 43207070     d...32:I2C App C
40011b28:	204c5254 65726854 00006461              TRL Thread..

40011b34 <glFx3PartProperties>:
40011b34:	00000000 0000009f 00000010 0000009b     ................
40011b44:	00000020 0000008f 00000030 0000008b      .......0.......
40011b54:	00000004 000000ef 00000104 000000ef     ................
40011b64:	00000184 000000af 00000154 000000e9     ........T.......
40011b74:	000001d4 000000a9 10000004 000000ee     ................
40011b84:	10000104 000000ee 10000184 000000ae     ................
40011b94:	10000154 000000e8 100001d4 000000a8     T...............
40011ba4:	00000002 00000077 00000102 00000077     ....w.......w...
40011bb4:	000001c2 00000035 000001d2 00000031     ....5.......1...
40011bc4:	10000002 00000076 10000102 00000076     ....v.......v...
40011bd4:	100001c2 00000034 00000258 00000199     ....4...X.......
40011be4:	00000248 0000019d 00000458 00000299     H.......X.......
40011bf4:	00000448 0000029d 00000848 0000049d     H.......H.......
40011c04:	10000448 0000029c                       H.......

40011c0c <glPmmcCsdValue>:
40011c0c:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40011c1c <glPmmcExtCsdValue>:
40011c1c:	40040000 03020200 00000404 32321414     ...@..........22
40011c2c:	00406464 00000000                       dd@.....

40011c34 <glConstGpifDefaults>:
40011c34:	00000220 00000000 00000000 00000000      ...............
40011c44:	000f0000 00000000 00000000 00000082     ................
40011c54:	00000782 00000000 00000000 00000000     ................
	...
40011ca8:	00000006 00000000 0000ffff 0000010a     ................
40011cb8:	00000000 0000ffff 00000000 0000ffff     ................
40011cc8:	0000010a 00000000 0000ffff 00000000     ................
	...
40011d30:	00010400 00010400 00010400 00010400     ................
40011d40:	10000000 00000000 00000000 00000000     ................
	...
40011d60:	00000001                                ....

40011d64 <glGpifConstMaxState>:
40011d64:	1f3f7fff                                ..?.

40011d68 <CyU3PSSEpTypeMap>:
40011d68:	01020003                                ....

40011d6c <glUsbMaxPacketSize>:
40011d6c:	000003ff 00000040 00000040 00000400     ....@...@.......
40011d7c:	00000200 00000400 00000400 00000400     ................
40011d8c:	00000400                                ....

40011d90 <glUsb3CompliancePatterns>:
40011d90:	00000600 0000044a 00000478 000005bc     ....J...x.......
40011da0:	00000c00 000005fc 000001fc 00001400     ................
40011db0:	00001000                                ....

40011db4 <CyU3PFirmwareEntry>:
40011db4:	e59f1038 	ldr	r1, [pc, #56]	; 40011df4 <CyU3PFirmwareEntry+0x40>
40011db8:	e3e00000 	mvn	r0, #0
40011dbc:	e5810000 	str	r0, [r1]
40011dc0:	e59f1030 	ldr	r1, [pc, #48]	; 40011df8 <CyU3PFirmwareEntry+0x44>
40011dc4:	e2411008 	sub	r1, r1, #8
40011dc8:	e3a02a01 	mov	r2, #4096	; 0x1000
40011dcc:	e3a000d3 	mov	r0, #211	; 0xd3
40011dd0:	e121f000 	msr	CPSR_c, r0
40011dd4:	e0811002 	add	r1, r1, r2
40011dd8:	e3c11007 	bic	r1, r1, #7
40011ddc:	e1a0d001 	mov	sp, r1
40011de0:	eb000271 	bl	400127ac <CyU3PSysSetupMMU>
40011de4:	eb000620 	bl	4001366c <CyU3PSysCheckBootState>
40011de8:	eb000003 	bl	40011dfc <CyU3PSetupStackPtrs>
40011dec:	eb0000d1 	bl	40012138 <__CyU3PEntryKeep>
40011df0:	eaffc5fe 	b	400035f0 <CyU3PToolChainInit>
40011df4:	fffff014 	.word	0xfffff014
40011df8:	40002000 	.word	0x40002000

40011dfc <CyU3PSetupStackPtrs>:
40011dfc:	e3a01201 	mov	r1, #268435456	; 0x10000000
40011e00:	e2411008 	sub	r1, r1, #8
40011e04:	e3a02b02 	mov	r2, #2048	; 0x800
40011e08:	e3a030df 	mov	r3, #223	; 0xdf
40011e0c:	e12ff003 	msr	CPSR_fsxc, r3
40011e10:	e0811002 	add	r1, r1, r2
40011e14:	e3c11007 	bic	r1, r1, #7
40011e18:	e1a0d001 	mov	sp, r1
40011e1c:	e3a0a000 	mov	sl, #0
40011e20:	e3a0b000 	mov	fp, #0
40011e24:	e3a02c01 	mov	r2, #256	; 0x100
40011e28:	e3a030d7 	mov	r3, #215	; 0xd7
40011e2c:	e12ff003 	msr	CPSR_fsxc, r3
40011e30:	e0811002 	add	r1, r1, r2
40011e34:	e3c11007 	bic	r1, r1, #7
40011e38:	e1a0d001 	mov	sp, r1
40011e3c:	e3a0a000 	mov	sl, #0
40011e40:	e3a0b000 	mov	fp, #0
40011e44:	e3a02c01 	mov	r2, #256	; 0x100
40011e48:	e3a030db 	mov	r3, #219	; 0xdb
40011e4c:	e12ff003 	msr	CPSR_fsxc, r3
40011e50:	e0811002 	add	r1, r1, r2
40011e54:	e3c11007 	bic	r1, r1, #7
40011e58:	e1a0d001 	mov	sp, r1
40011e5c:	e3a0a000 	mov	sl, #0
40011e60:	e3a0b000 	mov	fp, #0
40011e64:	e3a02c02 	mov	r2, #512	; 0x200
40011e68:	e3a000d1 	mov	r0, #209	; 0xd1
40011e6c:	e121f000 	msr	CPSR_c, r0
40011e70:	e0811002 	add	r1, r1, r2
40011e74:	e3c11007 	bic	r1, r1, #7
40011e78:	e1a0d001 	mov	sp, r1
40011e7c:	e3a0a000 	mov	sl, #0
40011e80:	e3a0b000 	mov	fp, #0
40011e84:	e3a02b01 	mov	r2, #1024	; 0x400
40011e88:	e3a000d2 	mov	r0, #210	; 0xd2
40011e8c:	e121f000 	msr	CPSR_c, r0
40011e90:	e0811002 	add	r1, r1, r2
40011e94:	e3c11007 	bic	r1, r1, #7
40011e98:	e1a0d001 	mov	sp, r1
40011e9c:	e3a02a01 	mov	r2, #4096	; 0x1000
40011ea0:	e3a000d3 	mov	r0, #211	; 0xd3
40011ea4:	e121f000 	msr	CPSR_c, r0
40011ea8:	e0811002 	add	r1, r1, r2
40011eac:	e3c11007 	bic	r1, r1, #7
40011eb0:	e1a0d001 	mov	sp, r1
40011eb4:	e12fff1e 	bx	lr

40011eb8 <CyU3PSysCleanDCache>:
40011eb8:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40011ebc:	1afffffd 	bne	40011eb8 <CyU3PSysCleanDCache>
40011ec0:	e12fff1e 	bx	lr

40011ec4 <CyU3PSysClearDCache>:
40011ec4:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40011ec8:	1afffffd 	bne	40011ec4 <CyU3PSysClearDCache>
40011ecc:	e12fff1e 	bx	lr

40011ed0 <CyU3PSysFlushIRegion>:
40011ed0:	e3510000 	cmp	r1, #0
40011ed4:	0a00000a 	beq	40011f04 <CyU3PSysFlushIRegion+0x34>
40011ed8:	e0801001 	add	r1, r0, r1
40011edc:	e3c0001f 	bic	r0, r0, #31
40011ee0:	e3a0201f 	mov	r2, #31
40011ee4:	e1110002 	tst	r1, r2
40011ee8:	e0411000 	sub	r1, r1, r0
40011eec:	e1a012a1 	lsr	r1, r1, #5
40011ef0:	12811001 	addne	r1, r1, #1
40011ef4:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40011ef8:	e2800020 	add	r0, r0, #32
40011efc:	e2511001 	subs	r1, r1, #1
40011f00:	1afffffb 	bne	40011ef4 <CyU3PSysFlushIRegion+0x24>
40011f04:	e12fff1e 	bx	lr

40011f08 <CyU3PSysClearDRegion>:
40011f08:	e3510000 	cmp	r1, #0
40011f0c:	0a00000a 	beq	40011f3c <CyU3PSysClearDRegion+0x34>
40011f10:	e0801001 	add	r1, r0, r1
40011f14:	e3c0001f 	bic	r0, r0, #31
40011f18:	e3a0201f 	mov	r2, #31
40011f1c:	e1110002 	tst	r1, r2
40011f20:	e0411000 	sub	r1, r1, r0
40011f24:	e1a012a1 	lsr	r1, r1, #5
40011f28:	12811001 	addne	r1, r1, #1
40011f2c:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
40011f30:	e2800020 	add	r0, r0, #32
40011f34:	e2511001 	subs	r1, r1, #1
40011f38:	1afffffb 	bne	40011f2c <CyU3PSysClearDRegion+0x24>
40011f3c:	e12fff1e 	bx	lr

40011f40 <CyU3PSysCleanDRegion>:
40011f40:	e3510000 	cmp	r1, #0
40011f44:	0a00000a 	beq	40011f74 <CyU3PSysCleanDRegion+0x34>
40011f48:	e0801001 	add	r1, r0, r1
40011f4c:	e3c0001f 	bic	r0, r0, #31
40011f50:	e3a0201f 	mov	r2, #31
40011f54:	e1110002 	tst	r1, r2
40011f58:	e0411000 	sub	r1, r1, r0
40011f5c:	e1a012a1 	lsr	r1, r1, #5
40011f60:	12811001 	addne	r1, r1, #1
40011f64:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
40011f68:	e2800020 	add	r0, r0, #32
40011f6c:	e2511001 	subs	r1, r1, #1
40011f70:	1afffffb 	bne	40011f64 <CyU3PSysCleanDRegion+0x24>
40011f74:	e12fff1e 	bx	lr

40011f78 <CyU3PSysFlushDRegion>:
40011f78:	e3510000 	cmp	r1, #0
40011f7c:	0a00000a 	beq	40011fac <CyU3PSysFlushDRegion+0x34>
40011f80:	e0801001 	add	r1, r0, r1
40011f84:	e3c0001f 	bic	r0, r0, #31
40011f88:	e3a0201f 	mov	r2, #31
40011f8c:	e1110002 	tst	r1, r2
40011f90:	e0411000 	sub	r1, r1, r0
40011f94:	e1a012a1 	lsr	r1, r1, #5
40011f98:	12811001 	addne	r1, r1, #1
40011f9c:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40011fa0:	e2800020 	add	r0, r0, #32
40011fa4:	e2511001 	subs	r1, r1, #1
40011fa8:	1afffffb 	bne	40011f9c <CyU3PSysFlushDRegion+0x24>
40011fac:	e12fff1e 	bx	lr

40011fb0 <CyU3PSysCacheIRegion>:
40011fb0:	e3a03000 	mov	r3, #0
40011fb4:	e3510000 	cmp	r1, #0
40011fb8:	0a000023 	beq	4001204c <CyU3PSysCacheIRegion+0x9c>
40011fbc:	e0801001 	add	r1, r0, r1
40011fc0:	e3c0001f 	bic	r0, r0, #31
40011fc4:	e3a0201f 	mov	r2, #31
40011fc8:	e1110002 	tst	r1, r2
40011fcc:	e0411000 	sub	r1, r1, r0
40011fd0:	e1a012a1 	lsr	r1, r1, #5
40011fd4:	12811001 	addne	r1, r1, #1
40011fd8:	e351003f 	cmp	r1, #63	; 0x3f
40011fdc:	8a00001a 	bhi	4001204c <CyU3PSysCacheIRegion+0x9c>
40011fe0:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
40011fe4:	e20c200f 	and	r2, ip, #15
40011fe8:	e3a03001 	mov	r3, #1
40011fec:	e11c0003 	tst	ip, r3
40011ff0:	11a03083 	lslne	r3, r3, #1
40011ff4:	111c0003 	tstne	ip, r3
40011ff8:	11a03083 	lslne	r3, r3, #1
40011ffc:	111c0003 	tstne	ip, r3
40012000:	11a03083 	lslne	r3, r3, #1
40012004:	1a000010 	bne	4001204c <CyU3PSysCacheIRegion+0x9c>
40012008:	e3510000 	cmp	r1, #0
4001200c:	0a00000e 	beq	4001204c <CyU3PSysCacheIRegion+0x9c>
40012010:	e1e03003 	mvn	r3, r3
40012014:	e203300f 	and	r3, r3, #15
40012018:	e3ccc00f 	bic	ip, ip, #15
4001201c:	e08cc003 	add	ip, ip, r3
40012020:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
40012024:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
40012028:	e2800020 	add	r0, r0, #32
4001202c:	e2511001 	subs	r1, r1, #1
40012030:	1afffffb 	bne	40012024 <CyU3PSysCacheIRegion+0x74>
40012034:	e1e0300c 	mvn	r3, ip
40012038:	e203300f 	and	r3, r3, #15
4001203c:	e1822003 	orr	r2, r2, r3
40012040:	e3ccc00f 	bic	ip, ip, #15
40012044:	e00cc002 	and	ip, ip, r2
40012048:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
4001204c:	e1a00003 	mov	r0, r3
40012050:	e12fff1e 	bx	lr

40012054 <CyU3PSysCacheDRegion>:
40012054:	e3a03000 	mov	r3, #0
40012058:	e3510000 	cmp	r1, #0
4001205c:	0a000022 	beq	400120ec <CyU3PSysCacheDRegion+0x98>
40012060:	e0801001 	add	r1, r0, r1
40012064:	e3c0001f 	bic	r0, r0, #31
40012068:	e3a0201f 	mov	r2, #31
4001206c:	e1110002 	tst	r1, r2
40012070:	e0411000 	sub	r1, r1, r0
40012074:	e1a012a1 	lsr	r1, r1, #5
40012078:	12811001 	addne	r1, r1, #1
4001207c:	e351003f 	cmp	r1, #63	; 0x3f
40012080:	8a000019 	bhi	400120ec <CyU3PSysCacheDRegion+0x98>
40012084:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
40012088:	e20c200f 	and	r2, ip, #15
4001208c:	e3a03001 	mov	r3, #1
40012090:	e11c0003 	tst	ip, r3
40012094:	11a03083 	lslne	r3, r3, #1
40012098:	111c0003 	tstne	ip, r3
4001209c:	11a03083 	lslne	r3, r3, #1
400120a0:	111c0003 	tstne	ip, r3
400120a4:	11a03083 	lslne	r3, r3, #1
400120a8:	1a00000f 	bne	400120ec <CyU3PSysCacheDRegion+0x98>
400120ac:	e3510000 	cmp	r1, #0
400120b0:	0a00000d 	beq	400120ec <CyU3PSysCacheDRegion+0x98>
400120b4:	e1e03003 	mvn	r3, r3
400120b8:	e203300f 	and	r3, r3, #15
400120bc:	e3ccc00f 	bic	ip, ip, #15
400120c0:	e08cc003 	add	ip, ip, r3
400120c4:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
400120c8:	e4903020 	ldr	r3, [r0], #32
400120cc:	e2511001 	subs	r1, r1, #1
400120d0:	1afffffc 	bne	400120c8 <CyU3PSysCacheDRegion+0x74>
400120d4:	e1e0300c 	mvn	r3, ip
400120d8:	e203300f 	and	r3, r3, #15
400120dc:	e1822003 	orr	r2, r2, r3
400120e0:	e3ccc00f 	bic	ip, ip, #15
400120e4:	e00cc002 	and	ip, ip, r2
400120e8:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
400120ec:	e1a00003 	mov	r0, r3
400120f0:	e12fff1e 	bx	lr

400120f4 <CyU3PSysUnlockICache>:
400120f4:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
400120f8:	e3c0000f 	bic	r0, r0, #15
400120fc:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

40012100 <CyU3PSysUnlockDCache>:
40012100:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
40012104:	e3c0000f 	bic	r0, r0, #15
40012108:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

4001210c <__cyu3p_exception_vectors>:
4001210c:	e59ff028 	ldr	pc, [pc, #40]	; 4001213c <__CyU3PEntryKeep+0x4>
40012110:	e59ff028 	ldr	pc, [pc, #40]	; 40012140 <__CyU3PEntryKeep+0x8>
40012114:	e59ff028 	ldr	pc, [pc, #40]	; 40012144 <__CyU3PEntryKeep+0xc>
40012118:	e59ff028 	ldr	pc, [pc, #40]	; 40012148 <__CyU3PEntryKeep+0x10>
4001211c:	e59ff028 	ldr	pc, [pc, #40]	; 4001214c <__CyU3PEntryKeep+0x14>
40012120:	e59ff028 	ldr	pc, [pc, #40]	; 40012150 <__CyU3PEntryKeep+0x18>
40012124:	e51ff120 	ldr	pc, [pc, #-288]	; 4001200c <CyU3PSysCacheIRegion+0x5c>
40012128:	e59ff024 	ldr	pc, [pc, #36]	; 40012154 <__CyU3PEntryKeep+0x1c>

4001212c <__CyU3PSWIHandler>:
4001212c:	eafffffe 	b	4001212c <__CyU3PSWIHandler>

40012130 <__CyU3PReservedHandler>:
40012130:	eafffffe 	b	40012130 <__CyU3PReservedHandler>

40012134 <__CyU3PFiqHandler>:
40012134:	eafffffe 	b	40012134 <__CyU3PFiqHandler>

40012138 <__CyU3PEntryKeep>:
40012138:	e12fff1e 	bx	lr
4001213c:	40011db4 	.word	0x40011db4
40012140:	40003618 	.word	0x40003618
40012144:	4001212c 	.word	0x4001212c
40012148:	4000361c 	.word	0x4000361c
4001214c:	40003620 	.word	0x40003620
40012150:	40012130 	.word	0x40012130
40012154:	40012134 	.word	0x40012134

Disassembly of section i.CyU3PDevCheckDevStateStruct:

40012158 <CyU3PDevCheckDevStateStruct>:
40012158:	e92d4038 	push	{r3, r4, r5, lr}
4001215c:	e59f4118 	ldr	r4, [pc, #280]	; 4001227c <_etext+0x124>
40012160:	e3a00000 	mov	r0, #0
40012164:	e58d0000 	str	r0, [sp]
40012168:	e5940000 	ldr	r0, [r4]
4001216c:	e59f110c 	ldr	r1, [pc, #268]	; 40012280 <_etext+0x128>
40012170:	e1500001 	cmp	r0, r1
40012174:	0a000000 	beq	4001217c <CyU3PDevCheckDevStateStruct+0x24>
40012178:	ea00003b 	b	4001226c <CyU3PDevCheckDevStateStruct+0x114>
4001217c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012180:	e59f10fc 	ldr	r1, [pc, #252]	; 40012284 <_etext+0x12c>
40012184:	e1500001 	cmp	r0, r1
40012188:	1a000005 	bne	400121a4 <CyU3PDevCheckDevStateStruct+0x4c>
4001218c:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012190:	e59f10f0 	ldr	r1, [pc, #240]	; 40012288 <_etext+0x130>
40012194:	e1500001 	cmp	r0, r1
40012198:	3a000001 	bcc	400121a4 <CyU3PDevCheckDevStateStruct+0x4c>
4001219c:	e594500c 	ldr	r5, [r4, #12]
400121a0:	ea000001 	b	400121ac <CyU3PDevCheckDevStateStruct+0x54>
400121a4:	e594000c 	ldr	r0, [r4, #12]
400121a8:	e20050ff 	and	r5, r0, #255	; 0xff
400121ac:	e594000c 	ldr	r0, [r4, #12]
400121b0:	e3500000 	cmp	r0, #0
400121b4:	0a000003 	beq	400121c8 <CyU3PDevCheckDevStateStruct+0x70>
400121b8:	e594000c 	ldr	r0, [r4, #12]
400121bc:	e59f10c8 	ldr	r1, [pc, #200]	; 4001228c <_etext+0x134>
400121c0:	e1500001 	cmp	r0, r1
400121c4:	9a000000 	bls	400121cc <CyU3PDevCheckDevStateStruct+0x74>
400121c8:	ea000027 	b	4001226c <CyU3PDevCheckDevStateStruct+0x114>
400121cc:	e1a0200d 	mov	r2, sp
400121d0:	e1a01005 	mov	r1, r5
400121d4:	e59f00a0 	ldr	r0, [pc, #160]	; 4001227c <_etext+0x124>
400121d8:	eb00049f 	bl	4001345c <CyU3PComputeChecksum>
400121dc:	e594000c 	ldr	r0, [r4, #12]
400121e0:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
400121e4:	e2800a02 	add	r0, r0, #8192	; 0x2000
400121e8:	e5900000 	ldr	r0, [r0]
400121ec:	e59d1000 	ldr	r1, [sp]
400121f0:	e1500001 	cmp	r0, r1
400121f4:	0a000000 	beq	400121fc <CyU3PDevCheckDevStateStruct+0xa4>
400121f8:	ea00001b 	b	4001226c <CyU3PDevCheckDevStateStruct+0x114>
400121fc:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012200:	e59f107c 	ldr	r1, [pc, #124]	; 40012284 <_etext+0x12c>
40012204:	e1500001 	cmp	r0, r1
40012208:	0a000001 	beq	40012214 <CyU3PDevCheckDevStateStruct+0xbc>
4001220c:	e59f007c 	ldr	r0, [pc, #124]	; 40012290 <_etext+0x138>
40012210:	e58400dc 	str	r0, [r4, #220]	; 0xdc
40012214:	e3a00001 	mov	r0, #1
40012218:	e59f1074 	ldr	r1, [pc, #116]	; 40012294 <_etext+0x13c>
4001221c:	e5810000 	str	r0, [r1]
40012220:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012224:	e59f106c 	ldr	r1, [pc, #108]	; 40012298 <_etext+0x140>
40012228:	e1500001 	cmp	r0, r1
4001222c:	3a00000d 	bcc	40012268 <CyU3PDevCheckDevStateStruct+0x110>
40012230:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
40012234:	e3500000 	cmp	r0, #0
40012238:	0a00000a 	beq	40012268 <CyU3PDevCheckDevStateStruct+0x110>
4001223c:	e59f0058 	ldr	r0, [pc, #88]	; 4001229c <_etext+0x144>
40012240:	e5900018 	ldr	r0, [r0, #24]
40012244:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012248:	0a000006 	beq	40012268 <CyU3PDevCheckDevStateStruct+0x110>
4001224c:	e59f004c 	ldr	r0, [pc, #76]	; 400122a0 <_etext+0x148>
40012250:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40012254:	e3100001 	tst	r0, #1
40012258:	0a000002 	beq	40012268 <CyU3PDevCheckDevStateStruct+0x110>
4001225c:	e3a00001 	mov	r0, #1
40012260:	e59f103c 	ldr	r1, [pc, #60]	; 400122a4 <_etext+0x14c>
40012264:	e5810000 	str	r0, [r1]
40012268:	e8bd8038 	pop	{r3, r4, r5, pc}
4001226c:	e1a00000 	nop			; (mov r0, r0)
40012270:	e3e00000 	mvn	r0, #0
40012274:	e5840000 	str	r0, [r4]
40012278:	eafffffa 	b	40012268 <CyU3PDevCheckDevStateStruct+0x110>
4001227c:	40002000 	.word	0x40002000
40012280:	42575943 	.word	0x42575943
40012284:	42335846 	.word	0x42335846
40012288:	00010300 	.word	0x00010300
4001228c:	00000ff8 	.word	0x00000ff8
40012290:	00010101 	.word	0x00010101
40012294:	40030c6c 	.word	0x40030c6c
40012298:	00010201 	.word	0x00010201
4001229c:	e0052000 	.word	0xe0052000
400122a0:	e0001000 	.word	0xe0001000
400122a4:	40030c70 	.word	0x40030c70

Disassembly of section i.CyU3PDeviceCacheControl:

400122a8 <CyU3PDeviceCacheControl>:
400122a8:	e92d4070 	push	{r4, r5, r6, lr}
400122ac:	e1a04000 	mov	r4, r0
400122b0:	e1a06001 	mov	r6, r1
400122b4:	e1a05002 	mov	r5, r2
400122b8:	e3550000 	cmp	r5, #0
400122bc:	0a000003 	beq	400122d0 <CyU3PDeviceCacheControl+0x28>
400122c0:	e3560000 	cmp	r6, #0
400122c4:	1a000001 	bne	400122d0 <CyU3PDeviceCacheControl+0x28>
400122c8:	e3a00040 	mov	r0, #64	; 0x40
400122cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400122d0:	eb000181 	bl	400128dc <CyU3PSysBarrierSync>
400122d4:	ebfffefa 	bl	40011ec4 <CyU3PSysClearDCache>
400122d8:	eb0001a1 	bl	40012964 <CyU3PSysFlushICache>
400122dc:	eb00018f 	bl	40012920 <CyU3PSysDisableICache>
400122e0:	eb00018a 	bl	40012910 <CyU3PSysDisableDCache>
400122e4:	e3540000 	cmp	r4, #0
400122e8:	0a000003 	beq	400122fc <CyU3PDeviceCacheControl+0x54>
400122ec:	eb000193 	bl	40012940 <CyU3PSysEnableICache>
400122f0:	eb000179 	bl	400128dc <CyU3PSysBarrierSync>
400122f4:	e59f0038 	ldr	r0, [pc, #56]	; 40012334 <CyU3PDeviceCacheControl+0x8c>
400122f8:	e5804000 	str	r4, [r0]
400122fc:	e3a00000 	mov	r0, #0
40012300:	e59f1030 	ldr	r1, [pc, #48]	; 40012338 <CyU3PDeviceCacheControl+0x90>
40012304:	e5810000 	str	r0, [r1]
40012308:	e3560000 	cmp	r6, #0
4001230c:	0a000005 	beq	40012328 <CyU3PDeviceCacheControl+0x80>
40012310:	eb000186 	bl	40012930 <CyU3PSysEnableDCache>
40012314:	eb000170 	bl	400128dc <CyU3PSysBarrierSync>
40012318:	e59f0018 	ldr	r0, [pc, #24]	; 40012338 <CyU3PDeviceCacheControl+0x90>
4001231c:	e5805000 	str	r5, [r0]
40012320:	e59f0014 	ldr	r0, [pc, #20]	; 4001233c <CyU3PDeviceCacheControl+0x94>
40012324:	e5806000 	str	r6, [r0]
40012328:	eb00016b 	bl	400128dc <CyU3PSysBarrierSync>
4001232c:	e3a00000 	mov	r0, #0
40012330:	eaffffe5 	b	400122cc <CyU3PDeviceCacheControl+0x24>
40012334:	40030c60 	.word	0x40030c60
40012338:	40030c68 	.word	0x40030c68
4001233c:	40030c64 	.word	0x40030c64

Disassembly of section i.CyU3PDeviceInit:

40012340 <CyU3PDeviceInit>:
40012340:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40012344:	e1a04000 	mov	r4, r0
40012348:	e3a06000 	mov	r6, #0
4001234c:	e3a07000 	mov	r7, #0
40012350:	e3a09000 	mov	r9, #0
40012354:	e3a0a000 	mov	sl, #0
40012358:	e3540000 	cmp	r4, #0
4001235c:	0a000033 	beq	40012430 <CyU3PDeviceInit+0xf0>
40012360:	e5d40004 	ldrb	r0, [r4, #4]
40012364:	e3500002 	cmp	r0, #2
40012368:	ba000002 	blt	40012378 <CyU3PDeviceInit+0x38>
4001236c:	e5d40004 	ldrb	r0, [r4, #4]
40012370:	e3500010 	cmp	r0, #16
40012374:	da000001 	ble	40012380 <CyU3PDeviceInit+0x40>
40012378:	e3a00040 	mov	r0, #64	; 0x40
4001237c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40012380:	e5d40005 	ldrb	r0, [r4, #5]
40012384:	e3500002 	cmp	r0, #2
40012388:	ba000002 	blt	40012398 <CyU3PDeviceInit+0x58>
4001238c:	e5d40005 	ldrb	r0, [r4, #5]
40012390:	e3500010 	cmp	r0, #16
40012394:	da000001 	ble	400123a0 <CyU3PDeviceInit+0x60>
40012398:	e3a00040 	mov	r0, #64	; 0x40
4001239c:	eafffff6 	b	4001237c <CyU3PDeviceInit+0x3c>
400123a0:	e5d40006 	ldrb	r0, [r4, #6]
400123a4:	e3500002 	cmp	r0, #2
400123a8:	ba000002 	blt	400123b8 <CyU3PDeviceInit+0x78>
400123ac:	e5d40006 	ldrb	r0, [r4, #6]
400123b0:	e3500010 	cmp	r0, #16
400123b4:	da000001 	ble	400123c0 <CyU3PDeviceInit+0x80>
400123b8:	e3a00040 	mov	r0, #64	; 0x40
400123bc:	eaffffee 	b	4001237c <CyU3PDeviceInit+0x3c>
400123c0:	e5d40006 	ldrb	r0, [r4, #6]
400123c4:	e5d41005 	ldrb	r1, [r4, #5]
400123c8:	e1500001 	cmp	r0, r1
400123cc:	ba000004 	blt	400123e4 <CyU3PDeviceInit+0xa4>
400123d0:	e5d41005 	ldrb	r1, [r4, #5]
400123d4:	e5d40006 	ldrb	r0, [r4, #6]
400123d8:	ebfff99c 	bl	40010a50 <__aeabi_idivmod>
400123dc:	e3510000 	cmp	r1, #0
400123e0:	0a000001 	beq	400123ec <CyU3PDeviceInit+0xac>
400123e4:	e3a00040 	mov	r0, #64	; 0x40
400123e8:	eaffffe3 	b	4001237c <CyU3PDeviceInit+0x3c>
400123ec:	e5d4000c 	ldrb	r0, [r4, #12]
400123f0:	e3500004 	cmp	r0, #4
400123f4:	ba000001 	blt	40012400 <CyU3PDeviceInit+0xc0>
400123f8:	e3a00040 	mov	r0, #64	; 0x40
400123fc:	eaffffde 	b	4001237c <CyU3PDeviceInit+0x3c>
40012400:	e5d40004 	ldrb	r0, [r4, #4]
40012404:	e2400001 	sub	r0, r0, #1
40012408:	e5d41005 	ldrb	r1, [r4, #5]
4001240c:	e2411001 	sub	r1, r1, #1
40012410:	e1800401 	orr	r0, r0, r1, lsl #8
40012414:	e5d41006 	ldrb	r1, [r4, #6]
40012418:	e2411001 	sub	r1, r1, #1
4001241c:	e1800601 	orr	r0, r0, r1, lsl #12
40012420:	e5d4100c 	ldrb	r1, [r4, #12]
40012424:	e1805201 	orr	r5, r0, r1, lsl #4
40012428:	e594a000 	ldr	sl, [r4]
4001242c:	ea000000 	b	40012434 <CyU3PDeviceInit+0xf4>
40012430:	e59f5334 	ldr	r5, [pc, #820]	; 4001276c <CyU3PDeviceInit+0x42c>
40012434:	e59f0334 	ldr	r0, [pc, #820]	; 40012770 <CyU3PDeviceInit+0x430>
40012438:	e5805004 	str	r5, [r0, #4]
4001243c:	e5905004 	ldr	r5, [r0, #4]
40012440:	e3a0000a 	mov	r0, #10
40012444:	eb0003f6 	bl	40013424 <CyU3PBusyWait>
40012448:	e59f0320 	ldr	r0, [pc, #800]	; 40012770 <CyU3PDeviceInit+0x430>
4001244c:	e5900000 	ldr	r0, [r0]
40012450:	e2000807 	and	r0, r0, #458752	; 0x70000
40012454:	e1a05820 	lsr	r5, r0, #16
40012458:	e2150003 	ands	r0, r5, #3
4001245c:	0a000004 	beq	40012474 <CyU3PDeviceInit+0x134>
40012460:	e3500001 	cmp	r0, #1
40012464:	0a00000e 	beq	400124a4 <CyU3PDeviceInit+0x164>
40012468:	e3500002 	cmp	r0, #2
4001246c:	1a000024 	bne	40012504 <CyU3PDeviceInit+0x1c4>
40012470:	ea000014 	b	400124c8 <CyU3PDeviceInit+0x188>
40012474:	e1a00000 	nop			; (mov r0, r0)
40012478:	e59f92f4 	ldr	r9, [pc, #756]	; 40012774 <CyU3PDeviceInit+0x434>
4001247c:	e35a0000 	cmp	sl, #0
40012480:	0a000003 	beq	40012494 <CyU3PDeviceInit+0x154>
40012484:	e59f02ec 	ldr	r0, [pc, #748]	; 40012778 <CyU3PDeviceInit+0x438>
40012488:	e59f12ec 	ldr	r1, [pc, #748]	; 4001277c <CyU3PDeviceInit+0x43c>
4001248c:	e5810000 	str	r0, [r1]
40012490:	ea000002 	b	400124a0 <CyU3PDeviceInit+0x160>
40012494:	e59f02e4 	ldr	r0, [pc, #740]	; 40012780 <CyU3PDeviceInit+0x440>
40012498:	e59f12dc 	ldr	r1, [pc, #732]	; 4001277c <CyU3PDeviceInit+0x43c>
4001249c:	e5810000 	str	r0, [r1]
400124a0:	ea000020 	b	40012528 <CyU3PDeviceInit+0x1e8>
400124a4:	e1a00000 	nop			; (mov r0, r0)
400124a8:	e59f92d4 	ldr	r9, [pc, #724]	; 40012784 <CyU3PDeviceInit+0x444>
400124ac:	e1a00209 	lsl	r0, r9, #4
400124b0:	e59f12c4 	ldr	r1, [pc, #708]	; 4001277c <CyU3PDeviceInit+0x43c>
400124b4:	e5810000 	str	r0, [r1]
400124b8:	e59f02c8 	ldr	r0, [pc, #712]	; 40012788 <CyU3PDeviceInit+0x448>
400124bc:	e59f12c8 	ldr	r1, [pc, #712]	; 4001278c <CyU3PDeviceInit+0x44c>
400124c0:	e5810000 	str	r0, [r1]
400124c4:	ea000017 	b	40012528 <CyU3PDeviceInit+0x1e8>
400124c8:	e1a00000 	nop			; (mov r0, r0)
400124cc:	e59f92bc 	ldr	r9, [pc, #700]	; 40012790 <CyU3PDeviceInit+0x450>
400124d0:	e59f02bc 	ldr	r0, [pc, #700]	; 40012794 <CyU3PDeviceInit+0x454>
400124d4:	e59f12b0 	ldr	r1, [pc, #688]	; 4001278c <CyU3PDeviceInit+0x44c>
400124d8:	e5810000 	str	r0, [r1]
400124dc:	e35a0000 	cmp	sl, #0
400124e0:	0a000003 	beq	400124f4 <CyU3PDeviceInit+0x1b4>
400124e4:	e59f028c 	ldr	r0, [pc, #652]	; 40012778 <CyU3PDeviceInit+0x438>
400124e8:	e59f128c 	ldr	r1, [pc, #652]	; 4001277c <CyU3PDeviceInit+0x43c>
400124ec:	e5810000 	str	r0, [r1]
400124f0:	ea000002 	b	40012500 <CyU3PDeviceInit+0x1c0>
400124f4:	e59f0284 	ldr	r0, [pc, #644]	; 40012780 <CyU3PDeviceInit+0x440>
400124f8:	e59f127c 	ldr	r1, [pc, #636]	; 4001277c <CyU3PDeviceInit+0x43c>
400124fc:	e5810000 	str	r0, [r1]
40012500:	ea000008 	b	40012528 <CyU3PDeviceInit+0x1e8>
40012504:	e1a00000 	nop			; (mov r0, r0)
40012508:	e59f9288 	ldr	r9, [pc, #648]	; 40012798 <CyU3PDeviceInit+0x458>
4001250c:	e1a00189 	lsl	r0, r9, #3
40012510:	e59f1264 	ldr	r1, [pc, #612]	; 4001277c <CyU3PDeviceInit+0x43c>
40012514:	e5810000 	str	r0, [r1]
40012518:	e59f027c 	ldr	r0, [pc, #636]	; 4001279c <CyU3PDeviceInit+0x45c>
4001251c:	e59f1268 	ldr	r1, [pc, #616]	; 4001278c <CyU3PDeviceInit+0x44c>
40012520:	e5810000 	str	r0, [r1]
40012524:	e1a00000 	nop			; (mov r0, r0)
40012528:	e1a00000 	nop			; (mov r0, r0)
4001252c:	e59f023c 	ldr	r0, [pc, #572]	; 40012770 <CyU3PDeviceInit+0x430>
40012530:	e5900000 	ldr	r0, [r0]
40012534:	e200003f 	and	r0, r0, #63	; 0x3f
40012538:	e3500015 	cmp	r0, #21
4001253c:	1a000002 	bne	4001254c <CyU3PDeviceInit+0x20c>
40012540:	e59f0230 	ldr	r0, [pc, #560]	; 40012778 <CyU3PDeviceInit+0x438>
40012544:	e59f1230 	ldr	r1, [pc, #560]	; 4001277c <CyU3PDeviceInit+0x43c>
40012548:	e5810000 	str	r0, [r1]
4001254c:	e59f0228 	ldr	r0, [pc, #552]	; 4001277c <CyU3PDeviceInit+0x43c>
40012550:	e5900000 	ldr	r0, [r0]
40012554:	e59f121c 	ldr	r1, [pc, #540]	; 40012778 <CyU3PDeviceInit+0x438>
40012558:	e1500001 	cmp	r0, r1
4001255c:	1a000013 	bne	400125b0 <CyU3PDeviceInit+0x270>
40012560:	e59f0208 	ldr	r0, [pc, #520]	; 40012770 <CyU3PDeviceInit+0x430>
40012564:	e5900000 	ldr	r0, [r0]
40012568:	e200003f 	and	r0, r0, #63	; 0x3f
4001256c:	e3500015 	cmp	r0, #21
40012570:	0a00000e 	beq	400125b0 <CyU3PDeviceInit+0x270>
40012574:	e59f01f4 	ldr	r0, [pc, #500]	; 40012770 <CyU3PDeviceInit+0x430>
40012578:	e5900000 	ldr	r0, [r0]
4001257c:	e3c0003f 	bic	r0, r0, #63	; 0x3f
40012580:	e3800015 	orr	r0, r0, #21
40012584:	e59f11e4 	ldr	r1, [pc, #484]	; 40012770 <CyU3PDeviceInit+0x430>
40012588:	e5810000 	str	r0, [r1]
4001258c:	e3a00064 	mov	r0, #100	; 0x64
40012590:	eb0003a3 	bl	40013424 <CyU3PBusyWait>
40012594:	e1a00000 	nop			; (mov r0, r0)
40012598:	e59f01d0 	ldr	r0, [pc, #464]	; 40012770 <CyU3PDeviceInit+0x430>
4001259c:	e5900000 	ldr	r0, [r0]
400125a0:	e3100702 	tst	r0, #524288	; 0x80000
400125a4:	0afffffb 	beq	40012598 <CyU3PDeviceInit+0x258>
400125a8:	e3a00064 	mov	r0, #100	; 0x64
400125ac:	eb00039c 	bl	40013424 <CyU3PBusyWait>
400125b0:	e59f01e8 	ldr	r0, [pc, #488]	; 400127a0 <CyU3PDeviceInit+0x460>
400125b4:	e5908014 	ldr	r8, [r0, #20]
400125b8:	e3a0000a 	mov	r0, #10
400125bc:	eb000398 	bl	40013424 <CyU3PBusyWait>
400125c0:	e2080003 	and	r0, r8, #3
400125c4:	e3500002 	cmp	r0, #2
400125c8:	1a000005 	bne	400125e4 <CyU3PDeviceInit+0x2a4>
400125cc:	e3a07001 	mov	r7, #1
400125d0:	e3880003 	orr	r0, r8, #3
400125d4:	e59f11c4 	ldr	r1, [pc, #452]	; 400127a0 <CyU3PDeviceInit+0x460>
400125d8:	e5810014 	str	r0, [r1, #20]
400125dc:	e3a0000a 	mov	r0, #10
400125e0:	eb00038f 	bl	40013424 <CyU3PBusyWait>
400125e4:	e3180102 	tst	r8, #-2147483648	; 0x80000000
400125e8:	1a000004 	bne	40012600 <CyU3PDeviceInit+0x2c0>
400125ec:	e3540000 	cmp	r4, #0
400125f0:	0a000003 	beq	40012604 <CyU3PDeviceInit+0x2c4>
400125f4:	e5940008 	ldr	r0, [r4, #8]
400125f8:	e3500000 	cmp	r0, #0
400125fc:	1a000000 	bne	40012604 <CyU3PDeviceInit+0x2c4>
40012600:	e3a06001 	mov	r6, #1
40012604:	e3560000 	cmp	r6, #0
40012608:	1a000014 	bne	40012660 <CyU3PDeviceInit+0x320>
4001260c:	e3c80003 	bic	r0, r8, #3
40012610:	e3800001 	orr	r0, r0, #1
40012614:	e59f1184 	ldr	r1, [pc, #388]	; 400127a0 <CyU3PDeviceInit+0x460>
40012618:	e5810014 	str	r0, [r1, #20]
4001261c:	e3a00064 	mov	r0, #100	; 0x64
40012620:	eb00037f 	bl	40013424 <CyU3PBusyWait>
40012624:	e59f0174 	ldr	r0, [pc, #372]	; 400127a0 <CyU3PDeviceInit+0x460>
40012628:	e5905018 	ldr	r5, [r0, #24]
4001262c:	e3a000c8 	mov	r0, #200	; 0xc8
40012630:	eb00037b 	bl	40013424 <CyU3PBusyWait>
40012634:	e59f0164 	ldr	r0, [pc, #356]	; 400127a0 <CyU3PDeviceInit+0x460>
40012638:	e5900018 	ldr	r0, [r0, #24]
4001263c:	e1500005 	cmp	r0, r5
40012640:	1a000000 	bne	40012648 <CyU3PDeviceInit+0x308>
40012644:	e3a06001 	mov	r6, #1
40012648:	e3a00064 	mov	r0, #100	; 0x64
4001264c:	eb000374 	bl	40013424 <CyU3PBusyWait>
40012650:	e59f0148 	ldr	r0, [pc, #328]	; 400127a0 <CyU3PDeviceInit+0x460>
40012654:	e5808014 	str	r8, [r0, #20]
40012658:	e3a00064 	mov	r0, #100	; 0x64
4001265c:	eb000370 	bl	40013424 <CyU3PBusyWait>
40012660:	e3560000 	cmp	r6, #0
40012664:	0a000026 	beq	40012704 <CyU3PDeviceInit+0x3c4>
40012668:	e59f0130 	ldr	r0, [pc, #304]	; 400127a0 <CyU3PDeviceInit+0x460>
4001266c:	e5900014 	ldr	r0, [r0, #20]
40012670:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012674:	1a000022 	bne	40012704 <CyU3PDeviceInit+0x3c4>
40012678:	e1a09109 	lsl	r9, r9, #2
4001267c:	e3a01c7d 	mov	r1, #32000	; 0x7d00
40012680:	e1a00009 	mov	r0, r9
40012684:	ebfff89f 	bl	40010908 <__aeabi_uidivmod>
40012688:	e1a09000 	mov	r9, r0
4001268c:	e2095003 	and	r5, r9, #3
40012690:	e1a09129 	lsr	r9, r9, #2
40012694:	e3550010 	cmp	r5, #16
40012698:	2a000000 	bcs	400126a0 <CyU3PDeviceInit+0x360>
4001269c:	e2499001 	sub	r9, r9, #1
400126a0:	e1a09809 	lsl	r9, r9, #16
400126a4:	e59f00f8 	ldr	r0, [pc, #248]	; 400127a4 <CyU3PDeviceInit+0x464>
400126a8:	e1590000 	cmp	r9, r0
400126ac:	9a000000 	bls	400126b4 <CyU3PDeviceInit+0x374>
400126b0:	e1a09000 	mov	r9, r0
400126b4:	e3a00064 	mov	r0, #100	; 0x64
400126b8:	eb000359 	bl	40013424 <CyU3PBusyWait>
400126bc:	e59f00dc 	ldr	r0, [pc, #220]	; 400127a0 <CyU3PDeviceInit+0x460>
400126c0:	e5905014 	ldr	r5, [r0, #20]
400126c4:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
400126c8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
400126cc:	e1805009 	orr	r5, r0, r9
400126d0:	e3a00064 	mov	r0, #100	; 0x64
400126d4:	eb000352 	bl	40013424 <CyU3PBusyWait>
400126d8:	e59f00c0 	ldr	r0, [pc, #192]	; 400127a0 <CyU3PDeviceInit+0x460>
400126dc:	e5805014 	str	r5, [r0, #20]
400126e0:	e3a00064 	mov	r0, #100	; 0x64
400126e4:	eb00034e 	bl	40013424 <CyU3PBusyWait>
400126e8:	e59f00b0 	ldr	r0, [pc, #176]	; 400127a0 <CyU3PDeviceInit+0x460>
400126ec:	e5900014 	ldr	r0, [r0, #20]
400126f0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400126f4:	e59f10a4 	ldr	r1, [pc, #164]	; 400127a0 <CyU3PDeviceInit+0x460>
400126f8:	e5810014 	str	r0, [r1, #20]
400126fc:	e3a00064 	mov	r0, #100	; 0x64
40012700:	eb000347 	bl	40013424 <CyU3PBusyWait>
40012704:	e59f0094 	ldr	r0, [pc, #148]	; 400127a0 <CyU3PDeviceInit+0x460>
40012708:	e5900000 	ldr	r0, [r0]
4001270c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40012710:	e59f1088 	ldr	r1, [pc, #136]	; 400127a0 <CyU3PDeviceInit+0x460>
40012714:	e5810000 	str	r0, [r1]
40012718:	e3a00064 	mov	r0, #100	; 0x64
4001271c:	eb000340 	bl	40013424 <CyU3PBusyWait>
40012720:	eb003dca 	bl	40021e50 <CyU3PVicInit>
40012724:	e10f0000 	mrs	r0, CPSR
40012728:	e3c00080 	bic	r0, r0, #128	; 0x80
4001272c:	e121f000 	msr	CPSR_c, r0
40012730:	e3570000 	cmp	r7, #0
40012734:	0a000002 	beq	40012744 <CyU3PDeviceInit+0x404>
40012738:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001273c:	e3a00001 	mov	r0, #1
40012740:	eb000024 	bl	400127d8 <CyU3PSysWatchDogConfigure>
40012744:	e59f005c 	ldr	r0, [pc, #92]	; 400127a8 <CyU3PDeviceInit+0x468>
40012748:	e5900000 	ldr	r0, [r0]
4001274c:	e3500000 	cmp	r0, #0
40012750:	0a000002 	beq	40012760 <CyU3PDeviceInit+0x420>
40012754:	e59f004c 	ldr	r0, [pc, #76]	; 400127a8 <CyU3PDeviceInit+0x468>
40012758:	e5900000 	ldr	r0, [r0]
4001275c:	eb000594 	bl	40013db4 <CyU3PLppRestoreState>
40012760:	ebfffe7c 	bl	40012158 <_etext>
40012764:	e3a00000 	mov	r0, #0
40012768:	eaffff03 	b	4001237c <CyU3PDeviceInit+0x3c>
4001276c:	00001131 	.word	0x00001131
40012770:	e0052000 	.word	0xe0052000
40012774:	0124f800 	.word	0x0124f800
40012778:	18085800 	.word	0x18085800
4001277c:	40030c54 	.word	0x40030c54
40012780:	16e36000 	.word	0x16e36000
40012784:	018cba80 	.word	0x018cba80
40012788:	00910700 	.word	0x00910700
4001278c:	40030c5c 	.word	0x40030c5c
40012790:	0249f000 	.word	0x0249f000
40012794:	00910608 	.word	0x00910608
40012798:	03197500 	.word	0x03197500
4001279c:	00910580 	.word	0x00910580
400127a0:	e0050000 	.word	0xe0050000
400127a4:	7fff0000 	.word	0x7fff0000
400127a8:	40030c90 	.word	0x40030c90

Disassembly of section i.CyU3PSysSetupMMU:

400127ac <CyU3PSysSetupMMU>:
400127ac:	e92d4010 	push	{r4, lr}
400127b0:	eb000049 	bl	400128dc <CyU3PSysBarrierSync>
400127b4:	ebfffdc2 	bl	40011ec4 <CyU3PSysClearDCache>
400127b8:	eb000069 	bl	40012964 <CyU3PSysFlushICache>
400127bc:	eb000049 	bl	400128e8 <CyU3PSysDisableCacheMMU>
400127c0:	eb00006a 	bl	40012970 <CyU3PSysInitTCMs>
400127c4:	eb000041 	bl	400128d0 <CyU3PInitPageTable>
400127c8:	eb000061 	bl	40012954 <CyU3PSysEnableMMU>
400127cc:	eb00006c 	bl	40012984 <CyU3PSysLoadTLB>
400127d0:	eb000041 	bl	400128dc <CyU3PSysBarrierSync>
400127d4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

400127d8 <CyU3PSysWatchDogConfigure>:
400127d8:	e92d4070 	push	{r4, r5, r6, lr}
400127dc:	e1a04000 	mov	r4, r0
400127e0:	e1a05001 	mov	r5, r1
400127e4:	e59f00d8 	ldr	r0, [pc, #216]	; 400128c4 <CyU3PSysWatchDogConfigure+0xec>
400127e8:	e5906014 	ldr	r6, [r0, #20]
400127ec:	e3a00064 	mov	r0, #100	; 0x64
400127f0:	eb00030b 	bl	40013424 <CyU3PBusyWait>
400127f4:	e3540000 	cmp	r4, #0
400127f8:	0a000023 	beq	4001288c <CyU3PSysWatchDogConfigure+0xb4>
400127fc:	e2060003 	and	r0, r6, #3
40012800:	e3500003 	cmp	r0, #3
40012804:	0a000004 	beq	4001281c <CyU3PSysWatchDogConfigure+0x44>
40012808:	e3860003 	orr	r0, r6, #3
4001280c:	e59f10b0 	ldr	r1, [pc, #176]	; 400128c4 <CyU3PSysWatchDogConfigure+0xec>
40012810:	e5810014 	str	r0, [r1, #20]
40012814:	e3a00064 	mov	r0, #100	; 0x64
40012818:	eb000301 	bl	40013424 <CyU3PBusyWait>
4001281c:	e0850285 	add	r0, r5, r5, lsl #5
40012820:	e59f10a0 	ldr	r1, [pc, #160]	; 400128c8 <CyU3PSysWatchDogConfigure+0xf0>
40012824:	e5810000 	str	r0, [r1]
40012828:	e2810000 	add	r0, r1, #0
4001282c:	e5900000 	ldr	r0, [r0]
40012830:	e1500005 	cmp	r0, r5
40012834:	2a000001 	bcs	40012840 <CyU3PSysWatchDogConfigure+0x68>
40012838:	e3e00000 	mvn	r0, #0
4001283c:	e5810000 	str	r0, [r1]
40012840:	e59f0080 	ldr	r0, [pc, #128]	; 400128c8 <CyU3PSysWatchDogConfigure+0xf0>
40012844:	e5900000 	ldr	r0, [r0]
40012848:	e59f1074 	ldr	r1, [pc, #116]	; 400128c4 <CyU3PSysWatchDogConfigure+0xec>
4001284c:	e5810018 	str	r0, [r1, #24]
40012850:	e3a00064 	mov	r0, #100	; 0x64
40012854:	eb0002f2 	bl	40013424 <CyU3PBusyWait>
40012858:	e3c660fb 	bic	r6, r6, #251	; 0xfb
4001285c:	e38660fa 	orr	r6, r6, #250	; 0xfa
40012860:	e59f005c 	ldr	r0, [pc, #92]	; 400128c4 <CyU3PSysWatchDogConfigure+0xec>
40012864:	e5806014 	str	r6, [r0, #20]
40012868:	e3a00064 	mov	r0, #100	; 0x64
4001286c:	eb0002ec 	bl	40013424 <CyU3PBusyWait>
40012870:	e2060c03 	and	r0, r6, #768	; 0x300
40012874:	e3500c03 	cmp	r0, #768	; 0x300
40012878:	1a000010 	bne	400128c0 <CyU3PSysWatchDogConfigure+0xe8>
4001287c:	e59f0048 	ldr	r0, [pc, #72]	; 400128cc <CyU3PSysWatchDogConfigure+0xf4>
40012880:	e1d000b0 	ldrh	r0, [r0]
40012884:	eb003d18 	bl	40021cec <CyU3POsTimerInit>
40012888:	ea00000c 	b	400128c0 <CyU3PSysWatchDogConfigure+0xe8>
4001288c:	e2060003 	and	r0, r6, #3
40012890:	e3500003 	cmp	r0, #3
40012894:	0a000006 	beq	400128b4 <CyU3PSysWatchDogConfigure+0xdc>
40012898:	e59f0024 	ldr	r0, [pc, #36]	; 400128c4 <CyU3PSysWatchDogConfigure+0xec>
4001289c:	e5900014 	ldr	r0, [r0, #20]
400128a0:	e3800003 	orr	r0, r0, #3
400128a4:	e59f1018 	ldr	r1, [pc, #24]	; 400128c4 <CyU3PSysWatchDogConfigure+0xec>
400128a8:	e5810014 	str	r0, [r1, #20]
400128ac:	e3a00064 	mov	r0, #100	; 0x64
400128b0:	eb0002db 	bl	40013424 <CyU3PBusyWait>
400128b4:	e3a00000 	mov	r0, #0
400128b8:	e59f1008 	ldr	r1, [pc, #8]	; 400128c8 <CyU3PSysWatchDogConfigure+0xf0>
400128bc:	e5810000 	str	r0, [r1]
400128c0:	e8bd8070 	pop	{r4, r5, r6, pc}
400128c4:	e0050000 	.word	0xe0050000
400128c8:	40030c58 	.word	0x40030c58
400128cc:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PInitPageTable:

400128d0 <CyU3PInitPageTable>:
400128d0:	e92d4010 	push	{r4, lr}
400128d4:	eb0007ad 	bl	40014790 <CyFx3DevInitPageTables>
400128d8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

400128dc <CyU3PSysBarrierSync>:
400128dc:	e3a00000 	mov	r0, #0
400128e0:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
400128e4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

400128e8 <CyU3PSysDisableCacheMMU>:
400128e8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
400128ec:	e59f2018 	ldr	r2, [pc, #24]	; 4001290c <CyU3PSysDisableCacheMMU+0x24>
400128f0:	e1c00002 	bic	r0, r0, r2
400128f4:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
400128f8:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
400128fc:	e3e01801 	mvn	r1, #65536	; 0x10000
40012900:	e0000001 	and	r0, r0, r1
40012904:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012908:	e12fff1e 	bx	lr
4001290c:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012910 <CyU3PSysDisableDCache>:
40012910:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012914:	e3c00004 	bic	r0, r0, #4
40012918:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001291c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012920 <CyU3PSysDisableICache>:
40012920:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012924:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012928:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001292c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012930 <CyU3PSysEnableDCache>:
40012930:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012934:	e3800004 	orr	r0, r0, #4
40012938:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001293c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012940 <CyU3PSysEnableICache>:
40012940:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012944:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012948:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001294c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012950:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012954 <CyU3PSysEnableMMU>:
40012954:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012958:	e3800001 	orr	r0, r0, #1
4001295c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012960:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012964 <CyU3PSysFlushICache>:
40012964:	e3a00000 	mov	r0, #0
40012968:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
4001296c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012970 <CyU3PSysInitTCMs>:
40012970:	e3a00015 	mov	r0, #21
40012974:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012978:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
4001297c:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012980:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012984 <CyU3PSysLoadTLB>:
40012984:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012988:	e3a00000 	mov	r0, #0
4001298c:	eb00000b 	bl	400129c0 <CyU3PSysLockTLBEntry>
40012990:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012994:	eb000009 	bl	400129c0 <CyU3PSysLockTLBEntry>
40012998:	e3a00101 	mov	r0, #1073741824	; 0x40000000
4001299c:	eb000007 	bl	400129c0 <CyU3PSysLockTLBEntry>
400129a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400129a4:	eb000005 	bl	400129c0 <CyU3PSysLockTLBEntry>
400129a8:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
400129ac:	eb000003 	bl	400129c0 <CyU3PSysLockTLBEntry>
400129b0:	e59f0004 	ldr	r0, [pc, #4]	; 400129bc <CyU3PSysLoadTLB+0x38>
400129b4:	eb000001 	bl	400129c0 <CyU3PSysLockTLBEntry>
400129b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400129bc:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

400129c0 <CyU3PSysLockTLBEntry>:
400129c0:	e3a01000 	mov	r1, #0
400129c4:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
400129c8:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
400129cc:	e3811001 	orr	r1, r1, #1
400129d0:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
400129d4:	e5900000 	ldr	r0, [r0]
400129d8:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
400129dc:	e3c11001 	bic	r1, r1, #1
400129e0:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
400129e4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

400129e8 <CyU3PDeviceConfigureIOMatrix>:
400129e8:	e92d4010 	push	{r4, lr}
400129ec:	e1a04000 	mov	r4, r0
400129f0:	e3540000 	cmp	r4, #0
400129f4:	1a000001 	bne	40012a00 <CyU3PDeviceConfigureIOMatrix+0x18>
400129f8:	e3a00041 	mov	r0, #65	; 0x41
400129fc:	e8bd8010 	pop	{r4, pc}
40012a00:	e1a00004 	mov	r0, r4
40012a04:	eb0005fd 	bl	40014200 <CyFx3DevIOConfigure>
40012a08:	e3500000 	cmp	r0, #0
40012a0c:	1a000001 	bne	40012a18 <CyU3PDeviceConfigureIOMatrix+0x30>
40012a10:	e3a00040 	mov	r0, #64	; 0x40
40012a14:	eafffff8 	b	400129fc <CyU3PDeviceConfigureIOMatrix+0x14>
40012a18:	e3a00000 	mov	r0, #0
40012a1c:	eafffff6 	b	400129fc <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012a20 <CyU3PDeviceGpioOverride>:
40012a20:	e92d4070 	push	{r4, r5, r6, lr}
40012a24:	e1a04000 	mov	r4, r0
40012a28:	e1a05001 	mov	r5, r1
40012a2c:	e354003d 	cmp	r4, #61	; 0x3d
40012a30:	ba000001 	blt	40012a3c <CyU3PDeviceGpioOverride+0x1c>
40012a34:	e3a00040 	mov	r0, #64	; 0x40
40012a38:	e8bd8070 	pop	{r4, r5, r6, pc}
40012a3c:	e1a02005 	mov	r2, r5
40012a40:	e3a01001 	mov	r1, #1
40012a44:	e1a00004 	mov	r0, r4
40012a48:	eb00066c 	bl	40014400 <CyFx3DevIOSelectGpio>
40012a4c:	e3a00000 	mov	r0, #0
40012a50:	eafffff8 	b	40012a38 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012a54 <CyU3PIsGpioComplexIOConfigured>:
40012a54:	e92d4010 	push	{r4, lr}
40012a58:	e1a04000 	mov	r4, r0
40012a5c:	e3a01000 	mov	r1, #0
40012a60:	e1a00004 	mov	r0, r4
40012a64:	eb000645 	bl	40014380 <CyFx3DevIOIsGpio>
40012a68:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012a6c <CyU3PIsGpioSimpleIOConfigured>:
40012a6c:	e92d4010 	push	{r4, lr}
40012a70:	e1a04000 	mov	r4, r0
40012a74:	e3a01001 	mov	r1, #1
40012a78:	e1a00004 	mov	r0, r4
40012a7c:	eb00063f 	bl	40014380 <CyFx3DevIOIsGpio>
40012a80:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012a84 <CyU3PIsGpioValid>:
40012a84:	e1a01000 	mov	r1, r0
40012a88:	e351003d 	cmp	r1, #61	; 0x3d
40012a8c:	aa000001 	bge	40012a98 <CyU3PIsGpioValid+0x14>
40012a90:	e3a00001 	mov	r0, #1
40012a94:	e12fff1e 	bx	lr
40012a98:	e3a00000 	mov	r0, #0
40012a9c:	eafffffc 	b	40012a94 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012aa0 <CyU3PIsLppIOConfigured>:
40012aa0:	e92d4070 	push	{r4, r5, r6, lr}
40012aa4:	e1a04000 	mov	r4, r0
40012aa8:	e3a05000 	mov	r5, #0
40012aac:	e3540000 	cmp	r4, #0
40012ab0:	0a00000a 	beq	40012ae0 <CyU3PIsLppIOConfigured+0x40>
40012ab4:	e3540001 	cmp	r4, #1
40012ab8:	0a000004 	beq	40012ad0 <CyU3PIsLppIOConfigured+0x30>
40012abc:	e3540002 	cmp	r4, #2
40012ac0:	0a00000e 	beq	40012b00 <CyU3PIsLppIOConfigured+0x60>
40012ac4:	e3540003 	cmp	r4, #3
40012ac8:	1a000010 	bne	40012b10 <CyU3PIsLppIOConfigured+0x70>
40012acc:	ea000007 	b	40012af0 <CyU3PIsLppIOConfigured+0x50>
40012ad0:	e1a00000 	nop			; (mov r0, r0)
40012ad4:	eb00063d 	bl	400143d0 <CyFx3DevIOIsI2sConfigured>
40012ad8:	e1a05000 	mov	r5, r0
40012adc:	ea00000d 	b	40012b18 <CyU3PIsLppIOConfigured+0x78>
40012ae0:	e1a00000 	nop			; (mov r0, r0)
40012ae4:	eb000635 	bl	400143c0 <CyFx3DevIOIsI2cConfigured>
40012ae8:	e1a05000 	mov	r5, r0
40012aec:	ea000009 	b	40012b18 <CyU3PIsLppIOConfigured+0x78>
40012af0:	e1a00000 	nop			; (mov r0, r0)
40012af4:	eb00063d 	bl	400143f0 <CyFx3DevIOIsUartConfigured>
40012af8:	e1a05000 	mov	r5, r0
40012afc:	ea000005 	b	40012b18 <CyU3PIsLppIOConfigured+0x78>
40012b00:	e1a00000 	nop			; (mov r0, r0)
40012b04:	eb000635 	bl	400143e0 <CyFx3DevIOIsSpiConfigured>
40012b08:	e1a05000 	mov	r5, r0
40012b0c:	ea000001 	b	40012b18 <CyU3PIsLppIOConfigured+0x78>
40012b10:	e1a00000 	nop			; (mov r0, r0)
40012b14:	e1a00000 	nop			; (mov r0, r0)
40012b18:	e1a00000 	nop			; (mov r0, r0)
40012b1c:	e1a00005 	mov	r0, r5
40012b20:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012b24 <CyU3PDebugApplicationDefine>:
40012b24:	e92d4010 	push	{r4, lr}
40012b28:	e24dd020 	sub	sp, sp, #32
40012b2c:	e3a00000 	mov	r0, #0
40012b30:	e59f109c 	ldr	r1, [pc, #156]	; 40012bd4 <CyU3PDebugApplicationDefine+0xb0>
40012b34:	e5810000 	str	r0, [r1]
40012b38:	e3a00001 	mov	r0, #1
40012b3c:	e2811008 	add	r1, r1, #8
40012b40:	e5810000 	str	r0, [r1]
40012b44:	e3a00c02 	mov	r0, #512	; 0x200
40012b48:	ebffc2c9 	bl	40003674 <CyU3PMemAlloc>
40012b4c:	e1a04000 	mov	r4, r0
40012b50:	e3a030a8 	mov	r3, #168	; 0xa8
40012b54:	e3a02001 	mov	r2, #1
40012b58:	e3a01000 	mov	r1, #0
40012b5c:	e3a00006 	mov	r0, #6
40012b60:	e28dc00c 	add	ip, sp, #12
40012b64:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012b68:	e3a02c02 	mov	r2, #512	; 0x200
40012b6c:	e1a03001 	mov	r3, r1
40012b70:	e58d2004 	str	r2, [sp, #4]
40012b74:	e59f205c 	ldr	r2, [pc, #92]	; 40012bd8 <CyU3PDebugApplicationDefine+0xb4>
40012b78:	e28f105c 	add	r1, pc, #92	; 0x5c
40012b7c:	e58d0008 	str	r0, [sp, #8]
40012b80:	e59f0064 	ldr	r0, [pc, #100]	; 40012bec <CyU3PDebugApplicationDefine+0xc8>
40012b84:	e58d4000 	str	r4, [sp]
40012b88:	ebffde45 	bl	4000a4a4 <_txe_thread_create>
40012b8c:	e3a00084 	mov	r0, #132	; 0x84
40012b90:	ebffc2b7 	bl	40003674 <CyU3PMemAlloc>
40012b94:	e1a04000 	mov	r4, r0
40012b98:	e3a0303c 	mov	r3, #60	; 0x3c
40012b9c:	e3a02084 	mov	r2, #132	; 0x84
40012ba0:	e1cd20f0 	strd	r2, [sp]
40012ba4:	e1a03004 	mov	r3, r4
40012ba8:	e3a02003 	mov	r2, #3
40012bac:	e3a01000 	mov	r1, #0
40012bb0:	e59f0038 	ldr	r0, [pc, #56]	; 40012bf0 <CyU3PDebugApplicationDefine+0xcc>
40012bb4:	ebffdd54 	bl	4000a10c <_txe_queue_create>
40012bb8:	e3a03038 	mov	r3, #56	; 0x38
40012bbc:	e3a02000 	mov	r2, #0
40012bc0:	e1a01002 	mov	r1, r2
40012bc4:	e59f0028 	ldr	r0, [pc, #40]	; 40012bf4 <CyU3PDebugApplicationDefine+0xd0>
40012bc8:	ebffdc74 	bl	40009da0 <_txe_mutex_create>
40012bcc:	e28dd020 	add	sp, sp, #32
40012bd0:	e8bd8010 	pop	{r4, pc}
40012bd4:	40030c74 	.word	0x40030c74
40012bd8:	40013094 	.word	0x40013094
40012bdc:	75626544 	.word	0x75626544
40012be0:	68542067 	.word	0x68542067
40012be4:	64616572 	.word	0x64616572
40012be8:	00000000 	.word	0x00000000
40012bec:	40031230 	.word	0x40031230
40012bf0:	400312d8 	.word	0x400312d8
40012bf4:	40031314 	.word	0x40031314

Disassembly of section i.CyU3PDebugChannelReset:

40012bf8 <CyU3PDebugChannelReset>:
40012bf8:	e92d4010 	push	{r4, lr}
40012bfc:	e59f0034 	ldr	r0, [pc, #52]	; 40012c38 <CyU3PDebugChannelReset+0x40>
40012c00:	eb000d41 	bl	4001610c <CyU3PDmaChannelReset>
40012c04:	e3a01000 	mov	r1, #0
40012c08:	e59f0028 	ldr	r0, [pc, #40]	; 40012c38 <CyU3PDebugChannelReset+0x40>
40012c0c:	eb000ddf 	bl	40016390 <CyU3PDmaChannelSetXfer>
40012c10:	e1a04000 	mov	r4, r0
40012c14:	e3540000 	cmp	r4, #0
40012c18:	1a000004 	bne	40012c30 <CyU3PDebugChannelReset+0x38>
40012c1c:	e3e02000 	mvn	r2, #0
40012c20:	e59f1014 	ldr	r1, [pc, #20]	; 40012c3c <CyU3PDebugChannelReset+0x44>
40012c24:	e281000c 	add	r0, r1, #12
40012c28:	eb000c6a 	bl	40015dd8 <CyU3PDmaChannelGetBuffer>
40012c2c:	e1a04000 	mov	r4, r0
40012c30:	e1a00004 	mov	r0, r4
40012c34:	e8bd8010 	pop	{r4, pc}
40012c38:	40031358 	.word	0x40031358
40012c3c:	4003134c 	.word	0x4003134c

Disassembly of section i.CyU3PDebugInit:

40012c40 <CyU3PDebugInit>:
40012c40:	e92d4070 	push	{r4, r5, r6, lr}
40012c44:	e24dd020 	sub	sp, sp, #32
40012c48:	e1a04000 	mov	r4, r0
40012c4c:	e1a06001 	mov	r6, r1
40012c50:	e59f0150 	ldr	r0, [pc, #336]	; 40012da8 <CyU3PDebugInit+0x168>
40012c54:	e5900000 	ldr	r0, [r0]
40012c58:	e3500000 	cmp	r0, #0
40012c5c:	1a000003 	bne	40012c70 <CyU3PDebugInit+0x30>
40012c60:	e59f0144 	ldr	r0, [pc, #324]	; 40012dac <CyU3PDebugInit+0x16c>
40012c64:	e5900000 	ldr	r0, [r0]
40012c68:	e3500000 	cmp	r0, #0
40012c6c:	0a000002 	beq	40012c7c <CyU3PDebugInit+0x3c>
40012c70:	e3a00043 	mov	r0, #67	; 0x43
40012c74:	e28dd020 	add	sp, sp, #32
40012c78:	e8bd8070 	pop	{r4, r5, r6, pc}
40012c7c:	e1a00004 	mov	r0, r4
40012c80:	eb0007b3 	bl	40014b54 <CyU3PDmaSocketIsValidConsumer>
40012c84:	e1a05000 	mov	r5, r0
40012c88:	e3550000 	cmp	r5, #0
40012c8c:	1a000001 	bne	40012c98 <CyU3PDebugInit+0x58>
40012c90:	e3a00040 	mov	r0, #64	; 0x40
40012c94:	eafffff6 	b	40012c74 <CyU3PDebugInit+0x34>
40012c98:	e3e01000 	mvn	r1, #0
40012c9c:	e59f010c 	ldr	r0, [pc, #268]	; 40012db0 <CyU3PDebugInit+0x170>
40012ca0:	ebffdcbc 	bl	40009f98 <_txe_mutex_get>
40012ca4:	e3a00c01 	mov	r0, #256	; 0x100
40012ca8:	e1cd00b4 	strh	r0, [sp, #4]
40012cac:	e3a00008 	mov	r0, #8
40012cb0:	e1cd00b6 	strh	r0, [sp, #6]
40012cb4:	e3a00000 	mov	r0, #0
40012cb8:	e1cd00bc 	strh	r0, [sp, #12]
40012cbc:	e59f00f0 	ldr	r0, [pc, #240]	; 40012db4 <CyU3PDebugInit+0x174>
40012cc0:	e1cd00b8 	strh	r0, [sp, #8]
40012cc4:	e1cd40ba 	strh	r4, [sp, #10]
40012cc8:	e3a00000 	mov	r0, #0
40012ccc:	e5cd0014 	strb	r0, [sp, #20]
40012cd0:	e1cd00be 	strh	r0, [sp, #14]
40012cd4:	e1cd01b0 	strh	r0, [sp, #16]
40012cd8:	e1cd01b2 	strh	r0, [sp, #18]
40012cdc:	e58d001c 	str	r0, [sp, #28]
40012ce0:	e28d2004 	add	r2, sp, #4
40012ce4:	e3a01004 	mov	r1, #4
40012ce8:	e59f00c8 	ldr	r0, [pc, #200]	; 40012db8 <CyU3PDebugInit+0x178>
40012cec:	eb000a71 	bl	400156b8 <CyU3PDmaChannelCreate>
40012cf0:	e1a05000 	mov	r5, r0
40012cf4:	e3550000 	cmp	r5, #0
40012cf8:	1a000007 	bne	40012d1c <CyU3PDebugInit+0xdc>
40012cfc:	e59f00b8 	ldr	r0, [pc, #184]	; 40012dbc <CyU3PDebugInit+0x17c>
40012d00:	e5900000 	ldr	r0, [r0]
40012d04:	e3500000 	cmp	r0, #0
40012d08:	0a000003 	beq	40012d1c <CyU3PDebugInit+0xdc>
40012d0c:	e3a01001 	mov	r1, #1
40012d10:	e59f00a0 	ldr	r0, [pc, #160]	; 40012db8 <CyU3PDebugInit+0x178>
40012d14:	eb0008d7 	bl	40015078 <CyU3PDmaChannelCacheControl>
40012d18:	e1a05000 	mov	r5, r0
40012d1c:	e3550000 	cmp	r5, #0
40012d20:	1a000003 	bne	40012d34 <CyU3PDebugInit+0xf4>
40012d24:	e3a01000 	mov	r1, #0
40012d28:	e59f0088 	ldr	r0, [pc, #136]	; 40012db8 <CyU3PDebugInit+0x178>
40012d2c:	eb000d97 	bl	40016390 <CyU3PDmaChannelSetXfer>
40012d30:	e1a05000 	mov	r5, r0
40012d34:	e3550000 	cmp	r5, #0
40012d38:	1a000004 	bne	40012d50 <CyU3PDebugInit+0x110>
40012d3c:	e3e02000 	mvn	r2, #0
40012d40:	e59f1078 	ldr	r1, [pc, #120]	; 40012dc0 <CyU3PDebugInit+0x180>
40012d44:	e281000c 	add	r0, r1, #12
40012d48:	eb000c22 	bl	40015dd8 <CyU3PDmaChannelGetBuffer>
40012d4c:	e1a05000 	mov	r5, r0
40012d50:	e3550000 	cmp	r5, #0
40012d54:	0a000005 	beq	40012d70 <CyU3PDebugInit+0x130>
40012d58:	e59f0058 	ldr	r0, [pc, #88]	; 40012db8 <CyU3PDebugInit+0x178>
40012d5c:	eb000b4f 	bl	40015aa0 <CyU3PDmaChannelDestroy>
40012d60:	e59f0048 	ldr	r0, [pc, #72]	; 40012db0 <CyU3PDebugInit+0x170>
40012d64:	ebffdcc0 	bl	4000a06c <_txe_mutex_put>
40012d68:	e1a00005 	mov	r0, r5
40012d6c:	eaffffc0 	b	40012c74 <CyU3PDebugInit+0x34>
40012d70:	e3a00000 	mov	r0, #0
40012d74:	e59f1048 	ldr	r1, [pc, #72]	; 40012dc4 <CyU3PDebugInit+0x184>
40012d78:	e1c100b0 	strh	r0, [r1]
40012d7c:	e59f1044 	ldr	r1, [pc, #68]	; 40012dc8 <CyU3PDebugInit+0x188>
40012d80:	e1c100b0 	strh	r0, [r1]
40012d84:	e59f0040 	ldr	r0, [pc, #64]	; 40012dcc <CyU3PDebugInit+0x18c>
40012d88:	e5c06000 	strb	r6, [r0]
40012d8c:	e3a00001 	mov	r0, #1
40012d90:	e2411010 	sub	r1, r1, #16
40012d94:	e5810000 	str	r0, [r1]
40012d98:	e59f0010 	ldr	r0, [pc, #16]	; 40012db0 <CyU3PDebugInit+0x170>
40012d9c:	ebffdcb2 	bl	4000a06c <_txe_mutex_put>
40012da0:	e1a00005 	mov	r0, r5
40012da4:	eaffffb2 	b	40012c74 <CyU3PDebugInit+0x34>
40012da8:	40030c74 	.word	0x40030c74
40012dac:	40030c78 	.word	0x40030c78
40012db0:	40031314 	.word	0x40031314
40012db4:	00003f01 	.word	0x00003f01
40012db8:	40031358 	.word	0x40031358
40012dbc:	40030c64 	.word	0x40030c64
40012dc0:	4003134c 	.word	0x4003134c
40012dc4:	40030c82 	.word	0x40030c82
40012dc8:	40030c84 	.word	0x40030c84
40012dcc:	40030c80 	.word	0x40030c80

Disassembly of section i.CyU3PDebugIntToStr:

40012dd0 <CyU3PDebugIntToStr>:
40012dd0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012dd4:	e1a04000 	mov	r4, r0
40012dd8:	e1a05001 	mov	r5, r1
40012ddc:	e1a08002 	mov	r8, r2
40012de0:	e3a0600a 	mov	r6, #10
40012de4:	e1a07004 	mov	r7, r4
40012de8:	e3a00000 	mov	r0, #0
40012dec:	e1a04007 	mov	r4, r7
40012df0:	e7c70006 	strb	r0, [r7, r6]
40012df4:	e1a00000 	nop			; (mov r0, r0)
40012df8:	e1a01008 	mov	r1, r8
40012dfc:	e1a00005 	mov	r0, r5
40012e00:	ebfff6c0 	bl	40010908 <__aeabi_uidivmod>
40012e04:	e28f0030 	add	r0, pc, #48	; 0x30
40012e08:	e7d00001 	ldrb	r0, [r0, r1]
40012e0c:	e2461001 	sub	r1, r6, #1
40012e10:	e20110ff 	and	r1, r1, #255	; 0xff
40012e14:	e1a06001 	mov	r6, r1
40012e18:	e7c70001 	strb	r0, [r7, r1]
40012e1c:	e1a01008 	mov	r1, r8
40012e20:	e1a00005 	mov	r0, r5
40012e24:	ebfff6b7 	bl	40010908 <__aeabi_uidivmod>
40012e28:	e1a05000 	mov	r5, r0
40012e2c:	e3550000 	cmp	r5, #0
40012e30:	1afffff0 	bne	40012df8 <CyU3PDebugIntToStr+0x28>
40012e34:	e0870006 	add	r0, r7, r6
40012e38:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40012e3c:	33323130 	.word	0x33323130
40012e40:	37363534 	.word	0x37363534
40012e44:	42413938 	.word	0x42413938
40012e48:	46454443 	.word	0x46454443
40012e4c:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40012e50 <CyU3PDebugPreamble>:
40012e50:	e59f1004 	ldr	r1, [pc, #4]	; 40012e5c <CyU3PDebugPreamble+0xc>
40012e54:	e5810000 	str	r0, [r1]
40012e58:	e12fff1e 	bx	lr
40012e5c:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugPrint:

40012e60 <CyU3PDebugPrint>:
40012e60:	e92d000f 	push	{r0, r1, r2, r3}
40012e64:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012e68:	e24dd028 	sub	sp, sp, #40	; 0x28
40012e6c:	e1a04000 	mov	r4, r0
40012e70:	e59f0200 	ldr	r0, [pc, #512]	; 40013078 <CyU3PDebugPrint+0x218>
40012e74:	e5900000 	ldr	r0, [r0]
40012e78:	e3500000 	cmp	r0, #0
40012e7c:	1a000003 	bne	40012e90 <CyU3PDebugPrint+0x30>
40012e80:	e3a00042 	mov	r0, #66	; 0x42
40012e84:	e28dd028 	add	sp, sp, #40	; 0x28
40012e88:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
40012e8c:	e49df014 	ldr	pc, [sp], #20
40012e90:	e59f01e4 	ldr	r0, [pc, #484]	; 4001307c <CyU3PDebugPrint+0x21c>
40012e94:	e5d00000 	ldrb	r0, [r0]
40012e98:	e1540000 	cmp	r4, r0
40012e9c:	da000001 	ble	40012ea8 <CyU3PDebugPrint+0x48>
40012ea0:	e3a00000 	mov	r0, #0
40012ea4:	eafffff6 	b	40012e84 <CyU3PDebugPrint+0x24>
40012ea8:	ebffd625 	bl	40008744 <_tx_thread_identify>
40012eac:	e1a05000 	mov	r5, r0
40012eb0:	e3550000 	cmp	r5, #0
40012eb4:	1a000001 	bne	40012ec0 <CyU3PDebugPrint+0x60>
40012eb8:	e3a00013 	mov	r0, #19
40012ebc:	eafffff0 	b	40012e84 <CyU3PDebugPrint+0x24>
40012ec0:	e3a03000 	mov	r3, #0
40012ec4:	e58d3004 	str	r3, [sp, #4]
40012ec8:	e58d3008 	str	r3, [sp, #8]
40012ecc:	e58d300c 	str	r3, [sp, #12]
40012ed0:	e58d3010 	str	r3, [sp, #16]
40012ed4:	e58d3000 	str	r3, [sp]
40012ed8:	e1a02003 	mov	r2, r3
40012edc:	e28d1018 	add	r1, sp, #24
40012ee0:	e1a00005 	mov	r0, r5
40012ee4:	ebffde07 	bl	4000a708 <_txe_thread_info_get>
40012ee8:	e59d0018 	ldr	r0, [sp, #24]
40012eec:	e5d00001 	ldrb	r0, [r0, #1]
40012ef0:	e2400030 	sub	r0, r0, #48	; 0x30
40012ef4:	e59d1018 	ldr	r1, [sp, #24]
40012ef8:	e5d11000 	ldrb	r1, [r1]
40012efc:	e2411030 	sub	r1, r1, #48	; 0x30
40012f00:	e3a0200a 	mov	r2, #10
40012f04:	e1000182 	smlabb	r0, r2, r1, r0
40012f08:	e20080ff 	and	r8, r0, #255	; 0xff
40012f0c:	e3e01000 	mvn	r1, #0
40012f10:	e59f0168 	ldr	r0, [pc, #360]	; 40013080 <CyU3PDebugPrint+0x220>
40012f14:	ebffdc1f 	bl	40009f98 <_txe_mutex_get>
40012f18:	e59f0164 	ldr	r0, [pc, #356]	; 40013084 <CyU3PDebugPrint+0x224>
40012f1c:	e1d000b0 	ldrh	r0, [r0]
40012f20:	e3500000 	cmp	r0, #0
40012f24:	0a000011 	beq	40012f70 <CyU3PDebugPrint+0x110>
40012f28:	e3a02000 	mov	r2, #0
40012f2c:	e3a01c01 	mov	r1, #256	; 0x100
40012f30:	e59f0150 	ldr	r0, [pc, #336]	; 40013088 <CyU3PDebugPrint+0x228>
40012f34:	eb000864 	bl	400150cc <CyU3PDmaChannelCommitBuffer>
40012f38:	e1a06000 	mov	r6, r0
40012f3c:	e3560000 	cmp	r6, #0
40012f40:	1a000004 	bne	40012f58 <CyU3PDebugPrint+0xf8>
40012f44:	e3e02000 	mvn	r2, #0
40012f48:	e59f113c 	ldr	r1, [pc, #316]	; 4001308c <CyU3PDebugPrint+0x22c>
40012f4c:	e281000c 	add	r0, r1, #12
40012f50:	eb000ba0 	bl	40015dd8 <CyU3PDmaChannelGetBuffer>
40012f54:	e1a06000 	mov	r6, r0
40012f58:	e3560000 	cmp	r6, #0
40012f5c:	0a000000 	beq	40012f64 <CyU3PDebugPrint+0x104>
40012f60:	ebffff24 	bl	40012bf8 <CyU3PDebugChannelReset>
40012f64:	e3a00000 	mov	r0, #0
40012f68:	e59f1114 	ldr	r1, [pc, #276]	; 40013084 <CyU3PDebugPrint+0x224>
40012f6c:	e1c100b0 	strh	r0, [r1]
40012f70:	e59f0114 	ldr	r0, [pc, #276]	; 4001308c <CyU3PDebugPrint+0x22c>
40012f74:	e5907000 	ldr	r7, [r0]
40012f78:	e3a00c01 	mov	r0, #256	; 0x100
40012f7c:	e58d0014 	str	r0, [sp, #20]
40012f80:	e59f0108 	ldr	r0, [pc, #264]	; 40013090 <CyU3PDebugPrint+0x230>
40012f84:	e5900000 	ldr	r0, [r0]
40012f88:	e3500000 	cmp	r0, #0
40012f8c:	0a000005 	beq	40012fa8 <CyU3PDebugPrint+0x148>
40012f90:	e2877008 	add	r7, r7, #8
40012f94:	e1dd01b4 	ldrh	r0, [sp, #20]
40012f98:	e2400008 	sub	r0, r0, #8
40012f9c:	e1a00800 	lsl	r0, r0, #16
40012fa0:	e1a00820 	lsr	r0, r0, #16
40012fa4:	e58d0014 	str	r0, [sp, #20]
40012fa8:	e28d0048 	add	r0, sp, #72	; 0x48
40012fac:	e58d001c 	str	r0, [sp, #28]
40012fb0:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40012fb4:	e59d301c 	ldr	r3, [sp, #28]
40012fb8:	e28d1014 	add	r1, sp, #20
40012fbc:	e1a00007 	mov	r0, r7
40012fc0:	eb000071 	bl	4001318c <MyDebugSNPrint>
40012fc4:	e1a06000 	mov	r6, r0
40012fc8:	e59f00c0 	ldr	r0, [pc, #192]	; 40013090 <CyU3PDebugPrint+0x230>
40012fcc:	e5900000 	ldr	r0, [r0]
40012fd0:	e3500000 	cmp	r0, #0
40012fd4:	0a00000f 	beq	40013018 <CyU3PDebugPrint+0x1b8>
40012fd8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001308c <CyU3PDebugPrint+0x22c>
40012fdc:	e5907000 	ldr	r7, [r0]
40012fe0:	e5cd4020 	strb	r4, [sp, #32]
40012fe4:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40012fe8:	e3e00000 	mvn	r0, #0
40012fec:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
40012ff0:	e1dd01b4 	ldrh	r0, [sp, #20]
40012ff4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40012ff8:	e3a02008 	mov	r2, #8
40012ffc:	e28d1020 	add	r1, sp, #32
40013000:	e1a00007 	mov	r0, r7
40013004:	ebffc232 	bl	400038d4 <CyU3PMemCopy>
40013008:	e1dd01b4 	ldrh	r0, [sp, #20]
4001300c:	e2800008 	add	r0, r0, #8
40013010:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40013014:	e58d0014 	str	r0, [sp, #20]
40013018:	e3a02000 	mov	r2, #0
4001301c:	e1dd11b4 	ldrh	r1, [sp, #20]
40013020:	e59f0060 	ldr	r0, [pc, #96]	; 40013088 <CyU3PDebugPrint+0x228>
40013024:	eb000828 	bl	400150cc <CyU3PDmaChannelCommitBuffer>
40013028:	e1a06000 	mov	r6, r0
4001302c:	e3560000 	cmp	r6, #0
40013030:	1a000004 	bne	40013048 <CyU3PDebugPrint+0x1e8>
40013034:	e3e02000 	mvn	r2, #0
40013038:	e59f104c 	ldr	r1, [pc, #76]	; 4001308c <CyU3PDebugPrint+0x22c>
4001303c:	e281000c 	add	r0, r1, #12
40013040:	eb000b64 	bl	40015dd8 <CyU3PDmaChannelGetBuffer>
40013044:	e1a06000 	mov	r6, r0
40013048:	e3560000 	cmp	r6, #0
4001304c:	0a000002 	beq	4001305c <CyU3PDebugPrint+0x1fc>
40013050:	ebfffee8 	bl	40012bf8 <CyU3PDebugChannelReset>
40013054:	e1a00006 	mov	r0, r6
40013058:	eaffff89 	b	40012e84 <CyU3PDebugPrint+0x24>
4001305c:	e3a00000 	mov	r0, #0
40013060:	e59f101c 	ldr	r1, [pc, #28]	; 40013084 <CyU3PDebugPrint+0x224>
40013064:	e1c100b0 	strh	r0, [r1]
40013068:	e59f0010 	ldr	r0, [pc, #16]	; 40013080 <CyU3PDebugPrint+0x220>
4001306c:	ebffdbfe 	bl	4000a06c <_txe_mutex_put>
40013070:	e3a00000 	mov	r0, #0
40013074:	eaffff82 	b	40012e84 <CyU3PDebugPrint+0x24>
40013078:	40030c74 	.word	0x40030c74
4001307c:	40030c80 	.word	0x40030c80
40013080:	40031314 	.word	0x40031314
40013084:	40030c84 	.word	0x40030c84
40013088:	40031358 	.word	0x40031358
4001308c:	4003134c 	.word	0x4003134c
40013090:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugThreadEntry:

40013094 <CyU3PDebugThreadEntry>:
40013094:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
40013098:	e1a06000 	mov	r6, r0
4001309c:	e3a05000 	mov	r5, #0
400130a0:	e1a00000 	nop			; (mov r0, r0)
400130a4:	e3e02000 	mvn	r2, #0
400130a8:	e1a0100d 	mov	r1, sp
400130ac:	e59f00c4 	ldr	r0, [pc, #196]	; 40013178 <CyU3PDebugThreadEntry+0xe4>
400130b0:	ebffdcab 	bl	4000a364 <_txe_queue_receive>
400130b4:	e1a04000 	mov	r4, r0
400130b8:	e3540000 	cmp	r4, #0
400130bc:	1afffff8 	bne	400130a4 <CyU3PDebugThreadEntry+0x10>
400130c0:	e3e01000 	mvn	r1, #0
400130c4:	e59f00b0 	ldr	r0, [pc, #176]	; 4001317c <CyU3PDebugThreadEntry+0xe8>
400130c8:	ebffdbb2 	bl	40009f98 <_txe_mutex_get>
400130cc:	e59f00ac 	ldr	r0, [pc, #172]	; 40013180 <CyU3PDebugThreadEntry+0xec>
400130d0:	e1d000b0 	ldrh	r0, [r0]
400130d4:	e3500c01 	cmp	r0, #256	; 0x100
400130d8:	0a000007 	beq	400130fc <CyU3PDebugThreadEntry+0x68>
400130dc:	e59f10a0 	ldr	r1, [pc, #160]	; 40013184 <CyU3PDebugThreadEntry+0xf0>
400130e0:	e5911000 	ldr	r1, [r1]
400130e4:	e59f2094 	ldr	r2, [pc, #148]	; 40013180 <CyU3PDebugThreadEntry+0xec>
400130e8:	e1d220b0 	ldrh	r2, [r2]
400130ec:	e0810002 	add	r0, r1, r2
400130f0:	e3a02008 	mov	r2, #8
400130f4:	e1a0100d 	mov	r1, sp
400130f8:	ebffc1f5 	bl	400038d4 <CyU3PMemCopy>
400130fc:	e59f007c 	ldr	r0, [pc, #124]	; 40013180 <CyU3PDebugThreadEntry+0xec>
40013100:	e1d000b0 	ldrh	r0, [r0]
40013104:	e35000f8 	cmp	r0, #248	; 0xf8
40013108:	1a000015 	bne	40013164 <CyU3PDebugThreadEntry+0xd0>
4001310c:	e3a02000 	mov	r2, #0
40013110:	e3a01c01 	mov	r1, #256	; 0x100
40013114:	e59f006c 	ldr	r0, [pc, #108]	; 40013188 <CyU3PDebugThreadEntry+0xf4>
40013118:	eb0007eb 	bl	400150cc <CyU3PDmaChannelCommitBuffer>
4001311c:	e1a05000 	mov	r5, r0
40013120:	e3550000 	cmp	r5, #0
40013124:	1a000004 	bne	4001313c <CyU3PDebugThreadEntry+0xa8>
40013128:	e3e02000 	mvn	r2, #0
4001312c:	e59f1050 	ldr	r1, [pc, #80]	; 40013184 <CyU3PDebugThreadEntry+0xf0>
40013130:	e281000c 	add	r0, r1, #12
40013134:	eb000b27 	bl	40015dd8 <CyU3PDmaChannelGetBuffer>
40013138:	e1a05000 	mov	r5, r0
4001313c:	e3550000 	cmp	r5, #0
40013140:	0a000004 	beq	40013158 <CyU3PDebugThreadEntry+0xc4>
40013144:	ebfffeab 	bl	40012bf8 <CyU3PDebugChannelReset>
40013148:	e1a05000 	mov	r5, r0
4001314c:	e3550000 	cmp	r5, #0
40013150:	0a000000 	beq	40013158 <CyU3PDebugThreadEntry+0xc4>
40013154:	ea000005 	b	40013170 <CyU3PDebugThreadEntry+0xdc>
40013158:	e3a00000 	mov	r0, #0
4001315c:	e59f101c 	ldr	r1, [pc, #28]	; 40013180 <CyU3PDebugThreadEntry+0xec>
40013160:	e1c100b0 	strh	r0, [r1]
40013164:	e59f0010 	ldr	r0, [pc, #16]	; 4001317c <CyU3PDebugThreadEntry+0xe8>
40013168:	ebffdbbf 	bl	4000a06c <_txe_mutex_put>
4001316c:	eaffffcc 	b	400130a4 <CyU3PDebugThreadEntry+0x10>
40013170:	e1a00000 	nop			; (mov r0, r0)
40013174:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
40013178:	400312d8 	.word	0x400312d8
4001317c:	40031314 	.word	0x40031314
40013180:	40030c84 	.word	0x40030c84
40013184:	4003134c 	.word	0x4003134c
40013188:	40031358 	.word	0x40031358

Disassembly of section i.MyDebugSNPrint:

4001318c <MyDebugSNPrint>:
4001318c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40013190:	e24dd01c 	sub	sp, sp, #28
40013194:	e1a04000 	mov	r4, r0
40013198:	e1a05001 	mov	r5, r1
4001319c:	e1a06002 	mov	r6, r2
400131a0:	e3a08000 	mov	r8, #0
400131a4:	e3a00000 	mov	r0, #0
400131a8:	e58d0018 	str	r0, [sp, #24]
400131ac:	e3a09000 	mov	r9, #0
400131b0:	e1d5b0b0 	ldrh	fp, [r5]
400131b4:	e3540000 	cmp	r4, #0
400131b8:	1a000002 	bne	400131c8 <MyDebugSNPrint+0x3c>
400131bc:	e3a00040 	mov	r0, #64	; 0x40
400131c0:	e28dd02c 	add	sp, sp, #44	; 0x2c
400131c4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400131c8:	e1a07006 	mov	r7, r6
400131cc:	ea00008d 	b	40013408 <MyDebugSNPrint+0x27c>
400131d0:	e24b0002 	sub	r0, fp, #2
400131d4:	e1500009 	cmp	r0, r9
400131d8:	ca000001 	bgt	400131e4 <MyDebugSNPrint+0x58>
400131dc:	e3a00040 	mov	r0, #64	; 0x40
400131e0:	eafffff6 	b	400131c0 <MyDebugSNPrint+0x34>
400131e4:	e5d70000 	ldrb	r0, [r7]
400131e8:	e3500025 	cmp	r0, #37	; 0x25
400131ec:	0a000005 	beq	40013208 <MyDebugSNPrint+0x7c>
400131f0:	e5d71000 	ldrb	r1, [r7]
400131f4:	e1a00009 	mov	r0, r9
400131f8:	e2892001 	add	r2, r9, #1
400131fc:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013200:	e7c41000 	strb	r1, [r4, r0]
40013204:	ea00007e 	b	40013404 <MyDebugSNPrint+0x278>
40013208:	e2877001 	add	r7, r7, #1
4001320c:	e5d70000 	ldrb	r0, [r7]
40013210:	e3500064 	cmp	r0, #100	; 0x64
40013214:	0a000021 	beq	400132a0 <MyDebugSNPrint+0x114>
40013218:	ca000006 	bgt	40013238 <MyDebugSNPrint+0xac>
4001321c:	e3500025 	cmp	r0, #37	; 0x25
40013220:	0a00000b 	beq	40013254 <MyDebugSNPrint+0xc8>
40013224:	e3500058 	cmp	r0, #88	; 0x58
40013228:	0a00004c 	beq	40013360 <MyDebugSNPrint+0x1d4>
4001322c:	e3500063 	cmp	r0, #99	; 0x63
40013230:	1a00005a 	bne	400133a0 <MyDebugSNPrint+0x214>
40013234:	ea00000d 	b	40013270 <MyDebugSNPrint+0xe4>
40013238:	e3500073 	cmp	r0, #115	; 0x73
4001323c:	0a000031 	beq	40013308 <MyDebugSNPrint+0x17c>
40013240:	e3500075 	cmp	r0, #117	; 0x75
40013244:	0a000036 	beq	40013324 <MyDebugSNPrint+0x198>
40013248:	e3500078 	cmp	r0, #120	; 0x78
4001324c:	1a000053 	bne	400133a0 <MyDebugSNPrint+0x214>
40013250:	ea000044 	b	40013368 <MyDebugSNPrint+0x1dc>
40013254:	e1a00000 	nop			; (mov r0, r0)
40013258:	e3a01025 	mov	r1, #37	; 0x25
4001325c:	e1a00009 	mov	r0, r9
40013260:	e2892001 	add	r2, r9, #1
40013264:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013268:	e7c41000 	strb	r1, [r4, r0]
4001326c:	ea00004e 	b	400133ac <MyDebugSNPrint+0x220>
40013270:	e1a00000 	nop			; (mov r0, r0)
40013274:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013278:	e5900000 	ldr	r0, [r0]
4001327c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
40013280:	e2811004 	add	r1, r1, #4
40013284:	e58d1028 	str	r1, [sp, #40]	; 0x28
40013288:	e20010ff 	and	r1, r0, #255	; 0xff
4001328c:	e1a00009 	mov	r0, r9
40013290:	e2892001 	add	r2, r9, #1
40013294:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013298:	e7c41000 	strb	r1, [r4, r0]
4001329c:	ea000042 	b	400133ac <MyDebugSNPrint+0x220>
400132a0:	e1a00000 	nop			; (mov r0, r0)
400132a4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400132a8:	e5900000 	ldr	r0, [r0]
400132ac:	e58d0014 	str	r0, [sp, #20]
400132b0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400132b4:	e2800004 	add	r0, r0, #4
400132b8:	e58d0028 	str	r0, [sp, #40]	; 0x28
400132bc:	e59d0014 	ldr	r0, [sp, #20]
400132c0:	e3500000 	cmp	r0, #0
400132c4:	aa000007 	bge	400132e8 <MyDebugSNPrint+0x15c>
400132c8:	e3a0102d 	mov	r1, #45	; 0x2d
400132cc:	e1a00009 	mov	r0, r9
400132d0:	e2892001 	add	r2, r9, #1
400132d4:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400132d8:	e7c41000 	strb	r1, [r4, r0]
400132dc:	e59d0014 	ldr	r0, [sp, #20]
400132e0:	e2600000 	rsb	r0, r0, #0
400132e4:	e58d0014 	str	r0, [sp, #20]
400132e8:	e3a0200a 	mov	r2, #10
400132ec:	e59d1014 	ldr	r1, [sp, #20]
400132f0:	e28d0004 	add	r0, sp, #4
400132f4:	ebfffeb5 	bl	40012dd0 <CyU3PDebugIntToStr>
400132f8:	e1a08000 	mov	r8, r0
400132fc:	e3a00001 	mov	r0, #1
40013300:	e58d0018 	str	r0, [sp, #24]
40013304:	ea000028 	b	400133ac <MyDebugSNPrint+0x220>
40013308:	e1a00000 	nop			; (mov r0, r0)
4001330c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013310:	e4908004 	ldr	r8, [r0], #4
40013314:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013318:	e3a00001 	mov	r0, #1
4001331c:	e58d0018 	str	r0, [sp, #24]
40013320:	ea000021 	b	400133ac <MyDebugSNPrint+0x220>
40013324:	e1a00000 	nop			; (mov r0, r0)
40013328:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001332c:	e5900000 	ldr	r0, [r0]
40013330:	e58d0010 	str	r0, [sp, #16]
40013334:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013338:	e2800004 	add	r0, r0, #4
4001333c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013340:	e3a0200a 	mov	r2, #10
40013344:	e59d1010 	ldr	r1, [sp, #16]
40013348:	e28d0004 	add	r0, sp, #4
4001334c:	ebfffe9f 	bl	40012dd0 <CyU3PDebugIntToStr>
40013350:	e1a08000 	mov	r8, r0
40013354:	e3a00001 	mov	r0, #1
40013358:	e58d0018 	str	r0, [sp, #24]
4001335c:	ea000012 	b	400133ac <MyDebugSNPrint+0x220>
40013360:	e1a00000 	nop			; (mov r0, r0)
40013364:	e1a00000 	nop			; (mov r0, r0)
40013368:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001336c:	e5900000 	ldr	r0, [r0]
40013370:	e58d0010 	str	r0, [sp, #16]
40013374:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013378:	e2800004 	add	r0, r0, #4
4001337c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013380:	e3a02010 	mov	r2, #16
40013384:	e59d1010 	ldr	r1, [sp, #16]
40013388:	e28d0004 	add	r0, sp, #4
4001338c:	ebfffe8f 	bl	40012dd0 <CyU3PDebugIntToStr>
40013390:	e1a08000 	mov	r8, r0
40013394:	e3a00001 	mov	r0, #1
40013398:	e58d0018 	str	r0, [sp, #24]
4001339c:	ea000002 	b	400133ac <MyDebugSNPrint+0x220>
400133a0:	e1a00000 	nop			; (mov r0, r0)
400133a4:	e3a00040 	mov	r0, #64	; 0x40
400133a8:	eaffff84 	b	400131c0 <MyDebugSNPrint+0x34>
400133ac:	e1a00000 	nop			; (mov r0, r0)
400133b0:	e59d0018 	ldr	r0, [sp, #24]
400133b4:	e3500000 	cmp	r0, #0
400133b8:	0a000010 	beq	40013400 <MyDebugSNPrint+0x274>
400133bc:	e1a00008 	mov	r0, r8
400133c0:	ebfff4fb 	bl	400107b4 <strlen>
400133c4:	e1a0a800 	lsl	sl, r0, #16
400133c8:	e1a0a82a 	lsr	sl, sl, #16
400133cc:	e04b000a 	sub	r0, fp, sl
400133d0:	e2400001 	sub	r0, r0, #1
400133d4:	e1500009 	cmp	r0, r9
400133d8:	ca000001 	bgt	400133e4 <MyDebugSNPrint+0x258>
400133dc:	e3a00040 	mov	r0, #64	; 0x40
400133e0:	eaffff76 	b	400131c0 <MyDebugSNPrint+0x34>
400133e4:	e0840009 	add	r0, r4, r9
400133e8:	e1a01008 	mov	r1, r8
400133ec:	ebfff4b4 	bl	400106c4 <strcpy>
400133f0:	e089000a 	add	r0, r9, sl
400133f4:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400133f8:	e3a00000 	mov	r0, #0
400133fc:	e58d0018 	str	r0, [sp, #24]
40013400:	e1a00000 	nop			; (mov r0, r0)
40013404:	e2877001 	add	r7, r7, #1
40013408:	e5d70000 	ldrb	r0, [r7]
4001340c:	e3500000 	cmp	r0, #0
40013410:	1affff6e 	bne	400131d0 <MyDebugSNPrint+0x44>
40013414:	e3a00000 	mov	r0, #0
40013418:	e7c40009 	strb	r0, [r4, r9]
4001341c:	e1c590b0 	strh	r9, [r5]
40013420:	eaffff66 	b	400131c0 <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

40013424 <CyU3PBusyWait>:
40013424:	ea000006 	b	40013444 <CyU3PBusyWait+0x20>
40013428:	e3a01000 	mov	r1, #0
4001342c:	ea000002 	b	4001343c <CyU3PBusyWait+0x18>
40013430:	e281100a 	add	r1, r1, #10
40013434:	e241100a 	sub	r1, r1, #10
40013438:	e2811001 	add	r1, r1, #1
4001343c:	e351001f 	cmp	r1, #31
40013440:	3afffffa 	bcc	40013430 <CyU3PBusyWait+0xc>
40013444:	e1b02000 	movs	r2, r0
40013448:	e2403001 	sub	r3, r0, #1
4001344c:	e1a00803 	lsl	r0, r3, #16
40013450:	e1a00820 	lsr	r0, r0, #16
40013454:	1afffff3 	bne	40013428 <CyU3PBusyWait+0x4>
40013458:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

4001345c <CyU3PComputeChecksum>:
4001345c:	e92d4010 	push	{r4, lr}
40013460:	e1a03000 	mov	r3, r0
40013464:	e3a00000 	mov	r0, #0
40013468:	e3530000 	cmp	r3, #0
4001346c:	0a000003 	beq	40013480 <CyU3PComputeChecksum+0x24>
40013470:	e3510000 	cmp	r1, #0
40013474:	0a000001 	beq	40013480 <CyU3PComputeChecksum+0x24>
40013478:	e3520000 	cmp	r2, #0
4001347c:	1a000001 	bne	40013488 <CyU3PComputeChecksum+0x2c>
40013480:	e3a00040 	mov	r0, #64	; 0x40
40013484:	ea00000a 	b	400134b4 <CyU3PComputeChecksum+0x58>
40013488:	e3a0e000 	mov	lr, #0
4001348c:	e582e000 	str	lr, [r2]
40013490:	e3a0c000 	mov	ip, #0
40013494:	ea000004 	b	400134ac <CyU3PComputeChecksum+0x50>
40013498:	e592e000 	ldr	lr, [r2]
4001349c:	e793410c 	ldr	r4, [r3, ip, lsl #2]
400134a0:	e08ee004 	add	lr, lr, r4
400134a4:	e582e000 	str	lr, [r2]
400134a8:	e28cc001 	add	ip, ip, #1
400134ac:	e15c0121 	cmp	ip, r1, lsr #2
400134b0:	3afffff8 	bcc	40013498 <CyU3PComputeChecksum+0x3c>
400134b4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

400134b8 <__aeabi_memclr4>:
400134b8:	e92d4030 	push	{r4, r5, lr}
400134bc:	e1a04000 	mov	r4, r0
400134c0:	e1a05001 	mov	r5, r1
400134c4:	e3a02000 	mov	r2, #0
400134c8:	e1a01005 	mov	r1, r5
400134cc:	e1a00004 	mov	r0, r4
400134d0:	eb000020 	bl	40013558 <__aeabi_memset>
400134d4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

400134d8 <__aeabi_memcpy>:
400134d8:	e92d4010 	push	{r4, lr}
400134dc:	e1a03000 	mov	r3, r0
400134e0:	e1a0c001 	mov	ip, r1
400134e4:	e1500001 	cmp	r0, r1
400134e8:	2a000006 	bcs	40013508 <__aeabi_memcpy+0x30>
400134ec:	ea000001 	b	400134f8 <__aeabi_memcpy+0x20>
400134f0:	e4dce001 	ldrb	lr, [ip], #1
400134f4:	e4c3e001 	strb	lr, [r3], #1
400134f8:	e1b0e002 	movs	lr, r2
400134fc:	e2422001 	sub	r2, r2, #1
40013500:	1afffffa 	bne	400134f0 <__aeabi_memcpy+0x18>
40013504:	ea000009 	b	40013530 <__aeabi_memcpy+0x58>
40013508:	e080e002 	add	lr, r0, r2
4001350c:	e24e3001 	sub	r3, lr, #1
40013510:	e081e002 	add	lr, r1, r2
40013514:	e24ec001 	sub	ip, lr, #1
40013518:	ea000001 	b	40013524 <__aeabi_memcpy+0x4c>
4001351c:	e45ce001 	ldrb	lr, [ip], #-1
40013520:	e443e001 	strb	lr, [r3], #-1
40013524:	e1b0e002 	movs	lr, r2
40013528:	e2422001 	sub	r2, r2, #1
4001352c:	1afffffa 	bne	4001351c <__aeabi_memcpy+0x44>
40013530:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013534 <__aeabi_memcpy4>:
40013534:	e92d4070 	push	{r4, r5, r6, lr}
40013538:	e1a04000 	mov	r4, r0
4001353c:	e1a05001 	mov	r5, r1
40013540:	e1a06002 	mov	r6, r2
40013544:	e1a02006 	mov	r2, r6
40013548:	e1a01005 	mov	r1, r5
4001354c:	e1a00004 	mov	r0, r4
40013550:	ebffffe0 	bl	400134d8 <__aeabi_memcpy>
40013554:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

40013558 <__aeabi_memset>:
40013558:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001355c:	e1a03000 	mov	r3, r0
40013560:	ea000000 	b	40013568 <__aeabi_memset+0x10>
40013564:	e4c32001 	strb	r2, [r3], #1
40013568:	e1b0c001 	movs	ip, r1
4001356c:	e2411001 	sub	r1, r1, #1
40013570:	1afffffb 	bne	40013564 <__aeabi_memset+0xc>
40013574:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013578 <CyU3PApplicationDefine>:
40013578:	e92d4010 	push	{r4, lr}
4001357c:	e24dd020 	sub	sp, sp, #32
40013580:	e3e00000 	mvn	r0, #0
40013584:	e59f10b4 	ldr	r1, [pc, #180]	; 40013640 <CyU3PApplicationDefine+0xc8>
40013588:	e5810000 	str	r0, [r1]
4001358c:	e3a00000 	mov	r0, #0
40013590:	e59f10ac 	ldr	r1, [pc, #172]	; 40013644 <CyU3PApplicationDefine+0xcc>
40013594:	e5810000 	str	r0, [r1]
40013598:	ebffc022 	bl	40003628 <CyU3PMemInit>
4001359c:	eb001694 	bl	40018ff4 <CyU3PDmaApplicationDefine>
400135a0:	e3a02028 	mov	r2, #40	; 0x28
400135a4:	e3a01000 	mov	r1, #0
400135a8:	e59f0098 	ldr	r0, [pc, #152]	; 40013648 <CyU3PApplicationDefine+0xd0>
400135ac:	ebffd941 	bl	40009ab8 <_txe_event_flags_create>
400135b0:	e3a00080 	mov	r0, #128	; 0x80
400135b4:	ebffc02e 	bl	40003674 <CyU3PMemAlloc>
400135b8:	e1a04000 	mov	r4, r0
400135bc:	e3a0303c 	mov	r3, #60	; 0x3c
400135c0:	e3a02080 	mov	r2, #128	; 0x80
400135c4:	e1cd20f0 	strd	r2, [sp]
400135c8:	e1a03004 	mov	r3, r4
400135cc:	e3a02006 	mov	r2, #6
400135d0:	e3a01000 	mov	r1, #0
400135d4:	e59f0070 	ldr	r0, [pc, #112]	; 4001364c <CyU3PApplicationDefine+0xd4>
400135d8:	ebffdacb 	bl	4000a10c <_txe_queue_create>
400135dc:	e3a00b01 	mov	r0, #1024	; 0x400
400135e0:	ebffc023 	bl	40003674 <CyU3PMemAlloc>
400135e4:	e1a04000 	mov	r4, r0
400135e8:	e3a030a8 	mov	r3, #168	; 0xa8
400135ec:	e3a02001 	mov	r2, #1
400135f0:	e3a01000 	mov	r1, #0
400135f4:	e3a00004 	mov	r0, #4
400135f8:	e28dc00c 	add	ip, sp, #12
400135fc:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013600:	e3a02b01 	mov	r2, #1024	; 0x400
40013604:	e1a03001 	mov	r3, r1
40013608:	e58d2004 	str	r2, [sp, #4]
4001360c:	e59f203c 	ldr	r2, [pc, #60]	; 40013650 <CyU3PApplicationDefine+0xd8>
40013610:	e28f103c 	add	r1, pc, #60	; 0x3c
40013614:	e58d0008 	str	r0, [sp, #8]
40013618:	e59f0048 	ldr	r0, [pc, #72]	; 40013668 <CyU3PApplicationDefine+0xf0>
4001361c:	e58d4000 	str	r4, [sp]
40013620:	ebffdb9f 	bl	4000a4a4 <_txe_thread_create>
40013624:	eb000082 	bl	40013834 <CyU3PSibApplicationDefine>
40013628:	ebfffd3d 	bl	40012b24 <CyU3PDebugApplicationDefine>
4001362c:	eb001d16 	bl	4001aa8c <CyU3PPibApplicationDefine>
40013630:	eb00013c 	bl	40013b28 <CyU3PLppApplicationDefine>
40013634:	eb002b6f 	bl	4001e3f8 <CyU3PUibApplicationDefine>
40013638:	e28dd020 	add	sp, sp, #32
4001363c:	e8bd8010 	pop	{r4, pc}
40013640:	40030c88 	.word	0x40030c88
40013644:	40030c8c 	.word	0x40030c8c
40013648:	400314a0 	.word	0x400314a0
4001364c:	400314c8 	.word	0x400314c8
40013650:	40013720 	.word	0x40013720
40013654:	535f3230 	.word	0x535f3230
40013658:	45545359 	.word	0x45545359
4001365c:	48545f4d 	.word	0x48545f4d
40013660:	44414552 	.word	0x44414552
40013664:	00000000 	.word	0x00000000
40013668:	400313f8 	.word	0x400313f8

Disassembly of section i.CyU3PSysCheckBootState:

4001366c <CyU3PSysCheckBootState>:
4001366c:	e92d4070 	push	{r4, r5, r6, lr}
40013670:	e3a00000 	mov	r0, #0
40013674:	e59f106c 	ldr	r1, [pc, #108]	; 400136e8 <CyU3PSysCheckBootState+0x7c>
40013678:	e5810000 	str	r0, [r1]
4001367c:	e59f0068 	ldr	r0, [pc, #104]	; 400136ec <CyU3PSysCheckBootState+0x80>
40013680:	e5900000 	ldr	r0, [r0]
40013684:	e3100401 	tst	r0, #16777216	; 0x1000000
40013688:	0a000015 	beq	400136e4 <CyU3PSysCheckBootState+0x78>
4001368c:	e59f005c 	ldr	r0, [pc, #92]	; 400136f0 <CyU3PSysCheckBootState+0x84>
40013690:	e5900000 	ldr	r0, [r0]
40013694:	e3500001 	cmp	r0, #1
40013698:	1a000011 	bne	400136e4 <CyU3PSysCheckBootState+0x78>
4001369c:	e3a00000 	mov	r0, #0
400136a0:	e59f1048 	ldr	r1, [pc, #72]	; 400136f0 <CyU3PSysCheckBootState+0x84>
400136a4:	e5810000 	str	r0, [r1]
400136a8:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400136ac:	e5904004 	ldr	r4, [r0, #4]
400136b0:	e1a05004 	mov	r5, r4
400136b4:	e3a02901 	mov	r2, #16384	; 0x4000
400136b8:	e1a01005 	mov	r1, r5
400136bc:	e3a00000 	mov	r0, #0
400136c0:	ebffc083 	bl	400038d4 <CyU3PMemCopy>
400136c4:	e3a00101 	mov	r0, #1073741824	; 0x40000000
400136c8:	e5900008 	ldr	r0, [r0, #8]
400136cc:	e59f1020 	ldr	r1, [pc, #32]	; 400136f4 <CyU3PSysCheckBootState+0x88>
400136d0:	e1500001 	cmp	r0, r1
400136d4:	1a000002 	bne	400136e4 <CyU3PSysCheckBootState+0x78>
400136d8:	e2840901 	add	r0, r4, #16384	; 0x4000
400136dc:	e59f1004 	ldr	r1, [pc, #4]	; 400136e8 <CyU3PSysCheckBootState+0x7c>
400136e0:	e5810000 	str	r0, [r1]
400136e4:	e8bd8070 	pop	{r4, r5, r6, pc}
400136e8:	40030c90 	.word	0x40030c90
400136ec:	e0050000 	.word	0xe0050000
400136f0:	40030c8c 	.word	0x40030c8c
400136f4:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

400136f8 <CyU3PSysFwMsgHandler>:
400136f8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

400136fc <CyU3PSysModuleInitCompleteEvt>:
400136fc:	e92d4010 	push	{r4, lr}
40013700:	e1a04000 	mov	r4, r0
40013704:	e3a00010 	mov	r0, #16
40013708:	e1a01410 	lsl	r1, r0, r4
4001370c:	e3a02000 	mov	r2, #0
40013710:	e59f0004 	ldr	r0, [pc, #4]	; 4001371c <CyU3PSysModuleInitCompleteEvt+0x20>
40013714:	ebffd987 	bl	40009d38 <_txe_event_flags_set>
40013718:	e8bd8010 	pop	{r4, pc}
4001371c:	400314a0 	.word	0x400314a0

Disassembly of section i.CyU3PSysThreadEntry:

40013720 <CyU3PSysThreadEntry>:
40013720:	e92d4010 	push	{r4, lr}
40013724:	e24dd028 	sub	sp, sp, #40	; 0x28
40013728:	e3a04c02 	mov	r4, #512	; 0x200
4001372c:	e3844080 	orr	r4, r4, #128	; 0x80
40013730:	e3e03000 	mvn	r3, #0
40013734:	e58d3000 	str	r3, [sp]
40013738:	e28d3024 	add	r3, sp, #36	; 0x24
4001373c:	e3a02003 	mov	r2, #3
40013740:	e1a01004 	mov	r1, r4
40013744:	e59f00d8 	ldr	r0, [pc, #216]	; 40013824 <CyU3PSysThreadEntry+0x104>
40013748:	ebffd94a 	bl	40009c78 <_txe_event_flags_get>
4001374c:	e28d2020 	add	r2, sp, #32
40013750:	e3a01000 	mov	r1, #0
40013754:	e59f00cc 	ldr	r0, [pc, #204]	; 40013828 <CyU3PSysThreadEntry+0x108>
40013758:	ebffdc07 	bl	4000a77c <_txe_thread_priority_change>
4001375c:	ebffd34c 	bl	40008494 <CyFxApplicationDefine>
40013760:	e28d2020 	add	r2, sp, #32
40013764:	e3a01004 	mov	r1, #4
40013768:	e59f00b8 	ldr	r0, [pc, #184]	; 40013828 <CyU3PSysThreadEntry+0x108>
4001376c:	ebffdc02 	bl	4000a77c <_txe_thread_priority_change>
40013770:	ea00002a 	b	40013820 <CyU3PSysThreadEntry+0x100>
40013774:	e59f00b0 	ldr	r0, [pc, #176]	; 4001382c <CyU3PSysThreadEntry+0x10c>
40013778:	e5903000 	ldr	r3, [r0]
4001377c:	e58d3000 	str	r3, [sp]
40013780:	e28d3024 	add	r3, sp, #36	; 0x24
40013784:	e3a02001 	mov	r2, #1
40013788:	e3e01000 	mvn	r1, #0
4001378c:	e59f0090 	ldr	r0, [pc, #144]	; 40013824 <CyU3PSysThreadEntry+0x104>
40013790:	ebffd938 	bl	40009c78 <_txe_event_flags_get>
40013794:	e58d0020 	str	r0, [sp, #32]
40013798:	e59d0020 	ldr	r0, [sp, #32]
4001379c:	e3500000 	cmp	r0, #0
400137a0:	0a000000 	beq	400137a8 <CyU3PSysThreadEntry+0x88>
400137a4:	ea00001d 	b	40013820 <CyU3PSysThreadEntry+0x100>
400137a8:	e3a04001 	mov	r4, #1
400137ac:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400137b0:	e0000004 	and	r0, r0, r4
400137b4:	e58d0024 	str	r0, [sp, #36]	; 0x24
400137b8:	ea000014 	b	40013810 <CyU3PSysThreadEntry+0xf0>
400137bc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400137c0:	e3100001 	tst	r0, #1
400137c4:	0a000011 	beq	40013810 <CyU3PSysThreadEntry+0xf0>
400137c8:	e3a02000 	mov	r2, #0
400137cc:	e28d1008 	add	r1, sp, #8
400137d0:	e59f0058 	ldr	r0, [pc, #88]	; 40013830 <CyU3PSysThreadEntry+0x110>
400137d4:	ebffdae2 	bl	4000a364 <_txe_queue_receive>
400137d8:	e58d0020 	str	r0, [sp, #32]
400137dc:	e59d0020 	ldr	r0, [sp, #32]
400137e0:	e3500000 	cmp	r0, #0
400137e4:	1a000006 	bne	40013804 <CyU3PSysThreadEntry+0xe4>
400137e8:	e1dd00b8 	ldrh	r0, [sp, #8]
400137ec:	e2000902 	and	r0, r0, #32768	; 0x8000
400137f0:	e1b007a0 	lsrs	r0, r0, #15
400137f4:	1a000005 	bne	40013810 <CyU3PSysThreadEntry+0xf0>
400137f8:	e28d0008 	add	r0, sp, #8
400137fc:	ebffffbd 	bl	400136f8 <CyU3PSysFwMsgHandler>
40013800:	ea000002 	b	40013810 <CyU3PSysThreadEntry+0xf0>
40013804:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013808:	e3c00001 	bic	r0, r0, #1
4001380c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013810:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013814:	e3500000 	cmp	r0, #0
40013818:	1affffe7 	bne	400137bc <CyU3PSysThreadEntry+0x9c>
4001381c:	e1a00000 	nop			; (mov r0, r0)
40013820:	eaffffd3 	b	40013774 <CyU3PSysThreadEntry+0x54>
40013824:	400314a0 	.word	0x400314a0
40013828:	400313f8 	.word	0x400313f8
4001382c:	40030c88 	.word	0x40030c88
40013830:	400314c8 	.word	0x400314c8

Disassembly of section i.CyU3PSibApplicationDefine:

40013834 <CyU3PSibApplicationDefine>:
40013834:	e92d4010 	push	{r4, lr}
40013838:	e24dd020 	sub	sp, sp, #32
4001383c:	e3a04000 	mov	r4, #0
40013840:	e3a02028 	mov	r2, #40	; 0x28
40013844:	e3a01000 	mov	r1, #0
40013848:	e59f0064 	ldr	r0, [pc, #100]	; 400138b4 <CyU3PSibApplicationDefine+0x80>
4001384c:	ebffd899 	bl	40009ab8 <_txe_event_flags_create>
40013850:	e3a00000 	mov	r0, #0
40013854:	e59f105c 	ldr	r1, [pc, #92]	; 400138b8 <CyU3PSibApplicationDefine+0x84>
40013858:	e5810000 	str	r0, [r1]
4001385c:	e3a00b02 	mov	r0, #2048	; 0x800
40013860:	ebffbf83 	bl	40003674 <CyU3PMemAlloc>
40013864:	e1a04000 	mov	r4, r0
40013868:	e3540000 	cmp	r4, #0
4001386c:	0a00000e 	beq	400138ac <CyU3PSibApplicationDefine+0x78>
40013870:	e3a030a8 	mov	r3, #168	; 0xa8
40013874:	e3a02001 	mov	r2, #1
40013878:	e3a01000 	mov	r1, #0
4001387c:	e3a00004 	mov	r0, #4
40013880:	e28dc00c 	add	ip, sp, #12
40013884:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013888:	e3a02b02 	mov	r2, #2048	; 0x800
4001388c:	e1a03001 	mov	r3, r1
40013890:	e58d2004 	str	r2, [sp, #4]
40013894:	e59f2020 	ldr	r2, [pc, #32]	; 400138bc <CyU3PSibApplicationDefine+0x88>
40013898:	e28f1020 	add	r1, pc, #32
4001389c:	e58d0008 	str	r0, [sp, #8]
400138a0:	e59f0028 	ldr	r0, [pc, #40]	; 400138d0 <CyU3PSibApplicationDefine+0x9c>
400138a4:	e58d4000 	str	r4, [sp]
400138a8:	ebffdafd 	bl	4000a4a4 <_txe_thread_create>
400138ac:	e28dd020 	add	sp, sp, #32
400138b0:	e8bd8010 	pop	{r4, pc}
400138b4:	400315ac 	.word	0x400315ac
400138b8:	40030c94 	.word	0x40030c94
400138bc:	4001392c 	.word	0x4001392c
400138c0:	535f3630 	.word	0x535f3630
400138c4:	545f4249 	.word	0x545f4249
400138c8:	41455248 	.word	0x41455248
400138cc:	00000044 	.word	0x00000044
400138d0:	40031504 	.word	0x40031504

Disassembly of section i.CyU3PSibInitIntfParams:

400138d4 <CyU3PSibInitIntfParams>:
400138d4:	e0802100 	add	r2, r0, r0, lsl #2
400138d8:	e59f3048 	ldr	r3, [pc, #72]	; 40013928 <CyU3PSibInitIntfParams+0x54>
400138dc:	e0831102 	add	r1, r3, r2, lsl #2
400138e0:	e3a020ff 	mov	r2, #255	; 0xff
400138e4:	e5c12000 	strb	r2, [r1]
400138e8:	e3a02002 	mov	r2, #2
400138ec:	e5c12008 	strb	r2, [r1, #8]
400138f0:	e3a02001 	mov	r2, #1
400138f4:	e5c12009 	strb	r2, [r1, #9]
400138f8:	e3a02000 	mov	r2, #0
400138fc:	e5c12010 	strb	r2, [r1, #16]
40013900:	e5c1200a 	strb	r2, [r1, #10]
40013904:	e3a020ff 	mov	r2, #255	; 0xff
40013908:	e5c1200b 	strb	r2, [r1, #11]
4001390c:	e3a02000 	mov	r2, #0
40013910:	e581200c 	str	r2, [r1, #12]
40013914:	e3a02004 	mov	r2, #4
40013918:	e5c12011 	strb	r2, [r1, #17]
4001391c:	e3a02000 	mov	r2, #0
40013920:	e5c12012 	strb	r2, [r1, #18]
40013924:	e12fff1e 	bx	lr
40013928:	400315d4 	.word	0x400315d4

Disassembly of section i.CyU3PSibThreadEntry:

4001392c <CyU3PSibThreadEntry>:
4001392c:	e92d4010 	push	{r4, lr}
40013930:	e3a00000 	mov	r0, #0
40013934:	ebffffe6 	bl	400138d4 <CyU3PSibInitIntfParams>
40013938:	e3a00001 	mov	r0, #1
4001393c:	ebffffe4 	bl	400138d4 <CyU3PSibInitIntfParams>
40013940:	e3a00003 	mov	r0, #3
40013944:	ebffff6c 	bl	400136fc <CyU3PSysModuleInitCompleteEvt>
40013948:	ea000009 	b	40013974 <CyU3PSibThreadEntry+0x48>
4001394c:	e59f0024 	ldr	r0, [pc, #36]	; 40013978 <CyU3PSibThreadEntry+0x4c>
40013950:	e5900000 	ldr	r0, [r0]
40013954:	e3500000 	cmp	r0, #0
40013958:	0a000003 	beq	4001396c <CyU3PSibThreadEntry+0x40>
4001395c:	e59f0014 	ldr	r0, [pc, #20]	; 40013978 <CyU3PSibThreadEntry+0x4c>
40013960:	e5900000 	ldr	r0, [r0]
40013964:	e12fff30 	blx	r0
40013968:	ea000001 	b	40013974 <CyU3PSibThreadEntry+0x48>
4001396c:	e3a0000a 	mov	r0, #10
40013970:	ebffd3f8 	bl	40008958 <_tx_thread_sleep>
40013974:	eafffff4 	b	4001394c <CyU3PSibThreadEntry+0x20>
40013978:	40030c94 	.word	0x40030c94

Disassembly of section i.CyU3PGpioSetClock:

4001397c <CyU3PGpioSetClock>:
4001397c:	e92d4070 	push	{r4, r5, r6, lr}
40013980:	e1a04000 	mov	r4, r0
40013984:	e3a05000 	mov	r5, #0
40013988:	e5d40000 	ldrb	r0, [r4]
4001398c:	e3500002 	cmp	r0, #2
40013990:	ba000002 	blt	400139a0 <CyU3PGpioSetClock+0x24>
40013994:	e5d40000 	ldrb	r0, [r4]
40013998:	e3500010 	cmp	r0, #16
4001399c:	da000001 	ble	400139a8 <CyU3PGpioSetClock+0x2c>
400139a0:	e3a00040 	mov	r0, #64	; 0x40
400139a4:	e8bd8070 	pop	{r4, r5, r6, pc}
400139a8:	e5d40001 	ldrb	r0, [r4, #1]
400139ac:	e3500000 	cmp	r0, #0
400139b0:	1a000004 	bne	400139c8 <CyU3PGpioSetClock+0x4c>
400139b4:	e5940004 	ldr	r0, [r4, #4]
400139b8:	e3500000 	cmp	r0, #0
400139bc:	0a000009 	beq	400139e8 <CyU3PGpioSetClock+0x6c>
400139c0:	e3a00040 	mov	r0, #64	; 0x40
400139c4:	eafffff6 	b	400139a4 <CyU3PGpioSetClock+0x28>
400139c8:	e5d40001 	ldrb	r0, [r4, #1]
400139cc:	e3500002 	cmp	r0, #2
400139d0:	ba000002 	blt	400139e0 <CyU3PGpioSetClock+0x64>
400139d4:	e5d40001 	ldrb	r0, [r4, #1]
400139d8:	e3500040 	cmp	r0, #64	; 0x40
400139dc:	da000001 	ble	400139e8 <CyU3PGpioSetClock+0x6c>
400139e0:	e3a00040 	mov	r0, #64	; 0x40
400139e4:	eaffffee 	b	400139a4 <CyU3PGpioSetClock+0x28>
400139e8:	e5d40009 	ldrb	r0, [r4, #9]
400139ec:	e3500004 	cmp	r0, #4
400139f0:	ba000001 	blt	400139fc <CyU3PGpioSetClock+0x80>
400139f4:	e3a00040 	mov	r0, #64	; 0x40
400139f8:	eaffffe9 	b	400139a4 <CyU3PGpioSetClock+0x28>
400139fc:	e5d40008 	ldrb	r0, [r4, #8]
40013a00:	e3500004 	cmp	r0, #4
40013a04:	ba000001 	blt	40013a10 <CyU3PGpioSetClock+0x94>
40013a08:	e3a00040 	mov	r0, #64	; 0x40
40013a0c:	eaffffe4 	b	400139a4 <CyU3PGpioSetClock+0x28>
40013a10:	e5d40000 	ldrb	r0, [r4]
40013a14:	e2400001 	sub	r0, r0, #1
40013a18:	e5d41009 	ldrb	r1, [r4, #9]
40013a1c:	e1800281 	orr	r0, r0, r1, lsl #5
40013a20:	e5d41008 	ldrb	r1, [r4, #8]
40013a24:	e1800381 	orr	r0, r0, r1, lsl #7
40013a28:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013a2c:	e5940004 	ldr	r0, [r4, #4]
40013a30:	e3500000 	cmp	r0, #0
40013a34:	0a000000 	beq	40013a3c <CyU3PGpioSetClock+0xc0>
40013a38:	e3855010 	orr	r5, r5, #16
40013a3c:	e59f0030 	ldr	r0, [pc, #48]	; 40013a74 <CyU3PGpioSetClock+0xf8>
40013a40:	e5805018 	str	r5, [r0, #24]
40013a44:	e5d40001 	ldrb	r0, [r4, #1]
40013a48:	e3500000 	cmp	r0, #0
40013a4c:	0a000006 	beq	40013a6c <CyU3PGpioSetClock+0xf0>
40013a50:	e3a00001 	mov	r0, #1
40013a54:	ebfffe72 	bl	40013424 <CyU3PBusyWait>
40013a58:	e5d40001 	ldrb	r0, [r4, #1]
40013a5c:	e2400001 	sub	r0, r0, #1
40013a60:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013a64:	e59f1008 	ldr	r1, [pc, #8]	; 40013a74 <CyU3PGpioSetClock+0xf8>
40013a68:	e581001c 	str	r0, [r1, #28]
40013a6c:	e3a00000 	mov	r0, #0
40013a70:	eaffffcb 	b	400139a4 <CyU3PGpioSetClock+0x28>
40013a74:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013a78 <CyU3PI2cSetClock>:
40013a78:	e92d4070 	push	{r4, r5, r6, lr}
40013a7c:	e1a05000 	mov	r5, r0
40013a80:	e3a06000 	mov	r6, #0
40013a84:	e3550000 	cmp	r5, #0
40013a88:	1a000001 	bne	40013a94 <CyU3PI2cSetClock+0x1c>
40013a8c:	e3a00040 	mov	r0, #64	; 0x40
40013a90:	e8bd8070 	pop	{r4, r5, r6, pc}
40013a94:	e0852105 	add	r2, r5, r5, lsl #2
40013a98:	e1a01082 	lsl	r1, r2, #1
40013a9c:	e59f207c 	ldr	r2, [pc, #124]	; 40013b20 <CyU3PI2cSetClock+0xa8>
40013aa0:	e5922000 	ldr	r2, [r2]
40013aa4:	e1a00122 	lsr	r0, r2, #2
40013aa8:	ebfff396 	bl	40010908 <__aeabi_uidivmod>
40013aac:	e1a04000 	mov	r4, r0
40013ab0:	e3140003 	tst	r4, #3
40013ab4:	1a000001 	bne	40013ac0 <CyU3PI2cSetClock+0x48>
40013ab8:	e1a04144 	asr	r4, r4, #2
40013abc:	ea00000a 	b	40013aec <CyU3PI2cSetClock+0x74>
40013ac0:	e2040003 	and	r0, r4, #3
40013ac4:	e3500001 	cmp	r0, #1
40013ac8:	0a000002 	beq	40013ad8 <CyU3PI2cSetClock+0x60>
40013acc:	e2040003 	and	r0, r4, #3
40013ad0:	e3500002 	cmp	r0, #2
40013ad4:	1a000002 	bne	40013ae4 <CyU3PI2cSetClock+0x6c>
40013ad8:	e1a04144 	asr	r4, r4, #2
40013adc:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013ae0:	ea000001 	b	40013aec <CyU3PI2cSetClock+0x74>
40013ae4:	e3a00001 	mov	r0, #1
40013ae8:	e0804144 	add	r4, r0, r4, asr #2
40013aec:	e2444001 	sub	r4, r4, #1
40013af0:	e3540001 	cmp	r4, #1
40013af4:	ba000001 	blt	40013b00 <CyU3PI2cSetClock+0x88>
40013af8:	e3540a01 	cmp	r4, #4096	; 0x1000
40013afc:	ba000001 	blt	40013b08 <CyU3PI2cSetClock+0x90>
40013b00:	e3a00040 	mov	r0, #64	; 0x40
40013b04:	eaffffe1 	b	40013a90 <CyU3PI2cSetClock+0x18>
40013b08:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013b0c:	e1866000 	orr	r6, r6, r0
40013b10:	e59f000c 	ldr	r0, [pc, #12]	; 40013b24 <CyU3PI2cSetClock+0xac>
40013b14:	e5806020 	str	r6, [r0, #32]
40013b18:	e3a00000 	mov	r0, #0
40013b1c:	eaffffdb 	b	40013a90 <CyU3PI2cSetClock+0x18>
40013b20:	40030c54 	.word	0x40030c54
40013b24:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013b28 <CyU3PLppApplicationDefine>:
40013b28:	e92d4010 	push	{r4, lr}
40013b2c:	e24dd020 	sub	sp, sp, #32
40013b30:	e3a00b01 	mov	r0, #1024	; 0x400
40013b34:	ebffbece 	bl	40003674 <CyU3PMemAlloc>
40013b38:	e1a04000 	mov	r4, r0
40013b3c:	e3a030a8 	mov	r3, #168	; 0xa8
40013b40:	e3a02001 	mov	r2, #1
40013b44:	e3a01000 	mov	r1, #0
40013b48:	e3a00004 	mov	r0, #4
40013b4c:	e28dc00c 	add	ip, sp, #12
40013b50:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013b54:	e3a02b01 	mov	r2, #1024	; 0x400
40013b58:	e1a03001 	mov	r3, r1
40013b5c:	e58d2004 	str	r2, [sp, #4]
40013b60:	e59f2054 	ldr	r2, [pc, #84]	; 40013bbc <CyU3PLppApplicationDefine+0x94>
40013b64:	e28f1054 	add	r1, pc, #84	; 0x54
40013b68:	e58d0008 	str	r0, [sp, #8]
40013b6c:	e59f005c 	ldr	r0, [pc, #92]	; 40013bd0 <CyU3PLppApplicationDefine+0xa8>
40013b70:	e58d4000 	str	r4, [sp]
40013b74:	ebffda4a 	bl	4000a4a4 <_txe_thread_create>
40013b78:	e3a02028 	mov	r2, #40	; 0x28
40013b7c:	e3a01000 	mov	r1, #0
40013b80:	e59f004c 	ldr	r0, [pc, #76]	; 40013bd4 <CyU3PLppApplicationDefine+0xac>
40013b84:	ebffd7cb 	bl	40009ab8 <_txe_event_flags_create>
40013b88:	e3a00040 	mov	r0, #64	; 0x40
40013b8c:	ebffbeb8 	bl	40003674 <CyU3PMemAlloc>
40013b90:	e1a04000 	mov	r4, r0
40013b94:	e3a0303c 	mov	r3, #60	; 0x3c
40013b98:	e3a02040 	mov	r2, #64	; 0x40
40013b9c:	e1cd20f0 	strd	r2, [sp]
40013ba0:	e1a03004 	mov	r3, r4
40013ba4:	e3a02005 	mov	r2, #5
40013ba8:	e3a01000 	mov	r1, #0
40013bac:	e59f0024 	ldr	r0, [pc, #36]	; 40013bd8 <CyU3PLppApplicationDefine+0xb0>
40013bb0:	ebffd955 	bl	4000a10c <_txe_queue_create>
40013bb4:	e28dd020 	add	sp, sp, #32
40013bb8:	e8bd8010 	pop	{r4, pc}
40013bbc:	40013f1c 	.word	0x40013f1c
40013bc0:	4c5f3530 	.word	0x4c5f3530
40013bc4:	545f5050 	.word	0x545f5050
40013bc8:	41455248 	.word	0x41455248
40013bcc:	00000044 	.word	0x00000044
40013bd0:	40031638 	.word	0x40031638
40013bd4:	40031610 	.word	0x40031610
40013bd8:	400316e0 	.word	0x400316e0

Disassembly of section i.CyU3PLppEventSend:

40013bdc <CyU3PLppEventSend>:
40013bdc:	e92d4070 	push	{r4, r5, r6, lr}
40013be0:	e1a04000 	mov	r4, r0
40013be4:	e3a02000 	mov	r2, #0
40013be8:	e1a01004 	mov	r1, r4
40013bec:	e59f000c 	ldr	r0, [pc, #12]	; 40013c00 <CyU3PLppEventSend+0x24>
40013bf0:	ebffd850 	bl	40009d38 <_txe_event_flags_set>
40013bf4:	e1a05000 	mov	r5, r0
40013bf8:	e1a00005 	mov	r0, r5
40013bfc:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c00:	40031610 	.word	0x40031610

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40013c04 <CyU3PLppGpioBlockIsOn>:
40013c04:	e59f0004 	ldr	r0, [pc, #4]	; 40013c10 <CyU3PLppGpioBlockIsOn+0xc>
40013c08:	e5900000 	ldr	r0, [r0]
40013c0c:	e12fff1e 	bx	lr
40013c10:	40030c70 	.word	0x40030c70

Disassembly of section i.CyU3PLppInit:

40013c14 <CyU3PLppInit>:
40013c14:	e92d4070 	push	{r4, r5, r6, lr}
40013c18:	e1a04000 	mov	r4, r0
40013c1c:	e1a05001 	mov	r5, r1
40013c20:	e3a06000 	mov	r6, #0
40013c24:	e3a00001 	mov	r0, #1
40013c28:	e59f1174 	ldr	r1, [pc, #372]	; 40013da4 <CyU3PLppInit+0x190>
40013c2c:	e5d11000 	ldrb	r1, [r1]
40013c30:	e1110410 	tst	r1, r0, lsl r4
40013c34:	0a000001 	beq	40013c40 <CyU3PLppInit+0x2c>
40013c38:	e3a00043 	mov	r0, #67	; 0x43
40013c3c:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c40:	e3540001 	cmp	r4, #1
40013c44:	1a000004 	bne	40013c5c <CyU3PLppInit+0x48>
40013c48:	eb000310 	bl	40014890 <CyFx3DevIsI2sSupported>
40013c4c:	e3500000 	cmp	r0, #0
40013c50:	1a000001 	bne	40013c5c <CyU3PLppInit+0x48>
40013c54:	e3a00046 	mov	r0, #70	; 0x46
40013c58:	eafffff7 	b	40013c3c <CyU3PLppInit+0x28>
40013c5c:	e3540005 	cmp	r4, #5
40013c60:	308ff104 	addcc	pc, pc, r4, lsl #2
40013c64:	ea000027 	b	40013d08 <CyU3PLppInit+0xf4>
40013c68:	ea000003 	b	40013c7c <CyU3PLppInit+0x68>
40013c6c:	ea000009 	b	40013c98 <CyU3PLppInit+0x84>
40013c70:	ea00000f 	b	40013cb4 <CyU3PLppInit+0xa0>
40013c74:	ea000015 	b	40013cd0 <CyU3PLppInit+0xbc>
40013c78:	ea00001b 	b	40013cec <CyU3PLppInit+0xd8>
40013c7c:	e1a00000 	nop			; (mov r0, r0)
40013c80:	e59f0120 	ldr	r0, [pc, #288]	; 40013da8 <CyU3PLppInit+0x194>
40013c84:	e5900020 	ldr	r0, [r0, #32]
40013c88:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013c8c:	0a000000 	beq	40013c94 <CyU3PLppInit+0x80>
40013c90:	e3a06001 	mov	r6, #1
40013c94:	ea00001b 	b	40013d08 <CyU3PLppInit+0xf4>
40013c98:	e1a00000 	nop			; (mov r0, r0)
40013c9c:	e59f0104 	ldr	r0, [pc, #260]	; 40013da8 <CyU3PLppInit+0x194>
40013ca0:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40013ca4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013ca8:	0a000000 	beq	40013cb0 <CyU3PLppInit+0x9c>
40013cac:	e3a06001 	mov	r6, #1
40013cb0:	ea000014 	b	40013d08 <CyU3PLppInit+0xf4>
40013cb4:	e1a00000 	nop			; (mov r0, r0)
40013cb8:	e59f00e8 	ldr	r0, [pc, #232]	; 40013da8 <CyU3PLppInit+0x194>
40013cbc:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40013cc0:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013cc4:	0a000000 	beq	40013ccc <CyU3PLppInit+0xb8>
40013cc8:	e3a06001 	mov	r6, #1
40013ccc:	ea00000d 	b	40013d08 <CyU3PLppInit+0xf4>
40013cd0:	e1a00000 	nop			; (mov r0, r0)
40013cd4:	e59f00cc 	ldr	r0, [pc, #204]	; 40013da8 <CyU3PLppInit+0x194>
40013cd8:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40013cdc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013ce0:	0a000000 	beq	40013ce8 <CyU3PLppInit+0xd4>
40013ce4:	e3a06001 	mov	r6, #1
40013ce8:	ea000006 	b	40013d08 <CyU3PLppInit+0xf4>
40013cec:	e1a00000 	nop			; (mov r0, r0)
40013cf0:	e59f00b0 	ldr	r0, [pc, #176]	; 40013da8 <CyU3PLppInit+0x194>
40013cf4:	e5900018 	ldr	r0, [r0, #24]
40013cf8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013cfc:	0a000000 	beq	40013d04 <CyU3PLppInit+0xf0>
40013d00:	e3a06001 	mov	r6, #1
40013d04:	e1a00000 	nop			; (mov r0, r0)
40013d08:	e1a00000 	nop			; (mov r0, r0)
40013d0c:	e3560000 	cmp	r6, #0
40013d10:	1a000001 	bne	40013d1c <CyU3PLppInit+0x108>
40013d14:	e3a00047 	mov	r0, #71	; 0x47
40013d18:	eaffffc7 	b	40013c3c <CyU3PLppInit+0x28>
40013d1c:	e59f0080 	ldr	r0, [pc, #128]	; 40013da4 <CyU3PLppInit+0x190>
40013d20:	e5d00000 	ldrb	r0, [r0]
40013d24:	e3500000 	cmp	r0, #0
40013d28:	1a000017 	bne	40013d8c <CyU3PLppInit+0x178>
40013d2c:	e59f0078 	ldr	r0, [pc, #120]	; 40013dac <CyU3PLppInit+0x198>
40013d30:	e5900000 	ldr	r0, [r0]
40013d34:	e3500000 	cmp	r0, #0
40013d38:	1a000010 	bne	40013d80 <CyU3PLppInit+0x16c>
40013d3c:	e59f006c 	ldr	r0, [pc, #108]	; 40013db0 <CyU3PLppInit+0x19c>
40013d40:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d44:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40013d48:	e59f1060 	ldr	r1, [pc, #96]	; 40013db0 <CyU3PLppInit+0x19c>
40013d4c:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013d50:	e3a0000a 	mov	r0, #10
40013d54:	ebfffdb2 	bl	40013424 <CyU3PBusyWait>
40013d58:	e59f0050 	ldr	r0, [pc, #80]	; 40013db0 <CyU3PLppInit+0x19c>
40013d5c:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d60:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013d64:	e59f1044 	ldr	r1, [pc, #68]	; 40013db0 <CyU3PLppInit+0x19c>
40013d68:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013d6c:	e1a00000 	nop			; (mov r0, r0)
40013d70:	e59f0038 	ldr	r0, [pc, #56]	; 40013db0 <CyU3PLppInit+0x19c>
40013d74:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013d78:	e3100001 	tst	r0, #1
40013d7c:	0afffffb 	beq	40013d70 <CyU3PLppInit+0x15c>
40013d80:	eb000051 	bl	40013ecc <CyU3PLppSocketInit>
40013d84:	e3a00014 	mov	r0, #20
40013d88:	eb003828 	bl	40021e30 <CyU3PVicEnableInt>
40013d8c:	e1a02005 	mov	r2, r5
40013d90:	e3a01001 	mov	r1, #1
40013d94:	e1a00004 	mov	r0, r4
40013d98:	eb0000f1 	bl	40014164 <CyU3UpdateLppActiveInfo>
40013d9c:	e3a00000 	mov	r0, #0
40013da0:	eaffffa5 	b	40013c3c <CyU3PLppInit+0x28>
40013da4:	40030c98 	.word	0x40030c98
40013da8:	e0052000 	.word	0xe0052000
40013dac:	40030c70 	.word	0x40030c70
40013db0:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40013db4 <CyU3PLppRestoreState>:
40013db4:	e92d4070 	push	{r4, r5, r6, lr}
40013db8:	e1a04000 	mov	r4, r0
40013dbc:	e3a00000 	mov	r0, #0
40013dc0:	e59f10ec 	ldr	r1, [pc, #236]	; 40013eb4 <CyU3PLppRestoreState+0x100>
40013dc4:	e5c10000 	strb	r0, [r1]
40013dc8:	e5940000 	ldr	r0, [r4]
40013dcc:	e59f10e4 	ldr	r1, [pc, #228]	; 40013eb8 <CyU3PLppRestoreState+0x104>
40013dd0:	e5810018 	str	r0, [r1, #24]
40013dd4:	e3a00001 	mov	r0, #1
40013dd8:	ebfffd91 	bl	40013424 <CyU3PBusyWait>
40013ddc:	e5940004 	ldr	r0, [r4, #4]
40013de0:	e59f10d0 	ldr	r1, [pc, #208]	; 40013eb8 <CyU3PLppRestoreState+0x104>
40013de4:	e581001c 	str	r0, [r1, #28]
40013de8:	e3a00001 	mov	r0, #1
40013dec:	ebfffd8c 	bl	40013424 <CyU3PBusyWait>
40013df0:	e5940008 	ldr	r0, [r4, #8]
40013df4:	e59f10c0 	ldr	r1, [pc, #192]	; 40013ebc <CyU3PLppRestoreState+0x108>
40013df8:	e581000c 	str	r0, [r1, #12]
40013dfc:	e3a00001 	mov	r0, #1
40013e00:	ebfffd87 	bl	40013424 <CyU3PBusyWait>
40013e04:	e594000c 	ldr	r0, [r4, #12]
40013e08:	e59f10ac 	ldr	r1, [pc, #172]	; 40013ebc <CyU3PLppRestoreState+0x108>
40013e0c:	e5810010 	str	r0, [r1, #16]
40013e10:	e3a00001 	mov	r0, #1
40013e14:	ebfffd82 	bl	40013424 <CyU3PBusyWait>
40013e18:	e5940010 	ldr	r0, [r4, #16]
40013e1c:	e59f1098 	ldr	r1, [pc, #152]	; 40013ebc <CyU3PLppRestoreState+0x108>
40013e20:	e5810008 	str	r0, [r1, #8]
40013e24:	e3a00001 	mov	r0, #1
40013e28:	ebfffd7d 	bl	40013424 <CyU3PBusyWait>
40013e2c:	e3a00004 	mov	r0, #4
40013e30:	e5941014 	ldr	r1, [r4, #20]
40013e34:	ebffff76 	bl	40013c14 <CyU3PLppInit>
40013e38:	e3a00001 	mov	r0, #1
40013e3c:	ebfffd78 	bl	40013424 <CyU3PBusyWait>
40013e40:	e59f0078 	ldr	r0, [pc, #120]	; 40013ec0 <CyU3PLppRestoreState+0x10c>
40013e44:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013e48:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013e4c:	e59f106c 	ldr	r1, [pc, #108]	; 40013ec0 <CyU3PLppRestoreState+0x10c>
40013e50:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40013e54:	e3a0000a 	mov	r0, #10
40013e58:	ebfffd71 	bl	40013424 <CyU3PBusyWait>
40013e5c:	e1a00000 	nop			; (mov r0, r0)
40013e60:	e59f0058 	ldr	r0, [pc, #88]	; 40013ec0 <CyU3PLppRestoreState+0x10c>
40013e64:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013e68:	e3100001 	tst	r0, #1
40013e6c:	0afffffb 	beq	40013e60 <CyU3PLppRestoreState+0xac>
40013e70:	e3a05000 	mov	r5, #0
40013e74:	ea000006 	b	40013e94 <CyU3PLppRestoreState+0xe0>
40013e78:	e2850006 	add	r0, r5, #6
40013e7c:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40013e80:	e59f103c 	ldr	r1, [pc, #60]	; 40013ec4 <CyU3PLppRestoreState+0x110>
40013e84:	e7810105 	str	r0, [r1, r5, lsl #2]
40013e88:	e3a00001 	mov	r0, #1
40013e8c:	ebfffd64 	bl	40013424 <CyU3PBusyWait>
40013e90:	e2855001 	add	r5, r5, #1
40013e94:	e355003d 	cmp	r5, #61	; 0x3d
40013e98:	3afffff6 	bcc	40013e78 <CyU3PLppRestoreState+0xc4>
40013e9c:	e59f0024 	ldr	r0, [pc, #36]	; 40013ec8 <CyU3PLppRestoreState+0x114>
40013ea0:	e5900000 	ldr	r0, [r0]
40013ea4:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40013ea8:	e59f1018 	ldr	r1, [pc, #24]	; 40013ec8 <CyU3PLppRestoreState+0x114>
40013eac:	e5810000 	str	r0, [r1]
40013eb0:	e8bd8070 	pop	{r4, r5, r6, pc}
40013eb4:	40030c98 	.word	0x40030c98
40013eb8:	e0052000 	.word	0xe0052000
40013ebc:	e0051000 	.word	0xe0051000
40013ec0:	e0001000 	.word	0xe0001000
40013ec4:	e0001100 	.word	0xe0001100
40013ec8:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40013ecc <CyU3PLppSocketInit>:
40013ecc:	e3a00000 	mov	r0, #0
40013ed0:	ea00000d 	b	40013f0c <CyU3PLppSocketInit+0x40>
40013ed4:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40013ed8:	e59f2038 	ldr	r2, [pc, #56]	; 40013f18 <CyU3PLppSocketInit+0x4c>
40013edc:	e0822380 	add	r2, r2, r0, lsl #7
40013ee0:	e582100c 	str	r1, [r2, #12]
40013ee4:	e3e01000 	mvn	r1, #0
40013ee8:	e59f2028 	ldr	r2, [pc, #40]	; 40013f18 <CyU3PLppSocketInit+0x4c>
40013eec:	e0822380 	add	r2, r2, r0, lsl #7
40013ef0:	e5821010 	str	r1, [r2, #16]
40013ef4:	e3a01000 	mov	r1, #0
40013ef8:	e59f2018 	ldr	r2, [pc, #24]	; 40013f18 <CyU3PLppSocketInit+0x4c>
40013efc:	e0822380 	add	r2, r2, r0, lsl #7
40013f00:	e5821014 	str	r1, [r2, #20]
40013f04:	e2801001 	add	r1, r0, #1
40013f08:	e20100ff 	and	r0, r1, #255	; 0xff
40013f0c:	e3500008 	cmp	r0, #8
40013f10:	baffffef 	blt	40013ed4 <CyU3PLppSocketInit+0x8>
40013f14:	e12fff1e 	bx	lr
40013f18:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40013f1c <CyU3PLppThreadEntry>:
40013f1c:	e92d4010 	push	{r4, lr}
40013f20:	e24dd020 	sub	sp, sp, #32
40013f24:	e3a00006 	mov	r0, #6
40013f28:	ebfffdf3 	bl	400136fc <CyU3PSysModuleInitCompleteEvt>
40013f2c:	e3a000f1 	mov	r0, #241	; 0xf1
40013f30:	e59f1144 	ldr	r1, [pc, #324]	; 4001407c <CyU3PLppThreadEntry+0x160>
40013f34:	e5810000 	str	r0, [r1]
40013f38:	e1a00000 	nop			; (mov r0, r0)
40013f3c:	e3e03000 	mvn	r3, #0
40013f40:	e58d3000 	str	r3, [sp]
40013f44:	e28d301c 	add	r3, sp, #28
40013f48:	e3a02001 	mov	r2, #1
40013f4c:	e59f0128 	ldr	r0, [pc, #296]	; 4001407c <CyU3PLppThreadEntry+0x160>
40013f50:	e5901000 	ldr	r1, [r0]
40013f54:	e59f0124 	ldr	r0, [pc, #292]	; 40014080 <CyU3PLppThreadEntry+0x164>
40013f58:	ebffd746 	bl	40009c78 <_txe_event_flags_get>
40013f5c:	e1a04000 	mov	r4, r0
40013f60:	e59f1114 	ldr	r1, [pc, #276]	; 4001407c <CyU3PLppThreadEntry+0x160>
40013f64:	e59d001c 	ldr	r0, [sp, #28]
40013f68:	e5911000 	ldr	r1, [r1]
40013f6c:	e0000001 	and	r0, r0, r1
40013f70:	e58d001c 	str	r0, [sp, #28]
40013f74:	e3540000 	cmp	r4, #0
40013f78:	0a000000 	beq	40013f80 <CyU3PLppThreadEntry+0x64>
40013f7c:	eaffffee 	b	40013f3c <CyU3PLppThreadEntry+0x20>
40013f80:	ea000009 	b	40013fac <CyU3PLppThreadEntry+0x90>
40013f84:	e3a02000 	mov	r2, #0
40013f88:	e28d1008 	add	r1, sp, #8
40013f8c:	e59f00f0 	ldr	r0, [pc, #240]	; 40014084 <CyU3PLppThreadEntry+0x168>
40013f90:	ebffd8f3 	bl	4000a364 <_txe_queue_receive>
40013f94:	e1a04000 	mov	r4, r0
40013f98:	e3540000 	cmp	r4, #0
40013f9c:	0a000002 	beq	40013fac <CyU3PLppThreadEntry+0x90>
40013fa0:	e59d001c 	ldr	r0, [sp, #28]
40013fa4:	e3c00001 	bic	r0, r0, #1
40013fa8:	e58d001c 	str	r0, [sp, #28]
40013fac:	e59d001c 	ldr	r0, [sp, #28]
40013fb0:	e3100001 	tst	r0, #1
40013fb4:	1afffff2 	bne	40013f84 <CyU3PLppThreadEntry+0x68>
40013fb8:	e59d001c 	ldr	r0, [sp, #28]
40013fbc:	e3100020 	tst	r0, #32
40013fc0:	0a000008 	beq	40013fe8 <CyU3PLppThreadEntry+0xcc>
40013fc4:	e59f00bc 	ldr	r0, [pc, #188]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40013fc8:	e5900000 	ldr	r0, [r0]
40013fcc:	e3500000 	cmp	r0, #0
40013fd0:	0a000002 	beq	40013fe0 <CyU3PLppThreadEntry+0xc4>
40013fd4:	e59f10ac 	ldr	r1, [pc, #172]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40013fd8:	e5910000 	ldr	r0, [r1]
40013fdc:	e12fff30 	blx	r0
40013fe0:	e3a0000f 	mov	r0, #15
40013fe4:	eb003791 	bl	40021e30 <CyU3PVicEnableInt>
40013fe8:	e59d001c 	ldr	r0, [sp, #28]
40013fec:	e3100010 	tst	r0, #16
40013ff0:	0a000008 	beq	40014018 <CyU3PLppThreadEntry+0xfc>
40013ff4:	e59f008c 	ldr	r0, [pc, #140]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40013ff8:	e5900004 	ldr	r0, [r0, #4]
40013ffc:	e3500000 	cmp	r0, #0
40014000:	0a000002 	beq	40014010 <CyU3PLppThreadEntry+0xf4>
40014004:	e59f107c 	ldr	r1, [pc, #124]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40014008:	e5910004 	ldr	r0, [r1, #4]
4001400c:	e12fff30 	blx	r0
40014010:	e3a00010 	mov	r0, #16
40014014:	eb003785 	bl	40021e30 <CyU3PVicEnableInt>
40014018:	e59d001c 	ldr	r0, [sp, #28]
4001401c:	e3100080 	tst	r0, #128	; 0x80
40014020:	0a000008 	beq	40014048 <CyU3PLppThreadEntry+0x12c>
40014024:	e59f005c 	ldr	r0, [pc, #92]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40014028:	e5900008 	ldr	r0, [r0, #8]
4001402c:	e3500000 	cmp	r0, #0
40014030:	0a000002 	beq	40014040 <CyU3PLppThreadEntry+0x124>
40014034:	e59f104c 	ldr	r1, [pc, #76]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40014038:	e5910008 	ldr	r0, [r1, #8]
4001403c:	e12fff30 	blx	r0
40014040:	e3a00011 	mov	r0, #17
40014044:	eb003779 	bl	40021e30 <CyU3PVicEnableInt>
40014048:	e59d001c 	ldr	r0, [sp, #28]
4001404c:	e3100040 	tst	r0, #64	; 0x40
40014050:	0a000008 	beq	40014078 <CyU3PLppThreadEntry+0x15c>
40014054:	e59f002c 	ldr	r0, [pc, #44]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40014058:	e590000c 	ldr	r0, [r0, #12]
4001405c:	e3500000 	cmp	r0, #0
40014060:	0a000002 	beq	40014070 <CyU3PLppThreadEntry+0x154>
40014064:	e59f101c 	ldr	r1, [pc, #28]	; 40014088 <CyU3PLppThreadEntry+0x16c>
40014068:	e591000c 	ldr	r0, [r1, #12]
4001406c:	e12fff30 	blx	r0
40014070:	e3a00012 	mov	r0, #18
40014074:	eb00376d 	bl	40021e30 <CyU3PVicEnableInt>
40014078:	eaffffaf 	b	40013f3c <CyU3PLppThreadEntry+0x20>
4001407c:	40030c9c 	.word	0x40030c9c
40014080:	40031610 	.word	0x40031610
40014084:	400316e0 	.word	0x400316e0
40014088:	400315fc 	.word	0x400315fc

Disassembly of section i.CyU3PUartSetClock:

4001408c <CyU3PUartSetClock>:
4001408c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014090:	e1a04000 	mov	r4, r0
40014094:	e3a06000 	mov	r6, #0
40014098:	e59f00bc 	ldr	r0, [pc, #188]	; 4001415c <CyU3PUartSetClock+0xd0>
4001409c:	e5907000 	ldr	r7, [r0]
400140a0:	e3540000 	cmp	r4, #0
400140a4:	1a000001 	bne	400140b0 <CyU3PUartSetClock+0x24>
400140a8:	e3a00040 	mov	r0, #64	; 0x40
400140ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400140b0:	e3540f96 	cmp	r4, #600	; 0x258
400140b4:	2a000002 	bcs	400140c4 <CyU3PUartSetClock+0x38>
400140b8:	e59f009c 	ldr	r0, [pc, #156]	; 4001415c <CyU3PUartSetClock+0xd0>
400140bc:	e5900000 	ldr	r0, [r0]
400140c0:	e1a07220 	lsr	r7, r0, #4
400140c4:	e1a01204 	lsl	r1, r4, #4
400140c8:	e1a00107 	lsl	r0, r7, #2
400140cc:	ebfff20d 	bl	40010908 <__aeabi_uidivmod>
400140d0:	e1a05000 	mov	r5, r0
400140d4:	e3150003 	tst	r5, #3
400140d8:	1a000001 	bne	400140e4 <CyU3PUartSetClock+0x58>
400140dc:	e1a05145 	asr	r5, r5, #2
400140e0:	ea00000a 	b	40014110 <CyU3PUartSetClock+0x84>
400140e4:	e2050003 	and	r0, r5, #3
400140e8:	e3500001 	cmp	r0, #1
400140ec:	0a000002 	beq	400140fc <CyU3PUartSetClock+0x70>
400140f0:	e2050003 	and	r0, r5, #3
400140f4:	e3500002 	cmp	r0, #2
400140f8:	1a000002 	bne	40014108 <CyU3PUartSetClock+0x7c>
400140fc:	e1a05145 	asr	r5, r5, #2
40014100:	e3866801 	orr	r6, r6, #65536	; 0x10000
40014104:	ea000001 	b	40014110 <CyU3PUartSetClock+0x84>
40014108:	e3a00001 	mov	r0, #1
4001410c:	e0805145 	add	r5, r0, r5, asr #2
40014110:	e2455001 	sub	r5, r5, #1
40014114:	e3550001 	cmp	r5, #1
40014118:	ba000001 	blt	40014124 <CyU3PUartSetClock+0x98>
4001411c:	e3550801 	cmp	r5, #65536	; 0x10000
40014120:	ba000001 	blt	4001412c <CyU3PUartSetClock+0xa0>
40014124:	e3a00040 	mov	r0, #64	; 0x40
40014128:	eaffffdf 	b	400140ac <CyU3PUartSetClock+0x20>
4001412c:	e3540f96 	cmp	r4, #600	; 0x258
40014130:	2a000002 	bcs	40014140 <CyU3PUartSetClock+0xb4>
40014134:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014138:	e1866000 	orr	r6, r6, r0
4001413c:	ea000002 	b	4001414c <CyU3PUartSetClock+0xc0>
40014140:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
40014144:	e3800806 	orr	r0, r0, #393216	; 0x60000
40014148:	e1866000 	orr	r6, r6, r0
4001414c:	e59f000c 	ldr	r0, [pc, #12]	; 40014160 <CyU3PUartSetClock+0xd4>
40014150:	e5806024 	str	r6, [r0, #36]	; 0x24
40014154:	e3a00000 	mov	r0, #0
40014158:	eaffffd3 	b	400140ac <CyU3PUartSetClock+0x20>
4001415c:	40030c54 	.word	0x40030c54
40014160:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

40014164 <CyU3UpdateLppActiveInfo>:
40014164:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014168:	e1a04000 	mov	r4, r0
4001416c:	e1a05001 	mov	r5, r1
40014170:	e1a06002 	mov	r6, r2
40014174:	e3a00001 	mov	r0, #1
40014178:	e1a00410 	lsl	r0, r0, r4
4001417c:	e20070ff 	and	r7, r0, #255	; 0xff
40014180:	e284000f 	add	r0, r4, #15
40014184:	e20080ff 	and	r8, r0, #255	; 0xff
40014188:	e59f0050 	ldr	r0, [pc, #80]	; 400141e0 <CyU3UpdateLppActiveInfo+0x7c>
4001418c:	e7806104 	str	r6, [r0, r4, lsl #2]
40014190:	e3550000 	cmp	r5, #0
40014194:	0a000009 	beq	400141c0 <CyU3UpdateLppActiveInfo+0x5c>
40014198:	e3560000 	cmp	r6, #0
4001419c:	0a000001 	beq	400141a8 <CyU3UpdateLppActiveInfo+0x44>
400141a0:	e1a00008 	mov	r0, r8
400141a4:	eb003721 	bl	40021e30 <CyU3PVicEnableInt>
400141a8:	e59f0034 	ldr	r0, [pc, #52]	; 400141e4 <CyU3UpdateLppActiveInfo+0x80>
400141ac:	e5d00000 	ldrb	r0, [r0]
400141b0:	e1800007 	orr	r0, r0, r7
400141b4:	e59f1028 	ldr	r1, [pc, #40]	; 400141e4 <CyU3UpdateLppActiveInfo+0x80>
400141b8:	e5c10000 	strb	r0, [r1]
400141bc:	ea000006 	b	400141dc <CyU3UpdateLppActiveInfo+0x78>
400141c0:	e59f001c 	ldr	r0, [pc, #28]	; 400141e4 <CyU3UpdateLppActiveInfo+0x80>
400141c4:	e5d00000 	ldrb	r0, [r0]
400141c8:	e1c00007 	bic	r0, r0, r7
400141cc:	e59f1010 	ldr	r1, [pc, #16]	; 400141e4 <CyU3UpdateLppActiveInfo+0x80>
400141d0:	e5c10000 	strb	r0, [r1]
400141d4:	e1a00008 	mov	r0, r8
400141d8:	eb00370f 	bl	40021e1c <CyU3PVicDisableInt>
400141dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400141e0:	400315fc 	.word	0x400315fc
400141e4:	40030c98 	.word	0x40030c98

Disassembly of section i.CyFx3DevClearSwInterrupt:

400141e8 <CyFx3DevClearSwInterrupt>:
400141e8:	e59f000c 	ldr	r0, [pc, #12]	; 400141fc <CyFx3DevClearSwInterrupt+0x14>
400141ec:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
400141f0:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
400141f4:	e580104c 	str	r1, [r0, #76]	; 0x4c
400141f8:	e12fff1e 	bx	lr
400141fc:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

40014200 <CyFx3DevIOConfigure>:
40014200:	e92d4030 	push	{r4, r5, lr}
40014204:	e1b04000 	movs	r4, r0
40014208:	e24dd024 	sub	sp, sp, #36	; 0x24
4001420c:	0a000045 	beq	40014328 <CyFx3DevIOConfigure+0x128>
40014210:	eb00017b 	bl	40014804 <CyFx3DevIsGpif32Supported>
40014214:	e3500000 	cmp	r0, #0
40014218:	e3a05000 	mov	r5, #0
4001421c:	05845000 	streq	r5, [r4]
40014220:	eb0001ae 	bl	400148e0 <CyFx3DevIsSib0Supported>
40014224:	e3500000 	cmp	r0, #0
40014228:	05c45014 	strbeq	r5, [r4, #20]
4001422c:	eb0001b5 	bl	40014908 <CyFx3DevIsSib1Supported>
40014230:	e3500000 	cmp	r0, #0
40014234:	05c45015 	strbeq	r5, [r4, #21]
40014238:	eb000194 	bl	40014890 <CyFx3DevIsI2sSupported>
4001423c:	e3500000 	cmp	r0, #0
40014240:	1a000002 	bne	40014250 <CyFx3DevIOConfigure+0x50>
40014244:	e594000c 	ldr	r0, [r4, #12]
40014248:	e3500000 	cmp	r0, #0
4001424c:	1a000035 	bne	40014328 <CyFx3DevIOConfigure+0x128>
40014250:	e5940000 	ldr	r0, [r4]
40014254:	e3500000 	cmp	r0, #0
40014258:	0a000009 	beq	40014284 <CyFx3DevIOConfigure+0x84>
4001425c:	e5d40016 	ldrb	r0, [r4, #22]
40014260:	e3500000 	cmp	r0, #0
40014264:	05d40014 	ldrbeq	r0, [r4, #20]
40014268:	03500000 	cmpeq	r0, #0
4001426c:	05d40015 	ldrbeq	r0, [r4, #21]
40014270:	03500000 	cmpeq	r0, #0
40014274:	1a00002b 	bne	40014328 <CyFx3DevIOConfigure+0x128>
40014278:	e3a00002 	mov	r0, #2
4001427c:	e5cd0000 	strb	r0, [sp]
40014280:	ea000022 	b	40014310 <CyFx3DevIOConfigure+0x110>
40014284:	e5d40014 	ldrb	r0, [r4, #20]
40014288:	e3a02003 	mov	r2, #3
4001428c:	e3a03001 	mov	r3, #1
40014290:	e3500000 	cmp	r0, #0
40014294:	05cd2000 	strbeq	r2, [sp]
40014298:	0a000004 	beq	400142b0 <CyFx3DevIOConfigure+0xb0>
4001429c:	e3500001 	cmp	r0, #1
400142a0:	05cd3000 	strbeq	r3, [sp]
400142a4:	0a000001 	beq	400142b0 <CyFx3DevIOConfigure+0xb0>
400142a8:	e3500002 	cmp	r0, #2
400142ac:	05cd5000 	strbeq	r5, [sp]
400142b0:	e5d41015 	ldrb	r1, [r4, #21]
400142b4:	e5d40016 	ldrb	r0, [r4, #22]
400142b8:	e3510002 	cmp	r1, #2
400142bc:	1a000009 	bne	400142e8 <CyFx3DevIOConfigure+0xe8>
400142c0:	e3500004 	cmp	r0, #4
400142c4:	05940004 	ldreq	r0, [r4, #4]
400142c8:	03500000 	cmpeq	r0, #0
400142cc:	05940010 	ldreq	r0, [r4, #16]
400142d0:	03500000 	cmpeq	r0, #0
400142d4:	0594000c 	ldreq	r0, [r4, #12]
400142d8:	03500000 	cmpeq	r0, #0
400142dc:	05cd5001 	strbeq	r5, [sp, #1]
400142e0:	0a000013 	beq	40014334 <CyFx3DevIOConfigure+0x134>
400142e4:	ea00000f 	b	40014328 <CyFx3DevIOConfigure+0x128>
400142e8:	e3500000 	cmp	r0, #0
400142ec:	0a000009 	beq	40014318 <CyFx3DevIOConfigure+0x118>
400142f0:	e3500001 	cmp	r0, #1
400142f4:	13500002 	cmpne	r0, #2
400142f8:	13500003 	cmpne	r0, #3
400142fc:	1a000009 	bne	40014328 <CyFx3DevIOConfigure+0x128>
40014300:	e3510001 	cmp	r1, #1
40014304:	05cd3001 	strbeq	r3, [sp, #1]
40014308:	0a000009 	beq	40014334 <CyFx3DevIOConfigure+0x134>
4001430c:	e3a00004 	mov	r0, #4
40014310:	e5cd0001 	strb	r0, [sp, #1]
40014314:	ea000006 	b	40014334 <CyFx3DevIOConfigure+0x134>
40014318:	e5cd2001 	strb	r2, [sp, #1]
4001431c:	e5d40015 	ldrb	r0, [r4, #21]
40014320:	e3500000 	cmp	r0, #0
40014324:	0a000002 	beq	40014334 <CyFx3DevIOConfigure+0x134>
40014328:	e3a00000 	mov	r0, #0
4001432c:	e28dd024 	add	sp, sp, #36	; 0x24
40014330:	e8bd8030 	pop	{r4, r5, pc}
40014334:	e5940004 	ldr	r0, [r4, #4]
40014338:	e58d0004 	str	r0, [sp, #4]
4001433c:	e594000c 	ldr	r0, [r4, #12]
40014340:	e58d000c 	str	r0, [sp, #12]
40014344:	e5940010 	ldr	r0, [r4, #16]
40014348:	e58d0010 	str	r0, [sp, #16]
4001434c:	e5940008 	ldr	r0, [r4, #8]
40014350:	e58d0008 	str	r0, [sp, #8]
40014354:	e5940018 	ldr	r0, [r4, #24]
40014358:	e58d0014 	str	r0, [sp, #20]
4001435c:	e594001c 	ldr	r0, [r4, #28]
40014360:	e58d0018 	str	r0, [sp, #24]
40014364:	e5940020 	ldr	r0, [r4, #32]
40014368:	e58d001c 	str	r0, [sp, #28]
4001436c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40014370:	e58d0020 	str	r0, [sp, #32]
40014374:	e1a0000d 	mov	r0, sp
40014378:	eb000054 	bl	400144d0 <CyFx3DevIOSetConfig>
4001437c:	eaffffea 	b	4001432c <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

40014380 <CyFx3DevIOIsGpio>:
40014380:	e350003d 	cmp	r0, #61	; 0x3d
40014384:	e3a02000 	mov	r2, #0
40014388:	23a00000 	movcs	r0, #0
4001438c:	212fff1e 	bxcs	lr
40014390:	e3500020 	cmp	r0, #32
40014394:	83a02001 	movhi	r2, #1
40014398:	82400020 	subhi	r0, r0, #32
4001439c:	e59fc018 	ldr	ip, [pc, #24]	; 400143bc <CyFx3DevIOIsGpio+0x3c>
400143a0:	e3510000 	cmp	r1, #0
400143a4:	e08c1102 	add	r1, ip, r2, lsl #2
400143a8:	0591101c 	ldreq	r1, [r1, #28]
400143ac:	15911014 	ldrne	r1, [r1, #20]
400143b0:	e3a03001 	mov	r3, #1
400143b4:	e0010013 	and	r0, r1, r3, lsl r0
400143b8:	e12fff1e 	bx	lr
400143bc:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

400143c0 <CyFx3DevIOIsI2cConfigured>:
400143c0:	e59f0004 	ldr	r0, [pc, #4]	; 400143cc <CyFx3DevIOIsI2cConfigured+0xc>
400143c4:	e5900008 	ldr	r0, [r0, #8]
400143c8:	e12fff1e 	bx	lr
400143cc:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

400143d0 <CyFx3DevIOIsI2sConfigured>:
400143d0:	e59f0004 	ldr	r0, [pc, #4]	; 400143dc <CyFx3DevIOIsI2sConfigured+0xc>
400143d4:	e590000c 	ldr	r0, [r0, #12]
400143d8:	e12fff1e 	bx	lr
400143dc:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

400143e0 <CyFx3DevIOIsSpiConfigured>:
400143e0:	e59f0004 	ldr	r0, [pc, #4]	; 400143ec <CyFx3DevIOIsSpiConfigured+0xc>
400143e4:	e5900010 	ldr	r0, [r0, #16]
400143e8:	e12fff1e 	bx	lr
400143ec:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOIsUartConfigured:

400143f0 <CyFx3DevIOIsUartConfigured>:
400143f0:	e59f0004 	ldr	r0, [pc, #4]	; 400143fc <CyFx3DevIOIsUartConfigured+0xc>
400143f4:	e5900004 	ldr	r0, [r0, #4]
400143f8:	e12fff1e 	bx	lr
400143fc:	40030cb4 	.word	0x40030cb4

Disassembly of section i.CyFx3DevIOSelectGpio:

40014400 <CyFx3DevIOSelectGpio>:
40014400:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014404:	e350003d 	cmp	r0, #61	; 0x3d
40014408:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
4001440c:	e3a08001 	mov	r8, #1
40014410:	e59f30b0 	ldr	r3, [pc, #176]	; 400144c8 <CyFx3DevIOSelectGpio+0xc8>
40014414:	e1a0c018 	lsl	ip, r8, r0
40014418:	e2837014 	add	r7, r3, #20
4001441c:	e89700d0 	ldm	r7, {r4, r6, r7}
40014420:	e5935020 	ldr	r5, [r3, #32]
40014424:	e3510000 	cmp	r1, #0
40014428:	e240e020 	sub	lr, r0, #32
4001442c:	0a00000f 	beq	40014470 <CyFx3DevIOSelectGpio+0x70>
40014430:	e3500020 	cmp	r0, #32
40014434:	2a000005 	bcs	40014450 <CyFx3DevIOSelectGpio+0x50>
40014438:	e3520000 	cmp	r2, #0
4001443c:	0187000c 	orreq	r0, r7, ip
40014440:	0a00000f 	beq	40014484 <CyFx3DevIOSelectGpio+0x84>
40014444:	e184000c 	orr	r0, r4, ip
40014448:	e5830014 	str	r0, [r3, #20]
4001444c:	ea000013 	b	400144a0 <CyFx3DevIOSelectGpio+0xa0>
40014450:	e3520000 	cmp	r2, #0
40014454:	e20e00ff 	and	r0, lr, #255	; 0xff
40014458:	e1a00018 	lsl	r0, r8, r0
4001445c:	01800005 	orreq	r0, r0, r5
40014460:	0a00000d 	beq	4001449c <CyFx3DevIOSelectGpio+0x9c>
40014464:	e1800006 	orr	r0, r0, r6
40014468:	e5830018 	str	r0, [r3, #24]
4001446c:	ea00000b 	b	400144a0 <CyFx3DevIOSelectGpio+0xa0>
40014470:	e3500020 	cmp	r0, #32
40014474:	2a000004 	bcs	4001448c <CyFx3DevIOSelectGpio+0x8c>
40014478:	e1c4000c 	bic	r0, r4, ip
4001447c:	e5830014 	str	r0, [r3, #20]
40014480:	e1c7000c 	bic	r0, r7, ip
40014484:	e583001c 	str	r0, [r3, #28]
40014488:	ea000004 	b	400144a0 <CyFx3DevIOSelectGpio+0xa0>
4001448c:	e1a00e18 	lsl	r0, r8, lr
40014490:	e1c61000 	bic	r1, r6, r0
40014494:	e1c50000 	bic	r0, r5, r0
40014498:	e5831018 	str	r1, [r3, #24]
4001449c:	e5830020 	str	r0, [r3, #32]
400144a0:	e5931014 	ldr	r1, [r3, #20]
400144a4:	e59f0020 	ldr	r0, [pc, #32]	; 400144cc <CyFx3DevIOSelectGpio+0xcc>
400144a8:	e580100c 	str	r1, [r0, #12]
400144ac:	e5931018 	ldr	r1, [r3, #24]
400144b0:	e5801010 	str	r1, [r0, #16]
400144b4:	e593101c 	ldr	r1, [r3, #28]
400144b8:	e5801014 	str	r1, [r0, #20]
400144bc:	e5931020 	ldr	r1, [r3, #32]
400144c0:	e5801018 	str	r1, [r0, #24]
400144c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400144c8:	40030cb4 	.word	0x40030cb4
400144cc:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

400144d0 <CyFx3DevIOSetConfig>:
400144d0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400144d4:	e59f8208 	ldr	r8, [pc, #520]	; 400146e4 <CyFx3DevIOSetConfig+0x214>
400144d8:	e1a05000 	mov	r5, r0
400144dc:	e5980008 	ldr	r0, [r8, #8]
400144e0:	e59f7200 	ldr	r7, [pc, #512]	; 400146e8 <CyFx3DevIOSetConfig+0x218>
400144e4:	e2006002 	and	r6, r0, #2
400144e8:	e5d50000 	ldrb	r0, [r5]
400144ec:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
400144f0:	e3500000 	cmp	r0, #0
400144f4:	01c44944 	biceq	r4, r4, r4, asr #18
400144f8:	0a000008 	beq	40014520 <CyFx3DevIOSetConfig+0x50>
400144fc:	e3500001 	cmp	r0, #1
40014500:	059f41e4 	ldreq	r4, [pc, #484]	; 400146ec <CyFx3DevIOSetConfig+0x21c>
40014504:	0a000005 	beq	40014520 <CyFx3DevIOSetConfig+0x50>
40014508:	e3500002 	cmp	r0, #2
4001450c:	059f41dc 	ldreq	r4, [pc, #476]	; 400146f0 <CyFx3DevIOSetConfig+0x220>
40014510:	0a000001 	beq	4001451c <CyFx3DevIOSetConfig+0x4c>
40014514:	e3500003 	cmp	r0, #3
40014518:	1a000058 	bne	40014680 <CyFx3DevIOSetConfig+0x1b0>
4001451c:	e3866010 	orr	r6, r6, #16
40014520:	e5d50001 	ldrb	r0, [r5, #1]
40014524:	e3500005 	cmp	r0, #5
40014528:	308ff100 	addcc	pc, pc, r0, lsl #2
4001452c:	ea000053 	b	40014680 <CyFx3DevIOSetConfig+0x1b0>
40014530:	ea000003 	b	40014544 <CyFx3DevIOSetConfig+0x74>
40014534:	ea000005 	b	40014550 <CyFx3DevIOSetConfig+0x80>
40014538:	ea000021 	b	400145c4 <CyFx3DevIOSetConfig+0xf4>
4001453c:	ea00002c 	b	400145f4 <CyFx3DevIOSetConfig+0x124>
40014540:	ea000002 	b	40014550 <CyFx3DevIOSetConfig+0x80>
40014544:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
40014548:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
4001454c:	ea000032 	b	4001461c <CyFx3DevIOSetConfig+0x14c>
40014550:	e3500001 	cmp	r0, #1
40014554:	e5950004 	ldr	r0, [r5, #4]
40014558:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
4001455c:	e3500000 	cmp	r0, #0
40014560:	1a000006 	bne	40014580 <CyFx3DevIOSetConfig+0xb0>
40014564:	e5950010 	ldr	r0, [r5, #16]
40014568:	e3500000 	cmp	r0, #0
4001456c:	1a00000b 	bne	400145a0 <CyFx3DevIOSetConfig+0xd0>
40014570:	e595000c 	ldr	r0, [r5, #12]
40014574:	e3500000 	cmp	r0, #0
40014578:	1a00000e 	bne	400145b8 <CyFx3DevIOSetConfig+0xe8>
4001457c:	ea000005 	b	40014598 <CyFx3DevIOSetConfig+0xc8>
40014580:	e595000c 	ldr	r0, [r5, #12]
40014584:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014588:	e3500000 	cmp	r0, #0
4001458c:	05950010 	ldreq	r0, [r5, #16]
40014590:	03500000 	cmpeq	r0, #0
40014594:	1a000039 	bne	40014680 <CyFx3DevIOSetConfig+0x1b0>
40014598:	e3866c01 	orr	r6, r6, #256	; 0x100
4001459c:	ea00001e 	b	4001461c <CyFx3DevIOSetConfig+0x14c>
400145a0:	e595000c 	ldr	r0, [r5, #12]
400145a4:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
400145a8:	e3500000 	cmp	r0, #0
400145ac:	1a000033 	bne	40014680 <CyFx3DevIOSetConfig+0x1b0>
400145b0:	e3866c02 	orr	r6, r6, #512	; 0x200
400145b4:	ea000018 	b	4001461c <CyFx3DevIOSetConfig+0x14c>
400145b8:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
400145bc:	e3866c03 	orr	r6, r6, #768	; 0x300
400145c0:	ea000015 	b	4001461c <CyFx3DevIOSetConfig+0x14c>
400145c4:	e5950010 	ldr	r0, [r5, #16]
400145c8:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
400145cc:	e3500000 	cmp	r0, #0
400145d0:	1a00002a 	bne	40014680 <CyFx3DevIOSetConfig+0x1b0>
400145d4:	e5950004 	ldr	r0, [r5, #4]
400145d8:	e3866c05 	orr	r6, r6, #1280	; 0x500
400145dc:	e3500000 	cmp	r0, #0
400145e0:	e595000c 	ldr	r0, [r5, #12]
400145e4:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
400145e8:	e3500000 	cmp	r0, #0
400145ec:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
400145f0:	ea000009 	b	4001461c <CyFx3DevIOSetConfig+0x14c>
400145f4:	e5950004 	ldr	r0, [r5, #4]
400145f8:	e3866b01 	orr	r6, r6, #1024	; 0x400
400145fc:	e3500000 	cmp	r0, #0
40014600:	e5950010 	ldr	r0, [r5, #16]
40014604:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014608:	e3500000 	cmp	r0, #0
4001460c:	e595000c 	ldr	r0, [r5, #12]
40014610:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014614:	e3500000 	cmp	r0, #0
40014618:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
4001461c:	e5950008 	ldr	r0, [r5, #8]
40014620:	e5959014 	ldr	r9, [r5, #20]
40014624:	e3500000 	cmp	r0, #0
40014628:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
4001462c:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
40014630:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014634:	05950018 	ldreq	r0, [r5, #24]
40014638:	01d00004 	bicseq	r0, r0, r4
4001463c:	0595e01c 	ldreq	lr, [r5, #28]
40014640:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014644:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014648:	0595c020 	ldreq	ip, [r5, #32]
4001464c:	01dc0004 	bicseq	r0, ip, r4
40014650:	1a00000a 	bne	40014680 <CyFx3DevIOSetConfig+0x1b0>
40014654:	e59f0098 	ldr	r0, [pc, #152]	; 400146f4 <CyFx3DevIOSetConfig+0x224>
40014658:	e3a01000 	mov	r1, #0
4001465c:	e01e2000 	ands	r2, lr, r0
40014660:	000c2000 	andeq	r2, ip, r0
40014664:	0a000001 	beq	40014670 <CyFx3DevIOSetConfig+0x1a0>
40014668:	e11c0000 	tst	ip, r0
4001466c:	1a000003 	bne	40014680 <CyFx3DevIOSetConfig+0x1b0>
40014670:	e2523001 	subs	r3, r2, #1
40014674:	13a03001 	movne	r3, #1
40014678:	e1120003 	tst	r2, r3
4001467c:	0a000001 	beq	40014688 <CyFx3DevIOSetConfig+0x1b8>
40014680:	e3a00000 	mov	r0, #0
40014684:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014688:	e2811001 	add	r1, r1, #1
4001468c:	e3510008 	cmp	r1, #8
40014690:	e1a00080 	lsl	r0, r0, #1
40014694:	3afffff0 	bcc	4001465c <CyFx3DevIOSetConfig+0x18c>
40014698:	e588900c 	str	r9, [r8, #12]
4001469c:	e5950018 	ldr	r0, [r5, #24]
400146a0:	e5880010 	str	r0, [r8, #16]
400146a4:	e595001c 	ldr	r0, [r5, #28]
400146a8:	e5880014 	str	r0, [r8, #20]
400146ac:	e5950020 	ldr	r0, [r5, #32]
400146b0:	e5880018 	str	r0, [r8, #24]
400146b4:	e3a00001 	mov	r0, #1
400146b8:	eb0000a6 	bl	40014958 <CyFx3BusyWait>
400146bc:	e5886008 	str	r6, [r8, #8]
400146c0:	e59f0030 	ldr	r0, [pc, #48]	; 400146f8 <CyFx3DevIOSetConfig+0x228>
400146c4:	e3a02024 	mov	r2, #36	; 0x24
400146c8:	e1a01005 	mov	r1, r5
400146cc:	ebfffb98 	bl	40013534 <__aeabi_memcpy4>
400146d0:	e59f0024 	ldr	r0, [pc, #36]	; 400146fc <CyFx3DevIOSetConfig+0x22c>
400146d4:	e5804004 	str	r4, [r0, #4]
400146d8:	e5807000 	str	r7, [r0]
400146dc:	e3a00001 	mov	r0, #1
400146e0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400146e4:	e0051000 	.word	0xe0051000
400146e8:	3fe00000 	.word	0x3fe00000
400146ec:	1ffff9e0 	.word	0x1ffff9e0
400146f0:	1fffe000 	.word	0x1fffe000
400146f4:	01010101 	.word	0x01010101
400146f8:	40030cb4 	.word	0x40030cb4
400146fc:	40030cac 	.word	0x40030cac

Disassembly of section i.CyFx3DevIdentifyPart:

40014700 <CyFx3DevIdentifyPart>:
40014700:	e59f0078 	ldr	r0, [pc, #120]	; 40014780 <CyFx3DevIdentifyPart+0x80>
40014704:	e5901008 	ldr	r1, [r0, #8]
40014708:	e59f2074 	ldr	r2, [pc, #116]	; 40014784 <CyFx3DevIdentifyPart+0x84>
4001470c:	e1a01221 	lsr	r1, r1, #4
40014710:	e5923004 	ldr	r3, [r2, #4]
40014714:	e3530000 	cmp	r3, #0
40014718:	15d20000 	ldrbne	r0, [r2]
4001471c:	112fff1e 	bxne	lr
40014720:	e5900004 	ldr	r0, [r0, #4]
40014724:	e3100040 	tst	r0, #64	; 0x40
40014728:	e59f2058 	ldr	r2, [pc, #88]	; 40014788 <CyFx3DevIdentifyPart+0x88>
4001472c:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
40014730:	e3a00000 	mov	r0, #0
40014734:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014738:	e1530001 	cmp	r3, r1
4001473c:	12800001 	addne	r0, r0, #1
40014740:	120000ff 	andne	r0, r0, #255	; 0xff
40014744:	1350001b 	cmpne	r0, #27
40014748:	3afffff9 	bcc	40014734 <CyFx3DevIdentifyPart+0x34>
4001474c:	e350001b 	cmp	r0, #27
40014750:	03a00003 	moveq	r0, #3
40014754:	0a000000 	beq	4001475c <CyFx3DevIdentifyPart+0x5c>
40014758:	2a000003 	bcs	4001476c <CyFx3DevIdentifyPart+0x6c>
4001475c:	e0821180 	add	r1, r2, r0, lsl #3
40014760:	e5911004 	ldr	r1, [r1, #4]
40014764:	e3110004 	tst	r1, #4
40014768:	112fff1e 	bxne	lr
4001476c:	e59f1018 	ldr	r1, [pc, #24]	; 4001478c <CyFx3DevIdentifyPart+0x8c>
40014770:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014774:	e3822004 	orr	r2, r2, #4
40014778:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
4001477c:	e12fff1e 	bx	lr
40014780:	e0055000 	.word	0xe0055000
40014784:	40030ca0 	.word	0x40030ca0
40014788:	40011b34 	.word	0x40011b34
4001478c:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

40014790 <CyFx3DevInitPageTables>:
40014790:	e92d4030 	push	{r4, r5, lr}
40014794:	e59f0058 	ldr	r0, [pc, #88]	; 400147f4 <CyFx3DevInitPageTables+0x64>
40014798:	e3a04000 	mov	r4, #0
4001479c:	e59f504c 	ldr	r5, [pc, #76]	; 400147f0 <CyFx3DevInitPageTables+0x60>
400147a0:	e5804004 	str	r4, [r0, #4]
400147a4:	ebffffd5 	bl	40014700 <CyFx3DevIdentifyPart>
400147a8:	e59f1048 	ldr	r1, [pc, #72]	; 400147f8 <CyFx3DevInitPageTables+0x68>
400147ac:	e2450a05 	sub	r0, r5, #20480	; 0x5000
400147b0:	e5801000 	str	r1, [r0]
400147b4:	e2811201 	add	r1, r1, #268435456	; 0x10000000
400147b8:	e5801008 	str	r1, [r0, #8]
400147bc:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
400147c0:	e5801010 	str	r1, [r0, #16]
400147c4:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
400147c8:	e5801018 	str	r1, [r0, #24]
400147cc:	e59f1028 	ldr	r1, [pc, #40]	; 400147fc <CyFx3DevInitPageTables+0x6c>
400147d0:	e5801020 	str	r1, [r0, #32]
400147d4:	e59f1024 	ldr	r1, [pc, #36]	; 40014800 <CyFx3DevInitPageTables+0x70>
400147d8:	e580101c 	str	r1, [r0, #28]
400147dc:	e5804024 	str	r4, [r0, #36]	; 0x24
400147e0:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
400147e4:	e3a00003 	mov	r0, #3
400147e8:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
400147ec:	e8bd8030 	pop	{r4, r5, pc}
400147f0:	e0058000 	.word	0xe0058000
400147f4:	40030ca0 	.word	0x40030ca0
400147f8:	00000c12 	.word	0x00000c12
400147fc:	fff00c12 	.word	0xfff00c12
40014800:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014804 <CyFx3DevIsGpif32Supported>:
40014804:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014808:	ebffffbc 	bl	40014700 <CyFx3DevIdentifyPart>
4001480c:	e350001b 	cmp	r0, #27
40014810:	359f1010 	ldrcc	r1, [pc, #16]	; 40014828 <CyFx3DevIsGpif32Supported+0x24>
40014814:	30810180 	addcc	r0, r1, r0, lsl #3
40014818:	35900004 	ldrcc	r0, [r0, #4]
4001481c:	32000010 	andcc	r0, r0, #16
40014820:	23a00000 	movcs	r0, #0
40014824:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014828:	40011b34 	.word	0x40011b34

Disassembly of section i.CyFx3DevIsGpifConfigurable:

4001482c <CyFx3DevIsGpifConfigurable>:
4001482c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014830:	ebffffb2 	bl	40014700 <CyFx3DevIdentifyPart>
40014834:	e350001b 	cmp	r0, #27
40014838:	2a000006 	bcs	40014858 <CyFx3DevIsGpifConfigurable+0x2c>
4001483c:	e59f101c 	ldr	r1, [pc, #28]	; 40014860 <CyFx3DevIsGpifConfigurable+0x34>
40014840:	e0810180 	add	r0, r1, r0, lsl #3
40014844:	e5900004 	ldr	r0, [r0, #4]
40014848:	e3100c0f 	tst	r0, #3840	; 0xf00
4001484c:	159f0010 	ldrne	r0, [pc, #16]	; 40014864 <CyFx3DevIsGpifConfigurable+0x38>
40014850:	15900008 	ldrne	r0, [r0, #8]
40014854:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014858:	e3a00001 	mov	r0, #1
4001485c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014860:	40011b34 	.word	0x40011b34
40014864:	40030ca0 	.word	0x40030ca0

Disassembly of section i.CyFx3DevIsGpifSupported:

40014868 <CyFx3DevIsGpifSupported>:
40014868:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001486c:	ebffffa3 	bl	40014700 <CyFx3DevIdentifyPart>
40014870:	e350001b 	cmp	r0, #27
40014874:	359f1010 	ldrcc	r1, [pc, #16]	; 4001488c <CyFx3DevIsGpifSupported+0x24>
40014878:	30810180 	addcc	r0, r1, r0, lsl #3
4001487c:	35900004 	ldrcc	r0, [r0, #4]
40014880:	32000008 	andcc	r0, r0, #8
40014884:	23a00000 	movcs	r0, #0
40014888:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001488c:	40011b34 	.word	0x40011b34

Disassembly of section i.CyFx3DevIsI2sSupported:

40014890 <CyFx3DevIsI2sSupported>:
40014890:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014894:	ebffff99 	bl	40014700 <CyFx3DevIdentifyPart>
40014898:	e350001b 	cmp	r0, #27
4001489c:	359f1010 	ldrcc	r1, [pc, #16]	; 400148b4 <CyFx3DevIsI2sSupported+0x24>
400148a0:	30810180 	addcc	r0, r1, r0, lsl #3
400148a4:	35900004 	ldrcc	r0, [r0, #4]
400148a8:	32000080 	andcc	r0, r0, #128	; 0x80
400148ac:	23a00000 	movcs	r0, #0
400148b0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148b4:	40011b34 	.word	0x40011b34

Disassembly of section i.CyFx3DevIsOtgSupported:

400148b8 <CyFx3DevIsOtgSupported>:
400148b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148bc:	ebffff8f 	bl	40014700 <CyFx3DevIdentifyPart>
400148c0:	e350001b 	cmp	r0, #27
400148c4:	359f1010 	ldrcc	r1, [pc, #16]	; 400148dc <CyFx3DevIsOtgSupported+0x24>
400148c8:	30810180 	addcc	r0, r1, r0, lsl #3
400148cc:	35900004 	ldrcc	r0, [r0, #4]
400148d0:	32000002 	andcc	r0, r0, #2
400148d4:	23a00000 	movcs	r0, #0
400148d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148dc:	40011b34 	.word	0x40011b34

Disassembly of section i.CyFx3DevIsSib0Supported:

400148e0 <CyFx3DevIsSib0Supported>:
400148e0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148e4:	ebffff85 	bl	40014700 <CyFx3DevIdentifyPart>
400148e8:	e350001b 	cmp	r0, #27
400148ec:	359f1010 	ldrcc	r1, [pc, #16]	; 40014904 <CyFx3DevIsSib0Supported+0x24>
400148f0:	30810180 	addcc	r0, r1, r0, lsl #3
400148f4:	35900004 	ldrcc	r0, [r0, #4]
400148f8:	32000020 	andcc	r0, r0, #32
400148fc:	23a00000 	movcs	r0, #0
40014900:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014904:	40011b34 	.word	0x40011b34

Disassembly of section i.CyFx3DevIsSib1Supported:

40014908 <CyFx3DevIsSib1Supported>:
40014908:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001490c:	ebffff7b 	bl	40014700 <CyFx3DevIdentifyPart>
40014910:	e350001b 	cmp	r0, #27
40014914:	359f1010 	ldrcc	r1, [pc, #16]	; 4001492c <CyFx3DevIsSib1Supported+0x24>
40014918:	30810180 	addcc	r0, r1, r0, lsl #3
4001491c:	35900004 	ldrcc	r0, [r0, #4]
40014920:	32000040 	andcc	r0, r0, #64	; 0x40
40014924:	23a00000 	movcs	r0, #0
40014928:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001492c:	40011b34 	.word	0x40011b34

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014930 <CyFx3DevIsUsb3Supported>:
40014930:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014934:	ebffff71 	bl	40014700 <CyFx3DevIdentifyPart>
40014938:	e350001b 	cmp	r0, #27
4001493c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014954 <CyFx3DevIsUsb3Supported+0x24>
40014940:	30810180 	addcc	r0, r1, r0, lsl #3
40014944:	35900004 	ldrcc	r0, [r0, #4]
40014948:	32000001 	andcc	r0, r0, #1
4001494c:	23a00000 	movcs	r0, #0
40014950:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014954:	40011b34 	.word	0x40011b34

Disassembly of section i.CyFx3BusyWait:

40014958 <CyFx3BusyWait>:
40014958:	ea000003 	b	4001496c <CyFx3BusyWait+0x14>
4001495c:	e3a01000 	mov	r1, #0
40014960:	e2811001 	add	r1, r1, #1
40014964:	e351002f 	cmp	r1, #47	; 0x2f
40014968:	3afffffc 	bcc	40014960 <CyFx3BusyWait+0x8>
4001496c:	e1b01000 	movs	r1, r0
40014970:	e2400001 	sub	r0, r0, #1
40014974:	e1a00800 	lsl	r0, r0, #16
40014978:	e1a00820 	lsr	r0, r0, #16
4001497c:	1afffff6 	bne	4001495c <CyFx3BusyWait+0x4>
40014980:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014984 <CyFx3PibDllEnable>:
40014984:	e59f205c 	ldr	r2, [pc, #92]	; 400149e8 <CyFx3PibDllEnable+0x64>
40014988:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001498c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014990:	e3c00001 	bic	r0, r0, #1
40014994:	e5820028 	str	r0, [r2, #40]	; 0x28
40014998:	e3a00001 	mov	r0, #1
4001499c:	ebffffed 	bl	40014958 <CyFx3BusyWait>
400149a0:	e3a00003 	mov	r0, #3
400149a4:	e5820028 	str	r0, [r2, #40]	; 0x28
400149a8:	e3a00001 	mov	r0, #1
400149ac:	ebffffe9 	bl	40014958 <CyFx3BusyWait>
400149b0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149b4:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
400149b8:	e5820028 	str	r0, [r2, #40]	; 0x28
400149bc:	e3a00001 	mov	r0, #1
400149c0:	ebffffe4 	bl	40014958 <CyFx3BusyWait>
400149c4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149c8:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
400149cc:	e5820028 	str	r0, [r2, #40]	; 0x28
400149d0:	e3a00001 	mov	r0, #1
400149d4:	ebffffdf 	bl	40014958 <CyFx3BusyWait>
400149d8:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149dc:	e3100004 	tst	r0, #4
400149e0:	0afffffc 	beq	400149d8 <CyFx3PibDllEnable+0x54>
400149e4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400149e8:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

400149ec <CyFx3PibGetDllStatus>:
400149ec:	e59f0008 	ldr	r0, [pc, #8]	; 400149fc <CyFx3PibGetDllStatus+0x10>
400149f0:	e5900028 	ldr	r0, [r0, #40]	; 0x28
400149f4:	e2000004 	and	r0, r0, #4
400149f8:	e12fff1e 	bx	lr
400149fc:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014a00 <CyFx3PibPowerOn>:
40014a00:	e92d4010 	push	{r4, lr}
40014a04:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014a08:	ebffff96 	bl	40014868 <CyFx3DevIsGpifSupported>
40014a0c:	e3500000 	cmp	r0, #0
40014a10:	1a000002 	bne	40014a20 <CyFx3PibPowerOn+0x20>
40014a14:	e4940004 	ldr	r0, [r4], #4
40014a18:	e3500000 	cmp	r0, #0
40014a1c:	1afffffc 	bne	40014a14 <CyFx3PibPowerOn+0x14>
40014a20:	e59f2028 	ldr	r2, [pc, #40]	; 40014a50 <CyFx3PibPowerOn+0x50>
40014a24:	e3a00000 	mov	r0, #0
40014a28:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014a2c:	e3a0000a 	mov	r0, #10
40014a30:	ebffffc8 	bl	40014958 <CyFx3BusyWait>
40014a34:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014a38:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014a3c:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014a40:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014a44:	e3100001 	tst	r0, #1
40014a48:	0afffffc 	beq	40014a40 <CyFx3PibPowerOn+0x40>
40014a4c:	e8bd8010 	pop	{r4, pc}
40014a50:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014a54 <CyU3PDmaSocketDisable>:
40014a54:	e3a0c03f 	mov	ip, #63	; 0x3f
40014a58:	e00c1440 	and	r1, ip, r0, asr #8
40014a5c:	e20030ff 	and	r3, r0, #255	; 0xff
40014a60:	e59fc048 	ldr	ip, [pc, #72]	; 40014ab0 <CyU3PDmaSocketDisable+0x5c>
40014a64:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014a68:	e08cc383 	add	ip, ip, r3, lsl #7
40014a6c:	e59c200c 	ldr	r2, [ip, #12]
40014a70:	e3120601 	tst	r2, #1048576	; 0x100000
40014a74:	1a000000 	bne	40014a7c <CyU3PDmaSocketDisable+0x28>
40014a78:	e12fff1e 	bx	lr
40014a7c:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014a80:	e59fc028 	ldr	ip, [pc, #40]	; 40014ab0 <CyU3PDmaSocketDisable+0x5c>
40014a84:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014a88:	e08cc383 	add	ip, ip, r3, lsl #7
40014a8c:	e58c200c 	str	r2, [ip, #12]
40014a90:	e1a00000 	nop			; (mov r0, r0)
40014a94:	e59fc014 	ldr	ip, [pc, #20]	; 40014ab0 <CyU3PDmaSocketDisable+0x5c>
40014a98:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014a9c:	e08cc383 	add	ip, ip, r3, lsl #7
40014aa0:	e59cc00c 	ldr	ip, [ip, #12]
40014aa4:	e31c0601 	tst	ip, #1048576	; 0x100000
40014aa8:	1afffff9 	bne	40014a94 <CyU3PDmaSocketDisable+0x40>
40014aac:	eafffff1 	b	40014a78 <CyU3PDmaSocketDisable+0x24>
40014ab0:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014ab4 <CyU3PDmaSocketGetConfig>:
40014ab4:	e1a02000 	mov	r2, r0
40014ab8:	e3a0003f 	mov	r0, #63	; 0x3f
40014abc:	e0003442 	and	r3, r0, r2, asr #8
40014ac0:	e202c0ff 	and	ip, r2, #255	; 0xff
40014ac4:	e3510000 	cmp	r1, #0
40014ac8:	1a000001 	bne	40014ad4 <CyU3PDmaSocketGetConfig+0x20>
40014acc:	e3a00040 	mov	r0, #64	; 0x40
40014ad0:	e12fff1e 	bx	lr
40014ad4:	e59f0074 	ldr	r0, [pc, #116]	; 40014b50 <CyU3PDmaSocketGetConfig+0x9c>
40014ad8:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014adc:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014ae0:	e5810000 	str	r0, [r1]
40014ae4:	e59f0064 	ldr	r0, [pc, #100]	; 40014b50 <CyU3PDmaSocketGetConfig+0x9c>
40014ae8:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014aec:	e080038c 	add	r0, r0, ip, lsl #7
40014af0:	e5900004 	ldr	r0, [r0, #4]
40014af4:	e5810004 	str	r0, [r1, #4]
40014af8:	e59f0050 	ldr	r0, [pc, #80]	; 40014b50 <CyU3PDmaSocketGetConfig+0x9c>
40014afc:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b00:	e080038c 	add	r0, r0, ip, lsl #7
40014b04:	e5900008 	ldr	r0, [r0, #8]
40014b08:	e5810008 	str	r0, [r1, #8]
40014b0c:	e59f003c 	ldr	r0, [pc, #60]	; 40014b50 <CyU3PDmaSocketGetConfig+0x9c>
40014b10:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b14:	e080038c 	add	r0, r0, ip, lsl #7
40014b18:	e590000c 	ldr	r0, [r0, #12]
40014b1c:	e581000c 	str	r0, [r1, #12]
40014b20:	e59f0028 	ldr	r0, [pc, #40]	; 40014b50 <CyU3PDmaSocketGetConfig+0x9c>
40014b24:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b28:	e080038c 	add	r0, r0, ip, lsl #7
40014b2c:	e5900010 	ldr	r0, [r0, #16]
40014b30:	e5810010 	str	r0, [r1, #16]
40014b34:	e59f0014 	ldr	r0, [pc, #20]	; 40014b50 <CyU3PDmaSocketGetConfig+0x9c>
40014b38:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b3c:	e080038c 	add	r0, r0, ip, lsl #7
40014b40:	e5900014 	ldr	r0, [r0, #20]
40014b44:	e5810014 	str	r0, [r1, #20]
40014b48:	e3a00000 	mov	r0, #0
40014b4c:	eaffffdf 	b	40014ad0 <CyU3PDmaSocketGetConfig+0x1c>
40014b50:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014b54 <CyU3PDmaSocketIsValidConsumer>:
40014b54:	e92d4010 	push	{r4, lr}
40014b58:	e1a01000 	mov	r1, r0
40014b5c:	e3a0003f 	mov	r0, #63	; 0x3f
40014b60:	e0002441 	and	r2, r0, r1, asr #8
40014b64:	e20130ff 	and	r3, r1, #255	; 0xff
40014b68:	e3a04000 	mov	r4, #0
40014b6c:	e3520000 	cmp	r2, #0
40014b70:	0a000006 	beq	40014b90 <CyU3PDmaSocketIsValidConsumer+0x3c>
40014b74:	e3520001 	cmp	r2, #1
40014b78:	0a000009 	beq	40014ba4 <CyU3PDmaSocketIsValidConsumer+0x50>
40014b7c:	e3520002 	cmp	r2, #2
40014b80:	0a00000c 	beq	40014bb8 <CyU3PDmaSocketIsValidConsumer+0x64>
40014b84:	e3520003 	cmp	r2, #3
40014b88:	1a000014 	bne	40014be0 <CyU3PDmaSocketIsValidConsumer+0x8c>
40014b8c:	ea00000e 	b	40014bcc <CyU3PDmaSocketIsValidConsumer+0x78>
40014b90:	e1a00000 	nop			; (mov r0, r0)
40014b94:	e3a0c000 	mov	ip, #0
40014b98:	e3a0e004 	mov	lr, #4
40014b9c:	e59f4080 	ldr	r4, [pc, #128]	; 40014c24 <CyU3PDmaSocketIsValidConsumer+0xd0>
40014ba0:	ea000011 	b	40014bec <CyU3PDmaSocketIsValidConsumer+0x98>
40014ba4:	e1a00000 	nop			; (mov r0, r0)
40014ba8:	e3a0c000 	mov	ip, #0
40014bac:	e3a0e00f 	mov	lr, #15
40014bb0:	e59f4070 	ldr	r4, [pc, #112]	; 40014c28 <CyU3PDmaSocketIsValidConsumer+0xd4>
40014bb4:	ea00000c 	b	40014bec <CyU3PDmaSocketIsValidConsumer+0x98>
40014bb8:	e1a00000 	nop			; (mov r0, r0)
40014bbc:	e3a0c000 	mov	ip, #0
40014bc0:	e3a0e007 	mov	lr, #7
40014bc4:	e59f4060 	ldr	r4, [pc, #96]	; 40014c2c <CyU3PDmaSocketIsValidConsumer+0xd8>
40014bc8:	ea000007 	b	40014bec <CyU3PDmaSocketIsValidConsumer+0x98>
40014bcc:	e1a00000 	nop			; (mov r0, r0)
40014bd0:	e3a0c000 	mov	ip, #0
40014bd4:	e3a0e00f 	mov	lr, #15
40014bd8:	e59f4050 	ldr	r4, [pc, #80]	; 40014c30 <CyU3PDmaSocketIsValidConsumer+0xdc>
40014bdc:	ea000002 	b	40014bec <CyU3PDmaSocketIsValidConsumer+0x98>
40014be0:	e1a00000 	nop			; (mov r0, r0)
40014be4:	e3a00000 	mov	r0, #0
40014be8:	e8bd8010 	pop	{r4, pc}
40014bec:	e1a00000 	nop			; (mov r0, r0)
40014bf0:	e5940000 	ldr	r0, [r4]
40014bf4:	e3100001 	tst	r0, #1
40014bf8:	1a000001 	bne	40014c04 <CyU3PDmaSocketIsValidConsumer+0xb0>
40014bfc:	e3a00000 	mov	r0, #0
40014c00:	eafffff8 	b	40014be8 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c04:	e153000c 	cmp	r3, ip
40014c08:	ba000003 	blt	40014c1c <CyU3PDmaSocketIsValidConsumer+0xc8>
40014c0c:	e153000e 	cmp	r3, lr
40014c10:	ca000001 	bgt	40014c1c <CyU3PDmaSocketIsValidConsumer+0xc8>
40014c14:	e3a00001 	mov	r0, #1
40014c18:	eafffff2 	b	40014be8 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c1c:	e3a00000 	mov	r0, #0
40014c20:	eafffff0 	b	40014be8 <CyU3PDmaSocketIsValidConsumer+0x94>
40014c24:	e0007f04 	.word	0xe0007f04
40014c28:	e0017f04 	.word	0xe0017f04
40014c2c:	e0027f04 	.word	0xe0027f04
40014c30:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40014c34 <CyU3PDmaSocketIsValidProducer>:
40014c34:	e92d4010 	push	{r4, lr}
40014c38:	e1a01000 	mov	r1, r0
40014c3c:	e3a0003f 	mov	r0, #63	; 0x3f
40014c40:	e0002441 	and	r2, r0, r1, asr #8
40014c44:	e20130ff 	and	r3, r1, #255	; 0xff
40014c48:	e3a04000 	mov	r4, #0
40014c4c:	e3520000 	cmp	r2, #0
40014c50:	0a000006 	beq	40014c70 <CyU3PDmaSocketIsValidProducer+0x3c>
40014c54:	e3520001 	cmp	r2, #1
40014c58:	0a000009 	beq	40014c84 <CyU3PDmaSocketIsValidProducer+0x50>
40014c5c:	e3520002 	cmp	r2, #2
40014c60:	0a00000c 	beq	40014c98 <CyU3PDmaSocketIsValidProducer+0x64>
40014c64:	e3520004 	cmp	r2, #4
40014c68:	1a000014 	bne	40014cc0 <CyU3PDmaSocketIsValidProducer+0x8c>
40014c6c:	ea00000e 	b	40014cac <CyU3PDmaSocketIsValidProducer+0x78>
40014c70:	e1a00000 	nop			; (mov r0, r0)
40014c74:	e3a0c005 	mov	ip, #5
40014c78:	e3a0e007 	mov	lr, #7
40014c7c:	e59f4080 	ldr	r4, [pc, #128]	; 40014d04 <CyU3PDmaSocketIsValidProducer+0xd0>
40014c80:	ea000011 	b	40014ccc <CyU3PDmaSocketIsValidProducer+0x98>
40014c84:	e1a00000 	nop			; (mov r0, r0)
40014c88:	e3a0c000 	mov	ip, #0
40014c8c:	e3a0e01f 	mov	lr, #31
40014c90:	e59f4070 	ldr	r4, [pc, #112]	; 40014d08 <CyU3PDmaSocketIsValidProducer+0xd4>
40014c94:	ea00000c 	b	40014ccc <CyU3PDmaSocketIsValidProducer+0x98>
40014c98:	e1a00000 	nop			; (mov r0, r0)
40014c9c:	e3a0c000 	mov	ip, #0
40014ca0:	e3a0e007 	mov	lr, #7
40014ca4:	e59f4060 	ldr	r4, [pc, #96]	; 40014d0c <CyU3PDmaSocketIsValidProducer+0xd8>
40014ca8:	ea000007 	b	40014ccc <CyU3PDmaSocketIsValidProducer+0x98>
40014cac:	e1a00000 	nop			; (mov r0, r0)
40014cb0:	e3a0c000 	mov	ip, #0
40014cb4:	e3a0e00f 	mov	lr, #15
40014cb8:	e59f4050 	ldr	r4, [pc, #80]	; 40014d10 <CyU3PDmaSocketIsValidProducer+0xdc>
40014cbc:	ea000002 	b	40014ccc <CyU3PDmaSocketIsValidProducer+0x98>
40014cc0:	e1a00000 	nop			; (mov r0, r0)
40014cc4:	e3a00000 	mov	r0, #0
40014cc8:	e8bd8010 	pop	{r4, pc}
40014ccc:	e1a00000 	nop			; (mov r0, r0)
40014cd0:	e5940000 	ldr	r0, [r4]
40014cd4:	e3100001 	tst	r0, #1
40014cd8:	1a000001 	bne	40014ce4 <CyU3PDmaSocketIsValidProducer+0xb0>
40014cdc:	e3a00000 	mov	r0, #0
40014ce0:	eafffff8 	b	40014cc8 <CyU3PDmaSocketIsValidProducer+0x94>
40014ce4:	e153000c 	cmp	r3, ip
40014ce8:	ba000003 	blt	40014cfc <CyU3PDmaSocketIsValidProducer+0xc8>
40014cec:	e153000e 	cmp	r3, lr
40014cf0:	ca000001 	bgt	40014cfc <CyU3PDmaSocketIsValidProducer+0xc8>
40014cf4:	e3a00001 	mov	r0, #1
40014cf8:	eafffff2 	b	40014cc8 <CyU3PDmaSocketIsValidProducer+0x94>
40014cfc:	e3a00000 	mov	r0, #0
40014d00:	eafffff0 	b	40014cc8 <CyU3PDmaSocketIsValidProducer+0x94>
40014d04:	e0007f04 	.word	0xe0007f04
40014d08:	e0017f04 	.word	0xe0017f04
40014d0c:	e0027f04 	.word	0xe0027f04
40014d10:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40014d14 <CyU3PDmaSocketSendEvent>:
40014d14:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014d18:	e1a04000 	mov	r4, r0
40014d1c:	e1a05001 	mov	r5, r1
40014d20:	e1a06002 	mov	r6, r2
40014d24:	e3a0003f 	mov	r0, #63	; 0x3f
40014d28:	e0007444 	and	r7, r0, r4, asr #8
40014d2c:	e20480ff 	and	r8, r4, #255	; 0xff
40014d30:	e1a09005 	mov	r9, r5
40014d34:	e3560001 	cmp	r6, #1
40014d38:	1a000000 	bne	40014d40 <CyU3PDmaSocketSendEvent+0x2c>
40014d3c:	e3899801 	orr	r9, r9, #65536	; 0x10000
40014d40:	e59f0010 	ldr	r0, [pc, #16]	; 40014d58 <CyU3PDmaSocketSendEvent+0x44>
40014d44:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40014d48:	e0800388 	add	r0, r0, r8, lsl #7
40014d4c:	e580907c 	str	r9, [r0, #124]	; 0x7c
40014d50:	ebfff6e1 	bl	400128dc <CyU3PSysBarrierSync>
40014d54:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014d58:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketSetConfig:

40014d5c <CyU3PDmaSocketSetConfig>:
40014d5c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014d60:	e1a04000 	mov	r4, r0
40014d64:	e1a05001 	mov	r5, r1
40014d68:	e3a0003f 	mov	r0, #63	; 0x3f
40014d6c:	e0006444 	and	r6, r0, r4, asr #8
40014d70:	e20470ff 	and	r7, r4, #255	; 0xff
40014d74:	e3550000 	cmp	r5, #0
40014d78:	1a000001 	bne	40014d84 <CyU3PDmaSocketSetConfig+0x28>
40014d7c:	e3a00040 	mov	r0, #64	; 0x40
40014d80:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014d84:	e59f1078 	ldr	r1, [pc, #120]	; 40014e04 <CyU3PDmaSocketSetConfig+0xa8>
40014d88:	e5950000 	ldr	r0, [r5]
40014d8c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014d90:	e7810387 	str	r0, [r1, r7, lsl #7]
40014d94:	e59f1068 	ldr	r1, [pc, #104]	; 40014e04 <CyU3PDmaSocketSetConfig+0xa8>
40014d98:	e5950004 	ldr	r0, [r5, #4]
40014d9c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014da0:	e0811387 	add	r1, r1, r7, lsl #7
40014da4:	e5810004 	str	r0, [r1, #4]
40014da8:	e59f1054 	ldr	r1, [pc, #84]	; 40014e04 <CyU3PDmaSocketSetConfig+0xa8>
40014dac:	e5950008 	ldr	r0, [r5, #8]
40014db0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014db4:	e0811387 	add	r1, r1, r7, lsl #7
40014db8:	e5810008 	str	r0, [r1, #8]
40014dbc:	e59f1040 	ldr	r1, [pc, #64]	; 40014e04 <CyU3PDmaSocketSetConfig+0xa8>
40014dc0:	e5950010 	ldr	r0, [r5, #16]
40014dc4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014dc8:	e0811387 	add	r1, r1, r7, lsl #7
40014dcc:	e5810010 	str	r0, [r1, #16]
40014dd0:	e59f102c 	ldr	r1, [pc, #44]	; 40014e04 <CyU3PDmaSocketSetConfig+0xa8>
40014dd4:	e5950014 	ldr	r0, [r5, #20]
40014dd8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ddc:	e0811387 	add	r1, r1, r7, lsl #7
40014de0:	e5810014 	str	r0, [r1, #20]
40014de4:	e59f1018 	ldr	r1, [pc, #24]	; 40014e04 <CyU3PDmaSocketSetConfig+0xa8>
40014de8:	e595000c 	ldr	r0, [r5, #12]
40014dec:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014df0:	e0811387 	add	r1, r1, r7, lsl #7
40014df4:	e581000c 	str	r0, [r1, #12]
40014df8:	ebfff6b7 	bl	400128dc <CyU3PSysBarrierSync>
40014dfc:	e3a00000 	mov	r0, #0
40014e00:	eaffffde 	b	40014d80 <CyU3PDmaSocketSetConfig+0x24>
40014e04:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40014e08 <CyU3PDmaSocketSetWrapUp>:
40014e08:	e3a0c03f 	mov	ip, #63	; 0x3f
40014e0c:	e00c1440 	and	r1, ip, r0, asr #8
40014e10:	e20030ff 	and	r3, r0, #255	; 0xff
40014e14:	e59fc02c 	ldr	ip, [pc, #44]	; 40014e48 <CyU3PDmaSocketSetWrapUp+0x40>
40014e18:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014e1c:	e08cc383 	add	ip, ip, r3, lsl #7
40014e20:	e59c200c 	ldr	r2, [ip, #12]
40014e24:	e3120601 	tst	r2, #1048576	; 0x100000
40014e28:	1a000000 	bne	40014e30 <CyU3PDmaSocketSetWrapUp+0x28>
40014e2c:	e12fff1e 	bx	lr
40014e30:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40014e34:	e59fc00c 	ldr	ip, [pc, #12]	; 40014e48 <CyU3PDmaSocketSetWrapUp+0x40>
40014e38:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014e3c:	e08cc383 	add	ip, ip, r3, lsl #7
40014e40:	e58c200c 	str	r2, [ip, #12]
40014e44:	eafffff8 	b	40014e2c <CyU3PDmaSocketSetWrapUp+0x24>
40014e48:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

40014e4c <CyU3PDmaSocketUpdateStatus>:
40014e4c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014e50:	e1a04000 	mov	r4, r0
40014e54:	e1a05001 	mov	r5, r1
40014e58:	e3a0003f 	mov	r0, #63	; 0x3f
40014e5c:	e0006444 	and	r6, r0, r4, asr #8
40014e60:	e20470ff 	and	r7, r4, #255	; 0xff
40014e64:	e3550000 	cmp	r5, #0
40014e68:	1a000001 	bne	40014e74 <CyU3PDmaSocketUpdateStatus+0x28>
40014e6c:	e3a00040 	mov	r0, #64	; 0x40
40014e70:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014e74:	e59f1040 	ldr	r1, [pc, #64]	; 40014ebc <CyU3PDmaSocketUpdateStatus+0x70>
40014e78:	e5950010 	ldr	r0, [r5, #16]
40014e7c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e80:	e0811387 	add	r1, r1, r7, lsl #7
40014e84:	e5810010 	str	r0, [r1, #16]
40014e88:	e59f102c 	ldr	r1, [pc, #44]	; 40014ebc <CyU3PDmaSocketUpdateStatus+0x70>
40014e8c:	e5950014 	ldr	r0, [r5, #20]
40014e90:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e94:	e0811387 	add	r1, r1, r7, lsl #7
40014e98:	e5810014 	str	r0, [r1, #20]
40014e9c:	e59f1018 	ldr	r1, [pc, #24]	; 40014ebc <CyU3PDmaSocketUpdateStatus+0x70>
40014ea0:	e595000c 	ldr	r0, [r5, #12]
40014ea4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ea8:	e0811387 	add	r1, r1, r7, lsl #7
40014eac:	e581000c 	str	r0, [r1, #12]
40014eb0:	ebfff689 	bl	400128dc <CyU3PSysBarrierSync>
40014eb4:	e3a00000 	mov	r0, #0
40014eb8:	eaffffec 	b	40014e70 <CyU3PDmaSocketUpdateStatus+0x24>
40014ebc:	40030cdc 	.word	0x40030cdc

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40014ec0 <CyU3PDmaUpdateSocketSuspendOption>:
40014ec0:	e92d4070 	push	{r4, r5, r6, lr}
40014ec4:	e24dd018 	sub	sp, sp, #24
40014ec8:	e1a04000 	mov	r4, r0
40014ecc:	e1a06001 	mov	r6, r1
40014ed0:	e1a0100d 	mov	r1, sp
40014ed4:	e1a00004 	mov	r0, r4
40014ed8:	ebfffef5 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40014edc:	e59d000c 	ldr	r0, [sp, #12]
40014ee0:	e2000702 	and	r0, r0, #524288	; 0x80000
40014ee4:	e1a059a0 	lsr	r5, r0, #19
40014ee8:	e3550001 	cmp	r5, #1
40014eec:	1a000010 	bne	40014f34 <CyU3PDmaUpdateSocketSuspendOption+0x74>
40014ef0:	e59d000c 	ldr	r0, [sp, #12]
40014ef4:	e3100101 	tst	r0, #1073741824	; 0x40000000
40014ef8:	1a00000a 	bne	40014f28 <CyU3PDmaUpdateSocketSuspendOption+0x68>
40014efc:	e59d000c 	ldr	r0, [sp, #12]
40014f00:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014f04:	e58d000c 	str	r0, [sp, #12]
40014f08:	e3a00000 	mov	r0, #0
40014f0c:	e58d0010 	str	r0, [sp, #16]
40014f10:	e1a0100d 	mov	r1, sp
40014f14:	e1a00004 	mov	r0, r4
40014f18:	ebffffcb 	bl	40014e4c <CyU3PDmaSocketUpdateStatus>
40014f1c:	e1a0100d 	mov	r1, sp
40014f20:	e1a00004 	mov	r0, r4
40014f24:	ebfffee2 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40014f28:	e3a00000 	mov	r0, #0
40014f2c:	e58d0010 	str	r0, [sp, #16]
40014f30:	ea000004 	b	40014f48 <CyU3PDmaUpdateSocketSuspendOption+0x88>
40014f34:	e59d000c 	ldr	r0, [sp, #12]
40014f38:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014f3c:	e58d000c 	str	r0, [sp, #12]
40014f40:	e3a00e12 	mov	r0, #288	; 0x120
40014f44:	e58d0010 	str	r0, [sp, #16]
40014f48:	e59d000c 	ldr	r0, [sp, #12]
40014f4c:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
40014f50:	e58d000c 	str	r0, [sp, #12]
40014f54:	e59d0014 	ldr	r0, [sp, #20]
40014f58:	e3c00e12 	bic	r0, r0, #288	; 0x120
40014f5c:	e58d0014 	str	r0, [sp, #20]
40014f60:	e3560000 	cmp	r6, #0
40014f64:	0a000006 	beq	40014f84 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
40014f68:	e3560001 	cmp	r6, #1
40014f6c:	0a000006 	beq	40014f8c <CyU3PDmaUpdateSocketSuspendOption+0xcc>
40014f70:	e3560002 	cmp	r6, #2
40014f74:	0a00000e 	beq	40014fb4 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40014f78:	e3560003 	cmp	r6, #3
40014f7c:	1a000020 	bne	40015004 <CyU3PDmaUpdateSocketSuspendOption+0x144>
40014f80:	ea000015 	b	40014fdc <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40014f84:	e1a00000 	nop			; (mov r0, r0)
40014f88:	ea00001f 	b	4001500c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014f8c:	e1a00000 	nop			; (mov r0, r0)
40014f90:	e59d000c 	ldr	r0, [sp, #12]
40014f94:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40014f98:	e58d000c 	str	r0, [sp, #12]
40014f9c:	e3550000 	cmp	r5, #0
40014fa0:	1a000002 	bne	40014fb0 <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40014fa4:	e59d0014 	ldr	r0, [sp, #20]
40014fa8:	e3800020 	orr	r0, r0, #32
40014fac:	e58d0014 	str	r0, [sp, #20]
40014fb0:	ea000015 	b	4001500c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014fb4:	e1a00000 	nop			; (mov r0, r0)
40014fb8:	e3550000 	cmp	r5, #0
40014fbc:	1a000005 	bne	40014fd8 <CyU3PDmaUpdateSocketSuspendOption+0x118>
40014fc0:	e59d000c 	ldr	r0, [sp, #12]
40014fc4:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014fc8:	e58d000c 	str	r0, [sp, #12]
40014fcc:	e59d0014 	ldr	r0, [sp, #20]
40014fd0:	e3800020 	orr	r0, r0, #32
40014fd4:	e58d0014 	str	r0, [sp, #20]
40014fd8:	ea00000b 	b	4001500c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014fdc:	e1a00000 	nop			; (mov r0, r0)
40014fe0:	e59d000c 	ldr	r0, [sp, #12]
40014fe4:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40014fe8:	e58d000c 	str	r0, [sp, #12]
40014fec:	e3550000 	cmp	r5, #0
40014ff0:	1a000002 	bne	40015000 <CyU3PDmaUpdateSocketSuspendOption+0x140>
40014ff4:	e59d0014 	ldr	r0, [sp, #20]
40014ff8:	e3800c01 	orr	r0, r0, #256	; 0x100
40014ffc:	e58d0014 	str	r0, [sp, #20]
40015000:	ea000001 	b	4001500c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015004:	e1a00000 	nop			; (mov r0, r0)
40015008:	e1a00000 	nop			; (mov r0, r0)
4001500c:	e1a00000 	nop			; (mov r0, r0)
40015010:	e1a0100d 	mov	r1, sp
40015014:	e1a00004 	mov	r0, r4
40015018:	ebffff8b 	bl	40014e4c <CyU3PDmaSocketUpdateStatus>
4001501c:	e28dd018 	add	sp, sp, #24
40015020:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

40015024 <CyU3PDmaChannelAcquireLock>:
40015024:	e92d4070 	push	{r4, r5, r6, lr}
40015028:	e1a04000 	mov	r4, r0
4001502c:	e1a05001 	mov	r5, r1
40015030:	e3540000 	cmp	r4, #0
40015034:	1a000001 	bne	40015040 <CyU3PDmaChannelAcquireLock+0x1c>
40015038:	e3a00041 	mov	r0, #65	; 0x41
4001503c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015040:	e5940000 	ldr	r0, [r4]
40015044:	e3500000 	cmp	r0, #0
40015048:	1a000001 	bne	40015054 <CyU3PDmaChannelAcquireLock+0x30>
4001504c:	e3a00044 	mov	r0, #68	; 0x44
40015050:	eafffff9 	b	4001503c <CyU3PDmaChannelAcquireLock+0x18>
40015054:	e1a01005 	mov	r1, r5
40015058:	e284003c 	add	r0, r4, #60	; 0x3c
4001505c:	ebffd3cd 	bl	40009f98 <_txe_mutex_get>
40015060:	e3500000 	cmp	r0, #0
40015064:	0a000001 	beq	40015070 <CyU3PDmaChannelAcquireLock+0x4c>
40015068:	e3a0001d 	mov	r0, #29
4001506c:	eafffff2 	b	4001503c <CyU3PDmaChannelAcquireLock+0x18>
40015070:	e3a00000 	mov	r0, #0
40015074:	eafffff0 	b	4001503c <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

40015078 <CyU3PDmaChannelCacheControl>:
40015078:	e92d4070 	push	{r4, r5, r6, lr}
4001507c:	e1a04000 	mov	r4, r0
40015080:	e1a05001 	mov	r5, r1
40015084:	e3e01000 	mvn	r1, #0
40015088:	e1a00004 	mov	r0, r4
4001508c:	ebffffe4 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40015090:	e1a06000 	mov	r6, r0
40015094:	e3560000 	cmp	r6, #0
40015098:	0a000001 	beq	400150a4 <CyU3PDmaChannelCacheControl+0x2c>
4001509c:	e1a00006 	mov	r0, r6
400150a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400150a4:	e5940000 	ldr	r0, [r4]
400150a8:	e3500001 	cmp	r0, #1
400150ac:	1a000001 	bne	400150b8 <CyU3PDmaChannelCacheControl+0x40>
400150b0:	e5845038 	str	r5, [r4, #56]	; 0x38
400150b4:	ea000000 	b	400150bc <CyU3PDmaChannelCacheControl+0x44>
400150b8:	e3a06047 	mov	r6, #71	; 0x47
400150bc:	e284003c 	add	r0, r4, #60	; 0x3c
400150c0:	ebffd3e9 	bl	4000a06c <_txe_mutex_put>
400150c4:	e1a00006 	mov	r0, r6
400150c8:	eafffff4 	b	400150a0 <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

400150cc <CyU3PDmaChannelCommitBuffer>:
400150cc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400150d0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
400150d4:	e1a04000 	mov	r4, r0
400150d8:	e1a05001 	mov	r5, r1
400150dc:	e1a06002 	mov	r6, r2
400150e0:	e3e01000 	mvn	r1, #0
400150e4:	e1a00004 	mov	r0, r4
400150e8:	ebffffcd 	bl	40015024 <CyU3PDmaChannelAcquireLock>
400150ec:	e1a09000 	mov	r9, r0
400150f0:	e3590000 	cmp	r9, #0
400150f4:	0a000002 	beq	40015104 <CyU3PDmaChannelCommitBuffer+0x38>
400150f8:	e1a00009 	mov	r0, r9
400150fc:	e28dd03c 	add	sp, sp, #60	; 0x3c
40015100:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015104:	e1d400b6 	ldrh	r0, [r4, #6]
40015108:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
4001510c:	e0400001 	sub	r0, r0, r1
40015110:	e1500005 	cmp	r0, r5
40015114:	aa000000 	bge	4001511c <CyU3PDmaChannelCommitBuffer+0x50>
40015118:	e3a09040 	mov	r9, #64	; 0x40
4001511c:	e5940000 	ldr	r0, [r4]
40015120:	e3500002 	cmp	r0, #2
40015124:	0a000000 	beq	4001512c <CyU3PDmaChannelCommitBuffer+0x60>
40015128:	e3a09042 	mov	r9, #66	; 0x42
4001512c:	e1d400b4 	ldrh	r0, [r4, #4]
40015130:	e3500003 	cmp	r0, #3
40015134:	1a000000 	bne	4001513c <CyU3PDmaChannelCommitBuffer+0x70>
40015138:	e3a09046 	mov	r9, #70	; 0x46
4001513c:	e3590000 	cmp	r9, #0
40015140:	0a000003 	beq	40015154 <CyU3PDmaChannelCommitBuffer+0x88>
40015144:	e284003c 	add	r0, r4, #60	; 0x3c
40015148:	ebffd3c7 	bl	4000a06c <_txe_mutex_put>
4001514c:	e1a00009 	mov	r0, r9
40015150:	eaffffe9 	b	400150fc <CyU3PDmaChannelCommitBuffer+0x30>
40015154:	e1d400b4 	ldrh	r0, [r4, #4]
40015158:	e20070ff 	and	r7, r0, #255	; 0xff
4001515c:	e3570002 	cmp	r7, #2
40015160:	1a000037 	bne	40015244 <CyU3PDmaChannelCommitBuffer+0x178>
40015164:	e1d401b6 	ldrh	r0, [r4, #22]
40015168:	e28d1014 	add	r1, sp, #20
4001516c:	eb0034ad 	bl	40022428 <CyU3PDmaDscrGetConfig>
40015170:	e1d401b8 	ldrh	r0, [r4, #24]
40015174:	e28d1004 	add	r1, sp, #4
40015178:	eb0034aa 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001517c:	e59d0020 	ldr	r0, [sp, #32]
40015180:	e3100008 	tst	r0, #8
40015184:	1a000000 	bne	4001518c <CyU3PDmaChannelCommitBuffer+0xc0>
40015188:	e3a09047 	mov	r9, #71	; 0x47
4001518c:	e59d0010 	ldr	r0, [sp, #16]
40015190:	e3100008 	tst	r0, #8
40015194:	0a000000 	beq	4001519c <CyU3PDmaChannelCommitBuffer+0xd0>
40015198:	e3a09047 	mov	r9, #71	; 0x47
4001519c:	e3590000 	cmp	r9, #0
400151a0:	1a000080 	bne	400153a8 <CyU3PDmaChannelCommitBuffer+0x2dc>
400151a4:	e59d0010 	ldr	r0, [sp, #16]
400151a8:	e59f1208 	ldr	r1, [pc, #520]	; 400153b8 <CyU3PDmaChannelCommitBuffer+0x2ec>
400151ac:	e0000001 	and	r0, r0, r1
400151b0:	e58d0010 	str	r0, [sp, #16]
400151b4:	e59d0010 	ldr	r0, [sp, #16]
400151b8:	e1800805 	orr	r0, r0, r5, lsl #16
400151bc:	e58d0010 	str	r0, [sp, #16]
400151c0:	e3560000 	cmp	r6, #0
400151c4:	1a000005 	bne	400151e0 <CyU3PDmaChannelCommitBuffer+0x114>
400151c8:	e59d1020 	ldr	r1, [sp, #32]
400151cc:	e201100f 	and	r1, r1, #15
400151d0:	e59d0010 	ldr	r0, [sp, #16]
400151d4:	e1800001 	orr	r0, r0, r1
400151d8:	e58d0010 	str	r0, [sp, #16]
400151dc:	ea000004 	b	400151f4 <CyU3PDmaChannelCommitBuffer+0x128>
400151e0:	e206100e 	and	r1, r6, #14
400151e4:	e3811008 	orr	r1, r1, #8
400151e8:	e59d0010 	ldr	r0, [sp, #16]
400151ec:	e1800001 	orr	r0, r0, r1
400151f0:	e58d0010 	str	r0, [sp, #16]
400151f4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400151f8:	e3500000 	cmp	r0, #0
400151fc:	0a000004 	beq	40015214 <CyU3PDmaChannelCommitBuffer+0x148>
40015200:	e59d2010 	ldr	r2, [sp, #16]
40015204:	e59f31ac 	ldr	r3, [pc, #428]	; 400153b8 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015208:	e0021003 	and	r1, r2, r3
4001520c:	e59d0004 	ldr	r0, [sp, #4]
40015210:	ebfff34a 	bl	40011f40 <CyU3PSysCleanDRegion>
40015214:	e1d401b8 	ldrh	r0, [r4, #24]
40015218:	e28d1004 	add	r1, sp, #4
4001521c:	eb00349c 	bl	40022494 <CyU3PDmaDscrSetConfig>
40015220:	e1d411b8 	ldrh	r1, [r4, #24]
40015224:	e1d401b2 	ldrh	r0, [r4, #18]
40015228:	e3a02001 	mov	r2, #1
4001522c:	ebfffeb8 	bl	40014d14 <CyU3PDmaSocketSendEvent>
40015230:	e59d001c 	ldr	r0, [sp, #28]
40015234:	e1c401b6 	strh	r0, [r4, #22]
40015238:	e59d000c 	ldr	r0, [sp, #12]
4001523c:	e1c401b8 	strh	r0, [r4, #24]
40015240:	ea000058 	b	400153a8 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015244:	e3570004 	cmp	r7, #4
40015248:	1a000027 	bne	400152ec <CyU3PDmaChannelCommitBuffer+0x220>
4001524c:	e1d401b8 	ldrh	r0, [r4, #24]
40015250:	e28d1004 	add	r1, sp, #4
40015254:	eb003473 	bl	40022428 <CyU3PDmaDscrGetConfig>
40015258:	e59d0010 	ldr	r0, [sp, #16]
4001525c:	e3100008 	tst	r0, #8
40015260:	0a000000 	beq	40015268 <CyU3PDmaChannelCommitBuffer+0x19c>
40015264:	e3a09047 	mov	r9, #71	; 0x47
40015268:	e3590000 	cmp	r9, #0
4001526c:	1a00004d 	bne	400153a8 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015270:	e59d0010 	ldr	r0, [sp, #16]
40015274:	e1a00800 	lsl	r0, r0, #16
40015278:	e1a00820 	lsr	r0, r0, #16
4001527c:	e58d0010 	str	r0, [sp, #16]
40015280:	e3a01008 	mov	r1, #8
40015284:	e1811805 	orr	r1, r1, r5, lsl #16
40015288:	e59d0010 	ldr	r0, [sp, #16]
4001528c:	e1800001 	orr	r0, r0, r1
40015290:	e58d0010 	str	r0, [sp, #16]
40015294:	e206100e 	and	r1, r6, #14
40015298:	e59d0010 	ldr	r0, [sp, #16]
4001529c:	e1800001 	orr	r0, r0, r1
400152a0:	e58d0010 	str	r0, [sp, #16]
400152a4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400152a8:	e3500000 	cmp	r0, #0
400152ac:	0a000004 	beq	400152c4 <CyU3PDmaChannelCommitBuffer+0x1f8>
400152b0:	e59d2010 	ldr	r2, [sp, #16]
400152b4:	e59f30fc 	ldr	r3, [pc, #252]	; 400153b8 <CyU3PDmaChannelCommitBuffer+0x2ec>
400152b8:	e0021003 	and	r1, r2, r3
400152bc:	e59d0004 	ldr	r0, [sp, #4]
400152c0:	ebfff31e 	bl	40011f40 <CyU3PSysCleanDRegion>
400152c4:	e1d401b8 	ldrh	r0, [r4, #24]
400152c8:	e28d1004 	add	r1, sp, #4
400152cc:	eb003470 	bl	40022494 <CyU3PDmaDscrSetConfig>
400152d0:	e1d411b8 	ldrh	r1, [r4, #24]
400152d4:	e1d401b2 	ldrh	r0, [r4, #18]
400152d8:	e3a02001 	mov	r2, #1
400152dc:	ebfffe8c 	bl	40014d14 <CyU3PDmaSocketSendEvent>
400152e0:	e59d000c 	ldr	r0, [sp, #12]
400152e4:	e1c401b8 	strh	r0, [r4, #24]
400152e8:	ea00002e 	b	400153a8 <CyU3PDmaChannelCommitBuffer+0x2dc>
400152ec:	e1d401b2 	ldrh	r0, [r4, #18]
400152f0:	e28d1024 	add	r1, sp, #36	; 0x24
400152f4:	ebfffdee 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
400152f8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400152fc:	e3100702 	tst	r0, #524288	; 0x80000
40015300:	0a000027 	beq	400153a4 <CyU3PDmaChannelCommitBuffer+0x2d8>
40015304:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40015308:	e1a08800 	lsl	r8, r0, #16
4001530c:	e1a08828 	lsr	r8, r8, #16
40015310:	e28d1004 	add	r1, sp, #4
40015314:	e1a00008 	mov	r0, r8
40015318:	eb003442 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001531c:	e59d0010 	ldr	r0, [sp, #16]
40015320:	e3100008 	tst	r0, #8
40015324:	0a00001c 	beq	4001539c <CyU3PDmaChannelCommitBuffer+0x2d0>
40015328:	e59d0010 	ldr	r0, [sp, #16]
4001532c:	e1a00800 	lsl	r0, r0, #16
40015330:	e1a00820 	lsr	r0, r0, #16
40015334:	e58d0010 	str	r0, [sp, #16]
40015338:	e59d0010 	ldr	r0, [sp, #16]
4001533c:	e1800805 	orr	r0, r0, r5, lsl #16
40015340:	e58d0010 	str	r0, [sp, #16]
40015344:	e3560000 	cmp	r6, #0
40015348:	0a000007 	beq	4001536c <CyU3PDmaChannelCommitBuffer+0x2a0>
4001534c:	e59d0010 	ldr	r0, [sp, #16]
40015350:	e3c0000f 	bic	r0, r0, #15
40015354:	e58d0010 	str	r0, [sp, #16]
40015358:	e206100e 	and	r1, r6, #14
4001535c:	e3811008 	orr	r1, r1, #8
40015360:	e59d0010 	ldr	r0, [sp, #16]
40015364:	e1800001 	orr	r0, r0, r1
40015368:	e58d0010 	str	r0, [sp, #16]
4001536c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015370:	e3500000 	cmp	r0, #0
40015374:	0a000004 	beq	4001538c <CyU3PDmaChannelCommitBuffer+0x2c0>
40015378:	e59d2010 	ldr	r2, [sp, #16]
4001537c:	e59f3034 	ldr	r3, [pc, #52]	; 400153b8 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015380:	e0021003 	and	r1, r2, r3
40015384:	e59d0004 	ldr	r0, [sp, #4]
40015388:	ebfff2ec 	bl	40011f40 <CyU3PSysCleanDRegion>
4001538c:	e28d1004 	add	r1, sp, #4
40015390:	e1a00008 	mov	r0, r8
40015394:	eb00343e 	bl	40022494 <CyU3PDmaDscrSetConfig>
40015398:	ea000002 	b	400153a8 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001539c:	e3a09047 	mov	r9, #71	; 0x47
400153a0:	ea000000 	b	400153a8 <CyU3PDmaChannelCommitBuffer+0x2dc>
400153a4:	e3a09047 	mov	r9, #71	; 0x47
400153a8:	e284003c 	add	r0, r4, #60	; 0x3c
400153ac:	ebffd32e 	bl	4000a06c <_txe_mutex_put>
400153b0:	e1a00009 	mov	r0, r9
400153b4:	eaffff50 	b	400150fc <CyU3PDmaChannelCommitBuffer+0x30>
400153b8:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

400153bc <CyU3PDmaChannelConfigure_TypeAuto>:
400153bc:	e92d4070 	push	{r4, r5, r6, lr}
400153c0:	e1a05000 	mov	r5, r0
400153c4:	e1d501b2 	ldrh	r0, [r5, #18]
400153c8:	e3806901 	orr	r6, r0, #16384	; 0x4000
400153cc:	e1d501b0 	ldrh	r0, [r5, #16]
400153d0:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400153d4:	e1810800 	orr	r0, r1, r0, lsl #16
400153d8:	e1866000 	orr	r6, r6, r0
400153dc:	e1d500b4 	ldrh	r0, [r5, #4]
400153e0:	e3500001 	cmp	r0, #1
400153e4:	1a000000 	bne	400153ec <CyU3PDmaChannelConfigure_TypeAuto+0x30>
400153e8:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
400153ec:	e1d520b6 	ldrh	r2, [r5, #6]
400153f0:	e1d510b8 	ldrh	r1, [r5, #8]
400153f4:	e1a03006 	mov	r3, r6
400153f8:	e285000c 	add	r0, r5, #12
400153fc:	eb00331a 	bl	4002206c <CyU3PDmaDscrChainCreate>
40015400:	e1a04000 	mov	r4, r0
40015404:	e3540000 	cmp	r4, #0
40015408:	0a000001 	beq	40015414 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
4001540c:	e1a00004 	mov	r0, r4
40015410:	e8bd8070 	pop	{r4, r5, r6, pc}
40015414:	e1d500bc 	ldrh	r0, [r5, #12]
40015418:	e1c501b6 	strh	r0, [r5, #22]
4001541c:	e1c501ba 	strh	r0, [r5, #26]
40015420:	e1c501be 	strh	r0, [r5, #30]
40015424:	e1d500be 	ldrh	r0, [r5, #14]
40015428:	e1c501b8 	strh	r0, [r5, #24]
4001542c:	e1c501bc 	strh	r0, [r5, #28]
40015430:	e1c502b0 	strh	r0, [r5, #32]
40015434:	e2850014 	add	r0, r5, #20
40015438:	eb003382 	bl	40022248 <CyU3PDmaDscrGet>
4001543c:	e1a00005 	mov	r0, r5
40015440:	eb0006b7 	bl	40016f24 <CyU3PDmaConfigureSockets_TypeAuto>
40015444:	e3a00000 	mov	r0, #0
40015448:	eafffff0 	b	40015410 <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

4001544c <CyU3PDmaChannelConfigure_TypeManual>:
4001544c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40015450:	e24dd024 	sub	sp, sp, #36	; 0x24
40015454:	e1a04000 	mov	r4, r0
40015458:	e284700c 	add	r7, r4, #12
4001545c:	e3a06cff 	mov	r6, #65280	; 0xff00
40015460:	e1d401b0 	ldrh	r0, [r4, #16]
40015464:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015468:	e1810800 	orr	r0, r1, r0, lsl #16
4001546c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40015470:	e1866000 	orr	r6, r6, r0
40015474:	e1d400b4 	ldrh	r0, [r4, #4]
40015478:	e3500003 	cmp	r0, #3
4001547c:	1a000002 	bne	4001548c <CyU3PDmaChannelConfigure_TypeManual+0x40>
40015480:	e3a00c3f 	mov	r0, #16128	; 0x3f00
40015484:	e1c401b2 	strh	r0, [r4, #18]
40015488:	ea000009 	b	400154b4 <CyU3PDmaChannelConfigure_TypeManual+0x68>
4001548c:	e1d400b4 	ldrh	r0, [r4, #4]
40015490:	e3500004 	cmp	r0, #4
40015494:	1a000006 	bne	400154b4 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015498:	e59f020c 	ldr	r0, [pc, #524]	; 400156ac <CyU3PDmaChannelConfigure_TypeManual+0x260>
4001549c:	e1c401b0 	strh	r0, [r4, #16]
400154a0:	e284700e 	add	r7, r4, #14
400154a4:	e1d401b2 	ldrh	r0, [r4, #18]
400154a8:	e3806903 	orr	r6, r0, #49152	; 0xc000
400154ac:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400154b0:	e3866801 	orr	r6, r6, #65536	; 0x10000
400154b4:	e1d400b8 	ldrh	r0, [r4, #8]
400154b8:	e3500000 	cmp	r0, #0
400154bc:	0a00006b 	beq	40015670 <CyU3PDmaChannelConfigure_TypeManual+0x224>
400154c0:	e1d420b6 	ldrh	r2, [r4, #6]
400154c4:	e1d410b8 	ldrh	r1, [r4, #8]
400154c8:	e1a03006 	mov	r3, r6
400154cc:	e1a00007 	mov	r0, r7
400154d0:	eb0032e5 	bl	4002206c <CyU3PDmaDscrChainCreate>
400154d4:	e1a05000 	mov	r5, r0
400154d8:	e3550000 	cmp	r5, #0
400154dc:	0a000002 	beq	400154ec <CyU3PDmaChannelConfigure_TypeManual+0xa0>
400154e0:	e1a00005 	mov	r0, r5
400154e4:	e28dd024 	add	sp, sp, #36	; 0x24
400154e8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400154ec:	e1d400b4 	ldrh	r0, [r4, #4]
400154f0:	e3500002 	cmp	r0, #2
400154f4:	1a000012 	bne	40015544 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
400154f8:	e1d401b2 	ldrh	r0, [r4, #18]
400154fc:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015500:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015504:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015508:	e1d410b8 	ldrh	r1, [r4, #8]
4001550c:	e1a03006 	mov	r3, r6
40015510:	e3a02000 	mov	r2, #0
40015514:	e284000e 	add	r0, r4, #14
40015518:	eb0032d3 	bl	4002206c <CyU3PDmaDscrChainCreate>
4001551c:	e1a05000 	mov	r5, r0
40015520:	e3550000 	cmp	r5, #0
40015524:	0a000006 	beq	40015544 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015528:	e1d410b8 	ldrh	r1, [r4, #8]
4001552c:	e1d700b0 	ldrh	r0, [r7]
40015530:	e3a03001 	mov	r3, #1
40015534:	e1a02003 	mov	r2, r3
40015538:	eb00331f 	bl	400221bc <CyU3PDmaDscrChainDestroy>
4001553c:	e1a00005 	mov	r0, r5
40015540:	eaffffe7 	b	400154e4 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015544:	e1d400bc 	ldrh	r0, [r4, #12]
40015548:	e1c401b6 	strh	r0, [r4, #22]
4001554c:	e1c401ba 	strh	r0, [r4, #26]
40015550:	e1c401be 	strh	r0, [r4, #30]
40015554:	e1d400be 	ldrh	r0, [r4, #14]
40015558:	e1c401b8 	strh	r0, [r4, #24]
4001555c:	e1c401bc 	strh	r0, [r4, #28]
40015560:	e1c402b0 	strh	r0, [r4, #32]
40015564:	e3a08000 	mov	r8, #0
40015568:	e1d790b0 	ldrh	r9, [r7]
4001556c:	ea00003b 	b	40015660 <CyU3PDmaChannelConfigure_TypeManual+0x214>
40015570:	e28d1014 	add	r1, sp, #20
40015574:	e1a00009 	mov	r0, r9
40015578:	eb0033aa 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001557c:	e1d400b4 	ldrh	r0, [r4, #4]
40015580:	e3500004 	cmp	r0, #4
40015584:	1a00000b 	bne	400155b8 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015588:	e59d0014 	ldr	r0, [sp, #20]
4001558c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015590:	e0800001 	add	r0, r0, r1
40015594:	e58d0014 	str	r0, [sp, #20]
40015598:	e1d400b6 	ldrh	r0, [r4, #6]
4001559c:	e280000f 	add	r0, r0, #15
400155a0:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155a4:	e0400001 	sub	r0, r0, r1
400155a8:	e59f1100 	ldr	r1, [pc, #256]	; 400156b0 <CyU3PDmaChannelConfigure_TypeManual+0x264>
400155ac:	e0000001 	and	r0, r0, r1
400155b0:	e58d0020 	str	r0, [sp, #32]
400155b4:	ea000021 	b	40015640 <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
400155b8:	e1d400b4 	ldrh	r0, [r4, #4]
400155bc:	e3500002 	cmp	r0, #2
400155c0:	1a000012 	bne	40015610 <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
400155c4:	e1d401b8 	ldrh	r0, [r4, #24]
400155c8:	e28d1004 	add	r1, sp, #4
400155cc:	eb003395 	bl	40022428 <CyU3PDmaDscrGetConfig>
400155d0:	e59d0014 	ldr	r0, [sp, #20]
400155d4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155d8:	e0800001 	add	r0, r0, r1
400155dc:	e58d0004 	str	r0, [sp, #4]
400155e0:	e1d400b6 	ldrh	r0, [r4, #6]
400155e4:	e280000f 	add	r0, r0, #15
400155e8:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155ec:	e0400001 	sub	r0, r0, r1
400155f0:	e59f10b8 	ldr	r1, [pc, #184]	; 400156b0 <CyU3PDmaChannelConfigure_TypeManual+0x264>
400155f4:	e0000001 	and	r0, r0, r1
400155f8:	e58d0010 	str	r0, [sp, #16]
400155fc:	e1d401b8 	ldrh	r0, [r4, #24]
40015600:	e28d1004 	add	r1, sp, #4
40015604:	eb0033a2 	bl	40022494 <CyU3PDmaDscrSetConfig>
40015608:	e59d000c 	ldr	r0, [sp, #12]
4001560c:	e1c401b8 	strh	r0, [r4, #24]
40015610:	e59d0014 	ldr	r0, [sp, #20]
40015614:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015618:	e0800001 	add	r0, r0, r1
4001561c:	e58d0014 	str	r0, [sp, #20]
40015620:	e1d400b6 	ldrh	r0, [r4, #6]
40015624:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015628:	e0400001 	sub	r0, r0, r1
4001562c:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
40015630:	e0400001 	sub	r0, r0, r1
40015634:	e59f1074 	ldr	r1, [pc, #116]	; 400156b0 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015638:	e0000001 	and	r0, r0, r1
4001563c:	e58d0020 	str	r0, [sp, #32]
40015640:	e28d1014 	add	r1, sp, #20
40015644:	e1a00009 	mov	r0, r9
40015648:	eb003391 	bl	40022494 <CyU3PDmaDscrSetConfig>
4001564c:	e59d001c 	ldr	r0, [sp, #28]
40015650:	e1a09800 	lsl	r9, r0, #16
40015654:	e1a09829 	lsr	r9, r9, #16
40015658:	e2880001 	add	r0, r8, #1
4001565c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40015660:	e1d400b8 	ldrh	r0, [r4, #8]
40015664:	e1500008 	cmp	r0, r8
40015668:	caffffc0 	bgt	40015570 <CyU3PDmaChannelConfigure_TypeManual+0x124>
4001566c:	ea000008 	b	40015694 <CyU3PDmaChannelConfigure_TypeManual+0x248>
40015670:	e59f003c 	ldr	r0, [pc, #60]	; 400156b4 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015674:	e1c400bc 	strh	r0, [r4, #12]
40015678:	e1c401b6 	strh	r0, [r4, #22]
4001567c:	e1c401ba 	strh	r0, [r4, #26]
40015680:	e1c401be 	strh	r0, [r4, #30]
40015684:	e1c400be 	strh	r0, [r4, #14]
40015688:	e1c401b8 	strh	r0, [r4, #24]
4001568c:	e1c401bc 	strh	r0, [r4, #28]
40015690:	e1c402b0 	strh	r0, [r4, #32]
40015694:	e2840014 	add	r0, r4, #20
40015698:	eb0032ea 	bl	40022248 <CyU3PDmaDscrGet>
4001569c:	e1a00004 	mov	r0, r4
400156a0:	eb00065f 	bl	40017024 <CyU3PDmaConfigureSockets_TypeManual>
400156a4:	e3a00000 	mov	r0, #0
400156a8:	eaffff8d 	b	400154e4 <CyU3PDmaChannelConfigure_TypeManual+0x98>
400156ac:	00003f01 	.word	0x00003f01
400156b0:	0000fff0 	.word	0x0000fff0
400156b4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

400156b8 <CyU3PDmaChannelCreate>:
400156b8:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400156bc:	e1a04000 	mov	r4, r0
400156c0:	e1a05001 	mov	r5, r1
400156c4:	e1a06002 	mov	r6, r2
400156c8:	e3560000 	cmp	r6, #0
400156cc:	1a000001 	bne	400156d8 <CyU3PDmaChannelCreate+0x20>
400156d0:	e3a00041 	mov	r0, #65	; 0x41
400156d4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400156d8:	e3540000 	cmp	r4, #0
400156dc:	1a000001 	bne	400156e8 <CyU3PDmaChannelCreate+0x30>
400156e0:	e3a00041 	mov	r0, #65	; 0x41
400156e4:	eafffffa 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
400156e8:	eb00330e 	bl	40022328 <CyU3PDmaDscrGetFreeCount>
400156ec:	e1d610b2 	ldrh	r1, [r6, #2]
400156f0:	e2811001 	add	r1, r1, #1
400156f4:	e1500001 	cmp	r0, r1
400156f8:	da000007 	ble	4001571c <CyU3PDmaChannelCreate+0x64>
400156fc:	e3550002 	cmp	r5, #2
40015700:	1a000007 	bne	40015724 <CyU3PDmaChannelCreate+0x6c>
40015704:	eb003307 	bl	40022328 <CyU3PDmaDscrGetFreeCount>
40015708:	e1d610b2 	ldrh	r1, [r6, #2]
4001570c:	e3a02001 	mov	r2, #1
40015710:	e0821101 	add	r1, r2, r1, lsl #2
40015714:	e1500001 	cmp	r0, r1
40015718:	ca000001 	bgt	40015724 <CyU3PDmaChannelCreate+0x6c>
4001571c:	e3a00010 	mov	r0, #16
40015720:	eaffffeb 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015724:	e1d600b0 	ldrh	r0, [r6]
40015728:	e3500000 	cmp	r0, #0
4001572c:	0a000003 	beq	40015740 <CyU3PDmaChannelCreate+0x88>
40015730:	e1d600b0 	ldrh	r0, [r6]
40015734:	e59f1354 	ldr	r1, [pc, #852]	; 40015a90 <CyU3PDmaChannelCreate+0x3d8>
40015738:	e1500001 	cmp	r0, r1
4001573c:	da000001 	ble	40015748 <CyU3PDmaChannelCreate+0x90>
40015740:	e3a00040 	mov	r0, #64	; 0x40
40015744:	eaffffe2 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015748:	e3550000 	cmp	r5, #0
4001574c:	0a000001 	beq	40015758 <CyU3PDmaChannelCreate+0xa0>
40015750:	e3550001 	cmp	r5, #1
40015754:	1a000009 	bne	40015780 <CyU3PDmaChannelCreate+0xc8>
40015758:	e1d600b0 	ldrh	r0, [r6]
4001575c:	e310000f 	tst	r0, #15
40015760:	0a000001 	beq	4001576c <CyU3PDmaChannelCreate+0xb4>
40015764:	e3a00040 	mov	r0, #64	; 0x40
40015768:	eaffffd9 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
4001576c:	e1d600b2 	ldrh	r0, [r6, #2]
40015770:	e3500000 	cmp	r0, #0
40015774:	1a00000b 	bne	400157a8 <CyU3PDmaChannelCreate+0xf0>
40015778:	e3a00040 	mov	r0, #64	; 0x40
4001577c:	eaffffd4 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015780:	e1d600b0 	ldrh	r0, [r6]
40015784:	e1d610ba 	ldrh	r1, [r6, #10]
40015788:	e0400001 	sub	r0, r0, r1
4001578c:	e1d610bc 	ldrh	r1, [r6, #12]
40015790:	e0400001 	sub	r0, r0, r1
40015794:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015798:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
4001579c:	0a000001 	beq	400157a8 <CyU3PDmaChannelCreate+0xf0>
400157a0:	e3a00040 	mov	r0, #64	; 0x40
400157a4:	eaffffca 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
400157a8:	e5d60010 	ldrb	r0, [r6, #16]
400157ac:	e3500002 	cmp	r0, #2
400157b0:	ba000001 	blt	400157bc <CyU3PDmaChannelCreate+0x104>
400157b4:	e3a00040 	mov	r0, #64	; 0x40
400157b8:	eaffffc5 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
400157bc:	e3550004 	cmp	r5, #4
400157c0:	0a000011 	beq	4001580c <CyU3PDmaChannelCreate+0x154>
400157c4:	e1d600b4 	ldrh	r0, [r6, #4]
400157c8:	e3a0103f 	mov	r1, #63	; 0x3f
400157cc:	e0018440 	and	r8, r1, r0, asr #8
400157d0:	e1d600b4 	ldrh	r0, [r6, #4]
400157d4:	e20090ff 	and	r9, r0, #255	; 0xff
400157d8:	e1d600b4 	ldrh	r0, [r6, #4]
400157dc:	ebfffd14 	bl	40014c34 <CyU3PDmaSocketIsValidProducer>
400157e0:	e3500000 	cmp	r0, #0
400157e4:	1a000001 	bne	400157f0 <CyU3PDmaChannelCreate+0x138>
400157e8:	e3a00040 	mov	r0, #64	; 0x40
400157ec:	eaffffb8 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
400157f0:	e59f029c 	ldr	r0, [pc, #668]	; 40015a94 <CyU3PDmaChannelCreate+0x3dc>
400157f4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400157f8:	e7900109 	ldr	r0, [r0, r9, lsl #2]
400157fc:	e3500000 	cmp	r0, #0
40015800:	0a000007 	beq	40015824 <CyU3PDmaChannelCreate+0x16c>
40015804:	e3a00040 	mov	r0, #64	; 0x40
40015808:	eaffffb1 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
4001580c:	e1d600b4 	ldrh	r0, [r6, #4]
40015810:	e59f1280 	ldr	r1, [pc, #640]	; 40015a98 <CyU3PDmaChannelCreate+0x3e0>
40015814:	e1500001 	cmp	r0, r1
40015818:	0a000001 	beq	40015824 <CyU3PDmaChannelCreate+0x16c>
4001581c:	e3a00040 	mov	r0, #64	; 0x40
40015820:	eaffffab 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015824:	e3550003 	cmp	r5, #3
40015828:	0a000011 	beq	40015874 <CyU3PDmaChannelCreate+0x1bc>
4001582c:	e1d600b6 	ldrh	r0, [r6, #6]
40015830:	e3a0103f 	mov	r1, #63	; 0x3f
40015834:	e0018440 	and	r8, r1, r0, asr #8
40015838:	e1d600b6 	ldrh	r0, [r6, #6]
4001583c:	e20090ff 	and	r9, r0, #255	; 0xff
40015840:	e1d600b6 	ldrh	r0, [r6, #6]
40015844:	ebfffcc2 	bl	40014b54 <CyU3PDmaSocketIsValidConsumer>
40015848:	e3500000 	cmp	r0, #0
4001584c:	1a000001 	bne	40015858 <CyU3PDmaChannelCreate+0x1a0>
40015850:	e3a00040 	mov	r0, #64	; 0x40
40015854:	eaffff9e 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015858:	e59f0234 	ldr	r0, [pc, #564]	; 40015a94 <CyU3PDmaChannelCreate+0x3dc>
4001585c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015860:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015864:	e3500000 	cmp	r0, #0
40015868:	0a000006 	beq	40015888 <CyU3PDmaChannelCreate+0x1d0>
4001586c:	e3a00040 	mov	r0, #64	; 0x40
40015870:	eaffff97 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015874:	e1d600b6 	ldrh	r0, [r6, #6]
40015878:	e3500c3f 	cmp	r0, #16128	; 0x3f00
4001587c:	0a000001 	beq	40015888 <CyU3PDmaChannelCreate+0x1d0>
40015880:	e3a00040 	mov	r0, #64	; 0x40
40015884:	eaffff92 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015888:	e1d600b8 	ldrh	r0, [r6, #8]
4001588c:	e3500000 	cmp	r0, #0
40015890:	0a000008 	beq	400158b8 <CyU3PDmaChannelCreate+0x200>
40015894:	e1d600b8 	ldrh	r0, [r6, #8]
40015898:	e1d610b2 	ldrh	r1, [r6, #2]
4001589c:	e1500001 	cmp	r0, r1
400158a0:	aa000002 	bge	400158b0 <CyU3PDmaChannelCreate+0x1f8>
400158a4:	e1d600b2 	ldrh	r0, [r6, #2]
400158a8:	e350001f 	cmp	r0, #31
400158ac:	da000001 	ble	400158b8 <CyU3PDmaChannelCreate+0x200>
400158b0:	e3a00040 	mov	r0, #64	; 0x40
400158b4:	eaffff86 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
400158b8:	e3550004 	cmp	r5, #4
400158bc:	0a000007 	beq	400158e0 <CyU3PDmaChannelCreate+0x228>
400158c0:	e1d600b4 	ldrh	r0, [r6, #4]
400158c4:	e3a0103f 	mov	r1, #63	; 0x3f
400158c8:	e0018440 	and	r8, r1, r0, asr #8
400158cc:	e1d600b4 	ldrh	r0, [r6, #4]
400158d0:	e20090ff 	and	r9, r0, #255	; 0xff
400158d4:	e59f01b8 	ldr	r0, [pc, #440]	; 40015a94 <CyU3PDmaChannelCreate+0x3dc>
400158d8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400158dc:	e7804109 	str	r4, [r0, r9, lsl #2]
400158e0:	e3550003 	cmp	r5, #3
400158e4:	0a000007 	beq	40015908 <CyU3PDmaChannelCreate+0x250>
400158e8:	e1d600b6 	ldrh	r0, [r6, #6]
400158ec:	e3a0103f 	mov	r1, #63	; 0x3f
400158f0:	e0018440 	and	r8, r1, r0, asr #8
400158f4:	e1d600b6 	ldrh	r0, [r6, #6]
400158f8:	e20090ff 	and	r9, r0, #255	; 0xff
400158fc:	e59f0190 	ldr	r0, [pc, #400]	; 40015a94 <CyU3PDmaChannelCreate+0x3dc>
40015900:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015904:	e7804109 	str	r4, [r0, r9, lsl #2]
40015908:	e1c450b4 	strh	r5, [r4, #4]
4001590c:	e1d600b0 	ldrh	r0, [r6]
40015910:	e1c400b6 	strh	r0, [r4, #6]
40015914:	e1d600b2 	ldrh	r0, [r6, #2]
40015918:	e1c400b8 	strh	r0, [r4, #8]
4001591c:	e1d600b8 	ldrh	r0, [r6, #8]
40015920:	e1c400ba 	strh	r0, [r4, #10]
40015924:	e1d600b4 	ldrh	r0, [r6, #4]
40015928:	e1c401b0 	strh	r0, [r4, #16]
4001592c:	e1d600b6 	ldrh	r0, [r6, #6]
40015930:	e1c401b2 	strh	r0, [r4, #18]
40015934:	e1d600ba 	ldrh	r0, [r6, #10]
40015938:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
4001593c:	e1d600bc 	ldrh	r0, [r6, #12]
40015940:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015944:	e1d600be 	ldrh	r0, [r6, #14]
40015948:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
4001594c:	e5d60010 	ldrb	r0, [r6, #16]
40015950:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015954:	e5960014 	ldr	r0, [r6, #20]
40015958:	e5840030 	str	r0, [r4, #48]	; 0x30
4001595c:	e3a00000 	mov	r0, #0
40015960:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015964:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015968:	e3a03038 	mov	r3, #56	; 0x38
4001596c:	e3a02000 	mov	r2, #0
40015970:	e1a01002 	mov	r1, r2
40015974:	e284003c 	add	r0, r4, #60	; 0x3c
40015978:	ebffd108 	bl	40009da0 <_txe_mutex_create>
4001597c:	e3a02028 	mov	r2, #40	; 0x28
40015980:	e3a01000 	mov	r1, #0
40015984:	e2840074 	add	r0, r4, #116	; 0x74
40015988:	ebffd04a 	bl	40009ab8 <_txe_event_flags_create>
4001598c:	e5960018 	ldr	r0, [r6, #24]
40015990:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015994:	e59f0100 	ldr	r0, [pc, #256]	; 40015a9c <CyU3PDmaChannelCreate+0x3e4>
40015998:	e5900000 	ldr	r0, [r0]
4001599c:	e5840038 	str	r0, [r4, #56]	; 0x38
400159a0:	e3550005 	cmp	r5, #5
400159a4:	308ff105 	addcc	pc, pc, r5, lsl #2
400159a8:	ea000011 	b	400159f4 <CyU3PDmaChannelCreate+0x33c>
400159ac:	ea000003 	b	400159c0 <CyU3PDmaChannelCreate+0x308>
400159b0:	ea000004 	b	400159c8 <CyU3PDmaChannelCreate+0x310>
400159b4:	ea00000a 	b	400159e4 <CyU3PDmaChannelCreate+0x32c>
400159b8:	ea000006 	b	400159d8 <CyU3PDmaChannelCreate+0x320>
400159bc:	ea000007 	b	400159e0 <CyU3PDmaChannelCreate+0x328>
400159c0:	e1a00000 	nop			; (mov r0, r0)
400159c4:	e1a00000 	nop			; (mov r0, r0)
400159c8:	e1a00004 	mov	r0, r4
400159cc:	ebfffe7a 	bl	400153bc <CyU3PDmaChannelConfigure_TypeAuto>
400159d0:	e1a07000 	mov	r7, r0
400159d4:	ea000009 	b	40015a00 <CyU3PDmaChannelCreate+0x348>
400159d8:	e1a00000 	nop			; (mov r0, r0)
400159dc:	e1a00000 	nop			; (mov r0, r0)
400159e0:	e1a00000 	nop			; (mov r0, r0)
400159e4:	e1a00004 	mov	r0, r4
400159e8:	ebfffe97 	bl	4001544c <CyU3PDmaChannelConfigure_TypeManual>
400159ec:	e1a07000 	mov	r7, r0
400159f0:	ea000002 	b	40015a00 <CyU3PDmaChannelCreate+0x348>
400159f4:	e1a00000 	nop			; (mov r0, r0)
400159f8:	e3a07040 	mov	r7, #64	; 0x40
400159fc:	e1a00000 	nop			; (mov r0, r0)
40015a00:	e1a00000 	nop			; (mov r0, r0)
40015a04:	e3570000 	cmp	r7, #0
40015a08:	1a000002 	bne	40015a18 <CyU3PDmaChannelCreate+0x360>
40015a0c:	e3a00001 	mov	r0, #1
40015a10:	e5840000 	str	r0, [r4]
40015a14:	ea00001b 	b	40015a88 <CyU3PDmaChannelCreate+0x3d0>
40015a18:	e284003c 	add	r0, r4, #60	; 0x3c
40015a1c:	ebffd13d 	bl	40009f18 <_txe_mutex_delete>
40015a20:	e2840074 	add	r0, r4, #116	; 0x74
40015a24:	ebffd073 	bl	40009bf8 <_txe_event_flags_delete>
40015a28:	e3550004 	cmp	r5, #4
40015a2c:	0a000008 	beq	40015a54 <CyU3PDmaChannelCreate+0x39c>
40015a30:	e1d600b4 	ldrh	r0, [r6, #4]
40015a34:	e3a0103f 	mov	r1, #63	; 0x3f
40015a38:	e0018440 	and	r8, r1, r0, asr #8
40015a3c:	e1d600b4 	ldrh	r0, [r6, #4]
40015a40:	e20090ff 	and	r9, r0, #255	; 0xff
40015a44:	e3a00000 	mov	r0, #0
40015a48:	e59f1044 	ldr	r1, [pc, #68]	; 40015a94 <CyU3PDmaChannelCreate+0x3dc>
40015a4c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015a50:	e7810109 	str	r0, [r1, r9, lsl #2]
40015a54:	e3550003 	cmp	r5, #3
40015a58:	0a000008 	beq	40015a80 <CyU3PDmaChannelCreate+0x3c8>
40015a5c:	e1d600b6 	ldrh	r0, [r6, #6]
40015a60:	e3a0103f 	mov	r1, #63	; 0x3f
40015a64:	e0018440 	and	r8, r1, r0, asr #8
40015a68:	e1d600b6 	ldrh	r0, [r6, #6]
40015a6c:	e20090ff 	and	r9, r0, #255	; 0xff
40015a70:	e3a00000 	mov	r0, #0
40015a74:	e59f1018 	ldr	r1, [pc, #24]	; 40015a94 <CyU3PDmaChannelCreate+0x3dc>
40015a78:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015a7c:	e7810109 	str	r0, [r1, r9, lsl #2]
40015a80:	e3a00000 	mov	r0, #0
40015a84:	e5840000 	str	r0, [r4]
40015a88:	e1a00007 	mov	r0, r7
40015a8c:	eaffff10 	b	400156d4 <CyU3PDmaChannelCreate+0x1c>
40015a90:	0000fff0 	.word	0x0000fff0
40015a94:	40030d04 	.word	0x40030d04
40015a98:	00003f01 	.word	0x00003f01
40015a9c:	40030c68 	.word	0x40030c68

Disassembly of section i.CyU3PDmaChannelDestroy:

40015aa0 <CyU3PDmaChannelDestroy>:
40015aa0:	e92d4070 	push	{r4, r5, r6, lr}
40015aa4:	e1a04000 	mov	r4, r0
40015aa8:	e3e01000 	mvn	r1, #0
40015aac:	e1a00004 	mov	r0, r4
40015ab0:	ebfffd5b 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40015ab4:	e1a05000 	mov	r5, r0
40015ab8:	e3550000 	cmp	r5, #0
40015abc:	0a000001 	beq	40015ac8 <CyU3PDmaChannelDestroy+0x28>
40015ac0:	e1a00005 	mov	r0, r5
40015ac4:	e8bd8070 	pop	{r4, r5, r6, pc}
40015ac8:	e1d400b4 	ldrh	r0, [r4, #4]
40015acc:	e3500005 	cmp	r0, #5
40015ad0:	308ff100 	addcc	pc, pc, r0, lsl #2
40015ad4:	ea00000f 	b	40015b18 <CyU3PDmaChannelDestroy+0x78>
40015ad8:	ea000003 	b	40015aec <CyU3PDmaChannelDestroy+0x4c>
40015adc:	ea000004 	b	40015af4 <CyU3PDmaChannelDestroy+0x54>
40015ae0:	ea000009 	b	40015b0c <CyU3PDmaChannelDestroy+0x6c>
40015ae4:	ea000005 	b	40015b00 <CyU3PDmaChannelDestroy+0x60>
40015ae8:	ea000006 	b	40015b08 <CyU3PDmaChannelDestroy+0x68>
40015aec:	e1a00000 	nop			; (mov r0, r0)
40015af0:	e1a00000 	nop			; (mov r0, r0)
40015af4:	e1a00004 	mov	r0, r4
40015af8:	eb000014 	bl	40015b50 <CyU3PDmaChannelDestroy_TypeAuto>
40015afc:	ea00000a 	b	40015b2c <CyU3PDmaChannelDestroy+0x8c>
40015b00:	e1a00000 	nop			; (mov r0, r0)
40015b04:	e1a00000 	nop			; (mov r0, r0)
40015b08:	e1a00000 	nop			; (mov r0, r0)
40015b0c:	e1a00004 	mov	r0, r4
40015b10:	eb000043 	bl	40015c24 <CyU3PDmaChannelDestroy_TypeManual>
40015b14:	ea000004 	b	40015b2c <CyU3PDmaChannelDestroy+0x8c>
40015b18:	e1a00000 	nop			; (mov r0, r0)
40015b1c:	e284003c 	add	r0, r4, #60	; 0x3c
40015b20:	ebffd151 	bl	4000a06c <_txe_mutex_put>
40015b24:	e3a00040 	mov	r0, #64	; 0x40
40015b28:	eaffffe5 	b	40015ac4 <CyU3PDmaChannelDestroy+0x24>
40015b2c:	e1a00000 	nop			; (mov r0, r0)
40015b30:	e3a00000 	mov	r0, #0
40015b34:	e5840000 	str	r0, [r4]
40015b38:	e284003c 	add	r0, r4, #60	; 0x3c
40015b3c:	ebffd0f5 	bl	40009f18 <_txe_mutex_delete>
40015b40:	e2840074 	add	r0, r4, #116	; 0x74
40015b44:	ebffd02b 	bl	40009bf8 <_txe_event_flags_delete>
40015b48:	e3a00000 	mov	r0, #0
40015b4c:	eaffffdc 	b	40015ac4 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015b50 <CyU3PDmaChannelDestroy_TypeAuto>:
40015b50:	e92d4070 	push	{r4, r5, r6, lr}
40015b54:	e24dd018 	sub	sp, sp, #24
40015b58:	e1a04000 	mov	r4, r0
40015b5c:	e1d401b0 	ldrh	r0, [r4, #16]
40015b60:	ebfffbbb 	bl	40014a54 <CyU3PDmaSocketDisable>
40015b64:	e1d401b2 	ldrh	r0, [r4, #18]
40015b68:	ebfffbb9 	bl	40014a54 <CyU3PDmaSocketDisable>
40015b6c:	e1d401b0 	ldrh	r0, [r4, #16]
40015b70:	e1a0100d 	mov	r1, sp
40015b74:	ebfffbce 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40015b78:	e59f009c 	ldr	r0, [pc, #156]	; 40015c1c <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015b7c:	e58d0000 	str	r0, [sp]
40015b80:	e1d401b0 	ldrh	r0, [r4, #16]
40015b84:	e1a0100d 	mov	r1, sp
40015b88:	ebfffc73 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40015b8c:	e1d401b0 	ldrh	r0, [r4, #16]
40015b90:	e20050ff 	and	r5, r0, #255	; 0xff
40015b94:	e1d401b0 	ldrh	r0, [r4, #16]
40015b98:	e3a0103f 	mov	r1, #63	; 0x3f
40015b9c:	e0016440 	and	r6, r1, r0, asr #8
40015ba0:	e3a00000 	mov	r0, #0
40015ba4:	e59f1074 	ldr	r1, [pc, #116]	; 40015c20 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015ba8:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015bac:	e7810105 	str	r0, [r1, r5, lsl #2]
40015bb0:	e1d401b2 	ldrh	r0, [r4, #18]
40015bb4:	e1a0100d 	mov	r1, sp
40015bb8:	ebfffbbd 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40015bbc:	e59f0058 	ldr	r0, [pc, #88]	; 40015c1c <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015bc0:	e58d0000 	str	r0, [sp]
40015bc4:	e1d401b2 	ldrh	r0, [r4, #18]
40015bc8:	e1a0100d 	mov	r1, sp
40015bcc:	ebfffc62 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40015bd0:	e1d401b2 	ldrh	r0, [r4, #18]
40015bd4:	e20050ff 	and	r5, r0, #255	; 0xff
40015bd8:	e1d401b2 	ldrh	r0, [r4, #18]
40015bdc:	e3a0103f 	mov	r1, #63	; 0x3f
40015be0:	e0016440 	and	r6, r1, r0, asr #8
40015be4:	e3a00000 	mov	r0, #0
40015be8:	e59f1030 	ldr	r1, [pc, #48]	; 40015c20 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015bec:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015bf0:	e7810105 	str	r0, [r1, r5, lsl #2]
40015bf4:	e1d410b8 	ldrh	r1, [r4, #8]
40015bf8:	e1d400bc 	ldrh	r0, [r4, #12]
40015bfc:	e3a03001 	mov	r3, #1
40015c00:	e1a02003 	mov	r2, r3
40015c04:	eb00316c 	bl	400221bc <CyU3PDmaDscrChainDestroy>
40015c08:	e1d401b4 	ldrh	r0, [r4, #20]
40015c0c:	eb0031de 	bl	4002238c <CyU3PDmaDscrPut>
40015c10:	e3a00000 	mov	r0, #0
40015c14:	e28dd018 	add	sp, sp, #24
40015c18:	e8bd8070 	pop	{r4, r5, r6, pc}
40015c1c:	0000ffff 	.word	0x0000ffff
40015c20:	40030d04 	.word	0x40030d04

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40015c24 <CyU3PDmaChannelDestroy_TypeManual>:
40015c24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015c28:	e24dd028 	sub	sp, sp, #40	; 0x28
40015c2c:	e1a04000 	mov	r4, r0
40015c30:	e1d400b4 	ldrh	r0, [r4, #4]
40015c34:	e3500004 	cmp	r0, #4
40015c38:	0a000012 	beq	40015c88 <CyU3PDmaChannelDestroy_TypeManual+0x64>
40015c3c:	e1d401b0 	ldrh	r0, [r4, #16]
40015c40:	ebfffb83 	bl	40014a54 <CyU3PDmaSocketDisable>
40015c44:	e1d401b0 	ldrh	r0, [r4, #16]
40015c48:	e1a0100d 	mov	r1, sp
40015c4c:	ebfffb98 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40015c50:	e59f0178 	ldr	r0, [pc, #376]	; 40015dd0 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015c54:	e58d0000 	str	r0, [sp]
40015c58:	e1d401b0 	ldrh	r0, [r4, #16]
40015c5c:	e1a0100d 	mov	r1, sp
40015c60:	ebfffc3d 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40015c64:	e1d401b0 	ldrh	r0, [r4, #16]
40015c68:	e20070ff 	and	r7, r0, #255	; 0xff
40015c6c:	e1d401b0 	ldrh	r0, [r4, #16]
40015c70:	e3a0103f 	mov	r1, #63	; 0x3f
40015c74:	e0018440 	and	r8, r1, r0, asr #8
40015c78:	e3a00000 	mov	r0, #0
40015c7c:	e59f1150 	ldr	r1, [pc, #336]	; 40015dd4 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015c80:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015c84:	e7810107 	str	r0, [r1, r7, lsl #2]
40015c88:	e1d400b4 	ldrh	r0, [r4, #4]
40015c8c:	e3500003 	cmp	r0, #3
40015c90:	0a000012 	beq	40015ce0 <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40015c94:	e1d401b2 	ldrh	r0, [r4, #18]
40015c98:	ebfffb6d 	bl	40014a54 <CyU3PDmaSocketDisable>
40015c9c:	e1d401b2 	ldrh	r0, [r4, #18]
40015ca0:	e1a0100d 	mov	r1, sp
40015ca4:	ebfffb82 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40015ca8:	e59f0120 	ldr	r0, [pc, #288]	; 40015dd0 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015cac:	e58d0000 	str	r0, [sp]
40015cb0:	e1d401b2 	ldrh	r0, [r4, #18]
40015cb4:	e1a0100d 	mov	r1, sp
40015cb8:	ebfffc27 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40015cbc:	e1d401b2 	ldrh	r0, [r4, #18]
40015cc0:	e20070ff 	and	r7, r0, #255	; 0xff
40015cc4:	e1d401b2 	ldrh	r0, [r4, #18]
40015cc8:	e3a0103f 	mov	r1, #63	; 0x3f
40015ccc:	e0018440 	and	r8, r1, r0, asr #8
40015cd0:	e3a00000 	mov	r0, #0
40015cd4:	e59f10f8 	ldr	r1, [pc, #248]	; 40015dd4 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015cd8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015cdc:	e7810107 	str	r0, [r1, r7, lsl #2]
40015ce0:	e1d400b8 	ldrh	r0, [r4, #8]
40015ce4:	e3500000 	cmp	r0, #0
40015ce8:	0a000033 	beq	40015dbc <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015cec:	e1d400b4 	ldrh	r0, [r4, #4]
40015cf0:	e3500004 	cmp	r0, #4
40015cf4:	1a000014 	bne	40015d4c <CyU3PDmaChannelDestroy_TypeManual+0x128>
40015cf8:	e1d450be 	ldrh	r5, [r4, #14]
40015cfc:	e3a06000 	mov	r6, #0
40015d00:	ea00000d 	b	40015d3c <CyU3PDmaChannelDestroy_TypeManual+0x118>
40015d04:	e28d1018 	add	r1, sp, #24
40015d08:	e1a00005 	mov	r0, r5
40015d0c:	eb0031c5 	bl	40022428 <CyU3PDmaDscrGetConfig>
40015d10:	e59d1018 	ldr	r1, [sp, #24]
40015d14:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40015d18:	e0410002 	sub	r0, r1, r2
40015d1c:	ebffb874 	bl	40003ef4 <CyU3PDmaBufferFree>
40015d20:	e1a00005 	mov	r0, r5
40015d24:	eb003198 	bl	4002238c <CyU3PDmaDscrPut>
40015d28:	e59d0020 	ldr	r0, [sp, #32]
40015d2c:	e1a05800 	lsl	r5, r0, #16
40015d30:	e1a05825 	lsr	r5, r5, #16
40015d34:	e2860001 	add	r0, r6, #1
40015d38:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015d3c:	e1d400b8 	ldrh	r0, [r4, #8]
40015d40:	e1500006 	cmp	r0, r6
40015d44:	caffffee 	bgt	40015d04 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40015d48:	ea000013 	b	40015d9c <CyU3PDmaChannelDestroy_TypeManual+0x178>
40015d4c:	e1d450bc 	ldrh	r5, [r4, #12]
40015d50:	e3a06000 	mov	r6, #0
40015d54:	ea00000d 	b	40015d90 <CyU3PDmaChannelDestroy_TypeManual+0x16c>
40015d58:	e28d1018 	add	r1, sp, #24
40015d5c:	e1a00005 	mov	r0, r5
40015d60:	eb0031b0 	bl	40022428 <CyU3PDmaDscrGetConfig>
40015d64:	e59d1018 	ldr	r1, [sp, #24]
40015d68:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
40015d6c:	e0410002 	sub	r0, r1, r2
40015d70:	ebffb85f 	bl	40003ef4 <CyU3PDmaBufferFree>
40015d74:	e1a00005 	mov	r0, r5
40015d78:	eb003183 	bl	4002238c <CyU3PDmaDscrPut>
40015d7c:	e59d0020 	ldr	r0, [sp, #32]
40015d80:	e1a05800 	lsl	r5, r0, #16
40015d84:	e1a05825 	lsr	r5, r5, #16
40015d88:	e2860001 	add	r0, r6, #1
40015d8c:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015d90:	e1d400b8 	ldrh	r0, [r4, #8]
40015d94:	e1500006 	cmp	r0, r6
40015d98:	caffffee 	bgt	40015d58 <CyU3PDmaChannelDestroy_TypeManual+0x134>
40015d9c:	e1d400b4 	ldrh	r0, [r4, #4]
40015da0:	e3500002 	cmp	r0, #2
40015da4:	1a000004 	bne	40015dbc <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015da8:	e1d410b8 	ldrh	r1, [r4, #8]
40015dac:	e1d400be 	ldrh	r0, [r4, #14]
40015db0:	e3a03000 	mov	r3, #0
40015db4:	e1a02003 	mov	r2, r3
40015db8:	eb0030ff 	bl	400221bc <CyU3PDmaDscrChainDestroy>
40015dbc:	e1d401b4 	ldrh	r0, [r4, #20]
40015dc0:	eb003171 	bl	4002238c <CyU3PDmaDscrPut>
40015dc4:	e3a00000 	mov	r0, #0
40015dc8:	e28dd028 	add	sp, sp, #40	; 0x28
40015dcc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015dd0:	0000ffff 	.word	0x0000ffff
40015dd4:	40030d04 	.word	0x40030d04

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40015dd8 <CyU3PDmaChannelGetBuffer>:
40015dd8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015ddc:	e24dd030 	sub	sp, sp, #48	; 0x30
40015de0:	e1a04000 	mov	r4, r0
40015de4:	e1a05001 	mov	r5, r1
40015de8:	e1a06002 	mov	r6, r2
40015dec:	e3550000 	cmp	r5, #0
40015df0:	1a000002 	bne	40015e00 <CyU3PDmaChannelGetBuffer+0x28>
40015df4:	e3a00041 	mov	r0, #65	; 0x41
40015df8:	e28dd030 	add	sp, sp, #48	; 0x30
40015dfc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015e00:	e1a01006 	mov	r1, r6
40015e04:	e1a00004 	mov	r0, r4
40015e08:	ebfffc85 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40015e0c:	e1a08000 	mov	r8, r0
40015e10:	e3580000 	cmp	r8, #0
40015e14:	0a000001 	beq	40015e20 <CyU3PDmaChannelGetBuffer+0x48>
40015e18:	e1a00008 	mov	r0, r8
40015e1c:	eafffff5 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40015e20:	e5940000 	ldr	r0, [r4]
40015e24:	e3500002 	cmp	r0, #2
40015e28:	0a000003 	beq	40015e3c <CyU3PDmaChannelGetBuffer+0x64>
40015e2c:	e5940000 	ldr	r0, [r4]
40015e30:	e3500006 	cmp	r0, #6
40015e34:	0a000000 	beq	40015e3c <CyU3PDmaChannelGetBuffer+0x64>
40015e38:	e3a08042 	mov	r8, #66	; 0x42
40015e3c:	e5940000 	ldr	r0, [r4]
40015e40:	e3500005 	cmp	r0, #5
40015e44:	1a000000 	bne	40015e4c <CyU3PDmaChannelGetBuffer+0x74>
40015e48:	e3a08049 	mov	r8, #73	; 0x49
40015e4c:	e5940000 	ldr	r0, [r4]
40015e50:	e3500007 	cmp	r0, #7
40015e54:	1a000000 	bne	40015e5c <CyU3PDmaChannelGetBuffer+0x84>
40015e58:	e3a08048 	mov	r8, #72	; 0x48
40015e5c:	e3580000 	cmp	r8, #0
40015e60:	0a000003 	beq	40015e74 <CyU3PDmaChannelGetBuffer+0x9c>
40015e64:	e284003c 	add	r0, r4, #60	; 0x3c
40015e68:	ebffd07f 	bl	4000a06c <_txe_mutex_put>
40015e6c:	e1a00008 	mov	r0, r8
40015e70:	eaffffe0 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40015e74:	e1d400b4 	ldrh	r0, [r4, #4]
40015e78:	e20070ff 	and	r7, r0, #255	; 0xff
40015e7c:	e3570002 	cmp	r7, #2
40015e80:	0a000001 	beq	40015e8c <CyU3PDmaChannelGetBuffer+0xb4>
40015e84:	e3570003 	cmp	r7, #3
40015e88:	1a00003e 	bne	40015f88 <CyU3PDmaChannelGetBuffer+0x1b0>
40015e8c:	e3a02002 	mov	r2, #2
40015e90:	e3e01008 	mvn	r1, #8
40015e94:	e2840074 	add	r0, r4, #116	; 0x74
40015e98:	ebffcfa6 	bl	40009d38 <_txe_event_flags_set>
40015e9c:	e1d401b6 	ldrh	r0, [r4, #22]
40015ea0:	e28d101c 	add	r1, sp, #28
40015ea4:	eb00315f 	bl	40022428 <CyU3PDmaDscrGetConfig>
40015ea8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015eac:	e3100008 	tst	r0, #8
40015eb0:	1a000022 	bne	40015f40 <CyU3PDmaChannelGetBuffer+0x168>
40015eb4:	e284003c 	add	r0, r4, #60	; 0x3c
40015eb8:	ebffd06b 	bl	4000a06c <_txe_mutex_put>
40015ebc:	e58d6000 	str	r6, [sp]
40015ec0:	e28d302c 	add	r3, sp, #44	; 0x2c
40015ec4:	e3a02000 	mov	r2, #0
40015ec8:	e3a01068 	mov	r1, #104	; 0x68
40015ecc:	e2840074 	add	r0, r4, #116	; 0x74
40015ed0:	ebffcf68 	bl	40009c78 <_txe_event_flags_get>
40015ed4:	e1a08000 	mov	r8, r0
40015ed8:	e3580000 	cmp	r8, #0
40015edc:	0a000001 	beq	40015ee8 <CyU3PDmaChannelGetBuffer+0x110>
40015ee0:	e3a00045 	mov	r0, #69	; 0x45
40015ee4:	eaffffc3 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40015ee8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015eec:	e3100040 	tst	r0, #64	; 0x40
40015ef0:	0a000001 	beq	40015efc <CyU3PDmaChannelGetBuffer+0x124>
40015ef4:	e3a00049 	mov	r0, #73	; 0x49
40015ef8:	eaffffbe 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40015efc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015f00:	e3100020 	tst	r0, #32
40015f04:	0a000001 	beq	40015f10 <CyU3PDmaChannelGetBuffer+0x138>
40015f08:	e3a00048 	mov	r0, #72	; 0x48
40015f0c:	eaffffb9 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40015f10:	e1a01006 	mov	r1, r6
40015f14:	e1a00004 	mov	r0, r4
40015f18:	ebfffc41 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40015f1c:	e1a08000 	mov	r8, r0
40015f20:	e3580000 	cmp	r8, #0
40015f24:	0a000001 	beq	40015f30 <CyU3PDmaChannelGetBuffer+0x158>
40015f28:	e1a00008 	mov	r0, r8
40015f2c:	eaffffb1 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40015f30:	e1d401b6 	ldrh	r0, [r4, #22]
40015f34:	e28d101c 	add	r1, sp, #28
40015f38:	eb00313a 	bl	40022428 <CyU3PDmaDscrGetConfig>
40015f3c:	ea000003 	b	40015f50 <CyU3PDmaChannelGetBuffer+0x178>
40015f40:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015f44:	e3500000 	cmp	r0, #0
40015f48:	0a000000 	beq	40015f50 <CyU3PDmaChannelGetBuffer+0x178>
40015f4c:	ebffd232 	bl	4000a81c <_txe_thread_relinquish>
40015f50:	e59d001c 	ldr	r0, [sp, #28]
40015f54:	e5850000 	str	r0, [r5]
40015f58:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f5c:	e59f11a4 	ldr	r1, [pc, #420]	; 40016108 <CyU3PDmaChannelGetBuffer+0x330>
40015f60:	e0010820 	and	r0, r1, r0, lsr #16
40015f64:	e1c500b4 	strh	r0, [r5, #4]
40015f68:	e241100f 	sub	r1, r1, #15
40015f6c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f70:	e0000001 	and	r0, r0, r1
40015f74:	e1c500b6 	strh	r0, [r5, #6]
40015f78:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f7c:	e200000f 	and	r0, r0, #15
40015f80:	e1c500b8 	strh	r0, [r5, #8]
40015f84:	ea00005b 	b	400160f8 <CyU3PDmaChannelGetBuffer+0x320>
40015f88:	e3570004 	cmp	r7, #4
40015f8c:	1a000036 	bne	4001606c <CyU3PDmaChannelGetBuffer+0x294>
40015f90:	e3a02002 	mov	r2, #2
40015f94:	e3e01010 	mvn	r1, #16
40015f98:	e2840074 	add	r0, r4, #116	; 0x74
40015f9c:	ebffcf65 	bl	40009d38 <_txe_event_flags_set>
40015fa0:	e1d401b8 	ldrh	r0, [r4, #24]
40015fa4:	e28d101c 	add	r1, sp, #28
40015fa8:	eb00311e 	bl	40022428 <CyU3PDmaDscrGetConfig>
40015fac:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015fb0:	e3100008 	tst	r0, #8
40015fb4:	0a000021 	beq	40016040 <CyU3PDmaChannelGetBuffer+0x268>
40015fb8:	e284003c 	add	r0, r4, #60	; 0x3c
40015fbc:	ebffd02a 	bl	4000a06c <_txe_mutex_put>
40015fc0:	e58d6000 	str	r6, [sp]
40015fc4:	e28d302c 	add	r3, sp, #44	; 0x2c
40015fc8:	e3a02000 	mov	r2, #0
40015fcc:	e3a01070 	mov	r1, #112	; 0x70
40015fd0:	e2840074 	add	r0, r4, #116	; 0x74
40015fd4:	ebffcf27 	bl	40009c78 <_txe_event_flags_get>
40015fd8:	e1a08000 	mov	r8, r0
40015fdc:	e3580000 	cmp	r8, #0
40015fe0:	0a000001 	beq	40015fec <CyU3PDmaChannelGetBuffer+0x214>
40015fe4:	e3a00045 	mov	r0, #69	; 0x45
40015fe8:	eaffff82 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40015fec:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015ff0:	e3100040 	tst	r0, #64	; 0x40
40015ff4:	0a000001 	beq	40016000 <CyU3PDmaChannelGetBuffer+0x228>
40015ff8:	e3a00049 	mov	r0, #73	; 0x49
40015ffc:	eaffff7d 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40016000:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016004:	e3100020 	tst	r0, #32
40016008:	0a000001 	beq	40016014 <CyU3PDmaChannelGetBuffer+0x23c>
4001600c:	e3a00048 	mov	r0, #72	; 0x48
40016010:	eaffff78 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40016014:	e1a01006 	mov	r1, r6
40016018:	e1a00004 	mov	r0, r4
4001601c:	ebfffc00 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40016020:	e1a08000 	mov	r8, r0
40016024:	e3580000 	cmp	r8, #0
40016028:	0a000001 	beq	40016034 <CyU3PDmaChannelGetBuffer+0x25c>
4001602c:	e1a00008 	mov	r0, r8
40016030:	eaffff70 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40016034:	e1d401b8 	ldrh	r0, [r4, #24]
40016038:	e28d101c 	add	r1, sp, #28
4001603c:	eb0030f9 	bl	40022428 <CyU3PDmaDscrGetConfig>
40016040:	e59d001c 	ldr	r0, [sp, #28]
40016044:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40016048:	e0400001 	sub	r0, r0, r1
4001604c:	e5850000 	str	r0, [r5]
40016050:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
40016054:	e1c500b4 	strh	r0, [r5, #4]
40016058:	e1d400b6 	ldrh	r0, [r4, #6]
4001605c:	e1c500b6 	strh	r0, [r5, #6]
40016060:	e3a00000 	mov	r0, #0
40016064:	e1c500b8 	strh	r0, [r5, #8]
40016068:	ea000022 	b	400160f8 <CyU3PDmaChannelGetBuffer+0x320>
4001606c:	e1d401b2 	ldrh	r0, [r4, #18]
40016070:	e28d1004 	add	r1, sp, #4
40016074:	ebfffa8e 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016078:	e59d1004 	ldr	r1, [sp, #4]
4001607c:	e1a00801 	lsl	r0, r1, #16
40016080:	e1a00820 	lsr	r0, r0, #16
40016084:	e28d101c 	add	r1, sp, #28
40016088:	eb0030e6 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001608c:	e59d0010 	ldr	r0, [sp, #16]
40016090:	e3100702 	tst	r0, #524288	; 0x80000
40016094:	0a000016 	beq	400160f4 <CyU3PDmaChannelGetBuffer+0x31c>
40016098:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001609c:	e3100008 	tst	r0, #8
400160a0:	0a000013 	beq	400160f4 <CyU3PDmaChannelGetBuffer+0x31c>
400160a4:	e59d001c 	ldr	r0, [sp, #28]
400160a8:	e5850000 	str	r0, [r5]
400160ac:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160b0:	e59f1050 	ldr	r1, [pc, #80]	; 40016108 <CyU3PDmaChannelGetBuffer+0x330>
400160b4:	e0010820 	and	r0, r1, r0, lsr #16
400160b8:	e1c500b4 	strh	r0, [r5, #4]
400160bc:	e241100f 	sub	r1, r1, #15
400160c0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160c4:	e0000001 	and	r0, r0, r1
400160c8:	e1c500b6 	strh	r0, [r5, #6]
400160cc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400160d0:	e200000f 	and	r0, r0, #15
400160d4:	e1c500b8 	strh	r0, [r5, #8]
400160d8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400160dc:	e3500000 	cmp	r0, #0
400160e0:	0a000004 	beq	400160f8 <CyU3PDmaChannelGetBuffer+0x320>
400160e4:	e1d510b6 	ldrh	r1, [r5, #6]
400160e8:	e5950000 	ldr	r0, [r5]
400160ec:	ebffefa1 	bl	40011f78 <CyU3PSysFlushDRegion>
400160f0:	ea000000 	b	400160f8 <CyU3PDmaChannelGetBuffer+0x320>
400160f4:	e3a08047 	mov	r8, #71	; 0x47
400160f8:	e284003c 	add	r0, r4, #60	; 0x3c
400160fc:	ebffcfda 	bl	4000a06c <_txe_mutex_put>
40016100:	e1a00008 	mov	r0, r8
40016104:	eaffff3b 	b	40015df8 <CyU3PDmaChannelGetBuffer+0x20>
40016108:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

4001610c <CyU3PDmaChannelReset>:
4001610c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40016110:	e1a04000 	mov	r4, r0
40016114:	e3e01000 	mvn	r1, #0
40016118:	e1a00004 	mov	r0, r4
4001611c:	ebfffbc0 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40016120:	e1a06000 	mov	r6, r0
40016124:	e3560000 	cmp	r6, #0
40016128:	0a000001 	beq	40016134 <CyU3PDmaChannelReset+0x28>
4001612c:	e1a00006 	mov	r0, r6
40016130:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40016134:	e1d400b4 	ldrh	r0, [r4, #4]
40016138:	e3500005 	cmp	r0, #5
4001613c:	308ff100 	addcc	pc, pc, r0, lsl #2
40016140:	ea00000f 	b	40016184 <CyU3PDmaChannelReset+0x78>
40016144:	ea000003 	b	40016158 <CyU3PDmaChannelReset+0x4c>
40016148:	ea000004 	b	40016160 <CyU3PDmaChannelReset+0x54>
4001614c:	ea000009 	b	40016178 <CyU3PDmaChannelReset+0x6c>
40016150:	ea000005 	b	4001616c <CyU3PDmaChannelReset+0x60>
40016154:	ea000006 	b	40016174 <CyU3PDmaChannelReset+0x68>
40016158:	e1a00000 	nop			; (mov r0, r0)
4001615c:	e1a00000 	nop			; (mov r0, r0)
40016160:	e1a00004 	mov	r0, r4
40016164:	eb000030 	bl	4001622c <CyU3PDmaChannelReset_TypeAuto>
40016168:	ea000007 	b	4001618c <CyU3PDmaChannelReset+0x80>
4001616c:	e1a00000 	nop			; (mov r0, r0)
40016170:	e1a00000 	nop			; (mov r0, r0)
40016174:	e1a00000 	nop			; (mov r0, r0)
40016178:	e1a00004 	mov	r0, r4
4001617c:	eb000045 	bl	40016298 <CyU3PDmaChannelReset_TypeManual>
40016180:	ea000001 	b	4001618c <CyU3PDmaChannelReset+0x80>
40016184:	e1a00000 	nop			; (mov r0, r0)
40016188:	e1a00000 	nop			; (mov r0, r0)
4001618c:	e1a00000 	nop			; (mov r0, r0)
40016190:	ebffc96b 	bl	40008744 <_tx_thread_identify>
40016194:	e1a05000 	mov	r5, r0
40016198:	e3550000 	cmp	r5, #0
4001619c:	0a000003 	beq	400161b0 <CyU3PDmaChannelReset+0xa4>
400161a0:	e1a0200d 	mov	r2, sp
400161a4:	e3a01002 	mov	r1, #2
400161a8:	e1a00005 	mov	r0, r5
400161ac:	ebffd172 	bl	4000a77c <_txe_thread_priority_change>
400161b0:	e3a02002 	mov	r2, #2
400161b4:	e3e01007 	mvn	r1, #7
400161b8:	e2840074 	add	r0, r4, #116	; 0x74
400161bc:	ebffcedd 	bl	40009d38 <_txe_event_flags_set>
400161c0:	e3a02000 	mov	r2, #0
400161c4:	e3a01020 	mov	r1, #32
400161c8:	e2840074 	add	r0, r4, #116	; 0x74
400161cc:	ebffced9 	bl	40009d38 <_txe_event_flags_set>
400161d0:	e3a00001 	mov	r0, #1
400161d4:	e5840000 	str	r0, [r4]
400161d8:	e284003c 	add	r0, r4, #60	; 0x3c
400161dc:	ebffcfa2 	bl	4000a06c <_txe_mutex_put>
400161e0:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
400161e4:	e3500000 	cmp	r0, #0
400161e8:	0a000007 	beq	4001620c <CyU3PDmaChannelReset+0x100>
400161ec:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400161f0:	e3100020 	tst	r0, #32
400161f4:	0a000004 	beq	4001620c <CyU3PDmaChannelReset+0x100>
400161f8:	e3a02000 	mov	r2, #0
400161fc:	e3a01020 	mov	r1, #32
40016200:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40016204:	e1a00004 	mov	r0, r4
40016208:	e12fff33 	blx	r3
4001620c:	e3550000 	cmp	r5, #0
40016210:	0a000003 	beq	40016224 <CyU3PDmaChannelReset+0x118>
40016214:	e1a0200d 	mov	r2, sp
40016218:	e1a00005 	mov	r0, r5
4001621c:	e59d1000 	ldr	r1, [sp]
40016220:	ebffd155 	bl	4000a77c <_txe_thread_priority_change>
40016224:	e3a00000 	mov	r0, #0
40016228:	eaffffc0 	b	40016130 <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

4001622c <CyU3PDmaChannelReset_TypeAuto>:
4001622c:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016230:	e1a04000 	mov	r4, r0
40016234:	e1d450b8 	ldrh	r5, [r4, #8]
40016238:	e1d460bc 	ldrh	r6, [r4, #12]
4001623c:	e1a00004 	mov	r0, r4
40016240:	eb000337 	bl	40016f24 <CyU3PDmaConfigureSockets_TypeAuto>
40016244:	ea00000c 	b	4001627c <CyU3PDmaChannelReset_TypeAuto+0x50>
40016248:	e1a0100d 	mov	r1, sp
4001624c:	e1a00006 	mov	r0, r6
40016250:	eb003074 	bl	40022428 <CyU3PDmaDscrGetConfig>
40016254:	e59d000c 	ldr	r0, [sp, #12]
40016258:	e59f1034 	ldr	r1, [pc, #52]	; 40016294 <CyU3PDmaChannelReset_TypeAuto+0x68>
4001625c:	e0000001 	and	r0, r0, r1
40016260:	e58d000c 	str	r0, [sp, #12]
40016264:	e1a0100d 	mov	r1, sp
40016268:	e1a00006 	mov	r0, r6
4001626c:	eb003088 	bl	40022494 <CyU3PDmaDscrSetConfig>
40016270:	e59d0008 	ldr	r0, [sp, #8]
40016274:	e1a06800 	lsl	r6, r0, #16
40016278:	e1a06826 	lsr	r6, r6, #16
4001627c:	e1b00005 	movs	r0, r5
40016280:	e2451001 	sub	r1, r5, #1
40016284:	e1a05801 	lsl	r5, r1, #16
40016288:	e1a05825 	lsr	r5, r5, #16
4001628c:	1affffed 	bne	40016248 <CyU3PDmaChannelReset_TypeAuto+0x1c>
40016290:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016294:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

40016298 <CyU3PDmaChannelReset_TypeManual>:
40016298:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4001629c:	e1a04000 	mov	r4, r0
400162a0:	e1d450b8 	ldrh	r5, [r4, #8]
400162a4:	e1a00004 	mov	r0, r4
400162a8:	eb00035d 	bl	40017024 <CyU3PDmaConfigureSockets_TypeManual>
400162ac:	e1d400b4 	ldrh	r0, [r4, #4]
400162b0:	e3500004 	cmp	r0, #4
400162b4:	0a000017 	beq	40016318 <CyU3PDmaChannelReset_TypeManual+0x80>
400162b8:	e1d460bc 	ldrh	r6, [r4, #12]
400162bc:	ea00000c 	b	400162f4 <CyU3PDmaChannelReset_TypeManual+0x5c>
400162c0:	e1a0100d 	mov	r1, sp
400162c4:	e1a00006 	mov	r0, r6
400162c8:	eb003056 	bl	40022428 <CyU3PDmaDscrGetConfig>
400162cc:	e59d000c 	ldr	r0, [sp, #12]
400162d0:	e59f10b4 	ldr	r1, [pc, #180]	; 4001638c <CyU3PDmaChannelReset_TypeManual+0xf4>
400162d4:	e0000001 	and	r0, r0, r1
400162d8:	e58d000c 	str	r0, [sp, #12]
400162dc:	e1a0100d 	mov	r1, sp
400162e0:	e1a00006 	mov	r0, r6
400162e4:	eb00306a 	bl	40022494 <CyU3PDmaDscrSetConfig>
400162e8:	e59d0008 	ldr	r0, [sp, #8]
400162ec:	e1a06800 	lsl	r6, r0, #16
400162f0:	e1a06826 	lsr	r6, r6, #16
400162f4:	e1b00005 	movs	r0, r5
400162f8:	e2451001 	sub	r1, r5, #1
400162fc:	e1a05801 	lsl	r5, r1, #16
40016300:	e1a05825 	lsr	r5, r5, #16
40016304:	1affffed 	bne	400162c0 <CyU3PDmaChannelReset_TypeManual+0x28>
40016308:	e1d400bc 	ldrh	r0, [r4, #12]
4001630c:	e1c401b6 	strh	r0, [r4, #22]
40016310:	e1c401ba 	strh	r0, [r4, #26]
40016314:	e1c401be 	strh	r0, [r4, #30]
40016318:	e1d400b4 	ldrh	r0, [r4, #4]
4001631c:	e3500003 	cmp	r0, #3
40016320:	0a000018 	beq	40016388 <CyU3PDmaChannelReset_TypeManual+0xf0>
40016324:	e1d460be 	ldrh	r6, [r4, #14]
40016328:	e1d450b8 	ldrh	r5, [r4, #8]
4001632c:	ea00000c 	b	40016364 <CyU3PDmaChannelReset_TypeManual+0xcc>
40016330:	e1a0100d 	mov	r1, sp
40016334:	e1a00006 	mov	r0, r6
40016338:	eb00303a 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001633c:	e59d000c 	ldr	r0, [sp, #12]
40016340:	e59f1044 	ldr	r1, [pc, #68]	; 4001638c <CyU3PDmaChannelReset_TypeManual+0xf4>
40016344:	e0000001 	and	r0, r0, r1
40016348:	e58d000c 	str	r0, [sp, #12]
4001634c:	e1a0100d 	mov	r1, sp
40016350:	e1a00006 	mov	r0, r6
40016354:	eb00304e 	bl	40022494 <CyU3PDmaDscrSetConfig>
40016358:	e59d0008 	ldr	r0, [sp, #8]
4001635c:	e1a06800 	lsl	r6, r0, #16
40016360:	e1a06826 	lsr	r6, r6, #16
40016364:	e1b00005 	movs	r0, r5
40016368:	e2451001 	sub	r1, r5, #1
4001636c:	e1a05801 	lsl	r5, r1, #16
40016370:	e1a05825 	lsr	r5, r5, #16
40016374:	1affffed 	bne	40016330 <CyU3PDmaChannelReset_TypeManual+0x98>
40016378:	e1d400be 	ldrh	r0, [r4, #14]
4001637c:	e1c401b8 	strh	r0, [r4, #24]
40016380:	e1c401bc 	strh	r0, [r4, #28]
40016384:	e1c402b0 	strh	r0, [r4, #32]
40016388:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
4001638c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

40016390 <CyU3PDmaChannelSetXfer>:
40016390:	e92d4070 	push	{r4, r5, r6, lr}
40016394:	e1a04000 	mov	r4, r0
40016398:	e1a05001 	mov	r5, r1
4001639c:	e3e01000 	mvn	r1, #0
400163a0:	e1a00004 	mov	r0, r4
400163a4:	ebfffb1e 	bl	40015024 <CyU3PDmaChannelAcquireLock>
400163a8:	e1a06000 	mov	r6, r0
400163ac:	e3560000 	cmp	r6, #0
400163b0:	0a000001 	beq	400163bc <CyU3PDmaChannelSetXfer+0x2c>
400163b4:	e1a00006 	mov	r0, r6
400163b8:	e8bd8070 	pop	{r4, r5, r6, pc}
400163bc:	e5940000 	ldr	r0, [r4]
400163c0:	e3500001 	cmp	r0, #1
400163c4:	0a000000 	beq	400163cc <CyU3PDmaChannelSetXfer+0x3c>
400163c8:	e3a06043 	mov	r6, #67	; 0x43
400163cc:	e1d400b8 	ldrh	r0, [r4, #8]
400163d0:	e3500000 	cmp	r0, #0
400163d4:	1a000000 	bne	400163dc <CyU3PDmaChannelSetXfer+0x4c>
400163d8:	e3a06046 	mov	r6, #70	; 0x46
400163dc:	e3560000 	cmp	r6, #0
400163e0:	1a00001d 	bne	4001645c <CyU3PDmaChannelSetXfer+0xcc>
400163e4:	e3a02002 	mov	r2, #2
400163e8:	e3e01027 	mvn	r1, #39	; 0x27
400163ec:	e2840074 	add	r0, r4, #116	; 0x74
400163f0:	ebffce50 	bl	40009d38 <_txe_event_flags_set>
400163f4:	e5845034 	str	r5, [r4, #52]	; 0x34
400163f8:	e1d400b4 	ldrh	r0, [r4, #4]
400163fc:	e3500005 	cmp	r0, #5
40016400:	308ff100 	addcc	pc, pc, r0, lsl #2
40016404:	ea000011 	b	40016450 <CyU3PDmaChannelSetXfer+0xc0>
40016408:	ea000003 	b	4001641c <CyU3PDmaChannelSetXfer+0x8c>
4001640c:	ea000004 	b	40016424 <CyU3PDmaChannelSetXfer+0x94>
40016410:	ea00000a 	b	40016440 <CyU3PDmaChannelSetXfer+0xb0>
40016414:	ea000006 	b	40016434 <CyU3PDmaChannelSetXfer+0xa4>
40016418:	ea000007 	b	4001643c <CyU3PDmaChannelSetXfer+0xac>
4001641c:	e1a00000 	nop			; (mov r0, r0)
40016420:	e1a00000 	nop			; (mov r0, r0)
40016424:	e1a01005 	mov	r1, r5
40016428:	e1a00004 	mov	r0, r4
4001642c:	eb00000e 	bl	4001646c <CyU3PDmaChannelSetXfer_TypeAuto>
40016430:	ea000008 	b	40016458 <CyU3PDmaChannelSetXfer+0xc8>
40016434:	e1a00000 	nop			; (mov r0, r0)
40016438:	e1a00000 	nop			; (mov r0, r0)
4001643c:	e1a00000 	nop			; (mov r0, r0)
40016440:	e1a01005 	mov	r1, r5
40016444:	e1a00004 	mov	r0, r4
40016448:	eb00006f 	bl	4001660c <CyU3PDmaChannelSetXfer_TypeManual>
4001644c:	ea000001 	b	40016458 <CyU3PDmaChannelSetXfer+0xc8>
40016450:	e1a00000 	nop			; (mov r0, r0)
40016454:	e1a00000 	nop			; (mov r0, r0)
40016458:	e1a00000 	nop			; (mov r0, r0)
4001645c:	e284003c 	add	r0, r4, #60	; 0x3c
40016460:	ebffcf01 	bl	4000a06c <_txe_mutex_put>
40016464:	e1a00006 	mov	r0, r6
40016468:	eaffffd2 	b	400163b8 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

4001646c <CyU3PDmaChannelSetXfer_TypeAuto>:
4001646c:	e92d4030 	push	{r4, r5, lr}
40016470:	e24dd01c 	sub	sp, sp, #28
40016474:	e1a04000 	mov	r4, r0
40016478:	e1a05001 	mov	r5, r1
4001647c:	e1d401b0 	ldrh	r0, [r4, #16]
40016480:	ebfff973 	bl	40014a54 <CyU3PDmaSocketDisable>
40016484:	e1d401b2 	ldrh	r0, [r4, #18]
40016488:	ebfff971 	bl	40014a54 <CyU3PDmaSocketDisable>
4001648c:	e3a00002 	mov	r0, #2
40016490:	e5840000 	str	r0, [r4]
40016494:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016498:	e1d401b0 	ldrh	r0, [r4, #16]
4001649c:	ebfffa87 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
400164a0:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
400164a4:	e1d401b2 	ldrh	r0, [r4, #18]
400164a8:	ebfffa84 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
400164ac:	e1d401b0 	ldrh	r0, [r4, #16]
400164b0:	e28d1004 	add	r1, sp, #4
400164b4:	ebfff97e 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
400164b8:	e58d5008 	str	r5, [sp, #8]
400164bc:	e3a00000 	mov	r0, #0
400164c0:	e58d000c 	str	r0, [sp, #12]
400164c4:	e3550000 	cmp	r5, #0
400164c8:	1a000003 	bne	400164dc <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
400164cc:	e59d0010 	ldr	r0, [sp, #16]
400164d0:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400164d4:	e58d0010 	str	r0, [sp, #16]
400164d8:	ea000002 	b	400164e8 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
400164dc:	e59d0010 	ldr	r0, [sp, #16]
400164e0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400164e4:	e58d0010 	str	r0, [sp, #16]
400164e8:	e59d0010 	ldr	r0, [sp, #16]
400164ec:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400164f0:	e58d0010 	str	r0, [sp, #16]
400164f4:	e59d0010 	ldr	r0, [sp, #16]
400164f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400164fc:	e58d0010 	str	r0, [sp, #16]
40016500:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016504:	e3500001 	cmp	r0, #1
40016508:	1a000003 	bne	4001651c <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
4001650c:	e59d0010 	ldr	r0, [sp, #16]
40016510:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016514:	e58d0010 	str	r0, [sp, #16]
40016518:	ea000002 	b	40016528 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
4001651c:	e59d0010 	ldr	r0, [sp, #16]
40016520:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016524:	e58d0010 	str	r0, [sp, #16]
40016528:	e1d400ba 	ldrh	r0, [r4, #10]
4001652c:	e3500000 	cmp	r0, #0
40016530:	0a000006 	beq	40016550 <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016534:	e1d400b8 	ldrh	r0, [r4, #8]
40016538:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001653c:	e1d410ba 	ldrh	r1, [r4, #10]
40016540:	e1800281 	orr	r0, r0, r1, lsl #5
40016544:	e59d1010 	ldr	r1, [sp, #16]
40016548:	e1800001 	orr	r0, r0, r1
4001654c:	e58d0010 	str	r0, [sp, #16]
40016550:	e3e00000 	mvn	r0, #0
40016554:	e58d0014 	str	r0, [sp, #20]
40016558:	e1d401b0 	ldrh	r0, [r4, #16]
4001655c:	e28d1004 	add	r1, sp, #4
40016560:	ebfff9fd 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40016564:	e1d401b2 	ldrh	r0, [r4, #18]
40016568:	e28d1004 	add	r1, sp, #4
4001656c:	ebfff950 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016570:	e58d5008 	str	r5, [sp, #8]
40016574:	e3a00000 	mov	r0, #0
40016578:	e58d000c 	str	r0, [sp, #12]
4001657c:	e3550000 	cmp	r5, #0
40016580:	1a000006 	bne	400165a0 <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
40016584:	e59d0018 	ldr	r0, [sp, #24]
40016588:	e3c00080 	bic	r0, r0, #128	; 0x80
4001658c:	e58d0018 	str	r0, [sp, #24]
40016590:	e59d0010 	ldr	r0, [sp, #16]
40016594:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016598:	e58d0010 	str	r0, [sp, #16]
4001659c:	ea000005 	b	400165b8 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
400165a0:	e59d0018 	ldr	r0, [sp, #24]
400165a4:	e3800080 	orr	r0, r0, #128	; 0x80
400165a8:	e58d0018 	str	r0, [sp, #24]
400165ac:	e59d0010 	ldr	r0, [sp, #16]
400165b0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400165b4:	e58d0010 	str	r0, [sp, #16]
400165b8:	e59d0010 	ldr	r0, [sp, #16]
400165bc:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400165c0:	e58d0010 	str	r0, [sp, #16]
400165c4:	e59d0010 	ldr	r0, [sp, #16]
400165c8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400165cc:	e58d0010 	str	r0, [sp, #16]
400165d0:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400165d4:	e3500001 	cmp	r0, #1
400165d8:	1a000003 	bne	400165ec <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
400165dc:	e59d0010 	ldr	r0, [sp, #16]
400165e0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400165e4:	e58d0010 	str	r0, [sp, #16]
400165e8:	ea000002 	b	400165f8 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
400165ec:	e59d0010 	ldr	r0, [sp, #16]
400165f0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400165f4:	e58d0010 	str	r0, [sp, #16]
400165f8:	e1d401b2 	ldrh	r0, [r4, #18]
400165fc:	e28d1004 	add	r1, sp, #4
40016600:	ebfff9d5 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40016604:	e28dd01c 	add	sp, sp, #28
40016608:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

4001660c <CyU3PDmaChannelSetXfer_TypeManual>:
4001660c:	e92d4030 	push	{r4, r5, lr}
40016610:	e24dd01c 	sub	sp, sp, #28
40016614:	e1a04000 	mov	r4, r0
40016618:	e1a05001 	mov	r5, r1
4001661c:	e3a00002 	mov	r0, #2
40016620:	e5840000 	str	r0, [r4]
40016624:	e1d400b4 	ldrh	r0, [r4, #4]
40016628:	e3500004 	cmp	r0, #4
4001662c:	0a00003d 	beq	40016728 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
40016630:	e1d401b0 	ldrh	r0, [r4, #16]
40016634:	ebfff906 	bl	40014a54 <CyU3PDmaSocketDisable>
40016638:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
4001663c:	e1d401b0 	ldrh	r0, [r4, #16]
40016640:	ebfffa1e 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
40016644:	e1d401b0 	ldrh	r0, [r4, #16]
40016648:	e28d1004 	add	r1, sp, #4
4001664c:	ebfff918 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016650:	e58d5008 	str	r5, [sp, #8]
40016654:	e3a00000 	mov	r0, #0
40016658:	e58d000c 	str	r0, [sp, #12]
4001665c:	e59d0010 	ldr	r0, [sp, #16]
40016660:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016664:	e58d0010 	str	r0, [sp, #16]
40016668:	e59d0010 	ldr	r0, [sp, #16]
4001666c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016670:	e58d0010 	str	r0, [sp, #16]
40016674:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016678:	e3500001 	cmp	r0, #1
4001667c:	1a000003 	bne	40016690 <CyU3PDmaChannelSetXfer_TypeManual+0x84>
40016680:	e59d0010 	ldr	r0, [sp, #16]
40016684:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016688:	e58d0010 	str	r0, [sp, #16]
4001668c:	ea000002 	b	4001669c <CyU3PDmaChannelSetXfer_TypeManual+0x90>
40016690:	e59d0010 	ldr	r0, [sp, #16]
40016694:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016698:	e58d0010 	str	r0, [sp, #16]
4001669c:	e1d400ba 	ldrh	r0, [r4, #10]
400166a0:	e3500000 	cmp	r0, #0
400166a4:	0a000006 	beq	400166c4 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
400166a8:	e1d400b8 	ldrh	r0, [r4, #8]
400166ac:	e3800b01 	orr	r0, r0, #1024	; 0x400
400166b0:	e1d410ba 	ldrh	r1, [r4, #10]
400166b4:	e1800281 	orr	r0, r0, r1, lsl #5
400166b8:	e59d1010 	ldr	r1, [sp, #16]
400166bc:	e1800001 	orr	r0, r0, r1
400166c0:	e58d0010 	str	r0, [sp, #16]
400166c4:	e3e00000 	mvn	r0, #0
400166c8:	e58d0014 	str	r0, [sp, #20]
400166cc:	e3550000 	cmp	r5, #0
400166d0:	0a000002 	beq	400166e0 <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
400166d4:	e1d400b4 	ldrh	r0, [r4, #4]
400166d8:	e3500002 	cmp	r0, #2
400166dc:	1a000008 	bne	40016704 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
400166e0:	e3a00000 	mov	r0, #0
400166e4:	e58d0008 	str	r0, [sp, #8]
400166e8:	e59d0010 	ldr	r0, [sp, #16]
400166ec:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400166f0:	e58d0010 	str	r0, [sp, #16]
400166f4:	e59d0018 	ldr	r0, [sp, #24]
400166f8:	e3c00080 	bic	r0, r0, #128	; 0x80
400166fc:	e58d0018 	str	r0, [sp, #24]
40016700:	ea000005 	b	4001671c <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016704:	e59d0010 	ldr	r0, [sp, #16]
40016708:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001670c:	e58d0010 	str	r0, [sp, #16]
40016710:	e59d0018 	ldr	r0, [sp, #24]
40016714:	e3800080 	orr	r0, r0, #128	; 0x80
40016718:	e58d0018 	str	r0, [sp, #24]
4001671c:	e1d401b0 	ldrh	r0, [r4, #16]
40016720:	e28d1004 	add	r1, sp, #4
40016724:	ebfff98c 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40016728:	e1d400b4 	ldrh	r0, [r4, #4]
4001672c:	e3500003 	cmp	r0, #3
40016730:	0a00002e 	beq	400167f0 <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016734:	e1d401b2 	ldrh	r0, [r4, #18]
40016738:	ebfff8c5 	bl	40014a54 <CyU3PDmaSocketDisable>
4001673c:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016740:	e1d401b2 	ldrh	r0, [r4, #18]
40016744:	ebfff9dd 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
40016748:	e1d401b2 	ldrh	r0, [r4, #18]
4001674c:	e28d1004 	add	r1, sp, #4
40016750:	ebfff8d7 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016754:	e58d5008 	str	r5, [sp, #8]
40016758:	e3a00000 	mov	r0, #0
4001675c:	e58d000c 	str	r0, [sp, #12]
40016760:	e59d0010 	ldr	r0, [sp, #16]
40016764:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016768:	e58d0010 	str	r0, [sp, #16]
4001676c:	e59d0010 	ldr	r0, [sp, #16]
40016770:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016774:	e58d0010 	str	r0, [sp, #16]
40016778:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
4001677c:	e3500001 	cmp	r0, #1
40016780:	1a000003 	bne	40016794 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016784:	e59d0010 	ldr	r0, [sp, #16]
40016788:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
4001678c:	e58d0010 	str	r0, [sp, #16]
40016790:	ea000002 	b	400167a0 <CyU3PDmaChannelSetXfer_TypeManual+0x194>
40016794:	e59d0010 	ldr	r0, [sp, #16]
40016798:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001679c:	e58d0010 	str	r0, [sp, #16]
400167a0:	e3e00000 	mvn	r0, #0
400167a4:	e58d0014 	str	r0, [sp, #20]
400167a8:	e3550000 	cmp	r5, #0
400167ac:	1a000006 	bne	400167cc <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
400167b0:	e59d0010 	ldr	r0, [sp, #16]
400167b4:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400167b8:	e58d0010 	str	r0, [sp, #16]
400167bc:	e59d0018 	ldr	r0, [sp, #24]
400167c0:	e3c00080 	bic	r0, r0, #128	; 0x80
400167c4:	e58d0018 	str	r0, [sp, #24]
400167c8:	ea000005 	b	400167e4 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
400167cc:	e59d0010 	ldr	r0, [sp, #16]
400167d0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400167d4:	e58d0010 	str	r0, [sp, #16]
400167d8:	e59d0018 	ldr	r0, [sp, #24]
400167dc:	e3800080 	orr	r0, r0, #128	; 0x80
400167e0:	e58d0018 	str	r0, [sp, #24]
400167e4:	e1d401b2 	ldrh	r0, [r4, #18]
400167e8:	e28d1004 	add	r1, sp, #4
400167ec:	ebfff95a 	bl	40014d5c <CyU3PDmaSocketSetConfig>
400167f0:	e28dd01c 	add	sp, sp, #28
400167f4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

400167f8 <CyU3PDmaChannelSetupRecvBuffer>:
400167f8:	e92d4070 	push	{r4, r5, r6, lr}
400167fc:	e24dd028 	sub	sp, sp, #40	; 0x28
40016800:	e1a04000 	mov	r4, r0
40016804:	e1a05001 	mov	r5, r1
40016808:	e3550000 	cmp	r5, #0
4001680c:	1a000002 	bne	4001681c <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016810:	e3a00041 	mov	r0, #65	; 0x41
40016814:	e28dd028 	add	sp, sp, #40	; 0x28
40016818:	e8bd8070 	pop	{r4, r5, r6, pc}
4001681c:	e5950000 	ldr	r0, [r5]
40016820:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016824:	3a000005 	bcc	40016840 <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016828:	e5950000 	ldr	r0, [r5]
4001682c:	e1d510b6 	ldrh	r1, [r5, #6]
40016830:	e0800001 	add	r0, r0, r1
40016834:	e59f11d4 	ldr	r1, [pc, #468]	; 40016a10 <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016838:	e1500001 	cmp	r0, r1
4001683c:	3a000001 	bcc	40016848 <CyU3PDmaChannelSetupRecvBuffer+0x50>
40016840:	e3a00040 	mov	r0, #64	; 0x40
40016844:	eafffff2 	b	40016814 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016848:	e1d500b6 	ldrh	r0, [r5, #6]
4001684c:	e59f11c0 	ldr	r1, [pc, #448]	; 40016a14 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
40016850:	e1500001 	cmp	r0, r1
40016854:	da000001 	ble	40016860 <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016858:	e3a00040 	mov	r0, #64	; 0x40
4001685c:	eaffffec 	b	40016814 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016860:	e1d500b6 	ldrh	r0, [r5, #6]
40016864:	e3500000 	cmp	r0, #0
40016868:	0a000002 	beq	40016878 <CyU3PDmaChannelSetupRecvBuffer+0x80>
4001686c:	e1d500b6 	ldrh	r0, [r5, #6]
40016870:	e310000f 	tst	r0, #15
40016874:	0a000001 	beq	40016880 <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016878:	e3a00040 	mov	r0, #64	; 0x40
4001687c:	eaffffe4 	b	40016814 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016880:	e3e01000 	mvn	r1, #0
40016884:	e1a00004 	mov	r0, r4
40016888:	ebfff9e5 	bl	40015024 <CyU3PDmaChannelAcquireLock>
4001688c:	e1a06000 	mov	r6, r0
40016890:	e3560000 	cmp	r6, #0
40016894:	0a000001 	beq	400168a0 <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016898:	e1a00006 	mov	r0, r6
4001689c:	eaffffdc 	b	40016814 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168a0:	e1d400b4 	ldrh	r0, [r4, #4]
400168a4:	e3500004 	cmp	r0, #4
400168a8:	1a000000 	bne	400168b0 <CyU3PDmaChannelSetupRecvBuffer+0xb8>
400168ac:	e3a06046 	mov	r6, #70	; 0x46
400168b0:	e5940000 	ldr	r0, [r4]
400168b4:	e3500001 	cmp	r0, #1
400168b8:	0a000000 	beq	400168c0 <CyU3PDmaChannelSetupRecvBuffer+0xc8>
400168bc:	e3a06043 	mov	r6, #67	; 0x43
400168c0:	e3560000 	cmp	r6, #0
400168c4:	0a000003 	beq	400168d8 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
400168c8:	e284003c 	add	r0, r4, #60	; 0x3c
400168cc:	ebffcde6 	bl	4000a06c <_txe_mutex_put>
400168d0:	e1a00006 	mov	r0, r6
400168d4:	eaffffce 	b	40016814 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168d8:	e1d401b0 	ldrh	r0, [r4, #16]
400168dc:	ebfff85c 	bl	40014a54 <CyU3PDmaSocketDisable>
400168e0:	e1d401b0 	ldrh	r0, [r4, #16]
400168e4:	e3a01000 	mov	r1, #0
400168e8:	ebfff974 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
400168ec:	e3a02002 	mov	r2, #2
400168f0:	e3e01027 	mvn	r1, #39	; 0x27
400168f4:	e2840074 	add	r0, r4, #116	; 0x74
400168f8:	ebffcd0e 	bl	40009d38 <_txe_event_flags_set>
400168fc:	e3a00004 	mov	r0, #4
40016900:	e5840000 	str	r0, [r4]
40016904:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016908:	e3500000 	cmp	r0, #0
4001690c:	0a000002 	beq	4001691c <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016910:	e1d510b6 	ldrh	r1, [r5, #6]
40016914:	e5950000 	ldr	r0, [r5]
40016918:	ebffed96 	bl	40011f78 <CyU3PSysFlushDRegion>
4001691c:	e1d401b0 	ldrh	r0, [r4, #16]
40016920:	e1a0100d 	mov	r1, sp
40016924:	ebfff862 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016928:	e59d0000 	ldr	r0, [sp]
4001692c:	e1c401b6 	strh	r0, [r4, #22]
40016930:	e1d401b4 	ldrh	r0, [r4, #20]
40016934:	e28d1018 	add	r1, sp, #24
40016938:	eb002eba 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001693c:	e5950000 	ldr	r0, [r5]
40016940:	e58d0018 	str	r0, [sp, #24]
40016944:	e1d401b0 	ldrh	r0, [r4, #16]
40016948:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
4001694c:	e1810800 	orr	r0, r1, r0, lsl #16
40016950:	e58d001c 	str	r0, [sp, #28]
40016954:	e59d001c 	ldr	r0, [sp, #28]
40016958:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
4001695c:	e58d001c 	str	r0, [sp, #28]
40016960:	e1d401b6 	ldrh	r0, [r4, #22]
40016964:	e1e01741 	mvn	r1, r1, asr #14
40016968:	e1810800 	orr	r0, r1, r0, lsl #16
4001696c:	e58d0020 	str	r0, [sp, #32]
40016970:	e1d500b6 	ldrh	r0, [r5, #6]
40016974:	e241100f 	sub	r1, r1, #15
40016978:	e0000001 	and	r0, r0, r1
4001697c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016980:	e1d401b4 	ldrh	r0, [r4, #20]
40016984:	e28d1018 	add	r1, sp, #24
40016988:	eb002ec1 	bl	40022494 <CyU3PDmaDscrSetConfig>
4001698c:	e59d000c 	ldr	r0, [sp, #12]
40016990:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016994:	e58d000c 	str	r0, [sp, #12]
40016998:	e59d000c 	ldr	r0, [sp, #12]
4001699c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400169a0:	e58d000c 	str	r0, [sp, #12]
400169a4:	e59d000c 	ldr	r0, [sp, #12]
400169a8:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400169ac:	e58d000c 	str	r0, [sp, #12]
400169b0:	e59d000c 	ldr	r0, [sp, #12]
400169b4:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400169b8:	e58d000c 	str	r0, [sp, #12]
400169bc:	e3a00001 	mov	r0, #1
400169c0:	e58d0004 	str	r0, [sp, #4]
400169c4:	e3a00000 	mov	r0, #0
400169c8:	e58d0008 	str	r0, [sp, #8]
400169cc:	e3e00000 	mvn	r0, #0
400169d0:	e58d0010 	str	r0, [sp, #16]
400169d4:	e59d0014 	ldr	r0, [sp, #20]
400169d8:	e3800001 	orr	r0, r0, #1
400169dc:	e58d0014 	str	r0, [sp, #20]
400169e0:	e59d0014 	ldr	r0, [sp, #20]
400169e4:	e3c00080 	bic	r0, r0, #128	; 0x80
400169e8:	e58d0014 	str	r0, [sp, #20]
400169ec:	e1d401b4 	ldrh	r0, [r4, #20]
400169f0:	e58d0000 	str	r0, [sp]
400169f4:	e1d401b0 	ldrh	r0, [r4, #16]
400169f8:	e1a0100d 	mov	r1, sp
400169fc:	ebfff8d6 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40016a00:	e284003c 	add	r0, r4, #60	; 0x3c
40016a04:	ebffcd98 	bl	4000a06c <_txe_mutex_put>
40016a08:	e3a00000 	mov	r0, #0
40016a0c:	eaffff80 	b	40016814 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016a10:	40080000 	.word	0x40080000
40016a14:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016a18 <CyU3PDmaChannelSetupSendBuffer>:
40016a18:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016a1c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016a20:	e1a04000 	mov	r4, r0
40016a24:	e1a05001 	mov	r5, r1
40016a28:	e3550000 	cmp	r5, #0
40016a2c:	1a000002 	bne	40016a3c <CyU3PDmaChannelSetupSendBuffer+0x24>
40016a30:	e3a00041 	mov	r0, #65	; 0x41
40016a34:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016a38:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016a3c:	e5950000 	ldr	r0, [r5]
40016a40:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016a44:	3a000005 	bcc	40016a60 <CyU3PDmaChannelSetupSendBuffer+0x48>
40016a48:	e5950000 	ldr	r0, [r5]
40016a4c:	e1d510b4 	ldrh	r1, [r5, #4]
40016a50:	e0800001 	add	r0, r0, r1
40016a54:	e59f11ec 	ldr	r1, [pc, #492]	; 40016c48 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016a58:	e1500001 	cmp	r0, r1
40016a5c:	3a000001 	bcc	40016a68 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016a60:	e3a00040 	mov	r0, #64	; 0x40
40016a64:	eafffff2 	b	40016a34 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016a68:	e1d500b4 	ldrh	r0, [r5, #4]
40016a6c:	e59f11d8 	ldr	r1, [pc, #472]	; 40016c4c <CyU3PDmaChannelSetupSendBuffer+0x234>
40016a70:	e1500001 	cmp	r0, r1
40016a74:	da000001 	ble	40016a80 <CyU3PDmaChannelSetupSendBuffer+0x68>
40016a78:	e3a00040 	mov	r0, #64	; 0x40
40016a7c:	eaffffec 	b	40016a34 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016a80:	e3e01000 	mvn	r1, #0
40016a84:	e1a00004 	mov	r0, r4
40016a88:	ebfff965 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40016a8c:	e1a07000 	mov	r7, r0
40016a90:	e3570000 	cmp	r7, #0
40016a94:	0a000001 	beq	40016aa0 <CyU3PDmaChannelSetupSendBuffer+0x88>
40016a98:	e1a00007 	mov	r0, r7
40016a9c:	eaffffe4 	b	40016a34 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016aa0:	e1d400b4 	ldrh	r0, [r4, #4]
40016aa4:	e3500003 	cmp	r0, #3
40016aa8:	1a000000 	bne	40016ab0 <CyU3PDmaChannelSetupSendBuffer+0x98>
40016aac:	e3a07046 	mov	r7, #70	; 0x46
40016ab0:	e5940000 	ldr	r0, [r4]
40016ab4:	e3500001 	cmp	r0, #1
40016ab8:	0a000000 	beq	40016ac0 <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016abc:	e3a07043 	mov	r7, #67	; 0x43
40016ac0:	e3570000 	cmp	r7, #0
40016ac4:	0a000003 	beq	40016ad8 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016ac8:	e284003c 	add	r0, r4, #60	; 0x3c
40016acc:	ebffcd66 	bl	4000a06c <_txe_mutex_put>
40016ad0:	e1a00007 	mov	r0, r7
40016ad4:	eaffffd6 	b	40016a34 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016ad8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016adc:	e3500000 	cmp	r0, #0
40016ae0:	0a000005 	beq	40016afc <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016ae4:	e1d500b4 	ldrh	r0, [r5, #4]
40016ae8:	e3500000 	cmp	r0, #0
40016aec:	0a000002 	beq	40016afc <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016af0:	e1d510b4 	ldrh	r1, [r5, #4]
40016af4:	e5950000 	ldr	r0, [r5]
40016af8:	ebffed10 	bl	40011f40 <CyU3PSysCleanDRegion>
40016afc:	e1d401b2 	ldrh	r0, [r4, #18]
40016b00:	ebfff7d3 	bl	40014a54 <CyU3PDmaSocketDisable>
40016b04:	e1d401b2 	ldrh	r0, [r4, #18]
40016b08:	e3a01000 	mov	r1, #0
40016b0c:	ebfff8eb 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
40016b10:	e3a02002 	mov	r2, #2
40016b14:	e3e01027 	mvn	r1, #39	; 0x27
40016b18:	e2840074 	add	r0, r4, #116	; 0x74
40016b1c:	ebffcc85 	bl	40009d38 <_txe_event_flags_set>
40016b20:	e3a00003 	mov	r0, #3
40016b24:	e5840000 	str	r0, [r4]
40016b28:	e1d401b2 	ldrh	r0, [r4, #18]
40016b2c:	e28d1004 	add	r1, sp, #4
40016b30:	ebfff7df 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016b34:	e59d0004 	ldr	r0, [sp, #4]
40016b38:	e1c401b8 	strh	r0, [r4, #24]
40016b3c:	e1d401b4 	ldrh	r0, [r4, #20]
40016b40:	e28d101c 	add	r1, sp, #28
40016b44:	eb002e37 	bl	40022428 <CyU3PDmaDscrGetConfig>
40016b48:	e5950000 	ldr	r0, [r5]
40016b4c:	e58d001c 	str	r0, [sp, #28]
40016b50:	e1d401b2 	ldrh	r0, [r4, #18]
40016b54:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016b58:	e58d0020 	str	r0, [sp, #32]
40016b5c:	e59d0020 	ldr	r0, [sp, #32]
40016b60:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016b64:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016b68:	e58d0020 	str	r0, [sp, #32]
40016b6c:	e1d401b8 	ldrh	r0, [r4, #24]
40016b70:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016b74:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016b78:	e1d500b4 	ldrh	r0, [r5, #4]
40016b7c:	e280000f 	add	r0, r0, #15
40016b80:	e59f10c4 	ldr	r1, [pc, #196]	; 40016c4c <CyU3PDmaChannelSetupSendBuffer+0x234>
40016b84:	e0006001 	and	r6, r0, r1
40016b88:	e1d500b4 	ldrh	r0, [r5, #4]
40016b8c:	e1860800 	orr	r0, r6, r0, lsl #16
40016b90:	e3800008 	orr	r0, r0, #8
40016b94:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016b98:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016b9c:	e1d510b8 	ldrh	r1, [r5, #8]
40016ba0:	e201100e 	and	r1, r1, #14
40016ba4:	e1800001 	orr	r0, r0, r1
40016ba8:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016bac:	e1d401b4 	ldrh	r0, [r4, #20]
40016bb0:	e28d101c 	add	r1, sp, #28
40016bb4:	eb002e36 	bl	40022494 <CyU3PDmaDscrSetConfig>
40016bb8:	e59d0010 	ldr	r0, [sp, #16]
40016bbc:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016bc0:	e58d0010 	str	r0, [sp, #16]
40016bc4:	e59d0010 	ldr	r0, [sp, #16]
40016bc8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016bcc:	e58d0010 	str	r0, [sp, #16]
40016bd0:	e59d0010 	ldr	r0, [sp, #16]
40016bd4:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016bd8:	e58d0010 	str	r0, [sp, #16]
40016bdc:	e59d0010 	ldr	r0, [sp, #16]
40016be0:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40016be4:	e58d0010 	str	r0, [sp, #16]
40016be8:	e59d0010 	ldr	r0, [sp, #16]
40016bec:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016bf0:	e58d0010 	str	r0, [sp, #16]
40016bf4:	e1d500b4 	ldrh	r0, [r5, #4]
40016bf8:	e58d0008 	str	r0, [sp, #8]
40016bfc:	e3a00000 	mov	r0, #0
40016c00:	e58d000c 	str	r0, [sp, #12]
40016c04:	e3e00000 	mvn	r0, #0
40016c08:	e58d0014 	str	r0, [sp, #20]
40016c0c:	e59d0018 	ldr	r0, [sp, #24]
40016c10:	e3800002 	orr	r0, r0, #2
40016c14:	e58d0018 	str	r0, [sp, #24]
40016c18:	e59d0018 	ldr	r0, [sp, #24]
40016c1c:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c20:	e58d0018 	str	r0, [sp, #24]
40016c24:	e1d401b4 	ldrh	r0, [r4, #20]
40016c28:	e58d0004 	str	r0, [sp, #4]
40016c2c:	e1d401b2 	ldrh	r0, [r4, #18]
40016c30:	e28d1004 	add	r1, sp, #4
40016c34:	ebfff848 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40016c38:	e284003c 	add	r0, r4, #60	; 0x3c
40016c3c:	ebffcd0a 	bl	4000a06c <_txe_mutex_put>
40016c40:	e3a00000 	mov	r0, #0
40016c44:	eaffff7a 	b	40016a34 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016c48:	40080000 	.word	0x40080000
40016c4c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40016c50 <CyU3PDmaChannelWaitForCompletion>:
40016c50:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40016c54:	e1a04000 	mov	r4, r0
40016c58:	e1a05001 	mov	r5, r1
40016c5c:	e3a08000 	mov	r8, #0
40016c60:	e1a01005 	mov	r1, r5
40016c64:	e1a00004 	mov	r0, r4
40016c68:	ebfff8ed 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40016c6c:	e1a07000 	mov	r7, r0
40016c70:	e3570000 	cmp	r7, #0
40016c74:	0a000001 	beq	40016c80 <CyU3PDmaChannelWaitForCompletion+0x30>
40016c78:	e1a00007 	mov	r0, r7
40016c7c:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40016c80:	e5946000 	ldr	r6, [r4]
40016c84:	e3560001 	cmp	r6, #1
40016c88:	1a00000b 	bne	40016cbc <CyU3PDmaChannelWaitForCompletion+0x6c>
40016c8c:	e3a03000 	mov	r3, #0
40016c90:	e58d3000 	str	r3, [sp]
40016c94:	e28d3004 	add	r3, sp, #4
40016c98:	e3a02000 	mov	r2, #0
40016c9c:	e3a01007 	mov	r1, #7
40016ca0:	e2840074 	add	r0, r4, #116	; 0x74
40016ca4:	ebffcbf3 	bl	40009c78 <_txe_event_flags_get>
40016ca8:	e1a07000 	mov	r7, r0
40016cac:	e3570000 	cmp	r7, #0
40016cb0:	0a000016 	beq	40016d10 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cb4:	e3a07042 	mov	r7, #66	; 0x42
40016cb8:	ea000014 	b	40016d10 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cbc:	e3560002 	cmp	r6, #2
40016cc0:	1a000005 	bne	40016cdc <CyU3PDmaChannelWaitForCompletion+0x8c>
40016cc4:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40016cc8:	e3500000 	cmp	r0, #0
40016ccc:	1a000000 	bne	40016cd4 <CyU3PDmaChannelWaitForCompletion+0x84>
40016cd0:	e3a07046 	mov	r7, #70	; 0x46
40016cd4:	e3a08061 	mov	r8, #97	; 0x61
40016cd8:	ea00000c 	b	40016d10 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cdc:	e3560003 	cmp	r6, #3
40016ce0:	1a000001 	bne	40016cec <CyU3PDmaChannelWaitForCompletion+0x9c>
40016ce4:	e3a08062 	mov	r8, #98	; 0x62
40016ce8:	ea000008 	b	40016d10 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cec:	e3560004 	cmp	r6, #4
40016cf0:	1a000001 	bne	40016cfc <CyU3PDmaChannelWaitForCompletion+0xac>
40016cf4:	e3a08064 	mov	r8, #100	; 0x64
40016cf8:	ea000004 	b	40016d10 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016cfc:	e3560005 	cmp	r6, #5
40016d00:	1a000001 	bne	40016d0c <CyU3PDmaChannelWaitForCompletion+0xbc>
40016d04:	e3a07049 	mov	r7, #73	; 0x49
40016d08:	ea000000 	b	40016d10 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d0c:	e3a07042 	mov	r7, #66	; 0x42
40016d10:	e284003c 	add	r0, r4, #60	; 0x3c
40016d14:	ebffccd4 	bl	4000a06c <_txe_mutex_put>
40016d18:	e3570000 	cmp	r7, #0
40016d1c:	1a000015 	bne	40016d78 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d20:	e3580000 	cmp	r8, #0
40016d24:	0a000013 	beq	40016d78 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d28:	e58d5000 	str	r5, [sp]
40016d2c:	e28d3004 	add	r3, sp, #4
40016d30:	e3a02000 	mov	r2, #0
40016d34:	e1a01008 	mov	r1, r8
40016d38:	e2840074 	add	r0, r4, #116	; 0x74
40016d3c:	ebffcbcd 	bl	40009c78 <_txe_event_flags_get>
40016d40:	e1a07000 	mov	r7, r0
40016d44:	e3570000 	cmp	r7, #0
40016d48:	0a000001 	beq	40016d54 <CyU3PDmaChannelWaitForCompletion+0x104>
40016d4c:	e3a07045 	mov	r7, #69	; 0x45
40016d50:	ea000008 	b	40016d78 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d54:	e59d0004 	ldr	r0, [sp, #4]
40016d58:	e3100040 	tst	r0, #64	; 0x40
40016d5c:	0a000001 	beq	40016d68 <CyU3PDmaChannelWaitForCompletion+0x118>
40016d60:	e3a07049 	mov	r7, #73	; 0x49
40016d64:	ea000003 	b	40016d78 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d68:	e59d0004 	ldr	r0, [sp, #4]
40016d6c:	e3100020 	tst	r0, #32
40016d70:	0a000000 	beq	40016d78 <CyU3PDmaChannelWaitForCompletion+0x128>
40016d74:	e3a07048 	mov	r7, #72	; 0x48
40016d78:	e1a00007 	mov	r0, r7
40016d7c:	eaffffbe 	b	40016c7c <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40016d80 <CyU3PDmaChannelWaitForRecvBuffer>:
40016d80:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016d84:	e24dd018 	sub	sp, sp, #24
40016d88:	e1a04000 	mov	r4, r0
40016d8c:	e1a05001 	mov	r5, r1
40016d90:	e1a06002 	mov	r6, r2
40016d94:	e3550000 	cmp	r5, #0
40016d98:	1a000002 	bne	40016da8 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
40016d9c:	e3a00041 	mov	r0, #65	; 0x41
40016da0:	e28dd018 	add	sp, sp, #24
40016da4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016da8:	e1a01006 	mov	r1, r6
40016dac:	e1a00004 	mov	r0, r4
40016db0:	ebfff89b 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40016db4:	e1a07000 	mov	r7, r0
40016db8:	e3570000 	cmp	r7, #0
40016dbc:	0a000001 	beq	40016dc8 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40016dc0:	e1a00007 	mov	r0, r7
40016dc4:	eafffff5 	b	40016da0 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016dc8:	e1d400b4 	ldrh	r0, [r4, #4]
40016dcc:	e3500004 	cmp	r0, #4
40016dd0:	1a000000 	bne	40016dd8 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40016dd4:	e3a07046 	mov	r7, #70	; 0x46
40016dd8:	e5948000 	ldr	r8, [r4]
40016ddc:	e3570000 	cmp	r7, #0
40016de0:	1a000034 	bne	40016eb8 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016de4:	e3580004 	cmp	r8, #4
40016de8:	1a00001e 	bne	40016e68 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40016dec:	e284003c 	add	r0, r4, #60	; 0x3c
40016df0:	ebffcc9d 	bl	4000a06c <_txe_mutex_put>
40016df4:	e58d6000 	str	r6, [sp]
40016df8:	e28d3014 	add	r3, sp, #20
40016dfc:	e3a02000 	mov	r2, #0
40016e00:	e3a01064 	mov	r1, #100	; 0x64
40016e04:	e2840074 	add	r0, r4, #116	; 0x74
40016e08:	ebffcb9a 	bl	40009c78 <_txe_event_flags_get>
40016e0c:	e1a07000 	mov	r7, r0
40016e10:	e3570000 	cmp	r7, #0
40016e14:	0a000001 	beq	40016e20 <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40016e18:	e3a00045 	mov	r0, #69	; 0x45
40016e1c:	eaffffdf 	b	40016da0 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e20:	e59d0014 	ldr	r0, [sp, #20]
40016e24:	e3100040 	tst	r0, #64	; 0x40
40016e28:	0a000001 	beq	40016e34 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40016e2c:	e3a00049 	mov	r0, #73	; 0x49
40016e30:	eaffffda 	b	40016da0 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e34:	e59d0014 	ldr	r0, [sp, #20]
40016e38:	e3100020 	tst	r0, #32
40016e3c:	0a000001 	beq	40016e48 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40016e40:	e3a00048 	mov	r0, #72	; 0x48
40016e44:	eaffffd5 	b	40016da0 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e48:	e1a01006 	mov	r1, r6
40016e4c:	e1a00004 	mov	r0, r4
40016e50:	ebfff873 	bl	40015024 <CyU3PDmaChannelAcquireLock>
40016e54:	e1a07000 	mov	r7, r0
40016e58:	e3570000 	cmp	r7, #0
40016e5c:	0a000015 	beq	40016eb8 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016e60:	e1a00007 	mov	r0, r7
40016e64:	eaffffcd 	b	40016da0 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e68:	e3580001 	cmp	r8, #1
40016e6c:	1a000010 	bne	40016eb4 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40016e70:	e3a03000 	mov	r3, #0
40016e74:	e58d3000 	str	r3, [sp]
40016e78:	e28d3014 	add	r3, sp, #20
40016e7c:	e3a02000 	mov	r2, #0
40016e80:	e3a01024 	mov	r1, #36	; 0x24
40016e84:	e2840074 	add	r0, r4, #116	; 0x74
40016e88:	ebffcb7a 	bl	40009c78 <_txe_event_flags_get>
40016e8c:	e1a07000 	mov	r7, r0
40016e90:	e3570000 	cmp	r7, #0
40016e94:	0a000001 	beq	40016ea0 <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40016e98:	e3a07047 	mov	r7, #71	; 0x47
40016e9c:	ea000005 	b	40016eb8 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016ea0:	e59d0014 	ldr	r0, [sp, #20]
40016ea4:	e3100020 	tst	r0, #32
40016ea8:	0a000002 	beq	40016eb8 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016eac:	e3a07042 	mov	r7, #66	; 0x42
40016eb0:	ea000000 	b	40016eb8 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016eb4:	e3a07047 	mov	r7, #71	; 0x47
40016eb8:	e3570000 	cmp	r7, #0
40016ebc:	0a000003 	beq	40016ed0 <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40016ec0:	e284003c 	add	r0, r4, #60	; 0x3c
40016ec4:	ebffcc68 	bl	4000a06c <_txe_mutex_put>
40016ec8:	e1a00007 	mov	r0, r7
40016ecc:	eaffffb3 	b	40016da0 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016ed0:	e1d401b4 	ldrh	r0, [r4, #20]
40016ed4:	e28d1004 	add	r1, sp, #4
40016ed8:	eb002d52 	bl	40022428 <CyU3PDmaDscrGetConfig>
40016edc:	e59d0004 	ldr	r0, [sp, #4]
40016ee0:	e5850000 	str	r0, [r5]
40016ee4:	e59d0010 	ldr	r0, [sp, #16]
40016ee8:	e59f1030 	ldr	r1, [pc, #48]	; 40016f20 <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40016eec:	e0010820 	and	r0, r1, r0, lsr #16
40016ef0:	e1c500b4 	strh	r0, [r5, #4]
40016ef4:	e241100f 	sub	r1, r1, #15
40016ef8:	e59d0010 	ldr	r0, [sp, #16]
40016efc:	e0000001 	and	r0, r0, r1
40016f00:	e1c500b6 	strh	r0, [r5, #6]
40016f04:	e59d0010 	ldr	r0, [sp, #16]
40016f08:	e200000f 	and	r0, r0, #15
40016f0c:	e1c500b8 	strh	r0, [r5, #8]
40016f10:	e284003c 	add	r0, r4, #60	; 0x3c
40016f14:	ebffcc54 	bl	4000a06c <_txe_mutex_put>
40016f18:	e3a00000 	mov	r0, #0
40016f1c:	eaffff9f 	b	40016da0 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f20:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

40016f24 <CyU3PDmaConfigureSockets_TypeAuto>:
40016f24:	e92d4010 	push	{r4, lr}
40016f28:	e24dd018 	sub	sp, sp, #24
40016f2c:	e1a04000 	mov	r4, r0
40016f30:	e1d401b0 	ldrh	r0, [r4, #16]
40016f34:	ebfff6c6 	bl	40014a54 <CyU3PDmaSocketDisable>
40016f38:	e1d401b2 	ldrh	r0, [r4, #18]
40016f3c:	ebfff6c4 	bl	40014a54 <CyU3PDmaSocketDisable>
40016f40:	e1d401b0 	ldrh	r0, [r4, #16]
40016f44:	e1a0100d 	mov	r1, sp
40016f48:	ebfff6d9 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016f4c:	e1d400bc 	ldrh	r0, [r4, #12]
40016f50:	e58d0000 	str	r0, [sp]
40016f54:	e3a00000 	mov	r0, #0
40016f58:	e58d0004 	str	r0, [sp, #4]
40016f5c:	e58d0008 	str	r0, [sp, #8]
40016f60:	e3a00646 	mov	r0, #73400320	; 0x4600000
40016f64:	e58d000c 	str	r0, [sp, #12]
40016f68:	e1d401b0 	ldrh	r0, [r4, #16]
40016f6c:	eb000df6 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40016f70:	e3500000 	cmp	r0, #0
40016f74:	0a000002 	beq	40016f84 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40016f78:	e59d000c 	ldr	r0, [sp, #12]
40016f7c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016f80:	e58d000c 	str	r0, [sp, #12]
40016f84:	e3e00000 	mvn	r0, #0
40016f88:	e58d0010 	str	r0, [sp, #16]
40016f8c:	e1d400b4 	ldrh	r0, [r4, #4]
40016f90:	e3500001 	cmp	r0, #1
40016f94:	1a000001 	bne	40016fa0 <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40016f98:	e3a00041 	mov	r0, #65	; 0x41
40016f9c:	ea000000 	b	40016fa4 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
40016fa0:	e3a00040 	mov	r0, #64	; 0x40
40016fa4:	e58d0014 	str	r0, [sp, #20]
40016fa8:	e1d401b0 	ldrh	r0, [r4, #16]
40016fac:	e1a0100d 	mov	r1, sp
40016fb0:	ebfff769 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40016fb4:	e1d401b2 	ldrh	r0, [r4, #18]
40016fb8:	e1a0100d 	mov	r1, sp
40016fbc:	ebfff6bc 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40016fc0:	e1d400bc 	ldrh	r0, [r4, #12]
40016fc4:	e58d0000 	str	r0, [sp]
40016fc8:	e3a00000 	mov	r0, #0
40016fcc:	e58d0004 	str	r0, [sp, #4]
40016fd0:	e58d0008 	str	r0, [sp, #8]
40016fd4:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40016fd8:	e58d000c 	str	r0, [sp, #12]
40016fdc:	e1d401b2 	ldrh	r0, [r4, #18]
40016fe0:	eb000dd9 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40016fe4:	e3500000 	cmp	r0, #0
40016fe8:	0a000002 	beq	40016ff8 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40016fec:	e59d000c 	ldr	r0, [sp, #12]
40016ff0:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016ff4:	e58d000c 	str	r0, [sp, #12]
40016ff8:	e3e00000 	mvn	r0, #0
40016ffc:	e58d0010 	str	r0, [sp, #16]
40017000:	e3a000c0 	mov	r0, #192	; 0xc0
40017004:	e58d0014 	str	r0, [sp, #20]
40017008:	e1d401b2 	ldrh	r0, [r4, #18]
4001700c:	e1a0100d 	mov	r1, sp
40017010:	ebfff751 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40017014:	e3a00000 	mov	r0, #0
40017018:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
4001701c:	e28dd018 	add	sp, sp, #24
40017020:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

40017024 <CyU3PDmaConfigureSockets_TypeManual>:
40017024:	e92d4010 	push	{r4, lr}
40017028:	e24dd018 	sub	sp, sp, #24
4001702c:	e1a04000 	mov	r4, r0
40017030:	e1d400b4 	ldrh	r0, [r4, #4]
40017034:	e3500004 	cmp	r0, #4
40017038:	0a00001f 	beq	400170bc <CyU3PDmaConfigureSockets_TypeManual+0x98>
4001703c:	e1d401b0 	ldrh	r0, [r4, #16]
40017040:	ebfff683 	bl	40014a54 <CyU3PDmaSocketDisable>
40017044:	e1d401b0 	ldrh	r0, [r4, #16]
40017048:	e1a0100d 	mov	r1, sp
4001704c:	ebfff698 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40017050:	e1d400bc 	ldrh	r0, [r4, #12]
40017054:	e58d0000 	str	r0, [sp]
40017058:	e3a00000 	mov	r0, #0
4001705c:	e58d0004 	str	r0, [sp, #4]
40017060:	e58d0008 	str	r0, [sp, #8]
40017064:	e3a00646 	mov	r0, #73400320	; 0x4600000
40017068:	e58d000c 	str	r0, [sp, #12]
4001706c:	e1d401b0 	ldrh	r0, [r4, #16]
40017070:	eb000db5 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40017074:	e3500000 	cmp	r0, #0
40017078:	0a000002 	beq	40017088 <CyU3PDmaConfigureSockets_TypeManual+0x64>
4001707c:	e59d000c 	ldr	r0, [sp, #12]
40017080:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017084:	e58d000c 	str	r0, [sp, #12]
40017088:	e3e00000 	mvn	r0, #0
4001708c:	e58d0010 	str	r0, [sp, #16]
40017090:	e3a00041 	mov	r0, #65	; 0x41
40017094:	e58d0014 	str	r0, [sp, #20]
40017098:	e1d400b4 	ldrh	r0, [r4, #4]
4001709c:	e3500003 	cmp	r0, #3
400170a0:	1a000002 	bne	400170b0 <CyU3PDmaConfigureSockets_TypeManual+0x8c>
400170a4:	e59d0014 	ldr	r0, [sp, #20]
400170a8:	e3800080 	orr	r0, r0, #128	; 0x80
400170ac:	e58d0014 	str	r0, [sp, #20]
400170b0:	e1d401b0 	ldrh	r0, [r4, #16]
400170b4:	e1a0100d 	mov	r1, sp
400170b8:	ebfff727 	bl	40014d5c <CyU3PDmaSocketSetConfig>
400170bc:	e1d400b4 	ldrh	r0, [r4, #4]
400170c0:	e3500003 	cmp	r0, #3
400170c4:	0a000019 	beq	40017130 <CyU3PDmaConfigureSockets_TypeManual+0x10c>
400170c8:	e1d401b2 	ldrh	r0, [r4, #18]
400170cc:	ebfff660 	bl	40014a54 <CyU3PDmaSocketDisable>
400170d0:	e1d401b2 	ldrh	r0, [r4, #18]
400170d4:	e1a0100d 	mov	r1, sp
400170d8:	ebfff675 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
400170dc:	e1d400be 	ldrh	r0, [r4, #14]
400170e0:	e58d0000 	str	r0, [sp]
400170e4:	e3a00000 	mov	r0, #0
400170e8:	e58d0004 	str	r0, [sp, #4]
400170ec:	e58d0008 	str	r0, [sp, #8]
400170f0:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400170f4:	e58d000c 	str	r0, [sp, #12]
400170f8:	e1d401b2 	ldrh	r0, [r4, #18]
400170fc:	eb000d92 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40017100:	e3500000 	cmp	r0, #0
40017104:	0a000002 	beq	40017114 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
40017108:	e59d000c 	ldr	r0, [sp, #12]
4001710c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017110:	e58d000c 	str	r0, [sp, #12]
40017114:	e3e00000 	mvn	r0, #0
40017118:	e58d0010 	str	r0, [sp, #16]
4001711c:	e3a000c2 	mov	r0, #194	; 0xc2
40017120:	e58d0014 	str	r0, [sp, #20]
40017124:	e1d401b2 	ldrh	r0, [r4, #18]
40017128:	e1a0100d 	mov	r1, sp
4001712c:	ebfff70a 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40017130:	e3a00000 	mov	r0, #0
40017134:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017138:	e28dd018 	add	sp, sp, #24
4001713c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

40017140 <CyU3PDmaMultiChannelAcquireLock>:
40017140:	e92d4070 	push	{r4, r5, r6, lr}
40017144:	e1a04000 	mov	r4, r0
40017148:	e1a05001 	mov	r5, r1
4001714c:	e3540000 	cmp	r4, #0
40017150:	1a000001 	bne	4001715c <CyU3PDmaMultiChannelAcquireLock+0x1c>
40017154:	e3a00041 	mov	r0, #65	; 0x41
40017158:	e8bd8070 	pop	{r4, r5, r6, pc}
4001715c:	e5940000 	ldr	r0, [r4]
40017160:	e3500000 	cmp	r0, #0
40017164:	1a000001 	bne	40017170 <CyU3PDmaMultiChannelAcquireLock+0x30>
40017168:	e3a00044 	mov	r0, #68	; 0x44
4001716c:	eafffff9 	b	40017158 <CyU3PDmaMultiChannelAcquireLock+0x18>
40017170:	e1a01005 	mov	r1, r5
40017174:	e2840078 	add	r0, r4, #120	; 0x78
40017178:	ebffcb86 	bl	40009f98 <_txe_mutex_get>
4001717c:	e3500000 	cmp	r0, #0
40017180:	0a000001 	beq	4001718c <CyU3PDmaMultiChannelAcquireLock+0x4c>
40017184:	e3a0001d 	mov	r0, #29
40017188:	eafffff2 	b	40017158 <CyU3PDmaMultiChannelAcquireLock+0x18>
4001718c:	e3a00000 	mov	r0, #0
40017190:	eafffff0 	b	40017158 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

40017194 <CyU3PDmaMultiChannelCommitBuffer>:
40017194:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40017198:	e24dd03c 	sub	sp, sp, #60	; 0x3c
4001719c:	e1a04000 	mov	r4, r0
400171a0:	e1a05001 	mov	r5, r1
400171a4:	e1a06002 	mov	r6, r2
400171a8:	e3e01000 	mvn	r1, #0
400171ac:	e1a00004 	mov	r0, r4
400171b0:	ebffffe2 	bl	40017140 <CyU3PDmaMultiChannelAcquireLock>
400171b4:	e1a0b000 	mov	fp, r0
400171b8:	e35b0000 	cmp	fp, #0
400171bc:	0a000002 	beq	400171cc <CyU3PDmaMultiChannelCommitBuffer+0x38>
400171c0:	e1a0000b 	mov	r0, fp
400171c4:	e28dd03c 	add	sp, sp, #60	; 0x3c
400171c8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
400171cc:	e1d400b4 	ldrh	r0, [r4, #4]
400171d0:	e20070ff 	and	r7, r0, #255	; 0xff
400171d4:	e1d400b6 	ldrh	r0, [r4, #6]
400171d8:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400171dc:	e0400001 	sub	r0, r0, r1
400171e0:	e1500005 	cmp	r0, r5
400171e4:	aa000000 	bge	400171ec <CyU3PDmaMultiChannelCommitBuffer+0x58>
400171e8:	e3a0b040 	mov	fp, #64	; 0x40
400171ec:	e5940000 	ldr	r0, [r4]
400171f0:	e3500002 	cmp	r0, #2
400171f4:	0a000000 	beq	400171fc <CyU3PDmaMultiChannelCommitBuffer+0x68>
400171f8:	e3a0b042 	mov	fp, #66	; 0x42
400171fc:	e5940000 	ldr	r0, [r4]
40017200:	e3500005 	cmp	r0, #5
40017204:	1a000000 	bne	4001720c <CyU3PDmaMultiChannelCommitBuffer+0x78>
40017208:	e3a0b049 	mov	fp, #73	; 0x49
4001720c:	e5940000 	ldr	r0, [r4]
40017210:	e3500007 	cmp	r0, #7
40017214:	1a000000 	bne	4001721c <CyU3PDmaMultiChannelCommitBuffer+0x88>
40017218:	e3a0b048 	mov	fp, #72	; 0x48
4001721c:	e3570006 	cmp	r7, #6
40017220:	1a000000 	bne	40017228 <CyU3PDmaMultiChannelCommitBuffer+0x94>
40017224:	e3a0b046 	mov	fp, #70	; 0x46
40017228:	e3570005 	cmp	r7, #5
4001722c:	1a000034 	bne	40017304 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017230:	e35b0000 	cmp	fp, #0
40017234:	1a000032 	bne	40017304 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017238:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001723c:	e28d1024 	add	r1, sp, #36	; 0x24
40017240:	ebfff61b 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40017244:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40017248:	e3100702 	tst	r0, #524288	; 0x80000
4001724c:	0a000027 	beq	400172f0 <CyU3PDmaMultiChannelCommitBuffer+0x15c>
40017250:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40017254:	e1a09800 	lsl	r9, r0, #16
40017258:	e1a09829 	lsr	r9, r9, #16
4001725c:	e28d1004 	add	r1, sp, #4
40017260:	e1a00009 	mov	r0, r9
40017264:	eb002c6f 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017268:	e59d0010 	ldr	r0, [sp, #16]
4001726c:	e3100008 	tst	r0, #8
40017270:	0a00001c 	beq	400172e8 <CyU3PDmaMultiChannelCommitBuffer+0x154>
40017274:	e59d0010 	ldr	r0, [sp, #16]
40017278:	e1a00800 	lsl	r0, r0, #16
4001727c:	e1a00820 	lsr	r0, r0, #16
40017280:	e58d0010 	str	r0, [sp, #16]
40017284:	e59d0010 	ldr	r0, [sp, #16]
40017288:	e1800805 	orr	r0, r0, r5, lsl #16
4001728c:	e58d0010 	str	r0, [sp, #16]
40017290:	e3560000 	cmp	r6, #0
40017294:	0a000007 	beq	400172b8 <CyU3PDmaMultiChannelCommitBuffer+0x124>
40017298:	e59d0010 	ldr	r0, [sp, #16]
4001729c:	e3c0000f 	bic	r0, r0, #15
400172a0:	e58d0010 	str	r0, [sp, #16]
400172a4:	e206100e 	and	r1, r6, #14
400172a8:	e3811008 	orr	r1, r1, #8
400172ac:	e59d0010 	ldr	r0, [sp, #16]
400172b0:	e1800001 	orr	r0, r0, r1
400172b4:	e58d0010 	str	r0, [sp, #16]
400172b8:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400172bc:	e3500000 	cmp	r0, #0
400172c0:	0a000004 	beq	400172d8 <CyU3PDmaMultiChannelCommitBuffer+0x144>
400172c4:	e59d2010 	ldr	r2, [sp, #16]
400172c8:	e59f327c 	ldr	r3, [pc, #636]	; 4001754c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400172cc:	e0021003 	and	r1, r2, r3
400172d0:	e59d0004 	ldr	r0, [sp, #4]
400172d4:	ebffeb19 	bl	40011f40 <CyU3PSysCleanDRegion>
400172d8:	e28d1004 	add	r1, sp, #4
400172dc:	e1a00009 	mov	r0, r9
400172e0:	eb002c6b 	bl	40022494 <CyU3PDmaDscrSetConfig>
400172e4:	ea000002 	b	400172f4 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400172e8:	e3a0b047 	mov	fp, #71	; 0x47
400172ec:	ea000000 	b	400172f4 <CyU3PDmaMultiChannelCommitBuffer+0x160>
400172f0:	e3a0b047 	mov	fp, #71	; 0x47
400172f4:	e2840078 	add	r0, r4, #120	; 0x78
400172f8:	ebffcb5b 	bl	4000a06c <_txe_mutex_put>
400172fc:	e1a0000b 	mov	r0, fp
40017300:	eaffffaf 	b	400171c4 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017304:	e35b0000 	cmp	fp, #0
40017308:	1a00000d 	bne	40017344 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
4001730c:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017310:	e28d1014 	add	r1, sp, #20
40017314:	eb002c43 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017318:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
4001731c:	e28d1004 	add	r1, sp, #4
40017320:	eb002c40 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017324:	e59d0020 	ldr	r0, [sp, #32]
40017328:	e3100008 	tst	r0, #8
4001732c:	1a000000 	bne	40017334 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
40017330:	e3a0b047 	mov	fp, #71	; 0x47
40017334:	e59d0010 	ldr	r0, [sp, #16]
40017338:	e3100008 	tst	r0, #8
4001733c:	0a000000 	beq	40017344 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017340:	e3a0b047 	mov	fp, #71	; 0x47
40017344:	e35b0000 	cmp	fp, #0
40017348:	0a000003 	beq	4001735c <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
4001734c:	e2840078 	add	r0, r4, #120	; 0x78
40017350:	ebffcb45 	bl	4000a06c <_txe_mutex_put>
40017354:	e1a0000b 	mov	r0, fp
40017358:	eaffff99 	b	400171c4 <CyU3PDmaMultiChannelCommitBuffer+0x30>
4001735c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40017360:	e3500000 	cmp	r0, #0
40017364:	0a000004 	beq	4001737c <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
40017368:	e59d2010 	ldr	r2, [sp, #16]
4001736c:	e59f31d8 	ldr	r3, [pc, #472]	; 4001754c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017370:	e0021003 	and	r1, r2, r3
40017374:	e59d0004 	ldr	r0, [sp, #4]
40017378:	ebffeaf0 	bl	40011f40 <CyU3PSysCleanDRegion>
4001737c:	e3570009 	cmp	r7, #9
40017380:	1a00003a 	bne	40017470 <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
40017384:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
40017388:	e3a0a000 	mov	sl, #0
4001738c:	ea00002a 	b	4001743c <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
40017390:	e28d1004 	add	r1, sp, #4
40017394:	e1a00009 	mov	r0, r9
40017398:	eb002c22 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001739c:	e284000c 	add	r0, r4, #12
400173a0:	e080008a 	add	r0, r0, sl, lsl #1
400173a4:	e1d000b0 	ldrh	r0, [r0]
400173a8:	e3500000 	cmp	r0, #0
400173ac:	1a00001d 	bne	40017428 <CyU3PDmaMultiChannelCommitBuffer+0x294>
400173b0:	e59d0010 	ldr	r0, [sp, #16]
400173b4:	e59f1190 	ldr	r1, [pc, #400]	; 4001754c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400173b8:	e0000001 	and	r0, r0, r1
400173bc:	e58d0010 	str	r0, [sp, #16]
400173c0:	e59d0010 	ldr	r0, [sp, #16]
400173c4:	e1800805 	orr	r0, r0, r5, lsl #16
400173c8:	e58d0010 	str	r0, [sp, #16]
400173cc:	e3560000 	cmp	r6, #0
400173d0:	1a000005 	bne	400173ec <CyU3PDmaMultiChannelCommitBuffer+0x258>
400173d4:	e59d1020 	ldr	r1, [sp, #32]
400173d8:	e201100f 	and	r1, r1, #15
400173dc:	e59d0010 	ldr	r0, [sp, #16]
400173e0:	e1800001 	orr	r0, r0, r1
400173e4:	e58d0010 	str	r0, [sp, #16]
400173e8:	ea000004 	b	40017400 <CyU3PDmaMultiChannelCommitBuffer+0x26c>
400173ec:	e206100e 	and	r1, r6, #14
400173f0:	e3811008 	orr	r1, r1, #8
400173f4:	e59d0010 	ldr	r0, [sp, #16]
400173f8:	e1800001 	orr	r0, r0, r1
400173fc:	e58d0010 	str	r0, [sp, #16]
40017400:	e28d1004 	add	r1, sp, #4
40017404:	e1a00009 	mov	r0, r9
40017408:	eb002c21 	bl	40022494 <CyU3PDmaDscrSetConfig>
4001740c:	e59d0008 	ldr	r0, [sp, #8]
40017410:	e1a08900 	lsl	r8, r0, #18
40017414:	e1a08928 	lsr	r8, r8, #18
40017418:	e3a02001 	mov	r2, #1
4001741c:	e1a01009 	mov	r1, r9
40017420:	e1a00008 	mov	r0, r8
40017424:	ebfff63a 	bl	40014d14 <CyU3PDmaSocketSendEvent>
40017428:	e59d000c 	ldr	r0, [sp, #12]
4001742c:	e59f111c 	ldr	r1, [pc, #284]	; 40017550 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017430:	e0019820 	and	r9, r1, r0, lsr #16
40017434:	e28a0001 	add	r0, sl, #1
40017438:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
4001743c:	e1d400ba 	ldrh	r0, [r4, #10]
40017440:	e150000a 	cmp	r0, sl
40017444:	caffffd1 	bgt	40017390 <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
40017448:	e59d001c 	ldr	r0, [sp, #28]
4001744c:	e59f10fc 	ldr	r1, [pc, #252]	; 40017550 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017450:	e0010820 	and	r0, r1, r0, lsr #16
40017454:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017458:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
4001745c:	e28d1014 	add	r1, sp, #20
40017460:	eb002bf0 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017464:	e59d001c 	ldr	r0, [sp, #28]
40017468:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001746c:	ea000032 	b	4001753c <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017470:	e59d0010 	ldr	r0, [sp, #16]
40017474:	e59f10d0 	ldr	r1, [pc, #208]	; 4001754c <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017478:	e0000001 	and	r0, r0, r1
4001747c:	e58d0010 	str	r0, [sp, #16]
40017480:	e59d0010 	ldr	r0, [sp, #16]
40017484:	e1800805 	orr	r0, r0, r5, lsl #16
40017488:	e58d0010 	str	r0, [sp, #16]
4001748c:	e3560000 	cmp	r6, #0
40017490:	1a000005 	bne	400174ac <CyU3PDmaMultiChannelCommitBuffer+0x318>
40017494:	e59d1020 	ldr	r1, [sp, #32]
40017498:	e201100f 	and	r1, r1, #15
4001749c:	e59d0010 	ldr	r0, [sp, #16]
400174a0:	e1800001 	orr	r0, r0, r1
400174a4:	e58d0010 	str	r0, [sp, #16]
400174a8:	ea000004 	b	400174c0 <CyU3PDmaMultiChannelCommitBuffer+0x32c>
400174ac:	e206100e 	and	r1, r6, #14
400174b0:	e3811008 	orr	r1, r1, #8
400174b4:	e59d0010 	ldr	r0, [sp, #16]
400174b8:	e1800001 	orr	r0, r0, r1
400174bc:	e58d0010 	str	r0, [sp, #16]
400174c0:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400174c4:	e28d1004 	add	r1, sp, #4
400174c8:	eb002bf1 	bl	40022494 <CyU3PDmaDscrSetConfig>
400174cc:	e59d0008 	ldr	r0, [sp, #8]
400174d0:	e1a08900 	lsl	r8, r0, #18
400174d4:	e1a08928 	lsr	r8, r8, #18
400174d8:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
400174dc:	e3a02001 	mov	r2, #1
400174e0:	e1a00008 	mov	r0, r8
400174e4:	ebfff60a 	bl	40014d14 <CyU3PDmaSocketSendEvent>
400174e8:	e3570007 	cmp	r7, #7
400174ec:	1a000009 	bne	40017518 <CyU3PDmaMultiChannelCommitBuffer+0x384>
400174f0:	e59d000c 	ldr	r0, [sp, #12]
400174f4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400174f8:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400174fc:	e28d1004 	add	r1, sp, #4
40017500:	eb002bc8 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017504:	e59d000c 	ldr	r0, [sp, #12]
40017508:	e59f1040 	ldr	r1, [pc, #64]	; 40017550 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001750c:	e0010820 	and	r0, r1, r0, lsr #16
40017510:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017514:	ea000008 	b	4001753c <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017518:	e59d001c 	ldr	r0, [sp, #28]
4001751c:	e59f102c 	ldr	r1, [pc, #44]	; 40017550 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017520:	e0010820 	and	r0, r1, r0, lsr #16
40017524:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017528:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
4001752c:	e28d1014 	add	r1, sp, #20
40017530:	eb002bbc 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017534:	e59d001c 	ldr	r0, [sp, #28]
40017538:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001753c:	e2840078 	add	r0, r4, #120	; 0x78
40017540:	ebffcac9 	bl	4000a06c <_txe_mutex_put>
40017544:	e3a00000 	mov	r0, #0
40017548:	eaffff1d 	b	400171c4 <CyU3PDmaMultiChannelCommitBuffer+0x30>
4001754c:	0000fff0 	.word	0x0000fff0
40017550:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

40017554 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
40017554:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017558:	e24dd024 	sub	sp, sp, #36	; 0x24
4001755c:	e1a04000 	mov	r4, r0
40017560:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40017564:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017568:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
4001756c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017570:	e1d400b8 	ldrh	r0, [r4, #8]
40017574:	e1d430ba 	ldrh	r3, [r4, #10]
40017578:	e0000093 	mul	r0, r3, r0
4001757c:	e1a01800 	lsl	r1, r0, #16
40017580:	e1a01821 	lsr	r1, r1, #16
40017584:	e1d420b6 	ldrh	r2, [r4, #6]
40017588:	e1a03006 	mov	r3, r6
4001758c:	e284001c 	add	r0, r4, #28
40017590:	eb002ab5 	bl	4002206c <CyU3PDmaDscrChainCreate>
40017594:	e1a05000 	mov	r5, r0
40017598:	e3550000 	cmp	r5, #0
4001759c:	0a000002 	beq	400175ac <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
400175a0:	e1a00005 	mov	r0, r5
400175a4:	e28dd024 	add	sp, sp, #36	; 0x24
400175a8:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400175ac:	e1d400b4 	ldrh	r0, [r4, #4]
400175b0:	e3500005 	cmp	r0, #5
400175b4:	1a00003c 	bne	400176ac <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
400175b8:	e3a07000 	mov	r7, #0
400175bc:	e1d481bc 	ldrh	r8, [r4, #28]
400175c0:	ea000035 	b	4001769c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
400175c4:	e3a09000 	mov	r9, #0
400175c8:	ea00002e 	b	40017688 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
400175cc:	e28d1004 	add	r1, sp, #4
400175d0:	e1a00008 	mov	r0, r8
400175d4:	eb002b93 	bl	40022428 <CyU3PDmaDscrGetConfig>
400175d8:	e3570000 	cmp	r7, #0
400175dc:	1a000003 	bne	400175f0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
400175e0:	e2840014 	add	r0, r4, #20
400175e4:	e0800089 	add	r0, r0, r9, lsl #1
400175e8:	e1c080b0 	strh	r8, [r0]
400175ec:	ea000020 	b	40017674 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
400175f0:	e2841014 	add	r1, r4, #20
400175f4:	e0811089 	add	r1, r1, r9, lsl #1
400175f8:	e1d100b0 	ldrh	r0, [r1]
400175fc:	e28d1014 	add	r1, sp, #20
40017600:	eb002b88 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017604:	e59d0018 	ldr	r0, [sp, #24]
40017608:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
4001760c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40017610:	e58d0018 	str	r0, [sp, #24]
40017614:	e2841024 	add	r1, r4, #36	; 0x24
40017618:	e0811089 	add	r1, r1, r9, lsl #1
4001761c:	e59d0018 	ldr	r0, [sp, #24]
40017620:	e1d110b0 	ldrh	r1, [r1]
40017624:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017628:	e1821801 	orr	r1, r2, r1, lsl #16
4001762c:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40017630:	e1800001 	orr	r0, r0, r1
40017634:	e58d0018 	str	r0, [sp, #24]
40017638:	e59d001c 	ldr	r0, [sp, #28]
4001763c:	e1a00800 	lsl	r0, r0, #16
40017640:	e1a00820 	lsr	r0, r0, #16
40017644:	e58d001c 	str	r0, [sp, #28]
40017648:	e59d001c 	ldr	r0, [sp, #28]
4001764c:	e1800808 	orr	r0, r0, r8, lsl #16
40017650:	e58d001c 	str	r0, [sp, #28]
40017654:	e2841014 	add	r1, r4, #20
40017658:	e0811089 	add	r1, r1, r9, lsl #1
4001765c:	e1d100b0 	ldrh	r0, [r1]
40017660:	e28d1014 	add	r1, sp, #20
40017664:	eb002b8a 	bl	40022494 <CyU3PDmaDscrSetConfig>
40017668:	e2840014 	add	r0, r4, #20
4001766c:	e0800089 	add	r0, r0, r9, lsl #1
40017670:	e1c080b0 	strh	r8, [r0]
40017674:	e59d000c 	ldr	r0, [sp, #12]
40017678:	e1a08800 	lsl	r8, r0, #16
4001767c:	e1a08828 	lsr	r8, r8, #16
40017680:	e2890001 	add	r0, r9, #1
40017684:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017688:	e1d400ba 	ldrh	r0, [r4, #10]
4001768c:	e1500009 	cmp	r0, r9
40017690:	caffffcd 	bgt	400175cc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
40017694:	e2870001 	add	r0, r7, #1
40017698:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001769c:	e1d400b8 	ldrh	r0, [r4, #8]
400176a0:	e1500007 	cmp	r0, r7
400176a4:	aaffffc6 	bge	400175c4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
400176a8:	ea000056 	b	40017808 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
400176ac:	e3a07000 	mov	r7, #0
400176b0:	e1d481bc 	ldrh	r8, [r4, #28]
400176b4:	ea000050 	b	400177fc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
400176b8:	e3a09000 	mov	r9, #0
400176bc:	ea000049 	b	400177e8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
400176c0:	e3570000 	cmp	r7, #0
400176c4:	1a00000d 	bne	40017700 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
400176c8:	e3a06cff 	mov	r6, #65280	; 0xff00
400176cc:	e2840024 	add	r0, r4, #36	; 0x24
400176d0:	e0800089 	add	r0, r0, r9, lsl #1
400176d4:	e1d000b0 	ldrh	r0, [r0]
400176d8:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400176dc:	e1810800 	orr	r0, r1, r0, lsl #16
400176e0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400176e4:	e1866000 	orr	r6, r6, r0
400176e8:	e1d410b8 	ldrh	r1, [r4, #8]
400176ec:	e2842014 	add	r2, r4, #20
400176f0:	e0820089 	add	r0, r2, r9, lsl #1
400176f4:	e1a03006 	mov	r3, r6
400176f8:	e3a02000 	mov	r2, #0
400176fc:	eb002a5a 	bl	4002206c <CyU3PDmaDscrChainCreate>
40017700:	e2841014 	add	r1, r4, #20
40017704:	e0811089 	add	r1, r1, r9, lsl #1
40017708:	e1d100b0 	ldrh	r0, [r1]
4001770c:	e28d1014 	add	r1, sp, #20
40017710:	eb002b44 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017714:	e28d1004 	add	r1, sp, #4
40017718:	e1a00008 	mov	r0, r8
4001771c:	eb002b41 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017720:	e59d0004 	ldr	r0, [sp, #4]
40017724:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017728:	e0800001 	add	r0, r0, r1
4001772c:	e58d0014 	str	r0, [sp, #20]
40017730:	e59d0010 	ldr	r0, [sp, #16]
40017734:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017738:	e0400001 	sub	r0, r0, r1
4001773c:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017740:	e0400001 	sub	r0, r0, r1
40017744:	e58d0020 	str	r0, [sp, #32]
40017748:	e2841014 	add	r1, r4, #20
4001774c:	e0811089 	add	r1, r1, r9, lsl #1
40017750:	e1d100b0 	ldrh	r0, [r1]
40017754:	e28d1014 	add	r1, sp, #20
40017758:	eb002b4d 	bl	40022494 <CyU3PDmaDscrSetConfig>
4001775c:	e59d0004 	ldr	r0, [sp, #4]
40017760:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017764:	e0800001 	add	r0, r0, r1
40017768:	e58d0004 	str	r0, [sp, #4]
4001776c:	e1d400b6 	ldrh	r0, [r4, #6]
40017770:	e280000f 	add	r0, r0, #15
40017774:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017778:	e0400001 	sub	r0, r0, r1
4001777c:	e59f10b4 	ldr	r1, [pc, #180]	; 40017838 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
40017780:	e0000001 	and	r0, r0, r1
40017784:	e58d0010 	str	r0, [sp, #16]
40017788:	e59d000c 	ldr	r0, [sp, #12]
4001778c:	e1a00800 	lsl	r0, r0, #16
40017790:	e1a00820 	lsr	r0, r0, #16
40017794:	e58d000c 	str	r0, [sp, #12]
40017798:	e2841014 	add	r1, r4, #20
4001779c:	e0811089 	add	r1, r1, r9, lsl #1
400177a0:	e59d000c 	ldr	r0, [sp, #12]
400177a4:	e1d110b0 	ldrh	r1, [r1]
400177a8:	e1800801 	orr	r0, r0, r1, lsl #16
400177ac:	e58d000c 	str	r0, [sp, #12]
400177b0:	e28d1004 	add	r1, sp, #4
400177b4:	e1a00008 	mov	r0, r8
400177b8:	eb002b35 	bl	40022494 <CyU3PDmaDscrSetConfig>
400177bc:	e59d000c 	ldr	r0, [sp, #12]
400177c0:	e1a08800 	lsl	r8, r0, #16
400177c4:	e1a08828 	lsr	r8, r8, #16
400177c8:	e59d001c 	ldr	r0, [sp, #28]
400177cc:	e59f1068 	ldr	r1, [pc, #104]	; 4001783c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
400177d0:	e0010820 	and	r0, r1, r0, lsr #16
400177d4:	e2841014 	add	r1, r4, #20
400177d8:	e0811089 	add	r1, r1, r9, lsl #1
400177dc:	e1c100b0 	strh	r0, [r1]
400177e0:	e2890001 	add	r0, r9, #1
400177e4:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400177e8:	e1d400ba 	ldrh	r0, [r4, #10]
400177ec:	e1500009 	cmp	r0, r9
400177f0:	caffffb2 	bgt	400176c0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
400177f4:	e2870001 	add	r0, r7, #1
400177f8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400177fc:	e1d400b8 	ldrh	r0, [r4, #8]
40017800:	e1500007 	cmp	r0, r7
40017804:	caffffab 	bgt	400176b8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017808:	e1a00004 	mov	r0, r4
4001780c:	eb000509 	bl	40018c38 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017810:	e1d401b4 	ldrh	r0, [r4, #20]
40017814:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017818:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
4001781c:	e1d401bc 	ldrh	r0, [r4, #28]
40017820:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017824:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017828:	e2840034 	add	r0, r4, #52	; 0x34
4001782c:	eb002a85 	bl	40022248 <CyU3PDmaDscrGet>
40017830:	e3a00000 	mov	r0, #0
40017834:	eaffff5a 	b	400175a4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017838:	0000fff0 	.word	0x0000fff0
4001783c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

40017840 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
40017840:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017844:	e24dd024 	sub	sp, sp, #36	; 0x24
40017848:	e1a04000 	mov	r4, r0
4001784c:	e3a06cff 	mov	r6, #65280	; 0xff00
40017850:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017854:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017858:	e1810800 	orr	r0, r1, r0, lsl #16
4001785c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017860:	e1866000 	orr	r6, r6, r0
40017864:	e1d400b8 	ldrh	r0, [r4, #8]
40017868:	e1d430ba 	ldrh	r3, [r4, #10]
4001786c:	e0000093 	mul	r0, r3, r0
40017870:	e1a01800 	lsl	r1, r0, #16
40017874:	e1a01821 	lsr	r1, r1, #16
40017878:	e1d420b6 	ldrh	r2, [r4, #6]
4001787c:	e1a03006 	mov	r3, r6
40017880:	e2840014 	add	r0, r4, #20
40017884:	eb0029f8 	bl	4002206c <CyU3PDmaDscrChainCreate>
40017888:	e1a05000 	mov	r5, r0
4001788c:	e3550000 	cmp	r5, #0
40017890:	0a000002 	beq	400178a0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017894:	e1a00005 	mov	r0, r5
40017898:	e28dd024 	add	sp, sp, #36	; 0x24
4001789c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400178a0:	e1d400b4 	ldrh	r0, [r4, #4]
400178a4:	e3500006 	cmp	r0, #6
400178a8:	1a00003a 	bne	40017998 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
400178ac:	e3a07000 	mov	r7, #0
400178b0:	e1d481b4 	ldrh	r8, [r4, #20]
400178b4:	ea000033 	b	40017988 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
400178b8:	e3a09000 	mov	r9, #0
400178bc:	ea00002c 	b	40017974 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
400178c0:	e28d1014 	add	r1, sp, #20
400178c4:	e1a00008 	mov	r0, r8
400178c8:	eb002ad6 	bl	40022428 <CyU3PDmaDscrGetConfig>
400178cc:	e3570000 	cmp	r7, #0
400178d0:	1a000003 	bne	400178e4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
400178d4:	e284001c 	add	r0, r4, #28
400178d8:	e0800089 	add	r0, r0, r9, lsl #1
400178dc:	e1c080b0 	strh	r8, [r0]
400178e0:	ea00001e 	b	40017960 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
400178e4:	e284101c 	add	r1, r4, #28
400178e8:	e0811089 	add	r1, r1, r9, lsl #1
400178ec:	e1d100b0 	ldrh	r0, [r1]
400178f0:	e28d1004 	add	r1, sp, #4
400178f4:	eb002acb 	bl	40022428 <CyU3PDmaDscrGetConfig>
400178f8:	e59d0008 	ldr	r0, [sp, #8]
400178fc:	e1a00720 	lsr	r0, r0, #14
40017900:	e1a00700 	lsl	r0, r0, #14
40017904:	e58d0008 	str	r0, [sp, #8]
40017908:	e284102c 	add	r1, r4, #44	; 0x2c
4001790c:	e0811089 	add	r1, r1, r9, lsl #1
40017910:	e59d0008 	ldr	r0, [sp, #8]
40017914:	e1d110b0 	ldrh	r1, [r1]
40017918:	e3811903 	orr	r1, r1, #49152	; 0xc000
4001791c:	e1800001 	orr	r0, r0, r1
40017920:	e58d0008 	str	r0, [sp, #8]
40017924:	e59d000c 	ldr	r0, [sp, #12]
40017928:	e1a00820 	lsr	r0, r0, #16
4001792c:	e1a00800 	lsl	r0, r0, #16
40017930:	e58d000c 	str	r0, [sp, #12]
40017934:	e59d000c 	ldr	r0, [sp, #12]
40017938:	e1800008 	orr	r0, r0, r8
4001793c:	e58d000c 	str	r0, [sp, #12]
40017940:	e284101c 	add	r1, r4, #28
40017944:	e0811089 	add	r1, r1, r9, lsl #1
40017948:	e1d100b0 	ldrh	r0, [r1]
4001794c:	e28d1004 	add	r1, sp, #4
40017950:	eb002acf 	bl	40022494 <CyU3PDmaDscrSetConfig>
40017954:	e284001c 	add	r0, r4, #28
40017958:	e0800089 	add	r0, r0, r9, lsl #1
4001795c:	e1c080b0 	strh	r8, [r0]
40017960:	e59d001c 	ldr	r0, [sp, #28]
40017964:	e59f11c4 	ldr	r1, [pc, #452]	; 40017b30 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017968:	e0018820 	and	r8, r1, r0, lsr #16
4001796c:	e2890001 	add	r0, r9, #1
40017970:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017974:	e1d400ba 	ldrh	r0, [r4, #10]
40017978:	e1500009 	cmp	r0, r9
4001797c:	caffffcf 	bgt	400178c0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017980:	e2870001 	add	r0, r7, #1
40017984:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017988:	e1d400b8 	ldrh	r0, [r4, #8]
4001798c:	e1500007 	cmp	r0, r7
40017990:	aaffffc8 	bge	400178b8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017994:	ea000059 	b	40017b00 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017998:	e3a07000 	mov	r7, #0
4001799c:	e1d481b4 	ldrh	r8, [r4, #20]
400179a0:	ea000053 	b	40017af4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
400179a4:	e3a09000 	mov	r9, #0
400179a8:	ea00004c 	b	40017ae0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
400179ac:	e3570000 	cmp	r7, #0
400179b0:	1a00000b 	bne	400179e4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
400179b4:	e284002c 	add	r0, r4, #44	; 0x2c
400179b8:	e0800089 	add	r0, r0, r9, lsl #1
400179bc:	e1d000b0 	ldrh	r0, [r0]
400179c0:	e3806903 	orr	r6, r0, #49152	; 0xc000
400179c4:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400179c8:	e3866801 	orr	r6, r6, #65536	; 0x10000
400179cc:	e1d410b8 	ldrh	r1, [r4, #8]
400179d0:	e284201c 	add	r2, r4, #28
400179d4:	e0820089 	add	r0, r2, r9, lsl #1
400179d8:	e1a03006 	mov	r3, r6
400179dc:	e3a02000 	mov	r2, #0
400179e0:	eb0029a1 	bl	4002206c <CyU3PDmaDscrChainCreate>
400179e4:	e284101c 	add	r1, r4, #28
400179e8:	e0811089 	add	r1, r1, r9, lsl #1
400179ec:	e1d100b0 	ldrh	r0, [r1]
400179f0:	e28d1004 	add	r1, sp, #4
400179f4:	eb002a8b 	bl	40022428 <CyU3PDmaDscrGetConfig>
400179f8:	e28d1014 	add	r1, sp, #20
400179fc:	e1a00008 	mov	r0, r8
40017a00:	eb002a88 	bl	40022428 <CyU3PDmaDscrGetConfig>
40017a04:	e59d0014 	ldr	r0, [sp, #20]
40017a08:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a0c:	e0800001 	add	r0, r0, r1
40017a10:	e58d0004 	str	r0, [sp, #4]
40017a14:	e1d400b6 	ldrh	r0, [r4, #6]
40017a18:	e280000f 	add	r0, r0, #15
40017a1c:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a20:	e0400001 	sub	r0, r0, r1
40017a24:	e59f1108 	ldr	r1, [pc, #264]	; 40017b34 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017a28:	e0000001 	and	r0, r0, r1
40017a2c:	e58d0010 	str	r0, [sp, #16]
40017a30:	e59d000c 	ldr	r0, [sp, #12]
40017a34:	e1a00800 	lsl	r0, r0, #16
40017a38:	e1a00820 	lsr	r0, r0, #16
40017a3c:	e58d000c 	str	r0, [sp, #12]
40017a40:	e59d000c 	ldr	r0, [sp, #12]
40017a44:	e1800808 	orr	r0, r0, r8, lsl #16
40017a48:	e58d000c 	str	r0, [sp, #12]
40017a4c:	e284101c 	add	r1, r4, #28
40017a50:	e0811089 	add	r1, r1, r9, lsl #1
40017a54:	e1d100b0 	ldrh	r0, [r1]
40017a58:	e28d1004 	add	r1, sp, #4
40017a5c:	eb002a8c 	bl	40022494 <CyU3PDmaDscrSetConfig>
40017a60:	e59d0014 	ldr	r0, [sp, #20]
40017a64:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a68:	e0800001 	add	r0, r0, r1
40017a6c:	e58d0014 	str	r0, [sp, #20]
40017a70:	e1d400b6 	ldrh	r0, [r4, #6]
40017a74:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017a78:	e0400001 	sub	r0, r0, r1
40017a7c:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017a80:	e0400001 	sub	r0, r0, r1
40017a84:	e58d0020 	str	r0, [sp, #32]
40017a88:	e59d001c 	ldr	r0, [sp, #28]
40017a8c:	e1a00820 	lsr	r0, r0, #16
40017a90:	e1a00800 	lsl	r0, r0, #16
40017a94:	e58d001c 	str	r0, [sp, #28]
40017a98:	e284101c 	add	r1, r4, #28
40017a9c:	e0811089 	add	r1, r1, r9, lsl #1
40017aa0:	e59d001c 	ldr	r0, [sp, #28]
40017aa4:	e1d110b0 	ldrh	r1, [r1]
40017aa8:	e1800001 	orr	r0, r0, r1
40017aac:	e58d001c 	str	r0, [sp, #28]
40017ab0:	e28d1014 	add	r1, sp, #20
40017ab4:	e1a00008 	mov	r0, r8
40017ab8:	eb002a75 	bl	40022494 <CyU3PDmaDscrSetConfig>
40017abc:	e59d001c 	ldr	r0, [sp, #28]
40017ac0:	e59f1068 	ldr	r1, [pc, #104]	; 40017b30 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017ac4:	e0018820 	and	r8, r1, r0, lsr #16
40017ac8:	e284101c 	add	r1, r4, #28
40017acc:	e0811089 	add	r1, r1, r9, lsl #1
40017ad0:	e59d000c 	ldr	r0, [sp, #12]
40017ad4:	e1c100b0 	strh	r0, [r1]
40017ad8:	e2890001 	add	r0, r9, #1
40017adc:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017ae0:	e1d400ba 	ldrh	r0, [r4, #10]
40017ae4:	e1500009 	cmp	r0, r9
40017ae8:	caffffaf 	bgt	400179ac <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017aec:	e2870001 	add	r0, r7, #1
40017af0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017af4:	e1d400b8 	ldrh	r0, [r4, #8]
40017af8:	e1500007 	cmp	r0, r7
40017afc:	caffffa8 	bgt	400179a4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017b00:	e1d401b4 	ldrh	r0, [r4, #20]
40017b04:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017b08:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017b0c:	e1d401bc 	ldrh	r0, [r4, #28]
40017b10:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017b14:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017b18:	e2840034 	add	r0, r4, #52	; 0x34
40017b1c:	eb0029c9 	bl	40022248 <CyU3PDmaDscrGet>
40017b20:	e1a00004 	mov	r0, r4
40017b24:	eb0004a3 	bl	40018db8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017b28:	e3a00000 	mov	r0, #0
40017b2c:	eaffff59 	b	40017898 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017b30:	0000ffff 	.word	0x0000ffff
40017b34:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017b38 <CyU3PDmaMultiChannelCreate>:
40017b38:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017b3c:	e1a04000 	mov	r4, r0
40017b40:	e1a05001 	mov	r5, r1
40017b44:	e1a06002 	mov	r6, r2
40017b48:	e3560000 	cmp	r6, #0
40017b4c:	1a000001 	bne	40017b58 <CyU3PDmaMultiChannelCreate+0x20>
40017b50:	e3a00041 	mov	r0, #65	; 0x41
40017b54:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017b58:	e3540000 	cmp	r4, #0
40017b5c:	1a000001 	bne	40017b68 <CyU3PDmaMultiChannelCreate+0x30>
40017b60:	e3a00041 	mov	r0, #65	; 0x41
40017b64:	eafffffa 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017b68:	e1d600b2 	ldrh	r0, [r6, #2]
40017b6c:	e3500000 	cmp	r0, #0
40017b70:	1a000001 	bne	40017b7c <CyU3PDmaMultiChannelCreate+0x44>
40017b74:	e3a00040 	mov	r0, #64	; 0x40
40017b78:	eafffff5 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017b7c:	e1d600b4 	ldrh	r0, [r6, #4]
40017b80:	e3500002 	cmp	r0, #2
40017b84:	ba000002 	blt	40017b94 <CyU3PDmaMultiChannelCreate+0x5c>
40017b88:	e1d600b4 	ldrh	r0, [r6, #4]
40017b8c:	e3500004 	cmp	r0, #4
40017b90:	da000001 	ble	40017b9c <CyU3PDmaMultiChannelCreate+0x64>
40017b94:	e3a00040 	mov	r0, #64	; 0x40
40017b98:	eaffffed 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017b9c:	e3550006 	cmp	r5, #6
40017ba0:	0a000001 	beq	40017bac <CyU3PDmaMultiChannelCreate+0x74>
40017ba4:	e3550005 	cmp	r5, #5
40017ba8:	1a000007 	bne	40017bcc <CyU3PDmaMultiChannelCreate+0x94>
40017bac:	eb0029dd 	bl	40022328 <CyU3PDmaDscrGetFreeCount>
40017bb0:	e1d610b2 	ldrh	r1, [r6, #2]
40017bb4:	e1d620b4 	ldrh	r2, [r6, #4]
40017bb8:	e0010192 	mul	r1, r2, r1
40017bbc:	e1500001 	cmp	r0, r1
40017bc0:	ca000016 	bgt	40017c20 <CyU3PDmaMultiChannelCreate+0xe8>
40017bc4:	e3a00010 	mov	r0, #16
40017bc8:	eaffffe1 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017bcc:	e3550008 	cmp	r5, #8
40017bd0:	0a000001 	beq	40017bdc <CyU3PDmaMultiChannelCreate+0xa4>
40017bd4:	e3550007 	cmp	r5, #7
40017bd8:	1a000007 	bne	40017bfc <CyU3PDmaMultiChannelCreate+0xc4>
40017bdc:	eb0029d1 	bl	40022328 <CyU3PDmaDscrGetFreeCount>
40017be0:	e1d610b2 	ldrh	r1, [r6, #2]
40017be4:	e1d620b4 	ldrh	r2, [r6, #4]
40017be8:	e0010192 	mul	r1, r2, r1
40017bec:	e1500081 	cmp	r0, r1, lsl #1
40017bf0:	ca00000a 	bgt	40017c20 <CyU3PDmaMultiChannelCreate+0xe8>
40017bf4:	e3a00010 	mov	r0, #16
40017bf8:	eaffffd5 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017bfc:	eb0029c9 	bl	40022328 <CyU3PDmaDscrGetFreeCount>
40017c00:	e1d610b2 	ldrh	r1, [r6, #2]
40017c04:	e1d620b4 	ldrh	r2, [r6, #4]
40017c08:	e2822001 	add	r2, r2, #1
40017c0c:	e0010192 	mul	r1, r2, r1
40017c10:	e1500001 	cmp	r0, r1
40017c14:	ca000001 	bgt	40017c20 <CyU3PDmaMultiChannelCreate+0xe8>
40017c18:	e3a00010 	mov	r0, #16
40017c1c:	eaffffcc 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017c20:	e1d600b0 	ldrh	r0, [r6]
40017c24:	e3500000 	cmp	r0, #0
40017c28:	0a000003 	beq	40017c3c <CyU3PDmaMultiChannelCreate+0x104>
40017c2c:	e1d600b0 	ldrh	r0, [r6]
40017c30:	e59f1634 	ldr	r1, [pc, #1588]	; 4001826c <CyU3PDmaMultiChannelCreate+0x734>
40017c34:	e1500001 	cmp	r0, r1
40017c38:	da000001 	ble	40017c44 <CyU3PDmaMultiChannelCreate+0x10c>
40017c3c:	e3a00040 	mov	r0, #64	; 0x40
40017c40:	eaffffc3 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017c44:	e3550005 	cmp	r5, #5
40017c48:	0a000001 	beq	40017c54 <CyU3PDmaMultiChannelCreate+0x11c>
40017c4c:	e3550006 	cmp	r5, #6
40017c50:	1a000004 	bne	40017c68 <CyU3PDmaMultiChannelCreate+0x130>
40017c54:	e1d600b0 	ldrh	r0, [r6]
40017c58:	e310000f 	tst	r0, #15
40017c5c:	0a00000b 	beq	40017c90 <CyU3PDmaMultiChannelCreate+0x158>
40017c60:	e3a00040 	mov	r0, #64	; 0x40
40017c64:	eaffffba 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017c68:	e1d600b0 	ldrh	r0, [r6]
40017c6c:	e1d611b8 	ldrh	r1, [r6, #24]
40017c70:	e0400001 	sub	r0, r0, r1
40017c74:	e1d611ba 	ldrh	r1, [r6, #26]
40017c78:	e0400001 	sub	r0, r0, r1
40017c7c:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40017c80:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40017c84:	0a000001 	beq	40017c90 <CyU3PDmaMultiChannelCreate+0x158>
40017c88:	e3a00040 	mov	r0, #64	; 0x40
40017c8c:	eaffffb0 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017c90:	e5d6001e 	ldrb	r0, [r6, #30]
40017c94:	e3500002 	cmp	r0, #2
40017c98:	ba000001 	blt	40017ca4 <CyU3PDmaMultiChannelCreate+0x16c>
40017c9c:	e3a00040 	mov	r0, #64	; 0x40
40017ca0:	eaffffab 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017ca4:	e3550005 	cmp	r5, #5
40017ca8:	0a000001 	beq	40017cb4 <CyU3PDmaMultiChannelCreate+0x17c>
40017cac:	e3550007 	cmp	r5, #7
40017cb0:	1a000065 	bne	40017e4c <CyU3PDmaMultiChannelCreate+0x314>
40017cb4:	e1d601b6 	ldrh	r0, [r6, #22]
40017cb8:	e3500000 	cmp	r0, #0
40017cbc:	0a000008 	beq	40017ce4 <CyU3PDmaMultiChannelCreate+0x1ac>
40017cc0:	e1d601b6 	ldrh	r0, [r6, #22]
40017cc4:	e1d610b2 	ldrh	r1, [r6, #2]
40017cc8:	e1500001 	cmp	r0, r1
40017ccc:	aa000002 	bge	40017cdc <CyU3PDmaMultiChannelCreate+0x1a4>
40017cd0:	e1d600b2 	ldrh	r0, [r6, #2]
40017cd4:	e350001f 	cmp	r0, #31
40017cd8:	da000001 	ble	40017ce4 <CyU3PDmaMultiChannelCreate+0x1ac>
40017cdc:	e3a00040 	mov	r0, #64	; 0x40
40017ce0:	eaffff9b 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017ce4:	e3a09000 	mov	r9, #0
40017ce8:	ea00002b 	b	40017d9c <CyU3PDmaMultiChannelCreate+0x264>
40017cec:	e2860006 	add	r0, r6, #6
40017cf0:	e0800089 	add	r0, r0, r9, lsl #1
40017cf4:	e1d000b0 	ldrh	r0, [r0]
40017cf8:	e3a0103f 	mov	r1, #63	; 0x3f
40017cfc:	e0018440 	and	r8, r1, r0, asr #8
40017d00:	e2860006 	add	r0, r6, #6
40017d04:	e0800089 	add	r0, r0, r9, lsl #1
40017d08:	e1d000b0 	ldrh	r0, [r0]
40017d0c:	e20070ff 	and	r7, r0, #255	; 0xff
40017d10:	e2861006 	add	r1, r6, #6
40017d14:	e0811089 	add	r1, r1, r9, lsl #1
40017d18:	e1d100b0 	ldrh	r0, [r1]
40017d1c:	ebfff3c4 	bl	40014c34 <CyU3PDmaSocketIsValidProducer>
40017d20:	e3500000 	cmp	r0, #0
40017d24:	1a000001 	bne	40017d30 <CyU3PDmaMultiChannelCreate+0x1f8>
40017d28:	e3a00040 	mov	r0, #64	; 0x40
40017d2c:	eaffff88 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017d30:	e59f0538 	ldr	r0, [pc, #1336]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017d34:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017d38:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017d3c:	e3500000 	cmp	r0, #0
40017d40:	0a000001 	beq	40017d4c <CyU3PDmaMultiChannelCreate+0x214>
40017d44:	e3a00040 	mov	r0, #64	; 0x40
40017d48:	eaffff81 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017d4c:	e2890001 	add	r0, r9, #1
40017d50:	e200a0ff 	and	sl, r0, #255	; 0xff
40017d54:	ea00000b 	b	40017d88 <CyU3PDmaMultiChannelCreate+0x250>
40017d58:	e2860006 	add	r0, r6, #6
40017d5c:	e0800089 	add	r0, r0, r9, lsl #1
40017d60:	e1d000b0 	ldrh	r0, [r0]
40017d64:	e2861006 	add	r1, r6, #6
40017d68:	e081108a 	add	r1, r1, sl, lsl #1
40017d6c:	e1d110b0 	ldrh	r1, [r1]
40017d70:	e1500001 	cmp	r0, r1
40017d74:	1a000001 	bne	40017d80 <CyU3PDmaMultiChannelCreate+0x248>
40017d78:	e3a00040 	mov	r0, #64	; 0x40
40017d7c:	eaffff74 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017d80:	e28a0001 	add	r0, sl, #1
40017d84:	e200a0ff 	and	sl, r0, #255	; 0xff
40017d88:	e1d600b4 	ldrh	r0, [r6, #4]
40017d8c:	e150000a 	cmp	r0, sl
40017d90:	cafffff0 	bgt	40017d58 <CyU3PDmaMultiChannelCreate+0x220>
40017d94:	e2890001 	add	r0, r9, #1
40017d98:	e20090ff 	and	r9, r0, #255	; 0xff
40017d9c:	e1d600b4 	ldrh	r0, [r6, #4]
40017da0:	e1500009 	cmp	r0, r9
40017da4:	caffffd0 	bgt	40017cec <CyU3PDmaMultiChannelCreate+0x1b4>
40017da8:	e1d600be 	ldrh	r0, [r6, #14]
40017dac:	e3a0103f 	mov	r1, #63	; 0x3f
40017db0:	e0018440 	and	r8, r1, r0, asr #8
40017db4:	e1d600be 	ldrh	r0, [r6, #14]
40017db8:	e20070ff 	and	r7, r0, #255	; 0xff
40017dbc:	e1d600be 	ldrh	r0, [r6, #14]
40017dc0:	ebfff363 	bl	40014b54 <CyU3PDmaSocketIsValidConsumer>
40017dc4:	e3500000 	cmp	r0, #0
40017dc8:	1a000001 	bne	40017dd4 <CyU3PDmaMultiChannelCreate+0x29c>
40017dcc:	e3a00040 	mov	r0, #64	; 0x40
40017dd0:	eaffff5f 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017dd4:	e59f0494 	ldr	r0, [pc, #1172]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017dd8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017ddc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017de0:	e3500000 	cmp	r0, #0
40017de4:	0a000001 	beq	40017df0 <CyU3PDmaMultiChannelCreate+0x2b8>
40017de8:	e3a00040 	mov	r0, #64	; 0x40
40017dec:	eaffff58 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017df0:	e59f0478 	ldr	r0, [pc, #1144]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017df4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017df8:	e7804107 	str	r4, [r0, r7, lsl #2]
40017dfc:	e3a09000 	mov	r9, #0
40017e00:	ea00000d 	b	40017e3c <CyU3PDmaMultiChannelCreate+0x304>
40017e04:	e2860006 	add	r0, r6, #6
40017e08:	e0800089 	add	r0, r0, r9, lsl #1
40017e0c:	e1d000b0 	ldrh	r0, [r0]
40017e10:	e3a0103f 	mov	r1, #63	; 0x3f
40017e14:	e0018440 	and	r8, r1, r0, asr #8
40017e18:	e2860006 	add	r0, r6, #6
40017e1c:	e0800089 	add	r0, r0, r9, lsl #1
40017e20:	e1d000b0 	ldrh	r0, [r0]
40017e24:	e20070ff 	and	r7, r0, #255	; 0xff
40017e28:	e59f0440 	ldr	r0, [pc, #1088]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017e2c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e30:	e7804107 	str	r4, [r0, r7, lsl #2]
40017e34:	e2890001 	add	r0, r9, #1
40017e38:	e20090ff 	and	r9, r0, #255	; 0xff
40017e3c:	e1d600b4 	ldrh	r0, [r6, #4]
40017e40:	e1500009 	cmp	r0, r9
40017e44:	caffffee 	bgt	40017e04 <CyU3PDmaMultiChannelCreate+0x2cc>
40017e48:	ea00005d 	b	40017fc4 <CyU3PDmaMultiChannelCreate+0x48c>
40017e4c:	e1d601b6 	ldrh	r0, [r6, #22]
40017e50:	e3500000 	cmp	r0, #0
40017e54:	0a000001 	beq	40017e60 <CyU3PDmaMultiChannelCreate+0x328>
40017e58:	e3a00040 	mov	r0, #64	; 0x40
40017e5c:	eaffff3c 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017e60:	e3a09000 	mov	r9, #0
40017e64:	ea00002b 	b	40017f18 <CyU3PDmaMultiChannelCreate+0x3e0>
40017e68:	e286000e 	add	r0, r6, #14
40017e6c:	e0800089 	add	r0, r0, r9, lsl #1
40017e70:	e1d000b0 	ldrh	r0, [r0]
40017e74:	e3a0103f 	mov	r1, #63	; 0x3f
40017e78:	e0018440 	and	r8, r1, r0, asr #8
40017e7c:	e286000e 	add	r0, r6, #14
40017e80:	e0800089 	add	r0, r0, r9, lsl #1
40017e84:	e1d000b0 	ldrh	r0, [r0]
40017e88:	e20070ff 	and	r7, r0, #255	; 0xff
40017e8c:	e286100e 	add	r1, r6, #14
40017e90:	e0811089 	add	r1, r1, r9, lsl #1
40017e94:	e1d100b0 	ldrh	r0, [r1]
40017e98:	ebfff32d 	bl	40014b54 <CyU3PDmaSocketIsValidConsumer>
40017e9c:	e3500000 	cmp	r0, #0
40017ea0:	1a000001 	bne	40017eac <CyU3PDmaMultiChannelCreate+0x374>
40017ea4:	e3a00040 	mov	r0, #64	; 0x40
40017ea8:	eaffff29 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017eac:	e59f03bc 	ldr	r0, [pc, #956]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017eb0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017eb4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017eb8:	e3500000 	cmp	r0, #0
40017ebc:	0a000001 	beq	40017ec8 <CyU3PDmaMultiChannelCreate+0x390>
40017ec0:	e3a00040 	mov	r0, #64	; 0x40
40017ec4:	eaffff22 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017ec8:	e2890001 	add	r0, r9, #1
40017ecc:	e200a0ff 	and	sl, r0, #255	; 0xff
40017ed0:	ea00000b 	b	40017f04 <CyU3PDmaMultiChannelCreate+0x3cc>
40017ed4:	e286000e 	add	r0, r6, #14
40017ed8:	e0800089 	add	r0, r0, r9, lsl #1
40017edc:	e1d000b0 	ldrh	r0, [r0]
40017ee0:	e286100e 	add	r1, r6, #14
40017ee4:	e081108a 	add	r1, r1, sl, lsl #1
40017ee8:	e1d110b0 	ldrh	r1, [r1]
40017eec:	e1500001 	cmp	r0, r1
40017ef0:	1a000001 	bne	40017efc <CyU3PDmaMultiChannelCreate+0x3c4>
40017ef4:	e3a00040 	mov	r0, #64	; 0x40
40017ef8:	eaffff15 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017efc:	e28a0001 	add	r0, sl, #1
40017f00:	e200a0ff 	and	sl, r0, #255	; 0xff
40017f04:	e1d600b4 	ldrh	r0, [r6, #4]
40017f08:	e150000a 	cmp	r0, sl
40017f0c:	cafffff0 	bgt	40017ed4 <CyU3PDmaMultiChannelCreate+0x39c>
40017f10:	e2890001 	add	r0, r9, #1
40017f14:	e20090ff 	and	r9, r0, #255	; 0xff
40017f18:	e1d600b4 	ldrh	r0, [r6, #4]
40017f1c:	e1500009 	cmp	r0, r9
40017f20:	caffffd0 	bgt	40017e68 <CyU3PDmaMultiChannelCreate+0x330>
40017f24:	e1d600b6 	ldrh	r0, [r6, #6]
40017f28:	e3a0103f 	mov	r1, #63	; 0x3f
40017f2c:	e0018440 	and	r8, r1, r0, asr #8
40017f30:	e1d600b6 	ldrh	r0, [r6, #6]
40017f34:	e20070ff 	and	r7, r0, #255	; 0xff
40017f38:	e1d600b6 	ldrh	r0, [r6, #6]
40017f3c:	ebfff33c 	bl	40014c34 <CyU3PDmaSocketIsValidProducer>
40017f40:	e3500000 	cmp	r0, #0
40017f44:	1a000001 	bne	40017f50 <CyU3PDmaMultiChannelCreate+0x418>
40017f48:	e3a00040 	mov	r0, #64	; 0x40
40017f4c:	eaffff00 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017f50:	e59f0318 	ldr	r0, [pc, #792]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017f54:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f58:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017f5c:	e3500000 	cmp	r0, #0
40017f60:	0a000001 	beq	40017f6c <CyU3PDmaMultiChannelCreate+0x434>
40017f64:	e3a00040 	mov	r0, #64	; 0x40
40017f68:	eafffef9 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
40017f6c:	e59f02fc 	ldr	r0, [pc, #764]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017f70:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f74:	e7804107 	str	r4, [r0, r7, lsl #2]
40017f78:	e3a09000 	mov	r9, #0
40017f7c:	ea00000d 	b	40017fb8 <CyU3PDmaMultiChannelCreate+0x480>
40017f80:	e286000e 	add	r0, r6, #14
40017f84:	e0800089 	add	r0, r0, r9, lsl #1
40017f88:	e1d000b0 	ldrh	r0, [r0]
40017f8c:	e3a0103f 	mov	r1, #63	; 0x3f
40017f90:	e0018440 	and	r8, r1, r0, asr #8
40017f94:	e286000e 	add	r0, r6, #14
40017f98:	e0800089 	add	r0, r0, r9, lsl #1
40017f9c:	e1d000b0 	ldrh	r0, [r0]
40017fa0:	e20070ff 	and	r7, r0, #255	; 0xff
40017fa4:	e59f02c4 	ldr	r0, [pc, #708]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40017fa8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017fac:	e7804107 	str	r4, [r0, r7, lsl #2]
40017fb0:	e2890001 	add	r0, r9, #1
40017fb4:	e20090ff 	and	r9, r0, #255	; 0xff
40017fb8:	e1d600b4 	ldrh	r0, [r6, #4]
40017fbc:	e1500009 	cmp	r0, r9
40017fc0:	caffffee 	bgt	40017f80 <CyU3PDmaMultiChannelCreate+0x448>
40017fc4:	e1c450b4 	strh	r5, [r4, #4]
40017fc8:	e1d600b0 	ldrh	r0, [r6]
40017fcc:	e1c400b6 	strh	r0, [r4, #6]
40017fd0:	e1d600b2 	ldrh	r0, [r6, #2]
40017fd4:	e1c400b8 	strh	r0, [r4, #8]
40017fd8:	e1d601b6 	ldrh	r0, [r6, #22]
40017fdc:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
40017fe0:	e1d600b4 	ldrh	r0, [r6, #4]
40017fe4:	e1c400ba 	strh	r0, [r4, #10]
40017fe8:	e3a09000 	mov	r9, #0
40017fec:	ea000014 	b	40018044 <CyU3PDmaMultiChannelCreate+0x50c>
40017ff0:	e2860006 	add	r0, r6, #6
40017ff4:	e0800089 	add	r0, r0, r9, lsl #1
40017ff8:	e1d000b0 	ldrh	r0, [r0]
40017ffc:	e2841024 	add	r1, r4, #36	; 0x24
40018000:	e0811089 	add	r1, r1, r9, lsl #1
40018004:	e1c100b0 	strh	r0, [r1]
40018008:	e286000e 	add	r0, r6, #14
4001800c:	e0800089 	add	r0, r0, r9, lsl #1
40018010:	e1d000b0 	ldrh	r0, [r0]
40018014:	e284102c 	add	r1, r4, #44	; 0x2c
40018018:	e0811089 	add	r1, r1, r9, lsl #1
4001801c:	e1c100b0 	strh	r0, [r1]
40018020:	e3a00000 	mov	r0, #0
40018024:	e284105c 	add	r1, r4, #92	; 0x5c
40018028:	e0811089 	add	r1, r1, r9, lsl #1
4001802c:	e1c100b0 	strh	r0, [r1]
40018030:	e2841064 	add	r1, r4, #100	; 0x64
40018034:	e0811089 	add	r1, r1, r9, lsl #1
40018038:	e1c100b0 	strh	r0, [r1]
4001803c:	e2890001 	add	r0, r9, #1
40018040:	e20090ff 	and	r9, r0, #255	; 0xff
40018044:	e3590004 	cmp	r9, #4
40018048:	baffffe8 	blt	40017ff0 <CyU3PDmaMultiChannelCreate+0x4b8>
4001804c:	e1d601b8 	ldrh	r0, [r6, #24]
40018050:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
40018054:	e1d601ba 	ldrh	r0, [r6, #26]
40018058:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
4001805c:	e1d601bc 	ldrh	r0, [r6, #28]
40018060:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
40018064:	e5d6001e 	ldrb	r0, [r6, #30]
40018068:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
4001806c:	e5960020 	ldr	r0, [r6, #32]
40018070:	e584006c 	str	r0, [r4, #108]	; 0x6c
40018074:	e3a03038 	mov	r3, #56	; 0x38
40018078:	e3a02000 	mov	r2, #0
4001807c:	e1a01002 	mov	r1, r2
40018080:	e2840078 	add	r0, r4, #120	; 0x78
40018084:	ebffc745 	bl	40009da0 <_txe_mutex_create>
40018088:	e3a02028 	mov	r2, #40	; 0x28
4001808c:	e3a01000 	mov	r1, #0
40018090:	e28400b0 	add	r0, r4, #176	; 0xb0
40018094:	ebffc687 	bl	40009ab8 <_txe_event_flags_create>
40018098:	e5960024 	ldr	r0, [r6, #36]	; 0x24
4001809c:	e58400d8 	str	r0, [r4, #216]	; 0xd8
400180a0:	e59f01cc 	ldr	r0, [pc, #460]	; 40018274 <CyU3PDmaMultiChannelCreate+0x73c>
400180a4:	e5900000 	ldr	r0, [r0]
400180a8:	e5840074 	str	r0, [r4, #116]	; 0x74
400180ac:	e2450005 	sub	r0, r5, #5
400180b0:	e3500005 	cmp	r0, #5
400180b4:	308ff100 	addcc	pc, pc, r0, lsl #2
400180b8:	ea00001d 	b	40018134 <CyU3PDmaMultiChannelCreate+0x5fc>
400180bc:	ea000003 	b	400180d0 <CyU3PDmaMultiChannelCreate+0x598>
400180c0:	ea000008 	b	400180e8 <CyU3PDmaMultiChannelCreate+0x5b0>
400180c4:	ea000003 	b	400180d8 <CyU3PDmaMultiChannelCreate+0x5a0>
400180c8:	ea000008 	b	400180f0 <CyU3PDmaMultiChannelCreate+0x5b8>
400180cc:	ea00000b 	b	40018100 <CyU3PDmaMultiChannelCreate+0x5c8>
400180d0:	e1a00000 	nop			; (mov r0, r0)
400180d4:	e1a00000 	nop			; (mov r0, r0)
400180d8:	e1a00004 	mov	r0, r4
400180dc:	ebfffd1c 	bl	40017554 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
400180e0:	e1a0b000 	mov	fp, r0
400180e4:	ea000015 	b	40018140 <CyU3PDmaMultiChannelCreate+0x608>
400180e8:	e1a00000 	nop			; (mov r0, r0)
400180ec:	e1a00000 	nop			; (mov r0, r0)
400180f0:	e1a00004 	mov	r0, r4
400180f4:	ebfffdd1 	bl	40017840 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
400180f8:	e1a0b000 	mov	fp, r0
400180fc:	ea00000f 	b	40018140 <CyU3PDmaMultiChannelCreate+0x608>
40018100:	e1a00000 	nop			; (mov r0, r0)
40018104:	e59f016c 	ldr	r0, [pc, #364]	; 40018278 <CyU3PDmaMultiChannelCreate+0x740>
40018108:	e5900000 	ldr	r0, [r0]
4001810c:	e3500000 	cmp	r0, #0
40018110:	1a000001 	bne	4001811c <CyU3PDmaMultiChannelCreate+0x5e4>
40018114:	e3a0b047 	mov	fp, #71	; 0x47
40018118:	ea000004 	b	40018130 <CyU3PDmaMultiChannelCreate+0x5f8>
4001811c:	e1a00004 	mov	r0, r4
40018120:	e59f1150 	ldr	r1, [pc, #336]	; 40018278 <CyU3PDmaMultiChannelCreate+0x740>
40018124:	e5911000 	ldr	r1, [r1]
40018128:	e12fff31 	blx	r1
4001812c:	e1a0b000 	mov	fp, r0
40018130:	ea000002 	b	40018140 <CyU3PDmaMultiChannelCreate+0x608>
40018134:	e1a00000 	nop			; (mov r0, r0)
40018138:	e3a0b040 	mov	fp, #64	; 0x40
4001813c:	e1a00000 	nop			; (mov r0, r0)
40018140:	e1a00000 	nop			; (mov r0, r0)
40018144:	e35b0000 	cmp	fp, #0
40018148:	1a000002 	bne	40018158 <CyU3PDmaMultiChannelCreate+0x620>
4001814c:	e3a00001 	mov	r0, #1
40018150:	e5840000 	str	r0, [r4]
40018154:	ea000042 	b	40018264 <CyU3PDmaMultiChannelCreate+0x72c>
40018158:	e2840078 	add	r0, r4, #120	; 0x78
4001815c:	ebffc76d 	bl	40009f18 <_txe_mutex_delete>
40018160:	e28400b0 	add	r0, r4, #176	; 0xb0
40018164:	ebffc6a3 	bl	40009bf8 <_txe_event_flags_delete>
40018168:	e3550005 	cmp	r5, #5
4001816c:	0a000001 	beq	40018178 <CyU3PDmaMultiChannelCreate+0x640>
40018170:	e3550007 	cmp	r5, #7
40018174:	1a00001d 	bne	400181f0 <CyU3PDmaMultiChannelCreate+0x6b8>
40018178:	e1d600be 	ldrh	r0, [r6, #14]
4001817c:	e3a0103f 	mov	r1, #63	; 0x3f
40018180:	e0018440 	and	r8, r1, r0, asr #8
40018184:	e1d600be 	ldrh	r0, [r6, #14]
40018188:	e20070ff 	and	r7, r0, #255	; 0xff
4001818c:	e3a00000 	mov	r0, #0
40018190:	e59f10d8 	ldr	r1, [pc, #216]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40018194:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018198:	e7810107 	str	r0, [r1, r7, lsl #2]
4001819c:	e3a09000 	mov	r9, #0
400181a0:	ea00000e 	b	400181e0 <CyU3PDmaMultiChannelCreate+0x6a8>
400181a4:	e2860006 	add	r0, r6, #6
400181a8:	e0800089 	add	r0, r0, r9, lsl #1
400181ac:	e1d000b0 	ldrh	r0, [r0]
400181b0:	e3a0103f 	mov	r1, #63	; 0x3f
400181b4:	e0018440 	and	r8, r1, r0, asr #8
400181b8:	e2860006 	add	r0, r6, #6
400181bc:	e0800089 	add	r0, r0, r9, lsl #1
400181c0:	e1d000b0 	ldrh	r0, [r0]
400181c4:	e20070ff 	and	r7, r0, #255	; 0xff
400181c8:	e3a00000 	mov	r0, #0
400181cc:	e59f109c 	ldr	r1, [pc, #156]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
400181d0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400181d4:	e7810107 	str	r0, [r1, r7, lsl #2]
400181d8:	e2890001 	add	r0, r9, #1
400181dc:	e20090ff 	and	r9, r0, #255	; 0xff
400181e0:	e1d600b4 	ldrh	r0, [r6, #4]
400181e4:	e1500009 	cmp	r0, r9
400181e8:	caffffed 	bgt	400181a4 <CyU3PDmaMultiChannelCreate+0x66c>
400181ec:	ea00001c 	b	40018264 <CyU3PDmaMultiChannelCreate+0x72c>
400181f0:	e1d600b6 	ldrh	r0, [r6, #6]
400181f4:	e3a0103f 	mov	r1, #63	; 0x3f
400181f8:	e0018440 	and	r8, r1, r0, asr #8
400181fc:	e1d600b6 	ldrh	r0, [r6, #6]
40018200:	e20070ff 	and	r7, r0, #255	; 0xff
40018204:	e3a00000 	mov	r0, #0
40018208:	e59f1060 	ldr	r1, [pc, #96]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
4001820c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018210:	e7810107 	str	r0, [r1, r7, lsl #2]
40018214:	e3a09000 	mov	r9, #0
40018218:	ea00000e 	b	40018258 <CyU3PDmaMultiChannelCreate+0x720>
4001821c:	e286000e 	add	r0, r6, #14
40018220:	e0800089 	add	r0, r0, r9, lsl #1
40018224:	e1d000b0 	ldrh	r0, [r0]
40018228:	e3a0103f 	mov	r1, #63	; 0x3f
4001822c:	e0018440 	and	r8, r1, r0, asr #8
40018230:	e286000e 	add	r0, r6, #14
40018234:	e0800089 	add	r0, r0, r9, lsl #1
40018238:	e1d000b0 	ldrh	r0, [r0]
4001823c:	e20070ff 	and	r7, r0, #255	; 0xff
40018240:	e3a00000 	mov	r0, #0
40018244:	e59f1024 	ldr	r1, [pc, #36]	; 40018270 <CyU3PDmaMultiChannelCreate+0x738>
40018248:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001824c:	e7810107 	str	r0, [r1, r7, lsl #2]
40018250:	e2890001 	add	r0, r9, #1
40018254:	e20090ff 	and	r9, r0, #255	; 0xff
40018258:	e1d600b4 	ldrh	r0, [r6, #4]
4001825c:	e1500009 	cmp	r0, r9
40018260:	caffffed 	bgt	4001821c <CyU3PDmaMultiChannelCreate+0x6e4>
40018264:	e1a0000b 	mov	r0, fp
40018268:	eafffe39 	b	40017b54 <CyU3PDmaMultiChannelCreate+0x1c>
4001826c:	0000fff0 	.word	0x0000fff0
40018270:	40030d04 	.word	0x40030d04
40018274:	40030c68 	.word	0x40030c68
40018278:	40030cf0 	.word	0x40030cf0

Disassembly of section i.CyU3PDmaMultiChannelReset:

4001827c <CyU3PDmaMultiChannelReset>:
4001827c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40018280:	e1a04000 	mov	r4, r0
40018284:	e3e01000 	mvn	r1, #0
40018288:	e1a00004 	mov	r0, r4
4001828c:	ebfffbab 	bl	40017140 <CyU3PDmaMultiChannelAcquireLock>
40018290:	e1a06000 	mov	r6, r0
40018294:	e3560000 	cmp	r6, #0
40018298:	0a000001 	beq	400182a4 <CyU3PDmaMultiChannelReset+0x28>
4001829c:	e1a00006 	mov	r0, r6
400182a0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400182a4:	e1d400b4 	ldrh	r0, [r4, #4]
400182a8:	e2400005 	sub	r0, r0, #5
400182ac:	e3500005 	cmp	r0, #5
400182b0:	308ff100 	addcc	pc, pc, r0, lsl #2
400182b4:	ea00001a 	b	40018324 <CyU3PDmaMultiChannelReset+0xa8>
400182b8:	ea000003 	b	400182cc <CyU3PDmaMultiChannelReset+0x50>
400182bc:	ea000007 	b	400182e0 <CyU3PDmaMultiChannelReset+0x64>
400182c0:	ea000003 	b	400182d4 <CyU3PDmaMultiChannelReset+0x58>
400182c4:	ea000007 	b	400182e8 <CyU3PDmaMultiChannelReset+0x6c>
400182c8:	ea000009 	b	400182f4 <CyU3PDmaMultiChannelReset+0x78>
400182cc:	e1a00000 	nop			; (mov r0, r0)
400182d0:	e1a00000 	nop			; (mov r0, r0)
400182d4:	e1a00004 	mov	r0, r4
400182d8:	eb00003c 	bl	400183d0 <CyU3PDmaMultiChannelReset_TypeManyToOne>
400182dc:	ea000012 	b	4001832c <CyU3PDmaMultiChannelReset+0xb0>
400182e0:	e1a00000 	nop			; (mov r0, r0)
400182e4:	e1a00000 	nop			; (mov r0, r0)
400182e8:	e1a00004 	mov	r0, r4
400182ec:	eb000083 	bl	40018500 <CyU3PDmaMultiChannelReset_TypeOneToMany>
400182f0:	ea00000d 	b	4001832c <CyU3PDmaMultiChannelReset+0xb0>
400182f4:	e1a00000 	nop			; (mov r0, r0)
400182f8:	e59f00cc 	ldr	r0, [pc, #204]	; 400183cc <CyU3PDmaMultiChannelReset+0x150>
400182fc:	e5900000 	ldr	r0, [r0]
40018300:	e3500000 	cmp	r0, #0
40018304:	1a000001 	bne	40018310 <CyU3PDmaMultiChannelReset+0x94>
40018308:	e3a00047 	mov	r0, #71	; 0x47
4001830c:	eaffffe3 	b	400182a0 <CyU3PDmaMultiChannelReset+0x24>
40018310:	e1a00004 	mov	r0, r4
40018314:	e59f10b0 	ldr	r1, [pc, #176]	; 400183cc <CyU3PDmaMultiChannelReset+0x150>
40018318:	e5911000 	ldr	r1, [r1]
4001831c:	e12fff31 	blx	r1
40018320:	ea000001 	b	4001832c <CyU3PDmaMultiChannelReset+0xb0>
40018324:	e1a00000 	nop			; (mov r0, r0)
40018328:	e1a00000 	nop			; (mov r0, r0)
4001832c:	e1a00000 	nop			; (mov r0, r0)
40018330:	ebffc103 	bl	40008744 <_tx_thread_identify>
40018334:	e1a05000 	mov	r5, r0
40018338:	e3550000 	cmp	r5, #0
4001833c:	0a000003 	beq	40018350 <CyU3PDmaMultiChannelReset+0xd4>
40018340:	e1a0200d 	mov	r2, sp
40018344:	e3a01002 	mov	r1, #2
40018348:	e1a00005 	mov	r0, r5
4001834c:	ebffc90a 	bl	4000a77c <_txe_thread_priority_change>
40018350:	e3a02002 	mov	r2, #2
40018354:	e3e01047 	mvn	r1, #71	; 0x47
40018358:	e28400b0 	add	r0, r4, #176	; 0xb0
4001835c:	ebffc675 	bl	40009d38 <_txe_event_flags_set>
40018360:	e3a02000 	mov	r2, #0
40018364:	e3a01020 	mov	r1, #32
40018368:	e28400b0 	add	r0, r4, #176	; 0xb0
4001836c:	ebffc671 	bl	40009d38 <_txe_event_flags_set>
40018370:	e3a00001 	mov	r0, #1
40018374:	e5840000 	str	r0, [r4]
40018378:	e2840078 	add	r0, r4, #120	; 0x78
4001837c:	ebffc73a 	bl	4000a06c <_txe_mutex_put>
40018380:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40018384:	e3500000 	cmp	r0, #0
40018388:	0a000007 	beq	400183ac <CyU3PDmaMultiChannelReset+0x130>
4001838c:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
40018390:	e3100020 	tst	r0, #32
40018394:	0a000004 	beq	400183ac <CyU3PDmaMultiChannelReset+0x130>
40018398:	e3a02000 	mov	r2, #0
4001839c:	e3a01020 	mov	r1, #32
400183a0:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
400183a4:	e1a00004 	mov	r0, r4
400183a8:	e12fff33 	blx	r3
400183ac:	e3550000 	cmp	r5, #0
400183b0:	0a000003 	beq	400183c4 <CyU3PDmaMultiChannelReset+0x148>
400183b4:	e1a0200d 	mov	r2, sp
400183b8:	e1a00005 	mov	r0, r5
400183bc:	e59d1000 	ldr	r1, [sp]
400183c0:	ebffc8ed 	bl	4000a77c <_txe_thread_priority_change>
400183c4:	e3a00000 	mov	r0, #0
400183c8:	eaffffb4 	b	400182a0 <CyU3PDmaMultiChannelReset+0x24>
400183cc:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

400183d0 <CyU3PDmaMultiChannelReset_TypeManyToOne>:
400183d0:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400183d4:	e1a04000 	mov	r4, r0
400183d8:	e1a00004 	mov	r0, r4
400183dc:	eb000215 	bl	40018c38 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
400183e0:	e1d451bc 	ldrh	r5, [r4, #28]
400183e4:	e1d400b8 	ldrh	r0, [r4, #8]
400183e8:	e1d410ba 	ldrh	r1, [r4, #10]
400183ec:	e0000091 	mul	r0, r1, r0
400183f0:	e1a06800 	lsl	r6, r0, #16
400183f4:	e1a06826 	lsr	r6, r6, #16
400183f8:	ea00000c 	b	40018430 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
400183fc:	e1a0100d 	mov	r1, sp
40018400:	e1a00005 	mov	r0, r5
40018404:	eb002807 	bl	40022428 <CyU3PDmaDscrGetConfig>
40018408:	e59d000c 	ldr	r0, [sp, #12]
4001840c:	e59f10e4 	ldr	r1, [pc, #228]	; 400184f8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018410:	e0000001 	and	r0, r0, r1
40018414:	e58d000c 	str	r0, [sp, #12]
40018418:	e1a0100d 	mov	r1, sp
4001841c:	e1a00005 	mov	r0, r5
40018420:	eb00281b 	bl	40022494 <CyU3PDmaDscrSetConfig>
40018424:	e59d0008 	ldr	r0, [sp, #8]
40018428:	e1a05800 	lsl	r5, r0, #16
4001842c:	e1a05825 	lsr	r5, r5, #16
40018430:	e1b00006 	movs	r0, r6
40018434:	e2461001 	sub	r1, r6, #1
40018438:	e1a06801 	lsl	r6, r1, #16
4001843c:	e1a06826 	lsr	r6, r6, #16
40018440:	1affffed 	bne	400183fc <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
40018444:	e1d400b4 	ldrh	r0, [r4, #4]
40018448:	e3500007 	cmp	r0, #7
4001844c:	1a000021 	bne	400184d8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
40018450:	e3a07000 	mov	r7, #0
40018454:	ea00001c 	b	400184cc <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
40018458:	e2840014 	add	r0, r4, #20
4001845c:	e0800087 	add	r0, r0, r7, lsl #1
40018460:	e1d000b0 	ldrh	r0, [r0]
40018464:	e284103e 	add	r1, r4, #62	; 0x3e
40018468:	e0811087 	add	r1, r1, r7, lsl #1
4001846c:	e1c100b0 	strh	r0, [r1]
40018470:	e1a05000 	mov	r5, r0
40018474:	e3a06000 	mov	r6, #0
40018478:	ea00000e 	b	400184b8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
4001847c:	e1a0100d 	mov	r1, sp
40018480:	e1a00005 	mov	r0, r5
40018484:	eb0027e7 	bl	40022428 <CyU3PDmaDscrGetConfig>
40018488:	e59d000c 	ldr	r0, [sp, #12]
4001848c:	e59f1064 	ldr	r1, [pc, #100]	; 400184f8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018490:	e0000001 	and	r0, r0, r1
40018494:	e58d000c 	str	r0, [sp, #12]
40018498:	e1a0100d 	mov	r1, sp
4001849c:	e1a00005 	mov	r0, r5
400184a0:	eb0027fb 	bl	40022494 <CyU3PDmaDscrSetConfig>
400184a4:	e59d0008 	ldr	r0, [sp, #8]
400184a8:	e59f104c 	ldr	r1, [pc, #76]	; 400184fc <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
400184ac:	e0015820 	and	r5, r1, r0, lsr #16
400184b0:	e2860001 	add	r0, r6, #1
400184b4:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400184b8:	e1d400b8 	ldrh	r0, [r4, #8]
400184bc:	e1500006 	cmp	r0, r6
400184c0:	caffffed 	bgt	4001847c <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
400184c4:	e2870001 	add	r0, r7, #1
400184c8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400184cc:	e1d400ba 	ldrh	r0, [r4, #10]
400184d0:	e1500007 	cmp	r0, r7
400184d4:	caffffdf 	bgt	40018458 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
400184d8:	e1d401b4 	ldrh	r0, [r4, #20]
400184dc:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400184e0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400184e4:	e1d401bc 	ldrh	r0, [r4, #28]
400184e8:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
400184ec:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
400184f0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400184f4:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400184f8:	0000fff0 	.word	0x0000fff0
400184fc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

40018500 <CyU3PDmaMultiChannelReset_TypeOneToMany>:
40018500:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018504:	e1a04000 	mov	r4, r0
40018508:	e1a00004 	mov	r0, r4
4001850c:	eb000229 	bl	40018db8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40018510:	e1d451b4 	ldrh	r5, [r4, #20]
40018514:	e1d400b8 	ldrh	r0, [r4, #8]
40018518:	e1d410ba 	ldrh	r1, [r4, #10]
4001851c:	e0000091 	mul	r0, r1, r0
40018520:	e1a06800 	lsl	r6, r0, #16
40018524:	e1a06826 	lsr	r6, r6, #16
40018528:	ea00000c 	b	40018560 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
4001852c:	e1a0100d 	mov	r1, sp
40018530:	e1a00005 	mov	r0, r5
40018534:	eb0027bb 	bl	40022428 <CyU3PDmaDscrGetConfig>
40018538:	e59d000c 	ldr	r0, [sp, #12]
4001853c:	e59f10e4 	ldr	r1, [pc, #228]	; 40018628 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018540:	e0000001 	and	r0, r0, r1
40018544:	e58d000c 	str	r0, [sp, #12]
40018548:	e1a0100d 	mov	r1, sp
4001854c:	e1a00005 	mov	r0, r5
40018550:	eb0027cf 	bl	40022494 <CyU3PDmaDscrSetConfig>
40018554:	e59d0008 	ldr	r0, [sp, #8]
40018558:	e59f10cc 	ldr	r1, [pc, #204]	; 4001862c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
4001855c:	e0015820 	and	r5, r1, r0, lsr #16
40018560:	e1b00006 	movs	r0, r6
40018564:	e2461001 	sub	r1, r6, #1
40018568:	e1a06801 	lsl	r6, r1, #16
4001856c:	e1a06826 	lsr	r6, r6, #16
40018570:	1affffed 	bne	4001852c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018574:	e1d400b4 	ldrh	r0, [r4, #4]
40018578:	e3500008 	cmp	r0, #8
4001857c:	1a000021 	bne	40018608 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
40018580:	e3a07000 	mov	r7, #0
40018584:	ea00001c 	b	400185fc <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018588:	e284001c 	add	r0, r4, #28
4001858c:	e0800087 	add	r0, r0, r7, lsl #1
40018590:	e1d000b0 	ldrh	r0, [r0]
40018594:	e2841046 	add	r1, r4, #70	; 0x46
40018598:	e0811087 	add	r1, r1, r7, lsl #1
4001859c:	e1c100b0 	strh	r0, [r1]
400185a0:	e1a05000 	mov	r5, r0
400185a4:	e3a06000 	mov	r6, #0
400185a8:	ea00000e 	b	400185e8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
400185ac:	e1a0100d 	mov	r1, sp
400185b0:	e1a00005 	mov	r0, r5
400185b4:	eb00279b 	bl	40022428 <CyU3PDmaDscrGetConfig>
400185b8:	e59d000c 	ldr	r0, [sp, #12]
400185bc:	e59f1064 	ldr	r1, [pc, #100]	; 40018628 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400185c0:	e0000001 	and	r0, r0, r1
400185c4:	e58d000c 	str	r0, [sp, #12]
400185c8:	e1a0100d 	mov	r1, sp
400185cc:	e1a00005 	mov	r0, r5
400185d0:	eb0027af 	bl	40022494 <CyU3PDmaDscrSetConfig>
400185d4:	e59d0008 	ldr	r0, [sp, #8]
400185d8:	e1a05800 	lsl	r5, r0, #16
400185dc:	e1a05825 	lsr	r5, r5, #16
400185e0:	e2860001 	add	r0, r6, #1
400185e4:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400185e8:	e1d400b8 	ldrh	r0, [r4, #8]
400185ec:	e1500006 	cmp	r0, r6
400185f0:	caffffed 	bgt	400185ac <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
400185f4:	e2870001 	add	r0, r7, #1
400185f8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400185fc:	e1d400ba 	ldrh	r0, [r4, #10]
40018600:	e1500007 	cmp	r0, r7
40018604:	caffffdf 	bgt	40018588 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018608:	e1d401b4 	ldrh	r0, [r4, #20]
4001860c:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018610:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018614:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018618:	e1d401bc 	ldrh	r0, [r4, #28]
4001861c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018620:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018624:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018628:	0000fff0 	.word	0x0000fff0
4001862c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

40018630 <CyU3PDmaMultiChannelSetXfer>:
40018630:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018634:	e1a04000 	mov	r4, r0
40018638:	e1a05001 	mov	r5, r1
4001863c:	e1a06002 	mov	r6, r2
40018640:	e3e01000 	mvn	r1, #0
40018644:	e1a00004 	mov	r0, r4
40018648:	ebfffabc 	bl	40017140 <CyU3PDmaMultiChannelAcquireLock>
4001864c:	e1a07000 	mov	r7, r0
40018650:	e3570000 	cmp	r7, #0
40018654:	0a000001 	beq	40018660 <CyU3PDmaMultiChannelSetXfer+0x30>
40018658:	e1a00007 	mov	r0, r7
4001865c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018660:	e5940000 	ldr	r0, [r4]
40018664:	e3500001 	cmp	r0, #1
40018668:	0a000000 	beq	40018670 <CyU3PDmaMultiChannelSetXfer+0x40>
4001866c:	e3a07043 	mov	r7, #67	; 0x43
40018670:	e1d400ba 	ldrh	r0, [r4, #10]
40018674:	e1500006 	cmp	r0, r6
40018678:	ca000000 	bgt	40018680 <CyU3PDmaMultiChannelSetXfer+0x50>
4001867c:	e3a07040 	mov	r7, #64	; 0x40
40018680:	e1d400b4 	ldrh	r0, [r4, #4]
40018684:	e3500009 	cmp	r0, #9
40018688:	1a000002 	bne	40018698 <CyU3PDmaMultiChannelSetXfer+0x68>
4001868c:	e3560000 	cmp	r6, #0
40018690:	0a000000 	beq	40018698 <CyU3PDmaMultiChannelSetXfer+0x68>
40018694:	e3a07040 	mov	r7, #64	; 0x40
40018698:	e3570000 	cmp	r7, #0
4001869c:	1a00002d 	bne	40018758 <CyU3PDmaMultiChannelSetXfer+0x128>
400186a0:	e3a02002 	mov	r2, #2
400186a4:	e3e01027 	mvn	r1, #39	; 0x27
400186a8:	e28400b0 	add	r0, r4, #176	; 0xb0
400186ac:	ebffc5a1 	bl	40009d38 <_txe_event_flags_set>
400186b0:	e5845070 	str	r5, [r4, #112]	; 0x70
400186b4:	e1d400b4 	ldrh	r0, [r4, #4]
400186b8:	e2400005 	sub	r0, r0, #5
400186bc:	e3500005 	cmp	r0, #5
400186c0:	308ff100 	addcc	pc, pc, r0, lsl #2
400186c4:	ea000020 	b	4001874c <CyU3PDmaMultiChannelSetXfer+0x11c>
400186c8:	ea000003 	b	400186dc <CyU3PDmaMultiChannelSetXfer+0xac>
400186cc:	ea000009 	b	400186f8 <CyU3PDmaMultiChannelSetXfer+0xc8>
400186d0:	ea000003 	b	400186e4 <CyU3PDmaMultiChannelSetXfer+0xb4>
400186d4:	ea000009 	b	40018700 <CyU3PDmaMultiChannelSetXfer+0xd0>
400186d8:	ea00000d 	b	40018714 <CyU3PDmaMultiChannelSetXfer+0xe4>
400186dc:	e1a00000 	nop			; (mov r0, r0)
400186e0:	e1a00000 	nop			; (mov r0, r0)
400186e4:	e1a02006 	mov	r2, r6
400186e8:	e1a01005 	mov	r1, r5
400186ec:	e1a00004 	mov	r0, r4
400186f0:	eb00001d 	bl	4001876c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
400186f4:	ea000016 	b	40018754 <CyU3PDmaMultiChannelSetXfer+0x124>
400186f8:	e1a00000 	nop			; (mov r0, r0)
400186fc:	e1a00000 	nop			; (mov r0, r0)
40018700:	e1a02006 	mov	r2, r6
40018704:	e1a01005 	mov	r1, r5
40018708:	e1a00004 	mov	r0, r4
4001870c:	eb0000b2 	bl	400189dc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
40018710:	ea00000f 	b	40018754 <CyU3PDmaMultiChannelSetXfer+0x124>
40018714:	e1a00000 	nop			; (mov r0, r0)
40018718:	e59f0048 	ldr	r0, [pc, #72]	; 40018768 <CyU3PDmaMultiChannelSetXfer+0x138>
4001871c:	e5900000 	ldr	r0, [r0]
40018720:	e3500000 	cmp	r0, #0
40018724:	1a000001 	bne	40018730 <CyU3PDmaMultiChannelSetXfer+0x100>
40018728:	e3a00047 	mov	r0, #71	; 0x47
4001872c:	eaffffca 	b	4001865c <CyU3PDmaMultiChannelSetXfer+0x2c>
40018730:	e1a02006 	mov	r2, r6
40018734:	e1a01005 	mov	r1, r5
40018738:	e1a00004 	mov	r0, r4
4001873c:	e59f3024 	ldr	r3, [pc, #36]	; 40018768 <CyU3PDmaMultiChannelSetXfer+0x138>
40018740:	e5933000 	ldr	r3, [r3]
40018744:	e12fff33 	blx	r3
40018748:	ea000001 	b	40018754 <CyU3PDmaMultiChannelSetXfer+0x124>
4001874c:	e1a00000 	nop			; (mov r0, r0)
40018750:	e1a00000 	nop			; (mov r0, r0)
40018754:	e1a00000 	nop			; (mov r0, r0)
40018758:	e2840078 	add	r0, r4, #120	; 0x78
4001875c:	ebffc642 	bl	4000a06c <_txe_mutex_put>
40018760:	e1a00007 	mov	r0, r7
40018764:	eaffffbc 	b	4001865c <CyU3PDmaMultiChannelSetXfer+0x2c>
40018768:	40030cfc 	.word	0x40030cfc

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

4001876c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
4001876c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018770:	e24dd028 	sub	sp, sp, #40	; 0x28
40018774:	e1a04000 	mov	r4, r0
40018778:	e1a05001 	mov	r5, r1
4001877c:	e1a06002 	mov	r6, r2
40018780:	e3a00002 	mov	r0, #2
40018784:	e5840000 	str	r0, [r4]
40018788:	e3a07000 	mov	r7, #0
4001878c:	ea000005 	b	400187a8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
40018790:	e2841024 	add	r1, r4, #36	; 0x24
40018794:	e0811087 	add	r1, r1, r7, lsl #1
40018798:	e1d100b0 	ldrh	r0, [r1]
4001879c:	ebfff0ac 	bl	40014a54 <CyU3PDmaSocketDisable>
400187a0:	e2870001 	add	r0, r7, #1
400187a4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400187a8:	e1d400ba 	ldrh	r0, [r4, #10]
400187ac:	e1500007 	cmp	r0, r7
400187b0:	cafffff6 	bgt	40018790 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
400187b4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400187b8:	ebfff0a5 	bl	40014a54 <CyU3PDmaSocketDisable>
400187bc:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
400187c0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400187c4:	ebfff1bd 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
400187c8:	e2840014 	add	r0, r4, #20
400187cc:	e0800086 	add	r0, r0, r6, lsl #1
400187d0:	e1d000b0 	ldrh	r0, [r0]
400187d4:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
400187d8:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400187dc:	e3a07000 	mov	r7, #0
400187e0:	ea000040 	b	400188e8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
400187e4:	e2841024 	add	r1, r4, #36	; 0x24
400187e8:	e0811087 	add	r1, r1, r7, lsl #1
400187ec:	e1d100b0 	ldrh	r0, [r1]
400187f0:	e28d1010 	add	r1, sp, #16
400187f4:	ebfff0ae 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
400187f8:	e3a00000 	mov	r0, #0
400187fc:	e58d0014 	str	r0, [sp, #20]
40018800:	e58d0018 	str	r0, [sp, #24]
40018804:	e59d001c 	ldr	r0, [sp, #28]
40018808:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001880c:	e58d001c 	str	r0, [sp, #28]
40018810:	e59d001c 	ldr	r0, [sp, #28]
40018814:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018818:	e58d001c 	str	r0, [sp, #28]
4001881c:	e59d001c 	ldr	r0, [sp, #28]
40018820:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018824:	e58d001c 	str	r0, [sp, #28]
40018828:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
4001882c:	e3500001 	cmp	r0, #1
40018830:	1a000003 	bne	40018844 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018834:	e59d001c 	ldr	r0, [sp, #28]
40018838:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
4001883c:	e58d001c 	str	r0, [sp, #28]
40018840:	ea000002 	b	40018850 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018844:	e59d001c 	ldr	r0, [sp, #28]
40018848:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001884c:	e58d001c 	str	r0, [sp, #28]
40018850:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018854:	e3500000 	cmp	r0, #0
40018858:	0a000006 	beq	40018878 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
4001885c:	e1d400b8 	ldrh	r0, [r4, #8]
40018860:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018864:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018868:	e1800281 	orr	r0, r0, r1, lsl #5
4001886c:	e59d101c 	ldr	r1, [sp, #28]
40018870:	e1800001 	orr	r0, r0, r1
40018874:	e58d001c 	str	r0, [sp, #28]
40018878:	e3e00000 	mvn	r0, #0
4001887c:	e58d0020 	str	r0, [sp, #32]
40018880:	e1570006 	cmp	r7, r6
40018884:	ba000004 	blt	4001889c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018888:	e2840014 	add	r0, r4, #20
4001888c:	e0800087 	add	r0, r0, r7, lsl #1
40018890:	e1d000b0 	ldrh	r0, [r0]
40018894:	e58d0010 	str	r0, [sp, #16]
40018898:	ea000007 	b	400188bc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
4001889c:	e2841014 	add	r1, r4, #20
400188a0:	e0811087 	add	r1, r1, r7, lsl #1
400188a4:	e1d100b0 	ldrh	r0, [r1]
400188a8:	e1a0100d 	mov	r1, sp
400188ac:	eb0026dd 	bl	40022428 <CyU3PDmaDscrGetConfig>
400188b0:	e59d0008 	ldr	r0, [sp, #8]
400188b4:	e1a00820 	lsr	r0, r0, #16
400188b8:	e58d0010 	str	r0, [sp, #16]
400188bc:	e284103e 	add	r1, r4, #62	; 0x3e
400188c0:	e0811087 	add	r1, r1, r7, lsl #1
400188c4:	e59d0010 	ldr	r0, [sp, #16]
400188c8:	e1c100b0 	strh	r0, [r1]
400188cc:	e2841024 	add	r1, r4, #36	; 0x24
400188d0:	e0811087 	add	r1, r1, r7, lsl #1
400188d4:	e1d100b0 	ldrh	r0, [r1]
400188d8:	e28d1010 	add	r1, sp, #16
400188dc:	ebfff11e 	bl	40014d5c <CyU3PDmaSocketSetConfig>
400188e0:	e2870001 	add	r0, r7, #1
400188e4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400188e8:	e1d400ba 	ldrh	r0, [r4, #10]
400188ec:	e1500007 	cmp	r0, r7
400188f0:	caffffbb 	bgt	400187e4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
400188f4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400188f8:	e28d1010 	add	r1, sp, #16
400188fc:	ebfff06c 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40018900:	e58d5014 	str	r5, [sp, #20]
40018904:	e3a00000 	mov	r0, #0
40018908:	e58d0018 	str	r0, [sp, #24]
4001890c:	e3550000 	cmp	r5, #0
40018910:	1a000006 	bne	40018930 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018914:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018918:	e3c00080 	bic	r0, r0, #128	; 0x80
4001891c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018920:	e59d001c 	ldr	r0, [sp, #28]
40018924:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018928:	e58d001c 	str	r0, [sp, #28]
4001892c:	ea000005 	b	40018948 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018930:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018934:	e3800080 	orr	r0, r0, #128	; 0x80
40018938:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001893c:	e59d001c 	ldr	r0, [sp, #28]
40018940:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018944:	e58d001c 	str	r0, [sp, #28]
40018948:	e59d001c 	ldr	r0, [sp, #28]
4001894c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018950:	e58d001c 	str	r0, [sp, #28]
40018954:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018958:	e3500001 	cmp	r0, #1
4001895c:	1a000003 	bne	40018970 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018960:	e59d001c 	ldr	r0, [sp, #28]
40018964:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018968:	e58d001c 	str	r0, [sp, #28]
4001896c:	ea000002 	b	4001897c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018970:	e59d001c 	ldr	r0, [sp, #28]
40018974:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018978:	e58d001c 	str	r0, [sp, #28]
4001897c:	e3e00000 	mvn	r0, #0
40018980:	e58d0020 	str	r0, [sp, #32]
40018984:	e1d481bc 	ldrh	r8, [r4, #28]
40018988:	e3a07000 	mov	r7, #0
4001898c:	ea000007 	b	400189b0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018990:	e1a0100d 	mov	r1, sp
40018994:	e1a00008 	mov	r0, r8
40018998:	eb0026a2 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001899c:	e59d0008 	ldr	r0, [sp, #8]
400189a0:	e1a08800 	lsl	r8, r0, #16
400189a4:	e1a08828 	lsr	r8, r8, #16
400189a8:	e2870001 	add	r0, r7, #1
400189ac:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400189b0:	e1570006 	cmp	r7, r6
400189b4:	bafffff5 	blt	40018990 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
400189b8:	e58d8010 	str	r8, [sp, #16]
400189bc:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
400189c0:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
400189c4:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
400189c8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400189cc:	e28d1010 	add	r1, sp, #16
400189d0:	ebfff0e1 	bl	40014d5c <CyU3PDmaSocketSetConfig>
400189d4:	e28dd028 	add	sp, sp, #40	; 0x28
400189d8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

400189dc <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
400189dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400189e0:	e24dd028 	sub	sp, sp, #40	; 0x28
400189e4:	e1a04000 	mov	r4, r0
400189e8:	e1a05001 	mov	r5, r1
400189ec:	e1a06002 	mov	r6, r2
400189f0:	e3a00002 	mov	r0, #2
400189f4:	e5840000 	str	r0, [r4]
400189f8:	e3a07000 	mov	r7, #0
400189fc:	ea000005 	b	40018a18 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018a00:	e284102c 	add	r1, r4, #44	; 0x2c
40018a04:	e0811087 	add	r1, r1, r7, lsl #1
40018a08:	e1d100b0 	ldrh	r0, [r1]
40018a0c:	ebfff010 	bl	40014a54 <CyU3PDmaSocketDisable>
40018a10:	e2870001 	add	r0, r7, #1
40018a14:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a18:	e1d400ba 	ldrh	r0, [r4, #10]
40018a1c:	e1500007 	cmp	r0, r7
40018a20:	cafffff6 	bgt	40018a00 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018a24:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a28:	ebfff009 	bl	40014a54 <CyU3PDmaSocketDisable>
40018a2c:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018a30:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a34:	ebfff121 	bl	40014ec0 <CyU3PDmaUpdateSocketSuspendOption>
40018a38:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a3c:	e28d1010 	add	r1, sp, #16
40018a40:	ebfff01b 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40018a44:	e58d5014 	str	r5, [sp, #20]
40018a48:	e3a00000 	mov	r0, #0
40018a4c:	e58d0018 	str	r0, [sp, #24]
40018a50:	e3550000 	cmp	r5, #0
40018a54:	1a000006 	bne	40018a74 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018a58:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a5c:	e3c00080 	bic	r0, r0, #128	; 0x80
40018a60:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a64:	e59d001c 	ldr	r0, [sp, #28]
40018a68:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018a6c:	e58d001c 	str	r0, [sp, #28]
40018a70:	ea000005 	b	40018a8c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018a74:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018a78:	e3800080 	orr	r0, r0, #128	; 0x80
40018a7c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018a80:	e59d001c 	ldr	r0, [sp, #28]
40018a84:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018a88:	e58d001c 	str	r0, [sp, #28]
40018a8c:	e59d001c 	ldr	r0, [sp, #28]
40018a90:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018a94:	e58d001c 	str	r0, [sp, #28]
40018a98:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018a9c:	e3500001 	cmp	r0, #1
40018aa0:	1a000003 	bne	40018ab4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018aa4:	e59d001c 	ldr	r0, [sp, #28]
40018aa8:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018aac:	e58d001c 	str	r0, [sp, #28]
40018ab0:	ea000002 	b	40018ac0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018ab4:	e59d001c 	ldr	r0, [sp, #28]
40018ab8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018abc:	e58d001c 	str	r0, [sp, #28]
40018ac0:	e3e00000 	mvn	r0, #0
40018ac4:	e58d0020 	str	r0, [sp, #32]
40018ac8:	e1d481b4 	ldrh	r8, [r4, #20]
40018acc:	e3a07000 	mov	r7, #0
40018ad0:	ea000007 	b	40018af4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018ad4:	e1a0100d 	mov	r1, sp
40018ad8:	e1a00008 	mov	r0, r8
40018adc:	eb002651 	bl	40022428 <CyU3PDmaDscrGetConfig>
40018ae0:	e59d0008 	ldr	r0, [sp, #8]
40018ae4:	e59f1148 	ldr	r1, [pc, #328]	; 40018c34 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018ae8:	e0018820 	and	r8, r1, r0, lsr #16
40018aec:	e2870001 	add	r0, r7, #1
40018af0:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018af4:	e1570006 	cmp	r7, r6
40018af8:	bafffff5 	blt	40018ad4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018afc:	e58d8010 	str	r8, [sp, #16]
40018b00:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018b04:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018b08:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018b0c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018b10:	e28d1010 	add	r1, sp, #16
40018b14:	ebfff090 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40018b18:	e284001c 	add	r0, r4, #28
40018b1c:	e0800086 	add	r0, r0, r6, lsl #1
40018b20:	e1d000b0 	ldrh	r0, [r0]
40018b24:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018b28:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018b2c:	e3a07000 	mov	r7, #0
40018b30:	ea00003a 	b	40018c20 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018b34:	e284102c 	add	r1, r4, #44	; 0x2c
40018b38:	e0811087 	add	r1, r1, r7, lsl #1
40018b3c:	e1d100b0 	ldrh	r0, [r1]
40018b40:	e28d1010 	add	r1, sp, #16
40018b44:	ebffefda 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40018b48:	e3a00000 	mov	r0, #0
40018b4c:	e58d0014 	str	r0, [sp, #20]
40018b50:	e58d0018 	str	r0, [sp, #24]
40018b54:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018b58:	e3c00080 	bic	r0, r0, #128	; 0x80
40018b5c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018b60:	e59d001c 	ldr	r0, [sp, #28]
40018b64:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018b68:	e58d001c 	str	r0, [sp, #28]
40018b6c:	e59d001c 	ldr	r0, [sp, #28]
40018b70:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018b74:	e58d001c 	str	r0, [sp, #28]
40018b78:	e59d001c 	ldr	r0, [sp, #28]
40018b7c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018b80:	e58d001c 	str	r0, [sp, #28]
40018b84:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018b88:	e3500001 	cmp	r0, #1
40018b8c:	1a000003 	bne	40018ba0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018b90:	e59d001c 	ldr	r0, [sp, #28]
40018b94:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018b98:	e58d001c 	str	r0, [sp, #28]
40018b9c:	ea000002 	b	40018bac <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018ba0:	e59d001c 	ldr	r0, [sp, #28]
40018ba4:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018ba8:	e58d001c 	str	r0, [sp, #28]
40018bac:	e3e00000 	mvn	r0, #0
40018bb0:	e58d0020 	str	r0, [sp, #32]
40018bb4:	e1570006 	cmp	r7, r6
40018bb8:	ba000004 	blt	40018bd0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40018bbc:	e284001c 	add	r0, r4, #28
40018bc0:	e0800087 	add	r0, r0, r7, lsl #1
40018bc4:	e1d000b0 	ldrh	r0, [r0]
40018bc8:	e58d0010 	str	r0, [sp, #16]
40018bcc:	ea000008 	b	40018bf4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40018bd0:	e284101c 	add	r1, r4, #28
40018bd4:	e0811087 	add	r1, r1, r7, lsl #1
40018bd8:	e1d100b0 	ldrh	r0, [r1]
40018bdc:	e1a0100d 	mov	r1, sp
40018be0:	eb002610 	bl	40022428 <CyU3PDmaDscrGetConfig>
40018be4:	e59d0008 	ldr	r0, [sp, #8]
40018be8:	e1a00800 	lsl	r0, r0, #16
40018bec:	e1a00820 	lsr	r0, r0, #16
40018bf0:	e58d0010 	str	r0, [sp, #16]
40018bf4:	e2841046 	add	r1, r4, #70	; 0x46
40018bf8:	e0811087 	add	r1, r1, r7, lsl #1
40018bfc:	e59d0010 	ldr	r0, [sp, #16]
40018c00:	e1c100b0 	strh	r0, [r1]
40018c04:	e284102c 	add	r1, r4, #44	; 0x2c
40018c08:	e0811087 	add	r1, r1, r7, lsl #1
40018c0c:	e1d100b0 	ldrh	r0, [r1]
40018c10:	e28d1010 	add	r1, sp, #16
40018c14:	ebfff050 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40018c18:	e2870001 	add	r0, r7, #1
40018c1c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c20:	e1d400ba 	ldrh	r0, [r4, #10]
40018c24:	e1500007 	cmp	r0, r7
40018c28:	caffffc1 	bgt	40018b34 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40018c2c:	e28dd028 	add	sp, sp, #40	; 0x28
40018c30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018c34:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40018c38 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40018c38:	e92d4030 	push	{r4, r5, lr}
40018c3c:	e24dd01c 	sub	sp, sp, #28
40018c40:	e1a04000 	mov	r4, r0
40018c44:	e3a05000 	mov	r5, #0
40018c48:	ea000031 	b	40018d14 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40018c4c:	e2840014 	add	r0, r4, #20
40018c50:	e0800085 	add	r0, r0, r5, lsl #1
40018c54:	e1d000b0 	ldrh	r0, [r0]
40018c58:	e284103e 	add	r1, r4, #62	; 0x3e
40018c5c:	e0811085 	add	r1, r1, r5, lsl #1
40018c60:	e1c100b0 	strh	r0, [r1]
40018c64:	e2841024 	add	r1, r4, #36	; 0x24
40018c68:	e0811085 	add	r1, r1, r5, lsl #1
40018c6c:	e1d100b0 	ldrh	r0, [r1]
40018c70:	ebffef77 	bl	40014a54 <CyU3PDmaSocketDisable>
40018c74:	e2841024 	add	r1, r4, #36	; 0x24
40018c78:	e0811085 	add	r1, r1, r5, lsl #1
40018c7c:	e1d100b0 	ldrh	r0, [r1]
40018c80:	e28d1004 	add	r1, sp, #4
40018c84:	ebffef8a 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40018c88:	e2840014 	add	r0, r4, #20
40018c8c:	e0800085 	add	r0, r0, r5, lsl #1
40018c90:	e1d000b0 	ldrh	r0, [r0]
40018c94:	e58d0004 	str	r0, [sp, #4]
40018c98:	e3a00000 	mov	r0, #0
40018c9c:	e58d0008 	str	r0, [sp, #8]
40018ca0:	e58d000c 	str	r0, [sp, #12]
40018ca4:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018ca8:	e58d0010 	str	r0, [sp, #16]
40018cac:	e2841024 	add	r1, r4, #36	; 0x24
40018cb0:	e0811085 	add	r1, r1, r5, lsl #1
40018cb4:	e1d100b0 	ldrh	r0, [r1]
40018cb8:	eb0006a3 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40018cbc:	e3500000 	cmp	r0, #0
40018cc0:	0a000002 	beq	40018cd0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40018cc4:	e59d0010 	ldr	r0, [sp, #16]
40018cc8:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018ccc:	e58d0010 	str	r0, [sp, #16]
40018cd0:	e3e00000 	mvn	r0, #0
40018cd4:	e58d0014 	str	r0, [sp, #20]
40018cd8:	e1d400b4 	ldrh	r0, [r4, #4]
40018cdc:	e3500005 	cmp	r0, #5
40018ce0:	1a000002 	bne	40018cf0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40018ce4:	e3a00040 	mov	r0, #64	; 0x40
40018ce8:	e58d0018 	str	r0, [sp, #24]
40018cec:	ea000001 	b	40018cf8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40018cf0:	e3a00041 	mov	r0, #65	; 0x41
40018cf4:	e58d0018 	str	r0, [sp, #24]
40018cf8:	e2841024 	add	r1, r4, #36	; 0x24
40018cfc:	e0811085 	add	r1, r1, r5, lsl #1
40018d00:	e1d100b0 	ldrh	r0, [r1]
40018d04:	e28d1004 	add	r1, sp, #4
40018d08:	ebfff013 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40018d0c:	e2850001 	add	r0, r5, #1
40018d10:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018d14:	e1d400ba 	ldrh	r0, [r4, #10]
40018d18:	e1500005 	cmp	r0, r5
40018d1c:	caffffca 	bgt	40018c4c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40018d20:	e1d401bc 	ldrh	r0, [r4, #28]
40018d24:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018d28:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d2c:	ebffef48 	bl	40014a54 <CyU3PDmaSocketDisable>
40018d30:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d34:	e28d1004 	add	r1, sp, #4
40018d38:	ebffef5d 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40018d3c:	e1d401bc 	ldrh	r0, [r4, #28]
40018d40:	e58d0004 	str	r0, [sp, #4]
40018d44:	e3a00000 	mov	r0, #0
40018d48:	e58d0008 	str	r0, [sp, #8]
40018d4c:	e58d000c 	str	r0, [sp, #12]
40018d50:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018d54:	e58d0010 	str	r0, [sp, #16]
40018d58:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d5c:	eb00067a 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40018d60:	e3500000 	cmp	r0, #0
40018d64:	0a000002 	beq	40018d74 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40018d68:	e59d0010 	ldr	r0, [sp, #16]
40018d6c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018d70:	e58d0010 	str	r0, [sp, #16]
40018d74:	e3e00000 	mvn	r0, #0
40018d78:	e58d0014 	str	r0, [sp, #20]
40018d7c:	e1d400b4 	ldrh	r0, [r4, #4]
40018d80:	e3500005 	cmp	r0, #5
40018d84:	1a000002 	bne	40018d94 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40018d88:	e3a000c0 	mov	r0, #192	; 0xc0
40018d8c:	e58d0018 	str	r0, [sp, #24]
40018d90:	ea000001 	b	40018d9c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40018d94:	e3a000c2 	mov	r0, #194	; 0xc2
40018d98:	e58d0018 	str	r0, [sp, #24]
40018d9c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018da0:	e28d1004 	add	r1, sp, #4
40018da4:	ebffefec 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40018da8:	e3a00000 	mov	r0, #0
40018dac:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40018db0:	e28dd01c 	add	sp, sp, #28
40018db4:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40018db8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40018db8:	e92d4030 	push	{r4, r5, lr}
40018dbc:	e24dd01c 	sub	sp, sp, #28
40018dc0:	e1a04000 	mov	r4, r0
40018dc4:	e1d401b4 	ldrh	r0, [r4, #20]
40018dc8:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018dcc:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018dd0:	ebffef1f 	bl	40014a54 <CyU3PDmaSocketDisable>
40018dd4:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018dd8:	e28d1004 	add	r1, sp, #4
40018ddc:	ebffef34 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40018de0:	e1d401b4 	ldrh	r0, [r4, #20]
40018de4:	e58d0004 	str	r0, [sp, #4]
40018de8:	e3a00000 	mov	r0, #0
40018dec:	e58d0008 	str	r0, [sp, #8]
40018df0:	e58d000c 	str	r0, [sp, #12]
40018df4:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018df8:	e58d0010 	str	r0, [sp, #16]
40018dfc:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e00:	eb000651 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40018e04:	e3500000 	cmp	r0, #0
40018e08:	0a000002 	beq	40018e18 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40018e0c:	e59d0010 	ldr	r0, [sp, #16]
40018e10:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018e14:	e58d0010 	str	r0, [sp, #16]
40018e18:	e3e00000 	mvn	r0, #0
40018e1c:	e58d0014 	str	r0, [sp, #20]
40018e20:	e1d400b4 	ldrh	r0, [r4, #4]
40018e24:	e3500006 	cmp	r0, #6
40018e28:	1a000002 	bne	40018e38 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40018e2c:	e3a000c0 	mov	r0, #192	; 0xc0
40018e30:	e58d0018 	str	r0, [sp, #24]
40018e34:	ea000001 	b	40018e40 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40018e38:	e3a000c1 	mov	r0, #193	; 0xc1
40018e3c:	e58d0018 	str	r0, [sp, #24]
40018e40:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e44:	e28d1004 	add	r1, sp, #4
40018e48:	ebffefc3 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40018e4c:	e3a05000 	mov	r5, #0
40018e50:	ea000035 	b	40018f2c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
40018e54:	e284001c 	add	r0, r4, #28
40018e58:	e0800085 	add	r0, r0, r5, lsl #1
40018e5c:	e1d000b0 	ldrh	r0, [r0]
40018e60:	e2841046 	add	r1, r4, #70	; 0x46
40018e64:	e0811085 	add	r1, r1, r5, lsl #1
40018e68:	e1c100b0 	strh	r0, [r1]
40018e6c:	e284102c 	add	r1, r4, #44	; 0x2c
40018e70:	e0811085 	add	r1, r1, r5, lsl #1
40018e74:	e1d100b0 	ldrh	r0, [r1]
40018e78:	ebffeef5 	bl	40014a54 <CyU3PDmaSocketDisable>
40018e7c:	e284102c 	add	r1, r4, #44	; 0x2c
40018e80:	e0811085 	add	r1, r1, r5, lsl #1
40018e84:	e1d100b0 	ldrh	r0, [r1]
40018e88:	e28d1004 	add	r1, sp, #4
40018e8c:	ebffef08 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40018e90:	e284001c 	add	r0, r4, #28
40018e94:	e0800085 	add	r0, r0, r5, lsl #1
40018e98:	e1d000b0 	ldrh	r0, [r0]
40018e9c:	e58d0004 	str	r0, [sp, #4]
40018ea0:	e3a00000 	mov	r0, #0
40018ea4:	e58d0008 	str	r0, [sp, #8]
40018ea8:	e58d000c 	str	r0, [sp, #12]
40018eac:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018eb0:	e58d0010 	str	r0, [sp, #16]
40018eb4:	e284102c 	add	r1, r4, #44	; 0x2c
40018eb8:	e0811085 	add	r1, r1, r5, lsl #1
40018ebc:	e1d100b0 	ldrh	r0, [r1]
40018ec0:	eb000621 	bl	4001a74c <CyU3PDmaIsSockAvlEnReqd>
40018ec4:	e3500000 	cmp	r0, #0
40018ec8:	0a000002 	beq	40018ed8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40018ecc:	e59d0010 	ldr	r0, [sp, #16]
40018ed0:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018ed4:	e58d0010 	str	r0, [sp, #16]
40018ed8:	e3e00000 	mvn	r0, #0
40018edc:	e58d0014 	str	r0, [sp, #20]
40018ee0:	e1d400b4 	ldrh	r0, [r4, #4]
40018ee4:	e3500006 	cmp	r0, #6
40018ee8:	1a000002 	bne	40018ef8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40018eec:	e3a00040 	mov	r0, #64	; 0x40
40018ef0:	e58d0018 	str	r0, [sp, #24]
40018ef4:	ea000001 	b	40018f00 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40018ef8:	e3a00042 	mov	r0, #66	; 0x42
40018efc:	e58d0018 	str	r0, [sp, #24]
40018f00:	e284102c 	add	r1, r4, #44	; 0x2c
40018f04:	e0811085 	add	r1, r1, r5, lsl #1
40018f08:	e1d100b0 	ldrh	r0, [r1]
40018f0c:	e28d1004 	add	r1, sp, #4
40018f10:	ebffef91 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40018f14:	e3a00000 	mov	r0, #0
40018f18:	e2841064 	add	r1, r4, #100	; 0x64
40018f1c:	e0811085 	add	r1, r1, r5, lsl #1
40018f20:	e1c100b0 	strh	r0, [r1]
40018f24:	e2850001 	add	r0, r5, #1
40018f28:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018f2c:	e1d400ba 	ldrh	r0, [r4, #10]
40018f30:	e1500005 	cmp	r0, r5
40018f34:	caffffc6 	bgt	40018e54 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40018f38:	e28dd01c 	add	sp, sp, #28
40018f3c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

40018f40 <CyU3PDmaMultiChannelSetWrapUp>:
40018f40:	e92d4070 	push	{r4, r5, r6, lr}
40018f44:	e1a04000 	mov	r4, r0
40018f48:	e1a05001 	mov	r5, r1
40018f4c:	e3e01000 	mvn	r1, #0
40018f50:	e1a00004 	mov	r0, r4
40018f54:	ebfff879 	bl	40017140 <CyU3PDmaMultiChannelAcquireLock>
40018f58:	e1a06000 	mov	r6, r0
40018f5c:	e3560000 	cmp	r6, #0
40018f60:	0a000001 	beq	40018f6c <CyU3PDmaMultiChannelSetWrapUp+0x2c>
40018f64:	e1a00006 	mov	r0, r6
40018f68:	e8bd8070 	pop	{r4, r5, r6, pc}
40018f6c:	e5940000 	ldr	r0, [r4]
40018f70:	e3500004 	cmp	r0, #4
40018f74:	0a000003 	beq	40018f88 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018f78:	e5940000 	ldr	r0, [r4]
40018f7c:	e3500002 	cmp	r0, #2
40018f80:	0a000000 	beq	40018f88 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018f84:	e3a06047 	mov	r6, #71	; 0x47
40018f88:	e1d400b4 	ldrh	r0, [r4, #4]
40018f8c:	e3500006 	cmp	r0, #6
40018f90:	0a000005 	beq	40018fac <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40018f94:	e1d400b4 	ldrh	r0, [r4, #4]
40018f98:	e3500008 	cmp	r0, #8
40018f9c:	0a000002 	beq	40018fac <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40018fa0:	e1d400b4 	ldrh	r0, [r4, #4]
40018fa4:	e3500009 	cmp	r0, #9
40018fa8:	1a000003 	bne	40018fbc <CyU3PDmaMultiChannelSetWrapUp+0x7c>
40018fac:	e3550000 	cmp	r5, #0
40018fb0:	0a000005 	beq	40018fcc <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fb4:	e3a06040 	mov	r6, #64	; 0x40
40018fb8:	ea000003 	b	40018fcc <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fbc:	e1d400ba 	ldrh	r0, [r4, #10]
40018fc0:	e1500005 	cmp	r0, r5
40018fc4:	ca000000 	bgt	40018fcc <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40018fc8:	e3a06040 	mov	r6, #64	; 0x40
40018fcc:	e3560000 	cmp	r6, #0
40018fd0:	1a000003 	bne	40018fe4 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
40018fd4:	e2841024 	add	r1, r4, #36	; 0x24
40018fd8:	e0811085 	add	r1, r1, r5, lsl #1
40018fdc:	e1d100b0 	ldrh	r0, [r1]
40018fe0:	ebffef88 	bl	40014e08 <CyU3PDmaSocketSetWrapUp>
40018fe4:	e2840078 	add	r0, r4, #120	; 0x78
40018fe8:	ebffc41f 	bl	4000a06c <_txe_mutex_put>
40018fec:	e1a00006 	mov	r0, r6
40018ff0:	eaffffdc 	b	40018f68 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40018ff4 <CyU3PDmaApplicationDefine>:
40018ff4:	e92d4010 	push	{r4, lr}
40018ff8:	e24dd020 	sub	sp, sp, #32
40018ffc:	eb000051 	bl	40019148 <CyU3PDmaInit>
40019000:	e3a02028 	mov	r2, #40	; 0x28
40019004:	e3a01000 	mov	r1, #0
40019008:	e59f007c 	ldr	r0, [pc, #124]	; 4001908c <CyU3PDmaApplicationDefine+0x98>
4001900c:	ebffc2a9 	bl	40009ab8 <_txe_event_flags_create>
40019010:	e3a00c02 	mov	r0, #512	; 0x200
40019014:	ebffa996 	bl	40003674 <CyU3PMemAlloc>
40019018:	e1a04000 	mov	r4, r0
4001901c:	e3a0303c 	mov	r3, #60	; 0x3c
40019020:	e3a02c02 	mov	r2, #512	; 0x200
40019024:	e1cd20f0 	strd	r2, [sp]
40019028:	e1a03004 	mov	r3, r4
4001902c:	e3a02004 	mov	r2, #4
40019030:	e3a01000 	mov	r1, #0
40019034:	e59f0054 	ldr	r0, [pc, #84]	; 40019090 <CyU3PDmaApplicationDefine+0x9c>
40019038:	ebffc433 	bl	4000a10c <_txe_queue_create>
4001903c:	e3a00b01 	mov	r0, #1024	; 0x400
40019040:	ebffa98b 	bl	40003674 <CyU3PMemAlloc>
40019044:	e1a04000 	mov	r4, r0
40019048:	e3a030a8 	mov	r3, #168	; 0xa8
4001904c:	e3a02001 	mov	r2, #1
40019050:	e3a01000 	mov	r1, #0
40019054:	e3a00002 	mov	r0, #2
40019058:	e28dc00c 	add	ip, sp, #12
4001905c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40019060:	e3a02b01 	mov	r2, #1024	; 0x400
40019064:	e1a03001 	mov	r3, r1
40019068:	e58d2004 	str	r2, [sp, #4]
4001906c:	e59f2020 	ldr	r2, [pc, #32]	; 40019094 <CyU3PDmaApplicationDefine+0xa0>
40019070:	e28f1020 	add	r1, pc, #32
40019074:	e58d0008 	str	r0, [sp, #8]
40019078:	e59f0028 	ldr	r0, [pc, #40]	; 400190a8 <CyU3PDmaApplicationDefine+0xb4>
4001907c:	e58d4000 	str	r4, [sp]
40019080:	ebffc507 	bl	4000a4a4 <_txe_thread_create>
40019084:	e28dd020 	add	sp, sp, #32
40019088:	e8bd8010 	pop	{r4, pc}
4001908c:	40031904 	.word	0x40031904
40019090:	4003192c 	.word	0x4003192c
40019094:	4001a8f8 	.word	0x4001a8f8
40019098:	445f3130 	.word	0x445f3130
4001909c:	545f414d 	.word	0x545f414d
400190a0:	41455248 	.word	0x41455248
400190a4:	00000044 	.word	0x00000044
400190a8:	4003185c 	.word	0x4003185c

Disassembly of section i.CyU3PDmaChannelHandleError:

400190ac <CyU3PDmaChannelHandleError>:
400190ac:	e92d4010 	push	{r4, lr}
400190b0:	e1a04000 	mov	r4, r0
400190b4:	e3e01000 	mvn	r1, #0
400190b8:	e284003c 	add	r0, r4, #60	; 0x3c
400190bc:	ebffc3b5 	bl	40009f98 <_txe_mutex_get>
400190c0:	e1d400b4 	ldrh	r0, [r4, #4]
400190c4:	e3500004 	cmp	r0, #4
400190c8:	0a000001 	beq	400190d4 <CyU3PDmaChannelHandleError+0x28>
400190cc:	e1d401b0 	ldrh	r0, [r4, #16]
400190d0:	ebffee5f 	bl	40014a54 <CyU3PDmaSocketDisable>
400190d4:	e1d400b4 	ldrh	r0, [r4, #4]
400190d8:	e3500003 	cmp	r0, #3
400190dc:	0a000001 	beq	400190e8 <CyU3PDmaChannelHandleError+0x3c>
400190e0:	e1d401b2 	ldrh	r0, [r4, #18]
400190e4:	ebffee5a 	bl	40014a54 <CyU3PDmaSocketDisable>
400190e8:	e3a02002 	mov	r2, #2
400190ec:	e3e01007 	mvn	r1, #7
400190f0:	e2840074 	add	r0, r4, #116	; 0x74
400190f4:	ebffc30f 	bl	40009d38 <_txe_event_flags_set>
400190f8:	e3a02000 	mov	r2, #0
400190fc:	e3a01040 	mov	r1, #64	; 0x40
40019100:	e2840074 	add	r0, r4, #116	; 0x74
40019104:	ebffc30b 	bl	40009d38 <_txe_event_flags_set>
40019108:	e3a00005 	mov	r0, #5
4001910c:	e5840000 	str	r0, [r4]
40019110:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40019114:	e3500000 	cmp	r0, #0
40019118:	0a000007 	beq	4001913c <CyU3PDmaChannelHandleError+0x90>
4001911c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40019120:	e3100040 	tst	r0, #64	; 0x40
40019124:	0a000004 	beq	4001913c <CyU3PDmaChannelHandleError+0x90>
40019128:	e3a02000 	mov	r2, #0
4001912c:	e3a01040 	mov	r1, #64	; 0x40
40019130:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40019134:	e1a00004 	mov	r0, r4
40019138:	e12fff33 	blx	r3
4001913c:	e284003c 	add	r0, r4, #60	; 0x3c
40019140:	ebffc3c9 	bl	4000a06c <_txe_mutex_put>
40019144:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

40019148 <CyU3PDmaInit>:
40019148:	e92d4010 	push	{r4, lr}
4001914c:	e3a02020 	mov	r2, #32
40019150:	e3a01000 	mov	r1, #0
40019154:	e59f006c 	ldr	r0, [pc, #108]	; 400191c8 <CyU3PDmaInit+0x80>
40019158:	ebffa956 	bl	400036b8 <CyU3PMemSet>
4001915c:	e3a02080 	mov	r2, #128	; 0x80
40019160:	e3a01000 	mov	r1, #0
40019164:	e59f0060 	ldr	r0, [pc, #96]	; 400191cc <CyU3PDmaInit+0x84>
40019168:	ebffa952 	bl	400036b8 <CyU3PMemSet>
4001916c:	e3a02020 	mov	r2, #32
40019170:	e3a01000 	mov	r1, #0
40019174:	e59f0054 	ldr	r0, [pc, #84]	; 400191d0 <CyU3PDmaInit+0x88>
40019178:	ebffa94e 	bl	400036b8 <CyU3PMemSet>
4001917c:	e3a02040 	mov	r2, #64	; 0x40
40019180:	e3a01000 	mov	r1, #0
40019184:	e59f0048 	ldr	r0, [pc, #72]	; 400191d4 <CyU3PDmaInit+0x8c>
40019188:	ebffa94a 	bl	400036b8 <CyU3PMemSet>
4001918c:	e3a02040 	mov	r2, #64	; 0x40
40019190:	e3a01000 	mov	r1, #0
40019194:	e59f003c 	ldr	r0, [pc, #60]	; 400191d8 <CyU3PDmaInit+0x90>
40019198:	ebffa946 	bl	400036b8 <CyU3PMemSet>
4001919c:	e3a00000 	mov	r0, #0
400191a0:	e59f1034 	ldr	r1, [pc, #52]	; 400191dc <CyU3PDmaInit+0x94>
400191a4:	e5810000 	str	r0, [r1]
400191a8:	eb002462 	bl	40022338 <CyU3PDmaDscrListCreate>
400191ac:	ebffaa82 	bl	40003bbc <CyU3PDmaBufferInit>
400191b0:	e3a00000 	mov	r0, #0
400191b4:	e59f1024 	ldr	r1, [pc, #36]	; 400191e0 <CyU3PDmaInit+0x98>
400191b8:	e1c100b0 	strh	r0, [r1]
400191bc:	e59f1020 	ldr	r1, [pc, #32]	; 400191e4 <CyU3PDmaInit+0x9c>
400191c0:	e1c100b0 	strh	r0, [r1]
400191c4:	e8bd8010 	pop	{r4, pc}
400191c8:	4003171c 	.word	0x4003171c
400191cc:	4003173c 	.word	0x4003173c
400191d0:	400317bc 	.word	0x400317bc
400191d4:	400317dc 	.word	0x400317dc
400191d8:	4003181c 	.word	0x4003181c
400191dc:	40030cd8 	.word	0x40030cd8
400191e0:	40030d00 	.word	0x40030d00
400191e4:	40030d02 	.word	0x40030d02

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

400191e8 <CyU3PDmaIntHandler_TypeAuto>:
400191e8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400191ec:	e24dd01c 	sub	sp, sp, #28
400191f0:	e1a04000 	mov	r4, r0
400191f4:	e5949004 	ldr	r9, [r4, #4]
400191f8:	e5948008 	ldr	r8, [r4, #8]
400191fc:	e3180040 	tst	r8, #64	; 0x40
40019200:	0a000003 	beq	40019214 <CyU3PDmaIntHandler_TypeAuto+0x2c>
40019204:	e1a00009 	mov	r0, r9
40019208:	ebffffa7 	bl	400190ac <CyU3PDmaChannelHandleError>
4001920c:	e28dd01c 	add	sp, sp, #28
40019210:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019214:	e3e01000 	mvn	r1, #0
40019218:	e289003c 	add	r0, r9, #60	; 0x3c
4001921c:	ebffc35d 	bl	40009f98 <_txe_mutex_get>
40019220:	e1d901b2 	ldrh	r0, [r9, #18]
40019224:	e5941000 	ldr	r1, [r4]
40019228:	e1500821 	cmp	r0, r1, lsr #16
4001922c:	1a00004b 	bne	40019360 <CyU3PDmaIntHandler_TypeAuto+0x178>
40019230:	e1d901b2 	ldrh	r0, [r9, #18]
40019234:	e3a0103f 	mov	r1, #63	; 0x3f
40019238:	e0015440 	and	r5, r1, r0, asr #8
4001923c:	e1d901b2 	ldrh	r0, [r9, #18]
40019240:	e20060ff 	and	r6, r0, #255	; 0xff
40019244:	e594000c 	ldr	r0, [r4, #12]
40019248:	e1a07800 	lsl	r7, r0, #16
4001924c:	e1a07827 	lsr	r7, r7, #16
40019250:	e3180080 	tst	r8, #128	; 0x80
40019254:	0a000012 	beq	400192a4 <CyU3PDmaIntHandler_TypeAuto+0xbc>
40019258:	e3a00001 	mov	r0, #1
4001925c:	e5890000 	str	r0, [r9]
40019260:	e3a02000 	mov	r2, #0
40019264:	e3a01001 	mov	r1, #1
40019268:	e2890074 	add	r0, r9, #116	; 0x74
4001926c:	ebffc2b1 	bl	40009d38 <_txe_event_flags_set>
40019270:	ebffe599 	bl	400128dc <CyU3PSysBarrierSync>
40019274:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019278:	e3500000 	cmp	r0, #0
4001927c:	0a000028 	beq	40019324 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019280:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019284:	e3100001 	tst	r0, #1
40019288:	0a000025 	beq	40019324 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001928c:	e3a02000 	mov	r2, #0
40019290:	e3a01001 	mov	r1, #1
40019294:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019298:	e1a00009 	mov	r0, r9
4001929c:	e12fff33 	blx	r3
400192a0:	ea00001f 	b	40019324 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192a4:	e3180002 	tst	r8, #2
400192a8:	0a00001d 	beq	40019324 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192ac:	e5990000 	ldr	r0, [r9]
400192b0:	e3500003 	cmp	r0, #3
400192b4:	1a00001a 	bne	40019324 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192b8:	e3a00001 	mov	r0, #1
400192bc:	e5890000 	str	r0, [r9]
400192c0:	e59f0284 	ldr	r0, [pc, #644]	; 4001954c <CyU3PDmaIntHandler_TypeAuto+0x364>
400192c4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400192c8:	e0800386 	add	r0, r0, r6, lsl #7
400192cc:	e5900014 	ldr	r0, [r0, #20]
400192d0:	e3c00002 	bic	r0, r0, #2
400192d4:	e59f1270 	ldr	r1, [pc, #624]	; 4001954c <CyU3PDmaIntHandler_TypeAuto+0x364>
400192d8:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400192dc:	e0811386 	add	r1, r1, r6, lsl #7
400192e0:	e5810014 	str	r0, [r1, #20]
400192e4:	e3a02000 	mov	r2, #0
400192e8:	e3a01002 	mov	r1, #2
400192ec:	e2890074 	add	r0, r9, #116	; 0x74
400192f0:	ebffc290 	bl	40009d38 <_txe_event_flags_set>
400192f4:	ebffe578 	bl	400128dc <CyU3PSysBarrierSync>
400192f8:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400192fc:	e3500000 	cmp	r0, #0
40019300:	0a000007 	beq	40019324 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019304:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019308:	e3100002 	tst	r0, #2
4001930c:	0a000004 	beq	40019324 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019310:	e3a02000 	mov	r2, #0
40019314:	e3a01002 	mov	r1, #2
40019318:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001931c:	e1a00009 	mov	r0, r9
40019320:	e12fff33 	blx	r3
40019324:	e3180e12 	tst	r8, #288	; 0x120
40019328:	0a000084 	beq	40019540 <CyU3PDmaIntHandler_TypeAuto+0x358>
4001932c:	ebffe56a 	bl	400128dc <CyU3PSysBarrierSync>
40019330:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019334:	e3500000 	cmp	r0, #0
40019338:	0a000080 	beq	40019540 <CyU3PDmaIntHandler_TypeAuto+0x358>
4001933c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019340:	e3100c01 	tst	r0, #256	; 0x100
40019344:	0a00007d 	beq	40019540 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019348:	e3a02000 	mov	r2, #0
4001934c:	e3a01c01 	mov	r1, #256	; 0x100
40019350:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019354:	e1a00009 	mov	r0, r9
40019358:	e12fff33 	blx	r3
4001935c:	ea000077 	b	40019540 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019360:	e1d901b0 	ldrh	r0, [r9, #16]
40019364:	e3a0103f 	mov	r1, #63	; 0x3f
40019368:	e0015440 	and	r5, r1, r0, asr #8
4001936c:	e1d901b0 	ldrh	r0, [r9, #16]
40019370:	e20060ff 	and	r6, r0, #255	; 0xff
40019374:	e594000c 	ldr	r0, [r4, #12]
40019378:	e1a07800 	lsl	r7, r0, #16
4001937c:	e1a07827 	lsr	r7, r7, #16
40019380:	e3180001 	tst	r8, #1
40019384:	0a00005f 	beq	40019508 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019388:	e5990000 	ldr	r0, [r9]
4001938c:	e3500004 	cmp	r0, #4
40019390:	0a00002b 	beq	40019444 <CyU3PDmaIntHandler_TypeAuto+0x25c>
40019394:	e1a00000 	nop			; (mov r0, r0)
40019398:	e1d901b6 	ldrh	r0, [r9, #22]
4001939c:	e28d100c 	add	r1, sp, #12
400193a0:	eb002420 	bl	40022428 <CyU3PDmaDscrGetConfig>
400193a4:	e59d000c 	ldr	r0, [sp, #12]
400193a8:	e58d0000 	str	r0, [sp]
400193ac:	e59d0018 	ldr	r0, [sp, #24]
400193b0:	e59f1198 	ldr	r1, [pc, #408]	; 40019550 <CyU3PDmaIntHandler_TypeAuto+0x368>
400193b4:	e0010820 	and	r0, r1, r0, lsr #16
400193b8:	e1cd00b4 	strh	r0, [sp, #4]
400193bc:	e241100f 	sub	r1, r1, #15
400193c0:	e59d0018 	ldr	r0, [sp, #24]
400193c4:	e0000001 	and	r0, r0, r1
400193c8:	e1cd00b6 	strh	r0, [sp, #6]
400193cc:	e59d0018 	ldr	r0, [sp, #24]
400193d0:	e200000f 	and	r0, r0, #15
400193d4:	e1cd00b8 	strh	r0, [sp, #8]
400193d8:	e1811241 	orr	r1, r1, r1, asr #4
400193dc:	e59d0014 	ldr	r0, [sp, #20]
400193e0:	e0010820 	and	r0, r1, r0, lsr #16
400193e4:	e1c901b6 	strh	r0, [r9, #22]
400193e8:	ebffe53b 	bl	400128dc <CyU3PSysBarrierSync>
400193ec:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400193f0:	e3500000 	cmp	r0, #0
400193f4:	0a000002 	beq	40019404 <CyU3PDmaIntHandler_TypeAuto+0x21c>
400193f8:	e1dd10b6 	ldrh	r1, [sp, #6]
400193fc:	e59d0000 	ldr	r0, [sp]
40019400:	ebffe2dc 	bl	40011f78 <CyU3PSysFlushDRegion>
40019404:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019408:	e3500000 	cmp	r0, #0
4001940c:	0a000007 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x248>
40019410:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019414:	e3100008 	tst	r0, #8
40019418:	0a000004 	beq	40019430 <CyU3PDmaIntHandler_TypeAuto+0x248>
4001941c:	e1a0200d 	mov	r2, sp
40019420:	e3a01008 	mov	r1, #8
40019424:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019428:	e1a00009 	mov	r0, r9
4001942c:	e12fff33 	blx	r3
40019430:	e1d901b6 	ldrh	r0, [r9, #22]
40019434:	e1500007 	cmp	r0, r7
40019438:	1affffd6 	bne	40019398 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
4001943c:	e1c971be 	strh	r7, [r9, #30]
40019440:	ea000030 	b	40019508 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019444:	e1d901b4 	ldrh	r0, [r9, #20]
40019448:	e28d100c 	add	r1, sp, #12
4001944c:	eb0023f5 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019450:	e59d000c 	ldr	r0, [sp, #12]
40019454:	e58d0000 	str	r0, [sp]
40019458:	e59d0018 	ldr	r0, [sp, #24]
4001945c:	e59f10ec 	ldr	r1, [pc, #236]	; 40019550 <CyU3PDmaIntHandler_TypeAuto+0x368>
40019460:	e0010820 	and	r0, r1, r0, lsr #16
40019464:	e1cd00b4 	strh	r0, [sp, #4]
40019468:	e241100f 	sub	r1, r1, #15
4001946c:	e59d0018 	ldr	r0, [sp, #24]
40019470:	e0000001 	and	r0, r0, r1
40019474:	e1cd00b6 	strh	r0, [sp, #6]
40019478:	e59d0018 	ldr	r0, [sp, #24]
4001947c:	e200000f 	and	r0, r0, #15
40019480:	e1cd00b8 	strh	r0, [sp, #8]
40019484:	e3a00001 	mov	r0, #1
40019488:	e5890000 	str	r0, [r9]
4001948c:	e59f00b8 	ldr	r0, [pc, #184]	; 4001954c <CyU3PDmaIntHandler_TypeAuto+0x364>
40019490:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019494:	e0800386 	add	r0, r0, r6, lsl #7
40019498:	e5900014 	ldr	r0, [r0, #20]
4001949c:	e3c00001 	bic	r0, r0, #1
400194a0:	e59f10a4 	ldr	r1, [pc, #164]	; 4001954c <CyU3PDmaIntHandler_TypeAuto+0x364>
400194a4:	e7911105 	ldr	r1, [r1, r5, lsl #2]
400194a8:	e0811386 	add	r1, r1, r6, lsl #7
400194ac:	e5810014 	str	r0, [r1, #20]
400194b0:	e5990038 	ldr	r0, [r9, #56]	; 0x38
400194b4:	e3500000 	cmp	r0, #0
400194b8:	0a000002 	beq	400194c8 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
400194bc:	e1dd10b6 	ldrh	r1, [sp, #6]
400194c0:	e59d0000 	ldr	r0, [sp]
400194c4:	ebffe2ab 	bl	40011f78 <CyU3PSysFlushDRegion>
400194c8:	e3a02000 	mov	r2, #0
400194cc:	e3a01004 	mov	r1, #4
400194d0:	e2890074 	add	r0, r9, #116	; 0x74
400194d4:	ebffc217 	bl	40009d38 <_txe_event_flags_set>
400194d8:	ebffe4ff 	bl	400128dc <CyU3PSysBarrierSync>
400194dc:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400194e0:	e3500000 	cmp	r0, #0
400194e4:	0a000007 	beq	40019508 <CyU3PDmaIntHandler_TypeAuto+0x320>
400194e8:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400194ec:	e3100004 	tst	r0, #4
400194f0:	0a000004 	beq	40019508 <CyU3PDmaIntHandler_TypeAuto+0x320>
400194f4:	e1a0200d 	mov	r2, sp
400194f8:	e3a01004 	mov	r1, #4
400194fc:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019500:	e1a00009 	mov	r0, r9
40019504:	e12fff33 	blx	r3
40019508:	e3180020 	tst	r8, #32
4001950c:	0a00000b 	beq	40019540 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019510:	ebffe4f1 	bl	400128dc <CyU3PSysBarrierSync>
40019514:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019518:	e3500000 	cmp	r0, #0
4001951c:	0a000007 	beq	40019540 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019520:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019524:	e3100080 	tst	r0, #128	; 0x80
40019528:	0a000004 	beq	40019540 <CyU3PDmaIntHandler_TypeAuto+0x358>
4001952c:	e3a02000 	mov	r2, #0
40019530:	e3a01080 	mov	r1, #128	; 0x80
40019534:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019538:	e1a00009 	mov	r0, r9
4001953c:	e12fff33 	blx	r3
40019540:	e289003c 	add	r0, r9, #60	; 0x3c
40019544:	ebffc2c8 	bl	4000a06c <_txe_mutex_put>
40019548:	eaffff2f 	b	4001920c <CyU3PDmaIntHandler_TypeAuto+0x24>
4001954c:	40030cdc 	.word	0x40030cdc
40019550:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

40019554 <CyU3PDmaIntHandler_TypeManual>:
40019554:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40019558:	e24dd034 	sub	sp, sp, #52	; 0x34
4001955c:	e1a04000 	mov	r4, r0
40019560:	e5945004 	ldr	r5, [r4, #4]
40019564:	e5946008 	ldr	r6, [r4, #8]
40019568:	e3160040 	tst	r6, #64	; 0x40
4001956c:	0a000003 	beq	40019580 <CyU3PDmaIntHandler_TypeManual+0x2c>
40019570:	e1a00005 	mov	r0, r5
40019574:	ebfffecc 	bl	400190ac <CyU3PDmaChannelHandleError>
40019578:	e28dd034 	add	sp, sp, #52	; 0x34
4001957c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40019580:	e3e01000 	mvn	r1, #0
40019584:	e285003c 	add	r0, r5, #60	; 0x3c
40019588:	ebffc282 	bl	40009f98 <_txe_mutex_get>
4001958c:	e1d501b2 	ldrh	r0, [r5, #18]
40019590:	e5941000 	ldr	r1, [r4]
40019594:	e1500821 	cmp	r0, r1, lsr #16
40019598:	1a0000d6 	bne	400198f8 <CyU3PDmaIntHandler_TypeManual+0x3a4>
4001959c:	e594000c 	ldr	r0, [r4, #12]
400195a0:	e1a07800 	lsl	r7, r0, #16
400195a4:	e1a07827 	lsr	r7, r7, #16
400195a8:	e3160002 	tst	r6, #2
400195ac:	0a000060 	beq	40019734 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400195b0:	e5950000 	ldr	r0, [r5]
400195b4:	e3500003 	cmp	r0, #3
400195b8:	1a000013 	bne	4001960c <CyU3PDmaIntHandler_TypeManual+0xb8>
400195bc:	e3a00001 	mov	r0, #1
400195c0:	e5850000 	str	r0, [r5]
400195c4:	e3a02000 	mov	r2, #0
400195c8:	e3a01002 	mov	r1, #2
400195cc:	e2850074 	add	r0, r5, #116	; 0x74
400195d0:	ebffc1d8 	bl	40009d38 <_txe_event_flags_set>
400195d4:	e3c66080 	bic	r6, r6, #128	; 0x80
400195d8:	ebffe4bf 	bl	400128dc <CyU3PSysBarrierSync>
400195dc:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400195e0:	e3500000 	cmp	r0, #0
400195e4:	0a000052 	beq	40019734 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400195e8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400195ec:	e3100002 	tst	r0, #2
400195f0:	0a00004f 	beq	40019734 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400195f4:	e3a02000 	mov	r2, #0
400195f8:	e3a01002 	mov	r1, #2
400195fc:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019600:	e1a00005 	mov	r0, r5
40019604:	e12fff33 	blx	r3
40019608:	ea000049 	b	40019734 <CyU3PDmaIntHandler_TypeManual+0x1e0>
4001960c:	e1d500b4 	ldrh	r0, [r5, #4]
40019610:	e3500002 	cmp	r0, #2
40019614:	1a000027 	bne	400196b8 <CyU3PDmaIntHandler_TypeManual+0x164>
40019618:	e1a00000 	nop			; (mov r0, r0)
4001961c:	e1d501ba 	ldrh	r0, [r5, #26]
40019620:	e28d1024 	add	r1, sp, #36	; 0x24
40019624:	eb00237f 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019628:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001962c:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019adc <CyU3PDmaIntHandler_TypeManual+0x588>
40019630:	e0000001 	and	r0, r0, r1
40019634:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019638:	e1d501ba 	ldrh	r0, [r5, #26]
4001963c:	e28d1024 	add	r1, sp, #36	; 0x24
40019640:	eb002393 	bl	40022494 <CyU3PDmaDscrSetConfig>
40019644:	e1d511ba 	ldrh	r1, [r5, #26]
40019648:	e1d501b0 	ldrh	r0, [r5, #16]
4001964c:	e3a02000 	mov	r2, #0
40019650:	ebffedaf 	bl	40014d14 <CyU3PDmaSocketSendEvent>
40019654:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019658:	e59f1480 	ldr	r1, [pc, #1152]	; 40019ae0 <CyU3PDmaIntHandler_TypeManual+0x58c>
4001965c:	e0010820 	and	r0, r1, r0, lsr #16
40019660:	e1c501ba 	strh	r0, [r5, #26]
40019664:	e1d502b0 	ldrh	r0, [r5, #32]
40019668:	e28d1024 	add	r1, sp, #36	; 0x24
4001966c:	eb00236d 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019670:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019674:	e1c502b0 	strh	r0, [r5, #32]
40019678:	ebffe497 	bl	400128dc <CyU3PSysBarrierSync>
4001967c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019680:	e3500000 	cmp	r0, #0
40019684:	0a000007 	beq	400196a8 <CyU3PDmaIntHandler_TypeManual+0x154>
40019688:	e5950030 	ldr	r0, [r5, #48]	; 0x30
4001968c:	e3100010 	tst	r0, #16
40019690:	0a000004 	beq	400196a8 <CyU3PDmaIntHandler_TypeManual+0x154>
40019694:	e3a02000 	mov	r2, #0
40019698:	e3a01010 	mov	r1, #16
4001969c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400196a0:	e1a00005 	mov	r0, r5
400196a4:	e12fff33 	blx	r3
400196a8:	e1d502b0 	ldrh	r0, [r5, #32]
400196ac:	e1500007 	cmp	r0, r7
400196b0:	1affffd9 	bne	4001961c <CyU3PDmaIntHandler_TypeManual+0xc8>
400196b4:	ea00001e 	b	40019734 <CyU3PDmaIntHandler_TypeManual+0x1e0>
400196b8:	e1a00000 	nop			; (mov r0, r0)
400196bc:	e1d501b8 	ldrh	r0, [r5, #24]
400196c0:	e28d1024 	add	r1, sp, #36	; 0x24
400196c4:	eb002357 	bl	40022428 <CyU3PDmaDscrGetConfig>
400196c8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400196cc:	e3100008 	tst	r0, #8
400196d0:	1a000003 	bne	400196e4 <CyU3PDmaIntHandler_TypeManual+0x190>
400196d4:	e3a02000 	mov	r2, #0
400196d8:	e3a01010 	mov	r1, #16
400196dc:	e2850074 	add	r0, r5, #116	; 0x74
400196e0:	ebffc194 	bl	40009d38 <_txe_event_flags_set>
400196e4:	e1d502b0 	ldrh	r0, [r5, #32]
400196e8:	e28d1024 	add	r1, sp, #36	; 0x24
400196ec:	eb00234d 	bl	40022428 <CyU3PDmaDscrGetConfig>
400196f0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400196f4:	e1c502b0 	strh	r0, [r5, #32]
400196f8:	ebffe477 	bl	400128dc <CyU3PSysBarrierSync>
400196fc:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019700:	e3500000 	cmp	r0, #0
40019704:	0a000007 	beq	40019728 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019708:	e5950030 	ldr	r0, [r5, #48]	; 0x30
4001970c:	e3100010 	tst	r0, #16
40019710:	0a000004 	beq	40019728 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019714:	e3a02000 	mov	r2, #0
40019718:	e3a01010 	mov	r1, #16
4001971c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019720:	e1a00005 	mov	r0, r5
40019724:	e12fff33 	blx	r3
40019728:	e1d502b0 	ldrh	r0, [r5, #32]
4001972c:	e1500007 	cmp	r0, r7
40019730:	1affffe1 	bne	400196bc <CyU3PDmaIntHandler_TypeManual+0x168>
40019734:	e3160010 	tst	r6, #16
40019738:	0a000046 	beq	40019858 <CyU3PDmaIntHandler_TypeManual+0x304>
4001973c:	e1d502b0 	ldrh	r0, [r5, #32]
40019740:	e28d1024 	add	r1, sp, #36	; 0x24
40019744:	eb002337 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019748:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001974c:	e3100001 	tst	r0, #1
40019750:	0a000040 	beq	40019858 <CyU3PDmaIntHandler_TypeManual+0x304>
40019754:	e1d501b2 	ldrh	r0, [r5, #18]
40019758:	ebffecbd 	bl	40014a54 <CyU3PDmaSocketDisable>
4001975c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019760:	e59f1374 	ldr	r1, [pc, #884]	; 40019adc <CyU3PDmaIntHandler_TypeManual+0x588>
40019764:	e0000001 	and	r0, r0, r1
40019768:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001976c:	e1d502b0 	ldrh	r0, [r5, #32]
40019770:	e28d1024 	add	r1, sp, #36	; 0x24
40019774:	eb002346 	bl	40022494 <CyU3PDmaDscrSetConfig>
40019778:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001977c:	e1c502b0 	strh	r0, [r5, #32]
40019780:	e1d501b2 	ldrh	r0, [r5, #18]
40019784:	e28d100c 	add	r1, sp, #12
40019788:	ebffecc9 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
4001978c:	e59d0018 	ldr	r0, [sp, #24]
40019790:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019794:	e58d0018 	str	r0, [sp, #24]
40019798:	e59d0018 	ldr	r0, [sp, #24]
4001979c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400197a0:	e58d0018 	str	r0, [sp, #24]
400197a4:	e3a00000 	mov	r0, #0
400197a8:	e58d001c 	str	r0, [sp, #28]
400197ac:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
400197b0:	e2400001 	sub	r0, r0, #1
400197b4:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
400197b8:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
400197bc:	e3500000 	cmp	r0, #0
400197c0:	1a000004 	bne	400197d8 <CyU3PDmaIntHandler_TypeManual+0x284>
400197c4:	e3a00010 	mov	r0, #16
400197c8:	e58d001c 	str	r0, [sp, #28]
400197cc:	e59d0020 	ldr	r0, [sp, #32]
400197d0:	e3c00010 	bic	r0, r0, #16
400197d4:	e58d0020 	str	r0, [sp, #32]
400197d8:	e1d502b0 	ldrh	r0, [r5, #32]
400197dc:	e58d000c 	str	r0, [sp, #12]
400197e0:	e1d501b2 	ldrh	r0, [r5, #18]
400197e4:	e28d100c 	add	r1, sp, #12
400197e8:	ebffed5b 	bl	40014d5c <CyU3PDmaSocketSetConfig>
400197ec:	e1d501ba 	ldrh	r0, [r5, #26]
400197f0:	e28d1024 	add	r1, sp, #36	; 0x24
400197f4:	eb00230b 	bl	40022428 <CyU3PDmaDscrGetConfig>
400197f8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400197fc:	e59f12d8 	ldr	r1, [pc, #728]	; 40019adc <CyU3PDmaIntHandler_TypeManual+0x588>
40019800:	e0000001 	and	r0, r0, r1
40019804:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019808:	e1d501ba 	ldrh	r0, [r5, #26]
4001980c:	e28d1024 	add	r1, sp, #36	; 0x24
40019810:	eb00231f 	bl	40022494 <CyU3PDmaDscrSetConfig>
40019814:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019818:	e3500000 	cmp	r0, #0
4001981c:	0a000004 	beq	40019834 <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019820:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019824:	e59f32b0 	ldr	r3, [pc, #688]	; 40019adc <CyU3PDmaIntHandler_TypeManual+0x588>
40019828:	e0021003 	and	r1, r2, r3
4001982c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019830:	ebffe1d0 	bl	40011f78 <CyU3PSysFlushDRegion>
40019834:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019838:	e59f12a0 	ldr	r1, [pc, #672]	; 40019ae0 <CyU3PDmaIntHandler_TypeManual+0x58c>
4001983c:	e0010820 	and	r0, r1, r0, lsr #16
40019840:	e1c501ba 	strh	r0, [r5, #26]
40019844:	e1d511ba 	ldrh	r1, [r5, #26]
40019848:	e1d501b0 	ldrh	r0, [r5, #16]
4001984c:	e3a02000 	mov	r2, #0
40019850:	ebffed2f 	bl	40014d14 <CyU3PDmaSocketSendEvent>
40019854:	ebffe420 	bl	400128dc <CyU3PSysBarrierSync>
40019858:	e3160080 	tst	r6, #128	; 0x80
4001985c:	0a000016 	beq	400198bc <CyU3PDmaIntHandler_TypeManual+0x368>
40019860:	e1d500b4 	ldrh	r0, [r5, #4]
40019864:	e3500002 	cmp	r0, #2
40019868:	1a000001 	bne	40019874 <CyU3PDmaIntHandler_TypeManual+0x320>
4001986c:	e1d501b0 	ldrh	r0, [r5, #16]
40019870:	ebffec77 	bl	40014a54 <CyU3PDmaSocketDisable>
40019874:	e3a00001 	mov	r0, #1
40019878:	e5850000 	str	r0, [r5]
4001987c:	e3a02000 	mov	r2, #0
40019880:	e3a01001 	mov	r1, #1
40019884:	e2850074 	add	r0, r5, #116	; 0x74
40019888:	ebffc12a 	bl	40009d38 <_txe_event_flags_set>
4001988c:	ebffe412 	bl	400128dc <CyU3PSysBarrierSync>
40019890:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019894:	e3500000 	cmp	r0, #0
40019898:	0a000007 	beq	400198bc <CyU3PDmaIntHandler_TypeManual+0x368>
4001989c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400198a0:	e3100001 	tst	r0, #1
400198a4:	0a000004 	beq	400198bc <CyU3PDmaIntHandler_TypeManual+0x368>
400198a8:	e3a02000 	mov	r2, #0
400198ac:	e3a01001 	mov	r1, #1
400198b0:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400198b4:	e1a00005 	mov	r0, r5
400198b8:	e12fff33 	blx	r3
400198bc:	e3160e12 	tst	r6, #288	; 0x120
400198c0:	0a000082 	beq	40019ad0 <CyU3PDmaIntHandler_TypeManual+0x57c>
400198c4:	ebffe404 	bl	400128dc <CyU3PSysBarrierSync>
400198c8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400198cc:	e3500000 	cmp	r0, #0
400198d0:	0a00007e 	beq	40019ad0 <CyU3PDmaIntHandler_TypeManual+0x57c>
400198d4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400198d8:	e3100c01 	tst	r0, #256	; 0x100
400198dc:	0a00007b 	beq	40019ad0 <CyU3PDmaIntHandler_TypeManual+0x57c>
400198e0:	e3a02000 	mov	r2, #0
400198e4:	e3a01c01 	mov	r1, #256	; 0x100
400198e8:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400198ec:	e1a00005 	mov	r0, r5
400198f0:	e12fff33 	blx	r3
400198f4:	ea000075 	b	40019ad0 <CyU3PDmaIntHandler_TypeManual+0x57c>
400198f8:	e594000c 	ldr	r0, [r4, #12]
400198fc:	e1a07800 	lsl	r7, r0, #16
40019900:	e1a07827 	lsr	r7, r7, #16
40019904:	e3160001 	tst	r6, #1
40019908:	0a00005d 	beq	40019a84 <CyU3PDmaIntHandler_TypeManual+0x530>
4001990c:	e5950000 	ldr	r0, [r5]
40019910:	e3500004 	cmp	r0, #4
40019914:	0a000031 	beq	400199e0 <CyU3PDmaIntHandler_TypeManual+0x48c>
40019918:	e1a00000 	nop			; (mov r0, r0)
4001991c:	e1d501be 	ldrh	r0, [r5, #30]
40019920:	e28d1024 	add	r1, sp, #36	; 0x24
40019924:	eb0022bf 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019928:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001992c:	e58d0000 	str	r0, [sp]
40019930:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019934:	e59f11a4 	ldr	r1, [pc, #420]	; 40019ae0 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019938:	e0010820 	and	r0, r1, r0, lsr #16
4001993c:	e1cd00b4 	strh	r0, [sp, #4]
40019940:	e241100f 	sub	r1, r1, #15
40019944:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019948:	e0000001 	and	r0, r0, r1
4001994c:	e1cd00b6 	strh	r0, [sp, #6]
40019950:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019954:	e200000f 	and	r0, r0, #15
40019958:	e1cd00b8 	strh	r0, [sp, #8]
4001995c:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019960:	e3500000 	cmp	r0, #0
40019964:	0a000002 	beq	40019974 <CyU3PDmaIntHandler_TypeManual+0x420>
40019968:	e1dd10b6 	ldrh	r1, [sp, #6]
4001996c:	e59d0000 	ldr	r0, [sp]
40019970:	ebffe180 	bl	40011f78 <CyU3PSysFlushDRegion>
40019974:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019978:	e3100008 	tst	r0, #8
4001997c:	0a000003 	beq	40019990 <CyU3PDmaIntHandler_TypeManual+0x43c>
40019980:	e3a02000 	mov	r2, #0
40019984:	e3a01008 	mov	r1, #8
40019988:	e2850074 	add	r0, r5, #116	; 0x74
4001998c:	ebffc0e9 	bl	40009d38 <_txe_event_flags_set>
40019990:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019994:	e59f1144 	ldr	r1, [pc, #324]	; 40019ae0 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019998:	e0010820 	and	r0, r1, r0, lsr #16
4001999c:	e1c501be 	strh	r0, [r5, #30]
400199a0:	ebffe3cd 	bl	400128dc <CyU3PSysBarrierSync>
400199a4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400199a8:	e3500000 	cmp	r0, #0
400199ac:	0a000007 	beq	400199d0 <CyU3PDmaIntHandler_TypeManual+0x47c>
400199b0:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400199b4:	e3100008 	tst	r0, #8
400199b8:	0a000004 	beq	400199d0 <CyU3PDmaIntHandler_TypeManual+0x47c>
400199bc:	e1a0200d 	mov	r2, sp
400199c0:	e3a01008 	mov	r1, #8
400199c4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
400199c8:	e1a00005 	mov	r0, r5
400199cc:	e12fff33 	blx	r3
400199d0:	e1d501be 	ldrh	r0, [r5, #30]
400199d4:	e1500007 	cmp	r0, r7
400199d8:	1affffcf 	bne	4001991c <CyU3PDmaIntHandler_TypeManual+0x3c8>
400199dc:	ea000028 	b	40019a84 <CyU3PDmaIntHandler_TypeManual+0x530>
400199e0:	e1d501b4 	ldrh	r0, [r5, #20]
400199e4:	e28d1024 	add	r1, sp, #36	; 0x24
400199e8:	eb00228e 	bl	40022428 <CyU3PDmaDscrGetConfig>
400199ec:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400199f0:	e58d0000 	str	r0, [sp]
400199f4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400199f8:	e59f10e0 	ldr	r1, [pc, #224]	; 40019ae0 <CyU3PDmaIntHandler_TypeManual+0x58c>
400199fc:	e0010820 	and	r0, r1, r0, lsr #16
40019a00:	e1cd00b4 	strh	r0, [sp, #4]
40019a04:	e241100f 	sub	r1, r1, #15
40019a08:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a0c:	e0000001 	and	r0, r0, r1
40019a10:	e1cd00b6 	strh	r0, [sp, #6]
40019a14:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a18:	e200000f 	and	r0, r0, #15
40019a1c:	e1cd00b8 	strh	r0, [sp, #8]
40019a20:	e3a00001 	mov	r0, #1
40019a24:	e5850000 	str	r0, [r5]
40019a28:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019a2c:	e3500000 	cmp	r0, #0
40019a30:	0a000002 	beq	40019a40 <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019a34:	e1dd10b6 	ldrh	r1, [sp, #6]
40019a38:	e59d0000 	ldr	r0, [sp]
40019a3c:	ebffe14d 	bl	40011f78 <CyU3PSysFlushDRegion>
40019a40:	e3a02000 	mov	r2, #0
40019a44:	e3a01004 	mov	r1, #4
40019a48:	e2850074 	add	r0, r5, #116	; 0x74
40019a4c:	ebffc0b9 	bl	40009d38 <_txe_event_flags_set>
40019a50:	e3c66080 	bic	r6, r6, #128	; 0x80
40019a54:	ebffe3a0 	bl	400128dc <CyU3PSysBarrierSync>
40019a58:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a5c:	e3500000 	cmp	r0, #0
40019a60:	0a000007 	beq	40019a84 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a64:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a68:	e3100004 	tst	r0, #4
40019a6c:	0a000004 	beq	40019a84 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a70:	e1a0200d 	mov	r2, sp
40019a74:	e3a01004 	mov	r1, #4
40019a78:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a7c:	e1a00005 	mov	r0, r5
40019a80:	e12fff33 	blx	r3
40019a84:	e3160080 	tst	r6, #128	; 0x80
40019a88:	0a000002 	beq	40019a98 <CyU3PDmaIntHandler_TypeManual+0x544>
40019a8c:	e3a00006 	mov	r0, #6
40019a90:	e5850000 	str	r0, [r5]
40019a94:	ebffe390 	bl	400128dc <CyU3PSysBarrierSync>
40019a98:	e3160020 	tst	r6, #32
40019a9c:	0a00000b 	beq	40019ad0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019aa0:	ebffe38d 	bl	400128dc <CyU3PSysBarrierSync>
40019aa4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019aa8:	e3500000 	cmp	r0, #0
40019aac:	0a000007 	beq	40019ad0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019ab0:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ab4:	e3100080 	tst	r0, #128	; 0x80
40019ab8:	0a000004 	beq	40019ad0 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019abc:	e3a02000 	mov	r2, #0
40019ac0:	e3a01080 	mov	r1, #128	; 0x80
40019ac4:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019ac8:	e1a00005 	mov	r0, r5
40019acc:	e12fff33 	blx	r3
40019ad0:	e285003c 	add	r0, r5, #60	; 0x3c
40019ad4:	ebffc164 	bl	4000a06c <_txe_mutex_put>
40019ad8:	eafffea6 	b	40019578 <CyU3PDmaIntHandler_TypeManual+0x24>
40019adc:	0000fff0 	.word	0x0000fff0
40019ae0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019ae4 <CyU3PDmaIntHandler_TypeManyToOne>:
40019ae4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019ae8:	e24dd034 	sub	sp, sp, #52	; 0x34
40019aec:	e1a04000 	mov	r4, r0
40019af0:	e5945004 	ldr	r5, [r4, #4]
40019af4:	e5946008 	ldr	r6, [r4, #8]
40019af8:	e3160040 	tst	r6, #64	; 0x40
40019afc:	0a000003 	beq	40019b10 <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019b00:	e1a00005 	mov	r0, r5
40019b04:	eb00033d 	bl	4001a800 <CyU3PDmaMultiChannelHandleError>
40019b08:	e28dd034 	add	sp, sp, #52	; 0x34
40019b0c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019b10:	e3e01000 	mvn	r1, #0
40019b14:	e2850078 	add	r0, r5, #120	; 0x78
40019b18:	ebffc11e 	bl	40009f98 <_txe_mutex_get>
40019b1c:	e5940000 	ldr	r0, [r4]
40019b20:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a0b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019b24:	e0019820 	and	r9, r1, r0, lsr #16
40019b28:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019b2c:	e1500009 	cmp	r0, r9
40019b30:	1a0000d8 	bne	40019e98 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019b34:	e594000c 	ldr	r0, [r4, #12]
40019b38:	e0007001 	and	r7, r0, r1
40019b3c:	e3160002 	tst	r6, #2
40019b40:	0a000054 	beq	40019c98 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019b44:	e5950000 	ldr	r0, [r5]
40019b48:	e3500003 	cmp	r0, #3
40019b4c:	0a000030 	beq	40019c14 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019b50:	e1a00000 	nop			; (mov r0, r0)
40019b54:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019b58:	e28d1024 	add	r1, sp, #36	; 0x24
40019b5c:	eb002231 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019b60:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b64:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a0b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019b68:	e0010820 	and	r0, r1, r0, lsr #16
40019b6c:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019b70:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b74:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019b78:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019b7c:	e28d1024 	add	r1, sp, #36	; 0x24
40019b80:	eb002228 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019b84:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b88:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a0bc <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019b8c:	e0000001 	and	r0, r0, r1
40019b90:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019b94:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019b98:	e28d1024 	add	r1, sp, #36	; 0x24
40019b9c:	eb00223c 	bl	40022494 <CyU3PDmaDscrSetConfig>
40019ba0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019ba4:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a0c0 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019ba8:	e0000001 	and	r0, r0, r1
40019bac:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019bb0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019bb4:	e1a00820 	lsr	r0, r0, #16
40019bb8:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019bbc:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019bc0:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019bc4:	e1a00802 	lsl	r0, r2, #16
40019bc8:	e1a00820 	lsr	r0, r0, #16
40019bcc:	e3a02000 	mov	r2, #0
40019bd0:	ebffec4f 	bl	40014d14 <CyU3PDmaSocketSendEvent>
40019bd4:	ebffe340 	bl	400128dc <CyU3PSysBarrierSync>
40019bd8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019bdc:	e3500000 	cmp	r0, #0
40019be0:	0a000007 	beq	40019c04 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019be4:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019be8:	e3100010 	tst	r0, #16
40019bec:	0a000004 	beq	40019c04 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019bf0:	e3a02000 	mov	r2, #0
40019bf4:	e3a01010 	mov	r1, #16
40019bf8:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019bfc:	e1a00005 	mov	r0, r5
40019c00:	e12fff33 	blx	r3
40019c04:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019c08:	e1500007 	cmp	r0, r7
40019c0c:	1affffd0 	bne	40019b54 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
40019c10:	ea000020 	b	40019c98 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c14:	e3a00001 	mov	r0, #1
40019c18:	e5850000 	str	r0, [r5]
40019c1c:	e1d500b4 	ldrh	r0, [r5, #4]
40019c20:	e3500005 	cmp	r0, #5
40019c24:	1a00000a 	bne	40019c54 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
40019c28:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c2c:	e1a0100d 	mov	r1, sp
40019c30:	ebffeb9f 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40019c34:	e3a00000 	mov	r0, #0
40019c38:	e58d0010 	str	r0, [sp, #16]
40019c3c:	e59d0014 	ldr	r0, [sp, #20]
40019c40:	e3c00002 	bic	r0, r0, #2
40019c44:	e58d0014 	str	r0, [sp, #20]
40019c48:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c4c:	e1a0100d 	mov	r1, sp
40019c50:	ebffec41 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40019c54:	e3a02000 	mov	r2, #0
40019c58:	e3a01002 	mov	r1, #2
40019c5c:	e28500b0 	add	r0, r5, #176	; 0xb0
40019c60:	ebffc034 	bl	40009d38 <_txe_event_flags_set>
40019c64:	e3c66080 	bic	r6, r6, #128	; 0x80
40019c68:	ebffe31b 	bl	400128dc <CyU3PSysBarrierSync>
40019c6c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019c70:	e3500000 	cmp	r0, #0
40019c74:	0a000007 	beq	40019c98 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c78:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019c7c:	e3100002 	tst	r0, #2
40019c80:	0a000004 	beq	40019c98 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c84:	e3a02000 	mov	r2, #0
40019c88:	e3a01002 	mov	r1, #2
40019c8c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019c90:	e1a00005 	mov	r0, r5
40019c94:	e12fff33 	blx	r3
40019c98:	e3160010 	tst	r6, #16
40019c9c:	0a00004f 	beq	40019de0 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019ca0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019ca4:	e28d1024 	add	r1, sp, #36	; 0x24
40019ca8:	eb0021de 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019cac:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cb0:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a0b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019cb4:	e0010820 	and	r0, r1, r0, lsr #16
40019cb8:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019cbc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cc0:	e3100001 	tst	r0, #1
40019cc4:	0a000045 	beq	40019de0 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019cc8:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019ccc:	ebffeb60 	bl	40014a54 <CyU3PDmaSocketDisable>
40019cd0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019cd4:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a0bc <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019cd8:	e0000001 	and	r0, r0, r1
40019cdc:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ce0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019ce4:	e28d1024 	add	r1, sp, #36	; 0x24
40019ce8:	eb0021e9 	bl	40022494 <CyU3PDmaDscrSetConfig>
40019cec:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cf0:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019cf4:	e1a0100d 	mov	r1, sp
40019cf8:	e1a00009 	mov	r0, r9
40019cfc:	ebffeb6c 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
40019d00:	e59d000c 	ldr	r0, [sp, #12]
40019d04:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019d08:	e58d000c 	str	r0, [sp, #12]
40019d0c:	e59d000c 	ldr	r0, [sp, #12]
40019d10:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019d14:	e58d000c 	str	r0, [sp, #12]
40019d18:	e3a00000 	mov	r0, #0
40019d1c:	e58d0010 	str	r0, [sp, #16]
40019d20:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d24:	e2400001 	sub	r0, r0, #1
40019d28:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
40019d2c:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d30:	e3500000 	cmp	r0, #0
40019d34:	1a000004 	bne	40019d4c <CyU3PDmaIntHandler_TypeManyToOne+0x268>
40019d38:	e3a00010 	mov	r0, #16
40019d3c:	e58d0010 	str	r0, [sp, #16]
40019d40:	e59d0014 	ldr	r0, [sp, #20]
40019d44:	e3c00010 	bic	r0, r0, #16
40019d48:	e58d0014 	str	r0, [sp, #20]
40019d4c:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d50:	e58d0000 	str	r0, [sp]
40019d54:	e1a0100d 	mov	r1, sp
40019d58:	e1a00009 	mov	r0, r9
40019d5c:	ebffebfe 	bl	40014d5c <CyU3PDmaSocketSetConfig>
40019d60:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019d64:	e28d1024 	add	r1, sp, #36	; 0x24
40019d68:	eb0021ae 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019d6c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d70:	e59f1344 	ldr	r1, [pc, #836]	; 4001a0bc <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019d74:	e0000001 	and	r0, r0, r1
40019d78:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019d7c:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019d80:	e28d1024 	add	r1, sp, #36	; 0x24
40019d84:	eb0021c2 	bl	40022494 <CyU3PDmaDscrSetConfig>
40019d88:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019d8c:	e3500000 	cmp	r0, #0
40019d90:	0a000004 	beq	40019da8 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
40019d94:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019d98:	e59f331c 	ldr	r3, [pc, #796]	; 4001a0bc <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019d9c:	e0021003 	and	r1, r2, r3
40019da0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019da4:	ebffe073 	bl	40011f78 <CyU3PSysFlushDRegion>
40019da8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019dac:	e59f130c 	ldr	r1, [pc, #780]	; 4001a0c0 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019db0:	e0000001 	and	r0, r0, r1
40019db4:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019db8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019dbc:	e1a00820 	lsr	r0, r0, #16
40019dc0:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019dc4:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019dc8:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019dcc:	e1a00802 	lsl	r0, r2, #16
40019dd0:	e1a00820 	lsr	r0, r0, #16
40019dd4:	e3a02000 	mov	r2, #0
40019dd8:	ebffebcd 	bl	40014d14 <CyU3PDmaSocketSendEvent>
40019ddc:	ebffe2be 	bl	400128dc <CyU3PSysBarrierSync>
40019de0:	e3160080 	tst	r6, #128	; 0x80
40019de4:	0a00001c 	beq	40019e5c <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019de8:	e3a08000 	mov	r8, #0
40019dec:	ea000005 	b	40019e08 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
40019df0:	e2851024 	add	r1, r5, #36	; 0x24
40019df4:	e0811088 	add	r1, r1, r8, lsl #1
40019df8:	e1d100b0 	ldrh	r0, [r1]
40019dfc:	ebffeb14 	bl	40014a54 <CyU3PDmaSocketDisable>
40019e00:	e2880001 	add	r0, r8, #1
40019e04:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019e08:	e1d500ba 	ldrh	r0, [r5, #10]
40019e0c:	e1500008 	cmp	r0, r8
40019e10:	cafffff6 	bgt	40019df0 <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
40019e14:	e3a00001 	mov	r0, #1
40019e18:	e5850000 	str	r0, [r5]
40019e1c:	e3a02000 	mov	r2, #0
40019e20:	e3a01001 	mov	r1, #1
40019e24:	e28500b0 	add	r0, r5, #176	; 0xb0
40019e28:	ebffbfc2 	bl	40009d38 <_txe_event_flags_set>
40019e2c:	ebffe2aa 	bl	400128dc <CyU3PSysBarrierSync>
40019e30:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019e34:	e3500000 	cmp	r0, #0
40019e38:	0a000007 	beq	40019e5c <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e3c:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019e40:	e3100001 	tst	r0, #1
40019e44:	0a000004 	beq	40019e5c <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e48:	e3a02000 	mov	r2, #0
40019e4c:	e3a01001 	mov	r1, #1
40019e50:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019e54:	e1a00005 	mov	r0, r5
40019e58:	e12fff33 	blx	r3
40019e5c:	e3160e12 	tst	r6, #288	; 0x120
40019e60:	0a000091 	beq	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e64:	ebffe29c 	bl	400128dc <CyU3PSysBarrierSync>
40019e68:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019e6c:	e3500000 	cmp	r0, #0
40019e70:	0a00008d 	beq	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e74:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019e78:	e3100c01 	tst	r0, #256	; 0x100
40019e7c:	0a00008a 	beq	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e80:	e3a02000 	mov	r2, #0
40019e84:	e3a01c01 	mov	r1, #256	; 0x100
40019e88:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019e8c:	e1a00005 	mov	r0, r5
40019e90:	e12fff33 	blx	r3
40019e94:	ea000084 	b	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019e98:	e594000c 	ldr	r0, [r4, #12]
40019e9c:	e1a07800 	lsl	r7, r0, #16
40019ea0:	e1a07827 	lsr	r7, r7, #16
40019ea4:	e3160001 	tst	r6, #1
40019ea8:	0a000048 	beq	40019fd0 <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
40019eac:	e5950000 	ldr	r0, [r5]
40019eb0:	e3500004 	cmp	r0, #4
40019eb4:	0a00007c 	beq	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019eb8:	e3a08000 	mov	r8, #0
40019ebc:	ea000007 	b	40019ee0 <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
40019ec0:	e2850024 	add	r0, r5, #36	; 0x24
40019ec4:	e0800088 	add	r0, r0, r8, lsl #1
40019ec8:	e1d000b0 	ldrh	r0, [r0]
40019ecc:	e1500009 	cmp	r0, r9
40019ed0:	1a000000 	bne	40019ed8 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
40019ed4:	ea000004 	b	40019eec <CyU3PDmaIntHandler_TypeManyToOne+0x408>
40019ed8:	e2880001 	add	r0, r8, #1
40019edc:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019ee0:	e1d500ba 	ldrh	r0, [r5, #10]
40019ee4:	e1500008 	cmp	r0, r8
40019ee8:	cafffff4 	bgt	40019ec0 <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
40019eec:	e1a00000 	nop			; (mov r0, r0)
40019ef0:	e1a00000 	nop			; (mov r0, r0)
40019ef4:	e285103e 	add	r1, r5, #62	; 0x3e
40019ef8:	e0811088 	add	r1, r1, r8, lsl #1
40019efc:	e1d100b0 	ldrh	r0, [r1]
40019f00:	e28d1024 	add	r1, sp, #36	; 0x24
40019f04:	eb002147 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019f08:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019f0c:	e58d0018 	str	r0, [sp, #24]
40019f10:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f14:	e59f119c 	ldr	r1, [pc, #412]	; 4001a0b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f18:	e0010820 	and	r0, r1, r0, lsr #16
40019f1c:	e1cd01bc 	strh	r0, [sp, #28]
40019f20:	e241100f 	sub	r1, r1, #15
40019f24:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f28:	e0000001 	and	r0, r0, r1
40019f2c:	e1cd01be 	strh	r0, [sp, #30]
40019f30:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f34:	e200000f 	and	r0, r0, #15
40019f38:	e1cd02b0 	strh	r0, [sp, #32]
40019f3c:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019f40:	e3500000 	cmp	r0, #0
40019f44:	0a000002 	beq	40019f54 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
40019f48:	e1dd11be 	ldrh	r1, [sp, #30]
40019f4c:	e59d0018 	ldr	r0, [sp, #24]
40019f50:	ebffe008 	bl	40011f78 <CyU3PSysFlushDRegion>
40019f54:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f58:	e3100008 	tst	r0, #8
40019f5c:	0a000003 	beq	40019f70 <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
40019f60:	e3a02000 	mov	r2, #0
40019f64:	e3a01008 	mov	r1, #8
40019f68:	e28500b0 	add	r0, r5, #176	; 0xb0
40019f6c:	ebffbf71 	bl	40009d38 <_txe_event_flags_set>
40019f70:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019f74:	e59f113c 	ldr	r1, [pc, #316]	; 4001a0b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f78:	e0010820 	and	r0, r1, r0, lsr #16
40019f7c:	e285103e 	add	r1, r5, #62	; 0x3e
40019f80:	e0811088 	add	r1, r1, r8, lsl #1
40019f84:	e1c100b0 	strh	r0, [r1]
40019f88:	ebffe253 	bl	400128dc <CyU3PSysBarrierSync>
40019f8c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019f90:	e3500000 	cmp	r0, #0
40019f94:	0a000007 	beq	40019fb8 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
40019f98:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019f9c:	e3100008 	tst	r0, #8
40019fa0:	0a000004 	beq	40019fb8 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
40019fa4:	e28d2018 	add	r2, sp, #24
40019fa8:	e3a01008 	mov	r1, #8
40019fac:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019fb0:	e1a00005 	mov	r0, r5
40019fb4:	e12fff33 	blx	r3
40019fb8:	e285003e 	add	r0, r5, #62	; 0x3e
40019fbc:	e0800088 	add	r0, r0, r8, lsl #1
40019fc0:	e1d000b0 	ldrh	r0, [r0]
40019fc4:	e1500007 	cmp	r0, r7
40019fc8:	1affffc9 	bne	40019ef4 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
40019fcc:	ea000036 	b	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019fd0:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
40019fd4:	e28d1024 	add	r1, sp, #36	; 0x24
40019fd8:	eb002112 	bl	40022428 <CyU3PDmaDscrGetConfig>
40019fdc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019fe0:	e58d0018 	str	r0, [sp, #24]
40019fe4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019fe8:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a0b8 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019fec:	e0010820 	and	r0, r1, r0, lsr #16
40019ff0:	e1cd01bc 	strh	r0, [sp, #28]
40019ff4:	e241100f 	sub	r1, r1, #15
40019ff8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ffc:	e0000001 	and	r0, r0, r1
4001a000:	e1cd01be 	strh	r0, [sp, #30]
4001a004:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a008:	e200000f 	and	r0, r0, #15
4001a00c:	e1cd02b0 	strh	r0, [sp, #32]
4001a010:	e3a00001 	mov	r0, #1
4001a014:	e5850000 	str	r0, [r5]
4001a018:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a01c:	e3500000 	cmp	r0, #0
4001a020:	0a000002 	beq	4001a030 <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a024:	e1dd11be 	ldrh	r1, [sp, #30]
4001a028:	e59d0018 	ldr	r0, [sp, #24]
4001a02c:	ebffdfd1 	bl	40011f78 <CyU3PSysFlushDRegion>
4001a030:	e1d500b4 	ldrh	r0, [r5, #4]
4001a034:	e3500005 	cmp	r0, #5
4001a038:	1a00000a 	bne	4001a068 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a03c:	e1a0100d 	mov	r1, sp
4001a040:	e1a00009 	mov	r0, r9
4001a044:	ebffea9a 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
4001a048:	e3a00000 	mov	r0, #0
4001a04c:	e58d0010 	str	r0, [sp, #16]
4001a050:	e59d0014 	ldr	r0, [sp, #20]
4001a054:	e3c00001 	bic	r0, r0, #1
4001a058:	e58d0014 	str	r0, [sp, #20]
4001a05c:	e1a0100d 	mov	r1, sp
4001a060:	e1a00009 	mov	r0, r9
4001a064:	ebffeb3c 	bl	40014d5c <CyU3PDmaSocketSetConfig>
4001a068:	e3a02000 	mov	r2, #0
4001a06c:	e3a01004 	mov	r1, #4
4001a070:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a074:	ebffbf2f 	bl	40009d38 <_txe_event_flags_set>
4001a078:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a07c:	ebffe216 	bl	400128dc <CyU3PSysBarrierSync>
4001a080:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a084:	e3500000 	cmp	r0, #0
4001a088:	0a000007 	beq	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a08c:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a090:	e3100004 	tst	r0, #4
4001a094:	0a000004 	beq	4001a0ac <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a098:	e28d2018 	add	r2, sp, #24
4001a09c:	e3a01004 	mov	r1, #4
4001a0a0:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a0a4:	e1a00005 	mov	r0, r5
4001a0a8:	e12fff33 	blx	r3
4001a0ac:	e2850078 	add	r0, r5, #120	; 0x78
4001a0b0:	ebffbfed 	bl	4000a06c <_txe_mutex_put>
4001a0b4:	eafffe93 	b	40019b08 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a0b8:	0000ffff 	.word	0x0000ffff
4001a0bc:	0000fff0 	.word	0x0000fff0
4001a0c0:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a0c4 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a0c4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a0c8:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a0cc:	e1a04000 	mov	r4, r0
4001a0d0:	e594a004 	ldr	sl, [r4, #4]
4001a0d4:	e5940000 	ldr	r0, [r4]
4001a0d8:	e59f1664 	ldr	r1, [pc, #1636]	; 4001a744 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a0dc:	e0016820 	and	r6, r1, r0, lsr #16
4001a0e0:	e5945008 	ldr	r5, [r4, #8]
4001a0e4:	e3150040 	tst	r5, #64	; 0x40
4001a0e8:	0a000003 	beq	4001a0fc <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a0ec:	e1a0000a 	mov	r0, sl
4001a0f0:	eb0001c2 	bl	4001a800 <CyU3PDmaMultiChannelHandleError>
4001a0f4:	e28dd038 	add	sp, sp, #56	; 0x38
4001a0f8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a0fc:	e3e01000 	mvn	r1, #0
4001a100:	e28a0078 	add	r0, sl, #120	; 0x78
4001a104:	ebffbfa3 	bl	40009f98 <_txe_mutex_get>
4001a108:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a10c:	e1500006 	cmp	r0, r6
4001a110:	0a0000fc 	beq	4001a508 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a114:	e594000c 	ldr	r0, [r4, #12]
4001a118:	e1a09800 	lsl	r9, r0, #16
4001a11c:	e1a09829 	lsr	r9, r9, #16
4001a120:	e3a08000 	mov	r8, #0
4001a124:	ea000007 	b	4001a148 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a128:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a12c:	e0800088 	add	r0, r0, r8, lsl #1
4001a130:	e1d000b0 	ldrh	r0, [r0]
4001a134:	e1500006 	cmp	r0, r6
4001a138:	1a000000 	bne	4001a140 <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a13c:	ea000004 	b	4001a154 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a140:	e2880001 	add	r0, r8, #1
4001a144:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a148:	e1da00ba 	ldrh	r0, [sl, #10]
4001a14c:	e1500008 	cmp	r0, r8
4001a150:	cafffff4 	bgt	4001a128 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a154:	e1a00000 	nop			; (mov r0, r0)
4001a158:	e3150002 	tst	r5, #2
4001a15c:	0a00007e 	beq	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a160:	e59a0000 	ldr	r0, [sl]
4001a164:	e3500003 	cmp	r0, #3
4001a168:	0a00005a 	beq	4001a2d8 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a16c:	e1a00000 	nop			; (mov r0, r0)
4001a170:	e28a1046 	add	r1, sl, #70	; 0x46
4001a174:	e0811088 	add	r1, r1, r8, lsl #1
4001a178:	e1d100b0 	ldrh	r0, [r1]
4001a17c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a180:	eb0020a8 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001a184:	e28a1046 	add	r1, sl, #70	; 0x46
4001a188:	e0811088 	add	r1, r1, r8, lsl #1
4001a18c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a190:	e1c100b0 	strh	r0, [r1]
4001a194:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a198:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001a744 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a19c:	e0017820 	and	r7, r1, r0, lsr #16
4001a1a0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a1a4:	e1a00007 	mov	r0, r7
4001a1a8:	eb00209e 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001a1ac:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a1b0:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a748 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a1b4:	e0000001 	and	r0, r0, r1
4001a1b8:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a1bc:	e28d1028 	add	r1, sp, #40	; 0x28
4001a1c0:	e1a00007 	mov	r0, r7
4001a1c4:	eb0020b2 	bl	40022494 <CyU3PDmaDscrSetConfig>
4001a1c8:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a1cc:	e3a02000 	mov	r2, #0
4001a1d0:	e1a01007 	mov	r1, r7
4001a1d4:	ebffeace 	bl	40014d14 <CyU3PDmaSocketSendEvent>
4001a1d8:	ebffe1bf 	bl	400128dc <CyU3PSysBarrierSync>
4001a1dc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a1e0:	e3500000 	cmp	r0, #0
4001a1e4:	0a000007 	beq	4001a208 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a1e8:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a1ec:	e3100010 	tst	r0, #16
4001a1f0:	0a000004 	beq	4001a208 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a1f4:	e3a02000 	mov	r2, #0
4001a1f8:	e3a01010 	mov	r1, #16
4001a1fc:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a200:	e1a0000a 	mov	r0, sl
4001a204:	e12fff33 	blx	r3
4001a208:	e28a0046 	add	r0, sl, #70	; 0x46
4001a20c:	e0800088 	add	r0, r0, r8, lsl #1
4001a210:	e1d000b0 	ldrh	r0, [r0]
4001a214:	e1500009 	cmp	r0, r9
4001a218:	1affffd4 	bne	4001a170 <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a21c:	e59a0000 	ldr	r0, [sl]
4001a220:	e3500006 	cmp	r0, #6
4001a224:	1a00004c 	bne	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a228:	e1da00b8 	ldrh	r0, [sl, #8]
4001a22c:	e1da10ba 	ldrh	r1, [sl, #10]
4001a230:	e0000091 	mul	r0, r1, r0
4001a234:	e1a08800 	lsl	r8, r0, #16
4001a238:	e1a08828 	lsr	r8, r8, #16
4001a23c:	e1da71b4 	ldrh	r7, [sl, #20]
4001a240:	ea00000c 	b	4001a278 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a244:	e28d1028 	add	r1, sp, #40	; 0x28
4001a248:	e1a00007 	mov	r0, r7
4001a24c:	eb002075 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001a250:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a254:	e3100008 	tst	r0, #8
4001a258:	0a000000 	beq	4001a260 <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a25c:	ea000007 	b	4001a280 <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a260:	e2480001 	sub	r0, r8, #1
4001a264:	e1a08800 	lsl	r8, r0, #16
4001a268:	e1a08828 	lsr	r8, r8, #16
4001a26c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a270:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001a744 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a274:	e0017820 	and	r7, r1, r0, lsr #16
4001a278:	e3580000 	cmp	r8, #0
4001a27c:	1afffff0 	bne	4001a244 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a280:	e1a00000 	nop			; (mov r0, r0)
4001a284:	e3580000 	cmp	r8, #0
4001a288:	1a000033 	bne	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a28c:	e3a00001 	mov	r0, #1
4001a290:	e58a0000 	str	r0, [sl]
4001a294:	e3a02000 	mov	r2, #0
4001a298:	e3a01001 	mov	r1, #1
4001a29c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a2a0:	ebffbea4 	bl	40009d38 <_txe_event_flags_set>
4001a2a4:	ebffe18c 	bl	400128dc <CyU3PSysBarrierSync>
4001a2a8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a2ac:	e3500000 	cmp	r0, #0
4001a2b0:	0a000029 	beq	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2b4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a2b8:	e3100001 	tst	r0, #1
4001a2bc:	0a000026 	beq	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2c0:	e3a02000 	mov	r2, #0
4001a2c4:	e3a01001 	mov	r1, #1
4001a2c8:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a2cc:	e1a0000a 	mov	r0, sl
4001a2d0:	e12fff33 	blx	r3
4001a2d4:	ea000020 	b	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2d8:	e3a00001 	mov	r0, #1
4001a2dc:	e58a0000 	str	r0, [sl]
4001a2e0:	e1da00b4 	ldrh	r0, [sl, #4]
4001a2e4:	e3500006 	cmp	r0, #6
4001a2e8:	1a00000a 	bne	4001a318 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a2ec:	e28d1004 	add	r1, sp, #4
4001a2f0:	e1a00006 	mov	r0, r6
4001a2f4:	ebffe9ee 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
4001a2f8:	e3a00000 	mov	r0, #0
4001a2fc:	e58d0014 	str	r0, [sp, #20]
4001a300:	e59d0018 	ldr	r0, [sp, #24]
4001a304:	e3c00002 	bic	r0, r0, #2
4001a308:	e58d0018 	str	r0, [sp, #24]
4001a30c:	e28d1004 	add	r1, sp, #4
4001a310:	e1a00006 	mov	r0, r6
4001a314:	ebffea90 	bl	40014d5c <CyU3PDmaSocketSetConfig>
4001a318:	e3a02000 	mov	r2, #0
4001a31c:	e3a01002 	mov	r1, #2
4001a320:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a324:	ebffbe83 	bl	40009d38 <_txe_event_flags_set>
4001a328:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a32c:	ebffe16a 	bl	400128dc <CyU3PSysBarrierSync>
4001a330:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a334:	e3500000 	cmp	r0, #0
4001a338:	0a000007 	beq	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a33c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a340:	e3100002 	tst	r0, #2
4001a344:	0a000004 	beq	4001a35c <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a348:	e3a02000 	mov	r2, #0
4001a34c:	e3a01002 	mov	r1, #2
4001a350:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a354:	e1a0000a 	mov	r0, sl
4001a358:	e12fff33 	blx	r3
4001a35c:	e3150010 	tst	r5, #16
4001a360:	0a000059 	beq	4001a4cc <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a364:	e28a1046 	add	r1, sl, #70	; 0x46
4001a368:	e0811088 	add	r1, r1, r8, lsl #1
4001a36c:	e1d100b0 	ldrh	r0, [r1]
4001a370:	e28d1028 	add	r1, sp, #40	; 0x28
4001a374:	eb00202b 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001a378:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a37c:	e3100001 	tst	r0, #1
4001a380:	0a000051 	beq	4001a4cc <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a384:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a388:	e0811088 	add	r1, r1, r8, lsl #1
4001a38c:	e1d100b0 	ldrh	r0, [r1]
4001a390:	ebffe9af 	bl	40014a54 <CyU3PDmaSocketDisable>
4001a394:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a398:	e59f13a8 	ldr	r1, [pc, #936]	; 4001a748 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a39c:	e0000001 	and	r0, r0, r1
4001a3a0:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a3a4:	e28a1046 	add	r1, sl, #70	; 0x46
4001a3a8:	e0811088 	add	r1, r1, r8, lsl #1
4001a3ac:	e1d100b0 	ldrh	r0, [r1]
4001a3b0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a3b4:	eb002036 	bl	40022494 <CyU3PDmaDscrSetConfig>
4001a3b8:	e28a1046 	add	r1, sl, #70	; 0x46
4001a3bc:	e0811088 	add	r1, r1, r8, lsl #1
4001a3c0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3c4:	e1c100b0 	strh	r0, [r1]
4001a3c8:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a3cc:	e0811088 	add	r1, r1, r8, lsl #1
4001a3d0:	e1d100b0 	ldrh	r0, [r1]
4001a3d4:	e28d1004 	add	r1, sp, #4
4001a3d8:	ebffe9b5 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
4001a3dc:	e59d0010 	ldr	r0, [sp, #16]
4001a3e0:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a3e4:	e58d0010 	str	r0, [sp, #16]
4001a3e8:	e59d0010 	ldr	r0, [sp, #16]
4001a3ec:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a3f0:	e58d0010 	str	r0, [sp, #16]
4001a3f4:	e3a00000 	mov	r0, #0
4001a3f8:	e58d0014 	str	r0, [sp, #20]
4001a3fc:	e28a0064 	add	r0, sl, #100	; 0x64
4001a400:	e0800088 	add	r0, r0, r8, lsl #1
4001a404:	e1d000b0 	ldrh	r0, [r0]
4001a408:	e2400001 	sub	r0, r0, #1
4001a40c:	e28a1064 	add	r1, sl, #100	; 0x64
4001a410:	e0811088 	add	r1, r1, r8, lsl #1
4001a414:	e1c100b0 	strh	r0, [r1]
4001a418:	e28a0064 	add	r0, sl, #100	; 0x64
4001a41c:	e0800088 	add	r0, r0, r8, lsl #1
4001a420:	e1d000b0 	ldrh	r0, [r0]
4001a424:	e3500000 	cmp	r0, #0
4001a428:	1a000004 	bne	4001a440 <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a42c:	e3a00010 	mov	r0, #16
4001a430:	e58d0014 	str	r0, [sp, #20]
4001a434:	e59d0018 	ldr	r0, [sp, #24]
4001a438:	e3c00010 	bic	r0, r0, #16
4001a43c:	e58d0018 	str	r0, [sp, #24]
4001a440:	e28a0046 	add	r0, sl, #70	; 0x46
4001a444:	e0800088 	add	r0, r0, r8, lsl #1
4001a448:	e1d000b0 	ldrh	r0, [r0]
4001a44c:	e58d0004 	str	r0, [sp, #4]
4001a450:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a454:	e0811088 	add	r1, r1, r8, lsl #1
4001a458:	e1d100b0 	ldrh	r0, [r1]
4001a45c:	e28d1004 	add	r1, sp, #4
4001a460:	ebffea3d 	bl	40014d5c <CyU3PDmaSocketSetConfig>
4001a464:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a468:	e59f12d4 	ldr	r1, [pc, #724]	; 4001a744 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a46c:	e0017820 	and	r7, r1, r0, lsr #16
4001a470:	e28d1028 	add	r1, sp, #40	; 0x28
4001a474:	e1a00007 	mov	r0, r7
4001a478:	eb001fea 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001a47c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a480:	e59f12c0 	ldr	r1, [pc, #704]	; 4001a748 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a484:	e0000001 	and	r0, r0, r1
4001a488:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a48c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a490:	e1a00007 	mov	r0, r7
4001a494:	eb001ffe 	bl	40022494 <CyU3PDmaDscrSetConfig>
4001a498:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a49c:	e3500000 	cmp	r0, #0
4001a4a0:	0a000004 	beq	4001a4b8 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a4a4:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a4a8:	e59f3298 	ldr	r3, [pc, #664]	; 4001a748 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a4ac:	e0021003 	and	r1, r2, r3
4001a4b0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a4b4:	ebffdeaf 	bl	40011f78 <CyU3PSysFlushDRegion>
4001a4b8:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a4bc:	e3a02000 	mov	r2, #0
4001a4c0:	e1a01007 	mov	r1, r7
4001a4c4:	ebffea12 	bl	40014d14 <CyU3PDmaSocketSendEvent>
4001a4c8:	ebffe103 	bl	400128dc <CyU3PSysBarrierSync>
4001a4cc:	e3150020 	tst	r5, #32
4001a4d0:	0a000098 	beq	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4d4:	ebffe100 	bl	400128dc <CyU3PSysBarrierSync>
4001a4d8:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a4dc:	e3500000 	cmp	r0, #0
4001a4e0:	0a000094 	beq	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4e4:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a4e8:	e3100080 	tst	r0, #128	; 0x80
4001a4ec:	0a000091 	beq	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a4f0:	e3a02000 	mov	r2, #0
4001a4f4:	e3a01080 	mov	r1, #128	; 0x80
4001a4f8:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a4fc:	e1a0000a 	mov	r0, sl
4001a500:	e12fff33 	blx	r3
4001a504:	ea00008b 	b	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a508:	e594000c 	ldr	r0, [r4, #12]
4001a50c:	e1a09800 	lsl	r9, r0, #16
4001a510:	e1a09829 	lsr	r9, r9, #16
4001a514:	e3150001 	tst	r5, #1
4001a518:	0a00006b 	beq	4001a6cc <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a51c:	e59a0000 	ldr	r0, [sl]
4001a520:	e3500004 	cmp	r0, #4
4001a524:	0a000031 	beq	4001a5f0 <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a528:	e1a00000 	nop			; (mov r0, r0)
4001a52c:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a530:	e28d1028 	add	r1, sp, #40	; 0x28
4001a534:	eb001fbb 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001a538:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a53c:	e58d001c 	str	r0, [sp, #28]
4001a540:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a544:	e59f11f8 	ldr	r1, [pc, #504]	; 4001a744 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a548:	e0010820 	and	r0, r1, r0, lsr #16
4001a54c:	e1cd02b0 	strh	r0, [sp, #32]
4001a550:	e241100f 	sub	r1, r1, #15
4001a554:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a558:	e0000001 	and	r0, r0, r1
4001a55c:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a560:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a564:	e200000f 	and	r0, r0, #15
4001a568:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a56c:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a570:	e3500000 	cmp	r0, #0
4001a574:	0a000002 	beq	4001a584 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a578:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a57c:	e59d001c 	ldr	r0, [sp, #28]
4001a580:	ebffde7c 	bl	40011f78 <CyU3PSysFlushDRegion>
4001a584:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a588:	e3100008 	tst	r0, #8
4001a58c:	0a000003 	beq	4001a5a0 <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a590:	e3a02000 	mov	r2, #0
4001a594:	e3a01008 	mov	r1, #8
4001a598:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a59c:	ebffbde5 	bl	40009d38 <_txe_event_flags_set>
4001a5a0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a5a4:	e59f1198 	ldr	r1, [pc, #408]	; 4001a744 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a5a8:	e0010820 	and	r0, r1, r0, lsr #16
4001a5ac:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001a5b0:	ebffe0c9 	bl	400128dc <CyU3PSysBarrierSync>
4001a5b4:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a5b8:	e3500000 	cmp	r0, #0
4001a5bc:	0a000007 	beq	4001a5e0 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a5c0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a5c4:	e3100008 	tst	r0, #8
4001a5c8:	0a000004 	beq	4001a5e0 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a5cc:	e28d201c 	add	r2, sp, #28
4001a5d0:	e3a01008 	mov	r1, #8
4001a5d4:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a5d8:	e1a0000a 	mov	r0, sl
4001a5dc:	e12fff33 	blx	r3
4001a5e0:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a5e4:	e1500009 	cmp	r0, r9
4001a5e8:	1affffcf 	bne	4001a52c <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001a5ec:	ea000036 	b	4001a6cc <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a5f0:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001a5f4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a5f8:	eb001f8a 	bl	40022428 <CyU3PDmaDscrGetConfig>
4001a5fc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a600:	e58d001c 	str	r0, [sp, #28]
4001a604:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a608:	e59f1134 	ldr	r1, [pc, #308]	; 4001a744 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a60c:	e0010820 	and	r0, r1, r0, lsr #16
4001a610:	e1cd02b0 	strh	r0, [sp, #32]
4001a614:	e241100f 	sub	r1, r1, #15
4001a618:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a61c:	e0000001 	and	r0, r0, r1
4001a620:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a624:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a628:	e200000f 	and	r0, r0, #15
4001a62c:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a630:	e3a00001 	mov	r0, #1
4001a634:	e58a0000 	str	r0, [sl]
4001a638:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a63c:	e3500000 	cmp	r0, #0
4001a640:	0a000002 	beq	4001a650 <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001a644:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a648:	e59d001c 	ldr	r0, [sp, #28]
4001a64c:	ebffde49 	bl	40011f78 <CyU3PSysFlushDRegion>
4001a650:	e1da00b4 	ldrh	r0, [sl, #4]
4001a654:	e3500006 	cmp	r0, #6
4001a658:	1a00000a 	bne	4001a688 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001a65c:	e28d1004 	add	r1, sp, #4
4001a660:	e1a00006 	mov	r0, r6
4001a664:	ebffe912 	bl	40014ab4 <CyU3PDmaSocketGetConfig>
4001a668:	e3a00000 	mov	r0, #0
4001a66c:	e58d0014 	str	r0, [sp, #20]
4001a670:	e59d0018 	ldr	r0, [sp, #24]
4001a674:	e3c00001 	bic	r0, r0, #1
4001a678:	e58d0018 	str	r0, [sp, #24]
4001a67c:	e28d1004 	add	r1, sp, #4
4001a680:	e1a00006 	mov	r0, r6
4001a684:	ebffe9b4 	bl	40014d5c <CyU3PDmaSocketSetConfig>
4001a688:	e3a02000 	mov	r2, #0
4001a68c:	e3a01004 	mov	r1, #4
4001a690:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a694:	ebffbda7 	bl	40009d38 <_txe_event_flags_set>
4001a698:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a69c:	ebffe08e 	bl	400128dc <CyU3PSysBarrierSync>
4001a6a0:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a6a4:	e3500000 	cmp	r0, #0
4001a6a8:	0a000007 	beq	4001a6cc <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a6ac:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a6b0:	e3100004 	tst	r0, #4
4001a6b4:	0a000004 	beq	4001a6cc <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a6b8:	e28d201c 	add	r2, sp, #28
4001a6bc:	e3a01004 	mov	r1, #4
4001a6c0:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a6c4:	e1a0000a 	mov	r0, sl
4001a6c8:	e12fff33 	blx	r3
4001a6cc:	e3150080 	tst	r5, #128	; 0x80
4001a6d0:	0a000018 	beq	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a6d4:	e1da00b4 	ldrh	r0, [sl, #4]
4001a6d8:	e3500006 	cmp	r0, #6
4001a6dc:	1a000012 	bne	4001a72c <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001a6e0:	e3a00001 	mov	r0, #1
4001a6e4:	e58a0000 	str	r0, [sl]
4001a6e8:	e3a02000 	mov	r2, #0
4001a6ec:	e3a01001 	mov	r1, #1
4001a6f0:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a6f4:	ebffbd8f 	bl	40009d38 <_txe_event_flags_set>
4001a6f8:	ebffe077 	bl	400128dc <CyU3PSysBarrierSync>
4001a6fc:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a700:	e3500000 	cmp	r0, #0
4001a704:	0a00000b 	beq	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a708:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a70c:	e3100001 	tst	r0, #1
4001a710:	0a000008 	beq	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a714:	e3a02000 	mov	r2, #0
4001a718:	e3a01001 	mov	r1, #1
4001a71c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a720:	e1a0000a 	mov	r0, sl
4001a724:	e12fff33 	blx	r3
4001a728:	ea000002 	b	4001a738 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a72c:	e3a00006 	mov	r0, #6
4001a730:	e58a0000 	str	r0, [sl]
4001a734:	ebffe068 	bl	400128dc <CyU3PSysBarrierSync>
4001a738:	e28a0078 	add	r0, sl, #120	; 0x78
4001a73c:	ebffbe4a 	bl	4000a06c <_txe_mutex_put>
4001a740:	eafffe6b 	b	4001a0f4 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001a744:	0000ffff 	.word	0x0000ffff
4001a748:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001a74c <CyU3PDmaIsSockAvlEnReqd>:
4001a74c:	e1a01000 	mov	r1, r0
4001a750:	e3a0003f 	mov	r0, #63	; 0x3f
4001a754:	e0000441 	and	r0, r0, r1, asr #8
4001a758:	e3500003 	cmp	r0, #3
4001a75c:	1a000004 	bne	4001a774 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001a760:	e3a00001 	mov	r0, #1
4001a764:	e59f203c 	ldr	r2, [pc, #60]	; 4001a7a8 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001a768:	e1d220b0 	ldrh	r2, [r2]
4001a76c:	e1120110 	tst	r2, r0, lsl r1
4001a770:	1a000008 	bne	4001a798 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001a774:	e3a0003f 	mov	r0, #63	; 0x3f
4001a778:	e0000441 	and	r0, r0, r1, asr #8
4001a77c:	e3500004 	cmp	r0, #4
4001a780:	1a000006 	bne	4001a7a0 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a784:	e3a00001 	mov	r0, #1
4001a788:	e59f201c 	ldr	r2, [pc, #28]	; 4001a7ac <CyU3PDmaIsSockAvlEnReqd+0x60>
4001a78c:	e1d220b0 	ldrh	r2, [r2]
4001a790:	e1120110 	tst	r2, r0, lsl r1
4001a794:	0a000001 	beq	4001a7a0 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a798:	e3a00001 	mov	r0, #1
4001a79c:	e12fff1e 	bx	lr
4001a7a0:	e3a00000 	mov	r0, #0
4001a7a4:	eafffffc 	b	4001a79c <CyU3PDmaIsSockAvlEnReqd+0x50>
4001a7a8:	40030d00 	.word	0x40030d00
4001a7ac:	40030d02 	.word	0x40030d02

Disassembly of section i.CyU3PDmaMsgSend:

4001a7b0 <CyU3PDmaMsgSend>:
4001a7b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a7b4:	e1a04000 	mov	r4, r0
4001a7b8:	e1a05001 	mov	r5, r1
4001a7bc:	e1a07002 	mov	r7, r2
4001a7c0:	e3570001 	cmp	r7, #1
4001a7c4:	1a000005 	bne	4001a7e0 <CyU3PDmaMsgSend+0x30>
4001a7c8:	e1a02005 	mov	r2, r5
4001a7cc:	e1a01004 	mov	r1, r4
4001a7d0:	e59f0024 	ldr	r0, [pc, #36]	; 4001a7fc <CyU3PDmaMsgSend+0x4c>
4001a7d4:	ebffbeba 	bl	4000a2c4 <_txe_queue_front_send>
4001a7d8:	e1a06000 	mov	r6, r0
4001a7dc:	ea000004 	b	4001a7f4 <CyU3PDmaMsgSend+0x44>
4001a7e0:	e1a02005 	mov	r2, r5
4001a7e4:	e1a01004 	mov	r1, r4
4001a7e8:	e59f000c 	ldr	r0, [pc, #12]	; 4001a7fc <CyU3PDmaMsgSend+0x4c>
4001a7ec:	ebffbf04 	bl	4000a404 <_txe_queue_send>
4001a7f0:	e1a06000 	mov	r6, r0
4001a7f4:	e1a00006 	mov	r0, r6
4001a7f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001a7fc:	4003192c 	.word	0x4003192c

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001a800 <CyU3PDmaMultiChannelHandleError>:
4001a800:	e92d4070 	push	{r4, r5, r6, lr}
4001a804:	e1a04000 	mov	r4, r0
4001a808:	e3e01000 	mvn	r1, #0
4001a80c:	e2840078 	add	r0, r4, #120	; 0x78
4001a810:	ebffbde0 	bl	40009f98 <_txe_mutex_get>
4001a814:	e1d400b4 	ldrh	r0, [r4, #4]
4001a818:	e3500005 	cmp	r0, #5
4001a81c:	0a000002 	beq	4001a82c <CyU3PDmaMultiChannelHandleError+0x2c>
4001a820:	e1d400b4 	ldrh	r0, [r4, #4]
4001a824:	e3500007 	cmp	r0, #7
4001a828:	1a00000d 	bne	4001a864 <CyU3PDmaMultiChannelHandleError+0x64>
4001a82c:	e3a05000 	mov	r5, #0
4001a830:	ea000005 	b	4001a84c <CyU3PDmaMultiChannelHandleError+0x4c>
4001a834:	e2841024 	add	r1, r4, #36	; 0x24
4001a838:	e0811085 	add	r1, r1, r5, lsl #1
4001a83c:	e1d100b0 	ldrh	r0, [r1]
4001a840:	ebffe883 	bl	40014a54 <CyU3PDmaSocketDisable>
4001a844:	e2850001 	add	r0, r5, #1
4001a848:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a84c:	e1d400ba 	ldrh	r0, [r4, #10]
4001a850:	e1500005 	cmp	r0, r5
4001a854:	cafffff6 	bgt	4001a834 <CyU3PDmaMultiChannelHandleError+0x34>
4001a858:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001a85c:	ebffe87c 	bl	40014a54 <CyU3PDmaSocketDisable>
4001a860:	ea00000c 	b	4001a898 <CyU3PDmaMultiChannelHandleError+0x98>
4001a864:	e3a05000 	mov	r5, #0
4001a868:	ea000005 	b	4001a884 <CyU3PDmaMultiChannelHandleError+0x84>
4001a86c:	e284102c 	add	r1, r4, #44	; 0x2c
4001a870:	e0811085 	add	r1, r1, r5, lsl #1
4001a874:	e1d100b0 	ldrh	r0, [r1]
4001a878:	ebffe875 	bl	40014a54 <CyU3PDmaSocketDisable>
4001a87c:	e2850001 	add	r0, r5, #1
4001a880:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a884:	e1d400ba 	ldrh	r0, [r4, #10]
4001a888:	e1500005 	cmp	r0, r5
4001a88c:	cafffff6 	bgt	4001a86c <CyU3PDmaMultiChannelHandleError+0x6c>
4001a890:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001a894:	ebffe86e 	bl	40014a54 <CyU3PDmaSocketDisable>
4001a898:	e3a02002 	mov	r2, #2
4001a89c:	e3e01007 	mvn	r1, #7
4001a8a0:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a8a4:	ebffbd23 	bl	40009d38 <_txe_event_flags_set>
4001a8a8:	e3a02000 	mov	r2, #0
4001a8ac:	e3a01040 	mov	r1, #64	; 0x40
4001a8b0:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a8b4:	ebffbd1f 	bl	40009d38 <_txe_event_flags_set>
4001a8b8:	e3a00005 	mov	r0, #5
4001a8bc:	e5840000 	str	r0, [r4]
4001a8c0:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001a8c4:	e3500000 	cmp	r0, #0
4001a8c8:	0a000007 	beq	4001a8ec <CyU3PDmaMultiChannelHandleError+0xec>
4001a8cc:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001a8d0:	e3100040 	tst	r0, #64	; 0x40
4001a8d4:	0a000004 	beq	4001a8ec <CyU3PDmaMultiChannelHandleError+0xec>
4001a8d8:	e3a02000 	mov	r2, #0
4001a8dc:	e3a01040 	mov	r1, #64	; 0x40
4001a8e0:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001a8e4:	e1a00004 	mov	r0, r4
4001a8e8:	e12fff33 	blx	r3
4001a8ec:	e2840078 	add	r0, r4, #120	; 0x78
4001a8f0:	ebffbddd 	bl	4000a06c <_txe_mutex_put>
4001a8f4:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001a8f8 <CyU3PDmaThreadEntry>:
4001a8f8:	e92d4070 	push	{r4, r5, r6, lr}
4001a8fc:	e24dd040 	sub	sp, sp, #64	; 0x40
4001a900:	ea00003f 	b	4001aa04 <CyU3PDmaThreadEntry+0x10c>
4001a904:	e3e02000 	mvn	r2, #0
4001a908:	e1a0100d 	mov	r1, sp
4001a90c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001aa08 <CyU3PDmaThreadEntry+0x110>
4001a910:	ebffbe93 	bl	4000a364 <_txe_queue_receive>
4001a914:	e1a05000 	mov	r5, r0
4001a918:	e3550000 	cmp	r5, #0
4001a91c:	0a000000 	beq	4001a924 <CyU3PDmaThreadEntry+0x2c>
4001a920:	ea000037 	b	4001aa04 <CyU3PDmaThreadEntry+0x10c>
4001a924:	e59d0000 	ldr	r0, [sp]
4001a928:	e20040ff 	and	r4, r0, #255	; 0xff
4001a92c:	e3540000 	cmp	r4, #0
4001a930:	0a000000 	beq	4001a938 <CyU3PDmaThreadEntry+0x40>
4001a934:	ea000032 	b	4001aa04 <CyU3PDmaThreadEntry+0x10c>
4001a938:	e59d6004 	ldr	r6, [sp, #4]
4001a93c:	e1d600b4 	ldrh	r0, [r6, #4]
4001a940:	e350000a 	cmp	r0, #10
4001a944:	308ff100 	addcc	pc, pc, r0, lsl #2
4001a948:	ea000028 	b	4001a9f0 <CyU3PDmaThreadEntry+0xf8>
4001a94c:	ea000008 	b	4001a974 <CyU3PDmaThreadEntry+0x7c>
4001a950:	ea000009 	b	4001a97c <CyU3PDmaThreadEntry+0x84>
4001a954:	ea00000e 	b	4001a994 <CyU3PDmaThreadEntry+0x9c>
4001a958:	ea00000a 	b	4001a988 <CyU3PDmaThreadEntry+0x90>
4001a95c:	ea00000b 	b	4001a990 <CyU3PDmaThreadEntry+0x98>
4001a960:	ea00000e 	b	4001a9a0 <CyU3PDmaThreadEntry+0xa8>
4001a964:	ea000012 	b	4001a9b4 <CyU3PDmaThreadEntry+0xbc>
4001a968:	ea00000e 	b	4001a9a8 <CyU3PDmaThreadEntry+0xb0>
4001a96c:	ea000012 	b	4001a9bc <CyU3PDmaThreadEntry+0xc4>
4001a970:	ea000014 	b	4001a9c8 <CyU3PDmaThreadEntry+0xd0>
4001a974:	e1a00000 	nop			; (mov r0, r0)
4001a978:	e1a00000 	nop			; (mov r0, r0)
4001a97c:	e1a0000d 	mov	r0, sp
4001a980:	ebfffa18 	bl	400191e8 <CyU3PDmaIntHandler_TypeAuto>
4001a984:	ea00001b 	b	4001a9f8 <CyU3PDmaThreadEntry+0x100>
4001a988:	e1a00000 	nop			; (mov r0, r0)
4001a98c:	e1a00000 	nop			; (mov r0, r0)
4001a990:	e1a00000 	nop			; (mov r0, r0)
4001a994:	e1a0000d 	mov	r0, sp
4001a998:	ebfffaed 	bl	40019554 <CyU3PDmaIntHandler_TypeManual>
4001a99c:	ea000015 	b	4001a9f8 <CyU3PDmaThreadEntry+0x100>
4001a9a0:	e1a00000 	nop			; (mov r0, r0)
4001a9a4:	e1a00000 	nop			; (mov r0, r0)
4001a9a8:	e1a0000d 	mov	r0, sp
4001a9ac:	ebfffc4c 	bl	40019ae4 <CyU3PDmaIntHandler_TypeManyToOne>
4001a9b0:	ea000010 	b	4001a9f8 <CyU3PDmaThreadEntry+0x100>
4001a9b4:	e1a00000 	nop			; (mov r0, r0)
4001a9b8:	e1a00000 	nop			; (mov r0, r0)
4001a9bc:	e1a0000d 	mov	r0, sp
4001a9c0:	ebfffdbf 	bl	4001a0c4 <CyU3PDmaIntHandler_TypeOneToMany>
4001a9c4:	ea00000b 	b	4001a9f8 <CyU3PDmaThreadEntry+0x100>
4001a9c8:	e1a00000 	nop			; (mov r0, r0)
4001a9cc:	e59f0038 	ldr	r0, [pc, #56]	; 4001aa0c <CyU3PDmaThreadEntry+0x114>
4001a9d0:	e5900000 	ldr	r0, [r0]
4001a9d4:	e3500000 	cmp	r0, #0
4001a9d8:	0a000003 	beq	4001a9ec <CyU3PDmaThreadEntry+0xf4>
4001a9dc:	e1a0000d 	mov	r0, sp
4001a9e0:	e59f1024 	ldr	r1, [pc, #36]	; 4001aa0c <CyU3PDmaThreadEntry+0x114>
4001a9e4:	e5911000 	ldr	r1, [r1]
4001a9e8:	e12fff31 	blx	r1
4001a9ec:	ea000001 	b	4001a9f8 <CyU3PDmaThreadEntry+0x100>
4001a9f0:	e1a00000 	nop			; (mov r0, r0)
4001a9f4:	e1a00000 	nop			; (mov r0, r0)
4001a9f8:	e1a00000 	nop			; (mov r0, r0)
4001a9fc:	ebffbf86 	bl	4000a81c <_txe_thread_relinquish>
4001aa00:	e1a00000 	nop			; (mov r0, r0)
4001aa04:	eaffffbe 	b	4001a904 <CyU3PDmaThreadEntry+0xc>
4001aa08:	4003192c 	.word	0x4003192c
4001aa0c:	40030d18 	.word	0x40030d18

Disassembly of section i.CyU3PGpifInit:

4001aa10 <CyU3PGpifInit>:
4001aa10:	e92d4010 	push	{r4, lr}
4001aa14:	e1a04000 	mov	r4, r0
4001aa18:	e3540000 	cmp	r4, #0
4001aa1c:	0a000006 	beq	4001aa3c <CyU3PGpifInit+0x2c>
4001aa20:	e59f005c 	ldr	r0, [pc, #92]	; 4001aa84 <CyU3PGpifInit+0x74>
4001aa24:	e5900000 	ldr	r0, [r0]
4001aa28:	e1a00800 	lsl	r0, r0, #16
4001aa2c:	e1a00820 	lsr	r0, r0, #16
4001aa30:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001aa34:	e59f1048 	ldr	r1, [pc, #72]	; 4001aa84 <CyU3PGpifInit+0x74>
4001aa38:	e5810000 	str	r0, [r1]
4001aa3c:	e3e00000 	mvn	r0, #0
4001aa40:	e59f1040 	ldr	r1, [pc, #64]	; 4001aa88 <CyU3PGpifInit+0x78>
4001aa44:	e5810014 	str	r0, [r1, #20]
4001aa48:	e3a00000 	mov	r0, #0
4001aa4c:	e5810018 	str	r0, [r1, #24]
4001aa50:	e3a00e11 	mov	r0, #272	; 0x110
4001aa54:	e1c11300 	bic	r1, r1, r0, lsl #6
4001aa58:	e5810008 	str	r0, [r1, #8]
4001aa5c:	ebffdf9e 	bl	400128dc <CyU3PSysBarrierSync>
4001aa60:	e59f001c 	ldr	r0, [pc, #28]	; 4001aa84 <CyU3PGpifInit+0x74>
4001aa64:	e5900000 	ldr	r0, [r0]
4001aa68:	e1a00800 	lsl	r0, r0, #16
4001aa6c:	e1a00820 	lsr	r0, r0, #16
4001aa70:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001aa74:	e59f1008 	ldr	r1, [pc, #8]	; 4001aa84 <CyU3PGpifInit+0x74>
4001aa78:	e5810000 	str	r0, [r1]
4001aa7c:	e3a00000 	mov	r0, #0
4001aa80:	e8bd8010 	pop	{r4, pc}
4001aa84:	e0010000 	.word	0xe0010000
4001aa88:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001aa8c <CyU3PPibApplicationDefine>:
4001aa8c:	e92d4010 	push	{r4, lr}
4001aa90:	e24dd020 	sub	sp, sp, #32
4001aa94:	e3a00000 	mov	r0, #0
4001aa98:	e59f10dc 	ldr	r1, [pc, #220]	; 4001ab7c <CyU3PPibApplicationDefine+0xf0>
4001aa9c:	e5810000 	str	r0, [r1]
4001aaa0:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ab80 <CyU3PPibApplicationDefine+0xf4>
4001aaa4:	e5810000 	str	r0, [r1]
4001aaa8:	e59f10d4 	ldr	r1, [pc, #212]	; 4001ab84 <CyU3PPibApplicationDefine+0xf8>
4001aaac:	e5810000 	str	r0, [r1]
4001aab0:	e59f10d0 	ldr	r1, [pc, #208]	; 4001ab88 <CyU3PPibApplicationDefine+0xfc>
4001aab4:	e5810000 	str	r0, [r1]
4001aab8:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ab8c <CyU3PPibApplicationDefine+0x100>
4001aabc:	e5810000 	str	r0, [r1]
4001aac0:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ab90 <CyU3PPibApplicationDefine+0x104>
4001aac4:	e5810000 	str	r0, [r1]
4001aac8:	e59f10c4 	ldr	r1, [pc, #196]	; 4001ab94 <CyU3PPibApplicationDefine+0x108>
4001aacc:	e5810000 	str	r0, [r1]
4001aad0:	e59f10c0 	ldr	r1, [pc, #192]	; 4001ab98 <CyU3PPibApplicationDefine+0x10c>
4001aad4:	e5810000 	str	r0, [r1]
4001aad8:	e59f10bc 	ldr	r1, [pc, #188]	; 4001ab9c <CyU3PPibApplicationDefine+0x110>
4001aadc:	e5810000 	str	r0, [r1]
4001aae0:	e3a00b01 	mov	r0, #1024	; 0x400
4001aae4:	ebffa2e2 	bl	40003674 <CyU3PMemAlloc>
4001aae8:	e1a04000 	mov	r4, r0
4001aaec:	e3a030a8 	mov	r3, #168	; 0xa8
4001aaf0:	e3a02001 	mov	r2, #1
4001aaf4:	e3a01000 	mov	r1, #0
4001aaf8:	e3a00004 	mov	r0, #4
4001aafc:	e28dc00c 	add	ip, sp, #12
4001ab00:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001ab04:	e3a02b01 	mov	r2, #1024	; 0x400
4001ab08:	e1a03001 	mov	r3, r1
4001ab0c:	e58d2004 	str	r2, [sp, #4]
4001ab10:	e59f2088 	ldr	r2, [pc, #136]	; 4001aba0 <CyU3PPibApplicationDefine+0x114>
4001ab14:	e28f1088 	add	r1, pc, #136	; 0x88
4001ab18:	e58d0008 	str	r0, [sp, #8]
4001ab1c:	e59f0090 	ldr	r0, [pc, #144]	; 4001abb4 <CyU3PPibApplicationDefine+0x128>
4001ab20:	e58d4000 	str	r4, [sp]
4001ab24:	ebffbe5e 	bl	4000a4a4 <_txe_thread_create>
4001ab28:	e3a02028 	mov	r2, #40	; 0x28
4001ab2c:	e3a01000 	mov	r1, #0
4001ab30:	e59f0080 	ldr	r0, [pc, #128]	; 4001abb8 <CyU3PPibApplicationDefine+0x12c>
4001ab34:	ebffbbdf 	bl	40009ab8 <_txe_event_flags_create>
4001ab38:	e3a02000 	mov	r2, #0
4001ab3c:	e3a01010 	mov	r1, #16
4001ab40:	e59f0070 	ldr	r0, [pc, #112]	; 4001abb8 <CyU3PPibApplicationDefine+0x12c>
4001ab44:	ebffbc7b 	bl	40009d38 <_txe_event_flags_set>
4001ab48:	e3a00040 	mov	r0, #64	; 0x40
4001ab4c:	ebffa2c8 	bl	40003674 <CyU3PMemAlloc>
4001ab50:	e1a04000 	mov	r4, r0
4001ab54:	e3a0303c 	mov	r3, #60	; 0x3c
4001ab58:	e3a02040 	mov	r2, #64	; 0x40
4001ab5c:	e1cd20f0 	strd	r2, [sp]
4001ab60:	e1a03004 	mov	r3, r4
4001ab64:	e3a02001 	mov	r2, #1
4001ab68:	e3a01000 	mov	r1, #0
4001ab6c:	e59f0048 	ldr	r0, [pc, #72]	; 4001abbc <CyU3PPibApplicationDefine+0x130>
4001ab70:	ebffbd65 	bl	4000a10c <_txe_queue_create>
4001ab74:	e28dd020 	add	sp, sp, #32
4001ab78:	e8bd8010 	pop	{r4, pc}
4001ab7c:	40030d1c 	.word	0x40030d1c
4001ab80:	40030d20 	.word	0x40030d20
4001ab84:	40030d28 	.word	0x40030d28
4001ab88:	40030d40 	.word	0x40030d40
4001ab8c:	40030d34 	.word	0x40030d34
4001ab90:	40030d38 	.word	0x40030d38
4001ab94:	40030d2c 	.word	0x40030d2c
4001ab98:	40030d30 	.word	0x40030d30
4001ab9c:	40030d24 	.word	0x40030d24
4001aba0:	4001ad74 	.word	0x4001ad74
4001aba4:	505f3330 	.word	0x505f3330
4001aba8:	545f4249 	.word	0x545f4249
4001abac:	41455248 	.word	0x41455248
4001abb0:	00000044 	.word	0x00000044
4001abb4:	40031990 	.word	0x40031990
4001abb8:	40031968 	.word	0x40031968
4001abbc:	40031a38 	.word	0x40031a38

Disassembly of section i.CyU3PPibInit:

4001abc0 <CyU3PPibInit>:
4001abc0:	e92d4070 	push	{r4, r5, r6, lr}
4001abc4:	e1a04000 	mov	r4, r0
4001abc8:	e1a05001 	mov	r5, r1
4001abcc:	e3a06000 	mov	r6, #0
4001abd0:	ebffe724 	bl	40014868 <CyFx3DevIsGpifSupported>
4001abd4:	e3500000 	cmp	r0, #0
4001abd8:	1a000001 	bne	4001abe4 <CyU3PPibInit+0x24>
4001abdc:	e3a00046 	mov	r0, #70	; 0x46
4001abe0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001abe4:	e59f0128 	ldr	r0, [pc, #296]	; 4001ad14 <CyU3PPibInit+0x154>
4001abe8:	e5900000 	ldr	r0, [r0]
4001abec:	e3500000 	cmp	r0, #0
4001abf0:	0a000001 	beq	4001abfc <CyU3PPibInit+0x3c>
4001abf4:	e3a00043 	mov	r0, #67	; 0x43
4001abf8:	eafffff8 	b	4001abe0 <CyU3PPibInit+0x20>
4001abfc:	e3550000 	cmp	r5, #0
4001ac00:	1a000001 	bne	4001ac0c <CyU3PPibInit+0x4c>
4001ac04:	e3a00041 	mov	r0, #65	; 0x41
4001ac08:	eafffff4 	b	4001abe0 <CyU3PPibInit+0x20>
4001ac0c:	e5d5000c 	ldrb	r0, [r5, #12]
4001ac10:	e3500004 	cmp	r0, #4
4001ac14:	ba000001 	blt	4001ac20 <CyU3PPibInit+0x60>
4001ac18:	e3a00040 	mov	r0, #64	; 0x40
4001ac1c:	eaffffef 	b	4001abe0 <CyU3PPibInit+0x20>
4001ac20:	e1d500b0 	ldrh	r0, [r5]
4001ac24:	e3500002 	cmp	r0, #2
4001ac28:	ba000002 	blt	4001ac38 <CyU3PPibInit+0x78>
4001ac2c:	e1d500b0 	ldrh	r0, [r5]
4001ac30:	e3500b01 	cmp	r0, #1024	; 0x400
4001ac34:	da000001 	ble	4001ac40 <CyU3PPibInit+0x80>
4001ac38:	e3a00040 	mov	r0, #64	; 0x40
4001ac3c:	eaffffe7 	b	4001abe0 <CyU3PPibInit+0x20>
4001ac40:	e3a00001 	mov	r0, #1
4001ac44:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ad14 <CyU3PPibInit+0x154>
4001ac48:	e5810000 	str	r0, [r1]
4001ac4c:	e5d5000c 	ldrb	r0, [r5, #12]
4001ac50:	e3a01b06 	mov	r1, #6144	; 0x1800
4001ac54:	e0010580 	and	r0, r1, r0, lsl #11
4001ac58:	e1d510b0 	ldrh	r1, [r5]
4001ac5c:	e2411001 	sub	r1, r1, #1
4001ac60:	e1a01b01 	lsl	r1, r1, #22
4001ac64:	e1a01b21 	lsr	r1, r1, #22
4001ac68:	e1800001 	orr	r0, r0, r1
4001ac6c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001ad18 <CyU3PPibInit+0x158>
4001ac70:	e581000c 	str	r0, [r1, #12]
4001ac74:	e5950004 	ldr	r0, [r5, #4]
4001ac78:	e3500000 	cmp	r0, #0
4001ac7c:	0a000003 	beq	4001ac90 <CyU3PPibInit+0xd0>
4001ac80:	e1a00001 	mov	r0, r1
4001ac84:	e590000c 	ldr	r0, [r0, #12]
4001ac88:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ac8c:	e581000c 	str	r0, [r1, #12]
4001ac90:	e59f0080 	ldr	r0, [pc, #128]	; 4001ad18 <CyU3PPibInit+0x158>
4001ac94:	e590000c 	ldr	r0, [r0, #12]
4001ac98:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ac9c:	e59f1074 	ldr	r1, [pc, #116]	; 4001ad18 <CyU3PPibInit+0x158>
4001aca0:	e581000c 	str	r0, [r1, #12]
4001aca4:	ebffe755 	bl	40014a00 <CyFx3PibPowerOn>
4001aca8:	e5950008 	ldr	r0, [r5, #8]
4001acac:	e3500000 	cmp	r0, #0
4001acb0:	0a000000 	beq	4001acb8 <CyU3PPibInit+0xf8>
4001acb4:	ebffe732 	bl	40014984 <CyFx3PibDllEnable>
4001acb8:	e59f005c 	ldr	r0, [pc, #92]	; 4001ad1c <CyU3PPibInit+0x15c>
4001acbc:	e5900000 	ldr	r0, [r0]
4001acc0:	e3500000 	cmp	r0, #0
4001acc4:	0a000003 	beq	4001acd8 <CyU3PPibInit+0x118>
4001acc8:	e1a00004 	mov	r0, r4
4001accc:	eb0000d4 	bl	4001b024 <CyU3PPmmcInit>
4001acd0:	e1a06000 	mov	r6, r0
4001acd4:	ea000002 	b	4001ace4 <CyU3PPibInit+0x124>
4001acd8:	e1a00004 	mov	r0, r4
4001acdc:	ebffff4b 	bl	4001aa10 <CyU3PGpifInit>
4001ace0:	e1a06000 	mov	r6, r0
4001ace4:	e3e00000 	mvn	r0, #0
4001ace8:	e59f1030 	ldr	r1, [pc, #48]	; 4001ad20 <CyU3PPibInit+0x160>
4001acec:	e5810024 	str	r0, [r1, #36]	; 0x24
4001acf0:	e3560000 	cmp	r6, #0
4001acf4:	1a000004 	bne	4001ad0c <CyU3PPibInit+0x14c>
4001acf8:	eb000009 	bl	4001ad24 <CyU3PPibSocketInit>
4001acfc:	e3a00007 	mov	r0, #7
4001ad00:	eb001c4a 	bl	40021e30 <CyU3PVicEnableInt>
4001ad04:	e3a00006 	mov	r0, #6
4001ad08:	eb001c48 	bl	40021e30 <CyU3PVicEnableInt>
4001ad0c:	e1a00006 	mov	r0, r6
4001ad10:	eaffffb2 	b	4001abe0 <CyU3PPibInit+0x20>
4001ad14:	40030d1c 	.word	0x40030d1c
4001ad18:	e0052000 	.word	0xe0052000
4001ad1c:	40030d20 	.word	0x40030d20
4001ad20:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001ad24 <CyU3PPibSocketInit>:
4001ad24:	e3a00000 	mov	r0, #0
4001ad28:	ea00000d 	b	4001ad64 <CyU3PPibSocketInit+0x40>
4001ad2c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001ad30:	e59f2038 	ldr	r2, [pc, #56]	; 4001ad70 <CyU3PPibSocketInit+0x4c>
4001ad34:	e0822380 	add	r2, r2, r0, lsl #7
4001ad38:	e582100c 	str	r1, [r2, #12]
4001ad3c:	e3e01000 	mvn	r1, #0
4001ad40:	e59f2028 	ldr	r2, [pc, #40]	; 4001ad70 <CyU3PPibSocketInit+0x4c>
4001ad44:	e0822380 	add	r2, r2, r0, lsl #7
4001ad48:	e5821010 	str	r1, [r2, #16]
4001ad4c:	e3a01000 	mov	r1, #0
4001ad50:	e59f2018 	ldr	r2, [pc, #24]	; 4001ad70 <CyU3PPibSocketInit+0x4c>
4001ad54:	e0822380 	add	r2, r2, r0, lsl #7
4001ad58:	e5821014 	str	r1, [r2, #20]
4001ad5c:	e2801001 	add	r1, r0, #1
4001ad60:	e20100ff 	and	r0, r1, #255	; 0xff
4001ad64:	e3500020 	cmp	r0, #32
4001ad68:	baffffef 	blt	4001ad2c <CyU3PPibSocketInit+0x8>
4001ad6c:	e12fff1e 	bx	lr
4001ad70:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001ad74 <CyU3PPibThreadEntry>:
4001ad74:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001ad78:	e3a00005 	mov	r0, #5
4001ad7c:	ebffe25e 	bl	400136fc <CyU3PSysModuleInitCompleteEvt>
4001ad80:	e59f0278 	ldr	r0, [pc, #632]	; 4001b000 <CyU3PPibThreadEntry+0x28c>
4001ad84:	e5900000 	ldr	r0, [r0]
4001ad88:	e1a00800 	lsl	r0, r0, #16
4001ad8c:	e1a00820 	lsr	r0, r0, #16
4001ad90:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001ad94:	e59f1264 	ldr	r1, [pc, #612]	; 4001b000 <CyU3PPibThreadEntry+0x28c>
4001ad98:	e5810000 	str	r0, [r1]
4001ad9c:	e3a000e1 	mov	r0, #225	; 0xe1
4001ada0:	e59f125c 	ldr	r1, [pc, #604]	; 4001b004 <CyU3PPibThreadEntry+0x290>
4001ada4:	e5810000 	str	r0, [r1]
4001ada8:	ea000093 	b	4001affc <CyU3PPibThreadEntry+0x288>
4001adac:	e3e03000 	mvn	r3, #0
4001adb0:	e58d3000 	str	r3, [sp]
4001adb4:	e28d3008 	add	r3, sp, #8
4001adb8:	e3a02001 	mov	r2, #1
4001adbc:	e59f0240 	ldr	r0, [pc, #576]	; 4001b004 <CyU3PPibThreadEntry+0x290>
4001adc0:	e5901000 	ldr	r1, [r0]
4001adc4:	e59f023c 	ldr	r0, [pc, #572]	; 4001b008 <CyU3PPibThreadEntry+0x294>
4001adc8:	ebffbbaa 	bl	40009c78 <_txe_event_flags_get>
4001adcc:	e1a04000 	mov	r4, r0
4001add0:	e59f122c 	ldr	r1, [pc, #556]	; 4001b004 <CyU3PPibThreadEntry+0x290>
4001add4:	e59d0008 	ldr	r0, [sp, #8]
4001add8:	e5911000 	ldr	r1, [r1]
4001addc:	e0000001 	and	r0, r0, r1
4001ade0:	e58d0008 	str	r0, [sp, #8]
4001ade4:	e3540000 	cmp	r4, #0
4001ade8:	0a000000 	beq	4001adf0 <CyU3PPibThreadEntry+0x7c>
4001adec:	ea000082 	b	4001affc <CyU3PPibThreadEntry+0x288>
4001adf0:	ea00007d 	b	4001afec <CyU3PPibThreadEntry+0x278>
4001adf4:	e59d0008 	ldr	r0, [sp, #8]
4001adf8:	e3100020 	tst	r0, #32
4001adfc:	0a000017 	beq	4001ae60 <CyU3PPibThreadEntry+0xec>
4001ae00:	e59f0204 	ldr	r0, [pc, #516]	; 4001b00c <CyU3PPibThreadEntry+0x298>
4001ae04:	e5900000 	ldr	r0, [r0]
4001ae08:	e3500000 	cmp	r0, #0
4001ae0c:	0a00000b 	beq	4001ae40 <CyU3PPibThreadEntry+0xcc>
4001ae10:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b010 <CyU3PPibThreadEntry+0x29c>
4001ae14:	e5900000 	ldr	r0, [r0]
4001ae18:	e3100002 	tst	r0, #2
4001ae1c:	0a000007 	beq	4001ae40 <CyU3PPibThreadEntry+0xcc>
4001ae20:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b014 <CyU3PPibThreadEntry+0x2a0>
4001ae24:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001ae28:	e1a01800 	lsl	r1, r0, #16
4001ae2c:	e1a01821 	lsr	r1, r1, #16
4001ae30:	e3a00002 	mov	r0, #2
4001ae34:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b00c <CyU3PPibThreadEntry+0x298>
4001ae38:	e5922000 	ldr	r2, [r2]
4001ae3c:	e12fff32 	blx	r2
4001ae40:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b000 <CyU3PPibThreadEntry+0x28c>
4001ae44:	e5900000 	ldr	r0, [r0]
4001ae48:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001ae4c:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b000 <CyU3PPibThreadEntry+0x28c>
4001ae50:	e5810000 	str	r0, [r1]
4001ae54:	e59d0008 	ldr	r0, [sp, #8]
4001ae58:	e3c00020 	bic	r0, r0, #32
4001ae5c:	e58d0008 	str	r0, [sp, #8]
4001ae60:	e59d0008 	ldr	r0, [sp, #8]
4001ae64:	e3100040 	tst	r0, #64	; 0x40
4001ae68:	0a000027 	beq	4001af0c <CyU3PPibThreadEntry+0x198>
4001ae6c:	e59f0198 	ldr	r0, [pc, #408]	; 4001b00c <CyU3PPibThreadEntry+0x298>
4001ae70:	e5900000 	ldr	r0, [r0]
4001ae74:	e3500000 	cmp	r0, #0
4001ae78:	0a000017 	beq	4001aedc <CyU3PPibThreadEntry+0x168>
4001ae7c:	e59f018c 	ldr	r0, [pc, #396]	; 4001b010 <CyU3PPibThreadEntry+0x29c>
4001ae80:	e5900000 	ldr	r0, [r0]
4001ae84:	e3100004 	tst	r0, #4
4001ae88:	0a000013 	beq	4001aedc <CyU3PPibThreadEntry+0x168>
4001ae8c:	e59f016c 	ldr	r0, [pc, #364]	; 4001b000 <CyU3PPibThreadEntry+0x28c>
4001ae90:	e5900020 	ldr	r0, [r0, #32]
4001ae94:	e1a05800 	lsl	r5, r0, #16
4001ae98:	e1a05825 	lsr	r5, r5, #16
4001ae9c:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001aea0:	e3500a02 	cmp	r0, #8192	; 0x2000
4001aea4:	1a000000 	bne	4001aeac <CyU3PPibThreadEntry+0x138>
4001aea8:	e3a05a02 	mov	r5, #8192	; 0x2000
4001aeac:	e59f0164 	ldr	r0, [pc, #356]	; 4001b018 <CyU3PPibThreadEntry+0x2a4>
4001aeb0:	e5900000 	ldr	r0, [r0]
4001aeb4:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001aeb8:	1a000001 	bne	4001aec4 <CyU3PPibThreadEntry+0x150>
4001aebc:	e3550004 	cmp	r5, #4
4001aec0:	da000004 	ble	4001aed8 <CyU3PPibThreadEntry+0x164>
4001aec4:	e1a01005 	mov	r1, r5
4001aec8:	e3a00004 	mov	r0, #4
4001aecc:	e59f2138 	ldr	r2, [pc, #312]	; 4001b00c <CyU3PPibThreadEntry+0x298>
4001aed0:	e5922000 	ldr	r2, [r2]
4001aed4:	e12fff32 	blx	r2
4001aed8:	e1a00000 	nop			; (mov r0, r0)
4001aedc:	e59f012c 	ldr	r0, [pc, #300]	; 4001b010 <CyU3PPibThreadEntry+0x29c>
4001aee0:	e5900000 	ldr	r0, [r0]
4001aee4:	e3100004 	tst	r0, #4
4001aee8:	0a000004 	beq	4001af00 <CyU3PPibThreadEntry+0x18c>
4001aeec:	e59f010c 	ldr	r0, [pc, #268]	; 4001b000 <CyU3PPibThreadEntry+0x28c>
4001aef0:	e5900008 	ldr	r0, [r0, #8]
4001aef4:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001aef8:	e59f1100 	ldr	r1, [pc, #256]	; 4001b000 <CyU3PPibThreadEntry+0x28c>
4001aefc:	e5810008 	str	r0, [r1, #8]
4001af00:	e59d0008 	ldr	r0, [sp, #8]
4001af04:	e3c00040 	bic	r0, r0, #64	; 0x40
4001af08:	e58d0008 	str	r0, [sp, #8]
4001af0c:	e59d0008 	ldr	r0, [sp, #8]
4001af10:	e3100080 	tst	r0, #128	; 0x80
4001af14:	0a000011 	beq	4001af60 <CyU3PPibThreadEntry+0x1ec>
4001af18:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b00c <CyU3PPibThreadEntry+0x298>
4001af1c:	e5900000 	ldr	r0, [r0]
4001af20:	e3500000 	cmp	r0, #0
4001af24:	0a00000a 	beq	4001af54 <CyU3PPibThreadEntry+0x1e0>
4001af28:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b010 <CyU3PPibThreadEntry+0x29c>
4001af2c:	e5900000 	ldr	r0, [r0]
4001af30:	e3100001 	tst	r0, #1
4001af34:	0a000006 	beq	4001af54 <CyU3PPibThreadEntry+0x1e0>
4001af38:	ebffe6ab 	bl	400149ec <CyFx3PibGetDllStatus>
4001af3c:	e1a05000 	mov	r5, r0
4001af40:	e1a01000 	mov	r1, r0
4001af44:	e3a00001 	mov	r0, #1
4001af48:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b00c <CyU3PPibThreadEntry+0x298>
4001af4c:	e5922000 	ldr	r2, [r2]
4001af50:	e12fff32 	blx	r2
4001af54:	e59d0008 	ldr	r0, [sp, #8]
4001af58:	e3c00080 	bic	r0, r0, #128	; 0x80
4001af5c:	e58d0008 	str	r0, [sp, #8]
4001af60:	e59d0008 	ldr	r0, [sp, #8]
4001af64:	e3100001 	tst	r0, #1
4001af68:	0a00001f 	beq	4001afec <CyU3PPibThreadEntry+0x278>
4001af6c:	e3a02000 	mov	r2, #0
4001af70:	e28d1004 	add	r1, sp, #4
4001af74:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b01c <CyU3PPibThreadEntry+0x2a8>
4001af78:	ebffbcf9 	bl	4000a364 <_txe_queue_receive>
4001af7c:	e1a04000 	mov	r4, r0
4001af80:	e3540000 	cmp	r4, #0
4001af84:	1a000015 	bne	4001afe0 <CyU3PPibThreadEntry+0x26c>
4001af88:	e1dd00b4 	ldrh	r0, [sp, #4]
4001af8c:	e2000901 	and	r0, r0, #16384	; 0x4000
4001af90:	e1b00720 	lsrs	r0, r0, #14
4001af94:	0a000014 	beq	4001afec <CyU3PPibThreadEntry+0x278>
4001af98:	e1dd00b4 	ldrh	r0, [sp, #4]
4001af9c:	e20000ff 	and	r0, r0, #255	; 0xff
4001afa0:	e3500004 	cmp	r0, #4
4001afa4:	1a00000a 	bne	4001afd4 <CyU3PPibThreadEntry+0x260>
4001afa8:	e59f0070 	ldr	r0, [pc, #112]	; 4001b020 <CyU3PPibThreadEntry+0x2ac>
4001afac:	e5900000 	ldr	r0, [r0]
4001afb0:	e3500000 	cmp	r0, #0
4001afb4:	0a000005 	beq	4001afd0 <CyU3PPibThreadEntry+0x25c>
4001afb8:	e1dd20b6 	ldrh	r2, [sp, #6]
4001afbc:	e1a01442 	asr	r1, r2, #8
4001afc0:	e20200ff 	and	r0, r2, #255	; 0xff
4001afc4:	e59f2054 	ldr	r2, [pc, #84]	; 4001b020 <CyU3PPibThreadEntry+0x2ac>
4001afc8:	e5922000 	ldr	r2, [r2]
4001afcc:	e12fff32 	blx	r2
4001afd0:	ea000001 	b	4001afdc <CyU3PPibThreadEntry+0x268>
4001afd4:	e1a00000 	nop			; (mov r0, r0)
4001afd8:	e1a00000 	nop			; (mov r0, r0)
4001afdc:	ea000002 	b	4001afec <CyU3PPibThreadEntry+0x278>
4001afe0:	e59d0008 	ldr	r0, [sp, #8]
4001afe4:	e3c00001 	bic	r0, r0, #1
4001afe8:	e58d0008 	str	r0, [sp, #8]
4001afec:	e59d0008 	ldr	r0, [sp, #8]
4001aff0:	e3500000 	cmp	r0, #0
4001aff4:	1affff7e 	bne	4001adf4 <CyU3PPibThreadEntry+0x80>
4001aff8:	e1a00000 	nop			; (mov r0, r0)
4001affc:	eaffff6a 	b	4001adac <CyU3PPibThreadEntry+0x38>
4001b000:	e0010000 	.word	0xe0010000
4001b004:	40030d28 	.word	0x40030d28
4001b008:	40031968 	.word	0x40031968
4001b00c:	40030d2c 	.word	0x40030d2c
4001b010:	40030d30 	.word	0x40030d30
4001b014:	e0017000 	.word	0xe0017000
4001b018:	e0014000 	.word	0xe0014000
4001b01c:	40031a38 	.word	0x40031a38
4001b020:	40030d34 	.word	0x40030d34

Disassembly of section i.CyU3PPmmcInit:

4001b024 <CyU3PPmmcInit>:
4001b024:	e92d4010 	push	{r4, lr}
4001b028:	e1a04000 	mov	r4, r0
4001b02c:	e3540000 	cmp	r4, #0
4001b030:	0a000042 	beq	4001b140 <CyU3PPmmcInit+0x11c>
4001b034:	e3e00000 	mvn	r0, #0
4001b038:	e59f1148 	ldr	r1, [pc, #328]	; 4001b188 <CyU3PPmmcInit+0x164>
4001b03c:	e581000c 	str	r0, [r1, #12]
4001b040:	e3a00000 	mov	r0, #0
4001b044:	e5810010 	str	r0, [r1, #16]
4001b048:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b04c:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b050:	e3a00000 	mov	r0, #0
4001b054:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b058:	e5810008 	str	r0, [r1, #8]
4001b05c:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b060:	e5900000 	ldr	r0, [r0]
4001b064:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b068:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b06c:	e5810000 	str	r0, [r1]
4001b070:	e59f0114 	ldr	r0, [pc, #276]	; 4001b18c <CyU3PPmmcInit+0x168>
4001b074:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b078:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b07c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b080:	e3a00001 	mov	r0, #1
4001b084:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b088:	e59f0100 	ldr	r0, [pc, #256]	; 4001b190 <CyU3PPmmcInit+0x16c>
4001b08c:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b090:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b194 <CyU3PPmmcInit+0x170>
4001b094:	e5900000 	ldr	r0, [r0]
4001b098:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b09c:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b194 <CyU3PPmmcInit+0x170>
4001b0a0:	e5900004 	ldr	r0, [r0, #4]
4001b0a4:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b0a8:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b194 <CyU3PPmmcInit+0x170>
4001b0ac:	e5900008 	ldr	r0, [r0, #8]
4001b0b0:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b0b4:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b194 <CyU3PPmmcInit+0x170>
4001b0b8:	e590000c 	ldr	r0, [r0, #12]
4001b0bc:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b0c0:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b198 <CyU3PPmmcInit+0x174>
4001b0c4:	e5900000 	ldr	r0, [r0]
4001b0c8:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b0cc:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b198 <CyU3PPmmcInit+0x174>
4001b0d0:	e5900004 	ldr	r0, [r0, #4]
4001b0d4:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b0d8:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b198 <CyU3PPmmcInit+0x174>
4001b0dc:	e5900008 	ldr	r0, [r0, #8]
4001b0e0:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b0e4:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b198 <CyU3PPmmcInit+0x174>
4001b0e8:	e590000c 	ldr	r0, [r0, #12]
4001b0ec:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b0f0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b198 <CyU3PPmmcInit+0x174>
4001b0f4:	e5900010 	ldr	r0, [r0, #16]
4001b0f8:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b0fc:	e59f0094 	ldr	r0, [pc, #148]	; 4001b198 <CyU3PPmmcInit+0x174>
4001b100:	e5900014 	ldr	r0, [r0, #20]
4001b104:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b108:	e59f008c 	ldr	r0, [pc, #140]	; 4001b19c <CyU3PPmmcInit+0x178>
4001b10c:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b110:	e3a00000 	mov	r0, #0
4001b114:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b118:	e3a00c02 	mov	r0, #512	; 0x200
4001b11c:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b120:	e3a00000 	mov	r0, #0
4001b124:	e5810004 	str	r0, [r1, #4]
4001b128:	e59f0070 	ldr	r0, [pc, #112]	; 4001b1a0 <CyU3PPmmcInit+0x17c>
4001b12c:	e5810010 	str	r0, [r1, #16]
4001b130:	e3a00008 	mov	r0, #8
4001b134:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b138:	e5810008 	str	r0, [r1, #8]
4001b13c:	ea000002 	b	4001b14c <CyU3PPmmcInit+0x128>
4001b140:	e3a00000 	mov	r0, #0
4001b144:	e59f103c 	ldr	r1, [pc, #60]	; 4001b188 <CyU3PPmmcInit+0x164>
4001b148:	e5810010 	str	r0, [r1, #16]
4001b14c:	e59f0034 	ldr	r0, [pc, #52]	; 4001b188 <CyU3PPmmcInit+0x164>
4001b150:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b154:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b158:	e59f1028 	ldr	r1, [pc, #40]	; 4001b188 <CyU3PPmmcInit+0x164>
4001b15c:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b160:	ebffdddd 	bl	400128dc <CyU3PSysBarrierSync>
4001b164:	e59f0038 	ldr	r0, [pc, #56]	; 4001b1a4 <CyU3PPmmcInit+0x180>
4001b168:	e5900000 	ldr	r0, [r0]
4001b16c:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b170:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b174:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b178:	e59f1024 	ldr	r1, [pc, #36]	; 4001b1a4 <CyU3PPmmcInit+0x180>
4001b17c:	e5810000 	str	r0, [r1]
4001b180:	e3a00000 	mov	r0, #0
4001b184:	e8bd8010 	pop	{r4, pc}
4001b188:	e0011000 	.word	0xe0011000
4001b18c:	00019201 	.word	0x00019201
4001b190:	04010302 	.word	0x04010302
4001b194:	40011c0c 	.word	0x40011c0c
4001b198:	40011c1c 	.word	0x40011c1c
4001b19c:	00ff8080 	.word	0x00ff8080
4001b1a0:	400a00fb 	.word	0x400a00fb
4001b1a4:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b1a8 <CyU3PMboxReset>:
4001b1a8:	e92d4010 	push	{r4, lr}
4001b1ac:	e3a00002 	mov	r0, #2
4001b1b0:	e59f1028 	ldr	r1, [pc, #40]	; 4001b1e0 <CyU3PMboxReset+0x38>
4001b1b4:	e5810004 	str	r0, [r1, #4]
4001b1b8:	e3a02002 	mov	r2, #2
4001b1bc:	e3a01010 	mov	r1, #16
4001b1c0:	e59f001c 	ldr	r0, [pc, #28]	; 4001b1e4 <CyU3PMboxReset+0x3c>
4001b1c4:	ebffbadb 	bl	40009d38 <_txe_event_flags_set>
4001b1c8:	e59f0010 	ldr	r0, [pc, #16]	; 4001b1e0 <CyU3PMboxReset+0x38>
4001b1cc:	e5900008 	ldr	r0, [r0, #8]
4001b1d0:	e3800003 	orr	r0, r0, #3
4001b1d4:	e59f1004 	ldr	r1, [pc, #4]	; 4001b1e0 <CyU3PMboxReset+0x38>
4001b1d8:	e5810008 	str	r0, [r1, #8]
4001b1dc:	e8bd8010 	pop	{r4, pc}
4001b1e0:	e0010000 	.word	0xe0010000
4001b1e4:	40031968 	.word	0x40031968

Disassembly of section i.CyU3PGpifConfigure:

4001b1e8 <CyU3PGpifConfigure>:
4001b1e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b1ec:	e1a04000 	mov	r4, r0
4001b1f0:	e1a05001 	mov	r5, r1
4001b1f4:	e59f609c 	ldr	r6, [pc, #156]	; 4001b298 <CyU3PGpifConfigure+0xb0>
4001b1f8:	e3540000 	cmp	r4, #0
4001b1fc:	0a000001 	beq	4001b208 <CyU3PGpifConfigure+0x20>
4001b200:	e3550000 	cmp	r5, #0
4001b204:	1a000001 	bne	4001b210 <CyU3PGpifConfigure+0x28>
4001b208:	e3a00040 	mov	r0, #64	; 0x40
4001b20c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b210:	ebffe585 	bl	4001482c <CyFx3DevIsGpifConfigurable>
4001b214:	e3500000 	cmp	r0, #0
4001b218:	1a000001 	bne	4001b224 <CyU3PGpifConfigure+0x3c>
4001b21c:	e3a00046 	mov	r0, #70	; 0x46
4001b220:	eafffff9 	b	4001b20c <CyU3PGpifConfigure+0x24>
4001b224:	ebffe576 	bl	40014804 <CyFx3DevIsGpif32Supported>
4001b228:	e3500000 	cmp	r0, #0
4001b22c:	1a000007 	bne	4001b250 <CyU3PGpifConfigure+0x68>
4001b230:	e3540001 	cmp	r4, #1
4001b234:	da000005 	ble	4001b250 <CyU3PGpifConfigure+0x68>
4001b238:	e5950004 	ldr	r0, [r5, #4]
4001b23c:	e200000c 	and	r0, r0, #12
4001b240:	e3500004 	cmp	r0, #4
4001b244:	9a000001 	bls	4001b250 <CyU3PGpifConfigure+0x68>
4001b248:	e3a00046 	mov	r0, #70	; 0x46
4001b24c:	eaffffee 	b	4001b20c <CyU3PGpifConfigure+0x24>
4001b250:	e59f0044 	ldr	r0, [pc, #68]	; 4001b29c <CyU3PGpifConfigure+0xb4>
4001b254:	e5900000 	ldr	r0, [r0]
4001b258:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b25c:	0a000001 	beq	4001b268 <CyU3PGpifConfigure+0x80>
4001b260:	e3a00043 	mov	r0, #67	; 0x43
4001b264:	eaffffe8 	b	4001b20c <CyU3PGpifConfigure+0x24>
4001b268:	e3a07001 	mov	r7, #1
4001b26c:	ea000002 	b	4001b27c <CyU3PGpifConfigure+0x94>
4001b270:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b274:	e4860004 	str	r0, [r6], #4
4001b278:	e2877001 	add	r7, r7, #1
4001b27c:	e1570004 	cmp	r7, r4
4001b280:	bafffffa 	blt	4001b270 <CyU3PGpifConfigure+0x88>
4001b284:	e5950000 	ldr	r0, [r5]
4001b288:	e59f100c 	ldr	r1, [pc, #12]	; 4001b29c <CyU3PGpifConfigure+0xb4>
4001b28c:	e5810000 	str	r0, [r1]
4001b290:	e3a00000 	mov	r0, #0
4001b294:	eaffffdc 	b	4001b20c <CyU3PGpifConfigure+0x24>
4001b298:	e0014004 	.word	0xe0014004
4001b29c:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b2a0 <CyU3PGpifDisable>:
4001b2a0:	e92d4070 	push	{r4, r5, r6, lr}
4001b2a4:	e1a04000 	mov	r4, r0
4001b2a8:	e59f0070 	ldr	r0, [pc, #112]	; 4001b320 <CyU3PGpifDisable+0x80>
4001b2ac:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b2b0:	e3800002 	orr	r0, r0, #2
4001b2b4:	e59f1064 	ldr	r1, [pc, #100]	; 4001b320 <CyU3PGpifDisable+0x80>
4001b2b8:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b2bc:	e3a0000a 	mov	r0, #10
4001b2c0:	ebffe057 	bl	40013424 <CyU3PBusyWait>
4001b2c4:	e3a00000 	mov	r0, #0
4001b2c8:	e59f1050 	ldr	r1, [pc, #80]	; 4001b320 <CyU3PGpifDisable+0x80>
4001b2cc:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b2d0:	e3540000 	cmp	r4, #0
4001b2d4:	0a000010 	beq	4001b31c <CyU3PGpifDisable+0x7c>
4001b2d8:	e3a00e22 	mov	r0, #544	; 0x220
4001b2dc:	e5810000 	str	r0, [r1]
4001b2e0:	e3a05000 	mov	r5, #0
4001b2e4:	ea000007 	b	4001b308 <CyU3PGpifDisable+0x68>
4001b2e8:	e3a00000 	mov	r0, #0
4001b2ec:	e59f1030 	ldr	r1, [pc, #48]	; 4001b324 <CyU3PGpifDisable+0x84>
4001b2f0:	e0811205 	add	r1, r1, r5, lsl #4
4001b2f4:	e5810008 	str	r0, [r1, #8]
4001b2f8:	e59f1028 	ldr	r1, [pc, #40]	; 4001b328 <CyU3PGpifDisable+0x88>
4001b2fc:	e0811205 	add	r1, r1, r5, lsl #4
4001b300:	e5810008 	str	r0, [r1, #8]
4001b304:	e2855001 	add	r5, r5, #1
4001b308:	e3550c01 	cmp	r5, #256	; 0x100
4001b30c:	3afffff5 	bcc	4001b2e8 <CyU3PGpifDisable+0x48>
4001b310:	e59f1014 	ldr	r1, [pc, #20]	; 4001b32c <CyU3PGpifDisable+0x8c>
4001b314:	e3a0004c 	mov	r0, #76	; 0x4c
4001b318:	ebffffb2 	bl	4001b1e8 <CyU3PGpifConfigure>
4001b31c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b320:	e0014000 	.word	0xe0014000
4001b324:	e0015000 	.word	0xe0015000
4001b328:	e0016000 	.word	0xe0016000
4001b32c:	40011c34 	.word	0x40011c34

Disassembly of section i.CyU3PGpifLoad:

4001b330 <CyU3PGpifLoad>:
4001b330:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b334:	e1a04000 	mov	r4, r0
4001b338:	e59f7264 	ldr	r7, [pc, #612]	; 4001b5a4 <CyU3PGpifLoad+0x274>
4001b33c:	e3540000 	cmp	r4, #0
4001b340:	0a000008 	beq	4001b368 <CyU3PGpifLoad+0x38>
4001b344:	e1d400b0 	ldrh	r0, [r4]
4001b348:	e3500000 	cmp	r0, #0
4001b34c:	1a000007 	bne	4001b370 <CyU3PGpifLoad+0x40>
4001b350:	e1d400bc 	ldrh	r0, [r4, #12]
4001b354:	e3500000 	cmp	r0, #0
4001b358:	1a000004 	bne	4001b370 <CyU3PGpifLoad+0x40>
4001b35c:	e1d401b4 	ldrh	r0, [r4, #20]
4001b360:	e3500000 	cmp	r0, #0
4001b364:	1a000001 	bne	4001b370 <CyU3PGpifLoad+0x40>
4001b368:	e3a00040 	mov	r0, #64	; 0x40
4001b36c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b370:	e59f0230 	ldr	r0, [pc, #560]	; 4001b5a8 <CyU3PGpifLoad+0x278>
4001b374:	e5900000 	ldr	r0, [r0]
4001b378:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b37c:	1a000003 	bne	4001b390 <CyU3PGpifLoad+0x60>
4001b380:	e59f0220 	ldr	r0, [pc, #544]	; 4001b5a8 <CyU3PGpifLoad+0x278>
4001b384:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b388:	e3100001 	tst	r0, #1
4001b38c:	0a000001 	beq	4001b398 <CyU3PGpifLoad+0x68>
4001b390:	e3a00043 	mov	r0, #67	; 0x43
4001b394:	eafffff4 	b	4001b36c <CyU3PGpifLoad+0x3c>
4001b398:	ebffe523 	bl	4001482c <CyFx3DevIsGpifConfigurable>
4001b39c:	e3500000 	cmp	r0, #0
4001b3a0:	1a000001 	bne	4001b3ac <CyU3PGpifLoad+0x7c>
4001b3a4:	e3a00046 	mov	r0, #70	; 0x46
4001b3a8:	eaffffef 	b	4001b36c <CyU3PGpifLoad+0x3c>
4001b3ac:	ebffe514 	bl	40014804 <CyFx3DevIsGpif32Supported>
4001b3b0:	e3500000 	cmp	r0, #0
4001b3b4:	1a00000c 	bne	4001b3ec <CyU3PGpifLoad+0xbc>
4001b3b8:	e1d401b4 	ldrh	r0, [r4, #20]
4001b3bc:	e3500002 	cmp	r0, #2
4001b3c0:	ba000009 	blt	4001b3ec <CyU3PGpifLoad+0xbc>
4001b3c4:	e5940018 	ldr	r0, [r4, #24]
4001b3c8:	e3500000 	cmp	r0, #0
4001b3cc:	0a000006 	beq	4001b3ec <CyU3PGpifLoad+0xbc>
4001b3d0:	e5940018 	ldr	r0, [r4, #24]
4001b3d4:	e5900004 	ldr	r0, [r0, #4]
4001b3d8:	e200000c 	and	r0, r0, #12
4001b3dc:	e3500004 	cmp	r0, #4
4001b3e0:	9a000001 	bls	4001b3ec <CyU3PGpifLoad+0xbc>
4001b3e4:	e3a00046 	mov	r0, #70	; 0x46
4001b3e8:	eaffffdf 	b	4001b36c <CyU3PGpifLoad+0x3c>
4001b3ec:	e1d400b0 	ldrh	r0, [r4]
4001b3f0:	e3500000 	cmp	r0, #0
4001b3f4:	0a00003b 	beq	4001b4e8 <CyU3PGpifLoad+0x1b8>
4001b3f8:	e5940004 	ldr	r0, [r4, #4]
4001b3fc:	e3500000 	cmp	r0, #0
4001b400:	1a000001 	bne	4001b40c <CyU3PGpifLoad+0xdc>
4001b404:	e3a00040 	mov	r0, #64	; 0x40
4001b408:	eaffffd7 	b	4001b36c <CyU3PGpifLoad+0x3c>
4001b40c:	e3a05000 	mov	r5, #0
4001b410:	ea000031 	b	4001b4dc <CyU3PGpifLoad+0x1ac>
4001b414:	e5940008 	ldr	r0, [r4, #8]
4001b418:	e3500000 	cmp	r0, #0
4001b41c:	0a000002 	beq	4001b42c <CyU3PGpifLoad+0xfc>
4001b420:	e5940008 	ldr	r0, [r4, #8]
4001b424:	e7d00005 	ldrb	r0, [r0, r5]
4001b428:	ea000000 	b	4001b430 <CyU3PGpifLoad+0x100>
4001b42c:	e1a00005 	mov	r0, r5
4001b430:	e1a06800 	lsl	r6, r0, #16
4001b434:	e1a06826 	lsr	r6, r6, #16
4001b438:	e0861086 	add	r1, r6, r6, lsl #1
4001b43c:	e5940004 	ldr	r0, [r4, #4]
4001b440:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b444:	e59f1160 	ldr	r1, [pc, #352]	; 4001b5ac <CyU3PGpifLoad+0x27c>
4001b448:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b44c:	e0861086 	add	r1, r6, r6, lsl #1
4001b450:	e5940004 	ldr	r0, [r4, #4]
4001b454:	e0800181 	add	r0, r0, r1, lsl #3
4001b458:	e5900004 	ldr	r0, [r0, #4]
4001b45c:	e59f1148 	ldr	r1, [pc, #328]	; 4001b5ac <CyU3PGpifLoad+0x27c>
4001b460:	e0811205 	add	r1, r1, r5, lsl #4
4001b464:	e5810004 	str	r0, [r1, #4]
4001b468:	e0861086 	add	r1, r6, r6, lsl #1
4001b46c:	e5940004 	ldr	r0, [r4, #4]
4001b470:	e0800181 	add	r0, r0, r1, lsl #3
4001b474:	e5900008 	ldr	r0, [r0, #8]
4001b478:	e59f112c 	ldr	r1, [pc, #300]	; 4001b5ac <CyU3PGpifLoad+0x27c>
4001b47c:	e0811205 	add	r1, r1, r5, lsl #4
4001b480:	e5810008 	str	r0, [r1, #8]
4001b484:	e0861086 	add	r1, r6, r6, lsl #1
4001b488:	e5940004 	ldr	r0, [r4, #4]
4001b48c:	e0800181 	add	r0, r0, r1, lsl #3
4001b490:	e590000c 	ldr	r0, [r0, #12]
4001b494:	e59f1114 	ldr	r1, [pc, #276]	; 4001b5b0 <CyU3PGpifLoad+0x280>
4001b498:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b49c:	e0861086 	add	r1, r6, r6, lsl #1
4001b4a0:	e5940004 	ldr	r0, [r4, #4]
4001b4a4:	e0800181 	add	r0, r0, r1, lsl #3
4001b4a8:	e5900010 	ldr	r0, [r0, #16]
4001b4ac:	e59f10fc 	ldr	r1, [pc, #252]	; 4001b5b0 <CyU3PGpifLoad+0x280>
4001b4b0:	e0811205 	add	r1, r1, r5, lsl #4
4001b4b4:	e5810004 	str	r0, [r1, #4]
4001b4b8:	e0861086 	add	r1, r6, r6, lsl #1
4001b4bc:	e5940004 	ldr	r0, [r4, #4]
4001b4c0:	e0800181 	add	r0, r0, r1, lsl #3
4001b4c4:	e5900014 	ldr	r0, [r0, #20]
4001b4c8:	e59f10e0 	ldr	r1, [pc, #224]	; 4001b5b0 <CyU3PGpifLoad+0x280>
4001b4cc:	e0811205 	add	r1, r1, r5, lsl #4
4001b4d0:	e5810008 	str	r0, [r1, #8]
4001b4d4:	e2850001 	add	r0, r5, #1
4001b4d8:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b4dc:	e1d400b0 	ldrh	r0, [r4]
4001b4e0:	e1500005 	cmp	r0, r5
4001b4e4:	caffffca 	bgt	4001b414 <CyU3PGpifLoad+0xe4>
4001b4e8:	e1d400bc 	ldrh	r0, [r4, #12]
4001b4ec:	e3500000 	cmp	r0, #0
4001b4f0:	0a000013 	beq	4001b544 <CyU3PGpifLoad+0x214>
4001b4f4:	e5940010 	ldr	r0, [r4, #16]
4001b4f8:	e3500000 	cmp	r0, #0
4001b4fc:	0a000002 	beq	4001b50c <CyU3PGpifLoad+0x1dc>
4001b500:	e1d400bc 	ldrh	r0, [r4, #12]
4001b504:	e3500020 	cmp	r0, #32
4001b508:	da000001 	ble	4001b514 <CyU3PGpifLoad+0x1e4>
4001b50c:	e3a00040 	mov	r0, #64	; 0x40
4001b510:	eaffff95 	b	4001b36c <CyU3PGpifLoad+0x3c>
4001b514:	e3a05000 	mov	r5, #0
4001b518:	ea000006 	b	4001b538 <CyU3PGpifLoad+0x208>
4001b51c:	e5940010 	ldr	r0, [r4, #16]
4001b520:	e0800085 	add	r0, r0, r5, lsl #1
4001b524:	e1d000b0 	ldrh	r0, [r0]
4001b528:	e59f1084 	ldr	r1, [pc, #132]	; 4001b5b4 <CyU3PGpifLoad+0x284>
4001b52c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b530:	e2850001 	add	r0, r5, #1
4001b534:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b538:	e1d400bc 	ldrh	r0, [r4, #12]
4001b53c:	e1500005 	cmp	r0, r5
4001b540:	cafffff5 	bgt	4001b51c <CyU3PGpifLoad+0x1ec>
4001b544:	e1d401b4 	ldrh	r0, [r4, #20]
4001b548:	e3500000 	cmp	r0, #0
4001b54c:	0a000012 	beq	4001b59c <CyU3PGpifLoad+0x26c>
4001b550:	e5940018 	ldr	r0, [r4, #24]
4001b554:	e3500000 	cmp	r0, #0
4001b558:	1a000001 	bne	4001b564 <CyU3PGpifLoad+0x234>
4001b55c:	e3a00040 	mov	r0, #64	; 0x40
4001b560:	eaffff81 	b	4001b36c <CyU3PGpifLoad+0x3c>
4001b564:	e3a05001 	mov	r5, #1
4001b568:	ea000004 	b	4001b580 <CyU3PGpifLoad+0x250>
4001b56c:	e5940018 	ldr	r0, [r4, #24]
4001b570:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b574:	e4870004 	str	r0, [r7], #4
4001b578:	e2850001 	add	r0, r5, #1
4001b57c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b580:	e1d401b4 	ldrh	r0, [r4, #20]
4001b584:	e1500005 	cmp	r0, r5
4001b588:	cafffff7 	bgt	4001b56c <CyU3PGpifLoad+0x23c>
4001b58c:	e5940018 	ldr	r0, [r4, #24]
4001b590:	e5900000 	ldr	r0, [r0]
4001b594:	e59f100c 	ldr	r1, [pc, #12]	; 4001b5a8 <CyU3PGpifLoad+0x278>
4001b598:	e5810000 	str	r0, [r1]
4001b59c:	e3a00000 	mov	r0, #0
4001b5a0:	eaffff71 	b	4001b36c <CyU3PGpifLoad+0x3c>
4001b5a4:	e0014004 	.word	0xe0014004
4001b5a8:	e0014000 	.word	0xe0014000
4001b5ac:	e0015000 	.word	0xe0015000
4001b5b0:	e0016000 	.word	0xe0016000
4001b5b4:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001b5b8 <CyU3PGpifRegisterCallback>:
4001b5b8:	e59f1004 	ldr	r1, [pc, #4]	; 4001b5c4 <CyU3PGpifRegisterCallback+0xc>
4001b5bc:	e5810000 	str	r0, [r1]
4001b5c0:	e12fff1e 	bx	lr
4001b5c4:	40030d34 	.word	0x40030d34

Disassembly of section i.CyU3PGpifSMStart:

4001b5c8 <CyU3PGpifSMStart>:
4001b5c8:	e92d4010 	push	{r4, lr}
4001b5cc:	e1a02000 	mov	r2, r0
4001b5d0:	e59f012c 	ldr	r0, [pc, #300]	; 4001b704 <CyU3PGpifSMStart+0x13c>
4001b5d4:	e5900000 	ldr	r0, [r0]
4001b5d8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b5dc:	0a000004 	beq	4001b5f4 <CyU3PGpifSMStart+0x2c>
4001b5e0:	e59f0120 	ldr	r0, [pc, #288]	; 4001b708 <CyU3PGpifSMStart+0x140>
4001b5e4:	e0800202 	add	r0, r0, r2, lsl #4
4001b5e8:	e5900008 	ldr	r0, [r0, #8]
4001b5ec:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b5f0:	1a000001 	bne	4001b5fc <CyU3PGpifSMStart+0x34>
4001b5f4:	e3a00044 	mov	r0, #68	; 0x44
4001b5f8:	e8bd8010 	pop	{r4, pc}
4001b5fc:	e59f0100 	ldr	r0, [pc, #256]	; 4001b704 <CyU3PGpifSMStart+0x13c>
4001b600:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b604:	e3100001 	tst	r0, #1
4001b608:	0a000001 	beq	4001b614 <CyU3PGpifSMStart+0x4c>
4001b60c:	e3a00043 	mov	r0, #67	; 0x43
4001b610:	eafffff8 	b	4001b5f8 <CyU3PGpifSMStart+0x30>
4001b614:	e59f00e8 	ldr	r0, [pc, #232]	; 4001b704 <CyU3PGpifSMStart+0x13c>
4001b618:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b61c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b620:	e1800801 	orr	r0, r0, r1, lsl #16
4001b624:	e3800001 	orr	r0, r0, #1
4001b628:	e59f40d4 	ldr	r4, [pc, #212]	; 4001b704 <CyU3PGpifSMStart+0x13c>
4001b62c:	e5840118 	str	r0, [r4, #280]	; 0x118
4001b630:	e1a00004 	mov	r0, r4
4001b634:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001b638:	e59f00cc 	ldr	r0, [pc, #204]	; 4001b70c <CyU3PGpifSMStart+0x144>
4001b63c:	e000000e 	and	r0, r0, lr
4001b640:	e180e802 	orr	lr, r0, r2, lsl #16
4001b644:	e1a00004 	mov	r0, r4
4001b648:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001b64c:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001b650:	e3800005 	orr	r0, r0, #5
4001b654:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b658:	e1a00004 	mov	r0, r4
4001b65c:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001b660:	e5900008 	ldr	r0, [r0, #8]
4001b664:	e2003007 	and	r3, r0, #7
4001b668:	e3530001 	cmp	r3, #1
4001b66c:	0a000004 	beq	4001b684 <CyU3PGpifSMStart+0xbc>
4001b670:	e3530002 	cmp	r3, #2
4001b674:	0a00000b 	beq	4001b6a8 <CyU3PGpifSMStart+0xe0>
4001b678:	e3530003 	cmp	r3, #3
4001b67c:	1a00001b 	bne	4001b6f0 <CyU3PGpifSMStart+0x128>
4001b680:	ea000011 	b	4001b6cc <CyU3PGpifSMStart+0x104>
4001b684:	e1a00000 	nop			; (mov r0, r0)
4001b688:	e59f0080 	ldr	r0, [pc, #128]	; 4001b710 <CyU3PGpifSMStart+0x148>
4001b68c:	e1ce0000 	bic	r0, lr, r0
4001b690:	e3800005 	orr	r0, r0, #5
4001b694:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001b698:	e1800424 	orr	r0, r0, r4, lsr #8
4001b69c:	e59f4060 	ldr	r4, [pc, #96]	; 4001b704 <CyU3PGpifSMStart+0x13c>
4001b6a0:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6a4:	ea000013 	b	4001b6f8 <CyU3PGpifSMStart+0x130>
4001b6a8:	e1a00000 	nop			; (mov r0, r0)
4001b6ac:	e59f0060 	ldr	r0, [pc, #96]	; 4001b714 <CyU3PGpifSMStart+0x14c>
4001b6b0:	e1ce0000 	bic	r0, lr, r0
4001b6b4:	e3800005 	orr	r0, r0, #5
4001b6b8:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001b6bc:	e1800424 	orr	r0, r0, r4, lsr #8
4001b6c0:	e59f403c 	ldr	r4, [pc, #60]	; 4001b704 <CyU3PGpifSMStart+0x13c>
4001b6c4:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6c8:	ea00000a 	b	4001b6f8 <CyU3PGpifSMStart+0x130>
4001b6cc:	e1a00000 	nop			; (mov r0, r0)
4001b6d0:	e59f0040 	ldr	r0, [pc, #64]	; 4001b718 <CyU3PGpifSMStart+0x150>
4001b6d4:	e1ce0000 	bic	r0, lr, r0
4001b6d8:	e3800005 	orr	r0, r0, #5
4001b6dc:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001b6e0:	e1800424 	orr	r0, r0, r4, lsr #8
4001b6e4:	e59f4018 	ldr	r4, [pc, #24]	; 4001b704 <CyU3PGpifSMStart+0x13c>
4001b6e8:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6ec:	ea000001 	b	4001b6f8 <CyU3PGpifSMStart+0x130>
4001b6f0:	e1a00000 	nop			; (mov r0, r0)
4001b6f4:	e1a00000 	nop			; (mov r0, r0)
4001b6f8:	e1a00000 	nop			; (mov r0, r0)
4001b6fc:	e3a00000 	mov	r0, #0
4001b700:	eaffffbc 	b	4001b5f8 <CyU3PGpifSMStart+0x30>
4001b704:	e0014000 	.word	0xe0014000
4001b708:	e0015000 	.word	0xe0015000
4001b70c:	ff00003a 	.word	0xff00003a
4001b710:	0080ffc5 	.word	0x0080ffc5
4001b714:	00c0ffc5 	.word	0x00c0ffc5
4001b718:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001b71c <CyU3PGpifSMSwitch>:
4001b71c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b720:	e1a0c000 	mov	ip, r0
4001b724:	e59de018 	ldr	lr, [sp, #24]
4001b728:	e3a04000 	mov	r4, #0
4001b72c:	e3510c01 	cmp	r1, #256	; 0x100
4001b730:	ba000001 	blt	4001b73c <CyU3PGpifSMSwitch+0x20>
4001b734:	e3a00040 	mov	r0, #64	; 0x40
4001b738:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b73c:	e59f0150 	ldr	r0, [pc, #336]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b740:	e5900000 	ldr	r0, [r0]
4001b744:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b748:	1a000001 	bne	4001b754 <CyU3PGpifSMSwitch+0x38>
4001b74c:	e3a00044 	mov	r0, #68	; 0x44
4001b750:	eafffff8 	b	4001b738 <CyU3PGpifSMSwitch+0x1c>
4001b754:	e59f0138 	ldr	r0, [pc, #312]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b758:	e5900008 	ldr	r0, [r0, #8]
4001b75c:	e2006007 	and	r6, r0, #7
4001b760:	e59f012c 	ldr	r0, [pc, #300]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b764:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b768:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b76c:	e1800803 	orr	r0, r0, r3, lsl #16
4001b770:	e3800001 	orr	r0, r0, #1
4001b774:	e59f8118 	ldr	r8, [pc, #280]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b778:	e5880118 	str	r0, [r8, #280]	; 0x118
4001b77c:	e3a00001 	mov	r0, #1
4001b780:	e1804801 	orr	r4, r0, r1, lsl #16
4001b784:	e35c0c01 	cmp	ip, #256	; 0x100
4001b788:	aa000012 	bge	4001b7d8 <CyU3PGpifSMSwitch+0xbc>
4001b78c:	e1c80000 	bic	r0, r8, r0
4001b790:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b794:	e1a05c20 	lsr	r5, r0, #24
4001b798:	e59f00f8 	ldr	r0, [pc, #248]	; 4001b898 <CyU3PGpifSMSwitch+0x17c>
4001b79c:	e7d00006 	ldrb	r0, [r0, r6]
4001b7a0:	e0000005 	and	r0, r0, r5
4001b7a4:	e59f80ec 	ldr	r8, [pc, #236]	; 4001b898 <CyU3PGpifSMSwitch+0x17c>
4001b7a8:	e7d88006 	ldrb	r8, [r8, r6]
4001b7ac:	e008800c 	and	r8, r8, ip
4001b7b0:	e1500008 	cmp	r0, r8
4001b7b4:	1a000001 	bne	4001b7c0 <CyU3PGpifSMSwitch+0xa4>
4001b7b8:	e3844004 	orr	r4, r4, #4
4001b7bc:	ea000006 	b	4001b7dc <CyU3PGpifSMSwitch+0xc0>
4001b7c0:	e3a00008 	mov	r0, #8
4001b7c4:	e180040c 	orr	r0, r0, ip, lsl #8
4001b7c8:	e1844000 	orr	r4, r4, r0
4001b7cc:	e59f00c0 	ldr	r0, [pc, #192]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b7d0:	e580e120 	str	lr, [r0, #288]	; 0x120
4001b7d4:	ea000000 	b	4001b7dc <CyU3PGpifSMSwitch+0xc0>
4001b7d8:	e3844004 	orr	r4, r4, #4
4001b7dc:	e3520c01 	cmp	r2, #256	; 0x100
4001b7e0:	aa000007 	bge	4001b804 <CyU3PGpifSMSwitch+0xe8>
4001b7e4:	e3a00002 	mov	r0, #2
4001b7e8:	e1800c02 	orr	r0, r0, r2, lsl #24
4001b7ec:	e1844000 	orr	r4, r4, r0
4001b7f0:	e59f009c 	ldr	r0, [pc, #156]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b7f4:	e5900018 	ldr	r0, [r0, #24]
4001b7f8:	e3800001 	orr	r0, r0, #1
4001b7fc:	e59f8090 	ldr	r8, [pc, #144]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b800:	e5880018 	str	r0, [r8, #24]
4001b804:	e59f0088 	ldr	r0, [pc, #136]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b808:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001b80c:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001b810:	e3560001 	cmp	r6, #1
4001b814:	0a000004 	beq	4001b82c <CyU3PGpifSMSwitch+0x110>
4001b818:	e3560002 	cmp	r6, #2
4001b81c:	0a000009 	beq	4001b848 <CyU3PGpifSMSwitch+0x12c>
4001b820:	e3560003 	cmp	r6, #3
4001b824:	1a000015 	bne	4001b880 <CyU3PGpifSMSwitch+0x164>
4001b828:	ea00000d 	b	4001b864 <CyU3PGpifSMSwitch+0x148>
4001b82c:	e1a00000 	nop			; (mov r0, r0)
4001b830:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001b834:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001b838:	e1800428 	orr	r0, r0, r8, lsr #8
4001b83c:	e59f8050 	ldr	r8, [pc, #80]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b840:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b844:	ea00000f 	b	4001b888 <CyU3PGpifSMSwitch+0x16c>
4001b848:	e1a00000 	nop			; (mov r0, r0)
4001b84c:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001b850:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001b854:	e1800428 	orr	r0, r0, r8, lsr #8
4001b858:	e59f8034 	ldr	r8, [pc, #52]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b85c:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b860:	ea000008 	b	4001b888 <CyU3PGpifSMSwitch+0x16c>
4001b864:	e1a00000 	nop			; (mov r0, r0)
4001b868:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001b86c:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001b870:	e1800428 	orr	r0, r0, r8, lsr #8
4001b874:	e59f8018 	ldr	r8, [pc, #24]	; 4001b894 <CyU3PGpifSMSwitch+0x178>
4001b878:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b87c:	ea000001 	b	4001b888 <CyU3PGpifSMSwitch+0x16c>
4001b880:	e1a00000 	nop			; (mov r0, r0)
4001b884:	e1a00000 	nop			; (mov r0, r0)
4001b888:	e1a00000 	nop			; (mov r0, r0)
4001b88c:	e3a00000 	mov	r0, #0
4001b890:	eaffffa8 	b	4001b738 <CyU3PGpifSMSwitch+0x1c>
4001b894:	e0014000 	.word	0xe0014000
4001b898:	40011d64 	.word	0x40011d64

Disassembly of section i.CyU3PConnectState:

4001b89c <CyU3PConnectState>:
4001b89c:	e92d4070 	push	{r4, r5, r6, lr}
4001b8a0:	e1a04000 	mov	r4, r0
4001b8a4:	e1a06001 	mov	r6, r1
4001b8a8:	e59f0234 	ldr	r0, [pc, #564]	; 4001bae4 <CyU3PConnectState+0x248>
4001b8ac:	e5d00008 	ldrb	r0, [r0, #8]
4001b8b0:	e3500000 	cmp	r0, #0
4001b8b4:	1a000001 	bne	4001b8c0 <CyU3PConnectState+0x24>
4001b8b8:	e3a00042 	mov	r0, #66	; 0x42
4001b8bc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b8c0:	ebffe41a 	bl	40014930 <CyFx3DevIsUsb3Supported>
4001b8c4:	e3500000 	cmp	r0, #0
4001b8c8:	1a000000 	bne	4001b8d0 <CyU3PConnectState+0x34>
4001b8cc:	e3a06000 	mov	r6, #0
4001b8d0:	e3a05000 	mov	r5, #0
4001b8d4:	e3e01000 	mvn	r1, #0
4001b8d8:	e59f0208 	ldr	r0, [pc, #520]	; 4001bae8 <CyU3PConnectState+0x24c>
4001b8dc:	ebffb9ad 	bl	40009f98 <_txe_mutex_get>
4001b8e0:	e3540000 	cmp	r4, #0
4001b8e4:	1a00001a 	bne	4001b954 <CyU3PConnectState+0xb8>
4001b8e8:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bae4 <CyU3PConnectState+0x248>
4001b8ec:	e5d00008 	ldrb	r0, [r0, #8]
4001b8f0:	e3500004 	cmp	r0, #4
4001b8f4:	ba000012 	blt	4001b944 <CyU3PConnectState+0xa8>
4001b8f8:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bae4 <CyU3PConnectState+0x248>
4001b8fc:	e5d00008 	ldrb	r0, [r0, #8]
4001b900:	e3500005 	cmp	r0, #5
4001b904:	ba000008 	blt	4001b92c <CyU3PConnectState+0x90>
4001b908:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bae4 <CyU3PConnectState+0x248>
4001b90c:	e5d11009 	ldrb	r1, [r1, #9]
4001b910:	e3510003 	cmp	r1, #3
4001b914:	1a000001 	bne	4001b920 <CyU3PConnectState+0x84>
4001b918:	e3a01001 	mov	r1, #1
4001b91c:	ea000000 	b	4001b924 <CyU3PConnectState+0x88>
4001b920:	e3a01000 	mov	r1, #0
4001b924:	e1a00001 	mov	r0, r1
4001b928:	eb00050f 	bl	4001cd6c <CyU3PUsbPhyDisable>
4001b92c:	e3a00003 	mov	r0, #3
4001b930:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bae4 <CyU3PConnectState+0x248>
4001b934:	e5c10008 	strb	r0, [r1, #8]
4001b938:	e3a00000 	mov	r0, #0
4001b93c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001b940:	e5810058 	str	r0, [r1, #88]	; 0x58
4001b944:	e3a00000 	mov	r0, #0
4001b948:	e59f1194 	ldr	r1, [pc, #404]	; 4001bae4 <CyU3PConnectState+0x248>
4001b94c:	e5810044 	str	r0, [r1, #68]	; 0x44
4001b950:	ea00005f 	b	4001bad4 <CyU3PConnectState+0x238>
4001b954:	e59f0188 	ldr	r0, [pc, #392]	; 4001bae4 <CyU3PConnectState+0x248>
4001b958:	e5d00008 	ldrb	r0, [r0, #8]
4001b95c:	e3500003 	cmp	r0, #3
4001b960:	0a00000b 	beq	4001b994 <CyU3PConnectState+0xf8>
4001b964:	e3500004 	cmp	r0, #4
4001b968:	0a000004 	beq	4001b980 <CyU3PConnectState+0xe4>
4001b96c:	e3500005 	cmp	r0, #5
4001b970:	0a000004 	beq	4001b988 <CyU3PConnectState+0xec>
4001b974:	e3500006 	cmp	r0, #6
4001b978:	1a000051 	bne	4001bac4 <CyU3PConnectState+0x228>
4001b97c:	ea000002 	b	4001b98c <CyU3PConnectState+0xf0>
4001b980:	e1a00000 	nop			; (mov r0, r0)
4001b984:	e1a00000 	nop			; (mov r0, r0)
4001b988:	e1a00000 	nop			; (mov r0, r0)
4001b98c:	e3a05043 	mov	r5, #67	; 0x43
4001b990:	ea00004e 	b	4001bad0 <CyU3PConnectState+0x234>
4001b994:	e1a00000 	nop			; (mov r0, r0)
4001b998:	e59f0144 	ldr	r0, [pc, #324]	; 4001bae4 <CyU3PConnectState+0x248>
4001b99c:	e5d00007 	ldrb	r0, [r0, #7]
4001b9a0:	e3500001 	cmp	r0, #1
4001b9a4:	0a00000f 	beq	4001b9e8 <CyU3PConnectState+0x14c>
4001b9a8:	e59f013c 	ldr	r0, [pc, #316]	; 4001baec <CyU3PConnectState+0x250>
4001b9ac:	e590001c 	ldr	r0, [r0, #28]
4001b9b0:	e3500000 	cmp	r0, #0
4001b9b4:	0a000007 	beq	4001b9d8 <CyU3PConnectState+0x13c>
4001b9b8:	e59f012c 	ldr	r0, [pc, #300]	; 4001baec <CyU3PConnectState+0x250>
4001b9bc:	e5900014 	ldr	r0, [r0, #20]
4001b9c0:	e3500000 	cmp	r0, #0
4001b9c4:	0a000003 	beq	4001b9d8 <CyU3PConnectState+0x13c>
4001b9c8:	e59f011c 	ldr	r0, [pc, #284]	; 4001baec <CyU3PConnectState+0x250>
4001b9cc:	e5900018 	ldr	r0, [r0, #24]
4001b9d0:	e3500000 	cmp	r0, #0
4001b9d4:	1a000003 	bne	4001b9e8 <CyU3PConnectState+0x14c>
4001b9d8:	e59f0108 	ldr	r0, [pc, #264]	; 4001bae8 <CyU3PConnectState+0x24c>
4001b9dc:	ebffb9a2 	bl	4000a06c <_txe_mutex_put>
4001b9e0:	e3a00044 	mov	r0, #68	; 0x44
4001b9e4:	eaffffb4 	b	4001b8bc <CyU3PConnectState+0x20>
4001b9e8:	e3560000 	cmp	r6, #0
4001b9ec:	0a000007 	beq	4001ba10 <CyU3PConnectState+0x174>
4001b9f0:	e3a00000 	mov	r0, #0
4001b9f4:	e59f10f4 	ldr	r1, [pc, #244]	; 4001baf0 <CyU3PConnectState+0x254>
4001b9f8:	e5810014 	str	r0, [r1, #20]
4001b9fc:	e59f10f0 	ldr	r1, [pc, #240]	; 4001baf4 <CyU3PConnectState+0x258>
4001ba00:	e5810000 	str	r0, [r1]
4001ba04:	e59f10ec 	ldr	r1, [pc, #236]	; 4001baf8 <CyU3PConnectState+0x25c>
4001ba08:	e5810000 	str	r0, [r1]
4001ba0c:	ea000007 	b	4001ba30 <CyU3PConnectState+0x194>
4001ba10:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bae4 <CyU3PConnectState+0x248>
4001ba14:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001ba18:	e3500000 	cmp	r0, #0
4001ba1c:	0a000003 	beq	4001ba30 <CyU3PConnectState+0x194>
4001ba20:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bae8 <CyU3PConnectState+0x24c>
4001ba24:	ebffb990 	bl	4000a06c <_txe_mutex_put>
4001ba28:	e3a000ff 	mov	r0, #255	; 0xff
4001ba2c:	eaffffa2 	b	4001b8bc <CyU3PConnectState+0x20>
4001ba30:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bae4 <CyU3PConnectState+0x248>
4001ba34:	e5806024 	str	r6, [r0, #36]	; 0x24
4001ba38:	e3a00000 	mov	r0, #0
4001ba3c:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bae4 <CyU3PConnectState+0x248>
4001ba40:	e5810058 	str	r0, [r1, #88]	; 0x58
4001ba44:	e2810000 	add	r0, r1, #0
4001ba48:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ba4c:	e3500000 	cmp	r0, #0
4001ba50:	0a000004 	beq	4001ba68 <CyU3PConnectState+0x1cc>
4001ba54:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bafc <CyU3PConnectState+0x260>
4001ba58:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ba5c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001ba60:	e1100001 	tst	r0, r1
4001ba64:	0a000012 	beq	4001bab4 <CyU3PConnectState+0x218>
4001ba68:	e3560000 	cmp	r6, #0
4001ba6c:	0a000007 	beq	4001ba90 <CyU3PConnectState+0x1f4>
4001ba70:	e3a00000 	mov	r0, #0
4001ba74:	e59f1068 	ldr	r1, [pc, #104]	; 4001bae4 <CyU3PConnectState+0x248>
4001ba78:	e5810054 	str	r0, [r1, #84]	; 0x54
4001ba7c:	e3a00001 	mov	r0, #1
4001ba80:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001ba84:	e3a00000 	mov	r0, #0
4001ba88:	e5810050 	str	r0, [r1, #80]	; 0x50
4001ba8c:	ea000002 	b	4001ba9c <CyU3PConnectState+0x200>
4001ba90:	e3a00000 	mov	r0, #0
4001ba94:	e59f1048 	ldr	r1, [pc, #72]	; 4001bae4 <CyU3PConnectState+0x248>
4001ba98:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001ba9c:	e1a00006 	mov	r0, r6
4001baa0:	eb000527 	bl	4001cf44 <CyU3PUsbPhyEnable>
4001baa4:	e3a00005 	mov	r0, #5
4001baa8:	e59f1034 	ldr	r1, [pc, #52]	; 4001bae4 <CyU3PConnectState+0x248>
4001baac:	e5c10008 	strb	r0, [r1, #8]
4001bab0:	ea000002 	b	4001bac0 <CyU3PConnectState+0x224>
4001bab4:	e3a00004 	mov	r0, #4
4001bab8:	e59f1024 	ldr	r1, [pc, #36]	; 4001bae4 <CyU3PConnectState+0x248>
4001babc:	e5c10008 	strb	r0, [r1, #8]
4001bac0:	ea000002 	b	4001bad0 <CyU3PConnectState+0x234>
4001bac4:	e1a00000 	nop			; (mov r0, r0)
4001bac8:	e3a05044 	mov	r5, #68	; 0x44
4001bacc:	e1a00000 	nop			; (mov r0, r0)
4001bad0:	e1a00000 	nop			; (mov r0, r0)
4001bad4:	e59f000c 	ldr	r0, [pc, #12]	; 4001bae8 <CyU3PConnectState+0x24c>
4001bad8:	ebffb963 	bl	4000a06c <_txe_mutex_put>
4001badc:	e1a00005 	mov	r0, r5
4001bae0:	eaffff75 	b	4001b8bc <CyU3PConnectState+0x20>
4001bae4:	40031d40 	.word	0x40031d40
4001bae8:	40031ee0 	.word	0x40031ee0
4001baec:	40031f98 	.word	0x40031f98
4001baf0:	e0033000 	.word	0xe0033000
4001baf4:	40030d88 	.word	0x40030d88
4001baf8:	40030d8c 	.word	0x40030d8c
4001bafc:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bb00 <CyU3POtgGetMode>:
4001bb00:	e59f0004 	ldr	r0, [pc, #4]	; 4001bb0c <CyU3POtgGetMode+0xc>
4001bb04:	e5d00000 	ldrb	r0, [r0]
4001bb08:	e12fff1e 	bx	lr
4001bb0c:	40030d58 	.word	0x40030d58

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bb10 <CyU3POtgIsDeviceMode>:
4001bb10:	e3a01000 	mov	r1, #0
4001bb14:	e59f00b4 	ldr	r0, [pc, #180]	; 4001bbd0 <CyU3POtgIsDeviceMode+0xc0>
4001bb18:	e5d00000 	ldrb	r0, [r0]
4001bb1c:	e3500000 	cmp	r0, #0
4001bb20:	0a000003 	beq	4001bb34 <CyU3POtgIsDeviceMode+0x24>
4001bb24:	e59f00a4 	ldr	r0, [pc, #164]	; 4001bbd0 <CyU3POtgIsDeviceMode+0xc0>
4001bb28:	e5d00000 	ldrb	r0, [r0]
4001bb2c:	e3500002 	cmp	r0, #2
4001bb30:	1a000024 	bne	4001bbc8 <CyU3POtgIsDeviceMode+0xb8>
4001bb34:	e59f0098 	ldr	r0, [pc, #152]	; 4001bbd4 <CyU3POtgIsDeviceMode+0xc4>
4001bb38:	e5d00000 	ldrb	r0, [r0]
4001bb3c:	e3500000 	cmp	r0, #0
4001bb40:	0a000006 	beq	4001bb60 <CyU3POtgIsDeviceMode+0x50>
4001bb44:	e3500002 	cmp	r0, #2
4001bb48:	0a00000c 	beq	4001bb80 <CyU3POtgIsDeviceMode+0x70>
4001bb4c:	e3500004 	cmp	r0, #4
4001bb50:	0a00000b 	beq	4001bb84 <CyU3POtgIsDeviceMode+0x74>
4001bb54:	e3500005 	cmp	r0, #5
4001bb58:	1a00000c 	bne	4001bb90 <CyU3POtgIsDeviceMode+0x80>
4001bb5c:	ea000009 	b	4001bb88 <CyU3POtgIsDeviceMode+0x78>
4001bb60:	e1a00000 	nop			; (mov r0, r0)
4001bb64:	e59f0064 	ldr	r0, [pc, #100]	; 4001bbd0 <CyU3POtgIsDeviceMode+0xc0>
4001bb68:	e5d00000 	ldrb	r0, [r0]
4001bb6c:	e3500002 	cmp	r0, #2
4001bb70:	1a000001 	bne	4001bb7c <CyU3POtgIsDeviceMode+0x6c>
4001bb74:	e3a00000 	mov	r0, #0
4001bb78:	e12fff1e 	bx	lr
4001bb7c:	e1a00000 	nop			; (mov r0, r0)
4001bb80:	e1a00000 	nop			; (mov r0, r0)
4001bb84:	e1a00000 	nop			; (mov r0, r0)
4001bb88:	e3a01001 	mov	r1, #1
4001bb8c:	ea000002 	b	4001bb9c <CyU3POtgIsDeviceMode+0x8c>
4001bb90:	e1a00000 	nop			; (mov r0, r0)
4001bb94:	e3a01000 	mov	r1, #0
4001bb98:	e1a00000 	nop			; (mov r0, r0)
4001bb9c:	e1a00000 	nop			; (mov r0, r0)
4001bba0:	e59f0030 	ldr	r0, [pc, #48]	; 4001bbd8 <CyU3POtgIsDeviceMode+0xc8>
4001bba4:	e5900000 	ldr	r0, [r0]
4001bba8:	e3500000 	cmp	r0, #0
4001bbac:	0a000005 	beq	4001bbc8 <CyU3POtgIsDeviceMode+0xb8>
4001bbb0:	e3510000 	cmp	r1, #0
4001bbb4:	1a000001 	bne	4001bbc0 <CyU3POtgIsDeviceMode+0xb0>
4001bbb8:	e3a00001 	mov	r0, #1
4001bbbc:	ea000000 	b	4001bbc4 <CyU3POtgIsDeviceMode+0xb4>
4001bbc0:	e3a00000 	mov	r0, #0
4001bbc4:	e1a01000 	mov	r1, r0
4001bbc8:	e1a00001 	mov	r0, r1
4001bbcc:	eaffffe9 	b	4001bb78 <CyU3POtgIsDeviceMode+0x68>
4001bbd0:	40030d58 	.word	0x40030d58
4001bbd4:	40030d54 	.word	0x40030d54
4001bbd8:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3POtgIsHostMode:

4001bbdc <CyU3POtgIsHostMode>:
4001bbdc:	e3a01000 	mov	r1, #0
4001bbe0:	e59f00a8 	ldr	r0, [pc, #168]	; 4001bc90 <CyU3POtgIsHostMode+0xb4>
4001bbe4:	e5d00000 	ldrb	r0, [r0]
4001bbe8:	e3500001 	cmp	r0, #1
4001bbec:	0a000003 	beq	4001bc00 <CyU3POtgIsHostMode+0x24>
4001bbf0:	e59f0098 	ldr	r0, [pc, #152]	; 4001bc90 <CyU3POtgIsHostMode+0xb4>
4001bbf4:	e5d00000 	ldrb	r0, [r0]
4001bbf8:	e3500002 	cmp	r0, #2
4001bbfc:	1a000021 	bne	4001bc88 <CyU3POtgIsHostMode+0xac>
4001bc00:	e59f008c 	ldr	r0, [pc, #140]	; 4001bc94 <CyU3POtgIsHostMode+0xb8>
4001bc04:	e5d00000 	ldrb	r0, [r0]
4001bc08:	e3500000 	cmp	r0, #0
4001bc0c:	0a000004 	beq	4001bc24 <CyU3POtgIsHostMode+0x48>
4001bc10:	e3500001 	cmp	r0, #1
4001bc14:	0a00000a 	beq	4001bc44 <CyU3POtgIsHostMode+0x68>
4001bc18:	e3500003 	cmp	r0, #3
4001bc1c:	1a00000b 	bne	4001bc50 <CyU3POtgIsHostMode+0x74>
4001bc20:	ea000008 	b	4001bc48 <CyU3POtgIsHostMode+0x6c>
4001bc24:	e1a00000 	nop			; (mov r0, r0)
4001bc28:	e59f0060 	ldr	r0, [pc, #96]	; 4001bc90 <CyU3POtgIsHostMode+0xb4>
4001bc2c:	e5d00000 	ldrb	r0, [r0]
4001bc30:	e3500002 	cmp	r0, #2
4001bc34:	1a000001 	bne	4001bc40 <CyU3POtgIsHostMode+0x64>
4001bc38:	e3a00000 	mov	r0, #0
4001bc3c:	e12fff1e 	bx	lr
4001bc40:	e1a00000 	nop			; (mov r0, r0)
4001bc44:	e1a00000 	nop			; (mov r0, r0)
4001bc48:	e3a01001 	mov	r1, #1
4001bc4c:	ea000002 	b	4001bc5c <CyU3POtgIsHostMode+0x80>
4001bc50:	e1a00000 	nop			; (mov r0, r0)
4001bc54:	e3a01000 	mov	r1, #0
4001bc58:	e1a00000 	nop			; (mov r0, r0)
4001bc5c:	e1a00000 	nop			; (mov r0, r0)
4001bc60:	e59f0030 	ldr	r0, [pc, #48]	; 4001bc98 <CyU3POtgIsHostMode+0xbc>
4001bc64:	e5900000 	ldr	r0, [r0]
4001bc68:	e3500000 	cmp	r0, #0
4001bc6c:	0a000005 	beq	4001bc88 <CyU3POtgIsHostMode+0xac>
4001bc70:	e3510000 	cmp	r1, #0
4001bc74:	1a000001 	bne	4001bc80 <CyU3POtgIsHostMode+0xa4>
4001bc78:	e3a00001 	mov	r0, #1
4001bc7c:	ea000000 	b	4001bc84 <CyU3POtgIsHostMode+0xa8>
4001bc80:	e3a00000 	mov	r0, #0
4001bc84:	e1a01000 	mov	r1, r0
4001bc88:	e1a00001 	mov	r0, r1
4001bc8c:	eaffffea 	b	4001bc3c <CyU3POtgIsHostMode+0x60>
4001bc90:	40030d58 	.word	0x40030d58
4001bc94:	40030d54 	.word	0x40030d54
4001bc98:	40030d50 	.word	0x40030d50

Disassembly of section i.CyU3POtgIsStarted:

4001bc9c <CyU3POtgIsStarted>:
4001bc9c:	e59f0004 	ldr	r0, [pc, #4]	; 4001bca8 <CyU3POtgIsStarted+0xc>
4001bca0:	e5900000 	ldr	r0, [r0]
4001bca4:	e12fff1e 	bx	lr
4001bca8:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3PSetEpConfig:

4001bcac <CyU3PSetEpConfig>:
4001bcac:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001bcb0:	e1a04000 	mov	r4, r0
4001bcb4:	e1a05001 	mov	r5, r1
4001bcb8:	e204607f 	and	r6, r4, #127	; 0x7f
4001bcbc:	e3a07000 	mov	r7, #0
4001bcc0:	e3a08000 	mov	r8, #0
4001bcc4:	e3a09000 	mov	r9, #0
4001bcc8:	e3a0a000 	mov	sl, #0
4001bccc:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c25c <CyU3PSetEpConfig+0x5b0>
4001bcd0:	e5d00008 	ldrb	r0, [r0, #8]
4001bcd4:	e3500000 	cmp	r0, #0
4001bcd8:	1a000001 	bne	4001bce4 <CyU3PSetEpConfig+0x38>
4001bcdc:	e3a00042 	mov	r0, #66	; 0x42
4001bce0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001bce4:	e3550000 	cmp	r5, #0
4001bce8:	1a000001 	bne	4001bcf4 <CyU3PSetEpConfig+0x48>
4001bcec:	e3a00041 	mov	r0, #65	; 0x41
4001bcf0:	eafffffa 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001bcf4:	e5950000 	ldr	r0, [r5]
4001bcf8:	e3500000 	cmp	r0, #0
4001bcfc:	0a000074 	beq	4001bed4 <CyU3PSetEpConfig+0x228>
4001bd00:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd04:	e3500b01 	cmp	r0, #1024	; 0x400
4001bd08:	ca000001 	bgt	4001bd14 <CyU3PSetEpConfig+0x68>
4001bd0c:	e356000f 	cmp	r6, #15
4001bd10:	da000001 	ble	4001bd1c <CyU3PSetEpConfig+0x70>
4001bd14:	e3a00040 	mov	r0, #64	; 0x40
4001bd18:	eafffff0 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001bd1c:	e5d50004 	ldrb	r0, [r5, #4]
4001bd20:	e3500000 	cmp	r0, #0
4001bd24:	0a000002 	beq	4001bd34 <CyU3PSetEpConfig+0x88>
4001bd28:	e5d50004 	ldrb	r0, [r5, #4]
4001bd2c:	e3500003 	cmp	r0, #3
4001bd30:	da000001 	ble	4001bd3c <CyU3PSetEpConfig+0x90>
4001bd34:	e3a00040 	mov	r0, #64	; 0x40
4001bd38:	eaffffe8 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001bd3c:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd40:	e3500010 	cmp	r0, #16
4001bd44:	ca000008 	bgt	4001bd6c <CyU3PSetEpConfig+0xc0>
4001bd48:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd4c:	e3500001 	cmp	r0, #1
4001bd50:	da000007 	ble	4001bd74 <CyU3PSetEpConfig+0xc8>
4001bd54:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd58:	e3500b01 	cmp	r0, #1024	; 0x400
4001bd5c:	aa000004 	bge	4001bd74 <CyU3PSetEpConfig+0xc8>
4001bd60:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd64:	e3500000 	cmp	r0, #0
4001bd68:	0a000001 	beq	4001bd74 <CyU3PSetEpConfig+0xc8>
4001bd6c:	e3a00040 	mov	r0, #64	; 0x40
4001bd70:	eaffffda 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001bd74:	e5d50004 	ldrb	r0, [r5, #4]
4001bd78:	e1a00f00 	lsl	r0, r0, #30
4001bd7c:	e1a08a20 	lsr	r8, r0, #20
4001bd80:	e5d50004 	ldrb	r0, [r5, #4]
4001bd84:	e2000003 	and	r0, r0, #3
4001bd88:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c260 <CyU3PSetEpConfig+0x5b4>
4001bd8c:	e7d1a000 	ldrb	sl, [r1, r0]
4001bd90:	e5d5000a 	ldrb	r0, [r5, #10]
4001bd94:	e3500000 	cmp	r0, #0
4001bd98:	0a000004 	beq	4001bdb0 <CyU3PSetEpConfig+0x104>
4001bd9c:	e5d5000a 	ldrb	r0, [r5, #10]
4001bda0:	e2400001 	sub	r0, r0, #1
4001bda4:	e200000f 	and	r0, r0, #15
4001bda8:	e18aa400 	orr	sl, sl, r0, lsl #8
4001bdac:	ea000001 	b	4001bdb8 <CyU3PSetEpConfig+0x10c>
4001bdb0:	e3a00001 	mov	r0, #1
4001bdb4:	e5c5000a 	strb	r0, [r5, #10]
4001bdb8:	e5d50004 	ldrb	r0, [r5, #4]
4001bdbc:	e3500001 	cmp	r0, #1
4001bdc0:	1a000013 	bne	4001be14 <CyU3PSetEpConfig+0x168>
4001bdc4:	e5950000 	ldr	r0, [r5]
4001bdc8:	e3500000 	cmp	r0, #0
4001bdcc:	0a000010 	beq	4001be14 <CyU3PSetEpConfig+0x168>
4001bdd0:	e5d5000b 	ldrb	r0, [r5, #11]
4001bdd4:	e2000003 	and	r0, r0, #3
4001bdd8:	e1888600 	orr	r8, r8, r0, lsl #12
4001bddc:	e5d5000a 	ldrb	r0, [r5, #10]
4001bde0:	e5d5100b 	ldrb	r1, [r5, #11]
4001bde4:	e1600180 	smulbb	r0, r0, r1
4001bde8:	e200003f 	and	r0, r0, #63	; 0x3f
4001bdec:	e18aa100 	orr	sl, sl, r0, lsl #2
4001bdf0:	e5d5000b 	ldrb	r0, [r5, #11]
4001bdf4:	e3500001 	cmp	r0, #1
4001bdf8:	da000005 	ble	4001be14 <CyU3PSetEpConfig+0x168>
4001bdfc:	e3560003 	cmp	r6, #3
4001be00:	0a000003 	beq	4001be14 <CyU3PSetEpConfig+0x168>
4001be04:	e3560007 	cmp	r6, #7
4001be08:	0a000001 	beq	4001be14 <CyU3PSetEpConfig+0x168>
4001be0c:	e3a0004d 	mov	r0, #77	; 0x4d
4001be10:	eaffffb2 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001be14:	e1d500b8 	ldrh	r0, [r5, #8]
4001be18:	e3500000 	cmp	r0, #0
4001be1c:	0a000004 	beq	4001be34 <CyU3PSetEpConfig+0x188>
4001be20:	e1d500b8 	ldrh	r0, [r5, #8]
4001be24:	e3500b01 	cmp	r0, #1024	; 0x400
4001be28:	ca000001 	bgt	4001be34 <CyU3PSetEpConfig+0x188>
4001be2c:	e1d500b8 	ldrh	r0, [r5, #8]
4001be30:	ea000000 	b	4001be38 <CyU3PSetEpConfig+0x18c>
4001be34:	e3a00b01 	mov	r0, #1024	; 0x400
4001be38:	e1a07800 	lsl	r7, r0, #16
4001be3c:	e1a07827 	lsr	r7, r7, #16
4001be40:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c25c <CyU3PSetEpConfig+0x5b0>
4001be44:	e5d00008 	ldrb	r0, [r0, #8]
4001be48:	e3500005 	cmp	r0, #5
4001be4c:	da00001e 	ble	4001becc <CyU3PSetEpConfig+0x220>
4001be50:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c25c <CyU3PSetEpConfig+0x5b0>
4001be54:	e5d00009 	ldrb	r0, [r0, #9]
4001be58:	e3500001 	cmp	r0, #1
4001be5c:	0a000008 	beq	4001be84 <CyU3PSetEpConfig+0x1d8>
4001be60:	e3500002 	cmp	r0, #2
4001be64:	1a000015 	bne	4001bec0 <CyU3PSetEpConfig+0x214>
4001be68:	e5d50004 	ldrb	r0, [r5, #4]
4001be6c:	e3500002 	cmp	r0, #2
4001be70:	1a000002 	bne	4001be80 <CyU3PSetEpConfig+0x1d4>
4001be74:	e3570c02 	cmp	r7, #512	; 0x200
4001be78:	da000000 	ble	4001be80 <CyU3PSetEpConfig+0x1d4>
4001be7c:	e3a07c02 	mov	r7, #512	; 0x200
4001be80:	ea000010 	b	4001bec8 <CyU3PSetEpConfig+0x21c>
4001be84:	e1a00000 	nop			; (mov r0, r0)
4001be88:	e5d50004 	ldrb	r0, [r5, #4]
4001be8c:	e3500001 	cmp	r0, #1
4001be90:	1a000003 	bne	4001bea4 <CyU3PSetEpConfig+0x1f8>
4001be94:	e3570b01 	cmp	r7, #1024	; 0x400
4001be98:	ba000001 	blt	4001bea4 <CyU3PSetEpConfig+0x1f8>
4001be9c:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c264 <CyU3PSetEpConfig+0x5b8>
4001bea0:	ea000005 	b	4001bebc <CyU3PSetEpConfig+0x210>
4001bea4:	e5d50004 	ldrb	r0, [r5, #4]
4001bea8:	e3500001 	cmp	r0, #1
4001beac:	0a000002 	beq	4001bebc <CyU3PSetEpConfig+0x210>
4001beb0:	e3570040 	cmp	r7, #64	; 0x40
4001beb4:	da000000 	ble	4001bebc <CyU3PSetEpConfig+0x210>
4001beb8:	e3a07040 	mov	r7, #64	; 0x40
4001bebc:	ea000001 	b	4001bec8 <CyU3PSetEpConfig+0x21c>
4001bec0:	e1a00000 	nop			; (mov r0, r0)
4001bec4:	e1a00000 	nop			; (mov r0, r0)
4001bec8:	e1a00000 	nop			; (mov r0, r0)
4001becc:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001bed0:	e1888000 	orr	r8, r8, r0
4001bed4:	e3e01000 	mvn	r1, #0
4001bed8:	e59f0388 	ldr	r0, [pc, #904]	; 4001c268 <CyU3PSetEpConfig+0x5bc>
4001bedc:	ebffb82d 	bl	40009f98 <_txe_mutex_get>
4001bee0:	e3140080 	tst	r4, #128	; 0x80
4001bee4:	0a000062 	beq	4001c074 <CyU3PSetEpConfig+0x3c8>
4001bee8:	e5950000 	ldr	r0, [r5]
4001beec:	e3500000 	cmp	r0, #0
4001bef0:	1a00001d 	bne	4001bf6c <CyU3PSetEpConfig+0x2c0>
4001bef4:	e59f0370 	ldr	r0, [pc, #880]	; 4001c26c <CyU3PSetEpConfig+0x5c0>
4001bef8:	e59f1370 	ldr	r1, [pc, #880]	; 4001c270 <CyU3PSetEpConfig+0x5c4>
4001befc:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bf00:	e3a00020 	mov	r0, #32
4001bf04:	e59f1368 	ldr	r1, [pc, #872]	; 4001c274 <CyU3PSetEpConfig+0x5c8>
4001bf08:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bf0c:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001bf10:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001bf14:	e3a01001 	mov	r1, #1
4001bf18:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf1c:	e59f1354 	ldr	r1, [pc, #852]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001bf20:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001bf24:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001bf28:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001bf2c:	e3a01001 	mov	r1, #1
4001bf30:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf34:	e59f1340 	ldr	r1, [pc, #832]	; 4001c27c <CyU3PSetEpConfig+0x5d0>
4001bf38:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001bf3c:	e3a00000 	mov	r0, #0
4001bf40:	e0861086 	add	r1, r6, r6, lsl #1
4001bf44:	e59f2334 	ldr	r2, [pc, #820]	; 4001c280 <CyU3PSetEpConfig+0x5d4>
4001bf48:	e0821101 	add	r1, r2, r1, lsl #2
4001bf4c:	e5810004 	str	r0, [r1, #4]
4001bf50:	e0861086 	add	r1, r6, r6, lsl #1
4001bf54:	e0821101 	add	r1, r2, r1, lsl #2
4001bf58:	e5810008 	str	r0, [r1, #8]
4001bf5c:	e59f0304 	ldr	r0, [pc, #772]	; 4001c268 <CyU3PSetEpConfig+0x5bc>
4001bf60:	ebffb841 	bl	4000a06c <_txe_mutex_put>
4001bf64:	e3a00000 	mov	r0, #0
4001bf68:	eaffff5c 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001bf6c:	e3a00001 	mov	r0, #1
4001bf70:	e0861086 	add	r1, r6, r6, lsl #1
4001bf74:	e59f2304 	ldr	r2, [pc, #772]	; 4001c280 <CyU3PSetEpConfig+0x5d4>
4001bf78:	e0821101 	add	r1, r2, r1, lsl #2
4001bf7c:	e5810004 	str	r0, [r1, #4]
4001bf80:	e0861086 	add	r1, r6, r6, lsl #1
4001bf84:	e0821101 	add	r1, r2, r1, lsl #2
4001bf88:	e5810008 	str	r0, [r1, #8]
4001bf8c:	e1d500b8 	ldrh	r0, [r5, #8]
4001bf90:	e0861086 	add	r1, r6, r6, lsl #1
4001bf94:	e0821101 	add	r1, r2, r1, lsl #2
4001bf98:	e1c100b0 	strh	r0, [r1]
4001bf9c:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c284 <CyU3PSetEpConfig+0x5d8>
4001bfa0:	e7807106 	str	r7, [r0, r6, lsl #2]
4001bfa4:	e5d50004 	ldrb	r0, [r5, #4]
4001bfa8:	e3500002 	cmp	r0, #2
4001bfac:	1a000007 	bne	4001bfd0 <CyU3PSetEpConfig+0x324>
4001bfb0:	e1d500b6 	ldrh	r0, [r5, #6]
4001bfb4:	e3500000 	cmp	r0, #0
4001bfb8:	da000004 	ble	4001bfd0 <CyU3PSetEpConfig+0x324>
4001bfbc:	e3a02001 	mov	r2, #1
4001bfc0:	e1a01006 	mov	r1, r6
4001bfc4:	e1a00004 	mov	r0, r4
4001bfc8:	eb00031b 	bl	4001cc3c <CyU3PUsbMapStream>
4001bfcc:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c288 <CyU3PSetEpConfig+0x5dc>
4001bfd0:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001bfd4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001bfd8:	e3a01001 	mov	r1, #1
4001bfdc:	e1800611 	orr	r0, r0, r1, lsl r6
4001bfe0:	e59f1290 	ldr	r1, [pc, #656]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001bfe4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001bfe8:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001bfec:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001bff0:	e59f1278 	ldr	r1, [pc, #632]	; 4001c270 <CyU3PSetEpConfig+0x5c4>
4001bff4:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bff8:	e3890001 	orr	r0, r9, #1
4001bffc:	e59f1270 	ldr	r1, [pc, #624]	; 4001c274 <CyU3PSetEpConfig+0x5c8>
4001c000:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c004:	e2810040 	add	r0, r1, #64	; 0x40
4001c008:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c00c:	e59f0278 	ldr	r0, [pc, #632]	; 4001c28c <CyU3PSetEpConfig+0x5e0>
4001c010:	e5900000 	ldr	r0, [r0]
4001c014:	e3500000 	cmp	r0, #0
4001c018:	0a00007f 	beq	4001c21c <CyU3PSetEpConfig+0x570>
4001c01c:	e3a00001 	mov	r0, #1
4001c020:	e59f1268 	ldr	r1, [pc, #616]	; 4001c290 <CyU3PSetEpConfig+0x5e4>
4001c024:	e5911000 	ldr	r1, [r1]
4001c028:	e1110610 	tst	r1, r0, lsl r6
4001c02c:	0a00007a 	beq	4001c21c <CyU3PSetEpConfig+0x570>
4001c030:	e59f0244 	ldr	r0, [pc, #580]	; 4001c27c <CyU3PSetEpConfig+0x5d0>
4001c034:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c038:	e3a01001 	mov	r1, #1
4001c03c:	e1800611 	orr	r0, r0, r1, lsl r6
4001c040:	e59f1234 	ldr	r1, [pc, #564]	; 4001c27c <CyU3PSetEpConfig+0x5d0>
4001c044:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c048:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c04c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c050:	e3a01001 	mov	r1, #1
4001c054:	e1800611 	orr	r0, r0, r1, lsl r6
4001c058:	e59f1218 	ldr	r1, [pc, #536]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001c05c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c060:	e59f0224 	ldr	r0, [pc, #548]	; 4001c28c <CyU3PSetEpConfig+0x5e0>
4001c064:	e5901000 	ldr	r1, [r0]
4001c068:	e1a00004 	mov	r0, r4
4001c06c:	eb0001ba 	bl	4001c75c <CyU3PUsbEnableEpInterrupts>
4001c070:	ea000069 	b	4001c21c <CyU3PSetEpConfig+0x570>
4001c074:	e5950000 	ldr	r0, [r5]
4001c078:	e3500000 	cmp	r0, #0
4001c07c:	1a00001e 	bne	4001c0fc <CyU3PSetEpConfig+0x450>
4001c080:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c26c <CyU3PSetEpConfig+0x5c0>
4001c084:	e59f1208 	ldr	r1, [pc, #520]	; 4001c294 <CyU3PSetEpConfig+0x5e8>
4001c088:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c08c:	e3a00020 	mov	r0, #32
4001c090:	e59f1200 	ldr	r1, [pc, #512]	; 4001c298 <CyU3PSetEpConfig+0x5ec>
4001c094:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c098:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c09c:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c0a0:	e2861010 	add	r1, r6, #16
4001c0a4:	e3a02001 	mov	r2, #1
4001c0a8:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c0ac:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c27c <CyU3PSetEpConfig+0x5d0>
4001c0b0:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c0b4:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c0b8:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c0bc:	e2861010 	add	r1, r6, #16
4001c0c0:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c0c4:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001c0c8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c0cc:	e3a00000 	mov	r0, #0
4001c0d0:	e0861086 	add	r1, r6, r6, lsl #1
4001c0d4:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c29c <CyU3PSetEpConfig+0x5f0>
4001c0d8:	e0821101 	add	r1, r2, r1, lsl #2
4001c0dc:	e5810004 	str	r0, [r1, #4]
4001c0e0:	e0861086 	add	r1, r6, r6, lsl #1
4001c0e4:	e0821101 	add	r1, r2, r1, lsl #2
4001c0e8:	e5810008 	str	r0, [r1, #8]
4001c0ec:	e59f0174 	ldr	r0, [pc, #372]	; 4001c268 <CyU3PSetEpConfig+0x5bc>
4001c0f0:	ebffb7dd 	bl	4000a06c <_txe_mutex_put>
4001c0f4:	e3a00000 	mov	r0, #0
4001c0f8:	eafffef8 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001c0fc:	e3a00001 	mov	r0, #1
4001c100:	e0861086 	add	r1, r6, r6, lsl #1
4001c104:	e59f2190 	ldr	r2, [pc, #400]	; 4001c29c <CyU3PSetEpConfig+0x5f0>
4001c108:	e0821101 	add	r1, r2, r1, lsl #2
4001c10c:	e5810004 	str	r0, [r1, #4]
4001c110:	e0861086 	add	r1, r6, r6, lsl #1
4001c114:	e0821101 	add	r1, r2, r1, lsl #2
4001c118:	e5810008 	str	r0, [r1, #8]
4001c11c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c120:	e0861086 	add	r1, r6, r6, lsl #1
4001c124:	e0821101 	add	r1, r2, r1, lsl #2
4001c128:	e1c100b0 	strh	r0, [r1]
4001c12c:	e59f016c 	ldr	r0, [pc, #364]	; 4001c2a0 <CyU3PSetEpConfig+0x5f4>
4001c130:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c134:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c138:	e1800007 	orr	r0, r0, r7
4001c13c:	e59f115c 	ldr	r1, [pc, #348]	; 4001c2a0 <CyU3PSetEpConfig+0x5f4>
4001c140:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c144:	e5d50004 	ldrb	r0, [r5, #4]
4001c148:	e3500002 	cmp	r0, #2
4001c14c:	1a00000e 	bne	4001c18c <CyU3PSetEpConfig+0x4e0>
4001c150:	e1d500b6 	ldrh	r0, [r5, #6]
4001c154:	e3500000 	cmp	r0, #0
4001c158:	da00000b 	ble	4001c18c <CyU3PSetEpConfig+0x4e0>
4001c15c:	e3a02001 	mov	r2, #1
4001c160:	e1a01006 	mov	r1, r6
4001c164:	e1a00004 	mov	r0, r4
4001c168:	eb0002b3 	bl	4001cc3c <CyU3PUsbMapStream>
4001c16c:	e59f0104 	ldr	r0, [pc, #260]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001c170:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c174:	e2861010 	add	r1, r6, #16
4001c178:	e3a02001 	mov	r2, #1
4001c17c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c180:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001c184:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c188:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c288 <CyU3PSetEpConfig+0x5dc>
4001c18c:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c190:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c294 <CyU3PSetEpConfig+0x5e8>
4001c194:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c198:	e3890001 	orr	r0, r9, #1
4001c19c:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c298 <CyU3PSetEpConfig+0x5ec>
4001c1a0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1a4:	e2810040 	add	r0, r1, #64	; 0x40
4001c1a8:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c1ac:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c28c <CyU3PSetEpConfig+0x5e0>
4001c1b0:	e5900000 	ldr	r0, [r0]
4001c1b4:	e3500000 	cmp	r0, #0
4001c1b8:	0a000017 	beq	4001c21c <CyU3PSetEpConfig+0x570>
4001c1bc:	e2860010 	add	r0, r6, #16
4001c1c0:	e3a01001 	mov	r1, #1
4001c1c4:	e1a00011 	lsl	r0, r1, r0
4001c1c8:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c290 <CyU3PSetEpConfig+0x5e4>
4001c1cc:	e5911000 	ldr	r1, [r1]
4001c1d0:	e1100001 	tst	r0, r1
4001c1d4:	0a000010 	beq	4001c21c <CyU3PSetEpConfig+0x570>
4001c1d8:	e59f009c 	ldr	r0, [pc, #156]	; 4001c27c <CyU3PSetEpConfig+0x5d0>
4001c1dc:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c1e0:	e2861010 	add	r1, r6, #16
4001c1e4:	e3a02001 	mov	r2, #1
4001c1e8:	e1800112 	orr	r0, r0, r2, lsl r1
4001c1ec:	e59f1088 	ldr	r1, [pc, #136]	; 4001c27c <CyU3PSetEpConfig+0x5d0>
4001c1f0:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c1f4:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c1f8:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c1fc:	e2861010 	add	r1, r6, #16
4001c200:	e1800112 	orr	r0, r0, r2, lsl r1
4001c204:	e59f106c 	ldr	r1, [pc, #108]	; 4001c278 <CyU3PSetEpConfig+0x5cc>
4001c208:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c20c:	e59f0078 	ldr	r0, [pc, #120]	; 4001c28c <CyU3PSetEpConfig+0x5e0>
4001c210:	e5901000 	ldr	r1, [r0]
4001c214:	e1a00004 	mov	r0, r4
4001c218:	eb00014f 	bl	4001c75c <CyU3PUsbEnableEpInterrupts>
4001c21c:	e59f0038 	ldr	r0, [pc, #56]	; 4001c25c <CyU3PSetEpConfig+0x5b0>
4001c220:	e5d00008 	ldrb	r0, [r0, #8]
4001c224:	e3500005 	cmp	r0, #5
4001c228:	ba000007 	blt	4001c24c <CyU3PSetEpConfig+0x5a0>
4001c22c:	e1a00004 	mov	r0, r4
4001c230:	eb00040e 	bl	4001d270 <CyU3PUsbResetEp>
4001c234:	e1a00004 	mov	r0, r4
4001c238:	eb0001a4 	bl	4001c8d0 <CyU3PUsbFlushEp>
4001c23c:	e3a02001 	mov	r2, #1
4001c240:	e3a01000 	mov	r1, #0
4001c244:	e1a00004 	mov	r0, r4
4001c248:	eb00066c 	bl	4001dc00 <CyU3PUsbStall>
4001c24c:	e59f0014 	ldr	r0, [pc, #20]	; 4001c268 <CyU3PSetEpConfig+0x5bc>
4001c250:	ebffb785 	bl	4000a06c <_txe_mutex_put>
4001c254:	e3a00000 	mov	r0, #0
4001c258:	eafffea0 	b	4001bce0 <CyU3PSetEpConfig+0x34>
4001c25c:	40031d40 	.word	0x40031d40
4001c260:	40011d68 	.word	0x40011d68
4001c264:	000003ff 	.word	0x000003ff
4001c268:	40031ee0 	.word	0x40031ee0
4001c26c:	00004040 	.word	0x00004040
4001c270:	e0031418 	.word	0xe0031418
4001c274:	e0033500 	.word	0xe0033500
4001c278:	e0033000 	.word	0xe0033000
4001c27c:	e0031000 	.word	0xe0031000
4001c280:	40031bb4 	.word	0x40031bb4
4001c284:	e0031c40 	.word	0xe0031c40
4001c288:	00400028 	.word	0x00400028
4001c28c:	40030d80 	.word	0x40030d80
4001c290:	40030d84 	.word	0x40030d84
4001c294:	e0031498 	.word	0xe0031498
4001c298:	e0033600 	.word	0xe0033600
4001c29c:	40031c74 	.word	0x40031c74
4001c2a0:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c2a4 <CyU3PSetUsbCoreClock>:
4001c2a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c2a8:	e1a04000 	mov	r4, r0
4001c2ac:	e1a05001 	mov	r5, r1
4001c2b0:	eb0016d5 	bl	40021e0c <CyU3PVicDisableAllInterrupts>
4001c2b4:	e1a06000 	mov	r6, r0
4001c2b8:	e59f0064 	ldr	r0, [pc, #100]	; 4001c324 <CyU3PSetUsbCoreClock+0x80>
4001c2bc:	e5900008 	ldr	r0, [r0, #8]
4001c2c0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c2c4:	e59f1058 	ldr	r1, [pc, #88]	; 4001c324 <CyU3PSetUsbCoreClock+0x80>
4001c2c8:	e5810008 	str	r0, [r1, #8]
4001c2cc:	e3a07014 	mov	r7, #20
4001c2d0:	ea000001 	b	4001c2dc <CyU3PSetUsbCoreClock+0x38>
4001c2d4:	e1a00000 	nop			; (mov r0, r0)
4001c2d8:	e2477001 	sub	r7, r7, #1
4001c2dc:	e3570000 	cmp	r7, #0
4001c2e0:	1afffffb 	bne	4001c2d4 <CyU3PSetUsbCoreClock+0x30>
4001c2e4:	e1850104 	orr	r0, r5, r4, lsl #2
4001c2e8:	e59f1034 	ldr	r1, [pc, #52]	; 4001c324 <CyU3PSetUsbCoreClock+0x80>
4001c2ec:	e5810008 	str	r0, [r1, #8]
4001c2f0:	e1a00001 	mov	r0, r1
4001c2f4:	e5900008 	ldr	r0, [r0, #8]
4001c2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c2fc:	e5810008 	str	r0, [r1, #8]
4001c300:	e3a07050 	mov	r7, #80	; 0x50
4001c304:	ea000001 	b	4001c310 <CyU3PSetUsbCoreClock+0x6c>
4001c308:	e1a00000 	nop			; (mov r0, r0)
4001c30c:	e2477001 	sub	r7, r7, #1
4001c310:	e3570000 	cmp	r7, #0
4001c314:	1afffffb 	bne	4001c308 <CyU3PSetUsbCoreClock+0x64>
4001c318:	e1a00006 	mov	r0, r6
4001c31c:	eb0016c8 	bl	40021e44 <CyU3PVicEnableInterrupts>
4001c320:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c324:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c328 <CyU3PUibInit>:
4001c328:	e92d4010 	push	{r4, lr}
4001c32c:	e3a04000 	mov	r4, #0
4001c330:	e3a00000 	mov	r0, #0
4001c334:	e59f117c 	ldr	r1, [pc, #380]	; 4001c4b8 <CyU3PUibInit+0x190>
4001c338:	e5810004 	str	r0, [r1, #4]
4001c33c:	e5810008 	str	r0, [r1, #8]
4001c340:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c344:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c348:	e581001c 	str	r0, [r1, #28]
4001c34c:	e3e00000 	mvn	r0, #0
4001c350:	e581000c 	str	r0, [r1, #12]
4001c354:	e5810004 	str	r0, [r1, #4]
4001c358:	e59f015c 	ldr	r0, [pc, #348]	; 4001c4bc <CyU3PUibInit+0x194>
4001c35c:	e5810008 	str	r0, [r1, #8]
4001c360:	e3a00000 	mov	r0, #0
4001c364:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c368:	e3e00000 	mvn	r0, #0
4001c36c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c370:	e59f0148 	ldr	r0, [pc, #328]	; 4001c4c0 <CyU3PUibInit+0x198>
4001c374:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c378:	eb0016c4 	bl	40021e90 <CyFx3Usb2PhySetup>
4001c37c:	e3e00000 	mvn	r0, #0
4001c380:	e59f113c 	ldr	r1, [pc, #316]	; 4001c4c4 <CyU3PUibInit+0x19c>
4001c384:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c388:	e59f0138 	ldr	r0, [pc, #312]	; 4001c4c8 <CyU3PUibInit+0x1a0>
4001c38c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c390:	e3e00000 	mvn	r0, #0
4001c394:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c398:	e3a00000 	mov	r0, #0
4001c39c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c3a0:	e3a00001 	mov	r0, #1
4001c3a4:	e1811680 	orr	r1, r1, r0, lsl #13
4001c3a8:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c3ac:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c3b0:	e3a00043 	mov	r0, #67	; 0x43
4001c3b4:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c3b8:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c3bc:	e59f0108 	ldr	r0, [pc, #264]	; 4001c4cc <CyU3PUibInit+0x1a4>
4001c3c0:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c3c4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c3c8:	e3a00040 	mov	r0, #64	; 0x40
4001c3cc:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c3d0:	e1800400 	orr	r0, r0, r0, lsl #8
4001c3d4:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c3d8:	e3a00040 	mov	r0, #64	; 0x40
4001c3dc:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c3e0:	e3a04001 	mov	r4, #1
4001c3e4:	ea000015 	b	4001c440 <CyU3PUibInit+0x118>
4001c3e8:	e1a00004 	mov	r0, r4
4001c3ec:	eb000137 	bl	4001c8d0 <CyU3PUsbFlushEp>
4001c3f0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c4d0 <CyU3PUibInit+0x1a8>
4001c3f4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c3f8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c3fc:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c4d0 <CyU3PUibInit+0x1a8>
4001c400:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c404:	e3a00000 	mov	r0, #0
4001c408:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c4d4 <CyU3PUibInit+0x1ac>
4001c40c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c410:	e3840080 	orr	r0, r4, #128	; 0x80
4001c414:	eb00012d 	bl	4001c8d0 <CyU3PUsbFlushEp>
4001c418:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c4d8 <CyU3PUibInit+0x1b0>
4001c41c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c420:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c424:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c4d8 <CyU3PUibInit+0x1b0>
4001c428:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c42c:	e3a00000 	mov	r0, #0
4001c430:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c4dc <CyU3PUibInit+0x1b4>
4001c434:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c438:	e2840001 	add	r0, r4, #1
4001c43c:	e20040ff 	and	r4, r0, #255	; 0xff
4001c440:	e3540010 	cmp	r4, #16
4001c444:	baffffe7 	blt	4001c3e8 <CyU3PUibInit+0xc0>
4001c448:	e59f0090 	ldr	r0, [pc, #144]	; 4001c4e0 <CyU3PUibInit+0x1b8>
4001c44c:	e5900004 	ldr	r0, [r0, #4]
4001c450:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c454:	e59f1084 	ldr	r1, [pc, #132]	; 4001c4e0 <CyU3PUibInit+0x1b8>
4001c458:	e5810004 	str	r0, [r1, #4]
4001c45c:	e3e00000 	mvn	r0, #0
4001c460:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c464:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c468:	e3a00b01 	mov	r0, #1024	; 0x400
4001c46c:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c470:	e59f106c 	ldr	r1, [pc, #108]	; 4001c4e4 <CyU3PUibInit+0x1bc>
4001c474:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c478:	e3a00015 	mov	r0, #21
4001c47c:	eb00166b 	bl	40021e30 <CyU3PVicEnableInt>
4001c480:	e59f0060 	ldr	r0, [pc, #96]	; 4001c4e8 <CyU3PUibInit+0x1c0>
4001c484:	e5900000 	ldr	r0, [r0]
4001c488:	e3500000 	cmp	r0, #0
4001c48c:	0a000008 	beq	4001c4b4 <CyU3PUibInit+0x18c>
4001c490:	e59f0054 	ldr	r0, [pc, #84]	; 4001c4ec <CyU3PUibInit+0x1c4>
4001c494:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c498:	e3100b01 	tst	r0, #1024	; 0x400
4001c49c:	0a000004 	beq	4001c4b4 <CyU3PUibInit+0x18c>
4001c4a0:	e3a01000 	mov	r1, #0
4001c4a4:	e3a0000b 	mov	r0, #11
4001c4a8:	e59f2038 	ldr	r2, [pc, #56]	; 4001c4e8 <CyU3PUibInit+0x1c0>
4001c4ac:	e5922000 	ldr	r2, [r2]
4001c4b0:	e12fff32 	blx	r2
4001c4b4:	e8bd8010 	pop	{r4, pc}
4001c4b8:	e0050000 	.word	0xe0050000
4001c4bc:	00038081 	.word	0x00038081
4001c4c0:	00004a3d 	.word	0x00004a3d
4001c4c4:	e0031000 	.word	0xe0031000
4001c4c8:	0000095c 	.word	0x0000095c
4001c4cc:	00004040 	.word	0x00004040
4001c4d0:	e0031498 	.word	0xe0031498
4001c4d4:	e0033600 	.word	0xe0033600
4001c4d8:	e0031418 	.word	0xe0031418
4001c4dc:	e0033500 	.word	0xe0033500
4001c4e0:	e0030000 	.word	0xe0030000
4001c4e4:	40031d40 	.word	0x40031d40
4001c4e8:	40030da0 	.word	0x40030da0
4001c4ec:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c4f0 <CyU3PUsbAckSetup>:
4001c4f0:	e92d4010 	push	{r4, lr}
4001c4f4:	e3e01000 	mvn	r1, #0
4001c4f8:	e59f00fc 	ldr	r0, [pc, #252]	; 4001c5fc <CyU3PUsbAckSetup+0x10c>
4001c4fc:	ebffb6a5 	bl	40009f98 <_txe_mutex_get>
4001c500:	eb000780 	bl	4001e308 <GetUsbLinkActive>
4001c504:	eb00019e 	bl	4001cb84 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c508:	e3500000 	cmp	r0, #0
4001c50c:	0a000002 	beq	4001c51c <CyU3PUsbAckSetup+0x2c>
4001c510:	e59f00e4 	ldr	r0, [pc, #228]	; 4001c5fc <CyU3PUsbAckSetup+0x10c>
4001c514:	ebffb6d4 	bl	4000a06c <_txe_mutex_put>
4001c518:	e8bd8010 	pop	{r4, pc}
4001c51c:	e3a00000 	mov	r0, #0
4001c520:	e59f10d8 	ldr	r1, [pc, #216]	; 4001c600 <CyU3PUsbAckSetup+0x110>
4001c524:	e5810014 	str	r0, [r1, #20]
4001c528:	e2810000 	add	r0, r1, #0
4001c52c:	e5d00009 	ldrb	r0, [r0, #9]
4001c530:	e3500003 	cmp	r0, #3
4001c534:	1a000026 	bne	4001c5d4 <CyU3PUsbAckSetup+0xe4>
4001c538:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c604 <CyU3PUsbAckSetup+0x114>
4001c53c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c540:	e3c00004 	bic	r0, r0, #4
4001c544:	e59f10b8 	ldr	r1, [pc, #184]	; 4001c604 <CyU3PUsbAckSetup+0x114>
4001c548:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c54c:	e1a00001 	mov	r0, r1
4001c550:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c554:	e3c00004 	bic	r0, r0, #4
4001c558:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c55c:	eb00162a 	bl	40021e0c <CyU3PVicDisableAllInterrupts>
4001c560:	e1a04000 	mov	r4, r0
4001c564:	e3a00001 	mov	r0, #1
4001c568:	ebffdbad 	bl	40013424 <CyU3PBusyWait>
4001c56c:	e59f0090 	ldr	r0, [pc, #144]	; 4001c604 <CyU3PUsbAckSetup+0x114>
4001c570:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c574:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c578:	e59f1084 	ldr	r1, [pc, #132]	; 4001c604 <CyU3PUsbAckSetup+0x114>
4001c57c:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c580:	e1a00004 	mov	r0, r4
4001c584:	eb00162e 	bl	40021e44 <CyU3PVicEnableInterrupts>
4001c588:	e3a00c02 	mov	r0, #512	; 0x200
4001c58c:	e59f1074 	ldr	r1, [pc, #116]	; 4001c608 <CyU3PUsbAckSetup+0x118>
4001c590:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c594:	e3a00016 	mov	r0, #22
4001c598:	eb000ced 	bl	4001f954 <CyU3PUsbAddToEventLog>
4001c59c:	e59f005c 	ldr	r0, [pc, #92]	; 4001c600 <CyU3PUsbAckSetup+0x110>
4001c5a0:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001c5a4:	e3500000 	cmp	r0, #0
4001c5a8:	1a000010 	bne	4001c5f0 <CyU3PUsbAckSetup+0x100>
4001c5ac:	e3a00001 	mov	r0, #1
4001c5b0:	e59f1054 	ldr	r1, [pc, #84]	; 4001c60c <CyU3PUsbAckSetup+0x11c>
4001c5b4:	e5810000 	str	r0, [r1]
4001c5b8:	e3a02000 	mov	r2, #0
4001c5bc:	e3a01064 	mov	r1, #100	; 0x64
4001c5c0:	e59f0048 	ldr	r0, [pc, #72]	; 4001c610 <CyU3PUsbAckSetup+0x120>
4001c5c4:	ebffb8c1 	bl	4000a8d0 <_txe_timer_change>
4001c5c8:	e59f0040 	ldr	r0, [pc, #64]	; 4001c610 <CyU3PUsbAckSetup+0x120>
4001c5cc:	ebffb8af 	bl	4000a890 <_txe_timer_activate>
4001c5d0:	ea000006 	b	4001c5f0 <CyU3PUsbAckSetup+0x100>
4001c5d4:	e59f002c 	ldr	r0, [pc, #44]	; 4001c608 <CyU3PUsbAckSetup+0x118>
4001c5d8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c5dc:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001c5e0:	e59f1020 	ldr	r1, [pc, #32]	; 4001c608 <CyU3PUsbAckSetup+0x118>
4001c5e4:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c5e8:	e3a00040 	mov	r0, #64	; 0x40
4001c5ec:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c5f0:	e59f0004 	ldr	r0, [pc, #4]	; 4001c5fc <CyU3PUsbAckSetup+0x10c>
4001c5f4:	ebffb69c 	bl	4000a06c <_txe_mutex_put>
4001c5f8:	eaffffc6 	b	4001c518 <CyU3PUsbAckSetup+0x28>
4001c5fc:	40031ee0 	.word	0x40031ee0
4001c600:	40031d40 	.word	0x40031d40
4001c604:	e0033000 	.word	0xe0033000
4001c608:	e0031000 	.word	0xe0031000
4001c60c:	40030db4 	.word	0x40030db4
4001c610:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001c614 <CyU3PUsbCreateDmaChannels>:
4001c614:	e92d4010 	push	{r4, lr}
4001c618:	e24dd020 	sub	sp, sp, #32
4001c61c:	e3a00c02 	mov	r0, #512	; 0x200
4001c620:	e1cd00b4 	strh	r0, [sp, #4]
4001c624:	e3a00001 	mov	r0, #1
4001c628:	e1cd00b6 	strh	r0, [sp, #6]
4001c62c:	e3a00000 	mov	r0, #0
4001c630:	e1cd00bc 	strh	r0, [sp, #12]
4001c634:	e3a00c03 	mov	r0, #768	; 0x300
4001c638:	e1cd00ba 	strh	r0, [sp, #10]
4001c63c:	e3a00000 	mov	r0, #0
4001c640:	e5cd0014 	strb	r0, [sp, #20]
4001c644:	e1cd00be 	strh	r0, [sp, #14]
4001c648:	e1cd01b0 	strh	r0, [sp, #16]
4001c64c:	e1cd01b2 	strh	r0, [sp, #18]
4001c650:	e58d0018 	str	r0, [sp, #24]
4001c654:	e58d001c 	str	r0, [sp, #28]
4001c658:	e59f00ec 	ldr	r0, [pc, #236]	; 4001c74c <CyU3PUsbCreateDmaChannels+0x138>
4001c65c:	e1cd00b8 	strh	r0, [sp, #8]
4001c660:	e28d2004 	add	r2, sp, #4
4001c664:	e3a01004 	mov	r1, #4
4001c668:	e59f00e0 	ldr	r0, [pc, #224]	; 4001c750 <CyU3PUsbCreateDmaChannels+0x13c>
4001c66c:	ebffe411 	bl	400156b8 <CyU3PDmaChannelCreate>
4001c670:	e1a04000 	mov	r4, r0
4001c674:	e3540000 	cmp	r4, #0
4001c678:	0a000002 	beq	4001c688 <CyU3PUsbCreateDmaChannels+0x74>
4001c67c:	e3a0004e 	mov	r0, #78	; 0x4e
4001c680:	e28dd020 	add	sp, sp, #32
4001c684:	e8bd8010 	pop	{r4, pc}
4001c688:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c754 <CyU3PUsbCreateDmaChannels+0x140>
4001c68c:	e5900000 	ldr	r0, [r0]
4001c690:	e3500000 	cmp	r0, #0
4001c694:	0a000009 	beq	4001c6c0 <CyU3PUsbCreateDmaChannels+0xac>
4001c698:	e3a01001 	mov	r1, #1
4001c69c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001c750 <CyU3PUsbCreateDmaChannels+0x13c>
4001c6a0:	ebffe274 	bl	40015078 <CyU3PDmaChannelCacheControl>
4001c6a4:	e1a04000 	mov	r4, r0
4001c6a8:	e3540000 	cmp	r4, #0
4001c6ac:	0a000003 	beq	4001c6c0 <CyU3PUsbCreateDmaChannels+0xac>
4001c6b0:	e59f0098 	ldr	r0, [pc, #152]	; 4001c750 <CyU3PUsbCreateDmaChannels+0x13c>
4001c6b4:	ebffe4f9 	bl	40015aa0 <CyU3PDmaChannelDestroy>
4001c6b8:	e3a0004e 	mov	r0, #78	; 0x4e
4001c6bc:	eaffffef 	b	4001c680 <CyU3PUsbCreateDmaChannels+0x6c>
4001c6c0:	e3a00b01 	mov	r0, #1024	; 0x400
4001c6c4:	e1cd00b8 	strh	r0, [sp, #8]
4001c6c8:	e3a00000 	mov	r0, #0
4001c6cc:	e58d001c 	str	r0, [sp, #28]
4001c6d0:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001c6d4:	e1cd00ba 	strh	r0, [sp, #10]
4001c6d8:	e28d2004 	add	r2, sp, #4
4001c6dc:	e3a01003 	mov	r1, #3
4001c6e0:	e59f0070 	ldr	r0, [pc, #112]	; 4001c758 <CyU3PUsbCreateDmaChannels+0x144>
4001c6e4:	ebffe3f3 	bl	400156b8 <CyU3PDmaChannelCreate>
4001c6e8:	e1a04000 	mov	r4, r0
4001c6ec:	e3540000 	cmp	r4, #0
4001c6f0:	0a000003 	beq	4001c704 <CyU3PUsbCreateDmaChannels+0xf0>
4001c6f4:	e59f0054 	ldr	r0, [pc, #84]	; 4001c750 <CyU3PUsbCreateDmaChannels+0x13c>
4001c6f8:	ebffe4e8 	bl	40015aa0 <CyU3PDmaChannelDestroy>
4001c6fc:	e3a0004e 	mov	r0, #78	; 0x4e
4001c700:	eaffffde 	b	4001c680 <CyU3PUsbCreateDmaChannels+0x6c>
4001c704:	e59f0048 	ldr	r0, [pc, #72]	; 4001c754 <CyU3PUsbCreateDmaChannels+0x140>
4001c708:	e5900000 	ldr	r0, [r0]
4001c70c:	e3500000 	cmp	r0, #0
4001c710:	0a00000b 	beq	4001c744 <CyU3PUsbCreateDmaChannels+0x130>
4001c714:	e3a01001 	mov	r1, #1
4001c718:	e59f0038 	ldr	r0, [pc, #56]	; 4001c758 <CyU3PUsbCreateDmaChannels+0x144>
4001c71c:	ebffe255 	bl	40015078 <CyU3PDmaChannelCacheControl>
4001c720:	e1a04000 	mov	r4, r0
4001c724:	e3540000 	cmp	r4, #0
4001c728:	0a000005 	beq	4001c744 <CyU3PUsbCreateDmaChannels+0x130>
4001c72c:	e59f001c 	ldr	r0, [pc, #28]	; 4001c750 <CyU3PUsbCreateDmaChannels+0x13c>
4001c730:	ebffe4da 	bl	40015aa0 <CyU3PDmaChannelDestroy>
4001c734:	e59f001c 	ldr	r0, [pc, #28]	; 4001c758 <CyU3PUsbCreateDmaChannels+0x144>
4001c738:	ebffe4d8 	bl	40015aa0 <CyU3PDmaChannelDestroy>
4001c73c:	e3a0004e 	mov	r0, #78	; 0x4e
4001c740:	eaffffce 	b	4001c680 <CyU3PUsbCreateDmaChannels+0x6c>
4001c744:	e1a00004 	mov	r0, r4
4001c748:	eaffffcc 	b	4001c680 <CyU3PUsbCreateDmaChannels+0x6c>
4001c74c:	00003f01 	.word	0x00003f01
4001c750:	40031a74 	.word	0x40031a74
4001c754:	40030c64 	.word	0x40030c64
4001c758:	40031b14 	.word	0x40031b14

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001c75c <CyU3PUsbEnableEpInterrupts>:
4001c75c:	e200300f 	and	r3, r0, #15
4001c760:	e3100080 	tst	r0, #128	; 0x80
4001c764:	0a00002a 	beq	4001c814 <CyU3PUsbEnableEpInterrupts+0xb8>
4001c768:	e59fc150 	ldr	ip, [pc, #336]	; 4001c8c0 <CyU3PUsbEnableEpInterrupts+0x164>
4001c76c:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c770:	e3120901 	tst	r2, #16384	; 0x4000
4001c774:	0a00000d 	beq	4001c7b0 <CyU3PUsbEnableEpInterrupts+0x54>
4001c778:	e3110001 	tst	r1, #1
4001c77c:	0a000000 	beq	4001c784 <CyU3PUsbEnableEpInterrupts+0x28>
4001c780:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c784:	e3110002 	tst	r1, #2
4001c788:	0a000000 	beq	4001c790 <CyU3PUsbEnableEpInterrupts+0x34>
4001c78c:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c790:	e3110004 	tst	r1, #4
4001c794:	0a000000 	beq	4001c79c <CyU3PUsbEnableEpInterrupts+0x40>
4001c798:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c79c:	e3110008 	tst	r1, #8
4001c7a0:	0a000000 	beq	4001c7a8 <CyU3PUsbEnableEpInterrupts+0x4c>
4001c7a4:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c7a8:	e59fc110 	ldr	ip, [pc, #272]	; 4001c8c0 <CyU3PUsbEnableEpInterrupts+0x164>
4001c7ac:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c7b0:	e59fc10c 	ldr	ip, [pc, #268]	; 4001c8c4 <CyU3PUsbEnableEpInterrupts+0x168>
4001c7b4:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c7b8:	e3120001 	tst	r2, #1
4001c7bc:	0a00003e 	beq	4001c8bc <CyU3PUsbEnableEpInterrupts+0x160>
4001c7c0:	e3110001 	tst	r1, #1
4001c7c4:	0a000000 	beq	4001c7cc <CyU3PUsbEnableEpInterrupts+0x70>
4001c7c8:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c7cc:	e3110002 	tst	r1, #2
4001c7d0:	0a000000 	beq	4001c7d8 <CyU3PUsbEnableEpInterrupts+0x7c>
4001c7d4:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c7d8:	e3110004 	tst	r1, #4
4001c7dc:	0a000000 	beq	4001c7e4 <CyU3PUsbEnableEpInterrupts+0x88>
4001c7e0:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c7e4:	e3110010 	tst	r1, #16
4001c7e8:	0a000000 	beq	4001c7f0 <CyU3PUsbEnableEpInterrupts+0x94>
4001c7ec:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c7f0:	e3110020 	tst	r1, #32
4001c7f4:	0a000000 	beq	4001c7fc <CyU3PUsbEnableEpInterrupts+0xa0>
4001c7f8:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c7fc:	e3110040 	tst	r1, #64	; 0x40
4001c800:	0a000000 	beq	4001c808 <CyU3PUsbEnableEpInterrupts+0xac>
4001c804:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c808:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001c8c4 <CyU3PUsbEnableEpInterrupts+0x168>
4001c80c:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c810:	ea000029 	b	4001c8bc <CyU3PUsbEnableEpInterrupts+0x160>
4001c814:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001c8c8 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c818:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c81c:	e3120901 	tst	r2, #16384	; 0x4000
4001c820:	0a00000d 	beq	4001c85c <CyU3PUsbEnableEpInterrupts+0x100>
4001c824:	e3110001 	tst	r1, #1
4001c828:	0a000000 	beq	4001c830 <CyU3PUsbEnableEpInterrupts+0xd4>
4001c82c:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c830:	e3110002 	tst	r1, #2
4001c834:	0a000000 	beq	4001c83c <CyU3PUsbEnableEpInterrupts+0xe0>
4001c838:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c83c:	e3110004 	tst	r1, #4
4001c840:	0a000000 	beq	4001c848 <CyU3PUsbEnableEpInterrupts+0xec>
4001c844:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c848:	e3110008 	tst	r1, #8
4001c84c:	0a000000 	beq	4001c854 <CyU3PUsbEnableEpInterrupts+0xf8>
4001c850:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c854:	e59fc06c 	ldr	ip, [pc, #108]	; 4001c8c8 <CyU3PUsbEnableEpInterrupts+0x16c>
4001c858:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c85c:	e59fc068 	ldr	ip, [pc, #104]	; 4001c8cc <CyU3PUsbEnableEpInterrupts+0x170>
4001c860:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c864:	e3120001 	tst	r2, #1
4001c868:	0a000013 	beq	4001c8bc <CyU3PUsbEnableEpInterrupts+0x160>
4001c86c:	e3110001 	tst	r1, #1
4001c870:	0a000000 	beq	4001c878 <CyU3PUsbEnableEpInterrupts+0x11c>
4001c874:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c878:	e3110002 	tst	r1, #2
4001c87c:	0a000000 	beq	4001c884 <CyU3PUsbEnableEpInterrupts+0x128>
4001c880:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c884:	e3110004 	tst	r1, #4
4001c888:	0a000000 	beq	4001c890 <CyU3PUsbEnableEpInterrupts+0x134>
4001c88c:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c890:	e3110010 	tst	r1, #16
4001c894:	0a000000 	beq	4001c89c <CyU3PUsbEnableEpInterrupts+0x140>
4001c898:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c89c:	e3110020 	tst	r1, #32
4001c8a0:	0a000000 	beq	4001c8a8 <CyU3PUsbEnableEpInterrupts+0x14c>
4001c8a4:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c8a8:	e3110040 	tst	r1, #64	; 0x40
4001c8ac:	0a000000 	beq	4001c8b4 <CyU3PUsbEnableEpInterrupts+0x158>
4001c8b0:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c8b4:	e59fc010 	ldr	ip, [pc, #16]	; 4001c8cc <CyU3PUsbEnableEpInterrupts+0x170>
4001c8b8:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c8bc:	e12fff1e 	bx	lr
4001c8c0:	e0031418 	.word	0xe0031418
4001c8c4:	e0033500 	.word	0xe0033500
4001c8c8:	e0031498 	.word	0xe0031498
4001c8cc:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001c8d0 <CyU3PUsbFlushEp>:
4001c8d0:	e92d4070 	push	{r4, r5, r6, lr}
4001c8d4:	e1a04000 	mov	r4, r0
4001c8d8:	e204507f 	and	r5, r4, #127	; 0x7f
4001c8dc:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c98c <CyU3PUsbFlushEp+0xbc>
4001c8e0:	e5d00008 	ldrb	r0, [r0, #8]
4001c8e4:	e3500000 	cmp	r0, #0
4001c8e8:	1a000001 	bne	4001c8f4 <CyU3PUsbFlushEp+0x24>
4001c8ec:	e3a00042 	mov	r0, #66	; 0x42
4001c8f0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001c8f4:	e355000f 	cmp	r5, #15
4001c8f8:	da000001 	ble	4001c904 <CyU3PUsbFlushEp+0x34>
4001c8fc:	e3a00040 	mov	r0, #64	; 0x40
4001c900:	eafffffa 	b	4001c8f0 <CyU3PUsbFlushEp+0x20>
4001c904:	e3e01000 	mvn	r1, #0
4001c908:	e59f0080 	ldr	r0, [pc, #128]	; 4001c990 <CyU3PUsbFlushEp+0xc0>
4001c90c:	ebffb5a1 	bl	40009f98 <_txe_mutex_get>
4001c910:	e3140080 	tst	r4, #128	; 0x80
4001c914:	0a00000c 	beq	4001c94c <CyU3PUsbFlushEp+0x7c>
4001c918:	e59f0074 	ldr	r0, [pc, #116]	; 4001c994 <CyU3PUsbFlushEp+0xc4>
4001c91c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c920:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c924:	e59f1068 	ldr	r1, [pc, #104]	; 4001c994 <CyU3PUsbFlushEp+0xc4>
4001c928:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c92c:	e3a0000a 	mov	r0, #10
4001c930:	ebffdabb 	bl	40013424 <CyU3PBusyWait>
4001c934:	e59f0058 	ldr	r0, [pc, #88]	; 4001c994 <CyU3PUsbFlushEp+0xc4>
4001c938:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c93c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c940:	e59f104c 	ldr	r1, [pc, #76]	; 4001c994 <CyU3PUsbFlushEp+0xc4>
4001c944:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c948:	ea00000b 	b	4001c97c <CyU3PUsbFlushEp+0xac>
4001c94c:	e59f0044 	ldr	r0, [pc, #68]	; 4001c998 <CyU3PUsbFlushEp+0xc8>
4001c950:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c954:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c958:	e59f1038 	ldr	r1, [pc, #56]	; 4001c998 <CyU3PUsbFlushEp+0xc8>
4001c95c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c960:	e3a0000a 	mov	r0, #10
4001c964:	ebffdaae 	bl	40013424 <CyU3PBusyWait>
4001c968:	e59f0028 	ldr	r0, [pc, #40]	; 4001c998 <CyU3PUsbFlushEp+0xc8>
4001c96c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c970:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c974:	e59f101c 	ldr	r1, [pc, #28]	; 4001c998 <CyU3PUsbFlushEp+0xc8>
4001c978:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c97c:	e59f000c 	ldr	r0, [pc, #12]	; 4001c990 <CyU3PUsbFlushEp+0xc0>
4001c980:	ebffb5b9 	bl	4000a06c <_txe_mutex_put>
4001c984:	e3a00000 	mov	r0, #0
4001c988:	eaffffd8 	b	4001c8f0 <CyU3PUsbFlushEp+0x20>
4001c98c:	40031d40 	.word	0x40031d40
4001c990:	40031ee0 	.word	0x40031ee0
4001c994:	e0031c40 	.word	0xe0031c40
4001c998:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001c99c <CyU3PUsbGetEP0Data>:
4001c99c:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001c9a0:	e1a04000 	mov	r4, r0
4001c9a4:	e1a05001 	mov	r5, r1
4001c9a8:	e1a06002 	mov	r6, r2
4001c9ac:	e59f8198 	ldr	r8, [pc, #408]	; 4001cb4c <CyU3PUsbGetEP0Data+0x1b0>
4001c9b0:	e59f0198 	ldr	r0, [pc, #408]	; 4001cb50 <CyU3PUsbGetEP0Data+0x1b4>
4001c9b4:	e5d00008 	ldrb	r0, [r0, #8]
4001c9b8:	e3500000 	cmp	r0, #0
4001c9bc:	1a000001 	bne	4001c9c8 <CyU3PUsbGetEP0Data+0x2c>
4001c9c0:	e3a00042 	mov	r0, #66	; 0x42
4001c9c4:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001c9c8:	e3550000 	cmp	r5, #0
4001c9cc:	1a000001 	bne	4001c9d8 <CyU3PUsbGetEP0Data+0x3c>
4001c9d0:	e3a00040 	mov	r0, #64	; 0x40
4001c9d4:	eafffffa 	b	4001c9c4 <CyU3PUsbGetEP0Data+0x28>
4001c9d8:	e3e01000 	mvn	r1, #0
4001c9dc:	e59f0170 	ldr	r0, [pc, #368]	; 4001cb54 <CyU3PUsbGetEP0Data+0x1b8>
4001c9e0:	ebffb56c 	bl	40009f98 <_txe_mutex_get>
4001c9e4:	e284000f 	add	r0, r4, #15
4001c9e8:	e59f1168 	ldr	r1, [pc, #360]	; 4001cb58 <CyU3PUsbGetEP0Data+0x1bc>
4001c9ec:	e0004001 	and	r4, r0, r1
4001c9f0:	e59f0164 	ldr	r0, [pc, #356]	; 4001cb5c <CyU3PUsbGetEP0Data+0x1c0>
4001c9f4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001c9f8:	e3c00008 	bic	r0, r0, #8
4001c9fc:	e59f1158 	ldr	r1, [pc, #344]	; 4001cb5c <CyU3PUsbGetEP0Data+0x1c0>
4001ca00:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca04:	e59f0144 	ldr	r0, [pc, #324]	; 4001cb50 <CyU3PUsbGetEP0Data+0x1b4>
4001ca08:	e5900018 	ldr	r0, [r0, #24]
4001ca0c:	e3500000 	cmp	r0, #0
4001ca10:	1a000002 	bne	4001ca20 <CyU3PUsbGetEP0Data+0x84>
4001ca14:	eb00005a 	bl	4001cb84 <CyU3PUsbIsNewCtrlRqtRecvd>
4001ca18:	e3500000 	cmp	r0, #0
4001ca1c:	0a000008 	beq	4001ca44 <CyU3PUsbGetEP0Data+0xa8>
4001ca20:	e59f0134 	ldr	r0, [pc, #308]	; 4001cb5c <CyU3PUsbGetEP0Data+0x1c0>
4001ca24:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca28:	e3800008 	orr	r0, r0, #8
4001ca2c:	e59f1128 	ldr	r1, [pc, #296]	; 4001cb5c <CyU3PUsbGetEP0Data+0x1c0>
4001ca30:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca34:	e59f0118 	ldr	r0, [pc, #280]	; 4001cb54 <CyU3PUsbGetEP0Data+0x1b8>
4001ca38:	ebffb58b 	bl	4000a06c <_txe_mutex_put>
4001ca3c:	e3a00051 	mov	r0, #81	; 0x51
4001ca40:	eaffffdf 	b	4001c9c4 <CyU3PUsbGetEP0Data+0x28>
4001ca44:	e59f0110 	ldr	r0, [pc, #272]	; 4001cb5c <CyU3PUsbGetEP0Data+0x1c0>
4001ca48:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca4c:	e3800008 	orr	r0, r0, #8
4001ca50:	e59f1104 	ldr	r1, [pc, #260]	; 4001cb5c <CyU3PUsbGetEP0Data+0x1c0>
4001ca54:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca58:	eb00062a 	bl	4001e308 <GetUsbLinkActive>
4001ca5c:	e1cd40b6 	strh	r4, [sp, #6]
4001ca60:	e58d5000 	str	r5, [sp]
4001ca64:	e3a00000 	mov	r0, #0
4001ca68:	e1cd00b8 	strh	r0, [sp, #8]
4001ca6c:	e1a0100d 	mov	r1, sp
4001ca70:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cb60 <CyU3PUsbGetEP0Data+0x1c4>
4001ca74:	ebffe75f 	bl	400167f8 <CyU3PDmaChannelSetupRecvBuffer>
4001ca78:	e20070ff 	and	r7, r0, #255	; 0xff
4001ca7c:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cb54 <CyU3PUsbGetEP0Data+0x1b8>
4001ca80:	ebffb579 	bl	4000a06c <_txe_mutex_put>
4001ca84:	e3570000 	cmp	r7, #0
4001ca88:	1a00002d 	bne	4001cb44 <CyU3PUsbGetEP0Data+0x1a8>
4001ca8c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cb50 <CyU3PUsbGetEP0Data+0x1b4>
4001ca90:	e5900014 	ldr	r0, [r0, #20]
4001ca94:	e3500000 	cmp	r0, #0
4001ca98:	0a000000 	beq	4001caa0 <CyU3PUsbGetEP0Data+0x104>
4001ca9c:	ebfffe93 	bl	4001c4f0 <CyU3PUsbAckSetup>
4001caa0:	ea00000e 	b	4001cae0 <CyU3PUsbGetEP0Data+0x144>
4001caa4:	e3a02064 	mov	r2, #100	; 0x64
4001caa8:	e1a0100d 	mov	r1, sp
4001caac:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cb60 <CyU3PUsbGetEP0Data+0x1c4>
4001cab0:	ebffe8b2 	bl	40016d80 <CyU3PDmaChannelWaitForRecvBuffer>
4001cab4:	e20070ff 	and	r7, r0, #255	; 0xff
4001cab8:	e3570045 	cmp	r7, #69	; 0x45
4001cabc:	1a000006 	bne	4001cadc <CyU3PUsbGetEP0Data+0x140>
4001cac0:	eb00002f 	bl	4001cb84 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cac4:	e3500000 	cmp	r0, #0
4001cac8:	0a000001 	beq	4001cad4 <CyU3PUsbGetEP0Data+0x138>
4001cacc:	e3a00051 	mov	r0, #81	; 0x51
4001cad0:	eaffffbb 	b	4001c9c4 <CyU3PUsbGetEP0Data+0x28>
4001cad4:	e2488064 	sub	r8, r8, #100	; 0x64
4001cad8:	ea000000 	b	4001cae0 <CyU3PUsbGetEP0Data+0x144>
4001cadc:	ea000001 	b	4001cae8 <CyU3PUsbGetEP0Data+0x14c>
4001cae0:	e3580000 	cmp	r8, #0
4001cae4:	1affffee 	bne	4001caa4 <CyU3PUsbGetEP0Data+0x108>
4001cae8:	e1a00000 	nop			; (mov r0, r0)
4001caec:	e3570000 	cmp	r7, #0
4001caf0:	0a00000f 	beq	4001cb34 <CyU3PUsbGetEP0Data+0x198>
4001caf4:	e3e01000 	mvn	r1, #0
4001caf8:	e59f0054 	ldr	r0, [pc, #84]	; 4001cb54 <CyU3PUsbGetEP0Data+0x1b8>
4001cafc:	ebffb525 	bl	40009f98 <_txe_mutex_get>
4001cb00:	e3a01001 	mov	r1, #1
4001cb04:	e3a00000 	mov	r0, #0
4001cb08:	eb000376 	bl	4001d8e8 <CyU3PUsbSetEpNak>
4001cb0c:	e3a00064 	mov	r0, #100	; 0x64
4001cb10:	ebffda43 	bl	40013424 <CyU3PBusyWait>
4001cb14:	e59f0044 	ldr	r0, [pc, #68]	; 4001cb60 <CyU3PUsbGetEP0Data+0x1c4>
4001cb18:	ebffe57b 	bl	4001610c <CyU3PDmaChannelReset>
4001cb1c:	e3a01000 	mov	r1, #0
4001cb20:	e1a00001 	mov	r0, r1
4001cb24:	eb00036f 	bl	4001d8e8 <CyU3PUsbSetEpNak>
4001cb28:	e59f0024 	ldr	r0, [pc, #36]	; 4001cb54 <CyU3PUsbGetEP0Data+0x1b8>
4001cb2c:	ebffb54e 	bl	4000a06c <_txe_mutex_put>
4001cb30:	ea000003 	b	4001cb44 <CyU3PUsbGetEP0Data+0x1a8>
4001cb34:	e3560000 	cmp	r6, #0
4001cb38:	0a000001 	beq	4001cb44 <CyU3PUsbGetEP0Data+0x1a8>
4001cb3c:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cb40:	e1c600b0 	strh	r0, [r6]
4001cb44:	e1a00007 	mov	r0, r7
4001cb48:	eaffff9d 	b	4001c9c4 <CyU3PUsbGetEP0Data+0x28>
4001cb4c:	00001388 	.word	0x00001388
4001cb50:	40031d40 	.word	0x40031d40
4001cb54:	40031ee0 	.word	0x40031ee0
4001cb58:	0000fff0 	.word	0x0000fff0
4001cb5c:	e0031000 	.word	0xe0031000
4001cb60:	40031b14 	.word	0x40031b14

Disassembly of section i.CyU3PUsbGetSpeed:

4001cb64 <CyU3PUsbGetSpeed>:
4001cb64:	e59f0004 	ldr	r0, [pc, #4]	; 4001cb70 <CyU3PUsbGetSpeed+0xc>
4001cb68:	e5d00009 	ldrb	r0, [r0, #9]
4001cb6c:	e12fff1e 	bx	lr
4001cb70:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001cb74 <CyU3PUsbHostIsStarted>:
4001cb74:	e59f0004 	ldr	r0, [pc, #4]	; 4001cb80 <CyU3PUsbHostIsStarted+0xc>
4001cb78:	e5900000 	ldr	r0, [r0]
4001cb7c:	e12fff1e 	bx	lr
4001cb80:	40030d60 	.word	0x40030d60

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001cb84 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001cb84:	e59f0038 	ldr	r0, [pc, #56]	; 4001cbc4 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001cb88:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001cb8c:	e3500000 	cmp	r0, #0
4001cb90:	1a000007 	bne	4001cbb4 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cb94:	e59f002c 	ldr	r0, [pc, #44]	; 4001cbc8 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001cb98:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001cb9c:	e3100040 	tst	r0, #64	; 0x40
4001cba0:	1a000003 	bne	4001cbb4 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cba4:	e59f0020 	ldr	r0, [pc, #32]	; 4001cbcc <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001cba8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001cbac:	e3100c02 	tst	r0, #512	; 0x200
4001cbb0:	0a000001 	beq	4001cbbc <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001cbb4:	e3a00001 	mov	r0, #1
4001cbb8:	e12fff1e 	bx	lr
4001cbbc:	e3a00000 	mov	r0, #0
4001cbc0:	eafffffc 	b	4001cbb8 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001cbc4:	40031d40 	.word	0x40031d40
4001cbc8:	e0031000 	.word	0xe0031000
4001cbcc:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001cbd0 <CyU3PUsbLoadBootloaderDescs>:
4001cbd0:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001cbd4:	e1a04000 	mov	r4, r0
4001cbd8:	e3a06000 	mov	r6, #0
4001cbdc:	e5940008 	ldr	r0, [r4, #8]
4001cbe0:	e20070ff 	and	r7, r0, #255	; 0xff
4001cbe4:	e1a00000 	nop			; (mov r0, r0)
4001cbe8:	ea00000f 	b	4001cc2c <CyU3PUsbLoadBootloaderDescs+0x5c>
4001cbec:	e2843010 	add	r3, r4, #16
4001cbf0:	e0833186 	add	r3, r3, r6, lsl #3
4001cbf4:	e5932004 	ldr	r2, [r3, #4]
4001cbf8:	e2843010 	add	r3, r4, #16
4001cbfc:	e0833186 	add	r3, r3, r6, lsl #3
4001cc00:	e5d31001 	ldrb	r1, [r3, #1]
4001cc04:	e2843010 	add	r3, r4, #16
4001cc08:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001cc0c:	eb0002bf 	bl	4001d710 <CyU3PUsbSetDesc>
4001cc10:	e1a05000 	mov	r5, r0
4001cc14:	e3550000 	cmp	r5, #0
4001cc18:	0a000001 	beq	4001cc24 <CyU3PUsbLoadBootloaderDescs+0x54>
4001cc1c:	e1a00005 	mov	r0, r5
4001cc20:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001cc24:	e2860001 	add	r0, r6, #1
4001cc28:	e20060ff 	and	r6, r0, #255	; 0xff
4001cc2c:	e1560007 	cmp	r6, r7
4001cc30:	baffffed 	blt	4001cbec <CyU3PUsbLoadBootloaderDescs+0x1c>
4001cc34:	e3a00000 	mov	r0, #0
4001cc38:	eafffff8 	b	4001cc20 <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001cc3c <CyU3PUsbMapStream>:
4001cc3c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cc40:	e1a03000 	mov	r3, r0
4001cc44:	e203c07f 	and	ip, r3, #127	; 0x7f
4001cc48:	e59f005c 	ldr	r0, [pc, #92]	; 4001ccac <CyU3PUsbMapStream+0x70>
4001cc4c:	e5d00008 	ldrb	r0, [r0, #8]
4001cc50:	e3500000 	cmp	r0, #0
4001cc54:	1a000001 	bne	4001cc60 <CyU3PUsbMapStream+0x24>
4001cc58:	e3a00042 	mov	r0, #66	; 0x42
4001cc5c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001cc60:	e35c000f 	cmp	ip, #15
4001cc64:	da000001 	ble	4001cc70 <CyU3PUsbMapStream+0x34>
4001cc68:	e3a00040 	mov	r0, #64	; 0x40
4001cc6c:	eafffffa 	b	4001cc5c <CyU3PUsbMapStream+0x20>
4001cc70:	e3130080 	tst	r3, #128	; 0x80
4001cc74:	0a000005 	beq	4001cc90 <CyU3PUsbMapStream+0x54>
4001cc78:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cc7c:	e180080c 	orr	r0, r0, ip, lsl #16
4001cc80:	e1800002 	orr	r0, r0, r2
4001cc84:	e59fe024 	ldr	lr, [pc, #36]	; 4001ccb0 <CyU3PUsbMapStream+0x74>
4001cc88:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cc8c:	ea000004 	b	4001cca4 <CyU3PUsbMapStream+0x68>
4001cc90:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cc94:	e180080c 	orr	r0, r0, ip, lsl #16
4001cc98:	e1800002 	orr	r0, r0, r2
4001cc9c:	e59fe010 	ldr	lr, [pc, #16]	; 4001ccb4 <CyU3PUsbMapStream+0x78>
4001cca0:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cca4:	e3a00000 	mov	r0, #0
4001cca8:	eaffffeb 	b	4001cc5c <CyU3PUsbMapStream+0x20>
4001ccac:	40031d40 	.word	0x40031d40
4001ccb0:	e00335c0 	.word	0xe00335c0
4001ccb4:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001ccb8 <CyU3PUsbOtgVbusChangeHandler>:
4001ccb8:	e92d4010 	push	{r4, lr}
4001ccbc:	e3a04000 	mov	r4, #0
4001ccc0:	e59f0094 	ldr	r0, [pc, #148]	; 4001cd5c <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001ccc4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001ccc8:	e3500000 	cmp	r0, #0
4001cccc:	0a000005 	beq	4001cce8 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001ccd0:	e59f0088 	ldr	r0, [pc, #136]	; 4001cd60 <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001ccd4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001ccd8:	e59f107c 	ldr	r1, [pc, #124]	; 4001cd5c <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001ccdc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001cce0:	e1100001 	tst	r0, r1
4001cce4:	0a000008 	beq	4001cd0c <CyU3PUsbOtgVbusChangeHandler+0x54>
4001cce8:	e3a04001 	mov	r4, #1
4001ccec:	e3a00018 	mov	r0, #24
4001ccf0:	e59f106c 	ldr	r1, [pc, #108]	; 4001cd64 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001ccf4:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ccf8:	e1c10000 	bic	r0, r1, r0
4001ccfc:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cd00:	e3c00018 	bic	r0, r0, #24
4001cd04:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cd08:	ea000009 	b	4001cd34 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cd0c:	ebfffbb2 	bl	4001bbdc <CyU3POtgIsHostMode>
4001cd10:	e3500000 	cmp	r0, #0
4001cd14:	0a000006 	beq	4001cd34 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cd18:	e3a00018 	mov	r0, #24
4001cd1c:	e59f1040 	ldr	r1, [pc, #64]	; 4001cd64 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cd20:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cd24:	e1c10000 	bic	r0, r1, r0
4001cd28:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cd2c:	e3800018 	orr	r0, r0, #24
4001cd30:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cd34:	e59f002c 	ldr	r0, [pc, #44]	; 4001cd68 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cd38:	e5900004 	ldr	r0, [r0, #4]
4001cd3c:	e3500000 	cmp	r0, #0
4001cd40:	0a000004 	beq	4001cd58 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001cd44:	e59f001c 	ldr	r0, [pc, #28]	; 4001cd68 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cd48:	e1a01004 	mov	r1, r4
4001cd4c:	e5902004 	ldr	r2, [r0, #4]
4001cd50:	e3a00002 	mov	r0, #2
4001cd54:	e12fff32 	blx	r2
4001cd58:	e8bd8010 	pop	{r4, pc}
4001cd5c:	40031d40 	.word	0x40031d40
4001cd60:	e0051000 	.word	0xe0051000
4001cd64:	e0031000 	.word	0xe0031000
4001cd68:	40030d58 	.word	0x40030d58

Disassembly of section i.CyU3PUsbPhyDisable:

4001cd6c <CyU3PUsbPhyDisable>:
4001cd6c:	e92d4010 	push	{r4, lr}
4001cd70:	e1a04000 	mov	r4, r0
4001cd74:	e2841003 	add	r1, r4, #3
4001cd78:	e20100ff 	and	r0, r1, #255	; 0xff
4001cd7c:	eb000af4 	bl	4001f954 <CyU3PUsbAddToEventLog>
4001cd80:	e3a00000 	mov	r0, #0
4001cd84:	e59f1184 	ldr	r1, [pc, #388]	; 4001cf10 <CyU3PUsbPhyDisable+0x1a4>
4001cd88:	e5810000 	str	r0, [r1]
4001cd8c:	e59f0180 	ldr	r0, [pc, #384]	; 4001cf14 <CyU3PUsbPhyDisable+0x1a8>
4001cd90:	ebffb762 	bl	4000ab20 <_txe_timer_deactivate>
4001cd94:	e3a00008 	mov	r0, #8
4001cd98:	eb00141f 	bl	40021e1c <CyU3PVicDisableInt>
4001cd9c:	e59f0174 	ldr	r0, [pc, #372]	; 4001cf18 <CyU3PUsbPhyDisable+0x1ac>
4001cda0:	e5900004 	ldr	r0, [r0, #4]
4001cda4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001cda8:	e59f1168 	ldr	r1, [pc, #360]	; 4001cf18 <CyU3PUsbPhyDisable+0x1ac>
4001cdac:	e5810004 	str	r0, [r1, #4]
4001cdb0:	e3e00000 	mvn	r0, #0
4001cdb4:	e0411600 	sub	r1, r1, r0, lsl #12
4001cdb8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cdbc:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cdc0:	e59f0154 	ldr	r0, [pc, #340]	; 4001cf1c <CyU3PUsbPhyDisable+0x1b0>
4001cdc4:	ebffe4d0 	bl	4001610c <CyU3PDmaChannelReset>
4001cdc8:	e59f0150 	ldr	r0, [pc, #336]	; 4001cf20 <CyU3PUsbPhyDisable+0x1b4>
4001cdcc:	ebffe4ce 	bl	4001610c <CyU3PDmaChannelReset>
4001cdd0:	e3540000 	cmp	r4, #0
4001cdd4:	0a00002b 	beq	4001ce88 <CyU3PUsbPhyDisable+0x11c>
4001cdd8:	e3a00001 	mov	r0, #1
4001cddc:	e59f1140 	ldr	r1, [pc, #320]	; 4001cf24 <CyU3PUsbPhyDisable+0x1b8>
4001cde0:	e5810060 	str	r0, [r1, #96]	; 0x60
4001cde4:	ebffb68c 	bl	4000a81c <_txe_thread_relinquish>
4001cde8:	e3e00000 	mvn	r0, #0
4001cdec:	e59f1134 	ldr	r1, [pc, #308]	; 4001cf28 <CyU3PUsbPhyDisable+0x1bc>
4001cdf0:	e5810004 	str	r0, [r1, #4]
4001cdf4:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001cdf8:	e0010000 	and	r0, r1, r0
4001cdfc:	e5900014 	ldr	r0, [r0, #20]
4001ce00:	e59f1124 	ldr	r1, [pc, #292]	; 4001cf2c <CyU3PUsbPhyDisable+0x1c0>
4001ce04:	e5810000 	str	r0, [r1]
4001ce08:	e3a00000 	mov	r0, #0
4001ce0c:	e59f111c 	ldr	r1, [pc, #284]	; 4001cf30 <CyU3PUsbPhyDisable+0x1c4>
4001ce10:	e5810000 	str	r0, [r1]
4001ce14:	e3a01000 	mov	r1, #0
4001ce18:	e59f0114 	ldr	r0, [pc, #276]	; 4001cf34 <CyU3PUsbPhyDisable+0x1c8>
4001ce1c:	eb00146d 	bl	40021fd8 <CyFx3UsbWritePhyReg>
4001ce20:	e3a01002 	mov	r1, #2
4001ce24:	e1a00001 	mov	r0, r1
4001ce28:	ebfffd1d 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
4001ce2c:	e3a00002 	mov	r0, #2
4001ce30:	ebffd97b 	bl	40013424 <CyU3PBusyWait>
4001ce34:	e59f00fc 	ldr	r0, [pc, #252]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001ce38:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ce3c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ce40:	e59f10f0 	ldr	r1, [pc, #240]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001ce44:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ce48:	e3a00002 	mov	r0, #2
4001ce4c:	ebffd974 	bl	40013424 <CyU3PBusyWait>
4001ce50:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001ce54:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ce58:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001ce5c:	e59f10d4 	ldr	r1, [pc, #212]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001ce60:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ce64:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001ce68:	e590001c 	ldr	r0, [r0, #28]
4001ce6c:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ce70:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001ce74:	e581001c 	str	r0, [r1, #28]
4001ce78:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cf3c <CyU3PUsbPhyDisable+0x1d0>
4001ce7c:	e5900000 	ldr	r0, [r0]
4001ce80:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ce84:	ea00000e 	b	4001cec4 <CyU3PUsbPhyDisable+0x158>
4001ce88:	e59f00a8 	ldr	r0, [pc, #168]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001ce8c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001ce90:	e3800008 	orr	r0, r0, #8
4001ce94:	e59f109c 	ldr	r1, [pc, #156]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001ce98:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001ce9c:	e3a01002 	mov	r1, #2
4001cea0:	e1a00001 	mov	r0, r1
4001cea4:	ebfffcfe 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
4001cea8:	e3a00002 	mov	r0, #2
4001ceac:	ebffd95c 	bl	40013424 <CyU3PBusyWait>
4001ceb0:	e59f0080 	ldr	r0, [pc, #128]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001ceb4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ceb8:	e2000001 	and	r0, r0, #1
4001cebc:	e59f1074 	ldr	r1, [pc, #116]	; 4001cf38 <CyU3PUsbPhyDisable+0x1cc>
4001cec0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cec4:	e59f0074 	ldr	r0, [pc, #116]	; 4001cf40 <CyU3PUsbPhyDisable+0x1d4>
4001cec8:	e5900000 	ldr	r0, [r0]
4001cecc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001ced0:	e59f1068 	ldr	r1, [pc, #104]	; 4001cf40 <CyU3PUsbPhyDisable+0x1d4>
4001ced4:	e5810000 	str	r0, [r1]
4001ced8:	e3a00000 	mov	r0, #0
4001cedc:	e59f1040 	ldr	r1, [pc, #64]	; 4001cf24 <CyU3PUsbPhyDisable+0x1b8>
4001cee0:	e5c10009 	strb	r0, [r1, #9]
4001cee4:	ebfffb6c 	bl	4001bc9c <CyU3POtgIsStarted>
4001cee8:	e3500000 	cmp	r0, #0
4001ceec:	0a000006 	beq	4001cf0c <CyU3PUsbPhyDisable+0x1a0>
4001cef0:	e3a00064 	mov	r0, #100	; 0x64
4001cef4:	ebffd94a 	bl	40013424 <CyU3PBusyWait>
4001cef8:	e59f0040 	ldr	r0, [pc, #64]	; 4001cf40 <CyU3PUsbPhyDisable+0x1d4>
4001cefc:	e5900000 	ldr	r0, [r0]
4001cf00:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cf04:	e59f1034 	ldr	r1, [pc, #52]	; 4001cf40 <CyU3PUsbPhyDisable+0x1d4>
4001cf08:	e5810000 	str	r0, [r1]
4001cf0c:	e8bd8010 	pop	{r4, pc}
4001cf10:	40030db4 	.word	0x40030db4
4001cf14:	400326a0 	.word	0x400326a0
4001cf18:	e0030000 	.word	0xe0030000
4001cf1c:	40031a74 	.word	0x40031a74
4001cf20:	40031b14 	.word	0x40031b14
4001cf24:	40031d40 	.word	0x40031d40
4001cf28:	e0033000 	.word	0xe0033000
4001cf2c:	40030d88 	.word	0x40030d88
4001cf30:	40030db8 	.word	0x40030db8
4001cf34:	00001005 	.word	0x00001005
4001cf38:	e0031000 	.word	0xe0031000
4001cf3c:	40030c5c 	.word	0x40030c5c
4001cf40:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001cf44 <CyU3PUsbPhyEnable>:
4001cf44:	e92d4070 	push	{r4, r5, r6, lr}
4001cf48:	e1a04000 	mov	r4, r0
4001cf4c:	e2841005 	add	r1, r4, #5
4001cf50:	e20100ff 	and	r0, r1, #255	; 0xff
4001cf54:	eb000a7e 	bl	4001f954 <CyU3PUsbAddToEventLog>
4001cf58:	e3e00000 	mvn	r0, #0
4001cf5c:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001cf60:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cf64:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cf68:	e3a00008 	mov	r0, #8
4001cf6c:	eb0013af 	bl	40021e30 <CyU3PVicEnableInt>
4001cf70:	e3a00009 	mov	r0, #9
4001cf74:	eb0013ad 	bl	40021e30 <CyU3PVicEnableInt>
4001cf78:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d220 <CyU3PUsbPhyEnable+0x2dc>
4001cf7c:	e5900004 	ldr	r0, [r0, #4]
4001cf80:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001cf84:	e59f1294 	ldr	r1, [pc, #660]	; 4001d220 <CyU3PUsbPhyEnable+0x2dc>
4001cf88:	e5810004 	str	r0, [r1, #4]
4001cf8c:	e2810802 	add	r0, r1, #131072	; 0x20000
4001cf90:	e5900000 	ldr	r0, [r0]
4001cf94:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cf98:	e2811802 	add	r1, r1, #131072	; 0x20000
4001cf9c:	e5810000 	str	r0, [r1]
4001cfa0:	e3540000 	cmp	r4, #0
4001cfa4:	0a000069 	beq	4001d150 <CyU3PUsbPhyEnable+0x20c>
4001cfa8:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001cfac:	e5900014 	ldr	r0, [r0, #20]
4001cfb0:	e59f126c 	ldr	r1, [pc, #620]	; 4001d224 <CyU3PUsbPhyEnable+0x2e0>
4001cfb4:	e5810000 	str	r0, [r1]
4001cfb8:	e3a00000 	mov	r0, #0
4001cfbc:	e59f1264 	ldr	r1, [pc, #612]	; 4001d228 <CyU3PUsbPhyEnable+0x2e4>
4001cfc0:	e5810000 	str	r0, [r1]
4001cfc4:	e3e00000 	mvn	r0, #0
4001cfc8:	e59f125c 	ldr	r1, [pc, #604]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001cfcc:	e5810004 	str	r0, [r1, #4]
4001cfd0:	e59f0258 	ldr	r0, [pc, #600]	; 4001d230 <CyU3PUsbPhyEnable+0x2ec>
4001cfd4:	e5810008 	str	r0, [r1, #8]
4001cfd8:	e3e00000 	mvn	r0, #0
4001cfdc:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001cfe0:	e59f024c 	ldr	r0, [pc, #588]	; 4001d234 <CyU3PUsbPhyEnable+0x2f0>
4001cfe4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001cfe8:	e59f0248 	ldr	r0, [pc, #584]	; 4001d238 <CyU3PUsbPhyEnable+0x2f4>
4001cfec:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001cff0:	e3500000 	cmp	r0, #0
4001cff4:	0a000003 	beq	4001d008 <CyU3PUsbPhyEnable+0xc4>
4001cff8:	e1a00001 	mov	r0, r1
4001cffc:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d000:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d004:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d008:	e3a00000 	mov	r0, #0
4001d00c:	e59f1224 	ldr	r1, [pc, #548]	; 4001d238 <CyU3PUsbPhyEnable+0x2f4>
4001d010:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d014:	e59f0220 	ldr	r0, [pc, #544]	; 4001d23c <CyU3PUsbPhyEnable+0x2f8>
4001d018:	e5900000 	ldr	r0, [r0]
4001d01c:	e3500000 	cmp	r0, #0
4001d020:	0a000003 	beq	4001d034 <CyU3PUsbPhyEnable+0xf0>
4001d024:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d028:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d02c:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d030:	ea000002 	b	4001d040 <CyU3PUsbPhyEnable+0xfc>
4001d034:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d038:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d03c:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d040:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d240 <CyU3PUsbPhyEnable+0x2fc>
4001d044:	e5900000 	ldr	r0, [r0]
4001d048:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d04c:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d050:	eb00139a 	bl	40021ec0 <CyFx3Usb3LnkSetup>
4001d054:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d244 <CyU3PUsbPhyEnable+0x300>
4001d058:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d05c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d060:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d064:	e1c10000 	bic	r0, r1, r0
4001d068:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d06c:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d070:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d074:	e3a00000 	mov	r0, #0
4001d078:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d238 <CyU3PUsbPhyEnable+0x2f4>
4001d07c:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d080:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d084:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d088:	e581001c 	str	r0, [r1, #28]
4001d08c:	e3a01002 	mov	r1, #2
4001d090:	e1a00001 	mov	r0, r1
4001d094:	ebfffc82 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
4001d098:	eb00135b 	bl	40021e0c <CyU3PVicDisableAllInterrupts>
4001d09c:	e1a05000 	mov	r5, r0
4001d0a0:	e3a00000 	mov	r0, #0
4001d0a4:	e59f119c 	ldr	r1, [pc, #412]	; 4001d248 <CyU3PUsbPhyEnable+0x304>
4001d0a8:	e5810000 	str	r0, [r1]
4001d0ac:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d0b0:	e59f1174 	ldr	r1, [pc, #372]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d0b4:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d0b8:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d0bc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d0c0:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d0c4:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d0c8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d0cc:	e3a00064 	mov	r0, #100	; 0x64
4001d0d0:	ebffd8d3 	bl	40013424 <CyU3PBusyWait>
4001d0d4:	e59f0150 	ldr	r0, [pc, #336]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d0d8:	e5900000 	ldr	r0, [r0]
4001d0dc:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d0e0:	e59f1144 	ldr	r1, [pc, #324]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d0e4:	e5810000 	str	r0, [r1]
4001d0e8:	e59f015c 	ldr	r0, [pc, #348]	; 4001d24c <CyU3PUsbPhyEnable+0x308>
4001d0ec:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d0f0:	e3a01080 	mov	r1, #128	; 0x80
4001d0f4:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d0f8:	eb0013b6 	bl	40021fd8 <CyFx3UsbWritePhyReg>
4001d0fc:	e3a01d06 	mov	r1, #384	; 0x180
4001d100:	e59f0148 	ldr	r0, [pc, #328]	; 4001d250 <CyU3PUsbPhyEnable+0x30c>
4001d104:	eb0013b3 	bl	40021fd8 <CyFx3UsbWritePhyReg>
4001d108:	e3a01080 	mov	r1, #128	; 0x80
4001d10c:	e59f0140 	ldr	r0, [pc, #320]	; 4001d254 <CyU3PUsbPhyEnable+0x310>
4001d110:	eb0013b0 	bl	40021fd8 <CyFx3UsbWritePhyReg>
4001d114:	e1a00005 	mov	r0, r5
4001d118:	eb001349 	bl	40021e44 <CyU3PVicEnableInterrupts>
4001d11c:	e59f0108 	ldr	r0, [pc, #264]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d120:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d124:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d128:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d22c <CyU3PUsbPhyEnable+0x2e8>
4001d12c:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d130:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d134:	e581001c 	str	r0, [r1, #28]
4001d138:	e3a00064 	mov	r0, #100	; 0x64
4001d13c:	ebffd8b8 	bl	40013424 <CyU3PBusyWait>
4001d140:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d144:	e59f110c 	ldr	r1, [pc, #268]	; 4001d258 <CyU3PUsbPhyEnable+0x314>
4001d148:	e5810008 	str	r0, [r1, #8]
4001d14c:	ea000031 	b	4001d218 <CyU3PUsbPhyEnable+0x2d4>
4001d150:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d238 <CyU3PUsbPhyEnable+0x2f4>
4001d154:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d158:	e3500000 	cmp	r0, #0
4001d15c:	0a000000 	beq	4001d164 <CyU3PUsbPhyEnable+0x220>
4001d160:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d164:	e3a00001 	mov	r0, #1
4001d168:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d238 <CyU3PUsbPhyEnable+0x2f4>
4001d16c:	e5c10009 	strb	r0, [r1, #9]
4001d170:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d174:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d25c <CyU3PUsbPhyEnable+0x318>
4001d178:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d17c:	e3a00000 	mov	r0, #0
4001d180:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d238 <CyU3PUsbPhyEnable+0x2f4>
4001d184:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d188:	e59f008c 	ldr	r0, [pc, #140]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001d18c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d190:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d194:	e59f1080 	ldr	r1, [pc, #128]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001d198:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d19c:	e1a00001 	mov	r0, r1
4001d1a0:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d1a4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d1a8:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d1ac:	e3a00002 	mov	r0, #2
4001d1b0:	ebffd89b 	bl	40013424 <CyU3PBusyWait>
4001d1b4:	e59f0060 	ldr	r0, [pc, #96]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001d1b8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d1bc:	e2000001 	and	r0, r0, #1
4001d1c0:	e59f1054 	ldr	r1, [pc, #84]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001d1c4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1c8:	e1a00001 	mov	r0, r1
4001d1cc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d1d0:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d1d4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d1d8:	e3a00064 	mov	r0, #100	; 0x64
4001d1dc:	ebffd890 	bl	40013424 <CyU3PBusyWait>
4001d1e0:	eb00132a 	bl	40021e90 <CyFx3Usb2PhySetup>
4001d1e4:	e59f0074 	ldr	r0, [pc, #116]	; 4001d260 <CyU3PUsbPhyEnable+0x31c>
4001d1e8:	e59f102c 	ldr	r1, [pc, #44]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001d1ec:	e5810008 	str	r0, [r1, #8]
4001d1f0:	e3a00050 	mov	r0, #80	; 0x50
4001d1f4:	ebffd88a 	bl	40013424 <CyU3PBusyWait>
4001d1f8:	e3a01000 	mov	r1, #0
4001d1fc:	e3a00002 	mov	r0, #2
4001d200:	ebfffc27 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
4001d204:	e59f0010 	ldr	r0, [pc, #16]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001d208:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d20c:	e3c00008 	bic	r0, r0, #8
4001d210:	e59f1004 	ldr	r1, [pc, #4]	; 4001d21c <CyU3PUsbPhyEnable+0x2d8>
4001d214:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d218:	eaffffd0 	b	4001d160 <CyU3PUsbPhyEnable+0x21c>
4001d21c:	e0031000 	.word	0xe0031000
4001d220:	e0030000 	.word	0xe0030000
4001d224:	40030d88 	.word	0x40030d88
4001d228:	40030db8 	.word	0x40030db8
4001d22c:	e0033000 	.word	0xe0033000
4001d230:	00038081 	.word	0x00038081
4001d234:	00004a3d 	.word	0x00004a3d
4001d238:	40031d40 	.word	0x40031d40
4001d23c:	40030d44 	.word	0x40030d44
4001d240:	40030d90 	.word	0x40030d90
4001d244:	00000908 	.word	0x00000908
4001d248:	40030d78 	.word	0x40030d78
4001d24c:	00310418 	.word	0x00310418
4001d250:	00001006 	.word	0x00001006
4001d254:	00001024 	.word	0x00001024
4001d258:	e0052000 	.word	0xe0052000
4001d25c:	e0032000 	.word	0xe0032000
4001d260:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d264 <CyU3PUsbPowerOn>:
4001d264:	e92d4010 	push	{r4, lr}
4001d268:	eb00133a 	bl	40021f58 <CyFx3UsbPowerOn>
4001d26c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d270 <CyU3PUsbResetEp>:
4001d270:	e92d4070 	push	{r4, r5, r6, lr}
4001d274:	e1a04000 	mov	r4, r0
4001d278:	e204507f 	and	r5, r4, #127	; 0x7f
4001d27c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d340 <CyU3PUsbResetEp+0xd0>
4001d280:	e5d00008 	ldrb	r0, [r0, #8]
4001d284:	e3500000 	cmp	r0, #0
4001d288:	1a000001 	bne	4001d294 <CyU3PUsbResetEp+0x24>
4001d28c:	e3a00042 	mov	r0, #66	; 0x42
4001d290:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d294:	e355000f 	cmp	r5, #15
4001d298:	da000001 	ble	4001d2a4 <CyU3PUsbResetEp+0x34>
4001d29c:	e3a00040 	mov	r0, #64	; 0x40
4001d2a0:	eafffffa 	b	4001d290 <CyU3PUsbResetEp+0x20>
4001d2a4:	e3e01000 	mvn	r1, #0
4001d2a8:	e59f0094 	ldr	r0, [pc, #148]	; 4001d344 <CyU3PUsbResetEp+0xd4>
4001d2ac:	ebffb339 	bl	40009f98 <_txe_mutex_get>
4001d2b0:	ebfffe2b 	bl	4001cb64 <CyU3PUsbGetSpeed>
4001d2b4:	e3500003 	cmp	r0, #3
4001d2b8:	1a00001c 	bne	4001d330 <CyU3PUsbResetEp+0xc0>
4001d2bc:	e59f0084 	ldr	r0, [pc, #132]	; 4001d348 <CyU3PUsbResetEp+0xd8>
4001d2c0:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d2c4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d2c8:	e59f1078 	ldr	r1, [pc, #120]	; 4001d348 <CyU3PUsbResetEp+0xd8>
4001d2cc:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d2d0:	e3140080 	tst	r4, #128	; 0x80
4001d2d4:	0a00000a 	beq	4001d304 <CyU3PUsbResetEp+0x94>
4001d2d8:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d2dc:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d2e0:	e3866011 	orr	r6, r6, #17
4001d2e4:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d2e8:	e3a00002 	mov	r0, #2
4001d2ec:	ebffd84c 	bl	40013424 <CyU3PBusyWait>
4001d2f0:	e3c60010 	bic	r0, r6, #16
4001d2f4:	e3806001 	orr	r6, r0, #1
4001d2f8:	e59f004c 	ldr	r0, [pc, #76]	; 4001d34c <CyU3PUsbResetEp+0xdc>
4001d2fc:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d300:	ea00000a 	b	4001d330 <CyU3PUsbResetEp+0xc0>
4001d304:	e59f0044 	ldr	r0, [pc, #68]	; 4001d350 <CyU3PUsbResetEp+0xe0>
4001d308:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d30c:	e3806011 	orr	r6, r0, #17
4001d310:	e59f0038 	ldr	r0, [pc, #56]	; 4001d350 <CyU3PUsbResetEp+0xe0>
4001d314:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d318:	e3a00002 	mov	r0, #2
4001d31c:	ebffd840 	bl	40013424 <CyU3PBusyWait>
4001d320:	e3c60010 	bic	r0, r6, #16
4001d324:	e3806001 	orr	r6, r0, #1
4001d328:	e59f0020 	ldr	r0, [pc, #32]	; 4001d350 <CyU3PUsbResetEp+0xe0>
4001d32c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d330:	e59f000c 	ldr	r0, [pc, #12]	; 4001d344 <CyU3PUsbResetEp+0xd4>
4001d334:	ebffb34c 	bl	4000a06c <_txe_mutex_put>
4001d338:	e3a00000 	mov	r0, #0
4001d33c:	eaffffd3 	b	4001d290 <CyU3PUsbResetEp+0x20>
4001d340:	40031d40 	.word	0x40031d40
4001d344:	40031ee0 	.word	0x40031ee0
4001d348:	e0033000 	.word	0xe0033000
4001d34c:	e0033500 	.word	0xe0033500
4001d350:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d354 <CyU3PUsbSendEP0Data>:
4001d354:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d358:	e1a04000 	mov	r4, r0
4001d35c:	e1a05001 	mov	r5, r1
4001d360:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d514 <CyU3PUsbSendEP0Data+0x1c0>
4001d364:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d518 <CyU3PUsbSendEP0Data+0x1c4>
4001d368:	e5d00008 	ldrb	r0, [r0, #8]
4001d36c:	e3500000 	cmp	r0, #0
4001d370:	1a000001 	bne	4001d37c <CyU3PUsbSendEP0Data+0x28>
4001d374:	e3a00042 	mov	r0, #66	; 0x42
4001d378:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d37c:	e3550000 	cmp	r5, #0
4001d380:	1a000001 	bne	4001d38c <CyU3PUsbSendEP0Data+0x38>
4001d384:	e3a00040 	mov	r0, #64	; 0x40
4001d388:	eafffffa 	b	4001d378 <CyU3PUsbSendEP0Data+0x24>
4001d38c:	e3e01000 	mvn	r1, #0
4001d390:	e59f0184 	ldr	r0, [pc, #388]	; 4001d51c <CyU3PUsbSendEP0Data+0x1c8>
4001d394:	ebffb2ff 	bl	40009f98 <_txe_mutex_get>
4001d398:	e59f0180 	ldr	r0, [pc, #384]	; 4001d520 <CyU3PUsbSendEP0Data+0x1cc>
4001d39c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d3a0:	e3c00008 	bic	r0, r0, #8
4001d3a4:	e59f1174 	ldr	r1, [pc, #372]	; 4001d520 <CyU3PUsbSendEP0Data+0x1cc>
4001d3a8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d3ac:	e59f0164 	ldr	r0, [pc, #356]	; 4001d518 <CyU3PUsbSendEP0Data+0x1c4>
4001d3b0:	e5900018 	ldr	r0, [r0, #24]
4001d3b4:	e3500000 	cmp	r0, #0
4001d3b8:	1a000002 	bne	4001d3c8 <CyU3PUsbSendEP0Data+0x74>
4001d3bc:	ebfffdf0 	bl	4001cb84 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d3c0:	e3500000 	cmp	r0, #0
4001d3c4:	0a000008 	beq	4001d3ec <CyU3PUsbSendEP0Data+0x98>
4001d3c8:	e59f0150 	ldr	r0, [pc, #336]	; 4001d520 <CyU3PUsbSendEP0Data+0x1cc>
4001d3cc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d3d0:	e3800008 	orr	r0, r0, #8
4001d3d4:	e59f1144 	ldr	r1, [pc, #324]	; 4001d520 <CyU3PUsbSendEP0Data+0x1cc>
4001d3d8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d3dc:	e59f0138 	ldr	r0, [pc, #312]	; 4001d51c <CyU3PUsbSendEP0Data+0x1c8>
4001d3e0:	ebffb321 	bl	4000a06c <_txe_mutex_put>
4001d3e4:	e3a00000 	mov	r0, #0
4001d3e8:	eaffffe2 	b	4001d378 <CyU3PUsbSendEP0Data+0x24>
4001d3ec:	e59f012c 	ldr	r0, [pc, #300]	; 4001d520 <CyU3PUsbSendEP0Data+0x1cc>
4001d3f0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d3f4:	e3800008 	orr	r0, r0, #8
4001d3f8:	e59f1120 	ldr	r1, [pc, #288]	; 4001d520 <CyU3PUsbSendEP0Data+0x1cc>
4001d3fc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d400:	e1a00001 	mov	r0, r1
4001d404:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d408:	e1500004 	cmp	r0, r4
4001d40c:	2a000003 	bcs	4001d420 <CyU3PUsbSendEP0Data+0xcc>
4001d410:	e1a00001 	mov	r0, r1
4001d414:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d418:	e1a04800 	lsl	r4, r0, #16
4001d41c:	e1a04824 	lsr	r4, r4, #16
4001d420:	eb0003b8 	bl	4001e308 <GetUsbLinkActive>
4001d424:	e1cd40b4 	strh	r4, [sp, #4]
4001d428:	e284000f 	add	r0, r4, #15
4001d42c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d524 <CyU3PUsbSendEP0Data+0x1d0>
4001d430:	e0000001 	and	r0, r0, r1
4001d434:	e1cd00b6 	strh	r0, [sp, #6]
4001d438:	e58d5000 	str	r5, [sp]
4001d43c:	e3a00000 	mov	r0, #0
4001d440:	e1cd00b8 	strh	r0, [sp, #8]
4001d444:	e1a0100d 	mov	r1, sp
4001d448:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d528 <CyU3PUsbSendEP0Data+0x1d4>
4001d44c:	ebffe571 	bl	40016a18 <CyU3PDmaChannelSetupSendBuffer>
4001d450:	e20060ff 	and	r6, r0, #255	; 0xff
4001d454:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d51c <CyU3PUsbSendEP0Data+0x1c8>
4001d458:	ebffb303 	bl	4000a06c <_txe_mutex_put>
4001d45c:	e3560000 	cmp	r6, #0
4001d460:	1a000029 	bne	4001d50c <CyU3PUsbSendEP0Data+0x1b8>
4001d464:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d518 <CyU3PUsbSendEP0Data+0x1c4>
4001d468:	e5900014 	ldr	r0, [r0, #20]
4001d46c:	e3500000 	cmp	r0, #0
4001d470:	0a000000 	beq	4001d478 <CyU3PUsbSendEP0Data+0x124>
4001d474:	ebfffc1d 	bl	4001c4f0 <CyU3PUsbAckSetup>
4001d478:	ea00000d 	b	4001d4b4 <CyU3PUsbSendEP0Data+0x160>
4001d47c:	e3a01064 	mov	r1, #100	; 0x64
4001d480:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d528 <CyU3PUsbSendEP0Data+0x1d4>
4001d484:	ebffe5f1 	bl	40016c50 <CyU3PDmaChannelWaitForCompletion>
4001d488:	e20060ff 	and	r6, r0, #255	; 0xff
4001d48c:	e3560045 	cmp	r6, #69	; 0x45
4001d490:	1a000006 	bne	4001d4b0 <CyU3PUsbSendEP0Data+0x15c>
4001d494:	ebfffdba 	bl	4001cb84 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d498:	e3500000 	cmp	r0, #0
4001d49c:	0a000001 	beq	4001d4a8 <CyU3PUsbSendEP0Data+0x154>
4001d4a0:	e3a00000 	mov	r0, #0
4001d4a4:	eaffffb3 	b	4001d378 <CyU3PUsbSendEP0Data+0x24>
4001d4a8:	e2477064 	sub	r7, r7, #100	; 0x64
4001d4ac:	ea000000 	b	4001d4b4 <CyU3PUsbSendEP0Data+0x160>
4001d4b0:	ea000001 	b	4001d4bc <CyU3PUsbSendEP0Data+0x168>
4001d4b4:	e3570000 	cmp	r7, #0
4001d4b8:	1affffef 	bne	4001d47c <CyU3PUsbSendEP0Data+0x128>
4001d4bc:	e1a00000 	nop			; (mov r0, r0)
4001d4c0:	e3560000 	cmp	r6, #0
4001d4c4:	0a000010 	beq	4001d50c <CyU3PUsbSendEP0Data+0x1b8>
4001d4c8:	e3e01000 	mvn	r1, #0
4001d4cc:	e59f0048 	ldr	r0, [pc, #72]	; 4001d51c <CyU3PUsbSendEP0Data+0x1c8>
4001d4d0:	ebffb2b0 	bl	40009f98 <_txe_mutex_get>
4001d4d4:	e3a01001 	mov	r1, #1
4001d4d8:	e3a00080 	mov	r0, #128	; 0x80
4001d4dc:	eb000101 	bl	4001d8e8 <CyU3PUsbSetEpNak>
4001d4e0:	e3a00064 	mov	r0, #100	; 0x64
4001d4e4:	ebffd7ce 	bl	40013424 <CyU3PBusyWait>
4001d4e8:	e59f0038 	ldr	r0, [pc, #56]	; 4001d528 <CyU3PUsbSendEP0Data+0x1d4>
4001d4ec:	ebffe306 	bl	4001610c <CyU3PDmaChannelReset>
4001d4f0:	e3a00080 	mov	r0, #128	; 0x80
4001d4f4:	ebfffcf5 	bl	4001c8d0 <CyU3PUsbFlushEp>
4001d4f8:	e3a01000 	mov	r1, #0
4001d4fc:	e3a00080 	mov	r0, #128	; 0x80
4001d500:	eb0000f8 	bl	4001d8e8 <CyU3PUsbSetEpNak>
4001d504:	e59f0010 	ldr	r0, [pc, #16]	; 4001d51c <CyU3PUsbSendEP0Data+0x1c8>
4001d508:	ebffb2d7 	bl	4000a06c <_txe_mutex_put>
4001d50c:	e1a00006 	mov	r0, r6
4001d510:	eaffff98 	b	4001d378 <CyU3PUsbSendEP0Data+0x24>
4001d514:	00001388 	.word	0x00001388
4001d518:	40031d40 	.word	0x40031d40
4001d51c:	40031ee0 	.word	0x40031ee0
4001d520:	e0031000 	.word	0xe0031000
4001d524:	0000fff0 	.word	0x0000fff0
4001d528:	40031a74 	.word	0x40031a74

Disassembly of section i.CyU3PUsbSendErdy:

4001d52c <CyU3PUsbSendErdy>:
4001d52c:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d530:	e1a04000 	mov	r4, r0
4001d534:	e1a05001 	mov	r5, r1
4001d538:	e1a0000d 	mov	r0, sp
4001d53c:	e3a02000 	mov	r2, #0
4001d540:	e1a03002 	mov	r3, r2
4001d544:	e1a06002 	mov	r6, r2
4001d548:	e880004c 	stm	r0, {r2, r3, r6}
4001d54c:	e204600f 	and	r6, r4, #15
4001d550:	e2047080 	and	r7, r4, #128	; 0x80
4001d554:	e59f00b4 	ldr	r0, [pc, #180]	; 4001d610 <CyU3PUsbSendErdy+0xe4>
4001d558:	e5d00008 	ldrb	r0, [r0, #8]
4001d55c:	e3500000 	cmp	r0, #0
4001d560:	1a000001 	bne	4001d56c <CyU3PUsbSendErdy+0x40>
4001d564:	e3a00042 	mov	r0, #66	; 0x42
4001d568:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d56c:	ebfffd7c 	bl	4001cb64 <CyU3PUsbGetSpeed>
4001d570:	e3500003 	cmp	r0, #3
4001d574:	1a000004 	bne	4001d58c <CyU3PUsbSendErdy+0x60>
4001d578:	e59f0094 	ldr	r0, [pc, #148]	; 4001d614 <CyU3PUsbSendErdy+0xe8>
4001d57c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d580:	e200003f 	and	r0, r0, #63	; 0x3f
4001d584:	e3500010 	cmp	r0, #16
4001d588:	0a000001 	beq	4001d594 <CyU3PUsbSendErdy+0x68>
4001d58c:	e3a000ff 	mov	r0, #255	; 0xff
4001d590:	eafffff4 	b	4001d568 <CyU3PUsbSendErdy+0x3c>
4001d594:	e204007f 	and	r0, r4, #127	; 0x7f
4001d598:	e350000f 	cmp	r0, #15
4001d59c:	da000001 	ble	4001d5a8 <CyU3PUsbSendErdy+0x7c>
4001d5a0:	e3a00040 	mov	r0, #64	; 0x40
4001d5a4:	eaffffef 	b	4001d568 <CyU3PUsbSendErdy+0x3c>
4001d5a8:	e59f0064 	ldr	r0, [pc, #100]	; 4001d614 <CyU3PUsbSendErdy+0xe8>
4001d5ac:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d5b0:	e3a01004 	mov	r1, #4
4001d5b4:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d5b8:	e58d0000 	str	r0, [sp]
4001d5bc:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001d5c0:	e3800003 	orr	r0, r0, #3
4001d5c4:	e1800406 	orr	r0, r0, r6, lsl #8
4001d5c8:	e58d0004 	str	r0, [sp, #4]
4001d5cc:	e3570000 	cmp	r7, #0
4001d5d0:	0a000005 	beq	4001d5ec <CyU3PUsbSendErdy+0xc0>
4001d5d4:	e59f003c 	ldr	r0, [pc, #60]	; 4001d618 <CyU3PUsbSendErdy+0xec>
4001d5d8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d5dc:	e3100008 	tst	r0, #8
4001d5e0:	0a000006 	beq	4001d600 <CyU3PUsbSendErdy+0xd4>
4001d5e4:	e58d5008 	str	r5, [sp, #8]
4001d5e8:	ea000004 	b	4001d600 <CyU3PUsbSendErdy+0xd4>
4001d5ec:	e59f0028 	ldr	r0, [pc, #40]	; 4001d61c <CyU3PUsbSendErdy+0xf0>
4001d5f0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d5f4:	e3100008 	tst	r0, #8
4001d5f8:	0a000000 	beq	4001d600 <CyU3PUsbSendErdy+0xd4>
4001d5fc:	e58d5008 	str	r5, [sp, #8]
4001d600:	e1a0000d 	mov	r0, sp
4001d604:	eb00123c 	bl	40021efc <CyFx3Usb3SendTP>
4001d608:	e3a00000 	mov	r0, #0
4001d60c:	eaffffd5 	b	4001d568 <CyU3PUsbSendErdy+0x3c>
4001d610:	40031d40 	.word	0x40031d40
4001d614:	e0033000 	.word	0xe0033000
4001d618:	e0033500 	.word	0xe0033500
4001d61c:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001d620 <CyU3PUsbSendNrdy>:
4001d620:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d624:	e1a04000 	mov	r4, r0
4001d628:	e1a05001 	mov	r5, r1
4001d62c:	e1a0000d 	mov	r0, sp
4001d630:	e3a02000 	mov	r2, #0
4001d634:	e1a03002 	mov	r3, r2
4001d638:	e1a06002 	mov	r6, r2
4001d63c:	e880004c 	stm	r0, {r2, r3, r6}
4001d640:	e204600f 	and	r6, r4, #15
4001d644:	e2047080 	and	r7, r4, #128	; 0x80
4001d648:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d700 <CyU3PUsbSendNrdy+0xe0>
4001d64c:	e5d00008 	ldrb	r0, [r0, #8]
4001d650:	e3500000 	cmp	r0, #0
4001d654:	1a000001 	bne	4001d660 <CyU3PUsbSendNrdy+0x40>
4001d658:	e3a00042 	mov	r0, #66	; 0x42
4001d65c:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d660:	ebfffd3f 	bl	4001cb64 <CyU3PUsbGetSpeed>
4001d664:	e3500003 	cmp	r0, #3
4001d668:	1a000004 	bne	4001d680 <CyU3PUsbSendNrdy+0x60>
4001d66c:	e59f0090 	ldr	r0, [pc, #144]	; 4001d704 <CyU3PUsbSendNrdy+0xe4>
4001d670:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d674:	e200003f 	and	r0, r0, #63	; 0x3f
4001d678:	e3500010 	cmp	r0, #16
4001d67c:	0a000001 	beq	4001d688 <CyU3PUsbSendNrdy+0x68>
4001d680:	e3a000ff 	mov	r0, #255	; 0xff
4001d684:	eafffff4 	b	4001d65c <CyU3PUsbSendNrdy+0x3c>
4001d688:	e204007f 	and	r0, r4, #127	; 0x7f
4001d68c:	e350000f 	cmp	r0, #15
4001d690:	da000001 	ble	4001d69c <CyU3PUsbSendNrdy+0x7c>
4001d694:	e3a00040 	mov	r0, #64	; 0x40
4001d698:	eaffffef 	b	4001d65c <CyU3PUsbSendNrdy+0x3c>
4001d69c:	e59f0060 	ldr	r0, [pc, #96]	; 4001d704 <CyU3PUsbSendNrdy+0xe4>
4001d6a0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d6a4:	e3a01004 	mov	r1, #4
4001d6a8:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d6ac:	e58d0000 	str	r0, [sp]
4001d6b0:	e3870002 	orr	r0, r7, #2
4001d6b4:	e1800406 	orr	r0, r0, r6, lsl #8
4001d6b8:	e58d0004 	str	r0, [sp, #4]
4001d6bc:	e3570000 	cmp	r7, #0
4001d6c0:	0a000005 	beq	4001d6dc <CyU3PUsbSendNrdy+0xbc>
4001d6c4:	e59f003c 	ldr	r0, [pc, #60]	; 4001d708 <CyU3PUsbSendNrdy+0xe8>
4001d6c8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d6cc:	e3100008 	tst	r0, #8
4001d6d0:	0a000006 	beq	4001d6f0 <CyU3PUsbSendNrdy+0xd0>
4001d6d4:	e58d5008 	str	r5, [sp, #8]
4001d6d8:	ea000004 	b	4001d6f0 <CyU3PUsbSendNrdy+0xd0>
4001d6dc:	e59f0028 	ldr	r0, [pc, #40]	; 4001d70c <CyU3PUsbSendNrdy+0xec>
4001d6e0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d6e4:	e3100008 	tst	r0, #8
4001d6e8:	0a000000 	beq	4001d6f0 <CyU3PUsbSendNrdy+0xd0>
4001d6ec:	e58d5008 	str	r5, [sp, #8]
4001d6f0:	e1a0000d 	mov	r0, sp
4001d6f4:	eb001200 	bl	40021efc <CyFx3Usb3SendTP>
4001d6f8:	e3a00000 	mov	r0, #0
4001d6fc:	eaffffd6 	b	4001d65c <CyU3PUsbSendNrdy+0x3c>
4001d700:	40031d40 	.word	0x40031d40
4001d704:	e0033000 	.word	0xe0033000
4001d708:	e0033500 	.word	0xe0033500
4001d70c:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001d710 <CyU3PUsbSetDesc>:
4001d710:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d714:	e1a03000 	mov	r3, r0
4001d718:	e3a0c000 	mov	ip, #0
4001d71c:	e59f01b8 	ldr	r0, [pc, #440]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d720:	e5d00008 	ldrb	r0, [r0, #8]
4001d724:	e3500000 	cmp	r0, #0
4001d728:	1a000001 	bne	4001d734 <CyU3PUsbSetDesc+0x24>
4001d72c:	e3a00042 	mov	r0, #66	; 0x42
4001d730:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d734:	e3520000 	cmp	r2, #0
4001d738:	1a000001 	bne	4001d744 <CyU3PUsbSetDesc+0x34>
4001d73c:	e3a00040 	mov	r0, #64	; 0x40
4001d740:	eafffffa 	b	4001d730 <CyU3PUsbSetDesc+0x20>
4001d744:	e3530009 	cmp	r3, #9
4001d748:	308ff103 	addcc	pc, pc, r3, lsl #2
4001d74c:	ea00004d 	b	4001d888 <CyU3PUsbSetDesc+0x178>
4001d750:	ea000007 	b	4001d774 <CyU3PUsbSetDesc+0x64>
4001d754:	ea00000a 	b	4001d784 <CyU3PUsbSetDesc+0x74>
4001d758:	ea000011 	b	4001d7a4 <CyU3PUsbSetDesc+0x94>
4001d75c:	ea000022 	b	4001d7ec <CyU3PUsbSetDesc+0xdc>
4001d760:	ea00002f 	b	4001d824 <CyU3PUsbSetDesc+0x114>
4001d764:	ea00003c 	b	4001d85c <CyU3PUsbSetDesc+0x14c>
4001d768:	ea000011 	b	4001d7b4 <CyU3PUsbSetDesc+0xa4>
4001d76c:	ea000008 	b	4001d794 <CyU3PUsbSetDesc+0x84>
4001d770:	ea000040 	b	4001d878 <CyU3PUsbSetDesc+0x168>
4001d774:	e1a00000 	nop			; (mov r0, r0)
4001d778:	e59f0160 	ldr	r0, [pc, #352]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d77c:	e5802004 	str	r2, [r0, #4]
4001d780:	ea000043 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d784:	e1a00000 	nop			; (mov r0, r0)
4001d788:	e59f0150 	ldr	r0, [pc, #336]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d78c:	e5802000 	str	r2, [r0]
4001d790:	ea00003f 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d794:	e1a00000 	nop			; (mov r0, r0)
4001d798:	e59f0140 	ldr	r0, [pc, #320]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d79c:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001d7a0:	ea00003b 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d7a4:	e1a00000 	nop			; (mov r0, r0)
4001d7a8:	e59f0130 	ldr	r0, [pc, #304]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d7ac:	e5802008 	str	r2, [r0, #8]
4001d7b0:	ea000037 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d7b4:	e1a00000 	nop			; (mov r0, r0)
4001d7b8:	e59f0120 	ldr	r0, [pc, #288]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d7bc:	e580201c 	str	r2, [r0, #28]
4001d7c0:	e5d20007 	ldrb	r0, [r2, #7]
4001d7c4:	e3100040 	tst	r0, #64	; 0x40
4001d7c8:	0a000003 	beq	4001d7dc <CyU3PUsbSetDesc+0xcc>
4001d7cc:	e3a00001 	mov	r0, #1
4001d7d0:	e59fe104 	ldr	lr, [pc, #260]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d7d4:	e5ce0006 	strb	r0, [lr, #6]
4001d7d8:	ea000002 	b	4001d7e8 <CyU3PUsbSetDesc+0xd8>
4001d7dc:	e3a00000 	mov	r0, #0
4001d7e0:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d7e4:	e5ce0006 	strb	r0, [lr, #6]
4001d7e8:	ea000029 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d7ec:	e1a00000 	nop			; (mov r0, r0)
4001d7f0:	e59f00e8 	ldr	r0, [pc, #232]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d7f4:	e5802018 	str	r2, [r0, #24]
4001d7f8:	e5d20007 	ldrb	r0, [r2, #7]
4001d7fc:	e3100040 	tst	r0, #64	; 0x40
4001d800:	0a000003 	beq	4001d814 <CyU3PUsbSetDesc+0x104>
4001d804:	e3a00001 	mov	r0, #1
4001d808:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d80c:	e5ce0006 	strb	r0, [lr, #6]
4001d810:	ea000002 	b	4001d820 <CyU3PUsbSetDesc+0x110>
4001d814:	e3a00000 	mov	r0, #0
4001d818:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d81c:	e5ce0006 	strb	r0, [lr, #6]
4001d820:	ea00001b 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d824:	e1a00000 	nop			; (mov r0, r0)
4001d828:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d82c:	e5802014 	str	r2, [r0, #20]
4001d830:	e5d20007 	ldrb	r0, [r2, #7]
4001d834:	e3100040 	tst	r0, #64	; 0x40
4001d838:	0a000003 	beq	4001d84c <CyU3PUsbSetDesc+0x13c>
4001d83c:	e3a00001 	mov	r0, #1
4001d840:	e59fe094 	ldr	lr, [pc, #148]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d844:	e5ce0006 	strb	r0, [lr, #6]
4001d848:	ea000002 	b	4001d858 <CyU3PUsbSetDesc+0x148>
4001d84c:	e3a00000 	mov	r0, #0
4001d850:	e59fe084 	ldr	lr, [pc, #132]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d854:	e5ce0006 	strb	r0, [lr, #6]
4001d858:	ea00000d 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d85c:	e1a00000 	nop			; (mov r0, r0)
4001d860:	e3510010 	cmp	r1, #16
4001d864:	da000000 	ble	4001d86c <CyU3PUsbSetDesc+0x15c>
4001d868:	e3a0c04b 	mov	ip, #75	; 0x4b
4001d86c:	e59f0070 	ldr	r0, [pc, #112]	; 4001d8e4 <CyU3PUsbSetDesc+0x1d4>
4001d870:	e7802101 	str	r2, [r0, r1, lsl #2]
4001d874:	ea000006 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d878:	e1a00000 	nop			; (mov r0, r0)
4001d87c:	e59f005c 	ldr	r0, [pc, #92]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d880:	e5802070 	str	r2, [r0, #112]	; 0x70
4001d884:	ea000002 	b	4001d894 <CyU3PUsbSetDesc+0x184>
4001d888:	e1a00000 	nop			; (mov r0, r0)
4001d88c:	e3a00050 	mov	r0, #80	; 0x50
4001d890:	eaffffa6 	b	4001d730 <CyU3PUsbSetDesc+0x20>
4001d894:	e1a00000 	nop			; (mov r0, r0)
4001d898:	e59f0040 	ldr	r0, [pc, #64]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d89c:	e5900000 	ldr	r0, [r0]
4001d8a0:	e3500000 	cmp	r0, #0
4001d8a4:	0a00000a 	beq	4001d8d4 <CyU3PUsbSetDesc+0x1c4>
4001d8a8:	e59f0030 	ldr	r0, [pc, #48]	; 4001d8e0 <CyU3PUsbSetDesc+0x1d0>
4001d8ac:	e5900020 	ldr	r0, [r0, #32]
4001d8b0:	e3500000 	cmp	r0, #0
4001d8b4:	0a000006 	beq	4001d8d4 <CyU3PUsbSetDesc+0x1c4>
4001d8b8:	e59f001c 	ldr	r0, [pc, #28]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d8bc:	e5d00008 	ldrb	r0, [r0, #8]
4001d8c0:	e3500003 	cmp	r0, #3
4001d8c4:	aa000002 	bge	4001d8d4 <CyU3PUsbSetDesc+0x1c4>
4001d8c8:	e3a00003 	mov	r0, #3
4001d8cc:	e59fe008 	ldr	lr, [pc, #8]	; 4001d8dc <CyU3PUsbSetDesc+0x1cc>
4001d8d0:	e5ce0008 	strb	r0, [lr, #8]
4001d8d4:	e1a0000c 	mov	r0, ip
4001d8d8:	eaffff94 	b	4001d730 <CyU3PUsbSetDesc+0x20>
4001d8dc:	40031d40 	.word	0x40031d40
4001d8e0:	40031f98 	.word	0x40031f98
4001d8e4:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001d8e8 <CyU3PUsbSetEpNak>:
4001d8e8:	e92d4070 	push	{r4, r5, r6, lr}
4001d8ec:	e1a04000 	mov	r4, r0
4001d8f0:	e1a06001 	mov	r6, r1
4001d8f4:	e59f0198 	ldr	r0, [pc, #408]	; 4001da94 <CyU3PUsbSetEpNak+0x1ac>
4001d8f8:	e5d00008 	ldrb	r0, [r0, #8]
4001d8fc:	e3500000 	cmp	r0, #0
4001d900:	1a000001 	bne	4001d90c <CyU3PUsbSetEpNak+0x24>
4001d904:	e3a00042 	mov	r0, #66	; 0x42
4001d908:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d90c:	e204007f 	and	r0, r4, #127	; 0x7f
4001d910:	e350000f 	cmp	r0, #15
4001d914:	da000001 	ble	4001d920 <CyU3PUsbSetEpNak+0x38>
4001d918:	e3a00040 	mov	r0, #64	; 0x40
4001d91c:	eafffff9 	b	4001d908 <CyU3PUsbSetEpNak+0x20>
4001d920:	e3e01000 	mvn	r1, #0
4001d924:	e59f016c 	ldr	r0, [pc, #364]	; 4001da98 <CyU3PUsbSetEpNak+0x1b0>
4001d928:	ebffb19a 	bl	40009f98 <_txe_mutex_get>
4001d92c:	e3560000 	cmp	r6, #0
4001d930:	0a000028 	beq	4001d9d8 <CyU3PUsbSetEpNak+0xf0>
4001d934:	e3140080 	tst	r4, #128	; 0x80
4001d938:	0a000012 	beq	4001d988 <CyU3PUsbSetEpNak+0xa0>
4001d93c:	e59f0150 	ldr	r0, [pc, #336]	; 4001da94 <CyU3PUsbSetEpNak+0x1ac>
4001d940:	e5d00009 	ldrb	r0, [r0, #9]
4001d944:	e3500003 	cmp	r0, #3
4001d948:	1a000006 	bne	4001d968 <CyU3PUsbSetEpNak+0x80>
4001d94c:	e59f0148 	ldr	r0, [pc, #328]	; 4001da9c <CyU3PUsbSetEpNak+0x1b4>
4001d950:	e204100f 	and	r1, r4, #15
4001d954:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001d958:	e3855003 	orr	r5, r5, #3
4001d95c:	e204100f 	and	r1, r4, #15
4001d960:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d964:	ea000046 	b	4001da84 <CyU3PUsbSetEpNak+0x19c>
4001d968:	e59f0130 	ldr	r0, [pc, #304]	; 4001daa0 <CyU3PUsbSetEpNak+0x1b8>
4001d96c:	e204100f 	and	r1, r4, #15
4001d970:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d974:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001d978:	e59f1120 	ldr	r1, [pc, #288]	; 4001daa0 <CyU3PUsbSetEpNak+0x1b8>
4001d97c:	e204200f 	and	r2, r4, #15
4001d980:	e7810102 	str	r0, [r1, r2, lsl #2]
4001d984:	ea00003e 	b	4001da84 <CyU3PUsbSetEpNak+0x19c>
4001d988:	e59f0104 	ldr	r0, [pc, #260]	; 4001da94 <CyU3PUsbSetEpNak+0x1ac>
4001d98c:	e5d00009 	ldrb	r0, [r0, #9]
4001d990:	e3500003 	cmp	r0, #3
4001d994:	1a000007 	bne	4001d9b8 <CyU3PUsbSetEpNak+0xd0>
4001d998:	e59f0104 	ldr	r0, [pc, #260]	; 4001daa4 <CyU3PUsbSetEpNak+0x1bc>
4001d99c:	e204100f 	and	r1, r4, #15
4001d9a0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d9a4:	e3805003 	orr	r5, r0, #3
4001d9a8:	e59f00f4 	ldr	r0, [pc, #244]	; 4001daa4 <CyU3PUsbSetEpNak+0x1bc>
4001d9ac:	e204100f 	and	r1, r4, #15
4001d9b0:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d9b4:	ea000032 	b	4001da84 <CyU3PUsbSetEpNak+0x19c>
4001d9b8:	e59f00e8 	ldr	r0, [pc, #232]	; 4001daa8 <CyU3PUsbSetEpNak+0x1c0>
4001d9bc:	e204100f 	and	r1, r4, #15
4001d9c0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d9c4:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001d9c8:	e59f10d8 	ldr	r1, [pc, #216]	; 4001daa8 <CyU3PUsbSetEpNak+0x1c0>
4001d9cc:	e204200f 	and	r2, r4, #15
4001d9d0:	e7810102 	str	r0, [r1, r2, lsl #2]
4001d9d4:	ea00002a 	b	4001da84 <CyU3PUsbSetEpNak+0x19c>
4001d9d8:	e3140080 	tst	r4, #128	; 0x80
4001d9dc:	0a000014 	beq	4001da34 <CyU3PUsbSetEpNak+0x14c>
4001d9e0:	e59f00ac 	ldr	r0, [pc, #172]	; 4001da94 <CyU3PUsbSetEpNak+0x1ac>
4001d9e4:	e5d00009 	ldrb	r0, [r0, #9]
4001d9e8:	e3500003 	cmp	r0, #3
4001d9ec:	1a000008 	bne	4001da14 <CyU3PUsbSetEpNak+0x12c>
4001d9f0:	e59f00a4 	ldr	r0, [pc, #164]	; 4001da9c <CyU3PUsbSetEpNak+0x1b4>
4001d9f4:	e204100f 	and	r1, r4, #15
4001d9f8:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001d9fc:	e3c50002 	bic	r0, r5, #2
4001da00:	e3805001 	orr	r5, r0, #1
4001da04:	e59f0090 	ldr	r0, [pc, #144]	; 4001da9c <CyU3PUsbSetEpNak+0x1b4>
4001da08:	e204100f 	and	r1, r4, #15
4001da0c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da10:	ea00001b 	b	4001da84 <CyU3PUsbSetEpNak+0x19c>
4001da14:	e59f0084 	ldr	r0, [pc, #132]	; 4001daa0 <CyU3PUsbSetEpNak+0x1b8>
4001da18:	e204100f 	and	r1, r4, #15
4001da1c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da20:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001da24:	e59f1074 	ldr	r1, [pc, #116]	; 4001daa0 <CyU3PUsbSetEpNak+0x1b8>
4001da28:	e204200f 	and	r2, r4, #15
4001da2c:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da30:	ea000013 	b	4001da84 <CyU3PUsbSetEpNak+0x19c>
4001da34:	e59f0058 	ldr	r0, [pc, #88]	; 4001da94 <CyU3PUsbSetEpNak+0x1ac>
4001da38:	e5d00009 	ldrb	r0, [r0, #9]
4001da3c:	e3500003 	cmp	r0, #3
4001da40:	1a000008 	bne	4001da68 <CyU3PUsbSetEpNak+0x180>
4001da44:	e59f0058 	ldr	r0, [pc, #88]	; 4001daa4 <CyU3PUsbSetEpNak+0x1bc>
4001da48:	e204100f 	and	r1, r4, #15
4001da4c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da50:	e3c00002 	bic	r0, r0, #2
4001da54:	e3805001 	orr	r5, r0, #1
4001da58:	e59f0044 	ldr	r0, [pc, #68]	; 4001daa4 <CyU3PUsbSetEpNak+0x1bc>
4001da5c:	e204100f 	and	r1, r4, #15
4001da60:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da64:	ea000006 	b	4001da84 <CyU3PUsbSetEpNak+0x19c>
4001da68:	e59f0038 	ldr	r0, [pc, #56]	; 4001daa8 <CyU3PUsbSetEpNak+0x1c0>
4001da6c:	e204100f 	and	r1, r4, #15
4001da70:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da74:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001da78:	e59f1028 	ldr	r1, [pc, #40]	; 4001daa8 <CyU3PUsbSetEpNak+0x1c0>
4001da7c:	e204200f 	and	r2, r4, #15
4001da80:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da84:	e59f000c 	ldr	r0, [pc, #12]	; 4001da98 <CyU3PUsbSetEpNak+0x1b0>
4001da88:	ebffb177 	bl	4000a06c <_txe_mutex_put>
4001da8c:	e3a00000 	mov	r0, #0
4001da90:	eaffff9c 	b	4001d908 <CyU3PUsbSetEpNak+0x20>
4001da94:	40031d40 	.word	0x40031d40
4001da98:	40031ee0 	.word	0x40031ee0
4001da9c:	e0033500 	.word	0xe0033500
4001daa0:	e0031418 	.word	0xe0031418
4001daa4:	e0033600 	.word	0xe0033600
4001daa8:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001daac <CyU3PUsbSetLinkPowerState>:
4001daac:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dab0:	e1a01000 	mov	r1, r0
4001dab4:	e3a030ff 	mov	r3, #255	; 0xff
4001dab8:	e59f0138 	ldr	r0, [pc, #312]	; 4001dbf8 <CyU3PUsbSetLinkPowerState+0x14c>
4001dabc:	e5d00008 	ldrb	r0, [r0, #8]
4001dac0:	e3500000 	cmp	r0, #0
4001dac4:	1a000001 	bne	4001dad0 <CyU3PUsbSetLinkPowerState+0x24>
4001dac8:	e3a00042 	mov	r0, #66	; 0x42
4001dacc:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001dad0:	e59f0120 	ldr	r0, [pc, #288]	; 4001dbf8 <CyU3PUsbSetLinkPowerState+0x14c>
4001dad4:	e5d00008 	ldrb	r0, [r0, #8]
4001dad8:	e3500005 	cmp	r0, #5
4001dadc:	aa000001 	bge	4001dae8 <CyU3PUsbSetLinkPowerState+0x3c>
4001dae0:	e3a00044 	mov	r0, #68	; 0x44
4001dae4:	eafffff8 	b	4001dacc <CyU3PUsbSetLinkPowerState+0x20>
4001dae8:	ebfffc1d 	bl	4001cb64 <CyU3PUsbGetSpeed>
4001daec:	e3500003 	cmp	r0, #3
4001daf0:	0a000001 	beq	4001dafc <CyU3PUsbSetLinkPowerState+0x50>
4001daf4:	e3a000ff 	mov	r0, #255	; 0xff
4001daf8:	eafffff3 	b	4001dacc <CyU3PUsbSetLinkPowerState+0x20>
4001dafc:	e59f00f8 	ldr	r0, [pc, #248]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001db00:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db04:	e200203f 	and	r2, r0, #63	; 0x3f
4001db08:	e3510000 	cmp	r1, #0
4001db0c:	0a000004 	beq	4001db24 <CyU3PUsbSetLinkPowerState+0x78>
4001db10:	e3510001 	cmp	r1, #1
4001db14:	0a000015 	beq	4001db70 <CyU3PUsbSetLinkPowerState+0xc4>
4001db18:	e3510002 	cmp	r1, #2
4001db1c:	1a00002f 	bne	4001dbe0 <CyU3PUsbSetLinkPowerState+0x134>
4001db20:	ea000020 	b	4001dba8 <CyU3PUsbSetLinkPowerState+0xfc>
4001db24:	e1a00000 	nop			; (mov r0, r0)
4001db28:	e59f00cc 	ldr	r0, [pc, #204]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001db2c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db30:	e3100c02 	tst	r0, #512	; 0x200
4001db34:	1a00000b 	bne	4001db68 <CyU3PUsbSetLinkPowerState+0xbc>
4001db38:	e59f00bc 	ldr	r0, [pc, #188]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001db3c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db40:	e200203f 	and	r2, r0, #63	; 0x3f
4001db44:	e3520011 	cmp	r2, #17
4001db48:	ba000006 	blt	4001db68 <CyU3PUsbSetLinkPowerState+0xbc>
4001db4c:	e3520013 	cmp	r2, #19
4001db50:	ca000004 	bgt	4001db68 <CyU3PUsbSetLinkPowerState+0xbc>
4001db54:	e59f00a0 	ldr	r0, [pc, #160]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001db58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db5c:	e3800c02 	orr	r0, r0, #512	; 0x200
4001db60:	e59fc094 	ldr	ip, [pc, #148]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001db64:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001db68:	e3a03000 	mov	r3, #0
4001db6c:	ea00001e 	b	4001dbec <CyU3PUsbSetLinkPowerState+0x140>
4001db70:	e1a00000 	nop			; (mov r0, r0)
4001db74:	e3520010 	cmp	r2, #16
4001db78:	1a000009 	bne	4001dba4 <CyU3PUsbSetLinkPowerState+0xf8>
4001db7c:	e59f0074 	ldr	r0, [pc, #116]	; 4001dbf8 <CyU3PUsbSetLinkPowerState+0x14c>
4001db80:	e5d00006 	ldrb	r0, [r0, #6]
4001db84:	e3100004 	tst	r0, #4
4001db88:	0a000005 	beq	4001dba4 <CyU3PUsbSetLinkPowerState+0xf8>
4001db8c:	e59f0068 	ldr	r0, [pc, #104]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001db90:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db94:	e3800001 	orr	r0, r0, #1
4001db98:	e59fc05c 	ldr	ip, [pc, #92]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001db9c:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dba0:	e3a03000 	mov	r3, #0
4001dba4:	ea000010 	b	4001dbec <CyU3PUsbSetLinkPowerState+0x140>
4001dba8:	e1a00000 	nop			; (mov r0, r0)
4001dbac:	e3520010 	cmp	r2, #16
4001dbb0:	1a000009 	bne	4001dbdc <CyU3PUsbSetLinkPowerState+0x130>
4001dbb4:	e59f003c 	ldr	r0, [pc, #60]	; 4001dbf8 <CyU3PUsbSetLinkPowerState+0x14c>
4001dbb8:	e5d00006 	ldrb	r0, [r0, #6]
4001dbbc:	e3100008 	tst	r0, #8
4001dbc0:	0a000005 	beq	4001dbdc <CyU3PUsbSetLinkPowerState+0x130>
4001dbc4:	e59f0030 	ldr	r0, [pc, #48]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001dbc8:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dbcc:	e3800002 	orr	r0, r0, #2
4001dbd0:	e59fc024 	ldr	ip, [pc, #36]	; 4001dbfc <CyU3PUsbSetLinkPowerState+0x150>
4001dbd4:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dbd8:	e3a03000 	mov	r3, #0
4001dbdc:	ea000002 	b	4001dbec <CyU3PUsbSetLinkPowerState+0x140>
4001dbe0:	e1a00000 	nop			; (mov r0, r0)
4001dbe4:	e3a03040 	mov	r3, #64	; 0x40
4001dbe8:	e1a00000 	nop			; (mov r0, r0)
4001dbec:	e1a00000 	nop			; (mov r0, r0)
4001dbf0:	e1a00003 	mov	r0, r3
4001dbf4:	eaffffb4 	b	4001dacc <CyU3PUsbSetLinkPowerState+0x20>
4001dbf8:	40031d40 	.word	0x40031d40
4001dbfc:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001dc00 <CyU3PUsbStall>:
4001dc00:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001dc04:	e1a04000 	mov	r4, r0
4001dc08:	e1a05001 	mov	r5, r1
4001dc0c:	e1a06002 	mov	r6, r2
4001dc10:	e204700f 	and	r7, r4, #15
4001dc14:	e3a08000 	mov	r8, #0
4001dc18:	e59f0344 	ldr	r0, [pc, #836]	; 4001df64 <CyU3PUsbStall+0x364>
4001dc1c:	e5d00008 	ldrb	r0, [r0, #8]
4001dc20:	e3500000 	cmp	r0, #0
4001dc24:	1a000001 	bne	4001dc30 <CyU3PUsbStall+0x30>
4001dc28:	e3a00042 	mov	r0, #66	; 0x42
4001dc2c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001dc30:	e204007f 	and	r0, r4, #127	; 0x7f
4001dc34:	e350000f 	cmp	r0, #15
4001dc38:	da000001 	ble	4001dc44 <CyU3PUsbStall+0x44>
4001dc3c:	e3a00040 	mov	r0, #64	; 0x40
4001dc40:	eafffff9 	b	4001dc2c <CyU3PUsbStall+0x2c>
4001dc44:	e3570000 	cmp	r7, #0
4001dc48:	1a000003 	bne	4001dc5c <CyU3PUsbStall+0x5c>
4001dc4c:	e3550000 	cmp	r5, #0
4001dc50:	1a000001 	bne	4001dc5c <CyU3PUsbStall+0x5c>
4001dc54:	e3a00040 	mov	r0, #64	; 0x40
4001dc58:	eafffff3 	b	4001dc2c <CyU3PUsbStall+0x2c>
4001dc5c:	e59f0300 	ldr	r0, [pc, #768]	; 4001df64 <CyU3PUsbStall+0x364>
4001dc60:	e5d00009 	ldrb	r0, [r0, #9]
4001dc64:	e3500000 	cmp	r0, #0
4001dc68:	1a000001 	bne	4001dc74 <CyU3PUsbStall+0x74>
4001dc6c:	e3a00000 	mov	r0, #0
4001dc70:	eaffffed 	b	4001dc2c <CyU3PUsbStall+0x2c>
4001dc74:	e3e01000 	mvn	r1, #0
4001dc78:	e59f02e8 	ldr	r0, [pc, #744]	; 4001df68 <CyU3PUsbStall+0x368>
4001dc7c:	ebffb0c5 	bl	40009f98 <_txe_mutex_get>
4001dc80:	e3570000 	cmp	r7, #0
4001dc84:	1a000037 	bne	4001dd68 <CyU3PUsbStall+0x168>
4001dc88:	ebfffbbd 	bl	4001cb84 <CyU3PUsbIsNewCtrlRqtRecvd>
4001dc8c:	e3500000 	cmp	r0, #0
4001dc90:	0a000003 	beq	4001dca4 <CyU3PUsbStall+0xa4>
4001dc94:	e59f02cc 	ldr	r0, [pc, #716]	; 4001df68 <CyU3PUsbStall+0x368>
4001dc98:	ebffb0f3 	bl	4000a06c <_txe_mutex_put>
4001dc9c:	e3a00000 	mov	r0, #0
4001dca0:	eaffffe1 	b	4001dc2c <CyU3PUsbStall+0x2c>
4001dca4:	e59f02b8 	ldr	r0, [pc, #696]	; 4001df64 <CyU3PUsbStall+0x364>
4001dca8:	e5d00009 	ldrb	r0, [r0, #9]
4001dcac:	e3500003 	cmp	r0, #3
4001dcb0:	1a00001b 	bne	4001dd24 <CyU3PUsbStall+0x124>
4001dcb4:	e59f02b0 	ldr	r0, [pc, #688]	; 4001df6c <CyU3PUsbStall+0x36c>
4001dcb8:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001dcbc:	e3800004 	orr	r0, r0, #4
4001dcc0:	e59f12a4 	ldr	r1, [pc, #676]	; 4001df6c <CyU3PUsbStall+0x36c>
4001dcc4:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001dcc8:	e1a00001 	mov	r0, r1
4001dccc:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001dcd0:	e3800004 	orr	r0, r0, #4
4001dcd4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001dcd8:	eb00104b 	bl	40021e0c <CyU3PVicDisableAllInterrupts>
4001dcdc:	e1a0a000 	mov	sl, r0
4001dce0:	e3a00001 	mov	r0, #1
4001dce4:	ebffd5ce 	bl	40013424 <CyU3PBusyWait>
4001dce8:	e59f027c 	ldr	r0, [pc, #636]	; 4001df6c <CyU3PUsbStall+0x36c>
4001dcec:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dcf0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dcf4:	e59f1270 	ldr	r1, [pc, #624]	; 4001df6c <CyU3PUsbStall+0x36c>
4001dcf8:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dcfc:	e1a0000a 	mov	r0, sl
4001dd00:	eb00104f 	bl	40021e44 <CyU3PVicEnableInterrupts>
4001dd04:	e3a00000 	mov	r0, #0
4001dd08:	e59f1260 	ldr	r1, [pc, #608]	; 4001df70 <CyU3PUsbStall+0x370>
4001dd0c:	e5810000 	str	r0, [r1]
4001dd10:	e59f125c 	ldr	r1, [pc, #604]	; 4001df74 <CyU3PUsbStall+0x374>
4001dd14:	e5810000 	str	r0, [r1]
4001dd18:	e59f0258 	ldr	r0, [pc, #600]	; 4001df78 <CyU3PUsbStall+0x378>
4001dd1c:	ebffb37f 	bl	4000ab20 <_txe_timer_deactivate>
4001dd20:	ea00000c 	b	4001dd58 <CyU3PUsbStall+0x158>
4001dd24:	e59f0250 	ldr	r0, [pc, #592]	; 4001df7c <CyU3PUsbStall+0x37c>
4001dd28:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001dd2c:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd30:	e59f1244 	ldr	r1, [pc, #580]	; 4001df7c <CyU3PUsbStall+0x37c>
4001dd34:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001dd38:	e1a00001 	mov	r0, r1
4001dd3c:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001dd40:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd44:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001dd48:	e1a00001 	mov	r0, r1
4001dd4c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dd50:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001dd54:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dd58:	e59f0208 	ldr	r0, [pc, #520]	; 4001df68 <CyU3PUsbStall+0x368>
4001dd5c:	ebffb0c2 	bl	4000a06c <_txe_mutex_put>
4001dd60:	e3a00000 	mov	r0, #0
4001dd64:	eaffffb0 	b	4001dc2c <CyU3PUsbStall+0x2c>
4001dd68:	e59f01f4 	ldr	r0, [pc, #500]	; 4001df64 <CyU3PUsbStall+0x364>
4001dd6c:	e5d00009 	ldrb	r0, [r0, #9]
4001dd70:	e3500003 	cmp	r0, #3
4001dd74:	1a000033 	bne	4001de48 <CyU3PUsbStall+0x248>
4001dd78:	e3140080 	tst	r4, #128	; 0x80
4001dd7c:	0a000017 	beq	4001dde0 <CyU3PUsbStall+0x1e0>
4001dd80:	e3550000 	cmp	r5, #0
4001dd84:	0a00000a 	beq	4001ddb4 <CyU3PUsbStall+0x1b4>
4001dd88:	e59f01f0 	ldr	r0, [pc, #496]	; 4001df80 <CyU3PUsbStall+0x380>
4001dd8c:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001dd90:	e3899005 	orr	r9, r9, #5
4001dd94:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dd98:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001dd9c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dda0:	e1a01800 	lsl	r1, r0, #16
4001dda4:	e1a01821 	lsr	r1, r1, #16
4001dda8:	e1a00004 	mov	r0, r4
4001ddac:	ebfffdde 	bl	4001d52c <CyU3PUsbSendErdy>
4001ddb0:	ea000041 	b	4001debc <CyU3PUsbStall+0x2bc>
4001ddb4:	e59f01c4 	ldr	r0, [pc, #452]	; 4001df80 <CyU3PUsbStall+0x380>
4001ddb8:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001ddbc:	e3899011 	orr	r9, r9, #17
4001ddc0:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ddc4:	e3a00001 	mov	r0, #1
4001ddc8:	ebffd595 	bl	40013424 <CyU3PBusyWait>
4001ddcc:	e3c90014 	bic	r0, r9, #20
4001ddd0:	e3809001 	orr	r9, r0, #1
4001ddd4:	e59f01a4 	ldr	r0, [pc, #420]	; 4001df80 <CyU3PUsbStall+0x380>
4001ddd8:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dddc:	ea000036 	b	4001debc <CyU3PUsbStall+0x2bc>
4001dde0:	e3550000 	cmp	r5, #0
4001dde4:	0a00000b 	beq	4001de18 <CyU3PUsbStall+0x218>
4001dde8:	e59f0194 	ldr	r0, [pc, #404]	; 4001df84 <CyU3PUsbStall+0x384>
4001ddec:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001ddf0:	e3809005 	orr	r9, r0, #5
4001ddf4:	e59f0188 	ldr	r0, [pc, #392]	; 4001df84 <CyU3PUsbStall+0x384>
4001ddf8:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ddfc:	e28000c0 	add	r0, r0, #192	; 0xc0
4001de00:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de04:	e1a01800 	lsl	r1, r0, #16
4001de08:	e1a01821 	lsr	r1, r1, #16
4001de0c:	e1a00004 	mov	r0, r4
4001de10:	ebfffdc5 	bl	4001d52c <CyU3PUsbSendErdy>
4001de14:	ea000028 	b	4001debc <CyU3PUsbStall+0x2bc>
4001de18:	e59f0164 	ldr	r0, [pc, #356]	; 4001df84 <CyU3PUsbStall+0x384>
4001de1c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de20:	e3809011 	orr	r9, r0, #17
4001de24:	e59f0158 	ldr	r0, [pc, #344]	; 4001df84 <CyU3PUsbStall+0x384>
4001de28:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de2c:	e3a00001 	mov	r0, #1
4001de30:	ebffd57b 	bl	40013424 <CyU3PBusyWait>
4001de34:	e3c90014 	bic	r0, r9, #20
4001de38:	e3809001 	orr	r9, r0, #1
4001de3c:	e59f0140 	ldr	r0, [pc, #320]	; 4001df84 <CyU3PUsbStall+0x384>
4001de40:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de44:	ea00001c 	b	4001debc <CyU3PUsbStall+0x2bc>
4001de48:	e3140080 	tst	r4, #128	; 0x80
4001de4c:	0a00000d 	beq	4001de88 <CyU3PUsbStall+0x288>
4001de50:	e3550000 	cmp	r5, #0
4001de54:	0a000005 	beq	4001de70 <CyU3PUsbStall+0x270>
4001de58:	e59f0128 	ldr	r0, [pc, #296]	; 4001df88 <CyU3PUsbStall+0x388>
4001de5c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de60:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de64:	e59f111c 	ldr	r1, [pc, #284]	; 4001df88 <CyU3PUsbStall+0x388>
4001de68:	e7810107 	str	r0, [r1, r7, lsl #2]
4001de6c:	ea000012 	b	4001debc <CyU3PUsbStall+0x2bc>
4001de70:	e59f0110 	ldr	r0, [pc, #272]	; 4001df88 <CyU3PUsbStall+0x388>
4001de74:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de78:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001de7c:	e59f1104 	ldr	r1, [pc, #260]	; 4001df88 <CyU3PUsbStall+0x388>
4001de80:	e7810107 	str	r0, [r1, r7, lsl #2]
4001de84:	ea00000c 	b	4001debc <CyU3PUsbStall+0x2bc>
4001de88:	e3550000 	cmp	r5, #0
4001de8c:	0a000005 	beq	4001dea8 <CyU3PUsbStall+0x2a8>
4001de90:	e59f00f4 	ldr	r0, [pc, #244]	; 4001df8c <CyU3PUsbStall+0x38c>
4001de94:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de98:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001de9c:	e59f10e8 	ldr	r1, [pc, #232]	; 4001df8c <CyU3PUsbStall+0x38c>
4001dea0:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dea4:	ea000004 	b	4001debc <CyU3PUsbStall+0x2bc>
4001dea8:	e59f00dc 	ldr	r0, [pc, #220]	; 4001df8c <CyU3PUsbStall+0x38c>
4001deac:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001deb0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001deb4:	e59f10d0 	ldr	r1, [pc, #208]	; 4001df8c <CyU3PUsbStall+0x38c>
4001deb8:	e7810107 	str	r0, [r1, r7, lsl #2]
4001debc:	e3560000 	cmp	r6, #0
4001dec0:	0a000023 	beq	4001df54 <CyU3PUsbStall+0x354>
4001dec4:	e3550000 	cmp	r5, #0
4001dec8:	1a000021 	bne	4001df54 <CyU3PUsbStall+0x354>
4001decc:	e59f0090 	ldr	r0, [pc, #144]	; 4001df64 <CyU3PUsbStall+0x364>
4001ded0:	e5d00009 	ldrb	r0, [r0, #9]
4001ded4:	e3500003 	cmp	r0, #3
4001ded8:	1a00000b 	bne	4001df0c <CyU3PUsbStall+0x30c>
4001dedc:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001dee0:	e3140080 	tst	r4, #128	; 0x80
4001dee4:	0a000000 	beq	4001deec <CyU3PUsbStall+0x2ec>
4001dee8:	e3888010 	orr	r8, r8, #16
4001deec:	e59f0078 	ldr	r0, [pc, #120]	; 4001df6c <CyU3PUsbStall+0x36c>
4001def0:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001def4:	e1a00000 	nop			; (mov r0, r0)
4001def8:	e59f006c 	ldr	r0, [pc, #108]	; 4001df6c <CyU3PUsbStall+0x36c>
4001defc:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001df00:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001df04:	0afffffb 	beq	4001def8 <CyU3PUsbStall+0x2f8>
4001df08:	ea000011 	b	4001df54 <CyU3PUsbStall+0x354>
4001df0c:	e3140080 	tst	r4, #128	; 0x80
4001df10:	0a000000 	beq	4001df18 <CyU3PUsbStall+0x318>
4001df14:	e3877010 	orr	r7, r7, #16
4001df18:	e59f005c 	ldr	r0, [pc, #92]	; 4001df7c <CyU3PUsbStall+0x37c>
4001df1c:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001df20:	e1a00000 	nop			; (mov r0, r0)
4001df24:	e59f0050 	ldr	r0, [pc, #80]	; 4001df7c <CyU3PUsbStall+0x37c>
4001df28:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001df2c:	e3100c01 	tst	r0, #256	; 0x100
4001df30:	0afffffb 	beq	4001df24 <CyU3PUsbStall+0x324>
4001df34:	e3877020 	orr	r7, r7, #32
4001df38:	e59f003c 	ldr	r0, [pc, #60]	; 4001df7c <CyU3PUsbStall+0x37c>
4001df3c:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001df40:	e1a00000 	nop			; (mov r0, r0)
4001df44:	e59f0030 	ldr	r0, [pc, #48]	; 4001df7c <CyU3PUsbStall+0x37c>
4001df48:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001df4c:	e3100c01 	tst	r0, #256	; 0x100
4001df50:	0afffffb 	beq	4001df44 <CyU3PUsbStall+0x344>
4001df54:	e59f000c 	ldr	r0, [pc, #12]	; 4001df68 <CyU3PUsbStall+0x368>
4001df58:	ebffb043 	bl	4000a06c <_txe_mutex_put>
4001df5c:	e3a00000 	mov	r0, #0
4001df60:	eaffff31 	b	4001dc2c <CyU3PUsbStall+0x2c>
4001df64:	40031d40 	.word	0x40031d40
4001df68:	40031ee0 	.word	0x40031ee0
4001df6c:	e0033000 	.word	0xe0033000
4001df70:	40030db4 	.word	0x40030db4
4001df74:	40030db8 	.word	0x40030db8
4001df78:	400326a0 	.word	0x400326a0
4001df7c:	e0031000 	.word	0xe0031000
4001df80:	e0033500 	.word	0xe0033500
4001df84:	e0033600 	.word	0xe0033600
4001df88:	e0031418 	.word	0xe0031418
4001df8c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001df90 <CyU3PUsbStart>:
4001df90:	e92d4070 	push	{r4, r5, r6, lr}
4001df94:	e59f0324 	ldr	r0, [pc, #804]	; 4001e2c0 <CyU3PUsbStart+0x330>
4001df98:	e5900000 	ldr	r0, [r0]
4001df9c:	e3500000 	cmp	r0, #0
4001dfa0:	1a000001 	bne	4001dfac <CyU3PUsbStart+0x1c>
4001dfa4:	e3a00010 	mov	r0, #16
4001dfa8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001dfac:	e59f0310 	ldr	r0, [pc, #784]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001dfb0:	e5d00008 	ldrb	r0, [r0, #8]
4001dfb4:	e3500000 	cmp	r0, #0
4001dfb8:	0a000001 	beq	4001dfc4 <CyU3PUsbStart+0x34>
4001dfbc:	e3a00043 	mov	r0, #67	; 0x43
4001dfc0:	eafffff8 	b	4001dfa8 <CyU3PUsbStart+0x18>
4001dfc4:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e2c8 <CyU3PUsbStart+0x338>
4001dfc8:	e5900000 	ldr	r0, [r0]
4001dfcc:	e3500000 	cmp	r0, #0
4001dfd0:	0a00006b 	beq	4001e184 <CyU3PUsbStart+0x1f4>
4001dfd4:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e2cc <CyU3PUsbStart+0x33c>
4001dfd8:	eb00059e 	bl	4001f658 <CyU3PUibSocketInit>
4001dfdc:	ebfff98c 	bl	4001c614 <CyU3PUsbCreateDmaChannels>
4001dfe0:	e1a04000 	mov	r4, r0
4001dfe4:	e3540000 	cmp	r4, #0
4001dfe8:	0a000001 	beq	4001dff4 <CyU3PUsbStart+0x64>
4001dfec:	e1a00004 	mov	r0, r4
4001dff0:	eaffffec 	b	4001dfa8 <CyU3PUsbStart+0x18>
4001dff4:	e3a00001 	mov	r0, #1
4001dff8:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001dffc:	e5c10008 	strb	r0, [r1, #8]
4001e000:	e5950004 	ldr	r0, [r5, #4]
4001e004:	e5c10009 	strb	r0, [r1, #9]
4001e008:	e1a00005 	mov	r0, r5
4001e00c:	ebfffaef 	bl	4001cbd0 <CyU3PUsbLoadBootloaderDescs>
4001e010:	e1a04000 	mov	r4, r0
4001e014:	e3540000 	cmp	r4, #0
4001e018:	0a000001 	beq	4001e024 <CyU3PUsbStart+0x94>
4001e01c:	e1a00004 	mov	r0, r4
4001e020:	eaffffe0 	b	4001dfa8 <CyU3PUsbStart+0x18>
4001e024:	e3a00006 	mov	r0, #6
4001e028:	e59f1294 	ldr	r1, [pc, #660]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001e02c:	e5c10008 	strb	r0, [r1, #8]
4001e030:	e2810000 	add	r0, r1, #0
4001e034:	e5d00009 	ldrb	r0, [r0, #9]
4001e038:	e3500003 	cmp	r0, #3
4001e03c:	1a000002 	bne	4001e04c <CyU3PUsbStart+0xbc>
4001e040:	e3a00001 	mov	r0, #1
4001e044:	e59f1284 	ldr	r1, [pc, #644]	; 4001e2d0 <CyU3PUsbStart+0x340>
4001e048:	e5810000 	str	r0, [r1]
4001e04c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e050:	e59f127c 	ldr	r1, [pc, #636]	; 4001e2d4 <CyU3PUsbStart+0x344>
4001e054:	e1500001 	cmp	r0, r1
4001e058:	1a000015 	bne	4001e0b4 <CyU3PUsbStart+0x124>
4001e05c:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e060:	e59f1270 	ldr	r1, [pc, #624]	; 4001e2d8 <CyU3PUsbStart+0x348>
4001e064:	e1500001 	cmp	r0, r1
4001e068:	3a000007 	bcc	4001e08c <CyU3PUsbStart+0xfc>
4001e06c:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e070:	e3500000 	cmp	r0, #0
4001e074:	0a000001 	beq	4001e080 <CyU3PUsbStart+0xf0>
4001e078:	e3a00001 	mov	r0, #1
4001e07c:	ea000000 	b	4001e084 <CyU3PUsbStart+0xf4>
4001e080:	e3a00000 	mov	r0, #0
4001e084:	e59f1238 	ldr	r1, [pc, #568]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001e088:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e08c:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e090:	e59f1244 	ldr	r1, [pc, #580]	; 4001e2dc <CyU3PUsbStart+0x34c>
4001e094:	e1500001 	cmp	r0, r1
4001e098:	3a000008 	bcc	4001e0c0 <CyU3PUsbStart+0x130>
4001e09c:	e59f023c 	ldr	r0, [pc, #572]	; 4001e2e0 <CyU3PUsbStart+0x350>
4001e0a0:	e5900000 	ldr	r0, [r0]
4001e0a4:	e3800002 	orr	r0, r0, #2
4001e0a8:	e59f1230 	ldr	r1, [pc, #560]	; 4001e2e0 <CyU3PUsbStart+0x350>
4001e0ac:	e5810000 	str	r0, [r1]
4001e0b0:	ea000002 	b	4001e0c0 <CyU3PUsbStart+0x130>
4001e0b4:	e3a00001 	mov	r0, #1
4001e0b8:	e59f1204 	ldr	r1, [pc, #516]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001e0bc:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e0c0:	e3e00000 	mvn	r0, #0
4001e0c4:	e59f1218 	ldr	r1, [pc, #536]	; 4001e2e4 <CyU3PUsbStart+0x354>
4001e0c8:	e5810004 	str	r0, [r1, #4]
4001e0cc:	e59f0214 	ldr	r0, [pc, #532]	; 4001e2e8 <CyU3PUsbStart+0x358>
4001e0d0:	e5810008 	str	r0, [r1, #8]
4001e0d4:	e3e00000 	mvn	r0, #0
4001e0d8:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e0dc:	e59f0208 	ldr	r0, [pc, #520]	; 4001e2ec <CyU3PUsbStart+0x35c>
4001e0e0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e0e4:	e3a00000 	mov	r0, #0
4001e0e8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e0ec:	e3e00000 	mvn	r0, #0
4001e0f0:	e0811680 	add	r1, r1, r0, lsl #13
4001e0f4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e0f8:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e2f0 <CyU3PUsbStart+0x360>
4001e0fc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e100:	e3e00000 	mvn	r0, #0
4001e104:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e108:	e3a00000 	mov	r0, #0
4001e10c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e110:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e114:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e118:	e5810004 	str	r0, [r1, #4]
4001e11c:	e3a00008 	mov	r0, #8
4001e120:	eb000f42 	bl	40021e30 <CyU3PVicEnableInt>
4001e124:	e3a00009 	mov	r0, #9
4001e128:	eb000f40 	bl	40021e30 <CyU3PVicEnableInt>
4001e12c:	ebfffa8c 	bl	4001cb64 <CyU3PUsbGetSpeed>
4001e130:	e1a06000 	mov	r6, r0
4001e134:	eb0006b5 	bl	4001fc10 <CyU3PUsbEpPrepare>
4001e138:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e2e0 <CyU3PUsbStart+0x350>
4001e13c:	e5900000 	ldr	r0, [r0]
4001e140:	e3100002 	tst	r0, #2
4001e144:	1a000003 	bne	4001e158 <CyU3PUsbStart+0x1c8>
4001e148:	e3e00000 	mvn	r0, #0
4001e14c:	e5850000 	str	r0, [r5]
4001e150:	e3a00000 	mov	r0, #0
4001e154:	e585000c 	str	r0, [r5, #12]
4001e158:	e3e00000 	mvn	r0, #0
4001e15c:	e59f1190 	ldr	r1, [pc, #400]	; 4001e2f4 <CyU3PUsbStart+0x364>
4001e160:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e164:	e3a00b01 	mov	r0, #1024	; 0x400
4001e168:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e16c:	e59f1150 	ldr	r1, [pc, #336]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001e170:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e174:	e3a00015 	mov	r0, #21
4001e178:	eb000f2c 	bl	40021e30 <CyU3PVicEnableInt>
4001e17c:	e3a000fe 	mov	r0, #254	; 0xfe
4001e180:	eaffff88 	b	4001dfa8 <CyU3PUsbStart+0x18>
4001e184:	e1a00000 	nop			; (mov r0, r0)
4001e188:	e59f0168 	ldr	r0, [pc, #360]	; 4001e2f8 <CyU3PUsbStart+0x368>
4001e18c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e190:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e194:	e59f115c 	ldr	r1, [pc, #348]	; 4001e2f8 <CyU3PUsbStart+0x368>
4001e198:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e19c:	e3a00002 	mov	r0, #2
4001e1a0:	ebffd49f 	bl	40013424 <CyU3PBusyWait>
4001e1a4:	e59f014c 	ldr	r0, [pc, #332]	; 4001e2f8 <CyU3PUsbStart+0x368>
4001e1a8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e1ac:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e1b0:	e59f1140 	ldr	r1, [pc, #320]	; 4001e2f8 <CyU3PUsbStart+0x368>
4001e1b4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e1b8:	e1a00001 	mov	r0, r1
4001e1bc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e1c0:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e1c4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e1c8:	e1a00001 	mov	r0, r1
4001e1cc:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e1d0:	e3800008 	orr	r0, r0, #8
4001e1d4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e1d8:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e1dc:	e5900008 	ldr	r0, [r0, #8]
4001e1e0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e1e4:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e1e8:	e5810008 	str	r0, [r1, #8]
4001e1ec:	e3a00002 	mov	r0, #2
4001e1f0:	ebffd48b 	bl	40013424 <CyU3PBusyWait>
4001e1f4:	ebfff645 	bl	4001bb10 <CyU3POtgIsDeviceMode>
4001e1f8:	e3500000 	cmp	r0, #0
4001e1fc:	0a000002 	beq	4001e20c <CyU3PUsbStart+0x27c>
4001e200:	ebfffa5b 	bl	4001cb74 <CyU3PUsbHostIsStarted>
4001e204:	e3500000 	cmp	r0, #0
4001e208:	0a000001 	beq	4001e214 <CyU3PUsbStart+0x284>
4001e20c:	e3a00047 	mov	r0, #71	; 0x47
4001e210:	eaffff64 	b	4001dfa8 <CyU3PUsbStart+0x18>
4001e214:	e3a01002 	mov	r1, #2
4001e218:	e1a00001 	mov	r0, r1
4001e21c:	ebfff820 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
4001e220:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e2fc <CyU3PUsbStart+0x36c>
4001e224:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e300 <CyU3PUsbStart+0x370>
4001e228:	e5810000 	str	r0, [r1]
4001e22c:	ebfff633 	bl	4001bb00 <CyU3POtgGetMode>
4001e230:	e3500000 	cmp	r0, #0
4001e234:	1a000003 	bne	4001e248 <CyU3PUsbStart+0x2b8>
4001e238:	ebfffc09 	bl	4001d264 <CyU3PUsbPowerOn>
4001e23c:	e3a00000 	mov	r0, #0
4001e240:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e2f8 <CyU3PUsbStart+0x368>
4001e244:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e248:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e304 <CyU3PUsbStart+0x374>
4001e24c:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e2f8 <CyU3PUsbStart+0x368>
4001e250:	e5810008 	str	r0, [r1, #8]
4001e254:	e00108c0 	and	r0, r1, r0, asr #17
4001e258:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e25c:	e3800008 	orr	r0, r0, #8
4001e260:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e264:	eb000662 	bl	4001fbf4 <CyU3PUsbDescInit>
4001e268:	ebfff8e9 	bl	4001c614 <CyU3PUsbCreateDmaChannels>
4001e26c:	e1a04000 	mov	r4, r0
4001e270:	e3540000 	cmp	r4, #0
4001e274:	0a000001 	beq	4001e280 <CyU3PUsbStart+0x2f0>
4001e278:	e1a00004 	mov	r0, r4
4001e27c:	eaffff49 	b	4001dfa8 <CyU3PUsbStart+0x18>
4001e280:	e3a00001 	mov	r0, #1
4001e284:	e59f1038 	ldr	r1, [pc, #56]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001e288:	e5c10008 	strb	r0, [r1, #8]
4001e28c:	e2810000 	add	r0, r1, #0
4001e290:	e5d00007 	ldrb	r0, [r0, #7]
4001e294:	e3500001 	cmp	r0, #1
4001e298:	1a000002 	bne	4001e2a8 <CyU3PUsbStart+0x318>
4001e29c:	e3a00003 	mov	r0, #3
4001e2a0:	e5c10008 	strb	r0, [r1, #8]
4001e2a4:	ea000002 	b	4001e2b4 <CyU3PUsbStart+0x324>
4001e2a8:	e3a00002 	mov	r0, #2
4001e2ac:	e59f1010 	ldr	r1, [pc, #16]	; 4001e2c4 <CyU3PUsbStart+0x334>
4001e2b0:	e5c10008 	strb	r0, [r1, #8]
4001e2b4:	ebfff81b 	bl	4001c328 <CyU3PUibInit>
4001e2b8:	e1a00004 	mov	r0, r4
4001e2bc:	eaffff39 	b	4001dfa8 <CyU3PUsbStart+0x18>
4001e2c0:	40030d64 	.word	0x40030d64
4001e2c4:	40031d40 	.word	0x40031d40
4001e2c8:	40030c6c 	.word	0x40030c6c
4001e2cc:	40002000 	.word	0x40002000
4001e2d0:	40030d74 	.word	0x40030d74
4001e2d4:	42335846 	.word	0x42335846
4001e2d8:	00010101 	.word	0x00010101
4001e2dc:	00010200 	.word	0x00010200
4001e2e0:	40030d48 	.word	0x40030d48
4001e2e4:	e0033000 	.word	0xe0033000
4001e2e8:	00038081 	.word	0x00038081
4001e2ec:	00004a3d 	.word	0x00004a3d
4001e2f0:	0000095c 	.word	0x0000095c
4001e2f4:	e0051000 	.word	0xe0051000
4001e2f8:	e0031000 	.word	0xe0031000
4001e2fc:	de001011 	.word	0xde001011
4001e300:	e0050000 	.word	0xe0050000
4001e304:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e308 <GetUsbLinkActive>:
4001e308:	e92d4010 	push	{r4, lr}
4001e30c:	e59f0064 	ldr	r0, [pc, #100]	; 4001e378 <GetUsbLinkActive+0x70>
4001e310:	e5d00009 	ldrb	r0, [r0, #9]
4001e314:	e3500003 	cmp	r0, #3
4001e318:	1a000015 	bne	4001e374 <GetUsbLinkActive+0x6c>
4001e31c:	e59f0058 	ldr	r0, [pc, #88]	; 4001e37c <GetUsbLinkActive+0x74>
4001e320:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e324:	e3c00004 	bic	r0, r0, #4
4001e328:	e59f104c 	ldr	r1, [pc, #76]	; 4001e37c <GetUsbLinkActive+0x74>
4001e32c:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e330:	e1a00001 	mov	r0, r1
4001e334:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e338:	e3c00004 	bic	r0, r0, #4
4001e33c:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e340:	e59f0030 	ldr	r0, [pc, #48]	; 4001e378 <GetUsbLinkActive+0x70>
4001e344:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e348:	e3500000 	cmp	r0, #0
4001e34c:	1a000008 	bne	4001e374 <GetUsbLinkActive+0x6c>
4001e350:	e1a00001 	mov	r0, r1
4001e354:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e358:	e200403f 	and	r4, r0, #63	; 0x3f
4001e35c:	e3540011 	cmp	r4, #17
4001e360:	0a000001 	beq	4001e36c <GetUsbLinkActive+0x64>
4001e364:	e3540012 	cmp	r4, #18
4001e368:	1a000001 	bne	4001e374 <GetUsbLinkActive+0x6c>
4001e36c:	e3a00000 	mov	r0, #0
4001e370:	ebfffdcd 	bl	4001daac <CyU3PUsbSetLinkPowerState>
4001e374:	e8bd8010 	pop	{r4, pc}
4001e378:	40031d40 	.word	0x40031d40
4001e37c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e380 <CyU3PHsGrantIntrHandler>:
4001e380:	e92d4010 	push	{r4, lr}
4001e384:	e59f005c 	ldr	r0, [pc, #92]	; 4001e3e8 <CyU3PHsGrantIntrHandler+0x68>
4001e388:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e38c:	e3100080 	tst	r0, #128	; 0x80
4001e390:	0a000013 	beq	4001e3e4 <CyU3PHsGrantIntrHandler+0x64>
4001e394:	e59f0050 	ldr	r0, [pc, #80]	; 4001e3ec <CyU3PHsGrantIntrHandler+0x6c>
4001e398:	e5900014 	ldr	r0, [r0, #20]
4001e39c:	e59f1048 	ldr	r1, [pc, #72]	; 4001e3ec <CyU3PHsGrantIntrHandler+0x6c>
4001e3a0:	e581000c 	str	r0, [r1, #12]
4001e3a4:	e2810000 	add	r0, r1, #0
4001e3a8:	e5900018 	ldr	r0, [r0, #24]
4001e3ac:	e5810010 	str	r0, [r1, #16]
4001e3b0:	e59f0038 	ldr	r0, [pc, #56]	; 4001e3f0 <CyU3PHsGrantIntrHandler+0x70>
4001e3b4:	e5900000 	ldr	r0, [r0]
4001e3b8:	e3500000 	cmp	r0, #0
4001e3bc:	0a000004 	beq	4001e3d4 <CyU3PHsGrantIntrHandler+0x54>
4001e3c0:	e3a01001 	mov	r1, #1
4001e3c4:	e3a00006 	mov	r0, #6
4001e3c8:	e59f2020 	ldr	r2, [pc, #32]	; 4001e3f0 <CyU3PHsGrantIntrHandler+0x70>
4001e3cc:	e5922000 	ldr	r2, [r2]
4001e3d0:	e12fff32 	blx	r2
4001e3d4:	e3a00002 	mov	r0, #2
4001e3d8:	e59f1014 	ldr	r1, [pc, #20]	; 4001e3f4 <CyU3PHsGrantIntrHandler+0x74>
4001e3dc:	e5c10009 	strb	r0, [r1, #9]
4001e3e0:	eb00060a 	bl	4001fc10 <CyU3PUsbEpPrepare>
4001e3e4:	e8bd8010 	pop	{r4, pc}
4001e3e8:	e0031000 	.word	0xe0031000
4001e3ec:	40031f98 	.word	0x40031f98
4001e3f0:	40030da0 	.word	0x40030da0
4001e3f4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e3f8 <CyU3PUibApplicationDefine>:
4001e3f8:	e92d4030 	push	{r4, r5, lr}
4001e3fc:	e24dd01c 	sub	sp, sp, #28
4001e400:	eb000178 	bl	4001e9e8 <CyU3PUibInitVars>
4001e404:	e3a00b01 	mov	r0, #1024	; 0x400
4001e408:	ebff9499 	bl	40003674 <CyU3PMemAlloc>
4001e40c:	e1a05000 	mov	r5, r0
4001e410:	e3550000 	cmp	r5, #0
4001e414:	0a00004f 	beq	4001e558 <CyU3PUibApplicationDefine+0x160>
4001e418:	e3a030a8 	mov	r3, #168	; 0xa8
4001e41c:	e3a02000 	mov	r2, #0
4001e420:	e3a00004 	mov	r0, #4
4001e424:	e58d000c 	str	r0, [sp, #12]
4001e428:	e58d2010 	str	r2, [sp, #16]
4001e42c:	e58d2014 	str	r2, [sp, #20]
4001e430:	e58d3018 	str	r3, [sp, #24]
4001e434:	e3a02b01 	mov	r2, #1024	; 0x400
4001e438:	e3a03000 	mov	r3, #0
4001e43c:	e58d2004 	str	r2, [sp, #4]
4001e440:	e59f2118 	ldr	r2, [pc, #280]	; 4001e560 <CyU3PUibApplicationDefine+0x168>
4001e444:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e448:	e58d0008 	str	r0, [sp, #8]
4001e44c:	e59f0120 	ldr	r0, [pc, #288]	; 4001e574 <CyU3PUibApplicationDefine+0x17c>
4001e450:	e58d5000 	str	r5, [sp]
4001e454:	ebffb012 	bl	4000a4a4 <_txe_thread_create>
4001e458:	e1a04000 	mov	r4, r0
4001e45c:	e3540000 	cmp	r4, #0
4001e460:	1a00003c 	bne	4001e558 <CyU3PUibApplicationDefine+0x160>
4001e464:	e3a00080 	mov	r0, #128	; 0x80
4001e468:	ebff9481 	bl	40003674 <CyU3PMemAlloc>
4001e46c:	e1a05000 	mov	r5, r0
4001e470:	e3550000 	cmp	r5, #0
4001e474:	0a000009 	beq	4001e4a0 <CyU3PUibApplicationDefine+0xa8>
4001e478:	e3a0303c 	mov	r3, #60	; 0x3c
4001e47c:	e3a02080 	mov	r2, #128	; 0x80
4001e480:	e1cd20f0 	strd	r2, [sp]
4001e484:	e1a03005 	mov	r3, r5
4001e488:	e3a02004 	mov	r2, #4
4001e48c:	e3a01000 	mov	r1, #0
4001e490:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e578 <CyU3PUibApplicationDefine+0x180>
4001e494:	ebffaf1c 	bl	4000a10c <_txe_queue_create>
4001e498:	e1a04000 	mov	r4, r0
4001e49c:	ea000000 	b	4001e4a4 <CyU3PUibApplicationDefine+0xac>
4001e4a0:	e3a04010 	mov	r4, #16
4001e4a4:	e3540000 	cmp	r4, #0
4001e4a8:	1a000004 	bne	4001e4c0 <CyU3PUibApplicationDefine+0xc8>
4001e4ac:	e3a02028 	mov	r2, #40	; 0x28
4001e4b0:	e3a01000 	mov	r1, #0
4001e4b4:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e57c <CyU3PUibApplicationDefine+0x184>
4001e4b8:	ebffad7e 	bl	40009ab8 <_txe_event_flags_create>
4001e4bc:	e1a04000 	mov	r4, r0
4001e4c0:	e3540000 	cmp	r4, #0
4001e4c4:	1a000005 	bne	4001e4e0 <CyU3PUibApplicationDefine+0xe8>
4001e4c8:	e3a03038 	mov	r3, #56	; 0x38
4001e4cc:	e3a02000 	mov	r2, #0
4001e4d0:	e1a01002 	mov	r1, r2
4001e4d4:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e580 <CyU3PUibApplicationDefine+0x188>
4001e4d8:	ebffae30 	bl	40009da0 <_txe_mutex_create>
4001e4dc:	e1a04000 	mov	r4, r0
4001e4e0:	e3540000 	cmp	r4, #0
4001e4e4:	1a00000a 	bne	4001e514 <CyU3PUibApplicationDefine+0x11c>
4001e4e8:	e3a0302c 	mov	r3, #44	; 0x2c
4001e4ec:	e3a02000 	mov	r2, #0
4001e4f0:	e3a00064 	mov	r0, #100	; 0x64
4001e4f4:	e88d0005 	stm	sp, {r0, r2}
4001e4f8:	e1cd20f8 	strd	r2, [sp, #8]
4001e4fc:	e1a03002 	mov	r3, r2
4001e500:	e59f207c 	ldr	r2, [pc, #124]	; 4001e584 <CyU3PUibApplicationDefine+0x18c>
4001e504:	e3a01000 	mov	r1, #0
4001e508:	e59f0078 	ldr	r0, [pc, #120]	; 4001e588 <CyU3PUibApplicationDefine+0x190>
4001e50c:	ebffb111 	bl	4000a958 <_txe_timer_create>
4001e510:	e1a04000 	mov	r4, r0
4001e514:	e3540000 	cmp	r4, #0
4001e518:	1a00000a 	bne	4001e548 <CyU3PUibApplicationDefine+0x150>
4001e51c:	e3a0302c 	mov	r3, #44	; 0x2c
4001e520:	e3a02001 	mov	r2, #1
4001e524:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e528:	e58d1000 	str	r1, [sp]
4001e52c:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e530:	e3a03000 	mov	r3, #0
4001e534:	e59f2050 	ldr	r2, [pc, #80]	; 4001e58c <CyU3PUibApplicationDefine+0x194>
4001e538:	e1a01003 	mov	r1, r3
4001e53c:	e59f004c 	ldr	r0, [pc, #76]	; 4001e590 <CyU3PUibApplicationDefine+0x198>
4001e540:	ebffb104 	bl	4000a958 <_txe_timer_create>
4001e544:	e1a04000 	mov	r4, r0
4001e548:	e3540000 	cmp	r4, #0
4001e54c:	1a000001 	bne	4001e558 <CyU3PUibApplicationDefine+0x160>
4001e550:	e59f001c 	ldr	r0, [pc, #28]	; 4001e574 <CyU3PUibApplicationDefine+0x17c>
4001e554:	ebffb0bd 	bl	4000a850 <_txe_thread_resume>
4001e558:	e28dd01c 	add	sp, sp, #28
4001e55c:	e8bd8030 	pop	{r4, r5, pc}
4001e560:	4001f764 	.word	0x4001f764
4001e564:	555f3430 	.word	0x555f3430
4001e568:	545f4249 	.word	0x545f4249
4001e56c:	41455248 	.word	0x41455248
4001e570:	00000044 	.word	0x00000044
4001e574:	40031dd4 	.word	0x40031dd4
4001e578:	40031e7c 	.word	0x40031e7c
4001e57c:	40031eb8 	.word	0x40031eb8
4001e580:	40031ee0 	.word	0x40031ee0
4001e584:	4001f6f4 	.word	0x4001f6f4
4001e588:	400326a0 	.word	0x400326a0
4001e58c:	4001eaa0 	.word	0x4001eaa0
4001e590:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e594 <CyU3PUibDevCtrlEvtHandler>:
4001e594:	e92d4010 	push	{r4, lr}
4001e598:	e59f01c8 	ldr	r0, [pc, #456]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e59c:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e5a0:	e3140c01 	tst	r4, #256	; 0x100
4001e5a4:	0a000008 	beq	4001e5cc <CyU3PUibDevCtrlEvtHandler+0x38>
4001e5a8:	e3a00c01 	mov	r0, #256	; 0x100
4001e5ac:	e59f11b4 	ldr	r1, [pc, #436]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5b0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e5b4:	eb000995 	bl	40020c10 <CyU3PUsbResumeHandler>
4001e5b8:	e59f01a8 	ldr	r0, [pc, #424]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5bc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e5c0:	e3800c01 	orr	r0, r0, #256	; 0x100
4001e5c4:	e59f119c 	ldr	r1, [pc, #412]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5c8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e5cc:	e3140004 	tst	r4, #4
4001e5d0:	0a000008 	beq	4001e5f8 <CyU3PUibDevCtrlEvtHandler+0x64>
4001e5d4:	e3a00004 	mov	r0, #4
4001e5d8:	e59f1188 	ldr	r1, [pc, #392]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5dc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e5e0:	eb000d6c 	bl	40021b98 <CyU3PUsbSuspendHandler>
4001e5e4:	e59f017c 	ldr	r0, [pc, #380]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5e8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e5ec:	e3800004 	orr	r0, r0, #4
4001e5f0:	e59f1170 	ldr	r1, [pc, #368]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e5f4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e5f8:	e3140008 	tst	r4, #8
4001e5fc:	0a000008 	beq	4001e624 <CyU3PUibDevCtrlEvtHandler+0x90>
4001e600:	e3a00008 	mov	r0, #8
4001e604:	e59f115c 	ldr	r1, [pc, #348]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e608:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e60c:	eb00092e 	bl	40020acc <CyU3PUsbResetHandler>
4001e610:	e59f0150 	ldr	r0, [pc, #336]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e614:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e618:	e3800008 	orr	r0, r0, #8
4001e61c:	e59f1144 	ldr	r1, [pc, #324]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e620:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e624:	e3140010 	tst	r4, #16
4001e628:	0a000008 	beq	4001e650 <CyU3PUibDevCtrlEvtHandler+0xbc>
4001e62c:	e3a00010 	mov	r0, #16
4001e630:	e59f1130 	ldr	r1, [pc, #304]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e634:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e638:	ebffff50 	bl	4001e380 <CyU3PHsGrantIntrHandler>
4001e63c:	e59f0124 	ldr	r0, [pc, #292]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e640:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e644:	e3800010 	orr	r0, r0, #16
4001e648:	e59f1118 	ldr	r1, [pc, #280]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e64c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e650:	e3140040 	tst	r4, #64	; 0x40
4001e654:	0a000018 	beq	4001e6bc <CyU3PUibDevCtrlEvtHandler+0x128>
4001e658:	e59f010c 	ldr	r0, [pc, #268]	; 4001e76c <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e65c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001e660:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001e664:	e59f1100 	ldr	r1, [pc, #256]	; 4001e76c <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e668:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e66c:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001e670:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e674:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e678:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001e67c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e680:	e1a00001 	mov	r0, r1
4001e684:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e688:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e68c:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e690:	e3a00040 	mov	r0, #64	; 0x40
4001e694:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e698:	e3a00001 	mov	r0, #1
4001e69c:	e59f10cc 	ldr	r1, [pc, #204]	; 4001e770 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e6a0:	e5810014 	str	r0, [r1, #20]
4001e6a4:	eb000b38 	bl	4002138c <CyU3PUsbSetupCommand>
4001e6a8:	e59f00b8 	ldr	r0, [pc, #184]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6ac:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6b0:	e3800040 	orr	r0, r0, #64	; 0x40
4001e6b4:	e59f10ac 	ldr	r1, [pc, #172]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6b8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6bc:	e3140080 	tst	r4, #128	; 0x80
4001e6c0:	0a000006 	beq	4001e6e0 <CyU3PUibDevCtrlEvtHandler+0x14c>
4001e6c4:	e3a00080 	mov	r0, #128	; 0x80
4001e6c8:	e59f1098 	ldr	r1, [pc, #152]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6d0:	e1c10000 	bic	r0, r1, r0
4001e6d4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6d8:	e3800080 	orr	r0, r0, #128	; 0x80
4001e6dc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6e0:	e3140b02 	tst	r4, #2048	; 0x800
4001e6e4:	0a00001e 	beq	4001e764 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001e6e8:	e59f0080 	ldr	r0, [pc, #128]	; 4001e770 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e6ec:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e6f0:	e3500000 	cmp	r0, #0
4001e6f4:	1a000002 	bne	4001e704 <CyU3PUibDevCtrlEvtHandler+0x170>
4001e6f8:	e3a00501 	mov	r0, #4194304	; 0x400000
4001e6fc:	e59f1068 	ldr	r1, [pc, #104]	; 4001e76c <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e700:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e704:	e3a00b02 	mov	r0, #2048	; 0x800
4001e708:	e59f1058 	ldr	r1, [pc, #88]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e70c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e710:	e59f0058 	ldr	r0, [pc, #88]	; 4001e770 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e714:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001e718:	e3500000 	cmp	r0, #0
4001e71c:	0a00000b 	beq	4001e750 <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001e720:	e59f004c 	ldr	r0, [pc, #76]	; 4001e774 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e724:	e5900000 	ldr	r0, [r0]
4001e728:	e3500000 	cmp	r0, #0
4001e72c:	0a000004 	beq	4001e744 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001e730:	e3a01000 	mov	r1, #0
4001e734:	e3a0000a 	mov	r0, #10
4001e738:	e59f2034 	ldr	r2, [pc, #52]	; 4001e774 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e73c:	e5922000 	ldr	r2, [r2]
4001e740:	e12fff32 	blx	r2
4001e744:	e3a00000 	mov	r0, #0
4001e748:	e59f1020 	ldr	r1, [pc, #32]	; 4001e770 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e74c:	e5810040 	str	r0, [r1, #64]	; 0x40
4001e750:	e59f0010 	ldr	r0, [pc, #16]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e754:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e758:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001e75c:	e59f1004 	ldr	r1, [pc, #4]	; 4001e768 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e760:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e764:	e8bd8010 	pop	{r4, pc}
4001e768:	e0031000 	.word	0xe0031000
4001e76c:	e0032000 	.word	0xe0032000
4001e770:	40031d40 	.word	0x40031d40
4001e774:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibEPEvtHandler:

4001e778 <CyU3PUibEPEvtHandler>:
4001e778:	e92d4070 	push	{r4, r5, r6, lr}
4001e77c:	e59f0244 	ldr	r0, [pc, #580]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x250>
4001e780:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001e784:	e59f123c 	ldr	r1, [pc, #572]	; 4001e9c8 <CyU3PUibEPEvtHandler+0x250>
4001e788:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001e78c:	e0004001 	and	r4, r0, r1
4001e790:	e59f0234 	ldr	r0, [pc, #564]	; 4001e9cc <CyU3PUibEPEvtHandler+0x254>
4001e794:	e5900000 	ldr	r0, [r0]
4001e798:	e0044000 	and	r4, r4, r0
4001e79c:	e3a05001 	mov	r5, #1
4001e7a0:	ea000080 	b	4001e9a8 <CyU3PUibEPEvtHandler+0x230>
4001e7a4:	e3a00001 	mov	r0, #1
4001e7a8:	e1140510 	tst	r4, r0, lsl r5
4001e7ac:	0a00003b 	beq	4001e8a0 <CyU3PUibEPEvtHandler+0x128>
4001e7b0:	e59f0218 	ldr	r0, [pc, #536]	; 4001e9d0 <CyU3PUibEPEvtHandler+0x258>
4001e7b4:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e7b8:	e59f0214 	ldr	r0, [pc, #532]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e7bc:	e5900000 	ldr	r0, [r0]
4001e7c0:	e3500000 	cmp	r0, #0
4001e7c4:	0a000033 	beq	4001e898 <CyU3PUibEPEvtHandler+0x120>
4001e7c8:	e59f0208 	ldr	r0, [pc, #520]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e7cc:	e5900000 	ldr	r0, [r0]
4001e7d0:	e3100001 	tst	r0, #1
4001e7d4:	0a000008 	beq	4001e7fc <CyU3PUibEPEvtHandler+0x84>
4001e7d8:	e3160702 	tst	r6, #524288	; 0x80000
4001e7dc:	0a000006 	beq	4001e7fc <CyU3PUibEPEvtHandler+0x84>
4001e7e0:	e3852080 	orr	r2, r5, #128	; 0x80
4001e7e4:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e7e8:	e5d01009 	ldrb	r1, [r0, #9]
4001e7ec:	e3a00001 	mov	r0, #1
4001e7f0:	e59f31dc 	ldr	r3, [pc, #476]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e7f4:	e5933000 	ldr	r3, [r3]
4001e7f8:	e12fff33 	blx	r3
4001e7fc:	e59f01d4 	ldr	r0, [pc, #468]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e800:	e5900000 	ldr	r0, [r0]
4001e804:	e3100002 	tst	r0, #2
4001e808:	0a000008 	beq	4001e830 <CyU3PUibEPEvtHandler+0xb8>
4001e80c:	e3160602 	tst	r6, #2097152	; 0x200000
4001e810:	0a000006 	beq	4001e830 <CyU3PUibEPEvtHandler+0xb8>
4001e814:	e3852080 	orr	r2, r5, #128	; 0x80
4001e818:	e59f01bc 	ldr	r0, [pc, #444]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e81c:	e5d01009 	ldrb	r1, [r0, #9]
4001e820:	e3a00002 	mov	r0, #2
4001e824:	e59f31a8 	ldr	r3, [pc, #424]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e828:	e5933000 	ldr	r3, [r3]
4001e82c:	e12fff33 	blx	r3
4001e830:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e834:	e5900000 	ldr	r0, [r0]
4001e838:	e3100004 	tst	r0, #4
4001e83c:	0a000008 	beq	4001e864 <CyU3PUibEPEvtHandler+0xec>
4001e840:	e3160501 	tst	r6, #4194304	; 0x400000
4001e844:	0a000006 	beq	4001e864 <CyU3PUibEPEvtHandler+0xec>
4001e848:	e3852080 	orr	r2, r5, #128	; 0x80
4001e84c:	e59f0188 	ldr	r0, [pc, #392]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e850:	e5d01009 	ldrb	r1, [r0, #9]
4001e854:	e3a00004 	mov	r0, #4
4001e858:	e59f3174 	ldr	r3, [pc, #372]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e85c:	e5933000 	ldr	r3, [r3]
4001e860:	e12fff33 	blx	r3
4001e864:	e59f016c 	ldr	r0, [pc, #364]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e868:	e5900000 	ldr	r0, [r0]
4001e86c:	e3100008 	tst	r0, #8
4001e870:	0a000008 	beq	4001e898 <CyU3PUibEPEvtHandler+0x120>
4001e874:	e3160502 	tst	r6, #8388608	; 0x800000
4001e878:	0a000006 	beq	4001e898 <CyU3PUibEPEvtHandler+0x120>
4001e87c:	e3852080 	orr	r2, r5, #128	; 0x80
4001e880:	e59f0154 	ldr	r0, [pc, #340]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e884:	e5d01009 	ldrb	r1, [r0, #9]
4001e888:	e3a00008 	mov	r0, #8
4001e88c:	e59f3140 	ldr	r3, [pc, #320]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e890:	e5933000 	ldr	r3, [r3]
4001e894:	e12fff33 	blx	r3
4001e898:	e59f0130 	ldr	r0, [pc, #304]	; 4001e9d0 <CyU3PUibEPEvtHandler+0x258>
4001e89c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e8a0:	e2850010 	add	r0, r5, #16
4001e8a4:	e3a01001 	mov	r1, #1
4001e8a8:	e1140011 	tst	r4, r1, lsl r0
4001e8ac:	0a00003b 	beq	4001e9a0 <CyU3PUibEPEvtHandler+0x228>
4001e8b0:	e59f0128 	ldr	r0, [pc, #296]	; 4001e9e0 <CyU3PUibEPEvtHandler+0x268>
4001e8b4:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e8b8:	e59f0114 	ldr	r0, [pc, #276]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e8bc:	e5900000 	ldr	r0, [r0]
4001e8c0:	e3500000 	cmp	r0, #0
4001e8c4:	0a000033 	beq	4001e998 <CyU3PUibEPEvtHandler+0x220>
4001e8c8:	e59f0108 	ldr	r0, [pc, #264]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e8cc:	e5900000 	ldr	r0, [r0]
4001e8d0:	e3100001 	tst	r0, #1
4001e8d4:	0a000008 	beq	4001e8fc <CyU3PUibEPEvtHandler+0x184>
4001e8d8:	e3160702 	tst	r6, #524288	; 0x80000
4001e8dc:	0a000006 	beq	4001e8fc <CyU3PUibEPEvtHandler+0x184>
4001e8e0:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e8e4:	e5d01009 	ldrb	r1, [r0, #9]
4001e8e8:	e1a02005 	mov	r2, r5
4001e8ec:	e3a00001 	mov	r0, #1
4001e8f0:	e59f30dc 	ldr	r3, [pc, #220]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e8f4:	e5933000 	ldr	r3, [r3]
4001e8f8:	e12fff33 	blx	r3
4001e8fc:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e900:	e5900000 	ldr	r0, [r0]
4001e904:	e3100002 	tst	r0, #2
4001e908:	0a000008 	beq	4001e930 <CyU3PUibEPEvtHandler+0x1b8>
4001e90c:	e3160602 	tst	r6, #2097152	; 0x200000
4001e910:	0a000006 	beq	4001e930 <CyU3PUibEPEvtHandler+0x1b8>
4001e914:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e918:	e5d01009 	ldrb	r1, [r0, #9]
4001e91c:	e1a02005 	mov	r2, r5
4001e920:	e3a00002 	mov	r0, #2
4001e924:	e59f30a8 	ldr	r3, [pc, #168]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e928:	e5933000 	ldr	r3, [r3]
4001e92c:	e12fff33 	blx	r3
4001e930:	e59f00a0 	ldr	r0, [pc, #160]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e934:	e5900000 	ldr	r0, [r0]
4001e938:	e3100004 	tst	r0, #4
4001e93c:	0a000008 	beq	4001e964 <CyU3PUibEPEvtHandler+0x1ec>
4001e940:	e3160501 	tst	r6, #4194304	; 0x400000
4001e944:	0a000006 	beq	4001e964 <CyU3PUibEPEvtHandler+0x1ec>
4001e948:	e59f008c 	ldr	r0, [pc, #140]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e94c:	e5d01009 	ldrb	r1, [r0, #9]
4001e950:	e1a02005 	mov	r2, r5
4001e954:	e3a00004 	mov	r0, #4
4001e958:	e59f3074 	ldr	r3, [pc, #116]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e95c:	e5933000 	ldr	r3, [r3]
4001e960:	e12fff33 	blx	r3
4001e964:	e59f006c 	ldr	r0, [pc, #108]	; 4001e9d8 <CyU3PUibEPEvtHandler+0x260>
4001e968:	e5900000 	ldr	r0, [r0]
4001e96c:	e3100008 	tst	r0, #8
4001e970:	0a000008 	beq	4001e998 <CyU3PUibEPEvtHandler+0x220>
4001e974:	e3160502 	tst	r6, #8388608	; 0x800000
4001e978:	0a000006 	beq	4001e998 <CyU3PUibEPEvtHandler+0x220>
4001e97c:	e59f0058 	ldr	r0, [pc, #88]	; 4001e9dc <CyU3PUibEPEvtHandler+0x264>
4001e980:	e5d01009 	ldrb	r1, [r0, #9]
4001e984:	e1a02005 	mov	r2, r5
4001e988:	e3a00008 	mov	r0, #8
4001e98c:	e59f3040 	ldr	r3, [pc, #64]	; 4001e9d4 <CyU3PUibEPEvtHandler+0x25c>
4001e990:	e5933000 	ldr	r3, [r3]
4001e994:	e12fff33 	blx	r3
4001e998:	e59f0040 	ldr	r0, [pc, #64]	; 4001e9e0 <CyU3PUibEPEvtHandler+0x268>
4001e99c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e9a0:	e2850001 	add	r0, r5, #1
4001e9a4:	e20050ff 	and	r5, r0, #255	; 0xff
4001e9a8:	e3550010 	cmp	r5, #16
4001e9ac:	baffff7c 	blt	4001e7a4 <CyU3PUibEPEvtHandler+0x2c>
4001e9b0:	e59f002c 	ldr	r0, [pc, #44]	; 4001e9e4 <CyU3PUibEPEvtHandler+0x26c>
4001e9b4:	e5900004 	ldr	r0, [r0, #4]
4001e9b8:	e3800010 	orr	r0, r0, #16
4001e9bc:	e59f1020 	ldr	r1, [pc, #32]	; 4001e9e4 <CyU3PUibEPEvtHandler+0x26c>
4001e9c0:	e5810004 	str	r0, [r1, #4]
4001e9c4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e9c8:	e0031000 	.word	0xe0031000
4001e9cc:	40030d84 	.word	0x40030d84
4001e9d0:	e0031418 	.word	0xe0031418
4001e9d4:	40030d7c 	.word	0x40030d7c
4001e9d8:	40030d80 	.word	0x40030d80
4001e9dc:	40031d40 	.word	0x40031d40
4001e9e0:	e0031498 	.word	0xe0031498
4001e9e4:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001e9e8 <CyU3PUibInitVars>:
4001e9e8:	e92d4010 	push	{r4, lr}
4001e9ec:	e3a0207c 	mov	r2, #124	; 0x7c
4001e9f0:	e3a01000 	mov	r1, #0
4001e9f4:	e59f0070 	ldr	r0, [pc, #112]	; 4001ea6c <CyU3PUibInitVars+0x84>
4001e9f8:	ebff932e 	bl	400036b8 <CyU3PMemSet>
4001e9fc:	e3a02074 	mov	r2, #116	; 0x74
4001ea00:	e3a01000 	mov	r1, #0
4001ea04:	e59f0064 	ldr	r0, [pc, #100]	; 4001ea70 <CyU3PUibInitVars+0x88>
4001ea08:	ebff932a 	bl	400036b8 <CyU3PMemSet>
4001ea0c:	e3a00000 	mov	r0, #0
4001ea10:	e59f105c 	ldr	r1, [pc, #92]	; 4001ea74 <CyU3PUibInitVars+0x8c>
4001ea14:	e5810000 	str	r0, [r1]
4001ea18:	e59f1058 	ldr	r1, [pc, #88]	; 4001ea78 <CyU3PUibInitVars+0x90>
4001ea1c:	e5810000 	str	r0, [r1]
4001ea20:	e59f1054 	ldr	r1, [pc, #84]	; 4001ea7c <CyU3PUibInitVars+0x94>
4001ea24:	e5810000 	str	r0, [r1]
4001ea28:	e59f1050 	ldr	r1, [pc, #80]	; 4001ea80 <CyU3PUibInitVars+0x98>
4001ea2c:	e5810000 	str	r0, [r1]
4001ea30:	e59f104c 	ldr	r1, [pc, #76]	; 4001ea84 <CyU3PUibInitVars+0x9c>
4001ea34:	e5810000 	str	r0, [r1]
4001ea38:	e59f1048 	ldr	r1, [pc, #72]	; 4001ea88 <CyU3PUibInitVars+0xa0>
4001ea3c:	e5810000 	str	r0, [r1]
4001ea40:	e59f1044 	ldr	r1, [pc, #68]	; 4001ea8c <CyU3PUibInitVars+0xa4>
4001ea44:	e5810000 	str	r0, [r1]
4001ea48:	e59f1040 	ldr	r1, [pc, #64]	; 4001ea90 <CyU3PUibInitVars+0xa8>
4001ea4c:	e5810000 	str	r0, [r1]
4001ea50:	e59f103c 	ldr	r1, [pc, #60]	; 4001ea94 <CyU3PUibInitVars+0xac>
4001ea54:	e5810000 	str	r0, [r1]
4001ea58:	e59f1038 	ldr	r1, [pc, #56]	; 4001ea98 <CyU3PUibInitVars+0xb0>
4001ea5c:	e5810000 	str	r0, [r1]
4001ea60:	e59f1034 	ldr	r1, [pc, #52]	; 4001ea9c <CyU3PUibInitVars+0xb4>
4001ea64:	e5810000 	str	r0, [r1]
4001ea68:	e8bd8010 	pop	{r4, pc}
4001ea6c:	40031d40 	.word	0x40031d40
4001ea70:	40031f98 	.word	0x40031f98
4001ea74:	40030d64 	.word	0x40030d64
4001ea78:	40030d68 	.word	0x40030d68
4001ea7c:	40030d6c 	.word	0x40030d6c
4001ea80:	40030db8 	.word	0x40030db8
4001ea84:	40030da0 	.word	0x40030da0
4001ea88:	40030da4 	.word	0x40030da4
4001ea8c:	40030da8 	.word	0x40030da8
4001ea90:	40030d7c 	.word	0x40030d7c
4001ea94:	40030d80 	.word	0x40030d80
4001ea98:	40030d84 	.word	0x40030d84
4001ea9c:	40030d44 	.word	0x40030d44

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001eaa0 <CyU3PUibLnkErrClrTimerCb>:
4001eaa0:	e92d4010 	push	{r4, lr}
4001eaa4:	e1a04000 	mov	r4, r0
4001eaa8:	ebfff82d 	bl	4001cb64 <CyU3PUsbGetSpeed>
4001eaac:	e3500003 	cmp	r0, #3
4001eab0:	1a000003 	bne	4001eac4 <CyU3PUibLnkErrClrTimerCb+0x24>
4001eab4:	e59f000c 	ldr	r0, [pc, #12]	; 4001eac8 <CyU3PUibLnkErrClrTimerCb+0x28>
4001eab8:	e5900014 	ldr	r0, [r0, #20]
4001eabc:	e59f1008 	ldr	r1, [pc, #8]	; 4001eacc <CyU3PUibLnkErrClrTimerCb+0x2c>
4001eac0:	e5810000 	str	r0, [r1]
4001eac4:	e8bd8010 	pop	{r4, pc}
4001eac8:	e0033000 	.word	0xe0033000
4001eacc:	40030d88 	.word	0x40030d88

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001ead0 <CyU3PUibLnkIntrEvtHandler>:
4001ead0:	e92d4010 	push	{r4, lr}
4001ead4:	e59f008c 	ldr	r0, [pc, #140]	; 4001eb68 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ead8:	e5904004 	ldr	r4, [r0, #4]
4001eadc:	e3140902 	tst	r4, #32768	; 0x8000
4001eae0:	0a00000b 	beq	4001eb14 <CyU3PUibLnkIntrEvtHandler+0x44>
4001eae4:	e59f0080 	ldr	r0, [pc, #128]	; 4001eb6c <CyU3PUibLnkIntrEvtHandler+0x9c>
4001eae8:	e5900000 	ldr	r0, [r0]
4001eaec:	e59f1074 	ldr	r1, [pc, #116]	; 4001eb68 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eaf0:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001eaf4:	eb000859 	bl	40020c60 <CyU3PUsbSSConnecthandler>
4001eaf8:	e3a00902 	mov	r0, #32768	; 0x8000
4001eafc:	e59f1064 	ldr	r1, [pc, #100]	; 4001eb68 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb00:	e5810004 	str	r0, [r1, #4]
4001eb04:	e1c10000 	bic	r0, r1, r0
4001eb08:	e5900008 	ldr	r0, [r0, #8]
4001eb0c:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001eb10:	e5810008 	str	r0, [r1, #8]
4001eb14:	e3140801 	tst	r4, #65536	; 0x10000
4001eb18:	0a000007 	beq	4001eb3c <CyU3PUibLnkIntrEvtHandler+0x6c>
4001eb1c:	eb0008cc 	bl	40020e54 <CyU3PUsbSSDisConnecthandler>
4001eb20:	e3a00801 	mov	r0, #65536	; 0x10000
4001eb24:	e59f103c 	ldr	r1, [pc, #60]	; 4001eb68 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb28:	e5810004 	str	r0, [r1, #4]
4001eb2c:	e1810000 	orr	r0, r1, r0
4001eb30:	e5900008 	ldr	r0, [r0, #8]
4001eb34:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001eb38:	e5810008 	str	r0, [r1, #8]
4001eb3c:	e3140802 	tst	r4, #131072	; 0x20000
4001eb40:	0a000007 	beq	4001eb64 <CyU3PUibLnkIntrEvtHandler+0x94>
4001eb44:	eb000926 	bl	40020fe4 <CyU3PUsbSSReset>
4001eb48:	e3a00802 	mov	r0, #131072	; 0x20000
4001eb4c:	e59f1014 	ldr	r1, [pc, #20]	; 4001eb68 <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb50:	e5810004 	str	r0, [r1, #4]
4001eb54:	e1810000 	orr	r0, r1, r0
4001eb58:	e5900008 	ldr	r0, [r0, #8]
4001eb5c:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001eb60:	e5810008 	str	r0, [r1, #8]
4001eb64:	e8bd8010 	pop	{r4, pc}
4001eb68:	e0033000 	.word	0xe0033000
4001eb6c:	40030d90 	.word	0x40030d90

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001eb70 <CyU3PUibProtEpIntrEvtHandler>:
4001eb70:	e92d4070 	push	{r4, r5, r6, lr}
4001eb74:	e59f03b4 	ldr	r0, [pc, #948]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001eb78:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001eb7c:	e59f13ac 	ldr	r1, [pc, #940]	; 4001ef30 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001eb80:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001eb84:	e0005001 	and	r5, r0, r1
4001eb88:	e3a04001 	mov	r4, #1
4001eb8c:	ea0000df 	b	4001ef10 <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001eb90:	e3a00001 	mov	r0, #1
4001eb94:	e1150410 	tst	r5, r0, lsl r4
4001eb98:	0a000081 	beq	4001eda4 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001eb9c:	e59f0390 	ldr	r0, [pc, #912]	; 4001ef34 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001eba0:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001eba4:	e3160901 	tst	r6, #16384	; 0x4000
4001eba8:	0a00002a 	beq	4001ec58 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ebac:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ebb0:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ebb4:	e3800002 	orr	r0, r0, #2
4001ebb8:	e59f1374 	ldr	r1, [pc, #884]	; 4001ef34 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ebbc:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ebc0:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001ebc4:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ebc8:	e1a01802 	lsl	r1, r2, #16
4001ebcc:	e1a01821 	lsr	r1, r1, #16
4001ebd0:	e20420ff 	and	r2, r4, #255	; 0xff
4001ebd4:	e3820080 	orr	r0, r2, #128	; 0x80
4001ebd8:	ebfffa90 	bl	4001d620 <CyU3PUsbSendNrdy>
4001ebdc:	e20410ff 	and	r1, r4, #255	; 0xff
4001ebe0:	e3810080 	orr	r0, r1, #128	; 0x80
4001ebe4:	ebfff9a1 	bl	4001d270 <CyU3PUsbResetEp>
4001ebe8:	e3a0000a 	mov	r0, #10
4001ebec:	ebffd20c 	bl	40013424 <CyU3PBusyWait>
4001ebf0:	e59f2340 	ldr	r2, [pc, #832]	; 4001ef38 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001ebf4:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ebf8:	e1a01802 	lsl	r1, r2, #16
4001ebfc:	e1a01821 	lsr	r1, r1, #16
4001ec00:	e20420ff 	and	r2, r4, #255	; 0xff
4001ec04:	e3820080 	orr	r0, r2, #128	; 0x80
4001ec08:	ebfffa47 	bl	4001d52c <CyU3PUsbSendErdy>
4001ec0c:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001ec10:	e59f131c 	ldr	r1, [pc, #796]	; 4001ef34 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec14:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec18:	e59f031c 	ldr	r0, [pc, #796]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ec1c:	e5900000 	ldr	r0, [r0]
4001ec20:	e3100020 	tst	r0, #32
4001ec24:	0a00000b 	beq	4001ec58 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec28:	e3a00001 	mov	r0, #1
4001ec2c:	e59f130c 	ldr	r1, [pc, #780]	; 4001ef40 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ec30:	e5911000 	ldr	r1, [r1]
4001ec34:	e1110410 	tst	r1, r0, lsl r4
4001ec38:	0a000006 	beq	4001ec58 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec3c:	e20400ff 	and	r0, r4, #255	; 0xff
4001ec40:	e3802080 	orr	r2, r0, #128	; 0x80
4001ec44:	e3a01003 	mov	r1, #3
4001ec48:	e3a00020 	mov	r0, #32
4001ec4c:	e59f32f0 	ldr	r3, [pc, #752]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ec50:	e5933000 	ldr	r3, [r3]
4001ec54:	e12fff33 	blx	r3
4001ec58:	e3160801 	tst	r6, #65536	; 0x10000
4001ec5c:	0a000004 	beq	4001ec74 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001ec60:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ec64:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ec68:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ec6c:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ef34 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec70:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec74:	e3a00001 	mov	r0, #1
4001ec78:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ef40 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ec7c:	e5911000 	ldr	r1, [r1]
4001ec80:	e1110410 	tst	r1, r0, lsl r4
4001ec84:	0a000044 	beq	4001ed9c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ec88:	e59f02b4 	ldr	r0, [pc, #692]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ec8c:	e5900000 	ldr	r0, [r0]
4001ec90:	e3500000 	cmp	r0, #0
4001ec94:	0a000040 	beq	4001ed9c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ec98:	e59f029c 	ldr	r0, [pc, #668]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ec9c:	e5900000 	ldr	r0, [r0]
4001eca0:	e3100001 	tst	r0, #1
4001eca4:	0a000008 	beq	4001eccc <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001eca8:	e3160b01 	tst	r6, #1024	; 0x400
4001ecac:	0a000006 	beq	4001eccc <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ecb0:	e20400ff 	and	r0, r4, #255	; 0xff
4001ecb4:	e3802080 	orr	r2, r0, #128	; 0x80
4001ecb8:	e3a01003 	mov	r1, #3
4001ecbc:	e3a00001 	mov	r0, #1
4001ecc0:	e59f327c 	ldr	r3, [pc, #636]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ecc4:	e5933000 	ldr	r3, [r3]
4001ecc8:	e12fff33 	blx	r3
4001eccc:	e59f0268 	ldr	r0, [pc, #616]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ecd0:	e5900000 	ldr	r0, [r0]
4001ecd4:	e3100002 	tst	r0, #2
4001ecd8:	0a000008 	beq	4001ed00 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ecdc:	e3160a01 	tst	r6, #4096	; 0x1000
4001ece0:	0a000006 	beq	4001ed00 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ece4:	e20400ff 	and	r0, r4, #255	; 0xff
4001ece8:	e3802080 	orr	r2, r0, #128	; 0x80
4001ecec:	e3a01003 	mov	r1, #3
4001ecf0:	e3a00002 	mov	r0, #2
4001ecf4:	e59f3248 	ldr	r3, [pc, #584]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ecf8:	e5933000 	ldr	r3, [r3]
4001ecfc:	e12fff33 	blx	r3
4001ed00:	e59f0234 	ldr	r0, [pc, #564]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed04:	e5900000 	ldr	r0, [r0]
4001ed08:	e3100004 	tst	r0, #4
4001ed0c:	0a000008 	beq	4001ed34 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ed10:	e3160a02 	tst	r6, #8192	; 0x2000
4001ed14:	0a000006 	beq	4001ed34 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ed18:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed1c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed20:	e3a01003 	mov	r1, #3
4001ed24:	e3a00004 	mov	r0, #4
4001ed28:	e59f3214 	ldr	r3, [pc, #532]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed2c:	e5933000 	ldr	r3, [r3]
4001ed30:	e12fff33 	blx	r3
4001ed34:	e59f0200 	ldr	r0, [pc, #512]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed38:	e5900000 	ldr	r0, [r0]
4001ed3c:	e3100010 	tst	r0, #16
4001ed40:	0a000008 	beq	4001ed68 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ed44:	e3160c02 	tst	r6, #512	; 0x200
4001ed48:	0a000006 	beq	4001ed68 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001ed4c:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed50:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed54:	e3a01003 	mov	r1, #3
4001ed58:	e3a00010 	mov	r0, #16
4001ed5c:	e59f31e0 	ldr	r3, [pc, #480]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed60:	e5933000 	ldr	r3, [r3]
4001ed64:	e12fff33 	blx	r3
4001ed68:	e59f01cc 	ldr	r0, [pc, #460]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed6c:	e5900000 	ldr	r0, [r0]
4001ed70:	e3100040 	tst	r0, #64	; 0x40
4001ed74:	0a000008 	beq	4001ed9c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ed78:	e3160802 	tst	r6, #131072	; 0x20000
4001ed7c:	0a000006 	beq	4001ed9c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ed80:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed84:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed88:	e3a01003 	mov	r1, #3
4001ed8c:	e3a00040 	mov	r0, #64	; 0x40
4001ed90:	e59f31ac 	ldr	r3, [pc, #428]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed94:	e5933000 	ldr	r3, [r3]
4001ed98:	e12fff33 	blx	r3
4001ed9c:	e59f0190 	ldr	r0, [pc, #400]	; 4001ef34 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001eda0:	e7806104 	str	r6, [r0, r4, lsl #2]
4001eda4:	e2840010 	add	r0, r4, #16
4001eda8:	e3a01001 	mov	r1, #1
4001edac:	e1150011 	tst	r5, r1, lsl r0
4001edb0:	0a000055 	beq	4001ef0c <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001edb4:	e59f018c 	ldr	r0, [pc, #396]	; 4001ef48 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001edb8:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001edbc:	e2840010 	add	r0, r4, #16
4001edc0:	e1a00011 	lsl	r0, r1, r0
4001edc4:	e59f1174 	ldr	r1, [pc, #372]	; 4001ef40 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001edc8:	e5911000 	ldr	r1, [r1]
4001edcc:	e1100001 	tst	r0, r1
4001edd0:	0a00004b 	beq	4001ef04 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001edd4:	e59f0168 	ldr	r0, [pc, #360]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edd8:	e5900000 	ldr	r0, [r0]
4001eddc:	e3500000 	cmp	r0, #0
4001ede0:	0a000047 	beq	4001ef04 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ede4:	e59f0150 	ldr	r0, [pc, #336]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ede8:	e5900000 	ldr	r0, [r0]
4001edec:	e3100001 	tst	r0, #1
4001edf0:	0a000007 	beq	4001ee14 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001edf4:	e3160b01 	tst	r6, #1024	; 0x400
4001edf8:	0a000005 	beq	4001ee14 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001edfc:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee00:	e3a01003 	mov	r1, #3
4001ee04:	e3a00001 	mov	r0, #1
4001ee08:	e59f3134 	ldr	r3, [pc, #308]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee0c:	e5933000 	ldr	r3, [r3]
4001ee10:	e12fff33 	blx	r3
4001ee14:	e59f0120 	ldr	r0, [pc, #288]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee18:	e5900000 	ldr	r0, [r0]
4001ee1c:	e3100002 	tst	r0, #2
4001ee20:	0a000007 	beq	4001ee44 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee24:	e3160a01 	tst	r6, #4096	; 0x1000
4001ee28:	0a000005 	beq	4001ee44 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee2c:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee30:	e3a01003 	mov	r1, #3
4001ee34:	e3a00002 	mov	r0, #2
4001ee38:	e59f3104 	ldr	r3, [pc, #260]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee3c:	e5933000 	ldr	r3, [r3]
4001ee40:	e12fff33 	blx	r3
4001ee44:	e59f00f0 	ldr	r0, [pc, #240]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee48:	e5900000 	ldr	r0, [r0]
4001ee4c:	e3100004 	tst	r0, #4
4001ee50:	0a000007 	beq	4001ee74 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ee54:	e3160a02 	tst	r6, #8192	; 0x2000
4001ee58:	0a000005 	beq	4001ee74 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001ee5c:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee60:	e3a01003 	mov	r1, #3
4001ee64:	e3a00004 	mov	r0, #4
4001ee68:	e59f30d4 	ldr	r3, [pc, #212]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee6c:	e5933000 	ldr	r3, [r3]
4001ee70:	e12fff33 	blx	r3
4001ee74:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee78:	e5900000 	ldr	r0, [r0]
4001ee7c:	e3100010 	tst	r0, #16
4001ee80:	0a000007 	beq	4001eea4 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001ee84:	e3160c02 	tst	r6, #512	; 0x200
4001ee88:	0a000005 	beq	4001eea4 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001ee8c:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee90:	e3a01003 	mov	r1, #3
4001ee94:	e3a00010 	mov	r0, #16
4001ee98:	e59f30a4 	ldr	r3, [pc, #164]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee9c:	e5933000 	ldr	r3, [r3]
4001eea0:	e12fff33 	blx	r3
4001eea4:	e59f0090 	ldr	r0, [pc, #144]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eea8:	e5900000 	ldr	r0, [r0]
4001eeac:	e3100040 	tst	r0, #64	; 0x40
4001eeb0:	0a000007 	beq	4001eed4 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001eeb4:	e3160802 	tst	r6, #131072	; 0x20000
4001eeb8:	0a000005 	beq	4001eed4 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001eebc:	e20420ff 	and	r2, r4, #255	; 0xff
4001eec0:	e3a01003 	mov	r1, #3
4001eec4:	e3a00040 	mov	r0, #64	; 0x40
4001eec8:	e59f3074 	ldr	r3, [pc, #116]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eecc:	e5933000 	ldr	r3, [r3]
4001eed0:	e12fff33 	blx	r3
4001eed4:	e59f0060 	ldr	r0, [pc, #96]	; 4001ef3c <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eed8:	e5900000 	ldr	r0, [r0]
4001eedc:	e3100020 	tst	r0, #32
4001eee0:	0a000007 	beq	4001ef04 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eee4:	e3160901 	tst	r6, #16384	; 0x4000
4001eee8:	0a000005 	beq	4001ef04 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001eeec:	e20420ff 	and	r2, r4, #255	; 0xff
4001eef0:	e3a01003 	mov	r1, #3
4001eef4:	e3a00020 	mov	r0, #32
4001eef8:	e59f3044 	ldr	r3, [pc, #68]	; 4001ef44 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eefc:	e5933000 	ldr	r3, [r3]
4001ef00:	e12fff33 	blx	r3
4001ef04:	e59f003c 	ldr	r0, [pc, #60]	; 4001ef48 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001ef08:	e7806104 	str	r6, [r0, r4, lsl #2]
4001ef0c:	e2844001 	add	r4, r4, #1
4001ef10:	e3540010 	cmp	r4, #16
4001ef14:	baffff1d 	blt	4001eb90 <CyU3PUibProtEpIntrEvtHandler+0x20>
4001ef18:	e59f002c 	ldr	r0, [pc, #44]	; 4001ef4c <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef1c:	e5900004 	ldr	r0, [r0, #4]
4001ef20:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ef24:	e59f1020 	ldr	r1, [pc, #32]	; 4001ef4c <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef28:	e5810004 	str	r0, [r1, #4]
4001ef2c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ef30:	e0033000 	.word	0xe0033000
4001ef34:	e0033500 	.word	0xe0033500
4001ef38:	e00335c0 	.word	0xe00335c0
4001ef3c:	40030d80 	.word	0x40030d80
4001ef40:	40030d84 	.word	0x40030d84
4001ef44:	40030d7c 	.word	0x40030d7c
4001ef48:	e0033600 	.word	0xe0033600
4001ef4c:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001ef50 <CyU3PUibProtIntrEvtHandler>:
4001ef50:	e92d4010 	push	{r4, lr}
4001ef54:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f02c <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef58:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001ef5c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f02c <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef60:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001ef64:	e0004001 	and	r4, r0, r1
4001ef68:	e3140c02 	tst	r4, #512	; 0x200
4001ef6c:	0a000006 	beq	4001ef8c <CyU3PUibProtIntrEvtHandler+0x3c>
4001ef70:	e3a00c02 	mov	r0, #512	; 0x200
4001ef74:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f02c <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef78:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ef7c:	e3a00001 	mov	r0, #1
4001ef80:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f030 <CyU3PUibProtIntrEvtHandler+0xe0>
4001ef84:	e5810014 	str	r0, [r1, #20]
4001ef88:	eb0008ff 	bl	4002138c <CyU3PUsbSetupCommand>
4001ef8c:	e3140901 	tst	r4, #16384	; 0x4000
4001ef90:	0a00000a 	beq	4001efc0 <CyU3PUibProtIntrEvtHandler+0x70>
4001ef94:	e59f0090 	ldr	r0, [pc, #144]	; 4001f02c <CyU3PUibProtIntrEvtHandler+0xdc>
4001ef98:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001ef9c:	e3c00004 	bic	r0, r0, #4
4001efa0:	e59f1084 	ldr	r1, [pc, #132]	; 4001f02c <CyU3PUibProtIntrEvtHandler+0xdc>
4001efa4:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001efa8:	e1a00001 	mov	r0, r1
4001efac:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001efb0:	e3c00004 	bic	r0, r0, #4
4001efb4:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001efb8:	e3a00901 	mov	r0, #16384	; 0x4000
4001efbc:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001efc0:	e3140b02 	tst	r4, #2048	; 0x800
4001efc4:	0a000012 	beq	4001f014 <CyU3PUibProtIntrEvtHandler+0xc4>
4001efc8:	e59f0060 	ldr	r0, [pc, #96]	; 4001f030 <CyU3PUibProtIntrEvtHandler+0xe0>
4001efcc:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001efd0:	e3500000 	cmp	r0, #0
4001efd4:	0a00000b 	beq	4001f008 <CyU3PUibProtIntrEvtHandler+0xb8>
4001efd8:	e59f0054 	ldr	r0, [pc, #84]	; 4001f034 <CyU3PUibProtIntrEvtHandler+0xe4>
4001efdc:	e5900000 	ldr	r0, [r0]
4001efe0:	e3500000 	cmp	r0, #0
4001efe4:	0a000004 	beq	4001effc <CyU3PUibProtIntrEvtHandler+0xac>
4001efe8:	e3a01000 	mov	r1, #0
4001efec:	e3a0000a 	mov	r0, #10
4001eff0:	e59f203c 	ldr	r2, [pc, #60]	; 4001f034 <CyU3PUibProtIntrEvtHandler+0xe4>
4001eff4:	e5922000 	ldr	r2, [r2]
4001eff8:	e12fff32 	blx	r2
4001effc:	e3a00000 	mov	r0, #0
4001f000:	e59f1028 	ldr	r1, [pc, #40]	; 4001f030 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f004:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f008:	e3a00b02 	mov	r0, #2048	; 0x800
4001f00c:	e59f1018 	ldr	r1, [pc, #24]	; 4001f02c <CyU3PUibProtIntrEvtHandler+0xdc>
4001f010:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f014:	e59f001c 	ldr	r0, [pc, #28]	; 4001f038 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f018:	e5900004 	ldr	r0, [r0, #4]
4001f01c:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f020:	e59f1010 	ldr	r1, [pc, #16]	; 4001f038 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f024:	e5810004 	str	r0, [r1, #4]
4001f028:	e8bd8010 	pop	{r4, pc}
4001f02c:	e0033000 	.word	0xe0033000
4001f030:	40031d40 	.word	0x40031d40
4001f034:	40030da0 	.word	0x40030da0
4001f038:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f03c <CyU3PUibSendDescr>:
4001f03c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f040:	e1a04000 	mov	r4, r0
4001f044:	e1a05001 	mov	r5, r1
4001f048:	e3a06000 	mov	r6, #0
4001f04c:	e3a07000 	mov	r7, #0
4001f050:	e3a08000 	mov	r8, #0
4001f054:	e3a09000 	mov	r9, #0
4001f058:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001f644 <CyU3PUibSendDescr+0x608>
4001f05c:	e0000825 	and	r0, r0, r5, lsr #16
4001f060:	e58d0000 	str	r0, [sp]
4001f064:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f068:	e5d00009 	ldrb	r0, [r0, #9]
4001f06c:	e3500003 	cmp	r0, #3
4001f070:	1a000001 	bne	4001f07c <CyU3PUibSendDescr+0x40>
4001f074:	e3a00c02 	mov	r0, #512	; 0x200
4001f078:	ea000000 	b	4001f080 <CyU3PUibSendDescr+0x44>
4001f07c:	e3a00040 	mov	r0, #64	; 0x40
4001f080:	e1a0a800 	lsl	sl, r0, #16
4001f084:	e1a0a82a 	lsr	sl, sl, #16
4001f088:	e1a00c24 	lsr	r0, r4, #24
4001f08c:	e3500006 	cmp	r0, #6
4001f090:	0a0000b4 	beq	4001f368 <CyU3PUibSendDescr+0x32c>
4001f094:	ca000006 	bgt	4001f0b4 <CyU3PUibSendDescr+0x78>
4001f098:	e3500001 	cmp	r0, #1
4001f09c:	0a00000b 	beq	4001f0d0 <CyU3PUibSendDescr+0x94>
4001f0a0:	e3500002 	cmp	r0, #2
4001f0a4:	0a000020 	beq	4001f12c <CyU3PUibSendDescr+0xf0>
4001f0a8:	e3500003 	cmp	r0, #3
4001f0ac:	1a00013b 	bne	4001f5a0 <CyU3PUibSendDescr+0x564>
4001f0b0:	ea00007b 	b	4001f2a4 <CyU3PUibSendDescr+0x268>
4001f0b4:	e3500007 	cmp	r0, #7
4001f0b8:	0a0000b8 	beq	4001f3a0 <CyU3PUibSendDescr+0x364>
4001f0bc:	e3500009 	cmp	r0, #9
4001f0c0:	0a000122 	beq	4001f550 <CyU3PUibSendDescr+0x514>
4001f0c4:	e350000f 	cmp	r0, #15
4001f0c8:	1a000134 	bne	4001f5a0 <CyU3PUibSendDescr+0x564>
4001f0cc:	ea0000f6 	b	4001f4ac <CyU3PUibSendDescr+0x470>
4001f0d0:	e1a00000 	nop			; (mov r0, r0)
4001f0d4:	e59f056c 	ldr	r0, [pc, #1388]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f0d8:	e5d00009 	ldrb	r0, [r0, #9]
4001f0dc:	e3500003 	cmp	r0, #3
4001f0e0:	1a000008 	bne	4001f108 <CyU3PUibSendDescr+0xcc>
4001f0e4:	e59f0560 	ldr	r0, [pc, #1376]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f0e8:	e5900004 	ldr	r0, [r0, #4]
4001f0ec:	e3500000 	cmp	r0, #0
4001f0f0:	0a00000c 	beq	4001f128 <CyU3PUibSendDescr+0xec>
4001f0f4:	e3a09001 	mov	r9, #1
4001f0f8:	e3a06012 	mov	r6, #18
4001f0fc:	e59f0548 	ldr	r0, [pc, #1352]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f100:	e5908004 	ldr	r8, [r0, #4]
4001f104:	ea000007 	b	4001f128 <CyU3PUibSendDescr+0xec>
4001f108:	e59f053c 	ldr	r0, [pc, #1340]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f10c:	e5900000 	ldr	r0, [r0]
4001f110:	e3500000 	cmp	r0, #0
4001f114:	0a000003 	beq	4001f128 <CyU3PUibSendDescr+0xec>
4001f118:	e3a09001 	mov	r9, #1
4001f11c:	e3a06012 	mov	r6, #18
4001f120:	e59f0524 	ldr	r0, [pc, #1316]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f124:	e5908000 	ldr	r8, [r0]
4001f128:	ea000128 	b	4001f5d0 <CyU3PUibSendDescr+0x594>
4001f12c:	e1a00000 	nop			; (mov r0, r0)
4001f130:	e59f0510 	ldr	r0, [pc, #1296]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f134:	e5d00009 	ldrb	r0, [r0, #9]
4001f138:	e3500002 	cmp	r0, #2
4001f13c:	1a00001a 	bne	4001f1ac <CyU3PUibSendDescr+0x170>
4001f140:	e59f0504 	ldr	r0, [pc, #1284]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f144:	e5900014 	ldr	r0, [r0, #20]
4001f148:	e3500000 	cmp	r0, #0
4001f14c:	0a00004f 	beq	4001f290 <CyU3PUibSendDescr+0x254>
4001f150:	e3a09001 	mov	r9, #1
4001f154:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f158:	e5908014 	ldr	r8, [r0, #20]
4001f15c:	e5900014 	ldr	r0, [r0, #20]
4001f160:	e5d00002 	ldrb	r0, [r0, #2]
4001f164:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f168:	e5911014 	ldr	r1, [r1, #20]
4001f16c:	e5d11003 	ldrb	r1, [r1, #3]
4001f170:	e1800401 	orr	r0, r0, r1, lsl #8
4001f174:	e1500825 	cmp	r0, r5, lsr #16
4001f178:	2a000007 	bcs	4001f19c <CyU3PUibSendDescr+0x160>
4001f17c:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f180:	e5900014 	ldr	r0, [r0, #20]
4001f184:	e5d00002 	ldrb	r0, [r0, #2]
4001f188:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f18c:	e5911014 	ldr	r1, [r1, #20]
4001f190:	e5d11003 	ldrb	r1, [r1, #3]
4001f194:	e1800401 	orr	r0, r0, r1, lsl #8
4001f198:	ea000000 	b	4001f1a0 <CyU3PUibSendDescr+0x164>
4001f19c:	e1a00825 	lsr	r0, r5, #16
4001f1a0:	e1a06800 	lsl	r6, r0, #16
4001f1a4:	e1a06826 	lsr	r6, r6, #16
4001f1a8:	ea000038 	b	4001f290 <CyU3PUibSendDescr+0x254>
4001f1ac:	e59f0494 	ldr	r0, [pc, #1172]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f1b0:	e5d00009 	ldrb	r0, [r0, #9]
4001f1b4:	e3500001 	cmp	r0, #1
4001f1b8:	1a00001a 	bne	4001f228 <CyU3PUibSendDescr+0x1ec>
4001f1bc:	e59f0488 	ldr	r0, [pc, #1160]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f1c0:	e5900018 	ldr	r0, [r0, #24]
4001f1c4:	e3500000 	cmp	r0, #0
4001f1c8:	0a000030 	beq	4001f290 <CyU3PUibSendDescr+0x254>
4001f1cc:	e3a09001 	mov	r9, #1
4001f1d0:	e59f0474 	ldr	r0, [pc, #1140]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f1d4:	e5908018 	ldr	r8, [r0, #24]
4001f1d8:	e5900018 	ldr	r0, [r0, #24]
4001f1dc:	e5d00002 	ldrb	r0, [r0, #2]
4001f1e0:	e59f1464 	ldr	r1, [pc, #1124]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f1e4:	e5911018 	ldr	r1, [r1, #24]
4001f1e8:	e5d11003 	ldrb	r1, [r1, #3]
4001f1ec:	e1800401 	orr	r0, r0, r1, lsl #8
4001f1f0:	e1500825 	cmp	r0, r5, lsr #16
4001f1f4:	2a000007 	bcs	4001f218 <CyU3PUibSendDescr+0x1dc>
4001f1f8:	e59f044c 	ldr	r0, [pc, #1100]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f1fc:	e5900018 	ldr	r0, [r0, #24]
4001f200:	e5d00002 	ldrb	r0, [r0, #2]
4001f204:	e59f1440 	ldr	r1, [pc, #1088]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f208:	e5911018 	ldr	r1, [r1, #24]
4001f20c:	e5d11003 	ldrb	r1, [r1, #3]
4001f210:	e1800401 	orr	r0, r0, r1, lsl #8
4001f214:	ea000000 	b	4001f21c <CyU3PUibSendDescr+0x1e0>
4001f218:	e1a00825 	lsr	r0, r5, #16
4001f21c:	e1a06800 	lsl	r6, r0, #16
4001f220:	e1a06826 	lsr	r6, r6, #16
4001f224:	ea000019 	b	4001f290 <CyU3PUibSendDescr+0x254>
4001f228:	e59f041c 	ldr	r0, [pc, #1052]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f22c:	e590001c 	ldr	r0, [r0, #28]
4001f230:	e3500000 	cmp	r0, #0
4001f234:	0a000015 	beq	4001f290 <CyU3PUibSendDescr+0x254>
4001f238:	e3a09001 	mov	r9, #1
4001f23c:	e59f0408 	ldr	r0, [pc, #1032]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f240:	e590801c 	ldr	r8, [r0, #28]
4001f244:	e590001c 	ldr	r0, [r0, #28]
4001f248:	e5d00002 	ldrb	r0, [r0, #2]
4001f24c:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f250:	e591101c 	ldr	r1, [r1, #28]
4001f254:	e5d11003 	ldrb	r1, [r1, #3]
4001f258:	e1800401 	orr	r0, r0, r1, lsl #8
4001f25c:	e1500825 	cmp	r0, r5, lsr #16
4001f260:	2a000007 	bcs	4001f284 <CyU3PUibSendDescr+0x248>
4001f264:	e59f03e0 	ldr	r0, [pc, #992]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f268:	e590001c 	ldr	r0, [r0, #28]
4001f26c:	e5d00002 	ldrb	r0, [r0, #2]
4001f270:	e59f13d4 	ldr	r1, [pc, #980]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f274:	e591101c 	ldr	r1, [r1, #28]
4001f278:	e5d11003 	ldrb	r1, [r1, #3]
4001f27c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f280:	ea000000 	b	4001f288 <CyU3PUibSendDescr+0x24c>
4001f284:	e1a00825 	lsr	r0, r5, #16
4001f288:	e1a06800 	lsl	r6, r0, #16
4001f28c:	e1a06826 	lsr	r6, r6, #16
4001f290:	e3580000 	cmp	r8, #0
4001f294:	0a000001 	beq	4001f2a0 <CyU3PUibSendDescr+0x264>
4001f298:	e3a00002 	mov	r0, #2
4001f29c:	e5c80001 	strb	r0, [r8, #1]
4001f2a0:	ea0000ca 	b	4001f5d0 <CyU3PUibSendDescr+0x594>
4001f2a4:	e1a00000 	nop			; (mov r0, r0)
4001f2a8:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f2ac:	e1a0b820 	lsr	fp, r0, #16
4001f2b0:	e35b0010 	cmp	fp, #16
4001f2b4:	ca000003 	bgt	4001f2c8 <CyU3PUibSendDescr+0x28c>
4001f2b8:	e59f0390 	ldr	r0, [pc, #912]	; 4001f650 <CyU3PUibSendDescr+0x614>
4001f2bc:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f2c0:	e3500000 	cmp	r0, #0
4001f2c4:	1a000013 	bne	4001f318 <CyU3PUibSendDescr+0x2dc>
4001f2c8:	e59f0378 	ldr	r0, [pc, #888]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f2cc:	e5d00007 	ldrb	r0, [r0, #7]
4001f2d0:	e3500001 	cmp	r0, #1
4001f2d4:	0a000022 	beq	4001f364 <CyU3PUibSendDescr+0x328>
4001f2d8:	e59f0374 	ldr	r0, [pc, #884]	; 4001f654 <CyU3PUibSendDescr+0x618>
4001f2dc:	e5900000 	ldr	r0, [r0]
4001f2e0:	e3500000 	cmp	r0, #0
4001f2e4:	0a00001e 	beq	4001f364 <CyU3PUibSendDescr+0x328>
4001f2e8:	e1a01005 	mov	r1, r5
4001f2ec:	e1a00004 	mov	r0, r4
4001f2f0:	e59f235c 	ldr	r2, [pc, #860]	; 4001f654 <CyU3PUibSendDescr+0x618>
4001f2f4:	e5922000 	ldr	r2, [r2]
4001f2f8:	e12fff32 	blx	r2
4001f2fc:	e1a09000 	mov	r9, r0
4001f300:	e3590000 	cmp	r9, #0
4001f304:	0a000016 	beq	4001f364 <CyU3PUibSendDescr+0x328>
4001f308:	e3a00001 	mov	r0, #1
4001f30c:	e59f1334 	ldr	r1, [pc, #820]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f310:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f314:	ea000012 	b	4001f364 <CyU3PUibSendDescr+0x328>
4001f318:	e59f0330 	ldr	r0, [pc, #816]	; 4001f650 <CyU3PUibSendDescr+0x614>
4001f31c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f320:	e5d00000 	ldrb	r0, [r0]
4001f324:	e1500825 	cmp	r0, r5, lsr #16
4001f328:	2a000003 	bcs	4001f33c <CyU3PUibSendDescr+0x300>
4001f32c:	e59f031c 	ldr	r0, [pc, #796]	; 4001f650 <CyU3PUibSendDescr+0x614>
4001f330:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f334:	e5d00000 	ldrb	r0, [r0]
4001f338:	ea000000 	b	4001f340 <CyU3PUibSendDescr+0x304>
4001f33c:	e1a00825 	lsr	r0, r5, #16
4001f340:	e1a06800 	lsl	r6, r0, #16
4001f344:	e1a06826 	lsr	r6, r6, #16
4001f348:	e59f0300 	ldr	r0, [pc, #768]	; 4001f650 <CyU3PUibSendDescr+0x614>
4001f34c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f350:	e3500000 	cmp	r0, #0
4001f354:	0a000002 	beq	4001f364 <CyU3PUibSendDescr+0x328>
4001f358:	e3a09001 	mov	r9, #1
4001f35c:	e59f02ec 	ldr	r0, [pc, #748]	; 4001f650 <CyU3PUibSendDescr+0x614>
4001f360:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f364:	ea000099 	b	4001f5d0 <CyU3PUibSendDescr+0x594>
4001f368:	e1a00000 	nop			; (mov r0, r0)
4001f36c:	e59f02d8 	ldr	r0, [pc, #728]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f370:	e5900008 	ldr	r0, [r0, #8]
4001f374:	e3500000 	cmp	r0, #0
4001f378:	0a000007 	beq	4001f39c <CyU3PUibSendDescr+0x360>
4001f37c:	e59f02c4 	ldr	r0, [pc, #708]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f380:	e5d00009 	ldrb	r0, [r0, #9]
4001f384:	e3500003 	cmp	r0, #3
4001f388:	0a000003 	beq	4001f39c <CyU3PUibSendDescr+0x360>
4001f38c:	e3a09001 	mov	r9, #1
4001f390:	e3a0600a 	mov	r6, #10
4001f394:	e59f02b0 	ldr	r0, [pc, #688]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f398:	e5908008 	ldr	r8, [r0, #8]
4001f39c:	ea00008b 	b	4001f5d0 <CyU3PUibSendDescr+0x594>
4001f3a0:	e1a00000 	nop			; (mov r0, r0)
4001f3a4:	e59f029c 	ldr	r0, [pc, #668]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f3a8:	e5d00009 	ldrb	r0, [r0, #9]
4001f3ac:	e3500002 	cmp	r0, #2
4001f3b0:	1a00001a 	bne	4001f420 <CyU3PUibSendDescr+0x3e4>
4001f3b4:	e59f0290 	ldr	r0, [pc, #656]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f3b8:	e5900018 	ldr	r0, [r0, #24]
4001f3bc:	e3500000 	cmp	r0, #0
4001f3c0:	0a000034 	beq	4001f498 <CyU3PUibSendDescr+0x45c>
4001f3c4:	e3a09001 	mov	r9, #1
4001f3c8:	e59f027c 	ldr	r0, [pc, #636]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f3cc:	e5908018 	ldr	r8, [r0, #24]
4001f3d0:	e5900018 	ldr	r0, [r0, #24]
4001f3d4:	e5d00002 	ldrb	r0, [r0, #2]
4001f3d8:	e59f126c 	ldr	r1, [pc, #620]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f3dc:	e5911018 	ldr	r1, [r1, #24]
4001f3e0:	e5d11003 	ldrb	r1, [r1, #3]
4001f3e4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f3e8:	e1500825 	cmp	r0, r5, lsr #16
4001f3ec:	2a000007 	bcs	4001f410 <CyU3PUibSendDescr+0x3d4>
4001f3f0:	e59f0254 	ldr	r0, [pc, #596]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f3f4:	e5900018 	ldr	r0, [r0, #24]
4001f3f8:	e5d00002 	ldrb	r0, [r0, #2]
4001f3fc:	e59f1248 	ldr	r1, [pc, #584]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f400:	e5911018 	ldr	r1, [r1, #24]
4001f404:	e5d11003 	ldrb	r1, [r1, #3]
4001f408:	e1800401 	orr	r0, r0, r1, lsl #8
4001f40c:	ea000000 	b	4001f414 <CyU3PUibSendDescr+0x3d8>
4001f410:	e1a00825 	lsr	r0, r5, #16
4001f414:	e1a06800 	lsl	r6, r0, #16
4001f418:	e1a06826 	lsr	r6, r6, #16
4001f41c:	ea00001d 	b	4001f498 <CyU3PUibSendDescr+0x45c>
4001f420:	e59f0220 	ldr	r0, [pc, #544]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f424:	e5d00009 	ldrb	r0, [r0, #9]
4001f428:	e3500001 	cmp	r0, #1
4001f42c:	1a000019 	bne	4001f498 <CyU3PUibSendDescr+0x45c>
4001f430:	e59f0214 	ldr	r0, [pc, #532]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f434:	e5900014 	ldr	r0, [r0, #20]
4001f438:	e3500000 	cmp	r0, #0
4001f43c:	0a000015 	beq	4001f498 <CyU3PUibSendDescr+0x45c>
4001f440:	e3a09001 	mov	r9, #1
4001f444:	e59f0200 	ldr	r0, [pc, #512]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f448:	e5908014 	ldr	r8, [r0, #20]
4001f44c:	e5900014 	ldr	r0, [r0, #20]
4001f450:	e5d00002 	ldrb	r0, [r0, #2]
4001f454:	e59f11f0 	ldr	r1, [pc, #496]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f458:	e5911014 	ldr	r1, [r1, #20]
4001f45c:	e5d11003 	ldrb	r1, [r1, #3]
4001f460:	e1800401 	orr	r0, r0, r1, lsl #8
4001f464:	e1500825 	cmp	r0, r5, lsr #16
4001f468:	2a000007 	bcs	4001f48c <CyU3PUibSendDescr+0x450>
4001f46c:	e59f01d8 	ldr	r0, [pc, #472]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f470:	e5900014 	ldr	r0, [r0, #20]
4001f474:	e5d00002 	ldrb	r0, [r0, #2]
4001f478:	e59f11cc 	ldr	r1, [pc, #460]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f47c:	e5911014 	ldr	r1, [r1, #20]
4001f480:	e5d11003 	ldrb	r1, [r1, #3]
4001f484:	e1800401 	orr	r0, r0, r1, lsl #8
4001f488:	ea000000 	b	4001f490 <CyU3PUibSendDescr+0x454>
4001f48c:	e1a00825 	lsr	r0, r5, #16
4001f490:	e1a06800 	lsl	r6, r0, #16
4001f494:	e1a06826 	lsr	r6, r6, #16
4001f498:	e3580000 	cmp	r8, #0
4001f49c:	0a000001 	beq	4001f4a8 <CyU3PUibSendDescr+0x46c>
4001f4a0:	e3a00007 	mov	r0, #7
4001f4a4:	e5c80001 	strb	r0, [r8, #1]
4001f4a8:	ea000048 	b	4001f5d0 <CyU3PUibSendDescr+0x594>
4001f4ac:	e1a00000 	nop			; (mov r0, r0)
4001f4b0:	e59f0194 	ldr	r0, [pc, #404]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f4b4:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f4b8:	e3500000 	cmp	r0, #0
4001f4bc:	0a000022 	beq	4001f54c <CyU3PUibSendDescr+0x510>
4001f4c0:	e59f0180 	ldr	r0, [pc, #384]	; 4001f648 <CyU3PUibSendDescr+0x60c>
4001f4c4:	e5d00009 	ldrb	r0, [r0, #9]
4001f4c8:	e3500003 	cmp	r0, #3
4001f4cc:	0a000008 	beq	4001f4f4 <CyU3PUibSendDescr+0x4b8>
4001f4d0:	e59f0174 	ldr	r0, [pc, #372]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f4d4:	e5900000 	ldr	r0, [r0]
4001f4d8:	e3500000 	cmp	r0, #0
4001f4dc:	0a00001a 	beq	4001f54c <CyU3PUibSendDescr+0x510>
4001f4e0:	e59f0164 	ldr	r0, [pc, #356]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f4e4:	e5900000 	ldr	r0, [r0]
4001f4e8:	e5d00002 	ldrb	r0, [r0, #2]
4001f4ec:	e3500010 	cmp	r0, #16
4001f4f0:	1a000015 	bne	4001f54c <CyU3PUibSendDescr+0x510>
4001f4f4:	e3a09001 	mov	r9, #1
4001f4f8:	e59f014c 	ldr	r0, [pc, #332]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f4fc:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f500:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f504:	e5d00002 	ldrb	r0, [r0, #2]
4001f508:	e59f113c 	ldr	r1, [pc, #316]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f50c:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f510:	e5d11003 	ldrb	r1, [r1, #3]
4001f514:	e1800401 	orr	r0, r0, r1, lsl #8
4001f518:	e1500825 	cmp	r0, r5, lsr #16
4001f51c:	2a000007 	bcs	4001f540 <CyU3PUibSendDescr+0x504>
4001f520:	e59f0124 	ldr	r0, [pc, #292]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f524:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f528:	e5d00002 	ldrb	r0, [r0, #2]
4001f52c:	e59f1118 	ldr	r1, [pc, #280]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f530:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f534:	e5d11003 	ldrb	r1, [r1, #3]
4001f538:	e1800401 	orr	r0, r0, r1, lsl #8
4001f53c:	ea000000 	b	4001f544 <CyU3PUibSendDescr+0x508>
4001f540:	e1a00825 	lsr	r0, r5, #16
4001f544:	e1a06800 	lsl	r6, r0, #16
4001f548:	e1a06826 	lsr	r6, r6, #16
4001f54c:	ea00001f 	b	4001f5d0 <CyU3PUibSendDescr+0x594>
4001f550:	e1a00000 	nop			; (mov r0, r0)
4001f554:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f558:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f55c:	e3500000 	cmp	r0, #0
4001f560:	0a00000d 	beq	4001f59c <CyU3PUibSendDescr+0x560>
4001f564:	e3a09001 	mov	r9, #1
4001f568:	e59f00dc 	ldr	r0, [pc, #220]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f56c:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f570:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f574:	e5d00000 	ldrb	r0, [r0]
4001f578:	e1500825 	cmp	r0, r5, lsr #16
4001f57c:	2a000003 	bcs	4001f590 <CyU3PUibSendDescr+0x554>
4001f580:	e59f00c4 	ldr	r0, [pc, #196]	; 4001f64c <CyU3PUibSendDescr+0x610>
4001f584:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f588:	e5d00000 	ldrb	r0, [r0]
4001f58c:	ea000000 	b	4001f594 <CyU3PUibSendDescr+0x558>
4001f590:	e1a00825 	lsr	r0, r5, #16
4001f594:	e1a06800 	lsl	r6, r0, #16
4001f598:	e1a06826 	lsr	r6, r6, #16
4001f59c:	ea00000b 	b	4001f5d0 <CyU3PUibSendDescr+0x594>
4001f5a0:	e1a00000 	nop			; (mov r0, r0)
4001f5a4:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f654 <CyU3PUibSendDescr+0x618>
4001f5a8:	e5900000 	ldr	r0, [r0]
4001f5ac:	e3500000 	cmp	r0, #0
4001f5b0:	0a000005 	beq	4001f5cc <CyU3PUibSendDescr+0x590>
4001f5b4:	e1a01005 	mov	r1, r5
4001f5b8:	e1a00004 	mov	r0, r4
4001f5bc:	e59f2090 	ldr	r2, [pc, #144]	; 4001f654 <CyU3PUibSendDescr+0x618>
4001f5c0:	e5922000 	ldr	r2, [r2]
4001f5c4:	e12fff32 	blx	r2
4001f5c8:	e1a09000 	mov	r9, r0
4001f5cc:	e1a00000 	nop			; (mov r0, r0)
4001f5d0:	e1a00000 	nop			; (mov r0, r0)
4001f5d4:	e3590001 	cmp	r9, #1
4001f5d8:	1a000017 	bne	4001f63c <CyU3PUibSendDescr+0x600>
4001f5dc:	e3580000 	cmp	r8, #0
4001f5e0:	0a000015 	beq	4001f63c <CyU3PUibSendDescr+0x600>
4001f5e4:	e1a01008 	mov	r1, r8
4001f5e8:	e1a00006 	mov	r0, r6
4001f5ec:	ebfff758 	bl	4001d354 <CyU3PUsbSendEP0Data>
4001f5f0:	e1a07000 	mov	r7, r0
4001f5f4:	e3570000 	cmp	r7, #0
4001f5f8:	1a000009 	bne	4001f624 <CyU3PUibSendDescr+0x5e8>
4001f5fc:	e59d0000 	ldr	r0, [sp]
4001f600:	e1560000 	cmp	r6, r0
4001f604:	aa000006 	bge	4001f624 <CyU3PUibSendDescr+0x5e8>
4001f608:	e24a0001 	sub	r0, sl, #1
4001f60c:	e1100006 	tst	r0, r6
4001f610:	1a000003 	bne	4001f624 <CyU3PUibSendDescr+0x5e8>
4001f614:	e1a01008 	mov	r1, r8
4001f618:	e3a00000 	mov	r0, #0
4001f61c:	ebfff74c 	bl	4001d354 <CyU3PUsbSendEP0Data>
4001f620:	e1a07000 	mov	r7, r0
4001f624:	e3570000 	cmp	r7, #0
4001f628:	0a000003 	beq	4001f63c <CyU3PUibSendDescr+0x600>
4001f62c:	e3a02000 	mov	r2, #0
4001f630:	e3a01001 	mov	r1, #1
4001f634:	e1a00002 	mov	r0, r2
4001f638:	ebfff970 	bl	4001dc00 <CyU3PUsbStall>
4001f63c:	e1a00009 	mov	r0, r9
4001f640:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f644:	0000ffff 	.word	0x0000ffff
4001f648:	40031d40 	.word	0x40031d40
4001f64c:	40031f98 	.word	0x40031f98
4001f650:	40031fb8 	.word	0x40031fb8
4001f654:	40030da4 	.word	0x40030da4

Disassembly of section i.CyU3PUibSocketInit:

4001f658 <CyU3PUibSocketInit>:
4001f658:	e3a00000 	mov	r0, #0
4001f65c:	ea00000d 	b	4001f698 <CyU3PUibSocketInit+0x40>
4001f660:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f664:	e59f2080 	ldr	r2, [pc, #128]	; 4001f6ec <CyU3PUibSocketInit+0x94>
4001f668:	e0822380 	add	r2, r2, r0, lsl #7
4001f66c:	e582100c 	str	r1, [r2, #12]
4001f670:	e3e01000 	mvn	r1, #0
4001f674:	e59f2070 	ldr	r2, [pc, #112]	; 4001f6ec <CyU3PUibSocketInit+0x94>
4001f678:	e0822380 	add	r2, r2, r0, lsl #7
4001f67c:	e5821010 	str	r1, [r2, #16]
4001f680:	e3a01000 	mov	r1, #0
4001f684:	e59f2060 	ldr	r2, [pc, #96]	; 4001f6ec <CyU3PUibSocketInit+0x94>
4001f688:	e0822380 	add	r2, r2, r0, lsl #7
4001f68c:	e5821014 	str	r1, [r2, #20]
4001f690:	e2801001 	add	r1, r0, #1
4001f694:	e20100ff 	and	r0, r1, #255	; 0xff
4001f698:	e3500010 	cmp	r0, #16
4001f69c:	baffffef 	blt	4001f660 <CyU3PUibSocketInit+0x8>
4001f6a0:	e3a00000 	mov	r0, #0
4001f6a4:	ea00000d 	b	4001f6e0 <CyU3PUibSocketInit+0x88>
4001f6a8:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f6ac:	e59f203c 	ldr	r2, [pc, #60]	; 4001f6f0 <CyU3PUibSocketInit+0x98>
4001f6b0:	e0822380 	add	r2, r2, r0, lsl #7
4001f6b4:	e582100c 	str	r1, [r2, #12]
4001f6b8:	e3e01000 	mvn	r1, #0
4001f6bc:	e59f202c 	ldr	r2, [pc, #44]	; 4001f6f0 <CyU3PUibSocketInit+0x98>
4001f6c0:	e0822380 	add	r2, r2, r0, lsl #7
4001f6c4:	e5821010 	str	r1, [r2, #16]
4001f6c8:	e3a01000 	mov	r1, #0
4001f6cc:	e59f201c 	ldr	r2, [pc, #28]	; 4001f6f0 <CyU3PUibSocketInit+0x98>
4001f6d0:	e0822380 	add	r2, r2, r0, lsl #7
4001f6d4:	e5821014 	str	r1, [r2, #20]
4001f6d8:	e2801001 	add	r1, r0, #1
4001f6dc:	e20100ff 	and	r0, r1, #255	; 0xff
4001f6e0:	e3500010 	cmp	r0, #16
4001f6e4:	baffffef 	blt	4001f6a8 <CyU3PUibSocketInit+0x50>
4001f6e8:	e12fff1e 	bx	lr
4001f6ec:	e0038000 	.word	0xe0038000
4001f6f0:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001f6f4 <CyU3PUibStatusTimerCb>:
4001f6f4:	e92d4010 	push	{r4, lr}
4001f6f8:	e1a04000 	mov	r4, r0
4001f6fc:	e59f0050 	ldr	r0, [pc, #80]	; 4001f754 <CyU3PUibStatusTimerCb+0x60>
4001f700:	e5900000 	ldr	r0, [r0]
4001f704:	e3500000 	cmp	r0, #0
4001f708:	0a000010 	beq	4001f750 <CyU3PUibStatusTimerCb+0x5c>
4001f70c:	e59f0044 	ldr	r0, [pc, #68]	; 4001f758 <CyU3PUibStatusTimerCb+0x64>
4001f710:	e5d00009 	ldrb	r0, [r0, #9]
4001f714:	e3500003 	cmp	r0, #3
4001f718:	1a00000c 	bne	4001f750 <CyU3PUibStatusTimerCb+0x5c>
4001f71c:	e59f0038 	ldr	r0, [pc, #56]	; 4001f75c <CyU3PUibStatusTimerCb+0x68>
4001f720:	e5900000 	ldr	r0, [r0]
4001f724:	e3500000 	cmp	r0, #0
4001f728:	0a000008 	beq	4001f750 <CyU3PUibStatusTimerCb+0x5c>
4001f72c:	e3a01000 	mov	r1, #0
4001f730:	e1a00001 	mov	r0, r1
4001f734:	ebfff77c 	bl	4001d52c <CyU3PUsbSendErdy>
4001f738:	e3a02000 	mov	r2, #0
4001f73c:	e3a01064 	mov	r1, #100	; 0x64
4001f740:	e59f0018 	ldr	r0, [pc, #24]	; 4001f760 <CyU3PUibStatusTimerCb+0x6c>
4001f744:	ebffac61 	bl	4000a8d0 <_txe_timer_change>
4001f748:	e59f0010 	ldr	r0, [pc, #16]	; 4001f760 <CyU3PUibStatusTimerCb+0x6c>
4001f74c:	ebffac4f 	bl	4000a890 <_txe_timer_activate>
4001f750:	e8bd8010 	pop	{r4, pc}
4001f754:	40030db4 	.word	0x40030db4
4001f758:	40031d40 	.word	0x40031d40
4001f75c:	40030db8 	.word	0x40030db8
4001f760:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001f764 <CyU3PUibThreadEntry>:
4001f764:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001f768:	e3a05000 	mov	r5, #0
4001f76c:	e59f505c 	ldr	r5, [pc, #92]	; 4001f7d0 <CyU3PUibThreadEntry+0x6c>
4001f770:	e3a00001 	mov	r0, #1
4001f774:	e59f1058 	ldr	r1, [pc, #88]	; 4001f7d4 <CyU3PUibThreadEntry+0x70>
4001f778:	e5810000 	str	r0, [r1]
4001f77c:	e3a02020 	mov	r2, #32
4001f780:	e3a01000 	mov	r1, #0
4001f784:	e59f004c 	ldr	r0, [pc, #76]	; 4001f7d8 <CyU3PUibThreadEntry+0x74>
4001f788:	ebff8fca 	bl	400036b8 <CyU3PMemSet>
4001f78c:	ea00000e 	b	4001f7cc <CyU3PUibThreadEntry+0x68>
4001f790:	e3e03000 	mvn	r3, #0
4001f794:	e58d3000 	str	r3, [sp]
4001f798:	e28d3004 	add	r3, sp, #4
4001f79c:	e3a02001 	mov	r2, #1
4001f7a0:	e1a01005 	mov	r1, r5
4001f7a4:	e59f0030 	ldr	r0, [pc, #48]	; 4001f7dc <CyU3PUibThreadEntry+0x78>
4001f7a8:	ebffa932 	bl	40009c78 <_txe_event_flags_get>
4001f7ac:	e1a04000 	mov	r4, r0
4001f7b0:	e3540000 	cmp	r4, #0
4001f7b4:	0a000000 	beq	4001f7bc <CyU3PUibThreadEntry+0x58>
4001f7b8:	ea000003 	b	4001f7cc <CyU3PUibThreadEntry+0x68>
4001f7bc:	e59d0004 	ldr	r0, [sp, #4]
4001f7c0:	eb0002a1 	bl	4002024c <CyU3PUsbHandleEvents>
4001f7c4:	ebffac14 	bl	4000a81c <_txe_thread_relinquish>
4001f7c8:	e1a00000 	nop			; (mov r0, r0)
4001f7cc:	eaffffef 	b	4001f790 <CyU3PUibThreadEntry+0x2c>
4001f7d0:	073fbfe1 	.word	0x073fbfe1
4001f7d4:	40030d64 	.word	0x40030d64
4001f7d8:	40032680 	.word	0x40032680
4001f7dc:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001f7e0 <CyU3PUibVbusChangeHandler>:
4001f7e0:	e92d4010 	push	{r4, lr}
4001f7e4:	e3a00000 	mov	r0, #0
4001f7e8:	e59f114c 	ldr	r1, [pc, #332]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f7ec:	e5810060 	str	r0, [r1, #96]	; 0x60
4001f7f0:	e59f0148 	ldr	r0, [pc, #328]	; 4001f940 <CyU3PUibVbusChangeHandler+0x160>
4001f7f4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f7f8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f7fc:	e1100001 	tst	r0, r1
4001f800:	0a00000b 	beq	4001f834 <CyU3PUibVbusChangeHandler+0x54>
4001f804:	e3a00002 	mov	r0, #2
4001f808:	eb000051 	bl	4001f954 <CyU3PUsbAddToEventLog>
4001f80c:	e59f0130 	ldr	r0, [pc, #304]	; 4001f944 <CyU3PUibVbusChangeHandler+0x164>
4001f810:	e5900000 	ldr	r0, [r0]
4001f814:	e3500000 	cmp	r0, #0
4001f818:	0a000010 	beq	4001f860 <CyU3PUibVbusChangeHandler+0x80>
4001f81c:	e3a01000 	mov	r1, #0
4001f820:	e3a0000b 	mov	r0, #11
4001f824:	e59f2118 	ldr	r2, [pc, #280]	; 4001f944 <CyU3PUibVbusChangeHandler+0x164>
4001f828:	e5922000 	ldr	r2, [r2]
4001f82c:	e12fff32 	blx	r2
4001f830:	ea00000a 	b	4001f860 <CyU3PUibVbusChangeHandler+0x80>
4001f834:	e3a00001 	mov	r0, #1
4001f838:	eb000045 	bl	4001f954 <CyU3PUsbAddToEventLog>
4001f83c:	e59f0100 	ldr	r0, [pc, #256]	; 4001f944 <CyU3PUibVbusChangeHandler+0x164>
4001f840:	e5900000 	ldr	r0, [r0]
4001f844:	e3500000 	cmp	r0, #0
4001f848:	0a000004 	beq	4001f860 <CyU3PUibVbusChangeHandler+0x80>
4001f84c:	e3a01000 	mov	r1, #0
4001f850:	e3a0000c 	mov	r0, #12
4001f854:	e59f20e8 	ldr	r2, [pc, #232]	; 4001f944 <CyU3PUibVbusChangeHandler+0x164>
4001f858:	e5922000 	ldr	r2, [r2]
4001f85c:	e12fff32 	blx	r2
4001f860:	e59f00d8 	ldr	r0, [pc, #216]	; 4001f940 <CyU3PUibVbusChangeHandler+0x160>
4001f864:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f868:	e59f10cc 	ldr	r1, [pc, #204]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f86c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f870:	e1100001 	tst	r0, r1
4001f874:	0a000022 	beq	4001f904 <CyU3PUibVbusChangeHandler+0x124>
4001f878:	e59f00bc 	ldr	r0, [pc, #188]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f87c:	e5d00008 	ldrb	r0, [r0, #8]
4001f880:	e3500005 	cmp	r0, #5
4001f884:	ba000000 	blt	4001f88c <CyU3PUibVbusChangeHandler+0xac>
4001f888:	eb0008d6 	bl	40021be8 <HandleVbusOffEvent>
4001f88c:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f890:	e5d00008 	ldrb	r0, [r0, #8]
4001f894:	e3500004 	cmp	r0, #4
4001f898:	1a00001e 	bne	4001f918 <CyU3PUibVbusChangeHandler+0x138>
4001f89c:	e59f0098 	ldr	r0, [pc, #152]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f8a0:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f8a4:	e59f1090 	ldr	r1, [pc, #144]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f8a8:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001f8ac:	e2810000 	add	r0, r1, #0
4001f8b0:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f8b4:	e3500000 	cmp	r0, #0
4001f8b8:	0a00000a 	beq	4001f8e8 <CyU3PUibVbusChangeHandler+0x108>
4001f8bc:	e3a00000 	mov	r0, #0
4001f8c0:	e59f1080 	ldr	r1, [pc, #128]	; 4001f948 <CyU3PUibVbusChangeHandler+0x168>
4001f8c4:	e5810014 	str	r0, [r1, #20]
4001f8c8:	e59f107c 	ldr	r1, [pc, #124]	; 4001f94c <CyU3PUibVbusChangeHandler+0x16c>
4001f8cc:	e5810000 	str	r0, [r1]
4001f8d0:	e59f1078 	ldr	r1, [pc, #120]	; 4001f950 <CyU3PUibVbusChangeHandler+0x170>
4001f8d4:	e5810000 	str	r0, [r1]
4001f8d8:	e59f105c 	ldr	r1, [pc, #92]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f8dc:	e5810054 	str	r0, [r1, #84]	; 0x54
4001f8e0:	e5810050 	str	r0, [r1, #80]	; 0x50
4001f8e4:	e5810058 	str	r0, [r1, #88]	; 0x58
4001f8e8:	e59f104c 	ldr	r1, [pc, #76]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f8ec:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001f8f0:	ebfff593 	bl	4001cf44 <CyU3PUsbPhyEnable>
4001f8f4:	e3a00005 	mov	r0, #5
4001f8f8:	e59f103c 	ldr	r1, [pc, #60]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f8fc:	e5c10008 	strb	r0, [r1, #8]
4001f900:	ea000004 	b	4001f918 <CyU3PUibVbusChangeHandler+0x138>
4001f904:	e59f0030 	ldr	r0, [pc, #48]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f908:	e5d00008 	ldrb	r0, [r0, #8]
4001f90c:	e3500005 	cmp	r0, #5
4001f910:	ba000000 	blt	4001f918 <CyU3PUibVbusChangeHandler+0x138>
4001f914:	eb0008b3 	bl	40021be8 <HandleVbusOffEvent>
4001f918:	ebfff0df 	bl	4001bc9c <CyU3POtgIsStarted>
4001f91c:	e3500000 	cmp	r0, #0
4001f920:	0a000000 	beq	4001f928 <CyU3PUibVbusChangeHandler+0x148>
4001f924:	ebfff4e3 	bl	4001ccb8 <CyU3PUsbOtgVbusChangeHandler>
4001f928:	e59f000c 	ldr	r0, [pc, #12]	; 4001f93c <CyU3PUibVbusChangeHandler+0x15c>
4001f92c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001f930:	e59f1008 	ldr	r1, [pc, #8]	; 4001f940 <CyU3PUibVbusChangeHandler+0x160>
4001f934:	e5810038 	str	r0, [r1, #56]	; 0x38
4001f938:	e8bd8010 	pop	{r4, pc}
4001f93c:	40031d40 	.word	0x40031d40
4001f940:	e0051000 	.word	0xe0051000
4001f944:	40030da0 	.word	0x40030da0
4001f948:	e0033000 	.word	0xe0033000
4001f94c:	40030d88 	.word	0x40030d88
4001f950:	40030d8c 	.word	0x40030d8c

Disassembly of section i.CyU3PUsbAddToEventLog:

4001f954 <CyU3PUsbAddToEventLog>:
4001f954:	e59f1058 	ldr	r1, [pc, #88]	; 4001f9b4 <CyU3PUsbAddToEventLog+0x60>
4001f958:	e5911000 	ldr	r1, [r1]
4001f95c:	e3510000 	cmp	r1, #0
4001f960:	0a000012 	beq	4001f9b0 <CyU3PUsbAddToEventLog+0x5c>
4001f964:	e59f104c 	ldr	r1, [pc, #76]	; 4001f9b8 <CyU3PUsbAddToEventLog+0x64>
4001f968:	e5911000 	ldr	r1, [r1]
4001f96c:	e59f2044 	ldr	r2, [pc, #68]	; 4001f9b8 <CyU3PUsbAddToEventLog+0x64>
4001f970:	e5922000 	ldr	r2, [r2]
4001f974:	e2822001 	add	r2, r2, #1
4001f978:	e59f3038 	ldr	r3, [pc, #56]	; 4001f9b8 <CyU3PUsbAddToEventLog+0x64>
4001f97c:	e5832000 	str	r2, [r3]
4001f980:	e59f202c 	ldr	r2, [pc, #44]	; 4001f9b4 <CyU3PUsbAddToEventLog+0x60>
4001f984:	e5922000 	ldr	r2, [r2]
4001f988:	e7c20001 	strb	r0, [r2, r1]
4001f98c:	e2831000 	add	r1, r3, #0
4001f990:	e5911000 	ldr	r1, [r1]
4001f994:	e59f2020 	ldr	r2, [pc, #32]	; 4001f9bc <CyU3PUsbAddToEventLog+0x68>
4001f998:	e5922000 	ldr	r2, [r2]
4001f99c:	e1510002 	cmp	r1, r2
4001f9a0:	3a000002 	bcc	4001f9b0 <CyU3PUsbAddToEventLog+0x5c>
4001f9a4:	e3a01000 	mov	r1, #0
4001f9a8:	e2832000 	add	r2, r3, #0
4001f9ac:	e5821000 	str	r1, [r2]
4001f9b0:	e12fff1e 	bx	lr
4001f9b4:	40030d94 	.word	0x40030d94
4001f9b8:	40030d98 	.word	0x40030d98
4001f9bc:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001f9c0 <CyU3PUsbCheckUsb3Disconnect>:
4001f9c0:	e92d4070 	push	{r4, r5, r6, lr}
4001f9c4:	e3a04e19 	mov	r4, #400	; 0x190
4001f9c8:	e3a06002 	mov	r6, #2
4001f9cc:	e59f01fc 	ldr	r0, [pc, #508]	; 4001fbd0 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001f9d0:	e1d000b0 	ldrh	r0, [r0]
4001f9d4:	e3500001 	cmp	r0, #1
4001f9d8:	da000008 	ble	4001fa00 <CyU3PUsbCheckUsb3Disconnect+0x40>
4001f9dc:	e59f01ec 	ldr	r0, [pc, #492]	; 4001fbd0 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001f9e0:	e1d010b0 	ldrh	r1, [r0]
4001f9e4:	e1a00004 	mov	r0, r4
4001f9e8:	ebffc418 	bl	40010a50 <__aeabi_idivmod>
4001f9ec:	e1a04800 	lsl	r4, r0, #16
4001f9f0:	e1a04824 	lsr	r4, r4, #16
4001f9f4:	e2840001 	add	r0, r4, #1
4001f9f8:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001f9fc:	e3a06001 	mov	r6, #1
4001fa00:	e59f01cc 	ldr	r0, [pc, #460]	; 4001fbd4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fa04:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fa08:	e200503f 	and	r5, r0, #63	; 0x3f
4001fa0c:	e3550010 	cmp	r5, #16
4001fa10:	ba000004 	blt	4001fa28 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa14:	e3550017 	cmp	r5, #23
4001fa18:	ca000002 	bgt	4001fa28 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa1c:	e3a00000 	mov	r0, #0
4001fa20:	e59f11b0 	ldr	r1, [pc, #432]	; 4001fbd8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa24:	e5810000 	str	r0, [r1]
4001fa28:	e59f01a8 	ldr	r0, [pc, #424]	; 4001fbd8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa2c:	e5900000 	ldr	r0, [r0]
4001fa30:	e3500000 	cmp	r0, #0
4001fa34:	1a000000 	bne	4001fa3c <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fa38:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fa3c:	ea000010 	b	4001fa84 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa40:	e1a00006 	mov	r0, r6
4001fa44:	ebffa3c3 	bl	40008958 <_tx_thread_sleep>
4001fa48:	e59f0184 	ldr	r0, [pc, #388]	; 4001fbd4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fa4c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fa50:	e200503f 	and	r5, r0, #63	; 0x3f
4001fa54:	e59f017c 	ldr	r0, [pc, #380]	; 4001fbd8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa58:	e5900000 	ldr	r0, [r0]
4001fa5c:	e3500000 	cmp	r0, #0
4001fa60:	0a000003 	beq	4001fa74 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fa64:	e3550010 	cmp	r5, #16
4001fa68:	ba000005 	blt	4001fa84 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa6c:	e3550017 	cmp	r5, #23
4001fa70:	ca000003 	bgt	4001fa84 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fa74:	e3a00000 	mov	r0, #0
4001fa78:	e59f1158 	ldr	r1, [pc, #344]	; 4001fbd8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa7c:	e5810000 	str	r0, [r1]
4001fa80:	ea000004 	b	4001fa98 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001fa84:	e1b00004 	movs	r0, r4
4001fa88:	e2441001 	sub	r1, r4, #1
4001fa8c:	e1a04801 	lsl	r4, r1, #16
4001fa90:	e1a04824 	lsr	r4, r4, #16
4001fa94:	1affffe9 	bne	4001fa40 <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fa98:	e1a00000 	nop			; (mov r0, r0)
4001fa9c:	e59f0134 	ldr	r0, [pc, #308]	; 4001fbd8 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001faa0:	e5900000 	ldr	r0, [r0]
4001faa4:	e3500000 	cmp	r0, #0
4001faa8:	0a000047 	beq	4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001faac:	e59f0128 	ldr	r0, [pc, #296]	; 4001fbdc <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fab0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fab4:	e3100a02 	tst	r0, #8192	; 0x2000
4001fab8:	0a000020 	beq	4001fb40 <CyU3PUsbCheckUsb3Disconnect+0x180>
4001fabc:	e59f0118 	ldr	r0, [pc, #280]	; 4001fbdc <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fac0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fac4:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001fac8:	e59f110c 	ldr	r1, [pc, #268]	; 4001fbdc <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001facc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fad0:	e3a00002 	mov	r0, #2
4001fad4:	ebffce52 	bl	40013424 <CyU3PBusyWait>
4001fad8:	e59f0100 	ldr	r0, [pc, #256]	; 4001fbe0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fadc:	e5900004 	ldr	r0, [r0, #4]
4001fae0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fae4:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fbe0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fae8:	e5810004 	str	r0, [r1, #4]
4001faec:	e3a00001 	mov	r0, #1
4001faf0:	ebffce4b 	bl	40013424 <CyU3PBusyWait>
4001faf4:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fbd4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001faf8:	e590001c 	ldr	r0, [r0, #28]
4001fafc:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fb00:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fbd4 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb04:	e581001c 	str	r0, [r1, #28]
4001fb08:	e59f00d4 	ldr	r0, [pc, #212]	; 4001fbe4 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001fb0c:	e5900000 	ldr	r0, [r0]
4001fb10:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fb14:	e3a00001 	mov	r0, #1
4001fb18:	ebffce41 	bl	40013424 <CyU3PBusyWait>
4001fb1c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fbe0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb20:	e5900004 	ldr	r0, [r0, #4]
4001fb24:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001fb28:	e59f10b0 	ldr	r1, [pc, #176]	; 4001fbe0 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb2c:	e5810004 	str	r0, [r1, #4]
4001fb30:	e3a01000 	mov	r1, #0
4001fb34:	e3a00002 	mov	r0, #2
4001fb38:	ebfff1d9 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
4001fb3c:	ea000022 	b	4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fb40:	e59f00a0 	ldr	r0, [pc, #160]	; 4001fbe8 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fb44:	e5900000 	ldr	r0, [r0]
4001fb48:	e3500000 	cmp	r0, #0
4001fb4c:	0a000007 	beq	4001fb70 <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001fb50:	e3a00000 	mov	r0, #0
4001fb54:	e59f108c 	ldr	r1, [pc, #140]	; 4001fbe8 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fb58:	e5810000 	str	r0, [r1]
4001fb5c:	e3a00001 	mov	r0, #1
4001fb60:	ebfff481 	bl	4001cd6c <CyU3PUsbPhyDisable>
4001fb64:	e3a00001 	mov	r0, #1
4001fb68:	ebfff4f5 	bl	4001cf44 <CyU3PUsbPhyEnable>
4001fb6c:	eaffffb1 	b	4001fa38 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fb70:	e59f0074 	ldr	r0, [pc, #116]	; 4001fbec <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fb74:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001fb78:	e3500000 	cmp	r0, #0
4001fb7c:	0a000011 	beq	4001fbc8 <CyU3PUsbCheckUsb3Disconnect+0x208>
4001fb80:	e3a00001 	mov	r0, #1
4001fb84:	ebfff478 	bl	4001cd6c <CyU3PUsbPhyDisable>
4001fb88:	e3a00003 	mov	r0, #3
4001fb8c:	e59f1058 	ldr	r1, [pc, #88]	; 4001fbec <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fb90:	e5c10008 	strb	r0, [r1, #8]
4001fb94:	e3a00000 	mov	r0, #0
4001fb98:	e5c10009 	strb	r0, [r1, #9]
4001fb9c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fba0:	e59f0048 	ldr	r0, [pc, #72]	; 4001fbf0 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fba4:	e5900000 	ldr	r0, [r0]
4001fba8:	e3500000 	cmp	r0, #0
4001fbac:	0a000006 	beq	4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fbb0:	e3a01000 	mov	r1, #0
4001fbb4:	e3a00014 	mov	r0, #20
4001fbb8:	e59f2030 	ldr	r2, [pc, #48]	; 4001fbf0 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fbbc:	e5922000 	ldr	r2, [r2]
4001fbc0:	e12fff32 	blx	r2
4001fbc4:	ea000000 	b	4001fbcc <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fbc8:	eb00008e 	bl	4001fe08 <CyU3PUsbFallBackToUsb2>
4001fbcc:	eaffff99 	b	4001fa38 <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fbd0:	40030dbc 	.word	0x40030dbc
4001fbd4:	e0033000 	.word	0xe0033000
4001fbd8:	40030d68 	.word	0x40030d68
4001fbdc:	e0031000 	.word	0xe0031000
4001fbe0:	e0030000 	.word	0xe0030000
4001fbe4:	40030c5c 	.word	0x40030c5c
4001fbe8:	40030d78 	.word	0x40030d78
4001fbec:	40031d40 	.word	0x40031d40
4001fbf0:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbDescInit:

4001fbf4 <CyU3PUsbDescInit>:
4001fbf4:	e92d4010 	push	{r4, lr}
4001fbf8:	e3a02074 	mov	r2, #116	; 0x74
4001fbfc:	e3a01000 	mov	r1, #0
4001fc00:	e59f0004 	ldr	r0, [pc, #4]	; 4001fc0c <CyU3PUsbDescInit+0x18>
4001fc04:	ebff8eab 	bl	400036b8 <CyU3PMemSet>
4001fc08:	e8bd8010 	pop	{r4, pc}
4001fc0c:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

4001fc10 <CyU3PUsbEpPrepare>:
4001fc10:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fc14:	e1a04000 	mov	r4, r0
4001fc18:	e3a05001 	mov	r5, #1
4001fc1c:	ea000061 	b	4001fda8 <CyU3PUsbEpPrepare+0x198>
4001fc20:	e59f01b8 	ldr	r0, [pc, #440]	; 4001fde0 <CyU3PUsbEpPrepare+0x1d0>
4001fc24:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc28:	e3100901 	tst	r0, #16384	; 0x4000
4001fc2c:	0a000029 	beq	4001fcd8 <CyU3PUsbEpPrepare+0xc8>
4001fc30:	e0850085 	add	r0, r5, r5, lsl #1
4001fc34:	e59f11a8 	ldr	r1, [pc, #424]	; 4001fde4 <CyU3PUsbEpPrepare+0x1d4>
4001fc38:	e0810100 	add	r0, r1, r0, lsl #2
4001fc3c:	e1d070b0 	ldrh	r7, [r0]
4001fc40:	e59f0198 	ldr	r0, [pc, #408]	; 4001fde0 <CyU3PUsbEpPrepare+0x1d0>
4001fc44:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc48:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fc4c:	e1a06520 	lsr	r6, r0, #10
4001fc50:	e2440001 	sub	r0, r4, #1
4001fc54:	e0800080 	add	r0, r0, r0, lsl #1
4001fc58:	e59f1188 	ldr	r1, [pc, #392]	; 4001fde8 <CyU3PUsbEpPrepare+0x1d8>
4001fc5c:	e0810100 	add	r0, r1, r0, lsl #2
4001fc60:	e2461001 	sub	r1, r6, #1
4001fc64:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fc68:	e1570008 	cmp	r7, r8
4001fc6c:	8a000001 	bhi	4001fc78 <CyU3PUsbEpPrepare+0x68>
4001fc70:	e3570000 	cmp	r7, #0
4001fc74:	1a000000 	bne	4001fc7c <CyU3PUsbEpPrepare+0x6c>
4001fc78:	e1a07008 	mov	r7, r8
4001fc7c:	e3540003 	cmp	r4, #3
4001fc80:	1a000005 	bne	4001fc9c <CyU3PUsbEpPrepare+0x8c>
4001fc84:	e59f0160 	ldr	r0, [pc, #352]	; 4001fdec <CyU3PUsbEpPrepare+0x1dc>
4001fc88:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc8c:	e3800001 	orr	r0, r0, #1
4001fc90:	e59f1154 	ldr	r1, [pc, #340]	; 4001fdec <CyU3PUsbEpPrepare+0x1dc>
4001fc94:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fc98:	ea000008 	b	4001fcc0 <CyU3PUsbEpPrepare+0xb0>
4001fc9c:	e59f013c 	ldr	r0, [pc, #316]	; 4001fde0 <CyU3PUsbEpPrepare+0x1d0>
4001fca0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fca4:	e1a00520 	lsr	r0, r0, #10
4001fca8:	e1a00500 	lsl	r0, r0, #10
4001fcac:	e1a01b07 	lsl	r1, r7, #22
4001fcb0:	e1a01b21 	lsr	r1, r1, #22
4001fcb4:	e1800001 	orr	r0, r0, r1
4001fcb8:	e59f1120 	ldr	r1, [pc, #288]	; 4001fde0 <CyU3PUsbEpPrepare+0x1d0>
4001fcbc:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fcc0:	e59f0128 	ldr	r0, [pc, #296]	; 4001fdf0 <CyU3PUsbEpPrepare+0x1e0>
4001fcc4:	e7807105 	str	r7, [r0, r5, lsl #2]
4001fcc8:	e3850080 	orr	r0, r5, #128	; 0x80
4001fccc:	e3a02001 	mov	r2, #1
4001fcd0:	e3a01000 	mov	r1, #0
4001fcd4:	ebfff7c9 	bl	4001dc00 <CyU3PUsbStall>
4001fcd8:	e59f0114 	ldr	r0, [pc, #276]	; 4001fdf4 <CyU3PUsbEpPrepare+0x1e4>
4001fcdc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fce0:	e3100901 	tst	r0, #16384	; 0x4000
4001fce4:	0a00002d 	beq	4001fda0 <CyU3PUsbEpPrepare+0x190>
4001fce8:	e0850085 	add	r0, r5, r5, lsl #1
4001fcec:	e59f1104 	ldr	r1, [pc, #260]	; 4001fdf8 <CyU3PUsbEpPrepare+0x1e8>
4001fcf0:	e0810100 	add	r0, r1, r0, lsl #2
4001fcf4:	e1d070b0 	ldrh	r7, [r0]
4001fcf8:	e59f00f4 	ldr	r0, [pc, #244]	; 4001fdf4 <CyU3PUsbEpPrepare+0x1e4>
4001fcfc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd00:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fd04:	e1a06520 	lsr	r6, r0, #10
4001fd08:	e2440001 	sub	r0, r4, #1
4001fd0c:	e0800080 	add	r0, r0, r0, lsl #1
4001fd10:	e59f10d0 	ldr	r1, [pc, #208]	; 4001fde8 <CyU3PUsbEpPrepare+0x1d8>
4001fd14:	e0810100 	add	r0, r1, r0, lsl #2
4001fd18:	e2461001 	sub	r1, r6, #1
4001fd1c:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fd20:	e1570008 	cmp	r7, r8
4001fd24:	8a000001 	bhi	4001fd30 <CyU3PUsbEpPrepare+0x120>
4001fd28:	e3570000 	cmp	r7, #0
4001fd2c:	1a000000 	bne	4001fd34 <CyU3PUsbEpPrepare+0x124>
4001fd30:	e1a07008 	mov	r7, r8
4001fd34:	e3540003 	cmp	r4, #3
4001fd38:	1a000005 	bne	4001fd54 <CyU3PUsbEpPrepare+0x144>
4001fd3c:	e59f00b8 	ldr	r0, [pc, #184]	; 4001fdfc <CyU3PUsbEpPrepare+0x1ec>
4001fd40:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd44:	e3800001 	orr	r0, r0, #1
4001fd48:	e59f10ac 	ldr	r1, [pc, #172]	; 4001fdfc <CyU3PUsbEpPrepare+0x1ec>
4001fd4c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd50:	ea000008 	b	4001fd78 <CyU3PUsbEpPrepare+0x168>
4001fd54:	e59f0098 	ldr	r0, [pc, #152]	; 4001fdf4 <CyU3PUsbEpPrepare+0x1e4>
4001fd58:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd5c:	e1a00520 	lsr	r0, r0, #10
4001fd60:	e1a00500 	lsl	r0, r0, #10
4001fd64:	e1a01b07 	lsl	r1, r7, #22
4001fd68:	e1a01b21 	lsr	r1, r1, #22
4001fd6c:	e1800001 	orr	r0, r0, r1
4001fd70:	e59f107c 	ldr	r1, [pc, #124]	; 4001fdf4 <CyU3PUsbEpPrepare+0x1e4>
4001fd74:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd78:	e59f0080 	ldr	r0, [pc, #128]	; 4001fe00 <CyU3PUsbEpPrepare+0x1f0>
4001fd7c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd80:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001fd84:	e1800007 	orr	r0, r0, r7
4001fd88:	e59f1070 	ldr	r1, [pc, #112]	; 4001fe00 <CyU3PUsbEpPrepare+0x1f0>
4001fd8c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd90:	e3a02001 	mov	r2, #1
4001fd94:	e3a01000 	mov	r1, #0
4001fd98:	e1a00005 	mov	r0, r5
4001fd9c:	ebfff797 	bl	4001dc00 <CyU3PUsbStall>
4001fda0:	e2850001 	add	r0, r5, #1
4001fda4:	e20050ff 	and	r5, r0, #255	; 0xff
4001fda8:	e3550010 	cmp	r5, #16
4001fdac:	baffff9b 	blt	4001fc20 <CyU3PUsbEpPrepare+0x10>
4001fdb0:	e3540003 	cmp	r4, #3
4001fdb4:	1a000005 	bne	4001fdd0 <CyU3PUsbEpPrepare+0x1c0>
4001fdb8:	e59f1044 	ldr	r1, [pc, #68]	; 4001fe04 <CyU3PUsbEpPrepare+0x1f4>
4001fdbc:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4001fdc0:	e3510000 	cmp	r1, #0
4001fdc4:	0a000001 	beq	4001fdd0 <CyU3PUsbEpPrepare+0x1c0>
4001fdc8:	e3a01001 	mov	r1, #1
4001fdcc:	ea000000 	b	4001fdd4 <CyU3PUsbEpPrepare+0x1c4>
4001fdd0:	e3a01000 	mov	r1, #0
4001fdd4:	e1a00001 	mov	r0, r1
4001fdd8:	eb000853 	bl	40021f2c <CyFx3UsbDmaPrefetchEnable>
4001fddc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001fde0:	e0031418 	.word	0xe0031418
4001fde4:	40031bb4 	.word	0x40031bb4
4001fde8:	40011d6c 	.word	0x40011d6c
4001fdec:	e0033500 	.word	0xe0033500
4001fdf0:	e0031c40 	.word	0xe0031c40
4001fdf4:	e0031498 	.word	0xe0031498
4001fdf8:	40031c74 	.word	0x40031c74
4001fdfc:	e0033600 	.word	0xe0033600
4001fe00:	e0031c80 	.word	0xe0031c80
4001fe04:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

4001fe08 <CyU3PUsbFallBackToUsb2>:
4001fe08:	e92d4010 	push	{r4, lr}
4001fe0c:	e59f0234 	ldr	r0, [pc, #564]	; 40020048 <CyU3PUsbFallBackToUsb2+0x240>
4001fe10:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fe14:	e3500000 	cmp	r0, #0
4001fe18:	0a000006 	beq	4001fe38 <CyU3PUsbFallBackToUsb2+0x30>
4001fe1c:	e59f0228 	ldr	r0, [pc, #552]	; 4002004c <CyU3PUsbFallBackToUsb2+0x244>
4001fe20:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fe24:	e59f121c 	ldr	r1, [pc, #540]	; 40020048 <CyU3PUsbFallBackToUsb2+0x240>
4001fe28:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fe2c:	e1100001 	tst	r0, r1
4001fe30:	1a000000 	bne	4001fe38 <CyU3PUsbFallBackToUsb2+0x30>
4001fe34:	e8bd8010 	pop	{r4, pc}
4001fe38:	e3a00050 	mov	r0, #80	; 0x50
4001fe3c:	ebfffec4 	bl	4001f954 <CyU3PUsbAddToEventLog>
4001fe40:	eb0007f1 	bl	40021e0c <CyU3PVicDisableAllInterrupts>
4001fe44:	e1a04000 	mov	r4, r0
4001fe48:	e3a01000 	mov	r1, #0
4001fe4c:	e59f01fc 	ldr	r0, [pc, #508]	; 40020050 <CyU3PUsbFallBackToUsb2+0x248>
4001fe50:	eb000860 	bl	40021fd8 <CyFx3UsbWritePhyReg>
4001fe54:	e1a00004 	mov	r0, r4
4001fe58:	eb0007f9 	bl	40021e44 <CyU3PVicEnableInterrupts>
4001fe5c:	e3a00a01 	mov	r0, #4096	; 0x1000
4001fe60:	e59f11ec 	ldr	r1, [pc, #492]	; 40020054 <CyU3PUsbFallBackToUsb2+0x24c>
4001fe64:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fe68:	e59f01d8 	ldr	r0, [pc, #472]	; 40020048 <CyU3PUsbFallBackToUsb2+0x240>
4001fe6c:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4001fe70:	e2800001 	add	r0, r0, #1
4001fe74:	e59f11cc 	ldr	r1, [pc, #460]	; 40020048 <CyU3PUsbFallBackToUsb2+0x240>
4001fe78:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fe7c:	e3a00000 	mov	r0, #0
4001fe80:	e59f11d0 	ldr	r1, [pc, #464]	; 40020058 <CyU3PUsbFallBackToUsb2+0x250>
4001fe84:	e5810000 	str	r0, [r1]
4001fe88:	e59f01cc 	ldr	r0, [pc, #460]	; 4002005c <CyU3PUsbFallBackToUsb2+0x254>
4001fe8c:	ebffab23 	bl	4000ab20 <_txe_timer_deactivate>
4001fe90:	e3a00002 	mov	r0, #2
4001fe94:	ebffcd62 	bl	40013424 <CyU3PBusyWait>
4001fe98:	e3a01002 	mov	r1, #2
4001fe9c:	e1a00001 	mov	r0, r1
4001fea0:	ebfff0ff 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
4001fea4:	e3a00002 	mov	r0, #2
4001fea8:	ebffcd5d 	bl	40013424 <CyU3PBusyWait>
4001feac:	e59f01ac 	ldr	r0, [pc, #428]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
4001feb0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001feb4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001feb8:	e59f11a0 	ldr	r1, [pc, #416]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
4001febc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fec0:	e3a00002 	mov	r0, #2
4001fec4:	ebffcd56 	bl	40013424 <CyU3PBusyWait>
4001fec8:	e59f0190 	ldr	r0, [pc, #400]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
4001fecc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fed0:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001fed4:	e59f1184 	ldr	r1, [pc, #388]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
4001fed8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fedc:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001fee0:	e5900004 	ldr	r0, [r0, #4]
4001fee4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fee8:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001feec:	e5810004 	str	r0, [r1, #4]
4001fef0:	e2810a03 	add	r0, r1, #12288	; 0x3000
4001fef4:	e590001c 	ldr	r0, [r0, #28]
4001fef8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fefc:	e2811a03 	add	r1, r1, #12288	; 0x3000
4001ff00:	e581001c 	str	r0, [r1, #28]
4001ff04:	e59f0158 	ldr	r0, [pc, #344]	; 40020064 <CyU3PUsbFallBackToUsb2+0x25c>
4001ff08:	e5900000 	ldr	r0, [r0]
4001ff0c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ff10:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
4001ff14:	e5900000 	ldr	r0, [r0]
4001ff18:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001ff1c:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
4001ff20:	e5810000 	str	r0, [r1]
4001ff24:	e3a00005 	mov	r0, #5
4001ff28:	ebffcd3d 	bl	40013424 <CyU3PBusyWait>
4001ff2c:	e59f0134 	ldr	r0, [pc, #308]	; 40020068 <CyU3PUsbFallBackToUsb2+0x260>
4001ff30:	e5900000 	ldr	r0, [r0]
4001ff34:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001ff38:	e59f1128 	ldr	r1, [pc, #296]	; 40020068 <CyU3PUsbFallBackToUsb2+0x260>
4001ff3c:	e5810000 	str	r0, [r1]
4001ff40:	e3a0000a 	mov	r0, #10
4001ff44:	ebffcd36 	bl	40013424 <CyU3PBusyWait>
4001ff48:	e3e00000 	mvn	r0, #0
4001ff4c:	e59f110c 	ldr	r1, [pc, #268]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
4001ff50:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ff54:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001ff58:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ff5c:	e59f0108 	ldr	r0, [pc, #264]	; 4002006c <CyU3PUsbFallBackToUsb2+0x264>
4001ff60:	ebffd869 	bl	4001610c <CyU3PDmaChannelReset>
4001ff64:	e59f0104 	ldr	r0, [pc, #260]	; 40020070 <CyU3PUsbFallBackToUsb2+0x268>
4001ff68:	ebffd867 	bl	4001610c <CyU3PDmaChannelReset>
4001ff6c:	e3a00000 	mov	r0, #0
4001ff70:	e59f10dc 	ldr	r1, [pc, #220]	; 40020054 <CyU3PUsbFallBackToUsb2+0x24c>
4001ff74:	e5810008 	str	r0, [r1, #8]
4001ff78:	e3e00000 	mvn	r0, #0
4001ff7c:	e5810004 	str	r0, [r1, #4]
4001ff80:	e3a00000 	mov	r0, #0
4001ff84:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001ff88:	e3e00000 	mvn	r0, #0
4001ff8c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ff90:	e1c10820 	bic	r0, r1, r0, lsr #16
4001ff94:	e5900004 	ldr	r0, [r0, #4]
4001ff98:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001ff9c:	e2411a03 	sub	r1, r1, #12288	; 0x3000
4001ffa0:	e5810004 	str	r0, [r1, #4]
4001ffa4:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001ffa8:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001ffac:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ffb0:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001ffb4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001ffb8:	e1a00001 	mov	r0, r1
4001ffbc:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001ffc0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ffc4:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001ffc8:	e3a00001 	mov	r0, #1
4001ffcc:	e59f1074 	ldr	r1, [pc, #116]	; 40020048 <CyU3PUsbFallBackToUsb2+0x240>
4001ffd0:	e5c10009 	strb	r0, [r1, #9]
4001ffd4:	e3a00000 	mov	r0, #0
4001ffd8:	e5810044 	str	r0, [r1, #68]	; 0x44
4001ffdc:	e3a00501 	mov	r0, #4194304	; 0x400000
4001ffe0:	e59f108c 	ldr	r1, [pc, #140]	; 40020074 <CyU3PUsbFallBackToUsb2+0x26c>
4001ffe4:	e5810074 	str	r0, [r1, #116]	; 0x74
4001ffe8:	e3a00002 	mov	r0, #2
4001ffec:	ebffcd0c 	bl	40013424 <CyU3PBusyWait>
4001fff0:	e59f0068 	ldr	r0, [pc, #104]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
4001fff4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fff8:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001fffc:	e59f105c 	ldr	r1, [pc, #92]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
40020000:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020004:	e3a00064 	mov	r0, #100	; 0x64
40020008:	ebffcd05 	bl	40013424 <CyU3PBusyWait>
4002000c:	eb00079f 	bl	40021e90 <CyFx3Usb2PhySetup>
40020010:	e59f0060 	ldr	r0, [pc, #96]	; 40020078 <CyU3PUsbFallBackToUsb2+0x270>
40020014:	e59f1044 	ldr	r1, [pc, #68]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
40020018:	e5810008 	str	r0, [r1, #8]
4002001c:	e3a00050 	mov	r0, #80	; 0x50
40020020:	ebffccff 	bl	40013424 <CyU3PBusyWait>
40020024:	e3a01000 	mov	r1, #0
40020028:	e3a00002 	mov	r0, #2
4002002c:	ebfff09c 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
40020030:	e59f0028 	ldr	r0, [pc, #40]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
40020034:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020038:	e3c00008 	bic	r0, r0, #8
4002003c:	e59f101c 	ldr	r1, [pc, #28]	; 40020060 <CyU3PUsbFallBackToUsb2+0x258>
40020040:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020044:	eaffff7a 	b	4001fe34 <CyU3PUsbFallBackToUsb2+0x2c>
40020048:	40031d40 	.word	0x40031d40
4002004c:	e0051000 	.word	0xe0051000
40020050:	00001005 	.word	0x00001005
40020054:	e0033000 	.word	0xe0033000
40020058:	40030db4 	.word	0x40030db4
4002005c:	400326a0 	.word	0x400326a0
40020060:	e0031000 	.word	0xe0031000
40020064:	40030c5c 	.word	0x40030c5c
40020068:	e0050000 	.word	0xe0050000
4002006c:	40031a74 	.word	0x40031a74
40020070:	40031b14 	.word	0x40031b14
40020074:	e0032000 	.word	0xe0032000
40020078:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

4002007c <CyU3PUsbGetEpStatus>:
4002007c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020080:	e1a04000 	mov	r4, r0
40020084:	e204600f 	and	r6, r4, #15
40020088:	e59f0090 	ldr	r0, [pc, #144]	; 40020120 <CyU3PUsbGetEpStatus+0xa4>
4002008c:	e5d00009 	ldrb	r0, [r0, #9]
40020090:	e3500003 	cmp	r0, #3
40020094:	1a00000b 	bne	400200c8 <CyU3PUsbGetEpStatus+0x4c>
40020098:	e3140080 	tst	r4, #128	; 0x80
4002009c:	0a000004 	beq	400200b4 <CyU3PUsbGetEpStatus+0x38>
400200a0:	e59f007c 	ldr	r0, [pc, #124]	; 40020124 <CyU3PUsbGetEpStatus+0xa8>
400200a4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200a8:	e2000004 	and	r0, r0, #4
400200ac:	e58d0000 	str	r0, [sp]
400200b0:	ea00000f 	b	400200f4 <CyU3PUsbGetEpStatus+0x78>
400200b4:	e59f006c 	ldr	r0, [pc, #108]	; 40020128 <CyU3PUsbGetEpStatus+0xac>
400200b8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200bc:	e2000004 	and	r0, r0, #4
400200c0:	e58d0000 	str	r0, [sp]
400200c4:	ea00000a 	b	400200f4 <CyU3PUsbGetEpStatus+0x78>
400200c8:	e3140080 	tst	r4, #128	; 0x80
400200cc:	0a000004 	beq	400200e4 <CyU3PUsbGetEpStatus+0x68>
400200d0:	e59f0054 	ldr	r0, [pc, #84]	; 4002012c <CyU3PUsbGetEpStatus+0xb0>
400200d4:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200d8:	e2000801 	and	r0, r0, #65536	; 0x10000
400200dc:	e58d0000 	str	r0, [sp]
400200e0:	ea000003 	b	400200f4 <CyU3PUsbGetEpStatus+0x78>
400200e4:	e59f0044 	ldr	r0, [pc, #68]	; 40020130 <CyU3PUsbGetEpStatus+0xb4>
400200e8:	e7900106 	ldr	r0, [r0, r6, lsl #2]
400200ec:	e2000801 	and	r0, r0, #65536	; 0x10000
400200f0:	e58d0000 	str	r0, [sp]
400200f4:	e59d0000 	ldr	r0, [sp]
400200f8:	e3500000 	cmp	r0, #0
400200fc:	0a000001 	beq	40020108 <CyU3PUsbGetEpStatus+0x8c>
40020100:	e3a00001 	mov	r0, #1
40020104:	e58d0000 	str	r0, [sp]
40020108:	e1a0100d 	mov	r1, sp
4002010c:	e3a00002 	mov	r0, #2
40020110:	ebfff48f 	bl	4001d354 <CyU3PUsbSendEP0Data>
40020114:	e1a05000 	mov	r5, r0
40020118:	e1a00005 	mov	r0, r5
4002011c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020120:	40031d40 	.word	0x40031d40
40020124:	e0033500 	.word	0xe0033500
40020128:	e0033600 	.word	0xe0033600
4002012c:	e0031418 	.word	0xe0031418
40020130:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

40020134 <CyU3PUsbHandleClearFeature>:
40020134:	e92d4070 	push	{r4, r5, r6, lr}
40020138:	e1a04000 	mov	r4, r0
4002013c:	e3a05000 	mov	r5, #0
40020140:	e3540001 	cmp	r4, #1
40020144:	0a000006 	beq	40020164 <CyU3PUsbHandleClearFeature+0x30>
40020148:	e3540002 	cmp	r4, #2
4002014c:	0a00000b 	beq	40020180 <CyU3PUsbHandleClearFeature+0x4c>
40020150:	e3540030 	cmp	r4, #48	; 0x30
40020154:	0a00000f 	beq	40020198 <CyU3PUsbHandleClearFeature+0x64>
40020158:	e3540031 	cmp	r4, #49	; 0x31
4002015c:	1a00002d 	bne	40020218 <CyU3PUsbHandleClearFeature+0xe4>
40020160:	ea00001c 	b	400201d8 <CyU3PUsbHandleClearFeature+0xa4>
40020164:	e1a00000 	nop			; (mov r0, r0)
40020168:	e59f00d8 	ldr	r0, [pc, #216]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
4002016c:	e5d00006 	ldrb	r0, [r0, #6]
40020170:	e3c00002 	bic	r0, r0, #2
40020174:	e59f10cc 	ldr	r1, [pc, #204]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
40020178:	e5c10006 	strb	r0, [r1, #6]
4002017c:	e1a00000 	nop			; (mov r0, r0)
40020180:	e59f00c0 	ldr	r0, [pc, #192]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
40020184:	e5d00009 	ldrb	r0, [r0, #9]
40020188:	e3500003 	cmp	r0, #3
4002018c:	0a000000 	beq	40020194 <CyU3PUsbHandleClearFeature+0x60>
40020190:	e3a05001 	mov	r5, #1
40020194:	ea000021 	b	40020220 <CyU3PUsbHandleClearFeature+0xec>
40020198:	e1a00000 	nop			; (mov r0, r0)
4002019c:	e59f00a4 	ldr	r0, [pc, #164]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
400201a0:	e5d00009 	ldrb	r0, [r0, #9]
400201a4:	e3500003 	cmp	r0, #3
400201a8:	1a000009 	bne	400201d4 <CyU3PUsbHandleClearFeature+0xa0>
400201ac:	e59f0094 	ldr	r0, [pc, #148]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
400201b0:	e5d00008 	ldrb	r0, [r0, #8]
400201b4:	e3500006 	cmp	r0, #6
400201b8:	1a000005 	bne	400201d4 <CyU3PUsbHandleClearFeature+0xa0>
400201bc:	e59f0084 	ldr	r0, [pc, #132]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
400201c0:	e5d00006 	ldrb	r0, [r0, #6]
400201c4:	e3c00004 	bic	r0, r0, #4
400201c8:	e59f1078 	ldr	r1, [pc, #120]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
400201cc:	e5c10006 	strb	r0, [r1, #6]
400201d0:	e3a05001 	mov	r5, #1
400201d4:	ea000011 	b	40020220 <CyU3PUsbHandleClearFeature+0xec>
400201d8:	e1a00000 	nop			; (mov r0, r0)
400201dc:	e59f0064 	ldr	r0, [pc, #100]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
400201e0:	e5d00009 	ldrb	r0, [r0, #9]
400201e4:	e3500003 	cmp	r0, #3
400201e8:	1a000009 	bne	40020214 <CyU3PUsbHandleClearFeature+0xe0>
400201ec:	e59f0054 	ldr	r0, [pc, #84]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
400201f0:	e5d00008 	ldrb	r0, [r0, #8]
400201f4:	e3500006 	cmp	r0, #6
400201f8:	1a000005 	bne	40020214 <CyU3PUsbHandleClearFeature+0xe0>
400201fc:	e59f0044 	ldr	r0, [pc, #68]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
40020200:	e5d00006 	ldrb	r0, [r0, #6]
40020204:	e3c00008 	bic	r0, r0, #8
40020208:	e59f1038 	ldr	r1, [pc, #56]	; 40020248 <CyU3PUsbHandleClearFeature+0x114>
4002020c:	e5c10006 	strb	r0, [r1, #6]
40020210:	e3a05001 	mov	r5, #1
40020214:	ea000001 	b	40020220 <CyU3PUsbHandleClearFeature+0xec>
40020218:	e1a00000 	nop			; (mov r0, r0)
4002021c:	e1a00000 	nop			; (mov r0, r0)
40020220:	e1a00000 	nop			; (mov r0, r0)
40020224:	e3550000 	cmp	r5, #0
40020228:	0a000001 	beq	40020234 <CyU3PUsbHandleClearFeature+0x100>
4002022c:	ebfff0af 	bl	4001c4f0 <CyU3PUsbAckSetup>
40020230:	ea000003 	b	40020244 <CyU3PUsbHandleClearFeature+0x110>
40020234:	e3a02000 	mov	r2, #0
40020238:	e3a01001 	mov	r1, #1
4002023c:	e1a00002 	mov	r0, r2
40020240:	ebfff66e 	bl	4001dc00 <CyU3PUsbStall>
40020244:	e8bd8070 	pop	{r4, r5, r6, pc}
40020248:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

4002024c <CyU3PUsbHandleEvents>:
4002024c:	e92d4070 	push	{r4, r5, r6, lr}
40020250:	e1a04000 	mov	r4, r0
40020254:	e3140040 	tst	r4, #64	; 0x40
40020258:	0a000000 	beq	40020260 <CyU3PUsbHandleEvents+0x14>
4002025c:	ebfff8cc 	bl	4001e594 <CyU3PUibDevCtrlEvtHandler>
40020260:	e3140020 	tst	r4, #32
40020264:	0a000000 	beq	4002026c <CyU3PUsbHandleEvents+0x20>
40020268:	ebfff942 	bl	4001e778 <CyU3PUibEPEvtHandler>
4002026c:	e3140080 	tst	r4, #128	; 0x80
40020270:	0a000000 	beq	40020278 <CyU3PUsbHandleEvents+0x2c>
40020274:	ebfffa15 	bl	4001ead0 <CyU3PUibLnkIntrEvtHandler>
40020278:	e3140c01 	tst	r4, #256	; 0x100
4002027c:	0a000000 	beq	40020284 <CyU3PUsbHandleEvents+0x38>
40020280:	ebfffb32 	bl	4001ef50 <CyU3PUibProtIntrEvtHandler>
40020284:	e3140c02 	tst	r4, #512	; 0x200
40020288:	0a000000 	beq	40020290 <CyU3PUsbHandleEvents+0x44>
4002028c:	ebfffa37 	bl	4001eb70 <CyU3PUibProtEpIntrEvtHandler>
40020290:	e3140b01 	tst	r4, #1024	; 0x400
40020294:	0a000006 	beq	400202b4 <CyU3PUsbHandleEvents+0x68>
40020298:	e59f0378 	ldr	r0, [pc, #888]	; 40020618 <CyU3PUsbHandleEvents+0x3cc>
4002029c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400202a0:	e3500b02 	cmp	r0, #2048	; 0x800
400202a4:	1a000001 	bne	400202b0 <CyU3PUsbHandleEvents+0x64>
400202a8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400202ac:	ebffa1a9 	bl	40008958 <_tx_thread_sleep>
400202b0:	ebfffd4a 	bl	4001f7e0 <CyU3PUibVbusChangeHandler>
400202b4:	e3140b02 	tst	r4, #2048	; 0x800
400202b8:	0a000000 	beq	400202c0 <CyU3PUsbHandleEvents+0x74>
400202bc:	eb0003ae 	bl	4002117c <CyU3PUsbSendCompliancePatterns>
400202c0:	e3140a01 	tst	r4, #4096	; 0x1000
400202c4:	0a00000c 	beq	400202fc <CyU3PUsbHandleEvents+0xb0>
400202c8:	e59f034c 	ldr	r0, [pc, #844]	; 4002061c <CyU3PUsbHandleEvents+0x3d0>
400202cc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400202d0:	e3100902 	tst	r0, #32768	; 0x8000
400202d4:	0a000008 	beq	400202fc <CyU3PUsbHandleEvents+0xb0>
400202d8:	e3a00001 	mov	r0, #1
400202dc:	e59f133c 	ldr	r1, [pc, #828]	; 40020620 <CyU3PUsbHandleEvents+0x3d4>
400202e0:	e5810000 	str	r0, [r1]
400202e4:	e59f1338 	ldr	r1, [pc, #824]	; 40020624 <CyU3PUsbHandleEvents+0x3d8>
400202e8:	e5810000 	str	r0, [r1]
400202ec:	ebfffdb3 	bl	4001f9c0 <CyU3PUsbCheckUsb3Disconnect>
400202f0:	e3a00000 	mov	r0, #0
400202f4:	e59f1328 	ldr	r1, [pc, #808]	; 40020624 <CyU3PUsbHandleEvents+0x3d8>
400202f8:	e5810000 	str	r0, [r1]
400202fc:	e3140301 	tst	r4, #67108864	; 0x4000000
40020300:	0a000013 	beq	40020354 <CyU3PUsbHandleEvents+0x108>
40020304:	e59f031c 	ldr	r0, [pc, #796]	; 40020628 <CyU3PUsbHandleEvents+0x3dc>
40020308:	e5900000 	ldr	r0, [r0]
4002030c:	e3500000 	cmp	r0, #0
40020310:	0a000008 	beq	40020338 <CyU3PUsbHandleEvents+0xec>
40020314:	e59f0300 	ldr	r0, [pc, #768]	; 4002061c <CyU3PUsbHandleEvents+0x3d0>
40020318:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
4002031c:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
40020320:	e3a02080 	mov	r2, #128	; 0x80
40020324:	e1821920 	orr	r1, r2, r0, lsr #18
40020328:	e3a00012 	mov	r0, #18
4002032c:	e59f22f4 	ldr	r2, [pc, #756]	; 40020628 <CyU3PUsbHandleEvents+0x3dc>
40020330:	e5922000 	ldr	r2, [r2]
40020334:	e12fff32 	blx	r2
40020338:	e3a00b02 	mov	r0, #2048	; 0x800
4002033c:	e59f12e8 	ldr	r1, [pc, #744]	; 4002062c <CyU3PUsbHandleEvents+0x3e0>
40020340:	e5810000 	str	r0, [r1]
40020344:	e1c10000 	bic	r0, r1, r0
40020348:	e5900004 	ldr	r0, [r0, #4]
4002034c:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020350:	e5810004 	str	r0, [r1, #4]
40020354:	e3140901 	tst	r4, #16384	; 0x4000
40020358:	0a000008 	beq	40020380 <CyU3PUsbHandleEvents+0x134>
4002035c:	e59f02c4 	ldr	r0, [pc, #708]	; 40020628 <CyU3PUsbHandleEvents+0x3dc>
40020360:	e5900000 	ldr	r0, [r0]
40020364:	e3500000 	cmp	r0, #0
40020368:	0a000004 	beq	40020380 <CyU3PUsbHandleEvents+0x134>
4002036c:	e3a01000 	mov	r1, #0
40020370:	e3a00003 	mov	r0, #3
40020374:	e59f22ac 	ldr	r2, [pc, #684]	; 40020628 <CyU3PUsbHandleEvents+0x3dc>
40020378:	e5922000 	ldr	r2, [r2]
4002037c:	e12fff32 	blx	r2
40020380:	e3140a02 	tst	r4, #8192	; 0x2000
40020384:	0a000008 	beq	400203ac <CyU3PUsbHandleEvents+0x160>
40020388:	e59f0298 	ldr	r0, [pc, #664]	; 40020628 <CyU3PUsbHandleEvents+0x3dc>
4002038c:	e5900000 	ldr	r0, [r0]
40020390:	e3500000 	cmp	r0, #0
40020394:	0a000004 	beq	400203ac <CyU3PUsbHandleEvents+0x160>
40020398:	e3a01000 	mov	r1, #0
4002039c:	e3a00002 	mov	r0, #2
400203a0:	e59f2280 	ldr	r2, [pc, #640]	; 40020628 <CyU3PUsbHandleEvents+0x3dc>
400203a4:	e5922000 	ldr	r2, [r2]
400203a8:	e12fff32 	blx	r2
400203ac:	e3140902 	tst	r4, #32768	; 0x8000
400203b0:	0a000022 	beq	40020440 <CyU3PUsbHandleEvents+0x1f4>
400203b4:	e59f0274 	ldr	r0, [pc, #628]	; 40020630 <CyU3PUsbHandleEvents+0x3e4>
400203b8:	e5900000 	ldr	r0, [r0]
400203bc:	e3500000 	cmp	r0, #0
400203c0:	0a00001e 	beq	40020440 <CyU3PUsbHandleEvents+0x1f4>
400203c4:	eb000690 	bl	40021e0c <CyU3PVicDisableAllInterrupts>
400203c8:	e1a06000 	mov	r6, r0
400203cc:	e3a00001 	mov	r0, #1
400203d0:	ebffcc13 	bl	40013424 <CyU3PBusyWait>
400203d4:	e59f0258 	ldr	r0, [pc, #600]	; 40020634 <CyU3PUsbHandleEvents+0x3e8>
400203d8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400203dc:	e3c00803 	bic	r0, r0, #196608	; 0x30000
400203e0:	e59f124c 	ldr	r1, [pc, #588]	; 40020634 <CyU3PUsbHandleEvents+0x3e8>
400203e4:	e5810400 	str	r0, [r1, #1024]	; 0x400
400203e8:	e1a00006 	mov	r0, r6
400203ec:	eb000694 	bl	40021e44 <CyU3PVicEnableInterrupts>
400203f0:	e3a00001 	mov	r0, #1
400203f4:	ebffa157 	bl	40008958 <_tx_thread_sleep>
400203f8:	e3a00000 	mov	r0, #0
400203fc:	e59f122c 	ldr	r1, [pc, #556]	; 40020630 <CyU3PUsbHandleEvents+0x3e4>
40020400:	e5810000 	str	r0, [r1]
40020404:	e59f0228 	ldr	r0, [pc, #552]	; 40020634 <CyU3PUsbHandleEvents+0x3e8>
40020408:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002040c:	e3100c02 	tst	r0, #512	; 0x200
40020410:	1a00000a 	bne	40020440 <CyU3PUsbHandleEvents+0x1f4>
40020414:	e59f01fc 	ldr	r0, [pc, #508]	; 40020618 <CyU3PUsbHandleEvents+0x3cc>
40020418:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4002041c:	e3500000 	cmp	r0, #0
40020420:	1a000006 	bne	40020440 <CyU3PUsbHandleEvents+0x1f4>
40020424:	e59f01ec 	ldr	r0, [pc, #492]	; 40020618 <CyU3PUsbHandleEvents+0x3cc>
40020428:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4002042c:	e3500000 	cmp	r0, #0
40020430:	1a000002 	bne	40020440 <CyU3PUsbHandleEvents+0x1f4>
40020434:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020438:	e59f11f4 	ldr	r1, [pc, #500]	; 40020634 <CyU3PUsbHandleEvents+0x3e8>
4002043c:	e5810050 	str	r0, [r1, #80]	; 0x50
40020440:	e3140401 	tst	r4, #16777216	; 0x1000000
40020444:	0a000020 	beq	400204cc <CyU3PUsbHandleEvents+0x280>
40020448:	e59f01e4 	ldr	r0, [pc, #484]	; 40020634 <CyU3PUsbHandleEvents+0x3e8>
4002044c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020450:	e200503f 	and	r5, r0, #63	; 0x3f
40020454:	e3550011 	cmp	r5, #17
40020458:	0a000001 	beq	40020464 <CyU3PUsbHandleEvents+0x218>
4002045c:	e3550012 	cmp	r5, #18
40020460:	1a000018 	bne	400204c8 <CyU3PUsbHandleEvents+0x27c>
40020464:	e59f01cc 	ldr	r0, [pc, #460]	; 40020638 <CyU3PUsbHandleEvents+0x3ec>
40020468:	e5900000 	ldr	r0, [r0]
4002046c:	e3500000 	cmp	r0, #0
40020470:	0a000014 	beq	400204c8 <CyU3PUsbHandleEvents+0x27c>
40020474:	e3a00005 	mov	r0, #5
40020478:	ebffcbe9 	bl	40013424 <CyU3PBusyWait>
4002047c:	e59f01b0 	ldr	r0, [pc, #432]	; 40020634 <CyU3PUsbHandleEvents+0x3e8>
40020480:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020484:	e200503f 	and	r5, r0, #63	; 0x3f
40020488:	e3550011 	cmp	r5, #17
4002048c:	0a000001 	beq	40020498 <CyU3PUsbHandleEvents+0x24c>
40020490:	e3550012 	cmp	r5, #18
40020494:	1a000001 	bne	400204a0 <CyU3PUsbHandleEvents+0x254>
40020498:	e3a00000 	mov	r0, #0
4002049c:	ebfff582 	bl	4001daac <CyU3PUsbSetLinkPowerState>
400204a0:	e3a00001 	mov	r0, #1
400204a4:	ebffa12b 	bl	40008958 <_tx_thread_sleep>
400204a8:	e59f0188 	ldr	r0, [pc, #392]	; 40020638 <CyU3PUsbHandleEvents+0x3ec>
400204ac:	e5900000 	ldr	r0, [r0]
400204b0:	e3500000 	cmp	r0, #0
400204b4:	0a000003 	beq	400204c8 <CyU3PUsbHandleEvents+0x27c>
400204b8:	e3a02000 	mov	r2, #0
400204bc:	e3a01401 	mov	r1, #16777216	; 0x1000000
400204c0:	e59f0174 	ldr	r0, [pc, #372]	; 4002063c <CyU3PUsbHandleEvents+0x3f0>
400204c4:	ebffa61b 	bl	40009d38 <_txe_event_flags_set>
400204c8:	e1a00000 	nop			; (mov r0, r0)
400204cc:	e3140402 	tst	r4, #33554432	; 0x2000000
400204d0:	0a000019 	beq	4002053c <CyU3PUsbHandleEvents+0x2f0>
400204d4:	e3a00052 	mov	r0, #82	; 0x52
400204d8:	ebfffd1d 	bl	4001f954 <CyU3PUsbAddToEventLog>
400204dc:	e59f1134 	ldr	r1, [pc, #308]	; 40020618 <CyU3PUsbHandleEvents+0x3cc>
400204e0:	e5d11009 	ldrb	r1, [r1, #9]
400204e4:	e3510003 	cmp	r1, #3
400204e8:	1a000001 	bne	400204f4 <CyU3PUsbHandleEvents+0x2a8>
400204ec:	e3a01001 	mov	r1, #1
400204f0:	ea000000 	b	400204f8 <CyU3PUsbHandleEvents+0x2ac>
400204f4:	e3a01000 	mov	r1, #0
400204f8:	e1a00001 	mov	r0, r1
400204fc:	ebfff21a 	bl	4001cd6c <CyU3PUsbPhyDisable>
40020500:	e3a00001 	mov	r0, #1
40020504:	ebffa113 	bl	40008958 <_tx_thread_sleep>
40020508:	e59f0108 	ldr	r0, [pc, #264]	; 40020618 <CyU3PUsbHandleEvents+0x3cc>
4002050c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020510:	e3500000 	cmp	r0, #0
40020514:	0a000005 	beq	40020530 <CyU3PUsbHandleEvents+0x2e4>
40020518:	e59f0120 	ldr	r0, [pc, #288]	; 40020640 <CyU3PUsbHandleEvents+0x3f4>
4002051c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020520:	e59f10f0 	ldr	r1, [pc, #240]	; 40020618 <CyU3PUsbHandleEvents+0x3cc>
40020524:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020528:	e1100001 	tst	r0, r1
4002052c:	0a000002 	beq	4002053c <CyU3PUsbHandleEvents+0x2f0>
40020530:	e59f10e0 	ldr	r1, [pc, #224]	; 40020618 <CyU3PUsbHandleEvents+0x3cc>
40020534:	e5910024 	ldr	r0, [r1, #36]	; 0x24
40020538:	ebfff281 	bl	4001cf44 <CyU3PUsbPhyEnable>
4002053c:	e3140801 	tst	r4, #65536	; 0x10000
40020540:	0a000006 	beq	40020560 <CyU3PUsbHandleEvents+0x314>
40020544:	e59f00f8 	ldr	r0, [pc, #248]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
40020548:	e5900000 	ldr	r0, [r0]
4002054c:	e3500000 	cmp	r0, #0
40020550:	0a000002 	beq	40020560 <CyU3PUsbHandleEvents+0x314>
40020554:	e59f10e8 	ldr	r1, [pc, #232]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
40020558:	e5910000 	ldr	r0, [r1]
4002055c:	e12fff30 	blx	r0
40020560:	e3140802 	tst	r4, #131072	; 0x20000
40020564:	0a000006 	beq	40020584 <CyU3PUsbHandleEvents+0x338>
40020568:	e59f00d4 	ldr	r0, [pc, #212]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
4002056c:	e5900004 	ldr	r0, [r0, #4]
40020570:	e3500000 	cmp	r0, #0
40020574:	0a000002 	beq	40020584 <CyU3PUsbHandleEvents+0x338>
40020578:	e59f10c4 	ldr	r1, [pc, #196]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
4002057c:	e5910004 	ldr	r0, [r1, #4]
40020580:	e12fff30 	blx	r0
40020584:	e3140701 	tst	r4, #262144	; 0x40000
40020588:	0a000006 	beq	400205a8 <CyU3PUsbHandleEvents+0x35c>
4002058c:	e59f00b0 	ldr	r0, [pc, #176]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
40020590:	e5900008 	ldr	r0, [r0, #8]
40020594:	e3500000 	cmp	r0, #0
40020598:	0a000002 	beq	400205a8 <CyU3PUsbHandleEvents+0x35c>
4002059c:	e59f10a0 	ldr	r1, [pc, #160]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
400205a0:	e5910008 	ldr	r0, [r1, #8]
400205a4:	e12fff30 	blx	r0
400205a8:	e3140702 	tst	r4, #524288	; 0x80000
400205ac:	0a000006 	beq	400205cc <CyU3PUsbHandleEvents+0x380>
400205b0:	e59f008c 	ldr	r0, [pc, #140]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
400205b4:	e590000c 	ldr	r0, [r0, #12]
400205b8:	e3500000 	cmp	r0, #0
400205bc:	0a000002 	beq	400205cc <CyU3PUsbHandleEvents+0x380>
400205c0:	e59f107c 	ldr	r1, [pc, #124]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
400205c4:	e591000c 	ldr	r0, [r1, #12]
400205c8:	e12fff30 	blx	r0
400205cc:	e3140601 	tst	r4, #1048576	; 0x100000
400205d0:	0a000006 	beq	400205f0 <CyU3PUsbHandleEvents+0x3a4>
400205d4:	e59f0068 	ldr	r0, [pc, #104]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
400205d8:	e5900010 	ldr	r0, [r0, #16]
400205dc:	e3500000 	cmp	r0, #0
400205e0:	0a000002 	beq	400205f0 <CyU3PUsbHandleEvents+0x3a4>
400205e4:	e59f1058 	ldr	r1, [pc, #88]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
400205e8:	e5910010 	ldr	r0, [r1, #16]
400205ec:	e12fff30 	blx	r0
400205f0:	e3140602 	tst	r4, #2097152	; 0x200000
400205f4:	0a000006 	beq	40020614 <CyU3PUsbHandleEvents+0x3c8>
400205f8:	e59f0044 	ldr	r0, [pc, #68]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
400205fc:	e5900014 	ldr	r0, [r0, #20]
40020600:	e3500000 	cmp	r0, #0
40020604:	0a000002 	beq	40020614 <CyU3PUsbHandleEvents+0x3c8>
40020608:	e59f1034 	ldr	r1, [pc, #52]	; 40020644 <CyU3PUsbHandleEvents+0x3f8>
4002060c:	e5910014 	ldr	r0, [r1, #20]
40020610:	e12fff30 	blx	r0
40020614:	e8bd8070 	pop	{r4, r5, r6, pc}
40020618:	40031d40 	.word	0x40031d40
4002061c:	e0031000 	.word	0xe0031000
40020620:	40030d68 	.word	0x40030d68
40020624:	40030d6c 	.word	0x40030d6c
40020628:	40030da0 	.word	0x40030da0
4002062c:	e0030000 	.word	0xe0030000
40020630:	40030d70 	.word	0x40030d70
40020634:	e0033000 	.word	0xe0033000
40020638:	40030db8 	.word	0x40030db8
4002063c:	40031eb8 	.word	0x40031eb8
40020640:	e0051000 	.word	0xe0051000
40020644:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020648 <CyU3PUsbHandleGetStatus>:
40020648:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4002064c:	e1a04000 	mov	r4, r0
40020650:	e1a05001 	mov	r5, r1
40020654:	e3a07000 	mov	r7, #0
40020658:	e3a00000 	mov	r0, #0
4002065c:	e58d0000 	str	r0, [sp]
40020660:	e3540000 	cmp	r4, #0
40020664:	0a000004 	beq	4002067c <CyU3PUsbHandleGetStatus+0x34>
40020668:	e3540001 	cmp	r4, #1
4002066c:	0a00001e 	beq	400206ec <CyU3PUsbHandleGetStatus+0xa4>
40020670:	e3540002 	cmp	r4, #2
40020674:	1a00002b 	bne	40020728 <CyU3PUsbHandleGetStatus+0xe0>
40020678:	ea000023 	b	4002070c <CyU3PUsbHandleGetStatus+0xc4>
4002067c:	e1a00000 	nop			; (mov r0, r0)
40020680:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020684:	1a00000d 	bne	400206c0 <CyU3PUsbHandleGetStatus+0x78>
40020688:	ebffed1c 	bl	4001bb00 <CyU3POtgGetMode>
4002068c:	e3500002 	cmp	r0, #2
40020690:	1a000008 	bne	400206b8 <CyU3PUsbHandleGetStatus+0x70>
40020694:	e59f00a0 	ldr	r0, [pc, #160]	; 4002073c <CyU3PUsbHandleGetStatus+0xf4>
40020698:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4002069c:	e3500000 	cmp	r0, #0
400206a0:	0a000001 	beq	400206ac <CyU3PUsbHandleGetStatus+0x64>
400206a4:	e3a00001 	mov	r0, #1
400206a8:	ea000000 	b	400206b0 <CyU3PUsbHandleGetStatus+0x68>
400206ac:	e3a00000 	mov	r0, #0
400206b0:	e5cd0000 	strb	r0, [sp]
400206b4:	ea00000b 	b	400206e8 <CyU3PUsbHandleGetStatus+0xa0>
400206b8:	e3a00000 	mov	r0, #0
400206bc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400206c0:	e59f0074 	ldr	r0, [pc, #116]	; 4002073c <CyU3PUsbHandleGetStatus+0xf4>
400206c4:	e5d00006 	ldrb	r0, [r0, #6]
400206c8:	e5cd0000 	strb	r0, [sp]
400206cc:	e59f0068 	ldr	r0, [pc, #104]	; 4002073c <CyU3PUsbHandleGetStatus+0xf4>
400206d0:	e5d00009 	ldrb	r0, [r0, #9]
400206d4:	e3500003 	cmp	r0, #3
400206d8:	1a000002 	bne	400206e8 <CyU3PUsbHandleGetStatus+0xa0>
400206dc:	e5dd0000 	ldrb	r0, [sp]
400206e0:	e3c00002 	bic	r0, r0, #2
400206e4:	e5cd0000 	strb	r0, [sp]
400206e8:	e1a00000 	nop			; (mov r0, r0)
400206ec:	e1a0100d 	mov	r1, sp
400206f0:	e3a00002 	mov	r0, #2
400206f4:	ebfff316 	bl	4001d354 <CyU3PUsbSendEP0Data>
400206f8:	e1a06000 	mov	r6, r0
400206fc:	e3560000 	cmp	r6, #0
40020700:	1a000000 	bne	40020708 <CyU3PUsbHandleGetStatus+0xc0>
40020704:	e3a07001 	mov	r7, #1
40020708:	ea000008 	b	40020730 <CyU3PUsbHandleGetStatus+0xe8>
4002070c:	e1a00000 	nop			; (mov r0, r0)
40020710:	e20500ff 	and	r0, r5, #255	; 0xff
40020714:	ebfffe58 	bl	4002007c <CyU3PUsbGetEpStatus>
40020718:	e3500000 	cmp	r0, #0
4002071c:	1a000000 	bne	40020724 <CyU3PUsbHandleGetStatus+0xdc>
40020720:	e3a07001 	mov	r7, #1
40020724:	ea000001 	b	40020730 <CyU3PUsbHandleGetStatus+0xe8>
40020728:	e1a00000 	nop			; (mov r0, r0)
4002072c:	e1a00000 	nop			; (mov r0, r0)
40020730:	e1a00000 	nop			; (mov r0, r0)
40020734:	e1a00007 	mov	r0, r7
40020738:	eaffffdf 	b	400206bc <CyU3PUsbHandleGetStatus+0x74>
4002073c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

40020740 <CyU3PUsbHandleSetFeature>:
40020740:	e92d4070 	push	{r4, r5, r6, lr}
40020744:	e1a04000 	mov	r4, r0
40020748:	e3a05000 	mov	r5, #0
4002074c:	e3540001 	cmp	r4, #1
40020750:	0a000006 	beq	40020770 <CyU3PUsbHandleSetFeature+0x30>
40020754:	e3540002 	cmp	r4, #2
40020758:	0a00000b 	beq	4002078c <CyU3PUsbHandleSetFeature+0x4c>
4002075c:	e3540030 	cmp	r4, #48	; 0x30
40020760:	0a00000e 	beq	400207a0 <CyU3PUsbHandleSetFeature+0x60>
40020764:	e3540031 	cmp	r4, #49	; 0x31
40020768:	1a00002a 	bne	40020818 <CyU3PUsbHandleSetFeature+0xd8>
4002076c:	ea00001a 	b	400207dc <CyU3PUsbHandleSetFeature+0x9c>
40020770:	e1a00000 	nop			; (mov r0, r0)
40020774:	e59f00cc 	ldr	r0, [pc, #204]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
40020778:	e5d00006 	ldrb	r0, [r0, #6]
4002077c:	e3800002 	orr	r0, r0, #2
40020780:	e59f10c0 	ldr	r1, [pc, #192]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
40020784:	e5c10006 	strb	r0, [r1, #6]
40020788:	e1a00000 	nop			; (mov r0, r0)
4002078c:	ebfff0f4 	bl	4001cb64 <CyU3PUsbGetSpeed>
40020790:	e3500003 	cmp	r0, #3
40020794:	0a000000 	beq	4002079c <CyU3PUsbHandleSetFeature+0x5c>
40020798:	e3a05001 	mov	r5, #1
4002079c:	ea00001f 	b	40020820 <CyU3PUsbHandleSetFeature+0xe0>
400207a0:	e1a00000 	nop			; (mov r0, r0)
400207a4:	ebfff0ee 	bl	4001cb64 <CyU3PUsbGetSpeed>
400207a8:	e3500003 	cmp	r0, #3
400207ac:	1a000009 	bne	400207d8 <CyU3PUsbHandleSetFeature+0x98>
400207b0:	e59f0090 	ldr	r0, [pc, #144]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
400207b4:	e5d00008 	ldrb	r0, [r0, #8]
400207b8:	e3500006 	cmp	r0, #6
400207bc:	1a000005 	bne	400207d8 <CyU3PUsbHandleSetFeature+0x98>
400207c0:	e59f0080 	ldr	r0, [pc, #128]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
400207c4:	e5d00006 	ldrb	r0, [r0, #6]
400207c8:	e3800004 	orr	r0, r0, #4
400207cc:	e59f1074 	ldr	r1, [pc, #116]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
400207d0:	e5c10006 	strb	r0, [r1, #6]
400207d4:	e3a05001 	mov	r5, #1
400207d8:	ea000010 	b	40020820 <CyU3PUsbHandleSetFeature+0xe0>
400207dc:	e1a00000 	nop			; (mov r0, r0)
400207e0:	ebfff0df 	bl	4001cb64 <CyU3PUsbGetSpeed>
400207e4:	e3500003 	cmp	r0, #3
400207e8:	1a000009 	bne	40020814 <CyU3PUsbHandleSetFeature+0xd4>
400207ec:	e59f0054 	ldr	r0, [pc, #84]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
400207f0:	e5d00008 	ldrb	r0, [r0, #8]
400207f4:	e3500006 	cmp	r0, #6
400207f8:	1a000005 	bne	40020814 <CyU3PUsbHandleSetFeature+0xd4>
400207fc:	e59f0044 	ldr	r0, [pc, #68]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
40020800:	e5d00006 	ldrb	r0, [r0, #6]
40020804:	e3800008 	orr	r0, r0, #8
40020808:	e59f1038 	ldr	r1, [pc, #56]	; 40020848 <CyU3PUsbHandleSetFeature+0x108>
4002080c:	e5c10006 	strb	r0, [r1, #6]
40020810:	e3a05001 	mov	r5, #1
40020814:	ea000001 	b	40020820 <CyU3PUsbHandleSetFeature+0xe0>
40020818:	e1a00000 	nop			; (mov r0, r0)
4002081c:	e1a00000 	nop			; (mov r0, r0)
40020820:	e1a00000 	nop			; (mov r0, r0)
40020824:	e3550000 	cmp	r5, #0
40020828:	0a000001 	beq	40020834 <CyU3PUsbHandleSetFeature+0xf4>
4002082c:	ebffef2f 	bl	4001c4f0 <CyU3PUsbAckSetup>
40020830:	ea000003 	b	40020844 <CyU3PUsbHandleSetFeature+0x104>
40020834:	e3a02000 	mov	r2, #0
40020838:	e3a01001 	mov	r1, #1
4002083c:	e1a00002 	mov	r0, r2
40020840:	ebfff4ee 	bl	4001dc00 <CyU3PUsbStall>
40020844:	e8bd8070 	pop	{r4, r5, r6, pc}
40020848:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

4002084c <CyU3PUsbReEnableUsb3>:
4002084c:	e92d4010 	push	{r4, lr}
40020850:	e3a00051 	mov	r0, #81	; 0x51
40020854:	ebfffc3e 	bl	4001f954 <CyU3PUsbAddToEventLog>
40020858:	e59f018c 	ldr	r0, [pc, #396]	; 400209ec <CyU3PUsbReEnableUsb3+0x1a0>
4002085c:	e5900004 	ldr	r0, [r0, #4]
40020860:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020864:	e59f1180 	ldr	r1, [pc, #384]	; 400209ec <CyU3PUsbReEnableUsb3+0x1a0>
40020868:	e5810004 	str	r0, [r1, #4]
4002086c:	e3e00000 	mvn	r0, #0
40020870:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020874:	e5810004 	str	r0, [r1, #4]
40020878:	e59f0170 	ldr	r0, [pc, #368]	; 400209f0 <CyU3PUsbReEnableUsb3+0x1a4>
4002087c:	e5810008 	str	r0, [r1, #8]
40020880:	e3e00000 	mvn	r0, #0
40020884:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020888:	e59f0164 	ldr	r0, [pc, #356]	; 400209f4 <CyU3PUsbReEnableUsb3+0x1a8>
4002088c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020890:	e59f0160 	ldr	r0, [pc, #352]	; 400209f8 <CyU3PUsbReEnableUsb3+0x1ac>
40020894:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020898:	e3500000 	cmp	r0, #0
4002089c:	0a000003 	beq	400208b0 <CyU3PUsbReEnableUsb3+0x64>
400208a0:	e1a00001 	mov	r0, r1
400208a4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400208a8:	e3800c01 	orr	r0, r0, #256	; 0x100
400208ac:	e5810408 	str	r0, [r1, #1032]	; 0x408
400208b0:	e3a00000 	mov	r0, #0
400208b4:	e59f113c 	ldr	r1, [pc, #316]	; 400209f8 <CyU3PUsbReEnableUsb3+0x1ac>
400208b8:	e5810044 	str	r0, [r1, #68]	; 0x44
400208bc:	e59f0138 	ldr	r0, [pc, #312]	; 400209fc <CyU3PUsbReEnableUsb3+0x1b0>
400208c0:	e5900000 	ldr	r0, [r0]
400208c4:	e3500000 	cmp	r0, #0
400208c8:	0a000003 	beq	400208dc <CyU3PUsbReEnableUsb3+0x90>
400208cc:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
400208d0:	e59f1128 	ldr	r1, [pc, #296]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
400208d4:	e5810050 	str	r0, [r1, #80]	; 0x50
400208d8:	ea000002 	b	400208e8 <CyU3PUsbReEnableUsb3+0x9c>
400208dc:	e3a00303 	mov	r0, #201326592	; 0xc000000
400208e0:	e59f1118 	ldr	r1, [pc, #280]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
400208e4:	e5810050 	str	r0, [r1, #80]	; 0x50
400208e8:	eb000574 	bl	40021ec0 <CyFx3Usb3LnkSetup>
400208ec:	e59f0110 	ldr	r0, [pc, #272]	; 40020a04 <CyU3PUsbReEnableUsb3+0x1b8>
400208f0:	e59f1108 	ldr	r1, [pc, #264]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
400208f4:	e5810418 	str	r0, [r1, #1048]	; 0x418
400208f8:	e581041c 	str	r0, [r1, #1052]	; 0x41c
400208fc:	e1c10000 	bic	r0, r1, r0
40020900:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020904:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020908:	e5810158 	str	r0, [r1, #344]	; 0x158
4002090c:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020910:	e581001c 	str	r0, [r1, #28]
40020914:	e3a01000 	mov	r1, #0
40020918:	e3a00001 	mov	r0, #1
4002091c:	ebffee60 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
40020920:	e3a0000a 	mov	r0, #10
40020924:	ebffcabe 	bl	40013424 <CyU3PBusyWait>
40020928:	eb000537 	bl	40021e0c <CyU3PVicDisableAllInterrupts>
4002092c:	e1a04000 	mov	r4, r0
40020930:	e3a00000 	mov	r0, #0
40020934:	e59f10cc 	ldr	r1, [pc, #204]	; 40020a08 <CyU3PUsbReEnableUsb3+0x1bc>
40020938:	e5810000 	str	r0, [r1]
4002093c:	e3a00a01 	mov	r0, #4096	; 0x1000
40020940:	e59f10b8 	ldr	r1, [pc, #184]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
40020944:	e5810054 	str	r0, [r1, #84]	; 0x54
40020948:	e1c10080 	bic	r0, r1, r0, lsl #1
4002094c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020950:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020954:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020958:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4002095c:	e3a00064 	mov	r0, #100	; 0x64
40020960:	ebffcaaf 	bl	40013424 <CyU3PBusyWait>
40020964:	e59f0094 	ldr	r0, [pc, #148]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
40020968:	e5900000 	ldr	r0, [r0]
4002096c:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020970:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020974:	e59f1084 	ldr	r1, [pc, #132]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
40020978:	e5810000 	str	r0, [r1]
4002097c:	e59f0088 	ldr	r0, [pc, #136]	; 40020a0c <CyU3PUsbReEnableUsb3+0x1c0>
40020980:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020984:	e3a01080 	mov	r1, #128	; 0x80
40020988:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4002098c:	eb000591 	bl	40021fd8 <CyFx3UsbWritePhyReg>
40020990:	e3a01d06 	mov	r1, #384	; 0x180
40020994:	e59f0074 	ldr	r0, [pc, #116]	; 40020a10 <CyU3PUsbReEnableUsb3+0x1c4>
40020998:	eb00058e 	bl	40021fd8 <CyFx3UsbWritePhyReg>
4002099c:	e3a01080 	mov	r1, #128	; 0x80
400209a0:	e59f006c 	ldr	r0, [pc, #108]	; 40020a14 <CyU3PUsbReEnableUsb3+0x1c8>
400209a4:	eb00058b 	bl	40021fd8 <CyFx3UsbWritePhyReg>
400209a8:	e59f003c 	ldr	r0, [pc, #60]	; 400209ec <CyU3PUsbReEnableUsb3+0x1a0>
400209ac:	e5900004 	ldr	r0, [r0, #4]
400209b0:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400209b4:	e59f1030 	ldr	r1, [pc, #48]	; 400209ec <CyU3PUsbReEnableUsb3+0x1a0>
400209b8:	e5810004 	str	r0, [r1, #4]
400209bc:	e1a00004 	mov	r0, r4
400209c0:	eb00051f 	bl	40021e44 <CyU3PVicEnableInterrupts>
400209c4:	e59f0034 	ldr	r0, [pc, #52]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
400209c8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400209cc:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
400209d0:	e59f1028 	ldr	r1, [pc, #40]	; 40020a00 <CyU3PUsbReEnableUsb3+0x1b4>
400209d4:	e5810054 	str	r0, [r1, #84]	; 0x54
400209d8:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
400209dc:	e581001c 	str	r0, [r1, #28]
400209e0:	e3a00064 	mov	r0, #100	; 0x64
400209e4:	ebffca8e 	bl	40013424 <CyU3PBusyWait>
400209e8:	e8bd8010 	pop	{r4, pc}
400209ec:	e0030000 	.word	0xe0030000
400209f0:	00038081 	.word	0x00038081
400209f4:	00004a3d 	.word	0x00004a3d
400209f8:	40031d40 	.word	0x40031d40
400209fc:	40030d44 	.word	0x40030d44
40020a00:	e0033000 	.word	0xe0033000
40020a04:	00000908 	.word	0x00000908
40020a08:	40030d78 	.word	0x40030d78
40020a0c:	00310418 	.word	0x00310418
40020a10:	00001006 	.word	0x00001006
40020a14:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020a18 <CyU3PUsbRegisterEventCallback>:
40020a18:	e92d4010 	push	{r4, lr}
40020a1c:	e1a04000 	mov	r4, r0
40020a20:	e59f0038 	ldr	r0, [pc, #56]	; 40020a60 <CyU3PUsbRegisterEventCallback+0x48>
40020a24:	e5804000 	str	r4, [r0]
40020a28:	e59f0034 	ldr	r0, [pc, #52]	; 40020a64 <CyU3PUsbRegisterEventCallback+0x4c>
40020a2c:	e5d00008 	ldrb	r0, [r0, #8]
40020a30:	e3500000 	cmp	r0, #0
40020a34:	0a000008 	beq	40020a5c <CyU3PUsbRegisterEventCallback+0x44>
40020a38:	e59f0028 	ldr	r0, [pc, #40]	; 40020a68 <CyU3PUsbRegisterEventCallback+0x50>
40020a3c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020a40:	e59f101c 	ldr	r1, [pc, #28]	; 40020a64 <CyU3PUsbRegisterEventCallback+0x4c>
40020a44:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020a48:	e1100001 	tst	r0, r1
40020a4c:	0a000002 	beq	40020a5c <CyU3PUsbRegisterEventCallback+0x44>
40020a50:	e3a01000 	mov	r1, #0
40020a54:	e3a0000b 	mov	r0, #11
40020a58:	e12fff34 	blx	r4
40020a5c:	e8bd8010 	pop	{r4, pc}
40020a60:	40030da0 	.word	0x40030da0
40020a64:	40031d40 	.word	0x40031d40
40020a68:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020a6c <CyU3PUsbRegisterSetupCallback>:
40020a6c:	e59f2050 	ldr	r2, [pc, #80]	; 40020ac4 <CyU3PUsbRegisterSetupCallback+0x58>
40020a70:	e5820000 	str	r0, [r2]
40020a74:	e3510001 	cmp	r1, #1
40020a78:	1a000003 	bne	40020a8c <CyU3PUsbRegisterSetupCallback+0x20>
40020a7c:	e3a02000 	mov	r2, #0
40020a80:	e59f3040 	ldr	r3, [pc, #64]	; 40020ac8 <CyU3PUsbRegisterSetupCallback+0x5c>
40020a84:	e5c32007 	strb	r2, [r3, #7]
40020a88:	ea00000c 	b	40020ac0 <CyU3PUsbRegisterSetupCallback+0x54>
40020a8c:	e3a02001 	mov	r2, #1
40020a90:	e59f3030 	ldr	r3, [pc, #48]	; 40020ac8 <CyU3PUsbRegisterSetupCallback+0x5c>
40020a94:	e5c32007 	strb	r2, [r3, #7]
40020a98:	e2832000 	add	r2, r3, #0
40020a9c:	e5d22008 	ldrb	r2, [r2, #8]
40020aa0:	e3520000 	cmp	r2, #0
40020aa4:	da000005 	ble	40020ac0 <CyU3PUsbRegisterSetupCallback+0x54>
40020aa8:	e2832000 	add	r2, r3, #0
40020aac:	e5d22008 	ldrb	r2, [r2, #8]
40020ab0:	e3520003 	cmp	r2, #3
40020ab4:	aa000001 	bge	40020ac0 <CyU3PUsbRegisterSetupCallback+0x54>
40020ab8:	e3a02003 	mov	r2, #3
40020abc:	e5c32008 	strb	r2, [r3, #8]
40020ac0:	e12fff1e 	bx	lr
40020ac4:	40030da4 	.word	0x40030da4
40020ac8:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020acc <CyU3PUsbResetHandler>:
40020acc:	e92d4010 	push	{r4, lr}
40020ad0:	e3a00001 	mov	r0, #1
40020ad4:	e59f1124 	ldr	r1, [pc, #292]	; 40020c00 <CyU3PUsbResetHandler+0x134>
40020ad8:	e5c10009 	strb	r0, [r1, #9]
40020adc:	e59f0120 	ldr	r0, [pc, #288]	; 40020c04 <CyU3PUsbResetHandler+0x138>
40020ae0:	e5900018 	ldr	r0, [r0, #24]
40020ae4:	e59f1118 	ldr	r1, [pc, #280]	; 40020c04 <CyU3PUsbResetHandler+0x138>
40020ae8:	e581000c 	str	r0, [r1, #12]
40020aec:	e2810000 	add	r0, r1, #0
40020af0:	e5900014 	ldr	r0, [r0, #20]
40020af4:	e5810010 	str	r0, [r1, #16]
40020af8:	e59f0108 	ldr	r0, [pc, #264]	; 40020c08 <CyU3PUsbResetHandler+0x13c>
40020afc:	e5900000 	ldr	r0, [r0]
40020b00:	e3500000 	cmp	r0, #0
40020b04:	0a000010 	beq	40020b4c <CyU3PUsbResetHandler+0x80>
40020b08:	e59f00f0 	ldr	r0, [pc, #240]	; 40020c00 <CyU3PUsbResetHandler+0x134>
40020b0c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020b10:	e3500000 	cmp	r0, #0
40020b14:	1a000007 	bne	40020b38 <CyU3PUsbResetHandler+0x6c>
40020b18:	e3a01000 	mov	r1, #0
40020b1c:	e1a00001 	mov	r0, r1
40020b20:	e59f20e0 	ldr	r2, [pc, #224]	; 40020c08 <CyU3PUsbResetHandler+0x13c>
40020b24:	e5922000 	ldr	r2, [r2]
40020b28:	e12fff32 	blx	r2
40020b2c:	e3a00001 	mov	r0, #1
40020b30:	e59f10c8 	ldr	r1, [pc, #200]	; 40020c00 <CyU3PUsbResetHandler+0x134>
40020b34:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020b38:	e3a01000 	mov	r1, #0
40020b3c:	e3a00004 	mov	r0, #4
40020b40:	e59f20c0 	ldr	r2, [pc, #192]	; 40020c08 <CyU3PUsbResetHandler+0x13c>
40020b44:	e5922000 	ldr	r2, [r2]
40020b48:	e12fff32 	blx	r2
40020b4c:	e59f00b8 	ldr	r0, [pc, #184]	; 40020c0c <CyU3PUsbResetHandler+0x140>
40020b50:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020b54:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020b58:	e59f10ac 	ldr	r1, [pc, #172]	; 40020c0c <CyU3PUsbResetHandler+0x140>
40020b5c:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020b60:	e3a00001 	mov	r0, #1
40020b64:	ebffca2e 	bl	40013424 <CyU3PBusyWait>
40020b68:	e59f009c 	ldr	r0, [pc, #156]	; 40020c0c <CyU3PUsbResetHandler+0x140>
40020b6c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020b70:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020b74:	e59f1090 	ldr	r1, [pc, #144]	; 40020c0c <CyU3PUsbResetHandler+0x140>
40020b78:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020b7c:	e3a00001 	mov	r0, #1
40020b80:	ebffca27 	bl	40013424 <CyU3PBusyWait>
40020b84:	e3a00040 	mov	r0, #64	; 0x40
40020b88:	e59f107c 	ldr	r1, [pc, #124]	; 40020c0c <CyU3PUsbResetHandler+0x140>
40020b8c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020b90:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020b94:	e1c10000 	bic	r0, r1, r0
40020b98:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020b9c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020ba0:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020ba4:	e1a00001 	mov	r0, r1
40020ba8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020bac:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020bb0:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020bb4:	e3a00001 	mov	r0, #1
40020bb8:	ebfffc14 	bl	4001fc10 <CyU3PUsbEpPrepare>
40020bbc:	e59f003c 	ldr	r0, [pc, #60]	; 40020c00 <CyU3PUsbResetHandler+0x134>
40020bc0:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40020bc4:	e3500000 	cmp	r0, #0
40020bc8:	0a00000b 	beq	40020bfc <CyU3PUsbResetHandler+0x130>
40020bcc:	e59f002c 	ldr	r0, [pc, #44]	; 40020c00 <CyU3PUsbResetHandler+0x134>
40020bd0:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020bd4:	e3500003 	cmp	r0, #3
40020bd8:	3a000002 	bcc	40020be8 <CyU3PUsbResetHandler+0x11c>
40020bdc:	e3a00000 	mov	r0, #0
40020be0:	e59f1018 	ldr	r1, [pc, #24]	; 40020c00 <CyU3PUsbResetHandler+0x134>
40020be4:	e581004c 	str	r0, [r1, #76]	; 0x4c
40020be8:	e59f001c 	ldr	r0, [pc, #28]	; 40020c0c <CyU3PUsbResetHandler+0x140>
40020bec:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020bf0:	e3100901 	tst	r0, #16384	; 0x4000
40020bf4:	1a000000 	bne	40020bfc <CyU3PUsbResetHandler+0x130>
40020bf8:	ebffff13 	bl	4002084c <CyU3PUsbReEnableUsb3>
40020bfc:	e8bd8010 	pop	{r4, pc}
40020c00:	40031d40 	.word	0x40031d40
40020c04:	40031f98 	.word	0x40031f98
40020c08:	40030da0 	.word	0x40030da0
40020c0c:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40020c10 <CyU3PUsbResumeHandler>:
40020c10:	e92d4010 	push	{r4, lr}
40020c14:	e59f003c 	ldr	r0, [pc, #60]	; 40020c58 <CyU3PUsbResumeHandler+0x48>
40020c18:	e5d00008 	ldrb	r0, [r0, #8]
40020c1c:	e3500005 	cmp	r0, #5
40020c20:	ba00000b 	blt	40020c54 <CyU3PUsbResumeHandler+0x44>
40020c24:	e59f0030 	ldr	r0, [pc, #48]	; 40020c5c <CyU3PUsbResumeHandler+0x4c>
40020c28:	e5900000 	ldr	r0, [r0]
40020c2c:	e3500000 	cmp	r0, #0
40020c30:	0a000004 	beq	40020c48 <CyU3PUsbResumeHandler+0x38>
40020c34:	e3a01000 	mov	r1, #0
40020c38:	e3a00003 	mov	r0, #3
40020c3c:	e59f2018 	ldr	r2, [pc, #24]	; 40020c5c <CyU3PUsbResumeHandler+0x4c>
40020c40:	e5922000 	ldr	r2, [r2]
40020c44:	e12fff32 	blx	r2
40020c48:	e3a00006 	mov	r0, #6
40020c4c:	e59f1004 	ldr	r1, [pc, #4]	; 40020c58 <CyU3PUsbResumeHandler+0x48>
40020c50:	e5c10008 	strb	r0, [r1, #8]
40020c54:	e8bd8010 	pop	{r4, pc}
40020c58:	40031d40 	.word	0x40031d40
40020c5c:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbSSConnecthandler:

40020c60 <CyU3PUsbSSConnecthandler>:
40020c60:	e92d4010 	push	{r4, lr}
40020c64:	e59f01d4 	ldr	r0, [pc, #468]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020c68:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c6c:	e3100a02 	tst	r0, #8192	; 0x2000
40020c70:	0a00002b 	beq	40020d24 <CyU3PUsbSSConnecthandler+0xc4>
40020c74:	e59f01c8 	ldr	r0, [pc, #456]	; 40020e44 <CyU3PUsbSSConnecthandler+0x1e4>
40020c78:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020c7c:	e200403f 	and	r4, r0, #63	; 0x3f
40020c80:	ea000003 	b	40020c94 <CyU3PUsbSSConnecthandler+0x34>
40020c84:	ebffa6e4 	bl	4000a81c <_txe_thread_relinquish>
40020c88:	e59f01b4 	ldr	r0, [pc, #436]	; 40020e44 <CyU3PUsbSSConnecthandler+0x1e4>
40020c8c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020c90:	e200403f 	and	r4, r0, #63	; 0x3f
40020c94:	e59f01a4 	ldr	r0, [pc, #420]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020c98:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c9c:	e3100901 	tst	r0, #16384	; 0x4000
40020ca0:	0a000001 	beq	40020cac <CyU3PUsbSSConnecthandler+0x4c>
40020ca4:	e3540008 	cmp	r4, #8
40020ca8:	0afffff5 	beq	40020c84 <CyU3PUsbSSConnecthandler+0x24>
40020cac:	e3540017 	cmp	r4, #23
40020cb0:	1a00000a 	bne	40020ce0 <CyU3PUsbSSConnecthandler+0x80>
40020cb4:	e59f018c 	ldr	r0, [pc, #396]	; 40020e48 <CyU3PUsbSSConnecthandler+0x1e8>
40020cb8:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40020cbc:	e3500000 	cmp	r0, #0
40020cc0:	1a000002 	bne	40020cd0 <CyU3PUsbSSConnecthandler+0x70>
40020cc4:	e3a00010 	mov	r0, #16
40020cc8:	ebfffb21 	bl	4001f954 <CyU3PUsbAddToEventLog>
40020ccc:	eb000060 	bl	40020e54 <CyU3PUsbSSDisConnecthandler>
40020cd0:	e3a00003 	mov	r0, #3
40020cd4:	e59f116c 	ldr	r1, [pc, #364]	; 40020e48 <CyU3PUsbSSConnecthandler+0x1e8>
40020cd8:	e5c10009 	strb	r0, [r1, #9]
40020cdc:	e8bd8010 	pop	{r4, pc}
40020ce0:	e59f0158 	ldr	r0, [pc, #344]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020ce4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020ce8:	e3100901 	tst	r0, #16384	; 0x4000
40020cec:	1a000000 	bne	40020cf4 <CyU3PUsbSSConnecthandler+0x94>
40020cf0:	eafffff9 	b	40020cdc <CyU3PUsbSSConnecthandler+0x7c>
40020cf4:	e59f0144 	ldr	r0, [pc, #324]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020cf8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020cfc:	e3800008 	orr	r0, r0, #8
40020d00:	e59f1138 	ldr	r1, [pc, #312]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020d04:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d08:	e1a00001 	mov	r0, r1
40020d0c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d10:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40020d14:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020d18:	e1a00001 	mov	r0, r1
40020d1c:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40020d20:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020d24:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40020d28:	e59f111c 	ldr	r1, [pc, #284]	; 40020e4c <CyU3PUsbSSConnecthandler+0x1ec>
40020d2c:	e5810008 	str	r0, [r1, #8]
40020d30:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020d34:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40020d38:	e581001c 	str	r0, [r1, #28]
40020d3c:	e3a00003 	mov	r0, #3
40020d40:	e59f1100 	ldr	r1, [pc, #256]	; 40020e48 <CyU3PUsbSSConnecthandler+0x1e8>
40020d44:	e5c10009 	strb	r0, [r1, #9]
40020d48:	e59f00f0 	ldr	r0, [pc, #240]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020d4c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d50:	e3800902 	orr	r0, r0, #32768	; 0x8000
40020d54:	e59f10e4 	ldr	r1, [pc, #228]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020d58:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020d5c:	e1a00001 	mov	r0, r1
40020d60:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020d64:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020d68:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020d6c:	e3a00001 	mov	r0, #1
40020d70:	ebffc9ab 	bl	40013424 <CyU3PBusyWait>
40020d74:	e59f00c4 	ldr	r0, [pc, #196]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020d78:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020d7c:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020d80:	e59f10b8 	ldr	r1, [pc, #184]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020d84:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020d88:	e3a00001 	mov	r0, #1
40020d8c:	ebffc9a4 	bl	40013424 <CyU3PBusyWait>
40020d90:	e3a00000 	mov	r0, #0
40020d94:	ebffeecd 	bl	4001c8d0 <CyU3PUsbFlushEp>
40020d98:	e3a00080 	mov	r0, #128	; 0x80
40020d9c:	ebffeecb 	bl	4001c8d0 <CyU3PUsbFlushEp>
40020da0:	e59f009c 	ldr	r0, [pc, #156]	; 40020e44 <CyU3PUsbSSConnecthandler+0x1e4>
40020da4:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40020da8:	e3800001 	orr	r0, r0, #1
40020dac:	e59f1090 	ldr	r1, [pc, #144]	; 40020e44 <CyU3PUsbSSConnecthandler+0x1e4>
40020db0:	e5810500 	str	r0, [r1, #1280]	; 0x500
40020db4:	e3a00c02 	mov	r0, #512	; 0x200
40020db8:	e1c11200 	bic	r1, r1, r0, lsl #4
40020dbc:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020dc0:	e1810200 	orr	r0, r1, r0, lsl #4
40020dc4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40020dc8:	e3800001 	orr	r0, r0, #1
40020dcc:	e2811a02 	add	r1, r1, #8192	; 0x2000
40020dd0:	e5810600 	str	r0, [r1, #1536]	; 0x600
40020dd4:	e3a00c02 	mov	r0, #512	; 0x200
40020dd8:	e1c11200 	bic	r1, r1, r0, lsl #4
40020ddc:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020de0:	e3a00000 	mov	r0, #0
40020de4:	ebfff121 	bl	4001d270 <CyU3PUsbResetEp>
40020de8:	e3a00000 	mov	r0, #0
40020dec:	ebffeeb7 	bl	4001c8d0 <CyU3PUsbFlushEp>
40020df0:	e3a00080 	mov	r0, #128	; 0x80
40020df4:	ebfff11d 	bl	4001d270 <CyU3PUsbResetEp>
40020df8:	e3a00080 	mov	r0, #128	; 0x80
40020dfc:	ebffeeb3 	bl	4001c8d0 <CyU3PUsbFlushEp>
40020e00:	e3a00c02 	mov	r0, #512	; 0x200
40020e04:	e59f1034 	ldr	r1, [pc, #52]	; 40020e40 <CyU3PUsbSSConnecthandler+0x1e0>
40020e08:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020e0c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020e10:	e59f0038 	ldr	r0, [pc, #56]	; 40020e50 <CyU3PUsbSSConnecthandler+0x1f0>
40020e14:	e5900000 	ldr	r0, [r0]
40020e18:	e3500000 	cmp	r0, #0
40020e1c:	0a000004 	beq	40020e34 <CyU3PUsbSSConnecthandler+0x1d4>
40020e20:	e3a01001 	mov	r1, #1
40020e24:	e3a00000 	mov	r0, #0
40020e28:	e59f2020 	ldr	r2, [pc, #32]	; 40020e50 <CyU3PUsbSSConnecthandler+0x1f0>
40020e2c:	e5922000 	ldr	r2, [r2]
40020e30:	e12fff32 	blx	r2
40020e34:	e3a00003 	mov	r0, #3
40020e38:	ebfffb74 	bl	4001fc10 <CyU3PUsbEpPrepare>
40020e3c:	eaffffa6 	b	40020cdc <CyU3PUsbSSConnecthandler+0x7c>
40020e40:	e0031000 	.word	0xe0031000
40020e44:	e0033000 	.word	0xe0033000
40020e48:	40031d40 	.word	0x40031d40
40020e4c:	e0052000 	.word	0xe0052000
40020e50:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

40020e54 <CyU3PUsbSSDisConnecthandler>:
40020e54:	e92d4010 	push	{r4, lr}
40020e58:	e59f0164 	ldr	r0, [pc, #356]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x170>
40020e5c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020e60:	e3500000 	cmp	r0, #0
40020e64:	0a000005 	beq	40020e80 <CyU3PUsbSSDisConnecthandler+0x2c>
40020e68:	e59f0158 	ldr	r0, [pc, #344]	; 40020fc8 <CyU3PUsbSSDisConnecthandler+0x174>
40020e6c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020e70:	e59f114c 	ldr	r1, [pc, #332]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x170>
40020e74:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020e78:	e1100001 	tst	r0, r1
40020e7c:	0a00004e 	beq	40020fbc <CyU3PUsbSSDisConnecthandler+0x168>
40020e80:	e59f013c 	ldr	r0, [pc, #316]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x170>
40020e84:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020e88:	e2800001 	add	r0, r0, #1
40020e8c:	e59f1130 	ldr	r1, [pc, #304]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x170>
40020e90:	e5810058 	str	r0, [r1, #88]	; 0x58
40020e94:	e59f0130 	ldr	r0, [pc, #304]	; 40020fcc <CyU3PUsbSSDisConnecthandler+0x178>
40020e98:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020e9c:	e3100a02 	tst	r0, #8192	; 0x2000
40020ea0:	0a000020 	beq	40020f28 <CyU3PUsbSSDisConnecthandler+0xd4>
40020ea4:	e59f0120 	ldr	r0, [pc, #288]	; 40020fcc <CyU3PUsbSSDisConnecthandler+0x178>
40020ea8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020eac:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40020eb0:	e59f1114 	ldr	r1, [pc, #276]	; 40020fcc <CyU3PUsbSSDisConnecthandler+0x178>
40020eb4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020eb8:	e3a00002 	mov	r0, #2
40020ebc:	ebffc958 	bl	40013424 <CyU3PBusyWait>
40020ec0:	e59f0108 	ldr	r0, [pc, #264]	; 40020fd0 <CyU3PUsbSSDisConnecthandler+0x17c>
40020ec4:	e5900004 	ldr	r0, [r0, #4]
40020ec8:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020ecc:	e59f10fc 	ldr	r1, [pc, #252]	; 40020fd0 <CyU3PUsbSSDisConnecthandler+0x17c>
40020ed0:	e5810004 	str	r0, [r1, #4]
40020ed4:	e3a00001 	mov	r0, #1
40020ed8:	ebffc951 	bl	40013424 <CyU3PBusyWait>
40020edc:	e59f00f0 	ldr	r0, [pc, #240]	; 40020fd4 <CyU3PUsbSSDisConnecthandler+0x180>
40020ee0:	e590001c 	ldr	r0, [r0, #28]
40020ee4:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020ee8:	e59f10e4 	ldr	r1, [pc, #228]	; 40020fd4 <CyU3PUsbSSDisConnecthandler+0x180>
40020eec:	e581001c 	str	r0, [r1, #28]
40020ef0:	e59f00e0 	ldr	r0, [pc, #224]	; 40020fd8 <CyU3PUsbSSDisConnecthandler+0x184>
40020ef4:	e5900000 	ldr	r0, [r0]
40020ef8:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020efc:	e3a00001 	mov	r0, #1
40020f00:	ebffc947 	bl	40013424 <CyU3PBusyWait>
40020f04:	e59f00c4 	ldr	r0, [pc, #196]	; 40020fd0 <CyU3PUsbSSDisConnecthandler+0x17c>
40020f08:	e5900004 	ldr	r0, [r0, #4]
40020f0c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020f10:	e59f10b8 	ldr	r1, [pc, #184]	; 40020fd0 <CyU3PUsbSSDisConnecthandler+0x17c>
40020f14:	e5810004 	str	r0, [r1, #4]
40020f18:	e3a01000 	mov	r1, #0
40020f1c:	e3a00002 	mov	r0, #2
40020f20:	ebffecdf 	bl	4001c2a4 <CyU3PSetUsbCoreClock>
40020f24:	ea000025 	b	40020fc0 <CyU3PUsbSSDisConnecthandler+0x16c>
40020f28:	e3a00001 	mov	r0, #1
40020f2c:	e59f1090 	ldr	r1, [pc, #144]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x170>
40020f30:	e5c10009 	strb	r0, [r1, #9]
40020f34:	ebffef8c 	bl	4001cd6c <CyU3PUsbPhyDisable>
40020f38:	e59f0084 	ldr	r0, [pc, #132]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x170>
40020f3c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40020f40:	e3500000 	cmp	r0, #0
40020f44:	0a000019 	beq	40020fb0 <CyU3PUsbSSDisConnecthandler+0x15c>
40020f48:	e59f008c 	ldr	r0, [pc, #140]	; 40020fdc <CyU3PUsbSSDisConnecthandler+0x188>
40020f4c:	e5900000 	ldr	r0, [r0]
40020f50:	e3500000 	cmp	r0, #0
40020f54:	0a000005 	beq	40020f70 <CyU3PUsbSSDisConnecthandler+0x11c>
40020f58:	e3a00000 	mov	r0, #0
40020f5c:	e59f1078 	ldr	r1, [pc, #120]	; 40020fdc <CyU3PUsbSSDisConnecthandler+0x188>
40020f60:	e5810000 	str	r0, [r1]
40020f64:	e3a00001 	mov	r0, #1
40020f68:	ebffeff5 	bl	4001cf44 <CyU3PUsbPhyEnable>
40020f6c:	ea000013 	b	40020fc0 <CyU3PUsbSSDisConnecthandler+0x16c>
40020f70:	e3a00003 	mov	r0, #3
40020f74:	e59f1048 	ldr	r1, [pc, #72]	; 40020fc4 <CyU3PUsbSSDisConnecthandler+0x170>
40020f78:	e5c10008 	strb	r0, [r1, #8]
40020f7c:	e3a00000 	mov	r0, #0
40020f80:	e5c10009 	strb	r0, [r1, #9]
40020f84:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020f88:	e59f0050 	ldr	r0, [pc, #80]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x18c>
40020f8c:	e5900000 	ldr	r0, [r0]
40020f90:	e3500000 	cmp	r0, #0
40020f94:	0a000009 	beq	40020fc0 <CyU3PUsbSSDisConnecthandler+0x16c>
40020f98:	e3a01000 	mov	r1, #0
40020f9c:	e3a00014 	mov	r0, #20
40020fa0:	e59f2038 	ldr	r2, [pc, #56]	; 40020fe0 <CyU3PUsbSSDisConnecthandler+0x18c>
40020fa4:	e5922000 	ldr	r2, [r2]
40020fa8:	e12fff32 	blx	r2
40020fac:	ea000003 	b	40020fc0 <CyU3PUsbSSDisConnecthandler+0x16c>
40020fb0:	e3a00000 	mov	r0, #0
40020fb4:	ebffefe2 	bl	4001cf44 <CyU3PUsbPhyEnable>
40020fb8:	ea000000 	b	40020fc0 <CyU3PUsbSSDisConnecthandler+0x16c>
40020fbc:	ebfffa07 	bl	4001f7e0 <CyU3PUibVbusChangeHandler>
40020fc0:	e8bd8010 	pop	{r4, pc}
40020fc4:	40031d40 	.word	0x40031d40
40020fc8:	e0051000 	.word	0xe0051000
40020fcc:	e0031000 	.word	0xe0031000
40020fd0:	e0030000 	.word	0xe0030000
40020fd4:	e0033000 	.word	0xe0033000
40020fd8:	40030c5c 	.word	0x40030c5c
40020fdc:	40030d78 	.word	0x40030d78
40020fe0:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUsbSSReset:

40020fe4 <CyU3PUsbSSReset>:
40020fe4:	e92d4010 	push	{r4, lr}
40020fe8:	e3a04000 	mov	r4, #0
40020fec:	e59f0170 	ldr	r0, [pc, #368]	; 40021164 <CyU3PUsbSSReset+0x180>
40020ff0:	e5d00009 	ldrb	r0, [r0, #9]
40020ff4:	e3500003 	cmp	r0, #3
40020ff8:	0a000000 	beq	40021000 <CyU3PUsbSSReset+0x1c>
40020ffc:	e8bd8010 	pop	{r4, pc}
40021000:	e59f0160 	ldr	r0, [pc, #352]	; 40021168 <CyU3PUsbSSReset+0x184>
40021004:	e5900000 	ldr	r0, [r0]
40021008:	e3500000 	cmp	r0, #0
4002100c:	0a000004 	beq	40021024 <CyU3PUsbSSReset+0x40>
40021010:	e3a01001 	mov	r1, #1
40021014:	e3a00004 	mov	r0, #4
40021018:	e59f2148 	ldr	r2, [pc, #328]	; 40021168 <CyU3PUsbSSReset+0x184>
4002101c:	e5922000 	ldr	r2, [r2]
40021020:	e12fff32 	blx	r2
40021024:	e59f0140 	ldr	r0, [pc, #320]	; 4002116c <CyU3PUsbSSReset+0x188>
40021028:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
4002102c:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40021030:	e59f1134 	ldr	r1, [pc, #308]	; 4002116c <CyU3PUsbSSReset+0x188>
40021034:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021038:	e3a00001 	mov	r0, #1
4002103c:	ebffc8f8 	bl	40013424 <CyU3PBusyWait>
40021040:	e59f0124 	ldr	r0, [pc, #292]	; 4002116c <CyU3PUsbSSReset+0x188>
40021044:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021048:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
4002104c:	e59f1118 	ldr	r1, [pc, #280]	; 4002116c <CyU3PUsbSSReset+0x188>
40021050:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021054:	e3a00001 	mov	r0, #1
40021058:	ebffc8f1 	bl	40013424 <CyU3PBusyWait>
4002105c:	e3a00000 	mov	r0, #0
40021060:	ebffee1a 	bl	4001c8d0 <CyU3PUsbFlushEp>
40021064:	e3a00080 	mov	r0, #128	; 0x80
40021068:	ebffee18 	bl	4001c8d0 <CyU3PUsbFlushEp>
4002106c:	e59f00fc 	ldr	r0, [pc, #252]	; 40021170 <CyU3PUsbSSReset+0x18c>
40021070:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021074:	e3800001 	orr	r0, r0, #1
40021078:	e59f10f0 	ldr	r1, [pc, #240]	; 40021170 <CyU3PUsbSSReset+0x18c>
4002107c:	e5810500 	str	r0, [r1, #1280]	; 0x500
40021080:	e3a00c02 	mov	r0, #512	; 0x200
40021084:	e1c11200 	bic	r1, r1, r0, lsl #4
40021088:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002108c:	e1810200 	orr	r0, r1, r0, lsl #4
40021090:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021094:	e3800001 	orr	r0, r0, #1
40021098:	e2811a02 	add	r1, r1, #8192	; 0x2000
4002109c:	e5810600 	str	r0, [r1, #1536]	; 0x600
400210a0:	e3a00c02 	mov	r0, #512	; 0x200
400210a4:	e1c11200 	bic	r1, r1, r0, lsl #4
400210a8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210ac:	e3a00000 	mov	r0, #0
400210b0:	ebfff06e 	bl	4001d270 <CyU3PUsbResetEp>
400210b4:	e3a00000 	mov	r0, #0
400210b8:	ebffee04 	bl	4001c8d0 <CyU3PUsbFlushEp>
400210bc:	e3a00080 	mov	r0, #128	; 0x80
400210c0:	ebfff06a 	bl	4001d270 <CyU3PUsbResetEp>
400210c4:	e3a00080 	mov	r0, #128	; 0x80
400210c8:	ebffee00 	bl	4001c8d0 <CyU3PUsbFlushEp>
400210cc:	e3a00c02 	mov	r0, #512	; 0x200
400210d0:	e59f1094 	ldr	r1, [pc, #148]	; 4002116c <CyU3PUsbSSReset+0x188>
400210d4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210d8:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400210dc:	e3a04001 	mov	r4, #1
400210e0:	ea000019 	b	4002114c <CyU3PUsbSSReset+0x168>
400210e4:	e0840084 	add	r0, r4, r4, lsl #1
400210e8:	e59f1084 	ldr	r1, [pc, #132]	; 40021174 <CyU3PUsbSSReset+0x190>
400210ec:	e0810100 	add	r0, r1, r0, lsl #2
400210f0:	e5900004 	ldr	r0, [r0, #4]
400210f4:	e3500001 	cmp	r0, #1
400210f8:	1a000005 	bne	40021114 <CyU3PUsbSSReset+0x130>
400210fc:	e3840080 	orr	r0, r4, #128	; 0x80
40021100:	ebffedf2 	bl	4001c8d0 <CyU3PUsbFlushEp>
40021104:	e3840080 	orr	r0, r4, #128	; 0x80
40021108:	e3a02001 	mov	r2, #1
4002110c:	e3a01000 	mov	r1, #0
40021110:	ebfff2ba 	bl	4001dc00 <CyU3PUsbStall>
40021114:	e0840084 	add	r0, r4, r4, lsl #1
40021118:	e59f1058 	ldr	r1, [pc, #88]	; 40021178 <CyU3PUsbSSReset+0x194>
4002111c:	e0810100 	add	r0, r1, r0, lsl #2
40021120:	e5900004 	ldr	r0, [r0, #4]
40021124:	e3500001 	cmp	r0, #1
40021128:	1a000005 	bne	40021144 <CyU3PUsbSSReset+0x160>
4002112c:	e1a00004 	mov	r0, r4
40021130:	ebffede6 	bl	4001c8d0 <CyU3PUsbFlushEp>
40021134:	e3a02001 	mov	r2, #1
40021138:	e3a01000 	mov	r1, #0
4002113c:	e1a00004 	mov	r0, r4
40021140:	ebfff2ae 	bl	4001dc00 <CyU3PUsbStall>
40021144:	e2840001 	add	r0, r4, #1
40021148:	e20040ff 	and	r4, r0, #255	; 0xff
4002114c:	e3540010 	cmp	r4, #16
40021150:	baffffe3 	blt	400210e4 <CyU3PUsbSSReset+0x100>
40021154:	e3a00005 	mov	r0, #5
40021158:	e59f1004 	ldr	r1, [pc, #4]	; 40021164 <CyU3PUsbSSReset+0x180>
4002115c:	e5c10008 	strb	r0, [r1, #8]
40021160:	eaffffa5 	b	40020ffc <CyU3PUsbSSReset+0x18>
40021164:	40031d40 	.word	0x40031d40
40021168:	40030da0 	.word	0x40030da0
4002116c:	e0031000 	.word	0xe0031000
40021170:	e0033000 	.word	0xe0033000
40021174:	40031bb4 	.word	0x40031bb4
40021178:	40031c74 	.word	0x40031c74

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

4002117c <CyU3PUsbSendCompliancePatterns>:
4002117c:	e92d4070 	push	{r4, r5, r6, lr}
40021180:	e3a04001 	mov	r4, #1
40021184:	e59f01ec 	ldr	r0, [pc, #492]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021188:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002118c:	e200503f 	and	r5, r0, #63	; 0x3f
40021190:	e3550017 	cmp	r5, #23
40021194:	0a000000 	beq	4002119c <CyU3PUsbSendCompliancePatterns+0x20>
40021198:	e8bd8070 	pop	{r4, r5, r6, pc}
4002119c:	e3a00003 	mov	r0, #3
400211a0:	e59f11d4 	ldr	r1, [pc, #468]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
400211a4:	e5c10009 	strb	r0, [r1, #9]
400211a8:	e3a00001 	mov	r0, #1
400211ac:	e5810064 	str	r0, [r1, #100]	; 0x64
400211b0:	e3a00000 	mov	r0, #0
400211b4:	e5810060 	str	r0, [r1, #96]	; 0x60
400211b8:	e3a00d57 	mov	r0, #5568	; 0x15c0
400211bc:	e59f11b4 	ldr	r1, [pc, #436]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
400211c0:	e5810054 	str	r0, [r1, #84]	; 0x54
400211c4:	e59f01b4 	ldr	r0, [pc, #436]	; 40021380 <CyU3PUsbSendCompliancePatterns+0x204>
400211c8:	e5900000 	ldr	r0, [r0]
400211cc:	e3500000 	cmp	r0, #0
400211d0:	0a000004 	beq	400211e8 <CyU3PUsbSendCompliancePatterns+0x6c>
400211d4:	e3a01000 	mov	r1, #0
400211d8:	e3a00015 	mov	r0, #21
400211dc:	e59f219c 	ldr	r2, [pc, #412]	; 40021380 <CyU3PUsbSendCompliancePatterns+0x204>
400211e0:	e5922000 	ldr	r2, [r2]
400211e4:	e12fff32 	blx	r2
400211e8:	e1a00000 	nop			; (mov r0, r0)
400211ec:	e59f0184 	ldr	r0, [pc, #388]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
400211f0:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400211f4:	e3100002 	tst	r0, #2
400211f8:	0a000031 	beq	400212c4 <CyU3PUsbSendCompliancePatterns+0x148>
400211fc:	e59f0180 	ldr	r0, [pc, #384]	; 40021384 <CyU3PUsbSendCompliancePatterns+0x208>
40021200:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40021204:	e59f116c 	ldr	r1, [pc, #364]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021208:	e5810138 	str	r0, [r1, #312]	; 0x138
4002120c:	e3a00001 	mov	r0, #1
40021210:	ebff9dd0 	bl	40008958 <_tx_thread_sleep>
40021214:	e59f015c 	ldr	r0, [pc, #348]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021218:	e5900064 	ldr	r0, [r0, #100]	; 0x64
4002121c:	e3c00002 	bic	r0, r0, #2
40021220:	e59f1150 	ldr	r1, [pc, #336]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021224:	e5810064 	str	r0, [r1, #100]	; 0x64
40021228:	e3540004 	cmp	r4, #4
4002122c:	1a000020 	bne	400212b4 <CyU3PUsbSendCompliancePatterns+0x138>
40021230:	ea00000d 	b	4002126c <CyU3PUsbSendCompliancePatterns+0xf0>
40021234:	e59f013c 	ldr	r0, [pc, #316]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021238:	e590001c 	ldr	r0, [r0, #28]
4002123c:	e3800008 	orr	r0, r0, #8
40021240:	e59f1130 	ldr	r1, [pc, #304]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021244:	e581001c 	str	r0, [r1, #28]
40021248:	e3a0000a 	mov	r0, #10
4002124c:	ebffc874 	bl	40013424 <CyU3PBusyWait>
40021250:	e59f0120 	ldr	r0, [pc, #288]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021254:	e590001c 	ldr	r0, [r0, #28]
40021258:	e3c00008 	bic	r0, r0, #8
4002125c:	e59f1114 	ldr	r1, [pc, #276]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021260:	e581001c 	str	r0, [r1, #28]
40021264:	e3a0001e 	mov	r0, #30
40021268:	ebffc86d 	bl	40013424 <CyU3PBusyWait>
4002126c:	e59f0104 	ldr	r0, [pc, #260]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021270:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021274:	e3100006 	tst	r0, #6
40021278:	1a00000d 	bne	400212b4 <CyU3PUsbSendCompliancePatterns+0x138>
4002127c:	e59f00f8 	ldr	r0, [pc, #248]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
40021280:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021284:	e3500000 	cmp	r0, #0
40021288:	0a000005 	beq	400212a4 <CyU3PUsbSendCompliancePatterns+0x128>
4002128c:	e59f00f4 	ldr	r0, [pc, #244]	; 40021388 <CyU3PUsbSendCompliancePatterns+0x20c>
40021290:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021294:	e59f10e0 	ldr	r1, [pc, #224]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
40021298:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4002129c:	e1100001 	tst	r0, r1
400212a0:	0a000003 	beq	400212b4 <CyU3PUsbSendCompliancePatterns+0x138>
400212a4:	e59f00d0 	ldr	r0, [pc, #208]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
400212a8:	e5900060 	ldr	r0, [r0, #96]	; 0x60
400212ac:	e3500000 	cmp	r0, #0
400212b0:	0affffdf 	beq	40021234 <CyU3PUsbSendCompliancePatterns+0xb8>
400212b4:	e3a01009 	mov	r1, #9
400212b8:	e2840001 	add	r0, r4, #1
400212bc:	ebffbde3 	bl	40010a50 <__aeabi_idivmod>
400212c0:	e20140ff 	and	r4, r1, #255	; 0xff
400212c4:	e59f00ac 	ldr	r0, [pc, #172]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
400212c8:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400212cc:	e3100004 	tst	r0, #4
400212d0:	1a00000d 	bne	4002130c <CyU3PUsbSendCompliancePatterns+0x190>
400212d4:	e59f00a0 	ldr	r0, [pc, #160]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
400212d8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212dc:	e3500000 	cmp	r0, #0
400212e0:	0a000005 	beq	400212fc <CyU3PUsbSendCompliancePatterns+0x180>
400212e4:	e59f009c 	ldr	r0, [pc, #156]	; 40021388 <CyU3PUsbSendCompliancePatterns+0x20c>
400212e8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400212ec:	e59f1088 	ldr	r1, [pc, #136]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
400212f0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400212f4:	e1100001 	tst	r0, r1
400212f8:	0a000003 	beq	4002130c <CyU3PUsbSendCompliancePatterns+0x190>
400212fc:	e59f0078 	ldr	r0, [pc, #120]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
40021300:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021304:	e3500001 	cmp	r0, #1
40021308:	1a000009 	bne	40021334 <CyU3PUsbSendCompliancePatterns+0x1b8>
4002130c:	e59f0064 	ldr	r0, [pc, #100]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021310:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021314:	e3c00004 	bic	r0, r0, #4
40021318:	e59f1058 	ldr	r1, [pc, #88]	; 40021378 <CyU3PUsbSendCompliancePatterns+0x1fc>
4002131c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021320:	e3a00c06 	mov	r0, #1536	; 0x600
40021324:	e5810138 	str	r0, [r1, #312]	; 0x138
40021328:	e3a00000 	mov	r0, #0
4002132c:	e5810054 	str	r0, [r1, #84]	; 0x54
40021330:	ea000002 	b	40021340 <CyU3PUsbSendCompliancePatterns+0x1c4>
40021334:	e3a00001 	mov	r0, #1
40021338:	ebff9d86 	bl	40008958 <_tx_thread_sleep>
4002133c:	eaffffaa 	b	400211ec <CyU3PUsbSendCompliancePatterns+0x70>
40021340:	e1a00000 	nop			; (mov r0, r0)
40021344:	e59f0034 	ldr	r0, [pc, #52]	; 40021380 <CyU3PUsbSendCompliancePatterns+0x204>
40021348:	e5900000 	ldr	r0, [r0]
4002134c:	e3500000 	cmp	r0, #0
40021350:	0a000004 	beq	40021368 <CyU3PUsbSendCompliancePatterns+0x1ec>
40021354:	e3a01000 	mov	r1, #0
40021358:	e3a00016 	mov	r0, #22
4002135c:	e59f201c 	ldr	r2, [pc, #28]	; 40021380 <CyU3PUsbSendCompliancePatterns+0x204>
40021360:	e5922000 	ldr	r2, [r2]
40021364:	e12fff32 	blx	r2
40021368:	e3a00000 	mov	r0, #0
4002136c:	e59f1008 	ldr	r1, [pc, #8]	; 4002137c <CyU3PUsbSendCompliancePatterns+0x200>
40021370:	e5810064 	str	r0, [r1, #100]	; 0x64
40021374:	eaffff87 	b	40021198 <CyU3PUsbSendCompliancePatterns+0x1c>
40021378:	e0033000 	.word	0xe0033000
4002137c:	40031d40 	.word	0x40031d40
40021380:	40030da0 	.word	0x40030da0
40021384:	40011d90 	.word	0x40011d90
40021388:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

4002138c <CyU3PUsbSetupCommand>:
4002138c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40021390:	e3a06000 	mov	r6, #0
40021394:	e3a07000 	mov	r7, #0
40021398:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
4002139c:	e5d00009 	ldrb	r0, [r0, #9]
400213a0:	e3500003 	cmp	r0, #3
400213a4:	1a00001a 	bne	40021414 <CyU3PUsbSetupCommand+0x88>
400213a8:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021b64 <CyU3PUsbSetupCommand+0x7d8>
400213ac:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
400213b0:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
400213b4:	e3a00001 	mov	r0, #1
400213b8:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
400213bc:	e5810050 	str	r0, [r1, #80]	; 0x50
400213c0:	e3a00000 	mov	r0, #0
400213c4:	e59f179c 	ldr	r1, [pc, #1948]	; 40021b68 <CyU3PUsbSetupCommand+0x7dc>
400213c8:	e5810000 	str	r0, [r1]
400213cc:	e59f0798 	ldr	r0, [pc, #1944]	; 40021b6c <CyU3PUsbSetupCommand+0x7e0>
400213d0:	ebffa5d2 	bl	4000ab20 <_txe_timer_deactivate>
400213d4:	e3a00b02 	mov	r0, #2048	; 0x800
400213d8:	e59f1784 	ldr	r1, [pc, #1924]	; 40021b64 <CyU3PUsbSetupCommand+0x7d8>
400213dc:	e5810404 	str	r0, [r1, #1028]	; 0x404
400213e0:	e1c10000 	bic	r0, r1, r0
400213e4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400213e8:	e200603f 	and	r6, r0, #63	; 0x3f
400213ec:	e3560011 	cmp	r6, #17
400213f0:	0a000001 	beq	400213fc <CyU3PUsbSetupCommand+0x70>
400213f4:	e3560012 	cmp	r6, #18
400213f8:	1a000003 	bne	4002140c <CyU3PUsbSetupCommand+0x80>
400213fc:	e3a02000 	mov	r2, #0
40021400:	e3a01401 	mov	r1, #16777216	; 0x1000000
40021404:	e59f0764 	ldr	r0, [pc, #1892]	; 40021b70 <CyU3PUsbSetupCommand+0x7e4>
40021408:	ebffa24a 	bl	40009d38 <_txe_event_flags_set>
4002140c:	e3a06000 	mov	r6, #0
40021410:	ea00000d 	b	4002144c <CyU3PUsbSetupCommand+0xc0>
40021414:	e59f0744 	ldr	r0, [pc, #1860]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021418:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4002141c:	e3500000 	cmp	r0, #0
40021420:	0a000006 	beq	40021440 <CyU3PUsbSetupCommand+0xb4>
40021424:	e59f0734 	ldr	r0, [pc, #1844]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021428:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4002142c:	e3500003 	cmp	r0, #3
40021430:	2a000002 	bcs	40021440 <CyU3PUsbSetupCommand+0xb4>
40021434:	e3a00001 	mov	r0, #1
40021438:	e59f1720 	ldr	r1, [pc, #1824]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
4002143c:	e581004c 	str	r0, [r1, #76]	; 0x4c
40021440:	e59f072c 	ldr	r0, [pc, #1836]	; 40021b74 <CyU3PUsbSetupCommand+0x7e8>
40021444:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
40021448:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
4002144c:	e3a01064 	mov	r1, #100	; 0x64
40021450:	e59f0720 	ldr	r0, [pc, #1824]	; 40021b78 <CyU3PUsbSetupCommand+0x7ec>
40021454:	ebffd5fd 	bl	40016c50 <CyU3PDmaChannelWaitForCompletion>
40021458:	e1a06000 	mov	r6, r0
4002145c:	e3560000 	cmp	r6, #0
40021460:	0a00000b 	beq	40021494 <CyU3PUsbSetupCommand+0x108>
40021464:	e3560042 	cmp	r6, #66	; 0x42
40021468:	0a000009 	beq	40021494 <CyU3PUsbSetupCommand+0x108>
4002146c:	e3a01001 	mov	r1, #1
40021470:	e3a00000 	mov	r0, #0
40021474:	ebfff11b 	bl	4001d8e8 <CyU3PUsbSetEpNak>
40021478:	e3a00064 	mov	r0, #100	; 0x64
4002147c:	ebffc7e8 	bl	40013424 <CyU3PBusyWait>
40021480:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021b78 <CyU3PUsbSetupCommand+0x7ec>
40021484:	ebffd320 	bl	4001610c <CyU3PDmaChannelReset>
40021488:	e3a01000 	mov	r1, #0
4002148c:	e1a00001 	mov	r0, r1
40021490:	ebfff114 	bl	4001d8e8 <CyU3PUsbSetEpNak>
40021494:	e3a01064 	mov	r1, #100	; 0x64
40021498:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021b7c <CyU3PUsbSetupCommand+0x7f0>
4002149c:	ebffd5eb 	bl	40016c50 <CyU3PDmaChannelWaitForCompletion>
400214a0:	e1a06000 	mov	r6, r0
400214a4:	e3560000 	cmp	r6, #0
400214a8:	0a00000d 	beq	400214e4 <CyU3PUsbSetupCommand+0x158>
400214ac:	e3560042 	cmp	r6, #66	; 0x42
400214b0:	0a00000b 	beq	400214e4 <CyU3PUsbSetupCommand+0x158>
400214b4:	e3a01001 	mov	r1, #1
400214b8:	e3a00080 	mov	r0, #128	; 0x80
400214bc:	ebfff109 	bl	4001d8e8 <CyU3PUsbSetEpNak>
400214c0:	e3a00064 	mov	r0, #100	; 0x64
400214c4:	ebffc7d6 	bl	40013424 <CyU3PBusyWait>
400214c8:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021b7c <CyU3PUsbSetupCommand+0x7f0>
400214cc:	ebffd30e 	bl	4001610c <CyU3PDmaChannelReset>
400214d0:	e3a00080 	mov	r0, #128	; 0x80
400214d4:	ebffecfd 	bl	4001c8d0 <CyU3PUsbFlushEp>
400214d8:	e3a01000 	mov	r1, #0
400214dc:	e3a00080 	mov	r0, #128	; 0x80
400214e0:	ebfff100 	bl	4001d8e8 <CyU3PUsbSetEpNak>
400214e4:	e3a06000 	mov	r6, #0
400214e8:	e20490ff 	and	r9, r4, #255	; 0xff
400214ec:	e209a060 	and	sl, r9, #96	; 0x60
400214f0:	e2090003 	and	r0, r9, #3
400214f4:	e58d0008 	str	r0, [sp, #8]
400214f8:	e2040cff 	and	r0, r4, #65280	; 0xff00
400214fc:	e1a08420 	lsr	r8, r0, #8
40021500:	e59f0678 	ldr	r0, [pc, #1656]	; 40021b80 <CyU3PUsbSetupCommand+0x7f4>
40021504:	e000b824 	and	fp, r0, r4, lsr #16
40021508:	e0050000 	and	r0, r5, r0
4002150c:	e58d0004 	str	r0, [sp, #4]
40021510:	e59f0668 	ldr	r0, [pc, #1640]	; 40021b80 <CyU3PUsbSetupCommand+0x7f4>
40021514:	e0000825 	and	r0, r0, r5, lsr #16
40021518:	e58d0000 	str	r0, [sp]
4002151c:	e3140080 	tst	r4, #128	; 0x80
40021520:	0a000003 	beq	40021534 <CyU3PUsbSetupCommand+0x1a8>
40021524:	e59d0000 	ldr	r0, [sp]
40021528:	e59f1644 	ldr	r1, [pc, #1604]	; 40021b74 <CyU3PUsbSetupCommand+0x7e8>
4002152c:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021530:	ea000002 	b	40021540 <CyU3PUsbSetupCommand+0x1b4>
40021534:	e59d0000 	ldr	r0, [sp]
40021538:	e59f1634 	ldr	r1, [pc, #1588]	; 40021b74 <CyU3PUsbSetupCommand+0x7e8>
4002153c:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
40021540:	e3a00000 	mov	r0, #0
40021544:	e59f1614 	ldr	r1, [pc, #1556]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021548:	e5810040 	str	r0, [r1, #64]	; 0x40
4002154c:	e59f0620 	ldr	r0, [pc, #1568]	; 40021b74 <CyU3PUsbSetupCommand+0x7e8>
40021550:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021554:	e3c00008 	bic	r0, r0, #8
40021558:	e59f1614 	ldr	r1, [pc, #1556]	; 40021b74 <CyU3PUsbSetupCommand+0x7e8>
4002155c:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021560:	e3a00000 	mov	r0, #0
40021564:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021568:	e5810018 	str	r0, [r1, #24]
4002156c:	e5810070 	str	r0, [r1, #112]	; 0x70
40021570:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021b74 <CyU3PUsbSetupCommand+0x7e8>
40021574:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021578:	e3800008 	orr	r0, r0, #8
4002157c:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021b74 <CyU3PUsbSetupCommand+0x7e8>
40021580:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021584:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021588:	e5d00007 	ldrb	r0, [r0, #7]
4002158c:	e3500001 	cmp	r0, #1
40021590:	0a000001 	beq	4002159c <CyU3PUsbSetupCommand+0x210>
40021594:	e35a0000 	cmp	sl, #0
40021598:	0a000024 	beq	40021630 <CyU3PUsbSetupCommand+0x2a4>
4002159c:	e35a0000 	cmp	sl, #0
400215a0:	1a000012 	bne	400215f0 <CyU3PUsbSetupCommand+0x264>
400215a4:	e3580009 	cmp	r8, #9
400215a8:	1a000010 	bne	400215f0 <CyU3PUsbSetupCommand+0x264>
400215ac:	e35b0001 	cmp	fp, #1
400215b0:	1a00000b 	bne	400215e4 <CyU3PUsbSetupCommand+0x258>
400215b4:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
400215b8:	e5d10009 	ldrb	r0, [r1, #9]
400215bc:	ebfff993 	bl	4001fc10 <CyU3PUsbEpPrepare>
400215c0:	e3a00006 	mov	r0, #6
400215c4:	e59f1594 	ldr	r1, [pc, #1428]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
400215c8:	e5c10008 	strb	r0, [r1, #8]
400215cc:	e5c1b00c 	strb	fp, [r1, #12]
400215d0:	e2810000 	add	r0, r1, #0
400215d4:	e5d00006 	ldrb	r0, [r0, #6]
400215d8:	e2000001 	and	r0, r0, #1
400215dc:	e5c10006 	strb	r0, [r1, #6]
400215e0:	ea000002 	b	400215f0 <CyU3PUsbSetupCommand+0x264>
400215e4:	e3a00005 	mov	r0, #5
400215e8:	e59f1570 	ldr	r1, [pc, #1392]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
400215ec:	e5c10008 	strb	r0, [r1, #8]
400215f0:	e59f058c 	ldr	r0, [pc, #1420]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
400215f4:	e5900000 	ldr	r0, [r0]
400215f8:	e3500000 	cmp	r0, #0
400215fc:	0a000005 	beq	40021618 <CyU3PUsbSetupCommand+0x28c>
40021600:	e1a01005 	mov	r1, r5
40021604:	e1a00004 	mov	r0, r4
40021608:	e59f2574 	ldr	r2, [pc, #1396]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
4002160c:	e5922000 	ldr	r2, [r2]
40021610:	e12fff32 	blx	r2
40021614:	e1a07000 	mov	r7, r0
40021618:	e3570001 	cmp	r7, #1
4002161c:	1a000003 	bne	40021630 <CyU3PUsbSetupCommand+0x2a4>
40021620:	e3a00001 	mov	r0, #1
40021624:	e59f1534 	ldr	r1, [pc, #1332]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021628:	e5810040 	str	r0, [r1, #64]	; 0x40
4002162c:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40021630:	e35a0000 	cmp	sl, #0
40021634:	1a000140 	bne	40021b3c <CyU3PUsbSetupCommand+0x7b0>
40021638:	e3580009 	cmp	r8, #9
4002163c:	0a0000b1 	beq	40021908 <CyU3PUsbSetupCommand+0x57c>
40021640:	ca00000b 	bgt	40021674 <CyU3PUsbSetupCommand+0x2e8>
40021644:	e3580009 	cmp	r8, #9
40021648:	308ff108 	addcc	pc, pc, r8, lsl #2
4002164c:	ea000137 	b	40021b30 <CyU3PUsbSetupCommand+0x7a4>
40021650:	ea000014 	b	400216a8 <CyU3PUsbSetupCommand+0x31c>
40021654:	ea000029 	b	40021700 <CyU3PUsbSetupCommand+0x374>
40021658:	ea000134 	b	40021b30 <CyU3PUsbSetupCommand+0x7a4>
4002165c:	ea000057 	b	400217c0 <CyU3PUsbSetupCommand+0x434>
40021660:	ea000132 	b	40021b30 <CyU3PUsbSetupCommand+0x7a4>
40021664:	ea000131 	b	40021b30 <CyU3PUsbSetupCommand+0x7a4>
40021668:	ea000099 	b	400218d4 <CyU3PUsbSetupCommand+0x548>
4002166c:	ea00012f 	b	40021b30 <CyU3PUsbSetupCommand+0x7a4>
40021670:	ea00009d 	b	400218ec <CyU3PUsbSetupCommand+0x560>
40021674:	e358000c 	cmp	r8, #12
40021678:	0a0000fb 	beq	40021a6c <CyU3PUsbSetupCommand+0x6e0>
4002167c:	ca000004 	bgt	40021694 <CyU3PUsbSetupCommand+0x308>
40021680:	e358000a 	cmp	r8, #10
40021684:	0a0000c5 	beq	400219a0 <CyU3PUsbSetupCommand+0x614>
40021688:	e358000b 	cmp	r8, #11
4002168c:	1a000127 	bne	40021b30 <CyU3PUsbSetupCommand+0x7a4>
40021690:	ea0000d6 	b	400219f0 <CyU3PUsbSetupCommand+0x664>
40021694:	e3580030 	cmp	r8, #48	; 0x30
40021698:	0a0000f7 	beq	40021a7c <CyU3PUsbSetupCommand+0x6f0>
4002169c:	e3580031 	cmp	r8, #49	; 0x31
400216a0:	1a000122 	bne	40021b30 <CyU3PUsbSetupCommand+0x7a4>
400216a4:	ea000114 	b	40021afc <CyU3PUsbSetupCommand+0x770>
400216a8:	e1a00000 	nop			; (mov r0, r0)
400216ac:	e59d0008 	ldr	r0, [sp, #8]
400216b0:	e3500001 	cmp	r0, #1
400216b4:	1a00000c 	bne	400216ec <CyU3PUsbSetupCommand+0x360>
400216b8:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
400216bc:	e5900000 	ldr	r0, [r0]
400216c0:	e3500000 	cmp	r0, #0
400216c4:	0a000008 	beq	400216ec <CyU3PUsbSetupCommand+0x360>
400216c8:	e1a01005 	mov	r1, r5
400216cc:	e1a00004 	mov	r0, r4
400216d0:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
400216d4:	e5922000 	ldr	r2, [r2]
400216d8:	e12fff32 	blx	r2
400216dc:	e1a07000 	mov	r7, r0
400216e0:	e3570000 	cmp	r7, #0
400216e4:	0a000000 	beq	400216ec <CyU3PUsbSetupCommand+0x360>
400216e8:	ea000112 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400216ec:	e59d0008 	ldr	r0, [sp, #8]
400216f0:	e59d1004 	ldr	r1, [sp, #4]
400216f4:	ebfffbd3 	bl	40020648 <CyU3PUsbHandleGetStatus>
400216f8:	e1a07000 	mov	r7, r0
400216fc:	ea00010d 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021700:	e1a00000 	nop			; (mov r0, r0)
40021704:	e59d0008 	ldr	r0, [sp, #8]
40021708:	e3500000 	cmp	r0, #0
4002170c:	1a000002 	bne	4002171c <CyU3PUsbSetupCommand+0x390>
40021710:	e20b00ff 	and	r0, fp, #255	; 0xff
40021714:	ebfffa86 	bl	40020134 <CyU3PUsbHandleClearFeature>
40021718:	eaffffc3 	b	4002162c <CyU3PUsbSetupCommand+0x2a0>
4002171c:	e3a07000 	mov	r7, #0
40021720:	e59f0438 	ldr	r0, [pc, #1080]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021724:	e5d00007 	ldrb	r0, [r0, #7]
40021728:	e3500000 	cmp	r0, #0
4002172c:	1a00000e 	bne	4002176c <CyU3PUsbSetupCommand+0x3e0>
40021730:	e59f044c 	ldr	r0, [pc, #1100]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
40021734:	e5900000 	ldr	r0, [r0]
40021738:	e3500000 	cmp	r0, #0
4002173c:	0a00000a 	beq	4002176c <CyU3PUsbSetupCommand+0x3e0>
40021740:	e1a01005 	mov	r1, r5
40021744:	e1a00004 	mov	r0, r4
40021748:	e59f2434 	ldr	r2, [pc, #1076]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
4002174c:	e5922000 	ldr	r2, [r2]
40021750:	e12fff32 	blx	r2
40021754:	e1a07000 	mov	r7, r0
40021758:	e3570000 	cmp	r7, #0
4002175c:	0a000002 	beq	4002176c <CyU3PUsbSetupCommand+0x3e0>
40021760:	e3a00001 	mov	r0, #1
40021764:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021768:	e5810040 	str	r0, [r1, #64]	; 0x40
4002176c:	e3570000 	cmp	r7, #0
40021770:	1a000011 	bne	400217bc <CyU3PUsbSetupCommand+0x430>
40021774:	e59d0008 	ldr	r0, [sp, #8]
40021778:	e3500002 	cmp	r0, #2
4002177c:	1a00000e 	bne	400217bc <CyU3PUsbSetupCommand+0x430>
40021780:	e35b0000 	cmp	fp, #0
40021784:	1a00000c 	bne	400217bc <CyU3PUsbSetupCommand+0x430>
40021788:	e59d1004 	ldr	r1, [sp, #4]
4002178c:	e20100ff 	and	r0, r1, #255	; 0xff
40021790:	e3a02001 	mov	r2, #1
40021794:	e3a01000 	mov	r1, #0
40021798:	ebfff118 	bl	4001dc00 <CyU3PUsbStall>
4002179c:	e3500000 	cmp	r0, #0
400217a0:	1a000005 	bne	400217bc <CyU3PUsbSetupCommand+0x430>
400217a4:	e59d1004 	ldr	r1, [sp, #4]
400217a8:	e20100ff 	and	r0, r1, #255	; 0xff
400217ac:	ebffeeaf 	bl	4001d270 <CyU3PUsbResetEp>
400217b0:	ebffeb4e 	bl	4001c4f0 <CyU3PUsbAckSetup>
400217b4:	e3a07001 	mov	r7, #1
400217b8:	ea0000de 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400217bc:	ea0000dd 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400217c0:	e1a00000 	nop			; (mov r0, r0)
400217c4:	e59d0008 	ldr	r0, [sp, #8]
400217c8:	e3500000 	cmp	r0, #0
400217cc:	1a00001b 	bne	40021840 <CyU3PUsbSetupCommand+0x4b4>
400217d0:	e35b0003 	cmp	fp, #3
400217d4:	0a000004 	beq	400217ec <CyU3PUsbSetupCommand+0x460>
400217d8:	e35b0004 	cmp	fp, #4
400217dc:	0a000002 	beq	400217ec <CyU3PUsbSetupCommand+0x460>
400217e0:	e20b00ff 	and	r0, fp, #255	; 0xff
400217e4:	ebfffbd5 	bl	40020740 <CyU3PUsbHandleSetFeature>
400217e8:	eaffff8f 	b	4002162c <CyU3PUsbSetupCommand+0x2a0>
400217ec:	e59f036c 	ldr	r0, [pc, #876]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
400217f0:	e5d00007 	ldrb	r0, [r0, #7]
400217f4:	e3500000 	cmp	r0, #0
400217f8:	1a00000f 	bne	4002183c <CyU3PUsbSetupCommand+0x4b0>
400217fc:	e59f0380 	ldr	r0, [pc, #896]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
40021800:	e5900000 	ldr	r0, [r0]
40021804:	e3500000 	cmp	r0, #0
40021808:	0a00000b 	beq	4002183c <CyU3PUsbSetupCommand+0x4b0>
4002180c:	e1a01005 	mov	r1, r5
40021810:	e1a00004 	mov	r0, r4
40021814:	e59f2368 	ldr	r2, [pc, #872]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
40021818:	e5922000 	ldr	r2, [r2]
4002181c:	e12fff32 	blx	r2
40021820:	e1a07000 	mov	r7, r0
40021824:	e3570000 	cmp	r7, #0
40021828:	0a000003 	beq	4002183c <CyU3PUsbSetupCommand+0x4b0>
4002182c:	e3a00001 	mov	r0, #1
40021830:	e59f1328 	ldr	r1, [pc, #808]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021834:	e5810040 	str	r0, [r1, #64]	; 0x40
40021838:	eaffff7b 	b	4002162c <CyU3PUsbSetupCommand+0x2a0>
4002183c:	ea0000bd 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021840:	e3a07000 	mov	r7, #0
40021844:	e59f0314 	ldr	r0, [pc, #788]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021848:	e5d00007 	ldrb	r0, [r0, #7]
4002184c:	e3500000 	cmp	r0, #0
40021850:	1a00000e 	bne	40021890 <CyU3PUsbSetupCommand+0x504>
40021854:	e59f0328 	ldr	r0, [pc, #808]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
40021858:	e5900000 	ldr	r0, [r0]
4002185c:	e3500000 	cmp	r0, #0
40021860:	0a00000a 	beq	40021890 <CyU3PUsbSetupCommand+0x504>
40021864:	e1a01005 	mov	r1, r5
40021868:	e1a00004 	mov	r0, r4
4002186c:	e59f2310 	ldr	r2, [pc, #784]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
40021870:	e5922000 	ldr	r2, [r2]
40021874:	e12fff32 	blx	r2
40021878:	e1a07000 	mov	r7, r0
4002187c:	e3570000 	cmp	r7, #0
40021880:	0a000002 	beq	40021890 <CyU3PUsbSetupCommand+0x504>
40021884:	e3a00001 	mov	r0, #1
40021888:	e59f12d0 	ldr	r1, [pc, #720]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
4002188c:	e5810040 	str	r0, [r1, #64]	; 0x40
40021890:	e3570000 	cmp	r7, #0
40021894:	1a00000d 	bne	400218d0 <CyU3PUsbSetupCommand+0x544>
40021898:	e59d0008 	ldr	r0, [sp, #8]
4002189c:	e3500002 	cmp	r0, #2
400218a0:	1a00000a 	bne	400218d0 <CyU3PUsbSetupCommand+0x544>
400218a4:	e35b0000 	cmp	fp, #0
400218a8:	1a000008 	bne	400218d0 <CyU3PUsbSetupCommand+0x544>
400218ac:	e59d1004 	ldr	r1, [sp, #4]
400218b0:	e20100ff 	and	r0, r1, #255	; 0xff
400218b4:	e3a02000 	mov	r2, #0
400218b8:	e3a01001 	mov	r1, #1
400218bc:	ebfff0cf 	bl	4001dc00 <CyU3PUsbStall>
400218c0:	e3500000 	cmp	r0, #0
400218c4:	1a000001 	bne	400218d0 <CyU3PUsbSetupCommand+0x544>
400218c8:	ebffeb08 	bl	4001c4f0 <CyU3PUsbAckSetup>
400218cc:	e3a07001 	mov	r7, #1
400218d0:	ea000098 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400218d4:	e1a00000 	nop			; (mov r0, r0)
400218d8:	e1a01005 	mov	r1, r5
400218dc:	e1a00004 	mov	r0, r4
400218e0:	ebfff5d5 	bl	4001f03c <CyU3PUibSendDescr>
400218e4:	e1a07000 	mov	r7, r0
400218e8:	ea000092 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400218ec:	e1a00000 	nop			; (mov r0, r0)
400218f0:	e3a07001 	mov	r7, #1
400218f4:	e59f128c 	ldr	r1, [pc, #652]	; 40021b88 <CyU3PUsbSetupCommand+0x7fc>
400218f8:	e3a00001 	mov	r0, #1
400218fc:	ebffee94 	bl	4001d354 <CyU3PUsbSendEP0Data>
40021900:	e1a06000 	mov	r6, r0
40021904:	ea00008b 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021908:	e1a00000 	nop			; (mov r0, r0)
4002190c:	e3a07001 	mov	r7, #1
40021910:	e35b0000 	cmp	fp, #0
40021914:	0a000005 	beq	40021930 <CyU3PUsbSetupCommand+0x5a4>
40021918:	e35b0001 	cmp	fp, #1
4002191c:	1a00001a 	bne	4002198c <CyU3PUsbSetupCommand+0x600>
40021920:	e59f1238 	ldr	r1, [pc, #568]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021924:	e5d10009 	ldrb	r0, [r1, #9]
40021928:	ebfff8b8 	bl	4001fc10 <CyU3PUsbEpPrepare>
4002192c:	e1a00000 	nop			; (mov r0, r0)
40021930:	e35b0000 	cmp	fp, #0
40021934:	1a000001 	bne	40021940 <CyU3PUsbSetupCommand+0x5b4>
40021938:	e3a00005 	mov	r0, #5
4002193c:	ea000000 	b	40021944 <CyU3PUsbSetupCommand+0x5b8>
40021940:	e3a00006 	mov	r0, #6
40021944:	e59f1214 	ldr	r1, [pc, #532]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021948:	e5c10008 	strb	r0, [r1, #8]
4002194c:	e5c1b00c 	strb	fp, [r1, #12]
40021950:	e2810000 	add	r0, r1, #0
40021954:	e5d00006 	ldrb	r0, [r0, #6]
40021958:	e2000001 	and	r0, r0, #1
4002195c:	e5c10006 	strb	r0, [r1, #6]
40021960:	e59f0224 	ldr	r0, [pc, #548]	; 40021b8c <CyU3PUsbSetupCommand+0x800>
40021964:	e5900000 	ldr	r0, [r0]
40021968:	e3500000 	cmp	r0, #0
4002196c:	0a000004 	beq	40021984 <CyU3PUsbSetupCommand+0x5f8>
40021970:	e1a0100b 	mov	r1, fp
40021974:	e3a00005 	mov	r0, #5
40021978:	e59f220c 	ldr	r2, [pc, #524]	; 40021b8c <CyU3PUsbSetupCommand+0x800>
4002197c:	e5922000 	ldr	r2, [r2]
40021980:	e12fff32 	blx	r2
40021984:	ebffead9 	bl	4001c4f0 <CyU3PUsbAckSetup>
40021988:	ea000002 	b	40021998 <CyU3PUsbSetupCommand+0x60c>
4002198c:	e1a00000 	nop			; (mov r0, r0)
40021990:	e3a06040 	mov	r6, #64	; 0x40
40021994:	e1a00000 	nop			; (mov r0, r0)
40021998:	e1a00000 	nop			; (mov r0, r0)
4002199c:	ea000065 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400219a0:	e1a00000 	nop			; (mov r0, r0)
400219a4:	e59f01d8 	ldr	r0, [pc, #472]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
400219a8:	e5900000 	ldr	r0, [r0]
400219ac:	e3500000 	cmp	r0, #0
400219b0:	0a000008 	beq	400219d8 <CyU3PUsbSetupCommand+0x64c>
400219b4:	e1a01005 	mov	r1, r5
400219b8:	e1a00004 	mov	r0, r4
400219bc:	e59f21c0 	ldr	r2, [pc, #448]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
400219c0:	e5922000 	ldr	r2, [r2]
400219c4:	e12fff32 	blx	r2
400219c8:	e1a07000 	mov	r7, r0
400219cc:	e3570000 	cmp	r7, #0
400219d0:	0a000000 	beq	400219d8 <CyU3PUsbSetupCommand+0x64c>
400219d4:	ea000057 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400219d8:	e3a07001 	mov	r7, #1
400219dc:	e59f11ac 	ldr	r1, [pc, #428]	; 40021b90 <CyU3PUsbSetupCommand+0x804>
400219e0:	e3a00001 	mov	r0, #1
400219e4:	ebffee5a 	bl	4001d354 <CyU3PUsbSendEP0Data>
400219e8:	e1a06000 	mov	r6, r0
400219ec:	ea000051 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
400219f0:	e1a00000 	nop			; (mov r0, r0)
400219f4:	e59f0188 	ldr	r0, [pc, #392]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
400219f8:	e5900000 	ldr	r0, [r0]
400219fc:	e3500000 	cmp	r0, #0
40021a00:	0a000008 	beq	40021a28 <CyU3PUsbSetupCommand+0x69c>
40021a04:	e1a01005 	mov	r1, r5
40021a08:	e1a00004 	mov	r0, r4
40021a0c:	e59f2170 	ldr	r2, [pc, #368]	; 40021b84 <CyU3PUsbSetupCommand+0x7f8>
40021a10:	e5922000 	ldr	r2, [r2]
40021a14:	e12fff32 	blx	r2
40021a18:	e1a07000 	mov	r7, r0
40021a1c:	e3570000 	cmp	r7, #0
40021a20:	0a000000 	beq	40021a28 <CyU3PUsbSetupCommand+0x69c>
40021a24:	ea000043 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021a28:	e59f1130 	ldr	r1, [pc, #304]	; 40021b60 <CyU3PUsbSetupCommand+0x7d4>
40021a2c:	e5c1b00d 	strb	fp, [r1, #13]
40021a30:	e59f0154 	ldr	r0, [pc, #340]	; 40021b8c <CyU3PUsbSetupCommand+0x800>
40021a34:	e5900000 	ldr	r0, [r0]
40021a38:	e3500000 	cmp	r0, #0
40021a3c:	0a000007 	beq	40021a60 <CyU3PUsbSetupCommand+0x6d4>
40021a40:	e20b00ff 	and	r0, fp, #255	; 0xff
40021a44:	e59d2004 	ldr	r2, [sp, #4]
40021a48:	e1800402 	orr	r0, r0, r2, lsl #8
40021a4c:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021a50:	e3a00007 	mov	r0, #7
40021a54:	e59f2130 	ldr	r2, [pc, #304]	; 40021b8c <CyU3PUsbSetupCommand+0x800>
40021a58:	e5922000 	ldr	r2, [r2]
40021a5c:	e12fff32 	blx	r2
40021a60:	e3a07001 	mov	r7, #1
40021a64:	ebffeaa1 	bl	4001c4f0 <CyU3PUsbAckSetup>
40021a68:	ea000032 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021a6c:	e1a00000 	nop			; (mov r0, r0)
40021a70:	e3a07001 	mov	r7, #1
40021a74:	ebffea9d 	bl	4001c4f0 <CyU3PUsbAckSetup>
40021a78:	ea00002e 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021a7c:	e1a00000 	nop			; (mov r0, r0)
40021a80:	ebffec37 	bl	4001cb64 <CyU3PUsbGetSpeed>
40021a84:	e3500003 	cmp	r0, #3
40021a88:	1a000019 	bne	40021af4 <CyU3PUsbSetupCommand+0x768>
40021a8c:	e35b0000 	cmp	fp, #0
40021a90:	1a000017 	bne	40021af4 <CyU3PUsbSetupCommand+0x768>
40021a94:	e59d0004 	ldr	r0, [sp, #4]
40021a98:	e3500000 	cmp	r0, #0
40021a9c:	1a000014 	bne	40021af4 <CyU3PUsbSetupCommand+0x768>
40021aa0:	e59d0000 	ldr	r0, [sp]
40021aa4:	e3500006 	cmp	r0, #6
40021aa8:	1a000011 	bne	40021af4 <CyU3PUsbSetupCommand+0x768>
40021aac:	e3a07001 	mov	r7, #1
40021ab0:	e3a02000 	mov	r2, #0
40021ab4:	e59f10d8 	ldr	r1, [pc, #216]	; 40021b94 <CyU3PUsbSetupCommand+0x808>
40021ab8:	e3a00020 	mov	r0, #32
40021abc:	ebffebb6 	bl	4001c99c <CyU3PUsbGetEP0Data>
40021ac0:	e1a06000 	mov	r6, r0
40021ac4:	e59f00c0 	ldr	r0, [pc, #192]	; 40021b8c <CyU3PUsbSetupCommand+0x800>
40021ac8:	e5900000 	ldr	r0, [r0]
40021acc:	e3500000 	cmp	r0, #0
40021ad0:	0a000008 	beq	40021af8 <CyU3PUsbSetupCommand+0x76c>
40021ad4:	e3560000 	cmp	r6, #0
40021ad8:	1a000006 	bne	40021af8 <CyU3PUsbSetupCommand+0x76c>
40021adc:	e3a01000 	mov	r1, #0
40021ae0:	e3a00008 	mov	r0, #8
40021ae4:	e59f20a0 	ldr	r2, [pc, #160]	; 40021b8c <CyU3PUsbSetupCommand+0x800>
40021ae8:	e5922000 	ldr	r2, [r2]
40021aec:	e12fff32 	blx	r2
40021af0:	ea000000 	b	40021af8 <CyU3PUsbSetupCommand+0x76c>
40021af4:	e3a07000 	mov	r7, #0
40021af8:	ea00000e 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021afc:	e1a00000 	nop			; (mov r0, r0)
40021b00:	ebffec17 	bl	4001cb64 <CyU3PUsbGetSpeed>
40021b04:	e3500003 	cmp	r0, #3
40021b08:	1a000007 	bne	40021b2c <CyU3PUsbSetupCommand+0x7a0>
40021b0c:	e59d0004 	ldr	r0, [sp, #4]
40021b10:	e3500000 	cmp	r0, #0
40021b14:	1a000004 	bne	40021b2c <CyU3PUsbSetupCommand+0x7a0>
40021b18:	e59d0000 	ldr	r0, [sp]
40021b1c:	e3500000 	cmp	r0, #0
40021b20:	1a000001 	bne	40021b2c <CyU3PUsbSetupCommand+0x7a0>
40021b24:	e3a07001 	mov	r7, #1
40021b28:	ebffea70 	bl	4001c4f0 <CyU3PUsbAckSetup>
40021b2c:	ea000001 	b	40021b38 <CyU3PUsbSetupCommand+0x7ac>
40021b30:	e1a00000 	nop			; (mov r0, r0)
40021b34:	e1a00000 	nop			; (mov r0, r0)
40021b38:	e1a00000 	nop			; (mov r0, r0)
40021b3c:	e3570001 	cmp	r7, #1
40021b40:	1a000001 	bne	40021b4c <CyU3PUsbSetupCommand+0x7c0>
40021b44:	e3560000 	cmp	r6, #0
40021b48:	0a000003 	beq	40021b5c <CyU3PUsbSetupCommand+0x7d0>
40021b4c:	e3a02000 	mov	r2, #0
40021b50:	e3a01001 	mov	r1, #1
40021b54:	e1a00002 	mov	r0, r2
40021b58:	ebfff028 	bl	4001dc00 <CyU3PUsbStall>
40021b5c:	eafffeb2 	b	4002162c <CyU3PUsbSetupCommand+0x2a0>
40021b60:	40031d40 	.word	0x40031d40
40021b64:	e0033000 	.word	0xe0033000
40021b68:	40030db4 	.word	0x40030db4
40021b6c:	400326a0 	.word	0x400326a0
40021b70:	40031eb8 	.word	0x40031eb8
40021b74:	e0031000 	.word	0xe0031000
40021b78:	40031b14 	.word	0x40031b14
40021b7c:	40031a74 	.word	0x40031a74
40021b80:	0000ffff 	.word	0x0000ffff
40021b84:	40030da4 	.word	0x40030da4
40021b88:	40031d4c 	.word	0x40031d4c
40021b8c:	40030da0 	.word	0x40030da0
40021b90:	40031d4d 	.word	0x40031d4d
40021b94:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40021b98 <CyU3PUsbSuspendHandler>:
40021b98:	e92d4010 	push	{r4, lr}
40021b9c:	e59f003c 	ldr	r0, [pc, #60]	; 40021be0 <CyU3PUsbSuspendHandler+0x48>
40021ba0:	e5d00008 	ldrb	r0, [r0, #8]
40021ba4:	e3500005 	cmp	r0, #5
40021ba8:	ba00000b 	blt	40021bdc <CyU3PUsbSuspendHandler+0x44>
40021bac:	e59f0030 	ldr	r0, [pc, #48]	; 40021be4 <CyU3PUsbSuspendHandler+0x4c>
40021bb0:	e5900000 	ldr	r0, [r0]
40021bb4:	e3500000 	cmp	r0, #0
40021bb8:	0a000004 	beq	40021bd0 <CyU3PUsbSuspendHandler+0x38>
40021bbc:	e3a01000 	mov	r1, #0
40021bc0:	e3a00002 	mov	r0, #2
40021bc4:	e59f2018 	ldr	r2, [pc, #24]	; 40021be4 <CyU3PUsbSuspendHandler+0x4c>
40021bc8:	e5922000 	ldr	r2, [r2]
40021bcc:	e12fff32 	blx	r2
40021bd0:	e3a00005 	mov	r0, #5
40021bd4:	e59f1004 	ldr	r1, [pc, #4]	; 40021be0 <CyU3PUsbSuspendHandler+0x48>
40021bd8:	e5c10008 	strb	r0, [r1, #8]
40021bdc:	e8bd8010 	pop	{r4, pc}
40021be0:	40031d40 	.word	0x40031d40
40021be4:	40030da0 	.word	0x40030da0

Disassembly of section i.HandleVbusOffEvent:

40021be8 <HandleVbusOffEvent>:
40021be8:	e92d4010 	push	{r4, lr}
40021bec:	e59f00e0 	ldr	r0, [pc, #224]	; 40021cd4 <HandleVbusOffEvent+0xec>
40021bf0:	e5d00009 	ldrb	r0, [r0, #9]
40021bf4:	e3500003 	cmp	r0, #3
40021bf8:	1a000002 	bne	40021c08 <HandleVbusOffEvent+0x20>
40021bfc:	e3a00001 	mov	r0, #1
40021c00:	ebffec59 	bl	4001cd6c <CyU3PUsbPhyDisable>
40021c04:	ea000022 	b	40021c94 <HandleVbusOffEvent+0xac>
40021c08:	e59f00c8 	ldr	r0, [pc, #200]	; 40021cd8 <HandleVbusOffEvent+0xf0>
40021c0c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021c10:	e3100901 	tst	r0, #16384	; 0x4000
40021c14:	0a00001c 	beq	40021c8c <HandleVbusOffEvent+0xa4>
40021c18:	e59f00b8 	ldr	r0, [pc, #184]	; 40021cd8 <HandleVbusOffEvent+0xf0>
40021c1c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021c20:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021c24:	e59f10ac 	ldr	r1, [pc, #172]	; 40021cd8 <HandleVbusOffEvent+0xf0>
40021c28:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021c2c:	e3a00002 	mov	r0, #2
40021c30:	ebffc5fb 	bl	40013424 <CyU3PBusyWait>
40021c34:	e59f00a0 	ldr	r0, [pc, #160]	; 40021cdc <HandleVbusOffEvent+0xf4>
40021c38:	e5900004 	ldr	r0, [r0, #4]
40021c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021c40:	e59f1094 	ldr	r1, [pc, #148]	; 40021cdc <HandleVbusOffEvent+0xf4>
40021c44:	e5810004 	str	r0, [r1, #4]
40021c48:	e3a00001 	mov	r0, #1
40021c4c:	ebffc5f4 	bl	40013424 <CyU3PBusyWait>
40021c50:	e59f0088 	ldr	r0, [pc, #136]	; 40021ce0 <HandleVbusOffEvent+0xf8>
40021c54:	e590001c 	ldr	r0, [r0, #28]
40021c58:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021c5c:	e59f107c 	ldr	r1, [pc, #124]	; 40021ce0 <HandleVbusOffEvent+0xf8>
40021c60:	e581001c 	str	r0, [r1, #28]
40021c64:	e59f0078 	ldr	r0, [pc, #120]	; 40021ce4 <HandleVbusOffEvent+0xfc>
40021c68:	e5900000 	ldr	r0, [r0]
40021c6c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021c70:	e3a00001 	mov	r0, #1
40021c74:	ebffc5ea 	bl	40013424 <CyU3PBusyWait>
40021c78:	e59f005c 	ldr	r0, [pc, #92]	; 40021cdc <HandleVbusOffEvent+0xf4>
40021c7c:	e5900004 	ldr	r0, [r0, #4]
40021c80:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021c84:	e59f1050 	ldr	r1, [pc, #80]	; 40021cdc <HandleVbusOffEvent+0xf4>
40021c88:	e5810004 	str	r0, [r1, #4]
40021c8c:	e3a00000 	mov	r0, #0
40021c90:	ebffec35 	bl	4001cd6c <CyU3PUsbPhyDisable>
40021c94:	e3a01000 	mov	r1, #0
40021c98:	e3a00001 	mov	r0, #1
40021c9c:	e59f2044 	ldr	r2, [pc, #68]	; 40021ce8 <HandleVbusOffEvent+0x100>
40021ca0:	e5922000 	ldr	r2, [r2]
40021ca4:	e12fff32 	blx	r2
40021ca8:	e3a00000 	mov	r0, #0
40021cac:	e59f1020 	ldr	r1, [pc, #32]	; 40021cd4 <HandleVbusOffEvent+0xec>
40021cb0:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021cb4:	e3a00004 	mov	r0, #4
40021cb8:	e5c10008 	strb	r0, [r1, #8]
40021cbc:	e3a00000 	mov	r0, #0
40021cc0:	e5c10009 	strb	r0, [r1, #9]
40021cc4:	e5810054 	str	r0, [r1, #84]	; 0x54
40021cc8:	e5810058 	str	r0, [r1, #88]	; 0x58
40021ccc:	e5810048 	str	r0, [r1, #72]	; 0x48
40021cd0:	e8bd8010 	pop	{r4, pc}
40021cd4:	40031d40 	.word	0x40031d40
40021cd8:	e0031000 	.word	0xe0031000
40021cdc:	e0030000 	.word	0xe0030000
40021ce0:	e0033000 	.word	0xe0033000
40021ce4:	40030c5c 	.word	0x40030c5c
40021ce8:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3POsTimerInit:

40021cec <CyU3POsTimerInit>:
40021cec:	e92d4070 	push	{r4, r5, r6, lr}
40021cf0:	e1a04000 	mov	r4, r0
40021cf4:	e3a00004 	mov	r0, #4
40021cf8:	eb000047 	bl	40021e1c <CyU3PVicDisableInt>
40021cfc:	e59f00f0 	ldr	r0, [pc, #240]	; 40021df4 <CyU3POsTimerInit+0x108>
40021d00:	e5905014 	ldr	r5, [r0, #20]
40021d04:	e3a00064 	mov	r0, #100	; 0x64
40021d08:	ebffc5c5 	bl	40013424 <CyU3PBusyWait>
40021d0c:	e3850c03 	orr	r0, r5, #768	; 0x300
40021d10:	e59f10dc 	ldr	r1, [pc, #220]	; 40021df4 <CyU3POsTimerInit+0x108>
40021d14:	e5810014 	str	r0, [r1, #20]
40021d18:	e3a00064 	mov	r0, #100	; 0x64
40021d1c:	ebffc5c0 	bl	40013424 <CyU3PBusyWait>
40021d20:	e59f00cc 	ldr	r0, [pc, #204]	; 40021df4 <CyU3POsTimerInit+0x108>
40021d24:	e5905014 	ldr	r5, [r0, #20]
40021d28:	e3540000 	cmp	r4, #0
40021d2c:	0a000001 	beq	40021d38 <CyU3POsTimerInit+0x4c>
40021d30:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40021d34:	da000006 	ble	40021d54 <CyU3POsTimerInit+0x68>
40021d38:	e3a00001 	mov	r0, #1
40021d3c:	e59f10b4 	ldr	r1, [pc, #180]	; 40021df8 <CyU3POsTimerInit+0x10c>
40021d40:	e1c100b0 	strh	r0, [r1]
40021d44:	e3a00020 	mov	r0, #32
40021d48:	e59f10ac 	ldr	r1, [pc, #172]	; 40021dfc <CyU3POsTimerInit+0x110>
40021d4c:	e5810000 	str	r0, [r1]
40021d50:	ea000004 	b	40021d68 <CyU3POsTimerInit+0x7c>
40021d54:	e59f009c 	ldr	r0, [pc, #156]	; 40021df8 <CyU3POsTimerInit+0x10c>
40021d58:	e1c040b0 	strh	r4, [r0]
40021d5c:	e1a00284 	lsl	r0, r4, #5
40021d60:	e59f1094 	ldr	r1, [pc, #148]	; 40021dfc <CyU3POsTimerInit+0x110>
40021d64:	e5810000 	str	r0, [r1]
40021d68:	e59f008c 	ldr	r0, [pc, #140]	; 40021dfc <CyU3POsTimerInit+0x110>
40021d6c:	e5900000 	ldr	r0, [r0]
40021d70:	e2400007 	sub	r0, r0, #7
40021d74:	e59f1080 	ldr	r1, [pc, #128]	; 40021dfc <CyU3POsTimerInit+0x110>
40021d78:	e5810000 	str	r0, [r1]
40021d7c:	e3a06000 	mov	r6, #0
40021d80:	ea000001 	b	40021d8c <CyU3POsTimerInit+0xa0>
40021d84:	e2860001 	add	r0, r6, #1
40021d88:	e20060ff 	and	r6, r0, #255	; 0xff
40021d8c:	e3a00001 	mov	r0, #1
40021d90:	e1a00610 	lsl	r0, r0, r6
40021d94:	e59f1060 	ldr	r1, [pc, #96]	; 40021dfc <CyU3POsTimerInit+0x110>
40021d98:	e5911000 	ldr	r1, [r1]
40021d9c:	e1500001 	cmp	r0, r1
40021da0:	9afffff7 	bls	40021d84 <CyU3POsTimerInit+0x98>
40021da4:	e59f0050 	ldr	r0, [pc, #80]	; 40021dfc <CyU3POsTimerInit+0x110>
40021da8:	e5900000 	ldr	r0, [r0]
40021dac:	e59f1040 	ldr	r1, [pc, #64]	; 40021df4 <CyU3POsTimerInit+0x108>
40021db0:	e581001c 	str	r0, [r1, #28]
40021db4:	e3a00064 	mov	r0, #100	; 0x64
40021db8:	ebffc599 	bl	40013424 <CyU3PBusyWait>
40021dbc:	e3a00004 	mov	r0, #4
40021dc0:	eb00001a 	bl	40021e30 <CyU3PVicEnableInt>
40021dc4:	e59f0028 	ldr	r0, [pc, #40]	; 40021df4 <CyU3POsTimerInit+0x108>
40021dc8:	e5900014 	ldr	r0, [r0, #20]
40021dcc:	e3c05c03 	bic	r5, r0, #768	; 0x300
40021dd0:	e3a00b01 	mov	r0, #1024	; 0x400
40021dd4:	e1800586 	orr	r0, r0, r6, lsl #11
40021dd8:	e1855000 	orr	r5, r5, r0
40021ddc:	e3855c01 	orr	r5, r5, #256	; 0x100
40021de0:	e3a00064 	mov	r0, #100	; 0x64
40021de4:	ebffc58e 	bl	40013424 <CyU3PBusyWait>
40021de8:	e59f0004 	ldr	r0, [pc, #4]	; 40021df4 <CyU3POsTimerInit+0x108>
40021dec:	e5805014 	str	r5, [r0, #20]
40021df0:	e8bd8070 	pop	{r4, r5, r6, pc}
40021df4:	e0050000 	.word	0xe0050000
40021df8:	40030dbc 	.word	0x40030dbc
40021dfc:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PVicClearInt:

40021e00 <CyU3PVicClearInt>:
40021e00:	e3a00000 	mov	r0, #0
40021e04:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40021e08:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40021e0c <CyU3PVicDisableAllInterrupts>:
40021e0c:	e3a01000 	mov	r1, #0
40021e10:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
40021e14:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021e18:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40021e1c <CyU3PVicDisableInt>:
40021e1c:	e3a01001 	mov	r1, #1
40021e20:	e1a01011 	lsl	r1, r1, r0
40021e24:	e3a02000 	mov	r2, #0
40021e28:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40021e2c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40021e30 <CyU3PVicEnableInt>:
40021e30:	e3a01001 	mov	r1, #1
40021e34:	e1a01011 	lsl	r1, r1, r0
40021e38:	e3a02000 	mov	r2, #0
40021e3c:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40021e40:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

40021e44 <CyU3PVicEnableInterrupts>:
40021e44:	e3a01000 	mov	r1, #0
40021e48:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
40021e4c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40021e50 <CyU3PVicInit>:
40021e50:	e92d4010 	push	{r4, lr}
40021e54:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
40021e58:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
40021e5c:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40021e60:	e3e00000 	mvn	r0, #0
40021e64:	e3a01000 	mov	r1, #0
40021e68:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021e6c:	e3a00000 	mov	r0, #0
40021e70:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40021e74:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40021e78:	ebffffe0 	bl	40021e00 <CyU3PVicClearInt>
40021e7c:	eb000001 	bl	40021e88 <__CyU3PVicSetupIntVectors_veneer>
40021e80:	e8bd8010 	pop	{r4, pc}
40021e84:	00000000 	andeq	r0, r0, r0

40021e88 <__CyU3PVicSetupIntVectors_veneer>:
40021e88:	e51ff004 	ldr	pc, [pc, #-4]	; 40021e8c <__CyU3PVicSetupIntVectors_veneer+0x4>
40021e8c:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40021e90 <CyFx3Usb2PhySetup>:
40021e90:	e59f0008 	ldr	r0, [pc, #8]	; 40021ea0 <CyFx3Usb2PhySetup+0x10>
40021e94:	e59f1008 	ldr	r1, [pc, #8]	; 40021ea4 <CyFx3Usb2PhySetup+0x14>
40021e98:	e581000c 	str	r0, [r1, #12]
40021e9c:	e12fff1e 	bx	lr
40021ea0:	00d4a480 	.word	0x00d4a480
40021ea4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40021ea8 <CyFx3Usb3LnkRelaxHpTimeout>:
40021ea8:	e59f0008 	ldr	r0, [pc, #8]	; 40021eb8 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
40021eac:	e59f1008 	ldr	r1, [pc, #8]	; 40021ebc <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40021eb0:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40021eb4:	e12fff1e 	bx	lr
40021eb8:	000009c4 	.word	0x000009c4
40021ebc:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40021ec0 <CyFx3Usb3LnkSetup>:
40021ec0:	e59f1024 	ldr	r1, [pc, #36]	; 40021eec <CyFx3Usb3LnkSetup+0x2c>
40021ec4:	e59f0024 	ldr	r0, [pc, #36]	; 40021ef0 <CyFx3Usb3LnkSetup+0x30>
40021ec8:	e580109c 	str	r1, [r0, #156]	; 0x9c
40021ecc:	e5801080 	str	r1, [r0, #128]	; 0x80
40021ed0:	e59f101c 	ldr	r1, [pc, #28]	; 40021ef4 <CyFx3Usb3LnkSetup+0x34>
40021ed4:	e5801084 	str	r1, [r0, #132]	; 0x84
40021ed8:	e59f1018 	ldr	r1, [pc, #24]	; 40021ef8 <CyFx3Usb3LnkSetup+0x38>
40021edc:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40021ee0:	e3a0107d 	mov	r1, #125	; 0x7d
40021ee4:	e5801078 	str	r1, [r0, #120]	; 0x78
40021ee8:	e12fff1e 	bx	lr
40021eec:	00002710 	.word	0x00002710
40021ef0:	e0033000 	.word	0xe0033000
40021ef4:	00fa004b 	.word	0x00fa004b
40021ef8:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

40021efc <CyFx3Usb3SendTP>:
40021efc:	e5902000 	ldr	r2, [r0]
40021f00:	e59f1020 	ldr	r1, [pc, #32]	; 40021f28 <CyFx3Usb3SendTP+0x2c>
40021f04:	e5812450 	str	r2, [r1, #1104]	; 0x450
40021f08:	e5902004 	ldr	r2, [r0, #4]
40021f0c:	e5812454 	str	r2, [r1, #1108]	; 0x454
40021f10:	e5900008 	ldr	r0, [r0, #8]
40021f14:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021f18:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
40021f1c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021f20:	e5810460 	str	r0, [r1, #1120]	; 0x460
40021f24:	e12fff1e 	bx	lr
40021f28:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

40021f2c <CyFx3UsbDmaPrefetchEnable>:
40021f2c:	e3500000 	cmp	r0, #0
40021f30:	e59f001c 	ldr	r0, [pc, #28]	; 40021f54 <CyFx3UsbDmaPrefetchEnable+0x28>
40021f34:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40021f38:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
40021f3c:	12811a09 	addne	r1, r1, #36864	; 0x9000
40021f40:	e3c22903 	bic	r2, r2, #49152	; 0xc000
40021f44:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
40021f48:	e1811002 	orr	r1, r1, r2
40021f4c:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
40021f50:	e12fff1e 	bx	lr
40021f54:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

40021f58 <CyFx3UsbPowerOn>:
40021f58:	e92d4010 	push	{r4, lr}
40021f5c:	e59f406c 	ldr	r4, [pc, #108]	; 40021fd0 <CyFx3UsbPowerOn+0x78>
40021f60:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f64:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40021f68:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021f6c:	e3a0000a 	mov	r0, #10
40021f70:	ebffca78 	bl	40014958 <CyFx3BusyWait>
40021f74:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f78:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021f7c:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021f80:	e3a00064 	mov	r0, #100	; 0x64
40021f84:	ebffca73 	bl	40014958 <CyFx3BusyWait>
40021f88:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021f8c:	e3100001 	tst	r0, #1
40021f90:	0afffffc 	beq	40021f88 <CyFx3UsbPowerOn+0x30>
40021f94:	ebffca65 	bl	40014930 <CyFx3DevIsUsb3Supported>
40021f98:	e59f4034 	ldr	r4, [pc, #52]	; 40021fd4 <CyFx3UsbPowerOn+0x7c>
40021f9c:	e3500000 	cmp	r0, #0
40021fa0:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
40021fa4:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40021fa8:	03a0000a 	moveq	r0, #10
40021fac:	0bffca69 	bleq	40014958 <CyFx3BusyWait>
40021fb0:	ebffca40 	bl	400148b8 <CyFx3DevIsOtgSupported>
40021fb4:	e3500000 	cmp	r0, #0
40021fb8:	18bd8010 	popne	{r4, pc}
40021fbc:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40021fc0:	e584080c 	str	r0, [r4, #2060]	; 0x80c
40021fc4:	e8bd4010 	pop	{r4, lr}
40021fc8:	e3a0000a 	mov	r0, #10
40021fcc:	eaffca61 	b	40014958 <CyFx3BusyWait>
40021fd0:	e0037000 	.word	0xe0037000
40021fd4:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40021fd8 <CyFx3UsbWritePhyReg>:
40021fd8:	e59f2084 	ldr	r2, [pc, #132]	; 40022064 <CyFx3UsbWritePhyReg+0x8c>
40021fdc:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40021fe0:	e3120901 	tst	r2, #16384	; 0x4000
40021fe4:	012fff1e 	bxeq	lr
40021fe8:	e59f2078 	ldr	r2, [pc, #120]	; 40022068 <CyFx3UsbWritePhyReg+0x90>
40021fec:	e5820024 	str	r0, [r2, #36]	; 0x24
40021ff0:	e3803801 	orr	r3, r0, #65536	; 0x10000
40021ff4:	e5823024 	str	r3, [r2, #36]	; 0x24
40021ff8:	e5923028 	ldr	r3, [r2, #40]	; 0x28
40021ffc:	e3130801 	tst	r3, #65536	; 0x10000
40022000:	0afffffc 	beq	40021ff8 <CyFx3UsbWritePhyReg+0x20>
40022004:	e5820024 	str	r0, [r2, #36]	; 0x24
40022008:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002200c:	e3100801 	tst	r0, #65536	; 0x10000
40022010:	1afffffc 	bne	40022008 <CyFx3UsbWritePhyReg+0x30>
40022014:	e5821024 	str	r1, [r2, #36]	; 0x24
40022018:	e3810802 	orr	r0, r1, #131072	; 0x20000
4002201c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022020:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022024:	e3100801 	tst	r0, #65536	; 0x10000
40022028:	0afffffc 	beq	40022020 <CyFx3UsbWritePhyReg+0x48>
4002202c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022030:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022034:	e3100801 	tst	r0, #65536	; 0x10000
40022038:	1afffffc 	bne	40022030 <CyFx3UsbWritePhyReg+0x58>
4002203c:	e3810702 	orr	r0, r1, #524288	; 0x80000
40022040:	e5820024 	str	r0, [r2, #36]	; 0x24
40022044:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022048:	e3100801 	tst	r0, #65536	; 0x10000
4002204c:	0afffffc 	beq	40022044 <CyFx3UsbWritePhyReg+0x6c>
40022050:	e5821024 	str	r1, [r2, #36]	; 0x24
40022054:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022058:	e3100801 	tst	r0, #65536	; 0x10000
4002205c:	1afffffc 	bne	40022054 <CyFx3UsbWritePhyReg+0x7c>
40022060:	e12fff1e 	bx	lr
40022064:	e0031000 	.word	0xe0031000
40022068:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

4002206c <CyU3PDmaDscrChainCreate>:
4002206c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40022070:	e24dd018 	sub	sp, sp, #24
40022074:	e1a04000 	mov	r4, r0
40022078:	e1a05001 	mov	r5, r1
4002207c:	e1a06002 	mov	r6, r2
40022080:	e1a07003 	mov	r7, r3
40022084:	e3a0a000 	mov	sl, #0
40022088:	eb0000a6 	bl	40022328 <CyU3PDmaDscrGetFreeCount>
4002208c:	e1500005 	cmp	r0, r5
40022090:	aa000002 	bge	400220a0 <CyU3PDmaDscrChainCreate+0x34>
40022094:	e3a00010 	mov	r0, #16
40022098:	e28dd018 	add	sp, sp, #24
4002209c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400220a0:	e3540000 	cmp	r4, #0
400220a4:	1a000001 	bne	400220b0 <CyU3PDmaDscrChainCreate+0x44>
400220a8:	e3a00040 	mov	r0, #64	; 0x40
400220ac:	eafffff9 	b	40022098 <CyU3PDmaDscrChainCreate+0x2c>
400220b0:	e3550000 	cmp	r5, #0
400220b4:	1a000001 	bne	400220c0 <CyU3PDmaDscrChainCreate+0x54>
400220b8:	e3a00040 	mov	r0, #64	; 0x40
400220bc:	eafffff5 	b	40022098 <CyU3PDmaDscrChainCreate+0x2c>
400220c0:	e1a09005 	mov	r9, r5
400220c4:	e1a00004 	mov	r0, r4
400220c8:	eb00005e 	bl	40022248 <CyU3PDmaDscrGet>
400220cc:	e1d480b0 	ldrh	r8, [r4]
400220d0:	ea000029 	b	4002217c <CyU3PDmaDscrChainCreate+0x110>
400220d4:	e3590000 	cmp	r9, #0
400220d8:	0a000002 	beq	400220e8 <CyU3PDmaDscrChainCreate+0x7c>
400220dc:	e28d0014 	add	r0, sp, #20
400220e0:	eb000058 	bl	40022248 <CyU3PDmaDscrGet>
400220e4:	ea000001 	b	400220f0 <CyU3PDmaDscrChainCreate+0x84>
400220e8:	e1d400b0 	ldrh	r0, [r4]
400220ec:	e58d0014 	str	r0, [sp, #20]
400220f0:	e3560000 	cmp	r6, #0
400220f4:	0a000015 	beq	40022150 <CyU3PDmaDscrChainCreate+0xe4>
400220f8:	e35a0000 	cmp	sl, #0
400220fc:	1a000013 	bne	40022150 <CyU3PDmaDscrChainCreate+0xe4>
40022100:	e1a00006 	mov	r0, r6
40022104:	ebff8717 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022108:	e58d0004 	str	r0, [sp, #4]
4002210c:	e59f00a0 	ldr	r0, [pc, #160]	; 400221b4 <CyU3PDmaDscrChainCreate+0x148>
40022110:	e0000006 	and	r0, r0, r6
40022114:	e58d0010 	str	r0, [sp, #16]
40022118:	e59d0004 	ldr	r0, [sp, #4]
4002211c:	e3500000 	cmp	r0, #0
40022120:	1a000000 	bne	40022128 <CyU3PDmaDscrChainCreate+0xbc>
40022124:	e3a0a010 	mov	sl, #16
40022128:	e59d0004 	ldr	r0, [sp, #4]
4002212c:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022130:	3a000004 	bcc	40022148 <CyU3PDmaDscrChainCreate+0xdc>
40022134:	e59d0004 	ldr	r0, [sp, #4]
40022138:	e0800006 	add	r0, r0, r6
4002213c:	e59f1074 	ldr	r1, [pc, #116]	; 400221b8 <CyU3PDmaDscrChainCreate+0x14c>
40022140:	e1500001 	cmp	r0, r1
40022144:	3a000004 	bcc	4002215c <CyU3PDmaDscrChainCreate+0xf0>
40022148:	e3a0a010 	mov	sl, #16
4002214c:	ea000002 	b	4002215c <CyU3PDmaDscrChainCreate+0xf0>
40022150:	e3a00000 	mov	r0, #0
40022154:	e58d0004 	str	r0, [sp, #4]
40022158:	e58d0010 	str	r0, [sp, #16]
4002215c:	e58d7008 	str	r7, [sp, #8]
40022160:	e1dd01b4 	ldrh	r0, [sp, #20]
40022164:	e1800800 	orr	r0, r0, r0, lsl #16
40022168:	e58d000c 	str	r0, [sp, #12]
4002216c:	e28d1004 	add	r1, sp, #4
40022170:	e1a00008 	mov	r0, r8
40022174:	eb0000c6 	bl	40022494 <CyU3PDmaDscrSetConfig>
40022178:	e1dd81b4 	ldrh	r8, [sp, #20]
4002217c:	e1b00009 	movs	r0, r9
40022180:	e2491001 	sub	r1, r9, #1
40022184:	e1a09801 	lsl	r9, r1, #16
40022188:	e1a09829 	lsr	r9, r9, #16
4002218c:	1affffd0 	bne	400220d4 <CyU3PDmaDscrChainCreate+0x68>
40022190:	e35a0000 	cmp	sl, #0
40022194:	0a000004 	beq	400221ac <CyU3PDmaDscrChainCreate+0x140>
40022198:	e1d400b0 	ldrh	r0, [r4]
4002219c:	e3a03001 	mov	r3, #1
400221a0:	e1a02003 	mov	r2, r3
400221a4:	e1a01005 	mov	r1, r5
400221a8:	eb000003 	bl	400221bc <CyU3PDmaDscrChainDestroy>
400221ac:	e1a0000a 	mov	r0, sl
400221b0:	eaffffb8 	b	40022098 <CyU3PDmaDscrChainCreate+0x2c>
400221b4:	0000fff0 	.word	0x0000fff0
400221b8:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

400221bc <CyU3PDmaDscrChainDestroy>:
400221bc:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
400221c0:	e1a04000 	mov	r4, r0
400221c4:	e1a05001 	mov	r5, r1
400221c8:	e1a06002 	mov	r6, r2
400221cc:	e1a07003 	mov	r7, r3
400221d0:	ea000015 	b	4002222c <CyU3PDmaDscrChainDestroy+0x70>
400221d4:	e1a0100d 	mov	r1, sp
400221d8:	e1a00004 	mov	r0, r4
400221dc:	eb000091 	bl	40022428 <CyU3PDmaDscrGetConfig>
400221e0:	e3570000 	cmp	r7, #0
400221e4:	0a000004 	beq	400221fc <CyU3PDmaDscrChainDestroy+0x40>
400221e8:	e59d0000 	ldr	r0, [sp]
400221ec:	e3500000 	cmp	r0, #0
400221f0:	0a000001 	beq	400221fc <CyU3PDmaDscrChainDestroy+0x40>
400221f4:	e59d0000 	ldr	r0, [sp]
400221f8:	ebff873d 	bl	40003ef4 <CyU3PDmaBufferFree>
400221fc:	e3560000 	cmp	r6, #0
40022200:	0a000003 	beq	40022214 <CyU3PDmaDscrChainDestroy+0x58>
40022204:	e59d0008 	ldr	r0, [sp, #8]
40022208:	e59f1034 	ldr	r1, [pc, #52]	; 40022244 <CyU3PDmaDscrChainDestroy+0x88>
4002220c:	e0018820 	and	r8, r1, r0, lsr #16
40022210:	ea000002 	b	40022220 <CyU3PDmaDscrChainDestroy+0x64>
40022214:	e59d0008 	ldr	r0, [sp, #8]
40022218:	e1a08800 	lsl	r8, r0, #16
4002221c:	e1a08828 	lsr	r8, r8, #16
40022220:	e1a00004 	mov	r0, r4
40022224:	eb000058 	bl	4002238c <CyU3PDmaDscrPut>
40022228:	e1a04008 	mov	r4, r8
4002222c:	e1b00005 	movs	r0, r5
40022230:	e2451001 	sub	r1, r5, #1
40022234:	e1a05801 	lsl	r5, r1, #16
40022238:	e1a05825 	lsr	r5, r5, #16
4002223c:	1affffe4 	bne	400221d4 <CyU3PDmaDscrChainDestroy+0x18>
40022240:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40022244:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

40022248 <CyU3PDmaDscrGet>:
40022248:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4002224c:	e1a04000 	mov	r4, r0
40022250:	e3a08000 	mov	r8, #0
40022254:	e3540000 	cmp	r4, #0
40022258:	1a000001 	bne	40022264 <CyU3PDmaDscrGet+0x1c>
4002225c:	e3a00040 	mov	r0, #64	; 0x40
40022260:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022264:	e3e01000 	mvn	r1, #0
40022268:	e59f00ac 	ldr	r0, [pc, #172]	; 4002231c <CyU3PDmaDscrGet+0xd4>
4002226c:	ebff9f49 	bl	40009f98 <_txe_mutex_get>
40022270:	e59f00a8 	ldr	r0, [pc, #168]	; 40022320 <CyU3PDmaDscrGet+0xd8>
40022274:	e1d000b0 	ldrh	r0, [r0]
40022278:	e3500000 	cmp	r0, #0
4002227c:	0a000022 	beq	4002230c <CyU3PDmaDscrGet+0xc4>
40022280:	e3a06000 	mov	r6, #0
40022284:	ea00001e 	b	40022304 <CyU3PDmaDscrGet+0xbc>
40022288:	e59f0094 	ldr	r0, [pc, #148]	; 40022324 <CyU3PDmaDscrGet+0xdc>
4002228c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022290:	e3750001 	cmn	r5, #1
40022294:	0a000017 	beq	400222f8 <CyU3PDmaDscrGet+0xb0>
40022298:	e3a07001 	mov	r7, #1
4002229c:	ea000012 	b	400222ec <CyU3PDmaDscrGet+0xa4>
400222a0:	e1150007 	tst	r5, r7
400222a4:	1a00000d 	bne	400222e0 <CyU3PDmaDscrGet+0x98>
400222a8:	e1850007 	orr	r0, r5, r7
400222ac:	e59f1070 	ldr	r1, [pc, #112]	; 40022324 <CyU3PDmaDscrGet+0xdc>
400222b0:	e7810106 	str	r0, [r1, r6, lsl #2]
400222b4:	e2410004 	sub	r0, r1, #4
400222b8:	e1c080b2 	strh	r8, [r0, #2]
400222bc:	e1d000b0 	ldrh	r0, [r0]
400222c0:	e2400001 	sub	r0, r0, #1
400222c4:	e2411004 	sub	r1, r1, #4
400222c8:	e1c100b0 	strh	r0, [r1]
400222cc:	e1c480b0 	strh	r8, [r4]
400222d0:	e2810044 	add	r0, r1, #68	; 0x44
400222d4:	ebff9f64 	bl	4000a06c <_txe_mutex_put>
400222d8:	e3a00000 	mov	r0, #0
400222dc:	eaffffdf 	b	40022260 <CyU3PDmaDscrGet+0x18>
400222e0:	e1a07087 	lsl	r7, r7, #1
400222e4:	e2880001 	add	r0, r8, #1
400222e8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400222ec:	e3570000 	cmp	r7, #0
400222f0:	1affffea 	bne	400222a0 <CyU3PDmaDscrGet+0x58>
400222f4:	ea000001 	b	40022300 <CyU3PDmaDscrGet+0xb8>
400222f8:	e2880020 	add	r0, r8, #32
400222fc:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022300:	e2866001 	add	r6, r6, #1
40022304:	e3560010 	cmp	r6, #16
40022308:	3affffde 	bcc	40022288 <CyU3PDmaDscrGet+0x40>
4002230c:	e59f0008 	ldr	r0, [pc, #8]	; 4002231c <CyU3PDmaDscrGet+0xd4>
40022310:	ebff9f55 	bl	4000a06c <_txe_mutex_put>
40022314:	e3a0004a 	mov	r0, #74	; 0x4a
40022318:	eaffffd0 	b	40022260 <CyU3PDmaDscrGet+0x18>
4002231c:	4003273c 	.word	0x4003273c
40022320:	400326f8 	.word	0x400326f8
40022324:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022328 <CyU3PDmaDscrGetFreeCount>:
40022328:	e59f0004 	ldr	r0, [pc, #4]	; 40022334 <CyU3PDmaDscrGetFreeCount+0xc>
4002232c:	e1d000b0 	ldrh	r0, [r0]
40022330:	e12fff1e 	bx	lr
40022334:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

40022338 <CyU3PDmaDscrListCreate>:
40022338:	e92d4010 	push	{r4, lr}
4002233c:	e3a02040 	mov	r2, #64	; 0x40
40022340:	e3a01000 	mov	r1, #0
40022344:	e59f0034 	ldr	r0, [pc, #52]	; 40022380 <CyU3PDmaDscrListCreate+0x48>
40022348:	ebff84da 	bl	400036b8 <CyU3PMemSet>
4002234c:	e3a00001 	mov	r0, #1
40022350:	e59f102c 	ldr	r1, [pc, #44]	; 40022384 <CyU3PDmaDscrListCreate+0x4c>
40022354:	e5810004 	str	r0, [r1, #4]
40022358:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
4002235c:	e1c100b0 	strh	r0, [r1]
40022360:	e3a00001 	mov	r0, #1
40022364:	e1c100b2 	strh	r0, [r1, #2]
40022368:	e3a03038 	mov	r3, #56	; 0x38
4002236c:	e3a02000 	mov	r2, #0
40022370:	e1a01002 	mov	r1, r2
40022374:	e59f000c 	ldr	r0, [pc, #12]	; 40022388 <CyU3PDmaDscrListCreate+0x50>
40022378:	ebff9e88 	bl	40009da0 <_txe_mutex_create>
4002237c:	e8bd8010 	pop	{r4, pc}
40022380:	400326fc 	.word	0x400326fc
40022384:	400326f8 	.word	0x400326f8
40022388:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

4002238c <CyU3PDmaDscrPut>:
4002238c:	e92d4070 	push	{r4, r5, r6, lr}
40022390:	e1a04000 	mov	r4, r0
40022394:	e3540c02 	cmp	r4, #512	; 0x200
40022398:	aa000001 	bge	400223a4 <CyU3PDmaDscrPut+0x18>
4002239c:	e3540000 	cmp	r4, #0
400223a0:	1a000001 	bne	400223ac <CyU3PDmaDscrPut+0x20>
400223a4:	e3a00040 	mov	r0, #64	; 0x40
400223a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400223ac:	e3e01000 	mvn	r1, #0
400223b0:	e59f0064 	ldr	r0, [pc, #100]	; 4002241c <CyU3PDmaDscrPut+0x90>
400223b4:	ebff9ef7 	bl	40009f98 <_txe_mutex_get>
400223b8:	e1a00004 	mov	r0, r4
400223bc:	e1a01fc4 	asr	r1, r4, #31
400223c0:	e0841da1 	add	r1, r4, r1, lsr #27
400223c4:	e1a062c1 	asr	r6, r1, #5
400223c8:	e59f0050 	ldr	r0, [pc, #80]	; 40022420 <CyU3PDmaDscrPut+0x94>
400223cc:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400223d0:	e1a00004 	mov	r0, r4
400223d4:	e1a01fc4 	asr	r1, r4, #31
400223d8:	e0841da1 	add	r1, r4, r1, lsr #27
400223dc:	e1a012c1 	asr	r1, r1, #5
400223e0:	e0441281 	sub	r1, r4, r1, lsl #5
400223e4:	e3a02001 	mov	r2, #1
400223e8:	e1c55112 	bic	r5, r5, r2, lsl r1
400223ec:	e59f002c 	ldr	r0, [pc, #44]	; 40022420 <CyU3PDmaDscrPut+0x94>
400223f0:	e7805106 	str	r5, [r0, r6, lsl #2]
400223f4:	e2400004 	sub	r0, r0, #4
400223f8:	e1d000b0 	ldrh	r0, [r0]
400223fc:	e2800001 	add	r0, r0, #1
40022400:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40022404:	e59f1018 	ldr	r1, [pc, #24]	; 40022424 <CyU3PDmaDscrPut+0x98>
40022408:	e1c100b0 	strh	r0, [r1]
4002240c:	e2810044 	add	r0, r1, #68	; 0x44
40022410:	ebff9f15 	bl	4000a06c <_txe_mutex_put>
40022414:	e3a00000 	mov	r0, #0
40022418:	eaffffe2 	b	400223a8 <CyU3PDmaDscrPut+0x1c>
4002241c:	4003273c 	.word	0x4003273c
40022420:	400326fc 	.word	0x400326fc
40022424:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022428 <CyU3PDmaDscrGetConfig>:
40022428:	e92d4070 	push	{r4, r5, r6, lr}
4002242c:	e1a05000 	mov	r5, r0
40022430:	e1a04001 	mov	r4, r1
40022434:	e3550c02 	cmp	r5, #512	; 0x200
40022438:	aa000001 	bge	40022444 <CyU3PDmaDscrGetConfig+0x1c>
4002243c:	e3550000 	cmp	r5, #0
40022440:	1a000001 	bne	4002244c <CyU3PDmaDscrGetConfig+0x24>
40022444:	e3a00040 	mov	r0, #64	; 0x40
40022448:	e8bd8070 	pop	{r4, r5, r6, pc}
4002244c:	e3540000 	cmp	r4, #0
40022450:	1a000001 	bne	4002245c <CyU3PDmaDscrGetConfig+0x34>
40022454:	e3a00040 	mov	r0, #64	; 0x40
40022458:	eafffffa 	b	40022448 <CyU3PDmaDscrGetConfig+0x20>
4002245c:	e59f102c 	ldr	r1, [pc, #44]	; 40022490 <CyU3PDmaDscrGetConfig+0x68>
40022460:	e5911000 	ldr	r1, [r1]
40022464:	e0810205 	add	r0, r1, r5, lsl #4
40022468:	e3a01010 	mov	r1, #16
4002246c:	ebffbea5 	bl	40011f08 <CyU3PSysClearDRegion>
40022470:	ebffc119 	bl	400128dc <CyU3PSysBarrierSync>
40022474:	e59f0014 	ldr	r0, [pc, #20]	; 40022490 <CyU3PDmaDscrGetConfig+0x68>
40022478:	e5900000 	ldr	r0, [r0]
4002247c:	e0800205 	add	r0, r0, r5, lsl #4
40022480:	e890004e 	ldm	r0, {r1, r2, r3, r6}
40022484:	e884004e 	stm	r4, {r1, r2, r3, r6}
40022488:	e3a00000 	mov	r0, #0
4002248c:	eaffffed 	b	40022448 <CyU3PDmaDscrGetConfig+0x20>
40022490:	40030dc4 	.word	0x40030dc4

Disassembly of section i.CyU3PDmaDscrSetConfig:

40022494 <CyU3PDmaDscrSetConfig>:
40022494:	e92d4070 	push	{r4, r5, r6, lr}
40022498:	e1a04000 	mov	r4, r0
4002249c:	e1a05001 	mov	r5, r1
400224a0:	e3540c02 	cmp	r4, #512	; 0x200
400224a4:	aa000001 	bge	400224b0 <CyU3PDmaDscrSetConfig+0x1c>
400224a8:	e3540000 	cmp	r4, #0
400224ac:	1a000001 	bne	400224b8 <CyU3PDmaDscrSetConfig+0x24>
400224b0:	e3a00040 	mov	r0, #64	; 0x40
400224b4:	e8bd8070 	pop	{r4, r5, r6, pc}
400224b8:	e3550000 	cmp	r5, #0
400224bc:	1a000001 	bne	400224c8 <CyU3PDmaDscrSetConfig+0x34>
400224c0:	e3a00040 	mov	r0, #64	; 0x40
400224c4:	eafffffa 	b	400224b4 <CyU3PDmaDscrSetConfig+0x20>
400224c8:	e59f002c 	ldr	r0, [pc, #44]	; 400224fc <CyU3PDmaDscrSetConfig+0x68>
400224cc:	e5900000 	ldr	r0, [r0]
400224d0:	e0800204 	add	r0, r0, r4, lsl #4
400224d4:	e895004e 	ldm	r5, {r1, r2, r3, r6}
400224d8:	e880004e 	stm	r0, {r1, r2, r3, r6}
400224dc:	e59f1018 	ldr	r1, [pc, #24]	; 400224fc <CyU3PDmaDscrSetConfig+0x68>
400224e0:	e5911000 	ldr	r1, [r1]
400224e4:	e0810204 	add	r0, r1, r4, lsl #4
400224e8:	e3a01010 	mov	r1, #16
400224ec:	ebffbe85 	bl	40011f08 <CyU3PSysClearDRegion>
400224f0:	ebffc0f9 	bl	400128dc <CyU3PSysBarrierSync>
400224f4:	e3a00000 	mov	r0, #0
400224f8:	eaffffed 	b	400224b4 <CyU3PDmaDscrSetConfig+0x20>
400224fc:	40030dc4 	.word	0x40030dc4

Disassembly of section i.CyU3PDmaIntHandler:

40022500 <CyU3PDmaIntHandler>:
40022500:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40022504:	e1a04000 	mov	r4, r0
40022508:	e1a05001 	mov	r5, r1
4002250c:	e204003f 	and	r0, r4, #63	; 0x3f
40022510:	e1857400 	orr	r7, r5, r0, lsl #8
40022514:	e59f0150 	ldr	r0, [pc, #336]	; 4002266c <CyU3PDmaIntHandler+0x16c>
40022518:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002251c:	e0800385 	add	r0, r0, r5, lsl #7
40022520:	e5900010 	ldr	r0, [r0, #16]
40022524:	e59f1140 	ldr	r1, [pc, #320]	; 4002266c <CyU3PDmaIntHandler+0x16c>
40022528:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002252c:	e0811385 	add	r1, r1, r5, lsl #7
40022530:	e5911014 	ldr	r1, [r1, #20]
40022534:	e0009001 	and	r9, r0, r1
40022538:	e59f0130 	ldr	r0, [pc, #304]	; 40022670 <CyU3PDmaIntHandler+0x170>
4002253c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022540:	e7906105 	ldr	r6, [r0, r5, lsl #2]
40022544:	e3560000 	cmp	r6, #0
40022548:	0a000038 	beq	40022630 <CyU3PDmaIntHandler+0x130>
4002254c:	e1a00000 	nop			; (mov r0, r0)
40022550:	e59f0114 	ldr	r0, [pc, #276]	; 4002266c <CyU3PDmaIntHandler+0x16c>
40022554:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022558:	e0800385 	add	r0, r0, r5, lsl #7
4002255c:	e5900010 	ldr	r0, [r0, #16]
40022560:	e59f1104 	ldr	r1, [pc, #260]	; 4002266c <CyU3PDmaIntHandler+0x16c>
40022564:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022568:	e0811385 	add	r1, r1, r5, lsl #7
4002256c:	e5911014 	ldr	r1, [r1, #20]
40022570:	e0000001 	and	r0, r0, r1
40022574:	e1899000 	orr	r9, r9, r0
40022578:	e2098e12 	and	r8, r9, #288	; 0x120
4002257c:	e59f00e8 	ldr	r0, [pc, #232]	; 4002266c <CyU3PDmaIntHandler+0x16c>
40022580:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022584:	e0800385 	add	r0, r0, r5, lsl #7
40022588:	e5900014 	ldr	r0, [r0, #20]
4002258c:	e1c00008 	bic	r0, r0, r8
40022590:	e59f10d4 	ldr	r1, [pc, #212]	; 4002266c <CyU3PDmaIntHandler+0x16c>
40022594:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022598:	e0811385 	add	r1, r1, r5, lsl #7
4002259c:	e5810014 	str	r0, [r1, #20]
400225a0:	e1c90008 	bic	r0, r9, r8
400225a4:	e59f10c0 	ldr	r1, [pc, #192]	; 4002266c <CyU3PDmaIntHandler+0x16c>
400225a8:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400225ac:	e0811385 	add	r1, r1, r5, lsl #7
400225b0:	e5810010 	str	r0, [r1, #16]
400225b4:	e59f00b0 	ldr	r0, [pc, #176]	; 4002266c <CyU3PDmaIntHandler+0x16c>
400225b8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225bc:	e7900385 	ldr	r0, [r0, r5, lsl #7]
400225c0:	e1a00800 	lsl	r0, r0, #16
400225c4:	e1a00820 	lsr	r0, r0, #16
400225c8:	e58d000c 	str	r0, [sp, #12]
400225cc:	e59f0098 	ldr	r0, [pc, #152]	; 4002266c <CyU3PDmaIntHandler+0x16c>
400225d0:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225d4:	e0800385 	add	r0, r0, r5, lsl #7
400225d8:	e5900010 	ldr	r0, [r0, #16]
400225dc:	e59f1088 	ldr	r1, [pc, #136]	; 4002266c <CyU3PDmaIntHandler+0x16c>
400225e0:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400225e4:	e0811385 	add	r1, r1, r5, lsl #7
400225e8:	e5911014 	ldr	r1, [r1, #20]
400225ec:	e0008001 	and	r8, r0, r1
400225f0:	e3580000 	cmp	r8, #0
400225f4:	1affffd5 	bne	40022550 <CyU3PDmaIntHandler+0x50>
400225f8:	e3a00901 	mov	r0, #16384	; 0x4000
400225fc:	e58d0000 	str	r0, [sp]
40022600:	e59d0000 	ldr	r0, [sp]
40022604:	e58d0000 	str	r0, [sp]
40022608:	e59d0000 	ldr	r0, [sp]
4002260c:	e1800807 	orr	r0, r0, r7, lsl #16
40022610:	e58d0000 	str	r0, [sp]
40022614:	e58d6004 	str	r6, [sp, #4]
40022618:	e58d9008 	str	r9, [sp, #8]
4002261c:	e3a02000 	mov	r2, #0
40022620:	e1a01002 	mov	r1, r2
40022624:	e1a0000d 	mov	r0, sp
40022628:	ebffe060 	bl	4001a7b0 <CyU3PDmaMsgSend>
4002262c:	ea00000d 	b	40022668 <CyU3PDmaIntHandler+0x168>
40022630:	e59f003c 	ldr	r0, [pc, #60]	; 40022674 <CyU3PDmaIntHandler+0x174>
40022634:	e5900000 	ldr	r0, [r0]
40022638:	e3500000 	cmp	r0, #0
4002263c:	0a000005 	beq	40022658 <CyU3PDmaIntHandler+0x158>
40022640:	e1a01009 	mov	r1, r9
40022644:	e1a00007 	mov	r0, r7
40022648:	e59f2024 	ldr	r2, [pc, #36]	; 40022674 <CyU3PDmaIntHandler+0x174>
4002264c:	e5922000 	ldr	r2, [r2]
40022650:	e12fff32 	blx	r2
40022654:	ea000003 	b	40022668 <CyU3PDmaIntHandler+0x168>
40022658:	e59f000c 	ldr	r0, [pc, #12]	; 4002266c <CyU3PDmaIntHandler+0x16c>
4002265c:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022660:	e0800385 	add	r0, r0, r5, lsl #7
40022664:	e5809010 	str	r9, [r0, #16]
40022668:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4002266c:	40030cdc 	.word	0x40030cdc
40022670:	40030d04 	.word	0x40030d04
40022674:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PGpioInit:

40022678 <CyU3PGpioInit>:
40022678:	e92d4070 	push	{r4, r5, r6, lr}
4002267c:	e1a04000 	mov	r4, r0
40022680:	e1a06001 	mov	r6, r1
40022684:	e59f00fc 	ldr	r0, [pc, #252]	; 40022788 <CyU3PGpioInit+0x110>
40022688:	e5900000 	ldr	r0, [r0]
4002268c:	e3500000 	cmp	r0, #0
40022690:	0a000001 	beq	4002269c <CyU3PGpioInit+0x24>
40022694:	e3a00043 	mov	r0, #67	; 0x43
40022698:	e8bd8070 	pop	{r4, r5, r6, pc}
4002269c:	e3540000 	cmp	r4, #0
400226a0:	1a000001 	bne	400226ac <CyU3PGpioInit+0x34>
400226a4:	e3a00041 	mov	r0, #65	; 0x41
400226a8:	eafffffa 	b	40022698 <CyU3PGpioInit+0x20>
400226ac:	e1a00006 	mov	r0, r6
400226b0:	eb00013b 	bl	40022ba4 <CyU3PRegisterGpioCallBack>
400226b4:	ebffc552 	bl	40013c04 <CyU3PLppGpioBlockIsOn>
400226b8:	e3500000 	cmp	r0, #0
400226bc:	0a000003 	beq	400226d0 <CyU3PGpioInit+0x58>
400226c0:	e59f00c4 	ldr	r0, [pc, #196]	; 4002278c <CyU3PGpioInit+0x114>
400226c4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400226c8:	e3100001 	tst	r0, #1
400226cc:	1a000020 	bne	40022754 <CyU3PGpioInit+0xdc>
400226d0:	e1a00004 	mov	r0, r4
400226d4:	ebffc4a8 	bl	4001397c <CyU3PGpioSetClock>
400226d8:	e1a05000 	mov	r5, r0
400226dc:	e3550000 	cmp	r5, #0
400226e0:	0a000001 	beq	400226ec <CyU3PGpioInit+0x74>
400226e4:	e1a00005 	mov	r0, r5
400226e8:	eaffffea 	b	40022698 <CyU3PGpioInit+0x20>
400226ec:	e59f109c 	ldr	r1, [pc, #156]	; 40022790 <CyU3PGpioInit+0x118>
400226f0:	e3a00004 	mov	r0, #4
400226f4:	ebffc546 	bl	40013c14 <CyU3PLppInit>
400226f8:	e1a05000 	mov	r5, r0
400226fc:	e3550000 	cmp	r5, #0
40022700:	0a000001 	beq	4002270c <CyU3PGpioInit+0x94>
40022704:	e1a00005 	mov	r0, r5
40022708:	eaffffe2 	b	40022698 <CyU3PGpioInit+0x20>
4002270c:	e59f0078 	ldr	r0, [pc, #120]	; 4002278c <CyU3PGpioInit+0x114>
40022710:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022714:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022718:	e59f106c 	ldr	r1, [pc, #108]	; 4002278c <CyU3PGpioInit+0x114>
4002271c:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022720:	e3a0000a 	mov	r0, #10
40022724:	ebffc33e 	bl	40013424 <CyU3PBusyWait>
40022728:	e59f005c 	ldr	r0, [pc, #92]	; 4002278c <CyU3PGpioInit+0x114>
4002272c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022730:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022734:	e59f1050 	ldr	r1, [pc, #80]	; 4002278c <CyU3PGpioInit+0x114>
40022738:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
4002273c:	e1a00000 	nop			; (mov r0, r0)
40022740:	e59f0044 	ldr	r0, [pc, #68]	; 4002278c <CyU3PGpioInit+0x114>
40022744:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022748:	e3100001 	tst	r0, #1
4002274c:	0afffffb 	beq	40022740 <CyU3PGpioInit+0xc8>
40022750:	ea000007 	b	40022774 <CyU3PGpioInit+0xfc>
40022754:	e59f1034 	ldr	r1, [pc, #52]	; 40022790 <CyU3PGpioInit+0x118>
40022758:	e3a00004 	mov	r0, #4
4002275c:	ebffc52c 	bl	40013c14 <CyU3PLppInit>
40022760:	e1a05000 	mov	r5, r0
40022764:	e3550000 	cmp	r5, #0
40022768:	0a000001 	beq	40022774 <CyU3PGpioInit+0xfc>
4002276c:	e1a00005 	mov	r0, r5
40022770:	eaffffc8 	b	40022698 <CyU3PGpioInit+0x20>
40022774:	e3a00001 	mov	r0, #1
40022778:	e59f1008 	ldr	r1, [pc, #8]	; 40022788 <CyU3PGpioInit+0x110>
4002277c:	e5810000 	str	r0, [r1]
40022780:	e3a00000 	mov	r0, #0
40022784:	eaffffc3 	b	40022698 <CyU3PGpioInit+0x20>
40022788:	40030edc 	.word	0x40030edc
4002278c:	e0001000 	.word	0xe0001000
40022790:	40022794 	.word	0x40022794

Disassembly of section i.CyU3PGpioInt_Handler:

40022794 <CyU3PGpioInt_Handler>:
40022794:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022798:	e3a06000 	mov	r6, #0
4002279c:	e3a05000 	mov	r5, #0
400227a0:	e3a04001 	mov	r4, #1
400227a4:	ea000029 	b	40022850 <CyU3PGpioInt_Handler+0xbc>
400227a8:	e59f0198 	ldr	r0, [pc, #408]	; 40022948 <CyU3PGpioInt_Handler+0x1b4>
400227ac:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
400227b0:	e1100004 	tst	r0, r4
400227b4:	0a000021 	beq	40022840 <CyU3PGpioInt_Handler+0xac>
400227b8:	e59f0188 	ldr	r0, [pc, #392]	; 40022948 <CyU3PGpioInt_Handler+0x1b4>
400227bc:	e7900205 	ldr	r0, [r0, r5, lsl #4]
400227c0:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400227c4:	e59f117c 	ldr	r1, [pc, #380]	; 40022948 <CyU3PGpioInt_Handler+0x1b4>
400227c8:	e7810205 	str	r0, [r1, r5, lsl #4]
400227cc:	e59f0178 	ldr	r0, [pc, #376]	; 4002294c <CyU3PGpioInt_Handler+0x1b8>
400227d0:	e5900000 	ldr	r0, [r0]
400227d4:	e3500000 	cmp	r0, #0
400227d8:	0a000018 	beq	40022840 <CyU3PGpioInt_Handler+0xac>
400227dc:	e1a06005 	mov	r6, r5
400227e0:	e1a07005 	mov	r7, r5
400227e4:	ea00000e 	b	40022824 <CyU3PGpioInt_Handler+0x90>
400227e8:	e1a00007 	mov	r0, r7
400227ec:	ebffc098 	bl	40012a54 <CyU3PIsGpioComplexIOConfigured>
400227f0:	e3500000 	cmp	r0, #0
400227f4:	0a000001 	beq	40022800 <CyU3PGpioInt_Handler+0x6c>
400227f8:	e1a06007 	mov	r6, r7
400227fc:	ea00000a 	b	4002282c <CyU3PGpioInt_Handler+0x98>
40022800:	e2870020 	add	r0, r7, #32
40022804:	ebffc092 	bl	40012a54 <CyU3PIsGpioComplexIOConfigured>
40022808:	e3500000 	cmp	r0, #0
4002280c:	0a000002 	beq	4002281c <CyU3PGpioInt_Handler+0x88>
40022810:	e2870020 	add	r0, r7, #32
40022814:	e20060ff 	and	r6, r0, #255	; 0xff
40022818:	ea000003 	b	4002282c <CyU3PGpioInt_Handler+0x98>
4002281c:	e2870008 	add	r0, r7, #8
40022820:	e20070ff 	and	r7, r0, #255	; 0xff
40022824:	e3570020 	cmp	r7, #32
40022828:	baffffee 	blt	400227e8 <CyU3PGpioInt_Handler+0x54>
4002282c:	e1a00000 	nop			; (mov r0, r0)
40022830:	e1a00006 	mov	r0, r6
40022834:	e59f1110 	ldr	r1, [pc, #272]	; 4002294c <CyU3PGpioInt_Handler+0x1b8>
40022838:	e5911000 	ldr	r1, [r1]
4002283c:	e12fff31 	blx	r1
40022840:	e59f0108 	ldr	r0, [pc, #264]	; 40022950 <CyU3PGpioInt_Handler+0x1bc>
40022844:	e0004084 	and	r4, r0, r4, lsl #1
40022848:	e2850001 	add	r0, r5, #1
4002284c:	e20050ff 	and	r5, r0, #255	; 0xff
40022850:	e3540080 	cmp	r4, #128	; 0x80
40022854:	9affffd3 	bls	400227a8 <CyU3PGpioInt_Handler+0x14>
40022858:	e59f00e8 	ldr	r0, [pc, #232]	; 40022948 <CyU3PGpioInt_Handler+0x1b4>
4002285c:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022860:	e3500000 	cmp	r0, #0
40022864:	0a000017 	beq	400228c8 <CyU3PGpioInt_Handler+0x134>
40022868:	e3a05000 	mov	r5, #0
4002286c:	ea000013 	b	400228c0 <CyU3PGpioInt_Handler+0x12c>
40022870:	e59f00d0 	ldr	r0, [pc, #208]	; 40022948 <CyU3PGpioInt_Handler+0x1b4>
40022874:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022878:	e3a01001 	mov	r1, #1
4002287c:	e1100511 	tst	r0, r1, lsl r5
40022880:	0a00000c 	beq	400228b8 <CyU3PGpioInt_Handler+0x124>
40022884:	e59f00c8 	ldr	r0, [pc, #200]	; 40022954 <CyU3PGpioInt_Handler+0x1c0>
40022888:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002288c:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022890:	e59f10bc 	ldr	r1, [pc, #188]	; 40022954 <CyU3PGpioInt_Handler+0x1c0>
40022894:	e7810105 	str	r0, [r1, r5, lsl #2]
40022898:	e59f00ac 	ldr	r0, [pc, #172]	; 4002294c <CyU3PGpioInt_Handler+0x1b8>
4002289c:	e5900000 	ldr	r0, [r0]
400228a0:	e3500000 	cmp	r0, #0
400228a4:	0a000003 	beq	400228b8 <CyU3PGpioInt_Handler+0x124>
400228a8:	e1a00005 	mov	r0, r5
400228ac:	e59f1098 	ldr	r1, [pc, #152]	; 4002294c <CyU3PGpioInt_Handler+0x1b8>
400228b0:	e5911000 	ldr	r1, [r1]
400228b4:	e12fff31 	blx	r1
400228b8:	e2850001 	add	r0, r5, #1
400228bc:	e20050ff 	and	r5, r0, #255	; 0xff
400228c0:	e3550020 	cmp	r5, #32
400228c4:	baffffe9 	blt	40022870 <CyU3PGpioInt_Handler+0xdc>
400228c8:	e59f0078 	ldr	r0, [pc, #120]	; 40022948 <CyU3PGpioInt_Handler+0x1b4>
400228cc:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
400228d0:	e3500000 	cmp	r0, #0
400228d4:	0a00001a 	beq	40022944 <CyU3PGpioInt_Handler+0x1b0>
400228d8:	e3a05000 	mov	r5, #0
400228dc:	ea000016 	b	4002293c <CyU3PGpioInt_Handler+0x1a8>
400228e0:	e59f0060 	ldr	r0, [pc, #96]	; 40022948 <CyU3PGpioInt_Handler+0x1b4>
400228e4:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
400228e8:	e3a01001 	mov	r1, #1
400228ec:	e1100511 	tst	r0, r1, lsl r5
400228f0:	0a00000f 	beq	40022934 <CyU3PGpioInt_Handler+0x1a0>
400228f4:	e59f0058 	ldr	r0, [pc, #88]	; 40022954 <CyU3PGpioInt_Handler+0x1c0>
400228f8:	e2851020 	add	r1, r5, #32
400228fc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022900:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022904:	e59f0048 	ldr	r0, [pc, #72]	; 40022954 <CyU3PGpioInt_Handler+0x1c0>
40022908:	e2852020 	add	r2, r5, #32
4002290c:	e7801102 	str	r1, [r0, r2, lsl #2]
40022910:	e59f0034 	ldr	r0, [pc, #52]	; 4002294c <CyU3PGpioInt_Handler+0x1b8>
40022914:	e5900000 	ldr	r0, [r0]
40022918:	e3500000 	cmp	r0, #0
4002291c:	0a000004 	beq	40022934 <CyU3PGpioInt_Handler+0x1a0>
40022920:	e2851020 	add	r1, r5, #32
40022924:	e20100ff 	and	r0, r1, #255	; 0xff
40022928:	e59f101c 	ldr	r1, [pc, #28]	; 4002294c <CyU3PGpioInt_Handler+0x1b8>
4002292c:	e5911000 	ldr	r1, [r1]
40022930:	e12fff31 	blx	r1
40022934:	e2850001 	add	r0, r5, #1
40022938:	e20050ff 	and	r5, r0, #255	; 0xff
4002293c:	e3550020 	cmp	r5, #32
40022940:	baffffe6 	blt	400228e0 <CyU3PGpioInt_Handler+0x14c>
40022944:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022948:	e0001000 	.word	0xe0001000
4002294c:	40030ee0 	.word	0x40030ee0
40022950:	0000ffff 	.word	0x0000ffff
40022954:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022958 <CyU3PGpioSetSimpleConfig>:
40022958:	e92d4070 	push	{r4, r5, r6, lr}
4002295c:	e1a04000 	mov	r4, r0
40022960:	e1a05001 	mov	r5, r1
40022964:	e3a06000 	mov	r6, #0
40022968:	e59f00d0 	ldr	r0, [pc, #208]	; 40022a40 <CyU3PGpioSetSimpleConfig+0xe8>
4002296c:	e5900000 	ldr	r0, [r0]
40022970:	e3500000 	cmp	r0, #0
40022974:	1a000001 	bne	40022980 <CyU3PGpioSetSimpleConfig+0x28>
40022978:	e3a00042 	mov	r0, #66	; 0x42
4002297c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022980:	e1a00004 	mov	r0, r4
40022984:	ebffc03e 	bl	40012a84 <CyU3PIsGpioValid>
40022988:	e3500000 	cmp	r0, #0
4002298c:	1a000001 	bne	40022998 <CyU3PGpioSetSimpleConfig+0x40>
40022990:	e3a00040 	mov	r0, #64	; 0x40
40022994:	eafffff8 	b	4002297c <CyU3PGpioSetSimpleConfig+0x24>
40022998:	e3550000 	cmp	r5, #0
4002299c:	1a000001 	bne	400229a8 <CyU3PGpioSetSimpleConfig+0x50>
400229a0:	e3a00041 	mov	r0, #65	; 0x41
400229a4:	eafffff4 	b	4002297c <CyU3PGpioSetSimpleConfig+0x24>
400229a8:	e5d50010 	ldrb	r0, [r5, #16]
400229ac:	e3500005 	cmp	r0, #5
400229b0:	da000001 	ble	400229bc <CyU3PGpioSetSimpleConfig+0x64>
400229b4:	e3a00040 	mov	r0, #64	; 0x40
400229b8:	eaffffef 	b	4002297c <CyU3PGpioSetSimpleConfig+0x24>
400229bc:	e1a00004 	mov	r0, r4
400229c0:	ebffc029 	bl	40012a6c <CyU3PIsGpioSimpleIOConfigured>
400229c4:	e3500000 	cmp	r0, #0
400229c8:	1a000001 	bne	400229d4 <CyU3PGpioSetSimpleConfig+0x7c>
400229cc:	e3a00044 	mov	r0, #68	; 0x44
400229d0:	eaffffe9 	b	4002297c <CyU3PGpioSetSimpleConfig+0x24>
400229d4:	e595000c 	ldr	r0, [r5, #12]
400229d8:	e3500000 	cmp	r0, #0
400229dc:	0a000000 	beq	400229e4 <CyU3PGpioSetSimpleConfig+0x8c>
400229e0:	e3866040 	orr	r6, r6, #64	; 0x40
400229e4:	e5950004 	ldr	r0, [r5, #4]
400229e8:	e3500000 	cmp	r0, #0
400229ec:	0a000000 	beq	400229f4 <CyU3PGpioSetSimpleConfig+0x9c>
400229f0:	e3866010 	orr	r6, r6, #16
400229f4:	e5950008 	ldr	r0, [r5, #8]
400229f8:	e3500000 	cmp	r0, #0
400229fc:	0a000000 	beq	40022a04 <CyU3PGpioSetSimpleConfig+0xac>
40022a00:	e3866020 	orr	r6, r6, #32
40022a04:	e5950000 	ldr	r0, [r5]
40022a08:	e3500000 	cmp	r0, #0
40022a0c:	0a000000 	beq	40022a14 <CyU3PGpioSetSimpleConfig+0xbc>
40022a10:	e3866001 	orr	r6, r6, #1
40022a14:	e5d50010 	ldrb	r0, [r5, #16]
40022a18:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022a1c:	e0010c00 	and	r0, r1, r0, lsl #24
40022a20:	e1866000 	orr	r6, r6, r0
40022a24:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022a28:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022a2c:	e59f0010 	ldr	r0, [pc, #16]	; 40022a44 <CyU3PGpioSetSimpleConfig+0xec>
40022a30:	e7806104 	str	r6, [r0, r4, lsl #2]
40022a34:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022a38:	e3a00000 	mov	r0, #0
40022a3c:	eaffffce 	b	4002297c <CyU3PGpioSetSimpleConfig+0x24>
40022a40:	40030edc 	.word	0x40030edc
40022a44:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022a48 <CyU3PGpioSetValue>:
40022a48:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022a4c:	e1a04000 	mov	r4, r0
40022a50:	e1a05001 	mov	r5, r1
40022a54:	e59f00b8 	ldr	r0, [pc, #184]	; 40022b14 <CyU3PGpioSetValue+0xcc>
40022a58:	e5900000 	ldr	r0, [r0]
40022a5c:	e3500000 	cmp	r0, #0
40022a60:	1a000001 	bne	40022a6c <CyU3PGpioSetValue+0x24>
40022a64:	e3a00042 	mov	r0, #66	; 0x42
40022a68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022a6c:	e1a00004 	mov	r0, r4
40022a70:	ebffc003 	bl	40012a84 <CyU3PIsGpioValid>
40022a74:	e3500000 	cmp	r0, #0
40022a78:	1a000001 	bne	40022a84 <CyU3PGpioSetValue+0x3c>
40022a7c:	e3a00040 	mov	r0, #64	; 0x40
40022a80:	eafffff8 	b	40022a68 <CyU3PGpioSetValue+0x20>
40022a84:	e1a00004 	mov	r0, r4
40022a88:	ebffbff7 	bl	40012a6c <CyU3PIsGpioSimpleIOConfigured>
40022a8c:	e3500000 	cmp	r0, #0
40022a90:	0a000002 	beq	40022aa0 <CyU3PGpioSetValue+0x58>
40022a94:	e59f007c 	ldr	r0, [pc, #124]	; 40022b18 <CyU3PGpioSetValue+0xd0>
40022a98:	e0807104 	add	r7, r0, r4, lsl #2
40022a9c:	ea00000d 	b	40022ad8 <CyU3PGpioSetValue+0x90>
40022aa0:	e1a00004 	mov	r0, r4
40022aa4:	ebffbfea 	bl	40012a54 <CyU3PIsGpioComplexIOConfigured>
40022aa8:	e3500000 	cmp	r0, #0
40022aac:	0a000007 	beq	40022ad0 <CyU3PGpioSetValue+0x88>
40022ab0:	e1a00004 	mov	r0, r4
40022ab4:	e1a01fc4 	asr	r1, r4, #31
40022ab8:	e0841ea1 	add	r1, r4, r1, lsr #29
40022abc:	e1a011c1 	asr	r1, r1, #3
40022ac0:	e0441181 	sub	r1, r4, r1, lsl #3
40022ac4:	e59f2050 	ldr	r2, [pc, #80]	; 40022b1c <CyU3PGpioSetValue+0xd4>
40022ac8:	e0827201 	add	r7, r2, r1, lsl #4
40022acc:	ea000001 	b	40022ad8 <CyU3PGpioSetValue+0x90>
40022ad0:	e3a00044 	mov	r0, #68	; 0x44
40022ad4:	eaffffe3 	b	40022a68 <CyU3PGpioSetValue+0x20>
40022ad8:	e5970000 	ldr	r0, [r7]
40022adc:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022ae0:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022ae4:	1a000001 	bne	40022af0 <CyU3PGpioSetValue+0xa8>
40022ae8:	e3a00044 	mov	r0, #68	; 0x44
40022aec:	eaffffdd 	b	40022a68 <CyU3PGpioSetValue+0x20>
40022af0:	e3550000 	cmp	r5, #0
40022af4:	0a000001 	beq	40022b00 <CyU3PGpioSetValue+0xb8>
40022af8:	e3866001 	orr	r6, r6, #1
40022afc:	ea000000 	b	40022b04 <CyU3PGpioSetValue+0xbc>
40022b00:	e3c66001 	bic	r6, r6, #1
40022b04:	e5876000 	str	r6, [r7]
40022b08:	e5976000 	ldr	r6, [r7]
40022b0c:	e3a00000 	mov	r0, #0
40022b10:	eaffffd4 	b	40022a68 <CyU3PGpioSetValue+0x20>
40022b14:	40030edc 	.word	0x40030edc
40022b18:	e0001100 	.word	0xe0001100
40022b1c:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022b20 <CyU3PGpioSimpleGetValue>:
40022b20:	e92d4070 	push	{r4, r5, r6, lr}
40022b24:	e1a04000 	mov	r4, r0
40022b28:	e1a06001 	mov	r6, r1
40022b2c:	e59f0068 	ldr	r0, [pc, #104]	; 40022b9c <CyU3PGpioSimpleGetValue+0x7c>
40022b30:	e5900000 	ldr	r0, [r0]
40022b34:	e3500000 	cmp	r0, #0
40022b38:	1a000001 	bne	40022b44 <CyU3PGpioSimpleGetValue+0x24>
40022b3c:	e3a00042 	mov	r0, #66	; 0x42
40022b40:	e8bd8070 	pop	{r4, r5, r6, pc}
40022b44:	e1a00004 	mov	r0, r4
40022b48:	ebffbfcd 	bl	40012a84 <CyU3PIsGpioValid>
40022b4c:	e3500000 	cmp	r0, #0
40022b50:	1a000001 	bne	40022b5c <CyU3PGpioSimpleGetValue+0x3c>
40022b54:	e3a00040 	mov	r0, #64	; 0x40
40022b58:	eafffff8 	b	40022b40 <CyU3PGpioSimpleGetValue+0x20>
40022b5c:	e3560000 	cmp	r6, #0
40022b60:	1a000001 	bne	40022b6c <CyU3PGpioSimpleGetValue+0x4c>
40022b64:	e3a00041 	mov	r0, #65	; 0x41
40022b68:	eafffff4 	b	40022b40 <CyU3PGpioSimpleGetValue+0x20>
40022b6c:	e59f002c 	ldr	r0, [pc, #44]	; 40022ba0 <CyU3PGpioSimpleGetValue+0x80>
40022b70:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022b74:	e3150040 	tst	r5, #64	; 0x40
40022b78:	0a000003 	beq	40022b8c <CyU3PGpioSimpleGetValue+0x6c>
40022b7c:	e2050002 	and	r0, r5, #2
40022b80:	e1a000a0 	lsr	r0, r0, #1
40022b84:	e5860000 	str	r0, [r6]
40022b88:	ea000001 	b	40022b94 <CyU3PGpioSimpleGetValue+0x74>
40022b8c:	e2050001 	and	r0, r5, #1
40022b90:	e5860000 	str	r0, [r6]
40022b94:	e3a00000 	mov	r0, #0
40022b98:	eaffffe8 	b	40022b40 <CyU3PGpioSimpleGetValue+0x20>
40022b9c:	40030edc 	.word	0x40030edc
40022ba0:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40022ba4 <CyU3PRegisterGpioCallBack>:
40022ba4:	e59f1004 	ldr	r1, [pc, #4]	; 40022bb0 <CyU3PRegisterGpioCallBack+0xc>
40022ba8:	e5810000 	str	r0, [r1]
40022bac:	e12fff1e 	bx	lr
40022bb0:	40030ee0 	.word	0x40030ee0

Disassembly of section i.CyU3PRegisterUartCallBack:

40022bb4 <CyU3PRegisterUartCallBack>:
40022bb4:	e59f1004 	ldr	r1, [pc, #4]	; 40022bc0 <CyU3PRegisterUartCallBack+0xc>
40022bb8:	e5810000 	str	r0, [r1]
40022bbc:	e12fff1e 	bx	lr
40022bc0:	40030ef0 	.word	0x40030ef0

Disassembly of section i.CyU3PUartGetLock:

40022bc4 <CyU3PUartGetLock>:
40022bc4:	e92d4010 	push	{r4, lr}
40022bc8:	e3a04000 	mov	r4, #0
40022bcc:	e59f0044 	ldr	r0, [pc, #68]	; 40022c18 <CyU3PUartGetLock+0x54>
40022bd0:	e5900000 	ldr	r0, [r0]
40022bd4:	e3500000 	cmp	r0, #0
40022bd8:	1a000001 	bne	40022be4 <CyU3PUartGetLock+0x20>
40022bdc:	e3a00044 	mov	r0, #68	; 0x44
40022be0:	e8bd8010 	pop	{r4, pc}
40022be4:	ebff96d6 	bl	40008744 <_tx_thread_identify>
40022be8:	e3500000 	cmp	r0, #0
40022bec:	0a000000 	beq	40022bf4 <CyU3PUartGetLock+0x30>
40022bf0:	e3e04000 	mvn	r4, #0
40022bf4:	e1a01004 	mov	r1, r4
40022bf8:	e59f001c 	ldr	r0, [pc, #28]	; 40022c1c <CyU3PUartGetLock+0x58>
40022bfc:	ebff9ce5 	bl	40009f98 <_txe_mutex_get>
40022c00:	e3500000 	cmp	r0, #0
40022c04:	0a000001 	beq	40022c10 <CyU3PUartGetLock+0x4c>
40022c08:	e3a0001d 	mov	r0, #29
40022c0c:	eafffff3 	b	40022be0 <CyU3PUartGetLock+0x1c>
40022c10:	e3a00000 	mov	r0, #0
40022c14:	eafffff1 	b	40022be0 <CyU3PUartGetLock+0x1c>
40022c18:	40030eec 	.word	0x40030eec
40022c1c:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

40022c20 <CyU3PUartInit>:
40022c20:	e92d4010 	push	{r4, lr}
40022c24:	e3a00003 	mov	r0, #3
40022c28:	ebffbf9c 	bl	40012aa0 <CyU3PIsLppIOConfigured>
40022c2c:	e3500000 	cmp	r0, #0
40022c30:	1a000001 	bne	40022c3c <CyU3PUartInit+0x1c>
40022c34:	e3a00044 	mov	r0, #68	; 0x44
40022c38:	e8bd8010 	pop	{r4, pc}
40022c3c:	e59f00b8 	ldr	r0, [pc, #184]	; 40022cfc <CyU3PUartInit+0xdc>
40022c40:	e5900000 	ldr	r0, [r0]
40022c44:	e3500000 	cmp	r0, #0
40022c48:	0a000001 	beq	40022c54 <CyU3PUartInit+0x34>
40022c4c:	e3a00043 	mov	r0, #67	; 0x43
40022c50:	eafffff8 	b	40022c38 <CyU3PUartInit+0x18>
40022c54:	e3a03038 	mov	r3, #56	; 0x38
40022c58:	e3a02000 	mov	r2, #0
40022c5c:	e1a01002 	mov	r1, r2
40022c60:	e59f0098 	ldr	r0, [pc, #152]	; 40022d00 <CyU3PUartInit+0xe0>
40022c64:	ebff9c4d 	bl	40009da0 <_txe_mutex_create>
40022c68:	e3a00d96 	mov	r0, #9600	; 0x2580
40022c6c:	ebffc506 	bl	4001408c <CyU3PUartSetClock>
40022c70:	e1a04000 	mov	r4, r0
40022c74:	e3540000 	cmp	r4, #0
40022c78:	0a000001 	beq	40022c84 <CyU3PUartInit+0x64>
40022c7c:	e1a00004 	mov	r0, r4
40022c80:	eaffffec 	b	40022c38 <CyU3PUartInit+0x18>
40022c84:	e59f1078 	ldr	r1, [pc, #120]	; 40022d04 <CyU3PUartInit+0xe4>
40022c88:	e3a00003 	mov	r0, #3
40022c8c:	ebffc3e0 	bl	40013c14 <CyU3PLppInit>
40022c90:	e1a04000 	mov	r4, r0
40022c94:	e3540000 	cmp	r4, #0
40022c98:	0a000001 	beq	40022ca4 <CyU3PUartInit+0x84>
40022c9c:	e1a00004 	mov	r0, r4
40022ca0:	eaffffe4 	b	40022c38 <CyU3PUartInit+0x18>
40022ca4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ca8:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022cac:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022cb0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022cb4:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022cb8:	e3a0000a 	mov	r0, #10
40022cbc:	ebffc1d8 	bl	40013424 <CyU3PBusyWait>
40022cc0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022cc4:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022cc8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022ccc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022cd0:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022cd4:	e1a00000 	nop			; (mov r0, r0)
40022cd8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022cdc:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022ce0:	e3100001 	tst	r0, #1
40022ce4:	0afffffb 	beq	40022cd8 <CyU3PUartInit+0xb8>
40022ce8:	e3a00001 	mov	r0, #1
40022cec:	e59f1008 	ldr	r1, [pc, #8]	; 40022cfc <CyU3PUartInit+0xdc>
40022cf0:	e5810000 	str	r0, [r1]
40022cf4:	e3a00000 	mov	r0, #0
40022cf8:	eaffffce 	b	40022c38 <CyU3PUartInit+0x18>
40022cfc:	40030eec 	.word	0x40030eec
40022d00:	40032e1c 	.word	0x40032e1c
40022d04:	40022d08 	.word	0x40022d08

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40022d08 <CyU3PUartInt_ThreadHandler>:
40022d08:	e92d4070 	push	{r4, r5, r6, lr}
40022d0c:	ebffffac 	bl	40022bc4 <CyU3PUartGetLock>
40022d10:	e1a05000 	mov	r5, r0
40022d14:	e3550000 	cmp	r5, #0
40022d18:	0a000000 	beq	40022d20 <CyU3PUartInt_ThreadHandler+0x18>
40022d1c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022d20:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d24:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40022d28:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022d2c:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40022d30:	e0004001 	and	r4, r0, r1
40022d34:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d38:	e5804808 	str	r4, [r0, #2056]	; 0x808
40022d3c:	e59f0078 	ldr	r0, [pc, #120]	; 40022dbc <CyU3PUartInt_ThreadHandler+0xb4>
40022d40:	e5900000 	ldr	r0, [r0]
40022d44:	e3500000 	cmp	r0, #0
40022d48:	1a000001 	bne	40022d54 <CyU3PUartInt_ThreadHandler+0x4c>
40022d4c:	eb00001b 	bl	40022dc0 <CyU3PUartReleaseLock>
40022d50:	eafffff1 	b	40022d1c <CyU3PUartInt_ThreadHandler+0x14>
40022d54:	e3140001 	tst	r4, #1
40022d58:	0a000004 	beq	40022d70 <CyU3PUartInt_ThreadHandler+0x68>
40022d5c:	e3a01000 	mov	r1, #0
40022d60:	e1a00001 	mov	r0, r1
40022d64:	e59f2050 	ldr	r2, [pc, #80]	; 40022dbc <CyU3PUartInt_ThreadHandler+0xb4>
40022d68:	e5922000 	ldr	r2, [r2]
40022d6c:	e12fff32 	blx	r2
40022d70:	e3140008 	tst	r4, #8
40022d74:	0a000004 	beq	40022d8c <CyU3PUartInt_ThreadHandler+0x84>
40022d78:	e3a01000 	mov	r1, #0
40022d7c:	e3a00001 	mov	r0, #1
40022d80:	e59f2034 	ldr	r2, [pc, #52]	; 40022dbc <CyU3PUartInt_ThreadHandler+0xb4>
40022d84:	e5922000 	ldr	r2, [r2]
40022d88:	e12fff32 	blx	r2
40022d8c:	e3140c02 	tst	r4, #512	; 0x200
40022d90:	0a000007 	beq	40022db4 <CyU3PUartInt_ThreadHandler+0xac>
40022d94:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d98:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
40022d9c:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40022da0:	e1a01c20 	lsr	r1, r0, #24
40022da4:	e3a00002 	mov	r0, #2
40022da8:	e59f200c 	ldr	r2, [pc, #12]	; 40022dbc <CyU3PUartInt_ThreadHandler+0xb4>
40022dac:	e5922000 	ldr	r2, [r2]
40022db0:	e12fff32 	blx	r2
40022db4:	eb000001 	bl	40022dc0 <CyU3PUartReleaseLock>
40022db8:	eaffffd7 	b	40022d1c <CyU3PUartInt_ThreadHandler+0x14>
40022dbc:	40030ef0 	.word	0x40030ef0

Disassembly of section i.CyU3PUartReleaseLock:

40022dc0 <CyU3PUartReleaseLock>:
40022dc0:	e92d4010 	push	{r4, lr}
40022dc4:	e59f0030 	ldr	r0, [pc, #48]	; 40022dfc <CyU3PUartReleaseLock+0x3c>
40022dc8:	e5900000 	ldr	r0, [r0]
40022dcc:	e3500000 	cmp	r0, #0
40022dd0:	1a000001 	bne	40022ddc <CyU3PUartReleaseLock+0x1c>
40022dd4:	e3a00044 	mov	r0, #68	; 0x44
40022dd8:	e8bd8010 	pop	{r4, pc}
40022ddc:	e59f001c 	ldr	r0, [pc, #28]	; 40022e00 <CyU3PUartReleaseLock+0x40>
40022de0:	ebff9ca1 	bl	4000a06c <_txe_mutex_put>
40022de4:	e3500000 	cmp	r0, #0
40022de8:	0a000001 	beq	40022df4 <CyU3PUartReleaseLock+0x34>
40022dec:	e3a0001d 	mov	r0, #29
40022df0:	eafffff8 	b	40022dd8 <CyU3PUartReleaseLock+0x18>
40022df4:	e3a00000 	mov	r0, #0
40022df8:	eafffff6 	b	40022dd8 <CyU3PUartReleaseLock+0x18>
40022dfc:	40030eec 	.word	0x40030eec
40022e00:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

40022e04 <CyU3PUartSetConfig>:
40022e04:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022e08:	e1a04000 	mov	r4, r0
40022e0c:	e1a05001 	mov	r5, r1
40022e10:	e3a07000 	mov	r7, #0
40022e14:	e59f01f0 	ldr	r0, [pc, #496]	; 4002300c <CyU3PUartSetConfig+0x208>
40022e18:	e5900000 	ldr	r0, [r0]
40022e1c:	e3500000 	cmp	r0, #0
40022e20:	1a000001 	bne	40022e2c <CyU3PUartSetConfig+0x28>
40022e24:	e3a00042 	mov	r0, #66	; 0x42
40022e28:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022e2c:	e3540000 	cmp	r4, #0
40022e30:	1a000001 	bne	40022e3c <CyU3PUartSetConfig+0x38>
40022e34:	e3a00041 	mov	r0, #65	; 0x41
40022e38:	eafffffa 	b	40022e28 <CyU3PUartSetConfig+0x24>
40022e3c:	e5940004 	ldr	r0, [r4, #4]
40022e40:	e5941000 	ldr	r1, [r4]
40022e44:	e1900001 	orrs	r0, r0, r1
40022e48:	1a000001 	bne	40022e54 <CyU3PUartSetConfig+0x50>
40022e4c:	e3a00040 	mov	r0, #64	; 0x40
40022e50:	eafffff4 	b	40022e28 <CyU3PUartSetConfig+0x24>
40022e54:	e5d40015 	ldrb	r0, [r4, #21]
40022e58:	e3500003 	cmp	r0, #3
40022e5c:	ba000001 	blt	40022e68 <CyU3PUartSetConfig+0x64>
40022e60:	e3a00040 	mov	r0, #64	; 0x40
40022e64:	eaffffef 	b	40022e28 <CyU3PUartSetConfig+0x24>
40022e68:	e5d40014 	ldrb	r0, [r4, #20]
40022e6c:	e3500001 	cmp	r0, #1
40022e70:	0a000004 	beq	40022e88 <CyU3PUartSetConfig+0x84>
40022e74:	e5d40014 	ldrb	r0, [r4, #20]
40022e78:	e3500002 	cmp	r0, #2
40022e7c:	0a000001 	beq	40022e88 <CyU3PUartSetConfig+0x84>
40022e80:	e3a00040 	mov	r0, #64	; 0x40
40022e84:	eaffffe7 	b	40022e28 <CyU3PUartSetConfig+0x24>
40022e88:	e594000c 	ldr	r0, [r4, #12]
40022e8c:	e3500000 	cmp	r0, #0
40022e90:	1a000003 	bne	40022ea4 <CyU3PUartSetConfig+0xa0>
40022e94:	e3550000 	cmp	r5, #0
40022e98:	0a000001 	beq	40022ea4 <CyU3PUartSetConfig+0xa0>
40022e9c:	e3a00040 	mov	r0, #64	; 0x40
40022ea0:	eaffffe0 	b	40022e28 <CyU3PUartSetConfig+0x24>
40022ea4:	ebffff46 	bl	40022bc4 <CyU3PUartGetLock>
40022ea8:	e1a06000 	mov	r6, r0
40022eac:	e3560000 	cmp	r6, #0
40022eb0:	0a000001 	beq	40022ebc <CyU3PUartSetConfig+0xb8>
40022eb4:	e3a0001d 	mov	r0, #29
40022eb8:	eaffffda 	b	40022e28 <CyU3PUartSetConfig+0x24>
40022ebc:	e5940010 	ldr	r0, [r4, #16]
40022ec0:	ebffc471 	bl	4001408c <CyU3PUartSetClock>
40022ec4:	e1a06000 	mov	r6, r0
40022ec8:	e3560000 	cmp	r6, #0
40022ecc:	0a000002 	beq	40022edc <CyU3PUartSetConfig+0xd8>
40022ed0:	ebffffba 	bl	40022dc0 <CyU3PUartReleaseLock>
40022ed4:	e1a00006 	mov	r0, r6
40022ed8:	eaffffd2 	b	40022e28 <CyU3PUartSetConfig+0x24>
40022edc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ee0:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40022ee4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022ee8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022eec:	e5810800 	str	r0, [r1, #2048]	; 0x800
40022ef0:	e5940004 	ldr	r0, [r4, #4]
40022ef4:	e3500000 	cmp	r0, #0
40022ef8:	0a000001 	beq	40022f04 <CyU3PUartSetConfig+0x100>
40022efc:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40022f00:	e3877001 	orr	r7, r7, #1
40022f04:	e5940000 	ldr	r0, [r4]
40022f08:	e3500000 	cmp	r0, #0
40022f0c:	0a000000 	beq	40022f14 <CyU3PUartSetConfig+0x110>
40022f10:	e3877002 	orr	r7, r7, #2
40022f14:	e5940008 	ldr	r0, [r4, #8]
40022f18:	e3500000 	cmp	r0, #0
40022f1c:	0a000000 	beq	40022f24 <CyU3PUartSetConfig+0x120>
40022f20:	e3877a06 	orr	r7, r7, #24576	; 0x6000
40022f24:	e594000c 	ldr	r0, [r4, #12]
40022f28:	e3500000 	cmp	r0, #0
40022f2c:	0a000004 	beq	40022f44 <CyU3PUartSetConfig+0x140>
40022f30:	e3877b01 	orr	r7, r7, #1024	; 0x400
40022f34:	e3a00001 	mov	r0, #1
40022f38:	e59f10d0 	ldr	r1, [pc, #208]	; 40023010 <CyU3PUartSetConfig+0x20c>
40022f3c:	e5810000 	str	r0, [r1]
40022f40:	ea000002 	b	40022f50 <CyU3PUartSetConfig+0x14c>
40022f44:	e3a00000 	mov	r0, #0
40022f48:	e59f10c0 	ldr	r1, [pc, #192]	; 40023010 <CyU3PUartSetConfig+0x20c>
40022f4c:	e5810000 	str	r0, [r1]
40022f50:	e5d40014 	ldrb	r0, [r4, #20]
40022f54:	e3a01c03 	mov	r1, #768	; 0x300
40022f58:	e0010400 	and	r0, r1, r0, lsl #8
40022f5c:	e1877000 	orr	r7, r7, r0
40022f60:	e5d40015 	ldrb	r0, [r4, #21]
40022f64:	e3500001 	cmp	r0, #1
40022f68:	0a000002 	beq	40022f78 <CyU3PUartSetConfig+0x174>
40022f6c:	e3500002 	cmp	r0, #2
40022f70:	1a000006 	bne	40022f90 <CyU3PUartSetConfig+0x18c>
40022f74:	ea000002 	b	40022f84 <CyU3PUartSetConfig+0x180>
40022f78:	e1a00000 	nop			; (mov r0, r0)
40022f7c:	e3877008 	orr	r7, r7, #8
40022f80:	ea000004 	b	40022f98 <CyU3PUartSetConfig+0x194>
40022f84:	e1a00000 	nop			; (mov r0, r0)
40022f88:	e3877018 	orr	r7, r7, #24
40022f8c:	ea000001 	b	40022f98 <CyU3PUartSetConfig+0x194>
40022f90:	e1a00000 	nop			; (mov r0, r0)
40022f94:	e1a00000 	nop			; (mov r0, r0)
40022f98:	e1a00000 	nop			; (mov r0, r0)
40022f9c:	e3877807 	orr	r7, r7, #458752	; 0x70000
40022fa0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022fa4:	e5807800 	str	r7, [r0, #2048]	; 0x800
40022fa8:	e59f0064 	ldr	r0, [pc, #100]	; 40023014 <CyU3PUartSetConfig+0x210>
40022fac:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fb0:	e5810818 	str	r0, [r1, #2072]	; 0x818
40022fb4:	e1a00005 	mov	r0, r5
40022fb8:	ebfffefd 	bl	40022bb4 <CyU3PRegisterUartCallBack>
40022fbc:	e3550000 	cmp	r5, #0
40022fc0:	0a000003 	beq	40022fd4 <CyU3PUartSetConfig+0x1d0>
40022fc4:	e59f004c 	ldr	r0, [pc, #76]	; 40023018 <CyU3PUartSetConfig+0x214>
40022fc8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fcc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40022fd0:	ea000002 	b	40022fe0 <CyU3PUartSetConfig+0x1dc>
40022fd4:	e3a00000 	mov	r0, #0
40022fd8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022fdc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40022fe0:	e3a00001 	mov	r0, #1
40022fe4:	e59f1030 	ldr	r1, [pc, #48]	; 4002301c <CyU3PUartSetConfig+0x218>
40022fe8:	e5810000 	str	r0, [r1]
40022fec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022ff0:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40022ff4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022ff8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022ffc:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023000:	ebffff6e 	bl	40022dc0 <CyU3PUartReleaseLock>
40023004:	e3a00000 	mov	r0, #0
40023008:	eaffff86 	b	40022e28 <CyU3PUartSetConfig+0x24>
4002300c:	40030eec 	.word	0x40030eec
40023010:	40030ee4 	.word	0x40030ee4
40023014:	00000603 	.word	0x00000603
40023018:	00000309 	.word	0x00000309
4002301c:	40030ee8 	.word	0x40030ee8

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023020 <CyU3PUartTxSetBlockXfer>:
40023020:	e92d4070 	push	{r4, r5, r6, lr}
40023024:	e1a05000 	mov	r5, r0
40023028:	e59f003c 	ldr	r0, [pc, #60]	; 4002306c <CyU3PUartTxSetBlockXfer+0x4c>
4002302c:	e5900000 	ldr	r0, [r0]
40023030:	e3500000 	cmp	r0, #0
40023034:	1a000001 	bne	40023040 <CyU3PUartTxSetBlockXfer+0x20>
40023038:	e3a00044 	mov	r0, #68	; 0x44
4002303c:	e8bd8070 	pop	{r4, r5, r6, pc}
40023040:	ebfffedf 	bl	40022bc4 <CyU3PUartGetLock>
40023044:	e1a04000 	mov	r4, r0
40023048:	e3540000 	cmp	r4, #0
4002304c:	0a000001 	beq	40023058 <CyU3PUartTxSetBlockXfer+0x38>
40023050:	e1a00004 	mov	r0, r4
40023054:	eafffff8 	b	4002303c <CyU3PUartTxSetBlockXfer+0x1c>
40023058:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002305c:	e5805820 	str	r5, [r0, #2080]	; 0x820
40023060:	ebffff56 	bl	40022dc0 <CyU3PUartReleaseLock>
40023064:	e3a00000 	mov	r0, #0
40023068:	eafffff3 	b	4002303c <CyU3PUartTxSetBlockXfer+0x1c>
4002306c:	40030ee4 	.word	0x40030ee4

Disassembly of section i.CyU3PI2cErrorRecovery:

40023070 <CyU3PI2cErrorRecovery>:
40023070:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023074:	e1a04000 	mov	r4, r0
40023078:	e3a07000 	mov	r7, #0
4002307c:	e3a08000 	mov	r8, #0
40023080:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023084:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023088:	e59f1164 	ldr	r1, [pc, #356]	; 400231f4 <CyU3PI2cErrorRecovery+0x184>
4002308c:	e5810000 	str	r0, [r1]
40023090:	e59f5160 	ldr	r5, [pc, #352]	; 400231f8 <CyU3PI2cErrorRecovery+0x188>
40023094:	e1a00000 	nop			; (mov r0, r0)
40023098:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002309c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400230a0:	e3100201 	tst	r0, #268435456	; 0x10000000
400230a4:	0a000002 	beq	400230b4 <CyU3PI2cErrorRecovery+0x44>
400230a8:	e1b00005 	movs	r0, r5
400230ac:	e2455001 	sub	r5, r5, #1
400230b0:	1afffff8 	bne	40023098 <CyU3PI2cErrorRecovery+0x28>
400230b4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230b8:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
400230bc:	e3a00000 	mov	r0, #0
400230c0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230c4:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400230c8:	e3e00000 	mvn	r0, #0
400230cc:	e5810408 	str	r0, [r1, #1032]	; 0x408
400230d0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230d4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400230d8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400230dc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400230e0:	e3a00005 	mov	r0, #5
400230e4:	ebffc0ce 	bl	40013424 <CyU3PBusyWait>
400230e8:	e3540000 	cmp	r4, #0
400230ec:	0a000032 	beq	400231bc <CyU3PI2cErrorRecovery+0x14c>
400230f0:	e3a00000 	mov	r0, #0
400230f4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400230f8:	e5810438 	str	r0, [r1, #1080]	; 0x438
400230fc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023100:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023104:	e3100008 	tst	r0, #8
40023108:	1a000000 	bne	40023110 <CyU3PI2cErrorRecovery+0xa0>
4002310c:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023110:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023114:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023118:	e3100002 	tst	r0, #2
4002311c:	0a000000 	beq	40023124 <CyU3PI2cErrorRecovery+0xb4>
40023120:	e3a07202 	mov	r7, #536870912	; 0x20000000
40023124:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023128:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002312c:	e1800007 	orr	r0, r0, r7
40023130:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023134:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023138:	e1e05741 	mvn	r5, r1, asr #14
4002313c:	ea000004 	b	40023154 <CyU3PI2cErrorRecovery+0xe4>
40023140:	e1b00005 	movs	r0, r5
40023144:	e2455001 	sub	r5, r5, #1
40023148:	1a000001 	bne	40023154 <CyU3PI2cErrorRecovery+0xe4>
4002314c:	e3a08054 	mov	r8, #84	; 0x54
40023150:	ea000003 	b	40023164 <CyU3PI2cErrorRecovery+0xf4>
40023154:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023158:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002315c:	e3100008 	tst	r0, #8
40023160:	0afffff6 	beq	40023140 <CyU3PI2cErrorRecovery+0xd0>
40023164:	e1a00000 	nop			; (mov r0, r0)
40023168:	e3580000 	cmp	r8, #0
4002316c:	1a00000b 	bne	400231a0 <CyU3PI2cErrorRecovery+0x130>
40023170:	e59f5080 	ldr	r5, [pc, #128]	; 400231f8 <CyU3PI2cErrorRecovery+0x188>
40023174:	ea000004 	b	4002318c <CyU3PI2cErrorRecovery+0x11c>
40023178:	e1b00005 	movs	r0, r5
4002317c:	e2455001 	sub	r5, r5, #1
40023180:	1a000001 	bne	4002318c <CyU3PI2cErrorRecovery+0x11c>
40023184:	e3a08054 	mov	r8, #84	; 0x54
40023188:	ea000003 	b	4002319c <CyU3PI2cErrorRecovery+0x12c>
4002318c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023190:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023194:	e3100002 	tst	r0, #2
40023198:	1afffff6 	bne	40023178 <CyU3PI2cErrorRecovery+0x108>
4002319c:	e1a00000 	nop			; (mov r0, r0)
400231a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231a4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400231a8:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
400231ac:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231b0:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231b4:	e3a00001 	mov	r0, #1
400231b8:	ebffc099 	bl	40013424 <CyU3PBusyWait>
400231bc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231c0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400231c4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400231c8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231cc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231d0:	e3a00005 	mov	r0, #5
400231d4:	ebffc092 	bl	40013424 <CyU3PBusyWait>
400231d8:	e3e00000 	mvn	r0, #0
400231dc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231e0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400231e4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231e8:	e580640c 	str	r6, [r0, #1036]	; 0x40c
400231ec:	e1a00008 	mov	r0, r8
400231f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400231f4:	40030f04 	.word	0x40030f04
400231f8:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

400231fc <CyU3PI2cGetLock>:
400231fc:	e92d4010 	push	{r4, lr}
40023200:	e3a04000 	mov	r4, #0
40023204:	e59f0044 	ldr	r0, [pc, #68]	; 40023250 <CyU3PI2cGetLock+0x54>
40023208:	e5900000 	ldr	r0, [r0]
4002320c:	e3500000 	cmp	r0, #0
40023210:	1a000001 	bne	4002321c <CyU3PI2cGetLock+0x20>
40023214:	e3a00044 	mov	r0, #68	; 0x44
40023218:	e8bd8010 	pop	{r4, pc}
4002321c:	ebff9548 	bl	40008744 <_tx_thread_identify>
40023220:	e3500000 	cmp	r0, #0
40023224:	0a000000 	beq	4002322c <CyU3PI2cGetLock+0x30>
40023228:	e3e04000 	mvn	r4, #0
4002322c:	e1a01004 	mov	r1, r4
40023230:	e59f001c 	ldr	r0, [pc, #28]	; 40023254 <CyU3PI2cGetLock+0x58>
40023234:	ebff9b57 	bl	40009f98 <_txe_mutex_get>
40023238:	e3500000 	cmp	r0, #0
4002323c:	0a000001 	beq	40023248 <CyU3PI2cGetLock+0x4c>
40023240:	e3a0001d 	mov	r0, #29
40023244:	eafffff3 	b	40023218 <CyU3PI2cGetLock+0x1c>
40023248:	e3a00000 	mov	r0, #0
4002324c:	eafffff1 	b	40023218 <CyU3PI2cGetLock+0x1c>
40023250:	40030efc 	.word	0x40030efc
40023254:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

40023258 <CyU3PI2cInit>:
40023258:	e92d4010 	push	{r4, lr}
4002325c:	e3a00000 	mov	r0, #0
40023260:	ebffbe0e 	bl	40012aa0 <CyU3PIsLppIOConfigured>
40023264:	e3500000 	cmp	r0, #0
40023268:	1a000001 	bne	40023274 <CyU3PI2cInit+0x1c>
4002326c:	e3a00044 	mov	r0, #68	; 0x44
40023270:	e8bd8010 	pop	{r4, pc}
40023274:	e59f00bc 	ldr	r0, [pc, #188]	; 40023338 <CyU3PI2cInit+0xe0>
40023278:	e5900000 	ldr	r0, [r0]
4002327c:	e3500000 	cmp	r0, #0
40023280:	0a000001 	beq	4002328c <CyU3PI2cInit+0x34>
40023284:	e3a00043 	mov	r0, #67	; 0x43
40023288:	eafffff8 	b	40023270 <CyU3PI2cInit+0x18>
4002328c:	e59f00a8 	ldr	r0, [pc, #168]	; 4002333c <CyU3PI2cInit+0xe4>
40023290:	ebffc1f8 	bl	40013a78 <CyU3PI2cSetClock>
40023294:	e1a04000 	mov	r4, r0
40023298:	e3540000 	cmp	r4, #0
4002329c:	0a000001 	beq	400232a8 <CyU3PI2cInit+0x50>
400232a0:	e1a00004 	mov	r0, r4
400232a4:	eafffff1 	b	40023270 <CyU3PI2cInit+0x18>
400232a8:	e59f1090 	ldr	r1, [pc, #144]	; 40023340 <CyU3PI2cInit+0xe8>
400232ac:	e3a00000 	mov	r0, #0
400232b0:	ebffc257 	bl	40013c14 <CyU3PLppInit>
400232b4:	e1a04000 	mov	r4, r0
400232b8:	e3540000 	cmp	r4, #0
400232bc:	0a000001 	beq	400232c8 <CyU3PI2cInit+0x70>
400232c0:	e1a00004 	mov	r0, r4
400232c4:	eaffffe9 	b	40023270 <CyU3PI2cInit+0x18>
400232c8:	e3a03038 	mov	r3, #56	; 0x38
400232cc:	e3a02000 	mov	r2, #0
400232d0:	e1a01002 	mov	r1, r2
400232d4:	e59f0068 	ldr	r0, [pc, #104]	; 40023344 <CyU3PI2cInit+0xec>
400232d8:	ebff9ab0 	bl	40009da0 <_txe_mutex_create>
400232dc:	e3a00000 	mov	r0, #0
400232e0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400232e4:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
400232e8:	e3a0000a 	mov	r0, #10
400232ec:	ebffc04c 	bl	40013424 <CyU3PBusyWait>
400232f0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400232f4:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
400232f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400232fc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023300:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023304:	e1a00000 	nop			; (mov r0, r0)
40023308:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002330c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023310:	e3100001 	tst	r0, #1
40023314:	0afffffb 	beq	40023308 <CyU3PI2cInit+0xb0>
40023318:	e3a00000 	mov	r0, #0
4002331c:	e59f1024 	ldr	r1, [pc, #36]	; 40023348 <CyU3PI2cInit+0xf0>
40023320:	e5810000 	str	r0, [r1]
40023324:	e3a00001 	mov	r0, #1
40023328:	e2411008 	sub	r1, r1, #8
4002332c:	e5810000 	str	r0, [r1]
40023330:	e3a00000 	mov	r0, #0
40023334:	eaffffcd 	b	40023270 <CyU3PI2cInit+0x18>
40023338:	40030efc 	.word	0x40030efc
4002333c:	000186a0 	.word	0x000186a0
40023340:	4002334c 	.word	0x4002334c
40023344:	40032e54 	.word	0x40032e54
40023348:	40030f04 	.word	0x40030f04

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

4002334c <CyU3PI2cInt_ThreadHandler>:
4002334c:	e92d4070 	push	{r4, r5, r6, lr}
40023350:	ebffffa9 	bl	400231fc <CyU3PI2cGetLock>
40023354:	e1a05000 	mov	r5, r0
40023358:	e3550000 	cmp	r5, #0
4002335c:	0a000000 	beq	40023364 <CyU3PI2cInt_ThreadHandler+0x18>
40023360:	e8bd8070 	pop	{r4, r5, r6, pc}
40023364:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023368:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002336c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023370:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
40023374:	e0004001 	and	r4, r0, r1
40023378:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002337c:	e5804408 	str	r4, [r0, #1032]	; 0x408
40023380:	e59f00b0 	ldr	r0, [pc, #176]	; 40023438 <CyU3PI2cInt_ThreadHandler+0xec>
40023384:	e5900000 	ldr	r0, [r0]
40023388:	e3500000 	cmp	r0, #0
4002338c:	1a000001 	bne	40023398 <CyU3PI2cInt_ThreadHandler+0x4c>
40023390:	eb000098 	bl	400235f8 <CyU3PI2cReleaseLock>
40023394:	eafffff1 	b	40023360 <CyU3PI2cInt_ThreadHandler+0x14>
40023398:	e3140001 	tst	r4, #1
4002339c:	0a000004 	beq	400233b4 <CyU3PI2cInt_ThreadHandler+0x68>
400233a0:	e3a01000 	mov	r1, #0
400233a4:	e1a00001 	mov	r0, r1
400233a8:	e59f2088 	ldr	r2, [pc, #136]	; 40023438 <CyU3PI2cInt_ThreadHandler+0xec>
400233ac:	e5922000 	ldr	r2, [r2]
400233b0:	e12fff32 	blx	r2
400233b4:	e3140008 	tst	r4, #8
400233b8:	0a000004 	beq	400233d0 <CyU3PI2cInt_ThreadHandler+0x84>
400233bc:	e3a01000 	mov	r1, #0
400233c0:	e3a00001 	mov	r0, #1
400233c4:	e59f206c 	ldr	r2, [pc, #108]	; 40023438 <CyU3PI2cInt_ThreadHandler+0xec>
400233c8:	e5922000 	ldr	r2, [r2]
400233cc:	e12fff32 	blx	r2
400233d0:	e3140040 	tst	r4, #64	; 0x40
400233d4:	0a000004 	beq	400233ec <CyU3PI2cInt_ThreadHandler+0xa0>
400233d8:	e3a01000 	mov	r1, #0
400233dc:	e3a00002 	mov	r0, #2
400233e0:	e59f2050 	ldr	r2, [pc, #80]	; 40023438 <CyU3PI2cInt_ThreadHandler+0xec>
400233e4:	e5922000 	ldr	r2, [r2]
400233e8:	e12fff32 	blx	r2
400233ec:	e3140080 	tst	r4, #128	; 0x80
400233f0:	0a000004 	beq	40023408 <CyU3PI2cInt_ThreadHandler+0xbc>
400233f4:	e3a01000 	mov	r1, #0
400233f8:	e3a00003 	mov	r0, #3
400233fc:	e59f2034 	ldr	r2, [pc, #52]	; 40023438 <CyU3PI2cInt_ThreadHandler+0xec>
40023400:	e5922000 	ldr	r2, [r2]
40023404:	e12fff32 	blx	r2
40023408:	e3140c01 	tst	r4, #256	; 0x100
4002340c:	0a000007 	beq	40023430 <CyU3PI2cInt_ThreadHandler+0xe4>
40023410:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023414:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023418:	e200040f 	and	r0, r0, #251658240	; 0xf000000
4002341c:	e1a01c20 	lsr	r1, r0, #24
40023420:	e3a00004 	mov	r0, #4
40023424:	e59f200c 	ldr	r2, [pc, #12]	; 40023438 <CyU3PI2cInt_ThreadHandler+0xec>
40023428:	e5922000 	ldr	r2, [r2]
4002342c:	e12fff32 	blx	r2
40023430:	eb000070 	bl	400235f8 <CyU3PI2cReleaseLock>
40023434:	eaffffc9 	b	40023360 <CyU3PI2cInt_ThreadHandler+0x14>
40023438:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cReceiveBytes:

4002343c <CyU3PI2cReceiveBytes>:
4002343c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40023440:	e1a04000 	mov	r4, r0
40023444:	e1a05001 	mov	r5, r1
40023448:	e1a06002 	mov	r6, r2
4002344c:	e1a07003 	mov	r7, r3
40023450:	e59f0194 	ldr	r0, [pc, #404]	; 400235ec <CyU3PI2cReceiveBytes+0x1b0>
40023454:	e5900000 	ldr	r0, [r0]
40023458:	e3500000 	cmp	r0, #0
4002345c:	1a000001 	bne	40023468 <CyU3PI2cReceiveBytes+0x2c>
40023460:	e3a00044 	mov	r0, #68	; 0x44
40023464:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40023468:	e59f0180 	ldr	r0, [pc, #384]	; 400235f0 <CyU3PI2cReceiveBytes+0x1b4>
4002346c:	e5900000 	ldr	r0, [r0]
40023470:	e3500000 	cmp	r0, #0
40023474:	0a000001 	beq	40023480 <CyU3PI2cReceiveBytes+0x44>
40023478:	e3a00044 	mov	r0, #68	; 0x44
4002347c:	eafffff8 	b	40023464 <CyU3PI2cReceiveBytes+0x28>
40023480:	e3550000 	cmp	r5, #0
40023484:	0a000001 	beq	40023490 <CyU3PI2cReceiveBytes+0x54>
40023488:	e3540000 	cmp	r4, #0
4002348c:	1a000001 	bne	40023498 <CyU3PI2cReceiveBytes+0x5c>
40023490:	e3a00041 	mov	r0, #65	; 0x41
40023494:	eafffff2 	b	40023464 <CyU3PI2cReceiveBytes+0x28>
40023498:	e5d40008 	ldrb	r0, [r4, #8]
4002349c:	e3500000 	cmp	r0, #0
400234a0:	0a000002 	beq	400234b0 <CyU3PI2cReceiveBytes+0x74>
400234a4:	e5d40008 	ldrb	r0, [r4, #8]
400234a8:	e3500008 	cmp	r0, #8
400234ac:	da000001 	ble	400234b8 <CyU3PI2cReceiveBytes+0x7c>
400234b0:	e3a00040 	mov	r0, #64	; 0x40
400234b4:	eaffffea 	b	40023464 <CyU3PI2cReceiveBytes+0x28>
400234b8:	e3560000 	cmp	r6, #0
400234bc:	1a000001 	bne	400234c8 <CyU3PI2cReceiveBytes+0x8c>
400234c0:	e3a00000 	mov	r0, #0
400234c4:	eaffffe6 	b	40023464 <CyU3PI2cReceiveBytes+0x28>
400234c8:	ebffff4b 	bl	400231fc <CyU3PI2cGetLock>
400234cc:	e1a08000 	mov	r8, r0
400234d0:	e3580000 	cmp	r8, #0
400234d4:	0a000001 	beq	400234e0 <CyU3PI2cReceiveBytes+0xa4>
400234d8:	e1a00008 	mov	r0, r8
400234dc:	eaffffe0 	b	40023464 <CyU3PI2cReceiveBytes+0x28>
400234e0:	e3a0bd07 	mov	fp, #448	; 0x1c0
400234e4:	e1a00000 	nop			; (mov r0, r0)
400234e8:	e3a02001 	mov	r2, #1
400234ec:	e1a01006 	mov	r1, r6
400234f0:	e1a00004 	mov	r0, r4
400234f4:	eb000166 	bl	40023a94 <MyI2cSendCommand>
400234f8:	e1a08000 	mov	r8, r0
400234fc:	e3580000 	cmp	r8, #0
40023500:	0a000000 	beq	40023508 <CyU3PI2cReceiveBytes+0xcc>
40023504:	ea00002a 	b	400235b4 <CyU3PI2cReceiveBytes+0x178>
40023508:	e3a0a000 	mov	sl, #0
4002350c:	ea000020 	b	40023594 <CyU3PI2cReceiveBytes+0x158>
40023510:	e59f00dc 	ldr	r0, [pc, #220]	; 400235f4 <CyU3PI2cReceiveBytes+0x1b8>
40023514:	e58d0000 	str	r0, [sp]
40023518:	ea000006 	b	40023538 <CyU3PI2cReceiveBytes+0xfc>
4002351c:	e59d0000 	ldr	r0, [sp]
40023520:	e2401001 	sub	r1, r0, #1
40023524:	e3500000 	cmp	r0, #0
40023528:	e58d1000 	str	r1, [sp]
4002352c:	1a000001 	bne	40023538 <CyU3PI2cReceiveBytes+0xfc>
40023530:	e3a08055 	mov	r8, #85	; 0x55
40023534:	ea000004 	b	4002354c <CyU3PI2cReceiveBytes+0x110>
40023538:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002353c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023540:	e38b1002 	orr	r1, fp, #2
40023544:	e1100001 	tst	r0, r1
40023548:	0afffff3 	beq	4002351c <CyU3PI2cReceiveBytes+0xe0>
4002354c:	e1a00000 	nop			; (mov r0, r0)
40023550:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023554:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023558:	e110000b 	tst	r0, fp
4002355c:	0a000000 	beq	40023564 <CyU3PI2cReceiveBytes+0x128>
40023560:	e3a0804a 	mov	r8, #74	; 0x4a
40023564:	e3580000 	cmp	r8, #0
40023568:	0a000005 	beq	40023584 <CyU3PI2cReceiveBytes+0x148>
4002356c:	e3a00001 	mov	r0, #1
40023570:	ebfffebe 	bl	40023070 <CyU3PI2cErrorRecovery>
40023574:	e3500000 	cmp	r0, #0
40023578:	0a000000 	beq	40023580 <CyU3PI2cReceiveBytes+0x144>
4002357c:	e3a08054 	mov	r8, #84	; 0x54
40023580:	ea000005 	b	4002359c <CyU3PI2cReceiveBytes+0x160>
40023584:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023588:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
4002358c:	e7c5000a 	strb	r0, [r5, sl]
40023590:	e28aa001 	add	sl, sl, #1
40023594:	e15a0006 	cmp	sl, r6
40023598:	3affffdc 	bcc	40023510 <CyU3PI2cReceiveBytes+0xd4>
4002359c:	e1a00000 	nop			; (mov r0, r0)
400235a0:	e3580000 	cmp	r8, #0
400235a4:	0a000002 	beq	400235b4 <CyU3PI2cReceiveBytes+0x178>
400235a8:	e1b00007 	movs	r0, r7
400235ac:	e2477001 	sub	r7, r7, #1
400235b0:	1affffcc 	bne	400234e8 <CyU3PI2cReceiveBytes+0xac>
400235b4:	e1a00000 	nop			; (mov r0, r0)
400235b8:	e358004a 	cmp	r8, #74	; 0x4a
400235bc:	1a000007 	bne	400235e0 <CyU3PI2cReceiveBytes+0x1a4>
400235c0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235c4:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
400235c8:	e3190040 	tst	r9, #64	; 0x40
400235cc:	0a000000 	beq	400235d4 <CyU3PI2cReceiveBytes+0x198>
400235d0:	e3a08045 	mov	r8, #69	; 0x45
400235d4:	e3190080 	tst	r9, #128	; 0x80
400235d8:	0a000000 	beq	400235e0 <CyU3PI2cReceiveBytes+0x1a4>
400235dc:	e3a08055 	mov	r8, #85	; 0x55
400235e0:	eb000004 	bl	400235f8 <CyU3PI2cReleaseLock>
400235e4:	e1a00008 	mov	r0, r8
400235e8:	eaffff9d 	b	40023464 <CyU3PI2cReceiveBytes+0x28>
400235ec:	40030ef8 	.word	0x40030ef8
400235f0:	40030ef4 	.word	0x40030ef4
400235f4:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

400235f8 <CyU3PI2cReleaseLock>:
400235f8:	e92d4010 	push	{r4, lr}
400235fc:	e59f0030 	ldr	r0, [pc, #48]	; 40023634 <CyU3PI2cReleaseLock+0x3c>
40023600:	e5900000 	ldr	r0, [r0]
40023604:	e3500000 	cmp	r0, #0
40023608:	1a000001 	bne	40023614 <CyU3PI2cReleaseLock+0x1c>
4002360c:	e3a00044 	mov	r0, #68	; 0x44
40023610:	e8bd8010 	pop	{r4, pc}
40023614:	e59f001c 	ldr	r0, [pc, #28]	; 40023638 <CyU3PI2cReleaseLock+0x40>
40023618:	ebff9a93 	bl	4000a06c <_txe_mutex_put>
4002361c:	e3500000 	cmp	r0, #0
40023620:	0a000001 	beq	4002362c <CyU3PI2cReleaseLock+0x34>
40023624:	e3a0001d 	mov	r0, #29
40023628:	eafffff8 	b	40023610 <CyU3PI2cReleaseLock+0x18>
4002362c:	e3a00000 	mov	r0, #0
40023630:	eafffff6 	b	40023610 <CyU3PI2cReleaseLock+0x18>
40023634:	40030efc 	.word	0x40030efc
40023638:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

4002363c <CyU3PI2cSetConfig>:
4002363c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023640:	e1a04000 	mov	r4, r0
40023644:	e1a05001 	mov	r5, r1
40023648:	e59f01e0 	ldr	r0, [pc, #480]	; 40023830 <CyU3PI2cSetConfig+0x1f4>
4002364c:	e5900000 	ldr	r0, [r0]
40023650:	e3500000 	cmp	r0, #0
40023654:	1a000001 	bne	40023660 <CyU3PI2cSetConfig+0x24>
40023658:	e3a00042 	mov	r0, #66	; 0x42
4002365c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023660:	e3540000 	cmp	r4, #0
40023664:	1a000001 	bne	40023670 <CyU3PI2cSetConfig+0x34>
40023668:	e3a00041 	mov	r0, #65	; 0x41
4002366c:	eafffffa 	b	4002365c <CyU3PI2cSetConfig+0x20>
40023670:	e5940004 	ldr	r0, [r4, #4]
40023674:	e3500000 	cmp	r0, #0
40023678:	1a000003 	bne	4002368c <CyU3PI2cSetConfig+0x50>
4002367c:	e3550000 	cmp	r5, #0
40023680:	0a000001 	beq	4002368c <CyU3PI2cSetConfig+0x50>
40023684:	e3a00040 	mov	r0, #64	; 0x40
40023688:	eafffff3 	b	4002365c <CyU3PI2cSetConfig+0x20>
4002368c:	ebfffeda 	bl	400231fc <CyU3PI2cGetLock>
40023690:	e1a06000 	mov	r6, r0
40023694:	e3560000 	cmp	r6, #0
40023698:	0a000001 	beq	400236a4 <CyU3PI2cSetConfig+0x68>
4002369c:	e1a00006 	mov	r0, r6
400236a0:	eaffffed 	b	4002365c <CyU3PI2cSetConfig+0x20>
400236a4:	e3a00000 	mov	r0, #0
400236a8:	e59f1184 	ldr	r1, [pc, #388]	; 40023834 <CyU3PI2cSetConfig+0x1f8>
400236ac:	e5810000 	str	r0, [r1]
400236b0:	e5940000 	ldr	r0, [r4]
400236b4:	ebffc0ef 	bl	40013a78 <CyU3PI2cSetClock>
400236b8:	e1a06000 	mov	r6, r0
400236bc:	e3560000 	cmp	r6, #0
400236c0:	1a00000e 	bne	40023700 <CyU3PI2cSetConfig+0xc4>
400236c4:	e3a00206 	mov	r0, #1610612736	; 0x60000000
400236c8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400236cc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400236d0:	e1e07741 	mvn	r7, r1, asr #14
400236d4:	ea000004 	b	400236ec <CyU3PI2cSetConfig+0xb0>
400236d8:	e1b00007 	movs	r0, r7
400236dc:	e2477001 	sub	r7, r7, #1
400236e0:	1a000001 	bne	400236ec <CyU3PI2cSetConfig+0xb0>
400236e4:	e3a06054 	mov	r6, #84	; 0x54
400236e8:	ea000003 	b	400236fc <CyU3PI2cSetConfig+0xc0>
400236ec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400236f0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400236f4:	e3100008 	tst	r0, #8
400236f8:	0afffff6 	beq	400236d8 <CyU3PI2cSetConfig+0x9c>
400236fc:	e1a00000 	nop			; (mov r0, r0)
40023700:	e3560000 	cmp	r6, #0
40023704:	1a00000b 	bne	40023738 <CyU3PI2cSetConfig+0xfc>
40023708:	e59f7128 	ldr	r7, [pc, #296]	; 40023838 <CyU3PI2cSetConfig+0x1fc>
4002370c:	ea000004 	b	40023724 <CyU3PI2cSetConfig+0xe8>
40023710:	e1b00007 	movs	r0, r7
40023714:	e2477001 	sub	r7, r7, #1
40023718:	1a000001 	bne	40023724 <CyU3PI2cSetConfig+0xe8>
4002371c:	e3a06054 	mov	r6, #84	; 0x54
40023720:	ea000003 	b	40023734 <CyU3PI2cSetConfig+0xf8>
40023724:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023728:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002372c:	e3100002 	tst	r0, #2
40023730:	1afffff6 	bne	40023710 <CyU3PI2cSetConfig+0xd4>
40023734:	e1a00000 	nop			; (mov r0, r0)
40023738:	e3560000 	cmp	r6, #0
4002373c:	0a000002 	beq	4002374c <CyU3PI2cSetConfig+0x110>
40023740:	ebffffac 	bl	400235f8 <CyU3PI2cReleaseLock>
40023744:	e1a00006 	mov	r0, r6
40023748:	eaffffc3 	b	4002365c <CyU3PI2cSetConfig+0x20>
4002374c:	e3a00000 	mov	r0, #0
40023750:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023754:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023758:	e3a06000 	mov	r6, #0
4002375c:	e5940000 	ldr	r0, [r4]
40023760:	e59f10d4 	ldr	r1, [pc, #212]	; 4002383c <CyU3PI2cSetConfig+0x200>
40023764:	e1500001 	cmp	r0, r1
40023768:	8a000000 	bhi	40023770 <CyU3PI2cSetConfig+0x134>
4002376c:	e3a06004 	mov	r6, #4
40023770:	e5940004 	ldr	r0, [r4, #4]
40023774:	e3500000 	cmp	r0, #0
40023778:	0a000007 	beq	4002379c <CyU3PI2cSetConfig+0x160>
4002377c:	e3866001 	orr	r6, r6, #1
40023780:	e3a00001 	mov	r0, #1
40023784:	e59f10b4 	ldr	r1, [pc, #180]	; 40023840 <CyU3PI2cSetConfig+0x204>
40023788:	e5810000 	str	r0, [r1]
4002378c:	e1d400bc 	ldrh	r0, [r4, #12]
40023790:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023794:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023798:	ea000005 	b	400237b4 <CyU3PI2cSetConfig+0x178>
4002379c:	e3a00000 	mov	r0, #0
400237a0:	e59f1098 	ldr	r1, [pc, #152]	; 40023840 <CyU3PI2cSetConfig+0x204>
400237a4:	e5810000 	str	r0, [r1]
400237a8:	e59f0094 	ldr	r0, [pc, #148]	; 40023844 <CyU3PI2cSetConfig+0x208>
400237ac:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237b0:	e5810414 	str	r0, [r1, #1044]	; 0x414
400237b4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400237b8:	e5806400 	str	r6, [r0, #1024]	; 0x400
400237bc:	e59f0084 	ldr	r0, [pc, #132]	; 40023848 <CyU3PI2cSetConfig+0x20c>
400237c0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237c4:	e5810440 	str	r0, [r1, #1088]	; 0x440
400237c8:	e5940008 	ldr	r0, [r4, #8]
400237cc:	e5810410 	str	r0, [r1, #1040]	; 0x410
400237d0:	e3e00000 	mvn	r0, #0
400237d4:	e5810408 	str	r0, [r1, #1032]	; 0x408
400237d8:	e1a00005 	mov	r0, r5
400237dc:	eb0000a8 	bl	40023a84 <CyU3PRegisterI2cCallBack>
400237e0:	e3550000 	cmp	r5, #0
400237e4:	0a000003 	beq	400237f8 <CyU3PI2cSetConfig+0x1bc>
400237e8:	e59f005c 	ldr	r0, [pc, #92]	; 4002384c <CyU3PI2cSetConfig+0x210>
400237ec:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237f0:	e581040c 	str	r0, [r1, #1036]	; 0x40c
400237f4:	ea000002 	b	40023804 <CyU3PI2cSetConfig+0x1c8>
400237f8:	e3a00000 	mov	r0, #0
400237fc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023800:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023804:	e3a00001 	mov	r0, #1
40023808:	e59f1040 	ldr	r1, [pc, #64]	; 40023850 <CyU3PI2cSetConfig+0x214>
4002380c:	e5810000 	str	r0, [r1]
40023810:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023814:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023818:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002381c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023820:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023824:	ebffff73 	bl	400235f8 <CyU3PI2cReleaseLock>
40023828:	e3a00000 	mov	r0, #0
4002382c:	eaffff8a 	b	4002365c <CyU3PI2cSetConfig+0x20>
40023830:	40030efc 	.word	0x40030efc
40023834:	40030f04 	.word	0x40030f04
40023838:	00007fff 	.word	0x00007fff
4002383c:	000186a0 	.word	0x000186a0
40023840:	40030ef4 	.word	0x40030ef4
40023844:	0000ffff 	.word	0x0000ffff
40023848:	00000502 	.word	0x00000502
4002384c:	000001c9 	.word	0x000001c9
40023850:	40030ef8 	.word	0x40030ef8

Disassembly of section i.CyU3PI2cTransmitBytes:

40023854 <CyU3PI2cTransmitBytes>:
40023854:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023858:	e1a04000 	mov	r4, r0
4002385c:	e1a05001 	mov	r5, r1
40023860:	e1a06002 	mov	r6, r2
40023864:	e59f020c 	ldr	r0, [pc, #524]	; 40023a78 <CyU3PI2cTransmitBytes+0x224>
40023868:	e5900000 	ldr	r0, [r0]
4002386c:	e3500000 	cmp	r0, #0
40023870:	1a000002 	bne	40023880 <CyU3PI2cTransmitBytes+0x2c>
40023874:	e3a00044 	mov	r0, #68	; 0x44
40023878:	e28dd010 	add	sp, sp, #16
4002387c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023880:	e59f01f4 	ldr	r0, [pc, #500]	; 40023a7c <CyU3PI2cTransmitBytes+0x228>
40023884:	e5900000 	ldr	r0, [r0]
40023888:	e3500000 	cmp	r0, #0
4002388c:	0a000001 	beq	40023898 <CyU3PI2cTransmitBytes+0x44>
40023890:	e3a00044 	mov	r0, #68	; 0x44
40023894:	eafffff7 	b	40023878 <CyU3PI2cTransmitBytes+0x24>
40023898:	e3550000 	cmp	r5, #0
4002389c:	0a000001 	beq	400238a8 <CyU3PI2cTransmitBytes+0x54>
400238a0:	e3540000 	cmp	r4, #0
400238a4:	1a000001 	bne	400238b0 <CyU3PI2cTransmitBytes+0x5c>
400238a8:	e3a00041 	mov	r0, #65	; 0x41
400238ac:	eafffff1 	b	40023878 <CyU3PI2cTransmitBytes+0x24>
400238b0:	e5d40008 	ldrb	r0, [r4, #8]
400238b4:	e3500000 	cmp	r0, #0
400238b8:	0a000002 	beq	400238c8 <CyU3PI2cTransmitBytes+0x74>
400238bc:	e5d40008 	ldrb	r0, [r4, #8]
400238c0:	e3500008 	cmp	r0, #8
400238c4:	da000001 	ble	400238d0 <CyU3PI2cTransmitBytes+0x7c>
400238c8:	e3a00040 	mov	r0, #64	; 0x40
400238cc:	eaffffe9 	b	40023878 <CyU3PI2cTransmitBytes+0x24>
400238d0:	e3560000 	cmp	r6, #0
400238d4:	1a000001 	bne	400238e0 <CyU3PI2cTransmitBytes+0x8c>
400238d8:	e3a00000 	mov	r0, #0
400238dc:	eaffffe5 	b	40023878 <CyU3PI2cTransmitBytes+0x24>
400238e0:	ebfffe45 	bl	400231fc <CyU3PI2cGetLock>
400238e4:	e1a07000 	mov	r7, r0
400238e8:	e3570000 	cmp	r7, #0
400238ec:	0a000001 	beq	400238f8 <CyU3PI2cTransmitBytes+0xa4>
400238f0:	e1a00007 	mov	r0, r7
400238f4:	eaffffdf 	b	40023878 <CyU3PI2cTransmitBytes+0x24>
400238f8:	e3a0ad07 	mov	sl, #448	; 0x1c0
400238fc:	e1a00000 	nop			; (mov r0, r0)
40023900:	e3a07000 	mov	r7, #0
40023904:	e5d50000 	ldrb	r0, [r5]
40023908:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002390c:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023910:	e3a02000 	mov	r2, #0
40023914:	e1a01006 	mov	r1, r6
40023918:	e1a00004 	mov	r0, r4
4002391c:	eb00005c 	bl	40023a94 <MyI2cSendCommand>
40023920:	e1a07000 	mov	r7, r0
40023924:	e3570000 	cmp	r7, #0
40023928:	0a000000 	beq	40023930 <CyU3PI2cTransmitBytes+0xdc>
4002392c:	ea000043 	b	40023a40 <CyU3PI2cTransmitBytes+0x1ec>
40023930:	e3a08001 	mov	r8, #1
40023934:	ea000018 	b	4002399c <CyU3PI2cTransmitBytes+0x148>
40023938:	e59f9140 	ldr	r9, [pc, #320]	; 40023a80 <CyU3PI2cTransmitBytes+0x22c>
4002393c:	ea000004 	b	40023954 <CyU3PI2cTransmitBytes+0x100>
40023940:	e1b00009 	movs	r0, r9
40023944:	e2499001 	sub	r9, r9, #1
40023948:	1a000001 	bne	40023954 <CyU3PI2cTransmitBytes+0x100>
4002394c:	e3a07055 	mov	r7, #85	; 0x55
40023950:	ea000004 	b	40023968 <CyU3PI2cTransmitBytes+0x114>
40023954:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023958:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002395c:	e38a1010 	orr	r1, sl, #16
40023960:	e1100001 	tst	r0, r1
40023964:	0afffff5 	beq	40023940 <CyU3PI2cTransmitBytes+0xec>
40023968:	e1a00000 	nop			; (mov r0, r0)
4002396c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023970:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023974:	e110000a 	tst	r0, sl
40023978:	0a000000 	beq	40023980 <CyU3PI2cTransmitBytes+0x12c>
4002397c:	e3a0704a 	mov	r7, #74	; 0x4a
40023980:	e3570000 	cmp	r7, #0
40023984:	0a000000 	beq	4002398c <CyU3PI2cTransmitBytes+0x138>
40023988:	ea000005 	b	400239a4 <CyU3PI2cTransmitBytes+0x150>
4002398c:	e7d50008 	ldrb	r0, [r5, r8]
40023990:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023994:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023998:	e2888001 	add	r8, r8, #1
4002399c:	e1580006 	cmp	r8, r6
400239a0:	3affffe4 	bcc	40023938 <CyU3PI2cTransmitBytes+0xe4>
400239a4:	e1a00000 	nop			; (mov r0, r0)
400239a8:	e1560008 	cmp	r6, r8
400239ac:	1a000013 	bne	40023a00 <CyU3PI2cTransmitBytes+0x1ac>
400239b0:	e3570000 	cmp	r7, #0
400239b4:	1a000011 	bne	40023a00 <CyU3PI2cTransmitBytes+0x1ac>
400239b8:	e59f90c0 	ldr	r9, [pc, #192]	; 40023a80 <CyU3PI2cTransmitBytes+0x22c>
400239bc:	ea000004 	b	400239d4 <CyU3PI2cTransmitBytes+0x180>
400239c0:	e1b00009 	movs	r0, r9
400239c4:	e2499001 	sub	r9, r9, #1
400239c8:	1a000001 	bne	400239d4 <CyU3PI2cTransmitBytes+0x180>
400239cc:	e3a07055 	mov	r7, #85	; 0x55
400239d0:	ea000004 	b	400239e8 <CyU3PI2cTransmitBytes+0x194>
400239d4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239d8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400239dc:	e38a1008 	orr	r1, sl, #8
400239e0:	e1100001 	tst	r0, r1
400239e4:	0afffff5 	beq	400239c0 <CyU3PI2cTransmitBytes+0x16c>
400239e8:	e1a00000 	nop			; (mov r0, r0)
400239ec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239f0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239f4:	e110000a 	tst	r0, sl
400239f8:	0a000000 	beq	40023a00 <CyU3PI2cTransmitBytes+0x1ac>
400239fc:	e3a0704a 	mov	r7, #74	; 0x4a
40023a00:	e3570000 	cmp	r7, #0
40023a04:	0a000006 	beq	40023a24 <CyU3PI2cTransmitBytes+0x1d0>
40023a08:	e3a00001 	mov	r0, #1
40023a0c:	ebfffd97 	bl	40023070 <CyU3PI2cErrorRecovery>
40023a10:	e3500000 	cmp	r0, #0
40023a14:	0a000002 	beq	40023a24 <CyU3PI2cTransmitBytes+0x1d0>
40023a18:	ebfffef6 	bl	400235f8 <CyU3PI2cReleaseLock>
40023a1c:	e3a00054 	mov	r0, #84	; 0x54
40023a20:	eaffff94 	b	40023878 <CyU3PI2cTransmitBytes+0x24>
40023a24:	e3570000 	cmp	r7, #0
40023a28:	0a000004 	beq	40023a40 <CyU3PI2cTransmitBytes+0x1ec>
40023a2c:	e59d000c 	ldr	r0, [sp, #12]
40023a30:	e2401001 	sub	r1, r0, #1
40023a34:	e3500000 	cmp	r0, #0
40023a38:	e58d100c 	str	r1, [sp, #12]
40023a3c:	1affffaf 	bne	40023900 <CyU3PI2cTransmitBytes+0xac>
40023a40:	e1a00000 	nop			; (mov r0, r0)
40023a44:	e357004a 	cmp	r7, #74	; 0x4a
40023a48:	1a000007 	bne	40023a6c <CyU3PI2cTransmitBytes+0x218>
40023a4c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a50:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023a54:	e31b0040 	tst	fp, #64	; 0x40
40023a58:	0a000000 	beq	40023a60 <CyU3PI2cTransmitBytes+0x20c>
40023a5c:	e3a07045 	mov	r7, #69	; 0x45
40023a60:	e31b0080 	tst	fp, #128	; 0x80
40023a64:	0a000000 	beq	40023a6c <CyU3PI2cTransmitBytes+0x218>
40023a68:	e3a07055 	mov	r7, #85	; 0x55
40023a6c:	ebfffee1 	bl	400235f8 <CyU3PI2cReleaseLock>
40023a70:	e1a00007 	mov	r0, r7
40023a74:	eaffff7f 	b	40023878 <CyU3PI2cTransmitBytes+0x24>
40023a78:	40030ef8 	.word	0x40030ef8
40023a7c:	40030ef4 	.word	0x40030ef4
40023a80:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023a84 <CyU3PRegisterI2cCallBack>:
40023a84:	e59f1004 	ldr	r1, [pc, #4]	; 40023a90 <CyU3PRegisterI2cCallBack+0xc>
40023a88:	e5810000 	str	r0, [r1]
40023a8c:	e12fff1e 	bx	lr
40023a90:	40030f00 	.word	0x40030f00

Disassembly of section i.MyI2cSendCommand:

40023a94 <MyI2cSendCommand>:
40023a94:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023a98:	e1a04000 	mov	r4, r0
40023a9c:	e1a06001 	mov	r6, r1
40023aa0:	e1a07002 	mov	r7, r2
40023aa4:	e3a00000 	mov	r0, #0
40023aa8:	e59f1108 	ldr	r1, [pc, #264]	; 40023bb8 <MyI2cSendCommand+0x124>
40023aac:	e5810000 	str	r0, [r1]
40023ab0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ab4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023ab8:	e3100202 	tst	r0, #536870912	; 0x20000000
40023abc:	0a000006 	beq	40023adc <MyI2cSendCommand+0x48>
40023ac0:	e3a00000 	mov	r0, #0
40023ac4:	ebfffd69 	bl	40023070 <CyU3PI2cErrorRecovery>
40023ac8:	e1a05000 	mov	r5, r0
40023acc:	e3550000 	cmp	r5, #0
40023ad0:	0a000001 	beq	40023adc <MyI2cSendCommand+0x48>
40023ad4:	e1a00005 	mov	r0, r5
40023ad8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023adc:	e59f80d8 	ldr	r8, [pc, #216]	; 40023bbc <MyI2cSendCommand+0x128>
40023ae0:	e1a00000 	nop			; (mov r0, r0)
40023ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ae8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023aec:	e3100203 	tst	r0, #805306368	; 0x30000000
40023af0:	0a000002 	beq	40023b00 <MyI2cSendCommand+0x6c>
40023af4:	e1b00008 	movs	r0, r8
40023af8:	e2488001 	sub	r8, r8, #1
40023afc:	1afffff8 	bne	40023ae4 <MyI2cSendCommand+0x50>
40023b00:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b04:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b08:	e3100203 	tst	r0, #805306368	; 0x30000000
40023b0c:	0a000001 	beq	40023b18 <MyI2cSendCommand+0x84>
40023b10:	e3a00045 	mov	r0, #69	; 0x45
40023b14:	eaffffef 	b	40023ad8 <MyI2cSendCommand+0x44>
40023b18:	e3a00000 	mov	r0, #0
40023b1c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b20:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023b24:	e5d42008 	ldrb	r2, [r4, #8]
40023b28:	e1a01004 	mov	r1, r4
40023b2c:	e1a0000d 	mov	r0, sp
40023b30:	ebff7f67 	bl	400038d4 <CyU3PMemCopy>
40023b34:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b38:	e59d0000 	ldr	r0, [sp]
40023b3c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023b40:	e59d0004 	ldr	r0, [sp, #4]
40023b44:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023b48:	e3a00000 	mov	r0, #0
40023b4c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023b50:	e3e00000 	mvn	r0, #0
40023b54:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023b58:	e3a00d07 	mov	r0, #448	; 0x1c0
40023b5c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023b60:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b64:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023b68:	e1d400ba 	ldrh	r0, [r4, #10]
40023b6c:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023b70:	e3570000 	cmp	r7, #0
40023b74:	0a000004 	beq	40023b8c <MyI2cSendCommand+0xf8>
40023b78:	e5d40008 	ldrb	r0, [r4, #8]
40023b7c:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023b80:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023b84:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023b88:	ea000003 	b	40023b9c <MyI2cSendCommand+0x108>
40023b8c:	e5d40008 	ldrb	r0, [r4, #8]
40023b90:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023b94:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b98:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023b9c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ba0:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40023ba4:	e3800010 	orr	r0, r0, #16
40023ba8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023bac:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023bb0:	e3a00000 	mov	r0, #0
40023bb4:	eaffffc7 	b	40023ad8 <MyI2cSendCommand+0x44>
40023bb8:	40030f04 	.word	0x40030f04
40023bbc:	00007fff 	.word	0x00007fff
