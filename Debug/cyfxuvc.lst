
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f1bc  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  400121bc  400121bc  000121bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  4001230c  4001230c  0001230c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  400123a4  400123a4  000123a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012810  40012810  00012810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  4001283c  4001283c  0001283c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  40012934  40012934  00012934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  40012940  40012940  00012940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  4001294c  4001294c  0001294c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012974  40012974  00012974  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012984  40012984  00012984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012994  40012994  00012994  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  400129a4  400129a4  000129a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  400129b8  400129b8  000129b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  400129c8  400129c8  000129c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  400129d4  400129d4  000129d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  400129e8  400129e8  000129e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012a24  40012a24  00012a24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012a4c  40012a4c  00012a4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012a84  40012a84  00012a84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012ab8  40012ab8  00012ab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012ad0  40012ad0  00012ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012ae8  40012ae8  00012ae8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012b04  40012b04  00012b04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012b88  40012b88  00012b88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40012c5c  40012c5c  00012c5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  40012ca4  40012ca4  00012ca4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40012e34  40012e34  00012e34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  40012eb4  40012eb4  00012eb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  40012ec4  40012ec4  00012ec4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  400130f8  400130f8  000130f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  400131f0  400131f0  000131f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  40013488  40013488  00013488  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  400134c0  400134c0  000134c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  4001351c  4001351c  0001351c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  4001353c  4001353c  0001353c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  40013598  40013598  00013598  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  400135bc  400135bc  000135bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  400135dc  400135dc  000135dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  400136d0  400136d0  000136d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  4001375c  4001375c  0001375c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013760  40013760  00013760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013784  40013784  00013784  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013898  40013898  00013898  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  40013938  40013938  00013938  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013990  40013990  00013990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  400139e0  400139e0  000139e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013adc  40013adc  00013adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013b8c  40013b8c  00013b8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  40013c40  40013c40  00013c40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40013c68  40013c68  00013c68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  40013c78  40013c78  00013c78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40013e18  40013e18  00013e18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  40013f30  40013f30  00013f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  40013f80  40013f80  00013f80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  400140f0  400140f0  000140f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  400141c8  400141c8  000141c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  4001424c  4001424c  0001424c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  40014264  40014264  00014264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  400143e4  400143e4  000143e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  40014424  40014424  00014424  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  40014434  40014434  00014434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  40014444  40014444  00014444  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  40014454  40014454  00014454  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  40014464  40014464  00014464  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  40014534  40014534  00014534  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  40014764  40014764  00014764  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  400147f4  400147f4  000147f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014868  40014868  00014868  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014890  40014890  00014890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  400148cc  400148cc  000148cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  400148f4  400148f4  000148f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  4001491c  4001491c  0001491c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  40014944  40014944  00014944  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  4001496c  4001496c  0001496c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014994  40014994  00014994  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  400149bc  400149bc  000149bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  400149e8  400149e8  000149e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014a50  40014a50  00014a50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014a64  40014a64  00014a64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014ab8  40014ab8  00014ab8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014b18  40014b18  00014b18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014bb8  40014bb8  00014bb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  40014c98  40014c98  00014c98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  40014d78  40014d78  00014d78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  40014dc0  40014dc0  00014dc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40014e6c  40014e6c  00014e6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  40014eb0  40014eb0  00014eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40014f24  40014f24  00014f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  40015088  40015088  00015088  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  400150dc  400150dc  000150dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  40015130  40015130  00015130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  40015420  40015420  00015420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  400154b0  400154b0  000154b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  4001571c  4001571c  0001571c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015b04  40015b04  00015b04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015bb4  40015bb4  00015bb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  40015c88  40015c88  00015c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40015e3c  40015e3c  00015e3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  40016170  40016170  00016170  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  40016290  40016290  00016290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  400162fc  400162fc  000162fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  400163f4  400163f4  000163f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  400164d0  400164d0  000164d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016670  40016670  00016670  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  4001685c  4001685c  0001685c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016a7c  40016a7c  00016a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  40016cb4  40016cb4  00016cb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40016de4  40016de4  00016de4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  40016f88  40016f88  00016f88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  40017088  40017088  00017088  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  400171a4  400171a4  000171a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  400171f8  400171f8  000171f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  400175b8  400175b8  000175b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  400178a4  400178a4  000178a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017b9c  40017b9c  00017b9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  400182e0  400182e0  000182e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  40018434  40018434  00018434  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  40018564  40018564  00018564  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  40018694  40018694  00018694  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  400187d0  400187d0  000187d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018a40  40018a40  00018a40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  40018c9c  40018c9c  00018c9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40018e1c  40018e1c  00018e1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  40018fa4  40018fa4  00018fa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40019058  40019058  00019058  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  40019110  40019110  00019110  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  400191ac  400191ac  000191ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  4001924c  4001924c  0001924c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  400195b8  400195b8  000195b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019b48  40019b48  00019b48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a128  4001a128  0001a128  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001a7b0  4001a7b0  0001a7b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001a814  4001a814  0001a814  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001a864  4001a864  0001a864  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001a95c  4001a95c  0001a95c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001aa74  4001aa74  0001aa74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001aaf0  4001aaf0  0001aaf0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001ac24  4001ac24  0001ac24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001ad88  4001ad88  0001ad88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001add8  4001add8  0001add8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b088  4001b088  0001b088  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b20c  4001b20c  0001b20c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b24c  4001b24c  0001b24c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b304  4001b304  0001b304  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b394  4001b394  0001b394  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001b61c  4001b61c  0001b61c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001b62c  4001b62c  0001b62c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001b780  4001b780  0001b780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001b900  4001b900  0001b900  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bb64  4001bb64  0001bb64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bb74  4001bb74  0001bb74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001bc40  4001bc40  0001bc40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001bd00  4001bd00  0001bd00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001bd10  4001bd10  0001bd10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c308  4001c308  0001c308  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c38c  4001c38c  0001c38c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c554  4001c554  0001c554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001c678  4001c678  0001c678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001c7c0  4001c7c0  0001c7c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001c934  4001c934  0001c934  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001ca00  4001ca00  0001ca00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001cbc8  4001cbc8  0001cbc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001cbd8  4001cbd8  0001cbd8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001cbe8  4001cbe8  0001cbe8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001cc34  4001cc34  0001cc34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001cca0  4001cca0  0001cca0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001cd1c  4001cd1c  0001cd1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001cdd0  4001cdd0  0001cdd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001cfa8  4001cfa8  0001cfa8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d2c8  4001d2c8  0001d2c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d2d4  4001d2d4  0001d2d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d3b8  4001d3b8  0001d3b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d590  4001d590  0001d590  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001d684  4001d684  0001d684  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001d774  4001d774  0001d774  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001d94c  4001d94c  0001d94c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001db10  4001db10  0001db10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001dc64  4001dc64  0001dc64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001dff4  4001dff4  0001dff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e36c  4001e36c  0001e36c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e3e4  4001e3e4  0001e3e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e45c  4001e45c  0001e45c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001e5f8  4001e5f8  0001e5f8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001e7dc  4001e7dc  0001e7dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001ea4c  4001ea4c  0001ea4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001eb04  4001eb04  0001eb04  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001eb34  4001eb34  0001eb34  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001ebd4  4001ebd4  0001ebd4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001efb4  4001efb4  0001efb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f0a0  4001f0a0  0001f0a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001f6bc  4001f6bc  0001f6bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001f758  4001f758  0001f758  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001f7c8  4001f7c8  0001f7c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001f844  4001f844  0001f844  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001f9b8  4001f9b8  0001f9b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001fa24  4001fa24  0001fa24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  4001fc58  4001fc58  0001fc58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  4001fc74  4001fc74  0001fc74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  4001fe6c  4001fe6c  0001fe6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  400200e0  400200e0  000200e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  40020198  40020198  00020198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  400202b0  400202b0  000202b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  400206ac  400206ac  000206ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  400207a4  400207a4  000207a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  400208b0  400208b0  000208b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020a7c  40020a7c  00020a7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020ad0  40020ad0  00020ad0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020b30  40020b30  00020b30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  40020c74  40020c74  00020c74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  40020cc4  40020cc4  00020cc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  40020eb8  40020eb8  00020eb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  40021048  40021048  00021048  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  400211e0  400211e0  000211e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  400213f0  400213f0  000213f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40021bfc  40021bfc  00021bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40021c4c  40021c4c  00021c4c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  40021d50  40021d50  00021d50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40021e64  40021e64  00021e64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  40021e70  40021e70  00021e70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  40021e80  40021e80  00021e80  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  40021e94  40021e94  00021e94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  40021ea8  40021ea8  00021ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  40021eb8  40021eb8  00021eb8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40021ef8  40021ef8  00021ef8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40021f10  40021f10  00021f10  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40021f28  40021f28  00021f28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  40021f64  40021f64  00021f64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  40021f94  40021f94  00021f94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  40021fc0  40021fc0  00021fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40022040  40022040  00022040  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  400220d4  400220d4  000220d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  40022224  40022224  00022224  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  400222b0  400222b0  000222b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  40022390  40022390  00022390  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  400223a0  400223a0  000223a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  400223f4  400223f4  000223f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  40022490  40022490  00022490  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  400224fc  400224fc  000224fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022568  40022568  00022568  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  400226e0  400226e0  000226e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  400227fc  400227fc  000227fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  400229c0  400229c0  000229c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022ab0  40022ab0  00022ab0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022b88  40022b88  00022b88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40022c0c  40022c0c  00022c0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40022c1c  40022c1c  00022c1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40022c2c  40022c2c  00022c2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  40022c88  40022c88  00022c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40022d70  40022d70  00022d70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40022e28  40022e28  00022e28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40022e6c  40022e6c  00022e6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  40023088  40023088  00023088  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  400230d8  400230d8  000230d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  40023264  40023264  00023264  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  400232c0  400232c0  000232c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  400233b4  400233b4  000233b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  400234a4  400234a4  000234a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023660  40023660  00023660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  400236a4  400236a4  000236a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  400238bc  400238bc  000238bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023aec  40023aec  00023aec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023afc  40023afc  00023afc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f04  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          00002324  40030f20  40030f20  00028f04  2**5
                  ALLOC
266 .debug_abbrev 00001153  00000000  00000000  00028f04  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d362  00000000  00000000  0002a057  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   00023030  00000000  00000000  000a73b9  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca3e9  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d628e  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d62c4  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6474  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042c9  00000000  00000000  000d707d  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000e737  00000000  00000000  000db346  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 0000765b  00000000  00000000  000e9a7d  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f10d8  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a72c  00000000  00000000  000f1178  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 00000558  00000000  00000000  000fb8a4  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fbdfc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031600 	.word	0x40031600

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x3>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x7>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xb>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xb>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x13>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$45+0x20>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$27+0x14>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1b>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20+0x2c>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1b>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x40>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$34+0x1c>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x48>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_frame$41+0x1c>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$48+0x4>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x30>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$55+0xc>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24+0x21>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_frame$62+0x1c>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_pubnames$38+0xf>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_pubnames$45+0xc>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x17>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$66+0xc>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$66>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$73+0x14>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$73+0x8>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x23>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$73+0x20>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x9>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x8>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x6>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x2a>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp_.debug_frame$13+0x18>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xf>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x1f>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d38 	.word	0x40030d38
     af8:	40030d20 	.word	0x40030d20
     afc:	40031a3c 	.word	0x40031a3c
     b00:	4003196c 	.word	0x4003196c
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d34 	.word	0x40030d34
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d3c 	.word	0x40030d3c

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x7>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp_.debug_frame$27+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_pubnames$31+0xc>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x29>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$20>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$20>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x15>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$55>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$55>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$122+0x8>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_pubnames$115+0x20>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_frame$111+0x4>
     ca0:	ea00003a 	b	d90 <__ARM_grp_.debug_pubnames$45+0x7>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_frame$76+0xc>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_pubnames$108+0x13>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_frame$13+0x10>
     cbc:	ea000000 	b	cc4 <__ARM_grp_.debug_frame$62+0x14>
     cc0:	ea000001 	b	ccc <__ARM_grp_.debug_frame$62+0x1c>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_pubnames$24+0x5>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_frame$76+0x8>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_frame$76+0x8>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp_.debug_pubnames$45+0x3>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp_.debug_pubnames$45+0x3>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x4>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$20>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$59+0x4>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$20>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_pubnames$31+0x7>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x23>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_pubnames$31+0x7>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x23>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_pubnames$80+0x3>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$80+0x17>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_frame$111>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_pubnames$31+0xf>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$20>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$101+0x18>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$20>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_pubnames$108+0xf>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$20>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_frame$20+0x14>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_pubnames$31+0xf>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_pubnames$31+0x13>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_frame$20+0x18>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$20>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_pubnames$10+0x1a>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_frame$20+0x14>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_pubnames$24+0x1>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_pubnames$31>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_pubnames$31+0x17>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_pubnames$31+0xc>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$20>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_pubnames$31+0xc>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_pubnames$31+0xc>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_pubnames$45+0xf>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_pubnames$59+0x7>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_QCc000_vz8toPoQ8Qf_P40000+0x7>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp_.debug_frame$55+0x4>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0xb>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x33>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_pubnames$31+0x1b>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$20>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp_.debug_frame$62+0x10>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_pubnames$31+0x1b>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_frame$27+0x8>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$20>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$20>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$20>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_pubnames$24+0xc>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_pubnames$24+0x18>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_pubnames$45+0x1d>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$20>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$20>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$87+0x8>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_pubnames$31+0x1f>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_pubnames$31+0xb>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$20>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_pubnames$31+0x3>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_frame$20+0x18>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$66+0xe>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$20>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_pubnames$73+0x1d>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$87>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$94+0x10>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_pubnames$17+0xb>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$20>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0xe>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_frame$104+0x24>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_pubnames$122+0x20>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$20>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_pubnames$136+0xf>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_frame$27>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_frame$27+0x4>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$20>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$90+0xc>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_pubnames$38>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp..debug_pubnames$cyu3descriptor.h$.2_Os2000_h7PQidXgB29_l00000>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$90+0x4>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x1a>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp_.debug_pubnames$10+0x2>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp_.debug_frame$97+0x10>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_pubnames$17+0x16>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x23>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$20>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_frame$104+0xc>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_frame$20+0x1c>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_frame$104+0x24>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x23>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_frame$111+0x1c>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$59>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$66+0x7>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_frame$125+0x4>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_pubnames$80+0x14>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_frame$132+0x10>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_frame$132+0x3c>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$139+0x1c>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_pubnames$17+0x7>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$20>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_pubnames$17+0x3>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_pubnames$38+0x4>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$20>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030d84 	.word	0x40030d84
    17d0:	40030d64 	.word	0x40030d64
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d70 	.word	0x40030d70
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d6c 	.word	0x40030d6c
    17e4:	40030d9c 	.word	0x40030d9c
    17e8:	40030d40 	.word	0x40030d40
    17ec:	40030da4 	.word	0x40030da4
    17f0:	40030db4 	.word	0x40030db4
    17f4:	40030d74 	.word	0x40030d74
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d68 	.word	0x40030d68
    1800:	80008000 	.word	0x80008000
    1804:	40030db0 	.word	0x40030db0
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a78 	.word	0x40031a78
    1810:	40031b18 	.word	0x40031b18
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_frame$41+0x4>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_frame$41+0x8>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_frame$41+0xc>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_frame$41+0x10>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_frame$41+0x14>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_frame$41+0x18>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_frame$41+0x1c>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_frame$41+0x20>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_frame$41+0x24>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_frame$41+0x28>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_pubnames$66+0x3>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_pubnames$66+0x7>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_pubnames$66+0xb>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_pubnames$66+0xf>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_pubnames$66+0x13>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_pubnames$66+0x17>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$48>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$48+0x4>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_frame$48+0x8>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	40012170 	.word	0x40012170
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x18>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dbc 	.word	0x40030dbc

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x14>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp_.debug_pubnames$73+0x14>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315b0 	.word	0x400315b0

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp_.debug_pubnames$150+0xa>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$80+0x1d>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$80+0x15>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x10>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$150+0xe>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x22>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_pubnames$94+0x1a>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_pubnames$94+0x12>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp_.debug_frame$20+0x18>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_pubnames$108+0x9>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_pubnames$108+0x1>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x1c>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x4>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$150+0x12>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$115+0x11>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp_.debug_pubnames$115+0x9>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_frame$34+0x8>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_pubnames$150+0x16>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_pubnames$129+0x11>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$129+0x9>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$129+0x1>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_frame$41+0x4>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_pubnames$150+0x1a>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp_.debug_pubnames$150+0x6>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp..debug_line$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp_.debug_frame$20+0xc>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$143+0x1>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000acdc 	.word	0x4000acdc

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__ARM_grp_.debug_frame$27>
    1fb4:	40013488 	.word	0x40013488

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40021f10 	.word	0x40021f10

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a470 	.word	0x4000a470

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	40021e80 	.word	0x40021e80

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <___tx_thread_context_restore_veneer+0x4>
    1fd4:	4000adcc 	.word	0x4000adcc

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40022040 	.word	0x40022040

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000>
    1fe4:	4001424c 	.word	0x4001424c

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <___tx_thread_irq_nesting_end_veneer+0x4>
    1fec:	4000aee4 	.word	0x4000aee4

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000af08 	.word	0x4000af08

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40021e64 	.word	0x40021e64

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__ARM_grp_.debug_pubnames$171+0x2>
    2004:	4001f9b8 	.word	0x4001f9b8

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000ac88 	.word	0x4000ac88

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a330 	.word	0x4000a330

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	40009da4 	.word	0x40009da4

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	40013c40 	.word	0x40013c40

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__ARM_grp_.debug_pubnames$178>
    202c:	4001c554 	.word	0x4001c554

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b20c 	.word	0x4001b20c

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__CyU3PDmaIntHandler_veneer+0x4>
    203c:	40022568 	.word	0x40022568

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	40020eb8 	.word	0x40020eb8

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	40016170 	.word	0x40016170

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260, //2B: 0
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea003fac 	b	40012ec4 <CyU3PDebugPrint>
40003010:	40010b60 	.word	0x40010b60

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb003fa3 	bl	40012ec4 <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb003f96 	bl	40012ec4 <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb003f88 	bl	40012ec4 <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb003f7b 	bl	40012ec4 <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb003f6e 	bl	40012ec4 <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb003f61 	bl	40012ec4 <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb003f53 	bl	40012ec4 <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb003f46 	bl	40012ec4 <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb003f39 	bl	40012ec4 <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb003f2c 	bl	40012ec4 <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb003f1f 	bl	40012ec4 <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb003f12 	bl	40012ec4 <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb003f05 	bl	40012ec4 <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb003ef8 	bl	40012ec4 <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003eeb 	bl	40012ec4 <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003ede 	bl	40012ec4 <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003ed1 	bl	40012ec4 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003ec5 	bl	40012ec4 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010b78 	.word	0x40010b78
400033b8:	40010b94 	.word	0x40010b94
400033bc:	40010bf4 	.word	0x40010bf4

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001a87 	bl	40009e0c <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010c4c 	.word	0x40010c4c

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb00154b 	bl	400089c4 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb001547 	bl	400089c4 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003e62 	bl	40012ec4 <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010ae0 	.word	0x40010ae0
40003548:	40010c60 	.word	0x40010c60

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea006789 	b	4001d3b8 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea001427 	b	400086ac <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	40033244 	.word	0x40033244

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea003fec 	b	400135dc <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb001889 	bl	40009888 <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb00144a 	bl	400087b0 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb001836 	bl	40009778 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0018f7 	b	40009a98 <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb001885 	bl	40009e0c <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb0012e9 	bl	400087b0 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb0016d5 	bl	40009778 <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb0018a2 	bl	40009f84 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb0012a6 	bl	400087b0 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb0018b7 	bl	4000a004 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001756 	bl	40009a98 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb0018e0 	bl	4000a0d8 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea001888 	b	40009f84 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb00128e 	bl	400087b0 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb00189f 	bl	4000a004 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb0018a1 	bl	4000a0d8 <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb00187c 	bl	4000a0d8 <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb00122b 	bl	400087b0 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb00183c 	bl	4000a004 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb001867 	bl	4000a0d8 <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb0011df 	bl	400087b0 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb0017f0 	bl	4000a004 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb00168e 	bl	40009a98 <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb001818 	bl	4000a0d8 <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb0017c1 	bl	40009f84 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001664 	bl	40009a18 <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007df6 	bl	400238bc <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001b 	bne	40004158 <SensorRead2B.clone.1+0xbc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003ce5 	bl	40013488 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004118:	eb007ce1 	bl	400234a4 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003cd6 	bl	40013488 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f102c 	ldr	r1, [pc, #44]	; 40004174 <SensorRead2B.clone.1+0xd8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003b5b 	bl	40012ec4 <CyU3PDebugPrint>
40004154:	eafffff4 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004158:	e5d4c001 	ldrb	ip, [r4, #1]
4000415c:	e5d43000 	ldrb	r3, [r4]
40004160:	e59f1010 	ldr	r1, [pc, #16]	; 40004178 <SensorRead2B.clone.1+0xdc>
40004164:	e3a00004 	mov	r0, #4
40004168:	e58dc000 	str	ip, [sp]
4000416c:	eb003b54 	bl	40012ec4 <CyU3PDebugPrint>
40004170:	eaffffde 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004174:	40010f60 	.word	0x40010f60
40004178:	40010f44 	.word	0x40010f44

4000417c <SensorWrite2B>:
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
4000417c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004180:	e35000a0 	cmp	r0, #160	; 0xa0
40004184:	13500070 	cmpne	r0, #112	; 0x70
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004188:	e24dd014 	sub	sp, sp, #20
4000418c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	03a0e000 	moveq	lr, #0
40004194:	13a0e001 	movne	lr, #1
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004198:	e1a07001 	mov	r7, r1
4000419c:	e1a06002 	mov	r6, r2
400041a0:	e1a05003 	mov	r5, r3
400041a4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a8:	1a000021 	bne	40004234 <SensorWrite2B+0xb8>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041ac:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b0:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041b4:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b8:	e28d100c 	add	r1, sp, #12
400041bc:	e3a02001 	mov	r2, #1
400041c0:	e1a0300e 	mov	r3, lr
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
400041c4:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = highAddr;
400041c8:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
400041cc:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e5cdc008 	strb	ip, [sp, #8]
	inbuf[0] = lowAddr;
400041d4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041d8:	eb007db7 	bl	400238bc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041dc:	e3500000 	cmp	r0, #0
400041e0:	0a000010 	beq	40004228 <SensorWrite2B+0xac>
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041e4:	e1a02004 	mov	r2, r4
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400041e8:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
400041ec:	e3a04001 	mov	r4, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041f0:	e1a0000d 	mov	r0, sp
400041f4:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
400041f8:	e3a03000 	mov	r3, #0
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e5cd4008 	strb	r4, [sp, #8]
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004204:	eb007dac 	bl	400238bc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004208:	e2504000 	subs	r4, r0, #0
4000420c:	0a000002 	beq	4000421c <SensorWrite2B+0xa0>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004210:	e1a00004 	mov	r0, r4
40004214:	e28dd014 	add	sp, sp, #20
40004218:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
4000421c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004220:	eb003c98 	bl	40013488 <CyU3PBusyWait>
40004224:	eafffff9 	b	40004210 <SensorWrite2B+0x94>
40004228:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000422c:	eb003c95 	bl	40013488 <CyU3PBusyWait>
40004230:	eaffffeb 	b	400041e4 <SensorWrite2B+0x68>
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004234:	e3a00004 	mov	r0, #4
40004238:	e59f1008 	ldr	r1, [pc, #8]	; 40004248 <SensorWrite2B+0xcc>
4000423c:	eb003b20 	bl	40012ec4 <CyU3PDebugPrint>
		return 1;
40004240:	e3a04001 	mov	r4, #1
40004244:	eafffff1 	b	40004210 <SensorWrite2B+0x94>
40004248:	40010f7c 	.word	0x40010f7c

4000424c <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
4000424c:	e35000a0 	cmp	r0, #160	; 0xa0
40004250:	13500070 	cmpne	r0, #112	; 0x70
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004254:	e92d4010 	push	{r4, lr}
40004258:	e1a0c000 	mov	ip, r0
4000425c:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004260:	03a0e000 	moveq	lr, #0
40004264:	13a0e001 	movne	lr, #1
40004268:	1a00001a 	bne	400042d8 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
4000426c:	e3530040 	cmp	r3, #64	; 0x40
40004270:	8a000013 	bhi	400042c4 <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
40004274:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004278:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000427c:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004280:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
40004284:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004288:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000428c:	e28d0004 	add	r0, sp, #4
40004290:	e59d1018 	ldr	r1, [sp, #24]
40004294:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004298:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
4000429c:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
400042a0:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
400042a4:	eb007d84 	bl	400238bc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042a8:	e2504000 	subs	r4, r0, #0
400042ac:	1a000001 	bne	400042b8 <SensorWrite+0x6c>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400042b0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400042b4:	eb003c73 	bl	40013488 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400042b8:	e1a00004 	mov	r0, r4
400042bc:	e28dd010 	add	sp, sp, #16
400042c0:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400042c4:	e3a00004 	mov	r0, #4
400042c8:	e59f101c 	ldr	r1, [pc, #28]	; 400042ec <SensorWrite+0xa0>
400042cc:	eb003afc 	bl	40012ec4 <CyU3PDebugPrint>
		return 1;
400042d0:	e3a04001 	mov	r4, #1
400042d4:	eafffff7 	b	400042b8 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400042d8:	e3a00004 	mov	r0, #4
400042dc:	e59f100c 	ldr	r1, [pc, #12]	; 400042f0 <SensorWrite+0xa4>
400042e0:	eb003af7 	bl	40012ec4 <CyU3PDebugPrint>
		return 1;
400042e4:	e3a04001 	mov	r4, #1
400042e8:	eafffff2 	b	400042b8 <SensorWrite+0x6c>
400042ec:	40010fa0 	.word	0x40010fa0
400042f0:	40010f7c 	.word	0x40010f7c

400042f4 <SensorRead2B>:
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
400042f4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400042f8:	e35000a1 	cmp	r0, #161	; 0xa1
400042fc:	13500071 	cmpne	r0, #113	; 0x71
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004300:	e24dd01c 	sub	sp, sp, #28
40004304:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004308:	03a0c000 	moveq	ip, #0
4000430c:	13a0c001 	movne	ip, #1
CyU3PReturnStatus_t SensorRead2B(
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t *buf) {
40004310:	e1a06001 	mov	r6, r1
40004314:	e1a0e002 	mov	lr, r2
40004318:	e59d5030 	ldr	r5, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000431c:	1a000021 	bne	400043a8 <SensorRead2B+0xb4>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
40004320:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004324:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004328:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
4000432c:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004330:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004334:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004338:	e1a01005 	mov	r1, r5
4000433c:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004340:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
40004344:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004348:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
4000434c:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004350:	eb007d59 	bl	400238bc <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004354:	e2502000 	subs	r2, r0, #0
40004358:	1a000017 	bne	400043bc <SensorRead2B+0xc8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
4000435c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004360:	eb003c48 	bl	40013488 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004364:	e3a0e001 	mov	lr, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004368:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
4000436c:	e28d000c 	add	r0, sp, #12
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004370:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004374:	e1a01005 	mov	r1, r5
40004378:	e1a0200e 	mov	r2, lr
4000437c:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004380:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004384:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
40004388:	eb007c45 	bl	400234a4 <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000438c:	e2504000 	subs	r4, r0, #0
40004390:	1a000010 	bne	400043d8 <SensorRead2B+0xe4>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004394:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004398:	eb003c3a 	bl	40013488 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000439c:	e1a00004 	mov	r0, r4
400043a0:	e28dd01c 	add	sp, sp, #28
400043a4:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400043a8:	e3a00004 	mov	r0, #4
400043ac:	e59f1044 	ldr	r1, [pc, #68]	; 400043f8 <SensorRead2B+0x104>
400043b0:	eb003ac3 	bl	40012ec4 <CyU3PDebugPrint>
		return 1;
400043b4:	e3a04001 	mov	r4, #1
400043b8:	eafffff7 	b	4000439c <SensorRead2B+0xa8>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043bc:	e5d5c001 	ldrb	ip, [r5, #1]
400043c0:	e5d53000 	ldrb	r3, [r5]
400043c4:	e59f1030 	ldr	r1, [pc, #48]	; 400043fc <SensorRead2B+0x108>
400043c8:	e3a00004 	mov	r0, #4
400043cc:	e58dc000 	str	ip, [sp]
400043d0:	eb003abb 	bl	40012ec4 <CyU3PDebugPrint>
400043d4:	eaffffe2 	b	40004364 <SensorRead2B+0x70>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, 1, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043d8:	e5d5c001 	ldrb	ip, [r5, #1]
400043dc:	e5d53000 	ldrb	r3, [r5]
400043e0:	e59f1018 	ldr	r1, [pc, #24]	; 40004400 <SensorRead2B+0x10c>
400043e4:	e1a02004 	mov	r2, r4
400043e8:	e3a00004 	mov	r0, #4
400043ec:	e58dc000 	str	ip, [sp]
400043f0:	eb003ab3 	bl	40012ec4 <CyU3PDebugPrint>
400043f4:	eaffffe8 	b	4000439c <SensorRead2B+0xa8>
400043f8:	40010f7c 	.word	0x40010f7c
400043fc:	40010f44 	.word	0x40010f44
40004400:	40010f60 	.word	0x40010f60

40004404 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004404:	e35000a1 	cmp	r0, #161	; 0xa1
40004408:	13500071 	cmpne	r0, #113	; 0x71
#endif
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
4000440c:	e92d4030 	push	{r4, r5, lr}
40004410:	e1a0c000 	mov	ip, r0
40004414:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004418:	03a0e000 	moveq	lr, #0
4000441c:	13a0e001 	movne	lr, #1
40004420:	1a00001c 	bne	40004498 <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004424:	e3530040 	cmp	r3, #64	; 0x40
40004428:	8a000015 	bhi	40004484 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
4000442c:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004430:	e1a02003 	mov	r2, r3
40004434:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
40004438:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
4000443c:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004440:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004444:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
40004448:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
4000444c:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004450:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
40004454:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004458:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000445c:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
40004460:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004464:	eb007c0e 	bl	400234a4 <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004468:	e2504000 	subs	r4, r0, #0
4000446c:	1a000001 	bne	40004478 <SensorRead+0x74>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004470:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004474:	eb003c03 	bl	40013488 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
40004478:	e1a00004 	mov	r0, r4
4000447c:	e28dd014 	add	sp, sp, #20
40004480:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
40004484:	e3a00004 	mov	r0, #4
40004488:	e59f101c 	ldr	r1, [pc, #28]	; 400044ac <SensorRead+0xa8>
4000448c:	eb003a8c 	bl	40012ec4 <CyU3PDebugPrint>
		return 1;
40004490:	e3a04001 	mov	r4, #1
40004494:	eafffff7 	b	40004478 <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004498:	e3a00004 	mov	r0, #4
4000449c:	e59f100c 	ldr	r1, [pc, #12]	; 400044b0 <SensorRead+0xac>
400044a0:	eb003a87 	bl	40012ec4 <CyU3PDebugPrint>
		return 1;
400044a4:	e3a04001 	mov	r4, #1
400044a8:	eafffff2 	b	40004478 <SensorRead+0x74>
400044ac:	40010fa0 	.word	0x40010fa0
400044b0:	40010f7c 	.word	0x40010f7c

400044b4 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
400044b4:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
400044b8:	e3a00016 	mov	r0, #22
400044bc:	e3a01000 	mov	r1, #0
400044c0:	eb00797a 	bl	40022ab0 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
400044c4:	e2502000 	subs	r2, r0, #0
400044c8:	1a000022 	bne	40004558 <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
400044cc:	e59f1094 	ldr	r1, [pc, #148]	; 40004568 <SensorReset+0xb4>
400044d0:	e3a00004 	mov	r0, #4
400044d4:	eb003a7a 	bl	40012ec4 <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
400044d8:	eb00132b 	bl	4000918c <_tx_time_get>
400044dc:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
400044e0:	e3a00f7d 	mov	r0, #500	; 0x1f4
400044e4:	eb001136 	bl	400089c4 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
400044e8:	eb001327 	bl	4000918c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
400044ec:	e1a04804 	lsl	r4, r4, #16
400044f0:	e1a02824 	lsr	r2, r4, #16
400044f4:	e59f1070 	ldr	r1, [pc, #112]	; 4000456c <SensorReset+0xb8>
400044f8:	e1a00800 	lsl	r0, r0, #16
400044fc:	e1a03820 	lsr	r3, r0, #16
40004500:	e3a00004 	mov	r0, #4
40004504:	eb003a6e 	bl	40012ec4 <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
40004508:	eb00131f 	bl	4000918c <_tx_time_get>
4000450c:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004510:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004514:	eb00112a 	bl	400089c4 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
40004518:	eb00131b 	bl	4000918c <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
4000451c:	e1a02804 	lsl	r2, r4, #16
40004520:	e1a02822 	lsr	r2, r2, #16
40004524:	e59f1040 	ldr	r1, [pc, #64]	; 4000456c <SensorReset+0xb8>
40004528:	e1a03800 	lsl	r3, r0, #16
4000452c:	e1a03823 	lsr	r3, r3, #16
40004530:	e3a00004 	mov	r0, #4
40004534:	eb003a62 	bl	40012ec4 <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
40004538:	e3a00016 	mov	r0, #22
4000453c:	e3a01001 	mov	r1, #1
40004540:	eb00795a 	bl	40022ab0 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004544:	e2502000 	subs	r2, r0, #0
40004548:	1a000002 	bne	40004558 <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
4000454c:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004550:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004554:	ea00111a 	b	400089c4 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004558:	e59f1010 	ldr	r1, [pc, #16]	; 40004570 <SensorReset+0xbc>
4000455c:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004560:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004564:	ea003a56 	b	40012ec4 <CyU3PDebugPrint>
40004568:	40010fe8 	.word	0x40010fe8
4000456c:	40010ffc 	.word	0x40010ffc
40004570:	40010fc0 	.word	0x40010fc0

40004574 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
40004574:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004578:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
4000457c:	e3a00052 	mov	r0, #82	; 0x52
40004580:	e3a01030 	mov	r1, #48	; 0x30
40004584:	e3a020f2 	mov	r2, #242	; 0xf2
40004588:	e28d3004 	add	r3, sp, #4
4000458c:	ebfffec2 	bl	4000409c <SensorRead2B.clone.1>
40004590:	e3500000 	cmp	r0, #0
40004594:	1a000002 	bne	400045a4 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
40004598:	e5dd3004 	ldrb	r3, [sp, #4]
4000459c:	e3530056 	cmp	r3, #86	; 0x56
400045a0:	0a000002 	beq	400045b0 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400045a4:	e3a00004 	mov	r0, #4
400045a8:	e59f1008 	ldr	r1, [pc, #8]	; 400045b8 <SensorInit+0x44>
400045ac:	eb003a44 	bl	40012ec4 <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
400045b0:	e28dd00c 	add	sp, sp, #12
400045b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400045b8:	40011010 	.word	0x40011010

400045bc <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400045c0:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045c4:	e3a00052 	mov	r0, #82	; 0x52
400045c8:	e3a01030 	mov	r1, #48	; 0x30
400045cc:	e3a020f2 	mov	r2, #242	; 0xf2
400045d0:	e28d3004 	add	r3, sp, #4
400045d4:	ebfffeb0 	bl	4000409c <SensorRead2B.clone.1>
400045d8:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
400045dc:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
400045e0:	1a000002 	bne	400045f0 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045e4:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
400045e8:	e2500056 	subs	r0, r0, #86	; 0x56
400045ec:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
400045f0:	e28dd00c 	add	sp, sp, #12
400045f4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400045f8 <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
400045f8:	e92d4010 	push	{r4, lr}
400045fc:	e24dd008 	sub	sp, sp, #8
40004600:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, buf);
40004604:	e1a02000 	mov	r2, r0
40004608:	e28d3004 	add	r3, sp, #4
4000460c:	e3a00053 	mov	r0, #83	; 0x53
40004610:	ebfffea1 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004614:	e59f1018 	ldr	r1, [pc, #24]	; 40004634 <SensorGetControl+0x3c>
40004618:	e1a02004 	mov	r2, r4
4000461c:	e5dd3004 	ldrb	r3, [sp, #4]
40004620:	e3a00004 	mov	r0, #4
40004624:	eb003a26 	bl	40012ec4 <CyU3PDebugPrint>
//#endif
	return buf[0];
};
40004628:	e5dd0004 	ldrb	r0, [sp, #4]
4000462c:	e28dd008 	add	sp, sp, #8
40004630:	e8bd8010 	pop	{r4, pc}
40004634:	40011034 	.word	0x40011034

40004638 <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004638:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
4000463c:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004640:	e24dd01c 	sub	sp, sp, #28
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004644:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004648:	e1a05000 	mov	r5, r0
4000464c:	e1a04002 	mov	r4, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
40004650:	e5cd1006 	strb	r1, [sp, #6]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004654:	e5cde004 	strb	lr, [sp, #4]
	preamble.buffer[1] = boradAddr;
40004658:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
4000465c:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004660:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004664:	e28d0004 	add	r0, sp, #4
40004668:	e28d1010 	add	r1, sp, #16
4000466c:	e3a02001 	mov	r2, #1
40004670:	e3a03000 	mov	r3, #0
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	uint8_t buf[2];
	buf[0] = value;
40004674:	e5cd4014 	strb	r4, [sp, #20]
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004678:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
4000467c:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;
40004680:	e5cd5010 	strb	r5, [sp, #16]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004684:	eb007c8c 	bl	400238bc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004688:	e3500000 	cmp	r0, #0
4000468c:	0a000015 	beq	400046e8 <SensorSetControl+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004690:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004694:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004698:	e28d0004 	add	r0, sp, #4
4000469c:	e28d1014 	add	r1, sp, #20
400046a0:	e1a0200c 	mov	r2, ip
400046a4:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400046a8:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
400046ac:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400046b0:	eb007c81 	bl	400238bc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400046b4:	e3500000 	cmp	r0, #0
400046b8:	0a000007 	beq	400046dc <SensorSetControl+0xa4>
{
	uint8_t buf[2];
	buf[0] = value;
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, 1, buf);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
400046bc:	e59f1030 	ldr	r1, [pc, #48]	; 400046f4 <SensorSetControl+0xbc>
400046c0:	e1a02005 	mov	r2, r5
400046c4:	e1a03004 	mov	r3, r4
400046c8:	e3a00004 	mov	r0, #4
400046cc:	eb0039fc 	bl	40012ec4 <CyU3PDebugPrint>
//#endif
	return 0;
};
400046d0:	e3a00000 	mov	r0, #0
400046d4:	e28dd01c 	add	sp, sp, #28
400046d8:	e8bd8030 	pop	{r4, r5, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400046dc:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046e0:	eb003b68 	bl	40013488 <CyU3PBusyWait>
400046e4:	eafffff4 	b	400046bc <SensorSetControl+0x84>
400046e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046ec:	eb003b65 	bl	40013488 <CyU3PBusyWait>
400046f0:	eaffffe6 	b	40004690 <SensorSetControl+0x58>
400046f4:	40011054 	.word	0x40011054

400046f8 <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
400046f8:	e1a0c000 	mov	ip, r0
400046fc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004700:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, buf);
40004704:	e28d3004 	add	r3, sp, #4
40004708:	e1a00002 	mov	r0, r2
4000470c:	e1a0200c 	mov	r2, ip
40004710:	ebfffe61 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004714:	e5dd0004 	ldrb	r0, [sp, #4]
40004718:	e28dd00c 	add	sp, sp, #12
4000471c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40004720 <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004720:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004724:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004728:	e24dd01c 	sub	sp, sp, #28
	uint8_t buf[2];
	buf[0] = value;
4000472c:	e5cd2014 	strb	r2, [sp, #20]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
40004730:	e5cd3005 	strb	r3, [sp, #5]
	preamble.buffer[2] = highAddr;
40004734:	e5cd1006 	strb	r1, [sp, #6]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;
40004738:	e5cd0010 	strb	r0, [sp, #16]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
4000473c:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004740:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004744:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004748:	e28d0004 	add	r0, sp, #4
4000474c:	e28d1010 	add	r1, sp, #16
40004750:	e3a02001 	mov	r2, #1
40004754:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004758:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
4000475c:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004760:	eb007c55 	bl	400238bc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004764:	e3500000 	cmp	r0, #0
40004768:	0a000010 	beq	400047b0 <SensorSetIrisControl+0x90>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
4000476c:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004770:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004774:	e28d0004 	add	r0, sp, #4
40004778:	e28d1014 	add	r1, sp, #20
4000477c:	e1a0200c 	mov	r2, ip
40004780:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004784:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
40004788:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
4000478c:	eb007c4a 	bl	400238bc <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004790:	e3500000 	cmp	r0, #0
40004794:	0a000002 	beq	400047a4 <SensorSetIrisControl+0x84>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, 1, buf);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
40004798:	e3a00000 	mov	r0, #0
4000479c:	e28dd01c 	add	sp, sp, #28
400047a0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400047a4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047a8:	eb003b36 	bl	40013488 <CyU3PBusyWait>
400047ac:	eafffff9 	b	40004798 <SensorSetIrisControl+0x78>
400047b0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047b4:	eb003b33 	bl	40013488 <CyU3PBusyWait>
400047b8:	eaffffeb 	b	4000476c <SensorSetIrisControl+0x4c>

400047bc <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047bc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047c0:	e59f2200 	ldr	r2, [pc, #512]	; 400049c8 <I2cAppThread_Entry+0x20c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047c4:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047c8:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047cc:	e3a0effa 	mov	lr, #1000	; 0x3e8
400047d0:	e284c02c 	add	ip, r4, #44	; 0x2c
400047d4:	e3a0300b 	mov	r3, #11
400047d8:	e1a01004 	mov	r1, r4
400047dc:	e59f01e8 	ldr	r0, [pc, #488]	; 400049cc <I2cAppThread_Entry+0x210>
400047e0:	e58de000 	str	lr, [sp]
400047e4:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047e8:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047ec:	e58d4004 	str	r4, [sp, #4]
400047f0:	e58d4008 	str	r4, [sp, #8]
400047f4:	eb001872 	bl	4000a9c4 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
400047f8:	eb001263 	bl	4000918c <_tx_time_get>
400047fc:	e59f11cc 	ldr	r1, [pc, #460]	; 400049d0 <I2cAppThread_Entry+0x214>
40004800:	e59f51cc 	ldr	r5, [pc, #460]	; 400049d4 <I2cAppThread_Entry+0x218>
40004804:	e1a02000 	mov	r2, r0
40004808:	e3a00004 	mov	r0, #4
4000480c:	eb0039ac 	bl	40012ec4 <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004810:	e3a00032 	mov	r0, #50	; 0x32
40004814:	eb00106a 	bl	400089c4 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
40004818:	e59f01ac 	ldr	r0, [pc, #428]	; 400049cc <I2cAppThread_Entry+0x210>
4000481c:	eb001836 	bl	4000a8fc <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004820:	ea000000 	b	40004828 <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
40004824:	eb001817 	bl	4000a888 <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004828:	e5d5201a 	ldrb	r2, [r5, #26]
4000482c:	e3520000 	cmp	r2, #0
40004830:	0afffffb 	beq	40004824 <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
40004834:	e59f0198 	ldr	r0, [pc, #408]	; 400049d4 <I2cAppThread_Entry+0x218>
40004838:	e59f1198 	ldr	r1, [pc, #408]	; 400049d8 <I2cAppThread_Entry+0x21c>
4000483c:	e5903010 	ldr	r3, [r0, #16]
40004840:	e3a00004 	mov	r0, #4
40004844:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
40004848:	eb00399d 	bl	40012ec4 <CyU3PDebugPrint>
4000484c:	e59f7188 	ldr	r7, [pc, #392]	; 400049dc <I2cAppThread_Entry+0x220>
40004850:	e59fb188 	ldr	fp, [pc, #392]	; 400049e0 <I2cAppThread_Entry+0x224>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004854:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
40004858:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
4000485c:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004860:	e3a02003 	mov	r2, #3
40004864:	e28d3014 	add	r3, sp, #20
40004868:	e3a01020 	mov	r1, #32
4000486c:	e59f0170 	ldr	r0, [pc, #368]	; 400049e4 <I2cAppThread_Entry+0x228>
40004870:	e58d6000 	str	r6, [sp]
40004874:	eb00151a 	bl	40009ce4 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004878:	e1a01006 	mov	r1, r6
4000487c:	e597001c 	ldr	r0, [r7, #28]
40004880:	eb0015df 	bl	4000a004 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
40004884:	e597001c 	ldr	r0, [r7, #28]
40004888:	eb001612 	bl	4000a0d8 <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000488c:	e595001c 	ldr	r0, [r5, #28]
40004890:	e1a01006 	mov	r1, r6
40004894:	eb0015da 	bl	4000a004 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
40004898:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
4000489c:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400048a0:	e3520000 	cmp	r2, #0
400048a4:	1a000008 	bne	400048cc <I2cAppThread_Entry+0x110>
400048a8:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400048ac:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400048b0:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048b4:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
400048b8:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048bc:	e353003f 	cmp	r3, #63	; 0x3f
400048c0:	93520000 	cmpls	r2, #0
400048c4:	0afffff8 	beq	400048ac <I2cAppThread_Entry+0xf0>
400048c8:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
400048cc:	e3520000 	cmp	r2, #0
400048d0:	0a000029 	beq	4000497c <I2cAppThread_Entry+0x1c0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048d4:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048d8:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048dc:	e083e083 	add	lr, r3, r3, lsl #1
400048e0:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048e4:	e242c020 	sub	ip, r2, #32
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048e8:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
400048ec:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
400048f0:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
400048f4:	e1daa0b8 	ldrh	sl, [sl, #8]
					switch(lcCmdDes->CmdID){
400048f8:	e35c0003 	cmp	ip, #3
400048fc:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004900:	ea00001a 	b	40004970 <I2cAppThread_Entry+0x1b4>
40004904:	40004914 	.word	0x40004914
40004908:	40004914 	.word	0x40004914
4000490c:	40004960 	.word	0x40004960
40004910:	40004960 	.word	0x40004960
						case 0x20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 0x21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004914:	e3a03052 	mov	r3, #82	; 0x52
40004918:	ebffff80 	bl	40004720 <SensorSetIrisControl>
							delaytime = 500;
							break;
4000491c:	e3a01f7d 	mov	r1, #500	; 0x1f4
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
							break;
					}
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004920:	e3a02000 	mov	r2, #0
40004924:	e59f00a0 	ldr	r0, [pc, #160]	; 400049cc <I2cAppThread_Entry+0x210>
40004928:	eb001803 	bl	4000a93c <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
4000492c:	e59f0098 	ldr	r0, [pc, #152]	; 400049cc <I2cAppThread_Entry+0x210>
40004930:	eb0017f1 	bl	4000a8fc <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004934:	e5d40001 	ldrb	r0, [r4, #1]
40004938:	e5d41002 	ldrb	r1, [r4, #2]
4000493c:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004940:	12800001 	addne	r0, r0, #1
40004944:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
40004948:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
4000494c:	0a000010 	beq	40004994 <I2cAppThread_Entry+0x1d8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004950:	e595001c 	ldr	r0, [r5, #28]
40004954:	eb0015df 	bl	4000a0d8 <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
40004958:	eb0017ca 	bl	4000a888 <_txe_thread_relinquish>
		}
4000495c:	eaffffbf 	b	40004860 <I2cAppThread_Entry+0xa4>
						case 0x22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 0x23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//opt Zoom
40004960:	e3a03082 	mov	r3, #130	; 0x82
40004964:	ebffff6d 	bl	40004720 <SensorSetIrisControl>
							delaytime = 300;
							break;
40004968:	e3a01f4b 	mov	r1, #300	; 0x12c
4000496c:	eaffffeb 	b	40004920 <I2cAppThread_Entry+0x164>
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004970:	ebffff30 	bl	40004638 <SensorSetControl>
40004974:	e1a0100a 	mov	r1, sl
							break;
40004978:	eaffffe8 	b	40004920 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
4000497c:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004980:	e59f0044 	ldr	r0, [pc, #68]	; 400049cc <I2cAppThread_Entry+0x210>
40004984:	eb0017ec 	bl	4000a93c <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
40004988:	e59f003c 	ldr	r0, [pc, #60]	; 400049cc <I2cAppThread_Entry+0x210>
4000498c:	eb0017da 	bl	4000a8fc <_txe_timer_activate>
40004990:	eaffffee 	b	40004950 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004994:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
40004998:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
4000499c:	e35c0023 	cmp	ip, #35	; 0x23
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049a0:	824cc020 	subhi	ip, ip, #32
400049a4:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049a8:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049ac:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049b0:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b4:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049b8:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
400049bc:	e5944034 	ldr	r4, [r4, #52]	; 0x34
400049c0:	e5854010 	str	r4, [r5, #16]
400049c4:	eaffffe1 	b	40004950 <I2cAppThread_Entry+0x194>
400049c8:	400049e8 	.word	0x400049e8
400049cc:	40032fc4 	.word	0x40032fc4
400049d0:	400110c0 	.word	0x400110c0
400049d4:	40032ec4 	.word	0x40032ec4
400049d8:	400110d4 	.word	0x400110d4
400049dc:	40033110 	.word	0x40033110
400049e0:	40030000 	.word	0x40030000
400049e4:	40030f90 	.word	0x40030f90

400049e8 <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
400049e8:	e59f0008 	ldr	r0, [pc, #8]	; 400049f8 <I2CCmdCb+0x10>
400049ec:	e3a01020 	mov	r1, #32
400049f0:	e3a02000 	mov	r2, #0
400049f4:	ea0014ea 	b	40009da4 <_txe_event_flags_set>
400049f8:	40030f90 	.word	0x40030f90

400049fc <CyFxUvcApplnDmaCallback>:
        )
{
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
400049fc:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004a00:	e92d4030 	push	{r4, r5, lr}
40004a04:	e1a04002 	mov	r4, r2
40004a08:	e24dd00c 	sub	sp, sp, #12
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a0c:	0a00000b 	beq	40004a40 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
                        status, input->buffer_p.count, prodCount - consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004a10:	e3510010 	cmp	r1, #16
40004a14:	1a000007 	bne	40004a38 <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004a18:	e59f3104 	ldr	r3, [pc, #260]	; 40004b24 <CyFxUvcApplnDmaCallback+0x128>
        streamingStarted = CyTrue;
40004a1c:	e3a02001 	mov	r2, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a20:	e1d3c3b0 	ldrh	ip, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
40004a24:	e5832034 	str	r2, [r3, #52]	; 0x34
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a28:	e08c0002 	add	r0, ip, r2
40004a2c:	e1a01800 	lsl	r1, r0, #16
40004a30:	e1a02821 	lsr	r2, r1, #16
40004a34:	e1c323b0 	strh	r2, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
    }
}
40004a38:	e28dd00c 	add	sp, sp, #12
40004a3c:	e8bd8030 	pop	{r4, r5, pc}
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004a40:	e1d220b4 	ldrh	r2, [r2, #4]
40004a44:	e59f30dc 	ldr	r3, [pc, #220]	; 40004b28 <CyFxUvcApplnDmaCallback+0x12c>
40004a48:	e1520003 	cmp	r2, r3
40004a4c:	0a000029 	beq	40004af8 <CyFxUvcApplnDmaCallback+0xfc>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004a50:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004a54:	e59f10d0 	ldr	r1, [pc, #208]	; 40004b2c <CyFxUvcApplnDmaCallback+0x130>
40004a58:	e245000c 	sub	r0, r5, #12
40004a5c:	e3a0200c 	mov	r2, #12
40004a60:	ebfffb9b 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a64:	e555c00b 	ldrb	ip, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a68:	e59f30b4 	ldr	r3, [pc, #180]	; 40004b24 <CyFxUvcApplnDmaCallback+0x128>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a6c:	e38c1002 	orr	r1, ip, #2
40004a70:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a74:	e1d302ba 	ldrh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a78:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a7c:	e2802001 	add	r2, r0, #1
40004a80:	e1c322ba 	strh	r2, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a84:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a88:	e1d3e2be 	ldrh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004a8c:	e281100c 	add	r1, r1, #12
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a90:	e28ec001 	add	ip, lr, #1
40004a94:	e1a0080c 	lsl	r0, ip, #16
40004a98:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004a9c:	e1a02801 	lsl	r2, r1, #16
40004aa0:	e1a01822 	lsr	r1, r2, #16
40004aa4:	e59f0084 	ldr	r0, [pc, #132]	; 40004b30 <CyFxUvcApplnDmaCallback+0x134>
40004aa8:	e3a02000 	mov	r2, #0
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004aac:	e1c3e2be 	strh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004ab0:	eb0049d0 	bl	400171f8 <CyU3PDmaMultiChannelCommitBuffer>
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ab4:	e59f1068 	ldr	r1, [pc, #104]	; 40004b24 <CyFxUvcApplnDmaCallback+0x128>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
40004ab8:	e2502000 	subs	r2, r0, #0
40004abc:	0affffdd 	beq	40004a38 <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004ac0:	e1d1c2be 	ldrh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004ac4:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
            {
                prodCount--;
40004ac8:	e24c0001 	sub	r0, ip, #1
40004acc:	e1a0e800 	lsl	lr, r0, #16
40004ad0:	e1a0c82e 	lsr	ip, lr, #16
40004ad4:	e1c1c2be 	strh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004ad8:	e1d1e2be 	ldrh	lr, [r1, #46]	; 0x2e
40004adc:	e1d103b0 	ldrh	r0, [r1, #48]	; 0x30
40004ae0:	e59f104c 	ldr	r1, [pc, #76]	; 40004b34 <CyFxUvcApplnDmaCallback+0x138>
40004ae4:	e060c00e 	rsb	ip, r0, lr
40004ae8:	e3a00004 	mov	r0, #4
40004aec:	e58dc000 	str	ip, [sp]
40004af0:	eb0038f3 	bl	40012ec4 <CyU3PDebugPrint>
40004af4:	eaffffcf 	b	40004a38 <CyFxUvcApplnDmaCallback+0x3c>
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004af8:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004afc:	e59f1028 	ldr	r1, [pc, #40]	; 40004b2c <CyFxUvcApplnDmaCallback+0x130>
40004b00:	e24e000c 	sub	r0, lr, #12
40004b04:	e3a0200c 	mov	r2, #12
40004b08:	ebfffb71 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004b0c:	e59f3010 	ldr	r3, [pc, #16]	; 40004b24 <CyFxUvcApplnDmaCallback+0x128>
40004b10:	e1d410b4 	ldrh	r1, [r4, #4]
40004b14:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004b18:	e28c0001 	add	r0, ip, #1
40004b1c:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004b20:	eaffffd8 	b	40004a88 <CyFxUvcApplnDmaCallback+0x8c>
40004b24:	40030f90 	.word	0x40030f90
40004b28:	00003ff0 	.word	0x00003ff0
40004b2c:	40030480 	.word	0x40030480
40004b30:	40032ee4 	.word	0x40032ee4
40004b34:	400110f8 	.word	0x400110f8

40004b38 <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004b38:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004b3c:	e92d4070 	push	{r4, r5, r6, lr}
40004b40:	e1a03001 	mov	r3, r1
40004b44:	e24dd010 	sub	sp, sp, #16
40004b48:	e1a04000 	mov	r4, r0
    switch (evtype)
40004b4c:	0a000036 	beq	40004c2c <CyFxUVCApplnUSBEventCB+0xf4>
40004b50:	e3500004 	cmp	r0, #4
40004b54:	0a00001f 	beq	40004bd8 <CyFxUVCApplnUSBEventCB+0xa0>
40004b58:	e3500001 	cmp	r0, #1
40004b5c:	0a000001 	beq	40004b68 <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004b60:	e28dd010 	add	sp, sp, #16
40004b64:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b68:	e59f5128 	ldr	r5, [pc, #296]	; 40004c98 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004b6c:	e1a02000 	mov	r2, r0
40004b70:	e59f1124 	ldr	r1, [pc, #292]	; 40004c9c <CyFxUVCApplnUSBEventCB+0x164>
40004b74:	e3a00004 	mov	r0, #4
40004b78:	eb0038d1 	bl	40012ec4 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004b7c:	e1a00004 	mov	r0, r4
40004b80:	eb0059df 	bl	4001b304 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004b84:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004b88:	e1a01004 	mov	r1, r4
40004b8c:	e1a00005 	mov	r0, r5
40004b90:	e3a02002 	mov	r2, #2
40004b94:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b98:	e585c038 	str	ip, [r5, #56]	; 0x38
            isUsbConnected = CyFalse;
40004b9c:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004ba0:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ba4:	e58dc000 	str	ip, [sp]
40004ba8:	eb00144d 	bl	40009ce4 <_txe_event_flags_get>
40004bac:	e2504000 	subs	r4, r0, #0
40004bb0:	1affffea 	bne	40004b60 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004bb4:	e3e01001 	mvn	r1, #1
40004bb8:	e3a02002 	mov	r2, #2
40004bbc:	e1a00005 	mov	r0, r5
40004bc0:	eb001477 	bl	40009da4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004bc4:	e1a00005 	mov	r0, r5
40004bc8:	e3a01002 	mov	r1, #2
40004bcc:	e1a02004 	mov	r2, r4
40004bd0:	eb001473 	bl	40009da4 <_txe_event_flags_set>
40004bd4:	eaffffe1 	b	40004b60 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004bd8:	e59f50b8 	ldr	r5, [pc, #184]	; 40004c98 <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004bdc:	e59f10bc 	ldr	r1, [pc, #188]	; 40004ca0 <CyFxUVCApplnUSBEventCB+0x168>
40004be0:	e1a02000 	mov	r2, r0
40004be4:	eb0038b6 	bl	40012ec4 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004be8:	e3a00001 	mov	r0, #1
40004bec:	eb0059c4 	bl	4001b304 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004bf0:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004bf4:	e3a01001 	mov	r1, #1
40004bf8:	e3a02002 	mov	r2, #2
40004bfc:	e1a00005 	mov	r0, r5
40004c00:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c04:	e585c038 	str	ip, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c08:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c0c:	e58dc000 	str	ip, [sp]
40004c10:	eb001433 	bl	40009ce4 <_txe_event_flags_get>
40004c14:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c18:	01a00005 	moveq	r0, r5
40004c1c:	03e01001 	mvneq	r1, #1
40004c20:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c24:	1affffcd 	bne	40004b60 <CyFxUVCApplnUSBEventCB+0x28>
40004c28:	eaffffe4 	b	40004bc0 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c2c:	e59f5064 	ldr	r5, [pc, #100]	; 40004c98 <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004c30:	e1a02000 	mov	r2, r0
40004c34:	e59f1068 	ldr	r1, [pc, #104]	; 40004ca4 <CyFxUVCApplnUSBEventCB+0x16c>
40004c38:	e3a00004 	mov	r0, #4
40004c3c:	eb0038a0 	bl	40012ec4 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c40:	e3a00001 	mov	r0, #1
40004c44:	eb0059ae 	bl	4001b304 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c48:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c4c:	e1a00005 	mov	r0, r5
40004c50:	e3a01001 	mov	r1, #1
40004c54:	e1a02004 	mov	r2, r4
40004c58:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c5c:	e5856038 	str	r6, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c60:	e5856034 	str	r6, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c64:	e58d6000 	str	r6, [sp]
40004c68:	eb00141d 	bl	40009ce4 <_txe_event_flags_get>
40004c6c:	e2506000 	subs	r6, r0, #0
40004c70:	1affffba 	bne	40004b60 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c74:	e1a02004 	mov	r2, r4
40004c78:	e1a00005 	mov	r0, r5
40004c7c:	e3e01001 	mvn	r1, #1
40004c80:	eb001447 	bl	40009da4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004c84:	e1a00005 	mov	r0, r5
40004c88:	e1a01004 	mov	r1, r4
40004c8c:	e1a02006 	mov	r2, r6
40004c90:	eb001443 	bl	40009da4 <_txe_event_flags_set>
40004c94:	eaffffb1 	b	40004b60 <CyFxUVCApplnUSBEventCB+0x28>
40004c98:	40030f90 	.word	0x40030f90
40004c9c:	40011184 	.word	0x40011184
40004ca0:	40011140 	.word	0x40011140
40004ca4:	40011160 	.word	0x40011160

40004ca8 <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004ca8:	e59f32c0 	ldr	r3, [pc, #704]	; 40004f70 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004cac:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cb0:	e59fc2bc 	ldr	ip, [pc, #700]	; 40004f74 <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cb4:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cb8:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cbc:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cc0:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cc4:	e59f22ac 	ldr	r2, [pc, #684]	; 40004f78 <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cc8:	e59f02ac 	ldr	r0, [pc, #684]	; 40004f7c <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004ccc:	e59f32ac 	ldr	r3, [pc, #684]	; 40004f80 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cd0:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cd4:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cd8:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cdc:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004ce0:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004ce4:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004ce8:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cec:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cf0:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cf4:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004cf8:	0a00004f 	beq	40004e3c <CyFxUVCApplnUSBSetupCB+0x194>
40004cfc:	9a000006 	bls	40004d1c <CyFxUVCApplnUSBSetupCB+0x74>
40004d00:	e3540021 	cmp	r4, #33	; 0x21
40004d04:	0a00003a 	beq	40004df4 <CyFxUVCApplnUSBSetupCB+0x14c>
40004d08:	e35400a1 	cmp	r4, #161	; 0xa1
40004d0c:	0a000038 	beq	40004df4 <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004d10:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004d14:	e28dd010 	add	sp, sp, #16
40004d18:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d1c:	e3540001 	cmp	r4, #1
40004d20:	1afffffa 	bne	40004d10 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004d24:	e358000b 	cmp	r8, #11
40004d28:	1afffff8 	bne	40004d10 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004d2c:	e3550001 	cmp	r5, #1
40004d30:	1afffff6 	bne	40004d10 <CyFxUVCApplnUSBSetupCB+0x68>
40004d34:	e3570000 	cmp	r7, #0
40004d38:	1afffff4 	bne	40004d10 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d3c:	e59f4240 	ldr	r4, [pc, #576]	; 40004f84 <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004d40:	e59f1240 	ldr	r1, [pc, #576]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2e0>
40004d44:	e3a00004 	mov	r0, #4
40004d48:	eb00385d 	bl	40012ec4 <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004d4c:	e1a00005 	mov	r0, r5
40004d50:	eb00596b 	bl	4001b304 <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d54:	e1a01005 	mov	r1, r5
40004d58:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d5c:	e5847038 	str	r7, [r4, #56]	; 0x38
                    streamingStarted = CyFalse;
40004d60:	e5847034 	str	r7, [r4, #52]	; 0x34
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d64:	eb0062f8 	bl	4001d94c <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d68:	e3a00064 	mov	r0, #100	; 0x64
40004d6c:	eb0039c5 	bl	40013488 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004d70:	e59f0214 	ldr	r0, [pc, #532]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2e4>
40004d74:	eb004d59 	bl	400182e0 <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004d78:	e3a00083 	mov	r0, #131	; 0x83
40004d7c:	eb005eec 	bl	4001c934 <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004d80:	e1a01007 	mov	r1, r7
40004d84:	e3a00083 	mov	r0, #131	; 0x83
40004d88:	eb0062ef 	bl	4001d94c <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d8c:	e3a00064 	mov	r0, #100	; 0x64
40004d90:	eb0039bc 	bl	40013488 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004d94:	e1a01007 	mov	r1, r7
40004d98:	e1a02005 	mov	r2, r5
40004d9c:	e3a00083 	mov	r0, #131	; 0x83
40004da0:	eb0063af 	bl	4001dc64 <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004da4:	eb005dea 	bl	4001c554 <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004da8:	e5845040 	str	r5, [r4, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004dac:	e1a00004 	mov	r0, r4
40004db0:	e1a01005 	mov	r1, r5
40004db4:	e3a02002 	mov	r2, #2
40004db8:	e28d300c 	add	r3, sp, #12
40004dbc:	e58d7000 	str	r7, [sp]
40004dc0:	eb0013c7 	bl	40009ce4 <_txe_event_flags_get>
40004dc4:	e2506000 	subs	r6, r0, #0
40004dc8:	1a00002e 	bne	40004e88 <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004dcc:	e3e01001 	mvn	r1, #1
40004dd0:	e3a02002 	mov	r2, #2
40004dd4:	e1a00004 	mov	r0, r4
40004dd8:	eb0013f1 	bl	40009da4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004ddc:	e1a00004 	mov	r0, r4
40004de0:	e3a01002 	mov	r1, #2
40004de4:	e1a02006 	mov	r2, r6
40004de8:	eb0013ed 	bl	40009da4 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004dec:	e1a00005 	mov	r0, r5
40004df0:	eaffffc7 	b	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004df4:	e21550ff 	ands	r5, r5, #255	; 0xff
40004df8:	1a00001a 	bne	40004e68 <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004dfc:	e1a02005 	mov	r2, r5
40004e00:	e59f017c 	ldr	r0, [pc, #380]	; 40004f84 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e04:	e3a01004 	mov	r1, #4
40004e08:	eb0013e5 	bl	40009da4 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e0c:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e10:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e14:	0affffbe 	beq	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004e18:	e59f1170 	ldr	r1, [pc, #368]	; 40004f90 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004e1c:	e3a00004 	mov	r0, #4
40004e20:	eb003827 	bl	40012ec4 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004e24:	e1a00005 	mov	r0, r5
40004e28:	e3a01001 	mov	r1, #1
40004e2c:	e1a02005 	mov	r2, r5
40004e30:	eb00638b 	bl	4001dc64 <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e34:	e3a00001 	mov	r0, #1
40004e38:	eaffffb5 	b	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004e3c:	e3580001 	cmp	r8, #1
40004e40:	1affffb2 	bne	40004d10 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004e44:	e3550083 	cmp	r5, #131	; 0x83
40004e48:	1affffb0 	bne	40004d10 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004e4c:	e59f7130 	ldr	r7, [pc, #304]	; 40004f84 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e50:	e5976034 	ldr	r6, [r7, #52]	; 0x34
40004e54:	e3560001 	cmp	r6, #1
40004e58:	0a000015 	beq	40004eb4 <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004e5c:	eb005dbc 	bl	4001c554 <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004e60:	e1a00008 	mov	r0, r8
40004e64:	eaffffaa 	b	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e68:	e3550001 	cmp	r5, #1
40004e6c:	1affffa7 	bne	40004d10 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004e70:	e3a02000 	mov	r2, #0
40004e74:	e59f0108 	ldr	r0, [pc, #264]	; 40004f84 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e78:	e3a01008 	mov	r1, #8
40004e7c:	eb0013c8 	bl	40009da4 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e80:	e2502000 	subs	r2, r0, #0
40004e84:	1a000001 	bne	40004e90 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004e88:	e1a00005 	mov	r0, r5
40004e8c:	eaffffa0 	b	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004e90:	e59f10fc 	ldr	r1, [pc, #252]	; 40004f94 <CyFxUVCApplnUSBSetupCB+0x2ec>
40004e94:	e3a00004 	mov	r0, #4
40004e98:	eb003809 	bl	40012ec4 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004e9c:	e3a00000 	mov	r0, #0
40004ea0:	e1a01005 	mov	r1, r5
40004ea4:	e1a02000 	mov	r2, r0
40004ea8:	eb00636d 	bl	4001dc64 <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004eac:	e1a00005 	mov	r0, r5
40004eb0:	eaffff97 	b	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40004eb4:	e59f10dc 	ldr	r1, [pc, #220]	; 40004f98 <CyFxUVCApplnUSBSetupCB+0x2f0>
40004eb8:	e3a00004 	mov	r0, #4
40004ebc:	eb003800 	bl	40012ec4 <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ec0:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40004ec4:	e1a00006 	mov	r0, r6
40004ec8:	eb00590d 	bl	4001b304 <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ecc:	e1a01006 	mov	r1, r6
40004ed0:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ed4:	e5878038 	str	r8, [r7, #56]	; 0x38
                        streamingStarted = CyFalse;
40004ed8:	e5878034 	str	r8, [r7, #52]	; 0x34

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004edc:	eb00629a 	bl	4001d94c <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004ee0:	e3a00064 	mov	r0, #100	; 0x64
40004ee4:	eb003967 	bl	40013488 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004ee8:	e59f009c 	ldr	r0, [pc, #156]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2e4>
40004eec:	eb004cfb 	bl	400182e0 <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004ef0:	e1a00005 	mov	r0, r5
40004ef4:	eb005e8e 	bl	4001c934 <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004ef8:	e1a01008 	mov	r1, r8
40004efc:	e1a00005 	mov	r0, r5
40004f00:	eb006291 	bl	4001d94c <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004f04:	e3a00064 	mov	r0, #100	; 0x64
40004f08:	eb00395e 	bl	40013488 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f0c:	e1a01008 	mov	r1, r8
40004f10:	e1a02006 	mov	r2, r6
40004f14:	e1a00005 	mov	r0, r5
40004f18:	eb006351 	bl	4001dc64 <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
40004f1c:	eb005d8c 	bl	4001c554 <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40004f20:	e5876040 	str	r6, [r7, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f24:	e1a00007 	mov	r0, r7
40004f28:	e1a01006 	mov	r1, r6
40004f2c:	e1a02004 	mov	r2, r4
40004f30:	e28d300c 	add	r3, sp, #12
40004f34:	e58d8000 	str	r8, [sp]
40004f38:	eb001369 	bl	40009ce4 <_txe_event_flags_get>
40004f3c:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f40:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f44:	1affff72 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f48:	e3e01001 	mvn	r1, #1
40004f4c:	e1a02004 	mov	r2, r4
40004f50:	e1a00007 	mov	r0, r7
40004f54:	eb001392 	bl	40009da4 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f58:	e1a00007 	mov	r0, r7
40004f5c:	e1a01004 	mov	r1, r4
40004f60:	e1a02005 	mov	r2, r5
40004f64:	eb00138e 	bl	40009da4 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f68:	e1a00006 	mov	r0, r6
40004f6c:	eaffff68 	b	40004d14 <CyFxUVCApplnUSBSetupCB+0x6c>
40004f70:	40032ec0 	.word	0x40032ec0
40004f74:	4003310c 	.word	0x4003310c
40004f78:	40032fc0 	.word	0x40032fc0
40004f7c:	40032ff0 	.word	0x40032ff0
40004f80:	40032ff2 	.word	0x40032ff2
40004f84:	40030f90 	.word	0x40030f90
40004f88:	40011210 	.word	0x40011210
40004f8c:	40032ee4 	.word	0x40032ee4
40004f90:	400111a4 	.word	0x400111a4
40004f94:	400111dc 	.word	0x400111dc
40004f98:	40011228 	.word	0x40011228

40004f9c <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004f9c:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40004fa0:	e92d4010 	push	{r4, lr}
40004fa4:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fa8:	18bd8010 	popne	{r4, pc}
    {
        hitFV = CyTrue;
40004fac:	e59f10d0 	ldr	r1, [pc, #208]	; 40005084 <CyFxGpifCB+0xe8>
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fb0:	e5d13048 	ldrb	r3, [r1, #72]	; 0x48
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
40004fb4:	e5810044 	str	r0, [r1, #68]	; 0x44
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fb8:	e3530003 	cmp	r3, #3
40004fbc:	0a000028 	beq	40005064 <CyFxGpifCB+0xc8>
                /* Unexpected current state. Return error. */
                return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40004fc0:	e3530002 	cmp	r3, #2
40004fc4:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40004fc8:	e2420008 	sub	r0, r2, #8
40004fcc:	e350000a 	cmp	r0, #10
40004fd0:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40004fd4:	ea00001b 	b	40005048 <CyFxGpifCB+0xac>
40004fd8:	40005008 	.word	0x40005008
40004fdc:	40005048 	.word	0x40005048
40004fe0:	40005048 	.word	0x40005048
40004fe4:	40005004 	.word	0x40005004
40004fe8:	40005048 	.word	0x40005048
40004fec:	40005048 	.word	0x40005048
40004ff0:	40005048 	.word	0x40005048
40004ff4:	40005040 	.word	0x40005040
40004ff8:	40005048 	.word	0x40005048
40004ffc:	40005048 	.word	0x40005048
40005000:	40005004 	.word	0x40005004
40005004:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
40005008:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
4000500c:	e59f0074 	ldr	r0, [pc, #116]	; 40005088 <CyFxGpifCB+0xec>
40005010:	eb004fe3 	bl	40018fa4 <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40005014:	e2502000 	subs	r2, r0, #0
40005018:	0afffff9 	beq	40005004 <CyFxGpifCB+0x68>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
4000501c:	e3a00004 	mov	r0, #4
40005020:	e59f1064 	ldr	r1, [pc, #100]	; 4000508c <CyFxGpifCB+0xf0>
40005024:	eb0037a6 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40005028:	e59f1060 	ldr	r1, [pc, #96]	; 40005090 <CyFxGpifCB+0xf4>
4000502c:	e3a00004 	mov	r0, #4
40005030:	eb0037a3 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40005034:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40005038:	eb000e61 	bl	400089c4 <_tx_thread_sleep>
4000503c:	eafffff9 	b	40005028 <CyFxGpifCB+0x8c>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
40005040:	e3a01001 	mov	r1, #1
40005044:	eafffff0 	b	4000500c <CyFxGpifCB+0x70>
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
40005048:	e59f1044 	ldr	r1, [pc, #68]	; 40005094 <CyFxGpifCB+0xf8>
4000504c:	e3a00001 	mov	r0, #1
40005050:	eb00379b 	bl	40012ec4 <CyU3PDebugPrint>
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005054:	e59f103c 	ldr	r1, [pc, #60]	; 40005098 <CyFxGpifCB+0xfc>
40005058:	e3a00004 	mov	r0, #4
    }
}
4000505c:	e8bd4010 	pop	{r4, lr}
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005060:	ea003797 	b	40012ec4 <CyU3PDebugPrint>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
40005064:	e242300b 	sub	r3, r2, #11
40005068:	e3530003 	cmp	r3, #3
4000506c:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40005070:	eafffff4 	b	40005048 <CyFxGpifCB+0xac>
40005074:	40005008 	.word	0x40005008
40005078:	40005040 	.word	0x40005040
4000507c:	40005004 	.word	0x40005004
40005080:	40005004 	.word	0x40005004
40005084:	40030f90 	.word	0x40030f90
40005088:	40032ee4 	.word	0x40032ee4
4000508c:	40011264 	.word	0x40011264
40005090:	40011294 	.word	0x40011294
40005094:	4001124c 	.word	0x4001124c
40005098:	400112a8 	.word	0x400112a8

4000509c <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
4000509c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050a0:	e59f4100 	ldr	r4, [pc, #256]	; 400051a8 <I2CCmdHandler+0x10c>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050a4:	e24dd034 	sub	sp, sp, #52	; 0x34
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050a8:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050ac:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
400050b0:	e5d46054 	ldrb	r6, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050b4:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
400050b8:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
400050bc:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
400050c0:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
400050c4:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
400050c8:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
400050cc:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
400050d0:	e58d201c 	str	r2, [sp, #28]
400050d4:	e3a00004 	mov	r0, #4
400050d8:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
400050dc:	e59f10c8 	ldr	r1, [pc, #200]	; 400051ac <I2CCmdHandler+0x110>
400050e0:	e1a02005 	mov	r2, r5
400050e4:	e88d4080 	stm	sp, {r7, lr}
400050e8:	e58d8008 	str	r8, [sp, #8]
400050ec:	e58da00c 	str	sl, [sp, #12]
400050f0:	e58d9010 	str	r9, [sp, #16]
400050f4:	e58db014 	str	fp, [sp, #20]
400050f8:	e58d6018 	str	r6, [sp, #24]
400050fc:	e58dc020 	str	ip, [sp, #32]
40005100:	eb00376f 	bl	40012ec4 <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
40005104:	e3550000 	cmp	r5, #0
40005108:	0a000003 	beq	4000511c <I2CCmdHandler+0x80>
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
4000510c:	e3550001 	cmp	r5, #1
40005110:	0a000014 	beq	40005168 <I2CCmdHandler+0xcc>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
40005114:	e28dd034 	add	sp, sp, #52	; 0x34
40005118:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
4000511c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005120:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
40005124:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005128:	e3a0e00f 	mov	lr, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
4000512c:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005130:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
40005134:	e3800001 	orr	r0, r0, #1
40005138:	e3811001 	orr	r1, r1, #1
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
4000513c:	e5c4e057 	strb	lr, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
40005140:	e58dc000 	str	ip, [sp]
40005144:	ebfffc6a 	bl	400042f4 <SensorRead2B>
			I2CCMDArry[9] = buf[0];
40005148:	e5dd002c 	ldrb	r0, [sp, #44]	; 0x2c
			if(CmdDataLen == 2){
4000514c:	e3560002 	cmp	r6, #2

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
40005150:	e5c40055 	strb	r0, [r4, #85]	; 0x55
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
40005154:	05dd002d 	ldrbeq	r0, [sp, #45]	; 0x2d
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
40005158:	e3e03000 	mvn	r3, #0
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], buf);
			I2CCMDArry[9] = buf[0];
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
4000515c:	05c40056 	strbeq	r0, [r4, #86]	; 0x56
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
40005160:	e5c43057 	strb	r3, [r4, #87]	; 0x57
40005164:	eaffffea 	b	40005114 <I2CCmdHandler+0x78>
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005168:	e5d4c054 	ldrb	ip, [r4, #84]	; 0x54
4000516c:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005170:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
40005174:	e5d45055 	ldrb	r5, [r4, #85]	; 0x55
			buf[1] = I2CCMDArry[10];
40005178:	e5d4e056 	ldrb	lr, [r4, #86]	; 0x56
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
4000517c:	e58dc000 	str	ip, [sp]
40005180:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
40005184:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005188:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
4000518c:	e20110fe 	and	r1, r1, #254	; 0xfe
40005190:	e20000fe 	and	r0, r0, #254	; 0xfe
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
40005194:	e5cd502c 	strb	r5, [sp, #44]	; 0x2c
			buf[1] = I2CCMDArry[10];
40005198:	e5cde02d 	strb	lr, [sp, #45]	; 0x2d
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
4000519c:	e58dc004 	str	ip, [sp, #4]
400051a0:	ebfffbf5 	bl	4000417c <SensorWrite2B>
400051a4:	eaffffda 	b	40005114 <I2CCmdHandler+0x78>
400051a8:	40030f90 	.word	0x40030f90
400051ac:	400112bc 	.word	0x400112bc

400051b0 <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
400051b0:	e92d4070 	push	{r4, r5, r6, lr}
400051b4:	e1a06001 	mov	r6, r1
400051b8:	e24dd008 	sub	sp, sp, #8
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051bc:	e3a05000 	mov	r5, #0

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
400051c0:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400051c4:	e3e01000 	mvn	r1, #0
400051c8:	e590001c 	ldr	r0, [r0, #28]
400051cc:	eb00138c 	bl	4000a004 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051d0:	e0650006 	rsb	r0, r5, r6
400051d4:	e270c000 	rsbs	ip, r0, #0
400051d8:	e0acc000 	adc	ip, ip, r0
400051dc:	e3a01020 	mov	r1, #32
400051e0:	e3a02027 	mov	r2, #39	; 0x27
400051e4:	e3a03030 	mov	r3, #48	; 0x30
400051e8:	e1a00004 	mov	r0, r4
400051ec:	e58dc000 	str	ip, [sp]
400051f0:	e58d5004 	str	r5, [sp, #4]
400051f4:	ebfff8af 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400051f8:	e1560005 	cmp	r6, r5
400051fc:	03a06002 	moveq	r6, #2
40005200:	11a06005 	movne	r6, r5
40005204:	e1a00004 	mov	r0, r4
40005208:	e3a01021 	mov	r1, #33	; 0x21
4000520c:	e3a02025 	mov	r2, #37	; 0x25
40005210:	e3a03030 	mov	r3, #48	; 0x30
40005214:	e58d6000 	str	r6, [sp]
40005218:	e58d5004 	str	r5, [sp, #4]
4000521c:	ebfff8a5 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005220:	e594001c 	ldr	r0, [r4, #28]
}
40005224:	e28dd008 	add	sp, sp, #8
40005228:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000522c:	ea0013a9 	b	4000a0d8 <_txe_mutex_put>

40005230 <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
40005230:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005234:	e3500023 	cmp	r0, #35	; 0x23
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005238:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
4000523c:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40005240:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005244:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005248:	9a000024 	bls	400052e0 <ControlHandle+0xb0>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
4000524c:	e59f6f58 	ldr	r6, [pc, #3928]	; 400061ac <ControlHandle+0xf7c>
40005250:	e0872087 	add	r2, r7, r7, lsl #1
40005254:	e1a02182 	lsl	r2, r2, #3
40005258:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
4000525c:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
40005260:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
40005264:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005268:	e59f3f40 	ldr	r3, [pc, #3904]	; 400061b0 <ControlHandle+0xf80>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
4000526c:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005270:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005274:	e3550083 	cmp	r5, #131	; 0x83
40005278:	0a000023 	beq	4000530c <ControlHandle+0xdc>
4000527c:	9a00002c 	bls	40005334 <ControlHandle+0x104>
40005280:	e3550085 	cmp	r5, #133	; 0x85
40005284:	0a00008b 	beq	400054b8 <ControlHandle+0x288>
40005288:	3a000079 	bcc	40005474 <ControlHandle+0x244>
4000528c:	e3550086 	cmp	r5, #134	; 0x86
40005290:	0a0000c8 	beq	400055b8 <ControlHandle+0x388>
40005294:	e3550087 	cmp	r5, #135	; 0x87
40005298:	0a0000bc 	beq	40005590 <ControlHandle+0x360>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
4000529c:	e3a00000 	mov	r0, #0
400052a0:	e3a01001 	mov	r1, #1
400052a4:	e1a02000 	mov	r2, r0
400052a8:	eb00626d 	bl	4001dc64 <CyU3PUsbStall>
			  break;
400052ac:	e3a0c0ff 	mov	ip, #255	; 0xff
400052b0:	e1a0700c 	mov	r7, ip
400052b4:	e1a0e00c 	mov	lr, ip
400052b8:	e1a0400c 	mov	r4, ip
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
400052bc:	e59f1ef0 	ldr	r1, [pc, #3824]	; 400061b4 <ControlHandle+0xf84>
400052c0:	e1a02005 	mov	r2, r5
400052c4:	e1a03004 	mov	r3, r4
400052c8:	e3a00004 	mov	r0, #4
400052cc:	e58de000 	str	lr, [sp]
400052d0:	e98d1080 	stmib	sp, {r7, ip}
400052d4:	eb0036fa 	bl	40012ec4 <CyU3PDebugPrint>
}
400052d8:	e28dd02c 	add	sp, sp, #44	; 0x2c
400052dc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052e0:	e59f6ec4 	ldr	r6, [pc, #3780]	; 400061ac <ControlHandle+0xf7c>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052e4:	e59f3ec4 	ldr	r3, [pc, #3780]	; 400061b0 <ControlHandle+0xf80>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052e8:	e0805080 	add	r5, r0, r0, lsl #1
400052ec:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052f0:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052f4:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
400052f8:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
400052fc:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
40005300:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
40005304:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005308:	1affffdb 	bne	4000527c <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
4000530c:	e3540023 	cmp	r4, #35	; 0x23
40005310:	9a0000c6 	bls	40005630 <ControlHandle+0x400>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005314:	e0870087 	add	r0, r7, r7, lsl #1
40005318:	e0866180 	add	r6, r6, r0, lsl #3
4000531c:	e59fae94 	ldr	sl, [pc, #3732]	; 400061b8 <ControlHandle+0xf88>
40005320:	e5d6c005 	ldrb	ip, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005324:	e5d6e006 	ldrb	lr, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005328:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
4000532c:	e5cae059 	strb	lr, [sl, #89]	; 0x59
40005330:	ea00000b 	b	40005364 <ControlHandle+0x134>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005334:	e3550081 	cmp	r5, #129	; 0x81
40005338:	0a00006a 	beq	400054e8 <ControlHandle+0x2b8>
4000533c:	9a000010 	bls	40005384 <ControlHandle+0x154>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
40005340:	e3540023 	cmp	r4, #35	; 0x23
40005344:	9a0000ad 	bls	40005600 <ControlHandle+0x3d0>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005348:	e087a087 	add	sl, r7, r7, lsl #1
4000534c:	e086618a 	add	r6, r6, sl, lsl #3
40005350:	e5d64003 	ldrb	r4, [r6, #3]
40005354:	e59fae5c 	ldr	sl, [pc, #3676]	; 400061b8 <ControlHandle+0xf88>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005358:	e5d67004 	ldrb	r7, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
4000535c:	e5ca4058 	strb	r4, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005360:	e5ca7059 	strb	r7, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005364:	e1a00008 	mov	r0, r8
40005368:	e59f1e4c 	ldr	r1, [pc, #3660]	; 400061bc <ControlHandle+0xf8c>
4000536c:	eb006011 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
40005370:	e3a0c0ff 	mov	ip, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005374:	e5da7058 	ldrb	r7, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40005378:	e1a0e00c 	mov	lr, ip
4000537c:	e1a0400c 	mov	r4, ip
40005380:	eaffffcd 	b	400052bc <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005384:	e3550001 	cmp	r5, #1
40005388:	1affffc3 	bne	4000529c <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000538c:	e59f1e24 	ldr	r1, [pc, #3620]	; 400061b8 <ControlHandle+0xf88>
40005390:	e28d2026 	add	r2, sp, #38	; 0x26
40005394:	e3a00020 	mov	r0, #32
40005398:	e2811058 	add	r1, r1, #88	; 0x58
4000539c:	eb005d97 	bl	4001ca00 <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
400053a0:	e2502000 	subs	r2, r0, #0
400053a4:	1a00034e 	bne	400060e4 <ControlHandle+0xeb4>
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
400053a8:	e59fce08 	ldr	ip, [pc, #3592]	; 400061b8 <ControlHandle+0xf88>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053ac:	e59f0e04 	ldr	r0, [pc, #3588]	; 400061b8 <ControlHandle+0xf88>
				  Data1 = glEp0Buffer[1];
400053b0:	e5dce059 	ldrb	lr, [ip, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053b4:	e59f2dfc 	ldr	r2, [pc, #3580]	; 400061b8 <ControlHandle+0xf88>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053b8:	e5d03058 	ldrb	r3, [r0, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
400053bc:	e58de01c 	str	lr, [sp, #28]
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053c0:	e5d2e05a 	ldrb	lr, [r2, #90]	; 0x5a
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053c4:	e58d3014 	str	r3, [sp, #20]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053c8:	e58de018 	str	lr, [sp, #24]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
400053cc:	e3540026 	cmp	r4, #38	; 0x26
400053d0:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
400053d4:	ea0002b3 	b	40005ea8 <ControlHandle+0xc78>
400053d8:	40005de8 	.word	0x40005de8
400053dc:	40005d24 	.word	0x40005d24
400053e0:	40005ea8 	.word	0x40005ea8
400053e4:	40005ea8 	.word	0x40005ea8
400053e8:	40005cc0 	.word	0x40005cc0
400053ec:	40005b80 	.word	0x40005b80
400053f0:	40005b04 	.word	0x40005b04
400053f4:	40005ea8 	.word	0x40005ea8
400053f8:	40005ea8 	.word	0x40005ea8
400053fc:	40005ea8 	.word	0x40005ea8
40005400:	40005ea8 	.word	0x40005ea8
40005404:	40005a7c 	.word	0x40005a7c
40005408:	40005ea8 	.word	0x40005ea8
4000540c:	40005ea8 	.word	0x40005ea8
40005410:	40005ea8 	.word	0x40005ea8
40005414:	40005ea8 	.word	0x40005ea8
40005418:	40006060 	.word	0x40006060
4000541c:	40005ea8 	.word	0x40005ea8
40005420:	40005ea8 	.word	0x40005ea8
40005424:	40005ea8 	.word	0x40005ea8
40005428:	40005ea8 	.word	0x40005ea8
4000542c:	40005ea8 	.word	0x40005ea8
40005430:	40005ea8 	.word	0x40005ea8
40005434:	40005ea8 	.word	0x40005ea8
40005438:	40005ea8 	.word	0x40005ea8
4000543c:	40005fbc 	.word	0x40005fbc
40005440:	40005f20 	.word	0x40005f20
40005444:	40005ea8 	.word	0x40005ea8
40005448:	40005f10 	.word	0x40005f10
4000544c:	40005ea8 	.word	0x40005ea8
40005450:	40005a20 	.word	0x40005a20
40005454:	4000599c 	.word	0x4000599c
40005458:	40005ea8 	.word	0x40005ea8
4000545c:	40005ea8 	.word	0x40005ea8
40005460:	40005ea8 	.word	0x40005ea8
40005464:	40005ea8 	.word	0x40005ea8
40005468:	40005900 	.word	0x40005900
4000546c:	400058e8 	.word	0x400058e8
40005470:	40005884 	.word	0x40005884
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005474:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005478:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000547c:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005480:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005484:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005488:	859fad28 	ldrhi	sl, [pc, #3368]	; 400061b8 <ControlHandle+0xf88>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
4000548c:	959fad24 	ldrls	sl, [pc, #3364]	; 400061b8 <ControlHandle+0xf88>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005490:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
40005494:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005498:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
4000549c:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
400054a0:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054a4:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400054a8:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
400054ac:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400054b0:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
400054b4:	eaffffaa 	b	40005364 <ControlHandle+0x134>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054b8:	e59f4cf8 	ldr	r4, [pc, #3320]	; 400061b8 <ControlHandle+0xf88>
			  glEp0Buffer[1] = 0;
400054bc:	e3a0c000 	mov	ip, #0
400054c0:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054c4:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054c8:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054cc:	e3a00002 	mov	r0, #2
400054d0:	eb005fb8 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400054d4:	e3a0c0ff 	mov	ip, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054d8:	e5d47058 	ldrb	r7, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400054dc:	e1a0e00c 	mov	lr, ip
400054e0:	e1a0400c 	mov	r4, ip
400054e4:	eaffff74 	b	400052bc <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
400054e8:	e2441001 	sub	r1, r4, #1
400054ec:	e3510025 	cmp	r1, #37	; 0x25
400054f0:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
400054f4:	ea0000d0 	b	4000583c <ControlHandle+0x60c>
400054f8:	4000580c 	.word	0x4000580c
400054fc:	4000583c 	.word	0x4000583c
40005500:	4000583c 	.word	0x4000583c
40005504:	4000583c 	.word	0x4000583c
40005508:	400057ec 	.word	0x400057ec
4000550c:	4000583c 	.word	0x4000583c
40005510:	4000583c 	.word	0x4000583c
40005514:	4000583c 	.word	0x4000583c
40005518:	4000583c 	.word	0x4000583c
4000551c:	4000583c 	.word	0x4000583c
40005520:	40005860 	.word	0x40005860
40005524:	4000583c 	.word	0x4000583c
40005528:	4000583c 	.word	0x4000583c
4000552c:	4000583c 	.word	0x4000583c
40005530:	4000583c 	.word	0x4000583c
40005534:	4000583c 	.word	0x4000583c
40005538:	4000583c 	.word	0x4000583c
4000553c:	4000583c 	.word	0x4000583c
40005540:	4000583c 	.word	0x4000583c
40005544:	4000583c 	.word	0x4000583c
40005548:	4000583c 	.word	0x4000583c
4000554c:	4000583c 	.word	0x4000583c
40005550:	4000583c 	.word	0x4000583c
40005554:	4000583c 	.word	0x4000583c
40005558:	400057b0 	.word	0x400057b0
4000555c:	4000583c 	.word	0x4000583c
40005560:	4000583c 	.word	0x4000583c
40005564:	40005784 	.word	0x40005784
40005568:	4000583c 	.word	0x4000583c
4000556c:	4000583c 	.word	0x4000583c
40005570:	400056e8 	.word	0x400056e8
40005574:	4000583c 	.word	0x4000583c
40005578:	4000583c 	.word	0x4000583c
4000557c:	4000583c 	.word	0x4000583c
40005580:	4000583c 	.word	0x4000583c
40005584:	400056ac 	.word	0x400056ac
40005588:	400056ac 	.word	0x400056ac
4000558c:	400056ac 	.word	0x400056ac
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005590:	e3540023 	cmp	r4, #35	; 0x23
40005594:	9a000031 	bls	40005660 <ControlHandle+0x430>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
40005598:	e0877087 	add	r7, r7, r7, lsl #1
4000559c:	e0866187 	add	r6, r6, r7, lsl #3
400055a0:	e59fac10 	ldr	sl, [pc, #3088]	; 400061b8 <ControlHandle+0xf88>
400055a4:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055a8:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400055ac:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055b0:	e5ca1059 	strb	r1, [sl, #89]	; 0x59
400055b4:	eaffff6a 	b	40005364 <ControlHandle+0x134>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400055b8:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055bc:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055c0:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055c4:	80866187 	addhi	r6, r6, r7, lsl #3
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055c8:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055cc:	859f8be4 	ldrhi	r8, [pc, #3044]	; 400061b8 <ControlHandle+0xf88>
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055d0:	959f8be0 	ldrls	r8, [pc, #3040]	; 400061b8 <ControlHandle+0xf88>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055d4:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055d8:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055dc:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055e0:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055e4:	e59f1bd0 	ldr	r1, [pc, #3024]	; 400061bc <ControlHandle+0xf8c>
400055e8:	eb005f72 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400055ec:	e3a0c0ff 	mov	ip, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055f0:	e5d87058 	ldrb	r7, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400055f4:	e1a0e00c 	mov	lr, ip
400055f8:	e1a0400c 	mov	r4, ip
400055fc:	eaffff2e 	b	400052bc <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005600:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005604:	10844084 	addne	r4, r4, r4, lsl #1
40005608:	10866184 	addne	r6, r6, r4, lsl #3
4000560c:	159faba4 	ldrne	sl, [pc, #2980]	; 400061b8 <ControlHandle+0xf88>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005610:	059faba0 	ldreq	sl, [pc, #2976]	; 400061b8 <ControlHandle+0xf88>
40005614:	059f3ba4 	ldreq	r3, [pc, #2980]	; 400061c0 <ControlHandle+0xf90>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005618:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
4000561c:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
40005620:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005624:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005628:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
4000562c:	eaffff4c 	b	40005364 <ControlHandle+0x134>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
40005630:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005634:	10844084 	addne	r4, r4, r4, lsl #1
40005638:	10866184 	addne	r6, r6, r4, lsl #3
4000563c:	159fab74 	ldrne	sl, [pc, #2932]	; 400061b8 <ControlHandle+0xf88>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005640:	059fab70 	ldreq	sl, [pc, #2928]	; 400061b8 <ControlHandle+0xf88>
40005644:	059f3b78 	ldreq	r3, [pc, #2936]	; 400061c4 <ControlHandle+0xf94>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005648:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
4000564c:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
40005650:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005654:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005658:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
4000565c:	eaffff40 	b	40005364 <ControlHandle+0x134>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
40005660:	e354000b 	cmp	r4, #11
40005664:	0a000007 	beq	40005688 <ControlHandle+0x458>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005668:	e084a084 	add	sl, r4, r4, lsl #1
4000566c:	e086618a 	add	r6, r6, sl, lsl #3
40005670:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
40005674:	e59fab3c 	ldr	sl, [pc, #2876]	; 400061b8 <ControlHandle+0xf88>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005678:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
4000567c:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005680:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
40005684:	eaffff36 	b	40005364 <ControlHandle+0x134>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005688:	e59fab28 	ldr	sl, [pc, #2856]	; 400061b8 <ControlHandle+0xf88>
4000568c:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
40005690:	e5d6e294 	ldrb	lr, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
40005694:	e3a04000 	mov	r4, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005698:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
4000569c:	e5ca4059 	strb	r4, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400056a0:	e5cae05a 	strb	lr, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
400056a4:	e5ca405b 	strb	r4, [sl, #91]	; 0x5b
400056a8:	eaffff2d 	b	40005364 <ControlHandle+0x134>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056ac:	e0877087 	add	r7, r7, r7, lsl #1
400056b0:	e0866187 	add	r6, r6, r7, lsl #3
400056b4:	e59feafc 	ldr	lr, [pc, #2812]	; 400061b8 <ControlHandle+0xf88>
400056b8:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056bc:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056c0:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056c4:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056c8:	e1a00008 	mov	r0, r8
400056cc:	e59f1ae8 	ldr	r1, [pc, #2792]	; 400061bc <ControlHandle+0xf8c>
400056d0:	eb005f38 	bl	4001d3b8 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056d4:	e3a0e0ff 	mov	lr, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056d8:	e1a07004 	mov	r7, r4
400056dc:	e1a0c006 	mov	ip, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056e0:	e1a0400e 	mov	r4, lr
400056e4:	eafffef4 	b	400052bc <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400056e8:	e3580000 	cmp	r8, #0
400056ec:	0a0002a7 	beq	40006190 <ControlHandle+0xf60>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400056f0:	e1a0e128 	lsr	lr, r8, #2
400056f4:	e35e0000 	cmp	lr, #0
400056f8:	13580003 	cmpne	r8, #3
400056fc:	83a02000 	movhi	r2, #0
40005700:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005704:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005708:	9a0002a4 	bls	400061a0 <ControlHandle+0xf70>
4000570c:	e59f1aa8 	ldr	r1, [pc, #2728]	; 400061bc <ControlHandle+0xf8c>
40005710:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005714:	e4904004 	ldr	r4, [r0], #4
40005718:	e282c001 	add	ip, r2, #1
4000571c:	e20c20ff 	and	r2, ip, #255	; 0xff
40005720:	e15e0002 	cmp	lr, r2
40005724:	e4814004 	str	r4, [r1], #4
40005728:	8afffff9 	bhi	40005714 <ControlHandle+0x4e4>
4000572c:	e1580003 	cmp	r8, r3
40005730:	159f0a80 	ldrne	r0, [pc, #2688]	; 400061b8 <ControlHandle+0xf88>
40005734:	0a000295 	beq	40006190 <ControlHandle+0xf60>
40005738:	e080e003 	add	lr, r0, r3
4000573c:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005740:	e2836001 	add	r6, r3, #1
40005744:	e20630ff 	and	r3, r6, #255	; 0xff
40005748:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
4000574c:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
40005750:	8afffff8 	bhi	40005738 <ControlHandle+0x508>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005754:	e5d07057 	ldrb	r7, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005758:	e59f3a58 	ldr	r3, [pc, #2648]	; 400061b8 <ControlHandle+0xf88>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
4000575c:	e35700ff 	cmp	r7, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005760:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
40005764:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005768:	0affffd6 	beq	400056c8 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
4000576c:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
40005770:	e59f1a50 	ldr	r1, [pc, #2640]	; 400061c8 <ControlHandle+0xf98>
40005774:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
40005778:	e3a00004 	mov	r0, #4
4000577c:	eb0035d0 	bl	40012ec4 <CyU3PDebugPrint>
40005780:	eaffffd0 	b	400056c8 <ControlHandle+0x498>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
40005784:	e5d6342d 	ldrb	r3, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
						if(sendData >= 3){
40005788:	e3530002 	cmp	r3, #2
4000578c:	92833004 	addls	r3, r3, #4
40005790:	920340ff 	andls	r4, r3, #255	; 0xff
40005794:	8a000274 	bhi	4000616c <ControlHandle+0xf3c>
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
40005798:	e59f3a18 	ldr	r3, [pc, #2584]	; 400061b8 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
4000579c:	e3a01000 	mov	r1, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
400057a0:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057a4:	e5c31059 	strb	r1, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400057a8:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
400057ac:	eaffffc5 	b	400056c8 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057b0:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
400057b4:	e59fc9fc 	ldr	ip, [pc, #2556]	; 400061b8 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057b8:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
400057bc:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057c0:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057c4:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057c8:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400057cc:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
400057d0:	e59f19f4 	ldr	r1, [pc, #2548]	; 400061cc <ControlHandle+0xf9c>
400057d4:	e1a02004 	mov	r2, r4
400057d8:	e1a0300e 	mov	r3, lr
400057dc:	e3a00004 	mov	r0, #4
400057e0:	e88d4040 	stm	sp, {r6, lr}
400057e4:	eb0035b6 	bl	40012ec4 <CyU3PDebugPrint>
					 break;
400057e8:	eaffffb6 	b	400056c8 <ControlHandle+0x498>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
400057ec:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
400057f0:	e59f79c0 	ldr	r7, [pc, #2496]	; 400061b8 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
400057f4:	e3a06000 	mov	r6, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
400057f8:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
400057fc:	e5c76059 	strb	r6, [r7, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005800:	e5c74058 	strb	r4, [r7, #88]	; 0x58
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005804:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005808:	eaffffae 	b	400056c8 <ControlHandle+0x498>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
4000580c:	e5d601a6 	ldrb	r0, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
40005810:	e5d621a5 	ldrb	r2, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005814:	e3100002 	tst	r0, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005818:	01a02122 	lsreq	r2, r2, #2
4000581c:	01e02c82 	mvneq	r2, r2, lsl #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005820:	11a00300 	lslne	r0, r0, #6
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005824:	01e02ca2 	mvneq	r2, r2, lsr #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005828:	12004040 	andne	r4, r0, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
4000582c:	01820300 	orreq	r0, r2, r0, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005830:	11844122 	orrne	r4, r4, r2, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005834:	020040ff 	andeq	r4, r0, #255	; 0xff
40005838:	eaffffd6 	b	40005798 <ControlHandle+0x568>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
4000583c:	e0843084 	add	r3, r4, r4, lsl #1
40005840:	e0861183 	add	r1, r6, r3, lsl #3
40005844:	e59f296c 	ldr	r2, [pc, #2412]	; 400061b8 <ControlHandle+0xf88>
40005848:	e5d1418d 	ldrb	r4, [r1, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
4000584c:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005850:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005854:	e5c24058 	strb	r4, [r2, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005858:	e5c20059 	strb	r0, [r2, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
4000585c:	eaffff99 	b	400056c8 <ControlHandle+0x498>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005860:	e59fc950 	ldr	ip, [pc, #2384]	; 400061b8 <ControlHandle+0xf88>
40005864:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005868:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
4000586c:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
40005870:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005874:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005878:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
4000587c:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
40005880:	eaffff90 	b	400056c8 <ControlHandle+0x498>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005884:	e59f4944 	ldr	r4, [pc, #2372]	; 400061d0 <ControlHandle+0xfa0>
40005888:	e3e01000 	mvn	r1, #0
4000588c:	e594001c 	ldr	r0, [r4, #28]
40005890:	eb0011db 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
40005894:	e3a01026 	mov	r1, #38	; 0x26
40005898:	e59dc014 	ldr	ip, [sp, #20]
4000589c:	e3a0e000 	mov	lr, #0
400058a0:	e1a0300a 	mov	r3, sl
400058a4:	e1a02009 	mov	r2, r9
400058a8:	e1a00004 	mov	r0, r4
400058ac:	e88d5000 	stm	sp, {ip, lr}
400058b0:	ebfff700 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400058b4:	e594001c 	ldr	r0, [r4, #28]
400058b8:	eb001206 	bl	4000a0d8 <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058bc:	e59d1014 	ldr	r1, [sp, #20]
400058c0:	e0873087 	add	r3, r7, r7, lsl #1
400058c4:	e0866183 	add	r6, r6, r3, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
400058c8:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058cc:	e3a00001 	mov	r0, #1
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058d0:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058d4:	e5c60010 	strb	r0, [r6, #16]
400058d8:	e1a04001 	mov	r4, r1
400058dc:	e59de018 	ldr	lr, [sp, #24]
							 break;
400058e0:	e1a0700c 	mov	r7, ip
400058e4:	eafffe74 	b	400052bc <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID5: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400058e8:	e59f48e0 	ldr	r4, [pc, #2272]	; 400061d0 <ControlHandle+0xfa0>
400058ec:	e3e01000 	mvn	r1, #0
400058f0:	e594001c 	ldr	r0, [r4, #28]
400058f4:	eb0011c2 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
400058f8:	e3a01025 	mov	r1, #37	; 0x25
400058fc:	eaffffe5 	b	40005898 <ControlHandle+0x668>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005900:	e59f48c8 	ldr	r4, [pc, #2248]	; 400061d0 <ControlHandle+0xfa0>
40005904:	e3e01000 	mvn	r1, #0
40005908:	e594001c 	ldr	r0, [r4, #28]
4000590c:	eb0011bc 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005910:	e59d2014 	ldr	r2, [sp, #20]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005914:	e3a01024 	mov	r1, #36	; 0x24
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005918:	e202807f 	and	r8, r2, #127	; 0x7f
4000591c:	e58d8018 	str	r8, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005920:	e59dc018 	ldr	ip, [sp, #24]
40005924:	e1a02009 	mov	r2, r9
40005928:	e1a0300a 	mov	r3, sl
4000592c:	e1a00004 	mov	r0, r4
40005930:	e58dc000 	str	ip, [sp]
40005934:	e3a0c000 	mov	ip, #0
40005938:	e58dc004 	str	ip, [sp, #4]
4000593c:	ebfff6dd 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
40005940:	e59de01c 	ldr	lr, [sp, #28]
40005944:	e3a08001 	mov	r8, #1
40005948:	e3a01024 	mov	r1, #36	; 0x24
4000594c:	e1a0200b 	mov	r2, fp
40005950:	e1a0300a 	mov	r3, sl
40005954:	e1a00004 	mov	r0, r4
40005958:	e58de000 	str	lr, [sp]
4000595c:	e58d8004 	str	r8, [sp, #4]
40005960:	ebfff6d4 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005964:	e594001c 	ldr	r0, [r4, #28]
40005968:	eb0011da 	bl	4000a0d8 <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
4000596c:	e087c087 	add	ip, r7, r7, lsl #1
40005970:	e59d4018 	ldr	r4, [sp, #24]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005974:	e59d701c 	ldr	r7, [sp, #28]
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005978:	e086618c 	add	r6, r6, ip, lsl #3
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
4000597c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005980:	e5c6400d 	strb	r4, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005984:	e5c6700e 	strb	r7, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005988:	e1a0e007 	mov	lr, r7
4000598c:	e5c68010 	strb	r8, [r6, #16]
40005990:	e59d4014 	ldr	r4, [sp, #20]
							 break;
40005994:	e1a0700c 	mov	r7, ip
40005998:	eafffe47 	b	400052bc <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
4000599c:	e3580000 	cmp	r8, #0
400059a0:	0a000018 	beq	40005a08 <ControlHandle+0x7d8>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059a4:	e1a0e128 	lsr	lr, r8, #2
400059a8:	e35e0000 	cmp	lr, #0
400059ac:	13580003 	cmpne	r8, #3
400059b0:	83a02000 	movhi	r2, #0
400059b4:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400059b8:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059bc:	9a0001f5 	bls	40006198 <ControlHandle+0xf68>
400059c0:	e59f180c 	ldr	r1, [pc, #2060]	; 400061d4 <ControlHandle+0xfa4>
400059c4:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
400059c8:	e4907004 	ldr	r7, [r0], #4
400059cc:	e2822001 	add	r2, r2, #1
400059d0:	e20220ff 	and	r2, r2, #255	; 0xff
400059d4:	e15e0002 	cmp	lr, r2
400059d8:	e4817004 	str	r7, [r1], #4
400059dc:	8afffff9 	bhi	400059c8 <ControlHandle+0x798>
400059e0:	e1580003 	cmp	r8, r3
400059e4:	0a000007 	beq	40005a08 <ControlHandle+0x7d8>
400059e8:	e59fe7c8 	ldr	lr, [pc, #1992]	; 400061b8 <ControlHandle+0xf88>
400059ec:	e08e0003 	add	r0, lr, r3
400059f0:	e5d01058 	ldrb	r1, [r0, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
400059f4:	e2833001 	add	r3, r3, #1
400059f8:	e20330ff 	and	r3, r3, #255	; 0xff
400059fc:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a00:	e5c0104c 	strb	r1, [r0, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a04:	8afffff7 	bhi	400059e8 <ControlHandle+0x7b8>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a08:	ebfffda3 	bl	4000509c <I2CCmdHandler>
							 break;
40005a0c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a10:	e59d4014 	ldr	r4, [sp, #20]
40005a14:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005a18:	e1a0700c 	mov	r7, ip
40005a1c:	eafffe26 	b	400052bc <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a20:	e59f77a8 	ldr	r7, [pc, #1960]	; 400061d0 <ControlHandle+0xfa0>
40005a24:	e3e01000 	mvn	r1, #0
40005a28:	e597001c 	ldr	r0, [r7, #28]
40005a2c:	eb001174 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005a30:	e59d4014 	ldr	r4, [sp, #20]
40005a34:	e3a0e000 	mov	lr, #0
40005a38:	e274c001 	rsbs	ip, r4, #1
40005a3c:	33a0c000 	movcc	ip, #0
40005a40:	e3a0101e 	mov	r1, #30
40005a44:	e1a02009 	mov	r2, r9
40005a48:	e1a0300a 	mov	r3, sl
40005a4c:	e1a00007 	mov	r0, r7
40005a50:	e88d5000 	stm	sp, {ip, lr}
40005a54:	ebfff697 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005a58:	e597001c 	ldr	r0, [r7, #28]
40005a5c:	eb00119d 	bl	4000a0d8 <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005a60:	e3a0c0ff 	mov	ip, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005a64:	e3a00001 	mov	r0, #1
40005a68:	e5c60460 	strb	r0, [r6, #1120]	; 0x460
40005a6c:	e59d4014 	ldr	r4, [sp, #20]
40005a70:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005a74:	e1a0700c 	mov	r7, ip
40005a78:	eafffe0f 	b	400052bc <ControlHandle+0x8c>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a7c:	e59f474c 	ldr	r4, [pc, #1868]	; 400061d0 <ControlHandle+0xfa0>
40005a80:	e3e01000 	mvn	r1, #0
40005a84:	e594001c 	ldr	r0, [r4, #28]
40005a88:	eb00115d 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005a8c:	e59dc014 	ldr	ip, [sp, #20]
40005a90:	e3a0100b 	mov	r1, #11
40005a94:	e1a02009 	mov	r2, r9
40005a98:	e1a0300a 	mov	r3, sl
40005a9c:	e1a00004 	mov	r0, r4
40005aa0:	e58dc000 	str	ip, [sp]
40005aa4:	e3a0c000 	mov	ip, #0
40005aa8:	e58dc004 	str	ip, [sp, #4]
40005aac:	ebfff681 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005ab0:	e59de018 	ldr	lr, [sp, #24]
40005ab4:	e3a07001 	mov	r7, #1
40005ab8:	e3a0100b 	mov	r1, #11
40005abc:	e1a0200b 	mov	r2, fp
40005ac0:	e1a0300a 	mov	r3, sl
40005ac4:	e1a00004 	mov	r0, r4
40005ac8:	e58de000 	str	lr, [sp]
40005acc:	e58d7004 	str	r7, [sp, #4]
40005ad0:	ebfff678 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ad4:	e594001c 	ldr	r0, [r4, #28]
40005ad8:	eb00117e 	bl	4000a0d8 <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005adc:	e59d1014 	ldr	r1, [sp, #20]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005ae0:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ae4:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ae8:	e5c67298 	strb	r7, [r6, #664]	; 0x298
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005aec:	e5c6148c 	strb	r1, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005af0:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005af4:	e1a04001 	mov	r4, r1
40005af8:	e1a0e002 	mov	lr, r2
							 break;
40005afc:	e1a0700c 	mov	r7, ip
40005b00:	eafffded 	b	400052bc <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b04:	e59f46c4 	ldr	r4, [pc, #1732]	; 400061d0 <ControlHandle+0xfa0>
40005b08:	e3e01000 	mvn	r1, #0
40005b0c:	e594001c 	ldr	r0, [r4, #28]
40005b10:	eb00113b 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005b14:	e59dc014 	ldr	ip, [sp, #20]
40005b18:	e3a01006 	mov	r1, #6
40005b1c:	e1a02009 	mov	r2, r9
40005b20:	e1a0300a 	mov	r3, sl
40005b24:	e1a00004 	mov	r0, r4
40005b28:	e58dc000 	str	ip, [sp]
40005b2c:	e3a0c000 	mov	ip, #0
40005b30:	e58dc004 	str	ip, [sp, #4]
40005b34:	ebfff65f 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005b38:	e59de014 	ldr	lr, [sp, #20]
40005b3c:	e3a07001 	mov	r7, #1
40005b40:	e3a01006 	mov	r1, #6
40005b44:	e1a0200b 	mov	r2, fp
40005b48:	e1a0300a 	mov	r3, sl
40005b4c:	e1a00004 	mov	r0, r4
40005b50:	e58de000 	str	lr, [sp]
40005b54:	e58d7004 	str	r7, [sp, #4]
40005b58:	ebfff656 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b5c:	e594001c 	ldr	r0, [r4, #28]
40005b60:	eb00115c 	bl	4000a0d8 <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005b64:	e59d4014 	ldr	r4, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005b68:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b6c:	e5c67220 	strb	r7, [r6, #544]	; 0x220
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005b70:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b74:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005b78:	e1a0700c 	mov	r7, ip
40005b7c:	eafffdce 	b	400052bc <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b80:	e59f4648 	ldr	r4, [pc, #1608]	; 400061d0 <ControlHandle+0xfa0>
40005b84:	e3e01000 	mvn	r1, #0
40005b88:	e594001c 	ldr	r0, [r4, #28]
40005b8c:	eb00111c 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005b90:	e59d3014 	ldr	r3, [sp, #20]
40005b94:	e3a0c000 	mov	ip, #0
40005b98:	e2430080 	sub	r0, r3, #128	; 0x80
40005b9c:	e20070ff 	and	r7, r0, #255	; 0xff
40005ba0:	e3a01005 	mov	r1, #5
40005ba4:	e1a02009 	mov	r2, r9
40005ba8:	e1a0300a 	mov	r3, sl
40005bac:	e1a00004 	mov	r0, r4
40005bb0:	e88d1080 	stm	sp, {r7, ip}
40005bb4:	ebfff63f 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005bb8:	e59d1014 	ldr	r1, [sp, #20]
40005bbc:	e3a020dc 	mov	r2, #220	; 0xdc
40005bc0:	e2417076 	sub	r7, r1, #118	; 0x76
40005bc4:	e207c0ff 	and	ip, r7, #255	; 0xff
40005bc8:	e3a01005 	mov	r1, #5
40005bcc:	e3a07001 	mov	r7, #1
40005bd0:	e1a0300a 	mov	r3, sl
40005bd4:	e1a00004 	mov	r0, r4
40005bd8:	e58dc000 	str	ip, [sp]
40005bdc:	e58d7004 	str	r7, [sp, #4]
40005be0:	ebfff634 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005be4:	e59d2014 	ldr	r2, [sp, #20]
40005be8:	e3a01005 	mov	r1, #5
40005bec:	e282307e 	add	r3, r2, #126	; 0x7e
40005bf0:	e203c0ff 	and	ip, r3, #255	; 0xff
40005bf4:	e3a020de 	mov	r2, #222	; 0xde
40005bf8:	e1a0300a 	mov	r3, sl
40005bfc:	e1a00004 	mov	r0, r4
40005c00:	e58dc000 	str	ip, [sp]
40005c04:	e3a0c002 	mov	ip, #2
40005c08:	e58dc004 	str	ip, [sp, #4]
40005c0c:	ebfff629 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005c10:	e59d0014 	ldr	r0, [sp, #20]
40005c14:	e3a0e003 	mov	lr, #3
40005c18:	e2801072 	add	r1, r0, #114	; 0x72
40005c1c:	e201c0ff 	and	ip, r1, #255	; 0xff
40005c20:	e3a020e0 	mov	r2, #224	; 0xe0
40005c24:	e3a01005 	mov	r1, #5
40005c28:	e1a0300a 	mov	r3, sl
40005c2c:	e1a00004 	mov	r0, r4
40005c30:	e88d5000 	stm	sp, {ip, lr}
40005c34:	ebfff61f 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40005c38:	e59d2014 	ldr	r2, [sp, #20]
40005c3c:	e3a01005 	mov	r1, #5
40005c40:	e242306f 	sub	r3, r2, #111	; 0x6f
40005c44:	e203c0ff 	and	ip, r3, #255	; 0xff
40005c48:	e3a020dd 	mov	r2, #221	; 0xdd
40005c4c:	e1a0300a 	mov	r3, sl
40005c50:	e1a00004 	mov	r0, r4
40005c54:	e58dc000 	str	ip, [sp]
40005c58:	e3a0c004 	mov	ip, #4
40005c5c:	e58dc004 	str	ip, [sp, #4]
40005c60:	ebfff614 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40005c64:	e59f054c 	ldr	r0, [pc, #1356]	; 400061b8 <ControlHandle+0xf88>
40005c68:	e3a0e005 	mov	lr, #5
40005c6c:	e5d01058 	ldrb	r1, [r0, #88]	; 0x58
40005c70:	e1a0300a 	mov	r3, sl
40005c74:	e281207f 	add	r2, r1, #127	; 0x7f
40005c78:	e202c0ff 	and	ip, r2, #255	; 0xff
40005c7c:	e1a0100e 	mov	r1, lr
40005c80:	e1a0200b 	mov	r2, fp
40005c84:	e1a00004 	mov	r0, r4
40005c88:	e88d5000 	stm	sp, {ip, lr}
40005c8c:	ebfff609 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c90:	e594001c 	ldr	r0, [r4, #28]
40005c94:	eb00110f 	bl	4000a0d8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005c98:	e59f3518 	ldr	r3, [pc, #1304]	; 400061b8 <ControlHandle+0xf88>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005c9c:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ca0:	e5d30058 	ldrb	r0, [r3, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ca4:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ca8:	e2401080 	sub	r1, r0, #128	; 0x80
40005cac:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cb0:	e59d4014 	ldr	r4, [sp, #20]
40005cb4:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005cb8:	e1a0700c 	mov	r7, ip
40005cbc:	eafffd7e 	b	400052bc <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cc0:	e59f4508 	ldr	r4, [pc, #1288]	; 400061d0 <ControlHandle+0xfa0>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
40005cc4:	e2433001 	sub	r3, r3, #1
40005cc8:	e20370ff 	and	r7, r3, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005ccc:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cd0:	e3e01000 	mvn	r1, #0
40005cd4:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005cd8:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cdc:	eb0010c8 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ce0:	e3a0c000 	mov	ip, #0
40005ce4:	e3a01004 	mov	r1, #4
40005ce8:	e1a02009 	mov	r2, r9
40005cec:	e1a0300a 	mov	r3, sl
40005cf0:	e1a00004 	mov	r0, r4
40005cf4:	e88d1080 	stm	sp, {r7, ip}
40005cf8:	ebfff5ee 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005cfc:	e594001c 	ldr	r0, [r4, #28]
40005d00:	eb0010f4 	bl	4000a0d8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d04:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d08:	e3a00001 	mov	r0, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005d0c:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d10:	e5c601f0 	strb	r0, [r6, #496]	; 0x1f0
40005d14:	e59d4014 	ldr	r4, [sp, #20]
40005d18:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005d1c:	e1a0700c 	mov	r7, ip
40005d20:	eafffd65 	b	400052bc <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d24:	e59f74a4 	ldr	r7, [pc, #1188]	; 400061d0 <ControlHandle+0xfa0>
40005d28:	e3e01000 	mvn	r1, #0
40005d2c:	e597001c 	ldr	r0, [r7, #28]
40005d30:	eb0010b3 	bl	4000a004 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005d34:	e59dc014 	ldr	ip, [sp, #20]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005d38:	e5d641a6 	ldrb	r4, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005d3c:	e31c0080 	tst	ip, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d40:	01a0232c 	lsreq	r2, ip, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005d44:	11a02c8c 	lslne	r2, ip, #25
40005d48:	13c44003 	bicne	r4, r4, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d4c:	03c44003 	biceq	r4, r4, #3
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005d50:	e3a0c000 	mov	ip, #0
40005d54:	e58dc004 	str	ip, [sp, #4]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d58:	03822002 	orreq	r2, r2, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005d5c:	11844fa2 	orrne	r4, r4, r2, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d60:	01824004 	orreq	r4, r2, r4
							  }
							 Data1 |= ~0x03;
40005d64:	e1e03f04 	mvn	r3, r4, lsl #30
40005d68:	e1e00f23 	mvn	r0, r3, lsr #30
							 Data1 &= 0xC7;
40005d6c:	e20010c7 	and	r1, r0, #199	; 0xc7
40005d70:	e58d101c 	str	r1, [sp, #28]
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005d74:	e59d801c 	ldr	r8, [sp, #28]
40005d78:	e3a01001 	mov	r1, #1
40005d7c:	e1a0200b 	mov	r2, fp
40005d80:	e1a0300a 	mov	r3, sl
40005d84:	e59f0444 	ldr	r0, [pc, #1092]	; 400061d0 <ControlHandle+0xfa0>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005d88:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005d8c:	e58d8000 	str	r8, [sp]
40005d90:	ebfff5c8 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005d94:	e59d2014 	ldr	r2, [sp, #20]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005d98:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005d9c:	e1a08102 	lsl	r8, r2, #2
40005da0:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005da4:	e1a02009 	mov	r2, r9
40005da8:	e1a0300a 	mov	r3, sl
40005dac:	e59f041c 	ldr	r0, [pc, #1052]	; 400061d0 <ControlHandle+0xfa0>
40005db0:	e58d4004 	str	r4, [sp, #4]
40005db4:	e58d8000 	str	r8, [sp]
40005db8:	ebfff5be 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005dbc:	e597001c 	ldr	r0, [r7, #28]
40005dc0:	eb0010c4 	bl	4000a0d8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005dc4:	e59d701c 	ldr	r7, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
40005dc8:	e3a0c0ff 	mov	ip, #255	; 0xff
							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005dcc:	e5c671a6 	strb	r7, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
40005dd0:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005dd4:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005dd8:	e59d4014 	ldr	r4, [sp, #20]
40005ddc:	e59de018 	ldr	lr, [sp, #24]

							 break;
40005de0:	e1a0700c 	mov	r7, ip
40005de4:	eafffd34 	b	400052bc <ControlHandle+0x8c>
40005de8:	e1a0c003 	mov	ip, r3
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
40005dec:	e3530003 	cmp	r3, #3

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005df0:	e5c6c18d 	strb	ip, [r6, #397]	; 0x18d
40005df4:	e59f33b0 	ldr	r3, [pc, #944]	; 400061ac <ControlHandle+0xf7c>
							 if(Data0 == 3)
40005df8:	0a0000d6 	beq	40006158 <ControlHandle+0xf28>
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005dfc:	e59fe3b4 	ldr	lr, [pc, #948]	; 400061b8 <ControlHandle+0xf88>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 2){
40005e00:	e35c0001 	cmp	ip, #1
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e04:	e3a00000 	mov	r0, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e08:	e3a01001 	mov	r1, #1
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e0c:	e58e0078 	str	r0, [lr, #120]	; 0x78
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e10:	e5c31190 	strb	r1, [r3, #400]	; 0x190
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 2){
40005e14:	91a0600c 	movls	r6, ip
40005e18:	91a0700c 	movls	r7, ip
40005e1c:	9a000006 	bls	40005e3c <ControlHandle+0xc0c>
					 				 ;//Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
40005e20:	e3a00004 	mov	r0, #4
40005e24:	e59f13ac 	ldr	r1, [pc, #940]	; 400061d8 <ControlHandle+0xfa8>
40005e28:	e3a02001 	mov	r2, #1
40005e2c:	e59d3014 	ldr	r3, [sp, #20]
40005e30:	eb003423 	bl	40012ec4 <CyU3PDebugPrint>
40005e34:	e3a06000 	mov	r6, #0
									Data0 = 0; //set to default.
40005e38:	e1a07006 	mov	r7, r6
					 			 }
					 		 }
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e3c:	e59f438c 	ldr	r4, [pc, #908]	; 400061d0 <ControlHandle+0xfa0>
40005e40:	e3e01000 	mvn	r1, #0
40005e44:	e594001c 	ldr	r0, [r4, #28]
40005e48:	eb00106d 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e4c:	e3a0c000 	mov	ip, #0
40005e50:	e1a0100c 	mov	r1, ip
40005e54:	e1a02009 	mov	r2, r9
40005e58:	e1a0300a 	mov	r3, sl
40005e5c:	e1a00004 	mov	r0, r4
40005e60:	e88d1080 	stm	sp, {r7, ip}
40005e64:	ebfff593 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e68:	e594001c 	ldr	r0, [r4, #28]
40005e6c:	eb001099 	bl	4000a0d8 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005e70:	e59fc340 	ldr	ip, [pc, #832]	; 400061b8 <ControlHandle+0xf88>
40005e74:	e59f1360 	ldr	r1, [pc, #864]	; 400061dc <ControlHandle+0xfac>
40005e78:	e5dc405a 	ldrb	r4, [ip, #90]	; 0x5a
40005e7c:	e5dc705b 	ldrb	r7, [ip, #91]	; 0x5b
40005e80:	e3a00004 	mov	r0, #4
40005e84:	e1a02006 	mov	r2, r6
40005e88:	e59c3078 	ldr	r3, [ip, #120]	; 0x78
40005e8c:	e88d0090 	stm	sp, {r4, r7}
40005e90:	eb00340b 	bl	40012ec4 <CyU3PDebugPrint>

					 		 break;
40005e94:	e3a0c0ff 	mov	ip, #255	; 0xff
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005e98:	e59d4014 	ldr	r4, [sp, #20]
40005e9c:	e59de018 	ldr	lr, [sp, #24]

					 		 break;
40005ea0:	e1a0700c 	mov	r7, ip
40005ea4:	eafffd04 	b	400052bc <ControlHandle+0x8c>
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ea8:	e59f7320 	ldr	r7, [pc, #800]	; 400061d0 <ControlHandle+0xfa0>
40005eac:	e3e01000 	mvn	r1, #0
40005eb0:	e597001c 	ldr	r0, [r7, #28]
40005eb4:	eb001052 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005eb8:	e59dc014 	ldr	ip, [sp, #20]
40005ebc:	e1a01004 	mov	r1, r4
40005ec0:	e1a02009 	mov	r2, r9
40005ec4:	e1a0300a 	mov	r3, sl
40005ec8:	e1a00007 	mov	r0, r7
40005ecc:	e58dc000 	str	ip, [sp]
40005ed0:	e3a0c000 	mov	ip, #0
40005ed4:	e58dc004 	str	ip, [sp, #4]
40005ed8:	ebfff576 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005edc:	e597001c 	ldr	r0, [r7, #28]
40005ee0:	eb00107c 	bl	4000a0d8 <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40005ee4:	e59d2014 	ldr	r2, [sp, #20]
40005ee8:	e0841084 	add	r1, r4, r4, lsl #1
40005eec:	e0866181 	add	r6, r6, r1, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ef0:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ef4:	e3a03001 	mov	r3, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005ef8:	e5c6218d 	strb	r2, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005efc:	e5c63190 	strb	r3, [r6, #400]	; 0x190
40005f00:	e1a04002 	mov	r4, r2
40005f04:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005f08:	e1a0700c 	mov	r7, ip
40005f0c:	eafffcea 	b	400052bc <ControlHandle+0x8c>
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005f10:	e3a0c0ff 	mov	ip, #255	; 0xff
40005f14:	e1a04003 	mov	r4, r3
40005f18:	e1a0700c 	mov	r7, ip
40005f1c:	eafffce6 	b	400052bc <ControlHandle+0x8c>
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f20:	e59f72a8 	ldr	r7, [pc, #680]	; 400061d0 <ControlHandle+0xfa0>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
40005f24:	e5c633fd 	strb	r3, [r6, #1021]	; 0x3fd
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f28:	e3a03001 	mov	r3, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f2c:	e597001c 	ldr	r0, [r7, #28]
40005f30:	e3e01000 	mvn	r1, #0
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f34:	e5c63400 	strb	r3, [r6, #1024]	; 0x400
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f38:	eb001031 	bl	4000a004 <_txe_mutex_get>
							 if(WDRflag)
40005f3c:	e59f3274 	ldr	r3, [pc, #628]	; 400061b8 <ControlHandle+0xf88>
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f40:	e3a0101a 	mov	r1, #26
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005f44:	e5934078 	ldr	r4, [r3, #120]	; 0x78
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f48:	e1a00007 	mov	r0, r7
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005f4c:	e3540000 	cmp	r4, #0
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f50:	159d4014 	ldrne	r4, [sp, #20]
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f54:	059de014 	ldreq	lr, [sp, #20]
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f58:	158d4000 	strne	r4, [sp]
40005f5c:	11a0200b 	movne	r2, fp
40005f60:	13a04000 	movne	r4, #0
40005f64:	11a0300a 	movne	r3, sl
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f68:	01a02009 	moveq	r2, r9
40005f6c:	01a0300a 	moveq	r3, sl
40005f70:	e58d4004 	str	r4, [sp, #4]
40005f74:	058de000 	streq	lr, [sp]
40005f78:	ebfff54e 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f7c:	e597001c 	ldr	r0, [r7, #28]
40005f80:	eb001054 	bl	4000a0d8 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "Exe level. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005f84:	e59f222c 	ldr	r2, [pc, #556]	; 400061b8 <ControlHandle+0xf88>
40005f88:	e59d4014 	ldr	r4, [sp, #20]
40005f8c:	e5d2c05a 	ldrb	ip, [r2, #90]	; 0x5a
40005f90:	e5d2e05b 	ldrb	lr, [r2, #91]	; 0x5b
40005f94:	e5923078 	ldr	r3, [r2, #120]	; 0x78
40005f98:	e3a00004 	mov	r0, #4
40005f9c:	e59f123c 	ldr	r1, [pc, #572]	; 400061e0 <ControlHandle+0xfb0>
40005fa0:	e1a02004 	mov	r2, r4
40005fa4:	e88d5000 	stm	sp, {ip, lr}
40005fa8:	eb0033c5 	bl	40012ec4 <CyU3PDebugPrint>
40005fac:	e3a0c0ff 	mov	ip, #255	; 0xff
40005fb0:	e59de018 	ldr	lr, [sp, #24]
40005fb4:	e1a0700c 	mov	r7, ip
40005fb8:	eafffcbf 	b	400052bc <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005fbc:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fc0:	e59f4208 	ldr	r4, [pc, #520]	; 400061d0 <ControlHandle+0xfa0>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fc4:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fc8:	e3e01000 	mvn	r1, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005fcc:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005fd0:	e5c623e6 	strb	r2, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fd4:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fd8:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fdc:	eb001008 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005fe0:	e59dc014 	ldr	ip, [sp, #20]
40005fe4:	e3a01019 	mov	r1, #25
40005fe8:	e58dc000 	str	ip, [sp]
40005fec:	e1a00004 	mov	r0, r4
40005ff0:	e3a0c000 	mov	ip, #0
40005ff4:	e1a02009 	mov	r2, r9
40005ff8:	e1a0300a 	mov	r3, sl
40005ffc:	e58dc004 	str	ip, [sp, #4]
40006000:	ebfff52c 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40006004:	e59d1014 	ldr	r1, [sp, #20]
40006008:	e3510000 	cmp	r1, #0
4000600c:	0a000007 	beq	40006030 <ControlHandle+0xe00>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
40006010:	e59de018 	ldr	lr, [sp, #24]
40006014:	e1a00004 	mov	r0, r4
40006018:	e3a01019 	mov	r1, #25
4000601c:	e1a0200b 	mov	r2, fp
40006020:	e1a0300a 	mov	r3, sl
40006024:	e58de000 	str	lr, [sp]
40006028:	e58d7004 	str	r7, [sp, #4]
4000602c:	ebfff521 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006030:	e594001c 	ldr	r0, [r4, #28]
40006034:	eb001027 	bl	4000a0d8 <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40006038:	e59f1178 	ldr	r1, [pc, #376]	; 400061b8 <ControlHandle+0xf88>
4000603c:	e59f0174 	ldr	r0, [pc, #372]	; 400061b8 <ControlHandle+0xf88>
40006040:	e5d1405a 	ldrb	r4, [r1, #90]	; 0x5a
40006044:	e5d0705b 	ldrb	r7, [r0, #91]	; 0x5b
40006048:	e5d12058 	ldrb	r2, [r1, #88]	; 0x58
4000604c:	e5d13059 	ldrb	r3, [r1, #89]	; 0x59
40006050:	e3a00004 	mov	r0, #4
40006054:	e59f1188 	ldr	r1, [pc, #392]	; 400061e4 <ControlHandle+0xfb4>
40006058:	e88d0090 	stm	sp, {r4, r7}
4000605c:	eaffff8b 	b	40005e90 <ControlHandle+0xc60>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
40006060:	e2530000 	subs	r0, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40006064:	e5c6030d 	strb	r0, [r6, #781]	; 0x30d
40006068:	e59f313c 	ldr	r3, [pc, #316]	; 400061ac <ControlHandle+0xf7c>
							 if(Data0 == 0){//set exposure mode auto
4000606c:	1a000024 	bne	40006104 <ControlHandle+0xed4>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
40006070:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40006074:	e3520002 	cmp	r2, #2
40006078:	13520008 	cmpne	r2, #8
4000607c:	0a000003 	beq	40006090 <ControlHandle+0xe60>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
40006080:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40006084:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40006088:	13a02002 	movne	r2, #2
4000608c:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006090:	e59f4138 	ldr	r4, [pc, #312]	; 400061d0 <ControlHandle+0xfa0>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
40006094:	e3a03001 	mov	r3, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006098:	e3e01000 	mvn	r1, #0
4000609c:	e594001c 	ldr	r0, [r4, #28]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
400060a0:	e5c63310 	strb	r3, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060a4:	eb000fd6 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
400060a8:	e59dc014 	ldr	ip, [sp, #20]
400060ac:	e3a0e000 	mov	lr, #0
400060b0:	e3a01010 	mov	r1, #16
400060b4:	e1a02009 	mov	r2, r9
400060b8:	e1a0300a 	mov	r3, sl
400060bc:	e1a00004 	mov	r0, r4
400060c0:	e88d5000 	stm	sp, {ip, lr}
400060c4:	ebfff4fb 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060c8:	e594001c 	ldr	r0, [r4, #28]
400060cc:	eb001001 	bl	4000a0d8 <_txe_mutex_put>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
400060d0:	e3a0c0ff 	mov	ip, #255	; 0xff
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060d4:	e59d4014 	ldr	r4, [sp, #20]
400060d8:	e59de018 	ldr	lr, [sp, #24]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
400060dc:	e1a0700c 	mov	r7, ip
400060e0:	eafffc75 	b	400052bc <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
400060e4:	e3a00004 	mov	r0, #4
400060e8:	e59f10f8 	ldr	r1, [pc, #248]	; 400061e8 <ControlHandle+0xfb8>
400060ec:	eb003374 	bl	40012ec4 <CyU3PDebugPrint>
400060f0:	e3a0c0ff 	mov	ip, #255	; 0xff
400060f4:	e1a0700c 	mov	r7, ip
400060f8:	e1a0e00c 	mov	lr, ip
400060fc:	e1a0400c 	mov	r4, ip
40006100:	eafffc6d 	b	400052bc <ControlHandle+0x8c>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006104:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006108:	e2407001 	sub	r7, r0, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
4000610c:	e3520004 	cmp	r2, #4
40006110:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006114:	e20710ff 	and	r1, r7, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006118:	0a000003 	beq	4000612c <ControlHandle+0xefc>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
4000611c:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
40006120:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
40006124:	13a02004 	movne	r2, #4
40006128:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
4000612c:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006130:	959f30b4 	ldrls	r3, [pc, #180]	; 400061ec <ControlHandle+0xfbc>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006134:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006138:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
4000613c:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006140:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006144:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006148:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
4000614c:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006150:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
40006154:	eaffffcd 	b	40006090 <ControlHandle+0xe60>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
40006158:	e59f2058 	ldr	r2, [pc, #88]	; 400061b8 <ControlHandle+0xf88>
4000615c:	e3a06001 	mov	r6, #1
40006160:	e5826078 	str	r6, [r2, #120]	; 0x78
							 else
								 WDRflag = CyFalse;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006164:	e5c36190 	strb	r6, [r3, #400]	; 0x190
40006168:	eaffff2c 	b	40005e20 <ControlHandle+0xbf0>
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
4000616c:	e3a02001 	mov	r2, #1
40006170:	e3a00004 	mov	r0, #4
40006174:	e59f105c 	ldr	r1, [pc, #92]	; 400061d8 <ControlHandle+0xfa8>
40006178:	eb003351 	bl	40012ec4 <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
4000617c:	e59f3028 	ldr	r3, [pc, #40]	; 400061ac <ControlHandle+0xf7c>
40006180:	e3a02000 	mov	r2, #0
40006184:	e3a04004 	mov	r4, #4
40006188:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
4000618c:	eafffd81 	b	40005798 <ControlHandle+0x568>
40006190:	e59f0020 	ldr	r0, [pc, #32]	; 400061b8 <ControlHandle+0xf88>
40006194:	eafffd6e 	b	40005754 <ControlHandle+0x524>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40006198:	e3a03000 	mov	r3, #0
4000619c:	eafffe11 	b	400059e8 <ControlHandle+0x7b8>
400061a0:	e59f0010 	ldr	r0, [pc, #16]	; 400061b8 <ControlHandle+0xf88>
400061a4:	e3a03000 	mov	r3, #0
400061a8:	eafffd62 	b	40005738 <ControlHandle+0x508>
400061ac:	40030000 	.word	0x40030000
400061b0:	4003310c 	.word	0x4003310c
400061b4:	40011434 	.word	0x40011434
400061b8:	40030f90 	.word	0x40030f90
400061bc:	40030fe8 	.word	0x40030fe8
400061c0:	00010001 	.word	0x00010001
400061c4:	00ff00ff 	.word	0x00ff00ff
400061c8:	40011340 	.word	0x40011340
400061cc:	4001137c 	.word	0x4001137c
400061d0:	40032ec4 	.word	0x40032ec4
400061d4:	40030fdc 	.word	0x40030fdc
400061d8:	40011308 	.word	0x40011308
400061dc:	400113ec 	.word	0x400113ec
400061e0:	400113d0 	.word	0x400113d0
400061e4:	400113a4 	.word	0x400113a4
400061e8:	40011404 	.word	0x40011404
400061ec:	40011078 	.word	0x40011078

400061f0 <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400061f0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400061f4:	e59fa960 	ldr	sl, [pc, #2400]	; 40006b5c <CTControlHandle+0x96c>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
400061f8:	e59f8960 	ldr	r8, [pc, #2400]	; 40006b60 <CTControlHandle+0x970>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400061fc:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006200:	e1a09080 	lsl	r9, r0, #1
40006204:	e0892000 	add	r2, r9, r0
40006208:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
4000620c:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
40006210:	e24dd05c 	sub	sp, sp, #92	; 0x5c
40006214:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006218:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
4000621c:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
40006220:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006224:	0a000076 	beq	40006404 <CTControlHandle+0x214>
40006228:	9a000021 	bls	400062b4 <CTControlHandle+0xc4>
4000622c:	e3550085 	cmp	r5, #133	; 0x85
40006230:	0a000059 	beq	4000639c <CTControlHandle+0x1ac>
40006234:	3a00004e 	bcc	40006374 <CTControlHandle+0x184>
40006238:	e3550086 	cmp	r5, #134	; 0x86
4000623c:	0a000080 	beq	40006444 <CTControlHandle+0x254>
40006240:	e3550087 	cmp	r5, #135	; 0x87
40006244:	0a000076 	beq	40006424 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40006248:	e3a00000 	mov	r0, #0
4000624c:	e3a01001 	mov	r1, #1
40006250:	e1a02000 	mov	r2, r0
40006254:	eb005e82 	bl	4001dc64 <CyU3PUsbStall>
40006258:	e59f4904 	ldr	r4, [pc, #2308]	; 40006b64 <CTControlHandle+0x974>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
4000625c:	e1a02006 	mov	r2, r6
40006260:	e3a00004 	mov	r0, #4
40006264:	e59f18fc 	ldr	r1, [pc, #2300]	; 40006b68 <CTControlHandle+0x978>
40006268:	e5da3000 	ldrb	r3, [sl]
4000626c:	eb003314 	bl	40012ec4 <CyU3PDebugPrint>
			  break;
40006270:	e3a0c0ff 	mov	ip, #255	; 0xff
40006274:	e1a0600c 	mov	r6, ip
40006278:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
4000627c:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
40006280:	e58dc008 	str	ip, [sp, #8]
40006284:	e59f18e0 	ldr	r1, [pc, #2272]	; 40006b6c <CTControlHandle+0x97c>
40006288:	e3a0c0ff 	mov	ip, #255	; 0xff
4000628c:	e1a02005 	mov	r2, r5
40006290:	e1a03008 	mov	r3, r8
40006294:	e3a00004 	mov	r0, #4
40006298:	e88d4040 	stm	sp, {r6, lr}
4000629c:	e58dc00c 	str	ip, [sp, #12]
400062a0:	e58de010 	str	lr, [sp, #16]
400062a4:	e58d7014 	str	r7, [sp, #20]
400062a8:	eb003305 	bl	40012ec4 <CyU3PDebugPrint>
}
400062ac:	e28dd05c 	add	sp, sp, #92	; 0x5c
400062b0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400062b4:	e3550081 	cmp	r5, #129	; 0x81
400062b8:	0a000042 	beq	400063c8 <CTControlHandle+0x1d8>
400062bc:	9a000011 	bls	40006308 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
400062c0:	e59f489c 	ldr	r4, [pc, #2204]	; 40006b64 <CTControlHandle+0x974>
400062c4:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
400062c8:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
400062cc:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
400062d0:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
400062d4:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
400062d8:	0a00002c 	beq	40006390 <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
400062dc:	e3a0e000 	mov	lr, #0
400062e0:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400062e4:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400062e8:	e1a00007 	mov	r0, r7
400062ec:	e59f187c 	ldr	r1, [pc, #2172]	; 40006b70 <CTControlHandle+0x980>
			  sendData = glEp0Buffer[0];
			  break;
400062f0:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
400062f4:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400062f8:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400062fc:	eb005c2d 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
40006300:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006304:	eaffffdc 	b	4000627c <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006308:	e3550001 	cmp	r5, #1
4000630c:	1affffcd 	bne	40006248 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006310:	e59f484c 	ldr	r4, [pc, #2124]	; 40006b64 <CTControlHandle+0x974>
40006314:	e28d2056 	add	r2, sp, #86	; 0x56
40006318:	e3a00020 	mov	r0, #32
4000631c:	e2841058 	add	r1, r4, #88	; 0x58
40006320:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006324:	eb0059b5 	bl	4001ca00 <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006328:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
4000632c:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
40006330:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006334:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
40006338:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
4000633c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006340:	e3520009 	cmp	r2, #9
40006344:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006348:	ea000155 	b	400068a4 <CTControlHandle+0x6b4>
4000634c:	40006860 	.word	0x40006860
40006350:	400068a4 	.word	0x400068a4
40006354:	40006570 	.word	0x40006570
40006358:	400068a4 	.word	0x400068a4
4000635c:	400068a4 	.word	0x400068a4
40006360:	400068a4 	.word	0x400068a4
40006364:	400064ec 	.word	0x400064ec
40006368:	400068a4 	.word	0x400068a4
4000636c:	400068a4 	.word	0x400068a4
40006370:	40006470 	.word	0x40006470
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006374:	e59f47e8 	ldr	r4, [pc, #2024]	; 40006b64 <CTControlHandle+0x974>
40006378:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
4000637c:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006380:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006384:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006388:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000638c:	1affffd2 	bne	400062dc <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006390:	e3a01001 	mov	r1, #1
40006394:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
40006398:	eaffffd1 	b	400062e4 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
4000639c:	e59f47c0 	ldr	r4, [pc, #1984]	; 40006b64 <CTControlHandle+0x974>
			  glEp0Buffer[1] = 0;
400063a0:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400063a4:	e3a00002 	mov	r0, #2
400063a8:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400063ac:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400063b0:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
400063b4:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400063b8:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400063bc:	eb005bfd 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
400063c0:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400063c4:	eaffffac 	b	4000627c <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
400063c8:	e59f4794 	ldr	r4, [pc, #1940]	; 40006b64 <CTControlHandle+0x974>
400063cc:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
400063d0:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
400063d4:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400063d8:	e1a00007 	mov	r0, r7
400063dc:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063e0:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
400063e4:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
400063e8:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400063ec:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
400063f0:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063f4:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400063f8:	eb005bee 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
400063fc:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006400:	eaffff9d 	b	4000627c <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006404:	e59f4758 	ldr	r4, [pc, #1880]	; 40006b64 <CTControlHandle+0x974>
40006408:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
4000640c:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006410:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006414:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006418:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000641c:	1affffae 	bne	400062dc <CTControlHandle+0xec>
40006420:	eaffffda 	b	40006390 <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006424:	e59f4738 	ldr	r4, [pc, #1848]	; 40006b64 <CTControlHandle+0x974>
40006428:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
4000642c:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006430:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006434:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006438:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000643c:	1affffa6 	bne	400062dc <CTControlHandle+0xec>
40006440:	eaffffd2 	b	40006390 <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
40006444:	e59f4718 	ldr	r4, [pc, #1816]	; 40006b64 <CTControlHandle+0x974>
40006448:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
4000644c:	e1a01004 	mov	r1, r4
40006450:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006454:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006458:	e3a00001 	mov	r0, #1
4000645c:	eb005bd5 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006460:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006464:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006468:	e3a07001 	mov	r7, #1
4000646c:	eaffff82 	b	4000627c <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006470:	e59f66fc 	ldr	r6, [pc, #1788]	; 40006b74 <CTControlHandle+0x984>
40006474:	e3e01000 	mvn	r1, #0
40006478:	e596001c 	ldr	r0, [r6, #28]
4000647c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006480:	eb000edf 	bl	4000a004 <_txe_mutex_get>
					  if(getData == 1)
40006484:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006488:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000648c:	e35e0001 	cmp	lr, #1
40006490:	0a0001a9 	beq	40006b3c <CTControlHandle+0x94c>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
40006494:	e35e00ff 	cmp	lr, #255	; 0xff
40006498:	0a00019e 	beq	40006b18 <CTControlHandle+0x928>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, STOP, dataIdx);
4000649c:	e3a08000 	mov	r8, #0
400064a0:	e1a00006 	mov	r0, r6
400064a4:	e3a01023 	mov	r1, #35	; 0x23
400064a8:	e1a0200b 	mov	r2, fp
400064ac:	e58d8000 	str	r8, [sp]
400064b0:	e58d8004 	str	r8, [sp, #4]
400064b4:	ebfff3ff 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400064b8:	e596001c 	ldr	r0, [r6, #28]
400064bc:	eb000f05 	bl	4000a0d8 <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
400064c0:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
400064c4:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
400064c8:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
400064cc:	e3a00004 	mov	r0, #4
400064d0:	e59f16a0 	ldr	r1, [pc, #1696]	; 40006b78 <CTControlHandle+0x988>
400064d4:	e1a02008 	mov	r2, r8
400064d8:	e1a03006 	mov	r3, r6
400064dc:	e58dc000 	str	ip, [sp]
400064e0:	eb003277 	bl	40012ec4 <CyU3PDebugPrint>
					  break;
400064e4:	e3a0c0ff 	mov	ip, #255	; 0xff
400064e8:	eaffff63 	b	4000627c <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
400064ec:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
400064f0:	e3580001 	cmp	r8, #1
400064f4:	13580008 	cmpne	r8, #8
400064f8:	13a00000 	movne	r0, #0
400064fc:	03a00001 	moveq	r0, #1
40006500:	1a000180 	bne	40006b08 <CTControlHandle+0x918>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006504:	e59f8668 	ldr	r8, [pc, #1640]	; 40006b74 <CTControlHandle+0x984>
40006508:	e3e01000 	mvn	r1, #0
4000650c:	e598001c 	ldr	r0, [r8, #28]
40006510:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006514:	eb000eba 	bl	4000a004 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
40006518:	e59da030 	ldr	sl, [sp, #48]	; 0x30
4000651c:	e3a01022 	mov	r1, #34	; 0x22
40006520:	e1a0200b 	mov	r2, fp
40006524:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006528:	e3a0c000 	mov	ip, #0
4000652c:	e1a00008 	mov	r0, r8
40006530:	e88d1400 	stm	sp, {sl, ip}
40006534:	ebfff3df 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006538:	e598001c 	ldr	r0, [r8, #28]
4000653c:	eb000ee5 	bl	4000a0d8 <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006540:	e59f0618 	ldr	r0, [pc, #1560]	; 40006b60 <CTControlHandle+0x970>
							 CTCtrlParArry[CtrlID][14] = Data1;
40006544:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006548:	e0891006 	add	r1, r9, r6
4000654c:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
40006550:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006554:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
40006558:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
4000655c:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006560:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
40006564:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
40006568:	e3a0c0ff 	mov	ip, #255	; 0xff
4000656c:	eaffff42 	b	4000627c <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
40006570:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
40006574:	e3500001 	cmp	r0, #1
40006578:	13500004 	cmpne	r0, #4
4000657c:	1a00015c 	bne	40006af4 <CTControlHandle+0x904>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
40006580:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006584:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006588:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
4000658c:	e35200f9 	cmp	r2, #249	; 0xf9
40006590:	8a000157 	bhi	40006af4 <CTControlHandle+0x904>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006594:	e242a0c8 	sub	sl, r2, #200	; 0xc8
40006598:	e1a0c80a 	lsl	ip, sl, #16
4000659c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
400065a0:	e262a027 	rsb	sl, r2, #39	; 0x27
400065a4:	e58da038 	str	sl, [sp, #56]	; 0x38
400065a8:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400065ac:	e26210c8 	rsb	r1, r2, #200	; 0xc8
400065b0:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065b4:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
400065b8:	e1a01801 	lsl	r1, r1, #16
400065bc:	e262e064 	rsb	lr, r2, #100	; 0x64
400065c0:	81a0182a 	lsrhi	r1, sl, #16
400065c4:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065c8:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400065cc:	e3520064 	cmp	r2, #100	; 0x64
400065d0:	e1a0080e 	lsl	r0, lr, #16
400065d4:	81a0082c 	lsrhi	r0, ip, #16
400065d8:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065dc:	e242a014 	sub	sl, r2, #20
400065e0:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400065e4:	91a00820 	lsrls	r0, r0, #16
400065e8:	e262a014 	rsb	sl, r2, #20
400065ec:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065f0:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
400065f4:	e1510000 	cmp	r1, r0
400065f8:	31a0a001 	movcc	sl, r1
400065fc:	21a0a000 	movcs	sl, r0
40006600:	e1a0c80c 	lsl	ip, ip, #16
40006604:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006608:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
4000660c:	91a0e82c 	lsrls	lr, ip, #16
40006610:	e59fc564 	ldr	ip, [pc, #1380]	; 40006b7c <CTControlHandle+0x98c>
40006614:	e58da020 	str	sl, [sp, #32]
40006618:	e06ca001 	rsb	sl, ip, r1
4000661c:	81a0e82e 	lsrhi	lr, lr, #16
40006620:	e27ac000 	rsbs	ip, sl, #0
40006624:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006628:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
4000662c:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006630:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006634:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006638:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
4000663c:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006640:	e242a00a 	sub	sl, r2, #10
40006644:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006648:	e59da020 	ldr	sl, [sp, #32]
4000664c:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
40006650:	e15e000a 	cmp	lr, sl
40006654:	31a0a00e 	movcc	sl, lr
40006658:	e262c00a 	rsb	ip, r2, #10
4000665c:	e58dc040 	str	ip, [sp, #64]	; 0x40
40006660:	e58da038 	str	sl, [sp, #56]	; 0x38
40006664:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006668:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
4000666c:	e3520014 	cmp	r2, #20
40006670:	91a0a82c 	lsrls	sl, ip, #16
40006674:	81a0a82a 	lsrhi	sl, sl, #16
40006678:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
4000667c:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006680:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006684:	33a0c001 	movcc	ip, #1
40006688:	e58da03c 	str	sl, [sp, #60]	; 0x3c
4000668c:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006690:	e1a0a801 	lsl	sl, r1, #16
40006694:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
40006698:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000669c:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400066a0:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
400066a4:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066a8:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
400066ac:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400066b0:	e58d104c 	str	r1, [sp, #76]	; 0x4c
400066b4:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
400066b8:	e1a00800 	lsl	r0, r0, #16
400066bc:	e15c000a 	cmp	ip, sl
400066c0:	21a0c00a 	movcs	ip, sl
400066c4:	e352000a 	cmp	r2, #10
400066c8:	e59da020 	ldr	sl, [sp, #32]
400066cc:	81a00821 	lsrhi	r0, r1, #16
400066d0:	91a00820 	lsrls	r0, r0, #16
400066d4:	e58d0048 	str	r0, [sp, #72]	; 0x48
400066d8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400066dc:	e15e000a 	cmp	lr, sl
400066e0:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066e4:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
400066e8:	e58dc044 	str	ip, [sp, #68]	; 0x44
400066ec:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066f0:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400066f4:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
400066f8:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
400066fc:	e59de048 	ldr	lr, [sp, #72]	; 0x48
40006700:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
40006704:	e262a002 	rsb	sl, r2, #2
40006708:	e15e0000 	cmp	lr, r0
4000670c:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006710:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006714:	e3520005 	cmp	r2, #5
40006718:	e58da040 	str	sl, [sp, #64]	; 0x40
4000671c:	e1a01801 	lsl	r1, r1, #16
40006720:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006724:	81a0182c 	lsrhi	r1, ip, #16
40006728:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
4000672c:	e58de04c 	str	lr, [sp, #76]	; 0x4c
40006730:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006734:	e59de040 	ldr	lr, [sp, #64]	; 0x40
40006738:	91a01821 	lsrls	r1, r1, #16
4000673c:	e15a000c 	cmp	sl, ip
40006740:	e58d1020 	str	r1, [sp, #32]
40006744:	33a00003 	movcc	r0, #3
40006748:	e58d0038 	str	r0, [sp, #56]	; 0x38
4000674c:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006750:	e1a0080e 	lsl	r0, lr, #16
40006754:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006758:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
4000675c:	e15e000a 	cmp	lr, sl
40006760:	21a0e00a 	movcs	lr, sl
40006764:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006768:	e59da048 	ldr	sl, [sp, #72]	; 0x48
4000676c:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006770:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006774:	91a01820 	lsrls	r1, r0, #16
40006778:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
4000677c:	81a01821 	lsrhi	r1, r1, #16
40006780:	e15a000c 	cmp	sl, ip
40006784:	33a00004 	movcc	r0, #4
40006788:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000678c:	e2420001 	sub	r0, r2, #1
40006790:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006794:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006798:	e59d0020 	ldr	r0, [sp, #32]
4000679c:	e262c001 	rsb	ip, r2, #1
400067a0:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400067a4:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067a8:	e59da038 	ldr	sl, [sp, #56]	; 0x38
400067ac:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
400067b0:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400067b4:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067b8:	e3520001 	cmp	r2, #1
400067bc:	91a02800 	lslls	r2, r0, #16
400067c0:	81a0280a 	lslhi	r2, sl, #16
400067c4:	e151000e 	cmp	r1, lr
400067c8:	31a0a001 	movcc	sl, r1
400067cc:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
400067d0:	e151000e 	cmp	r1, lr
400067d4:	21a0100c 	movcs	r1, ip
400067d8:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067dc:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067e0:	e59fa38c 	ldr	sl, [pc, #908]	; 40006b74 <CTControlHandle+0x984>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067e4:	91a02001 	movls	r2, r1
400067e8:	83a02007 	movhi	r2, #7
400067ec:	e2822001 	add	r2, r2, #1
400067f0:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067f4:	e3e01000 	mvn	r1, #0
400067f8:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067fc:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006800:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006804:	eb000dfe 	bl	4000a004 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006808:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
4000680c:	e3a01003 	mov	r1, #3
40006810:	e1a0200b 	mov	r2, fp
40006814:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006818:	e58dc000 	str	ip, [sp]
4000681c:	e1a0000a 	mov	r0, sl
40006820:	e3a0c000 	mov	ip, #0
40006824:	e58dc004 	str	ip, [sp, #4]
40006828:	ebfff322 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000682c:	e59a001c 	ldr	r0, [sl, #28]
40006830:	eb000e28 	bl	4000a0d8 <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006834:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
40006838:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
4000683c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006840:	e0891006 	add	r1, r9, r6
40006844:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006848:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
4000684c:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
40006850:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006854:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006858:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
4000685c:	eaffff3f 	b	40006560 <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006860:	e0892006 	add	r2, r9, r6
40006864:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006868:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
4000686c:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
40006870:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006874:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006878:	e35e0007 	cmp	lr, #7
4000687c:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
40006880:	ea000097 	b	40006ae4 <CTControlHandle+0x8f4>
40006884:	40006a78 	.word	0x40006a78
40006888:	400069dc 	.word	0x400069dc
4000688c:	40006ae4 	.word	0x40006ae4
40006890:	40006978 	.word	0x40006978
40006894:	40006ae4 	.word	0x40006ae4
40006898:	40006ae4 	.word	0x40006ae4
4000689c:	40006ae4 	.word	0x40006ae4
400068a0:	400068d8 	.word	0x400068d8
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068a4:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
400068a8:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400068ac:	e0899006 	add	r9, r9, r6
400068b0:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068b4:	e1a02006 	mov	r2, r6
400068b8:	e3a00004 	mov	r0, #4
400068bc:	e59f12bc 	ldr	r1, [pc, #700]	; 40006b80 <CTControlHandle+0x990>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
400068c0:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068c4:	eb00317e 	bl	40012ec4 <CyU3PDebugPrint>
			  		 break;
400068c8:	e3a0c0ff 	mov	ip, #255	; 0xff
400068cc:	e1a0600c 	mov	r6, ip
400068d0:	e1a0800c 	mov	r8, ip
400068d4:	eafffe68 	b	4000627c <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068d8:	e59f6294 	ldr	r6, [pc, #660]	; 40006b74 <CTControlHandle+0x984>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068dc:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068e0:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068e4:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068e8:	e3e01000 	mvn	r1, #0
400068ec:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400068f0:	eb000dc3 	bl	4000a004 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
400068f4:	e1a0200b 	mov	r2, fp
400068f8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
400068fc:	e3a01010 	mov	r1, #16
40006900:	e1a00006 	mov	r0, r6
40006904:	e58da000 	str	sl, [sp]
40006908:	e58da004 	str	sl, [sp, #4]
4000690c:	ebfff2e9 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006910:	e596001c 	ldr	r0, [r6, #28]
40006914:	eb000def 	bl	4000a0d8 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006918:	e3e01000 	mvn	r1, #0
4000691c:	e596001c 	ldr	r0, [r6, #28]
40006920:	eb000db7 	bl	4000a004 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006924:	e3a08001 	mov	r8, #1
40006928:	e3a01020 	mov	r1, #32
4000692c:	e3a02027 	mov	r2, #39	; 0x27
40006930:	e3a03030 	mov	r3, #48	; 0x30
40006934:	e1a00006 	mov	r0, r6
40006938:	e88d0500 	stm	sp, {r8, sl}
4000693c:	ebfff2dd 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006940:	e3a0c002 	mov	ip, #2
40006944:	e3a01021 	mov	r1, #33	; 0x21
40006948:	e3a02025 	mov	r2, #37	; 0x25
4000694c:	e3a03030 	mov	r3, #48	; 0x30
40006950:	e1a00006 	mov	r0, r6
40006954:	e58dc000 	str	ip, [sp]
40006958:	e58da004 	str	sl, [sp, #4]
4000695c:	ebfff2d5 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006960:	e596001c 	ldr	r0, [r6, #28]
40006964:	eb000ddb 	bl	4000a0d8 <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006968:	e3a0c0ff 	mov	ip, #255	; 0xff
4000696c:	e1a0600c 	mov	r6, ip
40006970:	e3a08008 	mov	r8, #8
40006974:	eafffe40 	b	4000627c <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006978:	e59f81f4 	ldr	r8, [pc, #500]	; 40006b74 <CTControlHandle+0x984>
4000697c:	e3e01000 	mvn	r1, #0
40006980:	e598001c 	ldr	r0, [r8, #28]
40006984:	eb000d9e 	bl	4000a004 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006988:	e3a06000 	mov	r6, #0
4000698c:	e3a01020 	mov	r1, #32
40006990:	e3a02027 	mov	r2, #39	; 0x27
40006994:	e3a03030 	mov	r3, #48	; 0x30
40006998:	e1a00008 	mov	r0, r8
4000699c:	e58d6000 	str	r6, [sp]
400069a0:	e58d6004 	str	r6, [sp, #4]
400069a4:	ebfff2c3 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400069a8:	e3a01021 	mov	r1, #33	; 0x21
400069ac:	e3a02025 	mov	r2, #37	; 0x25
400069b0:	e3a03030 	mov	r3, #48	; 0x30
400069b4:	e1a00008 	mov	r0, r8
400069b8:	e58d6000 	str	r6, [sp]
400069bc:	e58d6004 	str	r6, [sp, #4]
400069c0:	ebfff2bc 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069c4:	e598001c 	ldr	r0, [r8, #28]
400069c8:	eb000dc2 	bl	4000a0d8 <_txe_mutex_put>
400069cc:	e3a0c0ff 	mov	ip, #255	; 0xff
400069d0:	e1a0600c 	mov	r6, ip
400069d4:	e3a08004 	mov	r8, #4
400069d8:	eafffe27 	b	4000627c <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069dc:	e59fa190 	ldr	sl, [pc, #400]	; 40006b74 <CTControlHandle+0x984>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400069e0:	e3a06000 	mov	r6, #0
400069e4:	e5c8630d 	strb	r6, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069e8:	e3e01000 	mvn	r1, #0
400069ec:	e59a001c 	ldr	r0, [sl, #28]
400069f0:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400069f4:	eb000d82 	bl	4000a004 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
400069f8:	e1a0200b 	mov	r2, fp
400069fc:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006a00:	e3a01010 	mov	r1, #16
40006a04:	e1a0000a 	mov	r0, sl
40006a08:	e58d6000 	str	r6, [sp]
40006a0c:	e58d6004 	str	r6, [sp, #4]
40006a10:	ebfff2a8 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a14:	e59a001c 	ldr	r0, [sl, #28]
40006a18:	eb000dae 	bl	4000a0d8 <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a1c:	e3e01000 	mvn	r1, #0
40006a20:	e59a001c 	ldr	r0, [sl, #28]
40006a24:	eb000d76 	bl	4000a004 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a28:	e3a01020 	mov	r1, #32
40006a2c:	e3a02027 	mov	r2, #39	; 0x27
40006a30:	e3a03030 	mov	r3, #48	; 0x30
40006a34:	e1a0000a 	mov	r0, sl
40006a38:	e58d6000 	str	r6, [sp]
40006a3c:	e58d6004 	str	r6, [sp, #4]
40006a40:	ebfff29c 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a44:	e3a01021 	mov	r1, #33	; 0x21
40006a48:	e3a02025 	mov	r2, #37	; 0x25
40006a4c:	e3a03030 	mov	r3, #48	; 0x30
40006a50:	e1a0000a 	mov	r0, sl
40006a54:	e58d6000 	str	r6, [sp]
40006a58:	e58d6004 	str	r6, [sp, #4]
40006a5c:	ebfff295 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a60:	e59a001c 	ldr	r0, [sl, #28]
40006a64:	eb000d9b 	bl	4000a0d8 <_txe_mutex_put>
40006a68:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a6c:	e1a0600c 	mov	r6, ip
40006a70:	e3a08002 	mov	r8, #2
40006a74:	eafffe00 	b	4000627c <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a78:	e59f60f4 	ldr	r6, [pc, #244]	; 40006b74 <CTControlHandle+0x984>
40006a7c:	e3e01000 	mvn	r1, #0
40006a80:	e596001c 	ldr	r0, [r6, #28]
40006a84:	eb000d5e 	bl	4000a004 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a88:	e3a08000 	mov	r8, #0
40006a8c:	e3a0a001 	mov	sl, #1
40006a90:	e3a01020 	mov	r1, #32
40006a94:	e3a02027 	mov	r2, #39	; 0x27
40006a98:	e3a03030 	mov	r3, #48	; 0x30
40006a9c:	e1a00006 	mov	r0, r6
40006aa0:	e58d8004 	str	r8, [sp, #4]
40006aa4:	e58da000 	str	sl, [sp]
40006aa8:	ebfff282 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?0:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006aac:	e3a0c002 	mov	ip, #2
40006ab0:	e3a01021 	mov	r1, #33	; 0x21
40006ab4:	e3a02025 	mov	r2, #37	; 0x25
40006ab8:	e3a03030 	mov	r3, #48	; 0x30
40006abc:	e1a00006 	mov	r0, r6
40006ac0:	e58dc000 	str	ip, [sp]
40006ac4:	e58d8004 	str	r8, [sp, #4]
40006ac8:	ebfff27a 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006acc:	e596001c 	ldr	r0, [r6, #28]
40006ad0:	eb000d80 	bl	4000a0d8 <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006ad4:	e3a0c0ff 	mov	ip, #255	; 0xff
40006ad8:	e1a0600c 	mov	r6, ip
40006adc:	e1a0800a 	mov	r8, sl
40006ae0:	eafffde5 	b	4000627c <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006ae4:	e3a0c0ff 	mov	ip, #255	; 0xff
40006ae8:	e1a08000 	mov	r8, r0
40006aec:	e1a0600c 	mov	r6, ip
40006af0:	eafffde1 	b	4000627c <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006af4:	e3a00000 	mov	r0, #0
40006af8:	e3a01001 	mov	r1, #1
40006afc:	e1a02000 	mov	r2, r0
40006b00:	eb005c57 	bl	4001dc64 <CyU3PUsbStall>
40006b04:	eafffe95 	b	40006560 <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006b08:	e3a01001 	mov	r1, #1
40006b0c:	e1a02000 	mov	r2, r0
40006b10:	eb005c53 	bl	4001dc64 <CyU3PUsbStall>
40006b14:	eafffe91 	b	40006560 <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006b18:	e3a0e008 	mov	lr, #8
40006b1c:	e3a0c000 	mov	ip, #0
40006b20:	e1a00006 	mov	r0, r6
40006b24:	e3a01023 	mov	r1, #35	; 0x23
40006b28:	e1a0200b 	mov	r2, fp
40006b2c:	e58de000 	str	lr, [sp]
40006b30:	e58dc004 	str	ip, [sp, #4]
40006b34:	ebfff25f 	bl	400034b8 <cmdSet>
40006b38:	eafffe5e 	b	400064b8 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006b3c:	e3a08004 	mov	r8, #4
40006b40:	e3a0e000 	mov	lr, #0
40006b44:	e1a00006 	mov	r0, r6
40006b48:	e3a01023 	mov	r1, #35	; 0x23
40006b4c:	e1a0200b 	mov	r2, fp
40006b50:	e88d4100 	stm	sp, {r8, lr}
40006b54:	ebfff257 	bl	400034b8 <cmdSet>
40006b58:	eafffe56 	b	400064b8 <CTControlHandle+0x2c8>
40006b5c:	4003310c 	.word	0x4003310c
40006b60:	40030000 	.word	0x40030000
40006b64:	40030f90 	.word	0x40030f90
40006b68:	400114d0 	.word	0x400114d0
40006b6c:	400114f4 	.word	0x400114f4
40006b70:	40030fe8 	.word	0x40030fe8
40006b74:	40032ec4 	.word	0x40032ec4
40006b78:	40011484 	.word	0x40011484
40006b7c:	0000ffff 	.word	0x0000ffff
40006b80:	400114ac 	.word	0x400114ac

40006b84 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006b84:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006b88:	e59f49cc 	ldr	r4, [pc, #2508]	; 4000755c <UVCAppEP0Thread_Entry+0x9d8>
40006b8c:	e59f69cc 	ldr	r6, [pc, #2508]	; 40007560 <UVCAppEP0Thread_Entry+0x9dc>
40006b90:	e59fa9cc 	ldr	sl, [pc, #2508]	; 40007564 <UVCAppEP0Thread_Entry+0x9e0>
40006b94:	e59f99cc 	ldr	r9, [pc, #2508]	; 40007568 <UVCAppEP0Thread_Entry+0x9e4>
40006b98:	e59f89cc 	ldr	r8, [pc, #2508]	; 4000756c <UVCAppEP0Thread_Entry+0x9e8>
40006b9c:	e59f79cc 	ldr	r7, [pc, #2508]	; 40007570 <UVCAppEP0Thread_Entry+0x9ec>
40006ba0:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006ba4:	e1a05004 	mov	r5, r4
40006ba8:	e3e0c000 	mvn	ip, #0
40006bac:	e59f09a8 	ldr	r0, [pc, #2472]	; 4000755c <UVCAppEP0Thread_Entry+0x9d8>
40006bb0:	e3a0104c 	mov	r1, #76	; 0x4c
40006bb4:	e3a02001 	mov	r2, #1
40006bb8:	e28d3030 	add	r3, sp, #48	; 0x30
40006bbc:	e58dc000 	str	ip, [sp]
40006bc0:	eb000c47 	bl	40009ce4 <_txe_event_flags_get>
40006bc4:	e3500000 	cmp	r0, #0
40006bc8:	1a000030 	bne	40006c90 <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006bcc:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40006bd0:	e3530000 	cmp	r3, #0
40006bd4:	0a000089 	beq	40006e00 <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006bd8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006bdc:	e313000c 	tst	r3, #12
40006be0:	1a000072 	bne	40006db0 <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006be4:	e3130004 	tst	r3, #4
40006be8:	0a00001c 	beq	40006c60 <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006bec:	e1d8e0b0 	ldrh	lr, [r8]
40006bf0:	e1a0242e 	lsr	r2, lr, #8
40006bf4:	e3520003 	cmp	r2, #3
40006bf8:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006bfc:	ea000012 	b	40006c4c <UVCAppEP0Thread_Entry+0xc8>
40006c00:	40006c4c 	.word	0x40006c4c
40006c04:	40006d30 	.word	0x40006d30
40006c08:	40006c10 	.word	0x40006c10
40006c0c:	40006d6c 	.word	0x40006d6c
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006c10:	e1d920b0 	ldrh	r2, [r9]
40006c14:	e3520c06 	cmp	r2, #1536	; 0x600
40006c18:	0a0001d5 	beq	40007374 <UVCAppEP0Thread_Entry+0x7f0>
40006c1c:	8a0000cc 	bhi	40006f54 <UVCAppEP0Thread_Entry+0x3d0>
40006c20:	e3520c03 	cmp	r2, #768	; 0x300
40006c24:	0a0001ce 	beq	40007364 <UVCAppEP0Thread_Entry+0x7e0>
40006c28:	8a0001c5 	bhi	40007344 <UVCAppEP0Thread_Entry+0x7c0>
40006c2c:	e3520c01 	cmp	r2, #256	; 0x100
40006c30:	0a000164 	beq	400071c8 <UVCAppEP0Thread_Entry+0x644>
40006c34:	e3520c02 	cmp	r2, #512	; 0x200
40006c38:	0a00015e 	beq	400071b8 <UVCAppEP0Thread_Entry+0x634>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006c3c:	e59f1930 	ldr	r1, [pc, #2352]	; 40007574 <UVCAppEP0Thread_Entry+0x9f0>
40006c40:	e5da3000 	ldrb	r3, [sl]
40006c44:	e3a00004 	mov	r0, #4
40006c48:	eb00309d 	bl	40012ec4 <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006c4c:	e3a00000 	mov	r0, #0
40006c50:	e3a01001 	mov	r1, #1
40006c54:	e1a02000 	mov	r2, r0
40006c58:	eb005c01 	bl	4001dc64 <CyU3PUsbStall>
40006c5c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006c60:	e3130008 	tst	r3, #8
40006c64:	0a000007 	beq	40006c88 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006c68:	e1d830b0 	ldrh	r3, [r8]
40006c6c:	e3530001 	cmp	r3, #1
40006c70:	0a000068 	beq	40006e18 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006c74:	e3a00000 	mov	r0, #0
40006c78:	e3a01001 	mov	r1, #1
40006c7c:	e1a02000 	mov	r2, r0
40006c80:	eb005bf7 	bl	4001dc64 <CyU3PUsbStall>
40006c84:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006c88:	e3130040 	tst	r3, #64	; 0x40
40006c8c:	1a000001 	bne	40006c98 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006c90:	eb000efc 	bl	4000a888 <_txe_thread_relinquish>
    }
40006c94:	eaffffc3 	b	40006ba8 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006c98:	e3a00018 	mov	r0, #24
40006c9c:	e28d102c 	add	r1, sp, #44	; 0x2c
40006ca0:	eb006fb8 	bl	40022b88 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006ca4:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c
40006ca8:	e3520000 	cmp	r2, #0
40006cac:	0a00006d 	beq	40006e68 <UVCAppEP0Thread_Entry+0x2e4>
40006cb0:	e5d6365f 	ldrb	r3, [r6, #1631]	; 0x65f
40006cb4:	e3530000 	cmp	r3, #0
40006cb8:	1afffff4 	bne	40006c90 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006cbc:	e5972000 	ldr	r2, [r7]
40006cc0:	e3a0b002 	mov	fp, #2
40006cc4:	e5c2b000 	strb	fp, [r2]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006cc8:	e5971000 	ldr	r1, [r7]
40006ccc:	e3a0b001 	mov	fp, #1
40006cd0:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006cd4:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006cd8:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006cdc:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006ce0:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ce4:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006ce8:	e5cc3003 	strb	r3, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006cec:	e5972000 	ldr	r2, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006cf0:	e3a0c004 	mov	ip, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006cf4:	e59f087c 	ldr	r0, [pc, #2172]	; 40007578 <UVCAppEP0Thread_Entry+0x9f4>
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006cf8:	e58d2020 	str	r2, [sp, #32]
					interStabuf.size   = 1024;
40006cfc:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;
40006d00:	e1cd32b8 	strh	r3, [sp, #40]	; 0x28

					interStabuf.count = 4;
40006d04:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006d08:	eb003fe9 	bl	40016cb4 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006d0c:	e59f0864 	ldr	r0, [pc, #2148]	; 40007578 <UVCAppEP0Thread_Entry+0x9f4>
40006d10:	e28d1020 	add	r1, sp, #32
40006d14:	eb003f58 	bl	40016a7c <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006d18:	e2502000 	subs	r2, r0, #0
40006d1c:	1a000163 	bne	400072b0 <UVCAppEP0Thread_Entry+0x72c>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006d20:	e59f3838 	ldr	r3, [pc, #2104]	; 40007560 <UVCAppEP0Thread_Entry+0x9dc>
40006d24:	e5c3b65f 	strb	fp, [r3, #1631]	; 0x65f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006d28:	eb000ed6 	bl	4000a888 <_txe_thread_relinquish>
40006d2c:	eaffff9d 	b	40006ba8 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006d30:	e1d920b0 	ldrh	r2, [r9]
40006d34:	e3520c06 	cmp	r2, #1536	; 0x600
40006d38:	0a0000d1 	beq	40007084 <UVCAppEP0Thread_Entry+0x500>
40006d3c:	8a00008f 	bhi	40006f80 <UVCAppEP0Thread_Entry+0x3fc>
40006d40:	e3520c03 	cmp	r2, #768	; 0x300
40006d44:	0a000113 	beq	40007198 <UVCAppEP0Thread_Entry+0x614>
40006d48:	8a00010a 	bhi	40007178 <UVCAppEP0Thread_Entry+0x5f4>
40006d4c:	e3520c01 	cmp	r2, #256	; 0x100
40006d50:	0a000152 	beq	400072a0 <UVCAppEP0Thread_Entry+0x71c>
40006d54:	e3520c02 	cmp	r2, #512	; 0x200
40006d58:	1affffb7 	bne	40006c3c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006d5c:	e3a00001 	mov	r0, #1
40006d60:	ebfffd22 	bl	400061f0 <CTControlHandle>
40006d64:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006d68:	eaffffbc 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006d6c:	e1d930b0 	ldrh	r3, [r9]
40006d70:	e3530c09 	cmp	r3, #2304	; 0x900
40006d74:	0a0001ea 	beq	40007524 <UVCAppEP0Thread_Entry+0x9a0>
40006d78:	8a000088 	bhi	40006fa0 <UVCAppEP0Thread_Entry+0x41c>
40006d7c:	e3530b01 	cmp	r3, #1024	; 0x400
40006d80:	0a0001eb 	beq	40007534 <UVCAppEP0Thread_Entry+0x9b0>
40006d84:	8a000183 	bhi	40007398 <UVCAppEP0Thread_Entry+0x814>
40006d88:	e3530c02 	cmp	r3, #512	; 0x200
40006d8c:	0a0001e0 	beq	40007514 <UVCAppEP0Thread_Entry+0x990>
40006d90:	e3530c03 	cmp	r3, #768	; 0x300
40006d94:	0a0001bf 	beq	40007498 <UVCAppEP0Thread_Entry+0x914>
40006d98:	e3530c01 	cmp	r3, #256	; 0x100
40006d9c:	1affffaa 	bne	40006c4c <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006da0:	e3a00010 	mov	r0, #16
40006da4:	ebfff921 	bl	40005230 <ControlHandle>
40006da8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006dac:	eaffffab 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006db0:	e59fb7c4 	ldr	fp, [pc, #1988]	; 4000757c <UVCAppEP0Thread_Entry+0x9f8>
40006db4:	e1d9c0b0 	ldrh	ip, [r9]
40006db8:	e1d800b0 	ldrh	r0, [r8]
40006dbc:	e59f17bc 	ldr	r1, [pc, #1980]	; 40007580 <UVCAppEP0Thread_Entry+0x9fc>
40006dc0:	e5dbe000 	ldrb	lr, [fp]
40006dc4:	e5dab000 	ldrb	fp, [sl]
40006dc8:	e58d000c 	str	r0, [sp, #12]
40006dcc:	e58dc008 	str	ip, [sp, #8]
40006dd0:	e1d1c0b0 	ldrh	ip, [r1]
40006dd4:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40006dd8:	e58db004 	str	fp, [sp, #4]
40006ddc:	e3a00004 	mov	r0, #4
40006de0:	e59f179c 	ldr	r1, [pc, #1948]	; 40007584 <UVCAppEP0Thread_Entry+0xa00>
40006de4:	e3a0b000 	mov	fp, #0
40006de8:	e58de000 	str	lr, [sp]
40006dec:	e58dc010 	str	ip, [sp, #16]
40006df0:	e58db014 	str	fp, [sp, #20]
40006df4:	eb003032 	bl	40012ec4 <CyU3PDebugPrint>
40006df8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006dfc:	eaffff78 	b	40006be4 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006e00:	eb005770 	bl	4001cbc8 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006e04:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006e08:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006e0c:	13a00001 	movne	r0, #1
40006e10:	1585003c 	strne	r0, [r5, #60]	; 0x3c
40006e14:	eaffff6f 	b	40006bd8 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006e18:	e1d920b0 	ldrh	r2, [r9]
40006e1c:	e3520c03 	cmp	r2, #768	; 0x300
40006e20:	0a00007d 	beq	4000701c <UVCAppEP0Thread_Entry+0x498>
40006e24:	8a000033 	bhi	40006ef8 <UVCAppEP0Thread_Entry+0x374>
40006e28:	e3520c01 	cmp	r2, #256	; 0x100
40006e2c:	0a000087 	beq	40007050 <UVCAppEP0Thread_Entry+0x4cc>
40006e30:	e3520c02 	cmp	r2, #512	; 0x200
40006e34:	1affff8e 	bne	40006c74 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006e38:	e5da3000 	ldrb	r3, [sl]
40006e3c:	e3530081 	cmp	r3, #129	; 0x81
40006e40:	0a000087 	beq	40007064 <UVCAppEP0Thread_Entry+0x4e0>
40006e44:	8a000122 	bhi	400072d4 <UVCAppEP0Thread_Entry+0x750>
40006e48:	e3530001 	cmp	r3, #1
40006e4c:	0a000180 	beq	40007454 <UVCAppEP0Thread_Entry+0x8d0>
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
                            }
                        }
                        break;
                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006e50:	e3a00000 	mov	r0, #0
40006e54:	e3a01001 	mov	r1, #1
40006e58:	e1a02000 	mov	r2, r0
40006e5c:	eb005b80 	bl	4001dc64 <CyU3PUsbStall>
40006e60:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006e64:	eaffff87 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006e68:	e5d6e65f 	ldrb	lr, [r6, #1631]	; 0x65f
40006e6c:	e35e0000 	cmp	lr, #0
40006e70:	0affff86 	beq	40006c90 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006e74:	e5973000 	ldr	r3, [r7]
40006e78:	e3a0b002 	mov	fp, #2
40006e7c:	e5c3b000 	strb	fp, [r3]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e80:	e5971000 	ldr	r1, [r7]
40006e84:	e3a0b001 	mov	fp, #1
40006e88:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e8c:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006e90:	e3a0eb01 	mov	lr, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006e94:	e5c02002 	strb	r2, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006e98:	e597c000 	ldr	ip, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006e9c:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006ea0:	e5ccb003 	strb	fp, [ip, #3]

					interStabuf.buffer = glInterStaBuffer;
40006ea4:	e5973000 	ldr	r3, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006ea8:	e1a0c002 	mov	ip, r2
40006eac:	e1cd22b8 	strh	r2, [sp, #40]	; 0x28

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006eb0:	e59f06c0 	ldr	r0, [pc, #1728]	; 40007578 <UVCAppEP0Thread_Entry+0x9f4>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006eb4:	e3a02004 	mov	r2, #4
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006eb8:	e58d3020 	str	r3, [sp, #32]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006ebc:	e1cd22b4 	strh	r2, [sp, #36]	; 0x24
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006ec0:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ec4:	e58dc01c 	str	ip, [sp, #28]
40006ec8:	eb003f79 	bl	40016cb4 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006ecc:	e59f06a4 	ldr	r0, [pc, #1700]	; 40007578 <UVCAppEP0Thread_Entry+0x9f4>
40006ed0:	e28d1020 	add	r1, sp, #32
40006ed4:	eb003ee8 	bl	40016a7c <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006ed8:	e59d301c 	ldr	r3, [sp, #28]
40006edc:	e2502000 	subs	r2, r0, #0
40006ee0:	1a0000bc 	bne	400071d8 <UVCAppEP0Thread_Entry+0x654>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006ee4:	e59f2674 	ldr	r2, [pc, #1652]	; 40007560 <UVCAppEP0Thread_Entry+0x9dc>
					stiflag = CyTrue;
40006ee8:	e584b09c 	str	fp, [r4, #156]	; 0x9c
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006eec:	e5c2365f 	strb	r3, [r2, #1631]	; 0x65f
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006ef0:	eb000e64 	bl	4000a888 <_txe_thread_relinquish>
40006ef4:	eaffff2b 	b	40006ba8 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006ef8:	e3520b01 	cmp	r2, #1024	; 0x400
40006efc:	0a000034 	beq	40006fd4 <UVCAppEP0Thread_Entry+0x450>
40006f00:	e3520c05 	cmp	r2, #1280	; 0x500
40006f04:	1affff5a 	bne	40006c74 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40006f08:	e5da2000 	ldrb	r2, [sl]
40006f0c:	e3520081 	cmp	r2, #129	; 0x81
40006f10:	0a000053 	beq	40007064 <UVCAppEP0Thread_Entry+0x4e0>
40006f14:	8a00011a 	bhi	40007384 <UVCAppEP0Thread_Entry+0x800>
40006f18:	e3520001 	cmp	r2, #1
40006f1c:	1affff54 	bne	40006c74 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006f20:	e3a00020 	mov	r0, #32
40006f24:	e59f165c 	ldr	r1, [pc, #1628]	; 40007588 <UVCAppEP0Thread_Entry+0xa04>
40006f28:	e28d2036 	add	r2, sp, #54	; 0x36
40006f2c:	eb0056b3 	bl	4001ca00 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006f30:	e3500000 	cmp	r0, #0
40006f34:	1a000182 	bne	40007544 <UVCAppEP0Thread_Entry+0x9c0>
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
40006f38:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40006f3c:	e2800004 	add	r0, r0, #4
40006f40:	e59f1644 	ldr	r1, [pc, #1604]	; 4000758c <UVCAppEP0Thread_Entry+0xa08>
40006f44:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
40006f48:	eb002fdd 	bl	40012ec4 <CyU3PDebugPrint>
40006f4c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f50:	eaffff4c 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f54:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006f58:	0a0000f1 	beq	40007324 <UVCAppEP0Thread_Entry+0x7a0>
40006f5c:	8a0000e6 	bhi	400072fc <UVCAppEP0Thread_Entry+0x778>
40006f60:	e3520c07 	cmp	r2, #1792	; 0x700
40006f64:	0a0000e0 	beq	400072ec <UVCAppEP0Thread_Entry+0x768>
40006f68:	e3520b02 	cmp	r2, #2048	; 0x800
40006f6c:	1affff32 	bne	40006c3c <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40006f70:	e3a00007 	mov	r0, #7
40006f74:	ebfff8ad 	bl	40005230 <ControlHandle>
40006f78:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006f7c:	eaffff37 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006f80:	e3520c09 	cmp	r2, #2304	; 0x900
40006f84:	0a000122 	beq	40007414 <UVCAppEP0Thread_Entry+0x890>
40006f88:	8a000117 	bhi	400073ec <UVCAppEP0Thread_Entry+0x868>
40006f8c:	e3520c07 	cmp	r2, #1792	; 0x700
40006f90:	0a000109 	beq	400073bc <UVCAppEP0Thread_Entry+0x838>
40006f94:	e3520b02 	cmp	r2, #2048	; 0x800
40006f98:	1affff27 	bne	40006c3c <UVCAppEP0Thread_Entry+0xb8>
40006f9c:	eaffff2f 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006fa0:	e3530c0f 	cmp	r3, #3840	; 0xf00
40006fa4:	0a000156 	beq	40007504 <UVCAppEP0Thread_Entry+0x980>
40006fa8:	8a000039 	bhi	40007094 <UVCAppEP0Thread_Entry+0x510>
40006fac:	e3530c0b 	cmp	r3, #2816	; 0xb00
40006fb0:	0a00014f 	beq	400074f4 <UVCAppEP0Thread_Entry+0x970>
40006fb4:	e3530c0d 	cmp	r3, #3328	; 0xd00
40006fb8:	0a000149 	beq	400074e4 <UVCAppEP0Thread_Entry+0x960>
40006fbc:	e3530c0a 	cmp	r3, #2560	; 0xa00
40006fc0:	1affff21 	bne	40006c4c <UVCAppEP0Thread_Entry+0xc8>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
40006fc4:	e3a00019 	mov	r0, #25
40006fc8:	ebfff898 	bl	40005230 <ControlHandle>
40006fcc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40006fd0:	eaffff22 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40006fd4:	e5dab000 	ldrb	fp, [sl]
40006fd8:	e35b0081 	cmp	fp, #129	; 0x81
40006fdc:	0a000013 	beq	40007030 <UVCAppEP0Thread_Entry+0x4ac>
40006fe0:	8a000085 	bhi	400071fc <UVCAppEP0Thread_Entry+0x678>
40006fe4:	e35b0001 	cmp	fp, #1
40006fe8:	1affff21 	bne	40006c74 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006fec:	e28d2036 	add	r2, sp, #54	; 0x36
40006ff0:	e3a00020 	mov	r0, #32
40006ff4:	e59f158c 	ldr	r1, [pc, #1420]	; 40007588 <UVCAppEP0Thread_Entry+0xa04>
40006ff8:	eb005680 	bl	4001ca00 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006ffc:	e2502000 	subs	r2, r0, #0
40007000:	1affff1f 	bne	40006c84 <UVCAppEP0Thread_Entry+0x100>
                            {
                                SensorScaling_VGA ();
                            }
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007004:	e59f0550 	ldr	r0, [pc, #1360]	; 4000755c <UVCAppEP0Thread_Entry+0x9d8>
40007008:	e1a0100b 	mov	r1, fp
4000700c:	eb000b64 	bl	40009da4 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40007010:	e2502000 	subs	r2, r0, #0
40007014:	0affff1a 	beq	40006c84 <UVCAppEP0Thread_Entry+0x100>
40007018:	ea000119 	b	40007484 <UVCAppEP0Thread_Entry+0x900>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000701c:	e5da2000 	ldrb	r2, [sl]
40007020:	e3520083 	cmp	r2, #131	; 0x83
40007024:	8a000098 	bhi	4000728c <UVCAppEP0Thread_Entry+0x708>
40007028:	e3520081 	cmp	r2, #129	; 0x81
4000702c:	3a00007d 	bcc	40007228 <UVCAppEP0Thread_Entry+0x6a4>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007030:	e5d4b048 	ldrb	fp, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
40007034:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007038:	e35b0003 	cmp	fp, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
4000703c:	059f154c 	ldreq	r1, [pc, #1356]	; 40007590 <UVCAppEP0Thread_Entry+0xa0c>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
40007040:	159f154c 	ldrne	r1, [pc, #1356]	; 40007594 <UVCAppEP0Thread_Entry+0xa10>
40007044:	eb0058db 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
40007048:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
4000704c:	eaffff0d 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007050:	e5da2000 	ldrb	r2, [sl]
40007054:	e3520083 	cmp	r2, #131	; 0x83
40007058:	8a00002f 	bhi	4000711c <UVCAppEP0Thread_Entry+0x598>
4000705c:	e3520081 	cmp	r2, #129	; 0x81
40007060:	3a000014 	bcc	400070b8 <UVCAppEP0Thread_Entry+0x534>
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
40007064:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007068:	e3a0001a 	mov	r0, #26
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
4000706c:	e3520003 	cmp	r2, #3
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
40007070:	059f1520 	ldreq	r1, [pc, #1312]	; 40007598 <UVCAppEP0Thread_Entry+0xa14>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
40007074:	159f1520 	ldrne	r1, [pc, #1312]	; 4000759c <UVCAppEP0Thread_Entry+0xa18>
40007078:	eb0058ce 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
4000707c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007080:	eaffff00 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007084:	e3a00005 	mov	r0, #5
40007088:	ebfffc58 	bl	400061f0 <CTControlHandle>
4000708c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007090:	eafffef2 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007094:	e3530c11 	cmp	r3, #4352	; 0x1100
40007098:	0a0000e9 	beq	40007444 <UVCAppEP0Thread_Entry+0x8c0>
4000709c:	8a00002d 	bhi	40007158 <UVCAppEP0Thread_Entry+0x5d4>
400070a0:	e3530a01 	cmp	r3, #4096	; 0x1000
400070a4:	1afffee8 	bne	40006c4c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
400070a8:	e3a0001f 	mov	r0, #31
400070ac:	ebfff85f 	bl	40005230 <ControlHandle>
400070b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400070b4:	eafffee9 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400070b8:	e3520001 	cmp	r2, #1
400070bc:	1affff63 	bne	40006e50 <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400070c0:	e3a00020 	mov	r0, #32
400070c4:	e59f14bc 	ldr	r1, [pc, #1212]	; 40007588 <UVCAppEP0Thread_Entry+0xa04>
400070c8:	e28d2036 	add	r2, sp, #54	; 0x36
400070cc:	eb00564b 	bl	4001ca00 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
400070d0:	e3500000 	cmp	r0, #0
400070d4:	1afffeea 	bne	40006c84 <UVCAppEP0Thread_Entry+0x100>
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400070d8:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
400070dc:	e3530003 	cmp	r3, #3
400070e0:	1afffee7 	bne	40006c84 <UVCAppEP0Thread_Entry+0x100>
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
400070e4:	e5d4e07e 	ldrb	lr, [r4, #126]	; 0x7e
                            glProbeCtrl[3] = glCommitCtrl[3];
400070e8:	e5d4c07f 	ldrb	ip, [r4, #127]	; 0x7f
                            glProbeCtrl[4] = glCommitCtrl[4];
400070ec:	e5d40080 	ldrb	r0, [r4, #128]	; 0x80
                            glProbeCtrl[5] = glCommitCtrl[5];
400070f0:	e5d41081 	ldrb	r1, [r4, #129]	; 0x81
                            glProbeCtrl[6] = glCommitCtrl[6];
400070f4:	e5d42082 	ldrb	r2, [r4, #130]	; 0x82
                            glProbeCtrl[7] = glCommitCtrl[7];
400070f8:	e5d4b083 	ldrb	fp, [r4, #131]	; 0x83
                    {
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
400070fc:	e5c6e612 	strb	lr, [r6, #1554]	; 0x612
                            glProbeCtrl[3] = glCommitCtrl[3];
40007100:	e5c6c613 	strb	ip, [r6, #1555]	; 0x613
                            glProbeCtrl[4] = glCommitCtrl[4];
40007104:	e5c60614 	strb	r0, [r6, #1556]	; 0x614
                            glProbeCtrl[5] = glCommitCtrl[5];
40007108:	e5c61615 	strb	r1, [r6, #1557]	; 0x615
                            glProbeCtrl[6] = glCommitCtrl[6];
4000710c:	e5c62616 	strb	r2, [r6, #1558]	; 0x616
                            glProbeCtrl[7] = glCommitCtrl[7];
40007110:	e5c6b617 	strb	fp, [r6, #1559]	; 0x617
40007114:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007118:	eafffeda 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
4000711c:	e3520086 	cmp	r2, #134	; 0x86
40007120:	0a000039 	beq	4000720c <UVCAppEP0Thread_Entry+0x688>
40007124:	e3520087 	cmp	r2, #135	; 0x87
40007128:	0affffcd 	beq	40007064 <UVCAppEP0Thread_Entry+0x4e0>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000712c:	e3520085 	cmp	r2, #133	; 0x85
40007130:	1affff46 	bne	40006e50 <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007134:	e59f1464 	ldr	r1, [pc, #1124]	; 400075a0 <UVCAppEP0Thread_Entry+0xa1c>
40007138:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
4000713c:	e3a0301a 	mov	r3, #26
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
40007140:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
40007144:	e3a03000 	mov	r3, #0
40007148:	e5c43059 	strb	r3, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
4000714c:	eb005899 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
40007150:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007154:	eafffecb 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007158:	e3530c12 	cmp	r3, #4608	; 0x1200
4000715c:	0a0000dc 	beq	400074d4 <UVCAppEP0Thread_Entry+0x950>
40007160:	e3530c13 	cmp	r3, #4864	; 0x1300
40007164:	1afffeb8 	bne	40006c4c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID6-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCGridCtlID6);
40007168:	e3a00026 	mov	r0, #38	; 0x26
4000716c:	ebfff82f 	bl	40005230 <ControlHandle>
40007170:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007174:	eafffeb9 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40007178:	e3520b01 	cmp	r2, #1024	; 0x400
4000717c:	0a000009 	beq	400071a8 <UVCAppEP0Thread_Entry+0x624>
40007180:	e3520c05 	cmp	r2, #1280	; 0x500
40007184:	1afffeac 	bne	40006c3c <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
40007188:	e3a00004 	mov	r0, #4
4000718c:	ebfffc17 	bl	400061f0 <CTControlHandle>
40007190:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007194:	eafffeb1 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
40007198:	e3a00002 	mov	r0, #2
4000719c:	ebfffc13 	bl	400061f0 <CTControlHandle>
400071a0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071a4:	eafffead 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
400071a8:	e3a00003 	mov	r0, #3
400071ac:	ebfffc0f 	bl	400061f0 <CTControlHandle>
400071b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071b4:	eafffea9 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
400071b8:	e3a00001 	mov	r0, #1
400071bc:	ebfff81b 	bl	40005230 <ControlHandle>
400071c0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071c4:	eafffea5 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
400071c8:	e3a00000 	mov	r0, #0
400071cc:	ebfff817 	bl	40005230 <ControlHandle>
400071d0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400071d4:	eafffea1 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
400071d8:	e3a00004 	mov	r0, #4
400071dc:	e59f13c0 	ldr	r1, [pc, #960]	; 400075a4 <UVCAppEP0Thread_Entry+0xa20>
400071e0:	eb002f37 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400071e4:	e59f13bc 	ldr	r1, [pc, #956]	; 400075a8 <UVCAppEP0Thread_Entry+0xa24>
400071e8:	e3a00004 	mov	r0, #4
400071ec:	eb002f34 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400071f0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400071f4:	eb0005f2 	bl	400089c4 <_tx_thread_sleep>
400071f8:	eafffff9 	b	400071e4 <UVCAppEP0Thread_Entry+0x660>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
400071fc:	e35b0085 	cmp	fp, #133	; 0x85
40007200:	0affffcb 	beq	40007134 <UVCAppEP0Thread_Entry+0x5b0>
40007204:	e35b0086 	cmp	fp, #134	; 0x86
40007208:	1afffe99 	bne	40006c74 <UVCAppEP0Thread_Entry+0xf0>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000720c:	e1a00003 	mov	r0, r3

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
40007210:	e3a03003 	mov	r3, #3
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40007214:	e59f1384 	ldr	r1, [pc, #900]	; 400075a0 <UVCAppEP0Thread_Entry+0xa1c>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
40007218:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
4000721c:	eb005865 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
40007220:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007224:	eafffe97 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007228:	e3520001 	cmp	r2, #1
4000722c:	1affff07 	bne	40006e50 <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007230:	e3a00020 	mov	r0, #32
40007234:	e59f134c 	ldr	r1, [pc, #844]	; 40007588 <UVCAppEP0Thread_Entry+0xa04>
40007238:	e28d2036 	add	r2, sp, #54	; 0x36
4000723c:	eb0055ef 	bl	4001ca00 <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40007240:	e3500000 	cmp	r0, #0
40007244:	1afffe8e 	bne	40006c84 <UVCAppEP0Thread_Entry+0x100>
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
40007248:	e5d5b048 	ldrb	fp, [r5, #72]	; 0x48
4000724c:	e35b0003 	cmp	fp, #3
40007250:	1afffe8b 	bne	40006c84 <UVCAppEP0Thread_Entry+0x100>
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007254:	e5d53082 	ldrb	r3, [r5, #130]	; 0x82
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007258:	e5d5e07d 	ldrb	lr, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
4000725c:	e5d5c07e 	ldrb	ip, [r5, #126]	; 0x7e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007260:	e5d5007f 	ldrb	r0, [r5, #127]	; 0x7f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007264:	e5d51080 	ldrb	r1, [r5, #128]	; 0x80
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007268:	e5d52081 	ldrb	r2, [r5, #129]	; 0x81
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
4000726c:	e5c6364e 	strb	r3, [r6, #1614]	; 0x64e
                        {
                            if (usbSpeed == CY_U3P_SUPER_SPEED)
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007270:	e5c6e649 	strb	lr, [r6, #1609]	; 0x649
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
40007274:	e5c6c64a 	strb	ip, [r6, #1610]	; 0x64a
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007278:	e5c6064b 	strb	r0, [r6, #1611]	; 0x64b
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
4000727c:	e5c6164c 	strb	r1, [r6, #1612]	; 0x64c
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007280:	e5c6264d 	strb	r2, [r6, #1613]	; 0x64d
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007284:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007288:	eafffe7e 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
4000728c:	e3520086 	cmp	r2, #134	; 0x86
40007290:	0affffdd 	beq	4000720c <UVCAppEP0Thread_Entry+0x688>
40007294:	e3520087 	cmp	r2, #135	; 0x87
40007298:	1affffa3 	bne	4000712c <UVCAppEP0Thread_Entry+0x5a8>
4000729c:	eaffff63 	b	40007030 <UVCAppEP0Thread_Entry+0x4ac>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
400072a0:	e3a00000 	mov	r0, #0
400072a4:	ebfffbd1 	bl	400061f0 <CTControlHandle>
400072a8:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072ac:	eafffe6b 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
400072b0:	e3a00004 	mov	r0, #4
400072b4:	e59f12e8 	ldr	r1, [pc, #744]	; 400075a4 <UVCAppEP0Thread_Entry+0xa20>
400072b8:	eb002f01 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400072bc:	e59f12e4 	ldr	r1, [pc, #740]	; 400075a8 <UVCAppEP0Thread_Entry+0xa24>
400072c0:	e3a00004 	mov	r0, #4
400072c4:	eb002efe 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400072c8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400072cc:	eb0005bc 	bl	400089c4 <_tx_thread_sleep>
400072d0:	eafffff9 	b	400072bc <UVCAppEP0Thread_Entry+0x738>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
400072d4:	e3530085 	cmp	r3, #133	; 0x85
400072d8:	0affff95 	beq	40007134 <UVCAppEP0Thread_Entry+0x5b0>
400072dc:	e3530086 	cmp	r3, #134	; 0x86
400072e0:	1afffeda 	bne	40006e50 <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400072e4:	e3a00001 	mov	r0, #1
400072e8:	eaffffc8 	b	40007210 <UVCAppEP0Thread_Entry+0x68c>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
400072ec:	e3a00006 	mov	r0, #6
400072f0:	ebfff7ce 	bl	40005230 <ControlHandle>
400072f4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400072f8:	eafffe58 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400072fc:	e3520c0d 	cmp	r2, #3328	; 0xd00
40007300:	0a000007 	beq	40007324 <UVCAppEP0Thread_Entry+0x7a0>
40007304:	e3520c0e 	cmp	r2, #3584	; 0xe00
40007308:	0a000009 	beq	40007334 <UVCAppEP0Thread_Entry+0x7b0>
4000730c:	e3520b03 	cmp	r2, #3072	; 0xc00
40007310:	1afffe49 	bne	40006c3c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
40007314:	e3a0000b 	mov	r0, #11
40007318:	ebfff7c4 	bl	40005230 <ControlHandle>
4000731c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007320:	eafffe4e 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
40007324:	e3a00009 	mov	r0, #9
40007328:	ebfff7c0 	bl	40005230 <ControlHandle>
4000732c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007330:	eafffe4a 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
40007334:	e3a0000e 	mov	r0, #14
40007338:	ebfff7bc 	bl	40005230 <ControlHandle>
4000733c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007340:	eafffe46 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007344:	e3520b01 	cmp	r2, #1024	; 0x400
40007348:	0afffe44 	beq	40006c60 <UVCAppEP0Thread_Entry+0xdc>
4000734c:	e3520c05 	cmp	r2, #1280	; 0x500
40007350:	1afffe39 	bne	40006c3c <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
40007354:	e3a00004 	mov	r0, #4
40007358:	ebfff7b4 	bl	40005230 <ControlHandle>
4000735c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007360:	eafffe3e 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
40007364:	e3a00002 	mov	r0, #2
40007368:	ebfff7b0 	bl	40005230 <ControlHandle>
4000736c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007370:	eafffe3a 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
40007374:	e3a00005 	mov	r0, #5
40007378:	ebfff7ac 	bl	40005230 <ControlHandle>
4000737c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007380:	eafffe36 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40007384:	e3520085 	cmp	r2, #133	; 0x85
40007388:	0a00004e 	beq	400074c8 <UVCAppEP0Thread_Entry+0x944>
4000738c:	e3520086 	cmp	r2, #134	; 0x86
40007390:	1afffe37 	bne	40006c74 <UVCAppEP0Thread_Entry+0xf0>
40007394:	eaffffd2 	b	400072e4 <UVCAppEP0Thread_Entry+0x760>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007398:	e3530c06 	cmp	r3, #1536	; 0x600
4000739c:	0a000045 	beq	400074b8 <UVCAppEP0Thread_Entry+0x934>
400073a0:	8a000009 	bhi	400073cc <UVCAppEP0Thread_Entry+0x848>
400073a4:	e3530c05 	cmp	r3, #1280	; 0x500
400073a8:	1afffe27 	bne	40006c4c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
400073ac:	e3a00014 	mov	r0, #20
400073b0:	ebfff79e 	bl	40005230 <ControlHandle>
400073b4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073b8:	eafffe28 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
400073bc:	e3a00006 	mov	r0, #6
400073c0:	ebfffb8a 	bl	400061f0 <CTControlHandle>
400073c4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073c8:	eafffe24 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400073cc:	e3530c07 	cmp	r3, #1792	; 0x700
400073d0:	0a000034 	beq	400074a8 <UVCAppEP0Thread_Entry+0x924>
400073d4:	e3530b02 	cmp	r3, #2048	; 0x800
400073d8:	1afffe1b 	bne	40006c4c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
400073dc:	e3a00017 	mov	r0, #23
400073e0:	ebfff792 	bl	40005230 <ControlHandle>
400073e4:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400073e8:	eafffe1c 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400073ec:	e3520c0b 	cmp	r2, #2816	; 0xb00
400073f0:	0a00000f 	beq	40007434 <UVCAppEP0Thread_Entry+0x8b0>
400073f4:	e3520b03 	cmp	r2, #3072	; 0xc00
400073f8:	0a000009 	beq	40007424 <UVCAppEP0Thread_Entry+0x8a0>
400073fc:	e3520c0a 	cmp	r2, #2560	; 0xa00
40007400:	1afffe0d 	bne	40006c3c <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
40007404:	e3a00008 	mov	r0, #8
40007408:	ebfffb78 	bl	400061f0 <CTControlHandle>
4000740c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007410:	eafffe12 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
40007414:	e3a00007 	mov	r0, #7
40007418:	ebfffb74 	bl	400061f0 <CTControlHandle>
4000741c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007420:	eafffe0e 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
40007424:	e3a0000a 	mov	r0, #10
40007428:	ebfffb70 	bl	400061f0 <CTControlHandle>
4000742c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007430:	eafffe0a 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
40007434:	e3a00009 	mov	r0, #9
40007438:	ebfffb6c 	bl	400061f0 <CTControlHandle>
4000743c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007440:	eafffe06 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
40007444:	e3a00024 	mov	r0, #36	; 0x24
40007448:	ebfff778 	bl	40005230 <ControlHandle>
4000744c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007450:	eafffe02 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007454:	e3a00020 	mov	r0, #32
40007458:	e59f1128 	ldr	r1, [pc, #296]	; 40007588 <UVCAppEP0Thread_Entry+0xa04>
4000745c:	e28d2036 	add	r2, sp, #54	; 0x36
40007460:	eb005566 	bl	4001ca00 <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007464:	e3500000 	cmp	r0, #0
40007468:	1afffe05 	bne	40006c84 <UVCAppEP0Thread_Entry+0x100>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
4000746c:	e3a02000 	mov	r2, #0
40007470:	e59f00e4 	ldr	r0, [pc, #228]	; 4000755c <UVCAppEP0Thread_Entry+0x9d8>
40007474:	e3a01001 	mov	r1, #1
40007478:	eb000a49 	bl	40009da4 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
4000747c:	e2502000 	subs	r2, r0, #0
40007480:	0afffdff 	beq	40006c84 <UVCAppEP0Thread_Entry+0x100>
    #endif
                            /* We can start streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
40007484:	e3a00004 	mov	r0, #4
40007488:	e59f111c 	ldr	r1, [pc, #284]	; 400075ac <UVCAppEP0Thread_Entry+0xa28>
4000748c:	eb002e8c 	bl	40012ec4 <CyU3PDebugPrint>
40007490:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007494:	eafffdfb 	b	40006c88 <UVCAppEP0Thread_Entry+0x104>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
40007498:	e3a00012 	mov	r0, #18
4000749c:	ebfff763 	bl	40005230 <ControlHandle>
400074a0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074a4:	eafffded 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
400074a8:	e3a00016 	mov	r0, #22
400074ac:	ebfff75f 	bl	40005230 <ControlHandle>
400074b0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074b4:	eafffde9 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
400074b8:	e3a00015 	mov	r0, #21
400074bc:	ebfff75b 	bl	40005230 <ControlHandle>
400074c0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074c4:	eafffde5 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400074c8:	e3a00002 	mov	r0, #2
400074cc:	e59f10cc 	ldr	r1, [pc, #204]	; 400075a0 <UVCAppEP0Thread_Entry+0xa1c>
400074d0:	eaffff1a 	b	40007140 <UVCAppEP0Thread_Entry+0x5bc>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
400074d4:	e3a00025 	mov	r0, #37	; 0x25
400074d8:	ebfff754 	bl	40005230 <ControlHandle>
400074dc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074e0:	eafffdde 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
400074e4:	e3a0001c 	mov	r0, #28
400074e8:	ebfff750 	bl	40005230 <ControlHandle>
400074ec:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
400074f0:	eafffdda 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x %d\r\n", wValue, bRequest, CamMode);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
400074f4:	e3a0001a 	mov	r0, #26
400074f8:	ebfff74c 	bl	40005230 <ControlHandle>
400074fc:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007500:	eafffdd6 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
40007504:	e3a0001e 	mov	r0, #30
40007508:	ebfff748 	bl	40005230 <ControlHandle>
4000750c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007510:	eafffdd2 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
40007514:	e3a00011 	mov	r0, #17
40007518:	ebfff744 	bl	40005230 <ControlHandle>
4000751c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007520:	eafffdce 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
40007524:	e3a00018 	mov	r0, #24
40007528:	ebfff740 	bl	40005230 <ControlHandle>
4000752c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007530:	eafffdca 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
40007534:	e3a00013 	mov	r0, #19
40007538:	ebfff73c 	bl	40005230 <ControlHandle>
4000753c:	e59d3030 	ldr	r3, [sp, #48]	; 0x30
40007540:	eafffdc6 	b	40006c60 <UVCAppEP0Thread_Entry+0xdc>
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d\r\n", readCount, glCommitCtrl[0]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
40007544:	e59f1064 	ldr	r1, [pc, #100]	; 400075b0 <UVCAppEP0Thread_Entry+0xa2c>
40007548:	e1dd23b6 	ldrh	r2, [sp, #54]	; 0x36
4000754c:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40007550:	e3a00004 	mov	r0, #4
40007554:	eb002e5a 	bl	40012ec4 <CyU3PDebugPrint>
40007558:	eafffdc5 	b	40006c74 <UVCAppEP0Thread_Entry+0xf0>
4000755c:	40030f90 	.word	0x40030f90
40007560:	40030000 	.word	0x40030000
40007564:	4003310c 	.word	0x4003310c
40007568:	40032fc0 	.word	0x40032fc0
4000756c:	40032ff0 	.word	0x40032ff0
40007570:	400330d0 	.word	0x400330d0
40007574:	400115d4 	.word	0x400115d4
40007578:	40033030 	.word	0x40033030
4000757c:	40032ec0 	.word	0x40032ec0
40007580:	40032ff2 	.word	0x40032ff2
40007584:	40011558 	.word	0x40011558
40007588:	4003100c 	.word	0x4003100c
4000758c:	40011628 	.word	0x40011628
40007590:	40030648 	.word	0x40030648
40007594:	40030654 	.word	0x40030654
40007598:	40030610 	.word	0x40030610
4000759c:	4003062c 	.word	0x4003062c
400075a0:	40030fe8 	.word	0x40030fe8
400075a4:	40011678 	.word	0x40011678
400075a8:	40011294 	.word	0x40011294
400075ac:	40011600 	.word	0x40011600
400075b0:	40011650 	.word	0x40011650

400075b4 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400075b4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400075b8:	e59f42ac 	ldr	r4, [pc, #684]	; 4000786c <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400075bc:	e59f22ac 	ldr	r2, [pc, #684]	; 40007870 <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
400075c0:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
400075c4:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400075c8:	e592001c 	ldr	r0, [r2, #28]
400075cc:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400075d0:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
400075d4:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
400075d8:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400075dc:	eb000a88 	bl	4000a004 <_txe_mutex_get>
    if(Data1&0x80){
400075e0:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
400075e4:	12066001 	andne	r6, r6, #1
400075e8:	11e06006 	mvnne	r6, r6
400075ec:	1206603b 	andne	r6, r6, #59	; 0x3b
400075f0:	11e06006 	mvnne	r6, r6
400075f4:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
400075f8:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400075fc:	e3a08000 	mov	r8, #0
40007600:	e1a0200a 	mov	r2, sl
40007604:	e1a03007 	mov	r3, r7
40007608:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
4000760c:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007610:	e59f0258 	ldr	r0, [pc, #600]	; 40007870 <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007614:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
40007618:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
4000761c:	e88d0140 	stm	sp, {r6, r8}
40007620:	ebffefa4 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
40007624:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
40007628:	e1a01009 	mov	r1, r9
4000762c:	e1a03007 	mov	r3, r7
40007630:	e59f0238 	ldr	r0, [pc, #568]	; 40007870 <CamDefSet+0x2bc>
40007634:	e88d0220 	stm	sp, {r5, r9}
40007638:	ebffef9e 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
4000763c:	e1a02006 	mov	r2, r6
40007640:	e1a03005 	mov	r3, r5
40007644:	e59f1228 	ldr	r1, [pc, #552]	; 40007874 <CamDefSet+0x2c0>
40007648:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
4000764c:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
40007650:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
40007654:	eb002e1a 	bl	40012ec4 <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007658:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
4000765c:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
40007660:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007664:	e3a01002 	mov	r1, #2
40007668:	e59f0200 	ldr	r0, [pc, #512]	; 40007870 <CamDefSet+0x2bc>
4000766c:	e58db000 	str	fp, [sp]
40007670:	e58d8004 	str	r8, [sp, #4]
40007674:	ebffef8f 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007678:	e1a0200b 	mov	r2, fp
4000767c:	e1a03005 	mov	r3, r5
40007680:	e59f11ec 	ldr	r1, [pc, #492]	; 40007874 <CamDefSet+0x2c0>
40007684:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
40007688:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000768c:	eb002e0c 	bl	40012ec4 <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007690:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007694:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007698:	e247b080 	sub	fp, r7, #128	; 0x80
4000769c:	e20b10ff 	and	r1, fp, #255	; 0xff
400076a0:	e58d1014 	str	r1, [sp, #20]
400076a4:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076a8:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076ac:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400076b0:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076b4:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400076b8:	e3a01005 	mov	r1, #5
400076bc:	e3a020df 	mov	r2, #223	; 0xdf
400076c0:	e59f01a8 	ldr	r0, [pc, #424]	; 40007870 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400076c4:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
400076c8:	e58dc000 	str	ip, [sp]
400076cc:	e58d8004 	str	r8, [sp, #4]
400076d0:	ebffef78 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076d4:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400076d8:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076dc:	e20ac0ff 	and	ip, sl, #255	; 0xff
400076e0:	e1a03006 	mov	r3, r6
400076e4:	e3a01005 	mov	r1, #5
400076e8:	e3a020dc 	mov	r2, #220	; 0xdc
400076ec:	e59f017c 	ldr	r0, [pc, #380]	; 40007870 <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400076f0:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
400076f4:	e58dc000 	str	ip, [sp]
400076f8:	e58d9004 	str	r9, [sp, #4]
400076fc:	ebffef6d 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007700:	e59d001c 	ldr	r0, [sp, #28]
40007704:	e3a0e002 	mov	lr, #2
40007708:	e200c0ff 	and	ip, r0, #255	; 0xff
4000770c:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007710:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007714:	e3a01005 	mov	r1, #5
40007718:	e3a020de 	mov	r2, #222	; 0xde
4000771c:	e59f014c 	ldr	r0, [pc, #332]	; 40007870 <CamDefSet+0x2bc>
40007720:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007724:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007728:	e58dc000 	str	ip, [sp]
4000772c:	ebffef61 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007730:	e59da020 	ldr	sl, [sp, #32]
40007734:	e1a03006 	mov	r3, r6
40007738:	e20ac0ff 	and	ip, sl, #255	; 0xff
4000773c:	e58dc000 	str	ip, [sp]
40007740:	e3a01005 	mov	r1, #5
40007744:	e3a0c003 	mov	ip, #3
40007748:	e3a020e0 	mov	r2, #224	; 0xe0
4000774c:	e59f011c 	ldr	r0, [pc, #284]	; 40007870 <CamDefSet+0x2bc>
40007750:	e58dc004 	str	ip, [sp, #4]
40007754:	ebffef57 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007758:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000775c:	e3a0a004 	mov	sl, #4
40007760:	e200c0ff 	and	ip, r0, #255	; 0xff
40007764:	e1a03006 	mov	r3, r6
40007768:	e3a01005 	mov	r1, #5
4000776c:	e3a020dd 	mov	r2, #221	; 0xdd
40007770:	e59f00f8 	ldr	r0, [pc, #248]	; 40007870 <CamDefSet+0x2bc>
40007774:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007778:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
4000777c:	e58da004 	str	sl, [sp, #4]
40007780:	ebffef4c 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007784:	e3a0e005 	mov	lr, #5
40007788:	e1a0100e 	mov	r1, lr
4000778c:	e1a03006 	mov	r3, r6
40007790:	e3a020e1 	mov	r2, #225	; 0xe1
40007794:	e20760ff 	and	r6, r7, #255	; 0xff
40007798:	e59f00d0 	ldr	r0, [pc, #208]	; 40007870 <CamDefSet+0x2bc>
4000779c:	e88d4040 	stm	sp, {r6, lr}
400077a0:	ebffef44 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
400077a4:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
400077a8:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400077ac:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
400077b0:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
400077b4:	e59dc020 	ldr	ip, [sp, #32]
400077b8:	e1a0200b 	mov	r2, fp
400077bc:	e59d3018 	ldr	r3, [sp, #24]
400077c0:	e59f10b0 	ldr	r1, [pc, #176]	; 40007878 <CamDefSet+0x2c4>
400077c4:	e1a0000a 	mov	r0, sl
400077c8:	e88d5040 	stm	sp, {r6, ip, lr}
400077cc:	e58d700c 	str	r7, [sp, #12]
400077d0:	eb002dbb 	bl	40012ec4 <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
400077d4:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
400077d8:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
400077dc:	e1a03007 	mov	r3, r7
400077e0:	e3a01006 	mov	r1, #6
400077e4:	e3a02085 	mov	r2, #133	; 0x85
400077e8:	e59f0080 	ldr	r0, [pc, #128]	; 40007870 <CamDefSet+0x2bc>
400077ec:	e88d0140 	stm	sp, {r6, r8}
400077f0:	ebffef30 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
400077f4:	e1a03007 	mov	r3, r7
400077f8:	e3a01006 	mov	r1, #6
400077fc:	e3a02086 	mov	r2, #134	; 0x86
40007800:	e59f0068 	ldr	r0, [pc, #104]	; 40007870 <CamDefSet+0x2bc>
40007804:	e88d0240 	stm	sp, {r6, r9}
40007808:	ebffef2a 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
4000780c:	e1a02006 	mov	r2, r6
40007810:	e1a03005 	mov	r3, r5
40007814:	e59f1058 	ldr	r1, [pc, #88]	; 40007874 <CamDefSet+0x2c0>
40007818:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
4000781c:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007820:	eb002da7 	bl	40012ec4 <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
40007824:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
40007828:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
4000782c:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
40007830:	e3a01007 	mov	r1, #7
40007834:	e59f0034 	ldr	r0, [pc, #52]	; 40007870 <CamDefSet+0x2bc>
40007838:	e88d0140 	stm	sp, {r6, r8}
4000783c:	ebffef1d 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007840:	e1a03005 	mov	r3, r5
40007844:	e1a0000a 	mov	r0, sl
40007848:	e59f1024 	ldr	r1, [pc, #36]	; 40007874 <CamDefSet+0x2c0>
4000784c:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
40007850:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007854:	eb002d9a 	bl	40012ec4 <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007858:	e59f3010 	ldr	r3, [pc, #16]	; 40007870 <CamDefSet+0x2bc>
4000785c:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
40007860:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007864:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007868:	ea000a1a 	b	4000a0d8 <_txe_mutex_put>
4000786c:	40030000 	.word	0x40030000
40007870:	40032ec4 	.word	0x40032ec4
40007874:	400116ac 	.word	0x400116ac
40007878:	400116cc 	.word	0x400116cc

4000787c <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
4000787c:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007880:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007884:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007888:	e59f1018 	ldr	r1, [pc, #24]	; 400078a8 <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
4000788c:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007890:	ebfff00f 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007894:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007898:	15d43001 	ldrbne	r3, [r4, #1]
4000789c:	13833002 	orrne	r3, r3, #2
400078a0:	15c43001 	strbne	r3, [r4, #1]
400078a4:	e8bd8038 	pop	{r3, r4, r5, pc}
400078a8:	40030480 	.word	0x40030480

400078ac <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
400078ac:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400078b0:	e59f1010 	ldr	r1, [pc, #16]	; 400078c8 <CyFxAppErrorHandler+0x1c>
400078b4:	e3a00004 	mov	r0, #4
400078b8:	eb002d81 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400078bc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400078c0:	eb00043f 	bl	400089c4 <_tx_thread_sleep>
400078c4:	eafffff9 	b	400078b0 <CyFxAppErrorHandler+0x4>
400078c8:	40011294 	.word	0x40011294

400078cc <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
400078cc:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
400078d0:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
400078d4:	eb006ceb 	bl	40022c88 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
400078d8:	e2504000 	subs	r4, r0, #0
400078dc:	0a000004 	beq	400078f4 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
400078e0:	e3a00004 	mov	r0, #4
400078e4:	e59f1aa4 	ldr	r1, [pc, #2724]	; 40008390 <UVCAppThread_Entry+0xac4>
400078e8:	eb002d75 	bl	40012ec4 <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
400078ec:	e1a00004 	mov	r0, r4
400078f0:	ebffffed 	bl	400078ac <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
400078f4:	e59fca98 	ldr	ip, [pc, #2712]	; 40008394 <UVCAppThread_Entry+0xac8>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
400078f8:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
400078fc:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007900:	e28d0050 	add	r0, sp, #80	; 0x50
40007904:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007908:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
4000790c:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007910:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007914:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
40007918:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
4000791c:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007920:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007924:	eb006d50 	bl	40022e6c <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007928:	e3500000 	cmp	r0, #0
4000792c:	0a000000 	beq	40007934 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007930:	ebffffdd 	bl	400078ac <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007934:	e3e00000 	mvn	r0, #0
40007938:	eb006dd2 	bl	40023088 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
4000793c:	e3500000 	cmp	r0, #0
40007940:	0a000000 	beq	40007948 <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007944:	ebffffd8 	bl	400078ac <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
40007948:	e3a00003 	mov	r0, #3
4000794c:	e3a01004 	mov	r1, #4
40007950:	eb002cd3 	bl	40012ca4 <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007954:	e3500000 	cmp	r0, #0
40007958:	0a000000 	beq	40007960 <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
4000795c:	ebffffd2 	bl	400078ac <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007960:	e3a00000 	mov	r0, #0
40007964:	eb002d52 	bl	40012eb4 <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007968:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000796c:	eb000414 	bl	400089c4 <_tx_thread_sleep>
40007970:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007974:	eb000412 	bl	400089c4 <_tx_thread_sleep>
40007978:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000797c:	eb000410 	bl	400089c4 <_tx_thread_sleep>
40007980:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007984:	eb00040e 	bl	400089c4 <_tx_thread_sleep>
40007988:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000798c:	eb00040c 	bl	400089c4 <_tx_thread_sleep>
40007990:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007994:	eb00040a 	bl	400089c4 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007998:	eb006e48 	bl	400232c0 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
4000799c:	e2502000 	subs	r2, r0, #0
400079a0:	1a000102 	bne	40007db0 <UVCAppThread_Entry+0x4e4>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
400079a4:	e59f59ec 	ldr	r5, [pc, #2540]	; 40008398 <UVCAppThread_Entry+0xacc>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
400079a8:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
400079ac:	e1a01002 	mov	r1, r2
400079b0:	e28d008c 	add	r0, sp, #140	; 0x8c
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
400079b4:	e58d508c 	str	r5, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
400079b8:	e58d2090 	str	r2, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
400079bc:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
400079c0:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
400079c4:	eb006f36 	bl	400236a4 <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
400079c8:	e2501000 	subs	r1, r0, #0
400079cc:	1a000100 	bne	40007dd4 <UVCAppThread_Entry+0x508>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
400079d0:	e59f69c4 	ldr	r6, [pc, #2500]	; 4000839c <UVCAppThread_Entry+0xad0>
400079d4:	e3a02028 	mov	r2, #40	; 0x28
400079d8:	e1a00006 	mov	r0, r6
400079dc:	eb000850 	bl	40009b24 <_txe_event_flags_create>
    if (apiRetStatus != 0)
400079e0:	e2502000 	subs	r2, r0, #0
400079e4:	1a000103 	bne	40007df8 <UVCAppThread_Entry+0x52c>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
400079e8:	e3a08002 	mov	r8, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
400079ec:	e1a01002 	mov	r1, r2
400079f0:	e28d009c 	add	r0, sp, #156	; 0x9c

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
400079f4:	e2887001 	add	r7, r8, #1

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
400079f8:	e586203c 	str	r2, [r6, #60]	; 0x3c
    clearFeatureRqtReceived = CyFalse;
400079fc:	e5862040 	str	r2, [r6, #64]	; 0x40

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007a00:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007a04:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007a08:	e5cd809c 	strb	r8, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007a0c:	e5cd809d 	strb	r8, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007a10:	e5cd70a5 	strb	r7, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007a14:	eb006b31 	bl	400226e0 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007a18:	e2502000 	subs	r2, r0, #0
40007a1c:	1a00017b 	bne	40008010 <UVCAppThread_Entry+0x744>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007a20:	e3a00016 	mov	r0, #22
40007a24:	e3a01001 	mov	r1, #1
40007a28:	eb002c15 	bl	40012a84 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a2c:	e2502000 	subs	r2, r0, #0
40007a30:	1a00016d 	bne	40007fec <UVCAppThread_Entry+0x720>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007a34:	e3a00014 	mov	r0, #20
40007a38:	e3a01001 	mov	r1, #1
40007a3c:	eb002c10 	bl	40012a84 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a40:	e2502000 	subs	r2, r0, #0
40007a44:	1a00015f 	bne	40007fc8 <UVCAppThread_Entry+0x6fc>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007a48:	e3a00018 	mov	r0, #24
40007a4c:	e3a01001 	mov	r1, #1
40007a50:	eb002c0b 	bl	40012a84 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007a54:	e2502000 	subs	r2, r0, #0
40007a58:	1a000151 	bne	40007fa4 <UVCAppThread_Entry+0x6d8>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007a5c:	e3a04001 	mov	r4, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007a60:	e3a00016 	mov	r0, #22
40007a64:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007a68:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a6c:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007a70:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007a74:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007a78:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007a7c:	eb006bcf 	bl	400229c0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a80:	e2502000 	subs	r2, r0, #0
40007a84:	1a00011b 	bne	40007ef8 <UVCAppThread_Entry+0x62c>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007a88:	e3a00014 	mov	r0, #20
40007a8c:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007a90:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007a94:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007a98:	e58d4068 	str	r4, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007a9c:	e58d406c 	str	r4, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007aa0:	e58d4070 	str	r4, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007aa4:	eb006bc5 	bl	400229c0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007aa8:	e2502000 	subs	r2, r0, #0
40007aac:	1a000108 	bne	40007ed4 <UVCAppThread_Entry+0x608>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007ab0:	e3a00018 	mov	r0, #24
40007ab4:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007ab8:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007abc:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007ac0:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007ac4:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007ac8:	e58d4074 	str	r4, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007acc:	eb006bbb 	bl	400229c0 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ad0:	e2502000 	subs	r2, r0, #0
40007ad4:	1a0000f5 	bne	40007eb0 <UVCAppThread_Entry+0x5e4>
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007ad8:	e3a0a000 	mov	sl, #0
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007adc:	e3a07002 	mov	r7, #2
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007ae0:	e3a08003 	mov	r8, #3
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007ae4:	e3a00001 	mov	r0, #1
40007ae8:	e28d107c 	add	r1, sp, #124	; 0x7c
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007aec:	e1cd77bc 	strh	r7, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007af0:	e5cd8088 	strb	r8, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
40007af4:	e58da084 	str	sl, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007af8:	e58da080 	str	sl, [sp, #128]	; 0x80

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007afc:	eb004c48 	bl	4001ac24 <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b00:	e2502000 	subs	r2, r0, #0
40007b04:	1a00017a 	bne	400080f4 <UVCAppThread_Entry+0x828>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007b08:	e59f0890 	ldr	r0, [pc, #2192]	; 400083a0 <UVCAppThread_Entry+0xad4>
40007b0c:	eb004ec2 	bl	4001b61c <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007b10:	ebfff267 	bl	400044b4 <SensorReset>
    SensorInit ();
40007b14:	ebfff296 	bl	40004574 <SensorInit>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007b18:	eb005935 	bl	4001dff4 <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007b1c:	e2504000 	subs	r4, r0, #0
40007b20:	1a000169 	bne	400080cc <UVCAppThread_Entry+0x800>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007b24:	e1a01004 	mov	r1, r4
40007b28:	e59f0874 	ldr	r0, [pc, #2164]	; 400083a4 <UVCAppThread_Entry+0xad8>
40007b2c:	eb0063e7 	bl	40020ad0 <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007b30:	e59f0870 	ldr	r0, [pc, #2160]	; 400083a8 <UVCAppThread_Entry+0xadc>
40007b34:	eb0063d0 	bl	40020a7c <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007b38:	e59f286c 	ldr	r2, [pc, #2156]	; 400083ac <UVCAppThread_Entry+0xae0>
40007b3c:	e1a01004 	mov	r1, r4
40007b40:	e3a00001 	mov	r0, #1
40007b44:	eb00570a 	bl	4001d774 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007b48:	e1a01004 	mov	r1, r4
40007b4c:	e59f285c 	ldr	r2, [pc, #2140]	; 400083b0 <UVCAppThread_Entry+0xae4>
40007b50:	e1a00004 	mov	r0, r4
40007b54:	eb005706 	bl	4001d774 <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007b58:	e1a01004 	mov	r1, r4
40007b5c:	e59f2850 	ldr	r2, [pc, #2128]	; 400083b4 <UVCAppThread_Entry+0xae8>
40007b60:	e3a00002 	mov	r0, #2
40007b64:	eb005702 	bl	4001d774 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007b68:	e1a01004 	mov	r1, r4
40007b6c:	e59f2844 	ldr	r2, [pc, #2116]	; 400083b8 <UVCAppThread_Entry+0xaec>
40007b70:	e3a00007 	mov	r0, #7
40007b74:	eb0056fe 	bl	4001d774 <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007b78:	e59f283c 	ldr	r2, [pc, #2108]	; 400083bc <UVCAppThread_Entry+0xaf0>
40007b7c:	e1a01004 	mov	r1, r4
40007b80:	e3a00004 	mov	r0, #4
40007b84:	eb0056fa 	bl	4001d774 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007b88:	e1a01004 	mov	r1, r4
40007b8c:	e59f282c 	ldr	r2, [pc, #2092]	; 400083c0 <UVCAppThread_Entry+0xaf4>
40007b90:	e1a00008 	mov	r0, r8
40007b94:	eb0056f6 	bl	4001d774 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007b98:	e1a01004 	mov	r1, r4
40007b9c:	e59f2820 	ldr	r2, [pc, #2080]	; 400083c4 <UVCAppThread_Entry+0xaf8>
40007ba0:	e3a00006 	mov	r0, #6
40007ba4:	eb0056f2 	bl	4001d774 <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007ba8:	e1a01004 	mov	r1, r4
40007bac:	e59f2814 	ldr	r2, [pc, #2068]	; 400083c8 <UVCAppThread_Entry+0xafc>
40007bb0:	e3a00005 	mov	r0, #5
40007bb4:	eb0056ee 	bl	4001d774 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007bb8:	e3a01001 	mov	r1, #1
40007bbc:	e59f2808 	ldr	r2, [pc, #2056]	; 400083cc <UVCAppThread_Entry+0xb00>
40007bc0:	e3a00005 	mov	r0, #5
40007bc4:	eb0056ea 	bl	4001d774 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007bc8:	e3a01002 	mov	r1, #2
40007bcc:	e59f27fc 	ldr	r2, [pc, #2044]	; 400083d0 <UVCAppThread_Entry+0xb04>
40007bd0:	e3a00005 	mov	r0, #5
40007bd4:	eb0056e6 	bl	4001d774 <CyU3PUsbSetDesc>
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007bd8:	e3a05001 	mov	r5, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007bdc:	e3a02040 	mov	r2, #64	; 0x40
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007be0:	e3a00082 	mov	r0, #130	; 0x82
40007be4:	e28d10a8 	add	r1, sp, #168	; 0xa8
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007be8:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007bec:	e5cd80ac 	strb	r8, [sp, #172]	; 0xac
    endPointConfig.pcktSize = 64;
40007bf0:	e1cd2bb0 	strh	r2, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007bf4:	e5cd40b3 	strb	r4, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007bf8:	e1cd4abe 	strh	r4, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007bfc:	e5cd50b2 	strb	r5, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007c00:	eb005042 	bl	4001bd10 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c04:	e2503000 	subs	r3, r0, #0
40007c08:	1a000125 	bne	400080a4 <UVCAppThread_Entry+0x7d8>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007c0c:	e59fc7c0 	ldr	ip, [pc, #1984]	; 400083d4 <UVCAppThread_Entry+0xb08>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007c10:	e59fe7c0 	ldr	lr, [pc, #1984]	; 400083d8 <UVCAppThread_Entry+0xb0c>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007c14:	e3a08b01 	mov	r8, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007c18:	e3a0a010 	mov	sl, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007c1c:	e59f07b8 	ldr	r0, [pc, #1976]	; 400083dc <UVCAppThread_Entry+0xb10>
40007c20:	e3a01004 	mov	r1, #4
40007c24:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007c28:	e1cd83b4 	strh	r8, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007c2c:	e1cd53b6 	strh	r5, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007c30:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007c34:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007c38:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007c3c:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007c40:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007c44:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007c48:	e5cd4044 	strb	r4, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007c4c:	e58da048 	str	sl, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007c50:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007c54:	eb0036b0 	bl	4001571c <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c58:	e2508000 	subs	r8, r0, #0
40007c5c:	1a000106 	bne	4000807c <UVCAppThread_Entry+0x7b0>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007c60:	e3a00b01 	mov	r0, #1024	; 0x400
40007c64:	ebfff03f 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007c68:	e59f1770 	ldr	r1, [pc, #1904]	; 400083e0 <UVCAppThread_Entry+0xb14>
    if (glInterStaBuffer == 0)
40007c6c:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007c70:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007c74:	0a000130 	beq	4000813c <UVCAppThread_Entry+0x870>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007c78:	e3a03004 	mov	r3, #4
40007c7c:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007c80:	e59f375c 	ldr	r3, [pc, #1884]	; 400083e4 <UVCAppThread_Entry+0xb18>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007c84:	e3a0e901 	mov	lr, #16384	; 0x4000
40007c88:	e1cde0bc 	strh	lr, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007c8c:	e59fe754 	ldr	lr, [pc, #1876]	; 400083e8 <UVCAppThread_Entry+0xb1c>
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007c90:	e1cd31ba 	strh	r3, [sp, #26]
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007c94:	e59f3750 	ldr	r3, [pc, #1872]	; 400083ec <UVCAppThread_Entry+0xb20>

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007c98:	e3a0cc01 	mov	ip, #256	; 0x100
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007c9c:	e28d200c 	add	r2, sp, #12

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007ca0:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007ca4:	e1cde1b4 	strh	lr, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007ca8:	e3a0c00c 	mov	ip, #12
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007cac:	e3a0e004 	mov	lr, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007cb0:	e5cd402a 	strb	r4, [sp, #42]	; 0x2a
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007cb4:	e59f0734 	ldr	r0, [pc, #1844]	; 400083f0 <UVCAppThread_Entry+0xb24>
40007cb8:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007cbc:	e3a04018 	mov	r4, #24
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007cc0:	e1cd71b0 	strh	r7, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007cc4:	e1cd82b2 	strh	r8, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007cc8:	e1cdc2b4 	strh	ip, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007ccc:	e1cde2b6 	strh	lr, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007cd0:	e1cd82b8 	strh	r8, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007cd4:	e58d402c 	str	r4, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007cd8:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007cdc:	eb003fae 	bl	40017b9c <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ce0:	e2502000 	subs	r2, r0, #0
40007ce4:	1a00010b 	bne	40008118 <UVCAppThread_Entry+0x84c>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007ce8:	e1a00005 	mov	r0, r5
40007cec:	e1a01005 	mov	r1, r5
40007cf0:	eb004f02 	bl	4001b900 <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cf4:	e2502000 	subs	r2, r0, #0
40007cf8:	1a000063 	bne	40007e8c <UVCAppThread_Entry+0x5c0>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007cfc:	e3a00064 	mov	r0, #100	; 0x64
40007d00:	eb002de0 	bl	40013488 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007d04:	eb0053af 	bl	4001cbc8 <CyU3PUsbGetSpeed>

    endPointConfig.enable   = 1;
40007d08:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007d0c:	e5cd70ac 	strb	r7, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007d10:	e28d10a8 	add	r1, sp, #168	; 0xa8

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007d14:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007d18:	e5c60048 	strb	r0, [r6, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007d1c:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007d20:	03a07b01 	moveq	r7, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007d24:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
40007d28:	15cd50b2 	strbne	r5, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007d2c:	e3a00083 	mov	r0, #131	; 0x83
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007d30:	e3a05000 	mov	r5, #0

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007d34:	01cd7bb0 	strheq	r7, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007d38:	05cda0b2 	strbeq	sl, [sp, #178]	; 0xb2
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007d3c:	e1cd5abe 	strh	r5, [sp, #174]	; 0xae
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007d40:	eb004ff2 	bl	4001bd10 <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007d44:	e2502000 	subs	r2, r0, #0
40007d48:	1a000046 	bne	40007e68 <UVCAppThread_Entry+0x59c>
40007d4c:	e59f86a0 	ldr	r8, [pc, #1696]	; 400083f4 <UVCAppThread_Entry+0xb28>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007d50:	e59f5644 	ldr	r5, [pc, #1604]	; 4000839c <UVCAppThread_Entry+0xad0>
40007d54:	e1a04002 	mov	r4, r2
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007d58:	e1a07008 	mov	r7, r8
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007d5c:	e59f0638 	ldr	r0, [pc, #1592]	; 4000839c <UVCAppThread_Entry+0xad0>
40007d60:	e3a01001 	mov	r1, #1
40007d64:	e3a02002 	mov	r2, #2
40007d68:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007d6c:	e58d4000 	str	r4, [sp]
40007d70:	eb0007db 	bl	40009ce4 <_txe_event_flags_get>
40007d74:	e3500000 	cmp	r0, #0
40007d78:	1a000027 	bne	40007e1c <UVCAppThread_Entry+0x550>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007d7c:	e595a044 	ldr	sl, [r5, #68]	; 0x44
40007d80:	e35a0000 	cmp	sl, #0
40007d84:	0a000003 	beq	40007d98 <UVCAppThread_Entry+0x4cc>
40007d88:	e1d522be 	ldrh	r2, [r5, #46]	; 0x2e
40007d8c:	e1d513b0 	ldrh	r1, [r5, #48]	; 0x30
40007d90:	e1520001 	cmp	r2, r1
40007d94:	0a000060 	beq	40007f1c <UVCAppThread_Entry+0x650>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007d98:	e3a01040 	mov	r1, #64	; 0x40
40007d9c:	e3a02000 	mov	r2, #0
40007da0:	e59f05f4 	ldr	r0, [pc, #1524]	; 4000839c <UVCAppThread_Entry+0xad0>
40007da4:	eb0007fe 	bl	40009da4 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007da8:	eb000ab6 	bl	4000a888 <_txe_thread_relinquish>
    }
40007dac:	eaffffea 	b	40007d5c <UVCAppThread_Entry+0x490>
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007db0:	e3a00004 	mov	r0, #4
40007db4:	e59f163c 	ldr	r1, [pc, #1596]	; 400083f8 <UVCAppThread_Entry+0xb2c>
40007db8:	eb002c41 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007dbc:	e59f1638 	ldr	r1, [pc, #1592]	; 400083fc <UVCAppThread_Entry+0xb30>
40007dc0:	e3a00004 	mov	r0, #4
40007dc4:	eb002c3e 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007dc8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007dcc:	eb0002fc 	bl	400089c4 <_tx_thread_sleep>
40007dd0:	eafffff9 	b	40007dbc <UVCAppThread_Entry+0x4f0>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007dd4:	e3a00004 	mov	r0, #4
40007dd8:	e59f1620 	ldr	r1, [pc, #1568]	; 40008400 <UVCAppThread_Entry+0xb34>
40007ddc:	eb002c38 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007de0:	e59f1614 	ldr	r1, [pc, #1556]	; 400083fc <UVCAppThread_Entry+0xb30>
40007de4:	e3a00004 	mov	r0, #4
40007de8:	eb002c35 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007dec:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007df0:	eb0002f3 	bl	400089c4 <_tx_thread_sleep>
40007df4:	eafffff9 	b	40007de0 <UVCAppThread_Entry+0x514>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40007df8:	e3a00004 	mov	r0, #4
40007dfc:	e59f1600 	ldr	r1, [pc, #1536]	; 40008404 <UVCAppThread_Entry+0xb38>
40007e00:	eb002c2f 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e04:	e59f15f0 	ldr	r1, [pc, #1520]	; 400083fc <UVCAppThread_Entry+0xb30>
40007e08:	e3a00004 	mov	r0, #4
40007e0c:	eb002c2c 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e10:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e14:	eb0002ea 	bl	400089c4 <_tx_thread_sleep>
40007e18:	eafffff9 	b	40007e04 <UVCAppThread_Entry+0x538>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40007e1c:	e59f0578 	ldr	r0, [pc, #1400]	; 4000839c <UVCAppThread_Entry+0xad0>
40007e20:	e3a01002 	mov	r1, #2
40007e24:	e3a02003 	mov	r2, #3
40007e28:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007e2c:	e58d4000 	str	r4, [sp]
40007e30:	eb0007ab 	bl	40009ce4 <_txe_event_flags_get>
40007e34:	e3500000 	cmp	r0, #0
40007e38:	1a0000da 	bne	400081a8 <UVCAppThread_Entry+0x8dc>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007e3c:	e5952040 	ldr	r2, [r5, #64]	; 0x40
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40007e40:	e5854044 	str	r4, [r5, #68]	; 0x44
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007e44:	e3520000 	cmp	r2, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40007e48:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
40007e4c:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40007e50:	e1c543b0 	strh	r4, [r5, #48]	; 0x30
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
40007e54:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
                pbc=0;
40007e58:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
40007e5c:	0a0000bf 	beq	40008160 <UVCAppThread_Entry+0x894>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
40007e60:	e5864040 	str	r4, [r6, #64]	; 0x40
40007e64:	eaffffcb 	b	40007d98 <UVCAppThread_Entry+0x4cc>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40007e68:	e3a00004 	mov	r0, #4
40007e6c:	e59f1594 	ldr	r1, [pc, #1428]	; 40008408 <UVCAppThread_Entry+0xb3c>
40007e70:	eb002c13 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e74:	e59f1580 	ldr	r1, [pc, #1408]	; 400083fc <UVCAppThread_Entry+0xb30>
40007e78:	e3a00004 	mov	r0, #4
40007e7c:	eb002c10 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007e80:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007e84:	eb0002ce 	bl	400089c4 <_tx_thread_sleep>
40007e88:	eafffff9 	b	40007e74 <UVCAppThread_Entry+0x5a8>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
40007e8c:	e3a00004 	mov	r0, #4
40007e90:	e59f1574 	ldr	r1, [pc, #1396]	; 4000840c <UVCAppThread_Entry+0xb40>
40007e94:	eb002c0a 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007e98:	e59f155c 	ldr	r1, [pc, #1372]	; 400083fc <UVCAppThread_Entry+0xb30>
40007e9c:	e3a00004 	mov	r0, #4
40007ea0:	eb002c07 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007ea4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ea8:	eb0002c5 	bl	400089c4 <_tx_thread_sleep>
40007eac:	eafffff9 	b	40007e98 <UVCAppThread_Entry+0x5cc>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
40007eb0:	e3a00004 	mov	r0, #4
40007eb4:	e59f1554 	ldr	r1, [pc, #1364]	; 40008410 <UVCAppThread_Entry+0xb44>
40007eb8:	eb002c01 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ebc:	e59f1538 	ldr	r1, [pc, #1336]	; 400083fc <UVCAppThread_Entry+0xb30>
40007ec0:	e3a00004 	mov	r0, #4
40007ec4:	eb002bfe 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007ec8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ecc:	eb0002bc 	bl	400089c4 <_tx_thread_sleep>
40007ed0:	eafffff9 	b	40007ebc <UVCAppThread_Entry+0x5f0>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40007ed4:	e3a00004 	mov	r0, #4
40007ed8:	e59f1534 	ldr	r1, [pc, #1332]	; 40008414 <UVCAppThread_Entry+0xb48>
40007edc:	eb002bf8 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ee0:	e59f1514 	ldr	r1, [pc, #1300]	; 400083fc <UVCAppThread_Entry+0xb30>
40007ee4:	e3a00004 	mov	r0, #4
40007ee8:	eb002bf5 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007eec:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007ef0:	eb0002b3 	bl	400089c4 <_tx_thread_sleep>
40007ef4:	eafffff9 	b	40007ee0 <UVCAppThread_Entry+0x614>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
40007ef8:	e3a00004 	mov	r0, #4
40007efc:	e59f1514 	ldr	r1, [pc, #1300]	; 40008418 <UVCAppThread_Entry+0xb4c>
40007f00:	eb002bef 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f04:	e59f14f0 	ldr	r1, [pc, #1264]	; 400083fc <UVCAppThread_Entry+0xb30>
40007f08:	e3a00004 	mov	r0, #4
40007f0c:	eb002bec 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f10:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f14:	eb0002aa 	bl	400089c4 <_tx_thread_sleep>
40007f18:	eafffff9 	b	40007f04 <UVCAppThread_Entry+0x638>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
40007f1c:	e1c542be 	strh	r4, [r5, #46]	; 0x2e
                consCount = 0;
40007f20:	e1c543b0 	strh	r4, [r5, #48]	; 0x30
                hitFV     = CyFalse;
40007f24:	e5854044 	str	r4, [r5, #68]	; 0x44
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007f28:	e5d80481 	ldrb	r0, [r8, #1153]	; 0x481
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
40007f2c:	e1c542b8 	strh	r4, [r5, #40]	; 0x28
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
40007f30:	e220e001 	eor	lr, r0, #1
40007f34:	e5c8e481 	strb	lr, [r8, #1153]	; 0x481
                if(stiflag){
40007f38:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007f3c:	e5d7c481 	ldrb	ip, [r7, #1153]	; 0x481
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
40007f40:	e3530000 	cmp	r3, #0
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007f44:	138cc020 	orrne	ip, ip, #32
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40007f48:	020cc0df 	andeq	ip, ip, #223	; 0xdf
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
40007f4c:	15c7c481 	strbne	ip, [r7, #1153]	; 0x481
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
40007f50:	05c7c481 	strbeq	ip, [r7, #1153]	; 0x481
                //}
                /* Toggle UVC header FRAME ID bit */
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
                if(stiflag){
                	glUVCHeader[1] |= (1<<5);    //set still image flag
                	stiflag = CyFalse;
40007f54:	1585409c 	strne	r4, [r5, #156]	; 0x9c
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
40007f58:	e1c542ba 	strh	r4, [r5, #42]	; 0x2a
            	pbc=0;
40007f5c:	e1c542bc 	strh	r4, [r5, #44]	; 0x2c
                	stiflag = CyFalse;
                }else{
                	glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40007f60:	e59f0488 	ldr	r0, [pc, #1160]	; 400083f0 <UVCAppThread_Entry+0xb24>
40007f64:	eb0040dd 	bl	400182e0 <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007f68:	e2502000 	subs	r2, r0, #0
40007f6c:	1a000039 	bne	40008058 <UVCAppThread_Entry+0x78c>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40007f70:	e1a01002 	mov	r1, r2
40007f74:	e59f0474 	ldr	r0, [pc, #1140]	; 400083f0 <UVCAppThread_Entry+0xb24>
40007f78:	eb0041c5 	bl	40018694 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40007f7c:	e2502000 	subs	r2, r0, #0
40007f80:	1a00002b 	bne	40008034 <UVCAppThread_Entry+0x768>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
40007f84:	e59f045c 	ldr	r0, [pc, #1116]	; 400083e8 <UVCAppThread_Entry+0xb1c>
40007f88:	e1a01002 	mov	r1, r2
40007f8c:	e3a0a002 	mov	sl, #2
40007f90:	e1a02000 	mov	r2, r0
40007f94:	e1a03001 	mov	r3, r1
40007f98:	e58da000 	str	sl, [sp]
40007f9c:	eb004df7 	bl	4001b780 <CyU3PGpifSMSwitch>
40007fa0:	eaffff7c 	b	40007d98 <UVCAppThread_Entry+0x4cc>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
40007fa4:	e3a00004 	mov	r0, #4
40007fa8:	e59f146c 	ldr	r1, [pc, #1132]	; 4000841c <UVCAppThread_Entry+0xb50>
40007fac:	eb002bc4 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fb0:	e59f1444 	ldr	r1, [pc, #1092]	; 400083fc <UVCAppThread_Entry+0xb30>
40007fb4:	e3a00004 	mov	r0, #4
40007fb8:	eb002bc1 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fbc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fc0:	eb00027f 	bl	400089c4 <_tx_thread_sleep>
40007fc4:	eafffff9 	b	40007fb0 <UVCAppThread_Entry+0x6e4>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
40007fc8:	e3a00004 	mov	r0, #4
40007fcc:	e59f144c 	ldr	r1, [pc, #1100]	; 40008420 <UVCAppThread_Entry+0xb54>
40007fd0:	eb002bbb 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fd4:	e59f1420 	ldr	r1, [pc, #1056]	; 400083fc <UVCAppThread_Entry+0xb30>
40007fd8:	e3a00004 	mov	r0, #4
40007fdc:	eb002bb8 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fe0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fe4:	eb000276 	bl	400089c4 <_tx_thread_sleep>
40007fe8:	eafffff9 	b	40007fd4 <UVCAppThread_Entry+0x708>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40007fec:	e3a00004 	mov	r0, #4
40007ff0:	e59f142c 	ldr	r1, [pc, #1068]	; 40008424 <UVCAppThread_Entry+0xb58>
40007ff4:	eb002bb2 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007ff8:	e59f13fc 	ldr	r1, [pc, #1020]	; 400083fc <UVCAppThread_Entry+0xb30>
40007ffc:	e3a00004 	mov	r0, #4
40008000:	eb002baf 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008004:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008008:	eb00026d 	bl	400089c4 <_tx_thread_sleep>
4000800c:	eafffff9 	b	40007ff8 <UVCAppThread_Entry+0x72c>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
40008010:	e3a00004 	mov	r0, #4
40008014:	e59f140c 	ldr	r1, [pc, #1036]	; 40008428 <UVCAppThread_Entry+0xb5c>
40008018:	eb002ba9 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000801c:	e59f13d8 	ldr	r1, [pc, #984]	; 400083fc <UVCAppThread_Entry+0xb30>
40008020:	e3a00004 	mov	r0, #4
40008024:	eb002ba6 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008028:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000802c:	eb000264 	bl	400089c4 <_tx_thread_sleep>
40008030:	eafffff9 	b	4000801c <UVCAppThread_Entry+0x750>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
40008034:	e3a00004 	mov	r0, #4
40008038:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000842c <UVCAppThread_Entry+0xb60>
4000803c:	eb002ba0 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008040:	e59f13b4 	ldr	r1, [pc, #948]	; 400083fc <UVCAppThread_Entry+0xb30>
40008044:	e3a00004 	mov	r0, #4
40008048:	eb002b9d 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000804c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008050:	eb00025b 	bl	400089c4 <_tx_thread_sleep>
40008054:	eafffff9 	b	40008040 <UVCAppThread_Entry+0x774>
                }
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40008058:	e3a00004 	mov	r0, #4
4000805c:	e59f13cc 	ldr	r1, [pc, #972]	; 40008430 <UVCAppThread_Entry+0xb64>
40008060:	eb002b97 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008064:	e59f1390 	ldr	r1, [pc, #912]	; 400083fc <UVCAppThread_Entry+0xb30>
40008068:	e3a00004 	mov	r0, #4
4000806c:	eb002b94 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008070:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008074:	eb000252 	bl	400089c4 <_tx_thread_sleep>
40008078:	eafffff9 	b	40008064 <UVCAppThread_Entry+0x798>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
4000807c:	e3a00004 	mov	r0, #4
40008080:	e59f13ac 	ldr	r1, [pc, #940]	; 40008434 <UVCAppThread_Entry+0xb68>
40008084:	e1a02008 	mov	r2, r8
40008088:	eb002b8d 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000808c:	e59f1368 	ldr	r1, [pc, #872]	; 400083fc <UVCAppThread_Entry+0xb30>
40008090:	e3a00004 	mov	r0, #4
40008094:	eb002b8a 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008098:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000809c:	eb000248 	bl	400089c4 <_tx_thread_sleep>
400080a0:	eafffff9 	b	4000808c <UVCAppThread_Entry+0x7c0>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
400080a4:	e3a00004 	mov	r0, #4
400080a8:	e59f1358 	ldr	r1, [pc, #856]	; 40008408 <UVCAppThread_Entry+0xb3c>
400080ac:	e1a02003 	mov	r2, r3
400080b0:	eb002b83 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080b4:	e59f1340 	ldr	r1, [pc, #832]	; 400083fc <UVCAppThread_Entry+0xb30>
400080b8:	e3a00004 	mov	r0, #4
400080bc:	eb002b80 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080c0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080c4:	eb00023e 	bl	400089c4 <_tx_thread_sleep>
400080c8:	eafffff9 	b	400080b4 <UVCAppThread_Entry+0x7e8>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
400080cc:	e3a00004 	mov	r0, #4
400080d0:	e59f1360 	ldr	r1, [pc, #864]	; 40008438 <UVCAppThread_Entry+0xb6c>
400080d4:	e1a02004 	mov	r2, r4
400080d8:	eb002b79 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080dc:	e59f1318 	ldr	r1, [pc, #792]	; 400083fc <UVCAppThread_Entry+0xb30>
400080e0:	e3a00004 	mov	r0, #4
400080e4:	eb002b76 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080e8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080ec:	eb000234 	bl	400089c4 <_tx_thread_sleep>
400080f0:	eafffff9 	b	400080dc <UVCAppThread_Entry+0x810>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
400080f4:	e3a00004 	mov	r0, #4
400080f8:	e59f133c 	ldr	r1, [pc, #828]	; 4000843c <UVCAppThread_Entry+0xb70>
400080fc:	eb002b70 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008100:	e59f12f4 	ldr	r1, [pc, #756]	; 400083fc <UVCAppThread_Entry+0xb30>
40008104:	e3a00004 	mov	r0, #4
40008108:	eb002b6d 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000810c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008110:	eb00022b 	bl	400089c4 <_tx_thread_sleep>
40008114:	eafffff9 	b	40008100 <UVCAppThread_Entry+0x834>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
40008118:	e3a00004 	mov	r0, #4
4000811c:	e59f131c 	ldr	r1, [pc, #796]	; 40008440 <UVCAppThread_Entry+0xb74>
40008120:	eb002b67 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008124:	e59f12d0 	ldr	r1, [pc, #720]	; 400083fc <UVCAppThread_Entry+0xb30>
40008128:	e3a00004 	mov	r0, #4
4000812c:	eb002b64 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008130:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008134:	eb000222 	bl	400089c4 <_tx_thread_sleep>
40008138:	eafffff9 	b	40008124 <UVCAppThread_Entry+0x858>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
4000813c:	e2800004 	add	r0, r0, #4
40008140:	e59f12fc 	ldr	r1, [pc, #764]	; 40008444 <UVCAppThread_Entry+0xb78>
40008144:	eb002b5e 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008148:	e59f12ac 	ldr	r1, [pc, #684]	; 400083fc <UVCAppThread_Entry+0xb30>
4000814c:	e3a00004 	mov	r0, #4
40008150:	eb002b5b 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008154:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008158:	eb000219 	bl	400089c4 <_tx_thread_sleep>
4000815c:	eafffff9 	b	40008148 <UVCAppThread_Entry+0x87c>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008160:	e59f0288 	ldr	r0, [pc, #648]	; 400083f0 <UVCAppThread_Entry+0xb24>
40008164:	eb00405d 	bl	400182e0 <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
40008168:	e3500000 	cmp	r0, #0
4000816c:	1a000002 	bne	4000817c <UVCAppThread_Entry+0x8b0>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40008170:	e3a00083 	mov	r0, #131	; 0x83
40008174:	eb0051ee 	bl	4001c934 <CyU3PUsbFlushEp>
40008178:	eaffff38 	b	40007e60 <UVCAppThread_Entry+0x594>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000817c:	e59f1278 	ldr	r1, [pc, #632]	; 400083fc <UVCAppThread_Entry+0xb30>
40008180:	e3a00004 	mov	r0, #4
40008184:	eb002b4e 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008188:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000818c:	eb00020c 	bl	400089c4 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008190:	e59f1264 	ldr	r1, [pc, #612]	; 400083fc <UVCAppThread_Entry+0xb30>
40008194:	e3a00004 	mov	r0, #4
40008198:	eb002b49 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000819c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081a0:	eb000207 	bl	400089c4 <_tx_thread_sleep>
400081a4:	eafffff4 	b	4000817c <UVCAppThread_Entry+0x8b0>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
400081a8:	e3e0c000 	mvn	ip, #0
400081ac:	e3a01001 	mov	r1, #1
400081b0:	e3a02002 	mov	r2, #2
400081b4:	e28d30b4 	add	r3, sp, #180	; 0xb4
400081b8:	e59f01dc 	ldr	r0, [pc, #476]	; 4000839c <UVCAppThread_Entry+0xad0>
400081bc:	e58dc000 	str	ip, [sp]
400081c0:	eb0006c7 	bl	40009ce4 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
400081c4:	e1a02004 	mov	r2, r4
400081c8:	e59f0220 	ldr	r0, [pc, #544]	; 400083f0 <UVCAppThread_Entry+0xb24>
400081cc:	e1a01004 	mov	r1, r4
400081d0:	eb00412f 	bl	40018694 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
400081d4:	e2502000 	subs	r2, r0, #0
400081d8:	1a00002f 	bne	4000829c <UVCAppThread_Entry+0x9d0>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
400081dc:	e5953038 	ldr	r3, [r5, #56]	; 0x38
400081e0:	e3530000 	cmp	r3, #0
400081e4:	1a000058 	bne	4000834c <UVCAppThread_Entry+0xa80>
                {
                    //for start up of the AF Lens
                   	SensorSetIrisControl(0x21, 0x30, 1, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris manual (AF Lens)
400081e8:	e3a01030 	mov	r1, #48	; 0x30
400081ec:	e3a02001 	mov	r2, #1
400081f0:	e2833082 	add	r3, r3, #130	; 0x82
400081f4:	e3a00021 	mov	r0, #33	; 0x21
400081f8:	ebfff148 	bl	40004720 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400081fc:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008200:	eb0001ef 	bl	400089c4 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 2, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris manual (non AF Lens)
40008204:	e3a01030 	mov	r1, #48	; 0x30
40008208:	e3a02002 	mov	r2, #2
4000820c:	e3a03052 	mov	r3, #82	; 0x52
40008210:	e3a00025 	mov	r0, #37	; 0x25
40008214:	ebfff141 	bl	40004720 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40008218:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000821c:	eb0001e8 	bl	400089c4 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x23, 0x30, 0xa, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
40008220:	e3a01030 	mov	r1, #48	; 0x30
40008224:	e3a0200a 	mov	r2, #10
40008228:	e3a03082 	mov	r3, #130	; 0x82
4000822c:	e3a00023 	mov	r0, #35	; 0x23
40008230:	ebfff13a 	bl	40004720 <SensorSetIrisControl>
                   	CyU3PThreadSleep(300);
40008234:	e3a00f4b 	mov	r0, #300	; 0x12c
40008238:	eb0001e1 	bl	400089c4 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
4000823c:	e3a01030 	mov	r1, #48	; 0x30
40008240:	e1a02004 	mov	r2, r4
40008244:	e3a03082 	mov	r3, #130	; 0x82
40008248:	e3a00021 	mov	r0, #33	; 0x21
4000824c:	ebfff133 	bl	40004720 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40008250:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008254:	eb0001da 	bl	400089c4 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40008258:	e3a03052 	mov	r3, #82	; 0x52
4000825c:	e3a01030 	mov	r1, #48	; 0x30
40008260:	e1a02004 	mov	r2, r4
40008264:	e3a00025 	mov	r0, #37	; 0x25
40008268:	ebfff12c 	bl	40004720 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
4000826c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008270:	eb0001d3 	bl	400089c4 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008274:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
40008278:	e3530003 	cmp	r3, #3
4000827c:	0a00002b 	beq	40008330 <UVCAppThread_Entry+0xa64>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40008280:	e3530002 	cmp	r3, #2
40008284:	0a00000d 	beq	400082c0 <UVCAppThread_Entry+0x9f4>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008288:	e3a01001 	mov	r1, #1
                    CyU3PThreadSleep(200);
4000828c:	e3a000c8 	mov	r0, #200	; 0xc8
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008290:	e5861038 	str	r1, [r6, #56]	; 0x38
                    CyU3PThreadSleep(200);
40008294:	eb0001ca 	bl	400089c4 <_tx_thread_sleep>
40008298:	eafffebe 	b	40007d98 <UVCAppThread_Entry+0x4cc>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
4000829c:	e3a00004 	mov	r0, #4
400082a0:	e59f11a0 	ldr	r1, [pc, #416]	; 40008448 <UVCAppThread_Entry+0xb7c>
400082a4:	eb002b06 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400082a8:	e59f114c 	ldr	r1, [pc, #332]	; 400083fc <UVCAppThread_Entry+0xb30>
400082ac:	e3a00004 	mov	r0, #4
400082b0:	eb002b03 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400082b4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400082b8:	eb0001c1 	bl	400089c4 <_tx_thread_sleep>
400082bc:	eafffff9 	b	400082a8 <UVCAppThread_Entry+0x9dc>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
400082c0:	e59f1184 	ldr	r1, [pc, #388]	; 4000844c <UVCAppThread_Entry+0xb80>
400082c4:	e3a00001 	mov	r0, #1
400082c8:	eb002afd 	bl	40012ec4 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
400082cc:	e59f017c 	ldr	r0, [pc, #380]	; 40008450 <UVCAppThread_Entry+0xb84>
400082d0:	eb004c2f 	bl	4001b394 <CyU3PGpifLoad>
400082d4:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400082d8:	e3520000 	cmp	r2, #0
400082dc:	1a000022 	bne	4000836c <UVCAppThread_Entry+0xaa0>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
400082e0:	e5d63048 	ldrb	r3, [r6, #72]	; 0x48
400082e4:	e3530003 	cmp	r3, #3
400082e8:	0a000001 	beq	400082f4 <UVCAppThread_Entry+0xa28>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
400082ec:	e3530002 	cmp	r3, #2
400082f0:	1affffe4 	bne	40008288 <UVCAppThread_Entry+0x9bc>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400082f4:	e1a00002 	mov	r0, r2
400082f8:	e1a01002 	mov	r1, r2
400082fc:	eb004cca 	bl	4001b62c <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008300:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
40008304:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008308:	0affffde 	beq	40008288 <UVCAppThread_Entry+0x9bc>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
4000830c:	e3a00004 	mov	r0, #4
40008310:	e59f113c 	ldr	r1, [pc, #316]	; 40008454 <UVCAppThread_Entry+0xb88>
40008314:	eb002aea 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008318:	e59f10dc 	ldr	r1, [pc, #220]	; 400083fc <UVCAppThread_Entry+0xb30>
4000831c:	e3a00004 	mov	r0, #4
40008320:	eb002ae7 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008324:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008328:	eb0001a5 	bl	400089c4 <_tx_thread_sleep>
4000832c:	eafffff9 	b	40008318 <UVCAppThread_Entry+0xa4c>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
40008330:	e59f1120 	ldr	r1, [pc, #288]	; 40008458 <UVCAppThread_Entry+0xb8c>
40008334:	e3a00001 	mov	r0, #1
40008338:	eb002ae1 	bl	40012ec4 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
4000833c:	e59f0118 	ldr	r0, [pc, #280]	; 4000845c <UVCAppThread_Entry+0xb90>
40008340:	eb004c13 	bl	4001b394 <CyU3PGpifLoad>
40008344:	e1a02000 	mov	r2, r0
40008348:	eaffffe2 	b	400082d8 <UVCAppThread_Entry+0xa0c>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
4000834c:	e59f0094 	ldr	r0, [pc, #148]	; 400083e8 <UVCAppThread_Entry+0xb1c>
40008350:	e3a0e002 	mov	lr, #2
40008354:	e1a01004 	mov	r1, r4
40008358:	e1a02000 	mov	r2, r0
4000835c:	e1a03004 	mov	r3, r4
40008360:	e58de000 	str	lr, [sp]
40008364:	eb004d05 	bl	4001b780 <CyU3PGpifSMSwitch>
40008368:	eafffe8a 	b	40007d98 <UVCAppThread_Entry+0x4cc>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
4000836c:	e3a00004 	mov	r0, #4
40008370:	e59f10e8 	ldr	r1, [pc, #232]	; 40008460 <UVCAppThread_Entry+0xb94>
40008374:	eb002ad2 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008378:	e59f107c 	ldr	r1, [pc, #124]	; 400083fc <UVCAppThread_Entry+0xb30>
4000837c:	e3a00004 	mov	r0, #4
40008380:	eb002acf 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008384:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008388:	eb00018d 	bl	400089c4 <_tx_thread_sleep>
4000838c:	eafffff9 	b	40008378 <UVCAppThread_Entry+0xaac>
40008390:	40011704 	.word	0x40011704
40008394:	0001c200 	.word	0x0001c200
40008398:	000186a0 	.word	0x000186a0
4000839c:	40030f90 	.word	0x40030f90
400083a0:	40004f9c 	.word	0x40004f9c
400083a4:	40004ca8 	.word	0x40004ca8
400083a8:	40004b38 	.word	0x40004b38
400083ac:	40010cb4 	.word	0x40010cb4
400083b0:	40010cc8 	.word	0x40010cc8
400083b4:	40010cdc 	.word	0x40010cdc
400083b8:	40010dd4 	.word	0x40010dd4
400083bc:	40010cf4 	.word	0x40010cf4
400083c0:	40010ce8 	.word	0x40010ce8
400083c4:	40010dec 	.word	0x40010dec
400083c8:	40010ed8 	.word	0x40010ed8
400083cc:	40010edc 	.word	0x40010edc
400083d0:	40010f14 	.word	0x40010f14
400083d4:	00003f01 	.word	0x00003f01
400083d8:	00000302 	.word	0x00000302
400083dc:	40033030 	.word	0x40033030
400083e0:	400330d0 	.word	0x400330d0
400083e4:	00000303 	.word	0x00000303
400083e8:	00000101 	.word	0x00000101
400083ec:	400049fc 	.word	0x400049fc
400083f0:	40032ee4 	.word	0x40032ee4
400083f4:	40030000 	.word	0x40030000
400083f8:	40011724 	.word	0x40011724
400083fc:	40011294 	.word	0x40011294
40008400:	40011740 	.word	0x40011740
40008404:	4001175c 	.word	0x4001175c
40008408:	4001192c 	.word	0x4001192c
4000840c:	40011a08 	.word	0x40011a08
40008410:	40011894 	.word	0x40011894
40008414:	40011860 	.word	0x40011860
40008418:	4001182c 	.word	0x4001182c
4000841c:	40011800 	.word	0x40011800
40008420:	400117d4 	.word	0x400117d4
40008424:	400117ac 	.word	0x400117ac
40008428:	40011788 	.word	0x40011788
4000842c:	40011a5c 	.word	0x40011a5c
40008430:	40011a30 	.word	0x40011a30
40008434:	40011960 	.word	0x40011960
40008438:	400118fc 	.word	0x400118fc
4000843c:	400118cc 	.word	0x400118cc
40008440:	400119d8 	.word	0x400119d8
40008444:	400119a0 	.word	0x400119a0
40008448:	40011a90 	.word	0x40011a90
4000844c:	40011ad4 	.word	0x40011ad4
40008450:	400110a4 	.word	0x400110a4
40008454:	40011b1c 	.word	0x40011b1c
40008458:	40011ac4 	.word	0x40011ac4
4000845c:	40011088 	.word	0x40011088
40008460:	40011ae4 	.word	0x40011ae4

40008464 <CyFxUVCApplnI2CInit>:

/* I2C initialization. */
//static void
void
CyFxUVCApplnI2CInit (void)
{
40008464:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40008468:	e24dd014 	sub	sp, sp, #20
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
4000846c:	eb006b93 	bl	400232c0 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40008470:	e2502000 	subs	r2, r0, #0
40008474:	1a00000b 	bne	400084a8 <CyFxUVCApplnI2CInit+0x44>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40008478:	e59fc070 	ldr	ip, [pc, #112]	; 400084f0 <CyFxUVCApplnI2CInit+0x8c>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
4000847c:	e3e03000 	mvn	r3, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008480:	e1a0000d 	mov	r0, sp
40008484:	e1a01002 	mov	r1, r2
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40008488:	e58dc000 	str	ip, [sp]
    i2cConfig.isDma      = CyFalse;
4000848c:	e98d000c 	stmib	sp, {r2, r3}
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;
40008490:	e1cd30bc 	strh	r3, [sp, #12]

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008494:	eb006c82 	bl	400236a4 <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40008498:	e3500000 	cmp	r0, #0
4000849c:	1a00000a 	bne	400084cc <CyFxUVCApplnI2CInit+0x68>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
        CyFxAppErrorHandler (status);
    }
}
400084a0:	e28dd014 	add	sp, sp, #20
400084a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
400084a8:	e3a00004 	mov	r0, #4
400084ac:	e59f1040 	ldr	r1, [pc, #64]	; 400084f4 <CyFxUVCApplnI2CInit+0x90>
400084b0:	eb002a83 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084b4:	e59f103c 	ldr	r1, [pc, #60]	; 400084f8 <CyFxUVCApplnI2CInit+0x94>
400084b8:	e3a00004 	mov	r0, #4
400084bc:	eb002a80 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084c0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084c4:	eb00013e 	bl	400089c4 <_tx_thread_sleep>
400084c8:	eafffff9 	b	400084b4 <CyFxUVCApplnI2CInit+0x50>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
400084cc:	e3a00004 	mov	r0, #4
400084d0:	e59f1024 	ldr	r1, [pc, #36]	; 400084fc <CyFxUVCApplnI2CInit+0x98>
400084d4:	eb002a7a 	bl	40012ec4 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400084d8:	e59f1018 	ldr	r1, [pc, #24]	; 400084f8 <CyFxUVCApplnI2CInit+0x94>
400084dc:	e3a00004 	mov	r0, #4
400084e0:	eb002a77 	bl	40012ec4 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400084e4:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400084e8:	eb000135 	bl	400089c4 <_tx_thread_sleep>
400084ec:	eafffff9 	b	400084d8 <CyFxUVCApplnI2CInit+0x74>
400084f0:	000186a0 	.word	0x000186a0
400084f4:	40011724 	.word	0x40011724
400084f8:	40011294 	.word	0x40011294
400084fc:	40011740 	.word	0x40011740

40008500 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008500:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008504:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
40008508:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
4000850c:	ebffec58 	bl	40003674 <CyU3PMemAlloc>
40008510:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008514:	e3a00a01 	mov	r0, #4096	; 0x1000
40008518:	ebffec55 	bl	40003674 <CyU3PMemAlloc>
4000851c:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008520:	e3a00a01 	mov	r0, #4096	; 0x1000
40008524:	ebffec52 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
40008528:	e35a0000 	cmp	sl, #0
4000852c:	135b0000 	cmpne	fp, #0
40008530:	13a09000 	movne	r9, #0
40008534:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
40008538:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
4000853c:	1a000000 	bne	40008544 <CyFxApplicationDefine+0x44>
40008540:	eafffffe 	b	40008540 <CyFxApplicationDefine+0x40>
40008544:	e3500000 	cmp	r0, #0
40008548:	0afffffc 	beq	40008540 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
4000854c:	e28d4028 	add	r4, sp, #40	; 0x28
40008550:	e1a00004 	mov	r0, r4
40008554:	e3a01040 	mov	r1, #64	; 0x40
40008558:	e59f2118 	ldr	r2, [pc, #280]	; 40008678 <CyFxApplicationDefine+0x178>
4000855c:	ebffeb97 	bl	400033c0 <cmdbufCreate>
40008560:	e1a05004 	mov	r5, r4
40008564:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
40008568:	e59f710c 	ldr	r7, [pc, #268]	; 4000867c <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000856c:	e59f810c 	ldr	r8, [pc, #268]	; 40008680 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008570:	e1a0c007 	mov	ip, r7
40008574:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008578:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
4000857c:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008580:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008584:	e59f20f8 	ldr	r2, [pc, #248]	; 40008684 <CyFxApplicationDefine+0x184>
40008588:	e1a00004 	mov	r0, r4
4000858c:	e3a01020 	mov	r1, #32
40008590:	ebffeb8a 	bl	400033c0 <cmdbufCreate>
40008594:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
40008598:	e1a0c008 	mov	ip, r8
4000859c:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
400085a0:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400085a4:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
400085a8:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
400085ac:	e1a00007 	mov	r0, r7
400085b0:	ebffeb9a 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
400085b4:	e1a00008 	mov	r0, r8
400085b8:	ebffeb98 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
400085bc:	e3a050a8 	mov	r5, #168	; 0xa8
400085c0:	e3a0ca01 	mov	ip, #4096	; 0x1000
400085c4:	e59f00bc 	ldr	r0, [pc, #188]	; 40008688 <CyFxApplicationDefine+0x188>
400085c8:	e59f10bc 	ldr	r1, [pc, #188]	; 4000868c <CyFxApplicationDefine+0x18c>
400085cc:	e59f20bc 	ldr	r2, [pc, #188]	; 40008690 <CyFxApplicationDefine+0x190>
400085d0:	e1a03009 	mov	r3, r9
400085d4:	e88d1400 	stm	sp, {sl, ip}
400085d8:	e58d6008 	str	r6, [sp, #8]
400085dc:	e58d600c 	str	r6, [sp, #12]
400085e0:	e58d9010 	str	r9, [sp, #16]
400085e4:	e58d4014 	str	r4, [sp, #20]
400085e8:	e58d5018 	str	r5, [sp, #24]
400085ec:	eb0007c7 	bl	4000a510 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400085f0:	e250c000 	subs	ip, r0, #0
400085f4:	1affffd1 	bne	40008540 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
400085f8:	e1a0300c 	mov	r3, ip
400085fc:	e3a07b02 	mov	r7, #2048	; 0x800
40008600:	e59f008c 	ldr	r0, [pc, #140]	; 40008694 <CyFxApplicationDefine+0x194>
40008604:	e59f108c 	ldr	r1, [pc, #140]	; 40008698 <CyFxApplicationDefine+0x198>
40008608:	e59f208c 	ldr	r2, [pc, #140]	; 4000869c <CyFxApplicationDefine+0x19c>
4000860c:	e58dc010 	str	ip, [sp, #16]
40008610:	e58db000 	str	fp, [sp]
40008614:	e58d7004 	str	r7, [sp, #4]
40008618:	e58d6008 	str	r6, [sp, #8]
4000861c:	e58d600c 	str	r6, [sp, #12]
40008620:	e58d4014 	str	r4, [sp, #20]
40008624:	e58d5018 	str	r5, [sp, #24]
40008628:	eb0007b8 	bl	4000a510 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
4000862c:	e250c000 	subs	ip, r0, #0
40008630:	1affffc2 	bne	40008540 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
40008634:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40008638:	e59f0060 	ldr	r0, [pc, #96]	; 400086a0 <CyFxApplicationDefine+0x1a0>
4000863c:	e59f1060 	ldr	r1, [pc, #96]	; 400086a4 <CyFxApplicationDefine+0x1a4>
40008640:	e59f2060 	ldr	r2, [pc, #96]	; 400086a8 <CyFxApplicationDefine+0x1a8>
40008644:	e1a0300c 	mov	r3, ip
40008648:	e58de000 	str	lr, [sp]
4000864c:	e58d7004 	str	r7, [sp, #4]
40008650:	e58d6008 	str	r6, [sp, #8]
40008654:	e58d600c 	str	r6, [sp, #12]
40008658:	e58dc010 	str	ip, [sp, #16]
4000865c:	e58d4014 	str	r4, [sp, #20]
40008660:	e58d5018 	str	r5, [sp, #24]
40008664:	eb0007a9 	bl	4000a510 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
40008668:	e3500000 	cmp	r0, #0
4000866c:	1affffb3 	bne	40008540 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008670:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008674:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40008678:	400330d4 	.word	0x400330d4
4000867c:	40032ec4 	.word	0x40032ec4
40008680:	40033110 	.word	0x40033110
40008684:	40032ff8 	.word	0x40032ff8
40008688:	40031030 	.word	0x40031030
4000868c:	40011b54 	.word	0x40011b54
40008690:	400078cc 	.word	0x400078cc
40008694:	400310d8 	.word	0x400310d8
40008698:	40011b68 	.word	0x40011b68
4000869c:	40006b84 	.word	0x40006b84
400086a0:	40031180 	.word	0x40031180
400086a4:	40011b80 	.word	0x40011b80
400086a8:	400047bc 	.word	0x400047bc

400086ac <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
400086ac:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
400086b0:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
400086b4:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
400086b8:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
400086bc:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
400086c0:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
400086c4:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
400086c8:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
400086cc:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
400086d0:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
400086d4:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
400086d8:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
400086dc:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
400086e0:	eb00272f 	bl	400123a4 <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
400086e4:	e2504000 	subs	r4, r0, #0
400086e8:	0a000000 	beq	400086f0 <main+0x44>
400086ec:	eafffffe 	b	400086ec <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
400086f0:	e1a01004 	mov	r1, r4
400086f4:	e1a02004 	mov	r2, r4
400086f8:	e1a00005 	mov	r0, r5
400086fc:	eb002702 	bl	4001230c <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
40008700:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
40008704:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
40008708:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
4000870c:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
40008710:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
40008714:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
40008718:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
4000871c:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
40008720:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
40008724:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
40008728:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
4000872c:	eb0028c6 	bl	40012a4c <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008730:	e2504000 	subs	r4, r0, #0
40008734:	1affffec 	bne	400086ec <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
40008738:	eb000002 	bl	40008748 <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
4000873c:	e1a00004 	mov	r0, r4
40008740:	e28dd03c 	add	sp, sp, #60	; 0x3c
40008744:	e8bd8030 	pop	{r4, r5, pc}

40008748 <_tx_initialize_kernel_enter>:
40008748:	e92d4010 	push	{r4, lr}
4000874c:	e59f004c 	ldr	r0, [pc, #76]	; 400087a0 <_tx_initialize_kernel_enter+0x58>
40008750:	e5900000 	ldr	r0, [r0]
40008754:	e59f1048 	ldr	r1, [pc, #72]	; 400087a4 <_tx_initialize_kernel_enter+0x5c>
40008758:	e1500001 	cmp	r0, r1
4000875c:	0a000004 	beq	40008774 <_tx_initialize_kernel_enter+0x2c>
40008760:	e1e00221 	mvn	r0, r1, lsr #4
40008764:	e59f1034 	ldr	r1, [pc, #52]	; 400087a0 <_tx_initialize_kernel_enter+0x58>
40008768:	e5810000 	str	r0, [r1]
4000876c:	eb0009ee 	bl	4000af2c <_tx_initialize_low_level>
40008770:	eb00105f 	bl	4000c8f4 <_tx_initialize_high_level>
40008774:	e59f002c 	ldr	r0, [pc, #44]	; 400087a8 <_tx_initialize_kernel_enter+0x60>
40008778:	e59f1020 	ldr	r1, [pc, #32]	; 400087a0 <_tx_initialize_kernel_enter+0x58>
4000877c:	e5810000 	str	r0, [r1]
40008780:	e59f0024 	ldr	r0, [pc, #36]	; 400087ac <_tx_initialize_kernel_enter+0x64>
40008784:	e5900000 	ldr	r0, [r0]
40008788:	ebffeba5 	bl	40003624 <tx_application_define>
4000878c:	e3a00000 	mov	r0, #0
40008790:	e59f1008 	ldr	r1, [pc, #8]	; 400087a0 <_tx_initialize_kernel_enter+0x58>
40008794:	e5810000 	str	r0, [r1]
40008798:	eb00091f 	bl	4000ac1c <_tx_thread_schedule>
4000879c:	e8bd8010 	pop	{r4, pc}
400087a0:	40030e2c 	.word	0x40030e2c
400087a4:	f0f0f0f1 	.word	0xf0f0f0f1
400087a8:	f0f0f0f0 	.word	0xf0f0f0f0
400087ac:	40030dc4 	.word	0x40030dc4

400087b0 <_tx_thread_identify>:
400087b0:	e10f1000 	mrs	r1, CPSR
400087b4:	e3812080 	orr	r2, r1, #128	; 0x80
400087b8:	e121f002 	msr	CPSR_c, r2
400087bc:	e59f30e0 	ldr	r3, [pc, #224]	; 400088a4 <_tx_thread_identify+0xf4>
400087c0:	e5930000 	ldr	r0, [r3]
400087c4:	e3500000 	cmp	r0, #0
400087c8:	0a000031 	beq	40008894 <_tx_thread_identify+0xe4>
400087cc:	e59f30d4 	ldr	r3, [pc, #212]	; 400088a8 <_tx_thread_identify+0xf8>
400087d0:	e5933000 	ldr	r3, [r3]
400087d4:	e2833001 	add	r3, r3, #1
400087d8:	e59fc0c8 	ldr	ip, [pc, #200]	; 400088a8 <_tx_thread_identify+0xf8>
400087dc:	e58c3000 	str	r3, [ip]
400087e0:	e580300c 	str	r3, [r0, #12]
400087e4:	e59f30c0 	ldr	r3, [pc, #192]	; 400088ac <_tx_thread_identify+0xfc>
400087e8:	e5933000 	ldr	r3, [r3]
400087ec:	e3530000 	cmp	r3, #0
400087f0:	1a000006 	bne	40008810 <_tx_thread_identify+0x60>
400087f4:	e59f30b4 	ldr	r3, [pc, #180]	; 400088b0 <_tx_thread_identify+0x100>
400087f8:	e5933000 	ldr	r3, [r3]
400087fc:	e5803000 	str	r3, [r0]
40008800:	e5903000 	ldr	r3, [r0]
40008804:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008808:	e5803004 	str	r3, [r0, #4]
4000880c:	ea00000d 	b	40008848 <_tx_thread_identify+0x98>
40008810:	e59f3094 	ldr	r3, [pc, #148]	; 400088ac <_tx_thread_identify+0xfc>
40008814:	e5933000 	ldr	r3, [r3]
40008818:	e59fc094 	ldr	ip, [pc, #148]	; 400088b4 <_tx_thread_identify+0x104>
4000881c:	e153000c 	cmp	r3, ip
40008820:	2a000004 	bcs	40008838 <_tx_thread_identify+0x88>
40008824:	e3e03000 	mvn	r3, #0
40008828:	e5803000 	str	r3, [r0]
4000882c:	e3a03000 	mov	r3, #0
40008830:	e5803004 	str	r3, [r0, #4]
40008834:	ea000003 	b	40008848 <_tx_thread_identify+0x98>
40008838:	e59f3074 	ldr	r3, [pc, #116]	; 400088b4 <_tx_thread_identify+0x104>
4000883c:	e5803000 	str	r3, [r0]
40008840:	e3a03000 	mov	r3, #0
40008844:	e5803004 	str	r3, [r0, #4]
40008848:	e3a03067 	mov	r3, #103	; 0x67
4000884c:	e5803008 	str	r3, [r0, #8]
40008850:	e3a03000 	mov	r3, #0
40008854:	e5803010 	str	r3, [r0, #16]
40008858:	e5803014 	str	r3, [r0, #20]
4000885c:	e5803018 	str	r3, [r0, #24]
40008860:	e580301c 	str	r3, [r0, #28]
40008864:	e2800020 	add	r0, r0, #32
40008868:	e59f3048 	ldr	r3, [pc, #72]	; 400088b8 <_tx_thread_identify+0x108>
4000886c:	e5933000 	ldr	r3, [r3]
40008870:	e1500003 	cmp	r0, r3
40008874:	3a000001 	bcc	40008880 <_tx_thread_identify+0xd0>
40008878:	e59f303c 	ldr	r3, [pc, #60]	; 400088bc <_tx_thread_identify+0x10c>
4000887c:	e5930000 	ldr	r0, [r3]
40008880:	e59f301c 	ldr	r3, [pc, #28]	; 400088a4 <_tx_thread_identify+0xf4>
40008884:	e5830000 	str	r0, [r3]
40008888:	e59f3030 	ldr	r3, [pc, #48]	; 400088c0 <_tx_thread_identify+0x110>
4000888c:	e5933000 	ldr	r3, [r3]
40008890:	e5830020 	str	r0, [r3, #32]
40008894:	e121f001 	msr	CPSR_c, r1
40008898:	e59f0010 	ldr	r0, [pc, #16]	; 400088b0 <_tx_thread_identify+0x100>
4000889c:	e5900000 	ldr	r0, [r0]
400088a0:	e12fff1e 	bx	lr
400088a4:	40030ea0 	.word	0x40030ea0
400088a8:	40030ea4 	.word	0x40030ea4
400088ac:	40030e2c 	.word	0x40030e2c
400088b0:	40030e34 	.word	0x40030e34
400088b4:	f0f0f0f0 	.word	0xf0f0f0f0
400088b8:	40030e9c 	.word	0x40030e9c
400088bc:	40030e98 	.word	0x40030e98
400088c0:	40030e8c 	.word	0x40030e8c

400088c4 <_tx_thread_initialize>:
400088c4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400088c8:	e3a00000 	mov	r0, #0
400088cc:	e59f10c0 	ldr	r1, [pc, #192]	; 40008994 <_tx_thread_initialize+0xd0>
400088d0:	e5810000 	str	r0, [r1]
400088d4:	e59f10bc 	ldr	r1, [pc, #188]	; 40008998 <_tx_thread_initialize+0xd4>
400088d8:	e5810000 	str	r0, [r1]
400088dc:	e59f00b8 	ldr	r0, [pc, #184]	; 4000899c <_tx_thread_initialize+0xd8>
400088e0:	e3a01000 	mov	r1, #0
400088e4:	e5801000 	str	r1, [r0]
400088e8:	e59f00b0 	ldr	r0, [pc, #176]	; 400089a0 <_tx_thread_initialize+0xdc>
400088ec:	e5801000 	str	r1, [r0]
400088f0:	e3a00020 	mov	r0, #32
400088f4:	e59f10a8 	ldr	r1, [pc, #168]	; 400089a4 <_tx_thread_initialize+0xe0>
400088f8:	e5810000 	str	r0, [r1]
400088fc:	e3a00000 	mov	r0, #0
40008900:	e59f10a0 	ldr	r1, [pc, #160]	; 400089a8 <_tx_thread_initialize+0xe4>
40008904:	e5c10000 	strb	r0, [r1]
40008908:	e2816001 	add	r6, r1, #1
4000890c:	e3a04001 	mov	r4, #1
40008910:	ea000009 	b	4000893c <_tx_thread_initialize+0x78>
40008914:	e1a07004 	mov	r7, r4
40008918:	e3a05000 	mov	r5, #0
4000891c:	ea000002 	b	4000892c <_tx_thread_initialize+0x68>
40008920:	e1a070a7 	lsr	r7, r7, #1
40008924:	e2850001 	add	r0, r5, #1
40008928:	e20050ff 	and	r5, r0, #255	; 0xff
4000892c:	e3170001 	tst	r7, #1
40008930:	0afffffa 	beq	40008920 <_tx_thread_initialize+0x5c>
40008934:	e4c65001 	strb	r5, [r6], #1
40008938:	e2844001 	add	r4, r4, #1
4000893c:	e3540c01 	cmp	r4, #256	; 0x100
40008940:	3afffff3 	bcc	40008914 <_tx_thread_initialize+0x50>
40008944:	e3a01080 	mov	r1, #128	; 0x80
40008948:	e59f005c 	ldr	r0, [pc, #92]	; 400089ac <_tx_thread_initialize+0xe8>
4000894c:	eb002af2 	bl	4001351c <__aeabi_memclr4>
40008950:	e3a00000 	mov	r0, #0
40008954:	e59f1054 	ldr	r1, [pc, #84]	; 400089b0 <_tx_thread_initialize+0xec>
40008958:	e5810000 	str	r0, [r1]
4000895c:	e59f1050 	ldr	r1, [pc, #80]	; 400089b4 <_tx_thread_initialize+0xf0>
40008960:	e5810000 	str	r0, [r1]
40008964:	e59f104c 	ldr	r1, [pc, #76]	; 400089b8 <_tx_thread_initialize+0xf4>
40008968:	e5810000 	str	r0, [r1]
4000896c:	e59f1048 	ldr	r1, [pc, #72]	; 400089bc <_tx_thread_initialize+0xf8>
40008970:	e5810000 	str	r0, [r1]
40008974:	e59f0044 	ldr	r0, [pc, #68]	; 400089c0 <_tx_thread_initialize+0xfc>
40008978:	e5900000 	ldr	r0, [r0]
4000897c:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008980:	e3800c01 	orr	r0, r0, #256	; 0x100
40008984:	e3800002 	orr	r0, r0, #2
40008988:	e59f1030 	ldr	r1, [pc, #48]	; 400089c0 <_tx_thread_initialize+0xfc>
4000898c:	e5810000 	str	r0, [r1]
40008990:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008994:	40030e34 	.word	0x40030e34
40008998:	40030e38 	.word	0x40030e38
4000899c:	40030e44 	.word	0x40030e44
400089a0:	40030e48 	.word	0x40030e48
400089a4:	40030e4c 	.word	0x40030e4c
400089a8:	40032774 	.word	0x40032774
400089ac:	40032874 	.word	0x40032874
400089b0:	40030e3c 	.word	0x40030e3c
400089b4:	40030e40 	.word	0x40030e40
400089b8:	40030e50 	.word	0x40030e50
400089bc:	40030e58 	.word	0x40030e58
400089c0:	40030e54 	.word	0x40030e54

400089c4 <_tx_thread_sleep>:
400089c4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400089c8:	e1a04000 	mov	r4, r0
400089cc:	e59f018c 	ldr	r0, [pc, #396]	; 40008b60 <_tx_thread_sleep+0x19c>
400089d0:	e5900000 	ldr	r0, [r0]
400089d4:	e58d0000 	str	r0, [sp]
400089d8:	e59d0000 	ldr	r0, [sp]
400089dc:	e3500000 	cmp	r0, #0
400089e0:	0a000007 	beq	40008a04 <_tx_thread_sleep+0x40>
400089e4:	e59f1178 	ldr	r1, [pc, #376]	; 40008b64 <_tx_thread_sleep+0x1a0>
400089e8:	e59d0000 	ldr	r0, [sp]
400089ec:	e1500001 	cmp	r0, r1
400089f0:	0a000003 	beq	40008a04 <_tx_thread_sleep+0x40>
400089f4:	e59f016c 	ldr	r0, [pc, #364]	; 40008b68 <_tx_thread_sleep+0x1a4>
400089f8:	e5900000 	ldr	r0, [r0]
400089fc:	e3500000 	cmp	r0, #0
40008a00:	0a000001 	beq	40008a0c <_tx_thread_sleep+0x48>
40008a04:	e3a00013 	mov	r0, #19
40008a08:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008a0c:	e3540000 	cmp	r4, #0
40008a10:	1a000001 	bne	40008a1c <_tx_thread_sleep+0x58>
40008a14:	e3a00000 	mov	r0, #0
40008a18:	eafffffa 	b	40008a08 <_tx_thread_sleep+0x44>
40008a1c:	e10f5000 	mrs	r5, CPSR
40008a20:	e3856080 	orr	r6, r5, #128	; 0x80
40008a24:	e121f006 	msr	CPSR_c, r6
40008a28:	e59f113c 	ldr	r1, [pc, #316]	; 40008b6c <_tx_thread_sleep+0x1a8>
40008a2c:	e5910000 	ldr	r0, [r1]
40008a30:	e3500000 	cmp	r0, #0
40008a34:	0a000033 	beq	40008b08 <_tx_thread_sleep+0x144>
40008a38:	e59f1130 	ldr	r1, [pc, #304]	; 40008b70 <_tx_thread_sleep+0x1ac>
40008a3c:	e5911000 	ldr	r1, [r1]
40008a40:	e2811001 	add	r1, r1, #1
40008a44:	e59f2124 	ldr	r2, [pc, #292]	; 40008b70 <_tx_thread_sleep+0x1ac>
40008a48:	e5821000 	str	r1, [r2]
40008a4c:	e580100c 	str	r1, [r0, #12]
40008a50:	e59f1110 	ldr	r1, [pc, #272]	; 40008b68 <_tx_thread_sleep+0x1a4>
40008a54:	e5911000 	ldr	r1, [r1]
40008a58:	e3510000 	cmp	r1, #0
40008a5c:	1a000006 	bne	40008a7c <_tx_thread_sleep+0xb8>
40008a60:	e59f10f8 	ldr	r1, [pc, #248]	; 40008b60 <_tx_thread_sleep+0x19c>
40008a64:	e5911000 	ldr	r1, [r1]
40008a68:	e5801000 	str	r1, [r0]
40008a6c:	e5901000 	ldr	r1, [r0]
40008a70:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008a74:	e5801004 	str	r1, [r0, #4]
40008a78:	ea00000d 	b	40008ab4 <_tx_thread_sleep+0xf0>
40008a7c:	e59f10e4 	ldr	r1, [pc, #228]	; 40008b68 <_tx_thread_sleep+0x1a4>
40008a80:	e5911000 	ldr	r1, [r1]
40008a84:	e59f20e8 	ldr	r2, [pc, #232]	; 40008b74 <_tx_thread_sleep+0x1b0>
40008a88:	e1510002 	cmp	r1, r2
40008a8c:	2a000004 	bcs	40008aa4 <_tx_thread_sleep+0xe0>
40008a90:	e3e01000 	mvn	r1, #0
40008a94:	e5801000 	str	r1, [r0]
40008a98:	e3a01000 	mov	r1, #0
40008a9c:	e5801004 	str	r1, [r0, #4]
40008aa0:	ea000003 	b	40008ab4 <_tx_thread_sleep+0xf0>
40008aa4:	e59f10c8 	ldr	r1, [pc, #200]	; 40008b74 <_tx_thread_sleep+0x1b0>
40008aa8:	e5801000 	str	r1, [r0]
40008aac:	e3a01000 	mov	r1, #0
40008ab0:	e5801004 	str	r1, [r0, #4]
40008ab4:	e3a01070 	mov	r1, #112	; 0x70
40008ab8:	e5801008 	str	r1, [r0, #8]
40008abc:	e5804010 	str	r4, [r0, #16]
40008ac0:	e59d1000 	ldr	r1, [sp]
40008ac4:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008ac8:	e5801014 	str	r1, [r0, #20]
40008acc:	e580d018 	str	sp, [r0, #24]
40008ad0:	e3a01000 	mov	r1, #0
40008ad4:	e580101c 	str	r1, [r0, #28]
40008ad8:	e2800020 	add	r0, r0, #32
40008adc:	e59f1094 	ldr	r1, [pc, #148]	; 40008b78 <_tx_thread_sleep+0x1b4>
40008ae0:	e5911000 	ldr	r1, [r1]
40008ae4:	e1500001 	cmp	r0, r1
40008ae8:	3a000001 	bcc	40008af4 <_tx_thread_sleep+0x130>
40008aec:	e59f1088 	ldr	r1, [pc, #136]	; 40008b7c <_tx_thread_sleep+0x1b8>
40008af0:	e5910000 	ldr	r0, [r1]
40008af4:	e59f1070 	ldr	r1, [pc, #112]	; 40008b6c <_tx_thread_sleep+0x1a8>
40008af8:	e5810000 	str	r0, [r1]
40008afc:	e59f107c 	ldr	r1, [pc, #124]	; 40008b80 <_tx_thread_sleep+0x1bc>
40008b00:	e5911000 	ldr	r1, [r1]
40008b04:	e5810020 	str	r0, [r1, #32]
40008b08:	e3a00004 	mov	r0, #4
40008b0c:	e59d1000 	ldr	r1, [sp]
40008b10:	e5810030 	str	r0, [r1, #48]	; 0x30
40008b14:	e3a00001 	mov	r0, #1
40008b18:	e59d1000 	ldr	r1, [sp]
40008b1c:	e5810038 	str	r0, [r1, #56]	; 0x38
40008b20:	e3a00000 	mov	r0, #0
40008b24:	e59d1000 	ldr	r1, [sp]
40008b28:	e5810084 	str	r0, [r1, #132]	; 0x84
40008b2c:	e59d0000 	ldr	r0, [sp]
40008b30:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008b34:	e59f0048 	ldr	r0, [pc, #72]	; 40008b84 <_tx_thread_sleep+0x1c0>
40008b38:	e5900000 	ldr	r0, [r0]
40008b3c:	e2800001 	add	r0, r0, #1
40008b40:	e59f103c 	ldr	r1, [pc, #60]	; 40008b84 <_tx_thread_sleep+0x1c0>
40008b44:	e5810000 	str	r0, [r1]
40008b48:	e121f005 	msr	CPSR_c, r5
40008b4c:	e59d0000 	ldr	r0, [sp]
40008b50:	eb00000c 	bl	40008b88 <_tx_thread_system_suspend>
40008b54:	e59d0000 	ldr	r0, [sp]
40008b58:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008b5c:	eaffffa9 	b	40008a08 <_tx_thread_sleep+0x44>
40008b60:	40030e34 	.word	0x40030e34
40008b64:	40032974 	.word	0x40032974
40008b68:	40030e2c 	.word	0x40030e2c
40008b6c:	40030ea0 	.word	0x40030ea0
40008b70:	40030ea4 	.word	0x40030ea4
40008b74:	f0f0f0f0 	.word	0xf0f0f0f0
40008b78:	40030e9c 	.word	0x40030e9c
40008b7c:	40030e98 	.word	0x40030e98
40008b80:	40030e8c 	.word	0x40030e8c
40008b84:	40030e50 	.word	0x40030e50

40008b88 <_tx_thread_system_suspend>:
40008b88:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008b8c:	e1a04000 	mov	r4, r0
40008b90:	e3a0b000 	mov	fp, #0
40008b94:	e59f05b0 	ldr	r0, [pc, #1456]	; 4000914c <_tx_thread_system_suspend+0x5c4>
40008b98:	e5900000 	ldr	r0, [r0]
40008b9c:	e1540000 	cmp	r4, r0
40008ba0:	1a000009 	bne	40008bcc <_tx_thread_system_suspend+0x44>
40008ba4:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008ba8:	e58d0000 	str	r0, [sp]
40008bac:	e59d0000 	ldr	r0, [sp]
40008bb0:	e3500000 	cmp	r0, #0
40008bb4:	0a000004 	beq	40008bcc <_tx_thread_system_suspend+0x44>
40008bb8:	e59d0000 	ldr	r0, [sp]
40008bbc:	e3700001 	cmn	r0, #1
40008bc0:	0a000001 	beq	40008bcc <_tx_thread_system_suspend+0x44>
40008bc4:	e284004c 	add	r0, r4, #76	; 0x4c
40008bc8:	eb00020a 	bl	400093f8 <_tx_timer_system_activate>
40008bcc:	e5940008 	ldr	r0, [r4, #8]
40008bd0:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008bd4:	e1500001 	cmp	r0, r1
40008bd8:	2a000001 	bcs	40008be4 <_tx_thread_system_suspend+0x5c>
40008bdc:	e5940008 	ldr	r0, [r4, #8]
40008be0:	e5840040 	str	r0, [r4, #64]	; 0x40
40008be4:	e594000c 	ldr	r0, [r4, #12]
40008be8:	e5900000 	ldr	r0, [r0]
40008bec:	e59f155c 	ldr	r1, [pc, #1372]	; 40009150 <_tx_thread_system_suspend+0x5c8>
40008bf0:	e1500001 	cmp	r0, r1
40008bf4:	1a000007 	bne	40008c18 <_tx_thread_system_suspend+0x90>
40008bf8:	e5940010 	ldr	r0, [r4, #16]
40008bfc:	e5900001 	ldr	r0, [r0, #1]
40008c00:	e1500001 	cmp	r0, r1
40008c04:	1a000003 	bne	40008c18 <_tx_thread_system_suspend+0x90>
40008c08:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008c0c:	e594100c 	ldr	r1, [r4, #12]
40008c10:	e1500001 	cmp	r0, r1
40008c14:	2a000001 	bcs	40008c20 <_tx_thread_system_suspend+0x98>
40008c18:	e1a00004 	mov	r0, r4
40008c1c:	eb001941 	bl	4000f128 <_tx_thread_stack_error_handler>
40008c20:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008c24:	e5100004 	ldr	r0, [r0, #-4]
40008c28:	e59f1520 	ldr	r1, [pc, #1312]	; 40009150 <_tx_thread_system_suspend+0x5c8>
40008c2c:	e1500001 	cmp	r0, r1
40008c30:	0a000001 	beq	40008c3c <_tx_thread_system_suspend+0xb4>
40008c34:	e1a00004 	mov	r0, r4
40008c38:	eb001905 	bl	4000f054 <_tx_thread_stack_analyze>
40008c3c:	e10f5000 	mrs	r5, CPSR
40008c40:	e3856080 	orr	r6, r5, #128	; 0x80
40008c44:	e121f006 	msr	CPSR_c, r6
40008c48:	e59f0504 	ldr	r0, [pc, #1284]	; 40009154 <_tx_thread_system_suspend+0x5cc>
40008c4c:	e5900000 	ldr	r0, [r0]
40008c50:	e2400001 	sub	r0, r0, #1
40008c54:	e59f14f8 	ldr	r1, [pc, #1272]	; 40009154 <_tx_thread_system_suspend+0x5cc>
40008c58:	e5810000 	str	r0, [r1]
40008c5c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008c60:	e3500000 	cmp	r0, #0
40008c64:	0a000112 	beq	400090b4 <_tx_thread_system_suspend+0x52c>
40008c68:	e59f04e8 	ldr	r0, [pc, #1256]	; 40009158 <_tx_thread_system_suspend+0x5d0>
40008c6c:	e590a000 	ldr	sl, [r0]
40008c70:	e2801000 	add	r1, r0, #0
40008c74:	e5910000 	ldr	r0, [r1]
40008c78:	e3500000 	cmp	r0, #0
40008c7c:	0a000034 	beq	40008d54 <_tx_thread_system_suspend+0x1cc>
40008c80:	e59f14d4 	ldr	r1, [pc, #1236]	; 4000915c <_tx_thread_system_suspend+0x5d4>
40008c84:	e5911000 	ldr	r1, [r1]
40008c88:	e2811001 	add	r1, r1, #1
40008c8c:	e59f24c8 	ldr	r2, [pc, #1224]	; 4000915c <_tx_thread_system_suspend+0x5d4>
40008c90:	e5821000 	str	r1, [r2]
40008c94:	e580100c 	str	r1, [r0, #12]
40008c98:	e59f14c0 	ldr	r1, [pc, #1216]	; 40009160 <_tx_thread_system_suspend+0x5d8>
40008c9c:	e5911000 	ldr	r1, [r1]
40008ca0:	e3510000 	cmp	r1, #0
40008ca4:	1a000006 	bne	40008cc4 <_tx_thread_system_suspend+0x13c>
40008ca8:	e59f149c 	ldr	r1, [pc, #1180]	; 4000914c <_tx_thread_system_suspend+0x5c4>
40008cac:	e5911000 	ldr	r1, [r1]
40008cb0:	e5801000 	str	r1, [r0]
40008cb4:	e5901000 	ldr	r1, [r0]
40008cb8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008cbc:	e5801004 	str	r1, [r0, #4]
40008cc0:	ea00000d 	b	40008cfc <_tx_thread_system_suspend+0x174>
40008cc4:	e59f1494 	ldr	r1, [pc, #1172]	; 40009160 <_tx_thread_system_suspend+0x5d8>
40008cc8:	e5911000 	ldr	r1, [r1]
40008ccc:	e59f2490 	ldr	r2, [pc, #1168]	; 40009164 <_tx_thread_system_suspend+0x5dc>
40008cd0:	e1510002 	cmp	r1, r2
40008cd4:	2a000004 	bcs	40008cec <_tx_thread_system_suspend+0x164>
40008cd8:	e3e01000 	mvn	r1, #0
40008cdc:	e5801000 	str	r1, [r0]
40008ce0:	e3a01000 	mov	r1, #0
40008ce4:	e5801004 	str	r1, [r0, #4]
40008ce8:	ea000003 	b	40008cfc <_tx_thread_system_suspend+0x174>
40008cec:	e59f1470 	ldr	r1, [pc, #1136]	; 40009164 <_tx_thread_system_suspend+0x5dc>
40008cf0:	e5801000 	str	r1, [r0]
40008cf4:	e3a01000 	mov	r1, #0
40008cf8:	e5801004 	str	r1, [r0, #4]
40008cfc:	e3a01002 	mov	r1, #2
40008d00:	e5801008 	str	r1, [r0, #8]
40008d04:	e5804010 	str	r4, [r0, #16]
40008d08:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008d0c:	e5801014 	str	r1, [r0, #20]
40008d10:	e28d1004 	add	r1, sp, #4
40008d14:	e5801018 	str	r1, [r0, #24]
40008d18:	e59f1448 	ldr	r1, [pc, #1096]	; 40009168 <_tx_thread_system_suspend+0x5e0>
40008d1c:	e5911000 	ldr	r1, [r1]
40008d20:	e580101c 	str	r1, [r0, #28]
40008d24:	e2800020 	add	r0, r0, #32
40008d28:	e59f143c 	ldr	r1, [pc, #1084]	; 4000916c <_tx_thread_system_suspend+0x5e4>
40008d2c:	e5911000 	ldr	r1, [r1]
40008d30:	e1500001 	cmp	r0, r1
40008d34:	3a000001 	bcc	40008d40 <_tx_thread_system_suspend+0x1b8>
40008d38:	e59f1430 	ldr	r1, [pc, #1072]	; 40009170 <_tx_thread_system_suspend+0x5e8>
40008d3c:	e5910000 	ldr	r0, [r1]
40008d40:	e59f1410 	ldr	r1, [pc, #1040]	; 40009158 <_tx_thread_system_suspend+0x5d0>
40008d44:	e5810000 	str	r0, [r1]
40008d48:	e59f1424 	ldr	r1, [pc, #1060]	; 40009174 <_tx_thread_system_suspend+0x5ec>
40008d4c:	e5911000 	ldr	r1, [r1]
40008d50:	e5810020 	str	r0, [r1, #32]
40008d54:	e35a0000 	cmp	sl, #0
40008d58:	0a000000 	beq	40008d60 <_tx_thread_system_suspend+0x1d8>
40008d5c:	e59ab00c 	ldr	fp, [sl, #12]
40008d60:	e3a00000 	mov	r0, #0
40008d64:	e5840038 	str	r0, [r4, #56]	; 0x38
40008d68:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40008d6c:	e5940020 	ldr	r0, [r4, #32]
40008d70:	e1500004 	cmp	r0, r4
40008d74:	0a000029 	beq	40008e20 <_tx_thread_system_suspend+0x298>
40008d78:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40008d7c:	e5941020 	ldr	r1, [r4, #32]
40008d80:	e5810024 	str	r0, [r1, #36]	; 0x24
40008d84:	e5940020 	ldr	r0, [r4, #32]
40008d88:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40008d8c:	e5810020 	str	r0, [r1, #32]
40008d90:	e59f03e0 	ldr	r0, [pc, #992]	; 40009178 <_tx_thread_system_suspend+0x5f0>
40008d94:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40008d98:	e1500004 	cmp	r0, r4
40008d9c:	1a0000c4 	bne	400090b4 <_tx_thread_system_suspend+0x52c>
40008da0:	e59f13d0 	ldr	r1, [pc, #976]	; 40009178 <_tx_thread_system_suspend+0x5f0>
40008da4:	e5940020 	ldr	r0, [r4, #32]
40008da8:	e7810107 	str	r0, [r1, r7, lsl #2]
40008dac:	e59f03c8 	ldr	r0, [pc, #968]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008db0:	e5900000 	ldr	r0, [r0]
40008db4:	e3500000 	cmp	r0, #0
40008db8:	0a000005 	beq	40008dd4 <_tx_thread_system_suspend+0x24c>
40008dbc:	e59f03b8 	ldr	r0, [pc, #952]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008dc0:	e5900000 	ldr	r0, [r0]
40008dc4:	e3a01001 	mov	r1, #1
40008dc8:	e1c00711 	bic	r0, r0, r1, lsl r7
40008dcc:	e59f13a8 	ldr	r1, [pc, #936]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008dd0:	e5810000 	str	r0, [r1]
40008dd4:	e59f038c 	ldr	r0, [pc, #908]	; 40009168 <_tx_thread_system_suspend+0x5e0>
40008dd8:	e5900000 	ldr	r0, [r0]
40008ddc:	e1540000 	cmp	r4, r0
40008de0:	1a0000b3 	bne	400090b4 <_tx_thread_system_suspend+0x52c>
40008de4:	e59f038c 	ldr	r0, [pc, #908]	; 40009178 <_tx_thread_system_suspend+0x5f0>
40008de8:	e59f1390 	ldr	r1, [pc, #912]	; 40009180 <_tx_thread_system_suspend+0x5f8>
40008dec:	e5911000 	ldr	r1, [r1]
40008df0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008df4:	e59f136c 	ldr	r1, [pc, #876]	; 40009168 <_tx_thread_system_suspend+0x5e0>
40008df8:	e5810000 	str	r0, [r1]
40008dfc:	e35a0000 	cmp	sl, #0
40008e00:	0a0000ab 	beq	400090b4 <_tx_thread_system_suspend+0x52c>
40008e04:	e59a000c 	ldr	r0, [sl, #12]
40008e08:	e150000b 	cmp	r0, fp
40008e0c:	1a0000a8 	bne	400090b4 <_tx_thread_system_suspend+0x52c>
40008e10:	e2810000 	add	r0, r1, #0
40008e14:	e5900000 	ldr	r0, [r0]
40008e18:	e58a001c 	str	r0, [sl, #28]
40008e1c:	ea0000a4 	b	400090b4 <_tx_thread_system_suspend+0x52c>
40008e20:	e3a00000 	mov	r0, #0
40008e24:	e59f134c 	ldr	r1, [pc, #844]	; 40009178 <_tx_thread_system_suspend+0x5f0>
40008e28:	e7810107 	str	r0, [r1, r7, lsl #2]
40008e2c:	e59f0350 	ldr	r0, [pc, #848]	; 40009184 <_tx_thread_system_suspend+0x5fc>
40008e30:	e5900000 	ldr	r0, [r0]
40008e34:	e3a01001 	mov	r1, #1
40008e38:	e1c00711 	bic	r0, r0, r1, lsl r7
40008e3c:	e59f1340 	ldr	r1, [pc, #832]	; 40009184 <_tx_thread_system_suspend+0x5fc>
40008e40:	e5810000 	str	r0, [r1]
40008e44:	e59f0330 	ldr	r0, [pc, #816]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008e48:	e5900000 	ldr	r0, [r0]
40008e4c:	e3500000 	cmp	r0, #0
40008e50:	0a000005 	beq	40008e6c <_tx_thread_system_suspend+0x2e4>
40008e54:	e59f0320 	ldr	r0, [pc, #800]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008e58:	e5900000 	ldr	r0, [r0]
40008e5c:	e3a01001 	mov	r1, #1
40008e60:	e1c00711 	bic	r0, r0, r1, lsl r7
40008e64:	e59f1310 	ldr	r1, [pc, #784]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008e68:	e5810000 	str	r0, [r1]
40008e6c:	e3a08000 	mov	r8, #0
40008e70:	e59f030c 	ldr	r0, [pc, #780]	; 40009184 <_tx_thread_system_suspend+0x5fc>
40008e74:	e5909000 	ldr	r9, [r0]
40008e78:	e20900ff 	and	r0, r9, #255	; 0xff
40008e7c:	e58d0004 	str	r0, [sp, #4]
40008e80:	e59d0004 	ldr	r0, [sp, #4]
40008e84:	e3500000 	cmp	r0, #0
40008e88:	1a00002a 	bne	40008f38 <_tx_thread_system_suspend+0x3b0>
40008e8c:	e1a09429 	lsr	r9, r9, #8
40008e90:	e20900ff 	and	r0, r9, #255	; 0xff
40008e94:	e58d0004 	str	r0, [sp, #4]
40008e98:	e2888008 	add	r8, r8, #8
40008e9c:	e59d0004 	ldr	r0, [sp, #4]
40008ea0:	e3500000 	cmp	r0, #0
40008ea4:	1a000023 	bne	40008f38 <_tx_thread_system_suspend+0x3b0>
40008ea8:	e1a09429 	lsr	r9, r9, #8
40008eac:	e20900ff 	and	r0, r9, #255	; 0xff
40008eb0:	e58d0004 	str	r0, [sp, #4]
40008eb4:	e2888008 	add	r8, r8, #8
40008eb8:	e59d0004 	ldr	r0, [sp, #4]
40008ebc:	e3500000 	cmp	r0, #0
40008ec0:	1a00001c 	bne	40008f38 <_tx_thread_system_suspend+0x3b0>
40008ec4:	e1a09429 	lsr	r9, r9, #8
40008ec8:	e20900ff 	and	r0, r9, #255	; 0xff
40008ecc:	e58d0004 	str	r0, [sp, #4]
40008ed0:	e2888008 	add	r8, r8, #8
40008ed4:	e59d0004 	ldr	r0, [sp, #4]
40008ed8:	e3500000 	cmp	r0, #0
40008edc:	1a000015 	bne	40008f38 <_tx_thread_system_suspend+0x3b0>
40008ee0:	e3a00020 	mov	r0, #32
40008ee4:	e59f1294 	ldr	r1, [pc, #660]	; 40009180 <_tx_thread_system_suspend+0x5f8>
40008ee8:	e5810000 	str	r0, [r1]
40008eec:	e3a00000 	mov	r0, #0
40008ef0:	e59f1270 	ldr	r1, [pc, #624]	; 40009168 <_tx_thread_system_suspend+0x5e0>
40008ef4:	e5810000 	str	r0, [r1]
40008ef8:	e35a0000 	cmp	sl, #0
40008efc:	0a000004 	beq	40008f14 <_tx_thread_system_suspend+0x38c>
40008f00:	e59a000c 	ldr	r0, [sl, #12]
40008f04:	e150000b 	cmp	r0, fp
40008f08:	1a000001 	bne	40008f14 <_tx_thread_system_suspend+0x38c>
40008f0c:	e3a00000 	mov	r0, #0
40008f10:	e58a001c 	str	r0, [sl, #28]
40008f14:	e121f005 	msr	CPSR_c, r5
40008f18:	e59f0240 	ldr	r0, [pc, #576]	; 40009160 <_tx_thread_system_suspend+0x5d8>
40008f1c:	e5900000 	ldr	r0, [r0]
40008f20:	e59f122c 	ldr	r1, [pc, #556]	; 40009154 <_tx_thread_system_suspend+0x5cc>
40008f24:	e5911000 	ldr	r1, [r1]
40008f28:	e1900001 	orrs	r0, r0, r1
40008f2c:	1a000000 	bne	40008f34 <_tx_thread_system_suspend+0x3ac>
40008f30:	eb000725 	bl	4000abcc <_tx_thread_system_return>
40008f34:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40008f38:	e59f0248 	ldr	r0, [pc, #584]	; 40009188 <_tx_thread_system_suspend+0x600>
40008f3c:	e59d1004 	ldr	r1, [sp, #4]
40008f40:	e7d00001 	ldrb	r0, [r0, r1]
40008f44:	e0800008 	add	r0, r0, r8
40008f48:	e59f1230 	ldr	r1, [pc, #560]	; 40009180 <_tx_thread_system_suspend+0x5f8>
40008f4c:	e5810000 	str	r0, [r1]
40008f50:	e59f0210 	ldr	r0, [pc, #528]	; 40009168 <_tx_thread_system_suspend+0x5e0>
40008f54:	e5900000 	ldr	r0, [r0]
40008f58:	e1540000 	cmp	r4, r0
40008f5c:	1a000054 	bne	400090b4 <_tx_thread_system_suspend+0x52c>
40008f60:	e59f0210 	ldr	r0, [pc, #528]	; 40009178 <_tx_thread_system_suspend+0x5f0>
40008f64:	e5911000 	ldr	r1, [r1]
40008f68:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40008f6c:	e59f11f4 	ldr	r1, [pc, #500]	; 40009168 <_tx_thread_system_suspend+0x5e0>
40008f70:	e5810000 	str	r0, [r1]
40008f74:	e35a0000 	cmp	sl, #0
40008f78:	0a000005 	beq	40008f94 <_tx_thread_system_suspend+0x40c>
40008f7c:	e59a000c 	ldr	r0, [sl, #12]
40008f80:	e150000b 	cmp	r0, fp
40008f84:	1a000002 	bne	40008f94 <_tx_thread_system_suspend+0x40c>
40008f88:	e2810000 	add	r0, r1, #0
40008f8c:	e5900000 	ldr	r0, [r0]
40008f90:	e58a001c 	str	r0, [sl, #28]
40008f94:	e59f01e0 	ldr	r0, [pc, #480]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008f98:	e5900000 	ldr	r0, [r0]
40008f9c:	e3500000 	cmp	r0, #0
40008fa0:	0a000043 	beq	400090b4 <_tx_thread_system_suspend+0x52c>
40008fa4:	e59f01a8 	ldr	r0, [pc, #424]	; 40009154 <_tx_thread_system_suspend+0x5cc>
40008fa8:	e5900000 	ldr	r0, [r0]
40008fac:	e2800001 	add	r0, r0, #1
40008fb0:	e59f119c 	ldr	r1, [pc, #412]	; 40009154 <_tx_thread_system_suspend+0x5cc>
40008fb4:	e5810000 	str	r0, [r1]
40008fb8:	e121f005 	msr	CPSR_c, r5
40008fbc:	e10f5000 	mrs	r5, CPSR
40008fc0:	e3856080 	orr	r6, r5, #128	; 0x80
40008fc4:	e121f006 	msr	CPSR_c, r6
40008fc8:	e2810000 	add	r0, r1, #0
40008fcc:	e5900000 	ldr	r0, [r0]
40008fd0:	e2400001 	sub	r0, r0, #1
40008fd4:	e5810000 	str	r0, [r1]
40008fd8:	e3a08000 	mov	r8, #0
40008fdc:	e59f0198 	ldr	r0, [pc, #408]	; 4000917c <_tx_thread_system_suspend+0x5f4>
40008fe0:	e5909000 	ldr	r9, [r0]
40008fe4:	e20900ff 	and	r0, r9, #255	; 0xff
40008fe8:	e58d0004 	str	r0, [sp, #4]
40008fec:	e59d0004 	ldr	r0, [sp, #4]
40008ff0:	e3500000 	cmp	r0, #0
40008ff4:	1a000011 	bne	40009040 <_tx_thread_system_suspend+0x4b8>
40008ff8:	e1a09429 	lsr	r9, r9, #8
40008ffc:	e20900ff 	and	r0, r9, #255	; 0xff
40009000:	e58d0004 	str	r0, [sp, #4]
40009004:	e2888008 	add	r8, r8, #8
40009008:	e59d0004 	ldr	r0, [sp, #4]
4000900c:	e3500000 	cmp	r0, #0
40009010:	1a00000a 	bne	40009040 <_tx_thread_system_suspend+0x4b8>
40009014:	e1a09429 	lsr	r9, r9, #8
40009018:	e20900ff 	and	r0, r9, #255	; 0xff
4000901c:	e58d0004 	str	r0, [sp, #4]
40009020:	e2888008 	add	r8, r8, #8
40009024:	e59d0004 	ldr	r0, [sp, #4]
40009028:	e3500000 	cmp	r0, #0
4000902c:	1a000003 	bne	40009040 <_tx_thread_system_suspend+0x4b8>
40009030:	e1a09429 	lsr	r9, r9, #8
40009034:	e20900ff 	and	r0, r9, #255	; 0xff
40009038:	e58d0004 	str	r0, [sp, #4]
4000903c:	e2888008 	add	r8, r8, #8
40009040:	e59f0140 	ldr	r0, [pc, #320]	; 40009188 <_tx_thread_system_suspend+0x600>
40009044:	e59d1004 	ldr	r1, [sp, #4]
40009048:	e7d00001 	ldrb	r0, [r0, r1]
4000904c:	e0807008 	add	r7, r0, r8
40009050:	e59f0120 	ldr	r0, [pc, #288]	; 40009178 <_tx_thread_system_suspend+0x5f0>
40009054:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009058:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000905c:	e59f111c 	ldr	r1, [pc, #284]	; 40009180 <_tx_thread_system_suspend+0x5f8>
40009060:	e5911000 	ldr	r1, [r1]
40009064:	e1500001 	cmp	r0, r1
40009068:	8a000011 	bhi	400090b4 <_tx_thread_system_suspend+0x52c>
4000906c:	e59f0104 	ldr	r0, [pc, #260]	; 40009178 <_tx_thread_system_suspend+0x5f0>
40009070:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009074:	e59f10ec 	ldr	r1, [pc, #236]	; 40009168 <_tx_thread_system_suspend+0x5e0>
40009078:	e5810000 	str	r0, [r1]
4000907c:	e35a0000 	cmp	sl, #0
40009080:	0a000005 	beq	4000909c <_tx_thread_system_suspend+0x514>
40009084:	e59a000c 	ldr	r0, [sl, #12]
40009088:	e150000b 	cmp	r0, fp
4000908c:	1a000002 	bne	4000909c <_tx_thread_system_suspend+0x514>
40009090:	e2810000 	add	r0, r1, #0
40009094:	e5900000 	ldr	r0, [r0]
40009098:	e58a001c 	str	r0, [sl, #28]
4000909c:	e59f00d8 	ldr	r0, [pc, #216]	; 4000917c <_tx_thread_system_suspend+0x5f4>
400090a0:	e5900000 	ldr	r0, [r0]
400090a4:	e3a01001 	mov	r1, #1
400090a8:	e1c00711 	bic	r0, r0, r1, lsl r7
400090ac:	e59f10c8 	ldr	r1, [pc, #200]	; 4000917c <_tx_thread_system_suspend+0x5f4>
400090b0:	e5810000 	str	r0, [r1]
400090b4:	e121f005 	msr	CPSR_c, r5
400090b8:	e59f008c 	ldr	r0, [pc, #140]	; 4000914c <_tx_thread_system_suspend+0x5c4>
400090bc:	e5900000 	ldr	r0, [r0]
400090c0:	e59f10a0 	ldr	r1, [pc, #160]	; 40009168 <_tx_thread_system_suspend+0x5e0>
400090c4:	e5911000 	ldr	r1, [r1]
400090c8:	e1500001 	cmp	r0, r1
400090cc:	0a00001d 	beq	40009148 <_tx_thread_system_suspend+0x5c0>
400090d0:	e59f0090 	ldr	r0, [pc, #144]	; 40009168 <_tx_thread_system_suspend+0x5e0>
400090d4:	e5904000 	ldr	r4, [r0]
400090d8:	e5940008 	ldr	r0, [r4, #8]
400090dc:	e5941040 	ldr	r1, [r4, #64]	; 0x40
400090e0:	e1500001 	cmp	r0, r1
400090e4:	2a000001 	bcs	400090f0 <_tx_thread_system_suspend+0x568>
400090e8:	e5940008 	ldr	r0, [r4, #8]
400090ec:	e5840040 	str	r0, [r4, #64]	; 0x40
400090f0:	e594000c 	ldr	r0, [r4, #12]
400090f4:	e5900000 	ldr	r0, [r0]
400090f8:	e59f1050 	ldr	r1, [pc, #80]	; 40009150 <_tx_thread_system_suspend+0x5c8>
400090fc:	e1500001 	cmp	r0, r1
40009100:	1a000007 	bne	40009124 <_tx_thread_system_suspend+0x59c>
40009104:	e5940010 	ldr	r0, [r4, #16]
40009108:	e5900001 	ldr	r0, [r0, #1]
4000910c:	e1500001 	cmp	r0, r1
40009110:	1a000003 	bne	40009124 <_tx_thread_system_suspend+0x59c>
40009114:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40009118:	e594100c 	ldr	r1, [r4, #12]
4000911c:	e1500001 	cmp	r0, r1
40009120:	2a000001 	bcs	4000912c <_tx_thread_system_suspend+0x5a4>
40009124:	e1a00004 	mov	r0, r4
40009128:	eb0017fe 	bl	4000f128 <_tx_thread_stack_error_handler>
4000912c:	e59f002c 	ldr	r0, [pc, #44]	; 40009160 <_tx_thread_system_suspend+0x5d8>
40009130:	e5900000 	ldr	r0, [r0]
40009134:	e59f1018 	ldr	r1, [pc, #24]	; 40009154 <_tx_thread_system_suspend+0x5cc>
40009138:	e5911000 	ldr	r1, [r1]
4000913c:	e1900001 	orrs	r0, r0, r1
40009140:	1a000000 	bne	40009148 <_tx_thread_system_suspend+0x5c0>
40009144:	eb0006a0 	bl	4000abcc <_tx_thread_system_return>
40009148:	eaffff79 	b	40008f34 <_tx_thread_system_suspend+0x3ac>
4000914c:	40030e34 	.word	0x40030e34
40009150:	efefefef 	.word	0xefefefef
40009154:	40030e50 	.word	0x40030e50
40009158:	40030ea0 	.word	0x40030ea0
4000915c:	40030ea4 	.word	0x40030ea4
40009160:	40030e2c 	.word	0x40030e2c
40009164:	f0f0f0f0 	.word	0xf0f0f0f0
40009168:	40030e38 	.word	0x40030e38
4000916c:	40030e9c 	.word	0x40030e9c
40009170:	40030e98 	.word	0x40030e98
40009174:	40030e8c 	.word	0x40030e8c
40009178:	40032874 	.word	0x40032874
4000917c:	40030e48 	.word	0x40030e48
40009180:	40030e4c 	.word	0x40030e4c
40009184:	40030e44 	.word	0x40030e44
40009188:	40032774 	.word	0x40032774

4000918c <_tx_time_get>:
4000918c:	e92d4008 	push	{r3, lr}
40009190:	e10f1000 	mrs	r1, CPSR
40009194:	e3812080 	orr	r2, r1, #128	; 0x80
40009198:	e121f002 	msr	CPSR_c, r2
4000919c:	e59f00ec 	ldr	r0, [pc, #236]	; 40009290 <_tx_time_get+0x104>
400091a0:	e5900000 	ldr	r0, [r0]
400091a4:	e58d0000 	str	r0, [sp]
400091a8:	e59f30e4 	ldr	r3, [pc, #228]	; 40009294 <_tx_time_get+0x108>
400091ac:	e5930000 	ldr	r0, [r3]
400091b0:	e3500000 	cmp	r0, #0
400091b4:	0a000032 	beq	40009284 <_tx_time_get+0xf8>
400091b8:	e59f30d8 	ldr	r3, [pc, #216]	; 40009298 <_tx_time_get+0x10c>
400091bc:	e5933000 	ldr	r3, [r3]
400091c0:	e2833001 	add	r3, r3, #1
400091c4:	e59fc0cc 	ldr	ip, [pc, #204]	; 40009298 <_tx_time_get+0x10c>
400091c8:	e58c3000 	str	r3, [ip]
400091cc:	e580300c 	str	r3, [r0, #12]
400091d0:	e59f30c4 	ldr	r3, [pc, #196]	; 4000929c <_tx_time_get+0x110>
400091d4:	e5933000 	ldr	r3, [r3]
400091d8:	e3530000 	cmp	r3, #0
400091dc:	1a000006 	bne	400091fc <_tx_time_get+0x70>
400091e0:	e59f30b8 	ldr	r3, [pc, #184]	; 400092a0 <_tx_time_get+0x114>
400091e4:	e5933000 	ldr	r3, [r3]
400091e8:	e5803000 	str	r3, [r0]
400091ec:	e5903000 	ldr	r3, [r0]
400091f0:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400091f4:	e5803004 	str	r3, [r0, #4]
400091f8:	ea00000d 	b	40009234 <_tx_time_get+0xa8>
400091fc:	e59f3098 	ldr	r3, [pc, #152]	; 4000929c <_tx_time_get+0x110>
40009200:	e5933000 	ldr	r3, [r3]
40009204:	e59fc098 	ldr	ip, [pc, #152]	; 400092a4 <_tx_time_get+0x118>
40009208:	e153000c 	cmp	r3, ip
4000920c:	2a000004 	bcs	40009224 <_tx_time_get+0x98>
40009210:	e3e03000 	mvn	r3, #0
40009214:	e5803000 	str	r3, [r0]
40009218:	e3a03000 	mov	r3, #0
4000921c:	e5803004 	str	r3, [r0, #4]
40009220:	ea000003 	b	40009234 <_tx_time_get+0xa8>
40009224:	e59f3078 	ldr	r3, [pc, #120]	; 400092a4 <_tx_time_get+0x118>
40009228:	e5803000 	str	r3, [r0]
4000922c:	e3a03000 	mov	r3, #0
40009230:	e5803004 	str	r3, [r0, #4]
40009234:	e3a03078 	mov	r3, #120	; 0x78
40009238:	e5803008 	str	r3, [r0, #8]
4000923c:	e59d3000 	ldr	r3, [sp]
40009240:	e5803010 	str	r3, [r0, #16]
40009244:	e580d014 	str	sp, [r0, #20]
40009248:	e3a03000 	mov	r3, #0
4000924c:	e5803018 	str	r3, [r0, #24]
40009250:	e580301c 	str	r3, [r0, #28]
40009254:	e2800020 	add	r0, r0, #32
40009258:	e59f3048 	ldr	r3, [pc, #72]	; 400092a8 <_tx_time_get+0x11c>
4000925c:	e5933000 	ldr	r3, [r3]
40009260:	e1500003 	cmp	r0, r3
40009264:	3a000001 	bcc	40009270 <_tx_time_get+0xe4>
40009268:	e59f303c 	ldr	r3, [pc, #60]	; 400092ac <_tx_time_get+0x120>
4000926c:	e5930000 	ldr	r0, [r3]
40009270:	e59f301c 	ldr	r3, [pc, #28]	; 40009294 <_tx_time_get+0x108>
40009274:	e5830000 	str	r0, [r3]
40009278:	e59f3030 	ldr	r3, [pc, #48]	; 400092b0 <_tx_time_get+0x124>
4000927c:	e5933000 	ldr	r3, [r3]
40009280:	e5830020 	str	r0, [r3, #32]
40009284:	e121f001 	msr	CPSR_c, r1
40009288:	e59d0000 	ldr	r0, [sp]
4000928c:	e8bd8008 	pop	{r3, pc}
40009290:	40030e5c 	.word	0x40030e5c
40009294:	40030ea0 	.word	0x40030ea0
40009298:	40030ea4 	.word	0x40030ea4
4000929c:	40030e2c 	.word	0x40030e2c
400092a0:	40030e34 	.word	0x40030e34
400092a4:	f0f0f0f0 	.word	0xf0f0f0f0
400092a8:	40030e9c 	.word	0x40030e9c
400092ac:	40030e98 	.word	0x40030e98
400092b0:	40030e8c 	.word	0x40030e8c

400092b4 <_tx_timer_initialize>:
400092b4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400092b8:	e24dd01c 	sub	sp, sp, #28
400092bc:	e3a00000 	mov	r0, #0
400092c0:	e59f10d8 	ldr	r1, [pc, #216]	; 400093a0 <_tx_timer_initialize+0xec>
400092c4:	e5810000 	str	r0, [r1]
400092c8:	e59f10d4 	ldr	r1, [pc, #212]	; 400093a4 <_tx_timer_initialize+0xf0>
400092cc:	e5810000 	str	r0, [r1]
400092d0:	e59f10d0 	ldr	r1, [pc, #208]	; 400093a8 <_tx_timer_initialize+0xf4>
400092d4:	e5810000 	str	r0, [r1]
400092d8:	e59f10cc 	ldr	r1, [pc, #204]	; 400093ac <_tx_timer_initialize+0xf8>
400092dc:	e5810000 	str	r0, [r1]
400092e0:	e3a01080 	mov	r1, #128	; 0x80
400092e4:	e59f00c4 	ldr	r0, [pc, #196]	; 400093b0 <_tx_timer_initialize+0xfc>
400092e8:	eb00288b 	bl	4001351c <__aeabi_memclr4>
400092ec:	e59f00bc 	ldr	r0, [pc, #188]	; 400093b0 <_tx_timer_initialize+0xfc>
400092f0:	e59f10bc 	ldr	r1, [pc, #188]	; 400093b4 <_tx_timer_initialize+0x100>
400092f4:	e5810000 	str	r0, [r1]
400092f8:	e59f10b8 	ldr	r1, [pc, #184]	; 400093b8 <_tx_timer_initialize+0x104>
400092fc:	e5810000 	str	r0, [r1]
40009300:	e280007c 	add	r0, r0, #124	; 0x7c
40009304:	e59f10b0 	ldr	r1, [pc, #176]	; 400093bc <_tx_timer_initialize+0x108>
40009308:	e5810000 	str	r0, [r1]
4000930c:	e2810000 	add	r0, r1, #0
40009310:	e5900000 	ldr	r0, [r0]
40009314:	e2800004 	add	r0, r0, #4
40009318:	e5810000 	str	r0, [r1]
4000931c:	e59f009c 	ldr	r0, [pc, #156]	; 400093c0 <_tx_timer_initialize+0x10c>
40009320:	e59f109c 	ldr	r1, [pc, #156]	; 400093c4 <_tx_timer_initialize+0x110>
40009324:	e5810000 	str	r0, [r1]
40009328:	e3a00b01 	mov	r0, #1024	; 0x400
4000932c:	e59f1094 	ldr	r1, [pc, #148]	; 400093c8 <_tx_timer_initialize+0x114>
40009330:	e5810000 	str	r0, [r1]
40009334:	e3a00000 	mov	r0, #0
40009338:	e59f108c 	ldr	r1, [pc, #140]	; 400093cc <_tx_timer_initialize+0x118>
4000933c:	e5810000 	str	r0, [r1]
40009340:	e3a03000 	mov	r3, #0
40009344:	e2810000 	add	r0, r1, #0
40009348:	e5901000 	ldr	r1, [r0]
4000934c:	e5900000 	ldr	r0, [r0]
40009350:	e28d2008 	add	r2, sp, #8
40009354:	e882000b 	stm	r2, {r0, r1, r3}
40009358:	e59f0068 	ldr	r0, [pc, #104]	; 400093c8 <_tx_timer_initialize+0x114>
4000935c:	e58d3014 	str	r3, [sp, #20]
40009360:	e5903000 	ldr	r3, [r0]
40009364:	e59f0058 	ldr	r0, [pc, #88]	; 400093c4 <_tx_timer_initialize+0x110>
40009368:	e5902000 	ldr	r2, [r0]
4000936c:	e1cd20f0 	strd	r2, [sp]
40009370:	e59f3058 	ldr	r3, [pc, #88]	; 400093d0 <_tx_timer_initialize+0x11c>
40009374:	e59f2058 	ldr	r2, [pc, #88]	; 400093d4 <_tx_timer_initialize+0x120>
40009378:	e28f1058 	add	r1, pc, #88	; 0x58
4000937c:	e59f0068 	ldr	r0, [pc, #104]	; 400093ec <_tx_timer_initialize+0x138>
40009380:	eb00143b 	bl	4000e474 <_tx_thread_create>
40009384:	e3a00000 	mov	r0, #0
40009388:	e59f1060 	ldr	r1, [pc, #96]	; 400093f0 <_tx_timer_initialize+0x13c>
4000938c:	e5810000 	str	r0, [r1]
40009390:	e59f105c 	ldr	r1, [pc, #92]	; 400093f4 <_tx_timer_initialize+0x140>
40009394:	e5810000 	str	r0, [r1]
40009398:	e28dd01c 	add	sp, sp, #28
4000939c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400093a0:	40030e5c 	.word	0x40030e5c
400093a4:	40030e60 	.word	0x40030e60
400093a8:	40030e64 	.word	0x40030e64
400093ac:	40030e74 	.word	0x40030e74
400093b0:	400328f4 	.word	0x400328f4
400093b4:	40030e68 	.word	0x40030e68
400093b8:	40030e70 	.word	0x40030e70
400093bc:	40030e6c 	.word	0x40030e6c
400093c0:	40032a1c 	.word	0x40032a1c
400093c4:	40030e80 	.word	0x40030e80
400093c8:	40030e84 	.word	0x40030e84
400093cc:	40030e88 	.word	0x40030e88
400093d0:	4154494d 	.word	0x4154494d
400093d4:	400094e4 	.word	0x400094e4
400093d8:	74737953 	.word	0x74737953
400093dc:	54206d65 	.word	0x54206d65
400093e0:	72656d69 	.word	0x72656d69
400093e4:	72685420 	.word	0x72685420
400093e8:	00646165 	.word	0x00646165
400093ec:	40032974 	.word	0x40032974
400093f0:	40030e78 	.word	0x40030e78
400093f4:	40030e7c 	.word	0x40030e7c

400093f8 <_tx_timer_system_activate>:
400093f8:	e92d4010 	push	{r4, lr}
400093fc:	e1a01000 	mov	r1, r0
40009400:	e10f2000 	mrs	r2, CPSR
40009404:	e3823080 	orr	r3, r2, #128	; 0x80
40009408:	e121f003 	msr	CPSR_c, r3
4000940c:	e5910000 	ldr	r0, [r1]
40009410:	e3500000 	cmp	r0, #0
40009414:	0a00002c 	beq	400094cc <_tx_timer_system_activate+0xd4>
40009418:	e5910000 	ldr	r0, [r1]
4000941c:	e3700001 	cmn	r0, #1
40009420:	0a000029 	beq	400094cc <_tx_timer_system_activate+0xd4>
40009424:	e5910018 	ldr	r0, [r1, #24]
40009428:	e3500000 	cmp	r0, #0
4000942c:	1a000026 	bne	400094cc <_tx_timer_system_activate+0xd4>
40009430:	e5910000 	ldr	r0, [r1]
40009434:	e3500020 	cmp	r0, #32
40009438:	9a000001 	bls	40009444 <_tx_timer_system_activate+0x4c>
4000943c:	e3a0e01f 	mov	lr, #31
40009440:	ea000001 	b	4000944c <_tx_timer_system_activate+0x54>
40009444:	e5910000 	ldr	r0, [r1]
40009448:	e240e001 	sub	lr, r0, #1
4000944c:	e59f0084 	ldr	r0, [pc, #132]	; 400094d8 <_tx_timer_system_activate+0xe0>
40009450:	e5900000 	ldr	r0, [r0]
40009454:	e080c10e 	add	ip, r0, lr, lsl #2
40009458:	e59f007c 	ldr	r0, [pc, #124]	; 400094dc <_tx_timer_system_activate+0xe4>
4000945c:	e5900000 	ldr	r0, [r0]
40009460:	e15c0000 	cmp	ip, r0
40009464:	3a000006 	bcc	40009484 <_tx_timer_system_activate+0x8c>
40009468:	e59f006c 	ldr	r0, [pc, #108]	; 400094dc <_tx_timer_system_activate+0xe4>
4000946c:	e5900000 	ldr	r0, [r0]
40009470:	e04c0000 	sub	r0, ip, r0
40009474:	e1a00140 	asr	r0, r0, #2
40009478:	e59f4060 	ldr	r4, [pc, #96]	; 400094e0 <_tx_timer_system_activate+0xe8>
4000947c:	e5944000 	ldr	r4, [r4]
40009480:	e084c100 	add	ip, r4, r0, lsl #2
40009484:	e59c0000 	ldr	r0, [ip]
40009488:	e3500000 	cmp	r0, #0
4000948c:	0a00000a 	beq	400094bc <_tx_timer_system_activate+0xc4>
40009490:	e59c0000 	ldr	r0, [ip]
40009494:	e5810010 	str	r0, [r1, #16]
40009498:	e59c0000 	ldr	r0, [ip]
4000949c:	e5900014 	ldr	r0, [r0, #20]
400094a0:	e5810014 	str	r0, [r1, #20]
400094a4:	e5910014 	ldr	r0, [r1, #20]
400094a8:	e5801010 	str	r1, [r0, #16]
400094ac:	e59c0000 	ldr	r0, [ip]
400094b0:	e5801014 	str	r1, [r0, #20]
400094b4:	e581c018 	str	ip, [r1, #24]
400094b8:	ea000003 	b	400094cc <_tx_timer_system_activate+0xd4>
400094bc:	e5811010 	str	r1, [r1, #16]
400094c0:	e5811014 	str	r1, [r1, #20]
400094c4:	e581c018 	str	ip, [r1, #24]
400094c8:	e58c1000 	str	r1, [ip]
400094cc:	e121f002 	msr	CPSR_c, r2
400094d0:	e3a00000 	mov	r0, #0
400094d4:	e8bd8010 	pop	{r4, pc}
400094d8:	40030e70 	.word	0x40030e70
400094dc:	40030e6c 	.word	0x40030e6c
400094e0:	40030e68 	.word	0x40030e68

400094e4 <_tx_timer_thread_entry>:
400094e4:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
400094e8:	e1a04000 	mov	r4, r0
400094ec:	e3a09000 	mov	r9, #0
400094f0:	e59f0214 	ldr	r0, [pc, #532]	; 4000970c <_tx_timer_thread_entry+0x228>
400094f4:	e1540000 	cmp	r4, r0
400094f8:	0a000000 	beq	40009500 <_tx_timer_thread_entry+0x1c>
400094fc:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40009500:	e3a00000 	mov	r0, #0
40009504:	e58d0000 	str	r0, [sp]
40009508:	e1a00000 	nop			; (mov r0, r0)
4000950c:	e10f5000 	mrs	r5, CPSR
40009510:	e3856080 	orr	r6, r5, #128	; 0x80
40009514:	e121f006 	msr	CPSR_c, r6
40009518:	e59f01f0 	ldr	r0, [pc, #496]	; 40009710 <_tx_timer_thread_entry+0x22c>
4000951c:	e5900000 	ldr	r0, [r0]
40009520:	e5900000 	ldr	r0, [r0]
40009524:	e58d0004 	str	r0, [sp, #4]
40009528:	e59d0004 	ldr	r0, [sp, #4]
4000952c:	e3500000 	cmp	r0, #0
40009530:	0a000002 	beq	40009540 <_tx_timer_thread_entry+0x5c>
40009534:	e28d0004 	add	r0, sp, #4
40009538:	e59d1004 	ldr	r1, [sp, #4]
4000953c:	e5810018 	str	r0, [r1, #24]
40009540:	e3a00000 	mov	r0, #0
40009544:	e59f11c4 	ldr	r1, [pc, #452]	; 40009710 <_tx_timer_thread_entry+0x22c>
40009548:	e5911000 	ldr	r1, [r1]
4000954c:	e5810000 	str	r0, [r1]
40009550:	e59f01b8 	ldr	r0, [pc, #440]	; 40009710 <_tx_timer_thread_entry+0x22c>
40009554:	e5900000 	ldr	r0, [r0]
40009558:	e2800004 	add	r0, r0, #4
4000955c:	e59f11ac 	ldr	r1, [pc, #428]	; 40009710 <_tx_timer_thread_entry+0x22c>
40009560:	e5810000 	str	r0, [r1]
40009564:	e2810000 	add	r0, r1, #0
40009568:	e5900000 	ldr	r0, [r0]
4000956c:	e59f11a0 	ldr	r1, [pc, #416]	; 40009714 <_tx_timer_thread_entry+0x230>
40009570:	e5911000 	ldr	r1, [r1]
40009574:	e1500001 	cmp	r0, r1
40009578:	1a000003 	bne	4000958c <_tx_timer_thread_entry+0xa8>
4000957c:	e59f0194 	ldr	r0, [pc, #404]	; 40009718 <_tx_timer_thread_entry+0x234>
40009580:	e5900000 	ldr	r0, [r0]
40009584:	e59f1184 	ldr	r1, [pc, #388]	; 40009710 <_tx_timer_thread_entry+0x22c>
40009588:	e5810000 	str	r0, [r1]
4000958c:	e3a00000 	mov	r0, #0
40009590:	e59f1184 	ldr	r1, [pc, #388]	; 4000971c <_tx_timer_thread_entry+0x238>
40009594:	e5810000 	str	r0, [r1]
40009598:	e121f005 	msr	CPSR_c, r5
4000959c:	e10f5000 	mrs	r5, CPSR
400095a0:	e3856080 	orr	r6, r5, #128	; 0x80
400095a4:	e121f006 	msr	CPSR_c, r6
400095a8:	ea000040 	b	400096b0 <_tx_timer_thread_entry+0x1cc>
400095ac:	e59d7004 	ldr	r7, [sp, #4]
400095b0:	e59d0004 	ldr	r0, [sp, #4]
400095b4:	e5900010 	ldr	r0, [r0, #16]
400095b8:	e1500007 	cmp	r0, r7
400095bc:	1a000002 	bne	400095cc <_tx_timer_thread_entry+0xe8>
400095c0:	e3a00000 	mov	r0, #0
400095c4:	e58d0004 	str	r0, [sp, #4]
400095c8:	ea00000a 	b	400095f8 <_tx_timer_thread_entry+0x114>
400095cc:	e5970014 	ldr	r0, [r7, #20]
400095d0:	e5971010 	ldr	r1, [r7, #16]
400095d4:	e5810014 	str	r0, [r1, #20]
400095d8:	e5970010 	ldr	r0, [r7, #16]
400095dc:	e5971014 	ldr	r1, [r7, #20]
400095e0:	e5810010 	str	r0, [r1, #16]
400095e4:	e28d0004 	add	r0, sp, #4
400095e8:	e5971010 	ldr	r1, [r7, #16]
400095ec:	e5810018 	str	r0, [r1, #24]
400095f0:	e5970010 	ldr	r0, [r7, #16]
400095f4:	e58d0004 	str	r0, [sp, #4]
400095f8:	e5970000 	ldr	r0, [r7]
400095fc:	e3500020 	cmp	r0, #32
40009600:	9a000006 	bls	40009620 <_tx_timer_thread_entry+0x13c>
40009604:	e5970000 	ldr	r0, [r7]
40009608:	e2400020 	sub	r0, r0, #32
4000960c:	e5870000 	str	r0, [r7]
40009610:	e3a08000 	mov	r8, #0
40009614:	e587d018 	str	sp, [r7, #24]
40009618:	e5877010 	str	r7, [r7, #16]
4000961c:	ea00000b 	b	40009650 <_tx_timer_thread_entry+0x16c>
40009620:	e5978008 	ldr	r8, [r7, #8]
40009624:	e597900c 	ldr	r9, [r7, #12]
40009628:	e5970004 	ldr	r0, [r7, #4]
4000962c:	e5870000 	str	r0, [r7]
40009630:	e5970000 	ldr	r0, [r7]
40009634:	e3500000 	cmp	r0, #0
40009638:	0a000002 	beq	40009648 <_tx_timer_thread_entry+0x164>
4000963c:	e587d018 	str	sp, [r7, #24]
40009640:	e5877010 	str	r7, [r7, #16]
40009644:	ea000001 	b	40009650 <_tx_timer_thread_entry+0x16c>
40009648:	e3a00000 	mov	r0, #0
4000964c:	e5870018 	str	r0, [r7, #24]
40009650:	e121f005 	msr	CPSR_c, r5
40009654:	e3580000 	cmp	r8, #0
40009658:	0a000001 	beq	40009664 <_tx_timer_thread_entry+0x180>
4000965c:	e1a00009 	mov	r0, r9
40009660:	e12fff38 	blx	r8
40009664:	e10f5000 	mrs	r5, CPSR
40009668:	e3856080 	orr	r6, r5, #128	; 0x80
4000966c:	e121f006 	msr	CPSR_c, r6
40009670:	e1a0100d 	mov	r1, sp
40009674:	e5970018 	ldr	r0, [r7, #24]
40009678:	e1500001 	cmp	r0, r1
4000967c:	1a000007 	bne	400096a0 <_tx_timer_thread_entry+0x1bc>
40009680:	e3a00000 	mov	r0, #0
40009684:	e5870018 	str	r0, [r7, #24]
40009688:	e121f005 	msr	CPSR_c, r5
4000968c:	e1a00007 	mov	r0, r7
40009690:	ebffff58 	bl	400093f8 <_tx_timer_system_activate>
40009694:	e10f5000 	mrs	r5, CPSR
40009698:	e3856080 	orr	r6, r5, #128	; 0x80
4000969c:	e121f006 	msr	CPSR_c, r6
400096a0:	e121f005 	msr	CPSR_c, r5
400096a4:	e10f5000 	mrs	r5, CPSR
400096a8:	e3856080 	orr	r6, r5, #128	; 0x80
400096ac:	e121f006 	msr	CPSR_c, r6
400096b0:	e59d0004 	ldr	r0, [sp, #4]
400096b4:	e3500000 	cmp	r0, #0
400096b8:	1affffbb 	bne	400095ac <_tx_timer_thread_entry+0xc8>
400096bc:	e59f0058 	ldr	r0, [pc, #88]	; 4000971c <_tx_timer_thread_entry+0x238>
400096c0:	e5900000 	ldr	r0, [r0]
400096c4:	e3500000 	cmp	r0, #0
400096c8:	1a00000d 	bne	40009704 <_tx_timer_thread_entry+0x220>
400096cc:	e59fa04c 	ldr	sl, [pc, #76]	; 40009720 <_tx_timer_thread_entry+0x23c>
400096d0:	e3a00003 	mov	r0, #3
400096d4:	e58a0030 	str	r0, [sl, #48]	; 0x30
400096d8:	e3a00001 	mov	r0, #1
400096dc:	e58a0038 	str	r0, [sl, #56]	; 0x38
400096e0:	e59f003c 	ldr	r0, [pc, #60]	; 40009724 <_tx_timer_thread_entry+0x240>
400096e4:	e5900000 	ldr	r0, [r0]
400096e8:	e2800001 	add	r0, r0, #1
400096ec:	e59f1030 	ldr	r1, [pc, #48]	; 40009724 <_tx_timer_thread_entry+0x240>
400096f0:	e5810000 	str	r0, [r1]
400096f4:	e121f005 	msr	CPSR_c, r5
400096f8:	e1a0000a 	mov	r0, sl
400096fc:	ebfffd21 	bl	40008b88 <_tx_thread_system_suspend>
40009700:	ea000000 	b	40009708 <_tx_timer_thread_entry+0x224>
40009704:	e121f005 	msr	CPSR_c, r5
40009708:	eaffff7f 	b	4000950c <_tx_timer_thread_entry+0x28>
4000970c:	4154494d 	.word	0x4154494d
40009710:	40030e70 	.word	0x40030e70
40009714:	40030e6c 	.word	0x40030e6c
40009718:	40030e68 	.word	0x40030e68
4000971c:	40030e74 	.word	0x40030e74
40009720:	40032974 	.word	0x40032974
40009724:	40030e50 	.word	0x40030e50

40009728 <_tx_trace_initialize>:
40009728:	e3a00000 	mov	r0, #0
4000972c:	e59f102c 	ldr	r1, [pc, #44]	; 40009760 <_tx_trace_initialize+0x38>
40009730:	e5810000 	str	r0, [r1]
40009734:	e59f1028 	ldr	r1, [pc, #40]	; 40009764 <_tx_trace_initialize+0x3c>
40009738:	e5810000 	str	r0, [r1]
4000973c:	e59f1024 	ldr	r1, [pc, #36]	; 40009768 <_tx_trace_initialize+0x40>
40009740:	e5810000 	str	r0, [r1]
40009744:	e59f1020 	ldr	r1, [pc, #32]	; 4000976c <_tx_trace_initialize+0x44>
40009748:	e5810000 	str	r0, [r1]
4000974c:	e59f101c 	ldr	r1, [pc, #28]	; 40009770 <_tx_trace_initialize+0x48>
40009750:	e5810000 	str	r0, [r1]
40009754:	e59f1018 	ldr	r1, [pc, #24]	; 40009774 <_tx_trace_initialize+0x4c>
40009758:	e5810000 	str	r0, [r1]
4000975c:	e12fff1e 	bx	lr
40009760:	40030e8c 	.word	0x40030e8c
40009764:	40030e90 	.word	0x40030e90
40009768:	40030e94 	.word	0x40030e94
4000976c:	40030e98 	.word	0x40030e98
40009770:	40030e9c 	.word	0x40030e9c
40009774:	40030ea0 	.word	0x40030ea0

40009778 <_txe_byte_allocate>:
40009778:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000977c:	e1a04000 	mov	r4, r0
40009780:	e1a05001 	mov	r5, r1
40009784:	e1a06002 	mov	r6, r2
40009788:	e1a07003 	mov	r7, r3
4000978c:	e3540000 	cmp	r4, #0
40009790:	0a000003 	beq	400097a4 <_txe_byte_allocate+0x2c>
40009794:	e5940000 	ldr	r0, [r4]
40009798:	e59f10d4 	ldr	r1, [pc, #212]	; 40009874 <_txe_byte_allocate+0xfc>
4000979c:	e1500001 	cmp	r0, r1
400097a0:	0a000001 	beq	400097ac <_txe_byte_allocate+0x34>
400097a4:	e3a00002 	mov	r0, #2
400097a8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400097ac:	e3550000 	cmp	r5, #0
400097b0:	1a000001 	bne	400097bc <_txe_byte_allocate+0x44>
400097b4:	e3a00003 	mov	r0, #3
400097b8:	eafffffa 	b	400097a8 <_txe_byte_allocate+0x30>
400097bc:	e3560000 	cmp	r6, #0
400097c0:	0a000002 	beq	400097d0 <_txe_byte_allocate+0x58>
400097c4:	e594001c 	ldr	r0, [r4, #28]
400097c8:	e1500006 	cmp	r0, r6
400097cc:	2a000001 	bcs	400097d8 <_txe_byte_allocate+0x60>
400097d0:	e3a00005 	mov	r0, #5
400097d4:	eafffff3 	b	400097a8 <_txe_byte_allocate+0x30>
400097d8:	e59f0098 	ldr	r0, [pc, #152]	; 40009878 <_txe_byte_allocate+0x100>
400097dc:	e5908000 	ldr	r8, [r0]
400097e0:	e3570000 	cmp	r7, #0
400097e4:	0a000008 	beq	4000980c <_txe_byte_allocate+0x94>
400097e8:	e59f008c 	ldr	r0, [pc, #140]	; 4000987c <_txe_byte_allocate+0x104>
400097ec:	e5900000 	ldr	r0, [r0]
400097f0:	e3500000 	cmp	r0, #0
400097f4:	1a000002 	bne	40009804 <_txe_byte_allocate+0x8c>
400097f8:	e59f0080 	ldr	r0, [pc, #128]	; 40009880 <_txe_byte_allocate+0x108>
400097fc:	e1580000 	cmp	r8, r0
40009800:	1a000001 	bne	4000980c <_txe_byte_allocate+0x94>
40009804:	e3a00004 	mov	r0, #4
40009808:	eaffffe6 	b	400097a8 <_txe_byte_allocate+0x30>
4000980c:	e3580000 	cmp	r8, #0
40009810:	0a000008 	beq	40009838 <_txe_byte_allocate+0xc0>
40009814:	e59f0064 	ldr	r0, [pc, #100]	; 40009880 <_txe_byte_allocate+0x108>
40009818:	e1580000 	cmp	r8, r0
4000981c:	0a000003 	beq	40009830 <_txe_byte_allocate+0xb8>
40009820:	e59f0054 	ldr	r0, [pc, #84]	; 4000987c <_txe_byte_allocate+0x104>
40009824:	e5900000 	ldr	r0, [r0]
40009828:	e3500000 	cmp	r0, #0
4000982c:	0a000008 	beq	40009854 <_txe_byte_allocate+0xdc>
40009830:	e3a00013 	mov	r0, #19
40009834:	eaffffdb 	b	400097a8 <_txe_byte_allocate+0x30>
40009838:	e59f003c 	ldr	r0, [pc, #60]	; 4000987c <_txe_byte_allocate+0x104>
4000983c:	e5900000 	ldr	r0, [r0]
40009840:	e59f103c 	ldr	r1, [pc, #60]	; 40009884 <_txe_byte_allocate+0x10c>
40009844:	e1500001 	cmp	r0, r1
40009848:	2a000001 	bcs	40009854 <_txe_byte_allocate+0xdc>
4000984c:	e3a00013 	mov	r0, #19
40009850:	eaffffd4 	b	400097a8 <_txe_byte_allocate+0x30>
40009854:	e1a03007 	mov	r3, r7
40009858:	e1a02006 	mov	r2, r6
4000985c:	e1a01005 	mov	r1, r5
40009860:	e1a00004 	mov	r0, r4
40009864:	eb0005bf 	bl	4000af68 <_tx_byte_allocate>
40009868:	e1a09000 	mov	r9, r0
4000986c:	e1a00009 	mov	r0, r9
40009870:	eaffffcc 	b	400097a8 <_txe_byte_allocate+0x30>
40009874:	42595445 	.word	0x42595445
40009878:	40030e34 	.word	0x40030e34
4000987c:	40030e2c 	.word	0x40030e2c
40009880:	40032974 	.word	0x40032974
40009884:	f0f0f0f0 	.word	0xf0f0f0f0

40009888 <_txe_byte_pool_create>:
40009888:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000988c:	e1a04000 	mov	r4, r0
40009890:	e1a05001 	mov	r5, r1
40009894:	e1a06002 	mov	r6, r2
40009898:	e1a07003 	mov	r7, r3
4000989c:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
400098a0:	e3540000 	cmp	r4, #0
400098a4:	0a000001 	beq	400098b0 <_txe_byte_pool_create+0x28>
400098a8:	e3580034 	cmp	r8, #52	; 0x34
400098ac:	0a000001 	beq	400098b8 <_txe_byte_pool_create+0x30>
400098b0:	e3a00002 	mov	r0, #2
400098b4:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400098b8:	e10f9000 	mrs	r9, CPSR
400098bc:	e389a080 	orr	sl, r9, #128	; 0x80
400098c0:	e121f00a 	msr	CPSR_c, sl
400098c4:	e59f0130 	ldr	r0, [pc, #304]	; 400099fc <_txe_byte_pool_create+0x174>
400098c8:	e5900000 	ldr	r0, [r0]
400098cc:	e2800001 	add	r0, r0, #1
400098d0:	e59f1124 	ldr	r1, [pc, #292]	; 400099fc <_txe_byte_pool_create+0x174>
400098d4:	e5810000 	str	r0, [r1]
400098d8:	e121f009 	msr	CPSR_c, r9
400098dc:	e59f011c 	ldr	r0, [pc, #284]	; 40009a00 <_txe_byte_pool_create+0x178>
400098e0:	e5900000 	ldr	r0, [r0]
400098e4:	e58d0004 	str	r0, [sp, #4]
400098e8:	e3a0b000 	mov	fp, #0
400098ec:	ea000007 	b	40009910 <_txe_byte_pool_create+0x88>
400098f0:	e59d0004 	ldr	r0, [sp, #4]
400098f4:	e1540000 	cmp	r4, r0
400098f8:	1a000000 	bne	40009900 <_txe_byte_pool_create+0x78>
400098fc:	ea000007 	b	40009920 <_txe_byte_pool_create+0x98>
40009900:	e59d0004 	ldr	r0, [sp, #4]
40009904:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009908:	e58d0004 	str	r0, [sp, #4]
4000990c:	e28bb001 	add	fp, fp, #1
40009910:	e59f00ec 	ldr	r0, [pc, #236]	; 40009a04 <_txe_byte_pool_create+0x17c>
40009914:	e5900000 	ldr	r0, [r0]
40009918:	e15b0000 	cmp	fp, r0
4000991c:	3afffff3 	bcc	400098f0 <_txe_byte_pool_create+0x68>
40009920:	e1a00000 	nop			; (mov r0, r0)
40009924:	e10f9000 	mrs	r9, CPSR
40009928:	e389a080 	orr	sl, r9, #128	; 0x80
4000992c:	e121f00a 	msr	CPSR_c, sl
40009930:	e59f00c4 	ldr	r0, [pc, #196]	; 400099fc <_txe_byte_pool_create+0x174>
40009934:	e5900000 	ldr	r0, [r0]
40009938:	e2400001 	sub	r0, r0, #1
4000993c:	e59f10b8 	ldr	r1, [pc, #184]	; 400099fc <_txe_byte_pool_create+0x174>
40009940:	e5810000 	str	r0, [r1]
40009944:	e121f009 	msr	CPSR_c, r9
40009948:	eb001609 	bl	4000f174 <_tx_thread_system_preempt_check>
4000994c:	e59d0004 	ldr	r0, [sp, #4]
40009950:	e1540000 	cmp	r4, r0
40009954:	1a000001 	bne	40009960 <_txe_byte_pool_create+0xd8>
40009958:	e3a00002 	mov	r0, #2
4000995c:	eaffffd4 	b	400098b4 <_txe_byte_pool_create+0x2c>
40009960:	e3560000 	cmp	r6, #0
40009964:	1a000001 	bne	40009970 <_txe_byte_pool_create+0xe8>
40009968:	e3a00003 	mov	r0, #3
4000996c:	eaffffd0 	b	400098b4 <_txe_byte_pool_create+0x2c>
40009970:	e3570064 	cmp	r7, #100	; 0x64
40009974:	2a000001 	bcs	40009980 <_txe_byte_pool_create+0xf8>
40009978:	e3a00005 	mov	r0, #5
4000997c:	eaffffcc 	b	400098b4 <_txe_byte_pool_create+0x2c>
40009980:	e59f0080 	ldr	r0, [pc, #128]	; 40009a08 <_txe_byte_pool_create+0x180>
40009984:	e5900000 	ldr	r0, [r0]
40009988:	e58d0000 	str	r0, [sp]
4000998c:	e59d0000 	ldr	r0, [sp]
40009990:	e3500000 	cmp	r0, #0
40009994:	0a000009 	beq	400099c0 <_txe_byte_pool_create+0x138>
40009998:	e59f106c 	ldr	r1, [pc, #108]	; 40009a0c <_txe_byte_pool_create+0x184>
4000999c:	e59d0000 	ldr	r0, [sp]
400099a0:	e1500001 	cmp	r0, r1
400099a4:	0a000003 	beq	400099b8 <_txe_byte_pool_create+0x130>
400099a8:	e59f0060 	ldr	r0, [pc, #96]	; 40009a10 <_txe_byte_pool_create+0x188>
400099ac:	e5900000 	ldr	r0, [r0]
400099b0:	e3500000 	cmp	r0, #0
400099b4:	0a000008 	beq	400099dc <_txe_byte_pool_create+0x154>
400099b8:	e3a00013 	mov	r0, #19
400099bc:	eaffffbc 	b	400098b4 <_txe_byte_pool_create+0x2c>
400099c0:	e59f0048 	ldr	r0, [pc, #72]	; 40009a10 <_txe_byte_pool_create+0x188>
400099c4:	e5900000 	ldr	r0, [r0]
400099c8:	e59f1044 	ldr	r1, [pc, #68]	; 40009a14 <_txe_byte_pool_create+0x18c>
400099cc:	e1500001 	cmp	r0, r1
400099d0:	2a000001 	bcs	400099dc <_txe_byte_pool_create+0x154>
400099d4:	e3a00013 	mov	r0, #19
400099d8:	eaffffb5 	b	400098b4 <_txe_byte_pool_create+0x2c>
400099dc:	e1a03007 	mov	r3, r7
400099e0:	e1a02006 	mov	r2, r6
400099e4:	e1a01005 	mov	r1, r5
400099e8:	e1a00004 	mov	r0, r4
400099ec:	eb000643 	bl	4000b300 <_tx_byte_pool_create>
400099f0:	e58d0008 	str	r0, [sp, #8]
400099f4:	e59d0008 	ldr	r0, [sp, #8]
400099f8:	eaffffad 	b	400098b4 <_txe_byte_pool_create+0x2c>
400099fc:	40030e50 	.word	0x40030e50
40009a00:	40030ed0 	.word	0x40030ed0
40009a04:	40030ed4 	.word	0x40030ed4
40009a08:	40030e34 	.word	0x40030e34
40009a0c:	40032974 	.word	0x40032974
40009a10:	40030e2c 	.word	0x40030e2c
40009a14:	f0f0f0f0 	.word	0xf0f0f0f0

40009a18 <_txe_byte_pool_delete>:
40009a18:	e92d4070 	push	{r4, r5, r6, lr}
40009a1c:	e1a04000 	mov	r4, r0
40009a20:	e3540000 	cmp	r4, #0
40009a24:	0a000003 	beq	40009a38 <_txe_byte_pool_delete+0x20>
40009a28:	e5940000 	ldr	r0, [r4]
40009a2c:	e59f1054 	ldr	r1, [pc, #84]	; 40009a88 <_txe_byte_pool_delete+0x70>
40009a30:	e1500001 	cmp	r0, r1
40009a34:	0a000001 	beq	40009a40 <_txe_byte_pool_delete+0x28>
40009a38:	e3a00002 	mov	r0, #2
40009a3c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009a40:	e59f0044 	ldr	r0, [pc, #68]	; 40009a8c <_txe_byte_pool_delete+0x74>
40009a44:	e5905000 	ldr	r5, [r0]
40009a48:	e3550000 	cmp	r5, #0
40009a4c:	0a000006 	beq	40009a6c <_txe_byte_pool_delete+0x54>
40009a50:	e59f0038 	ldr	r0, [pc, #56]	; 40009a90 <_txe_byte_pool_delete+0x78>
40009a54:	e5900000 	ldr	r0, [r0]
40009a58:	e3500000 	cmp	r0, #0
40009a5c:	1a000002 	bne	40009a6c <_txe_byte_pool_delete+0x54>
40009a60:	e59f002c 	ldr	r0, [pc, #44]	; 40009a94 <_txe_byte_pool_delete+0x7c>
40009a64:	e1550000 	cmp	r5, r0
40009a68:	1a000001 	bne	40009a74 <_txe_byte_pool_delete+0x5c>
40009a6c:	e3a00013 	mov	r0, #19
40009a70:	eafffff1 	b	40009a3c <_txe_byte_pool_delete+0x24>
40009a74:	e1a00004 	mov	r0, r4
40009a78:	eb0006b6 	bl	4000b558 <_tx_byte_pool_delete>
40009a7c:	e1a06000 	mov	r6, r0
40009a80:	e1a00006 	mov	r0, r6
40009a84:	eaffffec 	b	40009a3c <_txe_byte_pool_delete+0x24>
40009a88:	42595445 	.word	0x42595445
40009a8c:	40030e34 	.word	0x40030e34
40009a90:	40030e2c 	.word	0x40030e2c
40009a94:	40032974 	.word	0x40032974

40009a98 <_txe_byte_release>:
40009a98:	e92d4070 	push	{r4, r5, r6, lr}
40009a9c:	e1a04000 	mov	r4, r0
40009aa0:	e3540000 	cmp	r4, #0
40009aa4:	1a000001 	bne	40009ab0 <_txe_byte_release+0x18>
40009aa8:	e3a00003 	mov	r0, #3
40009aac:	e8bd8070 	pop	{r4, r5, r6, pc}
40009ab0:	e59f005c 	ldr	r0, [pc, #92]	; 40009b14 <_txe_byte_release+0x7c>
40009ab4:	e5905000 	ldr	r5, [r0]
40009ab8:	e3550000 	cmp	r5, #0
40009abc:	0a000008 	beq	40009ae4 <_txe_byte_release+0x4c>
40009ac0:	e59f0050 	ldr	r0, [pc, #80]	; 40009b18 <_txe_byte_release+0x80>
40009ac4:	e1550000 	cmp	r5, r0
40009ac8:	0a000003 	beq	40009adc <_txe_byte_release+0x44>
40009acc:	e59f0048 	ldr	r0, [pc, #72]	; 40009b1c <_txe_byte_release+0x84>
40009ad0:	e5900000 	ldr	r0, [r0]
40009ad4:	e3500000 	cmp	r0, #0
40009ad8:	0a000008 	beq	40009b00 <_txe_byte_release+0x68>
40009adc:	e3a00013 	mov	r0, #19
40009ae0:	eafffff1 	b	40009aac <_txe_byte_release+0x14>
40009ae4:	e59f0030 	ldr	r0, [pc, #48]	; 40009b1c <_txe_byte_release+0x84>
40009ae8:	e5900000 	ldr	r0, [r0]
40009aec:	e59f102c 	ldr	r1, [pc, #44]	; 40009b20 <_txe_byte_release+0x88>
40009af0:	e1500001 	cmp	r0, r1
40009af4:	2a000001 	bcs	40009b00 <_txe_byte_release+0x68>
40009af8:	e3a00013 	mov	r0, #19
40009afc:	eaffffea 	b	40009aac <_txe_byte_release+0x14>
40009b00:	e1a00004 	mov	r0, r4
40009b04:	eb000794 	bl	4000b95c <_tx_byte_release>
40009b08:	e1a06000 	mov	r6, r0
40009b0c:	e1a00006 	mov	r0, r6
40009b10:	eaffffe5 	b	40009aac <_txe_byte_release+0x14>
40009b14:	40030e34 	.word	0x40030e34
40009b18:	40032974 	.word	0x40032974
40009b1c:	40030e2c 	.word	0x40030e2c
40009b20:	f0f0f0f0 	.word	0xf0f0f0f0

40009b24 <_txe_event_flags_create>:
40009b24:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009b28:	e1a04000 	mov	r4, r0
40009b2c:	e1a05001 	mov	r5, r1
40009b30:	e1a06002 	mov	r6, r2
40009b34:	e3540000 	cmp	r4, #0
40009b38:	0a000001 	beq	40009b44 <_txe_event_flags_create+0x20>
40009b3c:	e3560028 	cmp	r6, #40	; 0x28
40009b40:	0a000001 	beq	40009b4c <_txe_event_flags_create+0x28>
40009b44:	e3a00006 	mov	r0, #6
40009b48:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009b4c:	e10f7000 	mrs	r7, CPSR
40009b50:	e3878080 	orr	r8, r7, #128	; 0x80
40009b54:	e121f008 	msr	CPSR_c, r8
40009b58:	e59f00e8 	ldr	r0, [pc, #232]	; 40009c48 <_txe_event_flags_create+0x124>
40009b5c:	e5900000 	ldr	r0, [r0]
40009b60:	e2800001 	add	r0, r0, #1
40009b64:	e59f10dc 	ldr	r1, [pc, #220]	; 40009c48 <_txe_event_flags_create+0x124>
40009b68:	e5810000 	str	r0, [r1]
40009b6c:	e121f007 	msr	CPSR_c, r7
40009b70:	e59f00d4 	ldr	r0, [pc, #212]	; 40009c4c <_txe_event_flags_create+0x128>
40009b74:	e590a000 	ldr	sl, [r0]
40009b78:	e3a09000 	mov	r9, #0
40009b7c:	ea000004 	b	40009b94 <_txe_event_flags_create+0x70>
40009b80:	e154000a 	cmp	r4, sl
40009b84:	1a000000 	bne	40009b8c <_txe_event_flags_create+0x68>
40009b88:	ea000005 	b	40009ba4 <_txe_event_flags_create+0x80>
40009b8c:	e59aa018 	ldr	sl, [sl, #24]
40009b90:	e2899001 	add	r9, r9, #1
40009b94:	e59f00b4 	ldr	r0, [pc, #180]	; 40009c50 <_txe_event_flags_create+0x12c>
40009b98:	e5900000 	ldr	r0, [r0]
40009b9c:	e1590000 	cmp	r9, r0
40009ba0:	3afffff6 	bcc	40009b80 <_txe_event_flags_create+0x5c>
40009ba4:	e1a00000 	nop			; (mov r0, r0)
40009ba8:	e10f7000 	mrs	r7, CPSR
40009bac:	e3878080 	orr	r8, r7, #128	; 0x80
40009bb0:	e121f008 	msr	CPSR_c, r8
40009bb4:	e59f008c 	ldr	r0, [pc, #140]	; 40009c48 <_txe_event_flags_create+0x124>
40009bb8:	e5900000 	ldr	r0, [r0]
40009bbc:	e2400001 	sub	r0, r0, #1
40009bc0:	e59f1080 	ldr	r1, [pc, #128]	; 40009c48 <_txe_event_flags_create+0x124>
40009bc4:	e5810000 	str	r0, [r1]
40009bc8:	e121f007 	msr	CPSR_c, r7
40009bcc:	eb001568 	bl	4000f174 <_tx_thread_system_preempt_check>
40009bd0:	e154000a 	cmp	r4, sl
40009bd4:	1a000001 	bne	40009be0 <_txe_event_flags_create+0xbc>
40009bd8:	e3a00006 	mov	r0, #6
40009bdc:	eaffffd9 	b	40009b48 <_txe_event_flags_create+0x24>
40009be0:	e59f006c 	ldr	r0, [pc, #108]	; 40009c54 <_txe_event_flags_create+0x130>
40009be4:	e590b000 	ldr	fp, [r0]
40009be8:	e35b0000 	cmp	fp, #0
40009bec:	0a000008 	beq	40009c14 <_txe_event_flags_create+0xf0>
40009bf0:	e59f0060 	ldr	r0, [pc, #96]	; 40009c58 <_txe_event_flags_create+0x134>
40009bf4:	e15b0000 	cmp	fp, r0
40009bf8:	0a000003 	beq	40009c0c <_txe_event_flags_create+0xe8>
40009bfc:	e59f0058 	ldr	r0, [pc, #88]	; 40009c5c <_txe_event_flags_create+0x138>
40009c00:	e5900000 	ldr	r0, [r0]
40009c04:	e3500000 	cmp	r0, #0
40009c08:	0a000008 	beq	40009c30 <_txe_event_flags_create+0x10c>
40009c0c:	e3a00013 	mov	r0, #19
40009c10:	eaffffcc 	b	40009b48 <_txe_event_flags_create+0x24>
40009c14:	e59f0040 	ldr	r0, [pc, #64]	; 40009c5c <_txe_event_flags_create+0x138>
40009c18:	e5900000 	ldr	r0, [r0]
40009c1c:	e59f103c 	ldr	r1, [pc, #60]	; 40009c60 <_txe_event_flags_create+0x13c>
40009c20:	e1500001 	cmp	r0, r1
40009c24:	2a000001 	bcs	40009c30 <_txe_event_flags_create+0x10c>
40009c28:	e3a00013 	mov	r0, #19
40009c2c:	eaffffc5 	b	40009b48 <_txe_event_flags_create+0x24>
40009c30:	e1a01005 	mov	r1, r5
40009c34:	e1a00004 	mov	r0, r4
40009c38:	eb0007f9 	bl	4000bc24 <_tx_event_flags_create>
40009c3c:	e58d0000 	str	r0, [sp]
40009c40:	e59d0000 	ldr	r0, [sp]
40009c44:	eaffffbf 	b	40009b48 <_txe_event_flags_create+0x24>
40009c48:	40030e50 	.word	0x40030e50
40009c4c:	40030eb8 	.word	0x40030eb8
40009c50:	40030ebc 	.word	0x40030ebc
40009c54:	40030e34 	.word	0x40030e34
40009c58:	40032974 	.word	0x40032974
40009c5c:	40030e2c 	.word	0x40030e2c
40009c60:	f0f0f0f0 	.word	0xf0f0f0f0

40009c64 <_txe_event_flags_delete>:
40009c64:	e92d4070 	push	{r4, r5, r6, lr}
40009c68:	e1a04000 	mov	r4, r0
40009c6c:	e3540000 	cmp	r4, #0
40009c70:	0a000003 	beq	40009c84 <_txe_event_flags_delete+0x20>
40009c74:	e5940000 	ldr	r0, [r4]
40009c78:	e59f1054 	ldr	r1, [pc, #84]	; 40009cd4 <_txe_event_flags_delete+0x70>
40009c7c:	e1500001 	cmp	r0, r1
40009c80:	0a000001 	beq	40009c8c <_txe_event_flags_delete+0x28>
40009c84:	e3a00006 	mov	r0, #6
40009c88:	e8bd8070 	pop	{r4, r5, r6, pc}
40009c8c:	e59f0044 	ldr	r0, [pc, #68]	; 40009cd8 <_txe_event_flags_delete+0x74>
40009c90:	e5905000 	ldr	r5, [r0]
40009c94:	e3550000 	cmp	r5, #0
40009c98:	0a000006 	beq	40009cb8 <_txe_event_flags_delete+0x54>
40009c9c:	e59f0038 	ldr	r0, [pc, #56]	; 40009cdc <_txe_event_flags_delete+0x78>
40009ca0:	e5900000 	ldr	r0, [r0]
40009ca4:	e3500000 	cmp	r0, #0
40009ca8:	1a000002 	bne	40009cb8 <_txe_event_flags_delete+0x54>
40009cac:	e59f002c 	ldr	r0, [pc, #44]	; 40009ce0 <_txe_event_flags_delete+0x7c>
40009cb0:	e1550000 	cmp	r5, r0
40009cb4:	1a000001 	bne	40009cc0 <_txe_event_flags_delete+0x5c>
40009cb8:	e3a00013 	mov	r0, #19
40009cbc:	eafffff1 	b	40009c88 <_txe_event_flags_delete+0x24>
40009cc0:	e1a00004 	mov	r0, r4
40009cc4:	eb000849 	bl	4000bdf0 <_tx_event_flags_delete>
40009cc8:	e1a06000 	mov	r6, r0
40009ccc:	e1a00006 	mov	r0, r6
40009cd0:	eaffffec 	b	40009c88 <_txe_event_flags_delete+0x24>
40009cd4:	4456444e 	.word	0x4456444e
40009cd8:	40030e34 	.word	0x40030e34
40009cdc:	40030e2c 	.word	0x40030e2c
40009ce0:	40032974 	.word	0x40032974

40009ce4 <_txe_event_flags_get>:
40009ce4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009ce8:	e1a04000 	mov	r4, r0
40009cec:	e1a05001 	mov	r5, r1
40009cf0:	e1a06002 	mov	r6, r2
40009cf4:	e1a08003 	mov	r8, r3
40009cf8:	e59d9020 	ldr	r9, [sp, #32]
40009cfc:	e3540000 	cmp	r4, #0
40009d00:	0a000003 	beq	40009d14 <_txe_event_flags_get+0x30>
40009d04:	e5940000 	ldr	r0, [r4]
40009d08:	e59f1084 	ldr	r1, [pc, #132]	; 40009d94 <_txe_event_flags_get+0xb0>
40009d0c:	e1500001 	cmp	r0, r1
40009d10:	0a000001 	beq	40009d1c <_txe_event_flags_get+0x38>
40009d14:	e3a00006 	mov	r0, #6
40009d18:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009d1c:	e3580000 	cmp	r8, #0
40009d20:	1a000001 	bne	40009d2c <_txe_event_flags_get+0x48>
40009d24:	e3a00003 	mov	r0, #3
40009d28:	eafffffa 	b	40009d18 <_txe_event_flags_get+0x34>
40009d2c:	e3590000 	cmp	r9, #0
40009d30:	0a00000a 	beq	40009d60 <_txe_event_flags_get+0x7c>
40009d34:	e59f005c 	ldr	r0, [pc, #92]	; 40009d98 <_txe_event_flags_get+0xb4>
40009d38:	e5900000 	ldr	r0, [r0]
40009d3c:	e3500000 	cmp	r0, #0
40009d40:	1a000004 	bne	40009d58 <_txe_event_flags_get+0x74>
40009d44:	e59f0050 	ldr	r0, [pc, #80]	; 40009d9c <_txe_event_flags_get+0xb8>
40009d48:	e5900000 	ldr	r0, [r0]
40009d4c:	e59f104c 	ldr	r1, [pc, #76]	; 40009da0 <_txe_event_flags_get+0xbc>
40009d50:	e1500001 	cmp	r0, r1
40009d54:	1a000001 	bne	40009d60 <_txe_event_flags_get+0x7c>
40009d58:	e3a00004 	mov	r0, #4
40009d5c:	eaffffed 	b	40009d18 <_txe_event_flags_get+0x34>
40009d60:	e3560003 	cmp	r6, #3
40009d64:	9a000001 	bls	40009d70 <_txe_event_flags_get+0x8c>
40009d68:	e3a00008 	mov	r0, #8
40009d6c:	eaffffe9 	b	40009d18 <_txe_event_flags_get+0x34>
40009d70:	e1a03008 	mov	r3, r8
40009d74:	e1a02006 	mov	r2, r6
40009d78:	e1a01005 	mov	r1, r5
40009d7c:	e1a00004 	mov	r0, r4
40009d80:	e58d9000 	str	r9, [sp]
40009d84:	eb0008ac 	bl	4000c03c <_tx_event_flags_get>
40009d88:	e1a07000 	mov	r7, r0
40009d8c:	e1a00007 	mov	r0, r7
40009d90:	eaffffe0 	b	40009d18 <_txe_event_flags_get+0x34>
40009d94:	4456444e 	.word	0x4456444e
40009d98:	40030e2c 	.word	0x40030e2c
40009d9c:	40030e34 	.word	0x40030e34
40009da0:	40032974 	.word	0x40032974

40009da4 <_txe_event_flags_set>:
40009da4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40009da8:	e1a04000 	mov	r4, r0
40009dac:	e1a05001 	mov	r5, r1
40009db0:	e1a06002 	mov	r6, r2
40009db4:	e3540000 	cmp	r4, #0
40009db8:	0a000003 	beq	40009dcc <_txe_event_flags_set+0x28>
40009dbc:	e5940000 	ldr	r0, [r4]
40009dc0:	e59f1040 	ldr	r1, [pc, #64]	; 40009e08 <_txe_event_flags_set+0x64>
40009dc4:	e1500001 	cmp	r0, r1
40009dc8:	0a000001 	beq	40009dd4 <_txe_event_flags_set+0x30>
40009dcc:	e3a00006 	mov	r0, #6
40009dd0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40009dd4:	e3560002 	cmp	r6, #2
40009dd8:	0a000003 	beq	40009dec <_txe_event_flags_set+0x48>
40009ddc:	e3560000 	cmp	r6, #0
40009de0:	0a000001 	beq	40009dec <_txe_event_flags_set+0x48>
40009de4:	e3a00008 	mov	r0, #8
40009de8:	eafffff8 	b	40009dd0 <_txe_event_flags_set+0x2c>
40009dec:	e1a02006 	mov	r2, r6
40009df0:	e1a01005 	mov	r1, r5
40009df4:	e1a00004 	mov	r0, r4
40009df8:	eb000943 	bl	4000c30c <_tx_event_flags_set>
40009dfc:	e1a07000 	mov	r7, r0
40009e00:	e1a00007 	mov	r0, r7
40009e04:	eafffff1 	b	40009dd0 <_txe_event_flags_set+0x2c>
40009e08:	4456444e 	.word	0x4456444e

40009e0c <_txe_mutex_create>:
40009e0c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40009e10:	e1a04000 	mov	r4, r0
40009e14:	e1a05001 	mov	r5, r1
40009e18:	e1a06002 	mov	r6, r2
40009e1c:	e1a07003 	mov	r7, r3
40009e20:	e3540000 	cmp	r4, #0
40009e24:	0a000001 	beq	40009e30 <_txe_mutex_create+0x24>
40009e28:	e3570038 	cmp	r7, #56	; 0x38
40009e2c:	0a000001 	beq	40009e38 <_txe_mutex_create+0x2c>
40009e30:	e3a0001c 	mov	r0, #28
40009e34:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40009e38:	e10f0000 	mrs	r0, CPSR
40009e3c:	e58d0004 	str	r0, [sp, #4]
40009e40:	e59d0004 	ldr	r0, [sp, #4]
40009e44:	e3808080 	orr	r8, r0, #128	; 0x80
40009e48:	e121f008 	msr	CPSR_c, r8
40009e4c:	e59f0114 	ldr	r0, [pc, #276]	; 40009f68 <_txe_mutex_create+0x15c>
40009e50:	e5900000 	ldr	r0, [r0]
40009e54:	e2800001 	add	r0, r0, #1
40009e58:	e59f1108 	ldr	r1, [pc, #264]	; 40009f68 <_txe_mutex_create+0x15c>
40009e5c:	e5810000 	str	r0, [r1]
40009e60:	e59d0004 	ldr	r0, [sp, #4]
40009e64:	e121f000 	msr	CPSR_c, r0
40009e68:	e59f00fc 	ldr	r0, [pc, #252]	; 40009f6c <_txe_mutex_create+0x160>
40009e6c:	e590a000 	ldr	sl, [r0]
40009e70:	e3a09000 	mov	r9, #0
40009e74:	ea000004 	b	40009e8c <_txe_mutex_create+0x80>
40009e78:	e154000a 	cmp	r4, sl
40009e7c:	1a000000 	bne	40009e84 <_txe_mutex_create+0x78>
40009e80:	ea000005 	b	40009e9c <_txe_mutex_create+0x90>
40009e84:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
40009e88:	e2899001 	add	r9, r9, #1
40009e8c:	e59f00dc 	ldr	r0, [pc, #220]	; 40009f70 <_txe_mutex_create+0x164>
40009e90:	e5900000 	ldr	r0, [r0]
40009e94:	e1590000 	cmp	r9, r0
40009e98:	3afffff6 	bcc	40009e78 <_txe_mutex_create+0x6c>
40009e9c:	e1a00000 	nop			; (mov r0, r0)
40009ea0:	e10f0000 	mrs	r0, CPSR
40009ea4:	e58d0004 	str	r0, [sp, #4]
40009ea8:	e59d0004 	ldr	r0, [sp, #4]
40009eac:	e3808080 	orr	r8, r0, #128	; 0x80
40009eb0:	e121f008 	msr	CPSR_c, r8
40009eb4:	e59f00ac 	ldr	r0, [pc, #172]	; 40009f68 <_txe_mutex_create+0x15c>
40009eb8:	e5900000 	ldr	r0, [r0]
40009ebc:	e2400001 	sub	r0, r0, #1
40009ec0:	e59f10a0 	ldr	r1, [pc, #160]	; 40009f68 <_txe_mutex_create+0x15c>
40009ec4:	e5810000 	str	r0, [r1]
40009ec8:	e59d0004 	ldr	r0, [sp, #4]
40009ecc:	e121f000 	msr	CPSR_c, r0
40009ed0:	eb0014a7 	bl	4000f174 <_tx_thread_system_preempt_check>
40009ed4:	e154000a 	cmp	r4, sl
40009ed8:	1a000001 	bne	40009ee4 <_txe_mutex_create+0xd8>
40009edc:	e3a0001c 	mov	r0, #28
40009ee0:	eaffffd3 	b	40009e34 <_txe_mutex_create+0x28>
40009ee4:	e3560001 	cmp	r6, #1
40009ee8:	0a000003 	beq	40009efc <_txe_mutex_create+0xf0>
40009eec:	e3560000 	cmp	r6, #0
40009ef0:	0a000001 	beq	40009efc <_txe_mutex_create+0xf0>
40009ef4:	e3a0001f 	mov	r0, #31
40009ef8:	eaffffcd 	b	40009e34 <_txe_mutex_create+0x28>
40009efc:	e59f0070 	ldr	r0, [pc, #112]	; 40009f74 <_txe_mutex_create+0x168>
40009f00:	e590b000 	ldr	fp, [r0]
40009f04:	e35b0000 	cmp	fp, #0
40009f08:	0a000008 	beq	40009f30 <_txe_mutex_create+0x124>
40009f0c:	e59f0064 	ldr	r0, [pc, #100]	; 40009f78 <_txe_mutex_create+0x16c>
40009f10:	e15b0000 	cmp	fp, r0
40009f14:	0a000003 	beq	40009f28 <_txe_mutex_create+0x11c>
40009f18:	e59f005c 	ldr	r0, [pc, #92]	; 40009f7c <_txe_mutex_create+0x170>
40009f1c:	e5900000 	ldr	r0, [r0]
40009f20:	e3500000 	cmp	r0, #0
40009f24:	0a000008 	beq	40009f4c <_txe_mutex_create+0x140>
40009f28:	e3a00013 	mov	r0, #19
40009f2c:	eaffffc0 	b	40009e34 <_txe_mutex_create+0x28>
40009f30:	e59f0044 	ldr	r0, [pc, #68]	; 40009f7c <_txe_mutex_create+0x170>
40009f34:	e5900000 	ldr	r0, [r0]
40009f38:	e59f1040 	ldr	r1, [pc, #64]	; 40009f80 <_txe_mutex_create+0x174>
40009f3c:	e1500001 	cmp	r0, r1
40009f40:	2a000001 	bcs	40009f4c <_txe_mutex_create+0x140>
40009f44:	e3a00013 	mov	r0, #19
40009f48:	eaffffb9 	b	40009e34 <_txe_mutex_create+0x28>
40009f4c:	e1a02006 	mov	r2, r6
40009f50:	e1a01005 	mov	r1, r5
40009f54:	e1a00004 	mov	r0, r4
40009f58:	eb000a8f 	bl	4000c99c <_tx_mutex_create>
40009f5c:	e58d0000 	str	r0, [sp]
40009f60:	e59d0000 	ldr	r0, [sp]
40009f64:	eaffffb2 	b	40009e34 <_txe_mutex_create+0x28>
40009f68:	40030e50 	.word	0x40030e50
40009f6c:	40030ec0 	.word	0x40030ec0
40009f70:	40030ec4 	.word	0x40030ec4
40009f74:	40030e34 	.word	0x40030e34
40009f78:	40032974 	.word	0x40032974
40009f7c:	40030e2c 	.word	0x40030e2c
40009f80:	f0f0f0f0 	.word	0xf0f0f0f0

40009f84 <_txe_mutex_delete>:
40009f84:	e92d4070 	push	{r4, r5, r6, lr}
40009f88:	e1a04000 	mov	r4, r0
40009f8c:	e3540000 	cmp	r4, #0
40009f90:	0a000003 	beq	40009fa4 <_txe_mutex_delete+0x20>
40009f94:	e5940000 	ldr	r0, [r4]
40009f98:	e59f1054 	ldr	r1, [pc, #84]	; 40009ff4 <_txe_mutex_delete+0x70>
40009f9c:	e1500001 	cmp	r0, r1
40009fa0:	0a000001 	beq	40009fac <_txe_mutex_delete+0x28>
40009fa4:	e3a0001c 	mov	r0, #28
40009fa8:	e8bd8070 	pop	{r4, r5, r6, pc}
40009fac:	e59f0044 	ldr	r0, [pc, #68]	; 40009ff8 <_txe_mutex_delete+0x74>
40009fb0:	e5905000 	ldr	r5, [r0]
40009fb4:	e3550000 	cmp	r5, #0
40009fb8:	0a000006 	beq	40009fd8 <_txe_mutex_delete+0x54>
40009fbc:	e59f0038 	ldr	r0, [pc, #56]	; 40009ffc <_txe_mutex_delete+0x78>
40009fc0:	e5900000 	ldr	r0, [r0]
40009fc4:	e3500000 	cmp	r0, #0
40009fc8:	1a000002 	bne	40009fd8 <_txe_mutex_delete+0x54>
40009fcc:	e59f002c 	ldr	r0, [pc, #44]	; 4000a000 <_txe_mutex_delete+0x7c>
40009fd0:	e1550000 	cmp	r5, r0
40009fd4:	1a000001 	bne	40009fe0 <_txe_mutex_delete+0x5c>
40009fd8:	e3a00013 	mov	r0, #19
40009fdc:	eafffff1 	b	40009fa8 <_txe_mutex_delete+0x24>
40009fe0:	e1a00004 	mov	r0, r4
40009fe4:	eb000ae2 	bl	4000cb74 <_tx_mutex_delete>
40009fe8:	e1a06000 	mov	r6, r0
40009fec:	e1a00006 	mov	r0, r6
40009ff0:	eaffffec 	b	40009fa8 <_txe_mutex_delete+0x24>
40009ff4:	4d555445 	.word	0x4d555445
40009ff8:	40030e34 	.word	0x40030e34
40009ffc:	40030e2c 	.word	0x40030e2c
4000a000:	40032974 	.word	0x40032974

4000a004 <_txe_mutex_get>:
4000a004:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a008:	e1a04000 	mov	r4, r0
4000a00c:	e1a05001 	mov	r5, r1
4000a010:	e3540000 	cmp	r4, #0
4000a014:	0a000003 	beq	4000a028 <_txe_mutex_get+0x24>
4000a018:	e5940000 	ldr	r0, [r4]
4000a01c:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a0c4 <_txe_mutex_get+0xc0>
4000a020:	e1500001 	cmp	r0, r1
4000a024:	0a000001 	beq	4000a030 <_txe_mutex_get+0x2c>
4000a028:	e3a0001c 	mov	r0, #28
4000a02c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a030:	e59f0090 	ldr	r0, [pc, #144]	; 4000a0c8 <_txe_mutex_get+0xc4>
4000a034:	e5906000 	ldr	r6, [r0]
4000a038:	e3550000 	cmp	r5, #0
4000a03c:	0a000008 	beq	4000a064 <_txe_mutex_get+0x60>
4000a040:	e59f0084 	ldr	r0, [pc, #132]	; 4000a0cc <_txe_mutex_get+0xc8>
4000a044:	e5900000 	ldr	r0, [r0]
4000a048:	e3500000 	cmp	r0, #0
4000a04c:	1a000002 	bne	4000a05c <_txe_mutex_get+0x58>
4000a050:	e59f0078 	ldr	r0, [pc, #120]	; 4000a0d0 <_txe_mutex_get+0xcc>
4000a054:	e1560000 	cmp	r6, r0
4000a058:	1a000001 	bne	4000a064 <_txe_mutex_get+0x60>
4000a05c:	e3a00004 	mov	r0, #4
4000a060:	eafffff1 	b	4000a02c <_txe_mutex_get+0x28>
4000a064:	e3560000 	cmp	r6, #0
4000a068:	0a000008 	beq	4000a090 <_txe_mutex_get+0x8c>
4000a06c:	e59f005c 	ldr	r0, [pc, #92]	; 4000a0d0 <_txe_mutex_get+0xcc>
4000a070:	e1560000 	cmp	r6, r0
4000a074:	0a000003 	beq	4000a088 <_txe_mutex_get+0x84>
4000a078:	e59f004c 	ldr	r0, [pc, #76]	; 4000a0cc <_txe_mutex_get+0xc8>
4000a07c:	e5900000 	ldr	r0, [r0]
4000a080:	e3500000 	cmp	r0, #0
4000a084:	0a000008 	beq	4000a0ac <_txe_mutex_get+0xa8>
4000a088:	e3a00013 	mov	r0, #19
4000a08c:	eaffffe6 	b	4000a02c <_txe_mutex_get+0x28>
4000a090:	e59f0034 	ldr	r0, [pc, #52]	; 4000a0cc <_txe_mutex_get+0xc8>
4000a094:	e5900000 	ldr	r0, [r0]
4000a098:	e59f1034 	ldr	r1, [pc, #52]	; 4000a0d4 <_txe_mutex_get+0xd0>
4000a09c:	e1500001 	cmp	r0, r1
4000a0a0:	2a000001 	bcs	4000a0ac <_txe_mutex_get+0xa8>
4000a0a4:	e3a00013 	mov	r0, #19
4000a0a8:	eaffffdf 	b	4000a02c <_txe_mutex_get+0x28>
4000a0ac:	e1a01005 	mov	r1, r5
4000a0b0:	e1a00004 	mov	r0, r4
4000a0b4:	eb000b65 	bl	4000ce50 <_tx_mutex_get>
4000a0b8:	e1a07000 	mov	r7, r0
4000a0bc:	e1a00007 	mov	r0, r7
4000a0c0:	eaffffd9 	b	4000a02c <_txe_mutex_get+0x28>
4000a0c4:	4d555445 	.word	0x4d555445
4000a0c8:	40030e34 	.word	0x40030e34
4000a0cc:	40030e2c 	.word	0x40030e2c
4000a0d0:	40032974 	.word	0x40032974
4000a0d4:	f0f0f0f0 	.word	0xf0f0f0f0

4000a0d8 <_txe_mutex_put>:
4000a0d8:	e92d4070 	push	{r4, r5, r6, lr}
4000a0dc:	e1a04000 	mov	r4, r0
4000a0e0:	e3540000 	cmp	r4, #0
4000a0e4:	0a000003 	beq	4000a0f8 <_txe_mutex_put+0x20>
4000a0e8:	e5940000 	ldr	r0, [r4]
4000a0ec:	e59f1070 	ldr	r1, [pc, #112]	; 4000a164 <_txe_mutex_put+0x8c>
4000a0f0:	e1500001 	cmp	r0, r1
4000a0f4:	0a000001 	beq	4000a100 <_txe_mutex_put+0x28>
4000a0f8:	e3a0001c 	mov	r0, #28
4000a0fc:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a100:	e59f0060 	ldr	r0, [pc, #96]	; 4000a168 <_txe_mutex_put+0x90>
4000a104:	e5905000 	ldr	r5, [r0]
4000a108:	e3550000 	cmp	r5, #0
4000a10c:	0a000008 	beq	4000a134 <_txe_mutex_put+0x5c>
4000a110:	e59f0054 	ldr	r0, [pc, #84]	; 4000a16c <_txe_mutex_put+0x94>
4000a114:	e1550000 	cmp	r5, r0
4000a118:	0a000003 	beq	4000a12c <_txe_mutex_put+0x54>
4000a11c:	e59f004c 	ldr	r0, [pc, #76]	; 4000a170 <_txe_mutex_put+0x98>
4000a120:	e5900000 	ldr	r0, [r0]
4000a124:	e3500000 	cmp	r0, #0
4000a128:	0a000008 	beq	4000a150 <_txe_mutex_put+0x78>
4000a12c:	e3a00013 	mov	r0, #19
4000a130:	eafffff1 	b	4000a0fc <_txe_mutex_put+0x24>
4000a134:	e59f0034 	ldr	r0, [pc, #52]	; 4000a170 <_txe_mutex_put+0x98>
4000a138:	e5900000 	ldr	r0, [r0]
4000a13c:	e59f1030 	ldr	r1, [pc, #48]	; 4000a174 <_txe_mutex_put+0x9c>
4000a140:	e1500001 	cmp	r0, r1
4000a144:	2a000001 	bcs	4000a150 <_txe_mutex_put+0x78>
4000a148:	e3a00013 	mov	r0, #19
4000a14c:	eaffffea 	b	4000a0fc <_txe_mutex_put+0x24>
4000a150:	e1a00004 	mov	r0, r4
4000a154:	eb000c1c 	bl	4000d1cc <_tx_mutex_put>
4000a158:	e1a06000 	mov	r6, r0
4000a15c:	e1a00006 	mov	r0, r6
4000a160:	eaffffe5 	b	4000a0fc <_txe_mutex_put+0x24>
4000a164:	4d555445 	.word	0x4d555445
4000a168:	40030e34 	.word	0x40030e34
4000a16c:	40032974 	.word	0x40032974
4000a170:	40030e2c 	.word	0x40030e2c
4000a174:	f0f0f0f0 	.word	0xf0f0f0f0

4000a178 <_txe_queue_create>:
4000a178:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a17c:	e24dd014 	sub	sp, sp, #20
4000a180:	e1a04000 	mov	r4, r0
4000a184:	e1a05002 	mov	r5, r2
4000a188:	e1a06003 	mov	r6, r3
4000a18c:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a190:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a194:	e3540000 	cmp	r4, #0
4000a198:	0a000001 	beq	4000a1a4 <_txe_queue_create+0x2c>
4000a19c:	e358003c 	cmp	r8, #60	; 0x3c
4000a1a0:	0a000002 	beq	4000a1b0 <_txe_queue_create+0x38>
4000a1a4:	e3a00009 	mov	r0, #9
4000a1a8:	e28dd024 	add	sp, sp, #36	; 0x24
4000a1ac:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a1b0:	e10f9000 	mrs	r9, CPSR
4000a1b4:	e389a080 	orr	sl, r9, #128	; 0x80
4000a1b8:	e121f00a 	msr	CPSR_c, sl
4000a1bc:	e59f0150 	ldr	r0, [pc, #336]	; 4000a314 <_txe_queue_create+0x19c>
4000a1c0:	e5900000 	ldr	r0, [r0]
4000a1c4:	e2800001 	add	r0, r0, #1
4000a1c8:	e59f1144 	ldr	r1, [pc, #324]	; 4000a314 <_txe_queue_create+0x19c>
4000a1cc:	e5810000 	str	r0, [r1]
4000a1d0:	e121f009 	msr	CPSR_c, r9
4000a1d4:	e59f013c 	ldr	r0, [pc, #316]	; 4000a318 <_txe_queue_create+0x1a0>
4000a1d8:	e5900000 	ldr	r0, [r0]
4000a1dc:	e58d0008 	str	r0, [sp, #8]
4000a1e0:	e3a00000 	mov	r0, #0
4000a1e4:	e58d000c 	str	r0, [sp, #12]
4000a1e8:	ea000009 	b	4000a214 <_txe_queue_create+0x9c>
4000a1ec:	e59d0008 	ldr	r0, [sp, #8]
4000a1f0:	e1540000 	cmp	r4, r0
4000a1f4:	1a000000 	bne	4000a1fc <_txe_queue_create+0x84>
4000a1f8:	ea00000a 	b	4000a228 <_txe_queue_create+0xb0>
4000a1fc:	e59d0008 	ldr	r0, [sp, #8]
4000a200:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a204:	e58d0008 	str	r0, [sp, #8]
4000a208:	e59d000c 	ldr	r0, [sp, #12]
4000a20c:	e2800001 	add	r0, r0, #1
4000a210:	e58d000c 	str	r0, [sp, #12]
4000a214:	e59f1100 	ldr	r1, [pc, #256]	; 4000a31c <_txe_queue_create+0x1a4>
4000a218:	e59d000c 	ldr	r0, [sp, #12]
4000a21c:	e5911000 	ldr	r1, [r1]
4000a220:	e1500001 	cmp	r0, r1
4000a224:	3afffff0 	bcc	4000a1ec <_txe_queue_create+0x74>
4000a228:	e1a00000 	nop			; (mov r0, r0)
4000a22c:	e10f9000 	mrs	r9, CPSR
4000a230:	e389a080 	orr	sl, r9, #128	; 0x80
4000a234:	e121f00a 	msr	CPSR_c, sl
4000a238:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a314 <_txe_queue_create+0x19c>
4000a23c:	e5900000 	ldr	r0, [r0]
4000a240:	e2400001 	sub	r0, r0, #1
4000a244:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a314 <_txe_queue_create+0x19c>
4000a248:	e5810000 	str	r0, [r1]
4000a24c:	e121f009 	msr	CPSR_c, r9
4000a250:	eb0013c7 	bl	4000f174 <_tx_thread_system_preempt_check>
4000a254:	e59d0008 	ldr	r0, [sp, #8]
4000a258:	e1540000 	cmp	r4, r0
4000a25c:	1a000001 	bne	4000a268 <_txe_queue_create+0xf0>
4000a260:	e3a00009 	mov	r0, #9
4000a264:	eaffffcf 	b	4000a1a8 <_txe_queue_create+0x30>
4000a268:	e3560000 	cmp	r6, #0
4000a26c:	1a000001 	bne	4000a278 <_txe_queue_create+0x100>
4000a270:	e3a00003 	mov	r0, #3
4000a274:	eaffffcb 	b	4000a1a8 <_txe_queue_create+0x30>
4000a278:	e3550000 	cmp	r5, #0
4000a27c:	0a000001 	beq	4000a288 <_txe_queue_create+0x110>
4000a280:	e3550010 	cmp	r5, #16
4000a284:	9a000001 	bls	4000a290 <_txe_queue_create+0x118>
4000a288:	e3a00005 	mov	r0, #5
4000a28c:	eaffffc5 	b	4000a1a8 <_txe_queue_create+0x30>
4000a290:	e1550127 	cmp	r5, r7, lsr #2
4000a294:	9a000001 	bls	4000a2a0 <_txe_queue_create+0x128>
4000a298:	e3a00005 	mov	r0, #5
4000a29c:	eaffffc1 	b	4000a1a8 <_txe_queue_create+0x30>
4000a2a0:	e59f0078 	ldr	r0, [pc, #120]	; 4000a320 <_txe_queue_create+0x1a8>
4000a2a4:	e590b000 	ldr	fp, [r0]
4000a2a8:	e35b0000 	cmp	fp, #0
4000a2ac:	0a000008 	beq	4000a2d4 <_txe_queue_create+0x15c>
4000a2b0:	e59f006c 	ldr	r0, [pc, #108]	; 4000a324 <_txe_queue_create+0x1ac>
4000a2b4:	e15b0000 	cmp	fp, r0
4000a2b8:	0a000003 	beq	4000a2cc <_txe_queue_create+0x154>
4000a2bc:	e59f0064 	ldr	r0, [pc, #100]	; 4000a328 <_txe_queue_create+0x1b0>
4000a2c0:	e5900000 	ldr	r0, [r0]
4000a2c4:	e3500000 	cmp	r0, #0
4000a2c8:	0a000008 	beq	4000a2f0 <_txe_queue_create+0x178>
4000a2cc:	e3a00013 	mov	r0, #19
4000a2d0:	eaffffb4 	b	4000a1a8 <_txe_queue_create+0x30>
4000a2d4:	e59f004c 	ldr	r0, [pc, #76]	; 4000a328 <_txe_queue_create+0x1b0>
4000a2d8:	e5900000 	ldr	r0, [r0]
4000a2dc:	e59f1048 	ldr	r1, [pc, #72]	; 4000a32c <_txe_queue_create+0x1b4>
4000a2e0:	e1500001 	cmp	r0, r1
4000a2e4:	2a000001 	bcs	4000a2f0 <_txe_queue_create+0x178>
4000a2e8:	e3a00013 	mov	r0, #19
4000a2ec:	eaffffad 	b	4000a1a8 <_txe_queue_create+0x30>
4000a2f0:	e1a03006 	mov	r3, r6
4000a2f4:	e1a02005 	mov	r2, r5
4000a2f8:	e58d7000 	str	r7, [sp]
4000a2fc:	e1a00004 	mov	r0, r4
4000a300:	e59d1018 	ldr	r1, [sp, #24]
4000a304:	eb000ce5 	bl	4000d6a0 <_tx_queue_create>
4000a308:	e58d0010 	str	r0, [sp, #16]
4000a30c:	e59d0010 	ldr	r0, [sp, #16]
4000a310:	eaffffa4 	b	4000a1a8 <_txe_queue_create+0x30>
4000a314:	40030e50 	.word	0x40030e50
4000a318:	40030eb0 	.word	0x40030eb0
4000a31c:	40030eb4 	.word	0x40030eb4
4000a320:	40030e34 	.word	0x40030e34
4000a324:	40032974 	.word	0x40032974
4000a328:	40030e2c 	.word	0x40030e2c
4000a32c:	f0f0f0f0 	.word	0xf0f0f0f0

4000a330 <_txe_queue_front_send>:
4000a330:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a334:	e1a04000 	mov	r4, r0
4000a338:	e1a05001 	mov	r5, r1
4000a33c:	e1a06002 	mov	r6, r2
4000a340:	e3540000 	cmp	r4, #0
4000a344:	0a000003 	beq	4000a358 <_txe_queue_front_send+0x28>
4000a348:	e5940000 	ldr	r0, [r4]
4000a34c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a3c0 <_txe_queue_front_send+0x90>
4000a350:	e1500001 	cmp	r0, r1
4000a354:	0a000001 	beq	4000a360 <_txe_queue_front_send+0x30>
4000a358:	e3a00009 	mov	r0, #9
4000a35c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a360:	e3550000 	cmp	r5, #0
4000a364:	1a000001 	bne	4000a370 <_txe_queue_front_send+0x40>
4000a368:	e3a00003 	mov	r0, #3
4000a36c:	eafffffa 	b	4000a35c <_txe_queue_front_send+0x2c>
4000a370:	e3560000 	cmp	r6, #0
4000a374:	0a00000a 	beq	4000a3a4 <_txe_queue_front_send+0x74>
4000a378:	e59f0044 	ldr	r0, [pc, #68]	; 4000a3c4 <_txe_queue_front_send+0x94>
4000a37c:	e5900000 	ldr	r0, [r0]
4000a380:	e3500000 	cmp	r0, #0
4000a384:	1a000004 	bne	4000a39c <_txe_queue_front_send+0x6c>
4000a388:	e59f0038 	ldr	r0, [pc, #56]	; 4000a3c8 <_txe_queue_front_send+0x98>
4000a38c:	e5900000 	ldr	r0, [r0]
4000a390:	e59f1034 	ldr	r1, [pc, #52]	; 4000a3cc <_txe_queue_front_send+0x9c>
4000a394:	e1500001 	cmp	r0, r1
4000a398:	1a000001 	bne	4000a3a4 <_txe_queue_front_send+0x74>
4000a39c:	e3a00004 	mov	r0, #4
4000a3a0:	eaffffed 	b	4000a35c <_txe_queue_front_send+0x2c>
4000a3a4:	e1a02006 	mov	r2, r6
4000a3a8:	e1a01005 	mov	r1, r5
4000a3ac:	e1a00004 	mov	r0, r4
4000a3b0:	eb000d3d 	bl	4000d8ac <_tx_queue_front_send>
4000a3b4:	e1a07000 	mov	r7, r0
4000a3b8:	e1a00007 	mov	r0, r7
4000a3bc:	eaffffe6 	b	4000a35c <_txe_queue_front_send+0x2c>
4000a3c0:	51554555 	.word	0x51554555
4000a3c4:	40030e2c 	.word	0x40030e2c
4000a3c8:	40030e34 	.word	0x40030e34
4000a3cc:	40032974 	.word	0x40032974

4000a3d0 <_txe_queue_receive>:
4000a3d0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a3d4:	e1a04000 	mov	r4, r0
4000a3d8:	e1a05001 	mov	r5, r1
4000a3dc:	e1a06002 	mov	r6, r2
4000a3e0:	e3540000 	cmp	r4, #0
4000a3e4:	0a000003 	beq	4000a3f8 <_txe_queue_receive+0x28>
4000a3e8:	e5940000 	ldr	r0, [r4]
4000a3ec:	e59f106c 	ldr	r1, [pc, #108]	; 4000a460 <_txe_queue_receive+0x90>
4000a3f0:	e1500001 	cmp	r0, r1
4000a3f4:	0a000001 	beq	4000a400 <_txe_queue_receive+0x30>
4000a3f8:	e3a00009 	mov	r0, #9
4000a3fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a400:	e3550000 	cmp	r5, #0
4000a404:	1a000001 	bne	4000a410 <_txe_queue_receive+0x40>
4000a408:	e3a00003 	mov	r0, #3
4000a40c:	eafffffa 	b	4000a3fc <_txe_queue_receive+0x2c>
4000a410:	e3560000 	cmp	r6, #0
4000a414:	0a00000a 	beq	4000a444 <_txe_queue_receive+0x74>
4000a418:	e59f0044 	ldr	r0, [pc, #68]	; 4000a464 <_txe_queue_receive+0x94>
4000a41c:	e5900000 	ldr	r0, [r0]
4000a420:	e3500000 	cmp	r0, #0
4000a424:	1a000004 	bne	4000a43c <_txe_queue_receive+0x6c>
4000a428:	e59f0038 	ldr	r0, [pc, #56]	; 4000a468 <_txe_queue_receive+0x98>
4000a42c:	e5900000 	ldr	r0, [r0]
4000a430:	e59f1034 	ldr	r1, [pc, #52]	; 4000a46c <_txe_queue_receive+0x9c>
4000a434:	e1500001 	cmp	r0, r1
4000a438:	1a000001 	bne	4000a444 <_txe_queue_receive+0x74>
4000a43c:	e3a00004 	mov	r0, #4
4000a440:	eaffffed 	b	4000a3fc <_txe_queue_receive+0x2c>
4000a444:	e1a02006 	mov	r2, r6
4000a448:	e1a01005 	mov	r1, r5
4000a44c:	e1a00004 	mov	r0, r4
4000a450:	eb000e04 	bl	4000dc68 <_tx_queue_receive>
4000a454:	e1a07000 	mov	r7, r0
4000a458:	e1a00007 	mov	r0, r7
4000a45c:	eaffffe6 	b	4000a3fc <_txe_queue_receive+0x2c>
4000a460:	51554555 	.word	0x51554555
4000a464:	40030e2c 	.word	0x40030e2c
4000a468:	40030e34 	.word	0x40030e34
4000a46c:	40032974 	.word	0x40032974

4000a470 <_txe_queue_send>:
4000a470:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a474:	e1a04000 	mov	r4, r0
4000a478:	e1a05001 	mov	r5, r1
4000a47c:	e1a06002 	mov	r6, r2
4000a480:	e3540000 	cmp	r4, #0
4000a484:	0a000003 	beq	4000a498 <_txe_queue_send+0x28>
4000a488:	e5940000 	ldr	r0, [r4]
4000a48c:	e59f106c 	ldr	r1, [pc, #108]	; 4000a500 <_txe_queue_send+0x90>
4000a490:	e1500001 	cmp	r0, r1
4000a494:	0a000001 	beq	4000a4a0 <_txe_queue_send+0x30>
4000a498:	e3a00009 	mov	r0, #9
4000a49c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a4a0:	e3550000 	cmp	r5, #0
4000a4a4:	1a000001 	bne	4000a4b0 <_txe_queue_send+0x40>
4000a4a8:	e3a00003 	mov	r0, #3
4000a4ac:	eafffffa 	b	4000a49c <_txe_queue_send+0x2c>
4000a4b0:	e3560000 	cmp	r6, #0
4000a4b4:	0a00000a 	beq	4000a4e4 <_txe_queue_send+0x74>
4000a4b8:	e59f0044 	ldr	r0, [pc, #68]	; 4000a504 <_txe_queue_send+0x94>
4000a4bc:	e5900000 	ldr	r0, [r0]
4000a4c0:	e3500000 	cmp	r0, #0
4000a4c4:	1a000004 	bne	4000a4dc <_txe_queue_send+0x6c>
4000a4c8:	e59f0038 	ldr	r0, [pc, #56]	; 4000a508 <_txe_queue_send+0x98>
4000a4cc:	e5900000 	ldr	r0, [r0]
4000a4d0:	e59f1034 	ldr	r1, [pc, #52]	; 4000a50c <_txe_queue_send+0x9c>
4000a4d4:	e1500001 	cmp	r0, r1
4000a4d8:	1a000001 	bne	4000a4e4 <_txe_queue_send+0x74>
4000a4dc:	e3a00004 	mov	r0, #4
4000a4e0:	eaffffed 	b	4000a49c <_txe_queue_send+0x2c>
4000a4e4:	e1a02006 	mov	r2, r6
4000a4e8:	e1a01005 	mov	r1, r5
4000a4ec:	e1a00004 	mov	r0, r4
4000a4f0:	eb000ef4 	bl	4000e0c8 <_tx_queue_send>
4000a4f4:	e1a07000 	mov	r7, r0
4000a4f8:	e1a00007 	mov	r0, r7
4000a4fc:	eaffffe6 	b	4000a49c <_txe_queue_send+0x2c>
4000a500:	51554555 	.word	0x51554555
4000a504:	40030e2c 	.word	0x40030e2c
4000a508:	40030e34 	.word	0x40030e34
4000a50c:	40032974 	.word	0x40032974

4000a510 <_txe_thread_create>:
4000a510:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a514:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a518:	e1a04000 	mov	r4, r0
4000a51c:	e1a05002 	mov	r5, r2
4000a520:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a524:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a528:	e3540000 	cmp	r4, #0
4000a52c:	0a000002 	beq	4000a53c <_txe_thread_create+0x2c>
4000a530:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a534:	e35000a8 	cmp	r0, #168	; 0xa8
4000a538:	0a000002 	beq	4000a548 <_txe_thread_create+0x38>
4000a53c:	e3a0000e 	mov	r0, #14
4000a540:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a544:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a548:	e10f0000 	mrs	r0, CPSR
4000a54c:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a550:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a554:	e3800080 	orr	r0, r0, #128	; 0x80
4000a558:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a55c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a560:	e121f000 	msr	CPSR_c, r0
4000a564:	e59f01ec 	ldr	r0, [pc, #492]	; 4000a758 <_txe_thread_create+0x248>
4000a568:	e5900000 	ldr	r0, [r0]
4000a56c:	e2800001 	add	r0, r0, #1
4000a570:	e59f11e0 	ldr	r1, [pc, #480]	; 4000a758 <_txe_thread_create+0x248>
4000a574:	e5810000 	str	r0, [r1]
4000a578:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a57c:	e121f000 	msr	CPSR_c, r0
4000a580:	e59f01d4 	ldr	r0, [pc, #468]	; 4000a75c <_txe_thread_create+0x24c>
4000a584:	e5900000 	ldr	r0, [r0]
4000a588:	e58d0018 	str	r0, [sp, #24]
4000a58c:	e2470001 	sub	r0, r7, #1
4000a590:	e080b006 	add	fp, r0, r6
4000a594:	e3a00000 	mov	r0, #0
4000a598:	e58d001c 	str	r0, [sp, #28]
4000a59c:	ea00001d 	b	4000a618 <_txe_thread_create+0x108>
4000a5a0:	e59d0018 	ldr	r0, [sp, #24]
4000a5a4:	e1540000 	cmp	r4, r0
4000a5a8:	1a000000 	bne	4000a5b0 <_txe_thread_create+0xa0>
4000a5ac:	ea00001e 	b	4000a62c <_txe_thread_create+0x11c>
4000a5b0:	e59d0018 	ldr	r0, [sp, #24]
4000a5b4:	e590000c 	ldr	r0, [r0, #12]
4000a5b8:	e1500006 	cmp	r0, r6
4000a5bc:	8a000005 	bhi	4000a5d8 <_txe_thread_create+0xc8>
4000a5c0:	e59d0018 	ldr	r0, [sp, #24]
4000a5c4:	e5900010 	ldr	r0, [r0, #16]
4000a5c8:	e1500006 	cmp	r0, r6
4000a5cc:	9a000001 	bls	4000a5d8 <_txe_thread_create+0xc8>
4000a5d0:	e3a06000 	mov	r6, #0
4000a5d4:	ea000014 	b	4000a62c <_txe_thread_create+0x11c>
4000a5d8:	e59d0018 	ldr	r0, [sp, #24]
4000a5dc:	e590000c 	ldr	r0, [r0, #12]
4000a5e0:	e150000b 	cmp	r0, fp
4000a5e4:	8a000005 	bhi	4000a600 <_txe_thread_create+0xf0>
4000a5e8:	e59d0018 	ldr	r0, [sp, #24]
4000a5ec:	e5900010 	ldr	r0, [r0, #16]
4000a5f0:	e150000b 	cmp	r0, fp
4000a5f4:	9a000001 	bls	4000a600 <_txe_thread_create+0xf0>
4000a5f8:	e3a06000 	mov	r6, #0
4000a5fc:	ea00000a 	b	4000a62c <_txe_thread_create+0x11c>
4000a600:	e59d0018 	ldr	r0, [sp, #24]
4000a604:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a608:	e58d0018 	str	r0, [sp, #24]
4000a60c:	e59d001c 	ldr	r0, [sp, #28]
4000a610:	e2800001 	add	r0, r0, #1
4000a614:	e58d001c 	str	r0, [sp, #28]
4000a618:	e59f1140 	ldr	r1, [pc, #320]	; 4000a760 <_txe_thread_create+0x250>
4000a61c:	e59d001c 	ldr	r0, [sp, #28]
4000a620:	e5911000 	ldr	r1, [r1]
4000a624:	e1500001 	cmp	r0, r1
4000a628:	3affffdc 	bcc	4000a5a0 <_txe_thread_create+0x90>
4000a62c:	e1a00000 	nop			; (mov r0, r0)
4000a630:	e10f0000 	mrs	r0, CPSR
4000a634:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a638:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a63c:	e3800080 	orr	r0, r0, #128	; 0x80
4000a640:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a644:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a648:	e121f000 	msr	CPSR_c, r0
4000a64c:	e59f0104 	ldr	r0, [pc, #260]	; 4000a758 <_txe_thread_create+0x248>
4000a650:	e5900000 	ldr	r0, [r0]
4000a654:	e2400001 	sub	r0, r0, #1
4000a658:	e59f10f8 	ldr	r1, [pc, #248]	; 4000a758 <_txe_thread_create+0x248>
4000a65c:	e5810000 	str	r0, [r1]
4000a660:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a664:	e121f000 	msr	CPSR_c, r0
4000a668:	eb0012c1 	bl	4000f174 <_tx_thread_system_preempt_check>
4000a66c:	e59d0018 	ldr	r0, [sp, #24]
4000a670:	e1540000 	cmp	r4, r0
4000a674:	1a000001 	bne	4000a680 <_txe_thread_create+0x170>
4000a678:	e3a0000e 	mov	r0, #14
4000a67c:	eaffffaf 	b	4000a540 <_txe_thread_create+0x30>
4000a680:	e3560000 	cmp	r6, #0
4000a684:	0a000001 	beq	4000a690 <_txe_thread_create+0x180>
4000a688:	e3550000 	cmp	r5, #0
4000a68c:	1a000001 	bne	4000a698 <_txe_thread_create+0x188>
4000a690:	e3a00003 	mov	r0, #3
4000a694:	eaffffa9 	b	4000a540 <_txe_thread_create+0x30>
4000a698:	e35700c8 	cmp	r7, #200	; 0xc8
4000a69c:	2a000001 	bcs	4000a6a8 <_txe_thread_create+0x198>
4000a6a0:	e3a00005 	mov	r0, #5
4000a6a4:	eaffffa5 	b	4000a540 <_txe_thread_create+0x30>
4000a6a8:	e3580020 	cmp	r8, #32
4000a6ac:	3a000001 	bcc	4000a6b8 <_txe_thread_create+0x1a8>
4000a6b0:	e3a0000f 	mov	r0, #15
4000a6b4:	eaffffa1 	b	4000a540 <_txe_thread_create+0x30>
4000a6b8:	e1590008 	cmp	r9, r8
4000a6bc:	9a000001 	bls	4000a6c8 <_txe_thread_create+0x1b8>
4000a6c0:	e3a00018 	mov	r0, #24
4000a6c4:	eaffff9d 	b	4000a540 <_txe_thread_create+0x30>
4000a6c8:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a6cc:	e3500001 	cmp	r0, #1
4000a6d0:	9a000001 	bls	4000a6dc <_txe_thread_create+0x1cc>
4000a6d4:	e3a00010 	mov	r0, #16
4000a6d8:	eaffff98 	b	4000a540 <_txe_thread_create+0x30>
4000a6dc:	e59f0080 	ldr	r0, [pc, #128]	; 4000a764 <_txe_thread_create+0x254>
4000a6e0:	e590a000 	ldr	sl, [r0]
4000a6e4:	e35a0000 	cmp	sl, #0
4000a6e8:	0a000008 	beq	4000a710 <_txe_thread_create+0x200>
4000a6ec:	e59f0074 	ldr	r0, [pc, #116]	; 4000a768 <_txe_thread_create+0x258>
4000a6f0:	e15a0000 	cmp	sl, r0
4000a6f4:	0a000003 	beq	4000a708 <_txe_thread_create+0x1f8>
4000a6f8:	e59f006c 	ldr	r0, [pc, #108]	; 4000a76c <_txe_thread_create+0x25c>
4000a6fc:	e5900000 	ldr	r0, [r0]
4000a700:	e3500000 	cmp	r0, #0
4000a704:	0a000008 	beq	4000a72c <_txe_thread_create+0x21c>
4000a708:	e3a00013 	mov	r0, #19
4000a70c:	eaffff8b 	b	4000a540 <_txe_thread_create+0x30>
4000a710:	e59f0054 	ldr	r0, [pc, #84]	; 4000a76c <_txe_thread_create+0x25c>
4000a714:	e5900000 	ldr	r0, [r0]
4000a718:	e59f1050 	ldr	r1, [pc, #80]	; 4000a770 <_txe_thread_create+0x260>
4000a71c:	e1500001 	cmp	r0, r1
4000a720:	2a000001 	bcs	4000a72c <_txe_thread_create+0x21c>
4000a724:	e3a00013 	mov	r0, #19
4000a728:	eaffff84 	b	4000a540 <_txe_thread_create+0x30>
4000a72c:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a730:	e1cd21f0 	strd	r2, [sp, #16]
4000a734:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a738:	e1a02005 	mov	r2, r5
4000a73c:	e1a00004 	mov	r0, r4
4000a740:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a744:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a748:	eb000f49 	bl	4000e474 <_tx_thread_create>
4000a74c:	e58d0020 	str	r0, [sp, #32]
4000a750:	e59d0020 	ldr	r0, [sp, #32]
4000a754:	eaffff79 	b	4000a540 <_txe_thread_create+0x30>
4000a758:	40030e50 	.word	0x40030e50
4000a75c:	40030e3c 	.word	0x40030e3c
4000a760:	40030e40 	.word	0x40030e40
4000a764:	40030e34 	.word	0x40030e34
4000a768:	40032974 	.word	0x40032974
4000a76c:	40030e2c 	.word	0x40030e2c
4000a770:	f0f0f0f0 	.word	0xf0f0f0f0

4000a774 <_txe_thread_info_get>:
4000a774:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a778:	e24dd01c 	sub	sp, sp, #28
4000a77c:	e1a04000 	mov	r4, r0
4000a780:	e1a05001 	mov	r5, r1
4000a784:	e1a06002 	mov	r6, r2
4000a788:	e1a07003 	mov	r7, r3
4000a78c:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000a790:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000a794:	e3540000 	cmp	r4, #0
4000a798:	0a000003 	beq	4000a7ac <_txe_thread_info_get+0x38>
4000a79c:	e5940000 	ldr	r0, [r4]
4000a7a0:	e59f103c 	ldr	r1, [pc, #60]	; 4000a7e4 <_txe_thread_info_get+0x70>
4000a7a4:	e1500001 	cmp	r0, r1
4000a7a8:	0a000002 	beq	4000a7b8 <_txe_thread_info_get+0x44>
4000a7ac:	e3a0000e 	mov	r0, #14
4000a7b0:	e28dd01c 	add	sp, sp, #28
4000a7b4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a7b8:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000a7bc:	e58d3010 	str	r3, [sp, #16]
4000a7c0:	e1a03007 	mov	r3, r7
4000a7c4:	e1a02006 	mov	r2, r6
4000a7c8:	e1a01005 	mov	r1, r5
4000a7cc:	e1a00004 	mov	r0, r4
4000a7d0:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000a7d4:	eb000ff5 	bl	4000e7b0 <_tx_thread_info_get>
4000a7d8:	e58d0018 	str	r0, [sp, #24]
4000a7dc:	e59d0018 	ldr	r0, [sp, #24]
4000a7e0:	eafffff2 	b	4000a7b0 <_txe_thread_info_get+0x3c>
4000a7e4:	54485244 	.word	0x54485244

4000a7e8 <_txe_thread_priority_change>:
4000a7e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a7ec:	e1a04000 	mov	r4, r0
4000a7f0:	e1a05001 	mov	r5, r1
4000a7f4:	e1a06002 	mov	r6, r2
4000a7f8:	e3540000 	cmp	r4, #0
4000a7fc:	0a000003 	beq	4000a810 <_txe_thread_priority_change+0x28>
4000a800:	e5940000 	ldr	r0, [r4]
4000a804:	e59f1070 	ldr	r1, [pc, #112]	; 4000a87c <_txe_thread_priority_change+0x94>
4000a808:	e1500001 	cmp	r0, r1
4000a80c:	0a000001 	beq	4000a818 <_txe_thread_priority_change+0x30>
4000a810:	e3a0000e 	mov	r0, #14
4000a814:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a818:	e3560000 	cmp	r6, #0
4000a81c:	1a000001 	bne	4000a828 <_txe_thread_priority_change+0x40>
4000a820:	e3a00003 	mov	r0, #3
4000a824:	eafffffa 	b	4000a814 <_txe_thread_priority_change+0x2c>
4000a828:	e3550020 	cmp	r5, #32
4000a82c:	3a000001 	bcc	4000a838 <_txe_thread_priority_change+0x50>
4000a830:	e3a0000f 	mov	r0, #15
4000a834:	eafffff6 	b	4000a814 <_txe_thread_priority_change+0x2c>
4000a838:	e59f0040 	ldr	r0, [pc, #64]	; 4000a880 <_txe_thread_priority_change+0x98>
4000a83c:	e5900000 	ldr	r0, [r0]
4000a840:	e3500000 	cmp	r0, #0
4000a844:	0a000003 	beq	4000a858 <_txe_thread_priority_change+0x70>
4000a848:	e59f0034 	ldr	r0, [pc, #52]	; 4000a884 <_txe_thread_priority_change+0x9c>
4000a84c:	e5900000 	ldr	r0, [r0]
4000a850:	e3500000 	cmp	r0, #0
4000a854:	0a000001 	beq	4000a860 <_txe_thread_priority_change+0x78>
4000a858:	e3a00013 	mov	r0, #19
4000a85c:	eaffffec 	b	4000a814 <_txe_thread_priority_change+0x2c>
4000a860:	e1a02006 	mov	r2, r6
4000a864:	e1a01005 	mov	r1, r5
4000a868:	e1a00004 	mov	r0, r4
4000a86c:	eb001039 	bl	4000e958 <_tx_thread_priority_change>
4000a870:	e1a07000 	mov	r7, r0
4000a874:	e1a00007 	mov	r0, r7
4000a878:	eaffffe5 	b	4000a814 <_txe_thread_priority_change+0x2c>
4000a87c:	54485244 	.word	0x54485244
4000a880:	40030e34 	.word	0x40030e34
4000a884:	40030e2c 	.word	0x40030e2c

4000a888 <_txe_thread_relinquish>:
4000a888:	e92d4010 	push	{r4, lr}
4000a88c:	e59f0020 	ldr	r0, [pc, #32]	; 4000a8b4 <_txe_thread_relinquish+0x2c>
4000a890:	e5900000 	ldr	r0, [r0]
4000a894:	e3500000 	cmp	r0, #0
4000a898:	0a000004 	beq	4000a8b0 <_txe_thread_relinquish+0x28>
4000a89c:	e59f0014 	ldr	r0, [pc, #20]	; 4000a8b8 <_txe_thread_relinquish+0x30>
4000a8a0:	e5900000 	ldr	r0, [r0]
4000a8a4:	e3500000 	cmp	r0, #0
4000a8a8:	1a000000 	bne	4000a8b0 <_txe_thread_relinquish+0x28>
4000a8ac:	eb001091 	bl	4000eaf8 <_tx_thread_relinquish>
4000a8b0:	e8bd8010 	pop	{r4, pc}
4000a8b4:	40030e34 	.word	0x40030e34
4000a8b8:	40030e2c 	.word	0x40030e2c

4000a8bc <_txe_thread_resume>:
4000a8bc:	e92d4070 	push	{r4, r5, r6, lr}
4000a8c0:	e1a04000 	mov	r4, r0
4000a8c4:	e3540000 	cmp	r4, #0
4000a8c8:	0a000003 	beq	4000a8dc <_txe_thread_resume+0x20>
4000a8cc:	e5940000 	ldr	r0, [r4]
4000a8d0:	e59f1020 	ldr	r1, [pc, #32]	; 4000a8f8 <_txe_thread_resume+0x3c>
4000a8d4:	e1500001 	cmp	r0, r1
4000a8d8:	0a000001 	beq	4000a8e4 <_txe_thread_resume+0x28>
4000a8dc:	e3a0000e 	mov	r0, #14
4000a8e0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a8e4:	e1a00004 	mov	r0, r4
4000a8e8:	eb00113e 	bl	4000ede8 <_tx_thread_resume>
4000a8ec:	e1a05000 	mov	r5, r0
4000a8f0:	e1a00005 	mov	r0, r5
4000a8f4:	eafffff9 	b	4000a8e0 <_txe_thread_resume+0x24>
4000a8f8:	54485244 	.word	0x54485244

4000a8fc <_txe_timer_activate>:
4000a8fc:	e92d4070 	push	{r4, r5, r6, lr}
4000a900:	e1a04000 	mov	r4, r0
4000a904:	e3540000 	cmp	r4, #0
4000a908:	0a000003 	beq	4000a91c <_txe_timer_activate+0x20>
4000a90c:	e5940000 	ldr	r0, [r4]
4000a910:	e59f1020 	ldr	r1, [pc, #32]	; 4000a938 <_txe_timer_activate+0x3c>
4000a914:	e1500001 	cmp	r0, r1
4000a918:	0a000001 	beq	4000a924 <_txe_timer_activate+0x28>
4000a91c:	e3a00015 	mov	r0, #21
4000a920:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a924:	e1a00004 	mov	r0, r4
4000a928:	eb0013a4 	bl	4000f7c0 <_tx_timer_activate>
4000a92c:	e1a05000 	mov	r5, r0
4000a930:	e1a00005 	mov	r0, r5
4000a934:	eafffff9 	b	4000a920 <_txe_timer_activate+0x24>
4000a938:	4154494d 	.word	0x4154494d

4000a93c <_txe_timer_change>:
4000a93c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a940:	e1a04000 	mov	r4, r0
4000a944:	e1a05001 	mov	r5, r1
4000a948:	e1a06002 	mov	r6, r2
4000a94c:	e3540000 	cmp	r4, #0
4000a950:	0a000003 	beq	4000a964 <_txe_timer_change+0x28>
4000a954:	e5940000 	ldr	r0, [r4]
4000a958:	e59f1058 	ldr	r1, [pc, #88]	; 4000a9b8 <_txe_timer_change+0x7c>
4000a95c:	e1500001 	cmp	r0, r1
4000a960:	0a000001 	beq	4000a96c <_txe_timer_change+0x30>
4000a964:	e3a00015 	mov	r0, #21
4000a968:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a96c:	e3550000 	cmp	r5, #0
4000a970:	1a000001 	bne	4000a97c <_txe_timer_change+0x40>
4000a974:	e3a00016 	mov	r0, #22
4000a978:	eafffffa 	b	4000a968 <_txe_timer_change+0x2c>
4000a97c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a9bc <_txe_timer_change+0x80>
4000a980:	e5900000 	ldr	r0, [r0]
4000a984:	e3c0000f 	bic	r0, r0, #15
4000a988:	e59f1030 	ldr	r1, [pc, #48]	; 4000a9c0 <_txe_timer_change+0x84>
4000a98c:	e1500001 	cmp	r0, r1
4000a990:	1a000001 	bne	4000a99c <_txe_timer_change+0x60>
4000a994:	e3a00013 	mov	r0, #19
4000a998:	eafffff2 	b	4000a968 <_txe_timer_change+0x2c>
4000a99c:	e1a02006 	mov	r2, r6
4000a9a0:	e1a01005 	mov	r1, r5
4000a9a4:	e1a00004 	mov	r0, r4
4000a9a8:	eb0013d4 	bl	4000f900 <_tx_timer_change>
4000a9ac:	e1a07000 	mov	r7, r0
4000a9b0:	e1a00007 	mov	r0, r7
4000a9b4:	eaffffeb 	b	4000a968 <_txe_timer_change+0x2c>
4000a9b8:	4154494d 	.word	0x4154494d
4000a9bc:	40030e2c 	.word	0x40030e2c
4000a9c0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a9c4 <_txe_timer_create>:
4000a9c4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a9c8:	e24dd01c 	sub	sp, sp, #28
4000a9cc:	e1a04000 	mov	r4, r0
4000a9d0:	e1a05001 	mov	r5, r1
4000a9d4:	e1a06002 	mov	r6, r2
4000a9d8:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000a9dc:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000a9e0:	e3540000 	cmp	r4, #0
4000a9e4:	0a000001 	beq	4000a9f0 <_txe_timer_create+0x2c>
4000a9e8:	e358002c 	cmp	r8, #44	; 0x2c
4000a9ec:	0a000002 	beq	4000a9fc <_txe_timer_create+0x38>
4000a9f0:	e3a00015 	mov	r0, #21
4000a9f4:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000a9f8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a9fc:	e10f9000 	mrs	r9, CPSR
4000aa00:	e389a080 	orr	sl, r9, #128	; 0x80
4000aa04:	e121f00a 	msr	CPSR_c, sl
4000aa08:	e59f0160 	ldr	r0, [pc, #352]	; 4000ab70 <_txe_timer_create+0x1ac>
4000aa0c:	e5900000 	ldr	r0, [r0]
4000aa10:	e2800001 	add	r0, r0, #1
4000aa14:	e59f1154 	ldr	r1, [pc, #340]	; 4000ab70 <_txe_timer_create+0x1ac>
4000aa18:	e5810000 	str	r0, [r1]
4000aa1c:	e121f009 	msr	CPSR_c, r9
4000aa20:	e59f014c 	ldr	r0, [pc, #332]	; 4000ab74 <_txe_timer_create+0x1b0>
4000aa24:	e5900000 	ldr	r0, [r0]
4000aa28:	e58d0014 	str	r0, [sp, #20]
4000aa2c:	e3a00000 	mov	r0, #0
4000aa30:	e58d0018 	str	r0, [sp, #24]
4000aa34:	ea000009 	b	4000aa60 <_txe_timer_create+0x9c>
4000aa38:	e59d0014 	ldr	r0, [sp, #20]
4000aa3c:	e1540000 	cmp	r4, r0
4000aa40:	1a000000 	bne	4000aa48 <_txe_timer_create+0x84>
4000aa44:	ea00000a 	b	4000aa74 <_txe_timer_create+0xb0>
4000aa48:	e59d0014 	ldr	r0, [sp, #20]
4000aa4c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000aa50:	e58d0014 	str	r0, [sp, #20]
4000aa54:	e59d0018 	ldr	r0, [sp, #24]
4000aa58:	e2800001 	add	r0, r0, #1
4000aa5c:	e58d0018 	str	r0, [sp, #24]
4000aa60:	e59f1110 	ldr	r1, [pc, #272]	; 4000ab78 <_txe_timer_create+0x1b4>
4000aa64:	e59d0018 	ldr	r0, [sp, #24]
4000aa68:	e5911000 	ldr	r1, [r1]
4000aa6c:	e1500001 	cmp	r0, r1
4000aa70:	3afffff0 	bcc	4000aa38 <_txe_timer_create+0x74>
4000aa74:	e1a00000 	nop			; (mov r0, r0)
4000aa78:	e10f9000 	mrs	r9, CPSR
4000aa7c:	e389a080 	orr	sl, r9, #128	; 0x80
4000aa80:	e121f00a 	msr	CPSR_c, sl
4000aa84:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ab70 <_txe_timer_create+0x1ac>
4000aa88:	e5900000 	ldr	r0, [r0]
4000aa8c:	e2400001 	sub	r0, r0, #1
4000aa90:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ab70 <_txe_timer_create+0x1ac>
4000aa94:	e5810000 	str	r0, [r1]
4000aa98:	e121f009 	msr	CPSR_c, r9
4000aa9c:	eb0011b4 	bl	4000f174 <_tx_thread_system_preempt_check>
4000aaa0:	e59d0014 	ldr	r0, [sp, #20]
4000aaa4:	e1540000 	cmp	r4, r0
4000aaa8:	1a000001 	bne	4000aab4 <_txe_timer_create+0xf0>
4000aaac:	e3a00015 	mov	r0, #21
4000aab0:	eaffffcf 	b	4000a9f4 <_txe_timer_create+0x30>
4000aab4:	e3570000 	cmp	r7, #0
4000aab8:	1a000001 	bne	4000aac4 <_txe_timer_create+0x100>
4000aabc:	e3a00016 	mov	r0, #22
4000aac0:	eaffffcb 	b	4000a9f4 <_txe_timer_create+0x30>
4000aac4:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aac8:	e3500001 	cmp	r0, #1
4000aacc:	0a000004 	beq	4000aae4 <_txe_timer_create+0x120>
4000aad0:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000aad4:	e3500000 	cmp	r0, #0
4000aad8:	0a000001 	beq	4000aae4 <_txe_timer_create+0x120>
4000aadc:	e3a00017 	mov	r0, #23
4000aae0:	eaffffc3 	b	4000a9f4 <_txe_timer_create+0x30>
4000aae4:	e59f0090 	ldr	r0, [pc, #144]	; 4000ab7c <_txe_timer_create+0x1b8>
4000aae8:	e5900000 	ldr	r0, [r0]
4000aaec:	e58d0010 	str	r0, [sp, #16]
4000aaf0:	e59d0010 	ldr	r0, [sp, #16]
4000aaf4:	e3500000 	cmp	r0, #0
4000aaf8:	0a000009 	beq	4000ab24 <_txe_timer_create+0x160>
4000aafc:	e59f107c 	ldr	r1, [pc, #124]	; 4000ab80 <_txe_timer_create+0x1bc>
4000ab00:	e59d0010 	ldr	r0, [sp, #16]
4000ab04:	e1500001 	cmp	r0, r1
4000ab08:	0a000003 	beq	4000ab1c <_txe_timer_create+0x158>
4000ab0c:	e59f0070 	ldr	r0, [pc, #112]	; 4000ab84 <_txe_timer_create+0x1c0>
4000ab10:	e5900000 	ldr	r0, [r0]
4000ab14:	e3500000 	cmp	r0, #0
4000ab18:	0a000008 	beq	4000ab40 <_txe_timer_create+0x17c>
4000ab1c:	e3a00013 	mov	r0, #19
4000ab20:	eaffffb3 	b	4000a9f4 <_txe_timer_create+0x30>
4000ab24:	e59f0058 	ldr	r0, [pc, #88]	; 4000ab84 <_txe_timer_create+0x1c0>
4000ab28:	e5900000 	ldr	r0, [r0]
4000ab2c:	e59f1054 	ldr	r1, [pc, #84]	; 4000ab88 <_txe_timer_create+0x1c4>
4000ab30:	e1500001 	cmp	r0, r1
4000ab34:	2a000001 	bcs	4000ab40 <_txe_timer_create+0x17c>
4000ab38:	e3a00013 	mov	r0, #19
4000ab3c:	eaffffac 	b	4000a9f4 <_txe_timer_create+0x30>
4000ab40:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000ab44:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000ab48:	e98d000c 	stmib	sp, {r2, r3}
4000ab4c:	e58d7000 	str	r7, [sp]
4000ab50:	e1a02006 	mov	r2, r6
4000ab54:	e1a01005 	mov	r1, r5
4000ab58:	e1a00004 	mov	r0, r4
4000ab5c:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000ab60:	eb0013b1 	bl	4000fa2c <_tx_timer_create>
4000ab64:	e1a0b000 	mov	fp, r0
4000ab68:	e1a0000b 	mov	r0, fp
4000ab6c:	eaffffa0 	b	4000a9f4 <_txe_timer_create+0x30>
4000ab70:	40030e50 	.word	0x40030e50
4000ab74:	40030e78 	.word	0x40030e78
4000ab78:	40030e7c 	.word	0x40030e7c
4000ab7c:	40030e34 	.word	0x40030e34
4000ab80:	40032974 	.word	0x40032974
4000ab84:	40030e2c 	.word	0x40030e2c
4000ab88:	f0f0f0f0 	.word	0xf0f0f0f0

4000ab8c <_txe_timer_deactivate>:
4000ab8c:	e92d4070 	push	{r4, r5, r6, lr}
4000ab90:	e1a04000 	mov	r4, r0
4000ab94:	e3540000 	cmp	r4, #0
4000ab98:	0a000003 	beq	4000abac <_txe_timer_deactivate+0x20>
4000ab9c:	e5940000 	ldr	r0, [r4]
4000aba0:	e59f1020 	ldr	r1, [pc, #32]	; 4000abc8 <_txe_timer_deactivate+0x3c>
4000aba4:	e1500001 	cmp	r0, r1
4000aba8:	0a000001 	beq	4000abb4 <_txe_timer_deactivate+0x28>
4000abac:	e3a00015 	mov	r0, #21
4000abb0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000abb4:	e1a00004 	mov	r0, r4
4000abb8:	eb00141a 	bl	4000fc28 <_tx_timer_deactivate>
4000abbc:	e1a05000 	mov	r5, r0
4000abc0:	e1a00005 	mov	r0, r5
4000abc4:	eafffff9 	b	4000abb0 <_txe_timer_deactivate+0x24>
4000abc8:	4154494d 	.word	0x4154494d

4000abcc <_tx_thread_system_return>:
4000abcc:	e3a00000 	mov	r0, #0
4000abd0:	e10f1000 	mrs	r1, CPSR
4000abd4:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000abd8:	e3812080 	orr	r2, r1, #128	; 0x80
4000abdc:	e12ff002 	msr	CPSR_fsxc, r2
4000abe0:	e59f302c 	ldr	r3, [pc, #44]	; 4000ac14 <_tx_thread_system_return+0x48>
4000abe4:	e5930000 	ldr	r0, [r3]
4000abe8:	e59f2028 	ldr	r2, [pc, #40]	; 4000ac18 <_tx_thread_system_return+0x4c>
4000abec:	e5921000 	ldr	r1, [r2]
4000abf0:	e580d008 	str	sp, [r0, #8]
4000abf4:	e3a04000 	mov	r4, #0
4000abf8:	e3510000 	cmp	r1, #0
4000abfc:	0a000002 	beq	4000ac0c <_tx_thread_system_return+0x40>
4000ac00:	e590101c 	ldr	r1, [r0, #28]
4000ac04:	e5824000 	str	r4, [r2]
4000ac08:	e5801018 	str	r1, [r0, #24]
4000ac0c:	e5834000 	str	r4, [r3]
4000ac10:	ea000001 	b	4000ac1c <_tx_thread_schedule>
4000ac14:	40030e34 	.word	0x40030e34
4000ac18:	40030e60 	.word	0x40030e60

4000ac1c <_tx_thread_schedule>:
4000ac1c:	e10f2000 	mrs	r2, CPSR
4000ac20:	e3c20080 	bic	r0, r2, #128	; 0x80
4000ac24:	e12ff000 	msr	CPSR_fsxc, r0
4000ac28:	e59f104c 	ldr	r1, [pc, #76]	; 4000ac7c <_tx_thread_schedule+0x60>
4000ac2c:	e5910000 	ldr	r0, [r1]
4000ac30:	e3500000 	cmp	r0, #0
4000ac34:	0afffffc 	beq	4000ac2c <_tx_thread_schedule+0x10>
4000ac38:	e12ff002 	msr	CPSR_fsxc, r2
4000ac3c:	e59f103c 	ldr	r1, [pc, #60]	; 4000ac80 <_tx_thread_schedule+0x64>
4000ac40:	e5810000 	str	r0, [r1]
4000ac44:	e5902004 	ldr	r2, [r0, #4]
4000ac48:	e5903018 	ldr	r3, [r0, #24]
4000ac4c:	e2822001 	add	r2, r2, #1
4000ac50:	e5802004 	str	r2, [r0, #4]
4000ac54:	e59f2028 	ldr	r2, [pc, #40]	; 4000ac84 <_tx_thread_schedule+0x68>
4000ac58:	e590d008 	ldr	sp, [r0, #8]
4000ac5c:	e5823000 	str	r3, [r2]
4000ac60:	e8bd0003 	pop	{r0, r1}
4000ac64:	e3500000 	cmp	r0, #0
4000ac68:	116ff001 	msrne	SPSR_fsxc, r1
4000ac6c:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000ac70:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ac74:	e12ff001 	msr	CPSR_fsxc, r1
4000ac78:	e12fff1e 	bx	lr
4000ac7c:	40030e38 	.word	0x40030e38
4000ac80:	40030e34 	.word	0x40030e34
4000ac84:	40030e60 	.word	0x40030e60

4000ac88 <_tx_thread_vectored_context_save>:
4000ac88:	e59f3044 	ldr	r3, [pc, #68]	; 4000acd4 <_tx_thread_vectored_context_save+0x4c>
4000ac8c:	e5932000 	ldr	r2, [r3]
4000ac90:	e3520000 	cmp	r2, #0
4000ac94:	0a000003 	beq	4000aca8 <_tx_thread_vectored_context_save+0x20>
4000ac98:	e2822001 	add	r2, r2, #1
4000ac9c:	e5832000 	str	r2, [r3]
4000aca0:	e3a0a000 	mov	sl, #0
4000aca4:	e12fff1e 	bx	lr
4000aca8:	e2822001 	add	r2, r2, #1
4000acac:	e5832000 	str	r2, [r3]
4000acb0:	e59f1020 	ldr	r1, [pc, #32]	; 4000acd8 <_tx_thread_vectored_context_save+0x50>
4000acb4:	e5910000 	ldr	r0, [r1]
4000acb8:	e3500000 	cmp	r0, #0
4000acbc:	0a000001 	beq	4000acc8 <_tx_thread_vectored_context_save+0x40>
4000acc0:	e3a0a000 	mov	sl, #0
4000acc4:	e12fff1e 	bx	lr
4000acc8:	e3a0a000 	mov	sl, #0
4000accc:	e28dd020 	add	sp, sp, #32
4000acd0:	e12fff1e 	bx	lr
4000acd4:	40030e2c 	.word	0x40030e2c
4000acd8:	40030e34 	.word	0x40030e34

4000acdc <_tx_timer_interrupt>:
4000acdc:	e59f10cc 	ldr	r1, [pc, #204]	; 4000adb0 <_tx_timer_interrupt+0xd4>
4000ace0:	e5910000 	ldr	r0, [r1]
4000ace4:	e2800001 	add	r0, r0, #1
4000ace8:	e5810000 	str	r0, [r1]
4000acec:	e59f30c0 	ldr	r3, [pc, #192]	; 4000adb4 <_tx_timer_interrupt+0xd8>
4000acf0:	e5932000 	ldr	r2, [r3]
4000acf4:	e3520000 	cmp	r2, #0
4000acf8:	0a000006 	beq	4000ad18 <_tx_timer_interrupt+0x3c>
4000acfc:	e2422001 	sub	r2, r2, #1
4000ad00:	e5832000 	str	r2, [r3]
4000ad04:	e3520000 	cmp	r2, #0
4000ad08:	1a000002 	bne	4000ad18 <_tx_timer_interrupt+0x3c>
4000ad0c:	e59f30a4 	ldr	r3, [pc, #164]	; 4000adb8 <_tx_timer_interrupt+0xdc>
4000ad10:	e3a00001 	mov	r0, #1
4000ad14:	e5830000 	str	r0, [r3]
4000ad18:	e59f109c 	ldr	r1, [pc, #156]	; 4000adbc <_tx_timer_interrupt+0xe0>
4000ad1c:	e5910000 	ldr	r0, [r1]
4000ad20:	e5902000 	ldr	r2, [r0]
4000ad24:	e3520000 	cmp	r2, #0
4000ad28:	0a000003 	beq	4000ad3c <_tx_timer_interrupt+0x60>
4000ad2c:	e59f308c 	ldr	r3, [pc, #140]	; 4000adc0 <_tx_timer_interrupt+0xe4>
4000ad30:	e3a02001 	mov	r2, #1
4000ad34:	e5832000 	str	r2, [r3]
4000ad38:	ea000007 	b	4000ad5c <_tx_timer_interrupt+0x80>
4000ad3c:	e2800004 	add	r0, r0, #4
4000ad40:	e59f307c 	ldr	r3, [pc, #124]	; 4000adc4 <_tx_timer_interrupt+0xe8>
4000ad44:	e5932000 	ldr	r2, [r3]
4000ad48:	e1500002 	cmp	r0, r2
4000ad4c:	1a000001 	bne	4000ad58 <_tx_timer_interrupt+0x7c>
4000ad50:	e59f3070 	ldr	r3, [pc, #112]	; 4000adc8 <_tx_timer_interrupt+0xec>
4000ad54:	e5930000 	ldr	r0, [r3]
4000ad58:	e5810000 	str	r0, [r1]
4000ad5c:	e59f3054 	ldr	r3, [pc, #84]	; 4000adb8 <_tx_timer_interrupt+0xdc>
4000ad60:	e5932000 	ldr	r2, [r3]
4000ad64:	e3520000 	cmp	r2, #0
4000ad68:	1a000003 	bne	4000ad7c <_tx_timer_interrupt+0xa0>
4000ad6c:	e59f104c 	ldr	r1, [pc, #76]	; 4000adc0 <_tx_timer_interrupt+0xe4>
4000ad70:	e5910000 	ldr	r0, [r1]
4000ad74:	e3500000 	cmp	r0, #0
4000ad78:	0a00000b 	beq	4000adac <_tx_timer_interrupt+0xd0>
4000ad7c:	e92d4001 	push	{r0, lr}
4000ad80:	e59f1038 	ldr	r1, [pc, #56]	; 4000adc0 <_tx_timer_interrupt+0xe4>
4000ad84:	e5910000 	ldr	r0, [r1]
4000ad88:	e3500000 	cmp	r0, #0
4000ad8c:	0a000000 	beq	4000ad94 <_tx_timer_interrupt+0xb8>
4000ad90:	eb001441 	bl	4000fe9c <_tx_timer_expiration_process>
4000ad94:	e59f301c 	ldr	r3, [pc, #28]	; 4000adb8 <_tx_timer_interrupt+0xdc>
4000ad98:	e5932000 	ldr	r2, [r3]
4000ad9c:	e3520000 	cmp	r2, #0
4000ada0:	0a000000 	beq	4000ada8 <_tx_timer_interrupt+0xcc>
4000ada4:	eb001210 	bl	4000f5ec <_tx_thread_time_slice>
4000ada8:	e8bd4001 	pop	{r0, lr}
4000adac:	e12fff1e 	bx	lr
4000adb0:	40030e5c 	.word	0x40030e5c
4000adb4:	40030e60 	.word	0x40030e60
4000adb8:	40030e64 	.word	0x40030e64
4000adbc:	40030e70 	.word	0x40030e70
4000adc0:	40030e74 	.word	0x40030e74
4000adc4:	40030e6c 	.word	0x40030e6c
4000adc8:	40030e68 	.word	0x40030e68

4000adcc <_tx_thread_context_restore>:
4000adcc:	e10f3000 	mrs	r3, CPSR
4000add0:	e3830080 	orr	r0, r3, #128	; 0x80
4000add4:	e12ff000 	msr	CPSR_fsxc, r0
4000add8:	e59f30f0 	ldr	r3, [pc, #240]	; 4000aed0 <_tx_thread_context_restore+0x104>
4000addc:	e5932000 	ldr	r2, [r3]
4000ade0:	e2422001 	sub	r2, r2, #1
4000ade4:	e5832000 	str	r2, [r3]
4000ade8:	e3520000 	cmp	r2, #0
4000adec:	0a000003 	beq	4000ae00 <_tx_thread_context_restore+0x34>
4000adf0:	e8bd5401 	pop	{r0, sl, ip, lr}
4000adf4:	e16ff000 	msr	SPSR_fsxc, r0
4000adf8:	e8bd000f 	pop	{r0, r1, r2, r3}
4000adfc:	e1b0f00e 	movs	pc, lr
4000ae00:	e59f10cc 	ldr	r1, [pc, #204]	; 4000aed4 <_tx_thread_context_restore+0x108>
4000ae04:	e5910000 	ldr	r0, [r1]
4000ae08:	e3500000 	cmp	r0, #0
4000ae0c:	0a00002a 	beq	4000aebc <_tx_thread_context_restore+0xf0>
4000ae10:	e59f30c0 	ldr	r3, [pc, #192]	; 4000aed8 <_tx_thread_context_restore+0x10c>
4000ae14:	e5932000 	ldr	r2, [r3]
4000ae18:	e3520000 	cmp	r2, #0
4000ae1c:	1a000003 	bne	4000ae30 <_tx_thread_context_restore+0x64>
4000ae20:	e59f30b4 	ldr	r3, [pc, #180]	; 4000aedc <_tx_thread_context_restore+0x110>
4000ae24:	e5932000 	ldr	r2, [r3]
4000ae28:	e1500002 	cmp	r0, r2
4000ae2c:	1a000003 	bne	4000ae40 <_tx_thread_context_restore+0x74>
4000ae30:	e8bd5401 	pop	{r0, sl, ip, lr}
4000ae34:	e16ff000 	msr	SPSR_fsxc, r0
4000ae38:	e8bd000f 	pop	{r0, r1, r2, r3}
4000ae3c:	e1b0f00e 	movs	pc, lr
4000ae40:	e8bd5408 	pop	{r3, sl, ip, lr}
4000ae44:	e1a0100e 	mov	r1, lr
4000ae48:	e3a020d3 	mov	r2, #211	; 0xd3
4000ae4c:	e121f002 	msr	CPSR_c, r2
4000ae50:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000ae54:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000ae58:	e1a04003 	mov	r4, r3
4000ae5c:	e3a020d2 	mov	r2, #210	; 0xd2
4000ae60:	e121f002 	msr	CPSR_c, r2
4000ae64:	e8bd000f 	pop	{r0, r1, r2, r3}
4000ae68:	e3a050d3 	mov	r5, #211	; 0xd3
4000ae6c:	e121f005 	msr	CPSR_c, r5
4000ae70:	e92d000f 	push	{r0, r1, r2, r3}
4000ae74:	e3a03001 	mov	r3, #1
4000ae78:	e92d0018 	push	{r3, r4}
4000ae7c:	e59f1050 	ldr	r1, [pc, #80]	; 4000aed4 <_tx_thread_context_restore+0x108>
4000ae80:	e5910000 	ldr	r0, [r1]
4000ae84:	e580d008 	str	sp, [r0, #8]
4000ae88:	e3c44020 	bic	r4, r4, #32
4000ae8c:	e3843080 	orr	r3, r4, #128	; 0x80
4000ae90:	e12ff003 	msr	CPSR_fsxc, r3
4000ae94:	e59f3044 	ldr	r3, [pc, #68]	; 4000aee0 <_tx_thread_context_restore+0x114>
4000ae98:	e5932000 	ldr	r2, [r3]
4000ae9c:	e3520000 	cmp	r2, #0
4000aea0:	0a000002 	beq	4000aeb0 <_tx_thread_context_restore+0xe4>
4000aea4:	e5802018 	str	r2, [r0, #24]
4000aea8:	e3a02000 	mov	r2, #0
4000aeac:	e5832000 	str	r2, [r3]
4000aeb0:	e3a00000 	mov	r0, #0
4000aeb4:	e5810000 	str	r0, [r1]
4000aeb8:	eaffff57 	b	4000ac1c <_tx_thread_schedule>
4000aebc:	e10f3000 	mrs	r3, CPSR
4000aec0:	e3c3301f 	bic	r3, r3, #31
4000aec4:	e3833013 	orr	r3, r3, #19
4000aec8:	e12ff003 	msr	CPSR_fsxc, r3
4000aecc:	eaffff52 	b	4000ac1c <_tx_thread_schedule>
4000aed0:	40030e2c 	.word	0x40030e2c
4000aed4:	40030e34 	.word	0x40030e34
4000aed8:	40030e50 	.word	0x40030e50
4000aedc:	40030e38 	.word	0x40030e38
4000aee0:	40030e60 	.word	0x40030e60

4000aee4 <_tx_thread_irq_nesting_end>:
4000aee4:	e1a0300e 	mov	r3, lr
4000aee8:	e10f0000 	mrs	r0, CPSR
4000aeec:	e3800080 	orr	r0, r0, #128	; 0x80
4000aef0:	e12ff000 	msr	CPSR_fsxc, r0
4000aef4:	e8bd4002 	pop	{r1, lr}
4000aef8:	e3c0001f 	bic	r0, r0, #31
4000aefc:	e3800012 	orr	r0, r0, #18
4000af00:	e12ff000 	msr	CPSR_fsxc, r0
4000af04:	e12fff13 	bx	r3

4000af08 <_tx_thread_irq_nesting_start>:
4000af08:	e1a0300e 	mov	r3, lr
4000af0c:	e10f0000 	mrs	r0, CPSR
4000af10:	e3c0001f 	bic	r0, r0, #31
4000af14:	e380001f 	orr	r0, r0, #31
4000af18:	e12ff000 	msr	CPSR_fsxc, r0
4000af1c:	e92d4002 	push	{r1, lr}
4000af20:	e3c00080 	bic	r0, r0, #128	; 0x80
4000af24:	e12ff000 	msr	CPSR_fsxc, r0
4000af28:	e12fff13 	bx	r3

4000af2c <_tx_initialize_low_level>:
4000af2c:	e1a0100d 	mov	r1, sp
4000af30:	e59f3024 	ldr	r3, [pc, #36]	; 4000af5c <_tx_initialize_low_level+0x30>
4000af34:	e5831000 	str	r1, [r3]
4000af38:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000af3c:	e3a00000 	mov	r0, #0
4000af40:	eb005b82 	bl	40021d50 <CyU3POsTimerInit>
4000af44:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000af48:	e12fff1e 	bx	lr
4000af4c:	e59f200c 	ldr	r2, [pc, #12]	; 4000af60 <_tx_initialize_low_level+0x34>
4000af50:	e5920000 	ldr	r0, [r2]
4000af54:	e59f2008 	ldr	r2, [pc, #8]	; 4000af64 <_tx_initialize_low_level+0x38>
4000af58:	e5920000 	ldr	r0, [r2]
4000af5c:	40030e30 	.word	0x40030e30
4000af60:	40030e54 	.word	0x40030e54
4000af64:	40030dc8 	.word	0x40030dc8

4000af68 <_tx_byte_allocate>:
4000af68:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000af6c:	e1a04000 	mov	r4, r0
4000af70:	e1a05001 	mov	r5, r1
4000af74:	e1a06002 	mov	r6, r2
4000af78:	e1a07003 	mov	r7, r3
4000af7c:	e3a00000 	mov	r0, #0
4000af80:	e58d0000 	str	r0, [sp]
4000af84:	e59f027c 	ldr	r0, [pc, #636]	; 4000b208 <_tx_byte_allocate+0x2a0>
4000af88:	e590a000 	ldr	sl, [r0]
4000af8c:	e10f8000 	mrs	r8, CPSR
4000af90:	e3889080 	orr	r9, r8, #128	; 0x80
4000af94:	e121f009 	msr	CPSR_c, r9
4000af98:	e2860003 	add	r0, r6, #3
4000af9c:	e1a00120 	lsr	r0, r0, #2
4000afa0:	e1a06100 	lsl	r6, r0, #2
4000afa4:	e59f0260 	ldr	r0, [pc, #608]	; 4000b20c <_tx_byte_allocate+0x2a4>
4000afa8:	e5900000 	ldr	r0, [r0]
4000afac:	e58d0004 	str	r0, [sp, #4]
4000afb0:	e59f1254 	ldr	r1, [pc, #596]	; 4000b20c <_tx_byte_allocate+0x2a4>
4000afb4:	e5910000 	ldr	r0, [r1]
4000afb8:	e3500000 	cmp	r0, #0
4000afbc:	0a000031 	beq	4000b088 <_tx_byte_allocate+0x120>
4000afc0:	e59f1248 	ldr	r1, [pc, #584]	; 4000b210 <_tx_byte_allocate+0x2a8>
4000afc4:	e5911000 	ldr	r1, [r1]
4000afc8:	e2811001 	add	r1, r1, #1
4000afcc:	e59f223c 	ldr	r2, [pc, #572]	; 4000b210 <_tx_byte_allocate+0x2a8>
4000afd0:	e5821000 	str	r1, [r2]
4000afd4:	e580100c 	str	r1, [r0, #12]
4000afd8:	e59f1234 	ldr	r1, [pc, #564]	; 4000b214 <_tx_byte_allocate+0x2ac>
4000afdc:	e5911000 	ldr	r1, [r1]
4000afe0:	e3510000 	cmp	r1, #0
4000afe4:	1a000006 	bne	4000b004 <_tx_byte_allocate+0x9c>
4000afe8:	e59f1218 	ldr	r1, [pc, #536]	; 4000b208 <_tx_byte_allocate+0x2a0>
4000afec:	e5911000 	ldr	r1, [r1]
4000aff0:	e5801000 	str	r1, [r0]
4000aff4:	e5901000 	ldr	r1, [r0]
4000aff8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000affc:	e5801004 	str	r1, [r0, #4]
4000b000:	ea00000d 	b	4000b03c <_tx_byte_allocate+0xd4>
4000b004:	e59f1208 	ldr	r1, [pc, #520]	; 4000b214 <_tx_byte_allocate+0x2ac>
4000b008:	e5911000 	ldr	r1, [r1]
4000b00c:	e59f2204 	ldr	r2, [pc, #516]	; 4000b218 <_tx_byte_allocate+0x2b0>
4000b010:	e1510002 	cmp	r1, r2
4000b014:	2a000004 	bcs	4000b02c <_tx_byte_allocate+0xc4>
4000b018:	e3e01000 	mvn	r1, #0
4000b01c:	e5801000 	str	r1, [r0]
4000b020:	e3a01000 	mov	r1, #0
4000b024:	e5801004 	str	r1, [r0, #4]
4000b028:	ea000003 	b	4000b03c <_tx_byte_allocate+0xd4>
4000b02c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b218 <_tx_byte_allocate+0x2b0>
4000b030:	e5801000 	str	r1, [r0]
4000b034:	e3a01000 	mov	r1, #0
4000b038:	e5801004 	str	r1, [r0, #4]
4000b03c:	e3a01014 	mov	r1, #20
4000b040:	e5801008 	str	r1, [r0, #8]
4000b044:	e5804010 	str	r4, [r0, #16]
4000b048:	e3a01000 	mov	r1, #0
4000b04c:	e5801014 	str	r1, [r0, #20]
4000b050:	e5806018 	str	r6, [r0, #24]
4000b054:	e580701c 	str	r7, [r0, #28]
4000b058:	e2800020 	add	r0, r0, #32
4000b05c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b21c <_tx_byte_allocate+0x2b4>
4000b060:	e5911000 	ldr	r1, [r1]
4000b064:	e1500001 	cmp	r0, r1
4000b068:	3a000001 	bcc	4000b074 <_tx_byte_allocate+0x10c>
4000b06c:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b220 <_tx_byte_allocate+0x2b8>
4000b070:	e5910000 	ldr	r0, [r1]
4000b074:	e59f1190 	ldr	r1, [pc, #400]	; 4000b20c <_tx_byte_allocate+0x2a4>
4000b078:	e5810000 	str	r0, [r1]
4000b07c:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b224 <_tx_byte_allocate+0x2bc>
4000b080:	e5911000 	ldr	r1, [r1]
4000b084:	e5810020 	str	r0, [r1, #32]
4000b088:	e59d0004 	ldr	r0, [sp, #4]
4000b08c:	e3500000 	cmp	r0, #0
4000b090:	0a000002 	beq	4000b0a0 <_tx_byte_allocate+0x138>
4000b094:	e59d0004 	ldr	r0, [sp, #4]
4000b098:	e590000c 	ldr	r0, [r0, #12]
4000b09c:	e58d0000 	str	r0, [sp]
4000b0a0:	e1a00000 	nop			; (mov r0, r0)
4000b0a4:	e584a020 	str	sl, [r4, #32]
4000b0a8:	e121f008 	msr	CPSR_c, r8
4000b0ac:	e1a01006 	mov	r1, r6
4000b0b0:	e1a00004 	mov	r0, r4
4000b0b4:	eb0001ba 	bl	4000b7a4 <_tx_byte_pool_search>
4000b0b8:	e1a0b000 	mov	fp, r0
4000b0bc:	e10f8000 	mrs	r8, CPSR
4000b0c0:	e3889080 	orr	r9, r8, #128	; 0x80
4000b0c4:	e121f009 	msr	CPSR_c, r9
4000b0c8:	e35b0000 	cmp	fp, #0
4000b0cc:	1a000002 	bne	4000b0dc <_tx_byte_allocate+0x174>
4000b0d0:	e5940020 	ldr	r0, [r4, #32]
4000b0d4:	e150000a 	cmp	r0, sl
4000b0d8:	1afffff1 	bne	4000b0a4 <_tx_byte_allocate+0x13c>
4000b0dc:	e35b0000 	cmp	fp, #0
4000b0e0:	0a00000e 	beq	4000b120 <_tx_byte_allocate+0x1b8>
4000b0e4:	e585b000 	str	fp, [r5]
4000b0e8:	e59d0004 	ldr	r0, [sp, #4]
4000b0ec:	e3500000 	cmp	r0, #0
4000b0f0:	0a000007 	beq	4000b114 <_tx_byte_allocate+0x1ac>
4000b0f4:	e59d0004 	ldr	r0, [sp, #4]
4000b0f8:	e590100c 	ldr	r1, [r0, #12]
4000b0fc:	e59d0000 	ldr	r0, [sp]
4000b100:	e1510000 	cmp	r1, r0
4000b104:	1a000002 	bne	4000b114 <_tx_byte_allocate+0x1ac>
4000b108:	e5950000 	ldr	r0, [r5]
4000b10c:	e59d1004 	ldr	r1, [sp, #4]
4000b110:	e5810014 	str	r0, [r1, #20]
4000b114:	e3a00000 	mov	r0, #0
4000b118:	e58d0008 	str	r0, [sp, #8]
4000b11c:	ea000036 	b	4000b1fc <_tx_byte_allocate+0x294>
4000b120:	e3570000 	cmp	r7, #0
4000b124:	0a000032 	beq	4000b1f4 <_tx_byte_allocate+0x28c>
4000b128:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b228 <_tx_byte_allocate+0x2c0>
4000b12c:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b130:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b134:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b138:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b13c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b140:	e3500000 	cmp	r0, #0
4000b144:	0a00000a 	beq	4000b174 <_tx_byte_allocate+0x20c>
4000b148:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b14c:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b150:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b154:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b158:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b15c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b160:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b164:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b168:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b16c:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b170:	ea000002 	b	4000b180 <_tx_byte_allocate+0x218>
4000b174:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b178:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b17c:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b180:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b184:	e2800001 	add	r0, r0, #1
4000b188:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b18c:	e3a00009 	mov	r0, #9
4000b190:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b194:	e3a00001 	mov	r0, #1
4000b198:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b19c:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b1a0:	e59f0084 	ldr	r0, [pc, #132]	; 4000b22c <_tx_byte_allocate+0x2c4>
4000b1a4:	e5900000 	ldr	r0, [r0]
4000b1a8:	e2800001 	add	r0, r0, #1
4000b1ac:	e59f1078 	ldr	r1, [pc, #120]	; 4000b22c <_tx_byte_allocate+0x2c4>
4000b1b0:	e5810000 	str	r0, [r1]
4000b1b4:	e121f008 	msr	CPSR_c, r8
4000b1b8:	e1a0000a 	mov	r0, sl
4000b1bc:	ebfff671 	bl	40008b88 <_tx_thread_system_suspend>
4000b1c0:	e59d0004 	ldr	r0, [sp, #4]
4000b1c4:	e3500000 	cmp	r0, #0
4000b1c8:	0a000007 	beq	4000b1ec <_tx_byte_allocate+0x284>
4000b1cc:	e59d0004 	ldr	r0, [sp, #4]
4000b1d0:	e590100c 	ldr	r1, [r0, #12]
4000b1d4:	e59d0000 	ldr	r0, [sp]
4000b1d8:	e1510000 	cmp	r1, r0
4000b1dc:	1a000002 	bne	4000b1ec <_tx_byte_allocate+0x284>
4000b1e0:	e5950000 	ldr	r0, [r5]
4000b1e4:	e59d1004 	ldr	r1, [sp, #4]
4000b1e8:	e5810014 	str	r0, [r1, #20]
4000b1ec:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b1f0:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b1f4:	e3a00010 	mov	r0, #16
4000b1f8:	e58d0008 	str	r0, [sp, #8]
4000b1fc:	e121f008 	msr	CPSR_c, r8
4000b200:	e59d0008 	ldr	r0, [sp, #8]
4000b204:	eafffff9 	b	4000b1f0 <_tx_byte_allocate+0x288>
4000b208:	40030e34 	.word	0x40030e34
4000b20c:	40030ea0 	.word	0x40030ea0
4000b210:	40030ea4 	.word	0x40030ea4
4000b214:	40030e2c 	.word	0x40030e2c
4000b218:	f0f0f0f0 	.word	0xf0f0f0f0
4000b21c:	40030e9c 	.word	0x40030e9c
4000b220:	40030e98 	.word	0x40030e98
4000b224:	40030e8c 	.word	0x40030e8c
4000b228:	4000b230 	.word	0x4000b230
4000b22c:	40030e50 	.word	0x40030e50

4000b230 <_tx_byte_pool_cleanup>:
4000b230:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b234:	e1a04000 	mov	r4, r0
4000b238:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b23c:	e10f5000 	mrs	r5, CPSR
4000b240:	e3856080 	orr	r6, r5, #128	; 0x80
4000b244:	e121f006 	msr	CPSR_c, r6
4000b248:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b24c:	e3500000 	cmp	r0, #0
4000b250:	0a000026 	beq	4000b2f0 <_tx_byte_pool_cleanup+0xc0>
4000b254:	e3570000 	cmp	r7, #0
4000b258:	0a000024 	beq	4000b2f0 <_tx_byte_pool_cleanup+0xc0>
4000b25c:	e5970000 	ldr	r0, [r7]
4000b260:	e59f1090 	ldr	r1, [pc, #144]	; 4000b2f8 <_tx_byte_pool_cleanup+0xc8>
4000b264:	e1500001 	cmp	r0, r1
4000b268:	1a000020 	bne	4000b2f0 <_tx_byte_pool_cleanup+0xc0>
4000b26c:	e3a00000 	mov	r0, #0
4000b270:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b274:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b278:	e1500004 	cmp	r0, r4
4000b27c:	1a000002 	bne	4000b28c <_tx_byte_pool_cleanup+0x5c>
4000b280:	e3a00000 	mov	r0, #0
4000b284:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b288:	ea000007 	b	4000b2ac <_tx_byte_pool_cleanup+0x7c>
4000b28c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b290:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b294:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b298:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b29c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b2a0:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b2a4:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b2a8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b2ac:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b2b0:	e2400001 	sub	r0, r0, #1
4000b2b4:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b2b8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b2bc:	e3500009 	cmp	r0, #9
4000b2c0:	1a00000a 	bne	4000b2f0 <_tx_byte_pool_cleanup+0xc0>
4000b2c4:	e3a00010 	mov	r0, #16
4000b2c8:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b2cc:	e59f0028 	ldr	r0, [pc, #40]	; 4000b2fc <_tx_byte_pool_cleanup+0xcc>
4000b2d0:	e5900000 	ldr	r0, [r0]
4000b2d4:	e2800001 	add	r0, r0, #1
4000b2d8:	e59f101c 	ldr	r1, [pc, #28]	; 4000b2fc <_tx_byte_pool_cleanup+0xcc>
4000b2dc:	e5810000 	str	r0, [r1]
4000b2e0:	e121f005 	msr	CPSR_c, r5
4000b2e4:	e1a00004 	mov	r0, r4
4000b2e8:	eb000fcd 	bl	4000f224 <_tx_thread_system_resume>
4000b2ec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b2f0:	e121f005 	msr	CPSR_c, r5
4000b2f4:	eafffffc 	b	4000b2ec <_tx_byte_pool_cleanup+0xbc>
4000b2f8:	42595445 	.word	0x42595445
4000b2fc:	40030e50 	.word	0x40030e50

4000b300 <_tx_byte_pool_create>:
4000b300:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b304:	e1a04000 	mov	r4, r0
4000b308:	e1a05001 	mov	r5, r1
4000b30c:	e1a06002 	mov	r6, r2
4000b310:	e1a07003 	mov	r7, r3
4000b314:	e3a01034 	mov	r1, #52	; 0x34
4000b318:	e1a00004 	mov	r0, r4
4000b31c:	eb00207e 	bl	4001351c <__aeabi_memclr4>
4000b320:	e1a00127 	lsr	r0, r7, #2
4000b324:	e1a07100 	lsl	r7, r0, #2
4000b328:	e5845004 	str	r5, [r4, #4]
4000b32c:	e5846018 	str	r6, [r4, #24]
4000b330:	e584701c 	str	r7, [r4, #28]
4000b334:	e5846010 	str	r6, [r4, #16]
4000b338:	e5846014 	str	r6, [r4, #20]
4000b33c:	e2470008 	sub	r0, r7, #8
4000b340:	e5840008 	str	r0, [r4, #8]
4000b344:	e3a00002 	mov	r0, #2
4000b348:	e584000c 	str	r0, [r4, #12]
4000b34c:	e0860007 	add	r0, r6, r7
4000b350:	e58d0004 	str	r0, [sp, #4]
4000b354:	e59d0004 	ldr	r0, [sp, #4]
4000b358:	e2400004 	sub	r0, r0, #4
4000b35c:	e58d0004 	str	r0, [sp, #4]
4000b360:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b524 <_tx_byte_pool_create+0x224>
4000b364:	e59d1004 	ldr	r1, [sp, #4]
4000b368:	e5810000 	str	r0, [r1]
4000b36c:	e59d0004 	ldr	r0, [sp, #4]
4000b370:	e2400004 	sub	r0, r0, #4
4000b374:	e58d0004 	str	r0, [sp, #4]
4000b378:	e59d0004 	ldr	r0, [sp, #4]
4000b37c:	e5806000 	str	r6, [r0]
4000b380:	e59d0004 	ldr	r0, [sp, #4]
4000b384:	e5860000 	str	r0, [r6]
4000b388:	e58d6004 	str	r6, [sp, #4]
4000b38c:	e59d0004 	ldr	r0, [sp, #4]
4000b390:	e2800004 	add	r0, r0, #4
4000b394:	e58d0004 	str	r0, [sp, #4]
4000b398:	e59f0188 	ldr	r0, [pc, #392]	; 4000b528 <_tx_byte_pool_create+0x228>
4000b39c:	e59d1004 	ldr	r1, [sp, #4]
4000b3a0:	e5810000 	str	r0, [r1]
4000b3a4:	e3a00000 	mov	r0, #0
4000b3a8:	e5840020 	str	r0, [r4, #32]
4000b3ac:	e10f8000 	mrs	r8, CPSR
4000b3b0:	e3889080 	orr	r9, r8, #128	; 0x80
4000b3b4:	e121f009 	msr	CPSR_c, r9
4000b3b8:	e59f016c 	ldr	r0, [pc, #364]	; 4000b52c <_tx_byte_pool_create+0x22c>
4000b3bc:	e5840000 	str	r0, [r4]
4000b3c0:	e59f0168 	ldr	r0, [pc, #360]	; 4000b530 <_tx_byte_pool_create+0x230>
4000b3c4:	e5900000 	ldr	r0, [r0]
4000b3c8:	e3500000 	cmp	r0, #0
4000b3cc:	0a00000b 	beq	4000b400 <_tx_byte_pool_create+0x100>
4000b3d0:	e59f0158 	ldr	r0, [pc, #344]	; 4000b530 <_tx_byte_pool_create+0x230>
4000b3d4:	e5900000 	ldr	r0, [r0]
4000b3d8:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b3dc:	e59f014c 	ldr	r0, [pc, #332]	; 4000b530 <_tx_byte_pool_create+0x230>
4000b3e0:	e5900000 	ldr	r0, [r0]
4000b3e4:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b3e8:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b3ec:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b3f0:	e59f0138 	ldr	r0, [pc, #312]	; 4000b530 <_tx_byte_pool_create+0x230>
4000b3f4:	e5900000 	ldr	r0, [r0]
4000b3f8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b3fc:	ea000003 	b	4000b410 <_tx_byte_pool_create+0x110>
4000b400:	e59f0128 	ldr	r0, [pc, #296]	; 4000b530 <_tx_byte_pool_create+0x230>
4000b404:	e5804000 	str	r4, [r0]
4000b408:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b40c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b410:	e59f011c 	ldr	r0, [pc, #284]	; 4000b534 <_tx_byte_pool_create+0x234>
4000b414:	e5900000 	ldr	r0, [r0]
4000b418:	e2800001 	add	r0, r0, #1
4000b41c:	e59f1110 	ldr	r1, [pc, #272]	; 4000b534 <_tx_byte_pool_create+0x234>
4000b420:	e5810000 	str	r0, [r1]
4000b424:	e3a03000 	mov	r3, #0
4000b428:	e58d3000 	str	r3, [sp]
4000b42c:	e1a03007 	mov	r3, r7
4000b430:	e1a02005 	mov	r2, r5
4000b434:	e1a01004 	mov	r1, r4
4000b438:	e3a00008 	mov	r0, #8
4000b43c:	eb0012ce 	bl	4000ff7c <_tx_trace_object_register>
4000b440:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b538 <_tx_byte_pool_create+0x238>
4000b444:	e5910000 	ldr	r0, [r1]
4000b448:	e3500000 	cmp	r0, #0
4000b44c:	0a000031 	beq	4000b518 <_tx_byte_pool_create+0x218>
4000b450:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b53c <_tx_byte_pool_create+0x23c>
4000b454:	e5911000 	ldr	r1, [r1]
4000b458:	e2811001 	add	r1, r1, #1
4000b45c:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b53c <_tx_byte_pool_create+0x23c>
4000b460:	e5821000 	str	r1, [r2]
4000b464:	e580100c 	str	r1, [r0, #12]
4000b468:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b540 <_tx_byte_pool_create+0x240>
4000b46c:	e5911000 	ldr	r1, [r1]
4000b470:	e3510000 	cmp	r1, #0
4000b474:	1a000006 	bne	4000b494 <_tx_byte_pool_create+0x194>
4000b478:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b544 <_tx_byte_pool_create+0x244>
4000b47c:	e5911000 	ldr	r1, [r1]
4000b480:	e5801000 	str	r1, [r0]
4000b484:	e5901000 	ldr	r1, [r0]
4000b488:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b48c:	e5801004 	str	r1, [r0, #4]
4000b490:	ea00000d 	b	4000b4cc <_tx_byte_pool_create+0x1cc>
4000b494:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b540 <_tx_byte_pool_create+0x240>
4000b498:	e5911000 	ldr	r1, [r1]
4000b49c:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b548 <_tx_byte_pool_create+0x248>
4000b4a0:	e1510002 	cmp	r1, r2
4000b4a4:	2a000004 	bcs	4000b4bc <_tx_byte_pool_create+0x1bc>
4000b4a8:	e3e01000 	mvn	r1, #0
4000b4ac:	e5801000 	str	r1, [r0]
4000b4b0:	e3a01000 	mov	r1, #0
4000b4b4:	e5801004 	str	r1, [r0, #4]
4000b4b8:	ea000003 	b	4000b4cc <_tx_byte_pool_create+0x1cc>
4000b4bc:	e59f1084 	ldr	r1, [pc, #132]	; 4000b548 <_tx_byte_pool_create+0x248>
4000b4c0:	e5801000 	str	r1, [r0]
4000b4c4:	e3a01000 	mov	r1, #0
4000b4c8:	e5801004 	str	r1, [r0, #4]
4000b4cc:	e3a01015 	mov	r1, #21
4000b4d0:	e5801008 	str	r1, [r0, #8]
4000b4d4:	e5804010 	str	r4, [r0, #16]
4000b4d8:	e5806014 	str	r6, [r0, #20]
4000b4dc:	e5807018 	str	r7, [r0, #24]
4000b4e0:	e28d1004 	add	r1, sp, #4
4000b4e4:	e580101c 	str	r1, [r0, #28]
4000b4e8:	e2800020 	add	r0, r0, #32
4000b4ec:	e59f1058 	ldr	r1, [pc, #88]	; 4000b54c <_tx_byte_pool_create+0x24c>
4000b4f0:	e5911000 	ldr	r1, [r1]
4000b4f4:	e1500001 	cmp	r0, r1
4000b4f8:	3a000001 	bcc	4000b504 <_tx_byte_pool_create+0x204>
4000b4fc:	e59f104c 	ldr	r1, [pc, #76]	; 4000b550 <_tx_byte_pool_create+0x250>
4000b500:	e5910000 	ldr	r0, [r1]
4000b504:	e59f102c 	ldr	r1, [pc, #44]	; 4000b538 <_tx_byte_pool_create+0x238>
4000b508:	e5810000 	str	r0, [r1]
4000b50c:	e59f1040 	ldr	r1, [pc, #64]	; 4000b554 <_tx_byte_pool_create+0x254>
4000b510:	e5911000 	ldr	r1, [r1]
4000b514:	e5810020 	str	r0, [r1, #32]
4000b518:	e121f008 	msr	CPSR_c, r8
4000b51c:	e3a00000 	mov	r0, #0
4000b520:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b524:	aaaaaaaa 	.word	0xaaaaaaaa
4000b528:	ffffeeee 	.word	0xffffeeee
4000b52c:	42595445 	.word	0x42595445
4000b530:	40030ed0 	.word	0x40030ed0
4000b534:	40030ed4 	.word	0x40030ed4
4000b538:	40030ea0 	.word	0x40030ea0
4000b53c:	40030ea4 	.word	0x40030ea4
4000b540:	40030e2c 	.word	0x40030e2c
4000b544:	40030e34 	.word	0x40030e34
4000b548:	f0f0f0f0 	.word	0xf0f0f0f0
4000b54c:	40030e9c 	.word	0x40030e9c
4000b550:	40030e98 	.word	0x40030e98
4000b554:	40030e8c 	.word	0x40030e8c

4000b558 <_tx_byte_pool_delete>:
4000b558:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b55c:	e1a04000 	mov	r4, r0
4000b560:	e10f5000 	mrs	r5, CPSR
4000b564:	e3856080 	orr	r6, r5, #128	; 0x80
4000b568:	e121f006 	msr	CPSR_c, r6
4000b56c:	e59f1204 	ldr	r1, [pc, #516]	; 4000b778 <_tx_byte_pool_delete+0x220>
4000b570:	e5910000 	ldr	r0, [r1]
4000b574:	e3500000 	cmp	r0, #0
4000b578:	0a000031 	beq	4000b644 <_tx_byte_pool_delete+0xec>
4000b57c:	e59f11f8 	ldr	r1, [pc, #504]	; 4000b77c <_tx_byte_pool_delete+0x224>
4000b580:	e5911000 	ldr	r1, [r1]
4000b584:	e2811001 	add	r1, r1, #1
4000b588:	e59f21ec 	ldr	r2, [pc, #492]	; 4000b77c <_tx_byte_pool_delete+0x224>
4000b58c:	e5821000 	str	r1, [r2]
4000b590:	e580100c 	str	r1, [r0, #12]
4000b594:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b780 <_tx_byte_pool_delete+0x228>
4000b598:	e5911000 	ldr	r1, [r1]
4000b59c:	e3510000 	cmp	r1, #0
4000b5a0:	1a000006 	bne	4000b5c0 <_tx_byte_pool_delete+0x68>
4000b5a4:	e59f11d8 	ldr	r1, [pc, #472]	; 4000b784 <_tx_byte_pool_delete+0x22c>
4000b5a8:	e5911000 	ldr	r1, [r1]
4000b5ac:	e5801000 	str	r1, [r0]
4000b5b0:	e5901000 	ldr	r1, [r0]
4000b5b4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b5b8:	e5801004 	str	r1, [r0, #4]
4000b5bc:	ea00000d 	b	4000b5f8 <_tx_byte_pool_delete+0xa0>
4000b5c0:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b780 <_tx_byte_pool_delete+0x228>
4000b5c4:	e5911000 	ldr	r1, [r1]
4000b5c8:	e59f21b8 	ldr	r2, [pc, #440]	; 4000b788 <_tx_byte_pool_delete+0x230>
4000b5cc:	e1510002 	cmp	r1, r2
4000b5d0:	2a000004 	bcs	4000b5e8 <_tx_byte_pool_delete+0x90>
4000b5d4:	e3e01000 	mvn	r1, #0
4000b5d8:	e5801000 	str	r1, [r0]
4000b5dc:	e3a01000 	mov	r1, #0
4000b5e0:	e5801004 	str	r1, [r0, #4]
4000b5e4:	ea000003 	b	4000b5f8 <_tx_byte_pool_delete+0xa0>
4000b5e8:	e59f1198 	ldr	r1, [pc, #408]	; 4000b788 <_tx_byte_pool_delete+0x230>
4000b5ec:	e5801000 	str	r1, [r0]
4000b5f0:	e3a01000 	mov	r1, #0
4000b5f4:	e5801004 	str	r1, [r0, #4]
4000b5f8:	e3a01016 	mov	r1, #22
4000b5fc:	e5801008 	str	r1, [r0, #8]
4000b600:	e5804010 	str	r4, [r0, #16]
4000b604:	e580d014 	str	sp, [r0, #20]
4000b608:	e3a01000 	mov	r1, #0
4000b60c:	e5801018 	str	r1, [r0, #24]
4000b610:	e580101c 	str	r1, [r0, #28]
4000b614:	e2800020 	add	r0, r0, #32
4000b618:	e59f116c 	ldr	r1, [pc, #364]	; 4000b78c <_tx_byte_pool_delete+0x234>
4000b61c:	e5911000 	ldr	r1, [r1]
4000b620:	e1500001 	cmp	r0, r1
4000b624:	3a000001 	bcc	4000b630 <_tx_byte_pool_delete+0xd8>
4000b628:	e59f1160 	ldr	r1, [pc, #352]	; 4000b790 <_tx_byte_pool_delete+0x238>
4000b62c:	e5910000 	ldr	r0, [r1]
4000b630:	e59f1140 	ldr	r1, [pc, #320]	; 4000b778 <_tx_byte_pool_delete+0x220>
4000b634:	e5810000 	str	r0, [r1]
4000b638:	e59f1154 	ldr	r1, [pc, #340]	; 4000b794 <_tx_byte_pool_delete+0x23c>
4000b63c:	e5911000 	ldr	r1, [r1]
4000b640:	e5810020 	str	r0, [r1, #32]
4000b644:	e1a00004 	mov	r0, r4
4000b648:	eb0012b6 	bl	40010128 <_tx_trace_object_unregister>
4000b64c:	e59f0144 	ldr	r0, [pc, #324]	; 4000b798 <_tx_byte_pool_delete+0x240>
4000b650:	e5900000 	ldr	r0, [r0]
4000b654:	e2400001 	sub	r0, r0, #1
4000b658:	e59f1138 	ldr	r1, [pc, #312]	; 4000b798 <_tx_byte_pool_delete+0x240>
4000b65c:	e5810000 	str	r0, [r1]
4000b660:	e3a00000 	mov	r0, #0
4000b664:	e5840000 	str	r0, [r4]
4000b668:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b66c:	e1500004 	cmp	r0, r4
4000b670:	1a000003 	bne	4000b684 <_tx_byte_pool_delete+0x12c>
4000b674:	e3a00000 	mov	r0, #0
4000b678:	e59f111c 	ldr	r1, [pc, #284]	; 4000b79c <_tx_byte_pool_delete+0x244>
4000b67c:	e5810000 	str	r0, [r1]
4000b680:	ea00000c 	b	4000b6b8 <_tx_byte_pool_delete+0x160>
4000b684:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b688:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b68c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b690:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b694:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b698:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b69c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b79c <_tx_byte_pool_delete+0x244>
4000b6a0:	e5900000 	ldr	r0, [r0]
4000b6a4:	e1500004 	cmp	r0, r4
4000b6a8:	1a000002 	bne	4000b6b8 <_tx_byte_pool_delete+0x160>
4000b6ac:	e59f10e8 	ldr	r1, [pc, #232]	; 4000b79c <_tx_byte_pool_delete+0x244>
4000b6b0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b6b4:	e5810000 	str	r0, [r1]
4000b6b8:	e59f00e0 	ldr	r0, [pc, #224]	; 4000b7a0 <_tx_byte_pool_delete+0x248>
4000b6bc:	e5900000 	ldr	r0, [r0]
4000b6c0:	e2800001 	add	r0, r0, #1
4000b6c4:	e59f10d4 	ldr	r1, [pc, #212]	; 4000b7a0 <_tx_byte_pool_delete+0x248>
4000b6c8:	e5810000 	str	r0, [r1]
4000b6cc:	e121f005 	msr	CPSR_c, r5
4000b6d0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b6d4:	e58d0000 	str	r0, [sp]
4000b6d8:	ea000017 	b	4000b73c <_tx_byte_pool_delete+0x1e4>
4000b6dc:	e10f5000 	mrs	r5, CPSR
4000b6e0:	e3856080 	orr	r6, r5, #128	; 0x80
4000b6e4:	e121f006 	msr	CPSR_c, r6
4000b6e8:	e3a00000 	mov	r0, #0
4000b6ec:	e59d1000 	ldr	r1, [sp]
4000b6f0:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b6f4:	e59f00a4 	ldr	r0, [pc, #164]	; 4000b7a0 <_tx_byte_pool_delete+0x248>
4000b6f8:	e5900000 	ldr	r0, [r0]
4000b6fc:	e2800001 	add	r0, r0, #1
4000b700:	e59f1098 	ldr	r1, [pc, #152]	; 4000b7a0 <_tx_byte_pool_delete+0x248>
4000b704:	e5810000 	str	r0, [r1]
4000b708:	e121f005 	msr	CPSR_c, r5
4000b70c:	e3a00001 	mov	r0, #1
4000b710:	e59d1000 	ldr	r1, [sp]
4000b714:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b718:	e59d0000 	ldr	r0, [sp]
4000b71c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b720:	e58d0000 	str	r0, [sp]
4000b724:	e59d1000 	ldr	r1, [sp]
4000b728:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b72c:	eb000ebc 	bl	4000f224 <_tx_thread_system_resume>
4000b730:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b734:	e2400001 	sub	r0, r0, #1
4000b738:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b73c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b740:	e3500000 	cmp	r0, #0
4000b744:	1affffe4 	bne	4000b6dc <_tx_byte_pool_delete+0x184>
4000b748:	e10f5000 	mrs	r5, CPSR
4000b74c:	e3856080 	orr	r6, r5, #128	; 0x80
4000b750:	e121f006 	msr	CPSR_c, r6
4000b754:	e59f0044 	ldr	r0, [pc, #68]	; 4000b7a0 <_tx_byte_pool_delete+0x248>
4000b758:	e5900000 	ldr	r0, [r0]
4000b75c:	e2400001 	sub	r0, r0, #1
4000b760:	e59f1038 	ldr	r1, [pc, #56]	; 4000b7a0 <_tx_byte_pool_delete+0x248>
4000b764:	e5810000 	str	r0, [r1]
4000b768:	e121f005 	msr	CPSR_c, r5
4000b76c:	eb000e80 	bl	4000f174 <_tx_thread_system_preempt_check>
4000b770:	e3a00000 	mov	r0, #0
4000b774:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000b778:	40030ea0 	.word	0x40030ea0
4000b77c:	40030ea4 	.word	0x40030ea4
4000b780:	40030e2c 	.word	0x40030e2c
4000b784:	40030e34 	.word	0x40030e34
4000b788:	f0f0f0f0 	.word	0xf0f0f0f0
4000b78c:	40030e9c 	.word	0x40030e9c
4000b790:	40030e98 	.word	0x40030e98
4000b794:	40030e8c 	.word	0x40030e8c
4000b798:	40030ed4 	.word	0x40030ed4
4000b79c:	40030ed0 	.word	0x40030ed0
4000b7a0:	40030e50 	.word	0x40030e50

4000b7a4 <_tx_byte_pool_search>:
4000b7a4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b7a8:	e1a02000 	mov	r2, r0
4000b7ac:	e3a08000 	mov	r8, #0
4000b7b0:	e10f3000 	mrs	r3, CPSR
4000b7b4:	e383c080 	orr	ip, r3, #128	; 0x80
4000b7b8:	e121f00c 	msr	CPSR_c, ip
4000b7bc:	e5920008 	ldr	r0, [r2, #8]
4000b7c0:	e1500001 	cmp	r0, r1
4000b7c4:	8a000002 	bhi	4000b7d4 <_tx_byte_pool_search+0x30>
4000b7c8:	e121f003 	msr	CPSR_c, r3
4000b7cc:	e3a00000 	mov	r0, #0
4000b7d0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b7d4:	e5925014 	ldr	r5, [r2, #20]
4000b7d8:	e1a0e005 	mov	lr, r5
4000b7dc:	e592000c 	ldr	r0, [r2, #12]
4000b7e0:	e2807001 	add	r7, r0, #1
4000b7e4:	e3a06000 	mov	r6, #0
4000b7e8:	e1a00000 	nop			; (mov r0, r0)
4000b7ec:	e59e0004 	ldr	r0, [lr, #4]
4000b7f0:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b7f4:	e29aa012 	adds	sl, sl, #18
4000b7f8:	1a000020 	bne	4000b880 <_tx_byte_pool_search+0xdc>
4000b7fc:	e3580000 	cmp	r8, #0
4000b800:	1a000004 	bne	4000b818 <_tx_byte_pool_search+0x74>
4000b804:	e5920014 	ldr	r0, [r2, #20]
4000b808:	e1500005 	cmp	r0, r5
4000b80c:	1a000000 	bne	4000b814 <_tx_byte_pool_search+0x70>
4000b810:	e582e014 	str	lr, [r2, #20]
4000b814:	e3a08001 	mov	r8, #1
4000b818:	e59e4000 	ldr	r4, [lr]
4000b81c:	e044000e 	sub	r0, r4, lr
4000b820:	e2406008 	sub	r6, r0, #8
4000b824:	e1560001 	cmp	r6, r1
4000b828:	3a000000 	bcc	4000b830 <_tx_byte_pool_search+0x8c>
4000b82c:	ea000026 	b	4000b8cc <_tx_byte_pool_search+0x128>
4000b830:	e3a06000 	mov	r6, #0
4000b834:	e5940004 	ldr	r0, [r4, #4]
4000b838:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000b83c:	e29aa012 	adds	sl, sl, #18
4000b840:	1a000009 	bne	4000b86c <_tx_byte_pool_search+0xc8>
4000b844:	e5940000 	ldr	r0, [r4]
4000b848:	e58e0000 	str	r0, [lr]
4000b84c:	e592000c 	ldr	r0, [r2, #12]
4000b850:	e2400001 	sub	r0, r0, #1
4000b854:	e582000c 	str	r0, [r2, #12]
4000b858:	e5920014 	ldr	r0, [r2, #20]
4000b85c:	e1500004 	cmp	r0, r4
4000b860:	1a000007 	bne	4000b884 <_tx_byte_pool_search+0xe0>
4000b864:	e582e014 	str	lr, [r2, #20]
4000b868:	ea000005 	b	4000b884 <_tx_byte_pool_search+0xe0>
4000b86c:	e594e000 	ldr	lr, [r4]
4000b870:	e3570000 	cmp	r7, #0
4000b874:	0a000002 	beq	4000b884 <_tx_byte_pool_search+0xe0>
4000b878:	e2477001 	sub	r7, r7, #1
4000b87c:	ea000000 	b	4000b884 <_tx_byte_pool_search+0xe0>
4000b880:	e59ee000 	ldr	lr, [lr]
4000b884:	e3570000 	cmp	r7, #0
4000b888:	0a000000 	beq	4000b890 <_tx_byte_pool_search+0xec>
4000b88c:	e2477001 	sub	r7, r7, #1
4000b890:	e121f003 	msr	CPSR_c, r3
4000b894:	e10f3000 	mrs	r3, CPSR
4000b898:	e383c080 	orr	ip, r3, #128	; 0x80
4000b89c:	e121f00c 	msr	CPSR_c, ip
4000b8a0:	e59f00ac 	ldr	r0, [pc, #172]	; 4000b954 <_tx_byte_pool_search+0x1b0>
4000b8a4:	e5909000 	ldr	r9, [r0]
4000b8a8:	e5920020 	ldr	r0, [r2, #32]
4000b8ac:	e1500009 	cmp	r0, r9
4000b8b0:	0a000003 	beq	4000b8c4 <_tx_byte_pool_search+0x120>
4000b8b4:	e592e014 	ldr	lr, [r2, #20]
4000b8b8:	e592000c 	ldr	r0, [r2, #12]
4000b8bc:	e2807001 	add	r7, r0, #1
4000b8c0:	e5829020 	str	r9, [r2, #32]
4000b8c4:	e3570000 	cmp	r7, #0
4000b8c8:	1affffc7 	bne	4000b7ec <_tx_byte_pool_search+0x48>
4000b8cc:	e1a00000 	nop			; (mov r0, r0)
4000b8d0:	e3560000 	cmp	r6, #0
4000b8d4:	0a00001a 	beq	4000b944 <_tx_byte_pool_search+0x1a0>
4000b8d8:	e0460001 	sub	r0, r6, r1
4000b8dc:	e3500014 	cmp	r0, #20
4000b8e0:	3a00000a 	bcc	4000b910 <_tx_byte_pool_search+0x16c>
4000b8e4:	e08e0001 	add	r0, lr, r1
4000b8e8:	e2804008 	add	r4, r0, #8
4000b8ec:	e59e0000 	ldr	r0, [lr]
4000b8f0:	e5840000 	str	r0, [r4]
4000b8f4:	e59f005c 	ldr	r0, [pc, #92]	; 4000b958 <_tx_byte_pool_search+0x1b4>
4000b8f8:	e5840004 	str	r0, [r4, #4]
4000b8fc:	e592000c 	ldr	r0, [r2, #12]
4000b900:	e2800001 	add	r0, r0, #1
4000b904:	e582000c 	str	r0, [r2, #12]
4000b908:	e58e4000 	str	r4, [lr]
4000b90c:	e1a06001 	mov	r6, r1
4000b910:	e58e2004 	str	r2, [lr, #4]
4000b914:	e5920008 	ldr	r0, [r2, #8]
4000b918:	e0400006 	sub	r0, r0, r6
4000b91c:	e2400008 	sub	r0, r0, #8
4000b920:	e5820008 	str	r0, [r2, #8]
4000b924:	e5920014 	ldr	r0, [r2, #20]
4000b928:	e150000e 	cmp	r0, lr
4000b92c:	1a000001 	bne	4000b938 <_tx_byte_pool_search+0x194>
4000b930:	e59e0000 	ldr	r0, [lr]
4000b934:	e5820014 	str	r0, [r2, #20]
4000b938:	e121f003 	msr	CPSR_c, r3
4000b93c:	e28ee008 	add	lr, lr, #8
4000b940:	ea000001 	b	4000b94c <_tx_byte_pool_search+0x1a8>
4000b944:	e121f003 	msr	CPSR_c, r3
4000b948:	e3a0e000 	mov	lr, #0
4000b94c:	e1a0000e 	mov	r0, lr
4000b950:	eaffff9e 	b	4000b7d0 <_tx_byte_pool_search+0x2c>
4000b954:	40030e34 	.word	0x40030e34
4000b958:	ffffeeee 	.word	0xffffeeee

4000b95c <_tx_byte_release>:
4000b95c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000b960:	e1a04000 	mov	r4, r0
4000b964:	e1a09004 	mov	r9, r4
4000b968:	e1b04009 	movs	r4, r9
4000b96c:	0a00000f 	beq	4000b9b0 <_tx_byte_release+0x54>
4000b970:	e2499008 	sub	r9, r9, #8
4000b974:	e5990004 	ldr	r0, [r9, #4]
4000b978:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000b97c:	e2911012 	adds	r1, r1, #18
4000b980:	0a000008 	beq	4000b9a8 <_tx_byte_release+0x4c>
4000b984:	e5997004 	ldr	r7, [r9, #4]
4000b988:	e3570000 	cmp	r7, #0
4000b98c:	0a000003 	beq	4000b9a0 <_tx_byte_release+0x44>
4000b990:	e5970000 	ldr	r0, [r7]
4000b994:	e59f125c 	ldr	r1, [pc, #604]	; 4000bbf8 <_tx_byte_release+0x29c>
4000b998:	e1500001 	cmp	r0, r1
4000b99c:	0a000005 	beq	4000b9b8 <_tx_byte_release+0x5c>
4000b9a0:	e3a00003 	mov	r0, #3
4000b9a4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000b9a8:	e3a00003 	mov	r0, #3
4000b9ac:	eafffffc 	b	4000b9a4 <_tx_byte_release+0x48>
4000b9b0:	e3a00003 	mov	r0, #3
4000b9b4:	eafffffa 	b	4000b9a4 <_tx_byte_release+0x48>
4000b9b8:	e59f023c 	ldr	r0, [pc, #572]	; 4000bbfc <_tx_byte_release+0x2a0>
4000b9bc:	e5908000 	ldr	r8, [r0]
4000b9c0:	e5878020 	str	r8, [r7, #32]
4000b9c4:	e10f5000 	mrs	r5, CPSR
4000b9c8:	e3856080 	orr	r6, r5, #128	; 0x80
4000b9cc:	e121f006 	msr	CPSR_c, r6
4000b9d0:	e59f1228 	ldr	r1, [pc, #552]	; 4000bc00 <_tx_byte_release+0x2a4>
4000b9d4:	e5910000 	ldr	r0, [r1]
4000b9d8:	e3500000 	cmp	r0, #0
4000b9dc:	0a000032 	beq	4000baac <_tx_byte_release+0x150>
4000b9e0:	e59f121c 	ldr	r1, [pc, #540]	; 4000bc04 <_tx_byte_release+0x2a8>
4000b9e4:	e5911000 	ldr	r1, [r1]
4000b9e8:	e2811001 	add	r1, r1, #1
4000b9ec:	e59f2210 	ldr	r2, [pc, #528]	; 4000bc04 <_tx_byte_release+0x2a8>
4000b9f0:	e5821000 	str	r1, [r2]
4000b9f4:	e580100c 	str	r1, [r0, #12]
4000b9f8:	e59f1208 	ldr	r1, [pc, #520]	; 4000bc08 <_tx_byte_release+0x2ac>
4000b9fc:	e5911000 	ldr	r1, [r1]
4000ba00:	e3510000 	cmp	r1, #0
4000ba04:	1a000006 	bne	4000ba24 <_tx_byte_release+0xc8>
4000ba08:	e59f11ec 	ldr	r1, [pc, #492]	; 4000bbfc <_tx_byte_release+0x2a0>
4000ba0c:	e5911000 	ldr	r1, [r1]
4000ba10:	e5801000 	str	r1, [r0]
4000ba14:	e5901000 	ldr	r1, [r0]
4000ba18:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ba1c:	e5801004 	str	r1, [r0, #4]
4000ba20:	ea00000d 	b	4000ba5c <_tx_byte_release+0x100>
4000ba24:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bc08 <_tx_byte_release+0x2ac>
4000ba28:	e5911000 	ldr	r1, [r1]
4000ba2c:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bc0c <_tx_byte_release+0x2b0>
4000ba30:	e1510002 	cmp	r1, r2
4000ba34:	2a000004 	bcs	4000ba4c <_tx_byte_release+0xf0>
4000ba38:	e3e01000 	mvn	r1, #0
4000ba3c:	e5801000 	str	r1, [r0]
4000ba40:	e3a01000 	mov	r1, #0
4000ba44:	e5801004 	str	r1, [r0, #4]
4000ba48:	ea000003 	b	4000ba5c <_tx_byte_release+0x100>
4000ba4c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bc0c <_tx_byte_release+0x2b0>
4000ba50:	e5801000 	str	r1, [r0]
4000ba54:	e3a01000 	mov	r1, #0
4000ba58:	e5801004 	str	r1, [r0, #4]
4000ba5c:	e3a0101b 	mov	r1, #27
4000ba60:	e5801008 	str	r1, [r0, #8]
4000ba64:	e5807010 	str	r7, [r0, #16]
4000ba68:	e5804014 	str	r4, [r0, #20]
4000ba6c:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000ba70:	e5801018 	str	r1, [r0, #24]
4000ba74:	e5971008 	ldr	r1, [r7, #8]
4000ba78:	e580101c 	str	r1, [r0, #28]
4000ba7c:	e2800020 	add	r0, r0, #32
4000ba80:	e59f1188 	ldr	r1, [pc, #392]	; 4000bc10 <_tx_byte_release+0x2b4>
4000ba84:	e5911000 	ldr	r1, [r1]
4000ba88:	e1500001 	cmp	r0, r1
4000ba8c:	3a000001 	bcc	4000ba98 <_tx_byte_release+0x13c>
4000ba90:	e59f117c 	ldr	r1, [pc, #380]	; 4000bc14 <_tx_byte_release+0x2b8>
4000ba94:	e5910000 	ldr	r0, [r1]
4000ba98:	e59f1160 	ldr	r1, [pc, #352]	; 4000bc00 <_tx_byte_release+0x2a4>
4000ba9c:	e5810000 	str	r0, [r1]
4000baa0:	e59f1170 	ldr	r1, [pc, #368]	; 4000bc18 <_tx_byte_release+0x2bc>
4000baa4:	e5911000 	ldr	r1, [r1]
4000baa8:	e5810020 	str	r0, [r1, #32]
4000baac:	e59f0168 	ldr	r0, [pc, #360]	; 4000bc1c <_tx_byte_release+0x2c0>
4000bab0:	e5890004 	str	r0, [r9, #4]
4000bab4:	e5970008 	ldr	r0, [r7, #8]
4000bab8:	e5991000 	ldr	r1, [r9]
4000babc:	e0411009 	sub	r1, r1, r9
4000bac0:	e0800001 	add	r0, r0, r1
4000bac4:	e5870008 	str	r0, [r7, #8]
4000bac8:	e5970014 	ldr	r0, [r7, #20]
4000bacc:	e1500009 	cmp	r0, r9
4000bad0:	9a000000 	bls	4000bad8 <_tx_byte_release+0x17c>
4000bad4:	e5879014 	str	r9, [r7, #20]
4000bad8:	ea00003e 	b	4000bbd8 <_tx_byte_release+0x27c>
4000badc:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000bae0:	e121f005 	msr	CPSR_c, r5
4000bae4:	e1a00007 	mov	r0, r7
4000bae8:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000baec:	ebffff2c 	bl	4000b7a4 <_tx_byte_pool_search>
4000baf0:	e1a09000 	mov	r9, r0
4000baf4:	e10f5000 	mrs	r5, CPSR
4000baf8:	e3856080 	orr	r6, r5, #128	; 0x80
4000bafc:	e121f006 	msr	CPSR_c, r6
4000bb00:	e3590000 	cmp	r9, #0
4000bb04:	1a000000 	bne	4000bb0c <_tx_byte_release+0x1b0>
4000bb08:	ea000035 	b	4000bbe4 <_tx_byte_release+0x288>
4000bb0c:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bb10:	e150000a 	cmp	r0, sl
4000bb14:	0a00000c 	beq	4000bb4c <_tx_byte_release+0x1f0>
4000bb18:	e2499008 	sub	r9, r9, #8
4000bb1c:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bc1c <_tx_byte_release+0x2c0>
4000bb20:	e5890004 	str	r0, [r9, #4]
4000bb24:	e5970008 	ldr	r0, [r7, #8]
4000bb28:	e5991000 	ldr	r1, [r9]
4000bb2c:	e0411009 	sub	r1, r1, r9
4000bb30:	e0800001 	add	r0, r0, r1
4000bb34:	e5870008 	str	r0, [r7, #8]
4000bb38:	e5970014 	ldr	r0, [r7, #20]
4000bb3c:	e1500009 	cmp	r0, r9
4000bb40:	9a000000 	bls	4000bb48 <_tx_byte_release+0x1ec>
4000bb44:	e5879014 	str	r9, [r7, #20]
4000bb48:	ea000022 	b	4000bbd8 <_tx_byte_release+0x27c>
4000bb4c:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bb50:	e150000a 	cmp	r0, sl
4000bb54:	1a000002 	bne	4000bb64 <_tx_byte_release+0x208>
4000bb58:	e3a00000 	mov	r0, #0
4000bb5c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bb60:	ea000007 	b	4000bb84 <_tx_byte_release+0x228>
4000bb64:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bb68:	e5870024 	str	r0, [r7, #36]	; 0x24
4000bb6c:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000bb70:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000bb74:	e5810074 	str	r0, [r1, #116]	; 0x74
4000bb78:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000bb7c:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000bb80:	e5810070 	str	r0, [r1, #112]	; 0x70
4000bb84:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bb88:	e2400001 	sub	r0, r0, #1
4000bb8c:	e5870028 	str	r0, [r7, #40]	; 0x28
4000bb90:	e3a00000 	mov	r0, #0
4000bb94:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000bb98:	e59f0080 	ldr	r0, [pc, #128]	; 4000bc20 <_tx_byte_release+0x2c4>
4000bb9c:	e5900000 	ldr	r0, [r0]
4000bba0:	e2800001 	add	r0, r0, #1
4000bba4:	e59f1074 	ldr	r1, [pc, #116]	; 4000bc20 <_tx_byte_release+0x2c4>
4000bba8:	e5810000 	str	r0, [r1]
4000bbac:	e121f005 	msr	CPSR_c, r5
4000bbb0:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000bbb4:	e5809000 	str	r9, [r0]
4000bbb8:	e3a00000 	mov	r0, #0
4000bbbc:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000bbc0:	e1a0000a 	mov	r0, sl
4000bbc4:	eb000d96 	bl	4000f224 <_tx_thread_system_resume>
4000bbc8:	e10f5000 	mrs	r5, CPSR
4000bbcc:	e3856080 	orr	r6, r5, #128	; 0x80
4000bbd0:	e121f006 	msr	CPSR_c, r6
4000bbd4:	e1a00000 	nop			; (mov r0, r0)
4000bbd8:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000bbdc:	e3500000 	cmp	r0, #0
4000bbe0:	1affffbd 	bne	4000badc <_tx_byte_release+0x180>
4000bbe4:	e1a00000 	nop			; (mov r0, r0)
4000bbe8:	e121f005 	msr	CPSR_c, r5
4000bbec:	eb000d60 	bl	4000f174 <_tx_thread_system_preempt_check>
4000bbf0:	e3a00000 	mov	r0, #0
4000bbf4:	eaffff6a 	b	4000b9a4 <_tx_byte_release+0x48>
4000bbf8:	42595445 	.word	0x42595445
4000bbfc:	40030e34 	.word	0x40030e34
4000bc00:	40030ea0 	.word	0x40030ea0
4000bc04:	40030ea4 	.word	0x40030ea4
4000bc08:	40030e2c 	.word	0x40030e2c
4000bc0c:	f0f0f0f0 	.word	0xf0f0f0f0
4000bc10:	40030e9c 	.word	0x40030e9c
4000bc14:	40030e98 	.word	0x40030e98
4000bc18:	40030e8c 	.word	0x40030e8c
4000bc1c:	ffffeeee 	.word	0xffffeeee
4000bc20:	40030e50 	.word	0x40030e50

4000bc24 <_tx_event_flags_create>:
4000bc24:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bc28:	e1a04000 	mov	r4, r0
4000bc2c:	e1a05001 	mov	r5, r1
4000bc30:	e3a01028 	mov	r1, #40	; 0x28
4000bc34:	e1a00004 	mov	r0, r4
4000bc38:	eb001e37 	bl	4001351c <__aeabi_memclr4>
4000bc3c:	e5845004 	str	r5, [r4, #4]
4000bc40:	e10f6000 	mrs	r6, CPSR
4000bc44:	e3867080 	orr	r7, r6, #128	; 0x80
4000bc48:	e121f007 	msr	CPSR_c, r7
4000bc4c:	e59f0170 	ldr	r0, [pc, #368]	; 4000bdc4 <_tx_event_flags_create+0x1a0>
4000bc50:	e5840000 	str	r0, [r4]
4000bc54:	e59f016c 	ldr	r0, [pc, #364]	; 4000bdc8 <_tx_event_flags_create+0x1a4>
4000bc58:	e5900000 	ldr	r0, [r0]
4000bc5c:	e3500000 	cmp	r0, #0
4000bc60:	0a00000e 	beq	4000bca0 <_tx_event_flags_create+0x7c>
4000bc64:	e59f015c 	ldr	r0, [pc, #348]	; 4000bdc8 <_tx_event_flags_create+0x1a4>
4000bc68:	e5900000 	ldr	r0, [r0]
4000bc6c:	e590001c 	ldr	r0, [r0, #28]
4000bc70:	e58d0004 	str	r0, [sp, #4]
4000bc74:	e59f014c 	ldr	r0, [pc, #332]	; 4000bdc8 <_tx_event_flags_create+0x1a4>
4000bc78:	e5900000 	ldr	r0, [r0]
4000bc7c:	e580401c 	str	r4, [r0, #28]
4000bc80:	e59d0004 	ldr	r0, [sp, #4]
4000bc84:	e5804018 	str	r4, [r0, #24]
4000bc88:	e59d0004 	ldr	r0, [sp, #4]
4000bc8c:	e584001c 	str	r0, [r4, #28]
4000bc90:	e59f0130 	ldr	r0, [pc, #304]	; 4000bdc8 <_tx_event_flags_create+0x1a4>
4000bc94:	e5900000 	ldr	r0, [r0]
4000bc98:	e5840018 	str	r0, [r4, #24]
4000bc9c:	ea000003 	b	4000bcb0 <_tx_event_flags_create+0x8c>
4000bca0:	e59f0120 	ldr	r0, [pc, #288]	; 4000bdc8 <_tx_event_flags_create+0x1a4>
4000bca4:	e5804000 	str	r4, [r0]
4000bca8:	e5844018 	str	r4, [r4, #24]
4000bcac:	e584401c 	str	r4, [r4, #28]
4000bcb0:	e59f0114 	ldr	r0, [pc, #276]	; 4000bdcc <_tx_event_flags_create+0x1a8>
4000bcb4:	e5900000 	ldr	r0, [r0]
4000bcb8:	e2800001 	add	r0, r0, #1
4000bcbc:	e59f1108 	ldr	r1, [pc, #264]	; 4000bdcc <_tx_event_flags_create+0x1a8>
4000bcc0:	e5810000 	str	r0, [r1]
4000bcc4:	e3a03000 	mov	r3, #0
4000bcc8:	e1a02005 	mov	r2, r5
4000bccc:	e1a01004 	mov	r1, r4
4000bcd0:	e3a00006 	mov	r0, #6
4000bcd4:	e58d3000 	str	r3, [sp]
4000bcd8:	eb0010a7 	bl	4000ff7c <_tx_trace_object_register>
4000bcdc:	e59f10ec 	ldr	r1, [pc, #236]	; 4000bdd0 <_tx_event_flags_create+0x1ac>
4000bce0:	e5910000 	ldr	r0, [r1]
4000bce4:	e3500000 	cmp	r0, #0
4000bce8:	0a000032 	beq	4000bdb8 <_tx_event_flags_create+0x194>
4000bcec:	e59f10e0 	ldr	r1, [pc, #224]	; 4000bdd4 <_tx_event_flags_create+0x1b0>
4000bcf0:	e5911000 	ldr	r1, [r1]
4000bcf4:	e2811001 	add	r1, r1, #1
4000bcf8:	e59f20d4 	ldr	r2, [pc, #212]	; 4000bdd4 <_tx_event_flags_create+0x1b0>
4000bcfc:	e5821000 	str	r1, [r2]
4000bd00:	e580100c 	str	r1, [r0, #12]
4000bd04:	e59f10cc 	ldr	r1, [pc, #204]	; 4000bdd8 <_tx_event_flags_create+0x1b4>
4000bd08:	e5911000 	ldr	r1, [r1]
4000bd0c:	e3510000 	cmp	r1, #0
4000bd10:	1a000006 	bne	4000bd30 <_tx_event_flags_create+0x10c>
4000bd14:	e59f10c0 	ldr	r1, [pc, #192]	; 4000bddc <_tx_event_flags_create+0x1b8>
4000bd18:	e5911000 	ldr	r1, [r1]
4000bd1c:	e5801000 	str	r1, [r0]
4000bd20:	e5901000 	ldr	r1, [r0]
4000bd24:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bd28:	e5801004 	str	r1, [r0, #4]
4000bd2c:	ea00000d 	b	4000bd68 <_tx_event_flags_create+0x144>
4000bd30:	e59f10a0 	ldr	r1, [pc, #160]	; 4000bdd8 <_tx_event_flags_create+0x1b4>
4000bd34:	e5911000 	ldr	r1, [r1]
4000bd38:	e59f20a0 	ldr	r2, [pc, #160]	; 4000bde0 <_tx_event_flags_create+0x1bc>
4000bd3c:	e1510002 	cmp	r1, r2
4000bd40:	2a000004 	bcs	4000bd58 <_tx_event_flags_create+0x134>
4000bd44:	e3e01000 	mvn	r1, #0
4000bd48:	e5801000 	str	r1, [r0]
4000bd4c:	e3a01000 	mov	r1, #0
4000bd50:	e5801004 	str	r1, [r0, #4]
4000bd54:	ea000003 	b	4000bd68 <_tx_event_flags_create+0x144>
4000bd58:	e59f1080 	ldr	r1, [pc, #128]	; 4000bde0 <_tx_event_flags_create+0x1bc>
4000bd5c:	e5801000 	str	r1, [r0]
4000bd60:	e3a01000 	mov	r1, #0
4000bd64:	e5801004 	str	r1, [r0, #4]
4000bd68:	e3a0101e 	mov	r1, #30
4000bd6c:	e5801008 	str	r1, [r0, #8]
4000bd70:	e5804010 	str	r4, [r0, #16]
4000bd74:	e28d1004 	add	r1, sp, #4
4000bd78:	e5801014 	str	r1, [r0, #20]
4000bd7c:	e3a01000 	mov	r1, #0
4000bd80:	e5801018 	str	r1, [r0, #24]
4000bd84:	e580101c 	str	r1, [r0, #28]
4000bd88:	e2800020 	add	r0, r0, #32
4000bd8c:	e59f1050 	ldr	r1, [pc, #80]	; 4000bde4 <_tx_event_flags_create+0x1c0>
4000bd90:	e5911000 	ldr	r1, [r1]
4000bd94:	e1500001 	cmp	r0, r1
4000bd98:	3a000001 	bcc	4000bda4 <_tx_event_flags_create+0x180>
4000bd9c:	e59f1044 	ldr	r1, [pc, #68]	; 4000bde8 <_tx_event_flags_create+0x1c4>
4000bda0:	e5910000 	ldr	r0, [r1]
4000bda4:	e59f1024 	ldr	r1, [pc, #36]	; 4000bdd0 <_tx_event_flags_create+0x1ac>
4000bda8:	e5810000 	str	r0, [r1]
4000bdac:	e59f1038 	ldr	r1, [pc, #56]	; 4000bdec <_tx_event_flags_create+0x1c8>
4000bdb0:	e5911000 	ldr	r1, [r1]
4000bdb4:	e5810020 	str	r0, [r1, #32]
4000bdb8:	e121f006 	msr	CPSR_c, r6
4000bdbc:	e3a00000 	mov	r0, #0
4000bdc0:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000bdc4:	4456444e 	.word	0x4456444e
4000bdc8:	40030eb8 	.word	0x40030eb8
4000bdcc:	40030ebc 	.word	0x40030ebc
4000bdd0:	40030ea0 	.word	0x40030ea0
4000bdd4:	40030ea4 	.word	0x40030ea4
4000bdd8:	40030e2c 	.word	0x40030e2c
4000bddc:	40030e34 	.word	0x40030e34
4000bde0:	f0f0f0f0 	.word	0xf0f0f0f0
4000bde4:	40030e9c 	.word	0x40030e9c
4000bde8:	40030e98 	.word	0x40030e98
4000bdec:	40030e8c 	.word	0x40030e8c

4000bdf0 <_tx_event_flags_delete>:
4000bdf0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000bdf4:	e1a04000 	mov	r4, r0
4000bdf8:	e10f5000 	mrs	r5, CPSR
4000bdfc:	e3856080 	orr	r6, r5, #128	; 0x80
4000be00:	e121f006 	msr	CPSR_c, r6
4000be04:	e59f1204 	ldr	r1, [pc, #516]	; 4000c010 <_tx_event_flags_delete+0x220>
4000be08:	e5910000 	ldr	r0, [r1]
4000be0c:	e3500000 	cmp	r0, #0
4000be10:	0a000031 	beq	4000bedc <_tx_event_flags_delete+0xec>
4000be14:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c014 <_tx_event_flags_delete+0x224>
4000be18:	e5911000 	ldr	r1, [r1]
4000be1c:	e2811001 	add	r1, r1, #1
4000be20:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c014 <_tx_event_flags_delete+0x224>
4000be24:	e5821000 	str	r1, [r2]
4000be28:	e580100c 	str	r1, [r0, #12]
4000be2c:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c018 <_tx_event_flags_delete+0x228>
4000be30:	e5911000 	ldr	r1, [r1]
4000be34:	e3510000 	cmp	r1, #0
4000be38:	1a000006 	bne	4000be58 <_tx_event_flags_delete+0x68>
4000be3c:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c01c <_tx_event_flags_delete+0x22c>
4000be40:	e5911000 	ldr	r1, [r1]
4000be44:	e5801000 	str	r1, [r0]
4000be48:	e5901000 	ldr	r1, [r0]
4000be4c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000be50:	e5801004 	str	r1, [r0, #4]
4000be54:	ea00000d 	b	4000be90 <_tx_event_flags_delete+0xa0>
4000be58:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c018 <_tx_event_flags_delete+0x228>
4000be5c:	e5911000 	ldr	r1, [r1]
4000be60:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c020 <_tx_event_flags_delete+0x230>
4000be64:	e1510002 	cmp	r1, r2
4000be68:	2a000004 	bcs	4000be80 <_tx_event_flags_delete+0x90>
4000be6c:	e3e01000 	mvn	r1, #0
4000be70:	e5801000 	str	r1, [r0]
4000be74:	e3a01000 	mov	r1, #0
4000be78:	e5801004 	str	r1, [r0, #4]
4000be7c:	ea000003 	b	4000be90 <_tx_event_flags_delete+0xa0>
4000be80:	e59f1198 	ldr	r1, [pc, #408]	; 4000c020 <_tx_event_flags_delete+0x230>
4000be84:	e5801000 	str	r1, [r0]
4000be88:	e3a01000 	mov	r1, #0
4000be8c:	e5801004 	str	r1, [r0, #4]
4000be90:	e3a0101f 	mov	r1, #31
4000be94:	e5801008 	str	r1, [r0, #8]
4000be98:	e5804010 	str	r4, [r0, #16]
4000be9c:	e580d014 	str	sp, [r0, #20]
4000bea0:	e3a01000 	mov	r1, #0
4000bea4:	e5801018 	str	r1, [r0, #24]
4000bea8:	e580101c 	str	r1, [r0, #28]
4000beac:	e2800020 	add	r0, r0, #32
4000beb0:	e59f116c 	ldr	r1, [pc, #364]	; 4000c024 <_tx_event_flags_delete+0x234>
4000beb4:	e5911000 	ldr	r1, [r1]
4000beb8:	e1500001 	cmp	r0, r1
4000bebc:	3a000001 	bcc	4000bec8 <_tx_event_flags_delete+0xd8>
4000bec0:	e59f1160 	ldr	r1, [pc, #352]	; 4000c028 <_tx_event_flags_delete+0x238>
4000bec4:	e5910000 	ldr	r0, [r1]
4000bec8:	e59f1140 	ldr	r1, [pc, #320]	; 4000c010 <_tx_event_flags_delete+0x220>
4000becc:	e5810000 	str	r0, [r1]
4000bed0:	e59f1154 	ldr	r1, [pc, #340]	; 4000c02c <_tx_event_flags_delete+0x23c>
4000bed4:	e5911000 	ldr	r1, [r1]
4000bed8:	e5810020 	str	r0, [r1, #32]
4000bedc:	e1a00004 	mov	r0, r4
4000bee0:	eb001090 	bl	40010128 <_tx_trace_object_unregister>
4000bee4:	e59f0144 	ldr	r0, [pc, #324]	; 4000c030 <_tx_event_flags_delete+0x240>
4000bee8:	e5900000 	ldr	r0, [r0]
4000beec:	e2400001 	sub	r0, r0, #1
4000bef0:	e59f1138 	ldr	r1, [pc, #312]	; 4000c030 <_tx_event_flags_delete+0x240>
4000bef4:	e5810000 	str	r0, [r1]
4000bef8:	e3a00000 	mov	r0, #0
4000befc:	e5840000 	str	r0, [r4]
4000bf00:	e5940018 	ldr	r0, [r4, #24]
4000bf04:	e1500004 	cmp	r0, r4
4000bf08:	1a000003 	bne	4000bf1c <_tx_event_flags_delete+0x12c>
4000bf0c:	e3a00000 	mov	r0, #0
4000bf10:	e59f111c 	ldr	r1, [pc, #284]	; 4000c034 <_tx_event_flags_delete+0x244>
4000bf14:	e5810000 	str	r0, [r1]
4000bf18:	ea00000c 	b	4000bf50 <_tx_event_flags_delete+0x160>
4000bf1c:	e594001c 	ldr	r0, [r4, #28]
4000bf20:	e5941018 	ldr	r1, [r4, #24]
4000bf24:	e581001c 	str	r0, [r1, #28]
4000bf28:	e5940018 	ldr	r0, [r4, #24]
4000bf2c:	e594101c 	ldr	r1, [r4, #28]
4000bf30:	e5810018 	str	r0, [r1, #24]
4000bf34:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c034 <_tx_event_flags_delete+0x244>
4000bf38:	e5900000 	ldr	r0, [r0]
4000bf3c:	e1500004 	cmp	r0, r4
4000bf40:	1a000002 	bne	4000bf50 <_tx_event_flags_delete+0x160>
4000bf44:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c034 <_tx_event_flags_delete+0x244>
4000bf48:	e5940018 	ldr	r0, [r4, #24]
4000bf4c:	e5810000 	str	r0, [r1]
4000bf50:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c038 <_tx_event_flags_delete+0x248>
4000bf54:	e5900000 	ldr	r0, [r0]
4000bf58:	e2800001 	add	r0, r0, #1
4000bf5c:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c038 <_tx_event_flags_delete+0x248>
4000bf60:	e5810000 	str	r0, [r1]
4000bf64:	e121f005 	msr	CPSR_c, r5
4000bf68:	e5940010 	ldr	r0, [r4, #16]
4000bf6c:	e58d0000 	str	r0, [sp]
4000bf70:	ea000017 	b	4000bfd4 <_tx_event_flags_delete+0x1e4>
4000bf74:	e10f5000 	mrs	r5, CPSR
4000bf78:	e3856080 	orr	r6, r5, #128	; 0x80
4000bf7c:	e121f006 	msr	CPSR_c, r6
4000bf80:	e3a00000 	mov	r0, #0
4000bf84:	e59d1000 	ldr	r1, [sp]
4000bf88:	e5810068 	str	r0, [r1, #104]	; 0x68
4000bf8c:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c038 <_tx_event_flags_delete+0x248>
4000bf90:	e5900000 	ldr	r0, [r0]
4000bf94:	e2800001 	add	r0, r0, #1
4000bf98:	e59f1098 	ldr	r1, [pc, #152]	; 4000c038 <_tx_event_flags_delete+0x248>
4000bf9c:	e5810000 	str	r0, [r1]
4000bfa0:	e121f005 	msr	CPSR_c, r5
4000bfa4:	e3a00001 	mov	r0, #1
4000bfa8:	e59d1000 	ldr	r1, [sp]
4000bfac:	e5810084 	str	r0, [r1, #132]	; 0x84
4000bfb0:	e59d0000 	ldr	r0, [sp]
4000bfb4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000bfb8:	e58d0000 	str	r0, [sp]
4000bfbc:	e59d1000 	ldr	r1, [sp]
4000bfc0:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000bfc4:	eb000c96 	bl	4000f224 <_tx_thread_system_resume>
4000bfc8:	e5940014 	ldr	r0, [r4, #20]
4000bfcc:	e2400001 	sub	r0, r0, #1
4000bfd0:	e5840014 	str	r0, [r4, #20]
4000bfd4:	e5940014 	ldr	r0, [r4, #20]
4000bfd8:	e3500000 	cmp	r0, #0
4000bfdc:	1affffe4 	bne	4000bf74 <_tx_event_flags_delete+0x184>
4000bfe0:	e10f5000 	mrs	r5, CPSR
4000bfe4:	e3856080 	orr	r6, r5, #128	; 0x80
4000bfe8:	e121f006 	msr	CPSR_c, r6
4000bfec:	e59f0044 	ldr	r0, [pc, #68]	; 4000c038 <_tx_event_flags_delete+0x248>
4000bff0:	e5900000 	ldr	r0, [r0]
4000bff4:	e2400001 	sub	r0, r0, #1
4000bff8:	e59f1038 	ldr	r1, [pc, #56]	; 4000c038 <_tx_event_flags_delete+0x248>
4000bffc:	e5810000 	str	r0, [r1]
4000c000:	e121f005 	msr	CPSR_c, r5
4000c004:	eb000c5a 	bl	4000f174 <_tx_thread_system_preempt_check>
4000c008:	e3a00000 	mov	r0, #0
4000c00c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c010:	40030ea0 	.word	0x40030ea0
4000c014:	40030ea4 	.word	0x40030ea4
4000c018:	40030e2c 	.word	0x40030e2c
4000c01c:	40030e34 	.word	0x40030e34
4000c020:	f0f0f0f0 	.word	0xf0f0f0f0
4000c024:	40030e9c 	.word	0x40030e9c
4000c028:	40030e98 	.word	0x40030e98
4000c02c:	40030e8c 	.word	0x40030e8c
4000c030:	40030ebc 	.word	0x40030ebc
4000c034:	40030eb8 	.word	0x40030eb8
4000c038:	40030e50 	.word	0x40030e50

4000c03c <_tx_event_flags_get>:
4000c03c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c040:	e1a04000 	mov	r4, r0
4000c044:	e1a05001 	mov	r5, r1
4000c048:	e1a06002 	mov	r6, r2
4000c04c:	e1a07003 	mov	r7, r3
4000c050:	e10f8000 	mrs	r8, CPSR
4000c054:	e3880080 	orr	r0, r8, #128	; 0x80
4000c058:	e58d0004 	str	r0, [sp, #4]
4000c05c:	e59d0004 	ldr	r0, [sp, #4]
4000c060:	e121f000 	msr	CPSR_c, r0
4000c064:	e59f1278 	ldr	r1, [pc, #632]	; 4000c2e4 <_tx_event_flags_get+0x2a8>
4000c068:	e5910000 	ldr	r0, [r1]
4000c06c:	e3500000 	cmp	r0, #0
4000c070:	0a000031 	beq	4000c13c <_tx_event_flags_get+0x100>
4000c074:	e59f126c 	ldr	r1, [pc, #620]	; 4000c2e8 <_tx_event_flags_get+0x2ac>
4000c078:	e5911000 	ldr	r1, [r1]
4000c07c:	e2811001 	add	r1, r1, #1
4000c080:	e59f2260 	ldr	r2, [pc, #608]	; 4000c2e8 <_tx_event_flags_get+0x2ac>
4000c084:	e5821000 	str	r1, [r2]
4000c088:	e580100c 	str	r1, [r0, #12]
4000c08c:	e59f1258 	ldr	r1, [pc, #600]	; 4000c2ec <_tx_event_flags_get+0x2b0>
4000c090:	e5911000 	ldr	r1, [r1]
4000c094:	e3510000 	cmp	r1, #0
4000c098:	1a000006 	bne	4000c0b8 <_tx_event_flags_get+0x7c>
4000c09c:	e59f124c 	ldr	r1, [pc, #588]	; 4000c2f0 <_tx_event_flags_get+0x2b4>
4000c0a0:	e5911000 	ldr	r1, [r1]
4000c0a4:	e5801000 	str	r1, [r0]
4000c0a8:	e5901000 	ldr	r1, [r0]
4000c0ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c0b0:	e5801004 	str	r1, [r0, #4]
4000c0b4:	ea00000d 	b	4000c0f0 <_tx_event_flags_get+0xb4>
4000c0b8:	e59f122c 	ldr	r1, [pc, #556]	; 4000c2ec <_tx_event_flags_get+0x2b0>
4000c0bc:	e5911000 	ldr	r1, [r1]
4000c0c0:	e59f222c 	ldr	r2, [pc, #556]	; 4000c2f4 <_tx_event_flags_get+0x2b8>
4000c0c4:	e1510002 	cmp	r1, r2
4000c0c8:	2a000004 	bcs	4000c0e0 <_tx_event_flags_get+0xa4>
4000c0cc:	e3e01000 	mvn	r1, #0
4000c0d0:	e5801000 	str	r1, [r0]
4000c0d4:	e3a01000 	mov	r1, #0
4000c0d8:	e5801004 	str	r1, [r0, #4]
4000c0dc:	ea000003 	b	4000c0f0 <_tx_event_flags_get+0xb4>
4000c0e0:	e59f120c 	ldr	r1, [pc, #524]	; 4000c2f4 <_tx_event_flags_get+0x2b8>
4000c0e4:	e5801000 	str	r1, [r0]
4000c0e8:	e3a01000 	mov	r1, #0
4000c0ec:	e5801004 	str	r1, [r0, #4]
4000c0f0:	e3a01020 	mov	r1, #32
4000c0f4:	e5801008 	str	r1, [r0, #8]
4000c0f8:	e5804010 	str	r4, [r0, #16]
4000c0fc:	e5805014 	str	r5, [r0, #20]
4000c100:	e5941008 	ldr	r1, [r4, #8]
4000c104:	e5801018 	str	r1, [r0, #24]
4000c108:	e580601c 	str	r6, [r0, #28]
4000c10c:	e2800020 	add	r0, r0, #32
4000c110:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c2f8 <_tx_event_flags_get+0x2bc>
4000c114:	e5911000 	ldr	r1, [r1]
4000c118:	e1500001 	cmp	r0, r1
4000c11c:	3a000001 	bcc	4000c128 <_tx_event_flags_get+0xec>
4000c120:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c2fc <_tx_event_flags_get+0x2c0>
4000c124:	e5910000 	ldr	r0, [r1]
4000c128:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c2e4 <_tx_event_flags_get+0x2a8>
4000c12c:	e5810000 	str	r0, [r1]
4000c130:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c300 <_tx_event_flags_get+0x2c4>
4000c134:	e5911000 	ldr	r1, [r1]
4000c138:	e5810020 	str	r0, [r1, #32]
4000c13c:	e594a008 	ldr	sl, [r4, #8]
4000c140:	e594b020 	ldr	fp, [r4, #32]
4000c144:	e35b0000 	cmp	fp, #0
4000c148:	0a000000 	beq	4000c150 <_tx_event_flags_get+0x114>
4000c14c:	e1caa00b 	bic	sl, sl, fp
4000c150:	e3160002 	tst	r6, #2
4000c154:	0a000006 	beq	4000c174 <_tx_event_flags_get+0x138>
4000c158:	e00a0005 	and	r0, sl, r5
4000c15c:	e1500005 	cmp	r0, r5
4000c160:	1a000001 	bne	4000c16c <_tx_event_flags_get+0x130>
4000c164:	e3a09000 	mov	r9, #0
4000c168:	ea000006 	b	4000c188 <_tx_event_flags_get+0x14c>
4000c16c:	e3a09007 	mov	r9, #7
4000c170:	ea000004 	b	4000c188 <_tx_event_flags_get+0x14c>
4000c174:	e11a0005 	tst	sl, r5
4000c178:	0a000001 	beq	4000c184 <_tx_event_flags_get+0x148>
4000c17c:	e3a09000 	mov	r9, #0
4000c180:	ea000000 	b	4000c188 <_tx_event_flags_get+0x14c>
4000c184:	e3a09007 	mov	r9, #7
4000c188:	e3590000 	cmp	r9, #0
4000c18c:	1a000010 	bne	4000c1d4 <_tx_event_flags_get+0x198>
4000c190:	e587a000 	str	sl, [r7]
4000c194:	e3160001 	tst	r6, #1
4000c198:	0a00004e 	beq	4000c2d8 <_tx_event_flags_get+0x29c>
4000c19c:	e5940014 	ldr	r0, [r4, #20]
4000c1a0:	e3500000 	cmp	r0, #0
4000c1a4:	0a000006 	beq	4000c1c4 <_tx_event_flags_get+0x188>
4000c1a8:	e5940010 	ldr	r0, [r4, #16]
4000c1ac:	e3500000 	cmp	r0, #0
4000c1b0:	1a000003 	bne	4000c1c4 <_tx_event_flags_get+0x188>
4000c1b4:	e5940020 	ldr	r0, [r4, #32]
4000c1b8:	e1800005 	orr	r0, r0, r5
4000c1bc:	e5840020 	str	r0, [r4, #32]
4000c1c0:	ea000044 	b	4000c2d8 <_tx_event_flags_get+0x29c>
4000c1c4:	e5940008 	ldr	r0, [r4, #8]
4000c1c8:	e1c00005 	bic	r0, r0, r5
4000c1cc:	e5840008 	str	r0, [r4, #8]
4000c1d0:	ea000040 	b	4000c2d8 <_tx_event_flags_get+0x29c>
4000c1d4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c1d8:	e3500000 	cmp	r0, #0
4000c1dc:	0a00003c 	beq	4000c2d4 <_tx_event_flags_get+0x298>
4000c1e0:	e59f0108 	ldr	r0, [pc, #264]	; 4000c2f0 <_tx_event_flags_get+0x2b4>
4000c1e4:	e5900000 	ldr	r0, [r0]
4000c1e8:	e58d0000 	str	r0, [sp]
4000c1ec:	e59f1110 	ldr	r1, [pc, #272]	; 4000c304 <_tx_event_flags_get+0x2c8>
4000c1f0:	e59d0000 	ldr	r0, [sp]
4000c1f4:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c1f8:	e59d0000 	ldr	r0, [sp]
4000c1fc:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c200:	e59d0000 	ldr	r0, [sp]
4000c204:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c208:	e59d0000 	ldr	r0, [sp]
4000c20c:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c210:	e59d0000 	ldr	r0, [sp]
4000c214:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c218:	e5940010 	ldr	r0, [r4, #16]
4000c21c:	e3500000 	cmp	r0, #0
4000c220:	0a00000e 	beq	4000c260 <_tx_event_flags_get+0x224>
4000c224:	e5941010 	ldr	r1, [r4, #16]
4000c228:	e59d0000 	ldr	r0, [sp]
4000c22c:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c230:	e5940010 	ldr	r0, [r4, #16]
4000c234:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c238:	e59d0000 	ldr	r0, [sp]
4000c23c:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c240:	e59d0000 	ldr	r0, [sp]
4000c244:	e5941010 	ldr	r1, [r4, #16]
4000c248:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c24c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c250:	e59d0000 	ldr	r0, [sp]
4000c254:	e5941010 	ldr	r1, [r4, #16]
4000c258:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c25c:	ea000005 	b	4000c278 <_tx_event_flags_get+0x23c>
4000c260:	e59d0000 	ldr	r0, [sp]
4000c264:	e5840010 	str	r0, [r4, #16]
4000c268:	e59d0000 	ldr	r0, [sp]
4000c26c:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c270:	e59d0000 	ldr	r0, [sp]
4000c274:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c278:	e5940014 	ldr	r0, [r4, #20]
4000c27c:	e2800001 	add	r0, r0, #1
4000c280:	e5840014 	str	r0, [r4, #20]
4000c284:	e3a00007 	mov	r0, #7
4000c288:	e59d1000 	ldr	r1, [sp]
4000c28c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c290:	e3a01001 	mov	r1, #1
4000c294:	e59d0000 	ldr	r0, [sp]
4000c298:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c29c:	e59d0000 	ldr	r0, [sp]
4000c2a0:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c2a4:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c2a8:	e59f0058 	ldr	r0, [pc, #88]	; 4000c308 <_tx_event_flags_get+0x2cc>
4000c2ac:	e5900000 	ldr	r0, [r0]
4000c2b0:	e2800001 	add	r0, r0, #1
4000c2b4:	e59f104c 	ldr	r1, [pc, #76]	; 4000c308 <_tx_event_flags_get+0x2cc>
4000c2b8:	e5810000 	str	r0, [r1]
4000c2bc:	e121f008 	msr	CPSR_c, r8
4000c2c0:	e59d0000 	ldr	r0, [sp]
4000c2c4:	ebfff22f 	bl	40008b88 <_tx_thread_system_suspend>
4000c2c8:	e59d0000 	ldr	r0, [sp]
4000c2cc:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c2d0:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c2d4:	e3a09007 	mov	r9, #7
4000c2d8:	e121f008 	msr	CPSR_c, r8
4000c2dc:	e1a00009 	mov	r0, r9
4000c2e0:	eafffffa 	b	4000c2d0 <_tx_event_flags_get+0x294>
4000c2e4:	40030ea0 	.word	0x40030ea0
4000c2e8:	40030ea4 	.word	0x40030ea4
4000c2ec:	40030e2c 	.word	0x40030e2c
4000c2f0:	40030e34 	.word	0x40030e34
4000c2f4:	f0f0f0f0 	.word	0xf0f0f0f0
4000c2f8:	40030e9c 	.word	0x40030e9c
4000c2fc:	40030e98 	.word	0x40030e98
4000c300:	40030e8c 	.word	0x40030e8c
4000c304:	40010234 	.word	0x40010234
4000c308:	40030e50 	.word	0x40030e50

4000c30c <_tx_event_flags_set>:
4000c30c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c310:	e24dd01c 	sub	sp, sp, #28
4000c314:	e1a04000 	mov	r4, r0
4000c318:	e1a05001 	mov	r5, r1
4000c31c:	e1a06002 	mov	r6, r2
4000c320:	e10f7000 	mrs	r7, CPSR
4000c324:	e3870080 	orr	r0, r7, #128	; 0x80
4000c328:	e58d0018 	str	r0, [sp, #24]
4000c32c:	e59d0018 	ldr	r0, [sp, #24]
4000c330:	e121f000 	msr	CPSR_c, r0
4000c334:	e59f1594 	ldr	r1, [pc, #1428]	; 4000c8d0 <_tx_event_flags_set+0x5c4>
4000c338:	e5910000 	ldr	r0, [r1]
4000c33c:	e3500000 	cmp	r0, #0
4000c340:	0a000031 	beq	4000c40c <_tx_event_flags_set+0x100>
4000c344:	e59f1588 	ldr	r1, [pc, #1416]	; 4000c8d4 <_tx_event_flags_set+0x5c8>
4000c348:	e5911000 	ldr	r1, [r1]
4000c34c:	e2811001 	add	r1, r1, #1
4000c350:	e59f257c 	ldr	r2, [pc, #1404]	; 4000c8d4 <_tx_event_flags_set+0x5c8>
4000c354:	e5821000 	str	r1, [r2]
4000c358:	e580100c 	str	r1, [r0, #12]
4000c35c:	e59f1574 	ldr	r1, [pc, #1396]	; 4000c8d8 <_tx_event_flags_set+0x5cc>
4000c360:	e5911000 	ldr	r1, [r1]
4000c364:	e3510000 	cmp	r1, #0
4000c368:	1a000006 	bne	4000c388 <_tx_event_flags_set+0x7c>
4000c36c:	e59f1568 	ldr	r1, [pc, #1384]	; 4000c8dc <_tx_event_flags_set+0x5d0>
4000c370:	e5911000 	ldr	r1, [r1]
4000c374:	e5801000 	str	r1, [r0]
4000c378:	e5901000 	ldr	r1, [r0]
4000c37c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c380:	e5801004 	str	r1, [r0, #4]
4000c384:	ea00000d 	b	4000c3c0 <_tx_event_flags_set+0xb4>
4000c388:	e59f1548 	ldr	r1, [pc, #1352]	; 4000c8d8 <_tx_event_flags_set+0x5cc>
4000c38c:	e5911000 	ldr	r1, [r1]
4000c390:	e59f2548 	ldr	r2, [pc, #1352]	; 4000c8e0 <_tx_event_flags_set+0x5d4>
4000c394:	e1510002 	cmp	r1, r2
4000c398:	2a000004 	bcs	4000c3b0 <_tx_event_flags_set+0xa4>
4000c39c:	e3e01000 	mvn	r1, #0
4000c3a0:	e5801000 	str	r1, [r0]
4000c3a4:	e3a01000 	mov	r1, #0
4000c3a8:	e5801004 	str	r1, [r0, #4]
4000c3ac:	ea000003 	b	4000c3c0 <_tx_event_flags_set+0xb4>
4000c3b0:	e59f1528 	ldr	r1, [pc, #1320]	; 4000c8e0 <_tx_event_flags_set+0x5d4>
4000c3b4:	e5801000 	str	r1, [r0]
4000c3b8:	e3a01000 	mov	r1, #0
4000c3bc:	e5801004 	str	r1, [r0, #4]
4000c3c0:	e3a01024 	mov	r1, #36	; 0x24
4000c3c4:	e5801008 	str	r1, [r0, #8]
4000c3c8:	e5804010 	str	r4, [r0, #16]
4000c3cc:	e5805014 	str	r5, [r0, #20]
4000c3d0:	e5806018 	str	r6, [r0, #24]
4000c3d4:	e5941014 	ldr	r1, [r4, #20]
4000c3d8:	e580101c 	str	r1, [r0, #28]
4000c3dc:	e2800020 	add	r0, r0, #32
4000c3e0:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000c8e4 <_tx_event_flags_set+0x5d8>
4000c3e4:	e5911000 	ldr	r1, [r1]
4000c3e8:	e1500001 	cmp	r0, r1
4000c3ec:	3a000001 	bcc	4000c3f8 <_tx_event_flags_set+0xec>
4000c3f0:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000c8e8 <_tx_event_flags_set+0x5dc>
4000c3f4:	e5910000 	ldr	r0, [r1]
4000c3f8:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000c8d0 <_tx_event_flags_set+0x5c4>
4000c3fc:	e5810000 	str	r0, [r1]
4000c400:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000c8ec <_tx_event_flags_set+0x5e0>
4000c404:	e5911000 	ldr	r1, [r1]
4000c408:	e5810020 	str	r0, [r1, #32]
4000c40c:	e3160002 	tst	r6, #2
4000c410:	0a000011 	beq	4000c45c <_tx_event_flags_set+0x150>
4000c414:	e5940014 	ldr	r0, [r4, #20]
4000c418:	e3500000 	cmp	r0, #0
4000c41c:	0a000007 	beq	4000c440 <_tx_event_flags_set+0x134>
4000c420:	e5940010 	ldr	r0, [r4, #16]
4000c424:	e3500000 	cmp	r0, #0
4000c428:	1a000004 	bne	4000c440 <_tx_event_flags_set+0x134>
4000c42c:	e1e01005 	mvn	r1, r5
4000c430:	e5940020 	ldr	r0, [r4, #32]
4000c434:	e1800001 	orr	r0, r0, r1
4000c438:	e5840020 	str	r0, [r4, #32]
4000c43c:	ea000002 	b	4000c44c <_tx_event_flags_set+0x140>
4000c440:	e5940008 	ldr	r0, [r4, #8]
4000c444:	e0000005 	and	r0, r0, r5
4000c448:	e5840008 	str	r0, [r4, #8]
4000c44c:	e121f007 	msr	CPSR_c, r7
4000c450:	e3a00000 	mov	r0, #0
4000c454:	e28dd01c 	add	sp, sp, #28
4000c458:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c45c:	e5940008 	ldr	r0, [r4, #8]
4000c460:	e1800005 	orr	r0, r0, r5
4000c464:	e5840008 	str	r0, [r4, #8]
4000c468:	e5940020 	ldr	r0, [r4, #32]
4000c46c:	e3500000 	cmp	r0, #0
4000c470:	0a000002 	beq	4000c480 <_tx_event_flags_set+0x174>
4000c474:	e5940020 	ldr	r0, [r4, #32]
4000c478:	e1c00005 	bic	r0, r0, r5
4000c47c:	e5840020 	str	r0, [r4, #32]
4000c480:	e5940010 	ldr	r0, [r4, #16]
4000c484:	e3500000 	cmp	r0, #0
4000c488:	0a000102 	beq	4000c898 <_tx_event_flags_set+0x58c>
4000c48c:	e5940014 	ldr	r0, [r4, #20]
4000c490:	e3500001 	cmp	r0, #1
4000c494:	1a000048 	bne	4000c5bc <_tx_event_flags_set+0x2b0>
4000c498:	e5940010 	ldr	r0, [r4, #16]
4000c49c:	e58d0014 	str	r0, [sp, #20]
4000c4a0:	e59d0014 	ldr	r0, [sp, #20]
4000c4a4:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c4a8:	e3100002 	tst	r0, #2
4000c4ac:	0a00000b 	beq	4000c4e0 <_tx_event_flags_set+0x1d4>
4000c4b0:	e5940008 	ldr	r0, [r4, #8]
4000c4b4:	e59d1014 	ldr	r1, [sp, #20]
4000c4b8:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c4bc:	e0000001 	and	r0, r0, r1
4000c4c0:	e59d1014 	ldr	r1, [sp, #20]
4000c4c4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c4c8:	e1500001 	cmp	r0, r1
4000c4cc:	1a000001 	bne	4000c4d8 <_tx_event_flags_set+0x1cc>
4000c4d0:	e3a08000 	mov	r8, #0
4000c4d4:	ea000009 	b	4000c500 <_tx_event_flags_set+0x1f4>
4000c4d8:	e3a08007 	mov	r8, #7
4000c4dc:	ea000007 	b	4000c500 <_tx_event_flags_set+0x1f4>
4000c4e0:	e5940008 	ldr	r0, [r4, #8]
4000c4e4:	e59d1014 	ldr	r1, [sp, #20]
4000c4e8:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c4ec:	e1100001 	tst	r0, r1
4000c4f0:	0a000001 	beq	4000c4fc <_tx_event_flags_set+0x1f0>
4000c4f4:	e3a08000 	mov	r8, #0
4000c4f8:	ea000000 	b	4000c500 <_tx_event_flags_set+0x1f4>
4000c4fc:	e3a08007 	mov	r8, #7
4000c500:	e3580000 	cmp	r8, #0
4000c504:	1a000024 	bne	4000c59c <_tx_event_flags_set+0x290>
4000c508:	e5941008 	ldr	r1, [r4, #8]
4000c50c:	e59d0014 	ldr	r0, [sp, #20]
4000c510:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c514:	e5801000 	str	r1, [r0]
4000c518:	e59d0014 	ldr	r0, [sp, #20]
4000c51c:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c520:	e3100001 	tst	r0, #1
4000c524:	0a000004 	beq	4000c53c <_tx_event_flags_set+0x230>
4000c528:	e5940008 	ldr	r0, [r4, #8]
4000c52c:	e59d1014 	ldr	r1, [sp, #20]
4000c530:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c534:	e1c00001 	bic	r0, r0, r1
4000c538:	e5840008 	str	r0, [r4, #8]
4000c53c:	e3a00000 	mov	r0, #0
4000c540:	e5840010 	str	r0, [r4, #16]
4000c544:	e5840014 	str	r0, [r4, #20]
4000c548:	e3a01000 	mov	r1, #0
4000c54c:	e59d0014 	ldr	r0, [sp, #20]
4000c550:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c554:	e59f0394 	ldr	r0, [pc, #916]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c558:	e5900000 	ldr	r0, [r0]
4000c55c:	e2800001 	add	r0, r0, #1
4000c560:	e59f1388 	ldr	r1, [pc, #904]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c564:	e5810000 	str	r0, [r1]
4000c568:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c56c:	e121f007 	msr	CPSR_c, r7
4000c570:	e35b0000 	cmp	fp, #0
4000c574:	0a000001 	beq	4000c580 <_tx_event_flags_set+0x274>
4000c578:	e1a00004 	mov	r0, r4
4000c57c:	e12fff3b 	blx	fp
4000c580:	e3a00000 	mov	r0, #0
4000c584:	e59d1014 	ldr	r1, [sp, #20]
4000c588:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c58c:	e59d0014 	ldr	r0, [sp, #20]
4000c590:	eb000b23 	bl	4000f224 <_tx_thread_system_resume>
4000c594:	e3a00000 	mov	r0, #0
4000c598:	eaffffad 	b	4000c454 <_tx_event_flags_set+0x148>
4000c59c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c5a0:	e121f007 	msr	CPSR_c, r7
4000c5a4:	e35b0000 	cmp	fp, #0
4000c5a8:	0a000001 	beq	4000c5b4 <_tx_event_flags_set+0x2a8>
4000c5ac:	e1a00004 	mov	r0, r4
4000c5b0:	e12fff3b 	blx	fp
4000c5b4:	e3a00000 	mov	r0, #0
4000c5b8:	eaffffa5 	b	4000c454 <_tx_event_flags_set+0x148>
4000c5bc:	e5940010 	ldr	r0, [r4, #16]
4000c5c0:	e58d0004 	str	r0, [sp, #4]
4000c5c4:	e59d0004 	ldr	r0, [sp, #4]
4000c5c8:	e58d0014 	str	r0, [sp, #20]
4000c5cc:	e3a00000 	mov	r0, #0
4000c5d0:	e5840010 	str	r0, [r4, #16]
4000c5d4:	e58d000c 	str	r0, [sp, #12]
4000c5d8:	e58d0008 	str	r0, [sp, #8]
4000c5dc:	e5940014 	ldr	r0, [r4, #20]
4000c5e0:	e58d0000 	str	r0, [sp]
4000c5e4:	e5949008 	ldr	r9, [r4, #8]
4000c5e8:	e59f0300 	ldr	r0, [pc, #768]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c5ec:	e5900000 	ldr	r0, [r0]
4000c5f0:	e2800001 	add	r0, r0, #1
4000c5f4:	e59f12f4 	ldr	r1, [pc, #756]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c5f8:	e5810000 	str	r0, [r1]
4000c5fc:	e1a00000 	nop			; (mov r0, r0)
4000c600:	e121f007 	msr	CPSR_c, r7
4000c604:	e10f7000 	mrs	r7, CPSR
4000c608:	e3870080 	orr	r0, r7, #128	; 0x80
4000c60c:	e58d0018 	str	r0, [sp, #24]
4000c610:	e59d0018 	ldr	r0, [sp, #24]
4000c614:	e121f000 	msr	CPSR_c, r0
4000c618:	e594000c 	ldr	r0, [r4, #12]
4000c61c:	e3500000 	cmp	r0, #0
4000c620:	0a00000b 	beq	4000c654 <_tx_event_flags_set+0x348>
4000c624:	e3a00000 	mov	r0, #0
4000c628:	e584000c 	str	r0, [r4, #12]
4000c62c:	e59d0004 	ldr	r0, [sp, #4]
4000c630:	e58d0014 	str	r0, [sp, #20]
4000c634:	e5940014 	ldr	r0, [r4, #20]
4000c638:	e58d0000 	str	r0, [sp]
4000c63c:	e5940008 	ldr	r0, [r4, #8]
4000c640:	e1899000 	orr	r9, r9, r0
4000c644:	e59d0014 	ldr	r0, [sp, #20]
4000c648:	e3500000 	cmp	r0, #0
4000c64c:	1a000000 	bne	4000c654 <_tx_event_flags_set+0x348>
4000c650:	ea00005d 	b	4000c7cc <_tx_event_flags_set+0x4c0>
4000c654:	e59d0014 	ldr	r0, [sp, #20]
4000c658:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c65c:	e31a0002 	tst	sl, #2
4000c660:	0a00000a 	beq	4000c690 <_tx_event_flags_set+0x384>
4000c664:	e59d0014 	ldr	r0, [sp, #20]
4000c668:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c66c:	e0000009 	and	r0, r0, r9
4000c670:	e59d1014 	ldr	r1, [sp, #20]
4000c674:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c678:	e1500001 	cmp	r0, r1
4000c67c:	1a000001 	bne	4000c688 <_tx_event_flags_set+0x37c>
4000c680:	e3a08000 	mov	r8, #0
4000c684:	ea000008 	b	4000c6ac <_tx_event_flags_set+0x3a0>
4000c688:	e3a08007 	mov	r8, #7
4000c68c:	ea000006 	b	4000c6ac <_tx_event_flags_set+0x3a0>
4000c690:	e59d0014 	ldr	r0, [sp, #20]
4000c694:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c698:	e1100009 	tst	r0, r9
4000c69c:	0a000001 	beq	4000c6a8 <_tx_event_flags_set+0x39c>
4000c6a0:	e3a08000 	mov	r8, #0
4000c6a4:	ea000000 	b	4000c6ac <_tx_event_flags_set+0x3a0>
4000c6a8:	e3a08007 	mov	r8, #7
4000c6ac:	e59d0014 	ldr	r0, [sp, #20]
4000c6b0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c6b4:	e58d0010 	str	r0, [sp, #16]
4000c6b8:	e3580000 	cmp	r8, #0
4000c6bc:	1a00003c 	bne	4000c7b4 <_tx_event_flags_set+0x4a8>
4000c6c0:	e59d0014 	ldr	r0, [sp, #20]
4000c6c4:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c6c8:	e5809000 	str	r9, [r0]
4000c6cc:	e31a0001 	tst	sl, #1
4000c6d0:	0a000004 	beq	4000c6e8 <_tx_event_flags_set+0x3dc>
4000c6d4:	e5940008 	ldr	r0, [r4, #8]
4000c6d8:	e59d1014 	ldr	r1, [sp, #20]
4000c6dc:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c6e0:	e1c00001 	bic	r0, r0, r1
4000c6e4:	e5840008 	str	r0, [r4, #8]
4000c6e8:	e59d0014 	ldr	r0, [sp, #20]
4000c6ec:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c6f0:	e1510000 	cmp	r1, r0
4000c6f4:	1a000002 	bne	4000c704 <_tx_event_flags_set+0x3f8>
4000c6f8:	e3a00000 	mov	r0, #0
4000c6fc:	e58d0004 	str	r0, [sp, #4]
4000c700:	ea000010 	b	4000c748 <_tx_event_flags_set+0x43c>
4000c704:	e59d0004 	ldr	r0, [sp, #4]
4000c708:	e59d1014 	ldr	r1, [sp, #20]
4000c70c:	e1500001 	cmp	r0, r1
4000c710:	1a000002 	bne	4000c720 <_tx_event_flags_set+0x414>
4000c714:	e59d0014 	ldr	r0, [sp, #20]
4000c718:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c71c:	e58d0004 	str	r0, [sp, #4]
4000c720:	e59d0014 	ldr	r0, [sp, #20]
4000c724:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c728:	e59d1014 	ldr	r1, [sp, #20]
4000c72c:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c730:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c734:	e59d0014 	ldr	r0, [sp, #20]
4000c738:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c73c:	e59d1014 	ldr	r1, [sp, #20]
4000c740:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c744:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c748:	e5940014 	ldr	r0, [r4, #20]
4000c74c:	e2400001 	sub	r0, r0, #1
4000c750:	e5840014 	str	r0, [r4, #20]
4000c754:	e3a00000 	mov	r0, #0
4000c758:	e59d1014 	ldr	r1, [sp, #20]
4000c75c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c760:	e59d1014 	ldr	r1, [sp, #20]
4000c764:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c768:	e59d000c 	ldr	r0, [sp, #12]
4000c76c:	e3500000 	cmp	r0, #0
4000c770:	1a000007 	bne	4000c794 <_tx_event_flags_set+0x488>
4000c774:	e59d0014 	ldr	r0, [sp, #20]
4000c778:	e58d000c 	str	r0, [sp, #12]
4000c77c:	e59d0014 	ldr	r0, [sp, #20]
4000c780:	e58d0008 	str	r0, [sp, #8]
4000c784:	e3a01000 	mov	r1, #0
4000c788:	e59d0014 	ldr	r0, [sp, #20]
4000c78c:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c790:	ea000007 	b	4000c7b4 <_tx_event_flags_set+0x4a8>
4000c794:	e59d0014 	ldr	r0, [sp, #20]
4000c798:	e59d1008 	ldr	r1, [sp, #8]
4000c79c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c7a0:	e3a00000 	mov	r0, #0
4000c7a4:	e59d1014 	ldr	r1, [sp, #20]
4000c7a8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c7ac:	e59d0014 	ldr	r0, [sp, #20]
4000c7b0:	e58d0008 	str	r0, [sp, #8]
4000c7b4:	e59d0010 	ldr	r0, [sp, #16]
4000c7b8:	e58d0014 	str	r0, [sp, #20]
4000c7bc:	e59d0000 	ldr	r0, [sp]
4000c7c0:	e2500001 	subs	r0, r0, #1
4000c7c4:	e58d0000 	str	r0, [sp]
4000c7c8:	1affff8c 	bne	4000c600 <_tx_event_flags_set+0x2f4>
4000c7cc:	e1a00000 	nop			; (mov r0, r0)
4000c7d0:	e59d0004 	ldr	r0, [sp, #4]
4000c7d4:	e5840010 	str	r0, [r4, #16]
4000c7d8:	e5940020 	ldr	r0, [r4, #32]
4000c7dc:	e3500000 	cmp	r0, #0
4000c7e0:	0a000005 	beq	4000c7fc <_tx_event_flags_set+0x4f0>
4000c7e4:	e5940008 	ldr	r0, [r4, #8]
4000c7e8:	e5941020 	ldr	r1, [r4, #32]
4000c7ec:	e1c00001 	bic	r0, r0, r1
4000c7f0:	e5840008 	str	r0, [r4, #8]
4000c7f4:	e3a00000 	mov	r0, #0
4000c7f8:	e5840020 	str	r0, [r4, #32]
4000c7fc:	e121f007 	msr	CPSR_c, r7
4000c800:	e59d000c 	ldr	r0, [sp, #12]
4000c804:	e58d0014 	str	r0, [sp, #20]
4000c808:	ea000011 	b	4000c854 <_tx_event_flags_set+0x548>
4000c80c:	e59d0014 	ldr	r0, [sp, #20]
4000c810:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c814:	e58d0010 	str	r0, [sp, #16]
4000c818:	e10f7000 	mrs	r7, CPSR
4000c81c:	e3870080 	orr	r0, r7, #128	; 0x80
4000c820:	e58d0018 	str	r0, [sp, #24]
4000c824:	e59d0018 	ldr	r0, [sp, #24]
4000c828:	e121f000 	msr	CPSR_c, r0
4000c82c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c830:	e5900000 	ldr	r0, [r0]
4000c834:	e2800001 	add	r0, r0, #1
4000c838:	e59f10b0 	ldr	r1, [pc, #176]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c83c:	e5810000 	str	r0, [r1]
4000c840:	e121f007 	msr	CPSR_c, r7
4000c844:	e59d0014 	ldr	r0, [sp, #20]
4000c848:	eb000a75 	bl	4000f224 <_tx_thread_system_resume>
4000c84c:	e59d0010 	ldr	r0, [sp, #16]
4000c850:	e58d0014 	str	r0, [sp, #20]
4000c854:	e59d0014 	ldr	r0, [sp, #20]
4000c858:	e3500000 	cmp	r0, #0
4000c85c:	1affffea 	bne	4000c80c <_tx_event_flags_set+0x500>
4000c860:	e10f7000 	mrs	r7, CPSR
4000c864:	e3870080 	orr	r0, r7, #128	; 0x80
4000c868:	e58d0018 	str	r0, [sp, #24]
4000c86c:	e59d0018 	ldr	r0, [sp, #24]
4000c870:	e121f000 	msr	CPSR_c, r0
4000c874:	e59f0074 	ldr	r0, [pc, #116]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c878:	e5900000 	ldr	r0, [r0]
4000c87c:	e2400001 	sub	r0, r0, #1
4000c880:	e59f1068 	ldr	r1, [pc, #104]	; 4000c8f0 <_tx_event_flags_set+0x5e4>
4000c884:	e5810000 	str	r0, [r1]
4000c888:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c88c:	e121f007 	msr	CPSR_c, r7
4000c890:	eb000a37 	bl	4000f174 <_tx_thread_system_preempt_check>
4000c894:	ea000007 	b	4000c8b8 <_tx_event_flags_set+0x5ac>
4000c898:	e5940014 	ldr	r0, [r4, #20]
4000c89c:	e3500000 	cmp	r0, #0
4000c8a0:	0a000002 	beq	4000c8b0 <_tx_event_flags_set+0x5a4>
4000c8a4:	e594000c 	ldr	r0, [r4, #12]
4000c8a8:	e2800001 	add	r0, r0, #1
4000c8ac:	e584000c 	str	r0, [r4, #12]
4000c8b0:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c8b4:	e121f007 	msr	CPSR_c, r7
4000c8b8:	e35b0000 	cmp	fp, #0
4000c8bc:	0a000001 	beq	4000c8c8 <_tx_event_flags_set+0x5bc>
4000c8c0:	e1a00004 	mov	r0, r4
4000c8c4:	e12fff3b 	blx	fp
4000c8c8:	e3a00000 	mov	r0, #0
4000c8cc:	eafffee0 	b	4000c454 <_tx_event_flags_set+0x148>
4000c8d0:	40030ea0 	.word	0x40030ea0
4000c8d4:	40030ea4 	.word	0x40030ea4
4000c8d8:	40030e2c 	.word	0x40030e2c
4000c8dc:	40030e34 	.word	0x40030e34
4000c8e0:	f0f0f0f0 	.word	0xf0f0f0f0
4000c8e4:	40030e9c 	.word	0x40030e9c
4000c8e8:	40030e98 	.word	0x40030e98
4000c8ec:	40030e8c 	.word	0x40030e8c
4000c8f0:	40030e50 	.word	0x40030e50

4000c8f4 <_tx_initialize_high_level>:
4000c8f4:	e92d4010 	push	{r4, lr}
4000c8f8:	ebfff38a 	bl	40009728 <_tx_trace_initialize>
4000c8fc:	ebffeff0 	bl	400088c4 <_tx_thread_initialize>
4000c900:	ebfff26b 	bl	400092b4 <_tx_timer_initialize>
4000c904:	e3a00000 	mov	r0, #0
4000c908:	e59f105c 	ldr	r1, [pc, #92]	; 4000c96c <_tx_initialize_high_level+0x78>
4000c90c:	e5810000 	str	r0, [r1]
4000c910:	e59f1058 	ldr	r1, [pc, #88]	; 4000c970 <_tx_initialize_high_level+0x7c>
4000c914:	e5810000 	str	r0, [r1]
4000c918:	e59f1054 	ldr	r1, [pc, #84]	; 4000c974 <_tx_initialize_high_level+0x80>
4000c91c:	e5810000 	str	r0, [r1]
4000c920:	e59f1050 	ldr	r1, [pc, #80]	; 4000c978 <_tx_initialize_high_level+0x84>
4000c924:	e5810000 	str	r0, [r1]
4000c928:	e59f104c 	ldr	r1, [pc, #76]	; 4000c97c <_tx_initialize_high_level+0x88>
4000c92c:	e5810000 	str	r0, [r1]
4000c930:	e59f1048 	ldr	r1, [pc, #72]	; 4000c980 <_tx_initialize_high_level+0x8c>
4000c934:	e5810000 	str	r0, [r1]
4000c938:	e59f1044 	ldr	r1, [pc, #68]	; 4000c984 <_tx_initialize_high_level+0x90>
4000c93c:	e5810000 	str	r0, [r1]
4000c940:	e59f1040 	ldr	r1, [pc, #64]	; 4000c988 <_tx_initialize_high_level+0x94>
4000c944:	e5810000 	str	r0, [r1]
4000c948:	e59f103c 	ldr	r1, [pc, #60]	; 4000c98c <_tx_initialize_high_level+0x98>
4000c94c:	e5810000 	str	r0, [r1]
4000c950:	e59f1038 	ldr	r1, [pc, #56]	; 4000c990 <_tx_initialize_high_level+0x9c>
4000c954:	e5810000 	str	r0, [r1]
4000c958:	e59f1034 	ldr	r1, [pc, #52]	; 4000c994 <_tx_initialize_high_level+0xa0>
4000c95c:	e5810000 	str	r0, [r1]
4000c960:	e59f1030 	ldr	r1, [pc, #48]	; 4000c998 <_tx_initialize_high_level+0xa4>
4000c964:	e5810000 	str	r0, [r1]
4000c968:	e8bd8010 	pop	{r4, pc}
4000c96c:	40030ea8 	.word	0x40030ea8
4000c970:	40030eac 	.word	0x40030eac
4000c974:	40030eb0 	.word	0x40030eb0
4000c978:	40030eb4 	.word	0x40030eb4
4000c97c:	40030eb8 	.word	0x40030eb8
4000c980:	40030ebc 	.word	0x40030ebc
4000c984:	40030ec8 	.word	0x40030ec8
4000c988:	40030ecc 	.word	0x40030ecc
4000c98c:	40030ed0 	.word	0x40030ed0
4000c990:	40030ed4 	.word	0x40030ed4
4000c994:	40030ec0 	.word	0x40030ec0
4000c998:	40030ec4 	.word	0x40030ec4

4000c99c <_tx_mutex_create>:
4000c99c:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000c9a0:	e1a04000 	mov	r4, r0
4000c9a4:	e1a05001 	mov	r5, r1
4000c9a8:	e1a06002 	mov	r6, r2
4000c9ac:	e3a01038 	mov	r1, #56	; 0x38
4000c9b0:	e1a00004 	mov	r0, r4
4000c9b4:	eb001ad8 	bl	4001351c <__aeabi_memclr4>
4000c9b8:	e5845004 	str	r5, [r4, #4]
4000c9bc:	e5846010 	str	r6, [r4, #16]
4000c9c0:	e10f7000 	mrs	r7, CPSR
4000c9c4:	e3878080 	orr	r8, r7, #128	; 0x80
4000c9c8:	e121f008 	msr	CPSR_c, r8
4000c9cc:	e59f0174 	ldr	r0, [pc, #372]	; 4000cb48 <_tx_mutex_create+0x1ac>
4000c9d0:	e5840000 	str	r0, [r4]
4000c9d4:	e59f0170 	ldr	r0, [pc, #368]	; 4000cb4c <_tx_mutex_create+0x1b0>
4000c9d8:	e5900000 	ldr	r0, [r0]
4000c9dc:	e3500000 	cmp	r0, #0
4000c9e0:	0a00000e 	beq	4000ca20 <_tx_mutex_create+0x84>
4000c9e4:	e59f0160 	ldr	r0, [pc, #352]	; 4000cb4c <_tx_mutex_create+0x1b0>
4000c9e8:	e5900000 	ldr	r0, [r0]
4000c9ec:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000c9f0:	e58d0004 	str	r0, [sp, #4]
4000c9f4:	e59f0150 	ldr	r0, [pc, #336]	; 4000cb4c <_tx_mutex_create+0x1b0>
4000c9f8:	e5900000 	ldr	r0, [r0]
4000c9fc:	e5804028 	str	r4, [r0, #40]	; 0x28
4000ca00:	e59d0004 	ldr	r0, [sp, #4]
4000ca04:	e5804024 	str	r4, [r0, #36]	; 0x24
4000ca08:	e59d0004 	ldr	r0, [sp, #4]
4000ca0c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ca10:	e59f0134 	ldr	r0, [pc, #308]	; 4000cb4c <_tx_mutex_create+0x1b0>
4000ca14:	e5900000 	ldr	r0, [r0]
4000ca18:	e5840024 	str	r0, [r4, #36]	; 0x24
4000ca1c:	ea000003 	b	4000ca30 <_tx_mutex_create+0x94>
4000ca20:	e59f0124 	ldr	r0, [pc, #292]	; 4000cb4c <_tx_mutex_create+0x1b0>
4000ca24:	e5804000 	str	r4, [r0]
4000ca28:	e5844024 	str	r4, [r4, #36]	; 0x24
4000ca2c:	e5844028 	str	r4, [r4, #40]	; 0x28
4000ca30:	e59f0118 	ldr	r0, [pc, #280]	; 4000cb50 <_tx_mutex_create+0x1b4>
4000ca34:	e5900000 	ldr	r0, [r0]
4000ca38:	e2800001 	add	r0, r0, #1
4000ca3c:	e59f110c 	ldr	r1, [pc, #268]	; 4000cb50 <_tx_mutex_create+0x1b4>
4000ca40:	e5810000 	str	r0, [r1]
4000ca44:	e3a03000 	mov	r3, #0
4000ca48:	e58d3000 	str	r3, [sp]
4000ca4c:	e1a03006 	mov	r3, r6
4000ca50:	e1a02005 	mov	r2, r5
4000ca54:	e1a01004 	mov	r1, r4
4000ca58:	e3a00005 	mov	r0, #5
4000ca5c:	eb000d46 	bl	4000ff7c <_tx_trace_object_register>
4000ca60:	e59f10ec 	ldr	r1, [pc, #236]	; 4000cb54 <_tx_mutex_create+0x1b8>
4000ca64:	e5910000 	ldr	r0, [r1]
4000ca68:	e3500000 	cmp	r0, #0
4000ca6c:	0a000032 	beq	4000cb3c <_tx_mutex_create+0x1a0>
4000ca70:	e59f10e0 	ldr	r1, [pc, #224]	; 4000cb58 <_tx_mutex_create+0x1bc>
4000ca74:	e5911000 	ldr	r1, [r1]
4000ca78:	e2811001 	add	r1, r1, #1
4000ca7c:	e59f20d4 	ldr	r2, [pc, #212]	; 4000cb58 <_tx_mutex_create+0x1bc>
4000ca80:	e5821000 	str	r1, [r2]
4000ca84:	e580100c 	str	r1, [r0, #12]
4000ca88:	e59f10cc 	ldr	r1, [pc, #204]	; 4000cb5c <_tx_mutex_create+0x1c0>
4000ca8c:	e5911000 	ldr	r1, [r1]
4000ca90:	e3510000 	cmp	r1, #0
4000ca94:	1a000006 	bne	4000cab4 <_tx_mutex_create+0x118>
4000ca98:	e59f10c0 	ldr	r1, [pc, #192]	; 4000cb60 <_tx_mutex_create+0x1c4>
4000ca9c:	e5911000 	ldr	r1, [r1]
4000caa0:	e5801000 	str	r1, [r0]
4000caa4:	e5901000 	ldr	r1, [r0]
4000caa8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000caac:	e5801004 	str	r1, [r0, #4]
4000cab0:	ea00000d 	b	4000caec <_tx_mutex_create+0x150>
4000cab4:	e59f10a0 	ldr	r1, [pc, #160]	; 4000cb5c <_tx_mutex_create+0x1c0>
4000cab8:	e5911000 	ldr	r1, [r1]
4000cabc:	e59f20a0 	ldr	r2, [pc, #160]	; 4000cb64 <_tx_mutex_create+0x1c8>
4000cac0:	e1510002 	cmp	r1, r2
4000cac4:	2a000004 	bcs	4000cadc <_tx_mutex_create+0x140>
4000cac8:	e3e01000 	mvn	r1, #0
4000cacc:	e5801000 	str	r1, [r0]
4000cad0:	e3a01000 	mov	r1, #0
4000cad4:	e5801004 	str	r1, [r0, #4]
4000cad8:	ea000003 	b	4000caec <_tx_mutex_create+0x150>
4000cadc:	e59f1080 	ldr	r1, [pc, #128]	; 4000cb64 <_tx_mutex_create+0x1c8>
4000cae0:	e5801000 	str	r1, [r0]
4000cae4:	e3a01000 	mov	r1, #0
4000cae8:	e5801004 	str	r1, [r0, #4]
4000caec:	e3a01032 	mov	r1, #50	; 0x32
4000caf0:	e5801008 	str	r1, [r0, #8]
4000caf4:	e5804010 	str	r4, [r0, #16]
4000caf8:	e5806014 	str	r6, [r0, #20]
4000cafc:	e28d1004 	add	r1, sp, #4
4000cb00:	e5801018 	str	r1, [r0, #24]
4000cb04:	e3a01000 	mov	r1, #0
4000cb08:	e580101c 	str	r1, [r0, #28]
4000cb0c:	e2800020 	add	r0, r0, #32
4000cb10:	e59f1050 	ldr	r1, [pc, #80]	; 4000cb68 <_tx_mutex_create+0x1cc>
4000cb14:	e5911000 	ldr	r1, [r1]
4000cb18:	e1500001 	cmp	r0, r1
4000cb1c:	3a000001 	bcc	4000cb28 <_tx_mutex_create+0x18c>
4000cb20:	e59f1044 	ldr	r1, [pc, #68]	; 4000cb6c <_tx_mutex_create+0x1d0>
4000cb24:	e5910000 	ldr	r0, [r1]
4000cb28:	e59f1024 	ldr	r1, [pc, #36]	; 4000cb54 <_tx_mutex_create+0x1b8>
4000cb2c:	e5810000 	str	r0, [r1]
4000cb30:	e59f1038 	ldr	r1, [pc, #56]	; 4000cb70 <_tx_mutex_create+0x1d4>
4000cb34:	e5911000 	ldr	r1, [r1]
4000cb38:	e5810020 	str	r0, [r1, #32]
4000cb3c:	e121f007 	msr	CPSR_c, r7
4000cb40:	e3a00000 	mov	r0, #0
4000cb44:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000cb48:	4d555445 	.word	0x4d555445
4000cb4c:	40030ec0 	.word	0x40030ec0
4000cb50:	40030ec4 	.word	0x40030ec4
4000cb54:	40030ea0 	.word	0x40030ea0
4000cb58:	40030ea4 	.word	0x40030ea4
4000cb5c:	40030e2c 	.word	0x40030e2c
4000cb60:	40030e34 	.word	0x40030e34
4000cb64:	f0f0f0f0 	.word	0xf0f0f0f0
4000cb68:	40030e9c 	.word	0x40030e9c
4000cb6c:	40030e98 	.word	0x40030e98
4000cb70:	40030e8c 	.word	0x40030e8c

4000cb74 <_tx_mutex_delete>:
4000cb74:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000cb78:	e1a04000 	mov	r4, r0
4000cb7c:	e10f5000 	mrs	r5, CPSR
4000cb80:	e3856080 	orr	r6, r5, #128	; 0x80
4000cb84:	e121f006 	msr	CPSR_c, r6
4000cb88:	e59f1294 	ldr	r1, [pc, #660]	; 4000ce24 <_tx_mutex_delete+0x2b0>
4000cb8c:	e5910000 	ldr	r0, [r1]
4000cb90:	e3500000 	cmp	r0, #0
4000cb94:	0a000031 	beq	4000cc60 <_tx_mutex_delete+0xec>
4000cb98:	e59f1288 	ldr	r1, [pc, #648]	; 4000ce28 <_tx_mutex_delete+0x2b4>
4000cb9c:	e5911000 	ldr	r1, [r1]
4000cba0:	e2811001 	add	r1, r1, #1
4000cba4:	e59f227c 	ldr	r2, [pc, #636]	; 4000ce28 <_tx_mutex_delete+0x2b4>
4000cba8:	e5821000 	str	r1, [r2]
4000cbac:	e580100c 	str	r1, [r0, #12]
4000cbb0:	e59f1274 	ldr	r1, [pc, #628]	; 4000ce2c <_tx_mutex_delete+0x2b8>
4000cbb4:	e5911000 	ldr	r1, [r1]
4000cbb8:	e3510000 	cmp	r1, #0
4000cbbc:	1a000006 	bne	4000cbdc <_tx_mutex_delete+0x68>
4000cbc0:	e59f1268 	ldr	r1, [pc, #616]	; 4000ce30 <_tx_mutex_delete+0x2bc>
4000cbc4:	e5911000 	ldr	r1, [r1]
4000cbc8:	e5801000 	str	r1, [r0]
4000cbcc:	e5901000 	ldr	r1, [r0]
4000cbd0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cbd4:	e5801004 	str	r1, [r0, #4]
4000cbd8:	ea00000d 	b	4000cc14 <_tx_mutex_delete+0xa0>
4000cbdc:	e59f1248 	ldr	r1, [pc, #584]	; 4000ce2c <_tx_mutex_delete+0x2b8>
4000cbe0:	e5911000 	ldr	r1, [r1]
4000cbe4:	e59f2248 	ldr	r2, [pc, #584]	; 4000ce34 <_tx_mutex_delete+0x2c0>
4000cbe8:	e1510002 	cmp	r1, r2
4000cbec:	2a000004 	bcs	4000cc04 <_tx_mutex_delete+0x90>
4000cbf0:	e3e01000 	mvn	r1, #0
4000cbf4:	e5801000 	str	r1, [r0]
4000cbf8:	e3a01000 	mov	r1, #0
4000cbfc:	e5801004 	str	r1, [r0, #4]
4000cc00:	ea000003 	b	4000cc14 <_tx_mutex_delete+0xa0>
4000cc04:	e59f1228 	ldr	r1, [pc, #552]	; 4000ce34 <_tx_mutex_delete+0x2c0>
4000cc08:	e5801000 	str	r1, [r0]
4000cc0c:	e3a01000 	mov	r1, #0
4000cc10:	e5801004 	str	r1, [r0, #4]
4000cc14:	e3a01033 	mov	r1, #51	; 0x33
4000cc18:	e5801008 	str	r1, [r0, #8]
4000cc1c:	e5804010 	str	r4, [r0, #16]
4000cc20:	e580d014 	str	sp, [r0, #20]
4000cc24:	e3a01000 	mov	r1, #0
4000cc28:	e5801018 	str	r1, [r0, #24]
4000cc2c:	e580101c 	str	r1, [r0, #28]
4000cc30:	e2800020 	add	r0, r0, #32
4000cc34:	e59f11fc 	ldr	r1, [pc, #508]	; 4000ce38 <_tx_mutex_delete+0x2c4>
4000cc38:	e5911000 	ldr	r1, [r1]
4000cc3c:	e1500001 	cmp	r0, r1
4000cc40:	3a000001 	bcc	4000cc4c <_tx_mutex_delete+0xd8>
4000cc44:	e59f11f0 	ldr	r1, [pc, #496]	; 4000ce3c <_tx_mutex_delete+0x2c8>
4000cc48:	e5910000 	ldr	r0, [r1]
4000cc4c:	e59f11d0 	ldr	r1, [pc, #464]	; 4000ce24 <_tx_mutex_delete+0x2b0>
4000cc50:	e5810000 	str	r0, [r1]
4000cc54:	e59f11e4 	ldr	r1, [pc, #484]	; 4000ce40 <_tx_mutex_delete+0x2cc>
4000cc58:	e5911000 	ldr	r1, [r1]
4000cc5c:	e5810020 	str	r0, [r1, #32]
4000cc60:	e1a00004 	mov	r0, r4
4000cc64:	eb000d2f 	bl	40010128 <_tx_trace_object_unregister>
4000cc68:	e59f01d4 	ldr	r0, [pc, #468]	; 4000ce44 <_tx_mutex_delete+0x2d0>
4000cc6c:	e5900000 	ldr	r0, [r0]
4000cc70:	e2400001 	sub	r0, r0, #1
4000cc74:	e59f11c8 	ldr	r1, [pc, #456]	; 4000ce44 <_tx_mutex_delete+0x2d0>
4000cc78:	e5810000 	str	r0, [r1]
4000cc7c:	e3a00000 	mov	r0, #0
4000cc80:	e5840000 	str	r0, [r4]
4000cc84:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cc88:	e1500004 	cmp	r0, r4
4000cc8c:	1a000003 	bne	4000cca0 <_tx_mutex_delete+0x12c>
4000cc90:	e3a00000 	mov	r0, #0
4000cc94:	e59f11ac 	ldr	r1, [pc, #428]	; 4000ce48 <_tx_mutex_delete+0x2d4>
4000cc98:	e5810000 	str	r0, [r1]
4000cc9c:	ea00000c 	b	4000ccd4 <_tx_mutex_delete+0x160>
4000cca0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cca4:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cca8:	e5810028 	str	r0, [r1, #40]	; 0x28
4000ccac:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000ccb0:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000ccb4:	e5810024 	str	r0, [r1, #36]	; 0x24
4000ccb8:	e59f0188 	ldr	r0, [pc, #392]	; 4000ce48 <_tx_mutex_delete+0x2d4>
4000ccbc:	e5900000 	ldr	r0, [r0]
4000ccc0:	e1500004 	cmp	r0, r4
4000ccc4:	1a000002 	bne	4000ccd4 <_tx_mutex_delete+0x160>
4000ccc8:	e59f1178 	ldr	r1, [pc, #376]	; 4000ce48 <_tx_mutex_delete+0x2d4>
4000cccc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000ccd0:	e5810000 	str	r0, [r1]
4000ccd4:	e594000c 	ldr	r0, [r4, #12]
4000ccd8:	e58d0000 	str	r0, [sp]
4000ccdc:	e5940010 	ldr	r0, [r4, #16]
4000cce0:	e3500000 	cmp	r0, #0
4000cce4:	0a00001c 	beq	4000cd5c <_tx_mutex_delete+0x1e8>
4000cce8:	e59d0000 	ldr	r0, [sp]
4000ccec:	e3500000 	cmp	r0, #0
4000ccf0:	0a000019 	beq	4000cd5c <_tx_mutex_delete+0x1e8>
4000ccf4:	e59d0000 	ldr	r0, [sp]
4000ccf8:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000ccfc:	e2400001 	sub	r0, r0, #1
4000cd00:	e59d1000 	ldr	r1, [sp]
4000cd04:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000cd08:	e59d0000 	ldr	r0, [sp]
4000cd0c:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cd10:	e3500000 	cmp	r0, #0
4000cd14:	1a000003 	bne	4000cd28 <_tx_mutex_delete+0x1b4>
4000cd18:	e3a00000 	mov	r0, #0
4000cd1c:	e59d1000 	ldr	r1, [sp]
4000cd20:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cd24:	ea00000c 	b	4000cd5c <_tx_mutex_delete+0x1e8>
4000cd28:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000cd2c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000cd30:	e5810034 	str	r0, [r1, #52]	; 0x34
4000cd34:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cd38:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000cd3c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000cd40:	e59d0000 	ldr	r0, [sp]
4000cd44:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000cd48:	e1500004 	cmp	r0, r4
4000cd4c:	1a000002 	bne	4000cd5c <_tx_mutex_delete+0x1e8>
4000cd50:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cd54:	e59d1000 	ldr	r1, [sp]
4000cd58:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cd5c:	e3a00000 	mov	r0, #0
4000cd60:	e584000c 	str	r0, [r4, #12]
4000cd64:	e59f00e0 	ldr	r0, [pc, #224]	; 4000ce4c <_tx_mutex_delete+0x2d8>
4000cd68:	e5900000 	ldr	r0, [r0]
4000cd6c:	e2800001 	add	r0, r0, #1
4000cd70:	e59f10d4 	ldr	r1, [pc, #212]	; 4000ce4c <_tx_mutex_delete+0x2d8>
4000cd74:	e5810000 	str	r0, [r1]
4000cd78:	e121f005 	msr	CPSR_c, r5
4000cd7c:	e594001c 	ldr	r0, [r4, #28]
4000cd80:	e58d0000 	str	r0, [sp]
4000cd84:	ea000017 	b	4000cde8 <_tx_mutex_delete+0x274>
4000cd88:	e10f5000 	mrs	r5, CPSR
4000cd8c:	e3856080 	orr	r6, r5, #128	; 0x80
4000cd90:	e121f006 	msr	CPSR_c, r6
4000cd94:	e3a00000 	mov	r0, #0
4000cd98:	e59d1000 	ldr	r1, [sp]
4000cd9c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000cda0:	e59f00a4 	ldr	r0, [pc, #164]	; 4000ce4c <_tx_mutex_delete+0x2d8>
4000cda4:	e5900000 	ldr	r0, [r0]
4000cda8:	e2800001 	add	r0, r0, #1
4000cdac:	e59f1098 	ldr	r1, [pc, #152]	; 4000ce4c <_tx_mutex_delete+0x2d8>
4000cdb0:	e5810000 	str	r0, [r1]
4000cdb4:	e121f005 	msr	CPSR_c, r5
4000cdb8:	e3a00001 	mov	r0, #1
4000cdbc:	e59d1000 	ldr	r1, [sp]
4000cdc0:	e5810084 	str	r0, [r1, #132]	; 0x84
4000cdc4:	e59d0000 	ldr	r0, [sp]
4000cdc8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cdcc:	e58d0000 	str	r0, [sp]
4000cdd0:	e59d1000 	ldr	r1, [sp]
4000cdd4:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000cdd8:	eb000911 	bl	4000f224 <_tx_thread_system_resume>
4000cddc:	e5940020 	ldr	r0, [r4, #32]
4000cde0:	e2400001 	sub	r0, r0, #1
4000cde4:	e5840020 	str	r0, [r4, #32]
4000cde8:	e5940020 	ldr	r0, [r4, #32]
4000cdec:	e3500000 	cmp	r0, #0
4000cdf0:	1affffe4 	bne	4000cd88 <_tx_mutex_delete+0x214>
4000cdf4:	e10f5000 	mrs	r5, CPSR
4000cdf8:	e3856080 	orr	r6, r5, #128	; 0x80
4000cdfc:	e121f006 	msr	CPSR_c, r6
4000ce00:	e59f0044 	ldr	r0, [pc, #68]	; 4000ce4c <_tx_mutex_delete+0x2d8>
4000ce04:	e5900000 	ldr	r0, [r0]
4000ce08:	e2400001 	sub	r0, r0, #1
4000ce0c:	e59f1038 	ldr	r1, [pc, #56]	; 4000ce4c <_tx_mutex_delete+0x2d8>
4000ce10:	e5810000 	str	r0, [r1]
4000ce14:	e121f005 	msr	CPSR_c, r5
4000ce18:	eb0008d5 	bl	4000f174 <_tx_thread_system_preempt_check>
4000ce1c:	e3a00000 	mov	r0, #0
4000ce20:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ce24:	40030ea0 	.word	0x40030ea0
4000ce28:	40030ea4 	.word	0x40030ea4
4000ce2c:	40030e2c 	.word	0x40030e2c
4000ce30:	40030e34 	.word	0x40030e34
4000ce34:	f0f0f0f0 	.word	0xf0f0f0f0
4000ce38:	40030e9c 	.word	0x40030e9c
4000ce3c:	40030e98 	.word	0x40030e98
4000ce40:	40030e8c 	.word	0x40030e8c
4000ce44:	40030ec4 	.word	0x40030ec4
4000ce48:	40030ec0 	.word	0x40030ec0
4000ce4c:	40030e50 	.word	0x40030e50

4000ce50 <_tx_mutex_get>:
4000ce50:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000ce54:	e1a04000 	mov	r4, r0
4000ce58:	e1a05001 	mov	r5, r1
4000ce5c:	e10f6000 	mrs	r6, CPSR
4000ce60:	e3867080 	orr	r7, r6, #128	; 0x80
4000ce64:	e121f007 	msr	CPSR_c, r7
4000ce68:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d11c <_tx_mutex_get+0x2cc>
4000ce6c:	e5910000 	ldr	r0, [r1]
4000ce70:	e3500000 	cmp	r0, #0
4000ce74:	0a000032 	beq	4000cf44 <_tx_mutex_get+0xf4>
4000ce78:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d120 <_tx_mutex_get+0x2d0>
4000ce7c:	e5911000 	ldr	r1, [r1]
4000ce80:	e2811001 	add	r1, r1, #1
4000ce84:	e59f2294 	ldr	r2, [pc, #660]	; 4000d120 <_tx_mutex_get+0x2d0>
4000ce88:	e5821000 	str	r1, [r2]
4000ce8c:	e580100c 	str	r1, [r0, #12]
4000ce90:	e59f128c 	ldr	r1, [pc, #652]	; 4000d124 <_tx_mutex_get+0x2d4>
4000ce94:	e5911000 	ldr	r1, [r1]
4000ce98:	e3510000 	cmp	r1, #0
4000ce9c:	1a000006 	bne	4000cebc <_tx_mutex_get+0x6c>
4000cea0:	e59f1280 	ldr	r1, [pc, #640]	; 4000d128 <_tx_mutex_get+0x2d8>
4000cea4:	e5911000 	ldr	r1, [r1]
4000cea8:	e5801000 	str	r1, [r0]
4000ceac:	e5901000 	ldr	r1, [r0]
4000ceb0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ceb4:	e5801004 	str	r1, [r0, #4]
4000ceb8:	ea00000d 	b	4000cef4 <_tx_mutex_get+0xa4>
4000cebc:	e59f1260 	ldr	r1, [pc, #608]	; 4000d124 <_tx_mutex_get+0x2d4>
4000cec0:	e5911000 	ldr	r1, [r1]
4000cec4:	e59f2260 	ldr	r2, [pc, #608]	; 4000d12c <_tx_mutex_get+0x2dc>
4000cec8:	e1510002 	cmp	r1, r2
4000cecc:	2a000004 	bcs	4000cee4 <_tx_mutex_get+0x94>
4000ced0:	e3e01000 	mvn	r1, #0
4000ced4:	e5801000 	str	r1, [r0]
4000ced8:	e3a01000 	mov	r1, #0
4000cedc:	e5801004 	str	r1, [r0, #4]
4000cee0:	ea000003 	b	4000cef4 <_tx_mutex_get+0xa4>
4000cee4:	e59f1240 	ldr	r1, [pc, #576]	; 4000d12c <_tx_mutex_get+0x2dc>
4000cee8:	e5801000 	str	r1, [r0]
4000ceec:	e3a01000 	mov	r1, #0
4000cef0:	e5801004 	str	r1, [r0, #4]
4000cef4:	e3a01034 	mov	r1, #52	; 0x34
4000cef8:	e5801008 	str	r1, [r0, #8]
4000cefc:	e5804010 	str	r4, [r0, #16]
4000cf00:	e5805014 	str	r5, [r0, #20]
4000cf04:	e594100c 	ldr	r1, [r4, #12]
4000cf08:	e5801018 	str	r1, [r0, #24]
4000cf0c:	e5941008 	ldr	r1, [r4, #8]
4000cf10:	e580101c 	str	r1, [r0, #28]
4000cf14:	e2800020 	add	r0, r0, #32
4000cf18:	e59f1210 	ldr	r1, [pc, #528]	; 4000d130 <_tx_mutex_get+0x2e0>
4000cf1c:	e5911000 	ldr	r1, [r1]
4000cf20:	e1500001 	cmp	r0, r1
4000cf24:	3a000001 	bcc	4000cf30 <_tx_mutex_get+0xe0>
4000cf28:	e59f1204 	ldr	r1, [pc, #516]	; 4000d134 <_tx_mutex_get+0x2e4>
4000cf2c:	e5910000 	ldr	r0, [r1]
4000cf30:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d11c <_tx_mutex_get+0x2cc>
4000cf34:	e5810000 	str	r0, [r1]
4000cf38:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d138 <_tx_mutex_get+0x2e8>
4000cf3c:	e5911000 	ldr	r1, [r1]
4000cf40:	e5810020 	str	r0, [r1, #32]
4000cf44:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d128 <_tx_mutex_get+0x2d8>
4000cf48:	e5909000 	ldr	r9, [r0]
4000cf4c:	e5940008 	ldr	r0, [r4, #8]
4000cf50:	e3500000 	cmp	r0, #0
4000cf54:	1a000025 	bne	4000cff0 <_tx_mutex_get+0x1a0>
4000cf58:	e3a00001 	mov	r0, #1
4000cf5c:	e5840008 	str	r0, [r4, #8]
4000cf60:	e584900c 	str	r9, [r4, #12]
4000cf64:	e5940010 	ldr	r0, [r4, #16]
4000cf68:	e3500000 	cmp	r0, #0
4000cf6c:	0a00001d 	beq	4000cfe8 <_tx_mutex_get+0x198>
4000cf70:	e3590000 	cmp	r9, #0
4000cf74:	0a00001b 	beq	4000cfe8 <_tx_mutex_get+0x198>
4000cf78:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cf7c:	e5840014 	str	r0, [r4, #20]
4000cf80:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cf84:	e5840018 	str	r0, [r4, #24]
4000cf88:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf8c:	e3500000 	cmp	r0, #0
4000cf90:	0a000008 	beq	4000cfb8 <_tx_mutex_get+0x168>
4000cf94:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cf98:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000cf9c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cfa0:	e5804034 	str	r4, [r0, #52]	; 0x34
4000cfa4:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000cfa8:	e584a034 	str	sl, [r4, #52]	; 0x34
4000cfac:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000cfb0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000cfb4:	ea000006 	b	4000cfd4 <_tx_mutex_get+0x184>
4000cfb8:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000cfbc:	e5844030 	str	r4, [r4, #48]	; 0x30
4000cfc0:	e5844034 	str	r4, [r4, #52]	; 0x34
4000cfc4:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000cfc8:	e5890094 	str	r0, [r9, #148]	; 0x94
4000cfcc:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000cfd0:	e5890098 	str	r0, [r9, #152]	; 0x98
4000cfd4:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000cfd8:	e2800001 	add	r0, r0, #1
4000cfdc:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000cfe0:	e3a00020 	mov	r0, #32
4000cfe4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000cfe8:	e3a08000 	mov	r8, #0
4000cfec:	ea000047 	b	4000d110 <_tx_mutex_get+0x2c0>
4000cff0:	e594000c 	ldr	r0, [r4, #12]
4000cff4:	e1500009 	cmp	r0, r9
4000cff8:	1a000004 	bne	4000d010 <_tx_mutex_get+0x1c0>
4000cffc:	e5940008 	ldr	r0, [r4, #8]
4000d000:	e2800001 	add	r0, r0, #1
4000d004:	e5840008 	str	r0, [r4, #8]
4000d008:	e3a08000 	mov	r8, #0
4000d00c:	ea00003f 	b	4000d110 <_tx_mutex_get+0x2c0>
4000d010:	e3550000 	cmp	r5, #0
4000d014:	0a00003c 	beq	4000d10c <_tx_mutex_get+0x2bc>
4000d018:	e59f011c 	ldr	r0, [pc, #284]	; 4000d13c <_tx_mutex_get+0x2ec>
4000d01c:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d020:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d024:	e594001c 	ldr	r0, [r4, #28]
4000d028:	e3500000 	cmp	r0, #0
4000d02c:	0a00000a 	beq	4000d05c <_tx_mutex_get+0x20c>
4000d030:	e594001c 	ldr	r0, [r4, #28]
4000d034:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d038:	e594001c 	ldr	r0, [r4, #28]
4000d03c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d040:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d044:	e594001c 	ldr	r0, [r4, #28]
4000d048:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d04c:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d050:	e594001c 	ldr	r0, [r4, #28]
4000d054:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d058:	ea000002 	b	4000d068 <_tx_mutex_get+0x218>
4000d05c:	e584901c 	str	r9, [r4, #28]
4000d060:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d064:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d068:	e5940020 	ldr	r0, [r4, #32]
4000d06c:	e2800001 	add	r0, r0, #1
4000d070:	e5840020 	str	r0, [r4, #32]
4000d074:	e3a0000d 	mov	r0, #13
4000d078:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d07c:	e3a00001 	mov	r0, #1
4000d080:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d084:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d088:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d140 <_tx_mutex_get+0x2f0>
4000d08c:	e5900000 	ldr	r0, [r0]
4000d090:	e2800001 	add	r0, r0, #1
4000d094:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d140 <_tx_mutex_get+0x2f0>
4000d098:	e5810000 	str	r0, [r1]
4000d09c:	e121f006 	msr	CPSR_c, r6
4000d0a0:	e5940010 	ldr	r0, [r4, #16]
4000d0a4:	e3500000 	cmp	r0, #0
4000d0a8:	0a000013 	beq	4000d0fc <_tx_mutex_get+0x2ac>
4000d0ac:	e594000c 	ldr	r0, [r4, #12]
4000d0b0:	e3500000 	cmp	r0, #0
4000d0b4:	0a000010 	beq	4000d0fc <_tx_mutex_get+0x2ac>
4000d0b8:	e3590000 	cmp	r9, #0
4000d0bc:	0a00000e 	beq	4000d0fc <_tx_mutex_get+0x2ac>
4000d0c0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d0c4:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d0c8:	e1500001 	cmp	r0, r1
4000d0cc:	9a000001 	bls	4000d0d8 <_tx_mutex_get+0x288>
4000d0d0:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d0d4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d0d8:	e594000c 	ldr	r0, [r4, #12]
4000d0dc:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d0e0:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d0e4:	e1500001 	cmp	r0, r1
4000d0e8:	9a000003 	bls	4000d0fc <_tx_mutex_get+0x2ac>
4000d0ec:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d0f0:	e1a01002 	mov	r1, r2
4000d0f4:	e594000c 	ldr	r0, [r4, #12]
4000d0f8:	eb000011 	bl	4000d144 <_tx_mutex_priority_change>
4000d0fc:	e1a00009 	mov	r0, r9
4000d100:	ebffeea0 	bl	40008b88 <_tx_thread_system_suspend>
4000d104:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d108:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d10c:	e3a0801d 	mov	r8, #29
4000d110:	e121f006 	msr	CPSR_c, r6
4000d114:	e1a00008 	mov	r0, r8
4000d118:	eafffffa 	b	4000d108 <_tx_mutex_get+0x2b8>
4000d11c:	40030ea0 	.word	0x40030ea0
4000d120:	40030ea4 	.word	0x40030ea4
4000d124:	40030e2c 	.word	0x40030e2c
4000d128:	40030e34 	.word	0x40030e34
4000d12c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d130:	40030e9c 	.word	0x40030e9c
4000d134:	40030e98 	.word	0x40030e98
4000d138:	40030e8c 	.word	0x40030e8c
4000d13c:	40010304 	.word	0x40010304
4000d140:	40030e50 	.word	0x40030e50

4000d144 <_tx_mutex_priority_change>:
4000d144:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d148:	e1a04000 	mov	r4, r0
4000d14c:	e1a05001 	mov	r5, r1
4000d150:	e1a06002 	mov	r6, r2
4000d154:	e10f7000 	mrs	r7, CPSR
4000d158:	e3878080 	orr	r8, r7, #128	; 0x80
4000d15c:	e121f008 	msr	CPSR_c, r8
4000d160:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d164:	e3500000 	cmp	r0, #0
4000d168:	0a000003 	beq	4000d17c <_tx_mutex_priority_change+0x38>
4000d16c:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d170:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d174:	e121f007 	msr	CPSR_c, r7
4000d178:	ea000011 	b	4000d1c4 <_tx_mutex_priority_change+0x80>
4000d17c:	e59f0044 	ldr	r0, [pc, #68]	; 4000d1c8 <_tx_mutex_priority_change+0x84>
4000d180:	e5900000 	ldr	r0, [r0]
4000d184:	e2800002 	add	r0, r0, #2
4000d188:	e59f1038 	ldr	r1, [pc, #56]	; 4000d1c8 <_tx_mutex_priority_change+0x84>
4000d18c:	e5810000 	str	r0, [r1]
4000d190:	e3a00003 	mov	r0, #3
4000d194:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d198:	e3a00001 	mov	r0, #1
4000d19c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d1a0:	e3a00000 	mov	r0, #0
4000d1a4:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d1a8:	e121f007 	msr	CPSR_c, r7
4000d1ac:	e1a00004 	mov	r0, r4
4000d1b0:	ebffee74 	bl	40008b88 <_tx_thread_system_suspend>
4000d1b4:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d1b8:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d1bc:	e1a00004 	mov	r0, r4
4000d1c0:	eb000817 	bl	4000f224 <_tx_thread_system_resume>
4000d1c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d1c8:	40030e50 	.word	0x40030e50

4000d1cc <_tx_mutex_put>:
4000d1cc:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d1d0:	e1a04000 	mov	r4, r0
4000d1d4:	e10f5000 	mrs	r5, CPSR
4000d1d8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d1dc:	e121f006 	msr	CPSR_c, r6
4000d1e0:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d67c <_tx_mutex_put+0x4b0>
4000d1e4:	e5910000 	ldr	r0, [r1]
4000d1e8:	e3500000 	cmp	r0, #0
4000d1ec:	0a000032 	beq	4000d2bc <_tx_mutex_put+0xf0>
4000d1f0:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d680 <_tx_mutex_put+0x4b4>
4000d1f4:	e5911000 	ldr	r1, [r1]
4000d1f8:	e2811001 	add	r1, r1, #1
4000d1fc:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d680 <_tx_mutex_put+0x4b4>
4000d200:	e5821000 	str	r1, [r2]
4000d204:	e580100c 	str	r1, [r0, #12]
4000d208:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d684 <_tx_mutex_put+0x4b8>
4000d20c:	e5911000 	ldr	r1, [r1]
4000d210:	e3510000 	cmp	r1, #0
4000d214:	1a000006 	bne	4000d234 <_tx_mutex_put+0x68>
4000d218:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d688 <_tx_mutex_put+0x4bc>
4000d21c:	e5911000 	ldr	r1, [r1]
4000d220:	e5801000 	str	r1, [r0]
4000d224:	e5901000 	ldr	r1, [r0]
4000d228:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d22c:	e5801004 	str	r1, [r0, #4]
4000d230:	ea00000d 	b	4000d26c <_tx_mutex_put+0xa0>
4000d234:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d684 <_tx_mutex_put+0x4b8>
4000d238:	e5911000 	ldr	r1, [r1]
4000d23c:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d68c <_tx_mutex_put+0x4c0>
4000d240:	e1510002 	cmp	r1, r2
4000d244:	2a000004 	bcs	4000d25c <_tx_mutex_put+0x90>
4000d248:	e3e01000 	mvn	r1, #0
4000d24c:	e5801000 	str	r1, [r0]
4000d250:	e3a01000 	mov	r1, #0
4000d254:	e5801004 	str	r1, [r0, #4]
4000d258:	ea000003 	b	4000d26c <_tx_mutex_put+0xa0>
4000d25c:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d68c <_tx_mutex_put+0x4c0>
4000d260:	e5801000 	str	r1, [r0]
4000d264:	e3a01000 	mov	r1, #0
4000d268:	e5801004 	str	r1, [r0, #4]
4000d26c:	e3a01039 	mov	r1, #57	; 0x39
4000d270:	e5801008 	str	r1, [r0, #8]
4000d274:	e5804010 	str	r4, [r0, #16]
4000d278:	e594100c 	ldr	r1, [r4, #12]
4000d27c:	e5801014 	str	r1, [r0, #20]
4000d280:	e5941008 	ldr	r1, [r4, #8]
4000d284:	e5801018 	str	r1, [r0, #24]
4000d288:	e580d01c 	str	sp, [r0, #28]
4000d28c:	e2800020 	add	r0, r0, #32
4000d290:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d690 <_tx_mutex_put+0x4c4>
4000d294:	e5911000 	ldr	r1, [r1]
4000d298:	e1500001 	cmp	r0, r1
4000d29c:	3a000001 	bcc	4000d2a8 <_tx_mutex_put+0xdc>
4000d2a0:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d694 <_tx_mutex_put+0x4c8>
4000d2a4:	e5910000 	ldr	r0, [r1]
4000d2a8:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d67c <_tx_mutex_put+0x4b0>
4000d2ac:	e5810000 	str	r0, [r1]
4000d2b0:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d698 <_tx_mutex_put+0x4cc>
4000d2b4:	e5911000 	ldr	r1, [r1]
4000d2b8:	e5810020 	str	r0, [r1, #32]
4000d2bc:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d688 <_tx_mutex_put+0x4bc>
4000d2c0:	e5907000 	ldr	r7, [r0]
4000d2c4:	e5940008 	ldr	r0, [r4, #8]
4000d2c8:	e3500000 	cmp	r0, #0
4000d2cc:	0a0000e7 	beq	4000d670 <_tx_mutex_put+0x4a4>
4000d2d0:	e594000c 	ldr	r0, [r4, #12]
4000d2d4:	e1500007 	cmp	r0, r7
4000d2d8:	1a0000e4 	bne	4000d670 <_tx_mutex_put+0x4a4>
4000d2dc:	e5940008 	ldr	r0, [r4, #8]
4000d2e0:	e2400001 	sub	r0, r0, #1
4000d2e4:	e5840008 	str	r0, [r4, #8]
4000d2e8:	e5940008 	ldr	r0, [r4, #8]
4000d2ec:	e3500000 	cmp	r0, #0
4000d2f0:	0a000002 	beq	4000d300 <_tx_mutex_put+0x134>
4000d2f4:	e121f005 	msr	CPSR_c, r5
4000d2f8:	e3a00000 	mov	r0, #0
4000d2fc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d300:	e3a08000 	mov	r8, #0
4000d304:	e3a09000 	mov	r9, #0
4000d308:	e3a0a000 	mov	sl, #0
4000d30c:	e5940010 	ldr	r0, [r4, #16]
4000d310:	e3500000 	cmp	r0, #0
4000d314:	0a000033 	beq	4000d3e8 <_tx_mutex_put+0x21c>
4000d318:	e3570000 	cmp	r7, #0
4000d31c:	0a000031 	beq	4000d3e8 <_tx_mutex_put+0x21c>
4000d320:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d324:	e2400001 	sub	r0, r0, #1
4000d328:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d32c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d330:	e3500000 	cmp	r0, #0
4000d334:	1a000002 	bne	4000d344 <_tx_mutex_put+0x178>
4000d338:	e3a00000 	mov	r0, #0
4000d33c:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d340:	ea00000a 	b	4000d370 <_tx_mutex_put+0x1a4>
4000d344:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d348:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d34c:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d350:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d354:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d358:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d35c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d360:	e1500004 	cmp	r0, r4
4000d364:	1a000001 	bne	4000d370 <_tx_mutex_put+0x1a4>
4000d368:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d36c:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d370:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d374:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d378:	e59f031c 	ldr	r0, [pc, #796]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d37c:	e5900000 	ldr	r0, [r0]
4000d380:	e2800001 	add	r0, r0, #1
4000d384:	e59f1310 	ldr	r1, [pc, #784]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d388:	e5810000 	str	r0, [r1]
4000d38c:	e121f005 	msr	CPSR_c, r5
4000d390:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d394:	ea000009 	b	4000d3c0 <_tx_mutex_put+0x1f4>
4000d398:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d39c:	e1500009 	cmp	r0, r9
4000d3a0:	2a000001 	bcs	4000d3ac <_tx_mutex_put+0x1e0>
4000d3a4:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d3a8:	e1a0a009 	mov	sl, r9
4000d3ac:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d3b0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d3b4:	e150000b 	cmp	r0, fp
4000d3b8:	1a000000 	bne	4000d3c0 <_tx_mutex_put+0x1f4>
4000d3bc:	e3a0b000 	mov	fp, #0
4000d3c0:	e35b0000 	cmp	fp, #0
4000d3c4:	1afffff3 	bne	4000d398 <_tx_mutex_put+0x1cc>
4000d3c8:	e10f5000 	mrs	r5, CPSR
4000d3cc:	e3856080 	orr	r6, r5, #128	; 0x80
4000d3d0:	e121f006 	msr	CPSR_c, r6
4000d3d4:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d3d8:	e5900000 	ldr	r0, [r0]
4000d3dc:	e2400001 	sub	r0, r0, #1
4000d3e0:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d3e4:	e5810000 	str	r0, [r1]
4000d3e8:	e5940020 	ldr	r0, [r4, #32]
4000d3ec:	e3500001 	cmp	r0, #1
4000d3f0:	9a000012 	bls	4000d440 <_tx_mutex_put+0x274>
4000d3f4:	e5940010 	ldr	r0, [r4, #16]
4000d3f8:	e3500000 	cmp	r0, #0
4000d3fc:	0a00000f 	beq	4000d440 <_tx_mutex_put+0x274>
4000d400:	e59f0294 	ldr	r0, [pc, #660]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d404:	e5900000 	ldr	r0, [r0]
4000d408:	e2800001 	add	r0, r0, #1
4000d40c:	e59f1288 	ldr	r1, [pc, #648]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d410:	e5810000 	str	r0, [r1]
4000d414:	e121f005 	msr	CPSR_c, r5
4000d418:	e1a00004 	mov	r0, r4
4000d41c:	eb000bec 	bl	400103d4 <_tx_mutex_prioritize>
4000d420:	e10f5000 	mrs	r5, CPSR
4000d424:	e3856080 	orr	r6, r5, #128	; 0x80
4000d428:	e121f006 	msr	CPSR_c, r6
4000d42c:	e59f0268 	ldr	r0, [pc, #616]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d430:	e5900000 	ldr	r0, [r0]
4000d434:	e2400001 	sub	r0, r0, #1
4000d438:	e59f125c 	ldr	r1, [pc, #604]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d43c:	e5810000 	str	r0, [r1]
4000d440:	e594001c 	ldr	r0, [r4, #28]
4000d444:	e3500000 	cmp	r0, #0
4000d448:	1a000024 	bne	4000d4e0 <_tx_mutex_put+0x314>
4000d44c:	e59f0248 	ldr	r0, [pc, #584]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d450:	e5900000 	ldr	r0, [r0]
4000d454:	e2800001 	add	r0, r0, #1
4000d458:	e59f123c 	ldr	r1, [pc, #572]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d45c:	e5810000 	str	r0, [r1]
4000d460:	e121f005 	msr	CPSR_c, r5
4000d464:	e5940010 	ldr	r0, [r4, #16]
4000d468:	e3500000 	cmp	r0, #0
4000d46c:	0a00000a 	beq	4000d49c <_tx_mutex_put+0x2d0>
4000d470:	e3a00020 	mov	r0, #32
4000d474:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d478:	e3570000 	cmp	r7, #0
4000d47c:	0a000006 	beq	4000d49c <_tx_mutex_put+0x2d0>
4000d480:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d484:	e1500009 	cmp	r0, r9
4000d488:	0a000003 	beq	4000d49c <_tx_mutex_put+0x2d0>
4000d48c:	e1a0200a 	mov	r2, sl
4000d490:	e1a01009 	mov	r1, r9
4000d494:	e594000c 	ldr	r0, [r4, #12]
4000d498:	ebffff29 	bl	4000d144 <_tx_mutex_priority_change>
4000d49c:	e10f5000 	mrs	r5, CPSR
4000d4a0:	e3856080 	orr	r6, r5, #128	; 0x80
4000d4a4:	e121f006 	msr	CPSR_c, r6
4000d4a8:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d4ac:	e5900000 	ldr	r0, [r0]
4000d4b0:	e2400001 	sub	r0, r0, #1
4000d4b4:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d4b8:	e5810000 	str	r0, [r1]
4000d4bc:	e5940008 	ldr	r0, [r4, #8]
4000d4c0:	e3500000 	cmp	r0, #0
4000d4c4:	1a000001 	bne	4000d4d0 <_tx_mutex_put+0x304>
4000d4c8:	e3a00000 	mov	r0, #0
4000d4cc:	e584000c 	str	r0, [r4, #12]
4000d4d0:	e121f005 	msr	CPSR_c, r5
4000d4d4:	eb000726 	bl	4000f174 <_tx_thread_system_preempt_check>
4000d4d8:	e3a00000 	mov	r0, #0
4000d4dc:	eaffff86 	b	4000d2fc <_tx_mutex_put+0x130>
4000d4e0:	e594701c 	ldr	r7, [r4, #28]
4000d4e4:	e5940010 	ldr	r0, [r4, #16]
4000d4e8:	e3500000 	cmp	r0, #0
4000d4ec:	0a00001f 	beq	4000d570 <_tx_mutex_put+0x3a4>
4000d4f0:	e594800c 	ldr	r8, [r4, #12]
4000d4f4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d4f8:	e5840014 	str	r0, [r4, #20]
4000d4fc:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d500:	e5840018 	str	r0, [r4, #24]
4000d504:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d508:	e3500000 	cmp	r0, #0
4000d50c:	0a00000b 	beq	4000d540 <_tx_mutex_put+0x374>
4000d510:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d514:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d518:	e58d0000 	str	r0, [sp]
4000d51c:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d520:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d524:	e59d0000 	ldr	r0, [sp]
4000d528:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d52c:	e59d0000 	ldr	r0, [sp]
4000d530:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d534:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d538:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d53c:	ea000006 	b	4000d55c <_tx_mutex_put+0x390>
4000d540:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d544:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d548:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d54c:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d550:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d554:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d558:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d55c:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d560:	e2800001 	add	r0, r0, #1
4000d564:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d568:	e3a00020 	mov	r0, #32
4000d56c:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d570:	e3a00001 	mov	r0, #1
4000d574:	e5840008 	str	r0, [r4, #8]
4000d578:	e584700c 	str	r7, [r4, #12]
4000d57c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d580:	e1500007 	cmp	r0, r7
4000d584:	1a000002 	bne	4000d594 <_tx_mutex_put+0x3c8>
4000d588:	e3a00000 	mov	r0, #0
4000d58c:	e584001c 	str	r0, [r4, #28]
4000d590:	ea000007 	b	4000d5b4 <_tx_mutex_put+0x3e8>
4000d594:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d598:	e584001c 	str	r0, [r4, #28]
4000d59c:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d5a0:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d5a4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d5a8:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d5ac:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d5b0:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d5b4:	e5940020 	ldr	r0, [r4, #32]
4000d5b8:	e2400001 	sub	r0, r0, #1
4000d5bc:	e5840020 	str	r0, [r4, #32]
4000d5c0:	e3a00000 	mov	r0, #0
4000d5c4:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d5c8:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d5cc:	e5900000 	ldr	r0, [r0]
4000d5d0:	e2800001 	add	r0, r0, #1
4000d5d4:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d69c <_tx_mutex_put+0x4d0>
4000d5d8:	e5810000 	str	r0, [r1]
4000d5dc:	e121f005 	msr	CPSR_c, r5
4000d5e0:	e3a00000 	mov	r0, #0
4000d5e4:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d5e8:	e5940010 	ldr	r0, [r4, #16]
4000d5ec:	e3500000 	cmp	r0, #0
4000d5f0:	0a00001a 	beq	4000d660 <_tx_mutex_put+0x494>
4000d5f4:	e5940020 	ldr	r0, [r4, #32]
4000d5f8:	e3500000 	cmp	r0, #0
4000d5fc:	0a00000e 	beq	4000d63c <_tx_mutex_put+0x470>
4000d600:	e5940020 	ldr	r0, [r4, #32]
4000d604:	e3500001 	cmp	r0, #1
4000d608:	9a000001 	bls	4000d614 <_tx_mutex_put+0x448>
4000d60c:	e1a00004 	mov	r0, r4
4000d610:	eb000b6f 	bl	400103d4 <_tx_mutex_prioritize>
4000d614:	e10f5000 	mrs	r5, CPSR
4000d618:	e3856080 	orr	r6, r5, #128	; 0x80
4000d61c:	e121f006 	msr	CPSR_c, r6
4000d620:	e594001c 	ldr	r0, [r4, #28]
4000d624:	e3500000 	cmp	r0, #0
4000d628:	0a000002 	beq	4000d638 <_tx_mutex_put+0x46c>
4000d62c:	e594001c 	ldr	r0, [r4, #28]
4000d630:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d634:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d638:	e121f005 	msr	CPSR_c, r5
4000d63c:	e3580000 	cmp	r8, #0
4000d640:	0a000006 	beq	4000d660 <_tx_mutex_put+0x494>
4000d644:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d648:	e1500009 	cmp	r0, r9
4000d64c:	0a000003 	beq	4000d660 <_tx_mutex_put+0x494>
4000d650:	e1a0200a 	mov	r2, sl
4000d654:	e1a01009 	mov	r1, r9
4000d658:	e1a00008 	mov	r0, r8
4000d65c:	ebfffeb8 	bl	4000d144 <_tx_mutex_priority_change>
4000d660:	e1a00007 	mov	r0, r7
4000d664:	eb0006ee 	bl	4000f224 <_tx_thread_system_resume>
4000d668:	e3a00000 	mov	r0, #0
4000d66c:	eaffff22 	b	4000d2fc <_tx_mutex_put+0x130>
4000d670:	e121f005 	msr	CPSR_c, r5
4000d674:	e3a0001e 	mov	r0, #30
4000d678:	eaffff1f 	b	4000d2fc <_tx_mutex_put+0x130>
4000d67c:	40030ea0 	.word	0x40030ea0
4000d680:	40030ea4 	.word	0x40030ea4
4000d684:	40030e2c 	.word	0x40030e2c
4000d688:	40030e34 	.word	0x40030e34
4000d68c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d690:	40030e9c 	.word	0x40030e9c
4000d694:	40030e98 	.word	0x40030e98
4000d698:	40030e8c 	.word	0x40030e8c
4000d69c:	40030e50 	.word	0x40030e50

4000d6a0 <_tx_queue_create>:
4000d6a0:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d6a4:	e1a04000 	mov	r4, r0
4000d6a8:	e1a05001 	mov	r5, r1
4000d6ac:	e1a06002 	mov	r6, r2
4000d6b0:	e1a07003 	mov	r7, r3
4000d6b4:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d6b8:	e3a0103c 	mov	r1, #60	; 0x3c
4000d6bc:	e1a00004 	mov	r0, r4
4000d6c0:	eb001795 	bl	4001351c <__aeabi_memclr4>
4000d6c4:	e5845004 	str	r5, [r4, #4]
4000d6c8:	e5846008 	str	r6, [r4, #8]
4000d6cc:	e1a01106 	lsl	r1, r6, #2
4000d6d0:	e1a00008 	mov	r0, r8
4000d6d4:	eb000ca6 	bl	40010974 <__aeabi_uidivmod>
4000d6d8:	e1a0b000 	mov	fp, r0
4000d6dc:	e000069b 	mul	r0, fp, r6
4000d6e0:	e58d0004 	str	r0, [sp, #4]
4000d6e4:	e5847018 	str	r7, [r4, #24]
4000d6e8:	e59d0004 	ldr	r0, [sp, #4]
4000d6ec:	e0870100 	add	r0, r7, r0, lsl #2
4000d6f0:	e584001c 	str	r0, [r4, #28]
4000d6f4:	e5847020 	str	r7, [r4, #32]
4000d6f8:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d6fc:	e584b014 	str	fp, [r4, #20]
4000d700:	e584b00c 	str	fp, [r4, #12]
4000d704:	e10f9000 	mrs	r9, CPSR
4000d708:	e3890080 	orr	r0, r9, #128	; 0x80
4000d70c:	e58d0008 	str	r0, [sp, #8]
4000d710:	e59d0008 	ldr	r0, [sp, #8]
4000d714:	e121f000 	msr	CPSR_c, r0
4000d718:	e59f0160 	ldr	r0, [pc, #352]	; 4000d880 <_tx_queue_create+0x1e0>
4000d71c:	e5840000 	str	r0, [r4]
4000d720:	e59f015c 	ldr	r0, [pc, #348]	; 4000d884 <_tx_queue_create+0x1e4>
4000d724:	e5900000 	ldr	r0, [r0]
4000d728:	e3500000 	cmp	r0, #0
4000d72c:	0a00000b 	beq	4000d760 <_tx_queue_create+0xc0>
4000d730:	e59f014c 	ldr	r0, [pc, #332]	; 4000d884 <_tx_queue_create+0x1e4>
4000d734:	e5900000 	ldr	r0, [r0]
4000d738:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d73c:	e59f0140 	ldr	r0, [pc, #320]	; 4000d884 <_tx_queue_create+0x1e4>
4000d740:	e5900000 	ldr	r0, [r0]
4000d744:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d748:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d74c:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d750:	e59f012c 	ldr	r0, [pc, #300]	; 4000d884 <_tx_queue_create+0x1e4>
4000d754:	e5900000 	ldr	r0, [r0]
4000d758:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d75c:	ea000003 	b	4000d770 <_tx_queue_create+0xd0>
4000d760:	e59f011c 	ldr	r0, [pc, #284]	; 4000d884 <_tx_queue_create+0x1e4>
4000d764:	e5804000 	str	r4, [r0]
4000d768:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d76c:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d770:	e59f0110 	ldr	r0, [pc, #272]	; 4000d888 <_tx_queue_create+0x1e8>
4000d774:	e5900000 	ldr	r0, [r0]
4000d778:	e2800001 	add	r0, r0, #1
4000d77c:	e59f1104 	ldr	r1, [pc, #260]	; 4000d888 <_tx_queue_create+0x1e8>
4000d780:	e5810000 	str	r0, [r1]
4000d784:	e3a03000 	mov	r3, #0
4000d788:	e58d3000 	str	r3, [sp]
4000d78c:	e1a03008 	mov	r3, r8
4000d790:	e1a02005 	mov	r2, r5
4000d794:	e1a01004 	mov	r1, r4
4000d798:	e3a00003 	mov	r0, #3
4000d79c:	eb0009f6 	bl	4000ff7c <_tx_trace_object_register>
4000d7a0:	e59f10e4 	ldr	r1, [pc, #228]	; 4000d88c <_tx_queue_create+0x1ec>
4000d7a4:	e5910000 	ldr	r0, [r1]
4000d7a8:	e3500000 	cmp	r0, #0
4000d7ac:	0a000030 	beq	4000d874 <_tx_queue_create+0x1d4>
4000d7b0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000d890 <_tx_queue_create+0x1f0>
4000d7b4:	e5911000 	ldr	r1, [r1]
4000d7b8:	e2811001 	add	r1, r1, #1
4000d7bc:	e59f20cc 	ldr	r2, [pc, #204]	; 4000d890 <_tx_queue_create+0x1f0>
4000d7c0:	e5821000 	str	r1, [r2]
4000d7c4:	e580100c 	str	r1, [r0, #12]
4000d7c8:	e59f10c4 	ldr	r1, [pc, #196]	; 4000d894 <_tx_queue_create+0x1f4>
4000d7cc:	e5911000 	ldr	r1, [r1]
4000d7d0:	e3510000 	cmp	r1, #0
4000d7d4:	1a000006 	bne	4000d7f4 <_tx_queue_create+0x154>
4000d7d8:	e59f10b8 	ldr	r1, [pc, #184]	; 4000d898 <_tx_queue_create+0x1f8>
4000d7dc:	e5911000 	ldr	r1, [r1]
4000d7e0:	e5801000 	str	r1, [r0]
4000d7e4:	e5901000 	ldr	r1, [r0]
4000d7e8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d7ec:	e5801004 	str	r1, [r0, #4]
4000d7f0:	ea00000d 	b	4000d82c <_tx_queue_create+0x18c>
4000d7f4:	e59f1098 	ldr	r1, [pc, #152]	; 4000d894 <_tx_queue_create+0x1f4>
4000d7f8:	e5911000 	ldr	r1, [r1]
4000d7fc:	e59f2098 	ldr	r2, [pc, #152]	; 4000d89c <_tx_queue_create+0x1fc>
4000d800:	e1510002 	cmp	r1, r2
4000d804:	2a000004 	bcs	4000d81c <_tx_queue_create+0x17c>
4000d808:	e3e01000 	mvn	r1, #0
4000d80c:	e5801000 	str	r1, [r0]
4000d810:	e3a01000 	mov	r1, #0
4000d814:	e5801004 	str	r1, [r0, #4]
4000d818:	ea000003 	b	4000d82c <_tx_queue_create+0x18c>
4000d81c:	e59f1078 	ldr	r1, [pc, #120]	; 4000d89c <_tx_queue_create+0x1fc>
4000d820:	e5801000 	str	r1, [r0]
4000d824:	e3a01000 	mov	r1, #0
4000d828:	e5801004 	str	r1, [r0, #4]
4000d82c:	e3a0103c 	mov	r1, #60	; 0x3c
4000d830:	e5801008 	str	r1, [r0, #8]
4000d834:	e5804010 	str	r4, [r0, #16]
4000d838:	e5806014 	str	r6, [r0, #20]
4000d83c:	e5807018 	str	r7, [r0, #24]
4000d840:	e580801c 	str	r8, [r0, #28]
4000d844:	e2800020 	add	r0, r0, #32
4000d848:	e59f1050 	ldr	r1, [pc, #80]	; 4000d8a0 <_tx_queue_create+0x200>
4000d84c:	e5911000 	ldr	r1, [r1]
4000d850:	e1500001 	cmp	r0, r1
4000d854:	3a000001 	bcc	4000d860 <_tx_queue_create+0x1c0>
4000d858:	e59f1044 	ldr	r1, [pc, #68]	; 4000d8a4 <_tx_queue_create+0x204>
4000d85c:	e5910000 	ldr	r0, [r1]
4000d860:	e59f1024 	ldr	r1, [pc, #36]	; 4000d88c <_tx_queue_create+0x1ec>
4000d864:	e5810000 	str	r0, [r1]
4000d868:	e59f1038 	ldr	r1, [pc, #56]	; 4000d8a8 <_tx_queue_create+0x208>
4000d86c:	e5911000 	ldr	r1, [r1]
4000d870:	e5810020 	str	r0, [r1, #32]
4000d874:	e121f009 	msr	CPSR_c, r9
4000d878:	e3a00000 	mov	r0, #0
4000d87c:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d880:	51554555 	.word	0x51554555
4000d884:	40030eb0 	.word	0x40030eb0
4000d888:	40030eb4 	.word	0x40030eb4
4000d88c:	40030ea0 	.word	0x40030ea0
4000d890:	40030ea4 	.word	0x40030ea4
4000d894:	40030e2c 	.word	0x40030e2c
4000d898:	40030e34 	.word	0x40030e34
4000d89c:	f0f0f0f0 	.word	0xf0f0f0f0
4000d8a0:	40030e9c 	.word	0x40030e9c
4000d8a4:	40030e98 	.word	0x40030e98
4000d8a8:	40030e8c 	.word	0x40030e8c

4000d8ac <_tx_queue_front_send>:
4000d8ac:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000d8b0:	e1a04000 	mov	r4, r0
4000d8b4:	e1a05001 	mov	r5, r1
4000d8b8:	e1a06002 	mov	r6, r2
4000d8bc:	e10f7000 	mrs	r7, CPSR
4000d8c0:	e3870080 	orr	r0, r7, #128	; 0x80
4000d8c4:	e58d0004 	str	r0, [sp, #4]
4000d8c8:	e59d0004 	ldr	r0, [sp, #4]
4000d8cc:	e121f000 	msr	CPSR_c, r0
4000d8d0:	e59f1368 	ldr	r1, [pc, #872]	; 4000dc40 <_tx_queue_front_send+0x394>
4000d8d4:	e5910000 	ldr	r0, [r1]
4000d8d8:	e3500000 	cmp	r0, #0
4000d8dc:	0a000031 	beq	4000d9a8 <_tx_queue_front_send+0xfc>
4000d8e0:	e59f135c 	ldr	r1, [pc, #860]	; 4000dc44 <_tx_queue_front_send+0x398>
4000d8e4:	e5911000 	ldr	r1, [r1]
4000d8e8:	e2811001 	add	r1, r1, #1
4000d8ec:	e59f2350 	ldr	r2, [pc, #848]	; 4000dc44 <_tx_queue_front_send+0x398>
4000d8f0:	e5821000 	str	r1, [r2]
4000d8f4:	e580100c 	str	r1, [r0, #12]
4000d8f8:	e59f1348 	ldr	r1, [pc, #840]	; 4000dc48 <_tx_queue_front_send+0x39c>
4000d8fc:	e5911000 	ldr	r1, [r1]
4000d900:	e3510000 	cmp	r1, #0
4000d904:	1a000006 	bne	4000d924 <_tx_queue_front_send+0x78>
4000d908:	e59f133c 	ldr	r1, [pc, #828]	; 4000dc4c <_tx_queue_front_send+0x3a0>
4000d90c:	e5911000 	ldr	r1, [r1]
4000d910:	e5801000 	str	r1, [r0]
4000d914:	e5901000 	ldr	r1, [r0]
4000d918:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d91c:	e5801004 	str	r1, [r0, #4]
4000d920:	ea00000d 	b	4000d95c <_tx_queue_front_send+0xb0>
4000d924:	e59f131c 	ldr	r1, [pc, #796]	; 4000dc48 <_tx_queue_front_send+0x39c>
4000d928:	e5911000 	ldr	r1, [r1]
4000d92c:	e59f231c 	ldr	r2, [pc, #796]	; 4000dc50 <_tx_queue_front_send+0x3a4>
4000d930:	e1510002 	cmp	r1, r2
4000d934:	2a000004 	bcs	4000d94c <_tx_queue_front_send+0xa0>
4000d938:	e3e01000 	mvn	r1, #0
4000d93c:	e5801000 	str	r1, [r0]
4000d940:	e3a01000 	mov	r1, #0
4000d944:	e5801004 	str	r1, [r0, #4]
4000d948:	ea000003 	b	4000d95c <_tx_queue_front_send+0xb0>
4000d94c:	e59f12fc 	ldr	r1, [pc, #764]	; 4000dc50 <_tx_queue_front_send+0x3a4>
4000d950:	e5801000 	str	r1, [r0]
4000d954:	e3a01000 	mov	r1, #0
4000d958:	e5801004 	str	r1, [r0, #4]
4000d95c:	e3a0103f 	mov	r1, #63	; 0x3f
4000d960:	e5801008 	str	r1, [r0, #8]
4000d964:	e5804010 	str	r4, [r0, #16]
4000d968:	e5805014 	str	r5, [r0, #20]
4000d96c:	e5806018 	str	r6, [r0, #24]
4000d970:	e5941010 	ldr	r1, [r4, #16]
4000d974:	e580101c 	str	r1, [r0, #28]
4000d978:	e2800020 	add	r0, r0, #32
4000d97c:	e59f12d0 	ldr	r1, [pc, #720]	; 4000dc54 <_tx_queue_front_send+0x3a8>
4000d980:	e5911000 	ldr	r1, [r1]
4000d984:	e1500001 	cmp	r0, r1
4000d988:	3a000001 	bcc	4000d994 <_tx_queue_front_send+0xe8>
4000d98c:	e59f12c4 	ldr	r1, [pc, #708]	; 4000dc58 <_tx_queue_front_send+0x3ac>
4000d990:	e5910000 	ldr	r0, [r1]
4000d994:	e59f12a4 	ldr	r1, [pc, #676]	; 4000dc40 <_tx_queue_front_send+0x394>
4000d998:	e5810000 	str	r0, [r1]
4000d99c:	e59f12b8 	ldr	r1, [pc, #696]	; 4000dc5c <_tx_queue_front_send+0x3b0>
4000d9a0:	e5911000 	ldr	r1, [r1]
4000d9a4:	e5810020 	str	r0, [r1, #32]
4000d9a8:	e5940014 	ldr	r0, [r4, #20]
4000d9ac:	e3500000 	cmp	r0, #0
4000d9b0:	0a000064 	beq	4000db48 <_tx_queue_front_send+0x29c>
4000d9b4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000d9b8:	e3500000 	cmp	r0, #0
4000d9bc:	1a00002b 	bne	4000da70 <_tx_queue_front_send+0x1c4>
4000d9c0:	e5940020 	ldr	r0, [r4, #32]
4000d9c4:	e5941018 	ldr	r1, [r4, #24]
4000d9c8:	e1500001 	cmp	r0, r1
4000d9cc:	1a000004 	bne	4000d9e4 <_tx_queue_front_send+0x138>
4000d9d0:	e594001c 	ldr	r0, [r4, #28]
4000d9d4:	e5941008 	ldr	r1, [r4, #8]
4000d9d8:	e0400101 	sub	r0, r0, r1, lsl #2
4000d9dc:	e5840020 	str	r0, [r4, #32]
4000d9e0:	ea000003 	b	4000d9f4 <_tx_queue_front_send+0x148>
4000d9e4:	e5940020 	ldr	r0, [r4, #32]
4000d9e8:	e5941008 	ldr	r1, [r4, #8]
4000d9ec:	e0400101 	sub	r0, r0, r1, lsl #2
4000d9f0:	e5840020 	str	r0, [r4, #32]
4000d9f4:	e5940014 	ldr	r0, [r4, #20]
4000d9f8:	e2400001 	sub	r0, r0, #1
4000d9fc:	e5840014 	str	r0, [r4, #20]
4000da00:	e5940010 	ldr	r0, [r4, #16]
4000da04:	e2800001 	add	r0, r0, #1
4000da08:	e5840010 	str	r0, [r4, #16]
4000da0c:	e1a09005 	mov	r9, r5
4000da10:	e594a020 	ldr	sl, [r4, #32]
4000da14:	e594b008 	ldr	fp, [r4, #8]
4000da18:	e1a00000 	nop			; (mov r0, r0)
4000da1c:	e5990000 	ldr	r0, [r9]
4000da20:	e58a0000 	str	r0, [sl]
4000da24:	e24bb001 	sub	fp, fp, #1
4000da28:	e35b0000 	cmp	fp, #0
4000da2c:	1a000000 	bne	4000da34 <_tx_queue_front_send+0x188>
4000da30:	ea000002 	b	4000da40 <_tx_queue_front_send+0x194>
4000da34:	e28aa004 	add	sl, sl, #4
4000da38:	e2899004 	add	r9, r9, #4
4000da3c:	eafffff6 	b	4000da1c <_tx_queue_front_send+0x170>
4000da40:	e1a00000 	nop			; (mov r0, r0)
4000da44:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000da48:	e58d0000 	str	r0, [sp]
4000da4c:	e121f007 	msr	CPSR_c, r7
4000da50:	e59d0000 	ldr	r0, [sp]
4000da54:	e3500000 	cmp	r0, #0
4000da58:	0a000002 	beq	4000da68 <_tx_queue_front_send+0x1bc>
4000da5c:	e1a00004 	mov	r0, r4
4000da60:	e59d1000 	ldr	r1, [sp]
4000da64:	e12fff31 	blx	r1
4000da68:	e3a00000 	mov	r0, #0
4000da6c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000da70:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000da74:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da78:	e1500008 	cmp	r0, r8
4000da7c:	1a000002 	bne	4000da8c <_tx_queue_front_send+0x1e0>
4000da80:	e3a00000 	mov	r0, #0
4000da84:	e5840028 	str	r0, [r4, #40]	; 0x28
4000da88:	ea000007 	b	4000daac <_tx_queue_front_send+0x200>
4000da8c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000da90:	e5840028 	str	r0, [r4, #40]	; 0x28
4000da94:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000da98:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000da9c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000daa0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000daa4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000daa8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000daac:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dab0:	e2400001 	sub	r0, r0, #1
4000dab4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dab8:	e3a00000 	mov	r0, #0
4000dabc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dac0:	e59f0198 	ldr	r0, [pc, #408]	; 4000dc60 <_tx_queue_front_send+0x3b4>
4000dac4:	e5900000 	ldr	r0, [r0]
4000dac8:	e2800001 	add	r0, r0, #1
4000dacc:	e59f118c 	ldr	r1, [pc, #396]	; 4000dc60 <_tx_queue_front_send+0x3b4>
4000dad0:	e5810000 	str	r0, [r1]
4000dad4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dad8:	e58d0000 	str	r0, [sp]
4000dadc:	e121f007 	msr	CPSR_c, r7
4000dae0:	e1a09005 	mov	r9, r5
4000dae4:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000dae8:	e594b008 	ldr	fp, [r4, #8]
4000daec:	e1a00000 	nop			; (mov r0, r0)
4000daf0:	e5990000 	ldr	r0, [r9]
4000daf4:	e58a0000 	str	r0, [sl]
4000daf8:	e24bb001 	sub	fp, fp, #1
4000dafc:	e35b0000 	cmp	fp, #0
4000db00:	1a000000 	bne	4000db08 <_tx_queue_front_send+0x25c>
4000db04:	ea000002 	b	4000db14 <_tx_queue_front_send+0x268>
4000db08:	e28aa004 	add	sl, sl, #4
4000db0c:	e2899004 	add	r9, r9, #4
4000db10:	eafffff6 	b	4000daf0 <_tx_queue_front_send+0x244>
4000db14:	e1a00000 	nop			; (mov r0, r0)
4000db18:	e3a00000 	mov	r0, #0
4000db1c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000db20:	e1a00008 	mov	r0, r8
4000db24:	eb0005be 	bl	4000f224 <_tx_thread_system_resume>
4000db28:	e59d0000 	ldr	r0, [sp]
4000db2c:	e3500000 	cmp	r0, #0
4000db30:	0a000002 	beq	4000db40 <_tx_queue_front_send+0x294>
4000db34:	e1a00004 	mov	r0, r4
4000db38:	e59d1000 	ldr	r1, [sp]
4000db3c:	e12fff31 	blx	r1
4000db40:	e3a00000 	mov	r0, #0
4000db44:	eaffffc8 	b	4000da6c <_tx_queue_front_send+0x1c0>
4000db48:	e3560000 	cmp	r6, #0
4000db4c:	0a000038 	beq	4000dc34 <_tx_queue_front_send+0x388>
4000db50:	e59f00f4 	ldr	r0, [pc, #244]	; 4000dc4c <_tx_queue_front_send+0x3a0>
4000db54:	e5908000 	ldr	r8, [r0]
4000db58:	e59f0104 	ldr	r0, [pc, #260]	; 4000dc64 <_tx_queue_front_send+0x3b8>
4000db5c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000db60:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000db64:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000db68:	e3a00001 	mov	r0, #1
4000db6c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000db70:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db74:	e3500000 	cmp	r0, #0
4000db78:	0a00000b 	beq	4000dbac <_tx_queue_front_send+0x300>
4000db7c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db80:	e5880070 	str	r0, [r8, #112]	; 0x70
4000db84:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db88:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000db8c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000db90:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000db94:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000db98:	e5808070 	str	r8, [r0, #112]	; 0x70
4000db9c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dba0:	e5808074 	str	r8, [r0, #116]	; 0x74
4000dba4:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dba8:	ea000002 	b	4000dbb8 <_tx_queue_front_send+0x30c>
4000dbac:	e5848028 	str	r8, [r4, #40]	; 0x28
4000dbb0:	e5888070 	str	r8, [r8, #112]	; 0x70
4000dbb4:	e5888074 	str	r8, [r8, #116]	; 0x74
4000dbb8:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dbbc:	e2800001 	add	r0, r0, #1
4000dbc0:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dbc4:	e3a00005 	mov	r0, #5
4000dbc8:	e5880030 	str	r0, [r8, #48]	; 0x30
4000dbcc:	e3a00001 	mov	r0, #1
4000dbd0:	e5880038 	str	r0, [r8, #56]	; 0x38
4000dbd4:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000dbd8:	e59f0080 	ldr	r0, [pc, #128]	; 4000dc60 <_tx_queue_front_send+0x3b4>
4000dbdc:	e5900000 	ldr	r0, [r0]
4000dbe0:	e2800001 	add	r0, r0, #1
4000dbe4:	e59f1074 	ldr	r1, [pc, #116]	; 4000dc60 <_tx_queue_front_send+0x3b4>
4000dbe8:	e5810000 	str	r0, [r1]
4000dbec:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dbf0:	e58d0000 	str	r0, [sp]
4000dbf4:	e121f007 	msr	CPSR_c, r7
4000dbf8:	e1a00008 	mov	r0, r8
4000dbfc:	ebffebe1 	bl	40008b88 <_tx_thread_system_suspend>
4000dc00:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dc04:	e58d0000 	str	r0, [sp]
4000dc08:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dc0c:	e3500000 	cmp	r0, #0
4000dc10:	1a000005 	bne	4000dc2c <_tx_queue_front_send+0x380>
4000dc14:	e59d0000 	ldr	r0, [sp]
4000dc18:	e3500000 	cmp	r0, #0
4000dc1c:	0a000002 	beq	4000dc2c <_tx_queue_front_send+0x380>
4000dc20:	e1a00004 	mov	r0, r4
4000dc24:	e59d1000 	ldr	r1, [sp]
4000dc28:	e12fff31 	blx	r1
4000dc2c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dc30:	eaffff8d 	b	4000da6c <_tx_queue_front_send+0x1c0>
4000dc34:	e121f007 	msr	CPSR_c, r7
4000dc38:	e3a0000b 	mov	r0, #11
4000dc3c:	eaffff8a 	b	4000da6c <_tx_queue_front_send+0x1c0>
4000dc40:	40030ea0 	.word	0x40030ea0
4000dc44:	40030ea4 	.word	0x40030ea4
4000dc48:	40030e2c 	.word	0x40030e2c
4000dc4c:	40030e34 	.word	0x40030e34
4000dc50:	f0f0f0f0 	.word	0xf0f0f0f0
4000dc54:	40030e9c 	.word	0x40030e9c
4000dc58:	40030e98 	.word	0x40030e98
4000dc5c:	40030e8c 	.word	0x40030e8c
4000dc60:	40030e50 	.word	0x40030e50
4000dc64:	40010648 	.word	0x40010648

4000dc68 <_tx_queue_receive>:
4000dc68:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000dc6c:	e1a04000 	mov	r4, r0
4000dc70:	e1a05001 	mov	r5, r1
4000dc74:	e1a06002 	mov	r6, r2
4000dc78:	e10f7000 	mrs	r7, CPSR
4000dc7c:	e3870080 	orr	r0, r7, #128	; 0x80
4000dc80:	e58d0000 	str	r0, [sp]
4000dc84:	e59d0000 	ldr	r0, [sp]
4000dc88:	e121f000 	msr	CPSR_c, r0
4000dc8c:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e0a0 <_tx_queue_receive+0x438>
4000dc90:	e5910000 	ldr	r0, [r1]
4000dc94:	e3500000 	cmp	r0, #0
4000dc98:	0a000031 	beq	4000dd64 <_tx_queue_receive+0xfc>
4000dc9c:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e0a4 <_tx_queue_receive+0x43c>
4000dca0:	e5911000 	ldr	r1, [r1]
4000dca4:	e2811001 	add	r1, r1, #1
4000dca8:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e0a4 <_tx_queue_receive+0x43c>
4000dcac:	e5821000 	str	r1, [r2]
4000dcb0:	e580100c 	str	r1, [r0, #12]
4000dcb4:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e0a8 <_tx_queue_receive+0x440>
4000dcb8:	e5911000 	ldr	r1, [r1]
4000dcbc:	e3510000 	cmp	r1, #0
4000dcc0:	1a000006 	bne	4000dce0 <_tx_queue_receive+0x78>
4000dcc4:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e0ac <_tx_queue_receive+0x444>
4000dcc8:	e5911000 	ldr	r1, [r1]
4000dccc:	e5801000 	str	r1, [r0]
4000dcd0:	e5901000 	ldr	r1, [r0]
4000dcd4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dcd8:	e5801004 	str	r1, [r0, #4]
4000dcdc:	ea00000d 	b	4000dd18 <_tx_queue_receive+0xb0>
4000dce0:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e0a8 <_tx_queue_receive+0x440>
4000dce4:	e5911000 	ldr	r1, [r1]
4000dce8:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e0b0 <_tx_queue_receive+0x448>
4000dcec:	e1510002 	cmp	r1, r2
4000dcf0:	2a000004 	bcs	4000dd08 <_tx_queue_receive+0xa0>
4000dcf4:	e3e01000 	mvn	r1, #0
4000dcf8:	e5801000 	str	r1, [r0]
4000dcfc:	e3a01000 	mov	r1, #0
4000dd00:	e5801004 	str	r1, [r0, #4]
4000dd04:	ea000003 	b	4000dd18 <_tx_queue_receive+0xb0>
4000dd08:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e0b0 <_tx_queue_receive+0x448>
4000dd0c:	e5801000 	str	r1, [r0]
4000dd10:	e3a01000 	mov	r1, #0
4000dd14:	e5801004 	str	r1, [r0, #4]
4000dd18:	e3a01044 	mov	r1, #68	; 0x44
4000dd1c:	e5801008 	str	r1, [r0, #8]
4000dd20:	e5804010 	str	r4, [r0, #16]
4000dd24:	e5805014 	str	r5, [r0, #20]
4000dd28:	e5806018 	str	r6, [r0, #24]
4000dd2c:	e5941010 	ldr	r1, [r4, #16]
4000dd30:	e580101c 	str	r1, [r0, #28]
4000dd34:	e2800020 	add	r0, r0, #32
4000dd38:	e59f1374 	ldr	r1, [pc, #884]	; 4000e0b4 <_tx_queue_receive+0x44c>
4000dd3c:	e5911000 	ldr	r1, [r1]
4000dd40:	e1500001 	cmp	r0, r1
4000dd44:	3a000001 	bcc	4000dd50 <_tx_queue_receive+0xe8>
4000dd48:	e59f1368 	ldr	r1, [pc, #872]	; 4000e0b8 <_tx_queue_receive+0x450>
4000dd4c:	e5910000 	ldr	r0, [r1]
4000dd50:	e59f1348 	ldr	r1, [pc, #840]	; 4000e0a0 <_tx_queue_receive+0x438>
4000dd54:	e5810000 	str	r0, [r1]
4000dd58:	e59f135c 	ldr	r1, [pc, #860]	; 4000e0bc <_tx_queue_receive+0x454>
4000dd5c:	e5911000 	ldr	r1, [r1]
4000dd60:	e5810020 	str	r0, [r1, #32]
4000dd64:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dd68:	e3580000 	cmp	r8, #0
4000dd6c:	0a00002f 	beq	4000de30 <_tx_queue_receive+0x1c8>
4000dd70:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000dd74:	e3500000 	cmp	r0, #0
4000dd78:	0a00002c 	beq	4000de30 <_tx_queue_receive+0x1c8>
4000dd7c:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000dd80:	e1a0a005 	mov	sl, r5
4000dd84:	e594b008 	ldr	fp, [r4, #8]
4000dd88:	e1a00000 	nop			; (mov r0, r0)
4000dd8c:	e5990000 	ldr	r0, [r9]
4000dd90:	e58a0000 	str	r0, [sl]
4000dd94:	e24bb001 	sub	fp, fp, #1
4000dd98:	e35b0000 	cmp	fp, #0
4000dd9c:	1a000000 	bne	4000dda4 <_tx_queue_receive+0x13c>
4000dda0:	ea000002 	b	4000ddb0 <_tx_queue_receive+0x148>
4000dda4:	e28aa004 	add	sl, sl, #4
4000dda8:	e2899004 	add	r9, r9, #4
4000ddac:	eafffff6 	b	4000dd8c <_tx_queue_receive+0x124>
4000ddb0:	e1a00000 	nop			; (mov r0, r0)
4000ddb4:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000ddb8:	e1500008 	cmp	r0, r8
4000ddbc:	1a000002 	bne	4000ddcc <_tx_queue_receive+0x164>
4000ddc0:	e3a00000 	mov	r0, #0
4000ddc4:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ddc8:	ea000007 	b	4000ddec <_tx_queue_receive+0x184>
4000ddcc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000ddd0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ddd4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000ddd8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dddc:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dde0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dde4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000dde8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ddec:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000ddf0:	e2400001 	sub	r0, r0, #1
4000ddf4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000ddf8:	e3a00000 	mov	r0, #0
4000ddfc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000de00:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e0c0 <_tx_queue_receive+0x458>
4000de04:	e5900000 	ldr	r0, [r0]
4000de08:	e2800001 	add	r0, r0, #1
4000de0c:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e0c0 <_tx_queue_receive+0x458>
4000de10:	e5810000 	str	r0, [r1]
4000de14:	e121f007 	msr	CPSR_c, r7
4000de18:	e3a00000 	mov	r0, #0
4000de1c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000de20:	e1a00008 	mov	r0, r8
4000de24:	eb0004fe 	bl	4000f224 <_tx_thread_system_resume>
4000de28:	e3a00000 	mov	r0, #0
4000de2c:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000de30:	e5940010 	ldr	r0, [r4, #16]
4000de34:	e3500000 	cmp	r0, #0
4000de38:	0a000068 	beq	4000dfe0 <_tx_queue_receive+0x378>
4000de3c:	e5949020 	ldr	r9, [r4, #32]
4000de40:	e1a0a005 	mov	sl, r5
4000de44:	e594b008 	ldr	fp, [r4, #8]
4000de48:	e1a00000 	nop			; (mov r0, r0)
4000de4c:	e5990000 	ldr	r0, [r9]
4000de50:	e58a0000 	str	r0, [sl]
4000de54:	e24bb001 	sub	fp, fp, #1
4000de58:	e35b0000 	cmp	fp, #0
4000de5c:	1a000000 	bne	4000de64 <_tx_queue_receive+0x1fc>
4000de60:	ea000002 	b	4000de70 <_tx_queue_receive+0x208>
4000de64:	e28aa004 	add	sl, sl, #4
4000de68:	e2899004 	add	r9, r9, #4
4000de6c:	eafffff6 	b	4000de4c <_tx_queue_receive+0x1e4>
4000de70:	e1a00000 	nop			; (mov r0, r0)
4000de74:	e5940020 	ldr	r0, [r4, #32]
4000de78:	e5941008 	ldr	r1, [r4, #8]
4000de7c:	e0800101 	add	r0, r0, r1, lsl #2
4000de80:	e5840020 	str	r0, [r4, #32]
4000de84:	e5940020 	ldr	r0, [r4, #32]
4000de88:	e594101c 	ldr	r1, [r4, #28]
4000de8c:	e1500001 	cmp	r0, r1
4000de90:	3a000001 	bcc	4000de9c <_tx_queue_receive+0x234>
4000de94:	e5940018 	ldr	r0, [r4, #24]
4000de98:	e5840020 	str	r0, [r4, #32]
4000de9c:	e3580000 	cmp	r8, #0
4000dea0:	1a000008 	bne	4000dec8 <_tx_queue_receive+0x260>
4000dea4:	e5940014 	ldr	r0, [r4, #20]
4000dea8:	e2800001 	add	r0, r0, #1
4000deac:	e5840014 	str	r0, [r4, #20]
4000deb0:	e5940010 	ldr	r0, [r4, #16]
4000deb4:	e2400001 	sub	r0, r0, #1
4000deb8:	e5840010 	str	r0, [r4, #16]
4000debc:	e121f007 	msr	CPSR_c, r7
4000dec0:	e3a00000 	mov	r0, #0
4000dec4:	eaffffd8 	b	4000de2c <_tx_queue_receive+0x1c4>
4000dec8:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e0c0 <_tx_queue_receive+0x458>
4000decc:	e5900000 	ldr	r0, [r0]
4000ded0:	e2800001 	add	r0, r0, #1
4000ded4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e0c0 <_tx_queue_receive+0x458>
4000ded8:	e5810000 	str	r0, [r1]
4000dedc:	e121f007 	msr	CPSR_c, r7
4000dee0:	e10f7000 	mrs	r7, CPSR
4000dee4:	e3870080 	orr	r0, r7, #128	; 0x80
4000dee8:	e58d0000 	str	r0, [sp]
4000deec:	e59d0000 	ldr	r0, [sp]
4000def0:	e121f000 	msr	CPSR_c, r0
4000def4:	e2810000 	add	r0, r1, #0
4000def8:	e5900000 	ldr	r0, [r0]
4000defc:	e2400001 	sub	r0, r0, #1
4000df00:	e5810000 	str	r0, [r1]
4000df04:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000df08:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000df0c:	e594b008 	ldr	fp, [r4, #8]
4000df10:	e1a00000 	nop			; (mov r0, r0)
4000df14:	e5990000 	ldr	r0, [r9]
4000df18:	e58a0000 	str	r0, [sl]
4000df1c:	e24bb001 	sub	fp, fp, #1
4000df20:	e35b0000 	cmp	fp, #0
4000df24:	1a000000 	bne	4000df2c <_tx_queue_receive+0x2c4>
4000df28:	ea000002 	b	4000df38 <_tx_queue_receive+0x2d0>
4000df2c:	e28aa004 	add	sl, sl, #4
4000df30:	e2899004 	add	r9, r9, #4
4000df34:	eafffff6 	b	4000df14 <_tx_queue_receive+0x2ac>
4000df38:	e1a00000 	nop			; (mov r0, r0)
4000df3c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000df40:	e5941008 	ldr	r1, [r4, #8]
4000df44:	e0800101 	add	r0, r0, r1, lsl #2
4000df48:	e5840024 	str	r0, [r4, #36]	; 0x24
4000df4c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000df50:	e594101c 	ldr	r1, [r4, #28]
4000df54:	e1500001 	cmp	r0, r1
4000df58:	3a000001 	bcc	4000df64 <_tx_queue_receive+0x2fc>
4000df5c:	e5940018 	ldr	r0, [r4, #24]
4000df60:	e5840024 	str	r0, [r4, #36]	; 0x24
4000df64:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df68:	e1500008 	cmp	r0, r8
4000df6c:	1a000002 	bne	4000df7c <_tx_queue_receive+0x314>
4000df70:	e3a00000 	mov	r0, #0
4000df74:	e5840028 	str	r0, [r4, #40]	; 0x28
4000df78:	ea000007 	b	4000df9c <_tx_queue_receive+0x334>
4000df7c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df80:	e5840028 	str	r0, [r4, #40]	; 0x28
4000df84:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000df88:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000df8c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000df90:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000df94:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000df98:	e5810070 	str	r0, [r1, #112]	; 0x70
4000df9c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dfa0:	e2400001 	sub	r0, r0, #1
4000dfa4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dfa8:	e3a00000 	mov	r0, #0
4000dfac:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dfb0:	e59f0108 	ldr	r0, [pc, #264]	; 4000e0c0 <_tx_queue_receive+0x458>
4000dfb4:	e5900000 	ldr	r0, [r0]
4000dfb8:	e2800001 	add	r0, r0, #1
4000dfbc:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e0c0 <_tx_queue_receive+0x458>
4000dfc0:	e5810000 	str	r0, [r1]
4000dfc4:	e121f007 	msr	CPSR_c, r7
4000dfc8:	e3a00000 	mov	r0, #0
4000dfcc:	e5880084 	str	r0, [r8, #132]	; 0x84
4000dfd0:	e1a00008 	mov	r0, r8
4000dfd4:	eb000492 	bl	4000f224 <_tx_thread_system_resume>
4000dfd8:	e3a00000 	mov	r0, #0
4000dfdc:	eaffff92 	b	4000de2c <_tx_queue_receive+0x1c4>
4000dfe0:	e3560000 	cmp	r6, #0
4000dfe4:	0a00002a 	beq	4000e094 <_tx_queue_receive+0x42c>
4000dfe8:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e0ac <_tx_queue_receive+0x444>
4000dfec:	e5908000 	ldr	r8, [r0]
4000dff0:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e0c4 <_tx_queue_receive+0x45c>
4000dff4:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dff8:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000dffc:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e000:	e3a00000 	mov	r0, #0
4000e004:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e008:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e00c:	e3500000 	cmp	r0, #0
4000e010:	0a00000a 	beq	4000e040 <_tx_queue_receive+0x3d8>
4000e014:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e018:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e01c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e020:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e024:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e028:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e02c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e030:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e034:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e038:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e03c:	ea000002 	b	4000e04c <_tx_queue_receive+0x3e4>
4000e040:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e044:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e048:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e04c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e050:	e2800001 	add	r0, r0, #1
4000e054:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e058:	e3a00005 	mov	r0, #5
4000e05c:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e060:	e3a00001 	mov	r0, #1
4000e064:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e068:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e06c:	e59f004c 	ldr	r0, [pc, #76]	; 4000e0c0 <_tx_queue_receive+0x458>
4000e070:	e5900000 	ldr	r0, [r0]
4000e074:	e2800001 	add	r0, r0, #1
4000e078:	e59f1040 	ldr	r1, [pc, #64]	; 4000e0c0 <_tx_queue_receive+0x458>
4000e07c:	e5810000 	str	r0, [r1]
4000e080:	e121f007 	msr	CPSR_c, r7
4000e084:	e1a00008 	mov	r0, r8
4000e088:	ebffeabe 	bl	40008b88 <_tx_thread_system_suspend>
4000e08c:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e090:	eaffff65 	b	4000de2c <_tx_queue_receive+0x1c4>
4000e094:	e121f007 	msr	CPSR_c, r7
4000e098:	e3a0000a 	mov	r0, #10
4000e09c:	eaffff62 	b	4000de2c <_tx_queue_receive+0x1c4>
4000e0a0:	40030ea0 	.word	0x40030ea0
4000e0a4:	40030ea4 	.word	0x40030ea4
4000e0a8:	40030e2c 	.word	0x40030e2c
4000e0ac:	40030e34 	.word	0x40030e34
4000e0b0:	f0f0f0f0 	.word	0xf0f0f0f0
4000e0b4:	40030e9c 	.word	0x40030e9c
4000e0b8:	40030e98 	.word	0x40030e98
4000e0bc:	40030e8c 	.word	0x40030e8c
4000e0c0:	40030e50 	.word	0x40030e50
4000e0c4:	40010648 	.word	0x40010648

4000e0c8 <_tx_queue_send>:
4000e0c8:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e0cc:	e1a04000 	mov	r4, r0
4000e0d0:	e1a05001 	mov	r5, r1
4000e0d4:	e1a06002 	mov	r6, r2
4000e0d8:	e10f7000 	mrs	r7, CPSR
4000e0dc:	e3870080 	orr	r0, r7, #128	; 0x80
4000e0e0:	e58d0004 	str	r0, [sp, #4]
4000e0e4:	e59d0004 	ldr	r0, [sp, #4]
4000e0e8:	e121f000 	msr	CPSR_c, r0
4000e0ec:	e59f1358 	ldr	r1, [pc, #856]	; 4000e44c <_tx_queue_send+0x384>
4000e0f0:	e5910000 	ldr	r0, [r1]
4000e0f4:	e3500000 	cmp	r0, #0
4000e0f8:	0a000031 	beq	4000e1c4 <_tx_queue_send+0xfc>
4000e0fc:	e59f134c 	ldr	r1, [pc, #844]	; 4000e450 <_tx_queue_send+0x388>
4000e100:	e5911000 	ldr	r1, [r1]
4000e104:	e2811001 	add	r1, r1, #1
4000e108:	e59f2340 	ldr	r2, [pc, #832]	; 4000e450 <_tx_queue_send+0x388>
4000e10c:	e5821000 	str	r1, [r2]
4000e110:	e580100c 	str	r1, [r0, #12]
4000e114:	e59f1338 	ldr	r1, [pc, #824]	; 4000e454 <_tx_queue_send+0x38c>
4000e118:	e5911000 	ldr	r1, [r1]
4000e11c:	e3510000 	cmp	r1, #0
4000e120:	1a000006 	bne	4000e140 <_tx_queue_send+0x78>
4000e124:	e59f132c 	ldr	r1, [pc, #812]	; 4000e458 <_tx_queue_send+0x390>
4000e128:	e5911000 	ldr	r1, [r1]
4000e12c:	e5801000 	str	r1, [r0]
4000e130:	e5901000 	ldr	r1, [r0]
4000e134:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e138:	e5801004 	str	r1, [r0, #4]
4000e13c:	ea00000d 	b	4000e178 <_tx_queue_send+0xb0>
4000e140:	e59f130c 	ldr	r1, [pc, #780]	; 4000e454 <_tx_queue_send+0x38c>
4000e144:	e5911000 	ldr	r1, [r1]
4000e148:	e59f230c 	ldr	r2, [pc, #780]	; 4000e45c <_tx_queue_send+0x394>
4000e14c:	e1510002 	cmp	r1, r2
4000e150:	2a000004 	bcs	4000e168 <_tx_queue_send+0xa0>
4000e154:	e3e01000 	mvn	r1, #0
4000e158:	e5801000 	str	r1, [r0]
4000e15c:	e3a01000 	mov	r1, #0
4000e160:	e5801004 	str	r1, [r0, #4]
4000e164:	ea000003 	b	4000e178 <_tx_queue_send+0xb0>
4000e168:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e45c <_tx_queue_send+0x394>
4000e16c:	e5801000 	str	r1, [r0]
4000e170:	e3a01000 	mov	r1, #0
4000e174:	e5801004 	str	r1, [r0, #4]
4000e178:	e3a01045 	mov	r1, #69	; 0x45
4000e17c:	e5801008 	str	r1, [r0, #8]
4000e180:	e5804010 	str	r4, [r0, #16]
4000e184:	e5805014 	str	r5, [r0, #20]
4000e188:	e5806018 	str	r6, [r0, #24]
4000e18c:	e5941010 	ldr	r1, [r4, #16]
4000e190:	e580101c 	str	r1, [r0, #28]
4000e194:	e2800020 	add	r0, r0, #32
4000e198:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e460 <_tx_queue_send+0x398>
4000e19c:	e5911000 	ldr	r1, [r1]
4000e1a0:	e1500001 	cmp	r0, r1
4000e1a4:	3a000001 	bcc	4000e1b0 <_tx_queue_send+0xe8>
4000e1a8:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e464 <_tx_queue_send+0x39c>
4000e1ac:	e5910000 	ldr	r0, [r1]
4000e1b0:	e59f1294 	ldr	r1, [pc, #660]	; 4000e44c <_tx_queue_send+0x384>
4000e1b4:	e5810000 	str	r0, [r1]
4000e1b8:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e468 <_tx_queue_send+0x3a0>
4000e1bc:	e5911000 	ldr	r1, [r1]
4000e1c0:	e5810020 	str	r0, [r1, #32]
4000e1c4:	e5940014 	ldr	r0, [r4, #20]
4000e1c8:	e3500000 	cmp	r0, #0
4000e1cc:	0a000061 	beq	4000e358 <_tx_queue_send+0x290>
4000e1d0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e1d4:	e3500000 	cmp	r0, #0
4000e1d8:	1a000028 	bne	4000e280 <_tx_queue_send+0x1b8>
4000e1dc:	e5940014 	ldr	r0, [r4, #20]
4000e1e0:	e2400001 	sub	r0, r0, #1
4000e1e4:	e5840014 	str	r0, [r4, #20]
4000e1e8:	e5940010 	ldr	r0, [r4, #16]
4000e1ec:	e2800001 	add	r0, r0, #1
4000e1f0:	e5840010 	str	r0, [r4, #16]
4000e1f4:	e1a09005 	mov	r9, r5
4000e1f8:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e1fc:	e594b008 	ldr	fp, [r4, #8]
4000e200:	e1a00000 	nop			; (mov r0, r0)
4000e204:	e5990000 	ldr	r0, [r9]
4000e208:	e58a0000 	str	r0, [sl]
4000e20c:	e24bb001 	sub	fp, fp, #1
4000e210:	e35b0000 	cmp	fp, #0
4000e214:	1a000000 	bne	4000e21c <_tx_queue_send+0x154>
4000e218:	ea000002 	b	4000e228 <_tx_queue_send+0x160>
4000e21c:	e28aa004 	add	sl, sl, #4
4000e220:	e2899004 	add	r9, r9, #4
4000e224:	eafffff6 	b	4000e204 <_tx_queue_send+0x13c>
4000e228:	e1a00000 	nop			; (mov r0, r0)
4000e22c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e230:	e5941008 	ldr	r1, [r4, #8]
4000e234:	e0800101 	add	r0, r0, r1, lsl #2
4000e238:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e23c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e240:	e594101c 	ldr	r1, [r4, #28]
4000e244:	e1500001 	cmp	r0, r1
4000e248:	3a000001 	bcc	4000e254 <_tx_queue_send+0x18c>
4000e24c:	e5940018 	ldr	r0, [r4, #24]
4000e250:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e254:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e258:	e58d0000 	str	r0, [sp]
4000e25c:	e121f007 	msr	CPSR_c, r7
4000e260:	e59d0000 	ldr	r0, [sp]
4000e264:	e3500000 	cmp	r0, #0
4000e268:	0a000002 	beq	4000e278 <_tx_queue_send+0x1b0>
4000e26c:	e1a00004 	mov	r0, r4
4000e270:	e59d1000 	ldr	r1, [sp]
4000e274:	e12fff31 	blx	r1
4000e278:	e3a00000 	mov	r0, #0
4000e27c:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e280:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e284:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e288:	e1500008 	cmp	r0, r8
4000e28c:	1a000002 	bne	4000e29c <_tx_queue_send+0x1d4>
4000e290:	e3a00000 	mov	r0, #0
4000e294:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e298:	ea000007 	b	4000e2bc <_tx_queue_send+0x1f4>
4000e29c:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e2a0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e2a4:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e2a8:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e2ac:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e2b0:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e2b4:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e2b8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e2bc:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e2c0:	e2400001 	sub	r0, r0, #1
4000e2c4:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e2c8:	e3a00000 	mov	r0, #0
4000e2cc:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e2d0:	e59f0194 	ldr	r0, [pc, #404]	; 4000e46c <_tx_queue_send+0x3a4>
4000e2d4:	e5900000 	ldr	r0, [r0]
4000e2d8:	e2800001 	add	r0, r0, #1
4000e2dc:	e59f1188 	ldr	r1, [pc, #392]	; 4000e46c <_tx_queue_send+0x3a4>
4000e2e0:	e5810000 	str	r0, [r1]
4000e2e4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e2e8:	e58d0000 	str	r0, [sp]
4000e2ec:	e121f007 	msr	CPSR_c, r7
4000e2f0:	e1a09005 	mov	r9, r5
4000e2f4:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e2f8:	e594b008 	ldr	fp, [r4, #8]
4000e2fc:	e1a00000 	nop			; (mov r0, r0)
4000e300:	e5990000 	ldr	r0, [r9]
4000e304:	e58a0000 	str	r0, [sl]
4000e308:	e24bb001 	sub	fp, fp, #1
4000e30c:	e35b0000 	cmp	fp, #0
4000e310:	1a000000 	bne	4000e318 <_tx_queue_send+0x250>
4000e314:	ea000002 	b	4000e324 <_tx_queue_send+0x25c>
4000e318:	e28aa004 	add	sl, sl, #4
4000e31c:	e2899004 	add	r9, r9, #4
4000e320:	eafffff6 	b	4000e300 <_tx_queue_send+0x238>
4000e324:	e1a00000 	nop			; (mov r0, r0)
4000e328:	e3a00000 	mov	r0, #0
4000e32c:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e330:	e1a00008 	mov	r0, r8
4000e334:	eb0003ba 	bl	4000f224 <_tx_thread_system_resume>
4000e338:	e59d0000 	ldr	r0, [sp]
4000e33c:	e3500000 	cmp	r0, #0
4000e340:	0a000002 	beq	4000e350 <_tx_queue_send+0x288>
4000e344:	e1a00004 	mov	r0, r4
4000e348:	e59d1000 	ldr	r1, [sp]
4000e34c:	e12fff31 	blx	r1
4000e350:	e3a00000 	mov	r0, #0
4000e354:	eaffffc8 	b	4000e27c <_tx_queue_send+0x1b4>
4000e358:	e3560000 	cmp	r6, #0
4000e35c:	0a000037 	beq	4000e440 <_tx_queue_send+0x378>
4000e360:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e458 <_tx_queue_send+0x390>
4000e364:	e5908000 	ldr	r8, [r0]
4000e368:	e59f0100 	ldr	r0, [pc, #256]	; 4000e470 <_tx_queue_send+0x3a8>
4000e36c:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e370:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e374:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e378:	e3a00000 	mov	r0, #0
4000e37c:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e380:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e384:	e3500000 	cmp	r0, #0
4000e388:	0a00000a 	beq	4000e3b8 <_tx_queue_send+0x2f0>
4000e38c:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e390:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e394:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e398:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e39c:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e3a0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e3a4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e3a8:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e3ac:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e3b0:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e3b4:	ea000002 	b	4000e3c4 <_tx_queue_send+0x2fc>
4000e3b8:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e3bc:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e3c0:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e3c4:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e3c8:	e2800001 	add	r0, r0, #1
4000e3cc:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e3d0:	e3a00005 	mov	r0, #5
4000e3d4:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e3d8:	e3a00001 	mov	r0, #1
4000e3dc:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e3e0:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e3e4:	e59f0080 	ldr	r0, [pc, #128]	; 4000e46c <_tx_queue_send+0x3a4>
4000e3e8:	e5900000 	ldr	r0, [r0]
4000e3ec:	e2800001 	add	r0, r0, #1
4000e3f0:	e59f1074 	ldr	r1, [pc, #116]	; 4000e46c <_tx_queue_send+0x3a4>
4000e3f4:	e5810000 	str	r0, [r1]
4000e3f8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e3fc:	e58d0000 	str	r0, [sp]
4000e400:	e121f007 	msr	CPSR_c, r7
4000e404:	e1a00008 	mov	r0, r8
4000e408:	ebffe9de 	bl	40008b88 <_tx_thread_system_suspend>
4000e40c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e410:	e58d0000 	str	r0, [sp]
4000e414:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e418:	e3500000 	cmp	r0, #0
4000e41c:	1a000005 	bne	4000e438 <_tx_queue_send+0x370>
4000e420:	e59d0000 	ldr	r0, [sp]
4000e424:	e3500000 	cmp	r0, #0
4000e428:	0a000002 	beq	4000e438 <_tx_queue_send+0x370>
4000e42c:	e1a00004 	mov	r0, r4
4000e430:	e59d1000 	ldr	r1, [sp]
4000e434:	e12fff31 	blx	r1
4000e438:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e43c:	eaffff8e 	b	4000e27c <_tx_queue_send+0x1b4>
4000e440:	e121f007 	msr	CPSR_c, r7
4000e444:	e3a0000b 	mov	r0, #11
4000e448:	eaffff8b 	b	4000e27c <_tx_queue_send+0x1b4>
4000e44c:	40030ea0 	.word	0x40030ea0
4000e450:	40030ea4 	.word	0x40030ea4
4000e454:	40030e2c 	.word	0x40030e2c
4000e458:	40030e34 	.word	0x40030e34
4000e45c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e460:	40030e9c 	.word	0x40030e9c
4000e464:	40030e98 	.word	0x40030e98
4000e468:	40030e8c 	.word	0x40030e8c
4000e46c:	40030e50 	.word	0x40030e50
4000e470:	40010648 	.word	0x40010648

4000e474 <_tx_thread_create>:
4000e474:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e478:	e24dd014 	sub	sp, sp, #20
4000e47c:	e1a04000 	mov	r4, r0
4000e480:	e1a05001 	mov	r5, r1
4000e484:	e28da048 	add	sl, sp, #72	; 0x48
4000e488:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e48c:	e3a00000 	mov	r0, #0
4000e490:	e58d0004 	str	r0, [sp, #4]
4000e494:	e3a020ef 	mov	r2, #239	; 0xef
4000e498:	e1a01007 	mov	r1, r7
4000e49c:	e1a00006 	mov	r0, r6
4000e4a0:	eb001445 	bl	400135bc <__aeabi_memset>
4000e4a4:	e1a00127 	lsr	r0, r7, #2
4000e4a8:	e3a01004 	mov	r1, #4
4000e4ac:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e4b0:	e3a010a8 	mov	r1, #168	; 0xa8
4000e4b4:	e1a00004 	mov	r0, r4
4000e4b8:	eb001417 	bl	4001351c <__aeabi_memclr4>
4000e4bc:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e4c0:	e59d001c 	ldr	r0, [sp, #28]
4000e4c4:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e4c8:	e59d0020 	ldr	r0, [sp, #32]
4000e4cc:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e4d0:	e584600c 	str	r6, [r4, #12]
4000e4d4:	e5847014 	str	r7, [r4, #20]
4000e4d8:	e2470001 	sub	r0, r7, #1
4000e4dc:	e0800006 	add	r0, r0, r6
4000e4e0:	e5840010 	str	r0, [r4, #16]
4000e4e4:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e4e8:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e4ec:	e584a018 	str	sl, [r4, #24]
4000e4f0:	e584a01c 	str	sl, [r4, #28]
4000e4f4:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e4f8:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e4fc:	e3a00003 	mov	r0, #3
4000e500:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e504:	e59f0268 	ldr	r0, [pc, #616]	; 4000e774 <_tx_thread_create+0x300>
4000e508:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e50c:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e510:	e59f1260 	ldr	r1, [pc, #608]	; 4000e778 <_tx_thread_create+0x304>
4000e514:	e1a00004 	mov	r0, r4
4000e518:	eb000727 	bl	400101bc <_tx_thread_stack_build>
4000e51c:	e5940008 	ldr	r0, [r4, #8]
4000e520:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e524:	e10f0000 	mrs	r0, CPSR
4000e528:	e58d0010 	str	r0, [sp, #16]
4000e52c:	e59d0010 	ldr	r0, [sp, #16]
4000e530:	e380b080 	orr	fp, r0, #128	; 0x80
4000e534:	e121f00b 	msr	CPSR_c, fp
4000e538:	e59f023c 	ldr	r0, [pc, #572]	; 4000e77c <_tx_thread_create+0x308>
4000e53c:	e5840000 	str	r0, [r4]
4000e540:	e59f0238 	ldr	r0, [pc, #568]	; 4000e780 <_tx_thread_create+0x30c>
4000e544:	e5900000 	ldr	r0, [r0]
4000e548:	e3500000 	cmp	r0, #0
4000e54c:	0a00000e 	beq	4000e58c <_tx_thread_create+0x118>
4000e550:	e59f0228 	ldr	r0, [pc, #552]	; 4000e780 <_tx_thread_create+0x30c>
4000e554:	e5900000 	ldr	r0, [r0]
4000e558:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e55c:	e58d000c 	str	r0, [sp, #12]
4000e560:	e59f0218 	ldr	r0, [pc, #536]	; 4000e780 <_tx_thread_create+0x30c>
4000e564:	e5900000 	ldr	r0, [r0]
4000e568:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e56c:	e59d000c 	ldr	r0, [sp, #12]
4000e570:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e574:	e59d000c 	ldr	r0, [sp, #12]
4000e578:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e57c:	e59f01fc 	ldr	r0, [pc, #508]	; 4000e780 <_tx_thread_create+0x30c>
4000e580:	e5900000 	ldr	r0, [r0]
4000e584:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e588:	ea000003 	b	4000e59c <_tx_thread_create+0x128>
4000e58c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000e780 <_tx_thread_create+0x30c>
4000e590:	e5804000 	str	r4, [r0]
4000e594:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e598:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e59c:	e59f01e0 	ldr	r0, [pc, #480]	; 4000e784 <_tx_thread_create+0x310>
4000e5a0:	e5900000 	ldr	r0, [r0]
4000e5a4:	e2800001 	add	r0, r0, #1
4000e5a8:	e59f11d4 	ldr	r1, [pc, #468]	; 4000e784 <_tx_thread_create+0x310>
4000e5ac:	e5810000 	str	r0, [r1]
4000e5b0:	e59f01d0 	ldr	r0, [pc, #464]	; 4000e788 <_tx_thread_create+0x314>
4000e5b4:	e5900000 	ldr	r0, [r0]
4000e5b8:	e2800001 	add	r0, r0, #1
4000e5bc:	e59f11c4 	ldr	r1, [pc, #452]	; 4000e788 <_tx_thread_create+0x314>
4000e5c0:	e5810000 	str	r0, [r1]
4000e5c4:	e1a03006 	mov	r3, r6
4000e5c8:	e1a02005 	mov	r2, r5
4000e5cc:	e1a01004 	mov	r1, r4
4000e5d0:	e3a00001 	mov	r0, #1
4000e5d4:	e58d7000 	str	r7, [sp]
4000e5d8:	eb000667 	bl	4000ff7c <_tx_trace_object_register>
4000e5dc:	e59f11a8 	ldr	r1, [pc, #424]	; 4000e78c <_tx_thread_create+0x318>
4000e5e0:	e5910000 	ldr	r0, [r1]
4000e5e4:	e3500000 	cmp	r0, #0
4000e5e8:	0a000030 	beq	4000e6b0 <_tx_thread_create+0x23c>
4000e5ec:	e59f119c 	ldr	r1, [pc, #412]	; 4000e790 <_tx_thread_create+0x31c>
4000e5f0:	e5911000 	ldr	r1, [r1]
4000e5f4:	e2811001 	add	r1, r1, #1
4000e5f8:	e59f2190 	ldr	r2, [pc, #400]	; 4000e790 <_tx_thread_create+0x31c>
4000e5fc:	e5821000 	str	r1, [r2]
4000e600:	e580100c 	str	r1, [r0, #12]
4000e604:	e59f1188 	ldr	r1, [pc, #392]	; 4000e794 <_tx_thread_create+0x320>
4000e608:	e5911000 	ldr	r1, [r1]
4000e60c:	e3510000 	cmp	r1, #0
4000e610:	1a000006 	bne	4000e630 <_tx_thread_create+0x1bc>
4000e614:	e59f117c 	ldr	r1, [pc, #380]	; 4000e798 <_tx_thread_create+0x324>
4000e618:	e5911000 	ldr	r1, [r1]
4000e61c:	e5801000 	str	r1, [r0]
4000e620:	e5901000 	ldr	r1, [r0]
4000e624:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e628:	e5801004 	str	r1, [r0, #4]
4000e62c:	ea00000d 	b	4000e668 <_tx_thread_create+0x1f4>
4000e630:	e59f115c 	ldr	r1, [pc, #348]	; 4000e794 <_tx_thread_create+0x320>
4000e634:	e5911000 	ldr	r1, [r1]
4000e638:	e59f215c 	ldr	r2, [pc, #348]	; 4000e79c <_tx_thread_create+0x328>
4000e63c:	e1510002 	cmp	r1, r2
4000e640:	2a000004 	bcs	4000e658 <_tx_thread_create+0x1e4>
4000e644:	e3e01000 	mvn	r1, #0
4000e648:	e5801000 	str	r1, [r0]
4000e64c:	e3a01000 	mov	r1, #0
4000e650:	e5801004 	str	r1, [r0, #4]
4000e654:	ea000003 	b	4000e668 <_tx_thread_create+0x1f4>
4000e658:	e59f113c 	ldr	r1, [pc, #316]	; 4000e79c <_tx_thread_create+0x328>
4000e65c:	e5801000 	str	r1, [r0]
4000e660:	e3a01000 	mov	r1, #0
4000e664:	e5801004 	str	r1, [r0, #4]
4000e668:	e3a01064 	mov	r1, #100	; 0x64
4000e66c:	e5801008 	str	r1, [r0, #8]
4000e670:	e5804010 	str	r4, [r0, #16]
4000e674:	e5808014 	str	r8, [r0, #20]
4000e678:	e5806018 	str	r6, [r0, #24]
4000e67c:	e580701c 	str	r7, [r0, #28]
4000e680:	e2800020 	add	r0, r0, #32
4000e684:	e59f1114 	ldr	r1, [pc, #276]	; 4000e7a0 <_tx_thread_create+0x32c>
4000e688:	e5911000 	ldr	r1, [r1]
4000e68c:	e1500001 	cmp	r0, r1
4000e690:	3a000001 	bcc	4000e69c <_tx_thread_create+0x228>
4000e694:	e59f1108 	ldr	r1, [pc, #264]	; 4000e7a4 <_tx_thread_create+0x330>
4000e698:	e5910000 	ldr	r0, [r1]
4000e69c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000e78c <_tx_thread_create+0x318>
4000e6a0:	e5810000 	str	r0, [r1]
4000e6a4:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e7a8 <_tx_thread_create+0x334>
4000e6a8:	e5911000 	ldr	r1, [r1]
4000e6ac:	e5810020 	str	r0, [r1, #32]
4000e6b0:	e59d0010 	ldr	r0, [sp, #16]
4000e6b4:	e121f000 	msr	CPSR_c, r0
4000e6b8:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e6bc:	e3500000 	cmp	r0, #0
4000e6c0:	0a00001c 	beq	4000e738 <_tx_thread_create+0x2c4>
4000e6c4:	e59f00c8 	ldr	r0, [pc, #200]	; 4000e794 <_tx_thread_create+0x320>
4000e6c8:	e5900000 	ldr	r0, [r0]
4000e6cc:	e59f10c8 	ldr	r1, [pc, #200]	; 4000e79c <_tx_thread_create+0x328>
4000e6d0:	e1500001 	cmp	r0, r1
4000e6d4:	3a00000c 	bcc	4000e70c <_tx_thread_create+0x298>
4000e6d8:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e7ac <_tx_thread_create+0x338>
4000e6dc:	e5900000 	ldr	r0, [r0]
4000e6e0:	e58d0008 	str	r0, [sp, #8]
4000e6e4:	e59d0008 	ldr	r0, [sp, #8]
4000e6e8:	e3500000 	cmp	r0, #0
4000e6ec:	0a000008 	beq	4000e714 <_tx_thread_create+0x2a0>
4000e6f0:	e59d0008 	ldr	r0, [sp, #8]
4000e6f4:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e6f8:	e58d0004 	str	r0, [sp, #4]
4000e6fc:	e59d0008 	ldr	r0, [sp, #8]
4000e700:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e704:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e708:	ea000001 	b	4000e714 <_tx_thread_create+0x2a0>
4000e70c:	e3a00000 	mov	r0, #0
4000e710:	e58d0008 	str	r0, [sp, #8]
4000e714:	e1a00004 	mov	r0, r4
4000e718:	eb0002c1 	bl	4000f224 <_tx_thread_system_resume>
4000e71c:	e59d0008 	ldr	r0, [sp, #8]
4000e720:	e3500000 	cmp	r0, #0
4000e724:	0a00000f 	beq	4000e768 <_tx_thread_create+0x2f4>
4000e728:	e59d0008 	ldr	r0, [sp, #8]
4000e72c:	e59d1004 	ldr	r1, [sp, #4]
4000e730:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e734:	ea00000b 	b	4000e768 <_tx_thread_create+0x2f4>
4000e738:	e10f0000 	mrs	r0, CPSR
4000e73c:	e58d0010 	str	r0, [sp, #16]
4000e740:	e59d0010 	ldr	r0, [sp, #16]
4000e744:	e380b080 	orr	fp, r0, #128	; 0x80
4000e748:	e121f00b 	msr	CPSR_c, fp
4000e74c:	e59f0034 	ldr	r0, [pc, #52]	; 4000e788 <_tx_thread_create+0x314>
4000e750:	e5900000 	ldr	r0, [r0]
4000e754:	e2400001 	sub	r0, r0, #1
4000e758:	e59f1028 	ldr	r1, [pc, #40]	; 4000e788 <_tx_thread_create+0x314>
4000e75c:	e5810000 	str	r0, [r1]
4000e760:	e59d0010 	ldr	r0, [sp, #16]
4000e764:	e121f000 	msr	CPSR_c, r0
4000e768:	e3a00000 	mov	r0, #0
4000e76c:	e28dd024 	add	sp, sp, #36	; 0x24
4000e770:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e774:	4000f754 	.word	0x4000f754
4000e778:	4000efb8 	.word	0x4000efb8
4000e77c:	54485244 	.word	0x54485244
4000e780:	40030e3c 	.word	0x40030e3c
4000e784:	40030e40 	.word	0x40030e40
4000e788:	40030e50 	.word	0x40030e50
4000e78c:	40030ea0 	.word	0x40030ea0
4000e790:	40030ea4 	.word	0x40030ea4
4000e794:	40030e2c 	.word	0x40030e2c
4000e798:	40030e34 	.word	0x40030e34
4000e79c:	f0f0f0f0 	.word	0xf0f0f0f0
4000e7a0:	40030e9c 	.word	0x40030e9c
4000e7a4:	40030e98 	.word	0x40030e98
4000e7a8:	40030e8c 	.word	0x40030e8c
4000e7ac:	40030e38 	.word	0x40030e38

4000e7b0 <_tx_thread_info_get>:
4000e7b0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e7b4:	e1a0c000 	mov	ip, r0
4000e7b8:	e28d7028 	add	r7, sp, #40	; 0x28
4000e7bc:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000e7c0:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000e7c4:	e10f8000 	mrs	r8, CPSR
4000e7c8:	e3889080 	orr	r9, r8, #128	; 0x80
4000e7cc:	e121f009 	msr	CPSR_c, r9
4000e7d0:	e59fa160 	ldr	sl, [pc, #352]	; 4000e938 <_tx_thread_info_get+0x188>
4000e7d4:	e59a0000 	ldr	r0, [sl]
4000e7d8:	e3500000 	cmp	r0, #0
4000e7dc:	0a000032 	beq	4000e8ac <_tx_thread_info_get+0xfc>
4000e7e0:	e59fa154 	ldr	sl, [pc, #340]	; 4000e93c <_tx_thread_info_get+0x18c>
4000e7e4:	e59aa000 	ldr	sl, [sl]
4000e7e8:	e28aa001 	add	sl, sl, #1
4000e7ec:	e59fb148 	ldr	fp, [pc, #328]	; 4000e93c <_tx_thread_info_get+0x18c>
4000e7f0:	e58ba000 	str	sl, [fp]
4000e7f4:	e580a00c 	str	sl, [r0, #12]
4000e7f8:	e59fa140 	ldr	sl, [pc, #320]	; 4000e940 <_tx_thread_info_get+0x190>
4000e7fc:	e59aa000 	ldr	sl, [sl]
4000e800:	e35a0000 	cmp	sl, #0
4000e804:	1a000006 	bne	4000e824 <_tx_thread_info_get+0x74>
4000e808:	e59fa134 	ldr	sl, [pc, #308]	; 4000e944 <_tx_thread_info_get+0x194>
4000e80c:	e59aa000 	ldr	sl, [sl]
4000e810:	e580a000 	str	sl, [r0]
4000e814:	e590a000 	ldr	sl, [r0]
4000e818:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000e81c:	e580a004 	str	sl, [r0, #4]
4000e820:	ea00000d 	b	4000e85c <_tx_thread_info_get+0xac>
4000e824:	e59fa114 	ldr	sl, [pc, #276]	; 4000e940 <_tx_thread_info_get+0x190>
4000e828:	e59aa000 	ldr	sl, [sl]
4000e82c:	e59fb114 	ldr	fp, [pc, #276]	; 4000e948 <_tx_thread_info_get+0x198>
4000e830:	e15a000b 	cmp	sl, fp
4000e834:	2a000004 	bcs	4000e84c <_tx_thread_info_get+0x9c>
4000e838:	e3e0a000 	mvn	sl, #0
4000e83c:	e580a000 	str	sl, [r0]
4000e840:	e3a0a000 	mov	sl, #0
4000e844:	e580a004 	str	sl, [r0, #4]
4000e848:	ea000003 	b	4000e85c <_tx_thread_info_get+0xac>
4000e84c:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000e948 <_tx_thread_info_get+0x198>
4000e850:	e580a000 	str	sl, [r0]
4000e854:	e3a0a000 	mov	sl, #0
4000e858:	e580a004 	str	sl, [r0, #4]
4000e85c:	e3a0a068 	mov	sl, #104	; 0x68
4000e860:	e580a008 	str	sl, [r0, #8]
4000e864:	e580c010 	str	ip, [r0, #16]
4000e868:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000e86c:	e580a014 	str	sl, [r0, #20]
4000e870:	e3a0a000 	mov	sl, #0
4000e874:	e580a018 	str	sl, [r0, #24]
4000e878:	e580a01c 	str	sl, [r0, #28]
4000e87c:	e2800020 	add	r0, r0, #32
4000e880:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000e94c <_tx_thread_info_get+0x19c>
4000e884:	e59aa000 	ldr	sl, [sl]
4000e888:	e150000a 	cmp	r0, sl
4000e88c:	3a000001 	bcc	4000e898 <_tx_thread_info_get+0xe8>
4000e890:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000e950 <_tx_thread_info_get+0x1a0>
4000e894:	e59a0000 	ldr	r0, [sl]
4000e898:	e59fa098 	ldr	sl, [pc, #152]	; 4000e938 <_tx_thread_info_get+0x188>
4000e89c:	e58a0000 	str	r0, [sl]
4000e8a0:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000e954 <_tx_thread_info_get+0x1a4>
4000e8a4:	e59aa000 	ldr	sl, [sl]
4000e8a8:	e58a0020 	str	r0, [sl, #32]
4000e8ac:	e3510000 	cmp	r1, #0
4000e8b0:	0a000001 	beq	4000e8bc <_tx_thread_info_get+0x10c>
4000e8b4:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000e8b8:	e5810000 	str	r0, [r1]
4000e8bc:	e3520000 	cmp	r2, #0
4000e8c0:	0a000001 	beq	4000e8cc <_tx_thread_info_get+0x11c>
4000e8c4:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000e8c8:	e5820000 	str	r0, [r2]
4000e8cc:	e3530000 	cmp	r3, #0
4000e8d0:	0a000001 	beq	4000e8dc <_tx_thread_info_get+0x12c>
4000e8d4:	e59c0004 	ldr	r0, [ip, #4]
4000e8d8:	e5830000 	str	r0, [r3]
4000e8dc:	e35e0000 	cmp	lr, #0
4000e8e0:	0a000001 	beq	4000e8ec <_tx_thread_info_get+0x13c>
4000e8e4:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000e8e8:	e58e0000 	str	r0, [lr]
4000e8ec:	e3540000 	cmp	r4, #0
4000e8f0:	0a000001 	beq	4000e8fc <_tx_thread_info_get+0x14c>
4000e8f4:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000e8f8:	e5840000 	str	r0, [r4]
4000e8fc:	e3550000 	cmp	r5, #0
4000e900:	0a000001 	beq	4000e90c <_tx_thread_info_get+0x15c>
4000e904:	e59c0018 	ldr	r0, [ip, #24]
4000e908:	e5850000 	str	r0, [r5]
4000e90c:	e3560000 	cmp	r6, #0
4000e910:	0a000001 	beq	4000e91c <_tx_thread_info_get+0x16c>
4000e914:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000e918:	e5860000 	str	r0, [r6]
4000e91c:	e3570000 	cmp	r7, #0
4000e920:	0a000001 	beq	4000e92c <_tx_thread_info_get+0x17c>
4000e924:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000e928:	e5870000 	str	r0, [r7]
4000e92c:	e121f008 	msr	CPSR_c, r8
4000e930:	e3a00000 	mov	r0, #0
4000e934:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e938:	40030ea0 	.word	0x40030ea0
4000e93c:	40030ea4 	.word	0x40030ea4
4000e940:	40030e2c 	.word	0x40030e2c
4000e944:	40030e34 	.word	0x40030e34
4000e948:	f0f0f0f0 	.word	0xf0f0f0f0
4000e94c:	40030e9c 	.word	0x40030e9c
4000e950:	40030e98 	.word	0x40030e98
4000e954:	40030e8c 	.word	0x40030e8c

4000e958 <_tx_thread_priority_change>:
4000e958:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000e95c:	e1a04000 	mov	r4, r0
4000e960:	e1a05001 	mov	r5, r1
4000e964:	e1a06002 	mov	r6, r2
4000e968:	e10f7000 	mrs	r7, CPSR
4000e96c:	e3878080 	orr	r8, r7, #128	; 0x80
4000e970:	e121f008 	msr	CPSR_c, r8
4000e974:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000e978:	e5860000 	str	r0, [r6]
4000e97c:	e59f1150 	ldr	r1, [pc, #336]	; 4000ead4 <_tx_thread_priority_change+0x17c>
4000e980:	e5910000 	ldr	r0, [r1]
4000e984:	e3500000 	cmp	r0, #0
4000e988:	0a000032 	beq	4000ea58 <_tx_thread_priority_change+0x100>
4000e98c:	e59f1144 	ldr	r1, [pc, #324]	; 4000ead8 <_tx_thread_priority_change+0x180>
4000e990:	e5911000 	ldr	r1, [r1]
4000e994:	e2811001 	add	r1, r1, #1
4000e998:	e59f2138 	ldr	r2, [pc, #312]	; 4000ead8 <_tx_thread_priority_change+0x180>
4000e99c:	e5821000 	str	r1, [r2]
4000e9a0:	e580100c 	str	r1, [r0, #12]
4000e9a4:	e59f1130 	ldr	r1, [pc, #304]	; 4000eadc <_tx_thread_priority_change+0x184>
4000e9a8:	e5911000 	ldr	r1, [r1]
4000e9ac:	e3510000 	cmp	r1, #0
4000e9b0:	1a000006 	bne	4000e9d0 <_tx_thread_priority_change+0x78>
4000e9b4:	e59f1124 	ldr	r1, [pc, #292]	; 4000eae0 <_tx_thread_priority_change+0x188>
4000e9b8:	e5911000 	ldr	r1, [r1]
4000e9bc:	e5801000 	str	r1, [r0]
4000e9c0:	e5901000 	ldr	r1, [r0]
4000e9c4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e9c8:	e5801004 	str	r1, [r0, #4]
4000e9cc:	ea00000d 	b	4000ea08 <_tx_thread_priority_change+0xb0>
4000e9d0:	e59f1104 	ldr	r1, [pc, #260]	; 4000eadc <_tx_thread_priority_change+0x184>
4000e9d4:	e5911000 	ldr	r1, [r1]
4000e9d8:	e59f2104 	ldr	r2, [pc, #260]	; 4000eae4 <_tx_thread_priority_change+0x18c>
4000e9dc:	e1510002 	cmp	r1, r2
4000e9e0:	2a000004 	bcs	4000e9f8 <_tx_thread_priority_change+0xa0>
4000e9e4:	e3e01000 	mvn	r1, #0
4000e9e8:	e5801000 	str	r1, [r0]
4000e9ec:	e3a01000 	mov	r1, #0
4000e9f0:	e5801004 	str	r1, [r0, #4]
4000e9f4:	ea000003 	b	4000ea08 <_tx_thread_priority_change+0xb0>
4000e9f8:	e59f10e4 	ldr	r1, [pc, #228]	; 4000eae4 <_tx_thread_priority_change+0x18c>
4000e9fc:	e5801000 	str	r1, [r0]
4000ea00:	e3a01000 	mov	r1, #0
4000ea04:	e5801004 	str	r1, [r0, #4]
4000ea08:	e3a0106c 	mov	r1, #108	; 0x6c
4000ea0c:	e5801008 	str	r1, [r0, #8]
4000ea10:	e5804010 	str	r4, [r0, #16]
4000ea14:	e5805014 	str	r5, [r0, #20]
4000ea18:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ea1c:	e5801018 	str	r1, [r0, #24]
4000ea20:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ea24:	e580101c 	str	r1, [r0, #28]
4000ea28:	e2800020 	add	r0, r0, #32
4000ea2c:	e59f10b4 	ldr	r1, [pc, #180]	; 4000eae8 <_tx_thread_priority_change+0x190>
4000ea30:	e5911000 	ldr	r1, [r1]
4000ea34:	e1500001 	cmp	r0, r1
4000ea38:	3a000001 	bcc	4000ea44 <_tx_thread_priority_change+0xec>
4000ea3c:	e59f10a8 	ldr	r1, [pc, #168]	; 4000eaec <_tx_thread_priority_change+0x194>
4000ea40:	e5910000 	ldr	r0, [r1]
4000ea44:	e59f1088 	ldr	r1, [pc, #136]	; 4000ead4 <_tx_thread_priority_change+0x17c>
4000ea48:	e5810000 	str	r0, [r1]
4000ea4c:	e59f109c 	ldr	r1, [pc, #156]	; 4000eaf0 <_tx_thread_priority_change+0x198>
4000ea50:	e5911000 	ldr	r1, [r1]
4000ea54:	e5810020 	str	r0, [r1, #32]
4000ea58:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ea5c:	e3500000 	cmp	r0, #0
4000ea60:	0a000005 	beq	4000ea7c <_tx_thread_priority_change+0x124>
4000ea64:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ea68:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ea6c:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ea70:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ea74:	e121f007 	msr	CPSR_c, r7
4000ea78:	ea000013 	b	4000eacc <_tx_thread_priority_change+0x174>
4000ea7c:	e59f0070 	ldr	r0, [pc, #112]	; 4000eaf4 <_tx_thread_priority_change+0x19c>
4000ea80:	e5900000 	ldr	r0, [r0]
4000ea84:	e2800002 	add	r0, r0, #2
4000ea88:	e59f1064 	ldr	r1, [pc, #100]	; 4000eaf4 <_tx_thread_priority_change+0x19c>
4000ea8c:	e5810000 	str	r0, [r1]
4000ea90:	e3a00003 	mov	r0, #3
4000ea94:	e5840030 	str	r0, [r4, #48]	; 0x30
4000ea98:	e3a00001 	mov	r0, #1
4000ea9c:	e5840038 	str	r0, [r4, #56]	; 0x38
4000eaa0:	e3a00000 	mov	r0, #0
4000eaa4:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000eaa8:	e121f007 	msr	CPSR_c, r7
4000eaac:	e1a00004 	mov	r0, r4
4000eab0:	ebffe834 	bl	40008b88 <_tx_thread_system_suspend>
4000eab4:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000eab8:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000eabc:	e5845094 	str	r5, [r4, #148]	; 0x94
4000eac0:	e5845098 	str	r5, [r4, #152]	; 0x98
4000eac4:	e1a00004 	mov	r0, r4
4000eac8:	eb0001d5 	bl	4000f224 <_tx_thread_system_resume>
4000eacc:	e3a00000 	mov	r0, #0
4000ead0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ead4:	40030ea0 	.word	0x40030ea0
4000ead8:	40030ea4 	.word	0x40030ea4
4000eadc:	40030e2c 	.word	0x40030e2c
4000eae0:	40030e34 	.word	0x40030e34
4000eae4:	f0f0f0f0 	.word	0xf0f0f0f0
4000eae8:	40030e9c 	.word	0x40030e9c
4000eaec:	40030e98 	.word	0x40030e98
4000eaf0:	40030e8c 	.word	0x40030e8c
4000eaf4:	40030e50 	.word	0x40030e50

4000eaf8 <_tx_thread_relinquish>:
4000eaf8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000eafc:	e59f02b0 	ldr	r0, [pc, #688]	; 4000edb4 <_tx_thread_relinquish+0x2bc>
4000eb00:	e5900000 	ldr	r0, [r0]
4000eb04:	e58d0000 	str	r0, [sp]
4000eb08:	e59d0000 	ldr	r0, [sp]
4000eb0c:	e5900008 	ldr	r0, [r0, #8]
4000eb10:	e59d1000 	ldr	r1, [sp]
4000eb14:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000eb18:	e1500001 	cmp	r0, r1
4000eb1c:	2a000003 	bcs	4000eb30 <_tx_thread_relinquish+0x38>
4000eb20:	e59d0000 	ldr	r0, [sp]
4000eb24:	e5900008 	ldr	r0, [r0, #8]
4000eb28:	e59d1000 	ldr	r1, [sp]
4000eb2c:	e5810040 	str	r0, [r1, #64]	; 0x40
4000eb30:	e59d0000 	ldr	r0, [sp]
4000eb34:	e590000c 	ldr	r0, [r0, #12]
4000eb38:	e5900000 	ldr	r0, [r0]
4000eb3c:	e59f1274 	ldr	r1, [pc, #628]	; 4000edb8 <_tx_thread_relinquish+0x2c0>
4000eb40:	e1500001 	cmp	r0, r1
4000eb44:	1a00000a 	bne	4000eb74 <_tx_thread_relinquish+0x7c>
4000eb48:	e59d0000 	ldr	r0, [sp]
4000eb4c:	e5900010 	ldr	r0, [r0, #16]
4000eb50:	e5900001 	ldr	r0, [r0, #1]
4000eb54:	e1500001 	cmp	r0, r1
4000eb58:	1a000005 	bne	4000eb74 <_tx_thread_relinquish+0x7c>
4000eb5c:	e59d0000 	ldr	r0, [sp]
4000eb60:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eb64:	e59d1000 	ldr	r1, [sp]
4000eb68:	e591100c 	ldr	r1, [r1, #12]
4000eb6c:	e1500001 	cmp	r0, r1
4000eb70:	2a000001 	bcs	4000eb7c <_tx_thread_relinquish+0x84>
4000eb74:	e59d0000 	ldr	r0, [sp]
4000eb78:	eb00016a 	bl	4000f128 <_tx_thread_stack_error_handler>
4000eb7c:	e59d0000 	ldr	r0, [sp]
4000eb80:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000eb84:	e5100004 	ldr	r0, [r0, #-4]
4000eb88:	e59f1228 	ldr	r1, [pc, #552]	; 4000edb8 <_tx_thread_relinquish+0x2c0>
4000eb8c:	e1500001 	cmp	r0, r1
4000eb90:	0a000001 	beq	4000eb9c <_tx_thread_relinquish+0xa4>
4000eb94:	e59d0000 	ldr	r0, [sp]
4000eb98:	eb00012d 	bl	4000f054 <_tx_thread_stack_analyze>
4000eb9c:	e10f4000 	mrs	r4, CPSR
4000eba0:	e3845080 	orr	r5, r4, #128	; 0x80
4000eba4:	e121f005 	msr	CPSR_c, r5
4000eba8:	e59f120c 	ldr	r1, [pc, #524]	; 4000edbc <_tx_thread_relinquish+0x2c4>
4000ebac:	e5910000 	ldr	r0, [r1]
4000ebb0:	e3500000 	cmp	r0, #0
4000ebb4:	0a000031 	beq	4000ec80 <_tx_thread_relinquish+0x188>
4000ebb8:	e59f1200 	ldr	r1, [pc, #512]	; 4000edc0 <_tx_thread_relinquish+0x2c8>
4000ebbc:	e5911000 	ldr	r1, [r1]
4000ebc0:	e2811001 	add	r1, r1, #1
4000ebc4:	e59f21f4 	ldr	r2, [pc, #500]	; 4000edc0 <_tx_thread_relinquish+0x2c8>
4000ebc8:	e5821000 	str	r1, [r2]
4000ebcc:	e580100c 	str	r1, [r0, #12]
4000ebd0:	e59f11ec 	ldr	r1, [pc, #492]	; 4000edc4 <_tx_thread_relinquish+0x2cc>
4000ebd4:	e5911000 	ldr	r1, [r1]
4000ebd8:	e3510000 	cmp	r1, #0
4000ebdc:	1a000006 	bne	4000ebfc <_tx_thread_relinquish+0x104>
4000ebe0:	e59f11cc 	ldr	r1, [pc, #460]	; 4000edb4 <_tx_thread_relinquish+0x2bc>
4000ebe4:	e5911000 	ldr	r1, [r1]
4000ebe8:	e5801000 	str	r1, [r0]
4000ebec:	e5901000 	ldr	r1, [r0]
4000ebf0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ebf4:	e5801004 	str	r1, [r0, #4]
4000ebf8:	ea00000d 	b	4000ec34 <_tx_thread_relinquish+0x13c>
4000ebfc:	e59f11c0 	ldr	r1, [pc, #448]	; 4000edc4 <_tx_thread_relinquish+0x2cc>
4000ec00:	e5911000 	ldr	r1, [r1]
4000ec04:	e59f21bc 	ldr	r2, [pc, #444]	; 4000edc8 <_tx_thread_relinquish+0x2d0>
4000ec08:	e1510002 	cmp	r1, r2
4000ec0c:	2a000004 	bcs	4000ec24 <_tx_thread_relinquish+0x12c>
4000ec10:	e3e01000 	mvn	r1, #0
4000ec14:	e5801000 	str	r1, [r0]
4000ec18:	e3a01000 	mov	r1, #0
4000ec1c:	e5801004 	str	r1, [r0, #4]
4000ec20:	ea000003 	b	4000ec34 <_tx_thread_relinquish+0x13c>
4000ec24:	e59f119c 	ldr	r1, [pc, #412]	; 4000edc8 <_tx_thread_relinquish+0x2d0>
4000ec28:	e5801000 	str	r1, [r0]
4000ec2c:	e3a01000 	mov	r1, #0
4000ec30:	e5801004 	str	r1, [r0, #4]
4000ec34:	e3a0106d 	mov	r1, #109	; 0x6d
4000ec38:	e5801008 	str	r1, [r0, #8]
4000ec3c:	e580d010 	str	sp, [r0, #16]
4000ec40:	e3a01000 	mov	r1, #0
4000ec44:	e5801014 	str	r1, [r0, #20]
4000ec48:	e5801018 	str	r1, [r0, #24]
4000ec4c:	e580101c 	str	r1, [r0, #28]
4000ec50:	e2800020 	add	r0, r0, #32
4000ec54:	e59f1170 	ldr	r1, [pc, #368]	; 4000edcc <_tx_thread_relinquish+0x2d4>
4000ec58:	e5911000 	ldr	r1, [r1]
4000ec5c:	e1500001 	cmp	r0, r1
4000ec60:	3a000001 	bcc	4000ec6c <_tx_thread_relinquish+0x174>
4000ec64:	e59f1164 	ldr	r1, [pc, #356]	; 4000edd0 <_tx_thread_relinquish+0x2d8>
4000ec68:	e5910000 	ldr	r0, [r1]
4000ec6c:	e59f1148 	ldr	r1, [pc, #328]	; 4000edbc <_tx_thread_relinquish+0x2c4>
4000ec70:	e5810000 	str	r0, [r1]
4000ec74:	e59f1158 	ldr	r1, [pc, #344]	; 4000edd4 <_tx_thread_relinquish+0x2dc>
4000ec78:	e5911000 	ldr	r1, [r1]
4000ec7c:	e5810020 	str	r0, [r1, #32]
4000ec80:	e59d0000 	ldr	r0, [sp]
4000ec84:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ec88:	e59d0000 	ldr	r0, [sp]
4000ec8c:	e5900020 	ldr	r0, [r0, #32]
4000ec90:	e59d1000 	ldr	r1, [sp]
4000ec94:	e1500001 	cmp	r0, r1
4000ec98:	0a000013 	beq	4000ecec <_tx_thread_relinquish+0x1f4>
4000ec9c:	e59d0000 	ldr	r0, [sp]
4000eca0:	e5900020 	ldr	r0, [r0, #32]
4000eca4:	e59f112c 	ldr	r1, [pc, #300]	; 4000edd8 <_tx_thread_relinquish+0x2e0>
4000eca8:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ecac:	e59d0000 	ldr	r0, [sp]
4000ecb0:	e5900020 	ldr	r0, [r0, #32]
4000ecb4:	e59f1120 	ldr	r1, [pc, #288]	; 4000eddc <_tx_thread_relinquish+0x2e4>
4000ecb8:	e5810000 	str	r0, [r1]
4000ecbc:	e59f011c 	ldr	r0, [pc, #284]	; 4000ede0 <_tx_thread_relinquish+0x2e8>
4000ecc0:	e5900000 	ldr	r0, [r0]
4000ecc4:	e3500000 	cmp	r0, #0
4000ecc8:	0a000007 	beq	4000ecec <_tx_thread_relinquish+0x1f4>
4000eccc:	e59f010c 	ldr	r0, [pc, #268]	; 4000ede0 <_tx_thread_relinquish+0x2e8>
4000ecd0:	e5900000 	ldr	r0, [r0]
4000ecd4:	e59d1000 	ldr	r1, [sp]
4000ecd8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ecdc:	e3a02001 	mov	r2, #1
4000ece0:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ece4:	e59f10f4 	ldr	r1, [pc, #244]	; 4000ede0 <_tx_thread_relinquish+0x2e8>
4000ece8:	e5810000 	str	r0, [r1]
4000ecec:	e59f00f0 	ldr	r0, [pc, #240]	; 4000ede4 <_tx_thread_relinquish+0x2ec>
4000ecf0:	e5900000 	ldr	r0, [r0]
4000ecf4:	e1500006 	cmp	r0, r6
4000ecf8:	2a000005 	bcs	4000ed14 <_tx_thread_relinquish+0x21c>
4000ecfc:	e59f00d4 	ldr	r0, [pc, #212]	; 4000edd8 <_tx_thread_relinquish+0x2e0>
4000ed00:	e59f10dc 	ldr	r1, [pc, #220]	; 4000ede4 <_tx_thread_relinquish+0x2ec>
4000ed04:	e5911000 	ldr	r1, [r1]
4000ed08:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000ed0c:	e59f10c8 	ldr	r1, [pc, #200]	; 4000eddc <_tx_thread_relinquish+0x2e4>
4000ed10:	e5810000 	str	r0, [r1]
4000ed14:	e121f004 	msr	CPSR_c, r4
4000ed18:	e59f00bc 	ldr	r0, [pc, #188]	; 4000eddc <_tx_thread_relinquish+0x2e4>
4000ed1c:	e5900000 	ldr	r0, [r0]
4000ed20:	e59d1000 	ldr	r1, [sp]
4000ed24:	e1500001 	cmp	r0, r1
4000ed28:	0a000020 	beq	4000edb0 <_tx_thread_relinquish+0x2b8>
4000ed2c:	e59f00a8 	ldr	r0, [pc, #168]	; 4000eddc <_tx_thread_relinquish+0x2e4>
4000ed30:	e5900000 	ldr	r0, [r0]
4000ed34:	e58d0000 	str	r0, [sp]
4000ed38:	e59d0000 	ldr	r0, [sp]
4000ed3c:	e5900008 	ldr	r0, [r0, #8]
4000ed40:	e59d1000 	ldr	r1, [sp]
4000ed44:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000ed48:	e1500001 	cmp	r0, r1
4000ed4c:	2a000003 	bcs	4000ed60 <_tx_thread_relinquish+0x268>
4000ed50:	e59d0000 	ldr	r0, [sp]
4000ed54:	e5900008 	ldr	r0, [r0, #8]
4000ed58:	e59d1000 	ldr	r1, [sp]
4000ed5c:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ed60:	e59d0000 	ldr	r0, [sp]
4000ed64:	e590000c 	ldr	r0, [r0, #12]
4000ed68:	e5900000 	ldr	r0, [r0]
4000ed6c:	e59f1044 	ldr	r1, [pc, #68]	; 4000edb8 <_tx_thread_relinquish+0x2c0>
4000ed70:	e1500001 	cmp	r0, r1
4000ed74:	1a00000a 	bne	4000eda4 <_tx_thread_relinquish+0x2ac>
4000ed78:	e59d0000 	ldr	r0, [sp]
4000ed7c:	e5900010 	ldr	r0, [r0, #16]
4000ed80:	e5900001 	ldr	r0, [r0, #1]
4000ed84:	e1500001 	cmp	r0, r1
4000ed88:	1a000005 	bne	4000eda4 <_tx_thread_relinquish+0x2ac>
4000ed8c:	e59d0000 	ldr	r0, [sp]
4000ed90:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ed94:	e59d1000 	ldr	r1, [sp]
4000ed98:	e591100c 	ldr	r1, [r1, #12]
4000ed9c:	e1500001 	cmp	r0, r1
4000eda0:	2a000001 	bcs	4000edac <_tx_thread_relinquish+0x2b4>
4000eda4:	e59d0000 	ldr	r0, [sp]
4000eda8:	eb0000de 	bl	4000f128 <_tx_thread_stack_error_handler>
4000edac:	ebffef86 	bl	4000abcc <_tx_thread_system_return>
4000edb0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000edb4:	40030e34 	.word	0x40030e34
4000edb8:	efefefef 	.word	0xefefefef
4000edbc:	40030ea0 	.word	0x40030ea0
4000edc0:	40030ea4 	.word	0x40030ea4
4000edc4:	40030e2c 	.word	0x40030e2c
4000edc8:	f0f0f0f0 	.word	0xf0f0f0f0
4000edcc:	40030e9c 	.word	0x40030e9c
4000edd0:	40030e98 	.word	0x40030e98
4000edd4:	40030e8c 	.word	0x40030e8c
4000edd8:	40032874 	.word	0x40032874
4000eddc:	40030e38 	.word	0x40030e38
4000ede0:	40030e48 	.word	0x40030e48
4000ede4:	40030e4c 	.word	0x40030e4c

4000ede8 <_tx_thread_resume>:
4000ede8:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000edec:	e1a04000 	mov	r4, r0
4000edf0:	e3a00000 	mov	r0, #0
4000edf4:	e58d0000 	str	r0, [sp]
4000edf8:	e10f5000 	mrs	r5, CPSR
4000edfc:	e3856080 	orr	r6, r5, #128	; 0x80
4000ee00:	e121f006 	msr	CPSR_c, r6
4000ee04:	e59f1184 	ldr	r1, [pc, #388]	; 4000ef90 <_tx_thread_resume+0x1a8>
4000ee08:	e5910000 	ldr	r0, [r1]
4000ee0c:	e3500000 	cmp	r0, #0
4000ee10:	0a000032 	beq	4000eee0 <_tx_thread_resume+0xf8>
4000ee14:	e59f1178 	ldr	r1, [pc, #376]	; 4000ef94 <_tx_thread_resume+0x1ac>
4000ee18:	e5911000 	ldr	r1, [r1]
4000ee1c:	e2811001 	add	r1, r1, #1
4000ee20:	e59f216c 	ldr	r2, [pc, #364]	; 4000ef94 <_tx_thread_resume+0x1ac>
4000ee24:	e5821000 	str	r1, [r2]
4000ee28:	e580100c 	str	r1, [r0, #12]
4000ee2c:	e59f1164 	ldr	r1, [pc, #356]	; 4000ef98 <_tx_thread_resume+0x1b0>
4000ee30:	e5911000 	ldr	r1, [r1]
4000ee34:	e3510000 	cmp	r1, #0
4000ee38:	1a000006 	bne	4000ee58 <_tx_thread_resume+0x70>
4000ee3c:	e59f1158 	ldr	r1, [pc, #344]	; 4000ef9c <_tx_thread_resume+0x1b4>
4000ee40:	e5911000 	ldr	r1, [r1]
4000ee44:	e5801000 	str	r1, [r0]
4000ee48:	e5901000 	ldr	r1, [r0]
4000ee4c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ee50:	e5801004 	str	r1, [r0, #4]
4000ee54:	ea00000d 	b	4000ee90 <_tx_thread_resume+0xa8>
4000ee58:	e59f1138 	ldr	r1, [pc, #312]	; 4000ef98 <_tx_thread_resume+0x1b0>
4000ee5c:	e5911000 	ldr	r1, [r1]
4000ee60:	e59f2138 	ldr	r2, [pc, #312]	; 4000efa0 <_tx_thread_resume+0x1b8>
4000ee64:	e1510002 	cmp	r1, r2
4000ee68:	2a000004 	bcs	4000ee80 <_tx_thread_resume+0x98>
4000ee6c:	e3e01000 	mvn	r1, #0
4000ee70:	e5801000 	str	r1, [r0]
4000ee74:	e3a01000 	mov	r1, #0
4000ee78:	e5801004 	str	r1, [r0, #4]
4000ee7c:	ea000003 	b	4000ee90 <_tx_thread_resume+0xa8>
4000ee80:	e59f1118 	ldr	r1, [pc, #280]	; 4000efa0 <_tx_thread_resume+0x1b8>
4000ee84:	e5801000 	str	r1, [r0]
4000ee88:	e3a01000 	mov	r1, #0
4000ee8c:	e5801004 	str	r1, [r0, #4]
4000ee90:	e3a0106f 	mov	r1, #111	; 0x6f
4000ee94:	e5801008 	str	r1, [r0, #8]
4000ee98:	e5804010 	str	r4, [r0, #16]
4000ee9c:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000eea0:	e5801014 	str	r1, [r0, #20]
4000eea4:	e580d018 	str	sp, [r0, #24]
4000eea8:	e3a01000 	mov	r1, #0
4000eeac:	e580101c 	str	r1, [r0, #28]
4000eeb0:	e2800020 	add	r0, r0, #32
4000eeb4:	e59f10e8 	ldr	r1, [pc, #232]	; 4000efa4 <_tx_thread_resume+0x1bc>
4000eeb8:	e5911000 	ldr	r1, [r1]
4000eebc:	e1500001 	cmp	r0, r1
4000eec0:	3a000001 	bcc	4000eecc <_tx_thread_resume+0xe4>
4000eec4:	e59f10dc 	ldr	r1, [pc, #220]	; 4000efa8 <_tx_thread_resume+0x1c0>
4000eec8:	e5910000 	ldr	r0, [r1]
4000eecc:	e59f10bc 	ldr	r1, [pc, #188]	; 4000ef90 <_tx_thread_resume+0x1a8>
4000eed0:	e5810000 	str	r0, [r1]
4000eed4:	e59f10d0 	ldr	r1, [pc, #208]	; 4000efac <_tx_thread_resume+0x1c4>
4000eed8:	e5911000 	ldr	r1, [r1]
4000eedc:	e5810020 	str	r0, [r1, #32]
4000eee0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000eee4:	e3500003 	cmp	r0, #3
4000eee8:	1a00001c 	bne	4000ef60 <_tx_thread_resume+0x178>
4000eeec:	e59f00bc 	ldr	r0, [pc, #188]	; 4000efb0 <_tx_thread_resume+0x1c8>
4000eef0:	e5900000 	ldr	r0, [r0]
4000eef4:	e2800001 	add	r0, r0, #1
4000eef8:	e59f10b0 	ldr	r1, [pc, #176]	; 4000efb0 <_tx_thread_resume+0x1c8>
4000eefc:	e5810000 	str	r0, [r1]
4000ef00:	e121f005 	msr	CPSR_c, r5
4000ef04:	e59f008c 	ldr	r0, [pc, #140]	; 4000ef98 <_tx_thread_resume+0x1b0>
4000ef08:	e5900000 	ldr	r0, [r0]
4000ef0c:	e59f108c 	ldr	r1, [pc, #140]	; 4000efa0 <_tx_thread_resume+0x1b8>
4000ef10:	e1500001 	cmp	r0, r1
4000ef14:	3a000008 	bcc	4000ef3c <_tx_thread_resume+0x154>
4000ef18:	e59f0094 	ldr	r0, [pc, #148]	; 4000efb4 <_tx_thread_resume+0x1cc>
4000ef1c:	e5907000 	ldr	r7, [r0]
4000ef20:	e3570000 	cmp	r7, #0
4000ef24:	0a000005 	beq	4000ef40 <_tx_thread_resume+0x158>
4000ef28:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000ef2c:	e58d0000 	str	r0, [sp]
4000ef30:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000ef34:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000ef38:	ea000000 	b	4000ef40 <_tx_thread_resume+0x158>
4000ef3c:	e3a07000 	mov	r7, #0
4000ef40:	e1a00004 	mov	r0, r4
4000ef44:	eb0000b6 	bl	4000f224 <_tx_thread_system_resume>
4000ef48:	e3570000 	cmp	r7, #0
4000ef4c:	0a000001 	beq	4000ef58 <_tx_thread_resume+0x170>
4000ef50:	e59d0000 	ldr	r0, [sp]
4000ef54:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000ef58:	e3a08000 	mov	r8, #0
4000ef5c:	ea000009 	b	4000ef88 <_tx_thread_resume+0x1a0>
4000ef60:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000ef64:	e3500000 	cmp	r0, #0
4000ef68:	0a000004 	beq	4000ef80 <_tx_thread_resume+0x198>
4000ef6c:	e3a00000 	mov	r0, #0
4000ef70:	e5840034 	str	r0, [r4, #52]	; 0x34
4000ef74:	e121f005 	msr	CPSR_c, r5
4000ef78:	e3a08019 	mov	r8, #25
4000ef7c:	ea000001 	b	4000ef88 <_tx_thread_resume+0x1a0>
4000ef80:	e121f005 	msr	CPSR_c, r5
4000ef84:	e3a08012 	mov	r8, #18
4000ef88:	e1a00008 	mov	r0, r8
4000ef8c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000ef90:	40030ea0 	.word	0x40030ea0
4000ef94:	40030ea4 	.word	0x40030ea4
4000ef98:	40030e2c 	.word	0x40030e2c
4000ef9c:	40030e34 	.word	0x40030e34
4000efa0:	f0f0f0f0 	.word	0xf0f0f0f0
4000efa4:	40030e9c 	.word	0x40030e9c
4000efa8:	40030e98 	.word	0x40030e98
4000efac:	40030e8c 	.word	0x40030e8c
4000efb0:	40030e50 	.word	0x40030e50
4000efb4:	40030e38 	.word	0x40030e38

4000efb8 <_tx_thread_shell_entry>:
4000efb8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000efbc:	e59f0088 	ldr	r0, [pc, #136]	; 4000f04c <_tx_thread_shell_entry+0x94>
4000efc0:	e5907000 	ldr	r7, [r0]
4000efc4:	e10f4000 	mrs	r4, CPSR
4000efc8:	e3845080 	orr	r5, r4, #128	; 0x80
4000efcc:	e121f005 	msr	CPSR_c, r5
4000efd0:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000efd4:	e121f004 	msr	CPSR_c, r4
4000efd8:	e3560000 	cmp	r6, #0
4000efdc:	0a000002 	beq	4000efec <_tx_thread_shell_entry+0x34>
4000efe0:	e3a01000 	mov	r1, #0
4000efe4:	e1a00007 	mov	r0, r7
4000efe8:	e12fff36 	blx	r6
4000efec:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000eff0:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000eff4:	e12fff31 	blx	r1
4000eff8:	e10f4000 	mrs	r4, CPSR
4000effc:	e3845080 	orr	r5, r4, #128	; 0x80
4000f000:	e121f005 	msr	CPSR_c, r5
4000f004:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f008:	e3a00001 	mov	r0, #1
4000f00c:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f010:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f014:	e59f0034 	ldr	r0, [pc, #52]	; 4000f050 <_tx_thread_shell_entry+0x98>
4000f018:	e5900000 	ldr	r0, [r0]
4000f01c:	e2800001 	add	r0, r0, #1
4000f020:	e59f1028 	ldr	r1, [pc, #40]	; 4000f050 <_tx_thread_shell_entry+0x98>
4000f024:	e5810000 	str	r0, [r1]
4000f028:	e121f004 	msr	CPSR_c, r4
4000f02c:	e3560000 	cmp	r6, #0
4000f030:	0a000002 	beq	4000f040 <_tx_thread_shell_entry+0x88>
4000f034:	e3a01001 	mov	r1, #1
4000f038:	e1a00007 	mov	r0, r7
4000f03c:	e12fff36 	blx	r6
4000f040:	e1a00007 	mov	r0, r7
4000f044:	ebffe6cf 	bl	40008b88 <_tx_thread_system_suspend>
4000f048:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f04c:	40030e34 	.word	0x40030e34
4000f050:	40030e50 	.word	0x40030e50

4000f054 <_tx_thread_stack_analyze>:
4000f054:	e92d4070 	push	{r4, r5, r6, lr}
4000f058:	e10f1000 	mrs	r1, CPSR
4000f05c:	e3812080 	orr	r2, r1, #128	; 0x80
4000f060:	e121f002 	msr	CPSR_c, r2
4000f064:	e3500000 	cmp	r0, #0
4000f068:	0a000003 	beq	4000f07c <_tx_thread_stack_analyze+0x28>
4000f06c:	e5905000 	ldr	r5, [r0]
4000f070:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f120 <_tx_thread_stack_analyze+0xcc>
4000f074:	e1550006 	cmp	r5, r6
4000f078:	0a000001 	beq	4000f084 <_tx_thread_stack_analyze+0x30>
4000f07c:	e121f001 	msr	CPSR_c, r1
4000f080:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f084:	e590c008 	ldr	ip, [r0, #8]
4000f088:	e590300c 	ldr	r3, [r0, #12]
4000f08c:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f090:	e121f001 	msr	CPSR_c, r1
4000f094:	e24ec004 	sub	ip, lr, #4
4000f098:	e04e6003 	sub	r6, lr, r3
4000f09c:	e1a05146 	asr	r5, r6, #2
4000f0a0:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f0a4:	e1a040c6 	asr	r4, r6, #1
4000f0a8:	e083c104 	add	ip, r3, r4, lsl #2
4000f0ac:	e1a00000 	nop			; (mov r0, r0)
4000f0b0:	e59c5000 	ldr	r5, [ip]
4000f0b4:	e59f6068 	ldr	r6, [pc, #104]	; 4000f124 <_tx_thread_stack_analyze+0xd0>
4000f0b8:	e1550006 	cmp	r5, r6
4000f0bc:	0a000002 	beq	4000f0cc <_tx_thread_stack_analyze+0x78>
4000f0c0:	e1a050a4 	lsr	r5, r4, #1
4000f0c4:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f0c8:	ea000001 	b	4000f0d4 <_tx_thread_stack_analyze+0x80>
4000f0cc:	e1a050a4 	lsr	r5, r4, #1
4000f0d0:	e08cc105 	add	ip, ip, r5, lsl #2
4000f0d4:	e1a040a4 	lsr	r4, r4, #1
4000f0d8:	e3540001 	cmp	r4, #1
4000f0dc:	8afffff3 	bhi	4000f0b0 <_tx_thread_stack_analyze+0x5c>
4000f0e0:	ea000000 	b	4000f0e8 <_tx_thread_stack_analyze+0x94>
4000f0e4:	e28cc004 	add	ip, ip, #4
4000f0e8:	e59c5000 	ldr	r5, [ip]
4000f0ec:	e59f6030 	ldr	r6, [pc, #48]	; 4000f124 <_tx_thread_stack_analyze+0xd0>
4000f0f0:	e1550006 	cmp	r5, r6
4000f0f4:	0afffffa 	beq	4000f0e4 <_tx_thread_stack_analyze+0x90>
4000f0f8:	e10f1000 	mrs	r1, CPSR
4000f0fc:	e3812080 	orr	r2, r1, #128	; 0x80
4000f100:	e121f002 	msr	CPSR_c, r2
4000f104:	e5905000 	ldr	r5, [r0]
4000f108:	e59f6010 	ldr	r6, [pc, #16]	; 4000f120 <_tx_thread_stack_analyze+0xcc>
4000f10c:	e1550006 	cmp	r5, r6
4000f110:	1a000000 	bne	4000f118 <_tx_thread_stack_analyze+0xc4>
4000f114:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f118:	e121f001 	msr	CPSR_c, r1
4000f11c:	eaffffd7 	b	4000f080 <_tx_thread_stack_analyze+0x2c>
4000f120:	54485244 	.word	0x54485244
4000f124:	efefefef 	.word	0xefefefef

4000f128 <_tx_thread_stack_error_handler>:
4000f128:	e92d4070 	push	{r4, r5, r6, lr}
4000f12c:	e1a04000 	mov	r4, r0
4000f130:	e10f5000 	mrs	r5, CPSR
4000f134:	e3856080 	orr	r6, r5, #128	; 0x80
4000f138:	e121f006 	msr	CPSR_c, r6
4000f13c:	e59f002c 	ldr	r0, [pc, #44]	; 4000f170 <_tx_thread_stack_error_handler+0x48>
4000f140:	e5900000 	ldr	r0, [r0]
4000f144:	e3500000 	cmp	r0, #0
4000f148:	0a000004 	beq	4000f160 <_tx_thread_stack_error_handler+0x38>
4000f14c:	e1a00004 	mov	r0, r4
4000f150:	e59f1018 	ldr	r1, [pc, #24]	; 4000f170 <_tx_thread_stack_error_handler+0x48>
4000f154:	e5911000 	ldr	r1, [r1]
4000f158:	e12fff31 	blx	r1
4000f15c:	ea000001 	b	4000f168 <_tx_thread_stack_error_handler+0x40>
4000f160:	e1a00000 	nop			; (mov r0, r0)
4000f164:	eafffffe 	b	4000f164 <_tx_thread_stack_error_handler+0x3c>
4000f168:	e121f005 	msr	CPSR_c, r5
4000f16c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f170:	40030e58 	.word	0x40030e58

4000f174 <_tx_thread_system_preempt_check>:
4000f174:	e92d4010 	push	{r4, lr}
4000f178:	e59f0090 	ldr	r0, [pc, #144]	; 4000f210 <_tx_thread_system_preempt_check+0x9c>
4000f17c:	e5900000 	ldr	r0, [r0]
4000f180:	e59f108c 	ldr	r1, [pc, #140]	; 4000f214 <_tx_thread_system_preempt_check+0xa0>
4000f184:	e5911000 	ldr	r1, [r1]
4000f188:	e1500001 	cmp	r0, r1
4000f18c:	0a00001e 	beq	4000f20c <_tx_thread_system_preempt_check+0x98>
4000f190:	e59f0080 	ldr	r0, [pc, #128]	; 4000f218 <_tx_thread_system_preempt_check+0xa4>
4000f194:	e5900000 	ldr	r0, [r0]
4000f198:	e59f107c 	ldr	r1, [pc, #124]	; 4000f21c <_tx_thread_system_preempt_check+0xa8>
4000f19c:	e5911000 	ldr	r1, [r1]
4000f1a0:	e1900001 	orrs	r0, r0, r1
4000f1a4:	1a000018 	bne	4000f20c <_tx_thread_system_preempt_check+0x98>
4000f1a8:	e59f0064 	ldr	r0, [pc, #100]	; 4000f214 <_tx_thread_system_preempt_check+0xa0>
4000f1ac:	e5904000 	ldr	r4, [r0]
4000f1b0:	e5940008 	ldr	r0, [r4, #8]
4000f1b4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f1b8:	e1500001 	cmp	r0, r1
4000f1bc:	2a000001 	bcs	4000f1c8 <_tx_thread_system_preempt_check+0x54>
4000f1c0:	e5940008 	ldr	r0, [r4, #8]
4000f1c4:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f1c8:	e594000c 	ldr	r0, [r4, #12]
4000f1cc:	e5900000 	ldr	r0, [r0]
4000f1d0:	e59f1048 	ldr	r1, [pc, #72]	; 4000f220 <_tx_thread_system_preempt_check+0xac>
4000f1d4:	e1500001 	cmp	r0, r1
4000f1d8:	1a000007 	bne	4000f1fc <_tx_thread_system_preempt_check+0x88>
4000f1dc:	e5940010 	ldr	r0, [r4, #16]
4000f1e0:	e5900001 	ldr	r0, [r0, #1]
4000f1e4:	e1500001 	cmp	r0, r1
4000f1e8:	1a000003 	bne	4000f1fc <_tx_thread_system_preempt_check+0x88>
4000f1ec:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f1f0:	e594100c 	ldr	r1, [r4, #12]
4000f1f4:	e1500001 	cmp	r0, r1
4000f1f8:	2a000001 	bcs	4000f204 <_tx_thread_system_preempt_check+0x90>
4000f1fc:	e1a00004 	mov	r0, r4
4000f200:	ebffffc8 	bl	4000f128 <_tx_thread_stack_error_handler>
4000f204:	ebffee70 	bl	4000abcc <_tx_thread_system_return>
4000f208:	e1a00000 	nop			; (mov r0, r0)
4000f20c:	e8bd8010 	pop	{r4, pc}
4000f210:	40030e34 	.word	0x40030e34
4000f214:	40030e38 	.word	0x40030e38
4000f218:	40030e2c 	.word	0x40030e2c
4000f21c:	40030e50 	.word	0x40030e50
4000f220:	efefefef 	.word	0xefefefef

4000f224 <_tx_thread_system_resume>:
4000f224:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f228:	e1a04000 	mov	r4, r0
4000f22c:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f230:	e3500000 	cmp	r0, #0
4000f234:	0a000002 	beq	4000f244 <_tx_thread_system_resume+0x20>
4000f238:	e284004c 	add	r0, r4, #76	; 0x4c
4000f23c:	eb000325 	bl	4000fed8 <_tx_timer_system_deactivate>
4000f240:	ea000001 	b	4000f24c <_tx_thread_system_resume+0x28>
4000f244:	e3a00000 	mov	r0, #0
4000f248:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f24c:	e5940008 	ldr	r0, [r4, #8]
4000f250:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f254:	e1500001 	cmp	r0, r1
4000f258:	2a000001 	bcs	4000f264 <_tx_thread_system_resume+0x40>
4000f25c:	e5940008 	ldr	r0, [r4, #8]
4000f260:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f264:	e594000c 	ldr	r0, [r4, #12]
4000f268:	e5900000 	ldr	r0, [r0]
4000f26c:	e59f133c 	ldr	r1, [pc, #828]	; 4000f5b0 <_tx_thread_system_resume+0x38c>
4000f270:	e1500001 	cmp	r0, r1
4000f274:	1a000007 	bne	4000f298 <_tx_thread_system_resume+0x74>
4000f278:	e5940010 	ldr	r0, [r4, #16]
4000f27c:	e5900001 	ldr	r0, [r0, #1]
4000f280:	e1500001 	cmp	r0, r1
4000f284:	1a000003 	bne	4000f298 <_tx_thread_system_resume+0x74>
4000f288:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f28c:	e594100c 	ldr	r1, [r4, #12]
4000f290:	e1500001 	cmp	r0, r1
4000f294:	2a000001 	bcs	4000f2a0 <_tx_thread_system_resume+0x7c>
4000f298:	e1a00004 	mov	r0, r4
4000f29c:	ebffffa1 	bl	4000f128 <_tx_thread_stack_error_handler>
4000f2a0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f2a4:	e5100004 	ldr	r0, [r0, #-4]
4000f2a8:	e59f1300 	ldr	r1, [pc, #768]	; 4000f5b0 <_tx_thread_system_resume+0x38c>
4000f2ac:	e1500001 	cmp	r0, r1
4000f2b0:	0a000001 	beq	4000f2bc <_tx_thread_system_resume+0x98>
4000f2b4:	e1a00004 	mov	r0, r4
4000f2b8:	ebffff65 	bl	4000f054 <_tx_thread_stack_analyze>
4000f2bc:	e10f5000 	mrs	r5, CPSR
4000f2c0:	e3856080 	orr	r6, r5, #128	; 0x80
4000f2c4:	e121f006 	msr	CPSR_c, r6
4000f2c8:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f5b4 <_tx_thread_system_resume+0x390>
4000f2cc:	e5900000 	ldr	r0, [r0]
4000f2d0:	e2400001 	sub	r0, r0, #1
4000f2d4:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f5b4 <_tx_thread_system_resume+0x390>
4000f2d8:	e5810000 	str	r0, [r1]
4000f2dc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f2e0:	e3500000 	cmp	r0, #0
4000f2e4:	0a000009 	beq	4000f310 <_tx_thread_system_resume+0xec>
4000f2e8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f2ec:	e3500001 	cmp	r0, #1
4000f2f0:	0a000084 	beq	4000f508 <_tx_thread_system_resume+0x2e4>
4000f2f4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f2f8:	e3500002 	cmp	r0, #2
4000f2fc:	0a000081 	beq	4000f508 <_tx_thread_system_resume+0x2e4>
4000f300:	e3a00000 	mov	r0, #0
4000f304:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f308:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f30c:	ea00007d 	b	4000f508 <_tx_thread_system_resume+0x2e4>
4000f310:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f314:	e3500000 	cmp	r0, #0
4000f318:	0a00007a 	beq	4000f508 <_tx_thread_system_resume+0x2e4>
4000f31c:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f320:	e3500000 	cmp	r0, #0
4000f324:	0a000004 	beq	4000f33c <_tx_thread_system_resume+0x118>
4000f328:	e3a00000 	mov	r0, #0
4000f32c:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f330:	e3a00003 	mov	r0, #3
4000f334:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f338:	ea000072 	b	4000f508 <_tx_thread_system_resume+0x2e4>
4000f33c:	e59f1274 	ldr	r1, [pc, #628]	; 4000f5b8 <_tx_thread_system_resume+0x394>
4000f340:	e5910000 	ldr	r0, [r1]
4000f344:	e3500000 	cmp	r0, #0
4000f348:	0a000032 	beq	4000f418 <_tx_thread_system_resume+0x1f4>
4000f34c:	e59f1268 	ldr	r1, [pc, #616]	; 4000f5bc <_tx_thread_system_resume+0x398>
4000f350:	e5911000 	ldr	r1, [r1]
4000f354:	e2811001 	add	r1, r1, #1
4000f358:	e59f225c 	ldr	r2, [pc, #604]	; 4000f5bc <_tx_thread_system_resume+0x398>
4000f35c:	e5821000 	str	r1, [r2]
4000f360:	e580100c 	str	r1, [r0, #12]
4000f364:	e59f1254 	ldr	r1, [pc, #596]	; 4000f5c0 <_tx_thread_system_resume+0x39c>
4000f368:	e5911000 	ldr	r1, [r1]
4000f36c:	e3510000 	cmp	r1, #0
4000f370:	1a000006 	bne	4000f390 <_tx_thread_system_resume+0x16c>
4000f374:	e59f1248 	ldr	r1, [pc, #584]	; 4000f5c4 <_tx_thread_system_resume+0x3a0>
4000f378:	e5911000 	ldr	r1, [r1]
4000f37c:	e5801000 	str	r1, [r0]
4000f380:	e5901000 	ldr	r1, [r0]
4000f384:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f388:	e5801004 	str	r1, [r0, #4]
4000f38c:	ea00000d 	b	4000f3c8 <_tx_thread_system_resume+0x1a4>
4000f390:	e59f1228 	ldr	r1, [pc, #552]	; 4000f5c0 <_tx_thread_system_resume+0x39c>
4000f394:	e5911000 	ldr	r1, [r1]
4000f398:	e59f2228 	ldr	r2, [pc, #552]	; 4000f5c8 <_tx_thread_system_resume+0x3a4>
4000f39c:	e1510002 	cmp	r1, r2
4000f3a0:	2a000004 	bcs	4000f3b8 <_tx_thread_system_resume+0x194>
4000f3a4:	e3e01000 	mvn	r1, #0
4000f3a8:	e5801000 	str	r1, [r0]
4000f3ac:	e3a01000 	mov	r1, #0
4000f3b0:	e5801004 	str	r1, [r0, #4]
4000f3b4:	ea000003 	b	4000f3c8 <_tx_thread_system_resume+0x1a4>
4000f3b8:	e59f1208 	ldr	r1, [pc, #520]	; 4000f5c8 <_tx_thread_system_resume+0x3a4>
4000f3bc:	e5801000 	str	r1, [r0]
4000f3c0:	e3a01000 	mov	r1, #0
4000f3c4:	e5801004 	str	r1, [r0, #4]
4000f3c8:	e3a01001 	mov	r1, #1
4000f3cc:	e5801008 	str	r1, [r0, #8]
4000f3d0:	e5804010 	str	r4, [r0, #16]
4000f3d4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f3d8:	e5801014 	str	r1, [r0, #20]
4000f3dc:	e580d018 	str	sp, [r0, #24]
4000f3e0:	e3a01000 	mov	r1, #0
4000f3e4:	e580101c 	str	r1, [r0, #28]
4000f3e8:	e2800020 	add	r0, r0, #32
4000f3ec:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f5cc <_tx_thread_system_resume+0x3a8>
4000f3f0:	e5911000 	ldr	r1, [r1]
4000f3f4:	e1500001 	cmp	r0, r1
4000f3f8:	3a000001 	bcc	4000f404 <_tx_thread_system_resume+0x1e0>
4000f3fc:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f5d0 <_tx_thread_system_resume+0x3ac>
4000f400:	e5910000 	ldr	r0, [r1]
4000f404:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f5b8 <_tx_thread_system_resume+0x394>
4000f408:	e5810000 	str	r0, [r1]
4000f40c:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f5d4 <_tx_thread_system_resume+0x3b0>
4000f410:	e5911000 	ldr	r1, [r1]
4000f414:	e5810020 	str	r0, [r1, #32]
4000f418:	e3a00000 	mov	r0, #0
4000f41c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f420:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f424:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f5d8 <_tx_thread_system_resume+0x3b4>
4000f428:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f42c:	e3580000 	cmp	r8, #0
4000f430:	0a000005 	beq	4000f44c <_tx_thread_system_resume+0x228>
4000f434:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f438:	e5894020 	str	r4, [r9, #32]
4000f43c:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f440:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f444:	e5848020 	str	r8, [r4, #32]
4000f448:	ea00002e 	b	4000f508 <_tx_thread_system_resume+0x2e4>
4000f44c:	e59f0184 	ldr	r0, [pc, #388]	; 4000f5d8 <_tx_thread_system_resume+0x3b4>
4000f450:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f454:	e5844020 	str	r4, [r4, #32]
4000f458:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f45c:	e59f0178 	ldr	r0, [pc, #376]	; 4000f5dc <_tx_thread_system_resume+0x3b8>
4000f460:	e5900000 	ldr	r0, [r0]
4000f464:	e3a01001 	mov	r1, #1
4000f468:	e1800711 	orr	r0, r0, r1, lsl r7
4000f46c:	e59f1168 	ldr	r1, [pc, #360]	; 4000f5dc <_tx_thread_system_resume+0x3b8>
4000f470:	e5810000 	str	r0, [r1]
4000f474:	e59f0164 	ldr	r0, [pc, #356]	; 4000f5e0 <_tx_thread_system_resume+0x3bc>
4000f478:	e5900000 	ldr	r0, [r0]
4000f47c:	e58d0000 	str	r0, [sp]
4000f480:	e59d0000 	ldr	r0, [sp]
4000f484:	e3500000 	cmp	r0, #0
4000f488:	1a000004 	bne	4000f4a0 <_tx_thread_system_resume+0x27c>
4000f48c:	e59f014c 	ldr	r0, [pc, #332]	; 4000f5e0 <_tx_thread_system_resume+0x3bc>
4000f490:	e5804000 	str	r4, [r0]
4000f494:	e59f0148 	ldr	r0, [pc, #328]	; 4000f5e4 <_tx_thread_system_resume+0x3c0>
4000f498:	e5807000 	str	r7, [r0]
4000f49c:	ea000019 	b	4000f508 <_tx_thread_system_resume+0x2e4>
4000f4a0:	e59f013c 	ldr	r0, [pc, #316]	; 4000f5e4 <_tx_thread_system_resume+0x3c0>
4000f4a4:	e5900000 	ldr	r0, [r0]
4000f4a8:	e1570000 	cmp	r7, r0
4000f4ac:	2a000015 	bcs	4000f508 <_tx_thread_system_resume+0x2e4>
4000f4b0:	e59f012c 	ldr	r0, [pc, #300]	; 4000f5e4 <_tx_thread_system_resume+0x3c0>
4000f4b4:	e5807000 	str	r7, [r0]
4000f4b8:	e59d0000 	ldr	r0, [sp]
4000f4bc:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f4c0:	e1500007 	cmp	r0, r7
4000f4c4:	9a00000f 	bls	4000f508 <_tx_thread_system_resume+0x2e4>
4000f4c8:	e59d0000 	ldr	r0, [sp]
4000f4cc:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f4d0:	e59d1000 	ldr	r1, [sp]
4000f4d4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f4d8:	e1500001 	cmp	r0, r1
4000f4dc:	0a000007 	beq	4000f500 <_tx_thread_system_resume+0x2dc>
4000f4e0:	e59f0100 	ldr	r0, [pc, #256]	; 4000f5e8 <_tx_thread_system_resume+0x3c4>
4000f4e4:	e5900000 	ldr	r0, [r0]
4000f4e8:	e59d1000 	ldr	r1, [sp]
4000f4ec:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f4f0:	e3a02001 	mov	r2, #1
4000f4f4:	e1800112 	orr	r0, r0, r2, lsl r1
4000f4f8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f5e8 <_tx_thread_system_resume+0x3c4>
4000f4fc:	e5810000 	str	r0, [r1]
4000f500:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f5e0 <_tx_thread_system_resume+0x3bc>
4000f504:	e5804000 	str	r4, [r0]
4000f508:	e121f005 	msr	CPSR_c, r5
4000f50c:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f5c4 <_tx_thread_system_resume+0x3a0>
4000f510:	e5900000 	ldr	r0, [r0]
4000f514:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f5e0 <_tx_thread_system_resume+0x3bc>
4000f518:	e5911000 	ldr	r1, [r1]
4000f51c:	e1500001 	cmp	r0, r1
4000f520:	0a000021 	beq	4000f5ac <_tx_thread_system_resume+0x388>
4000f524:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f5e0 <_tx_thread_system_resume+0x3bc>
4000f528:	e5900000 	ldr	r0, [r0]
4000f52c:	e1540000 	cmp	r4, r0
4000f530:	0a000016 	beq	4000f590 <_tx_thread_system_resume+0x36c>
4000f534:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f5e0 <_tx_thread_system_resume+0x3bc>
4000f538:	e5904000 	ldr	r4, [r0]
4000f53c:	e5940008 	ldr	r0, [r4, #8]
4000f540:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f544:	e1500001 	cmp	r0, r1
4000f548:	2a000001 	bcs	4000f554 <_tx_thread_system_resume+0x330>
4000f54c:	e5940008 	ldr	r0, [r4, #8]
4000f550:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f554:	e594000c 	ldr	r0, [r4, #12]
4000f558:	e5900000 	ldr	r0, [r0]
4000f55c:	e59f104c 	ldr	r1, [pc, #76]	; 4000f5b0 <_tx_thread_system_resume+0x38c>
4000f560:	e1500001 	cmp	r0, r1
4000f564:	1a000007 	bne	4000f588 <_tx_thread_system_resume+0x364>
4000f568:	e5940010 	ldr	r0, [r4, #16]
4000f56c:	e5900001 	ldr	r0, [r0, #1]
4000f570:	e1500001 	cmp	r0, r1
4000f574:	1a000003 	bne	4000f588 <_tx_thread_system_resume+0x364>
4000f578:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f57c:	e594100c 	ldr	r1, [r4, #12]
4000f580:	e1500001 	cmp	r0, r1
4000f584:	2a000001 	bcs	4000f590 <_tx_thread_system_resume+0x36c>
4000f588:	e1a00004 	mov	r0, r4
4000f58c:	ebfffee5 	bl	4000f128 <_tx_thread_stack_error_handler>
4000f590:	e59f0028 	ldr	r0, [pc, #40]	; 4000f5c0 <_tx_thread_system_resume+0x39c>
4000f594:	e5900000 	ldr	r0, [r0]
4000f598:	e59f1014 	ldr	r1, [pc, #20]	; 4000f5b4 <_tx_thread_system_resume+0x390>
4000f59c:	e5911000 	ldr	r1, [r1]
4000f5a0:	e1900001 	orrs	r0, r0, r1
4000f5a4:	1a000000 	bne	4000f5ac <_tx_thread_system_resume+0x388>
4000f5a8:	ebffed87 	bl	4000abcc <_tx_thread_system_return>
4000f5ac:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f5b0:	efefefef 	.word	0xefefefef
4000f5b4:	40030e50 	.word	0x40030e50
4000f5b8:	40030ea0 	.word	0x40030ea0
4000f5bc:	40030ea4 	.word	0x40030ea4
4000f5c0:	40030e2c 	.word	0x40030e2c
4000f5c4:	40030e34 	.word	0x40030e34
4000f5c8:	f0f0f0f0 	.word	0xf0f0f0f0
4000f5cc:	40030e9c 	.word	0x40030e9c
4000f5d0:	40030e98 	.word	0x40030e98
4000f5d4:	40030e8c 	.word	0x40030e8c
4000f5d8:	40032874 	.word	0x40032874
4000f5dc:	40030e44 	.word	0x40030e44
4000f5e0:	40030e38 	.word	0x40030e38
4000f5e4:	40030e4c 	.word	0x40030e4c
4000f5e8:	40030e48 	.word	0x40030e48

4000f5ec <_tx_thread_time_slice>:
4000f5ec:	e92d4070 	push	{r4, r5, r6, lr}
4000f5f0:	e59f0140 	ldr	r0, [pc, #320]	; 4000f738 <_tx_thread_time_slice+0x14c>
4000f5f4:	e5906000 	ldr	r6, [r0]
4000f5f8:	e5960008 	ldr	r0, [r6, #8]
4000f5fc:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f600:	e1500001 	cmp	r0, r1
4000f604:	2a000001 	bcs	4000f610 <_tx_thread_time_slice+0x24>
4000f608:	e5960008 	ldr	r0, [r6, #8]
4000f60c:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f610:	e596000c 	ldr	r0, [r6, #12]
4000f614:	e5900000 	ldr	r0, [r0]
4000f618:	e59f111c 	ldr	r1, [pc, #284]	; 4000f73c <_tx_thread_time_slice+0x150>
4000f61c:	e1500001 	cmp	r0, r1
4000f620:	1a000007 	bne	4000f644 <_tx_thread_time_slice+0x58>
4000f624:	e5960010 	ldr	r0, [r6, #16]
4000f628:	e5900001 	ldr	r0, [r0, #1]
4000f62c:	e1500001 	cmp	r0, r1
4000f630:	1a000003 	bne	4000f644 <_tx_thread_time_slice+0x58>
4000f634:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f638:	e596100c 	ldr	r1, [r6, #12]
4000f63c:	e1500001 	cmp	r0, r1
4000f640:	2a000001 	bcs	4000f64c <_tx_thread_time_slice+0x60>
4000f644:	e1a00006 	mov	r0, r6
4000f648:	ebfffeb6 	bl	4000f128 <_tx_thread_stack_error_handler>
4000f64c:	e10f4000 	mrs	r4, CPSR
4000f650:	e3845080 	orr	r5, r4, #128	; 0x80
4000f654:	e121f005 	msr	CPSR_c, r5
4000f658:	e3a00000 	mov	r0, #0
4000f65c:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f740 <_tx_thread_time_slice+0x154>
4000f660:	e5810000 	str	r0, [r1]
4000f664:	e3560000 	cmp	r6, #0
4000f668:	0a000030 	beq	4000f730 <_tx_thread_time_slice+0x144>
4000f66c:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f670:	e3500000 	cmp	r0, #0
4000f674:	1a00002d 	bne	4000f730 <_tx_thread_time_slice+0x144>
4000f678:	e596001c 	ldr	r0, [r6, #28]
4000f67c:	e5860018 	str	r0, [r6, #24]
4000f680:	e5960020 	ldr	r0, [r6, #32]
4000f684:	e1500006 	cmp	r0, r6
4000f688:	0a000025 	beq	4000f724 <_tx_thread_time_slice+0x138>
4000f68c:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f690:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f694:	e1500001 	cmp	r0, r1
4000f698:	1a000021 	bne	4000f724 <_tx_thread_time_slice+0x138>
4000f69c:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f744 <_tx_thread_time_slice+0x158>
4000f6a0:	e5960020 	ldr	r0, [r6, #32]
4000f6a4:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f6a8:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f6ac:	e2820000 	add	r0, r2, #0
4000f6b0:	e59f1090 	ldr	r1, [pc, #144]	; 4000f748 <_tx_thread_time_slice+0x15c>
4000f6b4:	e5911000 	ldr	r1, [r1]
4000f6b8:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f6bc:	e59f1088 	ldr	r1, [pc, #136]	; 4000f74c <_tx_thread_time_slice+0x160>
4000f6c0:	e5810000 	str	r0, [r1]
4000f6c4:	e2810000 	add	r0, r1, #0
4000f6c8:	e5906000 	ldr	r6, [r0]
4000f6cc:	e5960008 	ldr	r0, [r6, #8]
4000f6d0:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f6d4:	e1500001 	cmp	r0, r1
4000f6d8:	2a000001 	bcs	4000f6e4 <_tx_thread_time_slice+0xf8>
4000f6dc:	e5960008 	ldr	r0, [r6, #8]
4000f6e0:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f6e4:	e596000c 	ldr	r0, [r6, #12]
4000f6e8:	e5900000 	ldr	r0, [r0]
4000f6ec:	e59f1048 	ldr	r1, [pc, #72]	; 4000f73c <_tx_thread_time_slice+0x150>
4000f6f0:	e1500001 	cmp	r0, r1
4000f6f4:	1a000007 	bne	4000f718 <_tx_thread_time_slice+0x12c>
4000f6f8:	e5960010 	ldr	r0, [r6, #16]
4000f6fc:	e5900001 	ldr	r0, [r0, #1]
4000f700:	e1500001 	cmp	r0, r1
4000f704:	1a000003 	bne	4000f718 <_tx_thread_time_slice+0x12c>
4000f708:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f70c:	e596100c 	ldr	r1, [r6, #12]
4000f710:	e1500001 	cmp	r0, r1
4000f714:	2a000005 	bcs	4000f730 <_tx_thread_time_slice+0x144>
4000f718:	e1a00006 	mov	r0, r6
4000f71c:	ebfffe81 	bl	4000f128 <_tx_thread_stack_error_handler>
4000f720:	ea000002 	b	4000f730 <_tx_thread_time_slice+0x144>
4000f724:	e59f1024 	ldr	r1, [pc, #36]	; 4000f750 <_tx_thread_time_slice+0x164>
4000f728:	e5960018 	ldr	r0, [r6, #24]
4000f72c:	e5810000 	str	r0, [r1]
4000f730:	e121f004 	msr	CPSR_c, r4
4000f734:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f738:	40030e34 	.word	0x40030e34
4000f73c:	efefefef 	.word	0xefefefef
4000f740:	40030e64 	.word	0x40030e64
4000f744:	40032874 	.word	0x40032874
4000f748:	40030e4c 	.word	0x40030e4c
4000f74c:	40030e38 	.word	0x40030e38
4000f750:	40030e60 	.word	0x40030e60

4000f754 <_tx_thread_timeout>:
4000f754:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f758:	e1a04000 	mov	r4, r0
4000f75c:	e1a08004 	mov	r8, r4
4000f760:	e10f5000 	mrs	r5, CPSR
4000f764:	e3856080 	orr	r6, r5, #128	; 0x80
4000f768:	e121f006 	msr	CPSR_c, r6
4000f76c:	e1a04008 	mov	r4, r8
4000f770:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000f774:	e3500004 	cmp	r0, #4
4000f778:	1a000008 	bne	4000f7a0 <_tx_thread_timeout+0x4c>
4000f77c:	e59f0038 	ldr	r0, [pc, #56]	; 4000f7bc <_tx_thread_timeout+0x68>
4000f780:	e5900000 	ldr	r0, [r0]
4000f784:	e2800001 	add	r0, r0, #1
4000f788:	e59f102c 	ldr	r1, [pc, #44]	; 4000f7bc <_tx_thread_timeout+0x68>
4000f78c:	e5810000 	str	r0, [r1]
4000f790:	e121f005 	msr	CPSR_c, r5
4000f794:	e1a00008 	mov	r0, r8
4000f798:	ebfffea1 	bl	4000f224 <_tx_thread_system_resume>
4000f79c:	ea000005 	b	4000f7b8 <_tx_thread_timeout+0x64>
4000f7a0:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000f7a4:	e121f005 	msr	CPSR_c, r5
4000f7a8:	e3570000 	cmp	r7, #0
4000f7ac:	0a000001 	beq	4000f7b8 <_tx_thread_timeout+0x64>
4000f7b0:	e1a00008 	mov	r0, r8
4000f7b4:	e12fff37 	blx	r7
4000f7b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f7bc:	40030e50 	.word	0x40030e50

4000f7c0 <_tx_timer_activate>:
4000f7c0:	e92d4070 	push	{r4, r5, r6, lr}
4000f7c4:	e1a04000 	mov	r4, r0
4000f7c8:	e10f5000 	mrs	r5, CPSR
4000f7cc:	e3856080 	orr	r6, r5, #128	; 0x80
4000f7d0:	e121f006 	msr	CPSR_c, r6
4000f7d4:	e59f1104 	ldr	r1, [pc, #260]	; 4000f8e0 <_tx_timer_activate+0x120>
4000f7d8:	e5910000 	ldr	r0, [r1]
4000f7dc:	e3500000 	cmp	r0, #0
4000f7e0:	0a000031 	beq	4000f8ac <_tx_timer_activate+0xec>
4000f7e4:	e59f10f8 	ldr	r1, [pc, #248]	; 4000f8e4 <_tx_timer_activate+0x124>
4000f7e8:	e5911000 	ldr	r1, [r1]
4000f7ec:	e2811001 	add	r1, r1, #1
4000f7f0:	e59f20ec 	ldr	r2, [pc, #236]	; 4000f8e4 <_tx_timer_activate+0x124>
4000f7f4:	e5821000 	str	r1, [r2]
4000f7f8:	e580100c 	str	r1, [r0, #12]
4000f7fc:	e59f10e4 	ldr	r1, [pc, #228]	; 4000f8e8 <_tx_timer_activate+0x128>
4000f800:	e5911000 	ldr	r1, [r1]
4000f804:	e3510000 	cmp	r1, #0
4000f808:	1a000006 	bne	4000f828 <_tx_timer_activate+0x68>
4000f80c:	e59f10d8 	ldr	r1, [pc, #216]	; 4000f8ec <_tx_timer_activate+0x12c>
4000f810:	e5911000 	ldr	r1, [r1]
4000f814:	e5801000 	str	r1, [r0]
4000f818:	e5901000 	ldr	r1, [r0]
4000f81c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f820:	e5801004 	str	r1, [r0, #4]
4000f824:	ea00000d 	b	4000f860 <_tx_timer_activate+0xa0>
4000f828:	e59f10b8 	ldr	r1, [pc, #184]	; 4000f8e8 <_tx_timer_activate+0x128>
4000f82c:	e5911000 	ldr	r1, [r1]
4000f830:	e59f20b8 	ldr	r2, [pc, #184]	; 4000f8f0 <_tx_timer_activate+0x130>
4000f834:	e1510002 	cmp	r1, r2
4000f838:	2a000004 	bcs	4000f850 <_tx_timer_activate+0x90>
4000f83c:	e3e01000 	mvn	r1, #0
4000f840:	e5801000 	str	r1, [r0]
4000f844:	e3a01000 	mov	r1, #0
4000f848:	e5801004 	str	r1, [r0, #4]
4000f84c:	ea000003 	b	4000f860 <_tx_timer_activate+0xa0>
4000f850:	e59f1098 	ldr	r1, [pc, #152]	; 4000f8f0 <_tx_timer_activate+0x130>
4000f854:	e5801000 	str	r1, [r0]
4000f858:	e3a01000 	mov	r1, #0
4000f85c:	e5801004 	str	r1, [r0, #4]
4000f860:	e3a0107a 	mov	r1, #122	; 0x7a
4000f864:	e5801008 	str	r1, [r0, #8]
4000f868:	e5804010 	str	r4, [r0, #16]
4000f86c:	e3a01000 	mov	r1, #0
4000f870:	e5801014 	str	r1, [r0, #20]
4000f874:	e5801018 	str	r1, [r0, #24]
4000f878:	e580101c 	str	r1, [r0, #28]
4000f87c:	e2800020 	add	r0, r0, #32
4000f880:	e59f106c 	ldr	r1, [pc, #108]	; 4000f8f4 <_tx_timer_activate+0x134>
4000f884:	e5911000 	ldr	r1, [r1]
4000f888:	e1500001 	cmp	r0, r1
4000f88c:	3a000001 	bcc	4000f898 <_tx_timer_activate+0xd8>
4000f890:	e59f1060 	ldr	r1, [pc, #96]	; 4000f8f8 <_tx_timer_activate+0x138>
4000f894:	e5910000 	ldr	r0, [r1]
4000f898:	e59f1040 	ldr	r1, [pc, #64]	; 4000f8e0 <_tx_timer_activate+0x120>
4000f89c:	e5810000 	str	r0, [r1]
4000f8a0:	e59f1054 	ldr	r1, [pc, #84]	; 4000f8fc <_tx_timer_activate+0x13c>
4000f8a4:	e5911000 	ldr	r1, [r1]
4000f8a8:	e5810020 	str	r0, [r1, #32]
4000f8ac:	e121f005 	msr	CPSR_c, r5
4000f8b0:	e5940020 	ldr	r0, [r4, #32]
4000f8b4:	e3500000 	cmp	r0, #0
4000f8b8:	1a000002 	bne	4000f8c8 <_tx_timer_activate+0x108>
4000f8bc:	e5940008 	ldr	r0, [r4, #8]
4000f8c0:	e3500000 	cmp	r0, #0
4000f8c4:	1a000001 	bne	4000f8d0 <_tx_timer_activate+0x110>
4000f8c8:	e3a00017 	mov	r0, #23
4000f8cc:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f8d0:	e2840008 	add	r0, r4, #8
4000f8d4:	ebffe6c7 	bl	400093f8 <_tx_timer_system_activate>
4000f8d8:	e3a00000 	mov	r0, #0
4000f8dc:	eafffffa 	b	4000f8cc <_tx_timer_activate+0x10c>
4000f8e0:	40030ea0 	.word	0x40030ea0
4000f8e4:	40030ea4 	.word	0x40030ea4
4000f8e8:	40030e2c 	.word	0x40030e2c
4000f8ec:	40030e34 	.word	0x40030e34
4000f8f0:	f0f0f0f0 	.word	0xf0f0f0f0
4000f8f4:	40030e9c 	.word	0x40030e9c
4000f8f8:	40030e98 	.word	0x40030e98
4000f8fc:	40030e8c 	.word	0x40030e8c

4000f900 <_tx_timer_change>:
4000f900:	e92d4030 	push	{r4, r5, lr}
4000f904:	e1a03000 	mov	r3, r0
4000f908:	e10fc000 	mrs	ip, CPSR
4000f90c:	e38ce080 	orr	lr, ip, #128	; 0x80
4000f910:	e121f00e 	msr	CPSR_c, lr
4000f914:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fa0c <_tx_timer_change+0x10c>
4000f918:	e5940000 	ldr	r0, [r4]
4000f91c:	e3500000 	cmp	r0, #0
4000f920:	0a000031 	beq	4000f9ec <_tx_timer_change+0xec>
4000f924:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fa10 <_tx_timer_change+0x110>
4000f928:	e5944000 	ldr	r4, [r4]
4000f92c:	e2844001 	add	r4, r4, #1
4000f930:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fa10 <_tx_timer_change+0x110>
4000f934:	e5854000 	str	r4, [r5]
4000f938:	e580400c 	str	r4, [r0, #12]
4000f93c:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fa14 <_tx_timer_change+0x114>
4000f940:	e5944000 	ldr	r4, [r4]
4000f944:	e3540000 	cmp	r4, #0
4000f948:	1a000006 	bne	4000f968 <_tx_timer_change+0x68>
4000f94c:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fa18 <_tx_timer_change+0x118>
4000f950:	e5944000 	ldr	r4, [r4]
4000f954:	e5804000 	str	r4, [r0]
4000f958:	e5904000 	ldr	r4, [r0]
4000f95c:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000f960:	e5804004 	str	r4, [r0, #4]
4000f964:	ea00000d 	b	4000f9a0 <_tx_timer_change+0xa0>
4000f968:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fa14 <_tx_timer_change+0x114>
4000f96c:	e5944000 	ldr	r4, [r4]
4000f970:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fa1c <_tx_timer_change+0x11c>
4000f974:	e1540005 	cmp	r4, r5
4000f978:	2a000004 	bcs	4000f990 <_tx_timer_change+0x90>
4000f97c:	e3e04000 	mvn	r4, #0
4000f980:	e5804000 	str	r4, [r0]
4000f984:	e3a04000 	mov	r4, #0
4000f988:	e5804004 	str	r4, [r0, #4]
4000f98c:	ea000003 	b	4000f9a0 <_tx_timer_change+0xa0>
4000f990:	e59f4084 	ldr	r4, [pc, #132]	; 4000fa1c <_tx_timer_change+0x11c>
4000f994:	e5804000 	str	r4, [r0]
4000f998:	e3a04000 	mov	r4, #0
4000f99c:	e5804004 	str	r4, [r0, #4]
4000f9a0:	e3a0407b 	mov	r4, #123	; 0x7b
4000f9a4:	e5804008 	str	r4, [r0, #8]
4000f9a8:	e5803010 	str	r3, [r0, #16]
4000f9ac:	e5801014 	str	r1, [r0, #20]
4000f9b0:	e5802018 	str	r2, [r0, #24]
4000f9b4:	e3a04000 	mov	r4, #0
4000f9b8:	e580401c 	str	r4, [r0, #28]
4000f9bc:	e2800020 	add	r0, r0, #32
4000f9c0:	e59f4058 	ldr	r4, [pc, #88]	; 4000fa20 <_tx_timer_change+0x120>
4000f9c4:	e5944000 	ldr	r4, [r4]
4000f9c8:	e1500004 	cmp	r0, r4
4000f9cc:	3a000001 	bcc	4000f9d8 <_tx_timer_change+0xd8>
4000f9d0:	e59f404c 	ldr	r4, [pc, #76]	; 4000fa24 <_tx_timer_change+0x124>
4000f9d4:	e5940000 	ldr	r0, [r4]
4000f9d8:	e59f402c 	ldr	r4, [pc, #44]	; 4000fa0c <_tx_timer_change+0x10c>
4000f9dc:	e5840000 	str	r0, [r4]
4000f9e0:	e59f4040 	ldr	r4, [pc, #64]	; 4000fa28 <_tx_timer_change+0x128>
4000f9e4:	e5944000 	ldr	r4, [r4]
4000f9e8:	e5840020 	str	r0, [r4, #32]
4000f9ec:	e5930020 	ldr	r0, [r3, #32]
4000f9f0:	e3500000 	cmp	r0, #0
4000f9f4:	1a000001 	bne	4000fa00 <_tx_timer_change+0x100>
4000f9f8:	e5831008 	str	r1, [r3, #8]
4000f9fc:	e583200c 	str	r2, [r3, #12]
4000fa00:	e121f00c 	msr	CPSR_c, ip
4000fa04:	e3a00000 	mov	r0, #0
4000fa08:	e8bd8030 	pop	{r4, r5, pc}
4000fa0c:	40030ea0 	.word	0x40030ea0
4000fa10:	40030ea4 	.word	0x40030ea4
4000fa14:	40030e2c 	.word	0x40030e2c
4000fa18:	40030e34 	.word	0x40030e34
4000fa1c:	f0f0f0f0 	.word	0xf0f0f0f0
4000fa20:	40030e9c 	.word	0x40030e9c
4000fa24:	40030e98 	.word	0x40030e98
4000fa28:	40030e8c 	.word	0x40030e8c

4000fa2c <_tx_timer_create>:
4000fa2c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fa30:	e1a04000 	mov	r4, r0
4000fa34:	e1a05001 	mov	r5, r1
4000fa38:	e1a06002 	mov	r6, r2
4000fa3c:	e1a07003 	mov	r7, r3
4000fa40:	e28da030 	add	sl, sp, #48	; 0x30
4000fa44:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fa48:	e3a0102c 	mov	r1, #44	; 0x2c
4000fa4c:	e1a00004 	mov	r0, r4
4000fa50:	eb000eb1 	bl	4001351c <__aeabi_memclr4>
4000fa54:	e5845004 	str	r5, [r4, #4]
4000fa58:	e5848008 	str	r8, [r4, #8]
4000fa5c:	e584900c 	str	r9, [r4, #12]
4000fa60:	e5846010 	str	r6, [r4, #16]
4000fa64:	e5847014 	str	r7, [r4, #20]
4000fa68:	e10fb000 	mrs	fp, CPSR
4000fa6c:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fa70:	e58d0008 	str	r0, [sp, #8]
4000fa74:	e59d0008 	ldr	r0, [sp, #8]
4000fa78:	e121f000 	msr	CPSR_c, r0
4000fa7c:	e59f0178 	ldr	r0, [pc, #376]	; 4000fbfc <_tx_timer_create+0x1d0>
4000fa80:	e5840000 	str	r0, [r4]
4000fa84:	e59f0174 	ldr	r0, [pc, #372]	; 4000fc00 <_tx_timer_create+0x1d4>
4000fa88:	e5900000 	ldr	r0, [r0]
4000fa8c:	e3500000 	cmp	r0, #0
4000fa90:	0a00000e 	beq	4000fad0 <_tx_timer_create+0xa4>
4000fa94:	e59f0164 	ldr	r0, [pc, #356]	; 4000fc00 <_tx_timer_create+0x1d4>
4000fa98:	e5900000 	ldr	r0, [r0]
4000fa9c:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000faa0:	e58d0004 	str	r0, [sp, #4]
4000faa4:	e59f0154 	ldr	r0, [pc, #340]	; 4000fc00 <_tx_timer_create+0x1d4>
4000faa8:	e5900000 	ldr	r0, [r0]
4000faac:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fab0:	e59d0004 	ldr	r0, [sp, #4]
4000fab4:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fab8:	e59d0004 	ldr	r0, [sp, #4]
4000fabc:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fac0:	e59f0138 	ldr	r0, [pc, #312]	; 4000fc00 <_tx_timer_create+0x1d4>
4000fac4:	e5900000 	ldr	r0, [r0]
4000fac8:	e5840024 	str	r0, [r4, #36]	; 0x24
4000facc:	ea000003 	b	4000fae0 <_tx_timer_create+0xb4>
4000fad0:	e59f0128 	ldr	r0, [pc, #296]	; 4000fc00 <_tx_timer_create+0x1d4>
4000fad4:	e5804000 	str	r4, [r0]
4000fad8:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fadc:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fae0:	e59f011c 	ldr	r0, [pc, #284]	; 4000fc04 <_tx_timer_create+0x1d8>
4000fae4:	e5900000 	ldr	r0, [r0]
4000fae8:	e2800001 	add	r0, r0, #1
4000faec:	e59f1110 	ldr	r1, [pc, #272]	; 4000fc04 <_tx_timer_create+0x1d8>
4000faf0:	e5810000 	str	r0, [r1]
4000faf4:	e1a03008 	mov	r3, r8
4000faf8:	e1a02005 	mov	r2, r5
4000fafc:	e1a01004 	mov	r1, r4
4000fb00:	e3a00002 	mov	r0, #2
4000fb04:	e58d9000 	str	r9, [sp]
4000fb08:	eb00011b 	bl	4000ff7c <_tx_trace_object_register>
4000fb0c:	e59f10f4 	ldr	r1, [pc, #244]	; 4000fc08 <_tx_timer_create+0x1dc>
4000fb10:	e5910000 	ldr	r0, [r1]
4000fb14:	e3500000 	cmp	r0, #0
4000fb18:	0a000030 	beq	4000fbe0 <_tx_timer_create+0x1b4>
4000fb1c:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fc0c <_tx_timer_create+0x1e0>
4000fb20:	e5911000 	ldr	r1, [r1]
4000fb24:	e2811001 	add	r1, r1, #1
4000fb28:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fc0c <_tx_timer_create+0x1e0>
4000fb2c:	e5821000 	str	r1, [r2]
4000fb30:	e580100c 	str	r1, [r0, #12]
4000fb34:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fc10 <_tx_timer_create+0x1e4>
4000fb38:	e5911000 	ldr	r1, [r1]
4000fb3c:	e3510000 	cmp	r1, #0
4000fb40:	1a000006 	bne	4000fb60 <_tx_timer_create+0x134>
4000fb44:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fc14 <_tx_timer_create+0x1e8>
4000fb48:	e5911000 	ldr	r1, [r1]
4000fb4c:	e5801000 	str	r1, [r0]
4000fb50:	e5901000 	ldr	r1, [r0]
4000fb54:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fb58:	e5801004 	str	r1, [r0, #4]
4000fb5c:	ea00000d 	b	4000fb98 <_tx_timer_create+0x16c>
4000fb60:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fc10 <_tx_timer_create+0x1e4>
4000fb64:	e5911000 	ldr	r1, [r1]
4000fb68:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fc18 <_tx_timer_create+0x1ec>
4000fb6c:	e1510002 	cmp	r1, r2
4000fb70:	2a000004 	bcs	4000fb88 <_tx_timer_create+0x15c>
4000fb74:	e3e01000 	mvn	r1, #0
4000fb78:	e5801000 	str	r1, [r0]
4000fb7c:	e3a01000 	mov	r1, #0
4000fb80:	e5801004 	str	r1, [r0, #4]
4000fb84:	ea000003 	b	4000fb98 <_tx_timer_create+0x16c>
4000fb88:	e59f1088 	ldr	r1, [pc, #136]	; 4000fc18 <_tx_timer_create+0x1ec>
4000fb8c:	e5801000 	str	r1, [r0]
4000fb90:	e3a01000 	mov	r1, #0
4000fb94:	e5801004 	str	r1, [r0, #4]
4000fb98:	e3a0107c 	mov	r1, #124	; 0x7c
4000fb9c:	e5801008 	str	r1, [r0, #8]
4000fba0:	e5804010 	str	r4, [r0, #16]
4000fba4:	e5808014 	str	r8, [r0, #20]
4000fba8:	e5809018 	str	r9, [r0, #24]
4000fbac:	e580a01c 	str	sl, [r0, #28]
4000fbb0:	e2800020 	add	r0, r0, #32
4000fbb4:	e59f1060 	ldr	r1, [pc, #96]	; 4000fc1c <_tx_timer_create+0x1f0>
4000fbb8:	e5911000 	ldr	r1, [r1]
4000fbbc:	e1500001 	cmp	r0, r1
4000fbc0:	3a000001 	bcc	4000fbcc <_tx_timer_create+0x1a0>
4000fbc4:	e59f1054 	ldr	r1, [pc, #84]	; 4000fc20 <_tx_timer_create+0x1f4>
4000fbc8:	e5910000 	ldr	r0, [r1]
4000fbcc:	e59f1034 	ldr	r1, [pc, #52]	; 4000fc08 <_tx_timer_create+0x1dc>
4000fbd0:	e5810000 	str	r0, [r1]
4000fbd4:	e59f1048 	ldr	r1, [pc, #72]	; 4000fc24 <_tx_timer_create+0x1f8>
4000fbd8:	e5911000 	ldr	r1, [r1]
4000fbdc:	e5810020 	str	r0, [r1, #32]
4000fbe0:	e121f00b 	msr	CPSR_c, fp
4000fbe4:	e35a0000 	cmp	sl, #0
4000fbe8:	0a000001 	beq	4000fbf4 <_tx_timer_create+0x1c8>
4000fbec:	e2840008 	add	r0, r4, #8
4000fbf0:	ebffe600 	bl	400093f8 <_tx_timer_system_activate>
4000fbf4:	e3a00000 	mov	r0, #0
4000fbf8:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000fbfc:	4154494d 	.word	0x4154494d
4000fc00:	40030e78 	.word	0x40030e78
4000fc04:	40030e7c 	.word	0x40030e7c
4000fc08:	40030ea0 	.word	0x40030ea0
4000fc0c:	40030ea4 	.word	0x40030ea4
4000fc10:	40030e2c 	.word	0x40030e2c
4000fc14:	40030e34 	.word	0x40030e34
4000fc18:	f0f0f0f0 	.word	0xf0f0f0f0
4000fc1c:	40030e9c 	.word	0x40030e9c
4000fc20:	40030e98 	.word	0x40030e98
4000fc24:	40030e8c 	.word	0x40030e8c

4000fc28 <_tx_timer_deactivate>:
4000fc28:	e92d4018 	push	{r3, r4, lr}
4000fc2c:	e1a01000 	mov	r1, r0
4000fc30:	e281c008 	add	ip, r1, #8
4000fc34:	e10f2000 	mrs	r2, CPSR
4000fc38:	e3823080 	orr	r3, r2, #128	; 0x80
4000fc3c:	e121f003 	msr	CPSR_c, r3
4000fc40:	e59fe228 	ldr	lr, [pc, #552]	; 4000fe70 <_tx_timer_deactivate+0x248>
4000fc44:	e59e0000 	ldr	r0, [lr]
4000fc48:	e3500000 	cmp	r0, #0
4000fc4c:	0a000031 	beq	4000fd18 <_tx_timer_deactivate+0xf0>
4000fc50:	e59fe21c 	ldr	lr, [pc, #540]	; 4000fe74 <_tx_timer_deactivate+0x24c>
4000fc54:	e59ee000 	ldr	lr, [lr]
4000fc58:	e28ee001 	add	lr, lr, #1
4000fc5c:	e59f4210 	ldr	r4, [pc, #528]	; 4000fe74 <_tx_timer_deactivate+0x24c>
4000fc60:	e584e000 	str	lr, [r4]
4000fc64:	e580e00c 	str	lr, [r0, #12]
4000fc68:	e59fe208 	ldr	lr, [pc, #520]	; 4000fe78 <_tx_timer_deactivate+0x250>
4000fc6c:	e59ee000 	ldr	lr, [lr]
4000fc70:	e35e0000 	cmp	lr, #0
4000fc74:	1a000006 	bne	4000fc94 <_tx_timer_deactivate+0x6c>
4000fc78:	e59fe1fc 	ldr	lr, [pc, #508]	; 4000fe7c <_tx_timer_deactivate+0x254>
4000fc7c:	e59ee000 	ldr	lr, [lr]
4000fc80:	e580e000 	str	lr, [r0]
4000fc84:	e590e000 	ldr	lr, [r0]
4000fc88:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000fc8c:	e580e004 	str	lr, [r0, #4]
4000fc90:	ea00000d 	b	4000fccc <_tx_timer_deactivate+0xa4>
4000fc94:	e59fe1dc 	ldr	lr, [pc, #476]	; 4000fe78 <_tx_timer_deactivate+0x250>
4000fc98:	e59ee000 	ldr	lr, [lr]
4000fc9c:	e59f41dc 	ldr	r4, [pc, #476]	; 4000fe80 <_tx_timer_deactivate+0x258>
4000fca0:	e15e0004 	cmp	lr, r4
4000fca4:	2a000004 	bcs	4000fcbc <_tx_timer_deactivate+0x94>
4000fca8:	e3e0e000 	mvn	lr, #0
4000fcac:	e580e000 	str	lr, [r0]
4000fcb0:	e3a0e000 	mov	lr, #0
4000fcb4:	e580e004 	str	lr, [r0, #4]
4000fcb8:	ea000003 	b	4000fccc <_tx_timer_deactivate+0xa4>
4000fcbc:	e59fe1bc 	ldr	lr, [pc, #444]	; 4000fe80 <_tx_timer_deactivate+0x258>
4000fcc0:	e580e000 	str	lr, [r0]
4000fcc4:	e3a0e000 	mov	lr, #0
4000fcc8:	e580e004 	str	lr, [r0, #4]
4000fccc:	e3a0e07d 	mov	lr, #125	; 0x7d
4000fcd0:	e580e008 	str	lr, [r0, #8]
4000fcd4:	e5801010 	str	r1, [r0, #16]
4000fcd8:	e580d014 	str	sp, [r0, #20]
4000fcdc:	e3a0e000 	mov	lr, #0
4000fce0:	e580e018 	str	lr, [r0, #24]
4000fce4:	e580e01c 	str	lr, [r0, #28]
4000fce8:	e2800020 	add	r0, r0, #32
4000fcec:	e59fe190 	ldr	lr, [pc, #400]	; 4000fe84 <_tx_timer_deactivate+0x25c>
4000fcf0:	e59ee000 	ldr	lr, [lr]
4000fcf4:	e150000e 	cmp	r0, lr
4000fcf8:	3a000001 	bcc	4000fd04 <_tx_timer_deactivate+0xdc>
4000fcfc:	e59fe184 	ldr	lr, [pc, #388]	; 4000fe88 <_tx_timer_deactivate+0x260>
4000fd00:	e59e0000 	ldr	r0, [lr]
4000fd04:	e59fe164 	ldr	lr, [pc, #356]	; 4000fe70 <_tx_timer_deactivate+0x248>
4000fd08:	e58e0000 	str	r0, [lr]
4000fd0c:	e59fe178 	ldr	lr, [pc, #376]	; 4000fe8c <_tx_timer_deactivate+0x264>
4000fd10:	e59ee000 	ldr	lr, [lr]
4000fd14:	e58e0020 	str	r0, [lr, #32]
4000fd18:	e59fe170 	ldr	lr, [pc, #368]	; 4000fe90 <_tx_timer_deactivate+0x268>
4000fd1c:	e59c0018 	ldr	r0, [ip, #24]
4000fd20:	e59ee000 	ldr	lr, [lr]
4000fd24:	e150000e 	cmp	r0, lr
4000fd28:	3a00002b 	bcc	4000fddc <_tx_timer_deactivate+0x1b4>
4000fd2c:	e59fe160 	ldr	lr, [pc, #352]	; 4000fe94 <_tx_timer_deactivate+0x26c>
4000fd30:	e59c0018 	ldr	r0, [ip, #24]
4000fd34:	e59ee000 	ldr	lr, [lr]
4000fd38:	e150000e 	cmp	r0, lr
4000fd3c:	2a000026 	bcs	4000fddc <_tx_timer_deactivate+0x1b4>
4000fd40:	e59fe150 	ldr	lr, [pc, #336]	; 4000fe98 <_tx_timer_deactivate+0x270>
4000fd44:	e59c0018 	ldr	r0, [ip, #24]
4000fd48:	e59ee000 	ldr	lr, [lr]
4000fd4c:	e150000e 	cmp	r0, lr
4000fd50:	3a000007 	bcc	4000fd74 <_tx_timer_deactivate+0x14c>
4000fd54:	e59fe13c 	ldr	lr, [pc, #316]	; 4000fe98 <_tx_timer_deactivate+0x270>
4000fd58:	e59c0018 	ldr	r0, [ip, #24]
4000fd5c:	e59ee000 	ldr	lr, [lr]
4000fd60:	e040000e 	sub	r0, r0, lr
4000fd64:	e3a0e001 	mov	lr, #1
4000fd68:	e08e0140 	add	r0, lr, r0, asr #2
4000fd6c:	e58d0000 	str	r0, [sp]
4000fd70:	ea00000e 	b	4000fdb0 <_tx_timer_deactivate+0x188>
4000fd74:	e59fe114 	ldr	lr, [pc, #276]	; 4000fe90 <_tx_timer_deactivate+0x268>
4000fd78:	e59c0018 	ldr	r0, [ip, #24]
4000fd7c:	e59ee000 	ldr	lr, [lr]
4000fd80:	e040000e 	sub	r0, r0, lr
4000fd84:	e1a00140 	asr	r0, r0, #2
4000fd88:	e58d0000 	str	r0, [sp]
4000fd8c:	e59f0100 	ldr	r0, [pc, #256]	; 4000fe94 <_tx_timer_deactivate+0x26c>
4000fd90:	e5900000 	ldr	r0, [r0]
4000fd94:	e59fe0fc 	ldr	lr, [pc, #252]	; 4000fe98 <_tx_timer_deactivate+0x270>
4000fd98:	e59ee000 	ldr	lr, [lr]
4000fd9c:	e040000e 	sub	r0, r0, lr
4000fda0:	e59de000 	ldr	lr, [sp]
4000fda4:	e08e0140 	add	r0, lr, r0, asr #2
4000fda8:	e2800001 	add	r0, r0, #1
4000fdac:	e58d0000 	str	r0, [sp]
4000fdb0:	e59c0000 	ldr	r0, [ip]
4000fdb4:	e3500020 	cmp	r0, #32
4000fdb8:	9a000005 	bls	4000fdd4 <_tx_timer_deactivate+0x1ac>
4000fdbc:	e59c0000 	ldr	r0, [ip]
4000fdc0:	e2400020 	sub	r0, r0, #32
4000fdc4:	e59de000 	ldr	lr, [sp]
4000fdc8:	e080000e 	add	r0, r0, lr
4000fdcc:	e58c0000 	str	r0, [ip]
4000fdd0:	ea000001 	b	4000fddc <_tx_timer_deactivate+0x1b4>
4000fdd4:	e59d0000 	ldr	r0, [sp]
4000fdd8:	e58c0000 	str	r0, [ip]
4000fddc:	e59c0018 	ldr	r0, [ip, #24]
4000fde0:	e3500000 	cmp	r0, #0
4000fde4:	0a00001e 	beq	4000fe64 <_tx_timer_deactivate+0x23c>
4000fde8:	e59c0010 	ldr	r0, [ip, #16]
4000fdec:	e150000c 	cmp	r0, ip
4000fdf0:	1a000009 	bne	4000fe1c <_tx_timer_deactivate+0x1f4>
4000fdf4:	e59c0018 	ldr	r0, [ip, #24]
4000fdf8:	e5900000 	ldr	r0, [r0]
4000fdfc:	e150000c 	cmp	r0, ip
4000fe00:	1a000002 	bne	4000fe10 <_tx_timer_deactivate+0x1e8>
4000fe04:	e3a00000 	mov	r0, #0
4000fe08:	e59ce018 	ldr	lr, [ip, #24]
4000fe0c:	e58e0000 	str	r0, [lr]
4000fe10:	e3a00000 	mov	r0, #0
4000fe14:	e58c0018 	str	r0, [ip, #24]
4000fe18:	ea000011 	b	4000fe64 <_tx_timer_deactivate+0x23c>
4000fe1c:	e59c0014 	ldr	r0, [ip, #20]
4000fe20:	e59ce010 	ldr	lr, [ip, #16]
4000fe24:	e58e0014 	str	r0, [lr, #20]
4000fe28:	e59c0010 	ldr	r0, [ip, #16]
4000fe2c:	e59ce014 	ldr	lr, [ip, #20]
4000fe30:	e58e0010 	str	r0, [lr, #16]
4000fe34:	e59c0018 	ldr	r0, [ip, #24]
4000fe38:	e5900000 	ldr	r0, [r0]
4000fe3c:	e150000c 	cmp	r0, ip
4000fe40:	1a000005 	bne	4000fe5c <_tx_timer_deactivate+0x234>
4000fe44:	e59c0018 	ldr	r0, [ip, #24]
4000fe48:	e59ce010 	ldr	lr, [ip, #16]
4000fe4c:	e58e0018 	str	r0, [lr, #24]
4000fe50:	e59c0010 	ldr	r0, [ip, #16]
4000fe54:	e59ce018 	ldr	lr, [ip, #24]
4000fe58:	e58e0000 	str	r0, [lr]
4000fe5c:	e3a00000 	mov	r0, #0
4000fe60:	e58c0018 	str	r0, [ip, #24]
4000fe64:	e121f002 	msr	CPSR_c, r2
4000fe68:	e3a00000 	mov	r0, #0
4000fe6c:	e8bd8018 	pop	{r3, r4, pc}
4000fe70:	40030ea0 	.word	0x40030ea0
4000fe74:	40030ea4 	.word	0x40030ea4
4000fe78:	40030e2c 	.word	0x40030e2c
4000fe7c:	40030e34 	.word	0x40030e34
4000fe80:	f0f0f0f0 	.word	0xf0f0f0f0
4000fe84:	40030e9c 	.word	0x40030e9c
4000fe88:	40030e98 	.word	0x40030e98
4000fe8c:	40030e8c 	.word	0x40030e8c
4000fe90:	40030e68 	.word	0x40030e68
4000fe94:	40030e6c 	.word	0x40030e6c
4000fe98:	40030e70 	.word	0x40030e70

4000fe9c <_tx_timer_expiration_process>:
4000fe9c:	e92d4070 	push	{r4, r5, r6, lr}
4000fea0:	e10f4000 	mrs	r4, CPSR
4000fea4:	e3845080 	orr	r5, r4, #128	; 0x80
4000fea8:	e121f005 	msr	CPSR_c, r5
4000feac:	e59f001c 	ldr	r0, [pc, #28]	; 4000fed0 <_tx_timer_expiration_process+0x34>
4000feb0:	e5900000 	ldr	r0, [r0]
4000feb4:	e2800001 	add	r0, r0, #1
4000feb8:	e59f1010 	ldr	r1, [pc, #16]	; 4000fed0 <_tx_timer_expiration_process+0x34>
4000febc:	e5810000 	str	r0, [r1]
4000fec0:	e121f004 	msr	CPSR_c, r4
4000fec4:	e59f0008 	ldr	r0, [pc, #8]	; 4000fed4 <_tx_timer_expiration_process+0x38>
4000fec8:	ebfffcd5 	bl	4000f224 <_tx_thread_system_resume>
4000fecc:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fed0:	40030e50 	.word	0x40030e50
4000fed4:	40032974 	.word	0x40032974

4000fed8 <_tx_timer_system_deactivate>:
4000fed8:	e1a01000 	mov	r1, r0
4000fedc:	e10f2000 	mrs	r2, CPSR
4000fee0:	e3823080 	orr	r3, r2, #128	; 0x80
4000fee4:	e121f003 	msr	CPSR_c, r3
4000fee8:	e5910018 	ldr	r0, [r1, #24]
4000feec:	e3500000 	cmp	r0, #0
4000fef0:	0a00001e 	beq	4000ff70 <_tx_timer_system_deactivate+0x98>
4000fef4:	e5910010 	ldr	r0, [r1, #16]
4000fef8:	e1500001 	cmp	r0, r1
4000fefc:	1a000009 	bne	4000ff28 <_tx_timer_system_deactivate+0x50>
4000ff00:	e5910018 	ldr	r0, [r1, #24]
4000ff04:	e5900000 	ldr	r0, [r0]
4000ff08:	e1500001 	cmp	r0, r1
4000ff0c:	1a000002 	bne	4000ff1c <_tx_timer_system_deactivate+0x44>
4000ff10:	e3a00000 	mov	r0, #0
4000ff14:	e591c018 	ldr	ip, [r1, #24]
4000ff18:	e58c0000 	str	r0, [ip]
4000ff1c:	e3a00000 	mov	r0, #0
4000ff20:	e5810018 	str	r0, [r1, #24]
4000ff24:	ea000011 	b	4000ff70 <_tx_timer_system_deactivate+0x98>
4000ff28:	e5910014 	ldr	r0, [r1, #20]
4000ff2c:	e591c010 	ldr	ip, [r1, #16]
4000ff30:	e58c0014 	str	r0, [ip, #20]
4000ff34:	e5910010 	ldr	r0, [r1, #16]
4000ff38:	e591c014 	ldr	ip, [r1, #20]
4000ff3c:	e58c0010 	str	r0, [ip, #16]
4000ff40:	e5910018 	ldr	r0, [r1, #24]
4000ff44:	e5900000 	ldr	r0, [r0]
4000ff48:	e1500001 	cmp	r0, r1
4000ff4c:	1a000005 	bne	4000ff68 <_tx_timer_system_deactivate+0x90>
4000ff50:	e5910018 	ldr	r0, [r1, #24]
4000ff54:	e591c010 	ldr	ip, [r1, #16]
4000ff58:	e58c0018 	str	r0, [ip, #24]
4000ff5c:	e5910010 	ldr	r0, [r1, #16]
4000ff60:	e591c018 	ldr	ip, [r1, #24]
4000ff64:	e58c0000 	str	r0, [ip]
4000ff68:	e3a00000 	mov	r0, #0
4000ff6c:	e5810018 	str	r0, [r1, #24]
4000ff70:	e121f002 	msr	CPSR_c, r2
4000ff74:	e3a00000 	mov	r0, #0
4000ff78:	e12fff1e 	bx	lr

4000ff7c <_tx_trace_object_register>:
4000ff7c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000ff80:	e1a04000 	mov	r4, r0
4000ff84:	e1a05001 	mov	r5, r1
4000ff88:	e1a06002 	mov	r6, r2
4000ff8c:	e1a07003 	mov	r7, r3
4000ff90:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
4000ff94:	e59f0184 	ldr	r0, [pc, #388]	; 40010120 <_tx_trace_object_register+0x1a4>
4000ff98:	e5900000 	ldr	r0, [r0]
4000ff9c:	e3500000 	cmp	r0, #0
4000ffa0:	1a000000 	bne	4000ffa8 <_tx_trace_object_register+0x2c>
4000ffa4:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000ffa8:	e59f1174 	ldr	r1, [pc, #372]	; 40010124 <_tx_trace_object_register+0x1a8>
4000ffac:	e5911000 	ldr	r1, [r1]
4000ffb0:	e59f2168 	ldr	r2, [pc, #360]	; 40010120 <_tx_trace_object_register+0x1a4>
4000ffb4:	e5922000 	ldr	r2, [r2]
4000ffb8:	e0410002 	sub	r0, r1, r2
4000ffbc:	e3a01030 	mov	r1, #48	; 0x30
4000ffc0:	eb0002bd 	bl	40010abc <__aeabi_idivmod>
4000ffc4:	e1a0a000 	mov	sl, r0
4000ffc8:	e1a0b00a 	mov	fp, sl
4000ffcc:	e3a09000 	mov	r9, #0
4000ffd0:	ea00001b 	b	40010044 <_tx_trace_object_register+0xc8>
4000ffd4:	e0890089 	add	r0, r9, r9, lsl #1
4000ffd8:	e59f1140 	ldr	r1, [pc, #320]	; 40010120 <_tx_trace_object_register+0x1a4>
4000ffdc:	e5911000 	ldr	r1, [r1]
4000ffe0:	e0810200 	add	r0, r1, r0, lsl #4
4000ffe4:	e5900004 	ldr	r0, [r0, #4]
4000ffe8:	e1500005 	cmp	r0, r5
4000ffec:	1a000001 	bne	4000fff8 <_tx_trace_object_register+0x7c>
4000fff0:	e1a0b009 	mov	fp, r9
4000fff4:	ea000014 	b	4001004c <_tx_trace_object_register+0xd0>
4000fff8:	e0890089 	add	r0, r9, r9, lsl #1
4000fffc:	e59f111c 	ldr	r1, [pc, #284]	; 40010120 <_tx_trace_object_register+0x1a4>
40010000:	e5911000 	ldr	r1, [r1]
40010004:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
40010008:	e3500000 	cmp	r0, #0
4001000c:	0a00000b 	beq	40010040 <_tx_trace_object_register+0xc4>
40010010:	e15b000a 	cmp	fp, sl
40010014:	1a000001 	bne	40010020 <_tx_trace_object_register+0xa4>
40010018:	e1a0b009 	mov	fp, r9
4001001c:	ea000007 	b	40010040 <_tx_trace_object_register+0xc4>
40010020:	e08b008b 	add	r0, fp, fp, lsl #1
40010024:	e59f10f4 	ldr	r1, [pc, #244]	; 40010120 <_tx_trace_object_register+0x1a4>
40010028:	e5911000 	ldr	r1, [r1]
4001002c:	e0810200 	add	r0, r1, r0, lsl #4
40010030:	e5d00001 	ldrb	r0, [r0, #1]
40010034:	e3500000 	cmp	r0, #0
40010038:	0a000000 	beq	40010040 <_tx_trace_object_register+0xc4>
4001003c:	e1a0b009 	mov	fp, r9
40010040:	e2899001 	add	r9, r9, #1
40010044:	e159000a 	cmp	r9, sl
40010048:	3affffe1 	bcc	4000ffd4 <_tx_trace_object_register+0x58>
4001004c:	e1a00000 	nop			; (mov r0, r0)
40010050:	e15b000a 	cmp	fp, sl
40010054:	2a000030 	bcs	4001011c <_tx_trace_object_register+0x1a0>
40010058:	e3a00000 	mov	r0, #0
4001005c:	e08b108b 	add	r1, fp, fp, lsl #1
40010060:	e59f20b8 	ldr	r2, [pc, #184]	; 40010120 <_tx_trace_object_register+0x1a4>
40010064:	e5922000 	ldr	r2, [r2]
40010068:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001006c:	e08b008b 	add	r0, fp, fp, lsl #1
40010070:	e59f10a8 	ldr	r1, [pc, #168]	; 40010120 <_tx_trace_object_register+0x1a4>
40010074:	e5911000 	ldr	r1, [r1]
40010078:	e0810200 	add	r0, r1, r0, lsl #4
4001007c:	e5c04001 	strb	r4, [r0, #1]
40010080:	e08b008b 	add	r0, fp, fp, lsl #1
40010084:	e59f1094 	ldr	r1, [pc, #148]	; 40010120 <_tx_trace_object_register+0x1a4>
40010088:	e5911000 	ldr	r1, [r1]
4001008c:	e0810200 	add	r0, r1, r0, lsl #4
40010090:	e5805004 	str	r5, [r0, #4]
40010094:	e08b008b 	add	r0, fp, fp, lsl #1
40010098:	e59f1080 	ldr	r1, [pc, #128]	; 40010120 <_tx_trace_object_register+0x1a4>
4001009c:	e5911000 	ldr	r1, [r1]
400100a0:	e0810200 	add	r0, r1, r0, lsl #4
400100a4:	e5807008 	str	r7, [r0, #8]
400100a8:	e08b008b 	add	r0, fp, fp, lsl #1
400100ac:	e59f106c 	ldr	r1, [pc, #108]	; 40010120 <_tx_trace_object_register+0x1a4>
400100b0:	e5911000 	ldr	r1, [r1]
400100b4:	e0810200 	add	r0, r1, r0, lsl #4
400100b8:	e580800c 	str	r8, [r0, #12]
400100bc:	e3a09000 	mov	r9, #0
400100c0:	ea00000b 	b	400100f4 <_tx_trace_object_register+0x178>
400100c4:	e7d60009 	ldrb	r0, [r6, r9]
400100c8:	e08b108b 	add	r1, fp, fp, lsl #1
400100cc:	e59f204c 	ldr	r2, [pc, #76]	; 40010120 <_tx_trace_object_register+0x1a4>
400100d0:	e5922000 	ldr	r2, [r2]
400100d4:	e0821201 	add	r1, r2, r1, lsl #4
400100d8:	e2811010 	add	r1, r1, #16
400100dc:	e7c10009 	strb	r0, [r1, r9]
400100e0:	e7d60009 	ldrb	r0, [r6, r9]
400100e4:	e3500000 	cmp	r0, #0
400100e8:	1a000000 	bne	400100f0 <_tx_trace_object_register+0x174>
400100ec:	ea000002 	b	400100fc <_tx_trace_object_register+0x180>
400100f0:	e2899001 	add	r9, r9, #1
400100f4:	e359001f 	cmp	r9, #31
400100f8:	3afffff1 	bcc	400100c4 <_tx_trace_object_register+0x148>
400100fc:	e1a00000 	nop			; (mov r0, r0)
40010100:	e3a00000 	mov	r0, #0
40010104:	e08b108b 	add	r1, fp, fp, lsl #1
40010108:	e59f2010 	ldr	r2, [pc, #16]	; 40010120 <_tx_trace_object_register+0x1a4>
4001010c:	e5922000 	ldr	r2, [r2]
40010110:	e0821201 	add	r1, r2, r1, lsl #4
40010114:	e2811010 	add	r1, r1, #16
40010118:	e7c10009 	strb	r0, [r1, r9]
4001011c:	eaffffa0 	b	4000ffa4 <_tx_trace_object_register+0x28>
40010120:	40030e90 	.word	0x40030e90
40010124:	40030e94 	.word	0x40030e94

40010128 <_tx_trace_object_unregister>:
40010128:	e92d4070 	push	{r4, r5, r6, lr}
4001012c:	e1a04000 	mov	r4, r0
40010130:	e59f007c 	ldr	r0, [pc, #124]	; 400101b4 <_tx_trace_object_unregister+0x8c>
40010134:	e5900000 	ldr	r0, [r0]
40010138:	e3500000 	cmp	r0, #0
4001013c:	1a000000 	bne	40010144 <_tx_trace_object_unregister+0x1c>
40010140:	e8bd8070 	pop	{r4, r5, r6, pc}
40010144:	e59f106c 	ldr	r1, [pc, #108]	; 400101b8 <_tx_trace_object_unregister+0x90>
40010148:	e5911000 	ldr	r1, [r1]
4001014c:	e59f2060 	ldr	r2, [pc, #96]	; 400101b4 <_tx_trace_object_unregister+0x8c>
40010150:	e5922000 	ldr	r2, [r2]
40010154:	e0410002 	sub	r0, r1, r2
40010158:	e3a01030 	mov	r1, #48	; 0x30
4001015c:	eb000256 	bl	40010abc <__aeabi_idivmod>
40010160:	e1a05000 	mov	r5, r0
40010164:	e3a06000 	mov	r6, #0
40010168:	ea00000d 	b	400101a4 <_tx_trace_object_unregister+0x7c>
4001016c:	e0860086 	add	r0, r6, r6, lsl #1
40010170:	e59f103c 	ldr	r1, [pc, #60]	; 400101b4 <_tx_trace_object_unregister+0x8c>
40010174:	e5911000 	ldr	r1, [r1]
40010178:	e0810200 	add	r0, r1, r0, lsl #4
4001017c:	e5900004 	ldr	r0, [r0, #4]
40010180:	e1500004 	cmp	r0, r4
40010184:	1a000005 	bne	400101a0 <_tx_trace_object_unregister+0x78>
40010188:	e3a00001 	mov	r0, #1
4001018c:	e0861086 	add	r1, r6, r6, lsl #1
40010190:	e59f201c 	ldr	r2, [pc, #28]	; 400101b4 <_tx_trace_object_unregister+0x8c>
40010194:	e5922000 	ldr	r2, [r2]
40010198:	e7c20201 	strb	r0, [r2, r1, lsl #4]
4001019c:	ea000002 	b	400101ac <_tx_trace_object_unregister+0x84>
400101a0:	e2866001 	add	r6, r6, #1
400101a4:	e1560005 	cmp	r6, r5
400101a8:	3affffef 	bcc	4001016c <_tx_trace_object_unregister+0x44>
400101ac:	e1a00000 	nop			; (mov r0, r0)
400101b0:	eaffffe2 	b	40010140 <_tx_trace_object_unregister+0x18>
400101b4:	40030e90 	.word	0x40030e90
400101b8:	40030e94 	.word	0x40030e94

400101bc <_tx_thread_stack_build>:
400101bc:	e5902010 	ldr	r2, [r0, #16]
400101c0:	e3c22007 	bic	r2, r2, #7
400101c4:	e242204c 	sub	r2, r2, #76	; 0x4c
400101c8:	e3a03001 	mov	r3, #1
400101cc:	e5823000 	str	r3, [r2]
400101d0:	e3a03000 	mov	r3, #0
400101d4:	e5823008 	str	r3, [r2, #8]
400101d8:	e582300c 	str	r3, [r2, #12]
400101dc:	e5823010 	str	r3, [r2, #16]
400101e0:	e5823014 	str	r3, [r2, #20]
400101e4:	e5823018 	str	r3, [r2, #24]
400101e8:	e582301c 	str	r3, [r2, #28]
400101ec:	e5823020 	str	r3, [r2, #32]
400101f0:	e5823024 	str	r3, [r2, #36]	; 0x24
400101f4:	e5823028 	str	r3, [r2, #40]	; 0x28
400101f8:	e582302c 	str	r3, [r2, #44]	; 0x2c
400101fc:	e590300c 	ldr	r3, [r0, #12]
40010200:	e5823030 	str	r3, [r2, #48]	; 0x30
40010204:	e3a03000 	mov	r3, #0
40010208:	e5823034 	str	r3, [r2, #52]	; 0x34
4001020c:	e5823038 	str	r3, [r2, #56]	; 0x38
40010210:	e582303c 	str	r3, [r2, #60]	; 0x3c
40010214:	e5821040 	str	r1, [r2, #64]	; 0x40
40010218:	e5823044 	str	r3, [r2, #68]	; 0x44
4001021c:	e10f1000 	mrs	r1, CPSR
40010220:	e3c1109f 	bic	r1, r1, #159	; 0x9f
40010224:	e3813013 	orr	r3, r1, #19
40010228:	e5823004 	str	r3, [r2, #4]
4001022c:	e5802008 	str	r2, [r0, #8]
40010230:	e12fff1e 	bx	lr

40010234 <_tx_event_flags_cleanup>:
40010234:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010238:	e1a04000 	mov	r4, r0
4001023c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010240:	e10f5000 	mrs	r5, CPSR
40010244:	e3856080 	orr	r6, r5, #128	; 0x80
40010248:	e121f006 	msr	CPSR_c, r6
4001024c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010250:	e3500000 	cmp	r0, #0
40010254:	0a000026 	beq	400102f4 <_tx_event_flags_cleanup+0xc0>
40010258:	e3570000 	cmp	r7, #0
4001025c:	0a000024 	beq	400102f4 <_tx_event_flags_cleanup+0xc0>
40010260:	e5970000 	ldr	r0, [r7]
40010264:	e59f1090 	ldr	r1, [pc, #144]	; 400102fc <_tx_event_flags_cleanup+0xc8>
40010268:	e1500001 	cmp	r0, r1
4001026c:	1a000020 	bne	400102f4 <_tx_event_flags_cleanup+0xc0>
40010270:	e3a00000 	mov	r0, #0
40010274:	e5840068 	str	r0, [r4, #104]	; 0x68
40010278:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001027c:	e1500004 	cmp	r0, r4
40010280:	1a000002 	bne	40010290 <_tx_event_flags_cleanup+0x5c>
40010284:	e3a00000 	mov	r0, #0
40010288:	e5870010 	str	r0, [r7, #16]
4001028c:	ea000007 	b	400102b0 <_tx_event_flags_cleanup+0x7c>
40010290:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010294:	e5870010 	str	r0, [r7, #16]
40010298:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001029c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400102a0:	e5810074 	str	r0, [r1, #116]	; 0x74
400102a4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400102a8:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400102ac:	e5810070 	str	r0, [r1, #112]	; 0x70
400102b0:	e5970014 	ldr	r0, [r7, #20]
400102b4:	e2400001 	sub	r0, r0, #1
400102b8:	e5870014 	str	r0, [r7, #20]
400102bc:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400102c0:	e3500007 	cmp	r0, #7
400102c4:	1a00000a 	bne	400102f4 <_tx_event_flags_cleanup+0xc0>
400102c8:	e3a00007 	mov	r0, #7
400102cc:	e5840084 	str	r0, [r4, #132]	; 0x84
400102d0:	e59f0028 	ldr	r0, [pc, #40]	; 40010300 <_tx_event_flags_cleanup+0xcc>
400102d4:	e5900000 	ldr	r0, [r0]
400102d8:	e2800001 	add	r0, r0, #1
400102dc:	e59f101c 	ldr	r1, [pc, #28]	; 40010300 <_tx_event_flags_cleanup+0xcc>
400102e0:	e5810000 	str	r0, [r1]
400102e4:	e121f005 	msr	CPSR_c, r5
400102e8:	e1a00004 	mov	r0, r4
400102ec:	ebfffbcc 	bl	4000f224 <_tx_thread_system_resume>
400102f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400102f4:	e121f005 	msr	CPSR_c, r5
400102f8:	eafffffc 	b	400102f0 <_tx_event_flags_cleanup+0xbc>
400102fc:	4456444e 	.word	0x4456444e
40010300:	40030e50 	.word	0x40030e50

40010304 <_tx_mutex_cleanup>:
40010304:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010308:	e1a04000 	mov	r4, r0
4001030c:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010310:	e10f5000 	mrs	r5, CPSR
40010314:	e3856080 	orr	r6, r5, #128	; 0x80
40010318:	e121f006 	msr	CPSR_c, r6
4001031c:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010320:	e3500000 	cmp	r0, #0
40010324:	0a000026 	beq	400103c4 <_tx_mutex_cleanup+0xc0>
40010328:	e3570000 	cmp	r7, #0
4001032c:	0a000024 	beq	400103c4 <_tx_mutex_cleanup+0xc0>
40010330:	e5970000 	ldr	r0, [r7]
40010334:	e59f1090 	ldr	r1, [pc, #144]	; 400103cc <_tx_mutex_cleanup+0xc8>
40010338:	e1500001 	cmp	r0, r1
4001033c:	1a000020 	bne	400103c4 <_tx_mutex_cleanup+0xc0>
40010340:	e3a00000 	mov	r0, #0
40010344:	e5840068 	str	r0, [r4, #104]	; 0x68
40010348:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001034c:	e1500004 	cmp	r0, r4
40010350:	1a000002 	bne	40010360 <_tx_mutex_cleanup+0x5c>
40010354:	e3a00000 	mov	r0, #0
40010358:	e587001c 	str	r0, [r7, #28]
4001035c:	ea000007 	b	40010380 <_tx_mutex_cleanup+0x7c>
40010360:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010364:	e587001c 	str	r0, [r7, #28]
40010368:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001036c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010370:	e5810074 	str	r0, [r1, #116]	; 0x74
40010374:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010378:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4001037c:	e5810070 	str	r0, [r1, #112]	; 0x70
40010380:	e5970020 	ldr	r0, [r7, #32]
40010384:	e2400001 	sub	r0, r0, #1
40010388:	e5870020 	str	r0, [r7, #32]
4001038c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010390:	e350000d 	cmp	r0, #13
40010394:	1a00000a 	bne	400103c4 <_tx_mutex_cleanup+0xc0>
40010398:	e3a0001d 	mov	r0, #29
4001039c:	e5840084 	str	r0, [r4, #132]	; 0x84
400103a0:	e59f0028 	ldr	r0, [pc, #40]	; 400103d0 <_tx_mutex_cleanup+0xcc>
400103a4:	e5900000 	ldr	r0, [r0]
400103a8:	e2800001 	add	r0, r0, #1
400103ac:	e59f101c 	ldr	r1, [pc, #28]	; 400103d0 <_tx_mutex_cleanup+0xcc>
400103b0:	e5810000 	str	r0, [r1]
400103b4:	e121f005 	msr	CPSR_c, r5
400103b8:	e1a00004 	mov	r0, r4
400103bc:	ebfffb98 	bl	4000f224 <_tx_thread_system_resume>
400103c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400103c4:	e121f005 	msr	CPSR_c, r5
400103c8:	eafffffc 	b	400103c0 <_tx_mutex_cleanup+0xbc>
400103cc:	4d555445 	.word	0x4d555445
400103d0:	40030e50 	.word	0x40030e50

400103d4 <_tx_mutex_prioritize>:
400103d4:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
400103d8:	e1a04000 	mov	r4, r0
400103dc:	e10f5000 	mrs	r5, CPSR
400103e0:	e3856080 	orr	r6, r5, #128	; 0x80
400103e4:	e121f006 	msr	CPSR_c, r6
400103e8:	e59f1234 	ldr	r1, [pc, #564]	; 40010624 <_tx_mutex_prioritize+0x250>
400103ec:	e5910000 	ldr	r0, [r1]
400103f0:	e3500000 	cmp	r0, #0
400103f4:	0a000032 	beq	400104c4 <_tx_mutex_prioritize+0xf0>
400103f8:	e59f1228 	ldr	r1, [pc, #552]	; 40010628 <_tx_mutex_prioritize+0x254>
400103fc:	e5911000 	ldr	r1, [r1]
40010400:	e2811001 	add	r1, r1, #1
40010404:	e59f221c 	ldr	r2, [pc, #540]	; 40010628 <_tx_mutex_prioritize+0x254>
40010408:	e5821000 	str	r1, [r2]
4001040c:	e580100c 	str	r1, [r0, #12]
40010410:	e59f1214 	ldr	r1, [pc, #532]	; 4001062c <_tx_mutex_prioritize+0x258>
40010414:	e5911000 	ldr	r1, [r1]
40010418:	e3510000 	cmp	r1, #0
4001041c:	1a000006 	bne	4001043c <_tx_mutex_prioritize+0x68>
40010420:	e59f1208 	ldr	r1, [pc, #520]	; 40010630 <_tx_mutex_prioritize+0x25c>
40010424:	e5911000 	ldr	r1, [r1]
40010428:	e5801000 	str	r1, [r0]
4001042c:	e5901000 	ldr	r1, [r0]
40010430:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40010434:	e5801004 	str	r1, [r0, #4]
40010438:	ea00000d 	b	40010474 <_tx_mutex_prioritize+0xa0>
4001043c:	e59f11e8 	ldr	r1, [pc, #488]	; 4001062c <_tx_mutex_prioritize+0x258>
40010440:	e5911000 	ldr	r1, [r1]
40010444:	e59f21e8 	ldr	r2, [pc, #488]	; 40010634 <_tx_mutex_prioritize+0x260>
40010448:	e1510002 	cmp	r1, r2
4001044c:	2a000004 	bcs	40010464 <_tx_mutex_prioritize+0x90>
40010450:	e3e01000 	mvn	r1, #0
40010454:	e5801000 	str	r1, [r0]
40010458:	e3a01000 	mov	r1, #0
4001045c:	e5801004 	str	r1, [r0, #4]
40010460:	ea000003 	b	40010474 <_tx_mutex_prioritize+0xa0>
40010464:	e59f11c8 	ldr	r1, [pc, #456]	; 40010634 <_tx_mutex_prioritize+0x260>
40010468:	e5801000 	str	r1, [r0]
4001046c:	e3a01000 	mov	r1, #0
40010470:	e5801004 	str	r1, [r0, #4]
40010474:	e3a01038 	mov	r1, #56	; 0x38
40010478:	e5801008 	str	r1, [r0, #8]
4001047c:	e5804010 	str	r4, [r0, #16]
40010480:	e5941020 	ldr	r1, [r4, #32]
40010484:	e5801014 	str	r1, [r0, #20]
40010488:	e580d018 	str	sp, [r0, #24]
4001048c:	e3a01000 	mov	r1, #0
40010490:	e580101c 	str	r1, [r0, #28]
40010494:	e2800020 	add	r0, r0, #32
40010498:	e59f1198 	ldr	r1, [pc, #408]	; 40010638 <_tx_mutex_prioritize+0x264>
4001049c:	e5911000 	ldr	r1, [r1]
400104a0:	e1500001 	cmp	r0, r1
400104a4:	3a000001 	bcc	400104b0 <_tx_mutex_prioritize+0xdc>
400104a8:	e59f118c 	ldr	r1, [pc, #396]	; 4001063c <_tx_mutex_prioritize+0x268>
400104ac:	e5910000 	ldr	r0, [r1]
400104b0:	e59f116c 	ldr	r1, [pc, #364]	; 40010624 <_tx_mutex_prioritize+0x250>
400104b4:	e5810000 	str	r0, [r1]
400104b8:	e59f1180 	ldr	r1, [pc, #384]	; 40010640 <_tx_mutex_prioritize+0x26c>
400104bc:	e5911000 	ldr	r1, [r1]
400104c0:	e5810020 	str	r0, [r1, #32]
400104c4:	e5940020 	ldr	r0, [r4, #32]
400104c8:	e3500002 	cmp	r0, #2
400104cc:	2a000002 	bcs	400104dc <_tx_mutex_prioritize+0x108>
400104d0:	e121f005 	msr	CPSR_c, r5
400104d4:	e3a00000 	mov	r0, #0
400104d8:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
400104dc:	e5940020 	ldr	r0, [r4, #32]
400104e0:	e3500002 	cmp	r0, #2
400104e4:	1a00000c 	bne	4001051c <_tx_mutex_prioritize+0x148>
400104e8:	e594001c 	ldr	r0, [r4, #28]
400104ec:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400104f0:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400104f4:	e594101c 	ldr	r1, [r4, #28]
400104f8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400104fc:	e1500001 	cmp	r0, r1
40010500:	2a000002 	bcs	40010510 <_tx_mutex_prioritize+0x13c>
40010504:	e594001c 	ldr	r0, [r4, #28]
40010508:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001050c:	e584001c 	str	r0, [r4, #28]
40010510:	e121f005 	msr	CPSR_c, r5
40010514:	e3a00000 	mov	r0, #0
40010518:	eaffffee 	b	400104d8 <_tx_mutex_prioritize+0x104>
4001051c:	e594901c 	ldr	r9, [r4, #28]
40010520:	e5940020 	ldr	r0, [r4, #32]
40010524:	e58d0000 	str	r0, [sp]
40010528:	e594801c 	ldr	r8, [r4, #28]
4001052c:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010530:	e59f010c 	ldr	r0, [pc, #268]	; 40010644 <_tx_mutex_prioritize+0x270>
40010534:	e5900000 	ldr	r0, [r0]
40010538:	e2800001 	add	r0, r0, #1
4001053c:	e59f1100 	ldr	r1, [pc, #256]	; 40010644 <_tx_mutex_prioritize+0x270>
40010540:	e5810000 	str	r0, [r1]
40010544:	e1a00000 	nop			; (mov r0, r0)
40010548:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4001054c:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
40010550:	e1500001 	cmp	r0, r1
40010554:	2a000000 	bcs	4001055c <_tx_mutex_prioritize+0x188>
40010558:	e1a08007 	mov	r8, r7
4001055c:	e121f005 	msr	CPSR_c, r5
40010560:	e10f5000 	mrs	r5, CPSR
40010564:	e3856080 	orr	r6, r5, #128	; 0x80
40010568:	e121f006 	msr	CPSR_c, r6
4001056c:	e594001c 	ldr	r0, [r4, #28]
40010570:	e1500009 	cmp	r0, r9
40010574:	1a000005 	bne	40010590 <_tx_mutex_prioritize+0x1bc>
40010578:	e5940020 	ldr	r0, [r4, #32]
4001057c:	e59d1000 	ldr	r1, [sp]
40010580:	e1500001 	cmp	r0, r1
40010584:	1a000001 	bne	40010590 <_tx_mutex_prioritize+0x1bc>
40010588:	e5977070 	ldr	r7, [r7, #112]	; 0x70
4001058c:	ea000004 	b	400105a4 <_tx_mutex_prioritize+0x1d0>
40010590:	e594901c 	ldr	r9, [r4, #28]
40010594:	e5940020 	ldr	r0, [r4, #32]
40010598:	e58d0000 	str	r0, [sp]
4001059c:	e594801c 	ldr	r8, [r4, #28]
400105a0:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400105a4:	e594001c 	ldr	r0, [r4, #28]
400105a8:	e1500007 	cmp	r0, r7
400105ac:	1affffe5 	bne	40010548 <_tx_mutex_prioritize+0x174>
400105b0:	e59f008c 	ldr	r0, [pc, #140]	; 40010644 <_tx_mutex_prioritize+0x270>
400105b4:	e5900000 	ldr	r0, [r0]
400105b8:	e2400001 	sub	r0, r0, #1
400105bc:	e59f1080 	ldr	r1, [pc, #128]	; 40010644 <_tx_mutex_prioritize+0x270>
400105c0:	e5810000 	str	r0, [r1]
400105c4:	e594001c 	ldr	r0, [r4, #28]
400105c8:	e1500008 	cmp	r0, r8
400105cc:	0a000010 	beq	40010614 <_tx_mutex_prioritize+0x240>
400105d0:	e5980074 	ldr	r0, [r8, #116]	; 0x74
400105d4:	e5981070 	ldr	r1, [r8, #112]	; 0x70
400105d8:	e5810074 	str	r0, [r1, #116]	; 0x74
400105dc:	e5980070 	ldr	r0, [r8, #112]	; 0x70
400105e0:	e5981074 	ldr	r1, [r8, #116]	; 0x74
400105e4:	e5810070 	str	r0, [r1, #112]	; 0x70
400105e8:	e594001c 	ldr	r0, [r4, #28]
400105ec:	e5880070 	str	r0, [r8, #112]	; 0x70
400105f0:	e594001c 	ldr	r0, [r4, #28]
400105f4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400105f8:	e5880074 	str	r0, [r8, #116]	; 0x74
400105fc:	e594001c 	ldr	r0, [r4, #28]
40010600:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40010604:	e5808070 	str	r8, [r0, #112]	; 0x70
40010608:	e594001c 	ldr	r0, [r4, #28]
4001060c:	e5808074 	str	r8, [r0, #116]	; 0x74
40010610:	e584801c 	str	r8, [r4, #28]
40010614:	e121f005 	msr	CPSR_c, r5
40010618:	ebfffad5 	bl	4000f174 <_tx_thread_system_preempt_check>
4001061c:	e3a00000 	mov	r0, #0
40010620:	eaffffac 	b	400104d8 <_tx_mutex_prioritize+0x104>
40010624:	40030ea0 	.word	0x40030ea0
40010628:	40030ea4 	.word	0x40030ea4
4001062c:	40030e2c 	.word	0x40030e2c
40010630:	40030e34 	.word	0x40030e34
40010634:	f0f0f0f0 	.word	0xf0f0f0f0
40010638:	40030e9c 	.word	0x40030e9c
4001063c:	40030e98 	.word	0x40030e98
40010640:	40030e8c 	.word	0x40030e8c
40010644:	40030e50 	.word	0x40030e50

40010648 <_tx_queue_cleanup>:
40010648:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001064c:	e1a04000 	mov	r4, r0
40010650:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010654:	e10f5000 	mrs	r5, CPSR
40010658:	e3856080 	orr	r6, r5, #128	; 0x80
4001065c:	e121f006 	msr	CPSR_c, r6
40010660:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010664:	e3500000 	cmp	r0, #0
40010668:	0a00002c 	beq	40010720 <_tx_queue_cleanup+0xd8>
4001066c:	e3570000 	cmp	r7, #0
40010670:	0a00002a 	beq	40010720 <_tx_queue_cleanup+0xd8>
40010674:	e5970000 	ldr	r0, [r7]
40010678:	e59f10a8 	ldr	r1, [pc, #168]	; 40010728 <_tx_queue_cleanup+0xe0>
4001067c:	e1500001 	cmp	r0, r1
40010680:	1a000026 	bne	40010720 <_tx_queue_cleanup+0xd8>
40010684:	e3a00000 	mov	r0, #0
40010688:	e5840068 	str	r0, [r4, #104]	; 0x68
4001068c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010690:	e1500004 	cmp	r0, r4
40010694:	1a000002 	bne	400106a4 <_tx_queue_cleanup+0x5c>
40010698:	e3a00000 	mov	r0, #0
4001069c:	e5870028 	str	r0, [r7, #40]	; 0x28
400106a0:	ea000007 	b	400106c4 <_tx_queue_cleanup+0x7c>
400106a4:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400106a8:	e5870028 	str	r0, [r7, #40]	; 0x28
400106ac:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400106b0:	e5941070 	ldr	r1, [r4, #112]	; 0x70
400106b4:	e5810074 	str	r0, [r1, #116]	; 0x74
400106b8:	e5940070 	ldr	r0, [r4, #112]	; 0x70
400106bc:	e5941074 	ldr	r1, [r4, #116]	; 0x74
400106c0:	e5810070 	str	r0, [r1, #112]	; 0x70
400106c4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
400106c8:	e2400001 	sub	r0, r0, #1
400106cc:	e587002c 	str	r0, [r7, #44]	; 0x2c
400106d0:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400106d4:	e3500005 	cmp	r0, #5
400106d8:	1a000010 	bne	40010720 <_tx_queue_cleanup+0xd8>
400106dc:	e5970010 	ldr	r0, [r7, #16]
400106e0:	e3500000 	cmp	r0, #0
400106e4:	0a000002 	beq	400106f4 <_tx_queue_cleanup+0xac>
400106e8:	e3a0000b 	mov	r0, #11
400106ec:	e5840084 	str	r0, [r4, #132]	; 0x84
400106f0:	ea000001 	b	400106fc <_tx_queue_cleanup+0xb4>
400106f4:	e3a0000a 	mov	r0, #10
400106f8:	e5840084 	str	r0, [r4, #132]	; 0x84
400106fc:	e59f0028 	ldr	r0, [pc, #40]	; 4001072c <_tx_queue_cleanup+0xe4>
40010700:	e5900000 	ldr	r0, [r0]
40010704:	e2800001 	add	r0, r0, #1
40010708:	e59f101c 	ldr	r1, [pc, #28]	; 4001072c <_tx_queue_cleanup+0xe4>
4001070c:	e5810000 	str	r0, [r1]
40010710:	e121f005 	msr	CPSR_c, r5
40010714:	e1a00004 	mov	r0, r4
40010718:	ebfffac1 	bl	4000f224 <_tx_thread_system_resume>
4001071c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010720:	e121f005 	msr	CPSR_c, r5
40010724:	eafffffc 	b	4001071c <_tx_queue_cleanup+0xd4>
40010728:	51554555 	.word	0x51554555
4001072c:	40030e50 	.word	0x40030e50

40010730 <strcpy>:
40010730:	e0202001 	eor	r2, r0, r1
40010734:	e1a0c000 	mov	ip, r0
40010738:	e3120003 	tst	r2, #3
4001073c:	1a000032 	bne	4001080c <strcpy+0xdc>
40010740:	e3110003 	tst	r1, #3
40010744:	1a000021 	bne	400107d0 <strcpy+0xa0>
40010748:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
4001074c:	e3a05001 	mov	r5, #1
40010750:	e1855405 	orr	r5, r5, r5, lsl #8
40010754:	e1855805 	orr	r5, r5, r5, lsl #16
40010758:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
4001075c:	e3110004 	tst	r1, #4
40010760:	e4913004 	ldr	r3, [r1], #4
40010764:	0a000005 	beq	40010780 <strcpy+0x50>
40010768:	e0432005 	sub	r2, r3, r5
4001076c:	e1d22003 	bics	r2, r2, r3
40010770:	e1120385 	tst	r2, r5, lsl #7
40010774:	048c3004 	streq	r3, [ip], #4
40010778:	04913004 	ldreq	r3, [r1], #4
4001077c:	1a00000c 	bne	400107b4 <strcpy+0x84>
40010780:	e4914004 	ldr	r4, [r1], #4
40010784:	e0432005 	sub	r2, r3, r5
40010788:	e1d22003 	bics	r2, r2, r3
4001078c:	e1120385 	tst	r2, r5, lsl #7
40010790:	e0442005 	sub	r2, r4, r5
40010794:	1a000006 	bne	400107b4 <strcpy+0x84>
40010798:	e48c3004 	str	r3, [ip], #4
4001079c:	e1d22004 	bics	r2, r2, r4
400107a0:	e1120385 	tst	r2, r5, lsl #7
400107a4:	04913004 	ldreq	r3, [r1], #4
400107a8:	048c4004 	streq	r4, [ip], #4
400107ac:	0afffff3 	beq	40010780 <strcpy+0x50>
400107b0:	e1a03004 	mov	r3, r4
400107b4:	e4cc3001 	strb	r3, [ip], #1
400107b8:	e31300ff 	tst	r3, #255	; 0xff
400107bc:	e1a03463 	ror	r3, r3, #8
400107c0:	1afffffb 	bne	400107b4 <strcpy+0x84>
400107c4:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
400107c8:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
400107cc:	e12fff1e 	bx	lr
400107d0:	e3110001 	tst	r1, #1
400107d4:	0a000003 	beq	400107e8 <strcpy+0xb8>
400107d8:	e4d12001 	ldrb	r2, [r1], #1
400107dc:	e4cc2001 	strb	r2, [ip], #1
400107e0:	e3520000 	cmp	r2, #0
400107e4:	012fff1e 	bxeq	lr
400107e8:	e3110002 	tst	r1, #2
400107ec:	0affffd5 	beq	40010748 <strcpy+0x18>
400107f0:	e0d120b2 	ldrh	r2, [r1], #2
400107f4:	e31200ff 	tst	r2, #255	; 0xff
400107f8:	10cc20b2 	strhne	r2, [ip], #2
400107fc:	05cc2000 	strbeq	r2, [ip]
40010800:	13120cff 	tstne	r2, #65280	; 0xff00
40010804:	1affffcf 	bne	40010748 <strcpy+0x18>
40010808:	e12fff1e 	bx	lr
4001080c:	e4d12001 	ldrb	r2, [r1], #1
40010810:	e4cc2001 	strb	r2, [ip], #1
40010814:	e3520000 	cmp	r2, #0
40010818:	1afffffb 	bne	4001080c <strcpy+0xdc>
4001081c:	e12fff1e 	bx	lr

40010820 <strlen>:
40010820:	e3c01003 	bic	r1, r0, #3
40010824:	e2100003 	ands	r0, r0, #3
40010828:	e2600000 	rsb	r0, r0, #0
4001082c:	e4913004 	ldr	r3, [r1], #4
40010830:	e280c004 	add	ip, r0, #4
40010834:	e1a0c18c 	lsl	ip, ip, #3
40010838:	e3e02000 	mvn	r2, #0
4001083c:	11833c32 	orrne	r3, r3, r2, lsr ip
40010840:	e3a0c001 	mov	ip, #1
40010844:	e18cc40c 	orr	ip, ip, ip, lsl #8
40010848:	e18cc80c 	orr	ip, ip, ip, lsl #16
4001084c:	e043200c 	sub	r2, r3, ip
40010850:	e1c22003 	bic	r2, r2, r3
40010854:	e012238c 	ands	r2, r2, ip, lsl #7
40010858:	04913004 	ldreq	r3, [r1], #4
4001085c:	02800004 	addeq	r0, r0, #4
40010860:	0afffff9 	beq	4001084c <strlen+0x2c>
40010864:	e31300ff 	tst	r3, #255	; 0xff
40010868:	12800001 	addne	r0, r0, #1
4001086c:	13130cff 	tstne	r3, #65280	; 0xff00
40010870:	12800001 	addne	r0, r0, #1
40010874:	131308ff 	tstne	r3, #16711680	; 0xff0000
40010878:	12800001 	addne	r0, r0, #1
4001087c:	e12fff1e 	bx	lr

40010880 <__aeabi_uidiv>:
40010880:	e2512001 	subs	r2, r1, #1
40010884:	012fff1e 	bxeq	lr
40010888:	3a000036 	bcc	40010968 <__aeabi_uidiv+0xe8>
4001088c:	e1500001 	cmp	r0, r1
40010890:	9a000022 	bls	40010920 <__aeabi_uidiv+0xa0>
40010894:	e1110002 	tst	r1, r2
40010898:	0a000023 	beq	4001092c <__aeabi_uidiv+0xac>
4001089c:	e311020e 	tst	r1, #-536870912	; 0xe0000000
400108a0:	01a01181 	lsleq	r1, r1, #3
400108a4:	03a03008 	moveq	r3, #8
400108a8:	13a03001 	movne	r3, #1
400108ac:	e3510201 	cmp	r1, #268435456	; 0x10000000
400108b0:	31510000 	cmpcc	r1, r0
400108b4:	31a01201 	lslcc	r1, r1, #4
400108b8:	31a03203 	lslcc	r3, r3, #4
400108bc:	3afffffa 	bcc	400108ac <__aeabi_uidiv+0x2c>
400108c0:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
400108c4:	31510000 	cmpcc	r1, r0
400108c8:	31a01081 	lslcc	r1, r1, #1
400108cc:	31a03083 	lslcc	r3, r3, #1
400108d0:	3afffffa 	bcc	400108c0 <__aeabi_uidiv+0x40>
400108d4:	e3a02000 	mov	r2, #0
400108d8:	e1500001 	cmp	r0, r1
400108dc:	20400001 	subcs	r0, r0, r1
400108e0:	21822003 	orrcs	r2, r2, r3
400108e4:	e15000a1 	cmp	r0, r1, lsr #1
400108e8:	204000a1 	subcs	r0, r0, r1, lsr #1
400108ec:	218220a3 	orrcs	r2, r2, r3, lsr #1
400108f0:	e1500121 	cmp	r0, r1, lsr #2
400108f4:	20400121 	subcs	r0, r0, r1, lsr #2
400108f8:	21822123 	orrcs	r2, r2, r3, lsr #2
400108fc:	e15001a1 	cmp	r0, r1, lsr #3
40010900:	204001a1 	subcs	r0, r0, r1, lsr #3
40010904:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010908:	e3500000 	cmp	r0, #0
4001090c:	11b03223 	lsrsne	r3, r3, #4
40010910:	11a01221 	lsrne	r1, r1, #4
40010914:	1affffef 	bne	400108d8 <__aeabi_uidiv+0x58>
40010918:	e1a00002 	mov	r0, r2
4001091c:	e12fff1e 	bx	lr
40010920:	03a00001 	moveq	r0, #1
40010924:	13a00000 	movne	r0, #0
40010928:	e12fff1e 	bx	lr
4001092c:	e3510801 	cmp	r1, #65536	; 0x10000
40010930:	21a01821 	lsrcs	r1, r1, #16
40010934:	23a02010 	movcs	r2, #16
40010938:	33a02000 	movcc	r2, #0
4001093c:	e3510c01 	cmp	r1, #256	; 0x100
40010940:	21a01421 	lsrcs	r1, r1, #8
40010944:	22822008 	addcs	r2, r2, #8
40010948:	e3510010 	cmp	r1, #16
4001094c:	21a01221 	lsrcs	r1, r1, #4
40010950:	22822004 	addcs	r2, r2, #4
40010954:	e3510004 	cmp	r1, #4
40010958:	82822003 	addhi	r2, r2, #3
4001095c:	908220a1 	addls	r2, r2, r1, lsr #1
40010960:	e1a00230 	lsr	r0, r0, r2
40010964:	e12fff1e 	bx	lr
40010968:	e3500000 	cmp	r0, #0
4001096c:	13e00000 	mvnne	r0, #0
40010970:	ea000059 	b	40010adc <__aeabi_idiv0>

40010974 <__aeabi_uidivmod>:
40010974:	e3510000 	cmp	r1, #0
40010978:	0afffffa 	beq	40010968 <__aeabi_uidiv+0xe8>
4001097c:	e92d4003 	push	{r0, r1, lr}
40010980:	ebffffbe 	bl	40010880 <__aeabi_uidiv>
40010984:	e8bd4006 	pop	{r1, r2, lr}
40010988:	e0030092 	mul	r3, r2, r0
4001098c:	e0411003 	sub	r1, r1, r3
40010990:	e12fff1e 	bx	lr

40010994 <__aeabi_idiv>:
40010994:	e3510000 	cmp	r1, #0
40010998:	0a000043 	beq	40010aac <.divsi3_skip_div0_test+0x110>

4001099c <.divsi3_skip_div0_test>:
4001099c:	e020c001 	eor	ip, r0, r1
400109a0:	42611000 	rsbmi	r1, r1, #0
400109a4:	e2512001 	subs	r2, r1, #1
400109a8:	0a000027 	beq	40010a4c <.divsi3_skip_div0_test+0xb0>
400109ac:	e1b03000 	movs	r3, r0
400109b0:	42603000 	rsbmi	r3, r0, #0
400109b4:	e1530001 	cmp	r3, r1
400109b8:	9a000026 	bls	40010a58 <.divsi3_skip_div0_test+0xbc>
400109bc:	e1110002 	tst	r1, r2
400109c0:	0a000028 	beq	40010a68 <.divsi3_skip_div0_test+0xcc>
400109c4:	e311020e 	tst	r1, #-536870912	; 0xe0000000
400109c8:	01a01181 	lsleq	r1, r1, #3
400109cc:	03a02008 	moveq	r2, #8
400109d0:	13a02001 	movne	r2, #1
400109d4:	e3510201 	cmp	r1, #268435456	; 0x10000000
400109d8:	31510003 	cmpcc	r1, r3
400109dc:	31a01201 	lslcc	r1, r1, #4
400109e0:	31a02202 	lslcc	r2, r2, #4
400109e4:	3afffffa 	bcc	400109d4 <.divsi3_skip_div0_test+0x38>
400109e8:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
400109ec:	31510003 	cmpcc	r1, r3
400109f0:	31a01081 	lslcc	r1, r1, #1
400109f4:	31a02082 	lslcc	r2, r2, #1
400109f8:	3afffffa 	bcc	400109e8 <.divsi3_skip_div0_test+0x4c>
400109fc:	e3a00000 	mov	r0, #0
40010a00:	e1530001 	cmp	r3, r1
40010a04:	20433001 	subcs	r3, r3, r1
40010a08:	21800002 	orrcs	r0, r0, r2
40010a0c:	e15300a1 	cmp	r3, r1, lsr #1
40010a10:	204330a1 	subcs	r3, r3, r1, lsr #1
40010a14:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010a18:	e1530121 	cmp	r3, r1, lsr #2
40010a1c:	20433121 	subcs	r3, r3, r1, lsr #2
40010a20:	21800122 	orrcs	r0, r0, r2, lsr #2
40010a24:	e15301a1 	cmp	r3, r1, lsr #3
40010a28:	204331a1 	subcs	r3, r3, r1, lsr #3
40010a2c:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010a30:	e3530000 	cmp	r3, #0
40010a34:	11b02222 	lsrsne	r2, r2, #4
40010a38:	11a01221 	lsrne	r1, r1, #4
40010a3c:	1affffef 	bne	40010a00 <.divsi3_skip_div0_test+0x64>
40010a40:	e35c0000 	cmp	ip, #0
40010a44:	42600000 	rsbmi	r0, r0, #0
40010a48:	e12fff1e 	bx	lr
40010a4c:	e13c0000 	teq	ip, r0
40010a50:	42600000 	rsbmi	r0, r0, #0
40010a54:	e12fff1e 	bx	lr
40010a58:	33a00000 	movcc	r0, #0
40010a5c:	01a00fcc 	asreq	r0, ip, #31
40010a60:	03800001 	orreq	r0, r0, #1
40010a64:	e12fff1e 	bx	lr
40010a68:	e3510801 	cmp	r1, #65536	; 0x10000
40010a6c:	21a01821 	lsrcs	r1, r1, #16
40010a70:	23a02010 	movcs	r2, #16
40010a74:	33a02000 	movcc	r2, #0
40010a78:	e3510c01 	cmp	r1, #256	; 0x100
40010a7c:	21a01421 	lsrcs	r1, r1, #8
40010a80:	22822008 	addcs	r2, r2, #8
40010a84:	e3510010 	cmp	r1, #16
40010a88:	21a01221 	lsrcs	r1, r1, #4
40010a8c:	22822004 	addcs	r2, r2, #4
40010a90:	e3510004 	cmp	r1, #4
40010a94:	82822003 	addhi	r2, r2, #3
40010a98:	908220a1 	addls	r2, r2, r1, lsr #1
40010a9c:	e35c0000 	cmp	ip, #0
40010aa0:	e1a00233 	lsr	r0, r3, r2
40010aa4:	42600000 	rsbmi	r0, r0, #0
40010aa8:	e12fff1e 	bx	lr
40010aac:	e3500000 	cmp	r0, #0
40010ab0:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010ab4:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010ab8:	ea000007 	b	40010adc <__aeabi_idiv0>

40010abc <__aeabi_idivmod>:
40010abc:	e3510000 	cmp	r1, #0
40010ac0:	0afffff9 	beq	40010aac <.divsi3_skip_div0_test+0x110>
40010ac4:	e92d4003 	push	{r0, r1, lr}
40010ac8:	ebffffb3 	bl	4001099c <.divsi3_skip_div0_test>
40010acc:	e8bd4006 	pop	{r1, r2, lr}
40010ad0:	e0030092 	mul	r3, r2, r0
40010ad4:	e0411003 	sub	r1, r1, r3
40010ad8:	e12fff1e 	bx	lr

40010adc <__aeabi_idiv0>:
40010adc:	e12fff1e 	bx	lr

40010ae0 <DelayArray>:
40010ae0:	010402bc 01040104 010402bc 01040104     ................
40010af0:	01040104 01040104 01040104 01040104     ................
40010b00:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010b10:	02bc0104 010402bc 010402bc 010401f4     ................
40010b20:	01040104 01040104 01040104 01040104     ................
40010b30:	01040104 01040104 00000000 00000000     ................
	...
40010b60:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010b70:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010b80:	75657551 73252065 61747320 25206574     Queue %s state %
40010b90:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010ba0:	68632065 206b6365 75657571 20444965     e check queueID 
40010bb0:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010bc0:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010bd0:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010be0:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010bf0:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010c00:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010c10:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010c20:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010c30:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010c40:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010c50:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010c60:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010c70:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010c80:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010c90:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010ca0:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010cb0:	00000a0d                                ....

40010cb4 <CyFxUSBDeviceDscr>:
40010cb4:	02000112 400102ef 30621bbd 02010000     .......@..b0....
40010cc4:	00000100                                ....

40010cc8 <CyFxUSBDeviceDscrSS>:
40010cc8:	03000112 090102ef 30621bbd 02010000     ..........b0....
40010cd8:	00000100                                ....

40010cdc <CyFxUSBDeviceQualDscr>:
40010cdc:	0200060a 400102ef 00000001              .......@....

40010ce8 <CyFxUSBFSConfigDscr>:
40010ce8:	00090209 80000100 00000032              ........2...

40010cf4 <CyFxUSBHSConfigDscr>:
40010cf4:	00dd0209 80000102 000b08fa 00030e02     ................
40010d04:	00040900 010e0100 240d0000 50010001     ...........$...P
40010d14:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010d24:	0a03e800 059e0300 05240c00 02580102     ..........$...X.
40010d34:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010d44:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40010d54:	03240900 00010104 05070003 04000382     ..$.............
40010d64:	03250501 04090040 0e010001 0e000002     ..%.@...........
40010d74:	57010124 04008300 01010102 04241b00     $..W..........$.
40010d84:	55590101 00003259 00800010 3800aa00     ..YUY2.........8
40010d94:	0110719b 00000608 0105241e 68028002     .q.......$.....h
40010da4:	d4e00001 d4e0000e 0fd2000e 05161500     ................
40010db4:	16150100 240a0005 80010003 00016802     .......$.....h..
40010dc4:	000d2406 05070000 02000283 00000001     .$..............

40010dd4 <CyFxUSBBOSDscr>:
40010dd4:	00160f05 02100702 00000000 0003100a     ................
40010de4:	0003000e 00000000                       ........

40010dec <CyFxUSBSSConfigDscr>:
40010dec:	00e90209 80000102 000b0864 00030e02     ........d.......
40010dfc:	00040900 010e0100 240d0000 50010001     ...........$...P
40010e0c:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010e1c:	0a038e00 059e0300 05240c00 02580102     ..........$...X.
40010e2c:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010e3c:	8e8d9649 76961f36 02010b50 07d7ff03     I...6..vP.......
40010e4c:	03240900 00010104 05070003 04000382     ..$.............
40010e5c:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40010e6c:	00020e01 01240e00 83005701 01020400     ......$..W......
40010e7c:	1b000101 01010424 32595559 00100000     ....$...YUY2....
40010e8c:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40010e9c:	00020105 0002d005 00317040 003b5380     ........@p1..S;.
40010eac:	0a001fa4 0100028b 00028b0a 0003240a     .............$..
40010ebc:	d0050001 24060002 0000000d 02830507     .......$........
40010ecc:	06010400 00000f30 00000000              ....0.......

40010ed8 <CyFxUSBStringLangIDDscr>:
40010ed8:	04090304                                ....

40010edc <CyFxUSBManufactureDscr>:
40010edc:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
40010eec:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
40010efc:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40010f0c:	006f0069 0073006e                       i.o.n.s.

40010f14 <CyFxUSBProductDscr>:
40010f14:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40010f24:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40010f34:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40010f44:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40010f54:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40010f64:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40010f74:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40010f84:	64612065 73657264 73692073 746f6e20     e address is not
40010f94:	6c617620 0a216469 00000000 4f525245      valid!.....ERRO
40010fa4:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
40010fb4:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
40010fc4:	74655320 6c615620 45206575 726f7272      Set Value Error
40010fd4:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40010fe4:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
40010ff4:	0a0d6575 00000000 20656854 6b636974     ue......The tick
40011004:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40011014:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40011024:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40011034:	20656854 20746547 746e6f63 206c6f72     The Get control 
40011044:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40011054:	20656854 20746553 746e6f63 206c6f72     The Set control 
40011064:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40011074:	00000a0d                                ....

40011078 <ExTime>:
40011078:	004e009c 00140027 0005000a 00010002     ..N.'...........

40011088 <CyFxGpifConfig>:
40011088:	0000000f 4003066c 4003078c 00000005     ....l..@...@....
40011098:	40030660 0000004c 4003079c              `..@L......@

400110a4 <CyFxGpifConfig_usb2>:
400110a4:	00000093 400308dc 40030a8c 00000008     .......@...@....
400110b4:	400308cc 0000004c 40030b20 20433249     ...@L... ..@I2C 
400110c4:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
400110d4:	20656854 6d6d6f63 20646e61 75657571     The command queu
400110e4:	73692065 61657220 25207964 64252064     e is ready %d %d
400110f4:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
40011104:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
40011114:	65666675 43203a72 2065646f 6425203d     uffer: Code = %d
40011124:	6973202c 3d20657a 2c782520 616d6420     , size = %x, dma
40011134:	656e6f44 0d782520 0000000a 45534552     Done %x.....RESE
40011144:	6e652054 6e756f63 65726574 2e2e2e64     T encountered...
40011154:	78257830 25783020 000a0d78 50535553     0x%x 0x%x...SUSP
40011164:	20444e45 6f636e65 65746e75 2e646572     END encountered.
40011174:	78302e2e 30207825 0d782578 0000000a     ..0x%x 0x%x.....
40011184:	20425355 63736964 656e6e6f 64657463     USB disconnected
40011194:	302e2e2e 20782578 78257830 00000a0d     ...0x%x 0x%x....
400111a4:	20746553 465f5943 56555f58 49565f43     Set CY_FX_UVC_VI
400111b4:	5f4f4544 544e4f43 5f4c4f52 55514552     DEO_CONTROL_REQU
400111c4:	5f545345 4e455645 61462054 64656c69     EST_EVENT Failed
400111d4:	0a782520 00000000 20746553 465f5943      %x.....Set CY_F
400111e4:	56555f58 49565f43 5f4f4544 45525453     X_UVC_VIDEO_STRE
400111f4:	525f4d41 45555145 455f5453 544e4556     AM_REQUEST_EVENT
40011204:	69614620 2064656c 000a7825 65746c41      Failed %x..Alte
40011214:	74616e72 65732065 6e697474 2e302067     rnate setting 0.
40011224:	000a0d2e 61656c43 65662072 72757461     ....Clear featur
40011234:	65722065 73657571 65642074 74636574     e request detect
40011244:	2e2e6465 00000a0d 63200a0d 696d6d6f     ed........ commi
40011254:	666f6574 61747320 3d206574 00642520     teof state = %d.
40011264:	6e616843 206c656e 20746553 70617257     Channel Set Wrap
40011274:	66207055 656c6961 45202c64 726f7272     Up failed, Error
40011284:	646f6320 203d2065 0a0d6425 00000000      code = %d......
40011294:	6f727245 61682072 656c646e 2e2e2e72     Error handler...
400112a4:	00000a0d 6d6d6f43 45207469 6620464f     ....Commit EOF f
400112b4:	656c6961 000a2164 20656854 20433249     ailed!..The I2C 
400112c4:	6d6d6f63 20646e61 30207369 20782578     command is 0x%x 
400112d4:	78257830 25783020 78302078 30207825     0x%x 0x%x 0x%x 0
400112e4:	20782578 78257830 25783020 78302078     x%x 0x%x 0x%x 0x
400112f4:	30207825 20782578 78257830 25783020     %x 0x%x 0x%x 0x%
40011304:	000a0d78 6b636162 67696c20 63207468     x...back light c
40011314:	65706d6f 7461736e 206e6f69 74746573     ompensation sett
40011324:	20676e69 6e207369 6320746f 6572726f     ing is not corre
40011334:	202e7463 25206425 000a0d64 20656854     ct. %d %d...The 
40011344:	20433249 72727563 20746e65 61746164     I2C current data
40011354:	20736920 20746f6e 69617661 6c62616c      is not availabl
40011364:	74202e65 61207972 6e696167 6425202e     e. try again. %d
40011374:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
40011384:	6e657320 6f742074 736f6820 25202e74      sent to host. %
40011394:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
400113a4:	4d707845 43474126 746f6720 206e6574     ExpM&AGC gotten 
400113b4:	6d6f7266 736f6820 25202e74 64252064     from host. %d %d
400113c4:	6425203b 0d642520 0000000a 20657845     ; %d %d.....Exe 
400113d4:	6576656c 25202e6c 64252064 6425203b     level. %d %d; %d
400113e4:	0d642520 0000000a 20434c42 2e746573      %d.....BLC set.
400113f4:	20642520 203b6425 25206425 000a0d64      %d %d; %d %d...
40011404:	20656854 20746567 61746164 6f726620     The get data fro
40011414:	6f68206d 66207473 206c6961 6f727265     m host fail erro
40011424:	6f632072 25206564 0a0d2e64 00000000     r code %d.......
40011434:	20656854 75716552 20747365 78257830     The Request 0x%x
40011444:	72617020 74656d61 67207265 66207465      parameter get f
40011454:	206d6f72 74736f68 25783020 78302078     rom host 0x%x 0x
40011464:	2f207825 6e657320 6f742064 736f6820     %x / send to hos
40011474:	78302074 30207825 0d782578 0000000a     t 0x%x 0x%x.....
40011484:	6d6f6f5a 20704f20 65636572 73657669     Zoom Op receives
40011494:	54432820 78302029 30207825 20782578      (CT) 0x%x 0x%x 
400114a4:	78257830 00000a0d 61666564 20746c75     0x%x....default 
400114b4:	656c6573 726f7463 54432820 78302029     selector (CT) 0x
400114c4:	30207825 0d782578 0000000a 61666564     %x 0x%x.....defa
400114d4:	20746c75 75716572 20747365 29544328     ult request (CT)
400114e4:	25783020 78302078 0a0d7825 00000000      0x%x 0x%x......
400114f4:	20656854 75716552 20747365 78257830     The Request 0x%x
40011504:	72617020 74656d61 67207265 66207465      parameter get f
40011514:	206d6f72 74736f68 54432820 78302029     rom host (CT) 0x
40011524:	30207825 20782578 78257830 73202f20     %x 0x%x 0x%x / s
40011534:	20646e65 68206f74 2074736f 78257830     end to host 0x%x
40011544:	25783020 78302078 202c7825 0a0d6425      0x%x 0x%x, %d..
40011554:	00000000 20425355 65657073 203d2064     ....USB speed = 
40011564:	65206425 666e6576 2067616c 7830203d     %d evenflag = 0x
40011574:	62207825 7165526d 65707954 30203d20     %x bmReqType = 0
40011584:	0d782578 6552620a 73657571 203d2074     x%x..bRequest = 
40011594:	78257830 61567720 2065756c 7830203d     0x%x wValue = 0x
400115a4:	77207825 65646e49 203d2078 78257830     %x wIndex = 0x%x
400115b4:	654c7720 6874676e 30203d20 20782578      wLength = 0x%x 
400115c4:	6c667369 30206761 0d782578 0000000a     isflag 0x%x.....
400115d4:	20656854 61666564 20746c75 75746573     The default setu
400115e4:	65722070 73657571 61762074 2065756c     p request value 
400115f4:	78257830 25783020 000a0d78 20746553     0x%x 0x%x...Set 
40011604:	465f5943 56555f58 54535f43 4d414552     CY_FX_UVC_STREAM
40011614:	4556455f 6620544e 656c6961 78252064     _EVENT failed %x
40011624:	0000000a 20746547 20435655 6c697473     ....Get UVC stil
40011634:	7274206c 65676769 6f632072 6f72746e     l trigger contro
40011644:	6425206c 0d642520 0000000a 20435655     l %d %d.....UVC 
40011654:	6c697473 7274206c 65676769 6f632072     still trigger co
40011664:	6f72746e 6166206c 25206c69 64252064     ntrol fail %d %d
40011674:	00000a0d 6c696146 74206465 6573206f     ....Failed to se
40011684:	6920646e 7265746e 74707572 61747320     nd interrupt sta
40011694:	2c737574 72724520 6320726f 2065646f     tus, Error code 
400116a4:	6425203d 00000a0d 20656854 20746573     = %d....The set 
400116b4:	20666564 61746164 25783020 30202c78     def data 0x%x, 0
400116c4:	2e782578 00000a0d 20656854 20746573     x%x.....The set 
400116d4:	20666564 61746164 25783020 30202c78     def data 0x%x, 0
400116e4:	2c782578 25783020 30202c78 2c782578     x%x, 0x%x, 0x%x,
400116f4:	25783020 30202c78 2e782578 00000a0d      0x%x, 0x%x.....
40011704:	54524155 696e6920 6c616974 74617a69     UART initializat
40011714:	206e6f69 6c696166 0a216465 00000000     ion failed!.....
40011724:	20433249 74696e69 696c6169 6974617a     I2C initializati
40011734:	66206e6f 656c6961 000a2164 20433249     on failed!..I2C 
40011744:	666e6f63 72756769 6f697461 6166206e     configuration fa
40011754:	64656c69 00000a21 20435655 61657243     iled!...UVC Crea
40011764:	45206574 746e6576 69616620 2c64656c     te Event failed,
40011774:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011784:	0000000a 4f495047 696e4920 61662074     ....GPIO Init fa
40011794:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
400117a4:	25203d20 00000a64 4f495047 65764f20      = %d...GPIO Ove
400117b4:	64697272 61662065 64656c69 7245202c     rride failed, Er
400117c4:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
400117d4:	4f495047 29303228 65764f20 64697272     GPIO(20) Overrid
400117e4:	61662065 64656c69 7245202c 20726f72     e failed, Error 
400117f4:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011804:	29343228 65764f20 64697272 61662065     (24) Override fa
40011814:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011824:	25203d20 00000a64 4f495047 74655320      = %d...GPIO Set
40011834:	65722820 20746573 20293232 666e6f43      (reset 22) Conf
40011844:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
40011854:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011864:	74655320 6f702820 20726577 20293032      Set (power 20) 
40011874:	666e6f43 45206769 726f7272 7245202c     Config Error, Er
40011884:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011894:	4f495047 74655320 6e732820 73207061     GPIO Set (snap s
400118a4:	20746f68 20293432 666e6f43 45206769     hot 24) Config E
400118b4:	726f7272 7245202c 20726f72 65646f43     rror, Error Code
400118c4:	25203d20 00000a64 20424950 636e7546      = %d...PIB Func
400118d4:	6e6f6974 69614620 2064656c 53206f74     tion Failed to S
400118e4:	74726174 7245202c 20726f72 65646f43     tart, Error Code
400118f4:	25203d20 00000a64 20425355 636e7546      = %d...USB Func
40011904:	6e6f6974 69614620 2064656c 53206f74     tion Failed to S
40011914:	74726174 7245202c 20726f72 65646f43     tart, Error Code
40011924:	25203d20 00000a64 20425355 20746553      = %d...USB Set 
40011934:	70646e45 746e696f 6e6f6320 20676966     Endpoint config 
40011944:	6c696166 202c6465 6f727245 6f432072     failed, Error Co
40011954:	3d206564 0a642520 00000000 20414d44     de = %d.....DMA 
40011964:	65746e49 70757272 74532074 73757461     Interrupt Status
40011974:	61684320 6c656e6e 65724320 6f697461      Channel Creatio
40011984:	6146206e 64656c69 7245202c 20726f72     n Failed, Error 
40011994:	65646f43 25203d20 00000a64 6c696146     Code = %d...Fail
400119a4:	74206465 6c61206f 61636f6c 6d206574     ed to allocate m
400119b4:	726f6d65 6f662079 6e692072 72726574     emory for interr
400119c4:	20747075 74617473 62207375 65666675     upt status buffe
400119d4:	000a0d72 20414d44 6e616843 206c656e     r...DMA Channel 
400119e4:	61657243 6e6f6974 69614620 2c64656c     Creation Failed,
400119f4:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011a04:	0000000a 20425355 6e6e6f43 20746365     ....USB Connect 
40011a14:	6c696166 202c6465 6f727245 6f432072     failed, Error Co
40011a24:	3d206564 0a642520 00000000 20414d44     de = %d.....DMA 
40011a34:	6e616843 206c656e 65736552 61462074     Channel Reset Fa
40011a44:	64656c69 7245202c 20726f72 65646f43     iled, Error Code
40011a54:	25203d20 00000a64 20414d44 6e616843      = %d...DMA Chan
40011a64:	206c656e 20746553 6e617254 72656673     nel Set Transfer
40011a74:	69614620 2c64656c 72724520 4320726f      Failed, Error C
40011a84:	2065646f 6425203d 0000000a 20414d44     ode = %d....DMA 
40011a94:	6e616843 206c656e 20746553 6e617254     Channel Set Tran
40011aa4:	72656673 69614620 2c64656c 72724520     sfer Failed, Err
40011ab4:	4320726f 2065646f 6425203d 00000a0d     or Code = %d....
40011ac4:	73200a0d 72657075 69706720 00000066     .. super gpif...
40011ad4:	68200a0d 20686769 66697067 00000000     .. high gpif....
40011ae4:	64616f4c 20676e69 46495047 6e6f4320     Loading GPIF Con
40011af4:	75676966 69746172 66206e6f 656c6961     figuration faile
40011b04:	45202c64 726f7272 646f4320 203d2065     d, Error Code = 
40011b14:	0a0d6425 00000000 72617453 676e6974     %d......Starting
40011b24:	49504720 74732046 20657461 6863616d      GPIF state mach
40011b34:	20656e69 6c696166 202c6465 6f727245     ine failed, Erro
40011b44:	6f432072 3d206564 0d642520 0000000a     r Code = %d.....
40011b54:	553a3033 41204356 54207070 61657268     30:UVC App Threa
40011b64:	00000064 553a3133 41204356 45207070     d...31:UVC App E
40011b74:	54203050 61657268 00000064 493a3233     P0 Thread...32:I
40011b84:	41204332 43207070 204c5254 65726854     2C App CTRL Thre
40011b94:	00006461                                ad..

40011b98 <glFx3PartProperties>:
40011b98:	00000000 0000009f 00000010 0000009b     ................
40011ba8:	00000020 0000008f 00000030 0000008b      .......0.......
40011bb8:	00000004 000000ef 00000104 000000ef     ................
40011bc8:	00000184 000000af 00000154 000000e9     ........T.......
40011bd8:	000001d4 000000a9 10000004 000000ee     ................
40011be8:	10000104 000000ee 10000184 000000ae     ................
40011bf8:	10000154 000000e8 100001d4 000000a8     T...............
40011c08:	00000002 00000077 00000102 00000077     ....w.......w...
40011c18:	000001c2 00000035 000001d2 00000031     ....5.......1...
40011c28:	10000002 00000076 10000102 00000076     ....v.......v...
40011c38:	100001c2 00000034 00000258 00000199     ....4...X.......
40011c48:	00000248 0000019d 00000458 00000299     H.......X.......
40011c58:	00000448 0000029d 00000848 0000049d     H.......H.......
40011c68:	10000448 0000029c                       H.......

40011c70 <glPmmcCsdValue>:
40011c70:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

40011c80 <glPmmcExtCsdValue>:
40011c80:	40040000 03020200 00000404 32321414     ...@..........22
40011c90:	00406464 00000000                       dd@.....

40011c98 <glConstGpifDefaults>:
40011c98:	00000220 00000000 00000000 00000000      ...............
40011ca8:	000f0000 00000000 00000000 00000082     ................
40011cb8:	00000782 00000000 00000000 00000000     ................
	...
40011d0c:	00000006 00000000 0000ffff 0000010a     ................
40011d1c:	00000000 0000ffff 00000000 0000ffff     ................
40011d2c:	0000010a 00000000 0000ffff 00000000     ................
	...
40011d94:	00010400 00010400 00010400 00010400     ................
40011da4:	10000000 00000000 00000000 00000000     ................
	...
40011dc4:	00000001                                ....

40011dc8 <glGpifConstMaxState>:
40011dc8:	1f3f7fff                                ..?.

40011dcc <CyU3PSSEpTypeMap>:
40011dcc:	01020003                                ....

40011dd0 <glUsbMaxPacketSize>:
40011dd0:	000003ff 00000040 00000040 00000400     ....@...@.......
40011de0:	00000200 00000400 00000400 00000400     ................
40011df0:	00000400                                ....

40011df4 <glUsb3CompliancePatterns>:
40011df4:	00000600 0000044a 00000478 000005bc     ....J...x.......
40011e04:	00000c00 000005fc 000001fc 00001400     ................
40011e14:	00001000                                ....

40011e18 <CyU3PFirmwareEntry>:
40011e18:	e59f1038 	ldr	r1, [pc, #56]	; 40011e58 <CyU3PFirmwareEntry+0x40>
40011e1c:	e3e00000 	mvn	r0, #0
40011e20:	e5810000 	str	r0, [r1]
40011e24:	e59f1030 	ldr	r1, [pc, #48]	; 40011e5c <CyU3PFirmwareEntry+0x44>
40011e28:	e2411008 	sub	r1, r1, #8
40011e2c:	e3a02a01 	mov	r2, #4096	; 0x1000
40011e30:	e3a000d3 	mov	r0, #211	; 0xd3
40011e34:	e121f000 	msr	CPSR_c, r0
40011e38:	e0811002 	add	r1, r1, r2
40011e3c:	e3c11007 	bic	r1, r1, #7
40011e40:	e1a0d001 	mov	sp, r1
40011e44:	eb000271 	bl	40012810 <CyU3PSysSetupMMU>
40011e48:	eb000620 	bl	400136d0 <CyU3PSysCheckBootState>
40011e4c:	eb000003 	bl	40011e60 <CyU3PSetupStackPtrs>
40011e50:	eb0000d1 	bl	4001219c <__CyU3PEntryKeep>
40011e54:	eaffc5e5 	b	400035f0 <CyU3PToolChainInit>
40011e58:	fffff014 	.word	0xfffff014
40011e5c:	40002000 	.word	0x40002000

40011e60 <CyU3PSetupStackPtrs>:
40011e60:	e3a01201 	mov	r1, #268435456	; 0x10000000
40011e64:	e2411008 	sub	r1, r1, #8
40011e68:	e3a02b02 	mov	r2, #2048	; 0x800
40011e6c:	e3a030df 	mov	r3, #223	; 0xdf
40011e70:	e12ff003 	msr	CPSR_fsxc, r3
40011e74:	e0811002 	add	r1, r1, r2
40011e78:	e3c11007 	bic	r1, r1, #7
40011e7c:	e1a0d001 	mov	sp, r1
40011e80:	e3a0a000 	mov	sl, #0
40011e84:	e3a0b000 	mov	fp, #0
40011e88:	e3a02c01 	mov	r2, #256	; 0x100
40011e8c:	e3a030d7 	mov	r3, #215	; 0xd7
40011e90:	e12ff003 	msr	CPSR_fsxc, r3
40011e94:	e0811002 	add	r1, r1, r2
40011e98:	e3c11007 	bic	r1, r1, #7
40011e9c:	e1a0d001 	mov	sp, r1
40011ea0:	e3a0a000 	mov	sl, #0
40011ea4:	e3a0b000 	mov	fp, #0
40011ea8:	e3a02c01 	mov	r2, #256	; 0x100
40011eac:	e3a030db 	mov	r3, #219	; 0xdb
40011eb0:	e12ff003 	msr	CPSR_fsxc, r3
40011eb4:	e0811002 	add	r1, r1, r2
40011eb8:	e3c11007 	bic	r1, r1, #7
40011ebc:	e1a0d001 	mov	sp, r1
40011ec0:	e3a0a000 	mov	sl, #0
40011ec4:	e3a0b000 	mov	fp, #0
40011ec8:	e3a02c02 	mov	r2, #512	; 0x200
40011ecc:	e3a000d1 	mov	r0, #209	; 0xd1
40011ed0:	e121f000 	msr	CPSR_c, r0
40011ed4:	e0811002 	add	r1, r1, r2
40011ed8:	e3c11007 	bic	r1, r1, #7
40011edc:	e1a0d001 	mov	sp, r1
40011ee0:	e3a0a000 	mov	sl, #0
40011ee4:	e3a0b000 	mov	fp, #0
40011ee8:	e3a02b01 	mov	r2, #1024	; 0x400
40011eec:	e3a000d2 	mov	r0, #210	; 0xd2
40011ef0:	e121f000 	msr	CPSR_c, r0
40011ef4:	e0811002 	add	r1, r1, r2
40011ef8:	e3c11007 	bic	r1, r1, #7
40011efc:	e1a0d001 	mov	sp, r1
40011f00:	e3a02a01 	mov	r2, #4096	; 0x1000
40011f04:	e3a000d3 	mov	r0, #211	; 0xd3
40011f08:	e121f000 	msr	CPSR_c, r0
40011f0c:	e0811002 	add	r1, r1, r2
40011f10:	e3c11007 	bic	r1, r1, #7
40011f14:	e1a0d001 	mov	sp, r1
40011f18:	e12fff1e 	bx	lr

40011f1c <CyU3PSysCleanDCache>:
40011f1c:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
40011f20:	1afffffd 	bne	40011f1c <CyU3PSysCleanDCache>
40011f24:	e12fff1e 	bx	lr

40011f28 <CyU3PSysClearDCache>:
40011f28:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40011f2c:	1afffffd 	bne	40011f28 <CyU3PSysClearDCache>
40011f30:	e12fff1e 	bx	lr

40011f34 <CyU3PSysFlushIRegion>:
40011f34:	e3510000 	cmp	r1, #0
40011f38:	0a00000a 	beq	40011f68 <CyU3PSysFlushIRegion+0x34>
40011f3c:	e0801001 	add	r1, r0, r1
40011f40:	e3c0001f 	bic	r0, r0, #31
40011f44:	e3a0201f 	mov	r2, #31
40011f48:	e1110002 	tst	r1, r2
40011f4c:	e0411000 	sub	r1, r1, r0
40011f50:	e1a012a1 	lsr	r1, r1, #5
40011f54:	12811001 	addne	r1, r1, #1
40011f58:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40011f5c:	e2800020 	add	r0, r0, #32
40011f60:	e2511001 	subs	r1, r1, #1
40011f64:	1afffffb 	bne	40011f58 <CyU3PSysFlushIRegion+0x24>
40011f68:	e12fff1e 	bx	lr

40011f6c <CyU3PSysClearDRegion>:
40011f6c:	e3510000 	cmp	r1, #0
40011f70:	0a00000a 	beq	40011fa0 <CyU3PSysClearDRegion+0x34>
40011f74:	e0801001 	add	r1, r0, r1
40011f78:	e3c0001f 	bic	r0, r0, #31
40011f7c:	e3a0201f 	mov	r2, #31
40011f80:	e1110002 	tst	r1, r2
40011f84:	e0411000 	sub	r1, r1, r0
40011f88:	e1a012a1 	lsr	r1, r1, #5
40011f8c:	12811001 	addne	r1, r1, #1
40011f90:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
40011f94:	e2800020 	add	r0, r0, #32
40011f98:	e2511001 	subs	r1, r1, #1
40011f9c:	1afffffb 	bne	40011f90 <CyU3PSysClearDRegion+0x24>
40011fa0:	e12fff1e 	bx	lr

40011fa4 <CyU3PSysCleanDRegion>:
40011fa4:	e3510000 	cmp	r1, #0
40011fa8:	0a00000a 	beq	40011fd8 <CyU3PSysCleanDRegion+0x34>
40011fac:	e0801001 	add	r1, r0, r1
40011fb0:	e3c0001f 	bic	r0, r0, #31
40011fb4:	e3a0201f 	mov	r2, #31
40011fb8:	e1110002 	tst	r1, r2
40011fbc:	e0411000 	sub	r1, r1, r0
40011fc0:	e1a012a1 	lsr	r1, r1, #5
40011fc4:	12811001 	addne	r1, r1, #1
40011fc8:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
40011fcc:	e2800020 	add	r0, r0, #32
40011fd0:	e2511001 	subs	r1, r1, #1
40011fd4:	1afffffb 	bne	40011fc8 <CyU3PSysCleanDRegion+0x24>
40011fd8:	e12fff1e 	bx	lr

40011fdc <CyU3PSysFlushDRegion>:
40011fdc:	e3510000 	cmp	r1, #0
40011fe0:	0a00000a 	beq	40012010 <CyU3PSysFlushDRegion+0x34>
40011fe4:	e0801001 	add	r1, r0, r1
40011fe8:	e3c0001f 	bic	r0, r0, #31
40011fec:	e3a0201f 	mov	r2, #31
40011ff0:	e1110002 	tst	r1, r2
40011ff4:	e0411000 	sub	r1, r1, r0
40011ff8:	e1a012a1 	lsr	r1, r1, #5
40011ffc:	12811001 	addne	r1, r1, #1
40012000:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40012004:	e2800020 	add	r0, r0, #32
40012008:	e2511001 	subs	r1, r1, #1
4001200c:	1afffffb 	bne	40012000 <CyU3PSysFlushDRegion+0x24>
40012010:	e12fff1e 	bx	lr

40012014 <CyU3PSysCacheIRegion>:
40012014:	e3a03000 	mov	r3, #0
40012018:	e3510000 	cmp	r1, #0
4001201c:	0a000023 	beq	400120b0 <CyU3PSysCacheIRegion+0x9c>
40012020:	e0801001 	add	r1, r0, r1
40012024:	e3c0001f 	bic	r0, r0, #31
40012028:	e3a0201f 	mov	r2, #31
4001202c:	e1110002 	tst	r1, r2
40012030:	e0411000 	sub	r1, r1, r0
40012034:	e1a012a1 	lsr	r1, r1, #5
40012038:	12811001 	addne	r1, r1, #1
4001203c:	e351003f 	cmp	r1, #63	; 0x3f
40012040:	8a00001a 	bhi	400120b0 <CyU3PSysCacheIRegion+0x9c>
40012044:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
40012048:	e20c200f 	and	r2, ip, #15
4001204c:	e3a03001 	mov	r3, #1
40012050:	e11c0003 	tst	ip, r3
40012054:	11a03083 	lslne	r3, r3, #1
40012058:	111c0003 	tstne	ip, r3
4001205c:	11a03083 	lslne	r3, r3, #1
40012060:	111c0003 	tstne	ip, r3
40012064:	11a03083 	lslne	r3, r3, #1
40012068:	1a000010 	bne	400120b0 <CyU3PSysCacheIRegion+0x9c>
4001206c:	e3510000 	cmp	r1, #0
40012070:	0a00000e 	beq	400120b0 <CyU3PSysCacheIRegion+0x9c>
40012074:	e1e03003 	mvn	r3, r3
40012078:	e203300f 	and	r3, r3, #15
4001207c:	e3ccc00f 	bic	ip, ip, #15
40012080:	e08cc003 	add	ip, ip, r3
40012084:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
40012088:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
4001208c:	e2800020 	add	r0, r0, #32
40012090:	e2511001 	subs	r1, r1, #1
40012094:	1afffffb 	bne	40012088 <CyU3PSysCacheIRegion+0x74>
40012098:	e1e0300c 	mvn	r3, ip
4001209c:	e203300f 	and	r3, r3, #15
400120a0:	e1822003 	orr	r2, r2, r3
400120a4:	e3ccc00f 	bic	ip, ip, #15
400120a8:	e00cc002 	and	ip, ip, r2
400120ac:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
400120b0:	e1a00003 	mov	r0, r3
400120b4:	e12fff1e 	bx	lr

400120b8 <CyU3PSysCacheDRegion>:
400120b8:	e3a03000 	mov	r3, #0
400120bc:	e3510000 	cmp	r1, #0
400120c0:	0a000022 	beq	40012150 <CyU3PSysCacheDRegion+0x98>
400120c4:	e0801001 	add	r1, r0, r1
400120c8:	e3c0001f 	bic	r0, r0, #31
400120cc:	e3a0201f 	mov	r2, #31
400120d0:	e1110002 	tst	r1, r2
400120d4:	e0411000 	sub	r1, r1, r0
400120d8:	e1a012a1 	lsr	r1, r1, #5
400120dc:	12811001 	addne	r1, r1, #1
400120e0:	e351003f 	cmp	r1, #63	; 0x3f
400120e4:	8a000019 	bhi	40012150 <CyU3PSysCacheDRegion+0x98>
400120e8:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
400120ec:	e20c200f 	and	r2, ip, #15
400120f0:	e3a03001 	mov	r3, #1
400120f4:	e11c0003 	tst	ip, r3
400120f8:	11a03083 	lslne	r3, r3, #1
400120fc:	111c0003 	tstne	ip, r3
40012100:	11a03083 	lslne	r3, r3, #1
40012104:	111c0003 	tstne	ip, r3
40012108:	11a03083 	lslne	r3, r3, #1
4001210c:	1a00000f 	bne	40012150 <CyU3PSysCacheDRegion+0x98>
40012110:	e3510000 	cmp	r1, #0
40012114:	0a00000d 	beq	40012150 <CyU3PSysCacheDRegion+0x98>
40012118:	e1e03003 	mvn	r3, r3
4001211c:	e203300f 	and	r3, r3, #15
40012120:	e3ccc00f 	bic	ip, ip, #15
40012124:	e08cc003 	add	ip, ip, r3
40012128:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
4001212c:	e4903020 	ldr	r3, [r0], #32
40012130:	e2511001 	subs	r1, r1, #1
40012134:	1afffffc 	bne	4001212c <CyU3PSysCacheDRegion+0x74>
40012138:	e1e0300c 	mvn	r3, ip
4001213c:	e203300f 	and	r3, r3, #15
40012140:	e1822003 	orr	r2, r2, r3
40012144:	e3ccc00f 	bic	ip, ip, #15
40012148:	e00cc002 	and	ip, ip, r2
4001214c:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
40012150:	e1a00003 	mov	r0, r3
40012154:	e12fff1e 	bx	lr

40012158 <CyU3PSysUnlockICache>:
40012158:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
4001215c:	e3c0000f 	bic	r0, r0, #15
40012160:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

40012164 <CyU3PSysUnlockDCache>:
40012164:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
40012168:	e3c0000f 	bic	r0, r0, #15
4001216c:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

40012170 <__cyu3p_exception_vectors>:
40012170:	e59ff028 	ldr	pc, [pc, #40]	; 400121a0 <__CyU3PEntryKeep+0x4>
40012174:	e59ff028 	ldr	pc, [pc, #40]	; 400121a4 <__CyU3PEntryKeep+0x8>
40012178:	e59ff028 	ldr	pc, [pc, #40]	; 400121a8 <__CyU3PEntryKeep+0xc>
4001217c:	e59ff028 	ldr	pc, [pc, #40]	; 400121ac <__CyU3PEntryKeep+0x10>
40012180:	e59ff028 	ldr	pc, [pc, #40]	; 400121b0 <__CyU3PEntryKeep+0x14>
40012184:	e59ff028 	ldr	pc, [pc, #40]	; 400121b4 <__CyU3PEntryKeep+0x18>
40012188:	e51ff120 	ldr	pc, [pc, #-288]	; 40012070 <CyU3PSysCacheIRegion+0x5c>
4001218c:	e59ff024 	ldr	pc, [pc, #36]	; 400121b8 <__CyU3PEntryKeep+0x1c>

40012190 <__CyU3PSWIHandler>:
40012190:	eafffffe 	b	40012190 <__CyU3PSWIHandler>

40012194 <__CyU3PReservedHandler>:
40012194:	eafffffe 	b	40012194 <__CyU3PReservedHandler>

40012198 <__CyU3PFiqHandler>:
40012198:	eafffffe 	b	40012198 <__CyU3PFiqHandler>

4001219c <__CyU3PEntryKeep>:
4001219c:	e12fff1e 	bx	lr
400121a0:	40011e18 	.word	0x40011e18
400121a4:	40003618 	.word	0x40003618
400121a8:	40012190 	.word	0x40012190
400121ac:	4000361c 	.word	0x4000361c
400121b0:	40003620 	.word	0x40003620
400121b4:	40012194 	.word	0x40012194
400121b8:	40012198 	.word	0x40012198

Disassembly of section i.CyU3PDevCheckDevStateStruct:

400121bc <CyU3PDevCheckDevStateStruct>:
400121bc:	e92d4038 	push	{r3, r4, r5, lr}
400121c0:	e59f4118 	ldr	r4, [pc, #280]	; 400122e0 <_etext+0x124>
400121c4:	e3a00000 	mov	r0, #0
400121c8:	e58d0000 	str	r0, [sp]
400121cc:	e5940000 	ldr	r0, [r4]
400121d0:	e59f110c 	ldr	r1, [pc, #268]	; 400122e4 <_etext+0x128>
400121d4:	e1500001 	cmp	r0, r1
400121d8:	0a000000 	beq	400121e0 <CyU3PDevCheckDevStateStruct+0x24>
400121dc:	ea00003b 	b	400122d0 <CyU3PDevCheckDevStateStruct+0x114>
400121e0:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400121e4:	e59f10fc 	ldr	r1, [pc, #252]	; 400122e8 <_etext+0x12c>
400121e8:	e1500001 	cmp	r0, r1
400121ec:	1a000005 	bne	40012208 <CyU3PDevCheckDevStateStruct+0x4c>
400121f0:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
400121f4:	e59f10f0 	ldr	r1, [pc, #240]	; 400122ec <_etext+0x130>
400121f8:	e1500001 	cmp	r0, r1
400121fc:	3a000001 	bcc	40012208 <CyU3PDevCheckDevStateStruct+0x4c>
40012200:	e594500c 	ldr	r5, [r4, #12]
40012204:	ea000001 	b	40012210 <CyU3PDevCheckDevStateStruct+0x54>
40012208:	e594000c 	ldr	r0, [r4, #12]
4001220c:	e20050ff 	and	r5, r0, #255	; 0xff
40012210:	e594000c 	ldr	r0, [r4, #12]
40012214:	e3500000 	cmp	r0, #0
40012218:	0a000003 	beq	4001222c <CyU3PDevCheckDevStateStruct+0x70>
4001221c:	e594000c 	ldr	r0, [r4, #12]
40012220:	e59f10c8 	ldr	r1, [pc, #200]	; 400122f0 <_etext+0x134>
40012224:	e1500001 	cmp	r0, r1
40012228:	9a000000 	bls	40012230 <CyU3PDevCheckDevStateStruct+0x74>
4001222c:	ea000027 	b	400122d0 <CyU3PDevCheckDevStateStruct+0x114>
40012230:	e1a0200d 	mov	r2, sp
40012234:	e1a01005 	mov	r1, r5
40012238:	e59f00a0 	ldr	r0, [pc, #160]	; 400122e0 <_etext+0x124>
4001223c:	eb00049f 	bl	400134c0 <CyU3PComputeChecksum>
40012240:	e594000c 	ldr	r0, [r4, #12]
40012244:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
40012248:	e2800a02 	add	r0, r0, #8192	; 0x2000
4001224c:	e5900000 	ldr	r0, [r0]
40012250:	e59d1000 	ldr	r1, [sp]
40012254:	e1500001 	cmp	r0, r1
40012258:	0a000000 	beq	40012260 <CyU3PDevCheckDevStateStruct+0xa4>
4001225c:	ea00001b 	b	400122d0 <CyU3PDevCheckDevStateStruct+0x114>
40012260:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012264:	e59f107c 	ldr	r1, [pc, #124]	; 400122e8 <_etext+0x12c>
40012268:	e1500001 	cmp	r0, r1
4001226c:	0a000001 	beq	40012278 <CyU3PDevCheckDevStateStruct+0xbc>
40012270:	e59f007c 	ldr	r0, [pc, #124]	; 400122f4 <_etext+0x138>
40012274:	e58400dc 	str	r0, [r4, #220]	; 0xdc
40012278:	e3a00001 	mov	r0, #1
4001227c:	e59f1074 	ldr	r1, [pc, #116]	; 400122f8 <_etext+0x13c>
40012280:	e5810000 	str	r0, [r1]
40012284:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012288:	e59f106c 	ldr	r1, [pc, #108]	; 400122fc <_etext+0x140>
4001228c:	e1500001 	cmp	r0, r1
40012290:	3a00000d 	bcc	400122cc <CyU3PDevCheckDevStateStruct+0x110>
40012294:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
40012298:	e3500000 	cmp	r0, #0
4001229c:	0a00000a 	beq	400122cc <CyU3PDevCheckDevStateStruct+0x110>
400122a0:	e59f0058 	ldr	r0, [pc, #88]	; 40012300 <_etext+0x144>
400122a4:	e5900018 	ldr	r0, [r0, #24]
400122a8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400122ac:	0a000006 	beq	400122cc <CyU3PDevCheckDevStateStruct+0x110>
400122b0:	e59f004c 	ldr	r0, [pc, #76]	; 40012304 <_etext+0x148>
400122b4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400122b8:	e3100001 	tst	r0, #1
400122bc:	0a000002 	beq	400122cc <CyU3PDevCheckDevStateStruct+0x110>
400122c0:	e3a00001 	mov	r0, #1
400122c4:	e59f103c 	ldr	r1, [pc, #60]	; 40012308 <_etext+0x14c>
400122c8:	e5810000 	str	r0, [r1]
400122cc:	e8bd8038 	pop	{r3, r4, r5, pc}
400122d0:	e1a00000 	nop			; (mov r0, r0)
400122d4:	e3e00000 	mvn	r0, #0
400122d8:	e5840000 	str	r0, [r4]
400122dc:	eafffffa 	b	400122cc <CyU3PDevCheckDevStateStruct+0x110>
400122e0:	40002000 	.word	0x40002000
400122e4:	42575943 	.word	0x42575943
400122e8:	42335846 	.word	0x42335846
400122ec:	00010300 	.word	0x00010300
400122f0:	00000ff8 	.word	0x00000ff8
400122f4:	00010101 	.word	0x00010101
400122f8:	40030c68 	.word	0x40030c68
400122fc:	00010201 	.word	0x00010201
40012300:	e0052000 	.word	0xe0052000
40012304:	e0001000 	.word	0xe0001000
40012308:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PDeviceCacheControl:

4001230c <CyU3PDeviceCacheControl>:
4001230c:	e92d4070 	push	{r4, r5, r6, lr}
40012310:	e1a04000 	mov	r4, r0
40012314:	e1a06001 	mov	r6, r1
40012318:	e1a05002 	mov	r5, r2
4001231c:	e3550000 	cmp	r5, #0
40012320:	0a000003 	beq	40012334 <CyU3PDeviceCacheControl+0x28>
40012324:	e3560000 	cmp	r6, #0
40012328:	1a000001 	bne	40012334 <CyU3PDeviceCacheControl+0x28>
4001232c:	e3a00040 	mov	r0, #64	; 0x40
40012330:	e8bd8070 	pop	{r4, r5, r6, pc}
40012334:	eb000181 	bl	40012940 <CyU3PSysBarrierSync>
40012338:	ebfffefa 	bl	40011f28 <CyU3PSysClearDCache>
4001233c:	eb0001a1 	bl	400129c8 <CyU3PSysFlushICache>
40012340:	eb00018f 	bl	40012984 <CyU3PSysDisableICache>
40012344:	eb00018a 	bl	40012974 <CyU3PSysDisableDCache>
40012348:	e3540000 	cmp	r4, #0
4001234c:	0a000003 	beq	40012360 <CyU3PDeviceCacheControl+0x54>
40012350:	eb000193 	bl	400129a4 <CyU3PSysEnableICache>
40012354:	eb000179 	bl	40012940 <CyU3PSysBarrierSync>
40012358:	e59f0038 	ldr	r0, [pc, #56]	; 40012398 <CyU3PDeviceCacheControl+0x8c>
4001235c:	e5804000 	str	r4, [r0]
40012360:	e3a00000 	mov	r0, #0
40012364:	e59f1030 	ldr	r1, [pc, #48]	; 4001239c <CyU3PDeviceCacheControl+0x90>
40012368:	e5810000 	str	r0, [r1]
4001236c:	e3560000 	cmp	r6, #0
40012370:	0a000005 	beq	4001238c <CyU3PDeviceCacheControl+0x80>
40012374:	eb000186 	bl	40012994 <CyU3PSysEnableDCache>
40012378:	eb000170 	bl	40012940 <CyU3PSysBarrierSync>
4001237c:	e59f0018 	ldr	r0, [pc, #24]	; 4001239c <CyU3PDeviceCacheControl+0x90>
40012380:	e5805000 	str	r5, [r0]
40012384:	e59f0014 	ldr	r0, [pc, #20]	; 400123a0 <CyU3PDeviceCacheControl+0x94>
40012388:	e5806000 	str	r6, [r0]
4001238c:	eb00016b 	bl	40012940 <CyU3PSysBarrierSync>
40012390:	e3a00000 	mov	r0, #0
40012394:	eaffffe5 	b	40012330 <CyU3PDeviceCacheControl+0x24>
40012398:	40030c5c 	.word	0x40030c5c
4001239c:	40030c64 	.word	0x40030c64
400123a0:	40030c60 	.word	0x40030c60

Disassembly of section i.CyU3PDeviceInit:

400123a4 <CyU3PDeviceInit>:
400123a4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400123a8:	e1a04000 	mov	r4, r0
400123ac:	e3a06000 	mov	r6, #0
400123b0:	e3a07000 	mov	r7, #0
400123b4:	e3a09000 	mov	r9, #0
400123b8:	e3a0a000 	mov	sl, #0
400123bc:	e3540000 	cmp	r4, #0
400123c0:	0a000033 	beq	40012494 <CyU3PDeviceInit+0xf0>
400123c4:	e5d40004 	ldrb	r0, [r4, #4]
400123c8:	e3500002 	cmp	r0, #2
400123cc:	ba000002 	blt	400123dc <CyU3PDeviceInit+0x38>
400123d0:	e5d40004 	ldrb	r0, [r4, #4]
400123d4:	e3500010 	cmp	r0, #16
400123d8:	da000001 	ble	400123e4 <CyU3PDeviceInit+0x40>
400123dc:	e3a00040 	mov	r0, #64	; 0x40
400123e0:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400123e4:	e5d40005 	ldrb	r0, [r4, #5]
400123e8:	e3500002 	cmp	r0, #2
400123ec:	ba000002 	blt	400123fc <CyU3PDeviceInit+0x58>
400123f0:	e5d40005 	ldrb	r0, [r4, #5]
400123f4:	e3500010 	cmp	r0, #16
400123f8:	da000001 	ble	40012404 <CyU3PDeviceInit+0x60>
400123fc:	e3a00040 	mov	r0, #64	; 0x40
40012400:	eafffff6 	b	400123e0 <CyU3PDeviceInit+0x3c>
40012404:	e5d40006 	ldrb	r0, [r4, #6]
40012408:	e3500002 	cmp	r0, #2
4001240c:	ba000002 	blt	4001241c <CyU3PDeviceInit+0x78>
40012410:	e5d40006 	ldrb	r0, [r4, #6]
40012414:	e3500010 	cmp	r0, #16
40012418:	da000001 	ble	40012424 <CyU3PDeviceInit+0x80>
4001241c:	e3a00040 	mov	r0, #64	; 0x40
40012420:	eaffffee 	b	400123e0 <CyU3PDeviceInit+0x3c>
40012424:	e5d40006 	ldrb	r0, [r4, #6]
40012428:	e5d41005 	ldrb	r1, [r4, #5]
4001242c:	e1500001 	cmp	r0, r1
40012430:	ba000004 	blt	40012448 <CyU3PDeviceInit+0xa4>
40012434:	e5d41005 	ldrb	r1, [r4, #5]
40012438:	e5d40006 	ldrb	r0, [r4, #6]
4001243c:	ebfff99e 	bl	40010abc <__aeabi_idivmod>
40012440:	e3510000 	cmp	r1, #0
40012444:	0a000001 	beq	40012450 <CyU3PDeviceInit+0xac>
40012448:	e3a00040 	mov	r0, #64	; 0x40
4001244c:	eaffffe3 	b	400123e0 <CyU3PDeviceInit+0x3c>
40012450:	e5d4000c 	ldrb	r0, [r4, #12]
40012454:	e3500004 	cmp	r0, #4
40012458:	ba000001 	blt	40012464 <CyU3PDeviceInit+0xc0>
4001245c:	e3a00040 	mov	r0, #64	; 0x40
40012460:	eaffffde 	b	400123e0 <CyU3PDeviceInit+0x3c>
40012464:	e5d40004 	ldrb	r0, [r4, #4]
40012468:	e2400001 	sub	r0, r0, #1
4001246c:	e5d41005 	ldrb	r1, [r4, #5]
40012470:	e2411001 	sub	r1, r1, #1
40012474:	e1800401 	orr	r0, r0, r1, lsl #8
40012478:	e5d41006 	ldrb	r1, [r4, #6]
4001247c:	e2411001 	sub	r1, r1, #1
40012480:	e1800601 	orr	r0, r0, r1, lsl #12
40012484:	e5d4100c 	ldrb	r1, [r4, #12]
40012488:	e1805201 	orr	r5, r0, r1, lsl #4
4001248c:	e594a000 	ldr	sl, [r4]
40012490:	ea000000 	b	40012498 <CyU3PDeviceInit+0xf4>
40012494:	e59f5334 	ldr	r5, [pc, #820]	; 400127d0 <CyU3PDeviceInit+0x42c>
40012498:	e59f0334 	ldr	r0, [pc, #820]	; 400127d4 <CyU3PDeviceInit+0x430>
4001249c:	e5805004 	str	r5, [r0, #4]
400124a0:	e5905004 	ldr	r5, [r0, #4]
400124a4:	e3a0000a 	mov	r0, #10
400124a8:	eb0003f6 	bl	40013488 <CyU3PBusyWait>
400124ac:	e59f0320 	ldr	r0, [pc, #800]	; 400127d4 <CyU3PDeviceInit+0x430>
400124b0:	e5900000 	ldr	r0, [r0]
400124b4:	e2000807 	and	r0, r0, #458752	; 0x70000
400124b8:	e1a05820 	lsr	r5, r0, #16
400124bc:	e2150003 	ands	r0, r5, #3
400124c0:	0a000004 	beq	400124d8 <CyU3PDeviceInit+0x134>
400124c4:	e3500001 	cmp	r0, #1
400124c8:	0a00000e 	beq	40012508 <CyU3PDeviceInit+0x164>
400124cc:	e3500002 	cmp	r0, #2
400124d0:	1a000024 	bne	40012568 <CyU3PDeviceInit+0x1c4>
400124d4:	ea000014 	b	4001252c <CyU3PDeviceInit+0x188>
400124d8:	e1a00000 	nop			; (mov r0, r0)
400124dc:	e59f92f4 	ldr	r9, [pc, #756]	; 400127d8 <CyU3PDeviceInit+0x434>
400124e0:	e35a0000 	cmp	sl, #0
400124e4:	0a000003 	beq	400124f8 <CyU3PDeviceInit+0x154>
400124e8:	e59f02ec 	ldr	r0, [pc, #748]	; 400127dc <CyU3PDeviceInit+0x438>
400124ec:	e59f12ec 	ldr	r1, [pc, #748]	; 400127e0 <CyU3PDeviceInit+0x43c>
400124f0:	e5810000 	str	r0, [r1]
400124f4:	ea000002 	b	40012504 <CyU3PDeviceInit+0x160>
400124f8:	e59f02e4 	ldr	r0, [pc, #740]	; 400127e4 <CyU3PDeviceInit+0x440>
400124fc:	e59f12dc 	ldr	r1, [pc, #732]	; 400127e0 <CyU3PDeviceInit+0x43c>
40012500:	e5810000 	str	r0, [r1]
40012504:	ea000020 	b	4001258c <CyU3PDeviceInit+0x1e8>
40012508:	e1a00000 	nop			; (mov r0, r0)
4001250c:	e59f92d4 	ldr	r9, [pc, #724]	; 400127e8 <CyU3PDeviceInit+0x444>
40012510:	e1a00209 	lsl	r0, r9, #4
40012514:	e59f12c4 	ldr	r1, [pc, #708]	; 400127e0 <CyU3PDeviceInit+0x43c>
40012518:	e5810000 	str	r0, [r1]
4001251c:	e59f02c8 	ldr	r0, [pc, #712]	; 400127ec <CyU3PDeviceInit+0x448>
40012520:	e59f12c8 	ldr	r1, [pc, #712]	; 400127f0 <CyU3PDeviceInit+0x44c>
40012524:	e5810000 	str	r0, [r1]
40012528:	ea000017 	b	4001258c <CyU3PDeviceInit+0x1e8>
4001252c:	e1a00000 	nop			; (mov r0, r0)
40012530:	e59f92bc 	ldr	r9, [pc, #700]	; 400127f4 <CyU3PDeviceInit+0x450>
40012534:	e59f02bc 	ldr	r0, [pc, #700]	; 400127f8 <CyU3PDeviceInit+0x454>
40012538:	e59f12b0 	ldr	r1, [pc, #688]	; 400127f0 <CyU3PDeviceInit+0x44c>
4001253c:	e5810000 	str	r0, [r1]
40012540:	e35a0000 	cmp	sl, #0
40012544:	0a000003 	beq	40012558 <CyU3PDeviceInit+0x1b4>
40012548:	e59f028c 	ldr	r0, [pc, #652]	; 400127dc <CyU3PDeviceInit+0x438>
4001254c:	e59f128c 	ldr	r1, [pc, #652]	; 400127e0 <CyU3PDeviceInit+0x43c>
40012550:	e5810000 	str	r0, [r1]
40012554:	ea000002 	b	40012564 <CyU3PDeviceInit+0x1c0>
40012558:	e59f0284 	ldr	r0, [pc, #644]	; 400127e4 <CyU3PDeviceInit+0x440>
4001255c:	e59f127c 	ldr	r1, [pc, #636]	; 400127e0 <CyU3PDeviceInit+0x43c>
40012560:	e5810000 	str	r0, [r1]
40012564:	ea000008 	b	4001258c <CyU3PDeviceInit+0x1e8>
40012568:	e1a00000 	nop			; (mov r0, r0)
4001256c:	e59f9288 	ldr	r9, [pc, #648]	; 400127fc <CyU3PDeviceInit+0x458>
40012570:	e1a00189 	lsl	r0, r9, #3
40012574:	e59f1264 	ldr	r1, [pc, #612]	; 400127e0 <CyU3PDeviceInit+0x43c>
40012578:	e5810000 	str	r0, [r1]
4001257c:	e59f027c 	ldr	r0, [pc, #636]	; 40012800 <CyU3PDeviceInit+0x45c>
40012580:	e59f1268 	ldr	r1, [pc, #616]	; 400127f0 <CyU3PDeviceInit+0x44c>
40012584:	e5810000 	str	r0, [r1]
40012588:	e1a00000 	nop			; (mov r0, r0)
4001258c:	e1a00000 	nop			; (mov r0, r0)
40012590:	e59f023c 	ldr	r0, [pc, #572]	; 400127d4 <CyU3PDeviceInit+0x430>
40012594:	e5900000 	ldr	r0, [r0]
40012598:	e200003f 	and	r0, r0, #63	; 0x3f
4001259c:	e3500015 	cmp	r0, #21
400125a0:	1a000002 	bne	400125b0 <CyU3PDeviceInit+0x20c>
400125a4:	e59f0230 	ldr	r0, [pc, #560]	; 400127dc <CyU3PDeviceInit+0x438>
400125a8:	e59f1230 	ldr	r1, [pc, #560]	; 400127e0 <CyU3PDeviceInit+0x43c>
400125ac:	e5810000 	str	r0, [r1]
400125b0:	e59f0228 	ldr	r0, [pc, #552]	; 400127e0 <CyU3PDeviceInit+0x43c>
400125b4:	e5900000 	ldr	r0, [r0]
400125b8:	e59f121c 	ldr	r1, [pc, #540]	; 400127dc <CyU3PDeviceInit+0x438>
400125bc:	e1500001 	cmp	r0, r1
400125c0:	1a000013 	bne	40012614 <CyU3PDeviceInit+0x270>
400125c4:	e59f0208 	ldr	r0, [pc, #520]	; 400127d4 <CyU3PDeviceInit+0x430>
400125c8:	e5900000 	ldr	r0, [r0]
400125cc:	e200003f 	and	r0, r0, #63	; 0x3f
400125d0:	e3500015 	cmp	r0, #21
400125d4:	0a00000e 	beq	40012614 <CyU3PDeviceInit+0x270>
400125d8:	e59f01f4 	ldr	r0, [pc, #500]	; 400127d4 <CyU3PDeviceInit+0x430>
400125dc:	e5900000 	ldr	r0, [r0]
400125e0:	e3c0003f 	bic	r0, r0, #63	; 0x3f
400125e4:	e3800015 	orr	r0, r0, #21
400125e8:	e59f11e4 	ldr	r1, [pc, #484]	; 400127d4 <CyU3PDeviceInit+0x430>
400125ec:	e5810000 	str	r0, [r1]
400125f0:	e3a00064 	mov	r0, #100	; 0x64
400125f4:	eb0003a3 	bl	40013488 <CyU3PBusyWait>
400125f8:	e1a00000 	nop			; (mov r0, r0)
400125fc:	e59f01d0 	ldr	r0, [pc, #464]	; 400127d4 <CyU3PDeviceInit+0x430>
40012600:	e5900000 	ldr	r0, [r0]
40012604:	e3100702 	tst	r0, #524288	; 0x80000
40012608:	0afffffb 	beq	400125fc <CyU3PDeviceInit+0x258>
4001260c:	e3a00064 	mov	r0, #100	; 0x64
40012610:	eb00039c 	bl	40013488 <CyU3PBusyWait>
40012614:	e59f01e8 	ldr	r0, [pc, #488]	; 40012804 <CyU3PDeviceInit+0x460>
40012618:	e5908014 	ldr	r8, [r0, #20]
4001261c:	e3a0000a 	mov	r0, #10
40012620:	eb000398 	bl	40013488 <CyU3PBusyWait>
40012624:	e2080003 	and	r0, r8, #3
40012628:	e3500002 	cmp	r0, #2
4001262c:	1a000005 	bne	40012648 <CyU3PDeviceInit+0x2a4>
40012630:	e3a07001 	mov	r7, #1
40012634:	e3880003 	orr	r0, r8, #3
40012638:	e59f11c4 	ldr	r1, [pc, #452]	; 40012804 <CyU3PDeviceInit+0x460>
4001263c:	e5810014 	str	r0, [r1, #20]
40012640:	e3a0000a 	mov	r0, #10
40012644:	eb00038f 	bl	40013488 <CyU3PBusyWait>
40012648:	e3180102 	tst	r8, #-2147483648	; 0x80000000
4001264c:	1a000004 	bne	40012664 <CyU3PDeviceInit+0x2c0>
40012650:	e3540000 	cmp	r4, #0
40012654:	0a000003 	beq	40012668 <CyU3PDeviceInit+0x2c4>
40012658:	e5940008 	ldr	r0, [r4, #8]
4001265c:	e3500000 	cmp	r0, #0
40012660:	1a000000 	bne	40012668 <CyU3PDeviceInit+0x2c4>
40012664:	e3a06001 	mov	r6, #1
40012668:	e3560000 	cmp	r6, #0
4001266c:	1a000014 	bne	400126c4 <CyU3PDeviceInit+0x320>
40012670:	e3c80003 	bic	r0, r8, #3
40012674:	e3800001 	orr	r0, r0, #1
40012678:	e59f1184 	ldr	r1, [pc, #388]	; 40012804 <CyU3PDeviceInit+0x460>
4001267c:	e5810014 	str	r0, [r1, #20]
40012680:	e3a00064 	mov	r0, #100	; 0x64
40012684:	eb00037f 	bl	40013488 <CyU3PBusyWait>
40012688:	e59f0174 	ldr	r0, [pc, #372]	; 40012804 <CyU3PDeviceInit+0x460>
4001268c:	e5905018 	ldr	r5, [r0, #24]
40012690:	e3a000c8 	mov	r0, #200	; 0xc8
40012694:	eb00037b 	bl	40013488 <CyU3PBusyWait>
40012698:	e59f0164 	ldr	r0, [pc, #356]	; 40012804 <CyU3PDeviceInit+0x460>
4001269c:	e5900018 	ldr	r0, [r0, #24]
400126a0:	e1500005 	cmp	r0, r5
400126a4:	1a000000 	bne	400126ac <CyU3PDeviceInit+0x308>
400126a8:	e3a06001 	mov	r6, #1
400126ac:	e3a00064 	mov	r0, #100	; 0x64
400126b0:	eb000374 	bl	40013488 <CyU3PBusyWait>
400126b4:	e59f0148 	ldr	r0, [pc, #328]	; 40012804 <CyU3PDeviceInit+0x460>
400126b8:	e5808014 	str	r8, [r0, #20]
400126bc:	e3a00064 	mov	r0, #100	; 0x64
400126c0:	eb000370 	bl	40013488 <CyU3PBusyWait>
400126c4:	e3560000 	cmp	r6, #0
400126c8:	0a000026 	beq	40012768 <CyU3PDeviceInit+0x3c4>
400126cc:	e59f0130 	ldr	r0, [pc, #304]	; 40012804 <CyU3PDeviceInit+0x460>
400126d0:	e5900014 	ldr	r0, [r0, #20]
400126d4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400126d8:	1a000022 	bne	40012768 <CyU3PDeviceInit+0x3c4>
400126dc:	e1a09109 	lsl	r9, r9, #2
400126e0:	e3a01c7d 	mov	r1, #32000	; 0x7d00
400126e4:	e1a00009 	mov	r0, r9
400126e8:	ebfff8a1 	bl	40010974 <__aeabi_uidivmod>
400126ec:	e1a09000 	mov	r9, r0
400126f0:	e2095003 	and	r5, r9, #3
400126f4:	e1a09129 	lsr	r9, r9, #2
400126f8:	e3550010 	cmp	r5, #16
400126fc:	2a000000 	bcs	40012704 <CyU3PDeviceInit+0x360>
40012700:	e2499001 	sub	r9, r9, #1
40012704:	e1a09809 	lsl	r9, r9, #16
40012708:	e59f00f8 	ldr	r0, [pc, #248]	; 40012808 <CyU3PDeviceInit+0x464>
4001270c:	e1590000 	cmp	r9, r0
40012710:	9a000000 	bls	40012718 <CyU3PDeviceInit+0x374>
40012714:	e1a09000 	mov	r9, r0
40012718:	e3a00064 	mov	r0, #100	; 0x64
4001271c:	eb000359 	bl	40013488 <CyU3PBusyWait>
40012720:	e59f00dc 	ldr	r0, [pc, #220]	; 40012804 <CyU3PDeviceInit+0x460>
40012724:	e5905014 	ldr	r5, [r0, #20]
40012728:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
4001272c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40012730:	e1805009 	orr	r5, r0, r9
40012734:	e3a00064 	mov	r0, #100	; 0x64
40012738:	eb000352 	bl	40013488 <CyU3PBusyWait>
4001273c:	e59f00c0 	ldr	r0, [pc, #192]	; 40012804 <CyU3PDeviceInit+0x460>
40012740:	e5805014 	str	r5, [r0, #20]
40012744:	e3a00064 	mov	r0, #100	; 0x64
40012748:	eb00034e 	bl	40013488 <CyU3PBusyWait>
4001274c:	e59f00b0 	ldr	r0, [pc, #176]	; 40012804 <CyU3PDeviceInit+0x460>
40012750:	e5900014 	ldr	r0, [r0, #20]
40012754:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40012758:	e59f10a4 	ldr	r1, [pc, #164]	; 40012804 <CyU3PDeviceInit+0x460>
4001275c:	e5810014 	str	r0, [r1, #20]
40012760:	e3a00064 	mov	r0, #100	; 0x64
40012764:	eb000347 	bl	40013488 <CyU3PBusyWait>
40012768:	e59f0094 	ldr	r0, [pc, #148]	; 40012804 <CyU3PDeviceInit+0x460>
4001276c:	e5900000 	ldr	r0, [r0]
40012770:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40012774:	e59f1088 	ldr	r1, [pc, #136]	; 40012804 <CyU3PDeviceInit+0x460>
40012778:	e5810000 	str	r0, [r1]
4001277c:	e3a00064 	mov	r0, #100	; 0x64
40012780:	eb000340 	bl	40013488 <CyU3PBusyWait>
40012784:	eb003dcb 	bl	40021eb8 <CyU3PVicInit>
40012788:	e10f0000 	mrs	r0, CPSR
4001278c:	e3c00080 	bic	r0, r0, #128	; 0x80
40012790:	e121f000 	msr	CPSR_c, r0
40012794:	e3570000 	cmp	r7, #0
40012798:	0a000002 	beq	400127a8 <CyU3PDeviceInit+0x404>
4001279c:	e3a01ffa 	mov	r1, #1000	; 0x3e8
400127a0:	e3a00001 	mov	r0, #1
400127a4:	eb000024 	bl	4001283c <CyU3PSysWatchDogConfigure>
400127a8:	e59f005c 	ldr	r0, [pc, #92]	; 4001280c <CyU3PDeviceInit+0x468>
400127ac:	e5900000 	ldr	r0, [r0]
400127b0:	e3500000 	cmp	r0, #0
400127b4:	0a000002 	beq	400127c4 <CyU3PDeviceInit+0x420>
400127b8:	e59f004c 	ldr	r0, [pc, #76]	; 4001280c <CyU3PDeviceInit+0x468>
400127bc:	e5900000 	ldr	r0, [r0]
400127c0:	eb000594 	bl	40013e18 <CyU3PLppRestoreState>
400127c4:	ebfffe7c 	bl	400121bc <_etext>
400127c8:	e3a00000 	mov	r0, #0
400127cc:	eaffff03 	b	400123e0 <CyU3PDeviceInit+0x3c>
400127d0:	00001131 	.word	0x00001131
400127d4:	e0052000 	.word	0xe0052000
400127d8:	0124f800 	.word	0x0124f800
400127dc:	18085800 	.word	0x18085800
400127e0:	40030c50 	.word	0x40030c50
400127e4:	16e36000 	.word	0x16e36000
400127e8:	018cba80 	.word	0x018cba80
400127ec:	00910700 	.word	0x00910700
400127f0:	40030c58 	.word	0x40030c58
400127f4:	0249f000 	.word	0x0249f000
400127f8:	00910608 	.word	0x00910608
400127fc:	03197500 	.word	0x03197500
40012800:	00910580 	.word	0x00910580
40012804:	e0050000 	.word	0xe0050000
40012808:	7fff0000 	.word	0x7fff0000
4001280c:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PSysSetupMMU:

40012810 <CyU3PSysSetupMMU>:
40012810:	e92d4010 	push	{r4, lr}
40012814:	eb000049 	bl	40012940 <CyU3PSysBarrierSync>
40012818:	ebfffdc2 	bl	40011f28 <CyU3PSysClearDCache>
4001281c:	eb000069 	bl	400129c8 <CyU3PSysFlushICache>
40012820:	eb000049 	bl	4001294c <CyU3PSysDisableCacheMMU>
40012824:	eb00006a 	bl	400129d4 <CyU3PSysInitTCMs>
40012828:	eb000041 	bl	40012934 <CyU3PInitPageTable>
4001282c:	eb000061 	bl	400129b8 <CyU3PSysEnableMMU>
40012830:	eb00006c 	bl	400129e8 <CyU3PSysLoadTLB>
40012834:	eb000041 	bl	40012940 <CyU3PSysBarrierSync>
40012838:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

4001283c <CyU3PSysWatchDogConfigure>:
4001283c:	e92d4070 	push	{r4, r5, r6, lr}
40012840:	e1a04000 	mov	r4, r0
40012844:	e1a05001 	mov	r5, r1
40012848:	e59f00d8 	ldr	r0, [pc, #216]	; 40012928 <CyU3PSysWatchDogConfigure+0xec>
4001284c:	e5906014 	ldr	r6, [r0, #20]
40012850:	e3a00064 	mov	r0, #100	; 0x64
40012854:	eb00030b 	bl	40013488 <CyU3PBusyWait>
40012858:	e3540000 	cmp	r4, #0
4001285c:	0a000023 	beq	400128f0 <CyU3PSysWatchDogConfigure+0xb4>
40012860:	e2060003 	and	r0, r6, #3
40012864:	e3500003 	cmp	r0, #3
40012868:	0a000004 	beq	40012880 <CyU3PSysWatchDogConfigure+0x44>
4001286c:	e3860003 	orr	r0, r6, #3
40012870:	e59f10b0 	ldr	r1, [pc, #176]	; 40012928 <CyU3PSysWatchDogConfigure+0xec>
40012874:	e5810014 	str	r0, [r1, #20]
40012878:	e3a00064 	mov	r0, #100	; 0x64
4001287c:	eb000301 	bl	40013488 <CyU3PBusyWait>
40012880:	e0850285 	add	r0, r5, r5, lsl #5
40012884:	e59f10a0 	ldr	r1, [pc, #160]	; 4001292c <CyU3PSysWatchDogConfigure+0xf0>
40012888:	e5810000 	str	r0, [r1]
4001288c:	e2810000 	add	r0, r1, #0
40012890:	e5900000 	ldr	r0, [r0]
40012894:	e1500005 	cmp	r0, r5
40012898:	2a000001 	bcs	400128a4 <CyU3PSysWatchDogConfigure+0x68>
4001289c:	e3e00000 	mvn	r0, #0
400128a0:	e5810000 	str	r0, [r1]
400128a4:	e59f0080 	ldr	r0, [pc, #128]	; 4001292c <CyU3PSysWatchDogConfigure+0xf0>
400128a8:	e5900000 	ldr	r0, [r0]
400128ac:	e59f1074 	ldr	r1, [pc, #116]	; 40012928 <CyU3PSysWatchDogConfigure+0xec>
400128b0:	e5810018 	str	r0, [r1, #24]
400128b4:	e3a00064 	mov	r0, #100	; 0x64
400128b8:	eb0002f2 	bl	40013488 <CyU3PBusyWait>
400128bc:	e3c660fb 	bic	r6, r6, #251	; 0xfb
400128c0:	e38660fa 	orr	r6, r6, #250	; 0xfa
400128c4:	e59f005c 	ldr	r0, [pc, #92]	; 40012928 <CyU3PSysWatchDogConfigure+0xec>
400128c8:	e5806014 	str	r6, [r0, #20]
400128cc:	e3a00064 	mov	r0, #100	; 0x64
400128d0:	eb0002ec 	bl	40013488 <CyU3PBusyWait>
400128d4:	e2060c03 	and	r0, r6, #768	; 0x300
400128d8:	e3500c03 	cmp	r0, #768	; 0x300
400128dc:	1a000010 	bne	40012924 <CyU3PSysWatchDogConfigure+0xe8>
400128e0:	e59f0048 	ldr	r0, [pc, #72]	; 40012930 <CyU3PSysWatchDogConfigure+0xf4>
400128e4:	e1d000b0 	ldrh	r0, [r0]
400128e8:	eb003d18 	bl	40021d50 <CyU3POsTimerInit>
400128ec:	ea00000c 	b	40012924 <CyU3PSysWatchDogConfigure+0xe8>
400128f0:	e2060003 	and	r0, r6, #3
400128f4:	e3500003 	cmp	r0, #3
400128f8:	0a000006 	beq	40012918 <CyU3PSysWatchDogConfigure+0xdc>
400128fc:	e59f0024 	ldr	r0, [pc, #36]	; 40012928 <CyU3PSysWatchDogConfigure+0xec>
40012900:	e5900014 	ldr	r0, [r0, #20]
40012904:	e3800003 	orr	r0, r0, #3
40012908:	e59f1018 	ldr	r1, [pc, #24]	; 40012928 <CyU3PSysWatchDogConfigure+0xec>
4001290c:	e5810014 	str	r0, [r1, #20]
40012910:	e3a00064 	mov	r0, #100	; 0x64
40012914:	eb0002db 	bl	40013488 <CyU3PBusyWait>
40012918:	e3a00000 	mov	r0, #0
4001291c:	e59f1008 	ldr	r1, [pc, #8]	; 4001292c <CyU3PSysWatchDogConfigure+0xf0>
40012920:	e5810000 	str	r0, [r1]
40012924:	e8bd8070 	pop	{r4, r5, r6, pc}
40012928:	e0050000 	.word	0xe0050000
4001292c:	40030c54 	.word	0x40030c54
40012930:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PInitPageTable:

40012934 <CyU3PInitPageTable>:
40012934:	e92d4010 	push	{r4, lr}
40012938:	eb0007ad 	bl	400147f4 <CyFx3DevInitPageTables>
4001293c:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

40012940 <CyU3PSysBarrierSync>:
40012940:	e3a00000 	mov	r0, #0
40012944:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012948:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

4001294c <CyU3PSysDisableCacheMMU>:
4001294c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012950:	e59f2018 	ldr	r2, [pc, #24]	; 40012970 <CyU3PSysDisableCacheMMU+0x24>
40012954:	e1c00002 	bic	r0, r0, r2
40012958:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
4001295c:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012960:	e3e01801 	mvn	r1, #65536	; 0x10000
40012964:	e0000001 	and	r0, r0, r1
40012968:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
4001296c:	e12fff1e 	bx	lr
40012970:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012974 <CyU3PSysDisableDCache>:
40012974:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012978:	e3c00004 	bic	r0, r0, #4
4001297c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012980:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012984 <CyU3PSysDisableICache>:
40012984:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012988:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001298c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012990:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012994 <CyU3PSysEnableDCache>:
40012994:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012998:	e3800004 	orr	r0, r0, #4
4001299c:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
400129a0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

400129a4 <CyU3PSysEnableICache>:
400129a4:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
400129a8:	e3800a01 	orr	r0, r0, #4096	; 0x1000
400129ac:	e3c00901 	bic	r0, r0, #16384	; 0x4000
400129b0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
400129b4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

400129b8 <CyU3PSysEnableMMU>:
400129b8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
400129bc:	e3800001 	orr	r0, r0, #1
400129c0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
400129c4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

400129c8 <CyU3PSysFlushICache>:
400129c8:	e3a00000 	mov	r0, #0
400129cc:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
400129d0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

400129d4 <CyU3PSysInitTCMs>:
400129d4:	e3a00015 	mov	r0, #21
400129d8:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
400129dc:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
400129e0:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
400129e4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

400129e8 <CyU3PSysLoadTLB>:
400129e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400129ec:	e3a00000 	mov	r0, #0
400129f0:	eb00000b 	bl	40012a24 <CyU3PSysLockTLBEntry>
400129f4:	e3a00201 	mov	r0, #268435456	; 0x10000000
400129f8:	eb000009 	bl	40012a24 <CyU3PSysLockTLBEntry>
400129fc:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012a00:	eb000007 	bl	40012a24 <CyU3PSysLockTLBEntry>
40012a04:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012a08:	eb000005 	bl	40012a24 <CyU3PSysLockTLBEntry>
40012a0c:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012a10:	eb000003 	bl	40012a24 <CyU3PSysLockTLBEntry>
40012a14:	e59f0004 	ldr	r0, [pc, #4]	; 40012a20 <CyU3PSysLoadTLB+0x38>
40012a18:	eb000001 	bl	40012a24 <CyU3PSysLockTLBEntry>
40012a1c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012a20:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012a24 <CyU3PSysLockTLBEntry>:
40012a24:	e3a01000 	mov	r1, #0
40012a28:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012a2c:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012a30:	e3811001 	orr	r1, r1, #1
40012a34:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012a38:	e5900000 	ldr	r0, [r0]
40012a3c:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012a40:	e3c11001 	bic	r1, r1, #1
40012a44:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012a48:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012a4c <CyU3PDeviceConfigureIOMatrix>:
40012a4c:	e92d4010 	push	{r4, lr}
40012a50:	e1a04000 	mov	r4, r0
40012a54:	e3540000 	cmp	r4, #0
40012a58:	1a000001 	bne	40012a64 <CyU3PDeviceConfigureIOMatrix+0x18>
40012a5c:	e3a00041 	mov	r0, #65	; 0x41
40012a60:	e8bd8010 	pop	{r4, pc}
40012a64:	e1a00004 	mov	r0, r4
40012a68:	eb0005fd 	bl	40014264 <CyFx3DevIOConfigure>
40012a6c:	e3500000 	cmp	r0, #0
40012a70:	1a000001 	bne	40012a7c <CyU3PDeviceConfigureIOMatrix+0x30>
40012a74:	e3a00040 	mov	r0, #64	; 0x40
40012a78:	eafffff8 	b	40012a60 <CyU3PDeviceConfigureIOMatrix+0x14>
40012a7c:	e3a00000 	mov	r0, #0
40012a80:	eafffff6 	b	40012a60 <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012a84 <CyU3PDeviceGpioOverride>:
40012a84:	e92d4070 	push	{r4, r5, r6, lr}
40012a88:	e1a04000 	mov	r4, r0
40012a8c:	e1a05001 	mov	r5, r1
40012a90:	e354003d 	cmp	r4, #61	; 0x3d
40012a94:	ba000001 	blt	40012aa0 <CyU3PDeviceGpioOverride+0x1c>
40012a98:	e3a00040 	mov	r0, #64	; 0x40
40012a9c:	e8bd8070 	pop	{r4, r5, r6, pc}
40012aa0:	e1a02005 	mov	r2, r5
40012aa4:	e3a01001 	mov	r1, #1
40012aa8:	e1a00004 	mov	r0, r4
40012aac:	eb00066c 	bl	40014464 <CyFx3DevIOSelectGpio>
40012ab0:	e3a00000 	mov	r0, #0
40012ab4:	eafffff8 	b	40012a9c <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012ab8 <CyU3PIsGpioComplexIOConfigured>:
40012ab8:	e92d4010 	push	{r4, lr}
40012abc:	e1a04000 	mov	r4, r0
40012ac0:	e3a01000 	mov	r1, #0
40012ac4:	e1a00004 	mov	r0, r4
40012ac8:	eb000645 	bl	400143e4 <CyFx3DevIOIsGpio>
40012acc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012ad0 <CyU3PIsGpioSimpleIOConfigured>:
40012ad0:	e92d4010 	push	{r4, lr}
40012ad4:	e1a04000 	mov	r4, r0
40012ad8:	e3a01001 	mov	r1, #1
40012adc:	e1a00004 	mov	r0, r4
40012ae0:	eb00063f 	bl	400143e4 <CyFx3DevIOIsGpio>
40012ae4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012ae8 <CyU3PIsGpioValid>:
40012ae8:	e1a01000 	mov	r1, r0
40012aec:	e351003d 	cmp	r1, #61	; 0x3d
40012af0:	aa000001 	bge	40012afc <CyU3PIsGpioValid+0x14>
40012af4:	e3a00001 	mov	r0, #1
40012af8:	e12fff1e 	bx	lr
40012afc:	e3a00000 	mov	r0, #0
40012b00:	eafffffc 	b	40012af8 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012b04 <CyU3PIsLppIOConfigured>:
40012b04:	e92d4070 	push	{r4, r5, r6, lr}
40012b08:	e1a04000 	mov	r4, r0
40012b0c:	e3a05000 	mov	r5, #0
40012b10:	e3540000 	cmp	r4, #0
40012b14:	0a00000a 	beq	40012b44 <CyU3PIsLppIOConfigured+0x40>
40012b18:	e3540001 	cmp	r4, #1
40012b1c:	0a000004 	beq	40012b34 <CyU3PIsLppIOConfigured+0x30>
40012b20:	e3540002 	cmp	r4, #2
40012b24:	0a00000e 	beq	40012b64 <CyU3PIsLppIOConfigured+0x60>
40012b28:	e3540003 	cmp	r4, #3
40012b2c:	1a000010 	bne	40012b74 <CyU3PIsLppIOConfigured+0x70>
40012b30:	ea000007 	b	40012b54 <CyU3PIsLppIOConfigured+0x50>
40012b34:	e1a00000 	nop			; (mov r0, r0)
40012b38:	eb00063d 	bl	40014434 <CyFx3DevIOIsI2sConfigured>
40012b3c:	e1a05000 	mov	r5, r0
40012b40:	ea00000d 	b	40012b7c <CyU3PIsLppIOConfigured+0x78>
40012b44:	e1a00000 	nop			; (mov r0, r0)
40012b48:	eb000635 	bl	40014424 <CyFx3DevIOIsI2cConfigured>
40012b4c:	e1a05000 	mov	r5, r0
40012b50:	ea000009 	b	40012b7c <CyU3PIsLppIOConfigured+0x78>
40012b54:	e1a00000 	nop			; (mov r0, r0)
40012b58:	eb00063d 	bl	40014454 <CyFx3DevIOIsUartConfigured>
40012b5c:	e1a05000 	mov	r5, r0
40012b60:	ea000005 	b	40012b7c <CyU3PIsLppIOConfigured+0x78>
40012b64:	e1a00000 	nop			; (mov r0, r0)
40012b68:	eb000635 	bl	40014444 <CyFx3DevIOIsSpiConfigured>
40012b6c:	e1a05000 	mov	r5, r0
40012b70:	ea000001 	b	40012b7c <CyU3PIsLppIOConfigured+0x78>
40012b74:	e1a00000 	nop			; (mov r0, r0)
40012b78:	e1a00000 	nop			; (mov r0, r0)
40012b7c:	e1a00000 	nop			; (mov r0, r0)
40012b80:	e1a00005 	mov	r0, r5
40012b84:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012b88 <CyU3PDebugApplicationDefine>:
40012b88:	e92d4010 	push	{r4, lr}
40012b8c:	e24dd020 	sub	sp, sp, #32
40012b90:	e3a00000 	mov	r0, #0
40012b94:	e59f109c 	ldr	r1, [pc, #156]	; 40012c38 <CyU3PDebugApplicationDefine+0xb0>
40012b98:	e5810000 	str	r0, [r1]
40012b9c:	e3a00001 	mov	r0, #1
40012ba0:	e2811008 	add	r1, r1, #8
40012ba4:	e5810000 	str	r0, [r1]
40012ba8:	e3a00c02 	mov	r0, #512	; 0x200
40012bac:	ebffc2b0 	bl	40003674 <CyU3PMemAlloc>
40012bb0:	e1a04000 	mov	r4, r0
40012bb4:	e3a030a8 	mov	r3, #168	; 0xa8
40012bb8:	e3a02001 	mov	r2, #1
40012bbc:	e3a01000 	mov	r1, #0
40012bc0:	e3a00006 	mov	r0, #6
40012bc4:	e28dc00c 	add	ip, sp, #12
40012bc8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012bcc:	e3a02c02 	mov	r2, #512	; 0x200
40012bd0:	e1a03001 	mov	r3, r1
40012bd4:	e58d2004 	str	r2, [sp, #4]
40012bd8:	e59f205c 	ldr	r2, [pc, #92]	; 40012c3c <CyU3PDebugApplicationDefine+0xb4>
40012bdc:	e28f105c 	add	r1, pc, #92	; 0x5c
40012be0:	e58d0008 	str	r0, [sp, #8]
40012be4:	e59f0064 	ldr	r0, [pc, #100]	; 40012c50 <CyU3PDebugApplicationDefine+0xc8>
40012be8:	e58d4000 	str	r4, [sp]
40012bec:	ebffde47 	bl	4000a510 <_txe_thread_create>
40012bf0:	e3a00084 	mov	r0, #132	; 0x84
40012bf4:	ebffc29e 	bl	40003674 <CyU3PMemAlloc>
40012bf8:	e1a04000 	mov	r4, r0
40012bfc:	e3a0303c 	mov	r3, #60	; 0x3c
40012c00:	e3a02084 	mov	r2, #132	; 0x84
40012c04:	e1cd20f0 	strd	r2, [sp]
40012c08:	e1a03004 	mov	r3, r4
40012c0c:	e3a02003 	mov	r2, #3
40012c10:	e3a01000 	mov	r1, #0
40012c14:	e59f0038 	ldr	r0, [pc, #56]	; 40012c54 <CyU3PDebugApplicationDefine+0xcc>
40012c18:	ebffdd56 	bl	4000a178 <_txe_queue_create>
40012c1c:	e3a03038 	mov	r3, #56	; 0x38
40012c20:	e3a02000 	mov	r2, #0
40012c24:	e1a01002 	mov	r1, r2
40012c28:	e59f0028 	ldr	r0, [pc, #40]	; 40012c58 <CyU3PDebugApplicationDefine+0xd0>
40012c2c:	ebffdc76 	bl	40009e0c <_txe_mutex_create>
40012c30:	e28dd020 	add	sp, sp, #32
40012c34:	e8bd8010 	pop	{r4, pc}
40012c38:	40030c70 	.word	0x40030c70
40012c3c:	400130f8 	.word	0x400130f8
40012c40:	75626544 	.word	0x75626544
40012c44:	68542067 	.word	0x68542067
40012c48:	64616572 	.word	0x64616572
40012c4c:	00000000 	.word	0x00000000
40012c50:	40031234 	.word	0x40031234
40012c54:	400312dc 	.word	0x400312dc
40012c58:	40031318 	.word	0x40031318

Disassembly of section i.CyU3PDebugChannelReset:

40012c5c <CyU3PDebugChannelReset>:
40012c5c:	e92d4010 	push	{r4, lr}
40012c60:	e59f0034 	ldr	r0, [pc, #52]	; 40012c9c <CyU3PDebugChannelReset+0x40>
40012c64:	eb000d41 	bl	40016170 <CyU3PDmaChannelReset>
40012c68:	e3a01000 	mov	r1, #0
40012c6c:	e59f0028 	ldr	r0, [pc, #40]	; 40012c9c <CyU3PDebugChannelReset+0x40>
40012c70:	eb000ddf 	bl	400163f4 <CyU3PDmaChannelSetXfer>
40012c74:	e1a04000 	mov	r4, r0
40012c78:	e3540000 	cmp	r4, #0
40012c7c:	1a000004 	bne	40012c94 <CyU3PDebugChannelReset+0x38>
40012c80:	e3e02000 	mvn	r2, #0
40012c84:	e59f1014 	ldr	r1, [pc, #20]	; 40012ca0 <CyU3PDebugChannelReset+0x44>
40012c88:	e281000c 	add	r0, r1, #12
40012c8c:	eb000c6a 	bl	40015e3c <CyU3PDmaChannelGetBuffer>
40012c90:	e1a04000 	mov	r4, r0
40012c94:	e1a00004 	mov	r0, r4
40012c98:	e8bd8010 	pop	{r4, pc}
40012c9c:	4003135c 	.word	0x4003135c
40012ca0:	40031350 	.word	0x40031350

Disassembly of section i.CyU3PDebugInit:

40012ca4 <CyU3PDebugInit>:
40012ca4:	e92d4070 	push	{r4, r5, r6, lr}
40012ca8:	e24dd020 	sub	sp, sp, #32
40012cac:	e1a04000 	mov	r4, r0
40012cb0:	e1a06001 	mov	r6, r1
40012cb4:	e59f0150 	ldr	r0, [pc, #336]	; 40012e0c <CyU3PDebugInit+0x168>
40012cb8:	e5900000 	ldr	r0, [r0]
40012cbc:	e3500000 	cmp	r0, #0
40012cc0:	1a000003 	bne	40012cd4 <CyU3PDebugInit+0x30>
40012cc4:	e59f0144 	ldr	r0, [pc, #324]	; 40012e10 <CyU3PDebugInit+0x16c>
40012cc8:	e5900000 	ldr	r0, [r0]
40012ccc:	e3500000 	cmp	r0, #0
40012cd0:	0a000002 	beq	40012ce0 <CyU3PDebugInit+0x3c>
40012cd4:	e3a00043 	mov	r0, #67	; 0x43
40012cd8:	e28dd020 	add	sp, sp, #32
40012cdc:	e8bd8070 	pop	{r4, r5, r6, pc}
40012ce0:	e1a00004 	mov	r0, r4
40012ce4:	eb0007b3 	bl	40014bb8 <CyU3PDmaSocketIsValidConsumer>
40012ce8:	e1a05000 	mov	r5, r0
40012cec:	e3550000 	cmp	r5, #0
40012cf0:	1a000001 	bne	40012cfc <CyU3PDebugInit+0x58>
40012cf4:	e3a00040 	mov	r0, #64	; 0x40
40012cf8:	eafffff6 	b	40012cd8 <CyU3PDebugInit+0x34>
40012cfc:	e3e01000 	mvn	r1, #0
40012d00:	e59f010c 	ldr	r0, [pc, #268]	; 40012e14 <CyU3PDebugInit+0x170>
40012d04:	ebffdcbe 	bl	4000a004 <_txe_mutex_get>
40012d08:	e3a00c01 	mov	r0, #256	; 0x100
40012d0c:	e1cd00b4 	strh	r0, [sp, #4]
40012d10:	e3a00008 	mov	r0, #8
40012d14:	e1cd00b6 	strh	r0, [sp, #6]
40012d18:	e3a00000 	mov	r0, #0
40012d1c:	e1cd00bc 	strh	r0, [sp, #12]
40012d20:	e59f00f0 	ldr	r0, [pc, #240]	; 40012e18 <CyU3PDebugInit+0x174>
40012d24:	e1cd00b8 	strh	r0, [sp, #8]
40012d28:	e1cd40ba 	strh	r4, [sp, #10]
40012d2c:	e3a00000 	mov	r0, #0
40012d30:	e5cd0014 	strb	r0, [sp, #20]
40012d34:	e1cd00be 	strh	r0, [sp, #14]
40012d38:	e1cd01b0 	strh	r0, [sp, #16]
40012d3c:	e1cd01b2 	strh	r0, [sp, #18]
40012d40:	e58d001c 	str	r0, [sp, #28]
40012d44:	e28d2004 	add	r2, sp, #4
40012d48:	e3a01004 	mov	r1, #4
40012d4c:	e59f00c8 	ldr	r0, [pc, #200]	; 40012e1c <CyU3PDebugInit+0x178>
40012d50:	eb000a71 	bl	4001571c <CyU3PDmaChannelCreate>
40012d54:	e1a05000 	mov	r5, r0
40012d58:	e3550000 	cmp	r5, #0
40012d5c:	1a000007 	bne	40012d80 <CyU3PDebugInit+0xdc>
40012d60:	e59f00b8 	ldr	r0, [pc, #184]	; 40012e20 <CyU3PDebugInit+0x17c>
40012d64:	e5900000 	ldr	r0, [r0]
40012d68:	e3500000 	cmp	r0, #0
40012d6c:	0a000003 	beq	40012d80 <CyU3PDebugInit+0xdc>
40012d70:	e3a01001 	mov	r1, #1
40012d74:	e59f00a0 	ldr	r0, [pc, #160]	; 40012e1c <CyU3PDebugInit+0x178>
40012d78:	eb0008d7 	bl	400150dc <CyU3PDmaChannelCacheControl>
40012d7c:	e1a05000 	mov	r5, r0
40012d80:	e3550000 	cmp	r5, #0
40012d84:	1a000003 	bne	40012d98 <CyU3PDebugInit+0xf4>
40012d88:	e3a01000 	mov	r1, #0
40012d8c:	e59f0088 	ldr	r0, [pc, #136]	; 40012e1c <CyU3PDebugInit+0x178>
40012d90:	eb000d97 	bl	400163f4 <CyU3PDmaChannelSetXfer>
40012d94:	e1a05000 	mov	r5, r0
40012d98:	e3550000 	cmp	r5, #0
40012d9c:	1a000004 	bne	40012db4 <CyU3PDebugInit+0x110>
40012da0:	e3e02000 	mvn	r2, #0
40012da4:	e59f1078 	ldr	r1, [pc, #120]	; 40012e24 <CyU3PDebugInit+0x180>
40012da8:	e281000c 	add	r0, r1, #12
40012dac:	eb000c22 	bl	40015e3c <CyU3PDmaChannelGetBuffer>
40012db0:	e1a05000 	mov	r5, r0
40012db4:	e3550000 	cmp	r5, #0
40012db8:	0a000005 	beq	40012dd4 <CyU3PDebugInit+0x130>
40012dbc:	e59f0058 	ldr	r0, [pc, #88]	; 40012e1c <CyU3PDebugInit+0x178>
40012dc0:	eb000b4f 	bl	40015b04 <CyU3PDmaChannelDestroy>
40012dc4:	e59f0048 	ldr	r0, [pc, #72]	; 40012e14 <CyU3PDebugInit+0x170>
40012dc8:	ebffdcc2 	bl	4000a0d8 <_txe_mutex_put>
40012dcc:	e1a00005 	mov	r0, r5
40012dd0:	eaffffc0 	b	40012cd8 <CyU3PDebugInit+0x34>
40012dd4:	e3a00000 	mov	r0, #0
40012dd8:	e59f1048 	ldr	r1, [pc, #72]	; 40012e28 <CyU3PDebugInit+0x184>
40012ddc:	e1c100b0 	strh	r0, [r1]
40012de0:	e59f1044 	ldr	r1, [pc, #68]	; 40012e2c <CyU3PDebugInit+0x188>
40012de4:	e1c100b0 	strh	r0, [r1]
40012de8:	e59f0040 	ldr	r0, [pc, #64]	; 40012e30 <CyU3PDebugInit+0x18c>
40012dec:	e5c06000 	strb	r6, [r0]
40012df0:	e3a00001 	mov	r0, #1
40012df4:	e2411010 	sub	r1, r1, #16
40012df8:	e5810000 	str	r0, [r1]
40012dfc:	e59f0010 	ldr	r0, [pc, #16]	; 40012e14 <CyU3PDebugInit+0x170>
40012e00:	ebffdcb4 	bl	4000a0d8 <_txe_mutex_put>
40012e04:	e1a00005 	mov	r0, r5
40012e08:	eaffffb2 	b	40012cd8 <CyU3PDebugInit+0x34>
40012e0c:	40030c70 	.word	0x40030c70
40012e10:	40030c74 	.word	0x40030c74
40012e14:	40031318 	.word	0x40031318
40012e18:	00003f01 	.word	0x00003f01
40012e1c:	4003135c 	.word	0x4003135c
40012e20:	40030c60 	.word	0x40030c60
40012e24:	40031350 	.word	0x40031350
40012e28:	40030c7e 	.word	0x40030c7e
40012e2c:	40030c80 	.word	0x40030c80
40012e30:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugIntToStr:

40012e34 <CyU3PDebugIntToStr>:
40012e34:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012e38:	e1a04000 	mov	r4, r0
40012e3c:	e1a05001 	mov	r5, r1
40012e40:	e1a08002 	mov	r8, r2
40012e44:	e3a0600a 	mov	r6, #10
40012e48:	e1a07004 	mov	r7, r4
40012e4c:	e3a00000 	mov	r0, #0
40012e50:	e1a04007 	mov	r4, r7
40012e54:	e7c70006 	strb	r0, [r7, r6]
40012e58:	e1a00000 	nop			; (mov r0, r0)
40012e5c:	e1a01008 	mov	r1, r8
40012e60:	e1a00005 	mov	r0, r5
40012e64:	ebfff6c2 	bl	40010974 <__aeabi_uidivmod>
40012e68:	e28f0030 	add	r0, pc, #48	; 0x30
40012e6c:	e7d00001 	ldrb	r0, [r0, r1]
40012e70:	e2461001 	sub	r1, r6, #1
40012e74:	e20110ff 	and	r1, r1, #255	; 0xff
40012e78:	e1a06001 	mov	r6, r1
40012e7c:	e7c70001 	strb	r0, [r7, r1]
40012e80:	e1a01008 	mov	r1, r8
40012e84:	e1a00005 	mov	r0, r5
40012e88:	ebfff6b9 	bl	40010974 <__aeabi_uidivmod>
40012e8c:	e1a05000 	mov	r5, r0
40012e90:	e3550000 	cmp	r5, #0
40012e94:	1afffff0 	bne	40012e5c <CyU3PDebugIntToStr+0x28>
40012e98:	e0870006 	add	r0, r7, r6
40012e9c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40012ea0:	33323130 	.word	0x33323130
40012ea4:	37363534 	.word	0x37363534
40012ea8:	42413938 	.word	0x42413938
40012eac:	46454443 	.word	0x46454443
40012eb0:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

40012eb4 <CyU3PDebugPreamble>:
40012eb4:	e59f1004 	ldr	r1, [pc, #4]	; 40012ec0 <CyU3PDebugPreamble+0xc>
40012eb8:	e5810000 	str	r0, [r1]
40012ebc:	e12fff1e 	bx	lr
40012ec0:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugPrint:

40012ec4 <CyU3PDebugPrint>:
40012ec4:	e92d000f 	push	{r0, r1, r2, r3}
40012ec8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40012ecc:	e24dd028 	sub	sp, sp, #40	; 0x28
40012ed0:	e1a04000 	mov	r4, r0
40012ed4:	e59f0200 	ldr	r0, [pc, #512]	; 400130dc <CyU3PDebugPrint+0x218>
40012ed8:	e5900000 	ldr	r0, [r0]
40012edc:	e3500000 	cmp	r0, #0
40012ee0:	1a000003 	bne	40012ef4 <CyU3PDebugPrint+0x30>
40012ee4:	e3a00042 	mov	r0, #66	; 0x42
40012ee8:	e28dd028 	add	sp, sp, #40	; 0x28
40012eec:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
40012ef0:	e49df014 	ldr	pc, [sp], #20
40012ef4:	e59f01e4 	ldr	r0, [pc, #484]	; 400130e0 <CyU3PDebugPrint+0x21c>
40012ef8:	e5d00000 	ldrb	r0, [r0]
40012efc:	e1540000 	cmp	r4, r0
40012f00:	da000001 	ble	40012f0c <CyU3PDebugPrint+0x48>
40012f04:	e3a00000 	mov	r0, #0
40012f08:	eafffff6 	b	40012ee8 <CyU3PDebugPrint+0x24>
40012f0c:	ebffd627 	bl	400087b0 <_tx_thread_identify>
40012f10:	e1a05000 	mov	r5, r0
40012f14:	e3550000 	cmp	r5, #0
40012f18:	1a000001 	bne	40012f24 <CyU3PDebugPrint+0x60>
40012f1c:	e3a00013 	mov	r0, #19
40012f20:	eafffff0 	b	40012ee8 <CyU3PDebugPrint+0x24>
40012f24:	e3a03000 	mov	r3, #0
40012f28:	e58d3004 	str	r3, [sp, #4]
40012f2c:	e58d3008 	str	r3, [sp, #8]
40012f30:	e58d300c 	str	r3, [sp, #12]
40012f34:	e58d3010 	str	r3, [sp, #16]
40012f38:	e58d3000 	str	r3, [sp]
40012f3c:	e1a02003 	mov	r2, r3
40012f40:	e28d1018 	add	r1, sp, #24
40012f44:	e1a00005 	mov	r0, r5
40012f48:	ebffde09 	bl	4000a774 <_txe_thread_info_get>
40012f4c:	e59d0018 	ldr	r0, [sp, #24]
40012f50:	e5d00001 	ldrb	r0, [r0, #1]
40012f54:	e2400030 	sub	r0, r0, #48	; 0x30
40012f58:	e59d1018 	ldr	r1, [sp, #24]
40012f5c:	e5d11000 	ldrb	r1, [r1]
40012f60:	e2411030 	sub	r1, r1, #48	; 0x30
40012f64:	e3a0200a 	mov	r2, #10
40012f68:	e1000182 	smlabb	r0, r2, r1, r0
40012f6c:	e20080ff 	and	r8, r0, #255	; 0xff
40012f70:	e3e01000 	mvn	r1, #0
40012f74:	e59f0168 	ldr	r0, [pc, #360]	; 400130e4 <CyU3PDebugPrint+0x220>
40012f78:	ebffdc21 	bl	4000a004 <_txe_mutex_get>
40012f7c:	e59f0164 	ldr	r0, [pc, #356]	; 400130e8 <CyU3PDebugPrint+0x224>
40012f80:	e1d000b0 	ldrh	r0, [r0]
40012f84:	e3500000 	cmp	r0, #0
40012f88:	0a000011 	beq	40012fd4 <CyU3PDebugPrint+0x110>
40012f8c:	e3a02000 	mov	r2, #0
40012f90:	e3a01c01 	mov	r1, #256	; 0x100
40012f94:	e59f0150 	ldr	r0, [pc, #336]	; 400130ec <CyU3PDebugPrint+0x228>
40012f98:	eb000864 	bl	40015130 <CyU3PDmaChannelCommitBuffer>
40012f9c:	e1a06000 	mov	r6, r0
40012fa0:	e3560000 	cmp	r6, #0
40012fa4:	1a000004 	bne	40012fbc <CyU3PDebugPrint+0xf8>
40012fa8:	e3e02000 	mvn	r2, #0
40012fac:	e59f113c 	ldr	r1, [pc, #316]	; 400130f0 <CyU3PDebugPrint+0x22c>
40012fb0:	e281000c 	add	r0, r1, #12
40012fb4:	eb000ba0 	bl	40015e3c <CyU3PDmaChannelGetBuffer>
40012fb8:	e1a06000 	mov	r6, r0
40012fbc:	e3560000 	cmp	r6, #0
40012fc0:	0a000000 	beq	40012fc8 <CyU3PDebugPrint+0x104>
40012fc4:	ebffff24 	bl	40012c5c <CyU3PDebugChannelReset>
40012fc8:	e3a00000 	mov	r0, #0
40012fcc:	e59f1114 	ldr	r1, [pc, #276]	; 400130e8 <CyU3PDebugPrint+0x224>
40012fd0:	e1c100b0 	strh	r0, [r1]
40012fd4:	e59f0114 	ldr	r0, [pc, #276]	; 400130f0 <CyU3PDebugPrint+0x22c>
40012fd8:	e5907000 	ldr	r7, [r0]
40012fdc:	e3a00c01 	mov	r0, #256	; 0x100
40012fe0:	e58d0014 	str	r0, [sp, #20]
40012fe4:	e59f0108 	ldr	r0, [pc, #264]	; 400130f4 <CyU3PDebugPrint+0x230>
40012fe8:	e5900000 	ldr	r0, [r0]
40012fec:	e3500000 	cmp	r0, #0
40012ff0:	0a000005 	beq	4001300c <CyU3PDebugPrint+0x148>
40012ff4:	e2877008 	add	r7, r7, #8
40012ff8:	e1dd01b4 	ldrh	r0, [sp, #20]
40012ffc:	e2400008 	sub	r0, r0, #8
40013000:	e1a00800 	lsl	r0, r0, #16
40013004:	e1a00820 	lsr	r0, r0, #16
40013008:	e58d0014 	str	r0, [sp, #20]
4001300c:	e28d0048 	add	r0, sp, #72	; 0x48
40013010:	e58d001c 	str	r0, [sp, #28]
40013014:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40013018:	e59d301c 	ldr	r3, [sp, #28]
4001301c:	e28d1014 	add	r1, sp, #20
40013020:	e1a00007 	mov	r0, r7
40013024:	eb000071 	bl	400131f0 <MyDebugSNPrint>
40013028:	e1a06000 	mov	r6, r0
4001302c:	e59f00c0 	ldr	r0, [pc, #192]	; 400130f4 <CyU3PDebugPrint+0x230>
40013030:	e5900000 	ldr	r0, [r0]
40013034:	e3500000 	cmp	r0, #0
40013038:	0a00000f 	beq	4001307c <CyU3PDebugPrint+0x1b8>
4001303c:	e59f00ac 	ldr	r0, [pc, #172]	; 400130f0 <CyU3PDebugPrint+0x22c>
40013040:	e5907000 	ldr	r7, [r0]
40013044:	e5cd4020 	strb	r4, [sp, #32]
40013048:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
4001304c:	e3e00000 	mvn	r0, #0
40013050:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
40013054:	e1dd01b4 	ldrh	r0, [sp, #20]
40013058:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001305c:	e3a02008 	mov	r2, #8
40013060:	e28d1020 	add	r1, sp, #32
40013064:	e1a00007 	mov	r0, r7
40013068:	ebffc219 	bl	400038d4 <CyU3PMemCopy>
4001306c:	e1dd01b4 	ldrh	r0, [sp, #20]
40013070:	e2800008 	add	r0, r0, #8
40013074:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40013078:	e58d0014 	str	r0, [sp, #20]
4001307c:	e3a02000 	mov	r2, #0
40013080:	e1dd11b4 	ldrh	r1, [sp, #20]
40013084:	e59f0060 	ldr	r0, [pc, #96]	; 400130ec <CyU3PDebugPrint+0x228>
40013088:	eb000828 	bl	40015130 <CyU3PDmaChannelCommitBuffer>
4001308c:	e1a06000 	mov	r6, r0
40013090:	e3560000 	cmp	r6, #0
40013094:	1a000004 	bne	400130ac <CyU3PDebugPrint+0x1e8>
40013098:	e3e02000 	mvn	r2, #0
4001309c:	e59f104c 	ldr	r1, [pc, #76]	; 400130f0 <CyU3PDebugPrint+0x22c>
400130a0:	e281000c 	add	r0, r1, #12
400130a4:	eb000b64 	bl	40015e3c <CyU3PDmaChannelGetBuffer>
400130a8:	e1a06000 	mov	r6, r0
400130ac:	e3560000 	cmp	r6, #0
400130b0:	0a000002 	beq	400130c0 <CyU3PDebugPrint+0x1fc>
400130b4:	ebfffee8 	bl	40012c5c <CyU3PDebugChannelReset>
400130b8:	e1a00006 	mov	r0, r6
400130bc:	eaffff89 	b	40012ee8 <CyU3PDebugPrint+0x24>
400130c0:	e3a00000 	mov	r0, #0
400130c4:	e59f101c 	ldr	r1, [pc, #28]	; 400130e8 <CyU3PDebugPrint+0x224>
400130c8:	e1c100b0 	strh	r0, [r1]
400130cc:	e59f0010 	ldr	r0, [pc, #16]	; 400130e4 <CyU3PDebugPrint+0x220>
400130d0:	ebffdc00 	bl	4000a0d8 <_txe_mutex_put>
400130d4:	e3a00000 	mov	r0, #0
400130d8:	eaffff82 	b	40012ee8 <CyU3PDebugPrint+0x24>
400130dc:	40030c70 	.word	0x40030c70
400130e0:	40030c7c 	.word	0x40030c7c
400130e4:	40031318 	.word	0x40031318
400130e8:	40030c80 	.word	0x40030c80
400130ec:	4003135c 	.word	0x4003135c
400130f0:	40031350 	.word	0x40031350
400130f4:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugThreadEntry:

400130f8 <CyU3PDebugThreadEntry>:
400130f8:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
400130fc:	e1a06000 	mov	r6, r0
40013100:	e3a05000 	mov	r5, #0
40013104:	e1a00000 	nop			; (mov r0, r0)
40013108:	e3e02000 	mvn	r2, #0
4001310c:	e1a0100d 	mov	r1, sp
40013110:	e59f00c4 	ldr	r0, [pc, #196]	; 400131dc <CyU3PDebugThreadEntry+0xe4>
40013114:	ebffdcad 	bl	4000a3d0 <_txe_queue_receive>
40013118:	e1a04000 	mov	r4, r0
4001311c:	e3540000 	cmp	r4, #0
40013120:	1afffff8 	bne	40013108 <CyU3PDebugThreadEntry+0x10>
40013124:	e3e01000 	mvn	r1, #0
40013128:	e59f00b0 	ldr	r0, [pc, #176]	; 400131e0 <CyU3PDebugThreadEntry+0xe8>
4001312c:	ebffdbb4 	bl	4000a004 <_txe_mutex_get>
40013130:	e59f00ac 	ldr	r0, [pc, #172]	; 400131e4 <CyU3PDebugThreadEntry+0xec>
40013134:	e1d000b0 	ldrh	r0, [r0]
40013138:	e3500c01 	cmp	r0, #256	; 0x100
4001313c:	0a000007 	beq	40013160 <CyU3PDebugThreadEntry+0x68>
40013140:	e59f10a0 	ldr	r1, [pc, #160]	; 400131e8 <CyU3PDebugThreadEntry+0xf0>
40013144:	e5911000 	ldr	r1, [r1]
40013148:	e59f2094 	ldr	r2, [pc, #148]	; 400131e4 <CyU3PDebugThreadEntry+0xec>
4001314c:	e1d220b0 	ldrh	r2, [r2]
40013150:	e0810002 	add	r0, r1, r2
40013154:	e3a02008 	mov	r2, #8
40013158:	e1a0100d 	mov	r1, sp
4001315c:	ebffc1dc 	bl	400038d4 <CyU3PMemCopy>
40013160:	e59f007c 	ldr	r0, [pc, #124]	; 400131e4 <CyU3PDebugThreadEntry+0xec>
40013164:	e1d000b0 	ldrh	r0, [r0]
40013168:	e35000f8 	cmp	r0, #248	; 0xf8
4001316c:	1a000015 	bne	400131c8 <CyU3PDebugThreadEntry+0xd0>
40013170:	e3a02000 	mov	r2, #0
40013174:	e3a01c01 	mov	r1, #256	; 0x100
40013178:	e59f006c 	ldr	r0, [pc, #108]	; 400131ec <CyU3PDebugThreadEntry+0xf4>
4001317c:	eb0007eb 	bl	40015130 <CyU3PDmaChannelCommitBuffer>
40013180:	e1a05000 	mov	r5, r0
40013184:	e3550000 	cmp	r5, #0
40013188:	1a000004 	bne	400131a0 <CyU3PDebugThreadEntry+0xa8>
4001318c:	e3e02000 	mvn	r2, #0
40013190:	e59f1050 	ldr	r1, [pc, #80]	; 400131e8 <CyU3PDebugThreadEntry+0xf0>
40013194:	e281000c 	add	r0, r1, #12
40013198:	eb000b27 	bl	40015e3c <CyU3PDmaChannelGetBuffer>
4001319c:	e1a05000 	mov	r5, r0
400131a0:	e3550000 	cmp	r5, #0
400131a4:	0a000004 	beq	400131bc <CyU3PDebugThreadEntry+0xc4>
400131a8:	ebfffeab 	bl	40012c5c <CyU3PDebugChannelReset>
400131ac:	e1a05000 	mov	r5, r0
400131b0:	e3550000 	cmp	r5, #0
400131b4:	0a000000 	beq	400131bc <CyU3PDebugThreadEntry+0xc4>
400131b8:	ea000005 	b	400131d4 <CyU3PDebugThreadEntry+0xdc>
400131bc:	e3a00000 	mov	r0, #0
400131c0:	e59f101c 	ldr	r1, [pc, #28]	; 400131e4 <CyU3PDebugThreadEntry+0xec>
400131c4:	e1c100b0 	strh	r0, [r1]
400131c8:	e59f0010 	ldr	r0, [pc, #16]	; 400131e0 <CyU3PDebugThreadEntry+0xe8>
400131cc:	ebffdbc1 	bl	4000a0d8 <_txe_mutex_put>
400131d0:	eaffffcc 	b	40013108 <CyU3PDebugThreadEntry+0x10>
400131d4:	e1a00000 	nop			; (mov r0, r0)
400131d8:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
400131dc:	400312dc 	.word	0x400312dc
400131e0:	40031318 	.word	0x40031318
400131e4:	40030c80 	.word	0x40030c80
400131e8:	40031350 	.word	0x40031350
400131ec:	4003135c 	.word	0x4003135c

Disassembly of section i.MyDebugSNPrint:

400131f0 <MyDebugSNPrint>:
400131f0:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400131f4:	e24dd01c 	sub	sp, sp, #28
400131f8:	e1a04000 	mov	r4, r0
400131fc:	e1a05001 	mov	r5, r1
40013200:	e1a06002 	mov	r6, r2
40013204:	e3a08000 	mov	r8, #0
40013208:	e3a00000 	mov	r0, #0
4001320c:	e58d0018 	str	r0, [sp, #24]
40013210:	e3a09000 	mov	r9, #0
40013214:	e1d5b0b0 	ldrh	fp, [r5]
40013218:	e3540000 	cmp	r4, #0
4001321c:	1a000002 	bne	4001322c <MyDebugSNPrint+0x3c>
40013220:	e3a00040 	mov	r0, #64	; 0x40
40013224:	e28dd02c 	add	sp, sp, #44	; 0x2c
40013228:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001322c:	e1a07006 	mov	r7, r6
40013230:	ea00008d 	b	4001346c <MyDebugSNPrint+0x27c>
40013234:	e24b0002 	sub	r0, fp, #2
40013238:	e1500009 	cmp	r0, r9
4001323c:	ca000001 	bgt	40013248 <MyDebugSNPrint+0x58>
40013240:	e3a00040 	mov	r0, #64	; 0x40
40013244:	eafffff6 	b	40013224 <MyDebugSNPrint+0x34>
40013248:	e5d70000 	ldrb	r0, [r7]
4001324c:	e3500025 	cmp	r0, #37	; 0x25
40013250:	0a000005 	beq	4001326c <MyDebugSNPrint+0x7c>
40013254:	e5d71000 	ldrb	r1, [r7]
40013258:	e1a00009 	mov	r0, r9
4001325c:	e2892001 	add	r2, r9, #1
40013260:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013264:	e7c41000 	strb	r1, [r4, r0]
40013268:	ea00007e 	b	40013468 <MyDebugSNPrint+0x278>
4001326c:	e2877001 	add	r7, r7, #1
40013270:	e5d70000 	ldrb	r0, [r7]
40013274:	e3500064 	cmp	r0, #100	; 0x64
40013278:	0a000021 	beq	40013304 <MyDebugSNPrint+0x114>
4001327c:	ca000006 	bgt	4001329c <MyDebugSNPrint+0xac>
40013280:	e3500025 	cmp	r0, #37	; 0x25
40013284:	0a00000b 	beq	400132b8 <MyDebugSNPrint+0xc8>
40013288:	e3500058 	cmp	r0, #88	; 0x58
4001328c:	0a00004c 	beq	400133c4 <MyDebugSNPrint+0x1d4>
40013290:	e3500063 	cmp	r0, #99	; 0x63
40013294:	1a00005a 	bne	40013404 <MyDebugSNPrint+0x214>
40013298:	ea00000d 	b	400132d4 <MyDebugSNPrint+0xe4>
4001329c:	e3500073 	cmp	r0, #115	; 0x73
400132a0:	0a000031 	beq	4001336c <MyDebugSNPrint+0x17c>
400132a4:	e3500075 	cmp	r0, #117	; 0x75
400132a8:	0a000036 	beq	40013388 <MyDebugSNPrint+0x198>
400132ac:	e3500078 	cmp	r0, #120	; 0x78
400132b0:	1a000053 	bne	40013404 <MyDebugSNPrint+0x214>
400132b4:	ea000044 	b	400133cc <MyDebugSNPrint+0x1dc>
400132b8:	e1a00000 	nop			; (mov r0, r0)
400132bc:	e3a01025 	mov	r1, #37	; 0x25
400132c0:	e1a00009 	mov	r0, r9
400132c4:	e2892001 	add	r2, r9, #1
400132c8:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400132cc:	e7c41000 	strb	r1, [r4, r0]
400132d0:	ea00004e 	b	40013410 <MyDebugSNPrint+0x220>
400132d4:	e1a00000 	nop			; (mov r0, r0)
400132d8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400132dc:	e5900000 	ldr	r0, [r0]
400132e0:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
400132e4:	e2811004 	add	r1, r1, #4
400132e8:	e58d1028 	str	r1, [sp, #40]	; 0x28
400132ec:	e20010ff 	and	r1, r0, #255	; 0xff
400132f0:	e1a00009 	mov	r0, r9
400132f4:	e2892001 	add	r2, r9, #1
400132f8:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400132fc:	e7c41000 	strb	r1, [r4, r0]
40013300:	ea000042 	b	40013410 <MyDebugSNPrint+0x220>
40013304:	e1a00000 	nop			; (mov r0, r0)
40013308:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001330c:	e5900000 	ldr	r0, [r0]
40013310:	e58d0014 	str	r0, [sp, #20]
40013314:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013318:	e2800004 	add	r0, r0, #4
4001331c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013320:	e59d0014 	ldr	r0, [sp, #20]
40013324:	e3500000 	cmp	r0, #0
40013328:	aa000007 	bge	4001334c <MyDebugSNPrint+0x15c>
4001332c:	e3a0102d 	mov	r1, #45	; 0x2d
40013330:	e1a00009 	mov	r0, r9
40013334:	e2892001 	add	r2, r9, #1
40013338:	e3c29801 	bic	r9, r2, #65536	; 0x10000
4001333c:	e7c41000 	strb	r1, [r4, r0]
40013340:	e59d0014 	ldr	r0, [sp, #20]
40013344:	e2600000 	rsb	r0, r0, #0
40013348:	e58d0014 	str	r0, [sp, #20]
4001334c:	e3a0200a 	mov	r2, #10
40013350:	e59d1014 	ldr	r1, [sp, #20]
40013354:	e28d0004 	add	r0, sp, #4
40013358:	ebfffeb5 	bl	40012e34 <CyU3PDebugIntToStr>
4001335c:	e1a08000 	mov	r8, r0
40013360:	e3a00001 	mov	r0, #1
40013364:	e58d0018 	str	r0, [sp, #24]
40013368:	ea000028 	b	40013410 <MyDebugSNPrint+0x220>
4001336c:	e1a00000 	nop			; (mov r0, r0)
40013370:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013374:	e4908004 	ldr	r8, [r0], #4
40013378:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001337c:	e3a00001 	mov	r0, #1
40013380:	e58d0018 	str	r0, [sp, #24]
40013384:	ea000021 	b	40013410 <MyDebugSNPrint+0x220>
40013388:	e1a00000 	nop			; (mov r0, r0)
4001338c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013390:	e5900000 	ldr	r0, [r0]
40013394:	e58d0010 	str	r0, [sp, #16]
40013398:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001339c:	e2800004 	add	r0, r0, #4
400133a0:	e58d0028 	str	r0, [sp, #40]	; 0x28
400133a4:	e3a0200a 	mov	r2, #10
400133a8:	e59d1010 	ldr	r1, [sp, #16]
400133ac:	e28d0004 	add	r0, sp, #4
400133b0:	ebfffe9f 	bl	40012e34 <CyU3PDebugIntToStr>
400133b4:	e1a08000 	mov	r8, r0
400133b8:	e3a00001 	mov	r0, #1
400133bc:	e58d0018 	str	r0, [sp, #24]
400133c0:	ea000012 	b	40013410 <MyDebugSNPrint+0x220>
400133c4:	e1a00000 	nop			; (mov r0, r0)
400133c8:	e1a00000 	nop			; (mov r0, r0)
400133cc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400133d0:	e5900000 	ldr	r0, [r0]
400133d4:	e58d0010 	str	r0, [sp, #16]
400133d8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400133dc:	e2800004 	add	r0, r0, #4
400133e0:	e58d0028 	str	r0, [sp, #40]	; 0x28
400133e4:	e3a02010 	mov	r2, #16
400133e8:	e59d1010 	ldr	r1, [sp, #16]
400133ec:	e28d0004 	add	r0, sp, #4
400133f0:	ebfffe8f 	bl	40012e34 <CyU3PDebugIntToStr>
400133f4:	e1a08000 	mov	r8, r0
400133f8:	e3a00001 	mov	r0, #1
400133fc:	e58d0018 	str	r0, [sp, #24]
40013400:	ea000002 	b	40013410 <MyDebugSNPrint+0x220>
40013404:	e1a00000 	nop			; (mov r0, r0)
40013408:	e3a00040 	mov	r0, #64	; 0x40
4001340c:	eaffff84 	b	40013224 <MyDebugSNPrint+0x34>
40013410:	e1a00000 	nop			; (mov r0, r0)
40013414:	e59d0018 	ldr	r0, [sp, #24]
40013418:	e3500000 	cmp	r0, #0
4001341c:	0a000010 	beq	40013464 <MyDebugSNPrint+0x274>
40013420:	e1a00008 	mov	r0, r8
40013424:	ebfff4fd 	bl	40010820 <strlen>
40013428:	e1a0a800 	lsl	sl, r0, #16
4001342c:	e1a0a82a 	lsr	sl, sl, #16
40013430:	e04b000a 	sub	r0, fp, sl
40013434:	e2400001 	sub	r0, r0, #1
40013438:	e1500009 	cmp	r0, r9
4001343c:	ca000001 	bgt	40013448 <MyDebugSNPrint+0x258>
40013440:	e3a00040 	mov	r0, #64	; 0x40
40013444:	eaffff76 	b	40013224 <MyDebugSNPrint+0x34>
40013448:	e0840009 	add	r0, r4, r9
4001344c:	e1a01008 	mov	r1, r8
40013450:	ebfff4b6 	bl	40010730 <strcpy>
40013454:	e089000a 	add	r0, r9, sl
40013458:	e3c09801 	bic	r9, r0, #65536	; 0x10000
4001345c:	e3a00000 	mov	r0, #0
40013460:	e58d0018 	str	r0, [sp, #24]
40013464:	e1a00000 	nop			; (mov r0, r0)
40013468:	e2877001 	add	r7, r7, #1
4001346c:	e5d70000 	ldrb	r0, [r7]
40013470:	e3500000 	cmp	r0, #0
40013474:	1affff6e 	bne	40013234 <MyDebugSNPrint+0x44>
40013478:	e3a00000 	mov	r0, #0
4001347c:	e7c40009 	strb	r0, [r4, r9]
40013480:	e1c590b0 	strh	r9, [r5]
40013484:	eaffff66 	b	40013224 <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

40013488 <CyU3PBusyWait>:
40013488:	ea000006 	b	400134a8 <CyU3PBusyWait+0x20>
4001348c:	e3a01000 	mov	r1, #0
40013490:	ea000002 	b	400134a0 <CyU3PBusyWait+0x18>
40013494:	e281100a 	add	r1, r1, #10
40013498:	e241100a 	sub	r1, r1, #10
4001349c:	e2811001 	add	r1, r1, #1
400134a0:	e351001f 	cmp	r1, #31
400134a4:	3afffffa 	bcc	40013494 <CyU3PBusyWait+0xc>
400134a8:	e1b02000 	movs	r2, r0
400134ac:	e2403001 	sub	r3, r0, #1
400134b0:	e1a00803 	lsl	r0, r3, #16
400134b4:	e1a00820 	lsr	r0, r0, #16
400134b8:	1afffff3 	bne	4001348c <CyU3PBusyWait+0x4>
400134bc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

400134c0 <CyU3PComputeChecksum>:
400134c0:	e92d4010 	push	{r4, lr}
400134c4:	e1a03000 	mov	r3, r0
400134c8:	e3a00000 	mov	r0, #0
400134cc:	e3530000 	cmp	r3, #0
400134d0:	0a000003 	beq	400134e4 <CyU3PComputeChecksum+0x24>
400134d4:	e3510000 	cmp	r1, #0
400134d8:	0a000001 	beq	400134e4 <CyU3PComputeChecksum+0x24>
400134dc:	e3520000 	cmp	r2, #0
400134e0:	1a000001 	bne	400134ec <CyU3PComputeChecksum+0x2c>
400134e4:	e3a00040 	mov	r0, #64	; 0x40
400134e8:	ea00000a 	b	40013518 <CyU3PComputeChecksum+0x58>
400134ec:	e3a0e000 	mov	lr, #0
400134f0:	e582e000 	str	lr, [r2]
400134f4:	e3a0c000 	mov	ip, #0
400134f8:	ea000004 	b	40013510 <CyU3PComputeChecksum+0x50>
400134fc:	e592e000 	ldr	lr, [r2]
40013500:	e793410c 	ldr	r4, [r3, ip, lsl #2]
40013504:	e08ee004 	add	lr, lr, r4
40013508:	e582e000 	str	lr, [r2]
4001350c:	e28cc001 	add	ip, ip, #1
40013510:	e15c0121 	cmp	ip, r1, lsr #2
40013514:	3afffff8 	bcc	400134fc <CyU3PComputeChecksum+0x3c>
40013518:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

4001351c <__aeabi_memclr4>:
4001351c:	e92d4030 	push	{r4, r5, lr}
40013520:	e1a04000 	mov	r4, r0
40013524:	e1a05001 	mov	r5, r1
40013528:	e3a02000 	mov	r2, #0
4001352c:	e1a01005 	mov	r1, r5
40013530:	e1a00004 	mov	r0, r4
40013534:	eb000020 	bl	400135bc <__aeabi_memset>
40013538:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

4001353c <__aeabi_memcpy>:
4001353c:	e92d4010 	push	{r4, lr}
40013540:	e1a03000 	mov	r3, r0
40013544:	e1a0c001 	mov	ip, r1
40013548:	e1500001 	cmp	r0, r1
4001354c:	2a000006 	bcs	4001356c <__aeabi_memcpy+0x30>
40013550:	ea000001 	b	4001355c <__aeabi_memcpy+0x20>
40013554:	e4dce001 	ldrb	lr, [ip], #1
40013558:	e4c3e001 	strb	lr, [r3], #1
4001355c:	e1b0e002 	movs	lr, r2
40013560:	e2422001 	sub	r2, r2, #1
40013564:	1afffffa 	bne	40013554 <__aeabi_memcpy+0x18>
40013568:	ea000009 	b	40013594 <__aeabi_memcpy+0x58>
4001356c:	e080e002 	add	lr, r0, r2
40013570:	e24e3001 	sub	r3, lr, #1
40013574:	e081e002 	add	lr, r1, r2
40013578:	e24ec001 	sub	ip, lr, #1
4001357c:	ea000001 	b	40013588 <__aeabi_memcpy+0x4c>
40013580:	e45ce001 	ldrb	lr, [ip], #-1
40013584:	e443e001 	strb	lr, [r3], #-1
40013588:	e1b0e002 	movs	lr, r2
4001358c:	e2422001 	sub	r2, r2, #1
40013590:	1afffffa 	bne	40013580 <__aeabi_memcpy+0x44>
40013594:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

40013598 <__aeabi_memcpy4>:
40013598:	e92d4070 	push	{r4, r5, r6, lr}
4001359c:	e1a04000 	mov	r4, r0
400135a0:	e1a05001 	mov	r5, r1
400135a4:	e1a06002 	mov	r6, r2
400135a8:	e1a02006 	mov	r2, r6
400135ac:	e1a01005 	mov	r1, r5
400135b0:	e1a00004 	mov	r0, r4
400135b4:	ebffffe0 	bl	4001353c <__aeabi_memcpy>
400135b8:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

400135bc <__aeabi_memset>:
400135bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400135c0:	e1a03000 	mov	r3, r0
400135c4:	ea000000 	b	400135cc <__aeabi_memset+0x10>
400135c8:	e4c32001 	strb	r2, [r3], #1
400135cc:	e1b0c001 	movs	ip, r1
400135d0:	e2411001 	sub	r1, r1, #1
400135d4:	1afffffb 	bne	400135c8 <__aeabi_memset+0xc>
400135d8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

400135dc <CyU3PApplicationDefine>:
400135dc:	e92d4010 	push	{r4, lr}
400135e0:	e24dd020 	sub	sp, sp, #32
400135e4:	e3e00000 	mvn	r0, #0
400135e8:	e59f10b4 	ldr	r1, [pc, #180]	; 400136a4 <CyU3PApplicationDefine+0xc8>
400135ec:	e5810000 	str	r0, [r1]
400135f0:	e3a00000 	mov	r0, #0
400135f4:	e59f10ac 	ldr	r1, [pc, #172]	; 400136a8 <CyU3PApplicationDefine+0xcc>
400135f8:	e5810000 	str	r0, [r1]
400135fc:	ebffc009 	bl	40003628 <CyU3PMemInit>
40013600:	eb001694 	bl	40019058 <CyU3PDmaApplicationDefine>
40013604:	e3a02028 	mov	r2, #40	; 0x28
40013608:	e3a01000 	mov	r1, #0
4001360c:	e59f0098 	ldr	r0, [pc, #152]	; 400136ac <CyU3PApplicationDefine+0xd0>
40013610:	ebffd943 	bl	40009b24 <_txe_event_flags_create>
40013614:	e3a00080 	mov	r0, #128	; 0x80
40013618:	ebffc015 	bl	40003674 <CyU3PMemAlloc>
4001361c:	e1a04000 	mov	r4, r0
40013620:	e3a0303c 	mov	r3, #60	; 0x3c
40013624:	e3a02080 	mov	r2, #128	; 0x80
40013628:	e1cd20f0 	strd	r2, [sp]
4001362c:	e1a03004 	mov	r3, r4
40013630:	e3a02006 	mov	r2, #6
40013634:	e3a01000 	mov	r1, #0
40013638:	e59f0070 	ldr	r0, [pc, #112]	; 400136b0 <CyU3PApplicationDefine+0xd4>
4001363c:	ebffdacd 	bl	4000a178 <_txe_queue_create>
40013640:	e3a00b01 	mov	r0, #1024	; 0x400
40013644:	ebffc00a 	bl	40003674 <CyU3PMemAlloc>
40013648:	e1a04000 	mov	r4, r0
4001364c:	e3a030a8 	mov	r3, #168	; 0xa8
40013650:	e3a02001 	mov	r2, #1
40013654:	e3a01000 	mov	r1, #0
40013658:	e3a00004 	mov	r0, #4
4001365c:	e28dc00c 	add	ip, sp, #12
40013660:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013664:	e3a02b01 	mov	r2, #1024	; 0x400
40013668:	e1a03001 	mov	r3, r1
4001366c:	e58d2004 	str	r2, [sp, #4]
40013670:	e59f203c 	ldr	r2, [pc, #60]	; 400136b4 <CyU3PApplicationDefine+0xd8>
40013674:	e28f103c 	add	r1, pc, #60	; 0x3c
40013678:	e58d0008 	str	r0, [sp, #8]
4001367c:	e59f0048 	ldr	r0, [pc, #72]	; 400136cc <CyU3PApplicationDefine+0xf0>
40013680:	e58d4000 	str	r4, [sp]
40013684:	ebffdba1 	bl	4000a510 <_txe_thread_create>
40013688:	eb000082 	bl	40013898 <CyU3PSibApplicationDefine>
4001368c:	ebfffd3d 	bl	40012b88 <CyU3PDebugApplicationDefine>
40013690:	eb001d16 	bl	4001aaf0 <CyU3PPibApplicationDefine>
40013694:	eb00013c 	bl	40013b8c <CyU3PLppApplicationDefine>
40013698:	eb002b6f 	bl	4001e45c <CyU3PUibApplicationDefine>
4001369c:	e28dd020 	add	sp, sp, #32
400136a0:	e8bd8010 	pop	{r4, pc}
400136a4:	40030c84 	.word	0x40030c84
400136a8:	40030c88 	.word	0x40030c88
400136ac:	400314a4 	.word	0x400314a4
400136b0:	400314cc 	.word	0x400314cc
400136b4:	40013784 	.word	0x40013784
400136b8:	535f3230 	.word	0x535f3230
400136bc:	45545359 	.word	0x45545359
400136c0:	48545f4d 	.word	0x48545f4d
400136c4:	44414552 	.word	0x44414552
400136c8:	00000000 	.word	0x00000000
400136cc:	400313fc 	.word	0x400313fc

Disassembly of section i.CyU3PSysCheckBootState:

400136d0 <CyU3PSysCheckBootState>:
400136d0:	e92d4070 	push	{r4, r5, r6, lr}
400136d4:	e3a00000 	mov	r0, #0
400136d8:	e59f106c 	ldr	r1, [pc, #108]	; 4001374c <CyU3PSysCheckBootState+0x7c>
400136dc:	e5810000 	str	r0, [r1]
400136e0:	e59f0068 	ldr	r0, [pc, #104]	; 40013750 <CyU3PSysCheckBootState+0x80>
400136e4:	e5900000 	ldr	r0, [r0]
400136e8:	e3100401 	tst	r0, #16777216	; 0x1000000
400136ec:	0a000015 	beq	40013748 <CyU3PSysCheckBootState+0x78>
400136f0:	e59f005c 	ldr	r0, [pc, #92]	; 40013754 <CyU3PSysCheckBootState+0x84>
400136f4:	e5900000 	ldr	r0, [r0]
400136f8:	e3500001 	cmp	r0, #1
400136fc:	1a000011 	bne	40013748 <CyU3PSysCheckBootState+0x78>
40013700:	e3a00000 	mov	r0, #0
40013704:	e59f1048 	ldr	r1, [pc, #72]	; 40013754 <CyU3PSysCheckBootState+0x84>
40013708:	e5810000 	str	r0, [r1]
4001370c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013710:	e5904004 	ldr	r4, [r0, #4]
40013714:	e1a05004 	mov	r5, r4
40013718:	e3a02901 	mov	r2, #16384	; 0x4000
4001371c:	e1a01005 	mov	r1, r5
40013720:	e3a00000 	mov	r0, #0
40013724:	ebffc06a 	bl	400038d4 <CyU3PMemCopy>
40013728:	e3a00101 	mov	r0, #1073741824	; 0x40000000
4001372c:	e5900008 	ldr	r0, [r0, #8]
40013730:	e59f1020 	ldr	r1, [pc, #32]	; 40013758 <CyU3PSysCheckBootState+0x88>
40013734:	e1500001 	cmp	r0, r1
40013738:	1a000002 	bne	40013748 <CyU3PSysCheckBootState+0x78>
4001373c:	e2840901 	add	r0, r4, #16384	; 0x4000
40013740:	e59f1004 	ldr	r1, [pc, #4]	; 4001374c <CyU3PSysCheckBootState+0x7c>
40013744:	e5810000 	str	r0, [r1]
40013748:	e8bd8070 	pop	{r4, r5, r6, pc}
4001374c:	40030c8c 	.word	0x40030c8c
40013750:	e0050000 	.word	0xe0050000
40013754:	40030c88 	.word	0x40030c88
40013758:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

4001375c <CyU3PSysFwMsgHandler>:
4001375c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013760 <CyU3PSysModuleInitCompleteEvt>:
40013760:	e92d4010 	push	{r4, lr}
40013764:	e1a04000 	mov	r4, r0
40013768:	e3a00010 	mov	r0, #16
4001376c:	e1a01410 	lsl	r1, r0, r4
40013770:	e3a02000 	mov	r2, #0
40013774:	e59f0004 	ldr	r0, [pc, #4]	; 40013780 <CyU3PSysModuleInitCompleteEvt+0x20>
40013778:	ebffd989 	bl	40009da4 <_txe_event_flags_set>
4001377c:	e8bd8010 	pop	{r4, pc}
40013780:	400314a4 	.word	0x400314a4

Disassembly of section i.CyU3PSysThreadEntry:

40013784 <CyU3PSysThreadEntry>:
40013784:	e92d4010 	push	{r4, lr}
40013788:	e24dd028 	sub	sp, sp, #40	; 0x28
4001378c:	e3a04c02 	mov	r4, #512	; 0x200
40013790:	e3844080 	orr	r4, r4, #128	; 0x80
40013794:	e3e03000 	mvn	r3, #0
40013798:	e58d3000 	str	r3, [sp]
4001379c:	e28d3024 	add	r3, sp, #36	; 0x24
400137a0:	e3a02003 	mov	r2, #3
400137a4:	e1a01004 	mov	r1, r4
400137a8:	e59f00d8 	ldr	r0, [pc, #216]	; 40013888 <CyU3PSysThreadEntry+0x104>
400137ac:	ebffd94c 	bl	40009ce4 <_txe_event_flags_get>
400137b0:	e28d2020 	add	r2, sp, #32
400137b4:	e3a01000 	mov	r1, #0
400137b8:	e59f00cc 	ldr	r0, [pc, #204]	; 4001388c <CyU3PSysThreadEntry+0x108>
400137bc:	ebffdc09 	bl	4000a7e8 <_txe_thread_priority_change>
400137c0:	ebffd34e 	bl	40008500 <CyFxApplicationDefine>
400137c4:	e28d2020 	add	r2, sp, #32
400137c8:	e3a01004 	mov	r1, #4
400137cc:	e59f00b8 	ldr	r0, [pc, #184]	; 4001388c <CyU3PSysThreadEntry+0x108>
400137d0:	ebffdc04 	bl	4000a7e8 <_txe_thread_priority_change>
400137d4:	ea00002a 	b	40013884 <CyU3PSysThreadEntry+0x100>
400137d8:	e59f00b0 	ldr	r0, [pc, #176]	; 40013890 <CyU3PSysThreadEntry+0x10c>
400137dc:	e5903000 	ldr	r3, [r0]
400137e0:	e58d3000 	str	r3, [sp]
400137e4:	e28d3024 	add	r3, sp, #36	; 0x24
400137e8:	e3a02001 	mov	r2, #1
400137ec:	e3e01000 	mvn	r1, #0
400137f0:	e59f0090 	ldr	r0, [pc, #144]	; 40013888 <CyU3PSysThreadEntry+0x104>
400137f4:	ebffd93a 	bl	40009ce4 <_txe_event_flags_get>
400137f8:	e58d0020 	str	r0, [sp, #32]
400137fc:	e59d0020 	ldr	r0, [sp, #32]
40013800:	e3500000 	cmp	r0, #0
40013804:	0a000000 	beq	4001380c <CyU3PSysThreadEntry+0x88>
40013808:	ea00001d 	b	40013884 <CyU3PSysThreadEntry+0x100>
4001380c:	e3a04001 	mov	r4, #1
40013810:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013814:	e0000004 	and	r0, r0, r4
40013818:	e58d0024 	str	r0, [sp, #36]	; 0x24
4001381c:	ea000014 	b	40013874 <CyU3PSysThreadEntry+0xf0>
40013820:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013824:	e3100001 	tst	r0, #1
40013828:	0a000011 	beq	40013874 <CyU3PSysThreadEntry+0xf0>
4001382c:	e3a02000 	mov	r2, #0
40013830:	e28d1008 	add	r1, sp, #8
40013834:	e59f0058 	ldr	r0, [pc, #88]	; 40013894 <CyU3PSysThreadEntry+0x110>
40013838:	ebffdae4 	bl	4000a3d0 <_txe_queue_receive>
4001383c:	e58d0020 	str	r0, [sp, #32]
40013840:	e59d0020 	ldr	r0, [sp, #32]
40013844:	e3500000 	cmp	r0, #0
40013848:	1a000006 	bne	40013868 <CyU3PSysThreadEntry+0xe4>
4001384c:	e1dd00b8 	ldrh	r0, [sp, #8]
40013850:	e2000902 	and	r0, r0, #32768	; 0x8000
40013854:	e1b007a0 	lsrs	r0, r0, #15
40013858:	1a000005 	bne	40013874 <CyU3PSysThreadEntry+0xf0>
4001385c:	e28d0008 	add	r0, sp, #8
40013860:	ebffffbd 	bl	4001375c <CyU3PSysFwMsgHandler>
40013864:	ea000002 	b	40013874 <CyU3PSysThreadEntry+0xf0>
40013868:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001386c:	e3c00001 	bic	r0, r0, #1
40013870:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013874:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013878:	e3500000 	cmp	r0, #0
4001387c:	1affffe7 	bne	40013820 <CyU3PSysThreadEntry+0x9c>
40013880:	e1a00000 	nop			; (mov r0, r0)
40013884:	eaffffd3 	b	400137d8 <CyU3PSysThreadEntry+0x54>
40013888:	400314a4 	.word	0x400314a4
4001388c:	400313fc 	.word	0x400313fc
40013890:	40030c84 	.word	0x40030c84
40013894:	400314cc 	.word	0x400314cc

Disassembly of section i.CyU3PSibApplicationDefine:

40013898 <CyU3PSibApplicationDefine>:
40013898:	e92d4010 	push	{r4, lr}
4001389c:	e24dd020 	sub	sp, sp, #32
400138a0:	e3a04000 	mov	r4, #0
400138a4:	e3a02028 	mov	r2, #40	; 0x28
400138a8:	e3a01000 	mov	r1, #0
400138ac:	e59f0064 	ldr	r0, [pc, #100]	; 40013918 <CyU3PSibApplicationDefine+0x80>
400138b0:	ebffd89b 	bl	40009b24 <_txe_event_flags_create>
400138b4:	e3a00000 	mov	r0, #0
400138b8:	e59f105c 	ldr	r1, [pc, #92]	; 4001391c <CyU3PSibApplicationDefine+0x84>
400138bc:	e5810000 	str	r0, [r1]
400138c0:	e3a00b02 	mov	r0, #2048	; 0x800
400138c4:	ebffbf6a 	bl	40003674 <CyU3PMemAlloc>
400138c8:	e1a04000 	mov	r4, r0
400138cc:	e3540000 	cmp	r4, #0
400138d0:	0a00000e 	beq	40013910 <CyU3PSibApplicationDefine+0x78>
400138d4:	e3a030a8 	mov	r3, #168	; 0xa8
400138d8:	e3a02001 	mov	r2, #1
400138dc:	e3a01000 	mov	r1, #0
400138e0:	e3a00004 	mov	r0, #4
400138e4:	e28dc00c 	add	ip, sp, #12
400138e8:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400138ec:	e3a02b02 	mov	r2, #2048	; 0x800
400138f0:	e1a03001 	mov	r3, r1
400138f4:	e58d2004 	str	r2, [sp, #4]
400138f8:	e59f2020 	ldr	r2, [pc, #32]	; 40013920 <CyU3PSibApplicationDefine+0x88>
400138fc:	e28f1020 	add	r1, pc, #32
40013900:	e58d0008 	str	r0, [sp, #8]
40013904:	e59f0028 	ldr	r0, [pc, #40]	; 40013934 <CyU3PSibApplicationDefine+0x9c>
40013908:	e58d4000 	str	r4, [sp]
4001390c:	ebffdaff 	bl	4000a510 <_txe_thread_create>
40013910:	e28dd020 	add	sp, sp, #32
40013914:	e8bd8010 	pop	{r4, pc}
40013918:	400315b0 	.word	0x400315b0
4001391c:	40030c90 	.word	0x40030c90
40013920:	40013990 	.word	0x40013990
40013924:	535f3630 	.word	0x535f3630
40013928:	545f4249 	.word	0x545f4249
4001392c:	41455248 	.word	0x41455248
40013930:	00000044 	.word	0x00000044
40013934:	40031508 	.word	0x40031508

Disassembly of section i.CyU3PSibInitIntfParams:

40013938 <CyU3PSibInitIntfParams>:
40013938:	e0802100 	add	r2, r0, r0, lsl #2
4001393c:	e59f3048 	ldr	r3, [pc, #72]	; 4001398c <CyU3PSibInitIntfParams+0x54>
40013940:	e0831102 	add	r1, r3, r2, lsl #2
40013944:	e3a020ff 	mov	r2, #255	; 0xff
40013948:	e5c12000 	strb	r2, [r1]
4001394c:	e3a02002 	mov	r2, #2
40013950:	e5c12008 	strb	r2, [r1, #8]
40013954:	e3a02001 	mov	r2, #1
40013958:	e5c12009 	strb	r2, [r1, #9]
4001395c:	e3a02000 	mov	r2, #0
40013960:	e5c12010 	strb	r2, [r1, #16]
40013964:	e5c1200a 	strb	r2, [r1, #10]
40013968:	e3a020ff 	mov	r2, #255	; 0xff
4001396c:	e5c1200b 	strb	r2, [r1, #11]
40013970:	e3a02000 	mov	r2, #0
40013974:	e581200c 	str	r2, [r1, #12]
40013978:	e3a02004 	mov	r2, #4
4001397c:	e5c12011 	strb	r2, [r1, #17]
40013980:	e3a02000 	mov	r2, #0
40013984:	e5c12012 	strb	r2, [r1, #18]
40013988:	e12fff1e 	bx	lr
4001398c:	400315d8 	.word	0x400315d8

Disassembly of section i.CyU3PSibThreadEntry:

40013990 <CyU3PSibThreadEntry>:
40013990:	e92d4010 	push	{r4, lr}
40013994:	e3a00000 	mov	r0, #0
40013998:	ebffffe6 	bl	40013938 <CyU3PSibInitIntfParams>
4001399c:	e3a00001 	mov	r0, #1
400139a0:	ebffffe4 	bl	40013938 <CyU3PSibInitIntfParams>
400139a4:	e3a00003 	mov	r0, #3
400139a8:	ebffff6c 	bl	40013760 <CyU3PSysModuleInitCompleteEvt>
400139ac:	ea000009 	b	400139d8 <CyU3PSibThreadEntry+0x48>
400139b0:	e59f0024 	ldr	r0, [pc, #36]	; 400139dc <CyU3PSibThreadEntry+0x4c>
400139b4:	e5900000 	ldr	r0, [r0]
400139b8:	e3500000 	cmp	r0, #0
400139bc:	0a000003 	beq	400139d0 <CyU3PSibThreadEntry+0x40>
400139c0:	e59f0014 	ldr	r0, [pc, #20]	; 400139dc <CyU3PSibThreadEntry+0x4c>
400139c4:	e5900000 	ldr	r0, [r0]
400139c8:	e12fff30 	blx	r0
400139cc:	ea000001 	b	400139d8 <CyU3PSibThreadEntry+0x48>
400139d0:	e3a0000a 	mov	r0, #10
400139d4:	ebffd3fa 	bl	400089c4 <_tx_thread_sleep>
400139d8:	eafffff4 	b	400139b0 <CyU3PSibThreadEntry+0x20>
400139dc:	40030c90 	.word	0x40030c90

Disassembly of section i.CyU3PGpioSetClock:

400139e0 <CyU3PGpioSetClock>:
400139e0:	e92d4070 	push	{r4, r5, r6, lr}
400139e4:	e1a04000 	mov	r4, r0
400139e8:	e3a05000 	mov	r5, #0
400139ec:	e5d40000 	ldrb	r0, [r4]
400139f0:	e3500002 	cmp	r0, #2
400139f4:	ba000002 	blt	40013a04 <CyU3PGpioSetClock+0x24>
400139f8:	e5d40000 	ldrb	r0, [r4]
400139fc:	e3500010 	cmp	r0, #16
40013a00:	da000001 	ble	40013a0c <CyU3PGpioSetClock+0x2c>
40013a04:	e3a00040 	mov	r0, #64	; 0x40
40013a08:	e8bd8070 	pop	{r4, r5, r6, pc}
40013a0c:	e5d40001 	ldrb	r0, [r4, #1]
40013a10:	e3500000 	cmp	r0, #0
40013a14:	1a000004 	bne	40013a2c <CyU3PGpioSetClock+0x4c>
40013a18:	e5940004 	ldr	r0, [r4, #4]
40013a1c:	e3500000 	cmp	r0, #0
40013a20:	0a000009 	beq	40013a4c <CyU3PGpioSetClock+0x6c>
40013a24:	e3a00040 	mov	r0, #64	; 0x40
40013a28:	eafffff6 	b	40013a08 <CyU3PGpioSetClock+0x28>
40013a2c:	e5d40001 	ldrb	r0, [r4, #1]
40013a30:	e3500002 	cmp	r0, #2
40013a34:	ba000002 	blt	40013a44 <CyU3PGpioSetClock+0x64>
40013a38:	e5d40001 	ldrb	r0, [r4, #1]
40013a3c:	e3500040 	cmp	r0, #64	; 0x40
40013a40:	da000001 	ble	40013a4c <CyU3PGpioSetClock+0x6c>
40013a44:	e3a00040 	mov	r0, #64	; 0x40
40013a48:	eaffffee 	b	40013a08 <CyU3PGpioSetClock+0x28>
40013a4c:	e5d40009 	ldrb	r0, [r4, #9]
40013a50:	e3500004 	cmp	r0, #4
40013a54:	ba000001 	blt	40013a60 <CyU3PGpioSetClock+0x80>
40013a58:	e3a00040 	mov	r0, #64	; 0x40
40013a5c:	eaffffe9 	b	40013a08 <CyU3PGpioSetClock+0x28>
40013a60:	e5d40008 	ldrb	r0, [r4, #8]
40013a64:	e3500004 	cmp	r0, #4
40013a68:	ba000001 	blt	40013a74 <CyU3PGpioSetClock+0x94>
40013a6c:	e3a00040 	mov	r0, #64	; 0x40
40013a70:	eaffffe4 	b	40013a08 <CyU3PGpioSetClock+0x28>
40013a74:	e5d40000 	ldrb	r0, [r4]
40013a78:	e2400001 	sub	r0, r0, #1
40013a7c:	e5d41009 	ldrb	r1, [r4, #9]
40013a80:	e1800281 	orr	r0, r0, r1, lsl #5
40013a84:	e5d41008 	ldrb	r1, [r4, #8]
40013a88:	e1800381 	orr	r0, r0, r1, lsl #7
40013a8c:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013a90:	e5940004 	ldr	r0, [r4, #4]
40013a94:	e3500000 	cmp	r0, #0
40013a98:	0a000000 	beq	40013aa0 <CyU3PGpioSetClock+0xc0>
40013a9c:	e3855010 	orr	r5, r5, #16
40013aa0:	e59f0030 	ldr	r0, [pc, #48]	; 40013ad8 <CyU3PGpioSetClock+0xf8>
40013aa4:	e5805018 	str	r5, [r0, #24]
40013aa8:	e5d40001 	ldrb	r0, [r4, #1]
40013aac:	e3500000 	cmp	r0, #0
40013ab0:	0a000006 	beq	40013ad0 <CyU3PGpioSetClock+0xf0>
40013ab4:	e3a00001 	mov	r0, #1
40013ab8:	ebfffe72 	bl	40013488 <CyU3PBusyWait>
40013abc:	e5d40001 	ldrb	r0, [r4, #1]
40013ac0:	e2400001 	sub	r0, r0, #1
40013ac4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013ac8:	e59f1008 	ldr	r1, [pc, #8]	; 40013ad8 <CyU3PGpioSetClock+0xf8>
40013acc:	e581001c 	str	r0, [r1, #28]
40013ad0:	e3a00000 	mov	r0, #0
40013ad4:	eaffffcb 	b	40013a08 <CyU3PGpioSetClock+0x28>
40013ad8:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013adc <CyU3PI2cSetClock>:
40013adc:	e92d4070 	push	{r4, r5, r6, lr}
40013ae0:	e1a05000 	mov	r5, r0
40013ae4:	e3a06000 	mov	r6, #0
40013ae8:	e3550000 	cmp	r5, #0
40013aec:	1a000001 	bne	40013af8 <CyU3PI2cSetClock+0x1c>
40013af0:	e3a00040 	mov	r0, #64	; 0x40
40013af4:	e8bd8070 	pop	{r4, r5, r6, pc}
40013af8:	e0852105 	add	r2, r5, r5, lsl #2
40013afc:	e1a01082 	lsl	r1, r2, #1
40013b00:	e59f207c 	ldr	r2, [pc, #124]	; 40013b84 <CyU3PI2cSetClock+0xa8>
40013b04:	e5922000 	ldr	r2, [r2]
40013b08:	e1a00122 	lsr	r0, r2, #2
40013b0c:	ebfff398 	bl	40010974 <__aeabi_uidivmod>
40013b10:	e1a04000 	mov	r4, r0
40013b14:	e3140003 	tst	r4, #3
40013b18:	1a000001 	bne	40013b24 <CyU3PI2cSetClock+0x48>
40013b1c:	e1a04144 	asr	r4, r4, #2
40013b20:	ea00000a 	b	40013b50 <CyU3PI2cSetClock+0x74>
40013b24:	e2040003 	and	r0, r4, #3
40013b28:	e3500001 	cmp	r0, #1
40013b2c:	0a000002 	beq	40013b3c <CyU3PI2cSetClock+0x60>
40013b30:	e2040003 	and	r0, r4, #3
40013b34:	e3500002 	cmp	r0, #2
40013b38:	1a000002 	bne	40013b48 <CyU3PI2cSetClock+0x6c>
40013b3c:	e1a04144 	asr	r4, r4, #2
40013b40:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013b44:	ea000001 	b	40013b50 <CyU3PI2cSetClock+0x74>
40013b48:	e3a00001 	mov	r0, #1
40013b4c:	e0804144 	add	r4, r0, r4, asr #2
40013b50:	e2444001 	sub	r4, r4, #1
40013b54:	e3540001 	cmp	r4, #1
40013b58:	ba000001 	blt	40013b64 <CyU3PI2cSetClock+0x88>
40013b5c:	e3540a01 	cmp	r4, #4096	; 0x1000
40013b60:	ba000001 	blt	40013b6c <CyU3PI2cSetClock+0x90>
40013b64:	e3a00040 	mov	r0, #64	; 0x40
40013b68:	eaffffe1 	b	40013af4 <CyU3PI2cSetClock+0x18>
40013b6c:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013b70:	e1866000 	orr	r6, r6, r0
40013b74:	e59f000c 	ldr	r0, [pc, #12]	; 40013b88 <CyU3PI2cSetClock+0xac>
40013b78:	e5806020 	str	r6, [r0, #32]
40013b7c:	e3a00000 	mov	r0, #0
40013b80:	eaffffdb 	b	40013af4 <CyU3PI2cSetClock+0x18>
40013b84:	40030c50 	.word	0x40030c50
40013b88:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013b8c <CyU3PLppApplicationDefine>:
40013b8c:	e92d4010 	push	{r4, lr}
40013b90:	e24dd020 	sub	sp, sp, #32
40013b94:	e3a00b01 	mov	r0, #1024	; 0x400
40013b98:	ebffbeb5 	bl	40003674 <CyU3PMemAlloc>
40013b9c:	e1a04000 	mov	r4, r0
40013ba0:	e3a030a8 	mov	r3, #168	; 0xa8
40013ba4:	e3a02001 	mov	r2, #1
40013ba8:	e3a01000 	mov	r1, #0
40013bac:	e3a00004 	mov	r0, #4
40013bb0:	e28dc00c 	add	ip, sp, #12
40013bb4:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013bb8:	e3a02b01 	mov	r2, #1024	; 0x400
40013bbc:	e1a03001 	mov	r3, r1
40013bc0:	e58d2004 	str	r2, [sp, #4]
40013bc4:	e59f2054 	ldr	r2, [pc, #84]	; 40013c20 <CyU3PLppApplicationDefine+0x94>
40013bc8:	e28f1054 	add	r1, pc, #84	; 0x54
40013bcc:	e58d0008 	str	r0, [sp, #8]
40013bd0:	e59f005c 	ldr	r0, [pc, #92]	; 40013c34 <CyU3PLppApplicationDefine+0xa8>
40013bd4:	e58d4000 	str	r4, [sp]
40013bd8:	ebffda4c 	bl	4000a510 <_txe_thread_create>
40013bdc:	e3a02028 	mov	r2, #40	; 0x28
40013be0:	e3a01000 	mov	r1, #0
40013be4:	e59f004c 	ldr	r0, [pc, #76]	; 40013c38 <CyU3PLppApplicationDefine+0xac>
40013be8:	ebffd7cd 	bl	40009b24 <_txe_event_flags_create>
40013bec:	e3a00040 	mov	r0, #64	; 0x40
40013bf0:	ebffbe9f 	bl	40003674 <CyU3PMemAlloc>
40013bf4:	e1a04000 	mov	r4, r0
40013bf8:	e3a0303c 	mov	r3, #60	; 0x3c
40013bfc:	e3a02040 	mov	r2, #64	; 0x40
40013c00:	e1cd20f0 	strd	r2, [sp]
40013c04:	e1a03004 	mov	r3, r4
40013c08:	e3a02005 	mov	r2, #5
40013c0c:	e3a01000 	mov	r1, #0
40013c10:	e59f0024 	ldr	r0, [pc, #36]	; 40013c3c <CyU3PLppApplicationDefine+0xb0>
40013c14:	ebffd957 	bl	4000a178 <_txe_queue_create>
40013c18:	e28dd020 	add	sp, sp, #32
40013c1c:	e8bd8010 	pop	{r4, pc}
40013c20:	40013f80 	.word	0x40013f80
40013c24:	4c5f3530 	.word	0x4c5f3530
40013c28:	545f5050 	.word	0x545f5050
40013c2c:	41455248 	.word	0x41455248
40013c30:	00000044 	.word	0x00000044
40013c34:	4003163c 	.word	0x4003163c
40013c38:	40031614 	.word	0x40031614
40013c3c:	400316e4 	.word	0x400316e4

Disassembly of section i.CyU3PLppEventSend:

40013c40 <CyU3PLppEventSend>:
40013c40:	e92d4070 	push	{r4, r5, r6, lr}
40013c44:	e1a04000 	mov	r4, r0
40013c48:	e3a02000 	mov	r2, #0
40013c4c:	e1a01004 	mov	r1, r4
40013c50:	e59f000c 	ldr	r0, [pc, #12]	; 40013c64 <CyU3PLppEventSend+0x24>
40013c54:	ebffd852 	bl	40009da4 <_txe_event_flags_set>
40013c58:	e1a05000 	mov	r5, r0
40013c5c:	e1a00005 	mov	r0, r5
40013c60:	e8bd8070 	pop	{r4, r5, r6, pc}
40013c64:	40031614 	.word	0x40031614

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40013c68 <CyU3PLppGpioBlockIsOn>:
40013c68:	e59f0004 	ldr	r0, [pc, #4]	; 40013c74 <CyU3PLppGpioBlockIsOn+0xc>
40013c6c:	e5900000 	ldr	r0, [r0]
40013c70:	e12fff1e 	bx	lr
40013c74:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PLppInit:

40013c78 <CyU3PLppInit>:
40013c78:	e92d4070 	push	{r4, r5, r6, lr}
40013c7c:	e1a04000 	mov	r4, r0
40013c80:	e1a05001 	mov	r5, r1
40013c84:	e3a06000 	mov	r6, #0
40013c88:	e3a00001 	mov	r0, #1
40013c8c:	e59f1174 	ldr	r1, [pc, #372]	; 40013e08 <CyU3PLppInit+0x190>
40013c90:	e5d11000 	ldrb	r1, [r1]
40013c94:	e1110410 	tst	r1, r0, lsl r4
40013c98:	0a000001 	beq	40013ca4 <CyU3PLppInit+0x2c>
40013c9c:	e3a00043 	mov	r0, #67	; 0x43
40013ca0:	e8bd8070 	pop	{r4, r5, r6, pc}
40013ca4:	e3540001 	cmp	r4, #1
40013ca8:	1a000004 	bne	40013cc0 <CyU3PLppInit+0x48>
40013cac:	eb000310 	bl	400148f4 <CyFx3DevIsI2sSupported>
40013cb0:	e3500000 	cmp	r0, #0
40013cb4:	1a000001 	bne	40013cc0 <CyU3PLppInit+0x48>
40013cb8:	e3a00046 	mov	r0, #70	; 0x46
40013cbc:	eafffff7 	b	40013ca0 <CyU3PLppInit+0x28>
40013cc0:	e3540005 	cmp	r4, #5
40013cc4:	308ff104 	addcc	pc, pc, r4, lsl #2
40013cc8:	ea000027 	b	40013d6c <CyU3PLppInit+0xf4>
40013ccc:	ea000003 	b	40013ce0 <CyU3PLppInit+0x68>
40013cd0:	ea000009 	b	40013cfc <CyU3PLppInit+0x84>
40013cd4:	ea00000f 	b	40013d18 <CyU3PLppInit+0xa0>
40013cd8:	ea000015 	b	40013d34 <CyU3PLppInit+0xbc>
40013cdc:	ea00001b 	b	40013d50 <CyU3PLppInit+0xd8>
40013ce0:	e1a00000 	nop			; (mov r0, r0)
40013ce4:	e59f0120 	ldr	r0, [pc, #288]	; 40013e0c <CyU3PLppInit+0x194>
40013ce8:	e5900020 	ldr	r0, [r0, #32]
40013cec:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013cf0:	0a000000 	beq	40013cf8 <CyU3PLppInit+0x80>
40013cf4:	e3a06001 	mov	r6, #1
40013cf8:	ea00001b 	b	40013d6c <CyU3PLppInit+0xf4>
40013cfc:	e1a00000 	nop			; (mov r0, r0)
40013d00:	e59f0104 	ldr	r0, [pc, #260]	; 40013e0c <CyU3PLppInit+0x194>
40013d04:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40013d08:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013d0c:	0a000000 	beq	40013d14 <CyU3PLppInit+0x9c>
40013d10:	e3a06001 	mov	r6, #1
40013d14:	ea000014 	b	40013d6c <CyU3PLppInit+0xf4>
40013d18:	e1a00000 	nop			; (mov r0, r0)
40013d1c:	e59f00e8 	ldr	r0, [pc, #232]	; 40013e0c <CyU3PLppInit+0x194>
40013d20:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40013d24:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013d28:	0a000000 	beq	40013d30 <CyU3PLppInit+0xb8>
40013d2c:	e3a06001 	mov	r6, #1
40013d30:	ea00000d 	b	40013d6c <CyU3PLppInit+0xf4>
40013d34:	e1a00000 	nop			; (mov r0, r0)
40013d38:	e59f00cc 	ldr	r0, [pc, #204]	; 40013e0c <CyU3PLppInit+0x194>
40013d3c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40013d40:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013d44:	0a000000 	beq	40013d4c <CyU3PLppInit+0xd4>
40013d48:	e3a06001 	mov	r6, #1
40013d4c:	ea000006 	b	40013d6c <CyU3PLppInit+0xf4>
40013d50:	e1a00000 	nop			; (mov r0, r0)
40013d54:	e59f00b0 	ldr	r0, [pc, #176]	; 40013e0c <CyU3PLppInit+0x194>
40013d58:	e5900018 	ldr	r0, [r0, #24]
40013d5c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40013d60:	0a000000 	beq	40013d68 <CyU3PLppInit+0xf0>
40013d64:	e3a06001 	mov	r6, #1
40013d68:	e1a00000 	nop			; (mov r0, r0)
40013d6c:	e1a00000 	nop			; (mov r0, r0)
40013d70:	e3560000 	cmp	r6, #0
40013d74:	1a000001 	bne	40013d80 <CyU3PLppInit+0x108>
40013d78:	e3a00047 	mov	r0, #71	; 0x47
40013d7c:	eaffffc7 	b	40013ca0 <CyU3PLppInit+0x28>
40013d80:	e59f0080 	ldr	r0, [pc, #128]	; 40013e08 <CyU3PLppInit+0x190>
40013d84:	e5d00000 	ldrb	r0, [r0]
40013d88:	e3500000 	cmp	r0, #0
40013d8c:	1a000017 	bne	40013df0 <CyU3PLppInit+0x178>
40013d90:	e59f0078 	ldr	r0, [pc, #120]	; 40013e10 <CyU3PLppInit+0x198>
40013d94:	e5900000 	ldr	r0, [r0]
40013d98:	e3500000 	cmp	r0, #0
40013d9c:	1a000010 	bne	40013de4 <CyU3PLppInit+0x16c>
40013da0:	e59f006c 	ldr	r0, [pc, #108]	; 40013e14 <CyU3PLppInit+0x19c>
40013da4:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013da8:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40013dac:	e59f1060 	ldr	r1, [pc, #96]	; 40013e14 <CyU3PLppInit+0x19c>
40013db0:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013db4:	e3a0000a 	mov	r0, #10
40013db8:	ebfffdb2 	bl	40013488 <CyU3PBusyWait>
40013dbc:	e59f0050 	ldr	r0, [pc, #80]	; 40013e14 <CyU3PLppInit+0x19c>
40013dc0:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013dc4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013dc8:	e59f1044 	ldr	r1, [pc, #68]	; 40013e14 <CyU3PLppInit+0x19c>
40013dcc:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
40013dd0:	e1a00000 	nop			; (mov r0, r0)
40013dd4:	e59f0038 	ldr	r0, [pc, #56]	; 40013e14 <CyU3PLppInit+0x19c>
40013dd8:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40013ddc:	e3100001 	tst	r0, #1
40013de0:	0afffffb 	beq	40013dd4 <CyU3PLppInit+0x15c>
40013de4:	eb000051 	bl	40013f30 <CyU3PLppSocketInit>
40013de8:	e3a00014 	mov	r0, #20
40013dec:	eb003828 	bl	40021e94 <CyU3PVicEnableInt>
40013df0:	e1a02005 	mov	r2, r5
40013df4:	e3a01001 	mov	r1, #1
40013df8:	e1a00004 	mov	r0, r4
40013dfc:	eb0000f1 	bl	400141c8 <CyU3UpdateLppActiveInfo>
40013e00:	e3a00000 	mov	r0, #0
40013e04:	eaffffa5 	b	40013ca0 <CyU3PLppInit+0x28>
40013e08:	40030c94 	.word	0x40030c94
40013e0c:	e0052000 	.word	0xe0052000
40013e10:	40030c6c 	.word	0x40030c6c
40013e14:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40013e18 <CyU3PLppRestoreState>:
40013e18:	e92d4070 	push	{r4, r5, r6, lr}
40013e1c:	e1a04000 	mov	r4, r0
40013e20:	e3a00000 	mov	r0, #0
40013e24:	e59f10ec 	ldr	r1, [pc, #236]	; 40013f18 <CyU3PLppRestoreState+0x100>
40013e28:	e5c10000 	strb	r0, [r1]
40013e2c:	e5940000 	ldr	r0, [r4]
40013e30:	e59f10e4 	ldr	r1, [pc, #228]	; 40013f1c <CyU3PLppRestoreState+0x104>
40013e34:	e5810018 	str	r0, [r1, #24]
40013e38:	e3a00001 	mov	r0, #1
40013e3c:	ebfffd91 	bl	40013488 <CyU3PBusyWait>
40013e40:	e5940004 	ldr	r0, [r4, #4]
40013e44:	e59f10d0 	ldr	r1, [pc, #208]	; 40013f1c <CyU3PLppRestoreState+0x104>
40013e48:	e581001c 	str	r0, [r1, #28]
40013e4c:	e3a00001 	mov	r0, #1
40013e50:	ebfffd8c 	bl	40013488 <CyU3PBusyWait>
40013e54:	e5940008 	ldr	r0, [r4, #8]
40013e58:	e59f10c0 	ldr	r1, [pc, #192]	; 40013f20 <CyU3PLppRestoreState+0x108>
40013e5c:	e581000c 	str	r0, [r1, #12]
40013e60:	e3a00001 	mov	r0, #1
40013e64:	ebfffd87 	bl	40013488 <CyU3PBusyWait>
40013e68:	e594000c 	ldr	r0, [r4, #12]
40013e6c:	e59f10ac 	ldr	r1, [pc, #172]	; 40013f20 <CyU3PLppRestoreState+0x108>
40013e70:	e5810010 	str	r0, [r1, #16]
40013e74:	e3a00001 	mov	r0, #1
40013e78:	ebfffd82 	bl	40013488 <CyU3PBusyWait>
40013e7c:	e5940010 	ldr	r0, [r4, #16]
40013e80:	e59f1098 	ldr	r1, [pc, #152]	; 40013f20 <CyU3PLppRestoreState+0x108>
40013e84:	e5810008 	str	r0, [r1, #8]
40013e88:	e3a00001 	mov	r0, #1
40013e8c:	ebfffd7d 	bl	40013488 <CyU3PBusyWait>
40013e90:	e3a00004 	mov	r0, #4
40013e94:	e5941014 	ldr	r1, [r4, #20]
40013e98:	ebffff76 	bl	40013c78 <CyU3PLppInit>
40013e9c:	e3a00001 	mov	r0, #1
40013ea0:	ebfffd78 	bl	40013488 <CyU3PBusyWait>
40013ea4:	e59f0078 	ldr	r0, [pc, #120]	; 40013f24 <CyU3PLppRestoreState+0x10c>
40013ea8:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013eac:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013eb0:	e59f106c 	ldr	r1, [pc, #108]	; 40013f24 <CyU3PLppRestoreState+0x10c>
40013eb4:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40013eb8:	e3a0000a 	mov	r0, #10
40013ebc:	ebfffd71 	bl	40013488 <CyU3PBusyWait>
40013ec0:	e1a00000 	nop			; (mov r0, r0)
40013ec4:	e59f0058 	ldr	r0, [pc, #88]	; 40013f24 <CyU3PLppRestoreState+0x10c>
40013ec8:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40013ecc:	e3100001 	tst	r0, #1
40013ed0:	0afffffb 	beq	40013ec4 <CyU3PLppRestoreState+0xac>
40013ed4:	e3a05000 	mov	r5, #0
40013ed8:	ea000006 	b	40013ef8 <CyU3PLppRestoreState+0xe0>
40013edc:	e2850006 	add	r0, r5, #6
40013ee0:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40013ee4:	e59f103c 	ldr	r1, [pc, #60]	; 40013f28 <CyU3PLppRestoreState+0x110>
40013ee8:	e7810105 	str	r0, [r1, r5, lsl #2]
40013eec:	e3a00001 	mov	r0, #1
40013ef0:	ebfffd64 	bl	40013488 <CyU3PBusyWait>
40013ef4:	e2855001 	add	r5, r5, #1
40013ef8:	e355003d 	cmp	r5, #61	; 0x3d
40013efc:	3afffff6 	bcc	40013edc <CyU3PLppRestoreState+0xc4>
40013f00:	e59f0024 	ldr	r0, [pc, #36]	; 40013f2c <CyU3PLppRestoreState+0x114>
40013f04:	e5900000 	ldr	r0, [r0]
40013f08:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40013f0c:	e59f1018 	ldr	r1, [pc, #24]	; 40013f2c <CyU3PLppRestoreState+0x114>
40013f10:	e5810000 	str	r0, [r1]
40013f14:	e8bd8070 	pop	{r4, r5, r6, pc}
40013f18:	40030c94 	.word	0x40030c94
40013f1c:	e0052000 	.word	0xe0052000
40013f20:	e0051000 	.word	0xe0051000
40013f24:	e0001000 	.word	0xe0001000
40013f28:	e0001100 	.word	0xe0001100
40013f2c:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

40013f30 <CyU3PLppSocketInit>:
40013f30:	e3a00000 	mov	r0, #0
40013f34:	ea00000d 	b	40013f70 <CyU3PLppSocketInit+0x40>
40013f38:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40013f3c:	e59f2038 	ldr	r2, [pc, #56]	; 40013f7c <CyU3PLppSocketInit+0x4c>
40013f40:	e0822380 	add	r2, r2, r0, lsl #7
40013f44:	e582100c 	str	r1, [r2, #12]
40013f48:	e3e01000 	mvn	r1, #0
40013f4c:	e59f2028 	ldr	r2, [pc, #40]	; 40013f7c <CyU3PLppSocketInit+0x4c>
40013f50:	e0822380 	add	r2, r2, r0, lsl #7
40013f54:	e5821010 	str	r1, [r2, #16]
40013f58:	e3a01000 	mov	r1, #0
40013f5c:	e59f2018 	ldr	r2, [pc, #24]	; 40013f7c <CyU3PLppSocketInit+0x4c>
40013f60:	e0822380 	add	r2, r2, r0, lsl #7
40013f64:	e5821014 	str	r1, [r2, #20]
40013f68:	e2801001 	add	r1, r0, #1
40013f6c:	e20100ff 	and	r0, r1, #255	; 0xff
40013f70:	e3500008 	cmp	r0, #8
40013f74:	baffffef 	blt	40013f38 <CyU3PLppSocketInit+0x8>
40013f78:	e12fff1e 	bx	lr
40013f7c:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

40013f80 <CyU3PLppThreadEntry>:
40013f80:	e92d4010 	push	{r4, lr}
40013f84:	e24dd020 	sub	sp, sp, #32
40013f88:	e3a00006 	mov	r0, #6
40013f8c:	ebfffdf3 	bl	40013760 <CyU3PSysModuleInitCompleteEvt>
40013f90:	e3a000f1 	mov	r0, #241	; 0xf1
40013f94:	e59f1144 	ldr	r1, [pc, #324]	; 400140e0 <CyU3PLppThreadEntry+0x160>
40013f98:	e5810000 	str	r0, [r1]
40013f9c:	e1a00000 	nop			; (mov r0, r0)
40013fa0:	e3e03000 	mvn	r3, #0
40013fa4:	e58d3000 	str	r3, [sp]
40013fa8:	e28d301c 	add	r3, sp, #28
40013fac:	e3a02001 	mov	r2, #1
40013fb0:	e59f0128 	ldr	r0, [pc, #296]	; 400140e0 <CyU3PLppThreadEntry+0x160>
40013fb4:	e5901000 	ldr	r1, [r0]
40013fb8:	e59f0124 	ldr	r0, [pc, #292]	; 400140e4 <CyU3PLppThreadEntry+0x164>
40013fbc:	ebffd748 	bl	40009ce4 <_txe_event_flags_get>
40013fc0:	e1a04000 	mov	r4, r0
40013fc4:	e59f1114 	ldr	r1, [pc, #276]	; 400140e0 <CyU3PLppThreadEntry+0x160>
40013fc8:	e59d001c 	ldr	r0, [sp, #28]
40013fcc:	e5911000 	ldr	r1, [r1]
40013fd0:	e0000001 	and	r0, r0, r1
40013fd4:	e58d001c 	str	r0, [sp, #28]
40013fd8:	e3540000 	cmp	r4, #0
40013fdc:	0a000000 	beq	40013fe4 <CyU3PLppThreadEntry+0x64>
40013fe0:	eaffffee 	b	40013fa0 <CyU3PLppThreadEntry+0x20>
40013fe4:	ea000009 	b	40014010 <CyU3PLppThreadEntry+0x90>
40013fe8:	e3a02000 	mov	r2, #0
40013fec:	e28d1008 	add	r1, sp, #8
40013ff0:	e59f00f0 	ldr	r0, [pc, #240]	; 400140e8 <CyU3PLppThreadEntry+0x168>
40013ff4:	ebffd8f5 	bl	4000a3d0 <_txe_queue_receive>
40013ff8:	e1a04000 	mov	r4, r0
40013ffc:	e3540000 	cmp	r4, #0
40014000:	0a000002 	beq	40014010 <CyU3PLppThreadEntry+0x90>
40014004:	e59d001c 	ldr	r0, [sp, #28]
40014008:	e3c00001 	bic	r0, r0, #1
4001400c:	e58d001c 	str	r0, [sp, #28]
40014010:	e59d001c 	ldr	r0, [sp, #28]
40014014:	e3100001 	tst	r0, #1
40014018:	1afffff2 	bne	40013fe8 <CyU3PLppThreadEntry+0x68>
4001401c:	e59d001c 	ldr	r0, [sp, #28]
40014020:	e3100020 	tst	r0, #32
40014024:	0a000008 	beq	4001404c <CyU3PLppThreadEntry+0xcc>
40014028:	e59f00bc 	ldr	r0, [pc, #188]	; 400140ec <CyU3PLppThreadEntry+0x16c>
4001402c:	e5900000 	ldr	r0, [r0]
40014030:	e3500000 	cmp	r0, #0
40014034:	0a000002 	beq	40014044 <CyU3PLppThreadEntry+0xc4>
40014038:	e59f10ac 	ldr	r1, [pc, #172]	; 400140ec <CyU3PLppThreadEntry+0x16c>
4001403c:	e5910000 	ldr	r0, [r1]
40014040:	e12fff30 	blx	r0
40014044:	e3a0000f 	mov	r0, #15
40014048:	eb003791 	bl	40021e94 <CyU3PVicEnableInt>
4001404c:	e59d001c 	ldr	r0, [sp, #28]
40014050:	e3100010 	tst	r0, #16
40014054:	0a000008 	beq	4001407c <CyU3PLppThreadEntry+0xfc>
40014058:	e59f008c 	ldr	r0, [pc, #140]	; 400140ec <CyU3PLppThreadEntry+0x16c>
4001405c:	e5900004 	ldr	r0, [r0, #4]
40014060:	e3500000 	cmp	r0, #0
40014064:	0a000002 	beq	40014074 <CyU3PLppThreadEntry+0xf4>
40014068:	e59f107c 	ldr	r1, [pc, #124]	; 400140ec <CyU3PLppThreadEntry+0x16c>
4001406c:	e5910004 	ldr	r0, [r1, #4]
40014070:	e12fff30 	blx	r0
40014074:	e3a00010 	mov	r0, #16
40014078:	eb003785 	bl	40021e94 <CyU3PVicEnableInt>
4001407c:	e59d001c 	ldr	r0, [sp, #28]
40014080:	e3100080 	tst	r0, #128	; 0x80
40014084:	0a000008 	beq	400140ac <CyU3PLppThreadEntry+0x12c>
40014088:	e59f005c 	ldr	r0, [pc, #92]	; 400140ec <CyU3PLppThreadEntry+0x16c>
4001408c:	e5900008 	ldr	r0, [r0, #8]
40014090:	e3500000 	cmp	r0, #0
40014094:	0a000002 	beq	400140a4 <CyU3PLppThreadEntry+0x124>
40014098:	e59f104c 	ldr	r1, [pc, #76]	; 400140ec <CyU3PLppThreadEntry+0x16c>
4001409c:	e5910008 	ldr	r0, [r1, #8]
400140a0:	e12fff30 	blx	r0
400140a4:	e3a00011 	mov	r0, #17
400140a8:	eb003779 	bl	40021e94 <CyU3PVicEnableInt>
400140ac:	e59d001c 	ldr	r0, [sp, #28]
400140b0:	e3100040 	tst	r0, #64	; 0x40
400140b4:	0a000008 	beq	400140dc <CyU3PLppThreadEntry+0x15c>
400140b8:	e59f002c 	ldr	r0, [pc, #44]	; 400140ec <CyU3PLppThreadEntry+0x16c>
400140bc:	e590000c 	ldr	r0, [r0, #12]
400140c0:	e3500000 	cmp	r0, #0
400140c4:	0a000002 	beq	400140d4 <CyU3PLppThreadEntry+0x154>
400140c8:	e59f101c 	ldr	r1, [pc, #28]	; 400140ec <CyU3PLppThreadEntry+0x16c>
400140cc:	e591000c 	ldr	r0, [r1, #12]
400140d0:	e12fff30 	blx	r0
400140d4:	e3a00012 	mov	r0, #18
400140d8:	eb00376d 	bl	40021e94 <CyU3PVicEnableInt>
400140dc:	eaffffaf 	b	40013fa0 <CyU3PLppThreadEntry+0x20>
400140e0:	40030c98 	.word	0x40030c98
400140e4:	40031614 	.word	0x40031614
400140e8:	400316e4 	.word	0x400316e4
400140ec:	40031600 	.word	0x40031600

Disassembly of section i.CyU3PUartSetClock:

400140f0 <CyU3PUartSetClock>:
400140f0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400140f4:	e1a04000 	mov	r4, r0
400140f8:	e3a06000 	mov	r6, #0
400140fc:	e59f00bc 	ldr	r0, [pc, #188]	; 400141c0 <CyU3PUartSetClock+0xd0>
40014100:	e5907000 	ldr	r7, [r0]
40014104:	e3540000 	cmp	r4, #0
40014108:	1a000001 	bne	40014114 <CyU3PUartSetClock+0x24>
4001410c:	e3a00040 	mov	r0, #64	; 0x40
40014110:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014114:	e3540f96 	cmp	r4, #600	; 0x258
40014118:	2a000002 	bcs	40014128 <CyU3PUartSetClock+0x38>
4001411c:	e59f009c 	ldr	r0, [pc, #156]	; 400141c0 <CyU3PUartSetClock+0xd0>
40014120:	e5900000 	ldr	r0, [r0]
40014124:	e1a07220 	lsr	r7, r0, #4
40014128:	e1a01204 	lsl	r1, r4, #4
4001412c:	e1a00107 	lsl	r0, r7, #2
40014130:	ebfff20f 	bl	40010974 <__aeabi_uidivmod>
40014134:	e1a05000 	mov	r5, r0
40014138:	e3150003 	tst	r5, #3
4001413c:	1a000001 	bne	40014148 <CyU3PUartSetClock+0x58>
40014140:	e1a05145 	asr	r5, r5, #2
40014144:	ea00000a 	b	40014174 <CyU3PUartSetClock+0x84>
40014148:	e2050003 	and	r0, r5, #3
4001414c:	e3500001 	cmp	r0, #1
40014150:	0a000002 	beq	40014160 <CyU3PUartSetClock+0x70>
40014154:	e2050003 	and	r0, r5, #3
40014158:	e3500002 	cmp	r0, #2
4001415c:	1a000002 	bne	4001416c <CyU3PUartSetClock+0x7c>
40014160:	e1a05145 	asr	r5, r5, #2
40014164:	e3866801 	orr	r6, r6, #65536	; 0x10000
40014168:	ea000001 	b	40014174 <CyU3PUartSetClock+0x84>
4001416c:	e3a00001 	mov	r0, #1
40014170:	e0805145 	add	r5, r0, r5, asr #2
40014174:	e2455001 	sub	r5, r5, #1
40014178:	e3550001 	cmp	r5, #1
4001417c:	ba000001 	blt	40014188 <CyU3PUartSetClock+0x98>
40014180:	e3550801 	cmp	r5, #65536	; 0x10000
40014184:	ba000001 	blt	40014190 <CyU3PUartSetClock+0xa0>
40014188:	e3a00040 	mov	r0, #64	; 0x40
4001418c:	eaffffdf 	b	40014110 <CyU3PUartSetClock+0x20>
40014190:	e3540f96 	cmp	r4, #600	; 0x258
40014194:	2a000002 	bcs	400141a4 <CyU3PUartSetClock+0xb4>
40014198:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
4001419c:	e1866000 	orr	r6, r6, r0
400141a0:	ea000002 	b	400141b0 <CyU3PUartSetClock+0xc0>
400141a4:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400141a8:	e3800806 	orr	r0, r0, #393216	; 0x60000
400141ac:	e1866000 	orr	r6, r6, r0
400141b0:	e59f000c 	ldr	r0, [pc, #12]	; 400141c4 <CyU3PUartSetClock+0xd4>
400141b4:	e5806024 	str	r6, [r0, #36]	; 0x24
400141b8:	e3a00000 	mov	r0, #0
400141bc:	eaffffd3 	b	40014110 <CyU3PUartSetClock+0x20>
400141c0:	40030c50 	.word	0x40030c50
400141c4:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

400141c8 <CyU3UpdateLppActiveInfo>:
400141c8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400141cc:	e1a04000 	mov	r4, r0
400141d0:	e1a05001 	mov	r5, r1
400141d4:	e1a06002 	mov	r6, r2
400141d8:	e3a00001 	mov	r0, #1
400141dc:	e1a00410 	lsl	r0, r0, r4
400141e0:	e20070ff 	and	r7, r0, #255	; 0xff
400141e4:	e284000f 	add	r0, r4, #15
400141e8:	e20080ff 	and	r8, r0, #255	; 0xff
400141ec:	e59f0050 	ldr	r0, [pc, #80]	; 40014244 <CyU3UpdateLppActiveInfo+0x7c>
400141f0:	e7806104 	str	r6, [r0, r4, lsl #2]
400141f4:	e3550000 	cmp	r5, #0
400141f8:	0a000009 	beq	40014224 <CyU3UpdateLppActiveInfo+0x5c>
400141fc:	e3560000 	cmp	r6, #0
40014200:	0a000001 	beq	4001420c <CyU3UpdateLppActiveInfo+0x44>
40014204:	e1a00008 	mov	r0, r8
40014208:	eb003721 	bl	40021e94 <CyU3PVicEnableInt>
4001420c:	e59f0034 	ldr	r0, [pc, #52]	; 40014248 <CyU3UpdateLppActiveInfo+0x80>
40014210:	e5d00000 	ldrb	r0, [r0]
40014214:	e1800007 	orr	r0, r0, r7
40014218:	e59f1028 	ldr	r1, [pc, #40]	; 40014248 <CyU3UpdateLppActiveInfo+0x80>
4001421c:	e5c10000 	strb	r0, [r1]
40014220:	ea000006 	b	40014240 <CyU3UpdateLppActiveInfo+0x78>
40014224:	e59f001c 	ldr	r0, [pc, #28]	; 40014248 <CyU3UpdateLppActiveInfo+0x80>
40014228:	e5d00000 	ldrb	r0, [r0]
4001422c:	e1c00007 	bic	r0, r0, r7
40014230:	e59f1010 	ldr	r1, [pc, #16]	; 40014248 <CyU3UpdateLppActiveInfo+0x80>
40014234:	e5c10000 	strb	r0, [r1]
40014238:	e1a00008 	mov	r0, r8
4001423c:	eb00370f 	bl	40021e80 <CyU3PVicDisableInt>
40014240:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014244:	40031600 	.word	0x40031600
40014248:	40030c94 	.word	0x40030c94

Disassembly of section i.CyFx3DevClearSwInterrupt:

4001424c <CyFx3DevClearSwInterrupt>:
4001424c:	e59f000c 	ldr	r0, [pc, #12]	; 40014260 <CyFx3DevClearSwInterrupt+0x14>
40014250:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
40014254:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
40014258:	e580104c 	str	r1, [r0, #76]	; 0x4c
4001425c:	e12fff1e 	bx	lr
40014260:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

40014264 <CyFx3DevIOConfigure>:
40014264:	e92d4030 	push	{r4, r5, lr}
40014268:	e1b04000 	movs	r4, r0
4001426c:	e24dd024 	sub	sp, sp, #36	; 0x24
40014270:	0a000045 	beq	4001438c <CyFx3DevIOConfigure+0x128>
40014274:	eb00017b 	bl	40014868 <CyFx3DevIsGpif32Supported>
40014278:	e3500000 	cmp	r0, #0
4001427c:	e3a05000 	mov	r5, #0
40014280:	05845000 	streq	r5, [r4]
40014284:	eb0001ae 	bl	40014944 <CyFx3DevIsSib0Supported>
40014288:	e3500000 	cmp	r0, #0
4001428c:	05c45014 	strbeq	r5, [r4, #20]
40014290:	eb0001b5 	bl	4001496c <CyFx3DevIsSib1Supported>
40014294:	e3500000 	cmp	r0, #0
40014298:	05c45015 	strbeq	r5, [r4, #21]
4001429c:	eb000194 	bl	400148f4 <CyFx3DevIsI2sSupported>
400142a0:	e3500000 	cmp	r0, #0
400142a4:	1a000002 	bne	400142b4 <CyFx3DevIOConfigure+0x50>
400142a8:	e594000c 	ldr	r0, [r4, #12]
400142ac:	e3500000 	cmp	r0, #0
400142b0:	1a000035 	bne	4001438c <CyFx3DevIOConfigure+0x128>
400142b4:	e5940000 	ldr	r0, [r4]
400142b8:	e3500000 	cmp	r0, #0
400142bc:	0a000009 	beq	400142e8 <CyFx3DevIOConfigure+0x84>
400142c0:	e5d40016 	ldrb	r0, [r4, #22]
400142c4:	e3500000 	cmp	r0, #0
400142c8:	05d40014 	ldrbeq	r0, [r4, #20]
400142cc:	03500000 	cmpeq	r0, #0
400142d0:	05d40015 	ldrbeq	r0, [r4, #21]
400142d4:	03500000 	cmpeq	r0, #0
400142d8:	1a00002b 	bne	4001438c <CyFx3DevIOConfigure+0x128>
400142dc:	e3a00002 	mov	r0, #2
400142e0:	e5cd0000 	strb	r0, [sp]
400142e4:	ea000022 	b	40014374 <CyFx3DevIOConfigure+0x110>
400142e8:	e5d40014 	ldrb	r0, [r4, #20]
400142ec:	e3a02003 	mov	r2, #3
400142f0:	e3a03001 	mov	r3, #1
400142f4:	e3500000 	cmp	r0, #0
400142f8:	05cd2000 	strbeq	r2, [sp]
400142fc:	0a000004 	beq	40014314 <CyFx3DevIOConfigure+0xb0>
40014300:	e3500001 	cmp	r0, #1
40014304:	05cd3000 	strbeq	r3, [sp]
40014308:	0a000001 	beq	40014314 <CyFx3DevIOConfigure+0xb0>
4001430c:	e3500002 	cmp	r0, #2
40014310:	05cd5000 	strbeq	r5, [sp]
40014314:	e5d41015 	ldrb	r1, [r4, #21]
40014318:	e5d40016 	ldrb	r0, [r4, #22]
4001431c:	e3510002 	cmp	r1, #2
40014320:	1a000009 	bne	4001434c <CyFx3DevIOConfigure+0xe8>
40014324:	e3500004 	cmp	r0, #4
40014328:	05940004 	ldreq	r0, [r4, #4]
4001432c:	03500000 	cmpeq	r0, #0
40014330:	05940010 	ldreq	r0, [r4, #16]
40014334:	03500000 	cmpeq	r0, #0
40014338:	0594000c 	ldreq	r0, [r4, #12]
4001433c:	03500000 	cmpeq	r0, #0
40014340:	05cd5001 	strbeq	r5, [sp, #1]
40014344:	0a000013 	beq	40014398 <CyFx3DevIOConfigure+0x134>
40014348:	ea00000f 	b	4001438c <CyFx3DevIOConfigure+0x128>
4001434c:	e3500000 	cmp	r0, #0
40014350:	0a000009 	beq	4001437c <CyFx3DevIOConfigure+0x118>
40014354:	e3500001 	cmp	r0, #1
40014358:	13500002 	cmpne	r0, #2
4001435c:	13500003 	cmpne	r0, #3
40014360:	1a000009 	bne	4001438c <CyFx3DevIOConfigure+0x128>
40014364:	e3510001 	cmp	r1, #1
40014368:	05cd3001 	strbeq	r3, [sp, #1]
4001436c:	0a000009 	beq	40014398 <CyFx3DevIOConfigure+0x134>
40014370:	e3a00004 	mov	r0, #4
40014374:	e5cd0001 	strb	r0, [sp, #1]
40014378:	ea000006 	b	40014398 <CyFx3DevIOConfigure+0x134>
4001437c:	e5cd2001 	strb	r2, [sp, #1]
40014380:	e5d40015 	ldrb	r0, [r4, #21]
40014384:	e3500000 	cmp	r0, #0
40014388:	0a000002 	beq	40014398 <CyFx3DevIOConfigure+0x134>
4001438c:	e3a00000 	mov	r0, #0
40014390:	e28dd024 	add	sp, sp, #36	; 0x24
40014394:	e8bd8030 	pop	{r4, r5, pc}
40014398:	e5940004 	ldr	r0, [r4, #4]
4001439c:	e58d0004 	str	r0, [sp, #4]
400143a0:	e594000c 	ldr	r0, [r4, #12]
400143a4:	e58d000c 	str	r0, [sp, #12]
400143a8:	e5940010 	ldr	r0, [r4, #16]
400143ac:	e58d0010 	str	r0, [sp, #16]
400143b0:	e5940008 	ldr	r0, [r4, #8]
400143b4:	e58d0008 	str	r0, [sp, #8]
400143b8:	e5940018 	ldr	r0, [r4, #24]
400143bc:	e58d0014 	str	r0, [sp, #20]
400143c0:	e594001c 	ldr	r0, [r4, #28]
400143c4:	e58d0018 	str	r0, [sp, #24]
400143c8:	e5940020 	ldr	r0, [r4, #32]
400143cc:	e58d001c 	str	r0, [sp, #28]
400143d0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
400143d4:	e58d0020 	str	r0, [sp, #32]
400143d8:	e1a0000d 	mov	r0, sp
400143dc:	eb000054 	bl	40014534 <CyFx3DevIOSetConfig>
400143e0:	eaffffea 	b	40014390 <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

400143e4 <CyFx3DevIOIsGpio>:
400143e4:	e350003d 	cmp	r0, #61	; 0x3d
400143e8:	e3a02000 	mov	r2, #0
400143ec:	23a00000 	movcs	r0, #0
400143f0:	212fff1e 	bxcs	lr
400143f4:	e3500020 	cmp	r0, #32
400143f8:	83a02001 	movhi	r2, #1
400143fc:	82400020 	subhi	r0, r0, #32
40014400:	e59fc018 	ldr	ip, [pc, #24]	; 40014420 <CyFx3DevIOIsGpio+0x3c>
40014404:	e3510000 	cmp	r1, #0
40014408:	e08c1102 	add	r1, ip, r2, lsl #2
4001440c:	0591101c 	ldreq	r1, [r1, #28]
40014410:	15911014 	ldrne	r1, [r1, #20]
40014414:	e3a03001 	mov	r3, #1
40014418:	e0010013 	and	r0, r1, r3, lsl r0
4001441c:	e12fff1e 	bx	lr
40014420:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

40014424 <CyFx3DevIOIsI2cConfigured>:
40014424:	e59f0004 	ldr	r0, [pc, #4]	; 40014430 <CyFx3DevIOIsI2cConfigured+0xc>
40014428:	e5900008 	ldr	r0, [r0, #8]
4001442c:	e12fff1e 	bx	lr
40014430:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

40014434 <CyFx3DevIOIsI2sConfigured>:
40014434:	e59f0004 	ldr	r0, [pc, #4]	; 40014440 <CyFx3DevIOIsI2sConfigured+0xc>
40014438:	e590000c 	ldr	r0, [r0, #12]
4001443c:	e12fff1e 	bx	lr
40014440:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

40014444 <CyFx3DevIOIsSpiConfigured>:
40014444:	e59f0004 	ldr	r0, [pc, #4]	; 40014450 <CyFx3DevIOIsSpiConfigured+0xc>
40014448:	e5900010 	ldr	r0, [r0, #16]
4001444c:	e12fff1e 	bx	lr
40014450:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsUartConfigured:

40014454 <CyFx3DevIOIsUartConfigured>:
40014454:	e59f0004 	ldr	r0, [pc, #4]	; 40014460 <CyFx3DevIOIsUartConfigured+0xc>
40014458:	e5900004 	ldr	r0, [r0, #4]
4001445c:	e12fff1e 	bx	lr
40014460:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOSelectGpio:

40014464 <CyFx3DevIOSelectGpio>:
40014464:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014468:	e350003d 	cmp	r0, #61	; 0x3d
4001446c:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
40014470:	e3a08001 	mov	r8, #1
40014474:	e59f30b0 	ldr	r3, [pc, #176]	; 4001452c <CyFx3DevIOSelectGpio+0xc8>
40014478:	e1a0c018 	lsl	ip, r8, r0
4001447c:	e2837014 	add	r7, r3, #20
40014480:	e89700d0 	ldm	r7, {r4, r6, r7}
40014484:	e5935020 	ldr	r5, [r3, #32]
40014488:	e3510000 	cmp	r1, #0
4001448c:	e240e020 	sub	lr, r0, #32
40014490:	0a00000f 	beq	400144d4 <CyFx3DevIOSelectGpio+0x70>
40014494:	e3500020 	cmp	r0, #32
40014498:	2a000005 	bcs	400144b4 <CyFx3DevIOSelectGpio+0x50>
4001449c:	e3520000 	cmp	r2, #0
400144a0:	0187000c 	orreq	r0, r7, ip
400144a4:	0a00000f 	beq	400144e8 <CyFx3DevIOSelectGpio+0x84>
400144a8:	e184000c 	orr	r0, r4, ip
400144ac:	e5830014 	str	r0, [r3, #20]
400144b0:	ea000013 	b	40014504 <CyFx3DevIOSelectGpio+0xa0>
400144b4:	e3520000 	cmp	r2, #0
400144b8:	e20e00ff 	and	r0, lr, #255	; 0xff
400144bc:	e1a00018 	lsl	r0, r8, r0
400144c0:	01800005 	orreq	r0, r0, r5
400144c4:	0a00000d 	beq	40014500 <CyFx3DevIOSelectGpio+0x9c>
400144c8:	e1800006 	orr	r0, r0, r6
400144cc:	e5830018 	str	r0, [r3, #24]
400144d0:	ea00000b 	b	40014504 <CyFx3DevIOSelectGpio+0xa0>
400144d4:	e3500020 	cmp	r0, #32
400144d8:	2a000004 	bcs	400144f0 <CyFx3DevIOSelectGpio+0x8c>
400144dc:	e1c4000c 	bic	r0, r4, ip
400144e0:	e5830014 	str	r0, [r3, #20]
400144e4:	e1c7000c 	bic	r0, r7, ip
400144e8:	e583001c 	str	r0, [r3, #28]
400144ec:	ea000004 	b	40014504 <CyFx3DevIOSelectGpio+0xa0>
400144f0:	e1a00e18 	lsl	r0, r8, lr
400144f4:	e1c61000 	bic	r1, r6, r0
400144f8:	e1c50000 	bic	r0, r5, r0
400144fc:	e5831018 	str	r1, [r3, #24]
40014500:	e5830020 	str	r0, [r3, #32]
40014504:	e5931014 	ldr	r1, [r3, #20]
40014508:	e59f0020 	ldr	r0, [pc, #32]	; 40014530 <CyFx3DevIOSelectGpio+0xcc>
4001450c:	e580100c 	str	r1, [r0, #12]
40014510:	e5931018 	ldr	r1, [r3, #24]
40014514:	e5801010 	str	r1, [r0, #16]
40014518:	e593101c 	ldr	r1, [r3, #28]
4001451c:	e5801014 	str	r1, [r0, #20]
40014520:	e5931020 	ldr	r1, [r3, #32]
40014524:	e5801018 	str	r1, [r0, #24]
40014528:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001452c:	40030cb0 	.word	0x40030cb0
40014530:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

40014534 <CyFx3DevIOSetConfig>:
40014534:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014538:	e59f8208 	ldr	r8, [pc, #520]	; 40014748 <CyFx3DevIOSetConfig+0x214>
4001453c:	e1a05000 	mov	r5, r0
40014540:	e5980008 	ldr	r0, [r8, #8]
40014544:	e59f7200 	ldr	r7, [pc, #512]	; 4001474c <CyFx3DevIOSetConfig+0x218>
40014548:	e2006002 	and	r6, r0, #2
4001454c:	e5d50000 	ldrb	r0, [r5]
40014550:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
40014554:	e3500000 	cmp	r0, #0
40014558:	01c44944 	biceq	r4, r4, r4, asr #18
4001455c:	0a000008 	beq	40014584 <CyFx3DevIOSetConfig+0x50>
40014560:	e3500001 	cmp	r0, #1
40014564:	059f41e4 	ldreq	r4, [pc, #484]	; 40014750 <CyFx3DevIOSetConfig+0x21c>
40014568:	0a000005 	beq	40014584 <CyFx3DevIOSetConfig+0x50>
4001456c:	e3500002 	cmp	r0, #2
40014570:	059f41dc 	ldreq	r4, [pc, #476]	; 40014754 <CyFx3DevIOSetConfig+0x220>
40014574:	0a000001 	beq	40014580 <CyFx3DevIOSetConfig+0x4c>
40014578:	e3500003 	cmp	r0, #3
4001457c:	1a000058 	bne	400146e4 <CyFx3DevIOSetConfig+0x1b0>
40014580:	e3866010 	orr	r6, r6, #16
40014584:	e5d50001 	ldrb	r0, [r5, #1]
40014588:	e3500005 	cmp	r0, #5
4001458c:	308ff100 	addcc	pc, pc, r0, lsl #2
40014590:	ea000053 	b	400146e4 <CyFx3DevIOSetConfig+0x1b0>
40014594:	ea000003 	b	400145a8 <CyFx3DevIOSetConfig+0x74>
40014598:	ea000005 	b	400145b4 <CyFx3DevIOSetConfig+0x80>
4001459c:	ea000021 	b	40014628 <CyFx3DevIOSetConfig+0xf4>
400145a0:	ea00002c 	b	40014658 <CyFx3DevIOSetConfig+0x124>
400145a4:	ea000002 	b	400145b4 <CyFx3DevIOSetConfig+0x80>
400145a8:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
400145ac:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
400145b0:	ea000032 	b	40014680 <CyFx3DevIOSetConfig+0x14c>
400145b4:	e3500001 	cmp	r0, #1
400145b8:	e5950004 	ldr	r0, [r5, #4]
400145bc:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
400145c0:	e3500000 	cmp	r0, #0
400145c4:	1a000006 	bne	400145e4 <CyFx3DevIOSetConfig+0xb0>
400145c8:	e5950010 	ldr	r0, [r5, #16]
400145cc:	e3500000 	cmp	r0, #0
400145d0:	1a00000b 	bne	40014604 <CyFx3DevIOSetConfig+0xd0>
400145d4:	e595000c 	ldr	r0, [r5, #12]
400145d8:	e3500000 	cmp	r0, #0
400145dc:	1a00000e 	bne	4001461c <CyFx3DevIOSetConfig+0xe8>
400145e0:	ea000005 	b	400145fc <CyFx3DevIOSetConfig+0xc8>
400145e4:	e595000c 	ldr	r0, [r5, #12]
400145e8:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
400145ec:	e3500000 	cmp	r0, #0
400145f0:	05950010 	ldreq	r0, [r5, #16]
400145f4:	03500000 	cmpeq	r0, #0
400145f8:	1a000039 	bne	400146e4 <CyFx3DevIOSetConfig+0x1b0>
400145fc:	e3866c01 	orr	r6, r6, #256	; 0x100
40014600:	ea00001e 	b	40014680 <CyFx3DevIOSetConfig+0x14c>
40014604:	e595000c 	ldr	r0, [r5, #12]
40014608:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
4001460c:	e3500000 	cmp	r0, #0
40014610:	1a000033 	bne	400146e4 <CyFx3DevIOSetConfig+0x1b0>
40014614:	e3866c02 	orr	r6, r6, #512	; 0x200
40014618:	ea000018 	b	40014680 <CyFx3DevIOSetConfig+0x14c>
4001461c:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
40014620:	e3866c03 	orr	r6, r6, #768	; 0x300
40014624:	ea000015 	b	40014680 <CyFx3DevIOSetConfig+0x14c>
40014628:	e5950010 	ldr	r0, [r5, #16]
4001462c:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
40014630:	e3500000 	cmp	r0, #0
40014634:	1a00002a 	bne	400146e4 <CyFx3DevIOSetConfig+0x1b0>
40014638:	e5950004 	ldr	r0, [r5, #4]
4001463c:	e3866c05 	orr	r6, r6, #1280	; 0x500
40014640:	e3500000 	cmp	r0, #0
40014644:	e595000c 	ldr	r0, [r5, #12]
40014648:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
4001464c:	e3500000 	cmp	r0, #0
40014650:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014654:	ea000009 	b	40014680 <CyFx3DevIOSetConfig+0x14c>
40014658:	e5950004 	ldr	r0, [r5, #4]
4001465c:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014660:	e3500000 	cmp	r0, #0
40014664:	e5950010 	ldr	r0, [r5, #16]
40014668:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
4001466c:	e3500000 	cmp	r0, #0
40014670:	e595000c 	ldr	r0, [r5, #12]
40014674:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014678:	e3500000 	cmp	r0, #0
4001467c:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014680:	e5950008 	ldr	r0, [r5, #8]
40014684:	e5959014 	ldr	r9, [r5, #20]
40014688:	e3500000 	cmp	r0, #0
4001468c:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014690:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
40014694:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014698:	05950018 	ldreq	r0, [r5, #24]
4001469c:	01d00004 	bicseq	r0, r0, r4
400146a0:	0595e01c 	ldreq	lr, [r5, #28]
400146a4:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
400146a8:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
400146ac:	0595c020 	ldreq	ip, [r5, #32]
400146b0:	01dc0004 	bicseq	r0, ip, r4
400146b4:	1a00000a 	bne	400146e4 <CyFx3DevIOSetConfig+0x1b0>
400146b8:	e59f0098 	ldr	r0, [pc, #152]	; 40014758 <CyFx3DevIOSetConfig+0x224>
400146bc:	e3a01000 	mov	r1, #0
400146c0:	e01e2000 	ands	r2, lr, r0
400146c4:	000c2000 	andeq	r2, ip, r0
400146c8:	0a000001 	beq	400146d4 <CyFx3DevIOSetConfig+0x1a0>
400146cc:	e11c0000 	tst	ip, r0
400146d0:	1a000003 	bne	400146e4 <CyFx3DevIOSetConfig+0x1b0>
400146d4:	e2523001 	subs	r3, r2, #1
400146d8:	13a03001 	movne	r3, #1
400146dc:	e1120003 	tst	r2, r3
400146e0:	0a000001 	beq	400146ec <CyFx3DevIOSetConfig+0x1b8>
400146e4:	e3a00000 	mov	r0, #0
400146e8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400146ec:	e2811001 	add	r1, r1, #1
400146f0:	e3510008 	cmp	r1, #8
400146f4:	e1a00080 	lsl	r0, r0, #1
400146f8:	3afffff0 	bcc	400146c0 <CyFx3DevIOSetConfig+0x18c>
400146fc:	e588900c 	str	r9, [r8, #12]
40014700:	e5950018 	ldr	r0, [r5, #24]
40014704:	e5880010 	str	r0, [r8, #16]
40014708:	e595001c 	ldr	r0, [r5, #28]
4001470c:	e5880014 	str	r0, [r8, #20]
40014710:	e5950020 	ldr	r0, [r5, #32]
40014714:	e5880018 	str	r0, [r8, #24]
40014718:	e3a00001 	mov	r0, #1
4001471c:	eb0000a6 	bl	400149bc <CyFx3BusyWait>
40014720:	e5886008 	str	r6, [r8, #8]
40014724:	e59f0030 	ldr	r0, [pc, #48]	; 4001475c <CyFx3DevIOSetConfig+0x228>
40014728:	e3a02024 	mov	r2, #36	; 0x24
4001472c:	e1a01005 	mov	r1, r5
40014730:	ebfffb98 	bl	40013598 <__aeabi_memcpy4>
40014734:	e59f0024 	ldr	r0, [pc, #36]	; 40014760 <CyFx3DevIOSetConfig+0x22c>
40014738:	e5804004 	str	r4, [r0, #4]
4001473c:	e5807000 	str	r7, [r0]
40014740:	e3a00001 	mov	r0, #1
40014744:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014748:	e0051000 	.word	0xe0051000
4001474c:	3fe00000 	.word	0x3fe00000
40014750:	1ffff9e0 	.word	0x1ffff9e0
40014754:	1fffe000 	.word	0x1fffe000
40014758:	01010101 	.word	0x01010101
4001475c:	40030cb0 	.word	0x40030cb0
40014760:	40030ca8 	.word	0x40030ca8

Disassembly of section i.CyFx3DevIdentifyPart:

40014764 <CyFx3DevIdentifyPart>:
40014764:	e59f0078 	ldr	r0, [pc, #120]	; 400147e4 <CyFx3DevIdentifyPart+0x80>
40014768:	e5901008 	ldr	r1, [r0, #8]
4001476c:	e59f2074 	ldr	r2, [pc, #116]	; 400147e8 <CyFx3DevIdentifyPart+0x84>
40014770:	e1a01221 	lsr	r1, r1, #4
40014774:	e5923004 	ldr	r3, [r2, #4]
40014778:	e3530000 	cmp	r3, #0
4001477c:	15d20000 	ldrbne	r0, [r2]
40014780:	112fff1e 	bxne	lr
40014784:	e5900004 	ldr	r0, [r0, #4]
40014788:	e3100040 	tst	r0, #64	; 0x40
4001478c:	e59f2058 	ldr	r2, [pc, #88]	; 400147ec <CyFx3DevIdentifyPart+0x88>
40014790:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
40014794:	e3a00000 	mov	r0, #0
40014798:	e7923180 	ldr	r3, [r2, r0, lsl #3]
4001479c:	e1530001 	cmp	r3, r1
400147a0:	12800001 	addne	r0, r0, #1
400147a4:	120000ff 	andne	r0, r0, #255	; 0xff
400147a8:	1350001b 	cmpne	r0, #27
400147ac:	3afffff9 	bcc	40014798 <CyFx3DevIdentifyPart+0x34>
400147b0:	e350001b 	cmp	r0, #27
400147b4:	03a00003 	moveq	r0, #3
400147b8:	0a000000 	beq	400147c0 <CyFx3DevIdentifyPart+0x5c>
400147bc:	2a000003 	bcs	400147d0 <CyFx3DevIdentifyPart+0x6c>
400147c0:	e0821180 	add	r1, r2, r0, lsl #3
400147c4:	e5911004 	ldr	r1, [r1, #4]
400147c8:	e3110004 	tst	r1, #4
400147cc:	112fff1e 	bxne	lr
400147d0:	e59f1018 	ldr	r1, [pc, #24]	; 400147f0 <CyFx3DevIdentifyPart+0x8c>
400147d4:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
400147d8:	e3822004 	orr	r2, r2, #4
400147dc:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
400147e0:	e12fff1e 	bx	lr
400147e4:	e0055000 	.word	0xe0055000
400147e8:	40030c9c 	.word	0x40030c9c
400147ec:	40011b98 	.word	0x40011b98
400147f0:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

400147f4 <CyFx3DevInitPageTables>:
400147f4:	e92d4030 	push	{r4, r5, lr}
400147f8:	e59f0058 	ldr	r0, [pc, #88]	; 40014858 <CyFx3DevInitPageTables+0x64>
400147fc:	e3a04000 	mov	r4, #0
40014800:	e59f504c 	ldr	r5, [pc, #76]	; 40014854 <CyFx3DevInitPageTables+0x60>
40014804:	e5804004 	str	r4, [r0, #4]
40014808:	ebffffd5 	bl	40014764 <CyFx3DevIdentifyPart>
4001480c:	e59f1048 	ldr	r1, [pc, #72]	; 4001485c <CyFx3DevInitPageTables+0x68>
40014810:	e2450a05 	sub	r0, r5, #20480	; 0x5000
40014814:	e5801000 	str	r1, [r0]
40014818:	e2811201 	add	r1, r1, #268435456	; 0x10000000
4001481c:	e5801008 	str	r1, [r0, #8]
40014820:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
40014824:	e5801010 	str	r1, [r0, #16]
40014828:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
4001482c:	e5801018 	str	r1, [r0, #24]
40014830:	e59f1028 	ldr	r1, [pc, #40]	; 40014860 <CyFx3DevInitPageTables+0x6c>
40014834:	e5801020 	str	r1, [r0, #32]
40014838:	e59f1024 	ldr	r1, [pc, #36]	; 40014864 <CyFx3DevInitPageTables+0x70>
4001483c:	e580101c 	str	r1, [r0, #28]
40014840:	e5804024 	str	r4, [r0, #36]	; 0x24
40014844:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
40014848:	e3a00003 	mov	r0, #3
4001484c:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014850:	e8bd8030 	pop	{r4, r5, pc}
40014854:	e0058000 	.word	0xe0058000
40014858:	40030c9c 	.word	0x40030c9c
4001485c:	00000c12 	.word	0x00000c12
40014860:	fff00c12 	.word	0xfff00c12
40014864:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014868 <CyFx3DevIsGpif32Supported>:
40014868:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001486c:	ebffffbc 	bl	40014764 <CyFx3DevIdentifyPart>
40014870:	e350001b 	cmp	r0, #27
40014874:	359f1010 	ldrcc	r1, [pc, #16]	; 4001488c <CyFx3DevIsGpif32Supported+0x24>
40014878:	30810180 	addcc	r0, r1, r0, lsl #3
4001487c:	35900004 	ldrcc	r0, [r0, #4]
40014880:	32000010 	andcc	r0, r0, #16
40014884:	23a00000 	movcs	r0, #0
40014888:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001488c:	40011b98 	.word	0x40011b98

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014890 <CyFx3DevIsGpifConfigurable>:
40014890:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014894:	ebffffb2 	bl	40014764 <CyFx3DevIdentifyPart>
40014898:	e350001b 	cmp	r0, #27
4001489c:	2a000006 	bcs	400148bc <CyFx3DevIsGpifConfigurable+0x2c>
400148a0:	e59f101c 	ldr	r1, [pc, #28]	; 400148c4 <CyFx3DevIsGpifConfigurable+0x34>
400148a4:	e0810180 	add	r0, r1, r0, lsl #3
400148a8:	e5900004 	ldr	r0, [r0, #4]
400148ac:	e3100c0f 	tst	r0, #3840	; 0xf00
400148b0:	159f0010 	ldrne	r0, [pc, #16]	; 400148c8 <CyFx3DevIsGpifConfigurable+0x38>
400148b4:	15900008 	ldrne	r0, [r0, #8]
400148b8:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
400148bc:	e3a00001 	mov	r0, #1
400148c0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148c4:	40011b98 	.word	0x40011b98
400148c8:	40030c9c 	.word	0x40030c9c

Disassembly of section i.CyFx3DevIsGpifSupported:

400148cc <CyFx3DevIsGpifSupported>:
400148cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148d0:	ebffffa3 	bl	40014764 <CyFx3DevIdentifyPart>
400148d4:	e350001b 	cmp	r0, #27
400148d8:	359f1010 	ldrcc	r1, [pc, #16]	; 400148f0 <CyFx3DevIsGpifSupported+0x24>
400148dc:	30810180 	addcc	r0, r1, r0, lsl #3
400148e0:	35900004 	ldrcc	r0, [r0, #4]
400148e4:	32000008 	andcc	r0, r0, #8
400148e8:	23a00000 	movcs	r0, #0
400148ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400148f0:	40011b98 	.word	0x40011b98

Disassembly of section i.CyFx3DevIsI2sSupported:

400148f4 <CyFx3DevIsI2sSupported>:
400148f4:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400148f8:	ebffff99 	bl	40014764 <CyFx3DevIdentifyPart>
400148fc:	e350001b 	cmp	r0, #27
40014900:	359f1010 	ldrcc	r1, [pc, #16]	; 40014918 <CyFx3DevIsI2sSupported+0x24>
40014904:	30810180 	addcc	r0, r1, r0, lsl #3
40014908:	35900004 	ldrcc	r0, [r0, #4]
4001490c:	32000080 	andcc	r0, r0, #128	; 0x80
40014910:	23a00000 	movcs	r0, #0
40014914:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014918:	40011b98 	.word	0x40011b98

Disassembly of section i.CyFx3DevIsOtgSupported:

4001491c <CyFx3DevIsOtgSupported>:
4001491c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014920:	ebffff8f 	bl	40014764 <CyFx3DevIdentifyPart>
40014924:	e350001b 	cmp	r0, #27
40014928:	359f1010 	ldrcc	r1, [pc, #16]	; 40014940 <CyFx3DevIsOtgSupported+0x24>
4001492c:	30810180 	addcc	r0, r1, r0, lsl #3
40014930:	35900004 	ldrcc	r0, [r0, #4]
40014934:	32000002 	andcc	r0, r0, #2
40014938:	23a00000 	movcs	r0, #0
4001493c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014940:	40011b98 	.word	0x40011b98

Disassembly of section i.CyFx3DevIsSib0Supported:

40014944 <CyFx3DevIsSib0Supported>:
40014944:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014948:	ebffff85 	bl	40014764 <CyFx3DevIdentifyPart>
4001494c:	e350001b 	cmp	r0, #27
40014950:	359f1010 	ldrcc	r1, [pc, #16]	; 40014968 <CyFx3DevIsSib0Supported+0x24>
40014954:	30810180 	addcc	r0, r1, r0, lsl #3
40014958:	35900004 	ldrcc	r0, [r0, #4]
4001495c:	32000020 	andcc	r0, r0, #32
40014960:	23a00000 	movcs	r0, #0
40014964:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014968:	40011b98 	.word	0x40011b98

Disassembly of section i.CyFx3DevIsSib1Supported:

4001496c <CyFx3DevIsSib1Supported>:
4001496c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014970:	ebffff7b 	bl	40014764 <CyFx3DevIdentifyPart>
40014974:	e350001b 	cmp	r0, #27
40014978:	359f1010 	ldrcc	r1, [pc, #16]	; 40014990 <CyFx3DevIsSib1Supported+0x24>
4001497c:	30810180 	addcc	r0, r1, r0, lsl #3
40014980:	35900004 	ldrcc	r0, [r0, #4]
40014984:	32000040 	andcc	r0, r0, #64	; 0x40
40014988:	23a00000 	movcs	r0, #0
4001498c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014990:	40011b98 	.word	0x40011b98

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014994 <CyFx3DevIsUsb3Supported>:
40014994:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014998:	ebffff71 	bl	40014764 <CyFx3DevIdentifyPart>
4001499c:	e350001b 	cmp	r0, #27
400149a0:	359f1010 	ldrcc	r1, [pc, #16]	; 400149b8 <CyFx3DevIsUsb3Supported+0x24>
400149a4:	30810180 	addcc	r0, r1, r0, lsl #3
400149a8:	35900004 	ldrcc	r0, [r0, #4]
400149ac:	32000001 	andcc	r0, r0, #1
400149b0:	23a00000 	movcs	r0, #0
400149b4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400149b8:	40011b98 	.word	0x40011b98

Disassembly of section i.CyFx3BusyWait:

400149bc <CyFx3BusyWait>:
400149bc:	ea000003 	b	400149d0 <CyFx3BusyWait+0x14>
400149c0:	e3a01000 	mov	r1, #0
400149c4:	e2811001 	add	r1, r1, #1
400149c8:	e351002f 	cmp	r1, #47	; 0x2f
400149cc:	3afffffc 	bcc	400149c4 <CyFx3BusyWait+0x8>
400149d0:	e1b01000 	movs	r1, r0
400149d4:	e2400001 	sub	r0, r0, #1
400149d8:	e1a00800 	lsl	r0, r0, #16
400149dc:	e1a00820 	lsr	r0, r0, #16
400149e0:	1afffff6 	bne	400149c0 <CyFx3BusyWait+0x4>
400149e4:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

400149e8 <CyFx3PibDllEnable>:
400149e8:	e59f205c 	ldr	r2, [pc, #92]	; 40014a4c <CyFx3PibDllEnable+0x64>
400149ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400149f0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400149f4:	e3c00001 	bic	r0, r0, #1
400149f8:	e5820028 	str	r0, [r2, #40]	; 0x28
400149fc:	e3a00001 	mov	r0, #1
40014a00:	ebffffed 	bl	400149bc <CyFx3BusyWait>
40014a04:	e3a00003 	mov	r0, #3
40014a08:	e5820028 	str	r0, [r2, #40]	; 0x28
40014a0c:	e3a00001 	mov	r0, #1
40014a10:	ebffffe9 	bl	400149bc <CyFx3BusyWait>
40014a14:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014a18:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014a1c:	e5820028 	str	r0, [r2, #40]	; 0x28
40014a20:	e3a00001 	mov	r0, #1
40014a24:	ebffffe4 	bl	400149bc <CyFx3BusyWait>
40014a28:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014a2c:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014a30:	e5820028 	str	r0, [r2, #40]	; 0x28
40014a34:	e3a00001 	mov	r0, #1
40014a38:	ebffffdf 	bl	400149bc <CyFx3BusyWait>
40014a3c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014a40:	e3100004 	tst	r0, #4
40014a44:	0afffffc 	beq	40014a3c <CyFx3PibDllEnable+0x54>
40014a48:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014a4c:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014a50 <CyFx3PibGetDllStatus>:
40014a50:	e59f0008 	ldr	r0, [pc, #8]	; 40014a60 <CyFx3PibGetDllStatus+0x10>
40014a54:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014a58:	e2000004 	and	r0, r0, #4
40014a5c:	e12fff1e 	bx	lr
40014a60:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014a64 <CyFx3PibPowerOn>:
40014a64:	e92d4010 	push	{r4, lr}
40014a68:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014a6c:	ebffff96 	bl	400148cc <CyFx3DevIsGpifSupported>
40014a70:	e3500000 	cmp	r0, #0
40014a74:	1a000002 	bne	40014a84 <CyFx3PibPowerOn+0x20>
40014a78:	e4940004 	ldr	r0, [r4], #4
40014a7c:	e3500000 	cmp	r0, #0
40014a80:	1afffffc 	bne	40014a78 <CyFx3PibPowerOn+0x14>
40014a84:	e59f2028 	ldr	r2, [pc, #40]	; 40014ab4 <CyFx3PibPowerOn+0x50>
40014a88:	e3a00000 	mov	r0, #0
40014a8c:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014a90:	e3a0000a 	mov	r0, #10
40014a94:	ebffffc8 	bl	400149bc <CyFx3BusyWait>
40014a98:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014a9c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014aa0:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014aa4:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014aa8:	e3100001 	tst	r0, #1
40014aac:	0afffffc 	beq	40014aa4 <CyFx3PibPowerOn+0x40>
40014ab0:	e8bd8010 	pop	{r4, pc}
40014ab4:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014ab8 <CyU3PDmaSocketDisable>:
40014ab8:	e3a0c03f 	mov	ip, #63	; 0x3f
40014abc:	e00c1440 	and	r1, ip, r0, asr #8
40014ac0:	e20030ff 	and	r3, r0, #255	; 0xff
40014ac4:	e59fc048 	ldr	ip, [pc, #72]	; 40014b14 <CyU3PDmaSocketDisable+0x5c>
40014ac8:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014acc:	e08cc383 	add	ip, ip, r3, lsl #7
40014ad0:	e59c200c 	ldr	r2, [ip, #12]
40014ad4:	e3120601 	tst	r2, #1048576	; 0x100000
40014ad8:	1a000000 	bne	40014ae0 <CyU3PDmaSocketDisable+0x28>
40014adc:	e12fff1e 	bx	lr
40014ae0:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014ae4:	e59fc028 	ldr	ip, [pc, #40]	; 40014b14 <CyU3PDmaSocketDisable+0x5c>
40014ae8:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014aec:	e08cc383 	add	ip, ip, r3, lsl #7
40014af0:	e58c200c 	str	r2, [ip, #12]
40014af4:	e1a00000 	nop			; (mov r0, r0)
40014af8:	e59fc014 	ldr	ip, [pc, #20]	; 40014b14 <CyU3PDmaSocketDisable+0x5c>
40014afc:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014b00:	e08cc383 	add	ip, ip, r3, lsl #7
40014b04:	e59cc00c 	ldr	ip, [ip, #12]
40014b08:	e31c0601 	tst	ip, #1048576	; 0x100000
40014b0c:	1afffff9 	bne	40014af8 <CyU3PDmaSocketDisable+0x40>
40014b10:	eafffff1 	b	40014adc <CyU3PDmaSocketDisable+0x24>
40014b14:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014b18 <CyU3PDmaSocketGetConfig>:
40014b18:	e1a02000 	mov	r2, r0
40014b1c:	e3a0003f 	mov	r0, #63	; 0x3f
40014b20:	e0003442 	and	r3, r0, r2, asr #8
40014b24:	e202c0ff 	and	ip, r2, #255	; 0xff
40014b28:	e3510000 	cmp	r1, #0
40014b2c:	1a000001 	bne	40014b38 <CyU3PDmaSocketGetConfig+0x20>
40014b30:	e3a00040 	mov	r0, #64	; 0x40
40014b34:	e12fff1e 	bx	lr
40014b38:	e59f0074 	ldr	r0, [pc, #116]	; 40014bb4 <CyU3PDmaSocketGetConfig+0x9c>
40014b3c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b40:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014b44:	e5810000 	str	r0, [r1]
40014b48:	e59f0064 	ldr	r0, [pc, #100]	; 40014bb4 <CyU3PDmaSocketGetConfig+0x9c>
40014b4c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b50:	e080038c 	add	r0, r0, ip, lsl #7
40014b54:	e5900004 	ldr	r0, [r0, #4]
40014b58:	e5810004 	str	r0, [r1, #4]
40014b5c:	e59f0050 	ldr	r0, [pc, #80]	; 40014bb4 <CyU3PDmaSocketGetConfig+0x9c>
40014b60:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b64:	e080038c 	add	r0, r0, ip, lsl #7
40014b68:	e5900008 	ldr	r0, [r0, #8]
40014b6c:	e5810008 	str	r0, [r1, #8]
40014b70:	e59f003c 	ldr	r0, [pc, #60]	; 40014bb4 <CyU3PDmaSocketGetConfig+0x9c>
40014b74:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b78:	e080038c 	add	r0, r0, ip, lsl #7
40014b7c:	e590000c 	ldr	r0, [r0, #12]
40014b80:	e581000c 	str	r0, [r1, #12]
40014b84:	e59f0028 	ldr	r0, [pc, #40]	; 40014bb4 <CyU3PDmaSocketGetConfig+0x9c>
40014b88:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014b8c:	e080038c 	add	r0, r0, ip, lsl #7
40014b90:	e5900010 	ldr	r0, [r0, #16]
40014b94:	e5810010 	str	r0, [r1, #16]
40014b98:	e59f0014 	ldr	r0, [pc, #20]	; 40014bb4 <CyU3PDmaSocketGetConfig+0x9c>
40014b9c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014ba0:	e080038c 	add	r0, r0, ip, lsl #7
40014ba4:	e5900014 	ldr	r0, [r0, #20]
40014ba8:	e5810014 	str	r0, [r1, #20]
40014bac:	e3a00000 	mov	r0, #0
40014bb0:	eaffffdf 	b	40014b34 <CyU3PDmaSocketGetConfig+0x1c>
40014bb4:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014bb8 <CyU3PDmaSocketIsValidConsumer>:
40014bb8:	e92d4010 	push	{r4, lr}
40014bbc:	e1a01000 	mov	r1, r0
40014bc0:	e3a0003f 	mov	r0, #63	; 0x3f
40014bc4:	e0002441 	and	r2, r0, r1, asr #8
40014bc8:	e20130ff 	and	r3, r1, #255	; 0xff
40014bcc:	e3a04000 	mov	r4, #0
40014bd0:	e3520000 	cmp	r2, #0
40014bd4:	0a000006 	beq	40014bf4 <CyU3PDmaSocketIsValidConsumer+0x3c>
40014bd8:	e3520001 	cmp	r2, #1
40014bdc:	0a000009 	beq	40014c08 <CyU3PDmaSocketIsValidConsumer+0x50>
40014be0:	e3520002 	cmp	r2, #2
40014be4:	0a00000c 	beq	40014c1c <CyU3PDmaSocketIsValidConsumer+0x64>
40014be8:	e3520003 	cmp	r2, #3
40014bec:	1a000014 	bne	40014c44 <CyU3PDmaSocketIsValidConsumer+0x8c>
40014bf0:	ea00000e 	b	40014c30 <CyU3PDmaSocketIsValidConsumer+0x78>
40014bf4:	e1a00000 	nop			; (mov r0, r0)
40014bf8:	e3a0c000 	mov	ip, #0
40014bfc:	e3a0e004 	mov	lr, #4
40014c00:	e59f4080 	ldr	r4, [pc, #128]	; 40014c88 <CyU3PDmaSocketIsValidConsumer+0xd0>
40014c04:	ea000011 	b	40014c50 <CyU3PDmaSocketIsValidConsumer+0x98>
40014c08:	e1a00000 	nop			; (mov r0, r0)
40014c0c:	e3a0c000 	mov	ip, #0
40014c10:	e3a0e00f 	mov	lr, #15
40014c14:	e59f4070 	ldr	r4, [pc, #112]	; 40014c8c <CyU3PDmaSocketIsValidConsumer+0xd4>
40014c18:	ea00000c 	b	40014c50 <CyU3PDmaSocketIsValidConsumer+0x98>
40014c1c:	e1a00000 	nop			; (mov r0, r0)
40014c20:	e3a0c000 	mov	ip, #0
40014c24:	e3a0e007 	mov	lr, #7
40014c28:	e59f4060 	ldr	r4, [pc, #96]	; 40014c90 <CyU3PDmaSocketIsValidConsumer+0xd8>
40014c2c:	ea000007 	b	40014c50 <CyU3PDmaSocketIsValidConsumer+0x98>
40014c30:	e1a00000 	nop			; (mov r0, r0)
40014c34:	e3a0c000 	mov	ip, #0
40014c38:	e3a0e00f 	mov	lr, #15
40014c3c:	e59f4050 	ldr	r4, [pc, #80]	; 40014c94 <CyU3PDmaSocketIsValidConsumer+0xdc>
40014c40:	ea000002 	b	40014c50 <CyU3PDmaSocketIsValidConsumer+0x98>
40014c44:	e1a00000 	nop			; (mov r0, r0)
40014c48:	e3a00000 	mov	r0, #0
40014c4c:	e8bd8010 	pop	{r4, pc}
40014c50:	e1a00000 	nop			; (mov r0, r0)
40014c54:	e5940000 	ldr	r0, [r4]
40014c58:	e3100001 	tst	r0, #1
40014c5c:	1a000001 	bne	40014c68 <CyU3PDmaSocketIsValidConsumer+0xb0>
40014c60:	e3a00000 	mov	r0, #0
40014c64:	eafffff8 	b	40014c4c <CyU3PDmaSocketIsValidConsumer+0x94>
40014c68:	e153000c 	cmp	r3, ip
40014c6c:	ba000003 	blt	40014c80 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014c70:	e153000e 	cmp	r3, lr
40014c74:	ca000001 	bgt	40014c80 <CyU3PDmaSocketIsValidConsumer+0xc8>
40014c78:	e3a00001 	mov	r0, #1
40014c7c:	eafffff2 	b	40014c4c <CyU3PDmaSocketIsValidConsumer+0x94>
40014c80:	e3a00000 	mov	r0, #0
40014c84:	eafffff0 	b	40014c4c <CyU3PDmaSocketIsValidConsumer+0x94>
40014c88:	e0007f04 	.word	0xe0007f04
40014c8c:	e0017f04 	.word	0xe0017f04
40014c90:	e0027f04 	.word	0xe0027f04
40014c94:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

40014c98 <CyU3PDmaSocketIsValidProducer>:
40014c98:	e92d4010 	push	{r4, lr}
40014c9c:	e1a01000 	mov	r1, r0
40014ca0:	e3a0003f 	mov	r0, #63	; 0x3f
40014ca4:	e0002441 	and	r2, r0, r1, asr #8
40014ca8:	e20130ff 	and	r3, r1, #255	; 0xff
40014cac:	e3a04000 	mov	r4, #0
40014cb0:	e3520000 	cmp	r2, #0
40014cb4:	0a000006 	beq	40014cd4 <CyU3PDmaSocketIsValidProducer+0x3c>
40014cb8:	e3520001 	cmp	r2, #1
40014cbc:	0a000009 	beq	40014ce8 <CyU3PDmaSocketIsValidProducer+0x50>
40014cc0:	e3520002 	cmp	r2, #2
40014cc4:	0a00000c 	beq	40014cfc <CyU3PDmaSocketIsValidProducer+0x64>
40014cc8:	e3520004 	cmp	r2, #4
40014ccc:	1a000014 	bne	40014d24 <CyU3PDmaSocketIsValidProducer+0x8c>
40014cd0:	ea00000e 	b	40014d10 <CyU3PDmaSocketIsValidProducer+0x78>
40014cd4:	e1a00000 	nop			; (mov r0, r0)
40014cd8:	e3a0c005 	mov	ip, #5
40014cdc:	e3a0e007 	mov	lr, #7
40014ce0:	e59f4080 	ldr	r4, [pc, #128]	; 40014d68 <CyU3PDmaSocketIsValidProducer+0xd0>
40014ce4:	ea000011 	b	40014d30 <CyU3PDmaSocketIsValidProducer+0x98>
40014ce8:	e1a00000 	nop			; (mov r0, r0)
40014cec:	e3a0c000 	mov	ip, #0
40014cf0:	e3a0e01f 	mov	lr, #31
40014cf4:	e59f4070 	ldr	r4, [pc, #112]	; 40014d6c <CyU3PDmaSocketIsValidProducer+0xd4>
40014cf8:	ea00000c 	b	40014d30 <CyU3PDmaSocketIsValidProducer+0x98>
40014cfc:	e1a00000 	nop			; (mov r0, r0)
40014d00:	e3a0c000 	mov	ip, #0
40014d04:	e3a0e007 	mov	lr, #7
40014d08:	e59f4060 	ldr	r4, [pc, #96]	; 40014d70 <CyU3PDmaSocketIsValidProducer+0xd8>
40014d0c:	ea000007 	b	40014d30 <CyU3PDmaSocketIsValidProducer+0x98>
40014d10:	e1a00000 	nop			; (mov r0, r0)
40014d14:	e3a0c000 	mov	ip, #0
40014d18:	e3a0e00f 	mov	lr, #15
40014d1c:	e59f4050 	ldr	r4, [pc, #80]	; 40014d74 <CyU3PDmaSocketIsValidProducer+0xdc>
40014d20:	ea000002 	b	40014d30 <CyU3PDmaSocketIsValidProducer+0x98>
40014d24:	e1a00000 	nop			; (mov r0, r0)
40014d28:	e3a00000 	mov	r0, #0
40014d2c:	e8bd8010 	pop	{r4, pc}
40014d30:	e1a00000 	nop			; (mov r0, r0)
40014d34:	e5940000 	ldr	r0, [r4]
40014d38:	e3100001 	tst	r0, #1
40014d3c:	1a000001 	bne	40014d48 <CyU3PDmaSocketIsValidProducer+0xb0>
40014d40:	e3a00000 	mov	r0, #0
40014d44:	eafffff8 	b	40014d2c <CyU3PDmaSocketIsValidProducer+0x94>
40014d48:	e153000c 	cmp	r3, ip
40014d4c:	ba000003 	blt	40014d60 <CyU3PDmaSocketIsValidProducer+0xc8>
40014d50:	e153000e 	cmp	r3, lr
40014d54:	ca000001 	bgt	40014d60 <CyU3PDmaSocketIsValidProducer+0xc8>
40014d58:	e3a00001 	mov	r0, #1
40014d5c:	eafffff2 	b	40014d2c <CyU3PDmaSocketIsValidProducer+0x94>
40014d60:	e3a00000 	mov	r0, #0
40014d64:	eafffff0 	b	40014d2c <CyU3PDmaSocketIsValidProducer+0x94>
40014d68:	e0007f04 	.word	0xe0007f04
40014d6c:	e0017f04 	.word	0xe0017f04
40014d70:	e0027f04 	.word	0xe0027f04
40014d74:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

40014d78 <CyU3PDmaSocketSendEvent>:
40014d78:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014d7c:	e1a04000 	mov	r4, r0
40014d80:	e1a05001 	mov	r5, r1
40014d84:	e1a06002 	mov	r6, r2
40014d88:	e3a0003f 	mov	r0, #63	; 0x3f
40014d8c:	e0007444 	and	r7, r0, r4, asr #8
40014d90:	e20480ff 	and	r8, r4, #255	; 0xff
40014d94:	e1a09005 	mov	r9, r5
40014d98:	e3560001 	cmp	r6, #1
40014d9c:	1a000000 	bne	40014da4 <CyU3PDmaSocketSendEvent+0x2c>
40014da0:	e3899801 	orr	r9, r9, #65536	; 0x10000
40014da4:	e59f0010 	ldr	r0, [pc, #16]	; 40014dbc <CyU3PDmaSocketSendEvent+0x44>
40014da8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40014dac:	e0800388 	add	r0, r0, r8, lsl #7
40014db0:	e580907c 	str	r9, [r0, #124]	; 0x7c
40014db4:	ebfff6e1 	bl	40012940 <CyU3PSysBarrierSync>
40014db8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014dbc:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetConfig:

40014dc0 <CyU3PDmaSocketSetConfig>:
40014dc0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014dc4:	e1a04000 	mov	r4, r0
40014dc8:	e1a05001 	mov	r5, r1
40014dcc:	e3a0003f 	mov	r0, #63	; 0x3f
40014dd0:	e0006444 	and	r6, r0, r4, asr #8
40014dd4:	e20470ff 	and	r7, r4, #255	; 0xff
40014dd8:	e3550000 	cmp	r5, #0
40014ddc:	1a000001 	bne	40014de8 <CyU3PDmaSocketSetConfig+0x28>
40014de0:	e3a00040 	mov	r0, #64	; 0x40
40014de4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014de8:	e59f1078 	ldr	r1, [pc, #120]	; 40014e68 <CyU3PDmaSocketSetConfig+0xa8>
40014dec:	e5950000 	ldr	r0, [r5]
40014df0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014df4:	e7810387 	str	r0, [r1, r7, lsl #7]
40014df8:	e59f1068 	ldr	r1, [pc, #104]	; 40014e68 <CyU3PDmaSocketSetConfig+0xa8>
40014dfc:	e5950004 	ldr	r0, [r5, #4]
40014e00:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e04:	e0811387 	add	r1, r1, r7, lsl #7
40014e08:	e5810004 	str	r0, [r1, #4]
40014e0c:	e59f1054 	ldr	r1, [pc, #84]	; 40014e68 <CyU3PDmaSocketSetConfig+0xa8>
40014e10:	e5950008 	ldr	r0, [r5, #8]
40014e14:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e18:	e0811387 	add	r1, r1, r7, lsl #7
40014e1c:	e5810008 	str	r0, [r1, #8]
40014e20:	e59f1040 	ldr	r1, [pc, #64]	; 40014e68 <CyU3PDmaSocketSetConfig+0xa8>
40014e24:	e5950010 	ldr	r0, [r5, #16]
40014e28:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e2c:	e0811387 	add	r1, r1, r7, lsl #7
40014e30:	e5810010 	str	r0, [r1, #16]
40014e34:	e59f102c 	ldr	r1, [pc, #44]	; 40014e68 <CyU3PDmaSocketSetConfig+0xa8>
40014e38:	e5950014 	ldr	r0, [r5, #20]
40014e3c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e40:	e0811387 	add	r1, r1, r7, lsl #7
40014e44:	e5810014 	str	r0, [r1, #20]
40014e48:	e59f1018 	ldr	r1, [pc, #24]	; 40014e68 <CyU3PDmaSocketSetConfig+0xa8>
40014e4c:	e595000c 	ldr	r0, [r5, #12]
40014e50:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014e54:	e0811387 	add	r1, r1, r7, lsl #7
40014e58:	e581000c 	str	r0, [r1, #12]
40014e5c:	ebfff6b7 	bl	40012940 <CyU3PSysBarrierSync>
40014e60:	e3a00000 	mov	r0, #0
40014e64:	eaffffde 	b	40014de4 <CyU3PDmaSocketSetConfig+0x24>
40014e68:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40014e6c <CyU3PDmaSocketSetWrapUp>:
40014e6c:	e3a0c03f 	mov	ip, #63	; 0x3f
40014e70:	e00c1440 	and	r1, ip, r0, asr #8
40014e74:	e20030ff 	and	r3, r0, #255	; 0xff
40014e78:	e59fc02c 	ldr	ip, [pc, #44]	; 40014eac <CyU3PDmaSocketSetWrapUp+0x40>
40014e7c:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014e80:	e08cc383 	add	ip, ip, r3, lsl #7
40014e84:	e59c200c 	ldr	r2, [ip, #12]
40014e88:	e3120601 	tst	r2, #1048576	; 0x100000
40014e8c:	1a000000 	bne	40014e94 <CyU3PDmaSocketSetWrapUp+0x28>
40014e90:	e12fff1e 	bx	lr
40014e94:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
40014e98:	e59fc00c 	ldr	ip, [pc, #12]	; 40014eac <CyU3PDmaSocketSetWrapUp+0x40>
40014e9c:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014ea0:	e08cc383 	add	ip, ip, r3, lsl #7
40014ea4:	e58c200c 	str	r2, [ip, #12]
40014ea8:	eafffff8 	b	40014e90 <CyU3PDmaSocketSetWrapUp+0x24>
40014eac:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

40014eb0 <CyU3PDmaSocketUpdateStatus>:
40014eb0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014eb4:	e1a04000 	mov	r4, r0
40014eb8:	e1a05001 	mov	r5, r1
40014ebc:	e3a0003f 	mov	r0, #63	; 0x3f
40014ec0:	e0006444 	and	r6, r0, r4, asr #8
40014ec4:	e20470ff 	and	r7, r4, #255	; 0xff
40014ec8:	e3550000 	cmp	r5, #0
40014ecc:	1a000001 	bne	40014ed8 <CyU3PDmaSocketUpdateStatus+0x28>
40014ed0:	e3a00040 	mov	r0, #64	; 0x40
40014ed4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014ed8:	e59f1040 	ldr	r1, [pc, #64]	; 40014f20 <CyU3PDmaSocketUpdateStatus+0x70>
40014edc:	e5950010 	ldr	r0, [r5, #16]
40014ee0:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ee4:	e0811387 	add	r1, r1, r7, lsl #7
40014ee8:	e5810010 	str	r0, [r1, #16]
40014eec:	e59f102c 	ldr	r1, [pc, #44]	; 40014f20 <CyU3PDmaSocketUpdateStatus+0x70>
40014ef0:	e5950014 	ldr	r0, [r5, #20]
40014ef4:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014ef8:	e0811387 	add	r1, r1, r7, lsl #7
40014efc:	e5810014 	str	r0, [r1, #20]
40014f00:	e59f1018 	ldr	r1, [pc, #24]	; 40014f20 <CyU3PDmaSocketUpdateStatus+0x70>
40014f04:	e595000c 	ldr	r0, [r5, #12]
40014f08:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40014f0c:	e0811387 	add	r1, r1, r7, lsl #7
40014f10:	e581000c 	str	r0, [r1, #12]
40014f14:	ebfff689 	bl	40012940 <CyU3PSysBarrierSync>
40014f18:	e3a00000 	mov	r0, #0
40014f1c:	eaffffec 	b	40014ed4 <CyU3PDmaSocketUpdateStatus+0x24>
40014f20:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40014f24 <CyU3PDmaUpdateSocketSuspendOption>:
40014f24:	e92d4070 	push	{r4, r5, r6, lr}
40014f28:	e24dd018 	sub	sp, sp, #24
40014f2c:	e1a04000 	mov	r4, r0
40014f30:	e1a06001 	mov	r6, r1
40014f34:	e1a0100d 	mov	r1, sp
40014f38:	e1a00004 	mov	r0, r4
40014f3c:	ebfffef5 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40014f40:	e59d000c 	ldr	r0, [sp, #12]
40014f44:	e2000702 	and	r0, r0, #524288	; 0x80000
40014f48:	e1a059a0 	lsr	r5, r0, #19
40014f4c:	e3550001 	cmp	r5, #1
40014f50:	1a000010 	bne	40014f98 <CyU3PDmaUpdateSocketSuspendOption+0x74>
40014f54:	e59d000c 	ldr	r0, [sp, #12]
40014f58:	e3100101 	tst	r0, #1073741824	; 0x40000000
40014f5c:	1a00000a 	bne	40014f8c <CyU3PDmaUpdateSocketSuspendOption+0x68>
40014f60:	e59d000c 	ldr	r0, [sp, #12]
40014f64:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014f68:	e58d000c 	str	r0, [sp, #12]
40014f6c:	e3a00000 	mov	r0, #0
40014f70:	e58d0010 	str	r0, [sp, #16]
40014f74:	e1a0100d 	mov	r1, sp
40014f78:	e1a00004 	mov	r0, r4
40014f7c:	ebffffcb 	bl	40014eb0 <CyU3PDmaSocketUpdateStatus>
40014f80:	e1a0100d 	mov	r1, sp
40014f84:	e1a00004 	mov	r0, r4
40014f88:	ebfffee2 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40014f8c:	e3a00000 	mov	r0, #0
40014f90:	e58d0010 	str	r0, [sp, #16]
40014f94:	ea000004 	b	40014fac <CyU3PDmaUpdateSocketSuspendOption+0x88>
40014f98:	e59d000c 	ldr	r0, [sp, #12]
40014f9c:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014fa0:	e58d000c 	str	r0, [sp, #12]
40014fa4:	e3a00e12 	mov	r0, #288	; 0x120
40014fa8:	e58d0010 	str	r0, [sp, #16]
40014fac:	e59d000c 	ldr	r0, [sp, #12]
40014fb0:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
40014fb4:	e58d000c 	str	r0, [sp, #12]
40014fb8:	e59d0014 	ldr	r0, [sp, #20]
40014fbc:	e3c00e12 	bic	r0, r0, #288	; 0x120
40014fc0:	e58d0014 	str	r0, [sp, #20]
40014fc4:	e3560000 	cmp	r6, #0
40014fc8:	0a000006 	beq	40014fe8 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
40014fcc:	e3560001 	cmp	r6, #1
40014fd0:	0a000006 	beq	40014ff0 <CyU3PDmaUpdateSocketSuspendOption+0xcc>
40014fd4:	e3560002 	cmp	r6, #2
40014fd8:	0a00000e 	beq	40015018 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40014fdc:	e3560003 	cmp	r6, #3
40014fe0:	1a000020 	bne	40015068 <CyU3PDmaUpdateSocketSuspendOption+0x144>
40014fe4:	ea000015 	b	40015040 <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40014fe8:	e1a00000 	nop			; (mov r0, r0)
40014fec:	ea00001f 	b	40015070 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40014ff0:	e1a00000 	nop			; (mov r0, r0)
40014ff4:	e59d000c 	ldr	r0, [sp, #12]
40014ff8:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40014ffc:	e58d000c 	str	r0, [sp, #12]
40015000:	e3550000 	cmp	r5, #0
40015004:	1a000002 	bne	40015014 <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40015008:	e59d0014 	ldr	r0, [sp, #20]
4001500c:	e3800020 	orr	r0, r0, #32
40015010:	e58d0014 	str	r0, [sp, #20]
40015014:	ea000015 	b	40015070 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015018:	e1a00000 	nop			; (mov r0, r0)
4001501c:	e3550000 	cmp	r5, #0
40015020:	1a000005 	bne	4001503c <CyU3PDmaUpdateSocketSuspendOption+0x118>
40015024:	e59d000c 	ldr	r0, [sp, #12]
40015028:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
4001502c:	e58d000c 	str	r0, [sp, #12]
40015030:	e59d0014 	ldr	r0, [sp, #20]
40015034:	e3800020 	orr	r0, r0, #32
40015038:	e58d0014 	str	r0, [sp, #20]
4001503c:	ea00000b 	b	40015070 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015040:	e1a00000 	nop			; (mov r0, r0)
40015044:	e59d000c 	ldr	r0, [sp, #12]
40015048:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
4001504c:	e58d000c 	str	r0, [sp, #12]
40015050:	e3550000 	cmp	r5, #0
40015054:	1a000002 	bne	40015064 <CyU3PDmaUpdateSocketSuspendOption+0x140>
40015058:	e59d0014 	ldr	r0, [sp, #20]
4001505c:	e3800c01 	orr	r0, r0, #256	; 0x100
40015060:	e58d0014 	str	r0, [sp, #20]
40015064:	ea000001 	b	40015070 <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015068:	e1a00000 	nop			; (mov r0, r0)
4001506c:	e1a00000 	nop			; (mov r0, r0)
40015070:	e1a00000 	nop			; (mov r0, r0)
40015074:	e1a0100d 	mov	r1, sp
40015078:	e1a00004 	mov	r0, r4
4001507c:	ebffff8b 	bl	40014eb0 <CyU3PDmaSocketUpdateStatus>
40015080:	e28dd018 	add	sp, sp, #24
40015084:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

40015088 <CyU3PDmaChannelAcquireLock>:
40015088:	e92d4070 	push	{r4, r5, r6, lr}
4001508c:	e1a04000 	mov	r4, r0
40015090:	e1a05001 	mov	r5, r1
40015094:	e3540000 	cmp	r4, #0
40015098:	1a000001 	bne	400150a4 <CyU3PDmaChannelAcquireLock+0x1c>
4001509c:	e3a00041 	mov	r0, #65	; 0x41
400150a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400150a4:	e5940000 	ldr	r0, [r4]
400150a8:	e3500000 	cmp	r0, #0
400150ac:	1a000001 	bne	400150b8 <CyU3PDmaChannelAcquireLock+0x30>
400150b0:	e3a00044 	mov	r0, #68	; 0x44
400150b4:	eafffff9 	b	400150a0 <CyU3PDmaChannelAcquireLock+0x18>
400150b8:	e1a01005 	mov	r1, r5
400150bc:	e284003c 	add	r0, r4, #60	; 0x3c
400150c0:	ebffd3cf 	bl	4000a004 <_txe_mutex_get>
400150c4:	e3500000 	cmp	r0, #0
400150c8:	0a000001 	beq	400150d4 <CyU3PDmaChannelAcquireLock+0x4c>
400150cc:	e3a0001d 	mov	r0, #29
400150d0:	eafffff2 	b	400150a0 <CyU3PDmaChannelAcquireLock+0x18>
400150d4:	e3a00000 	mov	r0, #0
400150d8:	eafffff0 	b	400150a0 <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

400150dc <CyU3PDmaChannelCacheControl>:
400150dc:	e92d4070 	push	{r4, r5, r6, lr}
400150e0:	e1a04000 	mov	r4, r0
400150e4:	e1a05001 	mov	r5, r1
400150e8:	e3e01000 	mvn	r1, #0
400150ec:	e1a00004 	mov	r0, r4
400150f0:	ebffffe4 	bl	40015088 <CyU3PDmaChannelAcquireLock>
400150f4:	e1a06000 	mov	r6, r0
400150f8:	e3560000 	cmp	r6, #0
400150fc:	0a000001 	beq	40015108 <CyU3PDmaChannelCacheControl+0x2c>
40015100:	e1a00006 	mov	r0, r6
40015104:	e8bd8070 	pop	{r4, r5, r6, pc}
40015108:	e5940000 	ldr	r0, [r4]
4001510c:	e3500001 	cmp	r0, #1
40015110:	1a000001 	bne	4001511c <CyU3PDmaChannelCacheControl+0x40>
40015114:	e5845038 	str	r5, [r4, #56]	; 0x38
40015118:	ea000000 	b	40015120 <CyU3PDmaChannelCacheControl+0x44>
4001511c:	e3a06047 	mov	r6, #71	; 0x47
40015120:	e284003c 	add	r0, r4, #60	; 0x3c
40015124:	ebffd3eb 	bl	4000a0d8 <_txe_mutex_put>
40015128:	e1a00006 	mov	r0, r6
4001512c:	eafffff4 	b	40015104 <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

40015130 <CyU3PDmaChannelCommitBuffer>:
40015130:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40015134:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40015138:	e1a04000 	mov	r4, r0
4001513c:	e1a05001 	mov	r5, r1
40015140:	e1a06002 	mov	r6, r2
40015144:	e3e01000 	mvn	r1, #0
40015148:	e1a00004 	mov	r0, r4
4001514c:	ebffffcd 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40015150:	e1a09000 	mov	r9, r0
40015154:	e3590000 	cmp	r9, #0
40015158:	0a000002 	beq	40015168 <CyU3PDmaChannelCommitBuffer+0x38>
4001515c:	e1a00009 	mov	r0, r9
40015160:	e28dd03c 	add	sp, sp, #60	; 0x3c
40015164:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015168:	e1d400b6 	ldrh	r0, [r4, #6]
4001516c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015170:	e0400001 	sub	r0, r0, r1
40015174:	e1500005 	cmp	r0, r5
40015178:	aa000000 	bge	40015180 <CyU3PDmaChannelCommitBuffer+0x50>
4001517c:	e3a09040 	mov	r9, #64	; 0x40
40015180:	e5940000 	ldr	r0, [r4]
40015184:	e3500002 	cmp	r0, #2
40015188:	0a000000 	beq	40015190 <CyU3PDmaChannelCommitBuffer+0x60>
4001518c:	e3a09042 	mov	r9, #66	; 0x42
40015190:	e1d400b4 	ldrh	r0, [r4, #4]
40015194:	e3500003 	cmp	r0, #3
40015198:	1a000000 	bne	400151a0 <CyU3PDmaChannelCommitBuffer+0x70>
4001519c:	e3a09046 	mov	r9, #70	; 0x46
400151a0:	e3590000 	cmp	r9, #0
400151a4:	0a000003 	beq	400151b8 <CyU3PDmaChannelCommitBuffer+0x88>
400151a8:	e284003c 	add	r0, r4, #60	; 0x3c
400151ac:	ebffd3c9 	bl	4000a0d8 <_txe_mutex_put>
400151b0:	e1a00009 	mov	r0, r9
400151b4:	eaffffe9 	b	40015160 <CyU3PDmaChannelCommitBuffer+0x30>
400151b8:	e1d400b4 	ldrh	r0, [r4, #4]
400151bc:	e20070ff 	and	r7, r0, #255	; 0xff
400151c0:	e3570002 	cmp	r7, #2
400151c4:	1a000037 	bne	400152a8 <CyU3PDmaChannelCommitBuffer+0x178>
400151c8:	e1d401b6 	ldrh	r0, [r4, #22]
400151cc:	e28d1014 	add	r1, sp, #20
400151d0:	eb0034ae 	bl	40022490 <CyU3PDmaDscrGetConfig>
400151d4:	e1d401b8 	ldrh	r0, [r4, #24]
400151d8:	e28d1004 	add	r1, sp, #4
400151dc:	eb0034ab 	bl	40022490 <CyU3PDmaDscrGetConfig>
400151e0:	e59d0020 	ldr	r0, [sp, #32]
400151e4:	e3100008 	tst	r0, #8
400151e8:	1a000000 	bne	400151f0 <CyU3PDmaChannelCommitBuffer+0xc0>
400151ec:	e3a09047 	mov	r9, #71	; 0x47
400151f0:	e59d0010 	ldr	r0, [sp, #16]
400151f4:	e3100008 	tst	r0, #8
400151f8:	0a000000 	beq	40015200 <CyU3PDmaChannelCommitBuffer+0xd0>
400151fc:	e3a09047 	mov	r9, #71	; 0x47
40015200:	e3590000 	cmp	r9, #0
40015204:	1a000080 	bne	4001540c <CyU3PDmaChannelCommitBuffer+0x2dc>
40015208:	e59d0010 	ldr	r0, [sp, #16]
4001520c:	e59f1208 	ldr	r1, [pc, #520]	; 4001541c <CyU3PDmaChannelCommitBuffer+0x2ec>
40015210:	e0000001 	and	r0, r0, r1
40015214:	e58d0010 	str	r0, [sp, #16]
40015218:	e59d0010 	ldr	r0, [sp, #16]
4001521c:	e1800805 	orr	r0, r0, r5, lsl #16
40015220:	e58d0010 	str	r0, [sp, #16]
40015224:	e3560000 	cmp	r6, #0
40015228:	1a000005 	bne	40015244 <CyU3PDmaChannelCommitBuffer+0x114>
4001522c:	e59d1020 	ldr	r1, [sp, #32]
40015230:	e201100f 	and	r1, r1, #15
40015234:	e59d0010 	ldr	r0, [sp, #16]
40015238:	e1800001 	orr	r0, r0, r1
4001523c:	e58d0010 	str	r0, [sp, #16]
40015240:	ea000004 	b	40015258 <CyU3PDmaChannelCommitBuffer+0x128>
40015244:	e206100e 	and	r1, r6, #14
40015248:	e3811008 	orr	r1, r1, #8
4001524c:	e59d0010 	ldr	r0, [sp, #16]
40015250:	e1800001 	orr	r0, r0, r1
40015254:	e58d0010 	str	r0, [sp, #16]
40015258:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001525c:	e3500000 	cmp	r0, #0
40015260:	0a000004 	beq	40015278 <CyU3PDmaChannelCommitBuffer+0x148>
40015264:	e59d2010 	ldr	r2, [sp, #16]
40015268:	e59f31ac 	ldr	r3, [pc, #428]	; 4001541c <CyU3PDmaChannelCommitBuffer+0x2ec>
4001526c:	e0021003 	and	r1, r2, r3
40015270:	e59d0004 	ldr	r0, [sp, #4]
40015274:	ebfff34a 	bl	40011fa4 <CyU3PSysCleanDRegion>
40015278:	e1d401b8 	ldrh	r0, [r4, #24]
4001527c:	e28d1004 	add	r1, sp, #4
40015280:	eb00349d 	bl	400224fc <CyU3PDmaDscrSetConfig>
40015284:	e1d411b8 	ldrh	r1, [r4, #24]
40015288:	e1d401b2 	ldrh	r0, [r4, #18]
4001528c:	e3a02001 	mov	r2, #1
40015290:	ebfffeb8 	bl	40014d78 <CyU3PDmaSocketSendEvent>
40015294:	e59d001c 	ldr	r0, [sp, #28]
40015298:	e1c401b6 	strh	r0, [r4, #22]
4001529c:	e59d000c 	ldr	r0, [sp, #12]
400152a0:	e1c401b8 	strh	r0, [r4, #24]
400152a4:	ea000058 	b	4001540c <CyU3PDmaChannelCommitBuffer+0x2dc>
400152a8:	e3570004 	cmp	r7, #4
400152ac:	1a000027 	bne	40015350 <CyU3PDmaChannelCommitBuffer+0x220>
400152b0:	e1d401b8 	ldrh	r0, [r4, #24]
400152b4:	e28d1004 	add	r1, sp, #4
400152b8:	eb003474 	bl	40022490 <CyU3PDmaDscrGetConfig>
400152bc:	e59d0010 	ldr	r0, [sp, #16]
400152c0:	e3100008 	tst	r0, #8
400152c4:	0a000000 	beq	400152cc <CyU3PDmaChannelCommitBuffer+0x19c>
400152c8:	e3a09047 	mov	r9, #71	; 0x47
400152cc:	e3590000 	cmp	r9, #0
400152d0:	1a00004d 	bne	4001540c <CyU3PDmaChannelCommitBuffer+0x2dc>
400152d4:	e59d0010 	ldr	r0, [sp, #16]
400152d8:	e1a00800 	lsl	r0, r0, #16
400152dc:	e1a00820 	lsr	r0, r0, #16
400152e0:	e58d0010 	str	r0, [sp, #16]
400152e4:	e3a01008 	mov	r1, #8
400152e8:	e1811805 	orr	r1, r1, r5, lsl #16
400152ec:	e59d0010 	ldr	r0, [sp, #16]
400152f0:	e1800001 	orr	r0, r0, r1
400152f4:	e58d0010 	str	r0, [sp, #16]
400152f8:	e206100e 	and	r1, r6, #14
400152fc:	e59d0010 	ldr	r0, [sp, #16]
40015300:	e1800001 	orr	r0, r0, r1
40015304:	e58d0010 	str	r0, [sp, #16]
40015308:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001530c:	e3500000 	cmp	r0, #0
40015310:	0a000004 	beq	40015328 <CyU3PDmaChannelCommitBuffer+0x1f8>
40015314:	e59d2010 	ldr	r2, [sp, #16]
40015318:	e59f30fc 	ldr	r3, [pc, #252]	; 4001541c <CyU3PDmaChannelCommitBuffer+0x2ec>
4001531c:	e0021003 	and	r1, r2, r3
40015320:	e59d0004 	ldr	r0, [sp, #4]
40015324:	ebfff31e 	bl	40011fa4 <CyU3PSysCleanDRegion>
40015328:	e1d401b8 	ldrh	r0, [r4, #24]
4001532c:	e28d1004 	add	r1, sp, #4
40015330:	eb003471 	bl	400224fc <CyU3PDmaDscrSetConfig>
40015334:	e1d411b8 	ldrh	r1, [r4, #24]
40015338:	e1d401b2 	ldrh	r0, [r4, #18]
4001533c:	e3a02001 	mov	r2, #1
40015340:	ebfffe8c 	bl	40014d78 <CyU3PDmaSocketSendEvent>
40015344:	e59d000c 	ldr	r0, [sp, #12]
40015348:	e1c401b8 	strh	r0, [r4, #24]
4001534c:	ea00002e 	b	4001540c <CyU3PDmaChannelCommitBuffer+0x2dc>
40015350:	e1d401b2 	ldrh	r0, [r4, #18]
40015354:	e28d1024 	add	r1, sp, #36	; 0x24
40015358:	ebfffdee 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001535c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40015360:	e3100702 	tst	r0, #524288	; 0x80000
40015364:	0a000027 	beq	40015408 <CyU3PDmaChannelCommitBuffer+0x2d8>
40015368:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001536c:	e1a08800 	lsl	r8, r0, #16
40015370:	e1a08828 	lsr	r8, r8, #16
40015374:	e28d1004 	add	r1, sp, #4
40015378:	e1a00008 	mov	r0, r8
4001537c:	eb003443 	bl	40022490 <CyU3PDmaDscrGetConfig>
40015380:	e59d0010 	ldr	r0, [sp, #16]
40015384:	e3100008 	tst	r0, #8
40015388:	0a00001c 	beq	40015400 <CyU3PDmaChannelCommitBuffer+0x2d0>
4001538c:	e59d0010 	ldr	r0, [sp, #16]
40015390:	e1a00800 	lsl	r0, r0, #16
40015394:	e1a00820 	lsr	r0, r0, #16
40015398:	e58d0010 	str	r0, [sp, #16]
4001539c:	e59d0010 	ldr	r0, [sp, #16]
400153a0:	e1800805 	orr	r0, r0, r5, lsl #16
400153a4:	e58d0010 	str	r0, [sp, #16]
400153a8:	e3560000 	cmp	r6, #0
400153ac:	0a000007 	beq	400153d0 <CyU3PDmaChannelCommitBuffer+0x2a0>
400153b0:	e59d0010 	ldr	r0, [sp, #16]
400153b4:	e3c0000f 	bic	r0, r0, #15
400153b8:	e58d0010 	str	r0, [sp, #16]
400153bc:	e206100e 	and	r1, r6, #14
400153c0:	e3811008 	orr	r1, r1, #8
400153c4:	e59d0010 	ldr	r0, [sp, #16]
400153c8:	e1800001 	orr	r0, r0, r1
400153cc:	e58d0010 	str	r0, [sp, #16]
400153d0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400153d4:	e3500000 	cmp	r0, #0
400153d8:	0a000004 	beq	400153f0 <CyU3PDmaChannelCommitBuffer+0x2c0>
400153dc:	e59d2010 	ldr	r2, [sp, #16]
400153e0:	e59f3034 	ldr	r3, [pc, #52]	; 4001541c <CyU3PDmaChannelCommitBuffer+0x2ec>
400153e4:	e0021003 	and	r1, r2, r3
400153e8:	e59d0004 	ldr	r0, [sp, #4]
400153ec:	ebfff2ec 	bl	40011fa4 <CyU3PSysCleanDRegion>
400153f0:	e28d1004 	add	r1, sp, #4
400153f4:	e1a00008 	mov	r0, r8
400153f8:	eb00343f 	bl	400224fc <CyU3PDmaDscrSetConfig>
400153fc:	ea000002 	b	4001540c <CyU3PDmaChannelCommitBuffer+0x2dc>
40015400:	e3a09047 	mov	r9, #71	; 0x47
40015404:	ea000000 	b	4001540c <CyU3PDmaChannelCommitBuffer+0x2dc>
40015408:	e3a09047 	mov	r9, #71	; 0x47
4001540c:	e284003c 	add	r0, r4, #60	; 0x3c
40015410:	ebffd330 	bl	4000a0d8 <_txe_mutex_put>
40015414:	e1a00009 	mov	r0, r9
40015418:	eaffff50 	b	40015160 <CyU3PDmaChannelCommitBuffer+0x30>
4001541c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

40015420 <CyU3PDmaChannelConfigure_TypeAuto>:
40015420:	e92d4070 	push	{r4, r5, r6, lr}
40015424:	e1a05000 	mov	r5, r0
40015428:	e1d501b2 	ldrh	r0, [r5, #18]
4001542c:	e3806901 	orr	r6, r0, #16384	; 0x4000
40015430:	e1d501b0 	ldrh	r0, [r5, #16]
40015434:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015438:	e1810800 	orr	r0, r1, r0, lsl #16
4001543c:	e1866000 	orr	r6, r6, r0
40015440:	e1d500b4 	ldrh	r0, [r5, #4]
40015444:	e3500001 	cmp	r0, #1
40015448:	1a000000 	bne	40015450 <CyU3PDmaChannelConfigure_TypeAuto+0x30>
4001544c:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40015450:	e1d520b6 	ldrh	r2, [r5, #6]
40015454:	e1d510b8 	ldrh	r1, [r5, #8]
40015458:	e1a03006 	mov	r3, r6
4001545c:	e285000c 	add	r0, r5, #12
40015460:	eb00331b 	bl	400220d4 <CyU3PDmaDscrChainCreate>
40015464:	e1a04000 	mov	r4, r0
40015468:	e3540000 	cmp	r4, #0
4001546c:	0a000001 	beq	40015478 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
40015470:	e1a00004 	mov	r0, r4
40015474:	e8bd8070 	pop	{r4, r5, r6, pc}
40015478:	e1d500bc 	ldrh	r0, [r5, #12]
4001547c:	e1c501b6 	strh	r0, [r5, #22]
40015480:	e1c501ba 	strh	r0, [r5, #26]
40015484:	e1c501be 	strh	r0, [r5, #30]
40015488:	e1d500be 	ldrh	r0, [r5, #14]
4001548c:	e1c501b8 	strh	r0, [r5, #24]
40015490:	e1c501bc 	strh	r0, [r5, #28]
40015494:	e1c502b0 	strh	r0, [r5, #32]
40015498:	e2850014 	add	r0, r5, #20
4001549c:	eb003383 	bl	400222b0 <CyU3PDmaDscrGet>
400154a0:	e1a00005 	mov	r0, r5
400154a4:	eb0006b7 	bl	40016f88 <CyU3PDmaConfigureSockets_TypeAuto>
400154a8:	e3a00000 	mov	r0, #0
400154ac:	eafffff0 	b	40015474 <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

400154b0 <CyU3PDmaChannelConfigure_TypeManual>:
400154b0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400154b4:	e24dd024 	sub	sp, sp, #36	; 0x24
400154b8:	e1a04000 	mov	r4, r0
400154bc:	e284700c 	add	r7, r4, #12
400154c0:	e3a06cff 	mov	r6, #65280	; 0xff00
400154c4:	e1d401b0 	ldrh	r0, [r4, #16]
400154c8:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400154cc:	e1810800 	orr	r0, r1, r0, lsl #16
400154d0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400154d4:	e1866000 	orr	r6, r6, r0
400154d8:	e1d400b4 	ldrh	r0, [r4, #4]
400154dc:	e3500003 	cmp	r0, #3
400154e0:	1a000002 	bne	400154f0 <CyU3PDmaChannelConfigure_TypeManual+0x40>
400154e4:	e3a00c3f 	mov	r0, #16128	; 0x3f00
400154e8:	e1c401b2 	strh	r0, [r4, #18]
400154ec:	ea000009 	b	40015518 <CyU3PDmaChannelConfigure_TypeManual+0x68>
400154f0:	e1d400b4 	ldrh	r0, [r4, #4]
400154f4:	e3500004 	cmp	r0, #4
400154f8:	1a000006 	bne	40015518 <CyU3PDmaChannelConfigure_TypeManual+0x68>
400154fc:	e59f020c 	ldr	r0, [pc, #524]	; 40015710 <CyU3PDmaChannelConfigure_TypeManual+0x260>
40015500:	e1c401b0 	strh	r0, [r4, #16]
40015504:	e284700e 	add	r7, r4, #14
40015508:	e1d401b2 	ldrh	r0, [r4, #18]
4001550c:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015510:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015514:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015518:	e1d400b8 	ldrh	r0, [r4, #8]
4001551c:	e3500000 	cmp	r0, #0
40015520:	0a00006b 	beq	400156d4 <CyU3PDmaChannelConfigure_TypeManual+0x224>
40015524:	e1d420b6 	ldrh	r2, [r4, #6]
40015528:	e1d410b8 	ldrh	r1, [r4, #8]
4001552c:	e1a03006 	mov	r3, r6
40015530:	e1a00007 	mov	r0, r7
40015534:	eb0032e6 	bl	400220d4 <CyU3PDmaDscrChainCreate>
40015538:	e1a05000 	mov	r5, r0
4001553c:	e3550000 	cmp	r5, #0
40015540:	0a000002 	beq	40015550 <CyU3PDmaChannelConfigure_TypeManual+0xa0>
40015544:	e1a00005 	mov	r0, r5
40015548:	e28dd024 	add	sp, sp, #36	; 0x24
4001554c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015550:	e1d400b4 	ldrh	r0, [r4, #4]
40015554:	e3500002 	cmp	r0, #2
40015558:	1a000012 	bne	400155a8 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
4001555c:	e1d401b2 	ldrh	r0, [r4, #18]
40015560:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015564:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015568:	e3866801 	orr	r6, r6, #65536	; 0x10000
4001556c:	e1d410b8 	ldrh	r1, [r4, #8]
40015570:	e1a03006 	mov	r3, r6
40015574:	e3a02000 	mov	r2, #0
40015578:	e284000e 	add	r0, r4, #14
4001557c:	eb0032d4 	bl	400220d4 <CyU3PDmaDscrChainCreate>
40015580:	e1a05000 	mov	r5, r0
40015584:	e3550000 	cmp	r5, #0
40015588:	0a000006 	beq	400155a8 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
4001558c:	e1d410b8 	ldrh	r1, [r4, #8]
40015590:	e1d700b0 	ldrh	r0, [r7]
40015594:	e3a03001 	mov	r3, #1
40015598:	e1a02003 	mov	r2, r3
4001559c:	eb003320 	bl	40022224 <CyU3PDmaDscrChainDestroy>
400155a0:	e1a00005 	mov	r0, r5
400155a4:	eaffffe7 	b	40015548 <CyU3PDmaChannelConfigure_TypeManual+0x98>
400155a8:	e1d400bc 	ldrh	r0, [r4, #12]
400155ac:	e1c401b6 	strh	r0, [r4, #22]
400155b0:	e1c401ba 	strh	r0, [r4, #26]
400155b4:	e1c401be 	strh	r0, [r4, #30]
400155b8:	e1d400be 	ldrh	r0, [r4, #14]
400155bc:	e1c401b8 	strh	r0, [r4, #24]
400155c0:	e1c401bc 	strh	r0, [r4, #28]
400155c4:	e1c402b0 	strh	r0, [r4, #32]
400155c8:	e3a08000 	mov	r8, #0
400155cc:	e1d790b0 	ldrh	r9, [r7]
400155d0:	ea00003b 	b	400156c4 <CyU3PDmaChannelConfigure_TypeManual+0x214>
400155d4:	e28d1014 	add	r1, sp, #20
400155d8:	e1a00009 	mov	r0, r9
400155dc:	eb0033ab 	bl	40022490 <CyU3PDmaDscrGetConfig>
400155e0:	e1d400b4 	ldrh	r0, [r4, #4]
400155e4:	e3500004 	cmp	r0, #4
400155e8:	1a00000b 	bne	4001561c <CyU3PDmaChannelConfigure_TypeManual+0x16c>
400155ec:	e59d0014 	ldr	r0, [sp, #20]
400155f0:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400155f4:	e0800001 	add	r0, r0, r1
400155f8:	e58d0014 	str	r0, [sp, #20]
400155fc:	e1d400b6 	ldrh	r0, [r4, #6]
40015600:	e280000f 	add	r0, r0, #15
40015604:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015608:	e0400001 	sub	r0, r0, r1
4001560c:	e59f1100 	ldr	r1, [pc, #256]	; 40015714 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015610:	e0000001 	and	r0, r0, r1
40015614:	e58d0020 	str	r0, [sp, #32]
40015618:	ea000021 	b	400156a4 <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
4001561c:	e1d400b4 	ldrh	r0, [r4, #4]
40015620:	e3500002 	cmp	r0, #2
40015624:	1a000012 	bne	40015674 <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
40015628:	e1d401b8 	ldrh	r0, [r4, #24]
4001562c:	e28d1004 	add	r1, sp, #4
40015630:	eb003396 	bl	40022490 <CyU3PDmaDscrGetConfig>
40015634:	e59d0014 	ldr	r0, [sp, #20]
40015638:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
4001563c:	e0800001 	add	r0, r0, r1
40015640:	e58d0004 	str	r0, [sp, #4]
40015644:	e1d400b6 	ldrh	r0, [r4, #6]
40015648:	e280000f 	add	r0, r0, #15
4001564c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015650:	e0400001 	sub	r0, r0, r1
40015654:	e59f10b8 	ldr	r1, [pc, #184]	; 40015714 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015658:	e0000001 	and	r0, r0, r1
4001565c:	e58d0010 	str	r0, [sp, #16]
40015660:	e1d401b8 	ldrh	r0, [r4, #24]
40015664:	e28d1004 	add	r1, sp, #4
40015668:	eb0033a3 	bl	400224fc <CyU3PDmaDscrSetConfig>
4001566c:	e59d000c 	ldr	r0, [sp, #12]
40015670:	e1c401b8 	strh	r0, [r4, #24]
40015674:	e59d0014 	ldr	r0, [sp, #20]
40015678:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
4001567c:	e0800001 	add	r0, r0, r1
40015680:	e58d0014 	str	r0, [sp, #20]
40015684:	e1d400b6 	ldrh	r0, [r4, #6]
40015688:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
4001568c:	e0400001 	sub	r0, r0, r1
40015690:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
40015694:	e0400001 	sub	r0, r0, r1
40015698:	e59f1074 	ldr	r1, [pc, #116]	; 40015714 <CyU3PDmaChannelConfigure_TypeManual+0x264>
4001569c:	e0000001 	and	r0, r0, r1
400156a0:	e58d0020 	str	r0, [sp, #32]
400156a4:	e28d1014 	add	r1, sp, #20
400156a8:	e1a00009 	mov	r0, r9
400156ac:	eb003392 	bl	400224fc <CyU3PDmaDscrSetConfig>
400156b0:	e59d001c 	ldr	r0, [sp, #28]
400156b4:	e1a09800 	lsl	r9, r0, #16
400156b8:	e1a09829 	lsr	r9, r9, #16
400156bc:	e2880001 	add	r0, r8, #1
400156c0:	e3c08801 	bic	r8, r0, #65536	; 0x10000
400156c4:	e1d400b8 	ldrh	r0, [r4, #8]
400156c8:	e1500008 	cmp	r0, r8
400156cc:	caffffc0 	bgt	400155d4 <CyU3PDmaChannelConfigure_TypeManual+0x124>
400156d0:	ea000008 	b	400156f8 <CyU3PDmaChannelConfigure_TypeManual+0x248>
400156d4:	e59f003c 	ldr	r0, [pc, #60]	; 40015718 <CyU3PDmaChannelConfigure_TypeManual+0x268>
400156d8:	e1c400bc 	strh	r0, [r4, #12]
400156dc:	e1c401b6 	strh	r0, [r4, #22]
400156e0:	e1c401ba 	strh	r0, [r4, #26]
400156e4:	e1c401be 	strh	r0, [r4, #30]
400156e8:	e1c400be 	strh	r0, [r4, #14]
400156ec:	e1c401b8 	strh	r0, [r4, #24]
400156f0:	e1c401bc 	strh	r0, [r4, #28]
400156f4:	e1c402b0 	strh	r0, [r4, #32]
400156f8:	e2840014 	add	r0, r4, #20
400156fc:	eb0032eb 	bl	400222b0 <CyU3PDmaDscrGet>
40015700:	e1a00004 	mov	r0, r4
40015704:	eb00065f 	bl	40017088 <CyU3PDmaConfigureSockets_TypeManual>
40015708:	e3a00000 	mov	r0, #0
4001570c:	eaffff8d 	b	40015548 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015710:	00003f01 	.word	0x00003f01
40015714:	0000fff0 	.word	0x0000fff0
40015718:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

4001571c <CyU3PDmaChannelCreate>:
4001571c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015720:	e1a04000 	mov	r4, r0
40015724:	e1a05001 	mov	r5, r1
40015728:	e1a06002 	mov	r6, r2
4001572c:	e3560000 	cmp	r6, #0
40015730:	1a000001 	bne	4001573c <CyU3PDmaChannelCreate+0x20>
40015734:	e3a00041 	mov	r0, #65	; 0x41
40015738:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001573c:	e3540000 	cmp	r4, #0
40015740:	1a000001 	bne	4001574c <CyU3PDmaChannelCreate+0x30>
40015744:	e3a00041 	mov	r0, #65	; 0x41
40015748:	eafffffa 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
4001574c:	eb00330f 	bl	40022390 <CyU3PDmaDscrGetFreeCount>
40015750:	e1d610b2 	ldrh	r1, [r6, #2]
40015754:	e2811001 	add	r1, r1, #1
40015758:	e1500001 	cmp	r0, r1
4001575c:	da000007 	ble	40015780 <CyU3PDmaChannelCreate+0x64>
40015760:	e3550002 	cmp	r5, #2
40015764:	1a000007 	bne	40015788 <CyU3PDmaChannelCreate+0x6c>
40015768:	eb003308 	bl	40022390 <CyU3PDmaDscrGetFreeCount>
4001576c:	e1d610b2 	ldrh	r1, [r6, #2]
40015770:	e3a02001 	mov	r2, #1
40015774:	e0821101 	add	r1, r2, r1, lsl #2
40015778:	e1500001 	cmp	r0, r1
4001577c:	ca000001 	bgt	40015788 <CyU3PDmaChannelCreate+0x6c>
40015780:	e3a00010 	mov	r0, #16
40015784:	eaffffeb 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
40015788:	e1d600b0 	ldrh	r0, [r6]
4001578c:	e3500000 	cmp	r0, #0
40015790:	0a000003 	beq	400157a4 <CyU3PDmaChannelCreate+0x88>
40015794:	e1d600b0 	ldrh	r0, [r6]
40015798:	e59f1354 	ldr	r1, [pc, #852]	; 40015af4 <CyU3PDmaChannelCreate+0x3d8>
4001579c:	e1500001 	cmp	r0, r1
400157a0:	da000001 	ble	400157ac <CyU3PDmaChannelCreate+0x90>
400157a4:	e3a00040 	mov	r0, #64	; 0x40
400157a8:	eaffffe2 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
400157ac:	e3550000 	cmp	r5, #0
400157b0:	0a000001 	beq	400157bc <CyU3PDmaChannelCreate+0xa0>
400157b4:	e3550001 	cmp	r5, #1
400157b8:	1a000009 	bne	400157e4 <CyU3PDmaChannelCreate+0xc8>
400157bc:	e1d600b0 	ldrh	r0, [r6]
400157c0:	e310000f 	tst	r0, #15
400157c4:	0a000001 	beq	400157d0 <CyU3PDmaChannelCreate+0xb4>
400157c8:	e3a00040 	mov	r0, #64	; 0x40
400157cc:	eaffffd9 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
400157d0:	e1d600b2 	ldrh	r0, [r6, #2]
400157d4:	e3500000 	cmp	r0, #0
400157d8:	1a00000b 	bne	4001580c <CyU3PDmaChannelCreate+0xf0>
400157dc:	e3a00040 	mov	r0, #64	; 0x40
400157e0:	eaffffd4 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
400157e4:	e1d600b0 	ldrh	r0, [r6]
400157e8:	e1d610ba 	ldrh	r1, [r6, #10]
400157ec:	e0400001 	sub	r0, r0, r1
400157f0:	e1d610bc 	ldrh	r1, [r6, #12]
400157f4:	e0400001 	sub	r0, r0, r1
400157f8:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
400157fc:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015800:	0a000001 	beq	4001580c <CyU3PDmaChannelCreate+0xf0>
40015804:	e3a00040 	mov	r0, #64	; 0x40
40015808:	eaffffca 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
4001580c:	e5d60010 	ldrb	r0, [r6, #16]
40015810:	e3500002 	cmp	r0, #2
40015814:	ba000001 	blt	40015820 <CyU3PDmaChannelCreate+0x104>
40015818:	e3a00040 	mov	r0, #64	; 0x40
4001581c:	eaffffc5 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
40015820:	e3550004 	cmp	r5, #4
40015824:	0a000011 	beq	40015870 <CyU3PDmaChannelCreate+0x154>
40015828:	e1d600b4 	ldrh	r0, [r6, #4]
4001582c:	e3a0103f 	mov	r1, #63	; 0x3f
40015830:	e0018440 	and	r8, r1, r0, asr #8
40015834:	e1d600b4 	ldrh	r0, [r6, #4]
40015838:	e20090ff 	and	r9, r0, #255	; 0xff
4001583c:	e1d600b4 	ldrh	r0, [r6, #4]
40015840:	ebfffd14 	bl	40014c98 <CyU3PDmaSocketIsValidProducer>
40015844:	e3500000 	cmp	r0, #0
40015848:	1a000001 	bne	40015854 <CyU3PDmaChannelCreate+0x138>
4001584c:	e3a00040 	mov	r0, #64	; 0x40
40015850:	eaffffb8 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
40015854:	e59f029c 	ldr	r0, [pc, #668]	; 40015af8 <CyU3PDmaChannelCreate+0x3dc>
40015858:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001585c:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015860:	e3500000 	cmp	r0, #0
40015864:	0a000007 	beq	40015888 <CyU3PDmaChannelCreate+0x16c>
40015868:	e3a00040 	mov	r0, #64	; 0x40
4001586c:	eaffffb1 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
40015870:	e1d600b4 	ldrh	r0, [r6, #4]
40015874:	e59f1280 	ldr	r1, [pc, #640]	; 40015afc <CyU3PDmaChannelCreate+0x3e0>
40015878:	e1500001 	cmp	r0, r1
4001587c:	0a000001 	beq	40015888 <CyU3PDmaChannelCreate+0x16c>
40015880:	e3a00040 	mov	r0, #64	; 0x40
40015884:	eaffffab 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
40015888:	e3550003 	cmp	r5, #3
4001588c:	0a000011 	beq	400158d8 <CyU3PDmaChannelCreate+0x1bc>
40015890:	e1d600b6 	ldrh	r0, [r6, #6]
40015894:	e3a0103f 	mov	r1, #63	; 0x3f
40015898:	e0018440 	and	r8, r1, r0, asr #8
4001589c:	e1d600b6 	ldrh	r0, [r6, #6]
400158a0:	e20090ff 	and	r9, r0, #255	; 0xff
400158a4:	e1d600b6 	ldrh	r0, [r6, #6]
400158a8:	ebfffcc2 	bl	40014bb8 <CyU3PDmaSocketIsValidConsumer>
400158ac:	e3500000 	cmp	r0, #0
400158b0:	1a000001 	bne	400158bc <CyU3PDmaChannelCreate+0x1a0>
400158b4:	e3a00040 	mov	r0, #64	; 0x40
400158b8:	eaffff9e 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
400158bc:	e59f0234 	ldr	r0, [pc, #564]	; 40015af8 <CyU3PDmaChannelCreate+0x3dc>
400158c0:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400158c4:	e7900109 	ldr	r0, [r0, r9, lsl #2]
400158c8:	e3500000 	cmp	r0, #0
400158cc:	0a000006 	beq	400158ec <CyU3PDmaChannelCreate+0x1d0>
400158d0:	e3a00040 	mov	r0, #64	; 0x40
400158d4:	eaffff97 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
400158d8:	e1d600b6 	ldrh	r0, [r6, #6]
400158dc:	e3500c3f 	cmp	r0, #16128	; 0x3f00
400158e0:	0a000001 	beq	400158ec <CyU3PDmaChannelCreate+0x1d0>
400158e4:	e3a00040 	mov	r0, #64	; 0x40
400158e8:	eaffff92 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
400158ec:	e1d600b8 	ldrh	r0, [r6, #8]
400158f0:	e3500000 	cmp	r0, #0
400158f4:	0a000008 	beq	4001591c <CyU3PDmaChannelCreate+0x200>
400158f8:	e1d600b8 	ldrh	r0, [r6, #8]
400158fc:	e1d610b2 	ldrh	r1, [r6, #2]
40015900:	e1500001 	cmp	r0, r1
40015904:	aa000002 	bge	40015914 <CyU3PDmaChannelCreate+0x1f8>
40015908:	e1d600b2 	ldrh	r0, [r6, #2]
4001590c:	e350001f 	cmp	r0, #31
40015910:	da000001 	ble	4001591c <CyU3PDmaChannelCreate+0x200>
40015914:	e3a00040 	mov	r0, #64	; 0x40
40015918:	eaffff86 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
4001591c:	e3550004 	cmp	r5, #4
40015920:	0a000007 	beq	40015944 <CyU3PDmaChannelCreate+0x228>
40015924:	e1d600b4 	ldrh	r0, [r6, #4]
40015928:	e3a0103f 	mov	r1, #63	; 0x3f
4001592c:	e0018440 	and	r8, r1, r0, asr #8
40015930:	e1d600b4 	ldrh	r0, [r6, #4]
40015934:	e20090ff 	and	r9, r0, #255	; 0xff
40015938:	e59f01b8 	ldr	r0, [pc, #440]	; 40015af8 <CyU3PDmaChannelCreate+0x3dc>
4001593c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015940:	e7804109 	str	r4, [r0, r9, lsl #2]
40015944:	e3550003 	cmp	r5, #3
40015948:	0a000007 	beq	4001596c <CyU3PDmaChannelCreate+0x250>
4001594c:	e1d600b6 	ldrh	r0, [r6, #6]
40015950:	e3a0103f 	mov	r1, #63	; 0x3f
40015954:	e0018440 	and	r8, r1, r0, asr #8
40015958:	e1d600b6 	ldrh	r0, [r6, #6]
4001595c:	e20090ff 	and	r9, r0, #255	; 0xff
40015960:	e59f0190 	ldr	r0, [pc, #400]	; 40015af8 <CyU3PDmaChannelCreate+0x3dc>
40015964:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015968:	e7804109 	str	r4, [r0, r9, lsl #2]
4001596c:	e1c450b4 	strh	r5, [r4, #4]
40015970:	e1d600b0 	ldrh	r0, [r6]
40015974:	e1c400b6 	strh	r0, [r4, #6]
40015978:	e1d600b2 	ldrh	r0, [r6, #2]
4001597c:	e1c400b8 	strh	r0, [r4, #8]
40015980:	e1d600b8 	ldrh	r0, [r6, #8]
40015984:	e1c400ba 	strh	r0, [r4, #10]
40015988:	e1d600b4 	ldrh	r0, [r6, #4]
4001598c:	e1c401b0 	strh	r0, [r4, #16]
40015990:	e1d600b6 	ldrh	r0, [r6, #6]
40015994:	e1c401b2 	strh	r0, [r4, #18]
40015998:	e1d600ba 	ldrh	r0, [r6, #10]
4001599c:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
400159a0:	e1d600bc 	ldrh	r0, [r6, #12]
400159a4:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
400159a8:	e1d600be 	ldrh	r0, [r6, #14]
400159ac:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
400159b0:	e5d60010 	ldrb	r0, [r6, #16]
400159b4:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
400159b8:	e5960014 	ldr	r0, [r6, #20]
400159bc:	e5840030 	str	r0, [r4, #48]	; 0x30
400159c0:	e3a00000 	mov	r0, #0
400159c4:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
400159c8:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
400159cc:	e3a03038 	mov	r3, #56	; 0x38
400159d0:	e3a02000 	mov	r2, #0
400159d4:	e1a01002 	mov	r1, r2
400159d8:	e284003c 	add	r0, r4, #60	; 0x3c
400159dc:	ebffd10a 	bl	40009e0c <_txe_mutex_create>
400159e0:	e3a02028 	mov	r2, #40	; 0x28
400159e4:	e3a01000 	mov	r1, #0
400159e8:	e2840074 	add	r0, r4, #116	; 0x74
400159ec:	ebffd04c 	bl	40009b24 <_txe_event_flags_create>
400159f0:	e5960018 	ldr	r0, [r6, #24]
400159f4:	e584009c 	str	r0, [r4, #156]	; 0x9c
400159f8:	e59f0100 	ldr	r0, [pc, #256]	; 40015b00 <CyU3PDmaChannelCreate+0x3e4>
400159fc:	e5900000 	ldr	r0, [r0]
40015a00:	e5840038 	str	r0, [r4, #56]	; 0x38
40015a04:	e3550005 	cmp	r5, #5
40015a08:	308ff105 	addcc	pc, pc, r5, lsl #2
40015a0c:	ea000011 	b	40015a58 <CyU3PDmaChannelCreate+0x33c>
40015a10:	ea000003 	b	40015a24 <CyU3PDmaChannelCreate+0x308>
40015a14:	ea000004 	b	40015a2c <CyU3PDmaChannelCreate+0x310>
40015a18:	ea00000a 	b	40015a48 <CyU3PDmaChannelCreate+0x32c>
40015a1c:	ea000006 	b	40015a3c <CyU3PDmaChannelCreate+0x320>
40015a20:	ea000007 	b	40015a44 <CyU3PDmaChannelCreate+0x328>
40015a24:	e1a00000 	nop			; (mov r0, r0)
40015a28:	e1a00000 	nop			; (mov r0, r0)
40015a2c:	e1a00004 	mov	r0, r4
40015a30:	ebfffe7a 	bl	40015420 <CyU3PDmaChannelConfigure_TypeAuto>
40015a34:	e1a07000 	mov	r7, r0
40015a38:	ea000009 	b	40015a64 <CyU3PDmaChannelCreate+0x348>
40015a3c:	e1a00000 	nop			; (mov r0, r0)
40015a40:	e1a00000 	nop			; (mov r0, r0)
40015a44:	e1a00000 	nop			; (mov r0, r0)
40015a48:	e1a00004 	mov	r0, r4
40015a4c:	ebfffe97 	bl	400154b0 <CyU3PDmaChannelConfigure_TypeManual>
40015a50:	e1a07000 	mov	r7, r0
40015a54:	ea000002 	b	40015a64 <CyU3PDmaChannelCreate+0x348>
40015a58:	e1a00000 	nop			; (mov r0, r0)
40015a5c:	e3a07040 	mov	r7, #64	; 0x40
40015a60:	e1a00000 	nop			; (mov r0, r0)
40015a64:	e1a00000 	nop			; (mov r0, r0)
40015a68:	e3570000 	cmp	r7, #0
40015a6c:	1a000002 	bne	40015a7c <CyU3PDmaChannelCreate+0x360>
40015a70:	e3a00001 	mov	r0, #1
40015a74:	e5840000 	str	r0, [r4]
40015a78:	ea00001b 	b	40015aec <CyU3PDmaChannelCreate+0x3d0>
40015a7c:	e284003c 	add	r0, r4, #60	; 0x3c
40015a80:	ebffd13f 	bl	40009f84 <_txe_mutex_delete>
40015a84:	e2840074 	add	r0, r4, #116	; 0x74
40015a88:	ebffd075 	bl	40009c64 <_txe_event_flags_delete>
40015a8c:	e3550004 	cmp	r5, #4
40015a90:	0a000008 	beq	40015ab8 <CyU3PDmaChannelCreate+0x39c>
40015a94:	e1d600b4 	ldrh	r0, [r6, #4]
40015a98:	e3a0103f 	mov	r1, #63	; 0x3f
40015a9c:	e0018440 	and	r8, r1, r0, asr #8
40015aa0:	e1d600b4 	ldrh	r0, [r6, #4]
40015aa4:	e20090ff 	and	r9, r0, #255	; 0xff
40015aa8:	e3a00000 	mov	r0, #0
40015aac:	e59f1044 	ldr	r1, [pc, #68]	; 40015af8 <CyU3PDmaChannelCreate+0x3dc>
40015ab0:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015ab4:	e7810109 	str	r0, [r1, r9, lsl #2]
40015ab8:	e3550003 	cmp	r5, #3
40015abc:	0a000008 	beq	40015ae4 <CyU3PDmaChannelCreate+0x3c8>
40015ac0:	e1d600b6 	ldrh	r0, [r6, #6]
40015ac4:	e3a0103f 	mov	r1, #63	; 0x3f
40015ac8:	e0018440 	and	r8, r1, r0, asr #8
40015acc:	e1d600b6 	ldrh	r0, [r6, #6]
40015ad0:	e20090ff 	and	r9, r0, #255	; 0xff
40015ad4:	e3a00000 	mov	r0, #0
40015ad8:	e59f1018 	ldr	r1, [pc, #24]	; 40015af8 <CyU3PDmaChannelCreate+0x3dc>
40015adc:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015ae0:	e7810109 	str	r0, [r1, r9, lsl #2]
40015ae4:	e3a00000 	mov	r0, #0
40015ae8:	e5840000 	str	r0, [r4]
40015aec:	e1a00007 	mov	r0, r7
40015af0:	eaffff10 	b	40015738 <CyU3PDmaChannelCreate+0x1c>
40015af4:	0000fff0 	.word	0x0000fff0
40015af8:	40030d00 	.word	0x40030d00
40015afc:	00003f01 	.word	0x00003f01
40015b00:	40030c64 	.word	0x40030c64

Disassembly of section i.CyU3PDmaChannelDestroy:

40015b04 <CyU3PDmaChannelDestroy>:
40015b04:	e92d4070 	push	{r4, r5, r6, lr}
40015b08:	e1a04000 	mov	r4, r0
40015b0c:	e3e01000 	mvn	r1, #0
40015b10:	e1a00004 	mov	r0, r4
40015b14:	ebfffd5b 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40015b18:	e1a05000 	mov	r5, r0
40015b1c:	e3550000 	cmp	r5, #0
40015b20:	0a000001 	beq	40015b2c <CyU3PDmaChannelDestroy+0x28>
40015b24:	e1a00005 	mov	r0, r5
40015b28:	e8bd8070 	pop	{r4, r5, r6, pc}
40015b2c:	e1d400b4 	ldrh	r0, [r4, #4]
40015b30:	e3500005 	cmp	r0, #5
40015b34:	308ff100 	addcc	pc, pc, r0, lsl #2
40015b38:	ea00000f 	b	40015b7c <CyU3PDmaChannelDestroy+0x78>
40015b3c:	ea000003 	b	40015b50 <CyU3PDmaChannelDestroy+0x4c>
40015b40:	ea000004 	b	40015b58 <CyU3PDmaChannelDestroy+0x54>
40015b44:	ea000009 	b	40015b70 <CyU3PDmaChannelDestroy+0x6c>
40015b48:	ea000005 	b	40015b64 <CyU3PDmaChannelDestroy+0x60>
40015b4c:	ea000006 	b	40015b6c <CyU3PDmaChannelDestroy+0x68>
40015b50:	e1a00000 	nop			; (mov r0, r0)
40015b54:	e1a00000 	nop			; (mov r0, r0)
40015b58:	e1a00004 	mov	r0, r4
40015b5c:	eb000014 	bl	40015bb4 <CyU3PDmaChannelDestroy_TypeAuto>
40015b60:	ea00000a 	b	40015b90 <CyU3PDmaChannelDestroy+0x8c>
40015b64:	e1a00000 	nop			; (mov r0, r0)
40015b68:	e1a00000 	nop			; (mov r0, r0)
40015b6c:	e1a00000 	nop			; (mov r0, r0)
40015b70:	e1a00004 	mov	r0, r4
40015b74:	eb000043 	bl	40015c88 <CyU3PDmaChannelDestroy_TypeManual>
40015b78:	ea000004 	b	40015b90 <CyU3PDmaChannelDestroy+0x8c>
40015b7c:	e1a00000 	nop			; (mov r0, r0)
40015b80:	e284003c 	add	r0, r4, #60	; 0x3c
40015b84:	ebffd153 	bl	4000a0d8 <_txe_mutex_put>
40015b88:	e3a00040 	mov	r0, #64	; 0x40
40015b8c:	eaffffe5 	b	40015b28 <CyU3PDmaChannelDestroy+0x24>
40015b90:	e1a00000 	nop			; (mov r0, r0)
40015b94:	e3a00000 	mov	r0, #0
40015b98:	e5840000 	str	r0, [r4]
40015b9c:	e284003c 	add	r0, r4, #60	; 0x3c
40015ba0:	ebffd0f7 	bl	40009f84 <_txe_mutex_delete>
40015ba4:	e2840074 	add	r0, r4, #116	; 0x74
40015ba8:	ebffd02d 	bl	40009c64 <_txe_event_flags_delete>
40015bac:	e3a00000 	mov	r0, #0
40015bb0:	eaffffdc 	b	40015b28 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015bb4 <CyU3PDmaChannelDestroy_TypeAuto>:
40015bb4:	e92d4070 	push	{r4, r5, r6, lr}
40015bb8:	e24dd018 	sub	sp, sp, #24
40015bbc:	e1a04000 	mov	r4, r0
40015bc0:	e1d401b0 	ldrh	r0, [r4, #16]
40015bc4:	ebfffbbb 	bl	40014ab8 <CyU3PDmaSocketDisable>
40015bc8:	e1d401b2 	ldrh	r0, [r4, #18]
40015bcc:	ebfffbb9 	bl	40014ab8 <CyU3PDmaSocketDisable>
40015bd0:	e1d401b0 	ldrh	r0, [r4, #16]
40015bd4:	e1a0100d 	mov	r1, sp
40015bd8:	ebfffbce 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40015bdc:	e59f009c 	ldr	r0, [pc, #156]	; 40015c80 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015be0:	e58d0000 	str	r0, [sp]
40015be4:	e1d401b0 	ldrh	r0, [r4, #16]
40015be8:	e1a0100d 	mov	r1, sp
40015bec:	ebfffc73 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40015bf0:	e1d401b0 	ldrh	r0, [r4, #16]
40015bf4:	e20050ff 	and	r5, r0, #255	; 0xff
40015bf8:	e1d401b0 	ldrh	r0, [r4, #16]
40015bfc:	e3a0103f 	mov	r1, #63	; 0x3f
40015c00:	e0016440 	and	r6, r1, r0, asr #8
40015c04:	e3a00000 	mov	r0, #0
40015c08:	e59f1074 	ldr	r1, [pc, #116]	; 40015c84 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015c0c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015c10:	e7810105 	str	r0, [r1, r5, lsl #2]
40015c14:	e1d401b2 	ldrh	r0, [r4, #18]
40015c18:	e1a0100d 	mov	r1, sp
40015c1c:	ebfffbbd 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40015c20:	e59f0058 	ldr	r0, [pc, #88]	; 40015c80 <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40015c24:	e58d0000 	str	r0, [sp]
40015c28:	e1d401b2 	ldrh	r0, [r4, #18]
40015c2c:	e1a0100d 	mov	r1, sp
40015c30:	ebfffc62 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40015c34:	e1d401b2 	ldrh	r0, [r4, #18]
40015c38:	e20050ff 	and	r5, r0, #255	; 0xff
40015c3c:	e1d401b2 	ldrh	r0, [r4, #18]
40015c40:	e3a0103f 	mov	r1, #63	; 0x3f
40015c44:	e0016440 	and	r6, r1, r0, asr #8
40015c48:	e3a00000 	mov	r0, #0
40015c4c:	e59f1030 	ldr	r1, [pc, #48]	; 40015c84 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40015c50:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015c54:	e7810105 	str	r0, [r1, r5, lsl #2]
40015c58:	e1d410b8 	ldrh	r1, [r4, #8]
40015c5c:	e1d400bc 	ldrh	r0, [r4, #12]
40015c60:	e3a03001 	mov	r3, #1
40015c64:	e1a02003 	mov	r2, r3
40015c68:	eb00316d 	bl	40022224 <CyU3PDmaDscrChainDestroy>
40015c6c:	e1d401b4 	ldrh	r0, [r4, #20]
40015c70:	eb0031df 	bl	400223f4 <CyU3PDmaDscrPut>
40015c74:	e3a00000 	mov	r0, #0
40015c78:	e28dd018 	add	sp, sp, #24
40015c7c:	e8bd8070 	pop	{r4, r5, r6, pc}
40015c80:	0000ffff 	.word	0x0000ffff
40015c84:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

40015c88 <CyU3PDmaChannelDestroy_TypeManual>:
40015c88:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015c8c:	e24dd028 	sub	sp, sp, #40	; 0x28
40015c90:	e1a04000 	mov	r4, r0
40015c94:	e1d400b4 	ldrh	r0, [r4, #4]
40015c98:	e3500004 	cmp	r0, #4
40015c9c:	0a000012 	beq	40015cec <CyU3PDmaChannelDestroy_TypeManual+0x64>
40015ca0:	e1d401b0 	ldrh	r0, [r4, #16]
40015ca4:	ebfffb83 	bl	40014ab8 <CyU3PDmaSocketDisable>
40015ca8:	e1d401b0 	ldrh	r0, [r4, #16]
40015cac:	e1a0100d 	mov	r1, sp
40015cb0:	ebfffb98 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40015cb4:	e59f0178 	ldr	r0, [pc, #376]	; 40015e34 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015cb8:	e58d0000 	str	r0, [sp]
40015cbc:	e1d401b0 	ldrh	r0, [r4, #16]
40015cc0:	e1a0100d 	mov	r1, sp
40015cc4:	ebfffc3d 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40015cc8:	e1d401b0 	ldrh	r0, [r4, #16]
40015ccc:	e20070ff 	and	r7, r0, #255	; 0xff
40015cd0:	e1d401b0 	ldrh	r0, [r4, #16]
40015cd4:	e3a0103f 	mov	r1, #63	; 0x3f
40015cd8:	e0018440 	and	r8, r1, r0, asr #8
40015cdc:	e3a00000 	mov	r0, #0
40015ce0:	e59f1150 	ldr	r1, [pc, #336]	; 40015e38 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015ce4:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015ce8:	e7810107 	str	r0, [r1, r7, lsl #2]
40015cec:	e1d400b4 	ldrh	r0, [r4, #4]
40015cf0:	e3500003 	cmp	r0, #3
40015cf4:	0a000012 	beq	40015d44 <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40015cf8:	e1d401b2 	ldrh	r0, [r4, #18]
40015cfc:	ebfffb6d 	bl	40014ab8 <CyU3PDmaSocketDisable>
40015d00:	e1d401b2 	ldrh	r0, [r4, #18]
40015d04:	e1a0100d 	mov	r1, sp
40015d08:	ebfffb82 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40015d0c:	e59f0120 	ldr	r0, [pc, #288]	; 40015e34 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
40015d10:	e58d0000 	str	r0, [sp]
40015d14:	e1d401b2 	ldrh	r0, [r4, #18]
40015d18:	e1a0100d 	mov	r1, sp
40015d1c:	ebfffc27 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40015d20:	e1d401b2 	ldrh	r0, [r4, #18]
40015d24:	e20070ff 	and	r7, r0, #255	; 0xff
40015d28:	e1d401b2 	ldrh	r0, [r4, #18]
40015d2c:	e3a0103f 	mov	r1, #63	; 0x3f
40015d30:	e0018440 	and	r8, r1, r0, asr #8
40015d34:	e3a00000 	mov	r0, #0
40015d38:	e59f10f8 	ldr	r1, [pc, #248]	; 40015e38 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40015d3c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015d40:	e7810107 	str	r0, [r1, r7, lsl #2]
40015d44:	e1d400b8 	ldrh	r0, [r4, #8]
40015d48:	e3500000 	cmp	r0, #0
40015d4c:	0a000033 	beq	40015e20 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015d50:	e1d400b4 	ldrh	r0, [r4, #4]
40015d54:	e3500004 	cmp	r0, #4
40015d58:	1a000014 	bne	40015db0 <CyU3PDmaChannelDestroy_TypeManual+0x128>
40015d5c:	e1d450be 	ldrh	r5, [r4, #14]
40015d60:	e3a06000 	mov	r6, #0
40015d64:	ea00000d 	b	40015da0 <CyU3PDmaChannelDestroy_TypeManual+0x118>
40015d68:	e28d1018 	add	r1, sp, #24
40015d6c:	e1a00005 	mov	r0, r5
40015d70:	eb0031c6 	bl	40022490 <CyU3PDmaDscrGetConfig>
40015d74:	e59d1018 	ldr	r1, [sp, #24]
40015d78:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
40015d7c:	e0410002 	sub	r0, r1, r2
40015d80:	ebffb85b 	bl	40003ef4 <CyU3PDmaBufferFree>
40015d84:	e1a00005 	mov	r0, r5
40015d88:	eb003199 	bl	400223f4 <CyU3PDmaDscrPut>
40015d8c:	e59d0020 	ldr	r0, [sp, #32]
40015d90:	e1a05800 	lsl	r5, r0, #16
40015d94:	e1a05825 	lsr	r5, r5, #16
40015d98:	e2860001 	add	r0, r6, #1
40015d9c:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015da0:	e1d400b8 	ldrh	r0, [r4, #8]
40015da4:	e1500006 	cmp	r0, r6
40015da8:	caffffee 	bgt	40015d68 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
40015dac:	ea000013 	b	40015e00 <CyU3PDmaChannelDestroy_TypeManual+0x178>
40015db0:	e1d450bc 	ldrh	r5, [r4, #12]
40015db4:	e3a06000 	mov	r6, #0
40015db8:	ea00000d 	b	40015df4 <CyU3PDmaChannelDestroy_TypeManual+0x16c>
40015dbc:	e28d1018 	add	r1, sp, #24
40015dc0:	e1a00005 	mov	r0, r5
40015dc4:	eb0031b1 	bl	40022490 <CyU3PDmaDscrGetConfig>
40015dc8:	e59d1018 	ldr	r1, [sp, #24]
40015dcc:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
40015dd0:	e0410002 	sub	r0, r1, r2
40015dd4:	ebffb846 	bl	40003ef4 <CyU3PDmaBufferFree>
40015dd8:	e1a00005 	mov	r0, r5
40015ddc:	eb003184 	bl	400223f4 <CyU3PDmaDscrPut>
40015de0:	e59d0020 	ldr	r0, [sp, #32]
40015de4:	e1a05800 	lsl	r5, r0, #16
40015de8:	e1a05825 	lsr	r5, r5, #16
40015dec:	e2860001 	add	r0, r6, #1
40015df0:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40015df4:	e1d400b8 	ldrh	r0, [r4, #8]
40015df8:	e1500006 	cmp	r0, r6
40015dfc:	caffffee 	bgt	40015dbc <CyU3PDmaChannelDestroy_TypeManual+0x134>
40015e00:	e1d400b4 	ldrh	r0, [r4, #4]
40015e04:	e3500002 	cmp	r0, #2
40015e08:	1a000004 	bne	40015e20 <CyU3PDmaChannelDestroy_TypeManual+0x198>
40015e0c:	e1d410b8 	ldrh	r1, [r4, #8]
40015e10:	e1d400be 	ldrh	r0, [r4, #14]
40015e14:	e3a03000 	mov	r3, #0
40015e18:	e1a02003 	mov	r2, r3
40015e1c:	eb003100 	bl	40022224 <CyU3PDmaDscrChainDestroy>
40015e20:	e1d401b4 	ldrh	r0, [r4, #20]
40015e24:	eb003172 	bl	400223f4 <CyU3PDmaDscrPut>
40015e28:	e3a00000 	mov	r0, #0
40015e2c:	e28dd028 	add	sp, sp, #40	; 0x28
40015e30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015e34:	0000ffff 	.word	0x0000ffff
40015e38:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40015e3c <CyU3PDmaChannelGetBuffer>:
40015e3c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40015e40:	e24dd030 	sub	sp, sp, #48	; 0x30
40015e44:	e1a04000 	mov	r4, r0
40015e48:	e1a05001 	mov	r5, r1
40015e4c:	e1a06002 	mov	r6, r2
40015e50:	e3550000 	cmp	r5, #0
40015e54:	1a000002 	bne	40015e64 <CyU3PDmaChannelGetBuffer+0x28>
40015e58:	e3a00041 	mov	r0, #65	; 0x41
40015e5c:	e28dd030 	add	sp, sp, #48	; 0x30
40015e60:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015e64:	e1a01006 	mov	r1, r6
40015e68:	e1a00004 	mov	r0, r4
40015e6c:	ebfffc85 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40015e70:	e1a08000 	mov	r8, r0
40015e74:	e3580000 	cmp	r8, #0
40015e78:	0a000001 	beq	40015e84 <CyU3PDmaChannelGetBuffer+0x48>
40015e7c:	e1a00008 	mov	r0, r8
40015e80:	eafffff5 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40015e84:	e5940000 	ldr	r0, [r4]
40015e88:	e3500002 	cmp	r0, #2
40015e8c:	0a000003 	beq	40015ea0 <CyU3PDmaChannelGetBuffer+0x64>
40015e90:	e5940000 	ldr	r0, [r4]
40015e94:	e3500006 	cmp	r0, #6
40015e98:	0a000000 	beq	40015ea0 <CyU3PDmaChannelGetBuffer+0x64>
40015e9c:	e3a08042 	mov	r8, #66	; 0x42
40015ea0:	e5940000 	ldr	r0, [r4]
40015ea4:	e3500005 	cmp	r0, #5
40015ea8:	1a000000 	bne	40015eb0 <CyU3PDmaChannelGetBuffer+0x74>
40015eac:	e3a08049 	mov	r8, #73	; 0x49
40015eb0:	e5940000 	ldr	r0, [r4]
40015eb4:	e3500007 	cmp	r0, #7
40015eb8:	1a000000 	bne	40015ec0 <CyU3PDmaChannelGetBuffer+0x84>
40015ebc:	e3a08048 	mov	r8, #72	; 0x48
40015ec0:	e3580000 	cmp	r8, #0
40015ec4:	0a000003 	beq	40015ed8 <CyU3PDmaChannelGetBuffer+0x9c>
40015ec8:	e284003c 	add	r0, r4, #60	; 0x3c
40015ecc:	ebffd081 	bl	4000a0d8 <_txe_mutex_put>
40015ed0:	e1a00008 	mov	r0, r8
40015ed4:	eaffffe0 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40015ed8:	e1d400b4 	ldrh	r0, [r4, #4]
40015edc:	e20070ff 	and	r7, r0, #255	; 0xff
40015ee0:	e3570002 	cmp	r7, #2
40015ee4:	0a000001 	beq	40015ef0 <CyU3PDmaChannelGetBuffer+0xb4>
40015ee8:	e3570003 	cmp	r7, #3
40015eec:	1a00003e 	bne	40015fec <CyU3PDmaChannelGetBuffer+0x1b0>
40015ef0:	e3a02002 	mov	r2, #2
40015ef4:	e3e01008 	mvn	r1, #8
40015ef8:	e2840074 	add	r0, r4, #116	; 0x74
40015efc:	ebffcfa8 	bl	40009da4 <_txe_event_flags_set>
40015f00:	e1d401b6 	ldrh	r0, [r4, #22]
40015f04:	e28d101c 	add	r1, sp, #28
40015f08:	eb003160 	bl	40022490 <CyU3PDmaDscrGetConfig>
40015f0c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015f10:	e3100008 	tst	r0, #8
40015f14:	1a000022 	bne	40015fa4 <CyU3PDmaChannelGetBuffer+0x168>
40015f18:	e284003c 	add	r0, r4, #60	; 0x3c
40015f1c:	ebffd06d 	bl	4000a0d8 <_txe_mutex_put>
40015f20:	e58d6000 	str	r6, [sp]
40015f24:	e28d302c 	add	r3, sp, #44	; 0x2c
40015f28:	e3a02000 	mov	r2, #0
40015f2c:	e3a01068 	mov	r1, #104	; 0x68
40015f30:	e2840074 	add	r0, r4, #116	; 0x74
40015f34:	ebffcf6a 	bl	40009ce4 <_txe_event_flags_get>
40015f38:	e1a08000 	mov	r8, r0
40015f3c:	e3580000 	cmp	r8, #0
40015f40:	0a000001 	beq	40015f4c <CyU3PDmaChannelGetBuffer+0x110>
40015f44:	e3a00045 	mov	r0, #69	; 0x45
40015f48:	eaffffc3 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40015f4c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015f50:	e3100040 	tst	r0, #64	; 0x40
40015f54:	0a000001 	beq	40015f60 <CyU3PDmaChannelGetBuffer+0x124>
40015f58:	e3a00049 	mov	r0, #73	; 0x49
40015f5c:	eaffffbe 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40015f60:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40015f64:	e3100020 	tst	r0, #32
40015f68:	0a000001 	beq	40015f74 <CyU3PDmaChannelGetBuffer+0x138>
40015f6c:	e3a00048 	mov	r0, #72	; 0x48
40015f70:	eaffffb9 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40015f74:	e1a01006 	mov	r1, r6
40015f78:	e1a00004 	mov	r0, r4
40015f7c:	ebfffc41 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40015f80:	e1a08000 	mov	r8, r0
40015f84:	e3580000 	cmp	r8, #0
40015f88:	0a000001 	beq	40015f94 <CyU3PDmaChannelGetBuffer+0x158>
40015f8c:	e1a00008 	mov	r0, r8
40015f90:	eaffffb1 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40015f94:	e1d401b6 	ldrh	r0, [r4, #22]
40015f98:	e28d101c 	add	r1, sp, #28
40015f9c:	eb00313b 	bl	40022490 <CyU3PDmaDscrGetConfig>
40015fa0:	ea000003 	b	40015fb4 <CyU3PDmaChannelGetBuffer+0x178>
40015fa4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015fa8:	e3500000 	cmp	r0, #0
40015fac:	0a000000 	beq	40015fb4 <CyU3PDmaChannelGetBuffer+0x178>
40015fb0:	ebffd234 	bl	4000a888 <_txe_thread_relinquish>
40015fb4:	e59d001c 	ldr	r0, [sp, #28]
40015fb8:	e5850000 	str	r0, [r5]
40015fbc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015fc0:	e59f11a4 	ldr	r1, [pc, #420]	; 4001616c <CyU3PDmaChannelGetBuffer+0x330>
40015fc4:	e0010820 	and	r0, r1, r0, lsr #16
40015fc8:	e1c500b4 	strh	r0, [r5, #4]
40015fcc:	e241100f 	sub	r1, r1, #15
40015fd0:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015fd4:	e0000001 	and	r0, r0, r1
40015fd8:	e1c500b6 	strh	r0, [r5, #6]
40015fdc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40015fe0:	e200000f 	and	r0, r0, #15
40015fe4:	e1c500b8 	strh	r0, [r5, #8]
40015fe8:	ea00005b 	b	4001615c <CyU3PDmaChannelGetBuffer+0x320>
40015fec:	e3570004 	cmp	r7, #4
40015ff0:	1a000036 	bne	400160d0 <CyU3PDmaChannelGetBuffer+0x294>
40015ff4:	e3a02002 	mov	r2, #2
40015ff8:	e3e01010 	mvn	r1, #16
40015ffc:	e2840074 	add	r0, r4, #116	; 0x74
40016000:	ebffcf67 	bl	40009da4 <_txe_event_flags_set>
40016004:	e1d401b8 	ldrh	r0, [r4, #24]
40016008:	e28d101c 	add	r1, sp, #28
4001600c:	eb00311f 	bl	40022490 <CyU3PDmaDscrGetConfig>
40016010:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016014:	e3100008 	tst	r0, #8
40016018:	0a000021 	beq	400160a4 <CyU3PDmaChannelGetBuffer+0x268>
4001601c:	e284003c 	add	r0, r4, #60	; 0x3c
40016020:	ebffd02c 	bl	4000a0d8 <_txe_mutex_put>
40016024:	e58d6000 	str	r6, [sp]
40016028:	e28d302c 	add	r3, sp, #44	; 0x2c
4001602c:	e3a02000 	mov	r2, #0
40016030:	e3a01070 	mov	r1, #112	; 0x70
40016034:	e2840074 	add	r0, r4, #116	; 0x74
40016038:	ebffcf29 	bl	40009ce4 <_txe_event_flags_get>
4001603c:	e1a08000 	mov	r8, r0
40016040:	e3580000 	cmp	r8, #0
40016044:	0a000001 	beq	40016050 <CyU3PDmaChannelGetBuffer+0x214>
40016048:	e3a00045 	mov	r0, #69	; 0x45
4001604c:	eaffff82 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40016050:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016054:	e3100040 	tst	r0, #64	; 0x40
40016058:	0a000001 	beq	40016064 <CyU3PDmaChannelGetBuffer+0x228>
4001605c:	e3a00049 	mov	r0, #73	; 0x49
40016060:	eaffff7d 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40016064:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016068:	e3100020 	tst	r0, #32
4001606c:	0a000001 	beq	40016078 <CyU3PDmaChannelGetBuffer+0x23c>
40016070:	e3a00048 	mov	r0, #72	; 0x48
40016074:	eaffff78 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40016078:	e1a01006 	mov	r1, r6
4001607c:	e1a00004 	mov	r0, r4
40016080:	ebfffc00 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40016084:	e1a08000 	mov	r8, r0
40016088:	e3580000 	cmp	r8, #0
4001608c:	0a000001 	beq	40016098 <CyU3PDmaChannelGetBuffer+0x25c>
40016090:	e1a00008 	mov	r0, r8
40016094:	eaffff70 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
40016098:	e1d401b8 	ldrh	r0, [r4, #24]
4001609c:	e28d101c 	add	r1, sp, #28
400160a0:	eb0030fa 	bl	40022490 <CyU3PDmaDscrGetConfig>
400160a4:	e59d001c 	ldr	r0, [sp, #28]
400160a8:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400160ac:	e0400001 	sub	r0, r0, r1
400160b0:	e5850000 	str	r0, [r5]
400160b4:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
400160b8:	e1c500b4 	strh	r0, [r5, #4]
400160bc:	e1d400b6 	ldrh	r0, [r4, #6]
400160c0:	e1c500b6 	strh	r0, [r5, #6]
400160c4:	e3a00000 	mov	r0, #0
400160c8:	e1c500b8 	strh	r0, [r5, #8]
400160cc:	ea000022 	b	4001615c <CyU3PDmaChannelGetBuffer+0x320>
400160d0:	e1d401b2 	ldrh	r0, [r4, #18]
400160d4:	e28d1004 	add	r1, sp, #4
400160d8:	ebfffa8e 	bl	40014b18 <CyU3PDmaSocketGetConfig>
400160dc:	e59d1004 	ldr	r1, [sp, #4]
400160e0:	e1a00801 	lsl	r0, r1, #16
400160e4:	e1a00820 	lsr	r0, r0, #16
400160e8:	e28d101c 	add	r1, sp, #28
400160ec:	eb0030e7 	bl	40022490 <CyU3PDmaDscrGetConfig>
400160f0:	e59d0010 	ldr	r0, [sp, #16]
400160f4:	e3100702 	tst	r0, #524288	; 0x80000
400160f8:	0a000016 	beq	40016158 <CyU3PDmaChannelGetBuffer+0x31c>
400160fc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016100:	e3100008 	tst	r0, #8
40016104:	0a000013 	beq	40016158 <CyU3PDmaChannelGetBuffer+0x31c>
40016108:	e59d001c 	ldr	r0, [sp, #28]
4001610c:	e5850000 	str	r0, [r5]
40016110:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016114:	e59f1050 	ldr	r1, [pc, #80]	; 4001616c <CyU3PDmaChannelGetBuffer+0x330>
40016118:	e0010820 	and	r0, r1, r0, lsr #16
4001611c:	e1c500b4 	strh	r0, [r5, #4]
40016120:	e241100f 	sub	r1, r1, #15
40016124:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016128:	e0000001 	and	r0, r0, r1
4001612c:	e1c500b6 	strh	r0, [r5, #6]
40016130:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016134:	e200000f 	and	r0, r0, #15
40016138:	e1c500b8 	strh	r0, [r5, #8]
4001613c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016140:	e3500000 	cmp	r0, #0
40016144:	0a000004 	beq	4001615c <CyU3PDmaChannelGetBuffer+0x320>
40016148:	e1d510b6 	ldrh	r1, [r5, #6]
4001614c:	e5950000 	ldr	r0, [r5]
40016150:	ebffefa1 	bl	40011fdc <CyU3PSysFlushDRegion>
40016154:	ea000000 	b	4001615c <CyU3PDmaChannelGetBuffer+0x320>
40016158:	e3a08047 	mov	r8, #71	; 0x47
4001615c:	e284003c 	add	r0, r4, #60	; 0x3c
40016160:	ebffcfdc 	bl	4000a0d8 <_txe_mutex_put>
40016164:	e1a00008 	mov	r0, r8
40016168:	eaffff3b 	b	40015e5c <CyU3PDmaChannelGetBuffer+0x20>
4001616c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

40016170 <CyU3PDmaChannelReset>:
40016170:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40016174:	e1a04000 	mov	r4, r0
40016178:	e3e01000 	mvn	r1, #0
4001617c:	e1a00004 	mov	r0, r4
40016180:	ebfffbc0 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40016184:	e1a06000 	mov	r6, r0
40016188:	e3560000 	cmp	r6, #0
4001618c:	0a000001 	beq	40016198 <CyU3PDmaChannelReset+0x28>
40016190:	e1a00006 	mov	r0, r6
40016194:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40016198:	e1d400b4 	ldrh	r0, [r4, #4]
4001619c:	e3500005 	cmp	r0, #5
400161a0:	308ff100 	addcc	pc, pc, r0, lsl #2
400161a4:	ea00000f 	b	400161e8 <CyU3PDmaChannelReset+0x78>
400161a8:	ea000003 	b	400161bc <CyU3PDmaChannelReset+0x4c>
400161ac:	ea000004 	b	400161c4 <CyU3PDmaChannelReset+0x54>
400161b0:	ea000009 	b	400161dc <CyU3PDmaChannelReset+0x6c>
400161b4:	ea000005 	b	400161d0 <CyU3PDmaChannelReset+0x60>
400161b8:	ea000006 	b	400161d8 <CyU3PDmaChannelReset+0x68>
400161bc:	e1a00000 	nop			; (mov r0, r0)
400161c0:	e1a00000 	nop			; (mov r0, r0)
400161c4:	e1a00004 	mov	r0, r4
400161c8:	eb000030 	bl	40016290 <CyU3PDmaChannelReset_TypeAuto>
400161cc:	ea000007 	b	400161f0 <CyU3PDmaChannelReset+0x80>
400161d0:	e1a00000 	nop			; (mov r0, r0)
400161d4:	e1a00000 	nop			; (mov r0, r0)
400161d8:	e1a00000 	nop			; (mov r0, r0)
400161dc:	e1a00004 	mov	r0, r4
400161e0:	eb000045 	bl	400162fc <CyU3PDmaChannelReset_TypeManual>
400161e4:	ea000001 	b	400161f0 <CyU3PDmaChannelReset+0x80>
400161e8:	e1a00000 	nop			; (mov r0, r0)
400161ec:	e1a00000 	nop			; (mov r0, r0)
400161f0:	e1a00000 	nop			; (mov r0, r0)
400161f4:	ebffc96d 	bl	400087b0 <_tx_thread_identify>
400161f8:	e1a05000 	mov	r5, r0
400161fc:	e3550000 	cmp	r5, #0
40016200:	0a000003 	beq	40016214 <CyU3PDmaChannelReset+0xa4>
40016204:	e1a0200d 	mov	r2, sp
40016208:	e3a01002 	mov	r1, #2
4001620c:	e1a00005 	mov	r0, r5
40016210:	ebffd174 	bl	4000a7e8 <_txe_thread_priority_change>
40016214:	e3a02002 	mov	r2, #2
40016218:	e3e01007 	mvn	r1, #7
4001621c:	e2840074 	add	r0, r4, #116	; 0x74
40016220:	ebffcedf 	bl	40009da4 <_txe_event_flags_set>
40016224:	e3a02000 	mov	r2, #0
40016228:	e3a01020 	mov	r1, #32
4001622c:	e2840074 	add	r0, r4, #116	; 0x74
40016230:	ebffcedb 	bl	40009da4 <_txe_event_flags_set>
40016234:	e3a00001 	mov	r0, #1
40016238:	e5840000 	str	r0, [r4]
4001623c:	e284003c 	add	r0, r4, #60	; 0x3c
40016240:	ebffcfa4 	bl	4000a0d8 <_txe_mutex_put>
40016244:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40016248:	e3500000 	cmp	r0, #0
4001624c:	0a000007 	beq	40016270 <CyU3PDmaChannelReset+0x100>
40016250:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40016254:	e3100020 	tst	r0, #32
40016258:	0a000004 	beq	40016270 <CyU3PDmaChannelReset+0x100>
4001625c:	e3a02000 	mov	r2, #0
40016260:	e3a01020 	mov	r1, #32
40016264:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40016268:	e1a00004 	mov	r0, r4
4001626c:	e12fff33 	blx	r3
40016270:	e3550000 	cmp	r5, #0
40016274:	0a000003 	beq	40016288 <CyU3PDmaChannelReset+0x118>
40016278:	e1a0200d 	mov	r2, sp
4001627c:	e1a00005 	mov	r0, r5
40016280:	e59d1000 	ldr	r1, [sp]
40016284:	ebffd157 	bl	4000a7e8 <_txe_thread_priority_change>
40016288:	e3a00000 	mov	r0, #0
4001628c:	eaffffc0 	b	40016194 <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

40016290 <CyU3PDmaChannelReset_TypeAuto>:
40016290:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016294:	e1a04000 	mov	r4, r0
40016298:	e1d450b8 	ldrh	r5, [r4, #8]
4001629c:	e1d460bc 	ldrh	r6, [r4, #12]
400162a0:	e1a00004 	mov	r0, r4
400162a4:	eb000337 	bl	40016f88 <CyU3PDmaConfigureSockets_TypeAuto>
400162a8:	ea00000c 	b	400162e0 <CyU3PDmaChannelReset_TypeAuto+0x50>
400162ac:	e1a0100d 	mov	r1, sp
400162b0:	e1a00006 	mov	r0, r6
400162b4:	eb003075 	bl	40022490 <CyU3PDmaDscrGetConfig>
400162b8:	e59d000c 	ldr	r0, [sp, #12]
400162bc:	e59f1034 	ldr	r1, [pc, #52]	; 400162f8 <CyU3PDmaChannelReset_TypeAuto+0x68>
400162c0:	e0000001 	and	r0, r0, r1
400162c4:	e58d000c 	str	r0, [sp, #12]
400162c8:	e1a0100d 	mov	r1, sp
400162cc:	e1a00006 	mov	r0, r6
400162d0:	eb003089 	bl	400224fc <CyU3PDmaDscrSetConfig>
400162d4:	e59d0008 	ldr	r0, [sp, #8]
400162d8:	e1a06800 	lsl	r6, r0, #16
400162dc:	e1a06826 	lsr	r6, r6, #16
400162e0:	e1b00005 	movs	r0, r5
400162e4:	e2451001 	sub	r1, r5, #1
400162e8:	e1a05801 	lsl	r5, r1, #16
400162ec:	e1a05825 	lsr	r5, r5, #16
400162f0:	1affffed 	bne	400162ac <CyU3PDmaChannelReset_TypeAuto+0x1c>
400162f4:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400162f8:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

400162fc <CyU3PDmaChannelReset_TypeManual>:
400162fc:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
40016300:	e1a04000 	mov	r4, r0
40016304:	e1d450b8 	ldrh	r5, [r4, #8]
40016308:	e1a00004 	mov	r0, r4
4001630c:	eb00035d 	bl	40017088 <CyU3PDmaConfigureSockets_TypeManual>
40016310:	e1d400b4 	ldrh	r0, [r4, #4]
40016314:	e3500004 	cmp	r0, #4
40016318:	0a000017 	beq	4001637c <CyU3PDmaChannelReset_TypeManual+0x80>
4001631c:	e1d460bc 	ldrh	r6, [r4, #12]
40016320:	ea00000c 	b	40016358 <CyU3PDmaChannelReset_TypeManual+0x5c>
40016324:	e1a0100d 	mov	r1, sp
40016328:	e1a00006 	mov	r0, r6
4001632c:	eb003057 	bl	40022490 <CyU3PDmaDscrGetConfig>
40016330:	e59d000c 	ldr	r0, [sp, #12]
40016334:	e59f10b4 	ldr	r1, [pc, #180]	; 400163f0 <CyU3PDmaChannelReset_TypeManual+0xf4>
40016338:	e0000001 	and	r0, r0, r1
4001633c:	e58d000c 	str	r0, [sp, #12]
40016340:	e1a0100d 	mov	r1, sp
40016344:	e1a00006 	mov	r0, r6
40016348:	eb00306b 	bl	400224fc <CyU3PDmaDscrSetConfig>
4001634c:	e59d0008 	ldr	r0, [sp, #8]
40016350:	e1a06800 	lsl	r6, r0, #16
40016354:	e1a06826 	lsr	r6, r6, #16
40016358:	e1b00005 	movs	r0, r5
4001635c:	e2451001 	sub	r1, r5, #1
40016360:	e1a05801 	lsl	r5, r1, #16
40016364:	e1a05825 	lsr	r5, r5, #16
40016368:	1affffed 	bne	40016324 <CyU3PDmaChannelReset_TypeManual+0x28>
4001636c:	e1d400bc 	ldrh	r0, [r4, #12]
40016370:	e1c401b6 	strh	r0, [r4, #22]
40016374:	e1c401ba 	strh	r0, [r4, #26]
40016378:	e1c401be 	strh	r0, [r4, #30]
4001637c:	e1d400b4 	ldrh	r0, [r4, #4]
40016380:	e3500003 	cmp	r0, #3
40016384:	0a000018 	beq	400163ec <CyU3PDmaChannelReset_TypeManual+0xf0>
40016388:	e1d460be 	ldrh	r6, [r4, #14]
4001638c:	e1d450b8 	ldrh	r5, [r4, #8]
40016390:	ea00000c 	b	400163c8 <CyU3PDmaChannelReset_TypeManual+0xcc>
40016394:	e1a0100d 	mov	r1, sp
40016398:	e1a00006 	mov	r0, r6
4001639c:	eb00303b 	bl	40022490 <CyU3PDmaDscrGetConfig>
400163a0:	e59d000c 	ldr	r0, [sp, #12]
400163a4:	e59f1044 	ldr	r1, [pc, #68]	; 400163f0 <CyU3PDmaChannelReset_TypeManual+0xf4>
400163a8:	e0000001 	and	r0, r0, r1
400163ac:	e58d000c 	str	r0, [sp, #12]
400163b0:	e1a0100d 	mov	r1, sp
400163b4:	e1a00006 	mov	r0, r6
400163b8:	eb00304f 	bl	400224fc <CyU3PDmaDscrSetConfig>
400163bc:	e59d0008 	ldr	r0, [sp, #8]
400163c0:	e1a06800 	lsl	r6, r0, #16
400163c4:	e1a06826 	lsr	r6, r6, #16
400163c8:	e1b00005 	movs	r0, r5
400163cc:	e2451001 	sub	r1, r5, #1
400163d0:	e1a05801 	lsl	r5, r1, #16
400163d4:	e1a05825 	lsr	r5, r5, #16
400163d8:	1affffed 	bne	40016394 <CyU3PDmaChannelReset_TypeManual+0x98>
400163dc:	e1d400be 	ldrh	r0, [r4, #14]
400163e0:	e1c401b8 	strh	r0, [r4, #24]
400163e4:	e1c401bc 	strh	r0, [r4, #28]
400163e8:	e1c402b0 	strh	r0, [r4, #32]
400163ec:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
400163f0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

400163f4 <CyU3PDmaChannelSetXfer>:
400163f4:	e92d4070 	push	{r4, r5, r6, lr}
400163f8:	e1a04000 	mov	r4, r0
400163fc:	e1a05001 	mov	r5, r1
40016400:	e3e01000 	mvn	r1, #0
40016404:	e1a00004 	mov	r0, r4
40016408:	ebfffb1e 	bl	40015088 <CyU3PDmaChannelAcquireLock>
4001640c:	e1a06000 	mov	r6, r0
40016410:	e3560000 	cmp	r6, #0
40016414:	0a000001 	beq	40016420 <CyU3PDmaChannelSetXfer+0x2c>
40016418:	e1a00006 	mov	r0, r6
4001641c:	e8bd8070 	pop	{r4, r5, r6, pc}
40016420:	e5940000 	ldr	r0, [r4]
40016424:	e3500001 	cmp	r0, #1
40016428:	0a000000 	beq	40016430 <CyU3PDmaChannelSetXfer+0x3c>
4001642c:	e3a06043 	mov	r6, #67	; 0x43
40016430:	e1d400b8 	ldrh	r0, [r4, #8]
40016434:	e3500000 	cmp	r0, #0
40016438:	1a000000 	bne	40016440 <CyU3PDmaChannelSetXfer+0x4c>
4001643c:	e3a06046 	mov	r6, #70	; 0x46
40016440:	e3560000 	cmp	r6, #0
40016444:	1a00001d 	bne	400164c0 <CyU3PDmaChannelSetXfer+0xcc>
40016448:	e3a02002 	mov	r2, #2
4001644c:	e3e01027 	mvn	r1, #39	; 0x27
40016450:	e2840074 	add	r0, r4, #116	; 0x74
40016454:	ebffce52 	bl	40009da4 <_txe_event_flags_set>
40016458:	e5845034 	str	r5, [r4, #52]	; 0x34
4001645c:	e1d400b4 	ldrh	r0, [r4, #4]
40016460:	e3500005 	cmp	r0, #5
40016464:	308ff100 	addcc	pc, pc, r0, lsl #2
40016468:	ea000011 	b	400164b4 <CyU3PDmaChannelSetXfer+0xc0>
4001646c:	ea000003 	b	40016480 <CyU3PDmaChannelSetXfer+0x8c>
40016470:	ea000004 	b	40016488 <CyU3PDmaChannelSetXfer+0x94>
40016474:	ea00000a 	b	400164a4 <CyU3PDmaChannelSetXfer+0xb0>
40016478:	ea000006 	b	40016498 <CyU3PDmaChannelSetXfer+0xa4>
4001647c:	ea000007 	b	400164a0 <CyU3PDmaChannelSetXfer+0xac>
40016480:	e1a00000 	nop			; (mov r0, r0)
40016484:	e1a00000 	nop			; (mov r0, r0)
40016488:	e1a01005 	mov	r1, r5
4001648c:	e1a00004 	mov	r0, r4
40016490:	eb00000e 	bl	400164d0 <CyU3PDmaChannelSetXfer_TypeAuto>
40016494:	ea000008 	b	400164bc <CyU3PDmaChannelSetXfer+0xc8>
40016498:	e1a00000 	nop			; (mov r0, r0)
4001649c:	e1a00000 	nop			; (mov r0, r0)
400164a0:	e1a00000 	nop			; (mov r0, r0)
400164a4:	e1a01005 	mov	r1, r5
400164a8:	e1a00004 	mov	r0, r4
400164ac:	eb00006f 	bl	40016670 <CyU3PDmaChannelSetXfer_TypeManual>
400164b0:	ea000001 	b	400164bc <CyU3PDmaChannelSetXfer+0xc8>
400164b4:	e1a00000 	nop			; (mov r0, r0)
400164b8:	e1a00000 	nop			; (mov r0, r0)
400164bc:	e1a00000 	nop			; (mov r0, r0)
400164c0:	e284003c 	add	r0, r4, #60	; 0x3c
400164c4:	ebffcf03 	bl	4000a0d8 <_txe_mutex_put>
400164c8:	e1a00006 	mov	r0, r6
400164cc:	eaffffd2 	b	4001641c <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

400164d0 <CyU3PDmaChannelSetXfer_TypeAuto>:
400164d0:	e92d4030 	push	{r4, r5, lr}
400164d4:	e24dd01c 	sub	sp, sp, #28
400164d8:	e1a04000 	mov	r4, r0
400164dc:	e1a05001 	mov	r5, r1
400164e0:	e1d401b0 	ldrh	r0, [r4, #16]
400164e4:	ebfff973 	bl	40014ab8 <CyU3PDmaSocketDisable>
400164e8:	e1d401b2 	ldrh	r0, [r4, #18]
400164ec:	ebfff971 	bl	40014ab8 <CyU3PDmaSocketDisable>
400164f0:	e3a00002 	mov	r0, #2
400164f4:	e5840000 	str	r0, [r4]
400164f8:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
400164fc:	e1d401b0 	ldrh	r0, [r4, #16]
40016500:	ebfffa87 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
40016504:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016508:	e1d401b2 	ldrh	r0, [r4, #18]
4001650c:	ebfffa84 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
40016510:	e1d401b0 	ldrh	r0, [r4, #16]
40016514:	e28d1004 	add	r1, sp, #4
40016518:	ebfff97e 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001651c:	e58d5008 	str	r5, [sp, #8]
40016520:	e3a00000 	mov	r0, #0
40016524:	e58d000c 	str	r0, [sp, #12]
40016528:	e3550000 	cmp	r5, #0
4001652c:	1a000003 	bne	40016540 <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
40016530:	e59d0010 	ldr	r0, [sp, #16]
40016534:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016538:	e58d0010 	str	r0, [sp, #16]
4001653c:	ea000002 	b	4001654c <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
40016540:	e59d0010 	ldr	r0, [sp, #16]
40016544:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016548:	e58d0010 	str	r0, [sp, #16]
4001654c:	e59d0010 	ldr	r0, [sp, #16]
40016550:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016554:	e58d0010 	str	r0, [sp, #16]
40016558:	e59d0010 	ldr	r0, [sp, #16]
4001655c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016560:	e58d0010 	str	r0, [sp, #16]
40016564:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016568:	e3500001 	cmp	r0, #1
4001656c:	1a000003 	bne	40016580 <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
40016570:	e59d0010 	ldr	r0, [sp, #16]
40016574:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016578:	e58d0010 	str	r0, [sp, #16]
4001657c:	ea000002 	b	4001658c <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
40016580:	e59d0010 	ldr	r0, [sp, #16]
40016584:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016588:	e58d0010 	str	r0, [sp, #16]
4001658c:	e1d400ba 	ldrh	r0, [r4, #10]
40016590:	e3500000 	cmp	r0, #0
40016594:	0a000006 	beq	400165b4 <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
40016598:	e1d400b8 	ldrh	r0, [r4, #8]
4001659c:	e3800b01 	orr	r0, r0, #1024	; 0x400
400165a0:	e1d410ba 	ldrh	r1, [r4, #10]
400165a4:	e1800281 	orr	r0, r0, r1, lsl #5
400165a8:	e59d1010 	ldr	r1, [sp, #16]
400165ac:	e1800001 	orr	r0, r0, r1
400165b0:	e58d0010 	str	r0, [sp, #16]
400165b4:	e3e00000 	mvn	r0, #0
400165b8:	e58d0014 	str	r0, [sp, #20]
400165bc:	e1d401b0 	ldrh	r0, [r4, #16]
400165c0:	e28d1004 	add	r1, sp, #4
400165c4:	ebfff9fd 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
400165c8:	e1d401b2 	ldrh	r0, [r4, #18]
400165cc:	e28d1004 	add	r1, sp, #4
400165d0:	ebfff950 	bl	40014b18 <CyU3PDmaSocketGetConfig>
400165d4:	e58d5008 	str	r5, [sp, #8]
400165d8:	e3a00000 	mov	r0, #0
400165dc:	e58d000c 	str	r0, [sp, #12]
400165e0:	e3550000 	cmp	r5, #0
400165e4:	1a000006 	bne	40016604 <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
400165e8:	e59d0018 	ldr	r0, [sp, #24]
400165ec:	e3c00080 	bic	r0, r0, #128	; 0x80
400165f0:	e58d0018 	str	r0, [sp, #24]
400165f4:	e59d0010 	ldr	r0, [sp, #16]
400165f8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400165fc:	e58d0010 	str	r0, [sp, #16]
40016600:	ea000005 	b	4001661c <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
40016604:	e59d0018 	ldr	r0, [sp, #24]
40016608:	e3800080 	orr	r0, r0, #128	; 0x80
4001660c:	e58d0018 	str	r0, [sp, #24]
40016610:	e59d0010 	ldr	r0, [sp, #16]
40016614:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016618:	e58d0010 	str	r0, [sp, #16]
4001661c:	e59d0010 	ldr	r0, [sp, #16]
40016620:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016624:	e58d0010 	str	r0, [sp, #16]
40016628:	e59d0010 	ldr	r0, [sp, #16]
4001662c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016630:	e58d0010 	str	r0, [sp, #16]
40016634:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016638:	e3500001 	cmp	r0, #1
4001663c:	1a000003 	bne	40016650 <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
40016640:	e59d0010 	ldr	r0, [sp, #16]
40016644:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016648:	e58d0010 	str	r0, [sp, #16]
4001664c:	ea000002 	b	4001665c <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
40016650:	e59d0010 	ldr	r0, [sp, #16]
40016654:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016658:	e58d0010 	str	r0, [sp, #16]
4001665c:	e1d401b2 	ldrh	r0, [r4, #18]
40016660:	e28d1004 	add	r1, sp, #4
40016664:	ebfff9d5 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40016668:	e28dd01c 	add	sp, sp, #28
4001666c:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016670 <CyU3PDmaChannelSetXfer_TypeManual>:
40016670:	e92d4030 	push	{r4, r5, lr}
40016674:	e24dd01c 	sub	sp, sp, #28
40016678:	e1a04000 	mov	r4, r0
4001667c:	e1a05001 	mov	r5, r1
40016680:	e3a00002 	mov	r0, #2
40016684:	e5840000 	str	r0, [r4]
40016688:	e1d400b4 	ldrh	r0, [r4, #4]
4001668c:	e3500004 	cmp	r0, #4
40016690:	0a00003d 	beq	4001678c <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
40016694:	e1d401b0 	ldrh	r0, [r4, #16]
40016698:	ebfff906 	bl	40014ab8 <CyU3PDmaSocketDisable>
4001669c:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
400166a0:	e1d401b0 	ldrh	r0, [r4, #16]
400166a4:	ebfffa1e 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
400166a8:	e1d401b0 	ldrh	r0, [r4, #16]
400166ac:	e28d1004 	add	r1, sp, #4
400166b0:	ebfff918 	bl	40014b18 <CyU3PDmaSocketGetConfig>
400166b4:	e58d5008 	str	r5, [sp, #8]
400166b8:	e3a00000 	mov	r0, #0
400166bc:	e58d000c 	str	r0, [sp, #12]
400166c0:	e59d0010 	ldr	r0, [sp, #16]
400166c4:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400166c8:	e58d0010 	str	r0, [sp, #16]
400166cc:	e59d0010 	ldr	r0, [sp, #16]
400166d0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400166d4:	e58d0010 	str	r0, [sp, #16]
400166d8:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400166dc:	e3500001 	cmp	r0, #1
400166e0:	1a000003 	bne	400166f4 <CyU3PDmaChannelSetXfer_TypeManual+0x84>
400166e4:	e59d0010 	ldr	r0, [sp, #16]
400166e8:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400166ec:	e58d0010 	str	r0, [sp, #16]
400166f0:	ea000002 	b	40016700 <CyU3PDmaChannelSetXfer_TypeManual+0x90>
400166f4:	e59d0010 	ldr	r0, [sp, #16]
400166f8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400166fc:	e58d0010 	str	r0, [sp, #16]
40016700:	e1d400ba 	ldrh	r0, [r4, #10]
40016704:	e3500000 	cmp	r0, #0
40016708:	0a000006 	beq	40016728 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
4001670c:	e1d400b8 	ldrh	r0, [r4, #8]
40016710:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016714:	e1d410ba 	ldrh	r1, [r4, #10]
40016718:	e1800281 	orr	r0, r0, r1, lsl #5
4001671c:	e59d1010 	ldr	r1, [sp, #16]
40016720:	e1800001 	orr	r0, r0, r1
40016724:	e58d0010 	str	r0, [sp, #16]
40016728:	e3e00000 	mvn	r0, #0
4001672c:	e58d0014 	str	r0, [sp, #20]
40016730:	e3550000 	cmp	r5, #0
40016734:	0a000002 	beq	40016744 <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
40016738:	e1d400b4 	ldrh	r0, [r4, #4]
4001673c:	e3500002 	cmp	r0, #2
40016740:	1a000008 	bne	40016768 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
40016744:	e3a00000 	mov	r0, #0
40016748:	e58d0008 	str	r0, [sp, #8]
4001674c:	e59d0010 	ldr	r0, [sp, #16]
40016750:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016754:	e58d0010 	str	r0, [sp, #16]
40016758:	e59d0018 	ldr	r0, [sp, #24]
4001675c:	e3c00080 	bic	r0, r0, #128	; 0x80
40016760:	e58d0018 	str	r0, [sp, #24]
40016764:	ea000005 	b	40016780 <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016768:	e59d0010 	ldr	r0, [sp, #16]
4001676c:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016770:	e58d0010 	str	r0, [sp, #16]
40016774:	e59d0018 	ldr	r0, [sp, #24]
40016778:	e3800080 	orr	r0, r0, #128	; 0x80
4001677c:	e58d0018 	str	r0, [sp, #24]
40016780:	e1d401b0 	ldrh	r0, [r4, #16]
40016784:	e28d1004 	add	r1, sp, #4
40016788:	ebfff98c 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
4001678c:	e1d400b4 	ldrh	r0, [r4, #4]
40016790:	e3500003 	cmp	r0, #3
40016794:	0a00002e 	beq	40016854 <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016798:	e1d401b2 	ldrh	r0, [r4, #18]
4001679c:	ebfff8c5 	bl	40014ab8 <CyU3PDmaSocketDisable>
400167a0:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
400167a4:	e1d401b2 	ldrh	r0, [r4, #18]
400167a8:	ebfff9dd 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
400167ac:	e1d401b2 	ldrh	r0, [r4, #18]
400167b0:	e28d1004 	add	r1, sp, #4
400167b4:	ebfff8d7 	bl	40014b18 <CyU3PDmaSocketGetConfig>
400167b8:	e58d5008 	str	r5, [sp, #8]
400167bc:	e3a00000 	mov	r0, #0
400167c0:	e58d000c 	str	r0, [sp, #12]
400167c4:	e59d0010 	ldr	r0, [sp, #16]
400167c8:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
400167cc:	e58d0010 	str	r0, [sp, #16]
400167d0:	e59d0010 	ldr	r0, [sp, #16]
400167d4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400167d8:	e58d0010 	str	r0, [sp, #16]
400167dc:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
400167e0:	e3500001 	cmp	r0, #1
400167e4:	1a000003 	bne	400167f8 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
400167e8:	e59d0010 	ldr	r0, [sp, #16]
400167ec:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400167f0:	e58d0010 	str	r0, [sp, #16]
400167f4:	ea000002 	b	40016804 <CyU3PDmaChannelSetXfer_TypeManual+0x194>
400167f8:	e59d0010 	ldr	r0, [sp, #16]
400167fc:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016800:	e58d0010 	str	r0, [sp, #16]
40016804:	e3e00000 	mvn	r0, #0
40016808:	e58d0014 	str	r0, [sp, #20]
4001680c:	e3550000 	cmp	r5, #0
40016810:	1a000006 	bne	40016830 <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
40016814:	e59d0010 	ldr	r0, [sp, #16]
40016818:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001681c:	e58d0010 	str	r0, [sp, #16]
40016820:	e59d0018 	ldr	r0, [sp, #24]
40016824:	e3c00080 	bic	r0, r0, #128	; 0x80
40016828:	e58d0018 	str	r0, [sp, #24]
4001682c:	ea000005 	b	40016848 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
40016830:	e59d0010 	ldr	r0, [sp, #16]
40016834:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016838:	e58d0010 	str	r0, [sp, #16]
4001683c:	e59d0018 	ldr	r0, [sp, #24]
40016840:	e3800080 	orr	r0, r0, #128	; 0x80
40016844:	e58d0018 	str	r0, [sp, #24]
40016848:	e1d401b2 	ldrh	r0, [r4, #18]
4001684c:	e28d1004 	add	r1, sp, #4
40016850:	ebfff95a 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40016854:	e28dd01c 	add	sp, sp, #28
40016858:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

4001685c <CyU3PDmaChannelSetupRecvBuffer>:
4001685c:	e92d4070 	push	{r4, r5, r6, lr}
40016860:	e24dd028 	sub	sp, sp, #40	; 0x28
40016864:	e1a04000 	mov	r4, r0
40016868:	e1a05001 	mov	r5, r1
4001686c:	e3550000 	cmp	r5, #0
40016870:	1a000002 	bne	40016880 <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016874:	e3a00041 	mov	r0, #65	; 0x41
40016878:	e28dd028 	add	sp, sp, #40	; 0x28
4001687c:	e8bd8070 	pop	{r4, r5, r6, pc}
40016880:	e5950000 	ldr	r0, [r5]
40016884:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016888:	3a000005 	bcc	400168a4 <CyU3PDmaChannelSetupRecvBuffer+0x48>
4001688c:	e5950000 	ldr	r0, [r5]
40016890:	e1d510b6 	ldrh	r1, [r5, #6]
40016894:	e0800001 	add	r0, r0, r1
40016898:	e59f11d4 	ldr	r1, [pc, #468]	; 40016a74 <CyU3PDmaChannelSetupRecvBuffer+0x218>
4001689c:	e1500001 	cmp	r0, r1
400168a0:	3a000001 	bcc	400168ac <CyU3PDmaChannelSetupRecvBuffer+0x50>
400168a4:	e3a00040 	mov	r0, #64	; 0x40
400168a8:	eafffff2 	b	40016878 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168ac:	e1d500b6 	ldrh	r0, [r5, #6]
400168b0:	e59f11c0 	ldr	r1, [pc, #448]	; 40016a78 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
400168b4:	e1500001 	cmp	r0, r1
400168b8:	da000001 	ble	400168c4 <CyU3PDmaChannelSetupRecvBuffer+0x68>
400168bc:	e3a00040 	mov	r0, #64	; 0x40
400168c0:	eaffffec 	b	40016878 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168c4:	e1d500b6 	ldrh	r0, [r5, #6]
400168c8:	e3500000 	cmp	r0, #0
400168cc:	0a000002 	beq	400168dc <CyU3PDmaChannelSetupRecvBuffer+0x80>
400168d0:	e1d500b6 	ldrh	r0, [r5, #6]
400168d4:	e310000f 	tst	r0, #15
400168d8:	0a000001 	beq	400168e4 <CyU3PDmaChannelSetupRecvBuffer+0x88>
400168dc:	e3a00040 	mov	r0, #64	; 0x40
400168e0:	eaffffe4 	b	40016878 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
400168e4:	e3e01000 	mvn	r1, #0
400168e8:	e1a00004 	mov	r0, r4
400168ec:	ebfff9e5 	bl	40015088 <CyU3PDmaChannelAcquireLock>
400168f0:	e1a06000 	mov	r6, r0
400168f4:	e3560000 	cmp	r6, #0
400168f8:	0a000001 	beq	40016904 <CyU3PDmaChannelSetupRecvBuffer+0xa8>
400168fc:	e1a00006 	mov	r0, r6
40016900:	eaffffdc 	b	40016878 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016904:	e1d400b4 	ldrh	r0, [r4, #4]
40016908:	e3500004 	cmp	r0, #4
4001690c:	1a000000 	bne	40016914 <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016910:	e3a06046 	mov	r6, #70	; 0x46
40016914:	e5940000 	ldr	r0, [r4]
40016918:	e3500001 	cmp	r0, #1
4001691c:	0a000000 	beq	40016924 <CyU3PDmaChannelSetupRecvBuffer+0xc8>
40016920:	e3a06043 	mov	r6, #67	; 0x43
40016924:	e3560000 	cmp	r6, #0
40016928:	0a000003 	beq	4001693c <CyU3PDmaChannelSetupRecvBuffer+0xe0>
4001692c:	e284003c 	add	r0, r4, #60	; 0x3c
40016930:	ebffcde8 	bl	4000a0d8 <_txe_mutex_put>
40016934:	e1a00006 	mov	r0, r6
40016938:	eaffffce 	b	40016878 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
4001693c:	e1d401b0 	ldrh	r0, [r4, #16]
40016940:	ebfff85c 	bl	40014ab8 <CyU3PDmaSocketDisable>
40016944:	e1d401b0 	ldrh	r0, [r4, #16]
40016948:	e3a01000 	mov	r1, #0
4001694c:	ebfff974 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
40016950:	e3a02002 	mov	r2, #2
40016954:	e3e01027 	mvn	r1, #39	; 0x27
40016958:	e2840074 	add	r0, r4, #116	; 0x74
4001695c:	ebffcd10 	bl	40009da4 <_txe_event_flags_set>
40016960:	e3a00004 	mov	r0, #4
40016964:	e5840000 	str	r0, [r4]
40016968:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001696c:	e3500000 	cmp	r0, #0
40016970:	0a000002 	beq	40016980 <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016974:	e1d510b6 	ldrh	r1, [r5, #6]
40016978:	e5950000 	ldr	r0, [r5]
4001697c:	ebffed96 	bl	40011fdc <CyU3PSysFlushDRegion>
40016980:	e1d401b0 	ldrh	r0, [r4, #16]
40016984:	e1a0100d 	mov	r1, sp
40016988:	ebfff862 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001698c:	e59d0000 	ldr	r0, [sp]
40016990:	e1c401b6 	strh	r0, [r4, #22]
40016994:	e1d401b4 	ldrh	r0, [r4, #20]
40016998:	e28d1018 	add	r1, sp, #24
4001699c:	eb002ebb 	bl	40022490 <CyU3PDmaDscrGetConfig>
400169a0:	e5950000 	ldr	r0, [r5]
400169a4:	e58d0018 	str	r0, [sp, #24]
400169a8:	e1d401b0 	ldrh	r0, [r4, #16]
400169ac:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
400169b0:	e1810800 	orr	r0, r1, r0, lsl #16
400169b4:	e58d001c 	str	r0, [sp, #28]
400169b8:	e59d001c 	ldr	r0, [sp, #28]
400169bc:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
400169c0:	e58d001c 	str	r0, [sp, #28]
400169c4:	e1d401b6 	ldrh	r0, [r4, #22]
400169c8:	e1e01741 	mvn	r1, r1, asr #14
400169cc:	e1810800 	orr	r0, r1, r0, lsl #16
400169d0:	e58d0020 	str	r0, [sp, #32]
400169d4:	e1d500b6 	ldrh	r0, [r5, #6]
400169d8:	e241100f 	sub	r1, r1, #15
400169dc:	e0000001 	and	r0, r0, r1
400169e0:	e58d0024 	str	r0, [sp, #36]	; 0x24
400169e4:	e1d401b4 	ldrh	r0, [r4, #20]
400169e8:	e28d1018 	add	r1, sp, #24
400169ec:	eb002ec2 	bl	400224fc <CyU3PDmaDscrSetConfig>
400169f0:	e59d000c 	ldr	r0, [sp, #12]
400169f4:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
400169f8:	e58d000c 	str	r0, [sp, #12]
400169fc:	e59d000c 	ldr	r0, [sp, #12]
40016a00:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016a04:	e58d000c 	str	r0, [sp, #12]
40016a08:	e59d000c 	ldr	r0, [sp, #12]
40016a0c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016a10:	e58d000c 	str	r0, [sp, #12]
40016a14:	e59d000c 	ldr	r0, [sp, #12]
40016a18:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016a1c:	e58d000c 	str	r0, [sp, #12]
40016a20:	e3a00001 	mov	r0, #1
40016a24:	e58d0004 	str	r0, [sp, #4]
40016a28:	e3a00000 	mov	r0, #0
40016a2c:	e58d0008 	str	r0, [sp, #8]
40016a30:	e3e00000 	mvn	r0, #0
40016a34:	e58d0010 	str	r0, [sp, #16]
40016a38:	e59d0014 	ldr	r0, [sp, #20]
40016a3c:	e3800001 	orr	r0, r0, #1
40016a40:	e58d0014 	str	r0, [sp, #20]
40016a44:	e59d0014 	ldr	r0, [sp, #20]
40016a48:	e3c00080 	bic	r0, r0, #128	; 0x80
40016a4c:	e58d0014 	str	r0, [sp, #20]
40016a50:	e1d401b4 	ldrh	r0, [r4, #20]
40016a54:	e58d0000 	str	r0, [sp]
40016a58:	e1d401b0 	ldrh	r0, [r4, #16]
40016a5c:	e1a0100d 	mov	r1, sp
40016a60:	ebfff8d6 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40016a64:	e284003c 	add	r0, r4, #60	; 0x3c
40016a68:	ebffcd9a 	bl	4000a0d8 <_txe_mutex_put>
40016a6c:	e3a00000 	mov	r0, #0
40016a70:	eaffff80 	b	40016878 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016a74:	40080000 	.word	0x40080000
40016a78:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016a7c <CyU3PDmaChannelSetupSendBuffer>:
40016a7c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016a80:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016a84:	e1a04000 	mov	r4, r0
40016a88:	e1a05001 	mov	r5, r1
40016a8c:	e3550000 	cmp	r5, #0
40016a90:	1a000002 	bne	40016aa0 <CyU3PDmaChannelSetupSendBuffer+0x24>
40016a94:	e3a00041 	mov	r0, #65	; 0x41
40016a98:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016a9c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016aa0:	e5950000 	ldr	r0, [r5]
40016aa4:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016aa8:	3a000005 	bcc	40016ac4 <CyU3PDmaChannelSetupSendBuffer+0x48>
40016aac:	e5950000 	ldr	r0, [r5]
40016ab0:	e1d510b4 	ldrh	r1, [r5, #4]
40016ab4:	e0800001 	add	r0, r0, r1
40016ab8:	e59f11ec 	ldr	r1, [pc, #492]	; 40016cac <CyU3PDmaChannelSetupSendBuffer+0x230>
40016abc:	e1500001 	cmp	r0, r1
40016ac0:	3a000001 	bcc	40016acc <CyU3PDmaChannelSetupSendBuffer+0x50>
40016ac4:	e3a00040 	mov	r0, #64	; 0x40
40016ac8:	eafffff2 	b	40016a98 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016acc:	e1d500b4 	ldrh	r0, [r5, #4]
40016ad0:	e59f11d8 	ldr	r1, [pc, #472]	; 40016cb0 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016ad4:	e1500001 	cmp	r0, r1
40016ad8:	da000001 	ble	40016ae4 <CyU3PDmaChannelSetupSendBuffer+0x68>
40016adc:	e3a00040 	mov	r0, #64	; 0x40
40016ae0:	eaffffec 	b	40016a98 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016ae4:	e3e01000 	mvn	r1, #0
40016ae8:	e1a00004 	mov	r0, r4
40016aec:	ebfff965 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40016af0:	e1a07000 	mov	r7, r0
40016af4:	e3570000 	cmp	r7, #0
40016af8:	0a000001 	beq	40016b04 <CyU3PDmaChannelSetupSendBuffer+0x88>
40016afc:	e1a00007 	mov	r0, r7
40016b00:	eaffffe4 	b	40016a98 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016b04:	e1d400b4 	ldrh	r0, [r4, #4]
40016b08:	e3500003 	cmp	r0, #3
40016b0c:	1a000000 	bne	40016b14 <CyU3PDmaChannelSetupSendBuffer+0x98>
40016b10:	e3a07046 	mov	r7, #70	; 0x46
40016b14:	e5940000 	ldr	r0, [r4]
40016b18:	e3500001 	cmp	r0, #1
40016b1c:	0a000000 	beq	40016b24 <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016b20:	e3a07043 	mov	r7, #67	; 0x43
40016b24:	e3570000 	cmp	r7, #0
40016b28:	0a000003 	beq	40016b3c <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016b2c:	e284003c 	add	r0, r4, #60	; 0x3c
40016b30:	ebffcd68 	bl	4000a0d8 <_txe_mutex_put>
40016b34:	e1a00007 	mov	r0, r7
40016b38:	eaffffd6 	b	40016a98 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016b3c:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016b40:	e3500000 	cmp	r0, #0
40016b44:	0a000005 	beq	40016b60 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016b48:	e1d500b4 	ldrh	r0, [r5, #4]
40016b4c:	e3500000 	cmp	r0, #0
40016b50:	0a000002 	beq	40016b60 <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016b54:	e1d510b4 	ldrh	r1, [r5, #4]
40016b58:	e5950000 	ldr	r0, [r5]
40016b5c:	ebffed10 	bl	40011fa4 <CyU3PSysCleanDRegion>
40016b60:	e1d401b2 	ldrh	r0, [r4, #18]
40016b64:	ebfff7d3 	bl	40014ab8 <CyU3PDmaSocketDisable>
40016b68:	e1d401b2 	ldrh	r0, [r4, #18]
40016b6c:	e3a01000 	mov	r1, #0
40016b70:	ebfff8eb 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
40016b74:	e3a02002 	mov	r2, #2
40016b78:	e3e01027 	mvn	r1, #39	; 0x27
40016b7c:	e2840074 	add	r0, r4, #116	; 0x74
40016b80:	ebffcc87 	bl	40009da4 <_txe_event_flags_set>
40016b84:	e3a00003 	mov	r0, #3
40016b88:	e5840000 	str	r0, [r4]
40016b8c:	e1d401b2 	ldrh	r0, [r4, #18]
40016b90:	e28d1004 	add	r1, sp, #4
40016b94:	ebfff7df 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40016b98:	e59d0004 	ldr	r0, [sp, #4]
40016b9c:	e1c401b8 	strh	r0, [r4, #24]
40016ba0:	e1d401b4 	ldrh	r0, [r4, #20]
40016ba4:	e28d101c 	add	r1, sp, #28
40016ba8:	eb002e38 	bl	40022490 <CyU3PDmaDscrGetConfig>
40016bac:	e5950000 	ldr	r0, [r5]
40016bb0:	e58d001c 	str	r0, [sp, #28]
40016bb4:	e1d401b2 	ldrh	r0, [r4, #18]
40016bb8:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016bbc:	e58d0020 	str	r0, [sp, #32]
40016bc0:	e59d0020 	ldr	r0, [sp, #32]
40016bc4:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016bc8:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016bcc:	e58d0020 	str	r0, [sp, #32]
40016bd0:	e1d401b8 	ldrh	r0, [r4, #24]
40016bd4:	e2400801 	sub	r0, r0, #65536	; 0x10000
40016bd8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016bdc:	e1d500b4 	ldrh	r0, [r5, #4]
40016be0:	e280000f 	add	r0, r0, #15
40016be4:	e59f10c4 	ldr	r1, [pc, #196]	; 40016cb0 <CyU3PDmaChannelSetupSendBuffer+0x234>
40016be8:	e0006001 	and	r6, r0, r1
40016bec:	e1d500b4 	ldrh	r0, [r5, #4]
40016bf0:	e1860800 	orr	r0, r6, r0, lsl #16
40016bf4:	e3800008 	orr	r0, r0, #8
40016bf8:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016bfc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016c00:	e1d510b8 	ldrh	r1, [r5, #8]
40016c04:	e201100e 	and	r1, r1, #14
40016c08:	e1800001 	orr	r0, r0, r1
40016c0c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40016c10:	e1d401b4 	ldrh	r0, [r4, #20]
40016c14:	e28d101c 	add	r1, sp, #28
40016c18:	eb002e37 	bl	400224fc <CyU3PDmaDscrSetConfig>
40016c1c:	e59d0010 	ldr	r0, [sp, #16]
40016c20:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016c24:	e58d0010 	str	r0, [sp, #16]
40016c28:	e59d0010 	ldr	r0, [sp, #16]
40016c2c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016c30:	e58d0010 	str	r0, [sp, #16]
40016c34:	e59d0010 	ldr	r0, [sp, #16]
40016c38:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016c3c:	e58d0010 	str	r0, [sp, #16]
40016c40:	e59d0010 	ldr	r0, [sp, #16]
40016c44:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40016c48:	e58d0010 	str	r0, [sp, #16]
40016c4c:	e59d0010 	ldr	r0, [sp, #16]
40016c50:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016c54:	e58d0010 	str	r0, [sp, #16]
40016c58:	e1d500b4 	ldrh	r0, [r5, #4]
40016c5c:	e58d0008 	str	r0, [sp, #8]
40016c60:	e3a00000 	mov	r0, #0
40016c64:	e58d000c 	str	r0, [sp, #12]
40016c68:	e3e00000 	mvn	r0, #0
40016c6c:	e58d0014 	str	r0, [sp, #20]
40016c70:	e59d0018 	ldr	r0, [sp, #24]
40016c74:	e3800002 	orr	r0, r0, #2
40016c78:	e58d0018 	str	r0, [sp, #24]
40016c7c:	e59d0018 	ldr	r0, [sp, #24]
40016c80:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c84:	e58d0018 	str	r0, [sp, #24]
40016c88:	e1d401b4 	ldrh	r0, [r4, #20]
40016c8c:	e58d0004 	str	r0, [sp, #4]
40016c90:	e1d401b2 	ldrh	r0, [r4, #18]
40016c94:	e28d1004 	add	r1, sp, #4
40016c98:	ebfff848 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40016c9c:	e284003c 	add	r0, r4, #60	; 0x3c
40016ca0:	ebffcd0c 	bl	4000a0d8 <_txe_mutex_put>
40016ca4:	e3a00000 	mov	r0, #0
40016ca8:	eaffff7a 	b	40016a98 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016cac:	40080000 	.word	0x40080000
40016cb0:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

40016cb4 <CyU3PDmaChannelWaitForCompletion>:
40016cb4:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40016cb8:	e1a04000 	mov	r4, r0
40016cbc:	e1a05001 	mov	r5, r1
40016cc0:	e3a08000 	mov	r8, #0
40016cc4:	e1a01005 	mov	r1, r5
40016cc8:	e1a00004 	mov	r0, r4
40016ccc:	ebfff8ed 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40016cd0:	e1a07000 	mov	r7, r0
40016cd4:	e3570000 	cmp	r7, #0
40016cd8:	0a000001 	beq	40016ce4 <CyU3PDmaChannelWaitForCompletion+0x30>
40016cdc:	e1a00007 	mov	r0, r7
40016ce0:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40016ce4:	e5946000 	ldr	r6, [r4]
40016ce8:	e3560001 	cmp	r6, #1
40016cec:	1a00000b 	bne	40016d20 <CyU3PDmaChannelWaitForCompletion+0x6c>
40016cf0:	e3a03000 	mov	r3, #0
40016cf4:	e58d3000 	str	r3, [sp]
40016cf8:	e28d3004 	add	r3, sp, #4
40016cfc:	e3a02000 	mov	r2, #0
40016d00:	e3a01007 	mov	r1, #7
40016d04:	e2840074 	add	r0, r4, #116	; 0x74
40016d08:	ebffcbf5 	bl	40009ce4 <_txe_event_flags_get>
40016d0c:	e1a07000 	mov	r7, r0
40016d10:	e3570000 	cmp	r7, #0
40016d14:	0a000016 	beq	40016d74 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d18:	e3a07042 	mov	r7, #66	; 0x42
40016d1c:	ea000014 	b	40016d74 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d20:	e3560002 	cmp	r6, #2
40016d24:	1a000005 	bne	40016d40 <CyU3PDmaChannelWaitForCompletion+0x8c>
40016d28:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40016d2c:	e3500000 	cmp	r0, #0
40016d30:	1a000000 	bne	40016d38 <CyU3PDmaChannelWaitForCompletion+0x84>
40016d34:	e3a07046 	mov	r7, #70	; 0x46
40016d38:	e3a08061 	mov	r8, #97	; 0x61
40016d3c:	ea00000c 	b	40016d74 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d40:	e3560003 	cmp	r6, #3
40016d44:	1a000001 	bne	40016d50 <CyU3PDmaChannelWaitForCompletion+0x9c>
40016d48:	e3a08062 	mov	r8, #98	; 0x62
40016d4c:	ea000008 	b	40016d74 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d50:	e3560004 	cmp	r6, #4
40016d54:	1a000001 	bne	40016d60 <CyU3PDmaChannelWaitForCompletion+0xac>
40016d58:	e3a08064 	mov	r8, #100	; 0x64
40016d5c:	ea000004 	b	40016d74 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d60:	e3560005 	cmp	r6, #5
40016d64:	1a000001 	bne	40016d70 <CyU3PDmaChannelWaitForCompletion+0xbc>
40016d68:	e3a07049 	mov	r7, #73	; 0x49
40016d6c:	ea000000 	b	40016d74 <CyU3PDmaChannelWaitForCompletion+0xc0>
40016d70:	e3a07042 	mov	r7, #66	; 0x42
40016d74:	e284003c 	add	r0, r4, #60	; 0x3c
40016d78:	ebffccd6 	bl	4000a0d8 <_txe_mutex_put>
40016d7c:	e3570000 	cmp	r7, #0
40016d80:	1a000015 	bne	40016ddc <CyU3PDmaChannelWaitForCompletion+0x128>
40016d84:	e3580000 	cmp	r8, #0
40016d88:	0a000013 	beq	40016ddc <CyU3PDmaChannelWaitForCompletion+0x128>
40016d8c:	e58d5000 	str	r5, [sp]
40016d90:	e28d3004 	add	r3, sp, #4
40016d94:	e3a02000 	mov	r2, #0
40016d98:	e1a01008 	mov	r1, r8
40016d9c:	e2840074 	add	r0, r4, #116	; 0x74
40016da0:	ebffcbcf 	bl	40009ce4 <_txe_event_flags_get>
40016da4:	e1a07000 	mov	r7, r0
40016da8:	e3570000 	cmp	r7, #0
40016dac:	0a000001 	beq	40016db8 <CyU3PDmaChannelWaitForCompletion+0x104>
40016db0:	e3a07045 	mov	r7, #69	; 0x45
40016db4:	ea000008 	b	40016ddc <CyU3PDmaChannelWaitForCompletion+0x128>
40016db8:	e59d0004 	ldr	r0, [sp, #4]
40016dbc:	e3100040 	tst	r0, #64	; 0x40
40016dc0:	0a000001 	beq	40016dcc <CyU3PDmaChannelWaitForCompletion+0x118>
40016dc4:	e3a07049 	mov	r7, #73	; 0x49
40016dc8:	ea000003 	b	40016ddc <CyU3PDmaChannelWaitForCompletion+0x128>
40016dcc:	e59d0004 	ldr	r0, [sp, #4]
40016dd0:	e3100020 	tst	r0, #32
40016dd4:	0a000000 	beq	40016ddc <CyU3PDmaChannelWaitForCompletion+0x128>
40016dd8:	e3a07048 	mov	r7, #72	; 0x48
40016ddc:	e1a00007 	mov	r0, r7
40016de0:	eaffffbe 	b	40016ce0 <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40016de4 <CyU3PDmaChannelWaitForRecvBuffer>:
40016de4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40016de8:	e24dd018 	sub	sp, sp, #24
40016dec:	e1a04000 	mov	r4, r0
40016df0:	e1a05001 	mov	r5, r1
40016df4:	e1a06002 	mov	r6, r2
40016df8:	e3550000 	cmp	r5, #0
40016dfc:	1a000002 	bne	40016e0c <CyU3PDmaChannelWaitForRecvBuffer+0x28>
40016e00:	e3a00041 	mov	r0, #65	; 0x41
40016e04:	e28dd018 	add	sp, sp, #24
40016e08:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016e0c:	e1a01006 	mov	r1, r6
40016e10:	e1a00004 	mov	r0, r4
40016e14:	ebfff89b 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40016e18:	e1a07000 	mov	r7, r0
40016e1c:	e3570000 	cmp	r7, #0
40016e20:	0a000001 	beq	40016e2c <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40016e24:	e1a00007 	mov	r0, r7
40016e28:	eafffff5 	b	40016e04 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e2c:	e1d400b4 	ldrh	r0, [r4, #4]
40016e30:	e3500004 	cmp	r0, #4
40016e34:	1a000000 	bne	40016e3c <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40016e38:	e3a07046 	mov	r7, #70	; 0x46
40016e3c:	e5948000 	ldr	r8, [r4]
40016e40:	e3570000 	cmp	r7, #0
40016e44:	1a000034 	bne	40016f1c <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016e48:	e3580004 	cmp	r8, #4
40016e4c:	1a00001e 	bne	40016ecc <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
40016e50:	e284003c 	add	r0, r4, #60	; 0x3c
40016e54:	ebffcc9f 	bl	4000a0d8 <_txe_mutex_put>
40016e58:	e58d6000 	str	r6, [sp]
40016e5c:	e28d3014 	add	r3, sp, #20
40016e60:	e3a02000 	mov	r2, #0
40016e64:	e3a01064 	mov	r1, #100	; 0x64
40016e68:	e2840074 	add	r0, r4, #116	; 0x74
40016e6c:	ebffcb9c 	bl	40009ce4 <_txe_event_flags_get>
40016e70:	e1a07000 	mov	r7, r0
40016e74:	e3570000 	cmp	r7, #0
40016e78:	0a000001 	beq	40016e84 <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
40016e7c:	e3a00045 	mov	r0, #69	; 0x45
40016e80:	eaffffdf 	b	40016e04 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e84:	e59d0014 	ldr	r0, [sp, #20]
40016e88:	e3100040 	tst	r0, #64	; 0x40
40016e8c:	0a000001 	beq	40016e98 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
40016e90:	e3a00049 	mov	r0, #73	; 0x49
40016e94:	eaffffda 	b	40016e04 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016e98:	e59d0014 	ldr	r0, [sp, #20]
40016e9c:	e3100020 	tst	r0, #32
40016ea0:	0a000001 	beq	40016eac <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
40016ea4:	e3a00048 	mov	r0, #72	; 0x48
40016ea8:	eaffffd5 	b	40016e04 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016eac:	e1a01006 	mov	r1, r6
40016eb0:	e1a00004 	mov	r0, r4
40016eb4:	ebfff873 	bl	40015088 <CyU3PDmaChannelAcquireLock>
40016eb8:	e1a07000 	mov	r7, r0
40016ebc:	e3570000 	cmp	r7, #0
40016ec0:	0a000015 	beq	40016f1c <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016ec4:	e1a00007 	mov	r0, r7
40016ec8:	eaffffcd 	b	40016e04 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016ecc:	e3580001 	cmp	r8, #1
40016ed0:	1a000010 	bne	40016f18 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40016ed4:	e3a03000 	mov	r3, #0
40016ed8:	e58d3000 	str	r3, [sp]
40016edc:	e28d3014 	add	r3, sp, #20
40016ee0:	e3a02000 	mov	r2, #0
40016ee4:	e3a01024 	mov	r1, #36	; 0x24
40016ee8:	e2840074 	add	r0, r4, #116	; 0x74
40016eec:	ebffcb7c 	bl	40009ce4 <_txe_event_flags_get>
40016ef0:	e1a07000 	mov	r7, r0
40016ef4:	e3570000 	cmp	r7, #0
40016ef8:	0a000001 	beq	40016f04 <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40016efc:	e3a07047 	mov	r7, #71	; 0x47
40016f00:	ea000005 	b	40016f1c <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016f04:	e59d0014 	ldr	r0, [sp, #20]
40016f08:	e3100020 	tst	r0, #32
40016f0c:	0a000002 	beq	40016f1c <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016f10:	e3a07042 	mov	r7, #66	; 0x42
40016f14:	ea000000 	b	40016f1c <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40016f18:	e3a07047 	mov	r7, #71	; 0x47
40016f1c:	e3570000 	cmp	r7, #0
40016f20:	0a000003 	beq	40016f34 <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40016f24:	e284003c 	add	r0, r4, #60	; 0x3c
40016f28:	ebffcc6a 	bl	4000a0d8 <_txe_mutex_put>
40016f2c:	e1a00007 	mov	r0, r7
40016f30:	eaffffb3 	b	40016e04 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f34:	e1d401b4 	ldrh	r0, [r4, #20]
40016f38:	e28d1004 	add	r1, sp, #4
40016f3c:	eb002d53 	bl	40022490 <CyU3PDmaDscrGetConfig>
40016f40:	e59d0004 	ldr	r0, [sp, #4]
40016f44:	e5850000 	str	r0, [r5]
40016f48:	e59d0010 	ldr	r0, [sp, #16]
40016f4c:	e59f1030 	ldr	r1, [pc, #48]	; 40016f84 <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
40016f50:	e0010820 	and	r0, r1, r0, lsr #16
40016f54:	e1c500b4 	strh	r0, [r5, #4]
40016f58:	e241100f 	sub	r1, r1, #15
40016f5c:	e59d0010 	ldr	r0, [sp, #16]
40016f60:	e0000001 	and	r0, r0, r1
40016f64:	e1c500b6 	strh	r0, [r5, #6]
40016f68:	e59d0010 	ldr	r0, [sp, #16]
40016f6c:	e200000f 	and	r0, r0, #15
40016f70:	e1c500b8 	strh	r0, [r5, #8]
40016f74:	e284003c 	add	r0, r4, #60	; 0x3c
40016f78:	ebffcc56 	bl	4000a0d8 <_txe_mutex_put>
40016f7c:	e3a00000 	mov	r0, #0
40016f80:	eaffff9f 	b	40016e04 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40016f84:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

40016f88 <CyU3PDmaConfigureSockets_TypeAuto>:
40016f88:	e92d4010 	push	{r4, lr}
40016f8c:	e24dd018 	sub	sp, sp, #24
40016f90:	e1a04000 	mov	r4, r0
40016f94:	e1d401b0 	ldrh	r0, [r4, #16]
40016f98:	ebfff6c6 	bl	40014ab8 <CyU3PDmaSocketDisable>
40016f9c:	e1d401b2 	ldrh	r0, [r4, #18]
40016fa0:	ebfff6c4 	bl	40014ab8 <CyU3PDmaSocketDisable>
40016fa4:	e1d401b0 	ldrh	r0, [r4, #16]
40016fa8:	e1a0100d 	mov	r1, sp
40016fac:	ebfff6d9 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40016fb0:	e1d400bc 	ldrh	r0, [r4, #12]
40016fb4:	e58d0000 	str	r0, [sp]
40016fb8:	e3a00000 	mov	r0, #0
40016fbc:	e58d0004 	str	r0, [sp, #4]
40016fc0:	e58d0008 	str	r0, [sp, #8]
40016fc4:	e3a00646 	mov	r0, #73400320	; 0x4600000
40016fc8:	e58d000c 	str	r0, [sp, #12]
40016fcc:	e1d401b0 	ldrh	r0, [r4, #16]
40016fd0:	eb000df6 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
40016fd4:	e3500000 	cmp	r0, #0
40016fd8:	0a000002 	beq	40016fe8 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40016fdc:	e59d000c 	ldr	r0, [sp, #12]
40016fe0:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016fe4:	e58d000c 	str	r0, [sp, #12]
40016fe8:	e3e00000 	mvn	r0, #0
40016fec:	e58d0010 	str	r0, [sp, #16]
40016ff0:	e1d400b4 	ldrh	r0, [r4, #4]
40016ff4:	e3500001 	cmp	r0, #1
40016ff8:	1a000001 	bne	40017004 <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40016ffc:	e3a00041 	mov	r0, #65	; 0x41
40017000:	ea000000 	b	40017008 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
40017004:	e3a00040 	mov	r0, #64	; 0x40
40017008:	e58d0014 	str	r0, [sp, #20]
4001700c:	e1d401b0 	ldrh	r0, [r4, #16]
40017010:	e1a0100d 	mov	r1, sp
40017014:	ebfff769 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40017018:	e1d401b2 	ldrh	r0, [r4, #18]
4001701c:	e1a0100d 	mov	r1, sp
40017020:	ebfff6bc 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40017024:	e1d400bc 	ldrh	r0, [r4, #12]
40017028:	e58d0000 	str	r0, [sp]
4001702c:	e3a00000 	mov	r0, #0
40017030:	e58d0004 	str	r0, [sp, #4]
40017034:	e58d0008 	str	r0, [sp, #8]
40017038:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
4001703c:	e58d000c 	str	r0, [sp, #12]
40017040:	e1d401b2 	ldrh	r0, [r4, #18]
40017044:	eb000dd9 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
40017048:	e3500000 	cmp	r0, #0
4001704c:	0a000002 	beq	4001705c <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
40017050:	e59d000c 	ldr	r0, [sp, #12]
40017054:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017058:	e58d000c 	str	r0, [sp, #12]
4001705c:	e3e00000 	mvn	r0, #0
40017060:	e58d0010 	str	r0, [sp, #16]
40017064:	e3a000c0 	mov	r0, #192	; 0xc0
40017068:	e58d0014 	str	r0, [sp, #20]
4001706c:	e1d401b2 	ldrh	r0, [r4, #18]
40017070:	e1a0100d 	mov	r1, sp
40017074:	ebfff751 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40017078:	e3a00000 	mov	r0, #0
4001707c:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
40017080:	e28dd018 	add	sp, sp, #24
40017084:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

40017088 <CyU3PDmaConfigureSockets_TypeManual>:
40017088:	e92d4010 	push	{r4, lr}
4001708c:	e24dd018 	sub	sp, sp, #24
40017090:	e1a04000 	mov	r4, r0
40017094:	e1d400b4 	ldrh	r0, [r4, #4]
40017098:	e3500004 	cmp	r0, #4
4001709c:	0a00001f 	beq	40017120 <CyU3PDmaConfigureSockets_TypeManual+0x98>
400170a0:	e1d401b0 	ldrh	r0, [r4, #16]
400170a4:	ebfff683 	bl	40014ab8 <CyU3PDmaSocketDisable>
400170a8:	e1d401b0 	ldrh	r0, [r4, #16]
400170ac:	e1a0100d 	mov	r1, sp
400170b0:	ebfff698 	bl	40014b18 <CyU3PDmaSocketGetConfig>
400170b4:	e1d400bc 	ldrh	r0, [r4, #12]
400170b8:	e58d0000 	str	r0, [sp]
400170bc:	e3a00000 	mov	r0, #0
400170c0:	e58d0004 	str	r0, [sp, #4]
400170c4:	e58d0008 	str	r0, [sp, #8]
400170c8:	e3a00646 	mov	r0, #73400320	; 0x4600000
400170cc:	e58d000c 	str	r0, [sp, #12]
400170d0:	e1d401b0 	ldrh	r0, [r4, #16]
400170d4:	eb000db5 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
400170d8:	e3500000 	cmp	r0, #0
400170dc:	0a000002 	beq	400170ec <CyU3PDmaConfigureSockets_TypeManual+0x64>
400170e0:	e59d000c 	ldr	r0, [sp, #12]
400170e4:	e3800b01 	orr	r0, r0, #1024	; 0x400
400170e8:	e58d000c 	str	r0, [sp, #12]
400170ec:	e3e00000 	mvn	r0, #0
400170f0:	e58d0010 	str	r0, [sp, #16]
400170f4:	e3a00041 	mov	r0, #65	; 0x41
400170f8:	e58d0014 	str	r0, [sp, #20]
400170fc:	e1d400b4 	ldrh	r0, [r4, #4]
40017100:	e3500003 	cmp	r0, #3
40017104:	1a000002 	bne	40017114 <CyU3PDmaConfigureSockets_TypeManual+0x8c>
40017108:	e59d0014 	ldr	r0, [sp, #20]
4001710c:	e3800080 	orr	r0, r0, #128	; 0x80
40017110:	e58d0014 	str	r0, [sp, #20]
40017114:	e1d401b0 	ldrh	r0, [r4, #16]
40017118:	e1a0100d 	mov	r1, sp
4001711c:	ebfff727 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40017120:	e1d400b4 	ldrh	r0, [r4, #4]
40017124:	e3500003 	cmp	r0, #3
40017128:	0a000019 	beq	40017194 <CyU3PDmaConfigureSockets_TypeManual+0x10c>
4001712c:	e1d401b2 	ldrh	r0, [r4, #18]
40017130:	ebfff660 	bl	40014ab8 <CyU3PDmaSocketDisable>
40017134:	e1d401b2 	ldrh	r0, [r4, #18]
40017138:	e1a0100d 	mov	r1, sp
4001713c:	ebfff675 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40017140:	e1d400be 	ldrh	r0, [r4, #14]
40017144:	e58d0000 	str	r0, [sp]
40017148:	e3a00000 	mov	r0, #0
4001714c:	e58d0004 	str	r0, [sp, #4]
40017150:	e58d0008 	str	r0, [sp, #8]
40017154:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017158:	e58d000c 	str	r0, [sp, #12]
4001715c:	e1d401b2 	ldrh	r0, [r4, #18]
40017160:	eb000d92 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
40017164:	e3500000 	cmp	r0, #0
40017168:	0a000002 	beq	40017178 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
4001716c:	e59d000c 	ldr	r0, [sp, #12]
40017170:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017174:	e58d000c 	str	r0, [sp, #12]
40017178:	e3e00000 	mvn	r0, #0
4001717c:	e58d0010 	str	r0, [sp, #16]
40017180:	e3a000c2 	mov	r0, #194	; 0xc2
40017184:	e58d0014 	str	r0, [sp, #20]
40017188:	e1d401b2 	ldrh	r0, [r4, #18]
4001718c:	e1a0100d 	mov	r1, sp
40017190:	ebfff70a 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40017194:	e3a00000 	mov	r0, #0
40017198:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
4001719c:	e28dd018 	add	sp, sp, #24
400171a0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

400171a4 <CyU3PDmaMultiChannelAcquireLock>:
400171a4:	e92d4070 	push	{r4, r5, r6, lr}
400171a8:	e1a04000 	mov	r4, r0
400171ac:	e1a05001 	mov	r5, r1
400171b0:	e3540000 	cmp	r4, #0
400171b4:	1a000001 	bne	400171c0 <CyU3PDmaMultiChannelAcquireLock+0x1c>
400171b8:	e3a00041 	mov	r0, #65	; 0x41
400171bc:	e8bd8070 	pop	{r4, r5, r6, pc}
400171c0:	e5940000 	ldr	r0, [r4]
400171c4:	e3500000 	cmp	r0, #0
400171c8:	1a000001 	bne	400171d4 <CyU3PDmaMultiChannelAcquireLock+0x30>
400171cc:	e3a00044 	mov	r0, #68	; 0x44
400171d0:	eafffff9 	b	400171bc <CyU3PDmaMultiChannelAcquireLock+0x18>
400171d4:	e1a01005 	mov	r1, r5
400171d8:	e2840078 	add	r0, r4, #120	; 0x78
400171dc:	ebffcb88 	bl	4000a004 <_txe_mutex_get>
400171e0:	e3500000 	cmp	r0, #0
400171e4:	0a000001 	beq	400171f0 <CyU3PDmaMultiChannelAcquireLock+0x4c>
400171e8:	e3a0001d 	mov	r0, #29
400171ec:	eafffff2 	b	400171bc <CyU3PDmaMultiChannelAcquireLock+0x18>
400171f0:	e3a00000 	mov	r0, #0
400171f4:	eafffff0 	b	400171bc <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

400171f8 <CyU3PDmaMultiChannelCommitBuffer>:
400171f8:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
400171fc:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40017200:	e1a04000 	mov	r4, r0
40017204:	e1a05001 	mov	r5, r1
40017208:	e1a06002 	mov	r6, r2
4001720c:	e3e01000 	mvn	r1, #0
40017210:	e1a00004 	mov	r0, r4
40017214:	ebffffe2 	bl	400171a4 <CyU3PDmaMultiChannelAcquireLock>
40017218:	e1a0b000 	mov	fp, r0
4001721c:	e35b0000 	cmp	fp, #0
40017220:	0a000002 	beq	40017230 <CyU3PDmaMultiChannelCommitBuffer+0x38>
40017224:	e1a0000b 	mov	r0, fp
40017228:	e28dd03c 	add	sp, sp, #60	; 0x3c
4001722c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40017230:	e1d400b4 	ldrh	r0, [r4, #4]
40017234:	e20070ff 	and	r7, r0, #255	; 0xff
40017238:	e1d400b6 	ldrh	r0, [r4, #6]
4001723c:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017240:	e0400001 	sub	r0, r0, r1
40017244:	e1500005 	cmp	r0, r5
40017248:	aa000000 	bge	40017250 <CyU3PDmaMultiChannelCommitBuffer+0x58>
4001724c:	e3a0b040 	mov	fp, #64	; 0x40
40017250:	e5940000 	ldr	r0, [r4]
40017254:	e3500002 	cmp	r0, #2
40017258:	0a000000 	beq	40017260 <CyU3PDmaMultiChannelCommitBuffer+0x68>
4001725c:	e3a0b042 	mov	fp, #66	; 0x42
40017260:	e5940000 	ldr	r0, [r4]
40017264:	e3500005 	cmp	r0, #5
40017268:	1a000000 	bne	40017270 <CyU3PDmaMultiChannelCommitBuffer+0x78>
4001726c:	e3a0b049 	mov	fp, #73	; 0x49
40017270:	e5940000 	ldr	r0, [r4]
40017274:	e3500007 	cmp	r0, #7
40017278:	1a000000 	bne	40017280 <CyU3PDmaMultiChannelCommitBuffer+0x88>
4001727c:	e3a0b048 	mov	fp, #72	; 0x48
40017280:	e3570006 	cmp	r7, #6
40017284:	1a000000 	bne	4001728c <CyU3PDmaMultiChannelCommitBuffer+0x94>
40017288:	e3a0b046 	mov	fp, #70	; 0x46
4001728c:	e3570005 	cmp	r7, #5
40017290:	1a000034 	bne	40017368 <CyU3PDmaMultiChannelCommitBuffer+0x170>
40017294:	e35b0000 	cmp	fp, #0
40017298:	1a000032 	bne	40017368 <CyU3PDmaMultiChannelCommitBuffer+0x170>
4001729c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400172a0:	e28d1024 	add	r1, sp, #36	; 0x24
400172a4:	ebfff61b 	bl	40014b18 <CyU3PDmaSocketGetConfig>
400172a8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400172ac:	e3100702 	tst	r0, #524288	; 0x80000
400172b0:	0a000027 	beq	40017354 <CyU3PDmaMultiChannelCommitBuffer+0x15c>
400172b4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400172b8:	e1a09800 	lsl	r9, r0, #16
400172bc:	e1a09829 	lsr	r9, r9, #16
400172c0:	e28d1004 	add	r1, sp, #4
400172c4:	e1a00009 	mov	r0, r9
400172c8:	eb002c70 	bl	40022490 <CyU3PDmaDscrGetConfig>
400172cc:	e59d0010 	ldr	r0, [sp, #16]
400172d0:	e3100008 	tst	r0, #8
400172d4:	0a00001c 	beq	4001734c <CyU3PDmaMultiChannelCommitBuffer+0x154>
400172d8:	e59d0010 	ldr	r0, [sp, #16]
400172dc:	e1a00800 	lsl	r0, r0, #16
400172e0:	e1a00820 	lsr	r0, r0, #16
400172e4:	e58d0010 	str	r0, [sp, #16]
400172e8:	e59d0010 	ldr	r0, [sp, #16]
400172ec:	e1800805 	orr	r0, r0, r5, lsl #16
400172f0:	e58d0010 	str	r0, [sp, #16]
400172f4:	e3560000 	cmp	r6, #0
400172f8:	0a000007 	beq	4001731c <CyU3PDmaMultiChannelCommitBuffer+0x124>
400172fc:	e59d0010 	ldr	r0, [sp, #16]
40017300:	e3c0000f 	bic	r0, r0, #15
40017304:	e58d0010 	str	r0, [sp, #16]
40017308:	e206100e 	and	r1, r6, #14
4001730c:	e3811008 	orr	r1, r1, #8
40017310:	e59d0010 	ldr	r0, [sp, #16]
40017314:	e1800001 	orr	r0, r0, r1
40017318:	e58d0010 	str	r0, [sp, #16]
4001731c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40017320:	e3500000 	cmp	r0, #0
40017324:	0a000004 	beq	4001733c <CyU3PDmaMultiChannelCommitBuffer+0x144>
40017328:	e59d2010 	ldr	r2, [sp, #16]
4001732c:	e59f327c 	ldr	r3, [pc, #636]	; 400175b0 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017330:	e0021003 	and	r1, r2, r3
40017334:	e59d0004 	ldr	r0, [sp, #4]
40017338:	ebffeb19 	bl	40011fa4 <CyU3PSysCleanDRegion>
4001733c:	e28d1004 	add	r1, sp, #4
40017340:	e1a00009 	mov	r0, r9
40017344:	eb002c6c 	bl	400224fc <CyU3PDmaDscrSetConfig>
40017348:	ea000002 	b	40017358 <CyU3PDmaMultiChannelCommitBuffer+0x160>
4001734c:	e3a0b047 	mov	fp, #71	; 0x47
40017350:	ea000000 	b	40017358 <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017354:	e3a0b047 	mov	fp, #71	; 0x47
40017358:	e2840078 	add	r0, r4, #120	; 0x78
4001735c:	ebffcb5d 	bl	4000a0d8 <_txe_mutex_put>
40017360:	e1a0000b 	mov	r0, fp
40017364:	eaffffaf 	b	40017228 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017368:	e35b0000 	cmp	fp, #0
4001736c:	1a00000d 	bne	400173a8 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
40017370:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017374:	e28d1014 	add	r1, sp, #20
40017378:	eb002c44 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001737c:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017380:	e28d1004 	add	r1, sp, #4
40017384:	eb002c41 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017388:	e59d0020 	ldr	r0, [sp, #32]
4001738c:	e3100008 	tst	r0, #8
40017390:	1a000000 	bne	40017398 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
40017394:	e3a0b047 	mov	fp, #71	; 0x47
40017398:	e59d0010 	ldr	r0, [sp, #16]
4001739c:	e3100008 	tst	r0, #8
400173a0:	0a000000 	beq	400173a8 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
400173a4:	e3a0b047 	mov	fp, #71	; 0x47
400173a8:	e35b0000 	cmp	fp, #0
400173ac:	0a000003 	beq	400173c0 <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
400173b0:	e2840078 	add	r0, r4, #120	; 0x78
400173b4:	ebffcb47 	bl	4000a0d8 <_txe_mutex_put>
400173b8:	e1a0000b 	mov	r0, fp
400173bc:	eaffff99 	b	40017228 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400173c0:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400173c4:	e3500000 	cmp	r0, #0
400173c8:	0a000004 	beq	400173e0 <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
400173cc:	e59d2010 	ldr	r2, [sp, #16]
400173d0:	e59f31d8 	ldr	r3, [pc, #472]	; 400175b0 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400173d4:	e0021003 	and	r1, r2, r3
400173d8:	e59d0004 	ldr	r0, [sp, #4]
400173dc:	ebffeaf0 	bl	40011fa4 <CyU3PSysCleanDRegion>
400173e0:	e3570009 	cmp	r7, #9
400173e4:	1a00003a 	bne	400174d4 <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
400173e8:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
400173ec:	e3a0a000 	mov	sl, #0
400173f0:	ea00002a 	b	400174a0 <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
400173f4:	e28d1004 	add	r1, sp, #4
400173f8:	e1a00009 	mov	r0, r9
400173fc:	eb002c23 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017400:	e284000c 	add	r0, r4, #12
40017404:	e080008a 	add	r0, r0, sl, lsl #1
40017408:	e1d000b0 	ldrh	r0, [r0]
4001740c:	e3500000 	cmp	r0, #0
40017410:	1a00001d 	bne	4001748c <CyU3PDmaMultiChannelCommitBuffer+0x294>
40017414:	e59d0010 	ldr	r0, [sp, #16]
40017418:	e59f1190 	ldr	r1, [pc, #400]	; 400175b0 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
4001741c:	e0000001 	and	r0, r0, r1
40017420:	e58d0010 	str	r0, [sp, #16]
40017424:	e59d0010 	ldr	r0, [sp, #16]
40017428:	e1800805 	orr	r0, r0, r5, lsl #16
4001742c:	e58d0010 	str	r0, [sp, #16]
40017430:	e3560000 	cmp	r6, #0
40017434:	1a000005 	bne	40017450 <CyU3PDmaMultiChannelCommitBuffer+0x258>
40017438:	e59d1020 	ldr	r1, [sp, #32]
4001743c:	e201100f 	and	r1, r1, #15
40017440:	e59d0010 	ldr	r0, [sp, #16]
40017444:	e1800001 	orr	r0, r0, r1
40017448:	e58d0010 	str	r0, [sp, #16]
4001744c:	ea000004 	b	40017464 <CyU3PDmaMultiChannelCommitBuffer+0x26c>
40017450:	e206100e 	and	r1, r6, #14
40017454:	e3811008 	orr	r1, r1, #8
40017458:	e59d0010 	ldr	r0, [sp, #16]
4001745c:	e1800001 	orr	r0, r0, r1
40017460:	e58d0010 	str	r0, [sp, #16]
40017464:	e28d1004 	add	r1, sp, #4
40017468:	e1a00009 	mov	r0, r9
4001746c:	eb002c22 	bl	400224fc <CyU3PDmaDscrSetConfig>
40017470:	e59d0008 	ldr	r0, [sp, #8]
40017474:	e1a08900 	lsl	r8, r0, #18
40017478:	e1a08928 	lsr	r8, r8, #18
4001747c:	e3a02001 	mov	r2, #1
40017480:	e1a01009 	mov	r1, r9
40017484:	e1a00008 	mov	r0, r8
40017488:	ebfff63a 	bl	40014d78 <CyU3PDmaSocketSendEvent>
4001748c:	e59d000c 	ldr	r0, [sp, #12]
40017490:	e59f111c 	ldr	r1, [pc, #284]	; 400175b4 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017494:	e0019820 	and	r9, r1, r0, lsr #16
40017498:	e28a0001 	add	r0, sl, #1
4001749c:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
400174a0:	e1d400ba 	ldrh	r0, [r4, #10]
400174a4:	e150000a 	cmp	r0, sl
400174a8:	caffffd1 	bgt	400173f4 <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
400174ac:	e59d001c 	ldr	r0, [sp, #28]
400174b0:	e59f10fc 	ldr	r1, [pc, #252]	; 400175b4 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400174b4:	e0010820 	and	r0, r1, r0, lsr #16
400174b8:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400174bc:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400174c0:	e28d1014 	add	r1, sp, #20
400174c4:	eb002bf1 	bl	40022490 <CyU3PDmaDscrGetConfig>
400174c8:	e59d001c 	ldr	r0, [sp, #28]
400174cc:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400174d0:	ea000032 	b	400175a0 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
400174d4:	e59d0010 	ldr	r0, [sp, #16]
400174d8:	e59f10d0 	ldr	r1, [pc, #208]	; 400175b0 <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
400174dc:	e0000001 	and	r0, r0, r1
400174e0:	e58d0010 	str	r0, [sp, #16]
400174e4:	e59d0010 	ldr	r0, [sp, #16]
400174e8:	e1800805 	orr	r0, r0, r5, lsl #16
400174ec:	e58d0010 	str	r0, [sp, #16]
400174f0:	e3560000 	cmp	r6, #0
400174f4:	1a000005 	bne	40017510 <CyU3PDmaMultiChannelCommitBuffer+0x318>
400174f8:	e59d1020 	ldr	r1, [sp, #32]
400174fc:	e201100f 	and	r1, r1, #15
40017500:	e59d0010 	ldr	r0, [sp, #16]
40017504:	e1800001 	orr	r0, r0, r1
40017508:	e58d0010 	str	r0, [sp, #16]
4001750c:	ea000004 	b	40017524 <CyU3PDmaMultiChannelCommitBuffer+0x32c>
40017510:	e206100e 	and	r1, r6, #14
40017514:	e3811008 	orr	r1, r1, #8
40017518:	e59d0010 	ldr	r0, [sp, #16]
4001751c:	e1800001 	orr	r0, r0, r1
40017520:	e58d0010 	str	r0, [sp, #16]
40017524:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017528:	e28d1004 	add	r1, sp, #4
4001752c:	eb002bf2 	bl	400224fc <CyU3PDmaDscrSetConfig>
40017530:	e59d0008 	ldr	r0, [sp, #8]
40017534:	e1a08900 	lsl	r8, r0, #18
40017538:	e1a08928 	lsr	r8, r8, #18
4001753c:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
40017540:	e3a02001 	mov	r2, #1
40017544:	e1a00008 	mov	r0, r8
40017548:	ebfff60a 	bl	40014d78 <CyU3PDmaSocketSendEvent>
4001754c:	e3570007 	cmp	r7, #7
40017550:	1a000009 	bne	4001757c <CyU3PDmaMultiChannelCommitBuffer+0x384>
40017554:	e59d000c 	ldr	r0, [sp, #12]
40017558:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001755c:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017560:	e28d1004 	add	r1, sp, #4
40017564:	eb002bc9 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017568:	e59d000c 	ldr	r0, [sp, #12]
4001756c:	e59f1040 	ldr	r1, [pc, #64]	; 400175b4 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017570:	e0010820 	and	r0, r1, r0, lsr #16
40017574:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017578:	ea000008 	b	400175a0 <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
4001757c:	e59d001c 	ldr	r0, [sp, #28]
40017580:	e59f102c 	ldr	r1, [pc, #44]	; 400175b4 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
40017584:	e0010820 	and	r0, r1, r0, lsr #16
40017588:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
4001758c:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
40017590:	e28d1014 	add	r1, sp, #20
40017594:	eb002bbd 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017598:	e59d001c 	ldr	r0, [sp, #28]
4001759c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400175a0:	e2840078 	add	r0, r4, #120	; 0x78
400175a4:	ebffcacb 	bl	4000a0d8 <_txe_mutex_put>
400175a8:	e3a00000 	mov	r0, #0
400175ac:	eaffff1d 	b	40017228 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400175b0:	0000fff0 	.word	0x0000fff0
400175b4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

400175b8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
400175b8:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400175bc:	e24dd024 	sub	sp, sp, #36	; 0x24
400175c0:	e1a04000 	mov	r4, r0
400175c4:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400175c8:	e3806903 	orr	r6, r0, #49152	; 0xc000
400175cc:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400175d0:	e3866801 	orr	r6, r6, #65536	; 0x10000
400175d4:	e1d400b8 	ldrh	r0, [r4, #8]
400175d8:	e1d430ba 	ldrh	r3, [r4, #10]
400175dc:	e0000093 	mul	r0, r3, r0
400175e0:	e1a01800 	lsl	r1, r0, #16
400175e4:	e1a01821 	lsr	r1, r1, #16
400175e8:	e1d420b6 	ldrh	r2, [r4, #6]
400175ec:	e1a03006 	mov	r3, r6
400175f0:	e284001c 	add	r0, r4, #28
400175f4:	eb002ab6 	bl	400220d4 <CyU3PDmaDscrChainCreate>
400175f8:	e1a05000 	mov	r5, r0
400175fc:	e3550000 	cmp	r5, #0
40017600:	0a000002 	beq	40017610 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
40017604:	e1a00005 	mov	r0, r5
40017608:	e28dd024 	add	sp, sp, #36	; 0x24
4001760c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017610:	e1d400b4 	ldrh	r0, [r4, #4]
40017614:	e3500005 	cmp	r0, #5
40017618:	1a00003c 	bne	40017710 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
4001761c:	e3a07000 	mov	r7, #0
40017620:	e1d481bc 	ldrh	r8, [r4, #28]
40017624:	ea000035 	b	40017700 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
40017628:	e3a09000 	mov	r9, #0
4001762c:	ea00002e 	b	400176ec <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
40017630:	e28d1004 	add	r1, sp, #4
40017634:	e1a00008 	mov	r0, r8
40017638:	eb002b94 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001763c:	e3570000 	cmp	r7, #0
40017640:	1a000003 	bne	40017654 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
40017644:	e2840014 	add	r0, r4, #20
40017648:	e0800089 	add	r0, r0, r9, lsl #1
4001764c:	e1c080b0 	strh	r8, [r0]
40017650:	ea000020 	b	400176d8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
40017654:	e2841014 	add	r1, r4, #20
40017658:	e0811089 	add	r1, r1, r9, lsl #1
4001765c:	e1d100b0 	ldrh	r0, [r1]
40017660:	e28d1014 	add	r1, sp, #20
40017664:	eb002b89 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017668:	e59d0018 	ldr	r0, [sp, #24]
4001766c:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017670:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40017674:	e58d0018 	str	r0, [sp, #24]
40017678:	e2841024 	add	r1, r4, #36	; 0x24
4001767c:	e0811089 	add	r1, r1, r9, lsl #1
40017680:	e59d0018 	ldr	r0, [sp, #24]
40017684:	e1d110b0 	ldrh	r1, [r1]
40017688:	e3a02101 	mov	r2, #1073741824	; 0x40000000
4001768c:	e1821801 	orr	r1, r2, r1, lsl #16
40017690:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40017694:	e1800001 	orr	r0, r0, r1
40017698:	e58d0018 	str	r0, [sp, #24]
4001769c:	e59d001c 	ldr	r0, [sp, #28]
400176a0:	e1a00800 	lsl	r0, r0, #16
400176a4:	e1a00820 	lsr	r0, r0, #16
400176a8:	e58d001c 	str	r0, [sp, #28]
400176ac:	e59d001c 	ldr	r0, [sp, #28]
400176b0:	e1800808 	orr	r0, r0, r8, lsl #16
400176b4:	e58d001c 	str	r0, [sp, #28]
400176b8:	e2841014 	add	r1, r4, #20
400176bc:	e0811089 	add	r1, r1, r9, lsl #1
400176c0:	e1d100b0 	ldrh	r0, [r1]
400176c4:	e28d1014 	add	r1, sp, #20
400176c8:	eb002b8b 	bl	400224fc <CyU3PDmaDscrSetConfig>
400176cc:	e2840014 	add	r0, r4, #20
400176d0:	e0800089 	add	r0, r0, r9, lsl #1
400176d4:	e1c080b0 	strh	r8, [r0]
400176d8:	e59d000c 	ldr	r0, [sp, #12]
400176dc:	e1a08800 	lsl	r8, r0, #16
400176e0:	e1a08828 	lsr	r8, r8, #16
400176e4:	e2890001 	add	r0, r9, #1
400176e8:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400176ec:	e1d400ba 	ldrh	r0, [r4, #10]
400176f0:	e1500009 	cmp	r0, r9
400176f4:	caffffcd 	bgt	40017630 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
400176f8:	e2870001 	add	r0, r7, #1
400176fc:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017700:	e1d400b8 	ldrh	r0, [r4, #8]
40017704:	e1500007 	cmp	r0, r7
40017708:	aaffffc6 	bge	40017628 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
4001770c:	ea000056 	b	4001786c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
40017710:	e3a07000 	mov	r7, #0
40017714:	e1d481bc 	ldrh	r8, [r4, #28]
40017718:	ea000050 	b	40017860 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
4001771c:	e3a09000 	mov	r9, #0
40017720:	ea000049 	b	4001784c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
40017724:	e3570000 	cmp	r7, #0
40017728:	1a00000d 	bne	40017764 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
4001772c:	e3a06cff 	mov	r6, #65280	; 0xff00
40017730:	e2840024 	add	r0, r4, #36	; 0x24
40017734:	e0800089 	add	r0, r0, r9, lsl #1
40017738:	e1d000b0 	ldrh	r0, [r0]
4001773c:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017740:	e1810800 	orr	r0, r1, r0, lsl #16
40017744:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017748:	e1866000 	orr	r6, r6, r0
4001774c:	e1d410b8 	ldrh	r1, [r4, #8]
40017750:	e2842014 	add	r2, r4, #20
40017754:	e0820089 	add	r0, r2, r9, lsl #1
40017758:	e1a03006 	mov	r3, r6
4001775c:	e3a02000 	mov	r2, #0
40017760:	eb002a5b 	bl	400220d4 <CyU3PDmaDscrChainCreate>
40017764:	e2841014 	add	r1, r4, #20
40017768:	e0811089 	add	r1, r1, r9, lsl #1
4001776c:	e1d100b0 	ldrh	r0, [r1]
40017770:	e28d1014 	add	r1, sp, #20
40017774:	eb002b45 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017778:	e28d1004 	add	r1, sp, #4
4001777c:	e1a00008 	mov	r0, r8
40017780:	eb002b42 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017784:	e59d0004 	ldr	r0, [sp, #4]
40017788:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
4001778c:	e0800001 	add	r0, r0, r1
40017790:	e58d0014 	str	r0, [sp, #20]
40017794:	e59d0010 	ldr	r0, [sp, #16]
40017798:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
4001779c:	e0400001 	sub	r0, r0, r1
400177a0:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
400177a4:	e0400001 	sub	r0, r0, r1
400177a8:	e58d0020 	str	r0, [sp, #32]
400177ac:	e2841014 	add	r1, r4, #20
400177b0:	e0811089 	add	r1, r1, r9, lsl #1
400177b4:	e1d100b0 	ldrh	r0, [r1]
400177b8:	e28d1014 	add	r1, sp, #20
400177bc:	eb002b4e 	bl	400224fc <CyU3PDmaDscrSetConfig>
400177c0:	e59d0004 	ldr	r0, [sp, #4]
400177c4:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400177c8:	e0800001 	add	r0, r0, r1
400177cc:	e58d0004 	str	r0, [sp, #4]
400177d0:	e1d400b6 	ldrh	r0, [r4, #6]
400177d4:	e280000f 	add	r0, r0, #15
400177d8:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
400177dc:	e0400001 	sub	r0, r0, r1
400177e0:	e59f10b4 	ldr	r1, [pc, #180]	; 4001789c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
400177e4:	e0000001 	and	r0, r0, r1
400177e8:	e58d0010 	str	r0, [sp, #16]
400177ec:	e59d000c 	ldr	r0, [sp, #12]
400177f0:	e1a00800 	lsl	r0, r0, #16
400177f4:	e1a00820 	lsr	r0, r0, #16
400177f8:	e58d000c 	str	r0, [sp, #12]
400177fc:	e2841014 	add	r1, r4, #20
40017800:	e0811089 	add	r1, r1, r9, lsl #1
40017804:	e59d000c 	ldr	r0, [sp, #12]
40017808:	e1d110b0 	ldrh	r1, [r1]
4001780c:	e1800801 	orr	r0, r0, r1, lsl #16
40017810:	e58d000c 	str	r0, [sp, #12]
40017814:	e28d1004 	add	r1, sp, #4
40017818:	e1a00008 	mov	r0, r8
4001781c:	eb002b36 	bl	400224fc <CyU3PDmaDscrSetConfig>
40017820:	e59d000c 	ldr	r0, [sp, #12]
40017824:	e1a08800 	lsl	r8, r0, #16
40017828:	e1a08828 	lsr	r8, r8, #16
4001782c:	e59d001c 	ldr	r0, [sp, #28]
40017830:	e59f1068 	ldr	r1, [pc, #104]	; 400178a0 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
40017834:	e0010820 	and	r0, r1, r0, lsr #16
40017838:	e2841014 	add	r1, r4, #20
4001783c:	e0811089 	add	r1, r1, r9, lsl #1
40017840:	e1c100b0 	strh	r0, [r1]
40017844:	e2890001 	add	r0, r9, #1
40017848:	e3c09801 	bic	r9, r0, #65536	; 0x10000
4001784c:	e1d400ba 	ldrh	r0, [r4, #10]
40017850:	e1500009 	cmp	r0, r9
40017854:	caffffb2 	bgt	40017724 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017858:	e2870001 	add	r0, r7, #1
4001785c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017860:	e1d400b8 	ldrh	r0, [r4, #8]
40017864:	e1500007 	cmp	r0, r7
40017868:	caffffab 	bgt	4001771c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
4001786c:	e1a00004 	mov	r0, r4
40017870:	eb000509 	bl	40018c9c <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017874:	e1d401b4 	ldrh	r0, [r4, #20]
40017878:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
4001787c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017880:	e1d401bc 	ldrh	r0, [r4, #28]
40017884:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017888:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
4001788c:	e2840034 	add	r0, r4, #52	; 0x34
40017890:	eb002a86 	bl	400222b0 <CyU3PDmaDscrGet>
40017894:	e3a00000 	mov	r0, #0
40017898:	eaffff5a 	b	40017608 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
4001789c:	0000fff0 	.word	0x0000fff0
400178a0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

400178a4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
400178a4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400178a8:	e24dd024 	sub	sp, sp, #36	; 0x24
400178ac:	e1a04000 	mov	r4, r0
400178b0:	e3a06cff 	mov	r6, #65280	; 0xff00
400178b4:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400178b8:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400178bc:	e1810800 	orr	r0, r1, r0, lsl #16
400178c0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400178c4:	e1866000 	orr	r6, r6, r0
400178c8:	e1d400b8 	ldrh	r0, [r4, #8]
400178cc:	e1d430ba 	ldrh	r3, [r4, #10]
400178d0:	e0000093 	mul	r0, r3, r0
400178d4:	e1a01800 	lsl	r1, r0, #16
400178d8:	e1a01821 	lsr	r1, r1, #16
400178dc:	e1d420b6 	ldrh	r2, [r4, #6]
400178e0:	e1a03006 	mov	r3, r6
400178e4:	e2840014 	add	r0, r4, #20
400178e8:	eb0029f9 	bl	400220d4 <CyU3PDmaDscrChainCreate>
400178ec:	e1a05000 	mov	r5, r0
400178f0:	e3550000 	cmp	r5, #0
400178f4:	0a000002 	beq	40017904 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
400178f8:	e1a00005 	mov	r0, r5
400178fc:	e28dd024 	add	sp, sp, #36	; 0x24
40017900:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017904:	e1d400b4 	ldrh	r0, [r4, #4]
40017908:	e3500006 	cmp	r0, #6
4001790c:	1a00003a 	bne	400179fc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017910:	e3a07000 	mov	r7, #0
40017914:	e1d481b4 	ldrh	r8, [r4, #20]
40017918:	ea000033 	b	400179ec <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
4001791c:	e3a09000 	mov	r9, #0
40017920:	ea00002c 	b	400179d8 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
40017924:	e28d1014 	add	r1, sp, #20
40017928:	e1a00008 	mov	r0, r8
4001792c:	eb002ad7 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017930:	e3570000 	cmp	r7, #0
40017934:	1a000003 	bne	40017948 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
40017938:	e284001c 	add	r0, r4, #28
4001793c:	e0800089 	add	r0, r0, r9, lsl #1
40017940:	e1c080b0 	strh	r8, [r0]
40017944:	ea00001e 	b	400179c4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017948:	e284101c 	add	r1, r4, #28
4001794c:	e0811089 	add	r1, r1, r9, lsl #1
40017950:	e1d100b0 	ldrh	r0, [r1]
40017954:	e28d1004 	add	r1, sp, #4
40017958:	eb002acc 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001795c:	e59d0008 	ldr	r0, [sp, #8]
40017960:	e1a00720 	lsr	r0, r0, #14
40017964:	e1a00700 	lsl	r0, r0, #14
40017968:	e58d0008 	str	r0, [sp, #8]
4001796c:	e284102c 	add	r1, r4, #44	; 0x2c
40017970:	e0811089 	add	r1, r1, r9, lsl #1
40017974:	e59d0008 	ldr	r0, [sp, #8]
40017978:	e1d110b0 	ldrh	r1, [r1]
4001797c:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017980:	e1800001 	orr	r0, r0, r1
40017984:	e58d0008 	str	r0, [sp, #8]
40017988:	e59d000c 	ldr	r0, [sp, #12]
4001798c:	e1a00820 	lsr	r0, r0, #16
40017990:	e1a00800 	lsl	r0, r0, #16
40017994:	e58d000c 	str	r0, [sp, #12]
40017998:	e59d000c 	ldr	r0, [sp, #12]
4001799c:	e1800008 	orr	r0, r0, r8
400179a0:	e58d000c 	str	r0, [sp, #12]
400179a4:	e284101c 	add	r1, r4, #28
400179a8:	e0811089 	add	r1, r1, r9, lsl #1
400179ac:	e1d100b0 	ldrh	r0, [r1]
400179b0:	e28d1004 	add	r1, sp, #4
400179b4:	eb002ad0 	bl	400224fc <CyU3PDmaDscrSetConfig>
400179b8:	e284001c 	add	r0, r4, #28
400179bc:	e0800089 	add	r0, r0, r9, lsl #1
400179c0:	e1c080b0 	strh	r8, [r0]
400179c4:	e59d001c 	ldr	r0, [sp, #28]
400179c8:	e59f11c4 	ldr	r1, [pc, #452]	; 40017b94 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
400179cc:	e0018820 	and	r8, r1, r0, lsr #16
400179d0:	e2890001 	add	r0, r9, #1
400179d4:	e3c09801 	bic	r9, r0, #65536	; 0x10000
400179d8:	e1d400ba 	ldrh	r0, [r4, #10]
400179dc:	e1500009 	cmp	r0, r9
400179e0:	caffffcf 	bgt	40017924 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
400179e4:	e2870001 	add	r0, r7, #1
400179e8:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400179ec:	e1d400b8 	ldrh	r0, [r4, #8]
400179f0:	e1500007 	cmp	r0, r7
400179f4:	aaffffc8 	bge	4001791c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
400179f8:	ea000059 	b	40017b64 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
400179fc:	e3a07000 	mov	r7, #0
40017a00:	e1d481b4 	ldrh	r8, [r4, #20]
40017a04:	ea000053 	b	40017b58 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017a08:	e3a09000 	mov	r9, #0
40017a0c:	ea00004c 	b	40017b44 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017a10:	e3570000 	cmp	r7, #0
40017a14:	1a00000b 	bne	40017a48 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017a18:	e284002c 	add	r0, r4, #44	; 0x2c
40017a1c:	e0800089 	add	r0, r0, r9, lsl #1
40017a20:	e1d000b0 	ldrh	r0, [r0]
40017a24:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017a28:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017a2c:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017a30:	e1d410b8 	ldrh	r1, [r4, #8]
40017a34:	e284201c 	add	r2, r4, #28
40017a38:	e0820089 	add	r0, r2, r9, lsl #1
40017a3c:	e1a03006 	mov	r3, r6
40017a40:	e3a02000 	mov	r2, #0
40017a44:	eb0029a2 	bl	400220d4 <CyU3PDmaDscrChainCreate>
40017a48:	e284101c 	add	r1, r4, #28
40017a4c:	e0811089 	add	r1, r1, r9, lsl #1
40017a50:	e1d100b0 	ldrh	r0, [r1]
40017a54:	e28d1004 	add	r1, sp, #4
40017a58:	eb002a8c 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017a5c:	e28d1014 	add	r1, sp, #20
40017a60:	e1a00008 	mov	r0, r8
40017a64:	eb002a89 	bl	40022490 <CyU3PDmaDscrGetConfig>
40017a68:	e59d0014 	ldr	r0, [sp, #20]
40017a6c:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a70:	e0800001 	add	r0, r0, r1
40017a74:	e58d0004 	str	r0, [sp, #4]
40017a78:	e1d400b6 	ldrh	r0, [r4, #6]
40017a7c:	e280000f 	add	r0, r0, #15
40017a80:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017a84:	e0400001 	sub	r0, r0, r1
40017a88:	e59f1108 	ldr	r1, [pc, #264]	; 40017b98 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017a8c:	e0000001 	and	r0, r0, r1
40017a90:	e58d0010 	str	r0, [sp, #16]
40017a94:	e59d000c 	ldr	r0, [sp, #12]
40017a98:	e1a00800 	lsl	r0, r0, #16
40017a9c:	e1a00820 	lsr	r0, r0, #16
40017aa0:	e58d000c 	str	r0, [sp, #12]
40017aa4:	e59d000c 	ldr	r0, [sp, #12]
40017aa8:	e1800808 	orr	r0, r0, r8, lsl #16
40017aac:	e58d000c 	str	r0, [sp, #12]
40017ab0:	e284101c 	add	r1, r4, #28
40017ab4:	e0811089 	add	r1, r1, r9, lsl #1
40017ab8:	e1d100b0 	ldrh	r0, [r1]
40017abc:	e28d1004 	add	r1, sp, #4
40017ac0:	eb002a8d 	bl	400224fc <CyU3PDmaDscrSetConfig>
40017ac4:	e59d0014 	ldr	r0, [sp, #20]
40017ac8:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017acc:	e0800001 	add	r0, r0, r1
40017ad0:	e58d0014 	str	r0, [sp, #20]
40017ad4:	e1d400b6 	ldrh	r0, [r4, #6]
40017ad8:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017adc:	e0400001 	sub	r0, r0, r1
40017ae0:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017ae4:	e0400001 	sub	r0, r0, r1
40017ae8:	e58d0020 	str	r0, [sp, #32]
40017aec:	e59d001c 	ldr	r0, [sp, #28]
40017af0:	e1a00820 	lsr	r0, r0, #16
40017af4:	e1a00800 	lsl	r0, r0, #16
40017af8:	e58d001c 	str	r0, [sp, #28]
40017afc:	e284101c 	add	r1, r4, #28
40017b00:	e0811089 	add	r1, r1, r9, lsl #1
40017b04:	e59d001c 	ldr	r0, [sp, #28]
40017b08:	e1d110b0 	ldrh	r1, [r1]
40017b0c:	e1800001 	orr	r0, r0, r1
40017b10:	e58d001c 	str	r0, [sp, #28]
40017b14:	e28d1014 	add	r1, sp, #20
40017b18:	e1a00008 	mov	r0, r8
40017b1c:	eb002a76 	bl	400224fc <CyU3PDmaDscrSetConfig>
40017b20:	e59d001c 	ldr	r0, [sp, #28]
40017b24:	e59f1068 	ldr	r1, [pc, #104]	; 40017b94 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017b28:	e0018820 	and	r8, r1, r0, lsr #16
40017b2c:	e284101c 	add	r1, r4, #28
40017b30:	e0811089 	add	r1, r1, r9, lsl #1
40017b34:	e59d000c 	ldr	r0, [sp, #12]
40017b38:	e1c100b0 	strh	r0, [r1]
40017b3c:	e2890001 	add	r0, r9, #1
40017b40:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017b44:	e1d400ba 	ldrh	r0, [r4, #10]
40017b48:	e1500009 	cmp	r0, r9
40017b4c:	caffffaf 	bgt	40017a10 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017b50:	e2870001 	add	r0, r7, #1
40017b54:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017b58:	e1d400b8 	ldrh	r0, [r4, #8]
40017b5c:	e1500007 	cmp	r0, r7
40017b60:	caffffa8 	bgt	40017a08 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017b64:	e1d401b4 	ldrh	r0, [r4, #20]
40017b68:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017b6c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017b70:	e1d401bc 	ldrh	r0, [r4, #28]
40017b74:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017b78:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017b7c:	e2840034 	add	r0, r4, #52	; 0x34
40017b80:	eb0029ca 	bl	400222b0 <CyU3PDmaDscrGet>
40017b84:	e1a00004 	mov	r0, r4
40017b88:	eb0004a3 	bl	40018e1c <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017b8c:	e3a00000 	mov	r0, #0
40017b90:	eaffff59 	b	400178fc <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017b94:	0000ffff 	.word	0x0000ffff
40017b98:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017b9c <CyU3PDmaMultiChannelCreate>:
40017b9c:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017ba0:	e1a04000 	mov	r4, r0
40017ba4:	e1a05001 	mov	r5, r1
40017ba8:	e1a06002 	mov	r6, r2
40017bac:	e3560000 	cmp	r6, #0
40017bb0:	1a000001 	bne	40017bbc <CyU3PDmaMultiChannelCreate+0x20>
40017bb4:	e3a00041 	mov	r0, #65	; 0x41
40017bb8:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017bbc:	e3540000 	cmp	r4, #0
40017bc0:	1a000001 	bne	40017bcc <CyU3PDmaMultiChannelCreate+0x30>
40017bc4:	e3a00041 	mov	r0, #65	; 0x41
40017bc8:	eafffffa 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017bcc:	e1d600b2 	ldrh	r0, [r6, #2]
40017bd0:	e3500000 	cmp	r0, #0
40017bd4:	1a000001 	bne	40017be0 <CyU3PDmaMultiChannelCreate+0x44>
40017bd8:	e3a00040 	mov	r0, #64	; 0x40
40017bdc:	eafffff5 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017be0:	e1d600b4 	ldrh	r0, [r6, #4]
40017be4:	e3500002 	cmp	r0, #2
40017be8:	ba000002 	blt	40017bf8 <CyU3PDmaMultiChannelCreate+0x5c>
40017bec:	e1d600b4 	ldrh	r0, [r6, #4]
40017bf0:	e3500004 	cmp	r0, #4
40017bf4:	da000001 	ble	40017c00 <CyU3PDmaMultiChannelCreate+0x64>
40017bf8:	e3a00040 	mov	r0, #64	; 0x40
40017bfc:	eaffffed 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017c00:	e3550006 	cmp	r5, #6
40017c04:	0a000001 	beq	40017c10 <CyU3PDmaMultiChannelCreate+0x74>
40017c08:	e3550005 	cmp	r5, #5
40017c0c:	1a000007 	bne	40017c30 <CyU3PDmaMultiChannelCreate+0x94>
40017c10:	eb0029de 	bl	40022390 <CyU3PDmaDscrGetFreeCount>
40017c14:	e1d610b2 	ldrh	r1, [r6, #2]
40017c18:	e1d620b4 	ldrh	r2, [r6, #4]
40017c1c:	e0010192 	mul	r1, r2, r1
40017c20:	e1500001 	cmp	r0, r1
40017c24:	ca000016 	bgt	40017c84 <CyU3PDmaMultiChannelCreate+0xe8>
40017c28:	e3a00010 	mov	r0, #16
40017c2c:	eaffffe1 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017c30:	e3550008 	cmp	r5, #8
40017c34:	0a000001 	beq	40017c40 <CyU3PDmaMultiChannelCreate+0xa4>
40017c38:	e3550007 	cmp	r5, #7
40017c3c:	1a000007 	bne	40017c60 <CyU3PDmaMultiChannelCreate+0xc4>
40017c40:	eb0029d2 	bl	40022390 <CyU3PDmaDscrGetFreeCount>
40017c44:	e1d610b2 	ldrh	r1, [r6, #2]
40017c48:	e1d620b4 	ldrh	r2, [r6, #4]
40017c4c:	e0010192 	mul	r1, r2, r1
40017c50:	e1500081 	cmp	r0, r1, lsl #1
40017c54:	ca00000a 	bgt	40017c84 <CyU3PDmaMultiChannelCreate+0xe8>
40017c58:	e3a00010 	mov	r0, #16
40017c5c:	eaffffd5 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017c60:	eb0029ca 	bl	40022390 <CyU3PDmaDscrGetFreeCount>
40017c64:	e1d610b2 	ldrh	r1, [r6, #2]
40017c68:	e1d620b4 	ldrh	r2, [r6, #4]
40017c6c:	e2822001 	add	r2, r2, #1
40017c70:	e0010192 	mul	r1, r2, r1
40017c74:	e1500001 	cmp	r0, r1
40017c78:	ca000001 	bgt	40017c84 <CyU3PDmaMultiChannelCreate+0xe8>
40017c7c:	e3a00010 	mov	r0, #16
40017c80:	eaffffcc 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017c84:	e1d600b0 	ldrh	r0, [r6]
40017c88:	e3500000 	cmp	r0, #0
40017c8c:	0a000003 	beq	40017ca0 <CyU3PDmaMultiChannelCreate+0x104>
40017c90:	e1d600b0 	ldrh	r0, [r6]
40017c94:	e59f1634 	ldr	r1, [pc, #1588]	; 400182d0 <CyU3PDmaMultiChannelCreate+0x734>
40017c98:	e1500001 	cmp	r0, r1
40017c9c:	da000001 	ble	40017ca8 <CyU3PDmaMultiChannelCreate+0x10c>
40017ca0:	e3a00040 	mov	r0, #64	; 0x40
40017ca4:	eaffffc3 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017ca8:	e3550005 	cmp	r5, #5
40017cac:	0a000001 	beq	40017cb8 <CyU3PDmaMultiChannelCreate+0x11c>
40017cb0:	e3550006 	cmp	r5, #6
40017cb4:	1a000004 	bne	40017ccc <CyU3PDmaMultiChannelCreate+0x130>
40017cb8:	e1d600b0 	ldrh	r0, [r6]
40017cbc:	e310000f 	tst	r0, #15
40017cc0:	0a00000b 	beq	40017cf4 <CyU3PDmaMultiChannelCreate+0x158>
40017cc4:	e3a00040 	mov	r0, #64	; 0x40
40017cc8:	eaffffba 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017ccc:	e1d600b0 	ldrh	r0, [r6]
40017cd0:	e1d611b8 	ldrh	r1, [r6, #24]
40017cd4:	e0400001 	sub	r0, r0, r1
40017cd8:	e1d611ba 	ldrh	r1, [r6, #26]
40017cdc:	e0400001 	sub	r0, r0, r1
40017ce0:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40017ce4:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40017ce8:	0a000001 	beq	40017cf4 <CyU3PDmaMultiChannelCreate+0x158>
40017cec:	e3a00040 	mov	r0, #64	; 0x40
40017cf0:	eaffffb0 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017cf4:	e5d6001e 	ldrb	r0, [r6, #30]
40017cf8:	e3500002 	cmp	r0, #2
40017cfc:	ba000001 	blt	40017d08 <CyU3PDmaMultiChannelCreate+0x16c>
40017d00:	e3a00040 	mov	r0, #64	; 0x40
40017d04:	eaffffab 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017d08:	e3550005 	cmp	r5, #5
40017d0c:	0a000001 	beq	40017d18 <CyU3PDmaMultiChannelCreate+0x17c>
40017d10:	e3550007 	cmp	r5, #7
40017d14:	1a000065 	bne	40017eb0 <CyU3PDmaMultiChannelCreate+0x314>
40017d18:	e1d601b6 	ldrh	r0, [r6, #22]
40017d1c:	e3500000 	cmp	r0, #0
40017d20:	0a000008 	beq	40017d48 <CyU3PDmaMultiChannelCreate+0x1ac>
40017d24:	e1d601b6 	ldrh	r0, [r6, #22]
40017d28:	e1d610b2 	ldrh	r1, [r6, #2]
40017d2c:	e1500001 	cmp	r0, r1
40017d30:	aa000002 	bge	40017d40 <CyU3PDmaMultiChannelCreate+0x1a4>
40017d34:	e1d600b2 	ldrh	r0, [r6, #2]
40017d38:	e350001f 	cmp	r0, #31
40017d3c:	da000001 	ble	40017d48 <CyU3PDmaMultiChannelCreate+0x1ac>
40017d40:	e3a00040 	mov	r0, #64	; 0x40
40017d44:	eaffff9b 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017d48:	e3a09000 	mov	r9, #0
40017d4c:	ea00002b 	b	40017e00 <CyU3PDmaMultiChannelCreate+0x264>
40017d50:	e2860006 	add	r0, r6, #6
40017d54:	e0800089 	add	r0, r0, r9, lsl #1
40017d58:	e1d000b0 	ldrh	r0, [r0]
40017d5c:	e3a0103f 	mov	r1, #63	; 0x3f
40017d60:	e0018440 	and	r8, r1, r0, asr #8
40017d64:	e2860006 	add	r0, r6, #6
40017d68:	e0800089 	add	r0, r0, r9, lsl #1
40017d6c:	e1d000b0 	ldrh	r0, [r0]
40017d70:	e20070ff 	and	r7, r0, #255	; 0xff
40017d74:	e2861006 	add	r1, r6, #6
40017d78:	e0811089 	add	r1, r1, r9, lsl #1
40017d7c:	e1d100b0 	ldrh	r0, [r1]
40017d80:	ebfff3c4 	bl	40014c98 <CyU3PDmaSocketIsValidProducer>
40017d84:	e3500000 	cmp	r0, #0
40017d88:	1a000001 	bne	40017d94 <CyU3PDmaMultiChannelCreate+0x1f8>
40017d8c:	e3a00040 	mov	r0, #64	; 0x40
40017d90:	eaffff88 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017d94:	e59f0538 	ldr	r0, [pc, #1336]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40017d98:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017d9c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017da0:	e3500000 	cmp	r0, #0
40017da4:	0a000001 	beq	40017db0 <CyU3PDmaMultiChannelCreate+0x214>
40017da8:	e3a00040 	mov	r0, #64	; 0x40
40017dac:	eaffff81 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017db0:	e2890001 	add	r0, r9, #1
40017db4:	e200a0ff 	and	sl, r0, #255	; 0xff
40017db8:	ea00000b 	b	40017dec <CyU3PDmaMultiChannelCreate+0x250>
40017dbc:	e2860006 	add	r0, r6, #6
40017dc0:	e0800089 	add	r0, r0, r9, lsl #1
40017dc4:	e1d000b0 	ldrh	r0, [r0]
40017dc8:	e2861006 	add	r1, r6, #6
40017dcc:	e081108a 	add	r1, r1, sl, lsl #1
40017dd0:	e1d110b0 	ldrh	r1, [r1]
40017dd4:	e1500001 	cmp	r0, r1
40017dd8:	1a000001 	bne	40017de4 <CyU3PDmaMultiChannelCreate+0x248>
40017ddc:	e3a00040 	mov	r0, #64	; 0x40
40017de0:	eaffff74 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017de4:	e28a0001 	add	r0, sl, #1
40017de8:	e200a0ff 	and	sl, r0, #255	; 0xff
40017dec:	e1d600b4 	ldrh	r0, [r6, #4]
40017df0:	e150000a 	cmp	r0, sl
40017df4:	cafffff0 	bgt	40017dbc <CyU3PDmaMultiChannelCreate+0x220>
40017df8:	e2890001 	add	r0, r9, #1
40017dfc:	e20090ff 	and	r9, r0, #255	; 0xff
40017e00:	e1d600b4 	ldrh	r0, [r6, #4]
40017e04:	e1500009 	cmp	r0, r9
40017e08:	caffffd0 	bgt	40017d50 <CyU3PDmaMultiChannelCreate+0x1b4>
40017e0c:	e1d600be 	ldrh	r0, [r6, #14]
40017e10:	e3a0103f 	mov	r1, #63	; 0x3f
40017e14:	e0018440 	and	r8, r1, r0, asr #8
40017e18:	e1d600be 	ldrh	r0, [r6, #14]
40017e1c:	e20070ff 	and	r7, r0, #255	; 0xff
40017e20:	e1d600be 	ldrh	r0, [r6, #14]
40017e24:	ebfff363 	bl	40014bb8 <CyU3PDmaSocketIsValidConsumer>
40017e28:	e3500000 	cmp	r0, #0
40017e2c:	1a000001 	bne	40017e38 <CyU3PDmaMultiChannelCreate+0x29c>
40017e30:	e3a00040 	mov	r0, #64	; 0x40
40017e34:	eaffff5f 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017e38:	e59f0494 	ldr	r0, [pc, #1172]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40017e3c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e40:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017e44:	e3500000 	cmp	r0, #0
40017e48:	0a000001 	beq	40017e54 <CyU3PDmaMultiChannelCreate+0x2b8>
40017e4c:	e3a00040 	mov	r0, #64	; 0x40
40017e50:	eaffff58 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017e54:	e59f0478 	ldr	r0, [pc, #1144]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40017e58:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e5c:	e7804107 	str	r4, [r0, r7, lsl #2]
40017e60:	e3a09000 	mov	r9, #0
40017e64:	ea00000d 	b	40017ea0 <CyU3PDmaMultiChannelCreate+0x304>
40017e68:	e2860006 	add	r0, r6, #6
40017e6c:	e0800089 	add	r0, r0, r9, lsl #1
40017e70:	e1d000b0 	ldrh	r0, [r0]
40017e74:	e3a0103f 	mov	r1, #63	; 0x3f
40017e78:	e0018440 	and	r8, r1, r0, asr #8
40017e7c:	e2860006 	add	r0, r6, #6
40017e80:	e0800089 	add	r0, r0, r9, lsl #1
40017e84:	e1d000b0 	ldrh	r0, [r0]
40017e88:	e20070ff 	and	r7, r0, #255	; 0xff
40017e8c:	e59f0440 	ldr	r0, [pc, #1088]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40017e90:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017e94:	e7804107 	str	r4, [r0, r7, lsl #2]
40017e98:	e2890001 	add	r0, r9, #1
40017e9c:	e20090ff 	and	r9, r0, #255	; 0xff
40017ea0:	e1d600b4 	ldrh	r0, [r6, #4]
40017ea4:	e1500009 	cmp	r0, r9
40017ea8:	caffffee 	bgt	40017e68 <CyU3PDmaMultiChannelCreate+0x2cc>
40017eac:	ea00005d 	b	40018028 <CyU3PDmaMultiChannelCreate+0x48c>
40017eb0:	e1d601b6 	ldrh	r0, [r6, #22]
40017eb4:	e3500000 	cmp	r0, #0
40017eb8:	0a000001 	beq	40017ec4 <CyU3PDmaMultiChannelCreate+0x328>
40017ebc:	e3a00040 	mov	r0, #64	; 0x40
40017ec0:	eaffff3c 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017ec4:	e3a09000 	mov	r9, #0
40017ec8:	ea00002b 	b	40017f7c <CyU3PDmaMultiChannelCreate+0x3e0>
40017ecc:	e286000e 	add	r0, r6, #14
40017ed0:	e0800089 	add	r0, r0, r9, lsl #1
40017ed4:	e1d000b0 	ldrh	r0, [r0]
40017ed8:	e3a0103f 	mov	r1, #63	; 0x3f
40017edc:	e0018440 	and	r8, r1, r0, asr #8
40017ee0:	e286000e 	add	r0, r6, #14
40017ee4:	e0800089 	add	r0, r0, r9, lsl #1
40017ee8:	e1d000b0 	ldrh	r0, [r0]
40017eec:	e20070ff 	and	r7, r0, #255	; 0xff
40017ef0:	e286100e 	add	r1, r6, #14
40017ef4:	e0811089 	add	r1, r1, r9, lsl #1
40017ef8:	e1d100b0 	ldrh	r0, [r1]
40017efc:	ebfff32d 	bl	40014bb8 <CyU3PDmaSocketIsValidConsumer>
40017f00:	e3500000 	cmp	r0, #0
40017f04:	1a000001 	bne	40017f10 <CyU3PDmaMultiChannelCreate+0x374>
40017f08:	e3a00040 	mov	r0, #64	; 0x40
40017f0c:	eaffff29 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017f10:	e59f03bc 	ldr	r0, [pc, #956]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40017f14:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017f18:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017f1c:	e3500000 	cmp	r0, #0
40017f20:	0a000001 	beq	40017f2c <CyU3PDmaMultiChannelCreate+0x390>
40017f24:	e3a00040 	mov	r0, #64	; 0x40
40017f28:	eaffff22 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017f2c:	e2890001 	add	r0, r9, #1
40017f30:	e200a0ff 	and	sl, r0, #255	; 0xff
40017f34:	ea00000b 	b	40017f68 <CyU3PDmaMultiChannelCreate+0x3cc>
40017f38:	e286000e 	add	r0, r6, #14
40017f3c:	e0800089 	add	r0, r0, r9, lsl #1
40017f40:	e1d000b0 	ldrh	r0, [r0]
40017f44:	e286100e 	add	r1, r6, #14
40017f48:	e081108a 	add	r1, r1, sl, lsl #1
40017f4c:	e1d110b0 	ldrh	r1, [r1]
40017f50:	e1500001 	cmp	r0, r1
40017f54:	1a000001 	bne	40017f60 <CyU3PDmaMultiChannelCreate+0x3c4>
40017f58:	e3a00040 	mov	r0, #64	; 0x40
40017f5c:	eaffff15 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017f60:	e28a0001 	add	r0, sl, #1
40017f64:	e200a0ff 	and	sl, r0, #255	; 0xff
40017f68:	e1d600b4 	ldrh	r0, [r6, #4]
40017f6c:	e150000a 	cmp	r0, sl
40017f70:	cafffff0 	bgt	40017f38 <CyU3PDmaMultiChannelCreate+0x39c>
40017f74:	e2890001 	add	r0, r9, #1
40017f78:	e20090ff 	and	r9, r0, #255	; 0xff
40017f7c:	e1d600b4 	ldrh	r0, [r6, #4]
40017f80:	e1500009 	cmp	r0, r9
40017f84:	caffffd0 	bgt	40017ecc <CyU3PDmaMultiChannelCreate+0x330>
40017f88:	e1d600b6 	ldrh	r0, [r6, #6]
40017f8c:	e3a0103f 	mov	r1, #63	; 0x3f
40017f90:	e0018440 	and	r8, r1, r0, asr #8
40017f94:	e1d600b6 	ldrh	r0, [r6, #6]
40017f98:	e20070ff 	and	r7, r0, #255	; 0xff
40017f9c:	e1d600b6 	ldrh	r0, [r6, #6]
40017fa0:	ebfff33c 	bl	40014c98 <CyU3PDmaSocketIsValidProducer>
40017fa4:	e3500000 	cmp	r0, #0
40017fa8:	1a000001 	bne	40017fb4 <CyU3PDmaMultiChannelCreate+0x418>
40017fac:	e3a00040 	mov	r0, #64	; 0x40
40017fb0:	eaffff00 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017fb4:	e59f0318 	ldr	r0, [pc, #792]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40017fb8:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017fbc:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40017fc0:	e3500000 	cmp	r0, #0
40017fc4:	0a000001 	beq	40017fd0 <CyU3PDmaMultiChannelCreate+0x434>
40017fc8:	e3a00040 	mov	r0, #64	; 0x40
40017fcc:	eafffef9 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
40017fd0:	e59f02fc 	ldr	r0, [pc, #764]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40017fd4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40017fd8:	e7804107 	str	r4, [r0, r7, lsl #2]
40017fdc:	e3a09000 	mov	r9, #0
40017fe0:	ea00000d 	b	4001801c <CyU3PDmaMultiChannelCreate+0x480>
40017fe4:	e286000e 	add	r0, r6, #14
40017fe8:	e0800089 	add	r0, r0, r9, lsl #1
40017fec:	e1d000b0 	ldrh	r0, [r0]
40017ff0:	e3a0103f 	mov	r1, #63	; 0x3f
40017ff4:	e0018440 	and	r8, r1, r0, asr #8
40017ff8:	e286000e 	add	r0, r6, #14
40017ffc:	e0800089 	add	r0, r0, r9, lsl #1
40018000:	e1d000b0 	ldrh	r0, [r0]
40018004:	e20070ff 	and	r7, r0, #255	; 0xff
40018008:	e59f02c4 	ldr	r0, [pc, #708]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
4001800c:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018010:	e7804107 	str	r4, [r0, r7, lsl #2]
40018014:	e2890001 	add	r0, r9, #1
40018018:	e20090ff 	and	r9, r0, #255	; 0xff
4001801c:	e1d600b4 	ldrh	r0, [r6, #4]
40018020:	e1500009 	cmp	r0, r9
40018024:	caffffee 	bgt	40017fe4 <CyU3PDmaMultiChannelCreate+0x448>
40018028:	e1c450b4 	strh	r5, [r4, #4]
4001802c:	e1d600b0 	ldrh	r0, [r6]
40018030:	e1c400b6 	strh	r0, [r4, #6]
40018034:	e1d600b2 	ldrh	r0, [r6, #2]
40018038:	e1c400b8 	strh	r0, [r4, #8]
4001803c:	e1d601b6 	ldrh	r0, [r6, #22]
40018040:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
40018044:	e1d600b4 	ldrh	r0, [r6, #4]
40018048:	e1c400ba 	strh	r0, [r4, #10]
4001804c:	e3a09000 	mov	r9, #0
40018050:	ea000014 	b	400180a8 <CyU3PDmaMultiChannelCreate+0x50c>
40018054:	e2860006 	add	r0, r6, #6
40018058:	e0800089 	add	r0, r0, r9, lsl #1
4001805c:	e1d000b0 	ldrh	r0, [r0]
40018060:	e2841024 	add	r1, r4, #36	; 0x24
40018064:	e0811089 	add	r1, r1, r9, lsl #1
40018068:	e1c100b0 	strh	r0, [r1]
4001806c:	e286000e 	add	r0, r6, #14
40018070:	e0800089 	add	r0, r0, r9, lsl #1
40018074:	e1d000b0 	ldrh	r0, [r0]
40018078:	e284102c 	add	r1, r4, #44	; 0x2c
4001807c:	e0811089 	add	r1, r1, r9, lsl #1
40018080:	e1c100b0 	strh	r0, [r1]
40018084:	e3a00000 	mov	r0, #0
40018088:	e284105c 	add	r1, r4, #92	; 0x5c
4001808c:	e0811089 	add	r1, r1, r9, lsl #1
40018090:	e1c100b0 	strh	r0, [r1]
40018094:	e2841064 	add	r1, r4, #100	; 0x64
40018098:	e0811089 	add	r1, r1, r9, lsl #1
4001809c:	e1c100b0 	strh	r0, [r1]
400180a0:	e2890001 	add	r0, r9, #1
400180a4:	e20090ff 	and	r9, r0, #255	; 0xff
400180a8:	e3590004 	cmp	r9, #4
400180ac:	baffffe8 	blt	40018054 <CyU3PDmaMultiChannelCreate+0x4b8>
400180b0:	e1d601b8 	ldrh	r0, [r6, #24]
400180b4:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
400180b8:	e1d601ba 	ldrh	r0, [r6, #26]
400180bc:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
400180c0:	e1d601bc 	ldrh	r0, [r6, #28]
400180c4:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
400180c8:	e5d6001e 	ldrb	r0, [r6, #30]
400180cc:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
400180d0:	e5960020 	ldr	r0, [r6, #32]
400180d4:	e584006c 	str	r0, [r4, #108]	; 0x6c
400180d8:	e3a03038 	mov	r3, #56	; 0x38
400180dc:	e3a02000 	mov	r2, #0
400180e0:	e1a01002 	mov	r1, r2
400180e4:	e2840078 	add	r0, r4, #120	; 0x78
400180e8:	ebffc747 	bl	40009e0c <_txe_mutex_create>
400180ec:	e3a02028 	mov	r2, #40	; 0x28
400180f0:	e3a01000 	mov	r1, #0
400180f4:	e28400b0 	add	r0, r4, #176	; 0xb0
400180f8:	ebffc689 	bl	40009b24 <_txe_event_flags_create>
400180fc:	e5960024 	ldr	r0, [r6, #36]	; 0x24
40018100:	e58400d8 	str	r0, [r4, #216]	; 0xd8
40018104:	e59f01cc 	ldr	r0, [pc, #460]	; 400182d8 <CyU3PDmaMultiChannelCreate+0x73c>
40018108:	e5900000 	ldr	r0, [r0]
4001810c:	e5840074 	str	r0, [r4, #116]	; 0x74
40018110:	e2450005 	sub	r0, r5, #5
40018114:	e3500005 	cmp	r0, #5
40018118:	308ff100 	addcc	pc, pc, r0, lsl #2
4001811c:	ea00001d 	b	40018198 <CyU3PDmaMultiChannelCreate+0x5fc>
40018120:	ea000003 	b	40018134 <CyU3PDmaMultiChannelCreate+0x598>
40018124:	ea000008 	b	4001814c <CyU3PDmaMultiChannelCreate+0x5b0>
40018128:	ea000003 	b	4001813c <CyU3PDmaMultiChannelCreate+0x5a0>
4001812c:	ea000008 	b	40018154 <CyU3PDmaMultiChannelCreate+0x5b8>
40018130:	ea00000b 	b	40018164 <CyU3PDmaMultiChannelCreate+0x5c8>
40018134:	e1a00000 	nop			; (mov r0, r0)
40018138:	e1a00000 	nop			; (mov r0, r0)
4001813c:	e1a00004 	mov	r0, r4
40018140:	ebfffd1c 	bl	400175b8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
40018144:	e1a0b000 	mov	fp, r0
40018148:	ea000015 	b	400181a4 <CyU3PDmaMultiChannelCreate+0x608>
4001814c:	e1a00000 	nop			; (mov r0, r0)
40018150:	e1a00000 	nop			; (mov r0, r0)
40018154:	e1a00004 	mov	r0, r4
40018158:	ebfffdd1 	bl	400178a4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
4001815c:	e1a0b000 	mov	fp, r0
40018160:	ea00000f 	b	400181a4 <CyU3PDmaMultiChannelCreate+0x608>
40018164:	e1a00000 	nop			; (mov r0, r0)
40018168:	e59f016c 	ldr	r0, [pc, #364]	; 400182dc <CyU3PDmaMultiChannelCreate+0x740>
4001816c:	e5900000 	ldr	r0, [r0]
40018170:	e3500000 	cmp	r0, #0
40018174:	1a000001 	bne	40018180 <CyU3PDmaMultiChannelCreate+0x5e4>
40018178:	e3a0b047 	mov	fp, #71	; 0x47
4001817c:	ea000004 	b	40018194 <CyU3PDmaMultiChannelCreate+0x5f8>
40018180:	e1a00004 	mov	r0, r4
40018184:	e59f1150 	ldr	r1, [pc, #336]	; 400182dc <CyU3PDmaMultiChannelCreate+0x740>
40018188:	e5911000 	ldr	r1, [r1]
4001818c:	e12fff31 	blx	r1
40018190:	e1a0b000 	mov	fp, r0
40018194:	ea000002 	b	400181a4 <CyU3PDmaMultiChannelCreate+0x608>
40018198:	e1a00000 	nop			; (mov r0, r0)
4001819c:	e3a0b040 	mov	fp, #64	; 0x40
400181a0:	e1a00000 	nop			; (mov r0, r0)
400181a4:	e1a00000 	nop			; (mov r0, r0)
400181a8:	e35b0000 	cmp	fp, #0
400181ac:	1a000002 	bne	400181bc <CyU3PDmaMultiChannelCreate+0x620>
400181b0:	e3a00001 	mov	r0, #1
400181b4:	e5840000 	str	r0, [r4]
400181b8:	ea000042 	b	400182c8 <CyU3PDmaMultiChannelCreate+0x72c>
400181bc:	e2840078 	add	r0, r4, #120	; 0x78
400181c0:	ebffc76f 	bl	40009f84 <_txe_mutex_delete>
400181c4:	e28400b0 	add	r0, r4, #176	; 0xb0
400181c8:	ebffc6a5 	bl	40009c64 <_txe_event_flags_delete>
400181cc:	e3550005 	cmp	r5, #5
400181d0:	0a000001 	beq	400181dc <CyU3PDmaMultiChannelCreate+0x640>
400181d4:	e3550007 	cmp	r5, #7
400181d8:	1a00001d 	bne	40018254 <CyU3PDmaMultiChannelCreate+0x6b8>
400181dc:	e1d600be 	ldrh	r0, [r6, #14]
400181e0:	e3a0103f 	mov	r1, #63	; 0x3f
400181e4:	e0018440 	and	r8, r1, r0, asr #8
400181e8:	e1d600be 	ldrh	r0, [r6, #14]
400181ec:	e20070ff 	and	r7, r0, #255	; 0xff
400181f0:	e3a00000 	mov	r0, #0
400181f4:	e59f10d8 	ldr	r1, [pc, #216]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
400181f8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400181fc:	e7810107 	str	r0, [r1, r7, lsl #2]
40018200:	e3a09000 	mov	r9, #0
40018204:	ea00000e 	b	40018244 <CyU3PDmaMultiChannelCreate+0x6a8>
40018208:	e2860006 	add	r0, r6, #6
4001820c:	e0800089 	add	r0, r0, r9, lsl #1
40018210:	e1d000b0 	ldrh	r0, [r0]
40018214:	e3a0103f 	mov	r1, #63	; 0x3f
40018218:	e0018440 	and	r8, r1, r0, asr #8
4001821c:	e2860006 	add	r0, r6, #6
40018220:	e0800089 	add	r0, r0, r9, lsl #1
40018224:	e1d000b0 	ldrh	r0, [r0]
40018228:	e20070ff 	and	r7, r0, #255	; 0xff
4001822c:	e3a00000 	mov	r0, #0
40018230:	e59f109c 	ldr	r1, [pc, #156]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40018234:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018238:	e7810107 	str	r0, [r1, r7, lsl #2]
4001823c:	e2890001 	add	r0, r9, #1
40018240:	e20090ff 	and	r9, r0, #255	; 0xff
40018244:	e1d600b4 	ldrh	r0, [r6, #4]
40018248:	e1500009 	cmp	r0, r9
4001824c:	caffffed 	bgt	40018208 <CyU3PDmaMultiChannelCreate+0x66c>
40018250:	ea00001c 	b	400182c8 <CyU3PDmaMultiChannelCreate+0x72c>
40018254:	e1d600b6 	ldrh	r0, [r6, #6]
40018258:	e3a0103f 	mov	r1, #63	; 0x3f
4001825c:	e0018440 	and	r8, r1, r0, asr #8
40018260:	e1d600b6 	ldrh	r0, [r6, #6]
40018264:	e20070ff 	and	r7, r0, #255	; 0xff
40018268:	e3a00000 	mov	r0, #0
4001826c:	e59f1060 	ldr	r1, [pc, #96]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
40018270:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018274:	e7810107 	str	r0, [r1, r7, lsl #2]
40018278:	e3a09000 	mov	r9, #0
4001827c:	ea00000e 	b	400182bc <CyU3PDmaMultiChannelCreate+0x720>
40018280:	e286000e 	add	r0, r6, #14
40018284:	e0800089 	add	r0, r0, r9, lsl #1
40018288:	e1d000b0 	ldrh	r0, [r0]
4001828c:	e3a0103f 	mov	r1, #63	; 0x3f
40018290:	e0018440 	and	r8, r1, r0, asr #8
40018294:	e286000e 	add	r0, r6, #14
40018298:	e0800089 	add	r0, r0, r9, lsl #1
4001829c:	e1d000b0 	ldrh	r0, [r0]
400182a0:	e20070ff 	and	r7, r0, #255	; 0xff
400182a4:	e3a00000 	mov	r0, #0
400182a8:	e59f1024 	ldr	r1, [pc, #36]	; 400182d4 <CyU3PDmaMultiChannelCreate+0x738>
400182ac:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400182b0:	e7810107 	str	r0, [r1, r7, lsl #2]
400182b4:	e2890001 	add	r0, r9, #1
400182b8:	e20090ff 	and	r9, r0, #255	; 0xff
400182bc:	e1d600b4 	ldrh	r0, [r6, #4]
400182c0:	e1500009 	cmp	r0, r9
400182c4:	caffffed 	bgt	40018280 <CyU3PDmaMultiChannelCreate+0x6e4>
400182c8:	e1a0000b 	mov	r0, fp
400182cc:	eafffe39 	b	40017bb8 <CyU3PDmaMultiChannelCreate+0x1c>
400182d0:	0000fff0 	.word	0x0000fff0
400182d4:	40030d00 	.word	0x40030d00
400182d8:	40030c64 	.word	0x40030c64
400182dc:	40030cec 	.word	0x40030cec

Disassembly of section i.CyU3PDmaMultiChannelReset:

400182e0 <CyU3PDmaMultiChannelReset>:
400182e0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400182e4:	e1a04000 	mov	r4, r0
400182e8:	e3e01000 	mvn	r1, #0
400182ec:	e1a00004 	mov	r0, r4
400182f0:	ebfffbab 	bl	400171a4 <CyU3PDmaMultiChannelAcquireLock>
400182f4:	e1a06000 	mov	r6, r0
400182f8:	e3560000 	cmp	r6, #0
400182fc:	0a000001 	beq	40018308 <CyU3PDmaMultiChannelReset+0x28>
40018300:	e1a00006 	mov	r0, r6
40018304:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40018308:	e1d400b4 	ldrh	r0, [r4, #4]
4001830c:	e2400005 	sub	r0, r0, #5
40018310:	e3500005 	cmp	r0, #5
40018314:	308ff100 	addcc	pc, pc, r0, lsl #2
40018318:	ea00001a 	b	40018388 <CyU3PDmaMultiChannelReset+0xa8>
4001831c:	ea000003 	b	40018330 <CyU3PDmaMultiChannelReset+0x50>
40018320:	ea000007 	b	40018344 <CyU3PDmaMultiChannelReset+0x64>
40018324:	ea000003 	b	40018338 <CyU3PDmaMultiChannelReset+0x58>
40018328:	ea000007 	b	4001834c <CyU3PDmaMultiChannelReset+0x6c>
4001832c:	ea000009 	b	40018358 <CyU3PDmaMultiChannelReset+0x78>
40018330:	e1a00000 	nop			; (mov r0, r0)
40018334:	e1a00000 	nop			; (mov r0, r0)
40018338:	e1a00004 	mov	r0, r4
4001833c:	eb00003c 	bl	40018434 <CyU3PDmaMultiChannelReset_TypeManyToOne>
40018340:	ea000012 	b	40018390 <CyU3PDmaMultiChannelReset+0xb0>
40018344:	e1a00000 	nop			; (mov r0, r0)
40018348:	e1a00000 	nop			; (mov r0, r0)
4001834c:	e1a00004 	mov	r0, r4
40018350:	eb000083 	bl	40018564 <CyU3PDmaMultiChannelReset_TypeOneToMany>
40018354:	ea00000d 	b	40018390 <CyU3PDmaMultiChannelReset+0xb0>
40018358:	e1a00000 	nop			; (mov r0, r0)
4001835c:	e59f00cc 	ldr	r0, [pc, #204]	; 40018430 <CyU3PDmaMultiChannelReset+0x150>
40018360:	e5900000 	ldr	r0, [r0]
40018364:	e3500000 	cmp	r0, #0
40018368:	1a000001 	bne	40018374 <CyU3PDmaMultiChannelReset+0x94>
4001836c:	e3a00047 	mov	r0, #71	; 0x47
40018370:	eaffffe3 	b	40018304 <CyU3PDmaMultiChannelReset+0x24>
40018374:	e1a00004 	mov	r0, r4
40018378:	e59f10b0 	ldr	r1, [pc, #176]	; 40018430 <CyU3PDmaMultiChannelReset+0x150>
4001837c:	e5911000 	ldr	r1, [r1]
40018380:	e12fff31 	blx	r1
40018384:	ea000001 	b	40018390 <CyU3PDmaMultiChannelReset+0xb0>
40018388:	e1a00000 	nop			; (mov r0, r0)
4001838c:	e1a00000 	nop			; (mov r0, r0)
40018390:	e1a00000 	nop			; (mov r0, r0)
40018394:	ebffc105 	bl	400087b0 <_tx_thread_identify>
40018398:	e1a05000 	mov	r5, r0
4001839c:	e3550000 	cmp	r5, #0
400183a0:	0a000003 	beq	400183b4 <CyU3PDmaMultiChannelReset+0xd4>
400183a4:	e1a0200d 	mov	r2, sp
400183a8:	e3a01002 	mov	r1, #2
400183ac:	e1a00005 	mov	r0, r5
400183b0:	ebffc90c 	bl	4000a7e8 <_txe_thread_priority_change>
400183b4:	e3a02002 	mov	r2, #2
400183b8:	e3e01047 	mvn	r1, #71	; 0x47
400183bc:	e28400b0 	add	r0, r4, #176	; 0xb0
400183c0:	ebffc677 	bl	40009da4 <_txe_event_flags_set>
400183c4:	e3a02000 	mov	r2, #0
400183c8:	e3a01020 	mov	r1, #32
400183cc:	e28400b0 	add	r0, r4, #176	; 0xb0
400183d0:	ebffc673 	bl	40009da4 <_txe_event_flags_set>
400183d4:	e3a00001 	mov	r0, #1
400183d8:	e5840000 	str	r0, [r4]
400183dc:	e2840078 	add	r0, r4, #120	; 0x78
400183e0:	ebffc73c 	bl	4000a0d8 <_txe_mutex_put>
400183e4:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
400183e8:	e3500000 	cmp	r0, #0
400183ec:	0a000007 	beq	40018410 <CyU3PDmaMultiChannelReset+0x130>
400183f0:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
400183f4:	e3100020 	tst	r0, #32
400183f8:	0a000004 	beq	40018410 <CyU3PDmaMultiChannelReset+0x130>
400183fc:	e3a02000 	mov	r2, #0
40018400:	e3a01020 	mov	r1, #32
40018404:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
40018408:	e1a00004 	mov	r0, r4
4001840c:	e12fff33 	blx	r3
40018410:	e3550000 	cmp	r5, #0
40018414:	0a000003 	beq	40018428 <CyU3PDmaMultiChannelReset+0x148>
40018418:	e1a0200d 	mov	r2, sp
4001841c:	e1a00005 	mov	r0, r5
40018420:	e59d1000 	ldr	r1, [sp]
40018424:	ebffc8ef 	bl	4000a7e8 <_txe_thread_priority_change>
40018428:	e3a00000 	mov	r0, #0
4001842c:	eaffffb4 	b	40018304 <CyU3PDmaMultiChannelReset+0x24>
40018430:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

40018434 <CyU3PDmaMultiChannelReset_TypeManyToOne>:
40018434:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018438:	e1a04000 	mov	r4, r0
4001843c:	e1a00004 	mov	r0, r4
40018440:	eb000215 	bl	40018c9c <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40018444:	e1d451bc 	ldrh	r5, [r4, #28]
40018448:	e1d400b8 	ldrh	r0, [r4, #8]
4001844c:	e1d410ba 	ldrh	r1, [r4, #10]
40018450:	e0000091 	mul	r0, r1, r0
40018454:	e1a06800 	lsl	r6, r0, #16
40018458:	e1a06826 	lsr	r6, r6, #16
4001845c:	ea00000c 	b	40018494 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
40018460:	e1a0100d 	mov	r1, sp
40018464:	e1a00005 	mov	r0, r5
40018468:	eb002808 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001846c:	e59d000c 	ldr	r0, [sp, #12]
40018470:	e59f10e4 	ldr	r1, [pc, #228]	; 4001855c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018474:	e0000001 	and	r0, r0, r1
40018478:	e58d000c 	str	r0, [sp, #12]
4001847c:	e1a0100d 	mov	r1, sp
40018480:	e1a00005 	mov	r0, r5
40018484:	eb00281c 	bl	400224fc <CyU3PDmaDscrSetConfig>
40018488:	e59d0008 	ldr	r0, [sp, #8]
4001848c:	e1a05800 	lsl	r5, r0, #16
40018490:	e1a05825 	lsr	r5, r5, #16
40018494:	e1b00006 	movs	r0, r6
40018498:	e2461001 	sub	r1, r6, #1
4001849c:	e1a06801 	lsl	r6, r1, #16
400184a0:	e1a06826 	lsr	r6, r6, #16
400184a4:	1affffed 	bne	40018460 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
400184a8:	e1d400b4 	ldrh	r0, [r4, #4]
400184ac:	e3500007 	cmp	r0, #7
400184b0:	1a000021 	bne	4001853c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
400184b4:	e3a07000 	mov	r7, #0
400184b8:	ea00001c 	b	40018530 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
400184bc:	e2840014 	add	r0, r4, #20
400184c0:	e0800087 	add	r0, r0, r7, lsl #1
400184c4:	e1d000b0 	ldrh	r0, [r0]
400184c8:	e284103e 	add	r1, r4, #62	; 0x3e
400184cc:	e0811087 	add	r1, r1, r7, lsl #1
400184d0:	e1c100b0 	strh	r0, [r1]
400184d4:	e1a05000 	mov	r5, r0
400184d8:	e3a06000 	mov	r6, #0
400184dc:	ea00000e 	b	4001851c <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
400184e0:	e1a0100d 	mov	r1, sp
400184e4:	e1a00005 	mov	r0, r5
400184e8:	eb0027e8 	bl	40022490 <CyU3PDmaDscrGetConfig>
400184ec:	e59d000c 	ldr	r0, [sp, #12]
400184f0:	e59f1064 	ldr	r1, [pc, #100]	; 4001855c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400184f4:	e0000001 	and	r0, r0, r1
400184f8:	e58d000c 	str	r0, [sp, #12]
400184fc:	e1a0100d 	mov	r1, sp
40018500:	e1a00005 	mov	r0, r5
40018504:	eb0027fc 	bl	400224fc <CyU3PDmaDscrSetConfig>
40018508:	e59d0008 	ldr	r0, [sp, #8]
4001850c:	e59f104c 	ldr	r1, [pc, #76]	; 40018560 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
40018510:	e0015820 	and	r5, r1, r0, lsr #16
40018514:	e2860001 	add	r0, r6, #1
40018518:	e3c06801 	bic	r6, r0, #65536	; 0x10000
4001851c:	e1d400b8 	ldrh	r0, [r4, #8]
40018520:	e1500006 	cmp	r0, r6
40018524:	caffffed 	bgt	400184e0 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
40018528:	e2870001 	add	r0, r7, #1
4001852c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018530:	e1d400ba 	ldrh	r0, [r4, #10]
40018534:	e1500007 	cmp	r0, r7
40018538:	caffffdf 	bgt	400184bc <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
4001853c:	e1d401b4 	ldrh	r0, [r4, #20]
40018540:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018544:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018548:	e1d401bc 	ldrh	r0, [r4, #28]
4001854c:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018550:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018554:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018558:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
4001855c:	0000fff0 	.word	0x0000fff0
40018560:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

40018564 <CyU3PDmaMultiChannelReset_TypeOneToMany>:
40018564:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018568:	e1a04000 	mov	r4, r0
4001856c:	e1a00004 	mov	r0, r4
40018570:	eb000229 	bl	40018e1c <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40018574:	e1d451b4 	ldrh	r5, [r4, #20]
40018578:	e1d400b8 	ldrh	r0, [r4, #8]
4001857c:	e1d410ba 	ldrh	r1, [r4, #10]
40018580:	e0000091 	mul	r0, r1, r0
40018584:	e1a06800 	lsl	r6, r0, #16
40018588:	e1a06826 	lsr	r6, r6, #16
4001858c:	ea00000c 	b	400185c4 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
40018590:	e1a0100d 	mov	r1, sp
40018594:	e1a00005 	mov	r0, r5
40018598:	eb0027bc 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001859c:	e59d000c 	ldr	r0, [sp, #12]
400185a0:	e59f10e4 	ldr	r1, [pc, #228]	; 4001868c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400185a4:	e0000001 	and	r0, r0, r1
400185a8:	e58d000c 	str	r0, [sp, #12]
400185ac:	e1a0100d 	mov	r1, sp
400185b0:	e1a00005 	mov	r0, r5
400185b4:	eb0027d0 	bl	400224fc <CyU3PDmaDscrSetConfig>
400185b8:	e59d0008 	ldr	r0, [sp, #8]
400185bc:	e59f10cc 	ldr	r1, [pc, #204]	; 40018690 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
400185c0:	e0015820 	and	r5, r1, r0, lsr #16
400185c4:	e1b00006 	movs	r0, r6
400185c8:	e2461001 	sub	r1, r6, #1
400185cc:	e1a06801 	lsl	r6, r1, #16
400185d0:	e1a06826 	lsr	r6, r6, #16
400185d4:	1affffed 	bne	40018590 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
400185d8:	e1d400b4 	ldrh	r0, [r4, #4]
400185dc:	e3500008 	cmp	r0, #8
400185e0:	1a000021 	bne	4001866c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
400185e4:	e3a07000 	mov	r7, #0
400185e8:	ea00001c 	b	40018660 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
400185ec:	e284001c 	add	r0, r4, #28
400185f0:	e0800087 	add	r0, r0, r7, lsl #1
400185f4:	e1d000b0 	ldrh	r0, [r0]
400185f8:	e2841046 	add	r1, r4, #70	; 0x46
400185fc:	e0811087 	add	r1, r1, r7, lsl #1
40018600:	e1c100b0 	strh	r0, [r1]
40018604:	e1a05000 	mov	r5, r0
40018608:	e3a06000 	mov	r6, #0
4001860c:	ea00000e 	b	4001864c <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
40018610:	e1a0100d 	mov	r1, sp
40018614:	e1a00005 	mov	r0, r5
40018618:	eb00279c 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001861c:	e59d000c 	ldr	r0, [sp, #12]
40018620:	e59f1064 	ldr	r1, [pc, #100]	; 4001868c <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018624:	e0000001 	and	r0, r0, r1
40018628:	e58d000c 	str	r0, [sp, #12]
4001862c:	e1a0100d 	mov	r1, sp
40018630:	e1a00005 	mov	r0, r5
40018634:	eb0027b0 	bl	400224fc <CyU3PDmaDscrSetConfig>
40018638:	e59d0008 	ldr	r0, [sp, #8]
4001863c:	e1a05800 	lsl	r5, r0, #16
40018640:	e1a05825 	lsr	r5, r5, #16
40018644:	e2860001 	add	r0, r6, #1
40018648:	e3c06801 	bic	r6, r0, #65536	; 0x10000
4001864c:	e1d400b8 	ldrh	r0, [r4, #8]
40018650:	e1500006 	cmp	r0, r6
40018654:	caffffed 	bgt	40018610 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
40018658:	e2870001 	add	r0, r7, #1
4001865c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018660:	e1d400ba 	ldrh	r0, [r4, #10]
40018664:	e1500007 	cmp	r0, r7
40018668:	caffffdf 	bgt	400185ec <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
4001866c:	e1d401b4 	ldrh	r0, [r4, #20]
40018670:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018674:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018678:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
4001867c:	e1d401bc 	ldrh	r0, [r4, #28]
40018680:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018684:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018688:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
4001868c:	0000fff0 	.word	0x0000fff0
40018690:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

40018694 <CyU3PDmaMultiChannelSetXfer>:
40018694:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018698:	e1a04000 	mov	r4, r0
4001869c:	e1a05001 	mov	r5, r1
400186a0:	e1a06002 	mov	r6, r2
400186a4:	e3e01000 	mvn	r1, #0
400186a8:	e1a00004 	mov	r0, r4
400186ac:	ebfffabc 	bl	400171a4 <CyU3PDmaMultiChannelAcquireLock>
400186b0:	e1a07000 	mov	r7, r0
400186b4:	e3570000 	cmp	r7, #0
400186b8:	0a000001 	beq	400186c4 <CyU3PDmaMultiChannelSetXfer+0x30>
400186bc:	e1a00007 	mov	r0, r7
400186c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400186c4:	e5940000 	ldr	r0, [r4]
400186c8:	e3500001 	cmp	r0, #1
400186cc:	0a000000 	beq	400186d4 <CyU3PDmaMultiChannelSetXfer+0x40>
400186d0:	e3a07043 	mov	r7, #67	; 0x43
400186d4:	e1d400ba 	ldrh	r0, [r4, #10]
400186d8:	e1500006 	cmp	r0, r6
400186dc:	ca000000 	bgt	400186e4 <CyU3PDmaMultiChannelSetXfer+0x50>
400186e0:	e3a07040 	mov	r7, #64	; 0x40
400186e4:	e1d400b4 	ldrh	r0, [r4, #4]
400186e8:	e3500009 	cmp	r0, #9
400186ec:	1a000002 	bne	400186fc <CyU3PDmaMultiChannelSetXfer+0x68>
400186f0:	e3560000 	cmp	r6, #0
400186f4:	0a000000 	beq	400186fc <CyU3PDmaMultiChannelSetXfer+0x68>
400186f8:	e3a07040 	mov	r7, #64	; 0x40
400186fc:	e3570000 	cmp	r7, #0
40018700:	1a00002d 	bne	400187bc <CyU3PDmaMultiChannelSetXfer+0x128>
40018704:	e3a02002 	mov	r2, #2
40018708:	e3e01027 	mvn	r1, #39	; 0x27
4001870c:	e28400b0 	add	r0, r4, #176	; 0xb0
40018710:	ebffc5a3 	bl	40009da4 <_txe_event_flags_set>
40018714:	e5845070 	str	r5, [r4, #112]	; 0x70
40018718:	e1d400b4 	ldrh	r0, [r4, #4]
4001871c:	e2400005 	sub	r0, r0, #5
40018720:	e3500005 	cmp	r0, #5
40018724:	308ff100 	addcc	pc, pc, r0, lsl #2
40018728:	ea000020 	b	400187b0 <CyU3PDmaMultiChannelSetXfer+0x11c>
4001872c:	ea000003 	b	40018740 <CyU3PDmaMultiChannelSetXfer+0xac>
40018730:	ea000009 	b	4001875c <CyU3PDmaMultiChannelSetXfer+0xc8>
40018734:	ea000003 	b	40018748 <CyU3PDmaMultiChannelSetXfer+0xb4>
40018738:	ea000009 	b	40018764 <CyU3PDmaMultiChannelSetXfer+0xd0>
4001873c:	ea00000d 	b	40018778 <CyU3PDmaMultiChannelSetXfer+0xe4>
40018740:	e1a00000 	nop			; (mov r0, r0)
40018744:	e1a00000 	nop			; (mov r0, r0)
40018748:	e1a02006 	mov	r2, r6
4001874c:	e1a01005 	mov	r1, r5
40018750:	e1a00004 	mov	r0, r4
40018754:	eb00001d 	bl	400187d0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
40018758:	ea000016 	b	400187b8 <CyU3PDmaMultiChannelSetXfer+0x124>
4001875c:	e1a00000 	nop			; (mov r0, r0)
40018760:	e1a00000 	nop			; (mov r0, r0)
40018764:	e1a02006 	mov	r2, r6
40018768:	e1a01005 	mov	r1, r5
4001876c:	e1a00004 	mov	r0, r4
40018770:	eb0000b2 	bl	40018a40 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
40018774:	ea00000f 	b	400187b8 <CyU3PDmaMultiChannelSetXfer+0x124>
40018778:	e1a00000 	nop			; (mov r0, r0)
4001877c:	e59f0048 	ldr	r0, [pc, #72]	; 400187cc <CyU3PDmaMultiChannelSetXfer+0x138>
40018780:	e5900000 	ldr	r0, [r0]
40018784:	e3500000 	cmp	r0, #0
40018788:	1a000001 	bne	40018794 <CyU3PDmaMultiChannelSetXfer+0x100>
4001878c:	e3a00047 	mov	r0, #71	; 0x47
40018790:	eaffffca 	b	400186c0 <CyU3PDmaMultiChannelSetXfer+0x2c>
40018794:	e1a02006 	mov	r2, r6
40018798:	e1a01005 	mov	r1, r5
4001879c:	e1a00004 	mov	r0, r4
400187a0:	e59f3024 	ldr	r3, [pc, #36]	; 400187cc <CyU3PDmaMultiChannelSetXfer+0x138>
400187a4:	e5933000 	ldr	r3, [r3]
400187a8:	e12fff33 	blx	r3
400187ac:	ea000001 	b	400187b8 <CyU3PDmaMultiChannelSetXfer+0x124>
400187b0:	e1a00000 	nop			; (mov r0, r0)
400187b4:	e1a00000 	nop			; (mov r0, r0)
400187b8:	e1a00000 	nop			; (mov r0, r0)
400187bc:	e2840078 	add	r0, r4, #120	; 0x78
400187c0:	ebffc644 	bl	4000a0d8 <_txe_mutex_put>
400187c4:	e1a00007 	mov	r0, r7
400187c8:	eaffffbc 	b	400186c0 <CyU3PDmaMultiChannelSetXfer+0x2c>
400187cc:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

400187d0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
400187d0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400187d4:	e24dd028 	sub	sp, sp, #40	; 0x28
400187d8:	e1a04000 	mov	r4, r0
400187dc:	e1a05001 	mov	r5, r1
400187e0:	e1a06002 	mov	r6, r2
400187e4:	e3a00002 	mov	r0, #2
400187e8:	e5840000 	str	r0, [r4]
400187ec:	e3a07000 	mov	r7, #0
400187f0:	ea000005 	b	4001880c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
400187f4:	e2841024 	add	r1, r4, #36	; 0x24
400187f8:	e0811087 	add	r1, r1, r7, lsl #1
400187fc:	e1d100b0 	ldrh	r0, [r1]
40018800:	ebfff0ac 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018804:	e2870001 	add	r0, r7, #1
40018808:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001880c:	e1d400ba 	ldrh	r0, [r4, #10]
40018810:	e1500007 	cmp	r0, r7
40018814:	cafffff6 	bgt	400187f4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
40018818:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001881c:	ebfff0a5 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018820:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
40018824:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018828:	ebfff1bd 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
4001882c:	e2840014 	add	r0, r4, #20
40018830:	e0800086 	add	r0, r0, r6, lsl #1
40018834:	e1d000b0 	ldrh	r0, [r0]
40018838:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
4001883c:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018840:	e3a07000 	mov	r7, #0
40018844:	ea000040 	b	4001894c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
40018848:	e2841024 	add	r1, r4, #36	; 0x24
4001884c:	e0811087 	add	r1, r1, r7, lsl #1
40018850:	e1d100b0 	ldrh	r0, [r1]
40018854:	e28d1010 	add	r1, sp, #16
40018858:	ebfff0ae 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001885c:	e3a00000 	mov	r0, #0
40018860:	e58d0014 	str	r0, [sp, #20]
40018864:	e58d0018 	str	r0, [sp, #24]
40018868:	e59d001c 	ldr	r0, [sp, #28]
4001886c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018870:	e58d001c 	str	r0, [sp, #28]
40018874:	e59d001c 	ldr	r0, [sp, #28]
40018878:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
4001887c:	e58d001c 	str	r0, [sp, #28]
40018880:	e59d001c 	ldr	r0, [sp, #28]
40018884:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018888:	e58d001c 	str	r0, [sp, #28]
4001888c:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018890:	e3500001 	cmp	r0, #1
40018894:	1a000003 	bne	400188a8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018898:	e59d001c 	ldr	r0, [sp, #28]
4001889c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400188a0:	e58d001c 	str	r0, [sp, #28]
400188a4:	ea000002 	b	400188b4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
400188a8:	e59d001c 	ldr	r0, [sp, #28]
400188ac:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400188b0:	e58d001c 	str	r0, [sp, #28]
400188b4:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
400188b8:	e3500000 	cmp	r0, #0
400188bc:	0a000006 	beq	400188dc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
400188c0:	e1d400b8 	ldrh	r0, [r4, #8]
400188c4:	e3800b01 	orr	r0, r0, #1024	; 0x400
400188c8:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
400188cc:	e1800281 	orr	r0, r0, r1, lsl #5
400188d0:	e59d101c 	ldr	r1, [sp, #28]
400188d4:	e1800001 	orr	r0, r0, r1
400188d8:	e58d001c 	str	r0, [sp, #28]
400188dc:	e3e00000 	mvn	r0, #0
400188e0:	e58d0020 	str	r0, [sp, #32]
400188e4:	e1570006 	cmp	r7, r6
400188e8:	ba000004 	blt	40018900 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
400188ec:	e2840014 	add	r0, r4, #20
400188f0:	e0800087 	add	r0, r0, r7, lsl #1
400188f4:	e1d000b0 	ldrh	r0, [r0]
400188f8:	e58d0010 	str	r0, [sp, #16]
400188fc:	ea000007 	b	40018920 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018900:	e2841014 	add	r1, r4, #20
40018904:	e0811087 	add	r1, r1, r7, lsl #1
40018908:	e1d100b0 	ldrh	r0, [r1]
4001890c:	e1a0100d 	mov	r1, sp
40018910:	eb0026de 	bl	40022490 <CyU3PDmaDscrGetConfig>
40018914:	e59d0008 	ldr	r0, [sp, #8]
40018918:	e1a00820 	lsr	r0, r0, #16
4001891c:	e58d0010 	str	r0, [sp, #16]
40018920:	e284103e 	add	r1, r4, #62	; 0x3e
40018924:	e0811087 	add	r1, r1, r7, lsl #1
40018928:	e59d0010 	ldr	r0, [sp, #16]
4001892c:	e1c100b0 	strh	r0, [r1]
40018930:	e2841024 	add	r1, r4, #36	; 0x24
40018934:	e0811087 	add	r1, r1, r7, lsl #1
40018938:	e1d100b0 	ldrh	r0, [r1]
4001893c:	e28d1010 	add	r1, sp, #16
40018940:	ebfff11e 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018944:	e2870001 	add	r0, r7, #1
40018948:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001894c:	e1d400ba 	ldrh	r0, [r4, #10]
40018950:	e1500007 	cmp	r0, r7
40018954:	caffffbb 	bgt	40018848 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018958:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001895c:	e28d1010 	add	r1, sp, #16
40018960:	ebfff06c 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40018964:	e58d5014 	str	r5, [sp, #20]
40018968:	e3a00000 	mov	r0, #0
4001896c:	e58d0018 	str	r0, [sp, #24]
40018970:	e3550000 	cmp	r5, #0
40018974:	1a000006 	bne	40018994 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018978:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001897c:	e3c00080 	bic	r0, r0, #128	; 0x80
40018980:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018984:	e59d001c 	ldr	r0, [sp, #28]
40018988:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001898c:	e58d001c 	str	r0, [sp, #28]
40018990:	ea000005 	b	400189ac <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018994:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018998:	e3800080 	orr	r0, r0, #128	; 0x80
4001899c:	e58d0024 	str	r0, [sp, #36]	; 0x24
400189a0:	e59d001c 	ldr	r0, [sp, #28]
400189a4:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400189a8:	e58d001c 	str	r0, [sp, #28]
400189ac:	e59d001c 	ldr	r0, [sp, #28]
400189b0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400189b4:	e58d001c 	str	r0, [sp, #28]
400189b8:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
400189bc:	e3500001 	cmp	r0, #1
400189c0:	1a000003 	bne	400189d4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
400189c4:	e59d001c 	ldr	r0, [sp, #28]
400189c8:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400189cc:	e58d001c 	str	r0, [sp, #28]
400189d0:	ea000002 	b	400189e0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
400189d4:	e59d001c 	ldr	r0, [sp, #28]
400189d8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400189dc:	e58d001c 	str	r0, [sp, #28]
400189e0:	e3e00000 	mvn	r0, #0
400189e4:	e58d0020 	str	r0, [sp, #32]
400189e8:	e1d481bc 	ldrh	r8, [r4, #28]
400189ec:	e3a07000 	mov	r7, #0
400189f0:	ea000007 	b	40018a14 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
400189f4:	e1a0100d 	mov	r1, sp
400189f8:	e1a00008 	mov	r0, r8
400189fc:	eb0026a3 	bl	40022490 <CyU3PDmaDscrGetConfig>
40018a00:	e59d0008 	ldr	r0, [sp, #8]
40018a04:	e1a08800 	lsl	r8, r0, #16
40018a08:	e1a08828 	lsr	r8, r8, #16
40018a0c:	e2870001 	add	r0, r7, #1
40018a10:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a14:	e1570006 	cmp	r7, r6
40018a18:	bafffff5 	blt	400189f4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018a1c:	e58d8010 	str	r8, [sp, #16]
40018a20:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018a24:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018a28:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018a2c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018a30:	e28d1010 	add	r1, sp, #16
40018a34:	ebfff0e1 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018a38:	e28dd028 	add	sp, sp, #40	; 0x28
40018a3c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018a40 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018a40:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018a44:	e24dd028 	sub	sp, sp, #40	; 0x28
40018a48:	e1a04000 	mov	r4, r0
40018a4c:	e1a05001 	mov	r5, r1
40018a50:	e1a06002 	mov	r6, r2
40018a54:	e3a00002 	mov	r0, #2
40018a58:	e5840000 	str	r0, [r4]
40018a5c:	e3a07000 	mov	r7, #0
40018a60:	ea000005 	b	40018a7c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018a64:	e284102c 	add	r1, r4, #44	; 0x2c
40018a68:	e0811087 	add	r1, r1, r7, lsl #1
40018a6c:	e1d100b0 	ldrh	r0, [r1]
40018a70:	ebfff010 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018a74:	e2870001 	add	r0, r7, #1
40018a78:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a7c:	e1d400ba 	ldrh	r0, [r4, #10]
40018a80:	e1500007 	cmp	r0, r7
40018a84:	cafffff6 	bgt	40018a64 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018a88:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a8c:	ebfff009 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018a90:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018a94:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018a98:	ebfff121 	bl	40014f24 <CyU3PDmaUpdateSocketSuspendOption>
40018a9c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018aa0:	e28d1010 	add	r1, sp, #16
40018aa4:	ebfff01b 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40018aa8:	e58d5014 	str	r5, [sp, #20]
40018aac:	e3a00000 	mov	r0, #0
40018ab0:	e58d0018 	str	r0, [sp, #24]
40018ab4:	e3550000 	cmp	r5, #0
40018ab8:	1a000006 	bne	40018ad8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018abc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018ac0:	e3c00080 	bic	r0, r0, #128	; 0x80
40018ac4:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018ac8:	e59d001c 	ldr	r0, [sp, #28]
40018acc:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018ad0:	e58d001c 	str	r0, [sp, #28]
40018ad4:	ea000005 	b	40018af0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018ad8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018adc:	e3800080 	orr	r0, r0, #128	; 0x80
40018ae0:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018ae4:	e59d001c 	ldr	r0, [sp, #28]
40018ae8:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018aec:	e58d001c 	str	r0, [sp, #28]
40018af0:	e59d001c 	ldr	r0, [sp, #28]
40018af4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018af8:	e58d001c 	str	r0, [sp, #28]
40018afc:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018b00:	e3500001 	cmp	r0, #1
40018b04:	1a000003 	bne	40018b18 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018b08:	e59d001c 	ldr	r0, [sp, #28]
40018b0c:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018b10:	e58d001c 	str	r0, [sp, #28]
40018b14:	ea000002 	b	40018b24 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018b18:	e59d001c 	ldr	r0, [sp, #28]
40018b1c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018b20:	e58d001c 	str	r0, [sp, #28]
40018b24:	e3e00000 	mvn	r0, #0
40018b28:	e58d0020 	str	r0, [sp, #32]
40018b2c:	e1d481b4 	ldrh	r8, [r4, #20]
40018b30:	e3a07000 	mov	r7, #0
40018b34:	ea000007 	b	40018b58 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018b38:	e1a0100d 	mov	r1, sp
40018b3c:	e1a00008 	mov	r0, r8
40018b40:	eb002652 	bl	40022490 <CyU3PDmaDscrGetConfig>
40018b44:	e59d0008 	ldr	r0, [sp, #8]
40018b48:	e59f1148 	ldr	r1, [pc, #328]	; 40018c98 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018b4c:	e0018820 	and	r8, r1, r0, lsr #16
40018b50:	e2870001 	add	r0, r7, #1
40018b54:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018b58:	e1570006 	cmp	r7, r6
40018b5c:	bafffff5 	blt	40018b38 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018b60:	e58d8010 	str	r8, [sp, #16]
40018b64:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018b68:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018b6c:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018b70:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018b74:	e28d1010 	add	r1, sp, #16
40018b78:	ebfff090 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018b7c:	e284001c 	add	r0, r4, #28
40018b80:	e0800086 	add	r0, r0, r6, lsl #1
40018b84:	e1d000b0 	ldrh	r0, [r0]
40018b88:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018b8c:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018b90:	e3a07000 	mov	r7, #0
40018b94:	ea00003a 	b	40018c84 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018b98:	e284102c 	add	r1, r4, #44	; 0x2c
40018b9c:	e0811087 	add	r1, r1, r7, lsl #1
40018ba0:	e1d100b0 	ldrh	r0, [r1]
40018ba4:	e28d1010 	add	r1, sp, #16
40018ba8:	ebffefda 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40018bac:	e3a00000 	mov	r0, #0
40018bb0:	e58d0014 	str	r0, [sp, #20]
40018bb4:	e58d0018 	str	r0, [sp, #24]
40018bb8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018bbc:	e3c00080 	bic	r0, r0, #128	; 0x80
40018bc0:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018bc4:	e59d001c 	ldr	r0, [sp, #28]
40018bc8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018bcc:	e58d001c 	str	r0, [sp, #28]
40018bd0:	e59d001c 	ldr	r0, [sp, #28]
40018bd4:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018bd8:	e58d001c 	str	r0, [sp, #28]
40018bdc:	e59d001c 	ldr	r0, [sp, #28]
40018be0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018be4:	e58d001c 	str	r0, [sp, #28]
40018be8:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018bec:	e3500001 	cmp	r0, #1
40018bf0:	1a000003 	bne	40018c04 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40018bf4:	e59d001c 	ldr	r0, [sp, #28]
40018bf8:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018bfc:	e58d001c 	str	r0, [sp, #28]
40018c00:	ea000002 	b	40018c10 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40018c04:	e59d001c 	ldr	r0, [sp, #28]
40018c08:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018c0c:	e58d001c 	str	r0, [sp, #28]
40018c10:	e3e00000 	mvn	r0, #0
40018c14:	e58d0020 	str	r0, [sp, #32]
40018c18:	e1570006 	cmp	r7, r6
40018c1c:	ba000004 	blt	40018c34 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
40018c20:	e284001c 	add	r0, r4, #28
40018c24:	e0800087 	add	r0, r0, r7, lsl #1
40018c28:	e1d000b0 	ldrh	r0, [r0]
40018c2c:	e58d0010 	str	r0, [sp, #16]
40018c30:	ea000008 	b	40018c58 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40018c34:	e284101c 	add	r1, r4, #28
40018c38:	e0811087 	add	r1, r1, r7, lsl #1
40018c3c:	e1d100b0 	ldrh	r0, [r1]
40018c40:	e1a0100d 	mov	r1, sp
40018c44:	eb002611 	bl	40022490 <CyU3PDmaDscrGetConfig>
40018c48:	e59d0008 	ldr	r0, [sp, #8]
40018c4c:	e1a00800 	lsl	r0, r0, #16
40018c50:	e1a00820 	lsr	r0, r0, #16
40018c54:	e58d0010 	str	r0, [sp, #16]
40018c58:	e2841046 	add	r1, r4, #70	; 0x46
40018c5c:	e0811087 	add	r1, r1, r7, lsl #1
40018c60:	e59d0010 	ldr	r0, [sp, #16]
40018c64:	e1c100b0 	strh	r0, [r1]
40018c68:	e284102c 	add	r1, r4, #44	; 0x2c
40018c6c:	e0811087 	add	r1, r1, r7, lsl #1
40018c70:	e1d100b0 	ldrh	r0, [r1]
40018c74:	e28d1010 	add	r1, sp, #16
40018c78:	ebfff050 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018c7c:	e2870001 	add	r0, r7, #1
40018c80:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c84:	e1d400ba 	ldrh	r0, [r4, #10]
40018c88:	e1500007 	cmp	r0, r7
40018c8c:	caffffc1 	bgt	40018b98 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
40018c90:	e28dd028 	add	sp, sp, #40	; 0x28
40018c94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018c98:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

40018c9c <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
40018c9c:	e92d4030 	push	{r4, r5, lr}
40018ca0:	e24dd01c 	sub	sp, sp, #28
40018ca4:	e1a04000 	mov	r4, r0
40018ca8:	e3a05000 	mov	r5, #0
40018cac:	ea000031 	b	40018d78 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
40018cb0:	e2840014 	add	r0, r4, #20
40018cb4:	e0800085 	add	r0, r0, r5, lsl #1
40018cb8:	e1d000b0 	ldrh	r0, [r0]
40018cbc:	e284103e 	add	r1, r4, #62	; 0x3e
40018cc0:	e0811085 	add	r1, r1, r5, lsl #1
40018cc4:	e1c100b0 	strh	r0, [r1]
40018cc8:	e2841024 	add	r1, r4, #36	; 0x24
40018ccc:	e0811085 	add	r1, r1, r5, lsl #1
40018cd0:	e1d100b0 	ldrh	r0, [r1]
40018cd4:	ebffef77 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018cd8:	e2841024 	add	r1, r4, #36	; 0x24
40018cdc:	e0811085 	add	r1, r1, r5, lsl #1
40018ce0:	e1d100b0 	ldrh	r0, [r1]
40018ce4:	e28d1004 	add	r1, sp, #4
40018ce8:	ebffef8a 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40018cec:	e2840014 	add	r0, r4, #20
40018cf0:	e0800085 	add	r0, r0, r5, lsl #1
40018cf4:	e1d000b0 	ldrh	r0, [r0]
40018cf8:	e58d0004 	str	r0, [sp, #4]
40018cfc:	e3a00000 	mov	r0, #0
40018d00:	e58d0008 	str	r0, [sp, #8]
40018d04:	e58d000c 	str	r0, [sp, #12]
40018d08:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018d0c:	e58d0010 	str	r0, [sp, #16]
40018d10:	e2841024 	add	r1, r4, #36	; 0x24
40018d14:	e0811085 	add	r1, r1, r5, lsl #1
40018d18:	e1d100b0 	ldrh	r0, [r1]
40018d1c:	eb0006a3 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
40018d20:	e3500000 	cmp	r0, #0
40018d24:	0a000002 	beq	40018d34 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40018d28:	e59d0010 	ldr	r0, [sp, #16]
40018d2c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018d30:	e58d0010 	str	r0, [sp, #16]
40018d34:	e3e00000 	mvn	r0, #0
40018d38:	e58d0014 	str	r0, [sp, #20]
40018d3c:	e1d400b4 	ldrh	r0, [r4, #4]
40018d40:	e3500005 	cmp	r0, #5
40018d44:	1a000002 	bne	40018d54 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40018d48:	e3a00040 	mov	r0, #64	; 0x40
40018d4c:	e58d0018 	str	r0, [sp, #24]
40018d50:	ea000001 	b	40018d5c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40018d54:	e3a00041 	mov	r0, #65	; 0x41
40018d58:	e58d0018 	str	r0, [sp, #24]
40018d5c:	e2841024 	add	r1, r4, #36	; 0x24
40018d60:	e0811085 	add	r1, r1, r5, lsl #1
40018d64:	e1d100b0 	ldrh	r0, [r1]
40018d68:	e28d1004 	add	r1, sp, #4
40018d6c:	ebfff013 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018d70:	e2850001 	add	r0, r5, #1
40018d74:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018d78:	e1d400ba 	ldrh	r0, [r4, #10]
40018d7c:	e1500005 	cmp	r0, r5
40018d80:	caffffca 	bgt	40018cb0 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
40018d84:	e1d401bc 	ldrh	r0, [r4, #28]
40018d88:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
40018d8c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d90:	ebffef48 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018d94:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d98:	e28d1004 	add	r1, sp, #4
40018d9c:	ebffef5d 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40018da0:	e1d401bc 	ldrh	r0, [r4, #28]
40018da4:	e58d0004 	str	r0, [sp, #4]
40018da8:	e3a00000 	mov	r0, #0
40018dac:	e58d0008 	str	r0, [sp, #8]
40018db0:	e58d000c 	str	r0, [sp, #12]
40018db4:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018db8:	e58d0010 	str	r0, [sp, #16]
40018dbc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018dc0:	eb00067a 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
40018dc4:	e3500000 	cmp	r0, #0
40018dc8:	0a000002 	beq	40018dd8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
40018dcc:	e59d0010 	ldr	r0, [sp, #16]
40018dd0:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018dd4:	e58d0010 	str	r0, [sp, #16]
40018dd8:	e3e00000 	mvn	r0, #0
40018ddc:	e58d0014 	str	r0, [sp, #20]
40018de0:	e1d400b4 	ldrh	r0, [r4, #4]
40018de4:	e3500005 	cmp	r0, #5
40018de8:	1a000002 	bne	40018df8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40018dec:	e3a000c0 	mov	r0, #192	; 0xc0
40018df0:	e58d0018 	str	r0, [sp, #24]
40018df4:	ea000001 	b	40018e00 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40018df8:	e3a000c2 	mov	r0, #194	; 0xc2
40018dfc:	e58d0018 	str	r0, [sp, #24]
40018e00:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e04:	e28d1004 	add	r1, sp, #4
40018e08:	ebffefec 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018e0c:	e3a00000 	mov	r0, #0
40018e10:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40018e14:	e28dd01c 	add	sp, sp, #28
40018e18:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40018e1c <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40018e1c:	e92d4030 	push	{r4, r5, lr}
40018e20:	e24dd01c 	sub	sp, sp, #28
40018e24:	e1a04000 	mov	r4, r0
40018e28:	e1d401b4 	ldrh	r0, [r4, #20]
40018e2c:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018e30:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e34:	ebffef1f 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018e38:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e3c:	e28d1004 	add	r1, sp, #4
40018e40:	ebffef34 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40018e44:	e1d401b4 	ldrh	r0, [r4, #20]
40018e48:	e58d0004 	str	r0, [sp, #4]
40018e4c:	e3a00000 	mov	r0, #0
40018e50:	e58d0008 	str	r0, [sp, #8]
40018e54:	e58d000c 	str	r0, [sp, #12]
40018e58:	e3a00646 	mov	r0, #73400320	; 0x4600000
40018e5c:	e58d0010 	str	r0, [sp, #16]
40018e60:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018e64:	eb000651 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
40018e68:	e3500000 	cmp	r0, #0
40018e6c:	0a000002 	beq	40018e7c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
40018e70:	e59d0010 	ldr	r0, [sp, #16]
40018e74:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018e78:	e58d0010 	str	r0, [sp, #16]
40018e7c:	e3e00000 	mvn	r0, #0
40018e80:	e58d0014 	str	r0, [sp, #20]
40018e84:	e1d400b4 	ldrh	r0, [r4, #4]
40018e88:	e3500006 	cmp	r0, #6
40018e8c:	1a000002 	bne	40018e9c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
40018e90:	e3a000c0 	mov	r0, #192	; 0xc0
40018e94:	e58d0018 	str	r0, [sp, #24]
40018e98:	ea000001 	b	40018ea4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
40018e9c:	e3a000c1 	mov	r0, #193	; 0xc1
40018ea0:	e58d0018 	str	r0, [sp, #24]
40018ea4:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ea8:	e28d1004 	add	r1, sp, #4
40018eac:	ebffefc3 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018eb0:	e3a05000 	mov	r5, #0
40018eb4:	ea000035 	b	40018f90 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
40018eb8:	e284001c 	add	r0, r4, #28
40018ebc:	e0800085 	add	r0, r0, r5, lsl #1
40018ec0:	e1d000b0 	ldrh	r0, [r0]
40018ec4:	e2841046 	add	r1, r4, #70	; 0x46
40018ec8:	e0811085 	add	r1, r1, r5, lsl #1
40018ecc:	e1c100b0 	strh	r0, [r1]
40018ed0:	e284102c 	add	r1, r4, #44	; 0x2c
40018ed4:	e0811085 	add	r1, r1, r5, lsl #1
40018ed8:	e1d100b0 	ldrh	r0, [r1]
40018edc:	ebffeef5 	bl	40014ab8 <CyU3PDmaSocketDisable>
40018ee0:	e284102c 	add	r1, r4, #44	; 0x2c
40018ee4:	e0811085 	add	r1, r1, r5, lsl #1
40018ee8:	e1d100b0 	ldrh	r0, [r1]
40018eec:	e28d1004 	add	r1, sp, #4
40018ef0:	ebffef08 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40018ef4:	e284001c 	add	r0, r4, #28
40018ef8:	e0800085 	add	r0, r0, r5, lsl #1
40018efc:	e1d000b0 	ldrh	r0, [r0]
40018f00:	e58d0004 	str	r0, [sp, #4]
40018f04:	e3a00000 	mov	r0, #0
40018f08:	e58d0008 	str	r0, [sp, #8]
40018f0c:	e58d000c 	str	r0, [sp, #12]
40018f10:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40018f14:	e58d0010 	str	r0, [sp, #16]
40018f18:	e284102c 	add	r1, r4, #44	; 0x2c
40018f1c:	e0811085 	add	r1, r1, r5, lsl #1
40018f20:	e1d100b0 	ldrh	r0, [r1]
40018f24:	eb000621 	bl	4001a7b0 <CyU3PDmaIsSockAvlEnReqd>
40018f28:	e3500000 	cmp	r0, #0
40018f2c:	0a000002 	beq	40018f3c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
40018f30:	e59d0010 	ldr	r0, [sp, #16]
40018f34:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018f38:	e58d0010 	str	r0, [sp, #16]
40018f3c:	e3e00000 	mvn	r0, #0
40018f40:	e58d0014 	str	r0, [sp, #20]
40018f44:	e1d400b4 	ldrh	r0, [r4, #4]
40018f48:	e3500006 	cmp	r0, #6
40018f4c:	1a000002 	bne	40018f5c <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
40018f50:	e3a00040 	mov	r0, #64	; 0x40
40018f54:	e58d0018 	str	r0, [sp, #24]
40018f58:	ea000001 	b	40018f64 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40018f5c:	e3a00042 	mov	r0, #66	; 0x42
40018f60:	e58d0018 	str	r0, [sp, #24]
40018f64:	e284102c 	add	r1, r4, #44	; 0x2c
40018f68:	e0811085 	add	r1, r1, r5, lsl #1
40018f6c:	e1d100b0 	ldrh	r0, [r1]
40018f70:	e28d1004 	add	r1, sp, #4
40018f74:	ebffef91 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40018f78:	e3a00000 	mov	r0, #0
40018f7c:	e2841064 	add	r1, r4, #100	; 0x64
40018f80:	e0811085 	add	r1, r1, r5, lsl #1
40018f84:	e1c100b0 	strh	r0, [r1]
40018f88:	e2850001 	add	r0, r5, #1
40018f8c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
40018f90:	e1d400ba 	ldrh	r0, [r4, #10]
40018f94:	e1500005 	cmp	r0, r5
40018f98:	caffffc6 	bgt	40018eb8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
40018f9c:	e28dd01c 	add	sp, sp, #28
40018fa0:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

40018fa4 <CyU3PDmaMultiChannelSetWrapUp>:
40018fa4:	e92d4070 	push	{r4, r5, r6, lr}
40018fa8:	e1a04000 	mov	r4, r0
40018fac:	e1a05001 	mov	r5, r1
40018fb0:	e3e01000 	mvn	r1, #0
40018fb4:	e1a00004 	mov	r0, r4
40018fb8:	ebfff879 	bl	400171a4 <CyU3PDmaMultiChannelAcquireLock>
40018fbc:	e1a06000 	mov	r6, r0
40018fc0:	e3560000 	cmp	r6, #0
40018fc4:	0a000001 	beq	40018fd0 <CyU3PDmaMultiChannelSetWrapUp+0x2c>
40018fc8:	e1a00006 	mov	r0, r6
40018fcc:	e8bd8070 	pop	{r4, r5, r6, pc}
40018fd0:	e5940000 	ldr	r0, [r4]
40018fd4:	e3500004 	cmp	r0, #4
40018fd8:	0a000003 	beq	40018fec <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018fdc:	e5940000 	ldr	r0, [r4]
40018fe0:	e3500002 	cmp	r0, #2
40018fe4:	0a000000 	beq	40018fec <CyU3PDmaMultiChannelSetWrapUp+0x48>
40018fe8:	e3a06047 	mov	r6, #71	; 0x47
40018fec:	e1d400b4 	ldrh	r0, [r4, #4]
40018ff0:	e3500006 	cmp	r0, #6
40018ff4:	0a000005 	beq	40019010 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40018ff8:	e1d400b4 	ldrh	r0, [r4, #4]
40018ffc:	e3500008 	cmp	r0, #8
40019000:	0a000002 	beq	40019010 <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40019004:	e1d400b4 	ldrh	r0, [r4, #4]
40019008:	e3500009 	cmp	r0, #9
4001900c:	1a000003 	bne	40019020 <CyU3PDmaMultiChannelSetWrapUp+0x7c>
40019010:	e3550000 	cmp	r5, #0
40019014:	0a000005 	beq	40019030 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019018:	e3a06040 	mov	r6, #64	; 0x40
4001901c:	ea000003 	b	40019030 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019020:	e1d400ba 	ldrh	r0, [r4, #10]
40019024:	e1500005 	cmp	r0, r5
40019028:	ca000000 	bgt	40019030 <CyU3PDmaMultiChannelSetWrapUp+0x8c>
4001902c:	e3a06040 	mov	r6, #64	; 0x40
40019030:	e3560000 	cmp	r6, #0
40019034:	1a000003 	bne	40019048 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
40019038:	e2841024 	add	r1, r4, #36	; 0x24
4001903c:	e0811085 	add	r1, r1, r5, lsl #1
40019040:	e1d100b0 	ldrh	r0, [r1]
40019044:	ebffef88 	bl	40014e6c <CyU3PDmaSocketSetWrapUp>
40019048:	e2840078 	add	r0, r4, #120	; 0x78
4001904c:	ebffc421 	bl	4000a0d8 <_txe_mutex_put>
40019050:	e1a00006 	mov	r0, r6
40019054:	eaffffdc 	b	40018fcc <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40019058 <CyU3PDmaApplicationDefine>:
40019058:	e92d4010 	push	{r4, lr}
4001905c:	e24dd020 	sub	sp, sp, #32
40019060:	eb000051 	bl	400191ac <CyU3PDmaInit>
40019064:	e3a02028 	mov	r2, #40	; 0x28
40019068:	e3a01000 	mov	r1, #0
4001906c:	e59f007c 	ldr	r0, [pc, #124]	; 400190f0 <CyU3PDmaApplicationDefine+0x98>
40019070:	ebffc2ab 	bl	40009b24 <_txe_event_flags_create>
40019074:	e3a00c02 	mov	r0, #512	; 0x200
40019078:	ebffa97d 	bl	40003674 <CyU3PMemAlloc>
4001907c:	e1a04000 	mov	r4, r0
40019080:	e3a0303c 	mov	r3, #60	; 0x3c
40019084:	e3a02c02 	mov	r2, #512	; 0x200
40019088:	e1cd20f0 	strd	r2, [sp]
4001908c:	e1a03004 	mov	r3, r4
40019090:	e3a02004 	mov	r2, #4
40019094:	e3a01000 	mov	r1, #0
40019098:	e59f0054 	ldr	r0, [pc, #84]	; 400190f4 <CyU3PDmaApplicationDefine+0x9c>
4001909c:	ebffc435 	bl	4000a178 <_txe_queue_create>
400190a0:	e3a00b01 	mov	r0, #1024	; 0x400
400190a4:	ebffa972 	bl	40003674 <CyU3PMemAlloc>
400190a8:	e1a04000 	mov	r4, r0
400190ac:	e3a030a8 	mov	r3, #168	; 0xa8
400190b0:	e3a02001 	mov	r2, #1
400190b4:	e3a01000 	mov	r1, #0
400190b8:	e3a00002 	mov	r0, #2
400190bc:	e28dc00c 	add	ip, sp, #12
400190c0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400190c4:	e3a02b01 	mov	r2, #1024	; 0x400
400190c8:	e1a03001 	mov	r3, r1
400190cc:	e58d2004 	str	r2, [sp, #4]
400190d0:	e59f2020 	ldr	r2, [pc, #32]	; 400190f8 <CyU3PDmaApplicationDefine+0xa0>
400190d4:	e28f1020 	add	r1, pc, #32
400190d8:	e58d0008 	str	r0, [sp, #8]
400190dc:	e59f0028 	ldr	r0, [pc, #40]	; 4001910c <CyU3PDmaApplicationDefine+0xb4>
400190e0:	e58d4000 	str	r4, [sp]
400190e4:	ebffc509 	bl	4000a510 <_txe_thread_create>
400190e8:	e28dd020 	add	sp, sp, #32
400190ec:	e8bd8010 	pop	{r4, pc}
400190f0:	40031908 	.word	0x40031908
400190f4:	40031930 	.word	0x40031930
400190f8:	4001a95c 	.word	0x4001a95c
400190fc:	445f3130 	.word	0x445f3130
40019100:	545f414d 	.word	0x545f414d
40019104:	41455248 	.word	0x41455248
40019108:	00000044 	.word	0x00000044
4001910c:	40031860 	.word	0x40031860

Disassembly of section i.CyU3PDmaChannelHandleError:

40019110 <CyU3PDmaChannelHandleError>:
40019110:	e92d4010 	push	{r4, lr}
40019114:	e1a04000 	mov	r4, r0
40019118:	e3e01000 	mvn	r1, #0
4001911c:	e284003c 	add	r0, r4, #60	; 0x3c
40019120:	ebffc3b7 	bl	4000a004 <_txe_mutex_get>
40019124:	e1d400b4 	ldrh	r0, [r4, #4]
40019128:	e3500004 	cmp	r0, #4
4001912c:	0a000001 	beq	40019138 <CyU3PDmaChannelHandleError+0x28>
40019130:	e1d401b0 	ldrh	r0, [r4, #16]
40019134:	ebffee5f 	bl	40014ab8 <CyU3PDmaSocketDisable>
40019138:	e1d400b4 	ldrh	r0, [r4, #4]
4001913c:	e3500003 	cmp	r0, #3
40019140:	0a000001 	beq	4001914c <CyU3PDmaChannelHandleError+0x3c>
40019144:	e1d401b2 	ldrh	r0, [r4, #18]
40019148:	ebffee5a 	bl	40014ab8 <CyU3PDmaSocketDisable>
4001914c:	e3a02002 	mov	r2, #2
40019150:	e3e01007 	mvn	r1, #7
40019154:	e2840074 	add	r0, r4, #116	; 0x74
40019158:	ebffc311 	bl	40009da4 <_txe_event_flags_set>
4001915c:	e3a02000 	mov	r2, #0
40019160:	e3a01040 	mov	r1, #64	; 0x40
40019164:	e2840074 	add	r0, r4, #116	; 0x74
40019168:	ebffc30d 	bl	40009da4 <_txe_event_flags_set>
4001916c:	e3a00005 	mov	r0, #5
40019170:	e5840000 	str	r0, [r4]
40019174:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40019178:	e3500000 	cmp	r0, #0
4001917c:	0a000007 	beq	400191a0 <CyU3PDmaChannelHandleError+0x90>
40019180:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40019184:	e3100040 	tst	r0, #64	; 0x40
40019188:	0a000004 	beq	400191a0 <CyU3PDmaChannelHandleError+0x90>
4001918c:	e3a02000 	mov	r2, #0
40019190:	e3a01040 	mov	r1, #64	; 0x40
40019194:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40019198:	e1a00004 	mov	r0, r4
4001919c:	e12fff33 	blx	r3
400191a0:	e284003c 	add	r0, r4, #60	; 0x3c
400191a4:	ebffc3cb 	bl	4000a0d8 <_txe_mutex_put>
400191a8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

400191ac <CyU3PDmaInit>:
400191ac:	e92d4010 	push	{r4, lr}
400191b0:	e3a02020 	mov	r2, #32
400191b4:	e3a01000 	mov	r1, #0
400191b8:	e59f006c 	ldr	r0, [pc, #108]	; 4001922c <CyU3PDmaInit+0x80>
400191bc:	ebffa93d 	bl	400036b8 <CyU3PMemSet>
400191c0:	e3a02080 	mov	r2, #128	; 0x80
400191c4:	e3a01000 	mov	r1, #0
400191c8:	e59f0060 	ldr	r0, [pc, #96]	; 40019230 <CyU3PDmaInit+0x84>
400191cc:	ebffa939 	bl	400036b8 <CyU3PMemSet>
400191d0:	e3a02020 	mov	r2, #32
400191d4:	e3a01000 	mov	r1, #0
400191d8:	e59f0054 	ldr	r0, [pc, #84]	; 40019234 <CyU3PDmaInit+0x88>
400191dc:	ebffa935 	bl	400036b8 <CyU3PMemSet>
400191e0:	e3a02040 	mov	r2, #64	; 0x40
400191e4:	e3a01000 	mov	r1, #0
400191e8:	e59f0048 	ldr	r0, [pc, #72]	; 40019238 <CyU3PDmaInit+0x8c>
400191ec:	ebffa931 	bl	400036b8 <CyU3PMemSet>
400191f0:	e3a02040 	mov	r2, #64	; 0x40
400191f4:	e3a01000 	mov	r1, #0
400191f8:	e59f003c 	ldr	r0, [pc, #60]	; 4001923c <CyU3PDmaInit+0x90>
400191fc:	ebffa92d 	bl	400036b8 <CyU3PMemSet>
40019200:	e3a00000 	mov	r0, #0
40019204:	e59f1034 	ldr	r1, [pc, #52]	; 40019240 <CyU3PDmaInit+0x94>
40019208:	e5810000 	str	r0, [r1]
4001920c:	eb002463 	bl	400223a0 <CyU3PDmaDscrListCreate>
40019210:	ebffaa69 	bl	40003bbc <CyU3PDmaBufferInit>
40019214:	e3a00000 	mov	r0, #0
40019218:	e59f1024 	ldr	r1, [pc, #36]	; 40019244 <CyU3PDmaInit+0x98>
4001921c:	e1c100b0 	strh	r0, [r1]
40019220:	e59f1020 	ldr	r1, [pc, #32]	; 40019248 <CyU3PDmaInit+0x9c>
40019224:	e1c100b0 	strh	r0, [r1]
40019228:	e8bd8010 	pop	{r4, pc}
4001922c:	40031720 	.word	0x40031720
40019230:	40031740 	.word	0x40031740
40019234:	400317c0 	.word	0x400317c0
40019238:	400317e0 	.word	0x400317e0
4001923c:	40031820 	.word	0x40031820
40019240:	40030cd4 	.word	0x40030cd4
40019244:	40030cfc 	.word	0x40030cfc
40019248:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

4001924c <CyU3PDmaIntHandler_TypeAuto>:
4001924c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019250:	e24dd01c 	sub	sp, sp, #28
40019254:	e1a04000 	mov	r4, r0
40019258:	e5949004 	ldr	r9, [r4, #4]
4001925c:	e5948008 	ldr	r8, [r4, #8]
40019260:	e3180040 	tst	r8, #64	; 0x40
40019264:	0a000003 	beq	40019278 <CyU3PDmaIntHandler_TypeAuto+0x2c>
40019268:	e1a00009 	mov	r0, r9
4001926c:	ebffffa7 	bl	40019110 <CyU3PDmaChannelHandleError>
40019270:	e28dd01c 	add	sp, sp, #28
40019274:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019278:	e3e01000 	mvn	r1, #0
4001927c:	e289003c 	add	r0, r9, #60	; 0x3c
40019280:	ebffc35f 	bl	4000a004 <_txe_mutex_get>
40019284:	e1d901b2 	ldrh	r0, [r9, #18]
40019288:	e5941000 	ldr	r1, [r4]
4001928c:	e1500821 	cmp	r0, r1, lsr #16
40019290:	1a00004b 	bne	400193c4 <CyU3PDmaIntHandler_TypeAuto+0x178>
40019294:	e1d901b2 	ldrh	r0, [r9, #18]
40019298:	e3a0103f 	mov	r1, #63	; 0x3f
4001929c:	e0015440 	and	r5, r1, r0, asr #8
400192a0:	e1d901b2 	ldrh	r0, [r9, #18]
400192a4:	e20060ff 	and	r6, r0, #255	; 0xff
400192a8:	e594000c 	ldr	r0, [r4, #12]
400192ac:	e1a07800 	lsl	r7, r0, #16
400192b0:	e1a07827 	lsr	r7, r7, #16
400192b4:	e3180080 	tst	r8, #128	; 0x80
400192b8:	0a000012 	beq	40019308 <CyU3PDmaIntHandler_TypeAuto+0xbc>
400192bc:	e3a00001 	mov	r0, #1
400192c0:	e5890000 	str	r0, [r9]
400192c4:	e3a02000 	mov	r2, #0
400192c8:	e3a01001 	mov	r1, #1
400192cc:	e2890074 	add	r0, r9, #116	; 0x74
400192d0:	ebffc2b3 	bl	40009da4 <_txe_event_flags_set>
400192d4:	ebffe599 	bl	40012940 <CyU3PSysBarrierSync>
400192d8:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400192dc:	e3500000 	cmp	r0, #0
400192e0:	0a000028 	beq	40019388 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192e4:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400192e8:	e3100001 	tst	r0, #1
400192ec:	0a000025 	beq	40019388 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400192f0:	e3a02000 	mov	r2, #0
400192f4:	e3a01001 	mov	r1, #1
400192f8:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400192fc:	e1a00009 	mov	r0, r9
40019300:	e12fff33 	blx	r3
40019304:	ea00001f 	b	40019388 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019308:	e3180002 	tst	r8, #2
4001930c:	0a00001d 	beq	40019388 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019310:	e5990000 	ldr	r0, [r9]
40019314:	e3500003 	cmp	r0, #3
40019318:	1a00001a 	bne	40019388 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001931c:	e3a00001 	mov	r0, #1
40019320:	e5890000 	str	r0, [r9]
40019324:	e59f0284 	ldr	r0, [pc, #644]	; 400195b0 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019328:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001932c:	e0800386 	add	r0, r0, r6, lsl #7
40019330:	e5900014 	ldr	r0, [r0, #20]
40019334:	e3c00002 	bic	r0, r0, #2
40019338:	e59f1270 	ldr	r1, [pc, #624]	; 400195b0 <CyU3PDmaIntHandler_TypeAuto+0x364>
4001933c:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019340:	e0811386 	add	r1, r1, r6, lsl #7
40019344:	e5810014 	str	r0, [r1, #20]
40019348:	e3a02000 	mov	r2, #0
4001934c:	e3a01002 	mov	r1, #2
40019350:	e2890074 	add	r0, r9, #116	; 0x74
40019354:	ebffc292 	bl	40009da4 <_txe_event_flags_set>
40019358:	ebffe578 	bl	40012940 <CyU3PSysBarrierSync>
4001935c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019360:	e3500000 	cmp	r0, #0
40019364:	0a000007 	beq	40019388 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019368:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001936c:	e3100002 	tst	r0, #2
40019370:	0a000004 	beq	40019388 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019374:	e3a02000 	mov	r2, #0
40019378:	e3a01002 	mov	r1, #2
4001937c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019380:	e1a00009 	mov	r0, r9
40019384:	e12fff33 	blx	r3
40019388:	e3180e12 	tst	r8, #288	; 0x120
4001938c:	0a000084 	beq	400195a4 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019390:	ebffe56a 	bl	40012940 <CyU3PSysBarrierSync>
40019394:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019398:	e3500000 	cmp	r0, #0
4001939c:	0a000080 	beq	400195a4 <CyU3PDmaIntHandler_TypeAuto+0x358>
400193a0:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400193a4:	e3100c01 	tst	r0, #256	; 0x100
400193a8:	0a00007d 	beq	400195a4 <CyU3PDmaIntHandler_TypeAuto+0x358>
400193ac:	e3a02000 	mov	r2, #0
400193b0:	e3a01c01 	mov	r1, #256	; 0x100
400193b4:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400193b8:	e1a00009 	mov	r0, r9
400193bc:	e12fff33 	blx	r3
400193c0:	ea000077 	b	400195a4 <CyU3PDmaIntHandler_TypeAuto+0x358>
400193c4:	e1d901b0 	ldrh	r0, [r9, #16]
400193c8:	e3a0103f 	mov	r1, #63	; 0x3f
400193cc:	e0015440 	and	r5, r1, r0, asr #8
400193d0:	e1d901b0 	ldrh	r0, [r9, #16]
400193d4:	e20060ff 	and	r6, r0, #255	; 0xff
400193d8:	e594000c 	ldr	r0, [r4, #12]
400193dc:	e1a07800 	lsl	r7, r0, #16
400193e0:	e1a07827 	lsr	r7, r7, #16
400193e4:	e3180001 	tst	r8, #1
400193e8:	0a00005f 	beq	4001956c <CyU3PDmaIntHandler_TypeAuto+0x320>
400193ec:	e5990000 	ldr	r0, [r9]
400193f0:	e3500004 	cmp	r0, #4
400193f4:	0a00002b 	beq	400194a8 <CyU3PDmaIntHandler_TypeAuto+0x25c>
400193f8:	e1a00000 	nop			; (mov r0, r0)
400193fc:	e1d901b6 	ldrh	r0, [r9, #22]
40019400:	e28d100c 	add	r1, sp, #12
40019404:	eb002421 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019408:	e59d000c 	ldr	r0, [sp, #12]
4001940c:	e58d0000 	str	r0, [sp]
40019410:	e59d0018 	ldr	r0, [sp, #24]
40019414:	e59f1198 	ldr	r1, [pc, #408]	; 400195b4 <CyU3PDmaIntHandler_TypeAuto+0x368>
40019418:	e0010820 	and	r0, r1, r0, lsr #16
4001941c:	e1cd00b4 	strh	r0, [sp, #4]
40019420:	e241100f 	sub	r1, r1, #15
40019424:	e59d0018 	ldr	r0, [sp, #24]
40019428:	e0000001 	and	r0, r0, r1
4001942c:	e1cd00b6 	strh	r0, [sp, #6]
40019430:	e59d0018 	ldr	r0, [sp, #24]
40019434:	e200000f 	and	r0, r0, #15
40019438:	e1cd00b8 	strh	r0, [sp, #8]
4001943c:	e1811241 	orr	r1, r1, r1, asr #4
40019440:	e59d0014 	ldr	r0, [sp, #20]
40019444:	e0010820 	and	r0, r1, r0, lsr #16
40019448:	e1c901b6 	strh	r0, [r9, #22]
4001944c:	ebffe53b 	bl	40012940 <CyU3PSysBarrierSync>
40019450:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019454:	e3500000 	cmp	r0, #0
40019458:	0a000002 	beq	40019468 <CyU3PDmaIntHandler_TypeAuto+0x21c>
4001945c:	e1dd10b6 	ldrh	r1, [sp, #6]
40019460:	e59d0000 	ldr	r0, [sp]
40019464:	ebffe2dc 	bl	40011fdc <CyU3PSysFlushDRegion>
40019468:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4001946c:	e3500000 	cmp	r0, #0
40019470:	0a000007 	beq	40019494 <CyU3PDmaIntHandler_TypeAuto+0x248>
40019474:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019478:	e3100008 	tst	r0, #8
4001947c:	0a000004 	beq	40019494 <CyU3PDmaIntHandler_TypeAuto+0x248>
40019480:	e1a0200d 	mov	r2, sp
40019484:	e3a01008 	mov	r1, #8
40019488:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001948c:	e1a00009 	mov	r0, r9
40019490:	e12fff33 	blx	r3
40019494:	e1d901b6 	ldrh	r0, [r9, #22]
40019498:	e1500007 	cmp	r0, r7
4001949c:	1affffd6 	bne	400193fc <CyU3PDmaIntHandler_TypeAuto+0x1b0>
400194a0:	e1c971be 	strh	r7, [r9, #30]
400194a4:	ea000030 	b	4001956c <CyU3PDmaIntHandler_TypeAuto+0x320>
400194a8:	e1d901b4 	ldrh	r0, [r9, #20]
400194ac:	e28d100c 	add	r1, sp, #12
400194b0:	eb0023f6 	bl	40022490 <CyU3PDmaDscrGetConfig>
400194b4:	e59d000c 	ldr	r0, [sp, #12]
400194b8:	e58d0000 	str	r0, [sp]
400194bc:	e59d0018 	ldr	r0, [sp, #24]
400194c0:	e59f10ec 	ldr	r1, [pc, #236]	; 400195b4 <CyU3PDmaIntHandler_TypeAuto+0x368>
400194c4:	e0010820 	and	r0, r1, r0, lsr #16
400194c8:	e1cd00b4 	strh	r0, [sp, #4]
400194cc:	e241100f 	sub	r1, r1, #15
400194d0:	e59d0018 	ldr	r0, [sp, #24]
400194d4:	e0000001 	and	r0, r0, r1
400194d8:	e1cd00b6 	strh	r0, [sp, #6]
400194dc:	e59d0018 	ldr	r0, [sp, #24]
400194e0:	e200000f 	and	r0, r0, #15
400194e4:	e1cd00b8 	strh	r0, [sp, #8]
400194e8:	e3a00001 	mov	r0, #1
400194ec:	e5890000 	str	r0, [r9]
400194f0:	e59f00b8 	ldr	r0, [pc, #184]	; 400195b0 <CyU3PDmaIntHandler_TypeAuto+0x364>
400194f4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400194f8:	e0800386 	add	r0, r0, r6, lsl #7
400194fc:	e5900014 	ldr	r0, [r0, #20]
40019500:	e3c00001 	bic	r0, r0, #1
40019504:	e59f10a4 	ldr	r1, [pc, #164]	; 400195b0 <CyU3PDmaIntHandler_TypeAuto+0x364>
40019508:	e7911105 	ldr	r1, [r1, r5, lsl #2]
4001950c:	e0811386 	add	r1, r1, r6, lsl #7
40019510:	e5810014 	str	r0, [r1, #20]
40019514:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019518:	e3500000 	cmp	r0, #0
4001951c:	0a000002 	beq	4001952c <CyU3PDmaIntHandler_TypeAuto+0x2e0>
40019520:	e1dd10b6 	ldrh	r1, [sp, #6]
40019524:	e59d0000 	ldr	r0, [sp]
40019528:	ebffe2ab 	bl	40011fdc <CyU3PSysFlushDRegion>
4001952c:	e3a02000 	mov	r2, #0
40019530:	e3a01004 	mov	r1, #4
40019534:	e2890074 	add	r0, r9, #116	; 0x74
40019538:	ebffc219 	bl	40009da4 <_txe_event_flags_set>
4001953c:	ebffe4ff 	bl	40012940 <CyU3PSysBarrierSync>
40019540:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019544:	e3500000 	cmp	r0, #0
40019548:	0a000007 	beq	4001956c <CyU3PDmaIntHandler_TypeAuto+0x320>
4001954c:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019550:	e3100004 	tst	r0, #4
40019554:	0a000004 	beq	4001956c <CyU3PDmaIntHandler_TypeAuto+0x320>
40019558:	e1a0200d 	mov	r2, sp
4001955c:	e3a01004 	mov	r1, #4
40019560:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019564:	e1a00009 	mov	r0, r9
40019568:	e12fff33 	blx	r3
4001956c:	e3180020 	tst	r8, #32
40019570:	0a00000b 	beq	400195a4 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019574:	ebffe4f1 	bl	40012940 <CyU3PSysBarrierSync>
40019578:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4001957c:	e3500000 	cmp	r0, #0
40019580:	0a000007 	beq	400195a4 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019584:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019588:	e3100080 	tst	r0, #128	; 0x80
4001958c:	0a000004 	beq	400195a4 <CyU3PDmaIntHandler_TypeAuto+0x358>
40019590:	e3a02000 	mov	r2, #0
40019594:	e3a01080 	mov	r1, #128	; 0x80
40019598:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
4001959c:	e1a00009 	mov	r0, r9
400195a0:	e12fff33 	blx	r3
400195a4:	e289003c 	add	r0, r9, #60	; 0x3c
400195a8:	ebffc2ca 	bl	4000a0d8 <_txe_mutex_put>
400195ac:	eaffff2f 	b	40019270 <CyU3PDmaIntHandler_TypeAuto+0x24>
400195b0:	40030cd8 	.word	0x40030cd8
400195b4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

400195b8 <CyU3PDmaIntHandler_TypeManual>:
400195b8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400195bc:	e24dd034 	sub	sp, sp, #52	; 0x34
400195c0:	e1a04000 	mov	r4, r0
400195c4:	e5945004 	ldr	r5, [r4, #4]
400195c8:	e5946008 	ldr	r6, [r4, #8]
400195cc:	e3160040 	tst	r6, #64	; 0x40
400195d0:	0a000003 	beq	400195e4 <CyU3PDmaIntHandler_TypeManual+0x2c>
400195d4:	e1a00005 	mov	r0, r5
400195d8:	ebfffecc 	bl	40019110 <CyU3PDmaChannelHandleError>
400195dc:	e28dd034 	add	sp, sp, #52	; 0x34
400195e0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400195e4:	e3e01000 	mvn	r1, #0
400195e8:	e285003c 	add	r0, r5, #60	; 0x3c
400195ec:	ebffc284 	bl	4000a004 <_txe_mutex_get>
400195f0:	e1d501b2 	ldrh	r0, [r5, #18]
400195f4:	e5941000 	ldr	r1, [r4]
400195f8:	e1500821 	cmp	r0, r1, lsr #16
400195fc:	1a0000d6 	bne	4001995c <CyU3PDmaIntHandler_TypeManual+0x3a4>
40019600:	e594000c 	ldr	r0, [r4, #12]
40019604:	e1a07800 	lsl	r7, r0, #16
40019608:	e1a07827 	lsr	r7, r7, #16
4001960c:	e3160002 	tst	r6, #2
40019610:	0a000060 	beq	40019798 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019614:	e5950000 	ldr	r0, [r5]
40019618:	e3500003 	cmp	r0, #3
4001961c:	1a000013 	bne	40019670 <CyU3PDmaIntHandler_TypeManual+0xb8>
40019620:	e3a00001 	mov	r0, #1
40019624:	e5850000 	str	r0, [r5]
40019628:	e3a02000 	mov	r2, #0
4001962c:	e3a01002 	mov	r1, #2
40019630:	e2850074 	add	r0, r5, #116	; 0x74
40019634:	ebffc1da 	bl	40009da4 <_txe_event_flags_set>
40019638:	e3c66080 	bic	r6, r6, #128	; 0x80
4001963c:	ebffe4bf 	bl	40012940 <CyU3PSysBarrierSync>
40019640:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019644:	e3500000 	cmp	r0, #0
40019648:	0a000052 	beq	40019798 <CyU3PDmaIntHandler_TypeManual+0x1e0>
4001964c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019650:	e3100002 	tst	r0, #2
40019654:	0a00004f 	beq	40019798 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019658:	e3a02000 	mov	r2, #0
4001965c:	e3a01002 	mov	r1, #2
40019660:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019664:	e1a00005 	mov	r0, r5
40019668:	e12fff33 	blx	r3
4001966c:	ea000049 	b	40019798 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019670:	e1d500b4 	ldrh	r0, [r5, #4]
40019674:	e3500002 	cmp	r0, #2
40019678:	1a000027 	bne	4001971c <CyU3PDmaIntHandler_TypeManual+0x164>
4001967c:	e1a00000 	nop			; (mov r0, r0)
40019680:	e1d501ba 	ldrh	r0, [r5, #26]
40019684:	e28d1024 	add	r1, sp, #36	; 0x24
40019688:	eb002380 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001968c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019690:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019b40 <CyU3PDmaIntHandler_TypeManual+0x588>
40019694:	e0000001 	and	r0, r0, r1
40019698:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001969c:	e1d501ba 	ldrh	r0, [r5, #26]
400196a0:	e28d1024 	add	r1, sp, #36	; 0x24
400196a4:	eb002394 	bl	400224fc <CyU3PDmaDscrSetConfig>
400196a8:	e1d511ba 	ldrh	r1, [r5, #26]
400196ac:	e1d501b0 	ldrh	r0, [r5, #16]
400196b0:	e3a02000 	mov	r2, #0
400196b4:	ebffedaf 	bl	40014d78 <CyU3PDmaSocketSendEvent>
400196b8:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400196bc:	e59f1480 	ldr	r1, [pc, #1152]	; 40019b44 <CyU3PDmaIntHandler_TypeManual+0x58c>
400196c0:	e0010820 	and	r0, r1, r0, lsr #16
400196c4:	e1c501ba 	strh	r0, [r5, #26]
400196c8:	e1d502b0 	ldrh	r0, [r5, #32]
400196cc:	e28d1024 	add	r1, sp, #36	; 0x24
400196d0:	eb00236e 	bl	40022490 <CyU3PDmaDscrGetConfig>
400196d4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400196d8:	e1c502b0 	strh	r0, [r5, #32]
400196dc:	ebffe497 	bl	40012940 <CyU3PSysBarrierSync>
400196e0:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400196e4:	e3500000 	cmp	r0, #0
400196e8:	0a000007 	beq	4001970c <CyU3PDmaIntHandler_TypeManual+0x154>
400196ec:	e5950030 	ldr	r0, [r5, #48]	; 0x30
400196f0:	e3100010 	tst	r0, #16
400196f4:	0a000004 	beq	4001970c <CyU3PDmaIntHandler_TypeManual+0x154>
400196f8:	e3a02000 	mov	r2, #0
400196fc:	e3a01010 	mov	r1, #16
40019700:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019704:	e1a00005 	mov	r0, r5
40019708:	e12fff33 	blx	r3
4001970c:	e1d502b0 	ldrh	r0, [r5, #32]
40019710:	e1500007 	cmp	r0, r7
40019714:	1affffd9 	bne	40019680 <CyU3PDmaIntHandler_TypeManual+0xc8>
40019718:	ea00001e 	b	40019798 <CyU3PDmaIntHandler_TypeManual+0x1e0>
4001971c:	e1a00000 	nop			; (mov r0, r0)
40019720:	e1d501b8 	ldrh	r0, [r5, #24]
40019724:	e28d1024 	add	r1, sp, #36	; 0x24
40019728:	eb002358 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001972c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019730:	e3100008 	tst	r0, #8
40019734:	1a000003 	bne	40019748 <CyU3PDmaIntHandler_TypeManual+0x190>
40019738:	e3a02000 	mov	r2, #0
4001973c:	e3a01010 	mov	r1, #16
40019740:	e2850074 	add	r0, r5, #116	; 0x74
40019744:	ebffc196 	bl	40009da4 <_txe_event_flags_set>
40019748:	e1d502b0 	ldrh	r0, [r5, #32]
4001974c:	e28d1024 	add	r1, sp, #36	; 0x24
40019750:	eb00234e 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019754:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019758:	e1c502b0 	strh	r0, [r5, #32]
4001975c:	ebffe477 	bl	40012940 <CyU3PSysBarrierSync>
40019760:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019764:	e3500000 	cmp	r0, #0
40019768:	0a000007 	beq	4001978c <CyU3PDmaIntHandler_TypeManual+0x1d4>
4001976c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019770:	e3100010 	tst	r0, #16
40019774:	0a000004 	beq	4001978c <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019778:	e3a02000 	mov	r2, #0
4001977c:	e3a01010 	mov	r1, #16
40019780:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019784:	e1a00005 	mov	r0, r5
40019788:	e12fff33 	blx	r3
4001978c:	e1d502b0 	ldrh	r0, [r5, #32]
40019790:	e1500007 	cmp	r0, r7
40019794:	1affffe1 	bne	40019720 <CyU3PDmaIntHandler_TypeManual+0x168>
40019798:	e3160010 	tst	r6, #16
4001979c:	0a000046 	beq	400198bc <CyU3PDmaIntHandler_TypeManual+0x304>
400197a0:	e1d502b0 	ldrh	r0, [r5, #32]
400197a4:	e28d1024 	add	r1, sp, #36	; 0x24
400197a8:	eb002338 	bl	40022490 <CyU3PDmaDscrGetConfig>
400197ac:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400197b0:	e3100001 	tst	r0, #1
400197b4:	0a000040 	beq	400198bc <CyU3PDmaIntHandler_TypeManual+0x304>
400197b8:	e1d501b2 	ldrh	r0, [r5, #18]
400197bc:	ebffecbd 	bl	40014ab8 <CyU3PDmaSocketDisable>
400197c0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400197c4:	e59f1374 	ldr	r1, [pc, #884]	; 40019b40 <CyU3PDmaIntHandler_TypeManual+0x588>
400197c8:	e0000001 	and	r0, r0, r1
400197cc:	e58d0030 	str	r0, [sp, #48]	; 0x30
400197d0:	e1d502b0 	ldrh	r0, [r5, #32]
400197d4:	e28d1024 	add	r1, sp, #36	; 0x24
400197d8:	eb002347 	bl	400224fc <CyU3PDmaDscrSetConfig>
400197dc:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400197e0:	e1c502b0 	strh	r0, [r5, #32]
400197e4:	e1d501b2 	ldrh	r0, [r5, #18]
400197e8:	e28d100c 	add	r1, sp, #12
400197ec:	ebffecc9 	bl	40014b18 <CyU3PDmaSocketGetConfig>
400197f0:	e59d0018 	ldr	r0, [sp, #24]
400197f4:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
400197f8:	e58d0018 	str	r0, [sp, #24]
400197fc:	e59d0018 	ldr	r0, [sp, #24]
40019800:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019804:	e58d0018 	str	r0, [sp, #24]
40019808:	e3a00000 	mov	r0, #0
4001980c:	e58d001c 	str	r0, [sp, #28]
40019810:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019814:	e2400001 	sub	r0, r0, #1
40019818:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
4001981c:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019820:	e3500000 	cmp	r0, #0
40019824:	1a000004 	bne	4001983c <CyU3PDmaIntHandler_TypeManual+0x284>
40019828:	e3a00010 	mov	r0, #16
4001982c:	e58d001c 	str	r0, [sp, #28]
40019830:	e59d0020 	ldr	r0, [sp, #32]
40019834:	e3c00010 	bic	r0, r0, #16
40019838:	e58d0020 	str	r0, [sp, #32]
4001983c:	e1d502b0 	ldrh	r0, [r5, #32]
40019840:	e58d000c 	str	r0, [sp, #12]
40019844:	e1d501b2 	ldrh	r0, [r5, #18]
40019848:	e28d100c 	add	r1, sp, #12
4001984c:	ebffed5b 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40019850:	e1d501ba 	ldrh	r0, [r5, #26]
40019854:	e28d1024 	add	r1, sp, #36	; 0x24
40019858:	eb00230c 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001985c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019860:	e59f12d8 	ldr	r1, [pc, #728]	; 40019b40 <CyU3PDmaIntHandler_TypeManual+0x588>
40019864:	e0000001 	and	r0, r0, r1
40019868:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001986c:	e1d501ba 	ldrh	r0, [r5, #26]
40019870:	e28d1024 	add	r1, sp, #36	; 0x24
40019874:	eb002320 	bl	400224fc <CyU3PDmaDscrSetConfig>
40019878:	e5950038 	ldr	r0, [r5, #56]	; 0x38
4001987c:	e3500000 	cmp	r0, #0
40019880:	0a000004 	beq	40019898 <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019884:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019888:	e59f32b0 	ldr	r3, [pc, #688]	; 40019b40 <CyU3PDmaIntHandler_TypeManual+0x588>
4001988c:	e0021003 	and	r1, r2, r3
40019890:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019894:	ebffe1d0 	bl	40011fdc <CyU3PSysFlushDRegion>
40019898:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001989c:	e59f12a0 	ldr	r1, [pc, #672]	; 40019b44 <CyU3PDmaIntHandler_TypeManual+0x58c>
400198a0:	e0010820 	and	r0, r1, r0, lsr #16
400198a4:	e1c501ba 	strh	r0, [r5, #26]
400198a8:	e1d511ba 	ldrh	r1, [r5, #26]
400198ac:	e1d501b0 	ldrh	r0, [r5, #16]
400198b0:	e3a02000 	mov	r2, #0
400198b4:	ebffed2f 	bl	40014d78 <CyU3PDmaSocketSendEvent>
400198b8:	ebffe420 	bl	40012940 <CyU3PSysBarrierSync>
400198bc:	e3160080 	tst	r6, #128	; 0x80
400198c0:	0a000016 	beq	40019920 <CyU3PDmaIntHandler_TypeManual+0x368>
400198c4:	e1d500b4 	ldrh	r0, [r5, #4]
400198c8:	e3500002 	cmp	r0, #2
400198cc:	1a000001 	bne	400198d8 <CyU3PDmaIntHandler_TypeManual+0x320>
400198d0:	e1d501b0 	ldrh	r0, [r5, #16]
400198d4:	ebffec77 	bl	40014ab8 <CyU3PDmaSocketDisable>
400198d8:	e3a00001 	mov	r0, #1
400198dc:	e5850000 	str	r0, [r5]
400198e0:	e3a02000 	mov	r2, #0
400198e4:	e3a01001 	mov	r1, #1
400198e8:	e2850074 	add	r0, r5, #116	; 0x74
400198ec:	ebffc12c 	bl	40009da4 <_txe_event_flags_set>
400198f0:	ebffe412 	bl	40012940 <CyU3PSysBarrierSync>
400198f4:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
400198f8:	e3500000 	cmp	r0, #0
400198fc:	0a000007 	beq	40019920 <CyU3PDmaIntHandler_TypeManual+0x368>
40019900:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019904:	e3100001 	tst	r0, #1
40019908:	0a000004 	beq	40019920 <CyU3PDmaIntHandler_TypeManual+0x368>
4001990c:	e3a02000 	mov	r2, #0
40019910:	e3a01001 	mov	r1, #1
40019914:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019918:	e1a00005 	mov	r0, r5
4001991c:	e12fff33 	blx	r3
40019920:	e3160e12 	tst	r6, #288	; 0x120
40019924:	0a000082 	beq	40019b34 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019928:	ebffe404 	bl	40012940 <CyU3PSysBarrierSync>
4001992c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019930:	e3500000 	cmp	r0, #0
40019934:	0a00007e 	beq	40019b34 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019938:	e5950030 	ldr	r0, [r5, #48]	; 0x30
4001993c:	e3100c01 	tst	r0, #256	; 0x100
40019940:	0a00007b 	beq	40019b34 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019944:	e3a02000 	mov	r2, #0
40019948:	e3a01c01 	mov	r1, #256	; 0x100
4001994c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019950:	e1a00005 	mov	r0, r5
40019954:	e12fff33 	blx	r3
40019958:	ea000075 	b	40019b34 <CyU3PDmaIntHandler_TypeManual+0x57c>
4001995c:	e594000c 	ldr	r0, [r4, #12]
40019960:	e1a07800 	lsl	r7, r0, #16
40019964:	e1a07827 	lsr	r7, r7, #16
40019968:	e3160001 	tst	r6, #1
4001996c:	0a00005d 	beq	40019ae8 <CyU3PDmaIntHandler_TypeManual+0x530>
40019970:	e5950000 	ldr	r0, [r5]
40019974:	e3500004 	cmp	r0, #4
40019978:	0a000031 	beq	40019a44 <CyU3PDmaIntHandler_TypeManual+0x48c>
4001997c:	e1a00000 	nop			; (mov r0, r0)
40019980:	e1d501be 	ldrh	r0, [r5, #30]
40019984:	e28d1024 	add	r1, sp, #36	; 0x24
40019988:	eb0022c0 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001998c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019990:	e58d0000 	str	r0, [sp]
40019994:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019998:	e59f11a4 	ldr	r1, [pc, #420]	; 40019b44 <CyU3PDmaIntHandler_TypeManual+0x58c>
4001999c:	e0010820 	and	r0, r1, r0, lsr #16
400199a0:	e1cd00b4 	strh	r0, [sp, #4]
400199a4:	e241100f 	sub	r1, r1, #15
400199a8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400199ac:	e0000001 	and	r0, r0, r1
400199b0:	e1cd00b6 	strh	r0, [sp, #6]
400199b4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400199b8:	e200000f 	and	r0, r0, #15
400199bc:	e1cd00b8 	strh	r0, [sp, #8]
400199c0:	e5950038 	ldr	r0, [r5, #56]	; 0x38
400199c4:	e3500000 	cmp	r0, #0
400199c8:	0a000002 	beq	400199d8 <CyU3PDmaIntHandler_TypeManual+0x420>
400199cc:	e1dd10b6 	ldrh	r1, [sp, #6]
400199d0:	e59d0000 	ldr	r0, [sp]
400199d4:	ebffe180 	bl	40011fdc <CyU3PSysFlushDRegion>
400199d8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400199dc:	e3100008 	tst	r0, #8
400199e0:	0a000003 	beq	400199f4 <CyU3PDmaIntHandler_TypeManual+0x43c>
400199e4:	e3a02000 	mov	r2, #0
400199e8:	e3a01008 	mov	r1, #8
400199ec:	e2850074 	add	r0, r5, #116	; 0x74
400199f0:	ebffc0eb 	bl	40009da4 <_txe_event_flags_set>
400199f4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
400199f8:	e59f1144 	ldr	r1, [pc, #324]	; 40019b44 <CyU3PDmaIntHandler_TypeManual+0x58c>
400199fc:	e0010820 	and	r0, r1, r0, lsr #16
40019a00:	e1c501be 	strh	r0, [r5, #30]
40019a04:	ebffe3cd 	bl	40012940 <CyU3PSysBarrierSync>
40019a08:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a0c:	e3500000 	cmp	r0, #0
40019a10:	0a000007 	beq	40019a34 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019a14:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a18:	e3100008 	tst	r0, #8
40019a1c:	0a000004 	beq	40019a34 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019a20:	e1a0200d 	mov	r2, sp
40019a24:	e3a01008 	mov	r1, #8
40019a28:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a2c:	e1a00005 	mov	r0, r5
40019a30:	e12fff33 	blx	r3
40019a34:	e1d501be 	ldrh	r0, [r5, #30]
40019a38:	e1500007 	cmp	r0, r7
40019a3c:	1affffcf 	bne	40019980 <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019a40:	ea000028 	b	40019ae8 <CyU3PDmaIntHandler_TypeManual+0x530>
40019a44:	e1d501b4 	ldrh	r0, [r5, #20]
40019a48:	e28d1024 	add	r1, sp, #36	; 0x24
40019a4c:	eb00228f 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019a50:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019a54:	e58d0000 	str	r0, [sp]
40019a58:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a5c:	e59f10e0 	ldr	r1, [pc, #224]	; 40019b44 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019a60:	e0010820 	and	r0, r1, r0, lsr #16
40019a64:	e1cd00b4 	strh	r0, [sp, #4]
40019a68:	e241100f 	sub	r1, r1, #15
40019a6c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a70:	e0000001 	and	r0, r0, r1
40019a74:	e1cd00b6 	strh	r0, [sp, #6]
40019a78:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019a7c:	e200000f 	and	r0, r0, #15
40019a80:	e1cd00b8 	strh	r0, [sp, #8]
40019a84:	e3a00001 	mov	r0, #1
40019a88:	e5850000 	str	r0, [r5]
40019a8c:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019a90:	e3500000 	cmp	r0, #0
40019a94:	0a000002 	beq	40019aa4 <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019a98:	e1dd10b6 	ldrh	r1, [sp, #6]
40019a9c:	e59d0000 	ldr	r0, [sp]
40019aa0:	ebffe14d 	bl	40011fdc <CyU3PSysFlushDRegion>
40019aa4:	e3a02000 	mov	r2, #0
40019aa8:	e3a01004 	mov	r1, #4
40019aac:	e2850074 	add	r0, r5, #116	; 0x74
40019ab0:	ebffc0bb 	bl	40009da4 <_txe_event_flags_set>
40019ab4:	e3c66080 	bic	r6, r6, #128	; 0x80
40019ab8:	ebffe3a0 	bl	40012940 <CyU3PSysBarrierSync>
40019abc:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019ac0:	e3500000 	cmp	r0, #0
40019ac4:	0a000007 	beq	40019ae8 <CyU3PDmaIntHandler_TypeManual+0x530>
40019ac8:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019acc:	e3100004 	tst	r0, #4
40019ad0:	0a000004 	beq	40019ae8 <CyU3PDmaIntHandler_TypeManual+0x530>
40019ad4:	e1a0200d 	mov	r2, sp
40019ad8:	e3a01004 	mov	r1, #4
40019adc:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019ae0:	e1a00005 	mov	r0, r5
40019ae4:	e12fff33 	blx	r3
40019ae8:	e3160080 	tst	r6, #128	; 0x80
40019aec:	0a000002 	beq	40019afc <CyU3PDmaIntHandler_TypeManual+0x544>
40019af0:	e3a00006 	mov	r0, #6
40019af4:	e5850000 	str	r0, [r5]
40019af8:	ebffe390 	bl	40012940 <CyU3PSysBarrierSync>
40019afc:	e3160020 	tst	r6, #32
40019b00:	0a00000b 	beq	40019b34 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019b04:	ebffe38d 	bl	40012940 <CyU3PSysBarrierSync>
40019b08:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b0c:	e3500000 	cmp	r0, #0
40019b10:	0a000007 	beq	40019b34 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019b14:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b18:	e3100080 	tst	r0, #128	; 0x80
40019b1c:	0a000004 	beq	40019b34 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019b20:	e3a02000 	mov	r2, #0
40019b24:	e3a01080 	mov	r1, #128	; 0x80
40019b28:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b2c:	e1a00005 	mov	r0, r5
40019b30:	e12fff33 	blx	r3
40019b34:	e285003c 	add	r0, r5, #60	; 0x3c
40019b38:	ebffc166 	bl	4000a0d8 <_txe_mutex_put>
40019b3c:	eafffea6 	b	400195dc <CyU3PDmaIntHandler_TypeManual+0x24>
40019b40:	0000fff0 	.word	0x0000fff0
40019b44:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019b48 <CyU3PDmaIntHandler_TypeManyToOne>:
40019b48:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019b4c:	e24dd034 	sub	sp, sp, #52	; 0x34
40019b50:	e1a04000 	mov	r4, r0
40019b54:	e5945004 	ldr	r5, [r4, #4]
40019b58:	e5946008 	ldr	r6, [r4, #8]
40019b5c:	e3160040 	tst	r6, #64	; 0x40
40019b60:	0a000003 	beq	40019b74 <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019b64:	e1a00005 	mov	r0, r5
40019b68:	eb00033d 	bl	4001a864 <CyU3PDmaMultiChannelHandleError>
40019b6c:	e28dd034 	add	sp, sp, #52	; 0x34
40019b70:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019b74:	e3e01000 	mvn	r1, #0
40019b78:	e2850078 	add	r0, r5, #120	; 0x78
40019b7c:	ebffc120 	bl	4000a004 <_txe_mutex_get>
40019b80:	e5940000 	ldr	r0, [r4]
40019b84:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a11c <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019b88:	e0019820 	and	r9, r1, r0, lsr #16
40019b8c:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019b90:	e1500009 	cmp	r0, r9
40019b94:	1a0000d8 	bne	40019efc <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019b98:	e594000c 	ldr	r0, [r4, #12]
40019b9c:	e0007001 	and	r7, r0, r1
40019ba0:	e3160002 	tst	r6, #2
40019ba4:	0a000054 	beq	40019cfc <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019ba8:	e5950000 	ldr	r0, [r5]
40019bac:	e3500003 	cmp	r0, #3
40019bb0:	0a000030 	beq	40019c78 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019bb4:	e1a00000 	nop			; (mov r0, r0)
40019bb8:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019bbc:	e28d1024 	add	r1, sp, #36	; 0x24
40019bc0:	eb002232 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019bc4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019bc8:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a11c <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019bcc:	e0010820 	and	r0, r1, r0, lsr #16
40019bd0:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019bd4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019bd8:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019bdc:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019be0:	e28d1024 	add	r1, sp, #36	; 0x24
40019be4:	eb002229 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019be8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019bec:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a120 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019bf0:	e0000001 	and	r0, r0, r1
40019bf4:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019bf8:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019bfc:	e28d1024 	add	r1, sp, #36	; 0x24
40019c00:	eb00223d 	bl	400224fc <CyU3PDmaDscrSetConfig>
40019c04:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019c08:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a124 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019c0c:	e0000001 	and	r0, r0, r1
40019c10:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019c14:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019c18:	e1a00820 	lsr	r0, r0, #16
40019c1c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019c20:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019c24:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019c28:	e1a00802 	lsl	r0, r2, #16
40019c2c:	e1a00820 	lsr	r0, r0, #16
40019c30:	e3a02000 	mov	r2, #0
40019c34:	ebffec4f 	bl	40014d78 <CyU3PDmaSocketSendEvent>
40019c38:	ebffe340 	bl	40012940 <CyU3PSysBarrierSync>
40019c3c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019c40:	e3500000 	cmp	r0, #0
40019c44:	0a000007 	beq	40019c68 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019c48:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019c4c:	e3100010 	tst	r0, #16
40019c50:	0a000004 	beq	40019c68 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
40019c54:	e3a02000 	mov	r2, #0
40019c58:	e3a01010 	mov	r1, #16
40019c5c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019c60:	e1a00005 	mov	r0, r5
40019c64:	e12fff33 	blx	r3
40019c68:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019c6c:	e1500007 	cmp	r0, r7
40019c70:	1affffd0 	bne	40019bb8 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
40019c74:	ea000020 	b	40019cfc <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019c78:	e3a00001 	mov	r0, #1
40019c7c:	e5850000 	str	r0, [r5]
40019c80:	e1d500b4 	ldrh	r0, [r5, #4]
40019c84:	e3500005 	cmp	r0, #5
40019c88:	1a00000a 	bne	40019cb8 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
40019c8c:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019c90:	e1a0100d 	mov	r1, sp
40019c94:	ebffeb9f 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40019c98:	e3a00000 	mov	r0, #0
40019c9c:	e58d0010 	str	r0, [sp, #16]
40019ca0:	e59d0014 	ldr	r0, [sp, #20]
40019ca4:	e3c00002 	bic	r0, r0, #2
40019ca8:	e58d0014 	str	r0, [sp, #20]
40019cac:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019cb0:	e1a0100d 	mov	r1, sp
40019cb4:	ebffec41 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40019cb8:	e3a02000 	mov	r2, #0
40019cbc:	e3a01002 	mov	r1, #2
40019cc0:	e28500b0 	add	r0, r5, #176	; 0xb0
40019cc4:	ebffc036 	bl	40009da4 <_txe_event_flags_set>
40019cc8:	e3c66080 	bic	r6, r6, #128	; 0x80
40019ccc:	ebffe31b 	bl	40012940 <CyU3PSysBarrierSync>
40019cd0:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019cd4:	e3500000 	cmp	r0, #0
40019cd8:	0a000007 	beq	40019cfc <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019cdc:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019ce0:	e3100002 	tst	r0, #2
40019ce4:	0a000004 	beq	40019cfc <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019ce8:	e3a02000 	mov	r2, #0
40019cec:	e3a01002 	mov	r1, #2
40019cf0:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019cf4:	e1a00005 	mov	r0, r5
40019cf8:	e12fff33 	blx	r3
40019cfc:	e3160010 	tst	r6, #16
40019d00:	0a00004f 	beq	40019e44 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019d04:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d08:	e28d1024 	add	r1, sp, #36	; 0x24
40019d0c:	eb0021df 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019d10:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019d14:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a11c <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019d18:	e0010820 	and	r0, r1, r0, lsr #16
40019d1c:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
40019d20:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d24:	e3100001 	tst	r0, #1
40019d28:	0a000045 	beq	40019e44 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
40019d2c:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019d30:	ebffeb60 	bl	40014ab8 <CyU3PDmaSocketDisable>
40019d34:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019d38:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a120 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019d3c:	e0000001 	and	r0, r0, r1
40019d40:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019d44:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019d48:	e28d1024 	add	r1, sp, #36	; 0x24
40019d4c:	eb0021ea 	bl	400224fc <CyU3PDmaDscrSetConfig>
40019d50:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019d54:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
40019d58:	e1a0100d 	mov	r1, sp
40019d5c:	e1a00009 	mov	r0, r9
40019d60:	ebffeb6c 	bl	40014b18 <CyU3PDmaSocketGetConfig>
40019d64:	e59d000c 	ldr	r0, [sp, #12]
40019d68:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019d6c:	e58d000c 	str	r0, [sp, #12]
40019d70:	e59d000c 	ldr	r0, [sp, #12]
40019d74:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019d78:	e58d000c 	str	r0, [sp, #12]
40019d7c:	e3a00000 	mov	r0, #0
40019d80:	e58d0010 	str	r0, [sp, #16]
40019d84:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d88:	e2400001 	sub	r0, r0, #1
40019d8c:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
40019d90:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
40019d94:	e3500000 	cmp	r0, #0
40019d98:	1a000004 	bne	40019db0 <CyU3PDmaIntHandler_TypeManyToOne+0x268>
40019d9c:	e3a00010 	mov	r0, #16
40019da0:	e58d0010 	str	r0, [sp, #16]
40019da4:	e59d0014 	ldr	r0, [sp, #20]
40019da8:	e3c00010 	bic	r0, r0, #16
40019dac:	e58d0014 	str	r0, [sp, #20]
40019db0:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019db4:	e58d0000 	str	r0, [sp]
40019db8:	e1a0100d 	mov	r1, sp
40019dbc:	e1a00009 	mov	r0, r9
40019dc0:	ebffebfe 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
40019dc4:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019dc8:	e28d1024 	add	r1, sp, #36	; 0x24
40019dcc:	eb0021af 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019dd0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019dd4:	e59f1344 	ldr	r1, [pc, #836]	; 4001a120 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019dd8:	e0000001 	and	r0, r0, r1
40019ddc:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019de0:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
40019de4:	e28d1024 	add	r1, sp, #36	; 0x24
40019de8:	eb0021c3 	bl	400224fc <CyU3PDmaDscrSetConfig>
40019dec:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019df0:	e3500000 	cmp	r0, #0
40019df4:	0a000004 	beq	40019e0c <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
40019df8:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019dfc:	e59f331c 	ldr	r3, [pc, #796]	; 4001a120 <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
40019e00:	e0021003 	and	r1, r2, r3
40019e04:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019e08:	ebffe073 	bl	40011fdc <CyU3PSysFlushDRegion>
40019e0c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019e10:	e59f130c 	ldr	r1, [pc, #780]	; 4001a124 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
40019e14:	e0000001 	and	r0, r0, r1
40019e18:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019e1c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40019e20:	e1a00820 	lsr	r0, r0, #16
40019e24:	e58d0028 	str	r0, [sp, #40]	; 0x28
40019e28:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
40019e2c:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
40019e30:	e1a00802 	lsl	r0, r2, #16
40019e34:	e1a00820 	lsr	r0, r0, #16
40019e38:	e3a02000 	mov	r2, #0
40019e3c:	ebffebcd 	bl	40014d78 <CyU3PDmaSocketSendEvent>
40019e40:	ebffe2be 	bl	40012940 <CyU3PSysBarrierSync>
40019e44:	e3160080 	tst	r6, #128	; 0x80
40019e48:	0a00001c 	beq	40019ec0 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019e4c:	e3a08000 	mov	r8, #0
40019e50:	ea000005 	b	40019e6c <CyU3PDmaIntHandler_TypeManyToOne+0x324>
40019e54:	e2851024 	add	r1, r5, #36	; 0x24
40019e58:	e0811088 	add	r1, r1, r8, lsl #1
40019e5c:	e1d100b0 	ldrh	r0, [r1]
40019e60:	ebffeb14 	bl	40014ab8 <CyU3PDmaSocketDisable>
40019e64:	e2880001 	add	r0, r8, #1
40019e68:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019e6c:	e1d500ba 	ldrh	r0, [r5, #10]
40019e70:	e1500008 	cmp	r0, r8
40019e74:	cafffff6 	bgt	40019e54 <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
40019e78:	e3a00001 	mov	r0, #1
40019e7c:	e5850000 	str	r0, [r5]
40019e80:	e3a02000 	mov	r2, #0
40019e84:	e3a01001 	mov	r1, #1
40019e88:	e28500b0 	add	r0, r5, #176	; 0xb0
40019e8c:	ebffbfc4 	bl	40009da4 <_txe_event_flags_set>
40019e90:	ebffe2aa 	bl	40012940 <CyU3PSysBarrierSync>
40019e94:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019e98:	e3500000 	cmp	r0, #0
40019e9c:	0a000007 	beq	40019ec0 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019ea0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019ea4:	e3100001 	tst	r0, #1
40019ea8:	0a000004 	beq	40019ec0 <CyU3PDmaIntHandler_TypeManyToOne+0x378>
40019eac:	e3a02000 	mov	r2, #0
40019eb0:	e3a01001 	mov	r1, #1
40019eb4:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019eb8:	e1a00005 	mov	r0, r5
40019ebc:	e12fff33 	blx	r3
40019ec0:	e3160e12 	tst	r6, #288	; 0x120
40019ec4:	0a000091 	beq	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019ec8:	ebffe29c 	bl	40012940 <CyU3PSysBarrierSync>
40019ecc:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019ed0:	e3500000 	cmp	r0, #0
40019ed4:	0a00008d 	beq	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019ed8:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
40019edc:	e3100c01 	tst	r0, #256	; 0x100
40019ee0:	0a00008a 	beq	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019ee4:	e3a02000 	mov	r2, #0
40019ee8:	e3a01c01 	mov	r1, #256	; 0x100
40019eec:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
40019ef0:	e1a00005 	mov	r0, r5
40019ef4:	e12fff33 	blx	r3
40019ef8:	ea000084 	b	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019efc:	e594000c 	ldr	r0, [r4, #12]
40019f00:	e1a07800 	lsl	r7, r0, #16
40019f04:	e1a07827 	lsr	r7, r7, #16
40019f08:	e3160001 	tst	r6, #1
40019f0c:	0a000048 	beq	4001a034 <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
40019f10:	e5950000 	ldr	r0, [r5]
40019f14:	e3500004 	cmp	r0, #4
40019f18:	0a00007c 	beq	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
40019f1c:	e3a08000 	mov	r8, #0
40019f20:	ea000007 	b	40019f44 <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
40019f24:	e2850024 	add	r0, r5, #36	; 0x24
40019f28:	e0800088 	add	r0, r0, r8, lsl #1
40019f2c:	e1d000b0 	ldrh	r0, [r0]
40019f30:	e1500009 	cmp	r0, r9
40019f34:	1a000000 	bne	40019f3c <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
40019f38:	ea000004 	b	40019f50 <CyU3PDmaIntHandler_TypeManyToOne+0x408>
40019f3c:	e2880001 	add	r0, r8, #1
40019f40:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40019f44:	e1d500ba 	ldrh	r0, [r5, #10]
40019f48:	e1500008 	cmp	r0, r8
40019f4c:	cafffff4 	bgt	40019f24 <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
40019f50:	e1a00000 	nop			; (mov r0, r0)
40019f54:	e1a00000 	nop			; (mov r0, r0)
40019f58:	e285103e 	add	r1, r5, #62	; 0x3e
40019f5c:	e0811088 	add	r1, r1, r8, lsl #1
40019f60:	e1d100b0 	ldrh	r0, [r1]
40019f64:	e28d1024 	add	r1, sp, #36	; 0x24
40019f68:	eb002148 	bl	40022490 <CyU3PDmaDscrGetConfig>
40019f6c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019f70:	e58d0018 	str	r0, [sp, #24]
40019f74:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f78:	e59f119c 	ldr	r1, [pc, #412]	; 4001a11c <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019f7c:	e0010820 	and	r0, r1, r0, lsr #16
40019f80:	e1cd01bc 	strh	r0, [sp, #28]
40019f84:	e241100f 	sub	r1, r1, #15
40019f88:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f8c:	e0000001 	and	r0, r0, r1
40019f90:	e1cd01be 	strh	r0, [sp, #30]
40019f94:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019f98:	e200000f 	and	r0, r0, #15
40019f9c:	e1cd02b0 	strh	r0, [sp, #32]
40019fa0:	e5950074 	ldr	r0, [r5, #116]	; 0x74
40019fa4:	e3500000 	cmp	r0, #0
40019fa8:	0a000002 	beq	40019fb8 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
40019fac:	e1dd11be 	ldrh	r1, [sp, #30]
40019fb0:	e59d0018 	ldr	r0, [sp, #24]
40019fb4:	ebffe008 	bl	40011fdc <CyU3PSysFlushDRegion>
40019fb8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019fbc:	e3100008 	tst	r0, #8
40019fc0:	0a000003 	beq	40019fd4 <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
40019fc4:	e3a02000 	mov	r2, #0
40019fc8:	e3a01008 	mov	r1, #8
40019fcc:	e28500b0 	add	r0, r5, #176	; 0xb0
40019fd0:	ebffbf73 	bl	40009da4 <_txe_event_flags_set>
40019fd4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019fd8:	e59f113c 	ldr	r1, [pc, #316]	; 4001a11c <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019fdc:	e0010820 	and	r0, r1, r0, lsr #16
40019fe0:	e285103e 	add	r1, r5, #62	; 0x3e
40019fe4:	e0811088 	add	r1, r1, r8, lsl #1
40019fe8:	e1c100b0 	strh	r0, [r1]
40019fec:	ebffe253 	bl	40012940 <CyU3PSysBarrierSync>
40019ff0:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
40019ff4:	e3500000 	cmp	r0, #0
40019ff8:	0a000007 	beq	4001a01c <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
40019ffc:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a000:	e3100008 	tst	r0, #8
4001a004:	0a000004 	beq	4001a01c <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a008:	e28d2018 	add	r2, sp, #24
4001a00c:	e3a01008 	mov	r1, #8
4001a010:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a014:	e1a00005 	mov	r0, r5
4001a018:	e12fff33 	blx	r3
4001a01c:	e285003e 	add	r0, r5, #62	; 0x3e
4001a020:	e0800088 	add	r0, r0, r8, lsl #1
4001a024:	e1d000b0 	ldrh	r0, [r0]
4001a028:	e1500007 	cmp	r0, r7
4001a02c:	1affffc9 	bne	40019f58 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a030:	ea000036 	b	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a034:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a038:	e28d1024 	add	r1, sp, #36	; 0x24
4001a03c:	eb002113 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a040:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a044:	e58d0018 	str	r0, [sp, #24]
4001a048:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a04c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a11c <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a050:	e0010820 	and	r0, r1, r0, lsr #16
4001a054:	e1cd01bc 	strh	r0, [sp, #28]
4001a058:	e241100f 	sub	r1, r1, #15
4001a05c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a060:	e0000001 	and	r0, r0, r1
4001a064:	e1cd01be 	strh	r0, [sp, #30]
4001a068:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a06c:	e200000f 	and	r0, r0, #15
4001a070:	e1cd02b0 	strh	r0, [sp, #32]
4001a074:	e3a00001 	mov	r0, #1
4001a078:	e5850000 	str	r0, [r5]
4001a07c:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a080:	e3500000 	cmp	r0, #0
4001a084:	0a000002 	beq	4001a094 <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a088:	e1dd11be 	ldrh	r1, [sp, #30]
4001a08c:	e59d0018 	ldr	r0, [sp, #24]
4001a090:	ebffdfd1 	bl	40011fdc <CyU3PSysFlushDRegion>
4001a094:	e1d500b4 	ldrh	r0, [r5, #4]
4001a098:	e3500005 	cmp	r0, #5
4001a09c:	1a00000a 	bne	4001a0cc <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a0a0:	e1a0100d 	mov	r1, sp
4001a0a4:	e1a00009 	mov	r0, r9
4001a0a8:	ebffea9a 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001a0ac:	e3a00000 	mov	r0, #0
4001a0b0:	e58d0010 	str	r0, [sp, #16]
4001a0b4:	e59d0014 	ldr	r0, [sp, #20]
4001a0b8:	e3c00001 	bic	r0, r0, #1
4001a0bc:	e58d0014 	str	r0, [sp, #20]
4001a0c0:	e1a0100d 	mov	r1, sp
4001a0c4:	e1a00009 	mov	r0, r9
4001a0c8:	ebffeb3c 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
4001a0cc:	e3a02000 	mov	r2, #0
4001a0d0:	e3a01004 	mov	r1, #4
4001a0d4:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a0d8:	ebffbf31 	bl	40009da4 <_txe_event_flags_set>
4001a0dc:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a0e0:	ebffe216 	bl	40012940 <CyU3PSysBarrierSync>
4001a0e4:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a0e8:	e3500000 	cmp	r0, #0
4001a0ec:	0a000007 	beq	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a0f0:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a0f4:	e3100004 	tst	r0, #4
4001a0f8:	0a000004 	beq	4001a110 <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a0fc:	e28d2018 	add	r2, sp, #24
4001a100:	e3a01004 	mov	r1, #4
4001a104:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a108:	e1a00005 	mov	r0, r5
4001a10c:	e12fff33 	blx	r3
4001a110:	e2850078 	add	r0, r5, #120	; 0x78
4001a114:	ebffbfef 	bl	4000a0d8 <_txe_mutex_put>
4001a118:	eafffe93 	b	40019b6c <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a11c:	0000ffff 	.word	0x0000ffff
4001a120:	0000fff0 	.word	0x0000fff0
4001a124:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a128 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a128:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a12c:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a130:	e1a04000 	mov	r4, r0
4001a134:	e594a004 	ldr	sl, [r4, #4]
4001a138:	e5940000 	ldr	r0, [r4]
4001a13c:	e59f1664 	ldr	r1, [pc, #1636]	; 4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a140:	e0016820 	and	r6, r1, r0, lsr #16
4001a144:	e5945008 	ldr	r5, [r4, #8]
4001a148:	e3150040 	tst	r5, #64	; 0x40
4001a14c:	0a000003 	beq	4001a160 <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a150:	e1a0000a 	mov	r0, sl
4001a154:	eb0001c2 	bl	4001a864 <CyU3PDmaMultiChannelHandleError>
4001a158:	e28dd038 	add	sp, sp, #56	; 0x38
4001a15c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a160:	e3e01000 	mvn	r1, #0
4001a164:	e28a0078 	add	r0, sl, #120	; 0x78
4001a168:	ebffbfa5 	bl	4000a004 <_txe_mutex_get>
4001a16c:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a170:	e1500006 	cmp	r0, r6
4001a174:	0a0000fc 	beq	4001a56c <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a178:	e594000c 	ldr	r0, [r4, #12]
4001a17c:	e1a09800 	lsl	r9, r0, #16
4001a180:	e1a09829 	lsr	r9, r9, #16
4001a184:	e3a08000 	mov	r8, #0
4001a188:	ea000007 	b	4001a1ac <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a18c:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a190:	e0800088 	add	r0, r0, r8, lsl #1
4001a194:	e1d000b0 	ldrh	r0, [r0]
4001a198:	e1500006 	cmp	r0, r6
4001a19c:	1a000000 	bne	4001a1a4 <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a1a0:	ea000004 	b	4001a1b8 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a1a4:	e2880001 	add	r0, r8, #1
4001a1a8:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a1ac:	e1da00ba 	ldrh	r0, [sl, #10]
4001a1b0:	e1500008 	cmp	r0, r8
4001a1b4:	cafffff4 	bgt	4001a18c <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a1b8:	e1a00000 	nop			; (mov r0, r0)
4001a1bc:	e3150002 	tst	r5, #2
4001a1c0:	0a00007e 	beq	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a1c4:	e59a0000 	ldr	r0, [sl]
4001a1c8:	e3500003 	cmp	r0, #3
4001a1cc:	0a00005a 	beq	4001a33c <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a1d0:	e1a00000 	nop			; (mov r0, r0)
4001a1d4:	e28a1046 	add	r1, sl, #70	; 0x46
4001a1d8:	e0811088 	add	r1, r1, r8, lsl #1
4001a1dc:	e1d100b0 	ldrh	r0, [r1]
4001a1e0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a1e4:	eb0020a9 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a1e8:	e28a1046 	add	r1, sl, #70	; 0x46
4001a1ec:	e0811088 	add	r1, r1, r8, lsl #1
4001a1f0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a1f4:	e1c100b0 	strh	r0, [r1]
4001a1f8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a1fc:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a200:	e0017820 	and	r7, r1, r0, lsr #16
4001a204:	e28d1028 	add	r1, sp, #40	; 0x28
4001a208:	e1a00007 	mov	r0, r7
4001a20c:	eb00209f 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a210:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a214:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a7ac <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a218:	e0000001 	and	r0, r0, r1
4001a21c:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a220:	e28d1028 	add	r1, sp, #40	; 0x28
4001a224:	e1a00007 	mov	r0, r7
4001a228:	eb0020b3 	bl	400224fc <CyU3PDmaDscrSetConfig>
4001a22c:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a230:	e3a02000 	mov	r2, #0
4001a234:	e1a01007 	mov	r1, r7
4001a238:	ebffeace 	bl	40014d78 <CyU3PDmaSocketSendEvent>
4001a23c:	ebffe1bf 	bl	40012940 <CyU3PSysBarrierSync>
4001a240:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a244:	e3500000 	cmp	r0, #0
4001a248:	0a000007 	beq	4001a26c <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a24c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a250:	e3100010 	tst	r0, #16
4001a254:	0a000004 	beq	4001a26c <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a258:	e3a02000 	mov	r2, #0
4001a25c:	e3a01010 	mov	r1, #16
4001a260:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a264:	e1a0000a 	mov	r0, sl
4001a268:	e12fff33 	blx	r3
4001a26c:	e28a0046 	add	r0, sl, #70	; 0x46
4001a270:	e0800088 	add	r0, r0, r8, lsl #1
4001a274:	e1d000b0 	ldrh	r0, [r0]
4001a278:	e1500009 	cmp	r0, r9
4001a27c:	1affffd4 	bne	4001a1d4 <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a280:	e59a0000 	ldr	r0, [sl]
4001a284:	e3500006 	cmp	r0, #6
4001a288:	1a00004c 	bne	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a28c:	e1da00b8 	ldrh	r0, [sl, #8]
4001a290:	e1da10ba 	ldrh	r1, [sl, #10]
4001a294:	e0000091 	mul	r0, r1, r0
4001a298:	e1a08800 	lsl	r8, r0, #16
4001a29c:	e1a08828 	lsr	r8, r8, #16
4001a2a0:	e1da71b4 	ldrh	r7, [sl, #20]
4001a2a4:	ea00000c 	b	4001a2dc <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a2a8:	e28d1028 	add	r1, sp, #40	; 0x28
4001a2ac:	e1a00007 	mov	r0, r7
4001a2b0:	eb002076 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a2b4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a2b8:	e3100008 	tst	r0, #8
4001a2bc:	0a000000 	beq	4001a2c4 <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a2c0:	ea000007 	b	4001a2e4 <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a2c4:	e2480001 	sub	r0, r8, #1
4001a2c8:	e1a08800 	lsl	r8, r0, #16
4001a2cc:	e1a08828 	lsr	r8, r8, #16
4001a2d0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a2d4:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a2d8:	e0017820 	and	r7, r1, r0, lsr #16
4001a2dc:	e3580000 	cmp	r8, #0
4001a2e0:	1afffff0 	bne	4001a2a8 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a2e4:	e1a00000 	nop			; (mov r0, r0)
4001a2e8:	e3580000 	cmp	r8, #0
4001a2ec:	1a000033 	bne	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a2f0:	e3a00001 	mov	r0, #1
4001a2f4:	e58a0000 	str	r0, [sl]
4001a2f8:	e3a02000 	mov	r2, #0
4001a2fc:	e3a01001 	mov	r1, #1
4001a300:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a304:	ebffbea6 	bl	40009da4 <_txe_event_flags_set>
4001a308:	ebffe18c 	bl	40012940 <CyU3PSysBarrierSync>
4001a30c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a310:	e3500000 	cmp	r0, #0
4001a314:	0a000029 	beq	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a318:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a31c:	e3100001 	tst	r0, #1
4001a320:	0a000026 	beq	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a324:	e3a02000 	mov	r2, #0
4001a328:	e3a01001 	mov	r1, #1
4001a32c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a330:	e1a0000a 	mov	r0, sl
4001a334:	e12fff33 	blx	r3
4001a338:	ea000020 	b	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a33c:	e3a00001 	mov	r0, #1
4001a340:	e58a0000 	str	r0, [sl]
4001a344:	e1da00b4 	ldrh	r0, [sl, #4]
4001a348:	e3500006 	cmp	r0, #6
4001a34c:	1a00000a 	bne	4001a37c <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a350:	e28d1004 	add	r1, sp, #4
4001a354:	e1a00006 	mov	r0, r6
4001a358:	ebffe9ee 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001a35c:	e3a00000 	mov	r0, #0
4001a360:	e58d0014 	str	r0, [sp, #20]
4001a364:	e59d0018 	ldr	r0, [sp, #24]
4001a368:	e3c00002 	bic	r0, r0, #2
4001a36c:	e58d0018 	str	r0, [sp, #24]
4001a370:	e28d1004 	add	r1, sp, #4
4001a374:	e1a00006 	mov	r0, r6
4001a378:	ebffea90 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
4001a37c:	e3a02000 	mov	r2, #0
4001a380:	e3a01002 	mov	r1, #2
4001a384:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a388:	ebffbe85 	bl	40009da4 <_txe_event_flags_set>
4001a38c:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a390:	ebffe16a 	bl	40012940 <CyU3PSysBarrierSync>
4001a394:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a398:	e3500000 	cmp	r0, #0
4001a39c:	0a000007 	beq	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a3a0:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a3a4:	e3100002 	tst	r0, #2
4001a3a8:	0a000004 	beq	4001a3c0 <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a3ac:	e3a02000 	mov	r2, #0
4001a3b0:	e3a01002 	mov	r1, #2
4001a3b4:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a3b8:	e1a0000a 	mov	r0, sl
4001a3bc:	e12fff33 	blx	r3
4001a3c0:	e3150010 	tst	r5, #16
4001a3c4:	0a000059 	beq	4001a530 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a3c8:	e28a1046 	add	r1, sl, #70	; 0x46
4001a3cc:	e0811088 	add	r1, r1, r8, lsl #1
4001a3d0:	e1d100b0 	ldrh	r0, [r1]
4001a3d4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a3d8:	eb00202c 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a3dc:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a3e0:	e3100001 	tst	r0, #1
4001a3e4:	0a000051 	beq	4001a530 <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a3e8:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a3ec:	e0811088 	add	r1, r1, r8, lsl #1
4001a3f0:	e1d100b0 	ldrh	r0, [r1]
4001a3f4:	ebffe9af 	bl	40014ab8 <CyU3PDmaSocketDisable>
4001a3f8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a3fc:	e59f13a8 	ldr	r1, [pc, #936]	; 4001a7ac <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a400:	e0000001 	and	r0, r0, r1
4001a404:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a408:	e28a1046 	add	r1, sl, #70	; 0x46
4001a40c:	e0811088 	add	r1, r1, r8, lsl #1
4001a410:	e1d100b0 	ldrh	r0, [r1]
4001a414:	e28d1028 	add	r1, sp, #40	; 0x28
4001a418:	eb002037 	bl	400224fc <CyU3PDmaDscrSetConfig>
4001a41c:	e28a1046 	add	r1, sl, #70	; 0x46
4001a420:	e0811088 	add	r1, r1, r8, lsl #1
4001a424:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a428:	e1c100b0 	strh	r0, [r1]
4001a42c:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a430:	e0811088 	add	r1, r1, r8, lsl #1
4001a434:	e1d100b0 	ldrh	r0, [r1]
4001a438:	e28d1004 	add	r1, sp, #4
4001a43c:	ebffe9b5 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001a440:	e59d0010 	ldr	r0, [sp, #16]
4001a444:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a448:	e58d0010 	str	r0, [sp, #16]
4001a44c:	e59d0010 	ldr	r0, [sp, #16]
4001a450:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a454:	e58d0010 	str	r0, [sp, #16]
4001a458:	e3a00000 	mov	r0, #0
4001a45c:	e58d0014 	str	r0, [sp, #20]
4001a460:	e28a0064 	add	r0, sl, #100	; 0x64
4001a464:	e0800088 	add	r0, r0, r8, lsl #1
4001a468:	e1d000b0 	ldrh	r0, [r0]
4001a46c:	e2400001 	sub	r0, r0, #1
4001a470:	e28a1064 	add	r1, sl, #100	; 0x64
4001a474:	e0811088 	add	r1, r1, r8, lsl #1
4001a478:	e1c100b0 	strh	r0, [r1]
4001a47c:	e28a0064 	add	r0, sl, #100	; 0x64
4001a480:	e0800088 	add	r0, r0, r8, lsl #1
4001a484:	e1d000b0 	ldrh	r0, [r0]
4001a488:	e3500000 	cmp	r0, #0
4001a48c:	1a000004 	bne	4001a4a4 <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a490:	e3a00010 	mov	r0, #16
4001a494:	e58d0014 	str	r0, [sp, #20]
4001a498:	e59d0018 	ldr	r0, [sp, #24]
4001a49c:	e3c00010 	bic	r0, r0, #16
4001a4a0:	e58d0018 	str	r0, [sp, #24]
4001a4a4:	e28a0046 	add	r0, sl, #70	; 0x46
4001a4a8:	e0800088 	add	r0, r0, r8, lsl #1
4001a4ac:	e1d000b0 	ldrh	r0, [r0]
4001a4b0:	e58d0004 	str	r0, [sp, #4]
4001a4b4:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a4b8:	e0811088 	add	r1, r1, r8, lsl #1
4001a4bc:	e1d100b0 	ldrh	r0, [r1]
4001a4c0:	e28d1004 	add	r1, sp, #4
4001a4c4:	ebffea3d 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
4001a4c8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a4cc:	e59f12d4 	ldr	r1, [pc, #724]	; 4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a4d0:	e0017820 	and	r7, r1, r0, lsr #16
4001a4d4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a4d8:	e1a00007 	mov	r0, r7
4001a4dc:	eb001feb 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a4e0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a4e4:	e59f12c0 	ldr	r1, [pc, #704]	; 4001a7ac <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a4e8:	e0000001 	and	r0, r0, r1
4001a4ec:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a4f0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a4f4:	e1a00007 	mov	r0, r7
4001a4f8:	eb001fff 	bl	400224fc <CyU3PDmaDscrSetConfig>
4001a4fc:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a500:	e3500000 	cmp	r0, #0
4001a504:	0a000004 	beq	4001a51c <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a508:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a50c:	e59f3298 	ldr	r3, [pc, #664]	; 4001a7ac <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a510:	e0021003 	and	r1, r2, r3
4001a514:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a518:	ebffdeaf 	bl	40011fdc <CyU3PSysFlushDRegion>
4001a51c:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a520:	e3a02000 	mov	r2, #0
4001a524:	e1a01007 	mov	r1, r7
4001a528:	ebffea12 	bl	40014d78 <CyU3PDmaSocketSendEvent>
4001a52c:	ebffe103 	bl	40012940 <CyU3PSysBarrierSync>
4001a530:	e3150020 	tst	r5, #32
4001a534:	0a000098 	beq	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a538:	ebffe100 	bl	40012940 <CyU3PSysBarrierSync>
4001a53c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a540:	e3500000 	cmp	r0, #0
4001a544:	0a000094 	beq	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a548:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a54c:	e3100080 	tst	r0, #128	; 0x80
4001a550:	0a000091 	beq	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a554:	e3a02000 	mov	r2, #0
4001a558:	e3a01080 	mov	r1, #128	; 0x80
4001a55c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a560:	e1a0000a 	mov	r0, sl
4001a564:	e12fff33 	blx	r3
4001a568:	ea00008b 	b	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a56c:	e594000c 	ldr	r0, [r4, #12]
4001a570:	e1a09800 	lsl	r9, r0, #16
4001a574:	e1a09829 	lsr	r9, r9, #16
4001a578:	e3150001 	tst	r5, #1
4001a57c:	0a00006b 	beq	4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a580:	e59a0000 	ldr	r0, [sl]
4001a584:	e3500004 	cmp	r0, #4
4001a588:	0a000031 	beq	4001a654 <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a58c:	e1a00000 	nop			; (mov r0, r0)
4001a590:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a594:	e28d1028 	add	r1, sp, #40	; 0x28
4001a598:	eb001fbc 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a59c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a5a0:	e58d001c 	str	r0, [sp, #28]
4001a5a4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a5a8:	e59f11f8 	ldr	r1, [pc, #504]	; 4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a5ac:	e0010820 	and	r0, r1, r0, lsr #16
4001a5b0:	e1cd02b0 	strh	r0, [sp, #32]
4001a5b4:	e241100f 	sub	r1, r1, #15
4001a5b8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a5bc:	e0000001 	and	r0, r0, r1
4001a5c0:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a5c4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a5c8:	e200000f 	and	r0, r0, #15
4001a5cc:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a5d0:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a5d4:	e3500000 	cmp	r0, #0
4001a5d8:	0a000002 	beq	4001a5e8 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001a5dc:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a5e0:	e59d001c 	ldr	r0, [sp, #28]
4001a5e4:	ebffde7c 	bl	40011fdc <CyU3PSysFlushDRegion>
4001a5e8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a5ec:	e3100008 	tst	r0, #8
4001a5f0:	0a000003 	beq	4001a604 <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001a5f4:	e3a02000 	mov	r2, #0
4001a5f8:	e3a01008 	mov	r1, #8
4001a5fc:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a600:	ebffbde7 	bl	40009da4 <_txe_event_flags_set>
4001a604:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a608:	e59f1198 	ldr	r1, [pc, #408]	; 4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a60c:	e0010820 	and	r0, r1, r0, lsr #16
4001a610:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001a614:	ebffe0c9 	bl	40012940 <CyU3PSysBarrierSync>
4001a618:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a61c:	e3500000 	cmp	r0, #0
4001a620:	0a000007 	beq	4001a644 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a624:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a628:	e3100008 	tst	r0, #8
4001a62c:	0a000004 	beq	4001a644 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001a630:	e28d201c 	add	r2, sp, #28
4001a634:	e3a01008 	mov	r1, #8
4001a638:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a63c:	e1a0000a 	mov	r0, sl
4001a640:	e12fff33 	blx	r3
4001a644:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a648:	e1500009 	cmp	r0, r9
4001a64c:	1affffcf 	bne	4001a590 <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001a650:	ea000036 	b	4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a654:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001a658:	e28d1028 	add	r1, sp, #40	; 0x28
4001a65c:	eb001f8b 	bl	40022490 <CyU3PDmaDscrGetConfig>
4001a660:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a664:	e58d001c 	str	r0, [sp, #28]
4001a668:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a66c:	e59f1134 	ldr	r1, [pc, #308]	; 4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a670:	e0010820 	and	r0, r1, r0, lsr #16
4001a674:	e1cd02b0 	strh	r0, [sp, #32]
4001a678:	e241100f 	sub	r1, r1, #15
4001a67c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a680:	e0000001 	and	r0, r0, r1
4001a684:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a688:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a68c:	e200000f 	and	r0, r0, #15
4001a690:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a694:	e3a00001 	mov	r0, #1
4001a698:	e58a0000 	str	r0, [sl]
4001a69c:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a6a0:	e3500000 	cmp	r0, #0
4001a6a4:	0a000002 	beq	4001a6b4 <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001a6a8:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001a6ac:	e59d001c 	ldr	r0, [sp, #28]
4001a6b0:	ebffde49 	bl	40011fdc <CyU3PSysFlushDRegion>
4001a6b4:	e1da00b4 	ldrh	r0, [sl, #4]
4001a6b8:	e3500006 	cmp	r0, #6
4001a6bc:	1a00000a 	bne	4001a6ec <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001a6c0:	e28d1004 	add	r1, sp, #4
4001a6c4:	e1a00006 	mov	r0, r6
4001a6c8:	ebffe912 	bl	40014b18 <CyU3PDmaSocketGetConfig>
4001a6cc:	e3a00000 	mov	r0, #0
4001a6d0:	e58d0014 	str	r0, [sp, #20]
4001a6d4:	e59d0018 	ldr	r0, [sp, #24]
4001a6d8:	e3c00001 	bic	r0, r0, #1
4001a6dc:	e58d0018 	str	r0, [sp, #24]
4001a6e0:	e28d1004 	add	r1, sp, #4
4001a6e4:	e1a00006 	mov	r0, r6
4001a6e8:	ebffe9b4 	bl	40014dc0 <CyU3PDmaSocketSetConfig>
4001a6ec:	e3a02000 	mov	r2, #0
4001a6f0:	e3a01004 	mov	r1, #4
4001a6f4:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a6f8:	ebffbda9 	bl	40009da4 <_txe_event_flags_set>
4001a6fc:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a700:	ebffe08e 	bl	40012940 <CyU3PSysBarrierSync>
4001a704:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a708:	e3500000 	cmp	r0, #0
4001a70c:	0a000007 	beq	4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a710:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a714:	e3100004 	tst	r0, #4
4001a718:	0a000004 	beq	4001a730 <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a71c:	e28d201c 	add	r2, sp, #28
4001a720:	e3a01004 	mov	r1, #4
4001a724:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a728:	e1a0000a 	mov	r0, sl
4001a72c:	e12fff33 	blx	r3
4001a730:	e3150080 	tst	r5, #128	; 0x80
4001a734:	0a000018 	beq	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a738:	e1da00b4 	ldrh	r0, [sl, #4]
4001a73c:	e3500006 	cmp	r0, #6
4001a740:	1a000012 	bne	4001a790 <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001a744:	e3a00001 	mov	r0, #1
4001a748:	e58a0000 	str	r0, [sl]
4001a74c:	e3a02000 	mov	r2, #0
4001a750:	e3a01001 	mov	r1, #1
4001a754:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a758:	ebffbd91 	bl	40009da4 <_txe_event_flags_set>
4001a75c:	ebffe077 	bl	40012940 <CyU3PSysBarrierSync>
4001a760:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a764:	e3500000 	cmp	r0, #0
4001a768:	0a00000b 	beq	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a76c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a770:	e3100001 	tst	r0, #1
4001a774:	0a000008 	beq	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a778:	e3a02000 	mov	r2, #0
4001a77c:	e3a01001 	mov	r1, #1
4001a780:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a784:	e1a0000a 	mov	r0, sl
4001a788:	e12fff33 	blx	r3
4001a78c:	ea000002 	b	4001a79c <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a790:	e3a00006 	mov	r0, #6
4001a794:	e58a0000 	str	r0, [sl]
4001a798:	ebffe068 	bl	40012940 <CyU3PSysBarrierSync>
4001a79c:	e28a0078 	add	r0, sl, #120	; 0x78
4001a7a0:	ebffbe4c 	bl	4000a0d8 <_txe_mutex_put>
4001a7a4:	eafffe6b 	b	4001a158 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001a7a8:	0000ffff 	.word	0x0000ffff
4001a7ac:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001a7b0 <CyU3PDmaIsSockAvlEnReqd>:
4001a7b0:	e1a01000 	mov	r1, r0
4001a7b4:	e3a0003f 	mov	r0, #63	; 0x3f
4001a7b8:	e0000441 	and	r0, r0, r1, asr #8
4001a7bc:	e3500003 	cmp	r0, #3
4001a7c0:	1a000004 	bne	4001a7d8 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001a7c4:	e3a00001 	mov	r0, #1
4001a7c8:	e59f203c 	ldr	r2, [pc, #60]	; 4001a80c <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001a7cc:	e1d220b0 	ldrh	r2, [r2]
4001a7d0:	e1120110 	tst	r2, r0, lsl r1
4001a7d4:	1a000008 	bne	4001a7fc <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001a7d8:	e3a0003f 	mov	r0, #63	; 0x3f
4001a7dc:	e0000441 	and	r0, r0, r1, asr #8
4001a7e0:	e3500004 	cmp	r0, #4
4001a7e4:	1a000006 	bne	4001a804 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a7e8:	e3a00001 	mov	r0, #1
4001a7ec:	e59f201c 	ldr	r2, [pc, #28]	; 4001a810 <CyU3PDmaIsSockAvlEnReqd+0x60>
4001a7f0:	e1d220b0 	ldrh	r2, [r2]
4001a7f4:	e1120110 	tst	r2, r0, lsl r1
4001a7f8:	0a000001 	beq	4001a804 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001a7fc:	e3a00001 	mov	r0, #1
4001a800:	e12fff1e 	bx	lr
4001a804:	e3a00000 	mov	r0, #0
4001a808:	eafffffc 	b	4001a800 <CyU3PDmaIsSockAvlEnReqd+0x50>
4001a80c:	40030cfc 	.word	0x40030cfc
4001a810:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaMsgSend:

4001a814 <CyU3PDmaMsgSend>:
4001a814:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001a818:	e1a04000 	mov	r4, r0
4001a81c:	e1a05001 	mov	r5, r1
4001a820:	e1a07002 	mov	r7, r2
4001a824:	e3570001 	cmp	r7, #1
4001a828:	1a000005 	bne	4001a844 <CyU3PDmaMsgSend+0x30>
4001a82c:	e1a02005 	mov	r2, r5
4001a830:	e1a01004 	mov	r1, r4
4001a834:	e59f0024 	ldr	r0, [pc, #36]	; 4001a860 <CyU3PDmaMsgSend+0x4c>
4001a838:	ebffbebc 	bl	4000a330 <_txe_queue_front_send>
4001a83c:	e1a06000 	mov	r6, r0
4001a840:	ea000004 	b	4001a858 <CyU3PDmaMsgSend+0x44>
4001a844:	e1a02005 	mov	r2, r5
4001a848:	e1a01004 	mov	r1, r4
4001a84c:	e59f000c 	ldr	r0, [pc, #12]	; 4001a860 <CyU3PDmaMsgSend+0x4c>
4001a850:	ebffbf06 	bl	4000a470 <_txe_queue_send>
4001a854:	e1a06000 	mov	r6, r0
4001a858:	e1a00006 	mov	r0, r6
4001a85c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001a860:	40031930 	.word	0x40031930

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001a864 <CyU3PDmaMultiChannelHandleError>:
4001a864:	e92d4070 	push	{r4, r5, r6, lr}
4001a868:	e1a04000 	mov	r4, r0
4001a86c:	e3e01000 	mvn	r1, #0
4001a870:	e2840078 	add	r0, r4, #120	; 0x78
4001a874:	ebffbde2 	bl	4000a004 <_txe_mutex_get>
4001a878:	e1d400b4 	ldrh	r0, [r4, #4]
4001a87c:	e3500005 	cmp	r0, #5
4001a880:	0a000002 	beq	4001a890 <CyU3PDmaMultiChannelHandleError+0x2c>
4001a884:	e1d400b4 	ldrh	r0, [r4, #4]
4001a888:	e3500007 	cmp	r0, #7
4001a88c:	1a00000d 	bne	4001a8c8 <CyU3PDmaMultiChannelHandleError+0x64>
4001a890:	e3a05000 	mov	r5, #0
4001a894:	ea000005 	b	4001a8b0 <CyU3PDmaMultiChannelHandleError+0x4c>
4001a898:	e2841024 	add	r1, r4, #36	; 0x24
4001a89c:	e0811085 	add	r1, r1, r5, lsl #1
4001a8a0:	e1d100b0 	ldrh	r0, [r1]
4001a8a4:	ebffe883 	bl	40014ab8 <CyU3PDmaSocketDisable>
4001a8a8:	e2850001 	add	r0, r5, #1
4001a8ac:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a8b0:	e1d400ba 	ldrh	r0, [r4, #10]
4001a8b4:	e1500005 	cmp	r0, r5
4001a8b8:	cafffff6 	bgt	4001a898 <CyU3PDmaMultiChannelHandleError+0x34>
4001a8bc:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001a8c0:	ebffe87c 	bl	40014ab8 <CyU3PDmaSocketDisable>
4001a8c4:	ea00000c 	b	4001a8fc <CyU3PDmaMultiChannelHandleError+0x98>
4001a8c8:	e3a05000 	mov	r5, #0
4001a8cc:	ea000005 	b	4001a8e8 <CyU3PDmaMultiChannelHandleError+0x84>
4001a8d0:	e284102c 	add	r1, r4, #44	; 0x2c
4001a8d4:	e0811085 	add	r1, r1, r5, lsl #1
4001a8d8:	e1d100b0 	ldrh	r0, [r1]
4001a8dc:	ebffe875 	bl	40014ab8 <CyU3PDmaSocketDisable>
4001a8e0:	e2850001 	add	r0, r5, #1
4001a8e4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001a8e8:	e1d400ba 	ldrh	r0, [r4, #10]
4001a8ec:	e1500005 	cmp	r0, r5
4001a8f0:	cafffff6 	bgt	4001a8d0 <CyU3PDmaMultiChannelHandleError+0x6c>
4001a8f4:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001a8f8:	ebffe86e 	bl	40014ab8 <CyU3PDmaSocketDisable>
4001a8fc:	e3a02002 	mov	r2, #2
4001a900:	e3e01007 	mvn	r1, #7
4001a904:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a908:	ebffbd25 	bl	40009da4 <_txe_event_flags_set>
4001a90c:	e3a02000 	mov	r2, #0
4001a910:	e3a01040 	mov	r1, #64	; 0x40
4001a914:	e28400b0 	add	r0, r4, #176	; 0xb0
4001a918:	ebffbd21 	bl	40009da4 <_txe_event_flags_set>
4001a91c:	e3a00005 	mov	r0, #5
4001a920:	e5840000 	str	r0, [r4]
4001a924:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001a928:	e3500000 	cmp	r0, #0
4001a92c:	0a000007 	beq	4001a950 <CyU3PDmaMultiChannelHandleError+0xec>
4001a930:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001a934:	e3100040 	tst	r0, #64	; 0x40
4001a938:	0a000004 	beq	4001a950 <CyU3PDmaMultiChannelHandleError+0xec>
4001a93c:	e3a02000 	mov	r2, #0
4001a940:	e3a01040 	mov	r1, #64	; 0x40
4001a944:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001a948:	e1a00004 	mov	r0, r4
4001a94c:	e12fff33 	blx	r3
4001a950:	e2840078 	add	r0, r4, #120	; 0x78
4001a954:	ebffbddf 	bl	4000a0d8 <_txe_mutex_put>
4001a958:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001a95c <CyU3PDmaThreadEntry>:
4001a95c:	e92d4070 	push	{r4, r5, r6, lr}
4001a960:	e24dd040 	sub	sp, sp, #64	; 0x40
4001a964:	ea00003f 	b	4001aa68 <CyU3PDmaThreadEntry+0x10c>
4001a968:	e3e02000 	mvn	r2, #0
4001a96c:	e1a0100d 	mov	r1, sp
4001a970:	e59f00f4 	ldr	r0, [pc, #244]	; 4001aa6c <CyU3PDmaThreadEntry+0x110>
4001a974:	ebffbe95 	bl	4000a3d0 <_txe_queue_receive>
4001a978:	e1a05000 	mov	r5, r0
4001a97c:	e3550000 	cmp	r5, #0
4001a980:	0a000000 	beq	4001a988 <CyU3PDmaThreadEntry+0x2c>
4001a984:	ea000037 	b	4001aa68 <CyU3PDmaThreadEntry+0x10c>
4001a988:	e59d0000 	ldr	r0, [sp]
4001a98c:	e20040ff 	and	r4, r0, #255	; 0xff
4001a990:	e3540000 	cmp	r4, #0
4001a994:	0a000000 	beq	4001a99c <CyU3PDmaThreadEntry+0x40>
4001a998:	ea000032 	b	4001aa68 <CyU3PDmaThreadEntry+0x10c>
4001a99c:	e59d6004 	ldr	r6, [sp, #4]
4001a9a0:	e1d600b4 	ldrh	r0, [r6, #4]
4001a9a4:	e350000a 	cmp	r0, #10
4001a9a8:	308ff100 	addcc	pc, pc, r0, lsl #2
4001a9ac:	ea000028 	b	4001aa54 <CyU3PDmaThreadEntry+0xf8>
4001a9b0:	ea000008 	b	4001a9d8 <CyU3PDmaThreadEntry+0x7c>
4001a9b4:	ea000009 	b	4001a9e0 <CyU3PDmaThreadEntry+0x84>
4001a9b8:	ea00000e 	b	4001a9f8 <CyU3PDmaThreadEntry+0x9c>
4001a9bc:	ea00000a 	b	4001a9ec <CyU3PDmaThreadEntry+0x90>
4001a9c0:	ea00000b 	b	4001a9f4 <CyU3PDmaThreadEntry+0x98>
4001a9c4:	ea00000e 	b	4001aa04 <CyU3PDmaThreadEntry+0xa8>
4001a9c8:	ea000012 	b	4001aa18 <CyU3PDmaThreadEntry+0xbc>
4001a9cc:	ea00000e 	b	4001aa0c <CyU3PDmaThreadEntry+0xb0>
4001a9d0:	ea000012 	b	4001aa20 <CyU3PDmaThreadEntry+0xc4>
4001a9d4:	ea000014 	b	4001aa2c <CyU3PDmaThreadEntry+0xd0>
4001a9d8:	e1a00000 	nop			; (mov r0, r0)
4001a9dc:	e1a00000 	nop			; (mov r0, r0)
4001a9e0:	e1a0000d 	mov	r0, sp
4001a9e4:	ebfffa18 	bl	4001924c <CyU3PDmaIntHandler_TypeAuto>
4001a9e8:	ea00001b 	b	4001aa5c <CyU3PDmaThreadEntry+0x100>
4001a9ec:	e1a00000 	nop			; (mov r0, r0)
4001a9f0:	e1a00000 	nop			; (mov r0, r0)
4001a9f4:	e1a00000 	nop			; (mov r0, r0)
4001a9f8:	e1a0000d 	mov	r0, sp
4001a9fc:	ebfffaed 	bl	400195b8 <CyU3PDmaIntHandler_TypeManual>
4001aa00:	ea000015 	b	4001aa5c <CyU3PDmaThreadEntry+0x100>
4001aa04:	e1a00000 	nop			; (mov r0, r0)
4001aa08:	e1a00000 	nop			; (mov r0, r0)
4001aa0c:	e1a0000d 	mov	r0, sp
4001aa10:	ebfffc4c 	bl	40019b48 <CyU3PDmaIntHandler_TypeManyToOne>
4001aa14:	ea000010 	b	4001aa5c <CyU3PDmaThreadEntry+0x100>
4001aa18:	e1a00000 	nop			; (mov r0, r0)
4001aa1c:	e1a00000 	nop			; (mov r0, r0)
4001aa20:	e1a0000d 	mov	r0, sp
4001aa24:	ebfffdbf 	bl	4001a128 <CyU3PDmaIntHandler_TypeOneToMany>
4001aa28:	ea00000b 	b	4001aa5c <CyU3PDmaThreadEntry+0x100>
4001aa2c:	e1a00000 	nop			; (mov r0, r0)
4001aa30:	e59f0038 	ldr	r0, [pc, #56]	; 4001aa70 <CyU3PDmaThreadEntry+0x114>
4001aa34:	e5900000 	ldr	r0, [r0]
4001aa38:	e3500000 	cmp	r0, #0
4001aa3c:	0a000003 	beq	4001aa50 <CyU3PDmaThreadEntry+0xf4>
4001aa40:	e1a0000d 	mov	r0, sp
4001aa44:	e59f1024 	ldr	r1, [pc, #36]	; 4001aa70 <CyU3PDmaThreadEntry+0x114>
4001aa48:	e5911000 	ldr	r1, [r1]
4001aa4c:	e12fff31 	blx	r1
4001aa50:	ea000001 	b	4001aa5c <CyU3PDmaThreadEntry+0x100>
4001aa54:	e1a00000 	nop			; (mov r0, r0)
4001aa58:	e1a00000 	nop			; (mov r0, r0)
4001aa5c:	e1a00000 	nop			; (mov r0, r0)
4001aa60:	ebffbf88 	bl	4000a888 <_txe_thread_relinquish>
4001aa64:	e1a00000 	nop			; (mov r0, r0)
4001aa68:	eaffffbe 	b	4001a968 <CyU3PDmaThreadEntry+0xc>
4001aa6c:	40031930 	.word	0x40031930
4001aa70:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PGpifInit:

4001aa74 <CyU3PGpifInit>:
4001aa74:	e92d4010 	push	{r4, lr}
4001aa78:	e1a04000 	mov	r4, r0
4001aa7c:	e3540000 	cmp	r4, #0
4001aa80:	0a000006 	beq	4001aaa0 <CyU3PGpifInit+0x2c>
4001aa84:	e59f005c 	ldr	r0, [pc, #92]	; 4001aae8 <CyU3PGpifInit+0x74>
4001aa88:	e5900000 	ldr	r0, [r0]
4001aa8c:	e1a00800 	lsl	r0, r0, #16
4001aa90:	e1a00820 	lsr	r0, r0, #16
4001aa94:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001aa98:	e59f1048 	ldr	r1, [pc, #72]	; 4001aae8 <CyU3PGpifInit+0x74>
4001aa9c:	e5810000 	str	r0, [r1]
4001aaa0:	e3e00000 	mvn	r0, #0
4001aaa4:	e59f1040 	ldr	r1, [pc, #64]	; 4001aaec <CyU3PGpifInit+0x78>
4001aaa8:	e5810014 	str	r0, [r1, #20]
4001aaac:	e3a00000 	mov	r0, #0
4001aab0:	e5810018 	str	r0, [r1, #24]
4001aab4:	e3a00e11 	mov	r0, #272	; 0x110
4001aab8:	e1c11300 	bic	r1, r1, r0, lsl #6
4001aabc:	e5810008 	str	r0, [r1, #8]
4001aac0:	ebffdf9e 	bl	40012940 <CyU3PSysBarrierSync>
4001aac4:	e59f001c 	ldr	r0, [pc, #28]	; 4001aae8 <CyU3PGpifInit+0x74>
4001aac8:	e5900000 	ldr	r0, [r0]
4001aacc:	e1a00800 	lsl	r0, r0, #16
4001aad0:	e1a00820 	lsr	r0, r0, #16
4001aad4:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001aad8:	e59f1008 	ldr	r1, [pc, #8]	; 4001aae8 <CyU3PGpifInit+0x74>
4001aadc:	e5810000 	str	r0, [r1]
4001aae0:	e3a00000 	mov	r0, #0
4001aae4:	e8bd8010 	pop	{r4, pc}
4001aae8:	e0010000 	.word	0xe0010000
4001aaec:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001aaf0 <CyU3PPibApplicationDefine>:
4001aaf0:	e92d4010 	push	{r4, lr}
4001aaf4:	e24dd020 	sub	sp, sp, #32
4001aaf8:	e3a00000 	mov	r0, #0
4001aafc:	e59f10dc 	ldr	r1, [pc, #220]	; 4001abe0 <CyU3PPibApplicationDefine+0xf0>
4001ab00:	e5810000 	str	r0, [r1]
4001ab04:	e59f10d8 	ldr	r1, [pc, #216]	; 4001abe4 <CyU3PPibApplicationDefine+0xf4>
4001ab08:	e5810000 	str	r0, [r1]
4001ab0c:	e59f10d4 	ldr	r1, [pc, #212]	; 4001abe8 <CyU3PPibApplicationDefine+0xf8>
4001ab10:	e5810000 	str	r0, [r1]
4001ab14:	e59f10d0 	ldr	r1, [pc, #208]	; 4001abec <CyU3PPibApplicationDefine+0xfc>
4001ab18:	e5810000 	str	r0, [r1]
4001ab1c:	e59f10cc 	ldr	r1, [pc, #204]	; 4001abf0 <CyU3PPibApplicationDefine+0x100>
4001ab20:	e5810000 	str	r0, [r1]
4001ab24:	e59f10c8 	ldr	r1, [pc, #200]	; 4001abf4 <CyU3PPibApplicationDefine+0x104>
4001ab28:	e5810000 	str	r0, [r1]
4001ab2c:	e59f10c4 	ldr	r1, [pc, #196]	; 4001abf8 <CyU3PPibApplicationDefine+0x108>
4001ab30:	e5810000 	str	r0, [r1]
4001ab34:	e59f10c0 	ldr	r1, [pc, #192]	; 4001abfc <CyU3PPibApplicationDefine+0x10c>
4001ab38:	e5810000 	str	r0, [r1]
4001ab3c:	e59f10bc 	ldr	r1, [pc, #188]	; 4001ac00 <CyU3PPibApplicationDefine+0x110>
4001ab40:	e5810000 	str	r0, [r1]
4001ab44:	e3a00b01 	mov	r0, #1024	; 0x400
4001ab48:	ebffa2c9 	bl	40003674 <CyU3PMemAlloc>
4001ab4c:	e1a04000 	mov	r4, r0
4001ab50:	e3a030a8 	mov	r3, #168	; 0xa8
4001ab54:	e3a02001 	mov	r2, #1
4001ab58:	e3a01000 	mov	r1, #0
4001ab5c:	e3a00004 	mov	r0, #4
4001ab60:	e28dc00c 	add	ip, sp, #12
4001ab64:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001ab68:	e3a02b01 	mov	r2, #1024	; 0x400
4001ab6c:	e1a03001 	mov	r3, r1
4001ab70:	e58d2004 	str	r2, [sp, #4]
4001ab74:	e59f2088 	ldr	r2, [pc, #136]	; 4001ac04 <CyU3PPibApplicationDefine+0x114>
4001ab78:	e28f1088 	add	r1, pc, #136	; 0x88
4001ab7c:	e58d0008 	str	r0, [sp, #8]
4001ab80:	e59f0090 	ldr	r0, [pc, #144]	; 4001ac18 <CyU3PPibApplicationDefine+0x128>
4001ab84:	e58d4000 	str	r4, [sp]
4001ab88:	ebffbe60 	bl	4000a510 <_txe_thread_create>
4001ab8c:	e3a02028 	mov	r2, #40	; 0x28
4001ab90:	e3a01000 	mov	r1, #0
4001ab94:	e59f0080 	ldr	r0, [pc, #128]	; 4001ac1c <CyU3PPibApplicationDefine+0x12c>
4001ab98:	ebffbbe1 	bl	40009b24 <_txe_event_flags_create>
4001ab9c:	e3a02000 	mov	r2, #0
4001aba0:	e3a01010 	mov	r1, #16
4001aba4:	e59f0070 	ldr	r0, [pc, #112]	; 4001ac1c <CyU3PPibApplicationDefine+0x12c>
4001aba8:	ebffbc7d 	bl	40009da4 <_txe_event_flags_set>
4001abac:	e3a00040 	mov	r0, #64	; 0x40
4001abb0:	ebffa2af 	bl	40003674 <CyU3PMemAlloc>
4001abb4:	e1a04000 	mov	r4, r0
4001abb8:	e3a0303c 	mov	r3, #60	; 0x3c
4001abbc:	e3a02040 	mov	r2, #64	; 0x40
4001abc0:	e1cd20f0 	strd	r2, [sp]
4001abc4:	e1a03004 	mov	r3, r4
4001abc8:	e3a02001 	mov	r2, #1
4001abcc:	e3a01000 	mov	r1, #0
4001abd0:	e59f0048 	ldr	r0, [pc, #72]	; 4001ac20 <CyU3PPibApplicationDefine+0x130>
4001abd4:	ebffbd67 	bl	4000a178 <_txe_queue_create>
4001abd8:	e28dd020 	add	sp, sp, #32
4001abdc:	e8bd8010 	pop	{r4, pc}
4001abe0:	40030d18 	.word	0x40030d18
4001abe4:	40030d1c 	.word	0x40030d1c
4001abe8:	40030d24 	.word	0x40030d24
4001abec:	40030d3c 	.word	0x40030d3c
4001abf0:	40030d30 	.word	0x40030d30
4001abf4:	40030d34 	.word	0x40030d34
4001abf8:	40030d28 	.word	0x40030d28
4001abfc:	40030d2c 	.word	0x40030d2c
4001ac00:	40030d20 	.word	0x40030d20
4001ac04:	4001add8 	.word	0x4001add8
4001ac08:	505f3330 	.word	0x505f3330
4001ac0c:	545f4249 	.word	0x545f4249
4001ac10:	41455248 	.word	0x41455248
4001ac14:	00000044 	.word	0x00000044
4001ac18:	40031994 	.word	0x40031994
4001ac1c:	4003196c 	.word	0x4003196c
4001ac20:	40031a3c 	.word	0x40031a3c

Disassembly of section i.CyU3PPibInit:

4001ac24 <CyU3PPibInit>:
4001ac24:	e92d4070 	push	{r4, r5, r6, lr}
4001ac28:	e1a04000 	mov	r4, r0
4001ac2c:	e1a05001 	mov	r5, r1
4001ac30:	e3a06000 	mov	r6, #0
4001ac34:	ebffe724 	bl	400148cc <CyFx3DevIsGpifSupported>
4001ac38:	e3500000 	cmp	r0, #0
4001ac3c:	1a000001 	bne	4001ac48 <CyU3PPibInit+0x24>
4001ac40:	e3a00046 	mov	r0, #70	; 0x46
4001ac44:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ac48:	e59f0128 	ldr	r0, [pc, #296]	; 4001ad78 <CyU3PPibInit+0x154>
4001ac4c:	e5900000 	ldr	r0, [r0]
4001ac50:	e3500000 	cmp	r0, #0
4001ac54:	0a000001 	beq	4001ac60 <CyU3PPibInit+0x3c>
4001ac58:	e3a00043 	mov	r0, #67	; 0x43
4001ac5c:	eafffff8 	b	4001ac44 <CyU3PPibInit+0x20>
4001ac60:	e3550000 	cmp	r5, #0
4001ac64:	1a000001 	bne	4001ac70 <CyU3PPibInit+0x4c>
4001ac68:	e3a00041 	mov	r0, #65	; 0x41
4001ac6c:	eafffff4 	b	4001ac44 <CyU3PPibInit+0x20>
4001ac70:	e5d5000c 	ldrb	r0, [r5, #12]
4001ac74:	e3500004 	cmp	r0, #4
4001ac78:	ba000001 	blt	4001ac84 <CyU3PPibInit+0x60>
4001ac7c:	e3a00040 	mov	r0, #64	; 0x40
4001ac80:	eaffffef 	b	4001ac44 <CyU3PPibInit+0x20>
4001ac84:	e1d500b0 	ldrh	r0, [r5]
4001ac88:	e3500002 	cmp	r0, #2
4001ac8c:	ba000002 	blt	4001ac9c <CyU3PPibInit+0x78>
4001ac90:	e1d500b0 	ldrh	r0, [r5]
4001ac94:	e3500b01 	cmp	r0, #1024	; 0x400
4001ac98:	da000001 	ble	4001aca4 <CyU3PPibInit+0x80>
4001ac9c:	e3a00040 	mov	r0, #64	; 0x40
4001aca0:	eaffffe7 	b	4001ac44 <CyU3PPibInit+0x20>
4001aca4:	e3a00001 	mov	r0, #1
4001aca8:	e59f10c8 	ldr	r1, [pc, #200]	; 4001ad78 <CyU3PPibInit+0x154>
4001acac:	e5810000 	str	r0, [r1]
4001acb0:	e5d5000c 	ldrb	r0, [r5, #12]
4001acb4:	e3a01b06 	mov	r1, #6144	; 0x1800
4001acb8:	e0010580 	and	r0, r1, r0, lsl #11
4001acbc:	e1d510b0 	ldrh	r1, [r5]
4001acc0:	e2411001 	sub	r1, r1, #1
4001acc4:	e1a01b01 	lsl	r1, r1, #22
4001acc8:	e1a01b21 	lsr	r1, r1, #22
4001accc:	e1800001 	orr	r0, r0, r1
4001acd0:	e59f10a4 	ldr	r1, [pc, #164]	; 4001ad7c <CyU3PPibInit+0x158>
4001acd4:	e581000c 	str	r0, [r1, #12]
4001acd8:	e5950004 	ldr	r0, [r5, #4]
4001acdc:	e3500000 	cmp	r0, #0
4001ace0:	0a000003 	beq	4001acf4 <CyU3PPibInit+0xd0>
4001ace4:	e1a00001 	mov	r0, r1
4001ace8:	e590000c 	ldr	r0, [r0, #12]
4001acec:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001acf0:	e581000c 	str	r0, [r1, #12]
4001acf4:	e59f0080 	ldr	r0, [pc, #128]	; 4001ad7c <CyU3PPibInit+0x158>
4001acf8:	e590000c 	ldr	r0, [r0, #12]
4001acfc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001ad00:	e59f1074 	ldr	r1, [pc, #116]	; 4001ad7c <CyU3PPibInit+0x158>
4001ad04:	e581000c 	str	r0, [r1, #12]
4001ad08:	ebffe755 	bl	40014a64 <CyFx3PibPowerOn>
4001ad0c:	e5950008 	ldr	r0, [r5, #8]
4001ad10:	e3500000 	cmp	r0, #0
4001ad14:	0a000000 	beq	4001ad1c <CyU3PPibInit+0xf8>
4001ad18:	ebffe732 	bl	400149e8 <CyFx3PibDllEnable>
4001ad1c:	e59f005c 	ldr	r0, [pc, #92]	; 4001ad80 <CyU3PPibInit+0x15c>
4001ad20:	e5900000 	ldr	r0, [r0]
4001ad24:	e3500000 	cmp	r0, #0
4001ad28:	0a000003 	beq	4001ad3c <CyU3PPibInit+0x118>
4001ad2c:	e1a00004 	mov	r0, r4
4001ad30:	eb0000d4 	bl	4001b088 <CyU3PPmmcInit>
4001ad34:	e1a06000 	mov	r6, r0
4001ad38:	ea000002 	b	4001ad48 <CyU3PPibInit+0x124>
4001ad3c:	e1a00004 	mov	r0, r4
4001ad40:	ebffff4b 	bl	4001aa74 <CyU3PGpifInit>
4001ad44:	e1a06000 	mov	r6, r0
4001ad48:	e3e00000 	mvn	r0, #0
4001ad4c:	e59f1030 	ldr	r1, [pc, #48]	; 4001ad84 <CyU3PPibInit+0x160>
4001ad50:	e5810024 	str	r0, [r1, #36]	; 0x24
4001ad54:	e3560000 	cmp	r6, #0
4001ad58:	1a000004 	bne	4001ad70 <CyU3PPibInit+0x14c>
4001ad5c:	eb000009 	bl	4001ad88 <CyU3PPibSocketInit>
4001ad60:	e3a00007 	mov	r0, #7
4001ad64:	eb001c4a 	bl	40021e94 <CyU3PVicEnableInt>
4001ad68:	e3a00006 	mov	r0, #6
4001ad6c:	eb001c48 	bl	40021e94 <CyU3PVicEnableInt>
4001ad70:	e1a00006 	mov	r0, r6
4001ad74:	eaffffb2 	b	4001ac44 <CyU3PPibInit+0x20>
4001ad78:	40030d18 	.word	0x40030d18
4001ad7c:	e0052000 	.word	0xe0052000
4001ad80:	40030d1c 	.word	0x40030d1c
4001ad84:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001ad88 <CyU3PPibSocketInit>:
4001ad88:	e3a00000 	mov	r0, #0
4001ad8c:	ea00000d 	b	4001adc8 <CyU3PPibSocketInit+0x40>
4001ad90:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001ad94:	e59f2038 	ldr	r2, [pc, #56]	; 4001add4 <CyU3PPibSocketInit+0x4c>
4001ad98:	e0822380 	add	r2, r2, r0, lsl #7
4001ad9c:	e582100c 	str	r1, [r2, #12]
4001ada0:	e3e01000 	mvn	r1, #0
4001ada4:	e59f2028 	ldr	r2, [pc, #40]	; 4001add4 <CyU3PPibSocketInit+0x4c>
4001ada8:	e0822380 	add	r2, r2, r0, lsl #7
4001adac:	e5821010 	str	r1, [r2, #16]
4001adb0:	e3a01000 	mov	r1, #0
4001adb4:	e59f2018 	ldr	r2, [pc, #24]	; 4001add4 <CyU3PPibSocketInit+0x4c>
4001adb8:	e0822380 	add	r2, r2, r0, lsl #7
4001adbc:	e5821014 	str	r1, [r2, #20]
4001adc0:	e2801001 	add	r1, r0, #1
4001adc4:	e20100ff 	and	r0, r1, #255	; 0xff
4001adc8:	e3500020 	cmp	r0, #32
4001adcc:	baffffef 	blt	4001ad90 <CyU3PPibSocketInit+0x8>
4001add0:	e12fff1e 	bx	lr
4001add4:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001add8 <CyU3PPibThreadEntry>:
4001add8:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001addc:	e3a00005 	mov	r0, #5
4001ade0:	ebffe25e 	bl	40013760 <CyU3PSysModuleInitCompleteEvt>
4001ade4:	e59f0278 	ldr	r0, [pc, #632]	; 4001b064 <CyU3PPibThreadEntry+0x28c>
4001ade8:	e5900000 	ldr	r0, [r0]
4001adec:	e1a00800 	lsl	r0, r0, #16
4001adf0:	e1a00820 	lsr	r0, r0, #16
4001adf4:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001adf8:	e59f1264 	ldr	r1, [pc, #612]	; 4001b064 <CyU3PPibThreadEntry+0x28c>
4001adfc:	e5810000 	str	r0, [r1]
4001ae00:	e3a000e1 	mov	r0, #225	; 0xe1
4001ae04:	e59f125c 	ldr	r1, [pc, #604]	; 4001b068 <CyU3PPibThreadEntry+0x290>
4001ae08:	e5810000 	str	r0, [r1]
4001ae0c:	ea000093 	b	4001b060 <CyU3PPibThreadEntry+0x288>
4001ae10:	e3e03000 	mvn	r3, #0
4001ae14:	e58d3000 	str	r3, [sp]
4001ae18:	e28d3008 	add	r3, sp, #8
4001ae1c:	e3a02001 	mov	r2, #1
4001ae20:	e59f0240 	ldr	r0, [pc, #576]	; 4001b068 <CyU3PPibThreadEntry+0x290>
4001ae24:	e5901000 	ldr	r1, [r0]
4001ae28:	e59f023c 	ldr	r0, [pc, #572]	; 4001b06c <CyU3PPibThreadEntry+0x294>
4001ae2c:	ebffbbac 	bl	40009ce4 <_txe_event_flags_get>
4001ae30:	e1a04000 	mov	r4, r0
4001ae34:	e59f122c 	ldr	r1, [pc, #556]	; 4001b068 <CyU3PPibThreadEntry+0x290>
4001ae38:	e59d0008 	ldr	r0, [sp, #8]
4001ae3c:	e5911000 	ldr	r1, [r1]
4001ae40:	e0000001 	and	r0, r0, r1
4001ae44:	e58d0008 	str	r0, [sp, #8]
4001ae48:	e3540000 	cmp	r4, #0
4001ae4c:	0a000000 	beq	4001ae54 <CyU3PPibThreadEntry+0x7c>
4001ae50:	ea000082 	b	4001b060 <CyU3PPibThreadEntry+0x288>
4001ae54:	ea00007d 	b	4001b050 <CyU3PPibThreadEntry+0x278>
4001ae58:	e59d0008 	ldr	r0, [sp, #8]
4001ae5c:	e3100020 	tst	r0, #32
4001ae60:	0a000017 	beq	4001aec4 <CyU3PPibThreadEntry+0xec>
4001ae64:	e59f0204 	ldr	r0, [pc, #516]	; 4001b070 <CyU3PPibThreadEntry+0x298>
4001ae68:	e5900000 	ldr	r0, [r0]
4001ae6c:	e3500000 	cmp	r0, #0
4001ae70:	0a00000b 	beq	4001aea4 <CyU3PPibThreadEntry+0xcc>
4001ae74:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b074 <CyU3PPibThreadEntry+0x29c>
4001ae78:	e5900000 	ldr	r0, [r0]
4001ae7c:	e3100002 	tst	r0, #2
4001ae80:	0a000007 	beq	4001aea4 <CyU3PPibThreadEntry+0xcc>
4001ae84:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b078 <CyU3PPibThreadEntry+0x2a0>
4001ae88:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001ae8c:	e1a01800 	lsl	r1, r0, #16
4001ae90:	e1a01821 	lsr	r1, r1, #16
4001ae94:	e3a00002 	mov	r0, #2
4001ae98:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b070 <CyU3PPibThreadEntry+0x298>
4001ae9c:	e5922000 	ldr	r2, [r2]
4001aea0:	e12fff32 	blx	r2
4001aea4:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b064 <CyU3PPibThreadEntry+0x28c>
4001aea8:	e5900000 	ldr	r0, [r0]
4001aeac:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001aeb0:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b064 <CyU3PPibThreadEntry+0x28c>
4001aeb4:	e5810000 	str	r0, [r1]
4001aeb8:	e59d0008 	ldr	r0, [sp, #8]
4001aebc:	e3c00020 	bic	r0, r0, #32
4001aec0:	e58d0008 	str	r0, [sp, #8]
4001aec4:	e59d0008 	ldr	r0, [sp, #8]
4001aec8:	e3100040 	tst	r0, #64	; 0x40
4001aecc:	0a000027 	beq	4001af70 <CyU3PPibThreadEntry+0x198>
4001aed0:	e59f0198 	ldr	r0, [pc, #408]	; 4001b070 <CyU3PPibThreadEntry+0x298>
4001aed4:	e5900000 	ldr	r0, [r0]
4001aed8:	e3500000 	cmp	r0, #0
4001aedc:	0a000017 	beq	4001af40 <CyU3PPibThreadEntry+0x168>
4001aee0:	e59f018c 	ldr	r0, [pc, #396]	; 4001b074 <CyU3PPibThreadEntry+0x29c>
4001aee4:	e5900000 	ldr	r0, [r0]
4001aee8:	e3100004 	tst	r0, #4
4001aeec:	0a000013 	beq	4001af40 <CyU3PPibThreadEntry+0x168>
4001aef0:	e59f016c 	ldr	r0, [pc, #364]	; 4001b064 <CyU3PPibThreadEntry+0x28c>
4001aef4:	e5900020 	ldr	r0, [r0, #32]
4001aef8:	e1a05800 	lsl	r5, r0, #16
4001aefc:	e1a05825 	lsr	r5, r5, #16
4001af00:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001af04:	e3500a02 	cmp	r0, #8192	; 0x2000
4001af08:	1a000000 	bne	4001af10 <CyU3PPibThreadEntry+0x138>
4001af0c:	e3a05a02 	mov	r5, #8192	; 0x2000
4001af10:	e59f0164 	ldr	r0, [pc, #356]	; 4001b07c <CyU3PPibThreadEntry+0x2a4>
4001af14:	e5900000 	ldr	r0, [r0]
4001af18:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001af1c:	1a000001 	bne	4001af28 <CyU3PPibThreadEntry+0x150>
4001af20:	e3550004 	cmp	r5, #4
4001af24:	da000004 	ble	4001af3c <CyU3PPibThreadEntry+0x164>
4001af28:	e1a01005 	mov	r1, r5
4001af2c:	e3a00004 	mov	r0, #4
4001af30:	e59f2138 	ldr	r2, [pc, #312]	; 4001b070 <CyU3PPibThreadEntry+0x298>
4001af34:	e5922000 	ldr	r2, [r2]
4001af38:	e12fff32 	blx	r2
4001af3c:	e1a00000 	nop			; (mov r0, r0)
4001af40:	e59f012c 	ldr	r0, [pc, #300]	; 4001b074 <CyU3PPibThreadEntry+0x29c>
4001af44:	e5900000 	ldr	r0, [r0]
4001af48:	e3100004 	tst	r0, #4
4001af4c:	0a000004 	beq	4001af64 <CyU3PPibThreadEntry+0x18c>
4001af50:	e59f010c 	ldr	r0, [pc, #268]	; 4001b064 <CyU3PPibThreadEntry+0x28c>
4001af54:	e5900008 	ldr	r0, [r0, #8]
4001af58:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001af5c:	e59f1100 	ldr	r1, [pc, #256]	; 4001b064 <CyU3PPibThreadEntry+0x28c>
4001af60:	e5810008 	str	r0, [r1, #8]
4001af64:	e59d0008 	ldr	r0, [sp, #8]
4001af68:	e3c00040 	bic	r0, r0, #64	; 0x40
4001af6c:	e58d0008 	str	r0, [sp, #8]
4001af70:	e59d0008 	ldr	r0, [sp, #8]
4001af74:	e3100080 	tst	r0, #128	; 0x80
4001af78:	0a000011 	beq	4001afc4 <CyU3PPibThreadEntry+0x1ec>
4001af7c:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b070 <CyU3PPibThreadEntry+0x298>
4001af80:	e5900000 	ldr	r0, [r0]
4001af84:	e3500000 	cmp	r0, #0
4001af88:	0a00000a 	beq	4001afb8 <CyU3PPibThreadEntry+0x1e0>
4001af8c:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b074 <CyU3PPibThreadEntry+0x29c>
4001af90:	e5900000 	ldr	r0, [r0]
4001af94:	e3100001 	tst	r0, #1
4001af98:	0a000006 	beq	4001afb8 <CyU3PPibThreadEntry+0x1e0>
4001af9c:	ebffe6ab 	bl	40014a50 <CyFx3PibGetDllStatus>
4001afa0:	e1a05000 	mov	r5, r0
4001afa4:	e1a01000 	mov	r1, r0
4001afa8:	e3a00001 	mov	r0, #1
4001afac:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b070 <CyU3PPibThreadEntry+0x298>
4001afb0:	e5922000 	ldr	r2, [r2]
4001afb4:	e12fff32 	blx	r2
4001afb8:	e59d0008 	ldr	r0, [sp, #8]
4001afbc:	e3c00080 	bic	r0, r0, #128	; 0x80
4001afc0:	e58d0008 	str	r0, [sp, #8]
4001afc4:	e59d0008 	ldr	r0, [sp, #8]
4001afc8:	e3100001 	tst	r0, #1
4001afcc:	0a00001f 	beq	4001b050 <CyU3PPibThreadEntry+0x278>
4001afd0:	e3a02000 	mov	r2, #0
4001afd4:	e28d1004 	add	r1, sp, #4
4001afd8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b080 <CyU3PPibThreadEntry+0x2a8>
4001afdc:	ebffbcfb 	bl	4000a3d0 <_txe_queue_receive>
4001afe0:	e1a04000 	mov	r4, r0
4001afe4:	e3540000 	cmp	r4, #0
4001afe8:	1a000015 	bne	4001b044 <CyU3PPibThreadEntry+0x26c>
4001afec:	e1dd00b4 	ldrh	r0, [sp, #4]
4001aff0:	e2000901 	and	r0, r0, #16384	; 0x4000
4001aff4:	e1b00720 	lsrs	r0, r0, #14
4001aff8:	0a000014 	beq	4001b050 <CyU3PPibThreadEntry+0x278>
4001affc:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b000:	e20000ff 	and	r0, r0, #255	; 0xff
4001b004:	e3500004 	cmp	r0, #4
4001b008:	1a00000a 	bne	4001b038 <CyU3PPibThreadEntry+0x260>
4001b00c:	e59f0070 	ldr	r0, [pc, #112]	; 4001b084 <CyU3PPibThreadEntry+0x2ac>
4001b010:	e5900000 	ldr	r0, [r0]
4001b014:	e3500000 	cmp	r0, #0
4001b018:	0a000005 	beq	4001b034 <CyU3PPibThreadEntry+0x25c>
4001b01c:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b020:	e1a01442 	asr	r1, r2, #8
4001b024:	e20200ff 	and	r0, r2, #255	; 0xff
4001b028:	e59f2054 	ldr	r2, [pc, #84]	; 4001b084 <CyU3PPibThreadEntry+0x2ac>
4001b02c:	e5922000 	ldr	r2, [r2]
4001b030:	e12fff32 	blx	r2
4001b034:	ea000001 	b	4001b040 <CyU3PPibThreadEntry+0x268>
4001b038:	e1a00000 	nop			; (mov r0, r0)
4001b03c:	e1a00000 	nop			; (mov r0, r0)
4001b040:	ea000002 	b	4001b050 <CyU3PPibThreadEntry+0x278>
4001b044:	e59d0008 	ldr	r0, [sp, #8]
4001b048:	e3c00001 	bic	r0, r0, #1
4001b04c:	e58d0008 	str	r0, [sp, #8]
4001b050:	e59d0008 	ldr	r0, [sp, #8]
4001b054:	e3500000 	cmp	r0, #0
4001b058:	1affff7e 	bne	4001ae58 <CyU3PPibThreadEntry+0x80>
4001b05c:	e1a00000 	nop			; (mov r0, r0)
4001b060:	eaffff6a 	b	4001ae10 <CyU3PPibThreadEntry+0x38>
4001b064:	e0010000 	.word	0xe0010000
4001b068:	40030d24 	.word	0x40030d24
4001b06c:	4003196c 	.word	0x4003196c
4001b070:	40030d28 	.word	0x40030d28
4001b074:	40030d2c 	.word	0x40030d2c
4001b078:	e0017000 	.word	0xe0017000
4001b07c:	e0014000 	.word	0xe0014000
4001b080:	40031a3c 	.word	0x40031a3c
4001b084:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PPmmcInit:

4001b088 <CyU3PPmmcInit>:
4001b088:	e92d4010 	push	{r4, lr}
4001b08c:	e1a04000 	mov	r4, r0
4001b090:	e3540000 	cmp	r4, #0
4001b094:	0a000042 	beq	4001b1a4 <CyU3PPmmcInit+0x11c>
4001b098:	e3e00000 	mvn	r0, #0
4001b09c:	e59f1148 	ldr	r1, [pc, #328]	; 4001b1ec <CyU3PPmmcInit+0x164>
4001b0a0:	e581000c 	str	r0, [r1, #12]
4001b0a4:	e3a00000 	mov	r0, #0
4001b0a8:	e5810010 	str	r0, [r1, #16]
4001b0ac:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b0b0:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b0b4:	e3a00000 	mov	r0, #0
4001b0b8:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b0bc:	e5810008 	str	r0, [r1, #8]
4001b0c0:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b0c4:	e5900000 	ldr	r0, [r0]
4001b0c8:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b0cc:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b0d0:	e5810000 	str	r0, [r1]
4001b0d4:	e59f0114 	ldr	r0, [pc, #276]	; 4001b1f0 <CyU3PPmmcInit+0x168>
4001b0d8:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b0dc:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b0e0:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b0e4:	e3a00001 	mov	r0, #1
4001b0e8:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b0ec:	e59f0100 	ldr	r0, [pc, #256]	; 4001b1f4 <CyU3PPmmcInit+0x16c>
4001b0f0:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b0f4:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b1f8 <CyU3PPmmcInit+0x170>
4001b0f8:	e5900000 	ldr	r0, [r0]
4001b0fc:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b100:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b1f8 <CyU3PPmmcInit+0x170>
4001b104:	e5900004 	ldr	r0, [r0, #4]
4001b108:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b10c:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b1f8 <CyU3PPmmcInit+0x170>
4001b110:	e5900008 	ldr	r0, [r0, #8]
4001b114:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b118:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b1f8 <CyU3PPmmcInit+0x170>
4001b11c:	e590000c 	ldr	r0, [r0, #12]
4001b120:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b124:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b1fc <CyU3PPmmcInit+0x174>
4001b128:	e5900000 	ldr	r0, [r0]
4001b12c:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b130:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b1fc <CyU3PPmmcInit+0x174>
4001b134:	e5900004 	ldr	r0, [r0, #4]
4001b138:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b13c:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b1fc <CyU3PPmmcInit+0x174>
4001b140:	e5900008 	ldr	r0, [r0, #8]
4001b144:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b148:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b1fc <CyU3PPmmcInit+0x174>
4001b14c:	e590000c 	ldr	r0, [r0, #12]
4001b150:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b154:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b1fc <CyU3PPmmcInit+0x174>
4001b158:	e5900010 	ldr	r0, [r0, #16]
4001b15c:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b160:	e59f0094 	ldr	r0, [pc, #148]	; 4001b1fc <CyU3PPmmcInit+0x174>
4001b164:	e5900014 	ldr	r0, [r0, #20]
4001b168:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b16c:	e59f008c 	ldr	r0, [pc, #140]	; 4001b200 <CyU3PPmmcInit+0x178>
4001b170:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b174:	e3a00000 	mov	r0, #0
4001b178:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b17c:	e3a00c02 	mov	r0, #512	; 0x200
4001b180:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b184:	e3a00000 	mov	r0, #0
4001b188:	e5810004 	str	r0, [r1, #4]
4001b18c:	e59f0070 	ldr	r0, [pc, #112]	; 4001b204 <CyU3PPmmcInit+0x17c>
4001b190:	e5810010 	str	r0, [r1, #16]
4001b194:	e3a00008 	mov	r0, #8
4001b198:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b19c:	e5810008 	str	r0, [r1, #8]
4001b1a0:	ea000002 	b	4001b1b0 <CyU3PPmmcInit+0x128>
4001b1a4:	e3a00000 	mov	r0, #0
4001b1a8:	e59f103c 	ldr	r1, [pc, #60]	; 4001b1ec <CyU3PPmmcInit+0x164>
4001b1ac:	e5810010 	str	r0, [r1, #16]
4001b1b0:	e59f0034 	ldr	r0, [pc, #52]	; 4001b1ec <CyU3PPmmcInit+0x164>
4001b1b4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b1b8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b1bc:	e59f1028 	ldr	r1, [pc, #40]	; 4001b1ec <CyU3PPmmcInit+0x164>
4001b1c0:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b1c4:	ebffdddd 	bl	40012940 <CyU3PSysBarrierSync>
4001b1c8:	e59f0038 	ldr	r0, [pc, #56]	; 4001b208 <CyU3PPmmcInit+0x180>
4001b1cc:	e5900000 	ldr	r0, [r0]
4001b1d0:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b1d4:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b1d8:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b1dc:	e59f1024 	ldr	r1, [pc, #36]	; 4001b208 <CyU3PPmmcInit+0x180>
4001b1e0:	e5810000 	str	r0, [r1]
4001b1e4:	e3a00000 	mov	r0, #0
4001b1e8:	e8bd8010 	pop	{r4, pc}
4001b1ec:	e0011000 	.word	0xe0011000
4001b1f0:	00019201 	.word	0x00019201
4001b1f4:	04010302 	.word	0x04010302
4001b1f8:	40011c70 	.word	0x40011c70
4001b1fc:	40011c80 	.word	0x40011c80
4001b200:	00ff8080 	.word	0x00ff8080
4001b204:	400a00fb 	.word	0x400a00fb
4001b208:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b20c <CyU3PMboxReset>:
4001b20c:	e92d4010 	push	{r4, lr}
4001b210:	e3a00002 	mov	r0, #2
4001b214:	e59f1028 	ldr	r1, [pc, #40]	; 4001b244 <CyU3PMboxReset+0x38>
4001b218:	e5810004 	str	r0, [r1, #4]
4001b21c:	e3a02002 	mov	r2, #2
4001b220:	e3a01010 	mov	r1, #16
4001b224:	e59f001c 	ldr	r0, [pc, #28]	; 4001b248 <CyU3PMboxReset+0x3c>
4001b228:	ebffbadd 	bl	40009da4 <_txe_event_flags_set>
4001b22c:	e59f0010 	ldr	r0, [pc, #16]	; 4001b244 <CyU3PMboxReset+0x38>
4001b230:	e5900008 	ldr	r0, [r0, #8]
4001b234:	e3800003 	orr	r0, r0, #3
4001b238:	e59f1004 	ldr	r1, [pc, #4]	; 4001b244 <CyU3PMboxReset+0x38>
4001b23c:	e5810008 	str	r0, [r1, #8]
4001b240:	e8bd8010 	pop	{r4, pc}
4001b244:	e0010000 	.word	0xe0010000
4001b248:	4003196c 	.word	0x4003196c

Disassembly of section i.CyU3PGpifConfigure:

4001b24c <CyU3PGpifConfigure>:
4001b24c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b250:	e1a04000 	mov	r4, r0
4001b254:	e1a05001 	mov	r5, r1
4001b258:	e59f609c 	ldr	r6, [pc, #156]	; 4001b2fc <CyU3PGpifConfigure+0xb0>
4001b25c:	e3540000 	cmp	r4, #0
4001b260:	0a000001 	beq	4001b26c <CyU3PGpifConfigure+0x20>
4001b264:	e3550000 	cmp	r5, #0
4001b268:	1a000001 	bne	4001b274 <CyU3PGpifConfigure+0x28>
4001b26c:	e3a00040 	mov	r0, #64	; 0x40
4001b270:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b274:	ebffe585 	bl	40014890 <CyFx3DevIsGpifConfigurable>
4001b278:	e3500000 	cmp	r0, #0
4001b27c:	1a000001 	bne	4001b288 <CyU3PGpifConfigure+0x3c>
4001b280:	e3a00046 	mov	r0, #70	; 0x46
4001b284:	eafffff9 	b	4001b270 <CyU3PGpifConfigure+0x24>
4001b288:	ebffe576 	bl	40014868 <CyFx3DevIsGpif32Supported>
4001b28c:	e3500000 	cmp	r0, #0
4001b290:	1a000007 	bne	4001b2b4 <CyU3PGpifConfigure+0x68>
4001b294:	e3540001 	cmp	r4, #1
4001b298:	da000005 	ble	4001b2b4 <CyU3PGpifConfigure+0x68>
4001b29c:	e5950004 	ldr	r0, [r5, #4]
4001b2a0:	e200000c 	and	r0, r0, #12
4001b2a4:	e3500004 	cmp	r0, #4
4001b2a8:	9a000001 	bls	4001b2b4 <CyU3PGpifConfigure+0x68>
4001b2ac:	e3a00046 	mov	r0, #70	; 0x46
4001b2b0:	eaffffee 	b	4001b270 <CyU3PGpifConfigure+0x24>
4001b2b4:	e59f0044 	ldr	r0, [pc, #68]	; 4001b300 <CyU3PGpifConfigure+0xb4>
4001b2b8:	e5900000 	ldr	r0, [r0]
4001b2bc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b2c0:	0a000001 	beq	4001b2cc <CyU3PGpifConfigure+0x80>
4001b2c4:	e3a00043 	mov	r0, #67	; 0x43
4001b2c8:	eaffffe8 	b	4001b270 <CyU3PGpifConfigure+0x24>
4001b2cc:	e3a07001 	mov	r7, #1
4001b2d0:	ea000002 	b	4001b2e0 <CyU3PGpifConfigure+0x94>
4001b2d4:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b2d8:	e4860004 	str	r0, [r6], #4
4001b2dc:	e2877001 	add	r7, r7, #1
4001b2e0:	e1570004 	cmp	r7, r4
4001b2e4:	bafffffa 	blt	4001b2d4 <CyU3PGpifConfigure+0x88>
4001b2e8:	e5950000 	ldr	r0, [r5]
4001b2ec:	e59f100c 	ldr	r1, [pc, #12]	; 4001b300 <CyU3PGpifConfigure+0xb4>
4001b2f0:	e5810000 	str	r0, [r1]
4001b2f4:	e3a00000 	mov	r0, #0
4001b2f8:	eaffffdc 	b	4001b270 <CyU3PGpifConfigure+0x24>
4001b2fc:	e0014004 	.word	0xe0014004
4001b300:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b304 <CyU3PGpifDisable>:
4001b304:	e92d4070 	push	{r4, r5, r6, lr}
4001b308:	e1a04000 	mov	r4, r0
4001b30c:	e59f0070 	ldr	r0, [pc, #112]	; 4001b384 <CyU3PGpifDisable+0x80>
4001b310:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b314:	e3800002 	orr	r0, r0, #2
4001b318:	e59f1064 	ldr	r1, [pc, #100]	; 4001b384 <CyU3PGpifDisable+0x80>
4001b31c:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b320:	e3a0000a 	mov	r0, #10
4001b324:	ebffe057 	bl	40013488 <CyU3PBusyWait>
4001b328:	e3a00000 	mov	r0, #0
4001b32c:	e59f1050 	ldr	r1, [pc, #80]	; 4001b384 <CyU3PGpifDisable+0x80>
4001b330:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b334:	e3540000 	cmp	r4, #0
4001b338:	0a000010 	beq	4001b380 <CyU3PGpifDisable+0x7c>
4001b33c:	e3a00e22 	mov	r0, #544	; 0x220
4001b340:	e5810000 	str	r0, [r1]
4001b344:	e3a05000 	mov	r5, #0
4001b348:	ea000007 	b	4001b36c <CyU3PGpifDisable+0x68>
4001b34c:	e3a00000 	mov	r0, #0
4001b350:	e59f1030 	ldr	r1, [pc, #48]	; 4001b388 <CyU3PGpifDisable+0x84>
4001b354:	e0811205 	add	r1, r1, r5, lsl #4
4001b358:	e5810008 	str	r0, [r1, #8]
4001b35c:	e59f1028 	ldr	r1, [pc, #40]	; 4001b38c <CyU3PGpifDisable+0x88>
4001b360:	e0811205 	add	r1, r1, r5, lsl #4
4001b364:	e5810008 	str	r0, [r1, #8]
4001b368:	e2855001 	add	r5, r5, #1
4001b36c:	e3550c01 	cmp	r5, #256	; 0x100
4001b370:	3afffff5 	bcc	4001b34c <CyU3PGpifDisable+0x48>
4001b374:	e59f1014 	ldr	r1, [pc, #20]	; 4001b390 <CyU3PGpifDisable+0x8c>
4001b378:	e3a0004c 	mov	r0, #76	; 0x4c
4001b37c:	ebffffb2 	bl	4001b24c <CyU3PGpifConfigure>
4001b380:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b384:	e0014000 	.word	0xe0014000
4001b388:	e0015000 	.word	0xe0015000
4001b38c:	e0016000 	.word	0xe0016000
4001b390:	40011c98 	.word	0x40011c98

Disassembly of section i.CyU3PGpifLoad:

4001b394 <CyU3PGpifLoad>:
4001b394:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b398:	e1a04000 	mov	r4, r0
4001b39c:	e59f7264 	ldr	r7, [pc, #612]	; 4001b608 <CyU3PGpifLoad+0x274>
4001b3a0:	e3540000 	cmp	r4, #0
4001b3a4:	0a000008 	beq	4001b3cc <CyU3PGpifLoad+0x38>
4001b3a8:	e1d400b0 	ldrh	r0, [r4]
4001b3ac:	e3500000 	cmp	r0, #0
4001b3b0:	1a000007 	bne	4001b3d4 <CyU3PGpifLoad+0x40>
4001b3b4:	e1d400bc 	ldrh	r0, [r4, #12]
4001b3b8:	e3500000 	cmp	r0, #0
4001b3bc:	1a000004 	bne	4001b3d4 <CyU3PGpifLoad+0x40>
4001b3c0:	e1d401b4 	ldrh	r0, [r4, #20]
4001b3c4:	e3500000 	cmp	r0, #0
4001b3c8:	1a000001 	bne	4001b3d4 <CyU3PGpifLoad+0x40>
4001b3cc:	e3a00040 	mov	r0, #64	; 0x40
4001b3d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b3d4:	e59f0230 	ldr	r0, [pc, #560]	; 4001b60c <CyU3PGpifLoad+0x278>
4001b3d8:	e5900000 	ldr	r0, [r0]
4001b3dc:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b3e0:	1a000003 	bne	4001b3f4 <CyU3PGpifLoad+0x60>
4001b3e4:	e59f0220 	ldr	r0, [pc, #544]	; 4001b60c <CyU3PGpifLoad+0x278>
4001b3e8:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b3ec:	e3100001 	tst	r0, #1
4001b3f0:	0a000001 	beq	4001b3fc <CyU3PGpifLoad+0x68>
4001b3f4:	e3a00043 	mov	r0, #67	; 0x43
4001b3f8:	eafffff4 	b	4001b3d0 <CyU3PGpifLoad+0x3c>
4001b3fc:	ebffe523 	bl	40014890 <CyFx3DevIsGpifConfigurable>
4001b400:	e3500000 	cmp	r0, #0
4001b404:	1a000001 	bne	4001b410 <CyU3PGpifLoad+0x7c>
4001b408:	e3a00046 	mov	r0, #70	; 0x46
4001b40c:	eaffffef 	b	4001b3d0 <CyU3PGpifLoad+0x3c>
4001b410:	ebffe514 	bl	40014868 <CyFx3DevIsGpif32Supported>
4001b414:	e3500000 	cmp	r0, #0
4001b418:	1a00000c 	bne	4001b450 <CyU3PGpifLoad+0xbc>
4001b41c:	e1d401b4 	ldrh	r0, [r4, #20]
4001b420:	e3500002 	cmp	r0, #2
4001b424:	ba000009 	blt	4001b450 <CyU3PGpifLoad+0xbc>
4001b428:	e5940018 	ldr	r0, [r4, #24]
4001b42c:	e3500000 	cmp	r0, #0
4001b430:	0a000006 	beq	4001b450 <CyU3PGpifLoad+0xbc>
4001b434:	e5940018 	ldr	r0, [r4, #24]
4001b438:	e5900004 	ldr	r0, [r0, #4]
4001b43c:	e200000c 	and	r0, r0, #12
4001b440:	e3500004 	cmp	r0, #4
4001b444:	9a000001 	bls	4001b450 <CyU3PGpifLoad+0xbc>
4001b448:	e3a00046 	mov	r0, #70	; 0x46
4001b44c:	eaffffdf 	b	4001b3d0 <CyU3PGpifLoad+0x3c>
4001b450:	e1d400b0 	ldrh	r0, [r4]
4001b454:	e3500000 	cmp	r0, #0
4001b458:	0a00003b 	beq	4001b54c <CyU3PGpifLoad+0x1b8>
4001b45c:	e5940004 	ldr	r0, [r4, #4]
4001b460:	e3500000 	cmp	r0, #0
4001b464:	1a000001 	bne	4001b470 <CyU3PGpifLoad+0xdc>
4001b468:	e3a00040 	mov	r0, #64	; 0x40
4001b46c:	eaffffd7 	b	4001b3d0 <CyU3PGpifLoad+0x3c>
4001b470:	e3a05000 	mov	r5, #0
4001b474:	ea000031 	b	4001b540 <CyU3PGpifLoad+0x1ac>
4001b478:	e5940008 	ldr	r0, [r4, #8]
4001b47c:	e3500000 	cmp	r0, #0
4001b480:	0a000002 	beq	4001b490 <CyU3PGpifLoad+0xfc>
4001b484:	e5940008 	ldr	r0, [r4, #8]
4001b488:	e7d00005 	ldrb	r0, [r0, r5]
4001b48c:	ea000000 	b	4001b494 <CyU3PGpifLoad+0x100>
4001b490:	e1a00005 	mov	r0, r5
4001b494:	e1a06800 	lsl	r6, r0, #16
4001b498:	e1a06826 	lsr	r6, r6, #16
4001b49c:	e0861086 	add	r1, r6, r6, lsl #1
4001b4a0:	e5940004 	ldr	r0, [r4, #4]
4001b4a4:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b4a8:	e59f1160 	ldr	r1, [pc, #352]	; 4001b610 <CyU3PGpifLoad+0x27c>
4001b4ac:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b4b0:	e0861086 	add	r1, r6, r6, lsl #1
4001b4b4:	e5940004 	ldr	r0, [r4, #4]
4001b4b8:	e0800181 	add	r0, r0, r1, lsl #3
4001b4bc:	e5900004 	ldr	r0, [r0, #4]
4001b4c0:	e59f1148 	ldr	r1, [pc, #328]	; 4001b610 <CyU3PGpifLoad+0x27c>
4001b4c4:	e0811205 	add	r1, r1, r5, lsl #4
4001b4c8:	e5810004 	str	r0, [r1, #4]
4001b4cc:	e0861086 	add	r1, r6, r6, lsl #1
4001b4d0:	e5940004 	ldr	r0, [r4, #4]
4001b4d4:	e0800181 	add	r0, r0, r1, lsl #3
4001b4d8:	e5900008 	ldr	r0, [r0, #8]
4001b4dc:	e59f112c 	ldr	r1, [pc, #300]	; 4001b610 <CyU3PGpifLoad+0x27c>
4001b4e0:	e0811205 	add	r1, r1, r5, lsl #4
4001b4e4:	e5810008 	str	r0, [r1, #8]
4001b4e8:	e0861086 	add	r1, r6, r6, lsl #1
4001b4ec:	e5940004 	ldr	r0, [r4, #4]
4001b4f0:	e0800181 	add	r0, r0, r1, lsl #3
4001b4f4:	e590000c 	ldr	r0, [r0, #12]
4001b4f8:	e59f1114 	ldr	r1, [pc, #276]	; 4001b614 <CyU3PGpifLoad+0x280>
4001b4fc:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b500:	e0861086 	add	r1, r6, r6, lsl #1
4001b504:	e5940004 	ldr	r0, [r4, #4]
4001b508:	e0800181 	add	r0, r0, r1, lsl #3
4001b50c:	e5900010 	ldr	r0, [r0, #16]
4001b510:	e59f10fc 	ldr	r1, [pc, #252]	; 4001b614 <CyU3PGpifLoad+0x280>
4001b514:	e0811205 	add	r1, r1, r5, lsl #4
4001b518:	e5810004 	str	r0, [r1, #4]
4001b51c:	e0861086 	add	r1, r6, r6, lsl #1
4001b520:	e5940004 	ldr	r0, [r4, #4]
4001b524:	e0800181 	add	r0, r0, r1, lsl #3
4001b528:	e5900014 	ldr	r0, [r0, #20]
4001b52c:	e59f10e0 	ldr	r1, [pc, #224]	; 4001b614 <CyU3PGpifLoad+0x280>
4001b530:	e0811205 	add	r1, r1, r5, lsl #4
4001b534:	e5810008 	str	r0, [r1, #8]
4001b538:	e2850001 	add	r0, r5, #1
4001b53c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b540:	e1d400b0 	ldrh	r0, [r4]
4001b544:	e1500005 	cmp	r0, r5
4001b548:	caffffca 	bgt	4001b478 <CyU3PGpifLoad+0xe4>
4001b54c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b550:	e3500000 	cmp	r0, #0
4001b554:	0a000013 	beq	4001b5a8 <CyU3PGpifLoad+0x214>
4001b558:	e5940010 	ldr	r0, [r4, #16]
4001b55c:	e3500000 	cmp	r0, #0
4001b560:	0a000002 	beq	4001b570 <CyU3PGpifLoad+0x1dc>
4001b564:	e1d400bc 	ldrh	r0, [r4, #12]
4001b568:	e3500020 	cmp	r0, #32
4001b56c:	da000001 	ble	4001b578 <CyU3PGpifLoad+0x1e4>
4001b570:	e3a00040 	mov	r0, #64	; 0x40
4001b574:	eaffff95 	b	4001b3d0 <CyU3PGpifLoad+0x3c>
4001b578:	e3a05000 	mov	r5, #0
4001b57c:	ea000006 	b	4001b59c <CyU3PGpifLoad+0x208>
4001b580:	e5940010 	ldr	r0, [r4, #16]
4001b584:	e0800085 	add	r0, r0, r5, lsl #1
4001b588:	e1d000b0 	ldrh	r0, [r0]
4001b58c:	e59f1084 	ldr	r1, [pc, #132]	; 4001b618 <CyU3PGpifLoad+0x284>
4001b590:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b594:	e2850001 	add	r0, r5, #1
4001b598:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b59c:	e1d400bc 	ldrh	r0, [r4, #12]
4001b5a0:	e1500005 	cmp	r0, r5
4001b5a4:	cafffff5 	bgt	4001b580 <CyU3PGpifLoad+0x1ec>
4001b5a8:	e1d401b4 	ldrh	r0, [r4, #20]
4001b5ac:	e3500000 	cmp	r0, #0
4001b5b0:	0a000012 	beq	4001b600 <CyU3PGpifLoad+0x26c>
4001b5b4:	e5940018 	ldr	r0, [r4, #24]
4001b5b8:	e3500000 	cmp	r0, #0
4001b5bc:	1a000001 	bne	4001b5c8 <CyU3PGpifLoad+0x234>
4001b5c0:	e3a00040 	mov	r0, #64	; 0x40
4001b5c4:	eaffff81 	b	4001b3d0 <CyU3PGpifLoad+0x3c>
4001b5c8:	e3a05001 	mov	r5, #1
4001b5cc:	ea000004 	b	4001b5e4 <CyU3PGpifLoad+0x250>
4001b5d0:	e5940018 	ldr	r0, [r4, #24]
4001b5d4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001b5d8:	e4870004 	str	r0, [r7], #4
4001b5dc:	e2850001 	add	r0, r5, #1
4001b5e0:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b5e4:	e1d401b4 	ldrh	r0, [r4, #20]
4001b5e8:	e1500005 	cmp	r0, r5
4001b5ec:	cafffff7 	bgt	4001b5d0 <CyU3PGpifLoad+0x23c>
4001b5f0:	e5940018 	ldr	r0, [r4, #24]
4001b5f4:	e5900000 	ldr	r0, [r0]
4001b5f8:	e59f100c 	ldr	r1, [pc, #12]	; 4001b60c <CyU3PGpifLoad+0x278>
4001b5fc:	e5810000 	str	r0, [r1]
4001b600:	e3a00000 	mov	r0, #0
4001b604:	eaffff71 	b	4001b3d0 <CyU3PGpifLoad+0x3c>
4001b608:	e0014004 	.word	0xe0014004
4001b60c:	e0014000 	.word	0xe0014000
4001b610:	e0015000 	.word	0xe0015000
4001b614:	e0016000 	.word	0xe0016000
4001b618:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001b61c <CyU3PGpifRegisterCallback>:
4001b61c:	e59f1004 	ldr	r1, [pc, #4]	; 4001b628 <CyU3PGpifRegisterCallback+0xc>
4001b620:	e5810000 	str	r0, [r1]
4001b624:	e12fff1e 	bx	lr
4001b628:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PGpifSMStart:

4001b62c <CyU3PGpifSMStart>:
4001b62c:	e92d4010 	push	{r4, lr}
4001b630:	e1a02000 	mov	r2, r0
4001b634:	e59f012c 	ldr	r0, [pc, #300]	; 4001b768 <CyU3PGpifSMStart+0x13c>
4001b638:	e5900000 	ldr	r0, [r0]
4001b63c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b640:	0a000004 	beq	4001b658 <CyU3PGpifSMStart+0x2c>
4001b644:	e59f0120 	ldr	r0, [pc, #288]	; 4001b76c <CyU3PGpifSMStart+0x140>
4001b648:	e0800202 	add	r0, r0, r2, lsl #4
4001b64c:	e5900008 	ldr	r0, [r0, #8]
4001b650:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b654:	1a000001 	bne	4001b660 <CyU3PGpifSMStart+0x34>
4001b658:	e3a00044 	mov	r0, #68	; 0x44
4001b65c:	e8bd8010 	pop	{r4, pc}
4001b660:	e59f0100 	ldr	r0, [pc, #256]	; 4001b768 <CyU3PGpifSMStart+0x13c>
4001b664:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b668:	e3100001 	tst	r0, #1
4001b66c:	0a000001 	beq	4001b678 <CyU3PGpifSMStart+0x4c>
4001b670:	e3a00043 	mov	r0, #67	; 0x43
4001b674:	eafffff8 	b	4001b65c <CyU3PGpifSMStart+0x30>
4001b678:	e59f00e8 	ldr	r0, [pc, #232]	; 4001b768 <CyU3PGpifSMStart+0x13c>
4001b67c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b680:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b684:	e1800801 	orr	r0, r0, r1, lsl #16
4001b688:	e3800001 	orr	r0, r0, #1
4001b68c:	e59f40d4 	ldr	r4, [pc, #212]	; 4001b768 <CyU3PGpifSMStart+0x13c>
4001b690:	e5840118 	str	r0, [r4, #280]	; 0x118
4001b694:	e1a00004 	mov	r0, r4
4001b698:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001b69c:	e59f00cc 	ldr	r0, [pc, #204]	; 4001b770 <CyU3PGpifSMStart+0x144>
4001b6a0:	e000000e 	and	r0, r0, lr
4001b6a4:	e180e802 	orr	lr, r0, r2, lsl #16
4001b6a8:	e1a00004 	mov	r0, r4
4001b6ac:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001b6b0:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001b6b4:	e3800005 	orr	r0, r0, #5
4001b6b8:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b6bc:	e1a00004 	mov	r0, r4
4001b6c0:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001b6c4:	e5900008 	ldr	r0, [r0, #8]
4001b6c8:	e2003007 	and	r3, r0, #7
4001b6cc:	e3530001 	cmp	r3, #1
4001b6d0:	0a000004 	beq	4001b6e8 <CyU3PGpifSMStart+0xbc>
4001b6d4:	e3530002 	cmp	r3, #2
4001b6d8:	0a00000b 	beq	4001b70c <CyU3PGpifSMStart+0xe0>
4001b6dc:	e3530003 	cmp	r3, #3
4001b6e0:	1a00001b 	bne	4001b754 <CyU3PGpifSMStart+0x128>
4001b6e4:	ea000011 	b	4001b730 <CyU3PGpifSMStart+0x104>
4001b6e8:	e1a00000 	nop			; (mov r0, r0)
4001b6ec:	e59f0080 	ldr	r0, [pc, #128]	; 4001b774 <CyU3PGpifSMStart+0x148>
4001b6f0:	e1ce0000 	bic	r0, lr, r0
4001b6f4:	e3800005 	orr	r0, r0, #5
4001b6f8:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001b6fc:	e1800424 	orr	r0, r0, r4, lsr #8
4001b700:	e59f4060 	ldr	r4, [pc, #96]	; 4001b768 <CyU3PGpifSMStart+0x13c>
4001b704:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b708:	ea000013 	b	4001b75c <CyU3PGpifSMStart+0x130>
4001b70c:	e1a00000 	nop			; (mov r0, r0)
4001b710:	e59f0060 	ldr	r0, [pc, #96]	; 4001b778 <CyU3PGpifSMStart+0x14c>
4001b714:	e1ce0000 	bic	r0, lr, r0
4001b718:	e3800005 	orr	r0, r0, #5
4001b71c:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001b720:	e1800424 	orr	r0, r0, r4, lsr #8
4001b724:	e59f403c 	ldr	r4, [pc, #60]	; 4001b768 <CyU3PGpifSMStart+0x13c>
4001b728:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b72c:	ea00000a 	b	4001b75c <CyU3PGpifSMStart+0x130>
4001b730:	e1a00000 	nop			; (mov r0, r0)
4001b734:	e59f0040 	ldr	r0, [pc, #64]	; 4001b77c <CyU3PGpifSMStart+0x150>
4001b738:	e1ce0000 	bic	r0, lr, r0
4001b73c:	e3800005 	orr	r0, r0, #5
4001b740:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001b744:	e1800424 	orr	r0, r0, r4, lsr #8
4001b748:	e59f4018 	ldr	r4, [pc, #24]	; 4001b768 <CyU3PGpifSMStart+0x13c>
4001b74c:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001b750:	ea000001 	b	4001b75c <CyU3PGpifSMStart+0x130>
4001b754:	e1a00000 	nop			; (mov r0, r0)
4001b758:	e1a00000 	nop			; (mov r0, r0)
4001b75c:	e1a00000 	nop			; (mov r0, r0)
4001b760:	e3a00000 	mov	r0, #0
4001b764:	eaffffbc 	b	4001b65c <CyU3PGpifSMStart+0x30>
4001b768:	e0014000 	.word	0xe0014000
4001b76c:	e0015000 	.word	0xe0015000
4001b770:	ff00003a 	.word	0xff00003a
4001b774:	0080ffc5 	.word	0x0080ffc5
4001b778:	00c0ffc5 	.word	0x00c0ffc5
4001b77c:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001b780 <CyU3PGpifSMSwitch>:
4001b780:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b784:	e1a0c000 	mov	ip, r0
4001b788:	e59de018 	ldr	lr, [sp, #24]
4001b78c:	e3a04000 	mov	r4, #0
4001b790:	e3510c01 	cmp	r1, #256	; 0x100
4001b794:	ba000001 	blt	4001b7a0 <CyU3PGpifSMSwitch+0x20>
4001b798:	e3a00040 	mov	r0, #64	; 0x40
4001b79c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b7a0:	e59f0150 	ldr	r0, [pc, #336]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b7a4:	e5900000 	ldr	r0, [r0]
4001b7a8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b7ac:	1a000001 	bne	4001b7b8 <CyU3PGpifSMSwitch+0x38>
4001b7b0:	e3a00044 	mov	r0, #68	; 0x44
4001b7b4:	eafffff8 	b	4001b79c <CyU3PGpifSMSwitch+0x1c>
4001b7b8:	e59f0138 	ldr	r0, [pc, #312]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b7bc:	e5900008 	ldr	r0, [r0, #8]
4001b7c0:	e2006007 	and	r6, r0, #7
4001b7c4:	e59f012c 	ldr	r0, [pc, #300]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b7c8:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b7cc:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b7d0:	e1800803 	orr	r0, r0, r3, lsl #16
4001b7d4:	e3800001 	orr	r0, r0, #1
4001b7d8:	e59f8118 	ldr	r8, [pc, #280]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b7dc:	e5880118 	str	r0, [r8, #280]	; 0x118
4001b7e0:	e3a00001 	mov	r0, #1
4001b7e4:	e1804801 	orr	r4, r0, r1, lsl #16
4001b7e8:	e35c0c01 	cmp	ip, #256	; 0x100
4001b7ec:	aa000012 	bge	4001b83c <CyU3PGpifSMSwitch+0xbc>
4001b7f0:	e1c80000 	bic	r0, r8, r0
4001b7f4:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b7f8:	e1a05c20 	lsr	r5, r0, #24
4001b7fc:	e59f00f8 	ldr	r0, [pc, #248]	; 4001b8fc <CyU3PGpifSMSwitch+0x17c>
4001b800:	e7d00006 	ldrb	r0, [r0, r6]
4001b804:	e0000005 	and	r0, r0, r5
4001b808:	e59f80ec 	ldr	r8, [pc, #236]	; 4001b8fc <CyU3PGpifSMSwitch+0x17c>
4001b80c:	e7d88006 	ldrb	r8, [r8, r6]
4001b810:	e008800c 	and	r8, r8, ip
4001b814:	e1500008 	cmp	r0, r8
4001b818:	1a000001 	bne	4001b824 <CyU3PGpifSMSwitch+0xa4>
4001b81c:	e3844004 	orr	r4, r4, #4
4001b820:	ea000006 	b	4001b840 <CyU3PGpifSMSwitch+0xc0>
4001b824:	e3a00008 	mov	r0, #8
4001b828:	e180040c 	orr	r0, r0, ip, lsl #8
4001b82c:	e1844000 	orr	r4, r4, r0
4001b830:	e59f00c0 	ldr	r0, [pc, #192]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b834:	e580e120 	str	lr, [r0, #288]	; 0x120
4001b838:	ea000000 	b	4001b840 <CyU3PGpifSMSwitch+0xc0>
4001b83c:	e3844004 	orr	r4, r4, #4
4001b840:	e3520c01 	cmp	r2, #256	; 0x100
4001b844:	aa000007 	bge	4001b868 <CyU3PGpifSMSwitch+0xe8>
4001b848:	e3a00002 	mov	r0, #2
4001b84c:	e1800c02 	orr	r0, r0, r2, lsl #24
4001b850:	e1844000 	orr	r4, r4, r0
4001b854:	e59f009c 	ldr	r0, [pc, #156]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b858:	e5900018 	ldr	r0, [r0, #24]
4001b85c:	e3800001 	orr	r0, r0, #1
4001b860:	e59f8090 	ldr	r8, [pc, #144]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b864:	e5880018 	str	r0, [r8, #24]
4001b868:	e59f0088 	ldr	r0, [pc, #136]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b86c:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001b870:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001b874:	e3560001 	cmp	r6, #1
4001b878:	0a000004 	beq	4001b890 <CyU3PGpifSMSwitch+0x110>
4001b87c:	e3560002 	cmp	r6, #2
4001b880:	0a000009 	beq	4001b8ac <CyU3PGpifSMSwitch+0x12c>
4001b884:	e3560003 	cmp	r6, #3
4001b888:	1a000015 	bne	4001b8e4 <CyU3PGpifSMSwitch+0x164>
4001b88c:	ea00000d 	b	4001b8c8 <CyU3PGpifSMSwitch+0x148>
4001b890:	e1a00000 	nop			; (mov r0, r0)
4001b894:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001b898:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001b89c:	e1800428 	orr	r0, r0, r8, lsr #8
4001b8a0:	e59f8050 	ldr	r8, [pc, #80]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b8a4:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b8a8:	ea00000f 	b	4001b8ec <CyU3PGpifSMSwitch+0x16c>
4001b8ac:	e1a00000 	nop			; (mov r0, r0)
4001b8b0:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001b8b4:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001b8b8:	e1800428 	orr	r0, r0, r8, lsr #8
4001b8bc:	e59f8034 	ldr	r8, [pc, #52]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b8c0:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b8c4:	ea000008 	b	4001b8ec <CyU3PGpifSMSwitch+0x16c>
4001b8c8:	e1a00000 	nop			; (mov r0, r0)
4001b8cc:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001b8d0:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001b8d4:	e1800428 	orr	r0, r0, r8, lsr #8
4001b8d8:	e59f8018 	ldr	r8, [pc, #24]	; 4001b8f8 <CyU3PGpifSMSwitch+0x178>
4001b8dc:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001b8e0:	ea000001 	b	4001b8ec <CyU3PGpifSMSwitch+0x16c>
4001b8e4:	e1a00000 	nop			; (mov r0, r0)
4001b8e8:	e1a00000 	nop			; (mov r0, r0)
4001b8ec:	e1a00000 	nop			; (mov r0, r0)
4001b8f0:	e3a00000 	mov	r0, #0
4001b8f4:	eaffffa8 	b	4001b79c <CyU3PGpifSMSwitch+0x1c>
4001b8f8:	e0014000 	.word	0xe0014000
4001b8fc:	40011dc8 	.word	0x40011dc8

Disassembly of section i.CyU3PConnectState:

4001b900 <CyU3PConnectState>:
4001b900:	e92d4070 	push	{r4, r5, r6, lr}
4001b904:	e1a04000 	mov	r4, r0
4001b908:	e1a06001 	mov	r6, r1
4001b90c:	e59f0234 	ldr	r0, [pc, #564]	; 4001bb48 <CyU3PConnectState+0x248>
4001b910:	e5d00008 	ldrb	r0, [r0, #8]
4001b914:	e3500000 	cmp	r0, #0
4001b918:	1a000001 	bne	4001b924 <CyU3PConnectState+0x24>
4001b91c:	e3a00042 	mov	r0, #66	; 0x42
4001b920:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b924:	ebffe41a 	bl	40014994 <CyFx3DevIsUsb3Supported>
4001b928:	e3500000 	cmp	r0, #0
4001b92c:	1a000000 	bne	4001b934 <CyU3PConnectState+0x34>
4001b930:	e3a06000 	mov	r6, #0
4001b934:	e3a05000 	mov	r5, #0
4001b938:	e3e01000 	mvn	r1, #0
4001b93c:	e59f0208 	ldr	r0, [pc, #520]	; 4001bb4c <CyU3PConnectState+0x24c>
4001b940:	ebffb9af 	bl	4000a004 <_txe_mutex_get>
4001b944:	e3540000 	cmp	r4, #0
4001b948:	1a00001a 	bne	4001b9b8 <CyU3PConnectState+0xb8>
4001b94c:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bb48 <CyU3PConnectState+0x248>
4001b950:	e5d00008 	ldrb	r0, [r0, #8]
4001b954:	e3500004 	cmp	r0, #4
4001b958:	ba000012 	blt	4001b9a8 <CyU3PConnectState+0xa8>
4001b95c:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bb48 <CyU3PConnectState+0x248>
4001b960:	e5d00008 	ldrb	r0, [r0, #8]
4001b964:	e3500005 	cmp	r0, #5
4001b968:	ba000008 	blt	4001b990 <CyU3PConnectState+0x90>
4001b96c:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bb48 <CyU3PConnectState+0x248>
4001b970:	e5d11009 	ldrb	r1, [r1, #9]
4001b974:	e3510003 	cmp	r1, #3
4001b978:	1a000001 	bne	4001b984 <CyU3PConnectState+0x84>
4001b97c:	e3a01001 	mov	r1, #1
4001b980:	ea000000 	b	4001b988 <CyU3PConnectState+0x88>
4001b984:	e3a01000 	mov	r1, #0
4001b988:	e1a00001 	mov	r0, r1
4001b98c:	eb00050f 	bl	4001cdd0 <CyU3PUsbPhyDisable>
4001b990:	e3a00003 	mov	r0, #3
4001b994:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bb48 <CyU3PConnectState+0x248>
4001b998:	e5c10008 	strb	r0, [r1, #8]
4001b99c:	e3a00000 	mov	r0, #0
4001b9a0:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001b9a4:	e5810058 	str	r0, [r1, #88]	; 0x58
4001b9a8:	e3a00000 	mov	r0, #0
4001b9ac:	e59f1194 	ldr	r1, [pc, #404]	; 4001bb48 <CyU3PConnectState+0x248>
4001b9b0:	e5810044 	str	r0, [r1, #68]	; 0x44
4001b9b4:	ea00005f 	b	4001bb38 <CyU3PConnectState+0x238>
4001b9b8:	e59f0188 	ldr	r0, [pc, #392]	; 4001bb48 <CyU3PConnectState+0x248>
4001b9bc:	e5d00008 	ldrb	r0, [r0, #8]
4001b9c0:	e3500003 	cmp	r0, #3
4001b9c4:	0a00000b 	beq	4001b9f8 <CyU3PConnectState+0xf8>
4001b9c8:	e3500004 	cmp	r0, #4
4001b9cc:	0a000004 	beq	4001b9e4 <CyU3PConnectState+0xe4>
4001b9d0:	e3500005 	cmp	r0, #5
4001b9d4:	0a000004 	beq	4001b9ec <CyU3PConnectState+0xec>
4001b9d8:	e3500006 	cmp	r0, #6
4001b9dc:	1a000051 	bne	4001bb28 <CyU3PConnectState+0x228>
4001b9e0:	ea000002 	b	4001b9f0 <CyU3PConnectState+0xf0>
4001b9e4:	e1a00000 	nop			; (mov r0, r0)
4001b9e8:	e1a00000 	nop			; (mov r0, r0)
4001b9ec:	e1a00000 	nop			; (mov r0, r0)
4001b9f0:	e3a05043 	mov	r5, #67	; 0x43
4001b9f4:	ea00004e 	b	4001bb34 <CyU3PConnectState+0x234>
4001b9f8:	e1a00000 	nop			; (mov r0, r0)
4001b9fc:	e59f0144 	ldr	r0, [pc, #324]	; 4001bb48 <CyU3PConnectState+0x248>
4001ba00:	e5d00007 	ldrb	r0, [r0, #7]
4001ba04:	e3500001 	cmp	r0, #1
4001ba08:	0a00000f 	beq	4001ba4c <CyU3PConnectState+0x14c>
4001ba0c:	e59f013c 	ldr	r0, [pc, #316]	; 4001bb50 <CyU3PConnectState+0x250>
4001ba10:	e590001c 	ldr	r0, [r0, #28]
4001ba14:	e3500000 	cmp	r0, #0
4001ba18:	0a000007 	beq	4001ba3c <CyU3PConnectState+0x13c>
4001ba1c:	e59f012c 	ldr	r0, [pc, #300]	; 4001bb50 <CyU3PConnectState+0x250>
4001ba20:	e5900014 	ldr	r0, [r0, #20]
4001ba24:	e3500000 	cmp	r0, #0
4001ba28:	0a000003 	beq	4001ba3c <CyU3PConnectState+0x13c>
4001ba2c:	e59f011c 	ldr	r0, [pc, #284]	; 4001bb50 <CyU3PConnectState+0x250>
4001ba30:	e5900018 	ldr	r0, [r0, #24]
4001ba34:	e3500000 	cmp	r0, #0
4001ba38:	1a000003 	bne	4001ba4c <CyU3PConnectState+0x14c>
4001ba3c:	e59f0108 	ldr	r0, [pc, #264]	; 4001bb4c <CyU3PConnectState+0x24c>
4001ba40:	ebffb9a4 	bl	4000a0d8 <_txe_mutex_put>
4001ba44:	e3a00044 	mov	r0, #68	; 0x44
4001ba48:	eaffffb4 	b	4001b920 <CyU3PConnectState+0x20>
4001ba4c:	e3560000 	cmp	r6, #0
4001ba50:	0a000007 	beq	4001ba74 <CyU3PConnectState+0x174>
4001ba54:	e3a00000 	mov	r0, #0
4001ba58:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bb54 <CyU3PConnectState+0x254>
4001ba5c:	e5810014 	str	r0, [r1, #20]
4001ba60:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bb58 <CyU3PConnectState+0x258>
4001ba64:	e5810000 	str	r0, [r1]
4001ba68:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bb5c <CyU3PConnectState+0x25c>
4001ba6c:	e5810000 	str	r0, [r1]
4001ba70:	ea000007 	b	4001ba94 <CyU3PConnectState+0x194>
4001ba74:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bb48 <CyU3PConnectState+0x248>
4001ba78:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001ba7c:	e3500000 	cmp	r0, #0
4001ba80:	0a000003 	beq	4001ba94 <CyU3PConnectState+0x194>
4001ba84:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bb4c <CyU3PConnectState+0x24c>
4001ba88:	ebffb992 	bl	4000a0d8 <_txe_mutex_put>
4001ba8c:	e3a000ff 	mov	r0, #255	; 0xff
4001ba90:	eaffffa2 	b	4001b920 <CyU3PConnectState+0x20>
4001ba94:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bb48 <CyU3PConnectState+0x248>
4001ba98:	e5806024 	str	r6, [r0, #36]	; 0x24
4001ba9c:	e3a00000 	mov	r0, #0
4001baa0:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bb48 <CyU3PConnectState+0x248>
4001baa4:	e5810058 	str	r0, [r1, #88]	; 0x58
4001baa8:	e2810000 	add	r0, r1, #0
4001baac:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bab0:	e3500000 	cmp	r0, #0
4001bab4:	0a000004 	beq	4001bacc <CyU3PConnectState+0x1cc>
4001bab8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bb60 <CyU3PConnectState+0x260>
4001babc:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001bac0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001bac4:	e1100001 	tst	r0, r1
4001bac8:	0a000012 	beq	4001bb18 <CyU3PConnectState+0x218>
4001bacc:	e3560000 	cmp	r6, #0
4001bad0:	0a000007 	beq	4001baf4 <CyU3PConnectState+0x1f4>
4001bad4:	e3a00000 	mov	r0, #0
4001bad8:	e59f1068 	ldr	r1, [pc, #104]	; 4001bb48 <CyU3PConnectState+0x248>
4001badc:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bae0:	e3a00001 	mov	r0, #1
4001bae4:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bae8:	e3a00000 	mov	r0, #0
4001baec:	e5810050 	str	r0, [r1, #80]	; 0x50
4001baf0:	ea000002 	b	4001bb00 <CyU3PConnectState+0x200>
4001baf4:	e3a00000 	mov	r0, #0
4001baf8:	e59f1048 	ldr	r1, [pc, #72]	; 4001bb48 <CyU3PConnectState+0x248>
4001bafc:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bb00:	e1a00006 	mov	r0, r6
4001bb04:	eb000527 	bl	4001cfa8 <CyU3PUsbPhyEnable>
4001bb08:	e3a00005 	mov	r0, #5
4001bb0c:	e59f1034 	ldr	r1, [pc, #52]	; 4001bb48 <CyU3PConnectState+0x248>
4001bb10:	e5c10008 	strb	r0, [r1, #8]
4001bb14:	ea000002 	b	4001bb24 <CyU3PConnectState+0x224>
4001bb18:	e3a00004 	mov	r0, #4
4001bb1c:	e59f1024 	ldr	r1, [pc, #36]	; 4001bb48 <CyU3PConnectState+0x248>
4001bb20:	e5c10008 	strb	r0, [r1, #8]
4001bb24:	ea000002 	b	4001bb34 <CyU3PConnectState+0x234>
4001bb28:	e1a00000 	nop			; (mov r0, r0)
4001bb2c:	e3a05044 	mov	r5, #68	; 0x44
4001bb30:	e1a00000 	nop			; (mov r0, r0)
4001bb34:	e1a00000 	nop			; (mov r0, r0)
4001bb38:	e59f000c 	ldr	r0, [pc, #12]	; 4001bb4c <CyU3PConnectState+0x24c>
4001bb3c:	ebffb965 	bl	4000a0d8 <_txe_mutex_put>
4001bb40:	e1a00005 	mov	r0, r5
4001bb44:	eaffff75 	b	4001b920 <CyU3PConnectState+0x20>
4001bb48:	40031d40 	.word	0x40031d40
4001bb4c:	40031ee0 	.word	0x40031ee0
4001bb50:	40031f98 	.word	0x40031f98
4001bb54:	e0033000 	.word	0xe0033000
4001bb58:	40030d84 	.word	0x40030d84
4001bb5c:	40030d88 	.word	0x40030d88
4001bb60:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bb64 <CyU3POtgGetMode>:
4001bb64:	e59f0004 	ldr	r0, [pc, #4]	; 4001bb70 <CyU3POtgGetMode+0xc>
4001bb68:	e5d00000 	ldrb	r0, [r0]
4001bb6c:	e12fff1e 	bx	lr
4001bb70:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bb74 <CyU3POtgIsDeviceMode>:
4001bb74:	e3a01000 	mov	r1, #0
4001bb78:	e59f00b4 	ldr	r0, [pc, #180]	; 4001bc34 <CyU3POtgIsDeviceMode+0xc0>
4001bb7c:	e5d00000 	ldrb	r0, [r0]
4001bb80:	e3500000 	cmp	r0, #0
4001bb84:	0a000003 	beq	4001bb98 <CyU3POtgIsDeviceMode+0x24>
4001bb88:	e59f00a4 	ldr	r0, [pc, #164]	; 4001bc34 <CyU3POtgIsDeviceMode+0xc0>
4001bb8c:	e5d00000 	ldrb	r0, [r0]
4001bb90:	e3500002 	cmp	r0, #2
4001bb94:	1a000024 	bne	4001bc2c <CyU3POtgIsDeviceMode+0xb8>
4001bb98:	e59f0098 	ldr	r0, [pc, #152]	; 4001bc38 <CyU3POtgIsDeviceMode+0xc4>
4001bb9c:	e5d00000 	ldrb	r0, [r0]
4001bba0:	e3500000 	cmp	r0, #0
4001bba4:	0a000006 	beq	4001bbc4 <CyU3POtgIsDeviceMode+0x50>
4001bba8:	e3500002 	cmp	r0, #2
4001bbac:	0a00000c 	beq	4001bbe4 <CyU3POtgIsDeviceMode+0x70>
4001bbb0:	e3500004 	cmp	r0, #4
4001bbb4:	0a00000b 	beq	4001bbe8 <CyU3POtgIsDeviceMode+0x74>
4001bbb8:	e3500005 	cmp	r0, #5
4001bbbc:	1a00000c 	bne	4001bbf4 <CyU3POtgIsDeviceMode+0x80>
4001bbc0:	ea000009 	b	4001bbec <CyU3POtgIsDeviceMode+0x78>
4001bbc4:	e1a00000 	nop			; (mov r0, r0)
4001bbc8:	e59f0064 	ldr	r0, [pc, #100]	; 4001bc34 <CyU3POtgIsDeviceMode+0xc0>
4001bbcc:	e5d00000 	ldrb	r0, [r0]
4001bbd0:	e3500002 	cmp	r0, #2
4001bbd4:	1a000001 	bne	4001bbe0 <CyU3POtgIsDeviceMode+0x6c>
4001bbd8:	e3a00000 	mov	r0, #0
4001bbdc:	e12fff1e 	bx	lr
4001bbe0:	e1a00000 	nop			; (mov r0, r0)
4001bbe4:	e1a00000 	nop			; (mov r0, r0)
4001bbe8:	e1a00000 	nop			; (mov r0, r0)
4001bbec:	e3a01001 	mov	r1, #1
4001bbf0:	ea000002 	b	4001bc00 <CyU3POtgIsDeviceMode+0x8c>
4001bbf4:	e1a00000 	nop			; (mov r0, r0)
4001bbf8:	e3a01000 	mov	r1, #0
4001bbfc:	e1a00000 	nop			; (mov r0, r0)
4001bc00:	e1a00000 	nop			; (mov r0, r0)
4001bc04:	e59f0030 	ldr	r0, [pc, #48]	; 4001bc3c <CyU3POtgIsDeviceMode+0xc8>
4001bc08:	e5900000 	ldr	r0, [r0]
4001bc0c:	e3500000 	cmp	r0, #0
4001bc10:	0a000005 	beq	4001bc2c <CyU3POtgIsDeviceMode+0xb8>
4001bc14:	e3510000 	cmp	r1, #0
4001bc18:	1a000001 	bne	4001bc24 <CyU3POtgIsDeviceMode+0xb0>
4001bc1c:	e3a00001 	mov	r0, #1
4001bc20:	ea000000 	b	4001bc28 <CyU3POtgIsDeviceMode+0xb4>
4001bc24:	e3a00000 	mov	r0, #0
4001bc28:	e1a01000 	mov	r1, r0
4001bc2c:	e1a00001 	mov	r0, r1
4001bc30:	eaffffe9 	b	4001bbdc <CyU3POtgIsDeviceMode+0x68>
4001bc34:	40030d54 	.word	0x40030d54
4001bc38:	40030d50 	.word	0x40030d50
4001bc3c:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsHostMode:

4001bc40 <CyU3POtgIsHostMode>:
4001bc40:	e3a01000 	mov	r1, #0
4001bc44:	e59f00a8 	ldr	r0, [pc, #168]	; 4001bcf4 <CyU3POtgIsHostMode+0xb4>
4001bc48:	e5d00000 	ldrb	r0, [r0]
4001bc4c:	e3500001 	cmp	r0, #1
4001bc50:	0a000003 	beq	4001bc64 <CyU3POtgIsHostMode+0x24>
4001bc54:	e59f0098 	ldr	r0, [pc, #152]	; 4001bcf4 <CyU3POtgIsHostMode+0xb4>
4001bc58:	e5d00000 	ldrb	r0, [r0]
4001bc5c:	e3500002 	cmp	r0, #2
4001bc60:	1a000021 	bne	4001bcec <CyU3POtgIsHostMode+0xac>
4001bc64:	e59f008c 	ldr	r0, [pc, #140]	; 4001bcf8 <CyU3POtgIsHostMode+0xb8>
4001bc68:	e5d00000 	ldrb	r0, [r0]
4001bc6c:	e3500000 	cmp	r0, #0
4001bc70:	0a000004 	beq	4001bc88 <CyU3POtgIsHostMode+0x48>
4001bc74:	e3500001 	cmp	r0, #1
4001bc78:	0a00000a 	beq	4001bca8 <CyU3POtgIsHostMode+0x68>
4001bc7c:	e3500003 	cmp	r0, #3
4001bc80:	1a00000b 	bne	4001bcb4 <CyU3POtgIsHostMode+0x74>
4001bc84:	ea000008 	b	4001bcac <CyU3POtgIsHostMode+0x6c>
4001bc88:	e1a00000 	nop			; (mov r0, r0)
4001bc8c:	e59f0060 	ldr	r0, [pc, #96]	; 4001bcf4 <CyU3POtgIsHostMode+0xb4>
4001bc90:	e5d00000 	ldrb	r0, [r0]
4001bc94:	e3500002 	cmp	r0, #2
4001bc98:	1a000001 	bne	4001bca4 <CyU3POtgIsHostMode+0x64>
4001bc9c:	e3a00000 	mov	r0, #0
4001bca0:	e12fff1e 	bx	lr
4001bca4:	e1a00000 	nop			; (mov r0, r0)
4001bca8:	e1a00000 	nop			; (mov r0, r0)
4001bcac:	e3a01001 	mov	r1, #1
4001bcb0:	ea000002 	b	4001bcc0 <CyU3POtgIsHostMode+0x80>
4001bcb4:	e1a00000 	nop			; (mov r0, r0)
4001bcb8:	e3a01000 	mov	r1, #0
4001bcbc:	e1a00000 	nop			; (mov r0, r0)
4001bcc0:	e1a00000 	nop			; (mov r0, r0)
4001bcc4:	e59f0030 	ldr	r0, [pc, #48]	; 4001bcfc <CyU3POtgIsHostMode+0xbc>
4001bcc8:	e5900000 	ldr	r0, [r0]
4001bccc:	e3500000 	cmp	r0, #0
4001bcd0:	0a000005 	beq	4001bcec <CyU3POtgIsHostMode+0xac>
4001bcd4:	e3510000 	cmp	r1, #0
4001bcd8:	1a000001 	bne	4001bce4 <CyU3POtgIsHostMode+0xa4>
4001bcdc:	e3a00001 	mov	r0, #1
4001bce0:	ea000000 	b	4001bce8 <CyU3POtgIsHostMode+0xa8>
4001bce4:	e3a00000 	mov	r0, #0
4001bce8:	e1a01000 	mov	r1, r0
4001bcec:	e1a00001 	mov	r0, r1
4001bcf0:	eaffffea 	b	4001bca0 <CyU3POtgIsHostMode+0x60>
4001bcf4:	40030d54 	.word	0x40030d54
4001bcf8:	40030d50 	.word	0x40030d50
4001bcfc:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsStarted:

4001bd00 <CyU3POtgIsStarted>:
4001bd00:	e59f0004 	ldr	r0, [pc, #4]	; 4001bd0c <CyU3POtgIsStarted+0xc>
4001bd04:	e5900000 	ldr	r0, [r0]
4001bd08:	e12fff1e 	bx	lr
4001bd0c:	40030d48 	.word	0x40030d48

Disassembly of section i.CyU3PSetEpConfig:

4001bd10 <CyU3PSetEpConfig>:
4001bd10:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001bd14:	e1a04000 	mov	r4, r0
4001bd18:	e1a05001 	mov	r5, r1
4001bd1c:	e204607f 	and	r6, r4, #127	; 0x7f
4001bd20:	e3a07000 	mov	r7, #0
4001bd24:	e3a08000 	mov	r8, #0
4001bd28:	e3a09000 	mov	r9, #0
4001bd2c:	e3a0a000 	mov	sl, #0
4001bd30:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c2c0 <CyU3PSetEpConfig+0x5b0>
4001bd34:	e5d00008 	ldrb	r0, [r0, #8]
4001bd38:	e3500000 	cmp	r0, #0
4001bd3c:	1a000001 	bne	4001bd48 <CyU3PSetEpConfig+0x38>
4001bd40:	e3a00042 	mov	r0, #66	; 0x42
4001bd44:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001bd48:	e3550000 	cmp	r5, #0
4001bd4c:	1a000001 	bne	4001bd58 <CyU3PSetEpConfig+0x48>
4001bd50:	e3a00041 	mov	r0, #65	; 0x41
4001bd54:	eafffffa 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001bd58:	e5950000 	ldr	r0, [r5]
4001bd5c:	e3500000 	cmp	r0, #0
4001bd60:	0a000074 	beq	4001bf38 <CyU3PSetEpConfig+0x228>
4001bd64:	e1d500b8 	ldrh	r0, [r5, #8]
4001bd68:	e3500b01 	cmp	r0, #1024	; 0x400
4001bd6c:	ca000001 	bgt	4001bd78 <CyU3PSetEpConfig+0x68>
4001bd70:	e356000f 	cmp	r6, #15
4001bd74:	da000001 	ble	4001bd80 <CyU3PSetEpConfig+0x70>
4001bd78:	e3a00040 	mov	r0, #64	; 0x40
4001bd7c:	eafffff0 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001bd80:	e5d50004 	ldrb	r0, [r5, #4]
4001bd84:	e3500000 	cmp	r0, #0
4001bd88:	0a000002 	beq	4001bd98 <CyU3PSetEpConfig+0x88>
4001bd8c:	e5d50004 	ldrb	r0, [r5, #4]
4001bd90:	e3500003 	cmp	r0, #3
4001bd94:	da000001 	ble	4001bda0 <CyU3PSetEpConfig+0x90>
4001bd98:	e3a00040 	mov	r0, #64	; 0x40
4001bd9c:	eaffffe8 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001bda0:	e5d5000a 	ldrb	r0, [r5, #10]
4001bda4:	e3500010 	cmp	r0, #16
4001bda8:	ca000008 	bgt	4001bdd0 <CyU3PSetEpConfig+0xc0>
4001bdac:	e5d5000a 	ldrb	r0, [r5, #10]
4001bdb0:	e3500001 	cmp	r0, #1
4001bdb4:	da000007 	ble	4001bdd8 <CyU3PSetEpConfig+0xc8>
4001bdb8:	e1d500b8 	ldrh	r0, [r5, #8]
4001bdbc:	e3500b01 	cmp	r0, #1024	; 0x400
4001bdc0:	aa000004 	bge	4001bdd8 <CyU3PSetEpConfig+0xc8>
4001bdc4:	e1d500b8 	ldrh	r0, [r5, #8]
4001bdc8:	e3500000 	cmp	r0, #0
4001bdcc:	0a000001 	beq	4001bdd8 <CyU3PSetEpConfig+0xc8>
4001bdd0:	e3a00040 	mov	r0, #64	; 0x40
4001bdd4:	eaffffda 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001bdd8:	e5d50004 	ldrb	r0, [r5, #4]
4001bddc:	e1a00f00 	lsl	r0, r0, #30
4001bde0:	e1a08a20 	lsr	r8, r0, #20
4001bde4:	e5d50004 	ldrb	r0, [r5, #4]
4001bde8:	e2000003 	and	r0, r0, #3
4001bdec:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c2c4 <CyU3PSetEpConfig+0x5b4>
4001bdf0:	e7d1a000 	ldrb	sl, [r1, r0]
4001bdf4:	e5d5000a 	ldrb	r0, [r5, #10]
4001bdf8:	e3500000 	cmp	r0, #0
4001bdfc:	0a000004 	beq	4001be14 <CyU3PSetEpConfig+0x104>
4001be00:	e5d5000a 	ldrb	r0, [r5, #10]
4001be04:	e2400001 	sub	r0, r0, #1
4001be08:	e200000f 	and	r0, r0, #15
4001be0c:	e18aa400 	orr	sl, sl, r0, lsl #8
4001be10:	ea000001 	b	4001be1c <CyU3PSetEpConfig+0x10c>
4001be14:	e3a00001 	mov	r0, #1
4001be18:	e5c5000a 	strb	r0, [r5, #10]
4001be1c:	e5d50004 	ldrb	r0, [r5, #4]
4001be20:	e3500001 	cmp	r0, #1
4001be24:	1a000013 	bne	4001be78 <CyU3PSetEpConfig+0x168>
4001be28:	e5950000 	ldr	r0, [r5]
4001be2c:	e3500000 	cmp	r0, #0
4001be30:	0a000010 	beq	4001be78 <CyU3PSetEpConfig+0x168>
4001be34:	e5d5000b 	ldrb	r0, [r5, #11]
4001be38:	e2000003 	and	r0, r0, #3
4001be3c:	e1888600 	orr	r8, r8, r0, lsl #12
4001be40:	e5d5000a 	ldrb	r0, [r5, #10]
4001be44:	e5d5100b 	ldrb	r1, [r5, #11]
4001be48:	e1600180 	smulbb	r0, r0, r1
4001be4c:	e200003f 	and	r0, r0, #63	; 0x3f
4001be50:	e18aa100 	orr	sl, sl, r0, lsl #2
4001be54:	e5d5000b 	ldrb	r0, [r5, #11]
4001be58:	e3500001 	cmp	r0, #1
4001be5c:	da000005 	ble	4001be78 <CyU3PSetEpConfig+0x168>
4001be60:	e3560003 	cmp	r6, #3
4001be64:	0a000003 	beq	4001be78 <CyU3PSetEpConfig+0x168>
4001be68:	e3560007 	cmp	r6, #7
4001be6c:	0a000001 	beq	4001be78 <CyU3PSetEpConfig+0x168>
4001be70:	e3a0004d 	mov	r0, #77	; 0x4d
4001be74:	eaffffb2 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001be78:	e1d500b8 	ldrh	r0, [r5, #8]
4001be7c:	e3500000 	cmp	r0, #0
4001be80:	0a000004 	beq	4001be98 <CyU3PSetEpConfig+0x188>
4001be84:	e1d500b8 	ldrh	r0, [r5, #8]
4001be88:	e3500b01 	cmp	r0, #1024	; 0x400
4001be8c:	ca000001 	bgt	4001be98 <CyU3PSetEpConfig+0x188>
4001be90:	e1d500b8 	ldrh	r0, [r5, #8]
4001be94:	ea000000 	b	4001be9c <CyU3PSetEpConfig+0x18c>
4001be98:	e3a00b01 	mov	r0, #1024	; 0x400
4001be9c:	e1a07800 	lsl	r7, r0, #16
4001bea0:	e1a07827 	lsr	r7, r7, #16
4001bea4:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c2c0 <CyU3PSetEpConfig+0x5b0>
4001bea8:	e5d00008 	ldrb	r0, [r0, #8]
4001beac:	e3500005 	cmp	r0, #5
4001beb0:	da00001e 	ble	4001bf30 <CyU3PSetEpConfig+0x220>
4001beb4:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c2c0 <CyU3PSetEpConfig+0x5b0>
4001beb8:	e5d00009 	ldrb	r0, [r0, #9]
4001bebc:	e3500001 	cmp	r0, #1
4001bec0:	0a000008 	beq	4001bee8 <CyU3PSetEpConfig+0x1d8>
4001bec4:	e3500002 	cmp	r0, #2
4001bec8:	1a000015 	bne	4001bf24 <CyU3PSetEpConfig+0x214>
4001becc:	e5d50004 	ldrb	r0, [r5, #4]
4001bed0:	e3500002 	cmp	r0, #2
4001bed4:	1a000002 	bne	4001bee4 <CyU3PSetEpConfig+0x1d4>
4001bed8:	e3570c02 	cmp	r7, #512	; 0x200
4001bedc:	da000000 	ble	4001bee4 <CyU3PSetEpConfig+0x1d4>
4001bee0:	e3a07c02 	mov	r7, #512	; 0x200
4001bee4:	ea000010 	b	4001bf2c <CyU3PSetEpConfig+0x21c>
4001bee8:	e1a00000 	nop			; (mov r0, r0)
4001beec:	e5d50004 	ldrb	r0, [r5, #4]
4001bef0:	e3500001 	cmp	r0, #1
4001bef4:	1a000003 	bne	4001bf08 <CyU3PSetEpConfig+0x1f8>
4001bef8:	e3570b01 	cmp	r7, #1024	; 0x400
4001befc:	ba000001 	blt	4001bf08 <CyU3PSetEpConfig+0x1f8>
4001bf00:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c2c8 <CyU3PSetEpConfig+0x5b8>
4001bf04:	ea000005 	b	4001bf20 <CyU3PSetEpConfig+0x210>
4001bf08:	e5d50004 	ldrb	r0, [r5, #4]
4001bf0c:	e3500001 	cmp	r0, #1
4001bf10:	0a000002 	beq	4001bf20 <CyU3PSetEpConfig+0x210>
4001bf14:	e3570040 	cmp	r7, #64	; 0x40
4001bf18:	da000000 	ble	4001bf20 <CyU3PSetEpConfig+0x210>
4001bf1c:	e3a07040 	mov	r7, #64	; 0x40
4001bf20:	ea000001 	b	4001bf2c <CyU3PSetEpConfig+0x21c>
4001bf24:	e1a00000 	nop			; (mov r0, r0)
4001bf28:	e1a00000 	nop			; (mov r0, r0)
4001bf2c:	e1a00000 	nop			; (mov r0, r0)
4001bf30:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001bf34:	e1888000 	orr	r8, r8, r0
4001bf38:	e3e01000 	mvn	r1, #0
4001bf3c:	e59f0388 	ldr	r0, [pc, #904]	; 4001c2cc <CyU3PSetEpConfig+0x5bc>
4001bf40:	ebffb82f 	bl	4000a004 <_txe_mutex_get>
4001bf44:	e3140080 	tst	r4, #128	; 0x80
4001bf48:	0a000062 	beq	4001c0d8 <CyU3PSetEpConfig+0x3c8>
4001bf4c:	e5950000 	ldr	r0, [r5]
4001bf50:	e3500000 	cmp	r0, #0
4001bf54:	1a00001d 	bne	4001bfd0 <CyU3PSetEpConfig+0x2c0>
4001bf58:	e59f0370 	ldr	r0, [pc, #880]	; 4001c2d0 <CyU3PSetEpConfig+0x5c0>
4001bf5c:	e59f1370 	ldr	r1, [pc, #880]	; 4001c2d4 <CyU3PSetEpConfig+0x5c4>
4001bf60:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bf64:	e3a00020 	mov	r0, #32
4001bf68:	e59f1368 	ldr	r1, [pc, #872]	; 4001c2d8 <CyU3PSetEpConfig+0x5c8>
4001bf6c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001bf70:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001bf74:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001bf78:	e3a01001 	mov	r1, #1
4001bf7c:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf80:	e59f1354 	ldr	r1, [pc, #852]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001bf84:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001bf88:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001bf8c:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001bf90:	e3a01001 	mov	r1, #1
4001bf94:	e1c00611 	bic	r0, r0, r1, lsl r6
4001bf98:	e59f1340 	ldr	r1, [pc, #832]	; 4001c2e0 <CyU3PSetEpConfig+0x5d0>
4001bf9c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001bfa0:	e3a00000 	mov	r0, #0
4001bfa4:	e0861086 	add	r1, r6, r6, lsl #1
4001bfa8:	e59f2334 	ldr	r2, [pc, #820]	; 4001c2e4 <CyU3PSetEpConfig+0x5d4>
4001bfac:	e0821101 	add	r1, r2, r1, lsl #2
4001bfb0:	e5810004 	str	r0, [r1, #4]
4001bfb4:	e0861086 	add	r1, r6, r6, lsl #1
4001bfb8:	e0821101 	add	r1, r2, r1, lsl #2
4001bfbc:	e5810008 	str	r0, [r1, #8]
4001bfc0:	e59f0304 	ldr	r0, [pc, #772]	; 4001c2cc <CyU3PSetEpConfig+0x5bc>
4001bfc4:	ebffb843 	bl	4000a0d8 <_txe_mutex_put>
4001bfc8:	e3a00000 	mov	r0, #0
4001bfcc:	eaffff5c 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001bfd0:	e3a00001 	mov	r0, #1
4001bfd4:	e0861086 	add	r1, r6, r6, lsl #1
4001bfd8:	e59f2304 	ldr	r2, [pc, #772]	; 4001c2e4 <CyU3PSetEpConfig+0x5d4>
4001bfdc:	e0821101 	add	r1, r2, r1, lsl #2
4001bfe0:	e5810004 	str	r0, [r1, #4]
4001bfe4:	e0861086 	add	r1, r6, r6, lsl #1
4001bfe8:	e0821101 	add	r1, r2, r1, lsl #2
4001bfec:	e5810008 	str	r0, [r1, #8]
4001bff0:	e1d500b8 	ldrh	r0, [r5, #8]
4001bff4:	e0861086 	add	r1, r6, r6, lsl #1
4001bff8:	e0821101 	add	r1, r2, r1, lsl #2
4001bffc:	e1c100b0 	strh	r0, [r1]
4001c000:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c2e8 <CyU3PSetEpConfig+0x5d8>
4001c004:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c008:	e5d50004 	ldrb	r0, [r5, #4]
4001c00c:	e3500002 	cmp	r0, #2
4001c010:	1a000007 	bne	4001c034 <CyU3PSetEpConfig+0x324>
4001c014:	e1d500b6 	ldrh	r0, [r5, #6]
4001c018:	e3500000 	cmp	r0, #0
4001c01c:	da000004 	ble	4001c034 <CyU3PSetEpConfig+0x324>
4001c020:	e3a02001 	mov	r2, #1
4001c024:	e1a01006 	mov	r1, r6
4001c028:	e1a00004 	mov	r0, r4
4001c02c:	eb00031b 	bl	4001cca0 <CyU3PUsbMapStream>
4001c030:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c2ec <CyU3PSetEpConfig+0x5dc>
4001c034:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001c038:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c03c:	e3a01001 	mov	r1, #1
4001c040:	e1800611 	orr	r0, r0, r1, lsl r6
4001c044:	e59f1290 	ldr	r1, [pc, #656]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001c048:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c04c:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c050:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c054:	e59f1278 	ldr	r1, [pc, #632]	; 4001c2d4 <CyU3PSetEpConfig+0x5c4>
4001c058:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c05c:	e3890001 	orr	r0, r9, #1
4001c060:	e59f1270 	ldr	r1, [pc, #624]	; 4001c2d8 <CyU3PSetEpConfig+0x5c8>
4001c064:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c068:	e2810040 	add	r0, r1, #64	; 0x40
4001c06c:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c070:	e59f0278 	ldr	r0, [pc, #632]	; 4001c2f0 <CyU3PSetEpConfig+0x5e0>
4001c074:	e5900000 	ldr	r0, [r0]
4001c078:	e3500000 	cmp	r0, #0
4001c07c:	0a00007f 	beq	4001c280 <CyU3PSetEpConfig+0x570>
4001c080:	e3a00001 	mov	r0, #1
4001c084:	e59f1268 	ldr	r1, [pc, #616]	; 4001c2f4 <CyU3PSetEpConfig+0x5e4>
4001c088:	e5911000 	ldr	r1, [r1]
4001c08c:	e1110610 	tst	r1, r0, lsl r6
4001c090:	0a00007a 	beq	4001c280 <CyU3PSetEpConfig+0x570>
4001c094:	e59f0244 	ldr	r0, [pc, #580]	; 4001c2e0 <CyU3PSetEpConfig+0x5d0>
4001c098:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c09c:	e3a01001 	mov	r1, #1
4001c0a0:	e1800611 	orr	r0, r0, r1, lsl r6
4001c0a4:	e59f1234 	ldr	r1, [pc, #564]	; 4001c2e0 <CyU3PSetEpConfig+0x5d0>
4001c0a8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c0ac:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c0b0:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c0b4:	e3a01001 	mov	r1, #1
4001c0b8:	e1800611 	orr	r0, r0, r1, lsl r6
4001c0bc:	e59f1218 	ldr	r1, [pc, #536]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001c0c0:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c0c4:	e59f0224 	ldr	r0, [pc, #548]	; 4001c2f0 <CyU3PSetEpConfig+0x5e0>
4001c0c8:	e5901000 	ldr	r1, [r0]
4001c0cc:	e1a00004 	mov	r0, r4
4001c0d0:	eb0001ba 	bl	4001c7c0 <CyU3PUsbEnableEpInterrupts>
4001c0d4:	ea000069 	b	4001c280 <CyU3PSetEpConfig+0x570>
4001c0d8:	e5950000 	ldr	r0, [r5]
4001c0dc:	e3500000 	cmp	r0, #0
4001c0e0:	1a00001e 	bne	4001c160 <CyU3PSetEpConfig+0x450>
4001c0e4:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c2d0 <CyU3PSetEpConfig+0x5c0>
4001c0e8:	e59f1208 	ldr	r1, [pc, #520]	; 4001c2f8 <CyU3PSetEpConfig+0x5e8>
4001c0ec:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c0f0:	e3a00020 	mov	r0, #32
4001c0f4:	e59f1200 	ldr	r1, [pc, #512]	; 4001c2fc <CyU3PSetEpConfig+0x5ec>
4001c0f8:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c0fc:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c100:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c104:	e2861010 	add	r1, r6, #16
4001c108:	e3a02001 	mov	r2, #1
4001c10c:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c110:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c2e0 <CyU3PSetEpConfig+0x5d0>
4001c114:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c118:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c11c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c120:	e2861010 	add	r1, r6, #16
4001c124:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c128:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001c12c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c130:	e3a00000 	mov	r0, #0
4001c134:	e0861086 	add	r1, r6, r6, lsl #1
4001c138:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c300 <CyU3PSetEpConfig+0x5f0>
4001c13c:	e0821101 	add	r1, r2, r1, lsl #2
4001c140:	e5810004 	str	r0, [r1, #4]
4001c144:	e0861086 	add	r1, r6, r6, lsl #1
4001c148:	e0821101 	add	r1, r2, r1, lsl #2
4001c14c:	e5810008 	str	r0, [r1, #8]
4001c150:	e59f0174 	ldr	r0, [pc, #372]	; 4001c2cc <CyU3PSetEpConfig+0x5bc>
4001c154:	ebffb7df 	bl	4000a0d8 <_txe_mutex_put>
4001c158:	e3a00000 	mov	r0, #0
4001c15c:	eafffef8 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001c160:	e3a00001 	mov	r0, #1
4001c164:	e0861086 	add	r1, r6, r6, lsl #1
4001c168:	e59f2190 	ldr	r2, [pc, #400]	; 4001c300 <CyU3PSetEpConfig+0x5f0>
4001c16c:	e0821101 	add	r1, r2, r1, lsl #2
4001c170:	e5810004 	str	r0, [r1, #4]
4001c174:	e0861086 	add	r1, r6, r6, lsl #1
4001c178:	e0821101 	add	r1, r2, r1, lsl #2
4001c17c:	e5810008 	str	r0, [r1, #8]
4001c180:	e1d500b8 	ldrh	r0, [r5, #8]
4001c184:	e0861086 	add	r1, r6, r6, lsl #1
4001c188:	e0821101 	add	r1, r2, r1, lsl #2
4001c18c:	e1c100b0 	strh	r0, [r1]
4001c190:	e59f016c 	ldr	r0, [pc, #364]	; 4001c304 <CyU3PSetEpConfig+0x5f4>
4001c194:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c198:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c19c:	e1800007 	orr	r0, r0, r7
4001c1a0:	e59f115c 	ldr	r1, [pc, #348]	; 4001c304 <CyU3PSetEpConfig+0x5f4>
4001c1a4:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1a8:	e5d50004 	ldrb	r0, [r5, #4]
4001c1ac:	e3500002 	cmp	r0, #2
4001c1b0:	1a00000e 	bne	4001c1f0 <CyU3PSetEpConfig+0x4e0>
4001c1b4:	e1d500b6 	ldrh	r0, [r5, #6]
4001c1b8:	e3500000 	cmp	r0, #0
4001c1bc:	da00000b 	ble	4001c1f0 <CyU3PSetEpConfig+0x4e0>
4001c1c0:	e3a02001 	mov	r2, #1
4001c1c4:	e1a01006 	mov	r1, r6
4001c1c8:	e1a00004 	mov	r0, r4
4001c1cc:	eb0002b3 	bl	4001cca0 <CyU3PUsbMapStream>
4001c1d0:	e59f0104 	ldr	r0, [pc, #260]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001c1d4:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c1d8:	e2861010 	add	r1, r6, #16
4001c1dc:	e3a02001 	mov	r2, #1
4001c1e0:	e1800112 	orr	r0, r0, r2, lsl r1
4001c1e4:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001c1e8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c1ec:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c2ec <CyU3PSetEpConfig+0x5dc>
4001c1f0:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c1f4:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c2f8 <CyU3PSetEpConfig+0x5e8>
4001c1f8:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c1fc:	e3890001 	orr	r0, r9, #1
4001c200:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c2fc <CyU3PSetEpConfig+0x5ec>
4001c204:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c208:	e2810040 	add	r0, r1, #64	; 0x40
4001c20c:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c210:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c2f0 <CyU3PSetEpConfig+0x5e0>
4001c214:	e5900000 	ldr	r0, [r0]
4001c218:	e3500000 	cmp	r0, #0
4001c21c:	0a000017 	beq	4001c280 <CyU3PSetEpConfig+0x570>
4001c220:	e2860010 	add	r0, r6, #16
4001c224:	e3a01001 	mov	r1, #1
4001c228:	e1a00011 	lsl	r0, r1, r0
4001c22c:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c2f4 <CyU3PSetEpConfig+0x5e4>
4001c230:	e5911000 	ldr	r1, [r1]
4001c234:	e1100001 	tst	r0, r1
4001c238:	0a000010 	beq	4001c280 <CyU3PSetEpConfig+0x570>
4001c23c:	e59f009c 	ldr	r0, [pc, #156]	; 4001c2e0 <CyU3PSetEpConfig+0x5d0>
4001c240:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c244:	e2861010 	add	r1, r6, #16
4001c248:	e3a02001 	mov	r2, #1
4001c24c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c250:	e59f1088 	ldr	r1, [pc, #136]	; 4001c2e0 <CyU3PSetEpConfig+0x5d0>
4001c254:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c258:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c25c:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c260:	e2861010 	add	r1, r6, #16
4001c264:	e1800112 	orr	r0, r0, r2, lsl r1
4001c268:	e59f106c 	ldr	r1, [pc, #108]	; 4001c2dc <CyU3PSetEpConfig+0x5cc>
4001c26c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c270:	e59f0078 	ldr	r0, [pc, #120]	; 4001c2f0 <CyU3PSetEpConfig+0x5e0>
4001c274:	e5901000 	ldr	r1, [r0]
4001c278:	e1a00004 	mov	r0, r4
4001c27c:	eb00014f 	bl	4001c7c0 <CyU3PUsbEnableEpInterrupts>
4001c280:	e59f0038 	ldr	r0, [pc, #56]	; 4001c2c0 <CyU3PSetEpConfig+0x5b0>
4001c284:	e5d00008 	ldrb	r0, [r0, #8]
4001c288:	e3500005 	cmp	r0, #5
4001c28c:	ba000007 	blt	4001c2b0 <CyU3PSetEpConfig+0x5a0>
4001c290:	e1a00004 	mov	r0, r4
4001c294:	eb00040e 	bl	4001d2d4 <CyU3PUsbResetEp>
4001c298:	e1a00004 	mov	r0, r4
4001c29c:	eb0001a4 	bl	4001c934 <CyU3PUsbFlushEp>
4001c2a0:	e3a02001 	mov	r2, #1
4001c2a4:	e3a01000 	mov	r1, #0
4001c2a8:	e1a00004 	mov	r0, r4
4001c2ac:	eb00066c 	bl	4001dc64 <CyU3PUsbStall>
4001c2b0:	e59f0014 	ldr	r0, [pc, #20]	; 4001c2cc <CyU3PSetEpConfig+0x5bc>
4001c2b4:	ebffb787 	bl	4000a0d8 <_txe_mutex_put>
4001c2b8:	e3a00000 	mov	r0, #0
4001c2bc:	eafffea0 	b	4001bd44 <CyU3PSetEpConfig+0x34>
4001c2c0:	40031d40 	.word	0x40031d40
4001c2c4:	40011dcc 	.word	0x40011dcc
4001c2c8:	000003ff 	.word	0x000003ff
4001c2cc:	40031ee0 	.word	0x40031ee0
4001c2d0:	00004040 	.word	0x00004040
4001c2d4:	e0031418 	.word	0xe0031418
4001c2d8:	e0033500 	.word	0xe0033500
4001c2dc:	e0033000 	.word	0xe0033000
4001c2e0:	e0031000 	.word	0xe0031000
4001c2e4:	40031bb8 	.word	0x40031bb8
4001c2e8:	e0031c40 	.word	0xe0031c40
4001c2ec:	00400028 	.word	0x00400028
4001c2f0:	40030d7c 	.word	0x40030d7c
4001c2f4:	40030d80 	.word	0x40030d80
4001c2f8:	e0031498 	.word	0xe0031498
4001c2fc:	e0033600 	.word	0xe0033600
4001c300:	40031c78 	.word	0x40031c78
4001c304:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c308 <CyU3PSetUsbCoreClock>:
4001c308:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c30c:	e1a04000 	mov	r4, r0
4001c310:	e1a05001 	mov	r5, r1
4001c314:	eb0016d5 	bl	40021e70 <CyU3PVicDisableAllInterrupts>
4001c318:	e1a06000 	mov	r6, r0
4001c31c:	e59f0064 	ldr	r0, [pc, #100]	; 4001c388 <CyU3PSetUsbCoreClock+0x80>
4001c320:	e5900008 	ldr	r0, [r0, #8]
4001c324:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c328:	e59f1058 	ldr	r1, [pc, #88]	; 4001c388 <CyU3PSetUsbCoreClock+0x80>
4001c32c:	e5810008 	str	r0, [r1, #8]
4001c330:	e3a07014 	mov	r7, #20
4001c334:	ea000001 	b	4001c340 <CyU3PSetUsbCoreClock+0x38>
4001c338:	e1a00000 	nop			; (mov r0, r0)
4001c33c:	e2477001 	sub	r7, r7, #1
4001c340:	e3570000 	cmp	r7, #0
4001c344:	1afffffb 	bne	4001c338 <CyU3PSetUsbCoreClock+0x30>
4001c348:	e1850104 	orr	r0, r5, r4, lsl #2
4001c34c:	e59f1034 	ldr	r1, [pc, #52]	; 4001c388 <CyU3PSetUsbCoreClock+0x80>
4001c350:	e5810008 	str	r0, [r1, #8]
4001c354:	e1a00001 	mov	r0, r1
4001c358:	e5900008 	ldr	r0, [r0, #8]
4001c35c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c360:	e5810008 	str	r0, [r1, #8]
4001c364:	e3a07050 	mov	r7, #80	; 0x50
4001c368:	ea000001 	b	4001c374 <CyU3PSetUsbCoreClock+0x6c>
4001c36c:	e1a00000 	nop			; (mov r0, r0)
4001c370:	e2477001 	sub	r7, r7, #1
4001c374:	e3570000 	cmp	r7, #0
4001c378:	1afffffb 	bne	4001c36c <CyU3PSetUsbCoreClock+0x64>
4001c37c:	e1a00006 	mov	r0, r6
4001c380:	eb0016c8 	bl	40021ea8 <CyU3PVicEnableInterrupts>
4001c384:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c388:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c38c <CyU3PUibInit>:
4001c38c:	e92d4010 	push	{r4, lr}
4001c390:	e3a04000 	mov	r4, #0
4001c394:	e3a00000 	mov	r0, #0
4001c398:	e59f117c 	ldr	r1, [pc, #380]	; 4001c51c <CyU3PUibInit+0x190>
4001c39c:	e5810004 	str	r0, [r1, #4]
4001c3a0:	e5810008 	str	r0, [r1, #8]
4001c3a4:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c3a8:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c3ac:	e581001c 	str	r0, [r1, #28]
4001c3b0:	e3e00000 	mvn	r0, #0
4001c3b4:	e581000c 	str	r0, [r1, #12]
4001c3b8:	e5810004 	str	r0, [r1, #4]
4001c3bc:	e59f015c 	ldr	r0, [pc, #348]	; 4001c520 <CyU3PUibInit+0x194>
4001c3c0:	e5810008 	str	r0, [r1, #8]
4001c3c4:	e3a00000 	mov	r0, #0
4001c3c8:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c3cc:	e3e00000 	mvn	r0, #0
4001c3d0:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c3d4:	e59f0148 	ldr	r0, [pc, #328]	; 4001c524 <CyU3PUibInit+0x198>
4001c3d8:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c3dc:	eb0016c5 	bl	40021ef8 <CyFx3Usb2PhySetup>
4001c3e0:	e3e00000 	mvn	r0, #0
4001c3e4:	e59f113c 	ldr	r1, [pc, #316]	; 4001c528 <CyU3PUibInit+0x19c>
4001c3e8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c3ec:	e59f0138 	ldr	r0, [pc, #312]	; 4001c52c <CyU3PUibInit+0x1a0>
4001c3f0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c3f4:	e3e00000 	mvn	r0, #0
4001c3f8:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c3fc:	e3a00000 	mov	r0, #0
4001c400:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c404:	e3a00001 	mov	r0, #1
4001c408:	e1811680 	orr	r1, r1, r0, lsl #13
4001c40c:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c410:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c414:	e3a00043 	mov	r0, #67	; 0x43
4001c418:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c41c:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c420:	e59f0108 	ldr	r0, [pc, #264]	; 4001c530 <CyU3PUibInit+0x1a4>
4001c424:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c428:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c42c:	e3a00040 	mov	r0, #64	; 0x40
4001c430:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c434:	e1800400 	orr	r0, r0, r0, lsl #8
4001c438:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c43c:	e3a00040 	mov	r0, #64	; 0x40
4001c440:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c444:	e3a04001 	mov	r4, #1
4001c448:	ea000015 	b	4001c4a4 <CyU3PUibInit+0x118>
4001c44c:	e1a00004 	mov	r0, r4
4001c450:	eb000137 	bl	4001c934 <CyU3PUsbFlushEp>
4001c454:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c534 <CyU3PUibInit+0x1a8>
4001c458:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c45c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c460:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c534 <CyU3PUibInit+0x1a8>
4001c464:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c468:	e3a00000 	mov	r0, #0
4001c46c:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c538 <CyU3PUibInit+0x1ac>
4001c470:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c474:	e3840080 	orr	r0, r4, #128	; 0x80
4001c478:	eb00012d 	bl	4001c934 <CyU3PUsbFlushEp>
4001c47c:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c53c <CyU3PUibInit+0x1b0>
4001c480:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c484:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c488:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c53c <CyU3PUibInit+0x1b0>
4001c48c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c490:	e3a00000 	mov	r0, #0
4001c494:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c540 <CyU3PUibInit+0x1b4>
4001c498:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c49c:	e2840001 	add	r0, r4, #1
4001c4a0:	e20040ff 	and	r4, r0, #255	; 0xff
4001c4a4:	e3540010 	cmp	r4, #16
4001c4a8:	baffffe7 	blt	4001c44c <CyU3PUibInit+0xc0>
4001c4ac:	e59f0090 	ldr	r0, [pc, #144]	; 4001c544 <CyU3PUibInit+0x1b8>
4001c4b0:	e5900004 	ldr	r0, [r0, #4]
4001c4b4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c4b8:	e59f1084 	ldr	r1, [pc, #132]	; 4001c544 <CyU3PUibInit+0x1b8>
4001c4bc:	e5810004 	str	r0, [r1, #4]
4001c4c0:	e3e00000 	mvn	r0, #0
4001c4c4:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c4c8:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c4cc:	e3a00b01 	mov	r0, #1024	; 0x400
4001c4d0:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c4d4:	e59f106c 	ldr	r1, [pc, #108]	; 4001c548 <CyU3PUibInit+0x1bc>
4001c4d8:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c4dc:	e3a00015 	mov	r0, #21
4001c4e0:	eb00166b 	bl	40021e94 <CyU3PVicEnableInt>
4001c4e4:	e59f0060 	ldr	r0, [pc, #96]	; 4001c54c <CyU3PUibInit+0x1c0>
4001c4e8:	e5900000 	ldr	r0, [r0]
4001c4ec:	e3500000 	cmp	r0, #0
4001c4f0:	0a000008 	beq	4001c518 <CyU3PUibInit+0x18c>
4001c4f4:	e59f0054 	ldr	r0, [pc, #84]	; 4001c550 <CyU3PUibInit+0x1c4>
4001c4f8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c4fc:	e3100b01 	tst	r0, #1024	; 0x400
4001c500:	0a000004 	beq	4001c518 <CyU3PUibInit+0x18c>
4001c504:	e3a01000 	mov	r1, #0
4001c508:	e3a0000b 	mov	r0, #11
4001c50c:	e59f2038 	ldr	r2, [pc, #56]	; 4001c54c <CyU3PUibInit+0x1c0>
4001c510:	e5922000 	ldr	r2, [r2]
4001c514:	e12fff32 	blx	r2
4001c518:	e8bd8010 	pop	{r4, pc}
4001c51c:	e0050000 	.word	0xe0050000
4001c520:	00038081 	.word	0x00038081
4001c524:	00004a3d 	.word	0x00004a3d
4001c528:	e0031000 	.word	0xe0031000
4001c52c:	0000095c 	.word	0x0000095c
4001c530:	00004040 	.word	0x00004040
4001c534:	e0031498 	.word	0xe0031498
4001c538:	e0033600 	.word	0xe0033600
4001c53c:	e0031418 	.word	0xe0031418
4001c540:	e0033500 	.word	0xe0033500
4001c544:	e0030000 	.word	0xe0030000
4001c548:	40031d40 	.word	0x40031d40
4001c54c:	40030d9c 	.word	0x40030d9c
4001c550:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c554 <CyU3PUsbAckSetup>:
4001c554:	e92d4010 	push	{r4, lr}
4001c558:	e3e01000 	mvn	r1, #0
4001c55c:	e59f00fc 	ldr	r0, [pc, #252]	; 4001c660 <CyU3PUsbAckSetup+0x10c>
4001c560:	ebffb6a7 	bl	4000a004 <_txe_mutex_get>
4001c564:	eb000780 	bl	4001e36c <GetUsbLinkActive>
4001c568:	eb00019e 	bl	4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c56c:	e3500000 	cmp	r0, #0
4001c570:	0a000002 	beq	4001c580 <CyU3PUsbAckSetup+0x2c>
4001c574:	e59f00e4 	ldr	r0, [pc, #228]	; 4001c660 <CyU3PUsbAckSetup+0x10c>
4001c578:	ebffb6d6 	bl	4000a0d8 <_txe_mutex_put>
4001c57c:	e8bd8010 	pop	{r4, pc}
4001c580:	e3a00000 	mov	r0, #0
4001c584:	e59f10d8 	ldr	r1, [pc, #216]	; 4001c664 <CyU3PUsbAckSetup+0x110>
4001c588:	e5810014 	str	r0, [r1, #20]
4001c58c:	e2810000 	add	r0, r1, #0
4001c590:	e5d00009 	ldrb	r0, [r0, #9]
4001c594:	e3500003 	cmp	r0, #3
4001c598:	1a000026 	bne	4001c638 <CyU3PUsbAckSetup+0xe4>
4001c59c:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c668 <CyU3PUsbAckSetup+0x114>
4001c5a0:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c5a4:	e3c00004 	bic	r0, r0, #4
4001c5a8:	e59f10b8 	ldr	r1, [pc, #184]	; 4001c668 <CyU3PUsbAckSetup+0x114>
4001c5ac:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c5b0:	e1a00001 	mov	r0, r1
4001c5b4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c5b8:	e3c00004 	bic	r0, r0, #4
4001c5bc:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c5c0:	eb00162a 	bl	40021e70 <CyU3PVicDisableAllInterrupts>
4001c5c4:	e1a04000 	mov	r4, r0
4001c5c8:	e3a00001 	mov	r0, #1
4001c5cc:	ebffdbad 	bl	40013488 <CyU3PBusyWait>
4001c5d0:	e59f0090 	ldr	r0, [pc, #144]	; 4001c668 <CyU3PUsbAckSetup+0x114>
4001c5d4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c5d8:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001c5dc:	e59f1084 	ldr	r1, [pc, #132]	; 4001c668 <CyU3PUsbAckSetup+0x114>
4001c5e0:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c5e4:	e1a00004 	mov	r0, r4
4001c5e8:	eb00162e 	bl	40021ea8 <CyU3PVicEnableInterrupts>
4001c5ec:	e3a00c02 	mov	r0, #512	; 0x200
4001c5f0:	e59f1074 	ldr	r1, [pc, #116]	; 4001c66c <CyU3PUsbAckSetup+0x118>
4001c5f4:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c5f8:	e3a00016 	mov	r0, #22
4001c5fc:	eb000ced 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
4001c600:	e59f005c 	ldr	r0, [pc, #92]	; 4001c664 <CyU3PUsbAckSetup+0x110>
4001c604:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001c608:	e3500000 	cmp	r0, #0
4001c60c:	1a000010 	bne	4001c654 <CyU3PUsbAckSetup+0x100>
4001c610:	e3a00001 	mov	r0, #1
4001c614:	e59f1054 	ldr	r1, [pc, #84]	; 4001c670 <CyU3PUsbAckSetup+0x11c>
4001c618:	e5810000 	str	r0, [r1]
4001c61c:	e3a02000 	mov	r2, #0
4001c620:	e3a01064 	mov	r1, #100	; 0x64
4001c624:	e59f0048 	ldr	r0, [pc, #72]	; 4001c674 <CyU3PUsbAckSetup+0x120>
4001c628:	ebffb8c3 	bl	4000a93c <_txe_timer_change>
4001c62c:	e59f0040 	ldr	r0, [pc, #64]	; 4001c674 <CyU3PUsbAckSetup+0x120>
4001c630:	ebffb8b1 	bl	4000a8fc <_txe_timer_activate>
4001c634:	ea000006 	b	4001c654 <CyU3PUsbAckSetup+0x100>
4001c638:	e59f002c 	ldr	r0, [pc, #44]	; 4001c66c <CyU3PUsbAckSetup+0x118>
4001c63c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001c640:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001c644:	e59f1020 	ldr	r1, [pc, #32]	; 4001c66c <CyU3PUsbAckSetup+0x118>
4001c648:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001c64c:	e3a00040 	mov	r0, #64	; 0x40
4001c650:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c654:	e59f0004 	ldr	r0, [pc, #4]	; 4001c660 <CyU3PUsbAckSetup+0x10c>
4001c658:	ebffb69e 	bl	4000a0d8 <_txe_mutex_put>
4001c65c:	eaffffc6 	b	4001c57c <CyU3PUsbAckSetup+0x28>
4001c660:	40031ee0 	.word	0x40031ee0
4001c664:	40031d40 	.word	0x40031d40
4001c668:	e0033000 	.word	0xe0033000
4001c66c:	e0031000 	.word	0xe0031000
4001c670:	40030db0 	.word	0x40030db0
4001c674:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001c678 <CyU3PUsbCreateDmaChannels>:
4001c678:	e92d4010 	push	{r4, lr}
4001c67c:	e24dd020 	sub	sp, sp, #32
4001c680:	e3a00c02 	mov	r0, #512	; 0x200
4001c684:	e1cd00b4 	strh	r0, [sp, #4]
4001c688:	e3a00001 	mov	r0, #1
4001c68c:	e1cd00b6 	strh	r0, [sp, #6]
4001c690:	e3a00000 	mov	r0, #0
4001c694:	e1cd00bc 	strh	r0, [sp, #12]
4001c698:	e3a00c03 	mov	r0, #768	; 0x300
4001c69c:	e1cd00ba 	strh	r0, [sp, #10]
4001c6a0:	e3a00000 	mov	r0, #0
4001c6a4:	e5cd0014 	strb	r0, [sp, #20]
4001c6a8:	e1cd00be 	strh	r0, [sp, #14]
4001c6ac:	e1cd01b0 	strh	r0, [sp, #16]
4001c6b0:	e1cd01b2 	strh	r0, [sp, #18]
4001c6b4:	e58d0018 	str	r0, [sp, #24]
4001c6b8:	e58d001c 	str	r0, [sp, #28]
4001c6bc:	e59f00ec 	ldr	r0, [pc, #236]	; 4001c7b0 <CyU3PUsbCreateDmaChannels+0x138>
4001c6c0:	e1cd00b8 	strh	r0, [sp, #8]
4001c6c4:	e28d2004 	add	r2, sp, #4
4001c6c8:	e3a01004 	mov	r1, #4
4001c6cc:	e59f00e0 	ldr	r0, [pc, #224]	; 4001c7b4 <CyU3PUsbCreateDmaChannels+0x13c>
4001c6d0:	ebffe411 	bl	4001571c <CyU3PDmaChannelCreate>
4001c6d4:	e1a04000 	mov	r4, r0
4001c6d8:	e3540000 	cmp	r4, #0
4001c6dc:	0a000002 	beq	4001c6ec <CyU3PUsbCreateDmaChannels+0x74>
4001c6e0:	e3a0004e 	mov	r0, #78	; 0x4e
4001c6e4:	e28dd020 	add	sp, sp, #32
4001c6e8:	e8bd8010 	pop	{r4, pc}
4001c6ec:	e59f00c4 	ldr	r0, [pc, #196]	; 4001c7b8 <CyU3PUsbCreateDmaChannels+0x140>
4001c6f0:	e5900000 	ldr	r0, [r0]
4001c6f4:	e3500000 	cmp	r0, #0
4001c6f8:	0a000009 	beq	4001c724 <CyU3PUsbCreateDmaChannels+0xac>
4001c6fc:	e3a01001 	mov	r1, #1
4001c700:	e59f00ac 	ldr	r0, [pc, #172]	; 4001c7b4 <CyU3PUsbCreateDmaChannels+0x13c>
4001c704:	ebffe274 	bl	400150dc <CyU3PDmaChannelCacheControl>
4001c708:	e1a04000 	mov	r4, r0
4001c70c:	e3540000 	cmp	r4, #0
4001c710:	0a000003 	beq	4001c724 <CyU3PUsbCreateDmaChannels+0xac>
4001c714:	e59f0098 	ldr	r0, [pc, #152]	; 4001c7b4 <CyU3PUsbCreateDmaChannels+0x13c>
4001c718:	ebffe4f9 	bl	40015b04 <CyU3PDmaChannelDestroy>
4001c71c:	e3a0004e 	mov	r0, #78	; 0x4e
4001c720:	eaffffef 	b	4001c6e4 <CyU3PUsbCreateDmaChannels+0x6c>
4001c724:	e3a00b01 	mov	r0, #1024	; 0x400
4001c728:	e1cd00b8 	strh	r0, [sp, #8]
4001c72c:	e3a00000 	mov	r0, #0
4001c730:	e58d001c 	str	r0, [sp, #28]
4001c734:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001c738:	e1cd00ba 	strh	r0, [sp, #10]
4001c73c:	e28d2004 	add	r2, sp, #4
4001c740:	e3a01003 	mov	r1, #3
4001c744:	e59f0070 	ldr	r0, [pc, #112]	; 4001c7bc <CyU3PUsbCreateDmaChannels+0x144>
4001c748:	ebffe3f3 	bl	4001571c <CyU3PDmaChannelCreate>
4001c74c:	e1a04000 	mov	r4, r0
4001c750:	e3540000 	cmp	r4, #0
4001c754:	0a000003 	beq	4001c768 <CyU3PUsbCreateDmaChannels+0xf0>
4001c758:	e59f0054 	ldr	r0, [pc, #84]	; 4001c7b4 <CyU3PUsbCreateDmaChannels+0x13c>
4001c75c:	ebffe4e8 	bl	40015b04 <CyU3PDmaChannelDestroy>
4001c760:	e3a0004e 	mov	r0, #78	; 0x4e
4001c764:	eaffffde 	b	4001c6e4 <CyU3PUsbCreateDmaChannels+0x6c>
4001c768:	e59f0048 	ldr	r0, [pc, #72]	; 4001c7b8 <CyU3PUsbCreateDmaChannels+0x140>
4001c76c:	e5900000 	ldr	r0, [r0]
4001c770:	e3500000 	cmp	r0, #0
4001c774:	0a00000b 	beq	4001c7a8 <CyU3PUsbCreateDmaChannels+0x130>
4001c778:	e3a01001 	mov	r1, #1
4001c77c:	e59f0038 	ldr	r0, [pc, #56]	; 4001c7bc <CyU3PUsbCreateDmaChannels+0x144>
4001c780:	ebffe255 	bl	400150dc <CyU3PDmaChannelCacheControl>
4001c784:	e1a04000 	mov	r4, r0
4001c788:	e3540000 	cmp	r4, #0
4001c78c:	0a000005 	beq	4001c7a8 <CyU3PUsbCreateDmaChannels+0x130>
4001c790:	e59f001c 	ldr	r0, [pc, #28]	; 4001c7b4 <CyU3PUsbCreateDmaChannels+0x13c>
4001c794:	ebffe4da 	bl	40015b04 <CyU3PDmaChannelDestroy>
4001c798:	e59f001c 	ldr	r0, [pc, #28]	; 4001c7bc <CyU3PUsbCreateDmaChannels+0x144>
4001c79c:	ebffe4d8 	bl	40015b04 <CyU3PDmaChannelDestroy>
4001c7a0:	e3a0004e 	mov	r0, #78	; 0x4e
4001c7a4:	eaffffce 	b	4001c6e4 <CyU3PUsbCreateDmaChannels+0x6c>
4001c7a8:	e1a00004 	mov	r0, r4
4001c7ac:	eaffffcc 	b	4001c6e4 <CyU3PUsbCreateDmaChannels+0x6c>
4001c7b0:	00003f01 	.word	0x00003f01
4001c7b4:	40031a78 	.word	0x40031a78
4001c7b8:	40030c60 	.word	0x40030c60
4001c7bc:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001c7c0 <CyU3PUsbEnableEpInterrupts>:
4001c7c0:	e200300f 	and	r3, r0, #15
4001c7c4:	e3100080 	tst	r0, #128	; 0x80
4001c7c8:	0a00002a 	beq	4001c878 <CyU3PUsbEnableEpInterrupts+0xb8>
4001c7cc:	e59fc150 	ldr	ip, [pc, #336]	; 4001c924 <CyU3PUsbEnableEpInterrupts+0x164>
4001c7d0:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c7d4:	e3120901 	tst	r2, #16384	; 0x4000
4001c7d8:	0a00000d 	beq	4001c814 <CyU3PUsbEnableEpInterrupts+0x54>
4001c7dc:	e3110001 	tst	r1, #1
4001c7e0:	0a000000 	beq	4001c7e8 <CyU3PUsbEnableEpInterrupts+0x28>
4001c7e4:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c7e8:	e3110002 	tst	r1, #2
4001c7ec:	0a000000 	beq	4001c7f4 <CyU3PUsbEnableEpInterrupts+0x34>
4001c7f0:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c7f4:	e3110004 	tst	r1, #4
4001c7f8:	0a000000 	beq	4001c800 <CyU3PUsbEnableEpInterrupts+0x40>
4001c7fc:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c800:	e3110008 	tst	r1, #8
4001c804:	0a000000 	beq	4001c80c <CyU3PUsbEnableEpInterrupts+0x4c>
4001c808:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c80c:	e59fc110 	ldr	ip, [pc, #272]	; 4001c924 <CyU3PUsbEnableEpInterrupts+0x164>
4001c810:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c814:	e59fc10c 	ldr	ip, [pc, #268]	; 4001c928 <CyU3PUsbEnableEpInterrupts+0x168>
4001c818:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c81c:	e3120001 	tst	r2, #1
4001c820:	0a00003e 	beq	4001c920 <CyU3PUsbEnableEpInterrupts+0x160>
4001c824:	e3110001 	tst	r1, #1
4001c828:	0a000000 	beq	4001c830 <CyU3PUsbEnableEpInterrupts+0x70>
4001c82c:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c830:	e3110002 	tst	r1, #2
4001c834:	0a000000 	beq	4001c83c <CyU3PUsbEnableEpInterrupts+0x7c>
4001c838:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c83c:	e3110004 	tst	r1, #4
4001c840:	0a000000 	beq	4001c848 <CyU3PUsbEnableEpInterrupts+0x88>
4001c844:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c848:	e3110010 	tst	r1, #16
4001c84c:	0a000000 	beq	4001c854 <CyU3PUsbEnableEpInterrupts+0x94>
4001c850:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c854:	e3110020 	tst	r1, #32
4001c858:	0a000000 	beq	4001c860 <CyU3PUsbEnableEpInterrupts+0xa0>
4001c85c:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c860:	e3110040 	tst	r1, #64	; 0x40
4001c864:	0a000000 	beq	4001c86c <CyU3PUsbEnableEpInterrupts+0xac>
4001c868:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c86c:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001c928 <CyU3PUsbEnableEpInterrupts+0x168>
4001c870:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c874:	ea000029 	b	4001c920 <CyU3PUsbEnableEpInterrupts+0x160>
4001c878:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001c92c <CyU3PUsbEnableEpInterrupts+0x16c>
4001c87c:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c880:	e3120901 	tst	r2, #16384	; 0x4000
4001c884:	0a00000d 	beq	4001c8c0 <CyU3PUsbEnableEpInterrupts+0x100>
4001c888:	e3110001 	tst	r1, #1
4001c88c:	0a000000 	beq	4001c894 <CyU3PUsbEnableEpInterrupts+0xd4>
4001c890:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001c894:	e3110002 	tst	r1, #2
4001c898:	0a000000 	beq	4001c8a0 <CyU3PUsbEnableEpInterrupts+0xe0>
4001c89c:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001c8a0:	e3110004 	tst	r1, #4
4001c8a4:	0a000000 	beq	4001c8ac <CyU3PUsbEnableEpInterrupts+0xec>
4001c8a8:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001c8ac:	e3110008 	tst	r1, #8
4001c8b0:	0a000000 	beq	4001c8b8 <CyU3PUsbEnableEpInterrupts+0xf8>
4001c8b4:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001c8b8:	e59fc06c 	ldr	ip, [pc, #108]	; 4001c92c <CyU3PUsbEnableEpInterrupts+0x16c>
4001c8bc:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c8c0:	e59fc068 	ldr	ip, [pc, #104]	; 4001c930 <CyU3PUsbEnableEpInterrupts+0x170>
4001c8c4:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001c8c8:	e3120001 	tst	r2, #1
4001c8cc:	0a000013 	beq	4001c920 <CyU3PUsbEnableEpInterrupts+0x160>
4001c8d0:	e3110001 	tst	r1, #1
4001c8d4:	0a000000 	beq	4001c8dc <CyU3PUsbEnableEpInterrupts+0x11c>
4001c8d8:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001c8dc:	e3110002 	tst	r1, #2
4001c8e0:	0a000000 	beq	4001c8e8 <CyU3PUsbEnableEpInterrupts+0x128>
4001c8e4:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001c8e8:	e3110004 	tst	r1, #4
4001c8ec:	0a000000 	beq	4001c8f4 <CyU3PUsbEnableEpInterrupts+0x134>
4001c8f0:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001c8f4:	e3110010 	tst	r1, #16
4001c8f8:	0a000000 	beq	4001c900 <CyU3PUsbEnableEpInterrupts+0x140>
4001c8fc:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001c900:	e3110020 	tst	r1, #32
4001c904:	0a000000 	beq	4001c90c <CyU3PUsbEnableEpInterrupts+0x14c>
4001c908:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001c90c:	e3110040 	tst	r1, #64	; 0x40
4001c910:	0a000000 	beq	4001c918 <CyU3PUsbEnableEpInterrupts+0x158>
4001c914:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001c918:	e59fc010 	ldr	ip, [pc, #16]	; 4001c930 <CyU3PUsbEnableEpInterrupts+0x170>
4001c91c:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001c920:	e12fff1e 	bx	lr
4001c924:	e0031418 	.word	0xe0031418
4001c928:	e0033500 	.word	0xe0033500
4001c92c:	e0031498 	.word	0xe0031498
4001c930:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001c934 <CyU3PUsbFlushEp>:
4001c934:	e92d4070 	push	{r4, r5, r6, lr}
4001c938:	e1a04000 	mov	r4, r0
4001c93c:	e204507f 	and	r5, r4, #127	; 0x7f
4001c940:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c9f0 <CyU3PUsbFlushEp+0xbc>
4001c944:	e5d00008 	ldrb	r0, [r0, #8]
4001c948:	e3500000 	cmp	r0, #0
4001c94c:	1a000001 	bne	4001c958 <CyU3PUsbFlushEp+0x24>
4001c950:	e3a00042 	mov	r0, #66	; 0x42
4001c954:	e8bd8070 	pop	{r4, r5, r6, pc}
4001c958:	e355000f 	cmp	r5, #15
4001c95c:	da000001 	ble	4001c968 <CyU3PUsbFlushEp+0x34>
4001c960:	e3a00040 	mov	r0, #64	; 0x40
4001c964:	eafffffa 	b	4001c954 <CyU3PUsbFlushEp+0x20>
4001c968:	e3e01000 	mvn	r1, #0
4001c96c:	e59f0080 	ldr	r0, [pc, #128]	; 4001c9f4 <CyU3PUsbFlushEp+0xc0>
4001c970:	ebffb5a3 	bl	4000a004 <_txe_mutex_get>
4001c974:	e3140080 	tst	r4, #128	; 0x80
4001c978:	0a00000c 	beq	4001c9b0 <CyU3PUsbFlushEp+0x7c>
4001c97c:	e59f0074 	ldr	r0, [pc, #116]	; 4001c9f8 <CyU3PUsbFlushEp+0xc4>
4001c980:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c984:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c988:	e59f1068 	ldr	r1, [pc, #104]	; 4001c9f8 <CyU3PUsbFlushEp+0xc4>
4001c98c:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c990:	e3a0000a 	mov	r0, #10
4001c994:	ebffdabb 	bl	40013488 <CyU3PBusyWait>
4001c998:	e59f0058 	ldr	r0, [pc, #88]	; 4001c9f8 <CyU3PUsbFlushEp+0xc4>
4001c99c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c9a0:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c9a4:	e59f104c 	ldr	r1, [pc, #76]	; 4001c9f8 <CyU3PUsbFlushEp+0xc4>
4001c9a8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c9ac:	ea00000b 	b	4001c9e0 <CyU3PUsbFlushEp+0xac>
4001c9b0:	e59f0044 	ldr	r0, [pc, #68]	; 4001c9fc <CyU3PUsbFlushEp+0xc8>
4001c9b4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c9b8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c9bc:	e59f1038 	ldr	r1, [pc, #56]	; 4001c9fc <CyU3PUsbFlushEp+0xc8>
4001c9c0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c9c4:	e3a0000a 	mov	r0, #10
4001c9c8:	ebffdaae 	bl	40013488 <CyU3PBusyWait>
4001c9cc:	e59f0028 	ldr	r0, [pc, #40]	; 4001c9fc <CyU3PUsbFlushEp+0xc8>
4001c9d0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001c9d4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c9d8:	e59f101c 	ldr	r1, [pc, #28]	; 4001c9fc <CyU3PUsbFlushEp+0xc8>
4001c9dc:	e7810105 	str	r0, [r1, r5, lsl #2]
4001c9e0:	e59f000c 	ldr	r0, [pc, #12]	; 4001c9f4 <CyU3PUsbFlushEp+0xc0>
4001c9e4:	ebffb5bb 	bl	4000a0d8 <_txe_mutex_put>
4001c9e8:	e3a00000 	mov	r0, #0
4001c9ec:	eaffffd8 	b	4001c954 <CyU3PUsbFlushEp+0x20>
4001c9f0:	40031d40 	.word	0x40031d40
4001c9f4:	40031ee0 	.word	0x40031ee0
4001c9f8:	e0031c40 	.word	0xe0031c40
4001c9fc:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001ca00 <CyU3PUsbGetEP0Data>:
4001ca00:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001ca04:	e1a04000 	mov	r4, r0
4001ca08:	e1a05001 	mov	r5, r1
4001ca0c:	e1a06002 	mov	r6, r2
4001ca10:	e59f8198 	ldr	r8, [pc, #408]	; 4001cbb0 <CyU3PUsbGetEP0Data+0x1b0>
4001ca14:	e59f0198 	ldr	r0, [pc, #408]	; 4001cbb4 <CyU3PUsbGetEP0Data+0x1b4>
4001ca18:	e5d00008 	ldrb	r0, [r0, #8]
4001ca1c:	e3500000 	cmp	r0, #0
4001ca20:	1a000001 	bne	4001ca2c <CyU3PUsbGetEP0Data+0x2c>
4001ca24:	e3a00042 	mov	r0, #66	; 0x42
4001ca28:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001ca2c:	e3550000 	cmp	r5, #0
4001ca30:	1a000001 	bne	4001ca3c <CyU3PUsbGetEP0Data+0x3c>
4001ca34:	e3a00040 	mov	r0, #64	; 0x40
4001ca38:	eafffffa 	b	4001ca28 <CyU3PUsbGetEP0Data+0x28>
4001ca3c:	e3e01000 	mvn	r1, #0
4001ca40:	e59f0170 	ldr	r0, [pc, #368]	; 4001cbb8 <CyU3PUsbGetEP0Data+0x1b8>
4001ca44:	ebffb56e 	bl	4000a004 <_txe_mutex_get>
4001ca48:	e284000f 	add	r0, r4, #15
4001ca4c:	e59f1168 	ldr	r1, [pc, #360]	; 4001cbbc <CyU3PUsbGetEP0Data+0x1bc>
4001ca50:	e0004001 	and	r4, r0, r1
4001ca54:	e59f0164 	ldr	r0, [pc, #356]	; 4001cbc0 <CyU3PUsbGetEP0Data+0x1c0>
4001ca58:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca5c:	e3c00008 	bic	r0, r0, #8
4001ca60:	e59f1158 	ldr	r1, [pc, #344]	; 4001cbc0 <CyU3PUsbGetEP0Data+0x1c0>
4001ca64:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca68:	e59f0144 	ldr	r0, [pc, #324]	; 4001cbb4 <CyU3PUsbGetEP0Data+0x1b4>
4001ca6c:	e5900018 	ldr	r0, [r0, #24]
4001ca70:	e3500000 	cmp	r0, #0
4001ca74:	1a000002 	bne	4001ca84 <CyU3PUsbGetEP0Data+0x84>
4001ca78:	eb00005a 	bl	4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd>
4001ca7c:	e3500000 	cmp	r0, #0
4001ca80:	0a000008 	beq	4001caa8 <CyU3PUsbGetEP0Data+0xa8>
4001ca84:	e59f0134 	ldr	r0, [pc, #308]	; 4001cbc0 <CyU3PUsbGetEP0Data+0x1c0>
4001ca88:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ca8c:	e3800008 	orr	r0, r0, #8
4001ca90:	e59f1128 	ldr	r1, [pc, #296]	; 4001cbc0 <CyU3PUsbGetEP0Data+0x1c0>
4001ca94:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ca98:	e59f0118 	ldr	r0, [pc, #280]	; 4001cbb8 <CyU3PUsbGetEP0Data+0x1b8>
4001ca9c:	ebffb58d 	bl	4000a0d8 <_txe_mutex_put>
4001caa0:	e3a00051 	mov	r0, #81	; 0x51
4001caa4:	eaffffdf 	b	4001ca28 <CyU3PUsbGetEP0Data+0x28>
4001caa8:	e59f0110 	ldr	r0, [pc, #272]	; 4001cbc0 <CyU3PUsbGetEP0Data+0x1c0>
4001caac:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cab0:	e3800008 	orr	r0, r0, #8
4001cab4:	e59f1104 	ldr	r1, [pc, #260]	; 4001cbc0 <CyU3PUsbGetEP0Data+0x1c0>
4001cab8:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cabc:	eb00062a 	bl	4001e36c <GetUsbLinkActive>
4001cac0:	e1cd40b6 	strh	r4, [sp, #6]
4001cac4:	e58d5000 	str	r5, [sp]
4001cac8:	e3a00000 	mov	r0, #0
4001cacc:	e1cd00b8 	strh	r0, [sp, #8]
4001cad0:	e1a0100d 	mov	r1, sp
4001cad4:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cbc4 <CyU3PUsbGetEP0Data+0x1c4>
4001cad8:	ebffe75f 	bl	4001685c <CyU3PDmaChannelSetupRecvBuffer>
4001cadc:	e20070ff 	and	r7, r0, #255	; 0xff
4001cae0:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cbb8 <CyU3PUsbGetEP0Data+0x1b8>
4001cae4:	ebffb57b 	bl	4000a0d8 <_txe_mutex_put>
4001cae8:	e3570000 	cmp	r7, #0
4001caec:	1a00002d 	bne	4001cba8 <CyU3PUsbGetEP0Data+0x1a8>
4001caf0:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cbb4 <CyU3PUsbGetEP0Data+0x1b4>
4001caf4:	e5900014 	ldr	r0, [r0, #20]
4001caf8:	e3500000 	cmp	r0, #0
4001cafc:	0a000000 	beq	4001cb04 <CyU3PUsbGetEP0Data+0x104>
4001cb00:	ebfffe93 	bl	4001c554 <CyU3PUsbAckSetup>
4001cb04:	ea00000e 	b	4001cb44 <CyU3PUsbGetEP0Data+0x144>
4001cb08:	e3a02064 	mov	r2, #100	; 0x64
4001cb0c:	e1a0100d 	mov	r1, sp
4001cb10:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cbc4 <CyU3PUsbGetEP0Data+0x1c4>
4001cb14:	ebffe8b2 	bl	40016de4 <CyU3PDmaChannelWaitForRecvBuffer>
4001cb18:	e20070ff 	and	r7, r0, #255	; 0xff
4001cb1c:	e3570045 	cmp	r7, #69	; 0x45
4001cb20:	1a000006 	bne	4001cb40 <CyU3PUsbGetEP0Data+0x140>
4001cb24:	eb00002f 	bl	4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cb28:	e3500000 	cmp	r0, #0
4001cb2c:	0a000001 	beq	4001cb38 <CyU3PUsbGetEP0Data+0x138>
4001cb30:	e3a00051 	mov	r0, #81	; 0x51
4001cb34:	eaffffbb 	b	4001ca28 <CyU3PUsbGetEP0Data+0x28>
4001cb38:	e2488064 	sub	r8, r8, #100	; 0x64
4001cb3c:	ea000000 	b	4001cb44 <CyU3PUsbGetEP0Data+0x144>
4001cb40:	ea000001 	b	4001cb4c <CyU3PUsbGetEP0Data+0x14c>
4001cb44:	e3580000 	cmp	r8, #0
4001cb48:	1affffee 	bne	4001cb08 <CyU3PUsbGetEP0Data+0x108>
4001cb4c:	e1a00000 	nop			; (mov r0, r0)
4001cb50:	e3570000 	cmp	r7, #0
4001cb54:	0a00000f 	beq	4001cb98 <CyU3PUsbGetEP0Data+0x198>
4001cb58:	e3e01000 	mvn	r1, #0
4001cb5c:	e59f0054 	ldr	r0, [pc, #84]	; 4001cbb8 <CyU3PUsbGetEP0Data+0x1b8>
4001cb60:	ebffb527 	bl	4000a004 <_txe_mutex_get>
4001cb64:	e3a01001 	mov	r1, #1
4001cb68:	e3a00000 	mov	r0, #0
4001cb6c:	eb000376 	bl	4001d94c <CyU3PUsbSetEpNak>
4001cb70:	e3a00064 	mov	r0, #100	; 0x64
4001cb74:	ebffda43 	bl	40013488 <CyU3PBusyWait>
4001cb78:	e59f0044 	ldr	r0, [pc, #68]	; 4001cbc4 <CyU3PUsbGetEP0Data+0x1c4>
4001cb7c:	ebffe57b 	bl	40016170 <CyU3PDmaChannelReset>
4001cb80:	e3a01000 	mov	r1, #0
4001cb84:	e1a00001 	mov	r0, r1
4001cb88:	eb00036f 	bl	4001d94c <CyU3PUsbSetEpNak>
4001cb8c:	e59f0024 	ldr	r0, [pc, #36]	; 4001cbb8 <CyU3PUsbGetEP0Data+0x1b8>
4001cb90:	ebffb550 	bl	4000a0d8 <_txe_mutex_put>
4001cb94:	ea000003 	b	4001cba8 <CyU3PUsbGetEP0Data+0x1a8>
4001cb98:	e3560000 	cmp	r6, #0
4001cb9c:	0a000001 	beq	4001cba8 <CyU3PUsbGetEP0Data+0x1a8>
4001cba0:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cba4:	e1c600b0 	strh	r0, [r6]
4001cba8:	e1a00007 	mov	r0, r7
4001cbac:	eaffff9d 	b	4001ca28 <CyU3PUsbGetEP0Data+0x28>
4001cbb0:	00001388 	.word	0x00001388
4001cbb4:	40031d40 	.word	0x40031d40
4001cbb8:	40031ee0 	.word	0x40031ee0
4001cbbc:	0000fff0 	.word	0x0000fff0
4001cbc0:	e0031000 	.word	0xe0031000
4001cbc4:	40031b18 	.word	0x40031b18

Disassembly of section i.CyU3PUsbGetSpeed:

4001cbc8 <CyU3PUsbGetSpeed>:
4001cbc8:	e59f0004 	ldr	r0, [pc, #4]	; 4001cbd4 <CyU3PUsbGetSpeed+0xc>
4001cbcc:	e5d00009 	ldrb	r0, [r0, #9]
4001cbd0:	e12fff1e 	bx	lr
4001cbd4:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001cbd8 <CyU3PUsbHostIsStarted>:
4001cbd8:	e59f0004 	ldr	r0, [pc, #4]	; 4001cbe4 <CyU3PUsbHostIsStarted+0xc>
4001cbdc:	e5900000 	ldr	r0, [r0]
4001cbe0:	e12fff1e 	bx	lr
4001cbe4:	40030d5c 	.word	0x40030d5c

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001cbe8:	e59f0038 	ldr	r0, [pc, #56]	; 4001cc28 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001cbec:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001cbf0:	e3500000 	cmp	r0, #0
4001cbf4:	1a000007 	bne	4001cc18 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cbf8:	e59f002c 	ldr	r0, [pc, #44]	; 4001cc2c <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001cbfc:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001cc00:	e3100040 	tst	r0, #64	; 0x40
4001cc04:	1a000003 	bne	4001cc18 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001cc08:	e59f0020 	ldr	r0, [pc, #32]	; 4001cc30 <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001cc0c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001cc10:	e3100c02 	tst	r0, #512	; 0x200
4001cc14:	0a000001 	beq	4001cc20 <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001cc18:	e3a00001 	mov	r0, #1
4001cc1c:	e12fff1e 	bx	lr
4001cc20:	e3a00000 	mov	r0, #0
4001cc24:	eafffffc 	b	4001cc1c <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001cc28:	40031d40 	.word	0x40031d40
4001cc2c:	e0031000 	.word	0xe0031000
4001cc30:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001cc34 <CyU3PUsbLoadBootloaderDescs>:
4001cc34:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001cc38:	e1a04000 	mov	r4, r0
4001cc3c:	e3a06000 	mov	r6, #0
4001cc40:	e5940008 	ldr	r0, [r4, #8]
4001cc44:	e20070ff 	and	r7, r0, #255	; 0xff
4001cc48:	e1a00000 	nop			; (mov r0, r0)
4001cc4c:	ea00000f 	b	4001cc90 <CyU3PUsbLoadBootloaderDescs+0x5c>
4001cc50:	e2843010 	add	r3, r4, #16
4001cc54:	e0833186 	add	r3, r3, r6, lsl #3
4001cc58:	e5932004 	ldr	r2, [r3, #4]
4001cc5c:	e2843010 	add	r3, r4, #16
4001cc60:	e0833186 	add	r3, r3, r6, lsl #3
4001cc64:	e5d31001 	ldrb	r1, [r3, #1]
4001cc68:	e2843010 	add	r3, r4, #16
4001cc6c:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001cc70:	eb0002bf 	bl	4001d774 <CyU3PUsbSetDesc>
4001cc74:	e1a05000 	mov	r5, r0
4001cc78:	e3550000 	cmp	r5, #0
4001cc7c:	0a000001 	beq	4001cc88 <CyU3PUsbLoadBootloaderDescs+0x54>
4001cc80:	e1a00005 	mov	r0, r5
4001cc84:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001cc88:	e2860001 	add	r0, r6, #1
4001cc8c:	e20060ff 	and	r6, r0, #255	; 0xff
4001cc90:	e1560007 	cmp	r6, r7
4001cc94:	baffffed 	blt	4001cc50 <CyU3PUsbLoadBootloaderDescs+0x1c>
4001cc98:	e3a00000 	mov	r0, #0
4001cc9c:	eafffff8 	b	4001cc84 <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001cca0 <CyU3PUsbMapStream>:
4001cca0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001cca4:	e1a03000 	mov	r3, r0
4001cca8:	e203c07f 	and	ip, r3, #127	; 0x7f
4001ccac:	e59f005c 	ldr	r0, [pc, #92]	; 4001cd10 <CyU3PUsbMapStream+0x70>
4001ccb0:	e5d00008 	ldrb	r0, [r0, #8]
4001ccb4:	e3500000 	cmp	r0, #0
4001ccb8:	1a000001 	bne	4001ccc4 <CyU3PUsbMapStream+0x24>
4001ccbc:	e3a00042 	mov	r0, #66	; 0x42
4001ccc0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001ccc4:	e35c000f 	cmp	ip, #15
4001ccc8:	da000001 	ble	4001ccd4 <CyU3PUsbMapStream+0x34>
4001cccc:	e3a00040 	mov	r0, #64	; 0x40
4001ccd0:	eafffffa 	b	4001ccc0 <CyU3PUsbMapStream+0x20>
4001ccd4:	e3130080 	tst	r3, #128	; 0x80
4001ccd8:	0a000005 	beq	4001ccf4 <CyU3PUsbMapStream+0x54>
4001ccdc:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001cce0:	e180080c 	orr	r0, r0, ip, lsl #16
4001cce4:	e1800002 	orr	r0, r0, r2
4001cce8:	e59fe024 	ldr	lr, [pc, #36]	; 4001cd14 <CyU3PUsbMapStream+0x74>
4001ccec:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001ccf0:	ea000004 	b	4001cd08 <CyU3PUsbMapStream+0x68>
4001ccf4:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001ccf8:	e180080c 	orr	r0, r0, ip, lsl #16
4001ccfc:	e1800002 	orr	r0, r0, r2
4001cd00:	e59fe010 	ldr	lr, [pc, #16]	; 4001cd18 <CyU3PUsbMapStream+0x78>
4001cd04:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001cd08:	e3a00000 	mov	r0, #0
4001cd0c:	eaffffeb 	b	4001ccc0 <CyU3PUsbMapStream+0x20>
4001cd10:	40031d40 	.word	0x40031d40
4001cd14:	e00335c0 	.word	0xe00335c0
4001cd18:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001cd1c <CyU3PUsbOtgVbusChangeHandler>:
4001cd1c:	e92d4010 	push	{r4, lr}
4001cd20:	e3a04000 	mov	r4, #0
4001cd24:	e59f0094 	ldr	r0, [pc, #148]	; 4001cdc0 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001cd28:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001cd2c:	e3500000 	cmp	r0, #0
4001cd30:	0a000005 	beq	4001cd4c <CyU3PUsbOtgVbusChangeHandler+0x30>
4001cd34:	e59f0088 	ldr	r0, [pc, #136]	; 4001cdc4 <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001cd38:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001cd3c:	e59f107c 	ldr	r1, [pc, #124]	; 4001cdc0 <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001cd40:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001cd44:	e1100001 	tst	r0, r1
4001cd48:	0a000008 	beq	4001cd70 <CyU3PUsbOtgVbusChangeHandler+0x54>
4001cd4c:	e3a04001 	mov	r4, #1
4001cd50:	e3a00018 	mov	r0, #24
4001cd54:	e59f106c 	ldr	r1, [pc, #108]	; 4001cdc8 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cd58:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cd5c:	e1c10000 	bic	r0, r1, r0
4001cd60:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cd64:	e3c00018 	bic	r0, r0, #24
4001cd68:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cd6c:	ea000009 	b	4001cd98 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cd70:	ebfffbb2 	bl	4001bc40 <CyU3POtgIsHostMode>
4001cd74:	e3500000 	cmp	r0, #0
4001cd78:	0a000006 	beq	4001cd98 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001cd7c:	e3a00018 	mov	r0, #24
4001cd80:	e59f1040 	ldr	r1, [pc, #64]	; 4001cdc8 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001cd84:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001cd88:	e1c10000 	bic	r0, r1, r0
4001cd8c:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001cd90:	e3800018 	orr	r0, r0, #24
4001cd94:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001cd98:	e59f002c 	ldr	r0, [pc, #44]	; 4001cdcc <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cd9c:	e5900004 	ldr	r0, [r0, #4]
4001cda0:	e3500000 	cmp	r0, #0
4001cda4:	0a000004 	beq	4001cdbc <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001cda8:	e59f001c 	ldr	r0, [pc, #28]	; 4001cdcc <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001cdac:	e1a01004 	mov	r1, r4
4001cdb0:	e5902004 	ldr	r2, [r0, #4]
4001cdb4:	e3a00002 	mov	r0, #2
4001cdb8:	e12fff32 	blx	r2
4001cdbc:	e8bd8010 	pop	{r4, pc}
4001cdc0:	40031d40 	.word	0x40031d40
4001cdc4:	e0051000 	.word	0xe0051000
4001cdc8:	e0031000 	.word	0xe0031000
4001cdcc:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3PUsbPhyDisable:

4001cdd0 <CyU3PUsbPhyDisable>:
4001cdd0:	e92d4010 	push	{r4, lr}
4001cdd4:	e1a04000 	mov	r4, r0
4001cdd8:	e2841003 	add	r1, r4, #3
4001cddc:	e20100ff 	and	r0, r1, #255	; 0xff
4001cde0:	eb000af4 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
4001cde4:	e3a00000 	mov	r0, #0
4001cde8:	e59f1184 	ldr	r1, [pc, #388]	; 4001cf74 <CyU3PUsbPhyDisable+0x1a4>
4001cdec:	e5810000 	str	r0, [r1]
4001cdf0:	e59f0180 	ldr	r0, [pc, #384]	; 4001cf78 <CyU3PUsbPhyDisable+0x1a8>
4001cdf4:	ebffb764 	bl	4000ab8c <_txe_timer_deactivate>
4001cdf8:	e3a00008 	mov	r0, #8
4001cdfc:	eb00141f 	bl	40021e80 <CyU3PVicDisableInt>
4001ce00:	e59f0174 	ldr	r0, [pc, #372]	; 4001cf7c <CyU3PUsbPhyDisable+0x1ac>
4001ce04:	e5900004 	ldr	r0, [r0, #4]
4001ce08:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001ce0c:	e59f1168 	ldr	r1, [pc, #360]	; 4001cf7c <CyU3PUsbPhyDisable+0x1ac>
4001ce10:	e5810004 	str	r0, [r1, #4]
4001ce14:	e3e00000 	mvn	r0, #0
4001ce18:	e0411600 	sub	r1, r1, r0, lsl #12
4001ce1c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ce20:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001ce24:	e59f0154 	ldr	r0, [pc, #340]	; 4001cf80 <CyU3PUsbPhyDisable+0x1b0>
4001ce28:	ebffe4d0 	bl	40016170 <CyU3PDmaChannelReset>
4001ce2c:	e59f0150 	ldr	r0, [pc, #336]	; 4001cf84 <CyU3PUsbPhyDisable+0x1b4>
4001ce30:	ebffe4ce 	bl	40016170 <CyU3PDmaChannelReset>
4001ce34:	e3540000 	cmp	r4, #0
4001ce38:	0a00002b 	beq	4001ceec <CyU3PUsbPhyDisable+0x11c>
4001ce3c:	e3a00001 	mov	r0, #1
4001ce40:	e59f1140 	ldr	r1, [pc, #320]	; 4001cf88 <CyU3PUsbPhyDisable+0x1b8>
4001ce44:	e5810060 	str	r0, [r1, #96]	; 0x60
4001ce48:	ebffb68e 	bl	4000a888 <_txe_thread_relinquish>
4001ce4c:	e3e00000 	mvn	r0, #0
4001ce50:	e59f1134 	ldr	r1, [pc, #308]	; 4001cf8c <CyU3PUsbPhyDisable+0x1bc>
4001ce54:	e5810004 	str	r0, [r1, #4]
4001ce58:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001ce5c:	e0010000 	and	r0, r1, r0
4001ce60:	e5900014 	ldr	r0, [r0, #20]
4001ce64:	e59f1124 	ldr	r1, [pc, #292]	; 4001cf90 <CyU3PUsbPhyDisable+0x1c0>
4001ce68:	e5810000 	str	r0, [r1]
4001ce6c:	e3a00000 	mov	r0, #0
4001ce70:	e59f111c 	ldr	r1, [pc, #284]	; 4001cf94 <CyU3PUsbPhyDisable+0x1c4>
4001ce74:	e5810000 	str	r0, [r1]
4001ce78:	e3a01000 	mov	r1, #0
4001ce7c:	e59f0114 	ldr	r0, [pc, #276]	; 4001cf98 <CyU3PUsbPhyDisable+0x1c8>
4001ce80:	eb00146e 	bl	40022040 <CyFx3UsbWritePhyReg>
4001ce84:	e3a01002 	mov	r1, #2
4001ce88:	e1a00001 	mov	r0, r1
4001ce8c:	ebfffd1d 	bl	4001c308 <CyU3PSetUsbCoreClock>
4001ce90:	e3a00002 	mov	r0, #2
4001ce94:	ebffd97b 	bl	40013488 <CyU3PBusyWait>
4001ce98:	e59f00fc 	ldr	r0, [pc, #252]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001ce9c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cea0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001cea4:	e59f10f0 	ldr	r1, [pc, #240]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001cea8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ceac:	e3a00002 	mov	r0, #2
4001ceb0:	ebffd974 	bl	40013488 <CyU3PBusyWait>
4001ceb4:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001ceb8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cebc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001cec0:	e59f10d4 	ldr	r1, [pc, #212]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001cec4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cec8:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001cecc:	e590001c 	ldr	r0, [r0, #28]
4001ced0:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ced4:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001ced8:	e581001c 	str	r0, [r1, #28]
4001cedc:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cfa0 <CyU3PUsbPhyDisable+0x1d0>
4001cee0:	e5900000 	ldr	r0, [r0]
4001cee4:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001cee8:	ea00000e 	b	4001cf28 <CyU3PUsbPhyDisable+0x158>
4001ceec:	e59f00a8 	ldr	r0, [pc, #168]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001cef0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001cef4:	e3800008 	orr	r0, r0, #8
4001cef8:	e59f109c 	ldr	r1, [pc, #156]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001cefc:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001cf00:	e3a01002 	mov	r1, #2
4001cf04:	e1a00001 	mov	r0, r1
4001cf08:	ebfffcfe 	bl	4001c308 <CyU3PSetUsbCoreClock>
4001cf0c:	e3a00002 	mov	r0, #2
4001cf10:	ebffd95c 	bl	40013488 <CyU3PBusyWait>
4001cf14:	e59f0080 	ldr	r0, [pc, #128]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001cf18:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001cf1c:	e2000001 	and	r0, r0, #1
4001cf20:	e59f1074 	ldr	r1, [pc, #116]	; 4001cf9c <CyU3PUsbPhyDisable+0x1cc>
4001cf24:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001cf28:	e59f0074 	ldr	r0, [pc, #116]	; 4001cfa4 <CyU3PUsbPhyDisable+0x1d4>
4001cf2c:	e5900000 	ldr	r0, [r0]
4001cf30:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001cf34:	e59f1068 	ldr	r1, [pc, #104]	; 4001cfa4 <CyU3PUsbPhyDisable+0x1d4>
4001cf38:	e5810000 	str	r0, [r1]
4001cf3c:	e3a00000 	mov	r0, #0
4001cf40:	e59f1040 	ldr	r1, [pc, #64]	; 4001cf88 <CyU3PUsbPhyDisable+0x1b8>
4001cf44:	e5c10009 	strb	r0, [r1, #9]
4001cf48:	ebfffb6c 	bl	4001bd00 <CyU3POtgIsStarted>
4001cf4c:	e3500000 	cmp	r0, #0
4001cf50:	0a000006 	beq	4001cf70 <CyU3PUsbPhyDisable+0x1a0>
4001cf54:	e3a00064 	mov	r0, #100	; 0x64
4001cf58:	ebffd94a 	bl	40013488 <CyU3PBusyWait>
4001cf5c:	e59f0040 	ldr	r0, [pc, #64]	; 4001cfa4 <CyU3PUsbPhyDisable+0x1d4>
4001cf60:	e5900000 	ldr	r0, [r0]
4001cf64:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cf68:	e59f1034 	ldr	r1, [pc, #52]	; 4001cfa4 <CyU3PUsbPhyDisable+0x1d4>
4001cf6c:	e5810000 	str	r0, [r1]
4001cf70:	e8bd8010 	pop	{r4, pc}
4001cf74:	40030db0 	.word	0x40030db0
4001cf78:	400326a0 	.word	0x400326a0
4001cf7c:	e0030000 	.word	0xe0030000
4001cf80:	40031a78 	.word	0x40031a78
4001cf84:	40031b18 	.word	0x40031b18
4001cf88:	40031d40 	.word	0x40031d40
4001cf8c:	e0033000 	.word	0xe0033000
4001cf90:	40030d84 	.word	0x40030d84
4001cf94:	40030db4 	.word	0x40030db4
4001cf98:	00001005 	.word	0x00001005
4001cf9c:	e0031000 	.word	0xe0031000
4001cfa0:	40030c58 	.word	0x40030c58
4001cfa4:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001cfa8 <CyU3PUsbPhyEnable>:
4001cfa8:	e92d4070 	push	{r4, r5, r6, lr}
4001cfac:	e1a04000 	mov	r4, r0
4001cfb0:	e2841005 	add	r1, r4, #5
4001cfb4:	e20100ff 	and	r0, r1, #255	; 0xff
4001cfb8:	eb000a7e 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
4001cfbc:	e3e00000 	mvn	r0, #0
4001cfc0:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001cfc4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001cfc8:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001cfcc:	e3a00008 	mov	r0, #8
4001cfd0:	eb0013af 	bl	40021e94 <CyU3PVicEnableInt>
4001cfd4:	e3a00009 	mov	r0, #9
4001cfd8:	eb0013ad 	bl	40021e94 <CyU3PVicEnableInt>
4001cfdc:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d284 <CyU3PUsbPhyEnable+0x2dc>
4001cfe0:	e5900004 	ldr	r0, [r0, #4]
4001cfe4:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001cfe8:	e59f1294 	ldr	r1, [pc, #660]	; 4001d284 <CyU3PUsbPhyEnable+0x2dc>
4001cfec:	e5810004 	str	r0, [r1, #4]
4001cff0:	e2810802 	add	r0, r1, #131072	; 0x20000
4001cff4:	e5900000 	ldr	r0, [r0]
4001cff8:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001cffc:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d000:	e5810000 	str	r0, [r1]
4001d004:	e3540000 	cmp	r4, #0
4001d008:	0a000069 	beq	4001d1b4 <CyU3PUsbPhyEnable+0x20c>
4001d00c:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d010:	e5900014 	ldr	r0, [r0, #20]
4001d014:	e59f126c 	ldr	r1, [pc, #620]	; 4001d288 <CyU3PUsbPhyEnable+0x2e0>
4001d018:	e5810000 	str	r0, [r1]
4001d01c:	e3a00000 	mov	r0, #0
4001d020:	e59f1264 	ldr	r1, [pc, #612]	; 4001d28c <CyU3PUsbPhyEnable+0x2e4>
4001d024:	e5810000 	str	r0, [r1]
4001d028:	e3e00000 	mvn	r0, #0
4001d02c:	e59f125c 	ldr	r1, [pc, #604]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d030:	e5810004 	str	r0, [r1, #4]
4001d034:	e59f0258 	ldr	r0, [pc, #600]	; 4001d294 <CyU3PUsbPhyEnable+0x2ec>
4001d038:	e5810008 	str	r0, [r1, #8]
4001d03c:	e3e00000 	mvn	r0, #0
4001d040:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d044:	e59f024c 	ldr	r0, [pc, #588]	; 4001d298 <CyU3PUsbPhyEnable+0x2f0>
4001d048:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d04c:	e59f0248 	ldr	r0, [pc, #584]	; 4001d29c <CyU3PUsbPhyEnable+0x2f4>
4001d050:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d054:	e3500000 	cmp	r0, #0
4001d058:	0a000003 	beq	4001d06c <CyU3PUsbPhyEnable+0xc4>
4001d05c:	e1a00001 	mov	r0, r1
4001d060:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d064:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d068:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d06c:	e3a00000 	mov	r0, #0
4001d070:	e59f1224 	ldr	r1, [pc, #548]	; 4001d29c <CyU3PUsbPhyEnable+0x2f4>
4001d074:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d078:	e59f0220 	ldr	r0, [pc, #544]	; 4001d2a0 <CyU3PUsbPhyEnable+0x2f8>
4001d07c:	e5900000 	ldr	r0, [r0]
4001d080:	e3500000 	cmp	r0, #0
4001d084:	0a000003 	beq	4001d098 <CyU3PUsbPhyEnable+0xf0>
4001d088:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d08c:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d090:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d094:	ea000002 	b	4001d0a4 <CyU3PUsbPhyEnable+0xfc>
4001d098:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d09c:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d0a0:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d0a4:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d2a4 <CyU3PUsbPhyEnable+0x2fc>
4001d0a8:	e5900000 	ldr	r0, [r0]
4001d0ac:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d0b0:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d0b4:	eb00139b 	bl	40021f28 <CyFx3Usb3LnkSetup>
4001d0b8:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d2a8 <CyU3PUsbPhyEnable+0x300>
4001d0bc:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d0c0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d0c4:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d0c8:	e1c10000 	bic	r0, r1, r0
4001d0cc:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d0d0:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d0d4:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d0d8:	e3a00000 	mov	r0, #0
4001d0dc:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d29c <CyU3PUsbPhyEnable+0x2f4>
4001d0e0:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d0e4:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d0e8:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d0ec:	e581001c 	str	r0, [r1, #28]
4001d0f0:	e3a01002 	mov	r1, #2
4001d0f4:	e1a00001 	mov	r0, r1
4001d0f8:	ebfffc82 	bl	4001c308 <CyU3PSetUsbCoreClock>
4001d0fc:	eb00135b 	bl	40021e70 <CyU3PVicDisableAllInterrupts>
4001d100:	e1a05000 	mov	r5, r0
4001d104:	e3a00000 	mov	r0, #0
4001d108:	e59f119c 	ldr	r1, [pc, #412]	; 4001d2ac <CyU3PUsbPhyEnable+0x304>
4001d10c:	e5810000 	str	r0, [r1]
4001d110:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d114:	e59f1174 	ldr	r1, [pc, #372]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d118:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d11c:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d120:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d124:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d128:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d12c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d130:	e3a00064 	mov	r0, #100	; 0x64
4001d134:	ebffd8d3 	bl	40013488 <CyU3PBusyWait>
4001d138:	e59f0150 	ldr	r0, [pc, #336]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d13c:	e5900000 	ldr	r0, [r0]
4001d140:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d144:	e59f1144 	ldr	r1, [pc, #324]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d148:	e5810000 	str	r0, [r1]
4001d14c:	e59f015c 	ldr	r0, [pc, #348]	; 4001d2b0 <CyU3PUsbPhyEnable+0x308>
4001d150:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d154:	e3a01080 	mov	r1, #128	; 0x80
4001d158:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d15c:	eb0013b7 	bl	40022040 <CyFx3UsbWritePhyReg>
4001d160:	e3a01d06 	mov	r1, #384	; 0x180
4001d164:	e59f0148 	ldr	r0, [pc, #328]	; 4001d2b4 <CyU3PUsbPhyEnable+0x30c>
4001d168:	eb0013b4 	bl	40022040 <CyFx3UsbWritePhyReg>
4001d16c:	e3a01080 	mov	r1, #128	; 0x80
4001d170:	e59f0140 	ldr	r0, [pc, #320]	; 4001d2b8 <CyU3PUsbPhyEnable+0x310>
4001d174:	eb0013b1 	bl	40022040 <CyFx3UsbWritePhyReg>
4001d178:	e1a00005 	mov	r0, r5
4001d17c:	eb001349 	bl	40021ea8 <CyU3PVicEnableInterrupts>
4001d180:	e59f0108 	ldr	r0, [pc, #264]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d184:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d188:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d18c:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d290 <CyU3PUsbPhyEnable+0x2e8>
4001d190:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d194:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d198:	e581001c 	str	r0, [r1, #28]
4001d19c:	e3a00064 	mov	r0, #100	; 0x64
4001d1a0:	ebffd8b8 	bl	40013488 <CyU3PBusyWait>
4001d1a4:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d1a8:	e59f110c 	ldr	r1, [pc, #268]	; 4001d2bc <CyU3PUsbPhyEnable+0x314>
4001d1ac:	e5810008 	str	r0, [r1, #8]
4001d1b0:	ea000031 	b	4001d27c <CyU3PUsbPhyEnable+0x2d4>
4001d1b4:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d29c <CyU3PUsbPhyEnable+0x2f4>
4001d1b8:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d1bc:	e3500000 	cmp	r0, #0
4001d1c0:	0a000000 	beq	4001d1c8 <CyU3PUsbPhyEnable+0x220>
4001d1c4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d1c8:	e3a00001 	mov	r0, #1
4001d1cc:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d29c <CyU3PUsbPhyEnable+0x2f4>
4001d1d0:	e5c10009 	strb	r0, [r1, #9]
4001d1d4:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d1d8:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d2c0 <CyU3PUsbPhyEnable+0x318>
4001d1dc:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d1e0:	e3a00000 	mov	r0, #0
4001d1e4:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d29c <CyU3PUsbPhyEnable+0x2f4>
4001d1e8:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d1ec:	e59f008c 	ldr	r0, [pc, #140]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001d1f0:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d1f4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d1f8:	e59f1080 	ldr	r1, [pc, #128]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001d1fc:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d200:	e1a00001 	mov	r0, r1
4001d204:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d208:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d20c:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d210:	e3a00002 	mov	r0, #2
4001d214:	ebffd89b 	bl	40013488 <CyU3PBusyWait>
4001d218:	e59f0060 	ldr	r0, [pc, #96]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001d21c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d220:	e2000001 	and	r0, r0, #1
4001d224:	e59f1054 	ldr	r1, [pc, #84]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001d228:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d22c:	e1a00001 	mov	r0, r1
4001d230:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d234:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d238:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d23c:	e3a00064 	mov	r0, #100	; 0x64
4001d240:	ebffd890 	bl	40013488 <CyU3PBusyWait>
4001d244:	eb00132b 	bl	40021ef8 <CyFx3Usb2PhySetup>
4001d248:	e59f0074 	ldr	r0, [pc, #116]	; 4001d2c4 <CyU3PUsbPhyEnable+0x31c>
4001d24c:	e59f102c 	ldr	r1, [pc, #44]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001d250:	e5810008 	str	r0, [r1, #8]
4001d254:	e3a00050 	mov	r0, #80	; 0x50
4001d258:	ebffd88a 	bl	40013488 <CyU3PBusyWait>
4001d25c:	e3a01000 	mov	r1, #0
4001d260:	e3a00002 	mov	r0, #2
4001d264:	ebfffc27 	bl	4001c308 <CyU3PSetUsbCoreClock>
4001d268:	e59f0010 	ldr	r0, [pc, #16]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001d26c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d270:	e3c00008 	bic	r0, r0, #8
4001d274:	e59f1004 	ldr	r1, [pc, #4]	; 4001d280 <CyU3PUsbPhyEnable+0x2d8>
4001d278:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d27c:	eaffffd0 	b	4001d1c4 <CyU3PUsbPhyEnable+0x21c>
4001d280:	e0031000 	.word	0xe0031000
4001d284:	e0030000 	.word	0xe0030000
4001d288:	40030d84 	.word	0x40030d84
4001d28c:	40030db4 	.word	0x40030db4
4001d290:	e0033000 	.word	0xe0033000
4001d294:	00038081 	.word	0x00038081
4001d298:	00004a3d 	.word	0x00004a3d
4001d29c:	40031d40 	.word	0x40031d40
4001d2a0:	40030d40 	.word	0x40030d40
4001d2a4:	40030d8c 	.word	0x40030d8c
4001d2a8:	00000908 	.word	0x00000908
4001d2ac:	40030d74 	.word	0x40030d74
4001d2b0:	00310418 	.word	0x00310418
4001d2b4:	00001006 	.word	0x00001006
4001d2b8:	00001024 	.word	0x00001024
4001d2bc:	e0052000 	.word	0xe0052000
4001d2c0:	e0032000 	.word	0xe0032000
4001d2c4:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d2c8 <CyU3PUsbPowerOn>:
4001d2c8:	e92d4010 	push	{r4, lr}
4001d2cc:	eb00133b 	bl	40021fc0 <CyFx3UsbPowerOn>
4001d2d0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d2d4 <CyU3PUsbResetEp>:
4001d2d4:	e92d4070 	push	{r4, r5, r6, lr}
4001d2d8:	e1a04000 	mov	r4, r0
4001d2dc:	e204507f 	and	r5, r4, #127	; 0x7f
4001d2e0:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d3a4 <CyU3PUsbResetEp+0xd0>
4001d2e4:	e5d00008 	ldrb	r0, [r0, #8]
4001d2e8:	e3500000 	cmp	r0, #0
4001d2ec:	1a000001 	bne	4001d2f8 <CyU3PUsbResetEp+0x24>
4001d2f0:	e3a00042 	mov	r0, #66	; 0x42
4001d2f4:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d2f8:	e355000f 	cmp	r5, #15
4001d2fc:	da000001 	ble	4001d308 <CyU3PUsbResetEp+0x34>
4001d300:	e3a00040 	mov	r0, #64	; 0x40
4001d304:	eafffffa 	b	4001d2f4 <CyU3PUsbResetEp+0x20>
4001d308:	e3e01000 	mvn	r1, #0
4001d30c:	e59f0094 	ldr	r0, [pc, #148]	; 4001d3a8 <CyU3PUsbResetEp+0xd4>
4001d310:	ebffb33b 	bl	4000a004 <_txe_mutex_get>
4001d314:	ebfffe2b 	bl	4001cbc8 <CyU3PUsbGetSpeed>
4001d318:	e3500003 	cmp	r0, #3
4001d31c:	1a00001c 	bne	4001d394 <CyU3PUsbResetEp+0xc0>
4001d320:	e59f0084 	ldr	r0, [pc, #132]	; 4001d3ac <CyU3PUsbResetEp+0xd8>
4001d324:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d328:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d32c:	e59f1078 	ldr	r1, [pc, #120]	; 4001d3ac <CyU3PUsbResetEp+0xd8>
4001d330:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d334:	e3140080 	tst	r4, #128	; 0x80
4001d338:	0a00000a 	beq	4001d368 <CyU3PUsbResetEp+0x94>
4001d33c:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d340:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d344:	e3866011 	orr	r6, r6, #17
4001d348:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d34c:	e3a00002 	mov	r0, #2
4001d350:	ebffd84c 	bl	40013488 <CyU3PBusyWait>
4001d354:	e3c60010 	bic	r0, r6, #16
4001d358:	e3806001 	orr	r6, r0, #1
4001d35c:	e59f004c 	ldr	r0, [pc, #76]	; 4001d3b0 <CyU3PUsbResetEp+0xdc>
4001d360:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d364:	ea00000a 	b	4001d394 <CyU3PUsbResetEp+0xc0>
4001d368:	e59f0044 	ldr	r0, [pc, #68]	; 4001d3b4 <CyU3PUsbResetEp+0xe0>
4001d36c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d370:	e3806011 	orr	r6, r0, #17
4001d374:	e59f0038 	ldr	r0, [pc, #56]	; 4001d3b4 <CyU3PUsbResetEp+0xe0>
4001d378:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d37c:	e3a00002 	mov	r0, #2
4001d380:	ebffd840 	bl	40013488 <CyU3PBusyWait>
4001d384:	e3c60010 	bic	r0, r6, #16
4001d388:	e3806001 	orr	r6, r0, #1
4001d38c:	e59f0020 	ldr	r0, [pc, #32]	; 4001d3b4 <CyU3PUsbResetEp+0xe0>
4001d390:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d394:	e59f000c 	ldr	r0, [pc, #12]	; 4001d3a8 <CyU3PUsbResetEp+0xd4>
4001d398:	ebffb34e 	bl	4000a0d8 <_txe_mutex_put>
4001d39c:	e3a00000 	mov	r0, #0
4001d3a0:	eaffffd3 	b	4001d2f4 <CyU3PUsbResetEp+0x20>
4001d3a4:	40031d40 	.word	0x40031d40
4001d3a8:	40031ee0 	.word	0x40031ee0
4001d3ac:	e0033000 	.word	0xe0033000
4001d3b0:	e0033500 	.word	0xe0033500
4001d3b4:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d3b8 <CyU3PUsbSendEP0Data>:
4001d3b8:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d3bc:	e1a04000 	mov	r4, r0
4001d3c0:	e1a05001 	mov	r5, r1
4001d3c4:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d578 <CyU3PUsbSendEP0Data+0x1c0>
4001d3c8:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d57c <CyU3PUsbSendEP0Data+0x1c4>
4001d3cc:	e5d00008 	ldrb	r0, [r0, #8]
4001d3d0:	e3500000 	cmp	r0, #0
4001d3d4:	1a000001 	bne	4001d3e0 <CyU3PUsbSendEP0Data+0x28>
4001d3d8:	e3a00042 	mov	r0, #66	; 0x42
4001d3dc:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d3e0:	e3550000 	cmp	r5, #0
4001d3e4:	1a000001 	bne	4001d3f0 <CyU3PUsbSendEP0Data+0x38>
4001d3e8:	e3a00040 	mov	r0, #64	; 0x40
4001d3ec:	eafffffa 	b	4001d3dc <CyU3PUsbSendEP0Data+0x24>
4001d3f0:	e3e01000 	mvn	r1, #0
4001d3f4:	e59f0184 	ldr	r0, [pc, #388]	; 4001d580 <CyU3PUsbSendEP0Data+0x1c8>
4001d3f8:	ebffb301 	bl	4000a004 <_txe_mutex_get>
4001d3fc:	e59f0180 	ldr	r0, [pc, #384]	; 4001d584 <CyU3PUsbSendEP0Data+0x1cc>
4001d400:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d404:	e3c00008 	bic	r0, r0, #8
4001d408:	e59f1174 	ldr	r1, [pc, #372]	; 4001d584 <CyU3PUsbSendEP0Data+0x1cc>
4001d40c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d410:	e59f0164 	ldr	r0, [pc, #356]	; 4001d57c <CyU3PUsbSendEP0Data+0x1c4>
4001d414:	e5900018 	ldr	r0, [r0, #24]
4001d418:	e3500000 	cmp	r0, #0
4001d41c:	1a000002 	bne	4001d42c <CyU3PUsbSendEP0Data+0x74>
4001d420:	ebfffdf0 	bl	4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d424:	e3500000 	cmp	r0, #0
4001d428:	0a000008 	beq	4001d450 <CyU3PUsbSendEP0Data+0x98>
4001d42c:	e59f0150 	ldr	r0, [pc, #336]	; 4001d584 <CyU3PUsbSendEP0Data+0x1cc>
4001d430:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d434:	e3800008 	orr	r0, r0, #8
4001d438:	e59f1144 	ldr	r1, [pc, #324]	; 4001d584 <CyU3PUsbSendEP0Data+0x1cc>
4001d43c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d440:	e59f0138 	ldr	r0, [pc, #312]	; 4001d580 <CyU3PUsbSendEP0Data+0x1c8>
4001d444:	ebffb323 	bl	4000a0d8 <_txe_mutex_put>
4001d448:	e3a00000 	mov	r0, #0
4001d44c:	eaffffe2 	b	4001d3dc <CyU3PUsbSendEP0Data+0x24>
4001d450:	e59f012c 	ldr	r0, [pc, #300]	; 4001d584 <CyU3PUsbSendEP0Data+0x1cc>
4001d454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d458:	e3800008 	orr	r0, r0, #8
4001d45c:	e59f1120 	ldr	r1, [pc, #288]	; 4001d584 <CyU3PUsbSendEP0Data+0x1cc>
4001d460:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d464:	e1a00001 	mov	r0, r1
4001d468:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d46c:	e1500004 	cmp	r0, r4
4001d470:	2a000003 	bcs	4001d484 <CyU3PUsbSendEP0Data+0xcc>
4001d474:	e1a00001 	mov	r0, r1
4001d478:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d47c:	e1a04800 	lsl	r4, r0, #16
4001d480:	e1a04824 	lsr	r4, r4, #16
4001d484:	eb0003b8 	bl	4001e36c <GetUsbLinkActive>
4001d488:	e1cd40b4 	strh	r4, [sp, #4]
4001d48c:	e284000f 	add	r0, r4, #15
4001d490:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d588 <CyU3PUsbSendEP0Data+0x1d0>
4001d494:	e0000001 	and	r0, r0, r1
4001d498:	e1cd00b6 	strh	r0, [sp, #6]
4001d49c:	e58d5000 	str	r5, [sp]
4001d4a0:	e3a00000 	mov	r0, #0
4001d4a4:	e1cd00b8 	strh	r0, [sp, #8]
4001d4a8:	e1a0100d 	mov	r1, sp
4001d4ac:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d58c <CyU3PUsbSendEP0Data+0x1d4>
4001d4b0:	ebffe571 	bl	40016a7c <CyU3PDmaChannelSetupSendBuffer>
4001d4b4:	e20060ff 	and	r6, r0, #255	; 0xff
4001d4b8:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d580 <CyU3PUsbSendEP0Data+0x1c8>
4001d4bc:	ebffb305 	bl	4000a0d8 <_txe_mutex_put>
4001d4c0:	e3560000 	cmp	r6, #0
4001d4c4:	1a000029 	bne	4001d570 <CyU3PUsbSendEP0Data+0x1b8>
4001d4c8:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d57c <CyU3PUsbSendEP0Data+0x1c4>
4001d4cc:	e5900014 	ldr	r0, [r0, #20]
4001d4d0:	e3500000 	cmp	r0, #0
4001d4d4:	0a000000 	beq	4001d4dc <CyU3PUsbSendEP0Data+0x124>
4001d4d8:	ebfffc1d 	bl	4001c554 <CyU3PUsbAckSetup>
4001d4dc:	ea00000d 	b	4001d518 <CyU3PUsbSendEP0Data+0x160>
4001d4e0:	e3a01064 	mov	r1, #100	; 0x64
4001d4e4:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d58c <CyU3PUsbSendEP0Data+0x1d4>
4001d4e8:	ebffe5f1 	bl	40016cb4 <CyU3PDmaChannelWaitForCompletion>
4001d4ec:	e20060ff 	and	r6, r0, #255	; 0xff
4001d4f0:	e3560045 	cmp	r6, #69	; 0x45
4001d4f4:	1a000006 	bne	4001d514 <CyU3PUsbSendEP0Data+0x15c>
4001d4f8:	ebfffdba 	bl	4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d4fc:	e3500000 	cmp	r0, #0
4001d500:	0a000001 	beq	4001d50c <CyU3PUsbSendEP0Data+0x154>
4001d504:	e3a00000 	mov	r0, #0
4001d508:	eaffffb3 	b	4001d3dc <CyU3PUsbSendEP0Data+0x24>
4001d50c:	e2477064 	sub	r7, r7, #100	; 0x64
4001d510:	ea000000 	b	4001d518 <CyU3PUsbSendEP0Data+0x160>
4001d514:	ea000001 	b	4001d520 <CyU3PUsbSendEP0Data+0x168>
4001d518:	e3570000 	cmp	r7, #0
4001d51c:	1affffef 	bne	4001d4e0 <CyU3PUsbSendEP0Data+0x128>
4001d520:	e1a00000 	nop			; (mov r0, r0)
4001d524:	e3560000 	cmp	r6, #0
4001d528:	0a000010 	beq	4001d570 <CyU3PUsbSendEP0Data+0x1b8>
4001d52c:	e3e01000 	mvn	r1, #0
4001d530:	e59f0048 	ldr	r0, [pc, #72]	; 4001d580 <CyU3PUsbSendEP0Data+0x1c8>
4001d534:	ebffb2b2 	bl	4000a004 <_txe_mutex_get>
4001d538:	e3a01001 	mov	r1, #1
4001d53c:	e3a00080 	mov	r0, #128	; 0x80
4001d540:	eb000101 	bl	4001d94c <CyU3PUsbSetEpNak>
4001d544:	e3a00064 	mov	r0, #100	; 0x64
4001d548:	ebffd7ce 	bl	40013488 <CyU3PBusyWait>
4001d54c:	e59f0038 	ldr	r0, [pc, #56]	; 4001d58c <CyU3PUsbSendEP0Data+0x1d4>
4001d550:	ebffe306 	bl	40016170 <CyU3PDmaChannelReset>
4001d554:	e3a00080 	mov	r0, #128	; 0x80
4001d558:	ebfffcf5 	bl	4001c934 <CyU3PUsbFlushEp>
4001d55c:	e3a01000 	mov	r1, #0
4001d560:	e3a00080 	mov	r0, #128	; 0x80
4001d564:	eb0000f8 	bl	4001d94c <CyU3PUsbSetEpNak>
4001d568:	e59f0010 	ldr	r0, [pc, #16]	; 4001d580 <CyU3PUsbSendEP0Data+0x1c8>
4001d56c:	ebffb2d9 	bl	4000a0d8 <_txe_mutex_put>
4001d570:	e1a00006 	mov	r0, r6
4001d574:	eaffff98 	b	4001d3dc <CyU3PUsbSendEP0Data+0x24>
4001d578:	00001388 	.word	0x00001388
4001d57c:	40031d40 	.word	0x40031d40
4001d580:	40031ee0 	.word	0x40031ee0
4001d584:	e0031000 	.word	0xe0031000
4001d588:	0000fff0 	.word	0x0000fff0
4001d58c:	40031a78 	.word	0x40031a78

Disassembly of section i.CyU3PUsbSendErdy:

4001d590 <CyU3PUsbSendErdy>:
4001d590:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d594:	e1a04000 	mov	r4, r0
4001d598:	e1a05001 	mov	r5, r1
4001d59c:	e1a0000d 	mov	r0, sp
4001d5a0:	e3a02000 	mov	r2, #0
4001d5a4:	e1a03002 	mov	r3, r2
4001d5a8:	e1a06002 	mov	r6, r2
4001d5ac:	e880004c 	stm	r0, {r2, r3, r6}
4001d5b0:	e204600f 	and	r6, r4, #15
4001d5b4:	e2047080 	and	r7, r4, #128	; 0x80
4001d5b8:	e59f00b4 	ldr	r0, [pc, #180]	; 4001d674 <CyU3PUsbSendErdy+0xe4>
4001d5bc:	e5d00008 	ldrb	r0, [r0, #8]
4001d5c0:	e3500000 	cmp	r0, #0
4001d5c4:	1a000001 	bne	4001d5d0 <CyU3PUsbSendErdy+0x40>
4001d5c8:	e3a00042 	mov	r0, #66	; 0x42
4001d5cc:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d5d0:	ebfffd7c 	bl	4001cbc8 <CyU3PUsbGetSpeed>
4001d5d4:	e3500003 	cmp	r0, #3
4001d5d8:	1a000004 	bne	4001d5f0 <CyU3PUsbSendErdy+0x60>
4001d5dc:	e59f0094 	ldr	r0, [pc, #148]	; 4001d678 <CyU3PUsbSendErdy+0xe8>
4001d5e0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d5e4:	e200003f 	and	r0, r0, #63	; 0x3f
4001d5e8:	e3500010 	cmp	r0, #16
4001d5ec:	0a000001 	beq	4001d5f8 <CyU3PUsbSendErdy+0x68>
4001d5f0:	e3a000ff 	mov	r0, #255	; 0xff
4001d5f4:	eafffff4 	b	4001d5cc <CyU3PUsbSendErdy+0x3c>
4001d5f8:	e204007f 	and	r0, r4, #127	; 0x7f
4001d5fc:	e350000f 	cmp	r0, #15
4001d600:	da000001 	ble	4001d60c <CyU3PUsbSendErdy+0x7c>
4001d604:	e3a00040 	mov	r0, #64	; 0x40
4001d608:	eaffffef 	b	4001d5cc <CyU3PUsbSendErdy+0x3c>
4001d60c:	e59f0064 	ldr	r0, [pc, #100]	; 4001d678 <CyU3PUsbSendErdy+0xe8>
4001d610:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d614:	e3a01004 	mov	r1, #4
4001d618:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d61c:	e58d0000 	str	r0, [sp]
4001d620:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001d624:	e3800003 	orr	r0, r0, #3
4001d628:	e1800406 	orr	r0, r0, r6, lsl #8
4001d62c:	e58d0004 	str	r0, [sp, #4]
4001d630:	e3570000 	cmp	r7, #0
4001d634:	0a000005 	beq	4001d650 <CyU3PUsbSendErdy+0xc0>
4001d638:	e59f003c 	ldr	r0, [pc, #60]	; 4001d67c <CyU3PUsbSendErdy+0xec>
4001d63c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d640:	e3100008 	tst	r0, #8
4001d644:	0a000006 	beq	4001d664 <CyU3PUsbSendErdy+0xd4>
4001d648:	e58d5008 	str	r5, [sp, #8]
4001d64c:	ea000004 	b	4001d664 <CyU3PUsbSendErdy+0xd4>
4001d650:	e59f0028 	ldr	r0, [pc, #40]	; 4001d680 <CyU3PUsbSendErdy+0xf0>
4001d654:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d658:	e3100008 	tst	r0, #8
4001d65c:	0a000000 	beq	4001d664 <CyU3PUsbSendErdy+0xd4>
4001d660:	e58d5008 	str	r5, [sp, #8]
4001d664:	e1a0000d 	mov	r0, sp
4001d668:	eb00123d 	bl	40021f64 <CyFx3Usb3SendTP>
4001d66c:	e3a00000 	mov	r0, #0
4001d670:	eaffffd5 	b	4001d5cc <CyU3PUsbSendErdy+0x3c>
4001d674:	40031d40 	.word	0x40031d40
4001d678:	e0033000 	.word	0xe0033000
4001d67c:	e0033500 	.word	0xe0033500
4001d680:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001d684 <CyU3PUsbSendNrdy>:
4001d684:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d688:	e1a04000 	mov	r4, r0
4001d68c:	e1a05001 	mov	r5, r1
4001d690:	e1a0000d 	mov	r0, sp
4001d694:	e3a02000 	mov	r2, #0
4001d698:	e1a03002 	mov	r3, r2
4001d69c:	e1a06002 	mov	r6, r2
4001d6a0:	e880004c 	stm	r0, {r2, r3, r6}
4001d6a4:	e204600f 	and	r6, r4, #15
4001d6a8:	e2047080 	and	r7, r4, #128	; 0x80
4001d6ac:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d764 <CyU3PUsbSendNrdy+0xe0>
4001d6b0:	e5d00008 	ldrb	r0, [r0, #8]
4001d6b4:	e3500000 	cmp	r0, #0
4001d6b8:	1a000001 	bne	4001d6c4 <CyU3PUsbSendNrdy+0x40>
4001d6bc:	e3a00042 	mov	r0, #66	; 0x42
4001d6c0:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d6c4:	ebfffd3f 	bl	4001cbc8 <CyU3PUsbGetSpeed>
4001d6c8:	e3500003 	cmp	r0, #3
4001d6cc:	1a000004 	bne	4001d6e4 <CyU3PUsbSendNrdy+0x60>
4001d6d0:	e59f0090 	ldr	r0, [pc, #144]	; 4001d768 <CyU3PUsbSendNrdy+0xe4>
4001d6d4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d6d8:	e200003f 	and	r0, r0, #63	; 0x3f
4001d6dc:	e3500010 	cmp	r0, #16
4001d6e0:	0a000001 	beq	4001d6ec <CyU3PUsbSendNrdy+0x68>
4001d6e4:	e3a000ff 	mov	r0, #255	; 0xff
4001d6e8:	eafffff4 	b	4001d6c0 <CyU3PUsbSendNrdy+0x3c>
4001d6ec:	e204007f 	and	r0, r4, #127	; 0x7f
4001d6f0:	e350000f 	cmp	r0, #15
4001d6f4:	da000001 	ble	4001d700 <CyU3PUsbSendNrdy+0x7c>
4001d6f8:	e3a00040 	mov	r0, #64	; 0x40
4001d6fc:	eaffffef 	b	4001d6c0 <CyU3PUsbSendNrdy+0x3c>
4001d700:	e59f0060 	ldr	r0, [pc, #96]	; 4001d768 <CyU3PUsbSendNrdy+0xe4>
4001d704:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001d708:	e3a01004 	mov	r1, #4
4001d70c:	e1810c80 	orr	r0, r1, r0, lsl #25
4001d710:	e58d0000 	str	r0, [sp]
4001d714:	e3870002 	orr	r0, r7, #2
4001d718:	e1800406 	orr	r0, r0, r6, lsl #8
4001d71c:	e58d0004 	str	r0, [sp, #4]
4001d720:	e3570000 	cmp	r7, #0
4001d724:	0a000005 	beq	4001d740 <CyU3PUsbSendNrdy+0xbc>
4001d728:	e59f003c 	ldr	r0, [pc, #60]	; 4001d76c <CyU3PUsbSendNrdy+0xe8>
4001d72c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d730:	e3100008 	tst	r0, #8
4001d734:	0a000006 	beq	4001d754 <CyU3PUsbSendNrdy+0xd0>
4001d738:	e58d5008 	str	r5, [sp, #8]
4001d73c:	ea000004 	b	4001d754 <CyU3PUsbSendNrdy+0xd0>
4001d740:	e59f0028 	ldr	r0, [pc, #40]	; 4001d770 <CyU3PUsbSendNrdy+0xec>
4001d744:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001d748:	e3100008 	tst	r0, #8
4001d74c:	0a000000 	beq	4001d754 <CyU3PUsbSendNrdy+0xd0>
4001d750:	e58d5008 	str	r5, [sp, #8]
4001d754:	e1a0000d 	mov	r0, sp
4001d758:	eb001201 	bl	40021f64 <CyFx3Usb3SendTP>
4001d75c:	e3a00000 	mov	r0, #0
4001d760:	eaffffd6 	b	4001d6c0 <CyU3PUsbSendNrdy+0x3c>
4001d764:	40031d40 	.word	0x40031d40
4001d768:	e0033000 	.word	0xe0033000
4001d76c:	e0033500 	.word	0xe0033500
4001d770:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001d774 <CyU3PUsbSetDesc>:
4001d774:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d778:	e1a03000 	mov	r3, r0
4001d77c:	e3a0c000 	mov	ip, #0
4001d780:	e59f01b8 	ldr	r0, [pc, #440]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d784:	e5d00008 	ldrb	r0, [r0, #8]
4001d788:	e3500000 	cmp	r0, #0
4001d78c:	1a000001 	bne	4001d798 <CyU3PUsbSetDesc+0x24>
4001d790:	e3a00042 	mov	r0, #66	; 0x42
4001d794:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d798:	e3520000 	cmp	r2, #0
4001d79c:	1a000001 	bne	4001d7a8 <CyU3PUsbSetDesc+0x34>
4001d7a0:	e3a00040 	mov	r0, #64	; 0x40
4001d7a4:	eafffffa 	b	4001d794 <CyU3PUsbSetDesc+0x20>
4001d7a8:	e3530009 	cmp	r3, #9
4001d7ac:	308ff103 	addcc	pc, pc, r3, lsl #2
4001d7b0:	ea00004d 	b	4001d8ec <CyU3PUsbSetDesc+0x178>
4001d7b4:	ea000007 	b	4001d7d8 <CyU3PUsbSetDesc+0x64>
4001d7b8:	ea00000a 	b	4001d7e8 <CyU3PUsbSetDesc+0x74>
4001d7bc:	ea000011 	b	4001d808 <CyU3PUsbSetDesc+0x94>
4001d7c0:	ea000022 	b	4001d850 <CyU3PUsbSetDesc+0xdc>
4001d7c4:	ea00002f 	b	4001d888 <CyU3PUsbSetDesc+0x114>
4001d7c8:	ea00003c 	b	4001d8c0 <CyU3PUsbSetDesc+0x14c>
4001d7cc:	ea000011 	b	4001d818 <CyU3PUsbSetDesc+0xa4>
4001d7d0:	ea000008 	b	4001d7f8 <CyU3PUsbSetDesc+0x84>
4001d7d4:	ea000040 	b	4001d8dc <CyU3PUsbSetDesc+0x168>
4001d7d8:	e1a00000 	nop			; (mov r0, r0)
4001d7dc:	e59f0160 	ldr	r0, [pc, #352]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d7e0:	e5802004 	str	r2, [r0, #4]
4001d7e4:	ea000043 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d7e8:	e1a00000 	nop			; (mov r0, r0)
4001d7ec:	e59f0150 	ldr	r0, [pc, #336]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d7f0:	e5802000 	str	r2, [r0]
4001d7f4:	ea00003f 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d7f8:	e1a00000 	nop			; (mov r0, r0)
4001d7fc:	e59f0140 	ldr	r0, [pc, #320]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d800:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001d804:	ea00003b 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d808:	e1a00000 	nop			; (mov r0, r0)
4001d80c:	e59f0130 	ldr	r0, [pc, #304]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d810:	e5802008 	str	r2, [r0, #8]
4001d814:	ea000037 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d818:	e1a00000 	nop			; (mov r0, r0)
4001d81c:	e59f0120 	ldr	r0, [pc, #288]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d820:	e580201c 	str	r2, [r0, #28]
4001d824:	e5d20007 	ldrb	r0, [r2, #7]
4001d828:	e3100040 	tst	r0, #64	; 0x40
4001d82c:	0a000003 	beq	4001d840 <CyU3PUsbSetDesc+0xcc>
4001d830:	e3a00001 	mov	r0, #1
4001d834:	e59fe104 	ldr	lr, [pc, #260]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d838:	e5ce0006 	strb	r0, [lr, #6]
4001d83c:	ea000002 	b	4001d84c <CyU3PUsbSetDesc+0xd8>
4001d840:	e3a00000 	mov	r0, #0
4001d844:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d848:	e5ce0006 	strb	r0, [lr, #6]
4001d84c:	ea000029 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d850:	e1a00000 	nop			; (mov r0, r0)
4001d854:	e59f00e8 	ldr	r0, [pc, #232]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d858:	e5802018 	str	r2, [r0, #24]
4001d85c:	e5d20007 	ldrb	r0, [r2, #7]
4001d860:	e3100040 	tst	r0, #64	; 0x40
4001d864:	0a000003 	beq	4001d878 <CyU3PUsbSetDesc+0x104>
4001d868:	e3a00001 	mov	r0, #1
4001d86c:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d870:	e5ce0006 	strb	r0, [lr, #6]
4001d874:	ea000002 	b	4001d884 <CyU3PUsbSetDesc+0x110>
4001d878:	e3a00000 	mov	r0, #0
4001d87c:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d880:	e5ce0006 	strb	r0, [lr, #6]
4001d884:	ea00001b 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d888:	e1a00000 	nop			; (mov r0, r0)
4001d88c:	e59f00b0 	ldr	r0, [pc, #176]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d890:	e5802014 	str	r2, [r0, #20]
4001d894:	e5d20007 	ldrb	r0, [r2, #7]
4001d898:	e3100040 	tst	r0, #64	; 0x40
4001d89c:	0a000003 	beq	4001d8b0 <CyU3PUsbSetDesc+0x13c>
4001d8a0:	e3a00001 	mov	r0, #1
4001d8a4:	e59fe094 	ldr	lr, [pc, #148]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d8a8:	e5ce0006 	strb	r0, [lr, #6]
4001d8ac:	ea000002 	b	4001d8bc <CyU3PUsbSetDesc+0x148>
4001d8b0:	e3a00000 	mov	r0, #0
4001d8b4:	e59fe084 	ldr	lr, [pc, #132]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d8b8:	e5ce0006 	strb	r0, [lr, #6]
4001d8bc:	ea00000d 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d8c0:	e1a00000 	nop			; (mov r0, r0)
4001d8c4:	e3510010 	cmp	r1, #16
4001d8c8:	da000000 	ble	4001d8d0 <CyU3PUsbSetDesc+0x15c>
4001d8cc:	e3a0c04b 	mov	ip, #75	; 0x4b
4001d8d0:	e59f0070 	ldr	r0, [pc, #112]	; 4001d948 <CyU3PUsbSetDesc+0x1d4>
4001d8d4:	e7802101 	str	r2, [r0, r1, lsl #2]
4001d8d8:	ea000006 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d8dc:	e1a00000 	nop			; (mov r0, r0)
4001d8e0:	e59f005c 	ldr	r0, [pc, #92]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d8e4:	e5802070 	str	r2, [r0, #112]	; 0x70
4001d8e8:	ea000002 	b	4001d8f8 <CyU3PUsbSetDesc+0x184>
4001d8ec:	e1a00000 	nop			; (mov r0, r0)
4001d8f0:	e3a00050 	mov	r0, #80	; 0x50
4001d8f4:	eaffffa6 	b	4001d794 <CyU3PUsbSetDesc+0x20>
4001d8f8:	e1a00000 	nop			; (mov r0, r0)
4001d8fc:	e59f0040 	ldr	r0, [pc, #64]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d900:	e5900000 	ldr	r0, [r0]
4001d904:	e3500000 	cmp	r0, #0
4001d908:	0a00000a 	beq	4001d938 <CyU3PUsbSetDesc+0x1c4>
4001d90c:	e59f0030 	ldr	r0, [pc, #48]	; 4001d944 <CyU3PUsbSetDesc+0x1d0>
4001d910:	e5900020 	ldr	r0, [r0, #32]
4001d914:	e3500000 	cmp	r0, #0
4001d918:	0a000006 	beq	4001d938 <CyU3PUsbSetDesc+0x1c4>
4001d91c:	e59f001c 	ldr	r0, [pc, #28]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d920:	e5d00008 	ldrb	r0, [r0, #8]
4001d924:	e3500003 	cmp	r0, #3
4001d928:	aa000002 	bge	4001d938 <CyU3PUsbSetDesc+0x1c4>
4001d92c:	e3a00003 	mov	r0, #3
4001d930:	e59fe008 	ldr	lr, [pc, #8]	; 4001d940 <CyU3PUsbSetDesc+0x1cc>
4001d934:	e5ce0008 	strb	r0, [lr, #8]
4001d938:	e1a0000c 	mov	r0, ip
4001d93c:	eaffff94 	b	4001d794 <CyU3PUsbSetDesc+0x20>
4001d940:	40031d40 	.word	0x40031d40
4001d944:	40031f98 	.word	0x40031f98
4001d948:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001d94c <CyU3PUsbSetEpNak>:
4001d94c:	e92d4070 	push	{r4, r5, r6, lr}
4001d950:	e1a04000 	mov	r4, r0
4001d954:	e1a06001 	mov	r6, r1
4001d958:	e59f0198 	ldr	r0, [pc, #408]	; 4001daf8 <CyU3PUsbSetEpNak+0x1ac>
4001d95c:	e5d00008 	ldrb	r0, [r0, #8]
4001d960:	e3500000 	cmp	r0, #0
4001d964:	1a000001 	bne	4001d970 <CyU3PUsbSetEpNak+0x24>
4001d968:	e3a00042 	mov	r0, #66	; 0x42
4001d96c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d970:	e204007f 	and	r0, r4, #127	; 0x7f
4001d974:	e350000f 	cmp	r0, #15
4001d978:	da000001 	ble	4001d984 <CyU3PUsbSetEpNak+0x38>
4001d97c:	e3a00040 	mov	r0, #64	; 0x40
4001d980:	eafffff9 	b	4001d96c <CyU3PUsbSetEpNak+0x20>
4001d984:	e3e01000 	mvn	r1, #0
4001d988:	e59f016c 	ldr	r0, [pc, #364]	; 4001dafc <CyU3PUsbSetEpNak+0x1b0>
4001d98c:	ebffb19c 	bl	4000a004 <_txe_mutex_get>
4001d990:	e3560000 	cmp	r6, #0
4001d994:	0a000028 	beq	4001da3c <CyU3PUsbSetEpNak+0xf0>
4001d998:	e3140080 	tst	r4, #128	; 0x80
4001d99c:	0a000012 	beq	4001d9ec <CyU3PUsbSetEpNak+0xa0>
4001d9a0:	e59f0150 	ldr	r0, [pc, #336]	; 4001daf8 <CyU3PUsbSetEpNak+0x1ac>
4001d9a4:	e5d00009 	ldrb	r0, [r0, #9]
4001d9a8:	e3500003 	cmp	r0, #3
4001d9ac:	1a000006 	bne	4001d9cc <CyU3PUsbSetEpNak+0x80>
4001d9b0:	e59f0148 	ldr	r0, [pc, #328]	; 4001db00 <CyU3PUsbSetEpNak+0x1b4>
4001d9b4:	e204100f 	and	r1, r4, #15
4001d9b8:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001d9bc:	e3855003 	orr	r5, r5, #3
4001d9c0:	e204100f 	and	r1, r4, #15
4001d9c4:	e7805101 	str	r5, [r0, r1, lsl #2]
4001d9c8:	ea000046 	b	4001dae8 <CyU3PUsbSetEpNak+0x19c>
4001d9cc:	e59f0130 	ldr	r0, [pc, #304]	; 4001db04 <CyU3PUsbSetEpNak+0x1b8>
4001d9d0:	e204100f 	and	r1, r4, #15
4001d9d4:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001d9d8:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001d9dc:	e59f1120 	ldr	r1, [pc, #288]	; 4001db04 <CyU3PUsbSetEpNak+0x1b8>
4001d9e0:	e204200f 	and	r2, r4, #15
4001d9e4:	e7810102 	str	r0, [r1, r2, lsl #2]
4001d9e8:	ea00003e 	b	4001dae8 <CyU3PUsbSetEpNak+0x19c>
4001d9ec:	e59f0104 	ldr	r0, [pc, #260]	; 4001daf8 <CyU3PUsbSetEpNak+0x1ac>
4001d9f0:	e5d00009 	ldrb	r0, [r0, #9]
4001d9f4:	e3500003 	cmp	r0, #3
4001d9f8:	1a000007 	bne	4001da1c <CyU3PUsbSetEpNak+0xd0>
4001d9fc:	e59f0104 	ldr	r0, [pc, #260]	; 4001db08 <CyU3PUsbSetEpNak+0x1bc>
4001da00:	e204100f 	and	r1, r4, #15
4001da04:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da08:	e3805003 	orr	r5, r0, #3
4001da0c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001db08 <CyU3PUsbSetEpNak+0x1bc>
4001da10:	e204100f 	and	r1, r4, #15
4001da14:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da18:	ea000032 	b	4001dae8 <CyU3PUsbSetEpNak+0x19c>
4001da1c:	e59f00e8 	ldr	r0, [pc, #232]	; 4001db0c <CyU3PUsbSetEpNak+0x1c0>
4001da20:	e204100f 	and	r1, r4, #15
4001da24:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da28:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001da2c:	e59f10d8 	ldr	r1, [pc, #216]	; 4001db0c <CyU3PUsbSetEpNak+0x1c0>
4001da30:	e204200f 	and	r2, r4, #15
4001da34:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da38:	ea00002a 	b	4001dae8 <CyU3PUsbSetEpNak+0x19c>
4001da3c:	e3140080 	tst	r4, #128	; 0x80
4001da40:	0a000014 	beq	4001da98 <CyU3PUsbSetEpNak+0x14c>
4001da44:	e59f00ac 	ldr	r0, [pc, #172]	; 4001daf8 <CyU3PUsbSetEpNak+0x1ac>
4001da48:	e5d00009 	ldrb	r0, [r0, #9]
4001da4c:	e3500003 	cmp	r0, #3
4001da50:	1a000008 	bne	4001da78 <CyU3PUsbSetEpNak+0x12c>
4001da54:	e59f00a4 	ldr	r0, [pc, #164]	; 4001db00 <CyU3PUsbSetEpNak+0x1b4>
4001da58:	e204100f 	and	r1, r4, #15
4001da5c:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001da60:	e3c50002 	bic	r0, r5, #2
4001da64:	e3805001 	orr	r5, r0, #1
4001da68:	e59f0090 	ldr	r0, [pc, #144]	; 4001db00 <CyU3PUsbSetEpNak+0x1b4>
4001da6c:	e204100f 	and	r1, r4, #15
4001da70:	e7805101 	str	r5, [r0, r1, lsl #2]
4001da74:	ea00001b 	b	4001dae8 <CyU3PUsbSetEpNak+0x19c>
4001da78:	e59f0084 	ldr	r0, [pc, #132]	; 4001db04 <CyU3PUsbSetEpNak+0x1b8>
4001da7c:	e204100f 	and	r1, r4, #15
4001da80:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001da84:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001da88:	e59f1074 	ldr	r1, [pc, #116]	; 4001db04 <CyU3PUsbSetEpNak+0x1b8>
4001da8c:	e204200f 	and	r2, r4, #15
4001da90:	e7810102 	str	r0, [r1, r2, lsl #2]
4001da94:	ea000013 	b	4001dae8 <CyU3PUsbSetEpNak+0x19c>
4001da98:	e59f0058 	ldr	r0, [pc, #88]	; 4001daf8 <CyU3PUsbSetEpNak+0x1ac>
4001da9c:	e5d00009 	ldrb	r0, [r0, #9]
4001daa0:	e3500003 	cmp	r0, #3
4001daa4:	1a000008 	bne	4001dacc <CyU3PUsbSetEpNak+0x180>
4001daa8:	e59f0058 	ldr	r0, [pc, #88]	; 4001db08 <CyU3PUsbSetEpNak+0x1bc>
4001daac:	e204100f 	and	r1, r4, #15
4001dab0:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dab4:	e3c00002 	bic	r0, r0, #2
4001dab8:	e3805001 	orr	r5, r0, #1
4001dabc:	e59f0044 	ldr	r0, [pc, #68]	; 4001db08 <CyU3PUsbSetEpNak+0x1bc>
4001dac0:	e204100f 	and	r1, r4, #15
4001dac4:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dac8:	ea000006 	b	4001dae8 <CyU3PUsbSetEpNak+0x19c>
4001dacc:	e59f0038 	ldr	r0, [pc, #56]	; 4001db0c <CyU3PUsbSetEpNak+0x1c0>
4001dad0:	e204100f 	and	r1, r4, #15
4001dad4:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dad8:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001dadc:	e59f1028 	ldr	r1, [pc, #40]	; 4001db0c <CyU3PUsbSetEpNak+0x1c0>
4001dae0:	e204200f 	and	r2, r4, #15
4001dae4:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dae8:	e59f000c 	ldr	r0, [pc, #12]	; 4001dafc <CyU3PUsbSetEpNak+0x1b0>
4001daec:	ebffb179 	bl	4000a0d8 <_txe_mutex_put>
4001daf0:	e3a00000 	mov	r0, #0
4001daf4:	eaffff9c 	b	4001d96c <CyU3PUsbSetEpNak+0x20>
4001daf8:	40031d40 	.word	0x40031d40
4001dafc:	40031ee0 	.word	0x40031ee0
4001db00:	e0033500 	.word	0xe0033500
4001db04:	e0031418 	.word	0xe0031418
4001db08:	e0033600 	.word	0xe0033600
4001db0c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001db10 <CyU3PUsbSetLinkPowerState>:
4001db10:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001db14:	e1a01000 	mov	r1, r0
4001db18:	e3a030ff 	mov	r3, #255	; 0xff
4001db1c:	e59f0138 	ldr	r0, [pc, #312]	; 4001dc5c <CyU3PUsbSetLinkPowerState+0x14c>
4001db20:	e5d00008 	ldrb	r0, [r0, #8]
4001db24:	e3500000 	cmp	r0, #0
4001db28:	1a000001 	bne	4001db34 <CyU3PUsbSetLinkPowerState+0x24>
4001db2c:	e3a00042 	mov	r0, #66	; 0x42
4001db30:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001db34:	e59f0120 	ldr	r0, [pc, #288]	; 4001dc5c <CyU3PUsbSetLinkPowerState+0x14c>
4001db38:	e5d00008 	ldrb	r0, [r0, #8]
4001db3c:	e3500005 	cmp	r0, #5
4001db40:	aa000001 	bge	4001db4c <CyU3PUsbSetLinkPowerState+0x3c>
4001db44:	e3a00044 	mov	r0, #68	; 0x44
4001db48:	eafffff8 	b	4001db30 <CyU3PUsbSetLinkPowerState+0x20>
4001db4c:	ebfffc1d 	bl	4001cbc8 <CyU3PUsbGetSpeed>
4001db50:	e3500003 	cmp	r0, #3
4001db54:	0a000001 	beq	4001db60 <CyU3PUsbSetLinkPowerState+0x50>
4001db58:	e3a000ff 	mov	r0, #255	; 0xff
4001db5c:	eafffff3 	b	4001db30 <CyU3PUsbSetLinkPowerState+0x20>
4001db60:	e59f00f8 	ldr	r0, [pc, #248]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001db64:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db68:	e200203f 	and	r2, r0, #63	; 0x3f
4001db6c:	e3510000 	cmp	r1, #0
4001db70:	0a000004 	beq	4001db88 <CyU3PUsbSetLinkPowerState+0x78>
4001db74:	e3510001 	cmp	r1, #1
4001db78:	0a000015 	beq	4001dbd4 <CyU3PUsbSetLinkPowerState+0xc4>
4001db7c:	e3510002 	cmp	r1, #2
4001db80:	1a00002f 	bne	4001dc44 <CyU3PUsbSetLinkPowerState+0x134>
4001db84:	ea000020 	b	4001dc0c <CyU3PUsbSetLinkPowerState+0xfc>
4001db88:	e1a00000 	nop			; (mov r0, r0)
4001db8c:	e59f00cc 	ldr	r0, [pc, #204]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001db90:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001db94:	e3100c02 	tst	r0, #512	; 0x200
4001db98:	1a00000b 	bne	4001dbcc <CyU3PUsbSetLinkPowerState+0xbc>
4001db9c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001dba0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dba4:	e200203f 	and	r2, r0, #63	; 0x3f
4001dba8:	e3520011 	cmp	r2, #17
4001dbac:	ba000006 	blt	4001dbcc <CyU3PUsbSetLinkPowerState+0xbc>
4001dbb0:	e3520013 	cmp	r2, #19
4001dbb4:	ca000004 	bgt	4001dbcc <CyU3PUsbSetLinkPowerState+0xbc>
4001dbb8:	e59f00a0 	ldr	r0, [pc, #160]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001dbbc:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dbc0:	e3800c02 	orr	r0, r0, #512	; 0x200
4001dbc4:	e59fc094 	ldr	ip, [pc, #148]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001dbc8:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dbcc:	e3a03000 	mov	r3, #0
4001dbd0:	ea00001e 	b	4001dc50 <CyU3PUsbSetLinkPowerState+0x140>
4001dbd4:	e1a00000 	nop			; (mov r0, r0)
4001dbd8:	e3520010 	cmp	r2, #16
4001dbdc:	1a000009 	bne	4001dc08 <CyU3PUsbSetLinkPowerState+0xf8>
4001dbe0:	e59f0074 	ldr	r0, [pc, #116]	; 4001dc5c <CyU3PUsbSetLinkPowerState+0x14c>
4001dbe4:	e5d00006 	ldrb	r0, [r0, #6]
4001dbe8:	e3100004 	tst	r0, #4
4001dbec:	0a000005 	beq	4001dc08 <CyU3PUsbSetLinkPowerState+0xf8>
4001dbf0:	e59f0068 	ldr	r0, [pc, #104]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001dbf4:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dbf8:	e3800001 	orr	r0, r0, #1
4001dbfc:	e59fc05c 	ldr	ip, [pc, #92]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001dc00:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dc04:	e3a03000 	mov	r3, #0
4001dc08:	ea000010 	b	4001dc50 <CyU3PUsbSetLinkPowerState+0x140>
4001dc0c:	e1a00000 	nop			; (mov r0, r0)
4001dc10:	e3520010 	cmp	r2, #16
4001dc14:	1a000009 	bne	4001dc40 <CyU3PUsbSetLinkPowerState+0x130>
4001dc18:	e59f003c 	ldr	r0, [pc, #60]	; 4001dc5c <CyU3PUsbSetLinkPowerState+0x14c>
4001dc1c:	e5d00006 	ldrb	r0, [r0, #6]
4001dc20:	e3100008 	tst	r0, #8
4001dc24:	0a000005 	beq	4001dc40 <CyU3PUsbSetLinkPowerState+0x130>
4001dc28:	e59f0030 	ldr	r0, [pc, #48]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001dc2c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dc30:	e3800002 	orr	r0, r0, #2
4001dc34:	e59fc024 	ldr	ip, [pc, #36]	; 4001dc60 <CyU3PUsbSetLinkPowerState+0x150>
4001dc38:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dc3c:	e3a03000 	mov	r3, #0
4001dc40:	ea000002 	b	4001dc50 <CyU3PUsbSetLinkPowerState+0x140>
4001dc44:	e1a00000 	nop			; (mov r0, r0)
4001dc48:	e3a03040 	mov	r3, #64	; 0x40
4001dc4c:	e1a00000 	nop			; (mov r0, r0)
4001dc50:	e1a00000 	nop			; (mov r0, r0)
4001dc54:	e1a00003 	mov	r0, r3
4001dc58:	eaffffb4 	b	4001db30 <CyU3PUsbSetLinkPowerState+0x20>
4001dc5c:	40031d40 	.word	0x40031d40
4001dc60:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001dc64 <CyU3PUsbStall>:
4001dc64:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001dc68:	e1a04000 	mov	r4, r0
4001dc6c:	e1a05001 	mov	r5, r1
4001dc70:	e1a06002 	mov	r6, r2
4001dc74:	e204700f 	and	r7, r4, #15
4001dc78:	e3a08000 	mov	r8, #0
4001dc7c:	e59f0344 	ldr	r0, [pc, #836]	; 4001dfc8 <CyU3PUsbStall+0x364>
4001dc80:	e5d00008 	ldrb	r0, [r0, #8]
4001dc84:	e3500000 	cmp	r0, #0
4001dc88:	1a000001 	bne	4001dc94 <CyU3PUsbStall+0x30>
4001dc8c:	e3a00042 	mov	r0, #66	; 0x42
4001dc90:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001dc94:	e204007f 	and	r0, r4, #127	; 0x7f
4001dc98:	e350000f 	cmp	r0, #15
4001dc9c:	da000001 	ble	4001dca8 <CyU3PUsbStall+0x44>
4001dca0:	e3a00040 	mov	r0, #64	; 0x40
4001dca4:	eafffff9 	b	4001dc90 <CyU3PUsbStall+0x2c>
4001dca8:	e3570000 	cmp	r7, #0
4001dcac:	1a000003 	bne	4001dcc0 <CyU3PUsbStall+0x5c>
4001dcb0:	e3550000 	cmp	r5, #0
4001dcb4:	1a000001 	bne	4001dcc0 <CyU3PUsbStall+0x5c>
4001dcb8:	e3a00040 	mov	r0, #64	; 0x40
4001dcbc:	eafffff3 	b	4001dc90 <CyU3PUsbStall+0x2c>
4001dcc0:	e59f0300 	ldr	r0, [pc, #768]	; 4001dfc8 <CyU3PUsbStall+0x364>
4001dcc4:	e5d00009 	ldrb	r0, [r0, #9]
4001dcc8:	e3500000 	cmp	r0, #0
4001dccc:	1a000001 	bne	4001dcd8 <CyU3PUsbStall+0x74>
4001dcd0:	e3a00000 	mov	r0, #0
4001dcd4:	eaffffed 	b	4001dc90 <CyU3PUsbStall+0x2c>
4001dcd8:	e3e01000 	mvn	r1, #0
4001dcdc:	e59f02e8 	ldr	r0, [pc, #744]	; 4001dfcc <CyU3PUsbStall+0x368>
4001dce0:	ebffb0c7 	bl	4000a004 <_txe_mutex_get>
4001dce4:	e3570000 	cmp	r7, #0
4001dce8:	1a000037 	bne	4001ddcc <CyU3PUsbStall+0x168>
4001dcec:	ebfffbbd 	bl	4001cbe8 <CyU3PUsbIsNewCtrlRqtRecvd>
4001dcf0:	e3500000 	cmp	r0, #0
4001dcf4:	0a000003 	beq	4001dd08 <CyU3PUsbStall+0xa4>
4001dcf8:	e59f02cc 	ldr	r0, [pc, #716]	; 4001dfcc <CyU3PUsbStall+0x368>
4001dcfc:	ebffb0f5 	bl	4000a0d8 <_txe_mutex_put>
4001dd00:	e3a00000 	mov	r0, #0
4001dd04:	eaffffe1 	b	4001dc90 <CyU3PUsbStall+0x2c>
4001dd08:	e59f02b8 	ldr	r0, [pc, #696]	; 4001dfc8 <CyU3PUsbStall+0x364>
4001dd0c:	e5d00009 	ldrb	r0, [r0, #9]
4001dd10:	e3500003 	cmp	r0, #3
4001dd14:	1a00001b 	bne	4001dd88 <CyU3PUsbStall+0x124>
4001dd18:	e59f02b0 	ldr	r0, [pc, #688]	; 4001dfd0 <CyU3PUsbStall+0x36c>
4001dd1c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001dd20:	e3800004 	orr	r0, r0, #4
4001dd24:	e59f12a4 	ldr	r1, [pc, #676]	; 4001dfd0 <CyU3PUsbStall+0x36c>
4001dd28:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001dd2c:	e1a00001 	mov	r0, r1
4001dd30:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001dd34:	e3800004 	orr	r0, r0, #4
4001dd38:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001dd3c:	eb00104b 	bl	40021e70 <CyU3PVicDisableAllInterrupts>
4001dd40:	e1a0a000 	mov	sl, r0
4001dd44:	e3a00001 	mov	r0, #1
4001dd48:	ebffd5ce 	bl	40013488 <CyU3PBusyWait>
4001dd4c:	e59f027c 	ldr	r0, [pc, #636]	; 4001dfd0 <CyU3PUsbStall+0x36c>
4001dd50:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001dd54:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd58:	e59f1270 	ldr	r1, [pc, #624]	; 4001dfd0 <CyU3PUsbStall+0x36c>
4001dd5c:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001dd60:	e1a0000a 	mov	r0, sl
4001dd64:	eb00104f 	bl	40021ea8 <CyU3PVicEnableInterrupts>
4001dd68:	e3a00000 	mov	r0, #0
4001dd6c:	e59f1260 	ldr	r1, [pc, #608]	; 4001dfd4 <CyU3PUsbStall+0x370>
4001dd70:	e5810000 	str	r0, [r1]
4001dd74:	e59f125c 	ldr	r1, [pc, #604]	; 4001dfd8 <CyU3PUsbStall+0x374>
4001dd78:	e5810000 	str	r0, [r1]
4001dd7c:	e59f0258 	ldr	r0, [pc, #600]	; 4001dfdc <CyU3PUsbStall+0x378>
4001dd80:	ebffb381 	bl	4000ab8c <_txe_timer_deactivate>
4001dd84:	ea00000c 	b	4001ddbc <CyU3PUsbStall+0x158>
4001dd88:	e59f0250 	ldr	r0, [pc, #592]	; 4001dfe0 <CyU3PUsbStall+0x37c>
4001dd8c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001dd90:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dd94:	e59f1244 	ldr	r1, [pc, #580]	; 4001dfe0 <CyU3PUsbStall+0x37c>
4001dd98:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001dd9c:	e1a00001 	mov	r0, r1
4001dda0:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001dda4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dda8:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001ddac:	e1a00001 	mov	r0, r1
4001ddb0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001ddb4:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001ddb8:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001ddbc:	e59f0208 	ldr	r0, [pc, #520]	; 4001dfcc <CyU3PUsbStall+0x368>
4001ddc0:	ebffb0c4 	bl	4000a0d8 <_txe_mutex_put>
4001ddc4:	e3a00000 	mov	r0, #0
4001ddc8:	eaffffb0 	b	4001dc90 <CyU3PUsbStall+0x2c>
4001ddcc:	e59f01f4 	ldr	r0, [pc, #500]	; 4001dfc8 <CyU3PUsbStall+0x364>
4001ddd0:	e5d00009 	ldrb	r0, [r0, #9]
4001ddd4:	e3500003 	cmp	r0, #3
4001ddd8:	1a000033 	bne	4001deac <CyU3PUsbStall+0x248>
4001dddc:	e3140080 	tst	r4, #128	; 0x80
4001dde0:	0a000017 	beq	4001de44 <CyU3PUsbStall+0x1e0>
4001dde4:	e3550000 	cmp	r5, #0
4001dde8:	0a00000a 	beq	4001de18 <CyU3PUsbStall+0x1b4>
4001ddec:	e59f01f0 	ldr	r0, [pc, #496]	; 4001dfe4 <CyU3PUsbStall+0x380>
4001ddf0:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001ddf4:	e3899005 	orr	r9, r9, #5
4001ddf8:	e7809107 	str	r9, [r0, r7, lsl #2]
4001ddfc:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001de00:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de04:	e1a01800 	lsl	r1, r0, #16
4001de08:	e1a01821 	lsr	r1, r1, #16
4001de0c:	e1a00004 	mov	r0, r4
4001de10:	ebfffdde 	bl	4001d590 <CyU3PUsbSendErdy>
4001de14:	ea000041 	b	4001df20 <CyU3PUsbStall+0x2bc>
4001de18:	e59f01c4 	ldr	r0, [pc, #452]	; 4001dfe4 <CyU3PUsbStall+0x380>
4001de1c:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001de20:	e3899011 	orr	r9, r9, #17
4001de24:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de28:	e3a00001 	mov	r0, #1
4001de2c:	ebffd595 	bl	40013488 <CyU3PBusyWait>
4001de30:	e3c90014 	bic	r0, r9, #20
4001de34:	e3809001 	orr	r9, r0, #1
4001de38:	e59f01a4 	ldr	r0, [pc, #420]	; 4001dfe4 <CyU3PUsbStall+0x380>
4001de3c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de40:	ea000036 	b	4001df20 <CyU3PUsbStall+0x2bc>
4001de44:	e3550000 	cmp	r5, #0
4001de48:	0a00000b 	beq	4001de7c <CyU3PUsbStall+0x218>
4001de4c:	e59f0194 	ldr	r0, [pc, #404]	; 4001dfe8 <CyU3PUsbStall+0x384>
4001de50:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de54:	e3809005 	orr	r9, r0, #5
4001de58:	e59f0188 	ldr	r0, [pc, #392]	; 4001dfe8 <CyU3PUsbStall+0x384>
4001de5c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de60:	e28000c0 	add	r0, r0, #192	; 0xc0
4001de64:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de68:	e1a01800 	lsl	r1, r0, #16
4001de6c:	e1a01821 	lsr	r1, r1, #16
4001de70:	e1a00004 	mov	r0, r4
4001de74:	ebfffdc5 	bl	4001d590 <CyU3PUsbSendErdy>
4001de78:	ea000028 	b	4001df20 <CyU3PUsbStall+0x2bc>
4001de7c:	e59f0164 	ldr	r0, [pc, #356]	; 4001dfe8 <CyU3PUsbStall+0x384>
4001de80:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001de84:	e3809011 	orr	r9, r0, #17
4001de88:	e59f0158 	ldr	r0, [pc, #344]	; 4001dfe8 <CyU3PUsbStall+0x384>
4001de8c:	e7809107 	str	r9, [r0, r7, lsl #2]
4001de90:	e3a00001 	mov	r0, #1
4001de94:	ebffd57b 	bl	40013488 <CyU3PBusyWait>
4001de98:	e3c90014 	bic	r0, r9, #20
4001de9c:	e3809001 	orr	r9, r0, #1
4001dea0:	e59f0140 	ldr	r0, [pc, #320]	; 4001dfe8 <CyU3PUsbStall+0x384>
4001dea4:	e7809107 	str	r9, [r0, r7, lsl #2]
4001dea8:	ea00001c 	b	4001df20 <CyU3PUsbStall+0x2bc>
4001deac:	e3140080 	tst	r4, #128	; 0x80
4001deb0:	0a00000d 	beq	4001deec <CyU3PUsbStall+0x288>
4001deb4:	e3550000 	cmp	r5, #0
4001deb8:	0a000005 	beq	4001ded4 <CyU3PUsbStall+0x270>
4001debc:	e59f0128 	ldr	r0, [pc, #296]	; 4001dfec <CyU3PUsbStall+0x388>
4001dec0:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dec4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001dec8:	e59f111c 	ldr	r1, [pc, #284]	; 4001dfec <CyU3PUsbStall+0x388>
4001decc:	e7810107 	str	r0, [r1, r7, lsl #2]
4001ded0:	ea000012 	b	4001df20 <CyU3PUsbStall+0x2bc>
4001ded4:	e59f0110 	ldr	r0, [pc, #272]	; 4001dfec <CyU3PUsbStall+0x388>
4001ded8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001dedc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001dee0:	e59f1104 	ldr	r1, [pc, #260]	; 4001dfec <CyU3PUsbStall+0x388>
4001dee4:	e7810107 	str	r0, [r1, r7, lsl #2]
4001dee8:	ea00000c 	b	4001df20 <CyU3PUsbStall+0x2bc>
4001deec:	e3550000 	cmp	r5, #0
4001def0:	0a000005 	beq	4001df0c <CyU3PUsbStall+0x2a8>
4001def4:	e59f00f4 	ldr	r0, [pc, #244]	; 4001dff0 <CyU3PUsbStall+0x38c>
4001def8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001defc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001df00:	e59f10e8 	ldr	r1, [pc, #232]	; 4001dff0 <CyU3PUsbStall+0x38c>
4001df04:	e7810107 	str	r0, [r1, r7, lsl #2]
4001df08:	ea000004 	b	4001df20 <CyU3PUsbStall+0x2bc>
4001df0c:	e59f00dc 	ldr	r0, [pc, #220]	; 4001dff0 <CyU3PUsbStall+0x38c>
4001df10:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001df14:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001df18:	e59f10d0 	ldr	r1, [pc, #208]	; 4001dff0 <CyU3PUsbStall+0x38c>
4001df1c:	e7810107 	str	r0, [r1, r7, lsl #2]
4001df20:	e3560000 	cmp	r6, #0
4001df24:	0a000023 	beq	4001dfb8 <CyU3PUsbStall+0x354>
4001df28:	e3550000 	cmp	r5, #0
4001df2c:	1a000021 	bne	4001dfb8 <CyU3PUsbStall+0x354>
4001df30:	e59f0090 	ldr	r0, [pc, #144]	; 4001dfc8 <CyU3PUsbStall+0x364>
4001df34:	e5d00009 	ldrb	r0, [r0, #9]
4001df38:	e3500003 	cmp	r0, #3
4001df3c:	1a00000b 	bne	4001df70 <CyU3PUsbStall+0x30c>
4001df40:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001df44:	e3140080 	tst	r4, #128	; 0x80
4001df48:	0a000000 	beq	4001df50 <CyU3PUsbStall+0x2ec>
4001df4c:	e3888010 	orr	r8, r8, #16
4001df50:	e59f0078 	ldr	r0, [pc, #120]	; 4001dfd0 <CyU3PUsbStall+0x36c>
4001df54:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001df58:	e1a00000 	nop			; (mov r0, r0)
4001df5c:	e59f006c 	ldr	r0, [pc, #108]	; 4001dfd0 <CyU3PUsbStall+0x36c>
4001df60:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001df64:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001df68:	0afffffb 	beq	4001df5c <CyU3PUsbStall+0x2f8>
4001df6c:	ea000011 	b	4001dfb8 <CyU3PUsbStall+0x354>
4001df70:	e3140080 	tst	r4, #128	; 0x80
4001df74:	0a000000 	beq	4001df7c <CyU3PUsbStall+0x318>
4001df78:	e3877010 	orr	r7, r7, #16
4001df7c:	e59f005c 	ldr	r0, [pc, #92]	; 4001dfe0 <CyU3PUsbStall+0x37c>
4001df80:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001df84:	e1a00000 	nop			; (mov r0, r0)
4001df88:	e59f0050 	ldr	r0, [pc, #80]	; 4001dfe0 <CyU3PUsbStall+0x37c>
4001df8c:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001df90:	e3100c01 	tst	r0, #256	; 0x100
4001df94:	0afffffb 	beq	4001df88 <CyU3PUsbStall+0x324>
4001df98:	e3877020 	orr	r7, r7, #32
4001df9c:	e59f003c 	ldr	r0, [pc, #60]	; 4001dfe0 <CyU3PUsbStall+0x37c>
4001dfa0:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001dfa4:	e1a00000 	nop			; (mov r0, r0)
4001dfa8:	e59f0030 	ldr	r0, [pc, #48]	; 4001dfe0 <CyU3PUsbStall+0x37c>
4001dfac:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001dfb0:	e3100c01 	tst	r0, #256	; 0x100
4001dfb4:	0afffffb 	beq	4001dfa8 <CyU3PUsbStall+0x344>
4001dfb8:	e59f000c 	ldr	r0, [pc, #12]	; 4001dfcc <CyU3PUsbStall+0x368>
4001dfbc:	ebffb045 	bl	4000a0d8 <_txe_mutex_put>
4001dfc0:	e3a00000 	mov	r0, #0
4001dfc4:	eaffff31 	b	4001dc90 <CyU3PUsbStall+0x2c>
4001dfc8:	40031d40 	.word	0x40031d40
4001dfcc:	40031ee0 	.word	0x40031ee0
4001dfd0:	e0033000 	.word	0xe0033000
4001dfd4:	40030db0 	.word	0x40030db0
4001dfd8:	40030db4 	.word	0x40030db4
4001dfdc:	400326a0 	.word	0x400326a0
4001dfe0:	e0031000 	.word	0xe0031000
4001dfe4:	e0033500 	.word	0xe0033500
4001dfe8:	e0033600 	.word	0xe0033600
4001dfec:	e0031418 	.word	0xe0031418
4001dff0:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001dff4 <CyU3PUsbStart>:
4001dff4:	e92d4070 	push	{r4, r5, r6, lr}
4001dff8:	e59f0324 	ldr	r0, [pc, #804]	; 4001e324 <CyU3PUsbStart+0x330>
4001dffc:	e5900000 	ldr	r0, [r0]
4001e000:	e3500000 	cmp	r0, #0
4001e004:	1a000001 	bne	4001e010 <CyU3PUsbStart+0x1c>
4001e008:	e3a00010 	mov	r0, #16
4001e00c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e010:	e59f0310 	ldr	r0, [pc, #784]	; 4001e328 <CyU3PUsbStart+0x334>
4001e014:	e5d00008 	ldrb	r0, [r0, #8]
4001e018:	e3500000 	cmp	r0, #0
4001e01c:	0a000001 	beq	4001e028 <CyU3PUsbStart+0x34>
4001e020:	e3a00043 	mov	r0, #67	; 0x43
4001e024:	eafffff8 	b	4001e00c <CyU3PUsbStart+0x18>
4001e028:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e32c <CyU3PUsbStart+0x338>
4001e02c:	e5900000 	ldr	r0, [r0]
4001e030:	e3500000 	cmp	r0, #0
4001e034:	0a00006b 	beq	4001e1e8 <CyU3PUsbStart+0x1f4>
4001e038:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e330 <CyU3PUsbStart+0x33c>
4001e03c:	eb00059e 	bl	4001f6bc <CyU3PUibSocketInit>
4001e040:	ebfff98c 	bl	4001c678 <CyU3PUsbCreateDmaChannels>
4001e044:	e1a04000 	mov	r4, r0
4001e048:	e3540000 	cmp	r4, #0
4001e04c:	0a000001 	beq	4001e058 <CyU3PUsbStart+0x64>
4001e050:	e1a00004 	mov	r0, r4
4001e054:	eaffffec 	b	4001e00c <CyU3PUsbStart+0x18>
4001e058:	e3a00001 	mov	r0, #1
4001e05c:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e328 <CyU3PUsbStart+0x334>
4001e060:	e5c10008 	strb	r0, [r1, #8]
4001e064:	e5950004 	ldr	r0, [r5, #4]
4001e068:	e5c10009 	strb	r0, [r1, #9]
4001e06c:	e1a00005 	mov	r0, r5
4001e070:	ebfffaef 	bl	4001cc34 <CyU3PUsbLoadBootloaderDescs>
4001e074:	e1a04000 	mov	r4, r0
4001e078:	e3540000 	cmp	r4, #0
4001e07c:	0a000001 	beq	4001e088 <CyU3PUsbStart+0x94>
4001e080:	e1a00004 	mov	r0, r4
4001e084:	eaffffe0 	b	4001e00c <CyU3PUsbStart+0x18>
4001e088:	e3a00006 	mov	r0, #6
4001e08c:	e59f1294 	ldr	r1, [pc, #660]	; 4001e328 <CyU3PUsbStart+0x334>
4001e090:	e5c10008 	strb	r0, [r1, #8]
4001e094:	e2810000 	add	r0, r1, #0
4001e098:	e5d00009 	ldrb	r0, [r0, #9]
4001e09c:	e3500003 	cmp	r0, #3
4001e0a0:	1a000002 	bne	4001e0b0 <CyU3PUsbStart+0xbc>
4001e0a4:	e3a00001 	mov	r0, #1
4001e0a8:	e59f1284 	ldr	r1, [pc, #644]	; 4001e334 <CyU3PUsbStart+0x340>
4001e0ac:	e5810000 	str	r0, [r1]
4001e0b0:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e0b4:	e59f127c 	ldr	r1, [pc, #636]	; 4001e338 <CyU3PUsbStart+0x344>
4001e0b8:	e1500001 	cmp	r0, r1
4001e0bc:	1a000015 	bne	4001e118 <CyU3PUsbStart+0x124>
4001e0c0:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e0c4:	e59f1270 	ldr	r1, [pc, #624]	; 4001e33c <CyU3PUsbStart+0x348>
4001e0c8:	e1500001 	cmp	r0, r1
4001e0cc:	3a000007 	bcc	4001e0f0 <CyU3PUsbStart+0xfc>
4001e0d0:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e0d4:	e3500000 	cmp	r0, #0
4001e0d8:	0a000001 	beq	4001e0e4 <CyU3PUsbStart+0xf0>
4001e0dc:	e3a00001 	mov	r0, #1
4001e0e0:	ea000000 	b	4001e0e8 <CyU3PUsbStart+0xf4>
4001e0e4:	e3a00000 	mov	r0, #0
4001e0e8:	e59f1238 	ldr	r1, [pc, #568]	; 4001e328 <CyU3PUsbStart+0x334>
4001e0ec:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e0f0:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e0f4:	e59f1244 	ldr	r1, [pc, #580]	; 4001e340 <CyU3PUsbStart+0x34c>
4001e0f8:	e1500001 	cmp	r0, r1
4001e0fc:	3a000008 	bcc	4001e124 <CyU3PUsbStart+0x130>
4001e100:	e59f023c 	ldr	r0, [pc, #572]	; 4001e344 <CyU3PUsbStart+0x350>
4001e104:	e5900000 	ldr	r0, [r0]
4001e108:	e3800002 	orr	r0, r0, #2
4001e10c:	e59f1230 	ldr	r1, [pc, #560]	; 4001e344 <CyU3PUsbStart+0x350>
4001e110:	e5810000 	str	r0, [r1]
4001e114:	ea000002 	b	4001e124 <CyU3PUsbStart+0x130>
4001e118:	e3a00001 	mov	r0, #1
4001e11c:	e59f1204 	ldr	r1, [pc, #516]	; 4001e328 <CyU3PUsbStart+0x334>
4001e120:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e124:	e3e00000 	mvn	r0, #0
4001e128:	e59f1218 	ldr	r1, [pc, #536]	; 4001e348 <CyU3PUsbStart+0x354>
4001e12c:	e5810004 	str	r0, [r1, #4]
4001e130:	e59f0214 	ldr	r0, [pc, #532]	; 4001e34c <CyU3PUsbStart+0x358>
4001e134:	e5810008 	str	r0, [r1, #8]
4001e138:	e3e00000 	mvn	r0, #0
4001e13c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e140:	e59f0208 	ldr	r0, [pc, #520]	; 4001e350 <CyU3PUsbStart+0x35c>
4001e144:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e148:	e3a00000 	mov	r0, #0
4001e14c:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e150:	e3e00000 	mvn	r0, #0
4001e154:	e0811680 	add	r1, r1, r0, lsl #13
4001e158:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e15c:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e354 <CyU3PUsbStart+0x360>
4001e160:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e164:	e3e00000 	mvn	r0, #0
4001e168:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e16c:	e3a00000 	mov	r0, #0
4001e170:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e174:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e178:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e17c:	e5810004 	str	r0, [r1, #4]
4001e180:	e3a00008 	mov	r0, #8
4001e184:	eb000f42 	bl	40021e94 <CyU3PVicEnableInt>
4001e188:	e3a00009 	mov	r0, #9
4001e18c:	eb000f40 	bl	40021e94 <CyU3PVicEnableInt>
4001e190:	ebfffa8c 	bl	4001cbc8 <CyU3PUsbGetSpeed>
4001e194:	e1a06000 	mov	r6, r0
4001e198:	eb0006b5 	bl	4001fc74 <CyU3PUsbEpPrepare>
4001e19c:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e344 <CyU3PUsbStart+0x350>
4001e1a0:	e5900000 	ldr	r0, [r0]
4001e1a4:	e3100002 	tst	r0, #2
4001e1a8:	1a000003 	bne	4001e1bc <CyU3PUsbStart+0x1c8>
4001e1ac:	e3e00000 	mvn	r0, #0
4001e1b0:	e5850000 	str	r0, [r5]
4001e1b4:	e3a00000 	mov	r0, #0
4001e1b8:	e585000c 	str	r0, [r5, #12]
4001e1bc:	e3e00000 	mvn	r0, #0
4001e1c0:	e59f1190 	ldr	r1, [pc, #400]	; 4001e358 <CyU3PUsbStart+0x364>
4001e1c4:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e1c8:	e3a00b01 	mov	r0, #1024	; 0x400
4001e1cc:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e1d0:	e59f1150 	ldr	r1, [pc, #336]	; 4001e328 <CyU3PUsbStart+0x334>
4001e1d4:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e1d8:	e3a00015 	mov	r0, #21
4001e1dc:	eb000f2c 	bl	40021e94 <CyU3PVicEnableInt>
4001e1e0:	e3a000fe 	mov	r0, #254	; 0xfe
4001e1e4:	eaffff88 	b	4001e00c <CyU3PUsbStart+0x18>
4001e1e8:	e1a00000 	nop			; (mov r0, r0)
4001e1ec:	e59f0168 	ldr	r0, [pc, #360]	; 4001e35c <CyU3PUsbStart+0x368>
4001e1f0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e1f4:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e1f8:	e59f115c 	ldr	r1, [pc, #348]	; 4001e35c <CyU3PUsbStart+0x368>
4001e1fc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e200:	e3a00002 	mov	r0, #2
4001e204:	ebffd49f 	bl	40013488 <CyU3PBusyWait>
4001e208:	e59f014c 	ldr	r0, [pc, #332]	; 4001e35c <CyU3PUsbStart+0x368>
4001e20c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e210:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e214:	e59f1140 	ldr	r1, [pc, #320]	; 4001e35c <CyU3PUsbStart+0x368>
4001e218:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e21c:	e1a00001 	mov	r0, r1
4001e220:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e224:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e228:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e22c:	e1a00001 	mov	r0, r1
4001e230:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e234:	e3800008 	orr	r0, r0, #8
4001e238:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e23c:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e240:	e5900008 	ldr	r0, [r0, #8]
4001e244:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e248:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e24c:	e5810008 	str	r0, [r1, #8]
4001e250:	e3a00002 	mov	r0, #2
4001e254:	ebffd48b 	bl	40013488 <CyU3PBusyWait>
4001e258:	ebfff645 	bl	4001bb74 <CyU3POtgIsDeviceMode>
4001e25c:	e3500000 	cmp	r0, #0
4001e260:	0a000002 	beq	4001e270 <CyU3PUsbStart+0x27c>
4001e264:	ebfffa5b 	bl	4001cbd8 <CyU3PUsbHostIsStarted>
4001e268:	e3500000 	cmp	r0, #0
4001e26c:	0a000001 	beq	4001e278 <CyU3PUsbStart+0x284>
4001e270:	e3a00047 	mov	r0, #71	; 0x47
4001e274:	eaffff64 	b	4001e00c <CyU3PUsbStart+0x18>
4001e278:	e3a01002 	mov	r1, #2
4001e27c:	e1a00001 	mov	r0, r1
4001e280:	ebfff820 	bl	4001c308 <CyU3PSetUsbCoreClock>
4001e284:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e360 <CyU3PUsbStart+0x36c>
4001e288:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e364 <CyU3PUsbStart+0x370>
4001e28c:	e5810000 	str	r0, [r1]
4001e290:	ebfff633 	bl	4001bb64 <CyU3POtgGetMode>
4001e294:	e3500000 	cmp	r0, #0
4001e298:	1a000003 	bne	4001e2ac <CyU3PUsbStart+0x2b8>
4001e29c:	ebfffc09 	bl	4001d2c8 <CyU3PUsbPowerOn>
4001e2a0:	e3a00000 	mov	r0, #0
4001e2a4:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e35c <CyU3PUsbStart+0x368>
4001e2a8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e2ac:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e368 <CyU3PUsbStart+0x374>
4001e2b0:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e35c <CyU3PUsbStart+0x368>
4001e2b4:	e5810008 	str	r0, [r1, #8]
4001e2b8:	e00108c0 	and	r0, r1, r0, asr #17
4001e2bc:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e2c0:	e3800008 	orr	r0, r0, #8
4001e2c4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e2c8:	eb000662 	bl	4001fc58 <CyU3PUsbDescInit>
4001e2cc:	ebfff8e9 	bl	4001c678 <CyU3PUsbCreateDmaChannels>
4001e2d0:	e1a04000 	mov	r4, r0
4001e2d4:	e3540000 	cmp	r4, #0
4001e2d8:	0a000001 	beq	4001e2e4 <CyU3PUsbStart+0x2f0>
4001e2dc:	e1a00004 	mov	r0, r4
4001e2e0:	eaffff49 	b	4001e00c <CyU3PUsbStart+0x18>
4001e2e4:	e3a00001 	mov	r0, #1
4001e2e8:	e59f1038 	ldr	r1, [pc, #56]	; 4001e328 <CyU3PUsbStart+0x334>
4001e2ec:	e5c10008 	strb	r0, [r1, #8]
4001e2f0:	e2810000 	add	r0, r1, #0
4001e2f4:	e5d00007 	ldrb	r0, [r0, #7]
4001e2f8:	e3500001 	cmp	r0, #1
4001e2fc:	1a000002 	bne	4001e30c <CyU3PUsbStart+0x318>
4001e300:	e3a00003 	mov	r0, #3
4001e304:	e5c10008 	strb	r0, [r1, #8]
4001e308:	ea000002 	b	4001e318 <CyU3PUsbStart+0x324>
4001e30c:	e3a00002 	mov	r0, #2
4001e310:	e59f1010 	ldr	r1, [pc, #16]	; 4001e328 <CyU3PUsbStart+0x334>
4001e314:	e5c10008 	strb	r0, [r1, #8]
4001e318:	ebfff81b 	bl	4001c38c <CyU3PUibInit>
4001e31c:	e1a00004 	mov	r0, r4
4001e320:	eaffff39 	b	4001e00c <CyU3PUsbStart+0x18>
4001e324:	40030d60 	.word	0x40030d60
4001e328:	40031d40 	.word	0x40031d40
4001e32c:	40030c68 	.word	0x40030c68
4001e330:	40002000 	.word	0x40002000
4001e334:	40030d70 	.word	0x40030d70
4001e338:	42335846 	.word	0x42335846
4001e33c:	00010101 	.word	0x00010101
4001e340:	00010200 	.word	0x00010200
4001e344:	40030d44 	.word	0x40030d44
4001e348:	e0033000 	.word	0xe0033000
4001e34c:	00038081 	.word	0x00038081
4001e350:	00004a3d 	.word	0x00004a3d
4001e354:	0000095c 	.word	0x0000095c
4001e358:	e0051000 	.word	0xe0051000
4001e35c:	e0031000 	.word	0xe0031000
4001e360:	de001011 	.word	0xde001011
4001e364:	e0050000 	.word	0xe0050000
4001e368:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e36c <GetUsbLinkActive>:
4001e36c:	e92d4010 	push	{r4, lr}
4001e370:	e59f0064 	ldr	r0, [pc, #100]	; 4001e3dc <GetUsbLinkActive+0x70>
4001e374:	e5d00009 	ldrb	r0, [r0, #9]
4001e378:	e3500003 	cmp	r0, #3
4001e37c:	1a000015 	bne	4001e3d8 <GetUsbLinkActive+0x6c>
4001e380:	e59f0058 	ldr	r0, [pc, #88]	; 4001e3e0 <GetUsbLinkActive+0x74>
4001e384:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e388:	e3c00004 	bic	r0, r0, #4
4001e38c:	e59f104c 	ldr	r1, [pc, #76]	; 4001e3e0 <GetUsbLinkActive+0x74>
4001e390:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e394:	e1a00001 	mov	r0, r1
4001e398:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e39c:	e3c00004 	bic	r0, r0, #4
4001e3a0:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e3a4:	e59f0030 	ldr	r0, [pc, #48]	; 4001e3dc <GetUsbLinkActive+0x70>
4001e3a8:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e3ac:	e3500000 	cmp	r0, #0
4001e3b0:	1a000008 	bne	4001e3d8 <GetUsbLinkActive+0x6c>
4001e3b4:	e1a00001 	mov	r0, r1
4001e3b8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e3bc:	e200403f 	and	r4, r0, #63	; 0x3f
4001e3c0:	e3540011 	cmp	r4, #17
4001e3c4:	0a000001 	beq	4001e3d0 <GetUsbLinkActive+0x64>
4001e3c8:	e3540012 	cmp	r4, #18
4001e3cc:	1a000001 	bne	4001e3d8 <GetUsbLinkActive+0x6c>
4001e3d0:	e3a00000 	mov	r0, #0
4001e3d4:	ebfffdcd 	bl	4001db10 <CyU3PUsbSetLinkPowerState>
4001e3d8:	e8bd8010 	pop	{r4, pc}
4001e3dc:	40031d40 	.word	0x40031d40
4001e3e0:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e3e4 <CyU3PHsGrantIntrHandler>:
4001e3e4:	e92d4010 	push	{r4, lr}
4001e3e8:	e59f005c 	ldr	r0, [pc, #92]	; 4001e44c <CyU3PHsGrantIntrHandler+0x68>
4001e3ec:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e3f0:	e3100080 	tst	r0, #128	; 0x80
4001e3f4:	0a000013 	beq	4001e448 <CyU3PHsGrantIntrHandler+0x64>
4001e3f8:	e59f0050 	ldr	r0, [pc, #80]	; 4001e450 <CyU3PHsGrantIntrHandler+0x6c>
4001e3fc:	e5900014 	ldr	r0, [r0, #20]
4001e400:	e59f1048 	ldr	r1, [pc, #72]	; 4001e450 <CyU3PHsGrantIntrHandler+0x6c>
4001e404:	e581000c 	str	r0, [r1, #12]
4001e408:	e2810000 	add	r0, r1, #0
4001e40c:	e5900018 	ldr	r0, [r0, #24]
4001e410:	e5810010 	str	r0, [r1, #16]
4001e414:	e59f0038 	ldr	r0, [pc, #56]	; 4001e454 <CyU3PHsGrantIntrHandler+0x70>
4001e418:	e5900000 	ldr	r0, [r0]
4001e41c:	e3500000 	cmp	r0, #0
4001e420:	0a000004 	beq	4001e438 <CyU3PHsGrantIntrHandler+0x54>
4001e424:	e3a01001 	mov	r1, #1
4001e428:	e3a00006 	mov	r0, #6
4001e42c:	e59f2020 	ldr	r2, [pc, #32]	; 4001e454 <CyU3PHsGrantIntrHandler+0x70>
4001e430:	e5922000 	ldr	r2, [r2]
4001e434:	e12fff32 	blx	r2
4001e438:	e3a00002 	mov	r0, #2
4001e43c:	e59f1014 	ldr	r1, [pc, #20]	; 4001e458 <CyU3PHsGrantIntrHandler+0x74>
4001e440:	e5c10009 	strb	r0, [r1, #9]
4001e444:	eb00060a 	bl	4001fc74 <CyU3PUsbEpPrepare>
4001e448:	e8bd8010 	pop	{r4, pc}
4001e44c:	e0031000 	.word	0xe0031000
4001e450:	40031f98 	.word	0x40031f98
4001e454:	40030d9c 	.word	0x40030d9c
4001e458:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e45c <CyU3PUibApplicationDefine>:
4001e45c:	e92d4030 	push	{r4, r5, lr}
4001e460:	e24dd01c 	sub	sp, sp, #28
4001e464:	eb000178 	bl	4001ea4c <CyU3PUibInitVars>
4001e468:	e3a00b01 	mov	r0, #1024	; 0x400
4001e46c:	ebff9480 	bl	40003674 <CyU3PMemAlloc>
4001e470:	e1a05000 	mov	r5, r0
4001e474:	e3550000 	cmp	r5, #0
4001e478:	0a00004f 	beq	4001e5bc <CyU3PUibApplicationDefine+0x160>
4001e47c:	e3a030a8 	mov	r3, #168	; 0xa8
4001e480:	e3a02000 	mov	r2, #0
4001e484:	e3a00004 	mov	r0, #4
4001e488:	e58d000c 	str	r0, [sp, #12]
4001e48c:	e58d2010 	str	r2, [sp, #16]
4001e490:	e58d2014 	str	r2, [sp, #20]
4001e494:	e58d3018 	str	r3, [sp, #24]
4001e498:	e3a02b01 	mov	r2, #1024	; 0x400
4001e49c:	e3a03000 	mov	r3, #0
4001e4a0:	e58d2004 	str	r2, [sp, #4]
4001e4a4:	e59f2118 	ldr	r2, [pc, #280]	; 4001e5c4 <CyU3PUibApplicationDefine+0x168>
4001e4a8:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e4ac:	e58d0008 	str	r0, [sp, #8]
4001e4b0:	e59f0120 	ldr	r0, [pc, #288]	; 4001e5d8 <CyU3PUibApplicationDefine+0x17c>
4001e4b4:	e58d5000 	str	r5, [sp]
4001e4b8:	ebffb014 	bl	4000a510 <_txe_thread_create>
4001e4bc:	e1a04000 	mov	r4, r0
4001e4c0:	e3540000 	cmp	r4, #0
4001e4c4:	1a00003c 	bne	4001e5bc <CyU3PUibApplicationDefine+0x160>
4001e4c8:	e3a00080 	mov	r0, #128	; 0x80
4001e4cc:	ebff9468 	bl	40003674 <CyU3PMemAlloc>
4001e4d0:	e1a05000 	mov	r5, r0
4001e4d4:	e3550000 	cmp	r5, #0
4001e4d8:	0a000009 	beq	4001e504 <CyU3PUibApplicationDefine+0xa8>
4001e4dc:	e3a0303c 	mov	r3, #60	; 0x3c
4001e4e0:	e3a02080 	mov	r2, #128	; 0x80
4001e4e4:	e1cd20f0 	strd	r2, [sp]
4001e4e8:	e1a03005 	mov	r3, r5
4001e4ec:	e3a02004 	mov	r2, #4
4001e4f0:	e3a01000 	mov	r1, #0
4001e4f4:	e59f00e0 	ldr	r0, [pc, #224]	; 4001e5dc <CyU3PUibApplicationDefine+0x180>
4001e4f8:	ebffaf1e 	bl	4000a178 <_txe_queue_create>
4001e4fc:	e1a04000 	mov	r4, r0
4001e500:	ea000000 	b	4001e508 <CyU3PUibApplicationDefine+0xac>
4001e504:	e3a04010 	mov	r4, #16
4001e508:	e3540000 	cmp	r4, #0
4001e50c:	1a000004 	bne	4001e524 <CyU3PUibApplicationDefine+0xc8>
4001e510:	e3a02028 	mov	r2, #40	; 0x28
4001e514:	e3a01000 	mov	r1, #0
4001e518:	e59f00c0 	ldr	r0, [pc, #192]	; 4001e5e0 <CyU3PUibApplicationDefine+0x184>
4001e51c:	ebffad80 	bl	40009b24 <_txe_event_flags_create>
4001e520:	e1a04000 	mov	r4, r0
4001e524:	e3540000 	cmp	r4, #0
4001e528:	1a000005 	bne	4001e544 <CyU3PUibApplicationDefine+0xe8>
4001e52c:	e3a03038 	mov	r3, #56	; 0x38
4001e530:	e3a02000 	mov	r2, #0
4001e534:	e1a01002 	mov	r1, r2
4001e538:	e59f00a4 	ldr	r0, [pc, #164]	; 4001e5e4 <CyU3PUibApplicationDefine+0x188>
4001e53c:	ebffae32 	bl	40009e0c <_txe_mutex_create>
4001e540:	e1a04000 	mov	r4, r0
4001e544:	e3540000 	cmp	r4, #0
4001e548:	1a00000a 	bne	4001e578 <CyU3PUibApplicationDefine+0x11c>
4001e54c:	e3a0302c 	mov	r3, #44	; 0x2c
4001e550:	e3a02000 	mov	r2, #0
4001e554:	e3a00064 	mov	r0, #100	; 0x64
4001e558:	e88d0005 	stm	sp, {r0, r2}
4001e55c:	e1cd20f8 	strd	r2, [sp, #8]
4001e560:	e1a03002 	mov	r3, r2
4001e564:	e59f207c 	ldr	r2, [pc, #124]	; 4001e5e8 <CyU3PUibApplicationDefine+0x18c>
4001e568:	e3a01000 	mov	r1, #0
4001e56c:	e59f0078 	ldr	r0, [pc, #120]	; 4001e5ec <CyU3PUibApplicationDefine+0x190>
4001e570:	ebffb113 	bl	4000a9c4 <_txe_timer_create>
4001e574:	e1a04000 	mov	r4, r0
4001e578:	e3540000 	cmp	r4, #0
4001e57c:	1a00000a 	bne	4001e5ac <CyU3PUibApplicationDefine+0x150>
4001e580:	e3a0302c 	mov	r3, #44	; 0x2c
4001e584:	e3a02001 	mov	r2, #1
4001e588:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e58c:	e58d1000 	str	r1, [sp]
4001e590:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e594:	e3a03000 	mov	r3, #0
4001e598:	e59f2050 	ldr	r2, [pc, #80]	; 4001e5f0 <CyU3PUibApplicationDefine+0x194>
4001e59c:	e1a01003 	mov	r1, r3
4001e5a0:	e59f004c 	ldr	r0, [pc, #76]	; 4001e5f4 <CyU3PUibApplicationDefine+0x198>
4001e5a4:	ebffb106 	bl	4000a9c4 <_txe_timer_create>
4001e5a8:	e1a04000 	mov	r4, r0
4001e5ac:	e3540000 	cmp	r4, #0
4001e5b0:	1a000001 	bne	4001e5bc <CyU3PUibApplicationDefine+0x160>
4001e5b4:	e59f001c 	ldr	r0, [pc, #28]	; 4001e5d8 <CyU3PUibApplicationDefine+0x17c>
4001e5b8:	ebffb0bf 	bl	4000a8bc <_txe_thread_resume>
4001e5bc:	e28dd01c 	add	sp, sp, #28
4001e5c0:	e8bd8030 	pop	{r4, r5, pc}
4001e5c4:	4001f7c8 	.word	0x4001f7c8
4001e5c8:	555f3430 	.word	0x555f3430
4001e5cc:	545f4249 	.word	0x545f4249
4001e5d0:	41455248 	.word	0x41455248
4001e5d4:	00000044 	.word	0x00000044
4001e5d8:	40031dd4 	.word	0x40031dd4
4001e5dc:	40031e7c 	.word	0x40031e7c
4001e5e0:	40031eb8 	.word	0x40031eb8
4001e5e4:	40031ee0 	.word	0x40031ee0
4001e5e8:	4001f758 	.word	0x4001f758
4001e5ec:	400326a0 	.word	0x400326a0
4001e5f0:	4001eb04 	.word	0x4001eb04
4001e5f4:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001e5f8 <CyU3PUibDevCtrlEvtHandler>:
4001e5f8:	e92d4010 	push	{r4, lr}
4001e5fc:	e59f01c8 	ldr	r0, [pc, #456]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e600:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001e604:	e3140c01 	tst	r4, #256	; 0x100
4001e608:	0a000008 	beq	4001e630 <CyU3PUibDevCtrlEvtHandler+0x38>
4001e60c:	e3a00c01 	mov	r0, #256	; 0x100
4001e610:	e59f11b4 	ldr	r1, [pc, #436]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e614:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e618:	eb000995 	bl	40020c74 <CyU3PUsbResumeHandler>
4001e61c:	e59f01a8 	ldr	r0, [pc, #424]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e620:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e624:	e3800c01 	orr	r0, r0, #256	; 0x100
4001e628:	e59f119c 	ldr	r1, [pc, #412]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e62c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e630:	e3140004 	tst	r4, #4
4001e634:	0a000008 	beq	4001e65c <CyU3PUibDevCtrlEvtHandler+0x64>
4001e638:	e3a00004 	mov	r0, #4
4001e63c:	e59f1188 	ldr	r1, [pc, #392]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e640:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e644:	eb000d6c 	bl	40021bfc <CyU3PUsbSuspendHandler>
4001e648:	e59f017c 	ldr	r0, [pc, #380]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e64c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e650:	e3800004 	orr	r0, r0, #4
4001e654:	e59f1170 	ldr	r1, [pc, #368]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e658:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e65c:	e3140008 	tst	r4, #8
4001e660:	0a000008 	beq	4001e688 <CyU3PUibDevCtrlEvtHandler+0x90>
4001e664:	e3a00008 	mov	r0, #8
4001e668:	e59f115c 	ldr	r1, [pc, #348]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e66c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e670:	eb00092e 	bl	40020b30 <CyU3PUsbResetHandler>
4001e674:	e59f0150 	ldr	r0, [pc, #336]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e678:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e67c:	e3800008 	orr	r0, r0, #8
4001e680:	e59f1144 	ldr	r1, [pc, #324]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e684:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e688:	e3140010 	tst	r4, #16
4001e68c:	0a000008 	beq	4001e6b4 <CyU3PUibDevCtrlEvtHandler+0xbc>
4001e690:	e3a00010 	mov	r0, #16
4001e694:	e59f1130 	ldr	r1, [pc, #304]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e698:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e69c:	ebffff50 	bl	4001e3e4 <CyU3PHsGrantIntrHandler>
4001e6a0:	e59f0124 	ldr	r0, [pc, #292]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6a4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e6a8:	e3800010 	orr	r0, r0, #16
4001e6ac:	e59f1118 	ldr	r1, [pc, #280]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e6b0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e6b4:	e3140040 	tst	r4, #64	; 0x40
4001e6b8:	0a000018 	beq	4001e720 <CyU3PUibDevCtrlEvtHandler+0x128>
4001e6bc:	e59f010c 	ldr	r0, [pc, #268]	; 4001e7d0 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e6c0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001e6c4:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001e6c8:	e59f1100 	ldr	r1, [pc, #256]	; 4001e7d0 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e6cc:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e6d0:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001e6d4:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e6d8:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e6dc:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001e6e0:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e6e4:	e1a00001 	mov	r0, r1
4001e6e8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e6ec:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e6f0:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e6f4:	e3a00040 	mov	r0, #64	; 0x40
4001e6f8:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e6fc:	e3a00001 	mov	r0, #1
4001e700:	e59f10cc 	ldr	r1, [pc, #204]	; 4001e7d4 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e704:	e5810014 	str	r0, [r1, #20]
4001e708:	eb000b38 	bl	400213f0 <CyU3PUsbSetupCommand>
4001e70c:	e59f00b8 	ldr	r0, [pc, #184]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e710:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e714:	e3800040 	orr	r0, r0, #64	; 0x40
4001e718:	e59f10ac 	ldr	r1, [pc, #172]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e71c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e720:	e3140080 	tst	r4, #128	; 0x80
4001e724:	0a000006 	beq	4001e744 <CyU3PUibDevCtrlEvtHandler+0x14c>
4001e728:	e3a00080 	mov	r0, #128	; 0x80
4001e72c:	e59f1098 	ldr	r1, [pc, #152]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e730:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e734:	e1c10000 	bic	r0, r1, r0
4001e738:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e73c:	e3800080 	orr	r0, r0, #128	; 0x80
4001e740:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e744:	e3140b02 	tst	r4, #2048	; 0x800
4001e748:	0a00001e 	beq	4001e7c8 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001e74c:	e59f0080 	ldr	r0, [pc, #128]	; 4001e7d4 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e750:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e754:	e3500000 	cmp	r0, #0
4001e758:	1a000002 	bne	4001e768 <CyU3PUibDevCtrlEvtHandler+0x170>
4001e75c:	e3a00501 	mov	r0, #4194304	; 0x400000
4001e760:	e59f1068 	ldr	r1, [pc, #104]	; 4001e7d0 <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001e764:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e768:	e3a00b02 	mov	r0, #2048	; 0x800
4001e76c:	e59f1058 	ldr	r1, [pc, #88]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e770:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e774:	e59f0058 	ldr	r0, [pc, #88]	; 4001e7d4 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e778:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001e77c:	e3500000 	cmp	r0, #0
4001e780:	0a00000b 	beq	4001e7b4 <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001e784:	e59f004c 	ldr	r0, [pc, #76]	; 4001e7d8 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e788:	e5900000 	ldr	r0, [r0]
4001e78c:	e3500000 	cmp	r0, #0
4001e790:	0a000004 	beq	4001e7a8 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001e794:	e3a01000 	mov	r1, #0
4001e798:	e3a0000a 	mov	r0, #10
4001e79c:	e59f2034 	ldr	r2, [pc, #52]	; 4001e7d8 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001e7a0:	e5922000 	ldr	r2, [r2]
4001e7a4:	e12fff32 	blx	r2
4001e7a8:	e3a00000 	mov	r0, #0
4001e7ac:	e59f1020 	ldr	r1, [pc, #32]	; 4001e7d4 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001e7b0:	e5810040 	str	r0, [r1, #64]	; 0x40
4001e7b4:	e59f0010 	ldr	r0, [pc, #16]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7b8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001e7bc:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001e7c0:	e59f1004 	ldr	r1, [pc, #4]	; 4001e7cc <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001e7c4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e7c8:	e8bd8010 	pop	{r4, pc}
4001e7cc:	e0031000 	.word	0xe0031000
4001e7d0:	e0032000 	.word	0xe0032000
4001e7d4:	40031d40 	.word	0x40031d40
4001e7d8:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUibEPEvtHandler:

4001e7dc <CyU3PUibEPEvtHandler>:
4001e7dc:	e92d4070 	push	{r4, r5, r6, lr}
4001e7e0:	e59f0244 	ldr	r0, [pc, #580]	; 4001ea2c <CyU3PUibEPEvtHandler+0x250>
4001e7e4:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001e7e8:	e59f123c 	ldr	r1, [pc, #572]	; 4001ea2c <CyU3PUibEPEvtHandler+0x250>
4001e7ec:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001e7f0:	e0004001 	and	r4, r0, r1
4001e7f4:	e59f0234 	ldr	r0, [pc, #564]	; 4001ea30 <CyU3PUibEPEvtHandler+0x254>
4001e7f8:	e5900000 	ldr	r0, [r0]
4001e7fc:	e0044000 	and	r4, r4, r0
4001e800:	e3a05001 	mov	r5, #1
4001e804:	ea000080 	b	4001ea0c <CyU3PUibEPEvtHandler+0x230>
4001e808:	e3a00001 	mov	r0, #1
4001e80c:	e1140510 	tst	r4, r0, lsl r5
4001e810:	0a00003b 	beq	4001e904 <CyU3PUibEPEvtHandler+0x128>
4001e814:	e59f0218 	ldr	r0, [pc, #536]	; 4001ea34 <CyU3PUibEPEvtHandler+0x258>
4001e818:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e81c:	e59f0214 	ldr	r0, [pc, #532]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e820:	e5900000 	ldr	r0, [r0]
4001e824:	e3500000 	cmp	r0, #0
4001e828:	0a000033 	beq	4001e8fc <CyU3PUibEPEvtHandler+0x120>
4001e82c:	e59f0208 	ldr	r0, [pc, #520]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e830:	e5900000 	ldr	r0, [r0]
4001e834:	e3100001 	tst	r0, #1
4001e838:	0a000008 	beq	4001e860 <CyU3PUibEPEvtHandler+0x84>
4001e83c:	e3160702 	tst	r6, #524288	; 0x80000
4001e840:	0a000006 	beq	4001e860 <CyU3PUibEPEvtHandler+0x84>
4001e844:	e3852080 	orr	r2, r5, #128	; 0x80
4001e848:	e59f01f0 	ldr	r0, [pc, #496]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e84c:	e5d01009 	ldrb	r1, [r0, #9]
4001e850:	e3a00001 	mov	r0, #1
4001e854:	e59f31dc 	ldr	r3, [pc, #476]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e858:	e5933000 	ldr	r3, [r3]
4001e85c:	e12fff33 	blx	r3
4001e860:	e59f01d4 	ldr	r0, [pc, #468]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e864:	e5900000 	ldr	r0, [r0]
4001e868:	e3100002 	tst	r0, #2
4001e86c:	0a000008 	beq	4001e894 <CyU3PUibEPEvtHandler+0xb8>
4001e870:	e3160602 	tst	r6, #2097152	; 0x200000
4001e874:	0a000006 	beq	4001e894 <CyU3PUibEPEvtHandler+0xb8>
4001e878:	e3852080 	orr	r2, r5, #128	; 0x80
4001e87c:	e59f01bc 	ldr	r0, [pc, #444]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e880:	e5d01009 	ldrb	r1, [r0, #9]
4001e884:	e3a00002 	mov	r0, #2
4001e888:	e59f31a8 	ldr	r3, [pc, #424]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e88c:	e5933000 	ldr	r3, [r3]
4001e890:	e12fff33 	blx	r3
4001e894:	e59f01a0 	ldr	r0, [pc, #416]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e898:	e5900000 	ldr	r0, [r0]
4001e89c:	e3100004 	tst	r0, #4
4001e8a0:	0a000008 	beq	4001e8c8 <CyU3PUibEPEvtHandler+0xec>
4001e8a4:	e3160501 	tst	r6, #4194304	; 0x400000
4001e8a8:	0a000006 	beq	4001e8c8 <CyU3PUibEPEvtHandler+0xec>
4001e8ac:	e3852080 	orr	r2, r5, #128	; 0x80
4001e8b0:	e59f0188 	ldr	r0, [pc, #392]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e8b4:	e5d01009 	ldrb	r1, [r0, #9]
4001e8b8:	e3a00004 	mov	r0, #4
4001e8bc:	e59f3174 	ldr	r3, [pc, #372]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e8c0:	e5933000 	ldr	r3, [r3]
4001e8c4:	e12fff33 	blx	r3
4001e8c8:	e59f016c 	ldr	r0, [pc, #364]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e8cc:	e5900000 	ldr	r0, [r0]
4001e8d0:	e3100008 	tst	r0, #8
4001e8d4:	0a000008 	beq	4001e8fc <CyU3PUibEPEvtHandler+0x120>
4001e8d8:	e3160502 	tst	r6, #8388608	; 0x800000
4001e8dc:	0a000006 	beq	4001e8fc <CyU3PUibEPEvtHandler+0x120>
4001e8e0:	e3852080 	orr	r2, r5, #128	; 0x80
4001e8e4:	e59f0154 	ldr	r0, [pc, #340]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e8e8:	e5d01009 	ldrb	r1, [r0, #9]
4001e8ec:	e3a00008 	mov	r0, #8
4001e8f0:	e59f3140 	ldr	r3, [pc, #320]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e8f4:	e5933000 	ldr	r3, [r3]
4001e8f8:	e12fff33 	blx	r3
4001e8fc:	e59f0130 	ldr	r0, [pc, #304]	; 4001ea34 <CyU3PUibEPEvtHandler+0x258>
4001e900:	e7806105 	str	r6, [r0, r5, lsl #2]
4001e904:	e2850010 	add	r0, r5, #16
4001e908:	e3a01001 	mov	r1, #1
4001e90c:	e1140011 	tst	r4, r1, lsl r0
4001e910:	0a00003b 	beq	4001ea04 <CyU3PUibEPEvtHandler+0x228>
4001e914:	e59f0128 	ldr	r0, [pc, #296]	; 4001ea44 <CyU3PUibEPEvtHandler+0x268>
4001e918:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001e91c:	e59f0114 	ldr	r0, [pc, #276]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e920:	e5900000 	ldr	r0, [r0]
4001e924:	e3500000 	cmp	r0, #0
4001e928:	0a000033 	beq	4001e9fc <CyU3PUibEPEvtHandler+0x220>
4001e92c:	e59f0108 	ldr	r0, [pc, #264]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e930:	e5900000 	ldr	r0, [r0]
4001e934:	e3100001 	tst	r0, #1
4001e938:	0a000008 	beq	4001e960 <CyU3PUibEPEvtHandler+0x184>
4001e93c:	e3160702 	tst	r6, #524288	; 0x80000
4001e940:	0a000006 	beq	4001e960 <CyU3PUibEPEvtHandler+0x184>
4001e944:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e948:	e5d01009 	ldrb	r1, [r0, #9]
4001e94c:	e1a02005 	mov	r2, r5
4001e950:	e3a00001 	mov	r0, #1
4001e954:	e59f30dc 	ldr	r3, [pc, #220]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e958:	e5933000 	ldr	r3, [r3]
4001e95c:	e12fff33 	blx	r3
4001e960:	e59f00d4 	ldr	r0, [pc, #212]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e964:	e5900000 	ldr	r0, [r0]
4001e968:	e3100002 	tst	r0, #2
4001e96c:	0a000008 	beq	4001e994 <CyU3PUibEPEvtHandler+0x1b8>
4001e970:	e3160602 	tst	r6, #2097152	; 0x200000
4001e974:	0a000006 	beq	4001e994 <CyU3PUibEPEvtHandler+0x1b8>
4001e978:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e97c:	e5d01009 	ldrb	r1, [r0, #9]
4001e980:	e1a02005 	mov	r2, r5
4001e984:	e3a00002 	mov	r0, #2
4001e988:	e59f30a8 	ldr	r3, [pc, #168]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e98c:	e5933000 	ldr	r3, [r3]
4001e990:	e12fff33 	blx	r3
4001e994:	e59f00a0 	ldr	r0, [pc, #160]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e998:	e5900000 	ldr	r0, [r0]
4001e99c:	e3100004 	tst	r0, #4
4001e9a0:	0a000008 	beq	4001e9c8 <CyU3PUibEPEvtHandler+0x1ec>
4001e9a4:	e3160501 	tst	r6, #4194304	; 0x400000
4001e9a8:	0a000006 	beq	4001e9c8 <CyU3PUibEPEvtHandler+0x1ec>
4001e9ac:	e59f008c 	ldr	r0, [pc, #140]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e9b0:	e5d01009 	ldrb	r1, [r0, #9]
4001e9b4:	e1a02005 	mov	r2, r5
4001e9b8:	e3a00004 	mov	r0, #4
4001e9bc:	e59f3074 	ldr	r3, [pc, #116]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e9c0:	e5933000 	ldr	r3, [r3]
4001e9c4:	e12fff33 	blx	r3
4001e9c8:	e59f006c 	ldr	r0, [pc, #108]	; 4001ea3c <CyU3PUibEPEvtHandler+0x260>
4001e9cc:	e5900000 	ldr	r0, [r0]
4001e9d0:	e3100008 	tst	r0, #8
4001e9d4:	0a000008 	beq	4001e9fc <CyU3PUibEPEvtHandler+0x220>
4001e9d8:	e3160502 	tst	r6, #8388608	; 0x800000
4001e9dc:	0a000006 	beq	4001e9fc <CyU3PUibEPEvtHandler+0x220>
4001e9e0:	e59f0058 	ldr	r0, [pc, #88]	; 4001ea40 <CyU3PUibEPEvtHandler+0x264>
4001e9e4:	e5d01009 	ldrb	r1, [r0, #9]
4001e9e8:	e1a02005 	mov	r2, r5
4001e9ec:	e3a00008 	mov	r0, #8
4001e9f0:	e59f3040 	ldr	r3, [pc, #64]	; 4001ea38 <CyU3PUibEPEvtHandler+0x25c>
4001e9f4:	e5933000 	ldr	r3, [r3]
4001e9f8:	e12fff33 	blx	r3
4001e9fc:	e59f0040 	ldr	r0, [pc, #64]	; 4001ea44 <CyU3PUibEPEvtHandler+0x268>
4001ea00:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ea04:	e2850001 	add	r0, r5, #1
4001ea08:	e20050ff 	and	r5, r0, #255	; 0xff
4001ea0c:	e3550010 	cmp	r5, #16
4001ea10:	baffff7c 	blt	4001e808 <CyU3PUibEPEvtHandler+0x2c>
4001ea14:	e59f002c 	ldr	r0, [pc, #44]	; 4001ea48 <CyU3PUibEPEvtHandler+0x26c>
4001ea18:	e5900004 	ldr	r0, [r0, #4]
4001ea1c:	e3800010 	orr	r0, r0, #16
4001ea20:	e59f1020 	ldr	r1, [pc, #32]	; 4001ea48 <CyU3PUibEPEvtHandler+0x26c>
4001ea24:	e5810004 	str	r0, [r1, #4]
4001ea28:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ea2c:	e0031000 	.word	0xe0031000
4001ea30:	40030d80 	.word	0x40030d80
4001ea34:	e0031418 	.word	0xe0031418
4001ea38:	40030d78 	.word	0x40030d78
4001ea3c:	40030d7c 	.word	0x40030d7c
4001ea40:	40031d40 	.word	0x40031d40
4001ea44:	e0031498 	.word	0xe0031498
4001ea48:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001ea4c <CyU3PUibInitVars>:
4001ea4c:	e92d4010 	push	{r4, lr}
4001ea50:	e3a0207c 	mov	r2, #124	; 0x7c
4001ea54:	e3a01000 	mov	r1, #0
4001ea58:	e59f0070 	ldr	r0, [pc, #112]	; 4001ead0 <CyU3PUibInitVars+0x84>
4001ea5c:	ebff9315 	bl	400036b8 <CyU3PMemSet>
4001ea60:	e3a02074 	mov	r2, #116	; 0x74
4001ea64:	e3a01000 	mov	r1, #0
4001ea68:	e59f0064 	ldr	r0, [pc, #100]	; 4001ead4 <CyU3PUibInitVars+0x88>
4001ea6c:	ebff9311 	bl	400036b8 <CyU3PMemSet>
4001ea70:	e3a00000 	mov	r0, #0
4001ea74:	e59f105c 	ldr	r1, [pc, #92]	; 4001ead8 <CyU3PUibInitVars+0x8c>
4001ea78:	e5810000 	str	r0, [r1]
4001ea7c:	e59f1058 	ldr	r1, [pc, #88]	; 4001eadc <CyU3PUibInitVars+0x90>
4001ea80:	e5810000 	str	r0, [r1]
4001ea84:	e59f1054 	ldr	r1, [pc, #84]	; 4001eae0 <CyU3PUibInitVars+0x94>
4001ea88:	e5810000 	str	r0, [r1]
4001ea8c:	e59f1050 	ldr	r1, [pc, #80]	; 4001eae4 <CyU3PUibInitVars+0x98>
4001ea90:	e5810000 	str	r0, [r1]
4001ea94:	e59f104c 	ldr	r1, [pc, #76]	; 4001eae8 <CyU3PUibInitVars+0x9c>
4001ea98:	e5810000 	str	r0, [r1]
4001ea9c:	e59f1048 	ldr	r1, [pc, #72]	; 4001eaec <CyU3PUibInitVars+0xa0>
4001eaa0:	e5810000 	str	r0, [r1]
4001eaa4:	e59f1044 	ldr	r1, [pc, #68]	; 4001eaf0 <CyU3PUibInitVars+0xa4>
4001eaa8:	e5810000 	str	r0, [r1]
4001eaac:	e59f1040 	ldr	r1, [pc, #64]	; 4001eaf4 <CyU3PUibInitVars+0xa8>
4001eab0:	e5810000 	str	r0, [r1]
4001eab4:	e59f103c 	ldr	r1, [pc, #60]	; 4001eaf8 <CyU3PUibInitVars+0xac>
4001eab8:	e5810000 	str	r0, [r1]
4001eabc:	e59f1038 	ldr	r1, [pc, #56]	; 4001eafc <CyU3PUibInitVars+0xb0>
4001eac0:	e5810000 	str	r0, [r1]
4001eac4:	e59f1034 	ldr	r1, [pc, #52]	; 4001eb00 <CyU3PUibInitVars+0xb4>
4001eac8:	e5810000 	str	r0, [r1]
4001eacc:	e8bd8010 	pop	{r4, pc}
4001ead0:	40031d40 	.word	0x40031d40
4001ead4:	40031f98 	.word	0x40031f98
4001ead8:	40030d60 	.word	0x40030d60
4001eadc:	40030d64 	.word	0x40030d64
4001eae0:	40030d68 	.word	0x40030d68
4001eae4:	40030db4 	.word	0x40030db4
4001eae8:	40030d9c 	.word	0x40030d9c
4001eaec:	40030da0 	.word	0x40030da0
4001eaf0:	40030da4 	.word	0x40030da4
4001eaf4:	40030d78 	.word	0x40030d78
4001eaf8:	40030d7c 	.word	0x40030d7c
4001eafc:	40030d80 	.word	0x40030d80
4001eb00:	40030d40 	.word	0x40030d40

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001eb04 <CyU3PUibLnkErrClrTimerCb>:
4001eb04:	e92d4010 	push	{r4, lr}
4001eb08:	e1a04000 	mov	r4, r0
4001eb0c:	ebfff82d 	bl	4001cbc8 <CyU3PUsbGetSpeed>
4001eb10:	e3500003 	cmp	r0, #3
4001eb14:	1a000003 	bne	4001eb28 <CyU3PUibLnkErrClrTimerCb+0x24>
4001eb18:	e59f000c 	ldr	r0, [pc, #12]	; 4001eb2c <CyU3PUibLnkErrClrTimerCb+0x28>
4001eb1c:	e5900014 	ldr	r0, [r0, #20]
4001eb20:	e59f1008 	ldr	r1, [pc, #8]	; 4001eb30 <CyU3PUibLnkErrClrTimerCb+0x2c>
4001eb24:	e5810000 	str	r0, [r1]
4001eb28:	e8bd8010 	pop	{r4, pc}
4001eb2c:	e0033000 	.word	0xe0033000
4001eb30:	40030d84 	.word	0x40030d84

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001eb34 <CyU3PUibLnkIntrEvtHandler>:
4001eb34:	e92d4010 	push	{r4, lr}
4001eb38:	e59f008c 	ldr	r0, [pc, #140]	; 4001ebcc <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb3c:	e5904004 	ldr	r4, [r0, #4]
4001eb40:	e3140902 	tst	r4, #32768	; 0x8000
4001eb44:	0a00000b 	beq	4001eb78 <CyU3PUibLnkIntrEvtHandler+0x44>
4001eb48:	e59f0080 	ldr	r0, [pc, #128]	; 4001ebd0 <CyU3PUibLnkIntrEvtHandler+0x9c>
4001eb4c:	e5900000 	ldr	r0, [r0]
4001eb50:	e59f1074 	ldr	r1, [pc, #116]	; 4001ebcc <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb54:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001eb58:	eb000859 	bl	40020cc4 <CyU3PUsbSSConnecthandler>
4001eb5c:	e3a00902 	mov	r0, #32768	; 0x8000
4001eb60:	e59f1064 	ldr	r1, [pc, #100]	; 4001ebcc <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb64:	e5810004 	str	r0, [r1, #4]
4001eb68:	e1c10000 	bic	r0, r1, r0
4001eb6c:	e5900008 	ldr	r0, [r0, #8]
4001eb70:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001eb74:	e5810008 	str	r0, [r1, #8]
4001eb78:	e3140801 	tst	r4, #65536	; 0x10000
4001eb7c:	0a000007 	beq	4001eba0 <CyU3PUibLnkIntrEvtHandler+0x6c>
4001eb80:	eb0008cc 	bl	40020eb8 <CyU3PUsbSSDisConnecthandler>
4001eb84:	e3a00801 	mov	r0, #65536	; 0x10000
4001eb88:	e59f103c 	ldr	r1, [pc, #60]	; 4001ebcc <CyU3PUibLnkIntrEvtHandler+0x98>
4001eb8c:	e5810004 	str	r0, [r1, #4]
4001eb90:	e1810000 	orr	r0, r1, r0
4001eb94:	e5900008 	ldr	r0, [r0, #8]
4001eb98:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001eb9c:	e5810008 	str	r0, [r1, #8]
4001eba0:	e3140802 	tst	r4, #131072	; 0x20000
4001eba4:	0a000007 	beq	4001ebc8 <CyU3PUibLnkIntrEvtHandler+0x94>
4001eba8:	eb000926 	bl	40021048 <CyU3PUsbSSReset>
4001ebac:	e3a00802 	mov	r0, #131072	; 0x20000
4001ebb0:	e59f1014 	ldr	r1, [pc, #20]	; 4001ebcc <CyU3PUibLnkIntrEvtHandler+0x98>
4001ebb4:	e5810004 	str	r0, [r1, #4]
4001ebb8:	e1810000 	orr	r0, r1, r0
4001ebbc:	e5900008 	ldr	r0, [r0, #8]
4001ebc0:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001ebc4:	e5810008 	str	r0, [r1, #8]
4001ebc8:	e8bd8010 	pop	{r4, pc}
4001ebcc:	e0033000 	.word	0xe0033000
4001ebd0:	40030d8c 	.word	0x40030d8c

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001ebd4 <CyU3PUibProtEpIntrEvtHandler>:
4001ebd4:	e92d4070 	push	{r4, r5, r6, lr}
4001ebd8:	e59f03b4 	ldr	r0, [pc, #948]	; 4001ef94 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ebdc:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001ebe0:	e59f13ac 	ldr	r1, [pc, #940]	; 4001ef94 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001ebe4:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001ebe8:	e0005001 	and	r5, r0, r1
4001ebec:	e3a04001 	mov	r4, #1
4001ebf0:	ea0000df 	b	4001ef74 <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001ebf4:	e3a00001 	mov	r0, #1
4001ebf8:	e1150410 	tst	r5, r0, lsl r4
4001ebfc:	0a000081 	beq	4001ee08 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001ec00:	e59f0390 	ldr	r0, [pc, #912]	; 4001ef98 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec04:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001ec08:	e3160901 	tst	r6, #16384	; 0x4000
4001ec0c:	0a00002a 	beq	4001ecbc <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec10:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ec14:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001ec18:	e3800002 	orr	r0, r0, #2
4001ec1c:	e59f1374 	ldr	r1, [pc, #884]	; 4001ef98 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec20:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec24:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001ec28:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ec2c:	e1a01802 	lsl	r1, r2, #16
4001ec30:	e1a01821 	lsr	r1, r1, #16
4001ec34:	e20420ff 	and	r2, r4, #255	; 0xff
4001ec38:	e3820080 	orr	r0, r2, #128	; 0x80
4001ec3c:	ebfffa90 	bl	4001d684 <CyU3PUsbSendNrdy>
4001ec40:	e20410ff 	and	r1, r4, #255	; 0xff
4001ec44:	e3810080 	orr	r0, r1, #128	; 0x80
4001ec48:	ebfff9a1 	bl	4001d2d4 <CyU3PUsbResetEp>
4001ec4c:	e3a0000a 	mov	r0, #10
4001ec50:	ebffd20c 	bl	40013488 <CyU3PBusyWait>
4001ec54:	e59f2340 	ldr	r2, [pc, #832]	; 4001ef9c <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001ec58:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001ec5c:	e1a01802 	lsl	r1, r2, #16
4001ec60:	e1a01821 	lsr	r1, r1, #16
4001ec64:	e20420ff 	and	r2, r4, #255	; 0xff
4001ec68:	e3820080 	orr	r0, r2, #128	; 0x80
4001ec6c:	ebfffa47 	bl	4001d590 <CyU3PUsbSendErdy>
4001ec70:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001ec74:	e59f131c 	ldr	r1, [pc, #796]	; 4001ef98 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ec78:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ec7c:	e59f031c 	ldr	r0, [pc, #796]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ec80:	e5900000 	ldr	r0, [r0]
4001ec84:	e3100020 	tst	r0, #32
4001ec88:	0a00000b 	beq	4001ecbc <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001ec8c:	e3a00001 	mov	r0, #1
4001ec90:	e59f130c 	ldr	r1, [pc, #780]	; 4001efa4 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ec94:	e5911000 	ldr	r1, [r1]
4001ec98:	e1110410 	tst	r1, r0, lsl r4
4001ec9c:	0a000006 	beq	4001ecbc <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001eca0:	e20400ff 	and	r0, r4, #255	; 0xff
4001eca4:	e3802080 	orr	r2, r0, #128	; 0x80
4001eca8:	e3a01003 	mov	r1, #3
4001ecac:	e3a00020 	mov	r0, #32
4001ecb0:	e59f32f0 	ldr	r3, [pc, #752]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ecb4:	e5933000 	ldr	r3, [r3]
4001ecb8:	e12fff33 	blx	r3
4001ecbc:	e3160801 	tst	r6, #65536	; 0x10000
4001ecc0:	0a000004 	beq	4001ecd8 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001ecc4:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001ecc8:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001eccc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ecd0:	e59f12c0 	ldr	r1, [pc, #704]	; 4001ef98 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ecd4:	e7810104 	str	r0, [r1, r4, lsl #2]
4001ecd8:	e3a00001 	mov	r0, #1
4001ecdc:	e59f12c0 	ldr	r1, [pc, #704]	; 4001efa4 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ece0:	e5911000 	ldr	r1, [r1]
4001ece4:	e1110410 	tst	r1, r0, lsl r4
4001ece8:	0a000044 	beq	4001ee00 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ecec:	e59f02b4 	ldr	r0, [pc, #692]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ecf0:	e5900000 	ldr	r0, [r0]
4001ecf4:	e3500000 	cmp	r0, #0
4001ecf8:	0a000040 	beq	4001ee00 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ecfc:	e59f029c 	ldr	r0, [pc, #668]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed00:	e5900000 	ldr	r0, [r0]
4001ed04:	e3100001 	tst	r0, #1
4001ed08:	0a000008 	beq	4001ed30 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ed0c:	e3160b01 	tst	r6, #1024	; 0x400
4001ed10:	0a000006 	beq	4001ed30 <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001ed14:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed18:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed1c:	e3a01003 	mov	r1, #3
4001ed20:	e3a00001 	mov	r0, #1
4001ed24:	e59f327c 	ldr	r3, [pc, #636]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed28:	e5933000 	ldr	r3, [r3]
4001ed2c:	e12fff33 	blx	r3
4001ed30:	e59f0268 	ldr	r0, [pc, #616]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed34:	e5900000 	ldr	r0, [r0]
4001ed38:	e3100002 	tst	r0, #2
4001ed3c:	0a000008 	beq	4001ed64 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ed40:	e3160a01 	tst	r6, #4096	; 0x1000
4001ed44:	0a000006 	beq	4001ed64 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001ed48:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed4c:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed50:	e3a01003 	mov	r1, #3
4001ed54:	e3a00002 	mov	r0, #2
4001ed58:	e59f3248 	ldr	r3, [pc, #584]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed5c:	e5933000 	ldr	r3, [r3]
4001ed60:	e12fff33 	blx	r3
4001ed64:	e59f0234 	ldr	r0, [pc, #564]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed68:	e5900000 	ldr	r0, [r0]
4001ed6c:	e3100004 	tst	r0, #4
4001ed70:	0a000008 	beq	4001ed98 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ed74:	e3160a02 	tst	r6, #8192	; 0x2000
4001ed78:	0a000006 	beq	4001ed98 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001ed7c:	e20400ff 	and	r0, r4, #255	; 0xff
4001ed80:	e3802080 	orr	r2, r0, #128	; 0x80
4001ed84:	e3a01003 	mov	r1, #3
4001ed88:	e3a00004 	mov	r0, #4
4001ed8c:	e59f3214 	ldr	r3, [pc, #532]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ed90:	e5933000 	ldr	r3, [r3]
4001ed94:	e12fff33 	blx	r3
4001ed98:	e59f0200 	ldr	r0, [pc, #512]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ed9c:	e5900000 	ldr	r0, [r0]
4001eda0:	e3100010 	tst	r0, #16
4001eda4:	0a000008 	beq	4001edcc <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001eda8:	e3160c02 	tst	r6, #512	; 0x200
4001edac:	0a000006 	beq	4001edcc <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001edb0:	e20400ff 	and	r0, r4, #255	; 0xff
4001edb4:	e3802080 	orr	r2, r0, #128	; 0x80
4001edb8:	e3a01003 	mov	r1, #3
4001edbc:	e3a00010 	mov	r0, #16
4001edc0:	e59f31e0 	ldr	r3, [pc, #480]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edc4:	e5933000 	ldr	r3, [r3]
4001edc8:	e12fff33 	blx	r3
4001edcc:	e59f01cc 	ldr	r0, [pc, #460]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001edd0:	e5900000 	ldr	r0, [r0]
4001edd4:	e3100040 	tst	r0, #64	; 0x40
4001edd8:	0a000008 	beq	4001ee00 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001eddc:	e3160802 	tst	r6, #131072	; 0x20000
4001ede0:	0a000006 	beq	4001ee00 <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001ede4:	e20400ff 	and	r0, r4, #255	; 0xff
4001ede8:	e3802080 	orr	r2, r0, #128	; 0x80
4001edec:	e3a01003 	mov	r1, #3
4001edf0:	e3a00040 	mov	r0, #64	; 0x40
4001edf4:	e59f31ac 	ldr	r3, [pc, #428]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001edf8:	e5933000 	ldr	r3, [r3]
4001edfc:	e12fff33 	blx	r3
4001ee00:	e59f0190 	ldr	r0, [pc, #400]	; 4001ef98 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001ee04:	e7806104 	str	r6, [r0, r4, lsl #2]
4001ee08:	e2840010 	add	r0, r4, #16
4001ee0c:	e3a01001 	mov	r1, #1
4001ee10:	e1150011 	tst	r5, r1, lsl r0
4001ee14:	0a000055 	beq	4001ef70 <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001ee18:	e59f018c 	ldr	r0, [pc, #396]	; 4001efac <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001ee1c:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001ee20:	e2840010 	add	r0, r4, #16
4001ee24:	e1a00011 	lsl	r0, r1, r0
4001ee28:	e59f1174 	ldr	r1, [pc, #372]	; 4001efa4 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001ee2c:	e5911000 	ldr	r1, [r1]
4001ee30:	e1100001 	tst	r0, r1
4001ee34:	0a00004b 	beq	4001ef68 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ee38:	e59f0168 	ldr	r0, [pc, #360]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee3c:	e5900000 	ldr	r0, [r0]
4001ee40:	e3500000 	cmp	r0, #0
4001ee44:	0a000047 	beq	4001ef68 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ee48:	e59f0150 	ldr	r0, [pc, #336]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee4c:	e5900000 	ldr	r0, [r0]
4001ee50:	e3100001 	tst	r0, #1
4001ee54:	0a000007 	beq	4001ee78 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ee58:	e3160b01 	tst	r6, #1024	; 0x400
4001ee5c:	0a000005 	beq	4001ee78 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001ee60:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee64:	e3a01003 	mov	r1, #3
4001ee68:	e3a00001 	mov	r0, #1
4001ee6c:	e59f3134 	ldr	r3, [pc, #308]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ee70:	e5933000 	ldr	r3, [r3]
4001ee74:	e12fff33 	blx	r3
4001ee78:	e59f0120 	ldr	r0, [pc, #288]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ee7c:	e5900000 	ldr	r0, [r0]
4001ee80:	e3100002 	tst	r0, #2
4001ee84:	0a000007 	beq	4001eea8 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee88:	e3160a01 	tst	r6, #4096	; 0x1000
4001ee8c:	0a000005 	beq	4001eea8 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001ee90:	e20420ff 	and	r2, r4, #255	; 0xff
4001ee94:	e3a01003 	mov	r1, #3
4001ee98:	e3a00002 	mov	r0, #2
4001ee9c:	e59f3104 	ldr	r3, [pc, #260]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eea0:	e5933000 	ldr	r3, [r3]
4001eea4:	e12fff33 	blx	r3
4001eea8:	e59f00f0 	ldr	r0, [pc, #240]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eeac:	e5900000 	ldr	r0, [r0]
4001eeb0:	e3100004 	tst	r0, #4
4001eeb4:	0a000007 	beq	4001eed8 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001eeb8:	e3160a02 	tst	r6, #8192	; 0x2000
4001eebc:	0a000005 	beq	4001eed8 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001eec0:	e20420ff 	and	r2, r4, #255	; 0xff
4001eec4:	e3a01003 	mov	r1, #3
4001eec8:	e3a00004 	mov	r0, #4
4001eecc:	e59f30d4 	ldr	r3, [pc, #212]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001eed0:	e5933000 	ldr	r3, [r3]
4001eed4:	e12fff33 	blx	r3
4001eed8:	e59f00c0 	ldr	r0, [pc, #192]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001eedc:	e5900000 	ldr	r0, [r0]
4001eee0:	e3100010 	tst	r0, #16
4001eee4:	0a000007 	beq	4001ef08 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001eee8:	e3160c02 	tst	r6, #512	; 0x200
4001eeec:	0a000005 	beq	4001ef08 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001eef0:	e20420ff 	and	r2, r4, #255	; 0xff
4001eef4:	e3a01003 	mov	r1, #3
4001eef8:	e3a00010 	mov	r0, #16
4001eefc:	e59f30a4 	ldr	r3, [pc, #164]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef00:	e5933000 	ldr	r3, [r3]
4001ef04:	e12fff33 	blx	r3
4001ef08:	e59f0090 	ldr	r0, [pc, #144]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef0c:	e5900000 	ldr	r0, [r0]
4001ef10:	e3100040 	tst	r0, #64	; 0x40
4001ef14:	0a000007 	beq	4001ef38 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001ef18:	e3160802 	tst	r6, #131072	; 0x20000
4001ef1c:	0a000005 	beq	4001ef38 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001ef20:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef24:	e3a01003 	mov	r1, #3
4001ef28:	e3a00040 	mov	r0, #64	; 0x40
4001ef2c:	e59f3074 	ldr	r3, [pc, #116]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef30:	e5933000 	ldr	r3, [r3]
4001ef34:	e12fff33 	blx	r3
4001ef38:	e59f0060 	ldr	r0, [pc, #96]	; 4001efa0 <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001ef3c:	e5900000 	ldr	r0, [r0]
4001ef40:	e3100020 	tst	r0, #32
4001ef44:	0a000007 	beq	4001ef68 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ef48:	e3160901 	tst	r6, #16384	; 0x4000
4001ef4c:	0a000005 	beq	4001ef68 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001ef50:	e20420ff 	and	r2, r4, #255	; 0xff
4001ef54:	e3a01003 	mov	r1, #3
4001ef58:	e3a00020 	mov	r0, #32
4001ef5c:	e59f3044 	ldr	r3, [pc, #68]	; 4001efa8 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001ef60:	e5933000 	ldr	r3, [r3]
4001ef64:	e12fff33 	blx	r3
4001ef68:	e59f003c 	ldr	r0, [pc, #60]	; 4001efac <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001ef6c:	e7806104 	str	r6, [r0, r4, lsl #2]
4001ef70:	e2844001 	add	r4, r4, #1
4001ef74:	e3540010 	cmp	r4, #16
4001ef78:	baffff1d 	blt	4001ebf4 <CyU3PUibProtEpIntrEvtHandler+0x20>
4001ef7c:	e59f002c 	ldr	r0, [pc, #44]	; 4001efb0 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef80:	e5900004 	ldr	r0, [r0, #4]
4001ef84:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001ef88:	e59f1020 	ldr	r1, [pc, #32]	; 4001efb0 <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001ef8c:	e5810004 	str	r0, [r1, #4]
4001ef90:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ef94:	e0033000 	.word	0xe0033000
4001ef98:	e0033500 	.word	0xe0033500
4001ef9c:	e00335c0 	.word	0xe00335c0
4001efa0:	40030d7c 	.word	0x40030d7c
4001efa4:	40030d80 	.word	0x40030d80
4001efa8:	40030d78 	.word	0x40030d78
4001efac:	e0033600 	.word	0xe0033600
4001efb0:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001efb4 <CyU3PUibProtIntrEvtHandler>:
4001efb4:	e92d4010 	push	{r4, lr}
4001efb8:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f090 <CyU3PUibProtIntrEvtHandler+0xdc>
4001efbc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001efc0:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f090 <CyU3PUibProtIntrEvtHandler+0xdc>
4001efc4:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001efc8:	e0004001 	and	r4, r0, r1
4001efcc:	e3140c02 	tst	r4, #512	; 0x200
4001efd0:	0a000006 	beq	4001eff0 <CyU3PUibProtIntrEvtHandler+0x3c>
4001efd4:	e3a00c02 	mov	r0, #512	; 0x200
4001efd8:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f090 <CyU3PUibProtIntrEvtHandler+0xdc>
4001efdc:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001efe0:	e3a00001 	mov	r0, #1
4001efe4:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f094 <CyU3PUibProtIntrEvtHandler+0xe0>
4001efe8:	e5810014 	str	r0, [r1, #20]
4001efec:	eb0008ff 	bl	400213f0 <CyU3PUsbSetupCommand>
4001eff0:	e3140901 	tst	r4, #16384	; 0x4000
4001eff4:	0a00000a 	beq	4001f024 <CyU3PUibProtIntrEvtHandler+0x70>
4001eff8:	e59f0090 	ldr	r0, [pc, #144]	; 4001f090 <CyU3PUibProtIntrEvtHandler+0xdc>
4001effc:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f000:	e3c00004 	bic	r0, r0, #4
4001f004:	e59f1084 	ldr	r1, [pc, #132]	; 4001f090 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f008:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f00c:	e1a00001 	mov	r0, r1
4001f010:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f014:	e3c00004 	bic	r0, r0, #4
4001f018:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f01c:	e3a00901 	mov	r0, #16384	; 0x4000
4001f020:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f024:	e3140b02 	tst	r4, #2048	; 0x800
4001f028:	0a000012 	beq	4001f078 <CyU3PUibProtIntrEvtHandler+0xc4>
4001f02c:	e59f0060 	ldr	r0, [pc, #96]	; 4001f094 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f030:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f034:	e3500000 	cmp	r0, #0
4001f038:	0a00000b 	beq	4001f06c <CyU3PUibProtIntrEvtHandler+0xb8>
4001f03c:	e59f0054 	ldr	r0, [pc, #84]	; 4001f098 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f040:	e5900000 	ldr	r0, [r0]
4001f044:	e3500000 	cmp	r0, #0
4001f048:	0a000004 	beq	4001f060 <CyU3PUibProtIntrEvtHandler+0xac>
4001f04c:	e3a01000 	mov	r1, #0
4001f050:	e3a0000a 	mov	r0, #10
4001f054:	e59f203c 	ldr	r2, [pc, #60]	; 4001f098 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f058:	e5922000 	ldr	r2, [r2]
4001f05c:	e12fff32 	blx	r2
4001f060:	e3a00000 	mov	r0, #0
4001f064:	e59f1028 	ldr	r1, [pc, #40]	; 4001f094 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f068:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f06c:	e3a00b02 	mov	r0, #2048	; 0x800
4001f070:	e59f1018 	ldr	r1, [pc, #24]	; 4001f090 <CyU3PUibProtIntrEvtHandler+0xdc>
4001f074:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f078:	e59f001c 	ldr	r0, [pc, #28]	; 4001f09c <CyU3PUibProtIntrEvtHandler+0xe8>
4001f07c:	e5900004 	ldr	r0, [r0, #4]
4001f080:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f084:	e59f1010 	ldr	r1, [pc, #16]	; 4001f09c <CyU3PUibProtIntrEvtHandler+0xe8>
4001f088:	e5810004 	str	r0, [r1, #4]
4001f08c:	e8bd8010 	pop	{r4, pc}
4001f090:	e0033000 	.word	0xe0033000
4001f094:	40031d40 	.word	0x40031d40
4001f098:	40030d9c 	.word	0x40030d9c
4001f09c:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f0a0 <CyU3PUibSendDescr>:
4001f0a0:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f0a4:	e1a04000 	mov	r4, r0
4001f0a8:	e1a05001 	mov	r5, r1
4001f0ac:	e3a06000 	mov	r6, #0
4001f0b0:	e3a07000 	mov	r7, #0
4001f0b4:	e3a08000 	mov	r8, #0
4001f0b8:	e3a09000 	mov	r9, #0
4001f0bc:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001f6a8 <CyU3PUibSendDescr+0x608>
4001f0c0:	e0000825 	and	r0, r0, r5, lsr #16
4001f0c4:	e58d0000 	str	r0, [sp]
4001f0c8:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f0cc:	e5d00009 	ldrb	r0, [r0, #9]
4001f0d0:	e3500003 	cmp	r0, #3
4001f0d4:	1a000001 	bne	4001f0e0 <CyU3PUibSendDescr+0x40>
4001f0d8:	e3a00c02 	mov	r0, #512	; 0x200
4001f0dc:	ea000000 	b	4001f0e4 <CyU3PUibSendDescr+0x44>
4001f0e0:	e3a00040 	mov	r0, #64	; 0x40
4001f0e4:	e1a0a800 	lsl	sl, r0, #16
4001f0e8:	e1a0a82a 	lsr	sl, sl, #16
4001f0ec:	e1a00c24 	lsr	r0, r4, #24
4001f0f0:	e3500006 	cmp	r0, #6
4001f0f4:	0a0000b4 	beq	4001f3cc <CyU3PUibSendDescr+0x32c>
4001f0f8:	ca000006 	bgt	4001f118 <CyU3PUibSendDescr+0x78>
4001f0fc:	e3500001 	cmp	r0, #1
4001f100:	0a00000b 	beq	4001f134 <CyU3PUibSendDescr+0x94>
4001f104:	e3500002 	cmp	r0, #2
4001f108:	0a000020 	beq	4001f190 <CyU3PUibSendDescr+0xf0>
4001f10c:	e3500003 	cmp	r0, #3
4001f110:	1a00013b 	bne	4001f604 <CyU3PUibSendDescr+0x564>
4001f114:	ea00007b 	b	4001f308 <CyU3PUibSendDescr+0x268>
4001f118:	e3500007 	cmp	r0, #7
4001f11c:	0a0000b8 	beq	4001f404 <CyU3PUibSendDescr+0x364>
4001f120:	e3500009 	cmp	r0, #9
4001f124:	0a000122 	beq	4001f5b4 <CyU3PUibSendDescr+0x514>
4001f128:	e350000f 	cmp	r0, #15
4001f12c:	1a000134 	bne	4001f604 <CyU3PUibSendDescr+0x564>
4001f130:	ea0000f6 	b	4001f510 <CyU3PUibSendDescr+0x470>
4001f134:	e1a00000 	nop			; (mov r0, r0)
4001f138:	e59f056c 	ldr	r0, [pc, #1388]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f13c:	e5d00009 	ldrb	r0, [r0, #9]
4001f140:	e3500003 	cmp	r0, #3
4001f144:	1a000008 	bne	4001f16c <CyU3PUibSendDescr+0xcc>
4001f148:	e59f0560 	ldr	r0, [pc, #1376]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f14c:	e5900004 	ldr	r0, [r0, #4]
4001f150:	e3500000 	cmp	r0, #0
4001f154:	0a00000c 	beq	4001f18c <CyU3PUibSendDescr+0xec>
4001f158:	e3a09001 	mov	r9, #1
4001f15c:	e3a06012 	mov	r6, #18
4001f160:	e59f0548 	ldr	r0, [pc, #1352]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f164:	e5908004 	ldr	r8, [r0, #4]
4001f168:	ea000007 	b	4001f18c <CyU3PUibSendDescr+0xec>
4001f16c:	e59f053c 	ldr	r0, [pc, #1340]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f170:	e5900000 	ldr	r0, [r0]
4001f174:	e3500000 	cmp	r0, #0
4001f178:	0a000003 	beq	4001f18c <CyU3PUibSendDescr+0xec>
4001f17c:	e3a09001 	mov	r9, #1
4001f180:	e3a06012 	mov	r6, #18
4001f184:	e59f0524 	ldr	r0, [pc, #1316]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f188:	e5908000 	ldr	r8, [r0]
4001f18c:	ea000128 	b	4001f634 <CyU3PUibSendDescr+0x594>
4001f190:	e1a00000 	nop			; (mov r0, r0)
4001f194:	e59f0510 	ldr	r0, [pc, #1296]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f198:	e5d00009 	ldrb	r0, [r0, #9]
4001f19c:	e3500002 	cmp	r0, #2
4001f1a0:	1a00001a 	bne	4001f210 <CyU3PUibSendDescr+0x170>
4001f1a4:	e59f0504 	ldr	r0, [pc, #1284]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f1a8:	e5900014 	ldr	r0, [r0, #20]
4001f1ac:	e3500000 	cmp	r0, #0
4001f1b0:	0a00004f 	beq	4001f2f4 <CyU3PUibSendDescr+0x254>
4001f1b4:	e3a09001 	mov	r9, #1
4001f1b8:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f1bc:	e5908014 	ldr	r8, [r0, #20]
4001f1c0:	e5900014 	ldr	r0, [r0, #20]
4001f1c4:	e5d00002 	ldrb	r0, [r0, #2]
4001f1c8:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f1cc:	e5911014 	ldr	r1, [r1, #20]
4001f1d0:	e5d11003 	ldrb	r1, [r1, #3]
4001f1d4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f1d8:	e1500825 	cmp	r0, r5, lsr #16
4001f1dc:	2a000007 	bcs	4001f200 <CyU3PUibSendDescr+0x160>
4001f1e0:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f1e4:	e5900014 	ldr	r0, [r0, #20]
4001f1e8:	e5d00002 	ldrb	r0, [r0, #2]
4001f1ec:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f1f0:	e5911014 	ldr	r1, [r1, #20]
4001f1f4:	e5d11003 	ldrb	r1, [r1, #3]
4001f1f8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f1fc:	ea000000 	b	4001f204 <CyU3PUibSendDescr+0x164>
4001f200:	e1a00825 	lsr	r0, r5, #16
4001f204:	e1a06800 	lsl	r6, r0, #16
4001f208:	e1a06826 	lsr	r6, r6, #16
4001f20c:	ea000038 	b	4001f2f4 <CyU3PUibSendDescr+0x254>
4001f210:	e59f0494 	ldr	r0, [pc, #1172]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f214:	e5d00009 	ldrb	r0, [r0, #9]
4001f218:	e3500001 	cmp	r0, #1
4001f21c:	1a00001a 	bne	4001f28c <CyU3PUibSendDescr+0x1ec>
4001f220:	e59f0488 	ldr	r0, [pc, #1160]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f224:	e5900018 	ldr	r0, [r0, #24]
4001f228:	e3500000 	cmp	r0, #0
4001f22c:	0a000030 	beq	4001f2f4 <CyU3PUibSendDescr+0x254>
4001f230:	e3a09001 	mov	r9, #1
4001f234:	e59f0474 	ldr	r0, [pc, #1140]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f238:	e5908018 	ldr	r8, [r0, #24]
4001f23c:	e5900018 	ldr	r0, [r0, #24]
4001f240:	e5d00002 	ldrb	r0, [r0, #2]
4001f244:	e59f1464 	ldr	r1, [pc, #1124]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f248:	e5911018 	ldr	r1, [r1, #24]
4001f24c:	e5d11003 	ldrb	r1, [r1, #3]
4001f250:	e1800401 	orr	r0, r0, r1, lsl #8
4001f254:	e1500825 	cmp	r0, r5, lsr #16
4001f258:	2a000007 	bcs	4001f27c <CyU3PUibSendDescr+0x1dc>
4001f25c:	e59f044c 	ldr	r0, [pc, #1100]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f260:	e5900018 	ldr	r0, [r0, #24]
4001f264:	e5d00002 	ldrb	r0, [r0, #2]
4001f268:	e59f1440 	ldr	r1, [pc, #1088]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f26c:	e5911018 	ldr	r1, [r1, #24]
4001f270:	e5d11003 	ldrb	r1, [r1, #3]
4001f274:	e1800401 	orr	r0, r0, r1, lsl #8
4001f278:	ea000000 	b	4001f280 <CyU3PUibSendDescr+0x1e0>
4001f27c:	e1a00825 	lsr	r0, r5, #16
4001f280:	e1a06800 	lsl	r6, r0, #16
4001f284:	e1a06826 	lsr	r6, r6, #16
4001f288:	ea000019 	b	4001f2f4 <CyU3PUibSendDescr+0x254>
4001f28c:	e59f041c 	ldr	r0, [pc, #1052]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f290:	e590001c 	ldr	r0, [r0, #28]
4001f294:	e3500000 	cmp	r0, #0
4001f298:	0a000015 	beq	4001f2f4 <CyU3PUibSendDescr+0x254>
4001f29c:	e3a09001 	mov	r9, #1
4001f2a0:	e59f0408 	ldr	r0, [pc, #1032]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f2a4:	e590801c 	ldr	r8, [r0, #28]
4001f2a8:	e590001c 	ldr	r0, [r0, #28]
4001f2ac:	e5d00002 	ldrb	r0, [r0, #2]
4001f2b0:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f2b4:	e591101c 	ldr	r1, [r1, #28]
4001f2b8:	e5d11003 	ldrb	r1, [r1, #3]
4001f2bc:	e1800401 	orr	r0, r0, r1, lsl #8
4001f2c0:	e1500825 	cmp	r0, r5, lsr #16
4001f2c4:	2a000007 	bcs	4001f2e8 <CyU3PUibSendDescr+0x248>
4001f2c8:	e59f03e0 	ldr	r0, [pc, #992]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f2cc:	e590001c 	ldr	r0, [r0, #28]
4001f2d0:	e5d00002 	ldrb	r0, [r0, #2]
4001f2d4:	e59f13d4 	ldr	r1, [pc, #980]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f2d8:	e591101c 	ldr	r1, [r1, #28]
4001f2dc:	e5d11003 	ldrb	r1, [r1, #3]
4001f2e0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f2e4:	ea000000 	b	4001f2ec <CyU3PUibSendDescr+0x24c>
4001f2e8:	e1a00825 	lsr	r0, r5, #16
4001f2ec:	e1a06800 	lsl	r6, r0, #16
4001f2f0:	e1a06826 	lsr	r6, r6, #16
4001f2f4:	e3580000 	cmp	r8, #0
4001f2f8:	0a000001 	beq	4001f304 <CyU3PUibSendDescr+0x264>
4001f2fc:	e3a00002 	mov	r0, #2
4001f300:	e5c80001 	strb	r0, [r8, #1]
4001f304:	ea0000ca 	b	4001f634 <CyU3PUibSendDescr+0x594>
4001f308:	e1a00000 	nop			; (mov r0, r0)
4001f30c:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f310:	e1a0b820 	lsr	fp, r0, #16
4001f314:	e35b0010 	cmp	fp, #16
4001f318:	ca000003 	bgt	4001f32c <CyU3PUibSendDescr+0x28c>
4001f31c:	e59f0390 	ldr	r0, [pc, #912]	; 4001f6b4 <CyU3PUibSendDescr+0x614>
4001f320:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f324:	e3500000 	cmp	r0, #0
4001f328:	1a000013 	bne	4001f37c <CyU3PUibSendDescr+0x2dc>
4001f32c:	e59f0378 	ldr	r0, [pc, #888]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f330:	e5d00007 	ldrb	r0, [r0, #7]
4001f334:	e3500001 	cmp	r0, #1
4001f338:	0a000022 	beq	4001f3c8 <CyU3PUibSendDescr+0x328>
4001f33c:	e59f0374 	ldr	r0, [pc, #884]	; 4001f6b8 <CyU3PUibSendDescr+0x618>
4001f340:	e5900000 	ldr	r0, [r0]
4001f344:	e3500000 	cmp	r0, #0
4001f348:	0a00001e 	beq	4001f3c8 <CyU3PUibSendDescr+0x328>
4001f34c:	e1a01005 	mov	r1, r5
4001f350:	e1a00004 	mov	r0, r4
4001f354:	e59f235c 	ldr	r2, [pc, #860]	; 4001f6b8 <CyU3PUibSendDescr+0x618>
4001f358:	e5922000 	ldr	r2, [r2]
4001f35c:	e12fff32 	blx	r2
4001f360:	e1a09000 	mov	r9, r0
4001f364:	e3590000 	cmp	r9, #0
4001f368:	0a000016 	beq	4001f3c8 <CyU3PUibSendDescr+0x328>
4001f36c:	e3a00001 	mov	r0, #1
4001f370:	e59f1334 	ldr	r1, [pc, #820]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f374:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f378:	ea000012 	b	4001f3c8 <CyU3PUibSendDescr+0x328>
4001f37c:	e59f0330 	ldr	r0, [pc, #816]	; 4001f6b4 <CyU3PUibSendDescr+0x614>
4001f380:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f384:	e5d00000 	ldrb	r0, [r0]
4001f388:	e1500825 	cmp	r0, r5, lsr #16
4001f38c:	2a000003 	bcs	4001f3a0 <CyU3PUibSendDescr+0x300>
4001f390:	e59f031c 	ldr	r0, [pc, #796]	; 4001f6b4 <CyU3PUibSendDescr+0x614>
4001f394:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f398:	e5d00000 	ldrb	r0, [r0]
4001f39c:	ea000000 	b	4001f3a4 <CyU3PUibSendDescr+0x304>
4001f3a0:	e1a00825 	lsr	r0, r5, #16
4001f3a4:	e1a06800 	lsl	r6, r0, #16
4001f3a8:	e1a06826 	lsr	r6, r6, #16
4001f3ac:	e59f0300 	ldr	r0, [pc, #768]	; 4001f6b4 <CyU3PUibSendDescr+0x614>
4001f3b0:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f3b4:	e3500000 	cmp	r0, #0
4001f3b8:	0a000002 	beq	4001f3c8 <CyU3PUibSendDescr+0x328>
4001f3bc:	e3a09001 	mov	r9, #1
4001f3c0:	e59f02ec 	ldr	r0, [pc, #748]	; 4001f6b4 <CyU3PUibSendDescr+0x614>
4001f3c4:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f3c8:	ea000099 	b	4001f634 <CyU3PUibSendDescr+0x594>
4001f3cc:	e1a00000 	nop			; (mov r0, r0)
4001f3d0:	e59f02d8 	ldr	r0, [pc, #728]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f3d4:	e5900008 	ldr	r0, [r0, #8]
4001f3d8:	e3500000 	cmp	r0, #0
4001f3dc:	0a000007 	beq	4001f400 <CyU3PUibSendDescr+0x360>
4001f3e0:	e59f02c4 	ldr	r0, [pc, #708]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f3e4:	e5d00009 	ldrb	r0, [r0, #9]
4001f3e8:	e3500003 	cmp	r0, #3
4001f3ec:	0a000003 	beq	4001f400 <CyU3PUibSendDescr+0x360>
4001f3f0:	e3a09001 	mov	r9, #1
4001f3f4:	e3a0600a 	mov	r6, #10
4001f3f8:	e59f02b0 	ldr	r0, [pc, #688]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f3fc:	e5908008 	ldr	r8, [r0, #8]
4001f400:	ea00008b 	b	4001f634 <CyU3PUibSendDescr+0x594>
4001f404:	e1a00000 	nop			; (mov r0, r0)
4001f408:	e59f029c 	ldr	r0, [pc, #668]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f40c:	e5d00009 	ldrb	r0, [r0, #9]
4001f410:	e3500002 	cmp	r0, #2
4001f414:	1a00001a 	bne	4001f484 <CyU3PUibSendDescr+0x3e4>
4001f418:	e59f0290 	ldr	r0, [pc, #656]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f41c:	e5900018 	ldr	r0, [r0, #24]
4001f420:	e3500000 	cmp	r0, #0
4001f424:	0a000034 	beq	4001f4fc <CyU3PUibSendDescr+0x45c>
4001f428:	e3a09001 	mov	r9, #1
4001f42c:	e59f027c 	ldr	r0, [pc, #636]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f430:	e5908018 	ldr	r8, [r0, #24]
4001f434:	e5900018 	ldr	r0, [r0, #24]
4001f438:	e5d00002 	ldrb	r0, [r0, #2]
4001f43c:	e59f126c 	ldr	r1, [pc, #620]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f440:	e5911018 	ldr	r1, [r1, #24]
4001f444:	e5d11003 	ldrb	r1, [r1, #3]
4001f448:	e1800401 	orr	r0, r0, r1, lsl #8
4001f44c:	e1500825 	cmp	r0, r5, lsr #16
4001f450:	2a000007 	bcs	4001f474 <CyU3PUibSendDescr+0x3d4>
4001f454:	e59f0254 	ldr	r0, [pc, #596]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f458:	e5900018 	ldr	r0, [r0, #24]
4001f45c:	e5d00002 	ldrb	r0, [r0, #2]
4001f460:	e59f1248 	ldr	r1, [pc, #584]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f464:	e5911018 	ldr	r1, [r1, #24]
4001f468:	e5d11003 	ldrb	r1, [r1, #3]
4001f46c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f470:	ea000000 	b	4001f478 <CyU3PUibSendDescr+0x3d8>
4001f474:	e1a00825 	lsr	r0, r5, #16
4001f478:	e1a06800 	lsl	r6, r0, #16
4001f47c:	e1a06826 	lsr	r6, r6, #16
4001f480:	ea00001d 	b	4001f4fc <CyU3PUibSendDescr+0x45c>
4001f484:	e59f0220 	ldr	r0, [pc, #544]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f488:	e5d00009 	ldrb	r0, [r0, #9]
4001f48c:	e3500001 	cmp	r0, #1
4001f490:	1a000019 	bne	4001f4fc <CyU3PUibSendDescr+0x45c>
4001f494:	e59f0214 	ldr	r0, [pc, #532]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f498:	e5900014 	ldr	r0, [r0, #20]
4001f49c:	e3500000 	cmp	r0, #0
4001f4a0:	0a000015 	beq	4001f4fc <CyU3PUibSendDescr+0x45c>
4001f4a4:	e3a09001 	mov	r9, #1
4001f4a8:	e59f0200 	ldr	r0, [pc, #512]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f4ac:	e5908014 	ldr	r8, [r0, #20]
4001f4b0:	e5900014 	ldr	r0, [r0, #20]
4001f4b4:	e5d00002 	ldrb	r0, [r0, #2]
4001f4b8:	e59f11f0 	ldr	r1, [pc, #496]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f4bc:	e5911014 	ldr	r1, [r1, #20]
4001f4c0:	e5d11003 	ldrb	r1, [r1, #3]
4001f4c4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f4c8:	e1500825 	cmp	r0, r5, lsr #16
4001f4cc:	2a000007 	bcs	4001f4f0 <CyU3PUibSendDescr+0x450>
4001f4d0:	e59f01d8 	ldr	r0, [pc, #472]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f4d4:	e5900014 	ldr	r0, [r0, #20]
4001f4d8:	e5d00002 	ldrb	r0, [r0, #2]
4001f4dc:	e59f11cc 	ldr	r1, [pc, #460]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f4e0:	e5911014 	ldr	r1, [r1, #20]
4001f4e4:	e5d11003 	ldrb	r1, [r1, #3]
4001f4e8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f4ec:	ea000000 	b	4001f4f4 <CyU3PUibSendDescr+0x454>
4001f4f0:	e1a00825 	lsr	r0, r5, #16
4001f4f4:	e1a06800 	lsl	r6, r0, #16
4001f4f8:	e1a06826 	lsr	r6, r6, #16
4001f4fc:	e3580000 	cmp	r8, #0
4001f500:	0a000001 	beq	4001f50c <CyU3PUibSendDescr+0x46c>
4001f504:	e3a00007 	mov	r0, #7
4001f508:	e5c80001 	strb	r0, [r8, #1]
4001f50c:	ea000048 	b	4001f634 <CyU3PUibSendDescr+0x594>
4001f510:	e1a00000 	nop			; (mov r0, r0)
4001f514:	e59f0194 	ldr	r0, [pc, #404]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f518:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f51c:	e3500000 	cmp	r0, #0
4001f520:	0a000022 	beq	4001f5b0 <CyU3PUibSendDescr+0x510>
4001f524:	e59f0180 	ldr	r0, [pc, #384]	; 4001f6ac <CyU3PUibSendDescr+0x60c>
4001f528:	e5d00009 	ldrb	r0, [r0, #9]
4001f52c:	e3500003 	cmp	r0, #3
4001f530:	0a000008 	beq	4001f558 <CyU3PUibSendDescr+0x4b8>
4001f534:	e59f0174 	ldr	r0, [pc, #372]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f538:	e5900000 	ldr	r0, [r0]
4001f53c:	e3500000 	cmp	r0, #0
4001f540:	0a00001a 	beq	4001f5b0 <CyU3PUibSendDescr+0x510>
4001f544:	e59f0164 	ldr	r0, [pc, #356]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f548:	e5900000 	ldr	r0, [r0]
4001f54c:	e5d00002 	ldrb	r0, [r0, #2]
4001f550:	e3500010 	cmp	r0, #16
4001f554:	1a000015 	bne	4001f5b0 <CyU3PUibSendDescr+0x510>
4001f558:	e3a09001 	mov	r9, #1
4001f55c:	e59f014c 	ldr	r0, [pc, #332]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f560:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f564:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f568:	e5d00002 	ldrb	r0, [r0, #2]
4001f56c:	e59f113c 	ldr	r1, [pc, #316]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f570:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f574:	e5d11003 	ldrb	r1, [r1, #3]
4001f578:	e1800401 	orr	r0, r0, r1, lsl #8
4001f57c:	e1500825 	cmp	r0, r5, lsr #16
4001f580:	2a000007 	bcs	4001f5a4 <CyU3PUibSendDescr+0x504>
4001f584:	e59f0124 	ldr	r0, [pc, #292]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f588:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f58c:	e5d00002 	ldrb	r0, [r0, #2]
4001f590:	e59f1118 	ldr	r1, [pc, #280]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f594:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f598:	e5d11003 	ldrb	r1, [r1, #3]
4001f59c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f5a0:	ea000000 	b	4001f5a8 <CyU3PUibSendDescr+0x508>
4001f5a4:	e1a00825 	lsr	r0, r5, #16
4001f5a8:	e1a06800 	lsl	r6, r0, #16
4001f5ac:	e1a06826 	lsr	r6, r6, #16
4001f5b0:	ea00001f 	b	4001f634 <CyU3PUibSendDescr+0x594>
4001f5b4:	e1a00000 	nop			; (mov r0, r0)
4001f5b8:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f5bc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f5c0:	e3500000 	cmp	r0, #0
4001f5c4:	0a00000d 	beq	4001f600 <CyU3PUibSendDescr+0x560>
4001f5c8:	e3a09001 	mov	r9, #1
4001f5cc:	e59f00dc 	ldr	r0, [pc, #220]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f5d0:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001f5d4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f5d8:	e5d00000 	ldrb	r0, [r0]
4001f5dc:	e1500825 	cmp	r0, r5, lsr #16
4001f5e0:	2a000003 	bcs	4001f5f4 <CyU3PUibSendDescr+0x554>
4001f5e4:	e59f00c4 	ldr	r0, [pc, #196]	; 4001f6b0 <CyU3PUibSendDescr+0x610>
4001f5e8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f5ec:	e5d00000 	ldrb	r0, [r0]
4001f5f0:	ea000000 	b	4001f5f8 <CyU3PUibSendDescr+0x558>
4001f5f4:	e1a00825 	lsr	r0, r5, #16
4001f5f8:	e1a06800 	lsl	r6, r0, #16
4001f5fc:	e1a06826 	lsr	r6, r6, #16
4001f600:	ea00000b 	b	4001f634 <CyU3PUibSendDescr+0x594>
4001f604:	e1a00000 	nop			; (mov r0, r0)
4001f608:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f6b8 <CyU3PUibSendDescr+0x618>
4001f60c:	e5900000 	ldr	r0, [r0]
4001f610:	e3500000 	cmp	r0, #0
4001f614:	0a000005 	beq	4001f630 <CyU3PUibSendDescr+0x590>
4001f618:	e1a01005 	mov	r1, r5
4001f61c:	e1a00004 	mov	r0, r4
4001f620:	e59f2090 	ldr	r2, [pc, #144]	; 4001f6b8 <CyU3PUibSendDescr+0x618>
4001f624:	e5922000 	ldr	r2, [r2]
4001f628:	e12fff32 	blx	r2
4001f62c:	e1a09000 	mov	r9, r0
4001f630:	e1a00000 	nop			; (mov r0, r0)
4001f634:	e1a00000 	nop			; (mov r0, r0)
4001f638:	e3590001 	cmp	r9, #1
4001f63c:	1a000017 	bne	4001f6a0 <CyU3PUibSendDescr+0x600>
4001f640:	e3580000 	cmp	r8, #0
4001f644:	0a000015 	beq	4001f6a0 <CyU3PUibSendDescr+0x600>
4001f648:	e1a01008 	mov	r1, r8
4001f64c:	e1a00006 	mov	r0, r6
4001f650:	ebfff758 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
4001f654:	e1a07000 	mov	r7, r0
4001f658:	e3570000 	cmp	r7, #0
4001f65c:	1a000009 	bne	4001f688 <CyU3PUibSendDescr+0x5e8>
4001f660:	e59d0000 	ldr	r0, [sp]
4001f664:	e1560000 	cmp	r6, r0
4001f668:	aa000006 	bge	4001f688 <CyU3PUibSendDescr+0x5e8>
4001f66c:	e24a0001 	sub	r0, sl, #1
4001f670:	e1100006 	tst	r0, r6
4001f674:	1a000003 	bne	4001f688 <CyU3PUibSendDescr+0x5e8>
4001f678:	e1a01008 	mov	r1, r8
4001f67c:	e3a00000 	mov	r0, #0
4001f680:	ebfff74c 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
4001f684:	e1a07000 	mov	r7, r0
4001f688:	e3570000 	cmp	r7, #0
4001f68c:	0a000003 	beq	4001f6a0 <CyU3PUibSendDescr+0x600>
4001f690:	e3a02000 	mov	r2, #0
4001f694:	e3a01001 	mov	r1, #1
4001f698:	e1a00002 	mov	r0, r2
4001f69c:	ebfff970 	bl	4001dc64 <CyU3PUsbStall>
4001f6a0:	e1a00009 	mov	r0, r9
4001f6a4:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001f6a8:	0000ffff 	.word	0x0000ffff
4001f6ac:	40031d40 	.word	0x40031d40
4001f6b0:	40031f98 	.word	0x40031f98
4001f6b4:	40031fb8 	.word	0x40031fb8
4001f6b8:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibSocketInit:

4001f6bc <CyU3PUibSocketInit>:
4001f6bc:	e3a00000 	mov	r0, #0
4001f6c0:	ea00000d 	b	4001f6fc <CyU3PUibSocketInit+0x40>
4001f6c4:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f6c8:	e59f2080 	ldr	r2, [pc, #128]	; 4001f750 <CyU3PUibSocketInit+0x94>
4001f6cc:	e0822380 	add	r2, r2, r0, lsl #7
4001f6d0:	e582100c 	str	r1, [r2, #12]
4001f6d4:	e3e01000 	mvn	r1, #0
4001f6d8:	e59f2070 	ldr	r2, [pc, #112]	; 4001f750 <CyU3PUibSocketInit+0x94>
4001f6dc:	e0822380 	add	r2, r2, r0, lsl #7
4001f6e0:	e5821010 	str	r1, [r2, #16]
4001f6e4:	e3a01000 	mov	r1, #0
4001f6e8:	e59f2060 	ldr	r2, [pc, #96]	; 4001f750 <CyU3PUibSocketInit+0x94>
4001f6ec:	e0822380 	add	r2, r2, r0, lsl #7
4001f6f0:	e5821014 	str	r1, [r2, #20]
4001f6f4:	e2801001 	add	r1, r0, #1
4001f6f8:	e20100ff 	and	r0, r1, #255	; 0xff
4001f6fc:	e3500010 	cmp	r0, #16
4001f700:	baffffef 	blt	4001f6c4 <CyU3PUibSocketInit+0x8>
4001f704:	e3a00000 	mov	r0, #0
4001f708:	ea00000d 	b	4001f744 <CyU3PUibSocketInit+0x88>
4001f70c:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001f710:	e59f203c 	ldr	r2, [pc, #60]	; 4001f754 <CyU3PUibSocketInit+0x98>
4001f714:	e0822380 	add	r2, r2, r0, lsl #7
4001f718:	e582100c 	str	r1, [r2, #12]
4001f71c:	e3e01000 	mvn	r1, #0
4001f720:	e59f202c 	ldr	r2, [pc, #44]	; 4001f754 <CyU3PUibSocketInit+0x98>
4001f724:	e0822380 	add	r2, r2, r0, lsl #7
4001f728:	e5821010 	str	r1, [r2, #16]
4001f72c:	e3a01000 	mov	r1, #0
4001f730:	e59f201c 	ldr	r2, [pc, #28]	; 4001f754 <CyU3PUibSocketInit+0x98>
4001f734:	e0822380 	add	r2, r2, r0, lsl #7
4001f738:	e5821014 	str	r1, [r2, #20]
4001f73c:	e2801001 	add	r1, r0, #1
4001f740:	e20100ff 	and	r0, r1, #255	; 0xff
4001f744:	e3500010 	cmp	r0, #16
4001f748:	baffffef 	blt	4001f70c <CyU3PUibSocketInit+0x50>
4001f74c:	e12fff1e 	bx	lr
4001f750:	e0038000 	.word	0xe0038000
4001f754:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001f758 <CyU3PUibStatusTimerCb>:
4001f758:	e92d4010 	push	{r4, lr}
4001f75c:	e1a04000 	mov	r4, r0
4001f760:	e59f0050 	ldr	r0, [pc, #80]	; 4001f7b8 <CyU3PUibStatusTimerCb+0x60>
4001f764:	e5900000 	ldr	r0, [r0]
4001f768:	e3500000 	cmp	r0, #0
4001f76c:	0a000010 	beq	4001f7b4 <CyU3PUibStatusTimerCb+0x5c>
4001f770:	e59f0044 	ldr	r0, [pc, #68]	; 4001f7bc <CyU3PUibStatusTimerCb+0x64>
4001f774:	e5d00009 	ldrb	r0, [r0, #9]
4001f778:	e3500003 	cmp	r0, #3
4001f77c:	1a00000c 	bne	4001f7b4 <CyU3PUibStatusTimerCb+0x5c>
4001f780:	e59f0038 	ldr	r0, [pc, #56]	; 4001f7c0 <CyU3PUibStatusTimerCb+0x68>
4001f784:	e5900000 	ldr	r0, [r0]
4001f788:	e3500000 	cmp	r0, #0
4001f78c:	0a000008 	beq	4001f7b4 <CyU3PUibStatusTimerCb+0x5c>
4001f790:	e3a01000 	mov	r1, #0
4001f794:	e1a00001 	mov	r0, r1
4001f798:	ebfff77c 	bl	4001d590 <CyU3PUsbSendErdy>
4001f79c:	e3a02000 	mov	r2, #0
4001f7a0:	e3a01064 	mov	r1, #100	; 0x64
4001f7a4:	e59f0018 	ldr	r0, [pc, #24]	; 4001f7c4 <CyU3PUibStatusTimerCb+0x6c>
4001f7a8:	ebffac63 	bl	4000a93c <_txe_timer_change>
4001f7ac:	e59f0010 	ldr	r0, [pc, #16]	; 4001f7c4 <CyU3PUibStatusTimerCb+0x6c>
4001f7b0:	ebffac51 	bl	4000a8fc <_txe_timer_activate>
4001f7b4:	e8bd8010 	pop	{r4, pc}
4001f7b8:	40030db0 	.word	0x40030db0
4001f7bc:	40031d40 	.word	0x40031d40
4001f7c0:	40030db4 	.word	0x40030db4
4001f7c4:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001f7c8 <CyU3PUibThreadEntry>:
4001f7c8:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001f7cc:	e3a05000 	mov	r5, #0
4001f7d0:	e59f505c 	ldr	r5, [pc, #92]	; 4001f834 <CyU3PUibThreadEntry+0x6c>
4001f7d4:	e3a00001 	mov	r0, #1
4001f7d8:	e59f1058 	ldr	r1, [pc, #88]	; 4001f838 <CyU3PUibThreadEntry+0x70>
4001f7dc:	e5810000 	str	r0, [r1]
4001f7e0:	e3a02020 	mov	r2, #32
4001f7e4:	e3a01000 	mov	r1, #0
4001f7e8:	e59f004c 	ldr	r0, [pc, #76]	; 4001f83c <CyU3PUibThreadEntry+0x74>
4001f7ec:	ebff8fb1 	bl	400036b8 <CyU3PMemSet>
4001f7f0:	ea00000e 	b	4001f830 <CyU3PUibThreadEntry+0x68>
4001f7f4:	e3e03000 	mvn	r3, #0
4001f7f8:	e58d3000 	str	r3, [sp]
4001f7fc:	e28d3004 	add	r3, sp, #4
4001f800:	e3a02001 	mov	r2, #1
4001f804:	e1a01005 	mov	r1, r5
4001f808:	e59f0030 	ldr	r0, [pc, #48]	; 4001f840 <CyU3PUibThreadEntry+0x78>
4001f80c:	ebffa934 	bl	40009ce4 <_txe_event_flags_get>
4001f810:	e1a04000 	mov	r4, r0
4001f814:	e3540000 	cmp	r4, #0
4001f818:	0a000000 	beq	4001f820 <CyU3PUibThreadEntry+0x58>
4001f81c:	ea000003 	b	4001f830 <CyU3PUibThreadEntry+0x68>
4001f820:	e59d0004 	ldr	r0, [sp, #4]
4001f824:	eb0002a1 	bl	400202b0 <CyU3PUsbHandleEvents>
4001f828:	ebffac16 	bl	4000a888 <_txe_thread_relinquish>
4001f82c:	e1a00000 	nop			; (mov r0, r0)
4001f830:	eaffffef 	b	4001f7f4 <CyU3PUibThreadEntry+0x2c>
4001f834:	073fbfe1 	.word	0x073fbfe1
4001f838:	40030d60 	.word	0x40030d60
4001f83c:	40032680 	.word	0x40032680
4001f840:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001f844 <CyU3PUibVbusChangeHandler>:
4001f844:	e92d4010 	push	{r4, lr}
4001f848:	e3a00000 	mov	r0, #0
4001f84c:	e59f114c 	ldr	r1, [pc, #332]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f850:	e5810060 	str	r0, [r1, #96]	; 0x60
4001f854:	e59f0148 	ldr	r0, [pc, #328]	; 4001f9a4 <CyU3PUibVbusChangeHandler+0x160>
4001f858:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f85c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f860:	e1100001 	tst	r0, r1
4001f864:	0a00000b 	beq	4001f898 <CyU3PUibVbusChangeHandler+0x54>
4001f868:	e3a00002 	mov	r0, #2
4001f86c:	eb000051 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
4001f870:	e59f0130 	ldr	r0, [pc, #304]	; 4001f9a8 <CyU3PUibVbusChangeHandler+0x164>
4001f874:	e5900000 	ldr	r0, [r0]
4001f878:	e3500000 	cmp	r0, #0
4001f87c:	0a000010 	beq	4001f8c4 <CyU3PUibVbusChangeHandler+0x80>
4001f880:	e3a01000 	mov	r1, #0
4001f884:	e3a0000b 	mov	r0, #11
4001f888:	e59f2118 	ldr	r2, [pc, #280]	; 4001f9a8 <CyU3PUibVbusChangeHandler+0x164>
4001f88c:	e5922000 	ldr	r2, [r2]
4001f890:	e12fff32 	blx	r2
4001f894:	ea00000a 	b	4001f8c4 <CyU3PUibVbusChangeHandler+0x80>
4001f898:	e3a00001 	mov	r0, #1
4001f89c:	eb000045 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
4001f8a0:	e59f0100 	ldr	r0, [pc, #256]	; 4001f9a8 <CyU3PUibVbusChangeHandler+0x164>
4001f8a4:	e5900000 	ldr	r0, [r0]
4001f8a8:	e3500000 	cmp	r0, #0
4001f8ac:	0a000004 	beq	4001f8c4 <CyU3PUibVbusChangeHandler+0x80>
4001f8b0:	e3a01000 	mov	r1, #0
4001f8b4:	e3a0000c 	mov	r0, #12
4001f8b8:	e59f20e8 	ldr	r2, [pc, #232]	; 4001f9a8 <CyU3PUibVbusChangeHandler+0x164>
4001f8bc:	e5922000 	ldr	r2, [r2]
4001f8c0:	e12fff32 	blx	r2
4001f8c4:	e59f00d8 	ldr	r0, [pc, #216]	; 4001f9a4 <CyU3PUibVbusChangeHandler+0x160>
4001f8c8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001f8cc:	e59f10cc 	ldr	r1, [pc, #204]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f8d0:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001f8d4:	e1100001 	tst	r0, r1
4001f8d8:	0a000022 	beq	4001f968 <CyU3PUibVbusChangeHandler+0x124>
4001f8dc:	e59f00bc 	ldr	r0, [pc, #188]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f8e0:	e5d00008 	ldrb	r0, [r0, #8]
4001f8e4:	e3500005 	cmp	r0, #5
4001f8e8:	ba000000 	blt	4001f8f0 <CyU3PUibVbusChangeHandler+0xac>
4001f8ec:	eb0008d6 	bl	40021c4c <HandleVbusOffEvent>
4001f8f0:	e59f00a8 	ldr	r0, [pc, #168]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f8f4:	e5d00008 	ldrb	r0, [r0, #8]
4001f8f8:	e3500004 	cmp	r0, #4
4001f8fc:	1a00001e 	bne	4001f97c <CyU3PUibVbusChangeHandler+0x138>
4001f900:	e59f0098 	ldr	r0, [pc, #152]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f904:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f908:	e59f1090 	ldr	r1, [pc, #144]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f90c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001f910:	e2810000 	add	r0, r1, #0
4001f914:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001f918:	e3500000 	cmp	r0, #0
4001f91c:	0a00000a 	beq	4001f94c <CyU3PUibVbusChangeHandler+0x108>
4001f920:	e3a00000 	mov	r0, #0
4001f924:	e59f1080 	ldr	r1, [pc, #128]	; 4001f9ac <CyU3PUibVbusChangeHandler+0x168>
4001f928:	e5810014 	str	r0, [r1, #20]
4001f92c:	e59f107c 	ldr	r1, [pc, #124]	; 4001f9b0 <CyU3PUibVbusChangeHandler+0x16c>
4001f930:	e5810000 	str	r0, [r1]
4001f934:	e59f1078 	ldr	r1, [pc, #120]	; 4001f9b4 <CyU3PUibVbusChangeHandler+0x170>
4001f938:	e5810000 	str	r0, [r1]
4001f93c:	e59f105c 	ldr	r1, [pc, #92]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f940:	e5810054 	str	r0, [r1, #84]	; 0x54
4001f944:	e5810050 	str	r0, [r1, #80]	; 0x50
4001f948:	e5810058 	str	r0, [r1, #88]	; 0x58
4001f94c:	e59f104c 	ldr	r1, [pc, #76]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f950:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001f954:	ebfff593 	bl	4001cfa8 <CyU3PUsbPhyEnable>
4001f958:	e3a00005 	mov	r0, #5
4001f95c:	e59f103c 	ldr	r1, [pc, #60]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f960:	e5c10008 	strb	r0, [r1, #8]
4001f964:	ea000004 	b	4001f97c <CyU3PUibVbusChangeHandler+0x138>
4001f968:	e59f0030 	ldr	r0, [pc, #48]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f96c:	e5d00008 	ldrb	r0, [r0, #8]
4001f970:	e3500005 	cmp	r0, #5
4001f974:	ba000000 	blt	4001f97c <CyU3PUibVbusChangeHandler+0x138>
4001f978:	eb0008b3 	bl	40021c4c <HandleVbusOffEvent>
4001f97c:	ebfff0df 	bl	4001bd00 <CyU3POtgIsStarted>
4001f980:	e3500000 	cmp	r0, #0
4001f984:	0a000000 	beq	4001f98c <CyU3PUibVbusChangeHandler+0x148>
4001f988:	ebfff4e3 	bl	4001cd1c <CyU3PUsbOtgVbusChangeHandler>
4001f98c:	e59f000c 	ldr	r0, [pc, #12]	; 4001f9a0 <CyU3PUibVbusChangeHandler+0x15c>
4001f990:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001f994:	e59f1008 	ldr	r1, [pc, #8]	; 4001f9a4 <CyU3PUibVbusChangeHandler+0x160>
4001f998:	e5810038 	str	r0, [r1, #56]	; 0x38
4001f99c:	e8bd8010 	pop	{r4, pc}
4001f9a0:	40031d40 	.word	0x40031d40
4001f9a4:	e0051000 	.word	0xe0051000
4001f9a8:	40030d9c 	.word	0x40030d9c
4001f9ac:	e0033000 	.word	0xe0033000
4001f9b0:	40030d84 	.word	0x40030d84
4001f9b4:	40030d88 	.word	0x40030d88

Disassembly of section i.CyU3PUsbAddToEventLog:

4001f9b8 <CyU3PUsbAddToEventLog>:
4001f9b8:	e59f1058 	ldr	r1, [pc, #88]	; 4001fa18 <CyU3PUsbAddToEventLog+0x60>
4001f9bc:	e5911000 	ldr	r1, [r1]
4001f9c0:	e3510000 	cmp	r1, #0
4001f9c4:	0a000012 	beq	4001fa14 <CyU3PUsbAddToEventLog+0x5c>
4001f9c8:	e59f104c 	ldr	r1, [pc, #76]	; 4001fa1c <CyU3PUsbAddToEventLog+0x64>
4001f9cc:	e5911000 	ldr	r1, [r1]
4001f9d0:	e59f2044 	ldr	r2, [pc, #68]	; 4001fa1c <CyU3PUsbAddToEventLog+0x64>
4001f9d4:	e5922000 	ldr	r2, [r2]
4001f9d8:	e2822001 	add	r2, r2, #1
4001f9dc:	e59f3038 	ldr	r3, [pc, #56]	; 4001fa1c <CyU3PUsbAddToEventLog+0x64>
4001f9e0:	e5832000 	str	r2, [r3]
4001f9e4:	e59f202c 	ldr	r2, [pc, #44]	; 4001fa18 <CyU3PUsbAddToEventLog+0x60>
4001f9e8:	e5922000 	ldr	r2, [r2]
4001f9ec:	e7c20001 	strb	r0, [r2, r1]
4001f9f0:	e2831000 	add	r1, r3, #0
4001f9f4:	e5911000 	ldr	r1, [r1]
4001f9f8:	e59f2020 	ldr	r2, [pc, #32]	; 4001fa20 <CyU3PUsbAddToEventLog+0x68>
4001f9fc:	e5922000 	ldr	r2, [r2]
4001fa00:	e1510002 	cmp	r1, r2
4001fa04:	3a000002 	bcc	4001fa14 <CyU3PUsbAddToEventLog+0x5c>
4001fa08:	e3a01000 	mov	r1, #0
4001fa0c:	e2832000 	add	r2, r3, #0
4001fa10:	e5821000 	str	r1, [r2]
4001fa14:	e12fff1e 	bx	lr
4001fa18:	40030d90 	.word	0x40030d90
4001fa1c:	40030d94 	.word	0x40030d94
4001fa20:	40030d98 	.word	0x40030d98

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001fa24 <CyU3PUsbCheckUsb3Disconnect>:
4001fa24:	e92d4070 	push	{r4, r5, r6, lr}
4001fa28:	e3a04e19 	mov	r4, #400	; 0x190
4001fa2c:	e3a06002 	mov	r6, #2
4001fa30:	e59f01fc 	ldr	r0, [pc, #508]	; 4001fc34 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fa34:	e1d000b0 	ldrh	r0, [r0]
4001fa38:	e3500001 	cmp	r0, #1
4001fa3c:	da000008 	ble	4001fa64 <CyU3PUsbCheckUsb3Disconnect+0x40>
4001fa40:	e59f01ec 	ldr	r0, [pc, #492]	; 4001fc34 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fa44:	e1d010b0 	ldrh	r1, [r0]
4001fa48:	e1a00004 	mov	r0, r4
4001fa4c:	ebffc41a 	bl	40010abc <__aeabi_idivmod>
4001fa50:	e1a04800 	lsl	r4, r0, #16
4001fa54:	e1a04824 	lsr	r4, r4, #16
4001fa58:	e2840001 	add	r0, r4, #1
4001fa5c:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fa60:	e3a06001 	mov	r6, #1
4001fa64:	e59f01cc 	ldr	r0, [pc, #460]	; 4001fc38 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fa68:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fa6c:	e200503f 	and	r5, r0, #63	; 0x3f
4001fa70:	e3550010 	cmp	r5, #16
4001fa74:	ba000004 	blt	4001fa8c <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa78:	e3550017 	cmp	r5, #23
4001fa7c:	ca000002 	bgt	4001fa8c <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fa80:	e3a00000 	mov	r0, #0
4001fa84:	e59f11b0 	ldr	r1, [pc, #432]	; 4001fc3c <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa88:	e5810000 	str	r0, [r1]
4001fa8c:	e59f01a8 	ldr	r0, [pc, #424]	; 4001fc3c <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fa90:	e5900000 	ldr	r0, [r0]
4001fa94:	e3500000 	cmp	r0, #0
4001fa98:	1a000000 	bne	4001faa0 <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fa9c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001faa0:	ea000010 	b	4001fae8 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001faa4:	e1a00006 	mov	r0, r6
4001faa8:	ebffa3c5 	bl	400089c4 <_tx_thread_sleep>
4001faac:	e59f0184 	ldr	r0, [pc, #388]	; 4001fc38 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fab0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fab4:	e200503f 	and	r5, r0, #63	; 0x3f
4001fab8:	e59f017c 	ldr	r0, [pc, #380]	; 4001fc3c <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fabc:	e5900000 	ldr	r0, [r0]
4001fac0:	e3500000 	cmp	r0, #0
4001fac4:	0a000003 	beq	4001fad8 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fac8:	e3550010 	cmp	r5, #16
4001facc:	ba000005 	blt	4001fae8 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fad0:	e3550017 	cmp	r5, #23
4001fad4:	ca000003 	bgt	4001fae8 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fad8:	e3a00000 	mov	r0, #0
4001fadc:	e59f1158 	ldr	r1, [pc, #344]	; 4001fc3c <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fae0:	e5810000 	str	r0, [r1]
4001fae4:	ea000004 	b	4001fafc <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001fae8:	e1b00004 	movs	r0, r4
4001faec:	e2441001 	sub	r1, r4, #1
4001faf0:	e1a04801 	lsl	r4, r1, #16
4001faf4:	e1a04824 	lsr	r4, r4, #16
4001faf8:	1affffe9 	bne	4001faa4 <CyU3PUsbCheckUsb3Disconnect+0x80>
4001fafc:	e1a00000 	nop			; (mov r0, r0)
4001fb00:	e59f0134 	ldr	r0, [pc, #308]	; 4001fc3c <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fb04:	e5900000 	ldr	r0, [r0]
4001fb08:	e3500000 	cmp	r0, #0
4001fb0c:	0a000047 	beq	4001fc30 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fb10:	e59f0128 	ldr	r0, [pc, #296]	; 4001fc40 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fb14:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fb18:	e3100a02 	tst	r0, #8192	; 0x2000
4001fb1c:	0a000020 	beq	4001fba4 <CyU3PUsbCheckUsb3Disconnect+0x180>
4001fb20:	e59f0118 	ldr	r0, [pc, #280]	; 4001fc40 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fb24:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001fb28:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001fb2c:	e59f110c 	ldr	r1, [pc, #268]	; 4001fc40 <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001fb30:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001fb34:	e3a00002 	mov	r0, #2
4001fb38:	ebffce52 	bl	40013488 <CyU3PBusyWait>
4001fb3c:	e59f0100 	ldr	r0, [pc, #256]	; 4001fc44 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb40:	e5900004 	ldr	r0, [r0, #4]
4001fb44:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001fb48:	e59f10f4 	ldr	r1, [pc, #244]	; 4001fc44 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb4c:	e5810004 	str	r0, [r1, #4]
4001fb50:	e3a00001 	mov	r0, #1
4001fb54:	ebffce4b 	bl	40013488 <CyU3PBusyWait>
4001fb58:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fc38 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb5c:	e590001c 	ldr	r0, [r0, #28]
4001fb60:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001fb64:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fc38 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fb68:	e581001c 	str	r0, [r1, #28]
4001fb6c:	e59f00d4 	ldr	r0, [pc, #212]	; 4001fc48 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001fb70:	e5900000 	ldr	r0, [r0]
4001fb74:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fb78:	e3a00001 	mov	r0, #1
4001fb7c:	ebffce41 	bl	40013488 <CyU3PBusyWait>
4001fb80:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fc44 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb84:	e5900004 	ldr	r0, [r0, #4]
4001fb88:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001fb8c:	e59f10b0 	ldr	r1, [pc, #176]	; 4001fc44 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001fb90:	e5810004 	str	r0, [r1, #4]
4001fb94:	e3a01000 	mov	r1, #0
4001fb98:	e3a00002 	mov	r0, #2
4001fb9c:	ebfff1d9 	bl	4001c308 <CyU3PSetUsbCoreClock>
4001fba0:	ea000022 	b	4001fc30 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fba4:	e59f00a0 	ldr	r0, [pc, #160]	; 4001fc4c <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fba8:	e5900000 	ldr	r0, [r0]
4001fbac:	e3500000 	cmp	r0, #0
4001fbb0:	0a000007 	beq	4001fbd4 <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001fbb4:	e3a00000 	mov	r0, #0
4001fbb8:	e59f108c 	ldr	r1, [pc, #140]	; 4001fc4c <CyU3PUsbCheckUsb3Disconnect+0x228>
4001fbbc:	e5810000 	str	r0, [r1]
4001fbc0:	e3a00001 	mov	r0, #1
4001fbc4:	ebfff481 	bl	4001cdd0 <CyU3PUsbPhyDisable>
4001fbc8:	e3a00001 	mov	r0, #1
4001fbcc:	ebfff4f5 	bl	4001cfa8 <CyU3PUsbPhyEnable>
4001fbd0:	eaffffb1 	b	4001fa9c <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fbd4:	e59f0074 	ldr	r0, [pc, #116]	; 4001fc50 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fbd8:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001fbdc:	e3500000 	cmp	r0, #0
4001fbe0:	0a000011 	beq	4001fc2c <CyU3PUsbCheckUsb3Disconnect+0x208>
4001fbe4:	e3a00001 	mov	r0, #1
4001fbe8:	ebfff478 	bl	4001cdd0 <CyU3PUsbPhyDisable>
4001fbec:	e3a00003 	mov	r0, #3
4001fbf0:	e59f1058 	ldr	r1, [pc, #88]	; 4001fc50 <CyU3PUsbCheckUsb3Disconnect+0x22c>
4001fbf4:	e5c10008 	strb	r0, [r1, #8]
4001fbf8:	e3a00000 	mov	r0, #0
4001fbfc:	e5c10009 	strb	r0, [r1, #9]
4001fc00:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001fc04:	e59f0048 	ldr	r0, [pc, #72]	; 4001fc54 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fc08:	e5900000 	ldr	r0, [r0]
4001fc0c:	e3500000 	cmp	r0, #0
4001fc10:	0a000006 	beq	4001fc30 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fc14:	e3a01000 	mov	r1, #0
4001fc18:	e3a00014 	mov	r0, #20
4001fc1c:	e59f2030 	ldr	r2, [pc, #48]	; 4001fc54 <CyU3PUsbCheckUsb3Disconnect+0x230>
4001fc20:	e5922000 	ldr	r2, [r2]
4001fc24:	e12fff32 	blx	r2
4001fc28:	ea000000 	b	4001fc30 <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001fc2c:	eb00008e 	bl	4001fe6c <CyU3PUsbFallBackToUsb2>
4001fc30:	eaffff99 	b	4001fa9c <CyU3PUsbCheckUsb3Disconnect+0x78>
4001fc34:	40030db8 	.word	0x40030db8
4001fc38:	e0033000 	.word	0xe0033000
4001fc3c:	40030d64 	.word	0x40030d64
4001fc40:	e0031000 	.word	0xe0031000
4001fc44:	e0030000 	.word	0xe0030000
4001fc48:	40030c58 	.word	0x40030c58
4001fc4c:	40030d74 	.word	0x40030d74
4001fc50:	40031d40 	.word	0x40031d40
4001fc54:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbDescInit:

4001fc58 <CyU3PUsbDescInit>:
4001fc58:	e92d4010 	push	{r4, lr}
4001fc5c:	e3a02074 	mov	r2, #116	; 0x74
4001fc60:	e3a01000 	mov	r1, #0
4001fc64:	e59f0004 	ldr	r0, [pc, #4]	; 4001fc70 <CyU3PUsbDescInit+0x18>
4001fc68:	ebff8e92 	bl	400036b8 <CyU3PMemSet>
4001fc6c:	e8bd8010 	pop	{r4, pc}
4001fc70:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

4001fc74 <CyU3PUsbEpPrepare>:
4001fc74:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001fc78:	e1a04000 	mov	r4, r0
4001fc7c:	e3a05001 	mov	r5, #1
4001fc80:	ea000061 	b	4001fe0c <CyU3PUsbEpPrepare+0x198>
4001fc84:	e59f01b8 	ldr	r0, [pc, #440]	; 4001fe44 <CyU3PUsbEpPrepare+0x1d0>
4001fc88:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fc8c:	e3100901 	tst	r0, #16384	; 0x4000
4001fc90:	0a000029 	beq	4001fd3c <CyU3PUsbEpPrepare+0xc8>
4001fc94:	e0850085 	add	r0, r5, r5, lsl #1
4001fc98:	e59f11a8 	ldr	r1, [pc, #424]	; 4001fe48 <CyU3PUsbEpPrepare+0x1d4>
4001fc9c:	e0810100 	add	r0, r1, r0, lsl #2
4001fca0:	e1d070b0 	ldrh	r7, [r0]
4001fca4:	e59f0198 	ldr	r0, [pc, #408]	; 4001fe44 <CyU3PUsbEpPrepare+0x1d0>
4001fca8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fcac:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fcb0:	e1a06520 	lsr	r6, r0, #10
4001fcb4:	e2440001 	sub	r0, r4, #1
4001fcb8:	e0800080 	add	r0, r0, r0, lsl #1
4001fcbc:	e59f1188 	ldr	r1, [pc, #392]	; 4001fe4c <CyU3PUsbEpPrepare+0x1d8>
4001fcc0:	e0810100 	add	r0, r1, r0, lsl #2
4001fcc4:	e2461001 	sub	r1, r6, #1
4001fcc8:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fccc:	e1570008 	cmp	r7, r8
4001fcd0:	8a000001 	bhi	4001fcdc <CyU3PUsbEpPrepare+0x68>
4001fcd4:	e3570000 	cmp	r7, #0
4001fcd8:	1a000000 	bne	4001fce0 <CyU3PUsbEpPrepare+0x6c>
4001fcdc:	e1a07008 	mov	r7, r8
4001fce0:	e3540003 	cmp	r4, #3
4001fce4:	1a000005 	bne	4001fd00 <CyU3PUsbEpPrepare+0x8c>
4001fce8:	e59f0160 	ldr	r0, [pc, #352]	; 4001fe50 <CyU3PUsbEpPrepare+0x1dc>
4001fcec:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fcf0:	e3800001 	orr	r0, r0, #1
4001fcf4:	e59f1154 	ldr	r1, [pc, #340]	; 4001fe50 <CyU3PUsbEpPrepare+0x1dc>
4001fcf8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fcfc:	ea000008 	b	4001fd24 <CyU3PUsbEpPrepare+0xb0>
4001fd00:	e59f013c 	ldr	r0, [pc, #316]	; 4001fe44 <CyU3PUsbEpPrepare+0x1d0>
4001fd04:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd08:	e1a00520 	lsr	r0, r0, #10
4001fd0c:	e1a00500 	lsl	r0, r0, #10
4001fd10:	e1a01b07 	lsl	r1, r7, #22
4001fd14:	e1a01b21 	lsr	r1, r1, #22
4001fd18:	e1800001 	orr	r0, r0, r1
4001fd1c:	e59f1120 	ldr	r1, [pc, #288]	; 4001fe44 <CyU3PUsbEpPrepare+0x1d0>
4001fd20:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fd24:	e59f0128 	ldr	r0, [pc, #296]	; 4001fe54 <CyU3PUsbEpPrepare+0x1e0>
4001fd28:	e7807105 	str	r7, [r0, r5, lsl #2]
4001fd2c:	e3850080 	orr	r0, r5, #128	; 0x80
4001fd30:	e3a02001 	mov	r2, #1
4001fd34:	e3a01000 	mov	r1, #0
4001fd38:	ebfff7c9 	bl	4001dc64 <CyU3PUsbStall>
4001fd3c:	e59f0114 	ldr	r0, [pc, #276]	; 4001fe58 <CyU3PUsbEpPrepare+0x1e4>
4001fd40:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd44:	e3100901 	tst	r0, #16384	; 0x4000
4001fd48:	0a00002d 	beq	4001fe04 <CyU3PUsbEpPrepare+0x190>
4001fd4c:	e0850085 	add	r0, r5, r5, lsl #1
4001fd50:	e59f1104 	ldr	r1, [pc, #260]	; 4001fe5c <CyU3PUsbEpPrepare+0x1e8>
4001fd54:	e0810100 	add	r0, r1, r0, lsl #2
4001fd58:	e1d070b0 	ldrh	r7, [r0]
4001fd5c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001fe58 <CyU3PUsbEpPrepare+0x1e4>
4001fd60:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fd64:	e2000b03 	and	r0, r0, #3072	; 0xc00
4001fd68:	e1a06520 	lsr	r6, r0, #10
4001fd6c:	e2440001 	sub	r0, r4, #1
4001fd70:	e0800080 	add	r0, r0, r0, lsl #1
4001fd74:	e59f10d0 	ldr	r1, [pc, #208]	; 4001fe4c <CyU3PUsbEpPrepare+0x1d8>
4001fd78:	e0810100 	add	r0, r1, r0, lsl #2
4001fd7c:	e2461001 	sub	r1, r6, #1
4001fd80:	e7908101 	ldr	r8, [r0, r1, lsl #2]
4001fd84:	e1570008 	cmp	r7, r8
4001fd88:	8a000001 	bhi	4001fd94 <CyU3PUsbEpPrepare+0x120>
4001fd8c:	e3570000 	cmp	r7, #0
4001fd90:	1a000000 	bne	4001fd98 <CyU3PUsbEpPrepare+0x124>
4001fd94:	e1a07008 	mov	r7, r8
4001fd98:	e3540003 	cmp	r4, #3
4001fd9c:	1a000005 	bne	4001fdb8 <CyU3PUsbEpPrepare+0x144>
4001fda0:	e59f00b8 	ldr	r0, [pc, #184]	; 4001fe60 <CyU3PUsbEpPrepare+0x1ec>
4001fda4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fda8:	e3800001 	orr	r0, r0, #1
4001fdac:	e59f10ac 	ldr	r1, [pc, #172]	; 4001fe60 <CyU3PUsbEpPrepare+0x1ec>
4001fdb0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fdb4:	ea000008 	b	4001fddc <CyU3PUsbEpPrepare+0x168>
4001fdb8:	e59f0098 	ldr	r0, [pc, #152]	; 4001fe58 <CyU3PUsbEpPrepare+0x1e4>
4001fdbc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fdc0:	e1a00520 	lsr	r0, r0, #10
4001fdc4:	e1a00500 	lsl	r0, r0, #10
4001fdc8:	e1a01b07 	lsl	r1, r7, #22
4001fdcc:	e1a01b21 	lsr	r1, r1, #22
4001fdd0:	e1800001 	orr	r0, r0, r1
4001fdd4:	e59f107c 	ldr	r1, [pc, #124]	; 4001fe58 <CyU3PUsbEpPrepare+0x1e4>
4001fdd8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fddc:	e59f0080 	ldr	r0, [pc, #128]	; 4001fe64 <CyU3PUsbEpPrepare+0x1f0>
4001fde0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001fde4:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001fde8:	e1800007 	orr	r0, r0, r7
4001fdec:	e59f1070 	ldr	r1, [pc, #112]	; 4001fe64 <CyU3PUsbEpPrepare+0x1f0>
4001fdf0:	e7810105 	str	r0, [r1, r5, lsl #2]
4001fdf4:	e3a02001 	mov	r2, #1
4001fdf8:	e3a01000 	mov	r1, #0
4001fdfc:	e1a00005 	mov	r0, r5
4001fe00:	ebfff797 	bl	4001dc64 <CyU3PUsbStall>
4001fe04:	e2850001 	add	r0, r5, #1
4001fe08:	e20050ff 	and	r5, r0, #255	; 0xff
4001fe0c:	e3550010 	cmp	r5, #16
4001fe10:	baffff9b 	blt	4001fc84 <CyU3PUsbEpPrepare+0x10>
4001fe14:	e3540003 	cmp	r4, #3
4001fe18:	1a000005 	bne	4001fe34 <CyU3PUsbEpPrepare+0x1c0>
4001fe1c:	e59f1044 	ldr	r1, [pc, #68]	; 4001fe68 <CyU3PUsbEpPrepare+0x1f4>
4001fe20:	e5911068 	ldr	r1, [r1, #104]	; 0x68
4001fe24:	e3510000 	cmp	r1, #0
4001fe28:	0a000001 	beq	4001fe34 <CyU3PUsbEpPrepare+0x1c0>
4001fe2c:	e3a01001 	mov	r1, #1
4001fe30:	ea000000 	b	4001fe38 <CyU3PUsbEpPrepare+0x1c4>
4001fe34:	e3a01000 	mov	r1, #0
4001fe38:	e1a00001 	mov	r0, r1
4001fe3c:	eb000854 	bl	40021f94 <CyFx3UsbDmaPrefetchEnable>
4001fe40:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001fe44:	e0031418 	.word	0xe0031418
4001fe48:	40031bb8 	.word	0x40031bb8
4001fe4c:	40011dd0 	.word	0x40011dd0
4001fe50:	e0033500 	.word	0xe0033500
4001fe54:	e0031c40 	.word	0xe0031c40
4001fe58:	e0031498 	.word	0xe0031498
4001fe5c:	40031c78 	.word	0x40031c78
4001fe60:	e0033600 	.word	0xe0033600
4001fe64:	e0031c80 	.word	0xe0031c80
4001fe68:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

4001fe6c <CyU3PUsbFallBackToUsb2>:
4001fe6c:	e92d4010 	push	{r4, lr}
4001fe70:	e59f0234 	ldr	r0, [pc, #564]	; 400200ac <CyU3PUsbFallBackToUsb2+0x240>
4001fe74:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fe78:	e3500000 	cmp	r0, #0
4001fe7c:	0a000006 	beq	4001fe9c <CyU3PUsbFallBackToUsb2+0x30>
4001fe80:	e59f0228 	ldr	r0, [pc, #552]	; 400200b0 <CyU3PUsbFallBackToUsb2+0x244>
4001fe84:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fe88:	e59f121c 	ldr	r1, [pc, #540]	; 400200ac <CyU3PUsbFallBackToUsb2+0x240>
4001fe8c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fe90:	e1100001 	tst	r0, r1
4001fe94:	1a000000 	bne	4001fe9c <CyU3PUsbFallBackToUsb2+0x30>
4001fe98:	e8bd8010 	pop	{r4, pc}
4001fe9c:	e3a00050 	mov	r0, #80	; 0x50
4001fea0:	ebfffec4 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
4001fea4:	eb0007f1 	bl	40021e70 <CyU3PVicDisableAllInterrupts>
4001fea8:	e1a04000 	mov	r4, r0
4001feac:	e3a01000 	mov	r1, #0
4001feb0:	e59f01fc 	ldr	r0, [pc, #508]	; 400200b4 <CyU3PUsbFallBackToUsb2+0x248>
4001feb4:	eb000861 	bl	40022040 <CyFx3UsbWritePhyReg>
4001feb8:	e1a00004 	mov	r0, r4
4001febc:	eb0007f9 	bl	40021ea8 <CyU3PVicEnableInterrupts>
4001fec0:	e3a00a01 	mov	r0, #4096	; 0x1000
4001fec4:	e59f11ec 	ldr	r1, [pc, #492]	; 400200b8 <CyU3PUsbFallBackToUsb2+0x24c>
4001fec8:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fecc:	e59f01d8 	ldr	r0, [pc, #472]	; 400200ac <CyU3PUsbFallBackToUsb2+0x240>
4001fed0:	e5900058 	ldr	r0, [r0, #88]	; 0x58
4001fed4:	e2800001 	add	r0, r0, #1
4001fed8:	e59f11cc 	ldr	r1, [pc, #460]	; 400200ac <CyU3PUsbFallBackToUsb2+0x240>
4001fedc:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fee0:	e3a00000 	mov	r0, #0
4001fee4:	e59f11d0 	ldr	r1, [pc, #464]	; 400200bc <CyU3PUsbFallBackToUsb2+0x250>
4001fee8:	e5810000 	str	r0, [r1]
4001feec:	e59f01cc 	ldr	r0, [pc, #460]	; 400200c0 <CyU3PUsbFallBackToUsb2+0x254>
4001fef0:	ebffab25 	bl	4000ab8c <_txe_timer_deactivate>
4001fef4:	e3a00002 	mov	r0, #2
4001fef8:	ebffcd62 	bl	40013488 <CyU3PBusyWait>
4001fefc:	e3a01002 	mov	r1, #2
4001ff00:	e1a00001 	mov	r0, r1
4001ff04:	ebfff0ff 	bl	4001c308 <CyU3PSetUsbCoreClock>
4001ff08:	e3a00002 	mov	r0, #2
4001ff0c:	ebffcd5d 	bl	40013488 <CyU3PBusyWait>
4001ff10:	e59f01ac 	ldr	r0, [pc, #428]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
4001ff14:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff18:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001ff1c:	e59f11a0 	ldr	r1, [pc, #416]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
4001ff20:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ff24:	e3a00002 	mov	r0, #2
4001ff28:	ebffcd56 	bl	40013488 <CyU3PBusyWait>
4001ff2c:	e59f0190 	ldr	r0, [pc, #400]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
4001ff30:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff34:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001ff38:	e59f1184 	ldr	r1, [pc, #388]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
4001ff3c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ff40:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001ff44:	e5900004 	ldr	r0, [r0, #4]
4001ff48:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001ff4c:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001ff50:	e5810004 	str	r0, [r1, #4]
4001ff54:	e2810a03 	add	r0, r1, #12288	; 0x3000
4001ff58:	e590001c 	ldr	r0, [r0, #28]
4001ff5c:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ff60:	e2811a03 	add	r1, r1, #12288	; 0x3000
4001ff64:	e581001c 	str	r0, [r1, #28]
4001ff68:	e59f0158 	ldr	r0, [pc, #344]	; 400200c8 <CyU3PUsbFallBackToUsb2+0x25c>
4001ff6c:	e5900000 	ldr	r0, [r0]
4001ff70:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ff74:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
4001ff78:	e5900000 	ldr	r0, [r0]
4001ff7c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001ff80:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
4001ff84:	e5810000 	str	r0, [r1]
4001ff88:	e3a00005 	mov	r0, #5
4001ff8c:	ebffcd3d 	bl	40013488 <CyU3PBusyWait>
4001ff90:	e59f0134 	ldr	r0, [pc, #308]	; 400200cc <CyU3PUsbFallBackToUsb2+0x260>
4001ff94:	e5900000 	ldr	r0, [r0]
4001ff98:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001ff9c:	e59f1128 	ldr	r1, [pc, #296]	; 400200cc <CyU3PUsbFallBackToUsb2+0x260>
4001ffa0:	e5810000 	str	r0, [r1]
4001ffa4:	e3a0000a 	mov	r0, #10
4001ffa8:	ebffcd36 	bl	40013488 <CyU3PBusyWait>
4001ffac:	e3e00000 	mvn	r0, #0
4001ffb0:	e59f110c 	ldr	r1, [pc, #268]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
4001ffb4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ffb8:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001ffbc:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001ffc0:	e59f0108 	ldr	r0, [pc, #264]	; 400200d0 <CyU3PUsbFallBackToUsb2+0x264>
4001ffc4:	ebffd869 	bl	40016170 <CyU3PDmaChannelReset>
4001ffc8:	e59f0104 	ldr	r0, [pc, #260]	; 400200d4 <CyU3PUsbFallBackToUsb2+0x268>
4001ffcc:	ebffd867 	bl	40016170 <CyU3PDmaChannelReset>
4001ffd0:	e3a00000 	mov	r0, #0
4001ffd4:	e59f10dc 	ldr	r1, [pc, #220]	; 400200b8 <CyU3PUsbFallBackToUsb2+0x24c>
4001ffd8:	e5810008 	str	r0, [r1, #8]
4001ffdc:	e3e00000 	mvn	r0, #0
4001ffe0:	e5810004 	str	r0, [r1, #4]
4001ffe4:	e3a00000 	mov	r0, #0
4001ffe8:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001ffec:	e3e00000 	mvn	r0, #0
4001fff0:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001fff4:	e1c10820 	bic	r0, r1, r0, lsr #16
4001fff8:	e5900004 	ldr	r0, [r0, #4]
4001fffc:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020000:	e2411a03 	sub	r1, r1, #12288	; 0x3000
40020004:	e5810004 	str	r0, [r1, #4]
40020008:	e2810a01 	add	r0, r1, #4096	; 0x1000
4002000c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020010:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020014:	e2811a01 	add	r1, r1, #4096	; 0x1000
40020018:	e5810418 	str	r0, [r1, #1048]	; 0x418
4002001c:	e1a00001 	mov	r0, r1
40020020:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020024:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020028:	e5810498 	str	r0, [r1, #1176]	; 0x498
4002002c:	e3a00001 	mov	r0, #1
40020030:	e59f1074 	ldr	r1, [pc, #116]	; 400200ac <CyU3PUsbFallBackToUsb2+0x240>
40020034:	e5c10009 	strb	r0, [r1, #9]
40020038:	e3a00000 	mov	r0, #0
4002003c:	e5810044 	str	r0, [r1, #68]	; 0x44
40020040:	e3a00501 	mov	r0, #4194304	; 0x400000
40020044:	e59f108c 	ldr	r1, [pc, #140]	; 400200d8 <CyU3PUsbFallBackToUsb2+0x26c>
40020048:	e5810074 	str	r0, [r1, #116]	; 0x74
4002004c:	e3a00002 	mov	r0, #2
40020050:	ebffcd0c 	bl	40013488 <CyU3PBusyWait>
40020054:	e59f0068 	ldr	r0, [pc, #104]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
40020058:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002005c:	e3800a02 	orr	r0, r0, #8192	; 0x2000
40020060:	e59f105c 	ldr	r1, [pc, #92]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
40020064:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020068:	e3a00064 	mov	r0, #100	; 0x64
4002006c:	ebffcd05 	bl	40013488 <CyU3PBusyWait>
40020070:	eb0007a0 	bl	40021ef8 <CyFx3Usb2PhySetup>
40020074:	e59f0060 	ldr	r0, [pc, #96]	; 400200dc <CyU3PUsbFallBackToUsb2+0x270>
40020078:	e59f1044 	ldr	r1, [pc, #68]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
4002007c:	e5810008 	str	r0, [r1, #8]
40020080:	e3a00050 	mov	r0, #80	; 0x50
40020084:	ebffccff 	bl	40013488 <CyU3PBusyWait>
40020088:	e3a01000 	mov	r1, #0
4002008c:	e3a00002 	mov	r0, #2
40020090:	ebfff09c 	bl	4001c308 <CyU3PSetUsbCoreClock>
40020094:	e59f0028 	ldr	r0, [pc, #40]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
40020098:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002009c:	e3c00008 	bic	r0, r0, #8
400200a0:	e59f101c 	ldr	r1, [pc, #28]	; 400200c4 <CyU3PUsbFallBackToUsb2+0x258>
400200a4:	e5810408 	str	r0, [r1, #1032]	; 0x408
400200a8:	eaffff7a 	b	4001fe98 <CyU3PUsbFallBackToUsb2+0x2c>
400200ac:	40031d40 	.word	0x40031d40
400200b0:	e0051000 	.word	0xe0051000
400200b4:	00001005 	.word	0x00001005
400200b8:	e0033000 	.word	0xe0033000
400200bc:	40030db0 	.word	0x40030db0
400200c0:	400326a0 	.word	0x400326a0
400200c4:	e0031000 	.word	0xe0031000
400200c8:	40030c58 	.word	0x40030c58
400200cc:	e0050000 	.word	0xe0050000
400200d0:	40031a78 	.word	0x40031a78
400200d4:	40031b18 	.word	0x40031b18
400200d8:	e0032000 	.word	0xe0032000
400200dc:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

400200e0 <CyU3PUsbGetEpStatus>:
400200e0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400200e4:	e1a04000 	mov	r4, r0
400200e8:	e204600f 	and	r6, r4, #15
400200ec:	e59f0090 	ldr	r0, [pc, #144]	; 40020184 <CyU3PUsbGetEpStatus+0xa4>
400200f0:	e5d00009 	ldrb	r0, [r0, #9]
400200f4:	e3500003 	cmp	r0, #3
400200f8:	1a00000b 	bne	4002012c <CyU3PUsbGetEpStatus+0x4c>
400200fc:	e3140080 	tst	r4, #128	; 0x80
40020100:	0a000004 	beq	40020118 <CyU3PUsbGetEpStatus+0x38>
40020104:	e59f007c 	ldr	r0, [pc, #124]	; 40020188 <CyU3PUsbGetEpStatus+0xa8>
40020108:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4002010c:	e2000004 	and	r0, r0, #4
40020110:	e58d0000 	str	r0, [sp]
40020114:	ea00000f 	b	40020158 <CyU3PUsbGetEpStatus+0x78>
40020118:	e59f006c 	ldr	r0, [pc, #108]	; 4002018c <CyU3PUsbGetEpStatus+0xac>
4002011c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020120:	e2000004 	and	r0, r0, #4
40020124:	e58d0000 	str	r0, [sp]
40020128:	ea00000a 	b	40020158 <CyU3PUsbGetEpStatus+0x78>
4002012c:	e3140080 	tst	r4, #128	; 0x80
40020130:	0a000004 	beq	40020148 <CyU3PUsbGetEpStatus+0x68>
40020134:	e59f0054 	ldr	r0, [pc, #84]	; 40020190 <CyU3PUsbGetEpStatus+0xb0>
40020138:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4002013c:	e2000801 	and	r0, r0, #65536	; 0x10000
40020140:	e58d0000 	str	r0, [sp]
40020144:	ea000003 	b	40020158 <CyU3PUsbGetEpStatus+0x78>
40020148:	e59f0044 	ldr	r0, [pc, #68]	; 40020194 <CyU3PUsbGetEpStatus+0xb4>
4002014c:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020150:	e2000801 	and	r0, r0, #65536	; 0x10000
40020154:	e58d0000 	str	r0, [sp]
40020158:	e59d0000 	ldr	r0, [sp]
4002015c:	e3500000 	cmp	r0, #0
40020160:	0a000001 	beq	4002016c <CyU3PUsbGetEpStatus+0x8c>
40020164:	e3a00001 	mov	r0, #1
40020168:	e58d0000 	str	r0, [sp]
4002016c:	e1a0100d 	mov	r1, sp
40020170:	e3a00002 	mov	r0, #2
40020174:	ebfff48f 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
40020178:	e1a05000 	mov	r5, r0
4002017c:	e1a00005 	mov	r0, r5
40020180:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020184:	40031d40 	.word	0x40031d40
40020188:	e0033500 	.word	0xe0033500
4002018c:	e0033600 	.word	0xe0033600
40020190:	e0031418 	.word	0xe0031418
40020194:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

40020198 <CyU3PUsbHandleClearFeature>:
40020198:	e92d4070 	push	{r4, r5, r6, lr}
4002019c:	e1a04000 	mov	r4, r0
400201a0:	e3a05000 	mov	r5, #0
400201a4:	e3540001 	cmp	r4, #1
400201a8:	0a000006 	beq	400201c8 <CyU3PUsbHandleClearFeature+0x30>
400201ac:	e3540002 	cmp	r4, #2
400201b0:	0a00000b 	beq	400201e4 <CyU3PUsbHandleClearFeature+0x4c>
400201b4:	e3540030 	cmp	r4, #48	; 0x30
400201b8:	0a00000f 	beq	400201fc <CyU3PUsbHandleClearFeature+0x64>
400201bc:	e3540031 	cmp	r4, #49	; 0x31
400201c0:	1a00002d 	bne	4002027c <CyU3PUsbHandleClearFeature+0xe4>
400201c4:	ea00001c 	b	4002023c <CyU3PUsbHandleClearFeature+0xa4>
400201c8:	e1a00000 	nop			; (mov r0, r0)
400201cc:	e59f00d8 	ldr	r0, [pc, #216]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
400201d0:	e5d00006 	ldrb	r0, [r0, #6]
400201d4:	e3c00002 	bic	r0, r0, #2
400201d8:	e59f10cc 	ldr	r1, [pc, #204]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
400201dc:	e5c10006 	strb	r0, [r1, #6]
400201e0:	e1a00000 	nop			; (mov r0, r0)
400201e4:	e59f00c0 	ldr	r0, [pc, #192]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
400201e8:	e5d00009 	ldrb	r0, [r0, #9]
400201ec:	e3500003 	cmp	r0, #3
400201f0:	0a000000 	beq	400201f8 <CyU3PUsbHandleClearFeature+0x60>
400201f4:	e3a05001 	mov	r5, #1
400201f8:	ea000021 	b	40020284 <CyU3PUsbHandleClearFeature+0xec>
400201fc:	e1a00000 	nop			; (mov r0, r0)
40020200:	e59f00a4 	ldr	r0, [pc, #164]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020204:	e5d00009 	ldrb	r0, [r0, #9]
40020208:	e3500003 	cmp	r0, #3
4002020c:	1a000009 	bne	40020238 <CyU3PUsbHandleClearFeature+0xa0>
40020210:	e59f0094 	ldr	r0, [pc, #148]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020214:	e5d00008 	ldrb	r0, [r0, #8]
40020218:	e3500006 	cmp	r0, #6
4002021c:	1a000005 	bne	40020238 <CyU3PUsbHandleClearFeature+0xa0>
40020220:	e59f0084 	ldr	r0, [pc, #132]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020224:	e5d00006 	ldrb	r0, [r0, #6]
40020228:	e3c00004 	bic	r0, r0, #4
4002022c:	e59f1078 	ldr	r1, [pc, #120]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020230:	e5c10006 	strb	r0, [r1, #6]
40020234:	e3a05001 	mov	r5, #1
40020238:	ea000011 	b	40020284 <CyU3PUsbHandleClearFeature+0xec>
4002023c:	e1a00000 	nop			; (mov r0, r0)
40020240:	e59f0064 	ldr	r0, [pc, #100]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020244:	e5d00009 	ldrb	r0, [r0, #9]
40020248:	e3500003 	cmp	r0, #3
4002024c:	1a000009 	bne	40020278 <CyU3PUsbHandleClearFeature+0xe0>
40020250:	e59f0054 	ldr	r0, [pc, #84]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020254:	e5d00008 	ldrb	r0, [r0, #8]
40020258:	e3500006 	cmp	r0, #6
4002025c:	1a000005 	bne	40020278 <CyU3PUsbHandleClearFeature+0xe0>
40020260:	e59f0044 	ldr	r0, [pc, #68]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020264:	e5d00006 	ldrb	r0, [r0, #6]
40020268:	e3c00008 	bic	r0, r0, #8
4002026c:	e59f1038 	ldr	r1, [pc, #56]	; 400202ac <CyU3PUsbHandleClearFeature+0x114>
40020270:	e5c10006 	strb	r0, [r1, #6]
40020274:	e3a05001 	mov	r5, #1
40020278:	ea000001 	b	40020284 <CyU3PUsbHandleClearFeature+0xec>
4002027c:	e1a00000 	nop			; (mov r0, r0)
40020280:	e1a00000 	nop			; (mov r0, r0)
40020284:	e1a00000 	nop			; (mov r0, r0)
40020288:	e3550000 	cmp	r5, #0
4002028c:	0a000001 	beq	40020298 <CyU3PUsbHandleClearFeature+0x100>
40020290:	ebfff0af 	bl	4001c554 <CyU3PUsbAckSetup>
40020294:	ea000003 	b	400202a8 <CyU3PUsbHandleClearFeature+0x110>
40020298:	e3a02000 	mov	r2, #0
4002029c:	e3a01001 	mov	r1, #1
400202a0:	e1a00002 	mov	r0, r2
400202a4:	ebfff66e 	bl	4001dc64 <CyU3PUsbStall>
400202a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400202ac:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

400202b0 <CyU3PUsbHandleEvents>:
400202b0:	e92d4070 	push	{r4, r5, r6, lr}
400202b4:	e1a04000 	mov	r4, r0
400202b8:	e3140040 	tst	r4, #64	; 0x40
400202bc:	0a000000 	beq	400202c4 <CyU3PUsbHandleEvents+0x14>
400202c0:	ebfff8cc 	bl	4001e5f8 <CyU3PUibDevCtrlEvtHandler>
400202c4:	e3140020 	tst	r4, #32
400202c8:	0a000000 	beq	400202d0 <CyU3PUsbHandleEvents+0x20>
400202cc:	ebfff942 	bl	4001e7dc <CyU3PUibEPEvtHandler>
400202d0:	e3140080 	tst	r4, #128	; 0x80
400202d4:	0a000000 	beq	400202dc <CyU3PUsbHandleEvents+0x2c>
400202d8:	ebfffa15 	bl	4001eb34 <CyU3PUibLnkIntrEvtHandler>
400202dc:	e3140c01 	tst	r4, #256	; 0x100
400202e0:	0a000000 	beq	400202e8 <CyU3PUsbHandleEvents+0x38>
400202e4:	ebfffb32 	bl	4001efb4 <CyU3PUibProtIntrEvtHandler>
400202e8:	e3140c02 	tst	r4, #512	; 0x200
400202ec:	0a000000 	beq	400202f4 <CyU3PUsbHandleEvents+0x44>
400202f0:	ebfffa37 	bl	4001ebd4 <CyU3PUibProtEpIntrEvtHandler>
400202f4:	e3140b01 	tst	r4, #1024	; 0x400
400202f8:	0a000006 	beq	40020318 <CyU3PUsbHandleEvents+0x68>
400202fc:	e59f0378 	ldr	r0, [pc, #888]	; 4002067c <CyU3PUsbHandleEvents+0x3cc>
40020300:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020304:	e3500b02 	cmp	r0, #2048	; 0x800
40020308:	1a000001 	bne	40020314 <CyU3PUsbHandleEvents+0x64>
4002030c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40020310:	ebffa1ab 	bl	400089c4 <_tx_thread_sleep>
40020314:	ebfffd4a 	bl	4001f844 <CyU3PUibVbusChangeHandler>
40020318:	e3140b02 	tst	r4, #2048	; 0x800
4002031c:	0a000000 	beq	40020324 <CyU3PUsbHandleEvents+0x74>
40020320:	eb0003ae 	bl	400211e0 <CyU3PUsbSendCompliancePatterns>
40020324:	e3140a01 	tst	r4, #4096	; 0x1000
40020328:	0a00000c 	beq	40020360 <CyU3PUsbHandleEvents+0xb0>
4002032c:	e59f034c 	ldr	r0, [pc, #844]	; 40020680 <CyU3PUsbHandleEvents+0x3d0>
40020330:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020334:	e3100902 	tst	r0, #32768	; 0x8000
40020338:	0a000008 	beq	40020360 <CyU3PUsbHandleEvents+0xb0>
4002033c:	e3a00001 	mov	r0, #1
40020340:	e59f133c 	ldr	r1, [pc, #828]	; 40020684 <CyU3PUsbHandleEvents+0x3d4>
40020344:	e5810000 	str	r0, [r1]
40020348:	e59f1338 	ldr	r1, [pc, #824]	; 40020688 <CyU3PUsbHandleEvents+0x3d8>
4002034c:	e5810000 	str	r0, [r1]
40020350:	ebfffdb3 	bl	4001fa24 <CyU3PUsbCheckUsb3Disconnect>
40020354:	e3a00000 	mov	r0, #0
40020358:	e59f1328 	ldr	r1, [pc, #808]	; 40020688 <CyU3PUsbHandleEvents+0x3d8>
4002035c:	e5810000 	str	r0, [r1]
40020360:	e3140301 	tst	r4, #67108864	; 0x4000000
40020364:	0a000013 	beq	400203b8 <CyU3PUsbHandleEvents+0x108>
40020368:	e59f031c 	ldr	r0, [pc, #796]	; 4002068c <CyU3PUsbHandleEvents+0x3dc>
4002036c:	e5900000 	ldr	r0, [r0]
40020370:	e3500000 	cmp	r0, #0
40020374:	0a000008 	beq	4002039c <CyU3PUsbHandleEvents+0xec>
40020378:	e59f0300 	ldr	r0, [pc, #768]	; 40020680 <CyU3PUsbHandleEvents+0x3d0>
4002037c:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
40020380:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
40020384:	e3a02080 	mov	r2, #128	; 0x80
40020388:	e1821920 	orr	r1, r2, r0, lsr #18
4002038c:	e3a00012 	mov	r0, #18
40020390:	e59f22f4 	ldr	r2, [pc, #756]	; 4002068c <CyU3PUsbHandleEvents+0x3dc>
40020394:	e5922000 	ldr	r2, [r2]
40020398:	e12fff32 	blx	r2
4002039c:	e3a00b02 	mov	r0, #2048	; 0x800
400203a0:	e59f12e8 	ldr	r1, [pc, #744]	; 40020690 <CyU3PUsbHandleEvents+0x3e0>
400203a4:	e5810000 	str	r0, [r1]
400203a8:	e1c10000 	bic	r0, r1, r0
400203ac:	e5900004 	ldr	r0, [r0, #4]
400203b0:	e3800b02 	orr	r0, r0, #2048	; 0x800
400203b4:	e5810004 	str	r0, [r1, #4]
400203b8:	e3140901 	tst	r4, #16384	; 0x4000
400203bc:	0a000008 	beq	400203e4 <CyU3PUsbHandleEvents+0x134>
400203c0:	e59f02c4 	ldr	r0, [pc, #708]	; 4002068c <CyU3PUsbHandleEvents+0x3dc>
400203c4:	e5900000 	ldr	r0, [r0]
400203c8:	e3500000 	cmp	r0, #0
400203cc:	0a000004 	beq	400203e4 <CyU3PUsbHandleEvents+0x134>
400203d0:	e3a01000 	mov	r1, #0
400203d4:	e3a00003 	mov	r0, #3
400203d8:	e59f22ac 	ldr	r2, [pc, #684]	; 4002068c <CyU3PUsbHandleEvents+0x3dc>
400203dc:	e5922000 	ldr	r2, [r2]
400203e0:	e12fff32 	blx	r2
400203e4:	e3140a02 	tst	r4, #8192	; 0x2000
400203e8:	0a000008 	beq	40020410 <CyU3PUsbHandleEvents+0x160>
400203ec:	e59f0298 	ldr	r0, [pc, #664]	; 4002068c <CyU3PUsbHandleEvents+0x3dc>
400203f0:	e5900000 	ldr	r0, [r0]
400203f4:	e3500000 	cmp	r0, #0
400203f8:	0a000004 	beq	40020410 <CyU3PUsbHandleEvents+0x160>
400203fc:	e3a01000 	mov	r1, #0
40020400:	e3a00002 	mov	r0, #2
40020404:	e59f2280 	ldr	r2, [pc, #640]	; 4002068c <CyU3PUsbHandleEvents+0x3dc>
40020408:	e5922000 	ldr	r2, [r2]
4002040c:	e12fff32 	blx	r2
40020410:	e3140902 	tst	r4, #32768	; 0x8000
40020414:	0a000022 	beq	400204a4 <CyU3PUsbHandleEvents+0x1f4>
40020418:	e59f0274 	ldr	r0, [pc, #628]	; 40020694 <CyU3PUsbHandleEvents+0x3e4>
4002041c:	e5900000 	ldr	r0, [r0]
40020420:	e3500000 	cmp	r0, #0
40020424:	0a00001e 	beq	400204a4 <CyU3PUsbHandleEvents+0x1f4>
40020428:	eb000690 	bl	40021e70 <CyU3PVicDisableAllInterrupts>
4002042c:	e1a06000 	mov	r6, r0
40020430:	e3a00001 	mov	r0, #1
40020434:	ebffcc13 	bl	40013488 <CyU3PBusyWait>
40020438:	e59f0258 	ldr	r0, [pc, #600]	; 40020698 <CyU3PUsbHandleEvents+0x3e8>
4002043c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40020440:	e3c00803 	bic	r0, r0, #196608	; 0x30000
40020444:	e59f124c 	ldr	r1, [pc, #588]	; 40020698 <CyU3PUsbHandleEvents+0x3e8>
40020448:	e5810400 	str	r0, [r1, #1024]	; 0x400
4002044c:	e1a00006 	mov	r0, r6
40020450:	eb000694 	bl	40021ea8 <CyU3PVicEnableInterrupts>
40020454:	e3a00001 	mov	r0, #1
40020458:	ebffa159 	bl	400089c4 <_tx_thread_sleep>
4002045c:	e3a00000 	mov	r0, #0
40020460:	e59f122c 	ldr	r1, [pc, #556]	; 40020694 <CyU3PUsbHandleEvents+0x3e4>
40020464:	e5810000 	str	r0, [r1]
40020468:	e59f0228 	ldr	r0, [pc, #552]	; 40020698 <CyU3PUsbHandleEvents+0x3e8>
4002046c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40020470:	e3100c02 	tst	r0, #512	; 0x200
40020474:	1a00000a 	bne	400204a4 <CyU3PUsbHandleEvents+0x1f4>
40020478:	e59f01fc 	ldr	r0, [pc, #508]	; 4002067c <CyU3PUsbHandleEvents+0x3cc>
4002047c:	e5900044 	ldr	r0, [r0, #68]	; 0x44
40020480:	e3500000 	cmp	r0, #0
40020484:	1a000006 	bne	400204a4 <CyU3PUsbHandleEvents+0x1f4>
40020488:	e59f01ec 	ldr	r0, [pc, #492]	; 4002067c <CyU3PUsbHandleEvents+0x3cc>
4002048c:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
40020490:	e3500000 	cmp	r0, #0
40020494:	1a000002 	bne	400204a4 <CyU3PUsbHandleEvents+0x1f4>
40020498:	e3a00303 	mov	r0, #201326592	; 0xc000000
4002049c:	e59f11f4 	ldr	r1, [pc, #500]	; 40020698 <CyU3PUsbHandleEvents+0x3e8>
400204a0:	e5810050 	str	r0, [r1, #80]	; 0x50
400204a4:	e3140401 	tst	r4, #16777216	; 0x1000000
400204a8:	0a000020 	beq	40020530 <CyU3PUsbHandleEvents+0x280>
400204ac:	e59f01e4 	ldr	r0, [pc, #484]	; 40020698 <CyU3PUsbHandleEvents+0x3e8>
400204b0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400204b4:	e200503f 	and	r5, r0, #63	; 0x3f
400204b8:	e3550011 	cmp	r5, #17
400204bc:	0a000001 	beq	400204c8 <CyU3PUsbHandleEvents+0x218>
400204c0:	e3550012 	cmp	r5, #18
400204c4:	1a000018 	bne	4002052c <CyU3PUsbHandleEvents+0x27c>
400204c8:	e59f01cc 	ldr	r0, [pc, #460]	; 4002069c <CyU3PUsbHandleEvents+0x3ec>
400204cc:	e5900000 	ldr	r0, [r0]
400204d0:	e3500000 	cmp	r0, #0
400204d4:	0a000014 	beq	4002052c <CyU3PUsbHandleEvents+0x27c>
400204d8:	e3a00005 	mov	r0, #5
400204dc:	ebffcbe9 	bl	40013488 <CyU3PBusyWait>
400204e0:	e59f01b0 	ldr	r0, [pc, #432]	; 40020698 <CyU3PUsbHandleEvents+0x3e8>
400204e4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400204e8:	e200503f 	and	r5, r0, #63	; 0x3f
400204ec:	e3550011 	cmp	r5, #17
400204f0:	0a000001 	beq	400204fc <CyU3PUsbHandleEvents+0x24c>
400204f4:	e3550012 	cmp	r5, #18
400204f8:	1a000001 	bne	40020504 <CyU3PUsbHandleEvents+0x254>
400204fc:	e3a00000 	mov	r0, #0
40020500:	ebfff582 	bl	4001db10 <CyU3PUsbSetLinkPowerState>
40020504:	e3a00001 	mov	r0, #1
40020508:	ebffa12d 	bl	400089c4 <_tx_thread_sleep>
4002050c:	e59f0188 	ldr	r0, [pc, #392]	; 4002069c <CyU3PUsbHandleEvents+0x3ec>
40020510:	e5900000 	ldr	r0, [r0]
40020514:	e3500000 	cmp	r0, #0
40020518:	0a000003 	beq	4002052c <CyU3PUsbHandleEvents+0x27c>
4002051c:	e3a02000 	mov	r2, #0
40020520:	e3a01401 	mov	r1, #16777216	; 0x1000000
40020524:	e59f0174 	ldr	r0, [pc, #372]	; 400206a0 <CyU3PUsbHandleEvents+0x3f0>
40020528:	ebffa61d 	bl	40009da4 <_txe_event_flags_set>
4002052c:	e1a00000 	nop			; (mov r0, r0)
40020530:	e3140402 	tst	r4, #33554432	; 0x2000000
40020534:	0a000019 	beq	400205a0 <CyU3PUsbHandleEvents+0x2f0>
40020538:	e3a00052 	mov	r0, #82	; 0x52
4002053c:	ebfffd1d 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
40020540:	e59f1134 	ldr	r1, [pc, #308]	; 4002067c <CyU3PUsbHandleEvents+0x3cc>
40020544:	e5d11009 	ldrb	r1, [r1, #9]
40020548:	e3510003 	cmp	r1, #3
4002054c:	1a000001 	bne	40020558 <CyU3PUsbHandleEvents+0x2a8>
40020550:	e3a01001 	mov	r1, #1
40020554:	ea000000 	b	4002055c <CyU3PUsbHandleEvents+0x2ac>
40020558:	e3a01000 	mov	r1, #0
4002055c:	e1a00001 	mov	r0, r1
40020560:	ebfff21a 	bl	4001cdd0 <CyU3PUsbPhyDisable>
40020564:	e3a00001 	mov	r0, #1
40020568:	ebffa115 	bl	400089c4 <_tx_thread_sleep>
4002056c:	e59f0108 	ldr	r0, [pc, #264]	; 4002067c <CyU3PUsbHandleEvents+0x3cc>
40020570:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020574:	e3500000 	cmp	r0, #0
40020578:	0a000005 	beq	40020594 <CyU3PUsbHandleEvents+0x2e4>
4002057c:	e59f0120 	ldr	r0, [pc, #288]	; 400206a4 <CyU3PUsbHandleEvents+0x3f4>
40020580:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020584:	e59f10f0 	ldr	r1, [pc, #240]	; 4002067c <CyU3PUsbHandleEvents+0x3cc>
40020588:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4002058c:	e1100001 	tst	r0, r1
40020590:	0a000002 	beq	400205a0 <CyU3PUsbHandleEvents+0x2f0>
40020594:	e59f10e0 	ldr	r1, [pc, #224]	; 4002067c <CyU3PUsbHandleEvents+0x3cc>
40020598:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4002059c:	ebfff281 	bl	4001cfa8 <CyU3PUsbPhyEnable>
400205a0:	e3140801 	tst	r4, #65536	; 0x10000
400205a4:	0a000006 	beq	400205c4 <CyU3PUsbHandleEvents+0x314>
400205a8:	e59f00f8 	ldr	r0, [pc, #248]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
400205ac:	e5900000 	ldr	r0, [r0]
400205b0:	e3500000 	cmp	r0, #0
400205b4:	0a000002 	beq	400205c4 <CyU3PUsbHandleEvents+0x314>
400205b8:	e59f10e8 	ldr	r1, [pc, #232]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
400205bc:	e5910000 	ldr	r0, [r1]
400205c0:	e12fff30 	blx	r0
400205c4:	e3140802 	tst	r4, #131072	; 0x20000
400205c8:	0a000006 	beq	400205e8 <CyU3PUsbHandleEvents+0x338>
400205cc:	e59f00d4 	ldr	r0, [pc, #212]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
400205d0:	e5900004 	ldr	r0, [r0, #4]
400205d4:	e3500000 	cmp	r0, #0
400205d8:	0a000002 	beq	400205e8 <CyU3PUsbHandleEvents+0x338>
400205dc:	e59f10c4 	ldr	r1, [pc, #196]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
400205e0:	e5910004 	ldr	r0, [r1, #4]
400205e4:	e12fff30 	blx	r0
400205e8:	e3140701 	tst	r4, #262144	; 0x40000
400205ec:	0a000006 	beq	4002060c <CyU3PUsbHandleEvents+0x35c>
400205f0:	e59f00b0 	ldr	r0, [pc, #176]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
400205f4:	e5900008 	ldr	r0, [r0, #8]
400205f8:	e3500000 	cmp	r0, #0
400205fc:	0a000002 	beq	4002060c <CyU3PUsbHandleEvents+0x35c>
40020600:	e59f10a0 	ldr	r1, [pc, #160]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
40020604:	e5910008 	ldr	r0, [r1, #8]
40020608:	e12fff30 	blx	r0
4002060c:	e3140702 	tst	r4, #524288	; 0x80000
40020610:	0a000006 	beq	40020630 <CyU3PUsbHandleEvents+0x380>
40020614:	e59f008c 	ldr	r0, [pc, #140]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
40020618:	e590000c 	ldr	r0, [r0, #12]
4002061c:	e3500000 	cmp	r0, #0
40020620:	0a000002 	beq	40020630 <CyU3PUsbHandleEvents+0x380>
40020624:	e59f107c 	ldr	r1, [pc, #124]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
40020628:	e591000c 	ldr	r0, [r1, #12]
4002062c:	e12fff30 	blx	r0
40020630:	e3140601 	tst	r4, #1048576	; 0x100000
40020634:	0a000006 	beq	40020654 <CyU3PUsbHandleEvents+0x3a4>
40020638:	e59f0068 	ldr	r0, [pc, #104]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
4002063c:	e5900010 	ldr	r0, [r0, #16]
40020640:	e3500000 	cmp	r0, #0
40020644:	0a000002 	beq	40020654 <CyU3PUsbHandleEvents+0x3a4>
40020648:	e59f1058 	ldr	r1, [pc, #88]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
4002064c:	e5910010 	ldr	r0, [r1, #16]
40020650:	e12fff30 	blx	r0
40020654:	e3140602 	tst	r4, #2097152	; 0x200000
40020658:	0a000006 	beq	40020678 <CyU3PUsbHandleEvents+0x3c8>
4002065c:	e59f0044 	ldr	r0, [pc, #68]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
40020660:	e5900014 	ldr	r0, [r0, #20]
40020664:	e3500000 	cmp	r0, #0
40020668:	0a000002 	beq	40020678 <CyU3PUsbHandleEvents+0x3c8>
4002066c:	e59f1034 	ldr	r1, [pc, #52]	; 400206a8 <CyU3PUsbHandleEvents+0x3f8>
40020670:	e5910014 	ldr	r0, [r1, #20]
40020674:	e12fff30 	blx	r0
40020678:	e8bd8070 	pop	{r4, r5, r6, pc}
4002067c:	40031d40 	.word	0x40031d40
40020680:	e0031000 	.word	0xe0031000
40020684:	40030d64 	.word	0x40030d64
40020688:	40030d68 	.word	0x40030d68
4002068c:	40030d9c 	.word	0x40030d9c
40020690:	e0030000 	.word	0xe0030000
40020694:	40030d6c 	.word	0x40030d6c
40020698:	e0033000 	.word	0xe0033000
4002069c:	40030db4 	.word	0x40030db4
400206a0:	40031eb8 	.word	0x40031eb8
400206a4:	e0051000 	.word	0xe0051000
400206a8:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

400206ac <CyU3PUsbHandleGetStatus>:
400206ac:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400206b0:	e1a04000 	mov	r4, r0
400206b4:	e1a05001 	mov	r5, r1
400206b8:	e3a07000 	mov	r7, #0
400206bc:	e3a00000 	mov	r0, #0
400206c0:	e58d0000 	str	r0, [sp]
400206c4:	e3540000 	cmp	r4, #0
400206c8:	0a000004 	beq	400206e0 <CyU3PUsbHandleGetStatus+0x34>
400206cc:	e3540001 	cmp	r4, #1
400206d0:	0a00001e 	beq	40020750 <CyU3PUsbHandleGetStatus+0xa4>
400206d4:	e3540002 	cmp	r4, #2
400206d8:	1a00002b 	bne	4002078c <CyU3PUsbHandleGetStatus+0xe0>
400206dc:	ea000023 	b	40020770 <CyU3PUsbHandleGetStatus+0xc4>
400206e0:	e1a00000 	nop			; (mov r0, r0)
400206e4:	e3550a0f 	cmp	r5, #61440	; 0xf000
400206e8:	1a00000d 	bne	40020724 <CyU3PUsbHandleGetStatus+0x78>
400206ec:	ebffed1c 	bl	4001bb64 <CyU3POtgGetMode>
400206f0:	e3500002 	cmp	r0, #2
400206f4:	1a000008 	bne	4002071c <CyU3PUsbHandleGetStatus+0x70>
400206f8:	e59f00a0 	ldr	r0, [pc, #160]	; 400207a0 <CyU3PUsbHandleGetStatus+0xf4>
400206fc:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40020700:	e3500000 	cmp	r0, #0
40020704:	0a000001 	beq	40020710 <CyU3PUsbHandleGetStatus+0x64>
40020708:	e3a00001 	mov	r0, #1
4002070c:	ea000000 	b	40020714 <CyU3PUsbHandleGetStatus+0x68>
40020710:	e3a00000 	mov	r0, #0
40020714:	e5cd0000 	strb	r0, [sp]
40020718:	ea00000b 	b	4002074c <CyU3PUsbHandleGetStatus+0xa0>
4002071c:	e3a00000 	mov	r0, #0
40020720:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020724:	e59f0074 	ldr	r0, [pc, #116]	; 400207a0 <CyU3PUsbHandleGetStatus+0xf4>
40020728:	e5d00006 	ldrb	r0, [r0, #6]
4002072c:	e5cd0000 	strb	r0, [sp]
40020730:	e59f0068 	ldr	r0, [pc, #104]	; 400207a0 <CyU3PUsbHandleGetStatus+0xf4>
40020734:	e5d00009 	ldrb	r0, [r0, #9]
40020738:	e3500003 	cmp	r0, #3
4002073c:	1a000002 	bne	4002074c <CyU3PUsbHandleGetStatus+0xa0>
40020740:	e5dd0000 	ldrb	r0, [sp]
40020744:	e3c00002 	bic	r0, r0, #2
40020748:	e5cd0000 	strb	r0, [sp]
4002074c:	e1a00000 	nop			; (mov r0, r0)
40020750:	e1a0100d 	mov	r1, sp
40020754:	e3a00002 	mov	r0, #2
40020758:	ebfff316 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
4002075c:	e1a06000 	mov	r6, r0
40020760:	e3560000 	cmp	r6, #0
40020764:	1a000000 	bne	4002076c <CyU3PUsbHandleGetStatus+0xc0>
40020768:	e3a07001 	mov	r7, #1
4002076c:	ea000008 	b	40020794 <CyU3PUsbHandleGetStatus+0xe8>
40020770:	e1a00000 	nop			; (mov r0, r0)
40020774:	e20500ff 	and	r0, r5, #255	; 0xff
40020778:	ebfffe58 	bl	400200e0 <CyU3PUsbGetEpStatus>
4002077c:	e3500000 	cmp	r0, #0
40020780:	1a000000 	bne	40020788 <CyU3PUsbHandleGetStatus+0xdc>
40020784:	e3a07001 	mov	r7, #1
40020788:	ea000001 	b	40020794 <CyU3PUsbHandleGetStatus+0xe8>
4002078c:	e1a00000 	nop			; (mov r0, r0)
40020790:	e1a00000 	nop			; (mov r0, r0)
40020794:	e1a00000 	nop			; (mov r0, r0)
40020798:	e1a00007 	mov	r0, r7
4002079c:	eaffffdf 	b	40020720 <CyU3PUsbHandleGetStatus+0x74>
400207a0:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

400207a4 <CyU3PUsbHandleSetFeature>:
400207a4:	e92d4070 	push	{r4, r5, r6, lr}
400207a8:	e1a04000 	mov	r4, r0
400207ac:	e3a05000 	mov	r5, #0
400207b0:	e3540001 	cmp	r4, #1
400207b4:	0a000006 	beq	400207d4 <CyU3PUsbHandleSetFeature+0x30>
400207b8:	e3540002 	cmp	r4, #2
400207bc:	0a00000b 	beq	400207f0 <CyU3PUsbHandleSetFeature+0x4c>
400207c0:	e3540030 	cmp	r4, #48	; 0x30
400207c4:	0a00000e 	beq	40020804 <CyU3PUsbHandleSetFeature+0x60>
400207c8:	e3540031 	cmp	r4, #49	; 0x31
400207cc:	1a00002a 	bne	4002087c <CyU3PUsbHandleSetFeature+0xd8>
400207d0:	ea00001a 	b	40020840 <CyU3PUsbHandleSetFeature+0x9c>
400207d4:	e1a00000 	nop			; (mov r0, r0)
400207d8:	e59f00cc 	ldr	r0, [pc, #204]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
400207dc:	e5d00006 	ldrb	r0, [r0, #6]
400207e0:	e3800002 	orr	r0, r0, #2
400207e4:	e59f10c0 	ldr	r1, [pc, #192]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
400207e8:	e5c10006 	strb	r0, [r1, #6]
400207ec:	e1a00000 	nop			; (mov r0, r0)
400207f0:	ebfff0f4 	bl	4001cbc8 <CyU3PUsbGetSpeed>
400207f4:	e3500003 	cmp	r0, #3
400207f8:	0a000000 	beq	40020800 <CyU3PUsbHandleSetFeature+0x5c>
400207fc:	e3a05001 	mov	r5, #1
40020800:	ea00001f 	b	40020884 <CyU3PUsbHandleSetFeature+0xe0>
40020804:	e1a00000 	nop			; (mov r0, r0)
40020808:	ebfff0ee 	bl	4001cbc8 <CyU3PUsbGetSpeed>
4002080c:	e3500003 	cmp	r0, #3
40020810:	1a000009 	bne	4002083c <CyU3PUsbHandleSetFeature+0x98>
40020814:	e59f0090 	ldr	r0, [pc, #144]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
40020818:	e5d00008 	ldrb	r0, [r0, #8]
4002081c:	e3500006 	cmp	r0, #6
40020820:	1a000005 	bne	4002083c <CyU3PUsbHandleSetFeature+0x98>
40020824:	e59f0080 	ldr	r0, [pc, #128]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
40020828:	e5d00006 	ldrb	r0, [r0, #6]
4002082c:	e3800004 	orr	r0, r0, #4
40020830:	e59f1074 	ldr	r1, [pc, #116]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
40020834:	e5c10006 	strb	r0, [r1, #6]
40020838:	e3a05001 	mov	r5, #1
4002083c:	ea000010 	b	40020884 <CyU3PUsbHandleSetFeature+0xe0>
40020840:	e1a00000 	nop			; (mov r0, r0)
40020844:	ebfff0df 	bl	4001cbc8 <CyU3PUsbGetSpeed>
40020848:	e3500003 	cmp	r0, #3
4002084c:	1a000009 	bne	40020878 <CyU3PUsbHandleSetFeature+0xd4>
40020850:	e59f0054 	ldr	r0, [pc, #84]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
40020854:	e5d00008 	ldrb	r0, [r0, #8]
40020858:	e3500006 	cmp	r0, #6
4002085c:	1a000005 	bne	40020878 <CyU3PUsbHandleSetFeature+0xd4>
40020860:	e59f0044 	ldr	r0, [pc, #68]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
40020864:	e5d00006 	ldrb	r0, [r0, #6]
40020868:	e3800008 	orr	r0, r0, #8
4002086c:	e59f1038 	ldr	r1, [pc, #56]	; 400208ac <CyU3PUsbHandleSetFeature+0x108>
40020870:	e5c10006 	strb	r0, [r1, #6]
40020874:	e3a05001 	mov	r5, #1
40020878:	ea000001 	b	40020884 <CyU3PUsbHandleSetFeature+0xe0>
4002087c:	e1a00000 	nop			; (mov r0, r0)
40020880:	e1a00000 	nop			; (mov r0, r0)
40020884:	e1a00000 	nop			; (mov r0, r0)
40020888:	e3550000 	cmp	r5, #0
4002088c:	0a000001 	beq	40020898 <CyU3PUsbHandleSetFeature+0xf4>
40020890:	ebffef2f 	bl	4001c554 <CyU3PUsbAckSetup>
40020894:	ea000003 	b	400208a8 <CyU3PUsbHandleSetFeature+0x104>
40020898:	e3a02000 	mov	r2, #0
4002089c:	e3a01001 	mov	r1, #1
400208a0:	e1a00002 	mov	r0, r2
400208a4:	ebfff4ee 	bl	4001dc64 <CyU3PUsbStall>
400208a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400208ac:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

400208b0 <CyU3PUsbReEnableUsb3>:
400208b0:	e92d4010 	push	{r4, lr}
400208b4:	e3a00051 	mov	r0, #81	; 0x51
400208b8:	ebfffc3e 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
400208bc:	e59f018c 	ldr	r0, [pc, #396]	; 40020a50 <CyU3PUsbReEnableUsb3+0x1a0>
400208c0:	e5900004 	ldr	r0, [r0, #4]
400208c4:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
400208c8:	e59f1180 	ldr	r1, [pc, #384]	; 40020a50 <CyU3PUsbReEnableUsb3+0x1a0>
400208cc:	e5810004 	str	r0, [r1, #4]
400208d0:	e3e00000 	mvn	r0, #0
400208d4:	e2811a03 	add	r1, r1, #12288	; 0x3000
400208d8:	e5810004 	str	r0, [r1, #4]
400208dc:	e59f0170 	ldr	r0, [pc, #368]	; 40020a54 <CyU3PUsbReEnableUsb3+0x1a4>
400208e0:	e5810008 	str	r0, [r1, #8]
400208e4:	e3e00000 	mvn	r0, #0
400208e8:	e5810404 	str	r0, [r1, #1028]	; 0x404
400208ec:	e59f0164 	ldr	r0, [pc, #356]	; 40020a58 <CyU3PUsbReEnableUsb3+0x1a8>
400208f0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400208f4:	e59f0160 	ldr	r0, [pc, #352]	; 40020a5c <CyU3PUsbReEnableUsb3+0x1ac>
400208f8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
400208fc:	e3500000 	cmp	r0, #0
40020900:	0a000003 	beq	40020914 <CyU3PUsbReEnableUsb3+0x64>
40020904:	e1a00001 	mov	r0, r1
40020908:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002090c:	e3800c01 	orr	r0, r0, #256	; 0x100
40020910:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020914:	e3a00000 	mov	r0, #0
40020918:	e59f113c 	ldr	r1, [pc, #316]	; 40020a5c <CyU3PUsbReEnableUsb3+0x1ac>
4002091c:	e5810044 	str	r0, [r1, #68]	; 0x44
40020920:	e59f0138 	ldr	r0, [pc, #312]	; 40020a60 <CyU3PUsbReEnableUsb3+0x1b0>
40020924:	e5900000 	ldr	r0, [r0]
40020928:	e3500000 	cmp	r0, #0
4002092c:	0a000003 	beq	40020940 <CyU3PUsbReEnableUsb3+0x90>
40020930:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
40020934:	e59f1128 	ldr	r1, [pc, #296]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
40020938:	e5810050 	str	r0, [r1, #80]	; 0x50
4002093c:	ea000002 	b	4002094c <CyU3PUsbReEnableUsb3+0x9c>
40020940:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020944:	e59f1118 	ldr	r1, [pc, #280]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
40020948:	e5810050 	str	r0, [r1, #80]	; 0x50
4002094c:	eb000575 	bl	40021f28 <CyFx3Usb3LnkSetup>
40020950:	e59f0110 	ldr	r0, [pc, #272]	; 40020a68 <CyU3PUsbReEnableUsb3+0x1b8>
40020954:	e59f1108 	ldr	r1, [pc, #264]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
40020958:	e5810418 	str	r0, [r1, #1048]	; 0x418
4002095c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020960:	e1c10000 	bic	r0, r1, r0
40020964:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020968:	e3800b02 	orr	r0, r0, #2048	; 0x800
4002096c:	e5810158 	str	r0, [r1, #344]	; 0x158
40020970:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020974:	e581001c 	str	r0, [r1, #28]
40020978:	e3a01000 	mov	r1, #0
4002097c:	e3a00001 	mov	r0, #1
40020980:	ebffee60 	bl	4001c308 <CyU3PSetUsbCoreClock>
40020984:	e3a0000a 	mov	r0, #10
40020988:	ebffcabe 	bl	40013488 <CyU3PBusyWait>
4002098c:	eb000537 	bl	40021e70 <CyU3PVicDisableAllInterrupts>
40020990:	e1a04000 	mov	r4, r0
40020994:	e3a00000 	mov	r0, #0
40020998:	e59f10cc 	ldr	r1, [pc, #204]	; 40020a6c <CyU3PUsbReEnableUsb3+0x1bc>
4002099c:	e5810000 	str	r0, [r1]
400209a0:	e3a00a01 	mov	r0, #4096	; 0x1000
400209a4:	e59f10b8 	ldr	r1, [pc, #184]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
400209a8:	e5810054 	str	r0, [r1, #84]	; 0x54
400209ac:	e1c10080 	bic	r0, r1, r0, lsl #1
400209b0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400209b4:	e3800901 	orr	r0, r0, #16384	; 0x4000
400209b8:	e2411a02 	sub	r1, r1, #8192	; 0x2000
400209bc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400209c0:	e3a00064 	mov	r0, #100	; 0x64
400209c4:	ebffcaaf 	bl	40013488 <CyU3PBusyWait>
400209c8:	e59f0094 	ldr	r0, [pc, #148]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
400209cc:	e5900000 	ldr	r0, [r0]
400209d0:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
400209d4:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
400209d8:	e59f1084 	ldr	r1, [pc, #132]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
400209dc:	e5810000 	str	r0, [r1]
400209e0:	e59f0088 	ldr	r0, [pc, #136]	; 40020a70 <CyU3PUsbReEnableUsb3+0x1c0>
400209e4:	e581002c 	str	r0, [r1, #44]	; 0x2c
400209e8:	e3a01080 	mov	r1, #128	; 0x80
400209ec:	e2810ef9 	add	r0, r1, #3984	; 0xf90
400209f0:	eb000592 	bl	40022040 <CyFx3UsbWritePhyReg>
400209f4:	e3a01d06 	mov	r1, #384	; 0x180
400209f8:	e59f0074 	ldr	r0, [pc, #116]	; 40020a74 <CyU3PUsbReEnableUsb3+0x1c4>
400209fc:	eb00058f 	bl	40022040 <CyFx3UsbWritePhyReg>
40020a00:	e3a01080 	mov	r1, #128	; 0x80
40020a04:	e59f006c 	ldr	r0, [pc, #108]	; 40020a78 <CyU3PUsbReEnableUsb3+0x1c8>
40020a08:	eb00058c 	bl	40022040 <CyFx3UsbWritePhyReg>
40020a0c:	e59f003c 	ldr	r0, [pc, #60]	; 40020a50 <CyU3PUsbReEnableUsb3+0x1a0>
40020a10:	e5900004 	ldr	r0, [r0, #4]
40020a14:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020a18:	e59f1030 	ldr	r1, [pc, #48]	; 40020a50 <CyU3PUsbReEnableUsb3+0x1a0>
40020a1c:	e5810004 	str	r0, [r1, #4]
40020a20:	e1a00004 	mov	r0, r4
40020a24:	eb00051f 	bl	40021ea8 <CyU3PVicEnableInterrupts>
40020a28:	e59f0034 	ldr	r0, [pc, #52]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
40020a2c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020a30:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020a34:	e59f1028 	ldr	r1, [pc, #40]	; 40020a64 <CyU3PUsbReEnableUsb3+0x1b4>
40020a38:	e5810054 	str	r0, [r1, #84]	; 0x54
40020a3c:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020a40:	e581001c 	str	r0, [r1, #28]
40020a44:	e3a00064 	mov	r0, #100	; 0x64
40020a48:	ebffca8e 	bl	40013488 <CyU3PBusyWait>
40020a4c:	e8bd8010 	pop	{r4, pc}
40020a50:	e0030000 	.word	0xe0030000
40020a54:	00038081 	.word	0x00038081
40020a58:	00004a3d 	.word	0x00004a3d
40020a5c:	40031d40 	.word	0x40031d40
40020a60:	40030d40 	.word	0x40030d40
40020a64:	e0033000 	.word	0xe0033000
40020a68:	00000908 	.word	0x00000908
40020a6c:	40030d74 	.word	0x40030d74
40020a70:	00310418 	.word	0x00310418
40020a74:	00001006 	.word	0x00001006
40020a78:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020a7c <CyU3PUsbRegisterEventCallback>:
40020a7c:	e92d4010 	push	{r4, lr}
40020a80:	e1a04000 	mov	r4, r0
40020a84:	e59f0038 	ldr	r0, [pc, #56]	; 40020ac4 <CyU3PUsbRegisterEventCallback+0x48>
40020a88:	e5804000 	str	r4, [r0]
40020a8c:	e59f0034 	ldr	r0, [pc, #52]	; 40020ac8 <CyU3PUsbRegisterEventCallback+0x4c>
40020a90:	e5d00008 	ldrb	r0, [r0, #8]
40020a94:	e3500000 	cmp	r0, #0
40020a98:	0a000008 	beq	40020ac0 <CyU3PUsbRegisterEventCallback+0x44>
40020a9c:	e59f0028 	ldr	r0, [pc, #40]	; 40020acc <CyU3PUsbRegisterEventCallback+0x50>
40020aa0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020aa4:	e59f101c 	ldr	r1, [pc, #28]	; 40020ac8 <CyU3PUsbRegisterEventCallback+0x4c>
40020aa8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020aac:	e1100001 	tst	r0, r1
40020ab0:	0a000002 	beq	40020ac0 <CyU3PUsbRegisterEventCallback+0x44>
40020ab4:	e3a01000 	mov	r1, #0
40020ab8:	e3a0000b 	mov	r0, #11
40020abc:	e12fff34 	blx	r4
40020ac0:	e8bd8010 	pop	{r4, pc}
40020ac4:	40030d9c 	.word	0x40030d9c
40020ac8:	40031d40 	.word	0x40031d40
40020acc:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020ad0 <CyU3PUsbRegisterSetupCallback>:
40020ad0:	e59f2050 	ldr	r2, [pc, #80]	; 40020b28 <CyU3PUsbRegisterSetupCallback+0x58>
40020ad4:	e5820000 	str	r0, [r2]
40020ad8:	e3510001 	cmp	r1, #1
40020adc:	1a000003 	bne	40020af0 <CyU3PUsbRegisterSetupCallback+0x20>
40020ae0:	e3a02000 	mov	r2, #0
40020ae4:	e59f3040 	ldr	r3, [pc, #64]	; 40020b2c <CyU3PUsbRegisterSetupCallback+0x5c>
40020ae8:	e5c32007 	strb	r2, [r3, #7]
40020aec:	ea00000c 	b	40020b24 <CyU3PUsbRegisterSetupCallback+0x54>
40020af0:	e3a02001 	mov	r2, #1
40020af4:	e59f3030 	ldr	r3, [pc, #48]	; 40020b2c <CyU3PUsbRegisterSetupCallback+0x5c>
40020af8:	e5c32007 	strb	r2, [r3, #7]
40020afc:	e2832000 	add	r2, r3, #0
40020b00:	e5d22008 	ldrb	r2, [r2, #8]
40020b04:	e3520000 	cmp	r2, #0
40020b08:	da000005 	ble	40020b24 <CyU3PUsbRegisterSetupCallback+0x54>
40020b0c:	e2832000 	add	r2, r3, #0
40020b10:	e5d22008 	ldrb	r2, [r2, #8]
40020b14:	e3520003 	cmp	r2, #3
40020b18:	aa000001 	bge	40020b24 <CyU3PUsbRegisterSetupCallback+0x54>
40020b1c:	e3a02003 	mov	r2, #3
40020b20:	e5c32008 	strb	r2, [r3, #8]
40020b24:	e12fff1e 	bx	lr
40020b28:	40030da0 	.word	0x40030da0
40020b2c:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020b30 <CyU3PUsbResetHandler>:
40020b30:	e92d4010 	push	{r4, lr}
40020b34:	e3a00001 	mov	r0, #1
40020b38:	e59f1124 	ldr	r1, [pc, #292]	; 40020c64 <CyU3PUsbResetHandler+0x134>
40020b3c:	e5c10009 	strb	r0, [r1, #9]
40020b40:	e59f0120 	ldr	r0, [pc, #288]	; 40020c68 <CyU3PUsbResetHandler+0x138>
40020b44:	e5900018 	ldr	r0, [r0, #24]
40020b48:	e59f1118 	ldr	r1, [pc, #280]	; 40020c68 <CyU3PUsbResetHandler+0x138>
40020b4c:	e581000c 	str	r0, [r1, #12]
40020b50:	e2810000 	add	r0, r1, #0
40020b54:	e5900014 	ldr	r0, [r0, #20]
40020b58:	e5810010 	str	r0, [r1, #16]
40020b5c:	e59f0108 	ldr	r0, [pc, #264]	; 40020c6c <CyU3PUsbResetHandler+0x13c>
40020b60:	e5900000 	ldr	r0, [r0]
40020b64:	e3500000 	cmp	r0, #0
40020b68:	0a000010 	beq	40020bb0 <CyU3PUsbResetHandler+0x80>
40020b6c:	e59f00f0 	ldr	r0, [pc, #240]	; 40020c64 <CyU3PUsbResetHandler+0x134>
40020b70:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020b74:	e3500000 	cmp	r0, #0
40020b78:	1a000007 	bne	40020b9c <CyU3PUsbResetHandler+0x6c>
40020b7c:	e3a01000 	mov	r1, #0
40020b80:	e1a00001 	mov	r0, r1
40020b84:	e59f20e0 	ldr	r2, [pc, #224]	; 40020c6c <CyU3PUsbResetHandler+0x13c>
40020b88:	e5922000 	ldr	r2, [r2]
40020b8c:	e12fff32 	blx	r2
40020b90:	e3a00001 	mov	r0, #1
40020b94:	e59f10c8 	ldr	r1, [pc, #200]	; 40020c64 <CyU3PUsbResetHandler+0x134>
40020b98:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020b9c:	e3a01000 	mov	r1, #0
40020ba0:	e3a00004 	mov	r0, #4
40020ba4:	e59f20c0 	ldr	r2, [pc, #192]	; 40020c6c <CyU3PUsbResetHandler+0x13c>
40020ba8:	e5922000 	ldr	r2, [r2]
40020bac:	e12fff32 	blx	r2
40020bb0:	e59f00b8 	ldr	r0, [pc, #184]	; 40020c70 <CyU3PUsbResetHandler+0x140>
40020bb4:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020bb8:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020bbc:	e59f10ac 	ldr	r1, [pc, #172]	; 40020c70 <CyU3PUsbResetHandler+0x140>
40020bc0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020bc4:	e3a00001 	mov	r0, #1
40020bc8:	ebffca2e 	bl	40013488 <CyU3PBusyWait>
40020bcc:	e59f009c 	ldr	r0, [pc, #156]	; 40020c70 <CyU3PUsbResetHandler+0x140>
40020bd0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020bd4:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020bd8:	e59f1090 	ldr	r1, [pc, #144]	; 40020c70 <CyU3PUsbResetHandler+0x140>
40020bdc:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020be0:	e3a00001 	mov	r0, #1
40020be4:	ebffca27 	bl	40013488 <CyU3PBusyWait>
40020be8:	e3a00040 	mov	r0, #64	; 0x40
40020bec:	e59f107c 	ldr	r1, [pc, #124]	; 40020c70 <CyU3PUsbResetHandler+0x140>
40020bf0:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020bf4:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020bf8:	e1c10000 	bic	r0, r1, r0
40020bfc:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
40020c00:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020c04:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020c08:	e1a00001 	mov	r0, r1
40020c0c:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020c10:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020c14:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020c18:	e3a00001 	mov	r0, #1
40020c1c:	ebfffc14 	bl	4001fc74 <CyU3PUsbEpPrepare>
40020c20:	e59f003c 	ldr	r0, [pc, #60]	; 40020c64 <CyU3PUsbResetHandler+0x134>
40020c24:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40020c28:	e3500000 	cmp	r0, #0
40020c2c:	0a00000b 	beq	40020c60 <CyU3PUsbResetHandler+0x130>
40020c30:	e59f002c 	ldr	r0, [pc, #44]	; 40020c64 <CyU3PUsbResetHandler+0x134>
40020c34:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020c38:	e3500003 	cmp	r0, #3
40020c3c:	3a000002 	bcc	40020c4c <CyU3PUsbResetHandler+0x11c>
40020c40:	e3a00000 	mov	r0, #0
40020c44:	e59f1018 	ldr	r1, [pc, #24]	; 40020c64 <CyU3PUsbResetHandler+0x134>
40020c48:	e581004c 	str	r0, [r1, #76]	; 0x4c
40020c4c:	e59f001c 	ldr	r0, [pc, #28]	; 40020c70 <CyU3PUsbResetHandler+0x140>
40020c50:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020c54:	e3100901 	tst	r0, #16384	; 0x4000
40020c58:	1a000000 	bne	40020c60 <CyU3PUsbResetHandler+0x130>
40020c5c:	ebffff13 	bl	400208b0 <CyU3PUsbReEnableUsb3>
40020c60:	e8bd8010 	pop	{r4, pc}
40020c64:	40031d40 	.word	0x40031d40
40020c68:	40031f98 	.word	0x40031f98
40020c6c:	40030d9c 	.word	0x40030d9c
40020c70:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

40020c74 <CyU3PUsbResumeHandler>:
40020c74:	e92d4010 	push	{r4, lr}
40020c78:	e59f003c 	ldr	r0, [pc, #60]	; 40020cbc <CyU3PUsbResumeHandler+0x48>
40020c7c:	e5d00008 	ldrb	r0, [r0, #8]
40020c80:	e3500005 	cmp	r0, #5
40020c84:	ba00000b 	blt	40020cb8 <CyU3PUsbResumeHandler+0x44>
40020c88:	e59f0030 	ldr	r0, [pc, #48]	; 40020cc0 <CyU3PUsbResumeHandler+0x4c>
40020c8c:	e5900000 	ldr	r0, [r0]
40020c90:	e3500000 	cmp	r0, #0
40020c94:	0a000004 	beq	40020cac <CyU3PUsbResumeHandler+0x38>
40020c98:	e3a01000 	mov	r1, #0
40020c9c:	e3a00003 	mov	r0, #3
40020ca0:	e59f2018 	ldr	r2, [pc, #24]	; 40020cc0 <CyU3PUsbResumeHandler+0x4c>
40020ca4:	e5922000 	ldr	r2, [r2]
40020ca8:	e12fff32 	blx	r2
40020cac:	e3a00006 	mov	r0, #6
40020cb0:	e59f1004 	ldr	r1, [pc, #4]	; 40020cbc <CyU3PUsbResumeHandler+0x48>
40020cb4:	e5c10008 	strb	r0, [r1, #8]
40020cb8:	e8bd8010 	pop	{r4, pc}
40020cbc:	40031d40 	.word	0x40031d40
40020cc0:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSConnecthandler:

40020cc4 <CyU3PUsbSSConnecthandler>:
40020cc4:	e92d4010 	push	{r4, lr}
40020cc8:	e59f01d4 	ldr	r0, [pc, #468]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020ccc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020cd0:	e3100a02 	tst	r0, #8192	; 0x2000
40020cd4:	0a00002b 	beq	40020d88 <CyU3PUsbSSConnecthandler+0xc4>
40020cd8:	e59f01c8 	ldr	r0, [pc, #456]	; 40020ea8 <CyU3PUsbSSConnecthandler+0x1e4>
40020cdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020ce0:	e200403f 	and	r4, r0, #63	; 0x3f
40020ce4:	ea000003 	b	40020cf8 <CyU3PUsbSSConnecthandler+0x34>
40020ce8:	ebffa6e6 	bl	4000a888 <_txe_thread_relinquish>
40020cec:	e59f01b4 	ldr	r0, [pc, #436]	; 40020ea8 <CyU3PUsbSSConnecthandler+0x1e4>
40020cf0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020cf4:	e200403f 	and	r4, r0, #63	; 0x3f
40020cf8:	e59f01a4 	ldr	r0, [pc, #420]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020cfc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d00:	e3100901 	tst	r0, #16384	; 0x4000
40020d04:	0a000001 	beq	40020d10 <CyU3PUsbSSConnecthandler+0x4c>
40020d08:	e3540008 	cmp	r4, #8
40020d0c:	0afffff5 	beq	40020ce8 <CyU3PUsbSSConnecthandler+0x24>
40020d10:	e3540017 	cmp	r4, #23
40020d14:	1a00000a 	bne	40020d44 <CyU3PUsbSSConnecthandler+0x80>
40020d18:	e59f018c 	ldr	r0, [pc, #396]	; 40020eac <CyU3PUsbSSConnecthandler+0x1e8>
40020d1c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
40020d20:	e3500000 	cmp	r0, #0
40020d24:	1a000002 	bne	40020d34 <CyU3PUsbSSConnecthandler+0x70>
40020d28:	e3a00010 	mov	r0, #16
40020d2c:	ebfffb21 	bl	4001f9b8 <CyU3PUsbAddToEventLog>
40020d30:	eb000060 	bl	40020eb8 <CyU3PUsbSSDisConnecthandler>
40020d34:	e3a00003 	mov	r0, #3
40020d38:	e59f116c 	ldr	r1, [pc, #364]	; 40020eac <CyU3PUsbSSConnecthandler+0x1e8>
40020d3c:	e5c10009 	strb	r0, [r1, #9]
40020d40:	e8bd8010 	pop	{r4, pc}
40020d44:	e59f0158 	ldr	r0, [pc, #344]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020d48:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d4c:	e3100901 	tst	r0, #16384	; 0x4000
40020d50:	1a000000 	bne	40020d58 <CyU3PUsbSSConnecthandler+0x94>
40020d54:	eafffff9 	b	40020d40 <CyU3PUsbSSConnecthandler+0x7c>
40020d58:	e59f0144 	ldr	r0, [pc, #324]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020d5c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020d60:	e3800008 	orr	r0, r0, #8
40020d64:	e59f1138 	ldr	r1, [pc, #312]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020d68:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d6c:	e1a00001 	mov	r0, r1
40020d70:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020d74:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
40020d78:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020d7c:	e1a00001 	mov	r0, r1
40020d80:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
40020d84:	e581051c 	str	r0, [r1, #1308]	; 0x51c
40020d88:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
40020d8c:	e59f111c 	ldr	r1, [pc, #284]	; 40020eb0 <CyU3PUsbSSConnecthandler+0x1ec>
40020d90:	e5810008 	str	r0, [r1, #8]
40020d94:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020d98:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
40020d9c:	e581001c 	str	r0, [r1, #28]
40020da0:	e3a00003 	mov	r0, #3
40020da4:	e59f1100 	ldr	r1, [pc, #256]	; 40020eac <CyU3PUsbSSConnecthandler+0x1e8>
40020da8:	e5c10009 	strb	r0, [r1, #9]
40020dac:	e59f00f0 	ldr	r0, [pc, #240]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020db0:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020db4:	e3800902 	orr	r0, r0, #32768	; 0x8000
40020db8:	e59f10e4 	ldr	r1, [pc, #228]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020dbc:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020dc0:	e1a00001 	mov	r0, r1
40020dc4:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020dc8:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020dcc:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020dd0:	e3a00001 	mov	r0, #1
40020dd4:	ebffc9ab 	bl	40013488 <CyU3PBusyWait>
40020dd8:	e59f00c4 	ldr	r0, [pc, #196]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020ddc:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020de0:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40020de4:	e59f10b8 	ldr	r1, [pc, #184]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020de8:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020dec:	e3a00001 	mov	r0, #1
40020df0:	ebffc9a4 	bl	40013488 <CyU3PBusyWait>
40020df4:	e3a00000 	mov	r0, #0
40020df8:	ebffeecd 	bl	4001c934 <CyU3PUsbFlushEp>
40020dfc:	e3a00080 	mov	r0, #128	; 0x80
40020e00:	ebffeecb 	bl	4001c934 <CyU3PUsbFlushEp>
40020e04:	e59f009c 	ldr	r0, [pc, #156]	; 40020ea8 <CyU3PUsbSSConnecthandler+0x1e4>
40020e08:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40020e0c:	e3800001 	orr	r0, r0, #1
40020e10:	e59f1090 	ldr	r1, [pc, #144]	; 40020ea8 <CyU3PUsbSSConnecthandler+0x1e4>
40020e14:	e5810500 	str	r0, [r1, #1280]	; 0x500
40020e18:	e3a00c02 	mov	r0, #512	; 0x200
40020e1c:	e1c11200 	bic	r1, r1, r0, lsl #4
40020e20:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020e24:	e1810200 	orr	r0, r1, r0, lsl #4
40020e28:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40020e2c:	e3800001 	orr	r0, r0, #1
40020e30:	e2811a02 	add	r1, r1, #8192	; 0x2000
40020e34:	e5810600 	str	r0, [r1, #1536]	; 0x600
40020e38:	e3a00c02 	mov	r0, #512	; 0x200
40020e3c:	e1c11200 	bic	r1, r1, r0, lsl #4
40020e40:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020e44:	e3a00000 	mov	r0, #0
40020e48:	ebfff121 	bl	4001d2d4 <CyU3PUsbResetEp>
40020e4c:	e3a00000 	mov	r0, #0
40020e50:	ebffeeb7 	bl	4001c934 <CyU3PUsbFlushEp>
40020e54:	e3a00080 	mov	r0, #128	; 0x80
40020e58:	ebfff11d 	bl	4001d2d4 <CyU3PUsbResetEp>
40020e5c:	e3a00080 	mov	r0, #128	; 0x80
40020e60:	ebffeeb3 	bl	4001c934 <CyU3PUsbFlushEp>
40020e64:	e3a00c02 	mov	r0, #512	; 0x200
40020e68:	e59f1034 	ldr	r1, [pc, #52]	; 40020ea4 <CyU3PUsbSSConnecthandler+0x1e0>
40020e6c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40020e70:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40020e74:	e59f0038 	ldr	r0, [pc, #56]	; 40020eb4 <CyU3PUsbSSConnecthandler+0x1f0>
40020e78:	e5900000 	ldr	r0, [r0]
40020e7c:	e3500000 	cmp	r0, #0
40020e80:	0a000004 	beq	40020e98 <CyU3PUsbSSConnecthandler+0x1d4>
40020e84:	e3a01001 	mov	r1, #1
40020e88:	e3a00000 	mov	r0, #0
40020e8c:	e59f2020 	ldr	r2, [pc, #32]	; 40020eb4 <CyU3PUsbSSConnecthandler+0x1f0>
40020e90:	e5922000 	ldr	r2, [r2]
40020e94:	e12fff32 	blx	r2
40020e98:	e3a00003 	mov	r0, #3
40020e9c:	ebfffb74 	bl	4001fc74 <CyU3PUsbEpPrepare>
40020ea0:	eaffffa6 	b	40020d40 <CyU3PUsbSSConnecthandler+0x7c>
40020ea4:	e0031000 	.word	0xe0031000
40020ea8:	e0033000 	.word	0xe0033000
40020eac:	40031d40 	.word	0x40031d40
40020eb0:	e0052000 	.word	0xe0052000
40020eb4:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

40020eb8 <CyU3PUsbSSDisConnecthandler>:
40020eb8:	e92d4010 	push	{r4, lr}
40020ebc:	e59f0164 	ldr	r0, [pc, #356]	; 40021028 <CyU3PUsbSSDisConnecthandler+0x170>
40020ec0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020ec4:	e3500000 	cmp	r0, #0
40020ec8:	0a000005 	beq	40020ee4 <CyU3PUsbSSDisConnecthandler+0x2c>
40020ecc:	e59f0158 	ldr	r0, [pc, #344]	; 4002102c <CyU3PUsbSSDisConnecthandler+0x174>
40020ed0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020ed4:	e59f114c 	ldr	r1, [pc, #332]	; 40021028 <CyU3PUsbSSDisConnecthandler+0x170>
40020ed8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020edc:	e1100001 	tst	r0, r1
40020ee0:	0a00004e 	beq	40021020 <CyU3PUsbSSDisConnecthandler+0x168>
40020ee4:	e59f013c 	ldr	r0, [pc, #316]	; 40021028 <CyU3PUsbSSDisConnecthandler+0x170>
40020ee8:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020eec:	e2800001 	add	r0, r0, #1
40020ef0:	e59f1130 	ldr	r1, [pc, #304]	; 40021028 <CyU3PUsbSSDisConnecthandler+0x170>
40020ef4:	e5810058 	str	r0, [r1, #88]	; 0x58
40020ef8:	e59f0130 	ldr	r0, [pc, #304]	; 40021030 <CyU3PUsbSSDisConnecthandler+0x178>
40020efc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020f00:	e3100a02 	tst	r0, #8192	; 0x2000
40020f04:	0a000020 	beq	40020f8c <CyU3PUsbSSDisConnecthandler+0xd4>
40020f08:	e59f0120 	ldr	r0, [pc, #288]	; 40021030 <CyU3PUsbSSDisConnecthandler+0x178>
40020f0c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020f10:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40020f14:	e59f1114 	ldr	r1, [pc, #276]	; 40021030 <CyU3PUsbSSDisConnecthandler+0x178>
40020f18:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020f1c:	e3a00002 	mov	r0, #2
40020f20:	ebffc958 	bl	40013488 <CyU3PBusyWait>
40020f24:	e59f0108 	ldr	r0, [pc, #264]	; 40021034 <CyU3PUsbSSDisConnecthandler+0x17c>
40020f28:	e5900004 	ldr	r0, [r0, #4]
40020f2c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020f30:	e59f10fc 	ldr	r1, [pc, #252]	; 40021034 <CyU3PUsbSSDisConnecthandler+0x17c>
40020f34:	e5810004 	str	r0, [r1, #4]
40020f38:	e3a00001 	mov	r0, #1
40020f3c:	ebffc951 	bl	40013488 <CyU3PBusyWait>
40020f40:	e59f00f0 	ldr	r0, [pc, #240]	; 40021038 <CyU3PUsbSSDisConnecthandler+0x180>
40020f44:	e590001c 	ldr	r0, [r0, #28]
40020f48:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40020f4c:	e59f10e4 	ldr	r1, [pc, #228]	; 40021038 <CyU3PUsbSSDisConnecthandler+0x180>
40020f50:	e581001c 	str	r0, [r1, #28]
40020f54:	e59f00e0 	ldr	r0, [pc, #224]	; 4002103c <CyU3PUsbSSDisConnecthandler+0x184>
40020f58:	e5900000 	ldr	r0, [r0]
40020f5c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020f60:	e3a00001 	mov	r0, #1
40020f64:	ebffc947 	bl	40013488 <CyU3PBusyWait>
40020f68:	e59f00c4 	ldr	r0, [pc, #196]	; 40021034 <CyU3PUsbSSDisConnecthandler+0x17c>
40020f6c:	e5900004 	ldr	r0, [r0, #4]
40020f70:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020f74:	e59f10b8 	ldr	r1, [pc, #184]	; 40021034 <CyU3PUsbSSDisConnecthandler+0x17c>
40020f78:	e5810004 	str	r0, [r1, #4]
40020f7c:	e3a01000 	mov	r1, #0
40020f80:	e3a00002 	mov	r0, #2
40020f84:	ebffecdf 	bl	4001c308 <CyU3PSetUsbCoreClock>
40020f88:	ea000025 	b	40021024 <CyU3PUsbSSDisConnecthandler+0x16c>
40020f8c:	e3a00001 	mov	r0, #1
40020f90:	e59f1090 	ldr	r1, [pc, #144]	; 40021028 <CyU3PUsbSSDisConnecthandler+0x170>
40020f94:	e5c10009 	strb	r0, [r1, #9]
40020f98:	ebffef8c 	bl	4001cdd0 <CyU3PUsbPhyDisable>
40020f9c:	e59f0084 	ldr	r0, [pc, #132]	; 40021028 <CyU3PUsbSSDisConnecthandler+0x170>
40020fa0:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40020fa4:	e3500000 	cmp	r0, #0
40020fa8:	0a000019 	beq	40021014 <CyU3PUsbSSDisConnecthandler+0x15c>
40020fac:	e59f008c 	ldr	r0, [pc, #140]	; 40021040 <CyU3PUsbSSDisConnecthandler+0x188>
40020fb0:	e5900000 	ldr	r0, [r0]
40020fb4:	e3500000 	cmp	r0, #0
40020fb8:	0a000005 	beq	40020fd4 <CyU3PUsbSSDisConnecthandler+0x11c>
40020fbc:	e3a00000 	mov	r0, #0
40020fc0:	e59f1078 	ldr	r1, [pc, #120]	; 40021040 <CyU3PUsbSSDisConnecthandler+0x188>
40020fc4:	e5810000 	str	r0, [r1]
40020fc8:	e3a00001 	mov	r0, #1
40020fcc:	ebffeff5 	bl	4001cfa8 <CyU3PUsbPhyEnable>
40020fd0:	ea000013 	b	40021024 <CyU3PUsbSSDisConnecthandler+0x16c>
40020fd4:	e3a00003 	mov	r0, #3
40020fd8:	e59f1048 	ldr	r1, [pc, #72]	; 40021028 <CyU3PUsbSSDisConnecthandler+0x170>
40020fdc:	e5c10008 	strb	r0, [r1, #8]
40020fe0:	e3a00000 	mov	r0, #0
40020fe4:	e5c10009 	strb	r0, [r1, #9]
40020fe8:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020fec:	e59f0050 	ldr	r0, [pc, #80]	; 40021044 <CyU3PUsbSSDisConnecthandler+0x18c>
40020ff0:	e5900000 	ldr	r0, [r0]
40020ff4:	e3500000 	cmp	r0, #0
40020ff8:	0a000009 	beq	40021024 <CyU3PUsbSSDisConnecthandler+0x16c>
40020ffc:	e3a01000 	mov	r1, #0
40021000:	e3a00014 	mov	r0, #20
40021004:	e59f2038 	ldr	r2, [pc, #56]	; 40021044 <CyU3PUsbSSDisConnecthandler+0x18c>
40021008:	e5922000 	ldr	r2, [r2]
4002100c:	e12fff32 	blx	r2
40021010:	ea000003 	b	40021024 <CyU3PUsbSSDisConnecthandler+0x16c>
40021014:	e3a00000 	mov	r0, #0
40021018:	ebffefe2 	bl	4001cfa8 <CyU3PUsbPhyEnable>
4002101c:	ea000000 	b	40021024 <CyU3PUsbSSDisConnecthandler+0x16c>
40021020:	ebfffa07 	bl	4001f844 <CyU3PUibVbusChangeHandler>
40021024:	e8bd8010 	pop	{r4, pc}
40021028:	40031d40 	.word	0x40031d40
4002102c:	e0051000 	.word	0xe0051000
40021030:	e0031000 	.word	0xe0031000
40021034:	e0030000 	.word	0xe0030000
40021038:	e0033000 	.word	0xe0033000
4002103c:	40030c58 	.word	0x40030c58
40021040:	40030d74 	.word	0x40030d74
40021044:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSReset:

40021048 <CyU3PUsbSSReset>:
40021048:	e92d4010 	push	{r4, lr}
4002104c:	e3a04000 	mov	r4, #0
40021050:	e59f0170 	ldr	r0, [pc, #368]	; 400211c8 <CyU3PUsbSSReset+0x180>
40021054:	e5d00009 	ldrb	r0, [r0, #9]
40021058:	e3500003 	cmp	r0, #3
4002105c:	0a000000 	beq	40021064 <CyU3PUsbSSReset+0x1c>
40021060:	e8bd8010 	pop	{r4, pc}
40021064:	e59f0160 	ldr	r0, [pc, #352]	; 400211cc <CyU3PUsbSSReset+0x184>
40021068:	e5900000 	ldr	r0, [r0]
4002106c:	e3500000 	cmp	r0, #0
40021070:	0a000004 	beq	40021088 <CyU3PUsbSSReset+0x40>
40021074:	e3a01001 	mov	r1, #1
40021078:	e3a00004 	mov	r0, #4
4002107c:	e59f2148 	ldr	r2, [pc, #328]	; 400211cc <CyU3PUsbSSReset+0x184>
40021080:	e5922000 	ldr	r2, [r2]
40021084:	e12fff32 	blx	r2
40021088:	e59f0140 	ldr	r0, [pc, #320]	; 400211d0 <CyU3PUsbSSReset+0x188>
4002108c:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021090:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40021094:	e59f1134 	ldr	r1, [pc, #308]	; 400211d0 <CyU3PUsbSSReset+0x188>
40021098:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
4002109c:	e3a00001 	mov	r0, #1
400210a0:	ebffc8f8 	bl	40013488 <CyU3PBusyWait>
400210a4:	e59f0124 	ldr	r0, [pc, #292]	; 400211d0 <CyU3PUsbSSReset+0x188>
400210a8:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400210ac:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400210b0:	e59f1118 	ldr	r1, [pc, #280]	; 400211d0 <CyU3PUsbSSReset+0x188>
400210b4:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400210b8:	e3a00001 	mov	r0, #1
400210bc:	ebffc8f1 	bl	40013488 <CyU3PBusyWait>
400210c0:	e3a00000 	mov	r0, #0
400210c4:	ebffee1a 	bl	4001c934 <CyU3PUsbFlushEp>
400210c8:	e3a00080 	mov	r0, #128	; 0x80
400210cc:	ebffee18 	bl	4001c934 <CyU3PUsbFlushEp>
400210d0:	e59f00fc 	ldr	r0, [pc, #252]	; 400211d4 <CyU3PUsbSSReset+0x18c>
400210d4:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
400210d8:	e3800001 	orr	r0, r0, #1
400210dc:	e59f10f0 	ldr	r1, [pc, #240]	; 400211d4 <CyU3PUsbSSReset+0x18c>
400210e0:	e5810500 	str	r0, [r1, #1280]	; 0x500
400210e4:	e3a00c02 	mov	r0, #512	; 0x200
400210e8:	e1c11200 	bic	r1, r1, r0, lsl #4
400210ec:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
400210f0:	e1810200 	orr	r0, r1, r0, lsl #4
400210f4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
400210f8:	e3800001 	orr	r0, r0, #1
400210fc:	e2811a02 	add	r1, r1, #8192	; 0x2000
40021100:	e5810600 	str	r0, [r1, #1536]	; 0x600
40021104:	e3a00c02 	mov	r0, #512	; 0x200
40021108:	e1c11200 	bic	r1, r1, r0, lsl #4
4002110c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021110:	e3a00000 	mov	r0, #0
40021114:	ebfff06e 	bl	4001d2d4 <CyU3PUsbResetEp>
40021118:	e3a00000 	mov	r0, #0
4002111c:	ebffee04 	bl	4001c934 <CyU3PUsbFlushEp>
40021120:	e3a00080 	mov	r0, #128	; 0x80
40021124:	ebfff06a 	bl	4001d2d4 <CyU3PUsbResetEp>
40021128:	e3a00080 	mov	r0, #128	; 0x80
4002112c:	ebffee00 	bl	4001c934 <CyU3PUsbFlushEp>
40021130:	e3a00c02 	mov	r0, #512	; 0x200
40021134:	e59f1094 	ldr	r1, [pc, #148]	; 400211d0 <CyU3PUsbSSReset+0x188>
40021138:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002113c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021140:	e3a04001 	mov	r4, #1
40021144:	ea000019 	b	400211b0 <CyU3PUsbSSReset+0x168>
40021148:	e0840084 	add	r0, r4, r4, lsl #1
4002114c:	e59f1084 	ldr	r1, [pc, #132]	; 400211d8 <CyU3PUsbSSReset+0x190>
40021150:	e0810100 	add	r0, r1, r0, lsl #2
40021154:	e5900004 	ldr	r0, [r0, #4]
40021158:	e3500001 	cmp	r0, #1
4002115c:	1a000005 	bne	40021178 <CyU3PUsbSSReset+0x130>
40021160:	e3840080 	orr	r0, r4, #128	; 0x80
40021164:	ebffedf2 	bl	4001c934 <CyU3PUsbFlushEp>
40021168:	e3840080 	orr	r0, r4, #128	; 0x80
4002116c:	e3a02001 	mov	r2, #1
40021170:	e3a01000 	mov	r1, #0
40021174:	ebfff2ba 	bl	4001dc64 <CyU3PUsbStall>
40021178:	e0840084 	add	r0, r4, r4, lsl #1
4002117c:	e59f1058 	ldr	r1, [pc, #88]	; 400211dc <CyU3PUsbSSReset+0x194>
40021180:	e0810100 	add	r0, r1, r0, lsl #2
40021184:	e5900004 	ldr	r0, [r0, #4]
40021188:	e3500001 	cmp	r0, #1
4002118c:	1a000005 	bne	400211a8 <CyU3PUsbSSReset+0x160>
40021190:	e1a00004 	mov	r0, r4
40021194:	ebffede6 	bl	4001c934 <CyU3PUsbFlushEp>
40021198:	e3a02001 	mov	r2, #1
4002119c:	e3a01000 	mov	r1, #0
400211a0:	e1a00004 	mov	r0, r4
400211a4:	ebfff2ae 	bl	4001dc64 <CyU3PUsbStall>
400211a8:	e2840001 	add	r0, r4, #1
400211ac:	e20040ff 	and	r4, r0, #255	; 0xff
400211b0:	e3540010 	cmp	r4, #16
400211b4:	baffffe3 	blt	40021148 <CyU3PUsbSSReset+0x100>
400211b8:	e3a00005 	mov	r0, #5
400211bc:	e59f1004 	ldr	r1, [pc, #4]	; 400211c8 <CyU3PUsbSSReset+0x180>
400211c0:	e5c10008 	strb	r0, [r1, #8]
400211c4:	eaffffa5 	b	40021060 <CyU3PUsbSSReset+0x18>
400211c8:	40031d40 	.word	0x40031d40
400211cc:	40030d9c 	.word	0x40030d9c
400211d0:	e0031000 	.word	0xe0031000
400211d4:	e0033000 	.word	0xe0033000
400211d8:	40031bb8 	.word	0x40031bb8
400211dc:	40031c78 	.word	0x40031c78

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

400211e0 <CyU3PUsbSendCompliancePatterns>:
400211e0:	e92d4070 	push	{r4, r5, r6, lr}
400211e4:	e3a04001 	mov	r4, #1
400211e8:	e59f01ec 	ldr	r0, [pc, #492]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
400211ec:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400211f0:	e200503f 	and	r5, r0, #63	; 0x3f
400211f4:	e3550017 	cmp	r5, #23
400211f8:	0a000000 	beq	40021200 <CyU3PUsbSendCompliancePatterns+0x20>
400211fc:	e8bd8070 	pop	{r4, r5, r6, pc}
40021200:	e3a00003 	mov	r0, #3
40021204:	e59f11d4 	ldr	r1, [pc, #468]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
40021208:	e5c10009 	strb	r0, [r1, #9]
4002120c:	e3a00001 	mov	r0, #1
40021210:	e5810064 	str	r0, [r1, #100]	; 0x64
40021214:	e3a00000 	mov	r0, #0
40021218:	e5810060 	str	r0, [r1, #96]	; 0x60
4002121c:	e3a00d57 	mov	r0, #5568	; 0x15c0
40021220:	e59f11b4 	ldr	r1, [pc, #436]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
40021224:	e5810054 	str	r0, [r1, #84]	; 0x54
40021228:	e59f01b4 	ldr	r0, [pc, #436]	; 400213e4 <CyU3PUsbSendCompliancePatterns+0x204>
4002122c:	e5900000 	ldr	r0, [r0]
40021230:	e3500000 	cmp	r0, #0
40021234:	0a000004 	beq	4002124c <CyU3PUsbSendCompliancePatterns+0x6c>
40021238:	e3a01000 	mov	r1, #0
4002123c:	e3a00015 	mov	r0, #21
40021240:	e59f219c 	ldr	r2, [pc, #412]	; 400213e4 <CyU3PUsbSendCompliancePatterns+0x204>
40021244:	e5922000 	ldr	r2, [r2]
40021248:	e12fff32 	blx	r2
4002124c:	e1a00000 	nop			; (mov r0, r0)
40021250:	e59f0184 	ldr	r0, [pc, #388]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
40021254:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021258:	e3100002 	tst	r0, #2
4002125c:	0a000031 	beq	40021328 <CyU3PUsbSendCompliancePatterns+0x148>
40021260:	e59f0180 	ldr	r0, [pc, #384]	; 400213e8 <CyU3PUsbSendCompliancePatterns+0x208>
40021264:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40021268:	e59f116c 	ldr	r1, [pc, #364]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
4002126c:	e5810138 	str	r0, [r1, #312]	; 0x138
40021270:	e3a00001 	mov	r0, #1
40021274:	ebff9dd2 	bl	400089c4 <_tx_thread_sleep>
40021278:	e59f015c 	ldr	r0, [pc, #348]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
4002127c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021280:	e3c00002 	bic	r0, r0, #2
40021284:	e59f1150 	ldr	r1, [pc, #336]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
40021288:	e5810064 	str	r0, [r1, #100]	; 0x64
4002128c:	e3540004 	cmp	r4, #4
40021290:	1a000020 	bne	40021318 <CyU3PUsbSendCompliancePatterns+0x138>
40021294:	ea00000d 	b	400212d0 <CyU3PUsbSendCompliancePatterns+0xf0>
40021298:	e59f013c 	ldr	r0, [pc, #316]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
4002129c:	e590001c 	ldr	r0, [r0, #28]
400212a0:	e3800008 	orr	r0, r0, #8
400212a4:	e59f1130 	ldr	r1, [pc, #304]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
400212a8:	e581001c 	str	r0, [r1, #28]
400212ac:	e3a0000a 	mov	r0, #10
400212b0:	ebffc874 	bl	40013488 <CyU3PBusyWait>
400212b4:	e59f0120 	ldr	r0, [pc, #288]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
400212b8:	e590001c 	ldr	r0, [r0, #28]
400212bc:	e3c00008 	bic	r0, r0, #8
400212c0:	e59f1114 	ldr	r1, [pc, #276]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
400212c4:	e581001c 	str	r0, [r1, #28]
400212c8:	e3a0001e 	mov	r0, #30
400212cc:	ebffc86d 	bl	40013488 <CyU3PBusyWait>
400212d0:	e59f0104 	ldr	r0, [pc, #260]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
400212d4:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400212d8:	e3100006 	tst	r0, #6
400212dc:	1a00000d 	bne	40021318 <CyU3PUsbSendCompliancePatterns+0x138>
400212e0:	e59f00f8 	ldr	r0, [pc, #248]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
400212e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212e8:	e3500000 	cmp	r0, #0
400212ec:	0a000005 	beq	40021308 <CyU3PUsbSendCompliancePatterns+0x128>
400212f0:	e59f00f4 	ldr	r0, [pc, #244]	; 400213ec <CyU3PUsbSendCompliancePatterns+0x20c>
400212f4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400212f8:	e59f10e0 	ldr	r1, [pc, #224]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
400212fc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021300:	e1100001 	tst	r0, r1
40021304:	0a000003 	beq	40021318 <CyU3PUsbSendCompliancePatterns+0x138>
40021308:	e59f00d0 	ldr	r0, [pc, #208]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
4002130c:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021310:	e3500000 	cmp	r0, #0
40021314:	0affffdf 	beq	40021298 <CyU3PUsbSendCompliancePatterns+0xb8>
40021318:	e3a01009 	mov	r1, #9
4002131c:	e2840001 	add	r0, r4, #1
40021320:	ebffbde5 	bl	40010abc <__aeabi_idivmod>
40021324:	e20140ff 	and	r4, r1, #255	; 0xff
40021328:	e59f00ac 	ldr	r0, [pc, #172]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
4002132c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021330:	e3100004 	tst	r0, #4
40021334:	1a00000d 	bne	40021370 <CyU3PUsbSendCompliancePatterns+0x190>
40021338:	e59f00a0 	ldr	r0, [pc, #160]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
4002133c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021340:	e3500000 	cmp	r0, #0
40021344:	0a000005 	beq	40021360 <CyU3PUsbSendCompliancePatterns+0x180>
40021348:	e59f009c 	ldr	r0, [pc, #156]	; 400213ec <CyU3PUsbSendCompliancePatterns+0x20c>
4002134c:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021350:	e59f1088 	ldr	r1, [pc, #136]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
40021354:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021358:	e1100001 	tst	r0, r1
4002135c:	0a000003 	beq	40021370 <CyU3PUsbSendCompliancePatterns+0x190>
40021360:	e59f0078 	ldr	r0, [pc, #120]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
40021364:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021368:	e3500001 	cmp	r0, #1
4002136c:	1a000009 	bne	40021398 <CyU3PUsbSendCompliancePatterns+0x1b8>
40021370:	e59f0064 	ldr	r0, [pc, #100]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
40021374:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021378:	e3c00004 	bic	r0, r0, #4
4002137c:	e59f1058 	ldr	r1, [pc, #88]	; 400213dc <CyU3PUsbSendCompliancePatterns+0x1fc>
40021380:	e5810064 	str	r0, [r1, #100]	; 0x64
40021384:	e3a00c06 	mov	r0, #1536	; 0x600
40021388:	e5810138 	str	r0, [r1, #312]	; 0x138
4002138c:	e3a00000 	mov	r0, #0
40021390:	e5810054 	str	r0, [r1, #84]	; 0x54
40021394:	ea000002 	b	400213a4 <CyU3PUsbSendCompliancePatterns+0x1c4>
40021398:	e3a00001 	mov	r0, #1
4002139c:	ebff9d88 	bl	400089c4 <_tx_thread_sleep>
400213a0:	eaffffaa 	b	40021250 <CyU3PUsbSendCompliancePatterns+0x70>
400213a4:	e1a00000 	nop			; (mov r0, r0)
400213a8:	e59f0034 	ldr	r0, [pc, #52]	; 400213e4 <CyU3PUsbSendCompliancePatterns+0x204>
400213ac:	e5900000 	ldr	r0, [r0]
400213b0:	e3500000 	cmp	r0, #0
400213b4:	0a000004 	beq	400213cc <CyU3PUsbSendCompliancePatterns+0x1ec>
400213b8:	e3a01000 	mov	r1, #0
400213bc:	e3a00016 	mov	r0, #22
400213c0:	e59f201c 	ldr	r2, [pc, #28]	; 400213e4 <CyU3PUsbSendCompliancePatterns+0x204>
400213c4:	e5922000 	ldr	r2, [r2]
400213c8:	e12fff32 	blx	r2
400213cc:	e3a00000 	mov	r0, #0
400213d0:	e59f1008 	ldr	r1, [pc, #8]	; 400213e0 <CyU3PUsbSendCompliancePatterns+0x200>
400213d4:	e5810064 	str	r0, [r1, #100]	; 0x64
400213d8:	eaffff87 	b	400211fc <CyU3PUsbSendCompliancePatterns+0x1c>
400213dc:	e0033000 	.word	0xe0033000
400213e0:	40031d40 	.word	0x40031d40
400213e4:	40030d9c 	.word	0x40030d9c
400213e8:	40011df4 	.word	0x40011df4
400213ec:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

400213f0 <CyU3PUsbSetupCommand>:
400213f0:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400213f4:	e3a06000 	mov	r6, #0
400213f8:	e3a07000 	mov	r7, #0
400213fc:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021400:	e5d00009 	ldrb	r0, [r0, #9]
40021404:	e3500003 	cmp	r0, #3
40021408:	1a00001a 	bne	40021478 <CyU3PUsbSetupCommand+0x88>
4002140c:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021bc8 <CyU3PUsbSetupCommand+0x7d8>
40021410:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
40021414:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
40021418:	e3a00001 	mov	r0, #1
4002141c:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021420:	e5810050 	str	r0, [r1, #80]	; 0x50
40021424:	e3a00000 	mov	r0, #0
40021428:	e59f179c 	ldr	r1, [pc, #1948]	; 40021bcc <CyU3PUsbSetupCommand+0x7dc>
4002142c:	e5810000 	str	r0, [r1]
40021430:	e59f0798 	ldr	r0, [pc, #1944]	; 40021bd0 <CyU3PUsbSetupCommand+0x7e0>
40021434:	ebffa5d4 	bl	4000ab8c <_txe_timer_deactivate>
40021438:	e3a00b02 	mov	r0, #2048	; 0x800
4002143c:	e59f1784 	ldr	r1, [pc, #1924]	; 40021bc8 <CyU3PUsbSetupCommand+0x7d8>
40021440:	e5810404 	str	r0, [r1, #1028]	; 0x404
40021444:	e1c10000 	bic	r0, r1, r0
40021448:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002144c:	e200603f 	and	r6, r0, #63	; 0x3f
40021450:	e3560011 	cmp	r6, #17
40021454:	0a000001 	beq	40021460 <CyU3PUsbSetupCommand+0x70>
40021458:	e3560012 	cmp	r6, #18
4002145c:	1a000003 	bne	40021470 <CyU3PUsbSetupCommand+0x80>
40021460:	e3a02000 	mov	r2, #0
40021464:	e3a01401 	mov	r1, #16777216	; 0x1000000
40021468:	e59f0764 	ldr	r0, [pc, #1892]	; 40021bd4 <CyU3PUsbSetupCommand+0x7e4>
4002146c:	ebffa24c 	bl	40009da4 <_txe_event_flags_set>
40021470:	e3a06000 	mov	r6, #0
40021474:	ea00000d 	b	400214b0 <CyU3PUsbSetupCommand+0xc0>
40021478:	e59f0744 	ldr	r0, [pc, #1860]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
4002147c:	e5900024 	ldr	r0, [r0, #36]	; 0x24
40021480:	e3500000 	cmp	r0, #0
40021484:	0a000006 	beq	400214a4 <CyU3PUsbSetupCommand+0xb4>
40021488:	e59f0734 	ldr	r0, [pc, #1844]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
4002148c:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021490:	e3500003 	cmp	r0, #3
40021494:	2a000002 	bcs	400214a4 <CyU3PUsbSetupCommand+0xb4>
40021498:	e3a00001 	mov	r0, #1
4002149c:	e59f1720 	ldr	r1, [pc, #1824]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400214a0:	e581004c 	str	r0, [r1, #76]	; 0x4c
400214a4:	e59f072c 	ldr	r0, [pc, #1836]	; 40021bd8 <CyU3PUsbSetupCommand+0x7e8>
400214a8:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
400214ac:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
400214b0:	e3a01064 	mov	r1, #100	; 0x64
400214b4:	e59f0720 	ldr	r0, [pc, #1824]	; 40021bdc <CyU3PUsbSetupCommand+0x7ec>
400214b8:	ebffd5fd 	bl	40016cb4 <CyU3PDmaChannelWaitForCompletion>
400214bc:	e1a06000 	mov	r6, r0
400214c0:	e3560000 	cmp	r6, #0
400214c4:	0a00000b 	beq	400214f8 <CyU3PUsbSetupCommand+0x108>
400214c8:	e3560042 	cmp	r6, #66	; 0x42
400214cc:	0a000009 	beq	400214f8 <CyU3PUsbSetupCommand+0x108>
400214d0:	e3a01001 	mov	r1, #1
400214d4:	e3a00000 	mov	r0, #0
400214d8:	ebfff11b 	bl	4001d94c <CyU3PUsbSetEpNak>
400214dc:	e3a00064 	mov	r0, #100	; 0x64
400214e0:	ebffc7e8 	bl	40013488 <CyU3PBusyWait>
400214e4:	e59f06f0 	ldr	r0, [pc, #1776]	; 40021bdc <CyU3PUsbSetupCommand+0x7ec>
400214e8:	ebffd320 	bl	40016170 <CyU3PDmaChannelReset>
400214ec:	e3a01000 	mov	r1, #0
400214f0:	e1a00001 	mov	r0, r1
400214f4:	ebfff114 	bl	4001d94c <CyU3PUsbSetEpNak>
400214f8:	e3a01064 	mov	r1, #100	; 0x64
400214fc:	e59f06dc 	ldr	r0, [pc, #1756]	; 40021be0 <CyU3PUsbSetupCommand+0x7f0>
40021500:	ebffd5eb 	bl	40016cb4 <CyU3PDmaChannelWaitForCompletion>
40021504:	e1a06000 	mov	r6, r0
40021508:	e3560000 	cmp	r6, #0
4002150c:	0a00000d 	beq	40021548 <CyU3PUsbSetupCommand+0x158>
40021510:	e3560042 	cmp	r6, #66	; 0x42
40021514:	0a00000b 	beq	40021548 <CyU3PUsbSetupCommand+0x158>
40021518:	e3a01001 	mov	r1, #1
4002151c:	e3a00080 	mov	r0, #128	; 0x80
40021520:	ebfff109 	bl	4001d94c <CyU3PUsbSetEpNak>
40021524:	e3a00064 	mov	r0, #100	; 0x64
40021528:	ebffc7d6 	bl	40013488 <CyU3PBusyWait>
4002152c:	e59f06ac 	ldr	r0, [pc, #1708]	; 40021be0 <CyU3PUsbSetupCommand+0x7f0>
40021530:	ebffd30e 	bl	40016170 <CyU3PDmaChannelReset>
40021534:	e3a00080 	mov	r0, #128	; 0x80
40021538:	ebffecfd 	bl	4001c934 <CyU3PUsbFlushEp>
4002153c:	e3a01000 	mov	r1, #0
40021540:	e3a00080 	mov	r0, #128	; 0x80
40021544:	ebfff100 	bl	4001d94c <CyU3PUsbSetEpNak>
40021548:	e3a06000 	mov	r6, #0
4002154c:	e20490ff 	and	r9, r4, #255	; 0xff
40021550:	e209a060 	and	sl, r9, #96	; 0x60
40021554:	e2090003 	and	r0, r9, #3
40021558:	e58d0008 	str	r0, [sp, #8]
4002155c:	e2040cff 	and	r0, r4, #65280	; 0xff00
40021560:	e1a08420 	lsr	r8, r0, #8
40021564:	e59f0678 	ldr	r0, [pc, #1656]	; 40021be4 <CyU3PUsbSetupCommand+0x7f4>
40021568:	e000b824 	and	fp, r0, r4, lsr #16
4002156c:	e0050000 	and	r0, r5, r0
40021570:	e58d0004 	str	r0, [sp, #4]
40021574:	e59f0668 	ldr	r0, [pc, #1640]	; 40021be4 <CyU3PUsbSetupCommand+0x7f4>
40021578:	e0000825 	and	r0, r0, r5, lsr #16
4002157c:	e58d0000 	str	r0, [sp]
40021580:	e3140080 	tst	r4, #128	; 0x80
40021584:	0a000003 	beq	40021598 <CyU3PUsbSetupCommand+0x1a8>
40021588:	e59d0000 	ldr	r0, [sp]
4002158c:	e59f1644 	ldr	r1, [pc, #1604]	; 40021bd8 <CyU3PUsbSetupCommand+0x7e8>
40021590:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021594:	ea000002 	b	400215a4 <CyU3PUsbSetupCommand+0x1b4>
40021598:	e59d0000 	ldr	r0, [sp]
4002159c:	e59f1634 	ldr	r1, [pc, #1588]	; 40021bd8 <CyU3PUsbSetupCommand+0x7e8>
400215a0:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
400215a4:	e3a00000 	mov	r0, #0
400215a8:	e59f1614 	ldr	r1, [pc, #1556]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400215ac:	e5810040 	str	r0, [r1, #64]	; 0x40
400215b0:	e59f0620 	ldr	r0, [pc, #1568]	; 40021bd8 <CyU3PUsbSetupCommand+0x7e8>
400215b4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400215b8:	e3c00008 	bic	r0, r0, #8
400215bc:	e59f1614 	ldr	r1, [pc, #1556]	; 40021bd8 <CyU3PUsbSetupCommand+0x7e8>
400215c0:	e5810518 	str	r0, [r1, #1304]	; 0x518
400215c4:	e3a00000 	mov	r0, #0
400215c8:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400215cc:	e5810018 	str	r0, [r1, #24]
400215d0:	e5810070 	str	r0, [r1, #112]	; 0x70
400215d4:	e59f05fc 	ldr	r0, [pc, #1532]	; 40021bd8 <CyU3PUsbSetupCommand+0x7e8>
400215d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400215dc:	e3800008 	orr	r0, r0, #8
400215e0:	e59f15f0 	ldr	r1, [pc, #1520]	; 40021bd8 <CyU3PUsbSetupCommand+0x7e8>
400215e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
400215e8:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400215ec:	e5d00007 	ldrb	r0, [r0, #7]
400215f0:	e3500001 	cmp	r0, #1
400215f4:	0a000001 	beq	40021600 <CyU3PUsbSetupCommand+0x210>
400215f8:	e35a0000 	cmp	sl, #0
400215fc:	0a000024 	beq	40021694 <CyU3PUsbSetupCommand+0x2a4>
40021600:	e35a0000 	cmp	sl, #0
40021604:	1a000012 	bne	40021654 <CyU3PUsbSetupCommand+0x264>
40021608:	e3580009 	cmp	r8, #9
4002160c:	1a000010 	bne	40021654 <CyU3PUsbSetupCommand+0x264>
40021610:	e35b0001 	cmp	fp, #1
40021614:	1a00000b 	bne	40021648 <CyU3PUsbSetupCommand+0x258>
40021618:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
4002161c:	e5d10009 	ldrb	r0, [r1, #9]
40021620:	ebfff993 	bl	4001fc74 <CyU3PUsbEpPrepare>
40021624:	e3a00006 	mov	r0, #6
40021628:	e59f1594 	ldr	r1, [pc, #1428]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
4002162c:	e5c10008 	strb	r0, [r1, #8]
40021630:	e5c1b00c 	strb	fp, [r1, #12]
40021634:	e2810000 	add	r0, r1, #0
40021638:	e5d00006 	ldrb	r0, [r0, #6]
4002163c:	e2000001 	and	r0, r0, #1
40021640:	e5c10006 	strb	r0, [r1, #6]
40021644:	ea000002 	b	40021654 <CyU3PUsbSetupCommand+0x264>
40021648:	e3a00005 	mov	r0, #5
4002164c:	e59f1570 	ldr	r1, [pc, #1392]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021650:	e5c10008 	strb	r0, [r1, #8]
40021654:	e59f058c 	ldr	r0, [pc, #1420]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021658:	e5900000 	ldr	r0, [r0]
4002165c:	e3500000 	cmp	r0, #0
40021660:	0a000005 	beq	4002167c <CyU3PUsbSetupCommand+0x28c>
40021664:	e1a01005 	mov	r1, r5
40021668:	e1a00004 	mov	r0, r4
4002166c:	e59f2574 	ldr	r2, [pc, #1396]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021670:	e5922000 	ldr	r2, [r2]
40021674:	e12fff32 	blx	r2
40021678:	e1a07000 	mov	r7, r0
4002167c:	e3570001 	cmp	r7, #1
40021680:	1a000003 	bne	40021694 <CyU3PUsbSetupCommand+0x2a4>
40021684:	e3a00001 	mov	r0, #1
40021688:	e59f1534 	ldr	r1, [pc, #1332]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
4002168c:	e5810040 	str	r0, [r1, #64]	; 0x40
40021690:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40021694:	e35a0000 	cmp	sl, #0
40021698:	1a000140 	bne	40021ba0 <CyU3PUsbSetupCommand+0x7b0>
4002169c:	e3580009 	cmp	r8, #9
400216a0:	0a0000b1 	beq	4002196c <CyU3PUsbSetupCommand+0x57c>
400216a4:	ca00000b 	bgt	400216d8 <CyU3PUsbSetupCommand+0x2e8>
400216a8:	e3580009 	cmp	r8, #9
400216ac:	308ff108 	addcc	pc, pc, r8, lsl #2
400216b0:	ea000137 	b	40021b94 <CyU3PUsbSetupCommand+0x7a4>
400216b4:	ea000014 	b	4002170c <CyU3PUsbSetupCommand+0x31c>
400216b8:	ea000029 	b	40021764 <CyU3PUsbSetupCommand+0x374>
400216bc:	ea000134 	b	40021b94 <CyU3PUsbSetupCommand+0x7a4>
400216c0:	ea000057 	b	40021824 <CyU3PUsbSetupCommand+0x434>
400216c4:	ea000132 	b	40021b94 <CyU3PUsbSetupCommand+0x7a4>
400216c8:	ea000131 	b	40021b94 <CyU3PUsbSetupCommand+0x7a4>
400216cc:	ea000099 	b	40021938 <CyU3PUsbSetupCommand+0x548>
400216d0:	ea00012f 	b	40021b94 <CyU3PUsbSetupCommand+0x7a4>
400216d4:	ea00009d 	b	40021950 <CyU3PUsbSetupCommand+0x560>
400216d8:	e358000c 	cmp	r8, #12
400216dc:	0a0000fb 	beq	40021ad0 <CyU3PUsbSetupCommand+0x6e0>
400216e0:	ca000004 	bgt	400216f8 <CyU3PUsbSetupCommand+0x308>
400216e4:	e358000a 	cmp	r8, #10
400216e8:	0a0000c5 	beq	40021a04 <CyU3PUsbSetupCommand+0x614>
400216ec:	e358000b 	cmp	r8, #11
400216f0:	1a000127 	bne	40021b94 <CyU3PUsbSetupCommand+0x7a4>
400216f4:	ea0000d6 	b	40021a54 <CyU3PUsbSetupCommand+0x664>
400216f8:	e3580030 	cmp	r8, #48	; 0x30
400216fc:	0a0000f7 	beq	40021ae0 <CyU3PUsbSetupCommand+0x6f0>
40021700:	e3580031 	cmp	r8, #49	; 0x31
40021704:	1a000122 	bne	40021b94 <CyU3PUsbSetupCommand+0x7a4>
40021708:	ea000114 	b	40021b60 <CyU3PUsbSetupCommand+0x770>
4002170c:	e1a00000 	nop			; (mov r0, r0)
40021710:	e59d0008 	ldr	r0, [sp, #8]
40021714:	e3500001 	cmp	r0, #1
40021718:	1a00000c 	bne	40021750 <CyU3PUsbSetupCommand+0x360>
4002171c:	e59f04c4 	ldr	r0, [pc, #1220]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021720:	e5900000 	ldr	r0, [r0]
40021724:	e3500000 	cmp	r0, #0
40021728:	0a000008 	beq	40021750 <CyU3PUsbSetupCommand+0x360>
4002172c:	e1a01005 	mov	r1, r5
40021730:	e1a00004 	mov	r0, r4
40021734:	e59f24ac 	ldr	r2, [pc, #1196]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021738:	e5922000 	ldr	r2, [r2]
4002173c:	e12fff32 	blx	r2
40021740:	e1a07000 	mov	r7, r0
40021744:	e3570000 	cmp	r7, #0
40021748:	0a000000 	beq	40021750 <CyU3PUsbSetupCommand+0x360>
4002174c:	ea000112 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021750:	e59d0008 	ldr	r0, [sp, #8]
40021754:	e59d1004 	ldr	r1, [sp, #4]
40021758:	ebfffbd3 	bl	400206ac <CyU3PUsbHandleGetStatus>
4002175c:	e1a07000 	mov	r7, r0
40021760:	ea00010d 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021764:	e1a00000 	nop			; (mov r0, r0)
40021768:	e59d0008 	ldr	r0, [sp, #8]
4002176c:	e3500000 	cmp	r0, #0
40021770:	1a000002 	bne	40021780 <CyU3PUsbSetupCommand+0x390>
40021774:	e20b00ff 	and	r0, fp, #255	; 0xff
40021778:	ebfffa86 	bl	40020198 <CyU3PUsbHandleClearFeature>
4002177c:	eaffffc3 	b	40021690 <CyU3PUsbSetupCommand+0x2a0>
40021780:	e3a07000 	mov	r7, #0
40021784:	e59f0438 	ldr	r0, [pc, #1080]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021788:	e5d00007 	ldrb	r0, [r0, #7]
4002178c:	e3500000 	cmp	r0, #0
40021790:	1a00000e 	bne	400217d0 <CyU3PUsbSetupCommand+0x3e0>
40021794:	e59f044c 	ldr	r0, [pc, #1100]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021798:	e5900000 	ldr	r0, [r0]
4002179c:	e3500000 	cmp	r0, #0
400217a0:	0a00000a 	beq	400217d0 <CyU3PUsbSetupCommand+0x3e0>
400217a4:	e1a01005 	mov	r1, r5
400217a8:	e1a00004 	mov	r0, r4
400217ac:	e59f2434 	ldr	r2, [pc, #1076]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
400217b0:	e5922000 	ldr	r2, [r2]
400217b4:	e12fff32 	blx	r2
400217b8:	e1a07000 	mov	r7, r0
400217bc:	e3570000 	cmp	r7, #0
400217c0:	0a000002 	beq	400217d0 <CyU3PUsbSetupCommand+0x3e0>
400217c4:	e3a00001 	mov	r0, #1
400217c8:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400217cc:	e5810040 	str	r0, [r1, #64]	; 0x40
400217d0:	e3570000 	cmp	r7, #0
400217d4:	1a000011 	bne	40021820 <CyU3PUsbSetupCommand+0x430>
400217d8:	e59d0008 	ldr	r0, [sp, #8]
400217dc:	e3500002 	cmp	r0, #2
400217e0:	1a00000e 	bne	40021820 <CyU3PUsbSetupCommand+0x430>
400217e4:	e35b0000 	cmp	fp, #0
400217e8:	1a00000c 	bne	40021820 <CyU3PUsbSetupCommand+0x430>
400217ec:	e59d1004 	ldr	r1, [sp, #4]
400217f0:	e20100ff 	and	r0, r1, #255	; 0xff
400217f4:	e3a02001 	mov	r2, #1
400217f8:	e3a01000 	mov	r1, #0
400217fc:	ebfff118 	bl	4001dc64 <CyU3PUsbStall>
40021800:	e3500000 	cmp	r0, #0
40021804:	1a000005 	bne	40021820 <CyU3PUsbSetupCommand+0x430>
40021808:	e59d1004 	ldr	r1, [sp, #4]
4002180c:	e20100ff 	and	r0, r1, #255	; 0xff
40021810:	ebffeeaf 	bl	4001d2d4 <CyU3PUsbResetEp>
40021814:	ebffeb4e 	bl	4001c554 <CyU3PUsbAckSetup>
40021818:	e3a07001 	mov	r7, #1
4002181c:	ea0000de 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021820:	ea0000dd 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021824:	e1a00000 	nop			; (mov r0, r0)
40021828:	e59d0008 	ldr	r0, [sp, #8]
4002182c:	e3500000 	cmp	r0, #0
40021830:	1a00001b 	bne	400218a4 <CyU3PUsbSetupCommand+0x4b4>
40021834:	e35b0003 	cmp	fp, #3
40021838:	0a000004 	beq	40021850 <CyU3PUsbSetupCommand+0x460>
4002183c:	e35b0004 	cmp	fp, #4
40021840:	0a000002 	beq	40021850 <CyU3PUsbSetupCommand+0x460>
40021844:	e20b00ff 	and	r0, fp, #255	; 0xff
40021848:	ebfffbd5 	bl	400207a4 <CyU3PUsbHandleSetFeature>
4002184c:	eaffff8f 	b	40021690 <CyU3PUsbSetupCommand+0x2a0>
40021850:	e59f036c 	ldr	r0, [pc, #876]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021854:	e5d00007 	ldrb	r0, [r0, #7]
40021858:	e3500000 	cmp	r0, #0
4002185c:	1a00000f 	bne	400218a0 <CyU3PUsbSetupCommand+0x4b0>
40021860:	e59f0380 	ldr	r0, [pc, #896]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021864:	e5900000 	ldr	r0, [r0]
40021868:	e3500000 	cmp	r0, #0
4002186c:	0a00000b 	beq	400218a0 <CyU3PUsbSetupCommand+0x4b0>
40021870:	e1a01005 	mov	r1, r5
40021874:	e1a00004 	mov	r0, r4
40021878:	e59f2368 	ldr	r2, [pc, #872]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
4002187c:	e5922000 	ldr	r2, [r2]
40021880:	e12fff32 	blx	r2
40021884:	e1a07000 	mov	r7, r0
40021888:	e3570000 	cmp	r7, #0
4002188c:	0a000003 	beq	400218a0 <CyU3PUsbSetupCommand+0x4b0>
40021890:	e3a00001 	mov	r0, #1
40021894:	e59f1328 	ldr	r1, [pc, #808]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021898:	e5810040 	str	r0, [r1, #64]	; 0x40
4002189c:	eaffff7b 	b	40021690 <CyU3PUsbSetupCommand+0x2a0>
400218a0:	ea0000bd 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
400218a4:	e3a07000 	mov	r7, #0
400218a8:	e59f0314 	ldr	r0, [pc, #788]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400218ac:	e5d00007 	ldrb	r0, [r0, #7]
400218b0:	e3500000 	cmp	r0, #0
400218b4:	1a00000e 	bne	400218f4 <CyU3PUsbSetupCommand+0x504>
400218b8:	e59f0328 	ldr	r0, [pc, #808]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
400218bc:	e5900000 	ldr	r0, [r0]
400218c0:	e3500000 	cmp	r0, #0
400218c4:	0a00000a 	beq	400218f4 <CyU3PUsbSetupCommand+0x504>
400218c8:	e1a01005 	mov	r1, r5
400218cc:	e1a00004 	mov	r0, r4
400218d0:	e59f2310 	ldr	r2, [pc, #784]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
400218d4:	e5922000 	ldr	r2, [r2]
400218d8:	e12fff32 	blx	r2
400218dc:	e1a07000 	mov	r7, r0
400218e0:	e3570000 	cmp	r7, #0
400218e4:	0a000002 	beq	400218f4 <CyU3PUsbSetupCommand+0x504>
400218e8:	e3a00001 	mov	r0, #1
400218ec:	e59f12d0 	ldr	r1, [pc, #720]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400218f0:	e5810040 	str	r0, [r1, #64]	; 0x40
400218f4:	e3570000 	cmp	r7, #0
400218f8:	1a00000d 	bne	40021934 <CyU3PUsbSetupCommand+0x544>
400218fc:	e59d0008 	ldr	r0, [sp, #8]
40021900:	e3500002 	cmp	r0, #2
40021904:	1a00000a 	bne	40021934 <CyU3PUsbSetupCommand+0x544>
40021908:	e35b0000 	cmp	fp, #0
4002190c:	1a000008 	bne	40021934 <CyU3PUsbSetupCommand+0x544>
40021910:	e59d1004 	ldr	r1, [sp, #4]
40021914:	e20100ff 	and	r0, r1, #255	; 0xff
40021918:	e3a02000 	mov	r2, #0
4002191c:	e3a01001 	mov	r1, #1
40021920:	ebfff0cf 	bl	4001dc64 <CyU3PUsbStall>
40021924:	e3500000 	cmp	r0, #0
40021928:	1a000001 	bne	40021934 <CyU3PUsbSetupCommand+0x544>
4002192c:	ebffeb08 	bl	4001c554 <CyU3PUsbAckSetup>
40021930:	e3a07001 	mov	r7, #1
40021934:	ea000098 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021938:	e1a00000 	nop			; (mov r0, r0)
4002193c:	e1a01005 	mov	r1, r5
40021940:	e1a00004 	mov	r0, r4
40021944:	ebfff5d5 	bl	4001f0a0 <CyU3PUibSendDescr>
40021948:	e1a07000 	mov	r7, r0
4002194c:	ea000092 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021950:	e1a00000 	nop			; (mov r0, r0)
40021954:	e3a07001 	mov	r7, #1
40021958:	e59f128c 	ldr	r1, [pc, #652]	; 40021bec <CyU3PUsbSetupCommand+0x7fc>
4002195c:	e3a00001 	mov	r0, #1
40021960:	ebffee94 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
40021964:	e1a06000 	mov	r6, r0
40021968:	ea00008b 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
4002196c:	e1a00000 	nop			; (mov r0, r0)
40021970:	e3a07001 	mov	r7, #1
40021974:	e35b0000 	cmp	fp, #0
40021978:	0a000005 	beq	40021994 <CyU3PUsbSetupCommand+0x5a4>
4002197c:	e35b0001 	cmp	fp, #1
40021980:	1a00001a 	bne	400219f0 <CyU3PUsbSetupCommand+0x600>
40021984:	e59f1238 	ldr	r1, [pc, #568]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021988:	e5d10009 	ldrb	r0, [r1, #9]
4002198c:	ebfff8b8 	bl	4001fc74 <CyU3PUsbEpPrepare>
40021990:	e1a00000 	nop			; (mov r0, r0)
40021994:	e35b0000 	cmp	fp, #0
40021998:	1a000001 	bne	400219a4 <CyU3PUsbSetupCommand+0x5b4>
4002199c:	e3a00005 	mov	r0, #5
400219a0:	ea000000 	b	400219a8 <CyU3PUsbSetupCommand+0x5b8>
400219a4:	e3a00006 	mov	r0, #6
400219a8:	e59f1214 	ldr	r1, [pc, #532]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
400219ac:	e5c10008 	strb	r0, [r1, #8]
400219b0:	e5c1b00c 	strb	fp, [r1, #12]
400219b4:	e2810000 	add	r0, r1, #0
400219b8:	e5d00006 	ldrb	r0, [r0, #6]
400219bc:	e2000001 	and	r0, r0, #1
400219c0:	e5c10006 	strb	r0, [r1, #6]
400219c4:	e59f0224 	ldr	r0, [pc, #548]	; 40021bf0 <CyU3PUsbSetupCommand+0x800>
400219c8:	e5900000 	ldr	r0, [r0]
400219cc:	e3500000 	cmp	r0, #0
400219d0:	0a000004 	beq	400219e8 <CyU3PUsbSetupCommand+0x5f8>
400219d4:	e1a0100b 	mov	r1, fp
400219d8:	e3a00005 	mov	r0, #5
400219dc:	e59f220c 	ldr	r2, [pc, #524]	; 40021bf0 <CyU3PUsbSetupCommand+0x800>
400219e0:	e5922000 	ldr	r2, [r2]
400219e4:	e12fff32 	blx	r2
400219e8:	ebffead9 	bl	4001c554 <CyU3PUsbAckSetup>
400219ec:	ea000002 	b	400219fc <CyU3PUsbSetupCommand+0x60c>
400219f0:	e1a00000 	nop			; (mov r0, r0)
400219f4:	e3a06040 	mov	r6, #64	; 0x40
400219f8:	e1a00000 	nop			; (mov r0, r0)
400219fc:	e1a00000 	nop			; (mov r0, r0)
40021a00:	ea000065 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021a04:	e1a00000 	nop			; (mov r0, r0)
40021a08:	e59f01d8 	ldr	r0, [pc, #472]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021a0c:	e5900000 	ldr	r0, [r0]
40021a10:	e3500000 	cmp	r0, #0
40021a14:	0a000008 	beq	40021a3c <CyU3PUsbSetupCommand+0x64c>
40021a18:	e1a01005 	mov	r1, r5
40021a1c:	e1a00004 	mov	r0, r4
40021a20:	e59f21c0 	ldr	r2, [pc, #448]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021a24:	e5922000 	ldr	r2, [r2]
40021a28:	e12fff32 	blx	r2
40021a2c:	e1a07000 	mov	r7, r0
40021a30:	e3570000 	cmp	r7, #0
40021a34:	0a000000 	beq	40021a3c <CyU3PUsbSetupCommand+0x64c>
40021a38:	ea000057 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021a3c:	e3a07001 	mov	r7, #1
40021a40:	e59f11ac 	ldr	r1, [pc, #428]	; 40021bf4 <CyU3PUsbSetupCommand+0x804>
40021a44:	e3a00001 	mov	r0, #1
40021a48:	ebffee5a 	bl	4001d3b8 <CyU3PUsbSendEP0Data>
40021a4c:	e1a06000 	mov	r6, r0
40021a50:	ea000051 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021a54:	e1a00000 	nop			; (mov r0, r0)
40021a58:	e59f0188 	ldr	r0, [pc, #392]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021a5c:	e5900000 	ldr	r0, [r0]
40021a60:	e3500000 	cmp	r0, #0
40021a64:	0a000008 	beq	40021a8c <CyU3PUsbSetupCommand+0x69c>
40021a68:	e1a01005 	mov	r1, r5
40021a6c:	e1a00004 	mov	r0, r4
40021a70:	e59f2170 	ldr	r2, [pc, #368]	; 40021be8 <CyU3PUsbSetupCommand+0x7f8>
40021a74:	e5922000 	ldr	r2, [r2]
40021a78:	e12fff32 	blx	r2
40021a7c:	e1a07000 	mov	r7, r0
40021a80:	e3570000 	cmp	r7, #0
40021a84:	0a000000 	beq	40021a8c <CyU3PUsbSetupCommand+0x69c>
40021a88:	ea000043 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021a8c:	e59f1130 	ldr	r1, [pc, #304]	; 40021bc4 <CyU3PUsbSetupCommand+0x7d4>
40021a90:	e5c1b00d 	strb	fp, [r1, #13]
40021a94:	e59f0154 	ldr	r0, [pc, #340]	; 40021bf0 <CyU3PUsbSetupCommand+0x800>
40021a98:	e5900000 	ldr	r0, [r0]
40021a9c:	e3500000 	cmp	r0, #0
40021aa0:	0a000007 	beq	40021ac4 <CyU3PUsbSetupCommand+0x6d4>
40021aa4:	e20b00ff 	and	r0, fp, #255	; 0xff
40021aa8:	e59d2004 	ldr	r2, [sp, #4]
40021aac:	e1800402 	orr	r0, r0, r2, lsl #8
40021ab0:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021ab4:	e3a00007 	mov	r0, #7
40021ab8:	e59f2130 	ldr	r2, [pc, #304]	; 40021bf0 <CyU3PUsbSetupCommand+0x800>
40021abc:	e5922000 	ldr	r2, [r2]
40021ac0:	e12fff32 	blx	r2
40021ac4:	e3a07001 	mov	r7, #1
40021ac8:	ebffeaa1 	bl	4001c554 <CyU3PUsbAckSetup>
40021acc:	ea000032 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021ad0:	e1a00000 	nop			; (mov r0, r0)
40021ad4:	e3a07001 	mov	r7, #1
40021ad8:	ebffea9d 	bl	4001c554 <CyU3PUsbAckSetup>
40021adc:	ea00002e 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021ae0:	e1a00000 	nop			; (mov r0, r0)
40021ae4:	ebffec37 	bl	4001cbc8 <CyU3PUsbGetSpeed>
40021ae8:	e3500003 	cmp	r0, #3
40021aec:	1a000019 	bne	40021b58 <CyU3PUsbSetupCommand+0x768>
40021af0:	e35b0000 	cmp	fp, #0
40021af4:	1a000017 	bne	40021b58 <CyU3PUsbSetupCommand+0x768>
40021af8:	e59d0004 	ldr	r0, [sp, #4]
40021afc:	e3500000 	cmp	r0, #0
40021b00:	1a000014 	bne	40021b58 <CyU3PUsbSetupCommand+0x768>
40021b04:	e59d0000 	ldr	r0, [sp]
40021b08:	e3500006 	cmp	r0, #6
40021b0c:	1a000011 	bne	40021b58 <CyU3PUsbSetupCommand+0x768>
40021b10:	e3a07001 	mov	r7, #1
40021b14:	e3a02000 	mov	r2, #0
40021b18:	e59f10d8 	ldr	r1, [pc, #216]	; 40021bf8 <CyU3PUsbSetupCommand+0x808>
40021b1c:	e3a00020 	mov	r0, #32
40021b20:	ebffebb6 	bl	4001ca00 <CyU3PUsbGetEP0Data>
40021b24:	e1a06000 	mov	r6, r0
40021b28:	e59f00c0 	ldr	r0, [pc, #192]	; 40021bf0 <CyU3PUsbSetupCommand+0x800>
40021b2c:	e5900000 	ldr	r0, [r0]
40021b30:	e3500000 	cmp	r0, #0
40021b34:	0a000008 	beq	40021b5c <CyU3PUsbSetupCommand+0x76c>
40021b38:	e3560000 	cmp	r6, #0
40021b3c:	1a000006 	bne	40021b5c <CyU3PUsbSetupCommand+0x76c>
40021b40:	e3a01000 	mov	r1, #0
40021b44:	e3a00008 	mov	r0, #8
40021b48:	e59f20a0 	ldr	r2, [pc, #160]	; 40021bf0 <CyU3PUsbSetupCommand+0x800>
40021b4c:	e5922000 	ldr	r2, [r2]
40021b50:	e12fff32 	blx	r2
40021b54:	ea000000 	b	40021b5c <CyU3PUsbSetupCommand+0x76c>
40021b58:	e3a07000 	mov	r7, #0
40021b5c:	ea00000e 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021b60:	e1a00000 	nop			; (mov r0, r0)
40021b64:	ebffec17 	bl	4001cbc8 <CyU3PUsbGetSpeed>
40021b68:	e3500003 	cmp	r0, #3
40021b6c:	1a000007 	bne	40021b90 <CyU3PUsbSetupCommand+0x7a0>
40021b70:	e59d0004 	ldr	r0, [sp, #4]
40021b74:	e3500000 	cmp	r0, #0
40021b78:	1a000004 	bne	40021b90 <CyU3PUsbSetupCommand+0x7a0>
40021b7c:	e59d0000 	ldr	r0, [sp]
40021b80:	e3500000 	cmp	r0, #0
40021b84:	1a000001 	bne	40021b90 <CyU3PUsbSetupCommand+0x7a0>
40021b88:	e3a07001 	mov	r7, #1
40021b8c:	ebffea70 	bl	4001c554 <CyU3PUsbAckSetup>
40021b90:	ea000001 	b	40021b9c <CyU3PUsbSetupCommand+0x7ac>
40021b94:	e1a00000 	nop			; (mov r0, r0)
40021b98:	e1a00000 	nop			; (mov r0, r0)
40021b9c:	e1a00000 	nop			; (mov r0, r0)
40021ba0:	e3570001 	cmp	r7, #1
40021ba4:	1a000001 	bne	40021bb0 <CyU3PUsbSetupCommand+0x7c0>
40021ba8:	e3560000 	cmp	r6, #0
40021bac:	0a000003 	beq	40021bc0 <CyU3PUsbSetupCommand+0x7d0>
40021bb0:	e3a02000 	mov	r2, #0
40021bb4:	e3a01001 	mov	r1, #1
40021bb8:	e1a00002 	mov	r0, r2
40021bbc:	ebfff028 	bl	4001dc64 <CyU3PUsbStall>
40021bc0:	eafffeb2 	b	40021690 <CyU3PUsbSetupCommand+0x2a0>
40021bc4:	40031d40 	.word	0x40031d40
40021bc8:	e0033000 	.word	0xe0033000
40021bcc:	40030db0 	.word	0x40030db0
40021bd0:	400326a0 	.word	0x400326a0
40021bd4:	40031eb8 	.word	0x40031eb8
40021bd8:	e0031000 	.word	0xe0031000
40021bdc:	40031b18 	.word	0x40031b18
40021be0:	40031a78 	.word	0x40031a78
40021be4:	0000ffff 	.word	0x0000ffff
40021be8:	40030da0 	.word	0x40030da0
40021bec:	40031d4c 	.word	0x40031d4c
40021bf0:	40030d9c 	.word	0x40030d9c
40021bf4:	40031d4d 	.word	0x40031d4d
40021bf8:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40021bfc <CyU3PUsbSuspendHandler>:
40021bfc:	e92d4010 	push	{r4, lr}
40021c00:	e59f003c 	ldr	r0, [pc, #60]	; 40021c44 <CyU3PUsbSuspendHandler+0x48>
40021c04:	e5d00008 	ldrb	r0, [r0, #8]
40021c08:	e3500005 	cmp	r0, #5
40021c0c:	ba00000b 	blt	40021c40 <CyU3PUsbSuspendHandler+0x44>
40021c10:	e59f0030 	ldr	r0, [pc, #48]	; 40021c48 <CyU3PUsbSuspendHandler+0x4c>
40021c14:	e5900000 	ldr	r0, [r0]
40021c18:	e3500000 	cmp	r0, #0
40021c1c:	0a000004 	beq	40021c34 <CyU3PUsbSuspendHandler+0x38>
40021c20:	e3a01000 	mov	r1, #0
40021c24:	e3a00002 	mov	r0, #2
40021c28:	e59f2018 	ldr	r2, [pc, #24]	; 40021c48 <CyU3PUsbSuspendHandler+0x4c>
40021c2c:	e5922000 	ldr	r2, [r2]
40021c30:	e12fff32 	blx	r2
40021c34:	e3a00005 	mov	r0, #5
40021c38:	e59f1004 	ldr	r1, [pc, #4]	; 40021c44 <CyU3PUsbSuspendHandler+0x48>
40021c3c:	e5c10008 	strb	r0, [r1, #8]
40021c40:	e8bd8010 	pop	{r4, pc}
40021c44:	40031d40 	.word	0x40031d40
40021c48:	40030d9c 	.word	0x40030d9c

Disassembly of section i.HandleVbusOffEvent:

40021c4c <HandleVbusOffEvent>:
40021c4c:	e92d4010 	push	{r4, lr}
40021c50:	e59f00e0 	ldr	r0, [pc, #224]	; 40021d38 <HandleVbusOffEvent+0xec>
40021c54:	e5d00009 	ldrb	r0, [r0, #9]
40021c58:	e3500003 	cmp	r0, #3
40021c5c:	1a000002 	bne	40021c6c <HandleVbusOffEvent+0x20>
40021c60:	e3a00001 	mov	r0, #1
40021c64:	ebffec59 	bl	4001cdd0 <CyU3PUsbPhyDisable>
40021c68:	ea000022 	b	40021cf8 <HandleVbusOffEvent+0xac>
40021c6c:	e59f00c8 	ldr	r0, [pc, #200]	; 40021d3c <HandleVbusOffEvent+0xf0>
40021c70:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021c74:	e3100901 	tst	r0, #16384	; 0x4000
40021c78:	0a00001c 	beq	40021cf0 <HandleVbusOffEvent+0xa4>
40021c7c:	e59f00b8 	ldr	r0, [pc, #184]	; 40021d3c <HandleVbusOffEvent+0xf0>
40021c80:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021c84:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021c88:	e59f10ac 	ldr	r1, [pc, #172]	; 40021d3c <HandleVbusOffEvent+0xf0>
40021c8c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021c90:	e3a00002 	mov	r0, #2
40021c94:	ebffc5fb 	bl	40013488 <CyU3PBusyWait>
40021c98:	e59f00a0 	ldr	r0, [pc, #160]	; 40021d40 <HandleVbusOffEvent+0xf4>
40021c9c:	e5900004 	ldr	r0, [r0, #4]
40021ca0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40021ca4:	e59f1094 	ldr	r1, [pc, #148]	; 40021d40 <HandleVbusOffEvent+0xf4>
40021ca8:	e5810004 	str	r0, [r1, #4]
40021cac:	e3a00001 	mov	r0, #1
40021cb0:	ebffc5f4 	bl	40013488 <CyU3PBusyWait>
40021cb4:	e59f0088 	ldr	r0, [pc, #136]	; 40021d44 <HandleVbusOffEvent+0xf8>
40021cb8:	e590001c 	ldr	r0, [r0, #28]
40021cbc:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021cc0:	e59f107c 	ldr	r1, [pc, #124]	; 40021d44 <HandleVbusOffEvent+0xf8>
40021cc4:	e581001c 	str	r0, [r1, #28]
40021cc8:	e59f0078 	ldr	r0, [pc, #120]	; 40021d48 <HandleVbusOffEvent+0xfc>
40021ccc:	e5900000 	ldr	r0, [r0]
40021cd0:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021cd4:	e3a00001 	mov	r0, #1
40021cd8:	ebffc5ea 	bl	40013488 <CyU3PBusyWait>
40021cdc:	e59f005c 	ldr	r0, [pc, #92]	; 40021d40 <HandleVbusOffEvent+0xf4>
40021ce0:	e5900004 	ldr	r0, [r0, #4]
40021ce4:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40021ce8:	e59f1050 	ldr	r1, [pc, #80]	; 40021d40 <HandleVbusOffEvent+0xf4>
40021cec:	e5810004 	str	r0, [r1, #4]
40021cf0:	e3a00000 	mov	r0, #0
40021cf4:	ebffec35 	bl	4001cdd0 <CyU3PUsbPhyDisable>
40021cf8:	e3a01000 	mov	r1, #0
40021cfc:	e3a00001 	mov	r0, #1
40021d00:	e59f2044 	ldr	r2, [pc, #68]	; 40021d4c <HandleVbusOffEvent+0x100>
40021d04:	e5922000 	ldr	r2, [r2]
40021d08:	e12fff32 	blx	r2
40021d0c:	e3a00000 	mov	r0, #0
40021d10:	e59f1020 	ldr	r1, [pc, #32]	; 40021d38 <HandleVbusOffEvent+0xec>
40021d14:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021d18:	e3a00004 	mov	r0, #4
40021d1c:	e5c10008 	strb	r0, [r1, #8]
40021d20:	e3a00000 	mov	r0, #0
40021d24:	e5c10009 	strb	r0, [r1, #9]
40021d28:	e5810054 	str	r0, [r1, #84]	; 0x54
40021d2c:	e5810058 	str	r0, [r1, #88]	; 0x58
40021d30:	e5810048 	str	r0, [r1, #72]	; 0x48
40021d34:	e8bd8010 	pop	{r4, pc}
40021d38:	40031d40 	.word	0x40031d40
40021d3c:	e0031000 	.word	0xe0031000
40021d40:	e0030000 	.word	0xe0030000
40021d44:	e0033000 	.word	0xe0033000
40021d48:	40030c58 	.word	0x40030c58
40021d4c:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3POsTimerInit:

40021d50 <CyU3POsTimerInit>:
40021d50:	e92d4070 	push	{r4, r5, r6, lr}
40021d54:	e1a04000 	mov	r4, r0
40021d58:	e3a00004 	mov	r0, #4
40021d5c:	eb000047 	bl	40021e80 <CyU3PVicDisableInt>
40021d60:	e59f00f0 	ldr	r0, [pc, #240]	; 40021e58 <CyU3POsTimerInit+0x108>
40021d64:	e5905014 	ldr	r5, [r0, #20]
40021d68:	e3a00064 	mov	r0, #100	; 0x64
40021d6c:	ebffc5c5 	bl	40013488 <CyU3PBusyWait>
40021d70:	e3850c03 	orr	r0, r5, #768	; 0x300
40021d74:	e59f10dc 	ldr	r1, [pc, #220]	; 40021e58 <CyU3POsTimerInit+0x108>
40021d78:	e5810014 	str	r0, [r1, #20]
40021d7c:	e3a00064 	mov	r0, #100	; 0x64
40021d80:	ebffc5c0 	bl	40013488 <CyU3PBusyWait>
40021d84:	e59f00cc 	ldr	r0, [pc, #204]	; 40021e58 <CyU3POsTimerInit+0x108>
40021d88:	e5905014 	ldr	r5, [r0, #20]
40021d8c:	e3540000 	cmp	r4, #0
40021d90:	0a000001 	beq	40021d9c <CyU3POsTimerInit+0x4c>
40021d94:	e3540ffa 	cmp	r4, #1000	; 0x3e8
40021d98:	da000006 	ble	40021db8 <CyU3POsTimerInit+0x68>
40021d9c:	e3a00001 	mov	r0, #1
40021da0:	e59f10b4 	ldr	r1, [pc, #180]	; 40021e5c <CyU3POsTimerInit+0x10c>
40021da4:	e1c100b0 	strh	r0, [r1]
40021da8:	e3a00020 	mov	r0, #32
40021dac:	e59f10ac 	ldr	r1, [pc, #172]	; 40021e60 <CyU3POsTimerInit+0x110>
40021db0:	e5810000 	str	r0, [r1]
40021db4:	ea000004 	b	40021dcc <CyU3POsTimerInit+0x7c>
40021db8:	e59f009c 	ldr	r0, [pc, #156]	; 40021e5c <CyU3POsTimerInit+0x10c>
40021dbc:	e1c040b0 	strh	r4, [r0]
40021dc0:	e1a00284 	lsl	r0, r4, #5
40021dc4:	e59f1094 	ldr	r1, [pc, #148]	; 40021e60 <CyU3POsTimerInit+0x110>
40021dc8:	e5810000 	str	r0, [r1]
40021dcc:	e59f008c 	ldr	r0, [pc, #140]	; 40021e60 <CyU3POsTimerInit+0x110>
40021dd0:	e5900000 	ldr	r0, [r0]
40021dd4:	e2400007 	sub	r0, r0, #7
40021dd8:	e59f1080 	ldr	r1, [pc, #128]	; 40021e60 <CyU3POsTimerInit+0x110>
40021ddc:	e5810000 	str	r0, [r1]
40021de0:	e3a06000 	mov	r6, #0
40021de4:	ea000001 	b	40021df0 <CyU3POsTimerInit+0xa0>
40021de8:	e2860001 	add	r0, r6, #1
40021dec:	e20060ff 	and	r6, r0, #255	; 0xff
40021df0:	e3a00001 	mov	r0, #1
40021df4:	e1a00610 	lsl	r0, r0, r6
40021df8:	e59f1060 	ldr	r1, [pc, #96]	; 40021e60 <CyU3POsTimerInit+0x110>
40021dfc:	e5911000 	ldr	r1, [r1]
40021e00:	e1500001 	cmp	r0, r1
40021e04:	9afffff7 	bls	40021de8 <CyU3POsTimerInit+0x98>
40021e08:	e59f0050 	ldr	r0, [pc, #80]	; 40021e60 <CyU3POsTimerInit+0x110>
40021e0c:	e5900000 	ldr	r0, [r0]
40021e10:	e59f1040 	ldr	r1, [pc, #64]	; 40021e58 <CyU3POsTimerInit+0x108>
40021e14:	e581001c 	str	r0, [r1, #28]
40021e18:	e3a00064 	mov	r0, #100	; 0x64
40021e1c:	ebffc599 	bl	40013488 <CyU3PBusyWait>
40021e20:	e3a00004 	mov	r0, #4
40021e24:	eb00001a 	bl	40021e94 <CyU3PVicEnableInt>
40021e28:	e59f0028 	ldr	r0, [pc, #40]	; 40021e58 <CyU3POsTimerInit+0x108>
40021e2c:	e5900014 	ldr	r0, [r0, #20]
40021e30:	e3c05c03 	bic	r5, r0, #768	; 0x300
40021e34:	e3a00b01 	mov	r0, #1024	; 0x400
40021e38:	e1800586 	orr	r0, r0, r6, lsl #11
40021e3c:	e1855000 	orr	r5, r5, r0
40021e40:	e3855c01 	orr	r5, r5, #256	; 0x100
40021e44:	e3a00064 	mov	r0, #100	; 0x64
40021e48:	ebffc58e 	bl	40013488 <CyU3PBusyWait>
40021e4c:	e59f0004 	ldr	r0, [pc, #4]	; 40021e58 <CyU3POsTimerInit+0x108>
40021e50:	e5805014 	str	r5, [r0, #20]
40021e54:	e8bd8070 	pop	{r4, r5, r6, pc}
40021e58:	e0050000 	.word	0xe0050000
40021e5c:	40030db8 	.word	0x40030db8
40021e60:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PVicClearInt:

40021e64 <CyU3PVicClearInt>:
40021e64:	e3a00000 	mov	r0, #0
40021e68:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40021e6c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

40021e70 <CyU3PVicDisableAllInterrupts>:
40021e70:	e3a01000 	mov	r1, #0
40021e74:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
40021e78:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021e7c:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

40021e80 <CyU3PVicDisableInt>:
40021e80:	e3a01001 	mov	r1, #1
40021e84:	e1a01011 	lsl	r1, r1, r0
40021e88:	e3a02000 	mov	r2, #0
40021e8c:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
40021e90:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

40021e94 <CyU3PVicEnableInt>:
40021e94:	e3a01001 	mov	r1, #1
40021e98:	e1a01011 	lsl	r1, r1, r0
40021e9c:	e3a02000 	mov	r2, #0
40021ea0:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
40021ea4:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

40021ea8 <CyU3PVicEnableInterrupts>:
40021ea8:	e3a01000 	mov	r1, #0
40021eac:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
40021eb0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

40021eb8 <CyU3PVicInit>:
40021eb8:	e92d4010 	push	{r4, lr}
40021ebc:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
40021ec0:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
40021ec4:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
40021ec8:	e3e00000 	mvn	r0, #0
40021ecc:	e3a01000 	mov	r1, #0
40021ed0:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
40021ed4:	e3a00000 	mov	r0, #0
40021ed8:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40021edc:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40021ee0:	ebffffdf 	bl	40021e64 <CyU3PVicClearInt>
40021ee4:	eb000001 	bl	40021ef0 <__CyU3PVicSetupIntVectors_veneer>
40021ee8:	e8bd8010 	pop	{r4, pc}
40021eec:	00000000 	andeq	r0, r0, r0

40021ef0 <__CyU3PVicSetupIntVectors_veneer>:
40021ef0:	e51ff004 	ldr	pc, [pc, #-4]	; 40021ef4 <__CyU3PVicSetupIntVectors_veneer+0x4>
40021ef4:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40021ef8 <CyFx3Usb2PhySetup>:
40021ef8:	e59f0008 	ldr	r0, [pc, #8]	; 40021f08 <CyFx3Usb2PhySetup+0x10>
40021efc:	e59f1008 	ldr	r1, [pc, #8]	; 40021f0c <CyFx3Usb2PhySetup+0x14>
40021f00:	e581000c 	str	r0, [r1, #12]
40021f04:	e12fff1e 	bx	lr
40021f08:	00d4a480 	.word	0x00d4a480
40021f0c:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40021f10 <CyFx3Usb3LnkRelaxHpTimeout>:
40021f10:	e59f0008 	ldr	r0, [pc, #8]	; 40021f20 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
40021f14:	e59f1008 	ldr	r1, [pc, #8]	; 40021f24 <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40021f18:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40021f1c:	e12fff1e 	bx	lr
40021f20:	000009c4 	.word	0x000009c4
40021f24:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40021f28 <CyFx3Usb3LnkSetup>:
40021f28:	e59f1024 	ldr	r1, [pc, #36]	; 40021f54 <CyFx3Usb3LnkSetup+0x2c>
40021f2c:	e59f0024 	ldr	r0, [pc, #36]	; 40021f58 <CyFx3Usb3LnkSetup+0x30>
40021f30:	e580109c 	str	r1, [r0, #156]	; 0x9c
40021f34:	e5801080 	str	r1, [r0, #128]	; 0x80
40021f38:	e59f101c 	ldr	r1, [pc, #28]	; 40021f5c <CyFx3Usb3LnkSetup+0x34>
40021f3c:	e5801084 	str	r1, [r0, #132]	; 0x84
40021f40:	e59f1018 	ldr	r1, [pc, #24]	; 40021f60 <CyFx3Usb3LnkSetup+0x38>
40021f44:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40021f48:	e3a0107d 	mov	r1, #125	; 0x7d
40021f4c:	e5801078 	str	r1, [r0, #120]	; 0x78
40021f50:	e12fff1e 	bx	lr
40021f54:	00002710 	.word	0x00002710
40021f58:	e0033000 	.word	0xe0033000
40021f5c:	00fa004b 	.word	0x00fa004b
40021f60:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

40021f64 <CyFx3Usb3SendTP>:
40021f64:	e5902000 	ldr	r2, [r0]
40021f68:	e59f1020 	ldr	r1, [pc, #32]	; 40021f90 <CyFx3Usb3SendTP+0x2c>
40021f6c:	e5812450 	str	r2, [r1, #1104]	; 0x450
40021f70:	e5902004 	ldr	r2, [r0, #4]
40021f74:	e5812454 	str	r2, [r1, #1108]	; 0x454
40021f78:	e5900008 	ldr	r0, [r0, #8]
40021f7c:	e5810458 	str	r0, [r1, #1112]	; 0x458
40021f80:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
40021f84:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021f88:	e5810460 	str	r0, [r1, #1120]	; 0x460
40021f8c:	e12fff1e 	bx	lr
40021f90:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

40021f94 <CyFx3UsbDmaPrefetchEnable>:
40021f94:	e3500000 	cmp	r0, #0
40021f98:	e59f001c 	ldr	r0, [pc, #28]	; 40021fbc <CyFx3UsbDmaPrefetchEnable+0x28>
40021f9c:	e3a01206 	mov	r1, #1610612736	; 0x60000000
40021fa0:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
40021fa4:	12811a09 	addne	r1, r1, #36864	; 0x9000
40021fa8:	e3c22903 	bic	r2, r2, #49152	; 0xc000
40021fac:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
40021fb0:	e1811002 	orr	r1, r1, r2
40021fb4:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
40021fb8:	e12fff1e 	bx	lr
40021fbc:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

40021fc0 <CyFx3UsbPowerOn>:
40021fc0:	e92d4010 	push	{r4, lr}
40021fc4:	e59f406c 	ldr	r4, [pc, #108]	; 40022038 <CyFx3UsbPowerOn+0x78>
40021fc8:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021fcc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40021fd0:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021fd4:	e3a0000a 	mov	r0, #10
40021fd8:	ebffca77 	bl	400149bc <CyFx3BusyWait>
40021fdc:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021fe0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40021fe4:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40021fe8:	e3a00064 	mov	r0, #100	; 0x64
40021fec:	ebffca72 	bl	400149bc <CyFx3BusyWait>
40021ff0:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40021ff4:	e3100001 	tst	r0, #1
40021ff8:	0afffffc 	beq	40021ff0 <CyFx3UsbPowerOn+0x30>
40021ffc:	ebffca64 	bl	40014994 <CyFx3DevIsUsb3Supported>
40022000:	e59f4034 	ldr	r4, [pc, #52]	; 4002203c <CyFx3UsbPowerOn+0x7c>
40022004:	e3500000 	cmp	r0, #0
40022008:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
4002200c:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40022010:	03a0000a 	moveq	r0, #10
40022014:	0bffca68 	bleq	400149bc <CyFx3BusyWait>
40022018:	ebffca3f 	bl	4001491c <CyFx3DevIsOtgSupported>
4002201c:	e3500000 	cmp	r0, #0
40022020:	18bd8010 	popne	{r4, pc}
40022024:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40022028:	e584080c 	str	r0, [r4, #2060]	; 0x80c
4002202c:	e8bd4010 	pop	{r4, lr}
40022030:	e3a0000a 	mov	r0, #10
40022034:	eaffca60 	b	400149bc <CyFx3BusyWait>
40022038:	e0037000 	.word	0xe0037000
4002203c:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40022040 <CyFx3UsbWritePhyReg>:
40022040:	e59f2084 	ldr	r2, [pc, #132]	; 400220cc <CyFx3UsbWritePhyReg+0x8c>
40022044:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40022048:	e3120901 	tst	r2, #16384	; 0x4000
4002204c:	012fff1e 	bxeq	lr
40022050:	e59f2078 	ldr	r2, [pc, #120]	; 400220d0 <CyFx3UsbWritePhyReg+0x90>
40022054:	e5820024 	str	r0, [r2, #36]	; 0x24
40022058:	e3803801 	orr	r3, r0, #65536	; 0x10000
4002205c:	e5823024 	str	r3, [r2, #36]	; 0x24
40022060:	e5923028 	ldr	r3, [r2, #40]	; 0x28
40022064:	e3130801 	tst	r3, #65536	; 0x10000
40022068:	0afffffc 	beq	40022060 <CyFx3UsbWritePhyReg+0x20>
4002206c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022070:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40022074:	e3100801 	tst	r0, #65536	; 0x10000
40022078:	1afffffc 	bne	40022070 <CyFx3UsbWritePhyReg+0x30>
4002207c:	e5821024 	str	r1, [r2, #36]	; 0x24
40022080:	e3810802 	orr	r0, r1, #131072	; 0x20000
40022084:	e5820024 	str	r0, [r2, #36]	; 0x24
40022088:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002208c:	e3100801 	tst	r0, #65536	; 0x10000
40022090:	0afffffc 	beq	40022088 <CyFx3UsbWritePhyReg+0x48>
40022094:	e5821024 	str	r1, [r2, #36]	; 0x24
40022098:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002209c:	e3100801 	tst	r0, #65536	; 0x10000
400220a0:	1afffffc 	bne	40022098 <CyFx3UsbWritePhyReg+0x58>
400220a4:	e3810702 	orr	r0, r1, #524288	; 0x80000
400220a8:	e5820024 	str	r0, [r2, #36]	; 0x24
400220ac:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400220b0:	e3100801 	tst	r0, #65536	; 0x10000
400220b4:	0afffffc 	beq	400220ac <CyFx3UsbWritePhyReg+0x6c>
400220b8:	e5821024 	str	r1, [r2, #36]	; 0x24
400220bc:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400220c0:	e3100801 	tst	r0, #65536	; 0x10000
400220c4:	1afffffc 	bne	400220bc <CyFx3UsbWritePhyReg+0x7c>
400220c8:	e12fff1e 	bx	lr
400220cc:	e0031000 	.word	0xe0031000
400220d0:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

400220d4 <CyU3PDmaDscrChainCreate>:
400220d4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400220d8:	e24dd018 	sub	sp, sp, #24
400220dc:	e1a04000 	mov	r4, r0
400220e0:	e1a05001 	mov	r5, r1
400220e4:	e1a06002 	mov	r6, r2
400220e8:	e1a07003 	mov	r7, r3
400220ec:	e3a0a000 	mov	sl, #0
400220f0:	eb0000a6 	bl	40022390 <CyU3PDmaDscrGetFreeCount>
400220f4:	e1500005 	cmp	r0, r5
400220f8:	aa000002 	bge	40022108 <CyU3PDmaDscrChainCreate+0x34>
400220fc:	e3a00010 	mov	r0, #16
40022100:	e28dd018 	add	sp, sp, #24
40022104:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40022108:	e3540000 	cmp	r4, #0
4002210c:	1a000001 	bne	40022118 <CyU3PDmaDscrChainCreate+0x44>
40022110:	e3a00040 	mov	r0, #64	; 0x40
40022114:	eafffff9 	b	40022100 <CyU3PDmaDscrChainCreate+0x2c>
40022118:	e3550000 	cmp	r5, #0
4002211c:	1a000001 	bne	40022128 <CyU3PDmaDscrChainCreate+0x54>
40022120:	e3a00040 	mov	r0, #64	; 0x40
40022124:	eafffff5 	b	40022100 <CyU3PDmaDscrChainCreate+0x2c>
40022128:	e1a09005 	mov	r9, r5
4002212c:	e1a00004 	mov	r0, r4
40022130:	eb00005e 	bl	400222b0 <CyU3PDmaDscrGet>
40022134:	e1d480b0 	ldrh	r8, [r4]
40022138:	ea000029 	b	400221e4 <CyU3PDmaDscrChainCreate+0x110>
4002213c:	e3590000 	cmp	r9, #0
40022140:	0a000002 	beq	40022150 <CyU3PDmaDscrChainCreate+0x7c>
40022144:	e28d0014 	add	r0, sp, #20
40022148:	eb000058 	bl	400222b0 <CyU3PDmaDscrGet>
4002214c:	ea000001 	b	40022158 <CyU3PDmaDscrChainCreate+0x84>
40022150:	e1d400b0 	ldrh	r0, [r4]
40022154:	e58d0014 	str	r0, [sp, #20]
40022158:	e3560000 	cmp	r6, #0
4002215c:	0a000015 	beq	400221b8 <CyU3PDmaDscrChainCreate+0xe4>
40022160:	e35a0000 	cmp	sl, #0
40022164:	1a000013 	bne	400221b8 <CyU3PDmaDscrChainCreate+0xe4>
40022168:	e1a00006 	mov	r0, r6
4002216c:	ebff86fd 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022170:	e58d0004 	str	r0, [sp, #4]
40022174:	e59f00a0 	ldr	r0, [pc, #160]	; 4002221c <CyU3PDmaDscrChainCreate+0x148>
40022178:	e0000006 	and	r0, r0, r6
4002217c:	e58d0010 	str	r0, [sp, #16]
40022180:	e59d0004 	ldr	r0, [sp, #4]
40022184:	e3500000 	cmp	r0, #0
40022188:	1a000000 	bne	40022190 <CyU3PDmaDscrChainCreate+0xbc>
4002218c:	e3a0a010 	mov	sl, #16
40022190:	e59d0004 	ldr	r0, [sp, #4]
40022194:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40022198:	3a000004 	bcc	400221b0 <CyU3PDmaDscrChainCreate+0xdc>
4002219c:	e59d0004 	ldr	r0, [sp, #4]
400221a0:	e0800006 	add	r0, r0, r6
400221a4:	e59f1074 	ldr	r1, [pc, #116]	; 40022220 <CyU3PDmaDscrChainCreate+0x14c>
400221a8:	e1500001 	cmp	r0, r1
400221ac:	3a000004 	bcc	400221c4 <CyU3PDmaDscrChainCreate+0xf0>
400221b0:	e3a0a010 	mov	sl, #16
400221b4:	ea000002 	b	400221c4 <CyU3PDmaDscrChainCreate+0xf0>
400221b8:	e3a00000 	mov	r0, #0
400221bc:	e58d0004 	str	r0, [sp, #4]
400221c0:	e58d0010 	str	r0, [sp, #16]
400221c4:	e58d7008 	str	r7, [sp, #8]
400221c8:	e1dd01b4 	ldrh	r0, [sp, #20]
400221cc:	e1800800 	orr	r0, r0, r0, lsl #16
400221d0:	e58d000c 	str	r0, [sp, #12]
400221d4:	e28d1004 	add	r1, sp, #4
400221d8:	e1a00008 	mov	r0, r8
400221dc:	eb0000c6 	bl	400224fc <CyU3PDmaDscrSetConfig>
400221e0:	e1dd81b4 	ldrh	r8, [sp, #20]
400221e4:	e1b00009 	movs	r0, r9
400221e8:	e2491001 	sub	r1, r9, #1
400221ec:	e1a09801 	lsl	r9, r1, #16
400221f0:	e1a09829 	lsr	r9, r9, #16
400221f4:	1affffd0 	bne	4002213c <CyU3PDmaDscrChainCreate+0x68>
400221f8:	e35a0000 	cmp	sl, #0
400221fc:	0a000004 	beq	40022214 <CyU3PDmaDscrChainCreate+0x140>
40022200:	e1d400b0 	ldrh	r0, [r4]
40022204:	e3a03001 	mov	r3, #1
40022208:	e1a02003 	mov	r2, r3
4002220c:	e1a01005 	mov	r1, r5
40022210:	eb000003 	bl	40022224 <CyU3PDmaDscrChainDestroy>
40022214:	e1a0000a 	mov	r0, sl
40022218:	eaffffb8 	b	40022100 <CyU3PDmaDscrChainCreate+0x2c>
4002221c:	0000fff0 	.word	0x0000fff0
40022220:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

40022224 <CyU3PDmaDscrChainDestroy>:
40022224:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40022228:	e1a04000 	mov	r4, r0
4002222c:	e1a05001 	mov	r5, r1
40022230:	e1a06002 	mov	r6, r2
40022234:	e1a07003 	mov	r7, r3
40022238:	ea000015 	b	40022294 <CyU3PDmaDscrChainDestroy+0x70>
4002223c:	e1a0100d 	mov	r1, sp
40022240:	e1a00004 	mov	r0, r4
40022244:	eb000091 	bl	40022490 <CyU3PDmaDscrGetConfig>
40022248:	e3570000 	cmp	r7, #0
4002224c:	0a000004 	beq	40022264 <CyU3PDmaDscrChainDestroy+0x40>
40022250:	e59d0000 	ldr	r0, [sp]
40022254:	e3500000 	cmp	r0, #0
40022258:	0a000001 	beq	40022264 <CyU3PDmaDscrChainDestroy+0x40>
4002225c:	e59d0000 	ldr	r0, [sp]
40022260:	ebff8723 	bl	40003ef4 <CyU3PDmaBufferFree>
40022264:	e3560000 	cmp	r6, #0
40022268:	0a000003 	beq	4002227c <CyU3PDmaDscrChainDestroy+0x58>
4002226c:	e59d0008 	ldr	r0, [sp, #8]
40022270:	e59f1034 	ldr	r1, [pc, #52]	; 400222ac <CyU3PDmaDscrChainDestroy+0x88>
40022274:	e0018820 	and	r8, r1, r0, lsr #16
40022278:	ea000002 	b	40022288 <CyU3PDmaDscrChainDestroy+0x64>
4002227c:	e59d0008 	ldr	r0, [sp, #8]
40022280:	e1a08800 	lsl	r8, r0, #16
40022284:	e1a08828 	lsr	r8, r8, #16
40022288:	e1a00004 	mov	r0, r4
4002228c:	eb000058 	bl	400223f4 <CyU3PDmaDscrPut>
40022290:	e1a04008 	mov	r4, r8
40022294:	e1b00005 	movs	r0, r5
40022298:	e2451001 	sub	r1, r5, #1
4002229c:	e1a05801 	lsl	r5, r1, #16
400222a0:	e1a05825 	lsr	r5, r5, #16
400222a4:	1affffe4 	bne	4002223c <CyU3PDmaDscrChainDestroy+0x18>
400222a8:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400222ac:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

400222b0 <CyU3PDmaDscrGet>:
400222b0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400222b4:	e1a04000 	mov	r4, r0
400222b8:	e3a08000 	mov	r8, #0
400222bc:	e3540000 	cmp	r4, #0
400222c0:	1a000001 	bne	400222cc <CyU3PDmaDscrGet+0x1c>
400222c4:	e3a00040 	mov	r0, #64	; 0x40
400222c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400222cc:	e3e01000 	mvn	r1, #0
400222d0:	e59f00ac 	ldr	r0, [pc, #172]	; 40022384 <CyU3PDmaDscrGet+0xd4>
400222d4:	ebff9f4a 	bl	4000a004 <_txe_mutex_get>
400222d8:	e59f00a8 	ldr	r0, [pc, #168]	; 40022388 <CyU3PDmaDscrGet+0xd8>
400222dc:	e1d000b0 	ldrh	r0, [r0]
400222e0:	e3500000 	cmp	r0, #0
400222e4:	0a000022 	beq	40022374 <CyU3PDmaDscrGet+0xc4>
400222e8:	e3a06000 	mov	r6, #0
400222ec:	ea00001e 	b	4002236c <CyU3PDmaDscrGet+0xbc>
400222f0:	e59f0094 	ldr	r0, [pc, #148]	; 4002238c <CyU3PDmaDscrGet+0xdc>
400222f4:	e7905106 	ldr	r5, [r0, r6, lsl #2]
400222f8:	e3750001 	cmn	r5, #1
400222fc:	0a000017 	beq	40022360 <CyU3PDmaDscrGet+0xb0>
40022300:	e3a07001 	mov	r7, #1
40022304:	ea000012 	b	40022354 <CyU3PDmaDscrGet+0xa4>
40022308:	e1150007 	tst	r5, r7
4002230c:	1a00000d 	bne	40022348 <CyU3PDmaDscrGet+0x98>
40022310:	e1850007 	orr	r0, r5, r7
40022314:	e59f1070 	ldr	r1, [pc, #112]	; 4002238c <CyU3PDmaDscrGet+0xdc>
40022318:	e7810106 	str	r0, [r1, r6, lsl #2]
4002231c:	e2410004 	sub	r0, r1, #4
40022320:	e1c080b2 	strh	r8, [r0, #2]
40022324:	e1d000b0 	ldrh	r0, [r0]
40022328:	e2400001 	sub	r0, r0, #1
4002232c:	e2411004 	sub	r1, r1, #4
40022330:	e1c100b0 	strh	r0, [r1]
40022334:	e1c480b0 	strh	r8, [r4]
40022338:	e2810044 	add	r0, r1, #68	; 0x44
4002233c:	ebff9f65 	bl	4000a0d8 <_txe_mutex_put>
40022340:	e3a00000 	mov	r0, #0
40022344:	eaffffdf 	b	400222c8 <CyU3PDmaDscrGet+0x18>
40022348:	e1a07087 	lsl	r7, r7, #1
4002234c:	e2880001 	add	r0, r8, #1
40022350:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022354:	e3570000 	cmp	r7, #0
40022358:	1affffea 	bne	40022308 <CyU3PDmaDscrGet+0x58>
4002235c:	ea000001 	b	40022368 <CyU3PDmaDscrGet+0xb8>
40022360:	e2880020 	add	r0, r8, #32
40022364:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022368:	e2866001 	add	r6, r6, #1
4002236c:	e3560010 	cmp	r6, #16
40022370:	3affffde 	bcc	400222f0 <CyU3PDmaDscrGet+0x40>
40022374:	e59f0008 	ldr	r0, [pc, #8]	; 40022384 <CyU3PDmaDscrGet+0xd4>
40022378:	ebff9f56 	bl	4000a0d8 <_txe_mutex_put>
4002237c:	e3a0004a 	mov	r0, #74	; 0x4a
40022380:	eaffffd0 	b	400222c8 <CyU3PDmaDscrGet+0x18>
40022384:	4003273c 	.word	0x4003273c
40022388:	400326f8 	.word	0x400326f8
4002238c:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

40022390 <CyU3PDmaDscrGetFreeCount>:
40022390:	e59f0004 	ldr	r0, [pc, #4]	; 4002239c <CyU3PDmaDscrGetFreeCount+0xc>
40022394:	e1d000b0 	ldrh	r0, [r0]
40022398:	e12fff1e 	bx	lr
4002239c:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

400223a0 <CyU3PDmaDscrListCreate>:
400223a0:	e92d4010 	push	{r4, lr}
400223a4:	e3a02040 	mov	r2, #64	; 0x40
400223a8:	e3a01000 	mov	r1, #0
400223ac:	e59f0034 	ldr	r0, [pc, #52]	; 400223e8 <CyU3PDmaDscrListCreate+0x48>
400223b0:	ebff84c0 	bl	400036b8 <CyU3PMemSet>
400223b4:	e3a00001 	mov	r0, #1
400223b8:	e59f102c 	ldr	r1, [pc, #44]	; 400223ec <CyU3PDmaDscrListCreate+0x4c>
400223bc:	e5810004 	str	r0, [r1, #4]
400223c0:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
400223c4:	e1c100b0 	strh	r0, [r1]
400223c8:	e3a00001 	mov	r0, #1
400223cc:	e1c100b2 	strh	r0, [r1, #2]
400223d0:	e3a03038 	mov	r3, #56	; 0x38
400223d4:	e3a02000 	mov	r2, #0
400223d8:	e1a01002 	mov	r1, r2
400223dc:	e59f000c 	ldr	r0, [pc, #12]	; 400223f0 <CyU3PDmaDscrListCreate+0x50>
400223e0:	ebff9e89 	bl	40009e0c <_txe_mutex_create>
400223e4:	e8bd8010 	pop	{r4, pc}
400223e8:	400326fc 	.word	0x400326fc
400223ec:	400326f8 	.word	0x400326f8
400223f0:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

400223f4 <CyU3PDmaDscrPut>:
400223f4:	e92d4070 	push	{r4, r5, r6, lr}
400223f8:	e1a04000 	mov	r4, r0
400223fc:	e3540c02 	cmp	r4, #512	; 0x200
40022400:	aa000001 	bge	4002240c <CyU3PDmaDscrPut+0x18>
40022404:	e3540000 	cmp	r4, #0
40022408:	1a000001 	bne	40022414 <CyU3PDmaDscrPut+0x20>
4002240c:	e3a00040 	mov	r0, #64	; 0x40
40022410:	e8bd8070 	pop	{r4, r5, r6, pc}
40022414:	e3e01000 	mvn	r1, #0
40022418:	e59f0064 	ldr	r0, [pc, #100]	; 40022484 <CyU3PDmaDscrPut+0x90>
4002241c:	ebff9ef8 	bl	4000a004 <_txe_mutex_get>
40022420:	e1a00004 	mov	r0, r4
40022424:	e1a01fc4 	asr	r1, r4, #31
40022428:	e0841da1 	add	r1, r4, r1, lsr #27
4002242c:	e1a062c1 	asr	r6, r1, #5
40022430:	e59f0050 	ldr	r0, [pc, #80]	; 40022488 <CyU3PDmaDscrPut+0x94>
40022434:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022438:	e1a00004 	mov	r0, r4
4002243c:	e1a01fc4 	asr	r1, r4, #31
40022440:	e0841da1 	add	r1, r4, r1, lsr #27
40022444:	e1a012c1 	asr	r1, r1, #5
40022448:	e0441281 	sub	r1, r4, r1, lsl #5
4002244c:	e3a02001 	mov	r2, #1
40022450:	e1c55112 	bic	r5, r5, r2, lsl r1
40022454:	e59f002c 	ldr	r0, [pc, #44]	; 40022488 <CyU3PDmaDscrPut+0x94>
40022458:	e7805106 	str	r5, [r0, r6, lsl #2]
4002245c:	e2400004 	sub	r0, r0, #4
40022460:	e1d000b0 	ldrh	r0, [r0]
40022464:	e2800001 	add	r0, r0, #1
40022468:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4002246c:	e59f1018 	ldr	r1, [pc, #24]	; 4002248c <CyU3PDmaDscrPut+0x98>
40022470:	e1c100b0 	strh	r0, [r1]
40022474:	e2810044 	add	r0, r1, #68	; 0x44
40022478:	ebff9f16 	bl	4000a0d8 <_txe_mutex_put>
4002247c:	e3a00000 	mov	r0, #0
40022480:	eaffffe2 	b	40022410 <CyU3PDmaDscrPut+0x1c>
40022484:	4003273c 	.word	0x4003273c
40022488:	400326fc 	.word	0x400326fc
4002248c:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

40022490 <CyU3PDmaDscrGetConfig>:
40022490:	e92d4070 	push	{r4, r5, r6, lr}
40022494:	e1a05000 	mov	r5, r0
40022498:	e1a04001 	mov	r4, r1
4002249c:	e3550c02 	cmp	r5, #512	; 0x200
400224a0:	aa000001 	bge	400224ac <CyU3PDmaDscrGetConfig+0x1c>
400224a4:	e3550000 	cmp	r5, #0
400224a8:	1a000001 	bne	400224b4 <CyU3PDmaDscrGetConfig+0x24>
400224ac:	e3a00040 	mov	r0, #64	; 0x40
400224b0:	e8bd8070 	pop	{r4, r5, r6, pc}
400224b4:	e3540000 	cmp	r4, #0
400224b8:	1a000001 	bne	400224c4 <CyU3PDmaDscrGetConfig+0x34>
400224bc:	e3a00040 	mov	r0, #64	; 0x40
400224c0:	eafffffa 	b	400224b0 <CyU3PDmaDscrGetConfig+0x20>
400224c4:	e59f102c 	ldr	r1, [pc, #44]	; 400224f8 <CyU3PDmaDscrGetConfig+0x68>
400224c8:	e5911000 	ldr	r1, [r1]
400224cc:	e0810205 	add	r0, r1, r5, lsl #4
400224d0:	e3a01010 	mov	r1, #16
400224d4:	ebffbea4 	bl	40011f6c <CyU3PSysClearDRegion>
400224d8:	ebffc118 	bl	40012940 <CyU3PSysBarrierSync>
400224dc:	e59f0014 	ldr	r0, [pc, #20]	; 400224f8 <CyU3PDmaDscrGetConfig+0x68>
400224e0:	e5900000 	ldr	r0, [r0]
400224e4:	e0800205 	add	r0, r0, r5, lsl #4
400224e8:	e890004e 	ldm	r0, {r1, r2, r3, r6}
400224ec:	e884004e 	stm	r4, {r1, r2, r3, r6}
400224f0:	e3a00000 	mov	r0, #0
400224f4:	eaffffed 	b	400224b0 <CyU3PDmaDscrGetConfig+0x20>
400224f8:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaDscrSetConfig:

400224fc <CyU3PDmaDscrSetConfig>:
400224fc:	e92d4070 	push	{r4, r5, r6, lr}
40022500:	e1a04000 	mov	r4, r0
40022504:	e1a05001 	mov	r5, r1
40022508:	e3540c02 	cmp	r4, #512	; 0x200
4002250c:	aa000001 	bge	40022518 <CyU3PDmaDscrSetConfig+0x1c>
40022510:	e3540000 	cmp	r4, #0
40022514:	1a000001 	bne	40022520 <CyU3PDmaDscrSetConfig+0x24>
40022518:	e3a00040 	mov	r0, #64	; 0x40
4002251c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022520:	e3550000 	cmp	r5, #0
40022524:	1a000001 	bne	40022530 <CyU3PDmaDscrSetConfig+0x34>
40022528:	e3a00040 	mov	r0, #64	; 0x40
4002252c:	eafffffa 	b	4002251c <CyU3PDmaDscrSetConfig+0x20>
40022530:	e59f002c 	ldr	r0, [pc, #44]	; 40022564 <CyU3PDmaDscrSetConfig+0x68>
40022534:	e5900000 	ldr	r0, [r0]
40022538:	e0800204 	add	r0, r0, r4, lsl #4
4002253c:	e895004e 	ldm	r5, {r1, r2, r3, r6}
40022540:	e880004e 	stm	r0, {r1, r2, r3, r6}
40022544:	e59f1018 	ldr	r1, [pc, #24]	; 40022564 <CyU3PDmaDscrSetConfig+0x68>
40022548:	e5911000 	ldr	r1, [r1]
4002254c:	e0810204 	add	r0, r1, r4, lsl #4
40022550:	e3a01010 	mov	r1, #16
40022554:	ebffbe84 	bl	40011f6c <CyU3PSysClearDRegion>
40022558:	ebffc0f8 	bl	40012940 <CyU3PSysBarrierSync>
4002255c:	e3a00000 	mov	r0, #0
40022560:	eaffffed 	b	4002251c <CyU3PDmaDscrSetConfig+0x20>
40022564:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaIntHandler:

40022568 <CyU3PDmaIntHandler>:
40022568:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4002256c:	e1a04000 	mov	r4, r0
40022570:	e1a05001 	mov	r5, r1
40022574:	e204003f 	and	r0, r4, #63	; 0x3f
40022578:	e1857400 	orr	r7, r5, r0, lsl #8
4002257c:	e59f0150 	ldr	r0, [pc, #336]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
40022580:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022584:	e0800385 	add	r0, r0, r5, lsl #7
40022588:	e5900010 	ldr	r0, [r0, #16]
4002258c:	e59f1140 	ldr	r1, [pc, #320]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
40022590:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022594:	e0811385 	add	r1, r1, r5, lsl #7
40022598:	e5911014 	ldr	r1, [r1, #20]
4002259c:	e0009001 	and	r9, r0, r1
400225a0:	e59f0130 	ldr	r0, [pc, #304]	; 400226d8 <CyU3PDmaIntHandler+0x170>
400225a4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225a8:	e7906105 	ldr	r6, [r0, r5, lsl #2]
400225ac:	e3560000 	cmp	r6, #0
400225b0:	0a000038 	beq	40022698 <CyU3PDmaIntHandler+0x130>
400225b4:	e1a00000 	nop			; (mov r0, r0)
400225b8:	e59f0114 	ldr	r0, [pc, #276]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
400225bc:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225c0:	e0800385 	add	r0, r0, r5, lsl #7
400225c4:	e5900010 	ldr	r0, [r0, #16]
400225c8:	e59f1104 	ldr	r1, [pc, #260]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
400225cc:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400225d0:	e0811385 	add	r1, r1, r5, lsl #7
400225d4:	e5911014 	ldr	r1, [r1, #20]
400225d8:	e0000001 	and	r0, r0, r1
400225dc:	e1899000 	orr	r9, r9, r0
400225e0:	e2098e12 	and	r8, r9, #288	; 0x120
400225e4:	e59f00e8 	ldr	r0, [pc, #232]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
400225e8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400225ec:	e0800385 	add	r0, r0, r5, lsl #7
400225f0:	e5900014 	ldr	r0, [r0, #20]
400225f4:	e1c00008 	bic	r0, r0, r8
400225f8:	e59f10d4 	ldr	r1, [pc, #212]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
400225fc:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022600:	e0811385 	add	r1, r1, r5, lsl #7
40022604:	e5810014 	str	r0, [r1, #20]
40022608:	e1c90008 	bic	r0, r9, r8
4002260c:	e59f10c0 	ldr	r1, [pc, #192]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
40022610:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022614:	e0811385 	add	r1, r1, r5, lsl #7
40022618:	e5810010 	str	r0, [r1, #16]
4002261c:	e59f00b0 	ldr	r0, [pc, #176]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
40022620:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022624:	e7900385 	ldr	r0, [r0, r5, lsl #7]
40022628:	e1a00800 	lsl	r0, r0, #16
4002262c:	e1a00820 	lsr	r0, r0, #16
40022630:	e58d000c 	str	r0, [sp, #12]
40022634:	e59f0098 	ldr	r0, [pc, #152]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
40022638:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4002263c:	e0800385 	add	r0, r0, r5, lsl #7
40022640:	e5900010 	ldr	r0, [r0, #16]
40022644:	e59f1088 	ldr	r1, [pc, #136]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
40022648:	e7911104 	ldr	r1, [r1, r4, lsl #2]
4002264c:	e0811385 	add	r1, r1, r5, lsl #7
40022650:	e5911014 	ldr	r1, [r1, #20]
40022654:	e0008001 	and	r8, r0, r1
40022658:	e3580000 	cmp	r8, #0
4002265c:	1affffd5 	bne	400225b8 <CyU3PDmaIntHandler+0x50>
40022660:	e3a00901 	mov	r0, #16384	; 0x4000
40022664:	e58d0000 	str	r0, [sp]
40022668:	e59d0000 	ldr	r0, [sp]
4002266c:	e58d0000 	str	r0, [sp]
40022670:	e59d0000 	ldr	r0, [sp]
40022674:	e1800807 	orr	r0, r0, r7, lsl #16
40022678:	e58d0000 	str	r0, [sp]
4002267c:	e58d6004 	str	r6, [sp, #4]
40022680:	e58d9008 	str	r9, [sp, #8]
40022684:	e3a02000 	mov	r2, #0
40022688:	e1a01002 	mov	r1, r2
4002268c:	e1a0000d 	mov	r0, sp
40022690:	ebffe05f 	bl	4001a814 <CyU3PDmaMsgSend>
40022694:	ea00000d 	b	400226d0 <CyU3PDmaIntHandler+0x168>
40022698:	e59f003c 	ldr	r0, [pc, #60]	; 400226dc <CyU3PDmaIntHandler+0x174>
4002269c:	e5900000 	ldr	r0, [r0]
400226a0:	e3500000 	cmp	r0, #0
400226a4:	0a000005 	beq	400226c0 <CyU3PDmaIntHandler+0x158>
400226a8:	e1a01009 	mov	r1, r9
400226ac:	e1a00007 	mov	r0, r7
400226b0:	e59f2024 	ldr	r2, [pc, #36]	; 400226dc <CyU3PDmaIntHandler+0x174>
400226b4:	e5922000 	ldr	r2, [r2]
400226b8:	e12fff32 	blx	r2
400226bc:	ea000003 	b	400226d0 <CyU3PDmaIntHandler+0x168>
400226c0:	e59f000c 	ldr	r0, [pc, #12]	; 400226d4 <CyU3PDmaIntHandler+0x16c>
400226c4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400226c8:	e0800385 	add	r0, r0, r5, lsl #7
400226cc:	e5809010 	str	r9, [r0, #16]
400226d0:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
400226d4:	40030cd8 	.word	0x40030cd8
400226d8:	40030d00 	.word	0x40030d00
400226dc:	40030cd4 	.word	0x40030cd4

Disassembly of section i.CyU3PGpioInit:

400226e0 <CyU3PGpioInit>:
400226e0:	e92d4070 	push	{r4, r5, r6, lr}
400226e4:	e1a04000 	mov	r4, r0
400226e8:	e1a06001 	mov	r6, r1
400226ec:	e59f00fc 	ldr	r0, [pc, #252]	; 400227f0 <CyU3PGpioInit+0x110>
400226f0:	e5900000 	ldr	r0, [r0]
400226f4:	e3500000 	cmp	r0, #0
400226f8:	0a000001 	beq	40022704 <CyU3PGpioInit+0x24>
400226fc:	e3a00043 	mov	r0, #67	; 0x43
40022700:	e8bd8070 	pop	{r4, r5, r6, pc}
40022704:	e3540000 	cmp	r4, #0
40022708:	1a000001 	bne	40022714 <CyU3PGpioInit+0x34>
4002270c:	e3a00041 	mov	r0, #65	; 0x41
40022710:	eafffffa 	b	40022700 <CyU3PGpioInit+0x20>
40022714:	e1a00006 	mov	r0, r6
40022718:	eb00013b 	bl	40022c0c <CyU3PRegisterGpioCallBack>
4002271c:	ebffc551 	bl	40013c68 <CyU3PLppGpioBlockIsOn>
40022720:	e3500000 	cmp	r0, #0
40022724:	0a000003 	beq	40022738 <CyU3PGpioInit+0x58>
40022728:	e59f00c4 	ldr	r0, [pc, #196]	; 400227f4 <CyU3PGpioInit+0x114>
4002272c:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022730:	e3100001 	tst	r0, #1
40022734:	1a000020 	bne	400227bc <CyU3PGpioInit+0xdc>
40022738:	e1a00004 	mov	r0, r4
4002273c:	ebffc4a7 	bl	400139e0 <CyU3PGpioSetClock>
40022740:	e1a05000 	mov	r5, r0
40022744:	e3550000 	cmp	r5, #0
40022748:	0a000001 	beq	40022754 <CyU3PGpioInit+0x74>
4002274c:	e1a00005 	mov	r0, r5
40022750:	eaffffea 	b	40022700 <CyU3PGpioInit+0x20>
40022754:	e59f109c 	ldr	r1, [pc, #156]	; 400227f8 <CyU3PGpioInit+0x118>
40022758:	e3a00004 	mov	r0, #4
4002275c:	ebffc545 	bl	40013c78 <CyU3PLppInit>
40022760:	e1a05000 	mov	r5, r0
40022764:	e3550000 	cmp	r5, #0
40022768:	0a000001 	beq	40022774 <CyU3PGpioInit+0x94>
4002276c:	e1a00005 	mov	r0, r5
40022770:	eaffffe2 	b	40022700 <CyU3PGpioInit+0x20>
40022774:	e59f0078 	ldr	r0, [pc, #120]	; 400227f4 <CyU3PGpioInit+0x114>
40022778:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
4002277c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022780:	e59f106c 	ldr	r1, [pc, #108]	; 400227f4 <CyU3PGpioInit+0x114>
40022784:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022788:	e3a0000a 	mov	r0, #10
4002278c:	ebffc33d 	bl	40013488 <CyU3PBusyWait>
40022790:	e59f005c 	ldr	r0, [pc, #92]	; 400227f4 <CyU3PGpioInit+0x114>
40022794:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022798:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002279c:	e59f1050 	ldr	r1, [pc, #80]	; 400227f4 <CyU3PGpioInit+0x114>
400227a0:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
400227a4:	e1a00000 	nop			; (mov r0, r0)
400227a8:	e59f0044 	ldr	r0, [pc, #68]	; 400227f4 <CyU3PGpioInit+0x114>
400227ac:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400227b0:	e3100001 	tst	r0, #1
400227b4:	0afffffb 	beq	400227a8 <CyU3PGpioInit+0xc8>
400227b8:	ea000007 	b	400227dc <CyU3PGpioInit+0xfc>
400227bc:	e59f1034 	ldr	r1, [pc, #52]	; 400227f8 <CyU3PGpioInit+0x118>
400227c0:	e3a00004 	mov	r0, #4
400227c4:	ebffc52b 	bl	40013c78 <CyU3PLppInit>
400227c8:	e1a05000 	mov	r5, r0
400227cc:	e3550000 	cmp	r5, #0
400227d0:	0a000001 	beq	400227dc <CyU3PGpioInit+0xfc>
400227d4:	e1a00005 	mov	r0, r5
400227d8:	eaffffc8 	b	40022700 <CyU3PGpioInit+0x20>
400227dc:	e3a00001 	mov	r0, #1
400227e0:	e59f1008 	ldr	r1, [pc, #8]	; 400227f0 <CyU3PGpioInit+0x110>
400227e4:	e5810000 	str	r0, [r1]
400227e8:	e3a00000 	mov	r0, #0
400227ec:	eaffffc3 	b	40022700 <CyU3PGpioInit+0x20>
400227f0:	40030ed8 	.word	0x40030ed8
400227f4:	e0001000 	.word	0xe0001000
400227f8:	400227fc 	.word	0x400227fc

Disassembly of section i.CyU3PGpioInt_Handler:

400227fc <CyU3PGpioInt_Handler>:
400227fc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022800:	e3a06000 	mov	r6, #0
40022804:	e3a05000 	mov	r5, #0
40022808:	e3a04001 	mov	r4, #1
4002280c:	ea000029 	b	400228b8 <CyU3PGpioInt_Handler+0xbc>
40022810:	e59f0198 	ldr	r0, [pc, #408]	; 400229b0 <CyU3PGpioInt_Handler+0x1b4>
40022814:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
40022818:	e1100004 	tst	r0, r4
4002281c:	0a000021 	beq	400228a8 <CyU3PGpioInt_Handler+0xac>
40022820:	e59f0188 	ldr	r0, [pc, #392]	; 400229b0 <CyU3PGpioInt_Handler+0x1b4>
40022824:	e7900205 	ldr	r0, [r0, r5, lsl #4]
40022828:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
4002282c:	e59f117c 	ldr	r1, [pc, #380]	; 400229b0 <CyU3PGpioInt_Handler+0x1b4>
40022830:	e7810205 	str	r0, [r1, r5, lsl #4]
40022834:	e59f0178 	ldr	r0, [pc, #376]	; 400229b4 <CyU3PGpioInt_Handler+0x1b8>
40022838:	e5900000 	ldr	r0, [r0]
4002283c:	e3500000 	cmp	r0, #0
40022840:	0a000018 	beq	400228a8 <CyU3PGpioInt_Handler+0xac>
40022844:	e1a06005 	mov	r6, r5
40022848:	e1a07005 	mov	r7, r5
4002284c:	ea00000e 	b	4002288c <CyU3PGpioInt_Handler+0x90>
40022850:	e1a00007 	mov	r0, r7
40022854:	ebffc097 	bl	40012ab8 <CyU3PIsGpioComplexIOConfigured>
40022858:	e3500000 	cmp	r0, #0
4002285c:	0a000001 	beq	40022868 <CyU3PGpioInt_Handler+0x6c>
40022860:	e1a06007 	mov	r6, r7
40022864:	ea00000a 	b	40022894 <CyU3PGpioInt_Handler+0x98>
40022868:	e2870020 	add	r0, r7, #32
4002286c:	ebffc091 	bl	40012ab8 <CyU3PIsGpioComplexIOConfigured>
40022870:	e3500000 	cmp	r0, #0
40022874:	0a000002 	beq	40022884 <CyU3PGpioInt_Handler+0x88>
40022878:	e2870020 	add	r0, r7, #32
4002287c:	e20060ff 	and	r6, r0, #255	; 0xff
40022880:	ea000003 	b	40022894 <CyU3PGpioInt_Handler+0x98>
40022884:	e2870008 	add	r0, r7, #8
40022888:	e20070ff 	and	r7, r0, #255	; 0xff
4002288c:	e3570020 	cmp	r7, #32
40022890:	baffffee 	blt	40022850 <CyU3PGpioInt_Handler+0x54>
40022894:	e1a00000 	nop			; (mov r0, r0)
40022898:	e1a00006 	mov	r0, r6
4002289c:	e59f1110 	ldr	r1, [pc, #272]	; 400229b4 <CyU3PGpioInt_Handler+0x1b8>
400228a0:	e5911000 	ldr	r1, [r1]
400228a4:	e12fff31 	blx	r1
400228a8:	e59f0108 	ldr	r0, [pc, #264]	; 400229b8 <CyU3PGpioInt_Handler+0x1bc>
400228ac:	e0004084 	and	r4, r0, r4, lsl #1
400228b0:	e2850001 	add	r0, r5, #1
400228b4:	e20050ff 	and	r5, r0, #255	; 0xff
400228b8:	e3540080 	cmp	r4, #128	; 0x80
400228bc:	9affffd3 	bls	40022810 <CyU3PGpioInt_Handler+0x14>
400228c0:	e59f00e8 	ldr	r0, [pc, #232]	; 400229b0 <CyU3PGpioInt_Handler+0x1b4>
400228c4:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
400228c8:	e3500000 	cmp	r0, #0
400228cc:	0a000017 	beq	40022930 <CyU3PGpioInt_Handler+0x134>
400228d0:	e3a05000 	mov	r5, #0
400228d4:	ea000013 	b	40022928 <CyU3PGpioInt_Handler+0x12c>
400228d8:	e59f00d0 	ldr	r0, [pc, #208]	; 400229b0 <CyU3PGpioInt_Handler+0x1b4>
400228dc:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
400228e0:	e3a01001 	mov	r1, #1
400228e4:	e1100511 	tst	r0, r1, lsl r5
400228e8:	0a00000c 	beq	40022920 <CyU3PGpioInt_Handler+0x124>
400228ec:	e59f00c8 	ldr	r0, [pc, #200]	; 400229bc <CyU3PGpioInt_Handler+0x1c0>
400228f0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400228f4:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
400228f8:	e59f10bc 	ldr	r1, [pc, #188]	; 400229bc <CyU3PGpioInt_Handler+0x1c0>
400228fc:	e7810105 	str	r0, [r1, r5, lsl #2]
40022900:	e59f00ac 	ldr	r0, [pc, #172]	; 400229b4 <CyU3PGpioInt_Handler+0x1b8>
40022904:	e5900000 	ldr	r0, [r0]
40022908:	e3500000 	cmp	r0, #0
4002290c:	0a000003 	beq	40022920 <CyU3PGpioInt_Handler+0x124>
40022910:	e1a00005 	mov	r0, r5
40022914:	e59f1098 	ldr	r1, [pc, #152]	; 400229b4 <CyU3PGpioInt_Handler+0x1b8>
40022918:	e5911000 	ldr	r1, [r1]
4002291c:	e12fff31 	blx	r1
40022920:	e2850001 	add	r0, r5, #1
40022924:	e20050ff 	and	r5, r0, #255	; 0xff
40022928:	e3550020 	cmp	r5, #32
4002292c:	baffffe9 	blt	400228d8 <CyU3PGpioInt_Handler+0xdc>
40022930:	e59f0078 	ldr	r0, [pc, #120]	; 400229b0 <CyU3PGpioInt_Handler+0x1b4>
40022934:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022938:	e3500000 	cmp	r0, #0
4002293c:	0a00001a 	beq	400229ac <CyU3PGpioInt_Handler+0x1b0>
40022940:	e3a05000 	mov	r5, #0
40022944:	ea000016 	b	400229a4 <CyU3PGpioInt_Handler+0x1a8>
40022948:	e59f0060 	ldr	r0, [pc, #96]	; 400229b0 <CyU3PGpioInt_Handler+0x1b4>
4002294c:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022950:	e3a01001 	mov	r1, #1
40022954:	e1100511 	tst	r0, r1, lsl r5
40022958:	0a00000f 	beq	4002299c <CyU3PGpioInt_Handler+0x1a0>
4002295c:	e59f0058 	ldr	r0, [pc, #88]	; 400229bc <CyU3PGpioInt_Handler+0x1c0>
40022960:	e2851020 	add	r1, r5, #32
40022964:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022968:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
4002296c:	e59f0048 	ldr	r0, [pc, #72]	; 400229bc <CyU3PGpioInt_Handler+0x1c0>
40022970:	e2852020 	add	r2, r5, #32
40022974:	e7801102 	str	r1, [r0, r2, lsl #2]
40022978:	e59f0034 	ldr	r0, [pc, #52]	; 400229b4 <CyU3PGpioInt_Handler+0x1b8>
4002297c:	e5900000 	ldr	r0, [r0]
40022980:	e3500000 	cmp	r0, #0
40022984:	0a000004 	beq	4002299c <CyU3PGpioInt_Handler+0x1a0>
40022988:	e2851020 	add	r1, r5, #32
4002298c:	e20100ff 	and	r0, r1, #255	; 0xff
40022990:	e59f101c 	ldr	r1, [pc, #28]	; 400229b4 <CyU3PGpioInt_Handler+0x1b8>
40022994:	e5911000 	ldr	r1, [r1]
40022998:	e12fff31 	blx	r1
4002299c:	e2850001 	add	r0, r5, #1
400229a0:	e20050ff 	and	r5, r0, #255	; 0xff
400229a4:	e3550020 	cmp	r5, #32
400229a8:	baffffe6 	blt	40022948 <CyU3PGpioInt_Handler+0x14c>
400229ac:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400229b0:	e0001000 	.word	0xe0001000
400229b4:	40030edc 	.word	0x40030edc
400229b8:	0000ffff 	.word	0x0000ffff
400229bc:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

400229c0 <CyU3PGpioSetSimpleConfig>:
400229c0:	e92d4070 	push	{r4, r5, r6, lr}
400229c4:	e1a04000 	mov	r4, r0
400229c8:	e1a05001 	mov	r5, r1
400229cc:	e3a06000 	mov	r6, #0
400229d0:	e59f00d0 	ldr	r0, [pc, #208]	; 40022aa8 <CyU3PGpioSetSimpleConfig+0xe8>
400229d4:	e5900000 	ldr	r0, [r0]
400229d8:	e3500000 	cmp	r0, #0
400229dc:	1a000001 	bne	400229e8 <CyU3PGpioSetSimpleConfig+0x28>
400229e0:	e3a00042 	mov	r0, #66	; 0x42
400229e4:	e8bd8070 	pop	{r4, r5, r6, pc}
400229e8:	e1a00004 	mov	r0, r4
400229ec:	ebffc03d 	bl	40012ae8 <CyU3PIsGpioValid>
400229f0:	e3500000 	cmp	r0, #0
400229f4:	1a000001 	bne	40022a00 <CyU3PGpioSetSimpleConfig+0x40>
400229f8:	e3a00040 	mov	r0, #64	; 0x40
400229fc:	eafffff8 	b	400229e4 <CyU3PGpioSetSimpleConfig+0x24>
40022a00:	e3550000 	cmp	r5, #0
40022a04:	1a000001 	bne	40022a10 <CyU3PGpioSetSimpleConfig+0x50>
40022a08:	e3a00041 	mov	r0, #65	; 0x41
40022a0c:	eafffff4 	b	400229e4 <CyU3PGpioSetSimpleConfig+0x24>
40022a10:	e5d50010 	ldrb	r0, [r5, #16]
40022a14:	e3500005 	cmp	r0, #5
40022a18:	da000001 	ble	40022a24 <CyU3PGpioSetSimpleConfig+0x64>
40022a1c:	e3a00040 	mov	r0, #64	; 0x40
40022a20:	eaffffef 	b	400229e4 <CyU3PGpioSetSimpleConfig+0x24>
40022a24:	e1a00004 	mov	r0, r4
40022a28:	ebffc028 	bl	40012ad0 <CyU3PIsGpioSimpleIOConfigured>
40022a2c:	e3500000 	cmp	r0, #0
40022a30:	1a000001 	bne	40022a3c <CyU3PGpioSetSimpleConfig+0x7c>
40022a34:	e3a00044 	mov	r0, #68	; 0x44
40022a38:	eaffffe9 	b	400229e4 <CyU3PGpioSetSimpleConfig+0x24>
40022a3c:	e595000c 	ldr	r0, [r5, #12]
40022a40:	e3500000 	cmp	r0, #0
40022a44:	0a000000 	beq	40022a4c <CyU3PGpioSetSimpleConfig+0x8c>
40022a48:	e3866040 	orr	r6, r6, #64	; 0x40
40022a4c:	e5950004 	ldr	r0, [r5, #4]
40022a50:	e3500000 	cmp	r0, #0
40022a54:	0a000000 	beq	40022a5c <CyU3PGpioSetSimpleConfig+0x9c>
40022a58:	e3866010 	orr	r6, r6, #16
40022a5c:	e5950008 	ldr	r0, [r5, #8]
40022a60:	e3500000 	cmp	r0, #0
40022a64:	0a000000 	beq	40022a6c <CyU3PGpioSetSimpleConfig+0xac>
40022a68:	e3866020 	orr	r6, r6, #32
40022a6c:	e5950000 	ldr	r0, [r5]
40022a70:	e3500000 	cmp	r0, #0
40022a74:	0a000000 	beq	40022a7c <CyU3PGpioSetSimpleConfig+0xbc>
40022a78:	e3866001 	orr	r6, r6, #1
40022a7c:	e5d50010 	ldrb	r0, [r5, #16]
40022a80:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022a84:	e0010c00 	and	r0, r1, r0, lsl #24
40022a88:	e1866000 	orr	r6, r6, r0
40022a8c:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022a90:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022a94:	e59f0010 	ldr	r0, [pc, #16]	; 40022aac <CyU3PGpioSetSimpleConfig+0xec>
40022a98:	e7806104 	str	r6, [r0, r4, lsl #2]
40022a9c:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022aa0:	e3a00000 	mov	r0, #0
40022aa4:	eaffffce 	b	400229e4 <CyU3PGpioSetSimpleConfig+0x24>
40022aa8:	40030ed8 	.word	0x40030ed8
40022aac:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022ab0 <CyU3PGpioSetValue>:
40022ab0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022ab4:	e1a04000 	mov	r4, r0
40022ab8:	e1a05001 	mov	r5, r1
40022abc:	e59f00b8 	ldr	r0, [pc, #184]	; 40022b7c <CyU3PGpioSetValue+0xcc>
40022ac0:	e5900000 	ldr	r0, [r0]
40022ac4:	e3500000 	cmp	r0, #0
40022ac8:	1a000001 	bne	40022ad4 <CyU3PGpioSetValue+0x24>
40022acc:	e3a00042 	mov	r0, #66	; 0x42
40022ad0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022ad4:	e1a00004 	mov	r0, r4
40022ad8:	ebffc002 	bl	40012ae8 <CyU3PIsGpioValid>
40022adc:	e3500000 	cmp	r0, #0
40022ae0:	1a000001 	bne	40022aec <CyU3PGpioSetValue+0x3c>
40022ae4:	e3a00040 	mov	r0, #64	; 0x40
40022ae8:	eafffff8 	b	40022ad0 <CyU3PGpioSetValue+0x20>
40022aec:	e1a00004 	mov	r0, r4
40022af0:	ebffbff6 	bl	40012ad0 <CyU3PIsGpioSimpleIOConfigured>
40022af4:	e3500000 	cmp	r0, #0
40022af8:	0a000002 	beq	40022b08 <CyU3PGpioSetValue+0x58>
40022afc:	e59f007c 	ldr	r0, [pc, #124]	; 40022b80 <CyU3PGpioSetValue+0xd0>
40022b00:	e0807104 	add	r7, r0, r4, lsl #2
40022b04:	ea00000d 	b	40022b40 <CyU3PGpioSetValue+0x90>
40022b08:	e1a00004 	mov	r0, r4
40022b0c:	ebffbfe9 	bl	40012ab8 <CyU3PIsGpioComplexIOConfigured>
40022b10:	e3500000 	cmp	r0, #0
40022b14:	0a000007 	beq	40022b38 <CyU3PGpioSetValue+0x88>
40022b18:	e1a00004 	mov	r0, r4
40022b1c:	e1a01fc4 	asr	r1, r4, #31
40022b20:	e0841ea1 	add	r1, r4, r1, lsr #29
40022b24:	e1a011c1 	asr	r1, r1, #3
40022b28:	e0441181 	sub	r1, r4, r1, lsl #3
40022b2c:	e59f2050 	ldr	r2, [pc, #80]	; 40022b84 <CyU3PGpioSetValue+0xd4>
40022b30:	e0827201 	add	r7, r2, r1, lsl #4
40022b34:	ea000001 	b	40022b40 <CyU3PGpioSetValue+0x90>
40022b38:	e3a00044 	mov	r0, #68	; 0x44
40022b3c:	eaffffe3 	b	40022ad0 <CyU3PGpioSetValue+0x20>
40022b40:	e5970000 	ldr	r0, [r7]
40022b44:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022b48:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022b4c:	1a000001 	bne	40022b58 <CyU3PGpioSetValue+0xa8>
40022b50:	e3a00044 	mov	r0, #68	; 0x44
40022b54:	eaffffdd 	b	40022ad0 <CyU3PGpioSetValue+0x20>
40022b58:	e3550000 	cmp	r5, #0
40022b5c:	0a000001 	beq	40022b68 <CyU3PGpioSetValue+0xb8>
40022b60:	e3866001 	orr	r6, r6, #1
40022b64:	ea000000 	b	40022b6c <CyU3PGpioSetValue+0xbc>
40022b68:	e3c66001 	bic	r6, r6, #1
40022b6c:	e5876000 	str	r6, [r7]
40022b70:	e5976000 	ldr	r6, [r7]
40022b74:	e3a00000 	mov	r0, #0
40022b78:	eaffffd4 	b	40022ad0 <CyU3PGpioSetValue+0x20>
40022b7c:	40030ed8 	.word	0x40030ed8
40022b80:	e0001100 	.word	0xe0001100
40022b84:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022b88 <CyU3PGpioSimpleGetValue>:
40022b88:	e92d4070 	push	{r4, r5, r6, lr}
40022b8c:	e1a04000 	mov	r4, r0
40022b90:	e1a06001 	mov	r6, r1
40022b94:	e59f0068 	ldr	r0, [pc, #104]	; 40022c04 <CyU3PGpioSimpleGetValue+0x7c>
40022b98:	e5900000 	ldr	r0, [r0]
40022b9c:	e3500000 	cmp	r0, #0
40022ba0:	1a000001 	bne	40022bac <CyU3PGpioSimpleGetValue+0x24>
40022ba4:	e3a00042 	mov	r0, #66	; 0x42
40022ba8:	e8bd8070 	pop	{r4, r5, r6, pc}
40022bac:	e1a00004 	mov	r0, r4
40022bb0:	ebffbfcc 	bl	40012ae8 <CyU3PIsGpioValid>
40022bb4:	e3500000 	cmp	r0, #0
40022bb8:	1a000001 	bne	40022bc4 <CyU3PGpioSimpleGetValue+0x3c>
40022bbc:	e3a00040 	mov	r0, #64	; 0x40
40022bc0:	eafffff8 	b	40022ba8 <CyU3PGpioSimpleGetValue+0x20>
40022bc4:	e3560000 	cmp	r6, #0
40022bc8:	1a000001 	bne	40022bd4 <CyU3PGpioSimpleGetValue+0x4c>
40022bcc:	e3a00041 	mov	r0, #65	; 0x41
40022bd0:	eafffff4 	b	40022ba8 <CyU3PGpioSimpleGetValue+0x20>
40022bd4:	e59f002c 	ldr	r0, [pc, #44]	; 40022c08 <CyU3PGpioSimpleGetValue+0x80>
40022bd8:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40022bdc:	e3150040 	tst	r5, #64	; 0x40
40022be0:	0a000003 	beq	40022bf4 <CyU3PGpioSimpleGetValue+0x6c>
40022be4:	e2050002 	and	r0, r5, #2
40022be8:	e1a000a0 	lsr	r0, r0, #1
40022bec:	e5860000 	str	r0, [r6]
40022bf0:	ea000001 	b	40022bfc <CyU3PGpioSimpleGetValue+0x74>
40022bf4:	e2050001 	and	r0, r5, #1
40022bf8:	e5860000 	str	r0, [r6]
40022bfc:	e3a00000 	mov	r0, #0
40022c00:	eaffffe8 	b	40022ba8 <CyU3PGpioSimpleGetValue+0x20>
40022c04:	40030ed8 	.word	0x40030ed8
40022c08:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40022c0c <CyU3PRegisterGpioCallBack>:
40022c0c:	e59f1004 	ldr	r1, [pc, #4]	; 40022c18 <CyU3PRegisterGpioCallBack+0xc>
40022c10:	e5810000 	str	r0, [r1]
40022c14:	e12fff1e 	bx	lr
40022c18:	40030edc 	.word	0x40030edc

Disassembly of section i.CyU3PRegisterUartCallBack:

40022c1c <CyU3PRegisterUartCallBack>:
40022c1c:	e59f1004 	ldr	r1, [pc, #4]	; 40022c28 <CyU3PRegisterUartCallBack+0xc>
40022c20:	e5810000 	str	r0, [r1]
40022c24:	e12fff1e 	bx	lr
40022c28:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartGetLock:

40022c2c <CyU3PUartGetLock>:
40022c2c:	e92d4010 	push	{r4, lr}
40022c30:	e3a04000 	mov	r4, #0
40022c34:	e59f0044 	ldr	r0, [pc, #68]	; 40022c80 <CyU3PUartGetLock+0x54>
40022c38:	e5900000 	ldr	r0, [r0]
40022c3c:	e3500000 	cmp	r0, #0
40022c40:	1a000001 	bne	40022c4c <CyU3PUartGetLock+0x20>
40022c44:	e3a00044 	mov	r0, #68	; 0x44
40022c48:	e8bd8010 	pop	{r4, pc}
40022c4c:	ebff96d7 	bl	400087b0 <_tx_thread_identify>
40022c50:	e3500000 	cmp	r0, #0
40022c54:	0a000000 	beq	40022c5c <CyU3PUartGetLock+0x30>
40022c58:	e3e04000 	mvn	r4, #0
40022c5c:	e1a01004 	mov	r1, r4
40022c60:	e59f001c 	ldr	r0, [pc, #28]	; 40022c84 <CyU3PUartGetLock+0x58>
40022c64:	ebff9ce6 	bl	4000a004 <_txe_mutex_get>
40022c68:	e3500000 	cmp	r0, #0
40022c6c:	0a000001 	beq	40022c78 <CyU3PUartGetLock+0x4c>
40022c70:	e3a0001d 	mov	r0, #29
40022c74:	eafffff3 	b	40022c48 <CyU3PUartGetLock+0x1c>
40022c78:	e3a00000 	mov	r0, #0
40022c7c:	eafffff1 	b	40022c48 <CyU3PUartGetLock+0x1c>
40022c80:	40030ee8 	.word	0x40030ee8
40022c84:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

40022c88 <CyU3PUartInit>:
40022c88:	e92d4010 	push	{r4, lr}
40022c8c:	e3a00003 	mov	r0, #3
40022c90:	ebffbf9b 	bl	40012b04 <CyU3PIsLppIOConfigured>
40022c94:	e3500000 	cmp	r0, #0
40022c98:	1a000001 	bne	40022ca4 <CyU3PUartInit+0x1c>
40022c9c:	e3a00044 	mov	r0, #68	; 0x44
40022ca0:	e8bd8010 	pop	{r4, pc}
40022ca4:	e59f00b8 	ldr	r0, [pc, #184]	; 40022d64 <CyU3PUartInit+0xdc>
40022ca8:	e5900000 	ldr	r0, [r0]
40022cac:	e3500000 	cmp	r0, #0
40022cb0:	0a000001 	beq	40022cbc <CyU3PUartInit+0x34>
40022cb4:	e3a00043 	mov	r0, #67	; 0x43
40022cb8:	eafffff8 	b	40022ca0 <CyU3PUartInit+0x18>
40022cbc:	e3a03038 	mov	r3, #56	; 0x38
40022cc0:	e3a02000 	mov	r2, #0
40022cc4:	e1a01002 	mov	r1, r2
40022cc8:	e59f0098 	ldr	r0, [pc, #152]	; 40022d68 <CyU3PUartInit+0xe0>
40022ccc:	ebff9c4e 	bl	40009e0c <_txe_mutex_create>
40022cd0:	e3a00d96 	mov	r0, #9600	; 0x2580
40022cd4:	ebffc505 	bl	400140f0 <CyU3PUartSetClock>
40022cd8:	e1a04000 	mov	r4, r0
40022cdc:	e3540000 	cmp	r4, #0
40022ce0:	0a000001 	beq	40022cec <CyU3PUartInit+0x64>
40022ce4:	e1a00004 	mov	r0, r4
40022ce8:	eaffffec 	b	40022ca0 <CyU3PUartInit+0x18>
40022cec:	e59f1078 	ldr	r1, [pc, #120]	; 40022d6c <CyU3PUartInit+0xe4>
40022cf0:	e3a00003 	mov	r0, #3
40022cf4:	ebffc3df 	bl	40013c78 <CyU3PLppInit>
40022cf8:	e1a04000 	mov	r4, r0
40022cfc:	e3540000 	cmp	r4, #0
40022d00:	0a000001 	beq	40022d0c <CyU3PUartInit+0x84>
40022d04:	e1a00004 	mov	r0, r4
40022d08:	eaffffe4 	b	40022ca0 <CyU3PUartInit+0x18>
40022d0c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d10:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022d14:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022d18:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022d1c:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022d20:	e3a0000a 	mov	r0, #10
40022d24:	ebffc1d7 	bl	40013488 <CyU3PBusyWait>
40022d28:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d2c:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022d30:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022d34:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022d38:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40022d3c:	e1a00000 	nop			; (mov r0, r0)
40022d40:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d44:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40022d48:	e3100001 	tst	r0, #1
40022d4c:	0afffffb 	beq	40022d40 <CyU3PUartInit+0xb8>
40022d50:	e3a00001 	mov	r0, #1
40022d54:	e59f1008 	ldr	r1, [pc, #8]	; 40022d64 <CyU3PUartInit+0xdc>
40022d58:	e5810000 	str	r0, [r1]
40022d5c:	e3a00000 	mov	r0, #0
40022d60:	eaffffce 	b	40022ca0 <CyU3PUartInit+0x18>
40022d64:	40030ee8 	.word	0x40030ee8
40022d68:	40032e1c 	.word	0x40032e1c
40022d6c:	40022d70 	.word	0x40022d70

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40022d70 <CyU3PUartInt_ThreadHandler>:
40022d70:	e92d4070 	push	{r4, r5, r6, lr}
40022d74:	ebffffac 	bl	40022c2c <CyU3PUartGetLock>
40022d78:	e1a05000 	mov	r5, r0
40022d7c:	e3550000 	cmp	r5, #0
40022d80:	0a000000 	beq	40022d88 <CyU3PUartInt_ThreadHandler+0x18>
40022d84:	e8bd8070 	pop	{r4, r5, r6, pc}
40022d88:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022d8c:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
40022d90:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022d94:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
40022d98:	e0004001 	and	r4, r0, r1
40022d9c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022da0:	e5804808 	str	r4, [r0, #2056]	; 0x808
40022da4:	e59f0078 	ldr	r0, [pc, #120]	; 40022e24 <CyU3PUartInt_ThreadHandler+0xb4>
40022da8:	e5900000 	ldr	r0, [r0]
40022dac:	e3500000 	cmp	r0, #0
40022db0:	1a000001 	bne	40022dbc <CyU3PUartInt_ThreadHandler+0x4c>
40022db4:	eb00001b 	bl	40022e28 <CyU3PUartReleaseLock>
40022db8:	eafffff1 	b	40022d84 <CyU3PUartInt_ThreadHandler+0x14>
40022dbc:	e3140001 	tst	r4, #1
40022dc0:	0a000004 	beq	40022dd8 <CyU3PUartInt_ThreadHandler+0x68>
40022dc4:	e3a01000 	mov	r1, #0
40022dc8:	e1a00001 	mov	r0, r1
40022dcc:	e59f2050 	ldr	r2, [pc, #80]	; 40022e24 <CyU3PUartInt_ThreadHandler+0xb4>
40022dd0:	e5922000 	ldr	r2, [r2]
40022dd4:	e12fff32 	blx	r2
40022dd8:	e3140008 	tst	r4, #8
40022ddc:	0a000004 	beq	40022df4 <CyU3PUartInt_ThreadHandler+0x84>
40022de0:	e3a01000 	mov	r1, #0
40022de4:	e3a00001 	mov	r0, #1
40022de8:	e59f2034 	ldr	r2, [pc, #52]	; 40022e24 <CyU3PUartInt_ThreadHandler+0xb4>
40022dec:	e5922000 	ldr	r2, [r2]
40022df0:	e12fff32 	blx	r2
40022df4:	e3140c02 	tst	r4, #512	; 0x200
40022df8:	0a000007 	beq	40022e1c <CyU3PUartInt_ThreadHandler+0xac>
40022dfc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022e00:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
40022e04:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40022e08:	e1a01c20 	lsr	r1, r0, #24
40022e0c:	e3a00002 	mov	r0, #2
40022e10:	e59f200c 	ldr	r2, [pc, #12]	; 40022e24 <CyU3PUartInt_ThreadHandler+0xb4>
40022e14:	e5922000 	ldr	r2, [r2]
40022e18:	e12fff32 	blx	r2
40022e1c:	eb000001 	bl	40022e28 <CyU3PUartReleaseLock>
40022e20:	eaffffd7 	b	40022d84 <CyU3PUartInt_ThreadHandler+0x14>
40022e24:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartReleaseLock:

40022e28 <CyU3PUartReleaseLock>:
40022e28:	e92d4010 	push	{r4, lr}
40022e2c:	e59f0030 	ldr	r0, [pc, #48]	; 40022e64 <CyU3PUartReleaseLock+0x3c>
40022e30:	e5900000 	ldr	r0, [r0]
40022e34:	e3500000 	cmp	r0, #0
40022e38:	1a000001 	bne	40022e44 <CyU3PUartReleaseLock+0x1c>
40022e3c:	e3a00044 	mov	r0, #68	; 0x44
40022e40:	e8bd8010 	pop	{r4, pc}
40022e44:	e59f001c 	ldr	r0, [pc, #28]	; 40022e68 <CyU3PUartReleaseLock+0x40>
40022e48:	ebff9ca2 	bl	4000a0d8 <_txe_mutex_put>
40022e4c:	e3500000 	cmp	r0, #0
40022e50:	0a000001 	beq	40022e5c <CyU3PUartReleaseLock+0x34>
40022e54:	e3a0001d 	mov	r0, #29
40022e58:	eafffff8 	b	40022e40 <CyU3PUartReleaseLock+0x18>
40022e5c:	e3a00000 	mov	r0, #0
40022e60:	eafffff6 	b	40022e40 <CyU3PUartReleaseLock+0x18>
40022e64:	40030ee8 	.word	0x40030ee8
40022e68:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

40022e6c <CyU3PUartSetConfig>:
40022e6c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022e70:	e1a04000 	mov	r4, r0
40022e74:	e1a05001 	mov	r5, r1
40022e78:	e3a07000 	mov	r7, #0
40022e7c:	e59f01f0 	ldr	r0, [pc, #496]	; 40023074 <CyU3PUartSetConfig+0x208>
40022e80:	e5900000 	ldr	r0, [r0]
40022e84:	e3500000 	cmp	r0, #0
40022e88:	1a000001 	bne	40022e94 <CyU3PUartSetConfig+0x28>
40022e8c:	e3a00042 	mov	r0, #66	; 0x42
40022e90:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022e94:	e3540000 	cmp	r4, #0
40022e98:	1a000001 	bne	40022ea4 <CyU3PUartSetConfig+0x38>
40022e9c:	e3a00041 	mov	r0, #65	; 0x41
40022ea0:	eafffffa 	b	40022e90 <CyU3PUartSetConfig+0x24>
40022ea4:	e5940004 	ldr	r0, [r4, #4]
40022ea8:	e5941000 	ldr	r1, [r4]
40022eac:	e1900001 	orrs	r0, r0, r1
40022eb0:	1a000001 	bne	40022ebc <CyU3PUartSetConfig+0x50>
40022eb4:	e3a00040 	mov	r0, #64	; 0x40
40022eb8:	eafffff4 	b	40022e90 <CyU3PUartSetConfig+0x24>
40022ebc:	e5d40015 	ldrb	r0, [r4, #21]
40022ec0:	e3500003 	cmp	r0, #3
40022ec4:	ba000001 	blt	40022ed0 <CyU3PUartSetConfig+0x64>
40022ec8:	e3a00040 	mov	r0, #64	; 0x40
40022ecc:	eaffffef 	b	40022e90 <CyU3PUartSetConfig+0x24>
40022ed0:	e5d40014 	ldrb	r0, [r4, #20]
40022ed4:	e3500001 	cmp	r0, #1
40022ed8:	0a000004 	beq	40022ef0 <CyU3PUartSetConfig+0x84>
40022edc:	e5d40014 	ldrb	r0, [r4, #20]
40022ee0:	e3500002 	cmp	r0, #2
40022ee4:	0a000001 	beq	40022ef0 <CyU3PUartSetConfig+0x84>
40022ee8:	e3a00040 	mov	r0, #64	; 0x40
40022eec:	eaffffe7 	b	40022e90 <CyU3PUartSetConfig+0x24>
40022ef0:	e594000c 	ldr	r0, [r4, #12]
40022ef4:	e3500000 	cmp	r0, #0
40022ef8:	1a000003 	bne	40022f0c <CyU3PUartSetConfig+0xa0>
40022efc:	e3550000 	cmp	r5, #0
40022f00:	0a000001 	beq	40022f0c <CyU3PUartSetConfig+0xa0>
40022f04:	e3a00040 	mov	r0, #64	; 0x40
40022f08:	eaffffe0 	b	40022e90 <CyU3PUartSetConfig+0x24>
40022f0c:	ebffff46 	bl	40022c2c <CyU3PUartGetLock>
40022f10:	e1a06000 	mov	r6, r0
40022f14:	e3560000 	cmp	r6, #0
40022f18:	0a000001 	beq	40022f24 <CyU3PUartSetConfig+0xb8>
40022f1c:	e3a0001d 	mov	r0, #29
40022f20:	eaffffda 	b	40022e90 <CyU3PUartSetConfig+0x24>
40022f24:	e5940010 	ldr	r0, [r4, #16]
40022f28:	ebffc470 	bl	400140f0 <CyU3PUartSetClock>
40022f2c:	e1a06000 	mov	r6, r0
40022f30:	e3560000 	cmp	r6, #0
40022f34:	0a000002 	beq	40022f44 <CyU3PUartSetConfig+0xd8>
40022f38:	ebffffba 	bl	40022e28 <CyU3PUartReleaseLock>
40022f3c:	e1a00006 	mov	r0, r6
40022f40:	eaffffd2 	b	40022e90 <CyU3PUartSetConfig+0x24>
40022f44:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40022f48:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40022f4c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022f50:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40022f54:	e5810800 	str	r0, [r1, #2048]	; 0x800
40022f58:	e5940004 	ldr	r0, [r4, #4]
40022f5c:	e3500000 	cmp	r0, #0
40022f60:	0a000001 	beq	40022f6c <CyU3PUartSetConfig+0x100>
40022f64:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40022f68:	e3877001 	orr	r7, r7, #1
40022f6c:	e5940000 	ldr	r0, [r4]
40022f70:	e3500000 	cmp	r0, #0
40022f74:	0a000000 	beq	40022f7c <CyU3PUartSetConfig+0x110>
40022f78:	e3877002 	orr	r7, r7, #2
40022f7c:	e5940008 	ldr	r0, [r4, #8]
40022f80:	e3500000 	cmp	r0, #0
40022f84:	0a000000 	beq	40022f8c <CyU3PUartSetConfig+0x120>
40022f88:	e3877a06 	orr	r7, r7, #24576	; 0x6000
40022f8c:	e594000c 	ldr	r0, [r4, #12]
40022f90:	e3500000 	cmp	r0, #0
40022f94:	0a000004 	beq	40022fac <CyU3PUartSetConfig+0x140>
40022f98:	e3877b01 	orr	r7, r7, #1024	; 0x400
40022f9c:	e3a00001 	mov	r0, #1
40022fa0:	e59f10d0 	ldr	r1, [pc, #208]	; 40023078 <CyU3PUartSetConfig+0x20c>
40022fa4:	e5810000 	str	r0, [r1]
40022fa8:	ea000002 	b	40022fb8 <CyU3PUartSetConfig+0x14c>
40022fac:	e3a00000 	mov	r0, #0
40022fb0:	e59f10c0 	ldr	r1, [pc, #192]	; 40023078 <CyU3PUartSetConfig+0x20c>
40022fb4:	e5810000 	str	r0, [r1]
40022fb8:	e5d40014 	ldrb	r0, [r4, #20]
40022fbc:	e3a01c03 	mov	r1, #768	; 0x300
40022fc0:	e0010400 	and	r0, r1, r0, lsl #8
40022fc4:	e1877000 	orr	r7, r7, r0
40022fc8:	e5d40015 	ldrb	r0, [r4, #21]
40022fcc:	e3500001 	cmp	r0, #1
40022fd0:	0a000002 	beq	40022fe0 <CyU3PUartSetConfig+0x174>
40022fd4:	e3500002 	cmp	r0, #2
40022fd8:	1a000006 	bne	40022ff8 <CyU3PUartSetConfig+0x18c>
40022fdc:	ea000002 	b	40022fec <CyU3PUartSetConfig+0x180>
40022fe0:	e1a00000 	nop			; (mov r0, r0)
40022fe4:	e3877008 	orr	r7, r7, #8
40022fe8:	ea000004 	b	40023000 <CyU3PUartSetConfig+0x194>
40022fec:	e1a00000 	nop			; (mov r0, r0)
40022ff0:	e3877018 	orr	r7, r7, #24
40022ff4:	ea000001 	b	40023000 <CyU3PUartSetConfig+0x194>
40022ff8:	e1a00000 	nop			; (mov r0, r0)
40022ffc:	e1a00000 	nop			; (mov r0, r0)
40023000:	e1a00000 	nop			; (mov r0, r0)
40023004:	e3877807 	orr	r7, r7, #458752	; 0x70000
40023008:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002300c:	e5807800 	str	r7, [r0, #2048]	; 0x800
40023010:	e59f0064 	ldr	r0, [pc, #100]	; 4002307c <CyU3PUartSetConfig+0x210>
40023014:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023018:	e5810818 	str	r0, [r1, #2072]	; 0x818
4002301c:	e1a00005 	mov	r0, r5
40023020:	ebfffefd 	bl	40022c1c <CyU3PRegisterUartCallBack>
40023024:	e3550000 	cmp	r5, #0
40023028:	0a000003 	beq	4002303c <CyU3PUartSetConfig+0x1d0>
4002302c:	e59f004c 	ldr	r0, [pc, #76]	; 40023080 <CyU3PUartSetConfig+0x214>
40023030:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023034:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023038:	ea000002 	b	40023048 <CyU3PUartSetConfig+0x1dc>
4002303c:	e3a00000 	mov	r0, #0
40023040:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023044:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023048:	e3a00001 	mov	r0, #1
4002304c:	e59f1030 	ldr	r1, [pc, #48]	; 40023084 <CyU3PUartSetConfig+0x218>
40023050:	e5810000 	str	r0, [r1]
40023054:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023058:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
4002305c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023060:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023064:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023068:	ebffff6e 	bl	40022e28 <CyU3PUartReleaseLock>
4002306c:	e3a00000 	mov	r0, #0
40023070:	eaffff86 	b	40022e90 <CyU3PUartSetConfig+0x24>
40023074:	40030ee8 	.word	0x40030ee8
40023078:	40030ee0 	.word	0x40030ee0
4002307c:	00000603 	.word	0x00000603
40023080:	00000309 	.word	0x00000309
40023084:	40030ee4 	.word	0x40030ee4

Disassembly of section i.CyU3PUartTxSetBlockXfer:

40023088 <CyU3PUartTxSetBlockXfer>:
40023088:	e92d4070 	push	{r4, r5, r6, lr}
4002308c:	e1a05000 	mov	r5, r0
40023090:	e59f003c 	ldr	r0, [pc, #60]	; 400230d4 <CyU3PUartTxSetBlockXfer+0x4c>
40023094:	e5900000 	ldr	r0, [r0]
40023098:	e3500000 	cmp	r0, #0
4002309c:	1a000001 	bne	400230a8 <CyU3PUartTxSetBlockXfer+0x20>
400230a0:	e3a00044 	mov	r0, #68	; 0x44
400230a4:	e8bd8070 	pop	{r4, r5, r6, pc}
400230a8:	ebfffedf 	bl	40022c2c <CyU3PUartGetLock>
400230ac:	e1a04000 	mov	r4, r0
400230b0:	e3540000 	cmp	r4, #0
400230b4:	0a000001 	beq	400230c0 <CyU3PUartTxSetBlockXfer+0x38>
400230b8:	e1a00004 	mov	r0, r4
400230bc:	eafffff8 	b	400230a4 <CyU3PUartTxSetBlockXfer+0x1c>
400230c0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230c4:	e5805820 	str	r5, [r0, #2080]	; 0x820
400230c8:	ebffff56 	bl	40022e28 <CyU3PUartReleaseLock>
400230cc:	e3a00000 	mov	r0, #0
400230d0:	eafffff3 	b	400230a4 <CyU3PUartTxSetBlockXfer+0x1c>
400230d4:	40030ee0 	.word	0x40030ee0

Disassembly of section i.CyU3PI2cErrorRecovery:

400230d8 <CyU3PI2cErrorRecovery>:
400230d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400230dc:	e1a04000 	mov	r4, r0
400230e0:	e3a07000 	mov	r7, #0
400230e4:	e3a08000 	mov	r8, #0
400230e8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400230ec:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400230f0:	e59f1164 	ldr	r1, [pc, #356]	; 4002325c <CyU3PI2cErrorRecovery+0x184>
400230f4:	e5810000 	str	r0, [r1]
400230f8:	e59f5160 	ldr	r5, [pc, #352]	; 40023260 <CyU3PI2cErrorRecovery+0x188>
400230fc:	e1a00000 	nop			; (mov r0, r0)
40023100:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023104:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023108:	e3100201 	tst	r0, #268435456	; 0x10000000
4002310c:	0a000002 	beq	4002311c <CyU3PI2cErrorRecovery+0x44>
40023110:	e1b00005 	movs	r0, r5
40023114:	e2455001 	sub	r5, r5, #1
40023118:	1afffff8 	bne	40023100 <CyU3PI2cErrorRecovery+0x28>
4002311c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023120:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
40023124:	e3a00000 	mov	r0, #0
40023128:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002312c:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023130:	e3e00000 	mvn	r0, #0
40023134:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023138:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002313c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023140:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023144:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023148:	e3a00005 	mov	r0, #5
4002314c:	ebffc0cd 	bl	40013488 <CyU3PBusyWait>
40023150:	e3540000 	cmp	r4, #0
40023154:	0a000032 	beq	40023224 <CyU3PI2cErrorRecovery+0x14c>
40023158:	e3a00000 	mov	r0, #0
4002315c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023160:	e5810438 	str	r0, [r1, #1080]	; 0x438
40023164:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023168:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002316c:	e3100008 	tst	r0, #8
40023170:	1a000000 	bne	40023178 <CyU3PI2cErrorRecovery+0xa0>
40023174:	e3a07101 	mov	r7, #1073741824	; 0x40000000
40023178:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002317c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023180:	e3100002 	tst	r0, #2
40023184:	0a000000 	beq	4002318c <CyU3PI2cErrorRecovery+0xb4>
40023188:	e3a07202 	mov	r7, #536870912	; 0x20000000
4002318c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023190:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023194:	e1800007 	orr	r0, r0, r7
40023198:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002319c:	e5810400 	str	r0, [r1, #1024]	; 0x400
400231a0:	e1e05741 	mvn	r5, r1, asr #14
400231a4:	ea000004 	b	400231bc <CyU3PI2cErrorRecovery+0xe4>
400231a8:	e1b00005 	movs	r0, r5
400231ac:	e2455001 	sub	r5, r5, #1
400231b0:	1a000001 	bne	400231bc <CyU3PI2cErrorRecovery+0xe4>
400231b4:	e3a08054 	mov	r8, #84	; 0x54
400231b8:	ea000003 	b	400231cc <CyU3PI2cErrorRecovery+0xf4>
400231bc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231c0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400231c4:	e3100008 	tst	r0, #8
400231c8:	0afffff6 	beq	400231a8 <CyU3PI2cErrorRecovery+0xd0>
400231cc:	e1a00000 	nop			; (mov r0, r0)
400231d0:	e3580000 	cmp	r8, #0
400231d4:	1a00000b 	bne	40023208 <CyU3PI2cErrorRecovery+0x130>
400231d8:	e59f5080 	ldr	r5, [pc, #128]	; 40023260 <CyU3PI2cErrorRecovery+0x188>
400231dc:	ea000004 	b	400231f4 <CyU3PI2cErrorRecovery+0x11c>
400231e0:	e1b00005 	movs	r0, r5
400231e4:	e2455001 	sub	r5, r5, #1
400231e8:	1a000001 	bne	400231f4 <CyU3PI2cErrorRecovery+0x11c>
400231ec:	e3a08054 	mov	r8, #84	; 0x54
400231f0:	ea000003 	b	40023204 <CyU3PI2cErrorRecovery+0x12c>
400231f4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231f8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400231fc:	e3100002 	tst	r0, #2
40023200:	1afffff6 	bne	400231e0 <CyU3PI2cErrorRecovery+0x108>
40023204:	e1a00000 	nop			; (mov r0, r0)
40023208:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002320c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023210:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
40023214:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023218:	e5810400 	str	r0, [r1, #1024]	; 0x400
4002321c:	e3a00001 	mov	r0, #1
40023220:	ebffc098 	bl	40013488 <CyU3PBusyWait>
40023224:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023228:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002322c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023230:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023234:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023238:	e3a00005 	mov	r0, #5
4002323c:	ebffc091 	bl	40013488 <CyU3PBusyWait>
40023240:	e3e00000 	mvn	r0, #0
40023244:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023248:	e5810408 	str	r0, [r1, #1032]	; 0x408
4002324c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023250:	e580640c 	str	r6, [r0, #1036]	; 0x40c
40023254:	e1a00008 	mov	r0, r8
40023258:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4002325c:	40030f00 	.word	0x40030f00
40023260:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

40023264 <CyU3PI2cGetLock>:
40023264:	e92d4010 	push	{r4, lr}
40023268:	e3a04000 	mov	r4, #0
4002326c:	e59f0044 	ldr	r0, [pc, #68]	; 400232b8 <CyU3PI2cGetLock+0x54>
40023270:	e5900000 	ldr	r0, [r0]
40023274:	e3500000 	cmp	r0, #0
40023278:	1a000001 	bne	40023284 <CyU3PI2cGetLock+0x20>
4002327c:	e3a00044 	mov	r0, #68	; 0x44
40023280:	e8bd8010 	pop	{r4, pc}
40023284:	ebff9549 	bl	400087b0 <_tx_thread_identify>
40023288:	e3500000 	cmp	r0, #0
4002328c:	0a000000 	beq	40023294 <CyU3PI2cGetLock+0x30>
40023290:	e3e04000 	mvn	r4, #0
40023294:	e1a01004 	mov	r1, r4
40023298:	e59f001c 	ldr	r0, [pc, #28]	; 400232bc <CyU3PI2cGetLock+0x58>
4002329c:	ebff9b58 	bl	4000a004 <_txe_mutex_get>
400232a0:	e3500000 	cmp	r0, #0
400232a4:	0a000001 	beq	400232b0 <CyU3PI2cGetLock+0x4c>
400232a8:	e3a0001d 	mov	r0, #29
400232ac:	eafffff3 	b	40023280 <CyU3PI2cGetLock+0x1c>
400232b0:	e3a00000 	mov	r0, #0
400232b4:	eafffff1 	b	40023280 <CyU3PI2cGetLock+0x1c>
400232b8:	40030ef8 	.word	0x40030ef8
400232bc:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

400232c0 <CyU3PI2cInit>:
400232c0:	e92d4010 	push	{r4, lr}
400232c4:	e3a00000 	mov	r0, #0
400232c8:	ebffbe0d 	bl	40012b04 <CyU3PIsLppIOConfigured>
400232cc:	e3500000 	cmp	r0, #0
400232d0:	1a000001 	bne	400232dc <CyU3PI2cInit+0x1c>
400232d4:	e3a00044 	mov	r0, #68	; 0x44
400232d8:	e8bd8010 	pop	{r4, pc}
400232dc:	e59f00bc 	ldr	r0, [pc, #188]	; 400233a0 <CyU3PI2cInit+0xe0>
400232e0:	e5900000 	ldr	r0, [r0]
400232e4:	e3500000 	cmp	r0, #0
400232e8:	0a000001 	beq	400232f4 <CyU3PI2cInit+0x34>
400232ec:	e3a00043 	mov	r0, #67	; 0x43
400232f0:	eafffff8 	b	400232d8 <CyU3PI2cInit+0x18>
400232f4:	e59f00a8 	ldr	r0, [pc, #168]	; 400233a4 <CyU3PI2cInit+0xe4>
400232f8:	ebffc1f7 	bl	40013adc <CyU3PI2cSetClock>
400232fc:	e1a04000 	mov	r4, r0
40023300:	e3540000 	cmp	r4, #0
40023304:	0a000001 	beq	40023310 <CyU3PI2cInit+0x50>
40023308:	e1a00004 	mov	r0, r4
4002330c:	eafffff1 	b	400232d8 <CyU3PI2cInit+0x18>
40023310:	e59f1090 	ldr	r1, [pc, #144]	; 400233a8 <CyU3PI2cInit+0xe8>
40023314:	e3a00000 	mov	r0, #0
40023318:	ebffc256 	bl	40013c78 <CyU3PLppInit>
4002331c:	e1a04000 	mov	r4, r0
40023320:	e3540000 	cmp	r4, #0
40023324:	0a000001 	beq	40023330 <CyU3PI2cInit+0x70>
40023328:	e1a00004 	mov	r0, r4
4002332c:	eaffffe9 	b	400232d8 <CyU3PI2cInit+0x18>
40023330:	e3a03038 	mov	r3, #56	; 0x38
40023334:	e3a02000 	mov	r2, #0
40023338:	e1a01002 	mov	r1, r2
4002333c:	e59f0068 	ldr	r0, [pc, #104]	; 400233ac <CyU3PI2cInit+0xec>
40023340:	ebff9ab1 	bl	40009e0c <_txe_mutex_create>
40023344:	e3a00000 	mov	r0, #0
40023348:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002334c:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023350:	e3a0000a 	mov	r0, #10
40023354:	ebffc04b 	bl	40013488 <CyU3PBusyWait>
40023358:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002335c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023360:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023364:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023368:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
4002336c:	e1a00000 	nop			; (mov r0, r0)
40023370:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023374:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023378:	e3100001 	tst	r0, #1
4002337c:	0afffffb 	beq	40023370 <CyU3PI2cInit+0xb0>
40023380:	e3a00000 	mov	r0, #0
40023384:	e59f1024 	ldr	r1, [pc, #36]	; 400233b0 <CyU3PI2cInit+0xf0>
40023388:	e5810000 	str	r0, [r1]
4002338c:	e3a00001 	mov	r0, #1
40023390:	e2411008 	sub	r1, r1, #8
40023394:	e5810000 	str	r0, [r1]
40023398:	e3a00000 	mov	r0, #0
4002339c:	eaffffcd 	b	400232d8 <CyU3PI2cInit+0x18>
400233a0:	40030ef8 	.word	0x40030ef8
400233a4:	000186a0 	.word	0x000186a0
400233a8:	400233b4 	.word	0x400233b4
400233ac:	40032e54 	.word	0x40032e54
400233b0:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

400233b4 <CyU3PI2cInt_ThreadHandler>:
400233b4:	e92d4070 	push	{r4, r5, r6, lr}
400233b8:	ebffffa9 	bl	40023264 <CyU3PI2cGetLock>
400233bc:	e1a05000 	mov	r5, r0
400233c0:	e3550000 	cmp	r5, #0
400233c4:	0a000000 	beq	400233cc <CyU3PI2cInt_ThreadHandler+0x18>
400233c8:	e8bd8070 	pop	{r4, r5, r6, pc}
400233cc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400233d0:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400233d4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400233d8:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
400233dc:	e0004001 	and	r4, r0, r1
400233e0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400233e4:	e5804408 	str	r4, [r0, #1032]	; 0x408
400233e8:	e59f00b0 	ldr	r0, [pc, #176]	; 400234a0 <CyU3PI2cInt_ThreadHandler+0xec>
400233ec:	e5900000 	ldr	r0, [r0]
400233f0:	e3500000 	cmp	r0, #0
400233f4:	1a000001 	bne	40023400 <CyU3PI2cInt_ThreadHandler+0x4c>
400233f8:	eb000098 	bl	40023660 <CyU3PI2cReleaseLock>
400233fc:	eafffff1 	b	400233c8 <CyU3PI2cInt_ThreadHandler+0x14>
40023400:	e3140001 	tst	r4, #1
40023404:	0a000004 	beq	4002341c <CyU3PI2cInt_ThreadHandler+0x68>
40023408:	e3a01000 	mov	r1, #0
4002340c:	e1a00001 	mov	r0, r1
40023410:	e59f2088 	ldr	r2, [pc, #136]	; 400234a0 <CyU3PI2cInt_ThreadHandler+0xec>
40023414:	e5922000 	ldr	r2, [r2]
40023418:	e12fff32 	blx	r2
4002341c:	e3140008 	tst	r4, #8
40023420:	0a000004 	beq	40023438 <CyU3PI2cInt_ThreadHandler+0x84>
40023424:	e3a01000 	mov	r1, #0
40023428:	e3a00001 	mov	r0, #1
4002342c:	e59f206c 	ldr	r2, [pc, #108]	; 400234a0 <CyU3PI2cInt_ThreadHandler+0xec>
40023430:	e5922000 	ldr	r2, [r2]
40023434:	e12fff32 	blx	r2
40023438:	e3140040 	tst	r4, #64	; 0x40
4002343c:	0a000004 	beq	40023454 <CyU3PI2cInt_ThreadHandler+0xa0>
40023440:	e3a01000 	mov	r1, #0
40023444:	e3a00002 	mov	r0, #2
40023448:	e59f2050 	ldr	r2, [pc, #80]	; 400234a0 <CyU3PI2cInt_ThreadHandler+0xec>
4002344c:	e5922000 	ldr	r2, [r2]
40023450:	e12fff32 	blx	r2
40023454:	e3140080 	tst	r4, #128	; 0x80
40023458:	0a000004 	beq	40023470 <CyU3PI2cInt_ThreadHandler+0xbc>
4002345c:	e3a01000 	mov	r1, #0
40023460:	e3a00003 	mov	r0, #3
40023464:	e59f2034 	ldr	r2, [pc, #52]	; 400234a0 <CyU3PI2cInt_ThreadHandler+0xec>
40023468:	e5922000 	ldr	r2, [r2]
4002346c:	e12fff32 	blx	r2
40023470:	e3140c01 	tst	r4, #256	; 0x100
40023474:	0a000007 	beq	40023498 <CyU3PI2cInt_ThreadHandler+0xe4>
40023478:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002347c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023480:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40023484:	e1a01c20 	lsr	r1, r0, #24
40023488:	e3a00004 	mov	r0, #4
4002348c:	e59f200c 	ldr	r2, [pc, #12]	; 400234a0 <CyU3PI2cInt_ThreadHandler+0xec>
40023490:	e5922000 	ldr	r2, [r2]
40023494:	e12fff32 	blx	r2
40023498:	eb000070 	bl	40023660 <CyU3PI2cReleaseLock>
4002349c:	eaffffc9 	b	400233c8 <CyU3PI2cInt_ThreadHandler+0x14>
400234a0:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PI2cReceiveBytes:

400234a4 <CyU3PI2cReceiveBytes>:
400234a4:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400234a8:	e1a04000 	mov	r4, r0
400234ac:	e1a05001 	mov	r5, r1
400234b0:	e1a06002 	mov	r6, r2
400234b4:	e1a07003 	mov	r7, r3
400234b8:	e59f0194 	ldr	r0, [pc, #404]	; 40023654 <CyU3PI2cReceiveBytes+0x1b0>
400234bc:	e5900000 	ldr	r0, [r0]
400234c0:	e3500000 	cmp	r0, #0
400234c4:	1a000001 	bne	400234d0 <CyU3PI2cReceiveBytes+0x2c>
400234c8:	e3a00044 	mov	r0, #68	; 0x44
400234cc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400234d0:	e59f0180 	ldr	r0, [pc, #384]	; 40023658 <CyU3PI2cReceiveBytes+0x1b4>
400234d4:	e5900000 	ldr	r0, [r0]
400234d8:	e3500000 	cmp	r0, #0
400234dc:	0a000001 	beq	400234e8 <CyU3PI2cReceiveBytes+0x44>
400234e0:	e3a00044 	mov	r0, #68	; 0x44
400234e4:	eafffff8 	b	400234cc <CyU3PI2cReceiveBytes+0x28>
400234e8:	e3550000 	cmp	r5, #0
400234ec:	0a000001 	beq	400234f8 <CyU3PI2cReceiveBytes+0x54>
400234f0:	e3540000 	cmp	r4, #0
400234f4:	1a000001 	bne	40023500 <CyU3PI2cReceiveBytes+0x5c>
400234f8:	e3a00041 	mov	r0, #65	; 0x41
400234fc:	eafffff2 	b	400234cc <CyU3PI2cReceiveBytes+0x28>
40023500:	e5d40008 	ldrb	r0, [r4, #8]
40023504:	e3500000 	cmp	r0, #0
40023508:	0a000002 	beq	40023518 <CyU3PI2cReceiveBytes+0x74>
4002350c:	e5d40008 	ldrb	r0, [r4, #8]
40023510:	e3500008 	cmp	r0, #8
40023514:	da000001 	ble	40023520 <CyU3PI2cReceiveBytes+0x7c>
40023518:	e3a00040 	mov	r0, #64	; 0x40
4002351c:	eaffffea 	b	400234cc <CyU3PI2cReceiveBytes+0x28>
40023520:	e3560000 	cmp	r6, #0
40023524:	1a000001 	bne	40023530 <CyU3PI2cReceiveBytes+0x8c>
40023528:	e3a00000 	mov	r0, #0
4002352c:	eaffffe6 	b	400234cc <CyU3PI2cReceiveBytes+0x28>
40023530:	ebffff4b 	bl	40023264 <CyU3PI2cGetLock>
40023534:	e1a08000 	mov	r8, r0
40023538:	e3580000 	cmp	r8, #0
4002353c:	0a000001 	beq	40023548 <CyU3PI2cReceiveBytes+0xa4>
40023540:	e1a00008 	mov	r0, r8
40023544:	eaffffe0 	b	400234cc <CyU3PI2cReceiveBytes+0x28>
40023548:	e3a0bd07 	mov	fp, #448	; 0x1c0
4002354c:	e1a00000 	nop			; (mov r0, r0)
40023550:	e3a02001 	mov	r2, #1
40023554:	e1a01006 	mov	r1, r6
40023558:	e1a00004 	mov	r0, r4
4002355c:	eb000166 	bl	40023afc <MyI2cSendCommand>
40023560:	e1a08000 	mov	r8, r0
40023564:	e3580000 	cmp	r8, #0
40023568:	0a000000 	beq	40023570 <CyU3PI2cReceiveBytes+0xcc>
4002356c:	ea00002a 	b	4002361c <CyU3PI2cReceiveBytes+0x178>
40023570:	e3a0a000 	mov	sl, #0
40023574:	ea000020 	b	400235fc <CyU3PI2cReceiveBytes+0x158>
40023578:	e59f00dc 	ldr	r0, [pc, #220]	; 4002365c <CyU3PI2cReceiveBytes+0x1b8>
4002357c:	e58d0000 	str	r0, [sp]
40023580:	ea000006 	b	400235a0 <CyU3PI2cReceiveBytes+0xfc>
40023584:	e59d0000 	ldr	r0, [sp]
40023588:	e2401001 	sub	r1, r0, #1
4002358c:	e3500000 	cmp	r0, #0
40023590:	e58d1000 	str	r1, [sp]
40023594:	1a000001 	bne	400235a0 <CyU3PI2cReceiveBytes+0xfc>
40023598:	e3a08055 	mov	r8, #85	; 0x55
4002359c:	ea000004 	b	400235b4 <CyU3PI2cReceiveBytes+0x110>
400235a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235a4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235a8:	e38b1002 	orr	r1, fp, #2
400235ac:	e1100001 	tst	r0, r1
400235b0:	0afffff3 	beq	40023584 <CyU3PI2cReceiveBytes+0xe0>
400235b4:	e1a00000 	nop			; (mov r0, r0)
400235b8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235bc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235c0:	e110000b 	tst	r0, fp
400235c4:	0a000000 	beq	400235cc <CyU3PI2cReceiveBytes+0x128>
400235c8:	e3a0804a 	mov	r8, #74	; 0x4a
400235cc:	e3580000 	cmp	r8, #0
400235d0:	0a000005 	beq	400235ec <CyU3PI2cReceiveBytes+0x148>
400235d4:	e3a00001 	mov	r0, #1
400235d8:	ebfffebe 	bl	400230d8 <CyU3PI2cErrorRecovery>
400235dc:	e3500000 	cmp	r0, #0
400235e0:	0a000000 	beq	400235e8 <CyU3PI2cReceiveBytes+0x144>
400235e4:	e3a08054 	mov	r8, #84	; 0x54
400235e8:	ea000005 	b	40023604 <CyU3PI2cReceiveBytes+0x160>
400235ec:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235f0:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
400235f4:	e7c5000a 	strb	r0, [r5, sl]
400235f8:	e28aa001 	add	sl, sl, #1
400235fc:	e15a0006 	cmp	sl, r6
40023600:	3affffdc 	bcc	40023578 <CyU3PI2cReceiveBytes+0xd4>
40023604:	e1a00000 	nop			; (mov r0, r0)
40023608:	e3580000 	cmp	r8, #0
4002360c:	0a000002 	beq	4002361c <CyU3PI2cReceiveBytes+0x178>
40023610:	e1b00007 	movs	r0, r7
40023614:	e2477001 	sub	r7, r7, #1
40023618:	1affffcc 	bne	40023550 <CyU3PI2cReceiveBytes+0xac>
4002361c:	e1a00000 	nop			; (mov r0, r0)
40023620:	e358004a 	cmp	r8, #74	; 0x4a
40023624:	1a000007 	bne	40023648 <CyU3PI2cReceiveBytes+0x1a4>
40023628:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002362c:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
40023630:	e3190040 	tst	r9, #64	; 0x40
40023634:	0a000000 	beq	4002363c <CyU3PI2cReceiveBytes+0x198>
40023638:	e3a08045 	mov	r8, #69	; 0x45
4002363c:	e3190080 	tst	r9, #128	; 0x80
40023640:	0a000000 	beq	40023648 <CyU3PI2cReceiveBytes+0x1a4>
40023644:	e3a08055 	mov	r8, #85	; 0x55
40023648:	eb000004 	bl	40023660 <CyU3PI2cReleaseLock>
4002364c:	e1a00008 	mov	r0, r8
40023650:	eaffff9d 	b	400234cc <CyU3PI2cReceiveBytes+0x28>
40023654:	40030ef4 	.word	0x40030ef4
40023658:	40030ef0 	.word	0x40030ef0
4002365c:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023660 <CyU3PI2cReleaseLock>:
40023660:	e92d4010 	push	{r4, lr}
40023664:	e59f0030 	ldr	r0, [pc, #48]	; 4002369c <CyU3PI2cReleaseLock+0x3c>
40023668:	e5900000 	ldr	r0, [r0]
4002366c:	e3500000 	cmp	r0, #0
40023670:	1a000001 	bne	4002367c <CyU3PI2cReleaseLock+0x1c>
40023674:	e3a00044 	mov	r0, #68	; 0x44
40023678:	e8bd8010 	pop	{r4, pc}
4002367c:	e59f001c 	ldr	r0, [pc, #28]	; 400236a0 <CyU3PI2cReleaseLock+0x40>
40023680:	ebff9a94 	bl	4000a0d8 <_txe_mutex_put>
40023684:	e3500000 	cmp	r0, #0
40023688:	0a000001 	beq	40023694 <CyU3PI2cReleaseLock+0x34>
4002368c:	e3a0001d 	mov	r0, #29
40023690:	eafffff8 	b	40023678 <CyU3PI2cReleaseLock+0x18>
40023694:	e3a00000 	mov	r0, #0
40023698:	eafffff6 	b	40023678 <CyU3PI2cReleaseLock+0x18>
4002369c:	40030ef8 	.word	0x40030ef8
400236a0:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

400236a4 <CyU3PI2cSetConfig>:
400236a4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400236a8:	e1a04000 	mov	r4, r0
400236ac:	e1a05001 	mov	r5, r1
400236b0:	e59f01e0 	ldr	r0, [pc, #480]	; 40023898 <CyU3PI2cSetConfig+0x1f4>
400236b4:	e5900000 	ldr	r0, [r0]
400236b8:	e3500000 	cmp	r0, #0
400236bc:	1a000001 	bne	400236c8 <CyU3PI2cSetConfig+0x24>
400236c0:	e3a00042 	mov	r0, #66	; 0x42
400236c4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400236c8:	e3540000 	cmp	r4, #0
400236cc:	1a000001 	bne	400236d8 <CyU3PI2cSetConfig+0x34>
400236d0:	e3a00041 	mov	r0, #65	; 0x41
400236d4:	eafffffa 	b	400236c4 <CyU3PI2cSetConfig+0x20>
400236d8:	e5940004 	ldr	r0, [r4, #4]
400236dc:	e3500000 	cmp	r0, #0
400236e0:	1a000003 	bne	400236f4 <CyU3PI2cSetConfig+0x50>
400236e4:	e3550000 	cmp	r5, #0
400236e8:	0a000001 	beq	400236f4 <CyU3PI2cSetConfig+0x50>
400236ec:	e3a00040 	mov	r0, #64	; 0x40
400236f0:	eafffff3 	b	400236c4 <CyU3PI2cSetConfig+0x20>
400236f4:	ebfffeda 	bl	40023264 <CyU3PI2cGetLock>
400236f8:	e1a06000 	mov	r6, r0
400236fc:	e3560000 	cmp	r6, #0
40023700:	0a000001 	beq	4002370c <CyU3PI2cSetConfig+0x68>
40023704:	e1a00006 	mov	r0, r6
40023708:	eaffffed 	b	400236c4 <CyU3PI2cSetConfig+0x20>
4002370c:	e3a00000 	mov	r0, #0
40023710:	e59f1184 	ldr	r1, [pc, #388]	; 4002389c <CyU3PI2cSetConfig+0x1f8>
40023714:	e5810000 	str	r0, [r1]
40023718:	e5940000 	ldr	r0, [r4]
4002371c:	ebffc0ee 	bl	40013adc <CyU3PI2cSetClock>
40023720:	e1a06000 	mov	r6, r0
40023724:	e3560000 	cmp	r6, #0
40023728:	1a00000e 	bne	40023768 <CyU3PI2cSetConfig+0xc4>
4002372c:	e3a00206 	mov	r0, #1610612736	; 0x60000000
40023730:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023734:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023738:	e1e07741 	mvn	r7, r1, asr #14
4002373c:	ea000004 	b	40023754 <CyU3PI2cSetConfig+0xb0>
40023740:	e1b00007 	movs	r0, r7
40023744:	e2477001 	sub	r7, r7, #1
40023748:	1a000001 	bne	40023754 <CyU3PI2cSetConfig+0xb0>
4002374c:	e3a06054 	mov	r6, #84	; 0x54
40023750:	ea000003 	b	40023764 <CyU3PI2cSetConfig+0xc0>
40023754:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023758:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002375c:	e3100008 	tst	r0, #8
40023760:	0afffff6 	beq	40023740 <CyU3PI2cSetConfig+0x9c>
40023764:	e1a00000 	nop			; (mov r0, r0)
40023768:	e3560000 	cmp	r6, #0
4002376c:	1a00000b 	bne	400237a0 <CyU3PI2cSetConfig+0xfc>
40023770:	e59f7128 	ldr	r7, [pc, #296]	; 400238a0 <CyU3PI2cSetConfig+0x1fc>
40023774:	ea000004 	b	4002378c <CyU3PI2cSetConfig+0xe8>
40023778:	e1b00007 	movs	r0, r7
4002377c:	e2477001 	sub	r7, r7, #1
40023780:	1a000001 	bne	4002378c <CyU3PI2cSetConfig+0xe8>
40023784:	e3a06054 	mov	r6, #84	; 0x54
40023788:	ea000003 	b	4002379c <CyU3PI2cSetConfig+0xf8>
4002378c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023790:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023794:	e3100002 	tst	r0, #2
40023798:	1afffff6 	bne	40023778 <CyU3PI2cSetConfig+0xd4>
4002379c:	e1a00000 	nop			; (mov r0, r0)
400237a0:	e3560000 	cmp	r6, #0
400237a4:	0a000002 	beq	400237b4 <CyU3PI2cSetConfig+0x110>
400237a8:	ebffffac 	bl	40023660 <CyU3PI2cReleaseLock>
400237ac:	e1a00006 	mov	r0, r6
400237b0:	eaffffc3 	b	400236c4 <CyU3PI2cSetConfig+0x20>
400237b4:	e3a00000 	mov	r0, #0
400237b8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237bc:	e5810400 	str	r0, [r1, #1024]	; 0x400
400237c0:	e3a06000 	mov	r6, #0
400237c4:	e5940000 	ldr	r0, [r4]
400237c8:	e59f10d4 	ldr	r1, [pc, #212]	; 400238a4 <CyU3PI2cSetConfig+0x200>
400237cc:	e1500001 	cmp	r0, r1
400237d0:	8a000000 	bhi	400237d8 <CyU3PI2cSetConfig+0x134>
400237d4:	e3a06004 	mov	r6, #4
400237d8:	e5940004 	ldr	r0, [r4, #4]
400237dc:	e3500000 	cmp	r0, #0
400237e0:	0a000007 	beq	40023804 <CyU3PI2cSetConfig+0x160>
400237e4:	e3866001 	orr	r6, r6, #1
400237e8:	e3a00001 	mov	r0, #1
400237ec:	e59f10b4 	ldr	r1, [pc, #180]	; 400238a8 <CyU3PI2cSetConfig+0x204>
400237f0:	e5810000 	str	r0, [r1]
400237f4:	e1d400bc 	ldrh	r0, [r4, #12]
400237f8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400237fc:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023800:	ea000005 	b	4002381c <CyU3PI2cSetConfig+0x178>
40023804:	e3a00000 	mov	r0, #0
40023808:	e59f1098 	ldr	r1, [pc, #152]	; 400238a8 <CyU3PI2cSetConfig+0x204>
4002380c:	e5810000 	str	r0, [r1]
40023810:	e59f0094 	ldr	r0, [pc, #148]	; 400238ac <CyU3PI2cSetConfig+0x208>
40023814:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023818:	e5810414 	str	r0, [r1, #1044]	; 0x414
4002381c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023820:	e5806400 	str	r6, [r0, #1024]	; 0x400
40023824:	e59f0084 	ldr	r0, [pc, #132]	; 400238b0 <CyU3PI2cSetConfig+0x20c>
40023828:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002382c:	e5810440 	str	r0, [r1, #1088]	; 0x440
40023830:	e5940008 	ldr	r0, [r4, #8]
40023834:	e5810410 	str	r0, [r1, #1040]	; 0x410
40023838:	e3e00000 	mvn	r0, #0
4002383c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023840:	e1a00005 	mov	r0, r5
40023844:	eb0000a8 	bl	40023aec <CyU3PRegisterI2cCallBack>
40023848:	e3550000 	cmp	r5, #0
4002384c:	0a000003 	beq	40023860 <CyU3PI2cSetConfig+0x1bc>
40023850:	e59f005c 	ldr	r0, [pc, #92]	; 400238b4 <CyU3PI2cSetConfig+0x210>
40023854:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023858:	e581040c 	str	r0, [r1, #1036]	; 0x40c
4002385c:	ea000002 	b	4002386c <CyU3PI2cSetConfig+0x1c8>
40023860:	e3a00000 	mov	r0, #0
40023864:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023868:	e581040c 	str	r0, [r1, #1036]	; 0x40c
4002386c:	e3a00001 	mov	r0, #1
40023870:	e59f1040 	ldr	r1, [pc, #64]	; 400238b8 <CyU3PI2cSetConfig+0x214>
40023874:	e5810000 	str	r0, [r1]
40023878:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002387c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023880:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023884:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023888:	e5810400 	str	r0, [r1, #1024]	; 0x400
4002388c:	ebffff73 	bl	40023660 <CyU3PI2cReleaseLock>
40023890:	e3a00000 	mov	r0, #0
40023894:	eaffff8a 	b	400236c4 <CyU3PI2cSetConfig+0x20>
40023898:	40030ef8 	.word	0x40030ef8
4002389c:	40030f00 	.word	0x40030f00
400238a0:	00007fff 	.word	0x00007fff
400238a4:	000186a0 	.word	0x000186a0
400238a8:	40030ef0 	.word	0x40030ef0
400238ac:	0000ffff 	.word	0x0000ffff
400238b0:	00000502 	.word	0x00000502
400238b4:	000001c9 	.word	0x000001c9
400238b8:	40030ef4 	.word	0x40030ef4

Disassembly of section i.CyU3PI2cTransmitBytes:

400238bc <CyU3PI2cTransmitBytes>:
400238bc:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
400238c0:	e1a04000 	mov	r4, r0
400238c4:	e1a05001 	mov	r5, r1
400238c8:	e1a06002 	mov	r6, r2
400238cc:	e59f020c 	ldr	r0, [pc, #524]	; 40023ae0 <CyU3PI2cTransmitBytes+0x224>
400238d0:	e5900000 	ldr	r0, [r0]
400238d4:	e3500000 	cmp	r0, #0
400238d8:	1a000002 	bne	400238e8 <CyU3PI2cTransmitBytes+0x2c>
400238dc:	e3a00044 	mov	r0, #68	; 0x44
400238e0:	e28dd010 	add	sp, sp, #16
400238e4:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400238e8:	e59f01f4 	ldr	r0, [pc, #500]	; 40023ae4 <CyU3PI2cTransmitBytes+0x228>
400238ec:	e5900000 	ldr	r0, [r0]
400238f0:	e3500000 	cmp	r0, #0
400238f4:	0a000001 	beq	40023900 <CyU3PI2cTransmitBytes+0x44>
400238f8:	e3a00044 	mov	r0, #68	; 0x44
400238fc:	eafffff7 	b	400238e0 <CyU3PI2cTransmitBytes+0x24>
40023900:	e3550000 	cmp	r5, #0
40023904:	0a000001 	beq	40023910 <CyU3PI2cTransmitBytes+0x54>
40023908:	e3540000 	cmp	r4, #0
4002390c:	1a000001 	bne	40023918 <CyU3PI2cTransmitBytes+0x5c>
40023910:	e3a00041 	mov	r0, #65	; 0x41
40023914:	eafffff1 	b	400238e0 <CyU3PI2cTransmitBytes+0x24>
40023918:	e5d40008 	ldrb	r0, [r4, #8]
4002391c:	e3500000 	cmp	r0, #0
40023920:	0a000002 	beq	40023930 <CyU3PI2cTransmitBytes+0x74>
40023924:	e5d40008 	ldrb	r0, [r4, #8]
40023928:	e3500008 	cmp	r0, #8
4002392c:	da000001 	ble	40023938 <CyU3PI2cTransmitBytes+0x7c>
40023930:	e3a00040 	mov	r0, #64	; 0x40
40023934:	eaffffe9 	b	400238e0 <CyU3PI2cTransmitBytes+0x24>
40023938:	e3560000 	cmp	r6, #0
4002393c:	1a000001 	bne	40023948 <CyU3PI2cTransmitBytes+0x8c>
40023940:	e3a00000 	mov	r0, #0
40023944:	eaffffe5 	b	400238e0 <CyU3PI2cTransmitBytes+0x24>
40023948:	ebfffe45 	bl	40023264 <CyU3PI2cGetLock>
4002394c:	e1a07000 	mov	r7, r0
40023950:	e3570000 	cmp	r7, #0
40023954:	0a000001 	beq	40023960 <CyU3PI2cTransmitBytes+0xa4>
40023958:	e1a00007 	mov	r0, r7
4002395c:	eaffffdf 	b	400238e0 <CyU3PI2cTransmitBytes+0x24>
40023960:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023964:	e1a00000 	nop			; (mov r0, r0)
40023968:	e3a07000 	mov	r7, #0
4002396c:	e5d50000 	ldrb	r0, [r5]
40023970:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023974:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023978:	e3a02000 	mov	r2, #0
4002397c:	e1a01006 	mov	r1, r6
40023980:	e1a00004 	mov	r0, r4
40023984:	eb00005c 	bl	40023afc <MyI2cSendCommand>
40023988:	e1a07000 	mov	r7, r0
4002398c:	e3570000 	cmp	r7, #0
40023990:	0a000000 	beq	40023998 <CyU3PI2cTransmitBytes+0xdc>
40023994:	ea000043 	b	40023aa8 <CyU3PI2cTransmitBytes+0x1ec>
40023998:	e3a08001 	mov	r8, #1
4002399c:	ea000018 	b	40023a04 <CyU3PI2cTransmitBytes+0x148>
400239a0:	e59f9140 	ldr	r9, [pc, #320]	; 40023ae8 <CyU3PI2cTransmitBytes+0x22c>
400239a4:	ea000004 	b	400239bc <CyU3PI2cTransmitBytes+0x100>
400239a8:	e1b00009 	movs	r0, r9
400239ac:	e2499001 	sub	r9, r9, #1
400239b0:	1a000001 	bne	400239bc <CyU3PI2cTransmitBytes+0x100>
400239b4:	e3a07055 	mov	r7, #85	; 0x55
400239b8:	ea000004 	b	400239d0 <CyU3PI2cTransmitBytes+0x114>
400239bc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239c0:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239c4:	e38a1010 	orr	r1, sl, #16
400239c8:	e1100001 	tst	r0, r1
400239cc:	0afffff5 	beq	400239a8 <CyU3PI2cTransmitBytes+0xec>
400239d0:	e1a00000 	nop			; (mov r0, r0)
400239d4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239d8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239dc:	e110000a 	tst	r0, sl
400239e0:	0a000000 	beq	400239e8 <CyU3PI2cTransmitBytes+0x12c>
400239e4:	e3a0704a 	mov	r7, #74	; 0x4a
400239e8:	e3570000 	cmp	r7, #0
400239ec:	0a000000 	beq	400239f4 <CyU3PI2cTransmitBytes+0x138>
400239f0:	ea000005 	b	40023a0c <CyU3PI2cTransmitBytes+0x150>
400239f4:	e7d50008 	ldrb	r0, [r5, r8]
400239f8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400239fc:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023a00:	e2888001 	add	r8, r8, #1
40023a04:	e1580006 	cmp	r8, r6
40023a08:	3affffe4 	bcc	400239a0 <CyU3PI2cTransmitBytes+0xe4>
40023a0c:	e1a00000 	nop			; (mov r0, r0)
40023a10:	e1560008 	cmp	r6, r8
40023a14:	1a000013 	bne	40023a68 <CyU3PI2cTransmitBytes+0x1ac>
40023a18:	e3570000 	cmp	r7, #0
40023a1c:	1a000011 	bne	40023a68 <CyU3PI2cTransmitBytes+0x1ac>
40023a20:	e59f90c0 	ldr	r9, [pc, #192]	; 40023ae8 <CyU3PI2cTransmitBytes+0x22c>
40023a24:	ea000004 	b	40023a3c <CyU3PI2cTransmitBytes+0x180>
40023a28:	e1b00009 	movs	r0, r9
40023a2c:	e2499001 	sub	r9, r9, #1
40023a30:	1a000001 	bne	40023a3c <CyU3PI2cTransmitBytes+0x180>
40023a34:	e3a07055 	mov	r7, #85	; 0x55
40023a38:	ea000004 	b	40023a50 <CyU3PI2cTransmitBytes+0x194>
40023a3c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a40:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023a44:	e38a1008 	orr	r1, sl, #8
40023a48:	e1100001 	tst	r0, r1
40023a4c:	0afffff5 	beq	40023a28 <CyU3PI2cTransmitBytes+0x16c>
40023a50:	e1a00000 	nop			; (mov r0, r0)
40023a54:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a58:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023a5c:	e110000a 	tst	r0, sl
40023a60:	0a000000 	beq	40023a68 <CyU3PI2cTransmitBytes+0x1ac>
40023a64:	e3a0704a 	mov	r7, #74	; 0x4a
40023a68:	e3570000 	cmp	r7, #0
40023a6c:	0a000006 	beq	40023a8c <CyU3PI2cTransmitBytes+0x1d0>
40023a70:	e3a00001 	mov	r0, #1
40023a74:	ebfffd97 	bl	400230d8 <CyU3PI2cErrorRecovery>
40023a78:	e3500000 	cmp	r0, #0
40023a7c:	0a000002 	beq	40023a8c <CyU3PI2cTransmitBytes+0x1d0>
40023a80:	ebfffef6 	bl	40023660 <CyU3PI2cReleaseLock>
40023a84:	e3a00054 	mov	r0, #84	; 0x54
40023a88:	eaffff94 	b	400238e0 <CyU3PI2cTransmitBytes+0x24>
40023a8c:	e3570000 	cmp	r7, #0
40023a90:	0a000004 	beq	40023aa8 <CyU3PI2cTransmitBytes+0x1ec>
40023a94:	e59d000c 	ldr	r0, [sp, #12]
40023a98:	e2401001 	sub	r1, r0, #1
40023a9c:	e3500000 	cmp	r0, #0
40023aa0:	e58d100c 	str	r1, [sp, #12]
40023aa4:	1affffaf 	bne	40023968 <CyU3PI2cTransmitBytes+0xac>
40023aa8:	e1a00000 	nop			; (mov r0, r0)
40023aac:	e357004a 	cmp	r7, #74	; 0x4a
40023ab0:	1a000007 	bne	40023ad4 <CyU3PI2cTransmitBytes+0x218>
40023ab4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ab8:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023abc:	e31b0040 	tst	fp, #64	; 0x40
40023ac0:	0a000000 	beq	40023ac8 <CyU3PI2cTransmitBytes+0x20c>
40023ac4:	e3a07045 	mov	r7, #69	; 0x45
40023ac8:	e31b0080 	tst	fp, #128	; 0x80
40023acc:	0a000000 	beq	40023ad4 <CyU3PI2cTransmitBytes+0x218>
40023ad0:	e3a07055 	mov	r7, #85	; 0x55
40023ad4:	ebfffee1 	bl	40023660 <CyU3PI2cReleaseLock>
40023ad8:	e1a00007 	mov	r0, r7
40023adc:	eaffff7f 	b	400238e0 <CyU3PI2cTransmitBytes+0x24>
40023ae0:	40030ef4 	.word	0x40030ef4
40023ae4:	40030ef0 	.word	0x40030ef0
40023ae8:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023aec <CyU3PRegisterI2cCallBack>:
40023aec:	e59f1004 	ldr	r1, [pc, #4]	; 40023af8 <CyU3PRegisterI2cCallBack+0xc>
40023af0:	e5810000 	str	r0, [r1]
40023af4:	e12fff1e 	bx	lr
40023af8:	40030efc 	.word	0x40030efc

Disassembly of section i.MyI2cSendCommand:

40023afc <MyI2cSendCommand>:
40023afc:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023b00:	e1a04000 	mov	r4, r0
40023b04:	e1a06001 	mov	r6, r1
40023b08:	e1a07002 	mov	r7, r2
40023b0c:	e3a00000 	mov	r0, #0
40023b10:	e59f1108 	ldr	r1, [pc, #264]	; 40023c20 <MyI2cSendCommand+0x124>
40023b14:	e5810000 	str	r0, [r1]
40023b18:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b1c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b20:	e3100202 	tst	r0, #536870912	; 0x20000000
40023b24:	0a000006 	beq	40023b44 <MyI2cSendCommand+0x48>
40023b28:	e3a00000 	mov	r0, #0
40023b2c:	ebfffd69 	bl	400230d8 <CyU3PI2cErrorRecovery>
40023b30:	e1a05000 	mov	r5, r0
40023b34:	e3550000 	cmp	r5, #0
40023b38:	0a000001 	beq	40023b44 <MyI2cSendCommand+0x48>
40023b3c:	e1a00005 	mov	r0, r5
40023b40:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023b44:	e59f80d8 	ldr	r8, [pc, #216]	; 40023c24 <MyI2cSendCommand+0x128>
40023b48:	e1a00000 	nop			; (mov r0, r0)
40023b4c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b50:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b54:	e3100203 	tst	r0, #805306368	; 0x30000000
40023b58:	0a000002 	beq	40023b68 <MyI2cSendCommand+0x6c>
40023b5c:	e1b00008 	movs	r0, r8
40023b60:	e2488001 	sub	r8, r8, #1
40023b64:	1afffff8 	bne	40023b4c <MyI2cSendCommand+0x50>
40023b68:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b6c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b70:	e3100203 	tst	r0, #805306368	; 0x30000000
40023b74:	0a000001 	beq	40023b80 <MyI2cSendCommand+0x84>
40023b78:	e3a00045 	mov	r0, #69	; 0x45
40023b7c:	eaffffef 	b	40023b40 <MyI2cSendCommand+0x44>
40023b80:	e3a00000 	mov	r0, #0
40023b84:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b88:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023b8c:	e5d42008 	ldrb	r2, [r4, #8]
40023b90:	e1a01004 	mov	r1, r4
40023b94:	e1a0000d 	mov	r0, sp
40023b98:	ebff7f4d 	bl	400038d4 <CyU3PMemCopy>
40023b9c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023ba0:	e59d0000 	ldr	r0, [sp]
40023ba4:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023ba8:	e59d0004 	ldr	r0, [sp, #4]
40023bac:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023bb0:	e3a00000 	mov	r0, #0
40023bb4:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023bb8:	e3e00000 	mvn	r0, #0
40023bbc:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023bc0:	e3a00d07 	mov	r0, #448	; 0x1c0
40023bc4:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023bc8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023bcc:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023bd0:	e1d400ba 	ldrh	r0, [r4, #10]
40023bd4:	e5810418 	str	r0, [r1, #1048]	; 0x418
40023bd8:	e3570000 	cmp	r7, #0
40023bdc:	0a000004 	beq	40023bf4 <MyI2cSendCommand+0xf8>
40023be0:	e5d40008 	ldrb	r0, [r4, #8]
40023be4:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40023be8:	e38000e0 	orr	r0, r0, #224	; 0xe0
40023bec:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023bf0:	ea000003 	b	40023c04 <MyI2cSendCommand+0x108>
40023bf4:	e5d40008 	ldrb	r0, [r4, #8]
40023bf8:	e38000c0 	orr	r0, r0, #192	; 0xc0
40023bfc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c00:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023c04:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c08:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40023c0c:	e3800010 	orr	r0, r0, #16
40023c10:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c14:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023c18:	e3a00000 	mov	r0, #0
40023c1c:	eaffffc7 	b	40023b40 <MyI2cSendCommand+0x44>
40023c20:	40030f00 	.word	0x40030f00
40023c24:	00007fff 	.word	0x00007fff
