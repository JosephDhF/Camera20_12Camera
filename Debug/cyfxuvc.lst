
cyfxuvc.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .vectors      00001f50  00000100  00000100  00000100  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000f5e8  40003000  40003000  00003000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 i.CyU3PDevCheckDevStateStruct 00000150  400125e8  400125e8  000125e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 i.CyU3PDeviceCacheControl 00000098  40012738  40012738  00012738  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 i.CyU3PDeviceInit 0000046c  400127d0  400127d0  000127d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 i.CyU3PSysSetupMMU 0000002c  40012c3c  40012c3c  00012c3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 i.CyU3PSysWatchDogConfigure 000000f8  40012c68  40012c68  00012c68  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 i.CyU3PInitPageTable 0000000c  40012d60  40012d60  00012d60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 i.CyU3PSysBarrierSync 0000000c  40012d6c  40012d6c  00012d6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 i.CyU3PSysDisableCacheMMU 00000028  40012d78  40012d78  00012d78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 i.CyU3PSysDisableDCache 00000010  40012da0  40012da0  00012da0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 i.CyU3PSysDisableICache 00000010  40012db0  40012db0  00012db0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 i.CyU3PSysEnableDCache 00000010  40012dc0  40012dc0  00012dc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 i.CyU3PSysEnableICache 00000014  40012dd0  40012dd0  00012dd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 i.CyU3PSysEnableMMU 00000010  40012de4  40012de4  00012de4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 i.CyU3PSysFlushICache 0000000c  40012df4  40012df4  00012df4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 i.CyU3PSysInitTCMs 00000014  40012e00  40012e00  00012e00  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 i.CyU3PSysLoadTLB 0000003c  40012e14  40012e14  00012e14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 i.CyU3PSysLockTLBEntry 00000028  40012e50  40012e50  00012e50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 i.CyU3PDeviceConfigureIOMatrix 00000038  40012e78  40012e78  00012e78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 i.CyU3PDeviceGpioOverride 00000034  40012eb0  40012eb0  00012eb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 i.CyU3PIsGpioComplexIOConfigured 00000018  40012ee4  40012ee4  00012ee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 i.CyU3PIsGpioSimpleIOConfigured 00000018  40012efc  40012efc  00012efc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 i.CyU3PIsGpioValid 0000001c  40012f14  40012f14  00012f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 i.CyU3PIsLppIOConfigured 00000084  40012f30  40012f30  00012f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 i.CyU3PDebugApplicationDefine 000000d4  40012fb4  40012fb4  00012fb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 i.CyU3PDebugChannelReset 00000048  40013088  40013088  00013088  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 i.CyU3PDebugInit 00000190  400130d0  400130d0  000130d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 i.CyU3PDebugIntToStr 00000080  40013260  40013260  00013260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 i.CyU3PDebugPreamble 00000010  400132e0  400132e0  000132e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 i.CyU3PDebugPrint 00000234  400132f0  400132f0  000132f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 i.CyU3PDebugThreadEntry 000000f8  40013524  40013524  00013524  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 i.MyDebugSNPrint 00000298  4001361c  4001361c  0001361c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 i.CyU3PBusyWait 00000038  400138b4  400138b4  000138b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 i.CyU3PComputeChecksum 0000005c  400138ec  400138ec  000138ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 i.__aeabi_memclr4 00000020  40013948  40013948  00013948  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 i.__aeabi_memcpy 0000005c  40013968  40013968  00013968  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 i.__aeabi_memcpy4 00000024  400139c4  400139c4  000139c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 i.__aeabi_memset 00000020  400139e8  400139e8  000139e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 i.CyU3PApplicationDefine 000000f4  40013a08  40013a08  00013a08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 i.CyU3PSysCheckBootState 0000008c  40013afc  40013afc  00013afc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 i.CyU3PSysFwMsgHandler 00000004  40013b88  40013b88  00013b88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 i.CyU3PSysModuleInitCompleteEvt 00000024  40013b8c  40013b8c  00013b8c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 i.CyU3PSysThreadEntry 00000114  40013bb0  40013bb0  00013bb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 i.CyU3PSibApplicationDefine 000000a0  40013cc4  40013cc4  00013cc4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 i.CyU3PSibInitIntfParams 00000058  40013d64  40013d64  00013d64  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 i.CyU3PSibThreadEntry 00000050  40013dbc  40013dbc  00013dbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 i.CyU3PGpioSetClock 000000fc  40013e0c  40013e0c  00013e0c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 i.CyU3PI2cSetClock 000000b0  40013f08  40013f08  00013f08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 i.CyU3PLppApplicationDefine 000000b4  40013fb8  40013fb8  00013fb8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 i.CyU3PLppEventSend 00000028  4001406c  4001406c  0001406c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 i.CyU3PLppGpioBlockIsOn 00000010  40014094  40014094  00014094  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 i.CyU3PLppInit 000001a0  400140a4  400140a4  000140a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 i.CyU3PLppRestoreState 00000118  40014244  40014244  00014244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 i.CyU3PLppSocketInit 00000050  4001435c  4001435c  0001435c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 i.CyU3PLppThreadEntry 00000170  400143ac  400143ac  000143ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 i.CyU3PUartSetClock 000000d8  4001451c  4001451c  0001451c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 i.CyU3UpdateLppActiveInfo 00000084  400145f4  400145f4  000145f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 i.CyFx3DevClearSwInterrupt 00000018  40014678  40014678  00014678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 i.CyFx3DevIOConfigure 00000180  40014690  40014690  00014690  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 i.CyFx3DevIOIsGpio 00000040  40014810  40014810  00014810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 i.CyFx3DevIOIsI2cConfigured 00000010  40014850  40014850  00014850  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 i.CyFx3DevIOIsI2sConfigured 00000010  40014860  40014860  00014860  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 i.CyFx3DevIOIsSpiConfigured 00000010  40014870  40014870  00014870  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 i.CyFx3DevIOIsUartConfigured 00000010  40014880  40014880  00014880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 i.CyFx3DevIOSelectGpio 000000d0  40014890  40014890  00014890  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 i.CyFx3DevIOSetConfig 00000230  40014960  40014960  00014960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 i.CyFx3DevIdentifyPart 00000090  40014b90  40014b90  00014b90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 i.CyFx3DevInitPageTables 00000074  40014c20  40014c20  00014c20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 i.CyFx3DevIsGpif32Supported 00000028  40014c94  40014c94  00014c94  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 i.CyFx3DevIsGpifConfigurable 0000003c  40014cbc  40014cbc  00014cbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 i.CyFx3DevIsGpifSupported 00000028  40014cf8  40014cf8  00014cf8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 72 i.CyFx3DevIsI2sSupported 00000028  40014d20  40014d20  00014d20  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 73 i.CyFx3DevIsOtgSupported 00000028  40014d48  40014d48  00014d48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 74 i.CyFx3DevIsSib0Supported 00000028  40014d70  40014d70  00014d70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 75 i.CyFx3DevIsSib1Supported 00000028  40014d98  40014d98  00014d98  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 76 i.CyFx3DevIsUsb3Supported 00000028  40014dc0  40014dc0  00014dc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 77 i.CyFx3BusyWait 0000002c  40014de8  40014de8  00014de8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 78 i.CyFx3PibDllEnable 00000068  40014e14  40014e14  00014e14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 79 i.CyFx3PibGetDllStatus 00000014  40014e7c  40014e7c  00014e7c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 80 i.CyFx3PibPowerOn 00000054  40014e90  40014e90  00014e90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 81 i.CyU3PDmaSocketDisable 00000060  40014ee4  40014ee4  00014ee4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 82 i.CyU3PDmaSocketGetConfig 000000a0  40014f44  40014f44  00014f44  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 83 i.CyU3PDmaSocketIsValidConsumer 000000e0  40014fe4  40014fe4  00014fe4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 84 i.CyU3PDmaSocketIsValidProducer 000000e0  400150c4  400150c4  000150c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 85 i.CyU3PDmaSocketSendEvent 00000048  400151a4  400151a4  000151a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 86 i.CyU3PDmaSocketSetConfig 000000ac  400151ec  400151ec  000151ec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 87 i.CyU3PDmaSocketSetWrapUp 00000044  40015298  40015298  00015298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 88 i.CyU3PDmaSocketUpdateStatus 00000074  400152dc  400152dc  000152dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 89 i.CyU3PDmaUpdateSocketSuspendOption 00000164  40015350  40015350  00015350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 90 i.CyU3PDmaChannelAcquireLock 00000054  400154b4  400154b4  000154b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 91 i.CyU3PDmaChannelCacheControl 00000054  40015508  40015508  00015508  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 92 i.CyU3PDmaChannelCommitBuffer 000002f0  4001555c  4001555c  0001555c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 93 i.CyU3PDmaChannelConfigure_TypeAuto 00000090  4001584c  4001584c  0001584c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 94 i.CyU3PDmaChannelConfigure_TypeManual 0000026c  400158dc  400158dc  000158dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 95 i.CyU3PDmaChannelCreate 000003e8  40015b48  40015b48  00015b48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 96 i.CyU3PDmaChannelDestroy 000000b0  40015f30  40015f30  00015f30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 97 i.CyU3PDmaChannelDestroy_TypeAuto 000000d4  40015fe0  40015fe0  00015fe0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 98 i.CyU3PDmaChannelDestroy_TypeManual 000001b4  400160b4  400160b4  000160b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 99 i.CyU3PDmaChannelGetBuffer 00000334  40016268  40016268  00016268  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
100 i.CyU3PDmaChannelReset 00000120  4001659c  4001659c  0001659c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
101 i.CyU3PDmaChannelReset_TypeAuto 0000006c  400166bc  400166bc  000166bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
102 i.CyU3PDmaChannelReset_TypeManual 000000f8  40016728  40016728  00016728  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
103 i.CyU3PDmaChannelSetXfer 000000dc  40016820  40016820  00016820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
104 i.CyU3PDmaChannelSetXfer_TypeAuto 000001a0  400168fc  400168fc  000168fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
105 i.CyU3PDmaChannelSetXfer_TypeManual 000001ec  40016a9c  40016a9c  00016a9c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
106 i.CyU3PDmaChannelSetupRecvBuffer 00000220  40016c88  40016c88  00016c88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
107 i.CyU3PDmaChannelSetupSendBuffer 00000238  40016ea8  40016ea8  00016ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
108 i.CyU3PDmaChannelWaitForCompletion 00000130  400170e0  400170e0  000170e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
109 i.CyU3PDmaChannelWaitForRecvBuffer 000001a4  40017210  40017210  00017210  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
110 i.CyU3PDmaConfigureSockets_TypeAuto 00000100  400173b4  400173b4  000173b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
111 i.CyU3PDmaConfigureSockets_TypeManual 0000011c  400174b4  400174b4  000174b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
112 i.CyU3PDmaMultiChannelAcquireLock 00000054  400175d0  400175d0  000175d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
113 i.CyU3PDmaMultiChannelCommitBuffer 000003c0  40017624  40017624  00017624  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
114 i.CyU3PDmaMultiChannelConfigure_TypeManyToOne 000002ec  400179e4  400179e4  000179e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
115 i.CyU3PDmaMultiChannelConfigure_TypeOneToMany 000002f8  40017cd0  40017cd0  00017cd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
116 i.CyU3PDmaMultiChannelCreate 00000744  40017fc8  40017fc8  00017fc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
117 i.CyU3PDmaMultiChannelReset 00000154  4001870c  4001870c  0001870c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
118 i.CyU3PDmaMultiChannelReset_TypeManyToOne 00000130  40018860  40018860  00018860  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
119 i.CyU3PDmaMultiChannelReset_TypeOneToMany 00000130  40018990  40018990  00018990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
120 i.CyU3PDmaMultiChannelSetXfer 0000013c  40018ac0  40018ac0  00018ac0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
121 i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne 00000270  40018bfc  40018bfc  00018bfc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
122 i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany 0000025c  40018e6c  40018e6c  00018e6c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
123 i.CyU3PDmaMultiConfigureSockets_TypeManyToOne 00000180  400190c8  400190c8  000190c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
124 i.CyU3PDmaMultiConfigureSockets_TypeOneToMany 00000188  40019248  40019248  00019248  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
125 i.CyU3PDmaMultiChannelSetWrapUp 000000b4  400193d0  400193d0  000193d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
126 i.CyU3PDmaApplicationDefine 000000b8  40019484  40019484  00019484  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
127 i.CyU3PDmaChannelHandleError 0000009c  4001953c  4001953c  0001953c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
128 i.CyU3PDmaInit 000000a0  400195d8  400195d8  000195d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
129 i.CyU3PDmaIntHandler_TypeAuto 0000036c  40019678  40019678  00019678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
130 i.CyU3PDmaIntHandler_TypeManual 00000590  400199e4  400199e4  000199e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
131 i.CyU3PDmaIntHandler_TypeManyToOne 000005e0  40019f74  40019f74  00019f74  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
132 i.CyU3PDmaIntHandler_TypeOneToMany 00000688  4001a554  4001a554  0001a554  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
133 i.CyU3PDmaIsSockAvlEnReqd 00000064  4001abdc  4001abdc  0001abdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
134 i.CyU3PDmaMsgSend 00000050  4001ac40  4001ac40  0001ac40  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
135 i.CyU3PDmaMultiChannelHandleError 000000f8  4001ac90  4001ac90  0001ac90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
136 i.CyU3PDmaThreadEntry 00000118  4001ad88  4001ad88  0001ad88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
137 i.CyU3PGpifInit 0000007c  4001aea0  4001aea0  0001aea0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
138 i.CyU3PPibApplicationDefine 00000134  4001af1c  4001af1c  0001af1c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
139 i.CyU3PPibInit 00000164  4001b050  4001b050  0001b050  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
140 i.CyU3PPibSocketInit 00000050  4001b1b4  4001b1b4  0001b1b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
141 i.CyU3PPibThreadEntry 000002b0  4001b204  4001b204  0001b204  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
142 i.CyU3PPmmcInit 00000184  4001b4b4  4001b4b4  0001b4b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
143 i.CyU3PMboxReset 00000040  4001b638  4001b638  0001b638  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
144 i.CyU3PGpifConfigure 000000b8  4001b678  4001b678  0001b678  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
145 i.CyU3PGpifDisable 00000090  4001b730  4001b730  0001b730  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
146 i.CyU3PGpifLoad 00000288  4001b7c0  4001b7c0  0001b7c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
147 i.CyU3PGpifRegisterCallback 00000010  4001ba48  4001ba48  0001ba48  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
148 i.CyU3PGpifSMStart 00000154  4001ba58  4001ba58  0001ba58  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
149 i.CyU3PGpifSMSwitch 00000180  4001bbac  4001bbac  0001bbac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
150 i.CyU3PConnectState 00000264  4001bd2c  4001bd2c  0001bd2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
151 i.CyU3POtgGetMode 00000010  4001bf90  4001bf90  0001bf90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
152 i.CyU3POtgIsDeviceMode 000000cc  4001bfa0  4001bfa0  0001bfa0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
153 i.CyU3POtgIsHostMode 000000c0  4001c06c  4001c06c  0001c06c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
154 i.CyU3POtgIsStarted 00000010  4001c12c  4001c12c  0001c12c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
155 i.CyU3PSetEpConfig 000005f8  4001c13c  4001c13c  0001c13c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
156 i.CyU3PSetUsbCoreClock 00000084  4001c734  4001c734  0001c734  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
157 i.CyU3PUibInit 000001c8  4001c7b8  4001c7b8  0001c7b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
158 i.CyU3PUsbAckSetup 00000124  4001c980  4001c980  0001c980  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
159 i.CyU3PUsbCreateDmaChannels 00000148  4001caa4  4001caa4  0001caa4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
160 i.CyU3PUsbEnableEpInterrupts 00000174  4001cbec  4001cbec  0001cbec  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
161 i.CyU3PUsbFlushEp 000000cc  4001cd60  4001cd60  0001cd60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
162 i.CyU3PUsbGetEP0Data 000001c8  4001ce2c  4001ce2c  0001ce2c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
163 i.CyU3PUsbGetSpeed 00000010  4001cff4  4001cff4  0001cff4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
164 i.CyU3PUsbHostIsStarted 00000010  4001d004  4001d004  0001d004  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
165 i.CyU3PUsbIsNewCtrlRqtRecvd 0000004c  4001d014  4001d014  0001d014  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
166 i.CyU3PUsbLoadBootloaderDescs 0000006c  4001d060  4001d060  0001d060  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
167 i.CyU3PUsbMapStream 0000007c  4001d0cc  4001d0cc  0001d0cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
168 i.CyU3PUsbOtgVbusChangeHandler 000000b4  4001d148  4001d148  0001d148  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
169 i.CyU3PUsbPhyDisable 000001d8  4001d1fc  4001d1fc  0001d1fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
170 i.CyU3PUsbPhyEnable 00000320  4001d3d4  4001d3d4  0001d3d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
171 i.CyU3PUsbPowerOn 0000000c  4001d6f4  4001d6f4  0001d6f4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
172 i.CyU3PUsbResetEp 000000e4  4001d700  4001d700  0001d700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
173 i.CyU3PUsbSendEP0Data 000001d8  4001d7e4  4001d7e4  0001d7e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
174 i.CyU3PUsbSendErdy 000000f4  4001d9bc  4001d9bc  0001d9bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
175 i.CyU3PUsbSendNrdy 000000f0  4001dab0  4001dab0  0001dab0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
176 i.CyU3PUsbSetDesc 000001d8  4001dba0  4001dba0  0001dba0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
177 i.CyU3PUsbSetEpNak 000001c4  4001dd78  4001dd78  0001dd78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
178 i.CyU3PUsbSetLinkPowerState 00000154  4001df3c  4001df3c  0001df3c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
179 i.CyU3PUsbStall 00000390  4001e090  4001e090  0001e090  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
180 i.CyU3PUsbStart 00000378  4001e420  4001e420  0001e420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
181 i.GetUsbLinkActive 00000078  4001e798  4001e798  0001e798  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
182 i.CyU3PHsGrantIntrHandler 00000078  4001e810  4001e810  0001e810  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
183 i.CyU3PUibApplicationDefine 0000019c  4001e888  4001e888  0001e888  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
184 i.CyU3PUibDevCtrlEvtHandler 000001e4  4001ea24  4001ea24  0001ea24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
185 i.CyU3PUibEPEvtHandler 00000270  4001ec08  4001ec08  0001ec08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
186 i.CyU3PUibInitVars 000000b8  4001ee78  4001ee78  0001ee78  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
187 i.CyU3PUibLnkErrClrTimerCb 00000030  4001ef30  4001ef30  0001ef30  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
188 i.CyU3PUibLnkIntrEvtHandler 000000a0  4001ef60  4001ef60  0001ef60  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
189 i.CyU3PUibProtEpIntrEvtHandler 000003e0  4001f000  4001f000  0001f000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
190 i.CyU3PUibProtIntrEvtHandler 000000ec  4001f3e0  4001f3e0  0001f3e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
191 i.CyU3PUibSendDescr 0000061c  4001f4cc  4001f4cc  0001f4cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
192 i.CyU3PUibSocketInit 0000009c  4001fae8  4001fae8  0001fae8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
193 i.CyU3PUibStatusTimerCb 00000070  4001fb84  4001fb84  0001fb84  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
194 i.CyU3PUibThreadEntry 0000007c  4001fbf4  4001fbf4  0001fbf4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
195 i.CyU3PUibVbusChangeHandler 00000174  4001fc70  4001fc70  0001fc70  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
196 i.CyU3PUsbAddToEventLog 0000006c  4001fde4  4001fde4  0001fde4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
197 i.CyU3PUsbCheckUsb3Disconnect 00000234  4001fe50  4001fe50  0001fe50  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
198 i.CyU3PUsbDescInit 0000001c  40020084  40020084  00020084  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
199 i.CyU3PUsbEpPrepare 000001f8  400200a0  400200a0  000200a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
200 i.CyU3PUsbFallBackToUsb2 00000274  40020298  40020298  00020298  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
201 i.CyU3PUsbGetEpStatus 000000b8  4002050c  4002050c  0002050c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
202 i.CyU3PUsbHandleClearFeature 00000118  400205c4  400205c4  000205c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
203 i.CyU3PUsbHandleEvents 000003fc  400206dc  400206dc  000206dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
204 i.CyU3PUsbHandleGetStatus 000000f8  40020ad8  40020ad8  00020ad8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
205 i.CyU3PUsbHandleSetFeature 0000010c  40020bd0  40020bd0  00020bd0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
206 i.CyU3PUsbReEnableUsb3 000001cc  40020cdc  40020cdc  00020cdc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
207 i.CyU3PUsbRegisterEventCallback 00000054  40020ea8  40020ea8  00020ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
208 i.CyU3PUsbRegisterSetupCallback 00000060  40020efc  40020efc  00020efc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
209 i.CyU3PUsbResetHandler 00000144  40020f5c  40020f5c  00020f5c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
210 i.CyU3PUsbResumeHandler 00000050  400210a0  400210a0  000210a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
211 i.CyU3PUsbSSConnecthandler 000001f4  400210f0  400210f0  000210f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
212 i.CyU3PUsbSSDisConnecthandler 00000190  400212e4  400212e4  000212e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
213 i.CyU3PUsbSSReset 00000198  40021474  40021474  00021474  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
214 i.CyU3PUsbSendCompliancePatterns 00000210  4002160c  4002160c  0002160c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
215 i.CyU3PUsbSetupCommand 0000080c  4002181c  4002181c  0002181c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
216 i.CyU3PUsbSuspendHandler 00000050  40022028  40022028  00022028  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
217 i.HandleVbusOffEvent 00000104  40022078  40022078  00022078  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
218 i.CyU3POsTimerInit 00000114  4002217c  4002217c  0002217c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
219 i.CyU3PVicClearInt 0000000c  40022290  40022290  00022290  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
220 i.CyU3PVicDisableAllInterrupts 00000010  4002229c  4002229c  0002229c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
221 i.CyU3PVicDisableInt 00000014  400222ac  400222ac  000222ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
222 i.CyU3PVicEnableInt 00000014  400222c0  400222c0  000222c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
223 i.CyU3PVicEnableInterrupts 0000000c  400222d4  400222d4  000222d4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
224 i.CyU3PVicInit 00000040  400222e0  400222e0  000222e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
225 i.CyFx3Usb2PhySetup 00000018  40022320  40022320  00022320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
226 i.CyFx3Usb3LnkRelaxHpTimeout 00000018  40022338  40022338  00022338  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
227 i.CyFx3Usb3LnkSetup 0000003c  40022350  40022350  00022350  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
228 i.CyFx3Usb3SendTP 00000030  4002238c  4002238c  0002238c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
229 i.CyFx3UsbDmaPrefetchEnable 0000002c  400223bc  400223bc  000223bc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
230 i.CyFx3UsbPowerOn 00000080  400223e8  400223e8  000223e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
231 i.CyFx3UsbWritePhyReg 00000094  40022468  40022468  00022468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
232 i.CyU3PDmaDscrChainCreate 00000150  400224fc  400224fc  000224fc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
233 i.CyU3PDmaDscrChainDestroy 0000008c  4002264c  4002264c  0002264c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
234 i.CyU3PDmaDscrGet 000000e0  400226d8  400226d8  000226d8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
235 i.CyU3PDmaDscrGetFreeCount 00000010  400227b8  400227b8  000227b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
236 i.CyU3PDmaDscrListCreate 00000054  400227c8  400227c8  000227c8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
237 i.CyU3PDmaDscrPut 0000009c  4002281c  4002281c  0002281c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
238 i.CyU3PDmaDscrGetConfig 0000006c  400228b8  400228b8  000228b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
239 i.CyU3PDmaDscrSetConfig 0000006c  40022924  40022924  00022924  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
240 i.CyU3PDmaIntHandler 00000178  40022990  40022990  00022990  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
241 i.CyU3PGpioInit 0000011c  40022b08  40022b08  00022b08  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
242 i.CyU3PGpioInt_Handler 000001c4  40022c24  40022c24  00022c24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
243 i.CyU3PGpioSetSimpleConfig 000000f0  40022de8  40022de8  00022de8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
244 i.CyU3PGpioSetValue 000000d8  40022ed8  40022ed8  00022ed8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
245 i.CyU3PGpioSimpleGetValue 00000084  40022fb0  40022fb0  00022fb0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
246 i.CyU3PRegisterGpioCallBack 00000010  40023034  40023034  00023034  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
247 i.CyU3PRegisterUartCallBack 00000010  40023044  40023044  00023044  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
248 i.CyU3PUartGetLock 0000005c  40023054  40023054  00023054  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
249 i.CyU3PUartInit 000000e8  400230b0  400230b0  000230b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
250 i.CyU3PUartInt_ThreadHandler 000000b8  40023198  40023198  00023198  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
251 i.CyU3PUartReleaseLock 00000044  40023250  40023250  00023250  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
252 i.CyU3PUartSetConfig 0000021c  40023294  40023294  00023294  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
253 i.CyU3PUartTxSetBlockXfer 00000050  400234b0  400234b0  000234b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
254 i.CyU3PI2cErrorRecovery 0000018c  40023500  40023500  00023500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
255 i.CyU3PI2cGetLock 0000005c  4002368c  4002368c  0002368c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
256 i.CyU3PI2cInit 000000f4  400236e8  400236e8  000236e8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
257 i.CyU3PI2cInt_ThreadHandler 000000f0  400237dc  400237dc  000237dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
258 i.CyU3PI2cReceiveBytes 000001bc  400238cc  400238cc  000238cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
259 i.CyU3PI2cReleaseLock 00000044  40023a88  40023a88  00023a88  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
260 i.CyU3PI2cSetConfig 00000218  40023acc  40023acc  00023acc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
261 i.CyU3PI2cTransmitBytes 00000230  40023ce4  40023ce4  00023ce4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
262 i.CyU3PRegisterI2cCallBack 00000010  40023f14  40023f14  00023f14  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
263 i.MyI2cSendCommand 0000012c  40023f24  40023f24  00023f24  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
264 .data         00000f04  40030000  40030000  00028000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
265 .bss          0000235c  40030f20  40030f20  00028f04  2**5
                  ALLOC
266 .debug_abbrev 0000115c  00000000  00000000  00028f04  2**0
                  CONTENTS, READONLY, DEBUGGING
267 .debug_info   0007d3d4  00000000  00000000  0002a060  2**0
                  CONTENTS, READONLY, DEBUGGING
268 .debug_line   00023088  00000000  00000000  000a7434  2**0
                  CONTENTS, READONLY, DEBUGGING
269 .comment      0000bea5  00000000  00000000  000ca4bc  2**0
                  CONTENTS, READONLY
270 .ARM.attributes 00000034  00000000  00000000  000d6361  2**0
                  CONTENTS, READONLY
271 .arm_vfe_header 000001b0  00000000  00000000  000d6398  2**2
                  CONTENTS, READONLY
272 .debug_pubtypes 00000c09  00000000  00000000  000d6548  2**0
                  CONTENTS, READONLY, DEBUGGING
273 .debug_str    000042ec  00000000  00000000  000d7151  2**0
                  CONTENTS, READONLY, DEBUGGING
274 .debug_loc    0000e79d  00000000  00000000  000db43d  2**0
                  CONTENTS, READONLY, DEBUGGING
275 .debug_pubnames 00007668  00000000  00000000  000e9bda  2**0
                  CONTENTS, READONLY, DEBUGGING
276 .debug_aranges 000000a0  00000000  00000000  000f1248  2**3
                  CONTENTS, READONLY, DEBUGGING
277 .debug_frame  0000a72c  00000000  00000000  000f12e8  2**2
                  CONTENTS, READONLY, DEBUGGING
278 .debug_ranges 00000578  00000000  00000000  000fba14  2**0
                  CONTENTS, READONLY, DEBUGGING
279 .debug_macinfo 00110c6c  00000000  00000000  000fbf8c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .vectors:

00000100 <CyU3PGctlCoreIntHandler>:
     100:	e59f0080 	ldr	r0, [pc, #128]	; 188 <CyU3PSwiIntHandler+0x18>
     104:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     108:	e3100102 	tst	r0, #-2147483648	; 0x80000000
     10c:	0a00000e 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     110:	e59f0074 	ldr	r0, [pc, #116]	; 18c <CyU3PSwiIntHandler+0x1c>
     114:	e590000c 	ldr	r0, [r0, #12]
     118:	e3100080 	tst	r0, #128	; 0x80
     11c:	1a000003 	bne	130 <CyU3PGctlCoreIntHandler+0x30>
     120:	e59f0064 	ldr	r0, [pc, #100]	; 18c <CyU3PSwiIntHandler+0x1c>
     124:	e590000c 	ldr	r0, [r0, #12]
     128:	e3100c01 	tst	r0, #256	; 0x100
     12c:	0a000006 	beq	14c <CyU3PGctlCoreIntHandler+0x4c>
     130:	e3a00000 	mov	r0, #0
     134:	e59f1054 	ldr	r1, [pc, #84]	; 190 <CyU3PSwiIntHandler+0x20>
     138:	e5810014 	str	r0, [r1, #20]
     13c:	e1c10000 	bic	r0, r1, r0
     140:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
     144:	e3c00010 	bic	r0, r0, #16
     148:	e5810408 	str	r0, [r1, #1032]	; 0x408
     14c:	e3a00000 	mov	r0, #0
     150:	e59f1034 	ldr	r1, [pc, #52]	; 18c <CyU3PSwiIntHandler+0x1c>
     154:	e5810004 	str	r0, [r1, #4]
     158:	e59f0034 	ldr	r0, [pc, #52]	; 194 <CyU3PSwiIntHandler+0x24>
     15c:	e581000c 	str	r0, [r1, #12]
     160:	e3a00001 	mov	r0, #1
     164:	e3a01000 	mov	r1, #0
     168:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     16c:	e12fff1e 	bx	lr

00000170 <CyU3PSwiIntHandler>:
     170:	e92d4010 	push	{r4, lr}
     174:	e3a00001 	mov	r0, #1
     178:	e3a01000 	mov	r1, #0
     17c:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
     180:	eb000796 	bl	1fe0 <__CyFx3DevClearSwInterrupt_veneer>
     184:	e8bd8010 	pop	{r4, pc}
     188:	e0032000 	.word	0xe0032000
     18c:	e0050000 	.word	0xe0050000
     190:	e0031000 	.word	0xe0031000
     194:	00003fff 	.word	0x00003fff

00000198 <CyU3PUartIntHandler>:
     198:	e92d4010 	push	{r4, lr}
     19c:	e3a00012 	mov	r0, #18
     1a0:	eb000788 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1a4:	e3a00040 	mov	r0, #64	; 0x40
     1a8:	eb00079c 	bl	2020 <__CyU3PLppEventSend_veneer>
     1ac:	e8bd8010 	pop	{r4, pc}

000001b0 <CyU3PI2cIntHandler>:
     1b0:	e92d4010 	push	{r4, lr}
     1b4:	e3a0000f 	mov	r0, #15
     1b8:	eb000782 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1bc:	e3a00020 	mov	r0, #32
     1c0:	eb000796 	bl	2020 <__CyU3PLppEventSend_veneer>
     1c4:	e8bd8010 	pop	{r4, pc}

000001c8 <CyU3PI2sIntHandler>:
     1c8:	e92d4010 	push	{r4, lr}
     1cc:	e3a00010 	mov	r0, #16
     1d0:	eb00077c 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     1d4:	e3a00010 	mov	r0, #16
     1d8:	eb000790 	bl	2020 <__CyU3PLppEventSend_veneer>
     1dc:	e8bd8010 	pop	{r4, pc}

000001e0 <CyU3PGpioCoreIntHandler>:
     1e0:	e92d4010 	push	{r4, lr}
     1e4:	e59f003c 	ldr	r0, [pc, #60]	; 228 <CyU3PSpiIntHandler+0x18>
     1e8:	e5900010 	ldr	r0, [r0, #16]
     1ec:	e3500000 	cmp	r0, #0
     1f0:	0a000003 	beq	204 <CyU3PGpioCoreIntHandler+0x24>
     1f4:	e59f102c 	ldr	r1, [pc, #44]	; 228 <CyU3PSpiIntHandler+0x18>
     1f8:	e5910010 	ldr	r0, [r1, #16]
     1fc:	e12fff30 	blx	r0
     200:	ea000001 	b	20c <CyU3PGpioCoreIntHandler+0x2c>
     204:	e3a00013 	mov	r0, #19
     208:	eb00076e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     20c:	e8bd8010 	pop	{r4, pc}

00000210 <CyU3PSpiIntHandler>:
     210:	e92d4010 	push	{r4, lr}
     214:	e3a00011 	mov	r0, #17
     218:	eb00076a 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
     21c:	e3a00080 	mov	r0, #128	; 0x80
     220:	eb00077e 	bl	2020 <__CyU3PLppEventSend_veneer>
     224:	e8bd8010 	pop	{r4, pc}
     228:	40031608 	.word	0x40031608

0000022c <CyU3PPmmcIntHandler>:
     22c:	e92d4070 	push	{r4, r5, r6, lr}
     230:	e59f08b8 	ldr	r0, [pc, #2232]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     234:	e590000c 	ldr	r0, [r0, #12]
     238:	e59f18b0 	ldr	r1, [pc, #2224]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     23c:	e5911010 	ldr	r1, [r1, #16]
     240:	e0006001 	and	r6, r0, r1
     244:	e59f08a4 	ldr	r0, [pc, #2212]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     248:	e580600c 	str	r6, [r0, #12]
     24c:	e3160001 	tst	r6, #1
     250:	0a000019 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     254:	e59f0898 	ldr	r0, [pc, #2200]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     258:	e5d00000 	ldrb	r0, [r0]
     25c:	e350000b 	cmp	r0, #11
     260:	1a000003 	bne	274 <CyU3PPmmcIntHandler+0x48>
     264:	e3a00003 	mov	r0, #3
     268:	e59f1884 	ldr	r1, [pc, #2180]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     26c:	e5c10000 	strb	r0, [r1]
     270:	ea000003 	b	284 <CyU3PPmmcIntHandler+0x58>
     274:	eb00076d 	bl	2030 <__CyU3PMboxReset_veneer>
     278:	e3a00000 	mov	r0, #0
     27c:	e59f1870 	ldr	r1, [pc, #2160]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     280:	e5c10000 	strb	r0, [r1]
     284:	e59f0864 	ldr	r0, [pc, #2148]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     288:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     28c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     290:	e59f1858 	ldr	r1, [pc, #2136]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     294:	e5810070 	str	r0, [r1, #112]	; 0x70
     298:	e59f0858 	ldr	r0, [pc, #2136]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     29c:	e5900000 	ldr	r0, [r0]
     2a0:	e3500000 	cmp	r0, #0
     2a4:	0a000004 	beq	2bc <CyU3PPmmcIntHandler+0x90>
     2a8:	e3a01000 	mov	r1, #0
     2ac:	e1a00001 	mov	r0, r1
     2b0:	e59f2840 	ldr	r2, [pc, #2112]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     2b4:	e5922000 	ldr	r2, [r2]
     2b8:	e12fff32 	blx	r2
     2bc:	e3160002 	tst	r6, #2
     2c0:	0a00000f 	beq	304 <CyU3PPmmcIntHandler+0xd8>
     2c4:	e59f0828 	ldr	r0, [pc, #2088]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2c8:	e5d00000 	ldrb	r0, [r0]
     2cc:	e350000b 	cmp	r0, #11
     2d0:	1a000003 	bne	2e4 <CyU3PPmmcIntHandler+0xb8>
     2d4:	e3a00003 	mov	r0, #3
     2d8:	e59f1814 	ldr	r1, [pc, #2068]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2dc:	e5c10000 	strb	r0, [r1]
     2e0:	ea000002 	b	2f0 <CyU3PPmmcIntHandler+0xc4>
     2e4:	e3a00001 	mov	r0, #1
     2e8:	e59f1804 	ldr	r1, [pc, #2052]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     2ec:	e5c10000 	strb	r0, [r1]
     2f0:	e59f07f8 	ldr	r0, [pc, #2040]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     2f4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
     2f8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
     2fc:	e59f17ec 	ldr	r1, [pc, #2028]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     300:	e5810070 	str	r0, [r1, #112]	; 0x70
     304:	e3160004 	tst	r6, #4
     308:	0a000002 	beq	318 <CyU3PPmmcIntHandler+0xec>
     30c:	e3a00003 	mov	r0, #3
     310:	e59f17dc 	ldr	r1, [pc, #2012]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     314:	e5c10000 	strb	r0, [r1]
     318:	e3160008 	tst	r6, #8
     31c:	0a00000b 	beq	350 <CyU3PPmmcIntHandler+0x124>
     320:	e59f07d0 	ldr	r0, [pc, #2000]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     324:	e5900000 	ldr	r0, [r0]
     328:	e3500000 	cmp	r0, #0
     32c:	0a000004 	beq	344 <CyU3PPmmcIntHandler+0x118>
     330:	e3a01000 	mov	r1, #0
     334:	e3a00001 	mov	r0, #1
     338:	e59f27b8 	ldr	r2, [pc, #1976]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     33c:	e5922000 	ldr	r2, [r2]
     340:	e12fff32 	blx	r2
     344:	e3a0000a 	mov	r0, #10
     348:	e59f17a4 	ldr	r1, [pc, #1956]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     34c:	e5c10000 	strb	r0, [r1]
     350:	e3160010 	tst	r6, #16
     354:	0a00000b 	beq	388 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x20>
     358:	e59f0798 	ldr	r0, [pc, #1944]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     35c:	e5900000 	ldr	r0, [r0]
     360:	e3500000 	cmp	r0, #0
     364:	0a000004 	beq	37c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14>
     368:	e3a01000 	mov	r1, #0
     36c:	e3a00002 	mov	r0, #2
     370:	e59f2780 	ldr	r2, [pc, #1920]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     374:	e5922000 	ldr	r2, [r2]
     378:	e12fff32 	blx	r2
     37c:	e3a00003 	mov	r0, #3
     380:	e59f176c 	ldr	r1, [pc, #1900]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     384:	e5c10000 	strb	r0, [r1]
     388:	e3160020 	tst	r6, #32
     38c:	0a00006e 	beq	54c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1e4>
     390:	e59f0760 	ldr	r0, [pc, #1888]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     394:	e5900000 	ldr	r0, [r0]
     398:	e3500000 	cmp	r0, #0
     39c:	0a000005 	beq	3b8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x50>
     3a0:	e59f0748 	ldr	r0, [pc, #1864]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3a4:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     3a8:	e3a00003 	mov	r0, #3
     3ac:	e59f2744 	ldr	r2, [pc, #1860]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     3b0:	e5922000 	ldr	r2, [r2]
     3b4:	e12fff32 	blx	r2
     3b8:	e59f0730 	ldr	r0, [pc, #1840]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3bc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3c0:	e20008ff 	and	r0, r0, #16711680	; 0xff0000
     3c4:	e1a04820 	lsr	r4, r0, #16
     3c8:	e59f0720 	ldr	r0, [pc, #1824]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3cc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3d0:	e2000cff 	and	r0, r0, #65280	; 0xff00
     3d4:	e1a05420 	lsr	r5, r0, #8
     3d8:	e59f0710 	ldr	r0, [pc, #1808]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     3dc:	e5900024 	ldr	r0, [r0, #36]	; 0x24
     3e0:	e2000403 	and	r0, r0, #50331648	; 0x3000000
     3e4:	e1b00c20 	lsrs	r0, r0, #24
     3e8:	0a000002 	beq	3f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x90>
     3ec:	e3500003 	cmp	r0, #3
     3f0:	1a000035 	bne	4cc <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x164>
     3f4:	ea000008 	b	41c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xb4>
     3f8:	e1a00000 	nop			; (mov r0, r0)
     3fc:	e59f06ec 	ldr	r0, [pc, #1772]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     400:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     404:	e3800080 	orr	r0, r0, #128	; 0x80
     408:	e59f16e0 	ldr	r1, [pc, #1760]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     40c:	e5810074 	str	r0, [r1, #116]	; 0x74
     410:	e3a00002 	mov	r0, #2
     414:	e5810030 	str	r0, [r1, #48]	; 0x30
     418:	ea000044 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     41c:	e1a00000 	nop			; (mov r0, r0)
     420:	e35400b7 	cmp	r4, #183	; 0xb7
     424:	1a00000b 	bne	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     428:	e3550003 	cmp	r5, #3
     42c:	aa000009 	bge	458 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0xf0>
     430:	e59f06b8 	ldr	r0, [pc, #1720]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     434:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     438:	e3c000ff 	bic	r0, r0, #255	; 0xff
     43c:	e59f16ac 	ldr	r1, [pc, #1708]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     440:	e5810078 	str	r0, [r1, #120]	; 0x78
     444:	e1a00001 	mov	r0, r1
     448:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     44c:	e1800005 	orr	r0, r0, r5
     450:	e5810078 	str	r0, [r1, #120]	; 0x78
     454:	ea000035 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     458:	e35400b9 	cmp	r4, #185	; 0xb9
     45c:	1a00000f 	bne	4a0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x138>
     460:	e3550001 	cmp	r5, #1
     464:	1a000005 	bne	480 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x118>
     468:	e59f0680 	ldr	r0, [pc, #1664]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     46c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     470:	e3800c01 	orr	r0, r0, #256	; 0x100
     474:	e59f1674 	ldr	r1, [pc, #1652]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     478:	e5810078 	str	r0, [r1, #120]	; 0x78
     47c:	ea00002b 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     480:	e3550000 	cmp	r5, #0
     484:	1a00000a 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     488:	e59f0660 	ldr	r0, [pc, #1632]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     48c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     490:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     494:	e59f1654 	ldr	r1, [pc, #1620]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     498:	e5810078 	str	r0, [r1, #120]	; 0x78
     49c:	ea000023 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4a0:	e35400bf 	cmp	r4, #191	; 0xbf
     4a4:	1a000002 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4a8:	e3550000 	cmp	r5, #0
     4ac:	1a000000 	bne	4b4 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x14c>
     4b0:	ea00001e 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4b4:	e59f0634 	ldr	r0, [pc, #1588]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4b8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4bc:	e3800080 	orr	r0, r0, #128	; 0x80
     4c0:	e59f1628 	ldr	r1, [pc, #1576]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4c4:	e5810074 	str	r0, [r1, #116]	; 0x74
     4c8:	ea000018 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4cc:	e1a00000 	nop			; (mov r0, r0)
     4d0:	e35400b9 	cmp	r4, #185	; 0xb9
     4d4:	1a000001 	bne	4e0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x178>
     4d8:	e3550001 	cmp	r5, #1
     4dc:	da000005 	ble	4f8 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x190>
     4e0:	e59f0608 	ldr	r0, [pc, #1544]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4e4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
     4e8:	e3800080 	orr	r0, r0, #128	; 0x80
     4ec:	e59f15fc 	ldr	r1, [pc, #1532]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     4f0:	e5810074 	str	r0, [r1, #116]	; 0x74
     4f4:	ea00000d 	b	530 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c8>
     4f8:	e3550001 	cmp	r5, #1
     4fc:	1a000005 	bne	518 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1b0>
     500:	e59f05e8 	ldr	r0, [pc, #1512]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     504:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     508:	e3800c01 	orr	r0, r0, #256	; 0x100
     50c:	e59f15dc 	ldr	r1, [pc, #1500]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     510:	e5810078 	str	r0, [r1, #120]	; 0x78
     514:	ea000004 	b	52c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x1c4>
     518:	e59f05d0 	ldr	r0, [pc, #1488]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     51c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
     520:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
     524:	e59f15c4 	ldr	r1, [pc, #1476]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     528:	e5810078 	str	r0, [r1, #120]	; 0x78
     52c:	e1a00000 	nop			; (mov r0, r0)
     530:	e1a00000 	nop			; (mov r0, r0)
     534:	e3a00003 	mov	r0, #3
     538:	e59f15b4 	ldr	r1, [pc, #1460]	; af4 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
     53c:	e5c10000 	strb	r0, [r1]
     540:	e3a00002 	mov	r0, #2
     544:	e59f15a4 	ldr	r1, [pc, #1444]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     548:	e5810030 	str	r0, [r1, #48]	; 0x30
     54c:	e3160040 	tst	r6, #64	; 0x40
     550:	0a000009 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     554:	e59f059c 	ldr	r0, [pc, #1436]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     558:	e5900000 	ldr	r0, [r0]
     55c:	e3500000 	cmp	r0, #0
     560:	0a000005 	beq	57c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x214>
     564:	e59f0584 	ldr	r0, [pc, #1412]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     568:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     56c:	e3a00004 	mov	r0, #4
     570:	e59f2580 	ldr	r2, [pc, #1408]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     574:	e5922000 	ldr	r2, [r2]
     578:	e12fff32 	blx	r2
     57c:	e3160101 	tst	r6, #1073741824	; 0x40000000
     580:	0a00000e 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     584:	e59f0564 	ldr	r0, [pc, #1380]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     588:	e5900020 	ldr	r0, [r0, #32]
     58c:	e200003f 	and	r0, r0, #63	; 0x3f
     590:	e3500007 	cmp	r0, #7
     594:	1a000009 	bne	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     598:	e59f0558 	ldr	r0, [pc, #1368]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     59c:	e5900000 	ldr	r0, [r0]
     5a0:	e3500000 	cmp	r0, #0
     5a4:	0a000005 	beq	5c0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x258>
     5a8:	e59f0540 	ldr	r0, [pc, #1344]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5ac:	e5901024 	ldr	r1, [r0, #36]	; 0x24
     5b0:	e3a00009 	mov	r0, #9
     5b4:	e59f253c 	ldr	r2, [pc, #1340]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5b8:	e5922000 	ldr	r2, [r2]
     5bc:	e12fff32 	blx	r2
     5c0:	e316080a 	tst	r6, #655360	; 0xa0000
     5c4:	0a000009 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5c8:	e59f0528 	ldr	r0, [pc, #1320]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5cc:	e5900000 	ldr	r0, [r0]
     5d0:	e3500000 	cmp	r0, #0
     5d4:	0a000005 	beq	5f0 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x288>
     5d8:	e59f0510 	ldr	r0, [pc, #1296]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     5dc:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     5e0:	e3a00008 	mov	r0, #8
     5e4:	e59f250c 	ldr	r2, [pc, #1292]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5e8:	e5922000 	ldr	r2, [r2]
     5ec:	e12fff32 	blx	r2
     5f0:	e3160801 	tst	r6, #65536	; 0x10000
     5f4:	0a000009 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     5f8:	e59f04f8 	ldr	r0, [pc, #1272]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     5fc:	e5900000 	ldr	r0, [r0]
     600:	e3500000 	cmp	r0, #0
     604:	0a000005 	beq	620 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2b8>
     608:	e59f04e0 	ldr	r0, [pc, #1248]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     60c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     610:	e3a00006 	mov	r0, #6
     614:	e59f24dc 	ldr	r2, [pc, #1244]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     618:	e5922000 	ldr	r2, [r2]
     61c:	e12fff32 	blx	r2
     620:	e3160701 	tst	r6, #262144	; 0x40000
     624:	0a000009 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     628:	e59f04c8 	ldr	r0, [pc, #1224]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     62c:	e5900000 	ldr	r0, [r0]
     630:	e3500000 	cmp	r0, #0
     634:	0a000005 	beq	650 <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x2e8>
     638:	e59f04b0 	ldr	r0, [pc, #1200]	; af0 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000>
     63c:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
     640:	e3a00007 	mov	r0, #7
     644:	e59f24ac 	ldr	r2, [pc, #1196]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     648:	e5922000 	ldr	r2, [r2]
     64c:	e12fff32 	blx	r2
     650:	e3160080 	tst	r6, #128	; 0x80
     654:	0a000008 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     658:	e59f0498 	ldr	r0, [pc, #1176]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     65c:	e5900000 	ldr	r0, [r0]
     660:	e3500000 	cmp	r0, #0
     664:	0a000004 	beq	67c <__ARM_grp..debug_macinfo$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x314>
     668:	e3a01000 	mov	r1, #0
     66c:	e3a00005 	mov	r0, #5
     670:	e59f2480 	ldr	r2, [pc, #1152]	; af8 <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x8>
     674:	e5922000 	ldr	r2, [r2]
     678:	e12fff32 	blx	r2
     67c:	e8bd8070 	pop	{r4, r5, r6, pc}

00000680 <CyU3PPibMsgSend>:
     680:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     684:	e1a04000 	mov	r4, r0
     688:	e1a05001 	mov	r5, r1
     68c:	e1a07002 	mov	r7, r2
     690:	e3570001 	cmp	r7, #1
     694:	1a000005 	bne	6b0 <CyU3PPibMsgSend+0x30>
     698:	e1a02005 	mov	r2, r5
     69c:	e1a01004 	mov	r1, r4
     6a0:	e59f0454 	ldr	r0, [pc, #1108]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6a4:	eb000659 	bl	2010 <___txe_queue_front_send_veneer>
     6a8:	e1a06000 	mov	r6, r0
     6ac:	ea000004 	b	6c4 <CyU3PPibMsgSend+0x44>
     6b0:	e1a02005 	mov	r2, r5
     6b4:	e1a01004 	mov	r1, r4
     6b8:	e59f043c 	ldr	r0, [pc, #1084]	; afc <__ARM_grp..debug_macinfo$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0xc>
     6bc:	eb00063f 	bl	1fc0 <___txe_queue_send_veneer>
     6c0:	e1a06000 	mov	r6, r0
     6c4:	e3560000 	cmp	r6, #0
     6c8:	1a000004 	bne	6e0 <CyU3PPibMsgSend+0x60>
     6cc:	e3a02000 	mov	r2, #0
     6d0:	e3a01001 	mov	r1, #1
     6d4:	e59f0424 	ldr	r0, [pc, #1060]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     6d8:	eb00064e 	bl	2018 <___txe_event_flags_set_veneer>
     6dc:	e1a06000 	mov	r6, r0
     6e0:	e1a00006 	mov	r0, r6
     6e4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

000006e8 <CyU3PGpifIntHandler>:
     6e8:	e92d4038 	push	{r3, r4, r5, lr}
     6ec:	e59f5410 	ldr	r5, [pc, #1040]	; b04 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x6>
     6f0:	e59f0410 	ldr	r0, [pc, #1040]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     6f4:	e5900014 	ldr	r0, [r0, #20]
     6f8:	e59f1408 	ldr	r1, [pc, #1032]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     6fc:	e5911018 	ldr	r1, [r1, #24]
     700:	e0004001 	and	r4, r0, r1
     704:	ea0000a0 	b	98c <__ARM_grp_.debug_pubnames$45+0x13>
     708:	e3140001 	tst	r4, #1
     70c:	0a00000b 	beq	740 <CyU3PGpifIntHandler+0x58>
     710:	e59f03f0 	ldr	r0, [pc, #1008]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     714:	e5900118 	ldr	r0, [r0, #280]	; 0x118
     718:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     71c:	e1800005 	orr	r0, r0, r5
     720:	e58d0000 	str	r0, [sp]
     724:	e3a02000 	mov	r2, #0
     728:	e1a01002 	mov	r1, r2
     72c:	e1a0000d 	mov	r0, sp
     730:	ebffffd2 	bl	680 <CyU3PPibMsgSend>
     734:	e3a00001 	mov	r0, #1
     738:	e59f13c8 	ldr	r1, [pc, #968]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     73c:	e5810014 	str	r0, [r1, #20]
     740:	e3140002 	tst	r4, #2
     744:	0a000016 	beq	7a4 <__ARM_grp_.debug_frame$27+0x14>
     748:	e59f03bc 	ldr	r0, [pc, #956]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xe>
     74c:	e5900000 	ldr	r0, [r0]
     750:	e3500000 	cmp	r0, #0
     754:	0a000005 	beq	770 <__ARM_grp_.debug_frame$20+0x2c>
     758:	e59f13a8 	ldr	r1, [pc, #936]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     75c:	e5911010 	ldr	r1, [r1, #16]
     760:	e1a00c21 	lsr	r0, r1, #24
     764:	e59f13a0 	ldr	r1, [pc, #928]	; b0c <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xe>
     768:	e5911000 	ldr	r1, [r1]
     76c:	e12fff31 	blx	r1
     770:	e59f0390 	ldr	r0, [pc, #912]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     774:	e5900010 	ldr	r0, [r0, #16]
     778:	e20004ff 	and	r0, r0, #-16777216	; 0xff000000
     77c:	e3800801 	orr	r0, r0, #65536	; 0x10000
     780:	e1800005 	orr	r0, r0, r5
     784:	e58d0000 	str	r0, [sp]
     788:	e3a02000 	mov	r2, #0
     78c:	e1a01002 	mov	r1, r2
     790:	e1a0000d 	mov	r0, sp
     794:	ebffffb9 	bl	680 <CyU3PPibMsgSend>
     798:	e3a00002 	mov	r0, #2
     79c:	e59f1364 	ldr	r1, [pc, #868]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     7a0:	e5810014 	str	r0, [r1, #20]
     7a4:	e3140004 	tst	r4, #4
     7a8:	0a000008 	beq	7d0 <__ARM_grp_.debug_frame$27+0x40>
     7ac:	e3850802 	orr	r0, r5, #131072	; 0x20000
     7b0:	e58d0000 	str	r0, [sp]
     7b4:	e3a02000 	mov	r2, #0
     7b8:	e1a01002 	mov	r1, r2
     7bc:	e1a0000d 	mov	r0, sp
     7c0:	ebffffae 	bl	680 <CyU3PPibMsgSend>
     7c4:	e3a00004 	mov	r0, #4
     7c8:	e59f1338 	ldr	r1, [pc, #824]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     7cc:	e5810014 	str	r0, [r1, #20]
     7d0:	e3140010 	tst	r4, #16
     7d4:	0a000008 	beq	7fc <__ARM_grp_.debug_frame$34+0x1c>
     7d8:	e3850803 	orr	r0, r5, #196608	; 0x30000
     7dc:	e58d0000 	str	r0, [sp]
     7e0:	e3a02000 	mov	r2, #0
     7e4:	e1a01002 	mov	r1, r2
     7e8:	e1a0000d 	mov	r0, sp
     7ec:	ebffffa3 	bl	680 <CyU3PPibMsgSend>
     7f0:	e3a00010 	mov	r0, #16
     7f4:	e59f130c 	ldr	r1, [pc, #780]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     7f8:	e5810014 	str	r0, [r1, #20]
     7fc:	e3140020 	tst	r4, #32
     800:	0a000008 	beq	828 <__ARM_grp_.debug_frame$34+0x48>
     804:	e3850701 	orr	r0, r5, #262144	; 0x40000
     808:	e58d0000 	str	r0, [sp]
     80c:	e3a02000 	mov	r2, #0
     810:	e1a01002 	mov	r1, r2
     814:	e1a0000d 	mov	r0, sp
     818:	ebffff98 	bl	680 <CyU3PPibMsgSend>
     81c:	e3a00020 	mov	r0, #32
     820:	e59f12e0 	ldr	r1, [pc, #736]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     824:	e5810014 	str	r0, [r1, #20]
     828:	e3140040 	tst	r4, #64	; 0x40
     82c:	0a000008 	beq	854 <__ARM_grp_.debug_pubnames$10+0x14>
     830:	e3850805 	orr	r0, r5, #327680	; 0x50000
     834:	e58d0000 	str	r0, [sp]
     838:	e3a02000 	mov	r2, #0
     83c:	e1a01002 	mov	r1, r2
     840:	e1a0000d 	mov	r0, sp
     844:	ebffff8d 	bl	680 <CyU3PPibMsgSend>
     848:	e3a00040 	mov	r0, #64	; 0x40
     84c:	e59f12b4 	ldr	r1, [pc, #692]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     850:	e5810014 	str	r0, [r1, #20]
     854:	e3140080 	tst	r4, #128	; 0x80
     858:	0a000008 	beq	880 <__ARM_grp_.debug_frame$48+0x4>
     85c:	e3850806 	orr	r0, r5, #393216	; 0x60000
     860:	e58d0000 	str	r0, [sp]
     864:	e3a02000 	mov	r2, #0
     868:	e1a01002 	mov	r1, r2
     86c:	e1a0000d 	mov	r0, sp
     870:	ebffff82 	bl	680 <CyU3PPibMsgSend>
     874:	e3a00080 	mov	r0, #128	; 0x80
     878:	e59f1288 	ldr	r1, [pc, #648]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     87c:	e5810014 	str	r0, [r1, #20]
     880:	e3140c01 	tst	r4, #256	; 0x100
     884:	0a000008 	beq	8ac <__ARM_grp_.debug_frame$48+0x30>
     888:	e3850807 	orr	r0, r5, #458752	; 0x70000
     88c:	e58d0000 	str	r0, [sp]
     890:	e3a02000 	mov	r2, #0
     894:	e1a01002 	mov	r1, r2
     898:	e1a0000d 	mov	r0, sp
     89c:	ebffff77 	bl	680 <CyU3PPibMsgSend>
     8a0:	e3a00c01 	mov	r0, #256	; 0x100
     8a4:	e59f125c 	ldr	r1, [pc, #604]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     8a8:	e5810014 	str	r0, [r1, #20]
     8ac:	e3140c02 	tst	r4, #512	; 0x200
     8b0:	0a000008 	beq	8d8 <__ARM_grp_.debug_frame$55+0xc>
     8b4:	e3850702 	orr	r0, r5, #524288	; 0x80000
     8b8:	e58d0000 	str	r0, [sp]
     8bc:	e3a02000 	mov	r2, #0
     8c0:	e1a01002 	mov	r1, r2
     8c4:	e1a0000d 	mov	r0, sp
     8c8:	ebffff6c 	bl	680 <CyU3PPibMsgSend>
     8cc:	e3a00c02 	mov	r0, #512	; 0x200
     8d0:	e59f1230 	ldr	r1, [pc, #560]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     8d4:	e5810014 	str	r0, [r1, #20]
     8d8:	e314080f 	tst	r4, #983040	; 0xf0000
     8dc:	0a000009 	beq	908 <__ARM_grp_.debug_pubnames$24+0x14>
     8e0:	e204080f 	and	r0, r4, #983040	; 0xf0000
     8e4:	e1a00420 	lsr	r0, r0, #8
     8e8:	e58d0000 	str	r0, [sp]
     8ec:	e3a02000 	mov	r2, #0
     8f0:	e59f0208 	ldr	r0, [pc, #520]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     8f4:	e59d1000 	ldr	r1, [sp]
     8f8:	eb0005c6 	bl	2018 <___txe_event_flags_set_veneer>
     8fc:	e3a0080f 	mov	r0, #983040	; 0xf0000
     900:	e59f1200 	ldr	r1, [pc, #512]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     904:	e5810014 	str	r0, [r1, #20]
     908:	e314060f 	tst	r4, #15728640	; 0xf00000
     90c:	0a000009 	beq	938 <__ARM_grp_.debug_pubnames$31+0x14>
     910:	e204060f 	and	r0, r4, #15728640	; 0xf00000
     914:	e1a00620 	lsr	r0, r0, #12
     918:	e58d0000 	str	r0, [sp]
     91c:	e3a02000 	mov	r2, #0
     920:	e59f01d8 	ldr	r0, [pc, #472]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     924:	e59d1000 	ldr	r1, [sp]
     928:	eb0005ba 	bl	2018 <___txe_event_flags_set_veneer>
     92c:	e3a0060f 	mov	r0, #15728640	; 0xf00000
     930:	e59f11d0 	ldr	r1, [pc, #464]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     934:	e5810014 	str	r0, [r1, #20]
     938:	e3140b01 	tst	r4, #1024	; 0x400
     93c:	0a000002 	beq	94c <__ARM_grp_.debug_pubnames$38+0x2>
     940:	e3a00b01 	mov	r0, #1024	; 0x400
     944:	e59f11bc 	ldr	r1, [pc, #444]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     948:	e5810014 	str	r0, [r1, #20]
     94c:	e3140008 	tst	r4, #8
     950:	0a000008 	beq	978 <__ARM_grp_.debug_frame$69+0x10>
     954:	e3850809 	orr	r0, r5, #589824	; 0x90000
     958:	e58d0000 	str	r0, [sp]
     95c:	e3a02000 	mov	r2, #0
     960:	e1a01002 	mov	r1, r2
     964:	e1a0000d 	mov	r0, sp
     968:	ebffff44 	bl	680 <CyU3PPibMsgSend>
     96c:	e3a00008 	mov	r0, #8
     970:	e59f1190 	ldr	r1, [pc, #400]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     974:	e5810014 	str	r0, [r1, #20]
     978:	e59f0188 	ldr	r0, [pc, #392]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     97c:	e5900014 	ldr	r0, [r0, #20]
     980:	e59f1180 	ldr	r1, [pc, #384]	; b08 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0xa>
     984:	e5911018 	ldr	r1, [r1, #24]
     988:	e0004001 	and	r4, r0, r1
     98c:	e3540000 	cmp	r4, #0
     990:	1affff5c 	bne	708 <CyU3PGpifIntHandler+0x20>
     994:	e8bd8038 	pop	{r3, r4, r5, pc}

00000998 <CyU3PPibIntHandler>:
     998:	e92d4010 	push	{r4, lr}
     99c:	e59f016c 	ldr	r0, [pc, #364]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     9a0:	e5900004 	ldr	r0, [r0, #4]
     9a4:	e59f1164 	ldr	r1, [pc, #356]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     9a8:	e5911008 	ldr	r1, [r1, #8]
     9ac:	e0004001 	and	r4, r0, r1
     9b0:	e3140001 	tst	r4, #1
     9b4:	0a00000e 	beq	9f4 <__ARM_grp_.debug_pubnames$59+0x26>
     9b8:	e3a02000 	mov	r2, #0
     9bc:	e3a01010 	mov	r1, #16
     9c0:	e59f0138 	ldr	r0, [pc, #312]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     9c4:	eb000593 	bl	2018 <___txe_event_flags_set_veneer>
     9c8:	e59f0144 	ldr	r0, [pc, #324]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     9cc:	e5900000 	ldr	r0, [r0]
     9d0:	e3500000 	cmp	r0, #0
     9d4:	0a000003 	beq	9e8 <__ARM_grp_.debug_pubnames$59+0x1a>
     9d8:	e3a00000 	mov	r0, #0
     9dc:	e59f1130 	ldr	r1, [pc, #304]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     9e0:	e5911000 	ldr	r1, [r1]
     9e4:	e12fff31 	blx	r1
     9e8:	e3a00001 	mov	r0, #1
     9ec:	e59f111c 	ldr	r1, [pc, #284]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     9f0:	e5810004 	str	r0, [r1, #4]
     9f4:	e3140002 	tst	r4, #2
     9f8:	0a00000a 	beq	a28 <__ARM_grp_.debug_pubnames$73+0x7>
     9fc:	e59f0110 	ldr	r0, [pc, #272]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     a00:	e5900000 	ldr	r0, [r0]
     a04:	e3500000 	cmp	r0, #0
     a08:	0a000003 	beq	a1c <__ARM_grp_.debug_pubnames$66+0x27>
     a0c:	e3a00001 	mov	r0, #1
     a10:	e59f10fc 	ldr	r1, [pc, #252]	; b14 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x16>
     a14:	e5911000 	ldr	r1, [r1]
     a18:	e12fff31 	blx	r1
     a1c:	e3a00002 	mov	r0, #2
     a20:	e59f10e8 	ldr	r1, [pc, #232]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a24:	e5810004 	str	r0, [r1, #4]
     a28:	e3140010 	tst	r4, #16
     a2c:	0a000000 	beq	a34 <__ARM_grp_.debug_pubnames$73+0x13>
     a30:	ebffff2c 	bl	6e8 <CyU3PGpifIntHandler>
     a34:	e3140008 	tst	r4, #8
     a38:	0a000003 	beq	a4c <__ARM_grp_.debug_pubnames$73+0x2b>
     a3c:	ebfffdfa 	bl	22c <CyU3PPmmcIntHandler>
     a40:	e3a00008 	mov	r0, #8
     a44:	e59f10c4 	ldr	r1, [pc, #196]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a48:	e5810004 	str	r0, [r1, #4]
     a4c:	e3140c01 	tst	r4, #256	; 0x100
     a50:	0a000006 	beq	a70 <__ARM_grp..debug_pubnames$tx_port.h$.2_hB2000_hUg2TURfmz4_700000+0x20>
     a54:	e3a02000 	mov	r2, #0
     a58:	e3a01020 	mov	r1, #32
     a5c:	e59f009c 	ldr	r0, [pc, #156]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a60:	eb00056c 	bl	2018 <___txe_event_flags_set_veneer>
     a64:	e3a00c01 	mov	r0, #256	; 0x100
     a68:	e59f10a0 	ldr	r1, [pc, #160]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a6c:	e5810004 	str	r0, [r1, #4]
     a70:	e3140020 	tst	r4, #32
     a74:	0a000006 	beq	a94 <__ARM_grp..debug_pubnames$cyu3dma.h$.2_KBc000_$s$sl3ddBtd_N40000+0x1f>
     a78:	e3a02000 	mov	r2, #0
     a7c:	e3a01080 	mov	r1, #128	; 0x80
     a80:	e59f0078 	ldr	r0, [pc, #120]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     a84:	eb000563 	bl	2018 <___txe_event_flags_set_veneer>
     a88:	e3a00020 	mov	r0, #32
     a8c:	e59f107c 	ldr	r1, [pc, #124]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     a90:	e5810004 	str	r0, [r1, #4]
     a94:	e3140040 	tst	r4, #64	; 0x40
     a98:	0a000006 	beq	ab8 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Dl3000_JW4ECTnBpY6_F00000+0x1d>
     a9c:	e3a02000 	mov	r2, #0
     aa0:	e3a01080 	mov	r1, #128	; 0x80
     aa4:	e59f0054 	ldr	r0, [pc, #84]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     aa8:	eb00055a 	bl	2018 <___txe_event_flags_set_veneer>
     aac:	e3a00020 	mov	r0, #32
     ab0:	e59f1058 	ldr	r1, [pc, #88]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     ab4:	e5810004 	str	r0, [r1, #4]
     ab8:	e314020e 	tst	r4, #-536870912	; 0xe0000000
     abc:	0a00000a 	beq	aec <__ARM_grp..debug_pubnames$cyu3vic.h$.2_gG2000_y2m7ThkzJsb_f00000+0x16>
     ac0:	e3a02000 	mov	r2, #0
     ac4:	e3a01040 	mov	r1, #64	; 0x40
     ac8:	e59f0030 	ldr	r0, [pc, #48]	; b00 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x2>
     acc:	eb000551 	bl	2018 <___txe_event_flags_set_veneer>
     ad0:	e59f0038 	ldr	r0, [pc, #56]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     ad4:	e5900008 	ldr	r0, [r0, #8]
     ad8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
     adc:	e59f102c 	ldr	r1, [pc, #44]	; b10 <__ARM_grp..debug_pubnames$cyu3usbpp.h$.2_nej000_9nkfGDLJxz3_180000+0x12>
     ae0:	e5810008 	str	r0, [r1, #8]
     ae4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
     ae8:	e5810004 	str	r0, [r1, #4]
     aec:	e8bd8010 	pop	{r4, pc}
     af0:	e0011000 	.word	0xe0011000
     af4:	40030d38 	.word	0x40030d38
     af8:	40030d20 	.word	0x40030d20
     afc:	40031a44 	.word	0x40031a44
     b00:	40031974 	.word	0x40031974
     b04:	00004004 	.word	0x00004004
     b08:	e0014000 	.word	0xe0014000
     b0c:	40030d34 	.word	0x40030d34
     b10:	e0010000 	.word	0xe0010000
     b14:	40030d3c 	.word	0x40030d3c

00000b18 <CyU3PUibIntHandler>:
     b18:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
     b1c:	e59f0c9c 	ldr	r0, [pc, #3228]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
     b20:	e5900000 	ldr	r0, [r0]
     b24:	e59f1c94 	ldr	r1, [pc, #3220]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
     b28:	e5911004 	ldr	r1, [r1, #4]
     b2c:	e0004001 	and	r4, r0, r1
     b30:	e3140c01 	tst	r4, #256	; 0x100
     b34:	0a000172 	beq	1104 <__ARM_grp_.debug_frame$48+0x24>
     b38:	e59f0c84 	ldr	r0, [pc, #3204]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     b3c:	e5900004 	ldr	r0, [r0, #4]
     b40:	e59f1c7c 	ldr	r1, [pc, #3196]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     b44:	e5911008 	ldr	r1, [r1, #8]
     b48:	e0006001 	and	r6, r0, r1
     b4c:	e3160080 	tst	r6, #128	; 0x80
     b50:	0a000008 	beq	b78 <__ARM_grp_.debug_frame$27+0x1c>
     b54:	e59f0c68 	ldr	r0, [pc, #3176]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     b58:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     b5c:	e3800080 	orr	r0, r0, #128	; 0x80
     b60:	e59f1c5c 	ldr	r1, [pc, #3164]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     b64:	e5810050 	str	r0, [r1, #80]	; 0x50
     b68:	e3a00080 	mov	r0, #128	; 0x80
     b6c:	e5810004 	str	r0, [r1, #4]
     b70:	e3a00023 	mov	r0, #35	; 0x23
     b74:	eb000521 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     b78:	e3160001 	tst	r6, #1
     b7c:	0a000127 	beq	1020 <__ARM_grp_.debug_frame$27+0x20>
     b80:	e3a00001 	mov	r0, #1
     b84:	e59f1c38 	ldr	r1, [pc, #3128]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     b88:	e5810004 	str	r0, [r1, #4]
     b8c:	e1c10000 	bic	r0, r1, r0
     b90:	e5900010 	ldr	r0, [r0, #16]
     b94:	e3100001 	tst	r0, #1
     b98:	0a00000e 	beq	bd8 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0x20>
     b9c:	e59f0c24 	ldr	r0, [pc, #3108]	; 17c8 <__ARM_grp_.debug_frame$20>
     ba0:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     ba4:	e2800001 	add	r0, r0, #1
     ba8:	e59f1c18 	ldr	r1, [pc, #3096]	; 17c8 <__ARM_grp_.debug_frame$20>
     bac:	e581005c 	str	r0, [r1, #92]	; 0x5c
     bb0:	e2810000 	add	r0, r1, #0
     bb4:	e590005c 	ldr	r0, [r0, #92]	; 0x5c
     bb8:	e3500002 	cmp	r0, #2
     bbc:	3a000000 	bcc	bc4 <__ARM_grp..debug_abbrev.group.2_Am0000_lbphKItke$2_000000+0xc>
     bc0:	eb0004fc 	bl	1fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>
     bc4:	e3a00001 	mov	r0, #1
     bc8:	e59f1bf4 	ldr	r1, [pc, #3060]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     bcc:	e5810010 	str	r0, [r1, #16]
     bd0:	e3a000ac 	mov	r0, #172	; 0xac
     bd4:	eb000509 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bd8:	e59f0be4 	ldr	r0, [pc, #3044]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     bdc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     be0:	e200503f 	and	r5, r0, #63	; 0x3f
     be4:	e2851080 	add	r1, r5, #128	; 0x80
     be8:	e20100ff 	and	r0, r1, #255	; 0xff
     bec:	eb000503 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     bf0:	e59f0bcc 	ldr	r0, [pc, #3020]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     bf4:	e5900014 	ldr	r0, [r0, #20]
     bf8:	e1a00800 	lsl	r0, r0, #16
     bfc:	e1a00820 	lsr	r0, r0, #16
     c00:	e59f1bc4 	ldr	r1, [pc, #3012]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c04:	e5911000 	ldr	r1, [r1]
     c08:	e1500001 	cmp	r0, r1
     c0c:	9a000016 	bls	c6c <__ARM_grp_.debug_frame$55>
     c10:	e59f0bac 	ldr	r0, [pc, #2988]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     c14:	e5900014 	ldr	r0, [r0, #20]
     c18:	e1a00800 	lsl	r0, r0, #16
     c1c:	e1a00820 	lsr	r0, r0, #16
     c20:	e59f1ba4 	ldr	r1, [pc, #2980]	; 17cc <__ARM_grp_.debug_frame$20+0x4>
     c24:	e5911000 	ldr	r1, [r1]
     c28:	e0400001 	sub	r0, r0, r1
     c2c:	e3500040 	cmp	r0, #64	; 0x40
     c30:	3a00000d 	bcc	c6c <__ARM_grp_.debug_frame$55>
     c34:	e59f0b84 	ldr	r0, [pc, #2948]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
     c38:	e5900004 	ldr	r0, [r0, #4]
     c3c:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
     c40:	e59f1b78 	ldr	r1, [pc, #2936]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
     c44:	e5810004 	str	r0, [r1, #4]
     c48:	e3a00000 	mov	r0, #0
     c4c:	e59f1b7c 	ldr	r1, [pc, #2940]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     c50:	e5810000 	str	r0, [r1]
     c54:	e3a02000 	mov	r2, #0
     c58:	e3a01402 	mov	r1, #33554432	; 0x2000000
     c5c:	e59f0b70 	ldr	r0, [pc, #2928]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     c60:	eb0004ec 	bl	2018 <___txe_event_flags_set_veneer>
     c64:	e3a000ad 	mov	r0, #173	; 0xad
     c68:	eb0004e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     c6c:	e2450008 	sub	r0, r5, #8
     c70:	e3500012 	cmp	r0, #18
     c74:	308ff100 	addcc	pc, pc, r0, lsl #2
     c78:	ea0000d3 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     c7c:	ea0000b7 	b	f60 <__ARM_grp_.debug_pubnames$115+0x27>
     c80:	ea0000b1 	b	f4c <__ARM_grp_.debug_pubnames$115+0x13>
     c84:	ea0000d0 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     c88:	ea0000cf 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     c8c:	ea0000ce 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     c90:	ea0000cd 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     c94:	ea0000cc 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     c98:	ea0000cb 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     c9c:	ea00007d 	b	e98 <__ARM_grp_.debug_pubnames$87+0x4>
     ca0:	ea00003a 	b	d90 <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x8>
     ca4:	ea000026 	b	d44 <__ARM_grp_.debug_pubnames$31+0x7>
     ca8:	ea000099 	b	f14 <__ARM_grp_.debug_pubnames$108+0x6>
     cac:	ea0000c6 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     cb0:	ea0000c5 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     cb4:	ea0000c4 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     cb8:	ea0000ad 	b	f74 <__ARM_grp_.debug_pubnames$122+0xf>
     cbc:	ea000000 	b	cc4 <__ARM_grp_.debug_pubnames$10+0x8>
     cc0:	ea000001 	b	ccc <__ARM_grp_.debug_pubnames$10+0x10>
     cc4:	e1a00000 	nop			; (mov r0, r0)
     cc8:	e1a00000 	nop			; (mov r0, r0)
     ccc:	e59f0af0 	ldr	r0, [pc, #2800]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     cd0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     cd4:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     cd8:	e3800802 	orr	r0, r0, #131072	; 0x20000
     cdc:	e59f1ae0 	ldr	r1, [pc, #2784]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     ce0:	e5810400 	str	r0, [r1, #1024]	; 0x400
     ce4:	e59f0aec 	ldr	r0, [pc, #2796]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     ce8:	e5900000 	ldr	r0, [r0]
     cec:	e3500000 	cmp	r0, #0
     cf0:	0a000005 	beq	d0c <__ARM_grp_.debug_frame$69+0x18>
     cf4:	e3a00000 	mov	r0, #0
     cf8:	e59f1ad8 	ldr	r1, [pc, #2776]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     cfc:	e5810000 	str	r0, [r1]
     d00:	e3a01000 	mov	r1, #0
     d04:	e59f0ad0 	ldr	r0, [pc, #2768]	; 17dc <__ARM_grp_.debug_line$1>
     d08:	eb0004b2 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d0c:	e59f0acc 	ldr	r0, [pc, #2764]	; 17e0 <__ARM_grp_.debug_line$1+0x4>
     d10:	e5900000 	ldr	r0, [r0]
     d14:	e3500000 	cmp	r0, #0
     d18:	1a000008 	bne	d40 <__ARM_grp_.debug_pubnames$31+0x3>
     d1c:	e59f0ac0 	ldr	r0, [pc, #2752]	; 17e4 <__ARM_grp_.debug_line$1+0x8>
     d20:	e5900000 	ldr	r0, [r0]
     d24:	e3500000 	cmp	r0, #0
     d28:	0a000004 	beq	d40 <__ARM_grp_.debug_pubnames$31+0x3>
     d2c:	e3a01000 	mov	r1, #0
     d30:	e3a00013 	mov	r0, #19
     d34:	e59f2aa8 	ldr	r2, [pc, #2728]	; 17e4 <__ARM_grp_.debug_line$1+0x8>
     d38:	e5922000 	ldr	r2, [r2]
     d3c:	e12fff32 	blx	r2
     d40:	ea0000a1 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     d44:	e1a00000 	nop			; (mov r0, r0)
     d48:	e3a00001 	mov	r0, #1
     d4c:	eb000497 	bl	1fb0 <__CyU3PBusyWait_veneer>
     d50:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     d54:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     d58:	e200503f 	and	r5, r0, #63	; 0x3f
     d5c:	e3550012 	cmp	r5, #18
     d60:	1a000009 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d64:	e59f0a6c 	ldr	r0, [pc, #2668]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d68:	e5900000 	ldr	r0, [r0]
     d6c:	e3500000 	cmp	r0, #0
     d70:	1a000005 	bne	d8c <__ARM_grp..debug_macinfo$string.h$.2_4v0000_Cy6u1kGYTV9_300000+0x4>
     d74:	e3a00001 	mov	r0, #1
     d78:	e59f1a58 	ldr	r1, [pc, #2648]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     d7c:	e5810000 	str	r0, [r1]
     d80:	e3a01020 	mov	r1, #32
     d84:	e59f0a50 	ldr	r0, [pc, #2640]	; 17dc <__ARM_grp_.debug_line$1>
     d88:	eb000492 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     d8c:	e1a00000 	nop			; (mov r0, r0)
     d90:	e59f0a2c 	ldr	r0, [pc, #2604]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     d94:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     d98:	e3c00801 	bic	r0, r0, #65536	; 0x10000
     d9c:	e3800802 	orr	r0, r0, #131072	; 0x20000
     da0:	e59f1a1c 	ldr	r1, [pc, #2588]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     da4:	e5810400 	str	r0, [r1, #1024]	; 0x400
     da8:	e59f0a38 	ldr	r0, [pc, #2616]	; 17e8 <__ARM_grp_.debug_line$1+0xc>
     dac:	e5900000 	ldr	r0, [r0]
     db0:	e3500000 	cmp	r0, #0
     db4:	1a000009 	bne	de0 <__ARM_grp_.debug_pubnames$52+0x1f>
     db8:	e59f0a08 	ldr	r0, [pc, #2568]	; 17c8 <__ARM_grp_.debug_frame$20>
     dbc:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     dc0:	e3500000 	cmp	r0, #0
     dc4:	1a000005 	bne	de0 <__ARM_grp_.debug_pubnames$52+0x1f>
     dc8:	e3a00001 	mov	r0, #1
     dcc:	e59f1a0c 	ldr	r1, [pc, #2572]	; 17e0 <__ARM_grp_.debug_line$1+0x4>
     dd0:	e5810000 	str	r0, [r1]
     dd4:	e3a00203 	mov	r0, #805306368	; 0x30000000
     dd8:	e59f19e4 	ldr	r1, [pc, #2532]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     ddc:	e5810050 	str	r0, [r1, #80]	; 0x50
     de0:	e59f09e0 	ldr	r0, [pc, #2528]	; 17c8 <__ARM_grp_.debug_frame$20>
     de4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
     de8:	e3500000 	cmp	r0, #0
     dec:	1a000020 	bne	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     df0:	e59f09f4 	ldr	r0, [pc, #2548]	; 17ec <__ARM_grp_.debug_line$1+0x10>
     df4:	e5900000 	ldr	r0, [r0]
     df8:	e3500000 	cmp	r0, #0
     dfc:	0a00000a 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x16>
     e00:	e2451010 	sub	r1, r5, #16
     e04:	e20100ff 	and	r0, r1, #255	; 0xff
     e08:	e59f19dc 	ldr	r1, [pc, #2524]	; 17ec <__ARM_grp_.debug_line$1+0x10>
     e0c:	e5911000 	ldr	r1, [r1]
     e10:	e12fff31 	blx	r1
     e14:	e3500000 	cmp	r0, #0
     e18:	0a000003 	beq	e2c <__ARM_grp_.debug_pubnames$66+0x16>
     e1c:	e59f09cc 	ldr	r0, [pc, #2508]	; 17f0 <__ARM_grp_.debug_line$1+0x14>
     e20:	e5900000 	ldr	r0, [r0]
     e24:	e3500000 	cmp	r0, #0
     e28:	0a000011 	beq	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     e2c:	e3a00001 	mov	r0, #1
     e30:	eb00045e 	bl	1fb0 <__CyU3PBusyWait_veneer>
     e34:	e59f0988 	ldr	r0, [pc, #2440]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     e38:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e3c:	e3100c02 	tst	r0, #512	; 0x200
     e40:	1a00000b 	bne	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     e44:	e59f0978 	ldr	r0, [pc, #2424]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     e48:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     e4c:	e200503f 	and	r5, r0, #63	; 0x3f
     e50:	e3550011 	cmp	r5, #17
     e54:	0a000001 	beq	e60 <__ARM_grp_.debug_frame$104+0x18>
     e58:	e3550012 	cmp	r5, #18
     e5c:	1a000004 	bne	e74 <__ARM_grp_.debug_pubnames$80+0xa>
     e60:	e59f095c 	ldr	r0, [pc, #2396]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     e64:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     e68:	e3800c02 	orr	r0, r0, #512	; 0x200
     e6c:	e59f1950 	ldr	r1, [pc, #2384]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     e70:	e5810050 	str	r0, [r1, #80]	; 0x50
     e74:	e59f0974 	ldr	r0, [pc, #2420]	; 17f0 <__ARM_grp_.debug_line$1+0x14>
     e78:	e5900000 	ldr	r0, [r0]
     e7c:	e3500000 	cmp	r0, #0
     e80:	0a000003 	beq	e94 <__ARM_grp_.debug_pubnames$87>
     e84:	e3a02000 	mov	r2, #0
     e88:	e3a01401 	mov	r1, #16777216	; 0x1000000
     e8c:	e59f0940 	ldr	r0, [pc, #2368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     e90:	eb000460 	bl	2018 <___txe_event_flags_set_veneer>
     e94:	ea00004c 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     e98:	e1a00000 	nop			; (mov r0, r0)
     e9c:	e59f0920 	ldr	r0, [pc, #2336]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     ea0:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
     ea4:	e3c00803 	bic	r0, r0, #196608	; 0x30000
     ea8:	e59f1914 	ldr	r1, [pc, #2324]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     eac:	e5810400 	str	r0, [r1, #1024]	; 0x400
     eb0:	e3a00000 	mov	r0, #0
     eb4:	e59f1938 	ldr	r1, [pc, #2360]	; 17f4 <__ARM_grp_.debug_pubnames$31+0x2>
     eb8:	e5810000 	str	r0, [r1]
     ebc:	e59f1900 	ldr	r1, [pc, #2304]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     ec0:	e5810064 	str	r0, [r1, #100]	; 0x64
     ec4:	e59f08fc 	ldr	r0, [pc, #2300]	; 17c8 <__ARM_grp_.debug_frame$20>
     ec8:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ecc:	e3500000 	cmp	r0, #0
     ed0:	0a000006 	beq	ef0 <__ARM_grp_.debug_pubnames$101+0xb>
     ed4:	e3a02000 	mov	r2, #0
     ed8:	e3a01901 	mov	r1, #16384	; 0x4000
     edc:	e59f08f0 	ldr	r0, [pc, #2288]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     ee0:	eb00044c 	bl	2018 <___txe_event_flags_set_veneer>
     ee4:	e3a00000 	mov	r0, #0
     ee8:	e59f18d8 	ldr	r1, [pc, #2264]	; 17c8 <__ARM_grp_.debug_frame$20>
     eec:	e5810054 	str	r0, [r1, #84]	; 0x54
     ef0:	e59f08e8 	ldr	r0, [pc, #2280]	; 17e0 <__ARM_grp_.debug_line$1+0x4>
     ef4:	e5900000 	ldr	r0, [r0]
     ef8:	e3500000 	cmp	r0, #0
     efc:	0a000003 	beq	f10 <__ARM_grp_.debug_pubnames$108+0x2>
     f00:	e3a02000 	mov	r2, #0
     f04:	e3a01902 	mov	r1, #32768	; 0x8000
     f08:	e59f08c4 	ldr	r0, [pc, #2244]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f0c:	eb000441 	bl	2018 <___txe_event_flags_set_veneer>
     f10:	ea00002d 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     f14:	e1a00000 	nop			; (mov r0, r0)
     f18:	e3a00001 	mov	r0, #1
     f1c:	e59f18a4 	ldr	r1, [pc, #2212]	; 17c8 <__ARM_grp_.debug_frame$20>
     f20:	e5810054 	str	r0, [r1, #84]	; 0x54
     f24:	e59f18ac 	ldr	r1, [pc, #2220]	; 17d8 <__ARM_grp_.debug_frame$20+0x10>
     f28:	e5810000 	str	r0, [r1]
     f2c:	e3a01020 	mov	r1, #32
     f30:	e59f08a4 	ldr	r0, [pc, #2212]	; 17dc <__ARM_grp_.debug_line$1>
     f34:	eb000427 	bl	1fd8 <__CyFx3UsbWritePhyReg_veneer>
     f38:	e3a02000 	mov	r2, #0
     f3c:	e3a01a02 	mov	r1, #8192	; 0x2000
     f40:	e59f088c 	ldr	r0, [pc, #2188]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     f44:	eb000433 	bl	2018 <___txe_event_flags_set_veneer>
     f48:	ea00001f 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     f4c:	e1a00000 	nop			; (mov r0, r0)
     f50:	e3a00001 	mov	r0, #1
     f54:	e59f1898 	ldr	r1, [pc, #2200]	; 17f4 <__ARM_grp_.debug_pubnames$31+0x2>
     f58:	e5810000 	str	r0, [r1]
     f5c:	e1a00000 	nop			; (mov r0, r0)
     f60:	e59f0890 	ldr	r0, [pc, #2192]	; 17f8 <__ARM_grp_.debug_pubnames$31+0x6>
     f64:	e59f1858 	ldr	r1, [pc, #2136]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     f68:	e5810418 	str	r0, [r1, #1048]	; 0x418
     f6c:	e581041c 	str	r0, [r1, #1052]	; 0x41c
     f70:	ea000015 	b	fcc <__ARM_grp_.debug_pubnames$17+0x14>
     f74:	e1a00000 	nop			; (mov r0, r0)
     f78:	e59f0848 	ldr	r0, [pc, #2120]	; 17c8 <__ARM_grp_.debug_frame$20>
     f7c:	e5900050 	ldr	r0, [r0, #80]	; 0x50
     f80:	e3500000 	cmp	r0, #0
     f84:	0a000003 	beq	f98 <__ARM_grp_.debug_pubnames$10+0xd>
     f88:	e3a00010 	mov	r0, #16
     f8c:	eb00041b 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
     f90:	eb00042a 	bl	2040 <__CyU3PUsbSSDisConnecthandler_veneer>
     f94:	ea00000b 	b	fc8 <__ARM_grp_.debug_pubnames$17+0x10>
     f98:	e59f0824 	ldr	r0, [pc, #2084]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     f9c:	e5900064 	ldr	r0, [r0, #100]	; 0x64
     fa0:	e3c00004 	bic	r0, r0, #4
     fa4:	e59f1818 	ldr	r1, [pc, #2072]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
     fa8:	e5810064 	str	r0, [r1, #100]	; 0x64
     fac:	e3a02000 	mov	r2, #0
     fb0:	e3a01b02 	mov	r1, #2048	; 0x800
     fb4:	e59f0818 	ldr	r0, [pc, #2072]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
     fb8:	eb000416 	bl	2018 <___txe_event_flags_set_veneer>
     fbc:	e3a00000 	mov	r0, #0
     fc0:	e59f1808 	ldr	r1, [pc, #2056]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
     fc4:	e5810000 	str	r0, [r1]
     fc8:	e1a00000 	nop			; (mov r0, r0)
     fcc:	e1a00000 	nop			; (mov r0, r0)
     fd0:	e3550010 	cmp	r5, #16
     fd4:	3a000001 	bcc	fe0 <__ARM_grp_.debug_pubnames$17+0x28>
     fd8:	e3550017 	cmp	r5, #23
     fdc:	9a00000c 	bls	1014 <__ARM_grp_.debug_frame$27+0x14>
     fe0:	e59f0814 	ldr	r0, [pc, #2068]	; 17fc <__ARM_grp_.debug_pubnames$31+0xa>
     fe4:	e5900000 	ldr	r0, [r0]
     fe8:	e3500000 	cmp	r0, #0
     fec:	1a00000b 	bne	1020 <__ARM_grp_.debug_frame$27+0x20>
     ff0:	e59f07d0 	ldr	r0, [pc, #2000]	; 17c8 <__ARM_grp_.debug_frame$20>
     ff4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
     ff8:	e3500000 	cmp	r0, #0
     ffc:	1a000007 	bne	1020 <__ARM_grp_.debug_frame$27+0x20>
    1000:	e3a02000 	mov	r2, #0
    1004:	e3a01a01 	mov	r1, #4096	; 0x1000
    1008:	e59f07c4 	ldr	r0, [pc, #1988]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    100c:	eb000401 	bl	2018 <___txe_event_flags_set_veneer>
    1010:	ea000002 	b	1020 <__ARM_grp_.debug_frame$27+0x20>
    1014:	e3a00000 	mov	r0, #0
    1018:	e59f17b0 	ldr	r1, [pc, #1968]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    101c:	e5810000 	str	r0, [r1]
    1020:	e3160802 	tst	r6, #131072	; 0x20000
    1024:	0a000013 	beq	1078 <__ARM_grp_.debug_pubnames$45+0x2>
    1028:	e59f0794 	ldr	r0, [pc, #1940]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    102c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1030:	e3c00004 	bic	r0, r0, #4
    1034:	e59f1788 	ldr	r1, [pc, #1928]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1038:	e5810600 	str	r0, [r1, #1536]	; 0x600
    103c:	e1a00001 	mov	r0, r1
    1040:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1044:	e3c00004 	bic	r0, r0, #4
    1048:	e5810500 	str	r0, [r1, #1280]	; 0x500
    104c:	e3a02000 	mov	r2, #0
    1050:	e3a01080 	mov	r1, #128	; 0x80
    1054:	e59f0778 	ldr	r0, [pc, #1912]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1058:	eb0003ee 	bl	2018 <___txe_event_flags_set_veneer>
    105c:	e59f0760 	ldr	r0, [pc, #1888]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1060:	e5900008 	ldr	r0, [r0, #8]
    1064:	e3c00802 	bic	r0, r0, #131072	; 0x20000
    1068:	e59f1754 	ldr	r1, [pc, #1876]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    106c:	e5810008 	str	r0, [r1, #8]
    1070:	e3a00011 	mov	r0, #17
    1074:	eb0003e1 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1078:	e3160902 	tst	r6, #32768	; 0x8000
    107c:	0a000013 	beq	10d0 <__ARM_grp_.debug_pubnames$52+0x2d>
    1080:	e59f073c 	ldr	r0, [pc, #1852]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1084:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1088:	e3c00004 	bic	r0, r0, #4
    108c:	e59f1730 	ldr	r1, [pc, #1840]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1090:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1094:	e1a00001 	mov	r0, r1
    1098:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    109c:	e3c00004 	bic	r0, r0, #4
    10a0:	e5810500 	str	r0, [r1, #1280]	; 0x500
    10a4:	e3a02000 	mov	r2, #0
    10a8:	e3a01080 	mov	r1, #128	; 0x80
    10ac:	e59f0720 	ldr	r0, [pc, #1824]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10b0:	eb0003d8 	bl	2018 <___txe_event_flags_set_veneer>
    10b4:	e59f0708 	ldr	r0, [pc, #1800]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    10b8:	e5900008 	ldr	r0, [r0, #8]
    10bc:	e3c00902 	bic	r0, r0, #32768	; 0x8000
    10c0:	e59f16fc 	ldr	r1, [pc, #1788]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    10c4:	e5810008 	str	r0, [r1, #8]
    10c8:	e3a00012 	mov	r0, #18
    10cc:	eb0003cb 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    10d0:	e3160801 	tst	r6, #65536	; 0x10000
    10d4:	0a00000a 	beq	1104 <__ARM_grp_.debug_frame$48+0x24>
    10d8:	e3a02000 	mov	r2, #0
    10dc:	e3a01080 	mov	r1, #128	; 0x80
    10e0:	e59f06ec 	ldr	r0, [pc, #1772]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    10e4:	eb0003cb 	bl	2018 <___txe_event_flags_set_veneer>
    10e8:	e59f06d4 	ldr	r0, [pc, #1748]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    10ec:	e5900008 	ldr	r0, [r0, #8]
    10f0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    10f4:	e59f16c8 	ldr	r1, [pc, #1736]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    10f8:	e5810008 	str	r0, [r1, #8]
    10fc:	e3a00010 	mov	r0, #16
    1100:	eb0003be 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1104:	e3140c02 	tst	r4, #512	; 0x200
    1108:	0a0000ad 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    110c:	e59f06b0 	ldr	r0, [pc, #1712]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1110:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
    1114:	e59f16a8 	ldr	r1, [pc, #1704]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1118:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
    111c:	e0007001 	and	r7, r0, r1
    1120:	e3170010 	tst	r7, #16
    1124:	1a000001 	bne	1130 <__ARM_grp_.debug_frame$55+0x4>
    1128:	e3170020 	tst	r7, #32
    112c:	0a000004 	beq	1144 <__ARM_grp_.debug_frame$55+0x18>
    1130:	e3a00a02 	mov	r0, #8192	; 0x2000
    1134:	e59f1688 	ldr	r1, [pc, #1672]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1138:	e5810054 	str	r0, [r1, #84]	; 0x54
    113c:	e3e00000 	mvn	r0, #0
    1140:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1144:	e3170008 	tst	r7, #8
    1148:	0a000007 	beq	116c <__ARM_grp..debug_pubnames$cyu3system.h$.2_Qo3000_aUFODkt6bZc_L00000+0x26>
    114c:	e59f06ac 	ldr	r0, [pc, #1708]	; 1800 <__ARM_grp_.debug_pubnames$31+0xe>
    1150:	e59f166c 	ldr	r1, [pc, #1644]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1154:	e581041c 	str	r0, [r1, #1052]	; 0x41c
    1158:	e3a00008 	mov	r0, #8
    115c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1160:	e3a00000 	mov	r0, #0
    1164:	e59f165c 	ldr	r1, [pc, #1628]	; 17c8 <__ARM_grp_.debug_frame$20>
    1168:	e5810058 	str	r0, [r1, #88]	; 0x58
    116c:	e3170004 	tst	r7, #4
    1170:	0a000004 	beq	1188 <__ARM_grp_.debug_frame$62+0x10>
    1174:	e59f0684 	ldr	r0, [pc, #1668]	; 1800 <__ARM_grp_.debug_pubnames$31+0xe>
    1178:	e59f1644 	ldr	r1, [pc, #1604]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    117c:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1180:	e3a00004 	mov	r0, #4
    1184:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1188:	e3170001 	tst	r7, #1
    118c:	0a00001f 	beq	1210 <__ARM_grp_.debug_frame$27+0x8>
    1190:	e59f062c 	ldr	r0, [pc, #1580]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1194:	e590045c 	ldr	r0, [r0, #1116]	; 0x45c
    1198:	e3100c01 	tst	r0, #256	; 0x100
    119c:	0a000006 	beq	11bc <__ARM_grp_.debug_frame$20>
    11a0:	e3a00001 	mov	r0, #1
    11a4:	e59f161c 	ldr	r1, [pc, #1564]	; 17c8 <__ARM_grp_.debug_frame$20>
    11a8:	e5810048 	str	r0, [r1, #72]	; 0x48
    11ac:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
    11b0:	e59f160c 	ldr	r1, [pc, #1548]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    11b4:	e5810050 	str	r0, [r1, #80]	; 0x50
    11b8:	ea000011 	b	1204 <__ARM_grp_.debug_pubnames$24+0xb>
    11bc:	e3a00000 	mov	r0, #0
    11c0:	e59f1600 	ldr	r1, [pc, #1536]	; 17c8 <__ARM_grp_.debug_frame$20>
    11c4:	e5810048 	str	r0, [r1, #72]	; 0x48
    11c8:	e59f0618 	ldr	r0, [pc, #1560]	; 17e8 <__ARM_grp_.debug_line$1+0xc>
    11cc:	e5900000 	ldr	r0, [r0]
    11d0:	e3500000 	cmp	r0, #0
    11d4:	1a00000a 	bne	1204 <__ARM_grp_.debug_pubnames$24+0xb>
    11d8:	e2810000 	add	r0, r1, #0
    11dc:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    11e0:	e3500000 	cmp	r0, #0
    11e4:	0a000003 	beq	11f8 <__ARM_grp_.debug_pubnames$10+0x3a>
    11e8:	e3a00203 	mov	r0, #805306368	; 0x30000000
    11ec:	e59f15d0 	ldr	r1, [pc, #1488]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    11f0:	e5810050 	str	r0, [r1, #80]	; 0x50
    11f4:	ea000002 	b	1204 <__ARM_grp_.debug_pubnames$24+0xb>
    11f8:	e3a00303 	mov	r0, #201326592	; 0xc000000
    11fc:	e59f15c0 	ldr	r1, [pc, #1472]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1200:	e5810050 	str	r0, [r1, #80]	; 0x50
    1204:	e3a00001 	mov	r0, #1
    1208:	e59f15b4 	ldr	r1, [pc, #1460]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    120c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1210:	e3170c02 	tst	r7, #512	; 0x200
    1214:	0a00001c 	beq	128c <__ARM_grp_.debug_pubnames$45+0x10>
    1218:	e3a00001 	mov	r0, #1
    121c:	e59f15a4 	ldr	r1, [pc, #1444]	; 17c8 <__ARM_grp_.debug_frame$20>
    1220:	e5810070 	str	r0, [r1, #112]	; 0x70
    1224:	e59f0598 	ldr	r0, [pc, #1432]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1228:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    122c:	e3c00004 	bic	r0, r0, #4
    1230:	e59f158c 	ldr	r1, [pc, #1420]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1234:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1238:	e1a00001 	mov	r0, r1
    123c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    1240:	e3c00004 	bic	r0, r0, #4
    1244:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1248:	e3a00000 	mov	r0, #0
    124c:	e59f1574 	ldr	r1, [pc, #1396]	; 17c8 <__ARM_grp_.debug_frame$20>
    1250:	e5810054 	str	r0, [r1, #84]	; 0x54
    1254:	e3a00001 	mov	r0, #1
    1258:	e59f1590 	ldr	r1, [pc, #1424]	; 17f0 <__ARM_grp_.debug_line$1+0x14>
    125c:	e5810000 	str	r0, [r1]
    1260:	e3a02000 	mov	r2, #0
    1264:	e3a01c01 	mov	r1, #256	; 0x100
    1268:	e59f0564 	ldr	r0, [pc, #1380]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    126c:	eb000369 	bl	2018 <___txe_event_flags_set_veneer>
    1270:	e59f0548 	ldr	r0, [pc, #1352]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1274:	e5900004 	ldr	r0, [r0, #4]
    1278:	e3c00c02 	bic	r0, r0, #512	; 0x200
    127c:	e59f153c 	ldr	r1, [pc, #1340]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1280:	e5810004 	str	r0, [r1, #4]
    1284:	e3a00014 	mov	r0, #20
    1288:	eb00035c 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    128c:	e3170b02 	tst	r7, #2048	; 0x800
    1290:	0a00002c 	beq	1348 <__ARM_grp_.debug_pubnames$73+0x24>
    1294:	e3a00000 	mov	r0, #0
    1298:	e59f1564 	ldr	r1, [pc, #1380]	; 1804 <__ARM_grp_.debug_pubnames$31+0x12>
    129c:	e5810000 	str	r0, [r1]
    12a0:	e59f1548 	ldr	r1, [pc, #1352]	; 17f0 <__ARM_grp_.debug_line$1+0x14>
    12a4:	e5810000 	str	r0, [r1]
    12a8:	e59f1518 	ldr	r1, [pc, #1304]	; 17c8 <__ARM_grp_.debug_frame$20>
    12ac:	e581006c 	str	r0, [r1, #108]	; 0x6c
    12b0:	e59f0530 	ldr	r0, [pc, #1328]	; 17e8 <__ARM_grp_.debug_line$1+0xc>
    12b4:	e5900000 	ldr	r0, [r0]
    12b8:	e3500000 	cmp	r0, #0
    12bc:	1a00000e 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12c0:	e2810000 	add	r0, r1, #0
    12c4:	e5900048 	ldr	r0, [r0, #72]	; 0x48
    12c8:	e3500000 	cmp	r0, #0
    12cc:	1a00000a 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12d0:	e2810000 	add	r0, r1, #0
    12d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
    12d8:	e3500000 	cmp	r0, #0
    12dc:	1a000006 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12e0:	e59f04f8 	ldr	r0, [pc, #1272]	; 17e0 <__ARM_grp_.debug_line$1+0x4>
    12e4:	e5900000 	ldr	r0, [r0]
    12e8:	e3500000 	cmp	r0, #0
    12ec:	1a000002 	bne	12fc <__ARM_grp_.debug_pubnames$66+0x1>
    12f0:	e3a00303 	mov	r0, #201326592	; 0xc000000
    12f4:	e59f14c8 	ldr	r1, [pc, #1224]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    12f8:	e5810050 	str	r0, [r1, #80]	; 0x50
    12fc:	e59f04c4 	ldr	r0, [pc, #1220]	; 17c8 <__ARM_grp_.debug_frame$20>
    1300:	e5900040 	ldr	r0, [r0, #64]	; 0x40
    1304:	e3500000 	cmp	r0, #0
    1308:	0a000009 	beq	1334 <__ARM_grp_.debug_pubnames$73+0x10>
    130c:	e3a02000 	mov	r2, #0
    1310:	e3a01c01 	mov	r1, #256	; 0x100
    1314:	e59f04b8 	ldr	r0, [pc, #1208]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1318:	eb00033e 	bl	2018 <___txe_event_flags_set_veneer>
    131c:	e59f049c 	ldr	r0, [pc, #1180]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1320:	e5900004 	ldr	r0, [r0, #4]
    1324:	e3c00c02 	bic	r0, r0, #512	; 0x200
    1328:	e59f1490 	ldr	r1, [pc, #1168]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    132c:	e5810004 	str	r0, [r1, #4]
    1330:	ea000002 	b	1340 <__ARM_grp_.debug_pubnames$73+0x1c>
    1334:	e3a00b02 	mov	r0, #2048	; 0x800
    1338:	e59f1484 	ldr	r1, [pc, #1156]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    133c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1340:	e3a00015 	mov	r0, #21
    1344:	eb00032d 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1348:	e3170901 	tst	r7, #16384	; 0x4000
    134c:	0a00000a 	beq	137c <__ARM_grp_.debug_pubnames$94+0x3>
    1350:	e59f046c 	ldr	r0, [pc, #1132]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1354:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
    1358:	e3c00004 	bic	r0, r0, #4
    135c:	e59f1460 	ldr	r1, [pc, #1120]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    1360:	e5810600 	str	r0, [r1, #1536]	; 0x600
    1364:	e1a00001 	mov	r0, r1
    1368:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
    136c:	e3c00004 	bic	r0, r0, #4
    1370:	e5810500 	str	r0, [r1, #1280]	; 0x500
    1374:	e3a00901 	mov	r0, #16384	; 0x4000
    1378:	e5810404 	str	r0, [r1, #1028]	; 0x404
    137c:	e3170c01 	tst	r7, #256	; 0x100
    1380:	0a00000f 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    1384:	e3a00c01 	mov	r0, #256	; 0x100
    1388:	e59f1434 	ldr	r1, [pc, #1076]	; 17c4 <__ARM_grp_.debug_frame$13+0x40>
    138c:	e5810404 	str	r0, [r1, #1028]	; 0x404
    1390:	e59f0430 	ldr	r0, [pc, #1072]	; 17c8 <__ARM_grp_.debug_frame$20>
    1394:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1398:	e3500000 	cmp	r0, #0
    139c:	0a000008 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    13a0:	e59f043c 	ldr	r0, [pc, #1084]	; 17e4 <__ARM_grp_.debug_line$1+0x8>
    13a4:	e5900000 	ldr	r0, [r0]
    13a8:	e3500000 	cmp	r0, #0
    13ac:	0a000004 	beq	13c4 <__ARM_grp_.debug_pubnames$108+0x1>
    13b0:	e3a01000 	mov	r1, #0
    13b4:	e3a00009 	mov	r0, #9
    13b8:	e59f2424 	ldr	r2, [pc, #1060]	; 17e4 <__ARM_grp_.debug_line$1+0x8>
    13bc:	e5922000 	ldr	r2, [r2]
    13c0:	e12fff32 	blx	r2
    13c4:	e3140020 	tst	r4, #32
    13c8:	0a00007e 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x19>
    13cc:	e59f0434 	ldr	r0, [pc, #1076]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    13d0:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
    13d4:	e59f142c 	ldr	r1, [pc, #1068]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    13d8:	e5911518 	ldr	r1, [r1, #1304]	; 0x518
    13dc:	e0007001 	and	r7, r0, r1
    13e0:	e3170040 	tst	r7, #64	; 0x40
    13e4:	0a00000f 	beq	1428 <__ARM_grp_.debug_pubnames$122+0x13>
    13e8:	e3a00001 	mov	r0, #1
    13ec:	e59f13d4 	ldr	r1, [pc, #980]	; 17c8 <__ARM_grp_.debug_frame$20>
    13f0:	e5810070 	str	r0, [r1, #112]	; 0x70
    13f4:	e59f040c 	ldr	r0, [pc, #1036]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    13f8:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
    13fc:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1400:	e59f1400 	ldr	r1, [pc, #1024]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1404:	e5810498 	str	r0, [r1, #1176]	; 0x498
    1408:	e1a00001 	mov	r0, r1
    140c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
    1410:	e3c00801 	bic	r0, r0, #65536	; 0x10000
    1414:	e5810418 	str	r0, [r1, #1048]	; 0x418
    1418:	e1a00001 	mov	r0, r1
    141c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1420:	e3c00040 	bic	r0, r0, #64	; 0x40
    1424:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1428:	e3170008 	tst	r7, #8
    142c:	0a00000e 	beq	146c <__ARM_grp_.debug_pubnames$136+0x2>
    1430:	e59f03d4 	ldr	r0, [pc, #980]	; 180c <__ARM_grp_.debug_line$15>
    1434:	eb000303 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1438:	e59f03d0 	ldr	r0, [pc, #976]	; 1810 <__ARM_grp_.debug_line$15+0x4>
    143c:	eb000301 	bl	2048 <__CyU3PDmaChannelReset_veneer>
    1440:	e3a00001 	mov	r0, #1
    1444:	e59f137c 	ldr	r1, [pc, #892]	; 17c8 <__ARM_grp_.debug_frame$20>
    1448:	e5810018 	str	r0, [r1, #24]
    144c:	eb0002f5 	bl	2028 <__CyU3PUsbAckSetup_veneer>
    1450:	e59f03b0 	ldr	r0, [pc, #944]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1454:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1458:	e3c00008 	bic	r0, r0, #8
    145c:	e59f13a4 	ldr	r1, [pc, #932]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1460:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1464:	e3a00041 	mov	r0, #65	; 0x41
    1468:	eb0002e4 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    146c:	e3170004 	tst	r7, #4
    1470:	0a00001e 	beq	14f0 <__ARM_grp_.debug_frame$90+0xc>
    1474:	e59f0398 	ldr	r0, [pc, #920]	; 1814 <__ARM_grp_.debug_line$15+0x8>
    1478:	e5900054 	ldr	r0, [r0, #84]	; 0x54
    147c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
    1480:	0a000013 	beq	14d4 <__ARM_grp..debug_pubnames$cyu3system.h$.2_Hm3000__709$SAOzQ5_H00000+0x42>
    1484:	e3a00141 	mov	r0, #1073741840	; 0x40000010
    1488:	e59f1378 	ldr	r1, [pc, #888]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    148c:	e5810014 	str	r0, [r1, #20]
    1490:	e1c10140 	bic	r0, r1, r0, asr #2
    1494:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
    1498:	e3800010 	orr	r0, r0, #16
    149c:	e5810408 	str	r0, [r1, #1032]	; 0x408
    14a0:	e2810a1f 	add	r0, r1, #126976	; 0x1f000
    14a4:	e590000c 	ldr	r0, [r0, #12]
    14a8:	e2811a1f 	add	r1, r1, #126976	; 0x1f000
    14ac:	e581000c 	str	r0, [r1, #12]
    14b0:	e3a00d06 	mov	r0, #384	; 0x180
    14b4:	e5810004 	str	r0, [r1, #4]
    14b8:	e3a00001 	mov	r0, #1
    14bc:	e3a01000 	mov	r1, #0
    14c0:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
    14c4:	e3a00004 	mov	r0, #4
    14c8:	e59f1338 	ldr	r1, [pc, #824]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14cc:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    14d0:	ea000004 	b	14e8 <__ARM_grp_.debug_frame$90+0x4>
    14d4:	e59f032c 	ldr	r0, [pc, #812]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14d8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    14dc:	e3c00004 	bic	r0, r0, #4
    14e0:	e59f1320 	ldr	r1, [pc, #800]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14e4:	e5810518 	str	r0, [r1, #1304]	; 0x518
    14e8:	e3a00040 	mov	r0, #64	; 0x40
    14ec:	eb0002c3 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    14f0:	e3170010 	tst	r7, #16
    14f4:	0a000006 	beq	1514 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0xd>
    14f8:	e59f0308 	ldr	r0, [pc, #776]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    14fc:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1500:	e3c00010 	bic	r0, r0, #16
    1504:	e59f12fc 	ldr	r1, [pc, #764]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1508:	e5810518 	str	r0, [r1, #1304]	; 0x518
    150c:	e3a00042 	mov	r0, #66	; 0x42
    1510:	eb0002ba 	bl	2000 <__CyU3PUsbAddToEventLog_veneer>
    1514:	e3170080 	tst	r7, #128	; 0x80
    1518:	0a000004 	beq	1530 <__ARM_grp..debug_pubnames$cyu3socket.h$.2_Y_3000_8eHJwEfqWI5_510000+0x29>
    151c:	e59f02e4 	ldr	r0, [pc, #740]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1520:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1524:	e3c00080 	bic	r0, r0, #128	; 0x80
    1528:	e59f12d8 	ldr	r1, [pc, #728]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    152c:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1530:	e3170c01 	tst	r7, #256	; 0x100
    1534:	0a000004 	beq	154c <__ARM_grp_.debug_frame$97+0x10>
    1538:	e59f02c8 	ldr	r0, [pc, #712]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    153c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    1540:	e3c00c01 	bic	r0, r0, #256	; 0x100
    1544:	e59f12bc 	ldr	r1, [pc, #700]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1548:	e5810518 	str	r0, [r1, #1304]	; 0x518
    154c:	e3170b02 	tst	r7, #2048	; 0x800
    1550:	0a000004 	beq	1568 <__ARM_grp_.debug_pubnames$17+0x9>
    1554:	e59f02ac 	ldr	r0, [pc, #684]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1558:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
    155c:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1560:	e59f12a0 	ldr	r1, [pc, #672]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1564:	e5810518 	str	r0, [r1, #1304]	; 0x518
    1568:	e3170002 	tst	r7, #2
    156c:	0a00000f 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x1>
    1570:	e3a00002 	mov	r0, #2
    1574:	e59f128c 	ldr	r1, [pc, #652]	; 1808 <__ARM_grp_.debug_pubnames$31+0x16>
    1578:	e581051c 	str	r0, [r1, #1308]	; 0x51c
    157c:	e59f0260 	ldr	r0, [pc, #608]	; 17e4 <__ARM_grp_.debug_line$1+0x8>
    1580:	e5900000 	ldr	r0, [r0]
    1584:	e3500000 	cmp	r0, #0
    1588:	0a000008 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x1>
    158c:	e59f0234 	ldr	r0, [pc, #564]	; 17c8 <__ARM_grp_.debug_frame$20>
    1590:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
    1594:	e3500000 	cmp	r0, #0
    1598:	0a000004 	beq	15b0 <__ARM_grp_.debug_pubnames$31+0x1>
    159c:	e3a01000 	mov	r1, #0
    15a0:	e3a00009 	mov	r0, #9
    15a4:	e59f2238 	ldr	r2, [pc, #568]	; 17e4 <__ARM_grp_.debug_line$1+0x8>
    15a8:	e5922000 	ldr	r2, [r2]
    15ac:	e12fff32 	blx	r2
    15b0:	e3570002 	cmp	r7, #2
    15b4:	0a000003 	beq	15c8 <__ARM_grp_.debug_pubnames$31+0x19>
    15b8:	e3a02000 	mov	r2, #0
    15bc:	e3a01040 	mov	r1, #64	; 0x40
    15c0:	e59f020c 	ldr	r0, [pc, #524]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15c4:	eb000293 	bl	2018 <___txe_event_flags_set_veneer>
    15c8:	e3140b01 	tst	r4, #1024	; 0x400
    15cc:	0a000008 	beq	15f4 <__ARM_grp_.debug_pubnames$38+0x16>
    15d0:	e3a02000 	mov	r2, #0
    15d4:	e3a01c02 	mov	r1, #512	; 0x200
    15d8:	e59f01f4 	ldr	r0, [pc, #500]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    15dc:	eb00028d 	bl	2018 <___txe_event_flags_set_veneer>
    15e0:	e59f01d8 	ldr	r0, [pc, #472]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    15e4:	e5900004 	ldr	r0, [r0, #4]
    15e8:	e3c00b01 	bic	r0, r0, #1024	; 0x400
    15ec:	e59f11cc 	ldr	r1, [pc, #460]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    15f0:	e5810004 	str	r0, [r1, #4]
    15f4:	e3140010 	tst	r4, #16
    15f8:	0a000008 	beq	1620 <__ARM_grp_.debug_pubnames$45+0x12>
    15fc:	e3a02000 	mov	r2, #0
    1600:	e3a01020 	mov	r1, #32
    1604:	e59f01c8 	ldr	r0, [pc, #456]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1608:	eb000282 	bl	2018 <___txe_event_flags_set_veneer>
    160c:	e59f01ac 	ldr	r0, [pc, #428]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1610:	e5900004 	ldr	r0, [r0, #4]
    1614:	e3c00010 	bic	r0, r0, #16
    1618:	e59f11a0 	ldr	r1, [pc, #416]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    161c:	e5810004 	str	r0, [r1, #4]
    1620:	e3140b02 	tst	r4, #2048	; 0x800
    1624:	0a000008 	beq	164c <__ARM_grp_.debug_pubnames$52+0x19>
    1628:	e59f0190 	ldr	r0, [pc, #400]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    162c:	e5900004 	ldr	r0, [r0, #4]
    1630:	e3c00b02 	bic	r0, r0, #2048	; 0x800
    1634:	e59f1184 	ldr	r1, [pc, #388]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1638:	e5810004 	str	r0, [r1, #4]
    163c:	e3a02000 	mov	r2, #0
    1640:	e3a01301 	mov	r1, #67108864	; 0x4000000
    1644:	e59f0188 	ldr	r0, [pc, #392]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1648:	eb000272 	bl	2018 <___txe_event_flags_set_veneer>
    164c:	e3140001 	tst	r4, #1
    1650:	0a000008 	beq	1678 <__ARM_grp_.debug_pubnames$59+0x1f>
    1654:	e3a02000 	mov	r2, #0
    1658:	e3a01801 	mov	r1, #65536	; 0x10000
    165c:	e59f0170 	ldr	r0, [pc, #368]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1660:	eb00026c 	bl	2018 <___txe_event_flags_set_veneer>
    1664:	e59f0154 	ldr	r0, [pc, #340]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1668:	e5900004 	ldr	r0, [r0, #4]
    166c:	e3c00001 	bic	r0, r0, #1
    1670:	e59f1148 	ldr	r1, [pc, #328]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1674:	e5810004 	str	r0, [r1, #4]
    1678:	e3140002 	tst	r4, #2
    167c:	0a000008 	beq	16a4 <__ARM_grp_.debug_pubnames$73>
    1680:	e3a02000 	mov	r2, #0
    1684:	e3a01802 	mov	r1, #131072	; 0x20000
    1688:	e59f0144 	ldr	r0, [pc, #324]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    168c:	eb000261 	bl	2018 <___txe_event_flags_set_veneer>
    1690:	e59f0128 	ldr	r0, [pc, #296]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1694:	e5900004 	ldr	r0, [r0, #4]
    1698:	e3c00002 	bic	r0, r0, #2
    169c:	e59f111c 	ldr	r1, [pc, #284]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    16a0:	e5810004 	str	r0, [r1, #4]
    16a4:	e3140004 	tst	r4, #4
    16a8:	0a000008 	beq	16d0 <__ARM_grp_.debug_pubnames$80+0x7>
    16ac:	e3a02000 	mov	r2, #0
    16b0:	e3a01701 	mov	r1, #262144	; 0x40000
    16b4:	e59f0118 	ldr	r0, [pc, #280]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16b8:	eb000256 	bl	2018 <___txe_event_flags_set_veneer>
    16bc:	e59f00fc 	ldr	r0, [pc, #252]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    16c0:	e5900004 	ldr	r0, [r0, #4]
    16c4:	e3c00004 	bic	r0, r0, #4
    16c8:	e59f10f0 	ldr	r1, [pc, #240]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    16cc:	e5810004 	str	r0, [r1, #4]
    16d0:	e3140008 	tst	r4, #8
    16d4:	0a000008 	beq	16fc <__ARM_grp_.debug_pubnames$10+0xd>
    16d8:	e3a02000 	mov	r2, #0
    16dc:	e3a01702 	mov	r1, #524288	; 0x80000
    16e0:	e59f00ec 	ldr	r0, [pc, #236]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    16e4:	eb00024b 	bl	2018 <___txe_event_flags_set_veneer>
    16e8:	e59f00d0 	ldr	r0, [pc, #208]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    16ec:	e5900004 	ldr	r0, [r0, #4]
    16f0:	e3c00008 	bic	r0, r0, #8
    16f4:	e59f10c4 	ldr	r1, [pc, #196]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    16f8:	e5810004 	str	r0, [r1, #4]
    16fc:	e3140040 	tst	r4, #64	; 0x40
    1700:	0a000008 	beq	1728 <__ARM_grp_.debug_pubnames$10+0x39>
    1704:	e3a02000 	mov	r2, #0
    1708:	e3a01601 	mov	r1, #1048576	; 0x100000
    170c:	e59f00c0 	ldr	r0, [pc, #192]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    1710:	eb000240 	bl	2018 <___txe_event_flags_set_veneer>
    1714:	e59f00a4 	ldr	r0, [pc, #164]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1718:	e5900004 	ldr	r0, [r0, #4]
    171c:	e3c00040 	bic	r0, r0, #64	; 0x40
    1720:	e59f1098 	ldr	r1, [pc, #152]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1724:	e5810004 	str	r0, [r1, #4]
    1728:	e3140080 	tst	r4, #128	; 0x80
    172c:	0a000008 	beq	1754 <__ARM_grp_.debug_frame$139+0x1c>
    1730:	e3a02000 	mov	r2, #0
    1734:	e3a01602 	mov	r1, #2097152	; 0x200000
    1738:	e59f0094 	ldr	r0, [pc, #148]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    173c:	eb000235 	bl	2018 <___txe_event_flags_set_veneer>
    1740:	e59f0078 	ldr	r0, [pc, #120]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1744:	e5900004 	ldr	r0, [r0, #4]
    1748:	e3c00080 	bic	r0, r0, #128	; 0x80
    174c:	e59f106c 	ldr	r1, [pc, #108]	; 17c0 <__ARM_grp_.debug_frame$13+0x3c>
    1750:	e5810004 	str	r0, [r1, #4]
    1754:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

00001758 <CyU3PGctlPowerIntHandler>:
    1758:	e92d4010 	push	{r4, lr}
    175c:	e59f00b4 	ldr	r0, [pc, #180]	; 1818 <__ARM_grp_.debug_line$15+0xc>
    1760:	e5900034 	ldr	r0, [r0, #52]	; 0x34
    1764:	e59f10ac 	ldr	r1, [pc, #172]	; 1818 <__ARM_grp_.debug_line$15+0xc>
    1768:	e5911038 	ldr	r1, [r1, #56]	; 0x38
    176c:	e0004001 	and	r4, r0, r1
    1770:	e59f0050 	ldr	r0, [pc, #80]	; 17c8 <__ARM_grp_.debug_frame$20>
    1774:	e5900074 	ldr	r0, [r0, #116]	; 0x74
    1778:	e1100004 	tst	r0, r4
    177c:	0a00000e 	beq	17bc <__ARM_grp_.debug_frame$13+0x38>
    1780:	e3a00000 	mov	r0, #0
    1784:	e59f108c 	ldr	r1, [pc, #140]	; 1818 <__ARM_grp_.debug_line$15+0xc>
    1788:	e5810038 	str	r0, [r1, #56]	; 0x38
    178c:	e3a00b03 	mov	r0, #3072	; 0xc00
    1790:	e5810034 	str	r0, [r1, #52]	; 0x34
    1794:	e3a02000 	mov	r2, #0
    1798:	e3a01b01 	mov	r1, #1024	; 0x400
    179c:	e59f0030 	ldr	r0, [pc, #48]	; 17d4 <__ARM_grp_.debug_frame$20+0xc>
    17a0:	eb00021c 	bl	2018 <___txe_event_flags_set_veneer>
    17a4:	e3a00000 	mov	r0, #0
    17a8:	e59f1020 	ldr	r1, [pc, #32]	; 17d0 <__ARM_grp_.debug_frame$20+0x8>
    17ac:	e5810000 	str	r0, [r1]
    17b0:	e3a00001 	mov	r0, #1
    17b4:	e59f100c 	ldr	r1, [pc, #12]	; 17c8 <__ARM_grp_.debug_frame$20>
    17b8:	e5810060 	str	r0, [r1, #96]	; 0x60
    17bc:	e8bd8010 	pop	{r4, pc}
    17c0:	e0030000 	.word	0xe0030000
    17c4:	e0033000 	.word	0xe0033000
    17c8:	40031d40 	.word	0x40031d40
    17cc:	40030d84 	.word	0x40030d84
    17d0:	40030d64 	.word	0x40030d64
    17d4:	40031eb8 	.word	0x40031eb8
    17d8:	40030d70 	.word	0x40030d70
    17dc:	00001005 	.word	0x00001005
    17e0:	40030d6c 	.word	0x40030d6c
    17e4:	40030d9c 	.word	0x40030d9c
    17e8:	40030d40 	.word	0x40030d40
    17ec:	40030da4 	.word	0x40030da4
    17f0:	40030db4 	.word	0x40030db4
    17f4:	40030d74 	.word	0x40030d74
    17f8:	00000908 	.word	0x00000908
    17fc:	40030d68 	.word	0x40030d68
    1800:	80008000 	.word	0x80008000
    1804:	40030db0 	.word	0x40030db0
    1808:	e0031000 	.word	0xe0031000
    180c:	40031a80 	.word	0x40031a80
    1810:	40031b20 	.word	0x40031b20
    1814:	e0032000 	.word	0xe0032000
    1818:	e0051000 	.word	0xe0051000

0000181c <CyU3PVicSetupIntVectors>:
    181c:	e92d43ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
    1820:	e59f0078 	ldr	r0, [pc, #120]	; 18a0 <__ARM_grp_.debug_frame$41+0x4>
    1824:	e3a01000 	mov	r1, #0
    1828:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    182c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1830:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1834:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1838:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    183c:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1840:	e8b003fc 	ldm	r0!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1844:	e8a103fc 	stmia	r1!, {r2, r3, r4, r5, r6, r7, r8, r9}
    1848:	e59f0054 	ldr	r0, [pc, #84]	; 18a4 <__ARM_grp_.debug_frame$41+0x8>
    184c:	e59f1054 	ldr	r1, [pc, #84]	; 18a8 <__ARM_grp_.debug_pubnames$59>
    1850:	e59f2054 	ldr	r2, [pc, #84]	; 18ac <__ARM_grp_.debug_pubnames$59+0x4>
    1854:	e59f5054 	ldr	r5, [pc, #84]	; 18b0 <__ARM_grp_.debug_pubnames$59+0x8>
    1858:	e59f7054 	ldr	r7, [pc, #84]	; 18b4 <__ARM_grp_.debug_pubnames$59+0xc>
    185c:	e59f8054 	ldr	r8, [pc, #84]	; 18b8 <__ARM_grp_.debug_pubnames$59+0x10>
    1860:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1864:	e59f1050 	ldr	r1, [pc, #80]	; 18bc <__ARM_grp_.debug_pubnames$59+0x14>
    1868:	e59f2050 	ldr	r2, [pc, #80]	; 18c0 <__ARM_grp_.debug_pubnames$59+0x18>
    186c:	e59f4050 	ldr	r4, [pc, #80]	; 18c4 <__ARM_grp_.debug_pubnames$59+0x1c>
    1870:	e59f5050 	ldr	r5, [pc, #80]	; 18c8 <__ARM_grp_.debug_pubnames$59+0x20>
    1874:	e59f6050 	ldr	r6, [pc, #80]	; 18cc <__ARM_grp_.debug_pubnames$59+0x24>
    1878:	e59f8050 	ldr	r8, [pc, #80]	; 18d0 <__ARM_grp_.debug_line$22>
    187c:	e8a001fe 	stmia	r0!, {r1, r2, r3, r4, r5, r6, r7, r8}
    1880:	e59f104c 	ldr	r1, [pc, #76]	; 18d4 <__ARM_grp_.debug_pubnames$66+0x2>
    1884:	e59f204c 	ldr	r2, [pc, #76]	; 18d8 <__ARM_grp_.debug_pubnames$66+0x6>
    1888:	e59f304c 	ldr	r3, [pc, #76]	; 18dc <__ARM_grp_.debug_pubnames$66+0xa>
    188c:	e59f404c 	ldr	r4, [pc, #76]	; 18e0 <__ARM_grp_.debug_frame$48>
    1890:	e59f504c 	ldr	r5, [pc, #76]	; 18e4 <__ARM_grp_.debug_frame$48+0x4>
    1894:	e59f604c 	ldr	r6, [pc, #76]	; 18e8 <__ARM_grp_.debug_frame$48+0x8>
    1898:	e8a0007e 	stmia	r0!, {r1, r2, r3, r4, r5, r6}
    189c:	e8bd83ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
    18a0:	4001259c 	.word	0x4001259c
    18a4:	fffff100 	.word	0xfffff100
    18a8:	000018ec 	.word	0x000018ec
    18ac:	0000193c 	.word	0x0000193c
    18b0:	000019cc 	.word	0x000019cc
    18b4:	00001a14 	.word	0x00001a14
    18b8:	00001a5c 	.word	0x00001a5c
    18bc:	00001ae4 	.word	0x00001ae4
    18c0:	00001ac4 	.word	0x00001ac4
    18c4:	00001b2c 	.word	0x00001b2c
    18c8:	00001b74 	.word	0x00001b74
    18cc:	00001bb0 	.word	0x00001bb0
    18d0:	00001bec 	.word	0x00001bec
    18d4:	00001c28 	.word	0x00001c28
    18d8:	00001c64 	.word	0x00001c64
    18dc:	00001ca0 	.word	0x00001ca0
    18e0:	00001cdc 	.word	0x00001cdc
    18e4:	00001d24 	.word	0x00001d24
    18e8:	00001984 	.word	0x00001984

000018ec <__CyU3PGCTLCoreIntr>:
    18ec:	e92d000f 	push	{r0, r1, r2, r3}
    18f0:	e14f0000 	mrs	r0, SPSR
    18f4:	e24ee004 	sub	lr, lr, #4
    18f8:	e92d5401 	push	{r0, sl, ip, lr}
    18fc:	eb0001c1 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1900:	e3e010ff 	mvn	r1, #255	; 0xff
    1904:	e3a02000 	mov	r2, #0
    1908:	e5812000 	str	r2, [r1]
    190c:	e59f1020 	ldr	r1, [pc, #32]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1910:	e3a02001 	mov	r2, #1
    1914:	e5812000 	str	r2, [r1]
    1918:	eb0001b4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    191c:	ebfff9f7 	bl	100 <CyU3PGctlCoreIntHandler>
    1920:	eb0001b0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1924:	e59f100c 	ldr	r1, [pc, #12]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1928:	e3a02001 	mov	r2, #1
    192c:	e5812000 	str	r2, [r1]
    1930:	ea0001a6 	b	1fd0 <___tx_thread_context_restore_veneer>
    1934:	fffff014 	.word	0xfffff014
    1938:	fffff010 	.word	0xfffff010

0000193c <__CyU3PSWIIntr>:
    193c:	e92d000f 	push	{r0, r1, r2, r3}
    1940:	e14f0000 	mrs	r0, SPSR
    1944:	e24ee004 	sub	lr, lr, #4
    1948:	e92d5401 	push	{r0, sl, ip, lr}
    194c:	eb0001ad 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1950:	e3e010ff 	mvn	r1, #255	; 0xff
    1954:	e3a02000 	mov	r2, #0
    1958:	e5812000 	str	r2, [r1]
    195c:	e51f1030 	ldr	r1, [pc, #-48]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1960:	e3a02002 	mov	r2, #2
    1964:	e5812000 	str	r2, [r1]
    1968:	eb0001a0 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    196c:	ebfff9ff 	bl	170 <CyU3PSwiIntHandler>
    1970:	eb00019c 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1974:	e51f1044 	ldr	r1, [pc, #-68]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1978:	e3a02002 	mov	r2, #2
    197c:	e5812000 	str	r2, [r1]
    1980:	ea000192 	b	1fd0 <___tx_thread_context_restore_veneer>

00001984 <__CyU3PGCTLPowerIntr>:
    1984:	e92d000f 	push	{r0, r1, r2, r3}
    1988:	e14f0000 	mrs	r0, SPSR
    198c:	e24ee004 	sub	lr, lr, #4
    1990:	e92d5401 	push	{r0, sl, ip, lr}
    1994:	eb00019b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1998:	e3e010ff 	mvn	r1, #255	; 0xff
    199c:	e3a02000 	mov	r2, #0
    19a0:	e5812000 	str	r2, [r1]
    19a4:	e51f1078 	ldr	r1, [pc, #-120]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    19a8:	e3a02602 	mov	r2, #2097152	; 0x200000
    19ac:	e5812000 	str	r2, [r1]
    19b0:	eb00018e 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19b4:	ebffff67 	bl	1758 <CyU3PGctlPowerIntHandler>
    19b8:	eb00018a 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    19bc:	e51f108c 	ldr	r1, [pc, #-140]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    19c0:	e3a02602 	mov	r2, #2097152	; 0x200000
    19c4:	e5812000 	str	r2, [r1]
    19c8:	ea000180 	b	1fd0 <___tx_thread_context_restore_veneer>

000019cc <__CyU3PWDTIntr>:
    19cc:	e92d000f 	push	{r0, r1, r2, r3}
    19d0:	e14f0000 	mrs	r0, SPSR
    19d4:	e24ee004 	sub	lr, lr, #4
    19d8:	e92d5401 	push	{r0, sl, ip, lr}
    19dc:	eb000189 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    19e0:	e3e010ff 	mvn	r1, #255	; 0xff
    19e4:	e3a02000 	mov	r2, #0
    19e8:	e5812000 	str	r2, [r1]
    19ec:	e51f10c0 	ldr	r1, [pc, #-192]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    19f0:	e3a02010 	mov	r2, #16
    19f4:	e5812000 	str	r2, [r1]
    19f8:	eb00017c 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    19fc:	eb0000da 	bl	1d6c <CyU3PWDTIntHandler>
    1a00:	eb000178 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a04:	e51f10d4 	ldr	r1, [pc, #-212]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1a08:	e3a02010 	mov	r2, #16
    1a0c:	e5812000 	str	r2, [r1]
    1a10:	ea00016e 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a14 <__CyU3PPportDmaIntr>:
    1a14:	e92d000f 	push	{r0, r1, r2, r3}
    1a18:	e14f0000 	mrs	r0, SPSR
    1a1c:	e24ee004 	sub	lr, lr, #4
    1a20:	e92d5401 	push	{r0, sl, ip, lr}
    1a24:	eb000177 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a28:	e3e010ff 	mvn	r1, #255	; 0xff
    1a2c:	e3a02000 	mov	r2, #0
    1a30:	e5812000 	str	r2, [r1]
    1a34:	e51f1108 	ldr	r1, [pc, #-264]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1a38:	e3a02040 	mov	r2, #64	; 0x40
    1a3c:	e5812000 	str	r2, [r1]
    1a40:	eb00016a 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a44:	eb0000fe 	bl	1e44 <CyU3PPportDmaIntHandler>
    1a48:	eb000166 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a4c:	e51f111c 	ldr	r1, [pc, #-284]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1a50:	e3a02040 	mov	r2, #64	; 0x40
    1a54:	e5812000 	str	r2, [r1]
    1a58:	ea00015c 	b	1fd0 <___tx_thread_context_restore_veneer>

00001a5c <__CyU3PPportCoreIntr>:
    1a5c:	e92d000f 	push	{r0, r1, r2, r3}
    1a60:	e14f0000 	mrs	r0, SPSR
    1a64:	e24ee004 	sub	lr, lr, #4
    1a68:	e92d5401 	push	{r0, sl, ip, lr}
    1a6c:	eb000165 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1a70:	e3e010ff 	mvn	r1, #255	; 0xff
    1a74:	e3a02000 	mov	r2, #0
    1a78:	e5812000 	str	r2, [r1]
    1a7c:	e51f1150 	ldr	r1, [pc, #-336]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1a80:	e3a02080 	mov	r2, #128	; 0x80
    1a84:	e5812000 	str	r2, [r1]
    1a88:	eb000158 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1a8c:	ebfffbc1 	bl	998 <CyU3PPibIntHandler>
    1a90:	eb000154 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1a94:	e51f1164 	ldr	r1, [pc, #-356]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1a98:	e3a02080 	mov	r2, #128	; 0x80
    1a9c:	e5812000 	str	r2, [r1]
    1aa0:	ea00014a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001aa4 <__CyU3PPportCoreIntrHP>:
    1aa4:	e92d000f 	push	{r0, r1, r2, r3}
    1aa8:	e14f0000 	mrs	r0, SPSR
    1aac:	e24ee004 	sub	lr, lr, #4
    1ab0:	e92d5401 	push	{r0, sl, ip, lr}
    1ab4:	eb000153 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ab8:	ebfffbb6 	bl	998 <CyU3PPibIntHandler>
    1abc:	eb00014d 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ac0:	ea000142 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ac4 <__CyU3PUsbCoreIntr>:
    1ac4:	e92d000f 	push	{r0, r1, r2, r3}
    1ac8:	e14f0000 	mrs	r0, SPSR
    1acc:	e24ee004 	sub	lr, lr, #4
    1ad0:	e92d5401 	push	{r0, sl, ip, lr}
    1ad4:	eb00014b 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1ad8:	ebfffc0e 	bl	b18 <CyU3PUibIntHandler>
    1adc:	eb000145 	bl	1ff8 <__CyU3PVicClearInt_veneer>
    1ae0:	ea00013a 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ae4 <__CyU3PUsbDmaIntr>:
    1ae4:	e92d000f 	push	{r0, r1, r2, r3}
    1ae8:	e14f0000 	mrs	r0, SPSR
    1aec:	e24ee004 	sub	lr, lr, #4
    1af0:	e92d5401 	push	{r0, sl, ip, lr}
    1af4:	eb000143 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1af8:	e3e010ff 	mvn	r1, #255	; 0xff
    1afc:	e3a02000 	mov	r2, #0
    1b00:	e5812000 	str	r2, [r1]
    1b04:	e51f11d8 	ldr	r1, [pc, #-472]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1b08:	e3a02c01 	mov	r2, #256	; 0x100
    1b0c:	e5812000 	str	r2, [r1]
    1b10:	eb000136 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b14:	eb0000fb 	bl	1f08 <CyU3PUsbDmaIntHandler>
    1b18:	eb000132 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b1c:	e51f11ec 	ldr	r1, [pc, #-492]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1b20:	e3a02c01 	mov	r2, #256	; 0x100
    1b24:	e5812000 	str	r2, [r1]
    1b28:	ea000128 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b2c <__CyU3PSibDmaIntr>:
    1b2c:	e92d000f 	push	{r0, r1, r2, r3}
    1b30:	e14f0000 	mrs	r0, SPSR
    1b34:	e24ee004 	sub	lr, lr, #4
    1b38:	e92d5401 	push	{r0, sl, ip, lr}
    1b3c:	eb000131 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b40:	e3e010ff 	mvn	r1, #255	; 0xff
    1b44:	e3a02000 	mov	r2, #0
    1b48:	e5812000 	str	r2, [r1]
    1b4c:	e51f1220 	ldr	r1, [pc, #-544]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1b50:	e3a02b02 	mov	r2, #2048	; 0x800
    1b54:	e5812000 	str	r2, [r1]
    1b58:	eb000124 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1b5c:	eb0000d9 	bl	1ec8 <CyU3PSibDmaIntHandler>
    1b60:	eb000120 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1b64:	e51f1234 	ldr	r1, [pc, #-564]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1b68:	e3a02b02 	mov	r2, #2048	; 0x800
    1b6c:	e5812000 	str	r2, [r1]
    1b70:	ea000116 	b	1fd0 <___tx_thread_context_restore_veneer>

00001b74 <__CyU3PS0CoreIntr>:
    1b74:	e92d000f 	push	{r0, r1, r2, r3}
    1b78:	e14f0000 	mrs	r0, SPSR
    1b7c:	e24ee004 	sub	lr, lr, #4
    1b80:	e92d5401 	push	{r0, sl, ip, lr}
    1b84:	eb00011f 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1b88:	e3e010ff 	mvn	r1, #255	; 0xff
    1b8c:	e3a02000 	mov	r2, #0
    1b90:	e5812000 	str	r2, [r1]
    1b94:	e51f1268 	ldr	r1, [pc, #-616]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1b98:	e3a02a01 	mov	r2, #4096	; 0x1000
    1b9c:	e5812000 	str	r2, [r1]
    1ba0:	eb000112 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1ba4:	eb000085 	bl	1dc0 <CyU3PSib0IntHandler>
    1ba8:	eb00010e 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1bac:	ea000107 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bb0 <__CyU3PS1CoreIntr>:
    1bb0:	e92d000f 	push	{r0, r1, r2, r3}
    1bb4:	e14f0000 	mrs	r0, SPSR
    1bb8:	e24ee004 	sub	lr, lr, #4
    1bbc:	e92d5401 	push	{r0, sl, ip, lr}
    1bc0:	eb000110 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1bc4:	e3e010ff 	mvn	r1, #255	; 0xff
    1bc8:	e3a02000 	mov	r2, #0
    1bcc:	e5812000 	str	r2, [r1]
    1bd0:	e51f12a4 	ldr	r1, [pc, #-676]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1bd4:	e3a02a02 	mov	r2, #8192	; 0x2000
    1bd8:	e5812000 	str	r2, [r1]
    1bdc:	eb000103 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1be0:	eb00007e 	bl	1de0 <CyU3PSib1IntHandler>
    1be4:	eb0000ff 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1be8:	ea0000f8 	b	1fd0 <___tx_thread_context_restore_veneer>

00001bec <__CyU3PI2CCoreIntr>:
    1bec:	e92d000f 	push	{r0, r1, r2, r3}
    1bf0:	e14f0000 	mrs	r0, SPSR
    1bf4:	e24ee004 	sub	lr, lr, #4
    1bf8:	e92d5401 	push	{r0, sl, ip, lr}
    1bfc:	eb000101 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c00:	e3e010ff 	mvn	r1, #255	; 0xff
    1c04:	e3a02000 	mov	r2, #0
    1c08:	e5812000 	str	r2, [r1]
    1c0c:	e51f12e0 	ldr	r1, [pc, #-736]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1c10:	e3a02902 	mov	r2, #32768	; 0x8000
    1c14:	e5812000 	str	r2, [r1]
    1c18:	eb0000f4 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c1c:	ebfff963 	bl	1b0 <CyU3PI2cIntHandler>
    1c20:	eb0000f0 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c24:	ea0000e9 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c28 <__CyU3PI2SCoreIntr>:
    1c28:	e92d000f 	push	{r0, r1, r2, r3}
    1c2c:	e14f0000 	mrs	r0, SPSR
    1c30:	e24ee004 	sub	lr, lr, #4
    1c34:	e92d5401 	push	{r0, sl, ip, lr}
    1c38:	eb0000f2 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c3c:	e3e010ff 	mvn	r1, #255	; 0xff
    1c40:	e3a02000 	mov	r2, #0
    1c44:	e5812000 	str	r2, [r1]
    1c48:	e51f131c 	ldr	r1, [pc, #-796]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1c4c:	e3a02801 	mov	r2, #65536	; 0x10000
    1c50:	e5812000 	str	r2, [r1]
    1c54:	eb0000e5 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c58:	ebfff95a 	bl	1c8 <CyU3PI2sIntHandler>
    1c5c:	eb0000e1 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c60:	ea0000da 	b	1fd0 <___tx_thread_context_restore_veneer>

00001c64 <__CyU3PSpiCoreIntr>:
    1c64:	e92d000f 	push	{r0, r1, r2, r3}
    1c68:	e14f0000 	mrs	r0, SPSR
    1c6c:	e24ee004 	sub	lr, lr, #4
    1c70:	e92d5401 	push	{r0, sl, ip, lr}
    1c74:	eb0000e3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1c78:	e3e010ff 	mvn	r1, #255	; 0xff
    1c7c:	e3a02000 	mov	r2, #0
    1c80:	e5812000 	str	r2, [r1]
    1c84:	e51f1358 	ldr	r1, [pc, #-856]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1c88:	e3a02802 	mov	r2, #131072	; 0x20000
    1c8c:	e5812000 	str	r2, [r1]
    1c90:	eb0000d6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1c94:	ebfff95d 	bl	210 <CyU3PSpiIntHandler>
    1c98:	eb0000d2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1c9c:	ea0000cb 	b	1fd0 <___tx_thread_context_restore_veneer>

00001ca0 <__CyU3PUartCoreIntr>:
    1ca0:	e92d000f 	push	{r0, r1, r2, r3}
    1ca4:	e14f0000 	mrs	r0, SPSR
    1ca8:	e24ee004 	sub	lr, lr, #4
    1cac:	e92d5401 	push	{r0, sl, ip, lr}
    1cb0:	eb0000d4 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cb4:	e3e010ff 	mvn	r1, #255	; 0xff
    1cb8:	e3a02000 	mov	r2, #0
    1cbc:	e5812000 	str	r2, [r1]
    1cc0:	e51f1394 	ldr	r1, [pc, #-916]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1cc4:	e3a02701 	mov	r2, #262144	; 0x40000
    1cc8:	e5812000 	str	r2, [r1]
    1ccc:	eb0000c7 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1cd0:	ebfff930 	bl	198 <CyU3PUartIntHandler>
    1cd4:	eb0000c3 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1cd8:	ea0000bc 	b	1fd0 <___tx_thread_context_restore_veneer>

00001cdc <__CyU3PGpioCoreIntr>:
    1cdc:	e92d000f 	push	{r0, r1, r2, r3}
    1ce0:	e14f0000 	mrs	r0, SPSR
    1ce4:	e24ee004 	sub	lr, lr, #4
    1ce8:	e92d5401 	push	{r0, sl, ip, lr}
    1cec:	eb0000c5 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1cf0:	e3e010ff 	mvn	r1, #255	; 0xff
    1cf4:	e3a02000 	mov	r2, #0
    1cf8:	e5812000 	str	r2, [r1]
    1cfc:	e51f13d0 	ldr	r1, [pc, #-976]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1d00:	e3a02702 	mov	r2, #524288	; 0x80000
    1d04:	e5812000 	str	r2, [r1]
    1d08:	eb0000b8 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d0c:	ebfff933 	bl	1e0 <CyU3PGpioCoreIntHandler>
    1d10:	eb0000b4 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d14:	e51f13e4 	ldr	r1, [pc, #-996]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1d18:	e3a02702 	mov	r2, #524288	; 0x80000
    1d1c:	e5812000 	str	r2, [r1]
    1d20:	ea0000aa 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d24 <__CyU3PLppDmaIntr>:
    1d24:	e92d000f 	push	{r0, r1, r2, r3}
    1d28:	e14f0000 	mrs	r0, SPSR
    1d2c:	e24ee004 	sub	lr, lr, #4
    1d30:	e92d5401 	push	{r0, sl, ip, lr}
    1d34:	eb0000b3 	bl	2008 <___tx_thread_vectored_context_save_veneer>
    1d38:	e3e010ff 	mvn	r1, #255	; 0xff
    1d3c:	e3a02000 	mov	r2, #0
    1d40:	e5812000 	str	r2, [r1]
    1d44:	e51f1418 	ldr	r1, [pc, #-1048]	; 1934 <__ARM_grp_.debug_frame$55+0xc>
    1d48:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d4c:	e5812000 	str	r2, [r1]
    1d50:	eb0000a6 	bl	1ff0 <___tx_thread_irq_nesting_start_veneer>
    1d54:	eb00002a 	bl	1e04 <CyU3PLppDmaIntHandler>
    1d58:	eb0000a2 	bl	1fe8 <___tx_thread_irq_nesting_end_veneer>
    1d5c:	e51f142c 	ldr	r1, [pc, #-1068]	; 1938 <__ARM_grp_.debug_frame$55+0x10>
    1d60:	e3a02601 	mov	r2, #1048576	; 0x100000
    1d64:	e5812000 	str	r2, [r1]
    1d68:	ea000098 	b	1fd0 <___tx_thread_context_restore_veneer>

00001d6c <CyU3PWDTIntHandler>:
    1d6c:	e92d4010 	push	{r4, lr}
    1d70:	e59f0040 	ldr	r0, [pc, #64]	; 1db8 <__ARM_grp_.debug_line$71+0x4>
    1d74:	e5900014 	ldr	r0, [r0, #20]
    1d78:	e3800c03 	orr	r0, r0, #768	; 0x300
    1d7c:	e59f1034 	ldr	r1, [pc, #52]	; 1db8 <__ARM_grp_.debug_line$71+0x4>
    1d80:	e5810014 	str	r0, [r1, #20]
    1d84:	e1a00001 	mov	r0, r1
    1d88:	e5904014 	ldr	r4, [r0, #20]
    1d8c:	e59f0028 	ldr	r0, [pc, #40]	; 1dbc <__ARM_grp_.debug_line$71+0x8>
    1d90:	e5900000 	ldr	r0, [r0]
    1d94:	e581001c 	str	r0, [r1, #28]
    1d98:	e1a00001 	mov	r0, r1
    1d9c:	e5900014 	ldr	r0, [r0, #20]
    1da0:	e3c04c03 	bic	r4, r0, #768	; 0x300
    1da4:	e3844c05 	orr	r4, r4, #1280	; 0x500
    1da8:	e1a00001 	mov	r0, r1
    1dac:	e5804014 	str	r4, [r0, #20]
    1db0:	eb00007c 	bl	1fa8 <___tx_timer_interrupt_veneer>
    1db4:	e8bd8010 	pop	{r4, pc}
    1db8:	e0050000 	.word	0xe0050000
    1dbc:	40030dbc 	.word	0x40030dbc

00001dc0 <CyU3PSib0IntHandler>:
    1dc0:	e92d4010 	push	{r4, lr}
    1dc4:	e3a0000c 	mov	r0, #12
    1dc8:	eb00007e 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dcc:	e3a02000 	mov	r2, #0
    1dd0:	e3a01020 	mov	r1, #32
    1dd4:	e59f0024 	ldr	r0, [pc, #36]	; 1e00 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x4>
    1dd8:	eb00008e 	bl	2018 <___txe_event_flags_set_veneer>
    1ddc:	e8bd8010 	pop	{r4, pc}

00001de0 <CyU3PSib1IntHandler>:
    1de0:	e92d4010 	push	{r4, lr}
    1de4:	e3a0000d 	mov	r0, #13
    1de8:	eb000076 	bl	1fc8 <__CyU3PVicDisableInt_veneer>
    1dec:	e3a02000 	mov	r2, #0
    1df0:	e3a01040 	mov	r1, #64	; 0x40
    1df4:	e59f0004 	ldr	r0, [pc, #4]	; 1e00 <__ARM_grp..debug_line$stdint.h$.2_Ux1000_JaPZa2IGEze_300000+0x4>
    1df8:	eb000086 	bl	2018 <___txe_event_flags_set_veneer>
    1dfc:	e8bd8010 	pop	{r4, pc}
    1e00:	400315b8 	.word	0x400315b8

00001e04 <CyU3PLppDmaIntHandler>:
    1e04:	e92d4070 	push	{r4, r5, r6, lr}
    1e08:	e59f0180 	ldr	r0, [pc, #384]	; 1f90 <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x1c>
    1e0c:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1e10:	e3a04000 	mov	r4, #0
    1e14:	ea000007 	b	1e38 <__ARM_grp_.debug_pubnames$80+0x10>
    1e18:	e3a00001 	mov	r0, #1
    1e1c:	e1150410 	tst	r5, r0, lsl r4
    1e20:	0a000002 	beq	1e30 <__ARM_grp_.debug_pubnames$80+0x8>
    1e24:	e1a01004 	mov	r1, r4
    1e28:	e3a00000 	mov	r0, #0
    1e2c:	eb000081 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e30:	e2840001 	add	r0, r4, #1
    1e34:	e20040ff 	and	r4, r0, #255	; 0xff
    1e38:	e3540008 	cmp	r4, #8
    1e3c:	bafffff5 	blt	1e18 <CyU3PLppDmaIntHandler+0x14>
    1e40:	e8bd8070 	pop	{r4, r5, r6, pc}

00001e44 <CyU3PPportDmaIntHandler>:
    1e44:	e92d4070 	push	{r4, r5, r6, lr}
    1e48:	e59f0144 	ldr	r0, [pc, #324]	; 1f94 <__ARM_grp_.debug_pubnames$150+0x1>
    1e4c:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1e50:	e1a00804 	lsl	r0, r4, #16
    1e54:	e1b00820 	lsrs	r0, r0, #16
    1e58:	0a00000b 	beq	1e8c <__ARM_grp_.debug_pubnames$94+0x15>
    1e5c:	e3a05000 	mov	r5, #0
    1e60:	ea000007 	b	1e84 <__ARM_grp_.debug_pubnames$94+0xd>
    1e64:	e3a00001 	mov	r0, #1
    1e68:	e1140510 	tst	r4, r0, lsl r5
    1e6c:	0a000002 	beq	1e7c <__ARM_grp_.debug_pubnames$94+0x5>
    1e70:	e1a01005 	mov	r1, r5
    1e74:	e3a00001 	mov	r0, #1
    1e78:	eb00006e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1e7c:	e2850001 	add	r0, r5, #1
    1e80:	e20050ff 	and	r5, r0, #255	; 0xff
    1e84:	e355000f 	cmp	r5, #15
    1e88:	bafffff5 	blt	1e64 <__ARM_grp..debug_line$cyu3types.h$.2_Qy0000_p7U8n3Ejzr7_300000+0x4>
    1e8c:	e1b00844 	asrs	r0, r4, #16
    1e90:	0a00000b 	beq	1ec4 <__ARM_grp_.debug_pubnames$101+0x25>
    1e94:	e3a05010 	mov	r5, #16
    1e98:	ea000007 	b	1ebc <__ARM_grp_.debug_pubnames$101+0x1d>
    1e9c:	e3a00001 	mov	r0, #1
    1ea0:	e1140510 	tst	r4, r0, lsl r5
    1ea4:	0a000002 	beq	1eb4 <__ARM_grp_.debug_pubnames$101+0x15>
    1ea8:	e1a01005 	mov	r1, r5
    1eac:	e3a00001 	mov	r0, #1
    1eb0:	eb000060 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1eb4:	e2850001 	add	r0, r5, #1
    1eb8:	e20050ff 	and	r5, r0, #255	; 0xff
    1ebc:	e3550020 	cmp	r5, #32
    1ec0:	bafffff5 	blt	1e9c <__ARM_grp_.debug_frame$27+0xc>
    1ec4:	e8bd8070 	pop	{r4, r5, r6, pc}

00001ec8 <CyU3PSibDmaIntHandler>:
    1ec8:	e92d4070 	push	{r4, r5, r6, lr}
    1ecc:	e59f00c4 	ldr	r0, [pc, #196]	; 1f98 <__ARM_grp_.debug_pubnames$150+0x5>
    1ed0:	e5905f00 	ldr	r5, [r0, #3840]	; 0xf00
    1ed4:	e3a04000 	mov	r4, #0
    1ed8:	ea000007 	b	1efc <__ARM_grp_.debug_pubnames$115+0x4>
    1edc:	e3a00001 	mov	r0, #1
    1ee0:	e1150410 	tst	r5, r0, lsl r4
    1ee4:	0a000002 	beq	1ef4 <__ARM_grp..debug_line$cyfx3_api.h$.2_kB1000_POyZ95x9I_b_g00000+0x4>
    1ee8:	e1a01004 	mov	r1, r4
    1eec:	e3a00002 	mov	r0, #2
    1ef0:	eb000050 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1ef4:	e2840001 	add	r0, r4, #1
    1ef8:	e20040ff 	and	r4, r0, #255	; 0xff
    1efc:	e3540008 	cmp	r4, #8
    1f00:	bafffff5 	blt	1edc <__ARM_grp_.debug_frame$34+0x8>
    1f04:	e8bd8070 	pop	{r4, r5, r6, pc}

00001f08 <CyU3PUsbDmaIntHandler>:
    1f08:	e92d4070 	push	{r4, r5, r6, lr}
    1f0c:	e59f0088 	ldr	r0, [pc, #136]	; 1f9c <__ARM_grp_.debug_pubnames$150+0x9>
    1f10:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f14:	e3540000 	cmp	r4, #0
    1f18:	0a00000b 	beq	1f4c <__ARM_grp_.debug_pubnames$129+0x4>
    1f1c:	e3a05000 	mov	r5, #0
    1f20:	ea000007 	b	1f44 <__ARM_grp_.debug_pubnames$122+0x23>
    1f24:	e3a00001 	mov	r0, #1
    1f28:	e1140510 	tst	r4, r0, lsl r5
    1f2c:	0a000002 	beq	1f3c <__ARM_grp_.debug_pubnames$122+0x1b>
    1f30:	e1a01005 	mov	r1, r5
    1f34:	e3a00003 	mov	r0, #3
    1f38:	eb00003e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f3c:	e2850001 	add	r0, r5, #1
    1f40:	e20050ff 	and	r5, r0, #255	; 0xff
    1f44:	e3550010 	cmp	r5, #16
    1f48:	bafffff5 	blt	1f24 <__ARM_grp_.debug_pubnames$122+0x3>
    1f4c:	e59f004c 	ldr	r0, [pc, #76]	; 1fa0 <__ARM_grp_.debug_pubnames$150+0xd>
    1f50:	e5904f00 	ldr	r4, [r0, #3840]	; 0xf00
    1f54:	e3540000 	cmp	r4, #0
    1f58:	0a00000b 	beq	1f8c <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x18>
    1f5c:	e3a05000 	mov	r5, #0
    1f60:	ea000007 	b	1f84 <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x10>
    1f64:	e3a00001 	mov	r0, #1
    1f68:	e1140510 	tst	r4, r0, lsl r5
    1f6c:	0a000002 	beq	1f7c <__ARM_grp..debug_line$stdlib.h$.2_IP0000_7cR$UmnN8f7_300000+0x8>
    1f70:	e1a01005 	mov	r1, r5
    1f74:	e3a00004 	mov	r0, #4
    1f78:	eb00002e 	bl	2038 <__CyU3PDmaIntHandler_veneer>
    1f7c:	e2850001 	add	r0, r5, #1
    1f80:	e20050ff 	and	r5, r0, #255	; 0xff
    1f84:	e3550010 	cmp	r5, #16
    1f88:	bafffff5 	blt	1f64 <__ARM_grp_.debug_pubnames$129+0x1c>
    1f8c:	e8bd8070 	pop	{r4, r5, r6, pc}
    1f90:	e000f000 	.word	0xe000f000
    1f94:	e001f000 	.word	0xe001f000
    1f98:	e002f000 	.word	0xe002f000
    1f9c:	e003f000 	.word	0xe003f000
    1fa0:	e004f000 	.word	0xe004f000
    1fa4:	00000000 	.word	0x00000000

00001fa8 <___tx_timer_interrupt_veneer>:
    1fa8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fac <___tx_timer_interrupt_veneer+0x4>
    1fac:	4000af90 	.word	0x4000af90

00001fb0 <__CyU3PBusyWait_veneer>:
    1fb0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fb4 <__ARM_grp_.debug_frame$27>
    1fb4:	400138b4 	.word	0x400138b4

00001fb8 <__CyFx3Usb3LnkRelaxHpTimeout_veneer>:
    1fb8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fbc <__CyFx3Usb3LnkRelaxHpTimeout_veneer+0x4>
    1fbc:	40022338 	.word	0x40022338

00001fc0 <___txe_queue_send_veneer>:
    1fc0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fc4 <___txe_queue_send_veneer+0x4>
    1fc4:	4000a724 	.word	0x4000a724

00001fc8 <__CyU3PVicDisableInt_veneer>:
    1fc8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fcc <__CyU3PVicDisableInt_veneer+0x4>
    1fcc:	400222ac 	.word	0x400222ac

00001fd0 <___tx_thread_context_restore_veneer>:
    1fd0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fd4 <___tx_thread_context_restore_veneer+0x4>
    1fd4:	4000b080 	.word	0x4000b080

00001fd8 <__CyFx3UsbWritePhyReg_veneer>:
    1fd8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fdc <__CyFx3UsbWritePhyReg_veneer+0x4>
    1fdc:	40022468 	.word	0x40022468

00001fe0 <__CyFx3DevClearSwInterrupt_veneer>:
    1fe0:	e51ff004 	ldr	pc, [pc, #-4]	; 1fe4 <__CyFx3DevClearSwInterrupt_veneer+0x4>
    1fe4:	40014678 	.word	0x40014678

00001fe8 <___tx_thread_irq_nesting_end_veneer>:
    1fe8:	e51ff004 	ldr	pc, [pc, #-4]	; 1fec <__ARM_grp_.debug_pubnames$164+0x2>
    1fec:	4000b198 	.word	0x4000b198

00001ff0 <___tx_thread_irq_nesting_start_veneer>:
    1ff0:	e51ff004 	ldr	pc, [pc, #-4]	; 1ff4 <___tx_thread_irq_nesting_start_veneer+0x4>
    1ff4:	4000b1bc 	.word	0x4000b1bc

00001ff8 <__CyU3PVicClearInt_veneer>:
    1ff8:	e51ff004 	ldr	pc, [pc, #-4]	; 1ffc <__CyU3PVicClearInt_veneer+0x4>
    1ffc:	40022290 	.word	0x40022290

00002000 <__CyU3PUsbAddToEventLog_veneer>:
    2000:	e51ff004 	ldr	pc, [pc, #-4]	; 2004 <__CyU3PUsbAddToEventLog_veneer+0x4>
    2004:	4001fde4 	.word	0x4001fde4

00002008 <___tx_thread_vectored_context_save_veneer>:
    2008:	e51ff004 	ldr	pc, [pc, #-4]	; 200c <___tx_thread_vectored_context_save_veneer+0x4>
    200c:	4000af3c 	.word	0x4000af3c

00002010 <___txe_queue_front_send_veneer>:
    2010:	e51ff004 	ldr	pc, [pc, #-4]	; 2014 <___txe_queue_front_send_veneer+0x4>
    2014:	4000a5e4 	.word	0x4000a5e4

00002018 <___txe_event_flags_set_veneer>:
    2018:	e51ff004 	ldr	pc, [pc, #-4]	; 201c <___txe_event_flags_set_veneer+0x4>
    201c:	4000a058 	.word	0x4000a058

00002020 <__CyU3PLppEventSend_veneer>:
    2020:	e51ff004 	ldr	pc, [pc, #-4]	; 2024 <__CyU3PLppEventSend_veneer+0x4>
    2024:	4001406c 	.word	0x4001406c

00002028 <__CyU3PUsbAckSetup_veneer>:
    2028:	e51ff004 	ldr	pc, [pc, #-4]	; 202c <__CyU3PUsbAckSetup_veneer+0x4>
    202c:	4001c980 	.word	0x4001c980

00002030 <__CyU3PMboxReset_veneer>:
    2030:	e51ff004 	ldr	pc, [pc, #-4]	; 2034 <__CyU3PMboxReset_veneer+0x4>
    2034:	4001b638 	.word	0x4001b638

00002038 <__CyU3PDmaIntHandler_veneer>:
    2038:	e51ff004 	ldr	pc, [pc, #-4]	; 203c <__ARM_grp..debug_line$tx_port.h$.2_hB2000_hUg2TURfmz4_700000>
    203c:	40022990 	.word	0x40022990

00002040 <__CyU3PUsbSSDisConnecthandler_veneer>:
    2040:	e51ff004 	ldr	pc, [pc, #-4]	; 2044 <__CyU3PUsbSSDisConnecthandler_veneer+0x4>
    2044:	400212e4 	.word	0x400212e4

00002048 <__CyU3PDmaChannelReset_veneer>:
    2048:	e51ff004 	ldr	pc, [pc, #-4]	; 204c <__CyU3PDmaChannelReset_veneer+0x4>
    204c:	4001659c 	.word	0x4001659c

Disassembly of section .text:

40003000 <creatqu>:
		0

};

void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003000:	e59f1008 	ldr	r1, [pc, #8]	; 40003010 <creatqu+0x10>
		260, //2B: 0
		0

};

void creatqu(uint8_t para){
40003004:	e1a02000 	mov	r2, r0
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
40003008:	e3a00004 	mov	r0, #4
4000300c:	ea0040b7 	b	400132f0 <CyU3PDebugPrint>
40003010:	40010e14 	.word	0x40010e14

40003014 <cmdquTest>:
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
40003014:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003018:	e5902004 	ldr	r2, [r0, #4]
void creatqu(uint8_t para){
	CyU3PDebugPrint (4, "The test cmdqu %d \r\n", para); // additional debug
}

/**** it's used test the cmdqu data structure. */
void  cmdquTest(VdRingBuf *cmdbuf, uint8_t state){
4000301c:	e24dd014 	sub	sp, sp, #20
40003020:	e1a04000 	mov	r4, r0
40003024:	e1a03001 	mov	r3, r1
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
40003028:	e3a00004 	mov	r0, #4
4000302c:	e59f1380 	ldr	r1, [pc, #896]	; 400033b4 <cmdquTest+0x3a0>
40003030:	eb0040ae 	bl	400132f0 <CyU3PDebugPrint>
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
40003034:	e594e010 	ldr	lr, [r4, #16]
40003038:	e594700c 	ldr	r7, [r4, #12]
4000303c:	e5945014 	ldr	r5, [r4, #20]
40003040:	e5d4c01a 	ldrb	ip, [r4, #26]
40003044:	e5d42000 	ldrb	r2, [r4]
40003048:	e5943008 	ldr	r3, [r4, #8]
4000304c:	e59f1364 	ldr	r1, [pc, #868]	; 400033b8 <cmdquTest+0x3a4>
40003050:	e3a00004 	mov	r0, #4
40003054:	e58de008 	str	lr, [sp, #8]
40003058:	e58d7000 	str	r7, [sp]
4000305c:	e58d5004 	str	r5, [sp, #4]
40003060:	e58dc00c 	str	ip, [sp, #12]
40003064:	eb0040a1 	bl	400132f0 <CyU3PDebugPrint>
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
40003068:	e5945008 	ldr	r5, [r4, #8]
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
4000306c:	e3a07000 	mov	r7, #0
40003070:	e5956038 	ldr	r6, [r5, #56]	; 0x38
40003074:	e5d52000 	ldrb	r2, [r5]
40003078:	e58d6000 	str	r6, [sp]
4000307c:	e5950034 	ldr	r0, [r5, #52]	; 0x34
40003080:	e59f4334 	ldr	r4, [pc, #820]	; 400033bc <cmdquTest+0x3a8>
40003084:	e98d0081 	stmib	sp, {r0, r7}
40003088:	e595c03c 	ldr	ip, [r5, #60]	; 0x3c
4000308c:	e1a01004 	mov	r1, r4
40003090:	e1a03005 	mov	r3, r5
40003094:	e3a00004 	mov	r0, #4
40003098:	e58dc00c 	str	ip, [sp, #12]
4000309c:	eb004093 	bl	400132f0 <CyU3PDebugPrint>
400030a0:	e5951078 	ldr	r1, [r5, #120]	; 0x78
400030a4:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
400030a8:	e58d1000 	str	r1, [sp]
400030ac:	e5953074 	ldr	r3, [r5, #116]	; 0x74
400030b0:	e3a06001 	mov	r6, #1
400030b4:	e98d0048 	stmib	sp, {r3, r6}
400030b8:	e595c07c 	ldr	ip, [r5, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030bc:	e2857040 	add	r7, r5, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030c0:	e1a01004 	mov	r1, r4
400030c4:	e1a03007 	mov	r3, r7
400030c8:	e3a00004 	mov	r0, #4
400030cc:	e58dc00c 	str	ip, [sp, #12]
400030d0:	eb004086 	bl	400132f0 <CyU3PDebugPrint>
400030d4:	e59500b8 	ldr	r0, [r5, #184]	; 0xb8
400030d8:	e5d52080 	ldrb	r2, [r5, #128]	; 0x80
400030dc:	e58d0000 	str	r0, [sp]
400030e0:	e59510b4 	ldr	r1, [r5, #180]	; 0xb4
400030e4:	e3a03002 	mov	r3, #2
400030e8:	e98d000a 	stmib	sp, {r1, r3}
400030ec:	e595c0bc 	ldr	ip, [r5, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400030f0:	e2856080 	add	r6, r5, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400030f4:	e1a01004 	mov	r1, r4
400030f8:	e1a03006 	mov	r3, r6
400030fc:	e3a00004 	mov	r0, #4
40003100:	e58dc00c 	str	ip, [sp, #12]
40003104:	eb004079 	bl	400132f0 <CyU3PDebugPrint>
40003108:	e59700b8 	ldr	r0, [r7, #184]	; 0xb8
4000310c:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003110:	e58d0000 	str	r0, [sp]
40003114:	e59710b4 	ldr	r1, [r7, #180]	; 0xb4
40003118:	e3a06003 	mov	r6, #3
4000311c:	e98d0042 	stmib	sp, {r1, r6}
40003120:	e597c0bc 	ldr	ip, [r7, #188]	; 0xbc
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003124:	e28550c0 	add	r5, r5, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003128:	e1a01004 	mov	r1, r4
4000312c:	e1a03005 	mov	r3, r5
40003130:	e3a00004 	mov	r0, #4
40003134:	e58dc00c 	str	ip, [sp, #12]
40003138:	eb00406c 	bl	400132f0 <CyU3PDebugPrint>
4000313c:	e5953078 	ldr	r3, [r5, #120]	; 0x78
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003140:	e28760c0 	add	r6, r7, #192	; 0xc0
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003144:	e5d52040 	ldrb	r2, [r5, #64]	; 0x40
40003148:	e58d3000 	str	r3, [sp]
4000314c:	e5957074 	ldr	r7, [r5, #116]	; 0x74
40003150:	e3a05004 	mov	r5, #4
40003154:	e58d7004 	str	r7, [sp, #4]
40003158:	e58d5008 	str	r5, [sp, #8]
4000315c:	e596c03c 	ldr	ip, [r6, #60]	; 0x3c
40003160:	e1a01004 	mov	r1, r4
40003164:	e1a03006 	mov	r3, r6
40003168:	e1a00005 	mov	r0, r5
4000316c:	e58dc00c 	str	ip, [sp, #12]
40003170:	eb00405e 	bl	400132f0 <CyU3PDebugPrint>
40003174:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003178:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000317c:	e58d0000 	str	r0, [sp]
40003180:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003184:	e3a03005 	mov	r3, #5
40003188:	e98d000a 	stmib	sp, {r1, r3}
4000318c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003190:	e2867040 	add	r7, r6, #64	; 0x40
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003194:	e1a01004 	mov	r1, r4
40003198:	e1a03007 	mov	r3, r7
4000319c:	e1a00005 	mov	r0, r5
400031a0:	e58dc00c 	str	ip, [sp, #12]
400031a4:	eb004051 	bl	400132f0 <CyU3PDebugPrint>
400031a8:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400031ac:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400031b0:	e58d0000 	str	r0, [sp]
400031b4:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400031b8:	e3a03006 	mov	r3, #6
400031bc:	e98d000a 	stmib	sp, {r1, r3}
400031c0:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031c4:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031c8:	e1a01004 	mov	r1, r4
400031cc:	e1a03006 	mov	r3, r6
400031d0:	e1a00005 	mov	r0, r5
400031d4:	e58dc00c 	str	ip, [sp, #12]
400031d8:	eb004044 	bl	400132f0 <CyU3PDebugPrint>
400031dc:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400031e0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400031e4:	e58d0000 	str	r0, [sp]
400031e8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400031ec:	e3a03007 	mov	r3, #7
400031f0:	e98d000a 	stmib	sp, {r1, r3}
400031f4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400031f8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400031fc:	e1a01004 	mov	r1, r4
40003200:	e1a03007 	mov	r3, r7
40003204:	e1a00005 	mov	r0, r5
40003208:	e58dc00c 	str	ip, [sp, #12]
4000320c:	eb004037 	bl	400132f0 <CyU3PDebugPrint>
40003210:	e5970078 	ldr	r0, [r7, #120]	; 0x78
40003214:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003218:	e58d0000 	str	r0, [sp]
4000321c:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003220:	e3a03008 	mov	r3, #8
40003224:	e98d000a 	stmib	sp, {r1, r3}
40003228:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000322c:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003230:	e1a01004 	mov	r1, r4
40003234:	e1a03006 	mov	r3, r6
40003238:	e1a00005 	mov	r0, r5
4000323c:	e58dc00c 	str	ip, [sp, #12]
40003240:	eb00402a 	bl	400132f0 <CyU3PDebugPrint>
40003244:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003248:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000324c:	e58d0000 	str	r0, [sp]
40003250:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003254:	e3a03009 	mov	r3, #9
40003258:	e98d000a 	stmib	sp, {r1, r3}
4000325c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003260:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003264:	e1a01004 	mov	r1, r4
40003268:	e1a03007 	mov	r3, r7
4000326c:	e1a00005 	mov	r0, r5
40003270:	e58dc00c 	str	ip, [sp, #12]
40003274:	eb00401d 	bl	400132f0 <CyU3PDebugPrint>
40003278:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000327c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003280:	e58d0000 	str	r0, [sp]
40003284:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003288:	e3a0300a 	mov	r3, #10
4000328c:	e98d000a 	stmib	sp, {r1, r3}
40003290:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003294:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003298:	e1a01004 	mov	r1, r4
4000329c:	e1a03006 	mov	r3, r6
400032a0:	e1a00005 	mov	r0, r5
400032a4:	e58dc00c 	str	ip, [sp, #12]
400032a8:	eb004010 	bl	400132f0 <CyU3PDebugPrint>
400032ac:	e5960078 	ldr	r0, [r6, #120]	; 0x78
400032b0:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
400032b4:	e58d0000 	str	r0, [sp]
400032b8:	e5961074 	ldr	r1, [r6, #116]	; 0x74
400032bc:	e3a0300b 	mov	r3, #11
400032c0:	e98d000a 	stmib	sp, {r1, r3}
400032c4:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032c8:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
400032cc:	e1a01004 	mov	r1, r4
400032d0:	e1a03007 	mov	r3, r7
400032d4:	e1a00005 	mov	r0, r5
400032d8:	e58dc00c 	str	ip, [sp, #12]
400032dc:	eb004003 	bl	400132f0 <CyU3PDebugPrint>
400032e0:	e5970078 	ldr	r0, [r7, #120]	; 0x78
400032e4:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
400032e8:	e58d0000 	str	r0, [sp]
400032ec:	e5971074 	ldr	r1, [r7, #116]	; 0x74
400032f0:	e3a0300c 	mov	r3, #12
400032f4:	e98d000a 	stmib	sp, {r1, r3}
400032f8:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
400032fc:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003300:	e1a01004 	mov	r1, r4
40003304:	e1a03006 	mov	r3, r6
40003308:	e1a00005 	mov	r0, r5
4000330c:	e58dc00c 	str	ip, [sp, #12]
40003310:	eb003ff6 	bl	400132f0 <CyU3PDebugPrint>
40003314:	e5960078 	ldr	r0, [r6, #120]	; 0x78
40003318:	e5d62040 	ldrb	r2, [r6, #64]	; 0x40
4000331c:	e58d0000 	str	r0, [sp]
40003320:	e5961074 	ldr	r1, [r6, #116]	; 0x74
40003324:	e3a0300d 	mov	r3, #13
40003328:	e98d000a 	stmib	sp, {r1, r3}
4000332c:	e596c07c 	ldr	ip, [r6, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003330:	e2877080 	add	r7, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003334:	e1a01004 	mov	r1, r4
40003338:	e1a03007 	mov	r3, r7
4000333c:	e1a00005 	mov	r0, r5
40003340:	e58dc00c 	str	ip, [sp, #12]
40003344:	eb003fe9 	bl	400132f0 <CyU3PDebugPrint>
40003348:	e5970078 	ldr	r0, [r7, #120]	; 0x78
4000334c:	e5d72040 	ldrb	r2, [r7, #64]	; 0x40
40003350:	e58d0000 	str	r0, [sp]
40003354:	e5971074 	ldr	r1, [r7, #116]	; 0x74
40003358:	e3a0300e 	mov	r3, #14
4000335c:	e98d000a 	stmib	sp, {r1, r3}
40003360:	e597c07c 	ldr	ip, [r7, #124]	; 0x7c
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
40003364:	e2866080 	add	r6, r6, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003368:	e1a01004 	mov	r1, r4
4000336c:	e1a03006 	mov	r3, r6
40003370:	e1a00005 	mov	r0, r5
40003374:	e58dc00c 	str	ip, [sp, #12]
40003378:	eb003fdc 	bl	400132f0 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
4000337c:	e2873080 	add	r3, r7, #128	; 0x80
	CyU3PDebugPrint (4, "Command Queue %s state %d\r\n", cmdbuf->bufferName, state);
	CyU3PDebugPrint (4, "Command Queue check queueID %d startAdd 0x%x endAdd 0x%x write 0x%x read 0x%x queueFlag %d\r\n",
			cmdbuf->ringbufID, cmdbuf->startAdd, cmdbuf->endAdd, cmdbuf->writePtr, cmdbuf->readPtr, cmdbuf->bugFlag);
	lcCmdDes = cmdbuf->startAdd;
	for(cmdQuIdx = 0; cmdQuIdx < 0x10/*MAXCMD*/; cmdQuIdx++){
		CyU3PDebugPrint (4, "Command Queue check cmdID %d CmdDes 0x%x previous 0x%x next 0x%x Idx %d cmdflag %d\r\n",
40003380:	e593c038 	ldr	ip, [r3, #56]	; 0x38
40003384:	e5d72080 	ldrb	r2, [r7, #128]	; 0x80
40003388:	e58dc000 	str	ip, [sp]
4000338c:	e5930034 	ldr	r0, [r3, #52]	; 0x34
40003390:	e3a0100f 	mov	r1, #15
40003394:	e98d0003 	stmib	sp, {r0, r1}
40003398:	e593c03c 	ldr	ip, [r3, #60]	; 0x3c
4000339c:	e1a00005 	mov	r0, r5
400033a0:	e1a01004 	mov	r1, r4
400033a4:	e58dc00c 	str	ip, [sp, #12]
400033a8:	eb003fd0 	bl	400132f0 <CyU3PDebugPrint>
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx, lcCmdDes->cmdFlag);
		lcCmdDes += 1;
	}

	return;
}
400033ac:	e28dd014 	add	sp, sp, #20
400033b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
400033b4:	40010e2c 	.word	0x40010e2c
400033b8:	40010e48 	.word	0x40010e48
400033bc:	40010ea8 	.word	0x40010ea8

400033c0 <cmdbufCreate>:

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033c0:	e92d4070 	push	{r4, r5, r6, lr}
400033c4:	e1a04000 	mov	r4, r0
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033c8:	e3a00a01 	mov	r0, #4096	; 0x1000

	return;
}

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
400033cc:	e1a05002 	mov	r5, r2
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033d0:	eb0000a7 	bl	40003674 <CyU3PMemAlloc>
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033d4:	e3a01000 	mov	r1, #0
400033d8:	e1a02001 	mov	r2, r1
400033dc:	e3a03038 	mov	r3, #56	; 0x38

/***** create a command buffer. *******/
VdRingBuf  cmdbufCreate(uint16_t size, CyU3PMutex *muxPtr){
	VdRingBuf cmdque;

	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
400033e0:	e1a06000 	mov	r6, r0
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033e4:	e1a00005 	mov	r0, r5
400033e8:	eb001b34 	bl	4000a0c0 <_txe_mutex_create>
400033ec:	e59f1028 	ldr	r1, [pc, #40]	; 4000341c <cmdbufCreate+0x5c>
400033f0:	e3a03000 	mov	r3, #0
	cmdque.startAdd = CyU3PMemAlloc(sizeof(VdcmdDes)*(MAXCMD));    //allocate memory for command queue which can be put 256 commands
	cmdque.bugFlag = CyFalse;  // set command queue unavailable.
	cmdque.bufferName = "I2C command queue";
	cmdque.ringbufID = CMDQU0;
	cmdque.numUnit = MAXCMD;
	cmdque.endAdd = cmdque.startAdd + MAXCMD;  //the read pointer is initialed one command unit behind of write pointer
400033f4:	e2860a01 	add	r0, r6, #4096	; 0x1000
	//cmdque.ringMux = CyU3PMemAlloc(sizeof(CyU3PMutex));
	cmdque.ringMux = muxPtr;
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
400033f8:	e3a02040 	mov	r2, #64	; 0x40
400033fc:	e584000c 	str	r0, [r4, #12]
40003400:	e5c43000 	strb	r3, [r4]
40003404:	e9840042 	stmib	r4, {r1, r6}
40003408:	e1c421b8 	strh	r2, [r4, #24]
4000340c:	e5c4301a 	strb	r3, [r4, #26]
40003410:	e584501c 	str	r5, [r4, #28]
	return cmdque;
}
40003414:	e1a00004 	mov	r0, r4
40003418:	e8bd8070 	pop	{r4, r5, r6, pc}
4000341c:	40010f00 	.word	0x40010f00

40003420 <cmdquInit>:
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003420:	e5903008 	ldr	r3, [r0, #8]
40003424:	e590200c 	ldr	r2, [r0, #12]
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003428:	e92d4010 	push	{r4, lr}
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
4000342c:	e1530002 	cmp	r3, r2
	CyU3PMutexCreate(cmdque.ringMux, CYU3P_NO_INHERIT);
	return cmdque;
}

/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
40003430:	e1a04000 	mov	r4, r0
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003434:	8a000013 	bhi	40003488 <cmdquInit+0x68>
40003438:	e3a02000 	mov	r2, #0
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
4000343c:	e1a0e002 	mov	lr, r2
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003440:	e2820001 	add	r0, r2, #1
40003444:	e1a01800 	lsl	r1, r0, #16
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
40003448:	e5c32000 	strb	r2, [r3]
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
4000344c:	e1a02821 	lsr	r2, r1, #16
40003450:	e5941008 	ldr	r1, [r4, #8]
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003454:	e242c002 	sub	ip, r2, #2
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003458:	e202003f 	and	r0, r2, #63	; 0x3f
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000345c:	e20cc03f 	and	ip, ip, #63	; 0x3f
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003460:	e0810300 	add	r0, r1, r0, lsl #6
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
40003464:	e081c30c 	add	ip, r1, ip, lsl #6
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
		lcCmdDes->cmdDesNext = cmdqu->startAdd + (uint16_t)((cmdQuIdx + 1)&0x3F);
40003468:	e5830034 	str	r0, [r3, #52]	; 0x34
		lcCmdDes->cmdDesPrevious = cmdqu->startAdd + (uint16_t)((cmdQuIdx - 1)&0x3F);
4000346c:	e583c038 	str	ip, [r3, #56]	; 0x38
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003470:	e594100c 	ldr	r1, [r4, #12]
		lcCmdDes->CmdID = cmdQuIdx;
		lcCmdDes->cmdFlag = deswait;            //initial the command unavailable
40003474:	e583e03c 	str	lr, [r3, #60]	; 0x3c
/**** initialize the command queue  *****/
void  cmdquInit(VdRingBuf *cmdqu){
	uint16_t cmdQuIdx = 0;
	VdcmdDes *lcCmdDes;

	for(lcCmdDes = cmdqu->startAdd; lcCmdDes <= cmdqu->endAdd; lcCmdDes++){
40003478:	e2833040 	add	r3, r3, #64	; 0x40
4000347c:	e1510003 	cmp	r1, r3
40003480:	2affffee 	bcs	40003440 <cmdquInit+0x20>
40003484:	e5943008 	ldr	r3, [r4, #8]
	CyU3PDebugPrint (4, "send a I2C command(11) writeptr 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
40003488:	e5843010 	str	r3, [r4, #16]
	CyU3PThreadSleep(10);
4000348c:	e3a0000a 	mov	r0, #10
40003490:	eb0015f8 	bl	40008c78 <_tx_thread_sleep>
	cmdqu->writePtr = cmdqu->readPtr;
40003494:	e5942010 	ldr	r2, [r4, #16]
	CyU3PThreadSleep(10);
40003498:	e3a0000a 	mov	r0, #10
	CyU3PDebugPrint (4, "send a I2C command(11) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	cmdqu->readPtr = cmdqu->startAdd;
	CyU3PThreadSleep(10);
	cmdqu->writePtr = cmdqu->readPtr;
4000349c:	e5842014 	str	r2, [r4, #20]
	CyU3PThreadSleep(10);
400034a0:	eb0015f4 	bl	40008c78 <_tx_thread_sleep>
	cmdqu->bugFlag = (uint8_t)CyTrue; //command queue available.
400034a4:	e3a03001 	mov	r3, #1
400034a8:	e5c4301a 	strb	r3, [r4, #26]
			cmdqu->writePtr, cmdqu->writePtr->cmdDesNext, cmdqu->writePtr->cmdDesPrevious);
	CyU3PDebugPrint (4, "send a I2C command(12) start 0x%x next 0x%x previous 0x%x\r\n",
			cmdqu->startAdd, cmdqu->startAdd->cmdDesNext, cmdqu->startAdd->cmdDesPrevious);
#endif
	return;
}
400034ac:	e8bd8010 	pop	{r4, pc}

400034b0 <cmdbufDestroy>:

CyBool_t  cmdbufDestroy(VdRingBuf *cmdqu){
	;  //na
	return CyTrue;
}
400034b0:	e3a00001 	mov	r0, #1
400034b4:	e12fff1e 	bx	lr

400034b8 <cmdSet>:

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
400034b8:	e5900008 	ldr	r0, [r0, #8]
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034bc:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
400034c0:	e080c301 	add	ip, r0, r1, lsl #6
	if(lcCmdDes->cmdFlag != desusing){
400034c4:	e59c403c 	ldr	r4, [ip, #60]	; 0x3c
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034c8:	e24dd014 	sub	sp, sp, #20
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034cc:	e354000f 	cmp	r4, #15
	;  //na
	return CyTrue;
}

/******* set a command into command queue based on the command ID *******/
CyBool_t  cmdSet(VdRingBuf *cmdqu, uint8_t cmdID, uint8_t RegAdd, uint8_t DevAdd, uint8_t Data, uint8_t dataIdx){
400034d0:	e5dd5028 	ldrb	r5, [sp, #40]	; 0x28
400034d4:	e5dd402c 	ldrb	r4, [sp, #44]	; 0x2c
	VdcmdDes *lcCmdDes;

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
400034d8:	0a000016 	beq	40003538 <cmdSet+0x80>
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
400034dc:	e0847084 	add	r7, r4, r4, lsl #1
400034e0:	e08c7087 	add	r7, ip, r7, lsl #1
400034e4:	e5c73005 	strb	r3, [r7, #5]
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034e8:	e59f3054 	ldr	r3, [pc, #84]	; 40003544 <cmdSet+0x8c>

	lcCmdDes = cmdqu->startAdd; //get a command descriptor
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
400034ec:	e5c72004 	strb	r2, [r7, #4]
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
400034f0:	e5c75006 	strb	r5, [r7, #6]
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
400034f4:	e7d02301 	ldrb	r2, [r0, r1, lsl #6]
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
400034f8:	e1a00081 	lsl	r0, r1, #1
400034fc:	e19310b0 	ldrh	r1, [r3, r0]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
40003500:	e59c6034 	ldr	r6, [ip, #52]	; 0x34
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003504:	e3a0e0ff 	mov	lr, #255	; 0xff
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003508:	e3a03000 	mov	r3, #0
	lcCmdDes = lcCmdDes + cmdID;
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
4000350c:	e1c710b8 	strh	r1, [r7, #8]
		lcCmdDes->NumPara = dataIdx;
		lcCmdDes->curNum = 0;
40003510:	e5cc3001 	strb	r3, [ip, #1]
	if(lcCmdDes->cmdFlag != desusing){
		((lcCmdDes->CmdPar)+dataIdx)->DevAdd = DevAdd;
		((lcCmdDes->CmdPar)+dataIdx)->RegAdd = RegAdd;
		((lcCmdDes->CmdPar)+dataIdx)->Data = Data;
		((lcCmdDes->CmdPar)+dataIdx)->DelayT = DelayArray[cmdID];
		lcCmdDes->NumPara = dataIdx;
40003514:	e5cc4002 	strb	r4, [ip, #2]
		lcCmdDes->curNum = 0;
		lcCmdDes->cmdFlag = desReady;
40003518:	e58ce03c 	str	lr, [ip, #60]	; 0x3c
//#ifdef USB_DEBUG_PRINT
		CyU3PDebugPrint (4, "Command Queue set cmdID %d CmdDes 0x%x next 0x%x cmdflag %d dataIdx %d data 0x%x\r\n",
4000351c:	e3a00004 	mov	r0, #4
40003520:	e59f1020 	ldr	r1, [pc, #32]	; 40003548 <cmdSet+0x90>
40003524:	e1a0300c 	mov	r3, ip
40003528:	e88d4040 	stm	sp, {r6, lr}
4000352c:	e58d4008 	str	r4, [sp, #8]
40003530:	e58d500c 	str	r5, [sp, #12]
40003534:	eb003f6d 	bl	400132f0 <CyU3PDebugPrint>
		CyU3PDebugPrint (4, "Command Queue set fail as transferring cmdID %d CmdDes 0x%x\r\n",
					lcCmdDes->CmdID, lcCmdDes);
#endif
	}
	return CyTrue;
}
40003538:	e3a00001 	mov	r0, #1
4000353c:	e28dd014 	add	sp, sp, #20
40003540:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40003544:	40010d94 	.word	0x40010d94
40003548:	40010f14 	.word	0x40010f14

4000354c <statGet>:
#if 1 // copy
	VdstateDes *lcStatDes;
	uint8_t Data0, Data1;
	uint8_t sendData[2];

	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host
4000354c:	e5903008 	ldr	r3, [r0, #8]
40003550:	e0833301 	add	r3, r3, r1, lsl #6

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
40003554:	e593203c 	ldr	r2, [r3, #60]	; 0x3c
40003558:	e352000f 	cmp	r2, #15
4000355c:	112fff1e 	bxne	lr
		switch(statID){
40003560:	e3510001 	cmp	r1, #1
40003564:	0a00000e 	beq	400035a4 <statGet+0x58>
40003568:	e3510005 	cmp	r1, #5
4000356c:	0a000007 	beq	40003590 <statGet+0x44>
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
40003570:	e59fc068 	ldr	ip, [pc, #104]	; 400035e0 <statGet+0x94>
40003574:	e5d30006 	ldrb	r0, [r3, #6]
					glEp0Buffer[1] = 0;
40003578:	e3a02000 	mov	r2, #0
					sendData[1] = 0;
					break;
				//case SaturCtlID6:
				//case WBTLevCtlID10:
				default:
					glEp0Buffer[0] = lcStatDes->staPar->Data;
4000357c:	e5cc0000 	strb	r0, [ip]
					glEp0Buffer[1] = 0;
40003580:	e5cc2001 	strb	r2, [ip, #1]
					break;
			 }
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40003584:	e59f1054 	ldr	r1, [pc, #84]	; 400035e0 <statGet+0x94>
40003588:	e3a00002 	mov	r0, #2
4000358c:	ea006894 	b	4001d7e4 <CyU3PUsbSendEP0Data>
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
					break;
				case HueCtlID5:
					Data0 = lcStatDes->staPar->Data;
					glEp0Buffer[0] = Data0 + GREEN_BASE;
40003590:	e5d31006 	ldrb	r1, [r3, #6]
40003594:	e59f3044 	ldr	r3, [pc, #68]	; 400035e0 <statGet+0x94>
40003598:	e2410080 	sub	r0, r1, #128	; 0x80
4000359c:	e5c30000 	strb	r0, [r3]
					sendData[1] = 0;
					break;
400035a0:	eafffff7 	b	40003584 <statGet+0x38>
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035a4:	e5d3c00c 	ldrb	ip, [r3, #12]
	lcStatDes = (VdstateDes*)((statqu->startAdd) + statID);//get a state descriptor, and find any available state to send to host

	if(lcStatDes->statFlag == 0x0F){//statFlag: 0x00:noCom; 0xFF:cmdready; 0x0F:state ready.
		switch(statID){
			case BrgtCtlID1:
					Data0 = lcStatDes->staPar->Data;
400035a8:	e5d32006 	ldrb	r2, [r3, #6]
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
400035ac:	e31c0002 	tst	ip, #2
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b0:	01a02122 	lsreq	r2, r2, #2
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035b4:	11a0c30c 	lslne	ip, ip, #6
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035b8:	01e02c82 	mvneq	r2, r2, lsl #25
					}
					glEp0Buffer[0] = Data1;
400035bc:	e59f101c 	ldr	r1, [pc, #28]	; 400035e0 <statGet+0x94>
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c0:	120cc040 	andne	ip, ip, #64	; 0x40
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035c4:	01e02ca2 	mvneq	r2, r2, lsr #25
					Data0 = lcStatDes->staPar->Data;
					Data1 = ((lcStatDes->staPar)+1)->Data;
					//CtrlParArry[CtrlID][13] = Data0;
					//CtrlParArry[CtrlID][14] = Data1;
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
400035c8:	118cc122 	orrne	ip, ip, r2, lsr #2
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
400035cc:	0182c30c 	orreq	ip, r2, ip, lsl #6
					}
					glEp0Buffer[0] = Data1;
					glEp0Buffer[1] = 0;
400035d0:	e3a00000 	mov	r0, #0
					if (Data1&0x2){ //check the sign bit (bit1)
						Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					}else{
						Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					}
					glEp0Buffer[0] = Data1;
400035d4:	e5c1c000 	strb	ip, [r1]
					glEp0Buffer[1] = 0;
400035d8:	e5c10001 	strb	r0, [r1, #1]
					break;
400035dc:	eaffffe8 	b	40003584 <statGet+0x38>
400035e0:	40030f20 	.word	0x40030f20

400035e4 <cmdFind>:
/******* find a command form command queue ********/
VdcmdDes *cmdFind(VdRingBuf *cmdqu, uint8_t cmdID){
	VdcmdDes *cmd = cmdqu->startAdd;
	;  //na
	return cmd;
}
400035e4:	e5900008 	ldr	r0, [r0, #8]
400035e8:	e12fff1e 	bx	lr

400035ec <jump>:
.code 32

# Jump function implementation.
.global jump
jump:
    bx  R0
400035ec:	e12fff10 	bx	r0

400035f0 <CyU3PToolChainInit>:
.global CyU3PToolChainInit
CyU3PToolChainInit:

# Clear the BSS segment and then jump to main.
__main:
	mov	R0, #0
400035f0:	e3a00000 	mov	r0, #0
	ldr	R1, =_bss_start
400035f4:	e59f1014 	ldr	r1, [pc, #20]	; 40003610 <__user_initial_stackheap+0x4>
	ldr	R2, =_bss_end
400035f8:	e59f2014 	ldr	r2, [pc, #20]	; 40003614 <__user_initial_stackheap+0x8>
1:	cmp	R1, R2
400035fc:	e1510002 	cmp	r1, r2
	strlo	R0, [R1], #4
40003600:	34810004 	strcc	r0, [r1], #4
	blo	1b
40003604:	3afffffc 	bcc	400035fc <CyU3PToolChainInit+0xc>

	b	main
40003608:	ea0014d4 	b	40008960 <main>

4000360c <__user_initial_stackheap>:
__user_initial_stackheap:

.if  INTER == TRUE
    bx      lr                 
.else
    mov     pc, lr             
4000360c:	e1a0f00e 	mov	pc, lr
40003610:	40030f20 	.word	0x40030f20
40003614:	4003327c 	.word	0x4003327c

40003618 <CyU3PUndefinedHandler>:
/* This function is the undefined instruction handler. This
 * occurs when the CPU encounters an undefined instruction. */
void
CyU3PUndefinedHandler (
        void)
{
40003618:	eafffffe 	b	40003618 <CyU3PUndefinedHandler>

4000361c <CyU3PPrefetchHandler>:
 * Since there are no virtual memory use case, this is an unknown
 * memory access error. This is a fatal error. */
void
CyU3PPrefetchHandler (
        void)
{
4000361c:	eafffffe 	b	4000361c <CyU3PPrefetchHandler>

40003620 <CyU3PAbortHandler>:
 * virtual memory use case, this is an unknown memory access error.
 * This is a fatal error. */
void
CyU3PAbortHandler (
        void)
{
40003620:	eafffffe 	b	40003620 <CyU3PAbortHandler>

40003624 <tx_application_define>:
void
tx_application_define (
        void *unusedMem)
{
    (void) unusedMem;
    CyU3PApplicationDefine ();
40003624:	ea0040f7 	b	40013a08 <CyU3PApplicationDefine>

40003628 <CyU3PMemInit>:
 */
void
CyU3PMemInit (
        void)
{
    if (!glMemPoolInit)
40003628:	e59fc038 	ldr	ip, [pc, #56]	; 40003668 <CyU3PMemInit+0x40>
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
4000362c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
    if (!glMemPoolInit)
40003630:	e59c1000 	ldr	r1, [ip]
 * The function creates a global byte pool.
 */
void
CyU3PMemInit (
        void)
{
40003634:	e24dd00c 	sub	sp, sp, #12
    if (!glMemPoolInit)
40003638:	e3510000 	cmp	r1, #0
4000363c:	1a000007 	bne	40003660 <CyU3PMemInit+0x38>
    {
	glMemPoolInit = CyTrue;
40003640:	e3a0e001 	mov	lr, #1
40003644:	e58ce000 	str	lr, [ip]
	CyU3PBytePoolCreate (&glMemBytePool, CY_U3P_MEM_HEAP_BASE, CY_U3P_MEM_HEAP_SIZE);
40003648:	e59f001c 	ldr	r0, [pc, #28]	; 4000366c <CyU3PMemInit+0x44>
4000364c:	e3a0c034 	mov	ip, #52	; 0x34
40003650:	e59f2018 	ldr	r2, [pc, #24]	; 40003670 <CyU3PMemInit+0x48>
40003654:	e3a03902 	mov	r3, #32768	; 0x8000
40003658:	e58dc000 	str	ip, [sp]
4000365c:	eb001936 	bl	40009b3c <_txe_byte_pool_create>
    }
}
40003660:	e28dd00c 	add	sp, sp, #12
40003664:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40003668:	40030f40 	.word	0x40030f40
4000366c:	40032e8c 	.word	0x40032e8c
40003670:	40038000 	.word	0x40038000

40003674 <CyU3PMemAlloc>:

void *
CyU3PMemAlloc (
        uint32_t size)
{
40003674:	e92d4010 	push	{r4, lr}
40003678:	e24dd008 	sub	sp, sp, #8
4000367c:	e1a04000 	mov	r4, r0
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003680:	eb0014f7 	bl	40008a64 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003684:	e28d1004 	add	r1, sp, #4
40003688:	e1a02004 	mov	r2, r4
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
4000368c:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003690:	13a0300a 	movne	r3, #10
40003694:	e59f0014 	ldr	r0, [pc, #20]	; 400036b0 <CyU3PMemAlloc+0x3c>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003698:	eb0018e3 	bl	40009a2c <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
4000369c:	e3500000 	cmp	r0, #0
    {
        return ret_p;
400036a0:	059d0004 	ldreq	r0, [sp, #4]
    }

    return (NULL);
400036a4:	13a00000 	movne	r0, #0
}
400036a8:	e28dd008 	add	sp, sp, #8
400036ac:	e8bd8010 	pop	{r4, pc}
400036b0:	40032e8c 	.word	0x40032e8c

400036b4 <CyU3PMemFree>:

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
400036b4:	ea0019a4 	b	40009d4c <_txe_byte_release>

400036b8 <CyU3PMemSet>:
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036b8:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemSet (
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
400036bc:	e92d01f0 	push	{r4, r5, r6, r7, r8}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c0:	0a00000b 	beq	400036f4 <CyU3PMemSet+0x3c>
        ptr[4] = data;
        ptr[5] = data;
        ptr[6] = data;
        ptr[7] = data;

        count -= 8;
400036c4:	e2422008 	sub	r2, r2, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036c8:	e1b031a2 	lsrs	r3, r2, #3
    {
        ptr[0] = data;
400036cc:	e5c01000 	strb	r1, [r0]
        ptr[1] = data;
400036d0:	e5c01001 	strb	r1, [r0, #1]
        ptr[2] = data;
400036d4:	e5c01002 	strb	r1, [r0, #2]
        ptr[3] = data;
400036d8:	e5c01003 	strb	r1, [r0, #3]
        ptr[4] = data;
400036dc:	e5c01004 	strb	r1, [r0, #4]
        ptr[5] = data;
400036e0:	e5c01005 	strb	r1, [r0, #5]
        ptr[6] = data;
400036e4:	e5c01006 	strb	r1, [r0, #6]
        ptr[7] = data;
400036e8:	e5c01007 	strb	r1, [r0, #7]

        count -= 8;
        ptr += 8;
400036ec:	e2800008 	add	r0, r0, #8
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400036f0:	1afffff3 	bne	400036c4 <CyU3PMemSet+0xc>

        count -= 8;
        ptr += 8;
    }

    while (count--)
400036f4:	e3520000 	cmp	r2, #0
400036f8:	0a000071 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400036fc:	e2604000 	rsb	r4, r0, #0
40003700:	e2044003 	and	r4, r4, #3

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003704:	e1540002 	cmp	r4, r2
40003708:	21a04002 	movcs	r4, r2
4000370c:	e3540000 	cmp	r4, #0
40003710:	e2426001 	sub	r6, r2, #1
40003714:	0a00006c 	beq	400038cc <CyU3PMemSet+0x214>
    {
        *ptr = data;
40003718:	e1a03000 	mov	r3, r0
4000371c:	e2427002 	sub	r7, r2, #2
40003720:	e2448001 	sub	r8, r4, #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003724:	e3540001 	cmp	r4, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003728:	e4c31001 	strb	r1, [r3], #1
4000372c:	e2088003 	and	r8, r8, #3
40003730:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003734:	e1a06007 	mov	r6, r7
40003738:	e3a0c001 	mov	ip, #1
4000373c:	9a00001a 	bls	400037ac <CyU3PMemSet+0xf4>
40003740:	e3580000 	cmp	r8, #0
40003744:	0a00000c 	beq	4000377c <CyU3PMemSet+0xc4>
40003748:	e3580001 	cmp	r8, #1
4000374c:	0a000004 	beq	40003764 <CyU3PMemSet+0xac>
40003750:	e3580002 	cmp	r8, #2
40003754:	13a0c002 	movne	ip, #2
40003758:	e28cc001 	add	ip, ip, #1
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000375c:	14c31001 	strbne	r1, [r3], #1
40003760:	e4c31001 	strb	r1, [r3], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003764:	e06c6007 	rsb	r6, ip, r7
40003768:	e28cc001 	add	ip, ip, #1
4000376c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003770:	e4c31001 	strb	r1, [r3], #1
40003774:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003778:	9a00000b 	bls	400037ac <CyU3PMemSet+0xf4>
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
4000377c:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003780:	e28c6003 	add	r6, ip, #3
40003784:	e28cc004 	add	ip, ip, #4
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003788:	e4c51001 	strb	r1, [r5], #1
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
4000378c:	e154000c 	cmp	r4, ip
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003790:	e5c31001 	strb	r1, [r3, #1]
40003794:	e5c51001 	strb	r1, [r5, #1]
40003798:	e5c31003 	strb	r1, [r3, #3]
4000379c:	e2833004 	add	r3, r3, #4
400037a0:	e1a05003 	mov	r5, r3
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400037a4:	e0666007 	rsb	r6, r6, r7
400037a8:	8afffff3 	bhi	4000377c <CyU3PMemSet+0xc4>
400037ac:	e1520004 	cmp	r2, r4
400037b0:	0a000043 	beq	400038c4 <CyU3PMemSet+0x20c>
400037b4:	e0642002 	rsb	r2, r4, r2
400037b8:	e1a07122 	lsr	r7, r2, #2
400037bc:	e1b08107 	lsls	r8, r7, #2
400037c0:	0a000024 	beq	40003858 <CyU3PMemSet+0x1a0>
400037c4:	e201c0ff 	and	ip, r1, #255	; 0xff
400037c8:	e18c340c 	orr	r3, ip, ip, lsl #8
400037cc:	e183380c 	orr	r3, r3, ip, lsl #16
400037d0:	e1833c0c 	orr	r3, r3, ip, lsl #24
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
400037d4:	e0800004 	add	r0, r0, r4
400037d8:	e247c001 	sub	ip, r7, #1
400037dc:	e3570001 	cmp	r7, #1
400037e0:	e20c4003 	and	r4, ip, #3
400037e4:	e4803004 	str	r3, [r0], #4
400037e8:	e3a0c001 	mov	ip, #1
400037ec:	9a000015 	bls	40003848 <CyU3PMemSet+0x190>
400037f0:	e3540000 	cmp	r4, #0
400037f4:	0a00000a 	beq	40003824 <CyU3PMemSet+0x16c>
400037f8:	e3540001 	cmp	r4, #1
400037fc:	0a000004 	beq	40003814 <CyU3PMemSet+0x15c>
40003800:	e3540002 	cmp	r4, #2
40003804:	13a0c002 	movne	ip, #2
40003808:	e28cc001 	add	ip, ip, #1
4000380c:	14803004 	strne	r3, [r0], #4
40003810:	e4803004 	str	r3, [r0], #4
40003814:	e28cc001 	add	ip, ip, #1
40003818:	e157000c 	cmp	r7, ip
4000381c:	e4803004 	str	r3, [r0], #4
40003820:	9a000008 	bls	40003848 <CyU3PMemSet+0x190>
40003824:	e28cc004 	add	ip, ip, #4
40003828:	e1a04000 	mov	r4, r0
4000382c:	e157000c 	cmp	r7, ip
40003830:	e4843004 	str	r3, [r4], #4
40003834:	e5803004 	str	r3, [r0, #4]
40003838:	e5843004 	str	r3, [r4, #4]
4000383c:	e580300c 	str	r3, [r0, #12]
40003840:	e2800010 	add	r0, r0, #16
40003844:	8afffff6 	bhi	40003824 <CyU3PMemSet+0x16c>
40003848:	e1520008 	cmp	r2, r8
4000384c:	e0855008 	add	r5, r5, r8
40003850:	e0686006 	rsb	r6, r8, r6
40003854:	0a00001a 	beq	400038c4 <CyU3PMemSet+0x20c>
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
40003858:	e2866001 	add	r6, r6, #1
4000385c:	e0856006 	add	r6, r5, r6
        ptr += 8;
    }

    while (count--)
    {
        *ptr = data;
40003860:	e1a03005 	mov	r3, r5
40003864:	e1e02005 	mvn	r2, r5
40003868:	e0860002 	add	r0, r6, r2
4000386c:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
40003870:	e1530006 	cmp	r3, r6
40003874:	e2005003 	and	r5, r0, #3
40003878:	0a000011 	beq	400038c4 <CyU3PMemSet+0x20c>
4000387c:	e3550000 	cmp	r5, #0
40003880:	0a000007 	beq	400038a4 <CyU3PMemSet+0x1ec>
40003884:	e3550001 	cmp	r5, #1
40003888:	0a000002 	beq	40003898 <CyU3PMemSet+0x1e0>
4000388c:	e3550002 	cmp	r5, #2
    {
        *ptr = data;
40003890:	14c31001 	strbne	r1, [r3], #1
40003894:	e4c31001 	strb	r1, [r3], #1
40003898:	e4c31001 	strb	r1, [r3], #1

        count -= 8;
        ptr += 8;
    }

    while (count--)
4000389c:	e1530006 	cmp	r3, r6
400038a0:	0a000007 	beq	400038c4 <CyU3PMemSet+0x20c>
    {
        *ptr = data;
400038a4:	e1a0c003 	mov	ip, r3
400038a8:	e4cc1001 	strb	r1, [ip], #1
400038ac:	e5c31001 	strb	r1, [r3, #1]
400038b0:	e5cc1001 	strb	r1, [ip, #1]
400038b4:	e5c31003 	strb	r1, [r3, #3]
        ptr++;
400038b8:	e2833004 	add	r3, r3, #4

        count -= 8;
        ptr += 8;
    }

    while (count--)
400038bc:	e1530006 	cmp	r3, r6
400038c0:	1afffff7 	bne	400038a4 <CyU3PMemSet+0x1ec>
    {
        *ptr = data;
        ptr++;
    }
}
400038c4:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
400038c8:	e12fff1e 	bx	lr
{
     CyU3PByteFree (mem_p);
}

void
CyU3PMemSet (
400038cc:	e1a05000 	mov	r5, r0
400038d0:	eaffffb7 	b	400037b4 <CyU3PMemSet+0xfc>

400038d4 <CyU3PMemCopy>:
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038d4:	e1b031a2 	lsrs	r3, r2, #3
void
CyU3PMemCopy (
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
400038d8:	e92d07f0 	push	{r4, r5, r6, r7, r8, r9, sl}
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038dc:	0a000014 	beq	40003934 <CyU3PMemCopy+0x60>
    {
        dest[0] = src[0];
400038e0:	e5d1c000 	ldrb	ip, [r1]
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];

        count -= 8;
400038e4:	e2422008 	sub	r2, r2, #8
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        dest[0] = src[0];
400038e8:	e5c0c000 	strb	ip, [r0]
        dest[1] = src[1];
400038ec:	e5d13001 	ldrb	r3, [r1, #1]
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
400038f0:	e1b0c1a2 	lsrs	ip, r2, #3
    {
        dest[0] = src[0];
        dest[1] = src[1];
400038f4:	e5c03001 	strb	r3, [r0, #1]
        dest[2] = src[2];
400038f8:	e5d1c002 	ldrb	ip, [r1, #2]
400038fc:	e5c0c002 	strb	ip, [r0, #2]
        dest[3] = src[3];
40003900:	e5d13003 	ldrb	r3, [r1, #3]
40003904:	e5c03003 	strb	r3, [r0, #3]
        dest[4] = src[4];
40003908:	e5d1c004 	ldrb	ip, [r1, #4]
4000390c:	e5c0c004 	strb	ip, [r0, #4]
        dest[5] = src[5];
40003910:	e5d13005 	ldrb	r3, [r1, #5]
40003914:	e5c03005 	strb	r3, [r0, #5]
        dest[6] = src[6];
40003918:	e5d1c006 	ldrb	ip, [r1, #6]
4000391c:	e5c0c006 	strb	ip, [r0, #6]
        dest[7] = src[7];
40003920:	e5d13007 	ldrb	r3, [r1, #7]

        count -= 8;
        dest += 8;
        src += 8;
40003924:	e2811008 	add	r1, r1, #8
        dest[2] = src[2];
        dest[3] = src[3];
        dest[4] = src[4];
        dest[5] = src[5];
        dest[6] = src[6];
        dest[7] = src[7];
40003928:	e5c03007 	strb	r3, [r0, #7]

        count -= 8;
        dest += 8;
4000392c:	e2800008 	add	r0, r0, #8
        uint8_t *dest, 
        uint8_t *src,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003930:	1affffea 	bne	400038e0 <CyU3PMemCopy+0xc>
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003934:	e3520000 	cmp	r2, #0
40003938:	0a000065 	beq	40003ad4 <CyU3PMemCopy+0x200>
        ptr++;
    }
}

void
CyU3PMemCopy (
4000393c:	e1815000 	orr	r5, r1, r0
40003940:	e3150003 	tst	r5, #3
40003944:	13a07000 	movne	r7, #0
40003948:	03a07001 	moveq	r7, #1
4000394c:	e281c004 	add	ip, r1, #4
40003950:	e2803004 	add	r3, r0, #4
40003954:	e3520003 	cmp	r2, #3
40003958:	93a07000 	movls	r7, #0
4000395c:	82077001 	andhi	r7, r7, #1
40003960:	e1510003 	cmp	r1, r3
40003964:	9150000c 	cmpls	r0, ip
40003968:	93a05000 	movls	r5, #0
4000396c:	83a05001 	movhi	r5, #1
40003970:	e0074005 	and	r4, r7, r5
40003974:	e2244001 	eor	r4, r4, #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003978:	e1a07122 	lsr	r7, r2, #2
4000397c:	e3570000 	cmp	r7, #0
40003980:	03844001 	orreq	r4, r4, #1
40003984:	e3540000 	cmp	r4, #0
40003988:	e242a001 	sub	sl, r2, #1
        ptr++;
    }
}

void
CyU3PMemCopy (
4000398c:	e1a08107 	lsl	r8, r7, #2
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003990:	1a00002a 	bne	40003a40 <CyU3PMemCopy+0x16c>
    {
        *dest = *src;
40003994:	e5916000 	ldr	r6, [r1]
40003998:	e3a04001 	mov	r4, #1
4000399c:	e2475001 	sub	r5, r7, #1
400039a0:	e1570004 	cmp	r7, r4
400039a4:	e2055003 	and	r5, r5, #3
400039a8:	e5806000 	str	r6, [r0]
400039ac:	9a00001e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039b0:	e3550000 	cmp	r5, #0
400039b4:	0a00000d 	beq	400039f0 <CyU3PMemCopy+0x11c>
400039b8:	e3550001 	cmp	r5, #1
400039bc:	0a000006 	beq	400039dc <CyU3PMemCopy+0x108>
400039c0:	e3550002 	cmp	r5, #2
400039c4:	149c5004 	ldrne	r5, [ip], #4
400039c8:	13a04002 	movne	r4, #2
400039cc:	14835004 	strne	r5, [r3], #4
400039d0:	e49c5004 	ldr	r5, [ip], #4
400039d4:	e2844001 	add	r4, r4, #1
400039d8:	e4835004 	str	r5, [r3], #4
400039dc:	e49c5004 	ldr	r5, [ip], #4
400039e0:	e2844001 	add	r4, r4, #1
400039e4:	e1570004 	cmp	r7, r4
400039e8:	e4835004 	str	r5, [r3], #4
400039ec:	9a00000e 	bls	40003a2c <CyU3PMemCopy+0x158>
400039f0:	e1a0600c 	mov	r6, ip
400039f4:	e4969004 	ldr	r9, [r6], #4
400039f8:	e1a05003 	mov	r5, r3
400039fc:	e4859004 	str	r9, [r5], #4
40003a00:	e59c9004 	ldr	r9, [ip, #4]
40003a04:	e2844004 	add	r4, r4, #4
40003a08:	e5839004 	str	r9, [r3, #4]
40003a0c:	e5966004 	ldr	r6, [r6, #4]
40003a10:	e1570004 	cmp	r7, r4
40003a14:	e5856004 	str	r6, [r5, #4]
40003a18:	e59c500c 	ldr	r5, [ip, #12]
40003a1c:	e28cc010 	add	ip, ip, #16
40003a20:	e583500c 	str	r5, [r3, #12]
40003a24:	e2833010 	add	r3, r3, #16
40003a28:	8afffff0 	bhi	400039f0 <CyU3PMemCopy+0x11c>
40003a2c:	e1520008 	cmp	r2, r8
40003a30:	e0800008 	add	r0, r0, r8
40003a34:	e0811008 	add	r1, r1, r8
40003a38:	e068a00a 	rsb	sl, r8, sl
40003a3c:	0a000024 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a40:	e4d12001 	ldrb	r2, [r1], #1
        ptr++;
    }
}

void
CyU3PMemCopy (
40003a44:	e28a3001 	add	r3, sl, #1
40003a48:	e080c003 	add	ip, r0, r3
        src += 8;
    }

    while (count--)
    {
        *dest = *src;
40003a4c:	e1a03000 	mov	r3, r0
40003a50:	e1e00000 	mvn	r0, r0
40003a54:	e08c0000 	add	r0, ip, r0
40003a58:	e4c32001 	strb	r2, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a5c:	e153000c 	cmp	r3, ip
40003a60:	e2000003 	and	r0, r0, #3
40003a64:	0a00001a 	beq	40003ad4 <CyU3PMemCopy+0x200>
40003a68:	e3500000 	cmp	r0, #0
40003a6c:	0a00000a 	beq	40003a9c <CyU3PMemCopy+0x1c8>
40003a70:	e3500001 	cmp	r0, #1
40003a74:	0a000004 	beq	40003a8c <CyU3PMemCopy+0x1b8>
40003a78:	e3500002 	cmp	r0, #2
    {
        *dest = *src;
40003a7c:	14d12001 	ldrbne	r2, [r1], #1
40003a80:	14c32001 	strbne	r2, [r3], #1
40003a84:	e4d12001 	ldrb	r2, [r1], #1
40003a88:	e4c32001 	strb	r2, [r3], #1
40003a8c:	e4d10001 	ldrb	r0, [r1], #1
40003a90:	e4c30001 	strb	r0, [r3], #1
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003a94:	e153000c 	cmp	r3, ip
40003a98:	0a00000d 	beq	40003ad4 <CyU3PMemCopy+0x200>
    {
        *dest = *src;
40003a9c:	e1a00001 	mov	r0, r1
40003aa0:	e4d04001 	ldrb	r4, [r0], #1
40003aa4:	e1a02003 	mov	r2, r3
40003aa8:	e4c24001 	strb	r4, [r2], #1
40003aac:	e5d14001 	ldrb	r4, [r1, #1]
40003ab0:	e5c34001 	strb	r4, [r3, #1]
40003ab4:	e5d00001 	ldrb	r0, [r0, #1]
40003ab8:	e5c20001 	strb	r0, [r2, #1]
40003abc:	e5d12003 	ldrb	r2, [r1, #3]
40003ac0:	e2811004 	add	r1, r1, #4
40003ac4:	e5c32003 	strb	r2, [r3, #3]
        dest++;
40003ac8:	e2833004 	add	r3, r3, #4
        count -= 8;
        dest += 8;
        src += 8;
    }

    while (count--)
40003acc:	e153000c 	cmp	r3, ip
40003ad0:	1afffff1 	bne	40003a9c <CyU3PMemCopy+0x1c8>
    {
        *dest = *src;
        dest++;
        src++;
    }
}
40003ad4:	e8bd07f0 	pop	{r4, r5, r6, r7, r8, r9, sl}
40003ad8:	e12fff1e 	bx	lr

40003adc <CyU3PMemCmp>:
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003adc:	e3520000 	cmp	r2, #0
int32_t 
CyU3PMemCmp (
        const void* s1,
        const void* s2, 
        uint32_t n)
{
40003ae0:	e92d0070 	push	{r4, r5, r6}
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003ae4:	01a00002 	moveq	r0, r2
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003ae8:	0a00002f 	beq	40003bac <CyU3PMemCmp+0xd0>
    {
        if(*ptr1 != *ptr2)
40003aec:	e5d03000 	ldrb	r3, [r0]
40003af0:	e5d1c000 	ldrb	ip, [r1]
40003af4:	e153000c 	cmp	r3, ip
40003af8:	1a00002a 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        src++;
    }
}

int32_t 
CyU3PMemCmp (
40003afc:	e2404001 	sub	r4, r0, #1
40003b00:	e0842002 	add	r2, r4, r2
40003b04:	e0603002 	rsb	r3, r0, r2
40003b08:	e2134003 	ands	r4, r3, #3
40003b0c:	0a00000f 	beq	40003b50 <CyU3PMemCmp+0x74>
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
    {
        if(*ptr1 != *ptr2)
40003b10:	e5f03001 	ldrb	r3, [r0, #1]!
40003b14:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b18:	e153000c 	cmp	r3, ip
40003b1c:	1a000021 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b20:	e3540001 	cmp	r4, #1
40003b24:	0a000009 	beq	40003b50 <CyU3PMemCmp+0x74>
40003b28:	e3540002 	cmp	r4, #2
40003b2c:	0a000003 	beq	40003b40 <CyU3PMemCmp+0x64>
40003b30:	e5f03001 	ldrb	r3, [r0, #1]!
40003b34:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b38:	e153000c 	cmp	r3, ip
40003b3c:	1a000019 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b40:	e5f03001 	ldrb	r3, [r0, #1]!
40003b44:	e5f1c001 	ldrb	ip, [r1, #1]!
40003b48:	e153000c 	cmp	r3, ip
40003b4c:	1a000015 	bne	40003ba8 <CyU3PMemCmp+0xcc>
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b50:	e1500002 	cmp	r0, r2
    {
        if(*ptr1 != *ptr2)
40003b54:	e1a05000 	mov	r5, r0
40003b58:	e1a04001 	mov	r4, r1
        const void* s2, 
        uint32_t n)
{
    const uint8_t *ptr1 = s1, *ptr2 = s2;

    while(n--)
40003b5c:	0a000014 	beq	40003bb4 <CyU3PMemCmp+0xd8>
    {
        if(*ptr1 != *ptr2)
40003b60:	e5f53001 	ldrb	r3, [r5, #1]!
40003b64:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b68:	e153000c 	cmp	r3, ip
40003b6c:	1a00000d 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b70:	e5f53001 	ldrb	r3, [r5, #1]!
40003b74:	e5f4c001 	ldrb	ip, [r4, #1]!
40003b78:	e153000c 	cmp	r3, ip
40003b7c:	1a000009 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b80:	e5d53001 	ldrb	r3, [r5, #1]
40003b84:	e5d4c001 	ldrb	ip, [r4, #1]
40003b88:	e153000c 	cmp	r3, ip
40003b8c:	1a000005 	bne	40003ba8 <CyU3PMemCmp+0xcc>
40003b90:	e5d03004 	ldrb	r3, [r0, #4]
40003b94:	e5d1c004 	ldrb	ip, [r1, #4]
40003b98:	e2800004 	add	r0, r0, #4
40003b9c:	e153000c 	cmp	r3, ip
40003ba0:	e2811004 	add	r1, r1, #4
40003ba4:	0affffe9 	beq	40003b50 <CyU3PMemCmp+0x74>
        {
            return *ptr1 - *ptr2;
40003ba8:	e06c0003 	rsb	r0, ip, r3
        
        ptr1++;
        ptr2++;
    }  
    return 0;
}
40003bac:	e8bd0070 	pop	{r4, r5, r6}
40003bb0:	e12fff1e 	bx	lr
        }
        
        ptr1++;
        ptr2++;
    }  
    return 0;
40003bb4:	e3a00000 	mov	r0, #0
40003bb8:	eafffffb 	b	40003bac <CyU3PMemCmp+0xd0>

40003bbc <CyU3PDmaBufferInit>:
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bbc:	e92d4030 	push	{r4, r5, lr}
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc0:	e59f4134 	ldr	r4, [pc, #308]	; 40003cfc <CyU3PDmaBufferInit+0x140>
 * be modified to create other block pools.
 */
void
CyU3PDmaBufferInit (
        void)
{
40003bc4:	e24dd00c 	sub	sp, sp, #12
    uint32_t status, size;
    uint32_t tmp;

    /* If buffer manager has already been initialized, just return. */
    if ((glBufferManager.startAddr != 0) && (glBufferManager.regionSize != 0))
40003bc8:	e594303c 	ldr	r3, [r4, #60]	; 0x3c
40003bcc:	e3530000 	cmp	r3, #0
40003bd0:	0a000002 	beq	40003be0 <CyU3PDmaBufferInit+0x24>
40003bd4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40003bd8:	e3500000 	cmp	r0, #0
40003bdc:	1a000006 	bne	40003bfc <CyU3PDmaBufferInit+0x40>
    {
        return;
    }

    /* Create a mutex variable for safe allocation. */
    status = CyU3PMutexCreate (&glBufferManager.lock, CYU3P_NO_INHERIT);
40003be0:	e3a01000 	mov	r1, #0
40003be4:	e59f0114 	ldr	r0, [pc, #276]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003be8:	e1a02001 	mov	r2, r1
40003bec:	e3a03038 	mov	r3, #56	; 0x38
40003bf0:	eb001932 	bl	4000a0c0 <_txe_mutex_create>
    if (status != CY_U3P_SUCCESS)
40003bf4:	e3500000 	cmp	r0, #0
40003bf8:	0a000001 	beq	40003c04 <CyU3PDmaBufferInit+0x48>
    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
    glBufferManager.statusSize = size;
    glBufferManager.searchPos  = 0;
}
40003bfc:	e28dd00c 	add	sp, sp, #12
40003c00:	e8bd8030 	pop	{r4, r5, pc}
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c04:	eb001396 	bl	40008a64 <_tx_thread_identify>
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c08:	e28d1004 	add	r1, sp, #4
40003c0c:	e3a02b01 	mov	r2, #1024	; 0x400
{
    void     *ret_p;
    uint32_t status;

    /* Cannot wait in interrupt context */
    if (CyU3PThreadIdentify ())
40003c10:	e2503000 	subs	r3, r0, #0
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CY_U3P_MEM_ALLOC_TIMEOUT);
40003c14:	13a0300a 	movne	r3, #10
40003c18:	e59f00e4 	ldr	r0, [pc, #228]	; 40003d04 <CyU3PDmaBufferInit+0x148>
    }
    else
    {
        status = CyU3PByteAlloc (&glMemBytePool, (void **)&ret_p, size, CYU3P_NO_WAIT);
40003c1c:	eb001782 	bl	40009a2c <_txe_byte_allocate>
    }

    if(status == CY_U3P_SUCCESS)
40003c20:	e3500000 	cmp	r0, #0
40003c24:	1a00002f 	bne	40003ce8 <CyU3PDmaBufferInit+0x12c>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c28:	e59d3004 	ldr	r3, [sp, #4]
    if (glBufferManager.usedStatus == 0)
40003c2c:	e3530000 	cmp	r3, #0
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003c30:	e5843044 	str	r3, [r4, #68]	; 0x44
        return;
    }

    /* Initially mark all memory as available. If there are any status bits
       beyond the valid memory range, mark these as unavailable. */
    CyU3PMemSet ((uint8_t *)glBufferManager.usedStatus, 0, (size * 4));
40003c34:	13a05b01 	movne	r5, #1024	; 0x400
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
    if (glBufferManager.usedStatus == 0)
40003c38:	0a00002c 	beq	40003cf0 <CyU3PDmaBufferInit+0x134>
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003c3c:	e2555020 	subs	r5, r5, #32
    {
        ptr[0] = data;
40003c40:	e5c30000 	strb	r0, [r3]
        ptr[1] = data;
40003c44:	e5c30001 	strb	r0, [r3, #1]
        ptr[2] = data;
40003c48:	e5c30002 	strb	r0, [r3, #2]
        ptr[3] = data;
40003c4c:	e5c30003 	strb	r0, [r3, #3]
        ptr[4] = data;
40003c50:	e5c30004 	strb	r0, [r3, #4]
        ptr[5] = data;
40003c54:	e5c30005 	strb	r0, [r3, #5]
        ptr[6] = data;
40003c58:	e5c30006 	strb	r0, [r3, #6]
        ptr[7] = data;
40003c5c:	e5c30007 	strb	r0, [r3, #7]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c60:	e5c30008 	strb	r0, [r3, #8]
        ptr[1] = data;
40003c64:	e5c30009 	strb	r0, [r3, #9]
        ptr[2] = data;
40003c68:	e5c3000a 	strb	r0, [r3, #10]
        ptr[3] = data;
40003c6c:	e5c3000b 	strb	r0, [r3, #11]
        ptr[4] = data;
40003c70:	e5c3000c 	strb	r0, [r3, #12]
        ptr[5] = data;
40003c74:	e5c3000d 	strb	r0, [r3, #13]
        ptr[6] = data;
40003c78:	e5c3000e 	strb	r0, [r3, #14]
        ptr[7] = data;
40003c7c:	e5c3000f 	strb	r0, [r3, #15]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003c80:	e5c30010 	strb	r0, [r3, #16]
        ptr[1] = data;
40003c84:	e5c30011 	strb	r0, [r3, #17]
        ptr[2] = data;
40003c88:	e5c30012 	strb	r0, [r3, #18]
        ptr[3] = data;
40003c8c:	e5c30013 	strb	r0, [r3, #19]
        ptr[4] = data;
40003c90:	e5c30014 	strb	r0, [r3, #20]
        ptr[5] = data;
40003c94:	e5c30015 	strb	r0, [r3, #21]
        ptr[6] = data;
40003c98:	e5c30016 	strb	r0, [r3, #22]
        ptr[7] = data;
40003c9c:	e5c30017 	strb	r0, [r3, #23]
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
    {
        ptr[0] = data;
40003ca0:	e5c30018 	strb	r0, [r3, #24]
        ptr[1] = data;
40003ca4:	e5c30019 	strb	r0, [r3, #25]
        ptr[2] = data;
40003ca8:	e5c3001a 	strb	r0, [r3, #26]
        ptr[3] = data;
40003cac:	e5c3001b 	strb	r0, [r3, #27]
        ptr[4] = data;
40003cb0:	e5c3001c 	strb	r0, [r3, #28]
        ptr[5] = data;
40003cb4:	e5c3001d 	strb	r0, [r3, #29]
        ptr[6] = data;
40003cb8:	e5c3001e 	strb	r0, [r3, #30]
        ptr[7] = data;
40003cbc:	e5c3001f 	strb	r0, [r3, #31]

        count -= 8;
        ptr += 8;
40003cc0:	e2833020 	add	r3, r3, #32
        uint8_t *ptr,
        uint8_t data,
        uint32_t count)
{
    /* Loop unrolling for faster operation */
    while (count >> 3)
40003cc4:	1affffdc 	bne	40003c3c <CyU3PDmaBufferInit+0x80>
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cc8:	e59fc038 	ldr	ip, [pc, #56]	; 40003d08 <CyU3PDmaBufferInit+0x14c>
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003ccc:	e3a02701 	mov	r2, #262144	; 0x40000
    glBufferManager.statusSize = size;
40003cd0:	e3a01c01 	mov	r1, #256	; 0x100
        tmp = 32 - ((CY_U3P_BUFFER_HEAP_SIZE / 32) & 31);
        glBufferManager.usedStatus[size - 1] = ~((1 << tmp) - 1);
    }

    /* Initialize the start address and region size variables. */
    glBufferManager.startAddr  = CY_U3P_BUFFER_HEAP_BASE;
40003cd4:	e584c03c 	str	ip, [r4, #60]	; 0x3c
    glBufferManager.regionSize = CY_U3P_BUFFER_HEAP_SIZE;
40003cd8:	e5842040 	str	r2, [r4, #64]	; 0x40
    glBufferManager.statusSize = size;
40003cdc:	e5841048 	str	r1, [r4, #72]	; 0x48
    glBufferManager.searchPos  = 0;
40003ce0:	e584504c 	str	r5, [r4, #76]	; 0x4c
40003ce4:	eaffffc4 	b	40003bfc <CyU3PDmaBufferInit+0x40>
    /* Allocate the memory buffer to be used to track memory status.
       We need one bit per 32 bytes of memory buffer space. Since a 32
       bit array is being used, round up to the necessary number of
       32 bit words. */
    size = ((CY_U3P_BUFFER_HEAP_SIZE / 32) + 31) / 32;
    glBufferManager.usedStatus = (uint32_t *)CyU3PMemAlloc (size * 4);
40003ce8:	e3a0e000 	mov	lr, #0
40003cec:	e584e044 	str	lr, [r4, #68]	; 0x44
    if (glBufferManager.usedStatus == 0)
    {
        CyU3PMutexDestroy (&glBufferManager.lock);
40003cf0:	e59f0008 	ldr	r0, [pc, #8]	; 40003d00 <CyU3PDmaBufferInit+0x144>
40003cf4:	eb00194f 	bl	4000a238 <_txe_mutex_delete>
        return;
40003cf8:	eaffffbf 	b	40003bfc <CyU3PDmaBufferInit+0x40>
40003cfc:	40030f40 	.word	0x40030f40
40003d00:	40030f44 	.word	0x40030f44
40003d04:	40032e8c 	.word	0x40032e8c
40003d08:	40040000 	.word	0x40040000

40003d0c <CyU3PDmaBufferDeInit>:
 * and should not be explicitly invoked.
 */
void
CyU3PDmaBufferDeInit (
        void)
{
40003d0c:	e92d4070 	push	{r4, r5, r6, lr}
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
40003d10:	eb001353 	bl	40008a64 <_tx_thread_identify>
40003d14:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40003d18:	13e01000 	mvnne	r1, #0
40003d1c:	e59f003c 	ldr	r0, [pc, #60]	; 40003d60 <CyU3PDmaBufferDeInit+0x54>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d20:	eb001964 	bl	4000a2b8 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003d24:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d28:	e1a04000 	mov	r4, r0
    }

    if (status != CY_U3P_SUCCESS)
40003d2c:	18bd8070 	popne	{r4, r5, r6, pc}
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40003d30:	e59f502c 	ldr	r5, [pc, #44]	; 40003d64 <CyU3PDmaBufferDeInit+0x58>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40003d34:	e5950044 	ldr	r0, [r5, #68]	; 0x44
40003d38:	eb001803 	bl	40009d4c <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d3c:	e2850004 	add	r0, r5, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40003d40:	e5854044 	str	r4, [r5, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40003d44:	e585403c 	str	r4, [r5, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40003d48:	e5854040 	str	r4, [r5, #64]	; 0x40
    glBufferManager.statusSize = 0;
40003d4c:	e5854048 	str	r4, [r5, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40003d50:	eb00198d 	bl	4000a38c <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d54:	e2850004 	add	r0, r5, #4
}
40003d58:	e8bd4070 	pop	{r4, r5, r6, lr}
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
    CyU3PMutexDestroy (&glBufferManager.lock);
40003d5c:	ea001935 	b	4000a238 <_txe_mutex_delete>
40003d60:	40030f44 	.word	0x40030f44
40003d64:	40030f40 	.word	0x40030f40

40003d68 <CyU3PDmaBufferAlloc>:

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
        uint16_t size)
{
40003d68:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}
40003d6c:	e1a04000 	mov	r4, r0
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003d70:	eb00133b 	bl	40008a64 <_tx_thread_identify>
40003d74:	e2501000 	subs	r1, r0, #0
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003d78:	13a0100a 	movne	r1, #10
40003d7c:	e59f0168 	ldr	r0, [pc, #360]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
    }
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003d80:	eb00194c 	bl	4000a2b8 <_txe_mutex_get>
    }

    if (tmp != CY_U3P_SUCCESS)
40003d84:	e3500000 	cmp	r0, #0
    {
        return ptr;
40003d88:	13a04000 	movne	r4, #0
    else
    {
        tmp = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (tmp != CY_U3P_SUCCESS)
40003d8c:	1a00002f 	bne	40003e50 <CyU3PDmaBufferAlloc+0xe8>
    {
        return ptr;
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
40003d90:	e59fa158 	ldr	sl, [pc, #344]	; 40003ef0 <CyU3PDmaBufferAlloc+0x188>
40003d94:	e59a303c 	ldr	r3, [sl, #60]	; 0x3c
40003d98:	e3530000 	cmp	r3, #0
40003d9c:	0a00004e 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
40003da0:	e59a1040 	ldr	r1, [sl, #64]	; 0x40
40003da4:	e3510000 	cmp	r1, #0
40003da8:	0a00004b 	beq	40003edc <CyU3PDmaBufferAlloc+0x174>
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dac:	e3540020 	cmp	r4, #32
40003db0:	8284401f 	addhi	r4, r4, #31

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
40003db4:	e59a104c 	ldr	r1, [sl, #76]	; 0x4c
40003db8:	e59ae048 	ldr	lr, [sl, #72]	; 0x48
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003dbc:	e59a5044 	ldr	r5, [sl, #68]	; 0x44
CyU3PDmaBufferAlloc (
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
40003dc0:	e3a08000 	mov	r8, #0
        return ptr;
    }

    /* Find the number of 32 byte chunks required. The minimum size that can be handled is
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;
40003dc4:	81a042a4 	lsrhi	r4, r4, #5
40003dc8:	82847001 	addhi	r7, r4, #1
40003dcc:	93a04002 	movls	r4, #2
40003dd0:	93a07003 	movls	r7, #3

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
    count   = 0;
40003dd4:	e1a02008 	mov	r2, r8
       64 bytes. */
    size = (size <= 32) ? 2 : (size + 31) / 32;

    /* Search through the status array to find the first block that fits the need. */
    wordnum = glBufferManager.searchPos;
    bitnum  = 0;
40003dd8:	e1a03008 	mov	r3, r8
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003ddc:	e3a06001 	mov	r6, #1
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003de0:	e150000e 	cmp	r0, lr
40003de4:	2a000014 	bcs	40003e3c <CyU3PDmaBufferAlloc+0xd4>
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003de8:	e795c101 	ldr	ip, [r5, r1, lsl #2]
40003dec:	e01cc316 	ands	ip, ip, r6, lsl r3
                break;
            }
        }
        else
        {
            count = 0;
40003df0:	13a02000 	movne	r2, #0
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
40003df4:	1a000005 	bne	40003e10 <CyU3PDmaBufferAlloc+0xa8>
        {
            if (count == 0)
40003df8:	e3520000 	cmp	r2, #0
            {
                start = (wordnum << 5) + bitnum + 1;
40003dfc:	e283c001 	add	ip, r3, #1
            }
            count++;
40003e00:	e2822001 	add	r2, r2, #1
    {
        if ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) == 0)
        {
            if (count == 0)
            {
                start = (wordnum << 5) + bitnum + 1;
40003e04:	008c8281 	addeq	r8, ip, r1, lsl #5
            }
            count++;
            if (count == (size + 1))
40003e08:	e1520007 	cmp	r2, r7
40003e0c:	0a000011 	beq	40003e58 <CyU3PDmaBufferAlloc+0xf0>
        else
        {
            count = 0;
        }

        bitnum++;
40003e10:	e2833001 	add	r3, r3, #1
        if (bitnum == 32)
40003e14:	e3530020 	cmp	r3, #32
40003e18:	1afffff0 	bne	40003de0 <CyU3PDmaBufferAlloc+0x78>
        {
            bitnum = 0;
            wordnum++;
40003e1c:	e2811001 	add	r1, r1, #1
            tmp++;
            if (wordnum == glBufferManager.statusSize)
40003e20:	e151000e 	cmp	r1, lr
        }

        bitnum++;
        if (bitnum == 32)
        {
            bitnum = 0;
40003e24:	e3a03000 	mov	r3, #0
            wordnum++;
            tmp++;
40003e28:	e2800001 	add	r0, r0, #1
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
                count   = 0;
40003e2c:	01a02003 	moveq	r2, r3
            wordnum++;
            tmp++;
            if (wordnum == glBufferManager.statusSize)
            {
                /* Wrap back to the top of the array. */
                wordnum = 0;
40003e30:	01a01003 	moveq	r1, r3
    bitnum  = 0;
    count   = 0;
    tmp     = 0;

    /* Stop searching once we have checked all of the words. */
    while (tmp < glBufferManager.statusSize)
40003e34:	e150000e 	cmp	r0, lr
40003e38:	3affffea 	bcc	40003de8 <CyU3PDmaBufferAlloc+0x80>
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e3c:	e1520007 	cmp	r2, r7
        uint16_t size)
{
    uint32_t tmp;
    uint32_t wordnum, bitnum;
    uint32_t count, start = 0;
    void *ptr = 0;
40003e40:	13a04000 	movne	r4, #0
                count   = 0;
            }
        }
    }

    if (count == (size + 1))
40003e44:	0a000004 	beq	40003e5c <CyU3PDmaBufferAlloc+0xf4>
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
    }

    CyU3PMutexPut (&glBufferManager.lock);
40003e48:	e59f009c 	ldr	r0, [pc, #156]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003e4c:	eb00194e 	bl	4000a38c <_txe_mutex_put>
    return (ptr);
}
40003e50:	e1a00004 	mov	r0, r4
40003e54:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}
            {
                /* The last bit corresponding to the allocated memory is left as zero.
                   This allows us to identify the end of the allocated block while freeing
                   the memory. We need to search for one additional zero while allocating
                   to account for this hack. */
                glBufferManager.searchPos = wordnum;
40003e58:	e58a104c 	str	r1, [sl, #76]	; 0x4c
    }

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
40003e5c:	e2443001 	sub	r3, r4, #1
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
40003e60:	e208201f 	and	r2, r8, #31
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003e64:	e0821003 	add	r1, r2, r3
40003e68:	e3510020 	cmp	r1, #32
40003e6c:	23a01020 	movcs	r1, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e70:	e3a0e001 	mov	lr, #1

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e74:	e3e04000 	mvn	r4, #0
40003e78:	e3510020 	cmp	r1, #32
    mask -= ((1 << startbit) - 1);
40003e7c:	e1a0021e 	lsl	r0, lr, r2

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003e80:	11e04114 	mvnne	r4, r4, lsl r1
CyU3PDmaBufMgrSetStatus (
        uint32_t startPos,
        uint32_t numBits,
        CyBool_t value)
{
    uint32_t wordnum  = (startPos >> 5);
40003e84:	e1a0c2a8 	lsr	ip, r8, #5
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003e88:	e060000e 	rsb	r0, r0, lr
40003e8c:	e0800004 	add	r0, r0, r4
    }
}

/* This function shall be invoked from the DMA module for buffer allocation */
void *
CyU3PDmaBufferAlloc (
40003e90:	e085510c 	add	r5, r5, ip, lsl #2
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003e94:	e061c002 	rsb	ip, r1, r2
40003e98:	e083300c 	add	r3, r3, ip
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003e9c:	e5951000 	ldr	r1, [r5]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ea0:	e1a0431e 	lsl	r4, lr, r3
40003ea4:	e353001f 	cmp	r3, #31
40003ea8:	e2442001 	sub	r2, r4, #1
    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003eac:	e180c001 	orr	ip, r0, r1
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003eb0:	91a00002 	movls	r0, r2
40003eb4:	83e00000 	mvnhi	r0, #0
40003eb8:	91a01003 	movls	r1, r3
40003ebc:	83a01020 	movhi	r1, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ec0:	e3530000 	cmp	r3, #0
40003ec4:	e3a02000 	mov	r2, #0
    {
        if (value)
        {
            glBufferManager.usedStatus[wordnum] |= mask;
40003ec8:	e485c004 	str	ip, [r5], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003ecc:	1afffff0 	bne	40003e94 <CyU3PDmaBufferAlloc+0x12c>

    if (count == (size + 1))
    {
        /* Mark the memory region identified as occupied and return the pointer. */
        CyU3PDmaBufMgrSetStatus (start, size - 1, CyTrue);
        ptr = (void *)(glBufferManager.startAddr + (start << 5));
40003ed0:	e59ae03c 	ldr	lr, [sl, #60]	; 0x3c
40003ed4:	e08e4288 	add	r4, lr, r8, lsl #5
40003ed8:	eaffffda 	b	40003e48 <CyU3PDmaBufferAlloc+0xe0>
    }

    /* Make sure the buffer manager has been initialized. */
    if ((glBufferManager.startAddr == 0) || (glBufferManager.regionSize == 0))
    {
        CyU3PMutexPut (&glBufferManager.lock);
40003edc:	e59f0008 	ldr	r0, [pc, #8]	; 40003eec <CyU3PDmaBufferAlloc+0x184>
40003ee0:	eb001929 	bl	4000a38c <_txe_mutex_put>
        return ptr;
40003ee4:	e3a04000 	mov	r4, #0
40003ee8:	eaffffd8 	b	40003e50 <CyU3PDmaBufferAlloc+0xe8>
40003eec:	40030f44 	.word	0x40030f44
40003ef0:	40030f40 	.word	0x40030f40

40003ef4 <CyU3PDmaBufferFree>:

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
        void *buffer)
{
40003ef4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40003ef8:	e1a04000 	mov	r4, r0
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;

    /* Get the lock for the buffer manager. */
    if (CyU3PThreadIdentify ())
40003efc:	eb0012d8 	bl	40008a64 <_tx_thread_identify>
40003f00:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CY_U3P_BUFFER_ALLOC_TIMEOUT);
40003f04:	13a0100a 	movne	r1, #10
40003f08:	e59f0110 	ldr	r0, [pc, #272]	; 40004020 <CyU3PDmaBufferFree+0x12c>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40003f0c:	eb0018e9 	bl	4000a2b8 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40003f10:	e3500000 	cmp	r0, #0
    {
        return retVal;
40003f14:	13e04000 	mvnne	r4, #0
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
    }

    if (status != CY_U3P_SUCCESS)
40003f18:	1a000006 	bne	40003f38 <CyU3PDmaBufferFree+0x44>
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f1c:	e59fe100 	ldr	lr, [pc, #256]	; 40004024 <CyU3PDmaBufferFree+0x130>
40003f20:	e59e303c 	ldr	r3, [lr, #60]	; 0x3c
40003f24:	e1540003 	cmp	r4, r3
40003f28:	8a000004 	bhi	40003f40 <CyU3PDmaBufferFree+0x4c>
CyU3PDmaBufferFree (
        void *buffer)
{
    uint32_t status, start, count;
    uint32_t wordnum, bitnum;
    int      retVal = -1;
40003f2c:	e3e04000 	mvn	r4, #0
        glBufferManager.searchPos = 0;
        retVal = 0;
    }

    /* Free the lock before we go. */
    CyU3PMutexPut (&glBufferManager.lock);
40003f30:	e59f00e8 	ldr	r0, [pc, #232]	; 40004020 <CyU3PDmaBufferFree+0x12c>
40003f34:	eb001914 	bl	4000a38c <_txe_mutex_put>
    return retVal;
}
40003f38:	e1a00004 	mov	r0, r4
40003f3c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
    }

    /* If the buffer address is within the range specified, count the number of consecutive ones and
       clear them. */
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
40003f40:	e59e1040 	ldr	r1, [lr, #64]	; 0x40
40003f44:	e0832001 	add	r2, r3, r1
40003f48:	e1540002 	cmp	r4, r2
40003f4c:	2afffff6 	bcs	40003f2c <CyU3PDmaBufferFree+0x38>
    {
        start = ((start - glBufferManager.startAddr) >> 5);
40003f50:	e0634004 	rsb	r4, r3, r4
40003f54:	e1a032a4 	lsr	r3, r4, #5

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f58:	e203101f 	and	r1, r3, #31
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f5c:	e1a04524 	lsr	r4, r4, #10
        bitnum  = (start & 0x1F);
40003f60:	e59e6048 	ldr	r6, [lr, #72]	; 0x48
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f64:	e59e5044 	ldr	r5, [lr, #68]	; 0x44
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
40003f68:	e1a03001 	mov	r3, r1
    start = (uint32_t)buffer;
    if ((start > glBufferManager.startAddr) && (start < (glBufferManager.startAddr + glBufferManager.regionSize)))
    {
        start = ((start - glBufferManager.startAddr) >> 5);

        wordnum = (start >> 5);
40003f6c:	e1a02004 	mov	r2, r4
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f70:	e3a07001 	mov	r7, #1
40003f74:	ea000007 	b	40003f98 <CyU3PDmaBufferFree+0xa4>
40003f78:	e795c102 	ldr	ip, [r5, r2, lsl #2]
40003f7c:	e01cc317 	ands	ip, ip, r7, lsl r3
        {
            count++;
            bitnum++;
40003f80:	e2833001 	add	r3, r3, #1

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f84:	0a000005 	beq	40003fa0 <CyU3PDmaBufferFree+0xac>
        {
            count++;
            bitnum++;
            if (bitnum == 32)
40003f88:	e3530020 	cmp	r3, #32
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
        {
            count++;
40003f8c:	e2800001 	add	r0, r0, #1
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
                wordnum++;
40003f90:	02822001 	addeq	r2, r2, #1
        {
            count++;
            bitnum++;
            if (bitnum == 32)
            {
                bitnum = 0;
40003f94:	03a03000 	moveq	r3, #0

        wordnum = (start >> 5);
        bitnum  = (start & 0x1F);
        count   = 0;

        while ((wordnum < glBufferManager.statusSize) && ((glBufferManager.usedStatus[wordnum] & (1 << bitnum)) != 0))
40003f98:	e1520006 	cmp	r2, r6
40003f9c:	3afffff5 	bcc	40003f78 <CyU3PDmaBufferFree+0x84>
{
    uint32_t wordnum  = (startPos >> 5);
    uint32_t startbit, endbit, mask;

    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);
40003fa0:	e0803001 	add	r3, r0, r1
40003fa4:	e3530020 	cmp	r3, #32
40003fa8:	23a03020 	movcs	r3, #32

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
40003fac:	e3530020 	cmp	r3, #32
40003fb0:	e3e06000 	mvn	r6, #0
40003fb4:	11e06316 	mvnne	r6, r6, lsl r3
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40003fb8:	e3500000 	cmp	r0, #0
40003fbc:	0a000014 	beq	40004014 <CyU3PDmaBufferFree+0x120>
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fc0:	e3a0c001 	mov	ip, #1
40003fc4:	e1a0211c 	lsl	r2, ip, r1
40003fc8:	e062200c 	rsb	r2, r2, ip
    return (ptr);
}

/* This function shall be invoked from the DMA module for buffer de-allocation */
int
CyU3PDmaBufferFree (
40003fcc:	e0854104 	add	r4, r5, r4, lsl #2
    startbit = (startPos & 31);
    endbit   = CY_U3P_MIN (32, startbit + numBits);

    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);
40003fd0:	e0822006 	add	r2, r2, r6
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fd4:	e1a0500c 	mov	r5, ip
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
        }

        wordnum++;
        numBits -= (endbit - startbit);
40003fd8:	e0631001 	rsb	r1, r3, r1
40003fdc:	e0800001 	add	r0, r0, r1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003fe0:	e5943000 	ldr	r3, [r4]
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003fe4:	e1a0c015 	lsl	ip, r5, r0
40003fe8:	e350001f 	cmp	r0, #31
40003fec:	e24c1001 	sub	r1, ip, #1
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
40003ff0:	e1c3c002 	bic	ip, r3, r2
        }
        else
        {
            startbit = 0;
            endbit   = numBits;
            mask     = ((uint32_t)(1 << numBits) - 1);
40003ff4:	91a02001 	movls	r2, r1
40003ff8:	83e02000 	mvnhi	r2, #0
40003ffc:	91a03000 	movls	r3, r0
40004000:	83a03020 	movhi	r3, #32
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004004:	e3500000 	cmp	r0, #0
40004008:	e3a01000 	mov	r1, #0
        {
            glBufferManager.usedStatus[wordnum] |= mask;
        }
        else
        {
            glBufferManager.usedStatus[wordnum] &= ~mask;
4000400c:	e484c004 	str	ip, [r4], #4
    /* Compute a mask that has a 1 at all bit positions to be altered. */
    mask  = (endbit == 32) ? 0xFFFFFFFFU : ((uint32_t)(1 << endbit) - 1);
    mask -= ((1 << startbit) - 1);

    /* Repeatedly go through the array and update each 32 bit word as required. */
    while (numBits)
40004010:	1afffff0 	bne	40003fd8 <CyU3PDmaBufferFree+0xe4>

        CyU3PDmaBufMgrSetStatus (start, count, CyFalse);

        /* Start the next buffer search at the top of the heap. This can help reduce fragmentation in cases where
           most of the heap is allocated and then freed as a whole. */
        glBufferManager.searchPos = 0;
40004014:	e3a04000 	mov	r4, #0
40004018:	e58e404c 	str	r4, [lr, #76]	; 0x4c
4000401c:	eaffffc3 	b	40003f30 <CyU3PDmaBufferFree+0x3c>
40004020:	40030f44 	.word	0x40030f44
40004024:	40030f40 	.word	0x40030f40

40004028 <CyU3PFreeHeaps>:
}

void
CyU3PFreeHeaps (
	void)
{
40004028:	e92d4038 	push	{r3, r4, r5, lr}
        void)
{
    uint32_t status;

    /* Get the mutex lock. */
    if (CyU3PThreadIdentify ())
4000402c:	eb00128c 	bl	40008a64 <_tx_thread_identify>
40004030:	e2501000 	subs	r1, r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
40004034:	13e01000 	mvnne	r1, #0
40004038:	e59f0050 	ldr	r0, [pc, #80]	; 40004090 <CyU3PFreeHeaps+0x68>
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
4000403c:	eb00189d 	bl	4000a2b8 <_txe_mutex_get>
    }

    if (status != CY_U3P_SUCCESS)
40004040:	e3500000 	cmp	r0, #0
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_WAIT_FOREVER);
    }
    else
    {
        status = CyU3PMutexGet (&glBufferManager.lock, CYU3P_NO_WAIT);
40004044:	e1a05000 	mov	r5, r0
40004048:	159f4044 	ldrne	r4, [pc, #68]	; 40004094 <CyU3PFreeHeaps+0x6c>
    }

    if (status != CY_U3P_SUCCESS)
4000404c:	1a00000a 	bne	4000407c <CyU3PFreeHeaps+0x54>
    {
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
40004050:	e59f403c 	ldr	r4, [pc, #60]	; 40004094 <CyU3PFreeHeaps+0x6c>

void
CyU3PMemFree (
        void *mem_p)
{
     CyU3PByteFree (mem_p);
40004054:	e5940044 	ldr	r0, [r4, #68]	; 0x44
40004058:	eb00173b 	bl	40009d4c <_txe_byte_release>
    glBufferManager.startAddr  = 0;
    glBufferManager.regionSize = 0;
    glBufferManager.statusSize = 0;

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
4000405c:	e2840004 	add	r0, r4, #4
        return;
    }

    /* Free memory and zero out variables. */
    CyU3PMemFree (glBufferManager.usedStatus);
    glBufferManager.usedStatus = 0;
40004060:	e5845044 	str	r5, [r4, #68]	; 0x44
    glBufferManager.startAddr  = 0;
40004064:	e584503c 	str	r5, [r4, #60]	; 0x3c
    glBufferManager.regionSize = 0;
40004068:	e5845040 	str	r5, [r4, #64]	; 0x40
    glBufferManager.statusSize = 0;
4000406c:	e5845048 	str	r5, [r4, #72]	; 0x48

    /* Free up and destroy the mutex variable. */
    CyU3PMutexPut (&glBufferManager.lock);
40004070:	eb0018c5 	bl	4000a38c <_txe_mutex_put>
    CyU3PMutexDestroy (&glBufferManager.lock);
40004074:	e2840004 	add	r0, r4, #4
40004078:	eb00186e 	bl	4000a238 <_txe_mutex_delete>
CyU3PFreeHeaps (
	void)
{
    /* Free up the mem and buffer heaps. */
    CyU3PDmaBufferDeInit ();
    CyU3PBytePoolDestroy (&glMemBytePool);
4000407c:	e59f0014 	ldr	r0, [pc, #20]	; 40004098 <CyU3PFreeHeaps+0x70>
40004080:	eb001711 	bl	40009ccc <_txe_byte_pool_delete>
    glMemPoolInit = CyFalse;
40004084:	e3a03000 	mov	r3, #0
40004088:	e5843000 	str	r3, [r4]
}
4000408c:	e8bd8038 	pop	{r3, r4, r5, pc}
40004090:	40030f44 	.word	0x40030f44
40004094:	40030f40 	.word	0x40030f40
40004098:	40032e8c 	.word	0x40032e8c

4000409c <SensorRead2B.clone.1>:
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
4000409c:	e92d4030 	push	{r4, r5, lr}
400040a0:	e24dd01c 	sub	sp, sp, #28
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
400040a4:	e5cd000d 	strb	r0, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
400040a8:	e5cd100e 	strb	r1, [sp, #14]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040ac:	e3a0e070 	mov	lr, #112	; 0x70
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
400040b0:	e5c32000 	strb	r2, [r3]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040b4:	e1a01003 	mov	r1, r3
400040b8:	e3a02001 	mov	r2, #1
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040bc:	e3a0c000 	mov	ip, #0
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead2B(
400040c0:	e1a04003 	mov	r4, r3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040c4:	e28d000c 	add	r0, sp, #12
400040c8:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040cc:	e3a05003 	mov	r5, #3

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
400040d0:	e5cde00c 	strb	lr, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
400040d4:	e5cd5014 	strb	r5, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
400040d8:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
400040dc:	eb007f00 	bl	40023ce4 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
400040e0:	e2502000 	subs	r2, r0, #0
400040e4:	1a00001b 	bne	40004158 <SensorRead2B.clone.1+0xbc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400040e8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400040ec:	eb003df0 	bl	400138b4 <CyU3PBusyWait>
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
400040f0:	e3a0c001 	mov	ip, #1

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
400040f4:	e3a0e071 	mov	lr, #113	; 0x71
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
400040f8:	e3a05000 	mov	r5, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
400040fc:	e28d000c 	add	r0, sp, #12
40004100:	e1a01004 	mov	r1, r4
40004104:	e1a0200c 	mov	r2, ip
40004108:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
4000410c:	e1cd51b6 	strh	r5, [sp, #22]

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004110:	e5cde00c 	strb	lr, [sp, #12]
	preamble.length = 1;
40004114:	e5cdc014 	strb	ip, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
40004118:	eb007deb 	bl	400238cc <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
4000411c:	e2505000 	subs	r5, r0, #0
40004120:	1a000004 	bne	40004138 <SensorRead2B.clone.1+0x9c>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004124:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004128:	eb003de1 	bl	400138b4 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
4000412c:	e1a00005 	mov	r0, r5
40004130:	e28dd01c 	add	sp, sp, #28
40004134:	e8bd8030 	pop	{r4, r5, pc}
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004138:	e5d4c001 	ldrb	ip, [r4, #1]
4000413c:	e5d43000 	ldrb	r3, [r4]
40004140:	e59f102c 	ldr	r1, [pc, #44]	; 40004174 <SensorRead2B.clone.1+0xd8>
40004144:	e1a02005 	mov	r2, r5
40004148:	e3a00004 	mov	r0, #4
4000414c:	e58dc000 	str	ip, [sp]
40004150:	eb003c66 	bl	400132f0 <CyU3PDebugPrint>
40004154:	eafffff4 	b	4000412c <SensorRead2B.clone.1+0x90>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
40004158:	e5d4c001 	ldrb	ip, [r4, #1]
4000415c:	e5d43000 	ldrb	r3, [r4]
40004160:	e59f1010 	ldr	r1, [pc, #16]	; 40004178 <SensorRead2B.clone.1+0xdc>
40004164:	e3a00004 	mov	r0, #4
40004168:	e58dc000 	str	ip, [sp]
4000416c:	eb003c5f 	bl	400132f0 <CyU3PDebugPrint>
40004170:	eaffffde 	b	400040f0 <SensorRead2B.clone.1+0x54>
40004174:	40011254 	.word	0x40011254
40004178:	40011238 	.word	0x40011238

4000417c <SensorWrite2B>:
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
4000417c:	e92d40f0 	push	{r4, r5, r6, r7, lr}
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004180:	e35000a0 	cmp	r0, #160	; 0xa0
40004184:	13500070 	cmpne	r0, #112	; 0x70
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004188:	e24dd014 	sub	sp, sp, #20
4000418c:	e1a0c000 	mov	ip, r0
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004190:	03a0e000 	moveq	lr, #0
40004194:	13a0e001 	movne	lr, #1
	uint8_t slaveAddr,
	uint8_t boradAddr,
	uint8_t highAddr,
	uint8_t lowAddr, 
	uint8_t numData,
	uint8_t *buf) {
40004198:	e1a07001 	mov	r7, r1
4000419c:	e1a06002 	mov	r6, r2
400041a0:	e1a05003 	mov	r5, r3
400041a4:	e5dd4028 	ldrb	r4, [sp, #40]	; 0x28
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
400041a8:	1a000021 	bne	40004234 <SensorWrite2B+0xb8>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
400041ac:	e5cdc000 	strb	ip, [sp]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b0:	e1a0000d 	mov	r0, sp
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
400041b4:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041b8:	e28d100c 	add	r1, sp, #12
400041bc:	e3a02001 	mov	r2, #1
400041c0:	e1a0300e 	mov	r3, lr
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
400041c4:	e5cd7001 	strb	r7, [sp, #1]
	preamble.buffer[2] = highAddr;
400041c8:	e5cd6002 	strb	r6, [sp, #2]
	preamble.ctrlMask = 0x0000;
400041cc:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 3; /*  Three byte preamble. */
400041d0:	e5cdc008 	strb	ip, [sp, #8]
	inbuf[0] = lowAddr;
400041d4:	e5cd500c 	strb	r5, [sp, #12]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
400041d8:	eb007ec1 	bl	40023ce4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400041dc:	e3500000 	cmp	r0, #0
400041e0:	0a000010 	beq	40004228 <SensorWrite2B+0xac>
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041e4:	e1a02004 	mov	r2, r4
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400041e8:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
400041ec:	e3a04001 	mov	r4, #1
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400041f0:	e1a0000d 	mov	r0, sp
400041f4:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c
400041f8:	e3a03000 	mov	r3, #0
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
400041fc:	e5cd4008 	strb	r4, [sp, #8]
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004200:	e1cde0ba 	strh	lr, [sp, #10]
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004204:	eb007eb6 	bl	40023ce4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004208:	e2504000 	subs	r4, r0, #0
4000420c:	0a000002 	beq	4000421c <SensorWrite2B+0xa0>
	CyU3PDebugPrint(4, "sensor write2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	/* Set the parameters for the I2C API access and then call the write API. */
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}
40004210:	e1a00004 	mov	r0, r4
40004214:	e28dd014 	add	sp, sp, #20
40004218:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
4000421c:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004220:	eb003da3 	bl	400138b4 <CyU3PBusyWait>
40004224:	eafffff9 	b	40004210 <SensorWrite2B+0x94>
40004228:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000422c:	eb003da0 	bl	400138b4 <CyU3PBusyWait>
40004230:	eaffffeb 	b	400041e4 <SensorWrite2B+0x68>
	CyU3PI2cPreamble_t preamble;
	uint8_t inbuf[2];

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
40004234:	e3a00004 	mov	r0, #4
40004238:	e59f1008 	ldr	r1, [pc, #8]	; 40004248 <SensorWrite2B+0xcc>
4000423c:	eb003c2b 	bl	400132f0 <CyU3PDebugPrint>
		return 1;
40004240:	e3a04001 	mov	r4, #1
40004244:	eafffff1 	b	40004210 <SensorWrite2B+0x94>
40004248:	40011270 	.word	0x40011270

4000424c <SensorWrite>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
4000424c:	e35000a0 	cmp	r0, #160	; 0xa0
40004250:	13500070 	cmpne	r0, #112	; 0x70
	SensorI2CAccessDelay(apiRetStatus);
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorWrite(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004254:	e92d4010 	push	{r4, lr}
40004258:	e1a0c000 	mov	ip, r0
4000425c:	e24dd010 	sub	sp, sp, #16
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
40004260:	03a0e000 	moveq	lr, #0
40004264:	13a0e001 	movne	lr, #1
40004268:	1a00001a 	bne	400042d8 <SensorWrite+0x8c>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
4000426c:	e3530040 	cmp	r3, #64	; 0x40
40004270:	8a000013 	bhi	400042c4 <SensorWrite+0x78>
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
40004274:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = 0xab;//highAddr;
40004278:	e3e0c054 	mvn	ip, #84	; 0x54
	preamble.buffer[2] = 0xcd;//lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000427c:	e1a02003 	mov	r2, r3
		return 1;
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
40004280:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = 0xcd;//lowAddr;
40004284:	e3e04032 	mvn	r4, #50	; 0x32
	preamble.length = 3;
40004288:	e3a0c003 	mov	ip, #3
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
4000428c:	e28d0004 	add	r0, sp, #4
40004290:	e59d1018 	ldr	r1, [sp, #24]
40004294:	e1a0300e 	mov	r3, lr
	}

	/* Set up the I2C control parameters and invoke the write API. */
	preamble.buffer[0] = slaveAddr;
	preamble.buffer[1] = 0xab;//highAddr;
	preamble.buffer[2] = 0xcd;//lowAddr;
40004298:	e5cd4006 	strb	r4, [sp, #6]
	preamble.length = 3;
4000429c:	e5cdc00c 	strb	ip, [sp, #12]
	preamble.ctrlMask = 0x0000;
400042a0:	e1cde0be 	strh	lr, [sp, #14]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
400042a4:	eb007e8e 	bl	40023ce4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400042a8:	e2504000 	subs	r4, r0, #0
400042ac:	1a000001 	bne	400042b8 <SensorWrite+0x6c>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400042b0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400042b4:	eb003d7e 	bl	400138b4 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
400042b8:	e1a00004 	mov	r0, r4
400042bc:	e28dd010 	add	sp, sp, #16
400042c0:	e8bd8010 	pop	{r4, pc}
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}

	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
400042c4:	e3a00004 	mov	r0, #4
400042c8:	e59f101c 	ldr	r1, [pc, #28]	; 400042ec <SensorWrite+0xa0>
400042cc:	eb003c07 	bl	400132f0 <CyU3PDebugPrint>
		return 1;
400042d0:	e3a04001 	mov	r4, #1
400042d4:	eafffff7 	b	400042b8 <SensorWrite+0x6c>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400042d8:	e3a00004 	mov	r0, #4
400042dc:	e59f100c 	ldr	r1, [pc, #12]	; 400042f0 <SensorWrite+0xa4>
400042e0:	eb003c02 	bl	400132f0 <CyU3PDebugPrint>
		return 1;
400042e4:	e3a04001 	mov	r4, #1
400042e8:	eafffff2 	b	400042b8 <SensorWrite+0x6c>
400042ec:	40011294 	.word	0x40011294
400042f0:	40011270 	.word	0x40011270

400042f4 <SensorRead2B>:
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
400042f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
400042f8:	e35000a1 	cmp	r0, #161	; 0xa1
400042fc:	13500071 	cmpne	r0, #113	; 0x71
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
40004300:	e24dd018 	sub	sp, sp, #24
40004304:	e1a04000 	mov	r4, r0
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004308:	03a0c000 	moveq	ip, #0
4000430c:	13a0c001 	movne	ip, #1
		uint8_t slaveAddr, 
		uint8_t highAddr,
		uint8_t lowAddr, 
		uint8_t RegAdd,
		uint8_t numData,
		uint8_t *buf) {
40004310:	e1a06001 	mov	r6, r1
40004314:	e1a0e002 	mov	lr, r2
40004318:	e59d5034 	ldr	r5, [sp, #52]	; 0x34
4000431c:	e5dd8030 	ldrb	r8, [sp, #48]	; 0x30
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004320:	1a000021 	bne	400043ac <SensorRead2B+0xb8>
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
40004324:	e5c53000 	strb	r3, [r5]

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004328:	e3c07001 	bic	r7, r0, #1
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000432c:	e3a02001 	mov	r2, #1
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
40004330:	e5cde00e 	strb	lr, [sp, #14]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004334:	e28d000c 	add	r0, sp, #12
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = highAddr; //highAddr;
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
40004338:	e3a0e003 	mov	lr, #3
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
4000433c:	e1a01005 	mov	r1, r5
40004340:	e1a0300c 	mov	r3, ip

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004344:	e5cd700c 	strb	r7, [sp, #12]
	preamble.buffer[1] = highAddr; //highAddr;
40004348:	e5cd600d 	strb	r6, [sp, #13]
	preamble.buffer[2] = lowAddr; //lowAddr;
	preamble.length = 3;
4000434c:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000; /*  Send start bit after third byte of preamble. */
40004350:	e1cdc1b6 	strh	ip, [sp, #22]
	buf[0] = RegAdd;
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
40004354:	eb007e62 	bl	40023ce4 <CyU3PI2cTransmitBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004358:	e2502000 	subs	r2, r0, #0
4000435c:	1a000017 	bne	400043c0 <SensorRead2B+0xcc>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004360:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004364:	eb003d52 	bl	400138b4 <CyU3PBusyWait>

#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
40004368:	e5cd400c 	strb	r4, [sp, #12]
	preamble.length = 1;
4000436c:	e3a0e001 	mov	lr, #1
	preamble.ctrlMask = 0x0000;
40004370:	e3a04000 	mov	r4, #0

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
40004374:	e28d000c 	add	r0, sp, #12
40004378:	e1a01005 	mov	r1, r5
4000437c:	e1a02008 	mov	r2, r8
40004380:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
	preamble.ctrlMask = 0x0000;
40004384:	e1cd41b6 	strh	r4, [sp, #22]
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(1) %d %d %d\r\n", lowAddr, buf[0], buf[1]); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);
	preamble.buffer[0] = slaveAddr;
	preamble.length = 1;
40004388:	e5cde014 	strb	lr, [sp, #20]
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
4000438c:	eb007d4e 	bl	400238cc <CyU3PI2cReceiveBytes>
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
40004390:	e2504000 	subs	r4, r0, #0
40004394:	1a000010 	bne	400043dc <SensorRead2B+0xe8>
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004398:	e3a00e7d 	mov	r0, #2000	; 0x7d0
4000439c:	eb003d44 	bl	400138b4 <CyU3PBusyWait>
	SensorI2CAccessDelay(apiRetStatus);
#ifdef DbgInfo
	CyU3PDebugPrint(4, "sensor read2B(2) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]); //additional debug
#endif
	return apiRetStatus;
}
400043a0:	e1a00004 	mov	r0, r4
400043a4:	e28dd018 	add	sp, sp, #24
400043a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
	
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
400043ac:	e3a00004 	mov	r0, #4
400043b0:	e59f1044 	ldr	r1, [pc, #68]	; 400043fc <SensorRead2B+0x108>
400043b4:	eb003bcd 	bl	400132f0 <CyU3PDebugPrint>
		return 1;
400043b8:	e3a04001 	mov	r4, #1
400043bc:	eafffff7 	b	400043a0 <SensorRead2B+0xac>
	CyU3PDebugPrint(4, "sensor read2B(0) %d %d %d %d %d\r\n", lowAddr, RegAdd, numData, buf[0], buf[1]); //additional debug
#endif
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, 1, 0); //send command block to prepare for reading
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(T) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043c0:	e5d5c001 	ldrb	ip, [r5, #1]
400043c4:	e5d53000 	ldrb	r3, [r5]
400043c8:	e59f1030 	ldr	r1, [pc, #48]	; 40004400 <SensorRead2B+0x10c>
400043cc:	e3a00004 	mov	r0, #4
400043d0:	e58dc000 	str	ip, [sp]
400043d4:	eb003bc5 	bl	400132f0 <CyU3PDebugPrint>
400043d8:	eaffffe2 	b	40004368 <SensorRead2B+0x74>
	preamble.ctrlMask = 0x0000;

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, numData, 0);//send data block read one byte
	/*** test I2C bus ready ****/
	if(apiRetStatus != CY_U3P_SUCCESS){
		CyU3PDebugPrint(4, "sensor read2B(R) %d %d %d\r\n", apiRetStatus, buf[0], buf[1]);
400043dc:	e5d5c001 	ldrb	ip, [r5, #1]
400043e0:	e5d53000 	ldrb	r3, [r5]
400043e4:	e59f1018 	ldr	r1, [pc, #24]	; 40004404 <SensorRead2B+0x110>
400043e8:	e1a02004 	mov	r2, r4
400043ec:	e3a00004 	mov	r0, #4
400043f0:	e58dc000 	str	ip, [sp]
400043f4:	eb003bbd 	bl	400132f0 <CyU3PDebugPrint>
400043f8:	eaffffe8 	b	400043a0 <SensorRead2B+0xac>
400043fc:	40011270 	.word	0x40011270
40004400:	40011238 	.word	0x40011238
40004404:	40011254 	.word	0x40011254

40004408 <SensorRead>:
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
40004408:	e35000a1 	cmp	r0, #161	; 0xa1
4000440c:	13500071 	cmpne	r0, #113	; 0x71
#endif
	return apiRetStatus;
}

CyU3PReturnStatus_t SensorRead(uint8_t slaveAddr, uint8_t highAddr,
		uint8_t lowAddr, uint8_t count, uint8_t *buf) {
40004410:	e92d4030 	push	{r4, r5, lr}
40004414:	e1a0c000 	mov	ip, r0
40004418:	e24dd014 	sub	sp, sp, #20
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
4000441c:	03a0e000 	moveq	lr, #0
40004420:	13a0e001 	movne	lr, #1
40004424:	1a00001c 	bne	4000449c <SensorRead+0x94>
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
40004428:	e3530040 	cmp	r3, #64	; 0x40
4000442c:	8a000015 	bhi	40004488 <SensorRead+0x80>
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004430:	e3a04004 	mov	r4, #4
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004434:	e1a02003 	mov	r2, r3
40004438:	e1a0300e 	mov	r3, lr
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
4000443c:	e3a0e055 	mov	lr, #85	; 0x55
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
40004440:	e3c05001 	bic	r5, r0, #1
	preamble.buffer[1] = 0x55;//highAddr;
40004444:	e5cde005 	strb	lr, [sp, #5]
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004448:	e08d0004 	add	r0, sp, r4
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
4000444c:	e3e0e055 	mvn	lr, #85	; 0x55
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004450:	e59d1020 	ldr	r1, [sp, #32]
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
	preamble.buffer[3] = slaveAddr;
	preamble.length = 4;
40004454:	e5cd400c 	strb	r4, [sp, #12]
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */
40004458:	e1cd40be 	strh	r4, [sp, #14]
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr & I2C_SLAVEADDR_MASK; /*  Mask out the transfer type bit. */
4000445c:	e5cd5004 	strb	r5, [sp, #4]
	preamble.buffer[1] = 0x55;//highAddr;
	preamble.buffer[2] = 0xaa;//lowAddr;
40004460:	e5cde006 	strb	lr, [sp, #6]
	preamble.buffer[3] = slaveAddr;
40004464:	e5cdc007 	strb	ip, [sp, #7]
	preamble.length = 4;
	preamble.ctrlMask = 0x0004; /*  Send start bit after third byte of preamble. */

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
40004468:	eb007d17 	bl	400238cc <CyU3PI2cReceiveBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000446c:	e2504000 	subs	r4, r0, #0
40004470:	1a000001 	bne	4000447c <SensorRead+0x74>
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
40004474:	e3a00e7d 	mov	r0, #2000	; 0x7d0
40004478:	eb003d0d 	bl	400138b4 <CyU3PBusyWait>

	apiRetStatus = CyU3PI2cReceiveBytes(&preamble, buf, count, 0);
	SensorI2CAccessDelay(apiRetStatus);

	return apiRetStatus;
}
4000447c:	e1a00004 	mov	r0, r4
40004480:	e28dd014 	add	sp, sp, #20
40004484:	e8bd8030 	pop	{r4, r5, pc}
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	if (count > 64) {
		CyU3PDebugPrint(4, "ERROR: SensorWrite count > 64\n");
40004488:	e3a00004 	mov	r0, #4
4000448c:	e59f101c 	ldr	r1, [pc, #28]	; 400044b0 <SensorRead+0xa8>
40004490:	eb003b96 	bl	400132f0 <CyU3PDebugPrint>
		return 1;
40004494:	e3a04001 	mov	r4, #1
40004498:	eafffff7 	b	4000447c <SensorRead+0x74>
	CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
	CyU3PI2cPreamble_t preamble;

	/* Validate the parameters. */
	if ((slaveAddr != SENSOR_ADDR_RD) && (slaveAddr != I2C_MEMORY_ADDR_RD)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
4000449c:	e3a00004 	mov	r0, #4
400044a0:	e59f100c 	ldr	r1, [pc, #12]	; 400044b4 <SensorRead+0xac>
400044a4:	eb003b91 	bl	400132f0 <CyU3PDebugPrint>
		return 1;
400044a8:	e3a04001 	mov	r4, #1
400044ac:	eafffff2 	b	4000447c <SensorRead+0x74>
400044b0:	40011294 	.word	0x40011294
400044b4:	40011270 	.word	0x40011270

400044b8 <SensorReset>:
}

/*
 * Reset the image sensor using GPIO.
 */
void SensorReset(void) {
400044b8:	e92d4010 	push	{r4, lr}
	CyU3PReturnStatus_t apiRetStatus;
	uint16_t preTick, posTick;
	/* Drive the GPIO low to reset the sensor. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyFalse);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyFalse);
400044bc:	e3a00016 	mov	r0, #22
400044c0:	e3a01000 	mov	r1, #0
400044c4:	eb007a83 	bl	40022ed8 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
400044c8:	e2502000 	subs	r2, r0, #0
400044cc:	1a000022 	bne	4000455c <SensorReset+0xa4>
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
				apiRetStatus);
		return;
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
400044d0:	e59f1094 	ldr	r1, [pc, #148]	; 4000456c <SensorReset+0xb4>
400044d4:	e3a00004 	mov	r0, #4
400044d8:	eb003b84 	bl	400132f0 <CyU3PDebugPrint>
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
400044dc:	eb0013d7 	bl	40009440 <_tx_time_get>
400044e0:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
400044e4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400044e8:	eb0011e2 	bl	40008c78 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
400044ec:	eb0013d3 	bl	40009440 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
400044f0:	e1a04804 	lsl	r4, r4, #16
400044f4:	e1a02824 	lsr	r2, r4, #16
400044f8:	e59f1070 	ldr	r1, [pc, #112]	; 40004570 <SensorReset+0xb8>
400044fc:	e1a00800 	lsl	r0, r0, #16
40004500:	e1a03820 	lsr	r3, r0, #16
40004504:	e3a00004 	mov	r0, #4
40004508:	eb003b78 	bl	400132f0 <CyU3PDebugPrint>
	}
	CyU3PDebugPrint(4, "GPIO Set Value\r\n");
	/* Wait for some time to allow proper reset. */
	uint8_t i = 0;
	while (i++ < 2){
		preTick = CyU3PGetTime();
4000450c:	eb0013cb 	bl	40009440 <_tx_time_get>
40004510:	e1a04000 	mov	r4, r0
		CyU3PThreadSleep(500);  // change the value into 100 from 10.
40004514:	e3a00f7d 	mov	r0, #500	; 0x1f4
40004518:	eb0011d6 	bl	40008c78 <_tx_thread_sleep>
		posTick = CyU3PGetTime();
4000451c:	eb0013c7 	bl	40009440 <_tx_time_get>
		CyU3PDebugPrint(4, "The ticks %d %d \r\n", preTick, posTick); //additional debug
40004520:	e1a02804 	lsl	r2, r4, #16
40004524:	e1a02822 	lsr	r2, r2, #16
40004528:	e59f1040 	ldr	r1, [pc, #64]	; 40004570 <SensorReset+0xb8>
4000452c:	e1a03800 	lsl	r3, r0, #16
40004530:	e1a03823 	lsr	r3, r3, #16
40004534:	e3a00004 	mov	r0, #4
40004538:	eb003b6c 	bl	400132f0 <CyU3PDebugPrint>
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
4000453c:	e3a00016 	mov	r0, #22
40004540:	e3a01001 	mov	r1, #1
40004544:	eb007a63 	bl	40022ed8 <CyU3PGpioSetValue>
	if (apiRetStatus != CY_U3P_SUCCESS) {
40004548:	e2502000 	subs	r2, r0, #0
4000454c:	1a000002 	bne	4000455c <SensorReset+0xa4>
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004550:	e3a00f96 	mov	r0, #600	; 0x258
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004554:	e8bd4010 	pop	{r4, lr}
				apiRetStatus);
		return;
	}
/* pause the cpu */
	while (i++ < 4){
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
40004558:	ea0011c6 	b	40008c78 <_tx_thread_sleep>

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
4000455c:	e59f1010 	ldr	r1, [pc, #16]	; 40004574 <SensorReset+0xbc>
40004560:	e3a00004 	mov	r0, #4
		CyU3PThreadSleep(600);  // change the value into 100 from 10.
		//;//CyU3PDebugPrint(4, "cpu pause \r\n");
	}

	return;
}
40004564:	e8bd4010 	pop	{r4, lr}

	/* Drive the GPIO high to bring the sensor out of reset. */
	//apiRetStatus = CyU3PGpioSetValue(SENSOR_POWER_GPIO, CyTrue);
	apiRetStatus = CyU3PGpioSetValue(SENSOR_RESET_GPIO, CyTrue);
	if (apiRetStatus != CY_U3P_SUCCESS) {
		CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n",
40004568:	ea003b60 	b	400132f0 <CyU3PDebugPrint>
4000456c:	400112dc 	.word	0x400112dc
40004570:	400112f0 	.word	0x400112f0
40004574:	400112b4 	.word	0x400112b4

40004578 <SensorInit>:

	return;
}

/* Image sensor initialization sequence. */
void SensorInit(void) {
40004578:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000457c:	e24dd00c 	sub	sp, sp, #12
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
40004580:	e3a00052 	mov	r0, #82	; 0x52
40004584:	e3a01030 	mov	r1, #48	; 0x30
40004588:	e3a020f2 	mov	r2, #242	; 0xf2
4000458c:	e28d3004 	add	r3, sp, #4
40004590:	ebfffec1 	bl	4000409c <SensorRead2B.clone.1>
40004594:	e3500000 	cmp	r0, #0
40004598:	1a000002 	bne	400045a8 <SensorInit+0x30>
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
4000459c:	e5dd3004 	ldrb	r3, [sp, #4]
400045a0:	e3530056 	cmp	r3, #86	; 0x56
400045a4:	0a000002 	beq	400045b4 <SensorInit+0x3c>

/* Image sensor initialization sequence. */
void SensorInit(void) {
	if (SensorI2cBusTest() != CY_U3P_SUCCESS) /* Verify that the sensor is connected. */
	{
		CyU3PDebugPrint(4, "Error: Reading Sensor ID failed!\r\n");
400045a8:	e3a00004 	mov	r0, #4
400045ac:	e59f1008 	ldr	r1, [pc, #8]	; 400045bc <SensorInit+0x44>
400045b0:	eb003b4e 	bl	400132f0 <CyU3PDebugPrint>
	 video data should be populated here.
	 */

	/* Update sensor configuration based on desired video stream parameters. Using 720p 30fps as default setting.*/
	//SensorScaling_HD720p_30fps();
}
400045b4:	e28dd00c 	add	sp, sp, #12
400045b8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
400045bc:	40011304 	.word	0x40011304

400045c0 <SensorI2cBusTest>:

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045c0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400045c4:	e24dd00c 	sub	sp, sp, #12
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
400045c8:	e3a00052 	mov	r0, #82	; 0x52
400045cc:	e3a01030 	mov	r1, #48	; 0x30
400045d0:	e3a020f2 	mov	r2, #242	; 0xf2
400045d4:	e28d3004 	add	r3, sp, #4
400045d8:	ebfffeaf 	bl	4000409c <SensorRead2B.clone.1>
400045dc:	e3500000 	cmp	r0, #0
		}
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
400045e0:	13a00001 	movne	r0, #1
uint8_t SensorI2cBusTest(void) {
	/* The sensor ID register can be read here to verify sensor connectivity. */
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
400045e4:	1a000002 	bne	400045f4 <SensorI2cBusTest+0x34>
}

/*
   Verify that the sensor can be accessed over the I2C bus from FX3.
 */
uint8_t SensorI2cBusTest(void) {
400045e8:	e5dd0004 	ldrb	r0, [sp, #4]
	uint8_t buf[2];

	/* Reading sensor ID */
	if (SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_WR, I2C_EAGLESDP_ADDR, 0xf2, 1, buf) == CY_U3P_SUCCESS) {
		if ((buf[0] == 0x56) /*&& (buf[1] == 0x02)*/) {
			return CY_U3P_SUCCESS;
400045ec:	e2500056 	subs	r0, r0, #86	; 0x56
400045f0:	13a00001 	movne	r0, #1
	}
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Sensor test 0x%x 0x%x\r\n", buf[0], buf[1]); // additional debug
#endif
	return 1;
}
400045f4:	e28dd00c 	add	sp, sp, #12
400045f8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

400045fc <SensorGetControl>:
 *  the modularized control get routine. IDext is the control ID.
 *
 * ********************************************************* */

uint8_t SensorGetControl(uint8_t IDext, uint8_t devAdd)  //for register w/r, the IDext is Reg. addrss.
{
400045fc:	e92d4010 	push	{r4, lr}
40004600:	e24dd008 	sub	sp, sp, #8
40004604:	e1a04000 	mov	r4, r0
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, I2C_DSPBOARD_ADDR_RD, devAdd, IDext, 1, buf);
40004608:	e1a02000 	mov	r2, r0
4000460c:	e28d3004 	add	r3, sp, #4
40004610:	e3a00053 	mov	r0, #83	; 0x53
40004614:	ebfffea0 	bl	4000409c <SensorRead2B.clone.1>
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x %d\r\n", IDext, buf[0]); // additional debug
40004618:	e59f1018 	ldr	r1, [pc, #24]	; 40004638 <SensorGetControl+0x3c>
4000461c:	e1a02004 	mov	r2, r4
40004620:	e5dd3004 	ldrb	r3, [sp, #4]
40004624:	e3a00004 	mov	r0, #4
40004628:	eb003b30 	bl	400132f0 <CyU3PDebugPrint>
//#endif
	return buf[0];
};
4000462c:	e5dd0004 	ldrb	r0, [sp, #4]
40004630:	e28dd008 	add	sp, sp, #8
40004634:	e8bd8010 	pop	{r4, pc}
40004638:	40011328 	.word	0x40011328

4000463c <SensorSetControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000463c:	e92d4030 	push	{r4, r5, lr}
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
40004640:	e3a0c052 	mov	ip, #82	; 0x52
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
40004644:	e24dd01c 	sub	sp, sp, #28
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004648:	e3a0e070 	mov	lr, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
4000464c:	e1a05000 	mov	r5, r0
40004650:	e1a04002 	mov	r4, r2
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
40004654:	e5cd1006 	strb	r1, [sp, #6]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004658:	e5cde004 	strb	lr, [sp, #4]
	preamble.buffer[1] = boradAddr;
4000465c:	e5cdc005 	strb	ip, [sp, #5]
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004660:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004664:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004668:	e28d0004 	add	r0, sp, #4
4000466c:	e28d1010 	add	r1, sp, #16
40004670:	e3a02001 	mov	r2, #1
40004674:	e3a03000 	mov	r3, #0
 ************************************************************ */

uint8_t SensorSetControl(uint8_t IDext, uint8_t devAdd, uint8_t value) //for register w/r, the IDext is Reg. addrss.
{
	uint8_t buf[2];
	buf[0] = value;
40004678:	e5cd4014 	strb	r4, [sp, #20]
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
4000467c:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
40004680:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;
40004684:	e5cd5010 	strb	r5, [sp, #16]

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004688:	eb007d95 	bl	40023ce4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
4000468c:	e3500000 	cmp	r0, #0
40004690:	0a000015 	beq	400046ec <SensorSetControl+0xb0>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004694:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004698:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
4000469c:	e28d0004 	add	r0, sp, #4
400046a0:	e28d1014 	add	r1, sp, #20
400046a4:	e1a0200c 	mov	r2, ip
400046a8:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
400046ac:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
400046b0:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
400046b4:	eb007d8a 	bl	40023ce4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
400046b8:	e3500000 	cmp	r0, #0
400046bc:	0a000007 	beq	400046e0 <SensorSetControl+0xa4>
{
	uint8_t buf[2];
	buf[0] = value;
	SensorWrite2B(SENSOR_ADDR_WR, I2C_DSPBOARD_ADDR_WR, devAdd, IDext, 1, buf);
//#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control regAdd 0x%x 0x%x\r\n", IDext, value); // additional debug
400046c0:	e59f1030 	ldr	r1, [pc, #48]	; 400046f8 <SensorSetControl+0xbc>
400046c4:	e1a02005 	mov	r2, r5
400046c8:	e1a03004 	mov	r3, r4
400046cc:	e3a00004 	mov	r0, #4
400046d0:	eb003b06 	bl	400132f0 <CyU3PDebugPrint>
//#endif
	return 0;
};
400046d4:	e3a00000 	mov	r0, #0
400046d8:	e28dd01c 	add	sp, sp, #28
400046dc:	e8bd8030 	pop	{r4, r5, pc}
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400046e0:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046e4:	eb003c72 	bl	400138b4 <CyU3PBusyWait>
400046e8:	eafffff4 	b	400046c0 <SensorSetControl+0x84>
400046ec:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400046f0:	eb003c6f 	bl	400138b4 <CyU3PBusyWait>
400046f4:	eaffffe6 	b	40004694 <SensorSetControl+0x58>
400046f8:	40011348 	.word	0x40011348

400046fc <SensorGetIrisControl>:
 *  the Iris control get routine. IDext is the control ID, boardID: the Iris control board address.
 *
 * ********************************************************* */

uint8_t SensorGetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t boardID)  //for register w/r, the IDext is Reg. addrss.
{
400046fc:	e1a0c000 	mov	ip, r0
40004700:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40004704:	e24dd00c 	sub	sp, sp, #12
	uint8_t buf[2];
	SensorRead2B(SENSOR_ADDR_RD, boardID, devAdd, IDext, 1, buf);
40004708:	e28d3004 	add	r3, sp, #4
4000470c:	e1a00002 	mov	r0, r2
40004710:	e1a0200c 	mov	r2, ip
40004714:	ebfffe60 	bl	4000409c <SensorRead2B.clone.1>
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Get control ID 0x%x 0x%x %d\r\n", boardID, IDext, buf[0]); // additional debug
#endif
	return buf[0];
};
40004718:	e5dd0004 	ldrb	r0, [sp, #4]
4000471c:	e28dd00c 	add	sp, sp, #12
40004720:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

40004724 <SensorSetIrisControl>:
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
40004724:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004728:	e3a0c070 	mov	ip, #112	; 0x70
 * value: set value, range check.
 *
 ************************************************************ */

uint8_t SensorSetIrisControl(uint8_t IDext, uint8_t devAdd, uint8_t value, uint8_t boardID) //for register w/r, the IDext is Reg. addrss.
{
4000472c:	e24dd01c 	sub	sp, sp, #28
	uint8_t buf[2];
	buf[0] = value;
40004730:	e5cd2014 	strb	r2, [sp, #20]
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
40004734:	e5cd3005 	strb	r3, [sp, #5]
	preamble.buffer[2] = highAddr;
40004738:	e5cd1006 	strb	r1, [sp, #6]
	preamble.ctrlMask = 0x0000;
	preamble.length = 3; /*  Three byte preamble. */
	inbuf[0] = lowAddr;
4000473c:	e5cd0010 	strb	r0, [sp, #16]
	/* Validate the I2C slave address. */
	if ((slaveAddr != SENSOR_ADDR_WR) && (slaveAddr != I2C_MEMORY_ADDR_WR)) {
		CyU3PDebugPrint(4, "I2C Slave address is not valid!\n");
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
40004740:	e5cdc004 	strb	ip, [sp, #4]
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
40004744:	e3a0e000 	mov	lr, #0
	preamble.length = 3; /*  Three byte preamble. */
40004748:	e3a0c003 	mov	ip, #3
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
4000474c:	e28d0004 	add	r0, sp, #4
40004750:	e28d1010 	add	r1, sp, #16
40004754:	e3a02001 	mov	r2, #1
40004758:	e3a03000 	mov	r3, #0
		return 1;
	}
	preamble.buffer[0] = slaveAddr;						/************** command block ***************************************/
	preamble.buffer[1] = boradAddr;
	preamble.buffer[2] = highAddr;
	preamble.ctrlMask = 0x0000;
4000475c:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 3; /*  Three byte preamble. */
40004760:	e5cdc00c 	strb	ip, [sp, #12]
	inbuf[0] = lowAddr;

	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, inbuf, 1, 0);
40004764:	eb007d5e 	bl	40023ce4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004768:	e3500000 	cmp	r0, #0
4000476c:	0a000010 	beq	400047b4 <SensorSetIrisControl+0x90>
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
	preamble.length = 1;
40004770:	e3a0c001 	mov	ip, #1
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004774:	e3a0e000 	mov	lr, #0
	preamble.length = 1;
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004778:	e28d0004 	add	r0, sp, #4
4000477c:	e28d1014 	add	r1, sp, #20
40004780:	e1a0200c 	mov	r2, ip
40004784:	e3a03000 	mov	r3, #0
	CyU3PDebugPrint(4, "sensor write2B(0) %d %d %d\r\n", lowAddr, buf[0], lowData); //additional debug
#endif
	SensorI2CAccessDelay(apiRetStatus);

	//buf[0] = lowData;								/****************** data block *****************************************/
	preamble.ctrlMask = 0x0000;
40004788:	e1cde0be 	strh	lr, [sp, #14]
	preamble.length = 1;
4000478c:	e5cdc00c 	strb	ip, [sp, #12]
	apiRetStatus = CyU3PI2cTransmitBytes(&preamble, buf, numData, 0);
40004790:	eb007d53 	bl	40023ce4 <CyU3PI2cTransmitBytes>
/* This function inserts a delay between successful I2C transfers to prevent
 false errors due to the slave being busy.
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
40004794:	e3500000 	cmp	r0, #0
40004798:	0a000002 	beq	400047a8 <SensorSetIrisControl+0x84>
	SensorWrite2B(SENSOR_ADDR_WR, boardID, devAdd, IDext, 1, buf);
#ifdef USB_DEBUG_PRINT
	CyU3PDebugPrint (4, "The Set control ID 0x%x 0x%x 0x%x\r\n", boardID, IDext, value); // additional debug
#endif
	return 0;
};
4000479c:	e3a00000 	mov	r0, #0
400047a0:	e28dd01c 	add	sp, sp, #28
400047a4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
 */
static void SensorI2CAccessDelay(CyU3PReturnStatus_t status) {
	/* Add a 10us delay if the I2C operation that preceded this call was successful. */
	if (status == CY_U3P_SUCCESS)
	{
		CyU3PBusyWait(2000); //change into 2ms org is 100us (100).
400047a8:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047ac:	eb003c40 	bl	400138b4 <CyU3PBusyWait>
400047b0:	eafffff9 	b	4000479c <SensorSetIrisControl+0x78>
400047b4:	e3a00e7d 	mov	r0, #2000	; 0x7d0
400047b8:	eb003c3d 	bl	400138b4 <CyU3PBusyWait>
400047bc:	eaffffeb 	b	40004770 <SensorSetIrisControl+0x4c>

400047c0 <I2cAppThread_Entry>:
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047c4:	e59f2200 	ldr	r2, [pc, #512]	; 400049cc <I2cAppThread_Entry+0x20c>
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047c8:	e3a04000 	mov	r4, #0
/*
static uint8_t timeDelay[64] = {

};
*/
void I2cAppThread_Entry(uint32_t input){
400047cc:	e24dd01c 	sub	sp, sp, #28
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047d0:	e3a0effa 	mov	lr, #1000	; 0x3e8
400047d4:	e284c02c 	add	ip, r4, #44	; 0x2c
400047d8:	e3a0300b 	mov	r3, #11
400047dc:	e1a01004 	mov	r1, r4
400047e0:	e59f01e8 	ldr	r0, [pc, #488]	; 400049d0 <I2cAppThread_Entry+0x210>
400047e4:	e58de000 	str	lr, [sp]
400047e8:	e58dc00c 	str	ip, [sp, #12]
	//uint16_t count = 0, cmdCopyIdx = 0; //count1 = 0, cmdQuIdx = 0,
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;
	VdcmdDes  *lcCmdDes;
	VdstateDes *lcStaDes;
	uint32_t flag = 0;
400047ec:	e58d4014 	str	r4, [sp, #20]
				lcCmdDes->CmdID, lcCmdDes,	lcCmdDes->cmdDesPrevious, lcCmdDes->cmdDesNext, cmdQuIdx);
		lcCmdDes += 1;
	}
#endif
/*** create a timer for I2C commands delay option ***/
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
400047f0:	e58d4004 	str	r4, [sp, #4]
400047f4:	e58d4008 	str	r4, [sp, #8]
400047f8:	eb00191e 	bl	4000ac78 <_txe_timer_create>
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
400047fc:	eb00130f 	bl	40009440 <_tx_time_get>
40004800:	e59f11cc 	ldr	r1, [pc, #460]	; 400049d4 <I2cAppThread_Entry+0x214>
40004804:	e59f51cc 	ldr	r5, [pc, #460]	; 400049d8 <I2cAppThread_Entry+0x218>
40004808:	e1a02000 	mov	r2, r0
4000480c:	e3a00004 	mov	r0, #4
40004810:	eb003ab6 	bl	400132f0 <CyU3PDebugPrint>
	CyU3PThreadSleep(50);
40004814:	e3a00032 	mov	r0, #50	; 0x32
40004818:	eb001116 	bl	40008c78 <_tx_thread_sleep>
	CyU3PTimerStart(&I2CCmdTimer);
4000481c:	e59f01ac 	ldr	r0, [pc, #428]	; 400049d0 <I2cAppThread_Entry+0x210>
40004820:	eb0018e2 	bl	4000abb0 <_txe_timer_activate>

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
40004824:	ea000000 	b	4000482c <I2cAppThread_Entry+0x6c>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
40004828:	eb0018c3 	bl	4000ab3c <_txe_thread_relinquish>
	CyU3PTimerCreate(&I2CCmdTimer, I2CCmdCb, 11, 1000, 0, CYU3P_NO_ACTIVATE);
	CyU3PDebugPrint (4, "I2C per-timer %d\r\n", CyU3PGetTime());
	CyU3PThreadSleep(50);
	CyU3PTimerStart(&I2CCmdTimer);

	while(cmdQuptr->bugFlag == (uint8_t)CyFalse){ //waiting for first command
4000482c:	e5d5201a 	ldrb	r2, [r5, #26]
40004830:	e3520000 	cmp	r2, #0
40004834:	0afffffb 	beq	40004828 <I2cAppThread_Entry+0x68>
        /* Allow other ready threads to run. */

        CyU3PThreadRelinquish ();
	}
	CyU3PDebugPrint (4, "The command queue is ready %d %d\r\n", cmdQuptr->bugFlag, cmdQuptr->readPtr->cmdFlag);
40004838:	e59f0198 	ldr	r0, [pc, #408]	; 400049d8 <I2cAppThread_Entry+0x218>
4000483c:	e59f1198 	ldr	r1, [pc, #408]	; 400049dc <I2cAppThread_Entry+0x21c>
40004840:	e5903010 	ldr	r3, [r0, #16]
40004844:	e3a00004 	mov	r0, #4
40004848:	e593303c 	ldr	r3, [r3, #60]	; 0x3c
4000484c:	eb003aa7 	bl	400132f0 <CyU3PDebugPrint>
40004850:	e59f7188 	ldr	r7, [pc, #392]	; 400049e0 <I2cAppThread_Entry+0x220>
40004854:	e59fb188 	ldr	fp, [pc, #392]	; 400049e4 <I2cAppThread_Entry+0x224>
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004858:	e3e06000 	mvn	r6, #0
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
4000485c:	e3a09000 	mov	r9, #0
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
40004860:	e3a0800f 	mov	r8, #15
	//CyU3PThreadSleep(100);
	//SetCurCmd();
	/*********** the loop of the thread ***********/
	for(;;){

		CyU3PEventGet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_AND_CLEAR, &flag, CYU3P_WAIT_FOREVER);//wait command event
40004864:	e3a02003 	mov	r2, #3
40004868:	e28d3014 	add	r3, sp, #20
4000486c:	e3a01020 	mov	r1, #32
40004870:	e59f0170 	ldr	r0, [pc, #368]	; 400049e8 <I2cAppThread_Entry+0x228>
40004874:	e58d6000 	str	r6, [sp]
40004878:	eb0015c6 	bl	40009f98 <_txe_event_flags_get>
				CyU3PDebugPrint(4, "GPIO Set Value Error, Error Code = %d\n", CyTrue);
			}

		}
*/
			CyU3PMutexGet(statQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000487c:	e1a01006 	mov	r1, r6
40004880:	e597001c 	ldr	r0, [r7, #28]
40004884:	eb00168b 	bl	4000a2b8 <_txe_mutex_get>
				}
				lcStaDes->statFlag = CyFalse;
				statQuptr->readPtr = (VdcmdDes*)lcStaDes->staDesNext; //update command queue read pointer
				cmdFlag = 0xFF; //I2C command done
			}
			CyU3PMutexPut(statQuptr->ringMux);  //release the command queue mutex
40004888:	e597001c 	ldr	r0, [r7, #28]
4000488c:	eb0016be 	bl	4000a38c <_txe_mutex_put>
			if(cmdFlag != 0xFF){ //for during handle command
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40004890:	e595001c 	ldr	r0, [r5, #28]
40004894:	e1a01006 	mov	r1, r6
40004898:	eb001686 	bl	4000a2b8 <_txe_mutex_get>
				lcCmdDes = cmdQuptr->readPtr;
4000489c:	e5954010 	ldr	r4, [r5, #16]
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048a0:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
400048a4:	e3520000 	cmp	r2, #0
400048a8:	1a000008 	bne	400048d0 <I2cAppThread_Entry+0x110>
400048ac:	e3a03000 	mov	r3, #0
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
400048b0:	e5944034 	ldr	r4, [r4, #52]	; 0x34
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
					i++;
400048b4:	e2831001 	add	r1, r3, #1
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048b8:	e594203c 	ldr	r2, [r4, #60]	; 0x3c
					i++;
400048bc:	e20130ff 	and	r3, r1, #255	; 0xff
						flag, cmdFlag, lcCmdDes->cmdFlag, lcCmdDes);
				*/

				/* find a available command */
				i = 0;
				while((lcCmdDes->cmdFlag == deswait) && (i < MAXCMD)){
400048c0:	e353003f 	cmp	r3, #63	; 0x3f
400048c4:	93520000 	cmpls	r2, #0
400048c8:	0afffff8 	beq	400048b0 <I2cAppThread_Entry+0xf0>
400048cc:	e5854010 	str	r4, [r5, #16]
					i++;
					lcCmdDes = lcCmdDes->cmdDesNext;
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
400048d0:	e3520000 	cmp	r2, #0
400048d4:	0a000029 	beq	40004980 <I2cAppThread_Entry+0x1c0>
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048d8:	e5d43001 	ldrb	r3, [r4, #1]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048dc:	e5d42000 	ldrb	r2, [r4]
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048e0:	e083e083 	add	lr, r3, r3, lsl #1
400048e4:	e084a08e 	add	sl, r4, lr, lsl #1
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
					data = ((lcCmdDes->CmdPar)+i)->Data;
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
					switch(lcCmdDes->CmdID){
400048e8:	e242c020 	sub	ip, r2, #32
					cmdQuptr->readPtr = lcCmdDes;
				}
				//CyU3PDebugPrint (4, "i %d Cmf_Flag %d\r\n", i, lcCmdDes->cmdFlag);
				if(lcCmdDes->cmdFlag != deswait){
					i = lcCmdDes->curNum;
					regAdd = ((lcCmdDes->CmdPar)+i)->RegAdd;
400048ec:	e5da0004 	ldrb	r0, [sl, #4]
					devAdd = ((lcCmdDes->CmdPar)+i)->DevAdd;
400048f0:	e5da1005 	ldrb	r1, [sl, #5]
					data = ((lcCmdDes->CmdPar)+i)->Data;
400048f4:	e5da2006 	ldrb	r2, [sl, #6]
					delaytime = ((lcCmdDes->CmdPar)+i)->DelayT;
400048f8:	e1daa0b8 	ldrh	sl, [sl, #8]
					switch(lcCmdDes->CmdID){
400048fc:	e35c0003 	cmp	ip, #3
40004900:	979ff10c 	ldrls	pc, [pc, ip, lsl #2]
40004904:	ea00001a 	b	40004974 <I2cAppThread_Entry+0x1b4>
40004908:	40004918 	.word	0x40004918
4000490c:	40004918 	.word	0x40004918
40004910:	40004964 	.word	0x40004964
40004914:	40004964 	.word	0x40004964
						case 0x20:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
							delaytime = 500;
							break;
						case 0x21:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40004918:	e3a03052 	mov	r3, #82	; 0x52
4000491c:	ebffff80 	bl	40004724 <SensorSetIrisControl>
							delaytime = 500;
							break;
40004920:	e3a01f7d 	mov	r1, #500	; 0x1f4
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
							break;
					}
					//SensorSetControl(regAdd, devAdd, data);    //send I2C command
					/** timer's ticket modify **/
					CyU3PTimerModify(&I2CCmdTimer, delaytime, 0);
40004924:	e3a02000 	mov	r2, #0
40004928:	e59f00a0 	ldr	r0, [pc, #160]	; 400049d0 <I2cAppThread_Entry+0x210>
4000492c:	eb0018af 	bl	4000abf0 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);  //start delay timer
40004930:	e59f0098 	ldr	r0, [pc, #152]	; 400049d0 <I2cAppThread_Entry+0x210>
40004934:	eb00189d 	bl	4000abb0 <_txe_timer_activate>
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004938:	e5d40001 	ldrb	r0, [r4, #1]
4000493c:	e5d41002 	ldrb	r1, [r4, #2]
40004940:	e1510000 	cmp	r1, r0
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
					}else{
						lcCmdDes->curNum ++;
40004944:	12800001 	addne	r0, r0, #1
40004948:	15c40001 	strbne	r0, [r4, #1]
						lcCmdDes->cmdFlag = desusing;
4000494c:	1584803c 	strne	r8, [r4, #60]	; 0x3c
					cmdFlag = 0xFF; //I2C command done
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
40004950:	0a000010 	beq	40004998 <I2cAppThread_Entry+0x1d8>
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
					CyU3PTimerStart(&I2CCmdTimer);
				}
			}
			CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40004954:	e595001c 	ldr	r0, [r5, #28]
40004958:	eb00168b 	bl	4000a38c <_txe_mutex_put>
			cmdCopyIdx = (cmdCopyIdx + 1 )& 0x1F;    //update checking index.
#endif
			cmdFlag = 0x00; //clear flag
		/* Allow other ready threads to run. */
			//CyU3PDebugPrint (4, "out of the i2cthread flag 0x%x cmdflag 0x%x\r\n", flag, cmdFlag);
			CyU3PThreadRelinquish ();
4000495c:	eb001876 	bl	4000ab3c <_txe_thread_relinquish>
		}
40004960:	eaffffbf 	b	40004864 <I2cAppThread_Entry+0xa4>
						case 0x22:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
							delaytime = 300;
							break;
						case 0x23:
							SensorSetIrisControl(regAdd, devAdd, data, I2C_AFBOARD_ADDR_WR/*boardID*/);//opt Zoom
40004964:	e3a03082 	mov	r3, #130	; 0x82
40004968:	ebffff6d 	bl	40004724 <SensorSetIrisControl>
							delaytime = 300;
							break;
4000496c:	e3a01f4b 	mov	r1, #300	; 0x12c
40004970:	eaffffeb 	b	40004924 <I2cAppThread_Entry+0x164>
						default:
							SensorSetControl(regAdd, devAdd, data);    //send I2C command
40004974:	ebffff30 	bl	4000463c <SensorSetControl>
40004978:	e1a0100a 	mov	r1, sl
							break;
4000497c:	eaffffe8 	b	40004924 <I2cAppThread_Entry+0x164>
					}else{
						lcCmdDes->curNum ++;
						lcCmdDes->cmdFlag = desusing;
					}
				}else{
					CyU3PTimerModify(&I2CCmdTimer, 1000, 0);
40004980:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40004984:	e59f0044 	ldr	r0, [pc, #68]	; 400049d0 <I2cAppThread_Entry+0x210>
40004988:	eb001898 	bl	4000abf0 <_txe_timer_change>
					CyU3PTimerStart(&I2CCmdTimer);
4000498c:	e59f003c 	ldr	r0, [pc, #60]	; 400049d0 <I2cAppThread_Entry+0x210>
40004990:	eb001886 	bl	4000abb0 <_txe_timer_activate>
40004994:	eaffffee 	b	40004954 <I2cAppThread_Entry+0x194>
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
40004998:	e5d4c000 	ldrb	ip, [r4]
#ifdef USB_DEBUG_PRINT
					CyU3PDebugPrint (4, "send I2C command cmdID %d regAdd 0x%x devAdd 0x%x data 0x%x cmdflag 0x%x\r\n",
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
4000499c:	e584903c 	str	r9, [r4, #60]	; 0x3c
						if(lcCmdDes->CmdID >= EXUAOFFSET){
400049a0:	e35c0023 	cmp	ip, #35	; 0x23
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049a4:	824cc020 	subhi	ip, ip, #32
400049a8:	808cc08c 	addhi	ip, ip, ip, lsl #1
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049ac:	908cc08c 	addls	ip, ip, ip, lsl #1
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b0:	808bc18c 	addhi	ip, fp, ip, lsl #3
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049b4:	908bc18c 	addls	ip, fp, ip, lsl #3
							lcCmdDes->CmdID, regAdd, devAdd, data, lcCmdDes->cmdFlag);
#endif
					if(lcCmdDes->NumPara == lcCmdDes->curNum){
						lcCmdDes->cmdFlag = deswait;
						if(lcCmdDes->CmdID >= EXUAOFFSET){
							ExUCtrlParArry[(lcCmdDes->CmdID-EXUAOFFSET+4)][16] = CyFalse;
400049b8:	85cc9010 	strbhi	r9, [ip, #16]
						}else{
							CtrlParArry[lcCmdDes->CmdID][16] = CyFalse; //set flag to false. wait for check.
400049bc:	95cc9190 	strbls	r9, [ip, #400]	; 0x190
						}
						cmdQuptr->readPtr = lcCmdDes->cmdDesNext; //update command queue read pointer for next handled command
400049c0:	e5944034 	ldr	r4, [r4, #52]	; 0x34
400049c4:	e5854010 	str	r4, [r5, #16]
400049c8:	eaffffe1 	b	40004954 <I2cAppThread_Entry+0x194>
400049cc:	400049ec 	.word	0x400049ec
400049d0:	40032fc4 	.word	0x40032fc4
400049d4:	400113b4 	.word	0x400113b4
400049d8:	40032ec4 	.word	0x40032ec4
400049dc:	400113c8 	.word	0x400113c8
400049e0:	40033148 	.word	0x40033148
400049e4:	40030000 	.word	0x40030000
400049e8:	40030f90 	.word	0x40030f90

400049ec <I2CCmdCb>:
uint32_t posTick;
CyU3PTimer I2CCmdTimer;

void  I2CCmdCb(uint32_t input){
	//CyU3PDebugPrint (4, "I2C pos-timer %d %d\r\n", posTick, input);
	CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);
400049ec:	e59f0008 	ldr	r0, [pc, #8]	; 400049fc <I2CCmdCb+0x10>
400049f0:	e3a01020 	mov	r1, #32
400049f4:	e3a02000 	mov	r2, #0
400049f8:	ea001596 	b	4000a058 <_txe_event_flags_set>
400049fc:	40030f90 	.word	0x40030f90

40004a00 <CyFxUvcApplnDmaCallback>:
        )
{
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a00:	e3510008 	cmp	r1, #8
CyFxUvcApplnDmaCallback (
        CyU3PDmaMultiChannel *multiChHandle,
        CyU3PDmaCbType_t      type,
        CyU3PDmaCBInput_t    *input
        )
{
40004a04:	e92d4030 	push	{r4, r5, lr}
40004a08:	e1a04002 	mov	r4, r2
40004a0c:	e24dd00c 	sub	sp, sp, #12
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
40004a10:	0a00000b 	beq	40004a44 <CyFxUvcApplnDmaCallback+0x44>
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
                        status, input->buffer_p.count, prodCount - consCount);
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
40004a14:	e3510010 	cmp	r1, #16
40004a18:	1a000007 	bne	40004a3c <CyFxUvcApplnDmaCallback+0x3c>
    {
        consCount++;
40004a1c:	e59f3104 	ldr	r3, [pc, #260]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
        streamingStarted = CyTrue;
40004a20:	e3a02001 	mov	r2, #1
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a24:	e1d3c3b0 	ldrh	ip, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
40004a28:	e5832034 	str	r2, [r3, #52]	; 0x34
            }
    }
#endif
    if (type == CY_U3P_DMA_CB_CONS_EVENT)
    {
        consCount++;
40004a2c:	e08c0002 	add	r0, ip, r2
40004a30:	e1a01800 	lsl	r1, r0, #16
40004a34:	e1a02821 	lsr	r2, r1, #16
40004a38:	e1c323b0 	strh	r2, [r3, #48]	; 0x30
        streamingStarted = CyTrue;
    }
}
40004a3c:	e28dd00c 	add	sp, sp, #12
40004a40:	e8bd8030 	pop	{r4, r5, pc}
   // CyU3PDmaBuffer_t    produced_buffer;
#if 1
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
40004a44:	e1d220b4 	ldrh	r2, [r2, #4]
40004a48:	e59f30dc 	ldr	r3, [pc, #220]	; 40004b2c <CyFxUvcApplnDmaCallback+0x12c>
40004a4c:	e1520003 	cmp	r2, r3
40004a50:	0a000029 	beq	40004afc <CyFxUvcApplnDmaCallback+0xfc>
                fb++;
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
40004a54:	e5945000 	ldr	r5, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004a58:	e59f10d0 	ldr	r1, [pc, #208]	; 40004b30 <CyFxUvcApplnDmaCallback+0x130>
40004a5c:	e245000c 	sub	r0, r5, #12
40004a60:	e3a0200c 	mov	r2, #12
40004a64:	ebfffb9a 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a68:	e555c00b 	ldrb	ip, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a6c:	e59f30b4 	ldr	r3, [pc, #180]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40004a70:	e38c1002 	orr	r1, ip, #2
40004a74:	e545100b 	strb	r1, [r5, #-11]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a78:	e1d302ba 	ldrh	r0, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a7c:	e1d410b4 	ldrh	r1, [r4, #4]
            }
            else
            {
                /* If we have a partial buffer, this is guaranteed to be the end of the video frame for uncompressed images. */
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_EOF);
                pb++;
40004a80:	e2802001 	add	r2, r0, #1
40004a84:	e1c322ba 	strh	r2, [r3, #42]	; 0x2a
                pbc = input->buffer_p.count;
40004a88:	e1c312bc 	strh	r1, [r3, #44]	; 0x2c
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a8c:	e1d3e2be 	ldrh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004a90:	e281100c 	add	r1, r1, #12
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004a94:	e28ec001 	add	ip, lr, #1
40004a98:	e1a0080c 	lsl	r0, ip, #16
40004a9c:	e1a0e820 	lsr	lr, r0, #16
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004aa0:	e1a02801 	lsl	r2, r1, #16
40004aa4:	e1a01822 	lsr	r1, r2, #16
40004aa8:	e59f0084 	ldr	r0, [pc, #132]	; 40004b34 <CyFxUvcApplnDmaCallback+0x134>
40004aac:	e3a02000 	mov	r2, #0
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ab0:	e1c3e2be 	strh	lr, [r3, #46]	; 0x2e
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
40004ab4:	eb004ada 	bl	40017624 <CyU3PDmaMultiChannelCommitBuffer>
                pbc = input->buffer_p.count;
               // hitFV = CyTrue;
            }

            /* Commit the updated DMA buffer to the USB endpoint. */
            prodCount++;
40004ab8:	e59f1068 	ldr	r1, [pc, #104]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
40004abc:	e2502000 	subs	r2, r0, #0
40004ac0:	0affffdd 	beq	40004a3c <CyFxUvcApplnDmaCallback+0x3c>
            {
                prodCount--;
40004ac4:	e1d1c2be 	ldrh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004ac8:	e1d430b4 	ldrh	r3, [r4, #4]
            status = CyU3PDmaMultiChannelCommitBuffer (&glChHandleUVCStream,
            		input->buffer_p.count + CY_FX_UVC_MAX_HEADER, 0);
            //CyU3PDebugPrint(1,"\r\n %d",input->buffer_p.count);
            if (status != CY_U3P_SUCCESS)
            {
                prodCount--;
40004acc:	e24c0001 	sub	r0, ip, #1
40004ad0:	e1a0e800 	lsl	lr, r0, #16
40004ad4:	e1a0c82e 	lsr	ip, lr, #16
40004ad8:	e1c1c2be 	strh	ip, [r1, #46]	; 0x2e
                CyU3PDebugPrint (4, "Error in multichannelcommitbuffer: Code = %d, size = %x, dmaDone %x\r\n",
40004adc:	e1d1e2be 	ldrh	lr, [r1, #46]	; 0x2e
40004ae0:	e1d103b0 	ldrh	r0, [r1, #48]	; 0x30
40004ae4:	e59f104c 	ldr	r1, [pc, #76]	; 40004b38 <CyFxUvcApplnDmaCallback+0x138>
40004ae8:	e060c00e 	rsb	ip, r0, lr
40004aec:	e3a00004 	mov	r0, #4
40004af0:	e58dc000 	str	ip, [sp]
40004af4:	eb0039fd 	bl	400132f0 <CyU3PDebugPrint>
40004af8:	eaffffcf 	b	40004a3c <CyFxUvcApplnDmaCallback+0x3c>
    CyU3PReturnStatus_t status;
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
40004afc:	e594e000 	ldr	lr, [r4]
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40004b00:	e59f1028 	ldr	r1, [pc, #40]	; 40004b30 <CyFxUvcApplnDmaCallback+0x130>
40004b04:	e24e000c 	sub	r0, lr, #12
40004b08:	e3a0200c 	mov	r2, #12
40004b0c:	ebfffb70 	bl	400038d4 <CyU3PMemCopy>
    if (type == CY_U3P_DMA_CB_PROD_EVENT)
    {
            if (input->buffer_p.count == CY_FX_UVC_BUF_FULL_SIZE)
            {
                CyFxUVCAddHeader (input->buffer_p.buffer - CY_FX_UVC_MAX_HEADER, CY_FX_UVC_HEADER_FRAME);
                fb++;
40004b10:	e59f3010 	ldr	r3, [pc, #16]	; 40004b28 <CyFxUvcApplnDmaCallback+0x128>
40004b14:	e1d410b4 	ldrh	r1, [r4, #4]
40004b18:	e1d3c2b8 	ldrh	ip, [r3, #40]	; 0x28
40004b1c:	e28c0001 	add	r0, ip, #1
40004b20:	e1c302b8 	strh	r0, [r3, #40]	; 0x28
40004b24:	eaffffd8 	b	40004a8c <CyFxUvcApplnDmaCallback+0x8c>
40004b28:	40030f90 	.word	0x40030f90
40004b2c:	00003ff0 	.word	0x00003ff0
40004b30:	40030480 	.word	0x40030480
40004b34:	40032ee4 	.word	0x40032ee4
40004b38:	400113ec 	.word	0x400113ec

40004b3c <CyFxUVCApplnUSBEventCB>:
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
    switch (evtype)
40004b3c:	e3500002 	cmp	r0, #2
static void
CyFxUVCApplnUSBEventCB (
        CyU3PUsbEventType_t evtype,  /* Event type */
        uint16_t             evdata  /* Event data */
        )
{
40004b40:	e92d4070 	push	{r4, r5, r6, lr}
40004b44:	e1a03001 	mov	r3, r1
40004b48:	e24dd010 	sub	sp, sp, #16
40004b4c:	e1a04000 	mov	r4, r0
    switch (evtype)
40004b50:	0a000036 	beq	40004c30 <CyFxUVCApplnUSBEventCB+0xf4>
40004b54:	e3500004 	cmp	r0, #4
40004b58:	0a00001f 	beq	40004bdc <CyFxUVCApplnUSBEventCB+0xa0>
40004b5c:	e3500001 	cmp	r0, #1
40004b60:	0a000001 	beq	40004b6c <CyFxUVCApplnUSBEventCB+0x30>
#endif

        default:
            break;
    }
}
40004b64:	e28dd010 	add	sp, sp, #16
40004b68:	e8bd8070 	pop	{r4, r5, r6, pc}
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b6c:	e59f5128 	ldr	r5, [pc, #296]	; 40004c9c <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
40004b70:	e1a02000 	mov	r2, r0
40004b74:	e59f1124 	ldr	r1, [pc, #292]	; 40004ca0 <CyFxUVCApplnUSBEventCB+0x164>
40004b78:	e3a00004 	mov	r0, #4
40004b7c:	eb0039db 	bl	400132f0 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004b80:	e1a00004 	mov	r0, r4
40004b84:	eb005ae9 	bl	4001b730 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004b88:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004b8c:	e1a01004 	mov	r1, r4
40004b90:	e1a00005 	mov	r0, r5
40004b94:	e3a02002 	mov	r2, #2
40004b98:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_DISCONNECT:
            CyU3PDebugPrint (4, "USB disconnected...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004b9c:	e585c038 	str	ip, [r5, #56]	; 0x38
            isUsbConnected = CyFalse;
40004ba0:	e585c03c 	str	ip, [r5, #60]	; 0x3c
            streamingStarted = CyFalse;
40004ba4:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004ba8:	e58dc000 	str	ip, [sp]
40004bac:	eb0014f9 	bl	40009f98 <_txe_event_flags_get>
40004bb0:	e2504000 	subs	r4, r0, #0
40004bb4:	1affffea 	bne	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004bb8:	e3e01001 	mvn	r1, #1
40004bbc:	e3a02002 	mov	r2, #2
40004bc0:	e1a00005 	mov	r0, r5
40004bc4:	eb001523 	bl	4000a058 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004bc8:	e1a00005 	mov	r0, r5
40004bcc:	e3a01002 	mov	r1, #2
40004bd0:	e1a02004 	mov	r2, r4
40004bd4:	eb00151f 	bl	4000a058 <_txe_event_flags_set>
40004bd8:	eaffffe1 	b	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004bdc:	e59f50b8 	ldr	r5, [pc, #184]	; 40004c9c <CyFxUVCApplnUSBEventCB+0x160>
        )
{
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
40004be0:	e59f10bc 	ldr	r1, [pc, #188]	; 40004ca4 <CyFxUVCApplnUSBEventCB+0x168>
40004be4:	e1a02000 	mov	r2, r0
40004be8:	eb0039c0 	bl	400132f0 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004bec:	e3a00001 	mov	r0, #1
40004bf0:	eb005ace 	bl	4001b730 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004bf4:	e3a0c000 	mov	ip, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004bf8:	e3a01001 	mov	r1, #1
40004bfc:	e3a02002 	mov	r2, #2
40004c00:	e1a00005 	mov	r0, r5
40004c04:	e28d300c 	add	r3, sp, #12
    switch (evtype)
    {
        case CY_U3P_USB_EVENT_RESET:
            CyU3PDebugPrint (4, "RESET encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c08:	e585c038 	str	ip, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c0c:	e585c034 	str	ip, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c10:	e58dc000 	str	ip, [sp]
40004c14:	eb0014df 	bl	40009f98 <_txe_event_flags_get>
40004c18:	e2504000 	subs	r4, r0, #0
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c1c:	01a00005 	moveq	r0, r5
40004c20:	03e01001 	mvneq	r1, #1
40004c24:	03a02002 	moveq	r2, #2
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c28:	1affffcd 	bne	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
40004c2c:	eaffffe4 	b	40004bc4 <CyFxUVCApplnUSBEventCB+0x88>
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c30:	e59f5064 	ldr	r5, [pc, #100]	; 40004c9c <CyFxUVCApplnUSBEventCB+0x160>
            streamingStarted = CyFalse;
            CyFxUVCApplnAbortHandler ();
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
40004c34:	e1a02000 	mov	r2, r0
40004c38:	e59f1068 	ldr	r1, [pc, #104]	; 40004ca8 <CyFxUVCApplnUSBEventCB+0x16c>
40004c3c:	e3a00004 	mov	r0, #4
40004c40:	eb0039aa 	bl	400132f0 <CyU3PDebugPrint>
            CyU3PGpifDisable (CyTrue);
40004c44:	e3a00001 	mov	r0, #1
40004c48:	eb005ab8 	bl	4001b730 <CyU3PGpifDisable>
            gpif_initialized = 0;
40004c4c:	e3a06000 	mov	r6, #0
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c50:	e1a00005 	mov	r0, r5
40004c54:	e3a01001 	mov	r1, #1
40004c58:	e1a02004 	mov	r2, r4
40004c5c:	e28d300c 	add	r3, sp, #12
            break;

        case CY_U3P_USB_EVENT_SUSPEND:
            CyU3PDebugPrint (4, "SUSPEND encountered...0x%x 0x%x\r\n", evtype, evdata);
            CyU3PGpifDisable (CyTrue);
            gpif_initialized = 0;
40004c60:	e5856038 	str	r6, [r5, #56]	; 0x38
            streamingStarted = CyFalse;
40004c64:	e5856034 	str	r6, [r5, #52]	; 0x34
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004c68:	e58d6000 	str	r6, [sp]
40004c6c:	eb0014c9 	bl	40009f98 <_txe_event_flags_get>
40004c70:	e2506000 	subs	r6, r0, #0
40004c74:	1affffba 	bne	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004c78:	e1a02004 	mov	r2, r4
40004c7c:	e1a00005 	mov	r0, r5
40004c80:	e3e01001 	mvn	r1, #1
40004c84:	eb0014f3 	bl	4000a058 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004c88:	e1a00005 	mov	r0, r5
40004c8c:	e1a01004 	mov	r1, r4
40004c90:	e1a02006 	mov	r2, r6
40004c94:	eb0014ef 	bl	4000a058 <_txe_event_flags_set>
40004c98:	eaffffb1 	b	40004b64 <CyFxUVCApplnUSBEventCB+0x28>
40004c9c:	40030f90 	.word	0x40030f90
40004ca0:	40011478 	.word	0x40011478
40004ca4:	40011434 	.word	0x40011434
40004ca8:	40011454 	.word	0x40011454

40004cac <CyFxUVCApplnUSBSetupCB>:
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cac:	e59f32c0 	ldr	r3, [pc, #704]	; 40004f74 <CyFxUVCApplnUSBSetupCB+0x2c8>
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004cb0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cb4:	e59fc2bc 	ldr	ip, [pc, #700]	; 40004f78 <CyFxUVCApplnUSBSetupCB+0x2cc>
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cb8:	e20040ff 	and	r4, r0, #255	; 0xff
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cbc:	e2008cff 	and	r8, r0, #65280	; 0xff00
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cc0:	e1a07820 	lsr	r7, r0, #16
{
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
40004cc4:	e5c34000 	strb	r4, [r3]
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cc8:	e59f22ac 	ldr	r2, [pc, #684]	; 40004f7c <CyFxUVCApplnUSBSetupCB+0x2d0>
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004ccc:	e59f02ac 	ldr	r0, [pc, #684]	; 40004f80 <CyFxUVCApplnUSBSetupCB+0x2d4>
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cd0:	e59f32ac 	ldr	r3, [pc, #684]	; 40004f84 <CyFxUVCApplnUSBSetupCB+0x2d8>

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cd4:	e1a05801 	lsl	r5, r1, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cd8:	e1a08428 	lsr	r8, r8, #8
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cdc:	e1a05825 	lsr	r5, r5, #16
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004ce0:	e1a01821 	lsr	r1, r1, #16

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004ce4:	e3540002 	cmp	r4, #2
static CyBool_t
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
40004ce8:	e24dd010 	sub	sp, sp, #16
    CyBool_t uvcHandleReq = CyFalse;
    uint32_t status;

    /* Obtain Request Type and Request */
    bmReqType = (uint8_t)(setupdat0 & CY_FX_USB_SETUP_REQ_TYPE_MASK);
    bRequest  = (uint8_t)((setupdat0 & CY_FX_USB_SETUP_REQ_MASK) >> 8);
40004cec:	e5cc8000 	strb	r8, [ip]
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
40004cf0:	e1c270b0 	strh	r7, [r2]
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
40004cf4:	e1c050b0 	strh	r5, [r0]
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);
40004cf8:	e1c310b0 	strh	r1, [r3]

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004cfc:	0a00004f 	beq	40004e40 <CyFxUVCApplnUSBSetupCB+0x194>
40004d00:	9a000006 	bls	40004d20 <CyFxUVCApplnUSBSetupCB+0x74>
40004d04:	e3540021 	cmp	r4, #33	; 0x21
40004d08:	0a00003a 	beq	40004df8 <CyFxUVCApplnUSBSetupCB+0x14c>
40004d0c:	e35400a1 	cmp	r4, #161	; 0xa1
40004d10:	0a000038 	beq	40004df8 <CyFxUVCApplnUSBSetupCB+0x14c>
CyFxUVCApplnUSBSetupCB (
        uint32_t setupdat0, /* SETUP Data 0 */
        uint32_t setupdat1  /* SETUP Data 1 */
        )
{
    CyBool_t uvcHandleReq = CyFalse;
40004d14:	e3a00000 	mov	r0, #0
            break;
    }

    /* Return status of request handling to the USB driver */
    return uvcHandleReq;
}
40004d18:	e28dd010 	add	sp, sp, #16
40004d1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
    wValue    = (uint16_t)((setupdat0 & CY_FX_USB_SETUP_VALUE_MASK) >> 16);
    wIndex    = (uint16_t)(setupdat1 & CY_FX_USB_SETUP_INDEX_MASK);
    wLength   = (uint16_t)((setupdat1 & CY_FX_USB_SETUP_LENGTH_MASK) >> 16);

    /* Check for UVC Class Requests */
    switch (bmReqType)
40004d20:	e3540001 	cmp	r4, #1
40004d24:	1afffffa 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;
            }
            break;

        case CY_FX_USB_SET_INTF_REQ_TYPE:
            if (bRequest == CY_FX_USB_SET_INTERFACE_REQ)
40004d28:	e358000b 	cmp	r8, #11
40004d2c:	1afffff8 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
            {
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
40004d30:	e3550001 	cmp	r5, #1
40004d34:	1afffff6 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
40004d38:	e3570000 	cmp	r7, #0
40004d3c:	1afffff4 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d40:	e59f4240 	ldr	r4, [pc, #576]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
            	/* MAC OS sends Set Interface Alternate Setting 0 command after
            	 * stopping to stream. This application needs to stop streaming. */
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
40004d44:	e59f1240 	ldr	r1, [pc, #576]	; 40004f8c <CyFxUVCApplnUSBSetupCB+0x2e0>
40004d48:	e3a00004 	mov	r0, #4
40004d4c:	eb003967 	bl	400132f0 <CyU3PDebugPrint>
                    CyU3PGpifDisable (CyTrue);
40004d50:	e1a00005 	mov	r0, r5
40004d54:	eb005a75 	bl	4001b730 <CyU3PGpifDisable>
                    gpif_initialized = 0;
                    streamingStarted = CyFalse;
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d58:	e1a01005 	mov	r1, r5
40004d5c:	e3a00083 	mov	r0, #131	; 0x83
                if ((wIndex == CY_FX_UVC_STREAM_INTERFACE) && (wValue == 0))
                {
                	/* Stop GPIF state machine to stop data transfers through FX3 */
                	CyU3PDebugPrint (4, "Alternate setting 0..\r\n");
                    CyU3PGpifDisable (CyTrue);
                    gpif_initialized = 0;
40004d60:	e5847038 	str	r7, [r4, #56]	; 0x38
                    streamingStarted = CyFalse;
40004d64:	e5847034 	str	r7, [r4, #52]	; 0x34
                    /* Place the EP in NAK mode before cleaning up the pipe. */
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004d68:	eb006402 	bl	4001dd78 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d6c:	e3a00064 	mov	r0, #100	; 0x64
40004d70:	eb003acf 	bl	400138b4 <CyU3PBusyWait>

                    /* Reset and flush the endpoint pipe. */
                    CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004d74:	e59f0214 	ldr	r0, [pc, #532]	; 40004f90 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004d78:	eb004e63 	bl	4001870c <CyU3PDmaMultiChannelReset>
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004d7c:	e3a00083 	mov	r0, #131	; 0x83
40004d80:	eb005ff6 	bl	4001cd60 <CyU3PUsbFlushEp>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004d84:	e1a01007 	mov	r1, r7
40004d88:	e3a00083 	mov	r0, #131	; 0x83
40004d8c:	eb0063f9 	bl	4001dd78 <CyU3PUsbSetEpNak>
                    CyU3PBusyWait (100);
40004d90:	e3a00064 	mov	r0, #100	; 0x64
40004d94:	eb003ac6 	bl	400138b4 <CyU3PBusyWait>

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004d98:	e1a01007 	mov	r1, r7
40004d9c:	e1a02005 	mov	r2, r5
40004da0:	e3a00083 	mov	r0, #131	; 0x83
40004da4:	eb0064b9 	bl	4001e090 <CyU3PUsbStall>
                    uvcHandleReq = CyTrue;
                    /* Complete Control request handshake */
                    CyU3PUsbAckSetup ();
40004da8:	eb005ef4 	bl	4001c980 <CyU3PUsbAckSetup>
                    /* Indicate stop streaming to main thread */
                    clearFeatureRqtReceived = CyTrue;
40004dac:	e5845040 	str	r5, [r4, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004db0:	e1a00004 	mov	r0, r4
40004db4:	e1a01005 	mov	r1, r5
40004db8:	e3a02002 	mov	r2, #2
40004dbc:	e28d300c 	add	r3, sp, #12
40004dc0:	e58d7000 	str	r7, [sp]
40004dc4:	eb001473 	bl	40009f98 <_txe_event_flags_get>
40004dc8:	e2506000 	subs	r6, r0, #0
40004dcc:	1a00002e 	bne	40004e8c <CyFxUVCApplnUSBSetupCB+0x1e0>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004dd0:	e3e01001 	mvn	r1, #1
40004dd4:	e3a02002 	mov	r2, #2
40004dd8:	e1a00004 	mov	r0, r4
40004ddc:	eb00149d 	bl	4000a058 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004de0:	e1a00004 	mov	r0, r4
40004de4:	e3a01002 	mov	r1, #2
40004de8:	e1a02006 	mov	r2, r6
40004dec:	eb001499 	bl	4000a058 <_txe_event_flags_set>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004df0:	e1a00005 	mov	r0, r5
40004df4:	eaffffc7 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004df8:	e21550ff 	ands	r5, r5, #255	; 0xff
40004dfc:	1a00001a 	bne	40004e6c <CyFxUVCApplnUSBSetupCB+0x1c0>
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
40004e00:	e1a02005 	mov	r2, r5
40004e04:	e59f017c 	ldr	r0, [pc, #380]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e08:	e3a01004 	mov	r1, #4
40004e0c:	eb001491 	bl	4000a058 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e10:	e2502000 	subs	r2, r0, #0
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e14:	03a00001 	moveq	r0, #1
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e18:	0affffbe 	beq	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT Failed %x\n", status);
40004e1c:	e59f1170 	ldr	r1, [pc, #368]	; 40004f94 <CyFxUVCApplnUSBSetupCB+0x2e8>
40004e20:	e3a00004 	mov	r0, #4
40004e24:	eb003931 	bl	400132f0 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004e28:	e1a00005 	mov	r0, r5
40004e2c:	e3a01001 	mov	r1, #1
40004e30:	e1a02005 	mov	r2, r5
40004e34:	eb006495 	bl	4001e090 <CyU3PUsbStall>
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
            {
                case CY_FX_UVC_CONTROL_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004e38:	e3a00001 	mov	r0, #1
40004e3c:	eaffffb5 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                }
            }
            break;

        case CY_U3P_USB_TARGET_ENDPT:
            if (bRequest == CY_U3P_USB_SC_CLEAR_FEATURE)
40004e40:	e3580001 	cmp	r8, #1
40004e44:	1affffb2 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
            {
                if (wIndex == CY_FX_EP_BULK_VIDEO)
40004e48:	e3550083 	cmp	r5, #131	; 0x83
40004e4c:	1affffb0 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                {
                	/* Windows OS sends Clear Feature Request after it stops streaming,
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
40004e50:	e59f7130 	ldr	r7, [pc, #304]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e54:	e5976034 	ldr	r6, [r7, #52]	; 0x34
40004e58:	e3560001 	cmp	r6, #1
40004e5c:	0a000015 	beq	40004eb8 <CyFxUVCApplnUSBSetupCB+0x20c>
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
                        CyU3PUsbAckSetup ();
40004e60:	eb005ec6 	bl	4001c980 <CyU3PUsbAckSetup>
                        clearFeatureRqtReceived = CyTrue;
                        CyFxUVCApplnAbortHandler ();
                    }
                    else
                    {
                        uvcHandleReq = CyTrue;
40004e64:	e1a00008 	mov	r0, r8
40004e68:	eaffffaa 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
    switch (bmReqType)
    {
        case CY_FX_USB_UVC_GET_REQ_TYPE:
        case CY_FX_USB_UVC_SET_REQ_TYPE:
            /* UVC Specific requests are handled in the EP0 thread. */
            switch (wIndex & 0xFF)
40004e6c:	e3550001 	cmp	r5, #1
40004e70:	1affffa7 	bne	40004d14 <CyFxUVCApplnUSBSetupCB+0x68>
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
40004e74:	e3a02000 	mov	r2, #0
40004e78:	e59f0108 	ldr	r0, [pc, #264]	; 40004f88 <CyFxUVCApplnUSBSetupCB+0x2dc>
40004e7c:	e3a01008 	mov	r1, #8
40004e80:	eb001474 	bl	4000a058 <_txe_event_flags_set>
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
40004e84:	e2502000 	subs	r2, r0, #0
40004e88:	1a000001 	bne	40004e94 <CyFxUVCApplnUSBSetupCB+0x1e8>
                    CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
                    CyU3PBusyWait (100);

                    /* Clear the stall condition and sequence numbers. */
                    CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
                    uvcHandleReq = CyTrue;
40004e8c:	e1a00005 	mov	r0, r5
40004e90:	eaffffa0 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                        status = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT,
                                CYU3P_EVENT_OR);
                        if (status != CY_U3P_SUCCESS)
                        {
                            /* Error handling */
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT Failed %x\n", status);
40004e94:	e59f10fc 	ldr	r1, [pc, #252]	; 40004f98 <CyFxUVCApplnUSBSetupCB+0x2ec>
40004e98:	e3a00004 	mov	r0, #4
40004e9c:	eb003913 	bl	400132f0 <CyU3PDebugPrint>
                            CyU3PUsbStall (0, CyTrue, CyFalse);
40004ea0:	e3a00000 	mov	r0, #0
40004ea4:	e1a01005 	mov	r1, r5
40004ea8:	e1a02000 	mov	r2, r0
40004eac:	eb006477 	bl	4001e090 <CyU3PUsbStall>
                    }
                    break;

                case CY_FX_UVC_STREAM_INTERFACE:
                    {
                        uvcHandleReq = CyTrue;
40004eb0:	e1a00005 	mov	r0, r5
40004eb4:	eaffff97 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
                	 * however MAC OS sends clear feature request right after it sends a
                	 * Commit -> SET_CUR request. Hence, stop streaming only of streaming
                	 * has started. */
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");
40004eb8:	e59f10dc 	ldr	r1, [pc, #220]	; 40004f9c <CyFxUVCApplnUSBSetupCB+0x2f0>
40004ebc:	e3a00004 	mov	r0, #4
40004ec0:	eb00390a 	bl	400132f0 <CyU3PDebugPrint>

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ec4:	e3a08000 	mov	r8, #0
                    if (streamingStarted == CyTrue)
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
40004ec8:	e1a00006 	mov	r0, r6
40004ecc:	eb005a17 	bl	4001b730 <CyU3PGpifDisable>
                        gpif_initialized = 0;
                        streamingStarted = CyFalse;

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ed0:	e1a01006 	mov	r1, r6
40004ed4:	e1a00005 	mov	r0, r5
                    {
                        CyU3PDebugPrint (4, "Clear feature request detected..\r\n");

                        /* Disable the GPIF state machine. */
                        CyU3PGpifDisable (CyTrue);
                        gpif_initialized = 0;
40004ed8:	e5878038 	str	r8, [r7, #56]	; 0x38
                        streamingStarted = CyFalse;
40004edc:	e5878034 	str	r8, [r7, #52]	; 0x34

                        /* Place the EP in NAK mode before cleaning up the pipe. */
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyTrue);
40004ee0:	eb0063a4 	bl	4001dd78 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004ee4:	e3a00064 	mov	r0, #100	; 0x64
40004ee8:	eb003a71 	bl	400138b4 <CyU3PBusyWait>

                        /* Reset and flush the endpoint pipe. */
                        CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40004eec:	e59f009c 	ldr	r0, [pc, #156]	; 40004f90 <CyFxUVCApplnUSBSetupCB+0x2e4>
40004ef0:	eb004e05 	bl	4001870c <CyU3PDmaMultiChannelReset>
                        CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40004ef4:	e1a00005 	mov	r0, r5
40004ef8:	eb005f98 	bl	4001cd60 <CyU3PUsbFlushEp>
                        CyU3PUsbSetEpNak (CY_FX_EP_BULK_VIDEO, CyFalse);
40004efc:	e1a01008 	mov	r1, r8
40004f00:	e1a00005 	mov	r0, r5
40004f04:	eb00639b 	bl	4001dd78 <CyU3PUsbSetEpNak>
                        CyU3PBusyWait (100);
40004f08:	e3a00064 	mov	r0, #100	; 0x64
40004f0c:	eb003a68 	bl	400138b4 <CyU3PBusyWait>

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);
40004f10:	e1a01008 	mov	r1, r8
40004f14:	e1a02006 	mov	r2, r6
40004f18:	e1a00005 	mov	r0, r5
40004f1c:	eb00645b 	bl	4001e090 <CyU3PUsbStall>

                        uvcHandleReq = CyTrue;
                        /* Complete Control request handshake */
                        CyU3PUsbAckSetup ();
40004f20:	eb005e96 	bl	4001c980 <CyU3PUsbAckSetup>
                        /* Indicate stop streaming to main thread */
                        clearFeatureRqtReceived = CyTrue;
40004f24:	e5876040 	str	r6, [r7, #64]	; 0x40
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f28:	e1a00007 	mov	r0, r7
40004f2c:	e1a01006 	mov	r1, r6
40004f30:	e1a02004 	mov	r2, r4
40004f34:	e28d300c 	add	r3, sp, #12
40004f38:	e58d8000 	str	r8, [sp]
40004f3c:	eb001415 	bl	40009f98 <_txe_event_flags_get>
40004f40:	e2505000 	subs	r5, r0, #0
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f44:	11a00006 	movne	r0, r6
static void
CyFxUVCApplnAbortHandler (
        void)
{
	uint32_t flag;
	if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
40004f48:	1affff72 	bne	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
	{
        /* Clear the Video Stream Request Event */
        CyU3PEventSet (&glFxUVCEvent, ~(CY_FX_UVC_STREAM_EVENT), CYU3P_EVENT_AND);
40004f4c:	e3e01001 	mvn	r1, #1
40004f50:	e1a02004 	mov	r2, r4
40004f54:	e1a00007 	mov	r0, r7
40004f58:	eb00143e 	bl	4000a058 <_txe_event_flags_set>

        /* Set Video Stream Abort Event */
        CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_OR);
40004f5c:	e1a00007 	mov	r0, r7
40004f60:	e1a01004 	mov	r1, r4
40004f64:	e1a02005 	mov	r2, r5
40004f68:	eb00143a 	bl	4000a058 <_txe_event_flags_set>
                        CyU3PBusyWait (100);

                        /* Clear the stall condition and sequence numbers. */
                        CyU3PUsbStall (CY_FX_EP_BULK_VIDEO, CyFalse, CyTrue);

                        uvcHandleReq = CyTrue;
40004f6c:	e1a00006 	mov	r0, r6
40004f70:	eaffff68 	b	40004d18 <CyFxUVCApplnUSBSetupCB+0x6c>
40004f74:	40032ec0 	.word	0x40032ec0
40004f78:	40033144 	.word	0x40033144
40004f7c:	40032fc0 	.word	0x40032fc0
40004f80:	40032ff0 	.word	0x40032ff0
40004f84:	40032ff2 	.word	0x40032ff2
40004f88:	40030f90 	.word	0x40030f90
40004f8c:	40011504 	.word	0x40011504
40004f90:	40032ee4 	.word	0x40032ee4
40004f94:	40011498 	.word	0x40011498
40004f98:	400114d0 	.word	0x400114d0
40004f9c:	4001151c 	.word	0x4001151c

40004fa0 <CyFxGpifCB>:
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fa0:	e3500001 	cmp	r0, #1
void
CyFxGpifCB (
        CyU3PGpifEventType event,
        uint8_t currentState
        )
{
40004fa4:	e92d4010 	push	{r4, lr}
40004fa8:	e1a02001 	mov	r2, r1
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
40004fac:	18bd8010 	popne	{r4, pc}
    {
        hitFV = CyTrue;
40004fb0:	e59f10d0 	ldr	r1, [pc, #208]	; 40005088 <CyFxGpifCB+0xe8>
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fb4:	e5d13048 	ldrb	r3, [r1, #72]	; 0x48
        uint8_t currentState
        )
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
40004fb8:	e5810044 	str	r0, [r1, #68]	; 0x44
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint8_t socket = 0xFF;      /*  Invalid value. */

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40004fbc:	e3530003 	cmp	r3, #3
40004fc0:	0a000028 	beq	40005068 <CyFxGpifCB+0xc8>
                /* Unexpected current state. Return error. */
                return 1;
        }
    }

    else if(usbSpeed == CY_U3P_HIGH_SPEED)
40004fc4:	e3530002 	cmp	r3, #2
40004fc8:	18bd8010 	popne	{r4, pc}
    {
        switch (stateId)
40004fcc:	e2420008 	sub	r0, r2, #8
40004fd0:	e350000a 	cmp	r0, #10
40004fd4:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
40004fd8:	ea00001b 	b	4000504c <CyFxGpifCB+0xac>
40004fdc:	4000500c 	.word	0x4000500c
40004fe0:	4000504c 	.word	0x4000504c
40004fe4:	4000504c 	.word	0x4000504c
40004fe8:	40005008 	.word	0x40005008
40004fec:	4000504c 	.word	0x4000504c
40004ff0:	4000504c 	.word	0x4000504c
40004ff4:	4000504c 	.word	0x4000504c
40004ff8:	40005044 	.word	0x40005044
40004ffc:	4000504c 	.word	0x4000504c
40005000:	4000504c 	.word	0x4000504c
40005004:	40005008 	.word	0x40005008
40005008:	e8bd8010 	pop	{r4, pc}
            case FULL_BUF_IN_SCK1:
                /* Buffer is already full and would have been committed. Do nothing. */
                break;

            case PARTIAL_BUF_IN_SCK0:
                socket = 0;
4000500c:	e3a01000 	mov	r1, #0
    if (socket != 0xFF)
    {
        /* We have a partial buffer. Commit the buffer manually. The Wrap Up API, here, helps produce a
           partially filled buffer on the producer side. This action will cause CyU3PDmaMultiChannelGetBuffer API
           in the UVCAppThread_Entry function to succeed one more time with less than full producer buffer count */
        apiRetStatus = CyU3PDmaMultiChannelSetWrapUp (handle, socket);
40005010:	e59f0074 	ldr	r0, [pc, #116]	; 4000508c <CyFxGpifCB+0xec>
40005014:	eb0050ed 	bl	400193d0 <CyU3PDmaMultiChannelSetWrapUp>
        if (apiRetStatus != CY_U3P_SUCCESS)
40005018:	e2502000 	subs	r2, r0, #0
4000501c:	0afffff9 	beq	40005008 <CyFxGpifCB+0x68>
        {
            CyU3PDebugPrint (4, "Channel Set WrapUp failed, Error code = %d\r\n", apiRetStatus);
40005020:	e3a00004 	mov	r0, #4
40005024:	e59f1064 	ldr	r1, [pc, #100]	; 40005090 <CyFxGpifCB+0xf0>
40005028:	eb0038b0 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000502c:	e59f1060 	ldr	r1, [pc, #96]	; 40005094 <CyFxGpifCB+0xf4>
40005030:	e3a00004 	mov	r0, #4
40005034:	eb0038ad 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40005038:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000503c:	eb000f0d 	bl	40008c78 <_tx_thread_sleep>
40005040:	eafffff9 	b	4000502c <CyFxGpifCB+0x8c>
            case 8:
                socket = 0;
                break;

            case 15:
                socket = 1;
40005044:	e3a01001 	mov	r1, #1
40005048:	eafffff0 	b	40005010 <CyFxGpifCB+0x70>
                break;

#endif
             default:
            	CyU3PDebugPrint(1,"\r\n commiteof state = %d",stateId);
4000504c:	e59f1044 	ldr	r1, [pc, #68]	; 40005098 <CyFxGpifCB+0xf8>
40005050:	e3a00001 	mov	r0, #1
40005054:	eb0038a5 	bl	400132f0 <CyU3PDebugPrint>
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005058:	e59f103c 	ldr	r1, [pc, #60]	; 4000509c <CyFxGpifCB+0xfc>
4000505c:	e3a00004 	mov	r0, #4
    }
}
40005060:	e8bd4010 	pop	{r4, lr}
{
    if (event == CYU3P_GPIF_EVT_SM_INTERRUPT)
    {
        hitFV = CyTrue;
        if (CyFxUvcAppCommitEOF (&glChHandleUVCStream, currentState) != CY_U3P_SUCCESS)
            CyU3PDebugPrint (4, "Commit EOF failed!\n");
40005064:	ea0038a1 	b	400132f0 <CyU3PDebugPrint>

    /* Verify that the current state is a terminal state for the GPIF state machine. */

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
        switch (stateId)
40005068:	e242300b 	sub	r3, r2, #11
4000506c:	e3530003 	cmp	r3, #3
40005070:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
40005074:	eafffff4 	b	4000504c <CyFxGpifCB+0xac>
40005078:	4000500c 	.word	0x4000500c
4000507c:	40005044 	.word	0x40005044
40005080:	40005008 	.word	0x40005008
40005084:	40005008 	.word	0x40005008
40005088:	40030f90 	.word	0x40030f90
4000508c:	40032ee4 	.word	0x40032ee4
40005090:	40011558 	.word	0x40011558
40005094:	40011588 	.word	0x40011588
40005098:	40011540 	.word	0x40011540
4000509c:	4001159c 	.word	0x4001159c

400050a0 <I2CCmdHandler>:
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050a0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050a4:	e59f4108 	ldr	r4, [pc, #264]	; 400051b4 <I2CCmdHandler+0x114>
		0
};

//static uint32_t  isFlag = 0x0; /*set current value flag*/

void I2CCmdHandler(){
400050a8:	e24dd034 	sub	sp, sp, #52	; 0x34
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
400050ac:	e5d4504c 	ldrb	r5, [r4, #76]	; 0x4c
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050b0:	e5d42055 	ldrb	r2, [r4, #85]	; 0x55
void I2CCmdHandler(){
	uint8_t buf[2];
	uint8_t CmdType, CmdRegLen, CmdDataLen;
	CmdType = I2CCMDArry[0];
	CmdRegLen = I2CCMDArry[1];
	CmdDataLen = I2CCMDArry[8];
400050b4:	e5d46054 	ldrb	r6, [r4, #84]	; 0x54
	VdRingBuf *cmdQuptr = &cmdQu;

	CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
400050b8:	e5d4704e 	ldrb	r7, [r4, #78]	; 0x4e
400050bc:	e5d4e04f 	ldrb	lr, [r4, #79]	; 0x4f
400050c0:	e5d48050 	ldrb	r8, [r4, #80]	; 0x50
400050c4:	e5d4a051 	ldrb	sl, [r4, #81]	; 0x51
400050c8:	e5d49052 	ldrb	r9, [r4, #82]	; 0x52
400050cc:	e5d4b053 	ldrb	fp, [r4, #83]	; 0x53
400050d0:	e5d4c056 	ldrb	ip, [r4, #86]	; 0x56
400050d4:	e58d201c 	str	r2, [sp, #28]
400050d8:	e3a00004 	mov	r0, #4
400050dc:	e5d4304d 	ldrb	r3, [r4, #77]	; 0x4d
400050e0:	e59f10d0 	ldr	r1, [pc, #208]	; 400051b8 <I2CCmdHandler+0x118>
400050e4:	e1a02005 	mov	r2, r5
400050e8:	e88d4080 	stm	sp, {r7, lr}
400050ec:	e58d8008 	str	r8, [sp, #8]
400050f0:	e58da00c 	str	sl, [sp, #12]
400050f4:	e58d9010 	str	r9, [sp, #16]
400050f8:	e58db014 	str	fp, [sp, #20]
400050fc:	e58d6018 	str	r6, [sp, #24]
40005100:	e58dc020 	str	ip, [sp, #32]
40005104:	eb003879 	bl	400132f0 <CyU3PDebugPrint>
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
40005108:	e3550000 	cmp	r5, #0
4000510c:	0a000003 	beq	40005120 <I2CCmdHandler+0x80>
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
40005110:	e3550001 	cmp	r5, #1
40005114:	0a000016 	beq	40005174 <I2CCmdHandler+0xd4>
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}

	}
}
40005118:	e28dd034 	add	sp, sp, #52	; 0x34
4000511c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005120:	e5d4c054 	ldrb	ip, [r4, #84]	; 0x54
40005124:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
40005128:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
4000512c:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005130:	e3a0e00f 	mov	lr, #15
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005134:	e58dc000 	str	ip, [sp]
40005138:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
4000513c:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005140:	e3800001 	orr	r0, r0, #1
40005144:	e3811001 	orr	r1, r1, #1
			I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);

	if(CmdType == 0)//I2C read
	{
		I2CCMDArry[11] = 0xf; //setting I2C data is not available.
40005148:	e5c4e057 	strb	lr, [r4, #87]	; 0x57
		}

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
4000514c:	e58dc004 	str	ip, [sp, #4]
40005150:	ebfffc67 	bl	400042f4 <SensorRead2B>
			I2CCMDArry[9] = buf[0];
40005154:	e5dd002c 	ldrb	r0, [sp, #44]	; 0x2c
			if(CmdDataLen == 2){
40005158:	e3560002 	cmp	r6, #2

		/* end of the test */
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
			I2CCMDArry[9] = buf[0];
4000515c:	e5c40055 	strb	r0, [r4, #85]	; 0x55
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
40005160:	05dd002d 	ldrbeq	r0, [sp, #45]	; 0x2d
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
40005164:	e3e03000 	mvn	r3, #0
#endif
		if(1||(CmdRegLen == 4)){
			SensorRead2B(I2CCMDArry[2]|I2C_RD_MASK, I2CCMDArry[3]|I2C_RD_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
			I2CCMDArry[9] = buf[0];
			if(CmdDataLen == 2){
				I2CCMDArry[10] = buf[1];
40005168:	05c40056 	strbeq	r0, [r4, #86]	; 0x56
			}
			I2CCMDArry[11] = 0xff; //setting I2C data is available.
4000516c:	e5c43057 	strb	r3, [r4, #87]	; 0x57
40005170:	eaffffe8 	b	40005118 <I2CCmdHandler+0x78>
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005174:	e5d4c054 	ldrb	ip, [r4, #84]	; 0x54
40005178:	e5d4004e 	ldrb	r0, [r4, #78]	; 0x4e
4000517c:	e5d4104f 	ldrb	r1, [r4, #79]	; 0x4f
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
40005180:	e5d45055 	ldrb	r5, [r4, #85]	; 0x55
			buf[1] = I2CCMDArry[10];
40005184:	e5d4e056 	ldrb	lr, [r4, #86]	; 0x56
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
40005188:	e58dc000 	str	ip, [sp]
4000518c:	e5d42050 	ldrb	r2, [r4, #80]	; 0x50
40005190:	e28dc02c 	add	ip, sp, #44	; 0x2c
40005194:	e5d43051 	ldrb	r3, [r4, #81]	; 0x51
40005198:	e20110fe 	and	r1, r1, #254	; 0xfe
4000519c:	e20000fe 	and	r0, r0, #254	; 0xfe
		}else{//not support currently
			CyU3PDebugPrint (4, "The I2C command length is not supported. value %d\r\n", CmdRegLen);
		}
	}else if(CmdType == 1){
		if(1||(CmdRegLen == 4)){//TODO cmdque mutual
			buf[0] = I2CCMDArry[9];
400051a0:	e5cd502c 	strb	r5, [sp, #44]	; 0x2c
			buf[1] = I2CCMDArry[10];
400051a4:	e5cde02d 	strb	lr, [sp, #45]	; 0x2d
			if(0 && (I2CCMDArry[3]&I2C_WR_MASK)==0x82 && (I2CCMDArry[4]==0x30) && (I2CCMDArry[5]==0x10)){
				CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);
				cmdSet(cmdQuptr, 0x23, 0x10, 0x30, STOP, 0);
				CyU3PMutexPut(cmdQuptr->ringMux);
			}
			else SensorWrite2B(I2CCMDArry[2]&I2C_WR_MASK, I2CCMDArry[3]&I2C_WR_MASK, I2CCMDArry[4], I2CCMDArry[5], I2CCMDArry[8], buf);
400051a8:	e58dc004 	str	ip, [sp, #4]
400051ac:	ebfffbf2 	bl	4000417c <SensorWrite2B>
400051b0:	eaffffd8 	b	40005118 <I2CCmdHandler+0x78>
400051b4:	40030f90 	.word	0x40030f90
400051b8:	400115b0 	.word	0x400115b0

400051bc <setIrisauto>:

/************************************
 * set Iris mode
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
400051bc:	e92d4070 	push	{r4, r5, r6, lr}
400051c0:	e1a06001 	mov	r6, r1
400051c4:	e24dd008 	sub	sp, sp, #8
400051c8:	e1a04000 	mov	r4, r0
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051cc:	e3a05000 	mov	r5, #0
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400051d0:	e3e01000 	mvn	r1, #0
400051d4:	e590001c 	ldr	r0, [r0, #28]
400051d8:	eb001436 	bl	4000a2b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
400051dc:	e0650006 	rsb	r0, r5, r6
400051e0:	e270c000 	rsbs	ip, r0, #0
400051e4:	e0acc000 	adc	ip, ip, r0
400051e8:	e3a01020 	mov	r1, #32
400051ec:	e3a02027 	mov	r2, #39	; 0x27
400051f0:	e3a03030 	mov	r3, #48	; 0x30
400051f4:	e1a00004 	mov	r0, r4
400051f8:	e58dc000 	str	ip, [sp]
400051fc:	e58d5004 	str	r5, [sp, #4]
40005200:	ebfff8ac 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40005204:	e1560005 	cmp	r6, r5
40005208:	03a06002 	moveq	r6, #2
4000520c:	13a06001 	movne	r6, #1
40005210:	e1a00004 	mov	r0, r4
40005214:	e3a01021 	mov	r1, #33	; 0x21
40005218:	e3a02025 	mov	r2, #37	; 0x25
4000521c:	e3a03030 	mov	r3, #48	; 0x30
40005220:	e58d6000 	str	r6, [sp]
40005224:	e58d5004 	str	r5, [sp, #4]
40005228:	ebfff8a2 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000522c:	e594001c 	ldr	r0, [r4, #28]
}
40005230:	e28dd008 	add	sp, sp, #8
40005234:	e8bd4070 	pop	{r4, r5, r6, lr}
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005238:	ea001453 	b	4000a38c <_txe_mutex_put>

4000523c <ControlHandle>:
}

inline void ControlHandle(uint8_t CtrlID){
4000523c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005240:	e3500023 	cmp	r0, #35	; 0x23
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005244:	e2407020 	sub	r7, r0, #32
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005248:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000524c:	e1a04000 	mov	r4, r0
    CyU3PReturnStatus_t apiRetStatus = !CY_U3P_SUCCESS;
    VdRingBuf *cmdQuptr = &cmdQu;
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
40005250:	e20770ff 	and	r7, r7, #255	; 0xff
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
40005254:	9a000024 	bls	400052ec <ControlHandle+0xb0>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
40005258:	e59f6f58 	ldr	r6, [pc, #3928]	; 400061b8 <ControlHandle+0xf7c>
4000525c:	e0872087 	add	r2, r7, r7, lsl #1
40005260:	e1a02182 	lsl	r2, r2, #3
40005264:	e0863002 	add	r3, r6, r2
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
40005268:	e5d3b001 	ldrb	fp, [r3, #1]
        devAdd = ExUCtrlParArry[locCtrlID][15];
4000526c:	e5d3a00f 	ldrb	sl, [r3, #15]
        Len = ExUCtrlParArry[locCtrlID][2];
40005270:	e5d38002 	ldrb	r8, [r3, #2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40005274:	e59f3f40 	ldr	r3, [pc, #3904]	; 400061bc <ControlHandle+0xf80>
    uint16_t readCount;
    uint8_t RegAdd0, RegAdd1, Data0, Data1, Len, idx, locCtrlID;
    uint8_t devAdd;
    locCtrlID = CtrlID-EXUAOFFSET+4;
    if(CtrlID >= EXUAOFFSET){//the extension command over 32.
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
40005278:	e7d69002 	ldrb	r9, [r6, r2]
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
4000527c:	e5d35000 	ldrb	r5, [r3]
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005280:	e3550083 	cmp	r5, #131	; 0x83
40005284:	0a000023 	beq	40005318 <ControlHandle+0xdc>
40005288:	9a00002c 	bls	40005340 <ControlHandle+0x104>
4000528c:	e3550085 	cmp	r5, #133	; 0x85
40005290:	0a00008b 	beq	400054c4 <ControlHandle+0x288>
40005294:	3a000079 	bcc	40005480 <ControlHandle+0x244>
40005298:	e3550086 	cmp	r5, #134	; 0x86
4000529c:	0a0000c8 	beq	400055c4 <ControlHandle+0x388>
400052a0:	e3550087 	cmp	r5, #135	; 0x87
400052a4:	0a0000bc 	beq	4000559c <ControlHandle+0x360>
			  CyU3PDebugPrint (4, "The setup sensor value %d, 0x%x 0x%x 0x%x 0x%x %d\r\n", CtrlID, readCount, Data0, Data1, CtrlParArry[CtrlID][14], 0xff); // additional debug
#endif

			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
400052a8:	e3a00000 	mov	r0, #0
400052ac:	e3a01001 	mov	r1, #1
400052b0:	e1a02000 	mov	r2, r0
400052b4:	eb006375 	bl	4001e090 <CyU3PUsbStall>
			  break;
400052b8:	e3a0c0ff 	mov	ip, #255	; 0xff
400052bc:	e1a0700c 	mov	r7, ip
400052c0:	e1a0e00c 	mov	lr, ip
400052c4:	e1a0400c 	mov	r4, ip
		 }
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
400052c8:	e59f1ef0 	ldr	r1, [pc, #3824]	; 400061c0 <ControlHandle+0xf84>
400052cc:	e1a02005 	mov	r2, r5
400052d0:	e1a03004 	mov	r3, r4
400052d4:	e3a00004 	mov	r0, #4
400052d8:	e58de000 	str	lr, [sp]
400052dc:	e98d1080 	stmib	sp, {r7, ip}
400052e0:	eb003802 	bl	400132f0 <CyU3PDebugPrint>
}
400052e4:	e28dd02c 	add	sp, sp, #44	; 0x2c
400052e8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052ec:	e59f6ec4 	ldr	r6, [pc, #3780]	; 400061b8 <ControlHandle+0xf7c>
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052f0:	e59f3ec4 	ldr	r3, [pc, #3780]	; 400061bc <ControlHandle+0xf80>
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
400052f4:	e0805080 	add	r5, r0, r0, lsl #1
400052f8:	e0860185 	add	r0, r6, r5, lsl #3
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value %d 0x%x 0x%x\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
400052fc:	e5d35000 	ldrb	r5, [r3]
    	RegAdd0 = ExUCtrlParArry[locCtrlID][0];
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
40005300:	e5d09180 	ldrb	r9, [r0, #384]	; 0x180
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005304:	e3550083 	cmp	r5, #131	; 0x83
        RegAdd1 = ExUCtrlParArry[locCtrlID][1];
        devAdd = ExUCtrlParArry[locCtrlID][15];
        Len = ExUCtrlParArry[locCtrlID][2];
    }else{
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
40005308:	e5d0b181 	ldrb	fp, [r0, #385]	; 0x181
		devAdd = CtrlParArry[CtrlID][15];
4000530c:	e5d0a18f 	ldrb	sl, [r0, #399]	; 0x18f
		Len = CtrlParArry[CtrlID][2];
40005310:	e5d08182 	ldrb	r8, [r0, #386]	; 0x182
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005314:	1affffdb 	bne	40005288 <ControlHandle+0x4c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005318:	e3540023 	cmp	r4, #35	; 0x23
4000531c:	9a0000c6 	bls	4000563c <ControlHandle+0x400>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005320:	e0870087 	add	r0, r7, r7, lsl #1
40005324:	e0866180 	add	r6, r6, r0, lsl #3
40005328:	e59fae94 	ldr	sl, [pc, #3732]	; 400061c4 <ControlHandle+0xf88>
4000532c:	e5d6c005 	ldrb	ip, [r6, #5]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005330:	e5d6e006 	ldrb	lr, [r6, #6]
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
40005334:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
40005338:	e5cae059 	strb	lr, [sl, #89]	; 0x59
4000533c:	ea00000b 	b	40005370 <ControlHandle+0x134>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005340:	e3550081 	cmp	r5, #129	; 0x81
40005344:	0a00006a 	beq	400054f4 <ControlHandle+0x2b8>
40005348:	9a000010 	bls	40005390 <ControlHandle+0x154>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
4000534c:	e3540023 	cmp	r4, #35	; 0x23
40005350:	9a0000ad 	bls	4000560c <ControlHandle+0x3d0>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005354:	e087a087 	add	sl, r7, r7, lsl #1
40005358:	e086618a 	add	r6, r6, sl, lsl #3
4000535c:	e5d64003 	ldrb	r4, [r6, #3]
40005360:	e59fae5c 	ldr	sl, [pc, #3676]	; 400061c4 <ControlHandle+0xf88>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
40005364:	e5d67004 	ldrb	r7, [r6, #4]
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ: /* Minimum BLC = 0. */
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
40005368:	e5ca4058 	strb	r4, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
4000536c:	e5ca7059 	strb	r7, [sl, #89]	; 0x59
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005370:	e1a00008 	mov	r0, r8
40005374:	e59f1e4c 	ldr	r1, [pc, #3660]	; 400061c8 <ControlHandle+0xf8c>
40005378:	eb006119 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
4000537c:	e3a0c0ff 	mov	ip, #255	; 0xff
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40005380:	e5da7058 	ldrb	r7, [sl, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40005384:	e1a0e00c 	mov	lr, ip
40005388:	e1a0400c 	mov	r4, ip
4000538c:	eaffffcd 	b	400052c8 <ControlHandle+0x8c>
     */
    if (0 && (CtrlID == ExtAexModCtlID9)){
    	//CyU3PDebugPrint (4, "The Aex manual mode and AGC level are not support with 1080p camera.\r\n");
    	goto EndofSet;
    }
    switch (bRequest)
40005390:	e3550001 	cmp	r5, #1
40005394:	1affffc3 	bne	400052a8 <ControlHandle+0x6c>
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40005398:	e59f1e24 	ldr	r1, [pc, #3620]	; 400061c4 <ControlHandle+0xf88>
4000539c:	e28d2026 	add	r2, sp, #38	; 0x26
400053a0:	e3a00020 	mov	r0, #32
400053a4:	e2811058 	add	r1, r1, #88	; 0x58
400053a8:	eb005e9f 	bl	4001ce2c <CyU3PUsbGetEP0Data>
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
400053ac:	e2502000 	subs	r2, r0, #0
400053b0:	1a00034e 	bne	400060f0 <ControlHandle+0xeb4>
			   {
				  Data0 = glEp0Buffer[0];
				  Data1 = glEp0Buffer[1];
400053b4:	e59fce08 	ldr	ip, [pc, #3592]	; 400061c4 <ControlHandle+0xf88>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053b8:	e59f0e04 	ldr	r0, [pc, #3588]	; 400061c4 <ControlHandle+0xf88>
				  Data1 = glEp0Buffer[1];
400053bc:	e5dce059 	ldrb	lr, [ip, #89]	; 0x59
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053c0:	e59f2dfc 	ldr	r2, [pc, #3580]	; 400061c4 <ControlHandle+0xf88>
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053c4:	e5d03058 	ldrb	r3, [r0, #88]	; 0x58
				  Data1 = glEp0Buffer[1];
400053c8:	e58de01c 	str	lr, [sp, #28]
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053cc:	e5d2e05a 	ldrb	lr, [r2, #90]	; 0x5a
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
				  glEp0Buffer, &readCount);
			  if (apiRetStatus == CY_U3P_SUCCESS )
			   {
				  Data0 = glEp0Buffer[0];
400053d0:	e58d3014 	str	r3, [sp, #20]
				  Data1 = glEp0Buffer[1];
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
400053d4:	e58de018 	str	lr, [sp, #24]
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
400053d8:	e3540026 	cmp	r4, #38	; 0x26
400053dc:	979ff104 	ldrls	pc, [pc, r4, lsl #2]
400053e0:	ea0002b3 	b	40005eb4 <ControlHandle+0xc78>
400053e4:	40005df4 	.word	0x40005df4
400053e8:	40005d30 	.word	0x40005d30
400053ec:	40005eb4 	.word	0x40005eb4
400053f0:	40005eb4 	.word	0x40005eb4
400053f4:	40005ccc 	.word	0x40005ccc
400053f8:	40005b8c 	.word	0x40005b8c
400053fc:	40005b10 	.word	0x40005b10
40005400:	40005eb4 	.word	0x40005eb4
40005404:	40005eb4 	.word	0x40005eb4
40005408:	40005eb4 	.word	0x40005eb4
4000540c:	40005eb4 	.word	0x40005eb4
40005410:	40005a88 	.word	0x40005a88
40005414:	40005eb4 	.word	0x40005eb4
40005418:	40005eb4 	.word	0x40005eb4
4000541c:	40005eb4 	.word	0x40005eb4
40005420:	40005eb4 	.word	0x40005eb4
40005424:	4000606c 	.word	0x4000606c
40005428:	40005eb4 	.word	0x40005eb4
4000542c:	40005eb4 	.word	0x40005eb4
40005430:	40005eb4 	.word	0x40005eb4
40005434:	40005eb4 	.word	0x40005eb4
40005438:	40005eb4 	.word	0x40005eb4
4000543c:	40005eb4 	.word	0x40005eb4
40005440:	40005eb4 	.word	0x40005eb4
40005444:	40005eb4 	.word	0x40005eb4
40005448:	40005fc8 	.word	0x40005fc8
4000544c:	40005f2c 	.word	0x40005f2c
40005450:	40005eb4 	.word	0x40005eb4
40005454:	40005f1c 	.word	0x40005f1c
40005458:	40005eb4 	.word	0x40005eb4
4000545c:	40005a2c 	.word	0x40005a2c
40005460:	400059a8 	.word	0x400059a8
40005464:	40005eb4 	.word	0x40005eb4
40005468:	40005eb4 	.word	0x40005eb4
4000546c:	40005eb4 	.word	0x40005eb4
40005470:	40005eb4 	.word	0x40005eb4
40005474:	4000590c 	.word	0x4000590c
40005478:	400058f4 	.word	0x400058f4
4000547c:	40005890 	.word	0x40005890
			 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
40005480:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005484:	80877087 	addhi	r7, r7, r7, lsl #1
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005488:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
4000548c:	80866187 	addhi	r6, r6, r7, lsl #3
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005490:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
40005494:	859fad28 	ldrhi	sl, [pc, #3368]	; 400061c4 <ControlHandle+0xf88>
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
40005498:	959fad24 	ldrls	sl, [pc, #3364]	; 400061c4 <ControlHandle+0xf88>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][7];//ext_control array;
4000549c:	85d61007 	ldrbhi	r1, [r6, #7]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
400054a0:	85d62008 	ldrbhi	r2, [r6, #8]
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054a4:	95d61187 	ldrbls	r1, [r6, #391]	; 0x187
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400054a8:	95d62188 	ldrbls	r2, [r6, #392]	; 0x188
			  glEp0Buffer[2] = 0;
400054ac:	e3a03000 	mov	r3, #0
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][8];
				 glEp0Buffer[2] = 0;
				 glEp0Buffer[3] = 0;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][7];
400054b0:	e5ca1058 	strb	r1, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][8];
400054b4:	e5ca2059 	strb	r2, [sl, #89]	; 0x59
			  glEp0Buffer[2] = 0;
400054b8:	e5ca305a 	strb	r3, [sl, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400054bc:	e5ca305b 	strb	r3, [sl, #91]	; 0x5b
400054c0:	eaffffaa 	b	40005370 <ControlHandle+0x134>
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054c4:	e59f4cf8 	ldr	r4, [pc, #3320]	; 400061c4 <ControlHandle+0xf88>
			  glEp0Buffer[1] = 0;
400054c8:	e3a0c000 	mov	ip, #0
400054cc:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054d0:	e2841058 	add	r1, r4, #88	; 0x58
    }
    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400054d4:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054d8:	e3a00002 	mov	r0, #2
400054dc:	eb0060c0 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  break;
400054e0:	e3a0c0ff 	mov	ip, #255	; 0xff
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400054e4:	e5d47058 	ldrb	r7, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400054e8:	e1a0e00c 	mov	lr, ip
400054ec:	e1a0400c 	mov	r4, ip
400054f0:	eaffff74 	b	400052c8 <ControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
400054f4:	e2441001 	sub	r1, r4, #1
400054f8:	e3510025 	cmp	r1, #37	; 0x25
400054fc:	979ff101 	ldrls	pc, [pc, r1, lsl #2]
40005500:	ea0000d0 	b	40005848 <ControlHandle+0x60c>
40005504:	40005818 	.word	0x40005818
40005508:	40005848 	.word	0x40005848
4000550c:	40005848 	.word	0x40005848
40005510:	40005848 	.word	0x40005848
40005514:	400057f8 	.word	0x400057f8
40005518:	40005848 	.word	0x40005848
4000551c:	40005848 	.word	0x40005848
40005520:	40005848 	.word	0x40005848
40005524:	40005848 	.word	0x40005848
40005528:	40005848 	.word	0x40005848
4000552c:	4000586c 	.word	0x4000586c
40005530:	40005848 	.word	0x40005848
40005534:	40005848 	.word	0x40005848
40005538:	40005848 	.word	0x40005848
4000553c:	40005848 	.word	0x40005848
40005540:	40005848 	.word	0x40005848
40005544:	40005848 	.word	0x40005848
40005548:	40005848 	.word	0x40005848
4000554c:	40005848 	.word	0x40005848
40005550:	40005848 	.word	0x40005848
40005554:	40005848 	.word	0x40005848
40005558:	40005848 	.word	0x40005848
4000555c:	40005848 	.word	0x40005848
40005560:	40005848 	.word	0x40005848
40005564:	400057bc 	.word	0x400057bc
40005568:	40005848 	.word	0x40005848
4000556c:	40005848 	.word	0x40005848
40005570:	40005790 	.word	0x40005790
40005574:	40005848 	.word	0x40005848
40005578:	40005848 	.word	0x40005848
4000557c:	400056f4 	.word	0x400056f4
40005580:	40005848 	.word	0x40005848
40005584:	40005848 	.word	0x40005848
40005588:	40005848 	.word	0x40005848
4000558c:	40005848 	.word	0x40005848
40005590:	400056b8 	.word	0x400056b8
40005594:	400056b8 	.word	0x400056b8
40005598:	400056b8 	.word	0x400056b8
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
4000559c:	e3540023 	cmp	r4, #35	; 0x23
400055a0:	9a000031 	bls	4000566c <ControlHandle+0x430>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400055a4:	e0877087 	add	r7, r7, r7, lsl #1
400055a8:	e0866187 	add	r6, r6, r7, lsl #3
400055ac:	e59fac10 	ldr	sl, [pc, #3088]	; 400061c4 <ControlHandle+0xf88>
400055b0:	e5d6200b 	ldrb	r2, [r6, #11]
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055b4:	e5d6100c 	ldrb	r1, [r6, #12]
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
400055b8:	e5ca2058 	strb	r2, [sl, #88]	; 0x58
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
400055bc:	e5ca1059 	strb	r1, [sl, #89]	; 0x59
400055c0:	eaffff6a 	b	40005370 <ControlHandle+0x134>
		 	 }
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
400055c4:	e3540023 	cmp	r4, #35	; 0x23
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055c8:	80877087 	addhi	r7, r7, r7, lsl #1
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055cc:	90844084 	addls	r4, r4, r4, lsl #1
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055d0:	80866187 	addhi	r6, r6, r7, lsl #3
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055d4:	90866184 	addls	r6, r6, r4, lsl #3
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055d8:	859f8be4 	ldrhi	r8, [pc, #3044]	; 400061c4 <ControlHandle+0xf88>
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055dc:	959f8be0 	ldrls	r8, [pc, #3040]	; 400061c4 <ControlHandle+0xf88>
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
400055e0:	85d63009 	ldrbhi	r3, [r6, #9]
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055e4:	95d63189 	ldrbls	r3, [r6, #393]	; 0x189
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055e8:	e3a00001 	mov	r0, #1
		 case CY_FX_USB_UVC_GET_INFO_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
400055ec:	e5c83058 	strb	r3, [r8, #88]	; 0x58
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055f0:	e59f1bd0 	ldr	r1, [pc, #3024]	; 400061c8 <ControlHandle+0xf8c>
400055f4:	eb00607a 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
400055f8:	e3a0c0ff 	mov	ip, #255	; 0xff
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][9];//ext_control array;
		 	 }
		 	 else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][9];
		 	 }
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400055fc:	e5d87058 	ldrb	r7, [r8, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40005600:	e1a0e00c 	mov	lr, ip
40005604:	e1a0400c 	mov	r4, ip
40005608:	eaffff2e 	b	400052c8 <ControlHandle+0x8c>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000560c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005610:	10844084 	addne	r4, r4, r4, lsl #1
40005614:	10866184 	addne	r6, r6, r4, lsl #3
40005618:	159faba4 	ldrne	sl, [pc, #2980]	; 400061c4 <ControlHandle+0xf88>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000561c:	059faba0 	ldreq	sl, [pc, #2976]	; 400061c4 <ControlHandle+0xf88>
40005620:	059f3ba4 	ldreq	r3, [pc, #2980]	; 400061cc <ControlHandle+0xf90>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005624:	15d62183 	ldrbne	r2, [r6, #387]	; 0x183
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005628:	15d63184 	ldrbne	r3, [r6, #388]	; 0x184
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][3];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][4];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 1;//WBMenuCmpArry[0];//using for blue part
4000562c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 1;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
			  glEp0Buffer[0] = CtrlParArry[CtrlID][3];
40005630:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][4];
40005634:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005638:	eaffff4c 	b	40005370 <ControlHandle+0x134>
		 case CY_FX_USB_UVC_GET_MAX_REQ:
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
4000563c:	e354000b 	cmp	r4, #11
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005640:	10844084 	addne	r4, r4, r4, lsl #1
40005644:	10866184 	addne	r6, r6, r4, lsl #3
40005648:	159fab74 	ldrne	sl, [pc, #2932]	; 400061c4 <ControlHandle+0xf88>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000564c:	059fab70 	ldreq	sl, [pc, #2928]	; 400061c4 <ControlHandle+0xf88>
40005650:	059f3b78 	ldreq	r3, [pc, #2936]	; 400061d0 <ControlHandle+0xf94>
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005654:	15d62185 	ldrbne	r2, [r6, #389]	; 0x185
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005658:	15d63186 	ldrbne	r3, [r6, #390]	; 0x186
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][5];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][6];
		 	 }
		 	 else if(CtrlID == WBTLevCtlID11){
				 glEp0Buffer[0] = 0xff;//WBMenuCmpArry[0];//using for blue part
4000565c:	058a3058 	streq	r3, [sl, #88]	; 0x58
				 glEp0Buffer[1] = 0;
				 glEp0Buffer[2] = 0xff;//WBMenuCmpArry[2];//using for red part
				 glEp0Buffer[3] = 0;
			 }else
			 {
				  glEp0Buffer[0] = CtrlParArry[CtrlID][5];
40005660:	15ca2058 	strbne	r2, [sl, #88]	; 0x58
				  glEp0Buffer[1] = CtrlParArry[CtrlID][6];
40005664:	15ca3059 	strbne	r3, [sl, #89]	; 0x59
40005668:	eaffff40 	b	40005370 <ControlHandle+0x134>
		 	 if(CtrlID >= EXUAOFFSET){
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
4000566c:	e354000b 	cmp	r4, #11
40005670:	0a000007 	beq	40005694 <ControlHandle+0x458>
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005674:	e084a084 	add	sl, r4, r4, lsl #1
40005678:	e086618a 	add	r6, r6, sl, lsl #3
4000567c:	e5d6318b 	ldrb	r3, [r6, #395]	; 0x18b
40005680:	e59fab3c 	ldr	sl, [pc, #2876]	; 400061c4 <ControlHandle+0xf88>
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
40005684:	e5d6018c 	ldrb	r0, [r6, #396]	; 0x18c
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
				  glEp0Buffer[3] = 0;
			 }else{
			  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005688:	e5ca3058 	strb	r3, [sl, #88]	; 0x58
			  glEp0Buffer[1] = CtrlParArry[CtrlID][12];
4000568c:	e5ca0059 	strb	r0, [sl, #89]	; 0x59
40005690:	eaffff36 	b	40005370 <ControlHandle+0x134>
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
40005694:	e59fab28 	ldr	sl, [pc, #2856]	; 400061c4 <ControlHandle+0xf88>
40005698:	e5d6c293 	ldrb	ip, [r6, #659]	; 0x293
				  glEp0Buffer[1] = 0;
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
4000569c:	e5d6e294 	ldrb	lr, [r6, #660]	; 0x294
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
				  glEp0Buffer[1] = 0;
400056a0:	e3a04000 	mov	r4, #0
				 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][11];//ext_control array;
				 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][12];
		 	 }

		 	 else if(CtrlID == WBTLevCtlID11){
				  glEp0Buffer[0] = CtrlParArry[CtrlID][11];
400056a4:	e5cac058 	strb	ip, [sl, #88]	; 0x58
				  glEp0Buffer[1] = 0;
400056a8:	e5ca4059 	strb	r4, [sl, #89]	; 0x59
				  glEp0Buffer[2] = CtrlParArry[CtrlID][12];
400056ac:	e5cae05a 	strb	lr, [sl, #90]	; 0x5a
				  glEp0Buffer[3] = 0;
400056b0:	e5ca405b 	strb	r4, [sl, #91]	; 0x5b
400056b4:	eaffff2d 	b	40005370 <ControlHandle+0x134>
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056b8:	e0877087 	add	r7, r7, r7, lsl #1
400056bc:	e0866187 	add	r6, r6, r7, lsl #3
400056c0:	e59feafc 	ldr	lr, [pc, #2812]	; 400061c4 <ControlHandle+0xf88>
400056c4:	e5d6400d 	ldrb	r4, [r6, #13]
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056c8:	e5d6600e 	ldrb	r6, [r6, #14]
			 {
			 	 if(CtrlID >= EXUAOFFSET){
			 	 	 case Ext1BLCRangeCtlID4:
			 	 	 case Ext1BLCWeightCtlID5:
			 	 	 case Ext1BLCGridCtlID6:
						 glEp0Buffer[0] = ExUCtrlParArry[locCtrlID][13];//ext_control array;
400056cc:	e5ce4058 	strb	r4, [lr, #88]	; 0x58
						 glEp0Buffer[1] = ExUCtrlParArry[locCtrlID][14];
400056d0:	e5ce6059 	strb	r6, [lr, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056d4:	e1a00008 	mov	r0, r8
400056d8:	e59f1ae8 	ldr	r1, [pc, #2792]	; 400061c8 <ControlHandle+0xf8c>
400056dc:	eb006040 	bl	4001d7e4 <CyU3PUsbSendEP0Data>

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056e0:	e3a0e0ff 	mov	lr, #255	; 0xff
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400056e4:	e1a07004 	mov	r7, r4
400056e8:	e1a0c006 	mov	ip, r6

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value %d 0x%x 0x%x, %d\r\n", CtrlID, CtrlParArry[CtrlID][13], CtrlParArry[CtrlID][14], glEp0Buffer[0]); // additional debug
#endif
			  break;
400056ec:	e1a0400e 	mov	r4, lr
400056f0:	eafffef4 	b	400052c8 <ControlHandle+0x8c>
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
400056f4:	e3580000 	cmp	r8, #0
400056f8:	0a0002a7 	beq	4000619c <ControlHandle+0xf60>
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
400056fc:	e1a0e128 	lsr	lr, r8, #2
40005700:	e35e0000 	cmp	lr, #0
40005704:	13580003 	cmpne	r8, #3
40005708:	83a02000 	movhi	r2, #0
4000570c:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
40005710:	e1a0310e 	lsl	r3, lr, #2
						sendData += 4;
					 }
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
40005714:	9a0002a4 	bls	400061ac <ControlHandle+0xf70>
40005718:	e59f1aa8 	ldr	r1, [pc, #2728]	; 400061c8 <ControlHandle+0xf8c>
4000571c:	e241000c 	sub	r0, r1, #12
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005720:	e4904004 	ldr	r4, [r0], #4
40005724:	e282c001 	add	ip, r2, #1
40005728:	e20c20ff 	and	r2, ip, #255	; 0xff
4000572c:	e15e0002 	cmp	lr, r2
40005730:	e4814004 	str	r4, [r1], #4
40005734:	8afffff9 	bhi	40005720 <ControlHandle+0x4e4>
40005738:	e1580003 	cmp	r8, r3
4000573c:	159f0a80 	ldrne	r0, [pc, #2688]	; 400061c4 <ControlHandle+0xf88>
40005740:	0a000295 	beq	4000619c <ControlHandle+0xf60>
40005744:	e080e003 	add	lr, r0, r3
40005748:	e5de104c 	ldrb	r1, [lr, #76]	; 0x4c
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
4000574c:	e2836001 	add	r6, r3, #1
40005750:	e20630ff 	and	r3, r6, #255	; 0xff
40005754:	e1580003 	cmp	r8, r3
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
40005758:	e5ce1058 	strb	r1, [lr, #88]	; 0x58
					//CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
					 glEp0Buffer[0] = sendData;
					 glEp0Buffer[1] = 0;
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
4000575c:	8afffff8 	bhi	40005744 <ControlHandle+0x508>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005760:	e5d07057 	ldrb	r7, [r0, #87]	; 0x57
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
40005764:	e59f3a58 	ldr	r3, [pc, #2648]	; 400061c4 <ControlHandle+0xf88>
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005768:	e35700ff 	cmp	r7, #255	; 0xff
					 break;
			 	 case ExtI2CCtlID15:
			 		 for(idx=0; idx<Len; idx++){
			 			glEp0Buffer[idx] = I2CCMDArry[idx];
			 		 }
			 		 sendData = glEp0Buffer[9];
4000576c:	e5d04061 	ldrb	r4, [r0, #97]	; 0x61
			 		 sendData1 = glEp0Buffer[10];
40005770:	e5d06062 	ldrb	r6, [r0, #98]	; 0x62
#ifdef USB_DEBUG_PRINT
			 		CyU3PDebugPrint (4, "The I2C command is 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x 0x%x\r\n",
			 				I2CCMDArry[0], I2CCMDArry[1], I2CCMDArry[2], I2CCMDArry[3], I2CCMDArry[4], I2CCMDArry[5],
			 				I2CCMDArry[6], I2CCMDArry[7], I2CCMDArry[8], I2CCMDArry[9], I2CCMDArry[10]);
#endif
			 		 if(I2CCMDArry[11] != 0xff)//the data availabel.
40005774:	0affffd6 	beq	400056d4 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
40005778:	e5d32055 	ldrb	r2, [r3, #85]	; 0x55
4000577c:	e59f1a50 	ldr	r1, [pc, #2640]	; 400061d4 <ControlHandle+0xf98>
40005780:	e5d33056 	ldrb	r3, [r3, #86]	; 0x56
40005784:	e3a00004 	mov	r0, #4
40005788:	eb0036d8 	bl	400132f0 <CyU3PDebugPrint>
4000578c:	eaffffd0 	b	400056d4 <ControlHandle+0x498>
						 sendData = glEp0Buffer[0];
						 sendData1 = glEp0Buffer[1];
			 	 		 break;
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
40005790:	e5d6342d 	ldrb	r3, [r6, #1069]	; 0x42d
					 if(CamMode == 1){//720p
						if(sendData >= 3){
40005794:	e3530002 	cmp	r3, #2
40005798:	92833004 	addls	r3, r3, #4
4000579c:	920340ff 	andls	r4, r3, #255	; 0xff
400057a0:	8a000274 	bhi	40006178 <ControlHandle+0xf3c>
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
400057a4:	e59f3a18 	ldr	r3, [pc, #2584]	; 400061c4 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
400057a8:	e3a01000 	mov	r1, #0
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
400057ac:	e5c34058 	strb	r4, [r3, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057b0:	e5c31059 	strb	r1, [r3, #89]	; 0x59
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
400057b4:	e3a060ff 	mov	r6, #255	; 0xff
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
					 }
					 glEp0Buffer[0] = Data1;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
400057b8:	eaffffc5 	b	400056d4 <ControlHandle+0x498>
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057bc:	e5d643e5 	ldrb	r4, [r6, #997]	; 0x3e5
400057c0:	e59fc9fc 	ldr	ip, [pc, #2556]	; 400061c4 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057c4:	e5d663e6 	ldrb	r6, [r6, #998]	; 0x3e6
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
					 glEp0Buffer[1] = 0;
400057c8:	e3a0e000 	mov	lr, #0
			 		 {
			 			CyU3PDebugPrint (4, "The I2C current data is not available. try again. %d %d\r\n", I2CCMDArry[9], I2CCMDArry[10]);
			 		 }
			 		 break;
				 case ExtAexModCtlID9:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//exposure mode
400057cc:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
400057d0:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = CtrlParArry[CtrlID][14];//AGC
400057d4:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400057d8:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
400057dc:	e59f19f4 	ldr	r1, [pc, #2548]	; 400061d8 <ControlHandle+0xf9c>
400057e0:	e1a02004 	mov	r2, r4
400057e4:	e1a0300e 	mov	r3, lr
400057e8:	e3a00004 	mov	r0, #4
400057ec:	e88d4040 	stm	sp, {r6, lr}
400057f0:	eb0036be 	bl	400132f0 <CyU3PDebugPrint>
					 break;
400057f4:	eaffffb6 	b	400056d4 <ControlHandle+0x498>
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
400057f8:	e5d64205 	ldrb	r4, [r6, #517]	; 0x205
400057fc:	e59f79c0 	ldr	r7, [pc, #2496]	; 400061c4 <ControlHandle+0xf88>
					 glEp0Buffer[1] = 0;
40005800:	e3a06000 	mov	r6, #0
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
40005804:	e2244080 	eor	r4, r4, #128	; 0x80
					 glEp0Buffer[1] = 0;
40005808:	e5c76059 	strb	r6, [r7, #89]	; 0x59
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
4000580c:	e5c74058 	strb	r4, [r7, #88]	; 0x58
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
40005810:	e3a060ff 	mov	r6, #255	; 0xff
				 case HueCtlID5:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(HuectrlRegRed, devAdd);
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
40005814:	eaffffae 	b	400056d4 <ControlHandle+0x498>
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005818:	e5d601a6 	ldrb	r0, [r6, #422]	; 0x1a6
					 sendData1 = glEp0Buffer[2];
					 CyU3PDebugPrint (4, "ExpM&AGC sent to host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
					 break;

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
4000581c:	e5d621a5 	ldrb	r2, [r6, #421]	; 0x1a5
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
40005820:	e3100002 	tst	r0, #2
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005824:	01a02122 	lsreq	r2, r2, #2
40005828:	01e02c82 	mvneq	r2, r2, lsl #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
4000582c:	11a00300 	lslne	r0, r0, #6
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005830:	01e02ca2 	mvneq	r2, r2, lsr #25

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
40005834:	12004040 	andne	r4, r0, #64	; 0x40
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005838:	01820300 	orreq	r0, r2, r0, lsl #6

			 	 case BrgtCtlID1:
					 Data0 = CtrlParArry[CtrlID][13];  //SensorGetControl(RegAdd0, devAdd); //SensorGetBLCMode();
					 Data1 = CtrlParArry[CtrlID][14];  //SensorGetControl(RegAdd1, devAdd);
					 if (Data1&0x2){ //check the sign bit (bit1)
						 Data1 = ((Data1<<6)&0x40)| (Data0 >> 2);//clear MSB
4000583c:	11844122 	orrne	r4, r4, r2, lsr #2
					 }else{
						 Data1 = ((Data1<<6)|0x80)| (Data0 >> 2);//set MSB
40005840:	020040ff 	andeq	r4, r0, #255	; 0xff
40005844:	eaffffd6 	b	400057a4 <ControlHandle+0x568>
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005848:	e0843084 	add	r3, r4, r4, lsl #1
4000584c:	e0861183 	add	r1, r6, r3, lsl #3
40005850:	e59f296c 	ldr	r2, [pc, #2412]	; 400061c4 <ControlHandle+0xf88>
40005854:	e5d1418d 	ldrb	r4, [r1, #397]	; 0x18d
					 glEp0Buffer[1] = 0;
40005858:	e3a00000 	mov	r0, #0
		RegAdd0 = CtrlParArry[CtrlID][0];
		RegAdd1 = CtrlParArry[CtrlID][1];
		devAdd = CtrlParArry[CtrlID][15];
		Len = CtrlParArry[CtrlID][2];
    }
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
4000585c:	e3a060ff 	mov	r6, #255	; 0xff
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
				 case SaturCtlID6:
				 default:
					 glEp0Buffer[0] = CtrlParArry[CtrlID][13];//SensorGetControl(RegAdd0, devAdd);
40005860:	e5c24058 	strb	r4, [r2, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005864:	e5c20059 	strb	r0, [r2, #89]	; 0x59
					 sendData = glEp0Buffer[0];
					 break;
40005868:	eaffff99 	b	400056d4 <ControlHandle+0x498>
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
4000586c:	e59fc950 	ldr	ip, [pc, #2384]	; 400061c4 <ControlHandle+0xf88>
40005870:	e5d6448c 	ldrb	r4, [r6, #1164]	; 0x48c
					 glEp0Buffer[1] = 0;
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005874:	e5d6648e 	ldrb	r6, [r6, #1166]	; 0x48e
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
					 glEp0Buffer[1] = 0;
40005878:	e3a0e000 	mov	lr, #0
					 glEp0Buffer[0] = glEp0Buffer[0] + GREEN_BASE;
					 glEp0Buffer[1] = 0;
					 sendData = glEp0Buffer[0];
					 break;
				 case WBTLevCtlID11:
					 glEp0Buffer[0] = WBMenuCmpArry[0];//using for blue part
4000587c:	e5cc4058 	strb	r4, [ip, #88]	; 0x58
					 glEp0Buffer[1] = 0;
40005880:	e5cce059 	strb	lr, [ip, #89]	; 0x59
					 glEp0Buffer[2] = WBMenuCmpArry[2];//using for red part
40005884:	e5cc605a 	strb	r6, [ip, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
40005888:	e5cce05b 	strb	lr, [ip, #91]	; 0x5b
					 sendData = glEp0Buffer[0];
					 sendData1 = glEp0Buffer[2];
					 break;
4000588c:	eaffff90 	b	400056d4 <ControlHandle+0x498>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005890:	e59f4944 	ldr	r4, [pc, #2372]	; 400061dc <ControlHandle+0xfa0>
40005894:	e3e01000 	mvn	r1, #0
40005898:	e594001c 	ldr	r0, [r4, #28]
4000589c:	eb001285 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
400058a0:	e3a01026 	mov	r1, #38	; 0x26
400058a4:	e59dc014 	ldr	ip, [sp, #20]
400058a8:	e3a0e000 	mov	lr, #0
400058ac:	e1a0300a 	mov	r3, sl
400058b0:	e1a02009 	mov	r2, r9
400058b4:	e1a00004 	mov	r0, r4
400058b8:	e88d5000 	stm	sp, {ip, lr}
400058bc:	ebfff6fd 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400058c0:	e594001c 	ldr	r0, [r4, #28]
400058c4:	eb0012b0 	bl	4000a38c <_txe_mutex_put>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058c8:	e59d1014 	ldr	r1, [sp, #20]
400058cc:	e0873087 	add	r3, r7, r7, lsl #1
400058d0:	e0866183 	add	r6, r6, r3, lsl #3
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
400058d4:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058d8:	e3a00001 	mov	r0, #1
						 case Ext1BLCGridCtlID6:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set grid status
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 ExUCtrlParArry[locCtrlID][13] = Data0;
400058dc:	e5c6100d 	strb	r1, [r6, #13]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
400058e0:	e5c60010 	strb	r0, [r6, #16]
400058e4:	e1a04001 	mov	r4, r1
400058e8:	e59de018 	ldr	lr, [sp, #24]
							 break;
400058ec:	e1a0700c 	mov	r7, ip
400058f0:	eafffe74 	b	400052c8 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
						 case Ext1BLCWeightCtlID5: //register value 0x11 (need check).
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400058f4:	e59f48e0 	ldr	r4, [pc, #2272]	; 400061dc <ControlHandle+0xfa0>
400058f8:	e3e01000 	mvn	r1, #0
400058fc:	e594001c 	ldr	r0, [r4, #28]
40005900:	eb00126c 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set weight factor
40005904:	e3a01025 	mov	r1, #37	; 0x25
40005908:	eaffffe5 	b	400058a4 <ControlHandle+0x668>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000590c:	e59f48c8 	ldr	r4, [pc, #2248]	; 400061dc <ControlHandle+0xfa0>
40005910:	e3e01000 	mvn	r1, #0
40005914:	e594001c 	ldr	r0, [r4, #28]
40005918:	eb001266 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
4000591c:	e59d2014 	ldr	r2, [sp, #20]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
40005920:	e3a01024 	mov	r1, #36	; 0x24
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData, dataIdx);  //set H-size
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //set V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
#else //combination version
							 Data0 = Data0&0x7F; //mask window show flag bit.
40005924:	e202807f 	and	r8, r2, #127	; 0x7f
40005928:	e58d8018 	str	r8, [sp, #24]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						     /* end test */
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //set H/V-Pos
4000592c:	e59dc018 	ldr	ip, [sp, #24]
40005930:	e1a02009 	mov	r2, r9
40005934:	e1a0300a 	mov	r3, sl
40005938:	e1a00004 	mov	r0, r4
4000593c:	e58dc000 	str	ip, [sp]
40005940:	e3a0c000 	mov	ip, #0
40005944:	e58dc004 	str	ip, [sp, #4]
40005948:	ebfff6da 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
4000594c:	e59de01c 	ldr	lr, [sp, #28]
40005950:	e3a08001 	mov	r8, #1
40005954:	e3a01024 	mov	r1, #36	; 0x24
40005958:	e1a0200b 	mov	r2, fp
4000595c:	e1a0300a 	mov	r3, sl
40005960:	e1a00004 	mov	r0, r4
40005964:	e58de000 	str	lr, [sp]
40005968:	e58d8004 	str	r8, [sp, #4]
4000596c:	ebfff6d1 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005970:	e594001c 	ldr	r0, [r4, #28]
40005974:	eb001284 	bl	4000a38c <_txe_mutex_put>
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005978:	e087c087 	add	ip, r7, r7, lsl #1
4000597c:	e59d4018 	ldr	r4, [sp, #24]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005980:	e59d701c 	ldr	r7, [sp, #28]
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
40005984:	e086618c 	add	r6, r6, ip, lsl #3
							 ExUCtrlParArry[locCtrlID][14] = Data1;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
40005988:	e3a0c0ff 	mov	ip, #255	; 0xff
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //set H/V-size
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 getData1 = Data1;
#endif
							 ExUCtrlParArry[locCtrlID][13] = Data0;//ext_control array;
4000598c:	e5c6400d 	strb	r4, [r6, #13]
							 ExUCtrlParArry[locCtrlID][14] = Data1;
40005990:	e5c6700e 	strb	r7, [r6, #14]
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
40005994:	e1a0e007 	mov	lr, r7
40005998:	e5c68010 	strb	r8, [r6, #16]
4000599c:	e59d4014 	ldr	r4, [sp, #20]
							 break;
400059a0:	e1a0700c 	mov	r7, ip
400059a4:	eafffe47 	b	400052c8 <ControlHandle+0x8c>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
400059a8:	e3580000 	cmp	r8, #0
400059ac:	0a000018 	beq	40005a14 <ControlHandle+0x7d8>
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059b0:	e1a0e128 	lsr	lr, r8, #2
400059b4:	e35e0000 	cmp	lr, #0
400059b8:	13580003 	cmpne	r8, #3
400059bc:	83a02000 	movhi	r2, #0
400059c0:	93a02001 	movls	r2, #1
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400059c4:	e1a0310e 	lsl	r3, lr, #2
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
400059c8:	9a0001f5 	bls	400061a4 <ControlHandle+0xf68>
400059cc:	e59f180c 	ldr	r1, [pc, #2060]	; 400061e0 <ControlHandle+0xfa4>
400059d0:	e281000c 	add	r0, r1, #12
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
400059d4:	e4907004 	ldr	r7, [r0], #4
400059d8:	e2822001 	add	r2, r2, #1
400059dc:	e20220ff 	and	r2, r2, #255	; 0xff
400059e0:	e15e0002 	cmp	lr, r2
400059e4:	e4817004 	str	r7, [r1], #4
400059e8:	8afffff9 	bhi	400059d4 <ControlHandle+0x798>
400059ec:	e1580003 	cmp	r8, r3
400059f0:	0a000007 	beq	40005a14 <ControlHandle+0x7d8>
400059f4:	e59fe7c8 	ldr	lr, [pc, #1992]	; 400061c4 <ControlHandle+0xf88>
400059f8:	e08e0003 	add	r0, lr, r3
400059fc:	e5d01058 	ldrb	r1, [r0, #88]	; 0x58
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a00:	e2833001 	add	r3, r3, #1
40005a04:	e20330ff 	and	r3, r3, #255	; 0xff
40005a08:	e1580003 	cmp	r8, r3
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
40005a0c:	e5c0104c 	strb	r1, [r0, #76]	; 0x4c
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
40005a10:	8afffff7 	bhi	400059f4 <ControlHandle+0x7b8>
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a14:	ebfffda1 	bl	400050a0 <I2CCmdHandler>
							 break;
40005a18:	e3a0c0ff 	mov	ip, #255	; 0xff
							 break;
						 case ExtI2CCtlID15:
					 		 for(idx=0; idx<Len; idx++){
					 			I2CCMDArry[idx] = glEp0Buffer[idx];
					 		 }
					 		I2CCmdHandler();
40005a1c:	e59d4014 	ldr	r4, [sp, #20]
40005a20:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005a24:	e1a0700c 	mov	r7, ip
40005a28:	eafffe26 	b	400052c8 <ControlHandle+0x8c>
							 if(Data0 == 0){ //set default sensor parameters.
								 Data0 = 1;
							 }else{ //save current sensor parameters.
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a2c:	e59f77a8 	ldr	r7, [pc, #1960]	; 400061dc <ControlHandle+0xfa0>
40005a30:	e3e01000 	mvn	r1, #0
40005a34:	e597001c 	ldr	r0, [r7, #28]
40005a38:	eb00121e 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005a3c:	e59d4014 	ldr	r4, [sp, #20]
40005a40:	e3a0e000 	mov	lr, #0
40005a44:	e274c001 	rsbs	ip, r4, #1
40005a48:	33a0c000 	movcc	ip, #0
40005a4c:	e3a0101e 	mov	r1, #30
40005a50:	e1a02009 	mov	r2, r9
40005a54:	e1a0300a 	mov	r3, sl
40005a58:	e1a00007 	mov	r0, r7
40005a5c:	e88d5000 	stm	sp, {ip, lr}
40005a60:	ebfff694 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005a64:	e597001c 	ldr	r0, [r7, #28]
40005a68:	eb001247 	bl	4000a38c <_txe_mutex_put>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005a6c:	e3a0c0ff 	mov	ip, #255	; 0xff
								 Data0 = 0;
							 }
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][16] = CyTrue;
40005a70:	e3a00001 	mov	r0, #1
40005a74:	e5c60460 	strb	r0, [r6, #1120]	; 0x460
40005a78:	e59d4014 	ldr	r4, [sp, #20]
40005a7c:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005a80:	e1a0700c 	mov	r7, ip
40005a84:	eafffe0f 	b	400052c8 <ControlHandle+0x8c>
						 case WBTLevCtlID11:
							 Data0 = glEp0Buffer[0]; //blue
							 Data1 = glEp0Buffer[2]; //red
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005a88:	e59f474c 	ldr	r4, [pc, #1868]	; 400061dc <ControlHandle+0xfa0>
40005a8c:	e3e01000 	mvn	r1, #0
40005a90:	e594001c 	ldr	r0, [r4, #28]
40005a94:	eb001207 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005a98:	e59dc014 	ldr	ip, [sp, #20]
40005a9c:	e3a0100b 	mov	r1, #11
40005aa0:	e1a02009 	mov	r2, r9
40005aa4:	e1a0300a 	mov	r3, sl
40005aa8:	e1a00004 	mov	r0, r4
40005aac:	e58dc000 	str	ip, [sp]
40005ab0:	e3a0c000 	mov	ip, #0
40005ab4:	e58dc004 	str	ip, [sp, #4]
40005ab8:	ebfff67e 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
40005abc:	e59de018 	ldr	lr, [sp, #24]
40005ac0:	e3a07001 	mov	r7, #1
40005ac4:	e3a0100b 	mov	r1, #11
40005ac8:	e1a0200b 	mov	r2, fp
40005acc:	e1a0300a 	mov	r3, sl
40005ad0:	e1a00004 	mov	r0, r4
40005ad4:	e58de000 	str	lr, [sp]
40005ad8:	e58d7004 	str	r7, [sp, #4]
40005adc:	ebfff675 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ae0:	e594001c 	ldr	r0, [r4, #28]
40005ae4:	eb001228 	bl	4000a38c <_txe_mutex_put>

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005ae8:	e59d1014 	ldr	r1, [sp, #20]
							 WBMenuCmpArry[2] = Data1;//using for red part
40005aec:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005af0:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
40005af4:	e5c67298 	strb	r7, [r6, #664]	; 0x298
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 WBMenuCmpArry[0] = Data0;//using for blue part
40005af8:	e5c6148c 	strb	r1, [r6, #1164]	; 0x48c
							 WBMenuCmpArry[2] = Data1;//using for red part
40005afc:	e5c6248e 	strb	r2, [r6, #1166]	; 0x48e
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b00:	e1a04001 	mov	r4, r1
40005b04:	e1a0e002 	mov	lr, r2
							 break;
40005b08:	e1a0700c 	mov	r7, ip
40005b0c:	eafffded 	b	400052c8 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case SaturCtlID6:
							 dataIdx = 0;
							 Data1 = Data0 = glEp0Buffer[0]; //red and blue set the same value.
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b10:	e59f46c4 	ldr	r4, [pc, #1732]	; 400061dc <ControlHandle+0xfa0>
40005b14:	e3e01000 	mvn	r1, #0
40005b18:	e594001c 	ldr	r0, [r4, #28]
40005b1c:	eb0011e5 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005b20:	e59dc014 	ldr	ip, [sp, #20]
40005b24:	e3a01006 	mov	r1, #6
40005b28:	e1a02009 	mov	r2, r9
40005b2c:	e1a0300a 	mov	r3, sl
40005b30:	e1a00004 	mov	r0, r4
40005b34:	e58dc000 	str	ip, [sp]
40005b38:	e3a0c000 	mov	ip, #0
40005b3c:	e58dc004 	str	ip, [sp, #4]
40005b40:	ebfff65c 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
40005b44:	e59de014 	ldr	lr, [sp, #20]
40005b48:	e3a07001 	mov	r7, #1
40005b4c:	e3a01006 	mov	r1, #6
40005b50:	e1a0200b 	mov	r2, fp
40005b54:	e1a0300a 	mov	r3, sl
40005b58:	e1a00004 	mov	r0, r4
40005b5c:	e58de000 	str	lr, [sp]
40005b60:	e58d7004 	str	r7, [sp, #4]
40005b64:	ebfff653 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005b68:	e594001c 	ldr	r0, [r4, #28]
40005b6c:	eb001206 	bl	4000a38c <_txe_mutex_put>
							 CtrlParArry[CtrlID][13] = Data0;
40005b70:	e59d4014 	ldr	r4, [sp, #20]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005b74:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b78:	e5c67220 	strb	r7, [r6, #544]	; 0x220
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CtrlParArry[CtrlID][13] = Data0;
40005b7c:	e5c6421d 	strb	r4, [r6, #541]	; 0x21d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005b80:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005b84:	e1a0700c 	mov	r7, ip
40005b88:	eafffdce 	b	400052c8 <ControlHandle+0x8c>

							 break;
						 case HueCtlID5:  //mapping to hue control registers
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005b8c:	e59f4648 	ldr	r4, [pc, #1608]	; 400061dc <ControlHandle+0xfa0>
40005b90:	e3e01000 	mvn	r1, #0
40005b94:	e594001c 	ldr	r0, [r4, #28]
40005b98:	eb0011c6 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, (Data0-GREEN_BASE), dataIdx);  //First
40005b9c:	e59d3014 	ldr	r3, [sp, #20]
40005ba0:	e3a0c000 	mov	ip, #0
40005ba4:	e2430080 	sub	r0, r3, #128	; 0x80
40005ba8:	e20070ff 	and	r7, r0, #255	; 0xff
40005bac:	e3a01005 	mov	r1, #5
40005bb0:	e1a02009 	mov	r2, r9
40005bb4:	e1a0300a 	mov	r3, sl
40005bb8:	e1a00004 	mov	r0, r4
40005bbc:	e88d1080 	stm	sp, {r7, ip}
40005bc0:	ebfff63c 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data0-MAGENTA_BASE), dataIdx);  //Second
40005bc4:	e59d1014 	ldr	r1, [sp, #20]
40005bc8:	e3a020dc 	mov	r2, #220	; 0xdc
40005bcc:	e2417076 	sub	r7, r1, #118	; 0x76
40005bd0:	e207c0ff 	and	ip, r7, #255	; 0xff
40005bd4:	e3a01005 	mov	r1, #5
40005bd8:	e3a07001 	mov	r7, #1
40005bdc:	e1a0300a 	mov	r3, sl
40005be0:	e1a00004 	mov	r0, r4
40005be4:	e58dc000 	str	ip, [sp]
40005be8:	e58d7004 	str	r7, [sp, #4]
40005bec:	ebfff631 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data0-YELLOW_BASE), dataIdx);  //Third
40005bf0:	e59d2014 	ldr	r2, [sp, #20]
40005bf4:	e3a01005 	mov	r1, #5
40005bf8:	e282307e 	add	r3, r2, #126	; 0x7e
40005bfc:	e203c0ff 	and	ip, r3, #255	; 0xff
40005c00:	e3a020de 	mov	r2, #222	; 0xde
40005c04:	e1a0300a 	mov	r3, sl
40005c08:	e1a00004 	mov	r0, r4
40005c0c:	e58dc000 	str	ip, [sp]
40005c10:	e3a0c002 	mov	ip, #2
40005c14:	e58dc004 	str	ip, [sp, #4]
40005c18:	ebfff626 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data0-CYAN_BASE), dataIdx);  //Fourth
40005c1c:	e59d0014 	ldr	r0, [sp, #20]
40005c20:	e3a0e003 	mov	lr, #3
40005c24:	e2801072 	add	r1, r0, #114	; 0x72
40005c28:	e201c0ff 	and	ip, r1, #255	; 0xff
40005c2c:	e3a020e0 	mov	r2, #224	; 0xe0
40005c30:	e3a01005 	mov	r1, #5
40005c34:	e1a0300a 	mov	r3, sl
40005c38:	e1a00004 	mov	r0, r4
40005c3c:	e88d5000 	stm	sp, {ip, lr}
40005c40:	ebfff61c 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
40005c44:	e59d2014 	ldr	r2, [sp, #20]
40005c48:	e3a01005 	mov	r1, #5
40005c4c:	e242306f 	sub	r3, r2, #111	; 0x6f
40005c50:	e203c0ff 	and	ip, r3, #255	; 0xff
40005c54:	e3a020dd 	mov	r2, #221	; 0xdd
40005c58:	e1a0300a 	mov	r3, sl
40005c5c:	e1a00004 	mov	r0, r4
40005c60:	e58dc000 	str	ip, [sp]
40005c64:	e3a0c004 	mov	ip, #4
40005c68:	e58dc004 	str	ip, [sp, #4]
40005c6c:	ebfff611 	bl	400034b8 <cmdSet>
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
40005c70:	e59f054c 	ldr	r0, [pc, #1356]	; 400061c4 <ControlHandle+0xf88>
40005c74:	e3a0e005 	mov	lr, #5
40005c78:	e5d01058 	ldrb	r1, [r0, #88]	; 0x58
40005c7c:	e1a0300a 	mov	r3, sl
40005c80:	e281207f 	add	r2, r1, #127	; 0x7f
40005c84:	e202c0ff 	and	ip, r2, #255	; 0xff
40005c88:	e1a0100e 	mov	r1, lr
40005c8c:	e1a0200b 	mov	r2, fp
40005c90:	e1a00004 	mov	r0, r4
40005c94:	e88d5000 	stm	sp, {ip, lr}
40005c98:	ebfff606 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005c9c:	e594001c 	ldr	r0, [r4, #28]
40005ca0:	eb0011b9 	bl	4000a38c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005ca4:	e59f3518 	ldr	r3, [pc, #1304]	; 400061c4 <ControlHandle+0xf88>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005ca8:	e3a0c0ff 	mov	ip, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005cac:	e5d30058 	ldrb	r0, [r3, #88]	; 0x58
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cb0:	e5c67208 	strb	r7, [r6, #520]	; 0x208
							 cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data0-RED_BASE), dataIdx);  //Fifth
							 dataIdx++;
							 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, (glEp0Buffer[0]-BLUE_BASE), dataIdx);   //Sixth
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = glEp0Buffer[0] - GREEN_BASE;
40005cb4:	e2401080 	sub	r1, r0, #128	; 0x80
40005cb8:	e5c61205 	strb	r1, [r6, #517]	; 0x205
							 CtrlParArry[CtrlID][16] = CyTrue;
40005cbc:	e59d4014 	ldr	r4, [sp, #20]
40005cc0:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005cc4:	e1a0700c 	mov	r7, ip
40005cc8:	eafffd7e 	b	400052c8 <ControlHandle+0x8c>
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ccc:	e59f4508 	ldr	r4, [pc, #1288]	; 400061dc <ControlHandle+0xfa0>
							 WBMenuCmpArry[2] = Data1;//using for red part
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
						 case MFreqCtlID4:
							 dataIdx = 0;
							 Data0 = Data0 - 1;
40005cd0:	e2433001 	sub	r3, r3, #1
40005cd4:	e20370ff 	and	r7, r3, #255	; 0xff
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005cd8:	e3570002 	cmp	r7, #2

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005cdc:	e3e01000 	mvn	r1, #0
40005ce0:	e594001c 	ldr	r0, [r4, #28]
							 dataIdx = 0;
							 Data0 = Data0 - 1;
							 if(Data0 < 0)  //for specific check. if it's minor value, set to 0.
								 Data0 = 0;
							 else if(Data0 >2)
								 Data0 = 1;
40005ce4:	83a07001 	movhi	r7, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005ce8:	eb001172 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005cec:	e3a0c000 	mov	ip, #0
40005cf0:	e3a01004 	mov	r1, #4
40005cf4:	e1a02009 	mov	r2, r9
40005cf8:	e1a0300a 	mov	r3, sl
40005cfc:	e1a00004 	mov	r0, r4
40005d00:	e88d1080 	stm	sp, {r7, ip}
40005d04:	ebfff5eb 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005d08:	e594001c 	ldr	r0, [r4, #28]
40005d0c:	eb00119e 	bl	4000a38c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005d10:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d14:	e3a00001 	mov	r0, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005d18:	e5c671ed 	strb	r7, [r6, #493]	; 0x1ed
							 CtrlParArry[CtrlID][16] = CyTrue;
40005d1c:	e5c601f0 	strb	r0, [r6, #496]	; 0x1f0
40005d20:	e59d4014 	ldr	r4, [sp, #20]
40005d24:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005d28:	e1a0700c 	mov	r7, ip
40005d2c:	eafffd65 	b	400052c8 <ControlHandle+0x8c>
							 ExUCtrlParArry[locCtrlID][13] = Data0;
							 ExUCtrlParArry[locCtrlID][16] = CyTrue;
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005d30:	e59f74a4 	ldr	r7, [pc, #1188]	; 400061dc <ControlHandle+0xfa0>
40005d34:	e3e01000 	mvn	r1, #0
40005d38:	e597001c 	ldr	r0, [r7, #28]
40005d3c:	eb00115d 	bl	4000a2b8 <_txe_mutex_get>
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005d40:	e59dc014 	ldr	ip, [sp, #20]
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005d44:	e5d641a6 	ldrb	r4, [r6, #422]	; 0x1a6
							 break;
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
40005d48:	e31c0080 	tst	ip, #128	; 0x80
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d4c:	01a0232c 	lsreq	r2, ip, #6
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005d50:	11a02c8c 	lslne	r2, ip, #25
40005d54:	13c44003 	bicne	r4, r4, #3
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d58:	03c44003 	biceq	r4, r4, #3
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005d5c:	e3a0c000 	mov	ip, #0
40005d60:	e58dc004 	str	ip, [sp, #4]
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d64:	03822002 	orreq	r2, r2, #2
				  	  	 case BrgtCtlID1:
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							  /****** double check the register0 Data1 ******/
							  if(Data0&0x80){
								  Data1 = ((Data0 >> 6)&0x01)|(CtrlParArry[CtrlID][14]&0xfc);
40005d68:	11844fa2 	orrne	r4, r4, r2, lsr #31
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
40005d6c:	01824004 	orreq	r4, r2, r4
							  }
							 Data1 |= ~0x03;
40005d70:	e1e03f04 	mvn	r3, r4, lsl #30
40005d74:	e1e00f23 	mvn	r0, r3, lsr #30
							 Data1 &= 0xC7;
40005d78:	e20010c7 	and	r1, r0, #199	; 0xc7
40005d7c:	e58d101c 	str	r1, [sp, #28]
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005d80:	e59d801c 	ldr	r8, [sp, #28]
40005d84:	e3a01001 	mov	r1, #1
40005d88:	e1a0200b 	mov	r2, fp
40005d8c:	e1a0300a 	mov	r3, sl
40005d90:	e59f0444 	ldr	r0, [pc, #1092]	; 400061dc <ControlHandle+0xfa0>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005d94:	e1a04001 	mov	r4, r1
							  }else{
								  Data1 = ((Data0 >> 6)|0x02)|(CtrlParArry[CtrlID][14]&0xfc);
							  }
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
40005d98:	e58d8000 	str	r8, [sp]
40005d9c:	ebfff5c5 	bl	400034b8 <cmdSet>
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005da0:	e59d2014 	ldr	r2, [sp, #20]
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005da4:	e1a01004 	mov	r1, r4
							 Data1 |= ~0x03;
							 Data1 &= 0xC7;
						  	 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data1, dataIdx);  //First
						  	 dataIdx++;

							 Data0 = (Data0 << 2);
40005da8:	e1a08102 	lsl	r8, r2, #2
40005dac:	e20880ff 	and	r8, r8, #255	; 0xff
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
40005db0:	e1a02009 	mov	r2, r9
40005db4:	e1a0300a 	mov	r3, sl
40005db8:	e59f041c 	ldr	r0, [pc, #1052]	; 400061dc <ControlHandle+0xfa0>
40005dbc:	e58d4004 	str	r4, [sp, #4]
40005dc0:	e58d8000 	str	r8, [sp]
40005dc4:	ebfff5bb 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005dc8:	e597001c 	ldr	r0, [r7, #28]
40005dcc:	eb00116e 	bl	4000a38c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005dd0:	e59d701c 	ldr	r7, [sp, #28]
							 CtrlParArry[CtrlID][16] = CyTrue;

							 break;
40005dd4:	e3a0c0ff 	mov	ip, #255	; 0xff
							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][14] = Data1;
40005dd8:	e5c671a6 	strb	r7, [r6, #422]	; 0x1a6
							 CtrlParArry[CtrlID][16] = CyTrue;
40005ddc:	e5c641a8 	strb	r4, [r6, #424]	; 0x1a8

							 Data0 = (Data0 << 2);
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);   //Second
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005de0:	e5c681a5 	strb	r8, [r6, #421]	; 0x1a5
							 CtrlParArry[CtrlID][14] = Data1;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005de4:	e59d4014 	ldr	r4, [sp, #20]
40005de8:	e59de018 	ldr	lr, [sp, #24]

							 break;
40005dec:	e1a0700c 	mov	r7, ip
40005df0:	eafffd34 	b	400052c8 <ControlHandle+0x8c>
40005df4:	e1a0c003 	mov	ip, r3
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
40005df8:	e3530003 	cmp	r3, #3

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40005dfc:	e5c6c18d 	strb	ip, [r6, #397]	; 0x18d
40005e00:	e59f33b0 	ldr	r3, [pc, #944]	; 400061b8 <ControlHandle+0xf7c>
							 if(Data0 == 3)
40005e04:	0a0000d6 	beq	40006164 <ControlHandle+0xf28>
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e08:	e59fe3b4 	ldr	lr, [pc, #948]	; 400061c4 <ControlHandle+0xf88>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 2){
40005e0c:	e35c0001 	cmp	ip, #1
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e10:	e3a00000 	mov	r0, #0
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e14:	e3a01001 	mov	r1, #1
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
							 else
								 WDRflag = CyFalse;
40005e18:	e58e0078 	str	r0, [lr, #120]	; 0x78
							 CtrlParArry[CtrlID][16] = CyTrue;
40005e1c:	e5c31190 	strb	r1, [r3, #400]	; 0x190
							 if(CamMode == 1) //mode 720p
							 {
								 if(Data0 < 2){
40005e20:	91a0600c 	movls	r6, ip
40005e24:	91a0700c 	movls	r7, ip
40005e28:	9a000006 	bls	40005e48 <ControlHandle+0xc0c>
					 				 ;//Data0 += 4;
					 			 }else{
									CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, getData);
40005e2c:	e3a00004 	mov	r0, #4
40005e30:	e59f13ac 	ldr	r1, [pc, #940]	; 400061e4 <ControlHandle+0xfa8>
40005e34:	e3a02001 	mov	r2, #1
40005e38:	e59d3014 	ldr	r3, [sp, #20]
40005e3c:	eb00352b 	bl	400132f0 <CyU3PDebugPrint>
40005e40:	e3a06000 	mov	r6, #0
									Data0 = 0; //set to default.
40005e44:	e1a07006 	mov	r7, r6
					 			 }
					 		 }
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005e48:	e59f438c 	ldr	r4, [pc, #908]	; 400061dc <ControlHandle+0xfa0>
40005e4c:	e3e01000 	mvn	r1, #0
40005e50:	e594001c 	ldr	r0, [r4, #28]
40005e54:	eb001117 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005e58:	e3a0c000 	mov	ip, #0
40005e5c:	e1a0100c 	mov	r1, ip
40005e60:	e1a02009 	mov	r2, r9
40005e64:	e1a0300a 	mov	r3, sl
40005e68:	e1a00004 	mov	r0, r4
40005e6c:	e88d1080 	stm	sp, {r7, ip}
40005e70:	ebfff590 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005e74:	e594001c 	ldr	r0, [r4, #28]
40005e78:	eb001143 	bl	4000a38c <_txe_mutex_put>
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005e7c:	e59fc340 	ldr	ip, [pc, #832]	; 400061c4 <ControlHandle+0xf88>
40005e80:	e59f1360 	ldr	r1, [pc, #864]	; 400061e8 <ControlHandle+0xfac>
40005e84:	e5dc405a 	ldrb	r4, [ip, #90]	; 0x5a
40005e88:	e5dc705b 	ldrb	r7, [ip, #91]	; 0x5b
40005e8c:	e3a00004 	mov	r0, #4
40005e90:	e1a02006 	mov	r2, r6
40005e94:	e59c3078 	ldr	r3, [ip, #120]	; 0x78
40005e98:	e88d0090 	stm	sp, {r4, r7}
40005e9c:	eb003513 	bl	400132f0 <CyU3PDebugPrint>

					 		 break;
40005ea0:	e3a0c0ff 	mov	ip, #255	; 0xff
							 //CtrlParArry[CamModeIndex][13] = Data0+4;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "BLC set. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005ea4:	e59d4014 	ldr	r4, [sp, #20]
40005ea8:	e59de018 	ldr	lr, [sp, #24]

					 		 break;
40005eac:	e1a0700c 	mov	r7, ip
40005eb0:	eafffd04 	b	400052c8 <ControlHandle+0x8c>
						 default:
							 dataIdx = 0;

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005eb4:	e59f7320 	ldr	r7, [pc, #800]	; 400061dc <ControlHandle+0xfa0>
40005eb8:	e3e01000 	mvn	r1, #0
40005ebc:	e597001c 	ldr	r0, [r7, #28]
40005ec0:	eb0010fc 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005ec4:	e59dc014 	ldr	ip, [sp, #20]
40005ec8:	e1a01004 	mov	r1, r4
40005ecc:	e1a02009 	mov	r2, r9
40005ed0:	e1a0300a 	mov	r3, sl
40005ed4:	e1a00007 	mov	r0, r7
40005ed8:	e58dc000 	str	ip, [sp]
40005edc:	e3a0c000 	mov	ip, #0
40005ee0:	e58dc004 	str	ip, [sp, #4]
40005ee4:	ebfff573 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005ee8:	e597001c 	ldr	r0, [r7, #28]
40005eec:	eb001126 	bl	4000a38c <_txe_mutex_put>

							 CtrlParArry[CtrlID][13] = Data0;
40005ef0:	e59d2014 	ldr	r2, [sp, #20]
40005ef4:	e0841084 	add	r1, r4, r4, lsl #1
40005ef8:	e0866181 	add	r6, r6, r1, lsl #3
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
40005efc:	e3a0c0ff 	mov	ip, #255	; 0xff
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f00:	e3a03001 	mov	r3, #1

							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex

							 CtrlParArry[CtrlID][13] = Data0;
40005f04:	e5c6218d 	strb	r2, [r6, #397]	; 0x18d
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f08:	e5c63190 	strb	r3, [r6, #400]	; 0x190
40005f0c:	e1a04002 	mov	r4, r2
40005f10:	e59de018 	ldr	lr, [sp, #24]
							 break;
40005f14:	e1a0700c 	mov	r7, ip
40005f18:	eafffcea 	b	400052c8 <ControlHandle+0x8c>
				  getData = glEp0Buffer[0];
				  getData1 = glEp0Buffer[2];
#ifdef USB_DEBUG_PRINT
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
40005f1c:	e3a0c0ff 	mov	ip, #255	; 0xff
40005f20:	e1a04003 	mov	r4, r3
40005f24:	e1a0700c 	mov	r7, ip
40005f28:	eafffce6 	b	400052c8 <ControlHandle+0x8c>
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f2c:	e59f72a8 	ldr	r7, [pc, #680]	; 400061dc <ControlHandle+0xfa0>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
40005f30:	e5c633fd 	strb	r3, [r6, #1021]	; 0x3fd
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f34:	e3a03001 	mov	r3, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f38:	e597001c 	ldr	r0, [r7, #28]
40005f3c:	e3e01000 	mvn	r1, #0
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
							 break;
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
40005f40:	e5c63400 	strb	r3, [r6, #1024]	; 0x400
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005f44:	eb0010db 	bl	4000a2b8 <_txe_mutex_get>
							 if(WDRflag)
40005f48:	e59f3274 	ldr	r3, [pc, #628]	; 400061c4 <ControlHandle+0xf88>
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f4c:	e3a0101a 	mov	r1, #26
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005f50:	e5934078 	ldr	r4, [r3, #120]	; 0x78
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f54:	e1a00007 	mov	r0, r7
						 case ExtExRefCtlID10:
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
40005f58:	e3540000 	cmp	r4, #0
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f5c:	159d4014 	ldrne	r4, [sp, #20]
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f60:	059de014 	ldreq	lr, [sp, #20]
							 dataIdx = 0;
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 if(WDRflag)
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, Data0, dataIdx);  //First
40005f64:	158d4000 	strne	r4, [sp]
40005f68:	11a0200b 	movne	r2, fp
40005f6c:	13a04000 	movne	r4, #0
40005f70:	11a0300a 	movne	r3, sl
							 else
								 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
40005f74:	01a02009 	moveq	r2, r9
40005f78:	01a0300a 	moveq	r3, sl
40005f7c:	e58d4004 	str	r4, [sp, #4]
40005f80:	058de000 	streq	lr, [sp]
40005f84:	ebfff54b 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40005f88:	e597001c 	ldr	r0, [r7, #28]
40005f8c:	eb0010fe 	bl	4000a38c <_txe_mutex_put>
							 CyU3PDebugPrint (4, "Exe level. %d %d; %d %d\r\n", Data0, WDRflag, glEp0Buffer[2], glEp0Buffer[3]);
40005f90:	e59f222c 	ldr	r2, [pc, #556]	; 400061c4 <ControlHandle+0xf88>
40005f94:	e59d4014 	ldr	r4, [sp, #20]
40005f98:	e5d2c05a 	ldrb	ip, [r2, #90]	; 0x5a
40005f9c:	e5d2e05b 	ldrb	lr, [r2, #91]	; 0x5b
40005fa0:	e5923078 	ldr	r3, [r2, #120]	; 0x78
40005fa4:	e3a00004 	mov	r0, #4
40005fa8:	e59f123c 	ldr	r1, [pc, #572]	; 400061ec <ControlHandle+0xfb0>
40005fac:	e1a02004 	mov	r2, r4
40005fb0:	e88d5000 	stm	sp, {ip, lr}
40005fb4:	eb0034cd 	bl	400132f0 <CyU3PDebugPrint>
40005fb8:	e3a0c0ff 	mov	ip, #255	; 0xff
40005fbc:	e59de018 	ldr	lr, [sp, #24]
40005fc0:	e1a0700c 	mov	r7, ip
40005fc4:	eafffcbf 	b	400052c8 <ControlHandle+0x8c>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005fc8:	e59d2018 	ldr	r2, [sp, #24]
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fcc:	e59f4208 	ldr	r4, [pc, #520]	; 400061dc <ControlHandle+0xfa0>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fd0:	e3a07001 	mov	r7, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fd4:	e3e01000 	mvn	r1, #0
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
40005fd8:	e5c633e5 	strb	r3, [r6, #997]	; 0x3e5
							 CtrlParArry[CtrlID][14] = getData1;//AGC
40005fdc:	e5c623e6 	strb	r2, [r6, #998]	; 0x3e6
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fe0:	e594001c 	ldr	r0, [r4, #28]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
						 case ExtAexModCtlID9://exposure&AGC
							 CtrlParArry[CtrlID][13] = getData;//exposure mode
							 CtrlParArry[CtrlID][14] = getData1;//AGC
							 CtrlParArry[CtrlID][16] = CyTrue;
40005fe4:	e5c673e8 	strb	r7, [r6, #1000]	; 0x3e8
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40005fe8:	eb0010b2 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, getData, dataIdx);  //Exposure
40005fec:	e59dc014 	ldr	ip, [sp, #20]
40005ff0:	e3a01019 	mov	r1, #25
40005ff4:	e58dc000 	str	ip, [sp]
40005ff8:	e1a00004 	mov	r0, r4
40005ffc:	e3a0c000 	mov	ip, #0
40006000:	e1a02009 	mov	r2, r9
40006004:	e1a0300a 	mov	r3, sl
40006008:	e58dc004 	str	ip, [sp, #4]
4000600c:	ebfff529 	bl	400034b8 <cmdSet>
							 if(getData != 0){
40006010:	e59d1014 	ldr	r1, [sp, #20]
40006014:	e3510000 	cmp	r1, #0
40006018:	0a000007 	beq	4000603c <ControlHandle+0xe00>
								 dataIdx++;
								 cmdSet(cmdQuptr, CtrlID, RegAdd1, devAdd, getData1, dataIdx);  //AGC
4000601c:	e59de018 	ldr	lr, [sp, #24]
40006020:	e1a00004 	mov	r0, r4
40006024:	e3a01019 	mov	r1, #25
40006028:	e1a0200b 	mov	r2, fp
4000602c:	e1a0300a 	mov	r3, sl
40006030:	e58de000 	str	lr, [sp]
40006034:	e58d7004 	str	r7, [sp, #4]
40006038:	ebfff51e 	bl	400034b8 <cmdSet>
							 }
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000603c:	e594001c 	ldr	r0, [r4, #28]
40006040:	eb0010d1 	bl	4000a38c <_txe_mutex_put>
							 CyU3PDebugPrint (4, "ExpM&AGC gotten from host. %d %d; %d %d\r\n", glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3]);
40006044:	e59f1178 	ldr	r1, [pc, #376]	; 400061c4 <ControlHandle+0xf88>
40006048:	e59f0174 	ldr	r0, [pc, #372]	; 400061c4 <ControlHandle+0xf88>
4000604c:	e5d1405a 	ldrb	r4, [r1, #90]	; 0x5a
40006050:	e5d0705b 	ldrb	r7, [r0, #91]	; 0x5b
40006054:	e5d12058 	ldrb	r2, [r1, #88]	; 0x58
40006058:	e5d13059 	ldrb	r3, [r1, #89]	; 0x59
4000605c:	e3a00004 	mov	r0, #4
40006060:	e59f1188 	ldr	r1, [pc, #392]	; 400061f0 <ControlHandle+0xfb4>
40006064:	e88d0090 	stm	sp, {r4, r7}
40006068:	eaffff8b 	b	40005e9c <ControlHandle+0xc60>
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 0){//set exposure mode auto
4000606c:	e2530000 	subs	r0, r3, #0
				  CyU3PDebugPrint (4, "The setup sensor value (0) %d 0x%x 0x%x 0x%x\r\n", CtrlID, readCount, glEp0Buffer[0], glEp0Buffer[1]); // additional debug
#endif
				  switch(CtrlID)
					 {
						 case ExtShutCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
40006070:	e5c6030d 	strb	r0, [r6, #781]	; 0x30d
40006074:	e59f313c 	ldr	r3, [pc, #316]	; 400061b8 <ControlHandle+0xf7c>
							 if(Data0 == 0){//set exposure mode auto
40006078:	1a000024 	bne	40006110 <ControlHandle+0xed4>
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 8) && (CTCtrlParArry[AutoExMCtlID1][13] != 2)){
4000607c:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
40006080:	e3520002 	cmp	r2, #2
40006084:	13520008 	cmpne	r2, #8
40006088:	0a000003 	beq	4000609c <ControlHandle+0xe60>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 1) {
4000608c:	e3520001 	cmp	r2, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 8; //aperture priority
40006090:	02822007 	addeq	r2, r2, #7
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
40006094:	13a02002 	movne	r2, #2
40006098:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000609c:	e59f4138 	ldr	r4, [pc, #312]	; 400061dc <ControlHandle+0xfa0>
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
400060a0:	e3a03001 	mov	r3, #1
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060a4:	e3e01000 	mvn	r1, #0
400060a8:	e594001c 	ldr	r0, [r4, #28]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
								 }
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
400060ac:	e5c63310 	strb	r3, [r6, #784]	; 0x310
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400060b0:	eb001080 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
400060b4:	e59dc014 	ldr	ip, [sp, #20]
400060b8:	e3a0e000 	mov	lr, #0
400060bc:	e3a01010 	mov	r1, #16
400060c0:	e1a02009 	mov	r2, r9
400060c4:	e1a0300a 	mov	r3, sl
400060c8:	e1a00004 	mov	r0, r4
400060cc:	e88d5000 	stm	sp, {ip, lr}
400060d0:	ebfff4f8 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060d4:	e594001c 	ldr	r0, [r4, #28]
400060d8:	eb0010ab 	bl	4000a38c <_txe_mutex_put>
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
400060dc:	e3a0c0ff 	mov	ip, #255	; 0xff
							 }
							 CtrlParArry[CtrlID][16] = CyTrue;
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400060e0:	e59d4014 	ldr	r4, [sp, #20]
400060e4:	e59de018 	ldr	lr, [sp, #24]
							 //CyU3PDebugPrint (4, "The shutter&exposure 0x%x 0x%x 0x%x ox%x\r\n", Data1, Data0, CTCtrlParArry[ExTmACtlID3][13], CtrlParArry[CtrlID][13]);
							 break;
400060e8:	e1a0700c 	mov	r7, ip
400060ec:	eafffc75 	b	400052c8 <ControlHandle+0x8c>
							 CtrlParArry[CtrlID][13] = Data0;
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 }
			   }else{
				   CyU3PDebugPrint (4, "The get data from host fail error code %d.\r\n", apiRetStatus);
400060f0:	e3a00004 	mov	r0, #4
400060f4:	e59f10f8 	ldr	r1, [pc, #248]	; 400061f4 <ControlHandle+0xfb8>
400060f8:	eb00347c 	bl	400132f0 <CyU3PDebugPrint>
400060fc:	e3a0c0ff 	mov	ip, #255	; 0xff
40006100:	e1a0700c 	mov	r7, ip
40006104:	e1a0e00c 	mov	lr, ip
40006108:	e1a0400c 	mov	r4, ip
4000610c:	eafffc6d 	b	400052c8 <ControlHandle+0x8c>
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006110:	e5d324b5 	ldrb	r2, [r3, #1205]	; 0x4b5
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006114:	e2407001 	sub	r7, r0, #1
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006118:	e3520004 	cmp	r2, #4
4000611c:	13520001 	cmpne	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 2; //auto mode
									 }
								 }
							 }else{
								 Data1 = Data0 - 1;
40006120:	e20710ff 	and	r1, r7, #255	; 0xff
								 if((CTCtrlParArry[AutoExMCtlID1][13] != 1) && (CTCtrlParArry[AutoExMCtlID1][13] != 4)){
40006124:	0a000003 	beq	40006138 <ControlHandle+0xefc>
									 if(CTCtrlParArry[AutoExMCtlID1][13] == 8) {
40006128:	e3520008 	cmp	r2, #8
										 CTCtrlParArry[AutoExMCtlID1][13] = 1; //manual mode
4000612c:	03a02001 	moveq	r2, #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
40006130:	13a02004 	movne	r2, #4
40006134:	e5c324b5 	strb	r2, [r3, #1205]	; 0x4b5
									 }
								 }
								 if(Data1 < 8){
40006138:	e3510007 	cmp	r1, #7
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
4000613c:	959f30b4 	ldrls	r3, [pc, #180]	; 400061f8 <ControlHandle+0xfbc>
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006140:	83a03001 	movhi	r3, #1
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
40006144:	90830081 	addls	r0, r3, r1, lsl #1
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006148:	97d32081 	ldrbls	r2, [r3, r1, lsl #1]
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
4000614c:	95d03001 	ldrbls	r3, [r0, #1]
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
40006150:	85c634e5 	strbhi	r3, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
40006154:	83a03000 	movhi	r3, #0
									 }else{
										 CTCtrlParArry[AutoExMCtlID1][13] = 4; //shutter priority
									 }
								 }
								 if(Data1 < 8){
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[Data1][0];
40006158:	95c624e5 	strbls	r2, [r6, #1253]	; 0x4e5
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[Data1][1];
								 }else{
									 CTCtrlParArry[ExTmACtlID3][13] = ExTime[7][0];
									 CTCtrlParArry[ExTmACtlID3][14] = ExTime[7][1];
4000615c:	e5c634e6 	strb	r3, [r6, #1254]	; 0x4e6
40006160:	eaffffcd 	b	4000609c <ControlHandle+0xe60>
							 CtrlParArry[CtrlID][16] = CyTrue;
							 break;
					 	 case BLCCtlID0:
							 CtrlParArry[CtrlID][13] = Data0;
							 if(Data0 == 3)
								 WDRflag = CyTrue; //WDR mode
40006164:	e59f2058 	ldr	r2, [pc, #88]	; 400061c4 <ControlHandle+0xf88>
40006168:	e3a06001 	mov	r6, #1
4000616c:	e5826078 	str	r6, [r2, #120]	; 0x78
							 else
								 WDRflag = CyFalse;
							 CtrlParArry[CtrlID][16] = CyTrue;
40006170:	e5c36190 	strb	r6, [r3, #400]	; 0x190
40006174:	eaffff2c 	b	40005e2c <ControlHandle+0xbf0>
			 	 }
			 	 case ExtCamMCtlID12:
					 sendData = CtrlParArry[CtrlID][13];
					 if(CamMode == 1){//720p
						if(sendData >= 3){
							CyU3PDebugPrint (4, "back light compensation setting is not correct. %d %d\r\n", CamMode, sendData);
40006178:	e3a02001 	mov	r2, #1
4000617c:	e3a00004 	mov	r0, #4
40006180:	e59f105c 	ldr	r1, [pc, #92]	; 400061e4 <ControlHandle+0xfa8>
40006184:	eb003459 	bl	400132f0 <CyU3PDebugPrint>
							sendData = 0; //set back to default
							CtrlParArry[CtrlID][13] = 0;
40006188:	e59f3028 	ldr	r3, [pc, #40]	; 400061b8 <ControlHandle+0xf7c>
4000618c:	e3a02000 	mov	r2, #0
40006190:	e3a04004 	mov	r4, #4
40006194:	e5c3242d 	strb	r2, [r3, #1069]	; 0x42d
40006198:	eafffd81 	b	400057a4 <ControlHandle+0x568>
4000619c:	e59f0020 	ldr	r0, [pc, #32]	; 400061c4 <ControlHandle+0xf88>
400061a0:	eafffd6e 	b	40005760 <ControlHandle+0x524>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
}

inline void ControlHandle(uint8_t CtrlID){
400061a4:	e3a03000 	mov	r3, #0
400061a8:	eafffe11 	b	400059f4 <ControlHandle+0x7b8>
400061ac:	e59f0010 	ldr	r0, [pc, #16]	; 400061c4 <ControlHandle+0xf88>
400061b0:	e3a03000 	mov	r3, #0
400061b4:	eafffd62 	b	40005744 <ControlHandle+0x508>
400061b8:	40030000 	.word	0x40030000
400061bc:	40033144 	.word	0x40033144
400061c0:	40011728 	.word	0x40011728
400061c4:	40030f90 	.word	0x40030f90
400061c8:	40030fe8 	.word	0x40030fe8
400061cc:	00010001 	.word	0x00010001
400061d0:	00ff00ff 	.word	0x00ff00ff
400061d4:	40011634 	.word	0x40011634
400061d8:	40011670 	.word	0x40011670
400061dc:	40032ec4 	.word	0x40032ec4
400061e0:	40030fdc 	.word	0x40030fdc
400061e4:	400115fc 	.word	0x400115fc
400061e8:	400116e0 	.word	0x400116e0
400061ec:	400116c4 	.word	0x400116c4
400061f0:	40011698 	.word	0x40011698
400061f4:	400116f8 	.word	0x400116f8
400061f8:	4001136c 	.word	0x4001136c

400061fc <CTControlHandle>:
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
400061fc:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006200:	e59fa964 	ldr	sl, [pc, #2404]	; 40006b6c <CTControlHandle+0x970>
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006204:	e59f8964 	ldr	r8, [pc, #2404]	; 40006b70 <CTControlHandle+0x974>
    Len = CTCtrlParArry[CtrlID][2];
    uint8_t dataIdx, getData=0xFF, getData1=0xff, sendData=0xff, sendData1=0xFF, reqData;
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;
40006208:	e5da5000 	ldrb	r5, [sl]
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
4000620c:	e1a09080 	lsl	r9, r0, #1
40006210:	e0892000 	add	r2, r9, r0
40006214:	e0882182 	add	r2, r8, r2, lsl #3
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006218:	e3550083 	cmp	r5, #131	; 0x83
EndofSet:    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host 0x%x 0x%x / send to host 0x%x 0x%x\r\n", reqData, getData, getData1, sendData, sendData1);
}
/************** CT control requests handler *************************/
#define EXLIMIT  200  //shutter value limit in 30 fps

inline void CTControlHandle(uint8_t CtrlID){
4000621c:	e24dd05c 	sub	sp, sp, #92	; 0x5c
40006220:	e1a06000 	mov	r6, r0
    uint8_t i, shutter, index;
    diff = 0xffff;
    shutter = 1;
    index = 1;

    uint8_t devAdd = CTCtrlParArry[CtrlID][15];
40006224:	e5d2349f 	ldrb	r3, [r2, #1183]	; 0x49f
    RegAdd0 = CTCtrlParArry[CtrlID][0];
40006228:	e5d2b490 	ldrb	fp, [r2, #1168]	; 0x490
    RegAdd1 = CTCtrlParArry[CtrlID][1];
    Len = CTCtrlParArry[CtrlID][2];
4000622c:	e5d27492 	ldrb	r7, [r2, #1170]	; 0x492
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006230:	0a000076 	beq	40006410 <CTControlHandle+0x214>
40006234:	9a000021 	bls	400062c0 <CTControlHandle+0xc4>
40006238:	e3550085 	cmp	r5, #133	; 0x85
4000623c:	0a000059 	beq	400063a8 <CTControlHandle+0x1ac>
40006240:	3a00004e 	bcc	40006380 <CTControlHandle+0x184>
40006244:	e3550086 	cmp	r5, #134	; 0x86
40006248:	0a000080 	beq	40006450 <CTControlHandle+0x254>
4000624c:	e3550087 	cmp	r5, #135	; 0x87
40006250:	0a000076 	beq	40006430 <CTControlHandle+0x234>
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
			  		 break;
			  }
			  break;
		  default:
			  CyU3PUsbStall (0, CyTrue, CyFalse);
40006254:	e3a00000 	mov	r0, #0
40006258:	e3a01001 	mov	r1, #1
4000625c:	e1a02000 	mov	r2, r0
40006260:	eb005f8a 	bl	4001e090 <CyU3PUsbStall>
40006264:	e59f4908 	ldr	r4, [pc, #2312]	; 40006b74 <CTControlHandle+0x978>
			  CyU3PDebugPrint (4, "default request (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
40006268:	e1a02006 	mov	r2, r6
4000626c:	e3a00004 	mov	r0, #4
40006270:	e59f1900 	ldr	r1, [pc, #2304]	; 40006b78 <CTControlHandle+0x97c>
40006274:	e5da3000 	ldrb	r3, [sl]
40006278:	eb00341c 	bl	400132f0 <CyU3PDebugPrint>
			  break;
4000627c:	e3a0c0ff 	mov	ip, #255	; 0xff
40006280:	e1a0600c 	mov	r6, ip
40006284:	e1a0800c 	mov	r8, ip
		 }
	//CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug

    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
40006288:	e5d4e05a 	ldrb	lr, [r4, #90]	; 0x5a
4000628c:	e58dc008 	str	ip, [sp, #8]
40006290:	e59f18e4 	ldr	r1, [pc, #2276]	; 40006b7c <CTControlHandle+0x980>
40006294:	e3a0c0ff 	mov	ip, #255	; 0xff
40006298:	e1a02005 	mov	r2, r5
4000629c:	e1a03008 	mov	r3, r8
400062a0:	e3a00004 	mov	r0, #4
400062a4:	e88d4040 	stm	sp, {r6, lr}
400062a8:	e58dc00c 	str	ip, [sp, #12]
400062ac:	e58de010 	str	lr, [sp, #16]
400062b0:	e58d7014 	str	r7, [sp, #20]
400062b4:	eb00340d 	bl	400132f0 <CyU3PDebugPrint>
}
400062b8:	e28dd05c 	add	sp, sp, #92	; 0x5c
400062bc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
400062c0:	e3550081 	cmp	r5, #129	; 0x81
400062c4:	0a000042 	beq	400063d4 <CTControlHandle+0x1d8>
400062c8:	9a000011 	bls	40006314 <CTControlHandle+0x118>
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
400062cc:	e59f48a0 	ldr	r4, [pc, #2208]	; 40006b74 <CTControlHandle+0x978>
400062d0:	e5d21493 	ldrb	r1, [r2, #1171]	; 0x493
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
400062d4:	e5d26494 	ldrb	r6, [r2, #1172]	; 0x494
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
400062d8:	e350000a 	cmp	r0, #10
#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
		 case CY_FX_USB_UVC_GET_MIN_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][3];
400062dc:	e5c41058 	strb	r1, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][4];
400062e0:	e5c46059 	strb	r6, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;//1;
400062e4:	0a00002c 	beq	4000639c <CTControlHandle+0x1a0>
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
400062e8:	e3a0e000 	mov	lr, #0
400062ec:	e5c4e05a 	strb	lr, [r4, #90]	; 0x5a
			  glEp0Buffer[3] = 0;
400062f0:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400062f4:	e1a00007 	mov	r0, r7
400062f8:	e59f1880 	ldr	r1, [pc, #2176]	; 40006b80 <CTControlHandle+0x984>
			  sendData = glEp0Buffer[0];
			  break;
400062fc:	e3a060ff 	mov	r6, #255	; 0xff
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
40006300:	e5c4305b 	strb	r3, [r4, #91]	; 0x5b
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
40006304:	e1a08006 	mov	r8, r6
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
			  else glEp0Buffer[2] = 0;
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006308:	eb005d35 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
4000630c:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
40006310:	eaffffdc 	b	40006288 <CTControlHandle+0x8c>
#ifdef USB_DEBUG_PRINT
    CyU3PDebugPrint (4, "The cur sensor value(CT) %d 0x%x 0x%x\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14]); // additional debug
#endif
    reqData = bRequest;

    switch (bRequest)
40006314:	e3550001 	cmp	r5, #1
40006318:	1affffcd 	bne	40006254 <CTControlHandle+0x58>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000631c:	e59f4850 	ldr	r4, [pc, #2128]	; 40006b74 <CTControlHandle+0x978>
40006320:	e28d2056 	add	r2, sp, #86	; 0x56
40006324:	e3a00020 	mov	r0, #32
40006328:	e2841058 	add	r1, r4, #88	; 0x58
4000632c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006330:	eb005abd 	bl	4001ce2c <CyU3PUsbGetEP0Data>
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006334:	e5d40058 	ldrb	r0, [r4, #88]	; 0x58
			  Data1 = glEp0Buffer[1];
40006338:	e5d4c059 	ldrb	ip, [r4, #89]	; 0x59
			  value = Data1;

			  switch(CtrlID)
4000633c:	e2462001 	sub	r2, r6, #1
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_SET_CUR_REQ:
			  apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
			  glEp0Buffer, &readCount);
			  Data0 = glEp0Buffer[0];
40006340:	e58d0030 	str	r0, [sp, #48]	; 0x30
			  Data1 = glEp0Buffer[1];
40006344:	e58dc034 	str	ip, [sp, #52]	; 0x34
			  value = Data1;

			  switch(CtrlID)
40006348:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
4000634c:	e3520009 	cmp	r2, #9
40006350:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006354:	ea000155 	b	400068b0 <CTControlHandle+0x6b4>
40006358:	4000686c 	.word	0x4000686c
4000635c:	400068b0 	.word	0x400068b0
40006360:	4000657c 	.word	0x4000657c
40006364:	400068b0 	.word	0x400068b0
40006368:	400068b0 	.word	0x400068b0
4000636c:	400068b0 	.word	0x400068b0
40006370:	400064f8 	.word	0x400064f8
40006374:	400068b0 	.word	0x400068b0
40006378:	400068b0 	.word	0x400068b0
4000637c:	4000647c 	.word	0x4000647c
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006380:	e59f47ec 	ldr	r4, [pc, #2028]	; 40006b74 <CTControlHandle+0x978>
40006384:	e5d28497 	ldrb	r8, [r2, #1175]	; 0x497
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006388:	e5d22498 	ldrb	r2, [r2, #1176]	; 0x498
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000638c:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_RES_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][7];
40006390:	e5c48058 	strb	r8, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][8];
40006394:	e5c42059 	strb	r2, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006398:	1affffd2 	bne	400062e8 <CTControlHandle+0xec>
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000639c:	e3a01001 	mov	r1, #1
400063a0:	e5c4105a 	strb	r1, [r4, #90]	; 0x5a
400063a4:	eaffffd1 	b	400062f0 <CTControlHandle+0xf4>

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400063a8:	e59f47c4 	ldr	r4, [pc, #1988]	; 40006b74 <CTControlHandle+0x978>
			  glEp0Buffer[1] = 0;
400063ac:	e3a03000 	mov	r3, #0
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400063b0:	e3a00002 	mov	r0, #2
400063b4:	e2841058 	add	r1, r4, #88	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400063b8:	e3a060ff 	mov	r6, #255	; 0xff

    switch (bRequest)
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
400063bc:	e5c47058 	strb	r7, [r4, #88]	; 0x58
			  glEp0Buffer[1] = 0;
400063c0:	e5c43059 	strb	r3, [r4, #89]	; 0x59
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
400063c4:	e1a08006 	mov	r8, r6
		 {

		 case CY_FX_USB_UVC_GET_LEN_REQ: /* the length of get length request always setting to 2 */
			  glEp0Buffer[0] = Len;
			  glEp0Buffer[1] = 0;
			  CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400063c8:	eb005d05 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
400063cc:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  break;
400063d0:	eaffffac 	b	40006288 <CTControlHandle+0x8c>
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
400063d4:	e59f4798 	ldr	r4, [pc, #1944]	; 40006b74 <CTControlHandle+0x978>
400063d8:	e5d2a49d 	ldrb	sl, [r2, #1181]	; 0x49d
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
400063dc:	e5d2c49e 	ldrb	ip, [r2, #1182]	; 0x49e
					 glEp0Buffer[2] = 0;
400063e0:	e3a08000 	mov	r8, #0
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
400063e4:	e1a00007 	mov	r0, r7
400063e8:	e2841058 	add	r1, r4, #88	; 0x58

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
400063ec:	e3a060ff 	mov	r6, #255	; 0xff

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
					 glEp0Buffer[1] = CTCtrlParArry[CtrlID][14];
400063f0:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
					 glEp0Buffer[2] = 0;
400063f4:	e5c4805a 	strb	r8, [r4, #90]	; 0x5a
					 glEp0Buffer[3] = 0;
400063f8:	e5c4805b 	strb	r8, [r4, #91]	; 0x5b
		 case CY_FX_USB_UVC_GET_CUR_REQ: /* Current value. */

			 switch(CtrlID)
			 {
				 default:
					 glEp0Buffer[0] = CTCtrlParArry[CtrlID][13];
400063fc:	e5c4a058 	strb	sl, [r4, #88]	; 0x58
			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
40006400:	e1a08006 	mov	r8, r6
					 glEp0Buffer[3] = 0;
					 sendData = glEp0Buffer[0];
					 break;
			 }

			 CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
40006404:	eb005cf6 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
40006408:	e1a0c00a 	mov	ip, sl

#ifdef USB_DEBUG_PRINT
			  CyU3PDebugPrint (4, "The get sensor value(CT) %d 0x%x 0x%x, %d %d\r\n", CtrlID, CTCtrlParArry[CtrlID][13], CTCtrlParArry[CtrlID][14], glEp0Buffer[0], Len); // additional debug
#endif
			  break;
4000640c:	eaffff9d 	b	40006288 <CTControlHandle+0x8c>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006410:	e59f475c 	ldr	r4, [pc, #1884]	; 40006b74 <CTControlHandle+0x978>
40006414:	e5d23495 	ldrb	r3, [r2, #1173]	; 0x495
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006418:	e5d2e496 	ldrb	lr, [r2, #1174]	; 0x496
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000641c:	e350000a 	cmp	r0, #10
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_MAX_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][5];
40006420:	e5c43058 	strb	r3, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][6];
40006424:	e5c4e059 	strb	lr, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006428:	1affffae 	bne	400062e8 <CTControlHandle+0xec>
4000642c:	eaffffda 	b	4000639c <CTControlHandle+0x1a0>
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006430:	e59f473c 	ldr	r4, [pc, #1852]	; 40006b74 <CTControlHandle+0x978>
40006434:	e5d2649b 	ldrb	r6, [r2, #1179]	; 0x49b
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006438:	e5d2c49c 	ldrb	ip, [r2, #1180]	; 0x49c
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
4000643c:	e350000a 	cmp	r0, #10
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
		 case CY_FX_USB_UVC_GET_DEF_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][11];
40006440:	e5c46058 	strb	r6, [r4, #88]	; 0x58
			  glEp0Buffer[1] = CTCtrlParArry[CtrlID][12];
40006444:	e5c4c059 	strb	ip, [r4, #89]	; 0x59
			  if(ZmOpRCtlID10 == CtrlID) glEp0Buffer[2] = SPEED;
40006448:	1affffa6 	bne	400062e8 <CTControlHandle+0xec>
4000644c:	eaffffd2 	b	4000639c <CTControlHandle+0x1a0>
			  glEp0Buffer[3] = 0;
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
40006450:	e59f471c 	ldr	r4, [pc, #1820]	; 40006b74 <CTControlHandle+0x978>
40006454:	e5d20499 	ldrb	r0, [r2, #1177]	; 0x499
40006458:	e1a01004 	mov	r1, r4
4000645c:	e5e10058 	strb	r0, [r1, #88]!	; 0x58
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006460:	e3a060ff 	mov	r6, #255	; 0xff
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006464:	e3a00001 	mov	r0, #1
40006468:	eb005cdd 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
4000646c:	e1a08006 	mov	r8, r6
			  CyU3PUsbSendEP0Data (Len, (uint8_t *)glEp0Buffer);
			  sendData = glEp0Buffer[0];
			  break;
		 case CY_FX_USB_UVC_GET_INFO_REQ:
			  glEp0Buffer[0] = CTCtrlParArry[CtrlID][9];
			  CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
40006470:	e5d4c058 	ldrb	ip, [r4, #88]	; 0x58
			  sendData = glEp0Buffer[0];
			  Len = 1;
			  break;
40006474:	e3a07001 	mov	r7, #1
40006478:	eaffff82 	b	40006288 <CTControlHandle+0x8c>
			  	  case ZmOpRCtlID10:
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000647c:	e59f6700 	ldr	r6, [pc, #1792]	; 40006b84 <CTControlHandle+0x988>
40006480:	e3e01000 	mvn	r1, #0
40006484:	e596001c 	ldr	r0, [r6, #28]
40006488:	e58d302c 	str	r3, [sp, #44]	; 0x2c
4000648c:	eb000f89 	bl	4000a2b8 <_txe_mutex_get>
					  if(getData == 1)
40006490:	e59de030 	ldr	lr, [sp, #48]	; 0x30
40006494:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006498:	e35e0001 	cmp	lr, #1
4000649c:	0a0001aa 	beq	40006b4c <CTControlHandle+0x950>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
400064a0:	e35e00ff 	cmp	lr, #255	; 0xff
400064a4:	0a00019f 	beq	40006b28 <CTControlHandle+0x92c>
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
					  else
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, STOP, dataIdx);
400064a8:	e3a08000 	mov	r8, #0
400064ac:	e1a00006 	mov	r0, r6
400064b0:	e3a01023 	mov	r1, #35	; 0x23
400064b4:	e1a0200b 	mov	r2, fp
400064b8:	e58d8000 	str	r8, [sp]
400064bc:	e58d8004 	str	r8, [sp, #4]
400064c0:	ebfff3fc 	bl	400034b8 <cmdSet>
					  //dataIdx++;
					  //cmdSet(cmdQuptr, 23, RegAdd0, devAdd, STOP, dataIdx); //for temp implementation for stop zoom
					  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400064c4:	e596001c 	ldr	r0, [r6, #28]
400064c8:	eb000faf 	bl	4000a38c <_txe_mutex_put>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
400064cc:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
400064d0:	e59d6034 	ldr	r6, [sp, #52]	; 0x34
400064d4:	e5d4c05a 	ldrb	ip, [r4, #90]	; 0x5a
400064d8:	e3a00004 	mov	r0, #4
400064dc:	e59f16a4 	ldr	r1, [pc, #1700]	; 40006b88 <CTControlHandle+0x98c>
400064e0:	e1a02008 	mov	r2, r8
400064e4:	e1a03006 	mov	r3, r6
400064e8:	e58dc000 	str	ip, [sp]
400064ec:	eb00337f 	bl	400132f0 <CyU3PDebugPrint>
					  break;
400064f0:	e3a0c0ff 	mov	ip, #255	; 0xff
400064f4:	eaffff63 	b	40006288 <CTControlHandle+0x8c>
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];
					  break;
			  	  case IriACtlID7:
					  if((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 8))//Iris set accepted
400064f8:	e5d884b5 	ldrb	r8, [r8, #1205]	; 0x4b5
400064fc:	e3580001 	cmp	r8, #1
40006500:	13580008 	cmpne	r8, #8
40006504:	13a00000 	movne	r0, #0
40006508:	03a00001 	moveq	r0, #1
4000650c:	1a000181 	bne	40006b18 <CTControlHandle+0x91c>
					  {
							 dataIdx = 0;
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006510:	e59f866c 	ldr	r8, [pc, #1644]	; 40006b84 <CTControlHandle+0x988>
40006514:	e3e01000 	mvn	r1, #0
40006518:	e598001c 	ldr	r0, [r8, #28]
4000651c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006520:	eb000f64 	bl	4000a2b8 <_txe_mutex_get>
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
40006524:	e59da030 	ldr	sl, [sp, #48]	; 0x30
40006528:	e3a01022 	mov	r1, #34	; 0x22
4000652c:	e1a0200b 	mov	r2, fp
40006530:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006534:	e3a0c000 	mov	ip, #0
40006538:	e1a00008 	mov	r0, r8
4000653c:	e88d1400 	stm	sp, {sl, ip}
40006540:	ebfff3dc 	bl	400034b8 <cmdSet>
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006544:	e598001c 	ldr	r0, [r8, #28]
40006548:	eb000f8f 	bl	4000a38c <_txe_mutex_put>
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
4000654c:	e59f061c 	ldr	r0, [pc, #1564]	; 40006b70 <CTControlHandle+0x974>
							 CTCtrlParArry[CtrlID][14] = Data1;
40006550:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006554:	e0891006 	add	r1, r9, r6
40006558:	e0803181 	add	r3, r0, r1, lsl #3
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
4000655c:	e3a06001 	mov	r6, #1
							 CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
							 cmdSet(cmdQuptr, 0x22, RegAdd0, devAdd, Data0, dataIdx);  //First
							 CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
							 //CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.

							 CTCtrlParArry[CtrlID][13] = Data0;
40006560:	e5c3a49d 	strb	sl, [r3, #1181]	; 0x49d
							 CTCtrlParArry[CtrlID][14] = Data1;
40006564:	e5c3249e 	strb	r2, [r3, #1182]	; 0x49e
							 CTCtrlParArry[CtrlID][16] = CyTrue;
40006568:	e5c364a0 	strb	r6, [r3, #1184]	; 0x4a0
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
4000656c:	e5d48058 	ldrb	r8, [r4, #88]	; 0x58
40006570:	e5d46059 	ldrb	r6, [r4, #89]	; 0x59
					  }
					  getData = glEp0Buffer[0];
					  getData1 = glEp0Buffer[1];

					  break;
40006574:	e3a0c0ff 	mov	ip, #255	; 0xff
40006578:	eaffff42 	b	40006288 <CTControlHandle+0x8c>

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
4000657c:	e5d804b5 	ldrb	r0, [r8, #1205]	; 0x4b5
40006580:	e3500001 	cmp	r0, #1
40006584:	13500004 	cmpne	r0, #4
40006588:	1a00015d 	bne	40006b04 <CTControlHandle+0x908>
				    break;

			  	  case ExTmACtlID3:
			  		//CyU3PDebugPrint (4, "The Ex Time value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

					  value = (value << 8)|Data0;
4000658c:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
40006590:	e59de034 	ldr	lr, [sp, #52]	; 0x34
40006594:	e181240e 	orr	r2, r1, lr, lsl #8
					  if(((CTCtrlParArry[AutoExMCtlID1][13] == 1) || (CTCtrlParArry[AutoExMCtlID1][13] == 4))
							  && (value < (EXLIMIT+50)))//shutter set accepted
40006598:	e35200f9 	cmp	r2, #249	; 0xf9
4000659c:	8a000158 	bhi	40006b04 <CTControlHandle+0x908>
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065a0:	e242a0c8 	sub	sl, r2, #200	; 0xc8
400065a4:	e1a0c80a 	lsl	ip, sl, #16
400065a8:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
							}else{
								diffRd = ShutValueArry[i]-value;
400065ac:	e262a027 	rsb	sl, r2, #39	; 0x27
400065b0:	e58da038 	str	sl, [sp, #56]	; 0x38
400065b4:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
400065b8:	e26210c8 	rsb	r1, r2, #200	; 0xc8
400065bc:	e35200c8 	cmp	r2, #200	; 0xc8
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065c0:	e2420064 	sub	r0, r2, #100	; 0x64
							}else{
								diffRd = ShutValueArry[i]-value;
400065c4:	e1a01801 	lsl	r1, r1, #16
400065c8:	e262e064 	rsb	lr, r2, #100	; 0x64
400065cc:	81a0182a 	lsrhi	r1, sl, #16
400065d0:	91a01821 	lsrls	r1, r1, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065d4:	e1a0c800 	lsl	ip, r0, #16
							}else{
								diffRd = ShutValueArry[i]-value;
400065d8:	e3520064 	cmp	r2, #100	; 0x64
400065dc:	e1a0080e 	lsl	r0, lr, #16
400065e0:	81a0082c 	lsrhi	r0, ip, #16
400065e4:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065e8:	e242a014 	sub	sl, r2, #20
400065ec:	e58da038 	str	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400065f0:	91a00820 	lsrls	r0, r0, #16
400065f4:	e262a014 	rsb	sl, r2, #20
400065f8:	e58da03c 	str	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400065fc:	e242e027 	sub	lr, r2, #39	; 0x27
							}else{
								diffRd = ShutValueArry[i]-value;
40006600:	e1510000 	cmp	r1, r0
40006604:	31a0a001 	movcc	sl, r1
40006608:	21a0a000 	movcs	sl, r0
4000660c:	e1a0c80c 	lsl	ip, ip, #16
40006610:	e3520027 	cmp	r2, #39	; 0x27
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006614:	e1a0e80e 	lsl	lr, lr, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006618:	91a0e82c 	lsrls	lr, ip, #16
4000661c:	e59fc568 	ldr	ip, [pc, #1384]	; 40006b8c <CTControlHandle+0x990>
40006620:	e58da020 	str	sl, [sp, #32]
40006624:	e06ca001 	rsb	sl, ip, r1
40006628:	81a0e82e 	lsrhi	lr, lr, #16
4000662c:	e27ac000 	rsbs	ip, sl, #0
40006630:	e0acc00a 	adc	ip, ip, sl
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006634:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
40006638:	e58dc044 	str	ip, [sp, #68]	; 0x44
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000663c:	e1a0c80a 	lsl	ip, sl, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006640:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006644:	e58dc04c 	str	ip, [sp, #76]	; 0x4c
							}else{
								diffRd = ShutValueArry[i]-value;
40006648:	e1a0c80a 	lsl	ip, sl, #16
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000664c:	e242a00a 	sub	sl, r2, #10
40006650:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006654:	e59da020 	ldr	sl, [sp, #32]
40006658:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
4000665c:	e15e000a 	cmp	lr, sl
40006660:	31a0a00e 	movcc	sl, lr
40006664:	e262c00a 	rsb	ip, r2, #10
40006668:	e58dc040 	str	ip, [sp, #64]	; 0x40
4000666c:	e58da038 	str	sl, [sp, #56]	; 0x38
40006670:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
40006674:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
40006678:	e3520014 	cmp	r2, #20
4000667c:	91a0a82c 	lsrls	sl, ip, #16
40006680:	81a0a82a 	lsrhi	sl, sl, #16
40006684:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006688:	e1500001 	cmp	r0, r1
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000668c:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
40006690:	33a0c001 	movcc	ip, #1
40006694:	e58da03c 	str	sl, [sp, #60]	; 0x3c
40006698:	e58dc024 	str	ip, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000669c:	e1a0a801 	lsl	sl, r1, #16
400066a0:	e242c005 	sub	ip, r2, #5
							}else{
								diffRd = ShutValueArry[i]-value;
400066a4:	e2621005 	rsb	r1, r2, #5
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066a8:	e58da048 	str	sl, [sp, #72]	; 0x48
							}else{
								diffRd = ShutValueArry[i]-value;
400066ac:	e59d0040 	ldr	r0, [sp, #64]	; 0x40
400066b0:	e59da038 	ldr	sl, [sp, #56]	; 0x38
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066b4:	e58dc040 	str	ip, [sp, #64]	; 0x40
							}else{
								diffRd = ShutValueArry[i]-value;
400066b8:	e59dc03c 	ldr	ip, [sp, #60]	; 0x3c
400066bc:	e58d104c 	str	r1, [sp, #76]	; 0x4c
400066c0:	e59d1048 	ldr	r1, [sp, #72]	; 0x48
400066c4:	e1a00800 	lsl	r0, r0, #16
400066c8:	e15c000a 	cmp	ip, sl
400066cc:	21a0c00a 	movcs	ip, sl
400066d0:	e352000a 	cmp	r2, #10
400066d4:	e59da020 	ldr	sl, [sp, #32]
400066d8:	81a00821 	lsrhi	r0, r1, #16
400066dc:	91a00820 	lsrls	r0, r0, #16
400066e0:	e58d0048 	str	r0, [sp, #72]	; 0x48
400066e4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400066e8:	e15e000a 	cmp	lr, sl
400066ec:	33a00002 	movcc	r0, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066f0:	e242e002 	sub	lr, r2, #2
							}else{
								diffRd = ShutValueArry[i]-value;
400066f4:	e58dc044 	str	ip, [sp, #68]	; 0x44
400066f8:	e58d0024 	str	r0, [sp, #36]	; 0x24
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
400066fc:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
40006700:	e58de01c 	str	lr, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006704:	e59d0044 	ldr	r0, [sp, #68]	; 0x44
40006708:	e59de048 	ldr	lr, [sp, #72]	; 0x48
4000670c:	e59d104c 	ldr	r1, [sp, #76]	; 0x4c
40006710:	e262a002 	rsb	sl, r2, #2
40006714:	e15e0000 	cmp	lr, r0
40006718:	21a0e000 	movcs	lr, r0
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000671c:	e1a0c80c 	lsl	ip, ip, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006720:	e3520005 	cmp	r2, #5
40006724:	e58da040 	str	sl, [sp, #64]	; 0x40
40006728:	e1a01801 	lsl	r1, r1, #16
4000672c:	e59da03c 	ldr	sl, [sp, #60]	; 0x3c
40006730:	81a0182c 	lsrhi	r1, ip, #16
40006734:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
40006738:	e58de04c 	str	lr, [sp, #76]	; 0x4c
4000673c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40006740:	e59de040 	ldr	lr, [sp, #64]	; 0x40
40006744:	91a01821 	lsrls	r1, r1, #16
40006748:	e15a000c 	cmp	sl, ip
4000674c:	e58d1020 	str	r1, [sp, #32]
40006750:	33a00003 	movcc	r0, #3
40006754:	e58d0038 	str	r0, [sp, #56]	; 0x38
40006758:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
4000675c:	e1a0080e 	lsl	r0, lr, #16
40006760:	e59de020 	ldr	lr, [sp, #32]
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006764:	e59d101c 	ldr	r1, [sp, #28]
							}else{
								diffRd = ShutValueArry[i]-value;
40006768:	e15e000a 	cmp	lr, sl
4000676c:	21a0e00a 	movcs	lr, sl
40006770:	e59dc044 	ldr	ip, [sp, #68]	; 0x44
40006774:	e59da048 	ldr	sl, [sp, #72]	; 0x48
40006778:	e3520002 	cmp	r2, #2
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
4000677c:	e1a01801 	lsl	r1, r1, #16
							}else{
								diffRd = ShutValueArry[i]-value;
40006780:	91a01820 	lsrls	r1, r0, #16
40006784:	e59d0038 	ldr	r0, [sp, #56]	; 0x38
40006788:	81a01821 	lsrhi	r1, r1, #16
4000678c:	e15a000c 	cmp	sl, ip
40006790:	33a00004 	movcc	r0, #4
40006794:	e58d0040 	str	r0, [sp, #64]	; 0x40
							  && (value < (EXLIMIT+50)))//shutter set accepted
					  {
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
40006798:	e2420001 	sub	r0, r2, #1
4000679c:	e58d0038 	str	r0, [sp, #56]	; 0x38
							}else{
								diffRd = ShutValueArry[i]-value;
400067a0:	e59da04c 	ldr	sl, [sp, #76]	; 0x4c
400067a4:	e59d0020 	ldr	r0, [sp, #32]
400067a8:	e262c001 	rsb	ip, r2, #1
400067ac:	e58dc03c 	str	ip, [sp, #60]	; 0x3c
400067b0:	e150000a 	cmp	r0, sl
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067b4:	e59da038 	ldr	sl, [sp, #56]	; 0x38
400067b8:	e59d003c 	ldr	r0, [sp, #60]	; 0x3c
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
400067bc:	e59dc040 	ldr	ip, [sp, #64]	; 0x40
400067c0:	33a0c005 	movcc	ip, #5
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067c4:	e3520001 	cmp	r2, #1
400067c8:	91a02800 	lslls	r2, r0, #16
400067cc:	81a0280a 	lslhi	r2, sl, #16
400067d0:	e151000e 	cmp	r1, lr
400067d4:	31a0a001 	movcc	sl, r1
400067d8:	21a0a00e 	movcs	sl, lr
						  for(i = 0; i < 8; i++)//find closest shutter No.
						  {
							if(value > ShutValueArry[i]){
								diffRd = value-ShutValueArry[i];
							}else{
								diffRd = ShutValueArry[i]-value;
400067dc:	e151000e 	cmp	r1, lr
400067e0:	21a0100c 	movcs	r1, ip
400067e4:	33a01006 	movcc	r1, #6
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067e8:	e15a0822 	cmp	sl, r2, lsr #16

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400067ec:	e59fa390 	ldr	sl, [pc, #912]	; 40006b84 <CTControlHandle+0x988>
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
400067f0:	91a02001 	movls	r2, r1
400067f4:	83a02007 	movhi	r2, #7
400067f8:	e2822001 	add	r2, r2, #1
400067fc:	e202e0ff 	and	lr, r2, #255	; 0xff

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006800:	e3e01000 	mvn	r1, #0
40006804:	e59a001c 	ldr	r0, [sl, #28]
							  if(diff > diffRd){
								  diff = diffRd;
								  index = i;
							  }
						  }
						  shutter = shutter+index;
40006808:	e58de038 	str	lr, [sp, #56]	; 0x38

						  dataIdx = 0;
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
4000680c:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006810:	eb000ea8 	bl	4000a2b8 <_txe_mutex_get>
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
40006814:	e59dc038 	ldr	ip, [sp, #56]	; 0x38
40006818:	e3a01003 	mov	r1, #3
4000681c:	e1a0200b 	mov	r2, fp
40006820:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006824:	e58dc000 	str	ip, [sp]
40006828:	e1a0000a 	mov	r0, sl
4000682c:	e3a0c000 	mov	ip, #0
40006830:	e58dc004 	str	ip, [sp, #4]
40006834:	ebfff31f 	bl	400034b8 <cmdSet>
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006838:	e59a001c 	ldr	r0, [sl, #28]
4000683c:	eb000ed2 	bl	4000a38c <_txe_mutex_put>
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006840:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
						  CTCtrlParArry[CtrlID][14] = Data1;
40006844:	e59dc034 	ldr	ip, [sp, #52]	; 0x34
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006848:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
4000684c:	e0891006 	add	r1, r9, r6
40006850:	e0886181 	add	r6, r8, r1, lsl #3
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006854:	e3a02001 	mov	r2, #1
						  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
						  cmdSet(cmdQuptr, CtrlID, RegAdd0, devAdd, shutter, dataIdx);  //First
						  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
						  //CyU3PDebugPrint (4, "The Ex Time shutter value(CT) %d %d %d %d!\r\n", shutter, index, ShutValueArry[index], diff); // additional debug

						  CTCtrlParArry[CtrlID][13] = Data0;
40006858:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
						  CTCtrlParArry[CtrlID][14] = Data1;
4000685c:	e5c6c49e 	strb	ip, [r6, #1182]	; 0x49e
						  CTCtrlParArry[CtrlID][16] = CyTrue;
40006860:	e5c624a0 	strb	r2, [r6, #1184]	; 0x4a0
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
40006864:	e5c8330d 	strb	r3, [r8, #781]	; 0x30d
40006868:	eaffff3f 	b	4000656c <CTControlHandle+0x370>
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
4000686c:	e0892006 	add	r2, r9, r6
40006870:	e0886182 	add	r6, r8, r2, lsl #3
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006874:	e3a01001 	mov	r1, #1
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006878:	e240e001 	sub	lr, r0, #1
			  switch(CtrlID)
			  {
		  	      case AutoExMCtlID1:
		  		    //CyU3PDebugPrint (4, "The Ex Mode value(CT) %d 0x%x 0x%x 0x%x 0x%x, %d!\r\n", CtrlID, glEp0Buffer[0], glEp0Buffer[1], glEp0Buffer[2], glEp0Buffer[3], readCount); // additional debug

				    CTCtrlParArry[CtrlID][13] = Data0;
4000687c:	e5c6049d 	strb	r0, [r6, #1181]	; 0x49d
				    CTCtrlParArry[CtrlID][16] = CyTrue;
40006880:	e5c614a0 	strb	r1, [r6, #1184]	; 0x4a0
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006884:	e35e0007 	cmp	lr, #7
40006888:	979ff10e 	ldrls	pc, [pc, lr, lsl #2]
4000688c:	ea000098 	b	40006af4 <CTControlHandle+0x8f8>
40006890:	40006a88 	.word	0x40006a88
40006894:	400069ec 	.word	0x400069ec
40006898:	40006af4 	.word	0x40006af4
4000689c:	40006984 	.word	0x40006984
400068a0:	40006af4 	.word	0x40006af4
400068a4:	40006af4 	.word	0x40006af4
400068a8:	40006af4 	.word	0x40006af4
400068ac:	400068e4 	.word	0x400068e4
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068b0:	e5da3000 	ldrb	r3, [sl]
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
400068b4:	e59da030 	ldr	sl, [sp, #48]	; 0x30
400068b8:	e0899006 	add	r9, r9, r6
400068bc:	e088e189 	add	lr, r8, r9, lsl #3
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068c0:	e1a02006 	mov	r2, r6
400068c4:	e3a00004 	mov	r0, #4
400068c8:	e59f12c0 	ldr	r1, [pc, #704]	; 40006b90 <CTControlHandle+0x994>
#endif
					  CyU3PDebugPrint (4, "Zoom Op receives (CT) 0x%x 0x%x 0x%x\r\n", getData, getData1, glEp0Buffer[2]);
					  break;

			  	  default:
					 CTCtrlParArry[CtrlID][13] = glEp0Buffer[0];
400068cc:	e5cea49d 	strb	sl, [lr, #1181]	; 0x49d
					 CyU3PDebugPrint (4, "default selector (CT) 0x%x 0x%x\r\n", CtrlID, bRequest); // additional debug
400068d0:	eb003286 	bl	400132f0 <CyU3PDebugPrint>
			  		 break;
400068d4:	e3a0c0ff 	mov	ip, #255	; 0xff
400068d8:	e1a0600c 	mov	r6, ip
400068dc:	e1a0800c 	mov	r8, ip
400068e0:	eafffe68 	b	40006288 <CTControlHandle+0x8c>
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068e4:	e59f6298 	ldr	r6, [pc, #664]	; 40006b84 <CTControlHandle+0x988>
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068e8:	e3a0a000 	mov	sl, #0
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068ec:	e596001c 	ldr	r0, [r6, #28]
							break;
						case 4:
			  		    	setIrisauto(cmdQuptr, 1); //set Iris being auto.
							break;
						case 8:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400068f0:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400068f4:	e3e01000 	mvn	r1, #0
400068f8:	e58d302c 	str	r3, [sp, #44]	; 0x2c
400068fc:	eb000e6d 	bl	4000a2b8 <_txe_mutex_get>
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006900:	e1a0200b 	mov	r2, fp
40006904:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006908:	e3a01010 	mov	r1, #16
4000690c:	e1a00006 	mov	r0, r6
40006910:	e58da000 	str	sl, [sp]
40006914:	e58da004 	str	sl, [sp, #4]
40006918:	ebfff2e6 	bl	400034b8 <cmdSet>
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000691c:	e596001c 	ldr	r0, [r6, #28]
40006920:	eb000e99 	bl	4000a38c <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006924:	e3e01000 	mvn	r1, #0
40006928:	e596001c 	ldr	r0, [r6, #28]
4000692c:	eb000e61 	bl	4000a2b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006930:	e3a0c001 	mov	ip, #1
40006934:	e3a01020 	mov	r1, #32
40006938:	e3a02027 	mov	r2, #39	; 0x27
4000693c:	e3a03030 	mov	r3, #48	; 0x30
40006940:	e1a00006 	mov	r0, r6
40006944:	e58dc000 	str	ip, [sp]
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006948:	e3a08002 	mov	r8, #2
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
4000694c:	e58da004 	str	sl, [sp, #4]
40006950:	ebfff2d8 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006954:	e3a01021 	mov	r1, #33	; 0x21
40006958:	e3a02025 	mov	r2, #37	; 0x25
4000695c:	e3a03030 	mov	r3, #48	; 0x30
40006960:	e1a00006 	mov	r0, r6
40006964:	e88d0500 	stm	sp, {r8, sl}
40006968:	ebfff2d2 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
4000696c:	e596001c 	ldr	r0, [r6, #28]
40006970:	eb000e85 	bl	4000a38c <_txe_mutex_put>
			  		    	dataIdx = 0;
			  		    	CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
			  		    	cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
			  		    	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
			  		    	setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006974:	e3a0c0ff 	mov	ip, #255	; 0xff
40006978:	e1a0600c 	mov	r6, ip
4000697c:	e3a08008 	mov	r8, #8
40006980:	eafffe40 	b	40006288 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006984:	e59f61f8 	ldr	r6, [pc, #504]	; 40006b84 <CTControlHandle+0x988>
40006988:	e3e01000 	mvn	r1, #0
4000698c:	e596001c 	ldr	r0, [r6, #28]
40006990:	eb000e48 	bl	4000a2b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006994:	e3a08000 	mov	r8, #0
40006998:	e3a01020 	mov	r1, #32
4000699c:	e3a02027 	mov	r2, #39	; 0x27
400069a0:	e3a03030 	mov	r3, #48	; 0x30
400069a4:	e1a00006 	mov	r0, r6
400069a8:	e58d8000 	str	r8, [sp]
400069ac:	e58d8004 	str	r8, [sp, #4]
400069b0:	ebfff2c0 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
400069b4:	e3a0c001 	mov	ip, #1
400069b8:	e3a01021 	mov	r1, #33	; 0x21
400069bc:	e3a02025 	mov	r2, #37	; 0x25
400069c0:	e3a03030 	mov	r3, #48	; 0x30
400069c4:	e1a00006 	mov	r0, r6
400069c8:	e58dc000 	str	ip, [sp]
400069cc:	e58d8004 	str	r8, [sp, #4]
400069d0:	ebfff2b8 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400069d4:	e596001c 	ldr	r0, [r6, #28]
400069d8:	eb000e6b 	bl	4000a38c <_txe_mutex_put>
400069dc:	e3a0c0ff 	mov	ip, #255	; 0xff
400069e0:	e1a0600c 	mov	r6, ip
400069e4:	e3a08004 	mov	r8, #4
400069e8:	eafffe26 	b	40006288 <CTControlHandle+0x8c>
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069ec:	e59f6190 	ldr	r6, [pc, #400]	; 40006b84 <CTControlHandle+0x988>
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400069f0:	e3a0a000 	mov	sl, #0
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069f4:	e596001c 	ldr	r0, [r6, #28]
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
						case 2:
			  		    	CtrlParArry[ExtShutCtlID0][13] = 0; //set shutter is auto.
400069f8:	e5c8a30d 	strb	sl, [r8, #781]	; 0x30d
							dataIdx = 0;
							CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
400069fc:	e3e01000 	mvn	r1, #0
40006a00:	e58d302c 	str	r3, [sp, #44]	; 0x2c
40006a04:	eb000e2b 	bl	4000a2b8 <_txe_mutex_get>
							cmdSet(cmdQuptr, ExtShutCtlID0, RegAdd0, devAdd, 0, dataIdx);  //set shutter value to 0
40006a08:	e1a0200b 	mov	r2, fp
40006a0c:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c
40006a10:	e3a01010 	mov	r1, #16
40006a14:	e1a00006 	mov	r0, r6
40006a18:	e58da000 	str	sl, [sp]
40006a1c:	e58da004 	str	sl, [sp, #4]
40006a20:	ebfff2a4 	bl	400034b8 <cmdSet>
							CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a24:	e596001c 	ldr	r0, [r6, #28]
40006a28:	eb000e57 	bl	4000a38c <_txe_mutex_put>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a2c:	e3e01000 	mvn	r1, #0
40006a30:	e596001c 	ldr	r0, [r6, #28]
40006a34:	eb000e1f 	bl	4000a2b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a38:	e3a01020 	mov	r1, #32
40006a3c:	e3a02027 	mov	r2, #39	; 0x27
40006a40:	e3a03030 	mov	r3, #48	; 0x30
40006a44:	e1a00006 	mov	r0, r6
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a48:	e3a08001 	mov	r8, #1
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a4c:	e58da000 	str	sl, [sp]
40006a50:	e58da004 	str	sl, [sp, #4]
40006a54:	ebfff297 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006a58:	e3a01021 	mov	r1, #33	; 0x21
40006a5c:	e3a02025 	mov	r2, #37	; 0x25
40006a60:	e3a03030 	mov	r3, #48	; 0x30
40006a64:	e1a00006 	mov	r0, r6
40006a68:	e88d0500 	stm	sp, {r8, sl}
40006a6c:	ebfff291 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006a70:	e596001c 	ldr	r0, [r6, #28]
40006a74:	eb000e44 	bl	4000a38c <_txe_mutex_put>
40006a78:	e3a0c0ff 	mov	ip, #255	; 0xff
40006a7c:	e1a0600c 	mov	r6, ip
40006a80:	e3a08002 	mov	r8, #2
40006a84:	eafffdff 	b	40006288 <CTControlHandle+0x8c>
 * input isAuto: 0: set manual; 1: set auto
 */
inline void setIrisauto(VdRingBuf *cmdQuptr, uint8_t isAuto){
	uint8_t dataIdx;
	  dataIdx = 0;
	  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40006a88:	e59f60f4 	ldr	r6, [pc, #244]	; 40006b84 <CTControlHandle+0x988>
40006a8c:	e3e01000 	mvn	r1, #0
40006a90:	e596001c 	ldr	r0, [r6, #28]
40006a94:	eb000e07 	bl	4000a2b8 <_txe_mutex_get>
	  cmdSet(cmdQuptr, 0x20/*AFIrisMode*/, 0x27, 0x30, isAuto?0:1, dataIdx);  //set Iris Mode for AF Lens value to 0
40006a98:	e3a08000 	mov	r8, #0
40006a9c:	e3a0a001 	mov	sl, #1
40006aa0:	e3a01020 	mov	r1, #32
40006aa4:	e3a02027 	mov	r2, #39	; 0x27
40006aa8:	e3a03030 	mov	r3, #48	; 0x30
40006aac:	e1a00006 	mov	r0, r6
40006ab0:	e58d8004 	str	r8, [sp, #4]
40006ab4:	e58da000 	str	sl, [sp]
40006ab8:	ebfff27e 	bl	400034b8 <cmdSet>
	  cmdSet(cmdQuptr, 0x21/*noAFIrisMode*/, 0x25, 0x30, isAuto?1:2, dataIdx);  //set Iris Mode value for no-AF Lens to 0
40006abc:	e3a0c002 	mov	ip, #2
40006ac0:	e3a01021 	mov	r1, #33	; 0x21
40006ac4:	e3a02025 	mov	r2, #37	; 0x25
40006ac8:	e3a03030 	mov	r3, #48	; 0x30
40006acc:	e1a00006 	mov	r0, r6
40006ad0:	e58dc000 	str	ip, [sp]
40006ad4:	e58d8004 	str	r8, [sp, #4]
40006ad8:	ebfff276 	bl	400034b8 <cmdSet>
	  CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40006adc:	e596001c 	ldr	r0, [r6, #28]
40006ae0:	eb000e29 	bl	4000a38c <_txe_mutex_put>
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
						case 1:
							setIrisauto(cmdQuptr, 0); //set Iris being manual.
							break;
40006ae4:	e3a0c0ff 	mov	ip, #255	; 0xff
40006ae8:	e1a0600c 	mov	r6, ip
40006aec:	e1a0800a 	mov	r8, sl
40006af0:	eafffde4 	b	40006288 <CTControlHandle+0x8c>

				    CTCtrlParArry[CtrlID][13] = Data0;
				    CTCtrlParArry[CtrlID][16] = CyTrue;
				    getData = glEp0Buffer[0];
		  		    //CyU3PDebugPrint (4, "The Ex Mode set value(CT) %d %d!\r\n", CtrlID, CTCtrlParArry[CtrlID][13]); // additional debug
		  		    switch (getData){
40006af4:	e3a0c0ff 	mov	ip, #255	; 0xff
40006af8:	e1a08000 	mov	r8, r0
40006afc:	e1a0600c 	mov	r6, ip
40006b00:	eafffde0 	b	40006288 <CTControlHandle+0x8c>
						  CTCtrlParArry[CtrlID][13] = Data0;
						  CTCtrlParArry[CtrlID][14] = Data1;
						  CTCtrlParArry[CtrlID][16] = CyTrue;
						  CtrlParArry[ExtShutCtlID0][13] = shutter; //set extension shutter current value
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006b04:	e3a00000 	mov	r0, #0
40006b08:	e3a01001 	mov	r1, #1
40006b0c:	e1a02000 	mov	r2, r0
40006b10:	eb005d5e 	bl	4001e090 <CyU3PUsbStall>
40006b14:	eafffe94 	b	4000656c <CTControlHandle+0x370>

							 CTCtrlParArry[CtrlID][13] = Data0;
							 CTCtrlParArry[CtrlID][14] = Data1;
							 CTCtrlParArry[CtrlID][16] = CyTrue;
					  }else{
						  CyU3PUsbStall (0, CyTrue, CyFalse);
40006b18:	e3a01001 	mov	r1, #1
40006b1c:	e1a02000 	mov	r2, r0
40006b20:	eb005d5a 	bl	4001e090 <CyU3PUsbStall>
40006b24:	eafffe90 	b	4000656c <CTControlHandle+0x370>
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
					  else if(getData == 0xff)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, WIDEDATA, dataIdx);  //wide-angle direction
40006b28:	e3a0e008 	mov	lr, #8
40006b2c:	e3a0c000 	mov	ip, #0
40006b30:	e1a00006 	mov	r0, r6
40006b34:	e3a01023 	mov	r1, #35	; 0x23
40006b38:	e1a0200b 	mov	r2, fp
40006b3c:	e58de000 	str	lr, [sp]
40006b40:	e58dc004 	str	ip, [sp, #4]
40006b44:	ebfff25b 	bl	400034b8 <cmdSet>
40006b48:	eafffe5d 	b	400064c4 <CTControlHandle+0x2c8>
					  getData1 = glEp0Buffer[1];
#if 1
					  dataIdx = 0;
					  CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
					  if(getData == 1)
						  cmdSet(cmdQuptr, 0x23, RegAdd0, devAdd, TELEDATA, dataIdx);  //telephoto direction
40006b4c:	e3a08004 	mov	r8, #4
40006b50:	e3a0e000 	mov	lr, #0
40006b54:	e1a00006 	mov	r0, r6
40006b58:	e3a01023 	mov	r1, #35	; 0x23
40006b5c:	e1a0200b 	mov	r2, fp
40006b60:	e88d4100 	stm	sp, {r8, lr}
40006b64:	ebfff253 	bl	400034b8 <cmdSet>
40006b68:	eafffe55 	b	400064c4 <CTControlHandle+0x2c8>
40006b6c:	40033144 	.word	0x40033144
40006b70:	40030000 	.word	0x40030000
40006b74:	40030f90 	.word	0x40030f90
40006b78:	400117c4 	.word	0x400117c4
40006b7c:	400117e8 	.word	0x400117e8
40006b80:	40030fe8 	.word	0x40030fe8
40006b84:	40032ec4 	.word	0x40032ec4
40006b88:	40011778 	.word	0x40011778
40006b8c:	0000ffff 	.word	0x0000ffff
40006b90:	400117a0 	.word	0x400117a0

40006b94 <UVCAppEP0Thread_Entry>:
 * Entry function for the UVC control request processing thread.
 */
void
UVCAppEP0Thread_Entry (
        uint32_t input)
{
40006b94:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40006b98:	e59f4b40 	ldr	r4, [pc, #2880]	; 400076e0 <UVCAppEP0Thread_Entry+0xb4c>
40006b9c:	e59f6b40 	ldr	r6, [pc, #2880]	; 400076e4 <UVCAppEP0Thread_Entry+0xb50>
40006ba0:	e59fab40 	ldr	sl, [pc, #2880]	; 400076e8 <UVCAppEP0Thread_Entry+0xb54>
40006ba4:	e59f9b40 	ldr	r9, [pc, #2880]	; 400076ec <UVCAppEP0Thread_Entry+0xb58>
40006ba8:	e59f8b40 	ldr	r8, [pc, #2880]	; 400076f0 <UVCAppEP0Thread_Entry+0xb5c>
40006bac:	e59f7b40 	ldr	r7, [pc, #2880]	; 400076f4 <UVCAppEP0Thread_Entry+0xb60>
40006bb0:	e24dd044 	sub	sp, sp, #68	; 0x44
    CyU3PDmaBuffer_t    interStabuf;

    for (;;)
    {
        /* Wait for a Video control or streaming related request on the control endpoint. */
        if (CyU3PEventGet (&glFxUVCEvent, eventMask, CYU3P_EVENT_OR_CLEAR, &eventFlag,
40006bb4:	e1a05004 	mov	r5, r4
40006bb8:	e3e0c000 	mvn	ip, #0
40006bbc:	e59f0b1c 	ldr	r0, [pc, #2844]	; 400076e0 <UVCAppEP0Thread_Entry+0xb4c>
40006bc0:	e3a0104c 	mov	r1, #76	; 0x4c
40006bc4:	e3a02001 	mov	r2, #1
40006bc8:	e28d3038 	add	r3, sp, #56	; 0x38
40006bcc:	e58dc000 	str	ip, [sp]
40006bd0:	eb000cf0 	bl	40009f98 <_txe_event_flags_get>
40006bd4:	e3500000 	cmp	r0, #0
40006bd8:	1a000030 	bne	40006ca0 <UVCAppEP0Thread_Entry+0x10c>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
40006bdc:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
40006be0:	e3530000 	cmp	r3, #0
40006be4:	0a000089 	beq	40006e10 <UVCAppEP0Thread_Entry+0x27c>
                {
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
40006be8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006bec:	e313000c 	tst	r3, #12
40006bf0:	1a000072 	bne	40006dc0 <UVCAppEP0Thread_Entry+0x22c>
            		"bRequest = 0x%x wValue = 0x%x wIndex = 0x%x wLength = 0x%x isflag 0x%x\r\n",
            		usbSpeed, eventFlag, bmReqType, bRequest, wValue, wIndex, wLength, 0/*isFlag*/); /* additional debug message */
            //CyU3PDebugPrint (4, "fb = %d pb = %d pbc = %d pbcp = %d\r\n", fbbak, pbbak, pbcbak, pbcpbak);
            //fbbak=0;pbbak=0;pbcbak=0;pbcpbak=0;
//#endif
            if (eventFlag & CY_FX_UVC_VIDEO_CONTROL_REQUEST_EVENT)
40006bf4:	e3130004 	tst	r3, #4
40006bf8:	0a00001c 	beq	40006c70 <UVCAppEP0Thread_Entry+0xdc>
            {
            	switch ((wIndex >> 8))
40006bfc:	e1d8e0b0 	ldrh	lr, [r8]
40006c00:	e1a0242e 	lsr	r2, lr, #8
40006c04:	e3520003 	cmp	r2, #3
40006c08:	979ff102 	ldrls	pc, [pc, r2, lsl #2]
40006c0c:	ea000012 	b	40006c5c <UVCAppEP0Thread_Entry+0xc8>
40006c10:	40006c5c 	.word	0x40006c5c
40006c14:	40006d40 	.word	0x40006d40
40006c18:	40006c20 	.word	0x40006c20
40006c1c:	40006d7c 	.word	0x40006d7c
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006c20:	e1d920b0 	ldrh	r2, [r9]
40006c24:	e3520c06 	cmp	r2, #1536	; 0x600
40006c28:	0a000203 	beq	4000743c <UVCAppEP0Thread_Entry+0x8a8>
40006c2c:	8a0000d8 	bhi	40006f94 <UVCAppEP0Thread_Entry+0x400>
40006c30:	e3520c03 	cmp	r2, #768	; 0x300
40006c34:	0a0001fc 	beq	4000742c <UVCAppEP0Thread_Entry+0x898>
40006c38:	8a0001f3 	bhi	4000740c <UVCAppEP0Thread_Entry+0x878>
40006c3c:	e3520c01 	cmp	r2, #256	; 0x100
40006c40:	0a000189 	beq	4000726c <UVCAppEP0Thread_Entry+0x6d8>
40006c44:	e3520c02 	cmp	r2, #512	; 0x200
40006c48:	0a000183 	beq	4000725c <UVCAppEP0Thread_Entry+0x6c8>
        default:
            /*
             * Only the  control is supported as of now. Add additional code here to support
             * other controls.
             */
        	CyU3PDebugPrint (4, "The default setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
40006c4c:	e59f1aa4 	ldr	r1, [pc, #2724]	; 400076f8 <UVCAppEP0Thread_Entry+0xb64>
40006c50:	e5da3000 	ldrb	r3, [sl]
40006c54:	e3a00004 	mov	r0, #4
40006c58:	eb0031a4 	bl	400132f0 <CyU3PDebugPrint>
                        UVCHandleExtensionUnitRqts ();
                        break;

                    default:
                        /* Unsupported request. Fail by stalling the control endpoint. */
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006c5c:	e3a00000 	mov	r0, #0
40006c60:	e3a01001 	mov	r1, #1
40006c64:	e1a02000 	mov	r2, r0
40006c68:	eb005d08 	bl	4001e090 <CyU3PUsbStall>
40006c6c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
                        break;
                }
            }

            if (eventFlag & CY_FX_UVC_VIDEO_STREAM_REQUEST_EVENT)
40006c70:	e3130008 	tst	r3, #8
40006c74:	0a000007 	beq	40006c98 <UVCAppEP0Thread_Entry+0x104>
            {
                //CyU3PDebugPrint (4, "start a stream req. ctrl. wIndex 0x%x\r\n", wIndex);

                if (wIndex != CY_FX_UVC_STREAM_INTERFACE)
40006c78:	e1d830b0 	ldrh	r3, [r8]
40006c7c:	e3530001 	cmp	r3, #1
40006c80:	0a000068 	beq	40006e28 <UVCAppEP0Thread_Entry+0x294>
                        break;
                }
                break;

        default:
            CyU3PUsbStall (0, CyTrue, CyFalse);
40006c84:	e3a00000 	mov	r0, #0
40006c88:	e3a01001 	mov	r1, #1
40006c8c:	e1a02000 	mov	r2, r0
40006c90:	eb005cfe 	bl	4001e090 <CyU3PUsbStall>
40006c94:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
                    UVCHandleVideoStreamingRqts ();
                }
            }

            /* handle interrupt status event */
            if (eventFlag & VD_FX_INT_STA_EVENT)
40006c98:	e3130040 	tst	r3, #64	; 0x40
40006c9c:	1a000001 	bne	40006ca8 <UVCAppEP0Thread_Entry+0x114>
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006ca0:	eb000fa5 	bl	4000ab3c <_txe_thread_relinquish>
    }
40006ca4:	eaffffc3 	b	40006bb8 <UVCAppEP0Thread_Entry+0x24>
            if (eventFlag & VD_FX_INT_STA_EVENT)
            {

            	//CyU3PDebugPrint (4, "start a interrupt req. ctrl. snap flag 0x%x\r\n", snapButFlag);
            	/** preparing interrupt status data **/
            	CyU3PGpioSimpleGetValue (SENSOR_SNAPSHOT_GPIO, valueptr);// get button value 1:release 0:press
40006ca8:	e3a00018 	mov	r0, #24
40006cac:	e28d1034 	add	r1, sp, #52	; 0x34
40006cb0:	eb0070be 	bl	40022fb0 <CyU3PGpioSimpleGetValue>

				//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);

#if 1 //for real button
				if(value&&(!snapButFlag)){
40006cb4:	e59d3034 	ldr	r3, [sp, #52]	; 0x34
40006cb8:	e3530000 	cmp	r3, #0
40006cbc:	0a00006d 	beq	40006e78 <UVCAppEP0Thread_Entry+0x2e4>
40006cc0:	e5d63643 	ldrb	r3, [r6, #1603]	; 0x643
40006cc4:	e3530000 	cmp	r3, #0
40006cc8:	1afffff4 	bne	40006ca0 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006ccc:	e597c000 	ldr	ip, [r7]
40006cd0:	e3a0b002 	mov	fp, #2
40006cd4:	e5ccb000 	strb	fp, [ip]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006cd8:	e5971000 	ldr	r1, [r7]
40006cdc:	e3a0b001 	mov	fp, #1
40006ce0:	e5c1b001 	strb	fp, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006ce4:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006ce8:	e3a0eb01 	mov	lr, #1024	; 0x400
#if 1 //for real button
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006cec:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x00; //button release
40006cf0:	e5972000 	ldr	r2, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006cf4:	e3e01000 	mvn	r1, #0
				if(value&&(!snapButFlag)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release
40006cf8:	e5c23003 	strb	r3, [r2, #3]

					interStabuf.buffer = glInterStaBuffer;
40006cfc:	e597c000 	ldr	ip, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006d00:	e3a02004 	mov	r2, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006d04:	e59f09f0 	ldr	r0, [pc, #2544]	; 400076fc <UVCAppEP0Thread_Entry+0xb68>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006d08:	e1cd22bc 	strh	r2, [sp, #44]	; 0x2c
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006d0c:	e1cde2be 	strh	lr, [sp, #46]	; 0x2e
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x00; //button release

					interStabuf.buffer = glInterStaBuffer;
40006d10:	e58dc028 	str	ip, [sp, #40]	; 0x28
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006d14:	e1cd33b0 	strh	r3, [sp, #48]	; 0x30

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006d18:	eb0040f0 	bl	400170e0 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006d1c:	e59f09d8 	ldr	r0, [pc, #2520]	; 400076fc <UVCAppEP0Thread_Entry+0xb68>
40006d20:	e28d1028 	add	r1, sp, #40	; 0x28
40006d24:	eb00405f 	bl	40016ea8 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006d28:	e2502000 	subs	r2, r0, #0
40006d2c:	1a000191 	bne	40007378 <UVCAppEP0Thread_Entry+0x7e4>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
40006d30:	e59f39ac 	ldr	r3, [pc, #2476]	; 400076e4 <UVCAppEP0Thread_Entry+0xb50>
40006d34:	e5c3b643 	strb	fp, [r3, #1603]	; 0x643
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006d38:	eb000f7f 	bl	4000ab3c <_txe_thread_relinquish>
40006d3c:	eaffff9d 	b	40006bb8 <UVCAppEP0Thread_Entry+0x24>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006d40:	e1d920b0 	ldrh	r2, [r9]
40006d44:	e3520c06 	cmp	r2, #1536	; 0x600
40006d48:	0a0000ed 	beq	40007104 <UVCAppEP0Thread_Entry+0x570>
40006d4c:	8a00009b 	bhi	40006fc0 <UVCAppEP0Thread_Entry+0x42c>
40006d50:	e3520c03 	cmp	r2, #768	; 0x300
40006d54:	0a000138 	beq	4000723c <UVCAppEP0Thread_Entry+0x6a8>
40006d58:	8a00012f 	bhi	4000721c <UVCAppEP0Thread_Entry+0x688>
40006d5c:	e3520c01 	cmp	r2, #256	; 0x100
40006d60:	0a000180 	beq	40007368 <UVCAppEP0Thread_Entry+0x7d4>
40006d64:	e3520c02 	cmp	r2, #512	; 0x200
40006d68:	1affffb7 	bne	40006c4c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
    		break;
        case CY_FX_UVC_CT_AE_MODE_CONTROL:
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
40006d6c:	e3a00001 	mov	r0, #1
40006d70:	ebfffd21 	bl	400061fc <CTControlHandle>
40006d74:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006d78:	eaffffbc 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006d7c:	e1d930b0 	ldrh	r3, [r9]
40006d80:	e3530c09 	cmp	r3, #2304	; 0x900
40006d84:	0a000246 	beq	400076a4 <UVCAppEP0Thread_Entry+0xb10>
40006d88:	8a000094 	bhi	40006fe0 <UVCAppEP0Thread_Entry+0x44c>
40006d8c:	e3530b01 	cmp	r3, #1024	; 0x400
40006d90:	0a00023f 	beq	40007694 <UVCAppEP0Thread_Entry+0xb00>
40006d94:	8a0001b1 	bhi	40007460 <UVCAppEP0Thread_Entry+0x8cc>
40006d98:	e3530c02 	cmp	r3, #512	; 0x200
40006d9c:	0a000238 	beq	40007684 <UVCAppEP0Thread_Entry+0xaf0>
40006da0:	e3530c03 	cmp	r3, #768	; 0x300
40006da4:	0a000211 	beq	400075f0 <UVCAppEP0Thread_Entry+0xa5c>
40006da8:	e3530c01 	cmp	r3, #256	; 0x100
40006dac:	1affffaa 	bne	40006c5c <UVCAppEP0Thread_Entry+0xc8>
    {
    	case CY_FX_EXT_CONTROL_1SHUTTER: // shutter CONTROL1
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
40006db0:	e3a00010 	mov	r0, #16
40006db4:	ebfff920 	bl	4000523c <ControlHandle>
40006db8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006dbc:	eaffffab 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
                    isUsbConnected = CyTrue;
                }
            }
//#ifdef DbgInfo
            if((eventFlag & eventMask) & ~VD_FX_INT_STA_EVENT)
            CyU3PDebugPrint (4, "USB speed = %d evenflag = 0x%x bmReqType = 0x%x\r\n"
40006dc0:	e59fb938 	ldr	fp, [pc, #2360]	; 40007700 <UVCAppEP0Thread_Entry+0xb6c>
40006dc4:	e1d9c0b0 	ldrh	ip, [r9]
40006dc8:	e1d800b0 	ldrh	r0, [r8]
40006dcc:	e59f1930 	ldr	r1, [pc, #2352]	; 40007704 <UVCAppEP0Thread_Entry+0xb70>
40006dd0:	e5dbe000 	ldrb	lr, [fp]
40006dd4:	e5dab000 	ldrb	fp, [sl]
40006dd8:	e58d000c 	str	r0, [sp, #12]
40006ddc:	e58dc008 	str	ip, [sp, #8]
40006de0:	e1d1c0b0 	ldrh	ip, [r1]
40006de4:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
40006de8:	e58db004 	str	fp, [sp, #4]
40006dec:	e3a00004 	mov	r0, #4
40006df0:	e59f1910 	ldr	r1, [pc, #2320]	; 40007708 <UVCAppEP0Thread_Entry+0xb74>
40006df4:	e3a0b000 	mov	fp, #0
40006df8:	e58de000 	str	lr, [sp]
40006dfc:	e58dc010 	str	ip, [sp, #16]
40006e00:	e58db014 	str	fp, [sp, #20]
40006e04:	eb003139 	bl	400132f0 <CyU3PDebugPrint>
40006e08:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006e0c:	eaffff78 	b	40006bf4 <UVCAppEP0Thread_Entry+0x60>
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006e10:	eb005877 	bl	4001cff4 <CyU3PUsbGetSpeed>
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
40006e14:	e3500000 	cmp	r0, #0
                    CYU3P_WAIT_FOREVER) == CY_U3P_SUCCESS)
        {
            /* If this is the first request received during this connection, query the connection speed. */
            if (!isUsbConnected)
            {
                usbSpeed = CyU3PUsbGetSpeed ();
40006e18:	e5c50048 	strb	r0, [r5, #72]	; 0x48
                if (usbSpeed != CY_U3P_NOT_CONNECTED)
                {
                    isUsbConnected = CyTrue;
40006e1c:	13a00001 	movne	r0, #1
40006e20:	1585003c 	strne	r0, [r5, #60]	; 0x3c
40006e24:	eaffff6f 	b	40006be8 <UVCAppEP0Thread_Entry+0x54>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006e28:	e1d920b0 	ldrh	r2, [r9]
40006e2c:	e3520c03 	cmp	r2, #768	; 0x300
40006e30:	0a00009c 	beq	400070a8 <UVCAppEP0Thread_Entry+0x514>
40006e34:	8a000032 	bhi	40006f04 <UVCAppEP0Thread_Entry+0x370>
40006e38:	e3520c01 	cmp	r2, #256	; 0x100
40006e3c:	0a0000a6 	beq	400070dc <UVCAppEP0Thread_Entry+0x548>
40006e40:	e3520c02 	cmp	r2, #512	; 0x200
40006e44:	1affff8e 	bne	40006c84 <UVCAppEP0Thread_Entry+0xf0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
40006e48:	e5da3000 	ldrb	r3, [sl]
40006e4c:	e3530081 	cmp	r3, #129	; 0x81
40006e50:	0a0000a6 	beq	400070f0 <UVCAppEP0Thread_Entry+0x55c>
40006e54:	8a000150 	bhi	4000739c <UVCAppEP0Thread_Entry+0x808>
40006e58:	e3530001 	cmp	r3, #1
40006e5c:	0a0001ae 	beq	4000751c <UVCAppEP0Thread_Entry+0x988>
                            }
                            CyU3PDebugPrint (4, "Get UVC still Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
                        }
                        break;
                    default:
                        CyU3PUsbStall (0, CyTrue, CyFalse);
40006e60:	e3a00000 	mov	r0, #0
40006e64:	e3a01001 	mov	r1, #1
40006e68:	e1a02000 	mov	r2, r0
40006e6c:	eb005c87 	bl	4001e090 <CyU3PUsbStall>
40006e70:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006e74:	eaffff87 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
40006e78:	e5d6e643 	ldrb	lr, [r6, #1603]	; 0x643
40006e7c:	e35e0000 	cmp	lr, #0
40006e80:	0affff86 	beq	40006ca0 <UVCAppEP0Thread_Entry+0x10c>
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
40006e84:	e597c000 	ldr	ip, [r7]
40006e88:	e3a0b002 	mov	fp, #2
40006e8c:	e5ccb000 	strb	fp, [ip]
					glInterStaBuffer[1] = 0x01;  //number of VS interface
40006e90:	e5971000 	ldr	r1, [r7]
40006e94:	e3a0e001 	mov	lr, #1
40006e98:	e5c1e001 	strb	lr, [r1, #1]
					glInterStaBuffer[2] = 0x00;
40006e9c:	e5970000 	ldr	r0, [r7]
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006ea0:	e3a0cb01 	mov	ip, #1024	; 0x400
					snapButFlag = 1;//snap button is masked.
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
40006ea4:	e5c03002 	strb	r3, [r0, #2]
					glInterStaBuffer[3] = 0x01; //button release
40006ea8:	e5972000 	ldr	r2, [r7]
					interStabuf.status = 0;

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006eac:	e3e01000 	mvn	r1, #0
				}else if(snapButFlag&&(!value)){
					//CyU3PDebugPrint (4, "The interrupt event %d %d\r\n", testSnap, snapButFlag);
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release
40006eb0:	e5c2e003 	strb	lr, [r2, #3]

					interStabuf.buffer = glInterStaBuffer;
40006eb4:	e597b000 	ldr	fp, [r7]
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006eb8:	e3a02004 	mov	r2, #4

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ebc:	e59f0838 	ldr	r0, [pc, #2104]	; 400076fc <UVCAppEP0Thread_Entry+0xb68>

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
					interStabuf.status = 0;

					interStabuf.count = 4;
40006ec0:	e1cd22bc 	strh	r2, [sp, #44]	; 0x2c
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
					interStabuf.size   = 1024;
40006ec4:	e1cdc2be 	strh	ip, [sp, #46]	; 0x2e
					glInterStaBuffer[0] = 0x02;  //VS interface
					glInterStaBuffer[1] = 0x01;  //number of VS interface
					glInterStaBuffer[2] = 0x00;
					glInterStaBuffer[3] = 0x01; //button release

					interStabuf.buffer = glInterStaBuffer;
40006ec8:	e58db028 	str	fp, [sp, #40]	; 0x28
					interStabuf.size   = 1024;
					interStabuf.status = 0;
40006ecc:	e1cd33b0 	strh	r3, [sp, #48]	; 0x30
40006ed0:	e1a0b003 	mov	fp, r3

					interStabuf.count = 4;

					/** wait unitll the responses has gone out **/
					CyU3PDmaChannelWaitForCompletion(&glChHandleInterStat, CYU3P_WAIT_FOREVER);
40006ed4:	eb004081 	bl	400170e0 <CyU3PDmaChannelWaitForCompletion>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
40006ed8:	e59f081c 	ldr	r0, [pc, #2076]	; 400076fc <UVCAppEP0Thread_Entry+0xb68>
40006edc:	e28d1028 	add	r1, sp, #40	; 0x28
40006ee0:	eb003ff0 	bl	40016ea8 <CyU3PDmaChannelSetupSendBuffer>
					if (apiRetStatus != CY_U3P_SUCCESS)
40006ee4:	e2502000 	subs	r2, r0, #0
40006ee8:	1a0000e3 	bne	4000727c <UVCAppEP0Thread_Entry+0x6e8>
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006eec:	e59fe7f0 	ldr	lr, [pc, #2032]	; 400076e4 <UVCAppEP0Thread_Entry+0xb50>
					stiflag = 0xFF;
40006ef0:	e3a030ff 	mov	r3, #255	; 0xff
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
						CyFxAppErrorHandler (apiRetStatus);
					}

					snapButFlag = 0; //snap button is not masked.
40006ef4:	e5ceb643 	strb	fp, [lr, #1603]	; 0x643
					stiflag = 0xFF;
40006ef8:	e58430a0 	str	r3, [r4, #160]	; 0xa0
                }
            }
#endif
        }
        /* Allow other ready threads to run. */
        CyU3PThreadRelinquish ();
40006efc:	eb000f0e 	bl	4000ab3c <_txe_thread_relinquish>
40006f00:	eaffff2c 	b	40006bb8 <UVCAppEP0Thread_Entry+0x24>
        void)
{
    CyU3PReturnStatus_t apiRetStatus = CY_U3P_SUCCESS;
    uint16_t readCount;

    switch (wValue)
40006f04:	e3520b01 	cmp	r2, #1024	; 0x400
40006f08:	0a000041 	beq	40007014 <UVCAppEP0Thread_Entry+0x480>
40006f0c:	e3520c05 	cmp	r2, #1280	; 0x500
40006f10:	1affff5b 	bne	40006c84 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
40006f14:	e5da2000 	ldrb	r2, [sl]
40006f18:	e3520081 	cmp	r2, #129	; 0x81
40006f1c:	0a000073 	beq	400070f0 <UVCAppEP0Thread_Entry+0x55c>
40006f20:	8a000149 	bhi	4000744c <UVCAppEP0Thread_Entry+0x8b8>
40006f24:	e3520001 	cmp	r2, #1
40006f28:	1affff55 	bne	40006c84 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40006f2c:	e3a00020 	mov	r0, #32
40006f30:	e59f17d4 	ldr	r1, [pc, #2004]	; 4000770c <UVCAppEP0Thread_Entry+0xb78>
40006f34:	e28d203e 	add	r2, sp, #62	; 0x3e
40006f38:	eb0057bb 	bl	4001ce2c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
40006f3c:	e3500000 	cmp	r0, #0
40006f40:	1a0001c9 	bne	4000766c <UVCAppEP0Thread_Entry+0xad8>
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
40006f44:	e3a02000 	mov	r2, #0
40006f48:	e59f0790 	ldr	r0, [pc, #1936]	; 400076e0 <UVCAppEP0Thread_Entry+0xb4c>
40006f4c:	e3a01080 	mov	r1, #128	; 0x80
40006f50:	eb000c40 	bl	4000a058 <_txe_event_flags_set>
                            if (apiRetStatus != CY_U3P_SUCCESS)
40006f54:	e2502000 	subs	r2, r0, #0
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STIL_EVENT failed %x\n", apiRetStatus);
                            }
    #endif
                            else{
                            stiflag = 0xF0;//set still trigger flag
40006f58:	03a0b0f0 	moveq	fp, #240	; 0xf0
40006f5c:	0585b0a0 	streq	fp, [r5, #160]	; 0xa0
                        if (apiRetStatus == CY_U3P_SUCCESS)
                        {
    #if 1
                            /* We can start still streaming video now. */
                            apiRetStatus = CyU3PEventSet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_OR);
                            if (apiRetStatus != CY_U3P_SUCCESS)
40006f60:	0a000002 	beq	40006f70 <UVCAppEP0Thread_Entry+0x3dc>
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STIL_EVENT failed %x\n", apiRetStatus);
40006f64:	e59f17a4 	ldr	r1, [pc, #1956]	; 40007710 <UVCAppEP0Thread_Entry+0xb7c>
40006f68:	e3a00004 	mov	r0, #4
40006f6c:	eb0030df 	bl	400132f0 <CyU3PDebugPrint>
    #endif
                            else{
                            stiflag = 0xF0;//set still trigger flag
                            //stillcont = 0;
                            }
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40006f70:	e5d4c07d 	ldrb	ip, [r4, #125]	; 0x7d
40006f74:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40006f78:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
40006f7c:	e3a00004 	mov	r0, #4
40006f80:	e59f178c 	ldr	r1, [pc, #1932]	; 40007714 <UVCAppEP0Thread_Entry+0xb80>
40006f84:	e58dc000 	str	ip, [sp]
40006f88:	eb0030d8 	bl	400132f0 <CyU3PDebugPrint>
40006f8c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006f90:	eaffff40 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006f94:	e3520c0a 	cmp	r2, #2560	; 0xa00
40006f98:	0a000113 	beq	400073ec <UVCAppEP0Thread_Entry+0x858>
40006f9c:	8a000108 	bhi	400073c4 <UVCAppEP0Thread_Entry+0x830>
40006fa0:	e3520c07 	cmp	r2, #1792	; 0x700
40006fa4:	0a000102 	beq	400073b4 <UVCAppEP0Thread_Entry+0x820>
40006fa8:	e3520b02 	cmp	r2, #2048	; 0x800
40006fac:	1affff26 	bne	40006c4c <UVCAppEP0Thread_Entry+0xb8>
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
          		break;
       case CY_FX_UVC_PU_SHARPNESS_CONTROL:
          		CtrlAdd = CtrlParArry[ShapCtlID7][0];
          		ControlHandle(ShapCtlID7);
40006fb0:	e3a00007 	mov	r0, #7
40006fb4:	ebfff8a0 	bl	4000523c <ControlHandle>
40006fb8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40006fbc:	eaffff2b 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
40006fc0:	e3520c09 	cmp	r2, #2304	; 0x900
40006fc4:	0a000144 	beq	400074dc <UVCAppEP0Thread_Entry+0x948>
40006fc8:	8a000139 	bhi	400074b4 <UVCAppEP0Thread_Entry+0x920>
40006fcc:	e3520c07 	cmp	r2, #1792	; 0x700
40006fd0:	0a00012b 	beq	40007484 <UVCAppEP0Thread_Entry+0x8f0>
40006fd4:	e3520b02 	cmp	r2, #2048	; 0x800
40006fd8:	1affff1b 	bne	40006c4c <UVCAppEP0Thread_Entry+0xb8>
40006fdc:	eaffff23 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40006fe0:	e3530c0f 	cmp	r3, #3840	; 0xf00
40006fe4:	0a00019c 	beq	4000765c <UVCAppEP0Thread_Entry+0xac8>
40006fe8:	8a000049 	bhi	40007114 <UVCAppEP0Thread_Entry+0x580>
40006fec:	e3530c0b 	cmp	r3, #2816	; 0xb00
40006ff0:	0a000195 	beq	4000764c <UVCAppEP0Thread_Entry+0xab8>
40006ff4:	e3530c0d 	cmp	r3, #3328	; 0xd00
40006ff8:	0a00018f 	beq	4000763c <UVCAppEP0Thread_Entry+0xaa8>
40006ffc:	e3530c0a 	cmp	r3, #2560	; 0xa00
40007000:	1affff15 	bne	40006c5c <UVCAppEP0Thread_Entry+0xc8>
      		ControlHandle(ExtNDlevCtlID8);
     		break;
    	case CY_FX_EXT_CONTROL_10EXPOSURE_MODE: //AEx mode CONTROL10
    		if(CamMode == 1){//only 720p support
				CtrlAdd = CtrlParArry[ExtAexModCtlID9][0];
				ControlHandle(ExtAexModCtlID9);
40007004:	e3a00019 	mov	r0, #25
40007008:	ebfff88b 	bl	4000523c <ControlHandle>
4000700c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007010:	eaffff16 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
40007014:	e5da2000 	ldrb	r2, [sl]
40007018:	e3520081 	cmp	r2, #129	; 0x81
4000701c:	0a000026 	beq	400070bc <UVCAppEP0Thread_Entry+0x528>
40007020:	8a00009e 	bhi	400072a0 <UVCAppEP0Thread_Entry+0x70c>
40007024:	e3520001 	cmp	r2, #1
40007028:	1affff15 	bne	40006c84 <UVCAppEP0Thread_Entry+0xf0>
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        /* The host has selected the parameters for the video stream. Check the desired
                           resolution settings, configure the sensor and start the video stream.
                           */
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000702c:	e3a00020 	mov	r0, #32
40007030:	e59f16d4 	ldr	r1, [pc, #1748]	; 4000770c <UVCAppEP0Thread_Entry+0xb78>
40007034:	e28d203e 	add	r2, sp, #62	; 0x3e
40007038:	eb00577b 	bl	4001ce2c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
4000703c:	e3500000 	cmp	r0, #0
40007040:	1affff13 	bne	40006c94 <UVCAppEP0Thread_Entry+0x100>
                            if (apiRetStatus != CY_U3P_SUCCESS)
                            {
                                CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
                            }
	#endif
                           switch (glCommitCtrl[1])
40007044:	e5d5307d 	ldrb	r3, [r5, #125]	; 0x7d
40007048:	e3530001 	cmp	r3, #1
4000704c:	0a000198 	beq	400076b4 <UVCAppEP0Thread_Entry+0xb20>
40007050:	e3530002 	cmp	r3, #2
40007054:	1a000009 	bne	40007080 <UVCAppEP0Thread_Entry+0x4ec>
                             {
                             	case 2: //720
                             		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007058:	e3a01030 	mov	r1, #48	; 0x30
4000705c:	e3a02001 	mov	r2, #1
40007060:	e2833050 	add	r3, r3, #80	; 0x50
40007064:	e3a0000b 	mov	r0, #11
40007068:	ebfff5ad 	bl	40004724 <SensorSetIrisControl>
                             		//CyU3PThreadSleep(500);
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x1);
4000706c:	e59f16a4 	ldr	r1, [pc, #1700]	; 40007718 <UVCAppEP0Thread_Entry+0xb84>
40007070:	e3a0200b 	mov	r2, #11
40007074:	e3a03001 	mov	r3, #1
40007078:	e3a00004 	mov	r0, #4
4000707c:	eb00309b 	bl	400132f0 <CyU3PDebugPrint>
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x0);
                             		break;
                              	default:
                             		break;
                             }
                            setstilRes = glCommitCtrl[1];
40007080:	e5d4e07d 	ldrb	lr, [r4, #125]	; 0x7d

                        	CyU3PDebugPrint (4, "UVC still commit control set %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40007084:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40007088:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
4000708c:	e3a00004 	mov	r0, #4
40007090:	e59f1684 	ldr	r1, [pc, #1668]	; 4000771c <UVCAppEP0Thread_Entry+0xb88>
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x0);
                             		break;
                              	default:
                             		break;
                             }
                            setstilRes = glCommitCtrl[1];
40007094:	e5c4e09d 	strb	lr, [r4, #157]	; 0x9d

                        	CyU3PDebugPrint (4, "UVC still commit control set %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40007098:	e58de000 	str	lr, [sp]
4000709c:	eb003093 	bl	400132f0 <CyU3PDebugPrint>
400070a0:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400070a4:	eafffefb 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400070a8:	e5da2000 	ldrb	r2, [sl]
400070ac:	e3520083 	cmp	r2, #131	; 0x83
400070b0:	8a0000a7 	bhi	40007354 <UVCAppEP0Thread_Entry+0x7c0>
400070b4:	e3520081 	cmp	r2, #129	; 0x81
400070b8:	3a000083 	bcc	400072cc <UVCAppEP0Thread_Entry+0x738>
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400070bc:	e5d42048 	ldrb	r2, [r4, #72]	; 0x48
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400070c0:	e3a0000b 	mov	r0, #11
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ:
                        if (usbSpeed == CY_U3P_SUPER_SPEED)
400070c4:	e3520003 	cmp	r2, #3
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl);
400070c8:	059f1650 	ldreq	r1, [pc, #1616]	; 40007720 <UVCAppEP0Thread_Entry+0xb8c>
                        }
                        else
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
400070cc:	159f1650 	ldrne	r1, [pc, #1616]	; 40007724 <UVCAppEP0Thread_Entry+0xb90>
400070d0:	eb0059c3 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
400070d4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400070d8:	eafffeee 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400070dc:	e5da2000 	ldrb	r2, [sl]
400070e0:	e3520083 	cmp	r2, #131	; 0x83
400070e4:	8a000035 	bhi	400071c0 <UVCAppEP0Thread_Entry+0x62c>
400070e8:	e3520081 	cmp	r2, #129	; 0x81
400070ec:	3a000011 	bcc	40007138 <UVCAppEP0Thread_Entry+0x5a4>
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_CUR_REQ://TODO for still trigger control
                        if (1 || usbSpeed == CY_U3P_SUPER_SPEED)// support both SS and HS
                        {
                            CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl);
400070f0:	e3a0001a 	mov	r0, #26
400070f4:	e59f162c 	ldr	r1, [pc, #1580]	; 40007728 <UVCAppEP0Thread_Entry+0xb94>
400070f8:	eb0059b9 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
400070fc:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007100:	eafffee4 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
      		break;
       case CY_FX_UVC_CT_FOCUS_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
40007104:	e3a00005 	mov	r0, #5
40007108:	ebfffc3b 	bl	400061fc <CTControlHandle>
4000710c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007110:	eafffed6 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007114:	e3530c11 	cmp	r3, #4352	; 0x1100
40007118:	0a0000fb 	beq	4000750c <UVCAppEP0Thread_Entry+0x978>
4000711c:	8a000036 	bhi	400071fc <UVCAppEP0Thread_Entry+0x668>
40007120:	e3530a01 	cmp	r3, #4096	; 0x1000
40007124:	1afffecc 	bne	40006c5c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
    		break;
		case CY_FX_EXT_CONTROL_16I2C_COMMAND: //I2C commands operation CONTROL16
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
40007128:	e3a0001f 	mov	r0, #31
4000712c:	ebfff842 	bl	4000523c <ControlHandle>
40007130:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007134:	eafffecd 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
40007138:	e3520001 	cmp	r2, #1
4000713c:	1affff47 	bne	40006e60 <UVCAppEP0Thread_Entry+0x2cc>
                    {
                        CyU3PUsbSendEP0Data (CY_FX_UVC_MAX_PROBE_SETTING, (uint8_t *)glProbeCtrl20);
                    }
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
40007140:	e3a00020 	mov	r0, #32
40007144:	e59f15c0 	ldr	r1, [pc, #1472]	; 4000770c <UVCAppEP0Thread_Entry+0xb78>
40007148:	e28d203e 	add	r2, sp, #62	; 0x3e
4000714c:	eb005736 	bl	4001ce2c <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)
40007150:	e3500000 	cmp	r0, #0
40007154:	1afffece 	bne	40006c94 <UVCAppEP0Thread_Entry+0x100>
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
40007158:	e5d5c080 	ldrb	ip, [r5, #128]	; 0x80
                    {
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
4000715c:	e5d5b07e 	ldrb	fp, [r5, #126]	; 0x7e
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
40007160:	e5d50081 	ldrb	r0, [r5, #129]	; 0x81
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
40007164:	e58dc01c 	str	ip, [sp, #28]
                    {
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
40007168:	e5c6b612 	strb	fp, [r6, #1554]	; 0x612
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
4000716c:	e59db01c 	ldr	fp, [sp, #28]
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
40007170:	e5d51082 	ldrb	r1, [r5, #130]	; 0x82
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
40007174:	e58d0020 	str	r0, [sp, #32]
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
40007178:	e5c6b614 	strb	fp, [r6, #1556]	; 0x614
                            glProbeCtrl[5] = glCommitCtrl[5];
4000717c:	e59db020 	ldr	fp, [sp, #32]
                            glProbeCtrl[6] = glCommitCtrl[6];
40007180:	e58d1024 	str	r1, [sp, #36]	; 0x24
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
40007184:	e5d5e07f 	ldrb	lr, [r5, #127]	; 0x7f
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
                            glProbeCtrl[7] = glCommitCtrl[7];
40007188:	e5d5c083 	ldrb	ip, [r5, #131]	; 0x83
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
4000718c:	e5c6b615 	strb	fp, [r6, #1557]	; 0x615
                            glProbeCtrl[6] = glCommitCtrl[6];
40007190:	e59db024 	ldr	fp, [sp, #36]	; 0x24
                            glProbeCtrl[7] = glCommitCtrl[7];
                            CyU3PDebugPrint (4, "Get UVC Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[3]);
40007194:	e5d5307c 	ldrb	r3, [r5, #124]	; 0x7c
40007198:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
4000719c:	e3a00004 	mov	r0, #4
400071a0:	e59f1584 	ldr	r1, [pc, #1412]	; 4000772c <UVCAppEP0Thread_Entry+0xb98>
                        //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                        {
                            /* Copy the relevant settings from the host provided data into the
                               active data structure. */
                            glProbeCtrl[2] = glCommitCtrl[2];
                            glProbeCtrl[3] = glCommitCtrl[3];
400071a4:	e5c6e613 	strb	lr, [r6, #1555]	; 0x613
                            glProbeCtrl[4] = glCommitCtrl[4];
                            glProbeCtrl[5] = glCommitCtrl[5];
                            glProbeCtrl[6] = glCommitCtrl[6];
400071a8:	e5c6b616 	strb	fp, [r6, #1558]	; 0x616
                            glProbeCtrl[7] = glCommitCtrl[7];
400071ac:	e5c6c617 	strb	ip, [r6, #1559]	; 0x617
                            CyU3PDebugPrint (4, "Get UVC Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[3]);
400071b0:	e58de000 	str	lr, [sp]
400071b4:	eb00304d 	bl	400132f0 <CyU3PDebugPrint>
400071b8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400071bc:	eafffeb5 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
    uint16_t readCount;

    switch (wValue)
    {
        case CY_FX_UVC_PROBE_CTRL:
            switch (bRequest)
400071c0:	e3520086 	cmp	r2, #134	; 0x86
400071c4:	0a000039 	beq	400072b0 <UVCAppEP0Thread_Entry+0x71c>
400071c8:	e3520087 	cmp	r2, #135	; 0x87
400071cc:	0affffc7 	beq	400070f0 <UVCAppEP0Thread_Entry+0x55c>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400071d0:	e3520085 	cmp	r2, #133	; 0x85
400071d4:	1affff21 	bne	40006e60 <UVCAppEP0Thread_Entry+0x2cc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400071d8:	e59f1550 	ldr	r1, [pc, #1360]	; 40007730 <UVCAppEP0Thread_Entry+0xb9c>
400071dc:	e3a00002 	mov	r0, #2
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = CY_FX_UVC_MAX_PROBE_SETTING;
400071e0:	e3a0301a 	mov	r3, #26
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
400071e4:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                        glEp0Buffer[1] = 0;
400071e8:	e3a03000 	mov	r3, #0
400071ec:	e5c43059 	strb	r3, [r4, #89]	; 0x59
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
400071f0:	eb00597b 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
400071f4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400071f8:	eafffea6 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400071fc:	e3530c12 	cmp	r3, #4608	; 0x1200
40007200:	0a000109 	beq	4000762c <UVCAppEP0Thread_Entry+0xa98>
40007204:	e3530c13 	cmp	r3, #4864	; 0x1300
40007208:	1afffe93 	bne	40006c5c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_GRID:   //BLD gain CONTROL19
    		CtrlAdd = ExUCtrlParArry[Ext1BLCGridCtlID6-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCGridCtlID6);
4000720c:	e3a00026 	mov	r0, #38	; 0x26
40007210:	ebfff809 	bl	4000523c <ControlHandle>
40007214:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007218:	eafffe94 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
4000721c:	e3520b01 	cmp	r2, #1024	; 0x400
40007220:	0a000009 	beq	4000724c <UVCAppEP0Thread_Entry+0x6b8>
40007224:	e3520c05 	cmp	r2, #1280	; 0x500
40007228:	1afffe87 	bne	40006c4c <UVCAppEP0Thread_Entry+0xb8>
			CTControlHandle(ExTmACtlID3);
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_RELATIVE_CONTROL:
     		CtrlAdd = CTCtrlParArry[ExTmRCtlID4][0];
      		CTControlHandle(ExTmRCtlID4);
4000722c:	e3a00004 	mov	r0, #4
40007230:	ebfffbf1 	bl	400061fc <CTControlHandle>
40007234:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007238:	eafffe8c 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CTCtrlParArry[AutoExMCtlID1][0];
   			CTControlHandle(AutoExMCtlID1);
    		break;
       case CY_FX_UVC_CT_AE_PRIORITY_CONTROL:
    	    CtrlAdd = CTCtrlParArry[AutoExPCtlID2][0];
			CTControlHandle(AutoExPCtlID2);
4000723c:	e3a00002 	mov	r0, #2
40007240:	ebfffbed 	bl	400061fc <CTControlHandle>
40007244:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007248:	eafffe88 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
			break;

       case CY_FX_UVC_CT_EXPOSURE_TIME_ABSOLUTE_CONTROL:
			CtrlAdd = CTCtrlParArry[ExTmACtlID3][0];
			CTControlHandle(ExTmACtlID3);
4000724c:	e3a00003 	mov	r0, #3
40007250:	ebfffbe9 	bl	400061fc <CTControlHandle>
40007254:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007258:	eafffe84 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
    		break;
        case CY_FX_UVC_PU_BRIGHTNESS_CONTROL:
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
4000725c:	e3a00001 	mov	r0, #1
40007260:	ebfff7f5 	bl	4000523c <ControlHandle>
40007264:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007268:	eafffe80 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
#endif
    switch (wValue)
    {
    	case CY_FX_UVC_PU_BACKLIGHT_COMPENSATION_CONTROL:
    		CtrlAdd = CtrlParArry[BLCCtlID0][0];
    		ControlHandle(BLCCtlID0);
4000726c:	e3a00000 	mov	r0, #0
40007270:	ebfff7f1 	bl	4000523c <ControlHandle>
40007274:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007278:	eafffe7c 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
4000727c:	e3a00004 	mov	r0, #4
40007280:	e59f14ac 	ldr	r1, [pc, #1196]	; 40007734 <UVCAppEP0Thread_Entry+0xba0>
40007284:	eb003019 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007288:	e59f14a8 	ldr	r1, [pc, #1192]	; 40007738 <UVCAppEP0Thread_Entry+0xba4>
4000728c:	e3a00004 	mov	r0, #4
40007290:	eb003016 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007294:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007298:	eb000676 	bl	40008c78 <_tx_thread_sleep>
4000729c:	eafffff9 	b	40007288 <UVCAppEP0Thread_Entry+0x6f4>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_COMIT_CTRL:
                switch (bRequest)
400072a0:	e3520085 	cmp	r2, #133	; 0x85
400072a4:	0affffcb 	beq	400071d8 <UVCAppEP0Thread_Entry+0x644>
400072a8:	e3520086 	cmp	r2, #134	; 0x86
400072ac:	1afffe74 	bne	40006c84 <UVCAppEP0Thread_Entry+0xf0>
                {
                    case CY_FX_USB_UVC_GET_INFO_REQ:
                        glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400072b0:	e1a00003 	mov	r0, r3

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400072b4:	e3a03003 	mov	r3, #3
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400072b8:	e59f1470 	ldr	r1, [pc, #1136]	; 40007730 <UVCAppEP0Thread_Entry+0xb9c>

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
400072bc:	e5c43058 	strb	r3, [r4, #88]	; 0x58
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400072c0:	eb005947 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
400072c4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400072c8:	eafffe72 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
400072cc:	e3520001 	cmp	r2, #1
400072d0:	1afffee2 	bne	40006e60 <UVCAppEP0Thread_Entry+0x2cc>
                        {
                            CyU3PUsbSendEP0Data (VD_FX_UVC_MAX_STLPROBE_SETTING, (uint8_t *)glProbeStilCtrl20);
                        }
                        break;
                    case CY_FX_USB_UVC_SET_CUR_REQ:
                        apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
400072d4:	e3a00020 	mov	r0, #32
400072d8:	e59f142c 	ldr	r1, [pc, #1068]	; 4000770c <UVCAppEP0Thread_Entry+0xb78>
400072dc:	e28d203e 	add	r2, sp, #62	; 0x3e
400072e0:	eb0056d1 	bl	4001ce2c <CyU3PUsbGetEP0Data>
                                glCommitCtrl, &readCount);
                        if (apiRetStatus == CY_U3P_SUCCESS)
400072e4:	e3500000 	cmp	r0, #0
400072e8:	1afffe69 	bne	40006c94 <UVCAppEP0Thread_Entry+0x100>
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400072ec:	e5d5c07f 	ldrb	ip, [r5, #127]	; 0x7f
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400072f0:	e5d5b07e 	ldrb	fp, [r5, #126]	; 0x7e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
400072f4:	e5d50080 	ldrb	r0, [r5, #128]	; 0x80
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
400072f8:	e58dc01c 	str	ip, [sp, #28]
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
400072fc:	e5c6b62e 	strb	fp, [r6, #1582]	; 0x62e
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
40007300:	e59db01c 	ldr	fp, [sp, #28]
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007304:	e5d51081 	ldrb	r1, [r5, #129]	; 0x81
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007308:	e58d0020 	str	r0, [sp, #32]
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
4000730c:	e5c6b62f 	strb	fp, [r6, #1583]	; 0x62f
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007310:	e59db020 	ldr	fp, [sp, #32]
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007314:	e58d1024 	str	r1, [sp, #36]	; 0x24
                        {
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007318:	e5d5e07d 	ldrb	lr, [r5, #125]	; 0x7d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
4000731c:	e5d5c082 	ldrb	ip, [r5, #130]	; 0x82
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
40007320:	e5c6b630 	strb	fp, [r6, #1584]	; 0x630
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
40007324:	e59db024 	ldr	fp, [sp, #36]	; 0x24
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
                            }
                            CyU3PDebugPrint (4, "Get UVC still Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40007328:	e5d5307c 	ldrb	r3, [r5, #124]	; 0x7c
4000732c:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
40007330:	e3a00004 	mov	r0, #4
40007334:	e59f1400 	ldr	r1, [pc, #1024]	; 4000773c <UVCAppEP0Thread_Entry+0xba8>
                        {
                            //if (usbSpeed == CY_U3P_SUPER_SPEED)//for both SS and HS
                            {
                                /* Copy the relevant settings from the host provided data into the
                                   active data structure. */
                            	glProbeStilCtrl[1] = glCommitCtrl[1];
40007338:	e5c6e62d 	strb	lr, [r6, #1581]	; 0x62d
                            	glProbeStilCtrl[2] = glCommitCtrl[2];
                            	glProbeStilCtrl[3] = glCommitCtrl[3];
                            	glProbeStilCtrl[4] = glCommitCtrl[4];
                            	glProbeStilCtrl[5] = glCommitCtrl[5];
4000733c:	e5c6b631 	strb	fp, [r6, #1585]	; 0x631
                            	glProbeStilCtrl[6] = glCommitCtrl[6];
40007340:	e5c6c632 	strb	ip, [r6, #1586]	; 0x632
                            }
                            CyU3PDebugPrint (4, "Get UVC still Prob(set) control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
40007344:	e58de000 	str	lr, [sp]
40007348:	eb002fe8 	bl	400132f0 <CyU3PDebugPrint>
4000734c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007350:	eafffe50 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
            }
            break;

/* still image streaming handler */
            case VD_FX_UVC_STILL_PROB_CTRL:
                switch (bRequest)
40007354:	e3520086 	cmp	r2, #134	; 0x86
40007358:	0affffd4 	beq	400072b0 <UVCAppEP0Thread_Entry+0x71c>
4000735c:	e3520087 	cmp	r2, #135	; 0x87
40007360:	1affff9a 	bne	400071d0 <UVCAppEP0Thread_Entry+0x63c>
40007364:	eaffff54 	b	400070bc <UVCAppEP0Thread_Entry+0x528>

    switch (wValue)
    {
    	case CY_FX_UVC_CT_SCANNING_MODE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ScanMCtlID0][0];
    		CTControlHandle(ScanMCtlID0);
40007368:	e3a00000 	mov	r0, #0
4000736c:	ebfffba2 	bl	400061fc <CTControlHandle>
40007370:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007374:	eafffe3d 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>

					/** send a interrupt status data **/
					apiRetStatus = CyU3PDmaChannelSetupSendBuffer (&glChHandleInterStat, &interStabuf);
					if (apiRetStatus != CY_U3P_SUCCESS)
					{
						CyU3PDebugPrint (4, "Failed to send interrupt status, Error code = %d\r\n", apiRetStatus);
40007378:	e3a00004 	mov	r0, #4
4000737c:	e59f13b0 	ldr	r1, [pc, #944]	; 40007734 <UVCAppEP0Thread_Entry+0xba0>
40007380:	eb002fda 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007384:	e59f13ac 	ldr	r1, [pc, #940]	; 40007738 <UVCAppEP0Thread_Entry+0xba4>
40007388:	e3a00004 	mov	r0, #4
4000738c:	eb002fd7 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007390:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007394:	eb000637 	bl	40008c78 <_tx_thread_sleep>
40007398:	eafffff9 	b	40007384 <UVCAppEP0Thread_Entry+0x7f0>
                    break;
            }
            break;

        case CY_FX_UVC_COMMIT_CTRL:
            switch (bRequest)
4000739c:	e3530085 	cmp	r3, #133	; 0x85
400073a0:	0affff8c 	beq	400071d8 <UVCAppEP0Thread_Entry+0x644>
400073a4:	e3530086 	cmp	r3, #134	; 0x86
400073a8:	1afffeac 	bne	40006e60 <UVCAppEP0Thread_Entry+0x2cc>
            {
                case CY_FX_USB_UVC_GET_INFO_REQ:
                    glEp0Buffer[0] = 3;                        /* GET/SET requests are supported. */
                    CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
400073ac:	e3a00001 	mov	r0, #1
400073b0:	eaffffbf 	b	400072b4 <UVCAppEP0Thread_Entry+0x720>
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
     		break;
       case CY_FX_UVC_PU_SATURATION_CONTROL:
          		CtrlAdd = CtrlParArry[SaturCtlID6][0];
          		ControlHandle(SaturCtlID6);
400073b4:	e3a00006 	mov	r0, #6
400073b8:	ebfff79f 	bl	4000523c <ControlHandle>
400073bc:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400073c0:	eafffe2a 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
400073c4:	e3520c0d 	cmp	r2, #3328	; 0xd00
400073c8:	0a000007 	beq	400073ec <UVCAppEP0Thread_Entry+0x858>
400073cc:	e3520c0e 	cmp	r2, #3584	; 0xe00
400073d0:	0a000009 	beq	400073fc <UVCAppEP0Thread_Entry+0x868>
400073d4:	e3520b03 	cmp	r2, #3072	; 0xc00
400073d8:	1afffe1b 	bne	40006c4c <UVCAppEP0Thread_Entry+0xb8>
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
    		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_CONTROL:
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
400073dc:	e3a0000b 	mov	r0, #11
400073e0:	ebfff795 	bl	4000523c <ControlHandle>
400073e4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400073e8:	eafffe20 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_PU_WHITE_BALANCE_COMPONENT_AUTO_CONTROL://
       //case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_AUTO_CONTROL:
       case CY_FX_UVC_PU_WHITE_BALANCE_TEMPERATURE_CONTROL:
    		CtrlAdd = CtrlParArry[WBTMdCtlID9][0];
    		ControlHandle(WBTMdCtlID9);
400073ec:	e3a00009 	mov	r0, #9
400073f0:	ebfff791 	bl	4000523c <ControlHandle>
400073f4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400073f8:	eafffe1c 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[WBTLevCtlID11][0];
    		ControlHandle(WBTLevCtlID11);
    		break;
       case CY_FX_UVC_PU_DIGITAL_MULTIPLIER_CONTROL:
    		CtrlAdd = CtrlParArry[DigZmCtlID14][0];
    		ControlHandle(DigZmCtlID14);
400073fc:	e3a0000e 	mov	r0, #14
40007400:	ebfff78d 	bl	4000523c <ControlHandle>
40007404:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007408:	eafffe18 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
{
    uint8_t CtrlAdd;
#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
4000740c:	e3520b01 	cmp	r2, #1024	; 0x400
40007410:	0afffe16 	beq	40006c70 <UVCAppEP0Thread_Entry+0xdc>
40007414:	e3520c05 	cmp	r2, #1280	; 0x500
40007418:	1afffe0b 	bne	40006c4c <UVCAppEP0Thread_Entry+0xb8>

       case CY_FX_UVC_PU_GAIN_CONTROL: break;

       case CY_FX_UVC_PU_POWER_LINE_FREQUENCY_CONTROL:
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
4000741c:	e3a00004 	mov	r0, #4
40007420:	ebfff785 	bl	4000523c <ControlHandle>
40007424:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007428:	eafffe10 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
        	CtrlAdd = CtrlParArry[BrgtCtlID1][0];
   			ControlHandle(BrgtCtlID1);
    		break;
       case CY_FX_UVC_PU_CONTRAST_CONTROL:
    	    CtrlAdd = CtrlParArry[ConsCtlID2][0];
			ControlHandle(ConsCtlID2);
4000742c:	e3a00002 	mov	r0, #2
40007430:	ebfff781 	bl	4000523c <ControlHandle>
40007434:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007438:	eafffe0c 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
     		CtrlAdd = CtrlParArry[MFreqCtlID4][0];
      		ControlHandle(MFreqCtlID4);
      		break;
       case CY_FX_UVC_PU_HUE_CONTROL:
    		CtrlAdd = CtrlParArry[HueCtlID5][0];
     		ControlHandle(HueCtlID5);
4000743c:	e3a00005 	mov	r0, #5
40007440:	ebfff77d 	bl	4000523c <ControlHandle>
40007444:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007448:	eafffe08 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
                        break;
                }
                break;

            case VD_FX_UVC_STILL_TRIG_CTRL:
                switch (bRequest)
4000744c:	e3520085 	cmp	r2, #133	; 0x85
40007450:	0a000072 	beq	40007620 <UVCAppEP0Thread_Entry+0xa8c>
40007454:	e3520086 	cmp	r2, #134	; 0x86
40007458:	1afffe09 	bne	40006c84 <UVCAppEP0Thread_Entry+0xf0>
4000745c:	eaffffd2 	b	400073ac <UVCAppEP0Thread_Entry+0x818>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007460:	e3530c06 	cmp	r3, #1536	; 0x600
40007464:	0a000069 	beq	40007610 <UVCAppEP0Thread_Entry+0xa7c>
40007468:	8a000009 	bhi	40007494 <UVCAppEP0Thread_Entry+0x900>
4000746c:	e3530c05 	cmp	r3, #1280	; 0x500
40007470:	1afffdf9 	bne	40006c5c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
    		break;
		case CY_FX_EXT_CONTROL_53DNOISEREDUC_CTRL: //3D noise reduce level CONTROL5
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
40007474:	e3a00014 	mov	r0, #20
40007478:	ebfff76f 	bl	4000523c <ControlHandle>
4000747c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007480:	eafffdfa 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[FocACtlID5][0];
     		CTControlHandle(FocACtlID5);
     		break;
       case CY_FX_UVC_CT_FOCUS_RELATIVE_CONTROL:
          		CtrlAdd = CTCtrlParArry[FocRCtlID6][0];
          		CTControlHandle(FocRCtlID6);
40007484:	e3a00006 	mov	r0, #6
40007488:	ebfffb5b 	bl	400061fc <CTControlHandle>
4000748c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007490:	eafffdf6 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    uint8_t CtrlAdd;  //set control ID -add

#ifdef DbgInfo
    CyU3PDebugPrint (4, "The setup request value 0x%x 0x%x\r\n", wValue, bRequest); // additional debug
#endif
    switch (wValue)
40007494:	e3530c07 	cmp	r3, #1792	; 0x700
40007498:	0a000058 	beq	40007600 <UVCAppEP0Thread_Entry+0xa6c>
4000749c:	e3530b02 	cmp	r3, #2048	; 0x800
400074a0:	1afffded 	bne	40006c5c <UVCAppEP0Thread_Entry+0xc8>
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
    		break;
		case CY_FX_EXT_CONTROL_8DAYNIGHT_LEVEL: //day to night level CONTROL8
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
400074a4:	e3a00017 	mov	r0, #23
400074a8:	ebfff763 	bl	4000523c <ControlHandle>
400074ac:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074b0:	eafffdee 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    int32_t  panVal, tiltVal;
    CyBool_t sendData = CyFalse;
#endif
    uint8_t CtrlAdd;

    switch (wValue)
400074b4:	e3520c0b 	cmp	r2, #2816	; 0xb00
400074b8:	0a00000f 	beq	400074fc <UVCAppEP0Thread_Entry+0x968>
400074bc:	e3520b03 	cmp	r2, #3072	; 0xc00
400074c0:	0a000009 	beq	400074ec <UVCAppEP0Thread_Entry+0x958>
400074c4:	e3520c0a 	cmp	r2, #2560	; 0xa00
400074c8:	1afffddf 	bne	40006c4c <UVCAppEP0Thread_Entry+0xb8>
     		CTControlHandle(IriACtlID7);
     		break;

       case CY_FX_UVC_CT_IRIS_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
400074cc:	e3a00008 	mov	r0, #8
400074d0:	ebfffb49 	bl	400061fc <CTControlHandle>
400074d4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074d8:	eafffde4 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
          		break;
       case CY_FX_UVC_CT_FOCUS_AUTO_CONTROL:
          		break;
       case CY_FX_UVC_CT_IRIS_ABSOLUTE_CONTROL://
     		CtrlAdd = CTCtrlParArry[IriACtlID7][0];
     		CTControlHandle(IriACtlID7);
400074dc:	e3a00007 	mov	r0, #7
400074e0:	ebfffb45 	bl	400061fc <CTControlHandle>
400074e4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074e8:	eafffde0 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
    		break;
       case CY_FX_UVC_CT_ZOOM_RELATIVE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpRCtlID10][0];
    		CTControlHandle(ZmOpRCtlID10);
400074ec:	e3a0000a 	mov	r0, #10
400074f0:	ebfffb41 	bl	400061fc <CTControlHandle>
400074f4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400074f8:	eafffddc 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CTCtrlParArry[IriRCtlID8][0];
    		CTControlHandle(IriRCtlID8);
    		break;
       case CY_FX_UVC_CT_ZOOM_ABSOLUTE_CONTROL:
    		CtrlAdd = CTCtrlParArry[ZmOpACtlID9][0];
    		CTControlHandle(ZmOpACtlID9);
400074fc:	e3a00009 	mov	r0, #9
40007500:	ebfffb3d 	bl	400061fc <CTControlHandle>
40007504:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007508:	eafffdd8 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtI2CCtlID15][0];
      		ControlHandle(ExtI2CCtlID15);
    		break;
		case CY_FX_EXT_CONTROL_17BLC_RANGE:   //BLD range CONTROL17
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
4000750c:	e3a00024 	mov	r0, #36	; 0x24
40007510:	ebfff749 	bl	4000523c <ControlHandle>
40007514:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007518:	eafffdd4 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
                    break;
                case CY_FX_USB_UVC_SET_CUR_REQ:
                    /* The host has selected the parameters for the video stream. Check the desired
                       resolution settings, configure the sensor and start the video stream.
                       */
                    apiRetStatus = CyU3PUsbGetEP0Data (CY_FX_UVC_MAX_PROBE_SETTING_ALIGNED,
4000751c:	e3a00020 	mov	r0, #32
40007520:	e59f11e4 	ldr	r1, [pc, #484]	; 4000770c <UVCAppEP0Thread_Entry+0xb78>
40007524:	e28d203e 	add	r2, sp, #62	; 0x3e
40007528:	eb00563f 	bl	4001ce2c <CyU3PUsbGetEP0Data>
                            glCommitCtrl, &readCount);
                    if (apiRetStatus == CY_U3P_SUCCESS)//supports both SS and HS
4000752c:	e3500000 	cmp	r0, #0
40007530:	1afffdd7 	bne	40006c94 <UVCAppEP0Thread_Entry+0x100>
                    {
                        switch (glCommitCtrl[3])
40007534:	e5d4307f 	ldrb	r3, [r4, #127]	; 0x7f
40007538:	e3530001 	cmp	r3, #1
4000753c:	0a00001e 	beq	400075bc <UVCAppEP0Thread_Entry+0xa28>
40007540:	e3530002 	cmp	r3, #2
40007544:	1a00000b 	bne	40007578 <UVCAppEP0Thread_Entry+0x9e4>
                         		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                         		CyU3PThreadSleep(500);
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x0, 0x0b);
                         		break;
                         	case 2: //720 or 360
                         		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
40007548:	e3a01030 	mov	r1, #48	; 0x30
4000754c:	e3a02001 	mov	r2, #1
40007550:	e3a03052 	mov	r3, #82	; 0x52
40007554:	e3a0000b 	mov	r0, #11
40007558:	ebfff471 	bl	40004724 <SensorSetIrisControl>
                         		CyU3PThreadSleep(500);
4000755c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007560:	eb0005c4 	bl	40008c78 <_tx_thread_sleep>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x1, 0x0b);
40007564:	e3a00004 	mov	r0, #4
40007568:	e59f11d0 	ldr	r1, [pc, #464]	; 40007740 <UVCAppEP0Thread_Entry+0xbac>
4000756c:	e3a02001 	mov	r2, #1
40007570:	e3a0300b 	mov	r3, #11
40007574:	eb002f5d 	bl	400132f0 <CyU3PDebugPrint>
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
40007578:	e5d4e07f 	ldrb	lr, [r4, #127]	; 0x7f
                        CyU3PDebugPrint (4, "Set the video mode format setRes %d\n", setRes);
4000757c:	e59f11c0 	ldr	r1, [pc, #448]	; 40007744 <UVCAppEP0Thread_Entry+0xbb0>
40007580:	e1a0200e 	mov	r2, lr
40007584:	e3a00004 	mov	r0, #4
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x1, 0x0b);
                         		break;
                         	default:
                         		break;
                         }
                        setRes = glCommitCtrl[3];
40007588:	e5c4e09c 	strb	lr, [r4, #156]	; 0x9c
                        CyU3PDebugPrint (4, "Set the video mode format setRes %d\n", setRes);
4000758c:	eb002f57 	bl	400132f0 <CyU3PDebugPrint>
                        {
                            SensorScaling_VGA ();
                        }
#endif
                        /* We can start streaming video now. */
                        apiRetStatus = CyU3PEventSet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_OR);
40007590:	e3a02000 	mov	r2, #0
40007594:	e59f0144 	ldr	r0, [pc, #324]	; 400076e0 <UVCAppEP0Thread_Entry+0xb4c>
40007598:	e3a01001 	mov	r1, #1
4000759c:	eb000aad 	bl	4000a058 <_txe_event_flags_set>
                        if (apiRetStatus != CY_U3P_SUCCESS)
400075a0:	e2502000 	subs	r2, r0, #0
400075a4:	0afffdba 	beq	40006c94 <UVCAppEP0Thread_Entry+0x100>
                        {
                            CyU3PDebugPrint (4, "Set CY_FX_UVC_STREAM_EVENT failed %x\n", apiRetStatus);
400075a8:	e3a00004 	mov	r0, #4
400075ac:	e59f1194 	ldr	r1, [pc, #404]	; 40007748 <UVCAppEP0Thread_Entry+0xbb4>
400075b0:	eb002f4e 	bl	400132f0 <CyU3PDebugPrint>
400075b4:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400075b8:	eafffdb6 	b	40006c98 <UVCAppEP0Thread_Entry+0x104>
                    if (apiRetStatus == CY_U3P_SUCCESS)//supports both SS and HS
                    {
                        switch (glCommitCtrl[3])
                         {
                         	case 1: //960 or 480
                         		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400075bc:	e3a01030 	mov	r1, #48	; 0x30
400075c0:	e3a02000 	mov	r2, #0
400075c4:	e3a03052 	mov	r3, #82	; 0x52
400075c8:	e3a0000b 	mov	r0, #11
400075cc:	ebfff454 	bl	40004724 <SensorSetIrisControl>
                         		CyU3PThreadSleep(500);
400075d0:	e3a00f7d 	mov	r0, #500	; 0x1f4
400075d4:	eb0005a7 	bl	40008c78 <_tx_thread_sleep>
                                CyU3PDebugPrint (4, "Set the video mode format %x %d\n", 0x0, 0x0b);
400075d8:	e59f1160 	ldr	r1, [pc, #352]	; 40007740 <UVCAppEP0Thread_Entry+0xbac>
400075dc:	e3a02000 	mov	r2, #0
400075e0:	e3a0300b 	mov	r3, #11
400075e4:	e3a00004 	mov	r0, #4
400075e8:	eb002f40 	bl	400132f0 <CyU3PDebugPrint>
400075ec:	eaffffe1 	b	40007578 <UVCAppEP0Thread_Entry+0x9e4>
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
    		break;
		case CY_FX_EXT_CONTROL_3MIRROR: // mirror mode CONTROL3
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
400075f0:	e3a00012 	mov	r0, #18
400075f4:	ebfff710 	bl	4000523c <ControlHandle>
400075f8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400075fc:	eafffd9b 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
     		break;
    	case CY_FX_EXT_CONTROL_7DAYNIGHT_DELAY: //day night switch delay CONTROL7
    		CtrlAdd = CtrlParArry[ExtDNDelytlID6][0];
      		ControlHandle(ExtDNDelytlID6);
40007600:	e3a00016 	mov	r0, #22
40007604:	ebfff70c 	bl	4000523c <ControlHandle>
40007608:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000760c:	eafffd97 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[Ext3DNReduLvCtlID4][0];
      		ControlHandle(Ext3DNReduLvCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_6DAYNIGHT_MODE: // day night mode CONTROL6
    		CtrlAdd = CtrlParArry[ExtDNModCtlID5][0];
      		ControlHandle(ExtDNModCtlID5);
40007610:	e3a00015 	mov	r0, #21
40007614:	ebfff708 	bl	4000523c <ControlHandle>
40007618:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000761c:	eafffd93 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
                        CyU3PUsbSendEP0Data (1, (uint8_t *)glEp0Buffer);
                        break;
                    case CY_FX_USB_UVC_GET_LEN_REQ:
                        glEp0Buffer[0] = 1;//CY_FX_UVC_MAX_PROBE_SETTING;
                        glEp0Buffer[1] = 0;
                        CyU3PUsbSendEP0Data (2, (uint8_t *)glEp0Buffer);
40007620:	e3a00002 	mov	r0, #2
40007624:	e59f1104 	ldr	r1, [pc, #260]	; 40007730 <UVCAppEP0Thread_Entry+0xb9c>
40007628:	eafffeed 	b	400071e4 <UVCAppEP0Thread_Entry+0x650>
    		CtrlAdd = ExUCtrlParArry[Ext1BLCRangeCtlID4-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCRangeCtlID4);
    		break;
		case CY_FX_EXT_CONTROL_18BLC_POSITION:   //BLD gain CONTROL18
    		CtrlAdd = ExUCtrlParArry[Ext1BLCWeightCtlID5-EXUAOFFSET+4][0];
      		ControlHandle(Ext1BLCWeightCtlID5);
4000762c:	e3a00025 	mov	r0, #37	; 0x25
40007630:	ebfff701 	bl	4000523c <ControlHandle>
40007634:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007638:	eafffd8c 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
    		break;
		case CY_FX_EXT_CONTROL_13CAMERA_MODE: //Camera Mode CONTROL13
    		CtrlAdd = CtrlParArry[ExtCamMCtlID12][0];
      		ControlHandle(ExtCamMCtlID12);
4000763c:	e3a0001c 	mov	r0, #28
40007640:	ebfff6fd 	bl	4000523c <ControlHandle>
40007644:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007648:	eafffd88 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		}else/* no support for 1080p camera */
    			CyU3PDebugPrint (4, "The host command is not correct for 1080p camera 0x%x 0x%x %d\r\n", wValue, bRequest, CamMode);
    		break;
		case CY_FX_EXT_CONTROL_11AEREFERENCE_LEVEL: //AEx reference level CONTROL11
    		CtrlAdd = CtrlParArry[ExtExRefCtlID10][0];
      		ControlHandle(ExtExRefCtlID10);
4000764c:	e3a0001a 	mov	r0, #26
40007650:	ebfff6f9 	bl	4000523c <ControlHandle>
40007654:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007658:	eafffd84 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		//CtrlAdd = CtrlParArry[ExtshotCtlID13][0];
      		//ControlHandle(ExtshotCtlID13);
    		//break;
		case CY_FX_EXT_CONTROL_15SENSOR_PARS: //Sensor Parameters set CONTROL15
    		CtrlAdd = CtrlParArry[ExtSensorParCtlID14][0];
      		ControlHandle(ExtSensorParCtlID14);
4000765c:	e3a0001e 	mov	r0, #30
40007660:	ebfff6f5 	bl	4000523c <ControlHandle>
40007664:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007668:	eafffd80 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
                            stiflag = 0xF0;//set still trigger flag
                            //stillcont = 0;
                            }
                            CyU3PDebugPrint (4, "Get UVC still trigger control %d %d %d\r\n", readCount, glCommitCtrl[0], glCommitCtrl[1]);
                        }else{
                        	CyU3PDebugPrint (4, "UVC still trigger control fail %d %d\r\n", readCount, glCommitCtrl[0]);
4000766c:	e59f10d8 	ldr	r1, [pc, #216]	; 4000774c <UVCAppEP0Thread_Entry+0xbb8>
40007670:	e1dd23be 	ldrh	r2, [sp, #62]	; 0x3e
40007674:	e5d4307c 	ldrb	r3, [r4, #124]	; 0x7c
40007678:	e3a00004 	mov	r0, #4
4000767c:	eb002f1b 	bl	400132f0 <CyU3PDebugPrint>
40007680:	eafffd7f 	b	40006c84 <UVCAppEP0Thread_Entry+0xf0>
    		CtrlAdd = CtrlParArry[ExtShutCtlID0][0];
      		ControlHandle(ExtShutCtlID0);
    		break;
		case CY_FX_EXT_CONTROL_2SENUPMODE: // sense up mode CONTROL2
    		CtrlAdd = CtrlParArry[ExtSenCtlID1][0];
      		ControlHandle(ExtSenCtlID1);
40007684:	e3a00011 	mov	r0, #17
40007688:	ebfff6eb 	bl	4000523c <ControlHandle>
4000768c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
40007690:	eafffd76 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtMirrCtlID2][0];
      		ControlHandle(ExtMirrCtlID2);
     		break;
    	case CY_FX_EXT_CONTROL_43DNOISEREDUC_MODE: //3D noise reduce control CONTROL4
    		CtrlAdd = CtrlParArry[Ext3DNReduMCtlID3][0];
      		ControlHandle(Ext3DNReduMCtlID3);
40007694:	e3a00013 	mov	r0, #19
40007698:	ebfff6e7 	bl	4000523c <ControlHandle>
4000769c:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400076a0:	eafffd72 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
    		CtrlAdd = CtrlParArry[ExtDNlevCtlID7][0];
      		ControlHandle(ExtDNlevCtlID7);
    		break;
		case CY_FX_EXT_CONTROL_9NIGHTDAY_LEVEL: //night to day level CONTROL9
    		CtrlAdd = CtrlParArry[ExtNDlevCtlID8][0];
      		ControlHandle(ExtNDlevCtlID8);
400076a4:	e3a00018 	mov	r0, #24
400076a8:	ebfff6e3 	bl	4000523c <ControlHandle>
400076ac:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
400076b0:	eafffd6e 	b	40006c70 <UVCAppEP0Thread_Entry+0xdc>
                             		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                             		//CyU3PThreadSleep(500);
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x1);
                             		break;
                            	case 1: //960
                             		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400076b4:	e3a01030 	mov	r1, #48	; 0x30
400076b8:	e3a02000 	mov	r2, #0
400076bc:	e3a03052 	mov	r3, #82	; 0x52
400076c0:	e3a0000b 	mov	r0, #11
400076c4:	ebfff416 	bl	40004724 <SensorSetIrisControl>
                             		//CyU3PThreadSleep(500);
                                    CyU3PDebugPrint (4, "Set the still mode format %x %d\n", 0x0b, 0x0);
400076c8:	e59f1048 	ldr	r1, [pc, #72]	; 40007718 <UVCAppEP0Thread_Entry+0xb84>
400076cc:	e3a0200b 	mov	r2, #11
400076d0:	e3a03000 	mov	r3, #0
400076d4:	e3a00004 	mov	r0, #4
400076d8:	eb002f04 	bl	400132f0 <CyU3PDebugPrint>
400076dc:	eafffe67 	b	40007080 <UVCAppEP0Thread_Entry+0x4ec>
400076e0:	40030f90 	.word	0x40030f90
400076e4:	40030000 	.word	0x40030000
400076e8:	40033144 	.word	0x40033144
400076ec:	40032fc0 	.word	0x40032fc0
400076f0:	40032ff0 	.word	0x40032ff0
400076f4:	40033108 	.word	0x40033108
400076f8:	400118c8 	.word	0x400118c8
400076fc:	40033030 	.word	0x40033030
40007700:	40032ec0 	.word	0x40032ec0
40007704:	40032ff2 	.word	0x40032ff2
40007708:	4001184c 	.word	0x4001184c
4000770c:	4003100c 	.word	0x4003100c
40007710:	40011a08 	.word	0x40011a08
40007714:	40011a2c 	.word	0x40011a2c
40007718:	400119bc 	.word	0x400119bc
4000771c:	400119e0 	.word	0x400119e0
40007720:	4003062c 	.word	0x4003062c
40007724:	40030638 	.word	0x40030638
40007728:	40030610 	.word	0x40030610
4000772c:	400118f4 	.word	0x400118f4
40007730:	40030fe8 	.word	0x40030fe8
40007734:	40011a80 	.word	0x40011a80
40007738:	40011588 	.word	0x40011588
4000773c:	40011990 	.word	0x40011990
40007740:	4001191c 	.word	0x4001191c
40007744:	40011940 	.word	0x40011940
40007748:	40011968 	.word	0x40011968
4000774c:	40011a58 	.word	0x40011a58

40007750 <CamDefSet>:
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007750:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
40007754:	e59f42ac 	ldr	r4, [pc, #684]	; 40007a08 <CamDefSet+0x2b8>
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007758:	e59f22ac 	ldr	r2, [pc, #684]	; 40007a0c <CamDefSet+0x2bc>
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
4000775c:	e5d491a3 	ldrb	r9, [r4, #419]	; 0x1a3
    CyU3PDebugPrint (4, "The Request 0x%x parameter get from host (CT) 0x%x 0x%x 0x%x / send to host 0x%x 0x%x 0x%x, %d\r\n", reqData, getData, getData1, glEp0Buffer[2], sendData, sendData1, glEp0Buffer[2], Len);
}

/************** send default parameters to camera at the beginning **************/
void CamDefSet(void) //it's not called at anywhere right now
{
40007760:	e24dd02c 	sub	sp, sp, #44	; 0x2c
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007764:	e592001c 	ldr	r0, [r2, #28]
40007768:	e3e01000 	mvn	r1, #0
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
4000776c:	e1a06329 	lsr	r6, r9, #6
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
    devAdd = CtrlParArry[CtrlID][15];
40007770:	e5d471a7 	ldrb	r7, [r4, #423]	; 0x1a7
    VdRingBuf *cmdQuptr = &cmdQu;
    uint8_t RegAdd, devAdd, Data;
    uint8_t CtrlID, Data0, Data1;

    CtrlID = BrgtCtlID1;
    RegAdd = CtrlParArry[CtrlID][1];
40007774:	e5d4a199 	ldrb	sl, [r4, #409]	; 0x199
    devAdd = CtrlParArry[CtrlID][15];
    Data0 = CtrlParArry[CtrlID][11];
    Data1 = Data0;

    CyU3PMutexGet(cmdQuptr->ringMux, CYU3P_WAIT_FOREVER);       //get mutex
40007778:	eb000ace 	bl	4000a2b8 <_txe_mutex_get>
    if(Data1&0x80){
4000777c:	e3190080 	tst	r9, #128	; 0x80
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
40007780:	12066001 	andne	r6, r6, #1
40007784:	11e06006 	mvnne	r6, r6
40007788:	1206603b 	andne	r6, r6, #59	; 0x3b
4000778c:	11e06006 	mvnne	r6, r6
40007790:	120660ff 	andne	r6, r6, #255	; 0xff
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
40007794:	038660c6 	orreq	r6, r6, #198	; 0xc6
    }
    Data0 = (Data0 << 2);

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
40007798:	e3a08000 	mov	r8, #0
4000779c:	e1a0200a 	mov	r2, sl
400077a0:	e1a03007 	mov	r3, r7
400077a4:	e3a01001 	mov	r1, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400077a8:	e1a05109 	lsl	r5, r9, #2

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400077ac:	e59f0258 	ldr	r0, [pc, #600]	; 40007a0c <CamDefSet+0x2bc>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400077b0:	e3a09001 	mov	r9, #1
    if(Data1&0x80){
    	Data1 = (((Data1 >> 6)&0x01)|0xC4);
    }else{
    	Data1 = (((Data1 >> 6)|0x02)|0xC4);
    }
    Data0 = (Data0 << 2);
400077b4:	e20550ff 	and	r5, r5, #255	; 0xff

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness
400077b8:	e88d0140 	stm	sp, {r6, r8}
400077bc:	ebffef3d 	bl	400034b8 <cmdSet>

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
400077c0:	e5d42198 	ldrb	r2, [r4, #408]	; 0x198
400077c4:	e1a01009 	mov	r1, r9
400077c8:	e1a03007 	mov	r3, r7
400077cc:	e59f0238 	ldr	r0, [pc, #568]	; 40007a0c <CamDefSet+0x2bc>
400077d0:	e88d0220 	stm	sp, {r5, r9}
400077d4:	ebffef37 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400077d8:	e1a02006 	mov	r2, r6
400077dc:	e1a03005 	mov	r3, r5
400077e0:	e59f1228 	ldr	r1, [pc, #552]	; 40007a10 <CamDefSet+0x2c0>
400077e4:	e3a00004 	mov	r0, #4
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
	CtrlParArry[CtrlID][14] = Data1;
400077e8:	e5c461a6 	strb	r6, [r4, #422]	; 0x1a6

	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data1, First); //brightness

	RegAdd = CtrlParArry[CtrlID][0];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data0, Second);
	CtrlParArry[CtrlID][13] = Data0;
400077ec:	e5c451a5 	strb	r5, [r4, #421]	; 0x1a5
	CtrlParArry[CtrlID][14] = Data1;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data1, Data0);
400077f0:	eb002ebe 	bl	400132f0 <CyU3PDebugPrint>

    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400077f4:	e5d4b1bb 	ldrb	fp, [r4, #443]	; 0x1bb
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
400077f8:	e5d421b0 	ldrb	r2, [r4, #432]	; 0x1b0
400077fc:	e5d431bf 	ldrb	r3, [r4, #447]	; 0x1bf
40007800:	e3a01002 	mov	r1, #2
40007804:	e59f0200 	ldr	r0, [pc, #512]	; 40007a0c <CamDefSet+0x2bc>
40007808:	e58db000 	str	fp, [sp]
4000780c:	e58d8004 	str	r8, [sp, #4]
40007810:	ebffef28 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007814:	e1a0200b 	mov	r2, fp
40007818:	e1a03005 	mov	r3, r5
4000781c:	e59f11ec 	ldr	r1, [pc, #492]	; 40007a10 <CamDefSet+0x2c0>
40007820:	e3a00004 	mov	r0, #4
    CtrlID = ConsCtlID2;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //contrast
	CtrlParArry[CtrlID][13] = Data0;
40007824:	e5c451bd 	strb	r5, [r4, #445]	; 0x1bd
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
40007828:	eb002eb0 	bl	400132f0 <CyU3PDebugPrint>

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
4000782c:	e5d47203 	ldrb	r7, [r4, #515]	; 0x203
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
40007830:	e5d46207 	ldrb	r6, [r4, #519]	; 0x207
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007834:	e247b080 	sub	fp, r7, #128	; 0x80
40007838:	e20b10ff 	and	r1, fp, #255	; 0xff
4000783c:	e58d1014 	str	r1, [sp, #20]
40007840:	e59dc014 	ldr	ip, [sp, #20]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007844:	e2470076 	sub	r0, r7, #118	; 0x76
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007848:	e287e07e 	add	lr, r7, #126	; 0x7e

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
4000784c:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007850:	e58d0018 	str	r0, [sp, #24]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007854:	e3a01005 	mov	r1, #5
40007858:	e3a020df 	mov	r2, #223	; 0xdf
4000785c:	e59f01a8 	ldr	r0, [pc, #424]	; 40007a0c <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
40007860:	e58de01c 	str	lr, [sp, #28]

    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
40007864:	e58dc000 	str	ip, [sp]
40007868:	e58d8004 	str	r8, [sp, #4]
4000786c:	ebffef11 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007870:	e59da018 	ldr	sl, [sp, #24]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
40007874:	e287e072 	add	lr, r7, #114	; 0x72
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007878:	e20ac0ff 	and	ip, sl, #255	; 0xff
4000787c:	e1a03006 	mov	r3, r6
40007880:	e3a01005 	mov	r1, #5
40007884:	e3a020dc 	mov	r2, #220	; 0xdc
40007888:	e59f017c 	ldr	r0, [pc, #380]	; 40007a0c <CamDefSet+0x2bc>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
4000788c:	e58de020 	str	lr, [sp, #32]
    CtrlID = HueCtlID5;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
40007890:	e58dc000 	str	ip, [sp]
40007894:	e58d9004 	str	r9, [sp, #4]
40007898:	ebffef06 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
4000789c:	e59d001c 	ldr	r0, [sp, #28]
400078a0:	e3a0e002 	mov	lr, #2
400078a4:	e200c0ff 	and	ip, r0, #255	; 0xff
400078a8:	e1a03006 	mov	r3, r6
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400078ac:	e247a06f 	sub	sl, r7, #111	; 0x6f
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078b0:	e3a01005 	mov	r1, #5
400078b4:	e3a020de 	mov	r2, #222	; 0xde
400078b8:	e59f014c 	ldr	r0, [pc, #332]	; 40007a0c <CamDefSet+0x2bc>
400078bc:	e58de004 	str	lr, [sp, #4]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400078c0:	e58da024 	str	sl, [sp, #36]	; 0x24
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
400078c4:	e58dc000 	str	ip, [sp]
400078c8:	ebffeefa 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
400078cc:	e59da020 	ldr	sl, [sp, #32]
400078d0:	e1a03006 	mov	r3, r6
400078d4:	e20ac0ff 	and	ip, sl, #255	; 0xff
400078d8:	e58dc000 	str	ip, [sp]
400078dc:	e3a01005 	mov	r1, #5
400078e0:	e3a0c003 	mov	ip, #3
400078e4:	e3a020e0 	mov	r2, #224	; 0xe0
400078e8:	e59f011c 	ldr	r0, [pc, #284]	; 40007a0c <CamDefSet+0x2bc>
400078ec:	e58dc004 	str	ip, [sp, #4]
400078f0:	ebffeef0 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
400078f4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400078f8:	e3a0a004 	mov	sl, #4
400078fc:	e200c0ff 	and	ip, r0, #255	; 0xff
40007900:	e1a03006 	mov	r3, r6
40007904:	e3a01005 	mov	r1, #5
40007908:	e3a020dd 	mov	r2, #221	; 0xdd
4000790c:	e59f00f8 	ldr	r0, [pc, #248]	; 40007a0c <CamDefSet+0x2bc>
40007910:	e58dc000 	str	ip, [sp]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007914:	e287707f 	add	r7, r7, #127	; 0x7f
    Data = CtrlParArry[CtrlID][11];
    cmdSet(cmdQuptr, CtrlID, HuectrlRegGr, devAdd, (Data-GREEN_BASE), First);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
40007918:	e58da004 	str	sl, [sp, #4]
4000791c:	ebffeee5 	bl	400034b8 <cmdSet>
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
40007920:	e3a0e005 	mov	lr, #5
40007924:	e1a0100e 	mov	r1, lr
40007928:	e1a03006 	mov	r3, r6
4000792c:	e3a020e1 	mov	r2, #225	; 0xe1
40007930:	e20760ff 	and	r6, r7, #255	; 0xff
40007934:	e59f00d0 	ldr	r0, [pc, #208]	; 40007a0c <CamDefSet+0x2bc>
40007938:	e88d4040 	stm	sp, {r6, lr}
4000793c:	ebffeedd 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
40007940:	e59dc014 	ldr	ip, [sp, #20]
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007944:	e59de024 	ldr	lr, [sp, #36]	; 0x24
40007948:	e59d601c 	ldr	r6, [sp, #28]
    cmdSet(cmdQuptr, CtrlID, HuectrlRegMg, devAdd, (Data-MAGENTA_BASE), Second);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegYel, devAdd, (Data-YELLOW_BASE), Third);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegCy, devAdd, (Data-CYAN_BASE), Fourth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegRed, devAdd, (Data-RED_BASE), Fifth);
    cmdSet(cmdQuptr, CtrlID, HuectrlRegBlu, devAdd, (Data-BLUE_BASE), Sixth);
	CtrlParArry[CtrlID][13] = Data-GREEN_BASE;
4000794c:	e5c4c205 	strb	ip, [r4, #517]	; 0x205
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x, 0x%x, 0x%x, 0x%x, 0x%x.\r\n",
40007950:	e59dc020 	ldr	ip, [sp, #32]
40007954:	e1a0200b 	mov	r2, fp
40007958:	e59d3018 	ldr	r3, [sp, #24]
4000795c:	e59f10b0 	ldr	r1, [pc, #176]	; 40007a14 <CamDefSet+0x2c4>
40007960:	e1a0000a 	mov	r0, sl
40007964:	e88d5040 	stm	sp, {r6, ip, lr}
40007968:	e58d700c 	str	r7, [sp, #12]
4000796c:	eb002e5f 	bl	400132f0 <CyU3PDebugPrint>
			(Data-GREEN_BASE), (Data-MAGENTA_BASE), (Data-YELLOW_BASE), (Data-CYAN_BASE), (Data-RED_BASE), (Data-BLUE_BASE));

    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
40007970:	e5d4721f 	ldrb	r7, [r4, #543]	; 0x21f
    Data = CtrlParArry[CtrlID][11];
40007974:	e5d4621b 	ldrb	r6, [r4, #539]	; 0x21b
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
40007978:	e1a03007 	mov	r3, r7
4000797c:	e3a01006 	mov	r1, #6
40007980:	e3a02085 	mov	r2, #133	; 0x85
40007984:	e59f0080 	ldr	r0, [pc, #128]	; 40007a0c <CamDefSet+0x2bc>
40007988:	e88d0140 	stm	sp, {r6, r8}
4000798c:	ebffeec9 	bl	400034b8 <cmdSet>
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
40007990:	e1a03007 	mov	r3, r7
40007994:	e3a01006 	mov	r1, #6
40007998:	e3a02086 	mov	r2, #134	; 0x86
4000799c:	e59f0068 	ldr	r0, [pc, #104]	; 40007a0c <CamDefSet+0x2bc>
400079a0:	e88d0240 	stm	sp, {r6, r9}
400079a4:	ebffeec3 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079a8:	e1a02006 	mov	r2, r6
400079ac:	e1a03005 	mov	r3, r5
400079b0:	e59f1058 	ldr	r1, [pc, #88]	; 40007a10 <CamDefSet+0x2c0>
400079b4:	e1a0000a 	mov	r0, sl
    CtrlID = SaturCtlID6;
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, SaturationRegR, devAdd, Data, First); //saturation
	cmdSet(cmdQuptr, CtrlID, SaturationRegB, devAdd, Data, Second); //saturation
	CtrlParArry[CtrlID][13] = Data;
400079b8:	e5c4621d 	strb	r6, [r4, #541]	; 0x21d
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079bc:	eb002e4b 	bl	400132f0 <CyU3PDebugPrint>

    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
400079c0:	e5d46233 	ldrb	r6, [r4, #563]	; 0x233
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
400079c4:	e5d42228 	ldrb	r2, [r4, #552]	; 0x228
400079c8:	e5d43237 	ldrb	r3, [r4, #567]	; 0x237
400079cc:	e3a01007 	mov	r1, #7
400079d0:	e59f0034 	ldr	r0, [pc, #52]	; 40007a0c <CamDefSet+0x2bc>
400079d4:	e88d0140 	stm	sp, {r6, r8}
400079d8:	ebffeeb6 	bl	400034b8 <cmdSet>
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079dc:	e1a03005 	mov	r3, r5
400079e0:	e1a0000a 	mov	r0, sl
400079e4:	e59f1024 	ldr	r1, [pc, #36]	; 40007a10 <CamDefSet+0x2c0>
400079e8:	e1a02006 	mov	r2, r6
    CtrlID = ShapCtlID7;
    RegAdd = CtrlParArry[CtrlID][0];
    devAdd = CtrlParArry[CtrlID][15];
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
400079ec:	e5c45235 	strb	r5, [r4, #565]	; 0x235
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);
400079f0:	eb002e3e 	bl	400132f0 <CyU3PDebugPrint>

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
400079f4:	e59f3010 	ldr	r3, [pc, #16]	; 40007a0c <CamDefSet+0x2bc>
400079f8:	e593001c 	ldr	r0, [r3, #28]
	//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR);//set event of the command available.
	return;
}
400079fc:	e28dd02c 	add	sp, sp, #44	; 0x2c
40007a00:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    Data = CtrlParArry[CtrlID][11];
	cmdSet(cmdQuptr, CtrlID, RegAdd, devAdd, Data, First); //shapness
	CtrlParArry[CtrlID][13] = Data0;
	CyU3PDebugPrint (4, "The set def data 0x%x, 0x%x.\r\n", Data, Data0);

	CyU3PMutexPut(cmdQuptr->ringMux);  //release the command queue mutex
40007a04:	ea000a60 	b	4000a38c <_txe_mutex_put>
40007a08:	40030000 	.word	0x40030000
40007a0c:	40032ec4 	.word	0x40032ec4
40007a10:	40011ab4 	.word	0x40011ab4
40007a14:	40011ad4 	.word	0x40011ad4

40007a18 <CyFxUVCAddHeader>:
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a18:	e92d4038 	push	{r3, r4, r5, lr}
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a1c:	e3a0200c 	mov	r2, #12
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a20:	e1a05001 	mov	r5, r1
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a24:	e59f1018 	ldr	r1, [pc, #24]	; 40007a44 <CyFxUVCAddHeader+0x2c>
void
CyFxUVCAddHeader (
        uint8_t *buffer_p,              /* Buffer pointer */
        uint8_t frameInd                /* EOF or normal frame indication */
        )
{
40007a28:	e1a04000 	mov	r4, r0
    /* Copy header to buffer */
    CyU3PMemCopy (buffer_p, (uint8_t *)glUVCHeader, CY_FX_UVC_MAX_HEADER);
40007a2c:	ebffefa8 	bl	400038d4 <CyU3PMemCopy>

    /* The EOF flag needs to be set if this is the last packet for this video frame. */
    if (frameInd & CY_FX_UVC_HEADER_EOF)
40007a30:	e3150002 	tst	r5, #2
    {
        buffer_p[1] |= CY_FX_UVC_HEADER_EOF;
40007a34:	15d43001 	ldrbne	r3, [r4, #1]
40007a38:	13833002 	orrne	r3, r3, #2
40007a3c:	15c43001 	strbne	r3, [r4, #1]
40007a40:	e8bd8038 	pop	{r3, r4, r5, pc}
40007a44:	40030480 	.word	0x40030480

40007a48 <CyFxAppErrorHandler>:
/* Application Error Handler */
void
CyFxAppErrorHandler (
        CyU3PReturnStatus_t apiRetStatus    /* API return status */
        )
{
40007a48:	e92d4008 	push	{r3, lr}
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007a4c:	e59f1010 	ldr	r1, [pc, #16]	; 40007a64 <CyFxAppErrorHandler+0x1c>
40007a50:	e3a00004 	mov	r0, #4
40007a54:	eb002e25 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007a58:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007a5c:	eb000485 	bl	40008c78 <_tx_thread_sleep>
40007a60:	eafffff9 	b	40007a4c <CyFxAppErrorHandler+0x4>
40007a64:	40011588 	.word	0x40011588

40007a68 <UVCAppThread_Entry>:


void
UVCAppThread_Entry (
        uint32_t input)
{
40007a68:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}
40007a6c:	e24dd0bc 	sub	sp, sp, #188	; 0xbc
{
    CyU3PUartConfig_t uartConfig;
    CyU3PReturnStatus_t apiRetStatus;

    /* Initialize the UART for printing debug messages */
    apiRetStatus = CyU3PUartInit ();
40007a70:	eb006d8e 	bl	400230b0 <CyU3PUartInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007a74:	e2504000 	subs	r4, r0, #0
40007a78:	0a000004 	beq	40007a90 <UVCAppThread_Entry+0x28>
    {
        CyU3PDebugPrint (4, "UART initialization failed!\n");
40007a7c:	e3a00004 	mov	r0, #4
40007a80:	e59f1bb4 	ldr	r1, [pc, #2996]	; 4000863c <UVCAppThread_Entry+0xbd4>
40007a84:	eb002e19 	bl	400132f0 <CyU3PDebugPrint>
        CyFxAppErrorHandler (apiRetStatus);
40007a88:	e1a00004 	mov	r0, r4
40007a8c:	ebffffed 	bl	40007a48 <CyFxAppErrorHandler>
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007a90:	e59fcba8 	ldr	ip, [pc, #2984]	; 40008640 <UVCAppThread_Entry+0xbd8>
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007a94:	e3a03000 	mov	r3, #0
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007a98:	e3a02001 	mov	r2, #1
    uartConfig.rxEnable = CyFalse;
    uartConfig.flowCtrl = CyFalse;
    uartConfig.isDma    = CyTrue;

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007a9c:	e28d0050 	add	r0, sp, #80	; 0x50
40007aa0:	e1a01003 	mov	r1, r3
        CyU3PDebugPrint (4, "UART initialization failed!\n");
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Set UART Configuration */
    uartConfig.baudRate = CY_U3P_UART_BAUDRATE_115200;
40007aa4:	e58dc060 	str	ip, [sp, #96]	; 0x60
    uartConfig.stopBit  = CY_U3P_UART_ONE_STOP_BIT;
40007aa8:	e5cd2064 	strb	r2, [sp, #100]	; 0x64
    uartConfig.parity   = CY_U3P_UART_NO_PARITY;
40007aac:	e5cd3065 	strb	r3, [sp, #101]	; 0x65
    uartConfig.txEnable = CyTrue;
40007ab0:	e58d2050 	str	r2, [sp, #80]	; 0x50
    uartConfig.rxEnable = CyFalse;
40007ab4:	e58d3054 	str	r3, [sp, #84]	; 0x54
    uartConfig.flowCtrl = CyFalse;
40007ab8:	e58d3058 	str	r3, [sp, #88]	; 0x58
    uartConfig.isDma    = CyTrue;
40007abc:	e58d205c 	str	r2, [sp, #92]	; 0x5c

    /* Set the UART configuration */
    apiRetStatus = CyU3PUartSetConfig (&uartConfig, NULL);
40007ac0:	eb006df3 	bl	40023294 <CyU3PUartSetConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ac4:	e3500000 	cmp	r0, #0
40007ac8:	0a000000 	beq	40007ad0 <UVCAppThread_Entry+0x68>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007acc:	ebffffdd 	bl	40007a48 <CyFxAppErrorHandler>
    }

    /* Set the UART transfer */
    apiRetStatus = CyU3PUartTxSetBlockXfer (0xFFFFFFFF);
40007ad0:	e3e00000 	mvn	r0, #0
40007ad4:	eb006e75 	bl	400234b0 <CyU3PUartTxSetBlockXfer>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ad8:	e3500000 	cmp	r0, #0
40007adc:	0a000000 	beq	40007ae4 <UVCAppThread_Entry+0x7c>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007ae0:	ebffffd8 	bl	40007a48 <CyFxAppErrorHandler>
    }

    /* Initialize the Debug logger module. */
    apiRetStatus = CyU3PDebugInit (CY_U3P_LPP_SOCKET_UART_CONS, 4);
40007ae4:	e3a00003 	mov	r0, #3
40007ae8:	e3a01004 	mov	r1, #4
40007aec:	eb002d77 	bl	400130d0 <CyU3PDebugInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007af0:	e3500000 	cmp	r0, #0
40007af4:	0a000000 	beq	40007afc <UVCAppThread_Entry+0x94>
    {
        CyFxAppErrorHandler (apiRetStatus);
40007af8:	ebffffd2 	bl	40007a48 <CyFxAppErrorHandler>
    }

    /* Disable log message headers. */
    CyU3PDebugPreamble (CyFalse);
40007afc:	e3a00000 	mov	r0, #0
40007b00:	eb002df6 	bl	400132e0 <CyU3PDebugPreamble>
    /* Initialize the Uart Debug Module */
    CyFxUVCApplnDebugInit ();

    /* Initialize the I2C interface */
	while (i++ < 6){
		CyU3PThreadSleep(500);
40007b04:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b08:	eb00045a 	bl	40008c78 <_tx_thread_sleep>
40007b0c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b10:	eb000458 	bl	40008c78 <_tx_thread_sleep>
40007b14:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b18:	eb000456 	bl	40008c78 <_tx_thread_sleep>
40007b1c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b20:	eb000454 	bl	40008c78 <_tx_thread_sleep>
40007b24:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b28:	eb000452 	bl	40008c78 <_tx_thread_sleep>
40007b2c:	e3a00f7d 	mov	r0, #500	; 0x1f4
40007b30:	eb000450 	bl	40008c78 <_tx_thread_sleep>
CyFxUVCApplnI2CInit (void)
{
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40007b34:	eb006eeb 	bl	400236e8 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40007b38:	e2502000 	subs	r2, r0, #0
40007b3c:	1a000107 	bne	40007f60 <UVCAppThread_Entry+0x4f8>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007b40:	e59f5afc 	ldr	r5, [pc, #2812]	; 40008644 <UVCAppThread_Entry+0xbdc>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40007b44:	e3e04000 	mvn	r4, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007b48:	e1a01002 	mov	r1, r2
40007b4c:	e28d008c 	add	r0, sp, #140	; 0x8c
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
40007b50:	e58d508c 	str	r5, [sp, #140]	; 0x8c
    i2cConfig.isDma      = CyFalse;
40007b54:	e58d2090 	str	r2, [sp, #144]	; 0x90
    i2cConfig.busTimeout = 0xffffffffU;
40007b58:	e58d4094 	str	r4, [sp, #148]	; 0x94
    i2cConfig.dmaTimeout = 0xffff;
40007b5c:	e1cd49b8 	strh	r4, [sp, #152]	; 0x98

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40007b60:	eb006fd9 	bl	40023acc <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
40007b64:	e2501000 	subs	r1, r0, #0
40007b68:	1a000105 	bne	40007f84 <UVCAppThread_Entry+0x51c>
#ifdef USB_DEBUG_INTERFACE
    CyU3PDmaChannelConfig_t channelConfig;
#endif

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
40007b6c:	e59f4ad4 	ldr	r4, [pc, #2772]	; 40008648 <UVCAppThread_Entry+0xbe0>
40007b70:	e3a02028 	mov	r2, #40	; 0x28
40007b74:	e1a00004 	mov	r0, r4
40007b78:	eb000896 	bl	40009dd8 <_txe_event_flags_create>
    if (apiRetStatus != 0)
40007b7c:	e2502000 	subs	r2, r0, #0
40007b80:	1a000108 	bne	40007fa8 <UVCAppThread_Entry+0x540>

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007b84:	e3a07002 	mov	r7, #2
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007b88:	e1a01002 	mov	r1, r2

#ifdef UVC_PTZ_SUPPORT
    CyFxUvcAppPTZInit ();
#endif

    isUsbConnected = CyFalse;
40007b8c:	e584203c 	str	r2, [r4, #60]	; 0x3c
    clearFeatureRqtReceived = CyFalse;
40007b90:	e5842040 	str	r2, [r4, #64]	; 0x40
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007b94:	e28d009c 	add	r0, sp, #156	; 0x9c

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007b98:	e2876001 	add	r6, r7, #1
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
    gpioClock.slowClkDiv = 2;
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
40007b9c:	e5cd20a4 	strb	r2, [sp, #164]	; 0xa4
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
    gpioClock.halfDiv    = 0;
40007ba0:	e58d20a0 	str	r2, [sp, #160]	; 0xa0

    isUsbConnected = CyFalse;
    clearFeatureRqtReceived = CyFalse;

    /* Init the GPIO module */
    gpioClock.fastClkDiv = 2;
40007ba4:	e5cd709c 	strb	r7, [sp, #156]	; 0x9c
    gpioClock.slowClkDiv = 2;
40007ba8:	e5cd709d 	strb	r7, [sp, #157]	; 0x9d
    gpioClock.simpleDiv  = CY_U3P_GPIO_SIMPLE_DIV_BY_2;
    gpioClock.clkSrc     = CY_U3P_SYS_CLK;
40007bac:	e5cd60a5 	strb	r6, [sp, #165]	; 0xa5
    gpioClock.halfDiv    = 0;

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
40007bb0:	eb006bd4 	bl	40022b08 <CyU3PGpioInit>
    if (apiRetStatus != 0)
40007bb4:	e2502000 	subs	r2, r0, #0
40007bb8:	1a00017d 	bne	400081b4 <UVCAppThread_Entry+0x74c>
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
40007bbc:	e3a00016 	mov	r0, #22
40007bc0:	e3a01001 	mov	r1, #1
40007bc4:	eb002cb9 	bl	40012eb0 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007bc8:	e2502000 	subs	r2, r0, #0
40007bcc:	1a00016f 	bne	40008190 <UVCAppThread_Entry+0x728>
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
40007bd0:	e3a00014 	mov	r0, #20
40007bd4:	e3a01001 	mov	r1, #1
40007bd8:	eb002cb4 	bl	40012eb0 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007bdc:	e2502000 	subs	r2, r0, #0
40007be0:	1a00017c 	bne	400081d8 <UVCAppThread_Entry+0x770>
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
40007be4:	e3a00018 	mov	r0, #24
40007be8:	e3a01001 	mov	r1, #1
40007bec:	eb002caf 	bl	40012eb0 <CyU3PDeviceGpioOverride>
    if (apiRetStatus != 0)
40007bf0:	e2502000 	subs	r2, r0, #0
40007bf4:	1a00015c 	bne	4000816c <UVCAppThread_Entry+0x704>
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007bf8:	e3a05001 	mov	r5, #1
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007bfc:	e3a00016 	mov	r0, #22
40007c00:	e28d1068 	add	r1, sp, #104	; 0x68

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007c04:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007c08:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_RESET_GPIO is the Sensor reset pin */
    gpioConfig.outValue    = CyTrue;
40007c0c:	e58d5068 	str	r5, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007c10:	e58d506c 	str	r5, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007c14:	e58d5070 	str	r5, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
40007c18:	eb006c72 	bl	40022de8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c1c:	e2502000 	subs	r2, r0, #0
40007c20:	1a000120 	bne	400080a8 <UVCAppThread_Entry+0x640>
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007c24:	e3a00014 	mov	r0, #20
40007c28:	e28d1068 	add	r1, sp, #104	; 0x68
    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
    gpioConfig.driveLowEn  = CyTrue;
    gpioConfig.driveHighEn = CyTrue;
    gpioConfig.inputEn     = CyFalse;
40007c2c:	e58d2074 	str	r2, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007c30:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_POWER_GPIO is the Sensor power on/off pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyTrue;
40007c34:	e58d5068 	str	r5, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyTrue;
40007c38:	e58d506c 	str	r5, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyTrue;
40007c3c:	e58d5070 	str	r5, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
40007c40:	eb006c68 	bl	40022de8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c44:	e2502000 	subs	r2, r0, #0
40007c48:	1a00010d 	bne	40008084 <UVCAppThread_Entry+0x61c>
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007c4c:	e3a00018 	mov	r0, #24
40007c50:	e28d1068 	add	r1, sp, #104	; 0x68
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
40007c54:	e58d2068 	str	r2, [sp, #104]	; 0x68
    gpioConfig.driveLowEn  = CyFalse;
40007c58:	e58d206c 	str	r2, [sp, #108]	; 0x6c
    gpioConfig.driveHighEn = CyFalse;
40007c5c:	e58d2070 	str	r2, [sp, #112]	; 0x70
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
40007c60:	e5cd2078 	strb	r2, [sp, #120]	; 0x78
    /* SENSOR_SNAPSHOT_GPIO is the Sensor snap shot button detecting pin */
//    gpioConfig.outValue    = CyFalse; /* set output value is low and the rest of the setting is the same as what of the reset gpio pin */
    gpioConfig.outValue    = CyFalse;
    gpioConfig.driveLowEn  = CyFalse;
    gpioConfig.driveHighEn = CyFalse;
    gpioConfig.inputEn     = CyTrue;
40007c64:	e58d5074 	str	r5, [sp, #116]	; 0x74
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
40007c68:	eb006c5e 	bl	40022de8 <CyU3PGpioSetSimpleConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c6c:	e2502000 	subs	r2, r0, #0
40007c70:	1a0000fa 	bne	40008060 <UVCAppThread_Entry+0x5f8>
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
    pibclock.isDllEnable = CyFalse;
40007c74:	e3a08000 	mov	r8, #0
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007c78:	e3a07002 	mov	r7, #2
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007c7c:	e3a06003 	mov	r6, #3
    pibclock.isDllEnable = CyFalse;
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007c80:	e3a00001 	mov	r0, #1
40007c84:	e28d107c 	add	r1, sp, #124	; 0x7c
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Initialize the P-port. */
    pibclock.clkDiv      = 2;
40007c88:	e1cd77bc 	strh	r7, [sp, #124]	; 0x7c
    pibclock.clkSrc      = CY_U3P_SYS_CLK;
40007c8c:	e5cd6088 	strb	r6, [sp, #136]	; 0x88
    pibclock.isDllEnable = CyFalse;
40007c90:	e58d8084 	str	r8, [sp, #132]	; 0x84
    pibclock.isHalfDiv   = CyFalse;
40007c94:	e58d8080 	str	r8, [sp, #128]	; 0x80

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
40007c98:	eb004cec 	bl	4001b050 <CyU3PPibInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007c9c:	e2502000 	subs	r2, r0, #0
40007ca0:	1a0001bf 	bne	400083a4 <UVCAppThread_Entry+0x93c>
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Setup the Callback to Handle the GPIF INTR event */
    CyU3PGpifRegisterCallback (CyFxGpifCB);
40007ca4:	e59f09a0 	ldr	r0, [pc, #2464]	; 4000864c <UVCAppThread_Entry+0xbe4>
40007ca8:	eb004f66 	bl	4001ba48 <CyU3PGpifRegisterCallback>
    back_flow_detected = 0;
    CyU3PPibRegisterCallback (CyFxUvcAppPibCallback, CYU3P_PIB_INTR_ERROR);
#endif

    /* Image sensor initialization. Reset and then initialize with appropriate configuration. */
    SensorReset ();
40007cac:	ebfff201 	bl	400044b8 <SensorReset>
    SensorInit ();
40007cb0:	ebfff230 	bl	40004578 <SensorInit>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
40007cb4:	eb0059d9 	bl	4001e420 <CyU3PUsbStart>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007cb8:	e2508000 	subs	r8, r0, #0
40007cbc:	1a0001ae 	bne	4000837c <UVCAppThread_Entry+0x914>
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }
    /* Setup the Callback to Handle the USB Setup Requests */
    CyU3PUsbRegisterSetupCallback (CyFxUVCApplnUSBSetupCB, CyFalse);
40007cc0:	e1a01008 	mov	r1, r8
40007cc4:	e59f0984 	ldr	r0, [pc, #2436]	; 40008650 <UVCAppThread_Entry+0xbe8>
40007cc8:	eb00648b 	bl	40020efc <CyU3PUsbRegisterSetupCallback>

    /* Setup the Callback to Handle the USB Events */
    CyU3PUsbRegisterEventCallback (CyFxUVCApplnUSBEventCB);
40007ccc:	e59f0980 	ldr	r0, [pc, #2432]	; 40008654 <UVCAppThread_Entry+0xbec>
40007cd0:	eb006474 	bl	40020ea8 <CyU3PUsbRegisterEventCallback>

    /* setup the callback to handle the interrupt endpoint events */
    //CyU3PUsbRegisterEpEvtCallback(CyFxAppIntEpCb, 0x000000FF, 0, 0xFF); //0x04 for interrupt endpoint (SuperSpeed)

    /* Register the USB device descriptors with the driver. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscr);
40007cd4:	e59f297c 	ldr	r2, [pc, #2428]	; 40008658 <UVCAppThread_Entry+0xbf0>
40007cd8:	e1a01008 	mov	r1, r8
40007cdc:	e3a00001 	mov	r0, #1
40007ce0:	eb0057ae 	bl	4001dba0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_DEVICE_DESCR, NULL, (uint8_t *)CyFxUSBDeviceDscrSS);
40007ce4:	e1a01008 	mov	r1, r8
40007ce8:	e59f296c 	ldr	r2, [pc, #2412]	; 4000865c <UVCAppThread_Entry+0xbf4>
40007cec:	e1a00008 	mov	r0, r8
40007cf0:	eb0057aa 	bl	4001dba0 <CyU3PUsbSetDesc>

    /* BOS and Device qualifier descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_DEVQUAL_DESCR, NULL, (uint8_t *)CyFxUSBDeviceQualDscr);
40007cf4:	e1a01008 	mov	r1, r8
40007cf8:	e59f2960 	ldr	r2, [pc, #2400]	; 40008660 <UVCAppThread_Entry+0xbf8>
40007cfc:	e3a00002 	mov	r0, #2
40007d00:	eb0057a6 	bl	4001dba0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_BOS_DESCR, NULL, (uint8_t *)CyFxUSBBOSDscr);
40007d04:	e1a01008 	mov	r1, r8
40007d08:	e59f2954 	ldr	r2, [pc, #2388]	; 40008664 <UVCAppThread_Entry+0xbfc>
40007d0c:	e3a00007 	mov	r0, #7
40007d10:	eb0057a2 	bl	4001dba0 <CyU3PUsbSetDesc>

    /* Configuration descriptors. */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_HS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBHSConfigDscr);
40007d14:	e59f294c 	ldr	r2, [pc, #2380]	; 40008668 <UVCAppThread_Entry+0xc00>
40007d18:	e1a01008 	mov	r1, r8
40007d1c:	e3a00004 	mov	r0, #4
40007d20:	eb00579e 	bl	4001dba0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_FS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBFSConfigDscr);
40007d24:	e1a01008 	mov	r1, r8
40007d28:	e59f293c 	ldr	r2, [pc, #2364]	; 4000866c <UVCAppThread_Entry+0xc04>
40007d2c:	e1a00006 	mov	r0, r6
40007d30:	eb00579a 	bl	4001dba0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_SS_CONFIG_DESCR, NULL, (uint8_t *)CyFxUSBSSConfigDscr);
40007d34:	e1a01008 	mov	r1, r8
40007d38:	e59f2930 	ldr	r2, [pc, #2352]	; 40008670 <UVCAppThread_Entry+0xc08>
40007d3c:	e3a00006 	mov	r0, #6
40007d40:	eb005796 	bl	4001dba0 <CyU3PUsbSetDesc>

    /* String Descriptors */
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 0, (uint8_t *)CyFxUSBStringLangIDDscr);
40007d44:	e1a01008 	mov	r1, r8
40007d48:	e59f2924 	ldr	r2, [pc, #2340]	; 40008674 <UVCAppThread_Entry+0xc0c>
40007d4c:	e3a00005 	mov	r0, #5
40007d50:	eb005792 	bl	4001dba0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 1, (uint8_t *)CyFxUSBManufactureDscr);
40007d54:	e3a01001 	mov	r1, #1
40007d58:	e59f2918 	ldr	r2, [pc, #2328]	; 40008678 <UVCAppThread_Entry+0xc10>
40007d5c:	e3a00005 	mov	r0, #5
40007d60:	eb00578e 	bl	4001dba0 <CyU3PUsbSetDesc>
    CyU3PUsbSetDesc (CY_U3P_USB_SET_STRING_DESCR, 2, (uint8_t *)CyFxUSBProductDscr);
40007d64:	e3a01002 	mov	r1, #2
40007d68:	e59f290c 	ldr	r2, [pc, #2316]	; 4000867c <UVCAppThread_Entry+0xc14>
40007d6c:	e3a00005 	mov	r0, #5
40007d70:	eb00578a 	bl	4001dba0 <CyU3PUsbSetDesc>
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007d74:	e3a05001 	mov	r5, #1
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
    endPointConfig.isoPkts  = 0;
    endPointConfig.streams  = 0;
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007d78:	e3a00082 	mov	r0, #130	; 0x82
40007d7c:	e28d10a8 	add	r1, sp, #168	; 0xa8
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
    endPointConfig.pcktSize = 64;
40007d80:	e3a0a040 	mov	sl, #64	; 0x40
    /* Configure the status interrupt endpoint.
       Note: This endpoint is not being used by the application as of now. This can be used in case
       UVC device needs to notify the host about any error conditions. A MANUAL_OUT DMA channel
       can be associated with this endpoint and used to send these data packets.
     */
    endPointConfig.enable   = 1;
40007d84:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_INTR;
40007d88:	e5cd60ac 	strb	r6, [sp, #172]	; 0xac
    endPointConfig.pcktSize = 64;
40007d8c:	e1cdabb0 	strh	sl, [sp, #176]	; 0xb0
    endPointConfig.isoPkts  = 0;
40007d90:	e5cd80b3 	strb	r8, [sp, #179]	; 0xb3
    endPointConfig.streams  = 0;
40007d94:	e1cd8abe 	strh	r8, [sp, #174]	; 0xae
    endPointConfig.burstLen = 1;
40007d98:	e5cd50b2 	strb	r5, [sp, #178]	; 0xb2
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
40007d9c:	eb0050e6 	bl	4001c13c <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007da0:	e2503000 	subs	r3, r0, #0
40007da4:	1a00016a 	bne	40008354 <UVCAppThread_Entry+0x8ec>
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
    dmaInterConfig.count          = 1;
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007da8:	e59fc8d0 	ldr	ip, [pc, #2256]	; 40008680 <UVCAppThread_Entry+0xc18>
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007dac:	e59fe8d0 	ldr	lr, [pc, #2256]	; 40008684 <UVCAppThread_Entry+0xc1c>
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007db0:	e3a06b01 	mov	r6, #1024	; 0x400
    dmaInterConfig.prodAvailCount = 0;
    dmaInterConfig.prodHeader     = 0;
    dmaInterConfig.prodFooter     = 0;
    dmaInterConfig.consHeader     = 0;
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007db4:	e3a0a010 	mov	sl, #16
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007db8:	e59f08c8 	ldr	r0, [pc, #2248]	; 40008688 <UVCAppThread_Entry+0xc20>
40007dbc:	e3a01004 	mov	r1, #4
40007dc0:	e28d2034 	add	r2, sp, #52	; 0x34
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* create a DMA for interrupt endpoint */
    dmaInterConfig.size           = 1024;
40007dc4:	e1cd63b4 	strh	r6, [sp, #52]	; 0x34
    dmaInterConfig.count          = 1;
40007dc8:	e1cd53b6 	strh	r5, [sp, #54]	; 0x36
    dmaInterConfig.prodSckId      = CY_U3P_CPU_SOCKET_PROD;
40007dcc:	e1cdc3b8 	strh	ip, [sp, #56]	; 0x38
    dmaInterConfig.consSckId      = CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_CONTROL_STATUS_SOCKET;
40007dd0:	e1cde3ba 	strh	lr, [sp, #58]	; 0x3a
    dmaInterConfig.prodAvailCount = 0;
40007dd4:	e1cd33bc 	strh	r3, [sp, #60]	; 0x3c
    dmaInterConfig.prodHeader     = 0;
40007dd8:	e1cd33be 	strh	r3, [sp, #62]	; 0x3e
    dmaInterConfig.prodFooter     = 0;
40007ddc:	e1cd34b0 	strh	r3, [sp, #64]	; 0x40
    dmaInterConfig.consHeader     = 0;
40007de0:	e1cd34b2 	strh	r3, [sp, #66]	; 0x42
    dmaInterConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007de4:	e5cd8044 	strb	r8, [sp, #68]	; 0x44
    dmaInterConfig.notification   = CY_U3P_DMA_CB_CONS_EVENT;
40007de8:	e58da048 	str	sl, [sp, #72]	; 0x48
    dmaInterConfig.cb             = CyFxUvcAppInterInCallback;
40007dec:	e58d304c 	str	r3, [sp, #76]	; 0x4c
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
40007df0:	eb003754 	bl	40015b48 <CyU3PDmaChannelCreate>
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007df4:	e2506000 	subs	r6, r0, #0
40007df8:	1a00014b 	bne	4000832c <UVCAppThread_Entry+0x8c4>
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007dfc:	e3a00b01 	mov	r0, #1024	; 0x400
40007e00:	ebffefd8 	bl	40003d68 <CyU3PDmaBufferAlloc>
40007e04:	e59f1880 	ldr	r1, [pc, #2176]	; 4000868c <UVCAppThread_Entry+0xc24>
    if (glInterStaBuffer == 0)
40007e08:	e3500000 	cmp	r0, #0
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
40007e0c:	e5810000 	str	r0, [r1]
    if (glInterStaBuffer == 0)
40007e10:	0a000175 	beq	400083ec <UVCAppThread_Entry+0x984>
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
40007e14:	e1a01006 	mov	r1, r6
40007e18:	e1a02006 	mov	r2, r6
40007e1c:	e3a03038 	mov	r3, #56	; 0x38
40007e20:	e59f0868 	ldr	r0, [pc, #2152]	; 40008690 <UVCAppThread_Entry+0xc28>
40007e24:	eb0008a5 	bl	4000a0c0 <_txe_mutex_create>
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
40007e28:	e3a03004 	mov	r3, #4
40007e2c:	e1cd30be 	strh	r3, [sp, #14]
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007e30:	e59f385c 	ldr	r3, [pc, #2140]	; 40008694 <UVCAppThread_Entry+0xc2c>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
40007e34:	e3a0c901 	mov	ip, #16384	; 0x4000
40007e38:	e1cdc0bc 	strh	ip, [sp, #12]
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
40007e3c:	e3a0cc01 	mov	ip, #256	; 0x100
40007e40:	e1cdc1b2 	strh	ip, [sp, #18]
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
40007e44:	e1cd31b4 	strh	r3, [sp, #20]
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007e48:	e59fc848 	ldr	ip, [pc, #2120]	; 40008698 <UVCAppThread_Entry+0xc30>
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
40007e4c:	e3a0300c 	mov	r3, #12
40007e50:	e1cd32b4 	strh	r3, [sp, #36]	; 0x24
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007e54:	e59f3840 	ldr	r3, [pc, #2112]	; 4000869c <UVCAppThread_Entry+0xc34>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007e58:	e28d200c 	add	r2, sp, #12
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
40007e5c:	e1cdc1ba 	strh	ip, [sp, #26]
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
40007e60:	e5cd802a 	strb	r8, [sp, #42]	; 0x2a
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007e64:	e3a0c004 	mov	ip, #4
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007e68:	e59f0830 	ldr	r0, [pc, #2096]	; 400086a0 <UVCAppThread_Entry+0xc38>
40007e6c:	e3a01007 	mov	r1, #7
    dmaMultiConfig.prodAvailCount = 0;
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
    dmaMultiConfig.consHeader     = 0;
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007e70:	e3a08018 	mov	r8, #24

    /* Create a DMA Manual channel for sending the video data to the USB host. */
    CyU3PMutexCreate(&imgHdMux, CYU3P_NO_INHERIT);// create a mutex for the image header operation.
    dmaMultiConfig.size           = CY_FX_UVC_STREAM_BUF_SIZE;
    dmaMultiConfig.count          = CY_FX_UVC_STREAM_BUF_COUNT;
    dmaMultiConfig.validSckCount  = 2;
40007e74:	e1cd71b0 	strh	r7, [sp, #16]
    dmaMultiConfig.prodSckId [0]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_0;
    dmaMultiConfig.prodSckId [1]  = (CyU3PDmaSocketId_t)CY_U3P_PIB_SOCKET_1;
    dmaMultiConfig.consSckId [0]  = (CyU3PDmaSocketId_t)(CY_U3P_UIB_SOCKET_CONS_0 | CY_FX_EP_VIDEO_CONS_SOCKET);
    dmaMultiConfig.prodAvailCount = 0;
40007e78:	e1cd62b2 	strh	r6, [sp, #34]	; 0x22
    dmaMultiConfig.prodHeader     = 12;                 /* 12 byte UVC header to be added. */
    dmaMultiConfig.prodFooter     = 4;                  /* 4 byte footer to compensate for the 12 byte header. */
40007e7c:	e1cdc2b6 	strh	ip, [sp, #38]	; 0x26
    dmaMultiConfig.consHeader     = 0;
40007e80:	e1cd62b8 	strh	r6, [sp, #40]	; 0x28
    dmaMultiConfig.dmaMode        = CY_U3P_DMA_MODE_BYTE;
    dmaMultiConfig.notification   = CY_U3P_DMA_CB_PROD_EVENT | CY_U3P_DMA_CB_CONS_EVENT;
40007e84:	e58d802c 	str	r8, [sp, #44]	; 0x2c
    dmaMultiConfig.cb             = CyFxUvcApplnDmaCallback;
40007e88:	e58d3030 	str	r3, [sp, #48]	; 0x30
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
40007e8c:	eb00404d 	bl	40017fc8 <CyU3PDmaMultiChannelCreate>
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
40007e90:	e2502000 	subs	r2, r0, #0
40007e94:	1a00014b 	bne	400083c8 <UVCAppThread_Entry+0x960>
        CyFxAppErrorHandler (CY_U3P_ERROR_MEMORY_ERROR);
    }
#endif

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
40007e98:	e1a00005 	mov	r0, r5
40007e9c:	e1a01005 	mov	r1, r5
40007ea0:	eb004fa1 	bl	4001bd2c <CyU3PConnectState>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ea4:	e2502000 	subs	r2, r0, #0
40007ea8:	1a000063 	bne	4000803c <UVCAppThread_Entry+0x5d4>
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);
40007eac:	e3a00064 	mov	r0, #100	; 0x64
40007eb0:	eb002e7f 	bl	400138b4 <CyU3PBusyWait>

    usbSpeed = CyU3PUsbGetSpeed();
40007eb4:	eb00544e 	bl	4001cff4 <CyU3PUsbGetSpeed>
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007eb8:	e3a02000 	mov	r2, #0
    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
40007ebc:	e5cd70ac 	strb	r7, [sp, #172]	; 0xac
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007ec0:	e28d10a8 	add	r1, sp, #168	; 0xa8
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
40007ec4:	e1cd2abe 	strh	r2, [sp, #174]	; 0xae

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();

    endPointConfig.enable   = 1;
40007ec8:	e58d50a8 	str	r5, [sp, #168]	; 0xa8
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
40007ecc:	e3500003 	cmp	r0, #3
        CyFxAppErrorHandler (apiRetStatus);
    }

    CyU3PBusyWait(100);

    usbSpeed = CyU3PUsbGetSpeed();
40007ed0:	e5c40048 	strb	r0, [r4, #72]	; 0x48
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007ed4:	13a00c02 	movne	r0, #512	; 0x200

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007ed8:	03a07b01 	moveq	r7, #1024	; 0x400
    	endPointConfig.burstLen = 16;
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
40007edc:	11cd0bb0 	strhne	r0, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 1;
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007ee0:	e3a00083 	mov	r0, #131	; 0x83

    endPointConfig.enable   = 1;
    endPointConfig.epType   = CY_U3P_USB_EP_BULK;
    if(usbSpeed == CY_U3P_SUPER_SPEED)  /*for usb3.0 super-speed mode */
    {
    	endPointConfig.pcktSize = CY_FX_EP_BULK_VIDEO_PKT_SIZE;
40007ee4:	01cd7bb0 	strheq	r7, [sp, #176]	; 0xb0
    	endPointConfig.burstLen = 16;
40007ee8:	05cda0b2 	strbeq	sl, [sp, #178]	; 0xb2
    }
    else		/* for usb2.0 high-speed mode */
    {
    	endPointConfig.pcktSize = 0x200;
    	endPointConfig.burstLen = 1;
40007eec:	15cd50b2 	strbne	r5, [sp, #178]	; 0xb2
    }
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
40007ef0:	eb005091 	bl	4001c13c <CyU3PSetEpConfig>
    if (apiRetStatus != CY_U3P_SUCCESS)
40007ef4:	e2502000 	subs	r2, r0, #0
40007ef8:	1a000046 	bne	40008018 <UVCAppThread_Entry+0x5b0>
40007efc:	e59f77a0 	ldr	r7, [pc, #1952]	; 400086a4 <UVCAppThread_Entry+0xc3c>
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007f00:	e59f5740 	ldr	r5, [pc, #1856]	; 40008648 <UVCAppThread_Entry+0xbe0>
40007f04:	e1a06002 	mov	r6, r2
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40007f08:	e3e0a000 	mvn	sl, #0
     */

    for (;;)
    {
        /* Waiting for the Video Stream Event */
        if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag,
40007f0c:	e59f0734 	ldr	r0, [pc, #1844]	; 40008648 <UVCAppThread_Entry+0xbe0>
40007f10:	e3a01001 	mov	r1, #1
40007f14:	e3a02002 	mov	r2, #2
40007f18:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007f1c:	e58d6000 	str	r6, [sp]
40007f20:	eb00081c 	bl	40009f98 <_txe_event_flags_get>
40007f24:	e3500000 	cmp	r0, #0
40007f28:	1a000027 	bne	40007fcc <UVCAppThread_Entry+0x564>
                }
            }
#endif
            /* If we have the end of frame signal and all of the committed data has been read by the USB host;
               we can reset the DMA channel and prepare for the next video frame. */
            if ((hitFV) && (prodCount == consCount))
40007f2c:	e595e044 	ldr	lr, [r5, #68]	; 0x44
40007f30:	e35e0000 	cmp	lr, #0
40007f34:	0a000003 	beq	40007f48 <UVCAppThread_Entry+0x4e0>
40007f38:	e1d512be 	ldrh	r1, [r5, #46]	; 0x2e
40007f3c:	e1d583b0 	ldrh	r8, [r5, #48]	; 0x30
40007f40:	e1510008 	cmp	r1, r8
40007f44:	0a000060 	beq	400080cc <UVCAppThread_Entry+0x664>
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
                }
            }
        }
        CyU3PEventSet (&glFxUVCEvent, VD_FX_INT_STA_EVENT, CYU3P_EVENT_OR);//check snap shot button
40007f48:	e3a01040 	mov	r1, #64	; 0x40
40007f4c:	e3a02000 	mov	r2, #0
40007f50:	e59f06f0 	ldr	r0, [pc, #1776]	; 40008648 <UVCAppThread_Entry+0xbe0>
40007f54:	eb00083f 	bl	4000a058 <_txe_event_flags_set>

        /* Allow other ready threads to run before proceeding. */
        CyU3PThreadRelinquish ();
40007f58:	eb000af7 	bl	4000ab3c <_txe_thread_relinquish>
    }
40007f5c:	eaffffea 	b	40007f0c <UVCAppThread_Entry+0x4a4>
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
40007f60:	e3a00004 	mov	r0, #4
40007f64:	e59f173c 	ldr	r1, [pc, #1852]	; 400086a8 <UVCAppThread_Entry+0xc40>
40007f68:	eb002ce0 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f6c:	e59f1738 	ldr	r1, [pc, #1848]	; 400086ac <UVCAppThread_Entry+0xc44>
40007f70:	e3a00004 	mov	r0, #4
40007f74:	eb002cdd 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f78:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007f7c:	eb00033d 	bl	40008c78 <_tx_thread_sleep>
40007f80:	eafffff9 	b	40007f6c <UVCAppThread_Entry+0x504>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40007f84:	e3a00004 	mov	r0, #4
40007f88:	e59f1720 	ldr	r1, [pc, #1824]	; 400086b0 <UVCAppThread_Entry+0xc48>
40007f8c:	eb002cd7 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007f90:	e59f1714 	ldr	r1, [pc, #1812]	; 400086ac <UVCAppThread_Entry+0xc44>
40007f94:	e3a00004 	mov	r0, #4
40007f98:	eb002cd4 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007f9c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fa0:	eb000334 	bl	40008c78 <_tx_thread_sleep>
40007fa4:	eafffff9 	b	40007f90 <UVCAppThread_Entry+0x528>

    /* Create UVC event group */
    apiRetStatus = CyU3PEventCreate (&glFxUVCEvent);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "UVC Create Event failed, Error Code = %d\n", apiRetStatus);
40007fa8:	e3a00004 	mov	r0, #4
40007fac:	e59f1700 	ldr	r1, [pc, #1792]	; 400086b4 <UVCAppThread_Entry+0xc4c>
40007fb0:	eb002cce 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40007fb4:	e59f16f0 	ldr	r1, [pc, #1776]	; 400086ac <UVCAppThread_Entry+0xc44>
40007fb8:	e3a00004 	mov	r0, #4
40007fbc:	eb002ccb 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40007fc0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40007fc4:	eb00032b 	bl	40008c78 <_tx_thread_sleep>
40007fc8:	eafffff9 	b	40007fb4 <UVCAppThread_Entry+0x54c>
                }
        }
        else
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
40007fcc:	e59f0674 	ldr	r0, [pc, #1652]	; 40008648 <UVCAppThread_Entry+0xbe0>
40007fd0:	e3a01002 	mov	r1, #2
40007fd4:	e3a02003 	mov	r2, #3
40007fd8:	e28d30b4 	add	r3, sp, #180	; 0xb4
40007fdc:	e58d6000 	str	r6, [sp]
40007fe0:	eb0007ec 	bl	40009f98 <_txe_event_flags_get>
40007fe4:	e3500000 	cmp	r0, #0
40007fe8:	1a00011a 	bne	40008458 <UVCAppThread_Entry+0x9f0>
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007fec:	e5953040 	ldr	r3, [r5, #64]	; 0x40
        {
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
40007ff0:	e5856044 	str	r6, [r5, #68]	; 0x44
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
40007ff4:	e3530000 	cmp	r3, #0
            /* If we have a stream abort request pending. */
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
40007ff8:	e1c562be 	strh	r6, [r5, #46]	; 0x2e
                if(0&&(prinflag == 0)){
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
40007ffc:	e1c562b8 	strh	r6, [r5, #40]	; 0x28
            if (CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_ABORT_EVENT, CYU3P_EVENT_AND_CLEAR,
                        &flag, CYU3P_NO_WAIT) == CY_U3P_SUCCESS)
            {
                hitFV     = CyFalse;
                prodCount = 0;
                consCount = 0;
40008000:	e1c563b0 	strh	r6, [r5, #48]	; 0x30
                	CyU3PDebugPrint (4, "(0) fb %d pb % pbc %\n", fb, pb, pbc);
                	prinflag = 1;
                }
                //fbbak=fb; pbbak=pb; pbcbak=pbc;
                fb=0;
                pb=0;
40008004:	e1c562ba 	strh	r6, [r5, #42]	; 0x2a
                pbc=0;
40008008:	e1c562bc 	strh	r6, [r5, #44]	; 0x2c

                if (!clearFeatureRqtReceived)
4000800c:	0a0000ff 	beq	40008410 <UVCAppThread_Entry+0x9a8>

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
                }

                clearFeatureRqtReceived = CyFalse;
40008010:	e5846040 	str	r6, [r4, #64]	; 0x40
40008014:	eaffffcb 	b	40007f48 <UVCAppThread_Entry+0x4e0>
    endPointConfig.streams  = 0;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_BULK_VIDEO, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40008018:	e3a00004 	mov	r0, #4
4000801c:	e59f1694 	ldr	r1, [pc, #1684]	; 400086b8 <UVCAppThread_Entry+0xc50>
40008020:	eb002cb2 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008024:	e59f1680 	ldr	r1, [pc, #1664]	; 400086ac <UVCAppThread_Entry+0xc44>
40008028:	e3a00004 	mov	r0, #4
4000802c:	eb002caf 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008030:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008034:	eb00030f 	bl	40008c78 <_tx_thread_sleep>
40008038:	eafffff9 	b	40008024 <UVCAppThread_Entry+0x5bc>

    /* Enable USB connection from the FX3 device, preferably at USB 3.0 speed. */
    apiRetStatus = CyU3PConnectState (CyTrue, CyTrue);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Connect failed, Error Code = %d\n", apiRetStatus);
4000803c:	e3a00004 	mov	r0, #4
40008040:	e59f1674 	ldr	r1, [pc, #1652]	; 400086bc <UVCAppThread_Entry+0xc54>
40008044:	eb002ca9 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008048:	e59f165c 	ldr	r1, [pc, #1628]	; 400086ac <UVCAppThread_Entry+0xc44>
4000804c:	e3a00004 	mov	r0, #4
40008050:	eb002ca6 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008054:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008058:	eb000306 	bl	40008c78 <_tx_thread_sleep>
4000805c:	eafffff9 	b	40008048 <UVCAppThread_Entry+0x5e0>
    gpioConfig.inputEn     = CyTrue;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_SNAPSHOT_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (snap shot 24) Config Error, Error Code = %d\n", apiRetStatus);
40008060:	e3a00004 	mov	r0, #4
40008064:	e59f1654 	ldr	r1, [pc, #1620]	; 400086c0 <UVCAppThread_Entry+0xc58>
40008068:	eb002ca0 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000806c:	e59f1638 	ldr	r1, [pc, #1592]	; 400086ac <UVCAppThread_Entry+0xc44>
40008070:	e3a00004 	mov	r0, #4
40008074:	eb002c9d 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008078:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000807c:	eb0002fd 	bl	40008c78 <_tx_thread_sleep>
40008080:	eafffff9 	b	4000806c <UVCAppThread_Entry+0x604>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_POWER_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (power 20) Config Error, Error Code = %d\n", apiRetStatus);
40008084:	e3a00004 	mov	r0, #4
40008088:	e59f1634 	ldr	r1, [pc, #1588]	; 400086c4 <UVCAppThread_Entry+0xc5c>
4000808c:	eb002c97 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008090:	e59f1614 	ldr	r1, [pc, #1556]	; 400086ac <UVCAppThread_Entry+0xc44>
40008094:	e3a00004 	mov	r0, #4
40008098:	eb002c94 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000809c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080a0:	eb0002f4 	bl	40008c78 <_tx_thread_sleep>
400080a4:	eafffff9 	b	40008090 <UVCAppThread_Entry+0x628>
    gpioConfig.inputEn     = CyFalse;
    gpioConfig.intrMode    = CY_U3P_GPIO_NO_INTR;
    apiRetStatus           = CyU3PGpioSetSimpleConfig (SENSOR_RESET_GPIO, &gpioConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "GPIO Set (reset 22) Config Error, Error Code = %d\n", apiRetStatus);
400080a8:	e3a00004 	mov	r0, #4
400080ac:	e59f1614 	ldr	r1, [pc, #1556]	; 400086c8 <UVCAppThread_Entry+0xc60>
400080b0:	eb002c8e 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400080b4:	e59f15f0 	ldr	r1, [pc, #1520]	; 400086ac <UVCAppThread_Entry+0xc44>
400080b8:	e3a00004 	mov	r0, #4
400080bc:	eb002c8b 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400080c0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400080c4:	eb0002eb 	bl	40008c78 <_tx_thread_sleep>
400080c8:	eafffff9 	b	400080b4 <UVCAppThread_Entry+0x64c>
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
400080cc:	e1c562be 	strh	r6, [r5, #46]	; 0x2e
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
400080d0:	e59f05b8 	ldr	r0, [pc, #1464]	; 40008690 <UVCAppThread_Entry+0xc28>
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
            	pb=0;
            	pbc=0;
                prodCount = 0;
                consCount = 0;
400080d4:	e1c563b0 	strh	r6, [r5, #48]	; 0x30
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
400080d8:	e3e01000 	mvn	r1, #0
            	if(0&&(prinflag == 0)){
            		CyU3PDebugPrint (4, "(1) fb %d pb % pbc %\n", fb, pb, pbc);
            		prinflag = 1;
            	}
            	//fbbak=fb; pbbak=pb; pbcbak=pbc;
            	fb=0;
400080dc:	e1c562b8 	strh	r6, [r5, #40]	; 0x28
            	pb=0;
400080e0:	e1c562ba 	strh	r6, [r5, #42]	; 0x2a
            	pbc=0;
400080e4:	e1c562bc 	strh	r6, [r5, #44]	; 0x2c
                prodCount = 0;
                consCount = 0;
                hitFV     = CyFalse;
400080e8:	e5856044 	str	r6, [r5, #68]	; 0x44
                /* set image ready flag isFlag and set default camera parameters */
                //if(frameCnt%5 == 0){//2 frame interval
                	//;//CyU3PEventSet (&glFxUVCEvent, VD_FX_I2C_CMD_EVENT, CYU3P_EVENT_OR); //each frame trigger I2C thread sending command.
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
400080ec:	eb000871 	bl	4000a2b8 <_txe_mutex_get>
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
400080f0:	e5d72481 	ldrb	r2, [r7, #1153]	; 0x481
400080f4:	e222c001 	eor	ip, r2, #1
400080f8:	e5c7c481 	strb	ip, [r7, #1153]	; 0x481
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
400080fc:	e59530a0 	ldr	r3, [r5, #160]	; 0xa0
40008100:	e35300f0 	cmp	r3, #240	; 0xf0
40008104:	0a00007c 	beq	400082fc <UVCAppThread_Entry+0x894>
                       	//SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                     	//CyU3PThreadSleep(100);
                		stiflag = 0xFF;
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late
40008108:	e594e0a0 	ldr	lr, [r4, #160]	; 0xa0
4000810c:	e35e00ff 	cmp	lr, #255	; 0xff
40008110:	0a00006d 	beq	400082cc <UVCAppThread_Entry+0x864>
                 		/*if(IMcount > 0x4){
                			stiflag = 0x0F;
                			IMcount = 0;
                		}*/

                }else if(stiflag==0xAA){//recovery video stream res. after one still frame set.
40008114:	e59500a0 	ldr	r0, [r5, #160]	; 0xa0
40008118:	e35000aa 	cmp	r0, #170	; 0xaa
4000811c:	0a000048 	beq	40008244 <UVCAppThread_Entry+0x7dc>
                    IMcount = 0;
                	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	stiflag = 0x0;
                	}
                }
                CyU3PMutexPut(&imgHdMux);
40008120:	e59f0568 	ldr	r0, [pc, #1384]	; 40008690 <UVCAppThread_Entry+0xc28>
40008124:	eb000898 	bl	4000a38c <_txe_mutex_put>
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008128:	e59f0570 	ldr	r0, [pc, #1392]	; 400086a0 <UVCAppThread_Entry+0xc38>
4000812c:	eb004176 	bl	4001870c <CyU3PDmaMultiChannelReset>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008130:	e2502000 	subs	r2, r0, #0
40008134:	1a000039 	bne	40008220 <UVCAppThread_Entry+0x7b8>
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008138:	e1a01002 	mov	r1, r2
4000813c:	e59f055c 	ldr	r0, [pc, #1372]	; 400086a0 <UVCAppThread_Entry+0xc38>
40008140:	eb00425e 	bl	40018ac0 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008144:	e2502000 	subs	r2, r0, #0
40008148:	1a00002b 	bne	400081fc <UVCAppThread_Entry+0x794>
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Jump to the start state of the GPIF state machine. 257 is used as an
                   arbitrary invalid state (> 255) number. */
                CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
4000814c:	e59f0540 	ldr	r0, [pc, #1344]	; 40008694 <UVCAppThread_Entry+0xc2c>
40008150:	e1a01002 	mov	r1, r2
40008154:	e3a08002 	mov	r8, #2
40008158:	e1a02000 	mov	r2, r0
4000815c:	e1a03001 	mov	r3, r1
40008160:	e58d8000 	str	r8, [sp]
40008164:	eb004e90 	bl	4001bbac <CyU3PGpifSMSwitch>
40008168:	eaffff76 	b	40007f48 <UVCAppThread_Entry+0x4e0>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_SNAPSHOT_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(24) Override failed, Error Code = %d\n", apiRetStatus);
4000816c:	e3a00004 	mov	r0, #4
40008170:	e59f1554 	ldr	r1, [pc, #1364]	; 400086cc <UVCAppThread_Entry+0xc64>
40008174:	eb002c5d 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008178:	e59f152c 	ldr	r1, [pc, #1324]	; 400086ac <UVCAppThread_Entry+0xc44>
4000817c:	e3a00004 	mov	r0, #4
40008180:	eb002c5a 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008184:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008188:	eb0002ba 	bl	40008c78 <_tx_thread_sleep>
4000818c:	eafffff9 	b	40008178 <UVCAppThread_Entry+0x710>
    /* CTL pins are restricted and cannot be configured using I/O matrix configuration function,
     * must use GpioOverride to configure it */
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_RESET_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Override failed, Error Code = %d\n", apiRetStatus);
40008190:	e3a00004 	mov	r0, #4
40008194:	e59f1534 	ldr	r1, [pc, #1332]	; 400086d0 <UVCAppThread_Entry+0xc68>
40008198:	eb002c54 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000819c:	e59f1508 	ldr	r1, [pc, #1288]	; 400086ac <UVCAppThread_Entry+0xc44>
400081a0:	e3a00004 	mov	r0, #4
400081a4:	eb002c51 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081a8:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081ac:	eb0002b1 	bl	40008c78 <_tx_thread_sleep>
400081b0:	eafffff9 	b	4000819c <UVCAppThread_Entry+0x734>

    /* Initialize Gpio interface */
    apiRetStatus = CyU3PGpioInit (&gpioClock, NULL);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO Init failed, Error Code = %d\n", apiRetStatus);
400081b4:	e3a00004 	mov	r0, #4
400081b8:	e59f1514 	ldr	r1, [pc, #1300]	; 400086d4 <UVCAppThread_Entry+0xc6c>
400081bc:	eb002c4b 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081c0:	e59f14e4 	ldr	r1, [pc, #1252]	; 400086ac <UVCAppThread_Entry+0xc44>
400081c4:	e3a00004 	mov	r0, #4
400081c8:	eb002c48 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081cc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081d0:	eb0002a8 	bl	40008c78 <_tx_thread_sleep>
400081d4:	eafffff9 	b	400081c0 <UVCAppThread_Entry+0x758>
        CyFxAppErrorHandler (apiRetStatus);
    }
    apiRetStatus = CyU3PDeviceGpioOverride (SENSOR_POWER_GPIO, CyTrue);
    if (apiRetStatus != 0)
    {
        CyU3PDebugPrint (4, "GPIO(20) Override failed, Error Code = %d\n", apiRetStatus);
400081d8:	e3a00004 	mov	r0, #4
400081dc:	e59f14f4 	ldr	r1, [pc, #1268]	; 400086d8 <UVCAppThread_Entry+0xc70>
400081e0:	eb002c42 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400081e4:	e59f14c0 	ldr	r1, [pc, #1216]	; 400086ac <UVCAppThread_Entry+0xc44>
400081e8:	e3a00004 	mov	r0, #4
400081ec:	eb002c3f 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400081f0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400081f4:	eb00029f 	bl	40008c78 <_tx_thread_sleep>
400081f8:	eafffff9 	b	400081e4 <UVCAppThread_Entry+0x77c>

                /* Start Channel Immediately */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\n", apiRetStatus);
400081fc:	e3a00004 	mov	r0, #4
40008200:	e59f14d4 	ldr	r1, [pc, #1236]	; 400086dc <UVCAppThread_Entry+0xc74>
40008204:	eb002c39 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008208:	e59f149c 	ldr	r1, [pc, #1180]	; 400086ac <UVCAppThread_Entry+0xc44>
4000820c:	e3a00004 	mov	r0, #4
40008210:	eb002c36 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008214:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008218:	eb000296 	bl	40008c78 <_tx_thread_sleep>
4000821c:	eafffff9 	b	40008208 <UVCAppThread_Entry+0x7a0>
                CyU3PMutexPut(&imgHdMux);
                /* Reset the DMA channel. */
                apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    CyU3PDebugPrint (4, "DMA Channel Reset Failed, Error Code = %d\n", apiRetStatus);
40008220:	e3a00004 	mov	r0, #4
40008224:	e59f14b4 	ldr	r1, [pc, #1204]	; 400086e0 <UVCAppThread_Entry+0xc78>
40008228:	eb002c30 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000822c:	e59f1478 	ldr	r1, [pc, #1144]	; 400086ac <UVCAppThread_Entry+0xc44>
40008230:	e3a00004 	mov	r0, #4
40008234:	eb002c2d 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008238:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000823c:	eb00028d 	bl	40008c78 <_tx_thread_sleep>
40008240:	eafffff9 	b	4000822c <UVCAppThread_Entry+0x7c4>
                    //CyU3PThreadSleep(400);
                	//CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                   	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	//CyU3PMutexPut(&imgHdMux);

                	if(IMcount++ >= 0x3)
40008244:	e5d510a4 	ldrb	r1, [r5, #164]	; 0xa4
40008248:	e281e001 	add	lr, r1, #1
4000824c:	e3510002 	cmp	r1, #2
40008250:	e5c5e0a4 	strb	lr, [r5, #164]	; 0xa4
40008254:	9affffb1 	bls	40008120 <UVCAppThread_Entry+0x6b8>
                	{
                    switch (setRes)
40008258:	e5d5309c 	ldrb	r3, [r5, #156]	; 0x9c
4000825c:	e3530001 	cmp	r3, #1
40008260:	0a00000e 	beq	400082a0 <UVCAppThread_Entry+0x838>
40008264:	e3530002 	cmp	r3, #2
40008268:	1a000009 	bne	40008294 <UVCAppThread_Entry+0x82c>
                 		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                 		//CyU3PThreadSleep(100);
                        CyU3PDebugPrint (4, "Set the video mode format1 %x %d\n", 0xb, 0x0);
                 		break;
                 	case 2: //720
                 		SensorSetIrisControl(0x0b, 0x30, 0x1, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
4000826c:	e3a01030 	mov	r1, #48	; 0x30
40008270:	e3a02001 	mov	r2, #1
40008274:	e3a03052 	mov	r3, #82	; 0x52
40008278:	e3a0000b 	mov	r0, #11
4000827c:	ebfff128 	bl	40004724 <SensorSetIrisControl>
                 		//CyU3PThreadSleep(100);
                        CyU3PDebugPrint (4, "Set the video mode format1 %x %d\n", 0x0b, 0x1);
40008280:	e3a00004 	mov	r0, #4
40008284:	e59f1458 	ldr	r1, [pc, #1112]	; 400086e4 <UVCAppThread_Entry+0xc7c>
40008288:	e3a0200b 	mov	r2, #11
4000828c:	e3a03001 	mov	r3, #1
40008290:	eb002c16 	bl	400132f0 <CyU3PDebugPrint>
                 		break;
                 	default:
                 		break;
                     }
                    IMcount = 0;
40008294:	e5c460a4 	strb	r6, [r4, #164]	; 0xa4
                	//glUVCHeader[1] &= ~(1<<5);    //clear still image flag
                	stiflag = 0x0;
40008298:	e58460a0 	str	r6, [r4, #160]	; 0xa0
4000829c:	eaffff9f 	b	40008120 <UVCAppThread_Entry+0x6b8>
                	if(IMcount++ >= 0x3)
                	{
                    switch (setRes)
                     {
                 	case 1: //960
                 		SensorSetIrisControl(0x0b, 0x30, 0x0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
400082a0:	e3a01030 	mov	r1, #48	; 0x30
400082a4:	e3a02000 	mov	r2, #0
400082a8:	e3a03052 	mov	r3, #82	; 0x52
400082ac:	e3a0000b 	mov	r0, #11
400082b0:	ebfff11b 	bl	40004724 <SensorSetIrisControl>
                 		//CyU3PThreadSleep(100);
                        CyU3PDebugPrint (4, "Set the video mode format1 %x %d\n", 0xb, 0x0);
400082b4:	e59f1428 	ldr	r1, [pc, #1064]	; 400086e4 <UVCAppThread_Entry+0xc7c>
400082b8:	e3a0200b 	mov	r2, #11
400082bc:	e3a03000 	mov	r3, #0
400082c0:	e3a00004 	mov	r0, #4
400082c4:	eb002c09 	bl	400132f0 <CyU3PDebugPrint>
                 		break;
400082c8:	eafffff1 	b	40008294 <UVCAppThread_Entry+0x82c>
                		stiflag = 0xFF;
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
400082cc:	e5d580a4 	ldrb	r8, [r5, #164]	; 0xa4
400082d0:	e2881001 	add	r1, r8, #1
400082d4:	e3580002 	cmp	r8, #2
400082d8:	e5c510a4 	strb	r1, [r5, #164]	; 0xa4
400082dc:	9affff8f 	bls	40008120 <UVCAppThread_Entry+0x6b8>
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
400082e0:	e5d72481 	ldrb	r2, [r7, #1153]	; 0x481
                		stiflag = 0x0F;
400082e4:	e3a0300f 	mov	r3, #15
                		IMcount = 0;
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
400082e8:	e382c020 	orr	ip, r2, #32
400082ec:	e5c7c481 	strb	ip, [r7, #1153]	; 0x481
                		stiflag = 0x0F;
                		IMcount = 0;
400082f0:	e5c560a4 	strb	r6, [r5, #164]	; 0xa4
                	}
                 	else if(stiflag==0xFF){//setting still marker in the stream head after one frame late

                 		if(IMcount++ >= 0x3){
                 		glUVCHeader[1] |= (1<<5);    //set still image flag
                		stiflag = 0x0F;
400082f4:	e58530a0 	str	r3, [r5, #160]	; 0xa0
400082f8:	eaffff88 	b	40008120 <UVCAppThread_Entry+0x6b8>
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
400082fc:	e59f0344 	ldr	r0, [pc, #836]	; 40008648 <UVCAppThread_Entry+0xbe0>
40008300:	e3a01080 	mov	r1, #128	; 0x80
40008304:	e3a02003 	mov	r2, #3
40008308:	e28d30b4 	add	r3, sp, #180	; 0xb4
4000830c:	e58d6000 	str	r6, [sp]
40008310:	eb000720 	bl	40009f98 <_txe_event_flags_get>
40008314:	e3500000 	cmp	r0, #0
                	                    CYU3P_NO_WAIT) == CY_U3P_SUCCESS){ //start full res.
                		//glUVCHeader[1] |= (1<<5);    //set still image flag
                       	//SensorSetIrisControl(0x1, 0x30, is60Hz? 0x64:0xE4, I2C_DSPBOARD_ADDR_WR/*boardID*/);//start 5MP Res
                     	//CyU3PThreadSleep(100);
                		stiflag = 0xFF;
40008318:	03a000ff 	moveq	r0, #255	; 0xff
4000831c:	058500a0 	streq	r0, [r5, #160]	; 0xa0
                		IMcount = 0;
40008320:	05c560a4 	strbeq	r6, [r5, #164]	; 0xa4
                //}
                /* Toggle UVC header FRAME ID bit */
            	CyU3PMutexGet(&imgHdMux, CYU3P_WAIT_FOREVER);
                glUVCHeader[1] ^= CY_FX_UVC_HEADER_FRAME_ID;
            	//CyU3PMutexPut(&imgHdMux);
                 	if ((stiflag == 0xF0) && CyU3PEventGet (&glFxUVCEvent, VD_FX_UVC_STIL_EVENT, CYU3P_EVENT_AND_CLEAR, &flag,
40008324:	0affff7d 	beq	40008120 <UVCAppThread_Entry+0x6b8>
40008328:	eaffff76 	b	40008108 <UVCAppThread_Entry+0x6a0>
    apiRetStatus = CyU3PDmaChannelCreate (&glChHandleInterStat, CY_U3P_DMA_TYPE_MANUAL_OUT,
            &dmaInterConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Interrupt Status Channel Creation Failed, Error Code = %d\n", apiRetStatus);
4000832c:	e3a00004 	mov	r0, #4
40008330:	e59f13b0 	ldr	r1, [pc, #944]	; 400086e8 <UVCAppThread_Entry+0xc80>
40008334:	e1a02006 	mov	r2, r6
40008338:	eb002bec 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000833c:	e59f1368 	ldr	r1, [pc, #872]	; 400086ac <UVCAppThread_Entry+0xc44>
40008340:	e3a00004 	mov	r0, #4
40008344:	eb002be9 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008348:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000834c:	eb000249 	bl	40008c78 <_tx_thread_sleep>
40008350:	eafffff9 	b	4000833c <UVCAppThread_Entry+0x8d4>
    endPointConfig.burstLen = 1;
    apiRetStatus = CyU3PSetEpConfig (CY_FX_EP_CONTROL_STATUS, &endPointConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "USB Set Endpoint config failed, Error Code = %d\n", apiRetStatus);
40008354:	e3a00004 	mov	r0, #4
40008358:	e59f1358 	ldr	r1, [pc, #856]	; 400086b8 <UVCAppThread_Entry+0xc50>
4000835c:	e1a02003 	mov	r2, r3
40008360:	eb002be2 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008364:	e59f1340 	ldr	r1, [pc, #832]	; 400086ac <UVCAppThread_Entry+0xc44>
40008368:	e3a00004 	mov	r0, #4
4000836c:	eb002bdf 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008370:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008374:	eb00023f 	bl	40008c78 <_tx_thread_sleep>
40008378:	eafffff9 	b	40008364 <UVCAppThread_Entry+0x8fc>

    /* USB initialization. */
    apiRetStatus = CyU3PUsbStart ();
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "USB Function Failed to Start, Error Code = %d\n", apiRetStatus);
4000837c:	e3a00004 	mov	r0, #4
40008380:	e59f1364 	ldr	r1, [pc, #868]	; 400086ec <UVCAppThread_Entry+0xc84>
40008384:	e1a02008 	mov	r2, r8
40008388:	eb002bd8 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000838c:	e59f1318 	ldr	r1, [pc, #792]	; 400086ac <UVCAppThread_Entry+0xc44>
40008390:	e3a00004 	mov	r0, #4
40008394:	eb002bd5 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008398:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000839c:	eb000235 	bl	40008c78 <_tx_thread_sleep>
400083a0:	eafffff9 	b	4000838c <UVCAppThread_Entry+0x924>
    pibclock.isHalfDiv   = CyFalse;

    apiRetStatus = CyU3PPibInit (CyTrue, &pibclock);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "PIB Function Failed to Start, Error Code = %d\n", apiRetStatus);
400083a4:	e3a00004 	mov	r0, #4
400083a8:	e59f1340 	ldr	r1, [pc, #832]	; 400086f0 <UVCAppThread_Entry+0xc88>
400083ac:	eb002bcf 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083b0:	e59f12f4 	ldr	r1, [pc, #756]	; 400086ac <UVCAppThread_Entry+0xc44>
400083b4:	e3a00004 	mov	r0, #4
400083b8:	eb002bcc 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083bc:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083c0:	eb00022c 	bl	40008c78 <_tx_thread_sleep>
400083c4:	eafffff9 	b	400083b0 <UVCAppThread_Entry+0x948>
    apiRetStatus = CyU3PDmaMultiChannelCreate (&glChHandleUVCStream, CY_U3P_DMA_TYPE_MANUAL_MANY_TO_ONE,
            &dmaMultiConfig);
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error handling */
        CyU3PDebugPrint (4, "DMA Channel Creation Failed, Error Code = %d\n", apiRetStatus);
400083c8:	e3a00004 	mov	r0, #4
400083cc:	e59f1320 	ldr	r1, [pc, #800]	; 400086f4 <UVCAppThread_Entry+0xc8c>
400083d0:	eb002bc6 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083d4:	e59f12d0 	ldr	r1, [pc, #720]	; 400086ac <UVCAppThread_Entry+0xc44>
400083d8:	e3a00004 	mov	r0, #4
400083dc:	eb002bc3 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400083e0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400083e4:	eb000223 	bl	40008c78 <_tx_thread_sleep>
400083e8:	eafffff9 	b	400083d4 <UVCAppThread_Entry+0x96c>
    }

    glInterStaBuffer = (uint8_t *)CyU3PDmaBufferAlloc (1024);
    if (glInterStaBuffer == 0)
    {
        CyU3PDebugPrint (4, "Failed to allocate memory for interrupt status buffer\r\n");
400083ec:	e2800004 	add	r0, r0, #4
400083f0:	e59f1300 	ldr	r1, [pc, #768]	; 400086f8 <UVCAppThread_Entry+0xc90>
400083f4:	eb002bbd 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400083f8:	e59f12ac 	ldr	r1, [pc, #684]	; 400086ac <UVCAppThread_Entry+0xc44>
400083fc:	e3a00004 	mov	r0, #4
40008400:	eb002bba 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008404:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008408:	eb00021a 	bl	40008c78 <_tx_thread_sleep>
4000840c:	eafffff9 	b	400083f8 <UVCAppThread_Entry+0x990>
                pb=0;
                pbc=0;

                if (!clearFeatureRqtReceived)
                {
                    apiRetStatus = CyU3PDmaMultiChannelReset (&glChHandleUVCStream);
40008410:	e59f0288 	ldr	r0, [pc, #648]	; 400086a0 <UVCAppThread_Entry+0xc38>
40008414:	eb0040bc 	bl	4001870c <CyU3PDmaMultiChannelReset>
                    if (apiRetStatus != CY_U3P_SUCCESS)
40008418:	e3500000 	cmp	r0, #0
4000841c:	1a000002 	bne	4000842c <UVCAppThread_Entry+0x9c4>
                    {
                        CyFxAppErrorHandler (apiRetStatus);
                    }

                    /* Flush the Endpoint memory */
                    CyU3PUsbFlushEp (CY_FX_EP_BULK_VIDEO);
40008420:	e3a00083 	mov	r0, #131	; 0x83
40008424:	eb00524d 	bl	4001cd60 <CyU3PUsbFlushEp>
40008428:	eafffef8 	b	40008010 <UVCAppThread_Entry+0x5a8>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000842c:	e59f1278 	ldr	r1, [pc, #632]	; 400086ac <UVCAppThread_Entry+0xc44>
40008430:	e3a00004 	mov	r0, #4
40008434:	eb002bad 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008438:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000843c:	eb00020d 	bl	40008c78 <_tx_thread_sleep>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008440:	e59f1264 	ldr	r1, [pc, #612]	; 400086ac <UVCAppThread_Entry+0xc44>
40008444:	e3a00004 	mov	r0, #4
40008448:	eb002ba8 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
4000844c:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008450:	eb000208 	bl	40008c78 <_tx_thread_sleep>
40008454:	eafffff4 	b	4000842c <UVCAppThread_Entry+0x9c4>
                clearFeatureRqtReceived = CyFalse;
            }
            else
            {
                /* We are essentially idle at this point. Wait for the reception of a start streaming request. */
                CyU3PEventGet (&glFxUVCEvent, CY_FX_UVC_STREAM_EVENT, CYU3P_EVENT_AND, &flag, CYU3P_WAIT_FOREVER);
40008458:	e3a01001 	mov	r1, #1
4000845c:	e3a02002 	mov	r2, #2
40008460:	e28d30b4 	add	r3, sp, #180	; 0xb4
40008464:	e59f01dc 	ldr	r0, [pc, #476]	; 40008648 <UVCAppThread_Entry+0xbe0>
40008468:	e58da000 	str	sl, [sp]
4000846c:	eb0006c9 	bl	40009f98 <_txe_event_flags_get>
                //CyU3PTimerStart(&I2CCmdTimer); //start timer again.
                //CyU3PDebugPrint (4, "start time tick  = %d\r\n", CyU3PGetTime());
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
40008470:	e1a02006 	mov	r2, r6
40008474:	e59f0224 	ldr	r0, [pc, #548]	; 400086a0 <UVCAppThread_Entry+0xc38>
40008478:	e1a01006 	mov	r1, r6
4000847c:	eb00418f 	bl	40018ac0 <CyU3PDmaMultiChannelSetXfer>
                if (apiRetStatus != CY_U3P_SUCCESS)
40008480:	e2502000 	subs	r2, r0, #0
40008484:	1a00002f 	bne	40008548 <UVCAppThread_Entry+0xae0>
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
                    CyFxAppErrorHandler (apiRetStatus);
                }

                /* Initialize gpif configuration and waveform descriptors */
                if (gpif_initialized == CyFalse)
40008488:	e5953038 	ldr	r3, [r5, #56]	; 0x38
4000848c:	e3530000 	cmp	r3, #0
40008490:	1a000058 	bne	400085f8 <UVCAppThread_Entry+0xb90>
                {
                    //for start up of the AF Lens
                   	SensorSetIrisControl(0x21, 0x30, 1, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris manual (AF Lens)
40008494:	e3a01030 	mov	r1, #48	; 0x30
40008498:	e3a02001 	mov	r2, #1
4000849c:	e2833082 	add	r3, r3, #130	; 0x82
400084a0:	e3a00021 	mov	r0, #33	; 0x21
400084a4:	ebfff09e 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400084a8:	e3a00f7d 	mov	r0, #500	; 0x1f4
400084ac:	eb0001f1 	bl	40008c78 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 2, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris manual (non AF Lens)
400084b0:	e3a01030 	mov	r1, #48	; 0x30
400084b4:	e3a02002 	mov	r2, #2
400084b8:	e3a03052 	mov	r3, #82	; 0x52
400084bc:	e3a00025 	mov	r0, #37	; 0x25
400084c0:	ebfff097 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400084c4:	e3a00f7d 	mov	r0, #500	; 0x1f4
400084c8:	eb0001ea 	bl	40008c78 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x23, 0x30, 0xa, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris value (DC manual)
400084cc:	e3a01030 	mov	r1, #48	; 0x30
400084d0:	e3a0200a 	mov	r2, #10
400084d4:	e3a03082 	mov	r3, #130	; 0x82
400084d8:	e3a00023 	mov	r0, #35	; 0x23
400084dc:	ebfff090 	bl	40004724 <SensorSetIrisControl>
                   	CyU3PThreadSleep(300);
400084e0:	e3a00f4b 	mov	r0, #300	; 0x12c
400084e4:	eb0001e3 	bl	40008c78 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
400084e8:	e3a01030 	mov	r1, #48	; 0x30
400084ec:	e1a02006 	mov	r2, r6
400084f0:	e3a03082 	mov	r3, #130	; 0x82
400084f4:	e3a00021 	mov	r0, #33	; 0x21
400084f8:	ebfff089 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
400084fc:	e3a00f7d 	mov	r0, #500	; 0x1f4
40008500:	eb0001dc 	bl	40008c78 <_tx_thread_sleep>
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
40008504:	e3a03052 	mov	r3, #82	; 0x52
40008508:	e3a01030 	mov	r1, #48	; 0x30
4000850c:	e1a02006 	mov	r2, r6
40008510:	e3a00025 	mov	r0, #37	; 0x25
40008514:	ebfff082 	bl	40004724 <SensorSetIrisControl>
                    CyU3PThreadSleep(500);
40008518:	e3a00f7d 	mov	r0, #500	; 0x1f4
4000851c:	eb0001d5 	bl	40008c78 <_tx_thread_sleep>
CyFxUvcAppGpifInit (
        void)
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
40008520:	e5d53048 	ldrb	r3, [r5, #72]	; 0x48
40008524:	e3530003 	cmp	r3, #3
40008528:	0a00002b 	beq	400085dc <UVCAppThread_Entry+0xb74>
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
4000852c:	e3530002 	cmp	r3, #2
40008530:	0a00000d 	beq	4000856c <UVCAppThread_Entry+0xb04>
                   	SensorSetIrisControl(0x21, 0x30, 0, I2C_AFBOARD_ADDR_WR/*boardID*/);//set Iris auto (AF Lens)
                    CyU3PThreadSleep(500);
                   	SensorSetIrisControl(0x25, 0x30, 0, I2C_DSPBOARD_ADDR_WR/*boardID*/);//set Iris auto (non AF Lens)
                    CyU3PThreadSleep(500);
                    CyFxUvcAppGpifInit ();
                    gpif_initialized = CyTrue;
40008534:	e3a0c001 	mov	ip, #1
40008538:	e584c038 	str	ip, [r4, #56]	; 0x38
                    CyU3PThreadSleep(200);
4000853c:	e3a000c8 	mov	r0, #200	; 0xc8
40008540:	eb0001cc 	bl	40008c78 <_tx_thread_sleep>
40008544:	eafffe7f 	b	40007f48 <UVCAppThread_Entry+0x4e0>
                /* Set DMA Channel transfer size, first producer socket */
                apiRetStatus = CyU3PDmaMultiChannelSetXfer (&glChHandleUVCStream, 0, 0);
                if (apiRetStatus != CY_U3P_SUCCESS)
                {
                    /* Error handling */
                    CyU3PDebugPrint (4, "DMA Channel Set Transfer Failed, Error Code = %d\r\n", apiRetStatus);
40008548:	e3a00004 	mov	r0, #4
4000854c:	e59f11a8 	ldr	r1, [pc, #424]	; 400086fc <UVCAppThread_Entry+0xc94>
40008550:	eb002b66 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008554:	e59f1150 	ldr	r1, [pc, #336]	; 400086ac <UVCAppThread_Entry+0xc44>
40008558:	e3a00004 	mov	r0, #4
4000855c:	eb002b63 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008560:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008564:	eb0001c3 	bl	40008c78 <_tx_thread_sleep>
40008568:	eafffff9 	b	40008554 <UVCAppThread_Entry+0xaec>
    	CyU3PDebugPrint(1,"\r\n super gpif");
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
    }
    else if(usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n high gpif");
4000856c:	e59f118c 	ldr	r1, [pc, #396]	; 40008700 <UVCAppThread_Entry+0xc98>
40008570:	e3a00001 	mov	r0, #1
40008574:	eb002b5d 	bl	400132f0 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
40008578:	e59f0184 	ldr	r0, [pc, #388]	; 40008704 <UVCAppThread_Entry+0xc9c>
4000857c:	eb004c8f 	bl	4001b7c0 <CyU3PGpifLoad>
40008580:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
40008584:	e3520000 	cmp	r2, #0
40008588:	1a000022 	bne	40008618 <UVCAppThread_Entry+0xbb0>
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
        CyFxAppErrorHandler (apiRetStatus);
    }

    /* Start the state machine from the designated start state. */
    if(usbSpeed == CY_U3P_SUPER_SPEED)
4000858c:	e5d43048 	ldrb	r3, [r4, #72]	; 0x48
40008590:	e3530003 	cmp	r3, #3
40008594:	0a000001 	beq	400085a0 <UVCAppThread_Entry+0xb38>
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
40008598:	e3530002 	cmp	r3, #2
4000859c:	1affffe4 	bne	40008534 <UVCAppThread_Entry+0xacc>
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400085a0:	e1a00002 	mov	r0, r2
400085a4:	e1a01002 	mov	r1, r2
400085a8:	eb004d2a 	bl	4001ba58 <CyU3PGpifSMStart>
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400085ac:	e3500000 	cmp	r0, #0
    {
    	apiRetStatus = CyU3PGpifSMStart (START, ALPHA_START);
    }
    else if (usbSpeed == CY_U3P_HIGH_SPEED)
    {
    	apiRetStatus = CyU3PGpifSMStart (START_USB2, ALPHA_START_USB2);
400085b0:	e1a02000 	mov	r2, r0
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
400085b4:	0affffde 	beq	40008534 <UVCAppThread_Entry+0xacc>
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Starting GPIF state machine failed, Error Code = %d\r\n", apiRetStatus);
400085b8:	e3a00004 	mov	r0, #4
400085bc:	e59f1144 	ldr	r1, [pc, #324]	; 40008708 <UVCAppThread_Entry+0xca0>
400085c0:	eb002b4a 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
400085c4:	e59f10e0 	ldr	r1, [pc, #224]	; 400086ac <UVCAppThread_Entry+0xc44>
400085c8:	e3a00004 	mov	r0, #4
400085cc:	eb002b47 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
400085d0:	e3a00ffa 	mov	r0, #1000	; 0x3e8
400085d4:	eb0001a7 	bl	40008c78 <_tx_thread_sleep>
400085d8:	eafffff9 	b	400085c4 <UVCAppThread_Entry+0xb5c>
{
    CyU3PReturnStatus_t apiRetStatus=0;

    if(usbSpeed == CY_U3P_SUPER_SPEED)
    {
    	CyU3PDebugPrint(1,"\r\n super gpif");
400085dc:	e59f1128 	ldr	r1, [pc, #296]	; 4000870c <UVCAppThread_Entry+0xca4>
400085e0:	e3a00001 	mov	r0, #1
400085e4:	eb002b41 	bl	400132f0 <CyU3PDebugPrint>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig);
400085e8:	e59f0120 	ldr	r0, [pc, #288]	; 40008710 <UVCAppThread_Entry+0xca8>
400085ec:	eb004c73 	bl	4001b7c0 <CyU3PGpifLoad>
400085f0:	e1a02000 	mov	r2, r0
400085f4:	eaffffe2 	b	40008584 <UVCAppThread_Entry+0xb1c>
                }
                else
                {
                    /* Jump to the start state of the GPIF state machine. 257 is used as an
                       arbitrary invalid state (> 255) number. */
                    CyU3PGpifSMSwitch (257, 0, 257, 0, 2);
400085f8:	e59f0094 	ldr	r0, [pc, #148]	; 40008694 <UVCAppThread_Entry+0xc2c>
400085fc:	e3a0e002 	mov	lr, #2
40008600:	e1a01006 	mov	r1, r6
40008604:	e1a02000 	mov	r2, r0
40008608:	e1a03006 	mov	r3, r6
4000860c:	e58de000 	str	lr, [sp]
40008610:	eb004d65 	bl	4001bbac <CyU3PGpifSMSwitch>
40008614:	eafffe4b 	b	40007f48 <UVCAppThread_Entry+0x4e0>
    	apiRetStatus =  CyU3PGpifLoad ((CyU3PGpifConfig_t *) &CyFxGpifConfig_usb2);
    }
    if (apiRetStatus != CY_U3P_SUCCESS)
    {
        /* Error Handling */
        CyU3PDebugPrint (4, "Loading GPIF Configuration failed, Error Code = %d\r\n", apiRetStatus);
40008618:	e3a00004 	mov	r0, #4
4000861c:	e59f10f0 	ldr	r1, [pc, #240]	; 40008714 <UVCAppThread_Entry+0xcac>
40008620:	eb002b32 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008624:	e59f1080 	ldr	r1, [pc, #128]	; 400086ac <UVCAppThread_Entry+0xc44>
40008628:	e3a00004 	mov	r0, #4
4000862c:	eb002b2f 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008630:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008634:	eb00018f 	bl	40008c78 <_tx_thread_sleep>
40008638:	eafffff9 	b	40008624 <UVCAppThread_Entry+0xbbc>
4000863c:	40011b0c 	.word	0x40011b0c
40008640:	0001c200 	.word	0x0001c200
40008644:	000186a0 	.word	0x000186a0
40008648:	40030f90 	.word	0x40030f90
4000864c:	40004fa0 	.word	0x40004fa0
40008650:	40004cac 	.word	0x40004cac
40008654:	40004b3c 	.word	0x40004b3c
40008658:	40010f68 	.word	0x40010f68
4000865c:	40010f7c 	.word	0x40010f7c
40008660:	40010f90 	.word	0x40010f90
40008664:	400110a8 	.word	0x400110a8
40008668:	40010fa8 	.word	0x40010fa8
4000866c:	40010f9c 	.word	0x40010f9c
40008670:	400110c0 	.word	0x400110c0
40008674:	400111cc 	.word	0x400111cc
40008678:	400111d0 	.word	0x400111d0
4000867c:	40011208 	.word	0x40011208
40008680:	00003f01 	.word	0x00003f01
40008684:	00000302 	.word	0x00000302
40008688:	40033030 	.word	0x40033030
4000868c:	40033108 	.word	0x40033108
40008690:	400330d0 	.word	0x400330d0
40008694:	00000101 	.word	0x00000101
40008698:	00000303 	.word	0x00000303
4000869c:	40004a00 	.word	0x40004a00
400086a0:	40032ee4 	.word	0x40032ee4
400086a4:	40030000 	.word	0x40030000
400086a8:	40011b2c 	.word	0x40011b2c
400086ac:	40011588 	.word	0x40011588
400086b0:	40011b48 	.word	0x40011b48
400086b4:	40011b64 	.word	0x40011b64
400086b8:	40011d34 	.word	0x40011d34
400086bc:	40011e10 	.word	0x40011e10
400086c0:	40011c9c 	.word	0x40011c9c
400086c4:	40011c68 	.word	0x40011c68
400086c8:	40011c34 	.word	0x40011c34
400086cc:	40011c08 	.word	0x40011c08
400086d0:	40011bb4 	.word	0x40011bb4
400086d4:	40011b90 	.word	0x40011b90
400086d8:	40011bdc 	.word	0x40011bdc
400086dc:	40011e88 	.word	0x40011e88
400086e0:	40011e5c 	.word	0x40011e5c
400086e4:	40011e38 	.word	0x40011e38
400086e8:	40011d68 	.word	0x40011d68
400086ec:	40011d04 	.word	0x40011d04
400086f0:	40011cd4 	.word	0x40011cd4
400086f4:	40011de0 	.word	0x40011de0
400086f8:	40011da8 	.word	0x40011da8
400086fc:	40011ebc 	.word	0x40011ebc
40008700:	40011f00 	.word	0x40011f00
40008704:	40011398 	.word	0x40011398
40008708:	40011f48 	.word	0x40011f48
4000870c:	40011ef0 	.word	0x40011ef0
40008710:	4001137c 	.word	0x4001137c
40008714:	40011f10 	.word	0x40011f10

40008718 <CyFxUVCApplnI2CInit>:

/* I2C initialization. */
//static void
void
CyFxUVCApplnI2CInit (void)
{
40008718:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000871c:	e24dd014 	sub	sp, sp, #20
    CyU3PI2cConfig_t i2cConfig;;
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
40008720:	eb006bf0 	bl	400236e8 <CyU3PI2cInit>
    if (status != CY_U3P_SUCCESS)
40008724:	e2502000 	subs	r2, r0, #0
40008728:	1a00000b 	bne	4000875c <CyFxUVCApplnI2CInit+0x44>
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
4000872c:	e59fc070 	ldr	ip, [pc, #112]	; 400087a4 <CyFxUVCApplnI2CInit+0x8c>
    i2cConfig.isDma      = CyFalse;
    i2cConfig.busTimeout = 0xffffffffU;
40008730:	e3e03000 	mvn	r3, #0
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008734:	e1a0000d 	mov	r0, sp
40008738:	e1a01002 	mov	r1, r2
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
        CyFxAppErrorHandler (status);
    }

    /*  Set I2C Configuration */
    i2cConfig.bitRate    = 100000;      /*  100 KHz */
4000873c:	e58dc000 	str	ip, [sp]
    i2cConfig.isDma      = CyFalse;
40008740:	e98d000c 	stmib	sp, {r2, r3}
    i2cConfig.busTimeout = 0xffffffffU;
    i2cConfig.dmaTimeout = 0xffff;
40008744:	e1cd30bc 	strh	r3, [sp, #12]

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
40008748:	eb006cdf 	bl	40023acc <CyU3PI2cSetConfig>
    if (CY_U3P_SUCCESS != status)
4000874c:	e3500000 	cmp	r0, #0
40008750:	1a00000a 	bne	40008780 <CyFxUVCApplnI2CInit+0x68>
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
        CyFxAppErrorHandler (status);
    }
}
40008754:	e28dd014 	add	sp, sp, #20
40008758:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
    CyU3PReturnStatus_t status;

    status = CyU3PI2cInit ();
    if (status != CY_U3P_SUCCESS)
    {
        CyU3PDebugPrint (4, "I2C initialization failed!\n");
4000875c:	e3a00004 	mov	r0, #4
40008760:	e59f1040 	ldr	r1, [pc, #64]	; 400087a8 <CyFxUVCApplnI2CInit+0x90>
40008764:	eb002ae1 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
40008768:	e59f103c 	ldr	r1, [pc, #60]	; 400087ac <CyFxUVCApplnI2CInit+0x94>
4000876c:	e3a00004 	mov	r0, #4
40008770:	eb002ade 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008774:	e3a00ffa 	mov	r0, #1000	; 0x3e8
40008778:	eb00013e 	bl	40008c78 <_tx_thread_sleep>
4000877c:	eafffff9 	b	40008768 <CyFxUVCApplnI2CInit+0x50>
    i2cConfig.dmaTimeout = 0xffff;

    status = CyU3PI2cSetConfig (&i2cConfig, 0);
    if (CY_U3P_SUCCESS != status)
    {
        CyU3PDebugPrint (4, "I2C configuration failed!\n");
40008780:	e3a00004 	mov	r0, #4
40008784:	e59f1024 	ldr	r1, [pc, #36]	; 400087b0 <CyFxUVCApplnI2CInit+0x98>
40008788:	eb002ad8 	bl	400132f0 <CyU3PDebugPrint>
       This function can be modified to take additional error handling actions such
       as cycling the USB connection or performing a warm reset.
     */
    for (;;)
    {
        CyU3PDebugPrint (4, "Error handler...\r\n");
4000878c:	e59f1018 	ldr	r1, [pc, #24]	; 400087ac <CyFxUVCApplnI2CInit+0x94>
40008790:	e3a00004 	mov	r0, #4
40008794:	eb002ad5 	bl	400132f0 <CyU3PDebugPrint>
        CyU3PThreadSleep (1000);
40008798:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4000879c:	eb000135 	bl	40008c78 <_tx_thread_sleep>
400087a0:	eafffff9 	b	4000878c <CyFxUVCApplnI2CInit+0x74>
400087a4:	000186a0 	.word	0x000186a0
400087a8:	40011b2c 	.word	0x40011b2c
400087ac:	40011588 	.word	0x40011588
400087b0:	40011b48 	.word	0x40011b48

400087b4 <CyFxApplicationDefine>:
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400087b4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087b8:	e3a00a01 	mov	r0, #4096	; 0x1000
 * The application specific threads and other OS resources are created and initialized here.
 */
void
CyFxApplicationDefine (
        void)
{
400087bc:	e24dd04c 	sub	sp, sp, #76	; 0x4c
    uint32_t retThrdCreate;
    VdRingBuf *cmdQuptr = &cmdQu;
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087c0:	ebffebab 	bl	40003674 <CyU3PMemAlloc>
400087c4:	e1a0a000 	mov	sl, r0
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087c8:	e3a00a01 	mov	r0, #4096	; 0x1000
400087cc:	ebffeba8 	bl	40003674 <CyU3PMemAlloc>
400087d0:	e1a0b000 	mov	fp, r0
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087d4:	e3a00a01 	mov	r0, #4096	; 0x1000
400087d8:	ebffeba5 	bl	40003674 <CyU3PMemAlloc>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400087dc:	e35a0000 	cmp	sl, #0
400087e0:	135b0000 	cmpne	fp, #0
400087e4:	13a09000 	movne	r9, #0
400087e8:	03a09001 	moveq	r9, #1
    VdRingBuf *statQuptr = &statQu;

    /* Allocate the memory for the thread stacks. */
    ptr1 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr2 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
    ptr3 = CyU3PMemAlloc (UVC_APP_THREAD_STACK);
400087ec:	e58d0024 	str	r0, [sp, #36]	; 0x24

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
400087f0:	1a000000 	bne	400087f8 <CyFxApplicationDefine+0x44>
400087f4:	eafffffe 	b	400087f4 <CyFxApplicationDefine+0x40>
400087f8:	e3500000 	cmp	r0, #0
400087fc:	0afffffc 	beq	400087f4 <CyFxApplicationDefine+0x40>
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008800:	e28d4028 	add	r4, sp, #40	; 0x28
40008804:	e1a00004 	mov	r0, r4
40008808:	e3a01040 	mov	r1, #64	; 0x40
4000880c:	e59f2118 	ldr	r2, [pc, #280]	; 4000892c <CyFxApplicationDefine+0x178>
40008810:	ebffeaea 	bl	400033c0 <cmdbufCreate>
40008814:	e1a05004 	mov	r5, r4
40008818:	e8b5000f 	ldm	r5!, {r0, r1, r2, r3}
4000881c:	e59f710c 	ldr	r7, [pc, #268]	; 40008930 <CyFxApplicationDefine+0x17c>
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008820:	e59f810c 	ldr	r8, [pc, #268]	; 40008934 <CyFxApplicationDefine+0x180>

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008824:	e1a0c007 	mov	ip, r7
40008828:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
4000882c:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008830:	e3a06008 	mov	r6, #8

    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
40008834:	e88c000f 	stm	ip, {r0, r1, r2, r3}
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
40008838:	e59f20f8 	ldr	r2, [pc, #248]	; 40008938 <CyFxApplicationDefine+0x184>
4000883c:	e1a00004 	mov	r0, r4
40008840:	e3a01020 	mov	r1, #32
40008844:	ebffeadd 	bl	400033c0 <cmdbufCreate>
40008848:	e8b4000f 	ldm	r4!, {r0, r1, r2, r3}
4000884c:	e1a0c008 	mov	ip, r8
40008850:	e8ac000f 	stmia	ip!, {r0, r1, r2, r3}
40008854:	e895000f 	ldm	r5, {r0, r1, r2, r3}
	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
	cmdquInit(statQuptr);

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008858:	e3a04001 	mov	r4, #1
    if ((ptr1 == 0) || (ptr2 == 0) || (ptr3 == 0))
        goto fatalErrorHandler;

	/****** create a ring buffer for command queue *******/
	cmdQu = cmdbufCreate(MAXCMD, &cmdQuMux);
	statQu = cmdbufCreate(MAXSTA, &staQuMux);
4000885c:	e88c000f 	stm	ip, {r0, r1, r2, r3}

	/****** initialize command descriptor ***********/
	cmdquInit(cmdQuptr);
40008860:	e1a00007 	mov	r0, r7
40008864:	ebffeaed 	bl	40003420 <cmdquInit>
	cmdquInit(statQuptr);
40008868:	e1a00008 	mov	r0, r8
4000886c:	ebffeaeb 	bl	40003420 <cmdquInit>

    /* Create the UVC application thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppThread,   /* UVC Thread structure */
40008870:	e3a050a8 	mov	r5, #168	; 0xa8
40008874:	e3a0ca01 	mov	ip, #4096	; 0x1000
40008878:	e59f00bc 	ldr	r0, [pc, #188]	; 4000893c <CyFxApplicationDefine+0x188>
4000887c:	e59f10bc 	ldr	r1, [pc, #188]	; 40008940 <CyFxApplicationDefine+0x18c>
40008880:	e59f20bc 	ldr	r2, [pc, #188]	; 40008944 <CyFxApplicationDefine+0x190>
40008884:	e1a03009 	mov	r3, r9
40008888:	e88d1400 	stm	sp, {sl, ip}
4000888c:	e58d6008 	str	r6, [sp, #8]
40008890:	e58d600c 	str	r6, [sp, #12]
40008894:	e58d9010 	str	r9, [sp, #16]
40008898:	e58d4014 	str	r4, [sp, #20]
4000889c:	e58d5018 	str	r5, [sp, #24]
400088a0:	eb0007c7 	bl	4000a7c4 <_txe_thread_create>
            UVC_APP_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400088a4:	e250c000 	subs	ip, r0, #0
400088a8:	1affffd1 	bne	400087f4 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }

    /* Create the control request handling thread. */
    retThrdCreate = CyU3PThreadCreate (&uvcAppEP0Thread,        /* UVC Thread structure */
400088ac:	e1a0300c 	mov	r3, ip
400088b0:	e3a07b02 	mov	r7, #2048	; 0x800
400088b4:	e59f008c 	ldr	r0, [pc, #140]	; 40008948 <CyFxApplicationDefine+0x194>
400088b8:	e59f108c 	ldr	r1, [pc, #140]	; 4000894c <CyFxApplicationDefine+0x198>
400088bc:	e59f208c 	ldr	r2, [pc, #140]	; 40008950 <CyFxApplicationDefine+0x19c>
400088c0:	e58dc010 	str	ip, [sp, #16]
400088c4:	e58db000 	str	fp, [sp]
400088c8:	e58d7004 	str	r7, [sp, #4]
400088cc:	e58d6008 	str	r6, [sp, #8]
400088d0:	e58d600c 	str	r6, [sp, #12]
400088d4:	e58d4014 	str	r4, [sp, #20]
400088d8:	e58d5018 	str	r5, [sp, #24]
400088dc:	eb0007b8 	bl	4000a7c4 <_txe_thread_create>
            UVC_APP_EP0_THREAD_PRIORITY,                        /* UVC Application Thread priority */
            UVC_APP_EP0_THREAD_PRIORITY,                        /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                                /* No time slice for the application thread */
            CYU3P_AUTO_START                                    /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
400088e0:	e250c000 	subs	ip, r0, #0
400088e4:	1affffc2 	bne	400087f4 <CyFxApplicationDefine+0x40>
    {
        goto fatalErrorHandler;
    }
#if 1
    /* Create the I2C control command handling thread. */
    retThrdCreate = CyU3PThreadCreate (&i2cAppThread,   /* UVC Thread structure */
400088e8:	e59de024 	ldr	lr, [sp, #36]	; 0x24
400088ec:	e59f0060 	ldr	r0, [pc, #96]	; 40008954 <CyFxApplicationDefine+0x1a0>
400088f0:	e59f1060 	ldr	r1, [pc, #96]	; 40008958 <CyFxApplicationDefine+0x1a4>
400088f4:	e59f2060 	ldr	r2, [pc, #96]	; 4000895c <CyFxApplicationDefine+0x1a8>
400088f8:	e1a0300c 	mov	r3, ip
400088fc:	e58de000 	str	lr, [sp]
40008900:	e58d7004 	str	r7, [sp, #4]
40008904:	e58d6008 	str	r6, [sp, #8]
40008908:	e58d600c 	str	r6, [sp, #12]
4000890c:	e58dc010 	str	ip, [sp, #16]
40008910:	e58d4014 	str	r4, [sp, #20]
40008914:	e58d5018 	str	r5, [sp, #24]
40008918:	eb0007a9 	bl	4000a7c4 <_txe_thread_create>
            UVC_APP_I2C_THREAD_PRIORITY,                    /* UVC Application Thread priority */
            UVC_APP_I2C_THREAD_PRIORITY,                    /* Threshold value for thread pre-emption. */
            CYU3P_NO_TIME_SLICE,                        /* No time slice for the application thread */
            CYU3P_AUTO_START                            /* Start the Thread immediately */
            );
    if (retThrdCreate != 0)
4000891c:	e3500000 	cmp	r0, #0
40008920:	1affffb3 	bne	400087f4 <CyFxApplicationDefine+0x40>

fatalErrorHandler:
    /* Add custom recovery or debug actions here */
    /* Loop indefinitely */
    while (1);
}
40008924:	e28dd04c 	add	sp, sp, #76	; 0x4c
40008928:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000892c:	4003310c 	.word	0x4003310c
40008930:	40032ec4 	.word	0x40032ec4
40008934:	40033148 	.word	0x40033148
40008938:	40032ff8 	.word	0x40032ff8
4000893c:	40031038 	.word	0x40031038
40008940:	40011f80 	.word	0x40011f80
40008944:	40007a68 	.word	0x40007a68
40008948:	400310e0 	.word	0x400310e0
4000894c:	40011f94 	.word	0x40011f94
40008950:	40006b94 	.word	0x40006b94
40008954:	40031188 	.word	0x40031188
40008958:	40011fac 	.word	0x40011fac
4000895c:	400047c0 	.word	0x400047c0

40008960 <main>:
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008960:	e92d4030 	push	{r4, r5, lr}
       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
40008964:	e3a01000 	mov	r1, #0
 * the ThreadX RTOS here.
 */
int
main (
        void)
{
40008968:	e24dd03c 	sub	sp, sp, #60	; 0x3c
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
       clockConfig.cpuClkDiv     = 2;
4000896c:	e3a02002 	mov	r2, #2
       clockConfig.dmaClkDiv     = 2;
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008970:	e2813003 	add	r3, r1, #3
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
40008974:	e3a05001 	mov	r5, #1
       clockConfig.mmioClkDiv    = 2;
       clockConfig.useStandbyClk = CyFalse;
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008978:	e28d0028 	add	r0, sp, #40	; 0x28
{
    CyU3PReturnStatus_t apiRetStatus;
    CyU3PIoMatrixConfig_t io_cfg;

       CyU3PSysClockConfig_t clockConfig;
       clockConfig.setSysClk400  = CyTrue;
4000897c:	e58d5028 	str	r5, [sp, #40]	; 0x28
       clockConfig.cpuClkDiv     = 2;
40008980:	e5cd202c 	strb	r2, [sp, #44]	; 0x2c
       clockConfig.dmaClkDiv     = 2;
40008984:	e5cd202d 	strb	r2, [sp, #45]	; 0x2d
       clockConfig.mmioClkDiv    = 2;
40008988:	e5cd202e 	strb	r2, [sp, #46]	; 0x2e
       clockConfig.useStandbyClk = CyFalse;
4000898c:	e58d1030 	str	r1, [sp, #48]	; 0x30
       clockConfig.clkSrc         = CY_U3P_SYS_CLK;
40008990:	e5cd3034 	strb	r3, [sp, #52]	; 0x34

    /* Initialize the device */
    apiRetStatus = CyU3PDeviceInit (&clockConfig);
40008994:	eb00278d 	bl	400127d0 <CyU3PDeviceInit>
    if (apiRetStatus != CY_U3P_SUCCESS)
40008998:	e2504000 	subs	r4, r0, #0
4000899c:	0a000000 	beq	400089a4 <main+0x44>
400089a0:	eafffffe 	b	400089a0 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);
400089a4:	e1a01004 	mov	r1, r4
400089a8:	e1a02004 	mov	r2, r4
400089ac:	e1a00005 	mov	r0, r5
400089b0:	eb002760 	bl	40012738 <CyU3PDeviceCacheControl>
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400089b4:	e1a0000d 	mov	r0, sp
    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
400089b8:	e5cd4016 	strb	r4, [sp, #22]
    io_cfg.gpioSimpleEn[0]  = 0;
400089bc:	e58d4018 	str	r4, [sp, #24]
    io_cfg.gpioSimpleEn[1]  = 0;
400089c0:	e58d401c 	str	r4, [sp, #28]
    io_cfg.gpioComplexEn[0] = 0;
400089c4:	e58d4020 	str	r4, [sp, #32]
    io_cfg.gpioComplexEn[1] = 0;
400089c8:	e58d4024 	str	r4, [sp, #36]	; 0x24
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
    io_cfg.useI2S           = CyFalse;
400089cc:	e58d400c 	str	r4, [sp, #12]
    io_cfg.useSpi           = CyFalse;
400089d0:	e58d4010 	str	r4, [sp, #16]

    /* Turn on instruction cache to improve firmware performance. Use Release build to improve it further */
    apiRetStatus = CyU3PDeviceCacheControl (CyTrue, CyFalse, CyFalse);

    /* Configure the IO matrix for the device. */
    io_cfg.isDQ32Bit        = CyTrue;
400089d4:	e58d5000 	str	r5, [sp]
    io_cfg.lppMode          = CY_U3P_IO_MATRIX_LPP_DEFAULT;
    io_cfg.gpioSimpleEn[0]  = 0;
    io_cfg.gpioSimpleEn[1]  = 0;
    io_cfg.gpioComplexEn[0] = 0;
    io_cfg.gpioComplexEn[1] = 0;
    io_cfg.useUart          = CyTrue;   /* Uart is enabled for logging. */
400089d8:	e58d5004 	str	r5, [sp, #4]
    io_cfg.useI2C           = CyTrue;   /* I2C is used for the sensor interface. */
400089dc:	e58d5008 	str	r5, [sp, #8]
    io_cfg.useI2S           = CyFalse;
    io_cfg.useSpi           = CyFalse;

    apiRetStatus = CyU3PDeviceConfigureIOMatrix (&io_cfg);
400089e0:	eb002924 	bl	40012e78 <CyU3PDeviceConfigureIOMatrix>
    if (apiRetStatus != CY_U3P_SUCCESS)
400089e4:	e2504000 	subs	r4, r0, #0
400089e8:	1affffec 	bne	400089a0 <main+0x40>
    {
        goto handle_fatal_error;
    }

    /* This is a non returnable call for initializing the RTOS kernel */
    CyU3PKernelEntry ();
400089ec:	eb000002 	bl	400089fc <_tx_initialize_kernel_enter>
    return 0;

handle_fatal_error:
    /* Cannot recover from this error. */
    while (1);
}
400089f0:	e1a00004 	mov	r0, r4
400089f4:	e28dd03c 	add	sp, sp, #60	; 0x3c
400089f8:	e8bd8030 	pop	{r4, r5, pc}

400089fc <_tx_initialize_kernel_enter>:
400089fc:	e92d4010 	push	{r4, lr}
40008a00:	e59f004c 	ldr	r0, [pc, #76]	; 40008a54 <_tx_initialize_kernel_enter+0x58>
40008a04:	e5900000 	ldr	r0, [r0]
40008a08:	e59f1048 	ldr	r1, [pc, #72]	; 40008a58 <_tx_initialize_kernel_enter+0x5c>
40008a0c:	e1500001 	cmp	r0, r1
40008a10:	0a000004 	beq	40008a28 <_tx_initialize_kernel_enter+0x2c>
40008a14:	e1e00221 	mvn	r0, r1, lsr #4
40008a18:	e59f1034 	ldr	r1, [pc, #52]	; 40008a54 <_tx_initialize_kernel_enter+0x58>
40008a1c:	e5810000 	str	r0, [r1]
40008a20:	eb0009ee 	bl	4000b1e0 <_tx_initialize_low_level>
40008a24:	eb00105f 	bl	4000cba8 <_tx_initialize_high_level>
40008a28:	e59f002c 	ldr	r0, [pc, #44]	; 40008a5c <_tx_initialize_kernel_enter+0x60>
40008a2c:	e59f1020 	ldr	r1, [pc, #32]	; 40008a54 <_tx_initialize_kernel_enter+0x58>
40008a30:	e5810000 	str	r0, [r1]
40008a34:	e59f0024 	ldr	r0, [pc, #36]	; 40008a60 <_tx_initialize_kernel_enter+0x64>
40008a38:	e5900000 	ldr	r0, [r0]
40008a3c:	ebffeaf8 	bl	40003624 <tx_application_define>
40008a40:	e3a00000 	mov	r0, #0
40008a44:	e59f1008 	ldr	r1, [pc, #8]	; 40008a54 <_tx_initialize_kernel_enter+0x58>
40008a48:	e5810000 	str	r0, [r1]
40008a4c:	eb00091f 	bl	4000aed0 <_tx_thread_schedule>
40008a50:	e8bd8010 	pop	{r4, pc}
40008a54:	40030e2c 	.word	0x40030e2c
40008a58:	f0f0f0f1 	.word	0xf0f0f0f1
40008a5c:	f0f0f0f0 	.word	0xf0f0f0f0
40008a60:	40030dc4 	.word	0x40030dc4

40008a64 <_tx_thread_identify>:
40008a64:	e10f1000 	mrs	r1, CPSR
40008a68:	e3812080 	orr	r2, r1, #128	; 0x80
40008a6c:	e121f002 	msr	CPSR_c, r2
40008a70:	e59f30e0 	ldr	r3, [pc, #224]	; 40008b58 <_tx_thread_identify+0xf4>
40008a74:	e5930000 	ldr	r0, [r3]
40008a78:	e3500000 	cmp	r0, #0
40008a7c:	0a000031 	beq	40008b48 <_tx_thread_identify+0xe4>
40008a80:	e59f30d4 	ldr	r3, [pc, #212]	; 40008b5c <_tx_thread_identify+0xf8>
40008a84:	e5933000 	ldr	r3, [r3]
40008a88:	e2833001 	add	r3, r3, #1
40008a8c:	e59fc0c8 	ldr	ip, [pc, #200]	; 40008b5c <_tx_thread_identify+0xf8>
40008a90:	e58c3000 	str	r3, [ip]
40008a94:	e580300c 	str	r3, [r0, #12]
40008a98:	e59f30c0 	ldr	r3, [pc, #192]	; 40008b60 <_tx_thread_identify+0xfc>
40008a9c:	e5933000 	ldr	r3, [r3]
40008aa0:	e3530000 	cmp	r3, #0
40008aa4:	1a000006 	bne	40008ac4 <_tx_thread_identify+0x60>
40008aa8:	e59f30b4 	ldr	r3, [pc, #180]	; 40008b64 <_tx_thread_identify+0x100>
40008aac:	e5933000 	ldr	r3, [r3]
40008ab0:	e5803000 	str	r3, [r0]
40008ab4:	e5903000 	ldr	r3, [r0]
40008ab8:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
40008abc:	e5803004 	str	r3, [r0, #4]
40008ac0:	ea00000d 	b	40008afc <_tx_thread_identify+0x98>
40008ac4:	e59f3094 	ldr	r3, [pc, #148]	; 40008b60 <_tx_thread_identify+0xfc>
40008ac8:	e5933000 	ldr	r3, [r3]
40008acc:	e59fc094 	ldr	ip, [pc, #148]	; 40008b68 <_tx_thread_identify+0x104>
40008ad0:	e153000c 	cmp	r3, ip
40008ad4:	2a000004 	bcs	40008aec <_tx_thread_identify+0x88>
40008ad8:	e3e03000 	mvn	r3, #0
40008adc:	e5803000 	str	r3, [r0]
40008ae0:	e3a03000 	mov	r3, #0
40008ae4:	e5803004 	str	r3, [r0, #4]
40008ae8:	ea000003 	b	40008afc <_tx_thread_identify+0x98>
40008aec:	e59f3074 	ldr	r3, [pc, #116]	; 40008b68 <_tx_thread_identify+0x104>
40008af0:	e5803000 	str	r3, [r0]
40008af4:	e3a03000 	mov	r3, #0
40008af8:	e5803004 	str	r3, [r0, #4]
40008afc:	e3a03067 	mov	r3, #103	; 0x67
40008b00:	e5803008 	str	r3, [r0, #8]
40008b04:	e3a03000 	mov	r3, #0
40008b08:	e5803010 	str	r3, [r0, #16]
40008b0c:	e5803014 	str	r3, [r0, #20]
40008b10:	e5803018 	str	r3, [r0, #24]
40008b14:	e580301c 	str	r3, [r0, #28]
40008b18:	e2800020 	add	r0, r0, #32
40008b1c:	e59f3048 	ldr	r3, [pc, #72]	; 40008b6c <_tx_thread_identify+0x108>
40008b20:	e5933000 	ldr	r3, [r3]
40008b24:	e1500003 	cmp	r0, r3
40008b28:	3a000001 	bcc	40008b34 <_tx_thread_identify+0xd0>
40008b2c:	e59f303c 	ldr	r3, [pc, #60]	; 40008b70 <_tx_thread_identify+0x10c>
40008b30:	e5930000 	ldr	r0, [r3]
40008b34:	e59f301c 	ldr	r3, [pc, #28]	; 40008b58 <_tx_thread_identify+0xf4>
40008b38:	e5830000 	str	r0, [r3]
40008b3c:	e59f3030 	ldr	r3, [pc, #48]	; 40008b74 <_tx_thread_identify+0x110>
40008b40:	e5933000 	ldr	r3, [r3]
40008b44:	e5830020 	str	r0, [r3, #32]
40008b48:	e121f001 	msr	CPSR_c, r1
40008b4c:	e59f0010 	ldr	r0, [pc, #16]	; 40008b64 <_tx_thread_identify+0x100>
40008b50:	e5900000 	ldr	r0, [r0]
40008b54:	e12fff1e 	bx	lr
40008b58:	40030ea0 	.word	0x40030ea0
40008b5c:	40030ea4 	.word	0x40030ea4
40008b60:	40030e2c 	.word	0x40030e2c
40008b64:	40030e34 	.word	0x40030e34
40008b68:	f0f0f0f0 	.word	0xf0f0f0f0
40008b6c:	40030e9c 	.word	0x40030e9c
40008b70:	40030e98 	.word	0x40030e98
40008b74:	40030e8c 	.word	0x40030e8c

40008b78 <_tx_thread_initialize>:
40008b78:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40008b7c:	e3a00000 	mov	r0, #0
40008b80:	e59f10c0 	ldr	r1, [pc, #192]	; 40008c48 <_tx_thread_initialize+0xd0>
40008b84:	e5810000 	str	r0, [r1]
40008b88:	e59f10bc 	ldr	r1, [pc, #188]	; 40008c4c <_tx_thread_initialize+0xd4>
40008b8c:	e5810000 	str	r0, [r1]
40008b90:	e59f00b8 	ldr	r0, [pc, #184]	; 40008c50 <_tx_thread_initialize+0xd8>
40008b94:	e3a01000 	mov	r1, #0
40008b98:	e5801000 	str	r1, [r0]
40008b9c:	e59f00b0 	ldr	r0, [pc, #176]	; 40008c54 <_tx_thread_initialize+0xdc>
40008ba0:	e5801000 	str	r1, [r0]
40008ba4:	e3a00020 	mov	r0, #32
40008ba8:	e59f10a8 	ldr	r1, [pc, #168]	; 40008c58 <_tx_thread_initialize+0xe0>
40008bac:	e5810000 	str	r0, [r1]
40008bb0:	e3a00000 	mov	r0, #0
40008bb4:	e59f10a0 	ldr	r1, [pc, #160]	; 40008c5c <_tx_thread_initialize+0xe4>
40008bb8:	e5c10000 	strb	r0, [r1]
40008bbc:	e2816001 	add	r6, r1, #1
40008bc0:	e3a04001 	mov	r4, #1
40008bc4:	ea000009 	b	40008bf0 <_tx_thread_initialize+0x78>
40008bc8:	e1a07004 	mov	r7, r4
40008bcc:	e3a05000 	mov	r5, #0
40008bd0:	ea000002 	b	40008be0 <_tx_thread_initialize+0x68>
40008bd4:	e1a070a7 	lsr	r7, r7, #1
40008bd8:	e2850001 	add	r0, r5, #1
40008bdc:	e20050ff 	and	r5, r0, #255	; 0xff
40008be0:	e3170001 	tst	r7, #1
40008be4:	0afffffa 	beq	40008bd4 <_tx_thread_initialize+0x5c>
40008be8:	e4c65001 	strb	r5, [r6], #1
40008bec:	e2844001 	add	r4, r4, #1
40008bf0:	e3540c01 	cmp	r4, #256	; 0x100
40008bf4:	3afffff3 	bcc	40008bc8 <_tx_thread_initialize+0x50>
40008bf8:	e3a01080 	mov	r1, #128	; 0x80
40008bfc:	e59f005c 	ldr	r0, [pc, #92]	; 40008c60 <_tx_thread_initialize+0xe8>
40008c00:	eb002b50 	bl	40013948 <__aeabi_memclr4>
40008c04:	e3a00000 	mov	r0, #0
40008c08:	e59f1054 	ldr	r1, [pc, #84]	; 40008c64 <_tx_thread_initialize+0xec>
40008c0c:	e5810000 	str	r0, [r1]
40008c10:	e59f1050 	ldr	r1, [pc, #80]	; 40008c68 <_tx_thread_initialize+0xf0>
40008c14:	e5810000 	str	r0, [r1]
40008c18:	e59f104c 	ldr	r1, [pc, #76]	; 40008c6c <_tx_thread_initialize+0xf4>
40008c1c:	e5810000 	str	r0, [r1]
40008c20:	e59f1048 	ldr	r1, [pc, #72]	; 40008c70 <_tx_thread_initialize+0xf8>
40008c24:	e5810000 	str	r0, [r1]
40008c28:	e59f0044 	ldr	r0, [pc, #68]	; 40008c74 <_tx_thread_initialize+0xfc>
40008c2c:	e5900000 	ldr	r0, [r0]
40008c30:	e3800611 	orr	r0, r0, #17825792	; 0x1100000
40008c34:	e3800c01 	orr	r0, r0, #256	; 0x100
40008c38:	e3800002 	orr	r0, r0, #2
40008c3c:	e59f1030 	ldr	r1, [pc, #48]	; 40008c74 <_tx_thread_initialize+0xfc>
40008c40:	e5810000 	str	r0, [r1]
40008c44:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40008c48:	40030e34 	.word	0x40030e34
40008c4c:	40030e38 	.word	0x40030e38
40008c50:	40030e44 	.word	0x40030e44
40008c54:	40030e48 	.word	0x40030e48
40008c58:	40030e4c 	.word	0x40030e4c
40008c5c:	40032774 	.word	0x40032774
40008c60:	40032874 	.word	0x40032874
40008c64:	40030e3c 	.word	0x40030e3c
40008c68:	40030e40 	.word	0x40030e40
40008c6c:	40030e50 	.word	0x40030e50
40008c70:	40030e58 	.word	0x40030e58
40008c74:	40030e54 	.word	0x40030e54

40008c78 <_tx_thread_sleep>:
40008c78:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40008c7c:	e1a04000 	mov	r4, r0
40008c80:	e59f018c 	ldr	r0, [pc, #396]	; 40008e14 <_tx_thread_sleep+0x19c>
40008c84:	e5900000 	ldr	r0, [r0]
40008c88:	e58d0000 	str	r0, [sp]
40008c8c:	e59d0000 	ldr	r0, [sp]
40008c90:	e3500000 	cmp	r0, #0
40008c94:	0a000007 	beq	40008cb8 <_tx_thread_sleep+0x40>
40008c98:	e59f1178 	ldr	r1, [pc, #376]	; 40008e18 <_tx_thread_sleep+0x1a0>
40008c9c:	e59d0000 	ldr	r0, [sp]
40008ca0:	e1500001 	cmp	r0, r1
40008ca4:	0a000003 	beq	40008cb8 <_tx_thread_sleep+0x40>
40008ca8:	e59f016c 	ldr	r0, [pc, #364]	; 40008e1c <_tx_thread_sleep+0x1a4>
40008cac:	e5900000 	ldr	r0, [r0]
40008cb0:	e3500000 	cmp	r0, #0
40008cb4:	0a000001 	beq	40008cc0 <_tx_thread_sleep+0x48>
40008cb8:	e3a00013 	mov	r0, #19
40008cbc:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40008cc0:	e3540000 	cmp	r4, #0
40008cc4:	1a000001 	bne	40008cd0 <_tx_thread_sleep+0x58>
40008cc8:	e3a00000 	mov	r0, #0
40008ccc:	eafffffa 	b	40008cbc <_tx_thread_sleep+0x44>
40008cd0:	e10f5000 	mrs	r5, CPSR
40008cd4:	e3856080 	orr	r6, r5, #128	; 0x80
40008cd8:	e121f006 	msr	CPSR_c, r6
40008cdc:	e59f113c 	ldr	r1, [pc, #316]	; 40008e20 <_tx_thread_sleep+0x1a8>
40008ce0:	e5910000 	ldr	r0, [r1]
40008ce4:	e3500000 	cmp	r0, #0
40008ce8:	0a000033 	beq	40008dbc <_tx_thread_sleep+0x144>
40008cec:	e59f1130 	ldr	r1, [pc, #304]	; 40008e24 <_tx_thread_sleep+0x1ac>
40008cf0:	e5911000 	ldr	r1, [r1]
40008cf4:	e2811001 	add	r1, r1, #1
40008cf8:	e59f2124 	ldr	r2, [pc, #292]	; 40008e24 <_tx_thread_sleep+0x1ac>
40008cfc:	e5821000 	str	r1, [r2]
40008d00:	e580100c 	str	r1, [r0, #12]
40008d04:	e59f1110 	ldr	r1, [pc, #272]	; 40008e1c <_tx_thread_sleep+0x1a4>
40008d08:	e5911000 	ldr	r1, [r1]
40008d0c:	e3510000 	cmp	r1, #0
40008d10:	1a000006 	bne	40008d30 <_tx_thread_sleep+0xb8>
40008d14:	e59f10f8 	ldr	r1, [pc, #248]	; 40008e14 <_tx_thread_sleep+0x19c>
40008d18:	e5911000 	ldr	r1, [r1]
40008d1c:	e5801000 	str	r1, [r0]
40008d20:	e5901000 	ldr	r1, [r0]
40008d24:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008d28:	e5801004 	str	r1, [r0, #4]
40008d2c:	ea00000d 	b	40008d68 <_tx_thread_sleep+0xf0>
40008d30:	e59f10e4 	ldr	r1, [pc, #228]	; 40008e1c <_tx_thread_sleep+0x1a4>
40008d34:	e5911000 	ldr	r1, [r1]
40008d38:	e59f20e8 	ldr	r2, [pc, #232]	; 40008e28 <_tx_thread_sleep+0x1b0>
40008d3c:	e1510002 	cmp	r1, r2
40008d40:	2a000004 	bcs	40008d58 <_tx_thread_sleep+0xe0>
40008d44:	e3e01000 	mvn	r1, #0
40008d48:	e5801000 	str	r1, [r0]
40008d4c:	e3a01000 	mov	r1, #0
40008d50:	e5801004 	str	r1, [r0, #4]
40008d54:	ea000003 	b	40008d68 <_tx_thread_sleep+0xf0>
40008d58:	e59f10c8 	ldr	r1, [pc, #200]	; 40008e28 <_tx_thread_sleep+0x1b0>
40008d5c:	e5801000 	str	r1, [r0]
40008d60:	e3a01000 	mov	r1, #0
40008d64:	e5801004 	str	r1, [r0, #4]
40008d68:	e3a01070 	mov	r1, #112	; 0x70
40008d6c:	e5801008 	str	r1, [r0, #8]
40008d70:	e5804010 	str	r4, [r0, #16]
40008d74:	e59d1000 	ldr	r1, [sp]
40008d78:	e5911030 	ldr	r1, [r1, #48]	; 0x30
40008d7c:	e5801014 	str	r1, [r0, #20]
40008d80:	e580d018 	str	sp, [r0, #24]
40008d84:	e3a01000 	mov	r1, #0
40008d88:	e580101c 	str	r1, [r0, #28]
40008d8c:	e2800020 	add	r0, r0, #32
40008d90:	e59f1094 	ldr	r1, [pc, #148]	; 40008e2c <_tx_thread_sleep+0x1b4>
40008d94:	e5911000 	ldr	r1, [r1]
40008d98:	e1500001 	cmp	r0, r1
40008d9c:	3a000001 	bcc	40008da8 <_tx_thread_sleep+0x130>
40008da0:	e59f1088 	ldr	r1, [pc, #136]	; 40008e30 <_tx_thread_sleep+0x1b8>
40008da4:	e5910000 	ldr	r0, [r1]
40008da8:	e59f1070 	ldr	r1, [pc, #112]	; 40008e20 <_tx_thread_sleep+0x1a8>
40008dac:	e5810000 	str	r0, [r1]
40008db0:	e59f107c 	ldr	r1, [pc, #124]	; 40008e34 <_tx_thread_sleep+0x1bc>
40008db4:	e5911000 	ldr	r1, [r1]
40008db8:	e5810020 	str	r0, [r1, #32]
40008dbc:	e3a00004 	mov	r0, #4
40008dc0:	e59d1000 	ldr	r1, [sp]
40008dc4:	e5810030 	str	r0, [r1, #48]	; 0x30
40008dc8:	e3a00001 	mov	r0, #1
40008dcc:	e59d1000 	ldr	r1, [sp]
40008dd0:	e5810038 	str	r0, [r1, #56]	; 0x38
40008dd4:	e3a00000 	mov	r0, #0
40008dd8:	e59d1000 	ldr	r1, [sp]
40008ddc:	e5810084 	str	r0, [r1, #132]	; 0x84
40008de0:	e59d0000 	ldr	r0, [sp]
40008de4:	e580404c 	str	r4, [r0, #76]	; 0x4c
40008de8:	e59f0048 	ldr	r0, [pc, #72]	; 40008e38 <_tx_thread_sleep+0x1c0>
40008dec:	e5900000 	ldr	r0, [r0]
40008df0:	e2800001 	add	r0, r0, #1
40008df4:	e59f103c 	ldr	r1, [pc, #60]	; 40008e38 <_tx_thread_sleep+0x1c0>
40008df8:	e5810000 	str	r0, [r1]
40008dfc:	e121f005 	msr	CPSR_c, r5
40008e00:	e59d0000 	ldr	r0, [sp]
40008e04:	eb00000c 	bl	40008e3c <_tx_thread_system_suspend>
40008e08:	e59d0000 	ldr	r0, [sp]
40008e0c:	e5900084 	ldr	r0, [r0, #132]	; 0x84
40008e10:	eaffffa9 	b	40008cbc <_tx_thread_sleep+0x44>
40008e14:	40030e34 	.word	0x40030e34
40008e18:	40032974 	.word	0x40032974
40008e1c:	40030e2c 	.word	0x40030e2c
40008e20:	40030ea0 	.word	0x40030ea0
40008e24:	40030ea4 	.word	0x40030ea4
40008e28:	f0f0f0f0 	.word	0xf0f0f0f0
40008e2c:	40030e9c 	.word	0x40030e9c
40008e30:	40030e98 	.word	0x40030e98
40008e34:	40030e8c 	.word	0x40030e8c
40008e38:	40030e50 	.word	0x40030e50

40008e3c <_tx_thread_system_suspend>:
40008e3c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40008e40:	e1a04000 	mov	r4, r0
40008e44:	e3a0b000 	mov	fp, #0
40008e48:	e59f05b0 	ldr	r0, [pc, #1456]	; 40009400 <_tx_thread_system_suspend+0x5c4>
40008e4c:	e5900000 	ldr	r0, [r0]
40008e50:	e1540000 	cmp	r4, r0
40008e54:	1a000009 	bne	40008e80 <_tx_thread_system_suspend+0x44>
40008e58:	e594004c 	ldr	r0, [r4, #76]	; 0x4c
40008e5c:	e58d0000 	str	r0, [sp]
40008e60:	e59d0000 	ldr	r0, [sp]
40008e64:	e3500000 	cmp	r0, #0
40008e68:	0a000004 	beq	40008e80 <_tx_thread_system_suspend+0x44>
40008e6c:	e59d0000 	ldr	r0, [sp]
40008e70:	e3700001 	cmn	r0, #1
40008e74:	0a000001 	beq	40008e80 <_tx_thread_system_suspend+0x44>
40008e78:	e284004c 	add	r0, r4, #76	; 0x4c
40008e7c:	eb00020a 	bl	400096ac <_tx_timer_system_activate>
40008e80:	e5940008 	ldr	r0, [r4, #8]
40008e84:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40008e88:	e1500001 	cmp	r0, r1
40008e8c:	2a000001 	bcs	40008e98 <_tx_thread_system_suspend+0x5c>
40008e90:	e5940008 	ldr	r0, [r4, #8]
40008e94:	e5840040 	str	r0, [r4, #64]	; 0x40
40008e98:	e594000c 	ldr	r0, [r4, #12]
40008e9c:	e5900000 	ldr	r0, [r0]
40008ea0:	e59f155c 	ldr	r1, [pc, #1372]	; 40009404 <_tx_thread_system_suspend+0x5c8>
40008ea4:	e1500001 	cmp	r0, r1
40008ea8:	1a000007 	bne	40008ecc <_tx_thread_system_suspend+0x90>
40008eac:	e5940010 	ldr	r0, [r4, #16]
40008eb0:	e5900001 	ldr	r0, [r0, #1]
40008eb4:	e1500001 	cmp	r0, r1
40008eb8:	1a000003 	bne	40008ecc <_tx_thread_system_suspend+0x90>
40008ebc:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008ec0:	e594100c 	ldr	r1, [r4, #12]
40008ec4:	e1500001 	cmp	r0, r1
40008ec8:	2a000001 	bcs	40008ed4 <_tx_thread_system_suspend+0x98>
40008ecc:	e1a00004 	mov	r0, r4
40008ed0:	eb001941 	bl	4000f3dc <_tx_thread_stack_error_handler>
40008ed4:	e5940040 	ldr	r0, [r4, #64]	; 0x40
40008ed8:	e5100004 	ldr	r0, [r0, #-4]
40008edc:	e59f1520 	ldr	r1, [pc, #1312]	; 40009404 <_tx_thread_system_suspend+0x5c8>
40008ee0:	e1500001 	cmp	r0, r1
40008ee4:	0a000001 	beq	40008ef0 <_tx_thread_system_suspend+0xb4>
40008ee8:	e1a00004 	mov	r0, r4
40008eec:	eb001905 	bl	4000f308 <_tx_thread_stack_analyze>
40008ef0:	e10f5000 	mrs	r5, CPSR
40008ef4:	e3856080 	orr	r6, r5, #128	; 0x80
40008ef8:	e121f006 	msr	CPSR_c, r6
40008efc:	e59f0504 	ldr	r0, [pc, #1284]	; 40009408 <_tx_thread_system_suspend+0x5cc>
40008f00:	e5900000 	ldr	r0, [r0]
40008f04:	e2400001 	sub	r0, r0, #1
40008f08:	e59f14f8 	ldr	r1, [pc, #1272]	; 40009408 <_tx_thread_system_suspend+0x5cc>
40008f0c:	e5810000 	str	r0, [r1]
40008f10:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40008f14:	e3500000 	cmp	r0, #0
40008f18:	0a000112 	beq	40009368 <_tx_thread_system_suspend+0x52c>
40008f1c:	e59f04e8 	ldr	r0, [pc, #1256]	; 4000940c <_tx_thread_system_suspend+0x5d0>
40008f20:	e590a000 	ldr	sl, [r0]
40008f24:	e2801000 	add	r1, r0, #0
40008f28:	e5910000 	ldr	r0, [r1]
40008f2c:	e3500000 	cmp	r0, #0
40008f30:	0a000034 	beq	40009008 <_tx_thread_system_suspend+0x1cc>
40008f34:	e59f14d4 	ldr	r1, [pc, #1236]	; 40009410 <_tx_thread_system_suspend+0x5d4>
40008f38:	e5911000 	ldr	r1, [r1]
40008f3c:	e2811001 	add	r1, r1, #1
40008f40:	e59f24c8 	ldr	r2, [pc, #1224]	; 40009410 <_tx_thread_system_suspend+0x5d4>
40008f44:	e5821000 	str	r1, [r2]
40008f48:	e580100c 	str	r1, [r0, #12]
40008f4c:	e59f14c0 	ldr	r1, [pc, #1216]	; 40009414 <_tx_thread_system_suspend+0x5d8>
40008f50:	e5911000 	ldr	r1, [r1]
40008f54:	e3510000 	cmp	r1, #0
40008f58:	1a000006 	bne	40008f78 <_tx_thread_system_suspend+0x13c>
40008f5c:	e59f149c 	ldr	r1, [pc, #1180]	; 40009400 <_tx_thread_system_suspend+0x5c4>
40008f60:	e5911000 	ldr	r1, [r1]
40008f64:	e5801000 	str	r1, [r0]
40008f68:	e5901000 	ldr	r1, [r0]
40008f6c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
40008f70:	e5801004 	str	r1, [r0, #4]
40008f74:	ea00000d 	b	40008fb0 <_tx_thread_system_suspend+0x174>
40008f78:	e59f1494 	ldr	r1, [pc, #1172]	; 40009414 <_tx_thread_system_suspend+0x5d8>
40008f7c:	e5911000 	ldr	r1, [r1]
40008f80:	e59f2490 	ldr	r2, [pc, #1168]	; 40009418 <_tx_thread_system_suspend+0x5dc>
40008f84:	e1510002 	cmp	r1, r2
40008f88:	2a000004 	bcs	40008fa0 <_tx_thread_system_suspend+0x164>
40008f8c:	e3e01000 	mvn	r1, #0
40008f90:	e5801000 	str	r1, [r0]
40008f94:	e3a01000 	mov	r1, #0
40008f98:	e5801004 	str	r1, [r0, #4]
40008f9c:	ea000003 	b	40008fb0 <_tx_thread_system_suspend+0x174>
40008fa0:	e59f1470 	ldr	r1, [pc, #1136]	; 40009418 <_tx_thread_system_suspend+0x5dc>
40008fa4:	e5801000 	str	r1, [r0]
40008fa8:	e3a01000 	mov	r1, #0
40008fac:	e5801004 	str	r1, [r0, #4]
40008fb0:	e3a01002 	mov	r1, #2
40008fb4:	e5801008 	str	r1, [r0, #8]
40008fb8:	e5804010 	str	r4, [r0, #16]
40008fbc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
40008fc0:	e5801014 	str	r1, [r0, #20]
40008fc4:	e28d1004 	add	r1, sp, #4
40008fc8:	e5801018 	str	r1, [r0, #24]
40008fcc:	e59f1448 	ldr	r1, [pc, #1096]	; 4000941c <_tx_thread_system_suspend+0x5e0>
40008fd0:	e5911000 	ldr	r1, [r1]
40008fd4:	e580101c 	str	r1, [r0, #28]
40008fd8:	e2800020 	add	r0, r0, #32
40008fdc:	e59f143c 	ldr	r1, [pc, #1084]	; 40009420 <_tx_thread_system_suspend+0x5e4>
40008fe0:	e5911000 	ldr	r1, [r1]
40008fe4:	e1500001 	cmp	r0, r1
40008fe8:	3a000001 	bcc	40008ff4 <_tx_thread_system_suspend+0x1b8>
40008fec:	e59f1430 	ldr	r1, [pc, #1072]	; 40009424 <_tx_thread_system_suspend+0x5e8>
40008ff0:	e5910000 	ldr	r0, [r1]
40008ff4:	e59f1410 	ldr	r1, [pc, #1040]	; 4000940c <_tx_thread_system_suspend+0x5d0>
40008ff8:	e5810000 	str	r0, [r1]
40008ffc:	e59f1424 	ldr	r1, [pc, #1060]	; 40009428 <_tx_thread_system_suspend+0x5ec>
40009000:	e5911000 	ldr	r1, [r1]
40009004:	e5810020 	str	r0, [r1, #32]
40009008:	e35a0000 	cmp	sl, #0
4000900c:	0a000000 	beq	40009014 <_tx_thread_system_suspend+0x1d8>
40009010:	e59ab00c 	ldr	fp, [sl, #12]
40009014:	e3a00000 	mov	r0, #0
40009018:	e5840038 	str	r0, [r4, #56]	; 0x38
4000901c:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
40009020:	e5940020 	ldr	r0, [r4, #32]
40009024:	e1500004 	cmp	r0, r4
40009028:	0a000029 	beq	400090d4 <_tx_thread_system_suspend+0x298>
4000902c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40009030:	e5941020 	ldr	r1, [r4, #32]
40009034:	e5810024 	str	r0, [r1, #36]	; 0x24
40009038:	e5940020 	ldr	r0, [r4, #32]
4000903c:	e5941024 	ldr	r1, [r4, #36]	; 0x24
40009040:	e5810020 	str	r0, [r1, #32]
40009044:	e59f03e0 	ldr	r0, [pc, #992]	; 4000942c <_tx_thread_system_suspend+0x5f0>
40009048:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4000904c:	e1500004 	cmp	r0, r4
40009050:	1a0000c4 	bne	40009368 <_tx_thread_system_suspend+0x52c>
40009054:	e59f13d0 	ldr	r1, [pc, #976]	; 4000942c <_tx_thread_system_suspend+0x5f0>
40009058:	e5940020 	ldr	r0, [r4, #32]
4000905c:	e7810107 	str	r0, [r1, r7, lsl #2]
40009060:	e59f03c8 	ldr	r0, [pc, #968]	; 40009430 <_tx_thread_system_suspend+0x5f4>
40009064:	e5900000 	ldr	r0, [r0]
40009068:	e3500000 	cmp	r0, #0
4000906c:	0a000005 	beq	40009088 <_tx_thread_system_suspend+0x24c>
40009070:	e59f03b8 	ldr	r0, [pc, #952]	; 40009430 <_tx_thread_system_suspend+0x5f4>
40009074:	e5900000 	ldr	r0, [r0]
40009078:	e3a01001 	mov	r1, #1
4000907c:	e1c00711 	bic	r0, r0, r1, lsl r7
40009080:	e59f13a8 	ldr	r1, [pc, #936]	; 40009430 <_tx_thread_system_suspend+0x5f4>
40009084:	e5810000 	str	r0, [r1]
40009088:	e59f038c 	ldr	r0, [pc, #908]	; 4000941c <_tx_thread_system_suspend+0x5e0>
4000908c:	e5900000 	ldr	r0, [r0]
40009090:	e1540000 	cmp	r4, r0
40009094:	1a0000b3 	bne	40009368 <_tx_thread_system_suspend+0x52c>
40009098:	e59f038c 	ldr	r0, [pc, #908]	; 4000942c <_tx_thread_system_suspend+0x5f0>
4000909c:	e59f1390 	ldr	r1, [pc, #912]	; 40009434 <_tx_thread_system_suspend+0x5f8>
400090a0:	e5911000 	ldr	r1, [r1]
400090a4:	e7900101 	ldr	r0, [r0, r1, lsl #2]
400090a8:	e59f136c 	ldr	r1, [pc, #876]	; 4000941c <_tx_thread_system_suspend+0x5e0>
400090ac:	e5810000 	str	r0, [r1]
400090b0:	e35a0000 	cmp	sl, #0
400090b4:	0a0000ab 	beq	40009368 <_tx_thread_system_suspend+0x52c>
400090b8:	e59a000c 	ldr	r0, [sl, #12]
400090bc:	e150000b 	cmp	r0, fp
400090c0:	1a0000a8 	bne	40009368 <_tx_thread_system_suspend+0x52c>
400090c4:	e2810000 	add	r0, r1, #0
400090c8:	e5900000 	ldr	r0, [r0]
400090cc:	e58a001c 	str	r0, [sl, #28]
400090d0:	ea0000a4 	b	40009368 <_tx_thread_system_suspend+0x52c>
400090d4:	e3a00000 	mov	r0, #0
400090d8:	e59f134c 	ldr	r1, [pc, #844]	; 4000942c <_tx_thread_system_suspend+0x5f0>
400090dc:	e7810107 	str	r0, [r1, r7, lsl #2]
400090e0:	e59f0350 	ldr	r0, [pc, #848]	; 40009438 <_tx_thread_system_suspend+0x5fc>
400090e4:	e5900000 	ldr	r0, [r0]
400090e8:	e3a01001 	mov	r1, #1
400090ec:	e1c00711 	bic	r0, r0, r1, lsl r7
400090f0:	e59f1340 	ldr	r1, [pc, #832]	; 40009438 <_tx_thread_system_suspend+0x5fc>
400090f4:	e5810000 	str	r0, [r1]
400090f8:	e59f0330 	ldr	r0, [pc, #816]	; 40009430 <_tx_thread_system_suspend+0x5f4>
400090fc:	e5900000 	ldr	r0, [r0]
40009100:	e3500000 	cmp	r0, #0
40009104:	0a000005 	beq	40009120 <_tx_thread_system_suspend+0x2e4>
40009108:	e59f0320 	ldr	r0, [pc, #800]	; 40009430 <_tx_thread_system_suspend+0x5f4>
4000910c:	e5900000 	ldr	r0, [r0]
40009110:	e3a01001 	mov	r1, #1
40009114:	e1c00711 	bic	r0, r0, r1, lsl r7
40009118:	e59f1310 	ldr	r1, [pc, #784]	; 40009430 <_tx_thread_system_suspend+0x5f4>
4000911c:	e5810000 	str	r0, [r1]
40009120:	e3a08000 	mov	r8, #0
40009124:	e59f030c 	ldr	r0, [pc, #780]	; 40009438 <_tx_thread_system_suspend+0x5fc>
40009128:	e5909000 	ldr	r9, [r0]
4000912c:	e20900ff 	and	r0, r9, #255	; 0xff
40009130:	e58d0004 	str	r0, [sp, #4]
40009134:	e59d0004 	ldr	r0, [sp, #4]
40009138:	e3500000 	cmp	r0, #0
4000913c:	1a00002a 	bne	400091ec <_tx_thread_system_suspend+0x3b0>
40009140:	e1a09429 	lsr	r9, r9, #8
40009144:	e20900ff 	and	r0, r9, #255	; 0xff
40009148:	e58d0004 	str	r0, [sp, #4]
4000914c:	e2888008 	add	r8, r8, #8
40009150:	e59d0004 	ldr	r0, [sp, #4]
40009154:	e3500000 	cmp	r0, #0
40009158:	1a000023 	bne	400091ec <_tx_thread_system_suspend+0x3b0>
4000915c:	e1a09429 	lsr	r9, r9, #8
40009160:	e20900ff 	and	r0, r9, #255	; 0xff
40009164:	e58d0004 	str	r0, [sp, #4]
40009168:	e2888008 	add	r8, r8, #8
4000916c:	e59d0004 	ldr	r0, [sp, #4]
40009170:	e3500000 	cmp	r0, #0
40009174:	1a00001c 	bne	400091ec <_tx_thread_system_suspend+0x3b0>
40009178:	e1a09429 	lsr	r9, r9, #8
4000917c:	e20900ff 	and	r0, r9, #255	; 0xff
40009180:	e58d0004 	str	r0, [sp, #4]
40009184:	e2888008 	add	r8, r8, #8
40009188:	e59d0004 	ldr	r0, [sp, #4]
4000918c:	e3500000 	cmp	r0, #0
40009190:	1a000015 	bne	400091ec <_tx_thread_system_suspend+0x3b0>
40009194:	e3a00020 	mov	r0, #32
40009198:	e59f1294 	ldr	r1, [pc, #660]	; 40009434 <_tx_thread_system_suspend+0x5f8>
4000919c:	e5810000 	str	r0, [r1]
400091a0:	e3a00000 	mov	r0, #0
400091a4:	e59f1270 	ldr	r1, [pc, #624]	; 4000941c <_tx_thread_system_suspend+0x5e0>
400091a8:	e5810000 	str	r0, [r1]
400091ac:	e35a0000 	cmp	sl, #0
400091b0:	0a000004 	beq	400091c8 <_tx_thread_system_suspend+0x38c>
400091b4:	e59a000c 	ldr	r0, [sl, #12]
400091b8:	e150000b 	cmp	r0, fp
400091bc:	1a000001 	bne	400091c8 <_tx_thread_system_suspend+0x38c>
400091c0:	e3a00000 	mov	r0, #0
400091c4:	e58a001c 	str	r0, [sl, #28]
400091c8:	e121f005 	msr	CPSR_c, r5
400091cc:	e59f0240 	ldr	r0, [pc, #576]	; 40009414 <_tx_thread_system_suspend+0x5d8>
400091d0:	e5900000 	ldr	r0, [r0]
400091d4:	e59f122c 	ldr	r1, [pc, #556]	; 40009408 <_tx_thread_system_suspend+0x5cc>
400091d8:	e5911000 	ldr	r1, [r1]
400091dc:	e1900001 	orrs	r0, r0, r1
400091e0:	1a000000 	bne	400091e8 <_tx_thread_system_suspend+0x3ac>
400091e4:	eb000725 	bl	4000ae80 <_tx_thread_system_return>
400091e8:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
400091ec:	e59f0248 	ldr	r0, [pc, #584]	; 4000943c <_tx_thread_system_suspend+0x600>
400091f0:	e59d1004 	ldr	r1, [sp, #4]
400091f4:	e7d00001 	ldrb	r0, [r0, r1]
400091f8:	e0800008 	add	r0, r0, r8
400091fc:	e59f1230 	ldr	r1, [pc, #560]	; 40009434 <_tx_thread_system_suspend+0x5f8>
40009200:	e5810000 	str	r0, [r1]
40009204:	e59f0210 	ldr	r0, [pc, #528]	; 4000941c <_tx_thread_system_suspend+0x5e0>
40009208:	e5900000 	ldr	r0, [r0]
4000920c:	e1540000 	cmp	r4, r0
40009210:	1a000054 	bne	40009368 <_tx_thread_system_suspend+0x52c>
40009214:	e59f0210 	ldr	r0, [pc, #528]	; 4000942c <_tx_thread_system_suspend+0x5f0>
40009218:	e5911000 	ldr	r1, [r1]
4000921c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40009220:	e59f11f4 	ldr	r1, [pc, #500]	; 4000941c <_tx_thread_system_suspend+0x5e0>
40009224:	e5810000 	str	r0, [r1]
40009228:	e35a0000 	cmp	sl, #0
4000922c:	0a000005 	beq	40009248 <_tx_thread_system_suspend+0x40c>
40009230:	e59a000c 	ldr	r0, [sl, #12]
40009234:	e150000b 	cmp	r0, fp
40009238:	1a000002 	bne	40009248 <_tx_thread_system_suspend+0x40c>
4000923c:	e2810000 	add	r0, r1, #0
40009240:	e5900000 	ldr	r0, [r0]
40009244:	e58a001c 	str	r0, [sl, #28]
40009248:	e59f01e0 	ldr	r0, [pc, #480]	; 40009430 <_tx_thread_system_suspend+0x5f4>
4000924c:	e5900000 	ldr	r0, [r0]
40009250:	e3500000 	cmp	r0, #0
40009254:	0a000043 	beq	40009368 <_tx_thread_system_suspend+0x52c>
40009258:	e59f01a8 	ldr	r0, [pc, #424]	; 40009408 <_tx_thread_system_suspend+0x5cc>
4000925c:	e5900000 	ldr	r0, [r0]
40009260:	e2800001 	add	r0, r0, #1
40009264:	e59f119c 	ldr	r1, [pc, #412]	; 40009408 <_tx_thread_system_suspend+0x5cc>
40009268:	e5810000 	str	r0, [r1]
4000926c:	e121f005 	msr	CPSR_c, r5
40009270:	e10f5000 	mrs	r5, CPSR
40009274:	e3856080 	orr	r6, r5, #128	; 0x80
40009278:	e121f006 	msr	CPSR_c, r6
4000927c:	e2810000 	add	r0, r1, #0
40009280:	e5900000 	ldr	r0, [r0]
40009284:	e2400001 	sub	r0, r0, #1
40009288:	e5810000 	str	r0, [r1]
4000928c:	e3a08000 	mov	r8, #0
40009290:	e59f0198 	ldr	r0, [pc, #408]	; 40009430 <_tx_thread_system_suspend+0x5f4>
40009294:	e5909000 	ldr	r9, [r0]
40009298:	e20900ff 	and	r0, r9, #255	; 0xff
4000929c:	e58d0004 	str	r0, [sp, #4]
400092a0:	e59d0004 	ldr	r0, [sp, #4]
400092a4:	e3500000 	cmp	r0, #0
400092a8:	1a000011 	bne	400092f4 <_tx_thread_system_suspend+0x4b8>
400092ac:	e1a09429 	lsr	r9, r9, #8
400092b0:	e20900ff 	and	r0, r9, #255	; 0xff
400092b4:	e58d0004 	str	r0, [sp, #4]
400092b8:	e2888008 	add	r8, r8, #8
400092bc:	e59d0004 	ldr	r0, [sp, #4]
400092c0:	e3500000 	cmp	r0, #0
400092c4:	1a00000a 	bne	400092f4 <_tx_thread_system_suspend+0x4b8>
400092c8:	e1a09429 	lsr	r9, r9, #8
400092cc:	e20900ff 	and	r0, r9, #255	; 0xff
400092d0:	e58d0004 	str	r0, [sp, #4]
400092d4:	e2888008 	add	r8, r8, #8
400092d8:	e59d0004 	ldr	r0, [sp, #4]
400092dc:	e3500000 	cmp	r0, #0
400092e0:	1a000003 	bne	400092f4 <_tx_thread_system_suspend+0x4b8>
400092e4:	e1a09429 	lsr	r9, r9, #8
400092e8:	e20900ff 	and	r0, r9, #255	; 0xff
400092ec:	e58d0004 	str	r0, [sp, #4]
400092f0:	e2888008 	add	r8, r8, #8
400092f4:	e59f0140 	ldr	r0, [pc, #320]	; 4000943c <_tx_thread_system_suspend+0x600>
400092f8:	e59d1004 	ldr	r1, [sp, #4]
400092fc:	e7d00001 	ldrb	r0, [r0, r1]
40009300:	e0807008 	add	r7, r0, r8
40009304:	e59f0120 	ldr	r0, [pc, #288]	; 4000942c <_tx_thread_system_suspend+0x5f0>
40009308:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4000930c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40009310:	e59f111c 	ldr	r1, [pc, #284]	; 40009434 <_tx_thread_system_suspend+0x5f8>
40009314:	e5911000 	ldr	r1, [r1]
40009318:	e1500001 	cmp	r0, r1
4000931c:	8a000011 	bhi	40009368 <_tx_thread_system_suspend+0x52c>
40009320:	e59f0104 	ldr	r0, [pc, #260]	; 4000942c <_tx_thread_system_suspend+0x5f0>
40009324:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40009328:	e59f10ec 	ldr	r1, [pc, #236]	; 4000941c <_tx_thread_system_suspend+0x5e0>
4000932c:	e5810000 	str	r0, [r1]
40009330:	e35a0000 	cmp	sl, #0
40009334:	0a000005 	beq	40009350 <_tx_thread_system_suspend+0x514>
40009338:	e59a000c 	ldr	r0, [sl, #12]
4000933c:	e150000b 	cmp	r0, fp
40009340:	1a000002 	bne	40009350 <_tx_thread_system_suspend+0x514>
40009344:	e2810000 	add	r0, r1, #0
40009348:	e5900000 	ldr	r0, [r0]
4000934c:	e58a001c 	str	r0, [sl, #28]
40009350:	e59f00d8 	ldr	r0, [pc, #216]	; 40009430 <_tx_thread_system_suspend+0x5f4>
40009354:	e5900000 	ldr	r0, [r0]
40009358:	e3a01001 	mov	r1, #1
4000935c:	e1c00711 	bic	r0, r0, r1, lsl r7
40009360:	e59f10c8 	ldr	r1, [pc, #200]	; 40009430 <_tx_thread_system_suspend+0x5f4>
40009364:	e5810000 	str	r0, [r1]
40009368:	e121f005 	msr	CPSR_c, r5
4000936c:	e59f008c 	ldr	r0, [pc, #140]	; 40009400 <_tx_thread_system_suspend+0x5c4>
40009370:	e5900000 	ldr	r0, [r0]
40009374:	e59f10a0 	ldr	r1, [pc, #160]	; 4000941c <_tx_thread_system_suspend+0x5e0>
40009378:	e5911000 	ldr	r1, [r1]
4000937c:	e1500001 	cmp	r0, r1
40009380:	0a00001d 	beq	400093fc <_tx_thread_system_suspend+0x5c0>
40009384:	e59f0090 	ldr	r0, [pc, #144]	; 4000941c <_tx_thread_system_suspend+0x5e0>
40009388:	e5904000 	ldr	r4, [r0]
4000938c:	e5940008 	ldr	r0, [r4, #8]
40009390:	e5941040 	ldr	r1, [r4, #64]	; 0x40
40009394:	e1500001 	cmp	r0, r1
40009398:	2a000001 	bcs	400093a4 <_tx_thread_system_suspend+0x568>
4000939c:	e5940008 	ldr	r0, [r4, #8]
400093a0:	e5840040 	str	r0, [r4, #64]	; 0x40
400093a4:	e594000c 	ldr	r0, [r4, #12]
400093a8:	e5900000 	ldr	r0, [r0]
400093ac:	e59f1050 	ldr	r1, [pc, #80]	; 40009404 <_tx_thread_system_suspend+0x5c8>
400093b0:	e1500001 	cmp	r0, r1
400093b4:	1a000007 	bne	400093d8 <_tx_thread_system_suspend+0x59c>
400093b8:	e5940010 	ldr	r0, [r4, #16]
400093bc:	e5900001 	ldr	r0, [r0, #1]
400093c0:	e1500001 	cmp	r0, r1
400093c4:	1a000003 	bne	400093d8 <_tx_thread_system_suspend+0x59c>
400093c8:	e5940040 	ldr	r0, [r4, #64]	; 0x40
400093cc:	e594100c 	ldr	r1, [r4, #12]
400093d0:	e1500001 	cmp	r0, r1
400093d4:	2a000001 	bcs	400093e0 <_tx_thread_system_suspend+0x5a4>
400093d8:	e1a00004 	mov	r0, r4
400093dc:	eb0017fe 	bl	4000f3dc <_tx_thread_stack_error_handler>
400093e0:	e59f002c 	ldr	r0, [pc, #44]	; 40009414 <_tx_thread_system_suspend+0x5d8>
400093e4:	e5900000 	ldr	r0, [r0]
400093e8:	e59f1018 	ldr	r1, [pc, #24]	; 40009408 <_tx_thread_system_suspend+0x5cc>
400093ec:	e5911000 	ldr	r1, [r1]
400093f0:	e1900001 	orrs	r0, r0, r1
400093f4:	1a000000 	bne	400093fc <_tx_thread_system_suspend+0x5c0>
400093f8:	eb0006a0 	bl	4000ae80 <_tx_thread_system_return>
400093fc:	eaffff79 	b	400091e8 <_tx_thread_system_suspend+0x3ac>
40009400:	40030e34 	.word	0x40030e34
40009404:	efefefef 	.word	0xefefefef
40009408:	40030e50 	.word	0x40030e50
4000940c:	40030ea0 	.word	0x40030ea0
40009410:	40030ea4 	.word	0x40030ea4
40009414:	40030e2c 	.word	0x40030e2c
40009418:	f0f0f0f0 	.word	0xf0f0f0f0
4000941c:	40030e38 	.word	0x40030e38
40009420:	40030e9c 	.word	0x40030e9c
40009424:	40030e98 	.word	0x40030e98
40009428:	40030e8c 	.word	0x40030e8c
4000942c:	40032874 	.word	0x40032874
40009430:	40030e48 	.word	0x40030e48
40009434:	40030e4c 	.word	0x40030e4c
40009438:	40030e44 	.word	0x40030e44
4000943c:	40032774 	.word	0x40032774

40009440 <_tx_time_get>:
40009440:	e92d4008 	push	{r3, lr}
40009444:	e10f1000 	mrs	r1, CPSR
40009448:	e3812080 	orr	r2, r1, #128	; 0x80
4000944c:	e121f002 	msr	CPSR_c, r2
40009450:	e59f00ec 	ldr	r0, [pc, #236]	; 40009544 <_tx_time_get+0x104>
40009454:	e5900000 	ldr	r0, [r0]
40009458:	e58d0000 	str	r0, [sp]
4000945c:	e59f30e4 	ldr	r3, [pc, #228]	; 40009548 <_tx_time_get+0x108>
40009460:	e5930000 	ldr	r0, [r3]
40009464:	e3500000 	cmp	r0, #0
40009468:	0a000032 	beq	40009538 <_tx_time_get+0xf8>
4000946c:	e59f30d8 	ldr	r3, [pc, #216]	; 4000954c <_tx_time_get+0x10c>
40009470:	e5933000 	ldr	r3, [r3]
40009474:	e2833001 	add	r3, r3, #1
40009478:	e59fc0cc 	ldr	ip, [pc, #204]	; 4000954c <_tx_time_get+0x10c>
4000947c:	e58c3000 	str	r3, [ip]
40009480:	e580300c 	str	r3, [r0, #12]
40009484:	e59f30c4 	ldr	r3, [pc, #196]	; 40009550 <_tx_time_get+0x110>
40009488:	e5933000 	ldr	r3, [r3]
4000948c:	e3530000 	cmp	r3, #0
40009490:	1a000006 	bne	400094b0 <_tx_time_get+0x70>
40009494:	e59f30b8 	ldr	r3, [pc, #184]	; 40009554 <_tx_time_get+0x114>
40009498:	e5933000 	ldr	r3, [r3]
4000949c:	e5803000 	str	r3, [r0]
400094a0:	e5903000 	ldr	r3, [r0]
400094a4:	e593302c 	ldr	r3, [r3, #44]	; 0x2c
400094a8:	e5803004 	str	r3, [r0, #4]
400094ac:	ea00000d 	b	400094e8 <_tx_time_get+0xa8>
400094b0:	e59f3098 	ldr	r3, [pc, #152]	; 40009550 <_tx_time_get+0x110>
400094b4:	e5933000 	ldr	r3, [r3]
400094b8:	e59fc098 	ldr	ip, [pc, #152]	; 40009558 <_tx_time_get+0x118>
400094bc:	e153000c 	cmp	r3, ip
400094c0:	2a000004 	bcs	400094d8 <_tx_time_get+0x98>
400094c4:	e3e03000 	mvn	r3, #0
400094c8:	e5803000 	str	r3, [r0]
400094cc:	e3a03000 	mov	r3, #0
400094d0:	e5803004 	str	r3, [r0, #4]
400094d4:	ea000003 	b	400094e8 <_tx_time_get+0xa8>
400094d8:	e59f3078 	ldr	r3, [pc, #120]	; 40009558 <_tx_time_get+0x118>
400094dc:	e5803000 	str	r3, [r0]
400094e0:	e3a03000 	mov	r3, #0
400094e4:	e5803004 	str	r3, [r0, #4]
400094e8:	e3a03078 	mov	r3, #120	; 0x78
400094ec:	e5803008 	str	r3, [r0, #8]
400094f0:	e59d3000 	ldr	r3, [sp]
400094f4:	e5803010 	str	r3, [r0, #16]
400094f8:	e580d014 	str	sp, [r0, #20]
400094fc:	e3a03000 	mov	r3, #0
40009500:	e5803018 	str	r3, [r0, #24]
40009504:	e580301c 	str	r3, [r0, #28]
40009508:	e2800020 	add	r0, r0, #32
4000950c:	e59f3048 	ldr	r3, [pc, #72]	; 4000955c <_tx_time_get+0x11c>
40009510:	e5933000 	ldr	r3, [r3]
40009514:	e1500003 	cmp	r0, r3
40009518:	3a000001 	bcc	40009524 <_tx_time_get+0xe4>
4000951c:	e59f303c 	ldr	r3, [pc, #60]	; 40009560 <_tx_time_get+0x120>
40009520:	e5930000 	ldr	r0, [r3]
40009524:	e59f301c 	ldr	r3, [pc, #28]	; 40009548 <_tx_time_get+0x108>
40009528:	e5830000 	str	r0, [r3]
4000952c:	e59f3030 	ldr	r3, [pc, #48]	; 40009564 <_tx_time_get+0x124>
40009530:	e5933000 	ldr	r3, [r3]
40009534:	e5830020 	str	r0, [r3, #32]
40009538:	e121f001 	msr	CPSR_c, r1
4000953c:	e59d0000 	ldr	r0, [sp]
40009540:	e8bd8008 	pop	{r3, pc}
40009544:	40030e5c 	.word	0x40030e5c
40009548:	40030ea0 	.word	0x40030ea0
4000954c:	40030ea4 	.word	0x40030ea4
40009550:	40030e2c 	.word	0x40030e2c
40009554:	40030e34 	.word	0x40030e34
40009558:	f0f0f0f0 	.word	0xf0f0f0f0
4000955c:	40030e9c 	.word	0x40030e9c
40009560:	40030e98 	.word	0x40030e98
40009564:	40030e8c 	.word	0x40030e8c

40009568 <_tx_timer_initialize>:
40009568:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000956c:	e24dd01c 	sub	sp, sp, #28
40009570:	e3a00000 	mov	r0, #0
40009574:	e59f10d8 	ldr	r1, [pc, #216]	; 40009654 <_tx_timer_initialize+0xec>
40009578:	e5810000 	str	r0, [r1]
4000957c:	e59f10d4 	ldr	r1, [pc, #212]	; 40009658 <_tx_timer_initialize+0xf0>
40009580:	e5810000 	str	r0, [r1]
40009584:	e59f10d0 	ldr	r1, [pc, #208]	; 4000965c <_tx_timer_initialize+0xf4>
40009588:	e5810000 	str	r0, [r1]
4000958c:	e59f10cc 	ldr	r1, [pc, #204]	; 40009660 <_tx_timer_initialize+0xf8>
40009590:	e5810000 	str	r0, [r1]
40009594:	e3a01080 	mov	r1, #128	; 0x80
40009598:	e59f00c4 	ldr	r0, [pc, #196]	; 40009664 <_tx_timer_initialize+0xfc>
4000959c:	eb0028e9 	bl	40013948 <__aeabi_memclr4>
400095a0:	e59f00bc 	ldr	r0, [pc, #188]	; 40009664 <_tx_timer_initialize+0xfc>
400095a4:	e59f10bc 	ldr	r1, [pc, #188]	; 40009668 <_tx_timer_initialize+0x100>
400095a8:	e5810000 	str	r0, [r1]
400095ac:	e59f10b8 	ldr	r1, [pc, #184]	; 4000966c <_tx_timer_initialize+0x104>
400095b0:	e5810000 	str	r0, [r1]
400095b4:	e280007c 	add	r0, r0, #124	; 0x7c
400095b8:	e59f10b0 	ldr	r1, [pc, #176]	; 40009670 <_tx_timer_initialize+0x108>
400095bc:	e5810000 	str	r0, [r1]
400095c0:	e2810000 	add	r0, r1, #0
400095c4:	e5900000 	ldr	r0, [r0]
400095c8:	e2800004 	add	r0, r0, #4
400095cc:	e5810000 	str	r0, [r1]
400095d0:	e59f009c 	ldr	r0, [pc, #156]	; 40009674 <_tx_timer_initialize+0x10c>
400095d4:	e59f109c 	ldr	r1, [pc, #156]	; 40009678 <_tx_timer_initialize+0x110>
400095d8:	e5810000 	str	r0, [r1]
400095dc:	e3a00b01 	mov	r0, #1024	; 0x400
400095e0:	e59f1094 	ldr	r1, [pc, #148]	; 4000967c <_tx_timer_initialize+0x114>
400095e4:	e5810000 	str	r0, [r1]
400095e8:	e3a00000 	mov	r0, #0
400095ec:	e59f108c 	ldr	r1, [pc, #140]	; 40009680 <_tx_timer_initialize+0x118>
400095f0:	e5810000 	str	r0, [r1]
400095f4:	e3a03000 	mov	r3, #0
400095f8:	e2810000 	add	r0, r1, #0
400095fc:	e5901000 	ldr	r1, [r0]
40009600:	e5900000 	ldr	r0, [r0]
40009604:	e28d2008 	add	r2, sp, #8
40009608:	e882000b 	stm	r2, {r0, r1, r3}
4000960c:	e59f0068 	ldr	r0, [pc, #104]	; 4000967c <_tx_timer_initialize+0x114>
40009610:	e58d3014 	str	r3, [sp, #20]
40009614:	e5903000 	ldr	r3, [r0]
40009618:	e59f0058 	ldr	r0, [pc, #88]	; 40009678 <_tx_timer_initialize+0x110>
4000961c:	e5902000 	ldr	r2, [r0]
40009620:	e1cd20f0 	strd	r2, [sp]
40009624:	e59f3058 	ldr	r3, [pc, #88]	; 40009684 <_tx_timer_initialize+0x11c>
40009628:	e59f2058 	ldr	r2, [pc, #88]	; 40009688 <_tx_timer_initialize+0x120>
4000962c:	e28f1058 	add	r1, pc, #88	; 0x58
40009630:	e59f0068 	ldr	r0, [pc, #104]	; 400096a0 <_tx_timer_initialize+0x138>
40009634:	eb00143b 	bl	4000e728 <_tx_thread_create>
40009638:	e3a00000 	mov	r0, #0
4000963c:	e59f1060 	ldr	r1, [pc, #96]	; 400096a4 <_tx_timer_initialize+0x13c>
40009640:	e5810000 	str	r0, [r1]
40009644:	e59f105c 	ldr	r1, [pc, #92]	; 400096a8 <_tx_timer_initialize+0x140>
40009648:	e5810000 	str	r0, [r1]
4000964c:	e28dd01c 	add	sp, sp, #28
40009650:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40009654:	40030e5c 	.word	0x40030e5c
40009658:	40030e60 	.word	0x40030e60
4000965c:	40030e64 	.word	0x40030e64
40009660:	40030e74 	.word	0x40030e74
40009664:	400328f4 	.word	0x400328f4
40009668:	40030e68 	.word	0x40030e68
4000966c:	40030e70 	.word	0x40030e70
40009670:	40030e6c 	.word	0x40030e6c
40009674:	40032a1c 	.word	0x40032a1c
40009678:	40030e80 	.word	0x40030e80
4000967c:	40030e84 	.word	0x40030e84
40009680:	40030e88 	.word	0x40030e88
40009684:	4154494d 	.word	0x4154494d
40009688:	40009798 	.word	0x40009798
4000968c:	74737953 	.word	0x74737953
40009690:	54206d65 	.word	0x54206d65
40009694:	72656d69 	.word	0x72656d69
40009698:	72685420 	.word	0x72685420
4000969c:	00646165 	.word	0x00646165
400096a0:	40032974 	.word	0x40032974
400096a4:	40030e78 	.word	0x40030e78
400096a8:	40030e7c 	.word	0x40030e7c

400096ac <_tx_timer_system_activate>:
400096ac:	e92d4010 	push	{r4, lr}
400096b0:	e1a01000 	mov	r1, r0
400096b4:	e10f2000 	mrs	r2, CPSR
400096b8:	e3823080 	orr	r3, r2, #128	; 0x80
400096bc:	e121f003 	msr	CPSR_c, r3
400096c0:	e5910000 	ldr	r0, [r1]
400096c4:	e3500000 	cmp	r0, #0
400096c8:	0a00002c 	beq	40009780 <_tx_timer_system_activate+0xd4>
400096cc:	e5910000 	ldr	r0, [r1]
400096d0:	e3700001 	cmn	r0, #1
400096d4:	0a000029 	beq	40009780 <_tx_timer_system_activate+0xd4>
400096d8:	e5910018 	ldr	r0, [r1, #24]
400096dc:	e3500000 	cmp	r0, #0
400096e0:	1a000026 	bne	40009780 <_tx_timer_system_activate+0xd4>
400096e4:	e5910000 	ldr	r0, [r1]
400096e8:	e3500020 	cmp	r0, #32
400096ec:	9a000001 	bls	400096f8 <_tx_timer_system_activate+0x4c>
400096f0:	e3a0e01f 	mov	lr, #31
400096f4:	ea000001 	b	40009700 <_tx_timer_system_activate+0x54>
400096f8:	e5910000 	ldr	r0, [r1]
400096fc:	e240e001 	sub	lr, r0, #1
40009700:	e59f0084 	ldr	r0, [pc, #132]	; 4000978c <_tx_timer_system_activate+0xe0>
40009704:	e5900000 	ldr	r0, [r0]
40009708:	e080c10e 	add	ip, r0, lr, lsl #2
4000970c:	e59f007c 	ldr	r0, [pc, #124]	; 40009790 <_tx_timer_system_activate+0xe4>
40009710:	e5900000 	ldr	r0, [r0]
40009714:	e15c0000 	cmp	ip, r0
40009718:	3a000006 	bcc	40009738 <_tx_timer_system_activate+0x8c>
4000971c:	e59f006c 	ldr	r0, [pc, #108]	; 40009790 <_tx_timer_system_activate+0xe4>
40009720:	e5900000 	ldr	r0, [r0]
40009724:	e04c0000 	sub	r0, ip, r0
40009728:	e1a00140 	asr	r0, r0, #2
4000972c:	e59f4060 	ldr	r4, [pc, #96]	; 40009794 <_tx_timer_system_activate+0xe8>
40009730:	e5944000 	ldr	r4, [r4]
40009734:	e084c100 	add	ip, r4, r0, lsl #2
40009738:	e59c0000 	ldr	r0, [ip]
4000973c:	e3500000 	cmp	r0, #0
40009740:	0a00000a 	beq	40009770 <_tx_timer_system_activate+0xc4>
40009744:	e59c0000 	ldr	r0, [ip]
40009748:	e5810010 	str	r0, [r1, #16]
4000974c:	e59c0000 	ldr	r0, [ip]
40009750:	e5900014 	ldr	r0, [r0, #20]
40009754:	e5810014 	str	r0, [r1, #20]
40009758:	e5910014 	ldr	r0, [r1, #20]
4000975c:	e5801010 	str	r1, [r0, #16]
40009760:	e59c0000 	ldr	r0, [ip]
40009764:	e5801014 	str	r1, [r0, #20]
40009768:	e581c018 	str	ip, [r1, #24]
4000976c:	ea000003 	b	40009780 <_tx_timer_system_activate+0xd4>
40009770:	e5811010 	str	r1, [r1, #16]
40009774:	e5811014 	str	r1, [r1, #20]
40009778:	e581c018 	str	ip, [r1, #24]
4000977c:	e58c1000 	str	r1, [ip]
40009780:	e121f002 	msr	CPSR_c, r2
40009784:	e3a00000 	mov	r0, #0
40009788:	e8bd8010 	pop	{r4, pc}
4000978c:	40030e70 	.word	0x40030e70
40009790:	40030e6c 	.word	0x40030e6c
40009794:	40030e68 	.word	0x40030e68

40009798 <_tx_timer_thread_entry>:
40009798:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000979c:	e1a04000 	mov	r4, r0
400097a0:	e3a09000 	mov	r9, #0
400097a4:	e59f0214 	ldr	r0, [pc, #532]	; 400099c0 <_tx_timer_thread_entry+0x228>
400097a8:	e1540000 	cmp	r4, r0
400097ac:	0a000000 	beq	400097b4 <_tx_timer_thread_entry+0x1c>
400097b0:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
400097b4:	e3a00000 	mov	r0, #0
400097b8:	e58d0000 	str	r0, [sp]
400097bc:	e1a00000 	nop			; (mov r0, r0)
400097c0:	e10f5000 	mrs	r5, CPSR
400097c4:	e3856080 	orr	r6, r5, #128	; 0x80
400097c8:	e121f006 	msr	CPSR_c, r6
400097cc:	e59f01f0 	ldr	r0, [pc, #496]	; 400099c4 <_tx_timer_thread_entry+0x22c>
400097d0:	e5900000 	ldr	r0, [r0]
400097d4:	e5900000 	ldr	r0, [r0]
400097d8:	e58d0004 	str	r0, [sp, #4]
400097dc:	e59d0004 	ldr	r0, [sp, #4]
400097e0:	e3500000 	cmp	r0, #0
400097e4:	0a000002 	beq	400097f4 <_tx_timer_thread_entry+0x5c>
400097e8:	e28d0004 	add	r0, sp, #4
400097ec:	e59d1004 	ldr	r1, [sp, #4]
400097f0:	e5810018 	str	r0, [r1, #24]
400097f4:	e3a00000 	mov	r0, #0
400097f8:	e59f11c4 	ldr	r1, [pc, #452]	; 400099c4 <_tx_timer_thread_entry+0x22c>
400097fc:	e5911000 	ldr	r1, [r1]
40009800:	e5810000 	str	r0, [r1]
40009804:	e59f01b8 	ldr	r0, [pc, #440]	; 400099c4 <_tx_timer_thread_entry+0x22c>
40009808:	e5900000 	ldr	r0, [r0]
4000980c:	e2800004 	add	r0, r0, #4
40009810:	e59f11ac 	ldr	r1, [pc, #428]	; 400099c4 <_tx_timer_thread_entry+0x22c>
40009814:	e5810000 	str	r0, [r1]
40009818:	e2810000 	add	r0, r1, #0
4000981c:	e5900000 	ldr	r0, [r0]
40009820:	e59f11a0 	ldr	r1, [pc, #416]	; 400099c8 <_tx_timer_thread_entry+0x230>
40009824:	e5911000 	ldr	r1, [r1]
40009828:	e1500001 	cmp	r0, r1
4000982c:	1a000003 	bne	40009840 <_tx_timer_thread_entry+0xa8>
40009830:	e59f0194 	ldr	r0, [pc, #404]	; 400099cc <_tx_timer_thread_entry+0x234>
40009834:	e5900000 	ldr	r0, [r0]
40009838:	e59f1184 	ldr	r1, [pc, #388]	; 400099c4 <_tx_timer_thread_entry+0x22c>
4000983c:	e5810000 	str	r0, [r1]
40009840:	e3a00000 	mov	r0, #0
40009844:	e59f1184 	ldr	r1, [pc, #388]	; 400099d0 <_tx_timer_thread_entry+0x238>
40009848:	e5810000 	str	r0, [r1]
4000984c:	e121f005 	msr	CPSR_c, r5
40009850:	e10f5000 	mrs	r5, CPSR
40009854:	e3856080 	orr	r6, r5, #128	; 0x80
40009858:	e121f006 	msr	CPSR_c, r6
4000985c:	ea000040 	b	40009964 <_tx_timer_thread_entry+0x1cc>
40009860:	e59d7004 	ldr	r7, [sp, #4]
40009864:	e59d0004 	ldr	r0, [sp, #4]
40009868:	e5900010 	ldr	r0, [r0, #16]
4000986c:	e1500007 	cmp	r0, r7
40009870:	1a000002 	bne	40009880 <_tx_timer_thread_entry+0xe8>
40009874:	e3a00000 	mov	r0, #0
40009878:	e58d0004 	str	r0, [sp, #4]
4000987c:	ea00000a 	b	400098ac <_tx_timer_thread_entry+0x114>
40009880:	e5970014 	ldr	r0, [r7, #20]
40009884:	e5971010 	ldr	r1, [r7, #16]
40009888:	e5810014 	str	r0, [r1, #20]
4000988c:	e5970010 	ldr	r0, [r7, #16]
40009890:	e5971014 	ldr	r1, [r7, #20]
40009894:	e5810010 	str	r0, [r1, #16]
40009898:	e28d0004 	add	r0, sp, #4
4000989c:	e5971010 	ldr	r1, [r7, #16]
400098a0:	e5810018 	str	r0, [r1, #24]
400098a4:	e5970010 	ldr	r0, [r7, #16]
400098a8:	e58d0004 	str	r0, [sp, #4]
400098ac:	e5970000 	ldr	r0, [r7]
400098b0:	e3500020 	cmp	r0, #32
400098b4:	9a000006 	bls	400098d4 <_tx_timer_thread_entry+0x13c>
400098b8:	e5970000 	ldr	r0, [r7]
400098bc:	e2400020 	sub	r0, r0, #32
400098c0:	e5870000 	str	r0, [r7]
400098c4:	e3a08000 	mov	r8, #0
400098c8:	e587d018 	str	sp, [r7, #24]
400098cc:	e5877010 	str	r7, [r7, #16]
400098d0:	ea00000b 	b	40009904 <_tx_timer_thread_entry+0x16c>
400098d4:	e5978008 	ldr	r8, [r7, #8]
400098d8:	e597900c 	ldr	r9, [r7, #12]
400098dc:	e5970004 	ldr	r0, [r7, #4]
400098e0:	e5870000 	str	r0, [r7]
400098e4:	e5970000 	ldr	r0, [r7]
400098e8:	e3500000 	cmp	r0, #0
400098ec:	0a000002 	beq	400098fc <_tx_timer_thread_entry+0x164>
400098f0:	e587d018 	str	sp, [r7, #24]
400098f4:	e5877010 	str	r7, [r7, #16]
400098f8:	ea000001 	b	40009904 <_tx_timer_thread_entry+0x16c>
400098fc:	e3a00000 	mov	r0, #0
40009900:	e5870018 	str	r0, [r7, #24]
40009904:	e121f005 	msr	CPSR_c, r5
40009908:	e3580000 	cmp	r8, #0
4000990c:	0a000001 	beq	40009918 <_tx_timer_thread_entry+0x180>
40009910:	e1a00009 	mov	r0, r9
40009914:	e12fff38 	blx	r8
40009918:	e10f5000 	mrs	r5, CPSR
4000991c:	e3856080 	orr	r6, r5, #128	; 0x80
40009920:	e121f006 	msr	CPSR_c, r6
40009924:	e1a0100d 	mov	r1, sp
40009928:	e5970018 	ldr	r0, [r7, #24]
4000992c:	e1500001 	cmp	r0, r1
40009930:	1a000007 	bne	40009954 <_tx_timer_thread_entry+0x1bc>
40009934:	e3a00000 	mov	r0, #0
40009938:	e5870018 	str	r0, [r7, #24]
4000993c:	e121f005 	msr	CPSR_c, r5
40009940:	e1a00007 	mov	r0, r7
40009944:	ebffff58 	bl	400096ac <_tx_timer_system_activate>
40009948:	e10f5000 	mrs	r5, CPSR
4000994c:	e3856080 	orr	r6, r5, #128	; 0x80
40009950:	e121f006 	msr	CPSR_c, r6
40009954:	e121f005 	msr	CPSR_c, r5
40009958:	e10f5000 	mrs	r5, CPSR
4000995c:	e3856080 	orr	r6, r5, #128	; 0x80
40009960:	e121f006 	msr	CPSR_c, r6
40009964:	e59d0004 	ldr	r0, [sp, #4]
40009968:	e3500000 	cmp	r0, #0
4000996c:	1affffbb 	bne	40009860 <_tx_timer_thread_entry+0xc8>
40009970:	e59f0058 	ldr	r0, [pc, #88]	; 400099d0 <_tx_timer_thread_entry+0x238>
40009974:	e5900000 	ldr	r0, [r0]
40009978:	e3500000 	cmp	r0, #0
4000997c:	1a00000d 	bne	400099b8 <_tx_timer_thread_entry+0x220>
40009980:	e59fa04c 	ldr	sl, [pc, #76]	; 400099d4 <_tx_timer_thread_entry+0x23c>
40009984:	e3a00003 	mov	r0, #3
40009988:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000998c:	e3a00001 	mov	r0, #1
40009990:	e58a0038 	str	r0, [sl, #56]	; 0x38
40009994:	e59f003c 	ldr	r0, [pc, #60]	; 400099d8 <_tx_timer_thread_entry+0x240>
40009998:	e5900000 	ldr	r0, [r0]
4000999c:	e2800001 	add	r0, r0, #1
400099a0:	e59f1030 	ldr	r1, [pc, #48]	; 400099d8 <_tx_timer_thread_entry+0x240>
400099a4:	e5810000 	str	r0, [r1]
400099a8:	e121f005 	msr	CPSR_c, r5
400099ac:	e1a0000a 	mov	r0, sl
400099b0:	ebfffd21 	bl	40008e3c <_tx_thread_system_suspend>
400099b4:	ea000000 	b	400099bc <_tx_timer_thread_entry+0x224>
400099b8:	e121f005 	msr	CPSR_c, r5
400099bc:	eaffff7f 	b	400097c0 <_tx_timer_thread_entry+0x28>
400099c0:	4154494d 	.word	0x4154494d
400099c4:	40030e70 	.word	0x40030e70
400099c8:	40030e6c 	.word	0x40030e6c
400099cc:	40030e68 	.word	0x40030e68
400099d0:	40030e74 	.word	0x40030e74
400099d4:	40032974 	.word	0x40032974
400099d8:	40030e50 	.word	0x40030e50

400099dc <_tx_trace_initialize>:
400099dc:	e3a00000 	mov	r0, #0
400099e0:	e59f102c 	ldr	r1, [pc, #44]	; 40009a14 <_tx_trace_initialize+0x38>
400099e4:	e5810000 	str	r0, [r1]
400099e8:	e59f1028 	ldr	r1, [pc, #40]	; 40009a18 <_tx_trace_initialize+0x3c>
400099ec:	e5810000 	str	r0, [r1]
400099f0:	e59f1024 	ldr	r1, [pc, #36]	; 40009a1c <_tx_trace_initialize+0x40>
400099f4:	e5810000 	str	r0, [r1]
400099f8:	e59f1020 	ldr	r1, [pc, #32]	; 40009a20 <_tx_trace_initialize+0x44>
400099fc:	e5810000 	str	r0, [r1]
40009a00:	e59f101c 	ldr	r1, [pc, #28]	; 40009a24 <_tx_trace_initialize+0x48>
40009a04:	e5810000 	str	r0, [r1]
40009a08:	e59f1018 	ldr	r1, [pc, #24]	; 40009a28 <_tx_trace_initialize+0x4c>
40009a0c:	e5810000 	str	r0, [r1]
40009a10:	e12fff1e 	bx	lr
40009a14:	40030e8c 	.word	0x40030e8c
40009a18:	40030e90 	.word	0x40030e90
40009a1c:	40030e94 	.word	0x40030e94
40009a20:	40030e98 	.word	0x40030e98
40009a24:	40030e9c 	.word	0x40030e9c
40009a28:	40030ea0 	.word	0x40030ea0

40009a2c <_txe_byte_allocate>:
40009a2c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40009a30:	e1a04000 	mov	r4, r0
40009a34:	e1a05001 	mov	r5, r1
40009a38:	e1a06002 	mov	r6, r2
40009a3c:	e1a07003 	mov	r7, r3
40009a40:	e3540000 	cmp	r4, #0
40009a44:	0a000003 	beq	40009a58 <_txe_byte_allocate+0x2c>
40009a48:	e5940000 	ldr	r0, [r4]
40009a4c:	e59f10d4 	ldr	r1, [pc, #212]	; 40009b28 <_txe_byte_allocate+0xfc>
40009a50:	e1500001 	cmp	r0, r1
40009a54:	0a000001 	beq	40009a60 <_txe_byte_allocate+0x34>
40009a58:	e3a00002 	mov	r0, #2
40009a5c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40009a60:	e3550000 	cmp	r5, #0
40009a64:	1a000001 	bne	40009a70 <_txe_byte_allocate+0x44>
40009a68:	e3a00003 	mov	r0, #3
40009a6c:	eafffffa 	b	40009a5c <_txe_byte_allocate+0x30>
40009a70:	e3560000 	cmp	r6, #0
40009a74:	0a000002 	beq	40009a84 <_txe_byte_allocate+0x58>
40009a78:	e594001c 	ldr	r0, [r4, #28]
40009a7c:	e1500006 	cmp	r0, r6
40009a80:	2a000001 	bcs	40009a8c <_txe_byte_allocate+0x60>
40009a84:	e3a00005 	mov	r0, #5
40009a88:	eafffff3 	b	40009a5c <_txe_byte_allocate+0x30>
40009a8c:	e59f0098 	ldr	r0, [pc, #152]	; 40009b2c <_txe_byte_allocate+0x100>
40009a90:	e5908000 	ldr	r8, [r0]
40009a94:	e3570000 	cmp	r7, #0
40009a98:	0a000008 	beq	40009ac0 <_txe_byte_allocate+0x94>
40009a9c:	e59f008c 	ldr	r0, [pc, #140]	; 40009b30 <_txe_byte_allocate+0x104>
40009aa0:	e5900000 	ldr	r0, [r0]
40009aa4:	e3500000 	cmp	r0, #0
40009aa8:	1a000002 	bne	40009ab8 <_txe_byte_allocate+0x8c>
40009aac:	e59f0080 	ldr	r0, [pc, #128]	; 40009b34 <_txe_byte_allocate+0x108>
40009ab0:	e1580000 	cmp	r8, r0
40009ab4:	1a000001 	bne	40009ac0 <_txe_byte_allocate+0x94>
40009ab8:	e3a00004 	mov	r0, #4
40009abc:	eaffffe6 	b	40009a5c <_txe_byte_allocate+0x30>
40009ac0:	e3580000 	cmp	r8, #0
40009ac4:	0a000008 	beq	40009aec <_txe_byte_allocate+0xc0>
40009ac8:	e59f0064 	ldr	r0, [pc, #100]	; 40009b34 <_txe_byte_allocate+0x108>
40009acc:	e1580000 	cmp	r8, r0
40009ad0:	0a000003 	beq	40009ae4 <_txe_byte_allocate+0xb8>
40009ad4:	e59f0054 	ldr	r0, [pc, #84]	; 40009b30 <_txe_byte_allocate+0x104>
40009ad8:	e5900000 	ldr	r0, [r0]
40009adc:	e3500000 	cmp	r0, #0
40009ae0:	0a000008 	beq	40009b08 <_txe_byte_allocate+0xdc>
40009ae4:	e3a00013 	mov	r0, #19
40009ae8:	eaffffdb 	b	40009a5c <_txe_byte_allocate+0x30>
40009aec:	e59f003c 	ldr	r0, [pc, #60]	; 40009b30 <_txe_byte_allocate+0x104>
40009af0:	e5900000 	ldr	r0, [r0]
40009af4:	e59f103c 	ldr	r1, [pc, #60]	; 40009b38 <_txe_byte_allocate+0x10c>
40009af8:	e1500001 	cmp	r0, r1
40009afc:	2a000001 	bcs	40009b08 <_txe_byte_allocate+0xdc>
40009b00:	e3a00013 	mov	r0, #19
40009b04:	eaffffd4 	b	40009a5c <_txe_byte_allocate+0x30>
40009b08:	e1a03007 	mov	r3, r7
40009b0c:	e1a02006 	mov	r2, r6
40009b10:	e1a01005 	mov	r1, r5
40009b14:	e1a00004 	mov	r0, r4
40009b18:	eb0005bf 	bl	4000b21c <_tx_byte_allocate>
40009b1c:	e1a09000 	mov	r9, r0
40009b20:	e1a00009 	mov	r0, r9
40009b24:	eaffffcc 	b	40009a5c <_txe_byte_allocate+0x30>
40009b28:	42595445 	.word	0x42595445
40009b2c:	40030e34 	.word	0x40030e34
40009b30:	40030e2c 	.word	0x40030e2c
40009b34:	40032974 	.word	0x40032974
40009b38:	f0f0f0f0 	.word	0xf0f0f0f0

40009b3c <_txe_byte_pool_create>:
40009b3c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009b40:	e1a04000 	mov	r4, r0
40009b44:	e1a05001 	mov	r5, r1
40009b48:	e1a06002 	mov	r6, r2
40009b4c:	e1a07003 	mov	r7, r3
40009b50:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
40009b54:	e3540000 	cmp	r4, #0
40009b58:	0a000001 	beq	40009b64 <_txe_byte_pool_create+0x28>
40009b5c:	e3580034 	cmp	r8, #52	; 0x34
40009b60:	0a000001 	beq	40009b6c <_txe_byte_pool_create+0x30>
40009b64:	e3a00002 	mov	r0, #2
40009b68:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009b6c:	e10f9000 	mrs	r9, CPSR
40009b70:	e389a080 	orr	sl, r9, #128	; 0x80
40009b74:	e121f00a 	msr	CPSR_c, sl
40009b78:	e59f0130 	ldr	r0, [pc, #304]	; 40009cb0 <_txe_byte_pool_create+0x174>
40009b7c:	e5900000 	ldr	r0, [r0]
40009b80:	e2800001 	add	r0, r0, #1
40009b84:	e59f1124 	ldr	r1, [pc, #292]	; 40009cb0 <_txe_byte_pool_create+0x174>
40009b88:	e5810000 	str	r0, [r1]
40009b8c:	e121f009 	msr	CPSR_c, r9
40009b90:	e59f011c 	ldr	r0, [pc, #284]	; 40009cb4 <_txe_byte_pool_create+0x178>
40009b94:	e5900000 	ldr	r0, [r0]
40009b98:	e58d0004 	str	r0, [sp, #4]
40009b9c:	e3a0b000 	mov	fp, #0
40009ba0:	ea000007 	b	40009bc4 <_txe_byte_pool_create+0x88>
40009ba4:	e59d0004 	ldr	r0, [sp, #4]
40009ba8:	e1540000 	cmp	r4, r0
40009bac:	1a000000 	bne	40009bb4 <_txe_byte_pool_create+0x78>
40009bb0:	ea000007 	b	40009bd4 <_txe_byte_pool_create+0x98>
40009bb4:	e59d0004 	ldr	r0, [sp, #4]
40009bb8:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40009bbc:	e58d0004 	str	r0, [sp, #4]
40009bc0:	e28bb001 	add	fp, fp, #1
40009bc4:	e59f00ec 	ldr	r0, [pc, #236]	; 40009cb8 <_txe_byte_pool_create+0x17c>
40009bc8:	e5900000 	ldr	r0, [r0]
40009bcc:	e15b0000 	cmp	fp, r0
40009bd0:	3afffff3 	bcc	40009ba4 <_txe_byte_pool_create+0x68>
40009bd4:	e1a00000 	nop			; (mov r0, r0)
40009bd8:	e10f9000 	mrs	r9, CPSR
40009bdc:	e389a080 	orr	sl, r9, #128	; 0x80
40009be0:	e121f00a 	msr	CPSR_c, sl
40009be4:	e59f00c4 	ldr	r0, [pc, #196]	; 40009cb0 <_txe_byte_pool_create+0x174>
40009be8:	e5900000 	ldr	r0, [r0]
40009bec:	e2400001 	sub	r0, r0, #1
40009bf0:	e59f10b8 	ldr	r1, [pc, #184]	; 40009cb0 <_txe_byte_pool_create+0x174>
40009bf4:	e5810000 	str	r0, [r1]
40009bf8:	e121f009 	msr	CPSR_c, r9
40009bfc:	eb001609 	bl	4000f428 <_tx_thread_system_preempt_check>
40009c00:	e59d0004 	ldr	r0, [sp, #4]
40009c04:	e1540000 	cmp	r4, r0
40009c08:	1a000001 	bne	40009c14 <_txe_byte_pool_create+0xd8>
40009c0c:	e3a00002 	mov	r0, #2
40009c10:	eaffffd4 	b	40009b68 <_txe_byte_pool_create+0x2c>
40009c14:	e3560000 	cmp	r6, #0
40009c18:	1a000001 	bne	40009c24 <_txe_byte_pool_create+0xe8>
40009c1c:	e3a00003 	mov	r0, #3
40009c20:	eaffffd0 	b	40009b68 <_txe_byte_pool_create+0x2c>
40009c24:	e3570064 	cmp	r7, #100	; 0x64
40009c28:	2a000001 	bcs	40009c34 <_txe_byte_pool_create+0xf8>
40009c2c:	e3a00005 	mov	r0, #5
40009c30:	eaffffcc 	b	40009b68 <_txe_byte_pool_create+0x2c>
40009c34:	e59f0080 	ldr	r0, [pc, #128]	; 40009cbc <_txe_byte_pool_create+0x180>
40009c38:	e5900000 	ldr	r0, [r0]
40009c3c:	e58d0000 	str	r0, [sp]
40009c40:	e59d0000 	ldr	r0, [sp]
40009c44:	e3500000 	cmp	r0, #0
40009c48:	0a000009 	beq	40009c74 <_txe_byte_pool_create+0x138>
40009c4c:	e59f106c 	ldr	r1, [pc, #108]	; 40009cc0 <_txe_byte_pool_create+0x184>
40009c50:	e59d0000 	ldr	r0, [sp]
40009c54:	e1500001 	cmp	r0, r1
40009c58:	0a000003 	beq	40009c6c <_txe_byte_pool_create+0x130>
40009c5c:	e59f0060 	ldr	r0, [pc, #96]	; 40009cc4 <_txe_byte_pool_create+0x188>
40009c60:	e5900000 	ldr	r0, [r0]
40009c64:	e3500000 	cmp	r0, #0
40009c68:	0a000008 	beq	40009c90 <_txe_byte_pool_create+0x154>
40009c6c:	e3a00013 	mov	r0, #19
40009c70:	eaffffbc 	b	40009b68 <_txe_byte_pool_create+0x2c>
40009c74:	e59f0048 	ldr	r0, [pc, #72]	; 40009cc4 <_txe_byte_pool_create+0x188>
40009c78:	e5900000 	ldr	r0, [r0]
40009c7c:	e59f1044 	ldr	r1, [pc, #68]	; 40009cc8 <_txe_byte_pool_create+0x18c>
40009c80:	e1500001 	cmp	r0, r1
40009c84:	2a000001 	bcs	40009c90 <_txe_byte_pool_create+0x154>
40009c88:	e3a00013 	mov	r0, #19
40009c8c:	eaffffb5 	b	40009b68 <_txe_byte_pool_create+0x2c>
40009c90:	e1a03007 	mov	r3, r7
40009c94:	e1a02006 	mov	r2, r6
40009c98:	e1a01005 	mov	r1, r5
40009c9c:	e1a00004 	mov	r0, r4
40009ca0:	eb000643 	bl	4000b5b4 <_tx_byte_pool_create>
40009ca4:	e58d0008 	str	r0, [sp, #8]
40009ca8:	e59d0008 	ldr	r0, [sp, #8]
40009cac:	eaffffad 	b	40009b68 <_txe_byte_pool_create+0x2c>
40009cb0:	40030e50 	.word	0x40030e50
40009cb4:	40030ed0 	.word	0x40030ed0
40009cb8:	40030ed4 	.word	0x40030ed4
40009cbc:	40030e34 	.word	0x40030e34
40009cc0:	40032974 	.word	0x40032974
40009cc4:	40030e2c 	.word	0x40030e2c
40009cc8:	f0f0f0f0 	.word	0xf0f0f0f0

40009ccc <_txe_byte_pool_delete>:
40009ccc:	e92d4070 	push	{r4, r5, r6, lr}
40009cd0:	e1a04000 	mov	r4, r0
40009cd4:	e3540000 	cmp	r4, #0
40009cd8:	0a000003 	beq	40009cec <_txe_byte_pool_delete+0x20>
40009cdc:	e5940000 	ldr	r0, [r4]
40009ce0:	e59f1054 	ldr	r1, [pc, #84]	; 40009d3c <_txe_byte_pool_delete+0x70>
40009ce4:	e1500001 	cmp	r0, r1
40009ce8:	0a000001 	beq	40009cf4 <_txe_byte_pool_delete+0x28>
40009cec:	e3a00002 	mov	r0, #2
40009cf0:	e8bd8070 	pop	{r4, r5, r6, pc}
40009cf4:	e59f0044 	ldr	r0, [pc, #68]	; 40009d40 <_txe_byte_pool_delete+0x74>
40009cf8:	e5905000 	ldr	r5, [r0]
40009cfc:	e3550000 	cmp	r5, #0
40009d00:	0a000006 	beq	40009d20 <_txe_byte_pool_delete+0x54>
40009d04:	e59f0038 	ldr	r0, [pc, #56]	; 40009d44 <_txe_byte_pool_delete+0x78>
40009d08:	e5900000 	ldr	r0, [r0]
40009d0c:	e3500000 	cmp	r0, #0
40009d10:	1a000002 	bne	40009d20 <_txe_byte_pool_delete+0x54>
40009d14:	e59f002c 	ldr	r0, [pc, #44]	; 40009d48 <_txe_byte_pool_delete+0x7c>
40009d18:	e1550000 	cmp	r5, r0
40009d1c:	1a000001 	bne	40009d28 <_txe_byte_pool_delete+0x5c>
40009d20:	e3a00013 	mov	r0, #19
40009d24:	eafffff1 	b	40009cf0 <_txe_byte_pool_delete+0x24>
40009d28:	e1a00004 	mov	r0, r4
40009d2c:	eb0006b6 	bl	4000b80c <_tx_byte_pool_delete>
40009d30:	e1a06000 	mov	r6, r0
40009d34:	e1a00006 	mov	r0, r6
40009d38:	eaffffec 	b	40009cf0 <_txe_byte_pool_delete+0x24>
40009d3c:	42595445 	.word	0x42595445
40009d40:	40030e34 	.word	0x40030e34
40009d44:	40030e2c 	.word	0x40030e2c
40009d48:	40032974 	.word	0x40032974

40009d4c <_txe_byte_release>:
40009d4c:	e92d4070 	push	{r4, r5, r6, lr}
40009d50:	e1a04000 	mov	r4, r0
40009d54:	e3540000 	cmp	r4, #0
40009d58:	1a000001 	bne	40009d64 <_txe_byte_release+0x18>
40009d5c:	e3a00003 	mov	r0, #3
40009d60:	e8bd8070 	pop	{r4, r5, r6, pc}
40009d64:	e59f005c 	ldr	r0, [pc, #92]	; 40009dc8 <_txe_byte_release+0x7c>
40009d68:	e5905000 	ldr	r5, [r0]
40009d6c:	e3550000 	cmp	r5, #0
40009d70:	0a000008 	beq	40009d98 <_txe_byte_release+0x4c>
40009d74:	e59f0050 	ldr	r0, [pc, #80]	; 40009dcc <_txe_byte_release+0x80>
40009d78:	e1550000 	cmp	r5, r0
40009d7c:	0a000003 	beq	40009d90 <_txe_byte_release+0x44>
40009d80:	e59f0048 	ldr	r0, [pc, #72]	; 40009dd0 <_txe_byte_release+0x84>
40009d84:	e5900000 	ldr	r0, [r0]
40009d88:	e3500000 	cmp	r0, #0
40009d8c:	0a000008 	beq	40009db4 <_txe_byte_release+0x68>
40009d90:	e3a00013 	mov	r0, #19
40009d94:	eafffff1 	b	40009d60 <_txe_byte_release+0x14>
40009d98:	e59f0030 	ldr	r0, [pc, #48]	; 40009dd0 <_txe_byte_release+0x84>
40009d9c:	e5900000 	ldr	r0, [r0]
40009da0:	e59f102c 	ldr	r1, [pc, #44]	; 40009dd4 <_txe_byte_release+0x88>
40009da4:	e1500001 	cmp	r0, r1
40009da8:	2a000001 	bcs	40009db4 <_txe_byte_release+0x68>
40009dac:	e3a00013 	mov	r0, #19
40009db0:	eaffffea 	b	40009d60 <_txe_byte_release+0x14>
40009db4:	e1a00004 	mov	r0, r4
40009db8:	eb000794 	bl	4000bc10 <_tx_byte_release>
40009dbc:	e1a06000 	mov	r6, r0
40009dc0:	e1a00006 	mov	r0, r6
40009dc4:	eaffffe5 	b	40009d60 <_txe_byte_release+0x14>
40009dc8:	40030e34 	.word	0x40030e34
40009dcc:	40032974 	.word	0x40032974
40009dd0:	40030e2c 	.word	0x40030e2c
40009dd4:	f0f0f0f0 	.word	0xf0f0f0f0

40009dd8 <_txe_event_flags_create>:
40009dd8:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40009ddc:	e1a04000 	mov	r4, r0
40009de0:	e1a05001 	mov	r5, r1
40009de4:	e1a06002 	mov	r6, r2
40009de8:	e3540000 	cmp	r4, #0
40009dec:	0a000001 	beq	40009df8 <_txe_event_flags_create+0x20>
40009df0:	e3560028 	cmp	r6, #40	; 0x28
40009df4:	0a000001 	beq	40009e00 <_txe_event_flags_create+0x28>
40009df8:	e3a00006 	mov	r0, #6
40009dfc:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40009e00:	e10f7000 	mrs	r7, CPSR
40009e04:	e3878080 	orr	r8, r7, #128	; 0x80
40009e08:	e121f008 	msr	CPSR_c, r8
40009e0c:	e59f00e8 	ldr	r0, [pc, #232]	; 40009efc <_txe_event_flags_create+0x124>
40009e10:	e5900000 	ldr	r0, [r0]
40009e14:	e2800001 	add	r0, r0, #1
40009e18:	e59f10dc 	ldr	r1, [pc, #220]	; 40009efc <_txe_event_flags_create+0x124>
40009e1c:	e5810000 	str	r0, [r1]
40009e20:	e121f007 	msr	CPSR_c, r7
40009e24:	e59f00d4 	ldr	r0, [pc, #212]	; 40009f00 <_txe_event_flags_create+0x128>
40009e28:	e590a000 	ldr	sl, [r0]
40009e2c:	e3a09000 	mov	r9, #0
40009e30:	ea000004 	b	40009e48 <_txe_event_flags_create+0x70>
40009e34:	e154000a 	cmp	r4, sl
40009e38:	1a000000 	bne	40009e40 <_txe_event_flags_create+0x68>
40009e3c:	ea000005 	b	40009e58 <_txe_event_flags_create+0x80>
40009e40:	e59aa018 	ldr	sl, [sl, #24]
40009e44:	e2899001 	add	r9, r9, #1
40009e48:	e59f00b4 	ldr	r0, [pc, #180]	; 40009f04 <_txe_event_flags_create+0x12c>
40009e4c:	e5900000 	ldr	r0, [r0]
40009e50:	e1590000 	cmp	r9, r0
40009e54:	3afffff6 	bcc	40009e34 <_txe_event_flags_create+0x5c>
40009e58:	e1a00000 	nop			; (mov r0, r0)
40009e5c:	e10f7000 	mrs	r7, CPSR
40009e60:	e3878080 	orr	r8, r7, #128	; 0x80
40009e64:	e121f008 	msr	CPSR_c, r8
40009e68:	e59f008c 	ldr	r0, [pc, #140]	; 40009efc <_txe_event_flags_create+0x124>
40009e6c:	e5900000 	ldr	r0, [r0]
40009e70:	e2400001 	sub	r0, r0, #1
40009e74:	e59f1080 	ldr	r1, [pc, #128]	; 40009efc <_txe_event_flags_create+0x124>
40009e78:	e5810000 	str	r0, [r1]
40009e7c:	e121f007 	msr	CPSR_c, r7
40009e80:	eb001568 	bl	4000f428 <_tx_thread_system_preempt_check>
40009e84:	e154000a 	cmp	r4, sl
40009e88:	1a000001 	bne	40009e94 <_txe_event_flags_create+0xbc>
40009e8c:	e3a00006 	mov	r0, #6
40009e90:	eaffffd9 	b	40009dfc <_txe_event_flags_create+0x24>
40009e94:	e59f006c 	ldr	r0, [pc, #108]	; 40009f08 <_txe_event_flags_create+0x130>
40009e98:	e590b000 	ldr	fp, [r0]
40009e9c:	e35b0000 	cmp	fp, #0
40009ea0:	0a000008 	beq	40009ec8 <_txe_event_flags_create+0xf0>
40009ea4:	e59f0060 	ldr	r0, [pc, #96]	; 40009f0c <_txe_event_flags_create+0x134>
40009ea8:	e15b0000 	cmp	fp, r0
40009eac:	0a000003 	beq	40009ec0 <_txe_event_flags_create+0xe8>
40009eb0:	e59f0058 	ldr	r0, [pc, #88]	; 40009f10 <_txe_event_flags_create+0x138>
40009eb4:	e5900000 	ldr	r0, [r0]
40009eb8:	e3500000 	cmp	r0, #0
40009ebc:	0a000008 	beq	40009ee4 <_txe_event_flags_create+0x10c>
40009ec0:	e3a00013 	mov	r0, #19
40009ec4:	eaffffcc 	b	40009dfc <_txe_event_flags_create+0x24>
40009ec8:	e59f0040 	ldr	r0, [pc, #64]	; 40009f10 <_txe_event_flags_create+0x138>
40009ecc:	e5900000 	ldr	r0, [r0]
40009ed0:	e59f103c 	ldr	r1, [pc, #60]	; 40009f14 <_txe_event_flags_create+0x13c>
40009ed4:	e1500001 	cmp	r0, r1
40009ed8:	2a000001 	bcs	40009ee4 <_txe_event_flags_create+0x10c>
40009edc:	e3a00013 	mov	r0, #19
40009ee0:	eaffffc5 	b	40009dfc <_txe_event_flags_create+0x24>
40009ee4:	e1a01005 	mov	r1, r5
40009ee8:	e1a00004 	mov	r0, r4
40009eec:	eb0007f9 	bl	4000bed8 <_tx_event_flags_create>
40009ef0:	e58d0000 	str	r0, [sp]
40009ef4:	e59d0000 	ldr	r0, [sp]
40009ef8:	eaffffbf 	b	40009dfc <_txe_event_flags_create+0x24>
40009efc:	40030e50 	.word	0x40030e50
40009f00:	40030eb8 	.word	0x40030eb8
40009f04:	40030ebc 	.word	0x40030ebc
40009f08:	40030e34 	.word	0x40030e34
40009f0c:	40032974 	.word	0x40032974
40009f10:	40030e2c 	.word	0x40030e2c
40009f14:	f0f0f0f0 	.word	0xf0f0f0f0

40009f18 <_txe_event_flags_delete>:
40009f18:	e92d4070 	push	{r4, r5, r6, lr}
40009f1c:	e1a04000 	mov	r4, r0
40009f20:	e3540000 	cmp	r4, #0
40009f24:	0a000003 	beq	40009f38 <_txe_event_flags_delete+0x20>
40009f28:	e5940000 	ldr	r0, [r4]
40009f2c:	e59f1054 	ldr	r1, [pc, #84]	; 40009f88 <_txe_event_flags_delete+0x70>
40009f30:	e1500001 	cmp	r0, r1
40009f34:	0a000001 	beq	40009f40 <_txe_event_flags_delete+0x28>
40009f38:	e3a00006 	mov	r0, #6
40009f3c:	e8bd8070 	pop	{r4, r5, r6, pc}
40009f40:	e59f0044 	ldr	r0, [pc, #68]	; 40009f8c <_txe_event_flags_delete+0x74>
40009f44:	e5905000 	ldr	r5, [r0]
40009f48:	e3550000 	cmp	r5, #0
40009f4c:	0a000006 	beq	40009f6c <_txe_event_flags_delete+0x54>
40009f50:	e59f0038 	ldr	r0, [pc, #56]	; 40009f90 <_txe_event_flags_delete+0x78>
40009f54:	e5900000 	ldr	r0, [r0]
40009f58:	e3500000 	cmp	r0, #0
40009f5c:	1a000002 	bne	40009f6c <_txe_event_flags_delete+0x54>
40009f60:	e59f002c 	ldr	r0, [pc, #44]	; 40009f94 <_txe_event_flags_delete+0x7c>
40009f64:	e1550000 	cmp	r5, r0
40009f68:	1a000001 	bne	40009f74 <_txe_event_flags_delete+0x5c>
40009f6c:	e3a00013 	mov	r0, #19
40009f70:	eafffff1 	b	40009f3c <_txe_event_flags_delete+0x24>
40009f74:	e1a00004 	mov	r0, r4
40009f78:	eb000849 	bl	4000c0a4 <_tx_event_flags_delete>
40009f7c:	e1a06000 	mov	r6, r0
40009f80:	e1a00006 	mov	r0, r6
40009f84:	eaffffec 	b	40009f3c <_txe_event_flags_delete+0x24>
40009f88:	4456444e 	.word	0x4456444e
40009f8c:	40030e34 	.word	0x40030e34
40009f90:	40030e2c 	.word	0x40030e2c
40009f94:	40032974 	.word	0x40032974

40009f98 <_txe_event_flags_get>:
40009f98:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
40009f9c:	e1a04000 	mov	r4, r0
40009fa0:	e1a05001 	mov	r5, r1
40009fa4:	e1a06002 	mov	r6, r2
40009fa8:	e1a08003 	mov	r8, r3
40009fac:	e59d9020 	ldr	r9, [sp, #32]
40009fb0:	e3540000 	cmp	r4, #0
40009fb4:	0a000003 	beq	40009fc8 <_txe_event_flags_get+0x30>
40009fb8:	e5940000 	ldr	r0, [r4]
40009fbc:	e59f1084 	ldr	r1, [pc, #132]	; 4000a048 <_txe_event_flags_get+0xb0>
40009fc0:	e1500001 	cmp	r0, r1
40009fc4:	0a000001 	beq	40009fd0 <_txe_event_flags_get+0x38>
40009fc8:	e3a00006 	mov	r0, #6
40009fcc:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40009fd0:	e3580000 	cmp	r8, #0
40009fd4:	1a000001 	bne	40009fe0 <_txe_event_flags_get+0x48>
40009fd8:	e3a00003 	mov	r0, #3
40009fdc:	eafffffa 	b	40009fcc <_txe_event_flags_get+0x34>
40009fe0:	e3590000 	cmp	r9, #0
40009fe4:	0a00000a 	beq	4000a014 <_txe_event_flags_get+0x7c>
40009fe8:	e59f005c 	ldr	r0, [pc, #92]	; 4000a04c <_txe_event_flags_get+0xb4>
40009fec:	e5900000 	ldr	r0, [r0]
40009ff0:	e3500000 	cmp	r0, #0
40009ff4:	1a000004 	bne	4000a00c <_txe_event_flags_get+0x74>
40009ff8:	e59f0050 	ldr	r0, [pc, #80]	; 4000a050 <_txe_event_flags_get+0xb8>
40009ffc:	e5900000 	ldr	r0, [r0]
4000a000:	e59f104c 	ldr	r1, [pc, #76]	; 4000a054 <_txe_event_flags_get+0xbc>
4000a004:	e1500001 	cmp	r0, r1
4000a008:	1a000001 	bne	4000a014 <_txe_event_flags_get+0x7c>
4000a00c:	e3a00004 	mov	r0, #4
4000a010:	eaffffed 	b	40009fcc <_txe_event_flags_get+0x34>
4000a014:	e3560003 	cmp	r6, #3
4000a018:	9a000001 	bls	4000a024 <_txe_event_flags_get+0x8c>
4000a01c:	e3a00008 	mov	r0, #8
4000a020:	eaffffe9 	b	40009fcc <_txe_event_flags_get+0x34>
4000a024:	e1a03008 	mov	r3, r8
4000a028:	e1a02006 	mov	r2, r6
4000a02c:	e1a01005 	mov	r1, r5
4000a030:	e1a00004 	mov	r0, r4
4000a034:	e58d9000 	str	r9, [sp]
4000a038:	eb0008ac 	bl	4000c2f0 <_tx_event_flags_get>
4000a03c:	e1a07000 	mov	r7, r0
4000a040:	e1a00007 	mov	r0, r7
4000a044:	eaffffe0 	b	40009fcc <_txe_event_flags_get+0x34>
4000a048:	4456444e 	.word	0x4456444e
4000a04c:	40030e2c 	.word	0x40030e2c
4000a050:	40030e34 	.word	0x40030e34
4000a054:	40032974 	.word	0x40032974

4000a058 <_txe_event_flags_set>:
4000a058:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a05c:	e1a04000 	mov	r4, r0
4000a060:	e1a05001 	mov	r5, r1
4000a064:	e1a06002 	mov	r6, r2
4000a068:	e3540000 	cmp	r4, #0
4000a06c:	0a000003 	beq	4000a080 <_txe_event_flags_set+0x28>
4000a070:	e5940000 	ldr	r0, [r4]
4000a074:	e59f1040 	ldr	r1, [pc, #64]	; 4000a0bc <_txe_event_flags_set+0x64>
4000a078:	e1500001 	cmp	r0, r1
4000a07c:	0a000001 	beq	4000a088 <_txe_event_flags_set+0x30>
4000a080:	e3a00006 	mov	r0, #6
4000a084:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a088:	e3560002 	cmp	r6, #2
4000a08c:	0a000003 	beq	4000a0a0 <_txe_event_flags_set+0x48>
4000a090:	e3560000 	cmp	r6, #0
4000a094:	0a000001 	beq	4000a0a0 <_txe_event_flags_set+0x48>
4000a098:	e3a00008 	mov	r0, #8
4000a09c:	eafffff8 	b	4000a084 <_txe_event_flags_set+0x2c>
4000a0a0:	e1a02006 	mov	r2, r6
4000a0a4:	e1a01005 	mov	r1, r5
4000a0a8:	e1a00004 	mov	r0, r4
4000a0ac:	eb000943 	bl	4000c5c0 <_tx_event_flags_set>
4000a0b0:	e1a07000 	mov	r7, r0
4000a0b4:	e1a00007 	mov	r0, r7
4000a0b8:	eafffff1 	b	4000a084 <_txe_event_flags_set+0x2c>
4000a0bc:	4456444e 	.word	0x4456444e

4000a0c0 <_txe_mutex_create>:
4000a0c0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000a0c4:	e1a04000 	mov	r4, r0
4000a0c8:	e1a05001 	mov	r5, r1
4000a0cc:	e1a06002 	mov	r6, r2
4000a0d0:	e1a07003 	mov	r7, r3
4000a0d4:	e3540000 	cmp	r4, #0
4000a0d8:	0a000001 	beq	4000a0e4 <_txe_mutex_create+0x24>
4000a0dc:	e3570038 	cmp	r7, #56	; 0x38
4000a0e0:	0a000001 	beq	4000a0ec <_txe_mutex_create+0x2c>
4000a0e4:	e3a0001c 	mov	r0, #28
4000a0e8:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000a0ec:	e10f0000 	mrs	r0, CPSR
4000a0f0:	e58d0004 	str	r0, [sp, #4]
4000a0f4:	e59d0004 	ldr	r0, [sp, #4]
4000a0f8:	e3808080 	orr	r8, r0, #128	; 0x80
4000a0fc:	e121f008 	msr	CPSR_c, r8
4000a100:	e59f0114 	ldr	r0, [pc, #276]	; 4000a21c <_txe_mutex_create+0x15c>
4000a104:	e5900000 	ldr	r0, [r0]
4000a108:	e2800001 	add	r0, r0, #1
4000a10c:	e59f1108 	ldr	r1, [pc, #264]	; 4000a21c <_txe_mutex_create+0x15c>
4000a110:	e5810000 	str	r0, [r1]
4000a114:	e59d0004 	ldr	r0, [sp, #4]
4000a118:	e121f000 	msr	CPSR_c, r0
4000a11c:	e59f00fc 	ldr	r0, [pc, #252]	; 4000a220 <_txe_mutex_create+0x160>
4000a120:	e590a000 	ldr	sl, [r0]
4000a124:	e3a09000 	mov	r9, #0
4000a128:	ea000004 	b	4000a140 <_txe_mutex_create+0x80>
4000a12c:	e154000a 	cmp	r4, sl
4000a130:	1a000000 	bne	4000a138 <_txe_mutex_create+0x78>
4000a134:	ea000005 	b	4000a150 <_txe_mutex_create+0x90>
4000a138:	e59aa024 	ldr	sl, [sl, #36]	; 0x24
4000a13c:	e2899001 	add	r9, r9, #1
4000a140:	e59f00dc 	ldr	r0, [pc, #220]	; 4000a224 <_txe_mutex_create+0x164>
4000a144:	e5900000 	ldr	r0, [r0]
4000a148:	e1590000 	cmp	r9, r0
4000a14c:	3afffff6 	bcc	4000a12c <_txe_mutex_create+0x6c>
4000a150:	e1a00000 	nop			; (mov r0, r0)
4000a154:	e10f0000 	mrs	r0, CPSR
4000a158:	e58d0004 	str	r0, [sp, #4]
4000a15c:	e59d0004 	ldr	r0, [sp, #4]
4000a160:	e3808080 	orr	r8, r0, #128	; 0x80
4000a164:	e121f008 	msr	CPSR_c, r8
4000a168:	e59f00ac 	ldr	r0, [pc, #172]	; 4000a21c <_txe_mutex_create+0x15c>
4000a16c:	e5900000 	ldr	r0, [r0]
4000a170:	e2400001 	sub	r0, r0, #1
4000a174:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a21c <_txe_mutex_create+0x15c>
4000a178:	e5810000 	str	r0, [r1]
4000a17c:	e59d0004 	ldr	r0, [sp, #4]
4000a180:	e121f000 	msr	CPSR_c, r0
4000a184:	eb0014a7 	bl	4000f428 <_tx_thread_system_preempt_check>
4000a188:	e154000a 	cmp	r4, sl
4000a18c:	1a000001 	bne	4000a198 <_txe_mutex_create+0xd8>
4000a190:	e3a0001c 	mov	r0, #28
4000a194:	eaffffd3 	b	4000a0e8 <_txe_mutex_create+0x28>
4000a198:	e3560001 	cmp	r6, #1
4000a19c:	0a000003 	beq	4000a1b0 <_txe_mutex_create+0xf0>
4000a1a0:	e3560000 	cmp	r6, #0
4000a1a4:	0a000001 	beq	4000a1b0 <_txe_mutex_create+0xf0>
4000a1a8:	e3a0001f 	mov	r0, #31
4000a1ac:	eaffffcd 	b	4000a0e8 <_txe_mutex_create+0x28>
4000a1b0:	e59f0070 	ldr	r0, [pc, #112]	; 4000a228 <_txe_mutex_create+0x168>
4000a1b4:	e590b000 	ldr	fp, [r0]
4000a1b8:	e35b0000 	cmp	fp, #0
4000a1bc:	0a000008 	beq	4000a1e4 <_txe_mutex_create+0x124>
4000a1c0:	e59f0064 	ldr	r0, [pc, #100]	; 4000a22c <_txe_mutex_create+0x16c>
4000a1c4:	e15b0000 	cmp	fp, r0
4000a1c8:	0a000003 	beq	4000a1dc <_txe_mutex_create+0x11c>
4000a1cc:	e59f005c 	ldr	r0, [pc, #92]	; 4000a230 <_txe_mutex_create+0x170>
4000a1d0:	e5900000 	ldr	r0, [r0]
4000a1d4:	e3500000 	cmp	r0, #0
4000a1d8:	0a000008 	beq	4000a200 <_txe_mutex_create+0x140>
4000a1dc:	e3a00013 	mov	r0, #19
4000a1e0:	eaffffc0 	b	4000a0e8 <_txe_mutex_create+0x28>
4000a1e4:	e59f0044 	ldr	r0, [pc, #68]	; 4000a230 <_txe_mutex_create+0x170>
4000a1e8:	e5900000 	ldr	r0, [r0]
4000a1ec:	e59f1040 	ldr	r1, [pc, #64]	; 4000a234 <_txe_mutex_create+0x174>
4000a1f0:	e1500001 	cmp	r0, r1
4000a1f4:	2a000001 	bcs	4000a200 <_txe_mutex_create+0x140>
4000a1f8:	e3a00013 	mov	r0, #19
4000a1fc:	eaffffb9 	b	4000a0e8 <_txe_mutex_create+0x28>
4000a200:	e1a02006 	mov	r2, r6
4000a204:	e1a01005 	mov	r1, r5
4000a208:	e1a00004 	mov	r0, r4
4000a20c:	eb000a8f 	bl	4000cc50 <_tx_mutex_create>
4000a210:	e58d0000 	str	r0, [sp]
4000a214:	e59d0000 	ldr	r0, [sp]
4000a218:	eaffffb2 	b	4000a0e8 <_txe_mutex_create+0x28>
4000a21c:	40030e50 	.word	0x40030e50
4000a220:	40030ec0 	.word	0x40030ec0
4000a224:	40030ec4 	.word	0x40030ec4
4000a228:	40030e34 	.word	0x40030e34
4000a22c:	40032974 	.word	0x40032974
4000a230:	40030e2c 	.word	0x40030e2c
4000a234:	f0f0f0f0 	.word	0xf0f0f0f0

4000a238 <_txe_mutex_delete>:
4000a238:	e92d4070 	push	{r4, r5, r6, lr}
4000a23c:	e1a04000 	mov	r4, r0
4000a240:	e3540000 	cmp	r4, #0
4000a244:	0a000003 	beq	4000a258 <_txe_mutex_delete+0x20>
4000a248:	e5940000 	ldr	r0, [r4]
4000a24c:	e59f1054 	ldr	r1, [pc, #84]	; 4000a2a8 <_txe_mutex_delete+0x70>
4000a250:	e1500001 	cmp	r0, r1
4000a254:	0a000001 	beq	4000a260 <_txe_mutex_delete+0x28>
4000a258:	e3a0001c 	mov	r0, #28
4000a25c:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a260:	e59f0044 	ldr	r0, [pc, #68]	; 4000a2ac <_txe_mutex_delete+0x74>
4000a264:	e5905000 	ldr	r5, [r0]
4000a268:	e3550000 	cmp	r5, #0
4000a26c:	0a000006 	beq	4000a28c <_txe_mutex_delete+0x54>
4000a270:	e59f0038 	ldr	r0, [pc, #56]	; 4000a2b0 <_txe_mutex_delete+0x78>
4000a274:	e5900000 	ldr	r0, [r0]
4000a278:	e3500000 	cmp	r0, #0
4000a27c:	1a000002 	bne	4000a28c <_txe_mutex_delete+0x54>
4000a280:	e59f002c 	ldr	r0, [pc, #44]	; 4000a2b4 <_txe_mutex_delete+0x7c>
4000a284:	e1550000 	cmp	r5, r0
4000a288:	1a000001 	bne	4000a294 <_txe_mutex_delete+0x5c>
4000a28c:	e3a00013 	mov	r0, #19
4000a290:	eafffff1 	b	4000a25c <_txe_mutex_delete+0x24>
4000a294:	e1a00004 	mov	r0, r4
4000a298:	eb000ae2 	bl	4000ce28 <_tx_mutex_delete>
4000a29c:	e1a06000 	mov	r6, r0
4000a2a0:	e1a00006 	mov	r0, r6
4000a2a4:	eaffffec 	b	4000a25c <_txe_mutex_delete+0x24>
4000a2a8:	4d555445 	.word	0x4d555445
4000a2ac:	40030e34 	.word	0x40030e34
4000a2b0:	40030e2c 	.word	0x40030e2c
4000a2b4:	40032974 	.word	0x40032974

4000a2b8 <_txe_mutex_get>:
4000a2b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a2bc:	e1a04000 	mov	r4, r0
4000a2c0:	e1a05001 	mov	r5, r1
4000a2c4:	e3540000 	cmp	r4, #0
4000a2c8:	0a000003 	beq	4000a2dc <_txe_mutex_get+0x24>
4000a2cc:	e5940000 	ldr	r0, [r4]
4000a2d0:	e59f10a0 	ldr	r1, [pc, #160]	; 4000a378 <_txe_mutex_get+0xc0>
4000a2d4:	e1500001 	cmp	r0, r1
4000a2d8:	0a000001 	beq	4000a2e4 <_txe_mutex_get+0x2c>
4000a2dc:	e3a0001c 	mov	r0, #28
4000a2e0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a2e4:	e59f0090 	ldr	r0, [pc, #144]	; 4000a37c <_txe_mutex_get+0xc4>
4000a2e8:	e5906000 	ldr	r6, [r0]
4000a2ec:	e3550000 	cmp	r5, #0
4000a2f0:	0a000008 	beq	4000a318 <_txe_mutex_get+0x60>
4000a2f4:	e59f0084 	ldr	r0, [pc, #132]	; 4000a380 <_txe_mutex_get+0xc8>
4000a2f8:	e5900000 	ldr	r0, [r0]
4000a2fc:	e3500000 	cmp	r0, #0
4000a300:	1a000002 	bne	4000a310 <_txe_mutex_get+0x58>
4000a304:	e59f0078 	ldr	r0, [pc, #120]	; 4000a384 <_txe_mutex_get+0xcc>
4000a308:	e1560000 	cmp	r6, r0
4000a30c:	1a000001 	bne	4000a318 <_txe_mutex_get+0x60>
4000a310:	e3a00004 	mov	r0, #4
4000a314:	eafffff1 	b	4000a2e0 <_txe_mutex_get+0x28>
4000a318:	e3560000 	cmp	r6, #0
4000a31c:	0a000008 	beq	4000a344 <_txe_mutex_get+0x8c>
4000a320:	e59f005c 	ldr	r0, [pc, #92]	; 4000a384 <_txe_mutex_get+0xcc>
4000a324:	e1560000 	cmp	r6, r0
4000a328:	0a000003 	beq	4000a33c <_txe_mutex_get+0x84>
4000a32c:	e59f004c 	ldr	r0, [pc, #76]	; 4000a380 <_txe_mutex_get+0xc8>
4000a330:	e5900000 	ldr	r0, [r0]
4000a334:	e3500000 	cmp	r0, #0
4000a338:	0a000008 	beq	4000a360 <_txe_mutex_get+0xa8>
4000a33c:	e3a00013 	mov	r0, #19
4000a340:	eaffffe6 	b	4000a2e0 <_txe_mutex_get+0x28>
4000a344:	e59f0034 	ldr	r0, [pc, #52]	; 4000a380 <_txe_mutex_get+0xc8>
4000a348:	e5900000 	ldr	r0, [r0]
4000a34c:	e59f1034 	ldr	r1, [pc, #52]	; 4000a388 <_txe_mutex_get+0xd0>
4000a350:	e1500001 	cmp	r0, r1
4000a354:	2a000001 	bcs	4000a360 <_txe_mutex_get+0xa8>
4000a358:	e3a00013 	mov	r0, #19
4000a35c:	eaffffdf 	b	4000a2e0 <_txe_mutex_get+0x28>
4000a360:	e1a01005 	mov	r1, r5
4000a364:	e1a00004 	mov	r0, r4
4000a368:	eb000b65 	bl	4000d104 <_tx_mutex_get>
4000a36c:	e1a07000 	mov	r7, r0
4000a370:	e1a00007 	mov	r0, r7
4000a374:	eaffffd9 	b	4000a2e0 <_txe_mutex_get+0x28>
4000a378:	4d555445 	.word	0x4d555445
4000a37c:	40030e34 	.word	0x40030e34
4000a380:	40030e2c 	.word	0x40030e2c
4000a384:	40032974 	.word	0x40032974
4000a388:	f0f0f0f0 	.word	0xf0f0f0f0

4000a38c <_txe_mutex_put>:
4000a38c:	e92d4070 	push	{r4, r5, r6, lr}
4000a390:	e1a04000 	mov	r4, r0
4000a394:	e3540000 	cmp	r4, #0
4000a398:	0a000003 	beq	4000a3ac <_txe_mutex_put+0x20>
4000a39c:	e5940000 	ldr	r0, [r4]
4000a3a0:	e59f1070 	ldr	r1, [pc, #112]	; 4000a418 <_txe_mutex_put+0x8c>
4000a3a4:	e1500001 	cmp	r0, r1
4000a3a8:	0a000001 	beq	4000a3b4 <_txe_mutex_put+0x28>
4000a3ac:	e3a0001c 	mov	r0, #28
4000a3b0:	e8bd8070 	pop	{r4, r5, r6, pc}
4000a3b4:	e59f0060 	ldr	r0, [pc, #96]	; 4000a41c <_txe_mutex_put+0x90>
4000a3b8:	e5905000 	ldr	r5, [r0]
4000a3bc:	e3550000 	cmp	r5, #0
4000a3c0:	0a000008 	beq	4000a3e8 <_txe_mutex_put+0x5c>
4000a3c4:	e59f0054 	ldr	r0, [pc, #84]	; 4000a420 <_txe_mutex_put+0x94>
4000a3c8:	e1550000 	cmp	r5, r0
4000a3cc:	0a000003 	beq	4000a3e0 <_txe_mutex_put+0x54>
4000a3d0:	e59f004c 	ldr	r0, [pc, #76]	; 4000a424 <_txe_mutex_put+0x98>
4000a3d4:	e5900000 	ldr	r0, [r0]
4000a3d8:	e3500000 	cmp	r0, #0
4000a3dc:	0a000008 	beq	4000a404 <_txe_mutex_put+0x78>
4000a3e0:	e3a00013 	mov	r0, #19
4000a3e4:	eafffff1 	b	4000a3b0 <_txe_mutex_put+0x24>
4000a3e8:	e59f0034 	ldr	r0, [pc, #52]	; 4000a424 <_txe_mutex_put+0x98>
4000a3ec:	e5900000 	ldr	r0, [r0]
4000a3f0:	e59f1030 	ldr	r1, [pc, #48]	; 4000a428 <_txe_mutex_put+0x9c>
4000a3f4:	e1500001 	cmp	r0, r1
4000a3f8:	2a000001 	bcs	4000a404 <_txe_mutex_put+0x78>
4000a3fc:	e3a00013 	mov	r0, #19
4000a400:	eaffffea 	b	4000a3b0 <_txe_mutex_put+0x24>
4000a404:	e1a00004 	mov	r0, r4
4000a408:	eb000c1c 	bl	4000d480 <_tx_mutex_put>
4000a40c:	e1a06000 	mov	r6, r0
4000a410:	e1a00006 	mov	r0, r6
4000a414:	eaffffe5 	b	4000a3b0 <_txe_mutex_put+0x24>
4000a418:	4d555445 	.word	0x4d555445
4000a41c:	40030e34 	.word	0x40030e34
4000a420:	40032974 	.word	0x40032974
4000a424:	40030e2c 	.word	0x40030e2c
4000a428:	f0f0f0f0 	.word	0xf0f0f0f0

4000a42c <_txe_queue_create>:
4000a42c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a430:	e24dd014 	sub	sp, sp, #20
4000a434:	e1a04000 	mov	r4, r0
4000a438:	e1a05002 	mov	r5, r2
4000a43c:	e1a06003 	mov	r6, r3
4000a440:	e59d7048 	ldr	r7, [sp, #72]	; 0x48
4000a444:	e59d804c 	ldr	r8, [sp, #76]	; 0x4c
4000a448:	e3540000 	cmp	r4, #0
4000a44c:	0a000001 	beq	4000a458 <_txe_queue_create+0x2c>
4000a450:	e358003c 	cmp	r8, #60	; 0x3c
4000a454:	0a000002 	beq	4000a464 <_txe_queue_create+0x38>
4000a458:	e3a00009 	mov	r0, #9
4000a45c:	e28dd024 	add	sp, sp, #36	; 0x24
4000a460:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a464:	e10f9000 	mrs	r9, CPSR
4000a468:	e389a080 	orr	sl, r9, #128	; 0x80
4000a46c:	e121f00a 	msr	CPSR_c, sl
4000a470:	e59f0150 	ldr	r0, [pc, #336]	; 4000a5c8 <_txe_queue_create+0x19c>
4000a474:	e5900000 	ldr	r0, [r0]
4000a478:	e2800001 	add	r0, r0, #1
4000a47c:	e59f1144 	ldr	r1, [pc, #324]	; 4000a5c8 <_txe_queue_create+0x19c>
4000a480:	e5810000 	str	r0, [r1]
4000a484:	e121f009 	msr	CPSR_c, r9
4000a488:	e59f013c 	ldr	r0, [pc, #316]	; 4000a5cc <_txe_queue_create+0x1a0>
4000a48c:	e5900000 	ldr	r0, [r0]
4000a490:	e58d0008 	str	r0, [sp, #8]
4000a494:	e3a00000 	mov	r0, #0
4000a498:	e58d000c 	str	r0, [sp, #12]
4000a49c:	ea000009 	b	4000a4c8 <_txe_queue_create+0x9c>
4000a4a0:	e59d0008 	ldr	r0, [sp, #8]
4000a4a4:	e1540000 	cmp	r4, r0
4000a4a8:	1a000000 	bne	4000a4b0 <_txe_queue_create+0x84>
4000a4ac:	ea00000a 	b	4000a4dc <_txe_queue_create+0xb0>
4000a4b0:	e59d0008 	ldr	r0, [sp, #8]
4000a4b4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4000a4b8:	e58d0008 	str	r0, [sp, #8]
4000a4bc:	e59d000c 	ldr	r0, [sp, #12]
4000a4c0:	e2800001 	add	r0, r0, #1
4000a4c4:	e58d000c 	str	r0, [sp, #12]
4000a4c8:	e59f1100 	ldr	r1, [pc, #256]	; 4000a5d0 <_txe_queue_create+0x1a4>
4000a4cc:	e59d000c 	ldr	r0, [sp, #12]
4000a4d0:	e5911000 	ldr	r1, [r1]
4000a4d4:	e1500001 	cmp	r0, r1
4000a4d8:	3afffff0 	bcc	4000a4a0 <_txe_queue_create+0x74>
4000a4dc:	e1a00000 	nop			; (mov r0, r0)
4000a4e0:	e10f9000 	mrs	r9, CPSR
4000a4e4:	e389a080 	orr	sl, r9, #128	; 0x80
4000a4e8:	e121f00a 	msr	CPSR_c, sl
4000a4ec:	e59f00d4 	ldr	r0, [pc, #212]	; 4000a5c8 <_txe_queue_create+0x19c>
4000a4f0:	e5900000 	ldr	r0, [r0]
4000a4f4:	e2400001 	sub	r0, r0, #1
4000a4f8:	e59f10c8 	ldr	r1, [pc, #200]	; 4000a5c8 <_txe_queue_create+0x19c>
4000a4fc:	e5810000 	str	r0, [r1]
4000a500:	e121f009 	msr	CPSR_c, r9
4000a504:	eb0013c7 	bl	4000f428 <_tx_thread_system_preempt_check>
4000a508:	e59d0008 	ldr	r0, [sp, #8]
4000a50c:	e1540000 	cmp	r4, r0
4000a510:	1a000001 	bne	4000a51c <_txe_queue_create+0xf0>
4000a514:	e3a00009 	mov	r0, #9
4000a518:	eaffffcf 	b	4000a45c <_txe_queue_create+0x30>
4000a51c:	e3560000 	cmp	r6, #0
4000a520:	1a000001 	bne	4000a52c <_txe_queue_create+0x100>
4000a524:	e3a00003 	mov	r0, #3
4000a528:	eaffffcb 	b	4000a45c <_txe_queue_create+0x30>
4000a52c:	e3550000 	cmp	r5, #0
4000a530:	0a000001 	beq	4000a53c <_txe_queue_create+0x110>
4000a534:	e3550010 	cmp	r5, #16
4000a538:	9a000001 	bls	4000a544 <_txe_queue_create+0x118>
4000a53c:	e3a00005 	mov	r0, #5
4000a540:	eaffffc5 	b	4000a45c <_txe_queue_create+0x30>
4000a544:	e1550127 	cmp	r5, r7, lsr #2
4000a548:	9a000001 	bls	4000a554 <_txe_queue_create+0x128>
4000a54c:	e3a00005 	mov	r0, #5
4000a550:	eaffffc1 	b	4000a45c <_txe_queue_create+0x30>
4000a554:	e59f0078 	ldr	r0, [pc, #120]	; 4000a5d4 <_txe_queue_create+0x1a8>
4000a558:	e590b000 	ldr	fp, [r0]
4000a55c:	e35b0000 	cmp	fp, #0
4000a560:	0a000008 	beq	4000a588 <_txe_queue_create+0x15c>
4000a564:	e59f006c 	ldr	r0, [pc, #108]	; 4000a5d8 <_txe_queue_create+0x1ac>
4000a568:	e15b0000 	cmp	fp, r0
4000a56c:	0a000003 	beq	4000a580 <_txe_queue_create+0x154>
4000a570:	e59f0064 	ldr	r0, [pc, #100]	; 4000a5dc <_txe_queue_create+0x1b0>
4000a574:	e5900000 	ldr	r0, [r0]
4000a578:	e3500000 	cmp	r0, #0
4000a57c:	0a000008 	beq	4000a5a4 <_txe_queue_create+0x178>
4000a580:	e3a00013 	mov	r0, #19
4000a584:	eaffffb4 	b	4000a45c <_txe_queue_create+0x30>
4000a588:	e59f004c 	ldr	r0, [pc, #76]	; 4000a5dc <_txe_queue_create+0x1b0>
4000a58c:	e5900000 	ldr	r0, [r0]
4000a590:	e59f1048 	ldr	r1, [pc, #72]	; 4000a5e0 <_txe_queue_create+0x1b4>
4000a594:	e1500001 	cmp	r0, r1
4000a598:	2a000001 	bcs	4000a5a4 <_txe_queue_create+0x178>
4000a59c:	e3a00013 	mov	r0, #19
4000a5a0:	eaffffad 	b	4000a45c <_txe_queue_create+0x30>
4000a5a4:	e1a03006 	mov	r3, r6
4000a5a8:	e1a02005 	mov	r2, r5
4000a5ac:	e58d7000 	str	r7, [sp]
4000a5b0:	e1a00004 	mov	r0, r4
4000a5b4:	e59d1018 	ldr	r1, [sp, #24]
4000a5b8:	eb000ce5 	bl	4000d954 <_tx_queue_create>
4000a5bc:	e58d0010 	str	r0, [sp, #16]
4000a5c0:	e59d0010 	ldr	r0, [sp, #16]
4000a5c4:	eaffffa4 	b	4000a45c <_txe_queue_create+0x30>
4000a5c8:	40030e50 	.word	0x40030e50
4000a5cc:	40030eb0 	.word	0x40030eb0
4000a5d0:	40030eb4 	.word	0x40030eb4
4000a5d4:	40030e34 	.word	0x40030e34
4000a5d8:	40032974 	.word	0x40032974
4000a5dc:	40030e2c 	.word	0x40030e2c
4000a5e0:	f0f0f0f0 	.word	0xf0f0f0f0

4000a5e4 <_txe_queue_front_send>:
4000a5e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a5e8:	e1a04000 	mov	r4, r0
4000a5ec:	e1a05001 	mov	r5, r1
4000a5f0:	e1a06002 	mov	r6, r2
4000a5f4:	e3540000 	cmp	r4, #0
4000a5f8:	0a000003 	beq	4000a60c <_txe_queue_front_send+0x28>
4000a5fc:	e5940000 	ldr	r0, [r4]
4000a600:	e59f106c 	ldr	r1, [pc, #108]	; 4000a674 <_txe_queue_front_send+0x90>
4000a604:	e1500001 	cmp	r0, r1
4000a608:	0a000001 	beq	4000a614 <_txe_queue_front_send+0x30>
4000a60c:	e3a00009 	mov	r0, #9
4000a610:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a614:	e3550000 	cmp	r5, #0
4000a618:	1a000001 	bne	4000a624 <_txe_queue_front_send+0x40>
4000a61c:	e3a00003 	mov	r0, #3
4000a620:	eafffffa 	b	4000a610 <_txe_queue_front_send+0x2c>
4000a624:	e3560000 	cmp	r6, #0
4000a628:	0a00000a 	beq	4000a658 <_txe_queue_front_send+0x74>
4000a62c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a678 <_txe_queue_front_send+0x94>
4000a630:	e5900000 	ldr	r0, [r0]
4000a634:	e3500000 	cmp	r0, #0
4000a638:	1a000004 	bne	4000a650 <_txe_queue_front_send+0x6c>
4000a63c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a67c <_txe_queue_front_send+0x98>
4000a640:	e5900000 	ldr	r0, [r0]
4000a644:	e59f1034 	ldr	r1, [pc, #52]	; 4000a680 <_txe_queue_front_send+0x9c>
4000a648:	e1500001 	cmp	r0, r1
4000a64c:	1a000001 	bne	4000a658 <_txe_queue_front_send+0x74>
4000a650:	e3a00004 	mov	r0, #4
4000a654:	eaffffed 	b	4000a610 <_txe_queue_front_send+0x2c>
4000a658:	e1a02006 	mov	r2, r6
4000a65c:	e1a01005 	mov	r1, r5
4000a660:	e1a00004 	mov	r0, r4
4000a664:	eb000d3d 	bl	4000db60 <_tx_queue_front_send>
4000a668:	e1a07000 	mov	r7, r0
4000a66c:	e1a00007 	mov	r0, r7
4000a670:	eaffffe6 	b	4000a610 <_txe_queue_front_send+0x2c>
4000a674:	51554555 	.word	0x51554555
4000a678:	40030e2c 	.word	0x40030e2c
4000a67c:	40030e34 	.word	0x40030e34
4000a680:	40032974 	.word	0x40032974

4000a684 <_txe_queue_receive>:
4000a684:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a688:	e1a04000 	mov	r4, r0
4000a68c:	e1a05001 	mov	r5, r1
4000a690:	e1a06002 	mov	r6, r2
4000a694:	e3540000 	cmp	r4, #0
4000a698:	0a000003 	beq	4000a6ac <_txe_queue_receive+0x28>
4000a69c:	e5940000 	ldr	r0, [r4]
4000a6a0:	e59f106c 	ldr	r1, [pc, #108]	; 4000a714 <_txe_queue_receive+0x90>
4000a6a4:	e1500001 	cmp	r0, r1
4000a6a8:	0a000001 	beq	4000a6b4 <_txe_queue_receive+0x30>
4000a6ac:	e3a00009 	mov	r0, #9
4000a6b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a6b4:	e3550000 	cmp	r5, #0
4000a6b8:	1a000001 	bne	4000a6c4 <_txe_queue_receive+0x40>
4000a6bc:	e3a00003 	mov	r0, #3
4000a6c0:	eafffffa 	b	4000a6b0 <_txe_queue_receive+0x2c>
4000a6c4:	e3560000 	cmp	r6, #0
4000a6c8:	0a00000a 	beq	4000a6f8 <_txe_queue_receive+0x74>
4000a6cc:	e59f0044 	ldr	r0, [pc, #68]	; 4000a718 <_txe_queue_receive+0x94>
4000a6d0:	e5900000 	ldr	r0, [r0]
4000a6d4:	e3500000 	cmp	r0, #0
4000a6d8:	1a000004 	bne	4000a6f0 <_txe_queue_receive+0x6c>
4000a6dc:	e59f0038 	ldr	r0, [pc, #56]	; 4000a71c <_txe_queue_receive+0x98>
4000a6e0:	e5900000 	ldr	r0, [r0]
4000a6e4:	e59f1034 	ldr	r1, [pc, #52]	; 4000a720 <_txe_queue_receive+0x9c>
4000a6e8:	e1500001 	cmp	r0, r1
4000a6ec:	1a000001 	bne	4000a6f8 <_txe_queue_receive+0x74>
4000a6f0:	e3a00004 	mov	r0, #4
4000a6f4:	eaffffed 	b	4000a6b0 <_txe_queue_receive+0x2c>
4000a6f8:	e1a02006 	mov	r2, r6
4000a6fc:	e1a01005 	mov	r1, r5
4000a700:	e1a00004 	mov	r0, r4
4000a704:	eb000e04 	bl	4000df1c <_tx_queue_receive>
4000a708:	e1a07000 	mov	r7, r0
4000a70c:	e1a00007 	mov	r0, r7
4000a710:	eaffffe6 	b	4000a6b0 <_txe_queue_receive+0x2c>
4000a714:	51554555 	.word	0x51554555
4000a718:	40030e2c 	.word	0x40030e2c
4000a71c:	40030e34 	.word	0x40030e34
4000a720:	40032974 	.word	0x40032974

4000a724 <_txe_queue_send>:
4000a724:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000a728:	e1a04000 	mov	r4, r0
4000a72c:	e1a05001 	mov	r5, r1
4000a730:	e1a06002 	mov	r6, r2
4000a734:	e3540000 	cmp	r4, #0
4000a738:	0a000003 	beq	4000a74c <_txe_queue_send+0x28>
4000a73c:	e5940000 	ldr	r0, [r4]
4000a740:	e59f106c 	ldr	r1, [pc, #108]	; 4000a7b4 <_txe_queue_send+0x90>
4000a744:	e1500001 	cmp	r0, r1
4000a748:	0a000001 	beq	4000a754 <_txe_queue_send+0x30>
4000a74c:	e3a00009 	mov	r0, #9
4000a750:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000a754:	e3550000 	cmp	r5, #0
4000a758:	1a000001 	bne	4000a764 <_txe_queue_send+0x40>
4000a75c:	e3a00003 	mov	r0, #3
4000a760:	eafffffa 	b	4000a750 <_txe_queue_send+0x2c>
4000a764:	e3560000 	cmp	r6, #0
4000a768:	0a00000a 	beq	4000a798 <_txe_queue_send+0x74>
4000a76c:	e59f0044 	ldr	r0, [pc, #68]	; 4000a7b8 <_txe_queue_send+0x94>
4000a770:	e5900000 	ldr	r0, [r0]
4000a774:	e3500000 	cmp	r0, #0
4000a778:	1a000004 	bne	4000a790 <_txe_queue_send+0x6c>
4000a77c:	e59f0038 	ldr	r0, [pc, #56]	; 4000a7bc <_txe_queue_send+0x98>
4000a780:	e5900000 	ldr	r0, [r0]
4000a784:	e59f1034 	ldr	r1, [pc, #52]	; 4000a7c0 <_txe_queue_send+0x9c>
4000a788:	e1500001 	cmp	r0, r1
4000a78c:	1a000001 	bne	4000a798 <_txe_queue_send+0x74>
4000a790:	e3a00004 	mov	r0, #4
4000a794:	eaffffed 	b	4000a750 <_txe_queue_send+0x2c>
4000a798:	e1a02006 	mov	r2, r6
4000a79c:	e1a01005 	mov	r1, r5
4000a7a0:	e1a00004 	mov	r0, r4
4000a7a4:	eb000ef4 	bl	4000e37c <_tx_queue_send>
4000a7a8:	e1a07000 	mov	r7, r0
4000a7ac:	e1a00007 	mov	r0, r7
4000a7b0:	eaffffe6 	b	4000a750 <_txe_queue_send+0x2c>
4000a7b4:	51554555 	.word	0x51554555
4000a7b8:	40030e2c 	.word	0x40030e2c
4000a7bc:	40030e34 	.word	0x40030e34
4000a7c0:	40032974 	.word	0x40032974

4000a7c4 <_txe_thread_create>:
4000a7c4:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000a7c8:	e24dd02c 	sub	sp, sp, #44	; 0x2c
4000a7cc:	e1a04000 	mov	r4, r0
4000a7d0:	e1a05002 	mov	r5, r2
4000a7d4:	e1cd66d0 	ldrd	r6, [sp, #96]	; 0x60
4000a7d8:	e1cd86d8 	ldrd	r8, [sp, #104]	; 0x68
4000a7dc:	e3540000 	cmp	r4, #0
4000a7e0:	0a000002 	beq	4000a7f0 <_txe_thread_create+0x2c>
4000a7e4:	e59d0078 	ldr	r0, [sp, #120]	; 0x78
4000a7e8:	e35000a8 	cmp	r0, #168	; 0xa8
4000a7ec:	0a000002 	beq	4000a7fc <_txe_thread_create+0x38>
4000a7f0:	e3a0000e 	mov	r0, #14
4000a7f4:	e28dd03c 	add	sp, sp, #60	; 0x3c
4000a7f8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000a7fc:	e10f0000 	mrs	r0, CPSR
4000a800:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a804:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a808:	e3800080 	orr	r0, r0, #128	; 0x80
4000a80c:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a810:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a814:	e121f000 	msr	CPSR_c, r0
4000a818:	e59f01ec 	ldr	r0, [pc, #492]	; 4000aa0c <_txe_thread_create+0x248>
4000a81c:	e5900000 	ldr	r0, [r0]
4000a820:	e2800001 	add	r0, r0, #1
4000a824:	e59f11e0 	ldr	r1, [pc, #480]	; 4000aa0c <_txe_thread_create+0x248>
4000a828:	e5810000 	str	r0, [r1]
4000a82c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a830:	e121f000 	msr	CPSR_c, r0
4000a834:	e59f01d4 	ldr	r0, [pc, #468]	; 4000aa10 <_txe_thread_create+0x24c>
4000a838:	e5900000 	ldr	r0, [r0]
4000a83c:	e58d0018 	str	r0, [sp, #24]
4000a840:	e2470001 	sub	r0, r7, #1
4000a844:	e080b006 	add	fp, r0, r6
4000a848:	e3a00000 	mov	r0, #0
4000a84c:	e58d001c 	str	r0, [sp, #28]
4000a850:	ea00001d 	b	4000a8cc <_txe_thread_create+0x108>
4000a854:	e59d0018 	ldr	r0, [sp, #24]
4000a858:	e1540000 	cmp	r4, r0
4000a85c:	1a000000 	bne	4000a864 <_txe_thread_create+0xa0>
4000a860:	ea00001e 	b	4000a8e0 <_txe_thread_create+0x11c>
4000a864:	e59d0018 	ldr	r0, [sp, #24]
4000a868:	e590000c 	ldr	r0, [r0, #12]
4000a86c:	e1500006 	cmp	r0, r6
4000a870:	8a000005 	bhi	4000a88c <_txe_thread_create+0xc8>
4000a874:	e59d0018 	ldr	r0, [sp, #24]
4000a878:	e5900010 	ldr	r0, [r0, #16]
4000a87c:	e1500006 	cmp	r0, r6
4000a880:	9a000001 	bls	4000a88c <_txe_thread_create+0xc8>
4000a884:	e3a06000 	mov	r6, #0
4000a888:	ea000014 	b	4000a8e0 <_txe_thread_create+0x11c>
4000a88c:	e59d0018 	ldr	r0, [sp, #24]
4000a890:	e590000c 	ldr	r0, [r0, #12]
4000a894:	e150000b 	cmp	r0, fp
4000a898:	8a000005 	bhi	4000a8b4 <_txe_thread_create+0xf0>
4000a89c:	e59d0018 	ldr	r0, [sp, #24]
4000a8a0:	e5900010 	ldr	r0, [r0, #16]
4000a8a4:	e150000b 	cmp	r0, fp
4000a8a8:	9a000001 	bls	4000a8b4 <_txe_thread_create+0xf0>
4000a8ac:	e3a06000 	mov	r6, #0
4000a8b0:	ea00000a 	b	4000a8e0 <_txe_thread_create+0x11c>
4000a8b4:	e59d0018 	ldr	r0, [sp, #24]
4000a8b8:	e5900088 	ldr	r0, [r0, #136]	; 0x88
4000a8bc:	e58d0018 	str	r0, [sp, #24]
4000a8c0:	e59d001c 	ldr	r0, [sp, #28]
4000a8c4:	e2800001 	add	r0, r0, #1
4000a8c8:	e58d001c 	str	r0, [sp, #28]
4000a8cc:	e59f1140 	ldr	r1, [pc, #320]	; 4000aa14 <_txe_thread_create+0x250>
4000a8d0:	e59d001c 	ldr	r0, [sp, #28]
4000a8d4:	e5911000 	ldr	r1, [r1]
4000a8d8:	e1500001 	cmp	r0, r1
4000a8dc:	3affffdc 	bcc	4000a854 <_txe_thread_create+0x90>
4000a8e0:	e1a00000 	nop			; (mov r0, r0)
4000a8e4:	e10f0000 	mrs	r0, CPSR
4000a8e8:	e58d0028 	str	r0, [sp, #40]	; 0x28
4000a8ec:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a8f0:	e3800080 	orr	r0, r0, #128	; 0x80
4000a8f4:	e58d0024 	str	r0, [sp, #36]	; 0x24
4000a8f8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4000a8fc:	e121f000 	msr	CPSR_c, r0
4000a900:	e59f0104 	ldr	r0, [pc, #260]	; 4000aa0c <_txe_thread_create+0x248>
4000a904:	e5900000 	ldr	r0, [r0]
4000a908:	e2400001 	sub	r0, r0, #1
4000a90c:	e59f10f8 	ldr	r1, [pc, #248]	; 4000aa0c <_txe_thread_create+0x248>
4000a910:	e5810000 	str	r0, [r1]
4000a914:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4000a918:	e121f000 	msr	CPSR_c, r0
4000a91c:	eb0012c1 	bl	4000f428 <_tx_thread_system_preempt_check>
4000a920:	e59d0018 	ldr	r0, [sp, #24]
4000a924:	e1540000 	cmp	r4, r0
4000a928:	1a000001 	bne	4000a934 <_txe_thread_create+0x170>
4000a92c:	e3a0000e 	mov	r0, #14
4000a930:	eaffffaf 	b	4000a7f4 <_txe_thread_create+0x30>
4000a934:	e3560000 	cmp	r6, #0
4000a938:	0a000001 	beq	4000a944 <_txe_thread_create+0x180>
4000a93c:	e3550000 	cmp	r5, #0
4000a940:	1a000001 	bne	4000a94c <_txe_thread_create+0x188>
4000a944:	e3a00003 	mov	r0, #3
4000a948:	eaffffa9 	b	4000a7f4 <_txe_thread_create+0x30>
4000a94c:	e35700c8 	cmp	r7, #200	; 0xc8
4000a950:	2a000001 	bcs	4000a95c <_txe_thread_create+0x198>
4000a954:	e3a00005 	mov	r0, #5
4000a958:	eaffffa5 	b	4000a7f4 <_txe_thread_create+0x30>
4000a95c:	e3580020 	cmp	r8, #32
4000a960:	3a000001 	bcc	4000a96c <_txe_thread_create+0x1a8>
4000a964:	e3a0000f 	mov	r0, #15
4000a968:	eaffffa1 	b	4000a7f4 <_txe_thread_create+0x30>
4000a96c:	e1590008 	cmp	r9, r8
4000a970:	9a000001 	bls	4000a97c <_txe_thread_create+0x1b8>
4000a974:	e3a00018 	mov	r0, #24
4000a978:	eaffff9d 	b	4000a7f4 <_txe_thread_create+0x30>
4000a97c:	e59d0074 	ldr	r0, [sp, #116]	; 0x74
4000a980:	e3500001 	cmp	r0, #1
4000a984:	9a000001 	bls	4000a990 <_txe_thread_create+0x1cc>
4000a988:	e3a00010 	mov	r0, #16
4000a98c:	eaffff98 	b	4000a7f4 <_txe_thread_create+0x30>
4000a990:	e59f0080 	ldr	r0, [pc, #128]	; 4000aa18 <_txe_thread_create+0x254>
4000a994:	e590a000 	ldr	sl, [r0]
4000a998:	e35a0000 	cmp	sl, #0
4000a99c:	0a000008 	beq	4000a9c4 <_txe_thread_create+0x200>
4000a9a0:	e59f0074 	ldr	r0, [pc, #116]	; 4000aa1c <_txe_thread_create+0x258>
4000a9a4:	e15a0000 	cmp	sl, r0
4000a9a8:	0a000003 	beq	4000a9bc <_txe_thread_create+0x1f8>
4000a9ac:	e59f006c 	ldr	r0, [pc, #108]	; 4000aa20 <_txe_thread_create+0x25c>
4000a9b0:	e5900000 	ldr	r0, [r0]
4000a9b4:	e3500000 	cmp	r0, #0
4000a9b8:	0a000008 	beq	4000a9e0 <_txe_thread_create+0x21c>
4000a9bc:	e3a00013 	mov	r0, #19
4000a9c0:	eaffff8b 	b	4000a7f4 <_txe_thread_create+0x30>
4000a9c4:	e59f0054 	ldr	r0, [pc, #84]	; 4000aa20 <_txe_thread_create+0x25c>
4000a9c8:	e5900000 	ldr	r0, [r0]
4000a9cc:	e59f1050 	ldr	r1, [pc, #80]	; 4000aa24 <_txe_thread_create+0x260>
4000a9d0:	e1500001 	cmp	r0, r1
4000a9d4:	2a000001 	bcs	4000a9e0 <_txe_thread_create+0x21c>
4000a9d8:	e3a00013 	mov	r0, #19
4000a9dc:	eaffff84 	b	4000a7f4 <_txe_thread_create+0x30>
4000a9e0:	e1cd27d0 	ldrd	r2, [sp, #112]	; 0x70
4000a9e4:	e1cd21f0 	strd	r2, [sp, #16]
4000a9e8:	e88d03c0 	stm	sp, {r6, r7, r8, r9}
4000a9ec:	e1a02005 	mov	r2, r5
4000a9f0:	e1a00004 	mov	r0, r4
4000a9f4:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000a9f8:	e59d3038 	ldr	r3, [sp, #56]	; 0x38
4000a9fc:	eb000f49 	bl	4000e728 <_tx_thread_create>
4000aa00:	e58d0020 	str	r0, [sp, #32]
4000aa04:	e59d0020 	ldr	r0, [sp, #32]
4000aa08:	eaffff79 	b	4000a7f4 <_txe_thread_create+0x30>
4000aa0c:	40030e50 	.word	0x40030e50
4000aa10:	40030e3c 	.word	0x40030e3c
4000aa14:	40030e40 	.word	0x40030e40
4000aa18:	40030e34 	.word	0x40030e34
4000aa1c:	40032974 	.word	0x40032974
4000aa20:	40030e2c 	.word	0x40030e2c
4000aa24:	f0f0f0f0 	.word	0xf0f0f0f0

4000aa28 <_txe_thread_info_get>:
4000aa28:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000aa2c:	e24dd01c 	sub	sp, sp, #28
4000aa30:	e1a04000 	mov	r4, r0
4000aa34:	e1a05001 	mov	r5, r1
4000aa38:	e1a06002 	mov	r6, r2
4000aa3c:	e1a07003 	mov	r7, r3
4000aa40:	e1cd84d0 	ldrd	r8, [sp, #64]	; 0x40
4000aa44:	e1cda4d8 	ldrd	sl, [sp, #72]	; 0x48
4000aa48:	e3540000 	cmp	r4, #0
4000aa4c:	0a000003 	beq	4000aa60 <_txe_thread_info_get+0x38>
4000aa50:	e5940000 	ldr	r0, [r4]
4000aa54:	e59f103c 	ldr	r1, [pc, #60]	; 4000aa98 <_txe_thread_info_get+0x70>
4000aa58:	e1500001 	cmp	r0, r1
4000aa5c:	0a000002 	beq	4000aa6c <_txe_thread_info_get+0x44>
4000aa60:	e3a0000e 	mov	r0, #14
4000aa64:	e28dd01c 	add	sp, sp, #28
4000aa68:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000aa6c:	e59d3050 	ldr	r3, [sp, #80]	; 0x50
4000aa70:	e58d3010 	str	r3, [sp, #16]
4000aa74:	e1a03007 	mov	r3, r7
4000aa78:	e1a02006 	mov	r2, r6
4000aa7c:	e1a01005 	mov	r1, r5
4000aa80:	e1a00004 	mov	r0, r4
4000aa84:	e88d0f00 	stm	sp, {r8, r9, sl, fp}
4000aa88:	eb000ff5 	bl	4000ea64 <_tx_thread_info_get>
4000aa8c:	e58d0018 	str	r0, [sp, #24]
4000aa90:	e59d0018 	ldr	r0, [sp, #24]
4000aa94:	eafffff2 	b	4000aa64 <_txe_thread_info_get+0x3c>
4000aa98:	54485244 	.word	0x54485244

4000aa9c <_txe_thread_priority_change>:
4000aa9c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000aaa0:	e1a04000 	mov	r4, r0
4000aaa4:	e1a05001 	mov	r5, r1
4000aaa8:	e1a06002 	mov	r6, r2
4000aaac:	e3540000 	cmp	r4, #0
4000aab0:	0a000003 	beq	4000aac4 <_txe_thread_priority_change+0x28>
4000aab4:	e5940000 	ldr	r0, [r4]
4000aab8:	e59f1070 	ldr	r1, [pc, #112]	; 4000ab30 <_txe_thread_priority_change+0x94>
4000aabc:	e1500001 	cmp	r0, r1
4000aac0:	0a000001 	beq	4000aacc <_txe_thread_priority_change+0x30>
4000aac4:	e3a0000e 	mov	r0, #14
4000aac8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000aacc:	e3560000 	cmp	r6, #0
4000aad0:	1a000001 	bne	4000aadc <_txe_thread_priority_change+0x40>
4000aad4:	e3a00003 	mov	r0, #3
4000aad8:	eafffffa 	b	4000aac8 <_txe_thread_priority_change+0x2c>
4000aadc:	e3550020 	cmp	r5, #32
4000aae0:	3a000001 	bcc	4000aaec <_txe_thread_priority_change+0x50>
4000aae4:	e3a0000f 	mov	r0, #15
4000aae8:	eafffff6 	b	4000aac8 <_txe_thread_priority_change+0x2c>
4000aaec:	e59f0040 	ldr	r0, [pc, #64]	; 4000ab34 <_txe_thread_priority_change+0x98>
4000aaf0:	e5900000 	ldr	r0, [r0]
4000aaf4:	e3500000 	cmp	r0, #0
4000aaf8:	0a000003 	beq	4000ab0c <_txe_thread_priority_change+0x70>
4000aafc:	e59f0034 	ldr	r0, [pc, #52]	; 4000ab38 <_txe_thread_priority_change+0x9c>
4000ab00:	e5900000 	ldr	r0, [r0]
4000ab04:	e3500000 	cmp	r0, #0
4000ab08:	0a000001 	beq	4000ab14 <_txe_thread_priority_change+0x78>
4000ab0c:	e3a00013 	mov	r0, #19
4000ab10:	eaffffec 	b	4000aac8 <_txe_thread_priority_change+0x2c>
4000ab14:	e1a02006 	mov	r2, r6
4000ab18:	e1a01005 	mov	r1, r5
4000ab1c:	e1a00004 	mov	r0, r4
4000ab20:	eb001039 	bl	4000ec0c <_tx_thread_priority_change>
4000ab24:	e1a07000 	mov	r7, r0
4000ab28:	e1a00007 	mov	r0, r7
4000ab2c:	eaffffe5 	b	4000aac8 <_txe_thread_priority_change+0x2c>
4000ab30:	54485244 	.word	0x54485244
4000ab34:	40030e34 	.word	0x40030e34
4000ab38:	40030e2c 	.word	0x40030e2c

4000ab3c <_txe_thread_relinquish>:
4000ab3c:	e92d4010 	push	{r4, lr}
4000ab40:	e59f0020 	ldr	r0, [pc, #32]	; 4000ab68 <_txe_thread_relinquish+0x2c>
4000ab44:	e5900000 	ldr	r0, [r0]
4000ab48:	e3500000 	cmp	r0, #0
4000ab4c:	0a000004 	beq	4000ab64 <_txe_thread_relinquish+0x28>
4000ab50:	e59f0014 	ldr	r0, [pc, #20]	; 4000ab6c <_txe_thread_relinquish+0x30>
4000ab54:	e5900000 	ldr	r0, [r0]
4000ab58:	e3500000 	cmp	r0, #0
4000ab5c:	1a000000 	bne	4000ab64 <_txe_thread_relinquish+0x28>
4000ab60:	eb001091 	bl	4000edac <_tx_thread_relinquish>
4000ab64:	e8bd8010 	pop	{r4, pc}
4000ab68:	40030e34 	.word	0x40030e34
4000ab6c:	40030e2c 	.word	0x40030e2c

4000ab70 <_txe_thread_resume>:
4000ab70:	e92d4070 	push	{r4, r5, r6, lr}
4000ab74:	e1a04000 	mov	r4, r0
4000ab78:	e3540000 	cmp	r4, #0
4000ab7c:	0a000003 	beq	4000ab90 <_txe_thread_resume+0x20>
4000ab80:	e5940000 	ldr	r0, [r4]
4000ab84:	e59f1020 	ldr	r1, [pc, #32]	; 4000abac <_txe_thread_resume+0x3c>
4000ab88:	e1500001 	cmp	r0, r1
4000ab8c:	0a000001 	beq	4000ab98 <_txe_thread_resume+0x28>
4000ab90:	e3a0000e 	mov	r0, #14
4000ab94:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ab98:	e1a00004 	mov	r0, r4
4000ab9c:	eb00113e 	bl	4000f09c <_tx_thread_resume>
4000aba0:	e1a05000 	mov	r5, r0
4000aba4:	e1a00005 	mov	r0, r5
4000aba8:	eafffff9 	b	4000ab94 <_txe_thread_resume+0x24>
4000abac:	54485244 	.word	0x54485244

4000abb0 <_txe_timer_activate>:
4000abb0:	e92d4070 	push	{r4, r5, r6, lr}
4000abb4:	e1a04000 	mov	r4, r0
4000abb8:	e3540000 	cmp	r4, #0
4000abbc:	0a000003 	beq	4000abd0 <_txe_timer_activate+0x20>
4000abc0:	e5940000 	ldr	r0, [r4]
4000abc4:	e59f1020 	ldr	r1, [pc, #32]	; 4000abec <_txe_timer_activate+0x3c>
4000abc8:	e1500001 	cmp	r0, r1
4000abcc:	0a000001 	beq	4000abd8 <_txe_timer_activate+0x28>
4000abd0:	e3a00015 	mov	r0, #21
4000abd4:	e8bd8070 	pop	{r4, r5, r6, pc}
4000abd8:	e1a00004 	mov	r0, r4
4000abdc:	eb0013a4 	bl	4000fa74 <_tx_timer_activate>
4000abe0:	e1a05000 	mov	r5, r0
4000abe4:	e1a00005 	mov	r0, r5
4000abe8:	eafffff9 	b	4000abd4 <_txe_timer_activate+0x24>
4000abec:	4154494d 	.word	0x4154494d

4000abf0 <_txe_timer_change>:
4000abf0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000abf4:	e1a04000 	mov	r4, r0
4000abf8:	e1a05001 	mov	r5, r1
4000abfc:	e1a06002 	mov	r6, r2
4000ac00:	e3540000 	cmp	r4, #0
4000ac04:	0a000003 	beq	4000ac18 <_txe_timer_change+0x28>
4000ac08:	e5940000 	ldr	r0, [r4]
4000ac0c:	e59f1058 	ldr	r1, [pc, #88]	; 4000ac6c <_txe_timer_change+0x7c>
4000ac10:	e1500001 	cmp	r0, r1
4000ac14:	0a000001 	beq	4000ac20 <_txe_timer_change+0x30>
4000ac18:	e3a00015 	mov	r0, #21
4000ac1c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ac20:	e3550000 	cmp	r5, #0
4000ac24:	1a000001 	bne	4000ac30 <_txe_timer_change+0x40>
4000ac28:	e3a00016 	mov	r0, #22
4000ac2c:	eafffffa 	b	4000ac1c <_txe_timer_change+0x2c>
4000ac30:	e59f0038 	ldr	r0, [pc, #56]	; 4000ac70 <_txe_timer_change+0x80>
4000ac34:	e5900000 	ldr	r0, [r0]
4000ac38:	e3c0000f 	bic	r0, r0, #15
4000ac3c:	e59f1030 	ldr	r1, [pc, #48]	; 4000ac74 <_txe_timer_change+0x84>
4000ac40:	e1500001 	cmp	r0, r1
4000ac44:	1a000001 	bne	4000ac50 <_txe_timer_change+0x60>
4000ac48:	e3a00013 	mov	r0, #19
4000ac4c:	eafffff2 	b	4000ac1c <_txe_timer_change+0x2c>
4000ac50:	e1a02006 	mov	r2, r6
4000ac54:	e1a01005 	mov	r1, r5
4000ac58:	e1a00004 	mov	r0, r4
4000ac5c:	eb0013d4 	bl	4000fbb4 <_tx_timer_change>
4000ac60:	e1a07000 	mov	r7, r0
4000ac64:	e1a00007 	mov	r0, r7
4000ac68:	eaffffeb 	b	4000ac1c <_txe_timer_change+0x2c>
4000ac6c:	4154494d 	.word	0x4154494d
4000ac70:	40030e2c 	.word	0x40030e2c
4000ac74:	f0f0f0f0 	.word	0xf0f0f0f0

4000ac78 <_txe_timer_create>:
4000ac78:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ac7c:	e24dd01c 	sub	sp, sp, #28
4000ac80:	e1a04000 	mov	r4, r0
4000ac84:	e1a05001 	mov	r5, r1
4000ac88:	e1a06002 	mov	r6, r2
4000ac8c:	e59d7050 	ldr	r7, [sp, #80]	; 0x50
4000ac90:	e59d805c 	ldr	r8, [sp, #92]	; 0x5c
4000ac94:	e3540000 	cmp	r4, #0
4000ac98:	0a000001 	beq	4000aca4 <_txe_timer_create+0x2c>
4000ac9c:	e358002c 	cmp	r8, #44	; 0x2c
4000aca0:	0a000002 	beq	4000acb0 <_txe_timer_create+0x38>
4000aca4:	e3a00015 	mov	r0, #21
4000aca8:	e28dd02c 	add	sp, sp, #44	; 0x2c
4000acac:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000acb0:	e10f9000 	mrs	r9, CPSR
4000acb4:	e389a080 	orr	sl, r9, #128	; 0x80
4000acb8:	e121f00a 	msr	CPSR_c, sl
4000acbc:	e59f0160 	ldr	r0, [pc, #352]	; 4000ae24 <_txe_timer_create+0x1ac>
4000acc0:	e5900000 	ldr	r0, [r0]
4000acc4:	e2800001 	add	r0, r0, #1
4000acc8:	e59f1154 	ldr	r1, [pc, #340]	; 4000ae24 <_txe_timer_create+0x1ac>
4000accc:	e5810000 	str	r0, [r1]
4000acd0:	e121f009 	msr	CPSR_c, r9
4000acd4:	e59f014c 	ldr	r0, [pc, #332]	; 4000ae28 <_txe_timer_create+0x1b0>
4000acd8:	e5900000 	ldr	r0, [r0]
4000acdc:	e58d0014 	str	r0, [sp, #20]
4000ace0:	e3a00000 	mov	r0, #0
4000ace4:	e58d0018 	str	r0, [sp, #24]
4000ace8:	ea000009 	b	4000ad14 <_txe_timer_create+0x9c>
4000acec:	e59d0014 	ldr	r0, [sp, #20]
4000acf0:	e1540000 	cmp	r4, r0
4000acf4:	1a000000 	bne	4000acfc <_txe_timer_create+0x84>
4000acf8:	ea00000a 	b	4000ad28 <_txe_timer_create+0xb0>
4000acfc:	e59d0014 	ldr	r0, [sp, #20]
4000ad00:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4000ad04:	e58d0014 	str	r0, [sp, #20]
4000ad08:	e59d0018 	ldr	r0, [sp, #24]
4000ad0c:	e2800001 	add	r0, r0, #1
4000ad10:	e58d0018 	str	r0, [sp, #24]
4000ad14:	e59f1110 	ldr	r1, [pc, #272]	; 4000ae2c <_txe_timer_create+0x1b4>
4000ad18:	e59d0018 	ldr	r0, [sp, #24]
4000ad1c:	e5911000 	ldr	r1, [r1]
4000ad20:	e1500001 	cmp	r0, r1
4000ad24:	3afffff0 	bcc	4000acec <_txe_timer_create+0x74>
4000ad28:	e1a00000 	nop			; (mov r0, r0)
4000ad2c:	e10f9000 	mrs	r9, CPSR
4000ad30:	e389a080 	orr	sl, r9, #128	; 0x80
4000ad34:	e121f00a 	msr	CPSR_c, sl
4000ad38:	e59f00e4 	ldr	r0, [pc, #228]	; 4000ae24 <_txe_timer_create+0x1ac>
4000ad3c:	e5900000 	ldr	r0, [r0]
4000ad40:	e2400001 	sub	r0, r0, #1
4000ad44:	e59f10d8 	ldr	r1, [pc, #216]	; 4000ae24 <_txe_timer_create+0x1ac>
4000ad48:	e5810000 	str	r0, [r1]
4000ad4c:	e121f009 	msr	CPSR_c, r9
4000ad50:	eb0011b4 	bl	4000f428 <_tx_thread_system_preempt_check>
4000ad54:	e59d0014 	ldr	r0, [sp, #20]
4000ad58:	e1540000 	cmp	r4, r0
4000ad5c:	1a000001 	bne	4000ad68 <_txe_timer_create+0xf0>
4000ad60:	e3a00015 	mov	r0, #21
4000ad64:	eaffffcf 	b	4000aca8 <_txe_timer_create+0x30>
4000ad68:	e3570000 	cmp	r7, #0
4000ad6c:	1a000001 	bne	4000ad78 <_txe_timer_create+0x100>
4000ad70:	e3a00016 	mov	r0, #22
4000ad74:	eaffffcb 	b	4000aca8 <_txe_timer_create+0x30>
4000ad78:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ad7c:	e3500001 	cmp	r0, #1
4000ad80:	0a000004 	beq	4000ad98 <_txe_timer_create+0x120>
4000ad84:	e59d0058 	ldr	r0, [sp, #88]	; 0x58
4000ad88:	e3500000 	cmp	r0, #0
4000ad8c:	0a000001 	beq	4000ad98 <_txe_timer_create+0x120>
4000ad90:	e3a00017 	mov	r0, #23
4000ad94:	eaffffc3 	b	4000aca8 <_txe_timer_create+0x30>
4000ad98:	e59f0090 	ldr	r0, [pc, #144]	; 4000ae30 <_txe_timer_create+0x1b8>
4000ad9c:	e5900000 	ldr	r0, [r0]
4000ada0:	e58d0010 	str	r0, [sp, #16]
4000ada4:	e59d0010 	ldr	r0, [sp, #16]
4000ada8:	e3500000 	cmp	r0, #0
4000adac:	0a000009 	beq	4000add8 <_txe_timer_create+0x160>
4000adb0:	e59f107c 	ldr	r1, [pc, #124]	; 4000ae34 <_txe_timer_create+0x1bc>
4000adb4:	e59d0010 	ldr	r0, [sp, #16]
4000adb8:	e1500001 	cmp	r0, r1
4000adbc:	0a000003 	beq	4000add0 <_txe_timer_create+0x158>
4000adc0:	e59f0070 	ldr	r0, [pc, #112]	; 4000ae38 <_txe_timer_create+0x1c0>
4000adc4:	e5900000 	ldr	r0, [r0]
4000adc8:	e3500000 	cmp	r0, #0
4000adcc:	0a000008 	beq	4000adf4 <_txe_timer_create+0x17c>
4000add0:	e3a00013 	mov	r0, #19
4000add4:	eaffffb3 	b	4000aca8 <_txe_timer_create+0x30>
4000add8:	e59f0058 	ldr	r0, [pc, #88]	; 4000ae38 <_txe_timer_create+0x1c0>
4000addc:	e5900000 	ldr	r0, [r0]
4000ade0:	e59f1054 	ldr	r1, [pc, #84]	; 4000ae3c <_txe_timer_create+0x1c4>
4000ade4:	e1500001 	cmp	r0, r1
4000ade8:	2a000001 	bcs	4000adf4 <_txe_timer_create+0x17c>
4000adec:	e3a00013 	mov	r0, #19
4000adf0:	eaffffac 	b	4000aca8 <_txe_timer_create+0x30>
4000adf4:	e59d2054 	ldr	r2, [sp, #84]	; 0x54
4000adf8:	e59d3058 	ldr	r3, [sp, #88]	; 0x58
4000adfc:	e98d000c 	stmib	sp, {r2, r3}
4000ae00:	e58d7000 	str	r7, [sp]
4000ae04:	e1a02006 	mov	r2, r6
4000ae08:	e1a01005 	mov	r1, r5
4000ae0c:	e1a00004 	mov	r0, r4
4000ae10:	e59d3028 	ldr	r3, [sp, #40]	; 0x28
4000ae14:	eb0013b1 	bl	4000fce0 <_tx_timer_create>
4000ae18:	e1a0b000 	mov	fp, r0
4000ae1c:	e1a0000b 	mov	r0, fp
4000ae20:	eaffffa0 	b	4000aca8 <_txe_timer_create+0x30>
4000ae24:	40030e50 	.word	0x40030e50
4000ae28:	40030e78 	.word	0x40030e78
4000ae2c:	40030e7c 	.word	0x40030e7c
4000ae30:	40030e34 	.word	0x40030e34
4000ae34:	40032974 	.word	0x40032974
4000ae38:	40030e2c 	.word	0x40030e2c
4000ae3c:	f0f0f0f0 	.word	0xf0f0f0f0

4000ae40 <_txe_timer_deactivate>:
4000ae40:	e92d4070 	push	{r4, r5, r6, lr}
4000ae44:	e1a04000 	mov	r4, r0
4000ae48:	e3540000 	cmp	r4, #0
4000ae4c:	0a000003 	beq	4000ae60 <_txe_timer_deactivate+0x20>
4000ae50:	e5940000 	ldr	r0, [r4]
4000ae54:	e59f1020 	ldr	r1, [pc, #32]	; 4000ae7c <_txe_timer_deactivate+0x3c>
4000ae58:	e1500001 	cmp	r0, r1
4000ae5c:	0a000001 	beq	4000ae68 <_txe_timer_deactivate+0x28>
4000ae60:	e3a00015 	mov	r0, #21
4000ae64:	e8bd8070 	pop	{r4, r5, r6, pc}
4000ae68:	e1a00004 	mov	r0, r4
4000ae6c:	eb00141a 	bl	4000fedc <_tx_timer_deactivate>
4000ae70:	e1a05000 	mov	r5, r0
4000ae74:	e1a00005 	mov	r0, r5
4000ae78:	eafffff9 	b	4000ae64 <_txe_timer_deactivate+0x24>
4000ae7c:	4154494d 	.word	0x4154494d

4000ae80 <_tx_thread_system_return>:
4000ae80:	e3a00000 	mov	r0, #0
4000ae84:	e10f1000 	mrs	r1, CPSR
4000ae88:	e92d4ff3 	push	{r0, r1, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ae8c:	e3812080 	orr	r2, r1, #128	; 0x80
4000ae90:	e12ff002 	msr	CPSR_fsxc, r2
4000ae94:	e59f302c 	ldr	r3, [pc, #44]	; 4000aec8 <_tx_thread_system_return+0x48>
4000ae98:	e5930000 	ldr	r0, [r3]
4000ae9c:	e59f2028 	ldr	r2, [pc, #40]	; 4000aecc <_tx_thread_system_return+0x4c>
4000aea0:	e5921000 	ldr	r1, [r2]
4000aea4:	e580d008 	str	sp, [r0, #8]
4000aea8:	e3a04000 	mov	r4, #0
4000aeac:	e3510000 	cmp	r1, #0
4000aeb0:	0a000002 	beq	4000aec0 <_tx_thread_system_return+0x40>
4000aeb4:	e590101c 	ldr	r1, [r0, #28]
4000aeb8:	e5824000 	str	r4, [r2]
4000aebc:	e5801018 	str	r1, [r0, #24]
4000aec0:	e5834000 	str	r4, [r3]
4000aec4:	ea000001 	b	4000aed0 <_tx_thread_schedule>
4000aec8:	40030e34 	.word	0x40030e34
4000aecc:	40030e60 	.word	0x40030e60

4000aed0 <_tx_thread_schedule>:
4000aed0:	e10f2000 	mrs	r2, CPSR
4000aed4:	e3c20080 	bic	r0, r2, #128	; 0x80
4000aed8:	e12ff000 	msr	CPSR_fsxc, r0
4000aedc:	e59f104c 	ldr	r1, [pc, #76]	; 4000af30 <_tx_thread_schedule+0x60>
4000aee0:	e5910000 	ldr	r0, [r1]
4000aee4:	e3500000 	cmp	r0, #0
4000aee8:	0afffffc 	beq	4000aee0 <_tx_thread_schedule+0x10>
4000aeec:	e12ff002 	msr	CPSR_fsxc, r2
4000aef0:	e59f103c 	ldr	r1, [pc, #60]	; 4000af34 <_tx_thread_schedule+0x64>
4000aef4:	e5810000 	str	r0, [r1]
4000aef8:	e5902004 	ldr	r2, [r0, #4]
4000aefc:	e5903018 	ldr	r3, [r0, #24]
4000af00:	e2822001 	add	r2, r2, #1
4000af04:	e5802004 	str	r2, [r0, #4]
4000af08:	e59f2028 	ldr	r2, [pc, #40]	; 4000af38 <_tx_thread_schedule+0x68>
4000af0c:	e590d008 	ldr	sp, [r0, #8]
4000af10:	e5823000 	str	r3, [r2]
4000af14:	e8bd0003 	pop	{r0, r1}
4000af18:	e3500000 	cmp	r0, #0
4000af1c:	116ff001 	msrne	SPSR_fsxc, r1
4000af20:	18fddfff 	ldmne	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}^
4000af24:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000af28:	e12ff001 	msr	CPSR_fsxc, r1
4000af2c:	e12fff1e 	bx	lr
4000af30:	40030e38 	.word	0x40030e38
4000af34:	40030e34 	.word	0x40030e34
4000af38:	40030e60 	.word	0x40030e60

4000af3c <_tx_thread_vectored_context_save>:
4000af3c:	e59f3044 	ldr	r3, [pc, #68]	; 4000af88 <_tx_thread_vectored_context_save+0x4c>
4000af40:	e5932000 	ldr	r2, [r3]
4000af44:	e3520000 	cmp	r2, #0
4000af48:	0a000003 	beq	4000af5c <_tx_thread_vectored_context_save+0x20>
4000af4c:	e2822001 	add	r2, r2, #1
4000af50:	e5832000 	str	r2, [r3]
4000af54:	e3a0a000 	mov	sl, #0
4000af58:	e12fff1e 	bx	lr
4000af5c:	e2822001 	add	r2, r2, #1
4000af60:	e5832000 	str	r2, [r3]
4000af64:	e59f1020 	ldr	r1, [pc, #32]	; 4000af8c <_tx_thread_vectored_context_save+0x50>
4000af68:	e5910000 	ldr	r0, [r1]
4000af6c:	e3500000 	cmp	r0, #0
4000af70:	0a000001 	beq	4000af7c <_tx_thread_vectored_context_save+0x40>
4000af74:	e3a0a000 	mov	sl, #0
4000af78:	e12fff1e 	bx	lr
4000af7c:	e3a0a000 	mov	sl, #0
4000af80:	e28dd020 	add	sp, sp, #32
4000af84:	e12fff1e 	bx	lr
4000af88:	40030e2c 	.word	0x40030e2c
4000af8c:	40030e34 	.word	0x40030e34

4000af90 <_tx_timer_interrupt>:
4000af90:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b064 <_tx_timer_interrupt+0xd4>
4000af94:	e5910000 	ldr	r0, [r1]
4000af98:	e2800001 	add	r0, r0, #1
4000af9c:	e5810000 	str	r0, [r1]
4000afa0:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b068 <_tx_timer_interrupt+0xd8>
4000afa4:	e5932000 	ldr	r2, [r3]
4000afa8:	e3520000 	cmp	r2, #0
4000afac:	0a000006 	beq	4000afcc <_tx_timer_interrupt+0x3c>
4000afb0:	e2422001 	sub	r2, r2, #1
4000afb4:	e5832000 	str	r2, [r3]
4000afb8:	e3520000 	cmp	r2, #0
4000afbc:	1a000002 	bne	4000afcc <_tx_timer_interrupt+0x3c>
4000afc0:	e59f30a4 	ldr	r3, [pc, #164]	; 4000b06c <_tx_timer_interrupt+0xdc>
4000afc4:	e3a00001 	mov	r0, #1
4000afc8:	e5830000 	str	r0, [r3]
4000afcc:	e59f109c 	ldr	r1, [pc, #156]	; 4000b070 <_tx_timer_interrupt+0xe0>
4000afd0:	e5910000 	ldr	r0, [r1]
4000afd4:	e5902000 	ldr	r2, [r0]
4000afd8:	e3520000 	cmp	r2, #0
4000afdc:	0a000003 	beq	4000aff0 <_tx_timer_interrupt+0x60>
4000afe0:	e59f308c 	ldr	r3, [pc, #140]	; 4000b074 <_tx_timer_interrupt+0xe4>
4000afe4:	e3a02001 	mov	r2, #1
4000afe8:	e5832000 	str	r2, [r3]
4000afec:	ea000007 	b	4000b010 <_tx_timer_interrupt+0x80>
4000aff0:	e2800004 	add	r0, r0, #4
4000aff4:	e59f307c 	ldr	r3, [pc, #124]	; 4000b078 <_tx_timer_interrupt+0xe8>
4000aff8:	e5932000 	ldr	r2, [r3]
4000affc:	e1500002 	cmp	r0, r2
4000b000:	1a000001 	bne	4000b00c <_tx_timer_interrupt+0x7c>
4000b004:	e59f3070 	ldr	r3, [pc, #112]	; 4000b07c <_tx_timer_interrupt+0xec>
4000b008:	e5930000 	ldr	r0, [r3]
4000b00c:	e5810000 	str	r0, [r1]
4000b010:	e59f3054 	ldr	r3, [pc, #84]	; 4000b06c <_tx_timer_interrupt+0xdc>
4000b014:	e5932000 	ldr	r2, [r3]
4000b018:	e3520000 	cmp	r2, #0
4000b01c:	1a000003 	bne	4000b030 <_tx_timer_interrupt+0xa0>
4000b020:	e59f104c 	ldr	r1, [pc, #76]	; 4000b074 <_tx_timer_interrupt+0xe4>
4000b024:	e5910000 	ldr	r0, [r1]
4000b028:	e3500000 	cmp	r0, #0
4000b02c:	0a00000b 	beq	4000b060 <_tx_timer_interrupt+0xd0>
4000b030:	e92d4001 	push	{r0, lr}
4000b034:	e59f1038 	ldr	r1, [pc, #56]	; 4000b074 <_tx_timer_interrupt+0xe4>
4000b038:	e5910000 	ldr	r0, [r1]
4000b03c:	e3500000 	cmp	r0, #0
4000b040:	0a000000 	beq	4000b048 <_tx_timer_interrupt+0xb8>
4000b044:	eb001441 	bl	40010150 <_tx_timer_expiration_process>
4000b048:	e59f301c 	ldr	r3, [pc, #28]	; 4000b06c <_tx_timer_interrupt+0xdc>
4000b04c:	e5932000 	ldr	r2, [r3]
4000b050:	e3520000 	cmp	r2, #0
4000b054:	0a000000 	beq	4000b05c <_tx_timer_interrupt+0xcc>
4000b058:	eb001210 	bl	4000f8a0 <_tx_thread_time_slice>
4000b05c:	e8bd4001 	pop	{r0, lr}
4000b060:	e12fff1e 	bx	lr
4000b064:	40030e5c 	.word	0x40030e5c
4000b068:	40030e60 	.word	0x40030e60
4000b06c:	40030e64 	.word	0x40030e64
4000b070:	40030e70 	.word	0x40030e70
4000b074:	40030e74 	.word	0x40030e74
4000b078:	40030e6c 	.word	0x40030e6c
4000b07c:	40030e68 	.word	0x40030e68

4000b080 <_tx_thread_context_restore>:
4000b080:	e10f3000 	mrs	r3, CPSR
4000b084:	e3830080 	orr	r0, r3, #128	; 0x80
4000b088:	e12ff000 	msr	CPSR_fsxc, r0
4000b08c:	e59f30f0 	ldr	r3, [pc, #240]	; 4000b184 <_tx_thread_context_restore+0x104>
4000b090:	e5932000 	ldr	r2, [r3]
4000b094:	e2422001 	sub	r2, r2, #1
4000b098:	e5832000 	str	r2, [r3]
4000b09c:	e3520000 	cmp	r2, #0
4000b0a0:	0a000003 	beq	4000b0b4 <_tx_thread_context_restore+0x34>
4000b0a4:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b0a8:	e16ff000 	msr	SPSR_fsxc, r0
4000b0ac:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b0b0:	e1b0f00e 	movs	pc, lr
4000b0b4:	e59f10cc 	ldr	r1, [pc, #204]	; 4000b188 <_tx_thread_context_restore+0x108>
4000b0b8:	e5910000 	ldr	r0, [r1]
4000b0bc:	e3500000 	cmp	r0, #0
4000b0c0:	0a00002a 	beq	4000b170 <_tx_thread_context_restore+0xf0>
4000b0c4:	e59f30c0 	ldr	r3, [pc, #192]	; 4000b18c <_tx_thread_context_restore+0x10c>
4000b0c8:	e5932000 	ldr	r2, [r3]
4000b0cc:	e3520000 	cmp	r2, #0
4000b0d0:	1a000003 	bne	4000b0e4 <_tx_thread_context_restore+0x64>
4000b0d4:	e59f30b4 	ldr	r3, [pc, #180]	; 4000b190 <_tx_thread_context_restore+0x110>
4000b0d8:	e5932000 	ldr	r2, [r3]
4000b0dc:	e1500002 	cmp	r0, r2
4000b0e0:	1a000003 	bne	4000b0f4 <_tx_thread_context_restore+0x74>
4000b0e4:	e8bd5401 	pop	{r0, sl, ip, lr}
4000b0e8:	e16ff000 	msr	SPSR_fsxc, r0
4000b0ec:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b0f0:	e1b0f00e 	movs	pc, lr
4000b0f4:	e8bd5408 	pop	{r3, sl, ip, lr}
4000b0f8:	e1a0100e 	mov	r1, lr
4000b0fc:	e3a020d3 	mov	r2, #211	; 0xd3
4000b100:	e121f002 	msr	CPSR_c, r2
4000b104:	e52d1004 	push	{r1}		; (str r1, [sp, #-4]!)
4000b108:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000b10c:	e1a04003 	mov	r4, r3
4000b110:	e3a020d2 	mov	r2, #210	; 0xd2
4000b114:	e121f002 	msr	CPSR_c, r2
4000b118:	e8bd000f 	pop	{r0, r1, r2, r3}
4000b11c:	e3a050d3 	mov	r5, #211	; 0xd3
4000b120:	e121f005 	msr	CPSR_c, r5
4000b124:	e92d000f 	push	{r0, r1, r2, r3}
4000b128:	e3a03001 	mov	r3, #1
4000b12c:	e92d0018 	push	{r3, r4}
4000b130:	e59f1050 	ldr	r1, [pc, #80]	; 4000b188 <_tx_thread_context_restore+0x108>
4000b134:	e5910000 	ldr	r0, [r1]
4000b138:	e580d008 	str	sp, [r0, #8]
4000b13c:	e3c44020 	bic	r4, r4, #32
4000b140:	e3843080 	orr	r3, r4, #128	; 0x80
4000b144:	e12ff003 	msr	CPSR_fsxc, r3
4000b148:	e59f3044 	ldr	r3, [pc, #68]	; 4000b194 <_tx_thread_context_restore+0x114>
4000b14c:	e5932000 	ldr	r2, [r3]
4000b150:	e3520000 	cmp	r2, #0
4000b154:	0a000002 	beq	4000b164 <_tx_thread_context_restore+0xe4>
4000b158:	e5802018 	str	r2, [r0, #24]
4000b15c:	e3a02000 	mov	r2, #0
4000b160:	e5832000 	str	r2, [r3]
4000b164:	e3a00000 	mov	r0, #0
4000b168:	e5810000 	str	r0, [r1]
4000b16c:	eaffff57 	b	4000aed0 <_tx_thread_schedule>
4000b170:	e10f3000 	mrs	r3, CPSR
4000b174:	e3c3301f 	bic	r3, r3, #31
4000b178:	e3833013 	orr	r3, r3, #19
4000b17c:	e12ff003 	msr	CPSR_fsxc, r3
4000b180:	eaffff52 	b	4000aed0 <_tx_thread_schedule>
4000b184:	40030e2c 	.word	0x40030e2c
4000b188:	40030e34 	.word	0x40030e34
4000b18c:	40030e50 	.word	0x40030e50
4000b190:	40030e38 	.word	0x40030e38
4000b194:	40030e60 	.word	0x40030e60

4000b198 <_tx_thread_irq_nesting_end>:
4000b198:	e1a0300e 	mov	r3, lr
4000b19c:	e10f0000 	mrs	r0, CPSR
4000b1a0:	e3800080 	orr	r0, r0, #128	; 0x80
4000b1a4:	e12ff000 	msr	CPSR_fsxc, r0
4000b1a8:	e8bd4002 	pop	{r1, lr}
4000b1ac:	e3c0001f 	bic	r0, r0, #31
4000b1b0:	e3800012 	orr	r0, r0, #18
4000b1b4:	e12ff000 	msr	CPSR_fsxc, r0
4000b1b8:	e12fff13 	bx	r3

4000b1bc <_tx_thread_irq_nesting_start>:
4000b1bc:	e1a0300e 	mov	r3, lr
4000b1c0:	e10f0000 	mrs	r0, CPSR
4000b1c4:	e3c0001f 	bic	r0, r0, #31
4000b1c8:	e380001f 	orr	r0, r0, #31
4000b1cc:	e12ff000 	msr	CPSR_fsxc, r0
4000b1d0:	e92d4002 	push	{r1, lr}
4000b1d4:	e3c00080 	bic	r0, r0, #128	; 0x80
4000b1d8:	e12ff000 	msr	CPSR_fsxc, r0
4000b1dc:	e12fff13 	bx	r3

4000b1e0 <_tx_initialize_low_level>:
4000b1e0:	e1a0100d 	mov	r1, sp
4000b1e4:	e59f3024 	ldr	r3, [pc, #36]	; 4000b210 <_tx_initialize_low_level+0x30>
4000b1e8:	e5831000 	str	r1, [r3]
4000b1ec:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4000b1f0:	e3a00000 	mov	r0, #0
4000b1f4:	eb005be0 	bl	4002217c <CyU3POsTimerInit>
4000b1f8:	e49de004 	pop	{lr}		; (ldr lr, [sp], #4)
4000b1fc:	e12fff1e 	bx	lr
4000b200:	e59f200c 	ldr	r2, [pc, #12]	; 4000b214 <_tx_initialize_low_level+0x34>
4000b204:	e5920000 	ldr	r0, [r2]
4000b208:	e59f2008 	ldr	r2, [pc, #8]	; 4000b218 <_tx_initialize_low_level+0x38>
4000b20c:	e5920000 	ldr	r0, [r2]
4000b210:	40030e30 	.word	0x40030e30
4000b214:	40030e54 	.word	0x40030e54
4000b218:	40030dc8 	.word	0x40030dc8

4000b21c <_tx_byte_allocate>:
4000b21c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000b220:	e1a04000 	mov	r4, r0
4000b224:	e1a05001 	mov	r5, r1
4000b228:	e1a06002 	mov	r6, r2
4000b22c:	e1a07003 	mov	r7, r3
4000b230:	e3a00000 	mov	r0, #0
4000b234:	e58d0000 	str	r0, [sp]
4000b238:	e59f027c 	ldr	r0, [pc, #636]	; 4000b4bc <_tx_byte_allocate+0x2a0>
4000b23c:	e590a000 	ldr	sl, [r0]
4000b240:	e10f8000 	mrs	r8, CPSR
4000b244:	e3889080 	orr	r9, r8, #128	; 0x80
4000b248:	e121f009 	msr	CPSR_c, r9
4000b24c:	e2860003 	add	r0, r6, #3
4000b250:	e1a00120 	lsr	r0, r0, #2
4000b254:	e1a06100 	lsl	r6, r0, #2
4000b258:	e59f0260 	ldr	r0, [pc, #608]	; 4000b4c0 <_tx_byte_allocate+0x2a4>
4000b25c:	e5900000 	ldr	r0, [r0]
4000b260:	e58d0004 	str	r0, [sp, #4]
4000b264:	e59f1254 	ldr	r1, [pc, #596]	; 4000b4c0 <_tx_byte_allocate+0x2a4>
4000b268:	e5910000 	ldr	r0, [r1]
4000b26c:	e3500000 	cmp	r0, #0
4000b270:	0a000031 	beq	4000b33c <_tx_byte_allocate+0x120>
4000b274:	e59f1248 	ldr	r1, [pc, #584]	; 4000b4c4 <_tx_byte_allocate+0x2a8>
4000b278:	e5911000 	ldr	r1, [r1]
4000b27c:	e2811001 	add	r1, r1, #1
4000b280:	e59f223c 	ldr	r2, [pc, #572]	; 4000b4c4 <_tx_byte_allocate+0x2a8>
4000b284:	e5821000 	str	r1, [r2]
4000b288:	e580100c 	str	r1, [r0, #12]
4000b28c:	e59f1234 	ldr	r1, [pc, #564]	; 4000b4c8 <_tx_byte_allocate+0x2ac>
4000b290:	e5911000 	ldr	r1, [r1]
4000b294:	e3510000 	cmp	r1, #0
4000b298:	1a000006 	bne	4000b2b8 <_tx_byte_allocate+0x9c>
4000b29c:	e59f1218 	ldr	r1, [pc, #536]	; 4000b4bc <_tx_byte_allocate+0x2a0>
4000b2a0:	e5911000 	ldr	r1, [r1]
4000b2a4:	e5801000 	str	r1, [r0]
4000b2a8:	e5901000 	ldr	r1, [r0]
4000b2ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b2b0:	e5801004 	str	r1, [r0, #4]
4000b2b4:	ea00000d 	b	4000b2f0 <_tx_byte_allocate+0xd4>
4000b2b8:	e59f1208 	ldr	r1, [pc, #520]	; 4000b4c8 <_tx_byte_allocate+0x2ac>
4000b2bc:	e5911000 	ldr	r1, [r1]
4000b2c0:	e59f2204 	ldr	r2, [pc, #516]	; 4000b4cc <_tx_byte_allocate+0x2b0>
4000b2c4:	e1510002 	cmp	r1, r2
4000b2c8:	2a000004 	bcs	4000b2e0 <_tx_byte_allocate+0xc4>
4000b2cc:	e3e01000 	mvn	r1, #0
4000b2d0:	e5801000 	str	r1, [r0]
4000b2d4:	e3a01000 	mov	r1, #0
4000b2d8:	e5801004 	str	r1, [r0, #4]
4000b2dc:	ea000003 	b	4000b2f0 <_tx_byte_allocate+0xd4>
4000b2e0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000b4cc <_tx_byte_allocate+0x2b0>
4000b2e4:	e5801000 	str	r1, [r0]
4000b2e8:	e3a01000 	mov	r1, #0
4000b2ec:	e5801004 	str	r1, [r0, #4]
4000b2f0:	e3a01014 	mov	r1, #20
4000b2f4:	e5801008 	str	r1, [r0, #8]
4000b2f8:	e5804010 	str	r4, [r0, #16]
4000b2fc:	e3a01000 	mov	r1, #0
4000b300:	e5801014 	str	r1, [r0, #20]
4000b304:	e5806018 	str	r6, [r0, #24]
4000b308:	e580701c 	str	r7, [r0, #28]
4000b30c:	e2800020 	add	r0, r0, #32
4000b310:	e59f11b8 	ldr	r1, [pc, #440]	; 4000b4d0 <_tx_byte_allocate+0x2b4>
4000b314:	e5911000 	ldr	r1, [r1]
4000b318:	e1500001 	cmp	r0, r1
4000b31c:	3a000001 	bcc	4000b328 <_tx_byte_allocate+0x10c>
4000b320:	e59f11ac 	ldr	r1, [pc, #428]	; 4000b4d4 <_tx_byte_allocate+0x2b8>
4000b324:	e5910000 	ldr	r0, [r1]
4000b328:	e59f1190 	ldr	r1, [pc, #400]	; 4000b4c0 <_tx_byte_allocate+0x2a4>
4000b32c:	e5810000 	str	r0, [r1]
4000b330:	e59f11a0 	ldr	r1, [pc, #416]	; 4000b4d8 <_tx_byte_allocate+0x2bc>
4000b334:	e5911000 	ldr	r1, [r1]
4000b338:	e5810020 	str	r0, [r1, #32]
4000b33c:	e59d0004 	ldr	r0, [sp, #4]
4000b340:	e3500000 	cmp	r0, #0
4000b344:	0a000002 	beq	4000b354 <_tx_byte_allocate+0x138>
4000b348:	e59d0004 	ldr	r0, [sp, #4]
4000b34c:	e590000c 	ldr	r0, [r0, #12]
4000b350:	e58d0000 	str	r0, [sp]
4000b354:	e1a00000 	nop			; (mov r0, r0)
4000b358:	e584a020 	str	sl, [r4, #32]
4000b35c:	e121f008 	msr	CPSR_c, r8
4000b360:	e1a01006 	mov	r1, r6
4000b364:	e1a00004 	mov	r0, r4
4000b368:	eb0001ba 	bl	4000ba58 <_tx_byte_pool_search>
4000b36c:	e1a0b000 	mov	fp, r0
4000b370:	e10f8000 	mrs	r8, CPSR
4000b374:	e3889080 	orr	r9, r8, #128	; 0x80
4000b378:	e121f009 	msr	CPSR_c, r9
4000b37c:	e35b0000 	cmp	fp, #0
4000b380:	1a000002 	bne	4000b390 <_tx_byte_allocate+0x174>
4000b384:	e5940020 	ldr	r0, [r4, #32]
4000b388:	e150000a 	cmp	r0, sl
4000b38c:	1afffff1 	bne	4000b358 <_tx_byte_allocate+0x13c>
4000b390:	e35b0000 	cmp	fp, #0
4000b394:	0a00000e 	beq	4000b3d4 <_tx_byte_allocate+0x1b8>
4000b398:	e585b000 	str	fp, [r5]
4000b39c:	e59d0004 	ldr	r0, [sp, #4]
4000b3a0:	e3500000 	cmp	r0, #0
4000b3a4:	0a000007 	beq	4000b3c8 <_tx_byte_allocate+0x1ac>
4000b3a8:	e59d0004 	ldr	r0, [sp, #4]
4000b3ac:	e590100c 	ldr	r1, [r0, #12]
4000b3b0:	e59d0000 	ldr	r0, [sp]
4000b3b4:	e1510000 	cmp	r1, r0
4000b3b8:	1a000002 	bne	4000b3c8 <_tx_byte_allocate+0x1ac>
4000b3bc:	e5950000 	ldr	r0, [r5]
4000b3c0:	e59d1004 	ldr	r1, [sp, #4]
4000b3c4:	e5810014 	str	r0, [r1, #20]
4000b3c8:	e3a00000 	mov	r0, #0
4000b3cc:	e58d0008 	str	r0, [sp, #8]
4000b3d0:	ea000036 	b	4000b4b0 <_tx_byte_allocate+0x294>
4000b3d4:	e3570000 	cmp	r7, #0
4000b3d8:	0a000032 	beq	4000b4a8 <_tx_byte_allocate+0x28c>
4000b3dc:	e59f00f8 	ldr	r0, [pc, #248]	; 4000b4dc <_tx_byte_allocate+0x2c0>
4000b3e0:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000b3e4:	e58a406c 	str	r4, [sl, #108]	; 0x6c
4000b3e8:	e58a507c 	str	r5, [sl, #124]	; 0x7c
4000b3ec:	e58a6078 	str	r6, [sl, #120]	; 0x78
4000b3f0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b3f4:	e3500000 	cmp	r0, #0
4000b3f8:	0a00000a 	beq	4000b428 <_tx_byte_allocate+0x20c>
4000b3fc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b400:	e58a0070 	str	r0, [sl, #112]	; 0x70
4000b404:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b408:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b40c:	e58a0074 	str	r0, [sl, #116]	; 0x74
4000b410:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b414:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000b418:	e580a070 	str	sl, [r0, #112]	; 0x70
4000b41c:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b420:	e580a074 	str	sl, [r0, #116]	; 0x74
4000b424:	ea000002 	b	4000b434 <_tx_byte_allocate+0x218>
4000b428:	e584a024 	str	sl, [r4, #36]	; 0x24
4000b42c:	e58aa070 	str	sl, [sl, #112]	; 0x70
4000b430:	e58aa074 	str	sl, [sl, #116]	; 0x74
4000b434:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b438:	e2800001 	add	r0, r0, #1
4000b43c:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b440:	e3a00009 	mov	r0, #9
4000b444:	e58a0030 	str	r0, [sl, #48]	; 0x30
4000b448:	e3a00001 	mov	r0, #1
4000b44c:	e58a0038 	str	r0, [sl, #56]	; 0x38
4000b450:	e58a704c 	str	r7, [sl, #76]	; 0x4c
4000b454:	e59f0084 	ldr	r0, [pc, #132]	; 4000b4e0 <_tx_byte_allocate+0x2c4>
4000b458:	e5900000 	ldr	r0, [r0]
4000b45c:	e2800001 	add	r0, r0, #1
4000b460:	e59f1078 	ldr	r1, [pc, #120]	; 4000b4e0 <_tx_byte_allocate+0x2c4>
4000b464:	e5810000 	str	r0, [r1]
4000b468:	e121f008 	msr	CPSR_c, r8
4000b46c:	e1a0000a 	mov	r0, sl
4000b470:	ebfff671 	bl	40008e3c <_tx_thread_system_suspend>
4000b474:	e59d0004 	ldr	r0, [sp, #4]
4000b478:	e3500000 	cmp	r0, #0
4000b47c:	0a000007 	beq	4000b4a0 <_tx_byte_allocate+0x284>
4000b480:	e59d0004 	ldr	r0, [sp, #4]
4000b484:	e590100c 	ldr	r1, [r0, #12]
4000b488:	e59d0000 	ldr	r0, [sp]
4000b48c:	e1510000 	cmp	r1, r0
4000b490:	1a000002 	bne	4000b4a0 <_tx_byte_allocate+0x284>
4000b494:	e5950000 	ldr	r0, [r5]
4000b498:	e59d1004 	ldr	r1, [sp, #4]
4000b49c:	e5810014 	str	r0, [r1, #20]
4000b4a0:	e59a0084 	ldr	r0, [sl, #132]	; 0x84
4000b4a4:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000b4a8:	e3a00010 	mov	r0, #16
4000b4ac:	e58d0008 	str	r0, [sp, #8]
4000b4b0:	e121f008 	msr	CPSR_c, r8
4000b4b4:	e59d0008 	ldr	r0, [sp, #8]
4000b4b8:	eafffff9 	b	4000b4a4 <_tx_byte_allocate+0x288>
4000b4bc:	40030e34 	.word	0x40030e34
4000b4c0:	40030ea0 	.word	0x40030ea0
4000b4c4:	40030ea4 	.word	0x40030ea4
4000b4c8:	40030e2c 	.word	0x40030e2c
4000b4cc:	f0f0f0f0 	.word	0xf0f0f0f0
4000b4d0:	40030e9c 	.word	0x40030e9c
4000b4d4:	40030e98 	.word	0x40030e98
4000b4d8:	40030e8c 	.word	0x40030e8c
4000b4dc:	4000b4e4 	.word	0x4000b4e4
4000b4e0:	40030e50 	.word	0x40030e50

4000b4e4 <_tx_byte_pool_cleanup>:
4000b4e4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000b4e8:	e1a04000 	mov	r4, r0
4000b4ec:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
4000b4f0:	e10f5000 	mrs	r5, CPSR
4000b4f4:	e3856080 	orr	r6, r5, #128	; 0x80
4000b4f8:	e121f006 	msr	CPSR_c, r6
4000b4fc:	e5940068 	ldr	r0, [r4, #104]	; 0x68
4000b500:	e3500000 	cmp	r0, #0
4000b504:	0a000026 	beq	4000b5a4 <_tx_byte_pool_cleanup+0xc0>
4000b508:	e3570000 	cmp	r7, #0
4000b50c:	0a000024 	beq	4000b5a4 <_tx_byte_pool_cleanup+0xc0>
4000b510:	e5970000 	ldr	r0, [r7]
4000b514:	e59f1090 	ldr	r1, [pc, #144]	; 4000b5ac <_tx_byte_pool_cleanup+0xc8>
4000b518:	e1500001 	cmp	r0, r1
4000b51c:	1a000020 	bne	4000b5a4 <_tx_byte_pool_cleanup+0xc0>
4000b520:	e3a00000 	mov	r0, #0
4000b524:	e5840068 	str	r0, [r4, #104]	; 0x68
4000b528:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b52c:	e1500004 	cmp	r0, r4
4000b530:	1a000002 	bne	4000b540 <_tx_byte_pool_cleanup+0x5c>
4000b534:	e3a00000 	mov	r0, #0
4000b538:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b53c:	ea000007 	b	4000b560 <_tx_byte_pool_cleanup+0x7c>
4000b540:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b544:	e5870024 	str	r0, [r7, #36]	; 0x24
4000b548:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4000b54c:	e5941070 	ldr	r1, [r4, #112]	; 0x70
4000b550:	e5810074 	str	r0, [r1, #116]	; 0x74
4000b554:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4000b558:	e5941074 	ldr	r1, [r4, #116]	; 0x74
4000b55c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000b560:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000b564:	e2400001 	sub	r0, r0, #1
4000b568:	e5870028 	str	r0, [r7, #40]	; 0x28
4000b56c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b570:	e3500009 	cmp	r0, #9
4000b574:	1a00000a 	bne	4000b5a4 <_tx_byte_pool_cleanup+0xc0>
4000b578:	e3a00010 	mov	r0, #16
4000b57c:	e5840084 	str	r0, [r4, #132]	; 0x84
4000b580:	e59f0028 	ldr	r0, [pc, #40]	; 4000b5b0 <_tx_byte_pool_cleanup+0xcc>
4000b584:	e5900000 	ldr	r0, [r0]
4000b588:	e2800001 	add	r0, r0, #1
4000b58c:	e59f101c 	ldr	r1, [pc, #28]	; 4000b5b0 <_tx_byte_pool_cleanup+0xcc>
4000b590:	e5810000 	str	r0, [r1]
4000b594:	e121f005 	msr	CPSR_c, r5
4000b598:	e1a00004 	mov	r0, r4
4000b59c:	eb000fcd 	bl	4000f4d8 <_tx_thread_system_resume>
4000b5a0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000b5a4:	e121f005 	msr	CPSR_c, r5
4000b5a8:	eafffffc 	b	4000b5a0 <_tx_byte_pool_cleanup+0xbc>
4000b5ac:	42595445 	.word	0x42595445
4000b5b0:	40030e50 	.word	0x40030e50

4000b5b4 <_tx_byte_pool_create>:
4000b5b4:	e92d47fc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
4000b5b8:	e1a04000 	mov	r4, r0
4000b5bc:	e1a05001 	mov	r5, r1
4000b5c0:	e1a06002 	mov	r6, r2
4000b5c4:	e1a07003 	mov	r7, r3
4000b5c8:	e3a01034 	mov	r1, #52	; 0x34
4000b5cc:	e1a00004 	mov	r0, r4
4000b5d0:	eb0020dc 	bl	40013948 <__aeabi_memclr4>
4000b5d4:	e1a00127 	lsr	r0, r7, #2
4000b5d8:	e1a07100 	lsl	r7, r0, #2
4000b5dc:	e5845004 	str	r5, [r4, #4]
4000b5e0:	e5846018 	str	r6, [r4, #24]
4000b5e4:	e584701c 	str	r7, [r4, #28]
4000b5e8:	e5846010 	str	r6, [r4, #16]
4000b5ec:	e5846014 	str	r6, [r4, #20]
4000b5f0:	e2470008 	sub	r0, r7, #8
4000b5f4:	e5840008 	str	r0, [r4, #8]
4000b5f8:	e3a00002 	mov	r0, #2
4000b5fc:	e584000c 	str	r0, [r4, #12]
4000b600:	e0860007 	add	r0, r6, r7
4000b604:	e58d0004 	str	r0, [sp, #4]
4000b608:	e59d0004 	ldr	r0, [sp, #4]
4000b60c:	e2400004 	sub	r0, r0, #4
4000b610:	e58d0004 	str	r0, [sp, #4]
4000b614:	e59f01bc 	ldr	r0, [pc, #444]	; 4000b7d8 <_tx_byte_pool_create+0x224>
4000b618:	e59d1004 	ldr	r1, [sp, #4]
4000b61c:	e5810000 	str	r0, [r1]
4000b620:	e59d0004 	ldr	r0, [sp, #4]
4000b624:	e2400004 	sub	r0, r0, #4
4000b628:	e58d0004 	str	r0, [sp, #4]
4000b62c:	e59d0004 	ldr	r0, [sp, #4]
4000b630:	e5806000 	str	r6, [r0]
4000b634:	e59d0004 	ldr	r0, [sp, #4]
4000b638:	e5860000 	str	r0, [r6]
4000b63c:	e58d6004 	str	r6, [sp, #4]
4000b640:	e59d0004 	ldr	r0, [sp, #4]
4000b644:	e2800004 	add	r0, r0, #4
4000b648:	e58d0004 	str	r0, [sp, #4]
4000b64c:	e59f0188 	ldr	r0, [pc, #392]	; 4000b7dc <_tx_byte_pool_create+0x228>
4000b650:	e59d1004 	ldr	r1, [sp, #4]
4000b654:	e5810000 	str	r0, [r1]
4000b658:	e3a00000 	mov	r0, #0
4000b65c:	e5840020 	str	r0, [r4, #32]
4000b660:	e10f8000 	mrs	r8, CPSR
4000b664:	e3889080 	orr	r9, r8, #128	; 0x80
4000b668:	e121f009 	msr	CPSR_c, r9
4000b66c:	e59f016c 	ldr	r0, [pc, #364]	; 4000b7e0 <_tx_byte_pool_create+0x22c>
4000b670:	e5840000 	str	r0, [r4]
4000b674:	e59f0168 	ldr	r0, [pc, #360]	; 4000b7e4 <_tx_byte_pool_create+0x230>
4000b678:	e5900000 	ldr	r0, [r0]
4000b67c:	e3500000 	cmp	r0, #0
4000b680:	0a00000b 	beq	4000b6b4 <_tx_byte_pool_create+0x100>
4000b684:	e59f0158 	ldr	r0, [pc, #344]	; 4000b7e4 <_tx_byte_pool_create+0x230>
4000b688:	e5900000 	ldr	r0, [r0]
4000b68c:	e590a030 	ldr	sl, [r0, #48]	; 0x30
4000b690:	e59f014c 	ldr	r0, [pc, #332]	; 4000b7e4 <_tx_byte_pool_create+0x230>
4000b694:	e5900000 	ldr	r0, [r0]
4000b698:	e5804030 	str	r4, [r0, #48]	; 0x30
4000b69c:	e58a402c 	str	r4, [sl, #44]	; 0x2c
4000b6a0:	e584a030 	str	sl, [r4, #48]	; 0x30
4000b6a4:	e59f0138 	ldr	r0, [pc, #312]	; 4000b7e4 <_tx_byte_pool_create+0x230>
4000b6a8:	e5900000 	ldr	r0, [r0]
4000b6ac:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000b6b0:	ea000003 	b	4000b6c4 <_tx_byte_pool_create+0x110>
4000b6b4:	e59f0128 	ldr	r0, [pc, #296]	; 4000b7e4 <_tx_byte_pool_create+0x230>
4000b6b8:	e5804000 	str	r4, [r0]
4000b6bc:	e584402c 	str	r4, [r4, #44]	; 0x2c
4000b6c0:	e5844030 	str	r4, [r4, #48]	; 0x30
4000b6c4:	e59f011c 	ldr	r0, [pc, #284]	; 4000b7e8 <_tx_byte_pool_create+0x234>
4000b6c8:	e5900000 	ldr	r0, [r0]
4000b6cc:	e2800001 	add	r0, r0, #1
4000b6d0:	e59f1110 	ldr	r1, [pc, #272]	; 4000b7e8 <_tx_byte_pool_create+0x234>
4000b6d4:	e5810000 	str	r0, [r1]
4000b6d8:	e3a03000 	mov	r3, #0
4000b6dc:	e58d3000 	str	r3, [sp]
4000b6e0:	e1a03007 	mov	r3, r7
4000b6e4:	e1a02005 	mov	r2, r5
4000b6e8:	e1a01004 	mov	r1, r4
4000b6ec:	e3a00008 	mov	r0, #8
4000b6f0:	eb0012ce 	bl	40010230 <_tx_trace_object_register>
4000b6f4:	e59f10f0 	ldr	r1, [pc, #240]	; 4000b7ec <_tx_byte_pool_create+0x238>
4000b6f8:	e5910000 	ldr	r0, [r1]
4000b6fc:	e3500000 	cmp	r0, #0
4000b700:	0a000031 	beq	4000b7cc <_tx_byte_pool_create+0x218>
4000b704:	e59f10e4 	ldr	r1, [pc, #228]	; 4000b7f0 <_tx_byte_pool_create+0x23c>
4000b708:	e5911000 	ldr	r1, [r1]
4000b70c:	e2811001 	add	r1, r1, #1
4000b710:	e59f20d8 	ldr	r2, [pc, #216]	; 4000b7f0 <_tx_byte_pool_create+0x23c>
4000b714:	e5821000 	str	r1, [r2]
4000b718:	e580100c 	str	r1, [r0, #12]
4000b71c:	e59f10d0 	ldr	r1, [pc, #208]	; 4000b7f4 <_tx_byte_pool_create+0x240>
4000b720:	e5911000 	ldr	r1, [r1]
4000b724:	e3510000 	cmp	r1, #0
4000b728:	1a000006 	bne	4000b748 <_tx_byte_pool_create+0x194>
4000b72c:	e59f10c4 	ldr	r1, [pc, #196]	; 4000b7f8 <_tx_byte_pool_create+0x244>
4000b730:	e5911000 	ldr	r1, [r1]
4000b734:	e5801000 	str	r1, [r0]
4000b738:	e5901000 	ldr	r1, [r0]
4000b73c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b740:	e5801004 	str	r1, [r0, #4]
4000b744:	ea00000d 	b	4000b780 <_tx_byte_pool_create+0x1cc>
4000b748:	e59f10a4 	ldr	r1, [pc, #164]	; 4000b7f4 <_tx_byte_pool_create+0x240>
4000b74c:	e5911000 	ldr	r1, [r1]
4000b750:	e59f20a4 	ldr	r2, [pc, #164]	; 4000b7fc <_tx_byte_pool_create+0x248>
4000b754:	e1510002 	cmp	r1, r2
4000b758:	2a000004 	bcs	4000b770 <_tx_byte_pool_create+0x1bc>
4000b75c:	e3e01000 	mvn	r1, #0
4000b760:	e5801000 	str	r1, [r0]
4000b764:	e3a01000 	mov	r1, #0
4000b768:	e5801004 	str	r1, [r0, #4]
4000b76c:	ea000003 	b	4000b780 <_tx_byte_pool_create+0x1cc>
4000b770:	e59f1084 	ldr	r1, [pc, #132]	; 4000b7fc <_tx_byte_pool_create+0x248>
4000b774:	e5801000 	str	r1, [r0]
4000b778:	e3a01000 	mov	r1, #0
4000b77c:	e5801004 	str	r1, [r0, #4]
4000b780:	e3a01015 	mov	r1, #21
4000b784:	e5801008 	str	r1, [r0, #8]
4000b788:	e5804010 	str	r4, [r0, #16]
4000b78c:	e5806014 	str	r6, [r0, #20]
4000b790:	e5807018 	str	r7, [r0, #24]
4000b794:	e28d1004 	add	r1, sp, #4
4000b798:	e580101c 	str	r1, [r0, #28]
4000b79c:	e2800020 	add	r0, r0, #32
4000b7a0:	e59f1058 	ldr	r1, [pc, #88]	; 4000b800 <_tx_byte_pool_create+0x24c>
4000b7a4:	e5911000 	ldr	r1, [r1]
4000b7a8:	e1500001 	cmp	r0, r1
4000b7ac:	3a000001 	bcc	4000b7b8 <_tx_byte_pool_create+0x204>
4000b7b0:	e59f104c 	ldr	r1, [pc, #76]	; 4000b804 <_tx_byte_pool_create+0x250>
4000b7b4:	e5910000 	ldr	r0, [r1]
4000b7b8:	e59f102c 	ldr	r1, [pc, #44]	; 4000b7ec <_tx_byte_pool_create+0x238>
4000b7bc:	e5810000 	str	r0, [r1]
4000b7c0:	e59f1040 	ldr	r1, [pc, #64]	; 4000b808 <_tx_byte_pool_create+0x254>
4000b7c4:	e5911000 	ldr	r1, [r1]
4000b7c8:	e5810020 	str	r0, [r1, #32]
4000b7cc:	e121f008 	msr	CPSR_c, r8
4000b7d0:	e3a00000 	mov	r0, #0
4000b7d4:	e8bd87fc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
4000b7d8:	aaaaaaaa 	.word	0xaaaaaaaa
4000b7dc:	ffffeeee 	.word	0xffffeeee
4000b7e0:	42595445 	.word	0x42595445
4000b7e4:	40030ed0 	.word	0x40030ed0
4000b7e8:	40030ed4 	.word	0x40030ed4
4000b7ec:	40030ea0 	.word	0x40030ea0
4000b7f0:	40030ea4 	.word	0x40030ea4
4000b7f4:	40030e2c 	.word	0x40030e2c
4000b7f8:	40030e34 	.word	0x40030e34
4000b7fc:	f0f0f0f0 	.word	0xf0f0f0f0
4000b800:	40030e9c 	.word	0x40030e9c
4000b804:	40030e98 	.word	0x40030e98
4000b808:	40030e8c 	.word	0x40030e8c

4000b80c <_tx_byte_pool_delete>:
4000b80c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000b810:	e1a04000 	mov	r4, r0
4000b814:	e10f5000 	mrs	r5, CPSR
4000b818:	e3856080 	orr	r6, r5, #128	; 0x80
4000b81c:	e121f006 	msr	CPSR_c, r6
4000b820:	e59f1204 	ldr	r1, [pc, #516]	; 4000ba2c <_tx_byte_pool_delete+0x220>
4000b824:	e5910000 	ldr	r0, [r1]
4000b828:	e3500000 	cmp	r0, #0
4000b82c:	0a000031 	beq	4000b8f8 <_tx_byte_pool_delete+0xec>
4000b830:	e59f11f8 	ldr	r1, [pc, #504]	; 4000ba30 <_tx_byte_pool_delete+0x224>
4000b834:	e5911000 	ldr	r1, [r1]
4000b838:	e2811001 	add	r1, r1, #1
4000b83c:	e59f21ec 	ldr	r2, [pc, #492]	; 4000ba30 <_tx_byte_pool_delete+0x224>
4000b840:	e5821000 	str	r1, [r2]
4000b844:	e580100c 	str	r1, [r0, #12]
4000b848:	e59f11e4 	ldr	r1, [pc, #484]	; 4000ba34 <_tx_byte_pool_delete+0x228>
4000b84c:	e5911000 	ldr	r1, [r1]
4000b850:	e3510000 	cmp	r1, #0
4000b854:	1a000006 	bne	4000b874 <_tx_byte_pool_delete+0x68>
4000b858:	e59f11d8 	ldr	r1, [pc, #472]	; 4000ba38 <_tx_byte_pool_delete+0x22c>
4000b85c:	e5911000 	ldr	r1, [r1]
4000b860:	e5801000 	str	r1, [r0]
4000b864:	e5901000 	ldr	r1, [r0]
4000b868:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000b86c:	e5801004 	str	r1, [r0, #4]
4000b870:	ea00000d 	b	4000b8ac <_tx_byte_pool_delete+0xa0>
4000b874:	e59f11b8 	ldr	r1, [pc, #440]	; 4000ba34 <_tx_byte_pool_delete+0x228>
4000b878:	e5911000 	ldr	r1, [r1]
4000b87c:	e59f21b8 	ldr	r2, [pc, #440]	; 4000ba3c <_tx_byte_pool_delete+0x230>
4000b880:	e1510002 	cmp	r1, r2
4000b884:	2a000004 	bcs	4000b89c <_tx_byte_pool_delete+0x90>
4000b888:	e3e01000 	mvn	r1, #0
4000b88c:	e5801000 	str	r1, [r0]
4000b890:	e3a01000 	mov	r1, #0
4000b894:	e5801004 	str	r1, [r0, #4]
4000b898:	ea000003 	b	4000b8ac <_tx_byte_pool_delete+0xa0>
4000b89c:	e59f1198 	ldr	r1, [pc, #408]	; 4000ba3c <_tx_byte_pool_delete+0x230>
4000b8a0:	e5801000 	str	r1, [r0]
4000b8a4:	e3a01000 	mov	r1, #0
4000b8a8:	e5801004 	str	r1, [r0, #4]
4000b8ac:	e3a01016 	mov	r1, #22
4000b8b0:	e5801008 	str	r1, [r0, #8]
4000b8b4:	e5804010 	str	r4, [r0, #16]
4000b8b8:	e580d014 	str	sp, [r0, #20]
4000b8bc:	e3a01000 	mov	r1, #0
4000b8c0:	e5801018 	str	r1, [r0, #24]
4000b8c4:	e580101c 	str	r1, [r0, #28]
4000b8c8:	e2800020 	add	r0, r0, #32
4000b8cc:	e59f116c 	ldr	r1, [pc, #364]	; 4000ba40 <_tx_byte_pool_delete+0x234>
4000b8d0:	e5911000 	ldr	r1, [r1]
4000b8d4:	e1500001 	cmp	r0, r1
4000b8d8:	3a000001 	bcc	4000b8e4 <_tx_byte_pool_delete+0xd8>
4000b8dc:	e59f1160 	ldr	r1, [pc, #352]	; 4000ba44 <_tx_byte_pool_delete+0x238>
4000b8e0:	e5910000 	ldr	r0, [r1]
4000b8e4:	e59f1140 	ldr	r1, [pc, #320]	; 4000ba2c <_tx_byte_pool_delete+0x220>
4000b8e8:	e5810000 	str	r0, [r1]
4000b8ec:	e59f1154 	ldr	r1, [pc, #340]	; 4000ba48 <_tx_byte_pool_delete+0x23c>
4000b8f0:	e5911000 	ldr	r1, [r1]
4000b8f4:	e5810020 	str	r0, [r1, #32]
4000b8f8:	e1a00004 	mov	r0, r4
4000b8fc:	eb0012b6 	bl	400103dc <_tx_trace_object_unregister>
4000b900:	e59f0144 	ldr	r0, [pc, #324]	; 4000ba4c <_tx_byte_pool_delete+0x240>
4000b904:	e5900000 	ldr	r0, [r0]
4000b908:	e2400001 	sub	r0, r0, #1
4000b90c:	e59f1138 	ldr	r1, [pc, #312]	; 4000ba4c <_tx_byte_pool_delete+0x240>
4000b910:	e5810000 	str	r0, [r1]
4000b914:	e3a00000 	mov	r0, #0
4000b918:	e5840000 	str	r0, [r4]
4000b91c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b920:	e1500004 	cmp	r0, r4
4000b924:	1a000003 	bne	4000b938 <_tx_byte_pool_delete+0x12c>
4000b928:	e3a00000 	mov	r0, #0
4000b92c:	e59f111c 	ldr	r1, [pc, #284]	; 4000ba50 <_tx_byte_pool_delete+0x244>
4000b930:	e5810000 	str	r0, [r1]
4000b934:	ea00000c 	b	4000b96c <_tx_byte_pool_delete+0x160>
4000b938:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000b93c:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000b940:	e5810030 	str	r0, [r1, #48]	; 0x30
4000b944:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b948:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000b94c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4000b950:	e59f00f8 	ldr	r0, [pc, #248]	; 4000ba50 <_tx_byte_pool_delete+0x244>
4000b954:	e5900000 	ldr	r0, [r0]
4000b958:	e1500004 	cmp	r0, r4
4000b95c:	1a000002 	bne	4000b96c <_tx_byte_pool_delete+0x160>
4000b960:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ba50 <_tx_byte_pool_delete+0x244>
4000b964:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000b968:	e5810000 	str	r0, [r1]
4000b96c:	e59f00e0 	ldr	r0, [pc, #224]	; 4000ba54 <_tx_byte_pool_delete+0x248>
4000b970:	e5900000 	ldr	r0, [r0]
4000b974:	e2800001 	add	r0, r0, #1
4000b978:	e59f10d4 	ldr	r1, [pc, #212]	; 4000ba54 <_tx_byte_pool_delete+0x248>
4000b97c:	e5810000 	str	r0, [r1]
4000b980:	e121f005 	msr	CPSR_c, r5
4000b984:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000b988:	e58d0000 	str	r0, [sp]
4000b98c:	ea000017 	b	4000b9f0 <_tx_byte_pool_delete+0x1e4>
4000b990:	e10f5000 	mrs	r5, CPSR
4000b994:	e3856080 	orr	r6, r5, #128	; 0x80
4000b998:	e121f006 	msr	CPSR_c, r6
4000b99c:	e3a00000 	mov	r0, #0
4000b9a0:	e59d1000 	ldr	r1, [sp]
4000b9a4:	e5810068 	str	r0, [r1, #104]	; 0x68
4000b9a8:	e59f00a4 	ldr	r0, [pc, #164]	; 4000ba54 <_tx_byte_pool_delete+0x248>
4000b9ac:	e5900000 	ldr	r0, [r0]
4000b9b0:	e2800001 	add	r0, r0, #1
4000b9b4:	e59f1098 	ldr	r1, [pc, #152]	; 4000ba54 <_tx_byte_pool_delete+0x248>
4000b9b8:	e5810000 	str	r0, [r1]
4000b9bc:	e121f005 	msr	CPSR_c, r5
4000b9c0:	e3a00001 	mov	r0, #1
4000b9c4:	e59d1000 	ldr	r1, [sp]
4000b9c8:	e5810084 	str	r0, [r1, #132]	; 0x84
4000b9cc:	e59d0000 	ldr	r0, [sp]
4000b9d0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000b9d4:	e58d0000 	str	r0, [sp]
4000b9d8:	e59d1000 	ldr	r1, [sp]
4000b9dc:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000b9e0:	eb000ebc 	bl	4000f4d8 <_tx_thread_system_resume>
4000b9e4:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b9e8:	e2400001 	sub	r0, r0, #1
4000b9ec:	e5840028 	str	r0, [r4, #40]	; 0x28
4000b9f0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000b9f4:	e3500000 	cmp	r0, #0
4000b9f8:	1affffe4 	bne	4000b990 <_tx_byte_pool_delete+0x184>
4000b9fc:	e10f5000 	mrs	r5, CPSR
4000ba00:	e3856080 	orr	r6, r5, #128	; 0x80
4000ba04:	e121f006 	msr	CPSR_c, r6
4000ba08:	e59f0044 	ldr	r0, [pc, #68]	; 4000ba54 <_tx_byte_pool_delete+0x248>
4000ba0c:	e5900000 	ldr	r0, [r0]
4000ba10:	e2400001 	sub	r0, r0, #1
4000ba14:	e59f1038 	ldr	r1, [pc, #56]	; 4000ba54 <_tx_byte_pool_delete+0x248>
4000ba18:	e5810000 	str	r0, [r1]
4000ba1c:	e121f005 	msr	CPSR_c, r5
4000ba20:	eb000e80 	bl	4000f428 <_tx_thread_system_preempt_check>
4000ba24:	e3a00000 	mov	r0, #0
4000ba28:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000ba2c:	40030ea0 	.word	0x40030ea0
4000ba30:	40030ea4 	.word	0x40030ea4
4000ba34:	40030e2c 	.word	0x40030e2c
4000ba38:	40030e34 	.word	0x40030e34
4000ba3c:	f0f0f0f0 	.word	0xf0f0f0f0
4000ba40:	40030e9c 	.word	0x40030e9c
4000ba44:	40030e98 	.word	0x40030e98
4000ba48:	40030e8c 	.word	0x40030e8c
4000ba4c:	40030ed4 	.word	0x40030ed4
4000ba50:	40030ed0 	.word	0x40030ed0
4000ba54:	40030e50 	.word	0x40030e50

4000ba58 <_tx_byte_pool_search>:
4000ba58:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000ba5c:	e1a02000 	mov	r2, r0
4000ba60:	e3a08000 	mov	r8, #0
4000ba64:	e10f3000 	mrs	r3, CPSR
4000ba68:	e383c080 	orr	ip, r3, #128	; 0x80
4000ba6c:	e121f00c 	msr	CPSR_c, ip
4000ba70:	e5920008 	ldr	r0, [r2, #8]
4000ba74:	e1500001 	cmp	r0, r1
4000ba78:	8a000002 	bhi	4000ba88 <_tx_byte_pool_search+0x30>
4000ba7c:	e121f003 	msr	CPSR_c, r3
4000ba80:	e3a00000 	mov	r0, #0
4000ba84:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000ba88:	e5925014 	ldr	r5, [r2, #20]
4000ba8c:	e1a0e005 	mov	lr, r5
4000ba90:	e592000c 	ldr	r0, [r2, #12]
4000ba94:	e2807001 	add	r7, r0, #1
4000ba98:	e3a06000 	mov	r6, #0
4000ba9c:	e1a00000 	nop			; (mov r0, r0)
4000baa0:	e59e0004 	ldr	r0, [lr, #4]
4000baa4:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000baa8:	e29aa012 	adds	sl, sl, #18
4000baac:	1a000020 	bne	4000bb34 <_tx_byte_pool_search+0xdc>
4000bab0:	e3580000 	cmp	r8, #0
4000bab4:	1a000004 	bne	4000bacc <_tx_byte_pool_search+0x74>
4000bab8:	e5920014 	ldr	r0, [r2, #20]
4000babc:	e1500005 	cmp	r0, r5
4000bac0:	1a000000 	bne	4000bac8 <_tx_byte_pool_search+0x70>
4000bac4:	e582e014 	str	lr, [r2, #20]
4000bac8:	e3a08001 	mov	r8, #1
4000bacc:	e59e4000 	ldr	r4, [lr]
4000bad0:	e044000e 	sub	r0, r4, lr
4000bad4:	e2406008 	sub	r6, r0, #8
4000bad8:	e1560001 	cmp	r6, r1
4000badc:	3a000000 	bcc	4000bae4 <_tx_byte_pool_search+0x8c>
4000bae0:	ea000026 	b	4000bb80 <_tx_byte_pool_search+0x128>
4000bae4:	e3a06000 	mov	r6, #0
4000bae8:	e5940004 	ldr	r0, [r4, #4]
4000baec:	e280ac11 	add	sl, r0, #4352	; 0x1100
4000baf0:	e29aa012 	adds	sl, sl, #18
4000baf4:	1a000009 	bne	4000bb20 <_tx_byte_pool_search+0xc8>
4000baf8:	e5940000 	ldr	r0, [r4]
4000bafc:	e58e0000 	str	r0, [lr]
4000bb00:	e592000c 	ldr	r0, [r2, #12]
4000bb04:	e2400001 	sub	r0, r0, #1
4000bb08:	e582000c 	str	r0, [r2, #12]
4000bb0c:	e5920014 	ldr	r0, [r2, #20]
4000bb10:	e1500004 	cmp	r0, r4
4000bb14:	1a000007 	bne	4000bb38 <_tx_byte_pool_search+0xe0>
4000bb18:	e582e014 	str	lr, [r2, #20]
4000bb1c:	ea000005 	b	4000bb38 <_tx_byte_pool_search+0xe0>
4000bb20:	e594e000 	ldr	lr, [r4]
4000bb24:	e3570000 	cmp	r7, #0
4000bb28:	0a000002 	beq	4000bb38 <_tx_byte_pool_search+0xe0>
4000bb2c:	e2477001 	sub	r7, r7, #1
4000bb30:	ea000000 	b	4000bb38 <_tx_byte_pool_search+0xe0>
4000bb34:	e59ee000 	ldr	lr, [lr]
4000bb38:	e3570000 	cmp	r7, #0
4000bb3c:	0a000000 	beq	4000bb44 <_tx_byte_pool_search+0xec>
4000bb40:	e2477001 	sub	r7, r7, #1
4000bb44:	e121f003 	msr	CPSR_c, r3
4000bb48:	e10f3000 	mrs	r3, CPSR
4000bb4c:	e383c080 	orr	ip, r3, #128	; 0x80
4000bb50:	e121f00c 	msr	CPSR_c, ip
4000bb54:	e59f00ac 	ldr	r0, [pc, #172]	; 4000bc08 <_tx_byte_pool_search+0x1b0>
4000bb58:	e5909000 	ldr	r9, [r0]
4000bb5c:	e5920020 	ldr	r0, [r2, #32]
4000bb60:	e1500009 	cmp	r0, r9
4000bb64:	0a000003 	beq	4000bb78 <_tx_byte_pool_search+0x120>
4000bb68:	e592e014 	ldr	lr, [r2, #20]
4000bb6c:	e592000c 	ldr	r0, [r2, #12]
4000bb70:	e2807001 	add	r7, r0, #1
4000bb74:	e5829020 	str	r9, [r2, #32]
4000bb78:	e3570000 	cmp	r7, #0
4000bb7c:	1affffc7 	bne	4000baa0 <_tx_byte_pool_search+0x48>
4000bb80:	e1a00000 	nop			; (mov r0, r0)
4000bb84:	e3560000 	cmp	r6, #0
4000bb88:	0a00001a 	beq	4000bbf8 <_tx_byte_pool_search+0x1a0>
4000bb8c:	e0460001 	sub	r0, r6, r1
4000bb90:	e3500014 	cmp	r0, #20
4000bb94:	3a00000a 	bcc	4000bbc4 <_tx_byte_pool_search+0x16c>
4000bb98:	e08e0001 	add	r0, lr, r1
4000bb9c:	e2804008 	add	r4, r0, #8
4000bba0:	e59e0000 	ldr	r0, [lr]
4000bba4:	e5840000 	str	r0, [r4]
4000bba8:	e59f005c 	ldr	r0, [pc, #92]	; 4000bc0c <_tx_byte_pool_search+0x1b4>
4000bbac:	e5840004 	str	r0, [r4, #4]
4000bbb0:	e592000c 	ldr	r0, [r2, #12]
4000bbb4:	e2800001 	add	r0, r0, #1
4000bbb8:	e582000c 	str	r0, [r2, #12]
4000bbbc:	e58e4000 	str	r4, [lr]
4000bbc0:	e1a06001 	mov	r6, r1
4000bbc4:	e58e2004 	str	r2, [lr, #4]
4000bbc8:	e5920008 	ldr	r0, [r2, #8]
4000bbcc:	e0400006 	sub	r0, r0, r6
4000bbd0:	e2400008 	sub	r0, r0, #8
4000bbd4:	e5820008 	str	r0, [r2, #8]
4000bbd8:	e5920014 	ldr	r0, [r2, #20]
4000bbdc:	e150000e 	cmp	r0, lr
4000bbe0:	1a000001 	bne	4000bbec <_tx_byte_pool_search+0x194>
4000bbe4:	e59e0000 	ldr	r0, [lr]
4000bbe8:	e5820014 	str	r0, [r2, #20]
4000bbec:	e121f003 	msr	CPSR_c, r3
4000bbf0:	e28ee008 	add	lr, lr, #8
4000bbf4:	ea000001 	b	4000bc00 <_tx_byte_pool_search+0x1a8>
4000bbf8:	e121f003 	msr	CPSR_c, r3
4000bbfc:	e3a0e000 	mov	lr, #0
4000bc00:	e1a0000e 	mov	r0, lr
4000bc04:	eaffff9e 	b	4000ba84 <_tx_byte_pool_search+0x2c>
4000bc08:	40030e34 	.word	0x40030e34
4000bc0c:	ffffeeee 	.word	0xffffeeee

4000bc10 <_tx_byte_release>:
4000bc10:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000bc14:	e1a04000 	mov	r4, r0
4000bc18:	e1a09004 	mov	r9, r4
4000bc1c:	e1b04009 	movs	r4, r9
4000bc20:	0a00000f 	beq	4000bc64 <_tx_byte_release+0x54>
4000bc24:	e2499008 	sub	r9, r9, #8
4000bc28:	e5990004 	ldr	r0, [r9, #4]
4000bc2c:	e2801c11 	add	r1, r0, #4352	; 0x1100
4000bc30:	e2911012 	adds	r1, r1, #18
4000bc34:	0a000008 	beq	4000bc5c <_tx_byte_release+0x4c>
4000bc38:	e5997004 	ldr	r7, [r9, #4]
4000bc3c:	e3570000 	cmp	r7, #0
4000bc40:	0a000003 	beq	4000bc54 <_tx_byte_release+0x44>
4000bc44:	e5970000 	ldr	r0, [r7]
4000bc48:	e59f125c 	ldr	r1, [pc, #604]	; 4000beac <_tx_byte_release+0x29c>
4000bc4c:	e1500001 	cmp	r0, r1
4000bc50:	0a000005 	beq	4000bc6c <_tx_byte_release+0x5c>
4000bc54:	e3a00003 	mov	r0, #3
4000bc58:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000bc5c:	e3a00003 	mov	r0, #3
4000bc60:	eafffffc 	b	4000bc58 <_tx_byte_release+0x48>
4000bc64:	e3a00003 	mov	r0, #3
4000bc68:	eafffffa 	b	4000bc58 <_tx_byte_release+0x48>
4000bc6c:	e59f023c 	ldr	r0, [pc, #572]	; 4000beb0 <_tx_byte_release+0x2a0>
4000bc70:	e5908000 	ldr	r8, [r0]
4000bc74:	e5878020 	str	r8, [r7, #32]
4000bc78:	e10f5000 	mrs	r5, CPSR
4000bc7c:	e3856080 	orr	r6, r5, #128	; 0x80
4000bc80:	e121f006 	msr	CPSR_c, r6
4000bc84:	e59f1228 	ldr	r1, [pc, #552]	; 4000beb4 <_tx_byte_release+0x2a4>
4000bc88:	e5910000 	ldr	r0, [r1]
4000bc8c:	e3500000 	cmp	r0, #0
4000bc90:	0a000032 	beq	4000bd60 <_tx_byte_release+0x150>
4000bc94:	e59f121c 	ldr	r1, [pc, #540]	; 4000beb8 <_tx_byte_release+0x2a8>
4000bc98:	e5911000 	ldr	r1, [r1]
4000bc9c:	e2811001 	add	r1, r1, #1
4000bca0:	e59f2210 	ldr	r2, [pc, #528]	; 4000beb8 <_tx_byte_release+0x2a8>
4000bca4:	e5821000 	str	r1, [r2]
4000bca8:	e580100c 	str	r1, [r0, #12]
4000bcac:	e59f1208 	ldr	r1, [pc, #520]	; 4000bebc <_tx_byte_release+0x2ac>
4000bcb0:	e5911000 	ldr	r1, [r1]
4000bcb4:	e3510000 	cmp	r1, #0
4000bcb8:	1a000006 	bne	4000bcd8 <_tx_byte_release+0xc8>
4000bcbc:	e59f11ec 	ldr	r1, [pc, #492]	; 4000beb0 <_tx_byte_release+0x2a0>
4000bcc0:	e5911000 	ldr	r1, [r1]
4000bcc4:	e5801000 	str	r1, [r0]
4000bcc8:	e5901000 	ldr	r1, [r0]
4000bccc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bcd0:	e5801004 	str	r1, [r0, #4]
4000bcd4:	ea00000d 	b	4000bd10 <_tx_byte_release+0x100>
4000bcd8:	e59f11dc 	ldr	r1, [pc, #476]	; 4000bebc <_tx_byte_release+0x2ac>
4000bcdc:	e5911000 	ldr	r1, [r1]
4000bce0:	e59f21d8 	ldr	r2, [pc, #472]	; 4000bec0 <_tx_byte_release+0x2b0>
4000bce4:	e1510002 	cmp	r1, r2
4000bce8:	2a000004 	bcs	4000bd00 <_tx_byte_release+0xf0>
4000bcec:	e3e01000 	mvn	r1, #0
4000bcf0:	e5801000 	str	r1, [r0]
4000bcf4:	e3a01000 	mov	r1, #0
4000bcf8:	e5801004 	str	r1, [r0, #4]
4000bcfc:	ea000003 	b	4000bd10 <_tx_byte_release+0x100>
4000bd00:	e59f11b8 	ldr	r1, [pc, #440]	; 4000bec0 <_tx_byte_release+0x2b0>
4000bd04:	e5801000 	str	r1, [r0]
4000bd08:	e3a01000 	mov	r1, #0
4000bd0c:	e5801004 	str	r1, [r0, #4]
4000bd10:	e3a0101b 	mov	r1, #27
4000bd14:	e5801008 	str	r1, [r0, #8]
4000bd18:	e5807010 	str	r7, [r0, #16]
4000bd1c:	e5804014 	str	r4, [r0, #20]
4000bd20:	e5971028 	ldr	r1, [r7, #40]	; 0x28
4000bd24:	e5801018 	str	r1, [r0, #24]
4000bd28:	e5971008 	ldr	r1, [r7, #8]
4000bd2c:	e580101c 	str	r1, [r0, #28]
4000bd30:	e2800020 	add	r0, r0, #32
4000bd34:	e59f1188 	ldr	r1, [pc, #392]	; 4000bec4 <_tx_byte_release+0x2b4>
4000bd38:	e5911000 	ldr	r1, [r1]
4000bd3c:	e1500001 	cmp	r0, r1
4000bd40:	3a000001 	bcc	4000bd4c <_tx_byte_release+0x13c>
4000bd44:	e59f117c 	ldr	r1, [pc, #380]	; 4000bec8 <_tx_byte_release+0x2b8>
4000bd48:	e5910000 	ldr	r0, [r1]
4000bd4c:	e59f1160 	ldr	r1, [pc, #352]	; 4000beb4 <_tx_byte_release+0x2a4>
4000bd50:	e5810000 	str	r0, [r1]
4000bd54:	e59f1170 	ldr	r1, [pc, #368]	; 4000becc <_tx_byte_release+0x2bc>
4000bd58:	e5911000 	ldr	r1, [r1]
4000bd5c:	e5810020 	str	r0, [r1, #32]
4000bd60:	e59f0168 	ldr	r0, [pc, #360]	; 4000bed0 <_tx_byte_release+0x2c0>
4000bd64:	e5890004 	str	r0, [r9, #4]
4000bd68:	e5970008 	ldr	r0, [r7, #8]
4000bd6c:	e5991000 	ldr	r1, [r9]
4000bd70:	e0411009 	sub	r1, r1, r9
4000bd74:	e0800001 	add	r0, r0, r1
4000bd78:	e5870008 	str	r0, [r7, #8]
4000bd7c:	e5970014 	ldr	r0, [r7, #20]
4000bd80:	e1500009 	cmp	r0, r9
4000bd84:	9a000000 	bls	4000bd8c <_tx_byte_release+0x17c>
4000bd88:	e5879014 	str	r9, [r7, #20]
4000bd8c:	ea00003e 	b	4000be8c <_tx_byte_release+0x27c>
4000bd90:	e597a024 	ldr	sl, [r7, #36]	; 0x24
4000bd94:	e121f005 	msr	CPSR_c, r5
4000bd98:	e1a00007 	mov	r0, r7
4000bd9c:	e59a1078 	ldr	r1, [sl, #120]	; 0x78
4000bda0:	ebffff2c 	bl	4000ba58 <_tx_byte_pool_search>
4000bda4:	e1a09000 	mov	r9, r0
4000bda8:	e10f5000 	mrs	r5, CPSR
4000bdac:	e3856080 	orr	r6, r5, #128	; 0x80
4000bdb0:	e121f006 	msr	CPSR_c, r6
4000bdb4:	e3590000 	cmp	r9, #0
4000bdb8:	1a000000 	bne	4000bdc0 <_tx_byte_release+0x1b0>
4000bdbc:	ea000035 	b	4000be98 <_tx_byte_release+0x288>
4000bdc0:	e5970024 	ldr	r0, [r7, #36]	; 0x24
4000bdc4:	e150000a 	cmp	r0, sl
4000bdc8:	0a00000c 	beq	4000be00 <_tx_byte_release+0x1f0>
4000bdcc:	e2499008 	sub	r9, r9, #8
4000bdd0:	e59f00f8 	ldr	r0, [pc, #248]	; 4000bed0 <_tx_byte_release+0x2c0>
4000bdd4:	e5890004 	str	r0, [r9, #4]
4000bdd8:	e5970008 	ldr	r0, [r7, #8]
4000bddc:	e5991000 	ldr	r1, [r9]
4000bde0:	e0411009 	sub	r1, r1, r9
4000bde4:	e0800001 	add	r0, r0, r1
4000bde8:	e5870008 	str	r0, [r7, #8]
4000bdec:	e5970014 	ldr	r0, [r7, #20]
4000bdf0:	e1500009 	cmp	r0, r9
4000bdf4:	9a000000 	bls	4000bdfc <_tx_byte_release+0x1ec>
4000bdf8:	e5879014 	str	r9, [r7, #20]
4000bdfc:	ea000022 	b	4000be8c <_tx_byte_release+0x27c>
4000be00:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be04:	e150000a 	cmp	r0, sl
4000be08:	1a000002 	bne	4000be18 <_tx_byte_release+0x208>
4000be0c:	e3a00000 	mov	r0, #0
4000be10:	e5870024 	str	r0, [r7, #36]	; 0x24
4000be14:	ea000007 	b	4000be38 <_tx_byte_release+0x228>
4000be18:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be1c:	e5870024 	str	r0, [r7, #36]	; 0x24
4000be20:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4000be24:	e59a1070 	ldr	r1, [sl, #112]	; 0x70
4000be28:	e5810074 	str	r0, [r1, #116]	; 0x74
4000be2c:	e59a0070 	ldr	r0, [sl, #112]	; 0x70
4000be30:	e59a1074 	ldr	r1, [sl, #116]	; 0x74
4000be34:	e5810070 	str	r0, [r1, #112]	; 0x70
4000be38:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000be3c:	e2400001 	sub	r0, r0, #1
4000be40:	e5870028 	str	r0, [r7, #40]	; 0x28
4000be44:	e3a00000 	mov	r0, #0
4000be48:	e58a0068 	str	r0, [sl, #104]	; 0x68
4000be4c:	e59f0080 	ldr	r0, [pc, #128]	; 4000bed4 <_tx_byte_release+0x2c4>
4000be50:	e5900000 	ldr	r0, [r0]
4000be54:	e2800001 	add	r0, r0, #1
4000be58:	e59f1074 	ldr	r1, [pc, #116]	; 4000bed4 <_tx_byte_release+0x2c4>
4000be5c:	e5810000 	str	r0, [r1]
4000be60:	e121f005 	msr	CPSR_c, r5
4000be64:	e59a007c 	ldr	r0, [sl, #124]	; 0x7c
4000be68:	e5809000 	str	r9, [r0]
4000be6c:	e3a00000 	mov	r0, #0
4000be70:	e58a0084 	str	r0, [sl, #132]	; 0x84
4000be74:	e1a0000a 	mov	r0, sl
4000be78:	eb000d96 	bl	4000f4d8 <_tx_thread_system_resume>
4000be7c:	e10f5000 	mrs	r5, CPSR
4000be80:	e3856080 	orr	r6, r5, #128	; 0x80
4000be84:	e121f006 	msr	CPSR_c, r6
4000be88:	e1a00000 	nop			; (mov r0, r0)
4000be8c:	e5970028 	ldr	r0, [r7, #40]	; 0x28
4000be90:	e3500000 	cmp	r0, #0
4000be94:	1affffbd 	bne	4000bd90 <_tx_byte_release+0x180>
4000be98:	e1a00000 	nop			; (mov r0, r0)
4000be9c:	e121f005 	msr	CPSR_c, r5
4000bea0:	eb000d60 	bl	4000f428 <_tx_thread_system_preempt_check>
4000bea4:	e3a00000 	mov	r0, #0
4000bea8:	eaffff6a 	b	4000bc58 <_tx_byte_release+0x48>
4000beac:	42595445 	.word	0x42595445
4000beb0:	40030e34 	.word	0x40030e34
4000beb4:	40030ea0 	.word	0x40030ea0
4000beb8:	40030ea4 	.word	0x40030ea4
4000bebc:	40030e2c 	.word	0x40030e2c
4000bec0:	f0f0f0f0 	.word	0xf0f0f0f0
4000bec4:	40030e9c 	.word	0x40030e9c
4000bec8:	40030e98 	.word	0x40030e98
4000becc:	40030e8c 	.word	0x40030e8c
4000bed0:	ffffeeee 	.word	0xffffeeee
4000bed4:	40030e50 	.word	0x40030e50

4000bed8 <_tx_event_flags_create>:
4000bed8:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000bedc:	e1a04000 	mov	r4, r0
4000bee0:	e1a05001 	mov	r5, r1
4000bee4:	e3a01028 	mov	r1, #40	; 0x28
4000bee8:	e1a00004 	mov	r0, r4
4000beec:	eb001e95 	bl	40013948 <__aeabi_memclr4>
4000bef0:	e5845004 	str	r5, [r4, #4]
4000bef4:	e10f6000 	mrs	r6, CPSR
4000bef8:	e3867080 	orr	r7, r6, #128	; 0x80
4000befc:	e121f007 	msr	CPSR_c, r7
4000bf00:	e59f0170 	ldr	r0, [pc, #368]	; 4000c078 <_tx_event_flags_create+0x1a0>
4000bf04:	e5840000 	str	r0, [r4]
4000bf08:	e59f016c 	ldr	r0, [pc, #364]	; 4000c07c <_tx_event_flags_create+0x1a4>
4000bf0c:	e5900000 	ldr	r0, [r0]
4000bf10:	e3500000 	cmp	r0, #0
4000bf14:	0a00000e 	beq	4000bf54 <_tx_event_flags_create+0x7c>
4000bf18:	e59f015c 	ldr	r0, [pc, #348]	; 4000c07c <_tx_event_flags_create+0x1a4>
4000bf1c:	e5900000 	ldr	r0, [r0]
4000bf20:	e590001c 	ldr	r0, [r0, #28]
4000bf24:	e58d0004 	str	r0, [sp, #4]
4000bf28:	e59f014c 	ldr	r0, [pc, #332]	; 4000c07c <_tx_event_flags_create+0x1a4>
4000bf2c:	e5900000 	ldr	r0, [r0]
4000bf30:	e580401c 	str	r4, [r0, #28]
4000bf34:	e59d0004 	ldr	r0, [sp, #4]
4000bf38:	e5804018 	str	r4, [r0, #24]
4000bf3c:	e59d0004 	ldr	r0, [sp, #4]
4000bf40:	e584001c 	str	r0, [r4, #28]
4000bf44:	e59f0130 	ldr	r0, [pc, #304]	; 4000c07c <_tx_event_flags_create+0x1a4>
4000bf48:	e5900000 	ldr	r0, [r0]
4000bf4c:	e5840018 	str	r0, [r4, #24]
4000bf50:	ea000003 	b	4000bf64 <_tx_event_flags_create+0x8c>
4000bf54:	e59f0120 	ldr	r0, [pc, #288]	; 4000c07c <_tx_event_flags_create+0x1a4>
4000bf58:	e5804000 	str	r4, [r0]
4000bf5c:	e5844018 	str	r4, [r4, #24]
4000bf60:	e584401c 	str	r4, [r4, #28]
4000bf64:	e59f0114 	ldr	r0, [pc, #276]	; 4000c080 <_tx_event_flags_create+0x1a8>
4000bf68:	e5900000 	ldr	r0, [r0]
4000bf6c:	e2800001 	add	r0, r0, #1
4000bf70:	e59f1108 	ldr	r1, [pc, #264]	; 4000c080 <_tx_event_flags_create+0x1a8>
4000bf74:	e5810000 	str	r0, [r1]
4000bf78:	e3a03000 	mov	r3, #0
4000bf7c:	e1a02005 	mov	r2, r5
4000bf80:	e1a01004 	mov	r1, r4
4000bf84:	e3a00006 	mov	r0, #6
4000bf88:	e58d3000 	str	r3, [sp]
4000bf8c:	eb0010a7 	bl	40010230 <_tx_trace_object_register>
4000bf90:	e59f10ec 	ldr	r1, [pc, #236]	; 4000c084 <_tx_event_flags_create+0x1ac>
4000bf94:	e5910000 	ldr	r0, [r1]
4000bf98:	e3500000 	cmp	r0, #0
4000bf9c:	0a000032 	beq	4000c06c <_tx_event_flags_create+0x194>
4000bfa0:	e59f10e0 	ldr	r1, [pc, #224]	; 4000c088 <_tx_event_flags_create+0x1b0>
4000bfa4:	e5911000 	ldr	r1, [r1]
4000bfa8:	e2811001 	add	r1, r1, #1
4000bfac:	e59f20d4 	ldr	r2, [pc, #212]	; 4000c088 <_tx_event_flags_create+0x1b0>
4000bfb0:	e5821000 	str	r1, [r2]
4000bfb4:	e580100c 	str	r1, [r0, #12]
4000bfb8:	e59f10cc 	ldr	r1, [pc, #204]	; 4000c08c <_tx_event_flags_create+0x1b4>
4000bfbc:	e5911000 	ldr	r1, [r1]
4000bfc0:	e3510000 	cmp	r1, #0
4000bfc4:	1a000006 	bne	4000bfe4 <_tx_event_flags_create+0x10c>
4000bfc8:	e59f10c0 	ldr	r1, [pc, #192]	; 4000c090 <_tx_event_flags_create+0x1b8>
4000bfcc:	e5911000 	ldr	r1, [r1]
4000bfd0:	e5801000 	str	r1, [r0]
4000bfd4:	e5901000 	ldr	r1, [r0]
4000bfd8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000bfdc:	e5801004 	str	r1, [r0, #4]
4000bfe0:	ea00000d 	b	4000c01c <_tx_event_flags_create+0x144>
4000bfe4:	e59f10a0 	ldr	r1, [pc, #160]	; 4000c08c <_tx_event_flags_create+0x1b4>
4000bfe8:	e5911000 	ldr	r1, [r1]
4000bfec:	e59f20a0 	ldr	r2, [pc, #160]	; 4000c094 <_tx_event_flags_create+0x1bc>
4000bff0:	e1510002 	cmp	r1, r2
4000bff4:	2a000004 	bcs	4000c00c <_tx_event_flags_create+0x134>
4000bff8:	e3e01000 	mvn	r1, #0
4000bffc:	e5801000 	str	r1, [r0]
4000c000:	e3a01000 	mov	r1, #0
4000c004:	e5801004 	str	r1, [r0, #4]
4000c008:	ea000003 	b	4000c01c <_tx_event_flags_create+0x144>
4000c00c:	e59f1080 	ldr	r1, [pc, #128]	; 4000c094 <_tx_event_flags_create+0x1bc>
4000c010:	e5801000 	str	r1, [r0]
4000c014:	e3a01000 	mov	r1, #0
4000c018:	e5801004 	str	r1, [r0, #4]
4000c01c:	e3a0101e 	mov	r1, #30
4000c020:	e5801008 	str	r1, [r0, #8]
4000c024:	e5804010 	str	r4, [r0, #16]
4000c028:	e28d1004 	add	r1, sp, #4
4000c02c:	e5801014 	str	r1, [r0, #20]
4000c030:	e3a01000 	mov	r1, #0
4000c034:	e5801018 	str	r1, [r0, #24]
4000c038:	e580101c 	str	r1, [r0, #28]
4000c03c:	e2800020 	add	r0, r0, #32
4000c040:	e59f1050 	ldr	r1, [pc, #80]	; 4000c098 <_tx_event_flags_create+0x1c0>
4000c044:	e5911000 	ldr	r1, [r1]
4000c048:	e1500001 	cmp	r0, r1
4000c04c:	3a000001 	bcc	4000c058 <_tx_event_flags_create+0x180>
4000c050:	e59f1044 	ldr	r1, [pc, #68]	; 4000c09c <_tx_event_flags_create+0x1c4>
4000c054:	e5910000 	ldr	r0, [r1]
4000c058:	e59f1024 	ldr	r1, [pc, #36]	; 4000c084 <_tx_event_flags_create+0x1ac>
4000c05c:	e5810000 	str	r0, [r1]
4000c060:	e59f1038 	ldr	r1, [pc, #56]	; 4000c0a0 <_tx_event_flags_create+0x1c8>
4000c064:	e5911000 	ldr	r1, [r1]
4000c068:	e5810020 	str	r0, [r1, #32]
4000c06c:	e121f006 	msr	CPSR_c, r6
4000c070:	e3a00000 	mov	r0, #0
4000c074:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000c078:	4456444e 	.word	0x4456444e
4000c07c:	40030eb8 	.word	0x40030eb8
4000c080:	40030ebc 	.word	0x40030ebc
4000c084:	40030ea0 	.word	0x40030ea0
4000c088:	40030ea4 	.word	0x40030ea4
4000c08c:	40030e2c 	.word	0x40030e2c
4000c090:	40030e34 	.word	0x40030e34
4000c094:	f0f0f0f0 	.word	0xf0f0f0f0
4000c098:	40030e9c 	.word	0x40030e9c
4000c09c:	40030e98 	.word	0x40030e98
4000c0a0:	40030e8c 	.word	0x40030e8c

4000c0a4 <_tx_event_flags_delete>:
4000c0a4:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000c0a8:	e1a04000 	mov	r4, r0
4000c0ac:	e10f5000 	mrs	r5, CPSR
4000c0b0:	e3856080 	orr	r6, r5, #128	; 0x80
4000c0b4:	e121f006 	msr	CPSR_c, r6
4000c0b8:	e59f1204 	ldr	r1, [pc, #516]	; 4000c2c4 <_tx_event_flags_delete+0x220>
4000c0bc:	e5910000 	ldr	r0, [r1]
4000c0c0:	e3500000 	cmp	r0, #0
4000c0c4:	0a000031 	beq	4000c190 <_tx_event_flags_delete+0xec>
4000c0c8:	e59f11f8 	ldr	r1, [pc, #504]	; 4000c2c8 <_tx_event_flags_delete+0x224>
4000c0cc:	e5911000 	ldr	r1, [r1]
4000c0d0:	e2811001 	add	r1, r1, #1
4000c0d4:	e59f21ec 	ldr	r2, [pc, #492]	; 4000c2c8 <_tx_event_flags_delete+0x224>
4000c0d8:	e5821000 	str	r1, [r2]
4000c0dc:	e580100c 	str	r1, [r0, #12]
4000c0e0:	e59f11e4 	ldr	r1, [pc, #484]	; 4000c2cc <_tx_event_flags_delete+0x228>
4000c0e4:	e5911000 	ldr	r1, [r1]
4000c0e8:	e3510000 	cmp	r1, #0
4000c0ec:	1a000006 	bne	4000c10c <_tx_event_flags_delete+0x68>
4000c0f0:	e59f11d8 	ldr	r1, [pc, #472]	; 4000c2d0 <_tx_event_flags_delete+0x22c>
4000c0f4:	e5911000 	ldr	r1, [r1]
4000c0f8:	e5801000 	str	r1, [r0]
4000c0fc:	e5901000 	ldr	r1, [r0]
4000c100:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c104:	e5801004 	str	r1, [r0, #4]
4000c108:	ea00000d 	b	4000c144 <_tx_event_flags_delete+0xa0>
4000c10c:	e59f11b8 	ldr	r1, [pc, #440]	; 4000c2cc <_tx_event_flags_delete+0x228>
4000c110:	e5911000 	ldr	r1, [r1]
4000c114:	e59f21b8 	ldr	r2, [pc, #440]	; 4000c2d4 <_tx_event_flags_delete+0x230>
4000c118:	e1510002 	cmp	r1, r2
4000c11c:	2a000004 	bcs	4000c134 <_tx_event_flags_delete+0x90>
4000c120:	e3e01000 	mvn	r1, #0
4000c124:	e5801000 	str	r1, [r0]
4000c128:	e3a01000 	mov	r1, #0
4000c12c:	e5801004 	str	r1, [r0, #4]
4000c130:	ea000003 	b	4000c144 <_tx_event_flags_delete+0xa0>
4000c134:	e59f1198 	ldr	r1, [pc, #408]	; 4000c2d4 <_tx_event_flags_delete+0x230>
4000c138:	e5801000 	str	r1, [r0]
4000c13c:	e3a01000 	mov	r1, #0
4000c140:	e5801004 	str	r1, [r0, #4]
4000c144:	e3a0101f 	mov	r1, #31
4000c148:	e5801008 	str	r1, [r0, #8]
4000c14c:	e5804010 	str	r4, [r0, #16]
4000c150:	e580d014 	str	sp, [r0, #20]
4000c154:	e3a01000 	mov	r1, #0
4000c158:	e5801018 	str	r1, [r0, #24]
4000c15c:	e580101c 	str	r1, [r0, #28]
4000c160:	e2800020 	add	r0, r0, #32
4000c164:	e59f116c 	ldr	r1, [pc, #364]	; 4000c2d8 <_tx_event_flags_delete+0x234>
4000c168:	e5911000 	ldr	r1, [r1]
4000c16c:	e1500001 	cmp	r0, r1
4000c170:	3a000001 	bcc	4000c17c <_tx_event_flags_delete+0xd8>
4000c174:	e59f1160 	ldr	r1, [pc, #352]	; 4000c2dc <_tx_event_flags_delete+0x238>
4000c178:	e5910000 	ldr	r0, [r1]
4000c17c:	e59f1140 	ldr	r1, [pc, #320]	; 4000c2c4 <_tx_event_flags_delete+0x220>
4000c180:	e5810000 	str	r0, [r1]
4000c184:	e59f1154 	ldr	r1, [pc, #340]	; 4000c2e0 <_tx_event_flags_delete+0x23c>
4000c188:	e5911000 	ldr	r1, [r1]
4000c18c:	e5810020 	str	r0, [r1, #32]
4000c190:	e1a00004 	mov	r0, r4
4000c194:	eb001090 	bl	400103dc <_tx_trace_object_unregister>
4000c198:	e59f0144 	ldr	r0, [pc, #324]	; 4000c2e4 <_tx_event_flags_delete+0x240>
4000c19c:	e5900000 	ldr	r0, [r0]
4000c1a0:	e2400001 	sub	r0, r0, #1
4000c1a4:	e59f1138 	ldr	r1, [pc, #312]	; 4000c2e4 <_tx_event_flags_delete+0x240>
4000c1a8:	e5810000 	str	r0, [r1]
4000c1ac:	e3a00000 	mov	r0, #0
4000c1b0:	e5840000 	str	r0, [r4]
4000c1b4:	e5940018 	ldr	r0, [r4, #24]
4000c1b8:	e1500004 	cmp	r0, r4
4000c1bc:	1a000003 	bne	4000c1d0 <_tx_event_flags_delete+0x12c>
4000c1c0:	e3a00000 	mov	r0, #0
4000c1c4:	e59f111c 	ldr	r1, [pc, #284]	; 4000c2e8 <_tx_event_flags_delete+0x244>
4000c1c8:	e5810000 	str	r0, [r1]
4000c1cc:	ea00000c 	b	4000c204 <_tx_event_flags_delete+0x160>
4000c1d0:	e594001c 	ldr	r0, [r4, #28]
4000c1d4:	e5941018 	ldr	r1, [r4, #24]
4000c1d8:	e581001c 	str	r0, [r1, #28]
4000c1dc:	e5940018 	ldr	r0, [r4, #24]
4000c1e0:	e594101c 	ldr	r1, [r4, #28]
4000c1e4:	e5810018 	str	r0, [r1, #24]
4000c1e8:	e59f00f8 	ldr	r0, [pc, #248]	; 4000c2e8 <_tx_event_flags_delete+0x244>
4000c1ec:	e5900000 	ldr	r0, [r0]
4000c1f0:	e1500004 	cmp	r0, r4
4000c1f4:	1a000002 	bne	4000c204 <_tx_event_flags_delete+0x160>
4000c1f8:	e59f10e8 	ldr	r1, [pc, #232]	; 4000c2e8 <_tx_event_flags_delete+0x244>
4000c1fc:	e5940018 	ldr	r0, [r4, #24]
4000c200:	e5810000 	str	r0, [r1]
4000c204:	e59f00e0 	ldr	r0, [pc, #224]	; 4000c2ec <_tx_event_flags_delete+0x248>
4000c208:	e5900000 	ldr	r0, [r0]
4000c20c:	e2800001 	add	r0, r0, #1
4000c210:	e59f10d4 	ldr	r1, [pc, #212]	; 4000c2ec <_tx_event_flags_delete+0x248>
4000c214:	e5810000 	str	r0, [r1]
4000c218:	e121f005 	msr	CPSR_c, r5
4000c21c:	e5940010 	ldr	r0, [r4, #16]
4000c220:	e58d0000 	str	r0, [sp]
4000c224:	ea000017 	b	4000c288 <_tx_event_flags_delete+0x1e4>
4000c228:	e10f5000 	mrs	r5, CPSR
4000c22c:	e3856080 	orr	r6, r5, #128	; 0x80
4000c230:	e121f006 	msr	CPSR_c, r6
4000c234:	e3a00000 	mov	r0, #0
4000c238:	e59d1000 	ldr	r1, [sp]
4000c23c:	e5810068 	str	r0, [r1, #104]	; 0x68
4000c240:	e59f00a4 	ldr	r0, [pc, #164]	; 4000c2ec <_tx_event_flags_delete+0x248>
4000c244:	e5900000 	ldr	r0, [r0]
4000c248:	e2800001 	add	r0, r0, #1
4000c24c:	e59f1098 	ldr	r1, [pc, #152]	; 4000c2ec <_tx_event_flags_delete+0x248>
4000c250:	e5810000 	str	r0, [r1]
4000c254:	e121f005 	msr	CPSR_c, r5
4000c258:	e3a00001 	mov	r0, #1
4000c25c:	e59d1000 	ldr	r1, [sp]
4000c260:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c264:	e59d0000 	ldr	r0, [sp]
4000c268:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c26c:	e58d0000 	str	r0, [sp]
4000c270:	e59d1000 	ldr	r1, [sp]
4000c274:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000c278:	eb000c96 	bl	4000f4d8 <_tx_thread_system_resume>
4000c27c:	e5940014 	ldr	r0, [r4, #20]
4000c280:	e2400001 	sub	r0, r0, #1
4000c284:	e5840014 	str	r0, [r4, #20]
4000c288:	e5940014 	ldr	r0, [r4, #20]
4000c28c:	e3500000 	cmp	r0, #0
4000c290:	1affffe4 	bne	4000c228 <_tx_event_flags_delete+0x184>
4000c294:	e10f5000 	mrs	r5, CPSR
4000c298:	e3856080 	orr	r6, r5, #128	; 0x80
4000c29c:	e121f006 	msr	CPSR_c, r6
4000c2a0:	e59f0044 	ldr	r0, [pc, #68]	; 4000c2ec <_tx_event_flags_delete+0x248>
4000c2a4:	e5900000 	ldr	r0, [r0]
4000c2a8:	e2400001 	sub	r0, r0, #1
4000c2ac:	e59f1038 	ldr	r1, [pc, #56]	; 4000c2ec <_tx_event_flags_delete+0x248>
4000c2b0:	e5810000 	str	r0, [r1]
4000c2b4:	e121f005 	msr	CPSR_c, r5
4000c2b8:	eb000c5a 	bl	4000f428 <_tx_thread_system_preempt_check>
4000c2bc:	e3a00000 	mov	r0, #0
4000c2c0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000c2c4:	40030ea0 	.word	0x40030ea0
4000c2c8:	40030ea4 	.word	0x40030ea4
4000c2cc:	40030e2c 	.word	0x40030e2c
4000c2d0:	40030e34 	.word	0x40030e34
4000c2d4:	f0f0f0f0 	.word	0xf0f0f0f0
4000c2d8:	40030e9c 	.word	0x40030e9c
4000c2dc:	40030e98 	.word	0x40030e98
4000c2e0:	40030e8c 	.word	0x40030e8c
4000c2e4:	40030ebc 	.word	0x40030ebc
4000c2e8:	40030eb8 	.word	0x40030eb8
4000c2ec:	40030e50 	.word	0x40030e50

4000c2f0 <_tx_event_flags_get>:
4000c2f0:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000c2f4:	e1a04000 	mov	r4, r0
4000c2f8:	e1a05001 	mov	r5, r1
4000c2fc:	e1a06002 	mov	r6, r2
4000c300:	e1a07003 	mov	r7, r3
4000c304:	e10f8000 	mrs	r8, CPSR
4000c308:	e3880080 	orr	r0, r8, #128	; 0x80
4000c30c:	e58d0004 	str	r0, [sp, #4]
4000c310:	e59d0004 	ldr	r0, [sp, #4]
4000c314:	e121f000 	msr	CPSR_c, r0
4000c318:	e59f1278 	ldr	r1, [pc, #632]	; 4000c598 <_tx_event_flags_get+0x2a8>
4000c31c:	e5910000 	ldr	r0, [r1]
4000c320:	e3500000 	cmp	r0, #0
4000c324:	0a000031 	beq	4000c3f0 <_tx_event_flags_get+0x100>
4000c328:	e59f126c 	ldr	r1, [pc, #620]	; 4000c59c <_tx_event_flags_get+0x2ac>
4000c32c:	e5911000 	ldr	r1, [r1]
4000c330:	e2811001 	add	r1, r1, #1
4000c334:	e59f2260 	ldr	r2, [pc, #608]	; 4000c59c <_tx_event_flags_get+0x2ac>
4000c338:	e5821000 	str	r1, [r2]
4000c33c:	e580100c 	str	r1, [r0, #12]
4000c340:	e59f1258 	ldr	r1, [pc, #600]	; 4000c5a0 <_tx_event_flags_get+0x2b0>
4000c344:	e5911000 	ldr	r1, [r1]
4000c348:	e3510000 	cmp	r1, #0
4000c34c:	1a000006 	bne	4000c36c <_tx_event_flags_get+0x7c>
4000c350:	e59f124c 	ldr	r1, [pc, #588]	; 4000c5a4 <_tx_event_flags_get+0x2b4>
4000c354:	e5911000 	ldr	r1, [r1]
4000c358:	e5801000 	str	r1, [r0]
4000c35c:	e5901000 	ldr	r1, [r0]
4000c360:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c364:	e5801004 	str	r1, [r0, #4]
4000c368:	ea00000d 	b	4000c3a4 <_tx_event_flags_get+0xb4>
4000c36c:	e59f122c 	ldr	r1, [pc, #556]	; 4000c5a0 <_tx_event_flags_get+0x2b0>
4000c370:	e5911000 	ldr	r1, [r1]
4000c374:	e59f222c 	ldr	r2, [pc, #556]	; 4000c5a8 <_tx_event_flags_get+0x2b8>
4000c378:	e1510002 	cmp	r1, r2
4000c37c:	2a000004 	bcs	4000c394 <_tx_event_flags_get+0xa4>
4000c380:	e3e01000 	mvn	r1, #0
4000c384:	e5801000 	str	r1, [r0]
4000c388:	e3a01000 	mov	r1, #0
4000c38c:	e5801004 	str	r1, [r0, #4]
4000c390:	ea000003 	b	4000c3a4 <_tx_event_flags_get+0xb4>
4000c394:	e59f120c 	ldr	r1, [pc, #524]	; 4000c5a8 <_tx_event_flags_get+0x2b8>
4000c398:	e5801000 	str	r1, [r0]
4000c39c:	e3a01000 	mov	r1, #0
4000c3a0:	e5801004 	str	r1, [r0, #4]
4000c3a4:	e3a01020 	mov	r1, #32
4000c3a8:	e5801008 	str	r1, [r0, #8]
4000c3ac:	e5804010 	str	r4, [r0, #16]
4000c3b0:	e5805014 	str	r5, [r0, #20]
4000c3b4:	e5941008 	ldr	r1, [r4, #8]
4000c3b8:	e5801018 	str	r1, [r0, #24]
4000c3bc:	e580601c 	str	r6, [r0, #28]
4000c3c0:	e2800020 	add	r0, r0, #32
4000c3c4:	e59f11e0 	ldr	r1, [pc, #480]	; 4000c5ac <_tx_event_flags_get+0x2bc>
4000c3c8:	e5911000 	ldr	r1, [r1]
4000c3cc:	e1500001 	cmp	r0, r1
4000c3d0:	3a000001 	bcc	4000c3dc <_tx_event_flags_get+0xec>
4000c3d4:	e59f11d4 	ldr	r1, [pc, #468]	; 4000c5b0 <_tx_event_flags_get+0x2c0>
4000c3d8:	e5910000 	ldr	r0, [r1]
4000c3dc:	e59f11b4 	ldr	r1, [pc, #436]	; 4000c598 <_tx_event_flags_get+0x2a8>
4000c3e0:	e5810000 	str	r0, [r1]
4000c3e4:	e59f11c8 	ldr	r1, [pc, #456]	; 4000c5b4 <_tx_event_flags_get+0x2c4>
4000c3e8:	e5911000 	ldr	r1, [r1]
4000c3ec:	e5810020 	str	r0, [r1, #32]
4000c3f0:	e594a008 	ldr	sl, [r4, #8]
4000c3f4:	e594b020 	ldr	fp, [r4, #32]
4000c3f8:	e35b0000 	cmp	fp, #0
4000c3fc:	0a000000 	beq	4000c404 <_tx_event_flags_get+0x114>
4000c400:	e1caa00b 	bic	sl, sl, fp
4000c404:	e3160002 	tst	r6, #2
4000c408:	0a000006 	beq	4000c428 <_tx_event_flags_get+0x138>
4000c40c:	e00a0005 	and	r0, sl, r5
4000c410:	e1500005 	cmp	r0, r5
4000c414:	1a000001 	bne	4000c420 <_tx_event_flags_get+0x130>
4000c418:	e3a09000 	mov	r9, #0
4000c41c:	ea000006 	b	4000c43c <_tx_event_flags_get+0x14c>
4000c420:	e3a09007 	mov	r9, #7
4000c424:	ea000004 	b	4000c43c <_tx_event_flags_get+0x14c>
4000c428:	e11a0005 	tst	sl, r5
4000c42c:	0a000001 	beq	4000c438 <_tx_event_flags_get+0x148>
4000c430:	e3a09000 	mov	r9, #0
4000c434:	ea000000 	b	4000c43c <_tx_event_flags_get+0x14c>
4000c438:	e3a09007 	mov	r9, #7
4000c43c:	e3590000 	cmp	r9, #0
4000c440:	1a000010 	bne	4000c488 <_tx_event_flags_get+0x198>
4000c444:	e587a000 	str	sl, [r7]
4000c448:	e3160001 	tst	r6, #1
4000c44c:	0a00004e 	beq	4000c58c <_tx_event_flags_get+0x29c>
4000c450:	e5940014 	ldr	r0, [r4, #20]
4000c454:	e3500000 	cmp	r0, #0
4000c458:	0a000006 	beq	4000c478 <_tx_event_flags_get+0x188>
4000c45c:	e5940010 	ldr	r0, [r4, #16]
4000c460:	e3500000 	cmp	r0, #0
4000c464:	1a000003 	bne	4000c478 <_tx_event_flags_get+0x188>
4000c468:	e5940020 	ldr	r0, [r4, #32]
4000c46c:	e1800005 	orr	r0, r0, r5
4000c470:	e5840020 	str	r0, [r4, #32]
4000c474:	ea000044 	b	4000c58c <_tx_event_flags_get+0x29c>
4000c478:	e5940008 	ldr	r0, [r4, #8]
4000c47c:	e1c00005 	bic	r0, r0, r5
4000c480:	e5840008 	str	r0, [r4, #8]
4000c484:	ea000040 	b	4000c58c <_tx_event_flags_get+0x29c>
4000c488:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4000c48c:	e3500000 	cmp	r0, #0
4000c490:	0a00003c 	beq	4000c588 <_tx_event_flags_get+0x298>
4000c494:	e59f0108 	ldr	r0, [pc, #264]	; 4000c5a4 <_tx_event_flags_get+0x2b4>
4000c498:	e5900000 	ldr	r0, [r0]
4000c49c:	e58d0000 	str	r0, [sp]
4000c4a0:	e59f1110 	ldr	r1, [pc, #272]	; 4000c5b8 <_tx_event_flags_get+0x2c8>
4000c4a4:	e59d0000 	ldr	r0, [sp]
4000c4a8:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c4ac:	e59d0000 	ldr	r0, [sp]
4000c4b0:	e5805078 	str	r5, [r0, #120]	; 0x78
4000c4b4:	e59d0000 	ldr	r0, [sp]
4000c4b8:	e5806080 	str	r6, [r0, #128]	; 0x80
4000c4bc:	e59d0000 	ldr	r0, [sp]
4000c4c0:	e580707c 	str	r7, [r0, #124]	; 0x7c
4000c4c4:	e59d0000 	ldr	r0, [sp]
4000c4c8:	e580406c 	str	r4, [r0, #108]	; 0x6c
4000c4cc:	e5940010 	ldr	r0, [r4, #16]
4000c4d0:	e3500000 	cmp	r0, #0
4000c4d4:	0a00000e 	beq	4000c514 <_tx_event_flags_get+0x224>
4000c4d8:	e5941010 	ldr	r1, [r4, #16]
4000c4dc:	e59d0000 	ldr	r0, [sp]
4000c4e0:	e5801070 	str	r1, [r0, #112]	; 0x70
4000c4e4:	e5940010 	ldr	r0, [r4, #16]
4000c4e8:	e5901074 	ldr	r1, [r0, #116]	; 0x74
4000c4ec:	e59d0000 	ldr	r0, [sp]
4000c4f0:	e5801074 	str	r1, [r0, #116]	; 0x74
4000c4f4:	e59d0000 	ldr	r0, [sp]
4000c4f8:	e5941010 	ldr	r1, [r4, #16]
4000c4fc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c500:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c504:	e59d0000 	ldr	r0, [sp]
4000c508:	e5941010 	ldr	r1, [r4, #16]
4000c50c:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c510:	ea000005 	b	4000c52c <_tx_event_flags_get+0x23c>
4000c514:	e59d0000 	ldr	r0, [sp]
4000c518:	e5840010 	str	r0, [r4, #16]
4000c51c:	e59d0000 	ldr	r0, [sp]
4000c520:	e5800070 	str	r0, [r0, #112]	; 0x70
4000c524:	e59d0000 	ldr	r0, [sp]
4000c528:	e5800074 	str	r0, [r0, #116]	; 0x74
4000c52c:	e5940014 	ldr	r0, [r4, #20]
4000c530:	e2800001 	add	r0, r0, #1
4000c534:	e5840014 	str	r0, [r4, #20]
4000c538:	e3a00007 	mov	r0, #7
4000c53c:	e59d1000 	ldr	r1, [sp]
4000c540:	e5810030 	str	r0, [r1, #48]	; 0x30
4000c544:	e3a01001 	mov	r1, #1
4000c548:	e59d0000 	ldr	r0, [sp]
4000c54c:	e5801038 	str	r1, [r0, #56]	; 0x38
4000c550:	e59d0000 	ldr	r0, [sp]
4000c554:	e59d1030 	ldr	r1, [sp, #48]	; 0x30
4000c558:	e580104c 	str	r1, [r0, #76]	; 0x4c
4000c55c:	e59f0058 	ldr	r0, [pc, #88]	; 4000c5bc <_tx_event_flags_get+0x2cc>
4000c560:	e5900000 	ldr	r0, [r0]
4000c564:	e2800001 	add	r0, r0, #1
4000c568:	e59f104c 	ldr	r1, [pc, #76]	; 4000c5bc <_tx_event_flags_get+0x2cc>
4000c56c:	e5810000 	str	r0, [r1]
4000c570:	e121f008 	msr	CPSR_c, r8
4000c574:	e59d0000 	ldr	r0, [sp]
4000c578:	ebfff22f 	bl	40008e3c <_tx_thread_system_suspend>
4000c57c:	e59d0000 	ldr	r0, [sp]
4000c580:	e5900084 	ldr	r0, [r0, #132]	; 0x84
4000c584:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000c588:	e3a09007 	mov	r9, #7
4000c58c:	e121f008 	msr	CPSR_c, r8
4000c590:	e1a00009 	mov	r0, r9
4000c594:	eafffffa 	b	4000c584 <_tx_event_flags_get+0x294>
4000c598:	40030ea0 	.word	0x40030ea0
4000c59c:	40030ea4 	.word	0x40030ea4
4000c5a0:	40030e2c 	.word	0x40030e2c
4000c5a4:	40030e34 	.word	0x40030e34
4000c5a8:	f0f0f0f0 	.word	0xf0f0f0f0
4000c5ac:	40030e9c 	.word	0x40030e9c
4000c5b0:	40030e98 	.word	0x40030e98
4000c5b4:	40030e8c 	.word	0x40030e8c
4000c5b8:	400104e8 	.word	0x400104e8
4000c5bc:	40030e50 	.word	0x40030e50

4000c5c0 <_tx_event_flags_set>:
4000c5c0:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000c5c4:	e24dd01c 	sub	sp, sp, #28
4000c5c8:	e1a04000 	mov	r4, r0
4000c5cc:	e1a05001 	mov	r5, r1
4000c5d0:	e1a06002 	mov	r6, r2
4000c5d4:	e10f7000 	mrs	r7, CPSR
4000c5d8:	e3870080 	orr	r0, r7, #128	; 0x80
4000c5dc:	e58d0018 	str	r0, [sp, #24]
4000c5e0:	e59d0018 	ldr	r0, [sp, #24]
4000c5e4:	e121f000 	msr	CPSR_c, r0
4000c5e8:	e59f1594 	ldr	r1, [pc, #1428]	; 4000cb84 <_tx_event_flags_set+0x5c4>
4000c5ec:	e5910000 	ldr	r0, [r1]
4000c5f0:	e3500000 	cmp	r0, #0
4000c5f4:	0a000031 	beq	4000c6c0 <_tx_event_flags_set+0x100>
4000c5f8:	e59f1588 	ldr	r1, [pc, #1416]	; 4000cb88 <_tx_event_flags_set+0x5c8>
4000c5fc:	e5911000 	ldr	r1, [r1]
4000c600:	e2811001 	add	r1, r1, #1
4000c604:	e59f257c 	ldr	r2, [pc, #1404]	; 4000cb88 <_tx_event_flags_set+0x5c8>
4000c608:	e5821000 	str	r1, [r2]
4000c60c:	e580100c 	str	r1, [r0, #12]
4000c610:	e59f1574 	ldr	r1, [pc, #1396]	; 4000cb8c <_tx_event_flags_set+0x5cc>
4000c614:	e5911000 	ldr	r1, [r1]
4000c618:	e3510000 	cmp	r1, #0
4000c61c:	1a000006 	bne	4000c63c <_tx_event_flags_set+0x7c>
4000c620:	e59f1568 	ldr	r1, [pc, #1384]	; 4000cb90 <_tx_event_flags_set+0x5d0>
4000c624:	e5911000 	ldr	r1, [r1]
4000c628:	e5801000 	str	r1, [r0]
4000c62c:	e5901000 	ldr	r1, [r0]
4000c630:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000c634:	e5801004 	str	r1, [r0, #4]
4000c638:	ea00000d 	b	4000c674 <_tx_event_flags_set+0xb4>
4000c63c:	e59f1548 	ldr	r1, [pc, #1352]	; 4000cb8c <_tx_event_flags_set+0x5cc>
4000c640:	e5911000 	ldr	r1, [r1]
4000c644:	e59f2548 	ldr	r2, [pc, #1352]	; 4000cb94 <_tx_event_flags_set+0x5d4>
4000c648:	e1510002 	cmp	r1, r2
4000c64c:	2a000004 	bcs	4000c664 <_tx_event_flags_set+0xa4>
4000c650:	e3e01000 	mvn	r1, #0
4000c654:	e5801000 	str	r1, [r0]
4000c658:	e3a01000 	mov	r1, #0
4000c65c:	e5801004 	str	r1, [r0, #4]
4000c660:	ea000003 	b	4000c674 <_tx_event_flags_set+0xb4>
4000c664:	e59f1528 	ldr	r1, [pc, #1320]	; 4000cb94 <_tx_event_flags_set+0x5d4>
4000c668:	e5801000 	str	r1, [r0]
4000c66c:	e3a01000 	mov	r1, #0
4000c670:	e5801004 	str	r1, [r0, #4]
4000c674:	e3a01024 	mov	r1, #36	; 0x24
4000c678:	e5801008 	str	r1, [r0, #8]
4000c67c:	e5804010 	str	r4, [r0, #16]
4000c680:	e5805014 	str	r5, [r0, #20]
4000c684:	e5806018 	str	r6, [r0, #24]
4000c688:	e5941014 	ldr	r1, [r4, #20]
4000c68c:	e580101c 	str	r1, [r0, #28]
4000c690:	e2800020 	add	r0, r0, #32
4000c694:	e59f14fc 	ldr	r1, [pc, #1276]	; 4000cb98 <_tx_event_flags_set+0x5d8>
4000c698:	e5911000 	ldr	r1, [r1]
4000c69c:	e1500001 	cmp	r0, r1
4000c6a0:	3a000001 	bcc	4000c6ac <_tx_event_flags_set+0xec>
4000c6a4:	e59f14f0 	ldr	r1, [pc, #1264]	; 4000cb9c <_tx_event_flags_set+0x5dc>
4000c6a8:	e5910000 	ldr	r0, [r1]
4000c6ac:	e59f14d0 	ldr	r1, [pc, #1232]	; 4000cb84 <_tx_event_flags_set+0x5c4>
4000c6b0:	e5810000 	str	r0, [r1]
4000c6b4:	e59f14e4 	ldr	r1, [pc, #1252]	; 4000cba0 <_tx_event_flags_set+0x5e0>
4000c6b8:	e5911000 	ldr	r1, [r1]
4000c6bc:	e5810020 	str	r0, [r1, #32]
4000c6c0:	e3160002 	tst	r6, #2
4000c6c4:	0a000011 	beq	4000c710 <_tx_event_flags_set+0x150>
4000c6c8:	e5940014 	ldr	r0, [r4, #20]
4000c6cc:	e3500000 	cmp	r0, #0
4000c6d0:	0a000007 	beq	4000c6f4 <_tx_event_flags_set+0x134>
4000c6d4:	e5940010 	ldr	r0, [r4, #16]
4000c6d8:	e3500000 	cmp	r0, #0
4000c6dc:	1a000004 	bne	4000c6f4 <_tx_event_flags_set+0x134>
4000c6e0:	e1e01005 	mvn	r1, r5
4000c6e4:	e5940020 	ldr	r0, [r4, #32]
4000c6e8:	e1800001 	orr	r0, r0, r1
4000c6ec:	e5840020 	str	r0, [r4, #32]
4000c6f0:	ea000002 	b	4000c700 <_tx_event_flags_set+0x140>
4000c6f4:	e5940008 	ldr	r0, [r4, #8]
4000c6f8:	e0000005 	and	r0, r0, r5
4000c6fc:	e5840008 	str	r0, [r4, #8]
4000c700:	e121f007 	msr	CPSR_c, r7
4000c704:	e3a00000 	mov	r0, #0
4000c708:	e28dd01c 	add	sp, sp, #28
4000c70c:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000c710:	e5940008 	ldr	r0, [r4, #8]
4000c714:	e1800005 	orr	r0, r0, r5
4000c718:	e5840008 	str	r0, [r4, #8]
4000c71c:	e5940020 	ldr	r0, [r4, #32]
4000c720:	e3500000 	cmp	r0, #0
4000c724:	0a000002 	beq	4000c734 <_tx_event_flags_set+0x174>
4000c728:	e5940020 	ldr	r0, [r4, #32]
4000c72c:	e1c00005 	bic	r0, r0, r5
4000c730:	e5840020 	str	r0, [r4, #32]
4000c734:	e5940010 	ldr	r0, [r4, #16]
4000c738:	e3500000 	cmp	r0, #0
4000c73c:	0a000102 	beq	4000cb4c <_tx_event_flags_set+0x58c>
4000c740:	e5940014 	ldr	r0, [r4, #20]
4000c744:	e3500001 	cmp	r0, #1
4000c748:	1a000048 	bne	4000c870 <_tx_event_flags_set+0x2b0>
4000c74c:	e5940010 	ldr	r0, [r4, #16]
4000c750:	e58d0014 	str	r0, [sp, #20]
4000c754:	e59d0014 	ldr	r0, [sp, #20]
4000c758:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c75c:	e3100002 	tst	r0, #2
4000c760:	0a00000b 	beq	4000c794 <_tx_event_flags_set+0x1d4>
4000c764:	e5940008 	ldr	r0, [r4, #8]
4000c768:	e59d1014 	ldr	r1, [sp, #20]
4000c76c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c770:	e0000001 	and	r0, r0, r1
4000c774:	e59d1014 	ldr	r1, [sp, #20]
4000c778:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c77c:	e1500001 	cmp	r0, r1
4000c780:	1a000001 	bne	4000c78c <_tx_event_flags_set+0x1cc>
4000c784:	e3a08000 	mov	r8, #0
4000c788:	ea000009 	b	4000c7b4 <_tx_event_flags_set+0x1f4>
4000c78c:	e3a08007 	mov	r8, #7
4000c790:	ea000007 	b	4000c7b4 <_tx_event_flags_set+0x1f4>
4000c794:	e5940008 	ldr	r0, [r4, #8]
4000c798:	e59d1014 	ldr	r1, [sp, #20]
4000c79c:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c7a0:	e1100001 	tst	r0, r1
4000c7a4:	0a000001 	beq	4000c7b0 <_tx_event_flags_set+0x1f0>
4000c7a8:	e3a08000 	mov	r8, #0
4000c7ac:	ea000000 	b	4000c7b4 <_tx_event_flags_set+0x1f4>
4000c7b0:	e3a08007 	mov	r8, #7
4000c7b4:	e3580000 	cmp	r8, #0
4000c7b8:	1a000024 	bne	4000c850 <_tx_event_flags_set+0x290>
4000c7bc:	e5941008 	ldr	r1, [r4, #8]
4000c7c0:	e59d0014 	ldr	r0, [sp, #20]
4000c7c4:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c7c8:	e5801000 	str	r1, [r0]
4000c7cc:	e59d0014 	ldr	r0, [sp, #20]
4000c7d0:	e5900080 	ldr	r0, [r0, #128]	; 0x80
4000c7d4:	e3100001 	tst	r0, #1
4000c7d8:	0a000004 	beq	4000c7f0 <_tx_event_flags_set+0x230>
4000c7dc:	e5940008 	ldr	r0, [r4, #8]
4000c7e0:	e59d1014 	ldr	r1, [sp, #20]
4000c7e4:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c7e8:	e1c00001 	bic	r0, r0, r1
4000c7ec:	e5840008 	str	r0, [r4, #8]
4000c7f0:	e3a00000 	mov	r0, #0
4000c7f4:	e5840010 	str	r0, [r4, #16]
4000c7f8:	e5840014 	str	r0, [r4, #20]
4000c7fc:	e3a01000 	mov	r1, #0
4000c800:	e59d0014 	ldr	r0, [sp, #20]
4000c804:	e5801068 	str	r1, [r0, #104]	; 0x68
4000c808:	e59f0394 	ldr	r0, [pc, #916]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000c80c:	e5900000 	ldr	r0, [r0]
4000c810:	e2800001 	add	r0, r0, #1
4000c814:	e59f1388 	ldr	r1, [pc, #904]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000c818:	e5810000 	str	r0, [r1]
4000c81c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c820:	e121f007 	msr	CPSR_c, r7
4000c824:	e35b0000 	cmp	fp, #0
4000c828:	0a000001 	beq	4000c834 <_tx_event_flags_set+0x274>
4000c82c:	e1a00004 	mov	r0, r4
4000c830:	e12fff3b 	blx	fp
4000c834:	e3a00000 	mov	r0, #0
4000c838:	e59d1014 	ldr	r1, [sp, #20]
4000c83c:	e5810084 	str	r0, [r1, #132]	; 0x84
4000c840:	e59d0014 	ldr	r0, [sp, #20]
4000c844:	eb000b23 	bl	4000f4d8 <_tx_thread_system_resume>
4000c848:	e3a00000 	mov	r0, #0
4000c84c:	eaffffad 	b	4000c708 <_tx_event_flags_set+0x148>
4000c850:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000c854:	e121f007 	msr	CPSR_c, r7
4000c858:	e35b0000 	cmp	fp, #0
4000c85c:	0a000001 	beq	4000c868 <_tx_event_flags_set+0x2a8>
4000c860:	e1a00004 	mov	r0, r4
4000c864:	e12fff3b 	blx	fp
4000c868:	e3a00000 	mov	r0, #0
4000c86c:	eaffffa5 	b	4000c708 <_tx_event_flags_set+0x148>
4000c870:	e5940010 	ldr	r0, [r4, #16]
4000c874:	e58d0004 	str	r0, [sp, #4]
4000c878:	e59d0004 	ldr	r0, [sp, #4]
4000c87c:	e58d0014 	str	r0, [sp, #20]
4000c880:	e3a00000 	mov	r0, #0
4000c884:	e5840010 	str	r0, [r4, #16]
4000c888:	e58d000c 	str	r0, [sp, #12]
4000c88c:	e58d0008 	str	r0, [sp, #8]
4000c890:	e5940014 	ldr	r0, [r4, #20]
4000c894:	e58d0000 	str	r0, [sp]
4000c898:	e5949008 	ldr	r9, [r4, #8]
4000c89c:	e59f0300 	ldr	r0, [pc, #768]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000c8a0:	e5900000 	ldr	r0, [r0]
4000c8a4:	e2800001 	add	r0, r0, #1
4000c8a8:	e59f12f4 	ldr	r1, [pc, #756]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000c8ac:	e5810000 	str	r0, [r1]
4000c8b0:	e1a00000 	nop			; (mov r0, r0)
4000c8b4:	e121f007 	msr	CPSR_c, r7
4000c8b8:	e10f7000 	mrs	r7, CPSR
4000c8bc:	e3870080 	orr	r0, r7, #128	; 0x80
4000c8c0:	e58d0018 	str	r0, [sp, #24]
4000c8c4:	e59d0018 	ldr	r0, [sp, #24]
4000c8c8:	e121f000 	msr	CPSR_c, r0
4000c8cc:	e594000c 	ldr	r0, [r4, #12]
4000c8d0:	e3500000 	cmp	r0, #0
4000c8d4:	0a00000b 	beq	4000c908 <_tx_event_flags_set+0x348>
4000c8d8:	e3a00000 	mov	r0, #0
4000c8dc:	e584000c 	str	r0, [r4, #12]
4000c8e0:	e59d0004 	ldr	r0, [sp, #4]
4000c8e4:	e58d0014 	str	r0, [sp, #20]
4000c8e8:	e5940014 	ldr	r0, [r4, #20]
4000c8ec:	e58d0000 	str	r0, [sp]
4000c8f0:	e5940008 	ldr	r0, [r4, #8]
4000c8f4:	e1899000 	orr	r9, r9, r0
4000c8f8:	e59d0014 	ldr	r0, [sp, #20]
4000c8fc:	e3500000 	cmp	r0, #0
4000c900:	1a000000 	bne	4000c908 <_tx_event_flags_set+0x348>
4000c904:	ea00005d 	b	4000ca80 <_tx_event_flags_set+0x4c0>
4000c908:	e59d0014 	ldr	r0, [sp, #20]
4000c90c:	e590a080 	ldr	sl, [r0, #128]	; 0x80
4000c910:	e31a0002 	tst	sl, #2
4000c914:	0a00000a 	beq	4000c944 <_tx_event_flags_set+0x384>
4000c918:	e59d0014 	ldr	r0, [sp, #20]
4000c91c:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c920:	e0000009 	and	r0, r0, r9
4000c924:	e59d1014 	ldr	r1, [sp, #20]
4000c928:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c92c:	e1500001 	cmp	r0, r1
4000c930:	1a000001 	bne	4000c93c <_tx_event_flags_set+0x37c>
4000c934:	e3a08000 	mov	r8, #0
4000c938:	ea000008 	b	4000c960 <_tx_event_flags_set+0x3a0>
4000c93c:	e3a08007 	mov	r8, #7
4000c940:	ea000006 	b	4000c960 <_tx_event_flags_set+0x3a0>
4000c944:	e59d0014 	ldr	r0, [sp, #20]
4000c948:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4000c94c:	e1100009 	tst	r0, r9
4000c950:	0a000001 	beq	4000c95c <_tx_event_flags_set+0x39c>
4000c954:	e3a08000 	mov	r8, #0
4000c958:	ea000000 	b	4000c960 <_tx_event_flags_set+0x3a0>
4000c95c:	e3a08007 	mov	r8, #7
4000c960:	e59d0014 	ldr	r0, [sp, #20]
4000c964:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c968:	e58d0010 	str	r0, [sp, #16]
4000c96c:	e3580000 	cmp	r8, #0
4000c970:	1a00003c 	bne	4000ca68 <_tx_event_flags_set+0x4a8>
4000c974:	e59d0014 	ldr	r0, [sp, #20]
4000c978:	e590007c 	ldr	r0, [r0, #124]	; 0x7c
4000c97c:	e5809000 	str	r9, [r0]
4000c980:	e31a0001 	tst	sl, #1
4000c984:	0a000004 	beq	4000c99c <_tx_event_flags_set+0x3dc>
4000c988:	e5940008 	ldr	r0, [r4, #8]
4000c98c:	e59d1014 	ldr	r1, [sp, #20]
4000c990:	e5911078 	ldr	r1, [r1, #120]	; 0x78
4000c994:	e1c00001 	bic	r0, r0, r1
4000c998:	e5840008 	str	r0, [r4, #8]
4000c99c:	e59d0014 	ldr	r0, [sp, #20]
4000c9a0:	e5901070 	ldr	r1, [r0, #112]	; 0x70
4000c9a4:	e1510000 	cmp	r1, r0
4000c9a8:	1a000002 	bne	4000c9b8 <_tx_event_flags_set+0x3f8>
4000c9ac:	e3a00000 	mov	r0, #0
4000c9b0:	e58d0004 	str	r0, [sp, #4]
4000c9b4:	ea000010 	b	4000c9fc <_tx_event_flags_set+0x43c>
4000c9b8:	e59d0004 	ldr	r0, [sp, #4]
4000c9bc:	e59d1014 	ldr	r1, [sp, #20]
4000c9c0:	e1500001 	cmp	r0, r1
4000c9c4:	1a000002 	bne	4000c9d4 <_tx_event_flags_set+0x414>
4000c9c8:	e59d0014 	ldr	r0, [sp, #20]
4000c9cc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c9d0:	e58d0004 	str	r0, [sp, #4]
4000c9d4:	e59d0014 	ldr	r0, [sp, #20]
4000c9d8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000c9dc:	e59d1014 	ldr	r1, [sp, #20]
4000c9e0:	e5911070 	ldr	r1, [r1, #112]	; 0x70
4000c9e4:	e5810074 	str	r0, [r1, #116]	; 0x74
4000c9e8:	e59d0014 	ldr	r0, [sp, #20]
4000c9ec:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000c9f0:	e59d1014 	ldr	r1, [sp, #20]
4000c9f4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4000c9f8:	e5810070 	str	r0, [r1, #112]	; 0x70
4000c9fc:	e5940014 	ldr	r0, [r4, #20]
4000ca00:	e2400001 	sub	r0, r0, #1
4000ca04:	e5840014 	str	r0, [r4, #20]
4000ca08:	e3a00000 	mov	r0, #0
4000ca0c:	e59d1014 	ldr	r1, [sp, #20]
4000ca10:	e5810068 	str	r0, [r1, #104]	; 0x68
4000ca14:	e59d1014 	ldr	r1, [sp, #20]
4000ca18:	e5810084 	str	r0, [r1, #132]	; 0x84
4000ca1c:	e59d000c 	ldr	r0, [sp, #12]
4000ca20:	e3500000 	cmp	r0, #0
4000ca24:	1a000007 	bne	4000ca48 <_tx_event_flags_set+0x488>
4000ca28:	e59d0014 	ldr	r0, [sp, #20]
4000ca2c:	e58d000c 	str	r0, [sp, #12]
4000ca30:	e59d0014 	ldr	r0, [sp, #20]
4000ca34:	e58d0008 	str	r0, [sp, #8]
4000ca38:	e3a01000 	mov	r1, #0
4000ca3c:	e59d0014 	ldr	r0, [sp, #20]
4000ca40:	e5801070 	str	r1, [r0, #112]	; 0x70
4000ca44:	ea000007 	b	4000ca68 <_tx_event_flags_set+0x4a8>
4000ca48:	e59d0014 	ldr	r0, [sp, #20]
4000ca4c:	e59d1008 	ldr	r1, [sp, #8]
4000ca50:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ca54:	e3a00000 	mov	r0, #0
4000ca58:	e59d1014 	ldr	r1, [sp, #20]
4000ca5c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000ca60:	e59d0014 	ldr	r0, [sp, #20]
4000ca64:	e58d0008 	str	r0, [sp, #8]
4000ca68:	e59d0010 	ldr	r0, [sp, #16]
4000ca6c:	e58d0014 	str	r0, [sp, #20]
4000ca70:	e59d0000 	ldr	r0, [sp]
4000ca74:	e2500001 	subs	r0, r0, #1
4000ca78:	e58d0000 	str	r0, [sp]
4000ca7c:	1affff8c 	bne	4000c8b4 <_tx_event_flags_set+0x2f4>
4000ca80:	e1a00000 	nop			; (mov r0, r0)
4000ca84:	e59d0004 	ldr	r0, [sp, #4]
4000ca88:	e5840010 	str	r0, [r4, #16]
4000ca8c:	e5940020 	ldr	r0, [r4, #32]
4000ca90:	e3500000 	cmp	r0, #0
4000ca94:	0a000005 	beq	4000cab0 <_tx_event_flags_set+0x4f0>
4000ca98:	e5940008 	ldr	r0, [r4, #8]
4000ca9c:	e5941020 	ldr	r1, [r4, #32]
4000caa0:	e1c00001 	bic	r0, r0, r1
4000caa4:	e5840008 	str	r0, [r4, #8]
4000caa8:	e3a00000 	mov	r0, #0
4000caac:	e5840020 	str	r0, [r4, #32]
4000cab0:	e121f007 	msr	CPSR_c, r7
4000cab4:	e59d000c 	ldr	r0, [sp, #12]
4000cab8:	e58d0014 	str	r0, [sp, #20]
4000cabc:	ea000011 	b	4000cb08 <_tx_event_flags_set+0x548>
4000cac0:	e59d0014 	ldr	r0, [sp, #20]
4000cac4:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000cac8:	e58d0010 	str	r0, [sp, #16]
4000cacc:	e10f7000 	mrs	r7, CPSR
4000cad0:	e3870080 	orr	r0, r7, #128	; 0x80
4000cad4:	e58d0018 	str	r0, [sp, #24]
4000cad8:	e59d0018 	ldr	r0, [sp, #24]
4000cadc:	e121f000 	msr	CPSR_c, r0
4000cae0:	e59f00bc 	ldr	r0, [pc, #188]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000cae4:	e5900000 	ldr	r0, [r0]
4000cae8:	e2800001 	add	r0, r0, #1
4000caec:	e59f10b0 	ldr	r1, [pc, #176]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000caf0:	e5810000 	str	r0, [r1]
4000caf4:	e121f007 	msr	CPSR_c, r7
4000caf8:	e59d0014 	ldr	r0, [sp, #20]
4000cafc:	eb000a75 	bl	4000f4d8 <_tx_thread_system_resume>
4000cb00:	e59d0010 	ldr	r0, [sp, #16]
4000cb04:	e58d0014 	str	r0, [sp, #20]
4000cb08:	e59d0014 	ldr	r0, [sp, #20]
4000cb0c:	e3500000 	cmp	r0, #0
4000cb10:	1affffea 	bne	4000cac0 <_tx_event_flags_set+0x500>
4000cb14:	e10f7000 	mrs	r7, CPSR
4000cb18:	e3870080 	orr	r0, r7, #128	; 0x80
4000cb1c:	e58d0018 	str	r0, [sp, #24]
4000cb20:	e59d0018 	ldr	r0, [sp, #24]
4000cb24:	e121f000 	msr	CPSR_c, r0
4000cb28:	e59f0074 	ldr	r0, [pc, #116]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000cb2c:	e5900000 	ldr	r0, [r0]
4000cb30:	e2400001 	sub	r0, r0, #1
4000cb34:	e59f1068 	ldr	r1, [pc, #104]	; 4000cba4 <_tx_event_flags_set+0x5e4>
4000cb38:	e5810000 	str	r0, [r1]
4000cb3c:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000cb40:	e121f007 	msr	CPSR_c, r7
4000cb44:	eb000a37 	bl	4000f428 <_tx_thread_system_preempt_check>
4000cb48:	ea000007 	b	4000cb6c <_tx_event_flags_set+0x5ac>
4000cb4c:	e5940014 	ldr	r0, [r4, #20]
4000cb50:	e3500000 	cmp	r0, #0
4000cb54:	0a000002 	beq	4000cb64 <_tx_event_flags_set+0x5a4>
4000cb58:	e594000c 	ldr	r0, [r4, #12]
4000cb5c:	e2800001 	add	r0, r0, #1
4000cb60:	e584000c 	str	r0, [r4, #12]
4000cb64:	e594b024 	ldr	fp, [r4, #36]	; 0x24
4000cb68:	e121f007 	msr	CPSR_c, r7
4000cb6c:	e35b0000 	cmp	fp, #0
4000cb70:	0a000001 	beq	4000cb7c <_tx_event_flags_set+0x5bc>
4000cb74:	e1a00004 	mov	r0, r4
4000cb78:	e12fff3b 	blx	fp
4000cb7c:	e3a00000 	mov	r0, #0
4000cb80:	eafffee0 	b	4000c708 <_tx_event_flags_set+0x148>
4000cb84:	40030ea0 	.word	0x40030ea0
4000cb88:	40030ea4 	.word	0x40030ea4
4000cb8c:	40030e2c 	.word	0x40030e2c
4000cb90:	40030e34 	.word	0x40030e34
4000cb94:	f0f0f0f0 	.word	0xf0f0f0f0
4000cb98:	40030e9c 	.word	0x40030e9c
4000cb9c:	40030e98 	.word	0x40030e98
4000cba0:	40030e8c 	.word	0x40030e8c
4000cba4:	40030e50 	.word	0x40030e50

4000cba8 <_tx_initialize_high_level>:
4000cba8:	e92d4010 	push	{r4, lr}
4000cbac:	ebfff38a 	bl	400099dc <_tx_trace_initialize>
4000cbb0:	ebffeff0 	bl	40008b78 <_tx_thread_initialize>
4000cbb4:	ebfff26b 	bl	40009568 <_tx_timer_initialize>
4000cbb8:	e3a00000 	mov	r0, #0
4000cbbc:	e59f105c 	ldr	r1, [pc, #92]	; 4000cc20 <_tx_initialize_high_level+0x78>
4000cbc0:	e5810000 	str	r0, [r1]
4000cbc4:	e59f1058 	ldr	r1, [pc, #88]	; 4000cc24 <_tx_initialize_high_level+0x7c>
4000cbc8:	e5810000 	str	r0, [r1]
4000cbcc:	e59f1054 	ldr	r1, [pc, #84]	; 4000cc28 <_tx_initialize_high_level+0x80>
4000cbd0:	e5810000 	str	r0, [r1]
4000cbd4:	e59f1050 	ldr	r1, [pc, #80]	; 4000cc2c <_tx_initialize_high_level+0x84>
4000cbd8:	e5810000 	str	r0, [r1]
4000cbdc:	e59f104c 	ldr	r1, [pc, #76]	; 4000cc30 <_tx_initialize_high_level+0x88>
4000cbe0:	e5810000 	str	r0, [r1]
4000cbe4:	e59f1048 	ldr	r1, [pc, #72]	; 4000cc34 <_tx_initialize_high_level+0x8c>
4000cbe8:	e5810000 	str	r0, [r1]
4000cbec:	e59f1044 	ldr	r1, [pc, #68]	; 4000cc38 <_tx_initialize_high_level+0x90>
4000cbf0:	e5810000 	str	r0, [r1]
4000cbf4:	e59f1040 	ldr	r1, [pc, #64]	; 4000cc3c <_tx_initialize_high_level+0x94>
4000cbf8:	e5810000 	str	r0, [r1]
4000cbfc:	e59f103c 	ldr	r1, [pc, #60]	; 4000cc40 <_tx_initialize_high_level+0x98>
4000cc00:	e5810000 	str	r0, [r1]
4000cc04:	e59f1038 	ldr	r1, [pc, #56]	; 4000cc44 <_tx_initialize_high_level+0x9c>
4000cc08:	e5810000 	str	r0, [r1]
4000cc0c:	e59f1034 	ldr	r1, [pc, #52]	; 4000cc48 <_tx_initialize_high_level+0xa0>
4000cc10:	e5810000 	str	r0, [r1]
4000cc14:	e59f1030 	ldr	r1, [pc, #48]	; 4000cc4c <_tx_initialize_high_level+0xa4>
4000cc18:	e5810000 	str	r0, [r1]
4000cc1c:	e8bd8010 	pop	{r4, pc}
4000cc20:	40030ea8 	.word	0x40030ea8
4000cc24:	40030eac 	.word	0x40030eac
4000cc28:	40030eb0 	.word	0x40030eb0
4000cc2c:	40030eb4 	.word	0x40030eb4
4000cc30:	40030eb8 	.word	0x40030eb8
4000cc34:	40030ebc 	.word	0x40030ebc
4000cc38:	40030ec8 	.word	0x40030ec8
4000cc3c:	40030ecc 	.word	0x40030ecc
4000cc40:	40030ed0 	.word	0x40030ed0
4000cc44:	40030ed4 	.word	0x40030ed4
4000cc48:	40030ec0 	.word	0x40030ec0
4000cc4c:	40030ec4 	.word	0x40030ec4

4000cc50 <_tx_mutex_create>:
4000cc50:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
4000cc54:	e1a04000 	mov	r4, r0
4000cc58:	e1a05001 	mov	r5, r1
4000cc5c:	e1a06002 	mov	r6, r2
4000cc60:	e3a01038 	mov	r1, #56	; 0x38
4000cc64:	e1a00004 	mov	r0, r4
4000cc68:	eb001b36 	bl	40013948 <__aeabi_memclr4>
4000cc6c:	e5845004 	str	r5, [r4, #4]
4000cc70:	e5846010 	str	r6, [r4, #16]
4000cc74:	e10f7000 	mrs	r7, CPSR
4000cc78:	e3878080 	orr	r8, r7, #128	; 0x80
4000cc7c:	e121f008 	msr	CPSR_c, r8
4000cc80:	e59f0174 	ldr	r0, [pc, #372]	; 4000cdfc <_tx_mutex_create+0x1ac>
4000cc84:	e5840000 	str	r0, [r4]
4000cc88:	e59f0170 	ldr	r0, [pc, #368]	; 4000ce00 <_tx_mutex_create+0x1b0>
4000cc8c:	e5900000 	ldr	r0, [r0]
4000cc90:	e3500000 	cmp	r0, #0
4000cc94:	0a00000e 	beq	4000ccd4 <_tx_mutex_create+0x84>
4000cc98:	e59f0160 	ldr	r0, [pc, #352]	; 4000ce00 <_tx_mutex_create+0x1b0>
4000cc9c:	e5900000 	ldr	r0, [r0]
4000cca0:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000cca4:	e58d0004 	str	r0, [sp, #4]
4000cca8:	e59f0150 	ldr	r0, [pc, #336]	; 4000ce00 <_tx_mutex_create+0x1b0>
4000ccac:	e5900000 	ldr	r0, [r0]
4000ccb0:	e5804028 	str	r4, [r0, #40]	; 0x28
4000ccb4:	e59d0004 	ldr	r0, [sp, #4]
4000ccb8:	e5804024 	str	r4, [r0, #36]	; 0x24
4000ccbc:	e59d0004 	ldr	r0, [sp, #4]
4000ccc0:	e5840028 	str	r0, [r4, #40]	; 0x28
4000ccc4:	e59f0134 	ldr	r0, [pc, #308]	; 4000ce00 <_tx_mutex_create+0x1b0>
4000ccc8:	e5900000 	ldr	r0, [r0]
4000cccc:	e5840024 	str	r0, [r4, #36]	; 0x24
4000ccd0:	ea000003 	b	4000cce4 <_tx_mutex_create+0x94>
4000ccd4:	e59f0124 	ldr	r0, [pc, #292]	; 4000ce00 <_tx_mutex_create+0x1b0>
4000ccd8:	e5804000 	str	r4, [r0]
4000ccdc:	e5844024 	str	r4, [r4, #36]	; 0x24
4000cce0:	e5844028 	str	r4, [r4, #40]	; 0x28
4000cce4:	e59f0118 	ldr	r0, [pc, #280]	; 4000ce04 <_tx_mutex_create+0x1b4>
4000cce8:	e5900000 	ldr	r0, [r0]
4000ccec:	e2800001 	add	r0, r0, #1
4000ccf0:	e59f110c 	ldr	r1, [pc, #268]	; 4000ce04 <_tx_mutex_create+0x1b4>
4000ccf4:	e5810000 	str	r0, [r1]
4000ccf8:	e3a03000 	mov	r3, #0
4000ccfc:	e58d3000 	str	r3, [sp]
4000cd00:	e1a03006 	mov	r3, r6
4000cd04:	e1a02005 	mov	r2, r5
4000cd08:	e1a01004 	mov	r1, r4
4000cd0c:	e3a00005 	mov	r0, #5
4000cd10:	eb000d46 	bl	40010230 <_tx_trace_object_register>
4000cd14:	e59f10ec 	ldr	r1, [pc, #236]	; 4000ce08 <_tx_mutex_create+0x1b8>
4000cd18:	e5910000 	ldr	r0, [r1]
4000cd1c:	e3500000 	cmp	r0, #0
4000cd20:	0a000032 	beq	4000cdf0 <_tx_mutex_create+0x1a0>
4000cd24:	e59f10e0 	ldr	r1, [pc, #224]	; 4000ce0c <_tx_mutex_create+0x1bc>
4000cd28:	e5911000 	ldr	r1, [r1]
4000cd2c:	e2811001 	add	r1, r1, #1
4000cd30:	e59f20d4 	ldr	r2, [pc, #212]	; 4000ce0c <_tx_mutex_create+0x1bc>
4000cd34:	e5821000 	str	r1, [r2]
4000cd38:	e580100c 	str	r1, [r0, #12]
4000cd3c:	e59f10cc 	ldr	r1, [pc, #204]	; 4000ce10 <_tx_mutex_create+0x1c0>
4000cd40:	e5911000 	ldr	r1, [r1]
4000cd44:	e3510000 	cmp	r1, #0
4000cd48:	1a000006 	bne	4000cd68 <_tx_mutex_create+0x118>
4000cd4c:	e59f10c0 	ldr	r1, [pc, #192]	; 4000ce14 <_tx_mutex_create+0x1c4>
4000cd50:	e5911000 	ldr	r1, [r1]
4000cd54:	e5801000 	str	r1, [r0]
4000cd58:	e5901000 	ldr	r1, [r0]
4000cd5c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000cd60:	e5801004 	str	r1, [r0, #4]
4000cd64:	ea00000d 	b	4000cda0 <_tx_mutex_create+0x150>
4000cd68:	e59f10a0 	ldr	r1, [pc, #160]	; 4000ce10 <_tx_mutex_create+0x1c0>
4000cd6c:	e5911000 	ldr	r1, [r1]
4000cd70:	e59f20a0 	ldr	r2, [pc, #160]	; 4000ce18 <_tx_mutex_create+0x1c8>
4000cd74:	e1510002 	cmp	r1, r2
4000cd78:	2a000004 	bcs	4000cd90 <_tx_mutex_create+0x140>
4000cd7c:	e3e01000 	mvn	r1, #0
4000cd80:	e5801000 	str	r1, [r0]
4000cd84:	e3a01000 	mov	r1, #0
4000cd88:	e5801004 	str	r1, [r0, #4]
4000cd8c:	ea000003 	b	4000cda0 <_tx_mutex_create+0x150>
4000cd90:	e59f1080 	ldr	r1, [pc, #128]	; 4000ce18 <_tx_mutex_create+0x1c8>
4000cd94:	e5801000 	str	r1, [r0]
4000cd98:	e3a01000 	mov	r1, #0
4000cd9c:	e5801004 	str	r1, [r0, #4]
4000cda0:	e3a01032 	mov	r1, #50	; 0x32
4000cda4:	e5801008 	str	r1, [r0, #8]
4000cda8:	e5804010 	str	r4, [r0, #16]
4000cdac:	e5806014 	str	r6, [r0, #20]
4000cdb0:	e28d1004 	add	r1, sp, #4
4000cdb4:	e5801018 	str	r1, [r0, #24]
4000cdb8:	e3a01000 	mov	r1, #0
4000cdbc:	e580101c 	str	r1, [r0, #28]
4000cdc0:	e2800020 	add	r0, r0, #32
4000cdc4:	e59f1050 	ldr	r1, [pc, #80]	; 4000ce1c <_tx_mutex_create+0x1cc>
4000cdc8:	e5911000 	ldr	r1, [r1]
4000cdcc:	e1500001 	cmp	r0, r1
4000cdd0:	3a000001 	bcc	4000cddc <_tx_mutex_create+0x18c>
4000cdd4:	e59f1044 	ldr	r1, [pc, #68]	; 4000ce20 <_tx_mutex_create+0x1d0>
4000cdd8:	e5910000 	ldr	r0, [r1]
4000cddc:	e59f1024 	ldr	r1, [pc, #36]	; 4000ce08 <_tx_mutex_create+0x1b8>
4000cde0:	e5810000 	str	r0, [r1]
4000cde4:	e59f1038 	ldr	r1, [pc, #56]	; 4000ce24 <_tx_mutex_create+0x1d4>
4000cde8:	e5911000 	ldr	r1, [r1]
4000cdec:	e5810020 	str	r0, [r1, #32]
4000cdf0:	e121f007 	msr	CPSR_c, r7
4000cdf4:	e3a00000 	mov	r0, #0
4000cdf8:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
4000cdfc:	4d555445 	.word	0x4d555445
4000ce00:	40030ec0 	.word	0x40030ec0
4000ce04:	40030ec4 	.word	0x40030ec4
4000ce08:	40030ea0 	.word	0x40030ea0
4000ce0c:	40030ea4 	.word	0x40030ea4
4000ce10:	40030e2c 	.word	0x40030e2c
4000ce14:	40030e34 	.word	0x40030e34
4000ce18:	f0f0f0f0 	.word	0xf0f0f0f0
4000ce1c:	40030e9c 	.word	0x40030e9c
4000ce20:	40030e98 	.word	0x40030e98
4000ce24:	40030e8c 	.word	0x40030e8c

4000ce28 <_tx_mutex_delete>:
4000ce28:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000ce2c:	e1a04000 	mov	r4, r0
4000ce30:	e10f5000 	mrs	r5, CPSR
4000ce34:	e3856080 	orr	r6, r5, #128	; 0x80
4000ce38:	e121f006 	msr	CPSR_c, r6
4000ce3c:	e59f1294 	ldr	r1, [pc, #660]	; 4000d0d8 <_tx_mutex_delete+0x2b0>
4000ce40:	e5910000 	ldr	r0, [r1]
4000ce44:	e3500000 	cmp	r0, #0
4000ce48:	0a000031 	beq	4000cf14 <_tx_mutex_delete+0xec>
4000ce4c:	e59f1288 	ldr	r1, [pc, #648]	; 4000d0dc <_tx_mutex_delete+0x2b4>
4000ce50:	e5911000 	ldr	r1, [r1]
4000ce54:	e2811001 	add	r1, r1, #1
4000ce58:	e59f227c 	ldr	r2, [pc, #636]	; 4000d0dc <_tx_mutex_delete+0x2b4>
4000ce5c:	e5821000 	str	r1, [r2]
4000ce60:	e580100c 	str	r1, [r0, #12]
4000ce64:	e59f1274 	ldr	r1, [pc, #628]	; 4000d0e0 <_tx_mutex_delete+0x2b8>
4000ce68:	e5911000 	ldr	r1, [r1]
4000ce6c:	e3510000 	cmp	r1, #0
4000ce70:	1a000006 	bne	4000ce90 <_tx_mutex_delete+0x68>
4000ce74:	e59f1268 	ldr	r1, [pc, #616]	; 4000d0e4 <_tx_mutex_delete+0x2bc>
4000ce78:	e5911000 	ldr	r1, [r1]
4000ce7c:	e5801000 	str	r1, [r0]
4000ce80:	e5901000 	ldr	r1, [r0]
4000ce84:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ce88:	e5801004 	str	r1, [r0, #4]
4000ce8c:	ea00000d 	b	4000cec8 <_tx_mutex_delete+0xa0>
4000ce90:	e59f1248 	ldr	r1, [pc, #584]	; 4000d0e0 <_tx_mutex_delete+0x2b8>
4000ce94:	e5911000 	ldr	r1, [r1]
4000ce98:	e59f2248 	ldr	r2, [pc, #584]	; 4000d0e8 <_tx_mutex_delete+0x2c0>
4000ce9c:	e1510002 	cmp	r1, r2
4000cea0:	2a000004 	bcs	4000ceb8 <_tx_mutex_delete+0x90>
4000cea4:	e3e01000 	mvn	r1, #0
4000cea8:	e5801000 	str	r1, [r0]
4000ceac:	e3a01000 	mov	r1, #0
4000ceb0:	e5801004 	str	r1, [r0, #4]
4000ceb4:	ea000003 	b	4000cec8 <_tx_mutex_delete+0xa0>
4000ceb8:	e59f1228 	ldr	r1, [pc, #552]	; 4000d0e8 <_tx_mutex_delete+0x2c0>
4000cebc:	e5801000 	str	r1, [r0]
4000cec0:	e3a01000 	mov	r1, #0
4000cec4:	e5801004 	str	r1, [r0, #4]
4000cec8:	e3a01033 	mov	r1, #51	; 0x33
4000cecc:	e5801008 	str	r1, [r0, #8]
4000ced0:	e5804010 	str	r4, [r0, #16]
4000ced4:	e580d014 	str	sp, [r0, #20]
4000ced8:	e3a01000 	mov	r1, #0
4000cedc:	e5801018 	str	r1, [r0, #24]
4000cee0:	e580101c 	str	r1, [r0, #28]
4000cee4:	e2800020 	add	r0, r0, #32
4000cee8:	e59f11fc 	ldr	r1, [pc, #508]	; 4000d0ec <_tx_mutex_delete+0x2c4>
4000ceec:	e5911000 	ldr	r1, [r1]
4000cef0:	e1500001 	cmp	r0, r1
4000cef4:	3a000001 	bcc	4000cf00 <_tx_mutex_delete+0xd8>
4000cef8:	e59f11f0 	ldr	r1, [pc, #496]	; 4000d0f0 <_tx_mutex_delete+0x2c8>
4000cefc:	e5910000 	ldr	r0, [r1]
4000cf00:	e59f11d0 	ldr	r1, [pc, #464]	; 4000d0d8 <_tx_mutex_delete+0x2b0>
4000cf04:	e5810000 	str	r0, [r1]
4000cf08:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d0f4 <_tx_mutex_delete+0x2cc>
4000cf0c:	e5911000 	ldr	r1, [r1]
4000cf10:	e5810020 	str	r0, [r1, #32]
4000cf14:	e1a00004 	mov	r0, r4
4000cf18:	eb000d2f 	bl	400103dc <_tx_trace_object_unregister>
4000cf1c:	e59f01d4 	ldr	r0, [pc, #468]	; 4000d0f8 <_tx_mutex_delete+0x2d0>
4000cf20:	e5900000 	ldr	r0, [r0]
4000cf24:	e2400001 	sub	r0, r0, #1
4000cf28:	e59f11c8 	ldr	r1, [pc, #456]	; 4000d0f8 <_tx_mutex_delete+0x2d0>
4000cf2c:	e5810000 	str	r0, [r1]
4000cf30:	e3a00000 	mov	r0, #0
4000cf34:	e5840000 	str	r0, [r4]
4000cf38:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cf3c:	e1500004 	cmp	r0, r4
4000cf40:	1a000003 	bne	4000cf54 <_tx_mutex_delete+0x12c>
4000cf44:	e3a00000 	mov	r0, #0
4000cf48:	e59f11ac 	ldr	r1, [pc, #428]	; 4000d0fc <_tx_mutex_delete+0x2d4>
4000cf4c:	e5810000 	str	r0, [r1]
4000cf50:	ea00000c 	b	4000cf88 <_tx_mutex_delete+0x160>
4000cf54:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000cf58:	e5941024 	ldr	r1, [r4, #36]	; 0x24
4000cf5c:	e5810028 	str	r0, [r1, #40]	; 0x28
4000cf60:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cf64:	e5941028 	ldr	r1, [r4, #40]	; 0x28
4000cf68:	e5810024 	str	r0, [r1, #36]	; 0x24
4000cf6c:	e59f0188 	ldr	r0, [pc, #392]	; 4000d0fc <_tx_mutex_delete+0x2d4>
4000cf70:	e5900000 	ldr	r0, [r0]
4000cf74:	e1500004 	cmp	r0, r4
4000cf78:	1a000002 	bne	4000cf88 <_tx_mutex_delete+0x160>
4000cf7c:	e59f1178 	ldr	r1, [pc, #376]	; 4000d0fc <_tx_mutex_delete+0x2d4>
4000cf80:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000cf84:	e5810000 	str	r0, [r1]
4000cf88:	e594000c 	ldr	r0, [r4, #12]
4000cf8c:	e58d0000 	str	r0, [sp]
4000cf90:	e5940010 	ldr	r0, [r4, #16]
4000cf94:	e3500000 	cmp	r0, #0
4000cf98:	0a00001c 	beq	4000d010 <_tx_mutex_delete+0x1e8>
4000cf9c:	e59d0000 	ldr	r0, [sp]
4000cfa0:	e3500000 	cmp	r0, #0
4000cfa4:	0a000019 	beq	4000d010 <_tx_mutex_delete+0x1e8>
4000cfa8:	e59d0000 	ldr	r0, [sp]
4000cfac:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cfb0:	e2400001 	sub	r0, r0, #1
4000cfb4:	e59d1000 	ldr	r1, [sp]
4000cfb8:	e581009c 	str	r0, [r1, #156]	; 0x9c
4000cfbc:	e59d0000 	ldr	r0, [sp]
4000cfc0:	e590009c 	ldr	r0, [r0, #156]	; 0x9c
4000cfc4:	e3500000 	cmp	r0, #0
4000cfc8:	1a000003 	bne	4000cfdc <_tx_mutex_delete+0x1b4>
4000cfcc:	e3a00000 	mov	r0, #0
4000cfd0:	e59d1000 	ldr	r1, [sp]
4000cfd4:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000cfd8:	ea00000c 	b	4000d010 <_tx_mutex_delete+0x1e8>
4000cfdc:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000cfe0:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000cfe4:	e5810034 	str	r0, [r1, #52]	; 0x34
4000cfe8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000cfec:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000cff0:	e5810030 	str	r0, [r1, #48]	; 0x30
4000cff4:	e59d0000 	ldr	r0, [sp]
4000cff8:	e59000a0 	ldr	r0, [r0, #160]	; 0xa0
4000cffc:	e1500004 	cmp	r0, r4
4000d000:	1a000002 	bne	4000d010 <_tx_mutex_delete+0x1e8>
4000d004:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d008:	e59d1000 	ldr	r1, [sp]
4000d00c:	e58100a0 	str	r0, [r1, #160]	; 0xa0
4000d010:	e3a00000 	mov	r0, #0
4000d014:	e584000c 	str	r0, [r4, #12]
4000d018:	e59f00e0 	ldr	r0, [pc, #224]	; 4000d100 <_tx_mutex_delete+0x2d8>
4000d01c:	e5900000 	ldr	r0, [r0]
4000d020:	e2800001 	add	r0, r0, #1
4000d024:	e59f10d4 	ldr	r1, [pc, #212]	; 4000d100 <_tx_mutex_delete+0x2d8>
4000d028:	e5810000 	str	r0, [r1]
4000d02c:	e121f005 	msr	CPSR_c, r5
4000d030:	e594001c 	ldr	r0, [r4, #28]
4000d034:	e58d0000 	str	r0, [sp]
4000d038:	ea000017 	b	4000d09c <_tx_mutex_delete+0x274>
4000d03c:	e10f5000 	mrs	r5, CPSR
4000d040:	e3856080 	orr	r6, r5, #128	; 0x80
4000d044:	e121f006 	msr	CPSR_c, r6
4000d048:	e3a00000 	mov	r0, #0
4000d04c:	e59d1000 	ldr	r1, [sp]
4000d050:	e5810068 	str	r0, [r1, #104]	; 0x68
4000d054:	e59f00a4 	ldr	r0, [pc, #164]	; 4000d100 <_tx_mutex_delete+0x2d8>
4000d058:	e5900000 	ldr	r0, [r0]
4000d05c:	e2800001 	add	r0, r0, #1
4000d060:	e59f1098 	ldr	r1, [pc, #152]	; 4000d100 <_tx_mutex_delete+0x2d8>
4000d064:	e5810000 	str	r0, [r1]
4000d068:	e121f005 	msr	CPSR_c, r5
4000d06c:	e3a00001 	mov	r0, #1
4000d070:	e59d1000 	ldr	r1, [sp]
4000d074:	e5810084 	str	r0, [r1, #132]	; 0x84
4000d078:	e59d0000 	ldr	r0, [sp]
4000d07c:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4000d080:	e58d0000 	str	r0, [sp]
4000d084:	e59d1000 	ldr	r1, [sp]
4000d088:	e5910074 	ldr	r0, [r1, #116]	; 0x74
4000d08c:	eb000911 	bl	4000f4d8 <_tx_thread_system_resume>
4000d090:	e5940020 	ldr	r0, [r4, #32]
4000d094:	e2400001 	sub	r0, r0, #1
4000d098:	e5840020 	str	r0, [r4, #32]
4000d09c:	e5940020 	ldr	r0, [r4, #32]
4000d0a0:	e3500000 	cmp	r0, #0
4000d0a4:	1affffe4 	bne	4000d03c <_tx_mutex_delete+0x214>
4000d0a8:	e10f5000 	mrs	r5, CPSR
4000d0ac:	e3856080 	orr	r6, r5, #128	; 0x80
4000d0b0:	e121f006 	msr	CPSR_c, r6
4000d0b4:	e59f0044 	ldr	r0, [pc, #68]	; 4000d100 <_tx_mutex_delete+0x2d8>
4000d0b8:	e5900000 	ldr	r0, [r0]
4000d0bc:	e2400001 	sub	r0, r0, #1
4000d0c0:	e59f1038 	ldr	r1, [pc, #56]	; 4000d100 <_tx_mutex_delete+0x2d8>
4000d0c4:	e5810000 	str	r0, [r1]
4000d0c8:	e121f005 	msr	CPSR_c, r5
4000d0cc:	eb0008d5 	bl	4000f428 <_tx_thread_system_preempt_check>
4000d0d0:	e3a00000 	mov	r0, #0
4000d0d4:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000d0d8:	40030ea0 	.word	0x40030ea0
4000d0dc:	40030ea4 	.word	0x40030ea4
4000d0e0:	40030e2c 	.word	0x40030e2c
4000d0e4:	40030e34 	.word	0x40030e34
4000d0e8:	f0f0f0f0 	.word	0xf0f0f0f0
4000d0ec:	40030e9c 	.word	0x40030e9c
4000d0f0:	40030e98 	.word	0x40030e98
4000d0f4:	40030e8c 	.word	0x40030e8c
4000d0f8:	40030ec4 	.word	0x40030ec4
4000d0fc:	40030ec0 	.word	0x40030ec0
4000d100:	40030e50 	.word	0x40030e50

4000d104 <_tx_mutex_get>:
4000d104:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4000d108:	e1a04000 	mov	r4, r0
4000d10c:	e1a05001 	mov	r5, r1
4000d110:	e10f6000 	mrs	r6, CPSR
4000d114:	e3867080 	orr	r7, r6, #128	; 0x80
4000d118:	e121f007 	msr	CPSR_c, r7
4000d11c:	e59f12ac 	ldr	r1, [pc, #684]	; 4000d3d0 <_tx_mutex_get+0x2cc>
4000d120:	e5910000 	ldr	r0, [r1]
4000d124:	e3500000 	cmp	r0, #0
4000d128:	0a000032 	beq	4000d1f8 <_tx_mutex_get+0xf4>
4000d12c:	e59f12a0 	ldr	r1, [pc, #672]	; 4000d3d4 <_tx_mutex_get+0x2d0>
4000d130:	e5911000 	ldr	r1, [r1]
4000d134:	e2811001 	add	r1, r1, #1
4000d138:	e59f2294 	ldr	r2, [pc, #660]	; 4000d3d4 <_tx_mutex_get+0x2d0>
4000d13c:	e5821000 	str	r1, [r2]
4000d140:	e580100c 	str	r1, [r0, #12]
4000d144:	e59f128c 	ldr	r1, [pc, #652]	; 4000d3d8 <_tx_mutex_get+0x2d4>
4000d148:	e5911000 	ldr	r1, [r1]
4000d14c:	e3510000 	cmp	r1, #0
4000d150:	1a000006 	bne	4000d170 <_tx_mutex_get+0x6c>
4000d154:	e59f1280 	ldr	r1, [pc, #640]	; 4000d3dc <_tx_mutex_get+0x2d8>
4000d158:	e5911000 	ldr	r1, [r1]
4000d15c:	e5801000 	str	r1, [r0]
4000d160:	e5901000 	ldr	r1, [r0]
4000d164:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d168:	e5801004 	str	r1, [r0, #4]
4000d16c:	ea00000d 	b	4000d1a8 <_tx_mutex_get+0xa4>
4000d170:	e59f1260 	ldr	r1, [pc, #608]	; 4000d3d8 <_tx_mutex_get+0x2d4>
4000d174:	e5911000 	ldr	r1, [r1]
4000d178:	e59f2260 	ldr	r2, [pc, #608]	; 4000d3e0 <_tx_mutex_get+0x2dc>
4000d17c:	e1510002 	cmp	r1, r2
4000d180:	2a000004 	bcs	4000d198 <_tx_mutex_get+0x94>
4000d184:	e3e01000 	mvn	r1, #0
4000d188:	e5801000 	str	r1, [r0]
4000d18c:	e3a01000 	mov	r1, #0
4000d190:	e5801004 	str	r1, [r0, #4]
4000d194:	ea000003 	b	4000d1a8 <_tx_mutex_get+0xa4>
4000d198:	e59f1240 	ldr	r1, [pc, #576]	; 4000d3e0 <_tx_mutex_get+0x2dc>
4000d19c:	e5801000 	str	r1, [r0]
4000d1a0:	e3a01000 	mov	r1, #0
4000d1a4:	e5801004 	str	r1, [r0, #4]
4000d1a8:	e3a01034 	mov	r1, #52	; 0x34
4000d1ac:	e5801008 	str	r1, [r0, #8]
4000d1b0:	e5804010 	str	r4, [r0, #16]
4000d1b4:	e5805014 	str	r5, [r0, #20]
4000d1b8:	e594100c 	ldr	r1, [r4, #12]
4000d1bc:	e5801018 	str	r1, [r0, #24]
4000d1c0:	e5941008 	ldr	r1, [r4, #8]
4000d1c4:	e580101c 	str	r1, [r0, #28]
4000d1c8:	e2800020 	add	r0, r0, #32
4000d1cc:	e59f1210 	ldr	r1, [pc, #528]	; 4000d3e4 <_tx_mutex_get+0x2e0>
4000d1d0:	e5911000 	ldr	r1, [r1]
4000d1d4:	e1500001 	cmp	r0, r1
4000d1d8:	3a000001 	bcc	4000d1e4 <_tx_mutex_get+0xe0>
4000d1dc:	e59f1204 	ldr	r1, [pc, #516]	; 4000d3e8 <_tx_mutex_get+0x2e4>
4000d1e0:	e5910000 	ldr	r0, [r1]
4000d1e4:	e59f11e4 	ldr	r1, [pc, #484]	; 4000d3d0 <_tx_mutex_get+0x2cc>
4000d1e8:	e5810000 	str	r0, [r1]
4000d1ec:	e59f11f8 	ldr	r1, [pc, #504]	; 4000d3ec <_tx_mutex_get+0x2e8>
4000d1f0:	e5911000 	ldr	r1, [r1]
4000d1f4:	e5810020 	str	r0, [r1, #32]
4000d1f8:	e59f01dc 	ldr	r0, [pc, #476]	; 4000d3dc <_tx_mutex_get+0x2d8>
4000d1fc:	e5909000 	ldr	r9, [r0]
4000d200:	e5940008 	ldr	r0, [r4, #8]
4000d204:	e3500000 	cmp	r0, #0
4000d208:	1a000025 	bne	4000d2a4 <_tx_mutex_get+0x1a0>
4000d20c:	e3a00001 	mov	r0, #1
4000d210:	e5840008 	str	r0, [r4, #8]
4000d214:	e584900c 	str	r9, [r4, #12]
4000d218:	e5940010 	ldr	r0, [r4, #16]
4000d21c:	e3500000 	cmp	r0, #0
4000d220:	0a00001d 	beq	4000d29c <_tx_mutex_get+0x198>
4000d224:	e3590000 	cmp	r9, #0
4000d228:	0a00001b 	beq	4000d29c <_tx_mutex_get+0x198>
4000d22c:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d230:	e5840014 	str	r0, [r4, #20]
4000d234:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d238:	e5840018 	str	r0, [r4, #24]
4000d23c:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d240:	e3500000 	cmp	r0, #0
4000d244:	0a000008 	beq	4000d26c <_tx_mutex_get+0x168>
4000d248:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d24c:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d250:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d254:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d258:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000d25c:	e584a034 	str	sl, [r4, #52]	; 0x34
4000d260:	e59900a0 	ldr	r0, [r9, #160]	; 0xa0
4000d264:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d268:	ea000006 	b	4000d288 <_tx_mutex_get+0x184>
4000d26c:	e58940a0 	str	r4, [r9, #160]	; 0xa0
4000d270:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d274:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d278:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d27c:	e5890094 	str	r0, [r9, #148]	; 0x94
4000d280:	e599003c 	ldr	r0, [r9, #60]	; 0x3c
4000d284:	e5890098 	str	r0, [r9, #152]	; 0x98
4000d288:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4000d28c:	e2800001 	add	r0, r0, #1
4000d290:	e589009c 	str	r0, [r9, #156]	; 0x9c
4000d294:	e3a00020 	mov	r0, #32
4000d298:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d29c:	e3a08000 	mov	r8, #0
4000d2a0:	ea000047 	b	4000d3c4 <_tx_mutex_get+0x2c0>
4000d2a4:	e594000c 	ldr	r0, [r4, #12]
4000d2a8:	e1500009 	cmp	r0, r9
4000d2ac:	1a000004 	bne	4000d2c4 <_tx_mutex_get+0x1c0>
4000d2b0:	e5940008 	ldr	r0, [r4, #8]
4000d2b4:	e2800001 	add	r0, r0, #1
4000d2b8:	e5840008 	str	r0, [r4, #8]
4000d2bc:	e3a08000 	mov	r8, #0
4000d2c0:	ea00003f 	b	4000d3c4 <_tx_mutex_get+0x2c0>
4000d2c4:	e3550000 	cmp	r5, #0
4000d2c8:	0a00003c 	beq	4000d3c0 <_tx_mutex_get+0x2bc>
4000d2cc:	e59f011c 	ldr	r0, [pc, #284]	; 4000d3f0 <_tx_mutex_get+0x2ec>
4000d2d0:	e5890068 	str	r0, [r9, #104]	; 0x68
4000d2d4:	e589406c 	str	r4, [r9, #108]	; 0x6c
4000d2d8:	e594001c 	ldr	r0, [r4, #28]
4000d2dc:	e3500000 	cmp	r0, #0
4000d2e0:	0a00000a 	beq	4000d310 <_tx_mutex_get+0x20c>
4000d2e4:	e594001c 	ldr	r0, [r4, #28]
4000d2e8:	e5890070 	str	r0, [r9, #112]	; 0x70
4000d2ec:	e594001c 	ldr	r0, [r4, #28]
4000d2f0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d2f4:	e5890074 	str	r0, [r9, #116]	; 0x74
4000d2f8:	e594001c 	ldr	r0, [r4, #28]
4000d2fc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000d300:	e5809070 	str	r9, [r0, #112]	; 0x70
4000d304:	e594001c 	ldr	r0, [r4, #28]
4000d308:	e5809074 	str	r9, [r0, #116]	; 0x74
4000d30c:	ea000002 	b	4000d31c <_tx_mutex_get+0x218>
4000d310:	e584901c 	str	r9, [r4, #28]
4000d314:	e5899070 	str	r9, [r9, #112]	; 0x70
4000d318:	e5899074 	str	r9, [r9, #116]	; 0x74
4000d31c:	e5940020 	ldr	r0, [r4, #32]
4000d320:	e2800001 	add	r0, r0, #1
4000d324:	e5840020 	str	r0, [r4, #32]
4000d328:	e3a0000d 	mov	r0, #13
4000d32c:	e5890030 	str	r0, [r9, #48]	; 0x30
4000d330:	e3a00001 	mov	r0, #1
4000d334:	e5890038 	str	r0, [r9, #56]	; 0x38
4000d338:	e589504c 	str	r5, [r9, #76]	; 0x4c
4000d33c:	e59f00b0 	ldr	r0, [pc, #176]	; 4000d3f4 <_tx_mutex_get+0x2f0>
4000d340:	e5900000 	ldr	r0, [r0]
4000d344:	e2800001 	add	r0, r0, #1
4000d348:	e59f10a4 	ldr	r1, [pc, #164]	; 4000d3f4 <_tx_mutex_get+0x2f0>
4000d34c:	e5810000 	str	r0, [r1]
4000d350:	e121f006 	msr	CPSR_c, r6
4000d354:	e5940010 	ldr	r0, [r4, #16]
4000d358:	e3500000 	cmp	r0, #0
4000d35c:	0a000013 	beq	4000d3b0 <_tx_mutex_get+0x2ac>
4000d360:	e594000c 	ldr	r0, [r4, #12]
4000d364:	e3500000 	cmp	r0, #0
4000d368:	0a000010 	beq	4000d3b0 <_tx_mutex_get+0x2ac>
4000d36c:	e3590000 	cmp	r9, #0
4000d370:	0a00000e 	beq	4000d3b0 <_tx_mutex_get+0x2ac>
4000d374:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000d378:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d37c:	e1500001 	cmp	r0, r1
4000d380:	9a000001 	bls	4000d38c <_tx_mutex_get+0x288>
4000d384:	e599002c 	ldr	r0, [r9, #44]	; 0x2c
4000d388:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d38c:	e594000c 	ldr	r0, [r4, #12]
4000d390:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d394:	e599102c 	ldr	r1, [r9, #44]	; 0x2c
4000d398:	e1500001 	cmp	r0, r1
4000d39c:	9a000003 	bls	4000d3b0 <_tx_mutex_get+0x2ac>
4000d3a0:	e599202c 	ldr	r2, [r9, #44]	; 0x2c
4000d3a4:	e1a01002 	mov	r1, r2
4000d3a8:	e594000c 	ldr	r0, [r4, #12]
4000d3ac:	eb000011 	bl	4000d3f8 <_tx_mutex_priority_change>
4000d3b0:	e1a00009 	mov	r0, r9
4000d3b4:	ebffeea0 	bl	40008e3c <_tx_thread_system_suspend>
4000d3b8:	e5990084 	ldr	r0, [r9, #132]	; 0x84
4000d3bc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4000d3c0:	e3a0801d 	mov	r8, #29
4000d3c4:	e121f006 	msr	CPSR_c, r6
4000d3c8:	e1a00008 	mov	r0, r8
4000d3cc:	eafffffa 	b	4000d3bc <_tx_mutex_get+0x2b8>
4000d3d0:	40030ea0 	.word	0x40030ea0
4000d3d4:	40030ea4 	.word	0x40030ea4
4000d3d8:	40030e2c 	.word	0x40030e2c
4000d3dc:	40030e34 	.word	0x40030e34
4000d3e0:	f0f0f0f0 	.word	0xf0f0f0f0
4000d3e4:	40030e9c 	.word	0x40030e9c
4000d3e8:	40030e98 	.word	0x40030e98
4000d3ec:	40030e8c 	.word	0x40030e8c
4000d3f0:	400105b8 	.word	0x400105b8
4000d3f4:	40030e50 	.word	0x40030e50

4000d3f8 <_tx_mutex_priority_change>:
4000d3f8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000d3fc:	e1a04000 	mov	r4, r0
4000d400:	e1a05001 	mov	r5, r1
4000d404:	e1a06002 	mov	r6, r2
4000d408:	e10f7000 	mrs	r7, CPSR
4000d40c:	e3878080 	orr	r8, r7, #128	; 0x80
4000d410:	e121f008 	msr	CPSR_c, r8
4000d414:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d418:	e3500000 	cmp	r0, #0
4000d41c:	0a000003 	beq	4000d430 <_tx_mutex_priority_change+0x38>
4000d420:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d424:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d428:	e121f007 	msr	CPSR_c, r7
4000d42c:	ea000011 	b	4000d478 <_tx_mutex_priority_change+0x80>
4000d430:	e59f0044 	ldr	r0, [pc, #68]	; 4000d47c <_tx_mutex_priority_change+0x84>
4000d434:	e5900000 	ldr	r0, [r0]
4000d438:	e2800002 	add	r0, r0, #2
4000d43c:	e59f1038 	ldr	r1, [pc, #56]	; 4000d47c <_tx_mutex_priority_change+0x84>
4000d440:	e5810000 	str	r0, [r1]
4000d444:	e3a00003 	mov	r0, #3
4000d448:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d44c:	e3a00001 	mov	r0, #1
4000d450:	e5840038 	str	r0, [r4, #56]	; 0x38
4000d454:	e3a00000 	mov	r0, #0
4000d458:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000d45c:	e121f007 	msr	CPSR_c, r7
4000d460:	e1a00004 	mov	r0, r4
4000d464:	ebffee74 	bl	40008e3c <_tx_thread_system_suspend>
4000d468:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000d46c:	e584603c 	str	r6, [r4, #60]	; 0x3c
4000d470:	e1a00004 	mov	r0, r4
4000d474:	eb000817 	bl	4000f4d8 <_tx_thread_system_resume>
4000d478:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000d47c:	40030e50 	.word	0x40030e50

4000d480 <_tx_mutex_put>:
4000d480:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d484:	e1a04000 	mov	r4, r0
4000d488:	e10f5000 	mrs	r5, CPSR
4000d48c:	e3856080 	orr	r6, r5, #128	; 0x80
4000d490:	e121f006 	msr	CPSR_c, r6
4000d494:	e59f1494 	ldr	r1, [pc, #1172]	; 4000d930 <_tx_mutex_put+0x4b0>
4000d498:	e5910000 	ldr	r0, [r1]
4000d49c:	e3500000 	cmp	r0, #0
4000d4a0:	0a000032 	beq	4000d570 <_tx_mutex_put+0xf0>
4000d4a4:	e59f1488 	ldr	r1, [pc, #1160]	; 4000d934 <_tx_mutex_put+0x4b4>
4000d4a8:	e5911000 	ldr	r1, [r1]
4000d4ac:	e2811001 	add	r1, r1, #1
4000d4b0:	e59f247c 	ldr	r2, [pc, #1148]	; 4000d934 <_tx_mutex_put+0x4b4>
4000d4b4:	e5821000 	str	r1, [r2]
4000d4b8:	e580100c 	str	r1, [r0, #12]
4000d4bc:	e59f1474 	ldr	r1, [pc, #1140]	; 4000d938 <_tx_mutex_put+0x4b8>
4000d4c0:	e5911000 	ldr	r1, [r1]
4000d4c4:	e3510000 	cmp	r1, #0
4000d4c8:	1a000006 	bne	4000d4e8 <_tx_mutex_put+0x68>
4000d4cc:	e59f1468 	ldr	r1, [pc, #1128]	; 4000d93c <_tx_mutex_put+0x4bc>
4000d4d0:	e5911000 	ldr	r1, [r1]
4000d4d4:	e5801000 	str	r1, [r0]
4000d4d8:	e5901000 	ldr	r1, [r0]
4000d4dc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000d4e0:	e5801004 	str	r1, [r0, #4]
4000d4e4:	ea00000d 	b	4000d520 <_tx_mutex_put+0xa0>
4000d4e8:	e59f1448 	ldr	r1, [pc, #1096]	; 4000d938 <_tx_mutex_put+0x4b8>
4000d4ec:	e5911000 	ldr	r1, [r1]
4000d4f0:	e59f2448 	ldr	r2, [pc, #1096]	; 4000d940 <_tx_mutex_put+0x4c0>
4000d4f4:	e1510002 	cmp	r1, r2
4000d4f8:	2a000004 	bcs	4000d510 <_tx_mutex_put+0x90>
4000d4fc:	e3e01000 	mvn	r1, #0
4000d500:	e5801000 	str	r1, [r0]
4000d504:	e3a01000 	mov	r1, #0
4000d508:	e5801004 	str	r1, [r0, #4]
4000d50c:	ea000003 	b	4000d520 <_tx_mutex_put+0xa0>
4000d510:	e59f1428 	ldr	r1, [pc, #1064]	; 4000d940 <_tx_mutex_put+0x4c0>
4000d514:	e5801000 	str	r1, [r0]
4000d518:	e3a01000 	mov	r1, #0
4000d51c:	e5801004 	str	r1, [r0, #4]
4000d520:	e3a01039 	mov	r1, #57	; 0x39
4000d524:	e5801008 	str	r1, [r0, #8]
4000d528:	e5804010 	str	r4, [r0, #16]
4000d52c:	e594100c 	ldr	r1, [r4, #12]
4000d530:	e5801014 	str	r1, [r0, #20]
4000d534:	e5941008 	ldr	r1, [r4, #8]
4000d538:	e5801018 	str	r1, [r0, #24]
4000d53c:	e580d01c 	str	sp, [r0, #28]
4000d540:	e2800020 	add	r0, r0, #32
4000d544:	e59f13f8 	ldr	r1, [pc, #1016]	; 4000d944 <_tx_mutex_put+0x4c4>
4000d548:	e5911000 	ldr	r1, [r1]
4000d54c:	e1500001 	cmp	r0, r1
4000d550:	3a000001 	bcc	4000d55c <_tx_mutex_put+0xdc>
4000d554:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000d948 <_tx_mutex_put+0x4c8>
4000d558:	e5910000 	ldr	r0, [r1]
4000d55c:	e59f13cc 	ldr	r1, [pc, #972]	; 4000d930 <_tx_mutex_put+0x4b0>
4000d560:	e5810000 	str	r0, [r1]
4000d564:	e59f13e0 	ldr	r1, [pc, #992]	; 4000d94c <_tx_mutex_put+0x4cc>
4000d568:	e5911000 	ldr	r1, [r1]
4000d56c:	e5810020 	str	r0, [r1, #32]
4000d570:	e59f03c4 	ldr	r0, [pc, #964]	; 4000d93c <_tx_mutex_put+0x4bc>
4000d574:	e5907000 	ldr	r7, [r0]
4000d578:	e5940008 	ldr	r0, [r4, #8]
4000d57c:	e3500000 	cmp	r0, #0
4000d580:	0a0000e7 	beq	4000d924 <_tx_mutex_put+0x4a4>
4000d584:	e594000c 	ldr	r0, [r4, #12]
4000d588:	e1500007 	cmp	r0, r7
4000d58c:	1a0000e4 	bne	4000d924 <_tx_mutex_put+0x4a4>
4000d590:	e5940008 	ldr	r0, [r4, #8]
4000d594:	e2400001 	sub	r0, r0, #1
4000d598:	e5840008 	str	r0, [r4, #8]
4000d59c:	e5940008 	ldr	r0, [r4, #8]
4000d5a0:	e3500000 	cmp	r0, #0
4000d5a4:	0a000002 	beq	4000d5b4 <_tx_mutex_put+0x134>
4000d5a8:	e121f005 	msr	CPSR_c, r5
4000d5ac:	e3a00000 	mov	r0, #0
4000d5b0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000d5b4:	e3a08000 	mov	r8, #0
4000d5b8:	e3a09000 	mov	r9, #0
4000d5bc:	e3a0a000 	mov	sl, #0
4000d5c0:	e5940010 	ldr	r0, [r4, #16]
4000d5c4:	e3500000 	cmp	r0, #0
4000d5c8:	0a000033 	beq	4000d69c <_tx_mutex_put+0x21c>
4000d5cc:	e3570000 	cmp	r7, #0
4000d5d0:	0a000031 	beq	4000d69c <_tx_mutex_put+0x21c>
4000d5d4:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d5d8:	e2400001 	sub	r0, r0, #1
4000d5dc:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d5e0:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d5e4:	e3500000 	cmp	r0, #0
4000d5e8:	1a000002 	bne	4000d5f8 <_tx_mutex_put+0x178>
4000d5ec:	e3a00000 	mov	r0, #0
4000d5f0:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d5f4:	ea00000a 	b	4000d624 <_tx_mutex_put+0x1a4>
4000d5f8:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000d5fc:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000d600:	e5810034 	str	r0, [r1, #52]	; 0x34
4000d604:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d608:	e5941034 	ldr	r1, [r4, #52]	; 0x34
4000d60c:	e5810030 	str	r0, [r1, #48]	; 0x30
4000d610:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d614:	e1500004 	cmp	r0, r4
4000d618:	1a000001 	bne	4000d624 <_tx_mutex_put+0x1a4>
4000d61c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000d620:	e58700a0 	str	r0, [r7, #160]	; 0xa0
4000d624:	e5979094 	ldr	r9, [r7, #148]	; 0x94
4000d628:	e597a098 	ldr	sl, [r7, #152]	; 0x98
4000d62c:	e59f031c 	ldr	r0, [pc, #796]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d630:	e5900000 	ldr	r0, [r0]
4000d634:	e2800001 	add	r0, r0, #1
4000d638:	e59f1310 	ldr	r1, [pc, #784]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d63c:	e5810000 	str	r0, [r1]
4000d640:	e121f005 	msr	CPSR_c, r5
4000d644:	e597b0a0 	ldr	fp, [r7, #160]	; 0xa0
4000d648:	ea000009 	b	4000d674 <_tx_mutex_put+0x1f4>
4000d64c:	e59b002c 	ldr	r0, [fp, #44]	; 0x2c
4000d650:	e1500009 	cmp	r0, r9
4000d654:	2a000001 	bcs	4000d660 <_tx_mutex_put+0x1e0>
4000d658:	e59b902c 	ldr	r9, [fp, #44]	; 0x2c
4000d65c:	e1a0a009 	mov	sl, r9
4000d660:	e59bb030 	ldr	fp, [fp, #48]	; 0x30
4000d664:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d668:	e150000b 	cmp	r0, fp
4000d66c:	1a000000 	bne	4000d674 <_tx_mutex_put+0x1f4>
4000d670:	e3a0b000 	mov	fp, #0
4000d674:	e35b0000 	cmp	fp, #0
4000d678:	1afffff3 	bne	4000d64c <_tx_mutex_put+0x1cc>
4000d67c:	e10f5000 	mrs	r5, CPSR
4000d680:	e3856080 	orr	r6, r5, #128	; 0x80
4000d684:	e121f006 	msr	CPSR_c, r6
4000d688:	e59f02c0 	ldr	r0, [pc, #704]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d68c:	e5900000 	ldr	r0, [r0]
4000d690:	e2400001 	sub	r0, r0, #1
4000d694:	e59f12b4 	ldr	r1, [pc, #692]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d698:	e5810000 	str	r0, [r1]
4000d69c:	e5940020 	ldr	r0, [r4, #32]
4000d6a0:	e3500001 	cmp	r0, #1
4000d6a4:	9a000012 	bls	4000d6f4 <_tx_mutex_put+0x274>
4000d6a8:	e5940010 	ldr	r0, [r4, #16]
4000d6ac:	e3500000 	cmp	r0, #0
4000d6b0:	0a00000f 	beq	4000d6f4 <_tx_mutex_put+0x274>
4000d6b4:	e59f0294 	ldr	r0, [pc, #660]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d6b8:	e5900000 	ldr	r0, [r0]
4000d6bc:	e2800001 	add	r0, r0, #1
4000d6c0:	e59f1288 	ldr	r1, [pc, #648]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d6c4:	e5810000 	str	r0, [r1]
4000d6c8:	e121f005 	msr	CPSR_c, r5
4000d6cc:	e1a00004 	mov	r0, r4
4000d6d0:	eb000bec 	bl	40010688 <_tx_mutex_prioritize>
4000d6d4:	e10f5000 	mrs	r5, CPSR
4000d6d8:	e3856080 	orr	r6, r5, #128	; 0x80
4000d6dc:	e121f006 	msr	CPSR_c, r6
4000d6e0:	e59f0268 	ldr	r0, [pc, #616]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d6e4:	e5900000 	ldr	r0, [r0]
4000d6e8:	e2400001 	sub	r0, r0, #1
4000d6ec:	e59f125c 	ldr	r1, [pc, #604]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d6f0:	e5810000 	str	r0, [r1]
4000d6f4:	e594001c 	ldr	r0, [r4, #28]
4000d6f8:	e3500000 	cmp	r0, #0
4000d6fc:	1a000024 	bne	4000d794 <_tx_mutex_put+0x314>
4000d700:	e59f0248 	ldr	r0, [pc, #584]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d704:	e5900000 	ldr	r0, [r0]
4000d708:	e2800001 	add	r0, r0, #1
4000d70c:	e59f123c 	ldr	r1, [pc, #572]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d710:	e5810000 	str	r0, [r1]
4000d714:	e121f005 	msr	CPSR_c, r5
4000d718:	e5940010 	ldr	r0, [r4, #16]
4000d71c:	e3500000 	cmp	r0, #0
4000d720:	0a00000a 	beq	4000d750 <_tx_mutex_put+0x2d0>
4000d724:	e3a00020 	mov	r0, #32
4000d728:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d72c:	e3570000 	cmp	r7, #0
4000d730:	0a000006 	beq	4000d750 <_tx_mutex_put+0x2d0>
4000d734:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d738:	e1500009 	cmp	r0, r9
4000d73c:	0a000003 	beq	4000d750 <_tx_mutex_put+0x2d0>
4000d740:	e1a0200a 	mov	r2, sl
4000d744:	e1a01009 	mov	r1, r9
4000d748:	e594000c 	ldr	r0, [r4, #12]
4000d74c:	ebffff29 	bl	4000d3f8 <_tx_mutex_priority_change>
4000d750:	e10f5000 	mrs	r5, CPSR
4000d754:	e3856080 	orr	r6, r5, #128	; 0x80
4000d758:	e121f006 	msr	CPSR_c, r6
4000d75c:	e59f01ec 	ldr	r0, [pc, #492]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d760:	e5900000 	ldr	r0, [r0]
4000d764:	e2400001 	sub	r0, r0, #1
4000d768:	e59f11e0 	ldr	r1, [pc, #480]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d76c:	e5810000 	str	r0, [r1]
4000d770:	e5940008 	ldr	r0, [r4, #8]
4000d774:	e3500000 	cmp	r0, #0
4000d778:	1a000001 	bne	4000d784 <_tx_mutex_put+0x304>
4000d77c:	e3a00000 	mov	r0, #0
4000d780:	e584000c 	str	r0, [r4, #12]
4000d784:	e121f005 	msr	CPSR_c, r5
4000d788:	eb000726 	bl	4000f428 <_tx_thread_system_preempt_check>
4000d78c:	e3a00000 	mov	r0, #0
4000d790:	eaffff86 	b	4000d5b0 <_tx_mutex_put+0x130>
4000d794:	e594701c 	ldr	r7, [r4, #28]
4000d798:	e5940010 	ldr	r0, [r4, #16]
4000d79c:	e3500000 	cmp	r0, #0
4000d7a0:	0a00001f 	beq	4000d824 <_tx_mutex_put+0x3a4>
4000d7a4:	e594800c 	ldr	r8, [r4, #12]
4000d7a8:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d7ac:	e5840014 	str	r0, [r4, #20]
4000d7b0:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d7b4:	e5840018 	str	r0, [r4, #24]
4000d7b8:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7bc:	e3500000 	cmp	r0, #0
4000d7c0:	0a00000b 	beq	4000d7f4 <_tx_mutex_put+0x374>
4000d7c4:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7c8:	e5900034 	ldr	r0, [r0, #52]	; 0x34
4000d7cc:	e58d0000 	str	r0, [sp]
4000d7d0:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7d4:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d7d8:	e59d0000 	ldr	r0, [sp]
4000d7dc:	e5804030 	str	r4, [r0, #48]	; 0x30
4000d7e0:	e59d0000 	ldr	r0, [sp]
4000d7e4:	e5840034 	str	r0, [r4, #52]	; 0x34
4000d7e8:	e59700a0 	ldr	r0, [r7, #160]	; 0xa0
4000d7ec:	e5840030 	str	r0, [r4, #48]	; 0x30
4000d7f0:	ea000006 	b	4000d810 <_tx_mutex_put+0x390>
4000d7f4:	e58740a0 	str	r4, [r7, #160]	; 0xa0
4000d7f8:	e5844030 	str	r4, [r4, #48]	; 0x30
4000d7fc:	e5844034 	str	r4, [r4, #52]	; 0x34
4000d800:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000d804:	e5870094 	str	r0, [r7, #148]	; 0x94
4000d808:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000d80c:	e5870098 	str	r0, [r7, #152]	; 0x98
4000d810:	e597009c 	ldr	r0, [r7, #156]	; 0x9c
4000d814:	e2800001 	add	r0, r0, #1
4000d818:	e587009c 	str	r0, [r7, #156]	; 0x9c
4000d81c:	e3a00020 	mov	r0, #32
4000d820:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d824:	e3a00001 	mov	r0, #1
4000d828:	e5840008 	str	r0, [r4, #8]
4000d82c:	e584700c 	str	r7, [r4, #12]
4000d830:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d834:	e1500007 	cmp	r0, r7
4000d838:	1a000002 	bne	4000d848 <_tx_mutex_put+0x3c8>
4000d83c:	e3a00000 	mov	r0, #0
4000d840:	e584001c 	str	r0, [r4, #28]
4000d844:	ea000007 	b	4000d868 <_tx_mutex_put+0x3e8>
4000d848:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d84c:	e584001c 	str	r0, [r4, #28]
4000d850:	e5970074 	ldr	r0, [r7, #116]	; 0x74
4000d854:	e5971070 	ldr	r1, [r7, #112]	; 0x70
4000d858:	e5810074 	str	r0, [r1, #116]	; 0x74
4000d85c:	e5970070 	ldr	r0, [r7, #112]	; 0x70
4000d860:	e5971074 	ldr	r1, [r7, #116]	; 0x74
4000d864:	e5810070 	str	r0, [r1, #112]	; 0x70
4000d868:	e5940020 	ldr	r0, [r4, #32]
4000d86c:	e2400001 	sub	r0, r0, #1
4000d870:	e5840020 	str	r0, [r4, #32]
4000d874:	e3a00000 	mov	r0, #0
4000d878:	e5870068 	str	r0, [r7, #104]	; 0x68
4000d87c:	e59f00cc 	ldr	r0, [pc, #204]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d880:	e5900000 	ldr	r0, [r0]
4000d884:	e2800001 	add	r0, r0, #1
4000d888:	e59f10c0 	ldr	r1, [pc, #192]	; 4000d950 <_tx_mutex_put+0x4d0>
4000d88c:	e5810000 	str	r0, [r1]
4000d890:	e121f005 	msr	CPSR_c, r5
4000d894:	e3a00000 	mov	r0, #0
4000d898:	e5870084 	str	r0, [r7, #132]	; 0x84
4000d89c:	e5940010 	ldr	r0, [r4, #16]
4000d8a0:	e3500000 	cmp	r0, #0
4000d8a4:	0a00001a 	beq	4000d914 <_tx_mutex_put+0x494>
4000d8a8:	e5940020 	ldr	r0, [r4, #32]
4000d8ac:	e3500000 	cmp	r0, #0
4000d8b0:	0a00000e 	beq	4000d8f0 <_tx_mutex_put+0x470>
4000d8b4:	e5940020 	ldr	r0, [r4, #32]
4000d8b8:	e3500001 	cmp	r0, #1
4000d8bc:	9a000001 	bls	4000d8c8 <_tx_mutex_put+0x448>
4000d8c0:	e1a00004 	mov	r0, r4
4000d8c4:	eb000b6f 	bl	40010688 <_tx_mutex_prioritize>
4000d8c8:	e10f5000 	mrs	r5, CPSR
4000d8cc:	e3856080 	orr	r6, r5, #128	; 0x80
4000d8d0:	e121f006 	msr	CPSR_c, r6
4000d8d4:	e594001c 	ldr	r0, [r4, #28]
4000d8d8:	e3500000 	cmp	r0, #0
4000d8dc:	0a000002 	beq	4000d8ec <_tx_mutex_put+0x46c>
4000d8e0:	e594001c 	ldr	r0, [r4, #28]
4000d8e4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
4000d8e8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000d8ec:	e121f005 	msr	CPSR_c, r5
4000d8f0:	e3580000 	cmp	r8, #0
4000d8f4:	0a000006 	beq	4000d914 <_tx_mutex_put+0x494>
4000d8f8:	e598002c 	ldr	r0, [r8, #44]	; 0x2c
4000d8fc:	e1500009 	cmp	r0, r9
4000d900:	0a000003 	beq	4000d914 <_tx_mutex_put+0x494>
4000d904:	e1a0200a 	mov	r2, sl
4000d908:	e1a01009 	mov	r1, r9
4000d90c:	e1a00008 	mov	r0, r8
4000d910:	ebfffeb8 	bl	4000d3f8 <_tx_mutex_priority_change>
4000d914:	e1a00007 	mov	r0, r7
4000d918:	eb0006ee 	bl	4000f4d8 <_tx_thread_system_resume>
4000d91c:	e3a00000 	mov	r0, #0
4000d920:	eaffff22 	b	4000d5b0 <_tx_mutex_put+0x130>
4000d924:	e121f005 	msr	CPSR_c, r5
4000d928:	e3a0001e 	mov	r0, #30
4000d92c:	eaffff1f 	b	4000d5b0 <_tx_mutex_put+0x130>
4000d930:	40030ea0 	.word	0x40030ea0
4000d934:	40030ea4 	.word	0x40030ea4
4000d938:	40030e2c 	.word	0x40030e2c
4000d93c:	40030e34 	.word	0x40030e34
4000d940:	f0f0f0f0 	.word	0xf0f0f0f0
4000d944:	40030e9c 	.word	0x40030e9c
4000d948:	40030e98 	.word	0x40030e98
4000d94c:	40030e8c 	.word	0x40030e8c
4000d950:	40030e50 	.word	0x40030e50

4000d954 <_tx_queue_create>:
4000d954:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000d958:	e1a04000 	mov	r4, r0
4000d95c:	e1a05001 	mov	r5, r1
4000d960:	e1a06002 	mov	r6, r2
4000d964:	e1a07003 	mov	r7, r3
4000d968:	e59d8030 	ldr	r8, [sp, #48]	; 0x30
4000d96c:	e3a0103c 	mov	r1, #60	; 0x3c
4000d970:	e1a00004 	mov	r0, r4
4000d974:	eb0017f3 	bl	40013948 <__aeabi_memclr4>
4000d978:	e5845004 	str	r5, [r4, #4]
4000d97c:	e5846008 	str	r6, [r4, #8]
4000d980:	e1a01106 	lsl	r1, r6, #2
4000d984:	e1a00008 	mov	r0, r8
4000d988:	eb000ca6 	bl	40010c28 <__aeabi_uidivmod>
4000d98c:	e1a0b000 	mov	fp, r0
4000d990:	e000069b 	mul	r0, fp, r6
4000d994:	e58d0004 	str	r0, [sp, #4]
4000d998:	e5847018 	str	r7, [r4, #24]
4000d99c:	e59d0004 	ldr	r0, [sp, #4]
4000d9a0:	e0870100 	add	r0, r7, r0, lsl #2
4000d9a4:	e584001c 	str	r0, [r4, #28]
4000d9a8:	e5847020 	str	r7, [r4, #32]
4000d9ac:	e5847024 	str	r7, [r4, #36]	; 0x24
4000d9b0:	e584b014 	str	fp, [r4, #20]
4000d9b4:	e584b00c 	str	fp, [r4, #12]
4000d9b8:	e10f9000 	mrs	r9, CPSR
4000d9bc:	e3890080 	orr	r0, r9, #128	; 0x80
4000d9c0:	e58d0008 	str	r0, [sp, #8]
4000d9c4:	e59d0008 	ldr	r0, [sp, #8]
4000d9c8:	e121f000 	msr	CPSR_c, r0
4000d9cc:	e59f0160 	ldr	r0, [pc, #352]	; 4000db34 <_tx_queue_create+0x1e0>
4000d9d0:	e5840000 	str	r0, [r4]
4000d9d4:	e59f015c 	ldr	r0, [pc, #348]	; 4000db38 <_tx_queue_create+0x1e4>
4000d9d8:	e5900000 	ldr	r0, [r0]
4000d9dc:	e3500000 	cmp	r0, #0
4000d9e0:	0a00000b 	beq	4000da14 <_tx_queue_create+0xc0>
4000d9e4:	e59f014c 	ldr	r0, [pc, #332]	; 4000db38 <_tx_queue_create+0x1e4>
4000d9e8:	e5900000 	ldr	r0, [r0]
4000d9ec:	e590a034 	ldr	sl, [r0, #52]	; 0x34
4000d9f0:	e59f0140 	ldr	r0, [pc, #320]	; 4000db38 <_tx_queue_create+0x1e4>
4000d9f4:	e5900000 	ldr	r0, [r0]
4000d9f8:	e5804034 	str	r4, [r0, #52]	; 0x34
4000d9fc:	e58a4030 	str	r4, [sl, #48]	; 0x30
4000da00:	e584a034 	str	sl, [r4, #52]	; 0x34
4000da04:	e59f012c 	ldr	r0, [pc, #300]	; 4000db38 <_tx_queue_create+0x1e4>
4000da08:	e5900000 	ldr	r0, [r0]
4000da0c:	e5840030 	str	r0, [r4, #48]	; 0x30
4000da10:	ea000003 	b	4000da24 <_tx_queue_create+0xd0>
4000da14:	e59f011c 	ldr	r0, [pc, #284]	; 4000db38 <_tx_queue_create+0x1e4>
4000da18:	e5804000 	str	r4, [r0]
4000da1c:	e5844030 	str	r4, [r4, #48]	; 0x30
4000da20:	e5844034 	str	r4, [r4, #52]	; 0x34
4000da24:	e59f0110 	ldr	r0, [pc, #272]	; 4000db3c <_tx_queue_create+0x1e8>
4000da28:	e5900000 	ldr	r0, [r0]
4000da2c:	e2800001 	add	r0, r0, #1
4000da30:	e59f1104 	ldr	r1, [pc, #260]	; 4000db3c <_tx_queue_create+0x1e8>
4000da34:	e5810000 	str	r0, [r1]
4000da38:	e3a03000 	mov	r3, #0
4000da3c:	e58d3000 	str	r3, [sp]
4000da40:	e1a03008 	mov	r3, r8
4000da44:	e1a02005 	mov	r2, r5
4000da48:	e1a01004 	mov	r1, r4
4000da4c:	e3a00003 	mov	r0, #3
4000da50:	eb0009f6 	bl	40010230 <_tx_trace_object_register>
4000da54:	e59f10e4 	ldr	r1, [pc, #228]	; 4000db40 <_tx_queue_create+0x1ec>
4000da58:	e5910000 	ldr	r0, [r1]
4000da5c:	e3500000 	cmp	r0, #0
4000da60:	0a000030 	beq	4000db28 <_tx_queue_create+0x1d4>
4000da64:	e59f10d8 	ldr	r1, [pc, #216]	; 4000db44 <_tx_queue_create+0x1f0>
4000da68:	e5911000 	ldr	r1, [r1]
4000da6c:	e2811001 	add	r1, r1, #1
4000da70:	e59f20cc 	ldr	r2, [pc, #204]	; 4000db44 <_tx_queue_create+0x1f0>
4000da74:	e5821000 	str	r1, [r2]
4000da78:	e580100c 	str	r1, [r0, #12]
4000da7c:	e59f10c4 	ldr	r1, [pc, #196]	; 4000db48 <_tx_queue_create+0x1f4>
4000da80:	e5911000 	ldr	r1, [r1]
4000da84:	e3510000 	cmp	r1, #0
4000da88:	1a000006 	bne	4000daa8 <_tx_queue_create+0x154>
4000da8c:	e59f10b8 	ldr	r1, [pc, #184]	; 4000db4c <_tx_queue_create+0x1f8>
4000da90:	e5911000 	ldr	r1, [r1]
4000da94:	e5801000 	str	r1, [r0]
4000da98:	e5901000 	ldr	r1, [r0]
4000da9c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000daa0:	e5801004 	str	r1, [r0, #4]
4000daa4:	ea00000d 	b	4000dae0 <_tx_queue_create+0x18c>
4000daa8:	e59f1098 	ldr	r1, [pc, #152]	; 4000db48 <_tx_queue_create+0x1f4>
4000daac:	e5911000 	ldr	r1, [r1]
4000dab0:	e59f2098 	ldr	r2, [pc, #152]	; 4000db50 <_tx_queue_create+0x1fc>
4000dab4:	e1510002 	cmp	r1, r2
4000dab8:	2a000004 	bcs	4000dad0 <_tx_queue_create+0x17c>
4000dabc:	e3e01000 	mvn	r1, #0
4000dac0:	e5801000 	str	r1, [r0]
4000dac4:	e3a01000 	mov	r1, #0
4000dac8:	e5801004 	str	r1, [r0, #4]
4000dacc:	ea000003 	b	4000dae0 <_tx_queue_create+0x18c>
4000dad0:	e59f1078 	ldr	r1, [pc, #120]	; 4000db50 <_tx_queue_create+0x1fc>
4000dad4:	e5801000 	str	r1, [r0]
4000dad8:	e3a01000 	mov	r1, #0
4000dadc:	e5801004 	str	r1, [r0, #4]
4000dae0:	e3a0103c 	mov	r1, #60	; 0x3c
4000dae4:	e5801008 	str	r1, [r0, #8]
4000dae8:	e5804010 	str	r4, [r0, #16]
4000daec:	e5806014 	str	r6, [r0, #20]
4000daf0:	e5807018 	str	r7, [r0, #24]
4000daf4:	e580801c 	str	r8, [r0, #28]
4000daf8:	e2800020 	add	r0, r0, #32
4000dafc:	e59f1050 	ldr	r1, [pc, #80]	; 4000db54 <_tx_queue_create+0x200>
4000db00:	e5911000 	ldr	r1, [r1]
4000db04:	e1500001 	cmp	r0, r1
4000db08:	3a000001 	bcc	4000db14 <_tx_queue_create+0x1c0>
4000db0c:	e59f1044 	ldr	r1, [pc, #68]	; 4000db58 <_tx_queue_create+0x204>
4000db10:	e5910000 	ldr	r0, [r1]
4000db14:	e59f1024 	ldr	r1, [pc, #36]	; 4000db40 <_tx_queue_create+0x1ec>
4000db18:	e5810000 	str	r0, [r1]
4000db1c:	e59f1038 	ldr	r1, [pc, #56]	; 4000db5c <_tx_queue_create+0x208>
4000db20:	e5911000 	ldr	r1, [r1]
4000db24:	e5810020 	str	r0, [r1, #32]
4000db28:	e121f009 	msr	CPSR_c, r9
4000db2c:	e3a00000 	mov	r0, #0
4000db30:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000db34:	51554555 	.word	0x51554555
4000db38:	40030eb0 	.word	0x40030eb0
4000db3c:	40030eb4 	.word	0x40030eb4
4000db40:	40030ea0 	.word	0x40030ea0
4000db44:	40030ea4 	.word	0x40030ea4
4000db48:	40030e2c 	.word	0x40030e2c
4000db4c:	40030e34 	.word	0x40030e34
4000db50:	f0f0f0f0 	.word	0xf0f0f0f0
4000db54:	40030e9c 	.word	0x40030e9c
4000db58:	40030e98 	.word	0x40030e98
4000db5c:	40030e8c 	.word	0x40030e8c

4000db60 <_tx_queue_front_send>:
4000db60:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000db64:	e1a04000 	mov	r4, r0
4000db68:	e1a05001 	mov	r5, r1
4000db6c:	e1a06002 	mov	r6, r2
4000db70:	e10f7000 	mrs	r7, CPSR
4000db74:	e3870080 	orr	r0, r7, #128	; 0x80
4000db78:	e58d0004 	str	r0, [sp, #4]
4000db7c:	e59d0004 	ldr	r0, [sp, #4]
4000db80:	e121f000 	msr	CPSR_c, r0
4000db84:	e59f1368 	ldr	r1, [pc, #872]	; 4000def4 <_tx_queue_front_send+0x394>
4000db88:	e5910000 	ldr	r0, [r1]
4000db8c:	e3500000 	cmp	r0, #0
4000db90:	0a000031 	beq	4000dc5c <_tx_queue_front_send+0xfc>
4000db94:	e59f135c 	ldr	r1, [pc, #860]	; 4000def8 <_tx_queue_front_send+0x398>
4000db98:	e5911000 	ldr	r1, [r1]
4000db9c:	e2811001 	add	r1, r1, #1
4000dba0:	e59f2350 	ldr	r2, [pc, #848]	; 4000def8 <_tx_queue_front_send+0x398>
4000dba4:	e5821000 	str	r1, [r2]
4000dba8:	e580100c 	str	r1, [r0, #12]
4000dbac:	e59f1348 	ldr	r1, [pc, #840]	; 4000defc <_tx_queue_front_send+0x39c>
4000dbb0:	e5911000 	ldr	r1, [r1]
4000dbb4:	e3510000 	cmp	r1, #0
4000dbb8:	1a000006 	bne	4000dbd8 <_tx_queue_front_send+0x78>
4000dbbc:	e59f133c 	ldr	r1, [pc, #828]	; 4000df00 <_tx_queue_front_send+0x3a0>
4000dbc0:	e5911000 	ldr	r1, [r1]
4000dbc4:	e5801000 	str	r1, [r0]
4000dbc8:	e5901000 	ldr	r1, [r0]
4000dbcc:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000dbd0:	e5801004 	str	r1, [r0, #4]
4000dbd4:	ea00000d 	b	4000dc10 <_tx_queue_front_send+0xb0>
4000dbd8:	e59f131c 	ldr	r1, [pc, #796]	; 4000defc <_tx_queue_front_send+0x39c>
4000dbdc:	e5911000 	ldr	r1, [r1]
4000dbe0:	e59f231c 	ldr	r2, [pc, #796]	; 4000df04 <_tx_queue_front_send+0x3a4>
4000dbe4:	e1510002 	cmp	r1, r2
4000dbe8:	2a000004 	bcs	4000dc00 <_tx_queue_front_send+0xa0>
4000dbec:	e3e01000 	mvn	r1, #0
4000dbf0:	e5801000 	str	r1, [r0]
4000dbf4:	e3a01000 	mov	r1, #0
4000dbf8:	e5801004 	str	r1, [r0, #4]
4000dbfc:	ea000003 	b	4000dc10 <_tx_queue_front_send+0xb0>
4000dc00:	e59f12fc 	ldr	r1, [pc, #764]	; 4000df04 <_tx_queue_front_send+0x3a4>
4000dc04:	e5801000 	str	r1, [r0]
4000dc08:	e3a01000 	mov	r1, #0
4000dc0c:	e5801004 	str	r1, [r0, #4]
4000dc10:	e3a0103f 	mov	r1, #63	; 0x3f
4000dc14:	e5801008 	str	r1, [r0, #8]
4000dc18:	e5804010 	str	r4, [r0, #16]
4000dc1c:	e5805014 	str	r5, [r0, #20]
4000dc20:	e5806018 	str	r6, [r0, #24]
4000dc24:	e5941010 	ldr	r1, [r4, #16]
4000dc28:	e580101c 	str	r1, [r0, #28]
4000dc2c:	e2800020 	add	r0, r0, #32
4000dc30:	e59f12d0 	ldr	r1, [pc, #720]	; 4000df08 <_tx_queue_front_send+0x3a8>
4000dc34:	e5911000 	ldr	r1, [r1]
4000dc38:	e1500001 	cmp	r0, r1
4000dc3c:	3a000001 	bcc	4000dc48 <_tx_queue_front_send+0xe8>
4000dc40:	e59f12c4 	ldr	r1, [pc, #708]	; 4000df0c <_tx_queue_front_send+0x3ac>
4000dc44:	e5910000 	ldr	r0, [r1]
4000dc48:	e59f12a4 	ldr	r1, [pc, #676]	; 4000def4 <_tx_queue_front_send+0x394>
4000dc4c:	e5810000 	str	r0, [r1]
4000dc50:	e59f12b8 	ldr	r1, [pc, #696]	; 4000df10 <_tx_queue_front_send+0x3b0>
4000dc54:	e5911000 	ldr	r1, [r1]
4000dc58:	e5810020 	str	r0, [r1, #32]
4000dc5c:	e5940014 	ldr	r0, [r4, #20]
4000dc60:	e3500000 	cmp	r0, #0
4000dc64:	0a000064 	beq	4000ddfc <_tx_queue_front_send+0x29c>
4000dc68:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000dc6c:	e3500000 	cmp	r0, #0
4000dc70:	1a00002b 	bne	4000dd24 <_tx_queue_front_send+0x1c4>
4000dc74:	e5940020 	ldr	r0, [r4, #32]
4000dc78:	e5941018 	ldr	r1, [r4, #24]
4000dc7c:	e1500001 	cmp	r0, r1
4000dc80:	1a000004 	bne	4000dc98 <_tx_queue_front_send+0x138>
4000dc84:	e594001c 	ldr	r0, [r4, #28]
4000dc88:	e5941008 	ldr	r1, [r4, #8]
4000dc8c:	e0400101 	sub	r0, r0, r1, lsl #2
4000dc90:	e5840020 	str	r0, [r4, #32]
4000dc94:	ea000003 	b	4000dca8 <_tx_queue_front_send+0x148>
4000dc98:	e5940020 	ldr	r0, [r4, #32]
4000dc9c:	e5941008 	ldr	r1, [r4, #8]
4000dca0:	e0400101 	sub	r0, r0, r1, lsl #2
4000dca4:	e5840020 	str	r0, [r4, #32]
4000dca8:	e5940014 	ldr	r0, [r4, #20]
4000dcac:	e2400001 	sub	r0, r0, #1
4000dcb0:	e5840014 	str	r0, [r4, #20]
4000dcb4:	e5940010 	ldr	r0, [r4, #16]
4000dcb8:	e2800001 	add	r0, r0, #1
4000dcbc:	e5840010 	str	r0, [r4, #16]
4000dcc0:	e1a09005 	mov	r9, r5
4000dcc4:	e594a020 	ldr	sl, [r4, #32]
4000dcc8:	e594b008 	ldr	fp, [r4, #8]
4000dccc:	e1a00000 	nop			; (mov r0, r0)
4000dcd0:	e5990000 	ldr	r0, [r9]
4000dcd4:	e58a0000 	str	r0, [sl]
4000dcd8:	e24bb001 	sub	fp, fp, #1
4000dcdc:	e35b0000 	cmp	fp, #0
4000dce0:	1a000000 	bne	4000dce8 <_tx_queue_front_send+0x188>
4000dce4:	ea000002 	b	4000dcf4 <_tx_queue_front_send+0x194>
4000dce8:	e28aa004 	add	sl, sl, #4
4000dcec:	e2899004 	add	r9, r9, #4
4000dcf0:	eafffff6 	b	4000dcd0 <_tx_queue_front_send+0x170>
4000dcf4:	e1a00000 	nop			; (mov r0, r0)
4000dcf8:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dcfc:	e58d0000 	str	r0, [sp]
4000dd00:	e121f007 	msr	CPSR_c, r7
4000dd04:	e59d0000 	ldr	r0, [sp]
4000dd08:	e3500000 	cmp	r0, #0
4000dd0c:	0a000002 	beq	4000dd1c <_tx_queue_front_send+0x1bc>
4000dd10:	e1a00004 	mov	r0, r4
4000dd14:	e59d1000 	ldr	r1, [sp]
4000dd18:	e12fff31 	blx	r1
4000dd1c:	e3a00000 	mov	r0, #0
4000dd20:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000dd24:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000dd28:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd2c:	e1500008 	cmp	r0, r8
4000dd30:	1a000002 	bne	4000dd40 <_tx_queue_front_send+0x1e0>
4000dd34:	e3a00000 	mov	r0, #0
4000dd38:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd3c:	ea000007 	b	4000dd60 <_tx_queue_front_send+0x200>
4000dd40:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd44:	e5840028 	str	r0, [r4, #40]	; 0x28
4000dd48:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000dd4c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000dd50:	e5810074 	str	r0, [r1, #116]	; 0x74
4000dd54:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000dd58:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000dd5c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000dd60:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000dd64:	e2400001 	sub	r0, r0, #1
4000dd68:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000dd6c:	e3a00000 	mov	r0, #0
4000dd70:	e5880068 	str	r0, [r8, #104]	; 0x68
4000dd74:	e59f0198 	ldr	r0, [pc, #408]	; 4000df14 <_tx_queue_front_send+0x3b4>
4000dd78:	e5900000 	ldr	r0, [r0]
4000dd7c:	e2800001 	add	r0, r0, #1
4000dd80:	e59f118c 	ldr	r1, [pc, #396]	; 4000df14 <_tx_queue_front_send+0x3b4>
4000dd84:	e5810000 	str	r0, [r1]
4000dd88:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dd8c:	e58d0000 	str	r0, [sp]
4000dd90:	e121f007 	msr	CPSR_c, r7
4000dd94:	e1a09005 	mov	r9, r5
4000dd98:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000dd9c:	e594b008 	ldr	fp, [r4, #8]
4000dda0:	e1a00000 	nop			; (mov r0, r0)
4000dda4:	e5990000 	ldr	r0, [r9]
4000dda8:	e58a0000 	str	r0, [sl]
4000ddac:	e24bb001 	sub	fp, fp, #1
4000ddb0:	e35b0000 	cmp	fp, #0
4000ddb4:	1a000000 	bne	4000ddbc <_tx_queue_front_send+0x25c>
4000ddb8:	ea000002 	b	4000ddc8 <_tx_queue_front_send+0x268>
4000ddbc:	e28aa004 	add	sl, sl, #4
4000ddc0:	e2899004 	add	r9, r9, #4
4000ddc4:	eafffff6 	b	4000dda4 <_tx_queue_front_send+0x244>
4000ddc8:	e1a00000 	nop			; (mov r0, r0)
4000ddcc:	e3a00000 	mov	r0, #0
4000ddd0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000ddd4:	e1a00008 	mov	r0, r8
4000ddd8:	eb0005be 	bl	4000f4d8 <_tx_thread_system_resume>
4000dddc:	e59d0000 	ldr	r0, [sp]
4000dde0:	e3500000 	cmp	r0, #0
4000dde4:	0a000002 	beq	4000ddf4 <_tx_queue_front_send+0x294>
4000dde8:	e1a00004 	mov	r0, r4
4000ddec:	e59d1000 	ldr	r1, [sp]
4000ddf0:	e12fff31 	blx	r1
4000ddf4:	e3a00000 	mov	r0, #0
4000ddf8:	eaffffc8 	b	4000dd20 <_tx_queue_front_send+0x1c0>
4000ddfc:	e3560000 	cmp	r6, #0
4000de00:	0a000038 	beq	4000dee8 <_tx_queue_front_send+0x388>
4000de04:	e59f00f4 	ldr	r0, [pc, #244]	; 4000df00 <_tx_queue_front_send+0x3a0>
4000de08:	e5908000 	ldr	r8, [r0]
4000de0c:	e59f0104 	ldr	r0, [pc, #260]	; 4000df18 <_tx_queue_front_send+0x3b8>
4000de10:	e5880068 	str	r0, [r8, #104]	; 0x68
4000de14:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000de18:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000de1c:	e3a00001 	mov	r0, #1
4000de20:	e5880080 	str	r0, [r8, #128]	; 0x80
4000de24:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de28:	e3500000 	cmp	r0, #0
4000de2c:	0a00000b 	beq	4000de60 <_tx_queue_front_send+0x300>
4000de30:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de34:	e5880070 	str	r0, [r8, #112]	; 0x70
4000de38:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de3c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000de40:	e5880074 	str	r0, [r8, #116]	; 0x74
4000de44:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de48:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000de4c:	e5808070 	str	r8, [r0, #112]	; 0x70
4000de50:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000de54:	e5808074 	str	r8, [r0, #116]	; 0x74
4000de58:	e5848028 	str	r8, [r4, #40]	; 0x28
4000de5c:	ea000002 	b	4000de6c <_tx_queue_front_send+0x30c>
4000de60:	e5848028 	str	r8, [r4, #40]	; 0x28
4000de64:	e5888070 	str	r8, [r8, #112]	; 0x70
4000de68:	e5888074 	str	r8, [r8, #116]	; 0x74
4000de6c:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000de70:	e2800001 	add	r0, r0, #1
4000de74:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000de78:	e3a00005 	mov	r0, #5
4000de7c:	e5880030 	str	r0, [r8, #48]	; 0x30
4000de80:	e3a00001 	mov	r0, #1
4000de84:	e5880038 	str	r0, [r8, #56]	; 0x38
4000de88:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000de8c:	e59f0080 	ldr	r0, [pc, #128]	; 4000df14 <_tx_queue_front_send+0x3b4>
4000de90:	e5900000 	ldr	r0, [r0]
4000de94:	e2800001 	add	r0, r0, #1
4000de98:	e59f1074 	ldr	r1, [pc, #116]	; 4000df14 <_tx_queue_front_send+0x3b4>
4000de9c:	e5810000 	str	r0, [r1]
4000dea0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000dea4:	e58d0000 	str	r0, [sp]
4000dea8:	e121f007 	msr	CPSR_c, r7
4000deac:	e1a00008 	mov	r0, r8
4000deb0:	ebffebe1 	bl	40008e3c <_tx_thread_system_suspend>
4000deb4:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000deb8:	e58d0000 	str	r0, [sp]
4000debc:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dec0:	e3500000 	cmp	r0, #0
4000dec4:	1a000005 	bne	4000dee0 <_tx_queue_front_send+0x380>
4000dec8:	e59d0000 	ldr	r0, [sp]
4000decc:	e3500000 	cmp	r0, #0
4000ded0:	0a000002 	beq	4000dee0 <_tx_queue_front_send+0x380>
4000ded4:	e1a00004 	mov	r0, r4
4000ded8:	e59d1000 	ldr	r1, [sp]
4000dedc:	e12fff31 	blx	r1
4000dee0:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000dee4:	eaffff8d 	b	4000dd20 <_tx_queue_front_send+0x1c0>
4000dee8:	e121f007 	msr	CPSR_c, r7
4000deec:	e3a0000b 	mov	r0, #11
4000def0:	eaffff8a 	b	4000dd20 <_tx_queue_front_send+0x1c0>
4000def4:	40030ea0 	.word	0x40030ea0
4000def8:	40030ea4 	.word	0x40030ea4
4000defc:	40030e2c 	.word	0x40030e2c
4000df00:	40030e34 	.word	0x40030e34
4000df04:	f0f0f0f0 	.word	0xf0f0f0f0
4000df08:	40030e9c 	.word	0x40030e9c
4000df0c:	40030e98 	.word	0x40030e98
4000df10:	40030e8c 	.word	0x40030e8c
4000df14:	40030e50 	.word	0x40030e50
4000df18:	400108fc 	.word	0x400108fc

4000df1c <_tx_queue_receive>:
4000df1c:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000df20:	e1a04000 	mov	r4, r0
4000df24:	e1a05001 	mov	r5, r1
4000df28:	e1a06002 	mov	r6, r2
4000df2c:	e10f7000 	mrs	r7, CPSR
4000df30:	e3870080 	orr	r0, r7, #128	; 0x80
4000df34:	e58d0000 	str	r0, [sp]
4000df38:	e59d0000 	ldr	r0, [sp]
4000df3c:	e121f000 	msr	CPSR_c, r0
4000df40:	e59f140c 	ldr	r1, [pc, #1036]	; 4000e354 <_tx_queue_receive+0x438>
4000df44:	e5910000 	ldr	r0, [r1]
4000df48:	e3500000 	cmp	r0, #0
4000df4c:	0a000031 	beq	4000e018 <_tx_queue_receive+0xfc>
4000df50:	e59f1400 	ldr	r1, [pc, #1024]	; 4000e358 <_tx_queue_receive+0x43c>
4000df54:	e5911000 	ldr	r1, [r1]
4000df58:	e2811001 	add	r1, r1, #1
4000df5c:	e59f23f4 	ldr	r2, [pc, #1012]	; 4000e358 <_tx_queue_receive+0x43c>
4000df60:	e5821000 	str	r1, [r2]
4000df64:	e580100c 	str	r1, [r0, #12]
4000df68:	e59f13ec 	ldr	r1, [pc, #1004]	; 4000e35c <_tx_queue_receive+0x440>
4000df6c:	e5911000 	ldr	r1, [r1]
4000df70:	e3510000 	cmp	r1, #0
4000df74:	1a000006 	bne	4000df94 <_tx_queue_receive+0x78>
4000df78:	e59f13e0 	ldr	r1, [pc, #992]	; 4000e360 <_tx_queue_receive+0x444>
4000df7c:	e5911000 	ldr	r1, [r1]
4000df80:	e5801000 	str	r1, [r0]
4000df84:	e5901000 	ldr	r1, [r0]
4000df88:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000df8c:	e5801004 	str	r1, [r0, #4]
4000df90:	ea00000d 	b	4000dfcc <_tx_queue_receive+0xb0>
4000df94:	e59f13c0 	ldr	r1, [pc, #960]	; 4000e35c <_tx_queue_receive+0x440>
4000df98:	e5911000 	ldr	r1, [r1]
4000df9c:	e59f23c0 	ldr	r2, [pc, #960]	; 4000e364 <_tx_queue_receive+0x448>
4000dfa0:	e1510002 	cmp	r1, r2
4000dfa4:	2a000004 	bcs	4000dfbc <_tx_queue_receive+0xa0>
4000dfa8:	e3e01000 	mvn	r1, #0
4000dfac:	e5801000 	str	r1, [r0]
4000dfb0:	e3a01000 	mov	r1, #0
4000dfb4:	e5801004 	str	r1, [r0, #4]
4000dfb8:	ea000003 	b	4000dfcc <_tx_queue_receive+0xb0>
4000dfbc:	e59f13a0 	ldr	r1, [pc, #928]	; 4000e364 <_tx_queue_receive+0x448>
4000dfc0:	e5801000 	str	r1, [r0]
4000dfc4:	e3a01000 	mov	r1, #0
4000dfc8:	e5801004 	str	r1, [r0, #4]
4000dfcc:	e3a01044 	mov	r1, #68	; 0x44
4000dfd0:	e5801008 	str	r1, [r0, #8]
4000dfd4:	e5804010 	str	r4, [r0, #16]
4000dfd8:	e5805014 	str	r5, [r0, #20]
4000dfdc:	e5806018 	str	r6, [r0, #24]
4000dfe0:	e5941010 	ldr	r1, [r4, #16]
4000dfe4:	e580101c 	str	r1, [r0, #28]
4000dfe8:	e2800020 	add	r0, r0, #32
4000dfec:	e59f1374 	ldr	r1, [pc, #884]	; 4000e368 <_tx_queue_receive+0x44c>
4000dff0:	e5911000 	ldr	r1, [r1]
4000dff4:	e1500001 	cmp	r0, r1
4000dff8:	3a000001 	bcc	4000e004 <_tx_queue_receive+0xe8>
4000dffc:	e59f1368 	ldr	r1, [pc, #872]	; 4000e36c <_tx_queue_receive+0x450>
4000e000:	e5910000 	ldr	r0, [r1]
4000e004:	e59f1348 	ldr	r1, [pc, #840]	; 4000e354 <_tx_queue_receive+0x438>
4000e008:	e5810000 	str	r0, [r1]
4000e00c:	e59f135c 	ldr	r1, [pc, #860]	; 4000e370 <_tx_queue_receive+0x454>
4000e010:	e5911000 	ldr	r1, [r1]
4000e014:	e5810020 	str	r0, [r1, #32]
4000e018:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e01c:	e3580000 	cmp	r8, #0
4000e020:	0a00002f 	beq	4000e0e4 <_tx_queue_receive+0x1c8>
4000e024:	e5980080 	ldr	r0, [r8, #128]	; 0x80
4000e028:	e3500000 	cmp	r0, #0
4000e02c:	0a00002c 	beq	4000e0e4 <_tx_queue_receive+0x1c8>
4000e030:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e034:	e1a0a005 	mov	sl, r5
4000e038:	e594b008 	ldr	fp, [r4, #8]
4000e03c:	e1a00000 	nop			; (mov r0, r0)
4000e040:	e5990000 	ldr	r0, [r9]
4000e044:	e58a0000 	str	r0, [sl]
4000e048:	e24bb001 	sub	fp, fp, #1
4000e04c:	e35b0000 	cmp	fp, #0
4000e050:	1a000000 	bne	4000e058 <_tx_queue_receive+0x13c>
4000e054:	ea000002 	b	4000e064 <_tx_queue_receive+0x148>
4000e058:	e28aa004 	add	sl, sl, #4
4000e05c:	e2899004 	add	r9, r9, #4
4000e060:	eafffff6 	b	4000e040 <_tx_queue_receive+0x124>
4000e064:	e1a00000 	nop			; (mov r0, r0)
4000e068:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e06c:	e1500008 	cmp	r0, r8
4000e070:	1a000002 	bne	4000e080 <_tx_queue_receive+0x164>
4000e074:	e3a00000 	mov	r0, #0
4000e078:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e07c:	ea000007 	b	4000e0a0 <_tx_queue_receive+0x184>
4000e080:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e084:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e088:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e08c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e090:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e094:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e098:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e09c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e0a0:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e0a4:	e2400001 	sub	r0, r0, #1
4000e0a8:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e0ac:	e3a00000 	mov	r0, #0
4000e0b0:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e0b4:	e59f02b8 	ldr	r0, [pc, #696]	; 4000e374 <_tx_queue_receive+0x458>
4000e0b8:	e5900000 	ldr	r0, [r0]
4000e0bc:	e2800001 	add	r0, r0, #1
4000e0c0:	e59f12ac 	ldr	r1, [pc, #684]	; 4000e374 <_tx_queue_receive+0x458>
4000e0c4:	e5810000 	str	r0, [r1]
4000e0c8:	e121f007 	msr	CPSR_c, r7
4000e0cc:	e3a00000 	mov	r0, #0
4000e0d0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e0d4:	e1a00008 	mov	r0, r8
4000e0d8:	eb0004fe 	bl	4000f4d8 <_tx_thread_system_resume>
4000e0dc:	e3a00000 	mov	r0, #0
4000e0e0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000e0e4:	e5940010 	ldr	r0, [r4, #16]
4000e0e8:	e3500000 	cmp	r0, #0
4000e0ec:	0a000068 	beq	4000e294 <_tx_queue_receive+0x378>
4000e0f0:	e5949020 	ldr	r9, [r4, #32]
4000e0f4:	e1a0a005 	mov	sl, r5
4000e0f8:	e594b008 	ldr	fp, [r4, #8]
4000e0fc:	e1a00000 	nop			; (mov r0, r0)
4000e100:	e5990000 	ldr	r0, [r9]
4000e104:	e58a0000 	str	r0, [sl]
4000e108:	e24bb001 	sub	fp, fp, #1
4000e10c:	e35b0000 	cmp	fp, #0
4000e110:	1a000000 	bne	4000e118 <_tx_queue_receive+0x1fc>
4000e114:	ea000002 	b	4000e124 <_tx_queue_receive+0x208>
4000e118:	e28aa004 	add	sl, sl, #4
4000e11c:	e2899004 	add	r9, r9, #4
4000e120:	eafffff6 	b	4000e100 <_tx_queue_receive+0x1e4>
4000e124:	e1a00000 	nop			; (mov r0, r0)
4000e128:	e5940020 	ldr	r0, [r4, #32]
4000e12c:	e5941008 	ldr	r1, [r4, #8]
4000e130:	e0800101 	add	r0, r0, r1, lsl #2
4000e134:	e5840020 	str	r0, [r4, #32]
4000e138:	e5940020 	ldr	r0, [r4, #32]
4000e13c:	e594101c 	ldr	r1, [r4, #28]
4000e140:	e1500001 	cmp	r0, r1
4000e144:	3a000001 	bcc	4000e150 <_tx_queue_receive+0x234>
4000e148:	e5940018 	ldr	r0, [r4, #24]
4000e14c:	e5840020 	str	r0, [r4, #32]
4000e150:	e3580000 	cmp	r8, #0
4000e154:	1a000008 	bne	4000e17c <_tx_queue_receive+0x260>
4000e158:	e5940014 	ldr	r0, [r4, #20]
4000e15c:	e2800001 	add	r0, r0, #1
4000e160:	e5840014 	str	r0, [r4, #20]
4000e164:	e5940010 	ldr	r0, [r4, #16]
4000e168:	e2400001 	sub	r0, r0, #1
4000e16c:	e5840010 	str	r0, [r4, #16]
4000e170:	e121f007 	msr	CPSR_c, r7
4000e174:	e3a00000 	mov	r0, #0
4000e178:	eaffffd8 	b	4000e0e0 <_tx_queue_receive+0x1c4>
4000e17c:	e59f01f0 	ldr	r0, [pc, #496]	; 4000e374 <_tx_queue_receive+0x458>
4000e180:	e5900000 	ldr	r0, [r0]
4000e184:	e2800001 	add	r0, r0, #1
4000e188:	e59f11e4 	ldr	r1, [pc, #484]	; 4000e374 <_tx_queue_receive+0x458>
4000e18c:	e5810000 	str	r0, [r1]
4000e190:	e121f007 	msr	CPSR_c, r7
4000e194:	e10f7000 	mrs	r7, CPSR
4000e198:	e3870080 	orr	r0, r7, #128	; 0x80
4000e19c:	e58d0000 	str	r0, [sp]
4000e1a0:	e59d0000 	ldr	r0, [sp]
4000e1a4:	e121f000 	msr	CPSR_c, r0
4000e1a8:	e2810000 	add	r0, r1, #0
4000e1ac:	e5900000 	ldr	r0, [r0]
4000e1b0:	e2400001 	sub	r0, r0, #1
4000e1b4:	e5810000 	str	r0, [r1]
4000e1b8:	e598907c 	ldr	r9, [r8, #124]	; 0x7c
4000e1bc:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e1c0:	e594b008 	ldr	fp, [r4, #8]
4000e1c4:	e1a00000 	nop			; (mov r0, r0)
4000e1c8:	e5990000 	ldr	r0, [r9]
4000e1cc:	e58a0000 	str	r0, [sl]
4000e1d0:	e24bb001 	sub	fp, fp, #1
4000e1d4:	e35b0000 	cmp	fp, #0
4000e1d8:	1a000000 	bne	4000e1e0 <_tx_queue_receive+0x2c4>
4000e1dc:	ea000002 	b	4000e1ec <_tx_queue_receive+0x2d0>
4000e1e0:	e28aa004 	add	sl, sl, #4
4000e1e4:	e2899004 	add	r9, r9, #4
4000e1e8:	eafffff6 	b	4000e1c8 <_tx_queue_receive+0x2ac>
4000e1ec:	e1a00000 	nop			; (mov r0, r0)
4000e1f0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e1f4:	e5941008 	ldr	r1, [r4, #8]
4000e1f8:	e0800101 	add	r0, r0, r1, lsl #2
4000e1fc:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e200:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e204:	e594101c 	ldr	r1, [r4, #28]
4000e208:	e1500001 	cmp	r0, r1
4000e20c:	3a000001 	bcc	4000e218 <_tx_queue_receive+0x2fc>
4000e210:	e5940018 	ldr	r0, [r4, #24]
4000e214:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e218:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e21c:	e1500008 	cmp	r0, r8
4000e220:	1a000002 	bne	4000e230 <_tx_queue_receive+0x314>
4000e224:	e3a00000 	mov	r0, #0
4000e228:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e22c:	ea000007 	b	4000e250 <_tx_queue_receive+0x334>
4000e230:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e234:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e238:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e23c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e240:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e244:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e248:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e24c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e250:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e254:	e2400001 	sub	r0, r0, #1
4000e258:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e25c:	e3a00000 	mov	r0, #0
4000e260:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e264:	e59f0108 	ldr	r0, [pc, #264]	; 4000e374 <_tx_queue_receive+0x458>
4000e268:	e5900000 	ldr	r0, [r0]
4000e26c:	e2800001 	add	r0, r0, #1
4000e270:	e59f10fc 	ldr	r1, [pc, #252]	; 4000e374 <_tx_queue_receive+0x458>
4000e274:	e5810000 	str	r0, [r1]
4000e278:	e121f007 	msr	CPSR_c, r7
4000e27c:	e3a00000 	mov	r0, #0
4000e280:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e284:	e1a00008 	mov	r0, r8
4000e288:	eb000492 	bl	4000f4d8 <_tx_thread_system_resume>
4000e28c:	e3a00000 	mov	r0, #0
4000e290:	eaffff92 	b	4000e0e0 <_tx_queue_receive+0x1c4>
4000e294:	e3560000 	cmp	r6, #0
4000e298:	0a00002a 	beq	4000e348 <_tx_queue_receive+0x42c>
4000e29c:	e59f00bc 	ldr	r0, [pc, #188]	; 4000e360 <_tx_queue_receive+0x444>
4000e2a0:	e5908000 	ldr	r8, [r0]
4000e2a4:	e59f00cc 	ldr	r0, [pc, #204]	; 4000e378 <_tx_queue_receive+0x45c>
4000e2a8:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e2ac:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e2b0:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e2b4:	e3a00000 	mov	r0, #0
4000e2b8:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e2bc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2c0:	e3500000 	cmp	r0, #0
4000e2c4:	0a00000a 	beq	4000e2f4 <_tx_queue_receive+0x3d8>
4000e2c8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2cc:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e2d0:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2d4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e2d8:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e2dc:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2e0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e2e4:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e2e8:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e2ec:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e2f0:	ea000002 	b	4000e300 <_tx_queue_receive+0x3e4>
4000e2f4:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e2f8:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e2fc:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e300:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e304:	e2800001 	add	r0, r0, #1
4000e308:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e30c:	e3a00005 	mov	r0, #5
4000e310:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e314:	e3a00001 	mov	r0, #1
4000e318:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e31c:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e320:	e59f004c 	ldr	r0, [pc, #76]	; 4000e374 <_tx_queue_receive+0x458>
4000e324:	e5900000 	ldr	r0, [r0]
4000e328:	e2800001 	add	r0, r0, #1
4000e32c:	e59f1040 	ldr	r1, [pc, #64]	; 4000e374 <_tx_queue_receive+0x458>
4000e330:	e5810000 	str	r0, [r1]
4000e334:	e121f007 	msr	CPSR_c, r7
4000e338:	e1a00008 	mov	r0, r8
4000e33c:	ebffeabe 	bl	40008e3c <_tx_thread_system_suspend>
4000e340:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e344:	eaffff65 	b	4000e0e0 <_tx_queue_receive+0x1c4>
4000e348:	e121f007 	msr	CPSR_c, r7
4000e34c:	e3a0000a 	mov	r0, #10
4000e350:	eaffff62 	b	4000e0e0 <_tx_queue_receive+0x1c4>
4000e354:	40030ea0 	.word	0x40030ea0
4000e358:	40030ea4 	.word	0x40030ea4
4000e35c:	40030e2c 	.word	0x40030e2c
4000e360:	40030e34 	.word	0x40030e34
4000e364:	f0f0f0f0 	.word	0xf0f0f0f0
4000e368:	40030e9c 	.word	0x40030e9c
4000e36c:	40030e98 	.word	0x40030e98
4000e370:	40030e8c 	.word	0x40030e8c
4000e374:	40030e50 	.word	0x40030e50
4000e378:	400108fc 	.word	0x400108fc

4000e37c <_tx_queue_send>:
4000e37c:	e92d5ffc 	push	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
4000e380:	e1a04000 	mov	r4, r0
4000e384:	e1a05001 	mov	r5, r1
4000e388:	e1a06002 	mov	r6, r2
4000e38c:	e10f7000 	mrs	r7, CPSR
4000e390:	e3870080 	orr	r0, r7, #128	; 0x80
4000e394:	e58d0004 	str	r0, [sp, #4]
4000e398:	e59d0004 	ldr	r0, [sp, #4]
4000e39c:	e121f000 	msr	CPSR_c, r0
4000e3a0:	e59f1358 	ldr	r1, [pc, #856]	; 4000e700 <_tx_queue_send+0x384>
4000e3a4:	e5910000 	ldr	r0, [r1]
4000e3a8:	e3500000 	cmp	r0, #0
4000e3ac:	0a000031 	beq	4000e478 <_tx_queue_send+0xfc>
4000e3b0:	e59f134c 	ldr	r1, [pc, #844]	; 4000e704 <_tx_queue_send+0x388>
4000e3b4:	e5911000 	ldr	r1, [r1]
4000e3b8:	e2811001 	add	r1, r1, #1
4000e3bc:	e59f2340 	ldr	r2, [pc, #832]	; 4000e704 <_tx_queue_send+0x388>
4000e3c0:	e5821000 	str	r1, [r2]
4000e3c4:	e580100c 	str	r1, [r0, #12]
4000e3c8:	e59f1338 	ldr	r1, [pc, #824]	; 4000e708 <_tx_queue_send+0x38c>
4000e3cc:	e5911000 	ldr	r1, [r1]
4000e3d0:	e3510000 	cmp	r1, #0
4000e3d4:	1a000006 	bne	4000e3f4 <_tx_queue_send+0x78>
4000e3d8:	e59f132c 	ldr	r1, [pc, #812]	; 4000e70c <_tx_queue_send+0x390>
4000e3dc:	e5911000 	ldr	r1, [r1]
4000e3e0:	e5801000 	str	r1, [r0]
4000e3e4:	e5901000 	ldr	r1, [r0]
4000e3e8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e3ec:	e5801004 	str	r1, [r0, #4]
4000e3f0:	ea00000d 	b	4000e42c <_tx_queue_send+0xb0>
4000e3f4:	e59f130c 	ldr	r1, [pc, #780]	; 4000e708 <_tx_queue_send+0x38c>
4000e3f8:	e5911000 	ldr	r1, [r1]
4000e3fc:	e59f230c 	ldr	r2, [pc, #780]	; 4000e710 <_tx_queue_send+0x394>
4000e400:	e1510002 	cmp	r1, r2
4000e404:	2a000004 	bcs	4000e41c <_tx_queue_send+0xa0>
4000e408:	e3e01000 	mvn	r1, #0
4000e40c:	e5801000 	str	r1, [r0]
4000e410:	e3a01000 	mov	r1, #0
4000e414:	e5801004 	str	r1, [r0, #4]
4000e418:	ea000003 	b	4000e42c <_tx_queue_send+0xb0>
4000e41c:	e59f12ec 	ldr	r1, [pc, #748]	; 4000e710 <_tx_queue_send+0x394>
4000e420:	e5801000 	str	r1, [r0]
4000e424:	e3a01000 	mov	r1, #0
4000e428:	e5801004 	str	r1, [r0, #4]
4000e42c:	e3a01045 	mov	r1, #69	; 0x45
4000e430:	e5801008 	str	r1, [r0, #8]
4000e434:	e5804010 	str	r4, [r0, #16]
4000e438:	e5805014 	str	r5, [r0, #20]
4000e43c:	e5806018 	str	r6, [r0, #24]
4000e440:	e5941010 	ldr	r1, [r4, #16]
4000e444:	e580101c 	str	r1, [r0, #28]
4000e448:	e2800020 	add	r0, r0, #32
4000e44c:	e59f12c0 	ldr	r1, [pc, #704]	; 4000e714 <_tx_queue_send+0x398>
4000e450:	e5911000 	ldr	r1, [r1]
4000e454:	e1500001 	cmp	r0, r1
4000e458:	3a000001 	bcc	4000e464 <_tx_queue_send+0xe8>
4000e45c:	e59f12b4 	ldr	r1, [pc, #692]	; 4000e718 <_tx_queue_send+0x39c>
4000e460:	e5910000 	ldr	r0, [r1]
4000e464:	e59f1294 	ldr	r1, [pc, #660]	; 4000e700 <_tx_queue_send+0x384>
4000e468:	e5810000 	str	r0, [r1]
4000e46c:	e59f12a8 	ldr	r1, [pc, #680]	; 4000e71c <_tx_queue_send+0x3a0>
4000e470:	e5911000 	ldr	r1, [r1]
4000e474:	e5810020 	str	r0, [r1, #32]
4000e478:	e5940014 	ldr	r0, [r4, #20]
4000e47c:	e3500000 	cmp	r0, #0
4000e480:	0a000061 	beq	4000e60c <_tx_queue_send+0x290>
4000e484:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e488:	e3500000 	cmp	r0, #0
4000e48c:	1a000028 	bne	4000e534 <_tx_queue_send+0x1b8>
4000e490:	e5940014 	ldr	r0, [r4, #20]
4000e494:	e2400001 	sub	r0, r0, #1
4000e498:	e5840014 	str	r0, [r4, #20]
4000e49c:	e5940010 	ldr	r0, [r4, #16]
4000e4a0:	e2800001 	add	r0, r0, #1
4000e4a4:	e5840010 	str	r0, [r4, #16]
4000e4a8:	e1a09005 	mov	r9, r5
4000e4ac:	e594a024 	ldr	sl, [r4, #36]	; 0x24
4000e4b0:	e594b008 	ldr	fp, [r4, #8]
4000e4b4:	e1a00000 	nop			; (mov r0, r0)
4000e4b8:	e5990000 	ldr	r0, [r9]
4000e4bc:	e58a0000 	str	r0, [sl]
4000e4c0:	e24bb001 	sub	fp, fp, #1
4000e4c4:	e35b0000 	cmp	fp, #0
4000e4c8:	1a000000 	bne	4000e4d0 <_tx_queue_send+0x154>
4000e4cc:	ea000002 	b	4000e4dc <_tx_queue_send+0x160>
4000e4d0:	e28aa004 	add	sl, sl, #4
4000e4d4:	e2899004 	add	r9, r9, #4
4000e4d8:	eafffff6 	b	4000e4b8 <_tx_queue_send+0x13c>
4000e4dc:	e1a00000 	nop			; (mov r0, r0)
4000e4e0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e4e4:	e5941008 	ldr	r1, [r4, #8]
4000e4e8:	e0800101 	add	r0, r0, r1, lsl #2
4000e4ec:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e4f0:	e5940024 	ldr	r0, [r4, #36]	; 0x24
4000e4f4:	e594101c 	ldr	r1, [r4, #28]
4000e4f8:	e1500001 	cmp	r0, r1
4000e4fc:	3a000001 	bcc	4000e508 <_tx_queue_send+0x18c>
4000e500:	e5940018 	ldr	r0, [r4, #24]
4000e504:	e5840024 	str	r0, [r4, #36]	; 0x24
4000e508:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e50c:	e58d0000 	str	r0, [sp]
4000e510:	e121f007 	msr	CPSR_c, r7
4000e514:	e59d0000 	ldr	r0, [sp]
4000e518:	e3500000 	cmp	r0, #0
4000e51c:	0a000002 	beq	4000e52c <_tx_queue_send+0x1b0>
4000e520:	e1a00004 	mov	r0, r4
4000e524:	e59d1000 	ldr	r1, [sp]
4000e528:	e12fff31 	blx	r1
4000e52c:	e3a00000 	mov	r0, #0
4000e530:	e8bd9ffc 	pop	{r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4000e534:	e5948028 	ldr	r8, [r4, #40]	; 0x28
4000e538:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e53c:	e1500008 	cmp	r0, r8
4000e540:	1a000002 	bne	4000e550 <_tx_queue_send+0x1d4>
4000e544:	e3a00000 	mov	r0, #0
4000e548:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e54c:	ea000007 	b	4000e570 <_tx_queue_send+0x1f4>
4000e550:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e554:	e5840028 	str	r0, [r4, #40]	; 0x28
4000e558:	e5980074 	ldr	r0, [r8, #116]	; 0x74
4000e55c:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4000e560:	e5810074 	str	r0, [r1, #116]	; 0x74
4000e564:	e5980070 	ldr	r0, [r8, #112]	; 0x70
4000e568:	e5981074 	ldr	r1, [r8, #116]	; 0x74
4000e56c:	e5810070 	str	r0, [r1, #112]	; 0x70
4000e570:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e574:	e2400001 	sub	r0, r0, #1
4000e578:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e57c:	e3a00000 	mov	r0, #0
4000e580:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e584:	e59f0194 	ldr	r0, [pc, #404]	; 4000e720 <_tx_queue_send+0x3a4>
4000e588:	e5900000 	ldr	r0, [r0]
4000e58c:	e2800001 	add	r0, r0, #1
4000e590:	e59f1188 	ldr	r1, [pc, #392]	; 4000e720 <_tx_queue_send+0x3a4>
4000e594:	e5810000 	str	r0, [r1]
4000e598:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e59c:	e58d0000 	str	r0, [sp]
4000e5a0:	e121f007 	msr	CPSR_c, r7
4000e5a4:	e1a09005 	mov	r9, r5
4000e5a8:	e598a07c 	ldr	sl, [r8, #124]	; 0x7c
4000e5ac:	e594b008 	ldr	fp, [r4, #8]
4000e5b0:	e1a00000 	nop			; (mov r0, r0)
4000e5b4:	e5990000 	ldr	r0, [r9]
4000e5b8:	e58a0000 	str	r0, [sl]
4000e5bc:	e24bb001 	sub	fp, fp, #1
4000e5c0:	e35b0000 	cmp	fp, #0
4000e5c4:	1a000000 	bne	4000e5cc <_tx_queue_send+0x250>
4000e5c8:	ea000002 	b	4000e5d8 <_tx_queue_send+0x25c>
4000e5cc:	e28aa004 	add	sl, sl, #4
4000e5d0:	e2899004 	add	r9, r9, #4
4000e5d4:	eafffff6 	b	4000e5b4 <_tx_queue_send+0x238>
4000e5d8:	e1a00000 	nop			; (mov r0, r0)
4000e5dc:	e3a00000 	mov	r0, #0
4000e5e0:	e5880084 	str	r0, [r8, #132]	; 0x84
4000e5e4:	e1a00008 	mov	r0, r8
4000e5e8:	eb0003ba 	bl	4000f4d8 <_tx_thread_system_resume>
4000e5ec:	e59d0000 	ldr	r0, [sp]
4000e5f0:	e3500000 	cmp	r0, #0
4000e5f4:	0a000002 	beq	4000e604 <_tx_queue_send+0x288>
4000e5f8:	e1a00004 	mov	r0, r4
4000e5fc:	e59d1000 	ldr	r1, [sp]
4000e600:	e12fff31 	blx	r1
4000e604:	e3a00000 	mov	r0, #0
4000e608:	eaffffc8 	b	4000e530 <_tx_queue_send+0x1b4>
4000e60c:	e3560000 	cmp	r6, #0
4000e610:	0a000037 	beq	4000e6f4 <_tx_queue_send+0x378>
4000e614:	e59f00f0 	ldr	r0, [pc, #240]	; 4000e70c <_tx_queue_send+0x390>
4000e618:	e5908000 	ldr	r8, [r0]
4000e61c:	e59f0100 	ldr	r0, [pc, #256]	; 4000e724 <_tx_queue_send+0x3a8>
4000e620:	e5880068 	str	r0, [r8, #104]	; 0x68
4000e624:	e588406c 	str	r4, [r8, #108]	; 0x6c
4000e628:	e588507c 	str	r5, [r8, #124]	; 0x7c
4000e62c:	e3a00000 	mov	r0, #0
4000e630:	e5880080 	str	r0, [r8, #128]	; 0x80
4000e634:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e638:	e3500000 	cmp	r0, #0
4000e63c:	0a00000a 	beq	4000e66c <_tx_queue_send+0x2f0>
4000e640:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e644:	e5880070 	str	r0, [r8, #112]	; 0x70
4000e648:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e64c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e650:	e5880074 	str	r0, [r8, #116]	; 0x74
4000e654:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e658:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4000e65c:	e5808070 	str	r8, [r0, #112]	; 0x70
4000e660:	e5940028 	ldr	r0, [r4, #40]	; 0x28
4000e664:	e5808074 	str	r8, [r0, #116]	; 0x74
4000e668:	ea000002 	b	4000e678 <_tx_queue_send+0x2fc>
4000e66c:	e5848028 	str	r8, [r4, #40]	; 0x28
4000e670:	e5888070 	str	r8, [r8, #112]	; 0x70
4000e674:	e5888074 	str	r8, [r8, #116]	; 0x74
4000e678:	e594002c 	ldr	r0, [r4, #44]	; 0x2c
4000e67c:	e2800001 	add	r0, r0, #1
4000e680:	e584002c 	str	r0, [r4, #44]	; 0x2c
4000e684:	e3a00005 	mov	r0, #5
4000e688:	e5880030 	str	r0, [r8, #48]	; 0x30
4000e68c:	e3a00001 	mov	r0, #1
4000e690:	e5880038 	str	r0, [r8, #56]	; 0x38
4000e694:	e588604c 	str	r6, [r8, #76]	; 0x4c
4000e698:	e59f0080 	ldr	r0, [pc, #128]	; 4000e720 <_tx_queue_send+0x3a4>
4000e69c:	e5900000 	ldr	r0, [r0]
4000e6a0:	e2800001 	add	r0, r0, #1
4000e6a4:	e59f1074 	ldr	r1, [pc, #116]	; 4000e720 <_tx_queue_send+0x3a4>
4000e6a8:	e5810000 	str	r0, [r1]
4000e6ac:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e6b0:	e58d0000 	str	r0, [sp]
4000e6b4:	e121f007 	msr	CPSR_c, r7
4000e6b8:	e1a00008 	mov	r0, r8
4000e6bc:	ebffe9de 	bl	40008e3c <_tx_thread_system_suspend>
4000e6c0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000e6c4:	e58d0000 	str	r0, [sp]
4000e6c8:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e6cc:	e3500000 	cmp	r0, #0
4000e6d0:	1a000005 	bne	4000e6ec <_tx_queue_send+0x370>
4000e6d4:	e59d0000 	ldr	r0, [sp]
4000e6d8:	e3500000 	cmp	r0, #0
4000e6dc:	0a000002 	beq	4000e6ec <_tx_queue_send+0x370>
4000e6e0:	e1a00004 	mov	r0, r4
4000e6e4:	e59d1000 	ldr	r1, [sp]
4000e6e8:	e12fff31 	blx	r1
4000e6ec:	e5980084 	ldr	r0, [r8, #132]	; 0x84
4000e6f0:	eaffff8e 	b	4000e530 <_tx_queue_send+0x1b4>
4000e6f4:	e121f007 	msr	CPSR_c, r7
4000e6f8:	e3a0000b 	mov	r0, #11
4000e6fc:	eaffff8b 	b	4000e530 <_tx_queue_send+0x1b4>
4000e700:	40030ea0 	.word	0x40030ea0
4000e704:	40030ea4 	.word	0x40030ea4
4000e708:	40030e2c 	.word	0x40030e2c
4000e70c:	40030e34 	.word	0x40030e34
4000e710:	f0f0f0f0 	.word	0xf0f0f0f0
4000e714:	40030e9c 	.word	0x40030e9c
4000e718:	40030e98 	.word	0x40030e98
4000e71c:	40030e8c 	.word	0x40030e8c
4000e720:	40030e50 	.word	0x40030e50
4000e724:	400108fc 	.word	0x400108fc

4000e728 <_tx_thread_create>:
4000e728:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000e72c:	e24dd014 	sub	sp, sp, #20
4000e730:	e1a04000 	mov	r4, r0
4000e734:	e1a05001 	mov	r5, r1
4000e738:	e28da048 	add	sl, sp, #72	; 0x48
4000e73c:	e89a07c0 	ldm	sl, {r6, r7, r8, r9, sl}
4000e740:	e3a00000 	mov	r0, #0
4000e744:	e58d0004 	str	r0, [sp, #4]
4000e748:	e3a020ef 	mov	r2, #239	; 0xef
4000e74c:	e1a01007 	mov	r1, r7
4000e750:	e1a00006 	mov	r0, r6
4000e754:	eb0014a3 	bl	400139e8 <__aeabi_memset>
4000e758:	e1a00127 	lsr	r0, r7, #2
4000e75c:	e3a01004 	mov	r1, #4
4000e760:	e0617100 	rsb	r7, r1, r0, lsl #2
4000e764:	e3a010a8 	mov	r1, #168	; 0xa8
4000e768:	e1a00004 	mov	r0, r4
4000e76c:	eb001475 	bl	40013948 <__aeabi_memclr4>
4000e770:	e5845028 	str	r5, [r4, #40]	; 0x28
4000e774:	e59d001c 	ldr	r0, [sp, #28]
4000e778:	e5840044 	str	r0, [r4, #68]	; 0x44
4000e77c:	e59d0020 	ldr	r0, [sp, #32]
4000e780:	e5840048 	str	r0, [r4, #72]	; 0x48
4000e784:	e584600c 	str	r6, [r4, #12]
4000e788:	e5847014 	str	r7, [r4, #20]
4000e78c:	e2470001 	sub	r0, r7, #1
4000e790:	e0800006 	add	r0, r0, r6
4000e794:	e5840010 	str	r0, [r4, #16]
4000e798:	e584802c 	str	r8, [r4, #44]	; 0x2c
4000e79c:	e5848094 	str	r8, [r4, #148]	; 0x94
4000e7a0:	e584a018 	str	sl, [r4, #24]
4000e7a4:	e584a01c 	str	sl, [r4, #28]
4000e7a8:	e584903c 	str	r9, [r4, #60]	; 0x3c
4000e7ac:	e5849098 	str	r9, [r4, #152]	; 0x98
4000e7b0:	e3a00003 	mov	r0, #3
4000e7b4:	e5840030 	str	r0, [r4, #48]	; 0x30
4000e7b8:	e59f0268 	ldr	r0, [pc, #616]	; 4000ea28 <_tx_thread_create+0x300>
4000e7bc:	e5840054 	str	r0, [r4, #84]	; 0x54
4000e7c0:	e5844058 	str	r4, [r4, #88]	; 0x58
4000e7c4:	e59f1260 	ldr	r1, [pc, #608]	; 4000ea2c <_tx_thread_create+0x304>
4000e7c8:	e1a00004 	mov	r0, r4
4000e7cc:	eb000727 	bl	40010470 <_tx_thread_stack_build>
4000e7d0:	e5940008 	ldr	r0, [r4, #8]
4000e7d4:	e5840040 	str	r0, [r4, #64]	; 0x40
4000e7d8:	e10f0000 	mrs	r0, CPSR
4000e7dc:	e58d0010 	str	r0, [sp, #16]
4000e7e0:	e59d0010 	ldr	r0, [sp, #16]
4000e7e4:	e380b080 	orr	fp, r0, #128	; 0x80
4000e7e8:	e121f00b 	msr	CPSR_c, fp
4000e7ec:	e59f023c 	ldr	r0, [pc, #572]	; 4000ea30 <_tx_thread_create+0x308>
4000e7f0:	e5840000 	str	r0, [r4]
4000e7f4:	e59f0238 	ldr	r0, [pc, #568]	; 4000ea34 <_tx_thread_create+0x30c>
4000e7f8:	e5900000 	ldr	r0, [r0]
4000e7fc:	e3500000 	cmp	r0, #0
4000e800:	0a00000e 	beq	4000e840 <_tx_thread_create+0x118>
4000e804:	e59f0228 	ldr	r0, [pc, #552]	; 4000ea34 <_tx_thread_create+0x30c>
4000e808:	e5900000 	ldr	r0, [r0]
4000e80c:	e590008c 	ldr	r0, [r0, #140]	; 0x8c
4000e810:	e58d000c 	str	r0, [sp, #12]
4000e814:	e59f0218 	ldr	r0, [pc, #536]	; 4000ea34 <_tx_thread_create+0x30c>
4000e818:	e5900000 	ldr	r0, [r0]
4000e81c:	e580408c 	str	r4, [r0, #140]	; 0x8c
4000e820:	e59d000c 	ldr	r0, [sp, #12]
4000e824:	e5804088 	str	r4, [r0, #136]	; 0x88
4000e828:	e59d000c 	ldr	r0, [sp, #12]
4000e82c:	e584008c 	str	r0, [r4, #140]	; 0x8c
4000e830:	e59f01fc 	ldr	r0, [pc, #508]	; 4000ea34 <_tx_thread_create+0x30c>
4000e834:	e5900000 	ldr	r0, [r0]
4000e838:	e5840088 	str	r0, [r4, #136]	; 0x88
4000e83c:	ea000003 	b	4000e850 <_tx_thread_create+0x128>
4000e840:	e59f01ec 	ldr	r0, [pc, #492]	; 4000ea34 <_tx_thread_create+0x30c>
4000e844:	e5804000 	str	r4, [r0]
4000e848:	e5844088 	str	r4, [r4, #136]	; 0x88
4000e84c:	e584408c 	str	r4, [r4, #140]	; 0x8c
4000e850:	e59f01e0 	ldr	r0, [pc, #480]	; 4000ea38 <_tx_thread_create+0x310>
4000e854:	e5900000 	ldr	r0, [r0]
4000e858:	e2800001 	add	r0, r0, #1
4000e85c:	e59f11d4 	ldr	r1, [pc, #468]	; 4000ea38 <_tx_thread_create+0x310>
4000e860:	e5810000 	str	r0, [r1]
4000e864:	e59f01d0 	ldr	r0, [pc, #464]	; 4000ea3c <_tx_thread_create+0x314>
4000e868:	e5900000 	ldr	r0, [r0]
4000e86c:	e2800001 	add	r0, r0, #1
4000e870:	e59f11c4 	ldr	r1, [pc, #452]	; 4000ea3c <_tx_thread_create+0x314>
4000e874:	e5810000 	str	r0, [r1]
4000e878:	e1a03006 	mov	r3, r6
4000e87c:	e1a02005 	mov	r2, r5
4000e880:	e1a01004 	mov	r1, r4
4000e884:	e3a00001 	mov	r0, #1
4000e888:	e58d7000 	str	r7, [sp]
4000e88c:	eb000667 	bl	40010230 <_tx_trace_object_register>
4000e890:	e59f11a8 	ldr	r1, [pc, #424]	; 4000ea40 <_tx_thread_create+0x318>
4000e894:	e5910000 	ldr	r0, [r1]
4000e898:	e3500000 	cmp	r0, #0
4000e89c:	0a000030 	beq	4000e964 <_tx_thread_create+0x23c>
4000e8a0:	e59f119c 	ldr	r1, [pc, #412]	; 4000ea44 <_tx_thread_create+0x31c>
4000e8a4:	e5911000 	ldr	r1, [r1]
4000e8a8:	e2811001 	add	r1, r1, #1
4000e8ac:	e59f2190 	ldr	r2, [pc, #400]	; 4000ea44 <_tx_thread_create+0x31c>
4000e8b0:	e5821000 	str	r1, [r2]
4000e8b4:	e580100c 	str	r1, [r0, #12]
4000e8b8:	e59f1188 	ldr	r1, [pc, #392]	; 4000ea48 <_tx_thread_create+0x320>
4000e8bc:	e5911000 	ldr	r1, [r1]
4000e8c0:	e3510000 	cmp	r1, #0
4000e8c4:	1a000006 	bne	4000e8e4 <_tx_thread_create+0x1bc>
4000e8c8:	e59f117c 	ldr	r1, [pc, #380]	; 4000ea4c <_tx_thread_create+0x324>
4000e8cc:	e5911000 	ldr	r1, [r1]
4000e8d0:	e5801000 	str	r1, [r0]
4000e8d4:	e5901000 	ldr	r1, [r0]
4000e8d8:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000e8dc:	e5801004 	str	r1, [r0, #4]
4000e8e0:	ea00000d 	b	4000e91c <_tx_thread_create+0x1f4>
4000e8e4:	e59f115c 	ldr	r1, [pc, #348]	; 4000ea48 <_tx_thread_create+0x320>
4000e8e8:	e5911000 	ldr	r1, [r1]
4000e8ec:	e59f215c 	ldr	r2, [pc, #348]	; 4000ea50 <_tx_thread_create+0x328>
4000e8f0:	e1510002 	cmp	r1, r2
4000e8f4:	2a000004 	bcs	4000e90c <_tx_thread_create+0x1e4>
4000e8f8:	e3e01000 	mvn	r1, #0
4000e8fc:	e5801000 	str	r1, [r0]
4000e900:	e3a01000 	mov	r1, #0
4000e904:	e5801004 	str	r1, [r0, #4]
4000e908:	ea000003 	b	4000e91c <_tx_thread_create+0x1f4>
4000e90c:	e59f113c 	ldr	r1, [pc, #316]	; 4000ea50 <_tx_thread_create+0x328>
4000e910:	e5801000 	str	r1, [r0]
4000e914:	e3a01000 	mov	r1, #0
4000e918:	e5801004 	str	r1, [r0, #4]
4000e91c:	e3a01064 	mov	r1, #100	; 0x64
4000e920:	e5801008 	str	r1, [r0, #8]
4000e924:	e5804010 	str	r4, [r0, #16]
4000e928:	e5808014 	str	r8, [r0, #20]
4000e92c:	e5806018 	str	r6, [r0, #24]
4000e930:	e580701c 	str	r7, [r0, #28]
4000e934:	e2800020 	add	r0, r0, #32
4000e938:	e59f1114 	ldr	r1, [pc, #276]	; 4000ea54 <_tx_thread_create+0x32c>
4000e93c:	e5911000 	ldr	r1, [r1]
4000e940:	e1500001 	cmp	r0, r1
4000e944:	3a000001 	bcc	4000e950 <_tx_thread_create+0x228>
4000e948:	e59f1108 	ldr	r1, [pc, #264]	; 4000ea58 <_tx_thread_create+0x330>
4000e94c:	e5910000 	ldr	r0, [r1]
4000e950:	e59f10e8 	ldr	r1, [pc, #232]	; 4000ea40 <_tx_thread_create+0x318>
4000e954:	e5810000 	str	r0, [r1]
4000e958:	e59f10fc 	ldr	r1, [pc, #252]	; 4000ea5c <_tx_thread_create+0x334>
4000e95c:	e5911000 	ldr	r1, [r1]
4000e960:	e5810020 	str	r0, [r1, #32]
4000e964:	e59d0010 	ldr	r0, [sp, #16]
4000e968:	e121f000 	msr	CPSR_c, r0
4000e96c:	e59d005c 	ldr	r0, [sp, #92]	; 0x5c
4000e970:	e3500000 	cmp	r0, #0
4000e974:	0a00001c 	beq	4000e9ec <_tx_thread_create+0x2c4>
4000e978:	e59f00c8 	ldr	r0, [pc, #200]	; 4000ea48 <_tx_thread_create+0x320>
4000e97c:	e5900000 	ldr	r0, [r0]
4000e980:	e59f10c8 	ldr	r1, [pc, #200]	; 4000ea50 <_tx_thread_create+0x328>
4000e984:	e1500001 	cmp	r0, r1
4000e988:	3a00000c 	bcc	4000e9c0 <_tx_thread_create+0x298>
4000e98c:	e59f00cc 	ldr	r0, [pc, #204]	; 4000ea60 <_tx_thread_create+0x338>
4000e990:	e5900000 	ldr	r0, [r0]
4000e994:	e58d0008 	str	r0, [sp, #8]
4000e998:	e59d0008 	ldr	r0, [sp, #8]
4000e99c:	e3500000 	cmp	r0, #0
4000e9a0:	0a000008 	beq	4000e9c8 <_tx_thread_create+0x2a0>
4000e9a4:	e59d0008 	ldr	r0, [sp, #8]
4000e9a8:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000e9ac:	e58d0004 	str	r0, [sp, #4]
4000e9b0:	e59d0008 	ldr	r0, [sp, #8]
4000e9b4:	e590102c 	ldr	r1, [r0, #44]	; 0x2c
4000e9b8:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e9bc:	ea000001 	b	4000e9c8 <_tx_thread_create+0x2a0>
4000e9c0:	e3a00000 	mov	r0, #0
4000e9c4:	e58d0008 	str	r0, [sp, #8]
4000e9c8:	e1a00004 	mov	r0, r4
4000e9cc:	eb0002c1 	bl	4000f4d8 <_tx_thread_system_resume>
4000e9d0:	e59d0008 	ldr	r0, [sp, #8]
4000e9d4:	e3500000 	cmp	r0, #0
4000e9d8:	0a00000f 	beq	4000ea1c <_tx_thread_create+0x2f4>
4000e9dc:	e59d0008 	ldr	r0, [sp, #8]
4000e9e0:	e59d1004 	ldr	r1, [sp, #4]
4000e9e4:	e580103c 	str	r1, [r0, #60]	; 0x3c
4000e9e8:	ea00000b 	b	4000ea1c <_tx_thread_create+0x2f4>
4000e9ec:	e10f0000 	mrs	r0, CPSR
4000e9f0:	e58d0010 	str	r0, [sp, #16]
4000e9f4:	e59d0010 	ldr	r0, [sp, #16]
4000e9f8:	e380b080 	orr	fp, r0, #128	; 0x80
4000e9fc:	e121f00b 	msr	CPSR_c, fp
4000ea00:	e59f0034 	ldr	r0, [pc, #52]	; 4000ea3c <_tx_thread_create+0x314>
4000ea04:	e5900000 	ldr	r0, [r0]
4000ea08:	e2400001 	sub	r0, r0, #1
4000ea0c:	e59f1028 	ldr	r1, [pc, #40]	; 4000ea3c <_tx_thread_create+0x314>
4000ea10:	e5810000 	str	r0, [r1]
4000ea14:	e59d0010 	ldr	r0, [sp, #16]
4000ea18:	e121f000 	msr	CPSR_c, r0
4000ea1c:	e3a00000 	mov	r0, #0
4000ea20:	e28dd024 	add	sp, sp, #36	; 0x24
4000ea24:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ea28:	4000fa08 	.word	0x4000fa08
4000ea2c:	4000f26c 	.word	0x4000f26c
4000ea30:	54485244 	.word	0x54485244
4000ea34:	40030e3c 	.word	0x40030e3c
4000ea38:	40030e40 	.word	0x40030e40
4000ea3c:	40030e50 	.word	0x40030e50
4000ea40:	40030ea0 	.word	0x40030ea0
4000ea44:	40030ea4 	.word	0x40030ea4
4000ea48:	40030e2c 	.word	0x40030e2c
4000ea4c:	40030e34 	.word	0x40030e34
4000ea50:	f0f0f0f0 	.word	0xf0f0f0f0
4000ea54:	40030e9c 	.word	0x40030e9c
4000ea58:	40030e98 	.word	0x40030e98
4000ea5c:	40030e8c 	.word	0x40030e8c
4000ea60:	40030e38 	.word	0x40030e38

4000ea64 <_tx_thread_info_get>:
4000ea64:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000ea68:	e1a0c000 	mov	ip, r0
4000ea6c:	e28d7028 	add	r7, sp, #40	; 0x28
4000ea70:	e89700f0 	ldm	r7, {r4, r5, r6, r7}
4000ea74:	e59de024 	ldr	lr, [sp, #36]	; 0x24
4000ea78:	e10f8000 	mrs	r8, CPSR
4000ea7c:	e3889080 	orr	r9, r8, #128	; 0x80
4000ea80:	e121f009 	msr	CPSR_c, r9
4000ea84:	e59fa160 	ldr	sl, [pc, #352]	; 4000ebec <_tx_thread_info_get+0x188>
4000ea88:	e59a0000 	ldr	r0, [sl]
4000ea8c:	e3500000 	cmp	r0, #0
4000ea90:	0a000032 	beq	4000eb60 <_tx_thread_info_get+0xfc>
4000ea94:	e59fa154 	ldr	sl, [pc, #340]	; 4000ebf0 <_tx_thread_info_get+0x18c>
4000ea98:	e59aa000 	ldr	sl, [sl]
4000ea9c:	e28aa001 	add	sl, sl, #1
4000eaa0:	e59fb148 	ldr	fp, [pc, #328]	; 4000ebf0 <_tx_thread_info_get+0x18c>
4000eaa4:	e58ba000 	str	sl, [fp]
4000eaa8:	e580a00c 	str	sl, [r0, #12]
4000eaac:	e59fa140 	ldr	sl, [pc, #320]	; 4000ebf4 <_tx_thread_info_get+0x190>
4000eab0:	e59aa000 	ldr	sl, [sl]
4000eab4:	e35a0000 	cmp	sl, #0
4000eab8:	1a000006 	bne	4000ead8 <_tx_thread_info_get+0x74>
4000eabc:	e59fa134 	ldr	sl, [pc, #308]	; 4000ebf8 <_tx_thread_info_get+0x194>
4000eac0:	e59aa000 	ldr	sl, [sl]
4000eac4:	e580a000 	str	sl, [r0]
4000eac8:	e590a000 	ldr	sl, [r0]
4000eacc:	e59aa02c 	ldr	sl, [sl, #44]	; 0x2c
4000ead0:	e580a004 	str	sl, [r0, #4]
4000ead4:	ea00000d 	b	4000eb10 <_tx_thread_info_get+0xac>
4000ead8:	e59fa114 	ldr	sl, [pc, #276]	; 4000ebf4 <_tx_thread_info_get+0x190>
4000eadc:	e59aa000 	ldr	sl, [sl]
4000eae0:	e59fb114 	ldr	fp, [pc, #276]	; 4000ebfc <_tx_thread_info_get+0x198>
4000eae4:	e15a000b 	cmp	sl, fp
4000eae8:	2a000004 	bcs	4000eb00 <_tx_thread_info_get+0x9c>
4000eaec:	e3e0a000 	mvn	sl, #0
4000eaf0:	e580a000 	str	sl, [r0]
4000eaf4:	e3a0a000 	mov	sl, #0
4000eaf8:	e580a004 	str	sl, [r0, #4]
4000eafc:	ea000003 	b	4000eb10 <_tx_thread_info_get+0xac>
4000eb00:	e59fa0f4 	ldr	sl, [pc, #244]	; 4000ebfc <_tx_thread_info_get+0x198>
4000eb04:	e580a000 	str	sl, [r0]
4000eb08:	e3a0a000 	mov	sl, #0
4000eb0c:	e580a004 	str	sl, [r0, #4]
4000eb10:	e3a0a068 	mov	sl, #104	; 0x68
4000eb14:	e580a008 	str	sl, [r0, #8]
4000eb18:	e580c010 	str	ip, [r0, #16]
4000eb1c:	e59ca030 	ldr	sl, [ip, #48]	; 0x30
4000eb20:	e580a014 	str	sl, [r0, #20]
4000eb24:	e3a0a000 	mov	sl, #0
4000eb28:	e580a018 	str	sl, [r0, #24]
4000eb2c:	e580a01c 	str	sl, [r0, #28]
4000eb30:	e2800020 	add	r0, r0, #32
4000eb34:	e59fa0c4 	ldr	sl, [pc, #196]	; 4000ec00 <_tx_thread_info_get+0x19c>
4000eb38:	e59aa000 	ldr	sl, [sl]
4000eb3c:	e150000a 	cmp	r0, sl
4000eb40:	3a000001 	bcc	4000eb4c <_tx_thread_info_get+0xe8>
4000eb44:	e59fa0b8 	ldr	sl, [pc, #184]	; 4000ec04 <_tx_thread_info_get+0x1a0>
4000eb48:	e59a0000 	ldr	r0, [sl]
4000eb4c:	e59fa098 	ldr	sl, [pc, #152]	; 4000ebec <_tx_thread_info_get+0x188>
4000eb50:	e58a0000 	str	r0, [sl]
4000eb54:	e59fa0ac 	ldr	sl, [pc, #172]	; 4000ec08 <_tx_thread_info_get+0x1a4>
4000eb58:	e59aa000 	ldr	sl, [sl]
4000eb5c:	e58a0020 	str	r0, [sl, #32]
4000eb60:	e3510000 	cmp	r1, #0
4000eb64:	0a000001 	beq	4000eb70 <_tx_thread_info_get+0x10c>
4000eb68:	e59c0028 	ldr	r0, [ip, #40]	; 0x28
4000eb6c:	e5810000 	str	r0, [r1]
4000eb70:	e3520000 	cmp	r2, #0
4000eb74:	0a000001 	beq	4000eb80 <_tx_thread_info_get+0x11c>
4000eb78:	e59c0030 	ldr	r0, [ip, #48]	; 0x30
4000eb7c:	e5820000 	str	r0, [r2]
4000eb80:	e3530000 	cmp	r3, #0
4000eb84:	0a000001 	beq	4000eb90 <_tx_thread_info_get+0x12c>
4000eb88:	e59c0004 	ldr	r0, [ip, #4]
4000eb8c:	e5830000 	str	r0, [r3]
4000eb90:	e35e0000 	cmp	lr, #0
4000eb94:	0a000001 	beq	4000eba0 <_tx_thread_info_get+0x13c>
4000eb98:	e59c002c 	ldr	r0, [ip, #44]	; 0x2c
4000eb9c:	e58e0000 	str	r0, [lr]
4000eba0:	e3540000 	cmp	r4, #0
4000eba4:	0a000001 	beq	4000ebb0 <_tx_thread_info_get+0x14c>
4000eba8:	e59c003c 	ldr	r0, [ip, #60]	; 0x3c
4000ebac:	e5840000 	str	r0, [r4]
4000ebb0:	e3550000 	cmp	r5, #0
4000ebb4:	0a000001 	beq	4000ebc0 <_tx_thread_info_get+0x15c>
4000ebb8:	e59c0018 	ldr	r0, [ip, #24]
4000ebbc:	e5850000 	str	r0, [r5]
4000ebc0:	e3560000 	cmp	r6, #0
4000ebc4:	0a000001 	beq	4000ebd0 <_tx_thread_info_get+0x16c>
4000ebc8:	e59c0088 	ldr	r0, [ip, #136]	; 0x88
4000ebcc:	e5860000 	str	r0, [r6]
4000ebd0:	e3570000 	cmp	r7, #0
4000ebd4:	0a000001 	beq	4000ebe0 <_tx_thread_info_get+0x17c>
4000ebd8:	e59c0070 	ldr	r0, [ip, #112]	; 0x70
4000ebdc:	e5870000 	str	r0, [r7]
4000ebe0:	e121f008 	msr	CPSR_c, r8
4000ebe4:	e3a00000 	mov	r0, #0
4000ebe8:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000ebec:	40030ea0 	.word	0x40030ea0
4000ebf0:	40030ea4 	.word	0x40030ea4
4000ebf4:	40030e2c 	.word	0x40030e2c
4000ebf8:	40030e34 	.word	0x40030e34
4000ebfc:	f0f0f0f0 	.word	0xf0f0f0f0
4000ec00:	40030e9c 	.word	0x40030e9c
4000ec04:	40030e98 	.word	0x40030e98
4000ec08:	40030e8c 	.word	0x40030e8c

4000ec0c <_tx_thread_priority_change>:
4000ec0c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000ec10:	e1a04000 	mov	r4, r0
4000ec14:	e1a05001 	mov	r5, r1
4000ec18:	e1a06002 	mov	r6, r2
4000ec1c:	e10f7000 	mrs	r7, CPSR
4000ec20:	e3878080 	orr	r8, r7, #128	; 0x80
4000ec24:	e121f008 	msr	CPSR_c, r8
4000ec28:	e5940094 	ldr	r0, [r4, #148]	; 0x94
4000ec2c:	e5860000 	str	r0, [r6]
4000ec30:	e59f1150 	ldr	r1, [pc, #336]	; 4000ed88 <_tx_thread_priority_change+0x17c>
4000ec34:	e5910000 	ldr	r0, [r1]
4000ec38:	e3500000 	cmp	r0, #0
4000ec3c:	0a000032 	beq	4000ed0c <_tx_thread_priority_change+0x100>
4000ec40:	e59f1144 	ldr	r1, [pc, #324]	; 4000ed8c <_tx_thread_priority_change+0x180>
4000ec44:	e5911000 	ldr	r1, [r1]
4000ec48:	e2811001 	add	r1, r1, #1
4000ec4c:	e59f2138 	ldr	r2, [pc, #312]	; 4000ed8c <_tx_thread_priority_change+0x180>
4000ec50:	e5821000 	str	r1, [r2]
4000ec54:	e580100c 	str	r1, [r0, #12]
4000ec58:	e59f1130 	ldr	r1, [pc, #304]	; 4000ed90 <_tx_thread_priority_change+0x184>
4000ec5c:	e5911000 	ldr	r1, [r1]
4000ec60:	e3510000 	cmp	r1, #0
4000ec64:	1a000006 	bne	4000ec84 <_tx_thread_priority_change+0x78>
4000ec68:	e59f1124 	ldr	r1, [pc, #292]	; 4000ed94 <_tx_thread_priority_change+0x188>
4000ec6c:	e5911000 	ldr	r1, [r1]
4000ec70:	e5801000 	str	r1, [r0]
4000ec74:	e5901000 	ldr	r1, [r0]
4000ec78:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ec7c:	e5801004 	str	r1, [r0, #4]
4000ec80:	ea00000d 	b	4000ecbc <_tx_thread_priority_change+0xb0>
4000ec84:	e59f1104 	ldr	r1, [pc, #260]	; 4000ed90 <_tx_thread_priority_change+0x184>
4000ec88:	e5911000 	ldr	r1, [r1]
4000ec8c:	e59f2104 	ldr	r2, [pc, #260]	; 4000ed98 <_tx_thread_priority_change+0x18c>
4000ec90:	e1510002 	cmp	r1, r2
4000ec94:	2a000004 	bcs	4000ecac <_tx_thread_priority_change+0xa0>
4000ec98:	e3e01000 	mvn	r1, #0
4000ec9c:	e5801000 	str	r1, [r0]
4000eca0:	e3a01000 	mov	r1, #0
4000eca4:	e5801004 	str	r1, [r0, #4]
4000eca8:	ea000003 	b	4000ecbc <_tx_thread_priority_change+0xb0>
4000ecac:	e59f10e4 	ldr	r1, [pc, #228]	; 4000ed98 <_tx_thread_priority_change+0x18c>
4000ecb0:	e5801000 	str	r1, [r0]
4000ecb4:	e3a01000 	mov	r1, #0
4000ecb8:	e5801004 	str	r1, [r0, #4]
4000ecbc:	e3a0106c 	mov	r1, #108	; 0x6c
4000ecc0:	e5801008 	str	r1, [r0, #8]
4000ecc4:	e5804010 	str	r4, [r0, #16]
4000ecc8:	e5805014 	str	r5, [r0, #20]
4000eccc:	e594102c 	ldr	r1, [r4, #44]	; 0x2c
4000ecd0:	e5801018 	str	r1, [r0, #24]
4000ecd4:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000ecd8:	e580101c 	str	r1, [r0, #28]
4000ecdc:	e2800020 	add	r0, r0, #32
4000ece0:	e59f10b4 	ldr	r1, [pc, #180]	; 4000ed9c <_tx_thread_priority_change+0x190>
4000ece4:	e5911000 	ldr	r1, [r1]
4000ece8:	e1500001 	cmp	r0, r1
4000ecec:	3a000001 	bcc	4000ecf8 <_tx_thread_priority_change+0xec>
4000ecf0:	e59f10a8 	ldr	r1, [pc, #168]	; 4000eda0 <_tx_thread_priority_change+0x194>
4000ecf4:	e5910000 	ldr	r0, [r1]
4000ecf8:	e59f1088 	ldr	r1, [pc, #136]	; 4000ed88 <_tx_thread_priority_change+0x17c>
4000ecfc:	e5810000 	str	r0, [r1]
4000ed00:	e59f109c 	ldr	r1, [pc, #156]	; 4000eda4 <_tx_thread_priority_change+0x198>
4000ed04:	e5911000 	ldr	r1, [r1]
4000ed08:	e5810020 	str	r0, [r1, #32]
4000ed0c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000ed10:	e3500000 	cmp	r0, #0
4000ed14:	0a000005 	beq	4000ed30 <_tx_thread_priority_change+0x124>
4000ed18:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ed1c:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ed20:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ed24:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ed28:	e121f007 	msr	CPSR_c, r7
4000ed2c:	ea000013 	b	4000ed80 <_tx_thread_priority_change+0x174>
4000ed30:	e59f0070 	ldr	r0, [pc, #112]	; 4000eda8 <_tx_thread_priority_change+0x19c>
4000ed34:	e5900000 	ldr	r0, [r0]
4000ed38:	e2800002 	add	r0, r0, #2
4000ed3c:	e59f1064 	ldr	r1, [pc, #100]	; 4000eda8 <_tx_thread_priority_change+0x19c>
4000ed40:	e5810000 	str	r0, [r1]
4000ed44:	e3a00003 	mov	r0, #3
4000ed48:	e5840030 	str	r0, [r4, #48]	; 0x30
4000ed4c:	e3a00001 	mov	r0, #1
4000ed50:	e5840038 	str	r0, [r4, #56]	; 0x38
4000ed54:	e3a00000 	mov	r0, #0
4000ed58:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000ed5c:	e121f007 	msr	CPSR_c, r7
4000ed60:	e1a00004 	mov	r0, r4
4000ed64:	ebffe834 	bl	40008e3c <_tx_thread_system_suspend>
4000ed68:	e584502c 	str	r5, [r4, #44]	; 0x2c
4000ed6c:	e584503c 	str	r5, [r4, #60]	; 0x3c
4000ed70:	e5845094 	str	r5, [r4, #148]	; 0x94
4000ed74:	e5845098 	str	r5, [r4, #152]	; 0x98
4000ed78:	e1a00004 	mov	r0, r4
4000ed7c:	eb0001d5 	bl	4000f4d8 <_tx_thread_system_resume>
4000ed80:	e3a00000 	mov	r0, #0
4000ed84:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000ed88:	40030ea0 	.word	0x40030ea0
4000ed8c:	40030ea4 	.word	0x40030ea4
4000ed90:	40030e2c 	.word	0x40030e2c
4000ed94:	40030e34 	.word	0x40030e34
4000ed98:	f0f0f0f0 	.word	0xf0f0f0f0
4000ed9c:	40030e9c 	.word	0x40030e9c
4000eda0:	40030e98 	.word	0x40030e98
4000eda4:	40030e8c 	.word	0x40030e8c
4000eda8:	40030e50 	.word	0x40030e50

4000edac <_tx_thread_relinquish>:
4000edac:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
4000edb0:	e59f02b0 	ldr	r0, [pc, #688]	; 4000f068 <_tx_thread_relinquish+0x2bc>
4000edb4:	e5900000 	ldr	r0, [r0]
4000edb8:	e58d0000 	str	r0, [sp]
4000edbc:	e59d0000 	ldr	r0, [sp]
4000edc0:	e5900008 	ldr	r0, [r0, #8]
4000edc4:	e59d1000 	ldr	r1, [sp]
4000edc8:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000edcc:	e1500001 	cmp	r0, r1
4000edd0:	2a000003 	bcs	4000ede4 <_tx_thread_relinquish+0x38>
4000edd4:	e59d0000 	ldr	r0, [sp]
4000edd8:	e5900008 	ldr	r0, [r0, #8]
4000eddc:	e59d1000 	ldr	r1, [sp]
4000ede0:	e5810040 	str	r0, [r1, #64]	; 0x40
4000ede4:	e59d0000 	ldr	r0, [sp]
4000ede8:	e590000c 	ldr	r0, [r0, #12]
4000edec:	e5900000 	ldr	r0, [r0]
4000edf0:	e59f1274 	ldr	r1, [pc, #628]	; 4000f06c <_tx_thread_relinquish+0x2c0>
4000edf4:	e1500001 	cmp	r0, r1
4000edf8:	1a00000a 	bne	4000ee28 <_tx_thread_relinquish+0x7c>
4000edfc:	e59d0000 	ldr	r0, [sp]
4000ee00:	e5900010 	ldr	r0, [r0, #16]
4000ee04:	e5900001 	ldr	r0, [r0, #1]
4000ee08:	e1500001 	cmp	r0, r1
4000ee0c:	1a000005 	bne	4000ee28 <_tx_thread_relinquish+0x7c>
4000ee10:	e59d0000 	ldr	r0, [sp]
4000ee14:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee18:	e59d1000 	ldr	r1, [sp]
4000ee1c:	e591100c 	ldr	r1, [r1, #12]
4000ee20:	e1500001 	cmp	r0, r1
4000ee24:	2a000001 	bcs	4000ee30 <_tx_thread_relinquish+0x84>
4000ee28:	e59d0000 	ldr	r0, [sp]
4000ee2c:	eb00016a 	bl	4000f3dc <_tx_thread_stack_error_handler>
4000ee30:	e59d0000 	ldr	r0, [sp]
4000ee34:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000ee38:	e5100004 	ldr	r0, [r0, #-4]
4000ee3c:	e59f1228 	ldr	r1, [pc, #552]	; 4000f06c <_tx_thread_relinquish+0x2c0>
4000ee40:	e1500001 	cmp	r0, r1
4000ee44:	0a000001 	beq	4000ee50 <_tx_thread_relinquish+0xa4>
4000ee48:	e59d0000 	ldr	r0, [sp]
4000ee4c:	eb00012d 	bl	4000f308 <_tx_thread_stack_analyze>
4000ee50:	e10f4000 	mrs	r4, CPSR
4000ee54:	e3845080 	orr	r5, r4, #128	; 0x80
4000ee58:	e121f005 	msr	CPSR_c, r5
4000ee5c:	e59f120c 	ldr	r1, [pc, #524]	; 4000f070 <_tx_thread_relinquish+0x2c4>
4000ee60:	e5910000 	ldr	r0, [r1]
4000ee64:	e3500000 	cmp	r0, #0
4000ee68:	0a000031 	beq	4000ef34 <_tx_thread_relinquish+0x188>
4000ee6c:	e59f1200 	ldr	r1, [pc, #512]	; 4000f074 <_tx_thread_relinquish+0x2c8>
4000ee70:	e5911000 	ldr	r1, [r1]
4000ee74:	e2811001 	add	r1, r1, #1
4000ee78:	e59f21f4 	ldr	r2, [pc, #500]	; 4000f074 <_tx_thread_relinquish+0x2c8>
4000ee7c:	e5821000 	str	r1, [r2]
4000ee80:	e580100c 	str	r1, [r0, #12]
4000ee84:	e59f11ec 	ldr	r1, [pc, #492]	; 4000f078 <_tx_thread_relinquish+0x2cc>
4000ee88:	e5911000 	ldr	r1, [r1]
4000ee8c:	e3510000 	cmp	r1, #0
4000ee90:	1a000006 	bne	4000eeb0 <_tx_thread_relinquish+0x104>
4000ee94:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f068 <_tx_thread_relinquish+0x2bc>
4000ee98:	e5911000 	ldr	r1, [r1]
4000ee9c:	e5801000 	str	r1, [r0]
4000eea0:	e5901000 	ldr	r1, [r0]
4000eea4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000eea8:	e5801004 	str	r1, [r0, #4]
4000eeac:	ea00000d 	b	4000eee8 <_tx_thread_relinquish+0x13c>
4000eeb0:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f078 <_tx_thread_relinquish+0x2cc>
4000eeb4:	e5911000 	ldr	r1, [r1]
4000eeb8:	e59f21bc 	ldr	r2, [pc, #444]	; 4000f07c <_tx_thread_relinquish+0x2d0>
4000eebc:	e1510002 	cmp	r1, r2
4000eec0:	2a000004 	bcs	4000eed8 <_tx_thread_relinquish+0x12c>
4000eec4:	e3e01000 	mvn	r1, #0
4000eec8:	e5801000 	str	r1, [r0]
4000eecc:	e3a01000 	mov	r1, #0
4000eed0:	e5801004 	str	r1, [r0, #4]
4000eed4:	ea000003 	b	4000eee8 <_tx_thread_relinquish+0x13c>
4000eed8:	e59f119c 	ldr	r1, [pc, #412]	; 4000f07c <_tx_thread_relinquish+0x2d0>
4000eedc:	e5801000 	str	r1, [r0]
4000eee0:	e3a01000 	mov	r1, #0
4000eee4:	e5801004 	str	r1, [r0, #4]
4000eee8:	e3a0106d 	mov	r1, #109	; 0x6d
4000eeec:	e5801008 	str	r1, [r0, #8]
4000eef0:	e580d010 	str	sp, [r0, #16]
4000eef4:	e3a01000 	mov	r1, #0
4000eef8:	e5801014 	str	r1, [r0, #20]
4000eefc:	e5801018 	str	r1, [r0, #24]
4000ef00:	e580101c 	str	r1, [r0, #28]
4000ef04:	e2800020 	add	r0, r0, #32
4000ef08:	e59f1170 	ldr	r1, [pc, #368]	; 4000f080 <_tx_thread_relinquish+0x2d4>
4000ef0c:	e5911000 	ldr	r1, [r1]
4000ef10:	e1500001 	cmp	r0, r1
4000ef14:	3a000001 	bcc	4000ef20 <_tx_thread_relinquish+0x174>
4000ef18:	e59f1164 	ldr	r1, [pc, #356]	; 4000f084 <_tx_thread_relinquish+0x2d8>
4000ef1c:	e5910000 	ldr	r0, [r1]
4000ef20:	e59f1148 	ldr	r1, [pc, #328]	; 4000f070 <_tx_thread_relinquish+0x2c4>
4000ef24:	e5810000 	str	r0, [r1]
4000ef28:	e59f1158 	ldr	r1, [pc, #344]	; 4000f088 <_tx_thread_relinquish+0x2dc>
4000ef2c:	e5911000 	ldr	r1, [r1]
4000ef30:	e5810020 	str	r0, [r1, #32]
4000ef34:	e59d0000 	ldr	r0, [sp]
4000ef38:	e590602c 	ldr	r6, [r0, #44]	; 0x2c
4000ef3c:	e59d0000 	ldr	r0, [sp]
4000ef40:	e5900020 	ldr	r0, [r0, #32]
4000ef44:	e59d1000 	ldr	r1, [sp]
4000ef48:	e1500001 	cmp	r0, r1
4000ef4c:	0a000013 	beq	4000efa0 <_tx_thread_relinquish+0x1f4>
4000ef50:	e59d0000 	ldr	r0, [sp]
4000ef54:	e5900020 	ldr	r0, [r0, #32]
4000ef58:	e59f112c 	ldr	r1, [pc, #300]	; 4000f08c <_tx_thread_relinquish+0x2e0>
4000ef5c:	e7810106 	str	r0, [r1, r6, lsl #2]
4000ef60:	e59d0000 	ldr	r0, [sp]
4000ef64:	e5900020 	ldr	r0, [r0, #32]
4000ef68:	e59f1120 	ldr	r1, [pc, #288]	; 4000f090 <_tx_thread_relinquish+0x2e4>
4000ef6c:	e5810000 	str	r0, [r1]
4000ef70:	e59f011c 	ldr	r0, [pc, #284]	; 4000f094 <_tx_thread_relinquish+0x2e8>
4000ef74:	e5900000 	ldr	r0, [r0]
4000ef78:	e3500000 	cmp	r0, #0
4000ef7c:	0a000007 	beq	4000efa0 <_tx_thread_relinquish+0x1f4>
4000ef80:	e59f010c 	ldr	r0, [pc, #268]	; 4000f094 <_tx_thread_relinquish+0x2e8>
4000ef84:	e5900000 	ldr	r0, [r0]
4000ef88:	e59d1000 	ldr	r1, [sp]
4000ef8c:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000ef90:	e3a02001 	mov	r2, #1
4000ef94:	e1c00112 	bic	r0, r0, r2, lsl r1
4000ef98:	e59f10f4 	ldr	r1, [pc, #244]	; 4000f094 <_tx_thread_relinquish+0x2e8>
4000ef9c:	e5810000 	str	r0, [r1]
4000efa0:	e59f00f0 	ldr	r0, [pc, #240]	; 4000f098 <_tx_thread_relinquish+0x2ec>
4000efa4:	e5900000 	ldr	r0, [r0]
4000efa8:	e1500006 	cmp	r0, r6
4000efac:	2a000005 	bcs	4000efc8 <_tx_thread_relinquish+0x21c>
4000efb0:	e59f00d4 	ldr	r0, [pc, #212]	; 4000f08c <_tx_thread_relinquish+0x2e0>
4000efb4:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f098 <_tx_thread_relinquish+0x2ec>
4000efb8:	e5911000 	ldr	r1, [r1]
4000efbc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000efc0:	e59f10c8 	ldr	r1, [pc, #200]	; 4000f090 <_tx_thread_relinquish+0x2e4>
4000efc4:	e5810000 	str	r0, [r1]
4000efc8:	e121f004 	msr	CPSR_c, r4
4000efcc:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f090 <_tx_thread_relinquish+0x2e4>
4000efd0:	e5900000 	ldr	r0, [r0]
4000efd4:	e59d1000 	ldr	r1, [sp]
4000efd8:	e1500001 	cmp	r0, r1
4000efdc:	0a000020 	beq	4000f064 <_tx_thread_relinquish+0x2b8>
4000efe0:	e59f00a8 	ldr	r0, [pc, #168]	; 4000f090 <_tx_thread_relinquish+0x2e4>
4000efe4:	e5900000 	ldr	r0, [r0]
4000efe8:	e58d0000 	str	r0, [sp]
4000efec:	e59d0000 	ldr	r0, [sp]
4000eff0:	e5900008 	ldr	r0, [r0, #8]
4000eff4:	e59d1000 	ldr	r1, [sp]
4000eff8:	e5911040 	ldr	r1, [r1, #64]	; 0x40
4000effc:	e1500001 	cmp	r0, r1
4000f000:	2a000003 	bcs	4000f014 <_tx_thread_relinquish+0x268>
4000f004:	e59d0000 	ldr	r0, [sp]
4000f008:	e5900008 	ldr	r0, [r0, #8]
4000f00c:	e59d1000 	ldr	r1, [sp]
4000f010:	e5810040 	str	r0, [r1, #64]	; 0x40
4000f014:	e59d0000 	ldr	r0, [sp]
4000f018:	e590000c 	ldr	r0, [r0, #12]
4000f01c:	e5900000 	ldr	r0, [r0]
4000f020:	e59f1044 	ldr	r1, [pc, #68]	; 4000f06c <_tx_thread_relinquish+0x2c0>
4000f024:	e1500001 	cmp	r0, r1
4000f028:	1a00000a 	bne	4000f058 <_tx_thread_relinquish+0x2ac>
4000f02c:	e59d0000 	ldr	r0, [sp]
4000f030:	e5900010 	ldr	r0, [r0, #16]
4000f034:	e5900001 	ldr	r0, [r0, #1]
4000f038:	e1500001 	cmp	r0, r1
4000f03c:	1a000005 	bne	4000f058 <_tx_thread_relinquish+0x2ac>
4000f040:	e59d0000 	ldr	r0, [sp]
4000f044:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4000f048:	e59d1000 	ldr	r1, [sp]
4000f04c:	e591100c 	ldr	r1, [r1, #12]
4000f050:	e1500001 	cmp	r0, r1
4000f054:	2a000001 	bcs	4000f060 <_tx_thread_relinquish+0x2b4>
4000f058:	e59d0000 	ldr	r0, [sp]
4000f05c:	eb0000de 	bl	4000f3dc <_tx_thread_stack_error_handler>
4000f060:	ebffef86 	bl	4000ae80 <_tx_thread_system_return>
4000f064:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
4000f068:	40030e34 	.word	0x40030e34
4000f06c:	efefefef 	.word	0xefefefef
4000f070:	40030ea0 	.word	0x40030ea0
4000f074:	40030ea4 	.word	0x40030ea4
4000f078:	40030e2c 	.word	0x40030e2c
4000f07c:	f0f0f0f0 	.word	0xf0f0f0f0
4000f080:	40030e9c 	.word	0x40030e9c
4000f084:	40030e98 	.word	0x40030e98
4000f088:	40030e8c 	.word	0x40030e8c
4000f08c:	40032874 	.word	0x40032874
4000f090:	40030e38 	.word	0x40030e38
4000f094:	40030e48 	.word	0x40030e48
4000f098:	40030e4c 	.word	0x40030e4c

4000f09c <_tx_thread_resume>:
4000f09c:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f0a0:	e1a04000 	mov	r4, r0
4000f0a4:	e3a00000 	mov	r0, #0
4000f0a8:	e58d0000 	str	r0, [sp]
4000f0ac:	e10f5000 	mrs	r5, CPSR
4000f0b0:	e3856080 	orr	r6, r5, #128	; 0x80
4000f0b4:	e121f006 	msr	CPSR_c, r6
4000f0b8:	e59f1184 	ldr	r1, [pc, #388]	; 4000f244 <_tx_thread_resume+0x1a8>
4000f0bc:	e5910000 	ldr	r0, [r1]
4000f0c0:	e3500000 	cmp	r0, #0
4000f0c4:	0a000032 	beq	4000f194 <_tx_thread_resume+0xf8>
4000f0c8:	e59f1178 	ldr	r1, [pc, #376]	; 4000f248 <_tx_thread_resume+0x1ac>
4000f0cc:	e5911000 	ldr	r1, [r1]
4000f0d0:	e2811001 	add	r1, r1, #1
4000f0d4:	e59f216c 	ldr	r2, [pc, #364]	; 4000f248 <_tx_thread_resume+0x1ac>
4000f0d8:	e5821000 	str	r1, [r2]
4000f0dc:	e580100c 	str	r1, [r0, #12]
4000f0e0:	e59f1164 	ldr	r1, [pc, #356]	; 4000f24c <_tx_thread_resume+0x1b0>
4000f0e4:	e5911000 	ldr	r1, [r1]
4000f0e8:	e3510000 	cmp	r1, #0
4000f0ec:	1a000006 	bne	4000f10c <_tx_thread_resume+0x70>
4000f0f0:	e59f1158 	ldr	r1, [pc, #344]	; 4000f250 <_tx_thread_resume+0x1b4>
4000f0f4:	e5911000 	ldr	r1, [r1]
4000f0f8:	e5801000 	str	r1, [r0]
4000f0fc:	e5901000 	ldr	r1, [r0]
4000f100:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f104:	e5801004 	str	r1, [r0, #4]
4000f108:	ea00000d 	b	4000f144 <_tx_thread_resume+0xa8>
4000f10c:	e59f1138 	ldr	r1, [pc, #312]	; 4000f24c <_tx_thread_resume+0x1b0>
4000f110:	e5911000 	ldr	r1, [r1]
4000f114:	e59f2138 	ldr	r2, [pc, #312]	; 4000f254 <_tx_thread_resume+0x1b8>
4000f118:	e1510002 	cmp	r1, r2
4000f11c:	2a000004 	bcs	4000f134 <_tx_thread_resume+0x98>
4000f120:	e3e01000 	mvn	r1, #0
4000f124:	e5801000 	str	r1, [r0]
4000f128:	e3a01000 	mov	r1, #0
4000f12c:	e5801004 	str	r1, [r0, #4]
4000f130:	ea000003 	b	4000f144 <_tx_thread_resume+0xa8>
4000f134:	e59f1118 	ldr	r1, [pc, #280]	; 4000f254 <_tx_thread_resume+0x1b8>
4000f138:	e5801000 	str	r1, [r0]
4000f13c:	e3a01000 	mov	r1, #0
4000f140:	e5801004 	str	r1, [r0, #4]
4000f144:	e3a0106f 	mov	r1, #111	; 0x6f
4000f148:	e5801008 	str	r1, [r0, #8]
4000f14c:	e5804010 	str	r4, [r0, #16]
4000f150:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f154:	e5801014 	str	r1, [r0, #20]
4000f158:	e580d018 	str	sp, [r0, #24]
4000f15c:	e3a01000 	mov	r1, #0
4000f160:	e580101c 	str	r1, [r0, #28]
4000f164:	e2800020 	add	r0, r0, #32
4000f168:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f258 <_tx_thread_resume+0x1bc>
4000f16c:	e5911000 	ldr	r1, [r1]
4000f170:	e1500001 	cmp	r0, r1
4000f174:	3a000001 	bcc	4000f180 <_tx_thread_resume+0xe4>
4000f178:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f25c <_tx_thread_resume+0x1c0>
4000f17c:	e5910000 	ldr	r0, [r1]
4000f180:	e59f10bc 	ldr	r1, [pc, #188]	; 4000f244 <_tx_thread_resume+0x1a8>
4000f184:	e5810000 	str	r0, [r1]
4000f188:	e59f10d0 	ldr	r1, [pc, #208]	; 4000f260 <_tx_thread_resume+0x1c4>
4000f18c:	e5911000 	ldr	r1, [r1]
4000f190:	e5810020 	str	r0, [r1, #32]
4000f194:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f198:	e3500003 	cmp	r0, #3
4000f19c:	1a00001c 	bne	4000f214 <_tx_thread_resume+0x178>
4000f1a0:	e59f00bc 	ldr	r0, [pc, #188]	; 4000f264 <_tx_thread_resume+0x1c8>
4000f1a4:	e5900000 	ldr	r0, [r0]
4000f1a8:	e2800001 	add	r0, r0, #1
4000f1ac:	e59f10b0 	ldr	r1, [pc, #176]	; 4000f264 <_tx_thread_resume+0x1c8>
4000f1b0:	e5810000 	str	r0, [r1]
4000f1b4:	e121f005 	msr	CPSR_c, r5
4000f1b8:	e59f008c 	ldr	r0, [pc, #140]	; 4000f24c <_tx_thread_resume+0x1b0>
4000f1bc:	e5900000 	ldr	r0, [r0]
4000f1c0:	e59f108c 	ldr	r1, [pc, #140]	; 4000f254 <_tx_thread_resume+0x1b8>
4000f1c4:	e1500001 	cmp	r0, r1
4000f1c8:	3a000008 	bcc	4000f1f0 <_tx_thread_resume+0x154>
4000f1cc:	e59f0094 	ldr	r0, [pc, #148]	; 4000f268 <_tx_thread_resume+0x1cc>
4000f1d0:	e5907000 	ldr	r7, [r0]
4000f1d4:	e3570000 	cmp	r7, #0
4000f1d8:	0a000005 	beq	4000f1f4 <_tx_thread_resume+0x158>
4000f1dc:	e597003c 	ldr	r0, [r7, #60]	; 0x3c
4000f1e0:	e58d0000 	str	r0, [sp]
4000f1e4:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4000f1e8:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f1ec:	ea000000 	b	4000f1f4 <_tx_thread_resume+0x158>
4000f1f0:	e3a07000 	mov	r7, #0
4000f1f4:	e1a00004 	mov	r0, r4
4000f1f8:	eb0000b6 	bl	4000f4d8 <_tx_thread_system_resume>
4000f1fc:	e3570000 	cmp	r7, #0
4000f200:	0a000001 	beq	4000f20c <_tx_thread_resume+0x170>
4000f204:	e59d0000 	ldr	r0, [sp]
4000f208:	e587003c 	str	r0, [r7, #60]	; 0x3c
4000f20c:	e3a08000 	mov	r8, #0
4000f210:	ea000009 	b	4000f23c <_tx_thread_resume+0x1a0>
4000f214:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f218:	e3500000 	cmp	r0, #0
4000f21c:	0a000004 	beq	4000f234 <_tx_thread_resume+0x198>
4000f220:	e3a00000 	mov	r0, #0
4000f224:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f228:	e121f005 	msr	CPSR_c, r5
4000f22c:	e3a08019 	mov	r8, #25
4000f230:	ea000001 	b	4000f23c <_tx_thread_resume+0x1a0>
4000f234:	e121f005 	msr	CPSR_c, r5
4000f238:	e3a08012 	mov	r8, #18
4000f23c:	e1a00008 	mov	r0, r8
4000f240:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f244:	40030ea0 	.word	0x40030ea0
4000f248:	40030ea4 	.word	0x40030ea4
4000f24c:	40030e2c 	.word	0x40030e2c
4000f250:	40030e34 	.word	0x40030e34
4000f254:	f0f0f0f0 	.word	0xf0f0f0f0
4000f258:	40030e9c 	.word	0x40030e9c
4000f25c:	40030e98 	.word	0x40030e98
4000f260:	40030e8c 	.word	0x40030e8c
4000f264:	40030e50 	.word	0x40030e50
4000f268:	40030e38 	.word	0x40030e38

4000f26c <_tx_thread_shell_entry>:
4000f26c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000f270:	e59f0088 	ldr	r0, [pc, #136]	; 4000f300 <_tx_thread_shell_entry+0x94>
4000f274:	e5907000 	ldr	r7, [r0]
4000f278:	e10f4000 	mrs	r4, CPSR
4000f27c:	e3845080 	orr	r5, r4, #128	; 0x80
4000f280:	e121f005 	msr	CPSR_c, r5
4000f284:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f288:	e121f004 	msr	CPSR_c, r4
4000f28c:	e3560000 	cmp	r6, #0
4000f290:	0a000002 	beq	4000f2a0 <_tx_thread_shell_entry+0x34>
4000f294:	e3a01000 	mov	r1, #0
4000f298:	e1a00007 	mov	r0, r7
4000f29c:	e12fff36 	blx	r6
4000f2a0:	e5970048 	ldr	r0, [r7, #72]	; 0x48
4000f2a4:	e5971044 	ldr	r1, [r7, #68]	; 0x44
4000f2a8:	e12fff31 	blx	r1
4000f2ac:	e10f4000 	mrs	r4, CPSR
4000f2b0:	e3845080 	orr	r5, r4, #128	; 0x80
4000f2b4:	e121f005 	msr	CPSR_c, r5
4000f2b8:	e59760a4 	ldr	r6, [r7, #164]	; 0xa4
4000f2bc:	e3a00001 	mov	r0, #1
4000f2c0:	e5870030 	str	r0, [r7, #48]	; 0x30
4000f2c4:	e5870038 	str	r0, [r7, #56]	; 0x38
4000f2c8:	e59f0034 	ldr	r0, [pc, #52]	; 4000f304 <_tx_thread_shell_entry+0x98>
4000f2cc:	e5900000 	ldr	r0, [r0]
4000f2d0:	e2800001 	add	r0, r0, #1
4000f2d4:	e59f1028 	ldr	r1, [pc, #40]	; 4000f304 <_tx_thread_shell_entry+0x98>
4000f2d8:	e5810000 	str	r0, [r1]
4000f2dc:	e121f004 	msr	CPSR_c, r4
4000f2e0:	e3560000 	cmp	r6, #0
4000f2e4:	0a000002 	beq	4000f2f4 <_tx_thread_shell_entry+0x88>
4000f2e8:	e3a01001 	mov	r1, #1
4000f2ec:	e1a00007 	mov	r0, r7
4000f2f0:	e12fff36 	blx	r6
4000f2f4:	e1a00007 	mov	r0, r7
4000f2f8:	ebffe6cf 	bl	40008e3c <_tx_thread_system_suspend>
4000f2fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000f300:	40030e34 	.word	0x40030e34
4000f304:	40030e50 	.word	0x40030e50

4000f308 <_tx_thread_stack_analyze>:
4000f308:	e92d4070 	push	{r4, r5, r6, lr}
4000f30c:	e10f1000 	mrs	r1, CPSR
4000f310:	e3812080 	orr	r2, r1, #128	; 0x80
4000f314:	e121f002 	msr	CPSR_c, r2
4000f318:	e3500000 	cmp	r0, #0
4000f31c:	0a000003 	beq	4000f330 <_tx_thread_stack_analyze+0x28>
4000f320:	e5905000 	ldr	r5, [r0]
4000f324:	e59f60a8 	ldr	r6, [pc, #168]	; 4000f3d4 <_tx_thread_stack_analyze+0xcc>
4000f328:	e1550006 	cmp	r5, r6
4000f32c:	0a000001 	beq	4000f338 <_tx_thread_stack_analyze+0x30>
4000f330:	e121f001 	msr	CPSR_c, r1
4000f334:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f338:	e590c008 	ldr	ip, [r0, #8]
4000f33c:	e590300c 	ldr	r3, [r0, #12]
4000f340:	e590e040 	ldr	lr, [r0, #64]	; 0x40
4000f344:	e121f001 	msr	CPSR_c, r1
4000f348:	e24ec004 	sub	ip, lr, #4
4000f34c:	e04e6003 	sub	r6, lr, r3
4000f350:	e1a05146 	asr	r5, r6, #2
4000f354:	e0856fa5 	add	r6, r5, r5, lsr #31
4000f358:	e1a040c6 	asr	r4, r6, #1
4000f35c:	e083c104 	add	ip, r3, r4, lsl #2
4000f360:	e1a00000 	nop			; (mov r0, r0)
4000f364:	e59c5000 	ldr	r5, [ip]
4000f368:	e59f6068 	ldr	r6, [pc, #104]	; 4000f3d8 <_tx_thread_stack_analyze+0xd0>
4000f36c:	e1550006 	cmp	r5, r6
4000f370:	0a000002 	beq	4000f380 <_tx_thread_stack_analyze+0x78>
4000f374:	e1a050a4 	lsr	r5, r4, #1
4000f378:	e04cc105 	sub	ip, ip, r5, lsl #2
4000f37c:	ea000001 	b	4000f388 <_tx_thread_stack_analyze+0x80>
4000f380:	e1a050a4 	lsr	r5, r4, #1
4000f384:	e08cc105 	add	ip, ip, r5, lsl #2
4000f388:	e1a040a4 	lsr	r4, r4, #1
4000f38c:	e3540001 	cmp	r4, #1
4000f390:	8afffff3 	bhi	4000f364 <_tx_thread_stack_analyze+0x5c>
4000f394:	ea000000 	b	4000f39c <_tx_thread_stack_analyze+0x94>
4000f398:	e28cc004 	add	ip, ip, #4
4000f39c:	e59c5000 	ldr	r5, [ip]
4000f3a0:	e59f6030 	ldr	r6, [pc, #48]	; 4000f3d8 <_tx_thread_stack_analyze+0xd0>
4000f3a4:	e1550006 	cmp	r5, r6
4000f3a8:	0afffffa 	beq	4000f398 <_tx_thread_stack_analyze+0x90>
4000f3ac:	e10f1000 	mrs	r1, CPSR
4000f3b0:	e3812080 	orr	r2, r1, #128	; 0x80
4000f3b4:	e121f002 	msr	CPSR_c, r2
4000f3b8:	e5905000 	ldr	r5, [r0]
4000f3bc:	e59f6010 	ldr	r6, [pc, #16]	; 4000f3d4 <_tx_thread_stack_analyze+0xcc>
4000f3c0:	e1550006 	cmp	r5, r6
4000f3c4:	1a000000 	bne	4000f3cc <_tx_thread_stack_analyze+0xc4>
4000f3c8:	e580c040 	str	ip, [r0, #64]	; 0x40
4000f3cc:	e121f001 	msr	CPSR_c, r1
4000f3d0:	eaffffd7 	b	4000f334 <_tx_thread_stack_analyze+0x2c>
4000f3d4:	54485244 	.word	0x54485244
4000f3d8:	efefefef 	.word	0xefefefef

4000f3dc <_tx_thread_stack_error_handler>:
4000f3dc:	e92d4070 	push	{r4, r5, r6, lr}
4000f3e0:	e1a04000 	mov	r4, r0
4000f3e4:	e10f5000 	mrs	r5, CPSR
4000f3e8:	e3856080 	orr	r6, r5, #128	; 0x80
4000f3ec:	e121f006 	msr	CPSR_c, r6
4000f3f0:	e59f002c 	ldr	r0, [pc, #44]	; 4000f424 <_tx_thread_stack_error_handler+0x48>
4000f3f4:	e5900000 	ldr	r0, [r0]
4000f3f8:	e3500000 	cmp	r0, #0
4000f3fc:	0a000004 	beq	4000f414 <_tx_thread_stack_error_handler+0x38>
4000f400:	e1a00004 	mov	r0, r4
4000f404:	e59f1018 	ldr	r1, [pc, #24]	; 4000f424 <_tx_thread_stack_error_handler+0x48>
4000f408:	e5911000 	ldr	r1, [r1]
4000f40c:	e12fff31 	blx	r1
4000f410:	ea000001 	b	4000f41c <_tx_thread_stack_error_handler+0x40>
4000f414:	e1a00000 	nop			; (mov r0, r0)
4000f418:	eafffffe 	b	4000f418 <_tx_thread_stack_error_handler+0x3c>
4000f41c:	e121f005 	msr	CPSR_c, r5
4000f420:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f424:	40030e58 	.word	0x40030e58

4000f428 <_tx_thread_system_preempt_check>:
4000f428:	e92d4010 	push	{r4, lr}
4000f42c:	e59f0090 	ldr	r0, [pc, #144]	; 4000f4c4 <_tx_thread_system_preempt_check+0x9c>
4000f430:	e5900000 	ldr	r0, [r0]
4000f434:	e59f108c 	ldr	r1, [pc, #140]	; 4000f4c8 <_tx_thread_system_preempt_check+0xa0>
4000f438:	e5911000 	ldr	r1, [r1]
4000f43c:	e1500001 	cmp	r0, r1
4000f440:	0a00001e 	beq	4000f4c0 <_tx_thread_system_preempt_check+0x98>
4000f444:	e59f0080 	ldr	r0, [pc, #128]	; 4000f4cc <_tx_thread_system_preempt_check+0xa4>
4000f448:	e5900000 	ldr	r0, [r0]
4000f44c:	e59f107c 	ldr	r1, [pc, #124]	; 4000f4d0 <_tx_thread_system_preempt_check+0xa8>
4000f450:	e5911000 	ldr	r1, [r1]
4000f454:	e1900001 	orrs	r0, r0, r1
4000f458:	1a000018 	bne	4000f4c0 <_tx_thread_system_preempt_check+0x98>
4000f45c:	e59f0064 	ldr	r0, [pc, #100]	; 4000f4c8 <_tx_thread_system_preempt_check+0xa0>
4000f460:	e5904000 	ldr	r4, [r0]
4000f464:	e5940008 	ldr	r0, [r4, #8]
4000f468:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f46c:	e1500001 	cmp	r0, r1
4000f470:	2a000001 	bcs	4000f47c <_tx_thread_system_preempt_check+0x54>
4000f474:	e5940008 	ldr	r0, [r4, #8]
4000f478:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f47c:	e594000c 	ldr	r0, [r4, #12]
4000f480:	e5900000 	ldr	r0, [r0]
4000f484:	e59f1048 	ldr	r1, [pc, #72]	; 4000f4d4 <_tx_thread_system_preempt_check+0xac>
4000f488:	e1500001 	cmp	r0, r1
4000f48c:	1a000007 	bne	4000f4b0 <_tx_thread_system_preempt_check+0x88>
4000f490:	e5940010 	ldr	r0, [r4, #16]
4000f494:	e5900001 	ldr	r0, [r0, #1]
4000f498:	e1500001 	cmp	r0, r1
4000f49c:	1a000003 	bne	4000f4b0 <_tx_thread_system_preempt_check+0x88>
4000f4a0:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f4a4:	e594100c 	ldr	r1, [r4, #12]
4000f4a8:	e1500001 	cmp	r0, r1
4000f4ac:	2a000001 	bcs	4000f4b8 <_tx_thread_system_preempt_check+0x90>
4000f4b0:	e1a00004 	mov	r0, r4
4000f4b4:	ebffffc8 	bl	4000f3dc <_tx_thread_stack_error_handler>
4000f4b8:	ebffee70 	bl	4000ae80 <_tx_thread_system_return>
4000f4bc:	e1a00000 	nop			; (mov r0, r0)
4000f4c0:	e8bd8010 	pop	{r4, pc}
4000f4c4:	40030e34 	.word	0x40030e34
4000f4c8:	40030e38 	.word	0x40030e38
4000f4cc:	40030e2c 	.word	0x40030e2c
4000f4d0:	40030e50 	.word	0x40030e50
4000f4d4:	efefefef 	.word	0xefefefef

4000f4d8 <_tx_thread_system_resume>:
4000f4d8:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4000f4dc:	e1a04000 	mov	r4, r0
4000f4e0:	e5940064 	ldr	r0, [r4, #100]	; 0x64
4000f4e4:	e3500000 	cmp	r0, #0
4000f4e8:	0a000002 	beq	4000f4f8 <_tx_thread_system_resume+0x20>
4000f4ec:	e284004c 	add	r0, r4, #76	; 0x4c
4000f4f0:	eb000325 	bl	4001018c <_tx_timer_system_deactivate>
4000f4f4:	ea000001 	b	4000f500 <_tx_thread_system_resume+0x28>
4000f4f8:	e3a00000 	mov	r0, #0
4000f4fc:	e584004c 	str	r0, [r4, #76]	; 0x4c
4000f500:	e5940008 	ldr	r0, [r4, #8]
4000f504:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f508:	e1500001 	cmp	r0, r1
4000f50c:	2a000001 	bcs	4000f518 <_tx_thread_system_resume+0x40>
4000f510:	e5940008 	ldr	r0, [r4, #8]
4000f514:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f518:	e594000c 	ldr	r0, [r4, #12]
4000f51c:	e5900000 	ldr	r0, [r0]
4000f520:	e59f133c 	ldr	r1, [pc, #828]	; 4000f864 <_tx_thread_system_resume+0x38c>
4000f524:	e1500001 	cmp	r0, r1
4000f528:	1a000007 	bne	4000f54c <_tx_thread_system_resume+0x74>
4000f52c:	e5940010 	ldr	r0, [r4, #16]
4000f530:	e5900001 	ldr	r0, [r0, #1]
4000f534:	e1500001 	cmp	r0, r1
4000f538:	1a000003 	bne	4000f54c <_tx_thread_system_resume+0x74>
4000f53c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f540:	e594100c 	ldr	r1, [r4, #12]
4000f544:	e1500001 	cmp	r0, r1
4000f548:	2a000001 	bcs	4000f554 <_tx_thread_system_resume+0x7c>
4000f54c:	e1a00004 	mov	r0, r4
4000f550:	ebffffa1 	bl	4000f3dc <_tx_thread_stack_error_handler>
4000f554:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f558:	e5100004 	ldr	r0, [r0, #-4]
4000f55c:	e59f1300 	ldr	r1, [pc, #768]	; 4000f864 <_tx_thread_system_resume+0x38c>
4000f560:	e1500001 	cmp	r0, r1
4000f564:	0a000001 	beq	4000f570 <_tx_thread_system_resume+0x98>
4000f568:	e1a00004 	mov	r0, r4
4000f56c:	ebffff65 	bl	4000f308 <_tx_thread_stack_analyze>
4000f570:	e10f5000 	mrs	r5, CPSR
4000f574:	e3856080 	orr	r6, r5, #128	; 0x80
4000f578:	e121f006 	msr	CPSR_c, r6
4000f57c:	e59f02e4 	ldr	r0, [pc, #740]	; 4000f868 <_tx_thread_system_resume+0x390>
4000f580:	e5900000 	ldr	r0, [r0]
4000f584:	e2400001 	sub	r0, r0, #1
4000f588:	e59f12d8 	ldr	r1, [pc, #728]	; 4000f868 <_tx_thread_system_resume+0x390>
4000f58c:	e5810000 	str	r0, [r1]
4000f590:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4000f594:	e3500000 	cmp	r0, #0
4000f598:	0a000009 	beq	4000f5c4 <_tx_thread_system_resume+0xec>
4000f59c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f5a0:	e3500001 	cmp	r0, #1
4000f5a4:	0a000084 	beq	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f5a8:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f5ac:	e3500002 	cmp	r0, #2
4000f5b0:	0a000081 	beq	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f5b4:	e3a00000 	mov	r0, #0
4000f5b8:	e5840038 	str	r0, [r4, #56]	; 0x38
4000f5bc:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f5c0:	ea00007d 	b	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f5c4:	e5940030 	ldr	r0, [r4, #48]	; 0x30
4000f5c8:	e3500000 	cmp	r0, #0
4000f5cc:	0a00007a 	beq	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f5d0:	e5940034 	ldr	r0, [r4, #52]	; 0x34
4000f5d4:	e3500000 	cmp	r0, #0
4000f5d8:	0a000004 	beq	4000f5f0 <_tx_thread_system_resume+0x118>
4000f5dc:	e3a00000 	mov	r0, #0
4000f5e0:	e5840034 	str	r0, [r4, #52]	; 0x34
4000f5e4:	e3a00003 	mov	r0, #3
4000f5e8:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f5ec:	ea000072 	b	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f5f0:	e59f1274 	ldr	r1, [pc, #628]	; 4000f86c <_tx_thread_system_resume+0x394>
4000f5f4:	e5910000 	ldr	r0, [r1]
4000f5f8:	e3500000 	cmp	r0, #0
4000f5fc:	0a000032 	beq	4000f6cc <_tx_thread_system_resume+0x1f4>
4000f600:	e59f1268 	ldr	r1, [pc, #616]	; 4000f870 <_tx_thread_system_resume+0x398>
4000f604:	e5911000 	ldr	r1, [r1]
4000f608:	e2811001 	add	r1, r1, #1
4000f60c:	e59f225c 	ldr	r2, [pc, #604]	; 4000f870 <_tx_thread_system_resume+0x398>
4000f610:	e5821000 	str	r1, [r2]
4000f614:	e580100c 	str	r1, [r0, #12]
4000f618:	e59f1254 	ldr	r1, [pc, #596]	; 4000f874 <_tx_thread_system_resume+0x39c>
4000f61c:	e5911000 	ldr	r1, [r1]
4000f620:	e3510000 	cmp	r1, #0
4000f624:	1a000006 	bne	4000f644 <_tx_thread_system_resume+0x16c>
4000f628:	e59f1248 	ldr	r1, [pc, #584]	; 4000f878 <_tx_thread_system_resume+0x3a0>
4000f62c:	e5911000 	ldr	r1, [r1]
4000f630:	e5801000 	str	r1, [r0]
4000f634:	e5901000 	ldr	r1, [r0]
4000f638:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f63c:	e5801004 	str	r1, [r0, #4]
4000f640:	ea00000d 	b	4000f67c <_tx_thread_system_resume+0x1a4>
4000f644:	e59f1228 	ldr	r1, [pc, #552]	; 4000f874 <_tx_thread_system_resume+0x39c>
4000f648:	e5911000 	ldr	r1, [r1]
4000f64c:	e59f2228 	ldr	r2, [pc, #552]	; 4000f87c <_tx_thread_system_resume+0x3a4>
4000f650:	e1510002 	cmp	r1, r2
4000f654:	2a000004 	bcs	4000f66c <_tx_thread_system_resume+0x194>
4000f658:	e3e01000 	mvn	r1, #0
4000f65c:	e5801000 	str	r1, [r0]
4000f660:	e3a01000 	mov	r1, #0
4000f664:	e5801004 	str	r1, [r0, #4]
4000f668:	ea000003 	b	4000f67c <_tx_thread_system_resume+0x1a4>
4000f66c:	e59f1208 	ldr	r1, [pc, #520]	; 4000f87c <_tx_thread_system_resume+0x3a4>
4000f670:	e5801000 	str	r1, [r0]
4000f674:	e3a01000 	mov	r1, #0
4000f678:	e5801004 	str	r1, [r0, #4]
4000f67c:	e3a01001 	mov	r1, #1
4000f680:	e5801008 	str	r1, [r0, #8]
4000f684:	e5804010 	str	r4, [r0, #16]
4000f688:	e5941030 	ldr	r1, [r4, #48]	; 0x30
4000f68c:	e5801014 	str	r1, [r0, #20]
4000f690:	e580d018 	str	sp, [r0, #24]
4000f694:	e3a01000 	mov	r1, #0
4000f698:	e580101c 	str	r1, [r0, #28]
4000f69c:	e2800020 	add	r0, r0, #32
4000f6a0:	e59f11d8 	ldr	r1, [pc, #472]	; 4000f880 <_tx_thread_system_resume+0x3a8>
4000f6a4:	e5911000 	ldr	r1, [r1]
4000f6a8:	e1500001 	cmp	r0, r1
4000f6ac:	3a000001 	bcc	4000f6b8 <_tx_thread_system_resume+0x1e0>
4000f6b0:	e59f11cc 	ldr	r1, [pc, #460]	; 4000f884 <_tx_thread_system_resume+0x3ac>
4000f6b4:	e5910000 	ldr	r0, [r1]
4000f6b8:	e59f11ac 	ldr	r1, [pc, #428]	; 4000f86c <_tx_thread_system_resume+0x394>
4000f6bc:	e5810000 	str	r0, [r1]
4000f6c0:	e59f11c0 	ldr	r1, [pc, #448]	; 4000f888 <_tx_thread_system_resume+0x3b0>
4000f6c4:	e5911000 	ldr	r1, [r1]
4000f6c8:	e5810020 	str	r0, [r1, #32]
4000f6cc:	e3a00000 	mov	r0, #0
4000f6d0:	e5840030 	str	r0, [r4, #48]	; 0x30
4000f6d4:	e594702c 	ldr	r7, [r4, #44]	; 0x2c
4000f6d8:	e59f01ac 	ldr	r0, [pc, #428]	; 4000f88c <_tx_thread_system_resume+0x3b4>
4000f6dc:	e7908107 	ldr	r8, [r0, r7, lsl #2]
4000f6e0:	e3580000 	cmp	r8, #0
4000f6e4:	0a000005 	beq	4000f700 <_tx_thread_system_resume+0x228>
4000f6e8:	e5989024 	ldr	r9, [r8, #36]	; 0x24
4000f6ec:	e5894020 	str	r4, [r9, #32]
4000f6f0:	e5884024 	str	r4, [r8, #36]	; 0x24
4000f6f4:	e5849024 	str	r9, [r4, #36]	; 0x24
4000f6f8:	e5848020 	str	r8, [r4, #32]
4000f6fc:	ea00002e 	b	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f700:	e59f0184 	ldr	r0, [pc, #388]	; 4000f88c <_tx_thread_system_resume+0x3b4>
4000f704:	e7804107 	str	r4, [r0, r7, lsl #2]
4000f708:	e5844020 	str	r4, [r4, #32]
4000f70c:	e5844024 	str	r4, [r4, #36]	; 0x24
4000f710:	e59f0178 	ldr	r0, [pc, #376]	; 4000f890 <_tx_thread_system_resume+0x3b8>
4000f714:	e5900000 	ldr	r0, [r0]
4000f718:	e3a01001 	mov	r1, #1
4000f71c:	e1800711 	orr	r0, r0, r1, lsl r7
4000f720:	e59f1168 	ldr	r1, [pc, #360]	; 4000f890 <_tx_thread_system_resume+0x3b8>
4000f724:	e5810000 	str	r0, [r1]
4000f728:	e59f0164 	ldr	r0, [pc, #356]	; 4000f894 <_tx_thread_system_resume+0x3bc>
4000f72c:	e5900000 	ldr	r0, [r0]
4000f730:	e58d0000 	str	r0, [sp]
4000f734:	e59d0000 	ldr	r0, [sp]
4000f738:	e3500000 	cmp	r0, #0
4000f73c:	1a000004 	bne	4000f754 <_tx_thread_system_resume+0x27c>
4000f740:	e59f014c 	ldr	r0, [pc, #332]	; 4000f894 <_tx_thread_system_resume+0x3bc>
4000f744:	e5804000 	str	r4, [r0]
4000f748:	e59f0148 	ldr	r0, [pc, #328]	; 4000f898 <_tx_thread_system_resume+0x3c0>
4000f74c:	e5807000 	str	r7, [r0]
4000f750:	ea000019 	b	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f754:	e59f013c 	ldr	r0, [pc, #316]	; 4000f898 <_tx_thread_system_resume+0x3c0>
4000f758:	e5900000 	ldr	r0, [r0]
4000f75c:	e1570000 	cmp	r7, r0
4000f760:	2a000015 	bcs	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f764:	e59f012c 	ldr	r0, [pc, #300]	; 4000f898 <_tx_thread_system_resume+0x3c0>
4000f768:	e5807000 	str	r7, [r0]
4000f76c:	e59d0000 	ldr	r0, [sp]
4000f770:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f774:	e1500007 	cmp	r0, r7
4000f778:	9a00000f 	bls	4000f7bc <_tx_thread_system_resume+0x2e4>
4000f77c:	e59d0000 	ldr	r0, [sp]
4000f780:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4000f784:	e59d1000 	ldr	r1, [sp]
4000f788:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f78c:	e1500001 	cmp	r0, r1
4000f790:	0a000007 	beq	4000f7b4 <_tx_thread_system_resume+0x2dc>
4000f794:	e59f0100 	ldr	r0, [pc, #256]	; 4000f89c <_tx_thread_system_resume+0x3c4>
4000f798:	e5900000 	ldr	r0, [r0]
4000f79c:	e59d1000 	ldr	r1, [sp]
4000f7a0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000f7a4:	e3a02001 	mov	r2, #1
4000f7a8:	e1800112 	orr	r0, r0, r2, lsl r1
4000f7ac:	e59f10e8 	ldr	r1, [pc, #232]	; 4000f89c <_tx_thread_system_resume+0x3c4>
4000f7b0:	e5810000 	str	r0, [r1]
4000f7b4:	e59f00d8 	ldr	r0, [pc, #216]	; 4000f894 <_tx_thread_system_resume+0x3bc>
4000f7b8:	e5804000 	str	r4, [r0]
4000f7bc:	e121f005 	msr	CPSR_c, r5
4000f7c0:	e59f00b0 	ldr	r0, [pc, #176]	; 4000f878 <_tx_thread_system_resume+0x3a0>
4000f7c4:	e5900000 	ldr	r0, [r0]
4000f7c8:	e59f10c4 	ldr	r1, [pc, #196]	; 4000f894 <_tx_thread_system_resume+0x3bc>
4000f7cc:	e5911000 	ldr	r1, [r1]
4000f7d0:	e1500001 	cmp	r0, r1
4000f7d4:	0a000021 	beq	4000f860 <_tx_thread_system_resume+0x388>
4000f7d8:	e59f00b4 	ldr	r0, [pc, #180]	; 4000f894 <_tx_thread_system_resume+0x3bc>
4000f7dc:	e5900000 	ldr	r0, [r0]
4000f7e0:	e1540000 	cmp	r4, r0
4000f7e4:	0a000016 	beq	4000f844 <_tx_thread_system_resume+0x36c>
4000f7e8:	e59f00a4 	ldr	r0, [pc, #164]	; 4000f894 <_tx_thread_system_resume+0x3bc>
4000f7ec:	e5904000 	ldr	r4, [r0]
4000f7f0:	e5940008 	ldr	r0, [r4, #8]
4000f7f4:	e5941040 	ldr	r1, [r4, #64]	; 0x40
4000f7f8:	e1500001 	cmp	r0, r1
4000f7fc:	2a000001 	bcs	4000f808 <_tx_thread_system_resume+0x330>
4000f800:	e5940008 	ldr	r0, [r4, #8]
4000f804:	e5840040 	str	r0, [r4, #64]	; 0x40
4000f808:	e594000c 	ldr	r0, [r4, #12]
4000f80c:	e5900000 	ldr	r0, [r0]
4000f810:	e59f104c 	ldr	r1, [pc, #76]	; 4000f864 <_tx_thread_system_resume+0x38c>
4000f814:	e1500001 	cmp	r0, r1
4000f818:	1a000007 	bne	4000f83c <_tx_thread_system_resume+0x364>
4000f81c:	e5940010 	ldr	r0, [r4, #16]
4000f820:	e5900001 	ldr	r0, [r0, #1]
4000f824:	e1500001 	cmp	r0, r1
4000f828:	1a000003 	bne	4000f83c <_tx_thread_system_resume+0x364>
4000f82c:	e5940040 	ldr	r0, [r4, #64]	; 0x40
4000f830:	e594100c 	ldr	r1, [r4, #12]
4000f834:	e1500001 	cmp	r0, r1
4000f838:	2a000001 	bcs	4000f844 <_tx_thread_system_resume+0x36c>
4000f83c:	e1a00004 	mov	r0, r4
4000f840:	ebfffee5 	bl	4000f3dc <_tx_thread_stack_error_handler>
4000f844:	e59f0028 	ldr	r0, [pc, #40]	; 4000f874 <_tx_thread_system_resume+0x39c>
4000f848:	e5900000 	ldr	r0, [r0]
4000f84c:	e59f1014 	ldr	r1, [pc, #20]	; 4000f868 <_tx_thread_system_resume+0x390>
4000f850:	e5911000 	ldr	r1, [r1]
4000f854:	e1900001 	orrs	r0, r0, r1
4000f858:	1a000000 	bne	4000f860 <_tx_thread_system_resume+0x388>
4000f85c:	ebffed87 	bl	4000ae80 <_tx_thread_system_return>
4000f860:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
4000f864:	efefefef 	.word	0xefefefef
4000f868:	40030e50 	.word	0x40030e50
4000f86c:	40030ea0 	.word	0x40030ea0
4000f870:	40030ea4 	.word	0x40030ea4
4000f874:	40030e2c 	.word	0x40030e2c
4000f878:	40030e34 	.word	0x40030e34
4000f87c:	f0f0f0f0 	.word	0xf0f0f0f0
4000f880:	40030e9c 	.word	0x40030e9c
4000f884:	40030e98 	.word	0x40030e98
4000f888:	40030e8c 	.word	0x40030e8c
4000f88c:	40032874 	.word	0x40032874
4000f890:	40030e44 	.word	0x40030e44
4000f894:	40030e38 	.word	0x40030e38
4000f898:	40030e4c 	.word	0x40030e4c
4000f89c:	40030e48 	.word	0x40030e48

4000f8a0 <_tx_thread_time_slice>:
4000f8a0:	e92d4070 	push	{r4, r5, r6, lr}
4000f8a4:	e59f0140 	ldr	r0, [pc, #320]	; 4000f9ec <_tx_thread_time_slice+0x14c>
4000f8a8:	e5906000 	ldr	r6, [r0]
4000f8ac:	e5960008 	ldr	r0, [r6, #8]
4000f8b0:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f8b4:	e1500001 	cmp	r0, r1
4000f8b8:	2a000001 	bcs	4000f8c4 <_tx_thread_time_slice+0x24>
4000f8bc:	e5960008 	ldr	r0, [r6, #8]
4000f8c0:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f8c4:	e596000c 	ldr	r0, [r6, #12]
4000f8c8:	e5900000 	ldr	r0, [r0]
4000f8cc:	e59f111c 	ldr	r1, [pc, #284]	; 4000f9f0 <_tx_thread_time_slice+0x150>
4000f8d0:	e1500001 	cmp	r0, r1
4000f8d4:	1a000007 	bne	4000f8f8 <_tx_thread_time_slice+0x58>
4000f8d8:	e5960010 	ldr	r0, [r6, #16]
4000f8dc:	e5900001 	ldr	r0, [r0, #1]
4000f8e0:	e1500001 	cmp	r0, r1
4000f8e4:	1a000003 	bne	4000f8f8 <_tx_thread_time_slice+0x58>
4000f8e8:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f8ec:	e596100c 	ldr	r1, [r6, #12]
4000f8f0:	e1500001 	cmp	r0, r1
4000f8f4:	2a000001 	bcs	4000f900 <_tx_thread_time_slice+0x60>
4000f8f8:	e1a00006 	mov	r0, r6
4000f8fc:	ebfffeb6 	bl	4000f3dc <_tx_thread_stack_error_handler>
4000f900:	e10f4000 	mrs	r4, CPSR
4000f904:	e3845080 	orr	r5, r4, #128	; 0x80
4000f908:	e121f005 	msr	CPSR_c, r5
4000f90c:	e3a00000 	mov	r0, #0
4000f910:	e59f10dc 	ldr	r1, [pc, #220]	; 4000f9f4 <_tx_thread_time_slice+0x154>
4000f914:	e5810000 	str	r0, [r1]
4000f918:	e3560000 	cmp	r6, #0
4000f91c:	0a000030 	beq	4000f9e4 <_tx_thread_time_slice+0x144>
4000f920:	e5960030 	ldr	r0, [r6, #48]	; 0x30
4000f924:	e3500000 	cmp	r0, #0
4000f928:	1a00002d 	bne	4000f9e4 <_tx_thread_time_slice+0x144>
4000f92c:	e596001c 	ldr	r0, [r6, #28]
4000f930:	e5860018 	str	r0, [r6, #24]
4000f934:	e5960020 	ldr	r0, [r6, #32]
4000f938:	e1500006 	cmp	r0, r6
4000f93c:	0a000025 	beq	4000f9d8 <_tx_thread_time_slice+0x138>
4000f940:	e596002c 	ldr	r0, [r6, #44]	; 0x2c
4000f944:	e596103c 	ldr	r1, [r6, #60]	; 0x3c
4000f948:	e1500001 	cmp	r0, r1
4000f94c:	1a000021 	bne	4000f9d8 <_tx_thread_time_slice+0x138>
4000f950:	e59f20a0 	ldr	r2, [pc, #160]	; 4000f9f8 <_tx_thread_time_slice+0x158>
4000f954:	e5960020 	ldr	r0, [r6, #32]
4000f958:	e596102c 	ldr	r1, [r6, #44]	; 0x2c
4000f95c:	e7820101 	str	r0, [r2, r1, lsl #2]
4000f960:	e2820000 	add	r0, r2, #0
4000f964:	e59f1090 	ldr	r1, [pc, #144]	; 4000f9fc <_tx_thread_time_slice+0x15c>
4000f968:	e5911000 	ldr	r1, [r1]
4000f96c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4000f970:	e59f1088 	ldr	r1, [pc, #136]	; 4000fa00 <_tx_thread_time_slice+0x160>
4000f974:	e5810000 	str	r0, [r1]
4000f978:	e2810000 	add	r0, r1, #0
4000f97c:	e5906000 	ldr	r6, [r0]
4000f980:	e5960008 	ldr	r0, [r6, #8]
4000f984:	e5961040 	ldr	r1, [r6, #64]	; 0x40
4000f988:	e1500001 	cmp	r0, r1
4000f98c:	2a000001 	bcs	4000f998 <_tx_thread_time_slice+0xf8>
4000f990:	e5960008 	ldr	r0, [r6, #8]
4000f994:	e5860040 	str	r0, [r6, #64]	; 0x40
4000f998:	e596000c 	ldr	r0, [r6, #12]
4000f99c:	e5900000 	ldr	r0, [r0]
4000f9a0:	e59f1048 	ldr	r1, [pc, #72]	; 4000f9f0 <_tx_thread_time_slice+0x150>
4000f9a4:	e1500001 	cmp	r0, r1
4000f9a8:	1a000007 	bne	4000f9cc <_tx_thread_time_slice+0x12c>
4000f9ac:	e5960010 	ldr	r0, [r6, #16]
4000f9b0:	e5900001 	ldr	r0, [r0, #1]
4000f9b4:	e1500001 	cmp	r0, r1
4000f9b8:	1a000003 	bne	4000f9cc <_tx_thread_time_slice+0x12c>
4000f9bc:	e5960040 	ldr	r0, [r6, #64]	; 0x40
4000f9c0:	e596100c 	ldr	r1, [r6, #12]
4000f9c4:	e1500001 	cmp	r0, r1
4000f9c8:	2a000005 	bcs	4000f9e4 <_tx_thread_time_slice+0x144>
4000f9cc:	e1a00006 	mov	r0, r6
4000f9d0:	ebfffe81 	bl	4000f3dc <_tx_thread_stack_error_handler>
4000f9d4:	ea000002 	b	4000f9e4 <_tx_thread_time_slice+0x144>
4000f9d8:	e59f1024 	ldr	r1, [pc, #36]	; 4000fa04 <_tx_thread_time_slice+0x164>
4000f9dc:	e5960018 	ldr	r0, [r6, #24]
4000f9e0:	e5810000 	str	r0, [r1]
4000f9e4:	e121f004 	msr	CPSR_c, r4
4000f9e8:	e8bd8070 	pop	{r4, r5, r6, pc}
4000f9ec:	40030e34 	.word	0x40030e34
4000f9f0:	efefefef 	.word	0xefefefef
4000f9f4:	40030e64 	.word	0x40030e64
4000f9f8:	40032874 	.word	0x40032874
4000f9fc:	40030e4c 	.word	0x40030e4c
4000fa00:	40030e38 	.word	0x40030e38
4000fa04:	40030e60 	.word	0x40030e60

4000fa08 <_tx_thread_timeout>:
4000fa08:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4000fa0c:	e1a04000 	mov	r4, r0
4000fa10:	e1a08004 	mov	r8, r4
4000fa14:	e10f5000 	mrs	r5, CPSR
4000fa18:	e3856080 	orr	r6, r5, #128	; 0x80
4000fa1c:	e121f006 	msr	CPSR_c, r6
4000fa20:	e1a04008 	mov	r4, r8
4000fa24:	e5980030 	ldr	r0, [r8, #48]	; 0x30
4000fa28:	e3500004 	cmp	r0, #4
4000fa2c:	1a000008 	bne	4000fa54 <_tx_thread_timeout+0x4c>
4000fa30:	e59f0038 	ldr	r0, [pc, #56]	; 4000fa70 <_tx_thread_timeout+0x68>
4000fa34:	e5900000 	ldr	r0, [r0]
4000fa38:	e2800001 	add	r0, r0, #1
4000fa3c:	e59f102c 	ldr	r1, [pc, #44]	; 4000fa70 <_tx_thread_timeout+0x68>
4000fa40:	e5810000 	str	r0, [r1]
4000fa44:	e121f005 	msr	CPSR_c, r5
4000fa48:	e1a00008 	mov	r0, r8
4000fa4c:	ebfffea1 	bl	4000f4d8 <_tx_thread_system_resume>
4000fa50:	ea000005 	b	4000fa6c <_tx_thread_timeout+0x64>
4000fa54:	e5987068 	ldr	r7, [r8, #104]	; 0x68
4000fa58:	e121f005 	msr	CPSR_c, r5
4000fa5c:	e3570000 	cmp	r7, #0
4000fa60:	0a000001 	beq	4000fa6c <_tx_thread_timeout+0x64>
4000fa64:	e1a00008 	mov	r0, r8
4000fa68:	e12fff37 	blx	r7
4000fa6c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4000fa70:	40030e50 	.word	0x40030e50

4000fa74 <_tx_timer_activate>:
4000fa74:	e92d4070 	push	{r4, r5, r6, lr}
4000fa78:	e1a04000 	mov	r4, r0
4000fa7c:	e10f5000 	mrs	r5, CPSR
4000fa80:	e3856080 	orr	r6, r5, #128	; 0x80
4000fa84:	e121f006 	msr	CPSR_c, r6
4000fa88:	e59f1104 	ldr	r1, [pc, #260]	; 4000fb94 <_tx_timer_activate+0x120>
4000fa8c:	e5910000 	ldr	r0, [r1]
4000fa90:	e3500000 	cmp	r0, #0
4000fa94:	0a000031 	beq	4000fb60 <_tx_timer_activate+0xec>
4000fa98:	e59f10f8 	ldr	r1, [pc, #248]	; 4000fb98 <_tx_timer_activate+0x124>
4000fa9c:	e5911000 	ldr	r1, [r1]
4000faa0:	e2811001 	add	r1, r1, #1
4000faa4:	e59f20ec 	ldr	r2, [pc, #236]	; 4000fb98 <_tx_timer_activate+0x124>
4000faa8:	e5821000 	str	r1, [r2]
4000faac:	e580100c 	str	r1, [r0, #12]
4000fab0:	e59f10e4 	ldr	r1, [pc, #228]	; 4000fb9c <_tx_timer_activate+0x128>
4000fab4:	e5911000 	ldr	r1, [r1]
4000fab8:	e3510000 	cmp	r1, #0
4000fabc:	1a000006 	bne	4000fadc <_tx_timer_activate+0x68>
4000fac0:	e59f10d8 	ldr	r1, [pc, #216]	; 4000fba0 <_tx_timer_activate+0x12c>
4000fac4:	e5911000 	ldr	r1, [r1]
4000fac8:	e5801000 	str	r1, [r0]
4000facc:	e5901000 	ldr	r1, [r0]
4000fad0:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fad4:	e5801004 	str	r1, [r0, #4]
4000fad8:	ea00000d 	b	4000fb14 <_tx_timer_activate+0xa0>
4000fadc:	e59f10b8 	ldr	r1, [pc, #184]	; 4000fb9c <_tx_timer_activate+0x128>
4000fae0:	e5911000 	ldr	r1, [r1]
4000fae4:	e59f20b8 	ldr	r2, [pc, #184]	; 4000fba4 <_tx_timer_activate+0x130>
4000fae8:	e1510002 	cmp	r1, r2
4000faec:	2a000004 	bcs	4000fb04 <_tx_timer_activate+0x90>
4000faf0:	e3e01000 	mvn	r1, #0
4000faf4:	e5801000 	str	r1, [r0]
4000faf8:	e3a01000 	mov	r1, #0
4000fafc:	e5801004 	str	r1, [r0, #4]
4000fb00:	ea000003 	b	4000fb14 <_tx_timer_activate+0xa0>
4000fb04:	e59f1098 	ldr	r1, [pc, #152]	; 4000fba4 <_tx_timer_activate+0x130>
4000fb08:	e5801000 	str	r1, [r0]
4000fb0c:	e3a01000 	mov	r1, #0
4000fb10:	e5801004 	str	r1, [r0, #4]
4000fb14:	e3a0107a 	mov	r1, #122	; 0x7a
4000fb18:	e5801008 	str	r1, [r0, #8]
4000fb1c:	e5804010 	str	r4, [r0, #16]
4000fb20:	e3a01000 	mov	r1, #0
4000fb24:	e5801014 	str	r1, [r0, #20]
4000fb28:	e5801018 	str	r1, [r0, #24]
4000fb2c:	e580101c 	str	r1, [r0, #28]
4000fb30:	e2800020 	add	r0, r0, #32
4000fb34:	e59f106c 	ldr	r1, [pc, #108]	; 4000fba8 <_tx_timer_activate+0x134>
4000fb38:	e5911000 	ldr	r1, [r1]
4000fb3c:	e1500001 	cmp	r0, r1
4000fb40:	3a000001 	bcc	4000fb4c <_tx_timer_activate+0xd8>
4000fb44:	e59f1060 	ldr	r1, [pc, #96]	; 4000fbac <_tx_timer_activate+0x138>
4000fb48:	e5910000 	ldr	r0, [r1]
4000fb4c:	e59f1040 	ldr	r1, [pc, #64]	; 4000fb94 <_tx_timer_activate+0x120>
4000fb50:	e5810000 	str	r0, [r1]
4000fb54:	e59f1054 	ldr	r1, [pc, #84]	; 4000fbb0 <_tx_timer_activate+0x13c>
4000fb58:	e5911000 	ldr	r1, [r1]
4000fb5c:	e5810020 	str	r0, [r1, #32]
4000fb60:	e121f005 	msr	CPSR_c, r5
4000fb64:	e5940020 	ldr	r0, [r4, #32]
4000fb68:	e3500000 	cmp	r0, #0
4000fb6c:	1a000002 	bne	4000fb7c <_tx_timer_activate+0x108>
4000fb70:	e5940008 	ldr	r0, [r4, #8]
4000fb74:	e3500000 	cmp	r0, #0
4000fb78:	1a000001 	bne	4000fb84 <_tx_timer_activate+0x110>
4000fb7c:	e3a00017 	mov	r0, #23
4000fb80:	e8bd8070 	pop	{r4, r5, r6, pc}
4000fb84:	e2840008 	add	r0, r4, #8
4000fb88:	ebffe6c7 	bl	400096ac <_tx_timer_system_activate>
4000fb8c:	e3a00000 	mov	r0, #0
4000fb90:	eafffffa 	b	4000fb80 <_tx_timer_activate+0x10c>
4000fb94:	40030ea0 	.word	0x40030ea0
4000fb98:	40030ea4 	.word	0x40030ea4
4000fb9c:	40030e2c 	.word	0x40030e2c
4000fba0:	40030e34 	.word	0x40030e34
4000fba4:	f0f0f0f0 	.word	0xf0f0f0f0
4000fba8:	40030e9c 	.word	0x40030e9c
4000fbac:	40030e98 	.word	0x40030e98
4000fbb0:	40030e8c 	.word	0x40030e8c

4000fbb4 <_tx_timer_change>:
4000fbb4:	e92d4030 	push	{r4, r5, lr}
4000fbb8:	e1a03000 	mov	r3, r0
4000fbbc:	e10fc000 	mrs	ip, CPSR
4000fbc0:	e38ce080 	orr	lr, ip, #128	; 0x80
4000fbc4:	e121f00e 	msr	CPSR_c, lr
4000fbc8:	e59f40f0 	ldr	r4, [pc, #240]	; 4000fcc0 <_tx_timer_change+0x10c>
4000fbcc:	e5940000 	ldr	r0, [r4]
4000fbd0:	e3500000 	cmp	r0, #0
4000fbd4:	0a000031 	beq	4000fca0 <_tx_timer_change+0xec>
4000fbd8:	e59f40e4 	ldr	r4, [pc, #228]	; 4000fcc4 <_tx_timer_change+0x110>
4000fbdc:	e5944000 	ldr	r4, [r4]
4000fbe0:	e2844001 	add	r4, r4, #1
4000fbe4:	e59f50d8 	ldr	r5, [pc, #216]	; 4000fcc4 <_tx_timer_change+0x110>
4000fbe8:	e5854000 	str	r4, [r5]
4000fbec:	e580400c 	str	r4, [r0, #12]
4000fbf0:	e59f40d0 	ldr	r4, [pc, #208]	; 4000fcc8 <_tx_timer_change+0x114>
4000fbf4:	e5944000 	ldr	r4, [r4]
4000fbf8:	e3540000 	cmp	r4, #0
4000fbfc:	1a000006 	bne	4000fc1c <_tx_timer_change+0x68>
4000fc00:	e59f40c4 	ldr	r4, [pc, #196]	; 4000fccc <_tx_timer_change+0x118>
4000fc04:	e5944000 	ldr	r4, [r4]
4000fc08:	e5804000 	str	r4, [r0]
4000fc0c:	e5904000 	ldr	r4, [r0]
4000fc10:	e594402c 	ldr	r4, [r4, #44]	; 0x2c
4000fc14:	e5804004 	str	r4, [r0, #4]
4000fc18:	ea00000d 	b	4000fc54 <_tx_timer_change+0xa0>
4000fc1c:	e59f40a4 	ldr	r4, [pc, #164]	; 4000fcc8 <_tx_timer_change+0x114>
4000fc20:	e5944000 	ldr	r4, [r4]
4000fc24:	e59f50a4 	ldr	r5, [pc, #164]	; 4000fcd0 <_tx_timer_change+0x11c>
4000fc28:	e1540005 	cmp	r4, r5
4000fc2c:	2a000004 	bcs	4000fc44 <_tx_timer_change+0x90>
4000fc30:	e3e04000 	mvn	r4, #0
4000fc34:	e5804000 	str	r4, [r0]
4000fc38:	e3a04000 	mov	r4, #0
4000fc3c:	e5804004 	str	r4, [r0, #4]
4000fc40:	ea000003 	b	4000fc54 <_tx_timer_change+0xa0>
4000fc44:	e59f4084 	ldr	r4, [pc, #132]	; 4000fcd0 <_tx_timer_change+0x11c>
4000fc48:	e5804000 	str	r4, [r0]
4000fc4c:	e3a04000 	mov	r4, #0
4000fc50:	e5804004 	str	r4, [r0, #4]
4000fc54:	e3a0407b 	mov	r4, #123	; 0x7b
4000fc58:	e5804008 	str	r4, [r0, #8]
4000fc5c:	e5803010 	str	r3, [r0, #16]
4000fc60:	e5801014 	str	r1, [r0, #20]
4000fc64:	e5802018 	str	r2, [r0, #24]
4000fc68:	e3a04000 	mov	r4, #0
4000fc6c:	e580401c 	str	r4, [r0, #28]
4000fc70:	e2800020 	add	r0, r0, #32
4000fc74:	e59f4058 	ldr	r4, [pc, #88]	; 4000fcd4 <_tx_timer_change+0x120>
4000fc78:	e5944000 	ldr	r4, [r4]
4000fc7c:	e1500004 	cmp	r0, r4
4000fc80:	3a000001 	bcc	4000fc8c <_tx_timer_change+0xd8>
4000fc84:	e59f404c 	ldr	r4, [pc, #76]	; 4000fcd8 <_tx_timer_change+0x124>
4000fc88:	e5940000 	ldr	r0, [r4]
4000fc8c:	e59f402c 	ldr	r4, [pc, #44]	; 4000fcc0 <_tx_timer_change+0x10c>
4000fc90:	e5840000 	str	r0, [r4]
4000fc94:	e59f4040 	ldr	r4, [pc, #64]	; 4000fcdc <_tx_timer_change+0x128>
4000fc98:	e5944000 	ldr	r4, [r4]
4000fc9c:	e5840020 	str	r0, [r4, #32]
4000fca0:	e5930020 	ldr	r0, [r3, #32]
4000fca4:	e3500000 	cmp	r0, #0
4000fca8:	1a000001 	bne	4000fcb4 <_tx_timer_change+0x100>
4000fcac:	e5831008 	str	r1, [r3, #8]
4000fcb0:	e583200c 	str	r2, [r3, #12]
4000fcb4:	e121f00c 	msr	CPSR_c, ip
4000fcb8:	e3a00000 	mov	r0, #0
4000fcbc:	e8bd8030 	pop	{r4, r5, pc}
4000fcc0:	40030ea0 	.word	0x40030ea0
4000fcc4:	40030ea4 	.word	0x40030ea4
4000fcc8:	40030e2c 	.word	0x40030e2c
4000fccc:	40030e34 	.word	0x40030e34
4000fcd0:	f0f0f0f0 	.word	0xf0f0f0f0
4000fcd4:	40030e9c 	.word	0x40030e9c
4000fcd8:	40030e98 	.word	0x40030e98
4000fcdc:	40030e8c 	.word	0x40030e8c

4000fce0 <_tx_timer_create>:
4000fce0:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4000fce4:	e1a04000 	mov	r4, r0
4000fce8:	e1a05001 	mov	r5, r1
4000fcec:	e1a06002 	mov	r6, r2
4000fcf0:	e1a07003 	mov	r7, r3
4000fcf4:	e28da030 	add	sl, sp, #48	; 0x30
4000fcf8:	e89a0700 	ldm	sl, {r8, r9, sl}
4000fcfc:	e3a0102c 	mov	r1, #44	; 0x2c
4000fd00:	e1a00004 	mov	r0, r4
4000fd04:	eb000f0f 	bl	40013948 <__aeabi_memclr4>
4000fd08:	e5845004 	str	r5, [r4, #4]
4000fd0c:	e5848008 	str	r8, [r4, #8]
4000fd10:	e584900c 	str	r9, [r4, #12]
4000fd14:	e5846010 	str	r6, [r4, #16]
4000fd18:	e5847014 	str	r7, [r4, #20]
4000fd1c:	e10fb000 	mrs	fp, CPSR
4000fd20:	e38b0080 	orr	r0, fp, #128	; 0x80
4000fd24:	e58d0008 	str	r0, [sp, #8]
4000fd28:	e59d0008 	ldr	r0, [sp, #8]
4000fd2c:	e121f000 	msr	CPSR_c, r0
4000fd30:	e59f0178 	ldr	r0, [pc, #376]	; 4000feb0 <_tx_timer_create+0x1d0>
4000fd34:	e5840000 	str	r0, [r4]
4000fd38:	e59f0174 	ldr	r0, [pc, #372]	; 4000feb4 <_tx_timer_create+0x1d4>
4000fd3c:	e5900000 	ldr	r0, [r0]
4000fd40:	e3500000 	cmp	r0, #0
4000fd44:	0a00000e 	beq	4000fd84 <_tx_timer_create+0xa4>
4000fd48:	e59f0164 	ldr	r0, [pc, #356]	; 4000feb4 <_tx_timer_create+0x1d4>
4000fd4c:	e5900000 	ldr	r0, [r0]
4000fd50:	e5900028 	ldr	r0, [r0, #40]	; 0x28
4000fd54:	e58d0004 	str	r0, [sp, #4]
4000fd58:	e59f0154 	ldr	r0, [pc, #340]	; 4000feb4 <_tx_timer_create+0x1d4>
4000fd5c:	e5900000 	ldr	r0, [r0]
4000fd60:	e5804028 	str	r4, [r0, #40]	; 0x28
4000fd64:	e59d0004 	ldr	r0, [sp, #4]
4000fd68:	e5804024 	str	r4, [r0, #36]	; 0x24
4000fd6c:	e59d0004 	ldr	r0, [sp, #4]
4000fd70:	e5840028 	str	r0, [r4, #40]	; 0x28
4000fd74:	e59f0138 	ldr	r0, [pc, #312]	; 4000feb4 <_tx_timer_create+0x1d4>
4000fd78:	e5900000 	ldr	r0, [r0]
4000fd7c:	e5840024 	str	r0, [r4, #36]	; 0x24
4000fd80:	ea000003 	b	4000fd94 <_tx_timer_create+0xb4>
4000fd84:	e59f0128 	ldr	r0, [pc, #296]	; 4000feb4 <_tx_timer_create+0x1d4>
4000fd88:	e5804000 	str	r4, [r0]
4000fd8c:	e5844024 	str	r4, [r4, #36]	; 0x24
4000fd90:	e5844028 	str	r4, [r4, #40]	; 0x28
4000fd94:	e59f011c 	ldr	r0, [pc, #284]	; 4000feb8 <_tx_timer_create+0x1d8>
4000fd98:	e5900000 	ldr	r0, [r0]
4000fd9c:	e2800001 	add	r0, r0, #1
4000fda0:	e59f1110 	ldr	r1, [pc, #272]	; 4000feb8 <_tx_timer_create+0x1d8>
4000fda4:	e5810000 	str	r0, [r1]
4000fda8:	e1a03008 	mov	r3, r8
4000fdac:	e1a02005 	mov	r2, r5
4000fdb0:	e1a01004 	mov	r1, r4
4000fdb4:	e3a00002 	mov	r0, #2
4000fdb8:	e58d9000 	str	r9, [sp]
4000fdbc:	eb00011b 	bl	40010230 <_tx_trace_object_register>
4000fdc0:	e59f10f4 	ldr	r1, [pc, #244]	; 4000febc <_tx_timer_create+0x1dc>
4000fdc4:	e5910000 	ldr	r0, [r1]
4000fdc8:	e3500000 	cmp	r0, #0
4000fdcc:	0a000030 	beq	4000fe94 <_tx_timer_create+0x1b4>
4000fdd0:	e59f10e8 	ldr	r1, [pc, #232]	; 4000fec0 <_tx_timer_create+0x1e0>
4000fdd4:	e5911000 	ldr	r1, [r1]
4000fdd8:	e2811001 	add	r1, r1, #1
4000fddc:	e59f20dc 	ldr	r2, [pc, #220]	; 4000fec0 <_tx_timer_create+0x1e0>
4000fde0:	e5821000 	str	r1, [r2]
4000fde4:	e580100c 	str	r1, [r0, #12]
4000fde8:	e59f10d4 	ldr	r1, [pc, #212]	; 4000fec4 <_tx_timer_create+0x1e4>
4000fdec:	e5911000 	ldr	r1, [r1]
4000fdf0:	e3510000 	cmp	r1, #0
4000fdf4:	1a000006 	bne	4000fe14 <_tx_timer_create+0x134>
4000fdf8:	e59f10c8 	ldr	r1, [pc, #200]	; 4000fec8 <_tx_timer_create+0x1e8>
4000fdfc:	e5911000 	ldr	r1, [r1]
4000fe00:	e5801000 	str	r1, [r0]
4000fe04:	e5901000 	ldr	r1, [r0]
4000fe08:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
4000fe0c:	e5801004 	str	r1, [r0, #4]
4000fe10:	ea00000d 	b	4000fe4c <_tx_timer_create+0x16c>
4000fe14:	e59f10a8 	ldr	r1, [pc, #168]	; 4000fec4 <_tx_timer_create+0x1e4>
4000fe18:	e5911000 	ldr	r1, [r1]
4000fe1c:	e59f20a8 	ldr	r2, [pc, #168]	; 4000fecc <_tx_timer_create+0x1ec>
4000fe20:	e1510002 	cmp	r1, r2
4000fe24:	2a000004 	bcs	4000fe3c <_tx_timer_create+0x15c>
4000fe28:	e3e01000 	mvn	r1, #0
4000fe2c:	e5801000 	str	r1, [r0]
4000fe30:	e3a01000 	mov	r1, #0
4000fe34:	e5801004 	str	r1, [r0, #4]
4000fe38:	ea000003 	b	4000fe4c <_tx_timer_create+0x16c>
4000fe3c:	e59f1088 	ldr	r1, [pc, #136]	; 4000fecc <_tx_timer_create+0x1ec>
4000fe40:	e5801000 	str	r1, [r0]
4000fe44:	e3a01000 	mov	r1, #0
4000fe48:	e5801004 	str	r1, [r0, #4]
4000fe4c:	e3a0107c 	mov	r1, #124	; 0x7c
4000fe50:	e5801008 	str	r1, [r0, #8]
4000fe54:	e5804010 	str	r4, [r0, #16]
4000fe58:	e5808014 	str	r8, [r0, #20]
4000fe5c:	e5809018 	str	r9, [r0, #24]
4000fe60:	e580a01c 	str	sl, [r0, #28]
4000fe64:	e2800020 	add	r0, r0, #32
4000fe68:	e59f1060 	ldr	r1, [pc, #96]	; 4000fed0 <_tx_timer_create+0x1f0>
4000fe6c:	e5911000 	ldr	r1, [r1]
4000fe70:	e1500001 	cmp	r0, r1
4000fe74:	3a000001 	bcc	4000fe80 <_tx_timer_create+0x1a0>
4000fe78:	e59f1054 	ldr	r1, [pc, #84]	; 4000fed4 <_tx_timer_create+0x1f4>
4000fe7c:	e5910000 	ldr	r0, [r1]
4000fe80:	e59f1034 	ldr	r1, [pc, #52]	; 4000febc <_tx_timer_create+0x1dc>
4000fe84:	e5810000 	str	r0, [r1]
4000fe88:	e59f1048 	ldr	r1, [pc, #72]	; 4000fed8 <_tx_timer_create+0x1f8>
4000fe8c:	e5911000 	ldr	r1, [r1]
4000fe90:	e5810020 	str	r0, [r1, #32]
4000fe94:	e121f00b 	msr	CPSR_c, fp
4000fe98:	e35a0000 	cmp	sl, #0
4000fe9c:	0a000001 	beq	4000fea8 <_tx_timer_create+0x1c8>
4000fea0:	e2840008 	add	r0, r4, #8
4000fea4:	ebffe600 	bl	400096ac <_tx_timer_system_activate>
4000fea8:	e3a00000 	mov	r0, #0
4000feac:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4000feb0:	4154494d 	.word	0x4154494d
4000feb4:	40030e78 	.word	0x40030e78
4000feb8:	40030e7c 	.word	0x40030e7c
4000febc:	40030ea0 	.word	0x40030ea0
4000fec0:	40030ea4 	.word	0x40030ea4
4000fec4:	40030e2c 	.word	0x40030e2c
4000fec8:	40030e34 	.word	0x40030e34
4000fecc:	f0f0f0f0 	.word	0xf0f0f0f0
4000fed0:	40030e9c 	.word	0x40030e9c
4000fed4:	40030e98 	.word	0x40030e98
4000fed8:	40030e8c 	.word	0x40030e8c

4000fedc <_tx_timer_deactivate>:
4000fedc:	e92d4018 	push	{r3, r4, lr}
4000fee0:	e1a01000 	mov	r1, r0
4000fee4:	e281c008 	add	ip, r1, #8
4000fee8:	e10f2000 	mrs	r2, CPSR
4000feec:	e3823080 	orr	r3, r2, #128	; 0x80
4000fef0:	e121f003 	msr	CPSR_c, r3
4000fef4:	e59fe228 	ldr	lr, [pc, #552]	; 40010124 <_tx_timer_deactivate+0x248>
4000fef8:	e59e0000 	ldr	r0, [lr]
4000fefc:	e3500000 	cmp	r0, #0
4000ff00:	0a000031 	beq	4000ffcc <_tx_timer_deactivate+0xf0>
4000ff04:	e59fe21c 	ldr	lr, [pc, #540]	; 40010128 <_tx_timer_deactivate+0x24c>
4000ff08:	e59ee000 	ldr	lr, [lr]
4000ff0c:	e28ee001 	add	lr, lr, #1
4000ff10:	e59f4210 	ldr	r4, [pc, #528]	; 40010128 <_tx_timer_deactivate+0x24c>
4000ff14:	e584e000 	str	lr, [r4]
4000ff18:	e580e00c 	str	lr, [r0, #12]
4000ff1c:	e59fe208 	ldr	lr, [pc, #520]	; 4001012c <_tx_timer_deactivate+0x250>
4000ff20:	e59ee000 	ldr	lr, [lr]
4000ff24:	e35e0000 	cmp	lr, #0
4000ff28:	1a000006 	bne	4000ff48 <_tx_timer_deactivate+0x6c>
4000ff2c:	e59fe1fc 	ldr	lr, [pc, #508]	; 40010130 <_tx_timer_deactivate+0x254>
4000ff30:	e59ee000 	ldr	lr, [lr]
4000ff34:	e580e000 	str	lr, [r0]
4000ff38:	e590e000 	ldr	lr, [r0]
4000ff3c:	e59ee02c 	ldr	lr, [lr, #44]	; 0x2c
4000ff40:	e580e004 	str	lr, [r0, #4]
4000ff44:	ea00000d 	b	4000ff80 <_tx_timer_deactivate+0xa4>
4000ff48:	e59fe1dc 	ldr	lr, [pc, #476]	; 4001012c <_tx_timer_deactivate+0x250>
4000ff4c:	e59ee000 	ldr	lr, [lr]
4000ff50:	e59f41dc 	ldr	r4, [pc, #476]	; 40010134 <_tx_timer_deactivate+0x258>
4000ff54:	e15e0004 	cmp	lr, r4
4000ff58:	2a000004 	bcs	4000ff70 <_tx_timer_deactivate+0x94>
4000ff5c:	e3e0e000 	mvn	lr, #0
4000ff60:	e580e000 	str	lr, [r0]
4000ff64:	e3a0e000 	mov	lr, #0
4000ff68:	e580e004 	str	lr, [r0, #4]
4000ff6c:	ea000003 	b	4000ff80 <_tx_timer_deactivate+0xa4>
4000ff70:	e59fe1bc 	ldr	lr, [pc, #444]	; 40010134 <_tx_timer_deactivate+0x258>
4000ff74:	e580e000 	str	lr, [r0]
4000ff78:	e3a0e000 	mov	lr, #0
4000ff7c:	e580e004 	str	lr, [r0, #4]
4000ff80:	e3a0e07d 	mov	lr, #125	; 0x7d
4000ff84:	e580e008 	str	lr, [r0, #8]
4000ff88:	e5801010 	str	r1, [r0, #16]
4000ff8c:	e580d014 	str	sp, [r0, #20]
4000ff90:	e3a0e000 	mov	lr, #0
4000ff94:	e580e018 	str	lr, [r0, #24]
4000ff98:	e580e01c 	str	lr, [r0, #28]
4000ff9c:	e2800020 	add	r0, r0, #32
4000ffa0:	e59fe190 	ldr	lr, [pc, #400]	; 40010138 <_tx_timer_deactivate+0x25c>
4000ffa4:	e59ee000 	ldr	lr, [lr]
4000ffa8:	e150000e 	cmp	r0, lr
4000ffac:	3a000001 	bcc	4000ffb8 <_tx_timer_deactivate+0xdc>
4000ffb0:	e59fe184 	ldr	lr, [pc, #388]	; 4001013c <_tx_timer_deactivate+0x260>
4000ffb4:	e59e0000 	ldr	r0, [lr]
4000ffb8:	e59fe164 	ldr	lr, [pc, #356]	; 40010124 <_tx_timer_deactivate+0x248>
4000ffbc:	e58e0000 	str	r0, [lr]
4000ffc0:	e59fe178 	ldr	lr, [pc, #376]	; 40010140 <_tx_timer_deactivate+0x264>
4000ffc4:	e59ee000 	ldr	lr, [lr]
4000ffc8:	e58e0020 	str	r0, [lr, #32]
4000ffcc:	e59fe170 	ldr	lr, [pc, #368]	; 40010144 <_tx_timer_deactivate+0x268>
4000ffd0:	e59c0018 	ldr	r0, [ip, #24]
4000ffd4:	e59ee000 	ldr	lr, [lr]
4000ffd8:	e150000e 	cmp	r0, lr
4000ffdc:	3a00002b 	bcc	40010090 <_tx_timer_deactivate+0x1b4>
4000ffe0:	e59fe160 	ldr	lr, [pc, #352]	; 40010148 <_tx_timer_deactivate+0x26c>
4000ffe4:	e59c0018 	ldr	r0, [ip, #24]
4000ffe8:	e59ee000 	ldr	lr, [lr]
4000ffec:	e150000e 	cmp	r0, lr
4000fff0:	2a000026 	bcs	40010090 <_tx_timer_deactivate+0x1b4>
4000fff4:	e59fe150 	ldr	lr, [pc, #336]	; 4001014c <_tx_timer_deactivate+0x270>
4000fff8:	e59c0018 	ldr	r0, [ip, #24]
4000fffc:	e59ee000 	ldr	lr, [lr]
40010000:	e150000e 	cmp	r0, lr
40010004:	3a000007 	bcc	40010028 <_tx_timer_deactivate+0x14c>
40010008:	e59fe13c 	ldr	lr, [pc, #316]	; 4001014c <_tx_timer_deactivate+0x270>
4001000c:	e59c0018 	ldr	r0, [ip, #24]
40010010:	e59ee000 	ldr	lr, [lr]
40010014:	e040000e 	sub	r0, r0, lr
40010018:	e3a0e001 	mov	lr, #1
4001001c:	e08e0140 	add	r0, lr, r0, asr #2
40010020:	e58d0000 	str	r0, [sp]
40010024:	ea00000e 	b	40010064 <_tx_timer_deactivate+0x188>
40010028:	e59fe114 	ldr	lr, [pc, #276]	; 40010144 <_tx_timer_deactivate+0x268>
4001002c:	e59c0018 	ldr	r0, [ip, #24]
40010030:	e59ee000 	ldr	lr, [lr]
40010034:	e040000e 	sub	r0, r0, lr
40010038:	e1a00140 	asr	r0, r0, #2
4001003c:	e58d0000 	str	r0, [sp]
40010040:	e59f0100 	ldr	r0, [pc, #256]	; 40010148 <_tx_timer_deactivate+0x26c>
40010044:	e5900000 	ldr	r0, [r0]
40010048:	e59fe0fc 	ldr	lr, [pc, #252]	; 4001014c <_tx_timer_deactivate+0x270>
4001004c:	e59ee000 	ldr	lr, [lr]
40010050:	e040000e 	sub	r0, r0, lr
40010054:	e59de000 	ldr	lr, [sp]
40010058:	e08e0140 	add	r0, lr, r0, asr #2
4001005c:	e2800001 	add	r0, r0, #1
40010060:	e58d0000 	str	r0, [sp]
40010064:	e59c0000 	ldr	r0, [ip]
40010068:	e3500020 	cmp	r0, #32
4001006c:	9a000005 	bls	40010088 <_tx_timer_deactivate+0x1ac>
40010070:	e59c0000 	ldr	r0, [ip]
40010074:	e2400020 	sub	r0, r0, #32
40010078:	e59de000 	ldr	lr, [sp]
4001007c:	e080000e 	add	r0, r0, lr
40010080:	e58c0000 	str	r0, [ip]
40010084:	ea000001 	b	40010090 <_tx_timer_deactivate+0x1b4>
40010088:	e59d0000 	ldr	r0, [sp]
4001008c:	e58c0000 	str	r0, [ip]
40010090:	e59c0018 	ldr	r0, [ip, #24]
40010094:	e3500000 	cmp	r0, #0
40010098:	0a00001e 	beq	40010118 <_tx_timer_deactivate+0x23c>
4001009c:	e59c0010 	ldr	r0, [ip, #16]
400100a0:	e150000c 	cmp	r0, ip
400100a4:	1a000009 	bne	400100d0 <_tx_timer_deactivate+0x1f4>
400100a8:	e59c0018 	ldr	r0, [ip, #24]
400100ac:	e5900000 	ldr	r0, [r0]
400100b0:	e150000c 	cmp	r0, ip
400100b4:	1a000002 	bne	400100c4 <_tx_timer_deactivate+0x1e8>
400100b8:	e3a00000 	mov	r0, #0
400100bc:	e59ce018 	ldr	lr, [ip, #24]
400100c0:	e58e0000 	str	r0, [lr]
400100c4:	e3a00000 	mov	r0, #0
400100c8:	e58c0018 	str	r0, [ip, #24]
400100cc:	ea000011 	b	40010118 <_tx_timer_deactivate+0x23c>
400100d0:	e59c0014 	ldr	r0, [ip, #20]
400100d4:	e59ce010 	ldr	lr, [ip, #16]
400100d8:	e58e0014 	str	r0, [lr, #20]
400100dc:	e59c0010 	ldr	r0, [ip, #16]
400100e0:	e59ce014 	ldr	lr, [ip, #20]
400100e4:	e58e0010 	str	r0, [lr, #16]
400100e8:	e59c0018 	ldr	r0, [ip, #24]
400100ec:	e5900000 	ldr	r0, [r0]
400100f0:	e150000c 	cmp	r0, ip
400100f4:	1a000005 	bne	40010110 <_tx_timer_deactivate+0x234>
400100f8:	e59c0018 	ldr	r0, [ip, #24]
400100fc:	e59ce010 	ldr	lr, [ip, #16]
40010100:	e58e0018 	str	r0, [lr, #24]
40010104:	e59c0010 	ldr	r0, [ip, #16]
40010108:	e59ce018 	ldr	lr, [ip, #24]
4001010c:	e58e0000 	str	r0, [lr]
40010110:	e3a00000 	mov	r0, #0
40010114:	e58c0018 	str	r0, [ip, #24]
40010118:	e121f002 	msr	CPSR_c, r2
4001011c:	e3a00000 	mov	r0, #0
40010120:	e8bd8018 	pop	{r3, r4, pc}
40010124:	40030ea0 	.word	0x40030ea0
40010128:	40030ea4 	.word	0x40030ea4
4001012c:	40030e2c 	.word	0x40030e2c
40010130:	40030e34 	.word	0x40030e34
40010134:	f0f0f0f0 	.word	0xf0f0f0f0
40010138:	40030e9c 	.word	0x40030e9c
4001013c:	40030e98 	.word	0x40030e98
40010140:	40030e8c 	.word	0x40030e8c
40010144:	40030e68 	.word	0x40030e68
40010148:	40030e6c 	.word	0x40030e6c
4001014c:	40030e70 	.word	0x40030e70

40010150 <_tx_timer_expiration_process>:
40010150:	e92d4070 	push	{r4, r5, r6, lr}
40010154:	e10f4000 	mrs	r4, CPSR
40010158:	e3845080 	orr	r5, r4, #128	; 0x80
4001015c:	e121f005 	msr	CPSR_c, r5
40010160:	e59f001c 	ldr	r0, [pc, #28]	; 40010184 <_tx_timer_expiration_process+0x34>
40010164:	e5900000 	ldr	r0, [r0]
40010168:	e2800001 	add	r0, r0, #1
4001016c:	e59f1010 	ldr	r1, [pc, #16]	; 40010184 <_tx_timer_expiration_process+0x34>
40010170:	e5810000 	str	r0, [r1]
40010174:	e121f004 	msr	CPSR_c, r4
40010178:	e59f0008 	ldr	r0, [pc, #8]	; 40010188 <_tx_timer_expiration_process+0x38>
4001017c:	ebfffcd5 	bl	4000f4d8 <_tx_thread_system_resume>
40010180:	e8bd8070 	pop	{r4, r5, r6, pc}
40010184:	40030e50 	.word	0x40030e50
40010188:	40032974 	.word	0x40032974

4001018c <_tx_timer_system_deactivate>:
4001018c:	e1a01000 	mov	r1, r0
40010190:	e10f2000 	mrs	r2, CPSR
40010194:	e3823080 	orr	r3, r2, #128	; 0x80
40010198:	e121f003 	msr	CPSR_c, r3
4001019c:	e5910018 	ldr	r0, [r1, #24]
400101a0:	e3500000 	cmp	r0, #0
400101a4:	0a00001e 	beq	40010224 <_tx_timer_system_deactivate+0x98>
400101a8:	e5910010 	ldr	r0, [r1, #16]
400101ac:	e1500001 	cmp	r0, r1
400101b0:	1a000009 	bne	400101dc <_tx_timer_system_deactivate+0x50>
400101b4:	e5910018 	ldr	r0, [r1, #24]
400101b8:	e5900000 	ldr	r0, [r0]
400101bc:	e1500001 	cmp	r0, r1
400101c0:	1a000002 	bne	400101d0 <_tx_timer_system_deactivate+0x44>
400101c4:	e3a00000 	mov	r0, #0
400101c8:	e591c018 	ldr	ip, [r1, #24]
400101cc:	e58c0000 	str	r0, [ip]
400101d0:	e3a00000 	mov	r0, #0
400101d4:	e5810018 	str	r0, [r1, #24]
400101d8:	ea000011 	b	40010224 <_tx_timer_system_deactivate+0x98>
400101dc:	e5910014 	ldr	r0, [r1, #20]
400101e0:	e591c010 	ldr	ip, [r1, #16]
400101e4:	e58c0014 	str	r0, [ip, #20]
400101e8:	e5910010 	ldr	r0, [r1, #16]
400101ec:	e591c014 	ldr	ip, [r1, #20]
400101f0:	e58c0010 	str	r0, [ip, #16]
400101f4:	e5910018 	ldr	r0, [r1, #24]
400101f8:	e5900000 	ldr	r0, [r0]
400101fc:	e1500001 	cmp	r0, r1
40010200:	1a000005 	bne	4001021c <_tx_timer_system_deactivate+0x90>
40010204:	e5910018 	ldr	r0, [r1, #24]
40010208:	e591c010 	ldr	ip, [r1, #16]
4001020c:	e58c0018 	str	r0, [ip, #24]
40010210:	e5910010 	ldr	r0, [r1, #16]
40010214:	e591c018 	ldr	ip, [r1, #24]
40010218:	e58c0000 	str	r0, [ip]
4001021c:	e3a00000 	mov	r0, #0
40010220:	e5810018 	str	r0, [r1, #24]
40010224:	e121f002 	msr	CPSR_c, r2
40010228:	e3a00000 	mov	r0, #0
4001022c:	e12fff1e 	bx	lr

40010230 <_tx_trace_object_register>:
40010230:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40010234:	e1a04000 	mov	r4, r0
40010238:	e1a05001 	mov	r5, r1
4001023c:	e1a06002 	mov	r6, r2
40010240:	e1a07003 	mov	r7, r3
40010244:	e59d8028 	ldr	r8, [sp, #40]	; 0x28
40010248:	e59f0184 	ldr	r0, [pc, #388]	; 400103d4 <_tx_trace_object_register+0x1a4>
4001024c:	e5900000 	ldr	r0, [r0]
40010250:	e3500000 	cmp	r0, #0
40010254:	1a000000 	bne	4001025c <_tx_trace_object_register+0x2c>
40010258:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
4001025c:	e59f1174 	ldr	r1, [pc, #372]	; 400103d8 <_tx_trace_object_register+0x1a8>
40010260:	e5911000 	ldr	r1, [r1]
40010264:	e59f2168 	ldr	r2, [pc, #360]	; 400103d4 <_tx_trace_object_register+0x1a4>
40010268:	e5922000 	ldr	r2, [r2]
4001026c:	e0410002 	sub	r0, r1, r2
40010270:	e3a01030 	mov	r1, #48	; 0x30
40010274:	eb0002bd 	bl	40010d70 <__aeabi_idivmod>
40010278:	e1a0a000 	mov	sl, r0
4001027c:	e1a0b00a 	mov	fp, sl
40010280:	e3a09000 	mov	r9, #0
40010284:	ea00001b 	b	400102f8 <_tx_trace_object_register+0xc8>
40010288:	e0890089 	add	r0, r9, r9, lsl #1
4001028c:	e59f1140 	ldr	r1, [pc, #320]	; 400103d4 <_tx_trace_object_register+0x1a4>
40010290:	e5911000 	ldr	r1, [r1]
40010294:	e0810200 	add	r0, r1, r0, lsl #4
40010298:	e5900004 	ldr	r0, [r0, #4]
4001029c:	e1500005 	cmp	r0, r5
400102a0:	1a000001 	bne	400102ac <_tx_trace_object_register+0x7c>
400102a4:	e1a0b009 	mov	fp, r9
400102a8:	ea000014 	b	40010300 <_tx_trace_object_register+0xd0>
400102ac:	e0890089 	add	r0, r9, r9, lsl #1
400102b0:	e59f111c 	ldr	r1, [pc, #284]	; 400103d4 <_tx_trace_object_register+0x1a4>
400102b4:	e5911000 	ldr	r1, [r1]
400102b8:	e7d10200 	ldrb	r0, [r1, r0, lsl #4]
400102bc:	e3500000 	cmp	r0, #0
400102c0:	0a00000b 	beq	400102f4 <_tx_trace_object_register+0xc4>
400102c4:	e15b000a 	cmp	fp, sl
400102c8:	1a000001 	bne	400102d4 <_tx_trace_object_register+0xa4>
400102cc:	e1a0b009 	mov	fp, r9
400102d0:	ea000007 	b	400102f4 <_tx_trace_object_register+0xc4>
400102d4:	e08b008b 	add	r0, fp, fp, lsl #1
400102d8:	e59f10f4 	ldr	r1, [pc, #244]	; 400103d4 <_tx_trace_object_register+0x1a4>
400102dc:	e5911000 	ldr	r1, [r1]
400102e0:	e0810200 	add	r0, r1, r0, lsl #4
400102e4:	e5d00001 	ldrb	r0, [r0, #1]
400102e8:	e3500000 	cmp	r0, #0
400102ec:	0a000000 	beq	400102f4 <_tx_trace_object_register+0xc4>
400102f0:	e1a0b009 	mov	fp, r9
400102f4:	e2899001 	add	r9, r9, #1
400102f8:	e159000a 	cmp	r9, sl
400102fc:	3affffe1 	bcc	40010288 <_tx_trace_object_register+0x58>
40010300:	e1a00000 	nop			; (mov r0, r0)
40010304:	e15b000a 	cmp	fp, sl
40010308:	2a000030 	bcs	400103d0 <_tx_trace_object_register+0x1a0>
4001030c:	e3a00000 	mov	r0, #0
40010310:	e08b108b 	add	r1, fp, fp, lsl #1
40010314:	e59f20b8 	ldr	r2, [pc, #184]	; 400103d4 <_tx_trace_object_register+0x1a4>
40010318:	e5922000 	ldr	r2, [r2]
4001031c:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010320:	e08b008b 	add	r0, fp, fp, lsl #1
40010324:	e59f10a8 	ldr	r1, [pc, #168]	; 400103d4 <_tx_trace_object_register+0x1a4>
40010328:	e5911000 	ldr	r1, [r1]
4001032c:	e0810200 	add	r0, r1, r0, lsl #4
40010330:	e5c04001 	strb	r4, [r0, #1]
40010334:	e08b008b 	add	r0, fp, fp, lsl #1
40010338:	e59f1094 	ldr	r1, [pc, #148]	; 400103d4 <_tx_trace_object_register+0x1a4>
4001033c:	e5911000 	ldr	r1, [r1]
40010340:	e0810200 	add	r0, r1, r0, lsl #4
40010344:	e5805004 	str	r5, [r0, #4]
40010348:	e08b008b 	add	r0, fp, fp, lsl #1
4001034c:	e59f1080 	ldr	r1, [pc, #128]	; 400103d4 <_tx_trace_object_register+0x1a4>
40010350:	e5911000 	ldr	r1, [r1]
40010354:	e0810200 	add	r0, r1, r0, lsl #4
40010358:	e5807008 	str	r7, [r0, #8]
4001035c:	e08b008b 	add	r0, fp, fp, lsl #1
40010360:	e59f106c 	ldr	r1, [pc, #108]	; 400103d4 <_tx_trace_object_register+0x1a4>
40010364:	e5911000 	ldr	r1, [r1]
40010368:	e0810200 	add	r0, r1, r0, lsl #4
4001036c:	e580800c 	str	r8, [r0, #12]
40010370:	e3a09000 	mov	r9, #0
40010374:	ea00000b 	b	400103a8 <_tx_trace_object_register+0x178>
40010378:	e7d60009 	ldrb	r0, [r6, r9]
4001037c:	e08b108b 	add	r1, fp, fp, lsl #1
40010380:	e59f204c 	ldr	r2, [pc, #76]	; 400103d4 <_tx_trace_object_register+0x1a4>
40010384:	e5922000 	ldr	r2, [r2]
40010388:	e0821201 	add	r1, r2, r1, lsl #4
4001038c:	e2811010 	add	r1, r1, #16
40010390:	e7c10009 	strb	r0, [r1, r9]
40010394:	e7d60009 	ldrb	r0, [r6, r9]
40010398:	e3500000 	cmp	r0, #0
4001039c:	1a000000 	bne	400103a4 <_tx_trace_object_register+0x174>
400103a0:	ea000002 	b	400103b0 <_tx_trace_object_register+0x180>
400103a4:	e2899001 	add	r9, r9, #1
400103a8:	e359001f 	cmp	r9, #31
400103ac:	3afffff1 	bcc	40010378 <_tx_trace_object_register+0x148>
400103b0:	e1a00000 	nop			; (mov r0, r0)
400103b4:	e3a00000 	mov	r0, #0
400103b8:	e08b108b 	add	r1, fp, fp, lsl #1
400103bc:	e59f2010 	ldr	r2, [pc, #16]	; 400103d4 <_tx_trace_object_register+0x1a4>
400103c0:	e5922000 	ldr	r2, [r2]
400103c4:	e0821201 	add	r1, r2, r1, lsl #4
400103c8:	e2811010 	add	r1, r1, #16
400103cc:	e7c10009 	strb	r0, [r1, r9]
400103d0:	eaffffa0 	b	40010258 <_tx_trace_object_register+0x28>
400103d4:	40030e90 	.word	0x40030e90
400103d8:	40030e94 	.word	0x40030e94

400103dc <_tx_trace_object_unregister>:
400103dc:	e92d4070 	push	{r4, r5, r6, lr}
400103e0:	e1a04000 	mov	r4, r0
400103e4:	e59f007c 	ldr	r0, [pc, #124]	; 40010468 <_tx_trace_object_unregister+0x8c>
400103e8:	e5900000 	ldr	r0, [r0]
400103ec:	e3500000 	cmp	r0, #0
400103f0:	1a000000 	bne	400103f8 <_tx_trace_object_unregister+0x1c>
400103f4:	e8bd8070 	pop	{r4, r5, r6, pc}
400103f8:	e59f106c 	ldr	r1, [pc, #108]	; 4001046c <_tx_trace_object_unregister+0x90>
400103fc:	e5911000 	ldr	r1, [r1]
40010400:	e59f2060 	ldr	r2, [pc, #96]	; 40010468 <_tx_trace_object_unregister+0x8c>
40010404:	e5922000 	ldr	r2, [r2]
40010408:	e0410002 	sub	r0, r1, r2
4001040c:	e3a01030 	mov	r1, #48	; 0x30
40010410:	eb000256 	bl	40010d70 <__aeabi_idivmod>
40010414:	e1a05000 	mov	r5, r0
40010418:	e3a06000 	mov	r6, #0
4001041c:	ea00000d 	b	40010458 <_tx_trace_object_unregister+0x7c>
40010420:	e0860086 	add	r0, r6, r6, lsl #1
40010424:	e59f103c 	ldr	r1, [pc, #60]	; 40010468 <_tx_trace_object_unregister+0x8c>
40010428:	e5911000 	ldr	r1, [r1]
4001042c:	e0810200 	add	r0, r1, r0, lsl #4
40010430:	e5900004 	ldr	r0, [r0, #4]
40010434:	e1500004 	cmp	r0, r4
40010438:	1a000005 	bne	40010454 <_tx_trace_object_unregister+0x78>
4001043c:	e3a00001 	mov	r0, #1
40010440:	e0861086 	add	r1, r6, r6, lsl #1
40010444:	e59f201c 	ldr	r2, [pc, #28]	; 40010468 <_tx_trace_object_unregister+0x8c>
40010448:	e5922000 	ldr	r2, [r2]
4001044c:	e7c20201 	strb	r0, [r2, r1, lsl #4]
40010450:	ea000002 	b	40010460 <_tx_trace_object_unregister+0x84>
40010454:	e2866001 	add	r6, r6, #1
40010458:	e1560005 	cmp	r6, r5
4001045c:	3affffef 	bcc	40010420 <_tx_trace_object_unregister+0x44>
40010460:	e1a00000 	nop			; (mov r0, r0)
40010464:	eaffffe2 	b	400103f4 <_tx_trace_object_unregister+0x18>
40010468:	40030e90 	.word	0x40030e90
4001046c:	40030e94 	.word	0x40030e94

40010470 <_tx_thread_stack_build>:
40010470:	e5902010 	ldr	r2, [r0, #16]
40010474:	e3c22007 	bic	r2, r2, #7
40010478:	e242204c 	sub	r2, r2, #76	; 0x4c
4001047c:	e3a03001 	mov	r3, #1
40010480:	e5823000 	str	r3, [r2]
40010484:	e3a03000 	mov	r3, #0
40010488:	e5823008 	str	r3, [r2, #8]
4001048c:	e582300c 	str	r3, [r2, #12]
40010490:	e5823010 	str	r3, [r2, #16]
40010494:	e5823014 	str	r3, [r2, #20]
40010498:	e5823018 	str	r3, [r2, #24]
4001049c:	e582301c 	str	r3, [r2, #28]
400104a0:	e5823020 	str	r3, [r2, #32]
400104a4:	e5823024 	str	r3, [r2, #36]	; 0x24
400104a8:	e5823028 	str	r3, [r2, #40]	; 0x28
400104ac:	e582302c 	str	r3, [r2, #44]	; 0x2c
400104b0:	e590300c 	ldr	r3, [r0, #12]
400104b4:	e5823030 	str	r3, [r2, #48]	; 0x30
400104b8:	e3a03000 	mov	r3, #0
400104bc:	e5823034 	str	r3, [r2, #52]	; 0x34
400104c0:	e5823038 	str	r3, [r2, #56]	; 0x38
400104c4:	e582303c 	str	r3, [r2, #60]	; 0x3c
400104c8:	e5821040 	str	r1, [r2, #64]	; 0x40
400104cc:	e5823044 	str	r3, [r2, #68]	; 0x44
400104d0:	e10f1000 	mrs	r1, CPSR
400104d4:	e3c1109f 	bic	r1, r1, #159	; 0x9f
400104d8:	e3813013 	orr	r3, r1, #19
400104dc:	e5823004 	str	r3, [r2, #4]
400104e0:	e5802008 	str	r2, [r0, #8]
400104e4:	e12fff1e 	bx	lr

400104e8 <_tx_event_flags_cleanup>:
400104e8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400104ec:	e1a04000 	mov	r4, r0
400104f0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400104f4:	e10f5000 	mrs	r5, CPSR
400104f8:	e3856080 	orr	r6, r5, #128	; 0x80
400104fc:	e121f006 	msr	CPSR_c, r6
40010500:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010504:	e3500000 	cmp	r0, #0
40010508:	0a000026 	beq	400105a8 <_tx_event_flags_cleanup+0xc0>
4001050c:	e3570000 	cmp	r7, #0
40010510:	0a000024 	beq	400105a8 <_tx_event_flags_cleanup+0xc0>
40010514:	e5970000 	ldr	r0, [r7]
40010518:	e59f1090 	ldr	r1, [pc, #144]	; 400105b0 <_tx_event_flags_cleanup+0xc8>
4001051c:	e1500001 	cmp	r0, r1
40010520:	1a000020 	bne	400105a8 <_tx_event_flags_cleanup+0xc0>
40010524:	e3a00000 	mov	r0, #0
40010528:	e5840068 	str	r0, [r4, #104]	; 0x68
4001052c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010530:	e1500004 	cmp	r0, r4
40010534:	1a000002 	bne	40010544 <_tx_event_flags_cleanup+0x5c>
40010538:	e3a00000 	mov	r0, #0
4001053c:	e5870010 	str	r0, [r7, #16]
40010540:	ea000007 	b	40010564 <_tx_event_flags_cleanup+0x7c>
40010544:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010548:	e5870010 	str	r0, [r7, #16]
4001054c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010550:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010554:	e5810074 	str	r0, [r1, #116]	; 0x74
40010558:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001055c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010560:	e5810070 	str	r0, [r1, #112]	; 0x70
40010564:	e5970014 	ldr	r0, [r7, #20]
40010568:	e2400001 	sub	r0, r0, #1
4001056c:	e5870014 	str	r0, [r7, #20]
40010570:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010574:	e3500007 	cmp	r0, #7
40010578:	1a00000a 	bne	400105a8 <_tx_event_flags_cleanup+0xc0>
4001057c:	e3a00007 	mov	r0, #7
40010580:	e5840084 	str	r0, [r4, #132]	; 0x84
40010584:	e59f0028 	ldr	r0, [pc, #40]	; 400105b4 <_tx_event_flags_cleanup+0xcc>
40010588:	e5900000 	ldr	r0, [r0]
4001058c:	e2800001 	add	r0, r0, #1
40010590:	e59f101c 	ldr	r1, [pc, #28]	; 400105b4 <_tx_event_flags_cleanup+0xcc>
40010594:	e5810000 	str	r0, [r1]
40010598:	e121f005 	msr	CPSR_c, r5
4001059c:	e1a00004 	mov	r0, r4
400105a0:	ebfffbcc 	bl	4000f4d8 <_tx_thread_system_resume>
400105a4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400105a8:	e121f005 	msr	CPSR_c, r5
400105ac:	eafffffc 	b	400105a4 <_tx_event_flags_cleanup+0xbc>
400105b0:	4456444e 	.word	0x4456444e
400105b4:	40030e50 	.word	0x40030e50

400105b8 <_tx_mutex_cleanup>:
400105b8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400105bc:	e1a04000 	mov	r4, r0
400105c0:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
400105c4:	e10f5000 	mrs	r5, CPSR
400105c8:	e3856080 	orr	r6, r5, #128	; 0x80
400105cc:	e121f006 	msr	CPSR_c, r6
400105d0:	e5940068 	ldr	r0, [r4, #104]	; 0x68
400105d4:	e3500000 	cmp	r0, #0
400105d8:	0a000026 	beq	40010678 <_tx_mutex_cleanup+0xc0>
400105dc:	e3570000 	cmp	r7, #0
400105e0:	0a000024 	beq	40010678 <_tx_mutex_cleanup+0xc0>
400105e4:	e5970000 	ldr	r0, [r7]
400105e8:	e59f1090 	ldr	r1, [pc, #144]	; 40010680 <_tx_mutex_cleanup+0xc8>
400105ec:	e1500001 	cmp	r0, r1
400105f0:	1a000020 	bne	40010678 <_tx_mutex_cleanup+0xc0>
400105f4:	e3a00000 	mov	r0, #0
400105f8:	e5840068 	str	r0, [r4, #104]	; 0x68
400105fc:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010600:	e1500004 	cmp	r0, r4
40010604:	1a000002 	bne	40010614 <_tx_mutex_cleanup+0x5c>
40010608:	e3a00000 	mov	r0, #0
4001060c:	e587001c 	str	r0, [r7, #28]
40010610:	ea000007 	b	40010634 <_tx_mutex_cleanup+0x7c>
40010614:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010618:	e587001c 	str	r0, [r7, #28]
4001061c:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010620:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010624:	e5810074 	str	r0, [r1, #116]	; 0x74
40010628:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001062c:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010630:	e5810070 	str	r0, [r1, #112]	; 0x70
40010634:	e5970020 	ldr	r0, [r7, #32]
40010638:	e2400001 	sub	r0, r0, #1
4001063c:	e5870020 	str	r0, [r7, #32]
40010640:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010644:	e350000d 	cmp	r0, #13
40010648:	1a00000a 	bne	40010678 <_tx_mutex_cleanup+0xc0>
4001064c:	e3a0001d 	mov	r0, #29
40010650:	e5840084 	str	r0, [r4, #132]	; 0x84
40010654:	e59f0028 	ldr	r0, [pc, #40]	; 40010684 <_tx_mutex_cleanup+0xcc>
40010658:	e5900000 	ldr	r0, [r0]
4001065c:	e2800001 	add	r0, r0, #1
40010660:	e59f101c 	ldr	r1, [pc, #28]	; 40010684 <_tx_mutex_cleanup+0xcc>
40010664:	e5810000 	str	r0, [r1]
40010668:	e121f005 	msr	CPSR_c, r5
4001066c:	e1a00004 	mov	r0, r4
40010670:	ebfffb98 	bl	4000f4d8 <_tx_thread_system_resume>
40010674:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40010678:	e121f005 	msr	CPSR_c, r5
4001067c:	eafffffc 	b	40010674 <_tx_mutex_cleanup+0xbc>
40010680:	4d555445 	.word	0x4d555445
40010684:	40030e50 	.word	0x40030e50

40010688 <_tx_mutex_prioritize>:
40010688:	e92d43f8 	push	{r3, r4, r5, r6, r7, r8, r9, lr}
4001068c:	e1a04000 	mov	r4, r0
40010690:	e10f5000 	mrs	r5, CPSR
40010694:	e3856080 	orr	r6, r5, #128	; 0x80
40010698:	e121f006 	msr	CPSR_c, r6
4001069c:	e59f1234 	ldr	r1, [pc, #564]	; 400108d8 <_tx_mutex_prioritize+0x250>
400106a0:	e5910000 	ldr	r0, [r1]
400106a4:	e3500000 	cmp	r0, #0
400106a8:	0a000032 	beq	40010778 <_tx_mutex_prioritize+0xf0>
400106ac:	e59f1228 	ldr	r1, [pc, #552]	; 400108dc <_tx_mutex_prioritize+0x254>
400106b0:	e5911000 	ldr	r1, [r1]
400106b4:	e2811001 	add	r1, r1, #1
400106b8:	e59f221c 	ldr	r2, [pc, #540]	; 400108dc <_tx_mutex_prioritize+0x254>
400106bc:	e5821000 	str	r1, [r2]
400106c0:	e580100c 	str	r1, [r0, #12]
400106c4:	e59f1214 	ldr	r1, [pc, #532]	; 400108e0 <_tx_mutex_prioritize+0x258>
400106c8:	e5911000 	ldr	r1, [r1]
400106cc:	e3510000 	cmp	r1, #0
400106d0:	1a000006 	bne	400106f0 <_tx_mutex_prioritize+0x68>
400106d4:	e59f1208 	ldr	r1, [pc, #520]	; 400108e4 <_tx_mutex_prioritize+0x25c>
400106d8:	e5911000 	ldr	r1, [r1]
400106dc:	e5801000 	str	r1, [r0]
400106e0:	e5901000 	ldr	r1, [r0]
400106e4:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400106e8:	e5801004 	str	r1, [r0, #4]
400106ec:	ea00000d 	b	40010728 <_tx_mutex_prioritize+0xa0>
400106f0:	e59f11e8 	ldr	r1, [pc, #488]	; 400108e0 <_tx_mutex_prioritize+0x258>
400106f4:	e5911000 	ldr	r1, [r1]
400106f8:	e59f21e8 	ldr	r2, [pc, #488]	; 400108e8 <_tx_mutex_prioritize+0x260>
400106fc:	e1510002 	cmp	r1, r2
40010700:	2a000004 	bcs	40010718 <_tx_mutex_prioritize+0x90>
40010704:	e3e01000 	mvn	r1, #0
40010708:	e5801000 	str	r1, [r0]
4001070c:	e3a01000 	mov	r1, #0
40010710:	e5801004 	str	r1, [r0, #4]
40010714:	ea000003 	b	40010728 <_tx_mutex_prioritize+0xa0>
40010718:	e59f11c8 	ldr	r1, [pc, #456]	; 400108e8 <_tx_mutex_prioritize+0x260>
4001071c:	e5801000 	str	r1, [r0]
40010720:	e3a01000 	mov	r1, #0
40010724:	e5801004 	str	r1, [r0, #4]
40010728:	e3a01038 	mov	r1, #56	; 0x38
4001072c:	e5801008 	str	r1, [r0, #8]
40010730:	e5804010 	str	r4, [r0, #16]
40010734:	e5941020 	ldr	r1, [r4, #32]
40010738:	e5801014 	str	r1, [r0, #20]
4001073c:	e580d018 	str	sp, [r0, #24]
40010740:	e3a01000 	mov	r1, #0
40010744:	e580101c 	str	r1, [r0, #28]
40010748:	e2800020 	add	r0, r0, #32
4001074c:	e59f1198 	ldr	r1, [pc, #408]	; 400108ec <_tx_mutex_prioritize+0x264>
40010750:	e5911000 	ldr	r1, [r1]
40010754:	e1500001 	cmp	r0, r1
40010758:	3a000001 	bcc	40010764 <_tx_mutex_prioritize+0xdc>
4001075c:	e59f118c 	ldr	r1, [pc, #396]	; 400108f0 <_tx_mutex_prioritize+0x268>
40010760:	e5910000 	ldr	r0, [r1]
40010764:	e59f116c 	ldr	r1, [pc, #364]	; 400108d8 <_tx_mutex_prioritize+0x250>
40010768:	e5810000 	str	r0, [r1]
4001076c:	e59f1180 	ldr	r1, [pc, #384]	; 400108f4 <_tx_mutex_prioritize+0x26c>
40010770:	e5911000 	ldr	r1, [r1]
40010774:	e5810020 	str	r0, [r1, #32]
40010778:	e5940020 	ldr	r0, [r4, #32]
4001077c:	e3500002 	cmp	r0, #2
40010780:	2a000002 	bcs	40010790 <_tx_mutex_prioritize+0x108>
40010784:	e121f005 	msr	CPSR_c, r5
40010788:	e3a00000 	mov	r0, #0
4001078c:	e8bd83f8 	pop	{r3, r4, r5, r6, r7, r8, r9, pc}
40010790:	e5940020 	ldr	r0, [r4, #32]
40010794:	e3500002 	cmp	r0, #2
40010798:	1a00000c 	bne	400107d0 <_tx_mutex_prioritize+0x148>
4001079c:	e594001c 	ldr	r0, [r4, #28]
400107a0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400107a4:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
400107a8:	e594101c 	ldr	r1, [r4, #28]
400107ac:	e591102c 	ldr	r1, [r1, #44]	; 0x2c
400107b0:	e1500001 	cmp	r0, r1
400107b4:	2a000002 	bcs	400107c4 <_tx_mutex_prioritize+0x13c>
400107b8:	e594001c 	ldr	r0, [r4, #28]
400107bc:	e5900070 	ldr	r0, [r0, #112]	; 0x70
400107c0:	e584001c 	str	r0, [r4, #28]
400107c4:	e121f005 	msr	CPSR_c, r5
400107c8:	e3a00000 	mov	r0, #0
400107cc:	eaffffee 	b	4001078c <_tx_mutex_prioritize+0x104>
400107d0:	e594901c 	ldr	r9, [r4, #28]
400107d4:	e5940020 	ldr	r0, [r4, #32]
400107d8:	e58d0000 	str	r0, [sp]
400107dc:	e594801c 	ldr	r8, [r4, #28]
400107e0:	e5987070 	ldr	r7, [r8, #112]	; 0x70
400107e4:	e59f010c 	ldr	r0, [pc, #268]	; 400108f8 <_tx_mutex_prioritize+0x270>
400107e8:	e5900000 	ldr	r0, [r0]
400107ec:	e2800001 	add	r0, r0, #1
400107f0:	e59f1100 	ldr	r1, [pc, #256]	; 400108f8 <_tx_mutex_prioritize+0x270>
400107f4:	e5810000 	str	r0, [r1]
400107f8:	e1a00000 	nop			; (mov r0, r0)
400107fc:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
40010800:	e598102c 	ldr	r1, [r8, #44]	; 0x2c
40010804:	e1500001 	cmp	r0, r1
40010808:	2a000000 	bcs	40010810 <_tx_mutex_prioritize+0x188>
4001080c:	e1a08007 	mov	r8, r7
40010810:	e121f005 	msr	CPSR_c, r5
40010814:	e10f5000 	mrs	r5, CPSR
40010818:	e3856080 	orr	r6, r5, #128	; 0x80
4001081c:	e121f006 	msr	CPSR_c, r6
40010820:	e594001c 	ldr	r0, [r4, #28]
40010824:	e1500009 	cmp	r0, r9
40010828:	1a000005 	bne	40010844 <_tx_mutex_prioritize+0x1bc>
4001082c:	e5940020 	ldr	r0, [r4, #32]
40010830:	e59d1000 	ldr	r1, [sp]
40010834:	e1500001 	cmp	r0, r1
40010838:	1a000001 	bne	40010844 <_tx_mutex_prioritize+0x1bc>
4001083c:	e5977070 	ldr	r7, [r7, #112]	; 0x70
40010840:	ea000004 	b	40010858 <_tx_mutex_prioritize+0x1d0>
40010844:	e594901c 	ldr	r9, [r4, #28]
40010848:	e5940020 	ldr	r0, [r4, #32]
4001084c:	e58d0000 	str	r0, [sp]
40010850:	e594801c 	ldr	r8, [r4, #28]
40010854:	e5987070 	ldr	r7, [r8, #112]	; 0x70
40010858:	e594001c 	ldr	r0, [r4, #28]
4001085c:	e1500007 	cmp	r0, r7
40010860:	1affffe5 	bne	400107fc <_tx_mutex_prioritize+0x174>
40010864:	e59f008c 	ldr	r0, [pc, #140]	; 400108f8 <_tx_mutex_prioritize+0x270>
40010868:	e5900000 	ldr	r0, [r0]
4001086c:	e2400001 	sub	r0, r0, #1
40010870:	e59f1080 	ldr	r1, [pc, #128]	; 400108f8 <_tx_mutex_prioritize+0x270>
40010874:	e5810000 	str	r0, [r1]
40010878:	e594001c 	ldr	r0, [r4, #28]
4001087c:	e1500008 	cmp	r0, r8
40010880:	0a000010 	beq	400108c8 <_tx_mutex_prioritize+0x240>
40010884:	e5980074 	ldr	r0, [r8, #116]	; 0x74
40010888:	e5981070 	ldr	r1, [r8, #112]	; 0x70
4001088c:	e5810074 	str	r0, [r1, #116]	; 0x74
40010890:	e5980070 	ldr	r0, [r8, #112]	; 0x70
40010894:	e5981074 	ldr	r1, [r8, #116]	; 0x74
40010898:	e5810070 	str	r0, [r1, #112]	; 0x70
4001089c:	e594001c 	ldr	r0, [r4, #28]
400108a0:	e5880070 	str	r0, [r8, #112]	; 0x70
400108a4:	e594001c 	ldr	r0, [r4, #28]
400108a8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400108ac:	e5880074 	str	r0, [r8, #116]	; 0x74
400108b0:	e594001c 	ldr	r0, [r4, #28]
400108b4:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400108b8:	e5808070 	str	r8, [r0, #112]	; 0x70
400108bc:	e594001c 	ldr	r0, [r4, #28]
400108c0:	e5808074 	str	r8, [r0, #116]	; 0x74
400108c4:	e584801c 	str	r8, [r4, #28]
400108c8:	e121f005 	msr	CPSR_c, r5
400108cc:	ebfffad5 	bl	4000f428 <_tx_thread_system_preempt_check>
400108d0:	e3a00000 	mov	r0, #0
400108d4:	eaffffac 	b	4001078c <_tx_mutex_prioritize+0x104>
400108d8:	40030ea0 	.word	0x40030ea0
400108dc:	40030ea4 	.word	0x40030ea4
400108e0:	40030e2c 	.word	0x40030e2c
400108e4:	40030e34 	.word	0x40030e34
400108e8:	f0f0f0f0 	.word	0xf0f0f0f0
400108ec:	40030e9c 	.word	0x40030e9c
400108f0:	40030e98 	.word	0x40030e98
400108f4:	40030e8c 	.word	0x40030e8c
400108f8:	40030e50 	.word	0x40030e50

400108fc <_tx_queue_cleanup>:
400108fc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40010900:	e1a04000 	mov	r4, r0
40010904:	e594706c 	ldr	r7, [r4, #108]	; 0x6c
40010908:	e10f5000 	mrs	r5, CPSR
4001090c:	e3856080 	orr	r6, r5, #128	; 0x80
40010910:	e121f006 	msr	CPSR_c, r6
40010914:	e5940068 	ldr	r0, [r4, #104]	; 0x68
40010918:	e3500000 	cmp	r0, #0
4001091c:	0a00002c 	beq	400109d4 <_tx_queue_cleanup+0xd8>
40010920:	e3570000 	cmp	r7, #0
40010924:	0a00002a 	beq	400109d4 <_tx_queue_cleanup+0xd8>
40010928:	e5970000 	ldr	r0, [r7]
4001092c:	e59f10a8 	ldr	r1, [pc, #168]	; 400109dc <_tx_queue_cleanup+0xe0>
40010930:	e1500001 	cmp	r0, r1
40010934:	1a000026 	bne	400109d4 <_tx_queue_cleanup+0xd8>
40010938:	e3a00000 	mov	r0, #0
4001093c:	e5840068 	str	r0, [r4, #104]	; 0x68
40010940:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010944:	e1500004 	cmp	r0, r4
40010948:	1a000002 	bne	40010958 <_tx_queue_cleanup+0x5c>
4001094c:	e3a00000 	mov	r0, #0
40010950:	e5870028 	str	r0, [r7, #40]	; 0x28
40010954:	ea000007 	b	40010978 <_tx_queue_cleanup+0x7c>
40010958:	e5940070 	ldr	r0, [r4, #112]	; 0x70
4001095c:	e5870028 	str	r0, [r7, #40]	; 0x28
40010960:	e5940074 	ldr	r0, [r4, #116]	; 0x74
40010964:	e5941070 	ldr	r1, [r4, #112]	; 0x70
40010968:	e5810074 	str	r0, [r1, #116]	; 0x74
4001096c:	e5940070 	ldr	r0, [r4, #112]	; 0x70
40010970:	e5941074 	ldr	r1, [r4, #116]	; 0x74
40010974:	e5810070 	str	r0, [r1, #112]	; 0x70
40010978:	e597002c 	ldr	r0, [r7, #44]	; 0x2c
4001097c:	e2400001 	sub	r0, r0, #1
40010980:	e587002c 	str	r0, [r7, #44]	; 0x2c
40010984:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40010988:	e3500005 	cmp	r0, #5
4001098c:	1a000010 	bne	400109d4 <_tx_queue_cleanup+0xd8>
40010990:	e5970010 	ldr	r0, [r7, #16]
40010994:	e3500000 	cmp	r0, #0
40010998:	0a000002 	beq	400109a8 <_tx_queue_cleanup+0xac>
4001099c:	e3a0000b 	mov	r0, #11
400109a0:	e5840084 	str	r0, [r4, #132]	; 0x84
400109a4:	ea000001 	b	400109b0 <_tx_queue_cleanup+0xb4>
400109a8:	e3a0000a 	mov	r0, #10
400109ac:	e5840084 	str	r0, [r4, #132]	; 0x84
400109b0:	e59f0028 	ldr	r0, [pc, #40]	; 400109e0 <_tx_queue_cleanup+0xe4>
400109b4:	e5900000 	ldr	r0, [r0]
400109b8:	e2800001 	add	r0, r0, #1
400109bc:	e59f101c 	ldr	r1, [pc, #28]	; 400109e0 <_tx_queue_cleanup+0xe4>
400109c0:	e5810000 	str	r0, [r1]
400109c4:	e121f005 	msr	CPSR_c, r5
400109c8:	e1a00004 	mov	r0, r4
400109cc:	ebfffac1 	bl	4000f4d8 <_tx_thread_system_resume>
400109d0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400109d4:	e121f005 	msr	CPSR_c, r5
400109d8:	eafffffc 	b	400109d0 <_tx_queue_cleanup+0xd4>
400109dc:	51554555 	.word	0x51554555
400109e0:	40030e50 	.word	0x40030e50

400109e4 <strcpy>:
400109e4:	e0202001 	eor	r2, r0, r1
400109e8:	e1a0c000 	mov	ip, r0
400109ec:	e3120003 	tst	r2, #3
400109f0:	1a000032 	bne	40010ac0 <strcpy+0xdc>
400109f4:	e3110003 	tst	r1, #3
400109f8:	1a000021 	bne	40010a84 <strcpy+0xa0>
400109fc:	e52d5004 	push	{r5}		; (str r5, [sp, #-4]!)
40010a00:	e3a05001 	mov	r5, #1
40010a04:	e1855405 	orr	r5, r5, r5, lsl #8
40010a08:	e1855805 	orr	r5, r5, r5, lsl #16
40010a0c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)
40010a10:	e3110004 	tst	r1, #4
40010a14:	e4913004 	ldr	r3, [r1], #4
40010a18:	0a000005 	beq	40010a34 <strcpy+0x50>
40010a1c:	e0432005 	sub	r2, r3, r5
40010a20:	e1d22003 	bics	r2, r2, r3
40010a24:	e1120385 	tst	r2, r5, lsl #7
40010a28:	048c3004 	streq	r3, [ip], #4
40010a2c:	04913004 	ldreq	r3, [r1], #4
40010a30:	1a00000c 	bne	40010a68 <strcpy+0x84>
40010a34:	e4914004 	ldr	r4, [r1], #4
40010a38:	e0432005 	sub	r2, r3, r5
40010a3c:	e1d22003 	bics	r2, r2, r3
40010a40:	e1120385 	tst	r2, r5, lsl #7
40010a44:	e0442005 	sub	r2, r4, r5
40010a48:	1a000006 	bne	40010a68 <strcpy+0x84>
40010a4c:	e48c3004 	str	r3, [ip], #4
40010a50:	e1d22004 	bics	r2, r2, r4
40010a54:	e1120385 	tst	r2, r5, lsl #7
40010a58:	04913004 	ldreq	r3, [r1], #4
40010a5c:	048c4004 	streq	r4, [ip], #4
40010a60:	0afffff3 	beq	40010a34 <strcpy+0x50>
40010a64:	e1a03004 	mov	r3, r4
40010a68:	e4cc3001 	strb	r3, [ip], #1
40010a6c:	e31300ff 	tst	r3, #255	; 0xff
40010a70:	e1a03463 	ror	r3, r3, #8
40010a74:	1afffffb 	bne	40010a68 <strcpy+0x84>
40010a78:	e49d4004 	pop	{r4}		; (ldr r4, [sp], #4)
40010a7c:	e49d5004 	pop	{r5}		; (ldr r5, [sp], #4)
40010a80:	e12fff1e 	bx	lr
40010a84:	e3110001 	tst	r1, #1
40010a88:	0a000003 	beq	40010a9c <strcpy+0xb8>
40010a8c:	e4d12001 	ldrb	r2, [r1], #1
40010a90:	e4cc2001 	strb	r2, [ip], #1
40010a94:	e3520000 	cmp	r2, #0
40010a98:	012fff1e 	bxeq	lr
40010a9c:	e3110002 	tst	r1, #2
40010aa0:	0affffd5 	beq	400109fc <strcpy+0x18>
40010aa4:	e0d120b2 	ldrh	r2, [r1], #2
40010aa8:	e31200ff 	tst	r2, #255	; 0xff
40010aac:	10cc20b2 	strhne	r2, [ip], #2
40010ab0:	05cc2000 	strbeq	r2, [ip]
40010ab4:	13120cff 	tstne	r2, #65280	; 0xff00
40010ab8:	1affffcf 	bne	400109fc <strcpy+0x18>
40010abc:	e12fff1e 	bx	lr
40010ac0:	e4d12001 	ldrb	r2, [r1], #1
40010ac4:	e4cc2001 	strb	r2, [ip], #1
40010ac8:	e3520000 	cmp	r2, #0
40010acc:	1afffffb 	bne	40010ac0 <strcpy+0xdc>
40010ad0:	e12fff1e 	bx	lr

40010ad4 <strlen>:
40010ad4:	e3c01003 	bic	r1, r0, #3
40010ad8:	e2100003 	ands	r0, r0, #3
40010adc:	e2600000 	rsb	r0, r0, #0
40010ae0:	e4913004 	ldr	r3, [r1], #4
40010ae4:	e280c004 	add	ip, r0, #4
40010ae8:	e1a0c18c 	lsl	ip, ip, #3
40010aec:	e3e02000 	mvn	r2, #0
40010af0:	11833c32 	orrne	r3, r3, r2, lsr ip
40010af4:	e3a0c001 	mov	ip, #1
40010af8:	e18cc40c 	orr	ip, ip, ip, lsl #8
40010afc:	e18cc80c 	orr	ip, ip, ip, lsl #16
40010b00:	e043200c 	sub	r2, r3, ip
40010b04:	e1c22003 	bic	r2, r2, r3
40010b08:	e012238c 	ands	r2, r2, ip, lsl #7
40010b0c:	04913004 	ldreq	r3, [r1], #4
40010b10:	02800004 	addeq	r0, r0, #4
40010b14:	0afffff9 	beq	40010b00 <strlen+0x2c>
40010b18:	e31300ff 	tst	r3, #255	; 0xff
40010b1c:	12800001 	addne	r0, r0, #1
40010b20:	13130cff 	tstne	r3, #65280	; 0xff00
40010b24:	12800001 	addne	r0, r0, #1
40010b28:	131308ff 	tstne	r3, #16711680	; 0xff0000
40010b2c:	12800001 	addne	r0, r0, #1
40010b30:	e12fff1e 	bx	lr

40010b34 <__aeabi_uidiv>:
40010b34:	e2512001 	subs	r2, r1, #1
40010b38:	012fff1e 	bxeq	lr
40010b3c:	3a000036 	bcc	40010c1c <__aeabi_uidiv+0xe8>
40010b40:	e1500001 	cmp	r0, r1
40010b44:	9a000022 	bls	40010bd4 <__aeabi_uidiv+0xa0>
40010b48:	e1110002 	tst	r1, r2
40010b4c:	0a000023 	beq	40010be0 <__aeabi_uidiv+0xac>
40010b50:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010b54:	01a01181 	lsleq	r1, r1, #3
40010b58:	03a03008 	moveq	r3, #8
40010b5c:	13a03001 	movne	r3, #1
40010b60:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010b64:	31510000 	cmpcc	r1, r0
40010b68:	31a01201 	lslcc	r1, r1, #4
40010b6c:	31a03203 	lslcc	r3, r3, #4
40010b70:	3afffffa 	bcc	40010b60 <__aeabi_uidiv+0x2c>
40010b74:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010b78:	31510000 	cmpcc	r1, r0
40010b7c:	31a01081 	lslcc	r1, r1, #1
40010b80:	31a03083 	lslcc	r3, r3, #1
40010b84:	3afffffa 	bcc	40010b74 <__aeabi_uidiv+0x40>
40010b88:	e3a02000 	mov	r2, #0
40010b8c:	e1500001 	cmp	r0, r1
40010b90:	20400001 	subcs	r0, r0, r1
40010b94:	21822003 	orrcs	r2, r2, r3
40010b98:	e15000a1 	cmp	r0, r1, lsr #1
40010b9c:	204000a1 	subcs	r0, r0, r1, lsr #1
40010ba0:	218220a3 	orrcs	r2, r2, r3, lsr #1
40010ba4:	e1500121 	cmp	r0, r1, lsr #2
40010ba8:	20400121 	subcs	r0, r0, r1, lsr #2
40010bac:	21822123 	orrcs	r2, r2, r3, lsr #2
40010bb0:	e15001a1 	cmp	r0, r1, lsr #3
40010bb4:	204001a1 	subcs	r0, r0, r1, lsr #3
40010bb8:	218221a3 	orrcs	r2, r2, r3, lsr #3
40010bbc:	e3500000 	cmp	r0, #0
40010bc0:	11b03223 	lsrsne	r3, r3, #4
40010bc4:	11a01221 	lsrne	r1, r1, #4
40010bc8:	1affffef 	bne	40010b8c <__aeabi_uidiv+0x58>
40010bcc:	e1a00002 	mov	r0, r2
40010bd0:	e12fff1e 	bx	lr
40010bd4:	03a00001 	moveq	r0, #1
40010bd8:	13a00000 	movne	r0, #0
40010bdc:	e12fff1e 	bx	lr
40010be0:	e3510801 	cmp	r1, #65536	; 0x10000
40010be4:	21a01821 	lsrcs	r1, r1, #16
40010be8:	23a02010 	movcs	r2, #16
40010bec:	33a02000 	movcc	r2, #0
40010bf0:	e3510c01 	cmp	r1, #256	; 0x100
40010bf4:	21a01421 	lsrcs	r1, r1, #8
40010bf8:	22822008 	addcs	r2, r2, #8
40010bfc:	e3510010 	cmp	r1, #16
40010c00:	21a01221 	lsrcs	r1, r1, #4
40010c04:	22822004 	addcs	r2, r2, #4
40010c08:	e3510004 	cmp	r1, #4
40010c0c:	82822003 	addhi	r2, r2, #3
40010c10:	908220a1 	addls	r2, r2, r1, lsr #1
40010c14:	e1a00230 	lsr	r0, r0, r2
40010c18:	e12fff1e 	bx	lr
40010c1c:	e3500000 	cmp	r0, #0
40010c20:	13e00000 	mvnne	r0, #0
40010c24:	ea000059 	b	40010d90 <__aeabi_idiv0>

40010c28 <__aeabi_uidivmod>:
40010c28:	e3510000 	cmp	r1, #0
40010c2c:	0afffffa 	beq	40010c1c <__aeabi_uidiv+0xe8>
40010c30:	e92d4003 	push	{r0, r1, lr}
40010c34:	ebffffbe 	bl	40010b34 <__aeabi_uidiv>
40010c38:	e8bd4006 	pop	{r1, r2, lr}
40010c3c:	e0030092 	mul	r3, r2, r0
40010c40:	e0411003 	sub	r1, r1, r3
40010c44:	e12fff1e 	bx	lr

40010c48 <__aeabi_idiv>:
40010c48:	e3510000 	cmp	r1, #0
40010c4c:	0a000043 	beq	40010d60 <.divsi3_skip_div0_test+0x110>

40010c50 <.divsi3_skip_div0_test>:
40010c50:	e020c001 	eor	ip, r0, r1
40010c54:	42611000 	rsbmi	r1, r1, #0
40010c58:	e2512001 	subs	r2, r1, #1
40010c5c:	0a000027 	beq	40010d00 <.divsi3_skip_div0_test+0xb0>
40010c60:	e1b03000 	movs	r3, r0
40010c64:	42603000 	rsbmi	r3, r0, #0
40010c68:	e1530001 	cmp	r3, r1
40010c6c:	9a000026 	bls	40010d0c <.divsi3_skip_div0_test+0xbc>
40010c70:	e1110002 	tst	r1, r2
40010c74:	0a000028 	beq	40010d1c <.divsi3_skip_div0_test+0xcc>
40010c78:	e311020e 	tst	r1, #-536870912	; 0xe0000000
40010c7c:	01a01181 	lsleq	r1, r1, #3
40010c80:	03a02008 	moveq	r2, #8
40010c84:	13a02001 	movne	r2, #1
40010c88:	e3510201 	cmp	r1, #268435456	; 0x10000000
40010c8c:	31510003 	cmpcc	r1, r3
40010c90:	31a01201 	lslcc	r1, r1, #4
40010c94:	31a02202 	lslcc	r2, r2, #4
40010c98:	3afffffa 	bcc	40010c88 <.divsi3_skip_div0_test+0x38>
40010c9c:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
40010ca0:	31510003 	cmpcc	r1, r3
40010ca4:	31a01081 	lslcc	r1, r1, #1
40010ca8:	31a02082 	lslcc	r2, r2, #1
40010cac:	3afffffa 	bcc	40010c9c <.divsi3_skip_div0_test+0x4c>
40010cb0:	e3a00000 	mov	r0, #0
40010cb4:	e1530001 	cmp	r3, r1
40010cb8:	20433001 	subcs	r3, r3, r1
40010cbc:	21800002 	orrcs	r0, r0, r2
40010cc0:	e15300a1 	cmp	r3, r1, lsr #1
40010cc4:	204330a1 	subcs	r3, r3, r1, lsr #1
40010cc8:	218000a2 	orrcs	r0, r0, r2, lsr #1
40010ccc:	e1530121 	cmp	r3, r1, lsr #2
40010cd0:	20433121 	subcs	r3, r3, r1, lsr #2
40010cd4:	21800122 	orrcs	r0, r0, r2, lsr #2
40010cd8:	e15301a1 	cmp	r3, r1, lsr #3
40010cdc:	204331a1 	subcs	r3, r3, r1, lsr #3
40010ce0:	218001a2 	orrcs	r0, r0, r2, lsr #3
40010ce4:	e3530000 	cmp	r3, #0
40010ce8:	11b02222 	lsrsne	r2, r2, #4
40010cec:	11a01221 	lsrne	r1, r1, #4
40010cf0:	1affffef 	bne	40010cb4 <.divsi3_skip_div0_test+0x64>
40010cf4:	e35c0000 	cmp	ip, #0
40010cf8:	42600000 	rsbmi	r0, r0, #0
40010cfc:	e12fff1e 	bx	lr
40010d00:	e13c0000 	teq	ip, r0
40010d04:	42600000 	rsbmi	r0, r0, #0
40010d08:	e12fff1e 	bx	lr
40010d0c:	33a00000 	movcc	r0, #0
40010d10:	01a00fcc 	asreq	r0, ip, #31
40010d14:	03800001 	orreq	r0, r0, #1
40010d18:	e12fff1e 	bx	lr
40010d1c:	e3510801 	cmp	r1, #65536	; 0x10000
40010d20:	21a01821 	lsrcs	r1, r1, #16
40010d24:	23a02010 	movcs	r2, #16
40010d28:	33a02000 	movcc	r2, #0
40010d2c:	e3510c01 	cmp	r1, #256	; 0x100
40010d30:	21a01421 	lsrcs	r1, r1, #8
40010d34:	22822008 	addcs	r2, r2, #8
40010d38:	e3510010 	cmp	r1, #16
40010d3c:	21a01221 	lsrcs	r1, r1, #4
40010d40:	22822004 	addcs	r2, r2, #4
40010d44:	e3510004 	cmp	r1, #4
40010d48:	82822003 	addhi	r2, r2, #3
40010d4c:	908220a1 	addls	r2, r2, r1, lsr #1
40010d50:	e35c0000 	cmp	ip, #0
40010d54:	e1a00233 	lsr	r0, r3, r2
40010d58:	42600000 	rsbmi	r0, r0, #0
40010d5c:	e12fff1e 	bx	lr
40010d60:	e3500000 	cmp	r0, #0
40010d64:	c3e00102 	mvngt	r0, #-2147483648	; 0x80000000
40010d68:	b3a00102 	movlt	r0, #-2147483648	; 0x80000000
40010d6c:	ea000007 	b	40010d90 <__aeabi_idiv0>

40010d70 <__aeabi_idivmod>:
40010d70:	e3510000 	cmp	r1, #0
40010d74:	0afffff9 	beq	40010d60 <.divsi3_skip_div0_test+0x110>
40010d78:	e92d4003 	push	{r0, r1, lr}
40010d7c:	ebffffb3 	bl	40010c50 <.divsi3_skip_div0_test>
40010d80:	e8bd4006 	pop	{r1, r2, lr}
40010d84:	e0030092 	mul	r3, r2, r0
40010d88:	e0411003 	sub	r1, r1, r3
40010d8c:	e12fff1e 	bx	lr

40010d90 <__aeabi_idiv0>:
40010d90:	e12fff1e 	bx	lr

40010d94 <DelayArray>:
40010d94:	010402bc 01040104 010402bc 01040104     ................
40010da4:	01040104 01040104 01040104 01040104     ................
40010db4:	02bc02bc 012c0190 012c012c 0104012c     ......,.,.,.,...
40010dc4:	02bc0104 010402bc 010402bc 010401f4     ................
40010dd4:	01040104 01900190 01040190 01040104     ................
40010de4:	01040104 01040104 00000000 00000000     ................
	...
40010e14:	20656854 74736574 646d6320 25207571     The test cmdqu %
40010e24:	0a0d2064 00000000 6d6d6f43 20646e61     d ......Command 
40010e34:	75657551 73252065 61747320 25206574     Queue %s state %
40010e44:	000a0d64 6d6d6f43 20646e61 75657551     d...Command Queu
40010e54:	68632065 206b6365 75657571 20444965     e check queueID 
40010e64:	73206425 74726174 20646441 78257830     %d startAdd 0x%x
40010e74:	646e6520 20646441 78257830 69727720      endAdd 0x%x wri
40010e84:	30206574 20782578 64616572 25783020     te 0x%x read 0x%
40010e94:	75712078 46657565 2067616c 0a0d6425     x queueFlag %d..
40010ea4:	00000000 6d6d6f43 20646e61 75657551     ....Command Queu
40010eb4:	68632065 206b6365 49646d63 64252044     e check cmdID %d
40010ec4:	646d4320 20736544 78257830 65727020      CmdDes 0x%x pre
40010ed4:	756f6976 78302073 6e207825 20747865     vious 0x%x next 
40010ee4:	78257830 78644920 20642520 66646d63     0x%x Idx %d cmdf
40010ef4:	2067616c 0a0d6425 00000000 20433249     lag %d......I2C 
40010f04:	6d6d6f63 20646e61 75657571 00000065     command queue...
40010f14:	6d6d6f43 20646e61 75657551 65732065     Command Queue se
40010f24:	6d632074 20444964 43206425 6544646d     t cmdID %d CmdDe
40010f34:	78302073 6e207825 20747865 78257830     s 0x%x next 0x%x
40010f44:	646d6320 67616c66 20642520 61746164      cmdflag %d data
40010f54:	20786449 64206425 20617461 78257830     Idx %d data 0x%x
40010f64:	00000a0d                                ....

40010f68 <CyFxUSBDeviceDscr>:
40010f68:	02000112 400102ef 30621bbd 02010000     .......@..b0....
40010f78:	00000100                                ....

40010f7c <CyFxUSBDeviceDscrSS>:
40010f7c:	03000112 090102ef 30621bbd 02010000     ..........b0....
40010f8c:	00000100                                ....

40010f90 <CyFxUSBDeviceQualDscr>:
40010f90:	0200060a 400102ef 00000001              .......@....

40010f9c <CyFxUSBFSConfigDscr>:
40010f9c:	00090209 80000100 00000032              ........2...

40010fa8 <CyFxUSBHSConfigDscr>:
40010fa8:	00ff0209 80000102 000b08fa 00030e02     ................
40010fb8:	00040900 010e0100 240d0000 50010001     ...........$...P
40010fc8:	6cf71000 12010104 01010224 64000002     ...l....$......d
40010fd8:	0a03e800 059e0300 05240c00 02580102     ..........$...X.
40010fe8:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40010ff8:	8e8d9649 76961f36 02010f50 07d7ff03     I...6..vP.......
40011008:	03240900 00010104 05070003 04000382     ..$.............
40011018:	03250501 04090040 0e010001 0e000002     ..%.@...........
40011028:	79010124 04008300 01010102 04241b00     $..y..........$.
40011038:	55590201 00003259 00800010 3800aa00     ..YUY2.........8
40011048:	0110719b 00000608 0105241e e0028002     .q.......$......
40011058:	d4e00001 d4e0000e 0fd2000e 05161500     ................
40011068:	16150100 241e0005 80020205 00016802     .......$.....h..
40011078:	000ed4e0 000ed4e0 15000fd2 01000516     ................
40011088:	00051615 0003240e 68028002 e0028001     .....$.....h....
40011098:	24060001 0000000d 02830507 00010200     ...$............

400110a8 <CyFxUSBBOSDscr>:
400110a8:	00160f05 02100702 00000000 0003100a     ................
400110b8:	0003000e 00000000                       ........

400110c0 <CyFxUSBSSConfigDscr>:
400110c0:	010b0209 80000102 000b0864 00030e02     ........d.......
400110d0:	00040900 010e0100 240d0000 50010001     ...........$...P
400110e0:	6cf71000 12010104 01010224 64000002     ...l....$......d
400110f0:	0a038e00 059e0300 05240c00 02580102     ..........$...X.
40011100:	0045df03 06241c00 57ca7a03 5b1aa337     ..E...$..z.W7..[
40011110:	8e8d9649 76961f36 02010b50 07d7ff03     I...6..vP.......
40011120:	03240900 00010104 05070003 04000382     ..$.............
40011130:	00300601 05040000 00400325 00010409     ..0.....%.@.....
40011140:	00020e01 01240e00 83007901 01020400     ......$..y......
40011150:	1b000101 02010424 32595559 00100000     ....$...YUY2....
40011160:	aa000080 719b3800 09100110 241e0000     .....8.q.......$
40011170:	00020105 0003c005 00317040 003b5380     ........@p1..S;.
40011180:	0a001fa4 0100028b 00028b0a 0205241e     .............$..
40011190:	d0050002 bc000002 bc000034 99c60034     ........4...4...
400111a0:	028b0a00 8b0a0100 240e0002 00020003     ...........$....
400111b0:	0002d005 0003c005 000d2406 05070000     .........$......
400111c0:	04000283 0f300601 00000000              ......0.....

400111cc <CyFxUSBStringLangIDDscr>:
400111cc:	04090304                                ....

400111d0 <CyFxUSBManufactureDscr>:
400111d0:	00560338 00640069 006f0065 006f006c     8.V.i.d.e.o.l.o.
400111e0:	00790067 00490020 0061006d 00690067     g.y. .I.m.a.g.i.
400111f0:	0067006e 00530020 006c006f 00740075     n.g. .S.o.l.u.t.
40011200:	006f0069 0073006e                       i.o.n.s.

40011208 <CyFxUSBProductDscr>:
40011208:	00560330 00640069 006f0065 006f006c     0.V.i.d.e.o.l.o.
40011218:	00790067 00550020 00420053 00330020     g.y. .U.S.B. .3.
40011228:	0030002e 00480020 00430044 006d0061     ..0. .H.D.C.a.m.
40011238:	736e6573 7220726f 32646165 29542842     sensor read2B(T)
40011248:	20642520 25206425 000a0d64 736e6573      %d %d %d...sens
40011258:	7220726f 32646165 29522842 20642520     or read2B(R) %d 
40011268:	25206425 000a0d64 20433249 76616c53     %d %d...I2C Slav
40011278:	64612065 73657264 73692073 746f6e20     e address is not
40011288:	6c617620 0a216469 00000000 4f525245      valid!.....ERRO
40011298:	53203a52 6f736e65 69725772 63206574     R: SensorWrite c
400112a8:	746e756f 36203e20 00000a34 4f495047     ount > 64...GPIO
400112b8:	74655320 6c615620 45206575 726f7272      Set Value Error
400112c8:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
400112d8:	00000a64 4f495047 74655320 6c615620     d...GPIO Set Val
400112e8:	0a0d6575 00000000 20656854 6b636974     ue......The tick
400112f8:	64252073 20642520 00000a0d 6f727245     s %d %d ....Erro
40011308:	52203a72 69646165 5320676e 6f736e65     r: Reading Senso
40011318:	44492072 69616620 2164656c 00000a0d     r ID failed!....
40011328:	20656854 20746547 746e6f63 206c6f72     The Get control 
40011338:	30204449 20782578 0a0d6425 00000000     ID 0x%x %d......
40011348:	20656854 20746553 746e6f63 206c6f72     The Set control 
40011358:	41676572 30206464 20782578 78257830     regAdd 0x%x 0x%x
40011368:	00000a0d                                ....

4001136c <ExTime>:
4001136c:	004e009c 00140027 0005000a 00010002     ..N.'...........

4001137c <CyFxGpifConfig>:
4001137c:	0000000f 40030650 40030770 00000005     ....P..@p..@....
4001138c:	40030644 0000004c 40030780              D..@L......@

40011398 <CyFxGpifConfig_usb2>:
40011398:	00000093 400308c0 40030a70 00000008     .......@p..@....
400113a8:	400308b0 0000004c 40030b04 20433249     ...@L......@I2C 
400113b8:	2d726570 656d6974 64252072 00000a0d     per-timer %d....
400113c8:	20656854 6d6d6f63 20646e61 75657571     The command queu
400113d8:	73692065 61657220 25207964 64252064     e is ready %d %d
400113e8:	00000a0d 6f727245 6e692072 6c756d20     ....Error in mul
400113f8:	68636974 656e6e61 6d6f636c 6274696d     tichannelcommitb
40011408:	65666675 43203a72 2065646f 6425203d     uffer: Code = %d
40011418:	6973202c 3d20657a 2c782520 616d6420     , size = %x, dma
40011428:	656e6f44 0d782520 0000000a 45534552     Done %x.....RESE
40011438:	6e652054 6e756f63 65726574 2e2e2e64     T encountered...
40011448:	78257830 25783020 000a0d78 50535553     0x%x 0x%x...SUSP
40011458:	20444e45 6f636e65 65746e75 2e646572     END encountered.
40011468:	78302e2e 30207825 0d782578 0000000a     ..0x%x 0x%x.....
40011478:	20425355 63736964 656e6e6f 64657463     USB disconnected
40011488:	302e2e2e 20782578 78257830 00000a0d     ...0x%x 0x%x....
40011498:	20746553 465f5943 56555f58 49565f43     Set CY_FX_UVC_VI
400114a8:	5f4f4544 544e4f43 5f4c4f52 55514552     DEO_CONTROL_REQU
400114b8:	5f545345 4e455645 61462054 64656c69     EST_EVENT Failed
400114c8:	0a782520 00000000 20746553 465f5943      %x.....Set CY_F
400114d8:	56555f58 49565f43 5f4f4544 45525453     X_UVC_VIDEO_STRE
400114e8:	525f4d41 45555145 455f5453 544e4556     AM_REQUEST_EVENT
400114f8:	69614620 2064656c 000a7825 65746c41      Failed %x..Alte
40011508:	74616e72 65732065 6e697474 2e302067     rnate setting 0.
40011518:	000a0d2e 61656c43 65662072 72757461     ....Clear featur
40011528:	65722065 73657571 65642074 74636574     e request detect
40011538:	2e2e6465 00000a0d 63200a0d 696d6d6f     ed........ commi
40011548:	666f6574 61747320 3d206574 00642520     teof state = %d.
40011558:	6e616843 206c656e 20746553 70617257     Channel Set Wrap
40011568:	66207055 656c6961 45202c64 726f7272     Up failed, Error
40011578:	646f6320 203d2065 0a0d6425 00000000      code = %d......
40011588:	6f727245 61682072 656c646e 2e2e2e72     Error handler...
40011598:	00000a0d 6d6d6f43 45207469 6620464f     ....Commit EOF f
400115a8:	656c6961 000a2164 20656854 20433249     ailed!..The I2C 
400115b8:	6d6d6f63 20646e61 30207369 20782578     command is 0x%x 
400115c8:	78257830 25783020 78302078 30207825     0x%x 0x%x 0x%x 0
400115d8:	20782578 78257830 25783020 78302078     x%x 0x%x 0x%x 0x
400115e8:	30207825 20782578 78257830 25783020     %x 0x%x 0x%x 0x%
400115f8:	000a0d78 6b636162 67696c20 63207468     x...back light c
40011608:	65706d6f 7461736e 206e6f69 74746573     ompensation sett
40011618:	20676e69 6e207369 6320746f 6572726f     ing is not corre
40011628:	202e7463 25206425 000a0d64 20656854     ct. %d %d...The 
40011638:	20433249 72727563 20746e65 61746164     I2C current data
40011648:	20736920 20746f6e 69617661 6c62616c      is not availabl
40011658:	74202e65 61207972 6e696167 6425202e     e. try again. %d
40011668:	0d642520 0000000a 4d707845 43474126      %d.....ExpM&AGC
40011678:	6e657320 6f742074 736f6820 25202e74      sent to host. %
40011688:	64252064 6425203b 0d642520 0000000a     d %d; %d %d.....
40011698:	4d707845 43474126 746f6720 206e6574     ExpM&AGC gotten 
400116a8:	6d6f7266 736f6820 25202e74 64252064     from host. %d %d
400116b8:	6425203b 0d642520 0000000a 20657845     ; %d %d.....Exe 
400116c8:	6576656c 25202e6c 64252064 6425203b     level. %d %d; %d
400116d8:	0d642520 0000000a 20434c42 2e746573      %d.....BLC set.
400116e8:	20642520 203b6425 25206425 000a0d64      %d %d; %d %d...
400116f8:	20656854 20746567 61746164 6f726620     The get data fro
40011708:	6f68206d 66207473 206c6961 6f727265     m host fail erro
40011718:	6f632072 25206564 0a0d2e64 00000000     r code %d.......
40011728:	20656854 75716552 20747365 78257830     The Request 0x%x
40011738:	72617020 74656d61 67207265 66207465      parameter get f
40011748:	206d6f72 74736f68 25783020 78302078     rom host 0x%x 0x
40011758:	2f207825 6e657320 6f742064 736f6820     %x / send to hos
40011768:	78302074 30207825 0d782578 0000000a     t 0x%x 0x%x.....
40011778:	6d6f6f5a 20704f20 65636572 73657669     Zoom Op receives
40011788:	54432820 78302029 30207825 20782578      (CT) 0x%x 0x%x 
40011798:	78257830 00000a0d 61666564 20746c75     0x%x....default 
400117a8:	656c6573 726f7463 54432820 78302029     selector (CT) 0x
400117b8:	30207825 0d782578 0000000a 61666564     %x 0x%x.....defa
400117c8:	20746c75 75716572 20747365 29544328     ult request (CT)
400117d8:	25783020 78302078 0a0d7825 00000000      0x%x 0x%x......
400117e8:	20656854 75716552 20747365 78257830     The Request 0x%x
400117f8:	72617020 74656d61 67207265 66207465      parameter get f
40011808:	206d6f72 74736f68 54432820 78302029     rom host (CT) 0x
40011818:	30207825 20782578 78257830 73202f20     %x 0x%x 0x%x / s
40011828:	20646e65 68206f74 2074736f 78257830     end to host 0x%x
40011838:	25783020 78302078 202c7825 0a0d6425      0x%x 0x%x, %d..
40011848:	00000000 20425355 65657073 203d2064     ....USB speed = 
40011858:	65206425 666e6576 2067616c 7830203d     %d evenflag = 0x
40011868:	62207825 7165526d 65707954 30203d20     %x bmReqType = 0
40011878:	0d782578 6552620a 73657571 203d2074     x%x..bRequest = 
40011888:	78257830 61567720 2065756c 7830203d     0x%x wValue = 0x
40011898:	77207825 65646e49 203d2078 78257830     %x wIndex = 0x%x
400118a8:	654c7720 6874676e 30203d20 20782578      wLength = 0x%x 
400118b8:	6c667369 30206761 0d782578 0000000a     isflag 0x%x.....
400118c8:	20656854 61666564 20746c75 75746573     The default setu
400118d8:	65722070 73657571 61762074 2065756c     p request value 
400118e8:	78257830 25783020 000a0d78 20746547     0x%x 0x%x...Get 
400118f8:	20435655 626f7250 74657328 6f632029     UVC Prob(set) co
40011908:	6f72746e 6425206c 20642520 0a0d6425     ntrol %d %d %d..
40011918:	00000000 20746553 20656874 65646976     ....Set the vide
40011928:	6f6d206f 66206564 616d726f 78252074     o mode format %x
40011938:	0a642520 00000000 20746553 20656874      %d.....Set the 
40011948:	65646976 6f6d206f 66206564 616d726f     video mode forma
40011958:	65732074 73655274 0a642520 00000000     t setRes %d.....
40011968:	20746553 465f5943 56555f58 54535f43     Set CY_FX_UVC_ST
40011978:	4d414552 4556455f 6620544e 656c6961     REAM_EVENT faile
40011988:	78252064 0000000a 20746547 20435655     d %x....Get UVC 
40011998:	6c697473 7250206c 7328626f 20297465     still Prob(set) 
400119a8:	746e6f63 206c6f72 25206425 64252064     control %d %d %d
400119b8:	00000a0d 20746553 20656874 6c697473     ....Set the stil
400119c8:	6f6d206c 66206564 616d726f 78252074     l mode format %x
400119d8:	0a642520 00000000 20435655 6c697473      %d.....UVC stil
400119e8:	6f63206c 74696d6d 6e6f6320 6c6f7274     l commit control
400119f8:	74657320 20642520 25206425 000a0d64      set %d %d %d...
40011a08:	20746553 465f5943 56555f58 54535f43     Set CY_FX_UVC_ST
40011a18:	455f4c49 544e4556 69616620 2064656c     IL_EVENT failed 
40011a28:	000a7825 20746547 20435655 6c697473     %x..Get UVC stil
40011a38:	7274206c 65676769 6f632072 6f72746e     l trigger contro
40011a48:	6425206c 20642520 0a0d6425 00000000     l %d %d %d......
40011a58:	20435655 6c697473 7274206c 65676769     UVC still trigge
40011a68:	6f632072 6f72746e 6166206c 25206c69     r control fail %
40011a78:	64252064 00000a0d 6c696146 74206465     d %d....Failed t
40011a88:	6573206f 6920646e 7265746e 74707572     o send interrupt
40011a98:	61747320 2c737574 72724520 6320726f      status, Error c
40011aa8:	2065646f 6425203d 00000a0d 20656854     ode = %d....The 
40011ab8:	20746573 20666564 61746164 25783020     set def data 0x%
40011ac8:	30202c78 2e782578 00000a0d 20656854     x, 0x%x.....The 
40011ad8:	20746573 20666564 61746164 25783020     set def data 0x%
40011ae8:	30202c78 2c782578 25783020 30202c78     x, 0x%x, 0x%x, 0
40011af8:	2c782578 25783020 30202c78 2e782578     x%x, 0x%x, 0x%x.
40011b08:	00000a0d 54524155 696e6920 6c616974     ....UART initial
40011b18:	74617a69 206e6f69 6c696166 0a216465     ization failed!.
40011b28:	00000000 20433249 74696e69 696c6169     ....I2C initiali
40011b38:	6974617a 66206e6f 656c6961 000a2164     zation failed!..
40011b48:	20433249 666e6f63 72756769 6f697461     I2C configuratio
40011b58:	6166206e 64656c69 00000a21 20435655     n failed!...UVC 
40011b68:	61657243 45206574 746e6576 69616620     Create Event fai
40011b78:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011b88:	6425203d 0000000a 4f495047 696e4920     = %d....GPIO Ini
40011b98:	61662074 64656c69 7245202c 20726f72     t failed, Error 
40011ba8:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011bb8:	65764f20 64697272 61662065 64656c69      Override failed
40011bc8:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011bd8:	00000a64 4f495047 29303228 65764f20     d...GPIO(20) Ove
40011be8:	64697272 61662065 64656c69 7245202c     rride failed, Er
40011bf8:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011c08:	4f495047 29343228 65764f20 64697272     GPIO(24) Overrid
40011c18:	61662065 64656c69 7245202c 20726f72     e failed, Error 
40011c28:	65646f43 25203d20 00000a64 4f495047     Code = %d...GPIO
40011c38:	74655320 65722820 20746573 20293232      Set (reset 22) 
40011c48:	666e6f43 45206769 726f7272 7245202c     Config Error, Er
40011c58:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011c68:	4f495047 74655320 6f702820 20726577     GPIO Set (power 
40011c78:	20293032 666e6f43 45206769 726f7272     20) Config Error
40011c88:	7245202c 20726f72 65646f43 25203d20     , Error Code = %
40011c98:	00000a64 4f495047 74655320 6e732820     d...GPIO Set (sn
40011ca8:	73207061 20746f68 20293432 666e6f43     ap shot 24) Conf
40011cb8:	45206769 726f7272 7245202c 20726f72     ig Error, Error 
40011cc8:	65646f43 25203d20 00000a64 20424950     Code = %d...PIB 
40011cd8:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
40011ce8:	53206f74 74726174 7245202c 20726f72     to Start, Error 
40011cf8:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
40011d08:	636e7546 6e6f6974 69614620 2064656c     Function Failed 
40011d18:	53206f74 74726174 7245202c 20726f72     to Start, Error 
40011d28:	65646f43 25203d20 00000a64 20425355     Code = %d...USB 
40011d38:	20746553 70646e45 746e696f 6e6f6320     Set Endpoint con
40011d48:	20676966 6c696166 202c6465 6f727245     fig failed, Erro
40011d58:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011d68:	20414d44 65746e49 70757272 74532074     DMA Interrupt St
40011d78:	73757461 61684320 6c656e6e 65724320     atus Channel Cre
40011d88:	6f697461 6146206e 64656c69 7245202c     ation Failed, Er
40011d98:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011da8:	6c696146 74206465 6c61206f 61636f6c     Failed to alloca
40011db8:	6d206574 726f6d65 6f662079 6e692072     te memory for in
40011dc8:	72726574 20747075 74617473 62207375     terrupt status b
40011dd8:	65666675 000a0d72 20414d44 6e616843     uffer...DMA Chan
40011de8:	206c656e 61657243 6e6f6974 69614620     nel Creation Fai
40011df8:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011e08:	6425203d 0000000a 20425355 6e6e6f43     = %d....USB Conn
40011e18:	20746365 6c696166 202c6465 6f727245     ect failed, Erro
40011e28:	6f432072 3d206564 0a642520 00000000     r Code = %d.....
40011e38:	20746553 20656874 65646976 6f6d206f     Set the video mo
40011e48:	66206564 616d726f 25203174 64252078     de format1 %x %d
40011e58:	0000000a 20414d44 6e616843 206c656e     ....DMA Channel 
40011e68:	65736552 61462074 64656c69 7245202c     Reset Failed, Er
40011e78:	20726f72 65646f43 25203d20 00000a64     ror Code = %d...
40011e88:	20414d44 6e616843 206c656e 20746553     DMA Channel Set 
40011e98:	6e617254 72656673 69614620 2c64656c     Transfer Failed,
40011ea8:	72724520 4320726f 2065646f 6425203d      Error Code = %d
40011eb8:	0000000a 20414d44 6e616843 206c656e     ....DMA Channel 
40011ec8:	20746553 6e617254 72656673 69614620     Set Transfer Fai
40011ed8:	2c64656c 72724520 4320726f 2065646f     led, Error Code 
40011ee8:	6425203d 00000a0d 73200a0d 72657075     = %d...... super
40011ef8:	69706720 00000066 68200a0d 20686769      gpif..... high 
40011f08:	66697067 00000000 64616f4c 20676e69     gpif....Loading 
40011f18:	46495047 6e6f4320 75676966 69746172     GPIF Configurati
40011f28:	66206e6f 656c6961 45202c64 726f7272     on failed, Error
40011f38:	646f4320 203d2065 0a0d6425 00000000      Code = %d......
40011f48:	72617453 676e6974 49504720 74732046     Starting GPIF st
40011f58:	20657461 6863616d 20656e69 6c696166     ate machine fail
40011f68:	202c6465 6f727245 6f432072 3d206564     ed, Error Code =
40011f78:	0d642520 0000000a 553a3033 41204356      %d.....30:UVC A
40011f88:	54207070 61657268 00000064 553a3133     pp Thread...31:U
40011f98:	41204356 45207070 54203050 61657268     VC App EP0 Threa
40011fa8:	00000064 493a3233 41204332 43207070     d...32:I2C App C
40011fb8:	204c5254 65726854 00006461              TRL Thread..

40011fc4 <glFx3PartProperties>:
40011fc4:	00000000 0000009f 00000010 0000009b     ................
40011fd4:	00000020 0000008f 00000030 0000008b      .......0.......
40011fe4:	00000004 000000ef 00000104 000000ef     ................
40011ff4:	00000184 000000af 00000154 000000e9     ........T.......
40012004:	000001d4 000000a9 10000004 000000ee     ................
40012014:	10000104 000000ee 10000184 000000ae     ................
40012024:	10000154 000000e8 100001d4 000000a8     T...............
40012034:	00000002 00000077 00000102 00000077     ....w.......w...
40012044:	000001c2 00000035 000001d2 00000031     ....5.......1...
40012054:	10000002 00000076 10000102 00000076     ....v.......v...
40012064:	100001c2 00000034 00000258 00000199     ....4...X.......
40012074:	00000248 0000019d 00000458 00000299     H.......X.......
40012084:	00000448 0000029d 00000848 0000049d     H.......H.......
40012094:	10000448 0000029c                       H.......

4001209c <glPmmcCsdValue>:
4001209c:	06e00c01 c0038000 415bf3ff 1001005a     ..........[AZ...

400120ac <glPmmcExtCsdValue>:
400120ac:	40040000 03020200 00000404 32321414     ...@..........22
400120bc:	00406464 00000000                       dd@.....

400120c4 <glConstGpifDefaults>:
400120c4:	00000220 00000000 00000000 00000000      ...............
400120d4:	000f0000 00000000 00000000 00000082     ................
400120e4:	00000782 00000000 00000000 00000000     ................
	...
40012138:	00000006 00000000 0000ffff 0000010a     ................
40012148:	00000000 0000ffff 00000000 0000ffff     ................
40012158:	0000010a 00000000 0000ffff 00000000     ................
	...
400121c0:	00010400 00010400 00010400 00010400     ................
400121d0:	10000000 00000000 00000000 00000000     ................
	...
400121f0:	00000001                                ....

400121f4 <glGpifConstMaxState>:
400121f4:	1f3f7fff                                ..?.

400121f8 <CyU3PSSEpTypeMap>:
400121f8:	01020003                                ....

400121fc <glUsbMaxPacketSize>:
400121fc:	000003ff 00000040 00000040 00000400     ....@...@.......
4001220c:	00000200 00000400 00000400 00000400     ................
4001221c:	00000400                                ....

40012220 <glUsb3CompliancePatterns>:
40012220:	00000600 0000044a 00000478 000005bc     ....J...x.......
40012230:	00000c00 000005fc 000001fc 00001400     ................
40012240:	00001000                                ....

40012244 <CyU3PFirmwareEntry>:
40012244:	e59f1038 	ldr	r1, [pc, #56]	; 40012284 <CyU3PFirmwareEntry+0x40>
40012248:	e3e00000 	mvn	r0, #0
4001224c:	e5810000 	str	r0, [r1]
40012250:	e59f1030 	ldr	r1, [pc, #48]	; 40012288 <CyU3PFirmwareEntry+0x44>
40012254:	e2411008 	sub	r1, r1, #8
40012258:	e3a02a01 	mov	r2, #4096	; 0x1000
4001225c:	e3a000d3 	mov	r0, #211	; 0xd3
40012260:	e121f000 	msr	CPSR_c, r0
40012264:	e0811002 	add	r1, r1, r2
40012268:	e3c11007 	bic	r1, r1, #7
4001226c:	e1a0d001 	mov	sp, r1
40012270:	eb000271 	bl	40012c3c <CyU3PSysSetupMMU>
40012274:	eb000620 	bl	40013afc <CyU3PSysCheckBootState>
40012278:	eb000003 	bl	4001228c <CyU3PSetupStackPtrs>
4001227c:	eb0000d1 	bl	400125c8 <__CyU3PEntryKeep>
40012280:	eaffc4da 	b	400035f0 <CyU3PToolChainInit>
40012284:	fffff014 	.word	0xfffff014
40012288:	40002000 	.word	0x40002000

4001228c <CyU3PSetupStackPtrs>:
4001228c:	e3a01201 	mov	r1, #268435456	; 0x10000000
40012290:	e2411008 	sub	r1, r1, #8
40012294:	e3a02b02 	mov	r2, #2048	; 0x800
40012298:	e3a030df 	mov	r3, #223	; 0xdf
4001229c:	e12ff003 	msr	CPSR_fsxc, r3
400122a0:	e0811002 	add	r1, r1, r2
400122a4:	e3c11007 	bic	r1, r1, #7
400122a8:	e1a0d001 	mov	sp, r1
400122ac:	e3a0a000 	mov	sl, #0
400122b0:	e3a0b000 	mov	fp, #0
400122b4:	e3a02c01 	mov	r2, #256	; 0x100
400122b8:	e3a030d7 	mov	r3, #215	; 0xd7
400122bc:	e12ff003 	msr	CPSR_fsxc, r3
400122c0:	e0811002 	add	r1, r1, r2
400122c4:	e3c11007 	bic	r1, r1, #7
400122c8:	e1a0d001 	mov	sp, r1
400122cc:	e3a0a000 	mov	sl, #0
400122d0:	e3a0b000 	mov	fp, #0
400122d4:	e3a02c01 	mov	r2, #256	; 0x100
400122d8:	e3a030db 	mov	r3, #219	; 0xdb
400122dc:	e12ff003 	msr	CPSR_fsxc, r3
400122e0:	e0811002 	add	r1, r1, r2
400122e4:	e3c11007 	bic	r1, r1, #7
400122e8:	e1a0d001 	mov	sp, r1
400122ec:	e3a0a000 	mov	sl, #0
400122f0:	e3a0b000 	mov	fp, #0
400122f4:	e3a02c02 	mov	r2, #512	; 0x200
400122f8:	e3a000d1 	mov	r0, #209	; 0xd1
400122fc:	e121f000 	msr	CPSR_c, r0
40012300:	e0811002 	add	r1, r1, r2
40012304:	e3c11007 	bic	r1, r1, #7
40012308:	e1a0d001 	mov	sp, r1
4001230c:	e3a0a000 	mov	sl, #0
40012310:	e3a0b000 	mov	fp, #0
40012314:	e3a02b01 	mov	r2, #1024	; 0x400
40012318:	e3a000d2 	mov	r0, #210	; 0xd2
4001231c:	e121f000 	msr	CPSR_c, r0
40012320:	e0811002 	add	r1, r1, r2
40012324:	e3c11007 	bic	r1, r1, #7
40012328:	e1a0d001 	mov	sp, r1
4001232c:	e3a02a01 	mov	r2, #4096	; 0x1000
40012330:	e3a000d3 	mov	r0, #211	; 0xd3
40012334:	e121f000 	msr	CPSR_c, r0
40012338:	e0811002 	add	r1, r1, r2
4001233c:	e3c11007 	bic	r1, r1, #7
40012340:	e1a0d001 	mov	sp, r1
40012344:	e12fff1e 	bx	lr

40012348 <CyU3PSysCleanDCache>:
40012348:	ee17ff7a 	mrc	15, 0, pc, cr7, cr10, {3}
4001234c:	1afffffd 	bne	40012348 <CyU3PSysCleanDCache>
40012350:	e12fff1e 	bx	lr

40012354 <CyU3PSysClearDCache>:
40012354:	ee17ff7e 	mrc	15, 0, pc, cr7, cr14, {3}
40012358:	1afffffd 	bne	40012354 <CyU3PSysClearDCache>
4001235c:	e12fff1e 	bx	lr

40012360 <CyU3PSysFlushIRegion>:
40012360:	e3510000 	cmp	r1, #0
40012364:	0a00000a 	beq	40012394 <CyU3PSysFlushIRegion+0x34>
40012368:	e0801001 	add	r1, r0, r1
4001236c:	e3c0001f 	bic	r0, r0, #31
40012370:	e3a0201f 	mov	r2, #31
40012374:	e1110002 	tst	r1, r2
40012378:	e0411000 	sub	r1, r1, r0
4001237c:	e1a012a1 	lsr	r1, r1, #5
40012380:	12811001 	addne	r1, r1, #1
40012384:	ee070f35 	mcr	15, 0, r0, cr7, cr5, {1}
40012388:	e2800020 	add	r0, r0, #32
4001238c:	e2511001 	subs	r1, r1, #1
40012390:	1afffffb 	bne	40012384 <CyU3PSysFlushIRegion+0x24>
40012394:	e12fff1e 	bx	lr

40012398 <CyU3PSysClearDRegion>:
40012398:	e3510000 	cmp	r1, #0
4001239c:	0a00000a 	beq	400123cc <CyU3PSysClearDRegion+0x34>
400123a0:	e0801001 	add	r1, r0, r1
400123a4:	e3c0001f 	bic	r0, r0, #31
400123a8:	e3a0201f 	mov	r2, #31
400123ac:	e1110002 	tst	r1, r2
400123b0:	e0411000 	sub	r1, r1, r0
400123b4:	e1a012a1 	lsr	r1, r1, #5
400123b8:	12811001 	addne	r1, r1, #1
400123bc:	ee070f3e 	mcr	15, 0, r0, cr7, cr14, {1}
400123c0:	e2800020 	add	r0, r0, #32
400123c4:	e2511001 	subs	r1, r1, #1
400123c8:	1afffffb 	bne	400123bc <CyU3PSysClearDRegion+0x24>
400123cc:	e12fff1e 	bx	lr

400123d0 <CyU3PSysCleanDRegion>:
400123d0:	e3510000 	cmp	r1, #0
400123d4:	0a00000a 	beq	40012404 <CyU3PSysCleanDRegion+0x34>
400123d8:	e0801001 	add	r1, r0, r1
400123dc:	e3c0001f 	bic	r0, r0, #31
400123e0:	e3a0201f 	mov	r2, #31
400123e4:	e1110002 	tst	r1, r2
400123e8:	e0411000 	sub	r1, r1, r0
400123ec:	e1a012a1 	lsr	r1, r1, #5
400123f0:	12811001 	addne	r1, r1, #1
400123f4:	ee070f3a 	mcr	15, 0, r0, cr7, cr10, {1}
400123f8:	e2800020 	add	r0, r0, #32
400123fc:	e2511001 	subs	r1, r1, #1
40012400:	1afffffb 	bne	400123f4 <CyU3PSysCleanDRegion+0x24>
40012404:	e12fff1e 	bx	lr

40012408 <CyU3PSysFlushDRegion>:
40012408:	e3510000 	cmp	r1, #0
4001240c:	0a00000a 	beq	4001243c <CyU3PSysFlushDRegion+0x34>
40012410:	e0801001 	add	r1, r0, r1
40012414:	e3c0001f 	bic	r0, r0, #31
40012418:	e3a0201f 	mov	r2, #31
4001241c:	e1110002 	tst	r1, r2
40012420:	e0411000 	sub	r1, r1, r0
40012424:	e1a012a1 	lsr	r1, r1, #5
40012428:	12811001 	addne	r1, r1, #1
4001242c:	ee070f36 	mcr	15, 0, r0, cr7, cr6, {1}
40012430:	e2800020 	add	r0, r0, #32
40012434:	e2511001 	subs	r1, r1, #1
40012438:	1afffffb 	bne	4001242c <CyU3PSysFlushDRegion+0x24>
4001243c:	e12fff1e 	bx	lr

40012440 <CyU3PSysCacheIRegion>:
40012440:	e3a03000 	mov	r3, #0
40012444:	e3510000 	cmp	r1, #0
40012448:	0a000023 	beq	400124dc <CyU3PSysCacheIRegion+0x9c>
4001244c:	e0801001 	add	r1, r0, r1
40012450:	e3c0001f 	bic	r0, r0, #31
40012454:	e3a0201f 	mov	r2, #31
40012458:	e1110002 	tst	r1, r2
4001245c:	e0411000 	sub	r1, r1, r0
40012460:	e1a012a1 	lsr	r1, r1, #5
40012464:	12811001 	addne	r1, r1, #1
40012468:	e351003f 	cmp	r1, #63	; 0x3f
4001246c:	8a00001a 	bhi	400124dc <CyU3PSysCacheIRegion+0x9c>
40012470:	ee19cf30 	mrc	15, 0, ip, cr9, cr0, {1}
40012474:	e20c200f 	and	r2, ip, #15
40012478:	e3a03001 	mov	r3, #1
4001247c:	e11c0003 	tst	ip, r3
40012480:	11a03083 	lslne	r3, r3, #1
40012484:	111c0003 	tstne	ip, r3
40012488:	11a03083 	lslne	r3, r3, #1
4001248c:	111c0003 	tstne	ip, r3
40012490:	11a03083 	lslne	r3, r3, #1
40012494:	1a000010 	bne	400124dc <CyU3PSysCacheIRegion+0x9c>
40012498:	e3510000 	cmp	r1, #0
4001249c:	0a00000e 	beq	400124dc <CyU3PSysCacheIRegion+0x9c>
400124a0:	e1e03003 	mvn	r3, r3
400124a4:	e203300f 	and	r3, r3, #15
400124a8:	e3ccc00f 	bic	ip, ip, #15
400124ac:	e08cc003 	add	ip, ip, r3
400124b0:	ee00cf30 	mcr	15, 0, ip, cr0, cr0, {1}
400124b4:	ee070f3d 	mcr	15, 0, r0, cr7, cr13, {1}
400124b8:	e2800020 	add	r0, r0, #32
400124bc:	e2511001 	subs	r1, r1, #1
400124c0:	1afffffb 	bne	400124b4 <CyU3PSysCacheIRegion+0x74>
400124c4:	e1e0300c 	mvn	r3, ip
400124c8:	e203300f 	and	r3, r3, #15
400124cc:	e1822003 	orr	r2, r2, r3
400124d0:	e3ccc00f 	bic	ip, ip, #15
400124d4:	e00cc002 	and	ip, ip, r2
400124d8:	ee09cf30 	mcr	15, 0, ip, cr9, cr0, {1}
400124dc:	e1a00003 	mov	r0, r3
400124e0:	e12fff1e 	bx	lr

400124e4 <CyU3PSysCacheDRegion>:
400124e4:	e3a03000 	mov	r3, #0
400124e8:	e3510000 	cmp	r1, #0
400124ec:	0a000022 	beq	4001257c <CyU3PSysCacheDRegion+0x98>
400124f0:	e0801001 	add	r1, r0, r1
400124f4:	e3c0001f 	bic	r0, r0, #31
400124f8:	e3a0201f 	mov	r2, #31
400124fc:	e1110002 	tst	r1, r2
40012500:	e0411000 	sub	r1, r1, r0
40012504:	e1a012a1 	lsr	r1, r1, #5
40012508:	12811001 	addne	r1, r1, #1
4001250c:	e351003f 	cmp	r1, #63	; 0x3f
40012510:	8a000019 	bhi	4001257c <CyU3PSysCacheDRegion+0x98>
40012514:	ee19cf10 	mrc	15, 0, ip, cr9, cr0, {0}
40012518:	e20c200f 	and	r2, ip, #15
4001251c:	e3a03001 	mov	r3, #1
40012520:	e11c0003 	tst	ip, r3
40012524:	11a03083 	lslne	r3, r3, #1
40012528:	111c0003 	tstne	ip, r3
4001252c:	11a03083 	lslne	r3, r3, #1
40012530:	111c0003 	tstne	ip, r3
40012534:	11a03083 	lslne	r3, r3, #1
40012538:	1a00000f 	bne	4001257c <CyU3PSysCacheDRegion+0x98>
4001253c:	e3510000 	cmp	r1, #0
40012540:	0a00000d 	beq	4001257c <CyU3PSysCacheDRegion+0x98>
40012544:	e1e03003 	mvn	r3, r3
40012548:	e203300f 	and	r3, r3, #15
4001254c:	e3ccc00f 	bic	ip, ip, #15
40012550:	e08cc003 	add	ip, ip, r3
40012554:	ee00cf10 	mcr	15, 0, ip, cr0, cr0, {0}
40012558:	e4903020 	ldr	r3, [r0], #32
4001255c:	e2511001 	subs	r1, r1, #1
40012560:	1afffffc 	bne	40012558 <CyU3PSysCacheDRegion+0x74>
40012564:	e1e0300c 	mvn	r3, ip
40012568:	e203300f 	and	r3, r3, #15
4001256c:	e1822003 	orr	r2, r2, r3
40012570:	e3ccc00f 	bic	ip, ip, #15
40012574:	e00cc002 	and	ip, ip, r2
40012578:	ee09cf10 	mcr	15, 0, ip, cr9, cr0, {0}
4001257c:	e1a00003 	mov	r0, r3
40012580:	e12fff1e 	bx	lr

40012584 <CyU3PSysUnlockICache>:
40012584:	ee190f30 	mrc	15, 0, r0, cr9, cr0, {1}
40012588:	e3c0000f 	bic	r0, r0, #15
4001258c:	ee090f30 	mcr	15, 0, r0, cr9, cr0, {1}

40012590 <CyU3PSysUnlockDCache>:
40012590:	ee190f10 	mrc	15, 0, r0, cr9, cr0, {0}
40012594:	e3c0000f 	bic	r0, r0, #15
40012598:	ee090f10 	mcr	15, 0, r0, cr9, cr0, {0}

4001259c <__cyu3p_exception_vectors>:
4001259c:	e59ff028 	ldr	pc, [pc, #40]	; 400125cc <__CyU3PEntryKeep+0x4>
400125a0:	e59ff028 	ldr	pc, [pc, #40]	; 400125d0 <__CyU3PEntryKeep+0x8>
400125a4:	e59ff028 	ldr	pc, [pc, #40]	; 400125d4 <__CyU3PEntryKeep+0xc>
400125a8:	e59ff028 	ldr	pc, [pc, #40]	; 400125d8 <__CyU3PEntryKeep+0x10>
400125ac:	e59ff028 	ldr	pc, [pc, #40]	; 400125dc <__CyU3PEntryKeep+0x14>
400125b0:	e59ff028 	ldr	pc, [pc, #40]	; 400125e0 <__CyU3PEntryKeep+0x18>
400125b4:	e51ff120 	ldr	pc, [pc, #-288]	; 4001249c <CyU3PSysCacheIRegion+0x5c>
400125b8:	e59ff024 	ldr	pc, [pc, #36]	; 400125e4 <__CyU3PEntryKeep+0x1c>

400125bc <__CyU3PSWIHandler>:
400125bc:	eafffffe 	b	400125bc <__CyU3PSWIHandler>

400125c0 <__CyU3PReservedHandler>:
400125c0:	eafffffe 	b	400125c0 <__CyU3PReservedHandler>

400125c4 <__CyU3PFiqHandler>:
400125c4:	eafffffe 	b	400125c4 <__CyU3PFiqHandler>

400125c8 <__CyU3PEntryKeep>:
400125c8:	e12fff1e 	bx	lr
400125cc:	40012244 	.word	0x40012244
400125d0:	40003618 	.word	0x40003618
400125d4:	400125bc 	.word	0x400125bc
400125d8:	4000361c 	.word	0x4000361c
400125dc:	40003620 	.word	0x40003620
400125e0:	400125c0 	.word	0x400125c0
400125e4:	400125c4 	.word	0x400125c4

Disassembly of section i.CyU3PDevCheckDevStateStruct:

400125e8 <CyU3PDevCheckDevStateStruct>:
400125e8:	e92d4038 	push	{r3, r4, r5, lr}
400125ec:	e59f4118 	ldr	r4, [pc, #280]	; 4001270c <_etext+0x124>
400125f0:	e3a00000 	mov	r0, #0
400125f4:	e58d0000 	str	r0, [sp]
400125f8:	e5940000 	ldr	r0, [r4]
400125fc:	e59f110c 	ldr	r1, [pc, #268]	; 40012710 <_etext+0x128>
40012600:	e1500001 	cmp	r0, r1
40012604:	0a000000 	beq	4001260c <CyU3PDevCheckDevStateStruct+0x24>
40012608:	ea00003b 	b	400126fc <CyU3PDevCheckDevStateStruct+0x114>
4001260c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012610:	e59f10fc 	ldr	r1, [pc, #252]	; 40012714 <_etext+0x12c>
40012614:	e1500001 	cmp	r0, r1
40012618:	1a000005 	bne	40012634 <CyU3PDevCheckDevStateStruct+0x4c>
4001261c:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
40012620:	e59f10f0 	ldr	r1, [pc, #240]	; 40012718 <_etext+0x130>
40012624:	e1500001 	cmp	r0, r1
40012628:	3a000001 	bcc	40012634 <CyU3PDevCheckDevStateStruct+0x4c>
4001262c:	e594500c 	ldr	r5, [r4, #12]
40012630:	ea000001 	b	4001263c <CyU3PDevCheckDevStateStruct+0x54>
40012634:	e594000c 	ldr	r0, [r4, #12]
40012638:	e20050ff 	and	r5, r0, #255	; 0xff
4001263c:	e594000c 	ldr	r0, [r4, #12]
40012640:	e3500000 	cmp	r0, #0
40012644:	0a000003 	beq	40012658 <CyU3PDevCheckDevStateStruct+0x70>
40012648:	e594000c 	ldr	r0, [r4, #12]
4001264c:	e59f10c8 	ldr	r1, [pc, #200]	; 4001271c <_etext+0x134>
40012650:	e1500001 	cmp	r0, r1
40012654:	9a000000 	bls	4001265c <CyU3PDevCheckDevStateStruct+0x74>
40012658:	ea000027 	b	400126fc <CyU3PDevCheckDevStateStruct+0x114>
4001265c:	e1a0200d 	mov	r2, sp
40012660:	e1a01005 	mov	r1, r5
40012664:	e59f00a0 	ldr	r0, [pc, #160]	; 4001270c <_etext+0x124>
40012668:	eb00049f 	bl	400138ec <CyU3PComputeChecksum>
4001266c:	e594000c 	ldr	r0, [r4, #12]
40012670:	e2800101 	add	r0, r0, #1073741824	; 0x40000000
40012674:	e2800a02 	add	r0, r0, #8192	; 0x2000
40012678:	e5900000 	ldr	r0, [r0]
4001267c:	e59d1000 	ldr	r1, [sp]
40012680:	e1500001 	cmp	r0, r1
40012684:	0a000000 	beq	4001268c <CyU3PDevCheckDevStateStruct+0xa4>
40012688:	ea00001b 	b	400126fc <CyU3PDevCheckDevStateStruct+0x114>
4001268c:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40012690:	e59f107c 	ldr	r1, [pc, #124]	; 40012714 <_etext+0x12c>
40012694:	e1500001 	cmp	r0, r1
40012698:	0a000001 	beq	400126a4 <CyU3PDevCheckDevStateStruct+0xbc>
4001269c:	e59f007c 	ldr	r0, [pc, #124]	; 40012720 <_etext+0x138>
400126a0:	e58400dc 	str	r0, [r4, #220]	; 0xdc
400126a4:	e3a00001 	mov	r0, #1
400126a8:	e59f1074 	ldr	r1, [pc, #116]	; 40012724 <_etext+0x13c>
400126ac:	e5810000 	str	r0, [r1]
400126b0:	e59400dc 	ldr	r0, [r4, #220]	; 0xdc
400126b4:	e59f106c 	ldr	r1, [pc, #108]	; 40012728 <_etext+0x140>
400126b8:	e1500001 	cmp	r0, r1
400126bc:	3a00000d 	bcc	400126f8 <CyU3PDevCheckDevStateStruct+0x110>
400126c0:	e59400e8 	ldr	r0, [r4, #232]	; 0xe8
400126c4:	e3500000 	cmp	r0, #0
400126c8:	0a00000a 	beq	400126f8 <CyU3PDevCheckDevStateStruct+0x110>
400126cc:	e59f0058 	ldr	r0, [pc, #88]	; 4001272c <_etext+0x144>
400126d0:	e5900018 	ldr	r0, [r0, #24]
400126d4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
400126d8:	0a000006 	beq	400126f8 <CyU3PDevCheckDevStateStruct+0x110>
400126dc:	e59f004c 	ldr	r0, [pc, #76]	; 40012730 <_etext+0x148>
400126e0:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400126e4:	e3100001 	tst	r0, #1
400126e8:	0a000002 	beq	400126f8 <CyU3PDevCheckDevStateStruct+0x110>
400126ec:	e3a00001 	mov	r0, #1
400126f0:	e59f103c 	ldr	r1, [pc, #60]	; 40012734 <_etext+0x14c>
400126f4:	e5810000 	str	r0, [r1]
400126f8:	e8bd8038 	pop	{r3, r4, r5, pc}
400126fc:	e1a00000 	nop			; (mov r0, r0)
40012700:	e3e00000 	mvn	r0, #0
40012704:	e5840000 	str	r0, [r4]
40012708:	eafffffa 	b	400126f8 <CyU3PDevCheckDevStateStruct+0x110>
4001270c:	40002000 	.word	0x40002000
40012710:	42575943 	.word	0x42575943
40012714:	42335846 	.word	0x42335846
40012718:	00010300 	.word	0x00010300
4001271c:	00000ff8 	.word	0x00000ff8
40012720:	00010101 	.word	0x00010101
40012724:	40030c68 	.word	0x40030c68
40012728:	00010201 	.word	0x00010201
4001272c:	e0052000 	.word	0xe0052000
40012730:	e0001000 	.word	0xe0001000
40012734:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PDeviceCacheControl:

40012738 <CyU3PDeviceCacheControl>:
40012738:	e92d4070 	push	{r4, r5, r6, lr}
4001273c:	e1a04000 	mov	r4, r0
40012740:	e1a06001 	mov	r6, r1
40012744:	e1a05002 	mov	r5, r2
40012748:	e3550000 	cmp	r5, #0
4001274c:	0a000003 	beq	40012760 <CyU3PDeviceCacheControl+0x28>
40012750:	e3560000 	cmp	r6, #0
40012754:	1a000001 	bne	40012760 <CyU3PDeviceCacheControl+0x28>
40012758:	e3a00040 	mov	r0, #64	; 0x40
4001275c:	e8bd8070 	pop	{r4, r5, r6, pc}
40012760:	eb000181 	bl	40012d6c <CyU3PSysBarrierSync>
40012764:	ebfffefa 	bl	40012354 <CyU3PSysClearDCache>
40012768:	eb0001a1 	bl	40012df4 <CyU3PSysFlushICache>
4001276c:	eb00018f 	bl	40012db0 <CyU3PSysDisableICache>
40012770:	eb00018a 	bl	40012da0 <CyU3PSysDisableDCache>
40012774:	e3540000 	cmp	r4, #0
40012778:	0a000003 	beq	4001278c <CyU3PDeviceCacheControl+0x54>
4001277c:	eb000193 	bl	40012dd0 <CyU3PSysEnableICache>
40012780:	eb000179 	bl	40012d6c <CyU3PSysBarrierSync>
40012784:	e59f0038 	ldr	r0, [pc, #56]	; 400127c4 <CyU3PDeviceCacheControl+0x8c>
40012788:	e5804000 	str	r4, [r0]
4001278c:	e3a00000 	mov	r0, #0
40012790:	e59f1030 	ldr	r1, [pc, #48]	; 400127c8 <CyU3PDeviceCacheControl+0x90>
40012794:	e5810000 	str	r0, [r1]
40012798:	e3560000 	cmp	r6, #0
4001279c:	0a000005 	beq	400127b8 <CyU3PDeviceCacheControl+0x80>
400127a0:	eb000186 	bl	40012dc0 <CyU3PSysEnableDCache>
400127a4:	eb000170 	bl	40012d6c <CyU3PSysBarrierSync>
400127a8:	e59f0018 	ldr	r0, [pc, #24]	; 400127c8 <CyU3PDeviceCacheControl+0x90>
400127ac:	e5805000 	str	r5, [r0]
400127b0:	e59f0014 	ldr	r0, [pc, #20]	; 400127cc <CyU3PDeviceCacheControl+0x94>
400127b4:	e5806000 	str	r6, [r0]
400127b8:	eb00016b 	bl	40012d6c <CyU3PSysBarrierSync>
400127bc:	e3a00000 	mov	r0, #0
400127c0:	eaffffe5 	b	4001275c <CyU3PDeviceCacheControl+0x24>
400127c4:	40030c5c 	.word	0x40030c5c
400127c8:	40030c64 	.word	0x40030c64
400127cc:	40030c60 	.word	0x40030c60

Disassembly of section i.CyU3PDeviceInit:

400127d0 <CyU3PDeviceInit>:
400127d0:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400127d4:	e1a04000 	mov	r4, r0
400127d8:	e3a06000 	mov	r6, #0
400127dc:	e3a07000 	mov	r7, #0
400127e0:	e3a09000 	mov	r9, #0
400127e4:	e3a0a000 	mov	sl, #0
400127e8:	e3540000 	cmp	r4, #0
400127ec:	0a000033 	beq	400128c0 <CyU3PDeviceInit+0xf0>
400127f0:	e5d40004 	ldrb	r0, [r4, #4]
400127f4:	e3500002 	cmp	r0, #2
400127f8:	ba000002 	blt	40012808 <CyU3PDeviceInit+0x38>
400127fc:	e5d40004 	ldrb	r0, [r4, #4]
40012800:	e3500010 	cmp	r0, #16
40012804:	da000001 	ble	40012810 <CyU3PDeviceInit+0x40>
40012808:	e3a00040 	mov	r0, #64	; 0x40
4001280c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40012810:	e5d40005 	ldrb	r0, [r4, #5]
40012814:	e3500002 	cmp	r0, #2
40012818:	ba000002 	blt	40012828 <CyU3PDeviceInit+0x58>
4001281c:	e5d40005 	ldrb	r0, [r4, #5]
40012820:	e3500010 	cmp	r0, #16
40012824:	da000001 	ble	40012830 <CyU3PDeviceInit+0x60>
40012828:	e3a00040 	mov	r0, #64	; 0x40
4001282c:	eafffff6 	b	4001280c <CyU3PDeviceInit+0x3c>
40012830:	e5d40006 	ldrb	r0, [r4, #6]
40012834:	e3500002 	cmp	r0, #2
40012838:	ba000002 	blt	40012848 <CyU3PDeviceInit+0x78>
4001283c:	e5d40006 	ldrb	r0, [r4, #6]
40012840:	e3500010 	cmp	r0, #16
40012844:	da000001 	ble	40012850 <CyU3PDeviceInit+0x80>
40012848:	e3a00040 	mov	r0, #64	; 0x40
4001284c:	eaffffee 	b	4001280c <CyU3PDeviceInit+0x3c>
40012850:	e5d40006 	ldrb	r0, [r4, #6]
40012854:	e5d41005 	ldrb	r1, [r4, #5]
40012858:	e1500001 	cmp	r0, r1
4001285c:	ba000004 	blt	40012874 <CyU3PDeviceInit+0xa4>
40012860:	e5d41005 	ldrb	r1, [r4, #5]
40012864:	e5d40006 	ldrb	r0, [r4, #6]
40012868:	ebfff940 	bl	40010d70 <__aeabi_idivmod>
4001286c:	e3510000 	cmp	r1, #0
40012870:	0a000001 	beq	4001287c <CyU3PDeviceInit+0xac>
40012874:	e3a00040 	mov	r0, #64	; 0x40
40012878:	eaffffe3 	b	4001280c <CyU3PDeviceInit+0x3c>
4001287c:	e5d4000c 	ldrb	r0, [r4, #12]
40012880:	e3500004 	cmp	r0, #4
40012884:	ba000001 	blt	40012890 <CyU3PDeviceInit+0xc0>
40012888:	e3a00040 	mov	r0, #64	; 0x40
4001288c:	eaffffde 	b	4001280c <CyU3PDeviceInit+0x3c>
40012890:	e5d40004 	ldrb	r0, [r4, #4]
40012894:	e2400001 	sub	r0, r0, #1
40012898:	e5d41005 	ldrb	r1, [r4, #5]
4001289c:	e2411001 	sub	r1, r1, #1
400128a0:	e1800401 	orr	r0, r0, r1, lsl #8
400128a4:	e5d41006 	ldrb	r1, [r4, #6]
400128a8:	e2411001 	sub	r1, r1, #1
400128ac:	e1800601 	orr	r0, r0, r1, lsl #12
400128b0:	e5d4100c 	ldrb	r1, [r4, #12]
400128b4:	e1805201 	orr	r5, r0, r1, lsl #4
400128b8:	e594a000 	ldr	sl, [r4]
400128bc:	ea000000 	b	400128c4 <CyU3PDeviceInit+0xf4>
400128c0:	e59f5334 	ldr	r5, [pc, #820]	; 40012bfc <CyU3PDeviceInit+0x42c>
400128c4:	e59f0334 	ldr	r0, [pc, #820]	; 40012c00 <CyU3PDeviceInit+0x430>
400128c8:	e5805004 	str	r5, [r0, #4]
400128cc:	e5905004 	ldr	r5, [r0, #4]
400128d0:	e3a0000a 	mov	r0, #10
400128d4:	eb0003f6 	bl	400138b4 <CyU3PBusyWait>
400128d8:	e59f0320 	ldr	r0, [pc, #800]	; 40012c00 <CyU3PDeviceInit+0x430>
400128dc:	e5900000 	ldr	r0, [r0]
400128e0:	e2000807 	and	r0, r0, #458752	; 0x70000
400128e4:	e1a05820 	lsr	r5, r0, #16
400128e8:	e2150003 	ands	r0, r5, #3
400128ec:	0a000004 	beq	40012904 <CyU3PDeviceInit+0x134>
400128f0:	e3500001 	cmp	r0, #1
400128f4:	0a00000e 	beq	40012934 <CyU3PDeviceInit+0x164>
400128f8:	e3500002 	cmp	r0, #2
400128fc:	1a000024 	bne	40012994 <CyU3PDeviceInit+0x1c4>
40012900:	ea000014 	b	40012958 <CyU3PDeviceInit+0x188>
40012904:	e1a00000 	nop			; (mov r0, r0)
40012908:	e59f92f4 	ldr	r9, [pc, #756]	; 40012c04 <CyU3PDeviceInit+0x434>
4001290c:	e35a0000 	cmp	sl, #0
40012910:	0a000003 	beq	40012924 <CyU3PDeviceInit+0x154>
40012914:	e59f02ec 	ldr	r0, [pc, #748]	; 40012c08 <CyU3PDeviceInit+0x438>
40012918:	e59f12ec 	ldr	r1, [pc, #748]	; 40012c0c <CyU3PDeviceInit+0x43c>
4001291c:	e5810000 	str	r0, [r1]
40012920:	ea000002 	b	40012930 <CyU3PDeviceInit+0x160>
40012924:	e59f02e4 	ldr	r0, [pc, #740]	; 40012c10 <CyU3PDeviceInit+0x440>
40012928:	e59f12dc 	ldr	r1, [pc, #732]	; 40012c0c <CyU3PDeviceInit+0x43c>
4001292c:	e5810000 	str	r0, [r1]
40012930:	ea000020 	b	400129b8 <CyU3PDeviceInit+0x1e8>
40012934:	e1a00000 	nop			; (mov r0, r0)
40012938:	e59f92d4 	ldr	r9, [pc, #724]	; 40012c14 <CyU3PDeviceInit+0x444>
4001293c:	e1a00209 	lsl	r0, r9, #4
40012940:	e59f12c4 	ldr	r1, [pc, #708]	; 40012c0c <CyU3PDeviceInit+0x43c>
40012944:	e5810000 	str	r0, [r1]
40012948:	e59f02c8 	ldr	r0, [pc, #712]	; 40012c18 <CyU3PDeviceInit+0x448>
4001294c:	e59f12c8 	ldr	r1, [pc, #712]	; 40012c1c <CyU3PDeviceInit+0x44c>
40012950:	e5810000 	str	r0, [r1]
40012954:	ea000017 	b	400129b8 <CyU3PDeviceInit+0x1e8>
40012958:	e1a00000 	nop			; (mov r0, r0)
4001295c:	e59f92bc 	ldr	r9, [pc, #700]	; 40012c20 <CyU3PDeviceInit+0x450>
40012960:	e59f02bc 	ldr	r0, [pc, #700]	; 40012c24 <CyU3PDeviceInit+0x454>
40012964:	e59f12b0 	ldr	r1, [pc, #688]	; 40012c1c <CyU3PDeviceInit+0x44c>
40012968:	e5810000 	str	r0, [r1]
4001296c:	e35a0000 	cmp	sl, #0
40012970:	0a000003 	beq	40012984 <CyU3PDeviceInit+0x1b4>
40012974:	e59f028c 	ldr	r0, [pc, #652]	; 40012c08 <CyU3PDeviceInit+0x438>
40012978:	e59f128c 	ldr	r1, [pc, #652]	; 40012c0c <CyU3PDeviceInit+0x43c>
4001297c:	e5810000 	str	r0, [r1]
40012980:	ea000002 	b	40012990 <CyU3PDeviceInit+0x1c0>
40012984:	e59f0284 	ldr	r0, [pc, #644]	; 40012c10 <CyU3PDeviceInit+0x440>
40012988:	e59f127c 	ldr	r1, [pc, #636]	; 40012c0c <CyU3PDeviceInit+0x43c>
4001298c:	e5810000 	str	r0, [r1]
40012990:	ea000008 	b	400129b8 <CyU3PDeviceInit+0x1e8>
40012994:	e1a00000 	nop			; (mov r0, r0)
40012998:	e59f9288 	ldr	r9, [pc, #648]	; 40012c28 <CyU3PDeviceInit+0x458>
4001299c:	e1a00189 	lsl	r0, r9, #3
400129a0:	e59f1264 	ldr	r1, [pc, #612]	; 40012c0c <CyU3PDeviceInit+0x43c>
400129a4:	e5810000 	str	r0, [r1]
400129a8:	e59f027c 	ldr	r0, [pc, #636]	; 40012c2c <CyU3PDeviceInit+0x45c>
400129ac:	e59f1268 	ldr	r1, [pc, #616]	; 40012c1c <CyU3PDeviceInit+0x44c>
400129b0:	e5810000 	str	r0, [r1]
400129b4:	e1a00000 	nop			; (mov r0, r0)
400129b8:	e1a00000 	nop			; (mov r0, r0)
400129bc:	e59f023c 	ldr	r0, [pc, #572]	; 40012c00 <CyU3PDeviceInit+0x430>
400129c0:	e5900000 	ldr	r0, [r0]
400129c4:	e200003f 	and	r0, r0, #63	; 0x3f
400129c8:	e3500015 	cmp	r0, #21
400129cc:	1a000002 	bne	400129dc <CyU3PDeviceInit+0x20c>
400129d0:	e59f0230 	ldr	r0, [pc, #560]	; 40012c08 <CyU3PDeviceInit+0x438>
400129d4:	e59f1230 	ldr	r1, [pc, #560]	; 40012c0c <CyU3PDeviceInit+0x43c>
400129d8:	e5810000 	str	r0, [r1]
400129dc:	e59f0228 	ldr	r0, [pc, #552]	; 40012c0c <CyU3PDeviceInit+0x43c>
400129e0:	e5900000 	ldr	r0, [r0]
400129e4:	e59f121c 	ldr	r1, [pc, #540]	; 40012c08 <CyU3PDeviceInit+0x438>
400129e8:	e1500001 	cmp	r0, r1
400129ec:	1a000013 	bne	40012a40 <CyU3PDeviceInit+0x270>
400129f0:	e59f0208 	ldr	r0, [pc, #520]	; 40012c00 <CyU3PDeviceInit+0x430>
400129f4:	e5900000 	ldr	r0, [r0]
400129f8:	e200003f 	and	r0, r0, #63	; 0x3f
400129fc:	e3500015 	cmp	r0, #21
40012a00:	0a00000e 	beq	40012a40 <CyU3PDeviceInit+0x270>
40012a04:	e59f01f4 	ldr	r0, [pc, #500]	; 40012c00 <CyU3PDeviceInit+0x430>
40012a08:	e5900000 	ldr	r0, [r0]
40012a0c:	e3c0003f 	bic	r0, r0, #63	; 0x3f
40012a10:	e3800015 	orr	r0, r0, #21
40012a14:	e59f11e4 	ldr	r1, [pc, #484]	; 40012c00 <CyU3PDeviceInit+0x430>
40012a18:	e5810000 	str	r0, [r1]
40012a1c:	e3a00064 	mov	r0, #100	; 0x64
40012a20:	eb0003a3 	bl	400138b4 <CyU3PBusyWait>
40012a24:	e1a00000 	nop			; (mov r0, r0)
40012a28:	e59f01d0 	ldr	r0, [pc, #464]	; 40012c00 <CyU3PDeviceInit+0x430>
40012a2c:	e5900000 	ldr	r0, [r0]
40012a30:	e3100702 	tst	r0, #524288	; 0x80000
40012a34:	0afffffb 	beq	40012a28 <CyU3PDeviceInit+0x258>
40012a38:	e3a00064 	mov	r0, #100	; 0x64
40012a3c:	eb00039c 	bl	400138b4 <CyU3PBusyWait>
40012a40:	e59f01e8 	ldr	r0, [pc, #488]	; 40012c30 <CyU3PDeviceInit+0x460>
40012a44:	e5908014 	ldr	r8, [r0, #20]
40012a48:	e3a0000a 	mov	r0, #10
40012a4c:	eb000398 	bl	400138b4 <CyU3PBusyWait>
40012a50:	e2080003 	and	r0, r8, #3
40012a54:	e3500002 	cmp	r0, #2
40012a58:	1a000005 	bne	40012a74 <CyU3PDeviceInit+0x2a4>
40012a5c:	e3a07001 	mov	r7, #1
40012a60:	e3880003 	orr	r0, r8, #3
40012a64:	e59f11c4 	ldr	r1, [pc, #452]	; 40012c30 <CyU3PDeviceInit+0x460>
40012a68:	e5810014 	str	r0, [r1, #20]
40012a6c:	e3a0000a 	mov	r0, #10
40012a70:	eb00038f 	bl	400138b4 <CyU3PBusyWait>
40012a74:	e3180102 	tst	r8, #-2147483648	; 0x80000000
40012a78:	1a000004 	bne	40012a90 <CyU3PDeviceInit+0x2c0>
40012a7c:	e3540000 	cmp	r4, #0
40012a80:	0a000003 	beq	40012a94 <CyU3PDeviceInit+0x2c4>
40012a84:	e5940008 	ldr	r0, [r4, #8]
40012a88:	e3500000 	cmp	r0, #0
40012a8c:	1a000000 	bne	40012a94 <CyU3PDeviceInit+0x2c4>
40012a90:	e3a06001 	mov	r6, #1
40012a94:	e3560000 	cmp	r6, #0
40012a98:	1a000014 	bne	40012af0 <CyU3PDeviceInit+0x320>
40012a9c:	e3c80003 	bic	r0, r8, #3
40012aa0:	e3800001 	orr	r0, r0, #1
40012aa4:	e59f1184 	ldr	r1, [pc, #388]	; 40012c30 <CyU3PDeviceInit+0x460>
40012aa8:	e5810014 	str	r0, [r1, #20]
40012aac:	e3a00064 	mov	r0, #100	; 0x64
40012ab0:	eb00037f 	bl	400138b4 <CyU3PBusyWait>
40012ab4:	e59f0174 	ldr	r0, [pc, #372]	; 40012c30 <CyU3PDeviceInit+0x460>
40012ab8:	e5905018 	ldr	r5, [r0, #24]
40012abc:	e3a000c8 	mov	r0, #200	; 0xc8
40012ac0:	eb00037b 	bl	400138b4 <CyU3PBusyWait>
40012ac4:	e59f0164 	ldr	r0, [pc, #356]	; 40012c30 <CyU3PDeviceInit+0x460>
40012ac8:	e5900018 	ldr	r0, [r0, #24]
40012acc:	e1500005 	cmp	r0, r5
40012ad0:	1a000000 	bne	40012ad8 <CyU3PDeviceInit+0x308>
40012ad4:	e3a06001 	mov	r6, #1
40012ad8:	e3a00064 	mov	r0, #100	; 0x64
40012adc:	eb000374 	bl	400138b4 <CyU3PBusyWait>
40012ae0:	e59f0148 	ldr	r0, [pc, #328]	; 40012c30 <CyU3PDeviceInit+0x460>
40012ae4:	e5808014 	str	r8, [r0, #20]
40012ae8:	e3a00064 	mov	r0, #100	; 0x64
40012aec:	eb000370 	bl	400138b4 <CyU3PBusyWait>
40012af0:	e3560000 	cmp	r6, #0
40012af4:	0a000026 	beq	40012b94 <CyU3PDeviceInit+0x3c4>
40012af8:	e59f0130 	ldr	r0, [pc, #304]	; 40012c30 <CyU3PDeviceInit+0x460>
40012afc:	e5900014 	ldr	r0, [r0, #20]
40012b00:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40012b04:	1a000022 	bne	40012b94 <CyU3PDeviceInit+0x3c4>
40012b08:	e1a09109 	lsl	r9, r9, #2
40012b0c:	e3a01c7d 	mov	r1, #32000	; 0x7d00
40012b10:	e1a00009 	mov	r0, r9
40012b14:	ebfff843 	bl	40010c28 <__aeabi_uidivmod>
40012b18:	e1a09000 	mov	r9, r0
40012b1c:	e2095003 	and	r5, r9, #3
40012b20:	e1a09129 	lsr	r9, r9, #2
40012b24:	e3550010 	cmp	r5, #16
40012b28:	2a000000 	bcs	40012b30 <CyU3PDeviceInit+0x360>
40012b2c:	e2499001 	sub	r9, r9, #1
40012b30:	e1a09809 	lsl	r9, r9, #16
40012b34:	e59f00f8 	ldr	r0, [pc, #248]	; 40012c34 <CyU3PDeviceInit+0x464>
40012b38:	e1590000 	cmp	r9, r0
40012b3c:	9a000000 	bls	40012b44 <CyU3PDeviceInit+0x374>
40012b40:	e1a09000 	mov	r9, r0
40012b44:	e3a00064 	mov	r0, #100	; 0x64
40012b48:	eb000359 	bl	400138b4 <CyU3PBusyWait>
40012b4c:	e59f00dc 	ldr	r0, [pc, #220]	; 40012c30 <CyU3PDeviceInit+0x460>
40012b50:	e5905014 	ldr	r5, [r0, #20]
40012b54:	e3c5047f 	bic	r0, r5, #2130706432	; 0x7f000000
40012b58:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40012b5c:	e1805009 	orr	r5, r0, r9
40012b60:	e3a00064 	mov	r0, #100	; 0x64
40012b64:	eb000352 	bl	400138b4 <CyU3PBusyWait>
40012b68:	e59f00c0 	ldr	r0, [pc, #192]	; 40012c30 <CyU3PDeviceInit+0x460>
40012b6c:	e5805014 	str	r5, [r0, #20]
40012b70:	e3a00064 	mov	r0, #100	; 0x64
40012b74:	eb00034e 	bl	400138b4 <CyU3PBusyWait>
40012b78:	e59f00b0 	ldr	r0, [pc, #176]	; 40012c30 <CyU3PDeviceInit+0x460>
40012b7c:	e5900014 	ldr	r0, [r0, #20]
40012b80:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40012b84:	e59f10a4 	ldr	r1, [pc, #164]	; 40012c30 <CyU3PDeviceInit+0x460>
40012b88:	e5810014 	str	r0, [r1, #20]
40012b8c:	e3a00064 	mov	r0, #100	; 0x64
40012b90:	eb000347 	bl	400138b4 <CyU3PBusyWait>
40012b94:	e59f0094 	ldr	r0, [pc, #148]	; 40012c30 <CyU3PDeviceInit+0x460>
40012b98:	e5900000 	ldr	r0, [r0]
40012b9c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40012ba0:	e59f1088 	ldr	r1, [pc, #136]	; 40012c30 <CyU3PDeviceInit+0x460>
40012ba4:	e5810000 	str	r0, [r1]
40012ba8:	e3a00064 	mov	r0, #100	; 0x64
40012bac:	eb000340 	bl	400138b4 <CyU3PBusyWait>
40012bb0:	eb003dca 	bl	400222e0 <CyU3PVicInit>
40012bb4:	e10f0000 	mrs	r0, CPSR
40012bb8:	e3c00080 	bic	r0, r0, #128	; 0x80
40012bbc:	e121f000 	msr	CPSR_c, r0
40012bc0:	e3570000 	cmp	r7, #0
40012bc4:	0a000002 	beq	40012bd4 <CyU3PDeviceInit+0x404>
40012bc8:	e3a01ffa 	mov	r1, #1000	; 0x3e8
40012bcc:	e3a00001 	mov	r0, #1
40012bd0:	eb000024 	bl	40012c68 <CyU3PSysWatchDogConfigure>
40012bd4:	e59f005c 	ldr	r0, [pc, #92]	; 40012c38 <CyU3PDeviceInit+0x468>
40012bd8:	e5900000 	ldr	r0, [r0]
40012bdc:	e3500000 	cmp	r0, #0
40012be0:	0a000002 	beq	40012bf0 <CyU3PDeviceInit+0x420>
40012be4:	e59f004c 	ldr	r0, [pc, #76]	; 40012c38 <CyU3PDeviceInit+0x468>
40012be8:	e5900000 	ldr	r0, [r0]
40012bec:	eb000594 	bl	40014244 <CyU3PLppRestoreState>
40012bf0:	ebfffe7c 	bl	400125e8 <_etext>
40012bf4:	e3a00000 	mov	r0, #0
40012bf8:	eaffff03 	b	4001280c <CyU3PDeviceInit+0x3c>
40012bfc:	00001131 	.word	0x00001131
40012c00:	e0052000 	.word	0xe0052000
40012c04:	0124f800 	.word	0x0124f800
40012c08:	18085800 	.word	0x18085800
40012c0c:	40030c50 	.word	0x40030c50
40012c10:	16e36000 	.word	0x16e36000
40012c14:	018cba80 	.word	0x018cba80
40012c18:	00910700 	.word	0x00910700
40012c1c:	40030c58 	.word	0x40030c58
40012c20:	0249f000 	.word	0x0249f000
40012c24:	00910608 	.word	0x00910608
40012c28:	03197500 	.word	0x03197500
40012c2c:	00910580 	.word	0x00910580
40012c30:	e0050000 	.word	0xe0050000
40012c34:	7fff0000 	.word	0x7fff0000
40012c38:	40030c8c 	.word	0x40030c8c

Disassembly of section i.CyU3PSysSetupMMU:

40012c3c <CyU3PSysSetupMMU>:
40012c3c:	e92d4010 	push	{r4, lr}
40012c40:	eb000049 	bl	40012d6c <CyU3PSysBarrierSync>
40012c44:	ebfffdc2 	bl	40012354 <CyU3PSysClearDCache>
40012c48:	eb000069 	bl	40012df4 <CyU3PSysFlushICache>
40012c4c:	eb000049 	bl	40012d78 <CyU3PSysDisableCacheMMU>
40012c50:	eb00006a 	bl	40012e00 <CyU3PSysInitTCMs>
40012c54:	eb000041 	bl	40012d60 <CyU3PInitPageTable>
40012c58:	eb000061 	bl	40012de4 <CyU3PSysEnableMMU>
40012c5c:	eb00006c 	bl	40012e14 <CyU3PSysLoadTLB>
40012c60:	eb000041 	bl	40012d6c <CyU3PSysBarrierSync>
40012c64:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysWatchDogConfigure:

40012c68 <CyU3PSysWatchDogConfigure>:
40012c68:	e92d4070 	push	{r4, r5, r6, lr}
40012c6c:	e1a04000 	mov	r4, r0
40012c70:	e1a05001 	mov	r5, r1
40012c74:	e59f00d8 	ldr	r0, [pc, #216]	; 40012d54 <CyU3PSysWatchDogConfigure+0xec>
40012c78:	e5906014 	ldr	r6, [r0, #20]
40012c7c:	e3a00064 	mov	r0, #100	; 0x64
40012c80:	eb00030b 	bl	400138b4 <CyU3PBusyWait>
40012c84:	e3540000 	cmp	r4, #0
40012c88:	0a000023 	beq	40012d1c <CyU3PSysWatchDogConfigure+0xb4>
40012c8c:	e2060003 	and	r0, r6, #3
40012c90:	e3500003 	cmp	r0, #3
40012c94:	0a000004 	beq	40012cac <CyU3PSysWatchDogConfigure+0x44>
40012c98:	e3860003 	orr	r0, r6, #3
40012c9c:	e59f10b0 	ldr	r1, [pc, #176]	; 40012d54 <CyU3PSysWatchDogConfigure+0xec>
40012ca0:	e5810014 	str	r0, [r1, #20]
40012ca4:	e3a00064 	mov	r0, #100	; 0x64
40012ca8:	eb000301 	bl	400138b4 <CyU3PBusyWait>
40012cac:	e0850285 	add	r0, r5, r5, lsl #5
40012cb0:	e59f10a0 	ldr	r1, [pc, #160]	; 40012d58 <CyU3PSysWatchDogConfigure+0xf0>
40012cb4:	e5810000 	str	r0, [r1]
40012cb8:	e2810000 	add	r0, r1, #0
40012cbc:	e5900000 	ldr	r0, [r0]
40012cc0:	e1500005 	cmp	r0, r5
40012cc4:	2a000001 	bcs	40012cd0 <CyU3PSysWatchDogConfigure+0x68>
40012cc8:	e3e00000 	mvn	r0, #0
40012ccc:	e5810000 	str	r0, [r1]
40012cd0:	e59f0080 	ldr	r0, [pc, #128]	; 40012d58 <CyU3PSysWatchDogConfigure+0xf0>
40012cd4:	e5900000 	ldr	r0, [r0]
40012cd8:	e59f1074 	ldr	r1, [pc, #116]	; 40012d54 <CyU3PSysWatchDogConfigure+0xec>
40012cdc:	e5810018 	str	r0, [r1, #24]
40012ce0:	e3a00064 	mov	r0, #100	; 0x64
40012ce4:	eb0002f2 	bl	400138b4 <CyU3PBusyWait>
40012ce8:	e3c660fb 	bic	r6, r6, #251	; 0xfb
40012cec:	e38660fa 	orr	r6, r6, #250	; 0xfa
40012cf0:	e59f005c 	ldr	r0, [pc, #92]	; 40012d54 <CyU3PSysWatchDogConfigure+0xec>
40012cf4:	e5806014 	str	r6, [r0, #20]
40012cf8:	e3a00064 	mov	r0, #100	; 0x64
40012cfc:	eb0002ec 	bl	400138b4 <CyU3PBusyWait>
40012d00:	e2060c03 	and	r0, r6, #768	; 0x300
40012d04:	e3500c03 	cmp	r0, #768	; 0x300
40012d08:	1a000010 	bne	40012d50 <CyU3PSysWatchDogConfigure+0xe8>
40012d0c:	e59f0048 	ldr	r0, [pc, #72]	; 40012d5c <CyU3PSysWatchDogConfigure+0xf4>
40012d10:	e1d000b0 	ldrh	r0, [r0]
40012d14:	eb003d18 	bl	4002217c <CyU3POsTimerInit>
40012d18:	ea00000c 	b	40012d50 <CyU3PSysWatchDogConfigure+0xe8>
40012d1c:	e2060003 	and	r0, r6, #3
40012d20:	e3500003 	cmp	r0, #3
40012d24:	0a000006 	beq	40012d44 <CyU3PSysWatchDogConfigure+0xdc>
40012d28:	e59f0024 	ldr	r0, [pc, #36]	; 40012d54 <CyU3PSysWatchDogConfigure+0xec>
40012d2c:	e5900014 	ldr	r0, [r0, #20]
40012d30:	e3800003 	orr	r0, r0, #3
40012d34:	e59f1018 	ldr	r1, [pc, #24]	; 40012d54 <CyU3PSysWatchDogConfigure+0xec>
40012d38:	e5810014 	str	r0, [r1, #20]
40012d3c:	e3a00064 	mov	r0, #100	; 0x64
40012d40:	eb0002db 	bl	400138b4 <CyU3PBusyWait>
40012d44:	e3a00000 	mov	r0, #0
40012d48:	e59f1008 	ldr	r1, [pc, #8]	; 40012d58 <CyU3PSysWatchDogConfigure+0xf0>
40012d4c:	e5810000 	str	r0, [r1]
40012d50:	e8bd8070 	pop	{r4, r5, r6, pc}
40012d54:	e0050000 	.word	0xe0050000
40012d58:	40030c54 	.word	0x40030c54
40012d5c:	40030db8 	.word	0x40030db8

Disassembly of section i.CyU3PInitPageTable:

40012d60 <CyU3PInitPageTable>:
40012d60:	e92d4010 	push	{r4, lr}
40012d64:	eb0007ad 	bl	40014c20 <CyFx3DevInitPageTables>
40012d68:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PSysBarrierSync:

40012d6c <CyU3PSysBarrierSync>:
40012d6c:	e3a00000 	mov	r0, #0
40012d70:	ee070f9a 	mcr	15, 0, r0, cr7, cr10, {4}
40012d74:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableCacheMMU:

40012d78 <CyU3PSysDisableCacheMMU>:
40012d78:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012d7c:	e59f2018 	ldr	r2, [pc, #24]	; 40012d9c <CyU3PSysDisableCacheMMU+0x24>
40012d80:	e1c00002 	bic	r0, r0, r2
40012d84:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012d88:	ee1f0f10 	mrc	15, 0, r0, cr15, cr0, {0}
40012d8c:	e3e01801 	mvn	r1, #65536	; 0x10000
40012d90:	e0000001 	and	r0, r0, r1
40012d94:	ee0f0f10 	mcr	15, 0, r0, cr15, cr0, {0}
40012d98:	e12fff1e 	bx	lr
40012d9c:	00001005 	.word	0x00001005

Disassembly of section i.CyU3PSysDisableDCache:

40012da0 <CyU3PSysDisableDCache>:
40012da0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012da4:	e3c00004 	bic	r0, r0, #4
40012da8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dac:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysDisableICache:

40012db0 <CyU3PSysDisableICache>:
40012db0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012db4:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40012db8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dbc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableDCache:

40012dc0 <CyU3PSysEnableDCache>:
40012dc0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012dc4:	e3800004 	orr	r0, r0, #4
40012dc8:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012dcc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableICache:

40012dd0 <CyU3PSysEnableICache>:
40012dd0:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012dd4:	e3800a01 	orr	r0, r0, #4096	; 0x1000
40012dd8:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40012ddc:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012de0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysEnableMMU:

40012de4 <CyU3PSysEnableMMU>:
40012de4:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
40012de8:	e3800001 	orr	r0, r0, #1
40012dec:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
40012df0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysFlushICache:

40012df4 <CyU3PSysFlushICache>:
40012df4:	e3a00000 	mov	r0, #0
40012df8:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}
40012dfc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysInitTCMs:

40012e00 <CyU3PSysInitTCMs>:
40012e00:	e3a00015 	mov	r0, #21
40012e04:	ee090f31 	mcr	15, 0, r0, cr9, cr1, {1}
40012e08:	e240024f 	sub	r0, r0, #-268435452	; 0xf0000004
40012e0c:	ee090f11 	mcr	15, 0, r0, cr9, cr1, {0}
40012e10:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysLoadTLB:

40012e14 <CyU3PSysLoadTLB>:
40012e14:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40012e18:	e3a00000 	mov	r0, #0
40012e1c:	eb00000b 	bl	40012e50 <CyU3PSysLockTLBEntry>
40012e20:	e3a00201 	mov	r0, #268435456	; 0x10000000
40012e24:	eb000009 	bl	40012e50 <CyU3PSysLockTLBEntry>
40012e28:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40012e2c:	eb000007 	bl	40012e50 <CyU3PSysLockTLBEntry>
40012e30:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40012e34:	eb000005 	bl	40012e50 <CyU3PSysLockTLBEntry>
40012e38:	e3a0020f 	mov	r0, #-268435456	; 0xf0000000
40012e3c:	eb000003 	bl	40012e50 <CyU3PSysLockTLBEntry>
40012e40:	e59f0004 	ldr	r0, [pc, #4]	; 40012e4c <CyU3PSysLoadTLB+0x38>
40012e44:	eb000001 	bl	40012e50 <CyU3PSysLockTLBEntry>
40012e48:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40012e4c:	fffff000 	.word	0xfffff000

Disassembly of section i.CyU3PSysLockTLBEntry:

40012e50 <CyU3PSysLockTLBEntry>:
40012e50:	e3a01000 	mov	r1, #0
40012e54:	ee080f37 	mcr	15, 0, r0, cr8, cr7, {1}
40012e58:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012e5c:	e3811001 	orr	r1, r1, #1
40012e60:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012e64:	e5900000 	ldr	r0, [r0]
40012e68:	ee1a1f10 	mrc	15, 0, r1, cr10, cr0, {0}
40012e6c:	e3c11001 	bic	r1, r1, #1
40012e70:	ee0a1f10 	mcr	15, 0, r1, cr10, cr0, {0}
40012e74:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PDeviceConfigureIOMatrix:

40012e78 <CyU3PDeviceConfigureIOMatrix>:
40012e78:	e92d4010 	push	{r4, lr}
40012e7c:	e1a04000 	mov	r4, r0
40012e80:	e3540000 	cmp	r4, #0
40012e84:	1a000001 	bne	40012e90 <CyU3PDeviceConfigureIOMatrix+0x18>
40012e88:	e3a00041 	mov	r0, #65	; 0x41
40012e8c:	e8bd8010 	pop	{r4, pc}
40012e90:	e1a00004 	mov	r0, r4
40012e94:	eb0005fd 	bl	40014690 <CyFx3DevIOConfigure>
40012e98:	e3500000 	cmp	r0, #0
40012e9c:	1a000001 	bne	40012ea8 <CyU3PDeviceConfigureIOMatrix+0x30>
40012ea0:	e3a00040 	mov	r0, #64	; 0x40
40012ea4:	eafffff8 	b	40012e8c <CyU3PDeviceConfigureIOMatrix+0x14>
40012ea8:	e3a00000 	mov	r0, #0
40012eac:	eafffff6 	b	40012e8c <CyU3PDeviceConfigureIOMatrix+0x14>

Disassembly of section i.CyU3PDeviceGpioOverride:

40012eb0 <CyU3PDeviceGpioOverride>:
40012eb0:	e92d4070 	push	{r4, r5, r6, lr}
40012eb4:	e1a04000 	mov	r4, r0
40012eb8:	e1a05001 	mov	r5, r1
40012ebc:	e354003d 	cmp	r4, #61	; 0x3d
40012ec0:	ba000001 	blt	40012ecc <CyU3PDeviceGpioOverride+0x1c>
40012ec4:	e3a00040 	mov	r0, #64	; 0x40
40012ec8:	e8bd8070 	pop	{r4, r5, r6, pc}
40012ecc:	e1a02005 	mov	r2, r5
40012ed0:	e3a01001 	mov	r1, #1
40012ed4:	e1a00004 	mov	r0, r4
40012ed8:	eb00066c 	bl	40014890 <CyFx3DevIOSelectGpio>
40012edc:	e3a00000 	mov	r0, #0
40012ee0:	eafffff8 	b	40012ec8 <CyU3PDeviceGpioOverride+0x18>

Disassembly of section i.CyU3PIsGpioComplexIOConfigured:

40012ee4 <CyU3PIsGpioComplexIOConfigured>:
40012ee4:	e92d4010 	push	{r4, lr}
40012ee8:	e1a04000 	mov	r4, r0
40012eec:	e3a01000 	mov	r1, #0
40012ef0:	e1a00004 	mov	r0, r4
40012ef4:	eb000645 	bl	40014810 <CyFx3DevIOIsGpio>
40012ef8:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioSimpleIOConfigured:

40012efc <CyU3PIsGpioSimpleIOConfigured>:
40012efc:	e92d4010 	push	{r4, lr}
40012f00:	e1a04000 	mov	r4, r0
40012f04:	e3a01001 	mov	r1, #1
40012f08:	e1a00004 	mov	r0, r4
40012f0c:	eb00063f 	bl	40014810 <CyFx3DevIOIsGpio>
40012f10:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PIsGpioValid:

40012f14 <CyU3PIsGpioValid>:
40012f14:	e1a01000 	mov	r1, r0
40012f18:	e351003d 	cmp	r1, #61	; 0x3d
40012f1c:	aa000001 	bge	40012f28 <CyU3PIsGpioValid+0x14>
40012f20:	e3a00001 	mov	r0, #1
40012f24:	e12fff1e 	bx	lr
40012f28:	e3a00000 	mov	r0, #0
40012f2c:	eafffffc 	b	40012f24 <CyU3PIsGpioValid+0x10>

Disassembly of section i.CyU3PIsLppIOConfigured:

40012f30 <CyU3PIsLppIOConfigured>:
40012f30:	e92d4070 	push	{r4, r5, r6, lr}
40012f34:	e1a04000 	mov	r4, r0
40012f38:	e3a05000 	mov	r5, #0
40012f3c:	e3540000 	cmp	r4, #0
40012f40:	0a00000a 	beq	40012f70 <CyU3PIsLppIOConfigured+0x40>
40012f44:	e3540001 	cmp	r4, #1
40012f48:	0a000004 	beq	40012f60 <CyU3PIsLppIOConfigured+0x30>
40012f4c:	e3540002 	cmp	r4, #2
40012f50:	0a00000e 	beq	40012f90 <CyU3PIsLppIOConfigured+0x60>
40012f54:	e3540003 	cmp	r4, #3
40012f58:	1a000010 	bne	40012fa0 <CyU3PIsLppIOConfigured+0x70>
40012f5c:	ea000007 	b	40012f80 <CyU3PIsLppIOConfigured+0x50>
40012f60:	e1a00000 	nop			; (mov r0, r0)
40012f64:	eb00063d 	bl	40014860 <CyFx3DevIOIsI2sConfigured>
40012f68:	e1a05000 	mov	r5, r0
40012f6c:	ea00000d 	b	40012fa8 <CyU3PIsLppIOConfigured+0x78>
40012f70:	e1a00000 	nop			; (mov r0, r0)
40012f74:	eb000635 	bl	40014850 <CyFx3DevIOIsI2cConfigured>
40012f78:	e1a05000 	mov	r5, r0
40012f7c:	ea000009 	b	40012fa8 <CyU3PIsLppIOConfigured+0x78>
40012f80:	e1a00000 	nop			; (mov r0, r0)
40012f84:	eb00063d 	bl	40014880 <CyFx3DevIOIsUartConfigured>
40012f88:	e1a05000 	mov	r5, r0
40012f8c:	ea000005 	b	40012fa8 <CyU3PIsLppIOConfigured+0x78>
40012f90:	e1a00000 	nop			; (mov r0, r0)
40012f94:	eb000635 	bl	40014870 <CyFx3DevIOIsSpiConfigured>
40012f98:	e1a05000 	mov	r5, r0
40012f9c:	ea000001 	b	40012fa8 <CyU3PIsLppIOConfigured+0x78>
40012fa0:	e1a00000 	nop			; (mov r0, r0)
40012fa4:	e1a00000 	nop			; (mov r0, r0)
40012fa8:	e1a00000 	nop			; (mov r0, r0)
40012fac:	e1a00005 	mov	r0, r5
40012fb0:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDebugApplicationDefine:

40012fb4 <CyU3PDebugApplicationDefine>:
40012fb4:	e92d4010 	push	{r4, lr}
40012fb8:	e24dd020 	sub	sp, sp, #32
40012fbc:	e3a00000 	mov	r0, #0
40012fc0:	e59f109c 	ldr	r1, [pc, #156]	; 40013064 <CyU3PDebugApplicationDefine+0xb0>
40012fc4:	e5810000 	str	r0, [r1]
40012fc8:	e3a00001 	mov	r0, #1
40012fcc:	e2811008 	add	r1, r1, #8
40012fd0:	e5810000 	str	r0, [r1]
40012fd4:	e3a00c02 	mov	r0, #512	; 0x200
40012fd8:	ebffc1a5 	bl	40003674 <CyU3PMemAlloc>
40012fdc:	e1a04000 	mov	r4, r0
40012fe0:	e3a030a8 	mov	r3, #168	; 0xa8
40012fe4:	e3a02001 	mov	r2, #1
40012fe8:	e3a01000 	mov	r1, #0
40012fec:	e3a00006 	mov	r0, #6
40012ff0:	e28dc00c 	add	ip, sp, #12
40012ff4:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40012ff8:	e3a02c02 	mov	r2, #512	; 0x200
40012ffc:	e1a03001 	mov	r3, r1
40013000:	e58d2004 	str	r2, [sp, #4]
40013004:	e59f205c 	ldr	r2, [pc, #92]	; 40013068 <CyU3PDebugApplicationDefine+0xb4>
40013008:	e28f105c 	add	r1, pc, #92	; 0x5c
4001300c:	e58d0008 	str	r0, [sp, #8]
40013010:	e59f0064 	ldr	r0, [pc, #100]	; 4001307c <CyU3PDebugApplicationDefine+0xc8>
40013014:	e58d4000 	str	r4, [sp]
40013018:	ebffdde9 	bl	4000a7c4 <_txe_thread_create>
4001301c:	e3a00084 	mov	r0, #132	; 0x84
40013020:	ebffc193 	bl	40003674 <CyU3PMemAlloc>
40013024:	e1a04000 	mov	r4, r0
40013028:	e3a0303c 	mov	r3, #60	; 0x3c
4001302c:	e3a02084 	mov	r2, #132	; 0x84
40013030:	e1cd20f0 	strd	r2, [sp]
40013034:	e1a03004 	mov	r3, r4
40013038:	e3a02003 	mov	r2, #3
4001303c:	e3a01000 	mov	r1, #0
40013040:	e59f0038 	ldr	r0, [pc, #56]	; 40013080 <CyU3PDebugApplicationDefine+0xcc>
40013044:	ebffdcf8 	bl	4000a42c <_txe_queue_create>
40013048:	e3a03038 	mov	r3, #56	; 0x38
4001304c:	e3a02000 	mov	r2, #0
40013050:	e1a01002 	mov	r1, r2
40013054:	e59f0028 	ldr	r0, [pc, #40]	; 40013084 <CyU3PDebugApplicationDefine+0xd0>
40013058:	ebffdc18 	bl	4000a0c0 <_txe_mutex_create>
4001305c:	e28dd020 	add	sp, sp, #32
40013060:	e8bd8010 	pop	{r4, pc}
40013064:	40030c70 	.word	0x40030c70
40013068:	40013524 	.word	0x40013524
4001306c:	75626544 	.word	0x75626544
40013070:	68542067 	.word	0x68542067
40013074:	64616572 	.word	0x64616572
40013078:	00000000 	.word	0x00000000
4001307c:	4003123c 	.word	0x4003123c
40013080:	400312e4 	.word	0x400312e4
40013084:	40031320 	.word	0x40031320

Disassembly of section i.CyU3PDebugChannelReset:

40013088 <CyU3PDebugChannelReset>:
40013088:	e92d4010 	push	{r4, lr}
4001308c:	e59f0034 	ldr	r0, [pc, #52]	; 400130c8 <CyU3PDebugChannelReset+0x40>
40013090:	eb000d41 	bl	4001659c <CyU3PDmaChannelReset>
40013094:	e3a01000 	mov	r1, #0
40013098:	e59f0028 	ldr	r0, [pc, #40]	; 400130c8 <CyU3PDebugChannelReset+0x40>
4001309c:	eb000ddf 	bl	40016820 <CyU3PDmaChannelSetXfer>
400130a0:	e1a04000 	mov	r4, r0
400130a4:	e3540000 	cmp	r4, #0
400130a8:	1a000004 	bne	400130c0 <CyU3PDebugChannelReset+0x38>
400130ac:	e3e02000 	mvn	r2, #0
400130b0:	e59f1014 	ldr	r1, [pc, #20]	; 400130cc <CyU3PDebugChannelReset+0x44>
400130b4:	e281000c 	add	r0, r1, #12
400130b8:	eb000c6a 	bl	40016268 <CyU3PDmaChannelGetBuffer>
400130bc:	e1a04000 	mov	r4, r0
400130c0:	e1a00004 	mov	r0, r4
400130c4:	e8bd8010 	pop	{r4, pc}
400130c8:	40031364 	.word	0x40031364
400130cc:	40031358 	.word	0x40031358

Disassembly of section i.CyU3PDebugInit:

400130d0 <CyU3PDebugInit>:
400130d0:	e92d4070 	push	{r4, r5, r6, lr}
400130d4:	e24dd020 	sub	sp, sp, #32
400130d8:	e1a04000 	mov	r4, r0
400130dc:	e1a06001 	mov	r6, r1
400130e0:	e59f0150 	ldr	r0, [pc, #336]	; 40013238 <CyU3PDebugInit+0x168>
400130e4:	e5900000 	ldr	r0, [r0]
400130e8:	e3500000 	cmp	r0, #0
400130ec:	1a000003 	bne	40013100 <CyU3PDebugInit+0x30>
400130f0:	e59f0144 	ldr	r0, [pc, #324]	; 4001323c <CyU3PDebugInit+0x16c>
400130f4:	e5900000 	ldr	r0, [r0]
400130f8:	e3500000 	cmp	r0, #0
400130fc:	0a000002 	beq	4001310c <CyU3PDebugInit+0x3c>
40013100:	e3a00043 	mov	r0, #67	; 0x43
40013104:	e28dd020 	add	sp, sp, #32
40013108:	e8bd8070 	pop	{r4, r5, r6, pc}
4001310c:	e1a00004 	mov	r0, r4
40013110:	eb0007b3 	bl	40014fe4 <CyU3PDmaSocketIsValidConsumer>
40013114:	e1a05000 	mov	r5, r0
40013118:	e3550000 	cmp	r5, #0
4001311c:	1a000001 	bne	40013128 <CyU3PDebugInit+0x58>
40013120:	e3a00040 	mov	r0, #64	; 0x40
40013124:	eafffff6 	b	40013104 <CyU3PDebugInit+0x34>
40013128:	e3e01000 	mvn	r1, #0
4001312c:	e59f010c 	ldr	r0, [pc, #268]	; 40013240 <CyU3PDebugInit+0x170>
40013130:	ebffdc60 	bl	4000a2b8 <_txe_mutex_get>
40013134:	e3a00c01 	mov	r0, #256	; 0x100
40013138:	e1cd00b4 	strh	r0, [sp, #4]
4001313c:	e3a00008 	mov	r0, #8
40013140:	e1cd00b6 	strh	r0, [sp, #6]
40013144:	e3a00000 	mov	r0, #0
40013148:	e1cd00bc 	strh	r0, [sp, #12]
4001314c:	e59f00f0 	ldr	r0, [pc, #240]	; 40013244 <CyU3PDebugInit+0x174>
40013150:	e1cd00b8 	strh	r0, [sp, #8]
40013154:	e1cd40ba 	strh	r4, [sp, #10]
40013158:	e3a00000 	mov	r0, #0
4001315c:	e5cd0014 	strb	r0, [sp, #20]
40013160:	e1cd00be 	strh	r0, [sp, #14]
40013164:	e1cd01b0 	strh	r0, [sp, #16]
40013168:	e1cd01b2 	strh	r0, [sp, #18]
4001316c:	e58d001c 	str	r0, [sp, #28]
40013170:	e28d2004 	add	r2, sp, #4
40013174:	e3a01004 	mov	r1, #4
40013178:	e59f00c8 	ldr	r0, [pc, #200]	; 40013248 <CyU3PDebugInit+0x178>
4001317c:	eb000a71 	bl	40015b48 <CyU3PDmaChannelCreate>
40013180:	e1a05000 	mov	r5, r0
40013184:	e3550000 	cmp	r5, #0
40013188:	1a000007 	bne	400131ac <CyU3PDebugInit+0xdc>
4001318c:	e59f00b8 	ldr	r0, [pc, #184]	; 4001324c <CyU3PDebugInit+0x17c>
40013190:	e5900000 	ldr	r0, [r0]
40013194:	e3500000 	cmp	r0, #0
40013198:	0a000003 	beq	400131ac <CyU3PDebugInit+0xdc>
4001319c:	e3a01001 	mov	r1, #1
400131a0:	e59f00a0 	ldr	r0, [pc, #160]	; 40013248 <CyU3PDebugInit+0x178>
400131a4:	eb0008d7 	bl	40015508 <CyU3PDmaChannelCacheControl>
400131a8:	e1a05000 	mov	r5, r0
400131ac:	e3550000 	cmp	r5, #0
400131b0:	1a000003 	bne	400131c4 <CyU3PDebugInit+0xf4>
400131b4:	e3a01000 	mov	r1, #0
400131b8:	e59f0088 	ldr	r0, [pc, #136]	; 40013248 <CyU3PDebugInit+0x178>
400131bc:	eb000d97 	bl	40016820 <CyU3PDmaChannelSetXfer>
400131c0:	e1a05000 	mov	r5, r0
400131c4:	e3550000 	cmp	r5, #0
400131c8:	1a000004 	bne	400131e0 <CyU3PDebugInit+0x110>
400131cc:	e3e02000 	mvn	r2, #0
400131d0:	e59f1078 	ldr	r1, [pc, #120]	; 40013250 <CyU3PDebugInit+0x180>
400131d4:	e281000c 	add	r0, r1, #12
400131d8:	eb000c22 	bl	40016268 <CyU3PDmaChannelGetBuffer>
400131dc:	e1a05000 	mov	r5, r0
400131e0:	e3550000 	cmp	r5, #0
400131e4:	0a000005 	beq	40013200 <CyU3PDebugInit+0x130>
400131e8:	e59f0058 	ldr	r0, [pc, #88]	; 40013248 <CyU3PDebugInit+0x178>
400131ec:	eb000b4f 	bl	40015f30 <CyU3PDmaChannelDestroy>
400131f0:	e59f0048 	ldr	r0, [pc, #72]	; 40013240 <CyU3PDebugInit+0x170>
400131f4:	ebffdc64 	bl	4000a38c <_txe_mutex_put>
400131f8:	e1a00005 	mov	r0, r5
400131fc:	eaffffc0 	b	40013104 <CyU3PDebugInit+0x34>
40013200:	e3a00000 	mov	r0, #0
40013204:	e59f1048 	ldr	r1, [pc, #72]	; 40013254 <CyU3PDebugInit+0x184>
40013208:	e1c100b0 	strh	r0, [r1]
4001320c:	e59f1044 	ldr	r1, [pc, #68]	; 40013258 <CyU3PDebugInit+0x188>
40013210:	e1c100b0 	strh	r0, [r1]
40013214:	e59f0040 	ldr	r0, [pc, #64]	; 4001325c <CyU3PDebugInit+0x18c>
40013218:	e5c06000 	strb	r6, [r0]
4001321c:	e3a00001 	mov	r0, #1
40013220:	e2411010 	sub	r1, r1, #16
40013224:	e5810000 	str	r0, [r1]
40013228:	e59f0010 	ldr	r0, [pc, #16]	; 40013240 <CyU3PDebugInit+0x170>
4001322c:	ebffdc56 	bl	4000a38c <_txe_mutex_put>
40013230:	e1a00005 	mov	r0, r5
40013234:	eaffffb2 	b	40013104 <CyU3PDebugInit+0x34>
40013238:	40030c70 	.word	0x40030c70
4001323c:	40030c74 	.word	0x40030c74
40013240:	40031320 	.word	0x40031320
40013244:	00003f01 	.word	0x00003f01
40013248:	40031364 	.word	0x40031364
4001324c:	40030c60 	.word	0x40030c60
40013250:	40031358 	.word	0x40031358
40013254:	40030c7e 	.word	0x40030c7e
40013258:	40030c80 	.word	0x40030c80
4001325c:	40030c7c 	.word	0x40030c7c

Disassembly of section i.CyU3PDebugIntToStr:

40013260 <CyU3PDebugIntToStr>:
40013260:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40013264:	e1a04000 	mov	r4, r0
40013268:	e1a05001 	mov	r5, r1
4001326c:	e1a08002 	mov	r8, r2
40013270:	e3a0600a 	mov	r6, #10
40013274:	e1a07004 	mov	r7, r4
40013278:	e3a00000 	mov	r0, #0
4001327c:	e1a04007 	mov	r4, r7
40013280:	e7c70006 	strb	r0, [r7, r6]
40013284:	e1a00000 	nop			; (mov r0, r0)
40013288:	e1a01008 	mov	r1, r8
4001328c:	e1a00005 	mov	r0, r5
40013290:	ebfff664 	bl	40010c28 <__aeabi_uidivmod>
40013294:	e28f0030 	add	r0, pc, #48	; 0x30
40013298:	e7d00001 	ldrb	r0, [r0, r1]
4001329c:	e2461001 	sub	r1, r6, #1
400132a0:	e20110ff 	and	r1, r1, #255	; 0xff
400132a4:	e1a06001 	mov	r6, r1
400132a8:	e7c70001 	strb	r0, [r7, r1]
400132ac:	e1a01008 	mov	r1, r8
400132b0:	e1a00005 	mov	r0, r5
400132b4:	ebfff65b 	bl	40010c28 <__aeabi_uidivmod>
400132b8:	e1a05000 	mov	r5, r0
400132bc:	e3550000 	cmp	r5, #0
400132c0:	1afffff0 	bne	40013288 <CyU3PDebugIntToStr+0x28>
400132c4:	e0870006 	add	r0, r7, r6
400132c8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400132cc:	33323130 	.word	0x33323130
400132d0:	37363534 	.word	0x37363534
400132d4:	42413938 	.word	0x42413938
400132d8:	46454443 	.word	0x46454443
400132dc:	00000000 	.word	0x00000000

Disassembly of section i.CyU3PDebugPreamble:

400132e0 <CyU3PDebugPreamble>:
400132e0:	e59f1004 	ldr	r1, [pc, #4]	; 400132ec <CyU3PDebugPreamble+0xc>
400132e4:	e5810000 	str	r0, [r1]
400132e8:	e12fff1e 	bx	lr
400132ec:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugPrint:

400132f0 <CyU3PDebugPrint>:
400132f0:	e92d000f 	push	{r0, r1, r2, r3}
400132f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400132f8:	e24dd028 	sub	sp, sp, #40	; 0x28
400132fc:	e1a04000 	mov	r4, r0
40013300:	e59f0200 	ldr	r0, [pc, #512]	; 40013508 <CyU3PDebugPrint+0x218>
40013304:	e5900000 	ldr	r0, [r0]
40013308:	e3500000 	cmp	r0, #0
4001330c:	1a000003 	bne	40013320 <CyU3PDebugPrint+0x30>
40013310:	e3a00042 	mov	r0, #66	; 0x42
40013314:	e28dd028 	add	sp, sp, #40	; 0x28
40013318:	e8bd01f0 	pop	{r4, r5, r6, r7, r8}
4001331c:	e49df014 	ldr	pc, [sp], #20
40013320:	e59f01e4 	ldr	r0, [pc, #484]	; 4001350c <CyU3PDebugPrint+0x21c>
40013324:	e5d00000 	ldrb	r0, [r0]
40013328:	e1540000 	cmp	r4, r0
4001332c:	da000001 	ble	40013338 <CyU3PDebugPrint+0x48>
40013330:	e3a00000 	mov	r0, #0
40013334:	eafffff6 	b	40013314 <CyU3PDebugPrint+0x24>
40013338:	ebffd5c9 	bl	40008a64 <_tx_thread_identify>
4001333c:	e1a05000 	mov	r5, r0
40013340:	e3550000 	cmp	r5, #0
40013344:	1a000001 	bne	40013350 <CyU3PDebugPrint+0x60>
40013348:	e3a00013 	mov	r0, #19
4001334c:	eafffff0 	b	40013314 <CyU3PDebugPrint+0x24>
40013350:	e3a03000 	mov	r3, #0
40013354:	e58d3004 	str	r3, [sp, #4]
40013358:	e58d3008 	str	r3, [sp, #8]
4001335c:	e58d300c 	str	r3, [sp, #12]
40013360:	e58d3010 	str	r3, [sp, #16]
40013364:	e58d3000 	str	r3, [sp]
40013368:	e1a02003 	mov	r2, r3
4001336c:	e28d1018 	add	r1, sp, #24
40013370:	e1a00005 	mov	r0, r5
40013374:	ebffddab 	bl	4000aa28 <_txe_thread_info_get>
40013378:	e59d0018 	ldr	r0, [sp, #24]
4001337c:	e5d00001 	ldrb	r0, [r0, #1]
40013380:	e2400030 	sub	r0, r0, #48	; 0x30
40013384:	e59d1018 	ldr	r1, [sp, #24]
40013388:	e5d11000 	ldrb	r1, [r1]
4001338c:	e2411030 	sub	r1, r1, #48	; 0x30
40013390:	e3a0200a 	mov	r2, #10
40013394:	e1000182 	smlabb	r0, r2, r1, r0
40013398:	e20080ff 	and	r8, r0, #255	; 0xff
4001339c:	e3e01000 	mvn	r1, #0
400133a0:	e59f0168 	ldr	r0, [pc, #360]	; 40013510 <CyU3PDebugPrint+0x220>
400133a4:	ebffdbc3 	bl	4000a2b8 <_txe_mutex_get>
400133a8:	e59f0164 	ldr	r0, [pc, #356]	; 40013514 <CyU3PDebugPrint+0x224>
400133ac:	e1d000b0 	ldrh	r0, [r0]
400133b0:	e3500000 	cmp	r0, #0
400133b4:	0a000011 	beq	40013400 <CyU3PDebugPrint+0x110>
400133b8:	e3a02000 	mov	r2, #0
400133bc:	e3a01c01 	mov	r1, #256	; 0x100
400133c0:	e59f0150 	ldr	r0, [pc, #336]	; 40013518 <CyU3PDebugPrint+0x228>
400133c4:	eb000864 	bl	4001555c <CyU3PDmaChannelCommitBuffer>
400133c8:	e1a06000 	mov	r6, r0
400133cc:	e3560000 	cmp	r6, #0
400133d0:	1a000004 	bne	400133e8 <CyU3PDebugPrint+0xf8>
400133d4:	e3e02000 	mvn	r2, #0
400133d8:	e59f113c 	ldr	r1, [pc, #316]	; 4001351c <CyU3PDebugPrint+0x22c>
400133dc:	e281000c 	add	r0, r1, #12
400133e0:	eb000ba0 	bl	40016268 <CyU3PDmaChannelGetBuffer>
400133e4:	e1a06000 	mov	r6, r0
400133e8:	e3560000 	cmp	r6, #0
400133ec:	0a000000 	beq	400133f4 <CyU3PDebugPrint+0x104>
400133f0:	ebffff24 	bl	40013088 <CyU3PDebugChannelReset>
400133f4:	e3a00000 	mov	r0, #0
400133f8:	e59f1114 	ldr	r1, [pc, #276]	; 40013514 <CyU3PDebugPrint+0x224>
400133fc:	e1c100b0 	strh	r0, [r1]
40013400:	e59f0114 	ldr	r0, [pc, #276]	; 4001351c <CyU3PDebugPrint+0x22c>
40013404:	e5907000 	ldr	r7, [r0]
40013408:	e3a00c01 	mov	r0, #256	; 0x100
4001340c:	e58d0014 	str	r0, [sp, #20]
40013410:	e59f0108 	ldr	r0, [pc, #264]	; 40013520 <CyU3PDebugPrint+0x230>
40013414:	e5900000 	ldr	r0, [r0]
40013418:	e3500000 	cmp	r0, #0
4001341c:	0a000005 	beq	40013438 <CyU3PDebugPrint+0x148>
40013420:	e2877008 	add	r7, r7, #8
40013424:	e1dd01b4 	ldrh	r0, [sp, #20]
40013428:	e2400008 	sub	r0, r0, #8
4001342c:	e1a00800 	lsl	r0, r0, #16
40013430:	e1a00820 	lsr	r0, r0, #16
40013434:	e58d0014 	str	r0, [sp, #20]
40013438:	e28d0048 	add	r0, sp, #72	; 0x48
4001343c:	e58d001c 	str	r0, [sp, #28]
40013440:	e59d2044 	ldr	r2, [sp, #68]	; 0x44
40013444:	e59d301c 	ldr	r3, [sp, #28]
40013448:	e28d1014 	add	r1, sp, #20
4001344c:	e1a00007 	mov	r0, r7
40013450:	eb000071 	bl	4001361c <MyDebugSNPrint>
40013454:	e1a06000 	mov	r6, r0
40013458:	e59f00c0 	ldr	r0, [pc, #192]	; 40013520 <CyU3PDebugPrint+0x230>
4001345c:	e5900000 	ldr	r0, [r0]
40013460:	e3500000 	cmp	r0, #0
40013464:	0a00000f 	beq	400134a8 <CyU3PDebugPrint+0x1b8>
40013468:	e59f00ac 	ldr	r0, [pc, #172]	; 4001351c <CyU3PDebugPrint+0x22c>
4001346c:	e5907000 	ldr	r7, [r0]
40013470:	e5cd4020 	strb	r4, [sp, #32]
40013474:	e5cd8021 	strb	r8, [sp, #33]	; 0x21
40013478:	e3e00000 	mvn	r0, #0
4001347c:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
40013480:	e1dd01b4 	ldrh	r0, [sp, #20]
40013484:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013488:	e3a02008 	mov	r2, #8
4001348c:	e28d1020 	add	r1, sp, #32
40013490:	e1a00007 	mov	r0, r7
40013494:	ebffc10e 	bl	400038d4 <CyU3PMemCopy>
40013498:	e1dd01b4 	ldrh	r0, [sp, #20]
4001349c:	e2800008 	add	r0, r0, #8
400134a0:	e3c00801 	bic	r0, r0, #65536	; 0x10000
400134a4:	e58d0014 	str	r0, [sp, #20]
400134a8:	e3a02000 	mov	r2, #0
400134ac:	e1dd11b4 	ldrh	r1, [sp, #20]
400134b0:	e59f0060 	ldr	r0, [pc, #96]	; 40013518 <CyU3PDebugPrint+0x228>
400134b4:	eb000828 	bl	4001555c <CyU3PDmaChannelCommitBuffer>
400134b8:	e1a06000 	mov	r6, r0
400134bc:	e3560000 	cmp	r6, #0
400134c0:	1a000004 	bne	400134d8 <CyU3PDebugPrint+0x1e8>
400134c4:	e3e02000 	mvn	r2, #0
400134c8:	e59f104c 	ldr	r1, [pc, #76]	; 4001351c <CyU3PDebugPrint+0x22c>
400134cc:	e281000c 	add	r0, r1, #12
400134d0:	eb000b64 	bl	40016268 <CyU3PDmaChannelGetBuffer>
400134d4:	e1a06000 	mov	r6, r0
400134d8:	e3560000 	cmp	r6, #0
400134dc:	0a000002 	beq	400134ec <CyU3PDebugPrint+0x1fc>
400134e0:	ebfffee8 	bl	40013088 <CyU3PDebugChannelReset>
400134e4:	e1a00006 	mov	r0, r6
400134e8:	eaffff89 	b	40013314 <CyU3PDebugPrint+0x24>
400134ec:	e3a00000 	mov	r0, #0
400134f0:	e59f101c 	ldr	r1, [pc, #28]	; 40013514 <CyU3PDebugPrint+0x224>
400134f4:	e1c100b0 	strh	r0, [r1]
400134f8:	e59f0010 	ldr	r0, [pc, #16]	; 40013510 <CyU3PDebugPrint+0x220>
400134fc:	ebffdba2 	bl	4000a38c <_txe_mutex_put>
40013500:	e3a00000 	mov	r0, #0
40013504:	eaffff82 	b	40013314 <CyU3PDebugPrint+0x24>
40013508:	40030c70 	.word	0x40030c70
4001350c:	40030c7c 	.word	0x40030c7c
40013510:	40031320 	.word	0x40031320
40013514:	40030c80 	.word	0x40030c80
40013518:	40031364 	.word	0x40031364
4001351c:	40031358 	.word	0x40031358
40013520:	40030c78 	.word	0x40030c78

Disassembly of section i.CyU3PDebugThreadEntry:

40013524 <CyU3PDebugThreadEntry>:
40013524:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
40013528:	e1a06000 	mov	r6, r0
4001352c:	e3a05000 	mov	r5, #0
40013530:	e1a00000 	nop			; (mov r0, r0)
40013534:	e3e02000 	mvn	r2, #0
40013538:	e1a0100d 	mov	r1, sp
4001353c:	e59f00c4 	ldr	r0, [pc, #196]	; 40013608 <CyU3PDebugThreadEntry+0xe4>
40013540:	ebffdc4f 	bl	4000a684 <_txe_queue_receive>
40013544:	e1a04000 	mov	r4, r0
40013548:	e3540000 	cmp	r4, #0
4001354c:	1afffff8 	bne	40013534 <CyU3PDebugThreadEntry+0x10>
40013550:	e3e01000 	mvn	r1, #0
40013554:	e59f00b0 	ldr	r0, [pc, #176]	; 4001360c <CyU3PDebugThreadEntry+0xe8>
40013558:	ebffdb56 	bl	4000a2b8 <_txe_mutex_get>
4001355c:	e59f00ac 	ldr	r0, [pc, #172]	; 40013610 <CyU3PDebugThreadEntry+0xec>
40013560:	e1d000b0 	ldrh	r0, [r0]
40013564:	e3500c01 	cmp	r0, #256	; 0x100
40013568:	0a000007 	beq	4001358c <CyU3PDebugThreadEntry+0x68>
4001356c:	e59f10a0 	ldr	r1, [pc, #160]	; 40013614 <CyU3PDebugThreadEntry+0xf0>
40013570:	e5911000 	ldr	r1, [r1]
40013574:	e59f2094 	ldr	r2, [pc, #148]	; 40013610 <CyU3PDebugThreadEntry+0xec>
40013578:	e1d220b0 	ldrh	r2, [r2]
4001357c:	e0810002 	add	r0, r1, r2
40013580:	e3a02008 	mov	r2, #8
40013584:	e1a0100d 	mov	r1, sp
40013588:	ebffc0d1 	bl	400038d4 <CyU3PMemCopy>
4001358c:	e59f007c 	ldr	r0, [pc, #124]	; 40013610 <CyU3PDebugThreadEntry+0xec>
40013590:	e1d000b0 	ldrh	r0, [r0]
40013594:	e35000f8 	cmp	r0, #248	; 0xf8
40013598:	1a000015 	bne	400135f4 <CyU3PDebugThreadEntry+0xd0>
4001359c:	e3a02000 	mov	r2, #0
400135a0:	e3a01c01 	mov	r1, #256	; 0x100
400135a4:	e59f006c 	ldr	r0, [pc, #108]	; 40013618 <CyU3PDebugThreadEntry+0xf4>
400135a8:	eb0007eb 	bl	4001555c <CyU3PDmaChannelCommitBuffer>
400135ac:	e1a05000 	mov	r5, r0
400135b0:	e3550000 	cmp	r5, #0
400135b4:	1a000004 	bne	400135cc <CyU3PDebugThreadEntry+0xa8>
400135b8:	e3e02000 	mvn	r2, #0
400135bc:	e59f1050 	ldr	r1, [pc, #80]	; 40013614 <CyU3PDebugThreadEntry+0xf0>
400135c0:	e281000c 	add	r0, r1, #12
400135c4:	eb000b27 	bl	40016268 <CyU3PDmaChannelGetBuffer>
400135c8:	e1a05000 	mov	r5, r0
400135cc:	e3550000 	cmp	r5, #0
400135d0:	0a000004 	beq	400135e8 <CyU3PDebugThreadEntry+0xc4>
400135d4:	ebfffeab 	bl	40013088 <CyU3PDebugChannelReset>
400135d8:	e1a05000 	mov	r5, r0
400135dc:	e3550000 	cmp	r5, #0
400135e0:	0a000000 	beq	400135e8 <CyU3PDebugThreadEntry+0xc4>
400135e4:	ea000005 	b	40013600 <CyU3PDebugThreadEntry+0xdc>
400135e8:	e3a00000 	mov	r0, #0
400135ec:	e59f101c 	ldr	r1, [pc, #28]	; 40013610 <CyU3PDebugThreadEntry+0xec>
400135f0:	e1c100b0 	strh	r0, [r1]
400135f4:	e59f0010 	ldr	r0, [pc, #16]	; 4001360c <CyU3PDebugThreadEntry+0xe8>
400135f8:	ebffdb63 	bl	4000a38c <_txe_mutex_put>
400135fc:	eaffffcc 	b	40013534 <CyU3PDebugThreadEntry+0x10>
40013600:	e1a00000 	nop			; (mov r0, r0)
40013604:	e8bd807c 	pop	{r2, r3, r4, r5, r6, pc}
40013608:	400312e4 	.word	0x400312e4
4001360c:	40031320 	.word	0x40031320
40013610:	40030c80 	.word	0x40030c80
40013614:	40031358 	.word	0x40031358
40013618:	40031364 	.word	0x40031364

Disassembly of section i.MyDebugSNPrint:

4001361c <MyDebugSNPrint>:
4001361c:	e92d4fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40013620:	e24dd01c 	sub	sp, sp, #28
40013624:	e1a04000 	mov	r4, r0
40013628:	e1a05001 	mov	r5, r1
4001362c:	e1a06002 	mov	r6, r2
40013630:	e3a08000 	mov	r8, #0
40013634:	e3a00000 	mov	r0, #0
40013638:	e58d0018 	str	r0, [sp, #24]
4001363c:	e3a09000 	mov	r9, #0
40013640:	e1d5b0b0 	ldrh	fp, [r5]
40013644:	e3540000 	cmp	r4, #0
40013648:	1a000002 	bne	40013658 <MyDebugSNPrint+0x3c>
4001364c:	e3a00040 	mov	r0, #64	; 0x40
40013650:	e28dd02c 	add	sp, sp, #44	; 0x2c
40013654:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
40013658:	e1a07006 	mov	r7, r6
4001365c:	ea00008d 	b	40013898 <MyDebugSNPrint+0x27c>
40013660:	e24b0002 	sub	r0, fp, #2
40013664:	e1500009 	cmp	r0, r9
40013668:	ca000001 	bgt	40013674 <MyDebugSNPrint+0x58>
4001366c:	e3a00040 	mov	r0, #64	; 0x40
40013670:	eafffff6 	b	40013650 <MyDebugSNPrint+0x34>
40013674:	e5d70000 	ldrb	r0, [r7]
40013678:	e3500025 	cmp	r0, #37	; 0x25
4001367c:	0a000005 	beq	40013698 <MyDebugSNPrint+0x7c>
40013680:	e5d71000 	ldrb	r1, [r7]
40013684:	e1a00009 	mov	r0, r9
40013688:	e2892001 	add	r2, r9, #1
4001368c:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013690:	e7c41000 	strb	r1, [r4, r0]
40013694:	ea00007e 	b	40013894 <MyDebugSNPrint+0x278>
40013698:	e2877001 	add	r7, r7, #1
4001369c:	e5d70000 	ldrb	r0, [r7]
400136a0:	e3500064 	cmp	r0, #100	; 0x64
400136a4:	0a000021 	beq	40013730 <MyDebugSNPrint+0x114>
400136a8:	ca000006 	bgt	400136c8 <MyDebugSNPrint+0xac>
400136ac:	e3500025 	cmp	r0, #37	; 0x25
400136b0:	0a00000b 	beq	400136e4 <MyDebugSNPrint+0xc8>
400136b4:	e3500058 	cmp	r0, #88	; 0x58
400136b8:	0a00004c 	beq	400137f0 <MyDebugSNPrint+0x1d4>
400136bc:	e3500063 	cmp	r0, #99	; 0x63
400136c0:	1a00005a 	bne	40013830 <MyDebugSNPrint+0x214>
400136c4:	ea00000d 	b	40013700 <MyDebugSNPrint+0xe4>
400136c8:	e3500073 	cmp	r0, #115	; 0x73
400136cc:	0a000031 	beq	40013798 <MyDebugSNPrint+0x17c>
400136d0:	e3500075 	cmp	r0, #117	; 0x75
400136d4:	0a000036 	beq	400137b4 <MyDebugSNPrint+0x198>
400136d8:	e3500078 	cmp	r0, #120	; 0x78
400136dc:	1a000053 	bne	40013830 <MyDebugSNPrint+0x214>
400136e0:	ea000044 	b	400137f8 <MyDebugSNPrint+0x1dc>
400136e4:	e1a00000 	nop			; (mov r0, r0)
400136e8:	e3a01025 	mov	r1, #37	; 0x25
400136ec:	e1a00009 	mov	r0, r9
400136f0:	e2892001 	add	r2, r9, #1
400136f4:	e3c29801 	bic	r9, r2, #65536	; 0x10000
400136f8:	e7c41000 	strb	r1, [r4, r0]
400136fc:	ea00004e 	b	4001383c <MyDebugSNPrint+0x220>
40013700:	e1a00000 	nop			; (mov r0, r0)
40013704:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013708:	e5900000 	ldr	r0, [r0]
4001370c:	e59d1028 	ldr	r1, [sp, #40]	; 0x28
40013710:	e2811004 	add	r1, r1, #4
40013714:	e58d1028 	str	r1, [sp, #40]	; 0x28
40013718:	e20010ff 	and	r1, r0, #255	; 0xff
4001371c:	e1a00009 	mov	r0, r9
40013720:	e2892001 	add	r2, r9, #1
40013724:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013728:	e7c41000 	strb	r1, [r4, r0]
4001372c:	ea000042 	b	4001383c <MyDebugSNPrint+0x220>
40013730:	e1a00000 	nop			; (mov r0, r0)
40013734:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013738:	e5900000 	ldr	r0, [r0]
4001373c:	e58d0014 	str	r0, [sp, #20]
40013740:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013744:	e2800004 	add	r0, r0, #4
40013748:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001374c:	e59d0014 	ldr	r0, [sp, #20]
40013750:	e3500000 	cmp	r0, #0
40013754:	aa000007 	bge	40013778 <MyDebugSNPrint+0x15c>
40013758:	e3a0102d 	mov	r1, #45	; 0x2d
4001375c:	e1a00009 	mov	r0, r9
40013760:	e2892001 	add	r2, r9, #1
40013764:	e3c29801 	bic	r9, r2, #65536	; 0x10000
40013768:	e7c41000 	strb	r1, [r4, r0]
4001376c:	e59d0014 	ldr	r0, [sp, #20]
40013770:	e2600000 	rsb	r0, r0, #0
40013774:	e58d0014 	str	r0, [sp, #20]
40013778:	e3a0200a 	mov	r2, #10
4001377c:	e59d1014 	ldr	r1, [sp, #20]
40013780:	e28d0004 	add	r0, sp, #4
40013784:	ebfffeb5 	bl	40013260 <CyU3PDebugIntToStr>
40013788:	e1a08000 	mov	r8, r0
4001378c:	e3a00001 	mov	r0, #1
40013790:	e58d0018 	str	r0, [sp, #24]
40013794:	ea000028 	b	4001383c <MyDebugSNPrint+0x220>
40013798:	e1a00000 	nop			; (mov r0, r0)
4001379c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137a0:	e4908004 	ldr	r8, [r0], #4
400137a4:	e58d0028 	str	r0, [sp, #40]	; 0x28
400137a8:	e3a00001 	mov	r0, #1
400137ac:	e58d0018 	str	r0, [sp, #24]
400137b0:	ea000021 	b	4001383c <MyDebugSNPrint+0x220>
400137b4:	e1a00000 	nop			; (mov r0, r0)
400137b8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137bc:	e5900000 	ldr	r0, [r0]
400137c0:	e58d0010 	str	r0, [sp, #16]
400137c4:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137c8:	e2800004 	add	r0, r0, #4
400137cc:	e58d0028 	str	r0, [sp, #40]	; 0x28
400137d0:	e3a0200a 	mov	r2, #10
400137d4:	e59d1010 	ldr	r1, [sp, #16]
400137d8:	e28d0004 	add	r0, sp, #4
400137dc:	ebfffe9f 	bl	40013260 <CyU3PDebugIntToStr>
400137e0:	e1a08000 	mov	r8, r0
400137e4:	e3a00001 	mov	r0, #1
400137e8:	e58d0018 	str	r0, [sp, #24]
400137ec:	ea000012 	b	4001383c <MyDebugSNPrint+0x220>
400137f0:	e1a00000 	nop			; (mov r0, r0)
400137f4:	e1a00000 	nop			; (mov r0, r0)
400137f8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400137fc:	e5900000 	ldr	r0, [r0]
40013800:	e58d0010 	str	r0, [sp, #16]
40013804:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40013808:	e2800004 	add	r0, r0, #4
4001380c:	e58d0028 	str	r0, [sp, #40]	; 0x28
40013810:	e3a02010 	mov	r2, #16
40013814:	e59d1010 	ldr	r1, [sp, #16]
40013818:	e28d0004 	add	r0, sp, #4
4001381c:	ebfffe8f 	bl	40013260 <CyU3PDebugIntToStr>
40013820:	e1a08000 	mov	r8, r0
40013824:	e3a00001 	mov	r0, #1
40013828:	e58d0018 	str	r0, [sp, #24]
4001382c:	ea000002 	b	4001383c <MyDebugSNPrint+0x220>
40013830:	e1a00000 	nop			; (mov r0, r0)
40013834:	e3a00040 	mov	r0, #64	; 0x40
40013838:	eaffff84 	b	40013650 <MyDebugSNPrint+0x34>
4001383c:	e1a00000 	nop			; (mov r0, r0)
40013840:	e59d0018 	ldr	r0, [sp, #24]
40013844:	e3500000 	cmp	r0, #0
40013848:	0a000010 	beq	40013890 <MyDebugSNPrint+0x274>
4001384c:	e1a00008 	mov	r0, r8
40013850:	ebfff49f 	bl	40010ad4 <strlen>
40013854:	e1a0a800 	lsl	sl, r0, #16
40013858:	e1a0a82a 	lsr	sl, sl, #16
4001385c:	e04b000a 	sub	r0, fp, sl
40013860:	e2400001 	sub	r0, r0, #1
40013864:	e1500009 	cmp	r0, r9
40013868:	ca000001 	bgt	40013874 <MyDebugSNPrint+0x258>
4001386c:	e3a00040 	mov	r0, #64	; 0x40
40013870:	eaffff76 	b	40013650 <MyDebugSNPrint+0x34>
40013874:	e0840009 	add	r0, r4, r9
40013878:	e1a01008 	mov	r1, r8
4001387c:	ebfff458 	bl	400109e4 <strcpy>
40013880:	e089000a 	add	r0, r9, sl
40013884:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40013888:	e3a00000 	mov	r0, #0
4001388c:	e58d0018 	str	r0, [sp, #24]
40013890:	e1a00000 	nop			; (mov r0, r0)
40013894:	e2877001 	add	r7, r7, #1
40013898:	e5d70000 	ldrb	r0, [r7]
4001389c:	e3500000 	cmp	r0, #0
400138a0:	1affff6e 	bne	40013660 <MyDebugSNPrint+0x44>
400138a4:	e3a00000 	mov	r0, #0
400138a8:	e7c40009 	strb	r0, [r4, r9]
400138ac:	e1c590b0 	strh	r9, [r5]
400138b0:	eaffff66 	b	40013650 <MyDebugSNPrint+0x34>

Disassembly of section i.CyU3PBusyWait:

400138b4 <CyU3PBusyWait>:
400138b4:	ea000006 	b	400138d4 <CyU3PBusyWait+0x20>
400138b8:	e3a01000 	mov	r1, #0
400138bc:	ea000002 	b	400138cc <CyU3PBusyWait+0x18>
400138c0:	e281100a 	add	r1, r1, #10
400138c4:	e241100a 	sub	r1, r1, #10
400138c8:	e2811001 	add	r1, r1, #1
400138cc:	e351001f 	cmp	r1, #31
400138d0:	3afffffa 	bcc	400138c0 <CyU3PBusyWait+0xc>
400138d4:	e1b02000 	movs	r2, r0
400138d8:	e2403001 	sub	r3, r0, #1
400138dc:	e1a00803 	lsl	r0, r3, #16
400138e0:	e1a00820 	lsr	r0, r0, #16
400138e4:	1afffff3 	bne	400138b8 <CyU3PBusyWait+0x4>
400138e8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PComputeChecksum:

400138ec <CyU3PComputeChecksum>:
400138ec:	e92d4010 	push	{r4, lr}
400138f0:	e1a03000 	mov	r3, r0
400138f4:	e3a00000 	mov	r0, #0
400138f8:	e3530000 	cmp	r3, #0
400138fc:	0a000003 	beq	40013910 <CyU3PComputeChecksum+0x24>
40013900:	e3510000 	cmp	r1, #0
40013904:	0a000001 	beq	40013910 <CyU3PComputeChecksum+0x24>
40013908:	e3520000 	cmp	r2, #0
4001390c:	1a000001 	bne	40013918 <CyU3PComputeChecksum+0x2c>
40013910:	e3a00040 	mov	r0, #64	; 0x40
40013914:	ea00000a 	b	40013944 <CyU3PComputeChecksum+0x58>
40013918:	e3a0e000 	mov	lr, #0
4001391c:	e582e000 	str	lr, [r2]
40013920:	e3a0c000 	mov	ip, #0
40013924:	ea000004 	b	4001393c <CyU3PComputeChecksum+0x50>
40013928:	e592e000 	ldr	lr, [r2]
4001392c:	e793410c 	ldr	r4, [r3, ip, lsl #2]
40013930:	e08ee004 	add	lr, lr, r4
40013934:	e582e000 	str	lr, [r2]
40013938:	e28cc001 	add	ip, ip, #1
4001393c:	e15c0121 	cmp	ip, r1, lsr #2
40013940:	3afffff8 	bcc	40013928 <CyU3PComputeChecksum+0x3c>
40013944:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memclr4:

40013948 <__aeabi_memclr4>:
40013948:	e92d4030 	push	{r4, r5, lr}
4001394c:	e1a04000 	mov	r4, r0
40013950:	e1a05001 	mov	r5, r1
40013954:	e3a02000 	mov	r2, #0
40013958:	e1a01005 	mov	r1, r5
4001395c:	e1a00004 	mov	r0, r4
40013960:	eb000020 	bl	400139e8 <__aeabi_memset>
40013964:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.__aeabi_memcpy:

40013968 <__aeabi_memcpy>:
40013968:	e92d4010 	push	{r4, lr}
4001396c:	e1a03000 	mov	r3, r0
40013970:	e1a0c001 	mov	ip, r1
40013974:	e1500001 	cmp	r0, r1
40013978:	2a000006 	bcs	40013998 <__aeabi_memcpy+0x30>
4001397c:	ea000001 	b	40013988 <__aeabi_memcpy+0x20>
40013980:	e4dce001 	ldrb	lr, [ip], #1
40013984:	e4c3e001 	strb	lr, [r3], #1
40013988:	e1b0e002 	movs	lr, r2
4001398c:	e2422001 	sub	r2, r2, #1
40013990:	1afffffa 	bne	40013980 <__aeabi_memcpy+0x18>
40013994:	ea000009 	b	400139c0 <__aeabi_memcpy+0x58>
40013998:	e080e002 	add	lr, r0, r2
4001399c:	e24e3001 	sub	r3, lr, #1
400139a0:	e081e002 	add	lr, r1, r2
400139a4:	e24ec001 	sub	ip, lr, #1
400139a8:	ea000001 	b	400139b4 <__aeabi_memcpy+0x4c>
400139ac:	e45ce001 	ldrb	lr, [ip], #-1
400139b0:	e443e001 	strb	lr, [r3], #-1
400139b4:	e1b0e002 	movs	lr, r2
400139b8:	e2422001 	sub	r2, r2, #1
400139bc:	1afffffa 	bne	400139ac <__aeabi_memcpy+0x44>
400139c0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.__aeabi_memcpy4:

400139c4 <__aeabi_memcpy4>:
400139c4:	e92d4070 	push	{r4, r5, r6, lr}
400139c8:	e1a04000 	mov	r4, r0
400139cc:	e1a05001 	mov	r5, r1
400139d0:	e1a06002 	mov	r6, r2
400139d4:	e1a02006 	mov	r2, r6
400139d8:	e1a01005 	mov	r1, r5
400139dc:	e1a00004 	mov	r0, r4
400139e0:	ebffffe0 	bl	40013968 <__aeabi_memcpy>
400139e4:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.__aeabi_memset:

400139e8 <__aeabi_memset>:
400139e8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
400139ec:	e1a03000 	mov	r3, r0
400139f0:	ea000000 	b	400139f8 <__aeabi_memset+0x10>
400139f4:	e4c32001 	strb	r2, [r3], #1
400139f8:	e1b0c001 	movs	ip, r1
400139fc:	e2411001 	sub	r1, r1, #1
40013a00:	1afffffb 	bne	400139f4 <__aeabi_memset+0xc>
40013a04:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section i.CyU3PApplicationDefine:

40013a08 <CyU3PApplicationDefine>:
40013a08:	e92d4010 	push	{r4, lr}
40013a0c:	e24dd020 	sub	sp, sp, #32
40013a10:	e3e00000 	mvn	r0, #0
40013a14:	e59f10b4 	ldr	r1, [pc, #180]	; 40013ad0 <CyU3PApplicationDefine+0xc8>
40013a18:	e5810000 	str	r0, [r1]
40013a1c:	e3a00000 	mov	r0, #0
40013a20:	e59f10ac 	ldr	r1, [pc, #172]	; 40013ad4 <CyU3PApplicationDefine+0xcc>
40013a24:	e5810000 	str	r0, [r1]
40013a28:	ebffbefe 	bl	40003628 <CyU3PMemInit>
40013a2c:	eb001694 	bl	40019484 <CyU3PDmaApplicationDefine>
40013a30:	e3a02028 	mov	r2, #40	; 0x28
40013a34:	e3a01000 	mov	r1, #0
40013a38:	e59f0098 	ldr	r0, [pc, #152]	; 40013ad8 <CyU3PApplicationDefine+0xd0>
40013a3c:	ebffd8e5 	bl	40009dd8 <_txe_event_flags_create>
40013a40:	e3a00080 	mov	r0, #128	; 0x80
40013a44:	ebffbf0a 	bl	40003674 <CyU3PMemAlloc>
40013a48:	e1a04000 	mov	r4, r0
40013a4c:	e3a0303c 	mov	r3, #60	; 0x3c
40013a50:	e3a02080 	mov	r2, #128	; 0x80
40013a54:	e1cd20f0 	strd	r2, [sp]
40013a58:	e1a03004 	mov	r3, r4
40013a5c:	e3a02006 	mov	r2, #6
40013a60:	e3a01000 	mov	r1, #0
40013a64:	e59f0070 	ldr	r0, [pc, #112]	; 40013adc <CyU3PApplicationDefine+0xd4>
40013a68:	ebffda6f 	bl	4000a42c <_txe_queue_create>
40013a6c:	e3a00b01 	mov	r0, #1024	; 0x400
40013a70:	ebffbeff 	bl	40003674 <CyU3PMemAlloc>
40013a74:	e1a04000 	mov	r4, r0
40013a78:	e3a030a8 	mov	r3, #168	; 0xa8
40013a7c:	e3a02001 	mov	r2, #1
40013a80:	e3a01000 	mov	r1, #0
40013a84:	e3a00004 	mov	r0, #4
40013a88:	e28dc00c 	add	ip, sp, #12
40013a8c:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013a90:	e3a02b01 	mov	r2, #1024	; 0x400
40013a94:	e1a03001 	mov	r3, r1
40013a98:	e58d2004 	str	r2, [sp, #4]
40013a9c:	e59f203c 	ldr	r2, [pc, #60]	; 40013ae0 <CyU3PApplicationDefine+0xd8>
40013aa0:	e28f103c 	add	r1, pc, #60	; 0x3c
40013aa4:	e58d0008 	str	r0, [sp, #8]
40013aa8:	e59f0048 	ldr	r0, [pc, #72]	; 40013af8 <CyU3PApplicationDefine+0xf0>
40013aac:	e58d4000 	str	r4, [sp]
40013ab0:	ebffdb43 	bl	4000a7c4 <_txe_thread_create>
40013ab4:	eb000082 	bl	40013cc4 <CyU3PSibApplicationDefine>
40013ab8:	ebfffd3d 	bl	40012fb4 <CyU3PDebugApplicationDefine>
40013abc:	eb001d16 	bl	4001af1c <CyU3PPibApplicationDefine>
40013ac0:	eb00013c 	bl	40013fb8 <CyU3PLppApplicationDefine>
40013ac4:	eb002b6f 	bl	4001e888 <CyU3PUibApplicationDefine>
40013ac8:	e28dd020 	add	sp, sp, #32
40013acc:	e8bd8010 	pop	{r4, pc}
40013ad0:	40030c84 	.word	0x40030c84
40013ad4:	40030c88 	.word	0x40030c88
40013ad8:	400314ac 	.word	0x400314ac
40013adc:	400314d4 	.word	0x400314d4
40013ae0:	40013bb0 	.word	0x40013bb0
40013ae4:	535f3230 	.word	0x535f3230
40013ae8:	45545359 	.word	0x45545359
40013aec:	48545f4d 	.word	0x48545f4d
40013af0:	44414552 	.word	0x44414552
40013af4:	00000000 	.word	0x00000000
40013af8:	40031404 	.word	0x40031404

Disassembly of section i.CyU3PSysCheckBootState:

40013afc <CyU3PSysCheckBootState>:
40013afc:	e92d4070 	push	{r4, r5, r6, lr}
40013b00:	e3a00000 	mov	r0, #0
40013b04:	e59f106c 	ldr	r1, [pc, #108]	; 40013b78 <CyU3PSysCheckBootState+0x7c>
40013b08:	e5810000 	str	r0, [r1]
40013b0c:	e59f0068 	ldr	r0, [pc, #104]	; 40013b7c <CyU3PSysCheckBootState+0x80>
40013b10:	e5900000 	ldr	r0, [r0]
40013b14:	e3100401 	tst	r0, #16777216	; 0x1000000
40013b18:	0a000015 	beq	40013b74 <CyU3PSysCheckBootState+0x78>
40013b1c:	e59f005c 	ldr	r0, [pc, #92]	; 40013b80 <CyU3PSysCheckBootState+0x84>
40013b20:	e5900000 	ldr	r0, [r0]
40013b24:	e3500001 	cmp	r0, #1
40013b28:	1a000011 	bne	40013b74 <CyU3PSysCheckBootState+0x78>
40013b2c:	e3a00000 	mov	r0, #0
40013b30:	e59f1048 	ldr	r1, [pc, #72]	; 40013b80 <CyU3PSysCheckBootState+0x84>
40013b34:	e5810000 	str	r0, [r1]
40013b38:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013b3c:	e5904004 	ldr	r4, [r0, #4]
40013b40:	e1a05004 	mov	r5, r4
40013b44:	e3a02901 	mov	r2, #16384	; 0x4000
40013b48:	e1a01005 	mov	r1, r5
40013b4c:	e3a00000 	mov	r0, #0
40013b50:	ebffbf5f 	bl	400038d4 <CyU3PMemCopy>
40013b54:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40013b58:	e5900008 	ldr	r0, [r0, #8]
40013b5c:	e59f1020 	ldr	r1, [pc, #32]	; 40013b84 <CyU3PSysCheckBootState+0x88>
40013b60:	e1500001 	cmp	r0, r1
40013b64:	1a000002 	bne	40013b74 <CyU3PSysCheckBootState+0x78>
40013b68:	e2840901 	add	r0, r4, #16384	; 0x4000
40013b6c:	e59f1004 	ldr	r1, [pc, #4]	; 40013b78 <CyU3PSysCheckBootState+0x7c>
40013b70:	e5810000 	str	r0, [r1]
40013b74:	e8bd8070 	pop	{r4, r5, r6, pc}
40013b78:	40030c8c 	.word	0x40030c8c
40013b7c:	e0050000 	.word	0xe0050000
40013b80:	40030c88 	.word	0x40030c88
40013b84:	55555555 	.word	0x55555555

Disassembly of section i.CyU3PSysFwMsgHandler:

40013b88 <CyU3PSysFwMsgHandler>:
40013b88:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PSysModuleInitCompleteEvt:

40013b8c <CyU3PSysModuleInitCompleteEvt>:
40013b8c:	e92d4010 	push	{r4, lr}
40013b90:	e1a04000 	mov	r4, r0
40013b94:	e3a00010 	mov	r0, #16
40013b98:	e1a01410 	lsl	r1, r0, r4
40013b9c:	e3a02000 	mov	r2, #0
40013ba0:	e59f0004 	ldr	r0, [pc, #4]	; 40013bac <CyU3PSysModuleInitCompleteEvt+0x20>
40013ba4:	ebffd92b 	bl	4000a058 <_txe_event_flags_set>
40013ba8:	e8bd8010 	pop	{r4, pc}
40013bac:	400314ac 	.word	0x400314ac

Disassembly of section i.CyU3PSysThreadEntry:

40013bb0 <CyU3PSysThreadEntry>:
40013bb0:	e92d4010 	push	{r4, lr}
40013bb4:	e24dd028 	sub	sp, sp, #40	; 0x28
40013bb8:	e3a04c02 	mov	r4, #512	; 0x200
40013bbc:	e3844080 	orr	r4, r4, #128	; 0x80
40013bc0:	e3e03000 	mvn	r3, #0
40013bc4:	e58d3000 	str	r3, [sp]
40013bc8:	e28d3024 	add	r3, sp, #36	; 0x24
40013bcc:	e3a02003 	mov	r2, #3
40013bd0:	e1a01004 	mov	r1, r4
40013bd4:	e59f00d8 	ldr	r0, [pc, #216]	; 40013cb4 <CyU3PSysThreadEntry+0x104>
40013bd8:	ebffd8ee 	bl	40009f98 <_txe_event_flags_get>
40013bdc:	e28d2020 	add	r2, sp, #32
40013be0:	e3a01000 	mov	r1, #0
40013be4:	e59f00cc 	ldr	r0, [pc, #204]	; 40013cb8 <CyU3PSysThreadEntry+0x108>
40013be8:	ebffdbab 	bl	4000aa9c <_txe_thread_priority_change>
40013bec:	ebffd2f0 	bl	400087b4 <CyFxApplicationDefine>
40013bf0:	e28d2020 	add	r2, sp, #32
40013bf4:	e3a01004 	mov	r1, #4
40013bf8:	e59f00b8 	ldr	r0, [pc, #184]	; 40013cb8 <CyU3PSysThreadEntry+0x108>
40013bfc:	ebffdba6 	bl	4000aa9c <_txe_thread_priority_change>
40013c00:	ea00002a 	b	40013cb0 <CyU3PSysThreadEntry+0x100>
40013c04:	e59f00b0 	ldr	r0, [pc, #176]	; 40013cbc <CyU3PSysThreadEntry+0x10c>
40013c08:	e5903000 	ldr	r3, [r0]
40013c0c:	e58d3000 	str	r3, [sp]
40013c10:	e28d3024 	add	r3, sp, #36	; 0x24
40013c14:	e3a02001 	mov	r2, #1
40013c18:	e3e01000 	mvn	r1, #0
40013c1c:	e59f0090 	ldr	r0, [pc, #144]	; 40013cb4 <CyU3PSysThreadEntry+0x104>
40013c20:	ebffd8dc 	bl	40009f98 <_txe_event_flags_get>
40013c24:	e58d0020 	str	r0, [sp, #32]
40013c28:	e59d0020 	ldr	r0, [sp, #32]
40013c2c:	e3500000 	cmp	r0, #0
40013c30:	0a000000 	beq	40013c38 <CyU3PSysThreadEntry+0x88>
40013c34:	ea00001d 	b	40013cb0 <CyU3PSysThreadEntry+0x100>
40013c38:	e3a04001 	mov	r4, #1
40013c3c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c40:	e0000004 	and	r0, r0, r4
40013c44:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013c48:	ea000014 	b	40013ca0 <CyU3PSysThreadEntry+0xf0>
40013c4c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c50:	e3100001 	tst	r0, #1
40013c54:	0a000011 	beq	40013ca0 <CyU3PSysThreadEntry+0xf0>
40013c58:	e3a02000 	mov	r2, #0
40013c5c:	e28d1008 	add	r1, sp, #8
40013c60:	e59f0058 	ldr	r0, [pc, #88]	; 40013cc0 <CyU3PSysThreadEntry+0x110>
40013c64:	ebffda86 	bl	4000a684 <_txe_queue_receive>
40013c68:	e58d0020 	str	r0, [sp, #32]
40013c6c:	e59d0020 	ldr	r0, [sp, #32]
40013c70:	e3500000 	cmp	r0, #0
40013c74:	1a000006 	bne	40013c94 <CyU3PSysThreadEntry+0xe4>
40013c78:	e1dd00b8 	ldrh	r0, [sp, #8]
40013c7c:	e2000902 	and	r0, r0, #32768	; 0x8000
40013c80:	e1b007a0 	lsrs	r0, r0, #15
40013c84:	1a000005 	bne	40013ca0 <CyU3PSysThreadEntry+0xf0>
40013c88:	e28d0008 	add	r0, sp, #8
40013c8c:	ebffffbd 	bl	40013b88 <CyU3PSysFwMsgHandler>
40013c90:	ea000002 	b	40013ca0 <CyU3PSysThreadEntry+0xf0>
40013c94:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013c98:	e3c00001 	bic	r0, r0, #1
40013c9c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40013ca0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40013ca4:	e3500000 	cmp	r0, #0
40013ca8:	1affffe7 	bne	40013c4c <CyU3PSysThreadEntry+0x9c>
40013cac:	e1a00000 	nop			; (mov r0, r0)
40013cb0:	eaffffd3 	b	40013c04 <CyU3PSysThreadEntry+0x54>
40013cb4:	400314ac 	.word	0x400314ac
40013cb8:	40031404 	.word	0x40031404
40013cbc:	40030c84 	.word	0x40030c84
40013cc0:	400314d4 	.word	0x400314d4

Disassembly of section i.CyU3PSibApplicationDefine:

40013cc4 <CyU3PSibApplicationDefine>:
40013cc4:	e92d4010 	push	{r4, lr}
40013cc8:	e24dd020 	sub	sp, sp, #32
40013ccc:	e3a04000 	mov	r4, #0
40013cd0:	e3a02028 	mov	r2, #40	; 0x28
40013cd4:	e3a01000 	mov	r1, #0
40013cd8:	e59f0064 	ldr	r0, [pc, #100]	; 40013d44 <CyU3PSibApplicationDefine+0x80>
40013cdc:	ebffd83d 	bl	40009dd8 <_txe_event_flags_create>
40013ce0:	e3a00000 	mov	r0, #0
40013ce4:	e59f105c 	ldr	r1, [pc, #92]	; 40013d48 <CyU3PSibApplicationDefine+0x84>
40013ce8:	e5810000 	str	r0, [r1]
40013cec:	e3a00b02 	mov	r0, #2048	; 0x800
40013cf0:	ebffbe5f 	bl	40003674 <CyU3PMemAlloc>
40013cf4:	e1a04000 	mov	r4, r0
40013cf8:	e3540000 	cmp	r4, #0
40013cfc:	0a00000e 	beq	40013d3c <CyU3PSibApplicationDefine+0x78>
40013d00:	e3a030a8 	mov	r3, #168	; 0xa8
40013d04:	e3a02001 	mov	r2, #1
40013d08:	e3a01000 	mov	r1, #0
40013d0c:	e3a00004 	mov	r0, #4
40013d10:	e28dc00c 	add	ip, sp, #12
40013d14:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013d18:	e3a02b02 	mov	r2, #2048	; 0x800
40013d1c:	e1a03001 	mov	r3, r1
40013d20:	e58d2004 	str	r2, [sp, #4]
40013d24:	e59f2020 	ldr	r2, [pc, #32]	; 40013d4c <CyU3PSibApplicationDefine+0x88>
40013d28:	e28f1020 	add	r1, pc, #32
40013d2c:	e58d0008 	str	r0, [sp, #8]
40013d30:	e59f0028 	ldr	r0, [pc, #40]	; 40013d60 <CyU3PSibApplicationDefine+0x9c>
40013d34:	e58d4000 	str	r4, [sp]
40013d38:	ebffdaa1 	bl	4000a7c4 <_txe_thread_create>
40013d3c:	e28dd020 	add	sp, sp, #32
40013d40:	e8bd8010 	pop	{r4, pc}
40013d44:	400315b8 	.word	0x400315b8
40013d48:	40030c90 	.word	0x40030c90
40013d4c:	40013dbc 	.word	0x40013dbc
40013d50:	535f3630 	.word	0x535f3630
40013d54:	545f4249 	.word	0x545f4249
40013d58:	41455248 	.word	0x41455248
40013d5c:	00000044 	.word	0x00000044
40013d60:	40031510 	.word	0x40031510

Disassembly of section i.CyU3PSibInitIntfParams:

40013d64 <CyU3PSibInitIntfParams>:
40013d64:	e0802100 	add	r2, r0, r0, lsl #2
40013d68:	e59f3048 	ldr	r3, [pc, #72]	; 40013db8 <CyU3PSibInitIntfParams+0x54>
40013d6c:	e0831102 	add	r1, r3, r2, lsl #2
40013d70:	e3a020ff 	mov	r2, #255	; 0xff
40013d74:	e5c12000 	strb	r2, [r1]
40013d78:	e3a02002 	mov	r2, #2
40013d7c:	e5c12008 	strb	r2, [r1, #8]
40013d80:	e3a02001 	mov	r2, #1
40013d84:	e5c12009 	strb	r2, [r1, #9]
40013d88:	e3a02000 	mov	r2, #0
40013d8c:	e5c12010 	strb	r2, [r1, #16]
40013d90:	e5c1200a 	strb	r2, [r1, #10]
40013d94:	e3a020ff 	mov	r2, #255	; 0xff
40013d98:	e5c1200b 	strb	r2, [r1, #11]
40013d9c:	e3a02000 	mov	r2, #0
40013da0:	e581200c 	str	r2, [r1, #12]
40013da4:	e3a02004 	mov	r2, #4
40013da8:	e5c12011 	strb	r2, [r1, #17]
40013dac:	e3a02000 	mov	r2, #0
40013db0:	e5c12012 	strb	r2, [r1, #18]
40013db4:	e12fff1e 	bx	lr
40013db8:	400315e0 	.word	0x400315e0

Disassembly of section i.CyU3PSibThreadEntry:

40013dbc <CyU3PSibThreadEntry>:
40013dbc:	e92d4010 	push	{r4, lr}
40013dc0:	e3a00000 	mov	r0, #0
40013dc4:	ebffffe6 	bl	40013d64 <CyU3PSibInitIntfParams>
40013dc8:	e3a00001 	mov	r0, #1
40013dcc:	ebffffe4 	bl	40013d64 <CyU3PSibInitIntfParams>
40013dd0:	e3a00003 	mov	r0, #3
40013dd4:	ebffff6c 	bl	40013b8c <CyU3PSysModuleInitCompleteEvt>
40013dd8:	ea000009 	b	40013e04 <CyU3PSibThreadEntry+0x48>
40013ddc:	e59f0024 	ldr	r0, [pc, #36]	; 40013e08 <CyU3PSibThreadEntry+0x4c>
40013de0:	e5900000 	ldr	r0, [r0]
40013de4:	e3500000 	cmp	r0, #0
40013de8:	0a000003 	beq	40013dfc <CyU3PSibThreadEntry+0x40>
40013dec:	e59f0014 	ldr	r0, [pc, #20]	; 40013e08 <CyU3PSibThreadEntry+0x4c>
40013df0:	e5900000 	ldr	r0, [r0]
40013df4:	e12fff30 	blx	r0
40013df8:	ea000001 	b	40013e04 <CyU3PSibThreadEntry+0x48>
40013dfc:	e3a0000a 	mov	r0, #10
40013e00:	ebffd39c 	bl	40008c78 <_tx_thread_sleep>
40013e04:	eafffff4 	b	40013ddc <CyU3PSibThreadEntry+0x20>
40013e08:	40030c90 	.word	0x40030c90

Disassembly of section i.CyU3PGpioSetClock:

40013e0c <CyU3PGpioSetClock>:
40013e0c:	e92d4070 	push	{r4, r5, r6, lr}
40013e10:	e1a04000 	mov	r4, r0
40013e14:	e3a05000 	mov	r5, #0
40013e18:	e5d40000 	ldrb	r0, [r4]
40013e1c:	e3500002 	cmp	r0, #2
40013e20:	ba000002 	blt	40013e30 <CyU3PGpioSetClock+0x24>
40013e24:	e5d40000 	ldrb	r0, [r4]
40013e28:	e3500010 	cmp	r0, #16
40013e2c:	da000001 	ble	40013e38 <CyU3PGpioSetClock+0x2c>
40013e30:	e3a00040 	mov	r0, #64	; 0x40
40013e34:	e8bd8070 	pop	{r4, r5, r6, pc}
40013e38:	e5d40001 	ldrb	r0, [r4, #1]
40013e3c:	e3500000 	cmp	r0, #0
40013e40:	1a000004 	bne	40013e58 <CyU3PGpioSetClock+0x4c>
40013e44:	e5940004 	ldr	r0, [r4, #4]
40013e48:	e3500000 	cmp	r0, #0
40013e4c:	0a000009 	beq	40013e78 <CyU3PGpioSetClock+0x6c>
40013e50:	e3a00040 	mov	r0, #64	; 0x40
40013e54:	eafffff6 	b	40013e34 <CyU3PGpioSetClock+0x28>
40013e58:	e5d40001 	ldrb	r0, [r4, #1]
40013e5c:	e3500002 	cmp	r0, #2
40013e60:	ba000002 	blt	40013e70 <CyU3PGpioSetClock+0x64>
40013e64:	e5d40001 	ldrb	r0, [r4, #1]
40013e68:	e3500040 	cmp	r0, #64	; 0x40
40013e6c:	da000001 	ble	40013e78 <CyU3PGpioSetClock+0x6c>
40013e70:	e3a00040 	mov	r0, #64	; 0x40
40013e74:	eaffffee 	b	40013e34 <CyU3PGpioSetClock+0x28>
40013e78:	e5d40009 	ldrb	r0, [r4, #9]
40013e7c:	e3500004 	cmp	r0, #4
40013e80:	ba000001 	blt	40013e8c <CyU3PGpioSetClock+0x80>
40013e84:	e3a00040 	mov	r0, #64	; 0x40
40013e88:	eaffffe9 	b	40013e34 <CyU3PGpioSetClock+0x28>
40013e8c:	e5d40008 	ldrb	r0, [r4, #8]
40013e90:	e3500004 	cmp	r0, #4
40013e94:	ba000001 	blt	40013ea0 <CyU3PGpioSetClock+0x94>
40013e98:	e3a00040 	mov	r0, #64	; 0x40
40013e9c:	eaffffe4 	b	40013e34 <CyU3PGpioSetClock+0x28>
40013ea0:	e5d40000 	ldrb	r0, [r4]
40013ea4:	e2400001 	sub	r0, r0, #1
40013ea8:	e5d41009 	ldrb	r1, [r4, #9]
40013eac:	e1800281 	orr	r0, r0, r1, lsl #5
40013eb0:	e5d41008 	ldrb	r1, [r4, #8]
40013eb4:	e1800381 	orr	r0, r0, r1, lsl #7
40013eb8:	e3805102 	orr	r5, r0, #-2147483648	; 0x80000000
40013ebc:	e5940004 	ldr	r0, [r4, #4]
40013ec0:	e3500000 	cmp	r0, #0
40013ec4:	0a000000 	beq	40013ecc <CyU3PGpioSetClock+0xc0>
40013ec8:	e3855010 	orr	r5, r5, #16
40013ecc:	e59f0030 	ldr	r0, [pc, #48]	; 40013f04 <CyU3PGpioSetClock+0xf8>
40013ed0:	e5805018 	str	r5, [r0, #24]
40013ed4:	e5d40001 	ldrb	r0, [r4, #1]
40013ed8:	e3500000 	cmp	r0, #0
40013edc:	0a000006 	beq	40013efc <CyU3PGpioSetClock+0xf0>
40013ee0:	e3a00001 	mov	r0, #1
40013ee4:	ebfffe72 	bl	400138b4 <CyU3PBusyWait>
40013ee8:	e5d40001 	ldrb	r0, [r4, #1]
40013eec:	e2400001 	sub	r0, r0, #1
40013ef0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40013ef4:	e59f1008 	ldr	r1, [pc, #8]	; 40013f04 <CyU3PGpioSetClock+0xf8>
40013ef8:	e581001c 	str	r0, [r1, #28]
40013efc:	e3a00000 	mov	r0, #0
40013f00:	eaffffcb 	b	40013e34 <CyU3PGpioSetClock+0x28>
40013f04:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PI2cSetClock:

40013f08 <CyU3PI2cSetClock>:
40013f08:	e92d4070 	push	{r4, r5, r6, lr}
40013f0c:	e1a05000 	mov	r5, r0
40013f10:	e3a06000 	mov	r6, #0
40013f14:	e3550000 	cmp	r5, #0
40013f18:	1a000001 	bne	40013f24 <CyU3PI2cSetClock+0x1c>
40013f1c:	e3a00040 	mov	r0, #64	; 0x40
40013f20:	e8bd8070 	pop	{r4, r5, r6, pc}
40013f24:	e0852105 	add	r2, r5, r5, lsl #2
40013f28:	e1a01082 	lsl	r1, r2, #1
40013f2c:	e59f207c 	ldr	r2, [pc, #124]	; 40013fb0 <CyU3PI2cSetClock+0xa8>
40013f30:	e5922000 	ldr	r2, [r2]
40013f34:	e1a00122 	lsr	r0, r2, #2
40013f38:	ebfff33a 	bl	40010c28 <__aeabi_uidivmod>
40013f3c:	e1a04000 	mov	r4, r0
40013f40:	e3140003 	tst	r4, #3
40013f44:	1a000001 	bne	40013f50 <CyU3PI2cSetClock+0x48>
40013f48:	e1a04144 	asr	r4, r4, #2
40013f4c:	ea00000a 	b	40013f7c <CyU3PI2cSetClock+0x74>
40013f50:	e2040003 	and	r0, r4, #3
40013f54:	e3500001 	cmp	r0, #1
40013f58:	0a000002 	beq	40013f68 <CyU3PI2cSetClock+0x60>
40013f5c:	e2040003 	and	r0, r4, #3
40013f60:	e3500002 	cmp	r0, #2
40013f64:	1a000002 	bne	40013f74 <CyU3PI2cSetClock+0x6c>
40013f68:	e1a04144 	asr	r4, r4, #2
40013f6c:	e3866a01 	orr	r6, r6, #4096	; 0x1000
40013f70:	ea000001 	b	40013f7c <CyU3PI2cSetClock+0x74>
40013f74:	e3a00001 	mov	r0, #1
40013f78:	e0804144 	add	r4, r0, r4, asr #2
40013f7c:	e2444001 	sub	r4, r4, #1
40013f80:	e3540001 	cmp	r4, #1
40013f84:	ba000001 	blt	40013f90 <CyU3PI2cSetClock+0x88>
40013f88:	e3540a01 	cmp	r4, #4096	; 0x1000
40013f8c:	ba000001 	blt	40013f98 <CyU3PI2cSetClock+0x90>
40013f90:	e3a00040 	mov	r0, #64	; 0x40
40013f94:	eaffffe1 	b	40013f20 <CyU3PI2cSetClock+0x18>
40013f98:	e3840102 	orr	r0, r4, #-2147483648	; 0x80000000
40013f9c:	e1866000 	orr	r6, r6, r0
40013fa0:	e59f000c 	ldr	r0, [pc, #12]	; 40013fb4 <CyU3PI2cSetClock+0xac>
40013fa4:	e5806020 	str	r6, [r0, #32]
40013fa8:	e3a00000 	mov	r0, #0
40013fac:	eaffffdb 	b	40013f20 <CyU3PI2cSetClock+0x18>
40013fb0:	40030c50 	.word	0x40030c50
40013fb4:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PLppApplicationDefine:

40013fb8 <CyU3PLppApplicationDefine>:
40013fb8:	e92d4010 	push	{r4, lr}
40013fbc:	e24dd020 	sub	sp, sp, #32
40013fc0:	e3a00b01 	mov	r0, #1024	; 0x400
40013fc4:	ebffbdaa 	bl	40003674 <CyU3PMemAlloc>
40013fc8:	e1a04000 	mov	r4, r0
40013fcc:	e3a030a8 	mov	r3, #168	; 0xa8
40013fd0:	e3a02001 	mov	r2, #1
40013fd4:	e3a01000 	mov	r1, #0
40013fd8:	e3a00004 	mov	r0, #4
40013fdc:	e28dc00c 	add	ip, sp, #12
40013fe0:	e88c000f 	stm	ip, {r0, r1, r2, r3}
40013fe4:	e3a02b01 	mov	r2, #1024	; 0x400
40013fe8:	e1a03001 	mov	r3, r1
40013fec:	e58d2004 	str	r2, [sp, #4]
40013ff0:	e59f2054 	ldr	r2, [pc, #84]	; 4001404c <CyU3PLppApplicationDefine+0x94>
40013ff4:	e28f1054 	add	r1, pc, #84	; 0x54
40013ff8:	e58d0008 	str	r0, [sp, #8]
40013ffc:	e59f005c 	ldr	r0, [pc, #92]	; 40014060 <CyU3PLppApplicationDefine+0xa8>
40014000:	e58d4000 	str	r4, [sp]
40014004:	ebffd9ee 	bl	4000a7c4 <_txe_thread_create>
40014008:	e3a02028 	mov	r2, #40	; 0x28
4001400c:	e3a01000 	mov	r1, #0
40014010:	e59f004c 	ldr	r0, [pc, #76]	; 40014064 <CyU3PLppApplicationDefine+0xac>
40014014:	ebffd76f 	bl	40009dd8 <_txe_event_flags_create>
40014018:	e3a00040 	mov	r0, #64	; 0x40
4001401c:	ebffbd94 	bl	40003674 <CyU3PMemAlloc>
40014020:	e1a04000 	mov	r4, r0
40014024:	e3a0303c 	mov	r3, #60	; 0x3c
40014028:	e3a02040 	mov	r2, #64	; 0x40
4001402c:	e1cd20f0 	strd	r2, [sp]
40014030:	e1a03004 	mov	r3, r4
40014034:	e3a02005 	mov	r2, #5
40014038:	e3a01000 	mov	r1, #0
4001403c:	e59f0024 	ldr	r0, [pc, #36]	; 40014068 <CyU3PLppApplicationDefine+0xb0>
40014040:	ebffd8f9 	bl	4000a42c <_txe_queue_create>
40014044:	e28dd020 	add	sp, sp, #32
40014048:	e8bd8010 	pop	{r4, pc}
4001404c:	400143ac 	.word	0x400143ac
40014050:	4c5f3530 	.word	0x4c5f3530
40014054:	545f5050 	.word	0x545f5050
40014058:	41455248 	.word	0x41455248
4001405c:	00000044 	.word	0x00000044
40014060:	40031644 	.word	0x40031644
40014064:	4003161c 	.word	0x4003161c
40014068:	400316ec 	.word	0x400316ec

Disassembly of section i.CyU3PLppEventSend:

4001406c <CyU3PLppEventSend>:
4001406c:	e92d4070 	push	{r4, r5, r6, lr}
40014070:	e1a04000 	mov	r4, r0
40014074:	e3a02000 	mov	r2, #0
40014078:	e1a01004 	mov	r1, r4
4001407c:	e59f000c 	ldr	r0, [pc, #12]	; 40014090 <CyU3PLppEventSend+0x24>
40014080:	ebffd7f4 	bl	4000a058 <_txe_event_flags_set>
40014084:	e1a05000 	mov	r5, r0
40014088:	e1a00005 	mov	r0, r5
4001408c:	e8bd8070 	pop	{r4, r5, r6, pc}
40014090:	4003161c 	.word	0x4003161c

Disassembly of section i.CyU3PLppGpioBlockIsOn:

40014094 <CyU3PLppGpioBlockIsOn>:
40014094:	e59f0004 	ldr	r0, [pc, #4]	; 400140a0 <CyU3PLppGpioBlockIsOn+0xc>
40014098:	e5900000 	ldr	r0, [r0]
4001409c:	e12fff1e 	bx	lr
400140a0:	40030c6c 	.word	0x40030c6c

Disassembly of section i.CyU3PLppInit:

400140a4 <CyU3PLppInit>:
400140a4:	e92d4070 	push	{r4, r5, r6, lr}
400140a8:	e1a04000 	mov	r4, r0
400140ac:	e1a05001 	mov	r5, r1
400140b0:	e3a06000 	mov	r6, #0
400140b4:	e3a00001 	mov	r0, #1
400140b8:	e59f1174 	ldr	r1, [pc, #372]	; 40014234 <CyU3PLppInit+0x190>
400140bc:	e5d11000 	ldrb	r1, [r1]
400140c0:	e1110410 	tst	r1, r0, lsl r4
400140c4:	0a000001 	beq	400140d0 <CyU3PLppInit+0x2c>
400140c8:	e3a00043 	mov	r0, #67	; 0x43
400140cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400140d0:	e3540001 	cmp	r4, #1
400140d4:	1a000004 	bne	400140ec <CyU3PLppInit+0x48>
400140d8:	eb000310 	bl	40014d20 <CyFx3DevIsI2sSupported>
400140dc:	e3500000 	cmp	r0, #0
400140e0:	1a000001 	bne	400140ec <CyU3PLppInit+0x48>
400140e4:	e3a00046 	mov	r0, #70	; 0x46
400140e8:	eafffff7 	b	400140cc <CyU3PLppInit+0x28>
400140ec:	e3540005 	cmp	r4, #5
400140f0:	308ff104 	addcc	pc, pc, r4, lsl #2
400140f4:	ea000027 	b	40014198 <CyU3PLppInit+0xf4>
400140f8:	ea000003 	b	4001410c <CyU3PLppInit+0x68>
400140fc:	ea000009 	b	40014128 <CyU3PLppInit+0x84>
40014100:	ea00000f 	b	40014144 <CyU3PLppInit+0xa0>
40014104:	ea000015 	b	40014160 <CyU3PLppInit+0xbc>
40014108:	ea00001b 	b	4001417c <CyU3PLppInit+0xd8>
4001410c:	e1a00000 	nop			; (mov r0, r0)
40014110:	e59f0120 	ldr	r0, [pc, #288]	; 40014238 <CyU3PLppInit+0x194>
40014114:	e5900020 	ldr	r0, [r0, #32]
40014118:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001411c:	0a000000 	beq	40014124 <CyU3PLppInit+0x80>
40014120:	e3a06001 	mov	r6, #1
40014124:	ea00001b 	b	40014198 <CyU3PLppInit+0xf4>
40014128:	e1a00000 	nop			; (mov r0, r0)
4001412c:	e59f0104 	ldr	r0, [pc, #260]	; 40014238 <CyU3PLppInit+0x194>
40014130:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40014134:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014138:	0a000000 	beq	40014140 <CyU3PLppInit+0x9c>
4001413c:	e3a06001 	mov	r6, #1
40014140:	ea000014 	b	40014198 <CyU3PLppInit+0xf4>
40014144:	e1a00000 	nop			; (mov r0, r0)
40014148:	e59f00e8 	ldr	r0, [pc, #232]	; 40014238 <CyU3PLppInit+0x194>
4001414c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40014150:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014154:	0a000000 	beq	4001415c <CyU3PLppInit+0xb8>
40014158:	e3a06001 	mov	r6, #1
4001415c:	ea00000d 	b	40014198 <CyU3PLppInit+0xf4>
40014160:	e1a00000 	nop			; (mov r0, r0)
40014164:	e59f00cc 	ldr	r0, [pc, #204]	; 40014238 <CyU3PLppInit+0x194>
40014168:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001416c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
40014170:	0a000000 	beq	40014178 <CyU3PLppInit+0xd4>
40014174:	e3a06001 	mov	r6, #1
40014178:	ea000006 	b	40014198 <CyU3PLppInit+0xf4>
4001417c:	e1a00000 	nop			; (mov r0, r0)
40014180:	e59f00b0 	ldr	r0, [pc, #176]	; 40014238 <CyU3PLppInit+0x194>
40014184:	e5900018 	ldr	r0, [r0, #24]
40014188:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001418c:	0a000000 	beq	40014194 <CyU3PLppInit+0xf0>
40014190:	e3a06001 	mov	r6, #1
40014194:	e1a00000 	nop			; (mov r0, r0)
40014198:	e1a00000 	nop			; (mov r0, r0)
4001419c:	e3560000 	cmp	r6, #0
400141a0:	1a000001 	bne	400141ac <CyU3PLppInit+0x108>
400141a4:	e3a00047 	mov	r0, #71	; 0x47
400141a8:	eaffffc7 	b	400140cc <CyU3PLppInit+0x28>
400141ac:	e59f0080 	ldr	r0, [pc, #128]	; 40014234 <CyU3PLppInit+0x190>
400141b0:	e5d00000 	ldrb	r0, [r0]
400141b4:	e3500000 	cmp	r0, #0
400141b8:	1a000017 	bne	4001421c <CyU3PLppInit+0x178>
400141bc:	e59f0078 	ldr	r0, [pc, #120]	; 4001423c <CyU3PLppInit+0x198>
400141c0:	e5900000 	ldr	r0, [r0]
400141c4:	e3500000 	cmp	r0, #0
400141c8:	1a000010 	bne	40014210 <CyU3PLppInit+0x16c>
400141cc:	e59f006c 	ldr	r0, [pc, #108]	; 40014240 <CyU3PLppInit+0x19c>
400141d0:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400141d4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400141d8:	e59f1060 	ldr	r1, [pc, #96]	; 40014240 <CyU3PLppInit+0x19c>
400141dc:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
400141e0:	e3a0000a 	mov	r0, #10
400141e4:	ebfffdb2 	bl	400138b4 <CyU3PBusyWait>
400141e8:	e59f0050 	ldr	r0, [pc, #80]	; 40014240 <CyU3PLppInit+0x19c>
400141ec:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
400141f0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400141f4:	e59f1044 	ldr	r1, [pc, #68]	; 40014240 <CyU3PLppInit+0x19c>
400141f8:	e5810f04 	str	r0, [r1, #3844]	; 0xf04
400141fc:	e1a00000 	nop			; (mov r0, r0)
40014200:	e59f0038 	ldr	r0, [pc, #56]	; 40014240 <CyU3PLppInit+0x19c>
40014204:	e5900f04 	ldr	r0, [r0, #3844]	; 0xf04
40014208:	e3100001 	tst	r0, #1
4001420c:	0afffffb 	beq	40014200 <CyU3PLppInit+0x15c>
40014210:	eb000051 	bl	4001435c <CyU3PLppSocketInit>
40014214:	e3a00014 	mov	r0, #20
40014218:	eb003828 	bl	400222c0 <CyU3PVicEnableInt>
4001421c:	e1a02005 	mov	r2, r5
40014220:	e3a01001 	mov	r1, #1
40014224:	e1a00004 	mov	r0, r4
40014228:	eb0000f1 	bl	400145f4 <CyU3UpdateLppActiveInfo>
4001422c:	e3a00000 	mov	r0, #0
40014230:	eaffffa5 	b	400140cc <CyU3PLppInit+0x28>
40014234:	40030c94 	.word	0x40030c94
40014238:	e0052000 	.word	0xe0052000
4001423c:	40030c6c 	.word	0x40030c6c
40014240:	e0007000 	.word	0xe0007000

Disassembly of section i.CyU3PLppRestoreState:

40014244 <CyU3PLppRestoreState>:
40014244:	e92d4070 	push	{r4, r5, r6, lr}
40014248:	e1a04000 	mov	r4, r0
4001424c:	e3a00000 	mov	r0, #0
40014250:	e59f10ec 	ldr	r1, [pc, #236]	; 40014344 <CyU3PLppRestoreState+0x100>
40014254:	e5c10000 	strb	r0, [r1]
40014258:	e5940000 	ldr	r0, [r4]
4001425c:	e59f10e4 	ldr	r1, [pc, #228]	; 40014348 <CyU3PLppRestoreState+0x104>
40014260:	e5810018 	str	r0, [r1, #24]
40014264:	e3a00001 	mov	r0, #1
40014268:	ebfffd91 	bl	400138b4 <CyU3PBusyWait>
4001426c:	e5940004 	ldr	r0, [r4, #4]
40014270:	e59f10d0 	ldr	r1, [pc, #208]	; 40014348 <CyU3PLppRestoreState+0x104>
40014274:	e581001c 	str	r0, [r1, #28]
40014278:	e3a00001 	mov	r0, #1
4001427c:	ebfffd8c 	bl	400138b4 <CyU3PBusyWait>
40014280:	e5940008 	ldr	r0, [r4, #8]
40014284:	e59f10c0 	ldr	r1, [pc, #192]	; 4001434c <CyU3PLppRestoreState+0x108>
40014288:	e581000c 	str	r0, [r1, #12]
4001428c:	e3a00001 	mov	r0, #1
40014290:	ebfffd87 	bl	400138b4 <CyU3PBusyWait>
40014294:	e594000c 	ldr	r0, [r4, #12]
40014298:	e59f10ac 	ldr	r1, [pc, #172]	; 4001434c <CyU3PLppRestoreState+0x108>
4001429c:	e5810010 	str	r0, [r1, #16]
400142a0:	e3a00001 	mov	r0, #1
400142a4:	ebfffd82 	bl	400138b4 <CyU3PBusyWait>
400142a8:	e5940010 	ldr	r0, [r4, #16]
400142ac:	e59f1098 	ldr	r1, [pc, #152]	; 4001434c <CyU3PLppRestoreState+0x108>
400142b0:	e5810008 	str	r0, [r1, #8]
400142b4:	e3a00001 	mov	r0, #1
400142b8:	ebfffd7d 	bl	400138b4 <CyU3PBusyWait>
400142bc:	e3a00004 	mov	r0, #4
400142c0:	e5941014 	ldr	r1, [r4, #20]
400142c4:	ebffff76 	bl	400140a4 <CyU3PLppInit>
400142c8:	e3a00001 	mov	r0, #1
400142cc:	ebfffd78 	bl	400138b4 <CyU3PBusyWait>
400142d0:	e59f0078 	ldr	r0, [pc, #120]	; 40014350 <CyU3PLppRestoreState+0x10c>
400142d4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400142d8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400142dc:	e59f106c 	ldr	r1, [pc, #108]	; 40014350 <CyU3PLppRestoreState+0x10c>
400142e0:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
400142e4:	e3a0000a 	mov	r0, #10
400142e8:	ebfffd71 	bl	400138b4 <CyU3PBusyWait>
400142ec:	e1a00000 	nop			; (mov r0, r0)
400142f0:	e59f0058 	ldr	r0, [pc, #88]	; 40014350 <CyU3PLppRestoreState+0x10c>
400142f4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
400142f8:	e3100001 	tst	r0, #1
400142fc:	0afffffb 	beq	400142f0 <CyU3PLppRestoreState+0xac>
40014300:	e3a05000 	mov	r5, #0
40014304:	ea000006 	b	40014324 <CyU3PLppRestoreState+0xe0>
40014308:	e2850006 	add	r0, r5, #6
4001430c:	e7940100 	ldr	r0, [r4, r0, lsl #2]
40014310:	e59f103c 	ldr	r1, [pc, #60]	; 40014354 <CyU3PLppRestoreState+0x110>
40014314:	e7810105 	str	r0, [r1, r5, lsl #2]
40014318:	e3a00001 	mov	r0, #1
4001431c:	ebfffd64 	bl	400138b4 <CyU3PBusyWait>
40014320:	e2855001 	add	r5, r5, #1
40014324:	e355003d 	cmp	r5, #61	; 0x3d
40014328:	3afffff6 	bcc	40014308 <CyU3PLppRestoreState+0xc4>
4001432c:	e59f0024 	ldr	r0, [pc, #36]	; 40014358 <CyU3PLppRestoreState+0x114>
40014330:	e5900000 	ldr	r0, [r0]
40014334:	e3c00401 	bic	r0, r0, #16777216	; 0x1000000
40014338:	e59f1018 	ldr	r1, [pc, #24]	; 40014358 <CyU3PLppRestoreState+0x114>
4001433c:	e5810000 	str	r0, [r1]
40014340:	e8bd8070 	pop	{r4, r5, r6, pc}
40014344:	40030c94 	.word	0x40030c94
40014348:	e0052000 	.word	0xe0052000
4001434c:	e0051000 	.word	0xe0051000
40014350:	e0001000 	.word	0xe0001000
40014354:	e0001100 	.word	0xe0001100
40014358:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PLppSocketInit:

4001435c <CyU3PLppSocketInit>:
4001435c:	e3a00000 	mov	r0, #0
40014360:	ea00000d 	b	4001439c <CyU3PLppSocketInit+0x40>
40014364:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
40014368:	e59f2038 	ldr	r2, [pc, #56]	; 400143a8 <CyU3PLppSocketInit+0x4c>
4001436c:	e0822380 	add	r2, r2, r0, lsl #7
40014370:	e582100c 	str	r1, [r2, #12]
40014374:	e3e01000 	mvn	r1, #0
40014378:	e59f2028 	ldr	r2, [pc, #40]	; 400143a8 <CyU3PLppSocketInit+0x4c>
4001437c:	e0822380 	add	r2, r2, r0, lsl #7
40014380:	e5821010 	str	r1, [r2, #16]
40014384:	e3a01000 	mov	r1, #0
40014388:	e59f2018 	ldr	r2, [pc, #24]	; 400143a8 <CyU3PLppSocketInit+0x4c>
4001438c:	e0822380 	add	r2, r2, r0, lsl #7
40014390:	e5821014 	str	r1, [r2, #20]
40014394:	e2801001 	add	r1, r0, #1
40014398:	e20100ff 	and	r0, r1, #255	; 0xff
4001439c:	e3500008 	cmp	r0, #8
400143a0:	baffffef 	blt	40014364 <CyU3PLppSocketInit+0x8>
400143a4:	e12fff1e 	bx	lr
400143a8:	e0008000 	.word	0xe0008000

Disassembly of section i.CyU3PLppThreadEntry:

400143ac <CyU3PLppThreadEntry>:
400143ac:	e92d4010 	push	{r4, lr}
400143b0:	e24dd020 	sub	sp, sp, #32
400143b4:	e3a00006 	mov	r0, #6
400143b8:	ebfffdf3 	bl	40013b8c <CyU3PSysModuleInitCompleteEvt>
400143bc:	e3a000f1 	mov	r0, #241	; 0xf1
400143c0:	e59f1144 	ldr	r1, [pc, #324]	; 4001450c <CyU3PLppThreadEntry+0x160>
400143c4:	e5810000 	str	r0, [r1]
400143c8:	e1a00000 	nop			; (mov r0, r0)
400143cc:	e3e03000 	mvn	r3, #0
400143d0:	e58d3000 	str	r3, [sp]
400143d4:	e28d301c 	add	r3, sp, #28
400143d8:	e3a02001 	mov	r2, #1
400143dc:	e59f0128 	ldr	r0, [pc, #296]	; 4001450c <CyU3PLppThreadEntry+0x160>
400143e0:	e5901000 	ldr	r1, [r0]
400143e4:	e59f0124 	ldr	r0, [pc, #292]	; 40014510 <CyU3PLppThreadEntry+0x164>
400143e8:	ebffd6ea 	bl	40009f98 <_txe_event_flags_get>
400143ec:	e1a04000 	mov	r4, r0
400143f0:	e59f1114 	ldr	r1, [pc, #276]	; 4001450c <CyU3PLppThreadEntry+0x160>
400143f4:	e59d001c 	ldr	r0, [sp, #28]
400143f8:	e5911000 	ldr	r1, [r1]
400143fc:	e0000001 	and	r0, r0, r1
40014400:	e58d001c 	str	r0, [sp, #28]
40014404:	e3540000 	cmp	r4, #0
40014408:	0a000000 	beq	40014410 <CyU3PLppThreadEntry+0x64>
4001440c:	eaffffee 	b	400143cc <CyU3PLppThreadEntry+0x20>
40014410:	ea000009 	b	4001443c <CyU3PLppThreadEntry+0x90>
40014414:	e3a02000 	mov	r2, #0
40014418:	e28d1008 	add	r1, sp, #8
4001441c:	e59f00f0 	ldr	r0, [pc, #240]	; 40014514 <CyU3PLppThreadEntry+0x168>
40014420:	ebffd897 	bl	4000a684 <_txe_queue_receive>
40014424:	e1a04000 	mov	r4, r0
40014428:	e3540000 	cmp	r4, #0
4001442c:	0a000002 	beq	4001443c <CyU3PLppThreadEntry+0x90>
40014430:	e59d001c 	ldr	r0, [sp, #28]
40014434:	e3c00001 	bic	r0, r0, #1
40014438:	e58d001c 	str	r0, [sp, #28]
4001443c:	e59d001c 	ldr	r0, [sp, #28]
40014440:	e3100001 	tst	r0, #1
40014444:	1afffff2 	bne	40014414 <CyU3PLppThreadEntry+0x68>
40014448:	e59d001c 	ldr	r0, [sp, #28]
4001444c:	e3100020 	tst	r0, #32
40014450:	0a000008 	beq	40014478 <CyU3PLppThreadEntry+0xcc>
40014454:	e59f00bc 	ldr	r0, [pc, #188]	; 40014518 <CyU3PLppThreadEntry+0x16c>
40014458:	e5900000 	ldr	r0, [r0]
4001445c:	e3500000 	cmp	r0, #0
40014460:	0a000002 	beq	40014470 <CyU3PLppThreadEntry+0xc4>
40014464:	e59f10ac 	ldr	r1, [pc, #172]	; 40014518 <CyU3PLppThreadEntry+0x16c>
40014468:	e5910000 	ldr	r0, [r1]
4001446c:	e12fff30 	blx	r0
40014470:	e3a0000f 	mov	r0, #15
40014474:	eb003791 	bl	400222c0 <CyU3PVicEnableInt>
40014478:	e59d001c 	ldr	r0, [sp, #28]
4001447c:	e3100010 	tst	r0, #16
40014480:	0a000008 	beq	400144a8 <CyU3PLppThreadEntry+0xfc>
40014484:	e59f008c 	ldr	r0, [pc, #140]	; 40014518 <CyU3PLppThreadEntry+0x16c>
40014488:	e5900004 	ldr	r0, [r0, #4]
4001448c:	e3500000 	cmp	r0, #0
40014490:	0a000002 	beq	400144a0 <CyU3PLppThreadEntry+0xf4>
40014494:	e59f107c 	ldr	r1, [pc, #124]	; 40014518 <CyU3PLppThreadEntry+0x16c>
40014498:	e5910004 	ldr	r0, [r1, #4]
4001449c:	e12fff30 	blx	r0
400144a0:	e3a00010 	mov	r0, #16
400144a4:	eb003785 	bl	400222c0 <CyU3PVicEnableInt>
400144a8:	e59d001c 	ldr	r0, [sp, #28]
400144ac:	e3100080 	tst	r0, #128	; 0x80
400144b0:	0a000008 	beq	400144d8 <CyU3PLppThreadEntry+0x12c>
400144b4:	e59f005c 	ldr	r0, [pc, #92]	; 40014518 <CyU3PLppThreadEntry+0x16c>
400144b8:	e5900008 	ldr	r0, [r0, #8]
400144bc:	e3500000 	cmp	r0, #0
400144c0:	0a000002 	beq	400144d0 <CyU3PLppThreadEntry+0x124>
400144c4:	e59f104c 	ldr	r1, [pc, #76]	; 40014518 <CyU3PLppThreadEntry+0x16c>
400144c8:	e5910008 	ldr	r0, [r1, #8]
400144cc:	e12fff30 	blx	r0
400144d0:	e3a00011 	mov	r0, #17
400144d4:	eb003779 	bl	400222c0 <CyU3PVicEnableInt>
400144d8:	e59d001c 	ldr	r0, [sp, #28]
400144dc:	e3100040 	tst	r0, #64	; 0x40
400144e0:	0a000008 	beq	40014508 <CyU3PLppThreadEntry+0x15c>
400144e4:	e59f002c 	ldr	r0, [pc, #44]	; 40014518 <CyU3PLppThreadEntry+0x16c>
400144e8:	e590000c 	ldr	r0, [r0, #12]
400144ec:	e3500000 	cmp	r0, #0
400144f0:	0a000002 	beq	40014500 <CyU3PLppThreadEntry+0x154>
400144f4:	e59f101c 	ldr	r1, [pc, #28]	; 40014518 <CyU3PLppThreadEntry+0x16c>
400144f8:	e591000c 	ldr	r0, [r1, #12]
400144fc:	e12fff30 	blx	r0
40014500:	e3a00012 	mov	r0, #18
40014504:	eb00376d 	bl	400222c0 <CyU3PVicEnableInt>
40014508:	eaffffaf 	b	400143cc <CyU3PLppThreadEntry+0x20>
4001450c:	40030c98 	.word	0x40030c98
40014510:	4003161c 	.word	0x4003161c
40014514:	400316ec 	.word	0x400316ec
40014518:	40031608 	.word	0x40031608

Disassembly of section i.CyU3PUartSetClock:

4001451c <CyU3PUartSetClock>:
4001451c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014520:	e1a04000 	mov	r4, r0
40014524:	e3a06000 	mov	r6, #0
40014528:	e59f00bc 	ldr	r0, [pc, #188]	; 400145ec <CyU3PUartSetClock+0xd0>
4001452c:	e5907000 	ldr	r7, [r0]
40014530:	e3540000 	cmp	r4, #0
40014534:	1a000001 	bne	40014540 <CyU3PUartSetClock+0x24>
40014538:	e3a00040 	mov	r0, #64	; 0x40
4001453c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014540:	e3540f96 	cmp	r4, #600	; 0x258
40014544:	2a000002 	bcs	40014554 <CyU3PUartSetClock+0x38>
40014548:	e59f009c 	ldr	r0, [pc, #156]	; 400145ec <CyU3PUartSetClock+0xd0>
4001454c:	e5900000 	ldr	r0, [r0]
40014550:	e1a07220 	lsr	r7, r0, #4
40014554:	e1a01204 	lsl	r1, r4, #4
40014558:	e1a00107 	lsl	r0, r7, #2
4001455c:	ebfff1b1 	bl	40010c28 <__aeabi_uidivmod>
40014560:	e1a05000 	mov	r5, r0
40014564:	e3150003 	tst	r5, #3
40014568:	1a000001 	bne	40014574 <CyU3PUartSetClock+0x58>
4001456c:	e1a05145 	asr	r5, r5, #2
40014570:	ea00000a 	b	400145a0 <CyU3PUartSetClock+0x84>
40014574:	e2050003 	and	r0, r5, #3
40014578:	e3500001 	cmp	r0, #1
4001457c:	0a000002 	beq	4001458c <CyU3PUartSetClock+0x70>
40014580:	e2050003 	and	r0, r5, #3
40014584:	e3500002 	cmp	r0, #2
40014588:	1a000002 	bne	40014598 <CyU3PUartSetClock+0x7c>
4001458c:	e1a05145 	asr	r5, r5, #2
40014590:	e3866801 	orr	r6, r6, #65536	; 0x10000
40014594:	ea000001 	b	400145a0 <CyU3PUartSetClock+0x84>
40014598:	e3a00001 	mov	r0, #1
4001459c:	e0805145 	add	r5, r0, r5, asr #2
400145a0:	e2455001 	sub	r5, r5, #1
400145a4:	e3550001 	cmp	r5, #1
400145a8:	ba000001 	blt	400145b4 <CyU3PUartSetClock+0x98>
400145ac:	e3550801 	cmp	r5, #65536	; 0x10000
400145b0:	ba000001 	blt	400145bc <CyU3PUartSetClock+0xa0>
400145b4:	e3a00040 	mov	r0, #64	; 0x40
400145b8:	eaffffdf 	b	4001453c <CyU3PUartSetClock+0x20>
400145bc:	e3540f96 	cmp	r4, #600	; 0x258
400145c0:	2a000002 	bcs	400145d0 <CyU3PUartSetClock+0xb4>
400145c4:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400145c8:	e1866000 	orr	r6, r6, r0
400145cc:	ea000002 	b	400145dc <CyU3PUartSetClock+0xc0>
400145d0:	e3850102 	orr	r0, r5, #-2147483648	; 0x80000000
400145d4:	e3800806 	orr	r0, r0, #393216	; 0x60000
400145d8:	e1866000 	orr	r6, r6, r0
400145dc:	e59f000c 	ldr	r0, [pc, #12]	; 400145f0 <CyU3PUartSetClock+0xd4>
400145e0:	e5806024 	str	r6, [r0, #36]	; 0x24
400145e4:	e3a00000 	mov	r0, #0
400145e8:	eaffffd3 	b	4001453c <CyU3PUartSetClock+0x20>
400145ec:	40030c50 	.word	0x40030c50
400145f0:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3UpdateLppActiveInfo:

400145f4 <CyU3UpdateLppActiveInfo>:
400145f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400145f8:	e1a04000 	mov	r4, r0
400145fc:	e1a05001 	mov	r5, r1
40014600:	e1a06002 	mov	r6, r2
40014604:	e3a00001 	mov	r0, #1
40014608:	e1a00410 	lsl	r0, r0, r4
4001460c:	e20070ff 	and	r7, r0, #255	; 0xff
40014610:	e284000f 	add	r0, r4, #15
40014614:	e20080ff 	and	r8, r0, #255	; 0xff
40014618:	e59f0050 	ldr	r0, [pc, #80]	; 40014670 <CyU3UpdateLppActiveInfo+0x7c>
4001461c:	e7806104 	str	r6, [r0, r4, lsl #2]
40014620:	e3550000 	cmp	r5, #0
40014624:	0a000009 	beq	40014650 <CyU3UpdateLppActiveInfo+0x5c>
40014628:	e3560000 	cmp	r6, #0
4001462c:	0a000001 	beq	40014638 <CyU3UpdateLppActiveInfo+0x44>
40014630:	e1a00008 	mov	r0, r8
40014634:	eb003721 	bl	400222c0 <CyU3PVicEnableInt>
40014638:	e59f0034 	ldr	r0, [pc, #52]	; 40014674 <CyU3UpdateLppActiveInfo+0x80>
4001463c:	e5d00000 	ldrb	r0, [r0]
40014640:	e1800007 	orr	r0, r0, r7
40014644:	e59f1028 	ldr	r1, [pc, #40]	; 40014674 <CyU3UpdateLppActiveInfo+0x80>
40014648:	e5c10000 	strb	r0, [r1]
4001464c:	ea000006 	b	4001466c <CyU3UpdateLppActiveInfo+0x78>
40014650:	e59f001c 	ldr	r0, [pc, #28]	; 40014674 <CyU3UpdateLppActiveInfo+0x80>
40014654:	e5d00000 	ldrb	r0, [r0]
40014658:	e1c00007 	bic	r0, r0, r7
4001465c:	e59f1010 	ldr	r1, [pc, #16]	; 40014674 <CyU3UpdateLppActiveInfo+0x80>
40014660:	e5c10000 	strb	r0, [r1]
40014664:	e1a00008 	mov	r0, r8
40014668:	eb00370f 	bl	400222ac <CyU3PVicDisableInt>
4001466c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014670:	40031608 	.word	0x40031608
40014674:	40030c94 	.word	0x40030c94

Disassembly of section i.CyFx3DevClearSwInterrupt:

40014678 <CyFx3DevClearSwInterrupt>:
40014678:	e59f000c 	ldr	r0, [pc, #12]	; 4001468c <CyFx3DevClearSwInterrupt+0x14>
4001467c:	e590104c 	ldr	r1, [r0, #76]	; 0x4c
40014680:	e3c11102 	bic	r1, r1, #-2147483648	; 0x80000000
40014684:	e580104c 	str	r1, [r0, #76]	; 0x4c
40014688:	e12fff1e 	bx	lr
4001468c:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOConfigure:

40014690 <CyFx3DevIOConfigure>:
40014690:	e92d4030 	push	{r4, r5, lr}
40014694:	e1b04000 	movs	r4, r0
40014698:	e24dd024 	sub	sp, sp, #36	; 0x24
4001469c:	0a000045 	beq	400147b8 <CyFx3DevIOConfigure+0x128>
400146a0:	eb00017b 	bl	40014c94 <CyFx3DevIsGpif32Supported>
400146a4:	e3500000 	cmp	r0, #0
400146a8:	e3a05000 	mov	r5, #0
400146ac:	05845000 	streq	r5, [r4]
400146b0:	eb0001ae 	bl	40014d70 <CyFx3DevIsSib0Supported>
400146b4:	e3500000 	cmp	r0, #0
400146b8:	05c45014 	strbeq	r5, [r4, #20]
400146bc:	eb0001b5 	bl	40014d98 <CyFx3DevIsSib1Supported>
400146c0:	e3500000 	cmp	r0, #0
400146c4:	05c45015 	strbeq	r5, [r4, #21]
400146c8:	eb000194 	bl	40014d20 <CyFx3DevIsI2sSupported>
400146cc:	e3500000 	cmp	r0, #0
400146d0:	1a000002 	bne	400146e0 <CyFx3DevIOConfigure+0x50>
400146d4:	e594000c 	ldr	r0, [r4, #12]
400146d8:	e3500000 	cmp	r0, #0
400146dc:	1a000035 	bne	400147b8 <CyFx3DevIOConfigure+0x128>
400146e0:	e5940000 	ldr	r0, [r4]
400146e4:	e3500000 	cmp	r0, #0
400146e8:	0a000009 	beq	40014714 <CyFx3DevIOConfigure+0x84>
400146ec:	e5d40016 	ldrb	r0, [r4, #22]
400146f0:	e3500000 	cmp	r0, #0
400146f4:	05d40014 	ldrbeq	r0, [r4, #20]
400146f8:	03500000 	cmpeq	r0, #0
400146fc:	05d40015 	ldrbeq	r0, [r4, #21]
40014700:	03500000 	cmpeq	r0, #0
40014704:	1a00002b 	bne	400147b8 <CyFx3DevIOConfigure+0x128>
40014708:	e3a00002 	mov	r0, #2
4001470c:	e5cd0000 	strb	r0, [sp]
40014710:	ea000022 	b	400147a0 <CyFx3DevIOConfigure+0x110>
40014714:	e5d40014 	ldrb	r0, [r4, #20]
40014718:	e3a02003 	mov	r2, #3
4001471c:	e3a03001 	mov	r3, #1
40014720:	e3500000 	cmp	r0, #0
40014724:	05cd2000 	strbeq	r2, [sp]
40014728:	0a000004 	beq	40014740 <CyFx3DevIOConfigure+0xb0>
4001472c:	e3500001 	cmp	r0, #1
40014730:	05cd3000 	strbeq	r3, [sp]
40014734:	0a000001 	beq	40014740 <CyFx3DevIOConfigure+0xb0>
40014738:	e3500002 	cmp	r0, #2
4001473c:	05cd5000 	strbeq	r5, [sp]
40014740:	e5d41015 	ldrb	r1, [r4, #21]
40014744:	e5d40016 	ldrb	r0, [r4, #22]
40014748:	e3510002 	cmp	r1, #2
4001474c:	1a000009 	bne	40014778 <CyFx3DevIOConfigure+0xe8>
40014750:	e3500004 	cmp	r0, #4
40014754:	05940004 	ldreq	r0, [r4, #4]
40014758:	03500000 	cmpeq	r0, #0
4001475c:	05940010 	ldreq	r0, [r4, #16]
40014760:	03500000 	cmpeq	r0, #0
40014764:	0594000c 	ldreq	r0, [r4, #12]
40014768:	03500000 	cmpeq	r0, #0
4001476c:	05cd5001 	strbeq	r5, [sp, #1]
40014770:	0a000013 	beq	400147c4 <CyFx3DevIOConfigure+0x134>
40014774:	ea00000f 	b	400147b8 <CyFx3DevIOConfigure+0x128>
40014778:	e3500000 	cmp	r0, #0
4001477c:	0a000009 	beq	400147a8 <CyFx3DevIOConfigure+0x118>
40014780:	e3500001 	cmp	r0, #1
40014784:	13500002 	cmpne	r0, #2
40014788:	13500003 	cmpne	r0, #3
4001478c:	1a000009 	bne	400147b8 <CyFx3DevIOConfigure+0x128>
40014790:	e3510001 	cmp	r1, #1
40014794:	05cd3001 	strbeq	r3, [sp, #1]
40014798:	0a000009 	beq	400147c4 <CyFx3DevIOConfigure+0x134>
4001479c:	e3a00004 	mov	r0, #4
400147a0:	e5cd0001 	strb	r0, [sp, #1]
400147a4:	ea000006 	b	400147c4 <CyFx3DevIOConfigure+0x134>
400147a8:	e5cd2001 	strb	r2, [sp, #1]
400147ac:	e5d40015 	ldrb	r0, [r4, #21]
400147b0:	e3500000 	cmp	r0, #0
400147b4:	0a000002 	beq	400147c4 <CyFx3DevIOConfigure+0x134>
400147b8:	e3a00000 	mov	r0, #0
400147bc:	e28dd024 	add	sp, sp, #36	; 0x24
400147c0:	e8bd8030 	pop	{r4, r5, pc}
400147c4:	e5940004 	ldr	r0, [r4, #4]
400147c8:	e58d0004 	str	r0, [sp, #4]
400147cc:	e594000c 	ldr	r0, [r4, #12]
400147d0:	e58d000c 	str	r0, [sp, #12]
400147d4:	e5940010 	ldr	r0, [r4, #16]
400147d8:	e58d0010 	str	r0, [sp, #16]
400147dc:	e5940008 	ldr	r0, [r4, #8]
400147e0:	e58d0008 	str	r0, [sp, #8]
400147e4:	e5940018 	ldr	r0, [r4, #24]
400147e8:	e58d0014 	str	r0, [sp, #20]
400147ec:	e594001c 	ldr	r0, [r4, #28]
400147f0:	e58d0018 	str	r0, [sp, #24]
400147f4:	e5940020 	ldr	r0, [r4, #32]
400147f8:	e58d001c 	str	r0, [sp, #28]
400147fc:	e5940024 	ldr	r0, [r4, #36]	; 0x24
40014800:	e58d0020 	str	r0, [sp, #32]
40014804:	e1a0000d 	mov	r0, sp
40014808:	eb000054 	bl	40014960 <CyFx3DevIOSetConfig>
4001480c:	eaffffea 	b	400147bc <CyFx3DevIOConfigure+0x12c>

Disassembly of section i.CyFx3DevIOIsGpio:

40014810 <CyFx3DevIOIsGpio>:
40014810:	e350003d 	cmp	r0, #61	; 0x3d
40014814:	e3a02000 	mov	r2, #0
40014818:	23a00000 	movcs	r0, #0
4001481c:	212fff1e 	bxcs	lr
40014820:	e3500020 	cmp	r0, #32
40014824:	83a02001 	movhi	r2, #1
40014828:	82400020 	subhi	r0, r0, #32
4001482c:	e59fc018 	ldr	ip, [pc, #24]	; 4001484c <CyFx3DevIOIsGpio+0x3c>
40014830:	e3510000 	cmp	r1, #0
40014834:	e08c1102 	add	r1, ip, r2, lsl #2
40014838:	0591101c 	ldreq	r1, [r1, #28]
4001483c:	15911014 	ldrne	r1, [r1, #20]
40014840:	e3a03001 	mov	r3, #1
40014844:	e0010013 	and	r0, r1, r3, lsl r0
40014848:	e12fff1e 	bx	lr
4001484c:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2cConfigured:

40014850 <CyFx3DevIOIsI2cConfigured>:
40014850:	e59f0004 	ldr	r0, [pc, #4]	; 4001485c <CyFx3DevIOIsI2cConfigured+0xc>
40014854:	e5900008 	ldr	r0, [r0, #8]
40014858:	e12fff1e 	bx	lr
4001485c:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsI2sConfigured:

40014860 <CyFx3DevIOIsI2sConfigured>:
40014860:	e59f0004 	ldr	r0, [pc, #4]	; 4001486c <CyFx3DevIOIsI2sConfigured+0xc>
40014864:	e590000c 	ldr	r0, [r0, #12]
40014868:	e12fff1e 	bx	lr
4001486c:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsSpiConfigured:

40014870 <CyFx3DevIOIsSpiConfigured>:
40014870:	e59f0004 	ldr	r0, [pc, #4]	; 4001487c <CyFx3DevIOIsSpiConfigured+0xc>
40014874:	e5900010 	ldr	r0, [r0, #16]
40014878:	e12fff1e 	bx	lr
4001487c:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOIsUartConfigured:

40014880 <CyFx3DevIOIsUartConfigured>:
40014880:	e59f0004 	ldr	r0, [pc, #4]	; 4001488c <CyFx3DevIOIsUartConfigured+0xc>
40014884:	e5900004 	ldr	r0, [r0, #4]
40014888:	e12fff1e 	bx	lr
4001488c:	40030cb0 	.word	0x40030cb0

Disassembly of section i.CyFx3DevIOSelectGpio:

40014890 <CyFx3DevIOSelectGpio>:
40014890:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40014894:	e350003d 	cmp	r0, #61	; 0x3d
40014898:	28bd81f0 	popcs	{r4, r5, r6, r7, r8, pc}
4001489c:	e3a08001 	mov	r8, #1
400148a0:	e59f30b0 	ldr	r3, [pc, #176]	; 40014958 <CyFx3DevIOSelectGpio+0xc8>
400148a4:	e1a0c018 	lsl	ip, r8, r0
400148a8:	e2837014 	add	r7, r3, #20
400148ac:	e89700d0 	ldm	r7, {r4, r6, r7}
400148b0:	e5935020 	ldr	r5, [r3, #32]
400148b4:	e3510000 	cmp	r1, #0
400148b8:	e240e020 	sub	lr, r0, #32
400148bc:	0a00000f 	beq	40014900 <CyFx3DevIOSelectGpio+0x70>
400148c0:	e3500020 	cmp	r0, #32
400148c4:	2a000005 	bcs	400148e0 <CyFx3DevIOSelectGpio+0x50>
400148c8:	e3520000 	cmp	r2, #0
400148cc:	0187000c 	orreq	r0, r7, ip
400148d0:	0a00000f 	beq	40014914 <CyFx3DevIOSelectGpio+0x84>
400148d4:	e184000c 	orr	r0, r4, ip
400148d8:	e5830014 	str	r0, [r3, #20]
400148dc:	ea000013 	b	40014930 <CyFx3DevIOSelectGpio+0xa0>
400148e0:	e3520000 	cmp	r2, #0
400148e4:	e20e00ff 	and	r0, lr, #255	; 0xff
400148e8:	e1a00018 	lsl	r0, r8, r0
400148ec:	01800005 	orreq	r0, r0, r5
400148f0:	0a00000d 	beq	4001492c <CyFx3DevIOSelectGpio+0x9c>
400148f4:	e1800006 	orr	r0, r0, r6
400148f8:	e5830018 	str	r0, [r3, #24]
400148fc:	ea00000b 	b	40014930 <CyFx3DevIOSelectGpio+0xa0>
40014900:	e3500020 	cmp	r0, #32
40014904:	2a000004 	bcs	4001491c <CyFx3DevIOSelectGpio+0x8c>
40014908:	e1c4000c 	bic	r0, r4, ip
4001490c:	e5830014 	str	r0, [r3, #20]
40014910:	e1c7000c 	bic	r0, r7, ip
40014914:	e583001c 	str	r0, [r3, #28]
40014918:	ea000004 	b	40014930 <CyFx3DevIOSelectGpio+0xa0>
4001491c:	e1a00e18 	lsl	r0, r8, lr
40014920:	e1c61000 	bic	r1, r6, r0
40014924:	e1c50000 	bic	r0, r5, r0
40014928:	e5831018 	str	r1, [r3, #24]
4001492c:	e5830020 	str	r0, [r3, #32]
40014930:	e5931014 	ldr	r1, [r3, #20]
40014934:	e59f0020 	ldr	r0, [pc, #32]	; 4001495c <CyFx3DevIOSelectGpio+0xcc>
40014938:	e580100c 	str	r1, [r0, #12]
4001493c:	e5931018 	ldr	r1, [r3, #24]
40014940:	e5801010 	str	r1, [r0, #16]
40014944:	e593101c 	ldr	r1, [r3, #28]
40014948:	e5801014 	str	r1, [r0, #20]
4001494c:	e5931020 	ldr	r1, [r3, #32]
40014950:	e5801018 	str	r1, [r0, #24]
40014954:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40014958:	40030cb0 	.word	0x40030cb0
4001495c:	e0051000 	.word	0xe0051000

Disassembly of section i.CyFx3DevIOSetConfig:

40014960 <CyFx3DevIOSetConfig>:
40014960:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40014964:	e59f8208 	ldr	r8, [pc, #520]	; 40014b74 <CyFx3DevIOSetConfig+0x214>
40014968:	e1a05000 	mov	r5, r0
4001496c:	e5980008 	ldr	r0, [r8, #8]
40014970:	e59f7200 	ldr	r7, [pc, #512]	; 40014b78 <CyFx3DevIOSetConfig+0x218>
40014974:	e2006002 	and	r6, r0, #2
40014978:	e5d50000 	ldrb	r0, [r5]
4001497c:	e3e0421e 	mvn	r4, #-536870911	; 0xe0000001
40014980:	e3500000 	cmp	r0, #0
40014984:	01c44944 	biceq	r4, r4, r4, asr #18
40014988:	0a000008 	beq	400149b0 <CyFx3DevIOSetConfig+0x50>
4001498c:	e3500001 	cmp	r0, #1
40014990:	059f41e4 	ldreq	r4, [pc, #484]	; 40014b7c <CyFx3DevIOSetConfig+0x21c>
40014994:	0a000005 	beq	400149b0 <CyFx3DevIOSetConfig+0x50>
40014998:	e3500002 	cmp	r0, #2
4001499c:	059f41dc 	ldreq	r4, [pc, #476]	; 40014b80 <CyFx3DevIOSetConfig+0x220>
400149a0:	0a000001 	beq	400149ac <CyFx3DevIOSetConfig+0x4c>
400149a4:	e3500003 	cmp	r0, #3
400149a8:	1a000058 	bne	40014b10 <CyFx3DevIOSetConfig+0x1b0>
400149ac:	e3866010 	orr	r6, r6, #16
400149b0:	e5d50001 	ldrb	r0, [r5, #1]
400149b4:	e3500005 	cmp	r0, #5
400149b8:	308ff100 	addcc	pc, pc, r0, lsl #2
400149bc:	ea000053 	b	40014b10 <CyFx3DevIOSetConfig+0x1b0>
400149c0:	ea000003 	b	400149d4 <CyFx3DevIOSetConfig+0x74>
400149c4:	ea000005 	b	400149e0 <CyFx3DevIOSetConfig+0x80>
400149c8:	ea000021 	b	40014a54 <CyFx3DevIOSetConfig+0xf4>
400149cc:	ea00002c 	b	40014a84 <CyFx3DevIOSetConfig+0x124>
400149d0:	ea000002 	b	400149e0 <CyFx3DevIOSetConfig+0x80>
400149d4:	e3c44507 	bic	r4, r4, #29360128	; 0x1c00000
400149d8:	e3c449bf 	bic	r4, r4, #3129344	; 0x2fc000
400149dc:	ea000032 	b	40014aac <CyFx3DevIOSetConfig+0x14c>
400149e0:	e3500001 	cmp	r0, #1
400149e4:	e5950004 	ldr	r0, [r5, #4]
400149e8:	03c4493f 	biceq	r4, r4, #1032192	; 0xfc000
400149ec:	e3500000 	cmp	r0, #0
400149f0:	1a000006 	bne	40014a10 <CyFx3DevIOSetConfig+0xb0>
400149f4:	e5950010 	ldr	r0, [r5, #16]
400149f8:	e3500000 	cmp	r0, #0
400149fc:	1a00000b 	bne	40014a30 <CyFx3DevIOSetConfig+0xd0>
40014a00:	e595000c 	ldr	r0, [r5, #12]
40014a04:	e3500000 	cmp	r0, #0
40014a08:	1a00000e 	bne	40014a48 <CyFx3DevIOSetConfig+0xe8>
40014a0c:	ea000005 	b	40014a28 <CyFx3DevIOSetConfig+0xc8>
40014a10:	e595000c 	ldr	r0, [r5, #12]
40014a14:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014a18:	e3500000 	cmp	r0, #0
40014a1c:	05950010 	ldreq	r0, [r5, #16]
40014a20:	03500000 	cmpeq	r0, #0
40014a24:	1a000039 	bne	40014b10 <CyFx3DevIOSetConfig+0x1b0>
40014a28:	e3866c01 	orr	r6, r6, #256	; 0x100
40014a2c:	ea00001e 	b	40014aac <CyFx3DevIOSetConfig+0x14c>
40014a30:	e595000c 	ldr	r0, [r5, #12]
40014a34:	e3c4461e 	bic	r4, r4, #31457280	; 0x1e00000
40014a38:	e3500000 	cmp	r0, #0
40014a3c:	1a000033 	bne	40014b10 <CyFx3DevIOSetConfig+0x1b0>
40014a40:	e3866c02 	orr	r6, r6, #512	; 0x200
40014a44:	ea000018 	b	40014aac <CyFx3DevIOSetConfig+0x14c>
40014a48:	e3c4450f 	bic	r4, r4, #62914560	; 0x3c00000
40014a4c:	e3866c03 	orr	r6, r6, #768	; 0x300
40014a50:	ea000015 	b	40014aac <CyFx3DevIOSetConfig+0x14c>
40014a54:	e5950010 	ldr	r0, [r5, #16]
40014a58:	e3c4490f 	bic	r4, r4, #245760	; 0x3c000
40014a5c:	e3500000 	cmp	r0, #0
40014a60:	1a00002a 	bne	40014b10 <CyFx3DevIOSetConfig+0x1b0>
40014a64:	e5950004 	ldr	r0, [r5, #4]
40014a68:	e3866c05 	orr	r6, r6, #1280	; 0x500
40014a6c:	e3500000 	cmp	r0, #0
40014a70:	e595000c 	ldr	r0, [r5, #12]
40014a74:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014a78:	e3500000 	cmp	r0, #0
40014a7c:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014a80:	ea000009 	b	40014aac <CyFx3DevIOSetConfig+0x14c>
40014a84:	e5950004 	ldr	r0, [r5, #4]
40014a88:	e3866b01 	orr	r6, r6, #1024	; 0x400
40014a8c:	e3500000 	cmp	r0, #0
40014a90:	e5950010 	ldr	r0, [r5, #16]
40014a94:	13c4490f 	bicne	r4, r4, #245760	; 0x3c000
40014a98:	e3500000 	cmp	r0, #0
40014a9c:	e595000c 	ldr	r0, [r5, #12]
40014aa0:	13c4461e 	bicne	r4, r4, #31457280	; 0x1e00000
40014aa4:	e3500000 	cmp	r0, #0
40014aa8:	13c44787 	bicne	r4, r4, #35389440	; 0x21c0000
40014aac:	e5950008 	ldr	r0, [r5, #8]
40014ab0:	e5959014 	ldr	r9, [r5, #20]
40014ab4:	e3500000 	cmp	r0, #0
40014ab8:	13c44303 	bicne	r4, r4, #201326592	; 0xc000000
40014abc:	e3c90203 	bic	r0, r9, #805306368	; 0x30000000
40014ac0:	e3d006fe 	bics	r0, r0, #266338304	; 0xfe00000
40014ac4:	05950018 	ldreq	r0, [r5, #24]
40014ac8:	01d00004 	bicseq	r0, r0, r4
40014acc:	0595e01c 	ldreq	lr, [r5, #28]
40014ad0:	03ce0203 	biceq	r0, lr, #805306368	; 0x30000000
40014ad4:	03d006fe 	bicseq	r0, r0, #266338304	; 0xfe00000
40014ad8:	0595c020 	ldreq	ip, [r5, #32]
40014adc:	01dc0004 	bicseq	r0, ip, r4
40014ae0:	1a00000a 	bne	40014b10 <CyFx3DevIOSetConfig+0x1b0>
40014ae4:	e59f0098 	ldr	r0, [pc, #152]	; 40014b84 <CyFx3DevIOSetConfig+0x224>
40014ae8:	e3a01000 	mov	r1, #0
40014aec:	e01e2000 	ands	r2, lr, r0
40014af0:	000c2000 	andeq	r2, ip, r0
40014af4:	0a000001 	beq	40014b00 <CyFx3DevIOSetConfig+0x1a0>
40014af8:	e11c0000 	tst	ip, r0
40014afc:	1a000003 	bne	40014b10 <CyFx3DevIOSetConfig+0x1b0>
40014b00:	e2523001 	subs	r3, r2, #1
40014b04:	13a03001 	movne	r3, #1
40014b08:	e1120003 	tst	r2, r3
40014b0c:	0a000001 	beq	40014b18 <CyFx3DevIOSetConfig+0x1b8>
40014b10:	e3a00000 	mov	r0, #0
40014b14:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014b18:	e2811001 	add	r1, r1, #1
40014b1c:	e3510008 	cmp	r1, #8
40014b20:	e1a00080 	lsl	r0, r0, #1
40014b24:	3afffff0 	bcc	40014aec <CyFx3DevIOSetConfig+0x18c>
40014b28:	e588900c 	str	r9, [r8, #12]
40014b2c:	e5950018 	ldr	r0, [r5, #24]
40014b30:	e5880010 	str	r0, [r8, #16]
40014b34:	e595001c 	ldr	r0, [r5, #28]
40014b38:	e5880014 	str	r0, [r8, #20]
40014b3c:	e5950020 	ldr	r0, [r5, #32]
40014b40:	e5880018 	str	r0, [r8, #24]
40014b44:	e3a00001 	mov	r0, #1
40014b48:	eb0000a6 	bl	40014de8 <CyFx3BusyWait>
40014b4c:	e5886008 	str	r6, [r8, #8]
40014b50:	e59f0030 	ldr	r0, [pc, #48]	; 40014b88 <CyFx3DevIOSetConfig+0x228>
40014b54:	e3a02024 	mov	r2, #36	; 0x24
40014b58:	e1a01005 	mov	r1, r5
40014b5c:	ebfffb98 	bl	400139c4 <__aeabi_memcpy4>
40014b60:	e59f0024 	ldr	r0, [pc, #36]	; 40014b8c <CyFx3DevIOSetConfig+0x22c>
40014b64:	e5804004 	str	r4, [r0, #4]
40014b68:	e5807000 	str	r7, [r0]
40014b6c:	e3a00001 	mov	r0, #1
40014b70:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40014b74:	e0051000 	.word	0xe0051000
40014b78:	3fe00000 	.word	0x3fe00000
40014b7c:	1ffff9e0 	.word	0x1ffff9e0
40014b80:	1fffe000 	.word	0x1fffe000
40014b84:	01010101 	.word	0x01010101
40014b88:	40030cb0 	.word	0x40030cb0
40014b8c:	40030ca8 	.word	0x40030ca8

Disassembly of section i.CyFx3DevIdentifyPart:

40014b90 <CyFx3DevIdentifyPart>:
40014b90:	e59f0078 	ldr	r0, [pc, #120]	; 40014c10 <CyFx3DevIdentifyPart+0x80>
40014b94:	e5901008 	ldr	r1, [r0, #8]
40014b98:	e59f2074 	ldr	r2, [pc, #116]	; 40014c14 <CyFx3DevIdentifyPart+0x84>
40014b9c:	e1a01221 	lsr	r1, r1, #4
40014ba0:	e5923004 	ldr	r3, [r2, #4]
40014ba4:	e3530000 	cmp	r3, #0
40014ba8:	15d20000 	ldrbne	r0, [r2]
40014bac:	112fff1e 	bxne	lr
40014bb0:	e5900004 	ldr	r0, [r0, #4]
40014bb4:	e3100040 	tst	r0, #64	; 0x40
40014bb8:	e59f2058 	ldr	r2, [pc, #88]	; 40014c18 <CyFx3DevIdentifyPart+0x88>
40014bbc:	13811201 	orrne	r1, r1, #268435456	; 0x10000000
40014bc0:	e3a00000 	mov	r0, #0
40014bc4:	e7923180 	ldr	r3, [r2, r0, lsl #3]
40014bc8:	e1530001 	cmp	r3, r1
40014bcc:	12800001 	addne	r0, r0, #1
40014bd0:	120000ff 	andne	r0, r0, #255	; 0xff
40014bd4:	1350001b 	cmpne	r0, #27
40014bd8:	3afffff9 	bcc	40014bc4 <CyFx3DevIdentifyPart+0x34>
40014bdc:	e350001b 	cmp	r0, #27
40014be0:	03a00003 	moveq	r0, #3
40014be4:	0a000000 	beq	40014bec <CyFx3DevIdentifyPart+0x5c>
40014be8:	2a000003 	bcs	40014bfc <CyFx3DevIdentifyPart+0x6c>
40014bec:	e0821180 	add	r1, r2, r0, lsl #3
40014bf0:	e5911004 	ldr	r1, [r1, #4]
40014bf4:	e3110004 	tst	r1, #4
40014bf8:	112fff1e 	bxne	lr
40014bfc:	e59f1018 	ldr	r1, [pc, #24]	; 40014c1c <CyFx3DevIdentifyPart+0x8c>
40014c00:	e5912f08 	ldr	r2, [r1, #3848]	; 0xf08
40014c04:	e3822004 	orr	r2, r2, #4
40014c08:	e5812f08 	str	r2, [r1, #3848]	; 0xf08
40014c0c:	e12fff1e 	bx	lr
40014c10:	e0055000 	.word	0xe0055000
40014c14:	40030c9c 	.word	0x40030c9c
40014c18:	40011fc4 	.word	0x40011fc4
40014c1c:	e0057000 	.word	0xe0057000

Disassembly of section i.CyFx3DevInitPageTables:

40014c20 <CyFx3DevInitPageTables>:
40014c20:	e92d4030 	push	{r4, r5, lr}
40014c24:	e59f0058 	ldr	r0, [pc, #88]	; 40014c84 <CyFx3DevInitPageTables+0x64>
40014c28:	e3a04000 	mov	r4, #0
40014c2c:	e59f504c 	ldr	r5, [pc, #76]	; 40014c80 <CyFx3DevInitPageTables+0x60>
40014c30:	e5804004 	str	r4, [r0, #4]
40014c34:	ebffffd5 	bl	40014b90 <CyFx3DevIdentifyPart>
40014c38:	e59f1048 	ldr	r1, [pc, #72]	; 40014c88 <CyFx3DevInitPageTables+0x68>
40014c3c:	e2450a05 	sub	r0, r5, #20480	; 0x5000
40014c40:	e5801000 	str	r1, [r0]
40014c44:	e2811201 	add	r1, r1, #268435456	; 0x10000000
40014c48:	e5801008 	str	r1, [r0, #8]
40014c4c:	e28112c3 	add	r1, r1, #805306380	; 0x3000000c
40014c50:	e5801010 	str	r1, [r0, #16]
40014c54:	e24112c6 	sub	r1, r1, #1610612748	; 0x6000000c
40014c58:	e5801018 	str	r1, [r0, #24]
40014c5c:	e59f1028 	ldr	r1, [pc, #40]	; 40014c8c <CyFx3DevInitPageTables+0x6c>
40014c60:	e5801020 	str	r1, [r0, #32]
40014c64:	e59f1024 	ldr	r1, [pc, #36]	; 40014c90 <CyFx3DevInitPageTables+0x70>
40014c68:	e580101c 	str	r1, [r0, #28]
40014c6c:	e5804024 	str	r4, [r0, #36]	; 0x24
40014c70:	ee025f10 	mcr	15, 0, r5, cr2, cr0, {0}
40014c74:	e3a00003 	mov	r0, #3
40014c78:	ee030f10 	mcr	15, 0, r0, cr3, cr0, {0}
40014c7c:	e8bd8030 	pop	{r4, r5, pc}
40014c80:	e0058000 	.word	0xe0058000
40014c84:	40030c9c 	.word	0x40030c9c
40014c88:	00000c12 	.word	0x00000c12
40014c8c:	fff00c12 	.word	0xfff00c12
40014c90:	f000081e 	.word	0xf000081e

Disassembly of section i.CyFx3DevIsGpif32Supported:

40014c94 <CyFx3DevIsGpif32Supported>:
40014c94:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014c98:	ebffffbc 	bl	40014b90 <CyFx3DevIdentifyPart>
40014c9c:	e350001b 	cmp	r0, #27
40014ca0:	359f1010 	ldrcc	r1, [pc, #16]	; 40014cb8 <CyFx3DevIsGpif32Supported+0x24>
40014ca4:	30810180 	addcc	r0, r1, r0, lsl #3
40014ca8:	35900004 	ldrcc	r0, [r0, #4]
40014cac:	32000010 	andcc	r0, r0, #16
40014cb0:	23a00000 	movcs	r0, #0
40014cb4:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014cb8:	40011fc4 	.word	0x40011fc4

Disassembly of section i.CyFx3DevIsGpifConfigurable:

40014cbc <CyFx3DevIsGpifConfigurable>:
40014cbc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014cc0:	ebffffb2 	bl	40014b90 <CyFx3DevIdentifyPart>
40014cc4:	e350001b 	cmp	r0, #27
40014cc8:	2a000006 	bcs	40014ce8 <CyFx3DevIsGpifConfigurable+0x2c>
40014ccc:	e59f101c 	ldr	r1, [pc, #28]	; 40014cf0 <CyFx3DevIsGpifConfigurable+0x34>
40014cd0:	e0810180 	add	r0, r1, r0, lsl #3
40014cd4:	e5900004 	ldr	r0, [r0, #4]
40014cd8:	e3100c0f 	tst	r0, #3840	; 0xf00
40014cdc:	159f0010 	ldrne	r0, [pc, #16]	; 40014cf4 <CyFx3DevIsGpifConfigurable+0x38>
40014ce0:	15900008 	ldrne	r0, [r0, #8]
40014ce4:	149df004 	popne	{pc}		; (ldrne pc, [sp], #4)
40014ce8:	e3a00001 	mov	r0, #1
40014cec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014cf0:	40011fc4 	.word	0x40011fc4
40014cf4:	40030c9c 	.word	0x40030c9c

Disassembly of section i.CyFx3DevIsGpifSupported:

40014cf8 <CyFx3DevIsGpifSupported>:
40014cf8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014cfc:	ebffffa3 	bl	40014b90 <CyFx3DevIdentifyPart>
40014d00:	e350001b 	cmp	r0, #27
40014d04:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d1c <CyFx3DevIsGpifSupported+0x24>
40014d08:	30810180 	addcc	r0, r1, r0, lsl #3
40014d0c:	35900004 	ldrcc	r0, [r0, #4]
40014d10:	32000008 	andcc	r0, r0, #8
40014d14:	23a00000 	movcs	r0, #0
40014d18:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d1c:	40011fc4 	.word	0x40011fc4

Disassembly of section i.CyFx3DevIsI2sSupported:

40014d20 <CyFx3DevIsI2sSupported>:
40014d20:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d24:	ebffff99 	bl	40014b90 <CyFx3DevIdentifyPart>
40014d28:	e350001b 	cmp	r0, #27
40014d2c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d44 <CyFx3DevIsI2sSupported+0x24>
40014d30:	30810180 	addcc	r0, r1, r0, lsl #3
40014d34:	35900004 	ldrcc	r0, [r0, #4]
40014d38:	32000080 	andcc	r0, r0, #128	; 0x80
40014d3c:	23a00000 	movcs	r0, #0
40014d40:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d44:	40011fc4 	.word	0x40011fc4

Disassembly of section i.CyFx3DevIsOtgSupported:

40014d48 <CyFx3DevIsOtgSupported>:
40014d48:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d4c:	ebffff8f 	bl	40014b90 <CyFx3DevIdentifyPart>
40014d50:	e350001b 	cmp	r0, #27
40014d54:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d6c <CyFx3DevIsOtgSupported+0x24>
40014d58:	30810180 	addcc	r0, r1, r0, lsl #3
40014d5c:	35900004 	ldrcc	r0, [r0, #4]
40014d60:	32000002 	andcc	r0, r0, #2
40014d64:	23a00000 	movcs	r0, #0
40014d68:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d6c:	40011fc4 	.word	0x40011fc4

Disassembly of section i.CyFx3DevIsSib0Supported:

40014d70 <CyFx3DevIsSib0Supported>:
40014d70:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d74:	ebffff85 	bl	40014b90 <CyFx3DevIdentifyPart>
40014d78:	e350001b 	cmp	r0, #27
40014d7c:	359f1010 	ldrcc	r1, [pc, #16]	; 40014d94 <CyFx3DevIsSib0Supported+0x24>
40014d80:	30810180 	addcc	r0, r1, r0, lsl #3
40014d84:	35900004 	ldrcc	r0, [r0, #4]
40014d88:	32000020 	andcc	r0, r0, #32
40014d8c:	23a00000 	movcs	r0, #0
40014d90:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014d94:	40011fc4 	.word	0x40011fc4

Disassembly of section i.CyFx3DevIsSib1Supported:

40014d98 <CyFx3DevIsSib1Supported>:
40014d98:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014d9c:	ebffff7b 	bl	40014b90 <CyFx3DevIdentifyPart>
40014da0:	e350001b 	cmp	r0, #27
40014da4:	359f1010 	ldrcc	r1, [pc, #16]	; 40014dbc <CyFx3DevIsSib1Supported+0x24>
40014da8:	30810180 	addcc	r0, r1, r0, lsl #3
40014dac:	35900004 	ldrcc	r0, [r0, #4]
40014db0:	32000040 	andcc	r0, r0, #64	; 0x40
40014db4:	23a00000 	movcs	r0, #0
40014db8:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014dbc:	40011fc4 	.word	0x40011fc4

Disassembly of section i.CyFx3DevIsUsb3Supported:

40014dc0 <CyFx3DevIsUsb3Supported>:
40014dc0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014dc4:	ebffff71 	bl	40014b90 <CyFx3DevIdentifyPart>
40014dc8:	e350001b 	cmp	r0, #27
40014dcc:	359f1010 	ldrcc	r1, [pc, #16]	; 40014de4 <CyFx3DevIsUsb3Supported+0x24>
40014dd0:	30810180 	addcc	r0, r1, r0, lsl #3
40014dd4:	35900004 	ldrcc	r0, [r0, #4]
40014dd8:	32000001 	andcc	r0, r0, #1
40014ddc:	23a00000 	movcs	r0, #0
40014de0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014de4:	40011fc4 	.word	0x40011fc4

Disassembly of section i.CyFx3BusyWait:

40014de8 <CyFx3BusyWait>:
40014de8:	ea000003 	b	40014dfc <CyFx3BusyWait+0x14>
40014dec:	e3a01000 	mov	r1, #0
40014df0:	e2811001 	add	r1, r1, #1
40014df4:	e351002f 	cmp	r1, #47	; 0x2f
40014df8:	3afffffc 	bcc	40014df0 <CyFx3BusyWait+0x8>
40014dfc:	e1b01000 	movs	r1, r0
40014e00:	e2400001 	sub	r0, r0, #1
40014e04:	e1a00800 	lsl	r0, r0, #16
40014e08:	e1a00820 	lsr	r0, r0, #16
40014e0c:	1afffff6 	bne	40014dec <CyFx3BusyWait+0x4>
40014e10:	e12fff1e 	bx	lr

Disassembly of section i.CyFx3PibDllEnable:

40014e14 <CyFx3PibDllEnable>:
40014e14:	e59f205c 	ldr	r2, [pc, #92]	; 40014e78 <CyFx3PibDllEnable+0x64>
40014e18:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
40014e1c:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e20:	e3c00001 	bic	r0, r0, #1
40014e24:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e28:	e3a00001 	mov	r0, #1
40014e2c:	ebffffed 	bl	40014de8 <CyFx3BusyWait>
40014e30:	e3a00003 	mov	r0, #3
40014e34:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e38:	e3a00001 	mov	r0, #1
40014e3c:	ebffffe9 	bl	40014de8 <CyFx3BusyWait>
40014e40:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e44:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40014e48:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e4c:	e3a00001 	mov	r0, #1
40014e50:	ebffffe4 	bl	40014de8 <CyFx3BusyWait>
40014e54:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e58:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40014e5c:	e5820028 	str	r0, [r2, #40]	; 0x28
40014e60:	e3a00001 	mov	r0, #1
40014e64:	ebffffdf 	bl	40014de8 <CyFx3BusyWait>
40014e68:	e5920028 	ldr	r0, [r2, #40]	; 0x28
40014e6c:	e3100004 	tst	r0, #4
40014e70:	0afffffc 	beq	40014e68 <CyFx3PibDllEnable+0x54>
40014e74:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
40014e78:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibGetDllStatus:

40014e7c <CyFx3PibGetDllStatus>:
40014e7c:	e59f0008 	ldr	r0, [pc, #8]	; 40014e8c <CyFx3PibGetDllStatus+0x10>
40014e80:	e5900028 	ldr	r0, [r0, #40]	; 0x28
40014e84:	e2000004 	and	r0, r0, #4
40014e88:	e12fff1e 	bx	lr
40014e8c:	e0010000 	.word	0xe0010000

Disassembly of section i.CyFx3PibPowerOn:

40014e90 <CyFx3PibPowerOn>:
40014e90:	e92d4010 	push	{r4, lr}
40014e94:	e3a0431e 	mov	r4, #2013265920	; 0x78000000
40014e98:	ebffff96 	bl	40014cf8 <CyFx3DevIsGpifSupported>
40014e9c:	e3500000 	cmp	r0, #0
40014ea0:	1a000002 	bne	40014eb0 <CyFx3PibPowerOn+0x20>
40014ea4:	e4940004 	ldr	r0, [r4], #4
40014ea8:	e3500000 	cmp	r0, #0
40014eac:	1afffffc 	bne	40014ea4 <CyFx3PibPowerOn+0x14>
40014eb0:	e59f2028 	ldr	r2, [pc, #40]	; 40014ee0 <CyFx3PibPowerOn+0x50>
40014eb4:	e3a00000 	mov	r0, #0
40014eb8:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014ebc:	e3a0000a 	mov	r0, #10
40014ec0:	ebffffc8 	bl	40014de8 <CyFx3BusyWait>
40014ec4:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014ec8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40014ecc:	e5820f04 	str	r0, [r2, #3844]	; 0xf04
40014ed0:	e5920f04 	ldr	r0, [r2, #3844]	; 0xf04
40014ed4:	e3100001 	tst	r0, #1
40014ed8:	0afffffc 	beq	40014ed0 <CyFx3PibPowerOn+0x40>
40014edc:	e8bd8010 	pop	{r4, pc}
40014ee0:	e0017000 	.word	0xe0017000

Disassembly of section i.CyU3PDmaSocketDisable:

40014ee4 <CyU3PDmaSocketDisable>:
40014ee4:	e3a0c03f 	mov	ip, #63	; 0x3f
40014ee8:	e00c1440 	and	r1, ip, r0, asr #8
40014eec:	e20030ff 	and	r3, r0, #255	; 0xff
40014ef0:	e59fc048 	ldr	ip, [pc, #72]	; 40014f40 <CyU3PDmaSocketDisable+0x5c>
40014ef4:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014ef8:	e08cc383 	add	ip, ip, r3, lsl #7
40014efc:	e59c200c 	ldr	r2, [ip, #12]
40014f00:	e3120601 	tst	r2, #1048576	; 0x100000
40014f04:	1a000000 	bne	40014f0c <CyU3PDmaSocketDisable+0x28>
40014f08:	e12fff1e 	bx	lr
40014f0c:	e3c22209 	bic	r2, r2, #-1879048192	; 0x90000000
40014f10:	e59fc028 	ldr	ip, [pc, #40]	; 40014f40 <CyU3PDmaSocketDisable+0x5c>
40014f14:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f18:	e08cc383 	add	ip, ip, r3, lsl #7
40014f1c:	e58c200c 	str	r2, [ip, #12]
40014f20:	e1a00000 	nop			; (mov r0, r0)
40014f24:	e59fc014 	ldr	ip, [pc, #20]	; 40014f40 <CyU3PDmaSocketDisable+0x5c>
40014f28:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
40014f2c:	e08cc383 	add	ip, ip, r3, lsl #7
40014f30:	e59cc00c 	ldr	ip, [ip, #12]
40014f34:	e31c0601 	tst	ip, #1048576	; 0x100000
40014f38:	1afffff9 	bne	40014f24 <CyU3PDmaSocketDisable+0x40>
40014f3c:	eafffff1 	b	40014f08 <CyU3PDmaSocketDisable+0x24>
40014f40:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketGetConfig:

40014f44 <CyU3PDmaSocketGetConfig>:
40014f44:	e1a02000 	mov	r2, r0
40014f48:	e3a0003f 	mov	r0, #63	; 0x3f
40014f4c:	e0003442 	and	r3, r0, r2, asr #8
40014f50:	e202c0ff 	and	ip, r2, #255	; 0xff
40014f54:	e3510000 	cmp	r1, #0
40014f58:	1a000001 	bne	40014f64 <CyU3PDmaSocketGetConfig+0x20>
40014f5c:	e3a00040 	mov	r0, #64	; 0x40
40014f60:	e12fff1e 	bx	lr
40014f64:	e59f0074 	ldr	r0, [pc, #116]	; 40014fe0 <CyU3PDmaSocketGetConfig+0x9c>
40014f68:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f6c:	e790038c 	ldr	r0, [r0, ip, lsl #7]
40014f70:	e5810000 	str	r0, [r1]
40014f74:	e59f0064 	ldr	r0, [pc, #100]	; 40014fe0 <CyU3PDmaSocketGetConfig+0x9c>
40014f78:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f7c:	e080038c 	add	r0, r0, ip, lsl #7
40014f80:	e5900004 	ldr	r0, [r0, #4]
40014f84:	e5810004 	str	r0, [r1, #4]
40014f88:	e59f0050 	ldr	r0, [pc, #80]	; 40014fe0 <CyU3PDmaSocketGetConfig+0x9c>
40014f8c:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014f90:	e080038c 	add	r0, r0, ip, lsl #7
40014f94:	e5900008 	ldr	r0, [r0, #8]
40014f98:	e5810008 	str	r0, [r1, #8]
40014f9c:	e59f003c 	ldr	r0, [pc, #60]	; 40014fe0 <CyU3PDmaSocketGetConfig+0x9c>
40014fa0:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014fa4:	e080038c 	add	r0, r0, ip, lsl #7
40014fa8:	e590000c 	ldr	r0, [r0, #12]
40014fac:	e581000c 	str	r0, [r1, #12]
40014fb0:	e59f0028 	ldr	r0, [pc, #40]	; 40014fe0 <CyU3PDmaSocketGetConfig+0x9c>
40014fb4:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014fb8:	e080038c 	add	r0, r0, ip, lsl #7
40014fbc:	e5900010 	ldr	r0, [r0, #16]
40014fc0:	e5810010 	str	r0, [r1, #16]
40014fc4:	e59f0014 	ldr	r0, [pc, #20]	; 40014fe0 <CyU3PDmaSocketGetConfig+0x9c>
40014fc8:	e7900103 	ldr	r0, [r0, r3, lsl #2]
40014fcc:	e080038c 	add	r0, r0, ip, lsl #7
40014fd0:	e5900014 	ldr	r0, [r0, #20]
40014fd4:	e5810014 	str	r0, [r1, #20]
40014fd8:	e3a00000 	mov	r0, #0
40014fdc:	eaffffdf 	b	40014f60 <CyU3PDmaSocketGetConfig+0x1c>
40014fe0:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketIsValidConsumer:

40014fe4 <CyU3PDmaSocketIsValidConsumer>:
40014fe4:	e92d4010 	push	{r4, lr}
40014fe8:	e1a01000 	mov	r1, r0
40014fec:	e3a0003f 	mov	r0, #63	; 0x3f
40014ff0:	e0002441 	and	r2, r0, r1, asr #8
40014ff4:	e20130ff 	and	r3, r1, #255	; 0xff
40014ff8:	e3a04000 	mov	r4, #0
40014ffc:	e3520000 	cmp	r2, #0
40015000:	0a000006 	beq	40015020 <CyU3PDmaSocketIsValidConsumer+0x3c>
40015004:	e3520001 	cmp	r2, #1
40015008:	0a000009 	beq	40015034 <CyU3PDmaSocketIsValidConsumer+0x50>
4001500c:	e3520002 	cmp	r2, #2
40015010:	0a00000c 	beq	40015048 <CyU3PDmaSocketIsValidConsumer+0x64>
40015014:	e3520003 	cmp	r2, #3
40015018:	1a000014 	bne	40015070 <CyU3PDmaSocketIsValidConsumer+0x8c>
4001501c:	ea00000e 	b	4001505c <CyU3PDmaSocketIsValidConsumer+0x78>
40015020:	e1a00000 	nop			; (mov r0, r0)
40015024:	e3a0c000 	mov	ip, #0
40015028:	e3a0e004 	mov	lr, #4
4001502c:	e59f4080 	ldr	r4, [pc, #128]	; 400150b4 <CyU3PDmaSocketIsValidConsumer+0xd0>
40015030:	ea000011 	b	4001507c <CyU3PDmaSocketIsValidConsumer+0x98>
40015034:	e1a00000 	nop			; (mov r0, r0)
40015038:	e3a0c000 	mov	ip, #0
4001503c:	e3a0e00f 	mov	lr, #15
40015040:	e59f4070 	ldr	r4, [pc, #112]	; 400150b8 <CyU3PDmaSocketIsValidConsumer+0xd4>
40015044:	ea00000c 	b	4001507c <CyU3PDmaSocketIsValidConsumer+0x98>
40015048:	e1a00000 	nop			; (mov r0, r0)
4001504c:	e3a0c000 	mov	ip, #0
40015050:	e3a0e007 	mov	lr, #7
40015054:	e59f4060 	ldr	r4, [pc, #96]	; 400150bc <CyU3PDmaSocketIsValidConsumer+0xd8>
40015058:	ea000007 	b	4001507c <CyU3PDmaSocketIsValidConsumer+0x98>
4001505c:	e1a00000 	nop			; (mov r0, r0)
40015060:	e3a0c000 	mov	ip, #0
40015064:	e3a0e00f 	mov	lr, #15
40015068:	e59f4050 	ldr	r4, [pc, #80]	; 400150c0 <CyU3PDmaSocketIsValidConsumer+0xdc>
4001506c:	ea000002 	b	4001507c <CyU3PDmaSocketIsValidConsumer+0x98>
40015070:	e1a00000 	nop			; (mov r0, r0)
40015074:	e3a00000 	mov	r0, #0
40015078:	e8bd8010 	pop	{r4, pc}
4001507c:	e1a00000 	nop			; (mov r0, r0)
40015080:	e5940000 	ldr	r0, [r4]
40015084:	e3100001 	tst	r0, #1
40015088:	1a000001 	bne	40015094 <CyU3PDmaSocketIsValidConsumer+0xb0>
4001508c:	e3a00000 	mov	r0, #0
40015090:	eafffff8 	b	40015078 <CyU3PDmaSocketIsValidConsumer+0x94>
40015094:	e153000c 	cmp	r3, ip
40015098:	ba000003 	blt	400150ac <CyU3PDmaSocketIsValidConsumer+0xc8>
4001509c:	e153000e 	cmp	r3, lr
400150a0:	ca000001 	bgt	400150ac <CyU3PDmaSocketIsValidConsumer+0xc8>
400150a4:	e3a00001 	mov	r0, #1
400150a8:	eafffff2 	b	40015078 <CyU3PDmaSocketIsValidConsumer+0x94>
400150ac:	e3a00000 	mov	r0, #0
400150b0:	eafffff0 	b	40015078 <CyU3PDmaSocketIsValidConsumer+0x94>
400150b4:	e0007f04 	.word	0xe0007f04
400150b8:	e0017f04 	.word	0xe0017f04
400150bc:	e0027f04 	.word	0xe0027f04
400150c0:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketIsValidProducer:

400150c4 <CyU3PDmaSocketIsValidProducer>:
400150c4:	e92d4010 	push	{r4, lr}
400150c8:	e1a01000 	mov	r1, r0
400150cc:	e3a0003f 	mov	r0, #63	; 0x3f
400150d0:	e0002441 	and	r2, r0, r1, asr #8
400150d4:	e20130ff 	and	r3, r1, #255	; 0xff
400150d8:	e3a04000 	mov	r4, #0
400150dc:	e3520000 	cmp	r2, #0
400150e0:	0a000006 	beq	40015100 <CyU3PDmaSocketIsValidProducer+0x3c>
400150e4:	e3520001 	cmp	r2, #1
400150e8:	0a000009 	beq	40015114 <CyU3PDmaSocketIsValidProducer+0x50>
400150ec:	e3520002 	cmp	r2, #2
400150f0:	0a00000c 	beq	40015128 <CyU3PDmaSocketIsValidProducer+0x64>
400150f4:	e3520004 	cmp	r2, #4
400150f8:	1a000014 	bne	40015150 <CyU3PDmaSocketIsValidProducer+0x8c>
400150fc:	ea00000e 	b	4001513c <CyU3PDmaSocketIsValidProducer+0x78>
40015100:	e1a00000 	nop			; (mov r0, r0)
40015104:	e3a0c005 	mov	ip, #5
40015108:	e3a0e007 	mov	lr, #7
4001510c:	e59f4080 	ldr	r4, [pc, #128]	; 40015194 <CyU3PDmaSocketIsValidProducer+0xd0>
40015110:	ea000011 	b	4001515c <CyU3PDmaSocketIsValidProducer+0x98>
40015114:	e1a00000 	nop			; (mov r0, r0)
40015118:	e3a0c000 	mov	ip, #0
4001511c:	e3a0e01f 	mov	lr, #31
40015120:	e59f4070 	ldr	r4, [pc, #112]	; 40015198 <CyU3PDmaSocketIsValidProducer+0xd4>
40015124:	ea00000c 	b	4001515c <CyU3PDmaSocketIsValidProducer+0x98>
40015128:	e1a00000 	nop			; (mov r0, r0)
4001512c:	e3a0c000 	mov	ip, #0
40015130:	e3a0e007 	mov	lr, #7
40015134:	e59f4060 	ldr	r4, [pc, #96]	; 4001519c <CyU3PDmaSocketIsValidProducer+0xd8>
40015138:	ea000007 	b	4001515c <CyU3PDmaSocketIsValidProducer+0x98>
4001513c:	e1a00000 	nop			; (mov r0, r0)
40015140:	e3a0c000 	mov	ip, #0
40015144:	e3a0e00f 	mov	lr, #15
40015148:	e59f4050 	ldr	r4, [pc, #80]	; 400151a0 <CyU3PDmaSocketIsValidProducer+0xdc>
4001514c:	ea000002 	b	4001515c <CyU3PDmaSocketIsValidProducer+0x98>
40015150:	e1a00000 	nop			; (mov r0, r0)
40015154:	e3a00000 	mov	r0, #0
40015158:	e8bd8010 	pop	{r4, pc}
4001515c:	e1a00000 	nop			; (mov r0, r0)
40015160:	e5940000 	ldr	r0, [r4]
40015164:	e3100001 	tst	r0, #1
40015168:	1a000001 	bne	40015174 <CyU3PDmaSocketIsValidProducer+0xb0>
4001516c:	e3a00000 	mov	r0, #0
40015170:	eafffff8 	b	40015158 <CyU3PDmaSocketIsValidProducer+0x94>
40015174:	e153000c 	cmp	r3, ip
40015178:	ba000003 	blt	4001518c <CyU3PDmaSocketIsValidProducer+0xc8>
4001517c:	e153000e 	cmp	r3, lr
40015180:	ca000001 	bgt	4001518c <CyU3PDmaSocketIsValidProducer+0xc8>
40015184:	e3a00001 	mov	r0, #1
40015188:	eafffff2 	b	40015158 <CyU3PDmaSocketIsValidProducer+0x94>
4001518c:	e3a00000 	mov	r0, #0
40015190:	eafffff0 	b	40015158 <CyU3PDmaSocketIsValidProducer+0x94>
40015194:	e0007f04 	.word	0xe0007f04
40015198:	e0017f04 	.word	0xe0017f04
4001519c:	e0027f04 	.word	0xe0027f04
400151a0:	e0037f04 	.word	0xe0037f04

Disassembly of section i.CyU3PDmaSocketSendEvent:

400151a4 <CyU3PDmaSocketSendEvent>:
400151a4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
400151a8:	e1a04000 	mov	r4, r0
400151ac:	e1a05001 	mov	r5, r1
400151b0:	e1a06002 	mov	r6, r2
400151b4:	e3a0003f 	mov	r0, #63	; 0x3f
400151b8:	e0007444 	and	r7, r0, r4, asr #8
400151bc:	e20480ff 	and	r8, r4, #255	; 0xff
400151c0:	e1a09005 	mov	r9, r5
400151c4:	e3560001 	cmp	r6, #1
400151c8:	1a000000 	bne	400151d0 <CyU3PDmaSocketSendEvent+0x2c>
400151cc:	e3899801 	orr	r9, r9, #65536	; 0x10000
400151d0:	e59f0010 	ldr	r0, [pc, #16]	; 400151e8 <CyU3PDmaSocketSendEvent+0x44>
400151d4:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400151d8:	e0800388 	add	r0, r0, r8, lsl #7
400151dc:	e580907c 	str	r9, [r0, #124]	; 0x7c
400151e0:	ebfff6e1 	bl	40012d6c <CyU3PSysBarrierSync>
400151e4:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
400151e8:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetConfig:

400151ec <CyU3PDmaSocketSetConfig>:
400151ec:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400151f0:	e1a04000 	mov	r4, r0
400151f4:	e1a05001 	mov	r5, r1
400151f8:	e3a0003f 	mov	r0, #63	; 0x3f
400151fc:	e0006444 	and	r6, r0, r4, asr #8
40015200:	e20470ff 	and	r7, r4, #255	; 0xff
40015204:	e3550000 	cmp	r5, #0
40015208:	1a000001 	bne	40015214 <CyU3PDmaSocketSetConfig+0x28>
4001520c:	e3a00040 	mov	r0, #64	; 0x40
40015210:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015214:	e59f1078 	ldr	r1, [pc, #120]	; 40015294 <CyU3PDmaSocketSetConfig+0xa8>
40015218:	e5950000 	ldr	r0, [r5]
4001521c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015220:	e7810387 	str	r0, [r1, r7, lsl #7]
40015224:	e59f1068 	ldr	r1, [pc, #104]	; 40015294 <CyU3PDmaSocketSetConfig+0xa8>
40015228:	e5950004 	ldr	r0, [r5, #4]
4001522c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015230:	e0811387 	add	r1, r1, r7, lsl #7
40015234:	e5810004 	str	r0, [r1, #4]
40015238:	e59f1054 	ldr	r1, [pc, #84]	; 40015294 <CyU3PDmaSocketSetConfig+0xa8>
4001523c:	e5950008 	ldr	r0, [r5, #8]
40015240:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015244:	e0811387 	add	r1, r1, r7, lsl #7
40015248:	e5810008 	str	r0, [r1, #8]
4001524c:	e59f1040 	ldr	r1, [pc, #64]	; 40015294 <CyU3PDmaSocketSetConfig+0xa8>
40015250:	e5950010 	ldr	r0, [r5, #16]
40015254:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015258:	e0811387 	add	r1, r1, r7, lsl #7
4001525c:	e5810010 	str	r0, [r1, #16]
40015260:	e59f102c 	ldr	r1, [pc, #44]	; 40015294 <CyU3PDmaSocketSetConfig+0xa8>
40015264:	e5950014 	ldr	r0, [r5, #20]
40015268:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001526c:	e0811387 	add	r1, r1, r7, lsl #7
40015270:	e5810014 	str	r0, [r1, #20]
40015274:	e59f1018 	ldr	r1, [pc, #24]	; 40015294 <CyU3PDmaSocketSetConfig+0xa8>
40015278:	e595000c 	ldr	r0, [r5, #12]
4001527c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015280:	e0811387 	add	r1, r1, r7, lsl #7
40015284:	e581000c 	str	r0, [r1, #12]
40015288:	ebfff6b7 	bl	40012d6c <CyU3PSysBarrierSync>
4001528c:	e3a00000 	mov	r0, #0
40015290:	eaffffde 	b	40015210 <CyU3PDmaSocketSetConfig+0x24>
40015294:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketSetWrapUp:

40015298 <CyU3PDmaSocketSetWrapUp>:
40015298:	e3a0c03f 	mov	ip, #63	; 0x3f
4001529c:	e00c1440 	and	r1, ip, r0, asr #8
400152a0:	e20030ff 	and	r3, r0, #255	; 0xff
400152a4:	e59fc02c 	ldr	ip, [pc, #44]	; 400152d8 <CyU3PDmaSocketSetWrapUp+0x40>
400152a8:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
400152ac:	e08cc383 	add	ip, ip, r3, lsl #7
400152b0:	e59c200c 	ldr	r2, [ip, #12]
400152b4:	e3120601 	tst	r2, #1048576	; 0x100000
400152b8:	1a000000 	bne	400152c0 <CyU3PDmaSocketSetWrapUp+0x28>
400152bc:	e12fff1e 	bx	lr
400152c0:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
400152c4:	e59fc00c 	ldr	ip, [pc, #12]	; 400152d8 <CyU3PDmaSocketSetWrapUp+0x40>
400152c8:	e79cc101 	ldr	ip, [ip, r1, lsl #2]
400152cc:	e08cc383 	add	ip, ip, r3, lsl #7
400152d0:	e58c200c 	str	r2, [ip, #12]
400152d4:	eafffff8 	b	400152bc <CyU3PDmaSocketSetWrapUp+0x24>
400152d8:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaSocketUpdateStatus:

400152dc <CyU3PDmaSocketUpdateStatus>:
400152dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400152e0:	e1a04000 	mov	r4, r0
400152e4:	e1a05001 	mov	r5, r1
400152e8:	e3a0003f 	mov	r0, #63	; 0x3f
400152ec:	e0006444 	and	r6, r0, r4, asr #8
400152f0:	e20470ff 	and	r7, r4, #255	; 0xff
400152f4:	e3550000 	cmp	r5, #0
400152f8:	1a000001 	bne	40015304 <CyU3PDmaSocketUpdateStatus+0x28>
400152fc:	e3a00040 	mov	r0, #64	; 0x40
40015300:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40015304:	e59f1040 	ldr	r1, [pc, #64]	; 4001534c <CyU3PDmaSocketUpdateStatus+0x70>
40015308:	e5950010 	ldr	r0, [r5, #16]
4001530c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015310:	e0811387 	add	r1, r1, r7, lsl #7
40015314:	e5810010 	str	r0, [r1, #16]
40015318:	e59f102c 	ldr	r1, [pc, #44]	; 4001534c <CyU3PDmaSocketUpdateStatus+0x70>
4001531c:	e5950014 	ldr	r0, [r5, #20]
40015320:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015324:	e0811387 	add	r1, r1, r7, lsl #7
40015328:	e5810014 	str	r0, [r1, #20]
4001532c:	e59f1018 	ldr	r1, [pc, #24]	; 4001534c <CyU3PDmaSocketUpdateStatus+0x70>
40015330:	e595000c 	ldr	r0, [r5, #12]
40015334:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40015338:	e0811387 	add	r1, r1, r7, lsl #7
4001533c:	e581000c 	str	r0, [r1, #12]
40015340:	ebfff689 	bl	40012d6c <CyU3PSysBarrierSync>
40015344:	e3a00000 	mov	r0, #0
40015348:	eaffffec 	b	40015300 <CyU3PDmaSocketUpdateStatus+0x24>
4001534c:	40030cd8 	.word	0x40030cd8

Disassembly of section i.CyU3PDmaUpdateSocketSuspendOption:

40015350 <CyU3PDmaUpdateSocketSuspendOption>:
40015350:	e92d4070 	push	{r4, r5, r6, lr}
40015354:	e24dd018 	sub	sp, sp, #24
40015358:	e1a04000 	mov	r4, r0
4001535c:	e1a06001 	mov	r6, r1
40015360:	e1a0100d 	mov	r1, sp
40015364:	e1a00004 	mov	r0, r4
40015368:	ebfffef5 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001536c:	e59d000c 	ldr	r0, [sp, #12]
40015370:	e2000702 	and	r0, r0, #524288	; 0x80000
40015374:	e1a059a0 	lsr	r5, r0, #19
40015378:	e3550001 	cmp	r5, #1
4001537c:	1a000010 	bne	400153c4 <CyU3PDmaUpdateSocketSuspendOption+0x74>
40015380:	e59d000c 	ldr	r0, [sp, #12]
40015384:	e3100101 	tst	r0, #1073741824	; 0x40000000
40015388:	1a00000a 	bne	400153b8 <CyU3PDmaUpdateSocketSuspendOption+0x68>
4001538c:	e59d000c 	ldr	r0, [sp, #12]
40015390:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015394:	e58d000c 	str	r0, [sp, #12]
40015398:	e3a00000 	mov	r0, #0
4001539c:	e58d0010 	str	r0, [sp, #16]
400153a0:	e1a0100d 	mov	r1, sp
400153a4:	e1a00004 	mov	r0, r4
400153a8:	ebffffcb 	bl	400152dc <CyU3PDmaSocketUpdateStatus>
400153ac:	e1a0100d 	mov	r1, sp
400153b0:	e1a00004 	mov	r0, r4
400153b4:	ebfffee2 	bl	40014f44 <CyU3PDmaSocketGetConfig>
400153b8:	e3a00000 	mov	r0, #0
400153bc:	e58d0010 	str	r0, [sp, #16]
400153c0:	ea000004 	b	400153d8 <CyU3PDmaUpdateSocketSuspendOption+0x88>
400153c4:	e59d000c 	ldr	r0, [sp, #12]
400153c8:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
400153cc:	e58d000c 	str	r0, [sp, #12]
400153d0:	e3a00e12 	mov	r0, #288	; 0x120
400153d4:	e58d0010 	str	r0, [sp, #16]
400153d8:	e59d000c 	ldr	r0, [sp, #12]
400153dc:	e3c00409 	bic	r0, r0, #150994944	; 0x9000000
400153e0:	e58d000c 	str	r0, [sp, #12]
400153e4:	e59d0014 	ldr	r0, [sp, #20]
400153e8:	e3c00e12 	bic	r0, r0, #288	; 0x120
400153ec:	e58d0014 	str	r0, [sp, #20]
400153f0:	e3560000 	cmp	r6, #0
400153f4:	0a000006 	beq	40015414 <CyU3PDmaUpdateSocketSuspendOption+0xc4>
400153f8:	e3560001 	cmp	r6, #1
400153fc:	0a000006 	beq	4001541c <CyU3PDmaUpdateSocketSuspendOption+0xcc>
40015400:	e3560002 	cmp	r6, #2
40015404:	0a00000e 	beq	40015444 <CyU3PDmaUpdateSocketSuspendOption+0xf4>
40015408:	e3560003 	cmp	r6, #3
4001540c:	1a000020 	bne	40015494 <CyU3PDmaUpdateSocketSuspendOption+0x144>
40015410:	ea000015 	b	4001546c <CyU3PDmaUpdateSocketSuspendOption+0x11c>
40015414:	e1a00000 	nop			; (mov r0, r0)
40015418:	ea00001f 	b	4001549c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
4001541c:	e1a00000 	nop			; (mov r0, r0)
40015420:	e59d000c 	ldr	r0, [sp, #12]
40015424:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40015428:	e58d000c 	str	r0, [sp, #12]
4001542c:	e3550000 	cmp	r5, #0
40015430:	1a000002 	bne	40015440 <CyU3PDmaUpdateSocketSuspendOption+0xf0>
40015434:	e59d0014 	ldr	r0, [sp, #20]
40015438:	e3800020 	orr	r0, r0, #32
4001543c:	e58d0014 	str	r0, [sp, #20]
40015440:	ea000015 	b	4001549c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015444:	e1a00000 	nop			; (mov r0, r0)
40015448:	e3550000 	cmp	r5, #0
4001544c:	1a000005 	bne	40015468 <CyU3PDmaUpdateSocketSuspendOption+0x118>
40015450:	e59d000c 	ldr	r0, [sp, #12]
40015454:	e3800101 	orr	r0, r0, #1073741824	; 0x40000000
40015458:	e58d000c 	str	r0, [sp, #12]
4001545c:	e59d0014 	ldr	r0, [sp, #20]
40015460:	e3800020 	orr	r0, r0, #32
40015464:	e58d0014 	str	r0, [sp, #20]
40015468:	ea00000b 	b	4001549c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
4001546c:	e1a00000 	nop			; (mov r0, r0)
40015470:	e59d000c 	ldr	r0, [sp, #12]
40015474:	e3800401 	orr	r0, r0, #16777216	; 0x1000000
40015478:	e58d000c 	str	r0, [sp, #12]
4001547c:	e3550000 	cmp	r5, #0
40015480:	1a000002 	bne	40015490 <CyU3PDmaUpdateSocketSuspendOption+0x140>
40015484:	e59d0014 	ldr	r0, [sp, #20]
40015488:	e3800c01 	orr	r0, r0, #256	; 0x100
4001548c:	e58d0014 	str	r0, [sp, #20]
40015490:	ea000001 	b	4001549c <CyU3PDmaUpdateSocketSuspendOption+0x14c>
40015494:	e1a00000 	nop			; (mov r0, r0)
40015498:	e1a00000 	nop			; (mov r0, r0)
4001549c:	e1a00000 	nop			; (mov r0, r0)
400154a0:	e1a0100d 	mov	r1, sp
400154a4:	e1a00004 	mov	r0, r4
400154a8:	ebffff8b 	bl	400152dc <CyU3PDmaSocketUpdateStatus>
400154ac:	e28dd018 	add	sp, sp, #24
400154b0:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaChannelAcquireLock:

400154b4 <CyU3PDmaChannelAcquireLock>:
400154b4:	e92d4070 	push	{r4, r5, r6, lr}
400154b8:	e1a04000 	mov	r4, r0
400154bc:	e1a05001 	mov	r5, r1
400154c0:	e3540000 	cmp	r4, #0
400154c4:	1a000001 	bne	400154d0 <CyU3PDmaChannelAcquireLock+0x1c>
400154c8:	e3a00041 	mov	r0, #65	; 0x41
400154cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400154d0:	e5940000 	ldr	r0, [r4]
400154d4:	e3500000 	cmp	r0, #0
400154d8:	1a000001 	bne	400154e4 <CyU3PDmaChannelAcquireLock+0x30>
400154dc:	e3a00044 	mov	r0, #68	; 0x44
400154e0:	eafffff9 	b	400154cc <CyU3PDmaChannelAcquireLock+0x18>
400154e4:	e1a01005 	mov	r1, r5
400154e8:	e284003c 	add	r0, r4, #60	; 0x3c
400154ec:	ebffd371 	bl	4000a2b8 <_txe_mutex_get>
400154f0:	e3500000 	cmp	r0, #0
400154f4:	0a000001 	beq	40015500 <CyU3PDmaChannelAcquireLock+0x4c>
400154f8:	e3a0001d 	mov	r0, #29
400154fc:	eafffff2 	b	400154cc <CyU3PDmaChannelAcquireLock+0x18>
40015500:	e3a00000 	mov	r0, #0
40015504:	eafffff0 	b	400154cc <CyU3PDmaChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaChannelCacheControl:

40015508 <CyU3PDmaChannelCacheControl>:
40015508:	e92d4070 	push	{r4, r5, r6, lr}
4001550c:	e1a04000 	mov	r4, r0
40015510:	e1a05001 	mov	r5, r1
40015514:	e3e01000 	mvn	r1, #0
40015518:	e1a00004 	mov	r0, r4
4001551c:	ebffffe4 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
40015520:	e1a06000 	mov	r6, r0
40015524:	e3560000 	cmp	r6, #0
40015528:	0a000001 	beq	40015534 <CyU3PDmaChannelCacheControl+0x2c>
4001552c:	e1a00006 	mov	r0, r6
40015530:	e8bd8070 	pop	{r4, r5, r6, pc}
40015534:	e5940000 	ldr	r0, [r4]
40015538:	e3500001 	cmp	r0, #1
4001553c:	1a000001 	bne	40015548 <CyU3PDmaChannelCacheControl+0x40>
40015540:	e5845038 	str	r5, [r4, #56]	; 0x38
40015544:	ea000000 	b	4001554c <CyU3PDmaChannelCacheControl+0x44>
40015548:	e3a06047 	mov	r6, #71	; 0x47
4001554c:	e284003c 	add	r0, r4, #60	; 0x3c
40015550:	ebffd38d 	bl	4000a38c <_txe_mutex_put>
40015554:	e1a00006 	mov	r0, r6
40015558:	eafffff4 	b	40015530 <CyU3PDmaChannelCacheControl+0x28>

Disassembly of section i.CyU3PDmaChannelCommitBuffer:

4001555c <CyU3PDmaChannelCommitBuffer>:
4001555c:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40015560:	e24dd03c 	sub	sp, sp, #60	; 0x3c
40015564:	e1a04000 	mov	r4, r0
40015568:	e1a05001 	mov	r5, r1
4001556c:	e1a06002 	mov	r6, r2
40015570:	e3e01000 	mvn	r1, #0
40015574:	e1a00004 	mov	r0, r4
40015578:	ebffffcd 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
4001557c:	e1a09000 	mov	r9, r0
40015580:	e3590000 	cmp	r9, #0
40015584:	0a000002 	beq	40015594 <CyU3PDmaChannelCommitBuffer+0x38>
40015588:	e1a00009 	mov	r0, r9
4001558c:	e28dd03c 	add	sp, sp, #60	; 0x3c
40015590:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40015594:	e1d400b6 	ldrh	r0, [r4, #6]
40015598:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
4001559c:	e0400001 	sub	r0, r0, r1
400155a0:	e1500005 	cmp	r0, r5
400155a4:	aa000000 	bge	400155ac <CyU3PDmaChannelCommitBuffer+0x50>
400155a8:	e3a09040 	mov	r9, #64	; 0x40
400155ac:	e5940000 	ldr	r0, [r4]
400155b0:	e3500002 	cmp	r0, #2
400155b4:	0a000000 	beq	400155bc <CyU3PDmaChannelCommitBuffer+0x60>
400155b8:	e3a09042 	mov	r9, #66	; 0x42
400155bc:	e1d400b4 	ldrh	r0, [r4, #4]
400155c0:	e3500003 	cmp	r0, #3
400155c4:	1a000000 	bne	400155cc <CyU3PDmaChannelCommitBuffer+0x70>
400155c8:	e3a09046 	mov	r9, #70	; 0x46
400155cc:	e3590000 	cmp	r9, #0
400155d0:	0a000003 	beq	400155e4 <CyU3PDmaChannelCommitBuffer+0x88>
400155d4:	e284003c 	add	r0, r4, #60	; 0x3c
400155d8:	ebffd36b 	bl	4000a38c <_txe_mutex_put>
400155dc:	e1a00009 	mov	r0, r9
400155e0:	eaffffe9 	b	4001558c <CyU3PDmaChannelCommitBuffer+0x30>
400155e4:	e1d400b4 	ldrh	r0, [r4, #4]
400155e8:	e20070ff 	and	r7, r0, #255	; 0xff
400155ec:	e3570002 	cmp	r7, #2
400155f0:	1a000037 	bne	400156d4 <CyU3PDmaChannelCommitBuffer+0x178>
400155f4:	e1d401b6 	ldrh	r0, [r4, #22]
400155f8:	e28d1014 	add	r1, sp, #20
400155fc:	eb0034ad 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40015600:	e1d401b8 	ldrh	r0, [r4, #24]
40015604:	e28d1004 	add	r1, sp, #4
40015608:	eb0034aa 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001560c:	e59d0020 	ldr	r0, [sp, #32]
40015610:	e3100008 	tst	r0, #8
40015614:	1a000000 	bne	4001561c <CyU3PDmaChannelCommitBuffer+0xc0>
40015618:	e3a09047 	mov	r9, #71	; 0x47
4001561c:	e59d0010 	ldr	r0, [sp, #16]
40015620:	e3100008 	tst	r0, #8
40015624:	0a000000 	beq	4001562c <CyU3PDmaChannelCommitBuffer+0xd0>
40015628:	e3a09047 	mov	r9, #71	; 0x47
4001562c:	e3590000 	cmp	r9, #0
40015630:	1a000080 	bne	40015838 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015634:	e59d0010 	ldr	r0, [sp, #16]
40015638:	e59f1208 	ldr	r1, [pc, #520]	; 40015848 <CyU3PDmaChannelCommitBuffer+0x2ec>
4001563c:	e0000001 	and	r0, r0, r1
40015640:	e58d0010 	str	r0, [sp, #16]
40015644:	e59d0010 	ldr	r0, [sp, #16]
40015648:	e1800805 	orr	r0, r0, r5, lsl #16
4001564c:	e58d0010 	str	r0, [sp, #16]
40015650:	e3560000 	cmp	r6, #0
40015654:	1a000005 	bne	40015670 <CyU3PDmaChannelCommitBuffer+0x114>
40015658:	e59d1020 	ldr	r1, [sp, #32]
4001565c:	e201100f 	and	r1, r1, #15
40015660:	e59d0010 	ldr	r0, [sp, #16]
40015664:	e1800001 	orr	r0, r0, r1
40015668:	e58d0010 	str	r0, [sp, #16]
4001566c:	ea000004 	b	40015684 <CyU3PDmaChannelCommitBuffer+0x128>
40015670:	e206100e 	and	r1, r6, #14
40015674:	e3811008 	orr	r1, r1, #8
40015678:	e59d0010 	ldr	r0, [sp, #16]
4001567c:	e1800001 	orr	r0, r0, r1
40015680:	e58d0010 	str	r0, [sp, #16]
40015684:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015688:	e3500000 	cmp	r0, #0
4001568c:	0a000004 	beq	400156a4 <CyU3PDmaChannelCommitBuffer+0x148>
40015690:	e59d2010 	ldr	r2, [sp, #16]
40015694:	e59f31ac 	ldr	r3, [pc, #428]	; 40015848 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015698:	e0021003 	and	r1, r2, r3
4001569c:	e59d0004 	ldr	r0, [sp, #4]
400156a0:	ebfff34a 	bl	400123d0 <CyU3PSysCleanDRegion>
400156a4:	e1d401b8 	ldrh	r0, [r4, #24]
400156a8:	e28d1004 	add	r1, sp, #4
400156ac:	eb00349c 	bl	40022924 <CyU3PDmaDscrSetConfig>
400156b0:	e1d411b8 	ldrh	r1, [r4, #24]
400156b4:	e1d401b2 	ldrh	r0, [r4, #18]
400156b8:	e3a02001 	mov	r2, #1
400156bc:	ebfffeb8 	bl	400151a4 <CyU3PDmaSocketSendEvent>
400156c0:	e59d001c 	ldr	r0, [sp, #28]
400156c4:	e1c401b6 	strh	r0, [r4, #22]
400156c8:	e59d000c 	ldr	r0, [sp, #12]
400156cc:	e1c401b8 	strh	r0, [r4, #24]
400156d0:	ea000058 	b	40015838 <CyU3PDmaChannelCommitBuffer+0x2dc>
400156d4:	e3570004 	cmp	r7, #4
400156d8:	1a000027 	bne	4001577c <CyU3PDmaChannelCommitBuffer+0x220>
400156dc:	e1d401b8 	ldrh	r0, [r4, #24]
400156e0:	e28d1004 	add	r1, sp, #4
400156e4:	eb003473 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400156e8:	e59d0010 	ldr	r0, [sp, #16]
400156ec:	e3100008 	tst	r0, #8
400156f0:	0a000000 	beq	400156f8 <CyU3PDmaChannelCommitBuffer+0x19c>
400156f4:	e3a09047 	mov	r9, #71	; 0x47
400156f8:	e3590000 	cmp	r9, #0
400156fc:	1a00004d 	bne	40015838 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015700:	e59d0010 	ldr	r0, [sp, #16]
40015704:	e1a00800 	lsl	r0, r0, #16
40015708:	e1a00820 	lsr	r0, r0, #16
4001570c:	e58d0010 	str	r0, [sp, #16]
40015710:	e3a01008 	mov	r1, #8
40015714:	e1811805 	orr	r1, r1, r5, lsl #16
40015718:	e59d0010 	ldr	r0, [sp, #16]
4001571c:	e1800001 	orr	r0, r0, r1
40015720:	e58d0010 	str	r0, [sp, #16]
40015724:	e206100e 	and	r1, r6, #14
40015728:	e59d0010 	ldr	r0, [sp, #16]
4001572c:	e1800001 	orr	r0, r0, r1
40015730:	e58d0010 	str	r0, [sp, #16]
40015734:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015738:	e3500000 	cmp	r0, #0
4001573c:	0a000004 	beq	40015754 <CyU3PDmaChannelCommitBuffer+0x1f8>
40015740:	e59d2010 	ldr	r2, [sp, #16]
40015744:	e59f30fc 	ldr	r3, [pc, #252]	; 40015848 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015748:	e0021003 	and	r1, r2, r3
4001574c:	e59d0004 	ldr	r0, [sp, #4]
40015750:	ebfff31e 	bl	400123d0 <CyU3PSysCleanDRegion>
40015754:	e1d401b8 	ldrh	r0, [r4, #24]
40015758:	e28d1004 	add	r1, sp, #4
4001575c:	eb003470 	bl	40022924 <CyU3PDmaDscrSetConfig>
40015760:	e1d411b8 	ldrh	r1, [r4, #24]
40015764:	e1d401b2 	ldrh	r0, [r4, #18]
40015768:	e3a02001 	mov	r2, #1
4001576c:	ebfffe8c 	bl	400151a4 <CyU3PDmaSocketSendEvent>
40015770:	e59d000c 	ldr	r0, [sp, #12]
40015774:	e1c401b8 	strh	r0, [r4, #24]
40015778:	ea00002e 	b	40015838 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001577c:	e1d401b2 	ldrh	r0, [r4, #18]
40015780:	e28d1024 	add	r1, sp, #36	; 0x24
40015784:	ebfffdee 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40015788:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001578c:	e3100702 	tst	r0, #524288	; 0x80000
40015790:	0a000027 	beq	40015834 <CyU3PDmaChannelCommitBuffer+0x2d8>
40015794:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40015798:	e1a08800 	lsl	r8, r0, #16
4001579c:	e1a08828 	lsr	r8, r8, #16
400157a0:	e28d1004 	add	r1, sp, #4
400157a4:	e1a00008 	mov	r0, r8
400157a8:	eb003442 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400157ac:	e59d0010 	ldr	r0, [sp, #16]
400157b0:	e3100008 	tst	r0, #8
400157b4:	0a00001c 	beq	4001582c <CyU3PDmaChannelCommitBuffer+0x2d0>
400157b8:	e59d0010 	ldr	r0, [sp, #16]
400157bc:	e1a00800 	lsl	r0, r0, #16
400157c0:	e1a00820 	lsr	r0, r0, #16
400157c4:	e58d0010 	str	r0, [sp, #16]
400157c8:	e59d0010 	ldr	r0, [sp, #16]
400157cc:	e1800805 	orr	r0, r0, r5, lsl #16
400157d0:	e58d0010 	str	r0, [sp, #16]
400157d4:	e3560000 	cmp	r6, #0
400157d8:	0a000007 	beq	400157fc <CyU3PDmaChannelCommitBuffer+0x2a0>
400157dc:	e59d0010 	ldr	r0, [sp, #16]
400157e0:	e3c0000f 	bic	r0, r0, #15
400157e4:	e58d0010 	str	r0, [sp, #16]
400157e8:	e206100e 	and	r1, r6, #14
400157ec:	e3811008 	orr	r1, r1, #8
400157f0:	e59d0010 	ldr	r0, [sp, #16]
400157f4:	e1800001 	orr	r0, r0, r1
400157f8:	e58d0010 	str	r0, [sp, #16]
400157fc:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40015800:	e3500000 	cmp	r0, #0
40015804:	0a000004 	beq	4001581c <CyU3PDmaChannelCommitBuffer+0x2c0>
40015808:	e59d2010 	ldr	r2, [sp, #16]
4001580c:	e59f3034 	ldr	r3, [pc, #52]	; 40015848 <CyU3PDmaChannelCommitBuffer+0x2ec>
40015810:	e0021003 	and	r1, r2, r3
40015814:	e59d0004 	ldr	r0, [sp, #4]
40015818:	ebfff2ec 	bl	400123d0 <CyU3PSysCleanDRegion>
4001581c:	e28d1004 	add	r1, sp, #4
40015820:	e1a00008 	mov	r0, r8
40015824:	eb00343e 	bl	40022924 <CyU3PDmaDscrSetConfig>
40015828:	ea000002 	b	40015838 <CyU3PDmaChannelCommitBuffer+0x2dc>
4001582c:	e3a09047 	mov	r9, #71	; 0x47
40015830:	ea000000 	b	40015838 <CyU3PDmaChannelCommitBuffer+0x2dc>
40015834:	e3a09047 	mov	r9, #71	; 0x47
40015838:	e284003c 	add	r0, r4, #60	; 0x3c
4001583c:	ebffd2d2 	bl	4000a38c <_txe_mutex_put>
40015840:	e1a00009 	mov	r0, r9
40015844:	eaffff50 	b	4001558c <CyU3PDmaChannelCommitBuffer+0x30>
40015848:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelConfigure_TypeAuto:

4001584c <CyU3PDmaChannelConfigure_TypeAuto>:
4001584c:	e92d4070 	push	{r4, r5, r6, lr}
40015850:	e1a05000 	mov	r5, r0
40015854:	e1d501b2 	ldrh	r0, [r5, #18]
40015858:	e3806901 	orr	r6, r0, #16384	; 0x4000
4001585c:	e1d501b0 	ldrh	r0, [r5, #16]
40015860:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40015864:	e1810800 	orr	r0, r1, r0, lsl #16
40015868:	e1866000 	orr	r6, r6, r0
4001586c:	e1d500b4 	ldrh	r0, [r5, #4]
40015870:	e3500001 	cmp	r0, #1
40015874:	1a000000 	bne	4001587c <CyU3PDmaChannelConfigure_TypeAuto+0x30>
40015878:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
4001587c:	e1d520b6 	ldrh	r2, [r5, #6]
40015880:	e1d510b8 	ldrh	r1, [r5, #8]
40015884:	e1a03006 	mov	r3, r6
40015888:	e285000c 	add	r0, r5, #12
4001588c:	eb00331a 	bl	400224fc <CyU3PDmaDscrChainCreate>
40015890:	e1a04000 	mov	r4, r0
40015894:	e3540000 	cmp	r4, #0
40015898:	0a000001 	beq	400158a4 <CyU3PDmaChannelConfigure_TypeAuto+0x58>
4001589c:	e1a00004 	mov	r0, r4
400158a0:	e8bd8070 	pop	{r4, r5, r6, pc}
400158a4:	e1d500bc 	ldrh	r0, [r5, #12]
400158a8:	e1c501b6 	strh	r0, [r5, #22]
400158ac:	e1c501ba 	strh	r0, [r5, #26]
400158b0:	e1c501be 	strh	r0, [r5, #30]
400158b4:	e1d500be 	ldrh	r0, [r5, #14]
400158b8:	e1c501b8 	strh	r0, [r5, #24]
400158bc:	e1c501bc 	strh	r0, [r5, #28]
400158c0:	e1c502b0 	strh	r0, [r5, #32]
400158c4:	e2850014 	add	r0, r5, #20
400158c8:	eb003382 	bl	400226d8 <CyU3PDmaDscrGet>
400158cc:	e1a00005 	mov	r0, r5
400158d0:	eb0006b7 	bl	400173b4 <CyU3PDmaConfigureSockets_TypeAuto>
400158d4:	e3a00000 	mov	r0, #0
400158d8:	eafffff0 	b	400158a0 <CyU3PDmaChannelConfigure_TypeAuto+0x54>

Disassembly of section i.CyU3PDmaChannelConfigure_TypeManual:

400158dc <CyU3PDmaChannelConfigure_TypeManual>:
400158dc:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400158e0:	e24dd024 	sub	sp, sp, #36	; 0x24
400158e4:	e1a04000 	mov	r4, r0
400158e8:	e284700c 	add	r7, r4, #12
400158ec:	e3a06cff 	mov	r6, #65280	; 0xff00
400158f0:	e1d401b0 	ldrh	r0, [r4, #16]
400158f4:	e3a01101 	mov	r1, #1073741824	; 0x40000000
400158f8:	e1810800 	orr	r0, r1, r0, lsl #16
400158fc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40015900:	e1866000 	orr	r6, r6, r0
40015904:	e1d400b4 	ldrh	r0, [r4, #4]
40015908:	e3500003 	cmp	r0, #3
4001590c:	1a000002 	bne	4001591c <CyU3PDmaChannelConfigure_TypeManual+0x40>
40015910:	e3a00c3f 	mov	r0, #16128	; 0x3f00
40015914:	e1c401b2 	strh	r0, [r4, #18]
40015918:	ea000009 	b	40015944 <CyU3PDmaChannelConfigure_TypeManual+0x68>
4001591c:	e1d400b4 	ldrh	r0, [r4, #4]
40015920:	e3500004 	cmp	r0, #4
40015924:	1a000006 	bne	40015944 <CyU3PDmaChannelConfigure_TypeManual+0x68>
40015928:	e59f020c 	ldr	r0, [pc, #524]	; 40015b3c <CyU3PDmaChannelConfigure_TypeManual+0x260>
4001592c:	e1c401b0 	strh	r0, [r4, #16]
40015930:	e284700e 	add	r7, r4, #14
40015934:	e1d401b2 	ldrh	r0, [r4, #18]
40015938:	e3806903 	orr	r6, r0, #49152	; 0xc000
4001593c:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015940:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015944:	e1d400b8 	ldrh	r0, [r4, #8]
40015948:	e3500000 	cmp	r0, #0
4001594c:	0a00006b 	beq	40015b00 <CyU3PDmaChannelConfigure_TypeManual+0x224>
40015950:	e1d420b6 	ldrh	r2, [r4, #6]
40015954:	e1d410b8 	ldrh	r1, [r4, #8]
40015958:	e1a03006 	mov	r3, r6
4001595c:	e1a00007 	mov	r0, r7
40015960:	eb0032e5 	bl	400224fc <CyU3PDmaDscrChainCreate>
40015964:	e1a05000 	mov	r5, r0
40015968:	e3550000 	cmp	r5, #0
4001596c:	0a000002 	beq	4001597c <CyU3PDmaChannelConfigure_TypeManual+0xa0>
40015970:	e1a00005 	mov	r0, r5
40015974:	e28dd024 	add	sp, sp, #36	; 0x24
40015978:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
4001597c:	e1d400b4 	ldrh	r0, [r4, #4]
40015980:	e3500002 	cmp	r0, #2
40015984:	1a000012 	bne	400159d4 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
40015988:	e1d401b2 	ldrh	r0, [r4, #18]
4001598c:	e3806903 	orr	r6, r0, #49152	; 0xc000
40015990:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40015994:	e3866801 	orr	r6, r6, #65536	; 0x10000
40015998:	e1d410b8 	ldrh	r1, [r4, #8]
4001599c:	e1a03006 	mov	r3, r6
400159a0:	e3a02000 	mov	r2, #0
400159a4:	e284000e 	add	r0, r4, #14
400159a8:	eb0032d3 	bl	400224fc <CyU3PDmaDscrChainCreate>
400159ac:	e1a05000 	mov	r5, r0
400159b0:	e3550000 	cmp	r5, #0
400159b4:	0a000006 	beq	400159d4 <CyU3PDmaChannelConfigure_TypeManual+0xf8>
400159b8:	e1d410b8 	ldrh	r1, [r4, #8]
400159bc:	e1d700b0 	ldrh	r0, [r7]
400159c0:	e3a03001 	mov	r3, #1
400159c4:	e1a02003 	mov	r2, r3
400159c8:	eb00331f 	bl	4002264c <CyU3PDmaDscrChainDestroy>
400159cc:	e1a00005 	mov	r0, r5
400159d0:	eaffffe7 	b	40015974 <CyU3PDmaChannelConfigure_TypeManual+0x98>
400159d4:	e1d400bc 	ldrh	r0, [r4, #12]
400159d8:	e1c401b6 	strh	r0, [r4, #22]
400159dc:	e1c401ba 	strh	r0, [r4, #26]
400159e0:	e1c401be 	strh	r0, [r4, #30]
400159e4:	e1d400be 	ldrh	r0, [r4, #14]
400159e8:	e1c401b8 	strh	r0, [r4, #24]
400159ec:	e1c401bc 	strh	r0, [r4, #28]
400159f0:	e1c402b0 	strh	r0, [r4, #32]
400159f4:	e3a08000 	mov	r8, #0
400159f8:	e1d790b0 	ldrh	r9, [r7]
400159fc:	ea00003b 	b	40015af0 <CyU3PDmaChannelConfigure_TypeManual+0x214>
40015a00:	e28d1014 	add	r1, sp, #20
40015a04:	e1a00009 	mov	r0, r9
40015a08:	eb0033aa 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40015a0c:	e1d400b4 	ldrh	r0, [r4, #4]
40015a10:	e3500004 	cmp	r0, #4
40015a14:	1a00000b 	bne	40015a48 <CyU3PDmaChannelConfigure_TypeManual+0x16c>
40015a18:	e59d0014 	ldr	r0, [sp, #20]
40015a1c:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a20:	e0800001 	add	r0, r0, r1
40015a24:	e58d0014 	str	r0, [sp, #20]
40015a28:	e1d400b6 	ldrh	r0, [r4, #6]
40015a2c:	e280000f 	add	r0, r0, #15
40015a30:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a34:	e0400001 	sub	r0, r0, r1
40015a38:	e59f1100 	ldr	r1, [pc, #256]	; 40015b40 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015a3c:	e0000001 	and	r0, r0, r1
40015a40:	e58d0020 	str	r0, [sp, #32]
40015a44:	ea000021 	b	40015ad0 <CyU3PDmaChannelConfigure_TypeManual+0x1f4>
40015a48:	e1d400b4 	ldrh	r0, [r4, #4]
40015a4c:	e3500002 	cmp	r0, #2
40015a50:	1a000012 	bne	40015aa0 <CyU3PDmaChannelConfigure_TypeManual+0x1c4>
40015a54:	e1d401b8 	ldrh	r0, [r4, #24]
40015a58:	e28d1004 	add	r1, sp, #4
40015a5c:	eb003395 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40015a60:	e59d0014 	ldr	r0, [sp, #20]
40015a64:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a68:	e0800001 	add	r0, r0, r1
40015a6c:	e58d0004 	str	r0, [sp, #4]
40015a70:	e1d400b6 	ldrh	r0, [r4, #6]
40015a74:	e280000f 	add	r0, r0, #15
40015a78:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
40015a7c:	e0400001 	sub	r0, r0, r1
40015a80:	e59f10b8 	ldr	r1, [pc, #184]	; 40015b40 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015a84:	e0000001 	and	r0, r0, r1
40015a88:	e58d0010 	str	r0, [sp, #16]
40015a8c:	e1d401b8 	ldrh	r0, [r4, #24]
40015a90:	e28d1004 	add	r1, sp, #4
40015a94:	eb0033a2 	bl	40022924 <CyU3PDmaDscrSetConfig>
40015a98:	e59d000c 	ldr	r0, [sp, #12]
40015a9c:	e1c401b8 	strh	r0, [r4, #24]
40015aa0:	e59d0014 	ldr	r0, [sp, #20]
40015aa4:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015aa8:	e0800001 	add	r0, r0, r1
40015aac:	e58d0014 	str	r0, [sp, #20]
40015ab0:	e1d400b6 	ldrh	r0, [r4, #6]
40015ab4:	e1d412b2 	ldrh	r1, [r4, #34]	; 0x22
40015ab8:	e0400001 	sub	r0, r0, r1
40015abc:	e1d412b4 	ldrh	r1, [r4, #36]	; 0x24
40015ac0:	e0400001 	sub	r0, r0, r1
40015ac4:	e59f1074 	ldr	r1, [pc, #116]	; 40015b40 <CyU3PDmaChannelConfigure_TypeManual+0x264>
40015ac8:	e0000001 	and	r0, r0, r1
40015acc:	e58d0020 	str	r0, [sp, #32]
40015ad0:	e28d1014 	add	r1, sp, #20
40015ad4:	e1a00009 	mov	r0, r9
40015ad8:	eb003391 	bl	40022924 <CyU3PDmaDscrSetConfig>
40015adc:	e59d001c 	ldr	r0, [sp, #28]
40015ae0:	e1a09800 	lsl	r9, r0, #16
40015ae4:	e1a09829 	lsr	r9, r9, #16
40015ae8:	e2880001 	add	r0, r8, #1
40015aec:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40015af0:	e1d400b8 	ldrh	r0, [r4, #8]
40015af4:	e1500008 	cmp	r0, r8
40015af8:	caffffc0 	bgt	40015a00 <CyU3PDmaChannelConfigure_TypeManual+0x124>
40015afc:	ea000008 	b	40015b24 <CyU3PDmaChannelConfigure_TypeManual+0x248>
40015b00:	e59f003c 	ldr	r0, [pc, #60]	; 40015b44 <CyU3PDmaChannelConfigure_TypeManual+0x268>
40015b04:	e1c400bc 	strh	r0, [r4, #12]
40015b08:	e1c401b6 	strh	r0, [r4, #22]
40015b0c:	e1c401ba 	strh	r0, [r4, #26]
40015b10:	e1c401be 	strh	r0, [r4, #30]
40015b14:	e1c400be 	strh	r0, [r4, #14]
40015b18:	e1c401b8 	strh	r0, [r4, #24]
40015b1c:	e1c401bc 	strh	r0, [r4, #28]
40015b20:	e1c402b0 	strh	r0, [r4, #32]
40015b24:	e2840014 	add	r0, r4, #20
40015b28:	eb0032ea 	bl	400226d8 <CyU3PDmaDscrGet>
40015b2c:	e1a00004 	mov	r0, r4
40015b30:	eb00065f 	bl	400174b4 <CyU3PDmaConfigureSockets_TypeManual>
40015b34:	e3a00000 	mov	r0, #0
40015b38:	eaffff8d 	b	40015974 <CyU3PDmaChannelConfigure_TypeManual+0x98>
40015b3c:	00003f01 	.word	0x00003f01
40015b40:	0000fff0 	.word	0x0000fff0
40015b44:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelCreate:

40015b48 <CyU3PDmaChannelCreate>:
40015b48:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40015b4c:	e1a04000 	mov	r4, r0
40015b50:	e1a05001 	mov	r5, r1
40015b54:	e1a06002 	mov	r6, r2
40015b58:	e3560000 	cmp	r6, #0
40015b5c:	1a000001 	bne	40015b68 <CyU3PDmaChannelCreate+0x20>
40015b60:	e3a00041 	mov	r0, #65	; 0x41
40015b64:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40015b68:	e3540000 	cmp	r4, #0
40015b6c:	1a000001 	bne	40015b78 <CyU3PDmaChannelCreate+0x30>
40015b70:	e3a00041 	mov	r0, #65	; 0x41
40015b74:	eafffffa 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015b78:	eb00330e 	bl	400227b8 <CyU3PDmaDscrGetFreeCount>
40015b7c:	e1d610b2 	ldrh	r1, [r6, #2]
40015b80:	e2811001 	add	r1, r1, #1
40015b84:	e1500001 	cmp	r0, r1
40015b88:	da000007 	ble	40015bac <CyU3PDmaChannelCreate+0x64>
40015b8c:	e3550002 	cmp	r5, #2
40015b90:	1a000007 	bne	40015bb4 <CyU3PDmaChannelCreate+0x6c>
40015b94:	eb003307 	bl	400227b8 <CyU3PDmaDscrGetFreeCount>
40015b98:	e1d610b2 	ldrh	r1, [r6, #2]
40015b9c:	e3a02001 	mov	r2, #1
40015ba0:	e0821101 	add	r1, r2, r1, lsl #2
40015ba4:	e1500001 	cmp	r0, r1
40015ba8:	ca000001 	bgt	40015bb4 <CyU3PDmaChannelCreate+0x6c>
40015bac:	e3a00010 	mov	r0, #16
40015bb0:	eaffffeb 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015bb4:	e1d600b0 	ldrh	r0, [r6]
40015bb8:	e3500000 	cmp	r0, #0
40015bbc:	0a000003 	beq	40015bd0 <CyU3PDmaChannelCreate+0x88>
40015bc0:	e1d600b0 	ldrh	r0, [r6]
40015bc4:	e59f1354 	ldr	r1, [pc, #852]	; 40015f20 <CyU3PDmaChannelCreate+0x3d8>
40015bc8:	e1500001 	cmp	r0, r1
40015bcc:	da000001 	ble	40015bd8 <CyU3PDmaChannelCreate+0x90>
40015bd0:	e3a00040 	mov	r0, #64	; 0x40
40015bd4:	eaffffe2 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015bd8:	e3550000 	cmp	r5, #0
40015bdc:	0a000001 	beq	40015be8 <CyU3PDmaChannelCreate+0xa0>
40015be0:	e3550001 	cmp	r5, #1
40015be4:	1a000009 	bne	40015c10 <CyU3PDmaChannelCreate+0xc8>
40015be8:	e1d600b0 	ldrh	r0, [r6]
40015bec:	e310000f 	tst	r0, #15
40015bf0:	0a000001 	beq	40015bfc <CyU3PDmaChannelCreate+0xb4>
40015bf4:	e3a00040 	mov	r0, #64	; 0x40
40015bf8:	eaffffd9 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015bfc:	e1d600b2 	ldrh	r0, [r6, #2]
40015c00:	e3500000 	cmp	r0, #0
40015c04:	1a00000b 	bne	40015c38 <CyU3PDmaChannelCreate+0xf0>
40015c08:	e3a00040 	mov	r0, #64	; 0x40
40015c0c:	eaffffd4 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015c10:	e1d600b0 	ldrh	r0, [r6]
40015c14:	e1d610ba 	ldrh	r1, [r6, #10]
40015c18:	e0400001 	sub	r0, r0, r1
40015c1c:	e1d610bc 	ldrh	r1, [r6, #12]
40015c20:	e0400001 	sub	r0, r0, r1
40015c24:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40015c28:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40015c2c:	0a000001 	beq	40015c38 <CyU3PDmaChannelCreate+0xf0>
40015c30:	e3a00040 	mov	r0, #64	; 0x40
40015c34:	eaffffca 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015c38:	e5d60010 	ldrb	r0, [r6, #16]
40015c3c:	e3500002 	cmp	r0, #2
40015c40:	ba000001 	blt	40015c4c <CyU3PDmaChannelCreate+0x104>
40015c44:	e3a00040 	mov	r0, #64	; 0x40
40015c48:	eaffffc5 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015c4c:	e3550004 	cmp	r5, #4
40015c50:	0a000011 	beq	40015c9c <CyU3PDmaChannelCreate+0x154>
40015c54:	e1d600b4 	ldrh	r0, [r6, #4]
40015c58:	e3a0103f 	mov	r1, #63	; 0x3f
40015c5c:	e0018440 	and	r8, r1, r0, asr #8
40015c60:	e1d600b4 	ldrh	r0, [r6, #4]
40015c64:	e20090ff 	and	r9, r0, #255	; 0xff
40015c68:	e1d600b4 	ldrh	r0, [r6, #4]
40015c6c:	ebfffd14 	bl	400150c4 <CyU3PDmaSocketIsValidProducer>
40015c70:	e3500000 	cmp	r0, #0
40015c74:	1a000001 	bne	40015c80 <CyU3PDmaChannelCreate+0x138>
40015c78:	e3a00040 	mov	r0, #64	; 0x40
40015c7c:	eaffffb8 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015c80:	e59f029c 	ldr	r0, [pc, #668]	; 40015f24 <CyU3PDmaChannelCreate+0x3dc>
40015c84:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015c88:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015c8c:	e3500000 	cmp	r0, #0
40015c90:	0a000007 	beq	40015cb4 <CyU3PDmaChannelCreate+0x16c>
40015c94:	e3a00040 	mov	r0, #64	; 0x40
40015c98:	eaffffb1 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015c9c:	e1d600b4 	ldrh	r0, [r6, #4]
40015ca0:	e59f1280 	ldr	r1, [pc, #640]	; 40015f28 <CyU3PDmaChannelCreate+0x3e0>
40015ca4:	e1500001 	cmp	r0, r1
40015ca8:	0a000001 	beq	40015cb4 <CyU3PDmaChannelCreate+0x16c>
40015cac:	e3a00040 	mov	r0, #64	; 0x40
40015cb0:	eaffffab 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015cb4:	e3550003 	cmp	r5, #3
40015cb8:	0a000011 	beq	40015d04 <CyU3PDmaChannelCreate+0x1bc>
40015cbc:	e1d600b6 	ldrh	r0, [r6, #6]
40015cc0:	e3a0103f 	mov	r1, #63	; 0x3f
40015cc4:	e0018440 	and	r8, r1, r0, asr #8
40015cc8:	e1d600b6 	ldrh	r0, [r6, #6]
40015ccc:	e20090ff 	and	r9, r0, #255	; 0xff
40015cd0:	e1d600b6 	ldrh	r0, [r6, #6]
40015cd4:	ebfffcc2 	bl	40014fe4 <CyU3PDmaSocketIsValidConsumer>
40015cd8:	e3500000 	cmp	r0, #0
40015cdc:	1a000001 	bne	40015ce8 <CyU3PDmaChannelCreate+0x1a0>
40015ce0:	e3a00040 	mov	r0, #64	; 0x40
40015ce4:	eaffff9e 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015ce8:	e59f0234 	ldr	r0, [pc, #564]	; 40015f24 <CyU3PDmaChannelCreate+0x3dc>
40015cec:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015cf0:	e7900109 	ldr	r0, [r0, r9, lsl #2]
40015cf4:	e3500000 	cmp	r0, #0
40015cf8:	0a000006 	beq	40015d18 <CyU3PDmaChannelCreate+0x1d0>
40015cfc:	e3a00040 	mov	r0, #64	; 0x40
40015d00:	eaffff97 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015d04:	e1d600b6 	ldrh	r0, [r6, #6]
40015d08:	e3500c3f 	cmp	r0, #16128	; 0x3f00
40015d0c:	0a000001 	beq	40015d18 <CyU3PDmaChannelCreate+0x1d0>
40015d10:	e3a00040 	mov	r0, #64	; 0x40
40015d14:	eaffff92 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015d18:	e1d600b8 	ldrh	r0, [r6, #8]
40015d1c:	e3500000 	cmp	r0, #0
40015d20:	0a000008 	beq	40015d48 <CyU3PDmaChannelCreate+0x200>
40015d24:	e1d600b8 	ldrh	r0, [r6, #8]
40015d28:	e1d610b2 	ldrh	r1, [r6, #2]
40015d2c:	e1500001 	cmp	r0, r1
40015d30:	aa000002 	bge	40015d40 <CyU3PDmaChannelCreate+0x1f8>
40015d34:	e1d600b2 	ldrh	r0, [r6, #2]
40015d38:	e350001f 	cmp	r0, #31
40015d3c:	da000001 	ble	40015d48 <CyU3PDmaChannelCreate+0x200>
40015d40:	e3a00040 	mov	r0, #64	; 0x40
40015d44:	eaffff86 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015d48:	e3550004 	cmp	r5, #4
40015d4c:	0a000007 	beq	40015d70 <CyU3PDmaChannelCreate+0x228>
40015d50:	e1d600b4 	ldrh	r0, [r6, #4]
40015d54:	e3a0103f 	mov	r1, #63	; 0x3f
40015d58:	e0018440 	and	r8, r1, r0, asr #8
40015d5c:	e1d600b4 	ldrh	r0, [r6, #4]
40015d60:	e20090ff 	and	r9, r0, #255	; 0xff
40015d64:	e59f01b8 	ldr	r0, [pc, #440]	; 40015f24 <CyU3PDmaChannelCreate+0x3dc>
40015d68:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015d6c:	e7804109 	str	r4, [r0, r9, lsl #2]
40015d70:	e3550003 	cmp	r5, #3
40015d74:	0a000007 	beq	40015d98 <CyU3PDmaChannelCreate+0x250>
40015d78:	e1d600b6 	ldrh	r0, [r6, #6]
40015d7c:	e3a0103f 	mov	r1, #63	; 0x3f
40015d80:	e0018440 	and	r8, r1, r0, asr #8
40015d84:	e1d600b6 	ldrh	r0, [r6, #6]
40015d88:	e20090ff 	and	r9, r0, #255	; 0xff
40015d8c:	e59f0190 	ldr	r0, [pc, #400]	; 40015f24 <CyU3PDmaChannelCreate+0x3dc>
40015d90:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40015d94:	e7804109 	str	r4, [r0, r9, lsl #2]
40015d98:	e1c450b4 	strh	r5, [r4, #4]
40015d9c:	e1d600b0 	ldrh	r0, [r6]
40015da0:	e1c400b6 	strh	r0, [r4, #6]
40015da4:	e1d600b2 	ldrh	r0, [r6, #2]
40015da8:	e1c400b8 	strh	r0, [r4, #8]
40015dac:	e1d600b8 	ldrh	r0, [r6, #8]
40015db0:	e1c400ba 	strh	r0, [r4, #10]
40015db4:	e1d600b4 	ldrh	r0, [r6, #4]
40015db8:	e1c401b0 	strh	r0, [r4, #16]
40015dbc:	e1d600b6 	ldrh	r0, [r6, #6]
40015dc0:	e1c401b2 	strh	r0, [r4, #18]
40015dc4:	e1d600ba 	ldrh	r0, [r6, #10]
40015dc8:	e1c402b2 	strh	r0, [r4, #34]	; 0x22
40015dcc:	e1d600bc 	ldrh	r0, [r6, #12]
40015dd0:	e1c402b4 	strh	r0, [r4, #36]	; 0x24
40015dd4:	e1d600be 	ldrh	r0, [r6, #14]
40015dd8:	e1c402b6 	strh	r0, [r4, #38]	; 0x26
40015ddc:	e5d60010 	ldrb	r0, [r6, #16]
40015de0:	e1c402b8 	strh	r0, [r4, #40]	; 0x28
40015de4:	e5960014 	ldr	r0, [r6, #20]
40015de8:	e5840030 	str	r0, [r4, #48]	; 0x30
40015dec:	e3a00000 	mov	r0, #0
40015df0:	e1c402ba 	strh	r0, [r4, #42]	; 0x2a
40015df4:	e1c402bc 	strh	r0, [r4, #44]	; 0x2c
40015df8:	e3a03038 	mov	r3, #56	; 0x38
40015dfc:	e3a02000 	mov	r2, #0
40015e00:	e1a01002 	mov	r1, r2
40015e04:	e284003c 	add	r0, r4, #60	; 0x3c
40015e08:	ebffd0ac 	bl	4000a0c0 <_txe_mutex_create>
40015e0c:	e3a02028 	mov	r2, #40	; 0x28
40015e10:	e3a01000 	mov	r1, #0
40015e14:	e2840074 	add	r0, r4, #116	; 0x74
40015e18:	ebffcfee 	bl	40009dd8 <_txe_event_flags_create>
40015e1c:	e5960018 	ldr	r0, [r6, #24]
40015e20:	e584009c 	str	r0, [r4, #156]	; 0x9c
40015e24:	e59f0100 	ldr	r0, [pc, #256]	; 40015f2c <CyU3PDmaChannelCreate+0x3e4>
40015e28:	e5900000 	ldr	r0, [r0]
40015e2c:	e5840038 	str	r0, [r4, #56]	; 0x38
40015e30:	e3550005 	cmp	r5, #5
40015e34:	308ff105 	addcc	pc, pc, r5, lsl #2
40015e38:	ea000011 	b	40015e84 <CyU3PDmaChannelCreate+0x33c>
40015e3c:	ea000003 	b	40015e50 <CyU3PDmaChannelCreate+0x308>
40015e40:	ea000004 	b	40015e58 <CyU3PDmaChannelCreate+0x310>
40015e44:	ea00000a 	b	40015e74 <CyU3PDmaChannelCreate+0x32c>
40015e48:	ea000006 	b	40015e68 <CyU3PDmaChannelCreate+0x320>
40015e4c:	ea000007 	b	40015e70 <CyU3PDmaChannelCreate+0x328>
40015e50:	e1a00000 	nop			; (mov r0, r0)
40015e54:	e1a00000 	nop			; (mov r0, r0)
40015e58:	e1a00004 	mov	r0, r4
40015e5c:	ebfffe7a 	bl	4001584c <CyU3PDmaChannelConfigure_TypeAuto>
40015e60:	e1a07000 	mov	r7, r0
40015e64:	ea000009 	b	40015e90 <CyU3PDmaChannelCreate+0x348>
40015e68:	e1a00000 	nop			; (mov r0, r0)
40015e6c:	e1a00000 	nop			; (mov r0, r0)
40015e70:	e1a00000 	nop			; (mov r0, r0)
40015e74:	e1a00004 	mov	r0, r4
40015e78:	ebfffe97 	bl	400158dc <CyU3PDmaChannelConfigure_TypeManual>
40015e7c:	e1a07000 	mov	r7, r0
40015e80:	ea000002 	b	40015e90 <CyU3PDmaChannelCreate+0x348>
40015e84:	e1a00000 	nop			; (mov r0, r0)
40015e88:	e3a07040 	mov	r7, #64	; 0x40
40015e8c:	e1a00000 	nop			; (mov r0, r0)
40015e90:	e1a00000 	nop			; (mov r0, r0)
40015e94:	e3570000 	cmp	r7, #0
40015e98:	1a000002 	bne	40015ea8 <CyU3PDmaChannelCreate+0x360>
40015e9c:	e3a00001 	mov	r0, #1
40015ea0:	e5840000 	str	r0, [r4]
40015ea4:	ea00001b 	b	40015f18 <CyU3PDmaChannelCreate+0x3d0>
40015ea8:	e284003c 	add	r0, r4, #60	; 0x3c
40015eac:	ebffd0e1 	bl	4000a238 <_txe_mutex_delete>
40015eb0:	e2840074 	add	r0, r4, #116	; 0x74
40015eb4:	ebffd017 	bl	40009f18 <_txe_event_flags_delete>
40015eb8:	e3550004 	cmp	r5, #4
40015ebc:	0a000008 	beq	40015ee4 <CyU3PDmaChannelCreate+0x39c>
40015ec0:	e1d600b4 	ldrh	r0, [r6, #4]
40015ec4:	e3a0103f 	mov	r1, #63	; 0x3f
40015ec8:	e0018440 	and	r8, r1, r0, asr #8
40015ecc:	e1d600b4 	ldrh	r0, [r6, #4]
40015ed0:	e20090ff 	and	r9, r0, #255	; 0xff
40015ed4:	e3a00000 	mov	r0, #0
40015ed8:	e59f1044 	ldr	r1, [pc, #68]	; 40015f24 <CyU3PDmaChannelCreate+0x3dc>
40015edc:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015ee0:	e7810109 	str	r0, [r1, r9, lsl #2]
40015ee4:	e3550003 	cmp	r5, #3
40015ee8:	0a000008 	beq	40015f10 <CyU3PDmaChannelCreate+0x3c8>
40015eec:	e1d600b6 	ldrh	r0, [r6, #6]
40015ef0:	e3a0103f 	mov	r1, #63	; 0x3f
40015ef4:	e0018440 	and	r8, r1, r0, asr #8
40015ef8:	e1d600b6 	ldrh	r0, [r6, #6]
40015efc:	e20090ff 	and	r9, r0, #255	; 0xff
40015f00:	e3a00000 	mov	r0, #0
40015f04:	e59f1018 	ldr	r1, [pc, #24]	; 40015f24 <CyU3PDmaChannelCreate+0x3dc>
40015f08:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40015f0c:	e7810109 	str	r0, [r1, r9, lsl #2]
40015f10:	e3a00000 	mov	r0, #0
40015f14:	e5840000 	str	r0, [r4]
40015f18:	e1a00007 	mov	r0, r7
40015f1c:	eaffff10 	b	40015b64 <CyU3PDmaChannelCreate+0x1c>
40015f20:	0000fff0 	.word	0x0000fff0
40015f24:	40030d00 	.word	0x40030d00
40015f28:	00003f01 	.word	0x00003f01
40015f2c:	40030c64 	.word	0x40030c64

Disassembly of section i.CyU3PDmaChannelDestroy:

40015f30 <CyU3PDmaChannelDestroy>:
40015f30:	e92d4070 	push	{r4, r5, r6, lr}
40015f34:	e1a04000 	mov	r4, r0
40015f38:	e3e01000 	mvn	r1, #0
40015f3c:	e1a00004 	mov	r0, r4
40015f40:	ebfffd5b 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
40015f44:	e1a05000 	mov	r5, r0
40015f48:	e3550000 	cmp	r5, #0
40015f4c:	0a000001 	beq	40015f58 <CyU3PDmaChannelDestroy+0x28>
40015f50:	e1a00005 	mov	r0, r5
40015f54:	e8bd8070 	pop	{r4, r5, r6, pc}
40015f58:	e1d400b4 	ldrh	r0, [r4, #4]
40015f5c:	e3500005 	cmp	r0, #5
40015f60:	308ff100 	addcc	pc, pc, r0, lsl #2
40015f64:	ea00000f 	b	40015fa8 <CyU3PDmaChannelDestroy+0x78>
40015f68:	ea000003 	b	40015f7c <CyU3PDmaChannelDestroy+0x4c>
40015f6c:	ea000004 	b	40015f84 <CyU3PDmaChannelDestroy+0x54>
40015f70:	ea000009 	b	40015f9c <CyU3PDmaChannelDestroy+0x6c>
40015f74:	ea000005 	b	40015f90 <CyU3PDmaChannelDestroy+0x60>
40015f78:	ea000006 	b	40015f98 <CyU3PDmaChannelDestroy+0x68>
40015f7c:	e1a00000 	nop			; (mov r0, r0)
40015f80:	e1a00000 	nop			; (mov r0, r0)
40015f84:	e1a00004 	mov	r0, r4
40015f88:	eb000014 	bl	40015fe0 <CyU3PDmaChannelDestroy_TypeAuto>
40015f8c:	ea00000a 	b	40015fbc <CyU3PDmaChannelDestroy+0x8c>
40015f90:	e1a00000 	nop			; (mov r0, r0)
40015f94:	e1a00000 	nop			; (mov r0, r0)
40015f98:	e1a00000 	nop			; (mov r0, r0)
40015f9c:	e1a00004 	mov	r0, r4
40015fa0:	eb000043 	bl	400160b4 <CyU3PDmaChannelDestroy_TypeManual>
40015fa4:	ea000004 	b	40015fbc <CyU3PDmaChannelDestroy+0x8c>
40015fa8:	e1a00000 	nop			; (mov r0, r0)
40015fac:	e284003c 	add	r0, r4, #60	; 0x3c
40015fb0:	ebffd0f5 	bl	4000a38c <_txe_mutex_put>
40015fb4:	e3a00040 	mov	r0, #64	; 0x40
40015fb8:	eaffffe5 	b	40015f54 <CyU3PDmaChannelDestroy+0x24>
40015fbc:	e1a00000 	nop			; (mov r0, r0)
40015fc0:	e3a00000 	mov	r0, #0
40015fc4:	e5840000 	str	r0, [r4]
40015fc8:	e284003c 	add	r0, r4, #60	; 0x3c
40015fcc:	ebffd099 	bl	4000a238 <_txe_mutex_delete>
40015fd0:	e2840074 	add	r0, r4, #116	; 0x74
40015fd4:	ebffcfcf 	bl	40009f18 <_txe_event_flags_delete>
40015fd8:	e3a00000 	mov	r0, #0
40015fdc:	eaffffdc 	b	40015f54 <CyU3PDmaChannelDestroy+0x24>

Disassembly of section i.CyU3PDmaChannelDestroy_TypeAuto:

40015fe0 <CyU3PDmaChannelDestroy_TypeAuto>:
40015fe0:	e92d4070 	push	{r4, r5, r6, lr}
40015fe4:	e24dd018 	sub	sp, sp, #24
40015fe8:	e1a04000 	mov	r4, r0
40015fec:	e1d401b0 	ldrh	r0, [r4, #16]
40015ff0:	ebfffbbb 	bl	40014ee4 <CyU3PDmaSocketDisable>
40015ff4:	e1d401b2 	ldrh	r0, [r4, #18]
40015ff8:	ebfffbb9 	bl	40014ee4 <CyU3PDmaSocketDisable>
40015ffc:	e1d401b0 	ldrh	r0, [r4, #16]
40016000:	e1a0100d 	mov	r1, sp
40016004:	ebfffbce 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016008:	e59f009c 	ldr	r0, [pc, #156]	; 400160ac <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
4001600c:	e58d0000 	str	r0, [sp]
40016010:	e1d401b0 	ldrh	r0, [r4, #16]
40016014:	e1a0100d 	mov	r1, sp
40016018:	ebfffc73 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001601c:	e1d401b0 	ldrh	r0, [r4, #16]
40016020:	e20050ff 	and	r5, r0, #255	; 0xff
40016024:	e1d401b0 	ldrh	r0, [r4, #16]
40016028:	e3a0103f 	mov	r1, #63	; 0x3f
4001602c:	e0016440 	and	r6, r1, r0, asr #8
40016030:	e3a00000 	mov	r0, #0
40016034:	e59f1074 	ldr	r1, [pc, #116]	; 400160b0 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
40016038:	e7911106 	ldr	r1, [r1, r6, lsl #2]
4001603c:	e7810105 	str	r0, [r1, r5, lsl #2]
40016040:	e1d401b2 	ldrh	r0, [r4, #18]
40016044:	e1a0100d 	mov	r1, sp
40016048:	ebfffbbd 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001604c:	e59f0058 	ldr	r0, [pc, #88]	; 400160ac <CyU3PDmaChannelDestroy_TypeAuto+0xcc>
40016050:	e58d0000 	str	r0, [sp]
40016054:	e1d401b2 	ldrh	r0, [r4, #18]
40016058:	e1a0100d 	mov	r1, sp
4001605c:	ebfffc62 	bl	400151ec <CyU3PDmaSocketSetConfig>
40016060:	e1d401b2 	ldrh	r0, [r4, #18]
40016064:	e20050ff 	and	r5, r0, #255	; 0xff
40016068:	e1d401b2 	ldrh	r0, [r4, #18]
4001606c:	e3a0103f 	mov	r1, #63	; 0x3f
40016070:	e0016440 	and	r6, r1, r0, asr #8
40016074:	e3a00000 	mov	r0, #0
40016078:	e59f1030 	ldr	r1, [pc, #48]	; 400160b0 <CyU3PDmaChannelDestroy_TypeAuto+0xd0>
4001607c:	e7911106 	ldr	r1, [r1, r6, lsl #2]
40016080:	e7810105 	str	r0, [r1, r5, lsl #2]
40016084:	e1d410b8 	ldrh	r1, [r4, #8]
40016088:	e1d400bc 	ldrh	r0, [r4, #12]
4001608c:	e3a03001 	mov	r3, #1
40016090:	e1a02003 	mov	r2, r3
40016094:	eb00316c 	bl	4002264c <CyU3PDmaDscrChainDestroy>
40016098:	e1d401b4 	ldrh	r0, [r4, #20]
4001609c:	eb0031de 	bl	4002281c <CyU3PDmaDscrPut>
400160a0:	e3a00000 	mov	r0, #0
400160a4:	e28dd018 	add	sp, sp, #24
400160a8:	e8bd8070 	pop	{r4, r5, r6, pc}
400160ac:	0000ffff 	.word	0x0000ffff
400160b0:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelDestroy_TypeManual:

400160b4 <CyU3PDmaChannelDestroy_TypeManual>:
400160b4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400160b8:	e24dd028 	sub	sp, sp, #40	; 0x28
400160bc:	e1a04000 	mov	r4, r0
400160c0:	e1d400b4 	ldrh	r0, [r4, #4]
400160c4:	e3500004 	cmp	r0, #4
400160c8:	0a000012 	beq	40016118 <CyU3PDmaChannelDestroy_TypeManual+0x64>
400160cc:	e1d401b0 	ldrh	r0, [r4, #16]
400160d0:	ebfffb83 	bl	40014ee4 <CyU3PDmaSocketDisable>
400160d4:	e1d401b0 	ldrh	r0, [r4, #16]
400160d8:	e1a0100d 	mov	r1, sp
400160dc:	ebfffb98 	bl	40014f44 <CyU3PDmaSocketGetConfig>
400160e0:	e59f0178 	ldr	r0, [pc, #376]	; 40016260 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
400160e4:	e58d0000 	str	r0, [sp]
400160e8:	e1d401b0 	ldrh	r0, [r4, #16]
400160ec:	e1a0100d 	mov	r1, sp
400160f0:	ebfffc3d 	bl	400151ec <CyU3PDmaSocketSetConfig>
400160f4:	e1d401b0 	ldrh	r0, [r4, #16]
400160f8:	e20070ff 	and	r7, r0, #255	; 0xff
400160fc:	e1d401b0 	ldrh	r0, [r4, #16]
40016100:	e3a0103f 	mov	r1, #63	; 0x3f
40016104:	e0018440 	and	r8, r1, r0, asr #8
40016108:	e3a00000 	mov	r0, #0
4001610c:	e59f1150 	ldr	r1, [pc, #336]	; 40016264 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40016110:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40016114:	e7810107 	str	r0, [r1, r7, lsl #2]
40016118:	e1d400b4 	ldrh	r0, [r4, #4]
4001611c:	e3500003 	cmp	r0, #3
40016120:	0a000012 	beq	40016170 <CyU3PDmaChannelDestroy_TypeManual+0xbc>
40016124:	e1d401b2 	ldrh	r0, [r4, #18]
40016128:	ebfffb6d 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001612c:	e1d401b2 	ldrh	r0, [r4, #18]
40016130:	e1a0100d 	mov	r1, sp
40016134:	ebfffb82 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016138:	e59f0120 	ldr	r0, [pc, #288]	; 40016260 <CyU3PDmaChannelDestroy_TypeManual+0x1ac>
4001613c:	e58d0000 	str	r0, [sp]
40016140:	e1d401b2 	ldrh	r0, [r4, #18]
40016144:	e1a0100d 	mov	r1, sp
40016148:	ebfffc27 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001614c:	e1d401b2 	ldrh	r0, [r4, #18]
40016150:	e20070ff 	and	r7, r0, #255	; 0xff
40016154:	e1d401b2 	ldrh	r0, [r4, #18]
40016158:	e3a0103f 	mov	r1, #63	; 0x3f
4001615c:	e0018440 	and	r8, r1, r0, asr #8
40016160:	e3a00000 	mov	r0, #0
40016164:	e59f10f8 	ldr	r1, [pc, #248]	; 40016264 <CyU3PDmaChannelDestroy_TypeManual+0x1b0>
40016168:	e7911108 	ldr	r1, [r1, r8, lsl #2]
4001616c:	e7810107 	str	r0, [r1, r7, lsl #2]
40016170:	e1d400b8 	ldrh	r0, [r4, #8]
40016174:	e3500000 	cmp	r0, #0
40016178:	0a000033 	beq	4001624c <CyU3PDmaChannelDestroy_TypeManual+0x198>
4001617c:	e1d400b4 	ldrh	r0, [r4, #4]
40016180:	e3500004 	cmp	r0, #4
40016184:	1a000014 	bne	400161dc <CyU3PDmaChannelDestroy_TypeManual+0x128>
40016188:	e1d450be 	ldrh	r5, [r4, #14]
4001618c:	e3a06000 	mov	r6, #0
40016190:	ea00000d 	b	400161cc <CyU3PDmaChannelDestroy_TypeManual+0x118>
40016194:	e28d1018 	add	r1, sp, #24
40016198:	e1a00005 	mov	r0, r5
4001619c:	eb0031c5 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400161a0:	e59d1018 	ldr	r1, [sp, #24]
400161a4:	e1d422b6 	ldrh	r2, [r4, #38]	; 0x26
400161a8:	e0410002 	sub	r0, r1, r2
400161ac:	ebffb750 	bl	40003ef4 <CyU3PDmaBufferFree>
400161b0:	e1a00005 	mov	r0, r5
400161b4:	eb003198 	bl	4002281c <CyU3PDmaDscrPut>
400161b8:	e59d0020 	ldr	r0, [sp, #32]
400161bc:	e1a05800 	lsl	r5, r0, #16
400161c0:	e1a05825 	lsr	r5, r5, #16
400161c4:	e2860001 	add	r0, r6, #1
400161c8:	e3c06801 	bic	r6, r0, #65536	; 0x10000
400161cc:	e1d400b8 	ldrh	r0, [r4, #8]
400161d0:	e1500006 	cmp	r0, r6
400161d4:	caffffee 	bgt	40016194 <CyU3PDmaChannelDestroy_TypeManual+0xe0>
400161d8:	ea000013 	b	4001622c <CyU3PDmaChannelDestroy_TypeManual+0x178>
400161dc:	e1d450bc 	ldrh	r5, [r4, #12]
400161e0:	e3a06000 	mov	r6, #0
400161e4:	ea00000d 	b	40016220 <CyU3PDmaChannelDestroy_TypeManual+0x16c>
400161e8:	e28d1018 	add	r1, sp, #24
400161ec:	e1a00005 	mov	r0, r5
400161f0:	eb0031b0 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400161f4:	e59d1018 	ldr	r1, [sp, #24]
400161f8:	e1d422b2 	ldrh	r2, [r4, #34]	; 0x22
400161fc:	e0410002 	sub	r0, r1, r2
40016200:	ebffb73b 	bl	40003ef4 <CyU3PDmaBufferFree>
40016204:	e1a00005 	mov	r0, r5
40016208:	eb003183 	bl	4002281c <CyU3PDmaDscrPut>
4001620c:	e59d0020 	ldr	r0, [sp, #32]
40016210:	e1a05800 	lsl	r5, r0, #16
40016214:	e1a05825 	lsr	r5, r5, #16
40016218:	e2860001 	add	r0, r6, #1
4001621c:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40016220:	e1d400b8 	ldrh	r0, [r4, #8]
40016224:	e1500006 	cmp	r0, r6
40016228:	caffffee 	bgt	400161e8 <CyU3PDmaChannelDestroy_TypeManual+0x134>
4001622c:	e1d400b4 	ldrh	r0, [r4, #4]
40016230:	e3500002 	cmp	r0, #2
40016234:	1a000004 	bne	4001624c <CyU3PDmaChannelDestroy_TypeManual+0x198>
40016238:	e1d410b8 	ldrh	r1, [r4, #8]
4001623c:	e1d400be 	ldrh	r0, [r4, #14]
40016240:	e3a03000 	mov	r3, #0
40016244:	e1a02003 	mov	r2, r3
40016248:	eb0030ff 	bl	4002264c <CyU3PDmaDscrChainDestroy>
4001624c:	e1d401b4 	ldrh	r0, [r4, #20]
40016250:	eb003171 	bl	4002281c <CyU3PDmaDscrPut>
40016254:	e3a00000 	mov	r0, #0
40016258:	e28dd028 	add	sp, sp, #40	; 0x28
4001625c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016260:	0000ffff 	.word	0x0000ffff
40016264:	40030d00 	.word	0x40030d00

Disassembly of section i.CyU3PDmaChannelGetBuffer:

40016268 <CyU3PDmaChannelGetBuffer>:
40016268:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001626c:	e24dd030 	sub	sp, sp, #48	; 0x30
40016270:	e1a04000 	mov	r4, r0
40016274:	e1a05001 	mov	r5, r1
40016278:	e1a06002 	mov	r6, r2
4001627c:	e3550000 	cmp	r5, #0
40016280:	1a000002 	bne	40016290 <CyU3PDmaChannelGetBuffer+0x28>
40016284:	e3a00041 	mov	r0, #65	; 0x41
40016288:	e28dd030 	add	sp, sp, #48	; 0x30
4001628c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40016290:	e1a01006 	mov	r1, r6
40016294:	e1a00004 	mov	r0, r4
40016298:	ebfffc85 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
4001629c:	e1a08000 	mov	r8, r0
400162a0:	e3580000 	cmp	r8, #0
400162a4:	0a000001 	beq	400162b0 <CyU3PDmaChannelGetBuffer+0x48>
400162a8:	e1a00008 	mov	r0, r8
400162ac:	eafffff5 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
400162b0:	e5940000 	ldr	r0, [r4]
400162b4:	e3500002 	cmp	r0, #2
400162b8:	0a000003 	beq	400162cc <CyU3PDmaChannelGetBuffer+0x64>
400162bc:	e5940000 	ldr	r0, [r4]
400162c0:	e3500006 	cmp	r0, #6
400162c4:	0a000000 	beq	400162cc <CyU3PDmaChannelGetBuffer+0x64>
400162c8:	e3a08042 	mov	r8, #66	; 0x42
400162cc:	e5940000 	ldr	r0, [r4]
400162d0:	e3500005 	cmp	r0, #5
400162d4:	1a000000 	bne	400162dc <CyU3PDmaChannelGetBuffer+0x74>
400162d8:	e3a08049 	mov	r8, #73	; 0x49
400162dc:	e5940000 	ldr	r0, [r4]
400162e0:	e3500007 	cmp	r0, #7
400162e4:	1a000000 	bne	400162ec <CyU3PDmaChannelGetBuffer+0x84>
400162e8:	e3a08048 	mov	r8, #72	; 0x48
400162ec:	e3580000 	cmp	r8, #0
400162f0:	0a000003 	beq	40016304 <CyU3PDmaChannelGetBuffer+0x9c>
400162f4:	e284003c 	add	r0, r4, #60	; 0x3c
400162f8:	ebffd023 	bl	4000a38c <_txe_mutex_put>
400162fc:	e1a00008 	mov	r0, r8
40016300:	eaffffe0 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
40016304:	e1d400b4 	ldrh	r0, [r4, #4]
40016308:	e20070ff 	and	r7, r0, #255	; 0xff
4001630c:	e3570002 	cmp	r7, #2
40016310:	0a000001 	beq	4001631c <CyU3PDmaChannelGetBuffer+0xb4>
40016314:	e3570003 	cmp	r7, #3
40016318:	1a00003e 	bne	40016418 <CyU3PDmaChannelGetBuffer+0x1b0>
4001631c:	e3a02002 	mov	r2, #2
40016320:	e3e01008 	mvn	r1, #8
40016324:	e2840074 	add	r0, r4, #116	; 0x74
40016328:	ebffcf4a 	bl	4000a058 <_txe_event_flags_set>
4001632c:	e1d401b6 	ldrh	r0, [r4, #22]
40016330:	e28d101c 	add	r1, sp, #28
40016334:	eb00315f 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40016338:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001633c:	e3100008 	tst	r0, #8
40016340:	1a000022 	bne	400163d0 <CyU3PDmaChannelGetBuffer+0x168>
40016344:	e284003c 	add	r0, r4, #60	; 0x3c
40016348:	ebffd00f 	bl	4000a38c <_txe_mutex_put>
4001634c:	e58d6000 	str	r6, [sp]
40016350:	e28d302c 	add	r3, sp, #44	; 0x2c
40016354:	e3a02000 	mov	r2, #0
40016358:	e3a01068 	mov	r1, #104	; 0x68
4001635c:	e2840074 	add	r0, r4, #116	; 0x74
40016360:	ebffcf0c 	bl	40009f98 <_txe_event_flags_get>
40016364:	e1a08000 	mov	r8, r0
40016368:	e3580000 	cmp	r8, #0
4001636c:	0a000001 	beq	40016378 <CyU3PDmaChannelGetBuffer+0x110>
40016370:	e3a00045 	mov	r0, #69	; 0x45
40016374:	eaffffc3 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
40016378:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001637c:	e3100040 	tst	r0, #64	; 0x40
40016380:	0a000001 	beq	4001638c <CyU3PDmaChannelGetBuffer+0x124>
40016384:	e3a00049 	mov	r0, #73	; 0x49
40016388:	eaffffbe 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
4001638c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016390:	e3100020 	tst	r0, #32
40016394:	0a000001 	beq	400163a0 <CyU3PDmaChannelGetBuffer+0x138>
40016398:	e3a00048 	mov	r0, #72	; 0x48
4001639c:	eaffffb9 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
400163a0:	e1a01006 	mov	r1, r6
400163a4:	e1a00004 	mov	r0, r4
400163a8:	ebfffc41 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
400163ac:	e1a08000 	mov	r8, r0
400163b0:	e3580000 	cmp	r8, #0
400163b4:	0a000001 	beq	400163c0 <CyU3PDmaChannelGetBuffer+0x158>
400163b8:	e1a00008 	mov	r0, r8
400163bc:	eaffffb1 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
400163c0:	e1d401b6 	ldrh	r0, [r4, #22]
400163c4:	e28d101c 	add	r1, sp, #28
400163c8:	eb00313a 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400163cc:	ea000003 	b	400163e0 <CyU3PDmaChannelGetBuffer+0x178>
400163d0:	e5940038 	ldr	r0, [r4, #56]	; 0x38
400163d4:	e3500000 	cmp	r0, #0
400163d8:	0a000000 	beq	400163e0 <CyU3PDmaChannelGetBuffer+0x178>
400163dc:	ebffd1d6 	bl	4000ab3c <_txe_thread_relinquish>
400163e0:	e59d001c 	ldr	r0, [sp, #28]
400163e4:	e5850000 	str	r0, [r5]
400163e8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
400163ec:	e59f11a4 	ldr	r1, [pc, #420]	; 40016598 <CyU3PDmaChannelGetBuffer+0x330>
400163f0:	e0010820 	and	r0, r1, r0, lsr #16
400163f4:	e1c500b4 	strh	r0, [r5, #4]
400163f8:	e241100f 	sub	r1, r1, #15
400163fc:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016400:	e0000001 	and	r0, r0, r1
40016404:	e1c500b6 	strh	r0, [r5, #6]
40016408:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001640c:	e200000f 	and	r0, r0, #15
40016410:	e1c500b8 	strh	r0, [r5, #8]
40016414:	ea00005b 	b	40016588 <CyU3PDmaChannelGetBuffer+0x320>
40016418:	e3570004 	cmp	r7, #4
4001641c:	1a000036 	bne	400164fc <CyU3PDmaChannelGetBuffer+0x294>
40016420:	e3a02002 	mov	r2, #2
40016424:	e3e01010 	mvn	r1, #16
40016428:	e2840074 	add	r0, r4, #116	; 0x74
4001642c:	ebffcf09 	bl	4000a058 <_txe_event_flags_set>
40016430:	e1d401b8 	ldrh	r0, [r4, #24]
40016434:	e28d101c 	add	r1, sp, #28
40016438:	eb00311e 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001643c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016440:	e3100008 	tst	r0, #8
40016444:	0a000021 	beq	400164d0 <CyU3PDmaChannelGetBuffer+0x268>
40016448:	e284003c 	add	r0, r4, #60	; 0x3c
4001644c:	ebffcfce 	bl	4000a38c <_txe_mutex_put>
40016450:	e58d6000 	str	r6, [sp]
40016454:	e28d302c 	add	r3, sp, #44	; 0x2c
40016458:	e3a02000 	mov	r2, #0
4001645c:	e3a01070 	mov	r1, #112	; 0x70
40016460:	e2840074 	add	r0, r4, #116	; 0x74
40016464:	ebffcecb 	bl	40009f98 <_txe_event_flags_get>
40016468:	e1a08000 	mov	r8, r0
4001646c:	e3580000 	cmp	r8, #0
40016470:	0a000001 	beq	4001647c <CyU3PDmaChannelGetBuffer+0x214>
40016474:	e3a00045 	mov	r0, #69	; 0x45
40016478:	eaffff82 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
4001647c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016480:	e3100040 	tst	r0, #64	; 0x40
40016484:	0a000001 	beq	40016490 <CyU3PDmaChannelGetBuffer+0x228>
40016488:	e3a00049 	mov	r0, #73	; 0x49
4001648c:	eaffff7d 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
40016490:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40016494:	e3100020 	tst	r0, #32
40016498:	0a000001 	beq	400164a4 <CyU3PDmaChannelGetBuffer+0x23c>
4001649c:	e3a00048 	mov	r0, #72	; 0x48
400164a0:	eaffff78 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
400164a4:	e1a01006 	mov	r1, r6
400164a8:	e1a00004 	mov	r0, r4
400164ac:	ebfffc00 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
400164b0:	e1a08000 	mov	r8, r0
400164b4:	e3580000 	cmp	r8, #0
400164b8:	0a000001 	beq	400164c4 <CyU3PDmaChannelGetBuffer+0x25c>
400164bc:	e1a00008 	mov	r0, r8
400164c0:	eaffff70 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
400164c4:	e1d401b8 	ldrh	r0, [r4, #24]
400164c8:	e28d101c 	add	r1, sp, #28
400164cc:	eb0030f9 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400164d0:	e59d001c 	ldr	r0, [sp, #28]
400164d4:	e1d412b6 	ldrh	r1, [r4, #38]	; 0x26
400164d8:	e0400001 	sub	r0, r0, r1
400164dc:	e5850000 	str	r0, [r5]
400164e0:	e1d402b6 	ldrh	r0, [r4, #38]	; 0x26
400164e4:	e1c500b4 	strh	r0, [r5, #4]
400164e8:	e1d400b6 	ldrh	r0, [r4, #6]
400164ec:	e1c500b6 	strh	r0, [r5, #6]
400164f0:	e3a00000 	mov	r0, #0
400164f4:	e1c500b8 	strh	r0, [r5, #8]
400164f8:	ea000022 	b	40016588 <CyU3PDmaChannelGetBuffer+0x320>
400164fc:	e1d401b2 	ldrh	r0, [r4, #18]
40016500:	e28d1004 	add	r1, sp, #4
40016504:	ebfffa8e 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016508:	e59d1004 	ldr	r1, [sp, #4]
4001650c:	e1a00801 	lsl	r0, r1, #16
40016510:	e1a00820 	lsr	r0, r0, #16
40016514:	e28d101c 	add	r1, sp, #28
40016518:	eb0030e6 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001651c:	e59d0010 	ldr	r0, [sp, #16]
40016520:	e3100702 	tst	r0, #524288	; 0x80000
40016524:	0a000016 	beq	40016584 <CyU3PDmaChannelGetBuffer+0x31c>
40016528:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001652c:	e3100008 	tst	r0, #8
40016530:	0a000013 	beq	40016584 <CyU3PDmaChannelGetBuffer+0x31c>
40016534:	e59d001c 	ldr	r0, [sp, #28]
40016538:	e5850000 	str	r0, [r5]
4001653c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016540:	e59f1050 	ldr	r1, [pc, #80]	; 40016598 <CyU3PDmaChannelGetBuffer+0x330>
40016544:	e0010820 	and	r0, r1, r0, lsr #16
40016548:	e1c500b4 	strh	r0, [r5, #4]
4001654c:	e241100f 	sub	r1, r1, #15
40016550:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016554:	e0000001 	and	r0, r0, r1
40016558:	e1c500b6 	strh	r0, [r5, #6]
4001655c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
40016560:	e200000f 	and	r0, r0, #15
40016564:	e1c500b8 	strh	r0, [r5, #8]
40016568:	e5940038 	ldr	r0, [r4, #56]	; 0x38
4001656c:	e3500000 	cmp	r0, #0
40016570:	0a000004 	beq	40016588 <CyU3PDmaChannelGetBuffer+0x320>
40016574:	e1d510b6 	ldrh	r1, [r5, #6]
40016578:	e5950000 	ldr	r0, [r5]
4001657c:	ebffefa1 	bl	40012408 <CyU3PSysFlushDRegion>
40016580:	ea000000 	b	40016588 <CyU3PDmaChannelGetBuffer+0x320>
40016584:	e3a08047 	mov	r8, #71	; 0x47
40016588:	e284003c 	add	r0, r4, #60	; 0x3c
4001658c:	ebffcf7e 	bl	4000a38c <_txe_mutex_put>
40016590:	e1a00008 	mov	r0, r8
40016594:	eaffff3b 	b	40016288 <CyU3PDmaChannelGetBuffer+0x20>
40016598:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaChannelReset:

4001659c <CyU3PDmaChannelReset>:
4001659c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
400165a0:	e1a04000 	mov	r4, r0
400165a4:	e3e01000 	mvn	r1, #0
400165a8:	e1a00004 	mov	r0, r4
400165ac:	ebfffbc0 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
400165b0:	e1a06000 	mov	r6, r0
400165b4:	e3560000 	cmp	r6, #0
400165b8:	0a000001 	beq	400165c4 <CyU3PDmaChannelReset+0x28>
400165bc:	e1a00006 	mov	r0, r6
400165c0:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400165c4:	e1d400b4 	ldrh	r0, [r4, #4]
400165c8:	e3500005 	cmp	r0, #5
400165cc:	308ff100 	addcc	pc, pc, r0, lsl #2
400165d0:	ea00000f 	b	40016614 <CyU3PDmaChannelReset+0x78>
400165d4:	ea000003 	b	400165e8 <CyU3PDmaChannelReset+0x4c>
400165d8:	ea000004 	b	400165f0 <CyU3PDmaChannelReset+0x54>
400165dc:	ea000009 	b	40016608 <CyU3PDmaChannelReset+0x6c>
400165e0:	ea000005 	b	400165fc <CyU3PDmaChannelReset+0x60>
400165e4:	ea000006 	b	40016604 <CyU3PDmaChannelReset+0x68>
400165e8:	e1a00000 	nop			; (mov r0, r0)
400165ec:	e1a00000 	nop			; (mov r0, r0)
400165f0:	e1a00004 	mov	r0, r4
400165f4:	eb000030 	bl	400166bc <CyU3PDmaChannelReset_TypeAuto>
400165f8:	ea000007 	b	4001661c <CyU3PDmaChannelReset+0x80>
400165fc:	e1a00000 	nop			; (mov r0, r0)
40016600:	e1a00000 	nop			; (mov r0, r0)
40016604:	e1a00000 	nop			; (mov r0, r0)
40016608:	e1a00004 	mov	r0, r4
4001660c:	eb000045 	bl	40016728 <CyU3PDmaChannelReset_TypeManual>
40016610:	ea000001 	b	4001661c <CyU3PDmaChannelReset+0x80>
40016614:	e1a00000 	nop			; (mov r0, r0)
40016618:	e1a00000 	nop			; (mov r0, r0)
4001661c:	e1a00000 	nop			; (mov r0, r0)
40016620:	ebffc90f 	bl	40008a64 <_tx_thread_identify>
40016624:	e1a05000 	mov	r5, r0
40016628:	e3550000 	cmp	r5, #0
4001662c:	0a000003 	beq	40016640 <CyU3PDmaChannelReset+0xa4>
40016630:	e1a0200d 	mov	r2, sp
40016634:	e3a01002 	mov	r1, #2
40016638:	e1a00005 	mov	r0, r5
4001663c:	ebffd116 	bl	4000aa9c <_txe_thread_priority_change>
40016640:	e3a02002 	mov	r2, #2
40016644:	e3e01007 	mvn	r1, #7
40016648:	e2840074 	add	r0, r4, #116	; 0x74
4001664c:	ebffce81 	bl	4000a058 <_txe_event_flags_set>
40016650:	e3a02000 	mov	r2, #0
40016654:	e3a01020 	mov	r1, #32
40016658:	e2840074 	add	r0, r4, #116	; 0x74
4001665c:	ebffce7d 	bl	4000a058 <_txe_event_flags_set>
40016660:	e3a00001 	mov	r0, #1
40016664:	e5840000 	str	r0, [r4]
40016668:	e284003c 	add	r0, r4, #60	; 0x3c
4001666c:	ebffcf46 	bl	4000a38c <_txe_mutex_put>
40016670:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
40016674:	e3500000 	cmp	r0, #0
40016678:	0a000007 	beq	4001669c <CyU3PDmaChannelReset+0x100>
4001667c:	e5940030 	ldr	r0, [r4, #48]	; 0x30
40016680:	e3100020 	tst	r0, #32
40016684:	0a000004 	beq	4001669c <CyU3PDmaChannelReset+0x100>
40016688:	e3a02000 	mov	r2, #0
4001668c:	e3a01020 	mov	r1, #32
40016690:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
40016694:	e1a00004 	mov	r0, r4
40016698:	e12fff33 	blx	r3
4001669c:	e3550000 	cmp	r5, #0
400166a0:	0a000003 	beq	400166b4 <CyU3PDmaChannelReset+0x118>
400166a4:	e1a0200d 	mov	r2, sp
400166a8:	e1a00005 	mov	r0, r5
400166ac:	e59d1000 	ldr	r1, [sp]
400166b0:	ebffd0f9 	bl	4000aa9c <_txe_thread_priority_change>
400166b4:	e3a00000 	mov	r0, #0
400166b8:	eaffffc0 	b	400165c0 <CyU3PDmaChannelReset+0x24>

Disassembly of section i.CyU3PDmaChannelReset_TypeAuto:

400166bc <CyU3PDmaChannelReset_TypeAuto>:
400166bc:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
400166c0:	e1a04000 	mov	r4, r0
400166c4:	e1d450b8 	ldrh	r5, [r4, #8]
400166c8:	e1d460bc 	ldrh	r6, [r4, #12]
400166cc:	e1a00004 	mov	r0, r4
400166d0:	eb000337 	bl	400173b4 <CyU3PDmaConfigureSockets_TypeAuto>
400166d4:	ea00000c 	b	4001670c <CyU3PDmaChannelReset_TypeAuto+0x50>
400166d8:	e1a0100d 	mov	r1, sp
400166dc:	e1a00006 	mov	r0, r6
400166e0:	eb003074 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400166e4:	e59d000c 	ldr	r0, [sp, #12]
400166e8:	e59f1034 	ldr	r1, [pc, #52]	; 40016724 <CyU3PDmaChannelReset_TypeAuto+0x68>
400166ec:	e0000001 	and	r0, r0, r1
400166f0:	e58d000c 	str	r0, [sp, #12]
400166f4:	e1a0100d 	mov	r1, sp
400166f8:	e1a00006 	mov	r0, r6
400166fc:	eb003088 	bl	40022924 <CyU3PDmaDscrSetConfig>
40016700:	e59d0008 	ldr	r0, [sp, #8]
40016704:	e1a06800 	lsl	r6, r0, #16
40016708:	e1a06826 	lsr	r6, r6, #16
4001670c:	e1b00005 	movs	r0, r5
40016710:	e2451001 	sub	r1, r5, #1
40016714:	e1a05801 	lsl	r5, r1, #16
40016718:	e1a05825 	lsr	r5, r5, #16
4001671c:	1affffed 	bne	400166d8 <CyU3PDmaChannelReset_TypeAuto+0x1c>
40016720:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
40016724:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelReset_TypeManual:

40016728 <CyU3PDmaChannelReset_TypeManual>:
40016728:	e92d407f 	push	{r0, r1, r2, r3, r4, r5, r6, lr}
4001672c:	e1a04000 	mov	r4, r0
40016730:	e1d450b8 	ldrh	r5, [r4, #8]
40016734:	e1a00004 	mov	r0, r4
40016738:	eb00035d 	bl	400174b4 <CyU3PDmaConfigureSockets_TypeManual>
4001673c:	e1d400b4 	ldrh	r0, [r4, #4]
40016740:	e3500004 	cmp	r0, #4
40016744:	0a000017 	beq	400167a8 <CyU3PDmaChannelReset_TypeManual+0x80>
40016748:	e1d460bc 	ldrh	r6, [r4, #12]
4001674c:	ea00000c 	b	40016784 <CyU3PDmaChannelReset_TypeManual+0x5c>
40016750:	e1a0100d 	mov	r1, sp
40016754:	e1a00006 	mov	r0, r6
40016758:	eb003056 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001675c:	e59d000c 	ldr	r0, [sp, #12]
40016760:	e59f10b4 	ldr	r1, [pc, #180]	; 4001681c <CyU3PDmaChannelReset_TypeManual+0xf4>
40016764:	e0000001 	and	r0, r0, r1
40016768:	e58d000c 	str	r0, [sp, #12]
4001676c:	e1a0100d 	mov	r1, sp
40016770:	e1a00006 	mov	r0, r6
40016774:	eb00306a 	bl	40022924 <CyU3PDmaDscrSetConfig>
40016778:	e59d0008 	ldr	r0, [sp, #8]
4001677c:	e1a06800 	lsl	r6, r0, #16
40016780:	e1a06826 	lsr	r6, r6, #16
40016784:	e1b00005 	movs	r0, r5
40016788:	e2451001 	sub	r1, r5, #1
4001678c:	e1a05801 	lsl	r5, r1, #16
40016790:	e1a05825 	lsr	r5, r5, #16
40016794:	1affffed 	bne	40016750 <CyU3PDmaChannelReset_TypeManual+0x28>
40016798:	e1d400bc 	ldrh	r0, [r4, #12]
4001679c:	e1c401b6 	strh	r0, [r4, #22]
400167a0:	e1c401ba 	strh	r0, [r4, #26]
400167a4:	e1c401be 	strh	r0, [r4, #30]
400167a8:	e1d400b4 	ldrh	r0, [r4, #4]
400167ac:	e3500003 	cmp	r0, #3
400167b0:	0a000018 	beq	40016818 <CyU3PDmaChannelReset_TypeManual+0xf0>
400167b4:	e1d460be 	ldrh	r6, [r4, #14]
400167b8:	e1d450b8 	ldrh	r5, [r4, #8]
400167bc:	ea00000c 	b	400167f4 <CyU3PDmaChannelReset_TypeManual+0xcc>
400167c0:	e1a0100d 	mov	r1, sp
400167c4:	e1a00006 	mov	r0, r6
400167c8:	eb00303a 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400167cc:	e59d000c 	ldr	r0, [sp, #12]
400167d0:	e59f1044 	ldr	r1, [pc, #68]	; 4001681c <CyU3PDmaChannelReset_TypeManual+0xf4>
400167d4:	e0000001 	and	r0, r0, r1
400167d8:	e58d000c 	str	r0, [sp, #12]
400167dc:	e1a0100d 	mov	r1, sp
400167e0:	e1a00006 	mov	r0, r6
400167e4:	eb00304e 	bl	40022924 <CyU3PDmaDscrSetConfig>
400167e8:	e59d0008 	ldr	r0, [sp, #8]
400167ec:	e1a06800 	lsl	r6, r0, #16
400167f0:	e1a06826 	lsr	r6, r6, #16
400167f4:	e1b00005 	movs	r0, r5
400167f8:	e2451001 	sub	r1, r5, #1
400167fc:	e1a05801 	lsl	r5, r1, #16
40016800:	e1a05825 	lsr	r5, r5, #16
40016804:	1affffed 	bne	400167c0 <CyU3PDmaChannelReset_TypeManual+0x98>
40016808:	e1d400be 	ldrh	r0, [r4, #14]
4001680c:	e1c401b8 	strh	r0, [r4, #24]
40016810:	e1c401bc 	strh	r0, [r4, #28]
40016814:	e1c402b0 	strh	r0, [r4, #32]
40016818:	e8bd807f 	pop	{r0, r1, r2, r3, r4, r5, r6, pc}
4001681c:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetXfer:

40016820 <CyU3PDmaChannelSetXfer>:
40016820:	e92d4070 	push	{r4, r5, r6, lr}
40016824:	e1a04000 	mov	r4, r0
40016828:	e1a05001 	mov	r5, r1
4001682c:	e3e01000 	mvn	r1, #0
40016830:	e1a00004 	mov	r0, r4
40016834:	ebfffb1e 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
40016838:	e1a06000 	mov	r6, r0
4001683c:	e3560000 	cmp	r6, #0
40016840:	0a000001 	beq	4001684c <CyU3PDmaChannelSetXfer+0x2c>
40016844:	e1a00006 	mov	r0, r6
40016848:	e8bd8070 	pop	{r4, r5, r6, pc}
4001684c:	e5940000 	ldr	r0, [r4]
40016850:	e3500001 	cmp	r0, #1
40016854:	0a000000 	beq	4001685c <CyU3PDmaChannelSetXfer+0x3c>
40016858:	e3a06043 	mov	r6, #67	; 0x43
4001685c:	e1d400b8 	ldrh	r0, [r4, #8]
40016860:	e3500000 	cmp	r0, #0
40016864:	1a000000 	bne	4001686c <CyU3PDmaChannelSetXfer+0x4c>
40016868:	e3a06046 	mov	r6, #70	; 0x46
4001686c:	e3560000 	cmp	r6, #0
40016870:	1a00001d 	bne	400168ec <CyU3PDmaChannelSetXfer+0xcc>
40016874:	e3a02002 	mov	r2, #2
40016878:	e3e01027 	mvn	r1, #39	; 0x27
4001687c:	e2840074 	add	r0, r4, #116	; 0x74
40016880:	ebffcdf4 	bl	4000a058 <_txe_event_flags_set>
40016884:	e5845034 	str	r5, [r4, #52]	; 0x34
40016888:	e1d400b4 	ldrh	r0, [r4, #4]
4001688c:	e3500005 	cmp	r0, #5
40016890:	308ff100 	addcc	pc, pc, r0, lsl #2
40016894:	ea000011 	b	400168e0 <CyU3PDmaChannelSetXfer+0xc0>
40016898:	ea000003 	b	400168ac <CyU3PDmaChannelSetXfer+0x8c>
4001689c:	ea000004 	b	400168b4 <CyU3PDmaChannelSetXfer+0x94>
400168a0:	ea00000a 	b	400168d0 <CyU3PDmaChannelSetXfer+0xb0>
400168a4:	ea000006 	b	400168c4 <CyU3PDmaChannelSetXfer+0xa4>
400168a8:	ea000007 	b	400168cc <CyU3PDmaChannelSetXfer+0xac>
400168ac:	e1a00000 	nop			; (mov r0, r0)
400168b0:	e1a00000 	nop			; (mov r0, r0)
400168b4:	e1a01005 	mov	r1, r5
400168b8:	e1a00004 	mov	r0, r4
400168bc:	eb00000e 	bl	400168fc <CyU3PDmaChannelSetXfer_TypeAuto>
400168c0:	ea000008 	b	400168e8 <CyU3PDmaChannelSetXfer+0xc8>
400168c4:	e1a00000 	nop			; (mov r0, r0)
400168c8:	e1a00000 	nop			; (mov r0, r0)
400168cc:	e1a00000 	nop			; (mov r0, r0)
400168d0:	e1a01005 	mov	r1, r5
400168d4:	e1a00004 	mov	r0, r4
400168d8:	eb00006f 	bl	40016a9c <CyU3PDmaChannelSetXfer_TypeManual>
400168dc:	ea000001 	b	400168e8 <CyU3PDmaChannelSetXfer+0xc8>
400168e0:	e1a00000 	nop			; (mov r0, r0)
400168e4:	e1a00000 	nop			; (mov r0, r0)
400168e8:	e1a00000 	nop			; (mov r0, r0)
400168ec:	e284003c 	add	r0, r4, #60	; 0x3c
400168f0:	ebffcea5 	bl	4000a38c <_txe_mutex_put>
400168f4:	e1a00006 	mov	r0, r6
400168f8:	eaffffd2 	b	40016848 <CyU3PDmaChannelSetXfer+0x28>

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeAuto:

400168fc <CyU3PDmaChannelSetXfer_TypeAuto>:
400168fc:	e92d4030 	push	{r4, r5, lr}
40016900:	e24dd01c 	sub	sp, sp, #28
40016904:	e1a04000 	mov	r4, r0
40016908:	e1a05001 	mov	r5, r1
4001690c:	e1d401b0 	ldrh	r0, [r4, #16]
40016910:	ebfff973 	bl	40014ee4 <CyU3PDmaSocketDisable>
40016914:	e1d401b2 	ldrh	r0, [r4, #18]
40016918:	ebfff971 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001691c:	e3a00002 	mov	r0, #2
40016920:	e5840000 	str	r0, [r4]
40016924:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016928:	e1d401b0 	ldrh	r0, [r4, #16]
4001692c:	ebfffa87 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
40016930:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016934:	e1d401b2 	ldrh	r0, [r4, #18]
40016938:	ebfffa84 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
4001693c:	e1d401b0 	ldrh	r0, [r4, #16]
40016940:	e28d1004 	add	r1, sp, #4
40016944:	ebfff97e 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016948:	e58d5008 	str	r5, [sp, #8]
4001694c:	e3a00000 	mov	r0, #0
40016950:	e58d000c 	str	r0, [sp, #12]
40016954:	e3550000 	cmp	r5, #0
40016958:	1a000003 	bne	4001696c <CyU3PDmaChannelSetXfer_TypeAuto+0x70>
4001695c:	e59d0010 	ldr	r0, [sp, #16]
40016960:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016964:	e58d0010 	str	r0, [sp, #16]
40016968:	ea000002 	b	40016978 <CyU3PDmaChannelSetXfer_TypeAuto+0x7c>
4001696c:	e59d0010 	ldr	r0, [sp, #16]
40016970:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016974:	e58d0010 	str	r0, [sp, #16]
40016978:	e59d0010 	ldr	r0, [sp, #16]
4001697c:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016980:	e58d0010 	str	r0, [sp, #16]
40016984:	e59d0010 	ldr	r0, [sp, #16]
40016988:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001698c:	e58d0010 	str	r0, [sp, #16]
40016990:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016994:	e3500001 	cmp	r0, #1
40016998:	1a000003 	bne	400169ac <CyU3PDmaChannelSetXfer_TypeAuto+0xb0>
4001699c:	e59d0010 	ldr	r0, [sp, #16]
400169a0:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
400169a4:	e58d0010 	str	r0, [sp, #16]
400169a8:	ea000002 	b	400169b8 <CyU3PDmaChannelSetXfer_TypeAuto+0xbc>
400169ac:	e59d0010 	ldr	r0, [sp, #16]
400169b0:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
400169b4:	e58d0010 	str	r0, [sp, #16]
400169b8:	e1d400ba 	ldrh	r0, [r4, #10]
400169bc:	e3500000 	cmp	r0, #0
400169c0:	0a000006 	beq	400169e0 <CyU3PDmaChannelSetXfer_TypeAuto+0xe4>
400169c4:	e1d400b8 	ldrh	r0, [r4, #8]
400169c8:	e3800b01 	orr	r0, r0, #1024	; 0x400
400169cc:	e1d410ba 	ldrh	r1, [r4, #10]
400169d0:	e1800281 	orr	r0, r0, r1, lsl #5
400169d4:	e59d1010 	ldr	r1, [sp, #16]
400169d8:	e1800001 	orr	r0, r0, r1
400169dc:	e58d0010 	str	r0, [sp, #16]
400169e0:	e3e00000 	mvn	r0, #0
400169e4:	e58d0014 	str	r0, [sp, #20]
400169e8:	e1d401b0 	ldrh	r0, [r4, #16]
400169ec:	e28d1004 	add	r1, sp, #4
400169f0:	ebfff9fd 	bl	400151ec <CyU3PDmaSocketSetConfig>
400169f4:	e1d401b2 	ldrh	r0, [r4, #18]
400169f8:	e28d1004 	add	r1, sp, #4
400169fc:	ebfff950 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016a00:	e58d5008 	str	r5, [sp, #8]
40016a04:	e3a00000 	mov	r0, #0
40016a08:	e58d000c 	str	r0, [sp, #12]
40016a0c:	e3550000 	cmp	r5, #0
40016a10:	1a000006 	bne	40016a30 <CyU3PDmaChannelSetXfer_TypeAuto+0x134>
40016a14:	e59d0018 	ldr	r0, [sp, #24]
40016a18:	e3c00080 	bic	r0, r0, #128	; 0x80
40016a1c:	e58d0018 	str	r0, [sp, #24]
40016a20:	e59d0010 	ldr	r0, [sp, #16]
40016a24:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016a28:	e58d0010 	str	r0, [sp, #16]
40016a2c:	ea000005 	b	40016a48 <CyU3PDmaChannelSetXfer_TypeAuto+0x14c>
40016a30:	e59d0018 	ldr	r0, [sp, #24]
40016a34:	e3800080 	orr	r0, r0, #128	; 0x80
40016a38:	e58d0018 	str	r0, [sp, #24]
40016a3c:	e59d0010 	ldr	r0, [sp, #16]
40016a40:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016a44:	e58d0010 	str	r0, [sp, #16]
40016a48:	e59d0010 	ldr	r0, [sp, #16]
40016a4c:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016a50:	e58d0010 	str	r0, [sp, #16]
40016a54:	e59d0010 	ldr	r0, [sp, #16]
40016a58:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016a5c:	e58d0010 	str	r0, [sp, #16]
40016a60:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016a64:	e3500001 	cmp	r0, #1
40016a68:	1a000003 	bne	40016a7c <CyU3PDmaChannelSetXfer_TypeAuto+0x180>
40016a6c:	e59d0010 	ldr	r0, [sp, #16]
40016a70:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016a74:	e58d0010 	str	r0, [sp, #16]
40016a78:	ea000002 	b	40016a88 <CyU3PDmaChannelSetXfer_TypeAuto+0x18c>
40016a7c:	e59d0010 	ldr	r0, [sp, #16]
40016a80:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016a84:	e58d0010 	str	r0, [sp, #16]
40016a88:	e1d401b2 	ldrh	r0, [r4, #18]
40016a8c:	e28d1004 	add	r1, sp, #4
40016a90:	ebfff9d5 	bl	400151ec <CyU3PDmaSocketSetConfig>
40016a94:	e28dd01c 	add	sp, sp, #28
40016a98:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetXfer_TypeManual:

40016a9c <CyU3PDmaChannelSetXfer_TypeManual>:
40016a9c:	e92d4030 	push	{r4, r5, lr}
40016aa0:	e24dd01c 	sub	sp, sp, #28
40016aa4:	e1a04000 	mov	r4, r0
40016aa8:	e1a05001 	mov	r5, r1
40016aac:	e3a00002 	mov	r0, #2
40016ab0:	e5840000 	str	r0, [r4]
40016ab4:	e1d400b4 	ldrh	r0, [r4, #4]
40016ab8:	e3500004 	cmp	r0, #4
40016abc:	0a00003d 	beq	40016bb8 <CyU3PDmaChannelSetXfer_TypeManual+0x11c>
40016ac0:	e1d401b0 	ldrh	r0, [r4, #16]
40016ac4:	ebfff906 	bl	40014ee4 <CyU3PDmaSocketDisable>
40016ac8:	e1d412ba 	ldrh	r1, [r4, #42]	; 0x2a
40016acc:	e1d401b0 	ldrh	r0, [r4, #16]
40016ad0:	ebfffa1e 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
40016ad4:	e1d401b0 	ldrh	r0, [r4, #16]
40016ad8:	e28d1004 	add	r1, sp, #4
40016adc:	ebfff918 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016ae0:	e58d5008 	str	r5, [sp, #8]
40016ae4:	e3a00000 	mov	r0, #0
40016ae8:	e58d000c 	str	r0, [sp, #12]
40016aec:	e59d0010 	ldr	r0, [sp, #16]
40016af0:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016af4:	e58d0010 	str	r0, [sp, #16]
40016af8:	e59d0010 	ldr	r0, [sp, #16]
40016afc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016b00:	e58d0010 	str	r0, [sp, #16]
40016b04:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016b08:	e3500001 	cmp	r0, #1
40016b0c:	1a000003 	bne	40016b20 <CyU3PDmaChannelSetXfer_TypeManual+0x84>
40016b10:	e59d0010 	ldr	r0, [sp, #16]
40016b14:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016b18:	e58d0010 	str	r0, [sp, #16]
40016b1c:	ea000002 	b	40016b2c <CyU3PDmaChannelSetXfer_TypeManual+0x90>
40016b20:	e59d0010 	ldr	r0, [sp, #16]
40016b24:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016b28:	e58d0010 	str	r0, [sp, #16]
40016b2c:	e1d400ba 	ldrh	r0, [r4, #10]
40016b30:	e3500000 	cmp	r0, #0
40016b34:	0a000006 	beq	40016b54 <CyU3PDmaChannelSetXfer_TypeManual+0xb8>
40016b38:	e1d400b8 	ldrh	r0, [r4, #8]
40016b3c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40016b40:	e1d410ba 	ldrh	r1, [r4, #10]
40016b44:	e1800281 	orr	r0, r0, r1, lsl #5
40016b48:	e59d1010 	ldr	r1, [sp, #16]
40016b4c:	e1800001 	orr	r0, r0, r1
40016b50:	e58d0010 	str	r0, [sp, #16]
40016b54:	e3e00000 	mvn	r0, #0
40016b58:	e58d0014 	str	r0, [sp, #20]
40016b5c:	e3550000 	cmp	r5, #0
40016b60:	0a000002 	beq	40016b70 <CyU3PDmaChannelSetXfer_TypeManual+0xd4>
40016b64:	e1d400b4 	ldrh	r0, [r4, #4]
40016b68:	e3500002 	cmp	r0, #2
40016b6c:	1a000008 	bne	40016b94 <CyU3PDmaChannelSetXfer_TypeManual+0xf8>
40016b70:	e3a00000 	mov	r0, #0
40016b74:	e58d0008 	str	r0, [sp, #8]
40016b78:	e59d0010 	ldr	r0, [sp, #16]
40016b7c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016b80:	e58d0010 	str	r0, [sp, #16]
40016b84:	e59d0018 	ldr	r0, [sp, #24]
40016b88:	e3c00080 	bic	r0, r0, #128	; 0x80
40016b8c:	e58d0018 	str	r0, [sp, #24]
40016b90:	ea000005 	b	40016bac <CyU3PDmaChannelSetXfer_TypeManual+0x110>
40016b94:	e59d0010 	ldr	r0, [sp, #16]
40016b98:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016b9c:	e58d0010 	str	r0, [sp, #16]
40016ba0:	e59d0018 	ldr	r0, [sp, #24]
40016ba4:	e3800080 	orr	r0, r0, #128	; 0x80
40016ba8:	e58d0018 	str	r0, [sp, #24]
40016bac:	e1d401b0 	ldrh	r0, [r4, #16]
40016bb0:	e28d1004 	add	r1, sp, #4
40016bb4:	ebfff98c 	bl	400151ec <CyU3PDmaSocketSetConfig>
40016bb8:	e1d400b4 	ldrh	r0, [r4, #4]
40016bbc:	e3500003 	cmp	r0, #3
40016bc0:	0a00002e 	beq	40016c80 <CyU3PDmaChannelSetXfer_TypeManual+0x1e4>
40016bc4:	e1d401b2 	ldrh	r0, [r4, #18]
40016bc8:	ebfff8c5 	bl	40014ee4 <CyU3PDmaSocketDisable>
40016bcc:	e1d412bc 	ldrh	r1, [r4, #44]	; 0x2c
40016bd0:	e1d401b2 	ldrh	r0, [r4, #18]
40016bd4:	ebfff9dd 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
40016bd8:	e1d401b2 	ldrh	r0, [r4, #18]
40016bdc:	e28d1004 	add	r1, sp, #4
40016be0:	ebfff8d7 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016be4:	e58d5008 	str	r5, [sp, #8]
40016be8:	e3a00000 	mov	r0, #0
40016bec:	e58d000c 	str	r0, [sp, #12]
40016bf0:	e59d0010 	ldr	r0, [sp, #16]
40016bf4:	e3c00201 	bic	r0, r0, #268435456	; 0x10000000
40016bf8:	e58d0010 	str	r0, [sp, #16]
40016bfc:	e59d0010 	ldr	r0, [sp, #16]
40016c00:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016c04:	e58d0010 	str	r0, [sp, #16]
40016c08:	e1d402b8 	ldrh	r0, [r4, #40]	; 0x28
40016c0c:	e3500001 	cmp	r0, #1
40016c10:	1a000003 	bne	40016c24 <CyU3PDmaChannelSetXfer_TypeManual+0x188>
40016c14:	e59d0010 	ldr	r0, [sp, #16]
40016c18:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016c1c:	e58d0010 	str	r0, [sp, #16]
40016c20:	ea000002 	b	40016c30 <CyU3PDmaChannelSetXfer_TypeManual+0x194>
40016c24:	e59d0010 	ldr	r0, [sp, #16]
40016c28:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40016c2c:	e58d0010 	str	r0, [sp, #16]
40016c30:	e3e00000 	mvn	r0, #0
40016c34:	e58d0014 	str	r0, [sp, #20]
40016c38:	e3550000 	cmp	r5, #0
40016c3c:	1a000006 	bne	40016c5c <CyU3PDmaChannelSetXfer_TypeManual+0x1c0>
40016c40:	e59d0010 	ldr	r0, [sp, #16]
40016c44:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40016c48:	e58d0010 	str	r0, [sp, #16]
40016c4c:	e59d0018 	ldr	r0, [sp, #24]
40016c50:	e3c00080 	bic	r0, r0, #128	; 0x80
40016c54:	e58d0018 	str	r0, [sp, #24]
40016c58:	ea000005 	b	40016c74 <CyU3PDmaChannelSetXfer_TypeManual+0x1d8>
40016c5c:	e59d0010 	ldr	r0, [sp, #16]
40016c60:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016c64:	e58d0010 	str	r0, [sp, #16]
40016c68:	e59d0018 	ldr	r0, [sp, #24]
40016c6c:	e3800080 	orr	r0, r0, #128	; 0x80
40016c70:	e58d0018 	str	r0, [sp, #24]
40016c74:	e1d401b2 	ldrh	r0, [r4, #18]
40016c78:	e28d1004 	add	r1, sp, #4
40016c7c:	ebfff95a 	bl	400151ec <CyU3PDmaSocketSetConfig>
40016c80:	e28dd01c 	add	sp, sp, #28
40016c84:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaChannelSetupRecvBuffer:

40016c88 <CyU3PDmaChannelSetupRecvBuffer>:
40016c88:	e92d4070 	push	{r4, r5, r6, lr}
40016c8c:	e24dd028 	sub	sp, sp, #40	; 0x28
40016c90:	e1a04000 	mov	r4, r0
40016c94:	e1a05001 	mov	r5, r1
40016c98:	e3550000 	cmp	r5, #0
40016c9c:	1a000002 	bne	40016cac <CyU3PDmaChannelSetupRecvBuffer+0x24>
40016ca0:	e3a00041 	mov	r0, #65	; 0x41
40016ca4:	e28dd028 	add	sp, sp, #40	; 0x28
40016ca8:	e8bd8070 	pop	{r4, r5, r6, pc}
40016cac:	e5950000 	ldr	r0, [r5]
40016cb0:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016cb4:	3a000005 	bcc	40016cd0 <CyU3PDmaChannelSetupRecvBuffer+0x48>
40016cb8:	e5950000 	ldr	r0, [r5]
40016cbc:	e1d510b6 	ldrh	r1, [r5, #6]
40016cc0:	e0800001 	add	r0, r0, r1
40016cc4:	e59f11d4 	ldr	r1, [pc, #468]	; 40016ea0 <CyU3PDmaChannelSetupRecvBuffer+0x218>
40016cc8:	e1500001 	cmp	r0, r1
40016ccc:	3a000001 	bcc	40016cd8 <CyU3PDmaChannelSetupRecvBuffer+0x50>
40016cd0:	e3a00040 	mov	r0, #64	; 0x40
40016cd4:	eafffff2 	b	40016ca4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016cd8:	e1d500b6 	ldrh	r0, [r5, #6]
40016cdc:	e59f11c0 	ldr	r1, [pc, #448]	; 40016ea4 <CyU3PDmaChannelSetupRecvBuffer+0x21c>
40016ce0:	e1500001 	cmp	r0, r1
40016ce4:	da000001 	ble	40016cf0 <CyU3PDmaChannelSetupRecvBuffer+0x68>
40016ce8:	e3a00040 	mov	r0, #64	; 0x40
40016cec:	eaffffec 	b	40016ca4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016cf0:	e1d500b6 	ldrh	r0, [r5, #6]
40016cf4:	e3500000 	cmp	r0, #0
40016cf8:	0a000002 	beq	40016d08 <CyU3PDmaChannelSetupRecvBuffer+0x80>
40016cfc:	e1d500b6 	ldrh	r0, [r5, #6]
40016d00:	e310000f 	tst	r0, #15
40016d04:	0a000001 	beq	40016d10 <CyU3PDmaChannelSetupRecvBuffer+0x88>
40016d08:	e3a00040 	mov	r0, #64	; 0x40
40016d0c:	eaffffe4 	b	40016ca4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d10:	e3e01000 	mvn	r1, #0
40016d14:	e1a00004 	mov	r0, r4
40016d18:	ebfff9e5 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
40016d1c:	e1a06000 	mov	r6, r0
40016d20:	e3560000 	cmp	r6, #0
40016d24:	0a000001 	beq	40016d30 <CyU3PDmaChannelSetupRecvBuffer+0xa8>
40016d28:	e1a00006 	mov	r0, r6
40016d2c:	eaffffdc 	b	40016ca4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d30:	e1d400b4 	ldrh	r0, [r4, #4]
40016d34:	e3500004 	cmp	r0, #4
40016d38:	1a000000 	bne	40016d40 <CyU3PDmaChannelSetupRecvBuffer+0xb8>
40016d3c:	e3a06046 	mov	r6, #70	; 0x46
40016d40:	e5940000 	ldr	r0, [r4]
40016d44:	e3500001 	cmp	r0, #1
40016d48:	0a000000 	beq	40016d50 <CyU3PDmaChannelSetupRecvBuffer+0xc8>
40016d4c:	e3a06043 	mov	r6, #67	; 0x43
40016d50:	e3560000 	cmp	r6, #0
40016d54:	0a000003 	beq	40016d68 <CyU3PDmaChannelSetupRecvBuffer+0xe0>
40016d58:	e284003c 	add	r0, r4, #60	; 0x3c
40016d5c:	ebffcd8a 	bl	4000a38c <_txe_mutex_put>
40016d60:	e1a00006 	mov	r0, r6
40016d64:	eaffffce 	b	40016ca4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016d68:	e1d401b0 	ldrh	r0, [r4, #16]
40016d6c:	ebfff85c 	bl	40014ee4 <CyU3PDmaSocketDisable>
40016d70:	e1d401b0 	ldrh	r0, [r4, #16]
40016d74:	e3a01000 	mov	r1, #0
40016d78:	ebfff974 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
40016d7c:	e3a02002 	mov	r2, #2
40016d80:	e3e01027 	mvn	r1, #39	; 0x27
40016d84:	e2840074 	add	r0, r4, #116	; 0x74
40016d88:	ebffccb2 	bl	4000a058 <_txe_event_flags_set>
40016d8c:	e3a00004 	mov	r0, #4
40016d90:	e5840000 	str	r0, [r4]
40016d94:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016d98:	e3500000 	cmp	r0, #0
40016d9c:	0a000002 	beq	40016dac <CyU3PDmaChannelSetupRecvBuffer+0x124>
40016da0:	e1d510b6 	ldrh	r1, [r5, #6]
40016da4:	e5950000 	ldr	r0, [r5]
40016da8:	ebffed96 	bl	40012408 <CyU3PSysFlushDRegion>
40016dac:	e1d401b0 	ldrh	r0, [r4, #16]
40016db0:	e1a0100d 	mov	r1, sp
40016db4:	ebfff862 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016db8:	e59d0000 	ldr	r0, [sp]
40016dbc:	e1c401b6 	strh	r0, [r4, #22]
40016dc0:	e1d401b4 	ldrh	r0, [r4, #20]
40016dc4:	e28d1018 	add	r1, sp, #24
40016dc8:	eb002eba 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40016dcc:	e5950000 	ldr	r0, [r5]
40016dd0:	e58d0018 	str	r0, [sp, #24]
40016dd4:	e1d401b0 	ldrh	r0, [r4, #16]
40016dd8:	e3a01103 	mov	r1, #-1073741824	; 0xc0000000
40016ddc:	e1810800 	orr	r0, r1, r0, lsl #16
40016de0:	e58d001c 	str	r0, [sp, #28]
40016de4:	e59d001c 	ldr	r0, [sp, #28]
40016de8:	e3800c3f 	orr	r0, r0, #16128	; 0x3f00
40016dec:	e58d001c 	str	r0, [sp, #28]
40016df0:	e1d401b6 	ldrh	r0, [r4, #22]
40016df4:	e1e01741 	mvn	r1, r1, asr #14
40016df8:	e1810800 	orr	r0, r1, r0, lsl #16
40016dfc:	e58d0020 	str	r0, [sp, #32]
40016e00:	e1d500b6 	ldrh	r0, [r5, #6]
40016e04:	e241100f 	sub	r1, r1, #15
40016e08:	e0000001 	and	r0, r0, r1
40016e0c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40016e10:	e1d401b4 	ldrh	r0, [r4, #20]
40016e14:	e28d1018 	add	r1, sp, #24
40016e18:	eb002ec1 	bl	40022924 <CyU3PDmaDscrSetConfig>
40016e1c:	e59d000c 	ldr	r0, [sp, #12]
40016e20:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40016e24:	e58d000c 	str	r0, [sp, #12]
40016e28:	e59d000c 	ldr	r0, [sp, #12]
40016e2c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40016e30:	e58d000c 	str	r0, [sp, #12]
40016e34:	e59d000c 	ldr	r0, [sp, #12]
40016e38:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40016e3c:	e58d000c 	str	r0, [sp, #12]
40016e40:	e59d000c 	ldr	r0, [sp, #12]
40016e44:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40016e48:	e58d000c 	str	r0, [sp, #12]
40016e4c:	e3a00001 	mov	r0, #1
40016e50:	e58d0004 	str	r0, [sp, #4]
40016e54:	e3a00000 	mov	r0, #0
40016e58:	e58d0008 	str	r0, [sp, #8]
40016e5c:	e3e00000 	mvn	r0, #0
40016e60:	e58d0010 	str	r0, [sp, #16]
40016e64:	e59d0014 	ldr	r0, [sp, #20]
40016e68:	e3800001 	orr	r0, r0, #1
40016e6c:	e58d0014 	str	r0, [sp, #20]
40016e70:	e59d0014 	ldr	r0, [sp, #20]
40016e74:	e3c00080 	bic	r0, r0, #128	; 0x80
40016e78:	e58d0014 	str	r0, [sp, #20]
40016e7c:	e1d401b4 	ldrh	r0, [r4, #20]
40016e80:	e58d0000 	str	r0, [sp]
40016e84:	e1d401b0 	ldrh	r0, [r4, #16]
40016e88:	e1a0100d 	mov	r1, sp
40016e8c:	ebfff8d6 	bl	400151ec <CyU3PDmaSocketSetConfig>
40016e90:	e284003c 	add	r0, r4, #60	; 0x3c
40016e94:	ebffcd3c 	bl	4000a38c <_txe_mutex_put>
40016e98:	e3a00000 	mov	r0, #0
40016e9c:	eaffff80 	b	40016ca4 <CyU3PDmaChannelSetupRecvBuffer+0x1c>
40016ea0:	40080000 	.word	0x40080000
40016ea4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelSetupSendBuffer:

40016ea8 <CyU3PDmaChannelSetupSendBuffer>:
40016ea8:	e92d40f0 	push	{r4, r5, r6, r7, lr}
40016eac:	e24dd02c 	sub	sp, sp, #44	; 0x2c
40016eb0:	e1a04000 	mov	r4, r0
40016eb4:	e1a05001 	mov	r5, r1
40016eb8:	e3550000 	cmp	r5, #0
40016ebc:	1a000002 	bne	40016ecc <CyU3PDmaChannelSetupSendBuffer+0x24>
40016ec0:	e3a00041 	mov	r0, #65	; 0x41
40016ec4:	e28dd02c 	add	sp, sp, #44	; 0x2c
40016ec8:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40016ecc:	e5950000 	ldr	r0, [r5]
40016ed0:	e3500101 	cmp	r0, #1073741824	; 0x40000000
40016ed4:	3a000005 	bcc	40016ef0 <CyU3PDmaChannelSetupSendBuffer+0x48>
40016ed8:	e5950000 	ldr	r0, [r5]
40016edc:	e1d510b4 	ldrh	r1, [r5, #4]
40016ee0:	e0800001 	add	r0, r0, r1
40016ee4:	e59f11ec 	ldr	r1, [pc, #492]	; 400170d8 <CyU3PDmaChannelSetupSendBuffer+0x230>
40016ee8:	e1500001 	cmp	r0, r1
40016eec:	3a000001 	bcc	40016ef8 <CyU3PDmaChannelSetupSendBuffer+0x50>
40016ef0:	e3a00040 	mov	r0, #64	; 0x40
40016ef4:	eafffff2 	b	40016ec4 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016ef8:	e1d500b4 	ldrh	r0, [r5, #4]
40016efc:	e59f11d8 	ldr	r1, [pc, #472]	; 400170dc <CyU3PDmaChannelSetupSendBuffer+0x234>
40016f00:	e1500001 	cmp	r0, r1
40016f04:	da000001 	ble	40016f10 <CyU3PDmaChannelSetupSendBuffer+0x68>
40016f08:	e3a00040 	mov	r0, #64	; 0x40
40016f0c:	eaffffec 	b	40016ec4 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f10:	e3e01000 	mvn	r1, #0
40016f14:	e1a00004 	mov	r0, r4
40016f18:	ebfff965 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
40016f1c:	e1a07000 	mov	r7, r0
40016f20:	e3570000 	cmp	r7, #0
40016f24:	0a000001 	beq	40016f30 <CyU3PDmaChannelSetupSendBuffer+0x88>
40016f28:	e1a00007 	mov	r0, r7
40016f2c:	eaffffe4 	b	40016ec4 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f30:	e1d400b4 	ldrh	r0, [r4, #4]
40016f34:	e3500003 	cmp	r0, #3
40016f38:	1a000000 	bne	40016f40 <CyU3PDmaChannelSetupSendBuffer+0x98>
40016f3c:	e3a07046 	mov	r7, #70	; 0x46
40016f40:	e5940000 	ldr	r0, [r4]
40016f44:	e3500001 	cmp	r0, #1
40016f48:	0a000000 	beq	40016f50 <CyU3PDmaChannelSetupSendBuffer+0xa8>
40016f4c:	e3a07043 	mov	r7, #67	; 0x43
40016f50:	e3570000 	cmp	r7, #0
40016f54:	0a000003 	beq	40016f68 <CyU3PDmaChannelSetupSendBuffer+0xc0>
40016f58:	e284003c 	add	r0, r4, #60	; 0x3c
40016f5c:	ebffcd0a 	bl	4000a38c <_txe_mutex_put>
40016f60:	e1a00007 	mov	r0, r7
40016f64:	eaffffd6 	b	40016ec4 <CyU3PDmaChannelSetupSendBuffer+0x1c>
40016f68:	e5940038 	ldr	r0, [r4, #56]	; 0x38
40016f6c:	e3500000 	cmp	r0, #0
40016f70:	0a000005 	beq	40016f8c <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016f74:	e1d500b4 	ldrh	r0, [r5, #4]
40016f78:	e3500000 	cmp	r0, #0
40016f7c:	0a000002 	beq	40016f8c <CyU3PDmaChannelSetupSendBuffer+0xe4>
40016f80:	e1d510b4 	ldrh	r1, [r5, #4]
40016f84:	e5950000 	ldr	r0, [r5]
40016f88:	ebffed10 	bl	400123d0 <CyU3PSysCleanDRegion>
40016f8c:	e1d401b2 	ldrh	r0, [r4, #18]
40016f90:	ebfff7d3 	bl	40014ee4 <CyU3PDmaSocketDisable>
40016f94:	e1d401b2 	ldrh	r0, [r4, #18]
40016f98:	e3a01000 	mov	r1, #0
40016f9c:	ebfff8eb 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
40016fa0:	e3a02002 	mov	r2, #2
40016fa4:	e3e01027 	mvn	r1, #39	; 0x27
40016fa8:	e2840074 	add	r0, r4, #116	; 0x74
40016fac:	ebffcc29 	bl	4000a058 <_txe_event_flags_set>
40016fb0:	e3a00003 	mov	r0, #3
40016fb4:	e5840000 	str	r0, [r4]
40016fb8:	e1d401b2 	ldrh	r0, [r4, #18]
40016fbc:	e28d1004 	add	r1, sp, #4
40016fc0:	ebfff7df 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40016fc4:	e59d0004 	ldr	r0, [sp, #4]
40016fc8:	e1c401b8 	strh	r0, [r4, #24]
40016fcc:	e1d401b4 	ldrh	r0, [r4, #20]
40016fd0:	e28d101c 	add	r1, sp, #28
40016fd4:	eb002e37 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40016fd8:	e5950000 	ldr	r0, [r5]
40016fdc:	e58d001c 	str	r0, [sp, #28]
40016fe0:	e1d401b2 	ldrh	r0, [r4, #18]
40016fe4:	e3800903 	orr	r0, r0, #49152	; 0xc000
40016fe8:	e58d0020 	str	r0, [sp, #32]
40016fec:	e59d0020 	ldr	r0, [sp, #32]
40016ff0:	e380043f 	orr	r0, r0, #1056964608	; 0x3f000000
40016ff4:	e3800801 	orr	r0, r0, #65536	; 0x10000
40016ff8:	e58d0020 	str	r0, [sp, #32]
40016ffc:	e1d401b8 	ldrh	r0, [r4, #24]
40017000:	e2400801 	sub	r0, r0, #65536	; 0x10000
40017004:	e58d0024 	str	r0, [sp, #36]	; 0x24
40017008:	e1d500b4 	ldrh	r0, [r5, #4]
4001700c:	e280000f 	add	r0, r0, #15
40017010:	e59f10c4 	ldr	r1, [pc, #196]	; 400170dc <CyU3PDmaChannelSetupSendBuffer+0x234>
40017014:	e0006001 	and	r6, r0, r1
40017018:	e1d500b4 	ldrh	r0, [r5, #4]
4001701c:	e1860800 	orr	r0, r6, r0, lsl #16
40017020:	e3800008 	orr	r0, r0, #8
40017024:	e58d0028 	str	r0, [sp, #40]	; 0x28
40017028:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001702c:	e1d510b8 	ldrh	r1, [r5, #8]
40017030:	e201100e 	and	r1, r1, #14
40017034:	e1800001 	orr	r0, r0, r1
40017038:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001703c:	e1d401b4 	ldrh	r0, [r4, #20]
40017040:	e28d101c 	add	r1, sp, #28
40017044:	eb002e36 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017048:	e59d0010 	ldr	r0, [sp, #16]
4001704c:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40017050:	e58d0010 	str	r0, [sp, #16]
40017054:	e59d0010 	ldr	r0, [sp, #16]
40017058:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001705c:	e58d0010 	str	r0, [sp, #16]
40017060:	e59d0010 	ldr	r0, [sp, #16]
40017064:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40017068:	e58d0010 	str	r0, [sp, #16]
4001706c:	e59d0010 	ldr	r0, [sp, #16]
40017070:	e3c00b01 	bic	r0, r0, #1024	; 0x400
40017074:	e58d0010 	str	r0, [sp, #16]
40017078:	e59d0010 	ldr	r0, [sp, #16]
4001707c:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40017080:	e58d0010 	str	r0, [sp, #16]
40017084:	e1d500b4 	ldrh	r0, [r5, #4]
40017088:	e58d0008 	str	r0, [sp, #8]
4001708c:	e3a00000 	mov	r0, #0
40017090:	e58d000c 	str	r0, [sp, #12]
40017094:	e3e00000 	mvn	r0, #0
40017098:	e58d0014 	str	r0, [sp, #20]
4001709c:	e59d0018 	ldr	r0, [sp, #24]
400170a0:	e3800002 	orr	r0, r0, #2
400170a4:	e58d0018 	str	r0, [sp, #24]
400170a8:	e59d0018 	ldr	r0, [sp, #24]
400170ac:	e3c00080 	bic	r0, r0, #128	; 0x80
400170b0:	e58d0018 	str	r0, [sp, #24]
400170b4:	e1d401b4 	ldrh	r0, [r4, #20]
400170b8:	e58d0004 	str	r0, [sp, #4]
400170bc:	e1d401b2 	ldrh	r0, [r4, #18]
400170c0:	e28d1004 	add	r1, sp, #4
400170c4:	ebfff848 	bl	400151ec <CyU3PDmaSocketSetConfig>
400170c8:	e284003c 	add	r0, r4, #60	; 0x3c
400170cc:	ebffccae 	bl	4000a38c <_txe_mutex_put>
400170d0:	e3a00000 	mov	r0, #0
400170d4:	eaffff7a 	b	40016ec4 <CyU3PDmaChannelSetupSendBuffer+0x1c>
400170d8:	40080000 	.word	0x40080000
400170dc:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaChannelWaitForCompletion:

400170e0 <CyU3PDmaChannelWaitForCompletion>:
400170e0:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
400170e4:	e1a04000 	mov	r4, r0
400170e8:	e1a05001 	mov	r5, r1
400170ec:	e3a08000 	mov	r8, #0
400170f0:	e1a01005 	mov	r1, r5
400170f4:	e1a00004 	mov	r0, r4
400170f8:	ebfff8ed 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
400170fc:	e1a07000 	mov	r7, r0
40017100:	e3570000 	cmp	r7, #0
40017104:	0a000001 	beq	40017110 <CyU3PDmaChannelWaitForCompletion+0x30>
40017108:	e1a00007 	mov	r0, r7
4001710c:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40017110:	e5946000 	ldr	r6, [r4]
40017114:	e3560001 	cmp	r6, #1
40017118:	1a00000b 	bne	4001714c <CyU3PDmaChannelWaitForCompletion+0x6c>
4001711c:	e3a03000 	mov	r3, #0
40017120:	e58d3000 	str	r3, [sp]
40017124:	e28d3004 	add	r3, sp, #4
40017128:	e3a02000 	mov	r2, #0
4001712c:	e3a01007 	mov	r1, #7
40017130:	e2840074 	add	r0, r4, #116	; 0x74
40017134:	ebffcb97 	bl	40009f98 <_txe_event_flags_get>
40017138:	e1a07000 	mov	r7, r0
4001713c:	e3570000 	cmp	r7, #0
40017140:	0a000016 	beq	400171a0 <CyU3PDmaChannelWaitForCompletion+0xc0>
40017144:	e3a07042 	mov	r7, #66	; 0x42
40017148:	ea000014 	b	400171a0 <CyU3PDmaChannelWaitForCompletion+0xc0>
4001714c:	e3560002 	cmp	r6, #2
40017150:	1a000005 	bne	4001716c <CyU3PDmaChannelWaitForCompletion+0x8c>
40017154:	e5940034 	ldr	r0, [r4, #52]	; 0x34
40017158:	e3500000 	cmp	r0, #0
4001715c:	1a000000 	bne	40017164 <CyU3PDmaChannelWaitForCompletion+0x84>
40017160:	e3a07046 	mov	r7, #70	; 0x46
40017164:	e3a08061 	mov	r8, #97	; 0x61
40017168:	ea00000c 	b	400171a0 <CyU3PDmaChannelWaitForCompletion+0xc0>
4001716c:	e3560003 	cmp	r6, #3
40017170:	1a000001 	bne	4001717c <CyU3PDmaChannelWaitForCompletion+0x9c>
40017174:	e3a08062 	mov	r8, #98	; 0x62
40017178:	ea000008 	b	400171a0 <CyU3PDmaChannelWaitForCompletion+0xc0>
4001717c:	e3560004 	cmp	r6, #4
40017180:	1a000001 	bne	4001718c <CyU3PDmaChannelWaitForCompletion+0xac>
40017184:	e3a08064 	mov	r8, #100	; 0x64
40017188:	ea000004 	b	400171a0 <CyU3PDmaChannelWaitForCompletion+0xc0>
4001718c:	e3560005 	cmp	r6, #5
40017190:	1a000001 	bne	4001719c <CyU3PDmaChannelWaitForCompletion+0xbc>
40017194:	e3a07049 	mov	r7, #73	; 0x49
40017198:	ea000000 	b	400171a0 <CyU3PDmaChannelWaitForCompletion+0xc0>
4001719c:	e3a07042 	mov	r7, #66	; 0x42
400171a0:	e284003c 	add	r0, r4, #60	; 0x3c
400171a4:	ebffcc78 	bl	4000a38c <_txe_mutex_put>
400171a8:	e3570000 	cmp	r7, #0
400171ac:	1a000015 	bne	40017208 <CyU3PDmaChannelWaitForCompletion+0x128>
400171b0:	e3580000 	cmp	r8, #0
400171b4:	0a000013 	beq	40017208 <CyU3PDmaChannelWaitForCompletion+0x128>
400171b8:	e58d5000 	str	r5, [sp]
400171bc:	e28d3004 	add	r3, sp, #4
400171c0:	e3a02000 	mov	r2, #0
400171c4:	e1a01008 	mov	r1, r8
400171c8:	e2840074 	add	r0, r4, #116	; 0x74
400171cc:	ebffcb71 	bl	40009f98 <_txe_event_flags_get>
400171d0:	e1a07000 	mov	r7, r0
400171d4:	e3570000 	cmp	r7, #0
400171d8:	0a000001 	beq	400171e4 <CyU3PDmaChannelWaitForCompletion+0x104>
400171dc:	e3a07045 	mov	r7, #69	; 0x45
400171e0:	ea000008 	b	40017208 <CyU3PDmaChannelWaitForCompletion+0x128>
400171e4:	e59d0004 	ldr	r0, [sp, #4]
400171e8:	e3100040 	tst	r0, #64	; 0x40
400171ec:	0a000001 	beq	400171f8 <CyU3PDmaChannelWaitForCompletion+0x118>
400171f0:	e3a07049 	mov	r7, #73	; 0x49
400171f4:	ea000003 	b	40017208 <CyU3PDmaChannelWaitForCompletion+0x128>
400171f8:	e59d0004 	ldr	r0, [sp, #4]
400171fc:	e3100020 	tst	r0, #32
40017200:	0a000000 	beq	40017208 <CyU3PDmaChannelWaitForCompletion+0x128>
40017204:	e3a07048 	mov	r7, #72	; 0x48
40017208:	e1a00007 	mov	r0, r7
4001720c:	eaffffbe 	b	4001710c <CyU3PDmaChannelWaitForCompletion+0x2c>

Disassembly of section i.CyU3PDmaChannelWaitForRecvBuffer:

40017210 <CyU3PDmaChannelWaitForRecvBuffer>:
40017210:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40017214:	e24dd018 	sub	sp, sp, #24
40017218:	e1a04000 	mov	r4, r0
4001721c:	e1a05001 	mov	r5, r1
40017220:	e1a06002 	mov	r6, r2
40017224:	e3550000 	cmp	r5, #0
40017228:	1a000002 	bne	40017238 <CyU3PDmaChannelWaitForRecvBuffer+0x28>
4001722c:	e3a00041 	mov	r0, #65	; 0x41
40017230:	e28dd018 	add	sp, sp, #24
40017234:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40017238:	e1a01006 	mov	r1, r6
4001723c:	e1a00004 	mov	r0, r4
40017240:	ebfff89b 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
40017244:	e1a07000 	mov	r7, r0
40017248:	e3570000 	cmp	r7, #0
4001724c:	0a000001 	beq	40017258 <CyU3PDmaChannelWaitForRecvBuffer+0x48>
40017250:	e1a00007 	mov	r0, r7
40017254:	eafffff5 	b	40017230 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017258:	e1d400b4 	ldrh	r0, [r4, #4]
4001725c:	e3500004 	cmp	r0, #4
40017260:	1a000000 	bne	40017268 <CyU3PDmaChannelWaitForRecvBuffer+0x58>
40017264:	e3a07046 	mov	r7, #70	; 0x46
40017268:	e5948000 	ldr	r8, [r4]
4001726c:	e3570000 	cmp	r7, #0
40017270:	1a000034 	bne	40017348 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017274:	e3580004 	cmp	r8, #4
40017278:	1a00001e 	bne	400172f8 <CyU3PDmaChannelWaitForRecvBuffer+0xe8>
4001727c:	e284003c 	add	r0, r4, #60	; 0x3c
40017280:	ebffcc41 	bl	4000a38c <_txe_mutex_put>
40017284:	e58d6000 	str	r6, [sp]
40017288:	e28d3014 	add	r3, sp, #20
4001728c:	e3a02000 	mov	r2, #0
40017290:	e3a01064 	mov	r1, #100	; 0x64
40017294:	e2840074 	add	r0, r4, #116	; 0x74
40017298:	ebffcb3e 	bl	40009f98 <_txe_event_flags_get>
4001729c:	e1a07000 	mov	r7, r0
400172a0:	e3570000 	cmp	r7, #0
400172a4:	0a000001 	beq	400172b0 <CyU3PDmaChannelWaitForRecvBuffer+0xa0>
400172a8:	e3a00045 	mov	r0, #69	; 0x45
400172ac:	eaffffdf 	b	40017230 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172b0:	e59d0014 	ldr	r0, [sp, #20]
400172b4:	e3100040 	tst	r0, #64	; 0x40
400172b8:	0a000001 	beq	400172c4 <CyU3PDmaChannelWaitForRecvBuffer+0xb4>
400172bc:	e3a00049 	mov	r0, #73	; 0x49
400172c0:	eaffffda 	b	40017230 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172c4:	e59d0014 	ldr	r0, [sp, #20]
400172c8:	e3100020 	tst	r0, #32
400172cc:	0a000001 	beq	400172d8 <CyU3PDmaChannelWaitForRecvBuffer+0xc8>
400172d0:	e3a00048 	mov	r0, #72	; 0x48
400172d4:	eaffffd5 	b	40017230 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172d8:	e1a01006 	mov	r1, r6
400172dc:	e1a00004 	mov	r0, r4
400172e0:	ebfff873 	bl	400154b4 <CyU3PDmaChannelAcquireLock>
400172e4:	e1a07000 	mov	r7, r0
400172e8:	e3570000 	cmp	r7, #0
400172ec:	0a000015 	beq	40017348 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
400172f0:	e1a00007 	mov	r0, r7
400172f4:	eaffffcd 	b	40017230 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400172f8:	e3580001 	cmp	r8, #1
400172fc:	1a000010 	bne	40017344 <CyU3PDmaChannelWaitForRecvBuffer+0x134>
40017300:	e3a03000 	mov	r3, #0
40017304:	e58d3000 	str	r3, [sp]
40017308:	e28d3014 	add	r3, sp, #20
4001730c:	e3a02000 	mov	r2, #0
40017310:	e3a01024 	mov	r1, #36	; 0x24
40017314:	e2840074 	add	r0, r4, #116	; 0x74
40017318:	ebffcb1e 	bl	40009f98 <_txe_event_flags_get>
4001731c:	e1a07000 	mov	r7, r0
40017320:	e3570000 	cmp	r7, #0
40017324:	0a000001 	beq	40017330 <CyU3PDmaChannelWaitForRecvBuffer+0x120>
40017328:	e3a07047 	mov	r7, #71	; 0x47
4001732c:	ea000005 	b	40017348 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017330:	e59d0014 	ldr	r0, [sp, #20]
40017334:	e3100020 	tst	r0, #32
40017338:	0a000002 	beq	40017348 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
4001733c:	e3a07042 	mov	r7, #66	; 0x42
40017340:	ea000000 	b	40017348 <CyU3PDmaChannelWaitForRecvBuffer+0x138>
40017344:	e3a07047 	mov	r7, #71	; 0x47
40017348:	e3570000 	cmp	r7, #0
4001734c:	0a000003 	beq	40017360 <CyU3PDmaChannelWaitForRecvBuffer+0x150>
40017350:	e284003c 	add	r0, r4, #60	; 0x3c
40017354:	ebffcc0c 	bl	4000a38c <_txe_mutex_put>
40017358:	e1a00007 	mov	r0, r7
4001735c:	eaffffb3 	b	40017230 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
40017360:	e1d401b4 	ldrh	r0, [r4, #20]
40017364:	e28d1004 	add	r1, sp, #4
40017368:	eb002d52 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001736c:	e59d0004 	ldr	r0, [sp, #4]
40017370:	e5850000 	str	r0, [r5]
40017374:	e59d0010 	ldr	r0, [sp, #16]
40017378:	e59f1030 	ldr	r1, [pc, #48]	; 400173b0 <CyU3PDmaChannelWaitForRecvBuffer+0x1a0>
4001737c:	e0010820 	and	r0, r1, r0, lsr #16
40017380:	e1c500b4 	strh	r0, [r5, #4]
40017384:	e241100f 	sub	r1, r1, #15
40017388:	e59d0010 	ldr	r0, [sp, #16]
4001738c:	e0000001 	and	r0, r0, r1
40017390:	e1c500b6 	strh	r0, [r5, #6]
40017394:	e59d0010 	ldr	r0, [sp, #16]
40017398:	e200000f 	and	r0, r0, #15
4001739c:	e1c500b8 	strh	r0, [r5, #8]
400173a0:	e284003c 	add	r0, r4, #60	; 0x3c
400173a4:	ebffcbf8 	bl	4000a38c <_txe_mutex_put>
400173a8:	e3a00000 	mov	r0, #0
400173ac:	eaffff9f 	b	40017230 <CyU3PDmaChannelWaitForRecvBuffer+0x20>
400173b0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaConfigureSockets_TypeAuto:

400173b4 <CyU3PDmaConfigureSockets_TypeAuto>:
400173b4:	e92d4010 	push	{r4, lr}
400173b8:	e24dd018 	sub	sp, sp, #24
400173bc:	e1a04000 	mov	r4, r0
400173c0:	e1d401b0 	ldrh	r0, [r4, #16]
400173c4:	ebfff6c6 	bl	40014ee4 <CyU3PDmaSocketDisable>
400173c8:	e1d401b2 	ldrh	r0, [r4, #18]
400173cc:	ebfff6c4 	bl	40014ee4 <CyU3PDmaSocketDisable>
400173d0:	e1d401b0 	ldrh	r0, [r4, #16]
400173d4:	e1a0100d 	mov	r1, sp
400173d8:	ebfff6d9 	bl	40014f44 <CyU3PDmaSocketGetConfig>
400173dc:	e1d400bc 	ldrh	r0, [r4, #12]
400173e0:	e58d0000 	str	r0, [sp]
400173e4:	e3a00000 	mov	r0, #0
400173e8:	e58d0004 	str	r0, [sp, #4]
400173ec:	e58d0008 	str	r0, [sp, #8]
400173f0:	e3a00646 	mov	r0, #73400320	; 0x4600000
400173f4:	e58d000c 	str	r0, [sp, #12]
400173f8:	e1d401b0 	ldrh	r0, [r4, #16]
400173fc:	eb000df6 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
40017400:	e3500000 	cmp	r0, #0
40017404:	0a000002 	beq	40017414 <CyU3PDmaConfigureSockets_TypeAuto+0x60>
40017408:	e59d000c 	ldr	r0, [sp, #12]
4001740c:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017410:	e58d000c 	str	r0, [sp, #12]
40017414:	e3e00000 	mvn	r0, #0
40017418:	e58d0010 	str	r0, [sp, #16]
4001741c:	e1d400b4 	ldrh	r0, [r4, #4]
40017420:	e3500001 	cmp	r0, #1
40017424:	1a000001 	bne	40017430 <CyU3PDmaConfigureSockets_TypeAuto+0x7c>
40017428:	e3a00041 	mov	r0, #65	; 0x41
4001742c:	ea000000 	b	40017434 <CyU3PDmaConfigureSockets_TypeAuto+0x80>
40017430:	e3a00040 	mov	r0, #64	; 0x40
40017434:	e58d0014 	str	r0, [sp, #20]
40017438:	e1d401b0 	ldrh	r0, [r4, #16]
4001743c:	e1a0100d 	mov	r1, sp
40017440:	ebfff769 	bl	400151ec <CyU3PDmaSocketSetConfig>
40017444:	e1d401b2 	ldrh	r0, [r4, #18]
40017448:	e1a0100d 	mov	r1, sp
4001744c:	ebfff6bc 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40017450:	e1d400bc 	ldrh	r0, [r4, #12]
40017454:	e58d0000 	str	r0, [sp]
40017458:	e3a00000 	mov	r0, #0
4001745c:	e58d0004 	str	r0, [sp, #4]
40017460:	e58d0008 	str	r0, [sp, #8]
40017464:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017468:	e58d000c 	str	r0, [sp, #12]
4001746c:	e1d401b2 	ldrh	r0, [r4, #18]
40017470:	eb000dd9 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
40017474:	e3500000 	cmp	r0, #0
40017478:	0a000002 	beq	40017488 <CyU3PDmaConfigureSockets_TypeAuto+0xd4>
4001747c:	e59d000c 	ldr	r0, [sp, #12]
40017480:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017484:	e58d000c 	str	r0, [sp, #12]
40017488:	e3e00000 	mvn	r0, #0
4001748c:	e58d0010 	str	r0, [sp, #16]
40017490:	e3a000c0 	mov	r0, #192	; 0xc0
40017494:	e58d0014 	str	r0, [sp, #20]
40017498:	e1d401b2 	ldrh	r0, [r4, #18]
4001749c:	e1a0100d 	mov	r1, sp
400174a0:	ebfff751 	bl	400151ec <CyU3PDmaSocketSetConfig>
400174a4:	e3a00000 	mov	r0, #0
400174a8:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
400174ac:	e28dd018 	add	sp, sp, #24
400174b0:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaConfigureSockets_TypeManual:

400174b4 <CyU3PDmaConfigureSockets_TypeManual>:
400174b4:	e92d4010 	push	{r4, lr}
400174b8:	e24dd018 	sub	sp, sp, #24
400174bc:	e1a04000 	mov	r4, r0
400174c0:	e1d400b4 	ldrh	r0, [r4, #4]
400174c4:	e3500004 	cmp	r0, #4
400174c8:	0a00001f 	beq	4001754c <CyU3PDmaConfigureSockets_TypeManual+0x98>
400174cc:	e1d401b0 	ldrh	r0, [r4, #16]
400174d0:	ebfff683 	bl	40014ee4 <CyU3PDmaSocketDisable>
400174d4:	e1d401b0 	ldrh	r0, [r4, #16]
400174d8:	e1a0100d 	mov	r1, sp
400174dc:	ebfff698 	bl	40014f44 <CyU3PDmaSocketGetConfig>
400174e0:	e1d400bc 	ldrh	r0, [r4, #12]
400174e4:	e58d0000 	str	r0, [sp]
400174e8:	e3a00000 	mov	r0, #0
400174ec:	e58d0004 	str	r0, [sp, #4]
400174f0:	e58d0008 	str	r0, [sp, #8]
400174f4:	e3a00646 	mov	r0, #73400320	; 0x4600000
400174f8:	e58d000c 	str	r0, [sp, #12]
400174fc:	e1d401b0 	ldrh	r0, [r4, #16]
40017500:	eb000db5 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
40017504:	e3500000 	cmp	r0, #0
40017508:	0a000002 	beq	40017518 <CyU3PDmaConfigureSockets_TypeManual+0x64>
4001750c:	e59d000c 	ldr	r0, [sp, #12]
40017510:	e3800b01 	orr	r0, r0, #1024	; 0x400
40017514:	e58d000c 	str	r0, [sp, #12]
40017518:	e3e00000 	mvn	r0, #0
4001751c:	e58d0010 	str	r0, [sp, #16]
40017520:	e3a00041 	mov	r0, #65	; 0x41
40017524:	e58d0014 	str	r0, [sp, #20]
40017528:	e1d400b4 	ldrh	r0, [r4, #4]
4001752c:	e3500003 	cmp	r0, #3
40017530:	1a000002 	bne	40017540 <CyU3PDmaConfigureSockets_TypeManual+0x8c>
40017534:	e59d0014 	ldr	r0, [sp, #20]
40017538:	e3800080 	orr	r0, r0, #128	; 0x80
4001753c:	e58d0014 	str	r0, [sp, #20]
40017540:	e1d401b0 	ldrh	r0, [r4, #16]
40017544:	e1a0100d 	mov	r1, sp
40017548:	ebfff727 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001754c:	e1d400b4 	ldrh	r0, [r4, #4]
40017550:	e3500003 	cmp	r0, #3
40017554:	0a000019 	beq	400175c0 <CyU3PDmaConfigureSockets_TypeManual+0x10c>
40017558:	e1d401b2 	ldrh	r0, [r4, #18]
4001755c:	ebfff660 	bl	40014ee4 <CyU3PDmaSocketDisable>
40017560:	e1d401b2 	ldrh	r0, [r4, #18]
40017564:	e1a0100d 	mov	r1, sp
40017568:	ebfff675 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001756c:	e1d400be 	ldrh	r0, [r4, #14]
40017570:	e58d0000 	str	r0, [sp]
40017574:	e3a00000 	mov	r0, #0
40017578:	e58d0004 	str	r0, [sp, #4]
4001757c:	e58d0008 	str	r0, [sp, #8]
40017580:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40017584:	e58d000c 	str	r0, [sp, #12]
40017588:	e1d401b2 	ldrh	r0, [r4, #18]
4001758c:	eb000d92 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
40017590:	e3500000 	cmp	r0, #0
40017594:	0a000002 	beq	400175a4 <CyU3PDmaConfigureSockets_TypeManual+0xf0>
40017598:	e59d000c 	ldr	r0, [sp, #12]
4001759c:	e3800b01 	orr	r0, r0, #1024	; 0x400
400175a0:	e58d000c 	str	r0, [sp, #12]
400175a4:	e3e00000 	mvn	r0, #0
400175a8:	e58d0010 	str	r0, [sp, #16]
400175ac:	e3a000c2 	mov	r0, #194	; 0xc2
400175b0:	e58d0014 	str	r0, [sp, #20]
400175b4:	e1d401b2 	ldrh	r0, [r4, #18]
400175b8:	e1a0100d 	mov	r1, sp
400175bc:	ebfff70a 	bl	400151ec <CyU3PDmaSocketSetConfig>
400175c0:	e3a00000 	mov	r0, #0
400175c4:	e1c402be 	strh	r0, [r4, #46]	; 0x2e
400175c8:	e28dd018 	add	sp, sp, #24
400175cc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaMultiChannelAcquireLock:

400175d0 <CyU3PDmaMultiChannelAcquireLock>:
400175d0:	e92d4070 	push	{r4, r5, r6, lr}
400175d4:	e1a04000 	mov	r4, r0
400175d8:	e1a05001 	mov	r5, r1
400175dc:	e3540000 	cmp	r4, #0
400175e0:	1a000001 	bne	400175ec <CyU3PDmaMultiChannelAcquireLock+0x1c>
400175e4:	e3a00041 	mov	r0, #65	; 0x41
400175e8:	e8bd8070 	pop	{r4, r5, r6, pc}
400175ec:	e5940000 	ldr	r0, [r4]
400175f0:	e3500000 	cmp	r0, #0
400175f4:	1a000001 	bne	40017600 <CyU3PDmaMultiChannelAcquireLock+0x30>
400175f8:	e3a00044 	mov	r0, #68	; 0x44
400175fc:	eafffff9 	b	400175e8 <CyU3PDmaMultiChannelAcquireLock+0x18>
40017600:	e1a01005 	mov	r1, r5
40017604:	e2840078 	add	r0, r4, #120	; 0x78
40017608:	ebffcb2a 	bl	4000a2b8 <_txe_mutex_get>
4001760c:	e3500000 	cmp	r0, #0
40017610:	0a000001 	beq	4001761c <CyU3PDmaMultiChannelAcquireLock+0x4c>
40017614:	e3a0001d 	mov	r0, #29
40017618:	eafffff2 	b	400175e8 <CyU3PDmaMultiChannelAcquireLock+0x18>
4001761c:	e3a00000 	mov	r0, #0
40017620:	eafffff0 	b	400175e8 <CyU3PDmaMultiChannelAcquireLock+0x18>

Disassembly of section i.CyU3PDmaMultiChannelCommitBuffer:

40017624 <CyU3PDmaMultiChannelCommitBuffer>:
40017624:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
40017628:	e24dd03c 	sub	sp, sp, #60	; 0x3c
4001762c:	e1a04000 	mov	r4, r0
40017630:	e1a05001 	mov	r5, r1
40017634:	e1a06002 	mov	r6, r2
40017638:	e3e01000 	mvn	r1, #0
4001763c:	e1a00004 	mov	r0, r4
40017640:	ebffffe2 	bl	400175d0 <CyU3PDmaMultiChannelAcquireLock>
40017644:	e1a0b000 	mov	fp, r0
40017648:	e35b0000 	cmp	fp, #0
4001764c:	0a000002 	beq	4001765c <CyU3PDmaMultiChannelCommitBuffer+0x38>
40017650:	e1a0000b 	mov	r0, fp
40017654:	e28dd03c 	add	sp, sp, #60	; 0x3c
40017658:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001765c:	e1d400b4 	ldrh	r0, [r4, #4]
40017660:	e20070ff 	and	r7, r0, #255	; 0xff
40017664:	e1d400b6 	ldrh	r0, [r4, #6]
40017668:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
4001766c:	e0400001 	sub	r0, r0, r1
40017670:	e1500005 	cmp	r0, r5
40017674:	aa000000 	bge	4001767c <CyU3PDmaMultiChannelCommitBuffer+0x58>
40017678:	e3a0b040 	mov	fp, #64	; 0x40
4001767c:	e5940000 	ldr	r0, [r4]
40017680:	e3500002 	cmp	r0, #2
40017684:	0a000000 	beq	4001768c <CyU3PDmaMultiChannelCommitBuffer+0x68>
40017688:	e3a0b042 	mov	fp, #66	; 0x42
4001768c:	e5940000 	ldr	r0, [r4]
40017690:	e3500005 	cmp	r0, #5
40017694:	1a000000 	bne	4001769c <CyU3PDmaMultiChannelCommitBuffer+0x78>
40017698:	e3a0b049 	mov	fp, #73	; 0x49
4001769c:	e5940000 	ldr	r0, [r4]
400176a0:	e3500007 	cmp	r0, #7
400176a4:	1a000000 	bne	400176ac <CyU3PDmaMultiChannelCommitBuffer+0x88>
400176a8:	e3a0b048 	mov	fp, #72	; 0x48
400176ac:	e3570006 	cmp	r7, #6
400176b0:	1a000000 	bne	400176b8 <CyU3PDmaMultiChannelCommitBuffer+0x94>
400176b4:	e3a0b046 	mov	fp, #70	; 0x46
400176b8:	e3570005 	cmp	r7, #5
400176bc:	1a000034 	bne	40017794 <CyU3PDmaMultiChannelCommitBuffer+0x170>
400176c0:	e35b0000 	cmp	fp, #0
400176c4:	1a000032 	bne	40017794 <CyU3PDmaMultiChannelCommitBuffer+0x170>
400176c8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400176cc:	e28d1024 	add	r1, sp, #36	; 0x24
400176d0:	ebfff61b 	bl	40014f44 <CyU3PDmaSocketGetConfig>
400176d4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
400176d8:	e3100702 	tst	r0, #524288	; 0x80000
400176dc:	0a000027 	beq	40017780 <CyU3PDmaMultiChannelCommitBuffer+0x15c>
400176e0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
400176e4:	e1a09800 	lsl	r9, r0, #16
400176e8:	e1a09829 	lsr	r9, r9, #16
400176ec:	e28d1004 	add	r1, sp, #4
400176f0:	e1a00009 	mov	r0, r9
400176f4:	eb002c6f 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400176f8:	e59d0010 	ldr	r0, [sp, #16]
400176fc:	e3100008 	tst	r0, #8
40017700:	0a00001c 	beq	40017778 <CyU3PDmaMultiChannelCommitBuffer+0x154>
40017704:	e59d0010 	ldr	r0, [sp, #16]
40017708:	e1a00800 	lsl	r0, r0, #16
4001770c:	e1a00820 	lsr	r0, r0, #16
40017710:	e58d0010 	str	r0, [sp, #16]
40017714:	e59d0010 	ldr	r0, [sp, #16]
40017718:	e1800805 	orr	r0, r0, r5, lsl #16
4001771c:	e58d0010 	str	r0, [sp, #16]
40017720:	e3560000 	cmp	r6, #0
40017724:	0a000007 	beq	40017748 <CyU3PDmaMultiChannelCommitBuffer+0x124>
40017728:	e59d0010 	ldr	r0, [sp, #16]
4001772c:	e3c0000f 	bic	r0, r0, #15
40017730:	e58d0010 	str	r0, [sp, #16]
40017734:	e206100e 	and	r1, r6, #14
40017738:	e3811008 	orr	r1, r1, #8
4001773c:	e59d0010 	ldr	r0, [sp, #16]
40017740:	e1800001 	orr	r0, r0, r1
40017744:	e58d0010 	str	r0, [sp, #16]
40017748:	e5940074 	ldr	r0, [r4, #116]	; 0x74
4001774c:	e3500000 	cmp	r0, #0
40017750:	0a000004 	beq	40017768 <CyU3PDmaMultiChannelCommitBuffer+0x144>
40017754:	e59d2010 	ldr	r2, [sp, #16]
40017758:	e59f327c 	ldr	r3, [pc, #636]	; 400179dc <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
4001775c:	e0021003 	and	r1, r2, r3
40017760:	e59d0004 	ldr	r0, [sp, #4]
40017764:	ebffeb19 	bl	400123d0 <CyU3PSysCleanDRegion>
40017768:	e28d1004 	add	r1, sp, #4
4001776c:	e1a00009 	mov	r0, r9
40017770:	eb002c6b 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017774:	ea000002 	b	40017784 <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017778:	e3a0b047 	mov	fp, #71	; 0x47
4001777c:	ea000000 	b	40017784 <CyU3PDmaMultiChannelCommitBuffer+0x160>
40017780:	e3a0b047 	mov	fp, #71	; 0x47
40017784:	e2840078 	add	r0, r4, #120	; 0x78
40017788:	ebffcaff 	bl	4000a38c <_txe_mutex_put>
4001778c:	e1a0000b 	mov	r0, fp
40017790:	eaffffaf 	b	40017654 <CyU3PDmaMultiChannelCommitBuffer+0x30>
40017794:	e35b0000 	cmp	fp, #0
40017798:	1a00000d 	bne	400177d4 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
4001779c:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400177a0:	e28d1014 	add	r1, sp, #20
400177a4:	eb002c43 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400177a8:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
400177ac:	e28d1004 	add	r1, sp, #4
400177b0:	eb002c40 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400177b4:	e59d0020 	ldr	r0, [sp, #32]
400177b8:	e3100008 	tst	r0, #8
400177bc:	1a000000 	bne	400177c4 <CyU3PDmaMultiChannelCommitBuffer+0x1a0>
400177c0:	e3a0b047 	mov	fp, #71	; 0x47
400177c4:	e59d0010 	ldr	r0, [sp, #16]
400177c8:	e3100008 	tst	r0, #8
400177cc:	0a000000 	beq	400177d4 <CyU3PDmaMultiChannelCommitBuffer+0x1b0>
400177d0:	e3a0b047 	mov	fp, #71	; 0x47
400177d4:	e35b0000 	cmp	fp, #0
400177d8:	0a000003 	beq	400177ec <CyU3PDmaMultiChannelCommitBuffer+0x1c8>
400177dc:	e2840078 	add	r0, r4, #120	; 0x78
400177e0:	ebffcae9 	bl	4000a38c <_txe_mutex_put>
400177e4:	e1a0000b 	mov	r0, fp
400177e8:	eaffff99 	b	40017654 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400177ec:	e5940074 	ldr	r0, [r4, #116]	; 0x74
400177f0:	e3500000 	cmp	r0, #0
400177f4:	0a000004 	beq	4001780c <CyU3PDmaMultiChannelCommitBuffer+0x1e8>
400177f8:	e59d2010 	ldr	r2, [sp, #16]
400177fc:	e59f31d8 	ldr	r3, [pc, #472]	; 400179dc <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017800:	e0021003 	and	r1, r2, r3
40017804:	e59d0004 	ldr	r0, [sp, #4]
40017808:	ebffeaf0 	bl	400123d0 <CyU3PSysCleanDRegion>
4001780c:	e3570009 	cmp	r7, #9
40017810:	1a00003a 	bne	40017900 <CyU3PDmaMultiChannelCommitBuffer+0x2dc>
40017814:	e1d493b8 	ldrh	r9, [r4, #56]	; 0x38
40017818:	e3a0a000 	mov	sl, #0
4001781c:	ea00002a 	b	400178cc <CyU3PDmaMultiChannelCommitBuffer+0x2a8>
40017820:	e28d1004 	add	r1, sp, #4
40017824:	e1a00009 	mov	r0, r9
40017828:	eb002c22 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001782c:	e284000c 	add	r0, r4, #12
40017830:	e080008a 	add	r0, r0, sl, lsl #1
40017834:	e1d000b0 	ldrh	r0, [r0]
40017838:	e3500000 	cmp	r0, #0
4001783c:	1a00001d 	bne	400178b8 <CyU3PDmaMultiChannelCommitBuffer+0x294>
40017840:	e59d0010 	ldr	r0, [sp, #16]
40017844:	e59f1190 	ldr	r1, [pc, #400]	; 400179dc <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017848:	e0000001 	and	r0, r0, r1
4001784c:	e58d0010 	str	r0, [sp, #16]
40017850:	e59d0010 	ldr	r0, [sp, #16]
40017854:	e1800805 	orr	r0, r0, r5, lsl #16
40017858:	e58d0010 	str	r0, [sp, #16]
4001785c:	e3560000 	cmp	r6, #0
40017860:	1a000005 	bne	4001787c <CyU3PDmaMultiChannelCommitBuffer+0x258>
40017864:	e59d1020 	ldr	r1, [sp, #32]
40017868:	e201100f 	and	r1, r1, #15
4001786c:	e59d0010 	ldr	r0, [sp, #16]
40017870:	e1800001 	orr	r0, r0, r1
40017874:	e58d0010 	str	r0, [sp, #16]
40017878:	ea000004 	b	40017890 <CyU3PDmaMultiChannelCommitBuffer+0x26c>
4001787c:	e206100e 	and	r1, r6, #14
40017880:	e3811008 	orr	r1, r1, #8
40017884:	e59d0010 	ldr	r0, [sp, #16]
40017888:	e1800001 	orr	r0, r0, r1
4001788c:	e58d0010 	str	r0, [sp, #16]
40017890:	e28d1004 	add	r1, sp, #4
40017894:	e1a00009 	mov	r0, r9
40017898:	eb002c21 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001789c:	e59d0008 	ldr	r0, [sp, #8]
400178a0:	e1a08900 	lsl	r8, r0, #18
400178a4:	e1a08928 	lsr	r8, r8, #18
400178a8:	e3a02001 	mov	r2, #1
400178ac:	e1a01009 	mov	r1, r9
400178b0:	e1a00008 	mov	r0, r8
400178b4:	ebfff63a 	bl	400151a4 <CyU3PDmaSocketSendEvent>
400178b8:	e59d000c 	ldr	r0, [sp, #12]
400178bc:	e59f111c 	ldr	r1, [pc, #284]	; 400179e0 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400178c0:	e0019820 	and	r9, r1, r0, lsr #16
400178c4:	e28a0001 	add	r0, sl, #1
400178c8:	e3c0a801 	bic	sl, r0, #65536	; 0x10000
400178cc:	e1d400ba 	ldrh	r0, [r4, #10]
400178d0:	e150000a 	cmp	r0, sl
400178d4:	caffffd1 	bgt	40017820 <CyU3PDmaMultiChannelCommitBuffer+0x1fc>
400178d8:	e59d001c 	ldr	r0, [sp, #28]
400178dc:	e59f10fc 	ldr	r1, [pc, #252]	; 400179e0 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400178e0:	e0010820 	and	r0, r1, r0, lsr #16
400178e4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400178e8:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400178ec:	e28d1014 	add	r1, sp, #20
400178f0:	eb002bf0 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400178f4:	e59d001c 	ldr	r0, [sp, #28]
400178f8:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400178fc:	ea000032 	b	400179cc <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
40017900:	e59d0010 	ldr	r0, [sp, #16]
40017904:	e59f10d0 	ldr	r1, [pc, #208]	; 400179dc <CyU3PDmaMultiChannelCommitBuffer+0x3b8>
40017908:	e0000001 	and	r0, r0, r1
4001790c:	e58d0010 	str	r0, [sp, #16]
40017910:	e59d0010 	ldr	r0, [sp, #16]
40017914:	e1800805 	orr	r0, r0, r5, lsl #16
40017918:	e58d0010 	str	r0, [sp, #16]
4001791c:	e3560000 	cmp	r6, #0
40017920:	1a000005 	bne	4001793c <CyU3PDmaMultiChannelCommitBuffer+0x318>
40017924:	e59d1020 	ldr	r1, [sp, #32]
40017928:	e201100f 	and	r1, r1, #15
4001792c:	e59d0010 	ldr	r0, [sp, #16]
40017930:	e1800001 	orr	r0, r0, r1
40017934:	e58d0010 	str	r0, [sp, #16]
40017938:	ea000004 	b	40017950 <CyU3PDmaMultiChannelCommitBuffer+0x32c>
4001793c:	e206100e 	and	r1, r6, #14
40017940:	e3811008 	orr	r1, r1, #8
40017944:	e59d0010 	ldr	r0, [sp, #16]
40017948:	e1800001 	orr	r0, r0, r1
4001794c:	e58d0010 	str	r0, [sp, #16]
40017950:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
40017954:	e28d1004 	add	r1, sp, #4
40017958:	eb002bf1 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001795c:	e59d0008 	ldr	r0, [sp, #8]
40017960:	e1a08900 	lsl	r8, r0, #18
40017964:	e1a08928 	lsr	r8, r8, #18
40017968:	e1d413b8 	ldrh	r1, [r4, #56]	; 0x38
4001796c:	e3a02001 	mov	r2, #1
40017970:	e1a00008 	mov	r0, r8
40017974:	ebfff60a 	bl	400151a4 <CyU3PDmaSocketSendEvent>
40017978:	e3570007 	cmp	r7, #7
4001797c:	1a000009 	bne	400179a8 <CyU3PDmaMultiChannelCommitBuffer+0x384>
40017980:	e59d000c 	ldr	r0, [sp, #12]
40017984:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017988:	e1d403b8 	ldrh	r0, [r4, #56]	; 0x38
4001798c:	e28d1004 	add	r1, sp, #4
40017990:	eb002bc8 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017994:	e59d000c 	ldr	r0, [sp, #12]
40017998:	e59f1040 	ldr	r1, [pc, #64]	; 400179e0 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
4001799c:	e0010820 	and	r0, r1, r0, lsr #16
400179a0:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400179a4:	ea000008 	b	400179cc <CyU3PDmaMultiChannelCommitBuffer+0x3a8>
400179a8:	e59d001c 	ldr	r0, [sp, #28]
400179ac:	e59f102c 	ldr	r1, [pc, #44]	; 400179e0 <CyU3PDmaMultiChannelCommitBuffer+0x3bc>
400179b0:	e0010820 	and	r0, r1, r0, lsr #16
400179b4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
400179b8:	e1d403b6 	ldrh	r0, [r4, #54]	; 0x36
400179bc:	e28d1014 	add	r1, sp, #20
400179c0:	eb002bbc 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400179c4:	e59d001c 	ldr	r0, [sp, #28]
400179c8:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
400179cc:	e2840078 	add	r0, r4, #120	; 0x78
400179d0:	ebffca6d 	bl	4000a38c <_txe_mutex_put>
400179d4:	e3a00000 	mov	r0, #0
400179d8:	eaffff1d 	b	40017654 <CyU3PDmaMultiChannelCommitBuffer+0x30>
400179dc:	0000fff0 	.word	0x0000fff0
400179e0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeManyToOne:

400179e4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>:
400179e4:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
400179e8:	e24dd024 	sub	sp, sp, #36	; 0x24
400179ec:	e1a04000 	mov	r4, r0
400179f0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400179f4:	e3806903 	orr	r6, r0, #49152	; 0xc000
400179f8:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
400179fc:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017a00:	e1d400b8 	ldrh	r0, [r4, #8]
40017a04:	e1d430ba 	ldrh	r3, [r4, #10]
40017a08:	e0000093 	mul	r0, r3, r0
40017a0c:	e1a01800 	lsl	r1, r0, #16
40017a10:	e1a01821 	lsr	r1, r1, #16
40017a14:	e1d420b6 	ldrh	r2, [r4, #6]
40017a18:	e1a03006 	mov	r3, r6
40017a1c:	e284001c 	add	r0, r4, #28
40017a20:	eb002ab5 	bl	400224fc <CyU3PDmaDscrChainCreate>
40017a24:	e1a05000 	mov	r5, r0
40017a28:	e3550000 	cmp	r5, #0
40017a2c:	0a000002 	beq	40017a3c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x58>
40017a30:	e1a00005 	mov	r0, r5
40017a34:	e28dd024 	add	sp, sp, #36	; 0x24
40017a38:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017a3c:	e1d400b4 	ldrh	r0, [r4, #4]
40017a40:	e3500005 	cmp	r0, #5
40017a44:	1a00003c 	bne	40017b3c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x158>
40017a48:	e3a07000 	mov	r7, #0
40017a4c:	e1d481bc 	ldrh	r8, [r4, #28]
40017a50:	ea000035 	b	40017b2c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x148>
40017a54:	e3a09000 	mov	r9, #0
40017a58:	ea00002e 	b	40017b18 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x134>
40017a5c:	e28d1004 	add	r1, sp, #4
40017a60:	e1a00008 	mov	r0, r8
40017a64:	eb002b93 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017a68:	e3570000 	cmp	r7, #0
40017a6c:	1a000003 	bne	40017a80 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x9c>
40017a70:	e2840014 	add	r0, r4, #20
40017a74:	e0800089 	add	r0, r0, r9, lsl #1
40017a78:	e1c080b0 	strh	r8, [r0]
40017a7c:	ea000020 	b	40017b04 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x120>
40017a80:	e2841014 	add	r1, r4, #20
40017a84:	e0811089 	add	r1, r1, r9, lsl #1
40017a88:	e1d100b0 	ldrh	r0, [r1]
40017a8c:	e28d1014 	add	r1, sp, #20
40017a90:	eb002b88 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017a94:	e59d0018 	ldr	r0, [sp, #24]
40017a98:	e3c0043f 	bic	r0, r0, #1056964608	; 0x3f000000
40017a9c:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
40017aa0:	e58d0018 	str	r0, [sp, #24]
40017aa4:	e2841024 	add	r1, r4, #36	; 0x24
40017aa8:	e0811089 	add	r1, r1, r9, lsl #1
40017aac:	e59d0018 	ldr	r0, [sp, #24]
40017ab0:	e1d110b0 	ldrh	r1, [r1]
40017ab4:	e3a02101 	mov	r2, #1073741824	; 0x40000000
40017ab8:	e1821801 	orr	r1, r2, r1, lsl #16
40017abc:	e3811102 	orr	r1, r1, #-2147483648	; 0x80000000
40017ac0:	e1800001 	orr	r0, r0, r1
40017ac4:	e58d0018 	str	r0, [sp, #24]
40017ac8:	e59d001c 	ldr	r0, [sp, #28]
40017acc:	e1a00800 	lsl	r0, r0, #16
40017ad0:	e1a00820 	lsr	r0, r0, #16
40017ad4:	e58d001c 	str	r0, [sp, #28]
40017ad8:	e59d001c 	ldr	r0, [sp, #28]
40017adc:	e1800808 	orr	r0, r0, r8, lsl #16
40017ae0:	e58d001c 	str	r0, [sp, #28]
40017ae4:	e2841014 	add	r1, r4, #20
40017ae8:	e0811089 	add	r1, r1, r9, lsl #1
40017aec:	e1d100b0 	ldrh	r0, [r1]
40017af0:	e28d1014 	add	r1, sp, #20
40017af4:	eb002b8a 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017af8:	e2840014 	add	r0, r4, #20
40017afc:	e0800089 	add	r0, r0, r9, lsl #1
40017b00:	e1c080b0 	strh	r8, [r0]
40017b04:	e59d000c 	ldr	r0, [sp, #12]
40017b08:	e1a08800 	lsl	r8, r0, #16
40017b0c:	e1a08828 	lsr	r8, r8, #16
40017b10:	e2890001 	add	r0, r9, #1
40017b14:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017b18:	e1d400ba 	ldrh	r0, [r4, #10]
40017b1c:	e1500009 	cmp	r0, r9
40017b20:	caffffcd 	bgt	40017a5c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x78>
40017b24:	e2870001 	add	r0, r7, #1
40017b28:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017b2c:	e1d400b8 	ldrh	r0, [r4, #8]
40017b30:	e1500007 	cmp	r0, r7
40017b34:	aaffffc6 	bge	40017a54 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x70>
40017b38:	ea000056 	b	40017c98 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2b4>
40017b3c:	e3a07000 	mov	r7, #0
40017b40:	e1d481bc 	ldrh	r8, [r4, #28]
40017b44:	ea000050 	b	40017c8c <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2a8>
40017b48:	e3a09000 	mov	r9, #0
40017b4c:	ea000049 	b	40017c78 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x294>
40017b50:	e3570000 	cmp	r7, #0
40017b54:	1a00000d 	bne	40017b90 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x1ac>
40017b58:	e3a06cff 	mov	r6, #65280	; 0xff00
40017b5c:	e2840024 	add	r0, r4, #36	; 0x24
40017b60:	e0800089 	add	r0, r0, r9, lsl #1
40017b64:	e1d000b0 	ldrh	r0, [r0]
40017b68:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017b6c:	e1810800 	orr	r0, r1, r0, lsl #16
40017b70:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017b74:	e1866000 	orr	r6, r6, r0
40017b78:	e1d410b8 	ldrh	r1, [r4, #8]
40017b7c:	e2842014 	add	r2, r4, #20
40017b80:	e0820089 	add	r0, r2, r9, lsl #1
40017b84:	e1a03006 	mov	r3, r6
40017b88:	e3a02000 	mov	r2, #0
40017b8c:	eb002a5a 	bl	400224fc <CyU3PDmaDscrChainCreate>
40017b90:	e2841014 	add	r1, r4, #20
40017b94:	e0811089 	add	r1, r1, r9, lsl #1
40017b98:	e1d100b0 	ldrh	r0, [r1]
40017b9c:	e28d1014 	add	r1, sp, #20
40017ba0:	eb002b44 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017ba4:	e28d1004 	add	r1, sp, #4
40017ba8:	e1a00008 	mov	r0, r8
40017bac:	eb002b41 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017bb0:	e59d0004 	ldr	r0, [sp, #4]
40017bb4:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017bb8:	e0800001 	add	r0, r0, r1
40017bbc:	e58d0014 	str	r0, [sp, #20]
40017bc0:	e59d0010 	ldr	r0, [sp, #16]
40017bc4:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017bc8:	e0400001 	sub	r0, r0, r1
40017bcc:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017bd0:	e0400001 	sub	r0, r0, r1
40017bd4:	e58d0020 	str	r0, [sp, #32]
40017bd8:	e2841014 	add	r1, r4, #20
40017bdc:	e0811089 	add	r1, r1, r9, lsl #1
40017be0:	e1d100b0 	ldrh	r0, [r1]
40017be4:	e28d1014 	add	r1, sp, #20
40017be8:	eb002b4d 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017bec:	e59d0004 	ldr	r0, [sp, #4]
40017bf0:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017bf4:	e0800001 	add	r0, r0, r1
40017bf8:	e58d0004 	str	r0, [sp, #4]
40017bfc:	e1d400b6 	ldrh	r0, [r4, #6]
40017c00:	e280000f 	add	r0, r0, #15
40017c04:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017c08:	e0400001 	sub	r0, r0, r1
40017c0c:	e59f10b4 	ldr	r1, [pc, #180]	; 40017cc8 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e4>
40017c10:	e0000001 	and	r0, r0, r1
40017c14:	e58d0010 	str	r0, [sp, #16]
40017c18:	e59d000c 	ldr	r0, [sp, #12]
40017c1c:	e1a00800 	lsl	r0, r0, #16
40017c20:	e1a00820 	lsr	r0, r0, #16
40017c24:	e58d000c 	str	r0, [sp, #12]
40017c28:	e2841014 	add	r1, r4, #20
40017c2c:	e0811089 	add	r1, r1, r9, lsl #1
40017c30:	e59d000c 	ldr	r0, [sp, #12]
40017c34:	e1d110b0 	ldrh	r1, [r1]
40017c38:	e1800801 	orr	r0, r0, r1, lsl #16
40017c3c:	e58d000c 	str	r0, [sp, #12]
40017c40:	e28d1004 	add	r1, sp, #4
40017c44:	e1a00008 	mov	r0, r8
40017c48:	eb002b35 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017c4c:	e59d000c 	ldr	r0, [sp, #12]
40017c50:	e1a08800 	lsl	r8, r0, #16
40017c54:	e1a08828 	lsr	r8, r8, #16
40017c58:	e59d001c 	ldr	r0, [sp, #28]
40017c5c:	e59f1068 	ldr	r1, [pc, #104]	; 40017ccc <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x2e8>
40017c60:	e0010820 	and	r0, r1, r0, lsr #16
40017c64:	e2841014 	add	r1, r4, #20
40017c68:	e0811089 	add	r1, r1, r9, lsl #1
40017c6c:	e1c100b0 	strh	r0, [r1]
40017c70:	e2890001 	add	r0, r9, #1
40017c74:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017c78:	e1d400ba 	ldrh	r0, [r4, #10]
40017c7c:	e1500009 	cmp	r0, r9
40017c80:	caffffb2 	bgt	40017b50 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x16c>
40017c84:	e2870001 	add	r0, r7, #1
40017c88:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017c8c:	e1d400b8 	ldrh	r0, [r4, #8]
40017c90:	e1500007 	cmp	r0, r7
40017c94:	caffffab 	bgt	40017b48 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x164>
40017c98:	e1a00004 	mov	r0, r4
40017c9c:	eb000509 	bl	400190c8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40017ca0:	e1d401b4 	ldrh	r0, [r4, #20]
40017ca4:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017ca8:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017cac:	e1d401bc 	ldrh	r0, [r4, #28]
40017cb0:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017cb4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017cb8:	e2840034 	add	r0, r4, #52	; 0x34
40017cbc:	eb002a85 	bl	400226d8 <CyU3PDmaDscrGet>
40017cc0:	e3a00000 	mov	r0, #0
40017cc4:	eaffff5a 	b	40017a34 <CyU3PDmaMultiChannelConfigure_TypeManyToOne+0x50>
40017cc8:	0000fff0 	.word	0x0000fff0
40017ccc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelConfigure_TypeOneToMany:

40017cd0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>:
40017cd0:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40017cd4:	e24dd024 	sub	sp, sp, #36	; 0x24
40017cd8:	e1a04000 	mov	r4, r0
40017cdc:	e3a06cff 	mov	r6, #65280	; 0xff00
40017ce0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40017ce4:	e3a01101 	mov	r1, #1073741824	; 0x40000000
40017ce8:	e1810800 	orr	r0, r1, r0, lsl #16
40017cec:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40017cf0:	e1866000 	orr	r6, r6, r0
40017cf4:	e1d400b8 	ldrh	r0, [r4, #8]
40017cf8:	e1d430ba 	ldrh	r3, [r4, #10]
40017cfc:	e0000093 	mul	r0, r3, r0
40017d00:	e1a01800 	lsl	r1, r0, #16
40017d04:	e1a01821 	lsr	r1, r1, #16
40017d08:	e1d420b6 	ldrh	r2, [r4, #6]
40017d0c:	e1a03006 	mov	r3, r6
40017d10:	e2840014 	add	r0, r4, #20
40017d14:	eb0029f8 	bl	400224fc <CyU3PDmaDscrChainCreate>
40017d18:	e1a05000 	mov	r5, r0
40017d1c:	e3550000 	cmp	r5, #0
40017d20:	0a000002 	beq	40017d30 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x60>
40017d24:	e1a00005 	mov	r0, r5
40017d28:	e28dd024 	add	sp, sp, #36	; 0x24
40017d2c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40017d30:	e1d400b4 	ldrh	r0, [r4, #4]
40017d34:	e3500006 	cmp	r0, #6
40017d38:	1a00003a 	bne	40017e28 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x158>
40017d3c:	e3a07000 	mov	r7, #0
40017d40:	e1d481b4 	ldrh	r8, [r4, #20]
40017d44:	ea000033 	b	40017e18 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x148>
40017d48:	e3a09000 	mov	r9, #0
40017d4c:	ea00002c 	b	40017e04 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x134>
40017d50:	e28d1014 	add	r1, sp, #20
40017d54:	e1a00008 	mov	r0, r8
40017d58:	eb002ad6 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017d5c:	e3570000 	cmp	r7, #0
40017d60:	1a000003 	bne	40017d74 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0xa4>
40017d64:	e284001c 	add	r0, r4, #28
40017d68:	e0800089 	add	r0, r0, r9, lsl #1
40017d6c:	e1c080b0 	strh	r8, [r0]
40017d70:	ea00001e 	b	40017df0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x120>
40017d74:	e284101c 	add	r1, r4, #28
40017d78:	e0811089 	add	r1, r1, r9, lsl #1
40017d7c:	e1d100b0 	ldrh	r0, [r1]
40017d80:	e28d1004 	add	r1, sp, #4
40017d84:	eb002acb 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017d88:	e59d0008 	ldr	r0, [sp, #8]
40017d8c:	e1a00720 	lsr	r0, r0, #14
40017d90:	e1a00700 	lsl	r0, r0, #14
40017d94:	e58d0008 	str	r0, [sp, #8]
40017d98:	e284102c 	add	r1, r4, #44	; 0x2c
40017d9c:	e0811089 	add	r1, r1, r9, lsl #1
40017da0:	e59d0008 	ldr	r0, [sp, #8]
40017da4:	e1d110b0 	ldrh	r1, [r1]
40017da8:	e3811903 	orr	r1, r1, #49152	; 0xc000
40017dac:	e1800001 	orr	r0, r0, r1
40017db0:	e58d0008 	str	r0, [sp, #8]
40017db4:	e59d000c 	ldr	r0, [sp, #12]
40017db8:	e1a00820 	lsr	r0, r0, #16
40017dbc:	e1a00800 	lsl	r0, r0, #16
40017dc0:	e58d000c 	str	r0, [sp, #12]
40017dc4:	e59d000c 	ldr	r0, [sp, #12]
40017dc8:	e1800008 	orr	r0, r0, r8
40017dcc:	e58d000c 	str	r0, [sp, #12]
40017dd0:	e284101c 	add	r1, r4, #28
40017dd4:	e0811089 	add	r1, r1, r9, lsl #1
40017dd8:	e1d100b0 	ldrh	r0, [r1]
40017ddc:	e28d1004 	add	r1, sp, #4
40017de0:	eb002acf 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017de4:	e284001c 	add	r0, r4, #28
40017de8:	e0800089 	add	r0, r0, r9, lsl #1
40017dec:	e1c080b0 	strh	r8, [r0]
40017df0:	e59d001c 	ldr	r0, [sp, #28]
40017df4:	e59f11c4 	ldr	r1, [pc, #452]	; 40017fc0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017df8:	e0018820 	and	r8, r1, r0, lsr #16
40017dfc:	e2890001 	add	r0, r9, #1
40017e00:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017e04:	e1d400ba 	ldrh	r0, [r4, #10]
40017e08:	e1500009 	cmp	r0, r9
40017e0c:	caffffcf 	bgt	40017d50 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x80>
40017e10:	e2870001 	add	r0, r7, #1
40017e14:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017e18:	e1d400b8 	ldrh	r0, [r4, #8]
40017e1c:	e1500007 	cmp	r0, r7
40017e20:	aaffffc8 	bge	40017d48 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x78>
40017e24:	ea000059 	b	40017f90 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2c0>
40017e28:	e3a07000 	mov	r7, #0
40017e2c:	e1d481b4 	ldrh	r8, [r4, #20]
40017e30:	ea000053 	b	40017f84 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2b4>
40017e34:	e3a09000 	mov	r9, #0
40017e38:	ea00004c 	b	40017f70 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2a0>
40017e3c:	e3570000 	cmp	r7, #0
40017e40:	1a00000b 	bne	40017e74 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x1a4>
40017e44:	e284002c 	add	r0, r4, #44	; 0x2c
40017e48:	e0800089 	add	r0, r0, r9, lsl #1
40017e4c:	e1d000b0 	ldrh	r0, [r0]
40017e50:	e3806903 	orr	r6, r0, #49152	; 0xc000
40017e54:	e38664ff 	orr	r6, r6, #-16777216	; 0xff000000
40017e58:	e3866801 	orr	r6, r6, #65536	; 0x10000
40017e5c:	e1d410b8 	ldrh	r1, [r4, #8]
40017e60:	e284201c 	add	r2, r4, #28
40017e64:	e0820089 	add	r0, r2, r9, lsl #1
40017e68:	e1a03006 	mov	r3, r6
40017e6c:	e3a02000 	mov	r2, #0
40017e70:	eb0029a1 	bl	400224fc <CyU3PDmaDscrChainCreate>
40017e74:	e284101c 	add	r1, r4, #28
40017e78:	e0811089 	add	r1, r1, r9, lsl #1
40017e7c:	e1d100b0 	ldrh	r0, [r1]
40017e80:	e28d1004 	add	r1, sp, #4
40017e84:	eb002a8b 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017e88:	e28d1014 	add	r1, sp, #20
40017e8c:	e1a00008 	mov	r0, r8
40017e90:	eb002a88 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40017e94:	e59d0014 	ldr	r0, [sp, #20]
40017e98:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017e9c:	e0800001 	add	r0, r0, r1
40017ea0:	e58d0004 	str	r0, [sp, #4]
40017ea4:	e1d400b6 	ldrh	r0, [r4, #6]
40017ea8:	e280000f 	add	r0, r0, #15
40017eac:	e1d415b2 	ldrh	r1, [r4, #82]	; 0x52
40017eb0:	e0400001 	sub	r0, r0, r1
40017eb4:	e59f1108 	ldr	r1, [pc, #264]	; 40017fc4 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f4>
40017eb8:	e0000001 	and	r0, r0, r1
40017ebc:	e58d0010 	str	r0, [sp, #16]
40017ec0:	e59d000c 	ldr	r0, [sp, #12]
40017ec4:	e1a00800 	lsl	r0, r0, #16
40017ec8:	e1a00820 	lsr	r0, r0, #16
40017ecc:	e58d000c 	str	r0, [sp, #12]
40017ed0:	e59d000c 	ldr	r0, [sp, #12]
40017ed4:	e1800808 	orr	r0, r0, r8, lsl #16
40017ed8:	e58d000c 	str	r0, [sp, #12]
40017edc:	e284101c 	add	r1, r4, #28
40017ee0:	e0811089 	add	r1, r1, r9, lsl #1
40017ee4:	e1d100b0 	ldrh	r0, [r1]
40017ee8:	e28d1004 	add	r1, sp, #4
40017eec:	eb002a8c 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017ef0:	e59d0014 	ldr	r0, [sp, #20]
40017ef4:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017ef8:	e0800001 	add	r0, r0, r1
40017efc:	e58d0014 	str	r0, [sp, #20]
40017f00:	e1d400b6 	ldrh	r0, [r4, #6]
40017f04:	e1d414be 	ldrh	r1, [r4, #78]	; 0x4e
40017f08:	e0400001 	sub	r0, r0, r1
40017f0c:	e1d415b0 	ldrh	r1, [r4, #80]	; 0x50
40017f10:	e0400001 	sub	r0, r0, r1
40017f14:	e58d0020 	str	r0, [sp, #32]
40017f18:	e59d001c 	ldr	r0, [sp, #28]
40017f1c:	e1a00820 	lsr	r0, r0, #16
40017f20:	e1a00800 	lsl	r0, r0, #16
40017f24:	e58d001c 	str	r0, [sp, #28]
40017f28:	e284101c 	add	r1, r4, #28
40017f2c:	e0811089 	add	r1, r1, r9, lsl #1
40017f30:	e59d001c 	ldr	r0, [sp, #28]
40017f34:	e1d110b0 	ldrh	r1, [r1]
40017f38:	e1800001 	orr	r0, r0, r1
40017f3c:	e58d001c 	str	r0, [sp, #28]
40017f40:	e28d1014 	add	r1, sp, #20
40017f44:	e1a00008 	mov	r0, r8
40017f48:	eb002a75 	bl	40022924 <CyU3PDmaDscrSetConfig>
40017f4c:	e59d001c 	ldr	r0, [sp, #28]
40017f50:	e59f1068 	ldr	r1, [pc, #104]	; 40017fc0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x2f0>
40017f54:	e0018820 	and	r8, r1, r0, lsr #16
40017f58:	e284101c 	add	r1, r4, #28
40017f5c:	e0811089 	add	r1, r1, r9, lsl #1
40017f60:	e59d000c 	ldr	r0, [sp, #12]
40017f64:	e1c100b0 	strh	r0, [r1]
40017f68:	e2890001 	add	r0, r9, #1
40017f6c:	e3c09801 	bic	r9, r0, #65536	; 0x10000
40017f70:	e1d400ba 	ldrh	r0, [r4, #10]
40017f74:	e1500009 	cmp	r0, r9
40017f78:	caffffaf 	bgt	40017e3c <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x16c>
40017f7c:	e2870001 	add	r0, r7, #1
40017f80:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40017f84:	e1d400b8 	ldrh	r0, [r4, #8]
40017f88:	e1500007 	cmp	r0, r7
40017f8c:	caffffa8 	bgt	40017e34 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x164>
40017f90:	e1d401b4 	ldrh	r0, [r4, #20]
40017f94:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40017f98:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40017f9c:	e1d401bc 	ldrh	r0, [r4, #28]
40017fa0:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40017fa4:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40017fa8:	e2840034 	add	r0, r4, #52	; 0x34
40017fac:	eb0029c9 	bl	400226d8 <CyU3PDmaDscrGet>
40017fb0:	e1a00004 	mov	r0, r4
40017fb4:	eb0004a3 	bl	40019248 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
40017fb8:	e3a00000 	mov	r0, #0
40017fbc:	eaffff59 	b	40017d28 <CyU3PDmaMultiChannelConfigure_TypeOneToMany+0x58>
40017fc0:	0000ffff 	.word	0x0000ffff
40017fc4:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaMultiChannelCreate:

40017fc8 <CyU3PDmaMultiChannelCreate>:
40017fc8:	e92d5ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40017fcc:	e1a04000 	mov	r4, r0
40017fd0:	e1a05001 	mov	r5, r1
40017fd4:	e1a06002 	mov	r6, r2
40017fd8:	e3560000 	cmp	r6, #0
40017fdc:	1a000001 	bne	40017fe8 <CyU3PDmaMultiChannelCreate+0x20>
40017fe0:	e3a00041 	mov	r0, #65	; 0x41
40017fe4:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40017fe8:	e3540000 	cmp	r4, #0
40017fec:	1a000001 	bne	40017ff8 <CyU3PDmaMultiChannelCreate+0x30>
40017ff0:	e3a00041 	mov	r0, #65	; 0x41
40017ff4:	eafffffa 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40017ff8:	e1d600b2 	ldrh	r0, [r6, #2]
40017ffc:	e3500000 	cmp	r0, #0
40018000:	1a000001 	bne	4001800c <CyU3PDmaMultiChannelCreate+0x44>
40018004:	e3a00040 	mov	r0, #64	; 0x40
40018008:	eafffff5 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
4001800c:	e1d600b4 	ldrh	r0, [r6, #4]
40018010:	e3500002 	cmp	r0, #2
40018014:	ba000002 	blt	40018024 <CyU3PDmaMultiChannelCreate+0x5c>
40018018:	e1d600b4 	ldrh	r0, [r6, #4]
4001801c:	e3500004 	cmp	r0, #4
40018020:	da000001 	ble	4001802c <CyU3PDmaMultiChannelCreate+0x64>
40018024:	e3a00040 	mov	r0, #64	; 0x40
40018028:	eaffffed 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
4001802c:	e3550006 	cmp	r5, #6
40018030:	0a000001 	beq	4001803c <CyU3PDmaMultiChannelCreate+0x74>
40018034:	e3550005 	cmp	r5, #5
40018038:	1a000007 	bne	4001805c <CyU3PDmaMultiChannelCreate+0x94>
4001803c:	eb0029dd 	bl	400227b8 <CyU3PDmaDscrGetFreeCount>
40018040:	e1d610b2 	ldrh	r1, [r6, #2]
40018044:	e1d620b4 	ldrh	r2, [r6, #4]
40018048:	e0010192 	mul	r1, r2, r1
4001804c:	e1500001 	cmp	r0, r1
40018050:	ca000016 	bgt	400180b0 <CyU3PDmaMultiChannelCreate+0xe8>
40018054:	e3a00010 	mov	r0, #16
40018058:	eaffffe1 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
4001805c:	e3550008 	cmp	r5, #8
40018060:	0a000001 	beq	4001806c <CyU3PDmaMultiChannelCreate+0xa4>
40018064:	e3550007 	cmp	r5, #7
40018068:	1a000007 	bne	4001808c <CyU3PDmaMultiChannelCreate+0xc4>
4001806c:	eb0029d1 	bl	400227b8 <CyU3PDmaDscrGetFreeCount>
40018070:	e1d610b2 	ldrh	r1, [r6, #2]
40018074:	e1d620b4 	ldrh	r2, [r6, #4]
40018078:	e0010192 	mul	r1, r2, r1
4001807c:	e1500081 	cmp	r0, r1, lsl #1
40018080:	ca00000a 	bgt	400180b0 <CyU3PDmaMultiChannelCreate+0xe8>
40018084:	e3a00010 	mov	r0, #16
40018088:	eaffffd5 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
4001808c:	eb0029c9 	bl	400227b8 <CyU3PDmaDscrGetFreeCount>
40018090:	e1d610b2 	ldrh	r1, [r6, #2]
40018094:	e1d620b4 	ldrh	r2, [r6, #4]
40018098:	e2822001 	add	r2, r2, #1
4001809c:	e0010192 	mul	r1, r2, r1
400180a0:	e1500001 	cmp	r0, r1
400180a4:	ca000001 	bgt	400180b0 <CyU3PDmaMultiChannelCreate+0xe8>
400180a8:	e3a00010 	mov	r0, #16
400180ac:	eaffffcc 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400180b0:	e1d600b0 	ldrh	r0, [r6]
400180b4:	e3500000 	cmp	r0, #0
400180b8:	0a000003 	beq	400180cc <CyU3PDmaMultiChannelCreate+0x104>
400180bc:	e1d600b0 	ldrh	r0, [r6]
400180c0:	e59f1634 	ldr	r1, [pc, #1588]	; 400186fc <CyU3PDmaMultiChannelCreate+0x734>
400180c4:	e1500001 	cmp	r0, r1
400180c8:	da000001 	ble	400180d4 <CyU3PDmaMultiChannelCreate+0x10c>
400180cc:	e3a00040 	mov	r0, #64	; 0x40
400180d0:	eaffffc3 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400180d4:	e3550005 	cmp	r5, #5
400180d8:	0a000001 	beq	400180e4 <CyU3PDmaMultiChannelCreate+0x11c>
400180dc:	e3550006 	cmp	r5, #6
400180e0:	1a000004 	bne	400180f8 <CyU3PDmaMultiChannelCreate+0x130>
400180e4:	e1d600b0 	ldrh	r0, [r6]
400180e8:	e310000f 	tst	r0, #15
400180ec:	0a00000b 	beq	40018120 <CyU3PDmaMultiChannelCreate+0x158>
400180f0:	e3a00040 	mov	r0, #64	; 0x40
400180f4:	eaffffba 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400180f8:	e1d600b0 	ldrh	r0, [r6]
400180fc:	e1d611b8 	ldrh	r1, [r6, #24]
40018100:	e0400001 	sub	r0, r0, r1
40018104:	e1d611ba 	ldrh	r1, [r6, #26]
40018108:	e0400001 	sub	r0, r0, r1
4001810c:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40018110:	e3d00eff 	bics	r0, r0, #4080	; 0xff0
40018114:	0a000001 	beq	40018120 <CyU3PDmaMultiChannelCreate+0x158>
40018118:	e3a00040 	mov	r0, #64	; 0x40
4001811c:	eaffffb0 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40018120:	e5d6001e 	ldrb	r0, [r6, #30]
40018124:	e3500002 	cmp	r0, #2
40018128:	ba000001 	blt	40018134 <CyU3PDmaMultiChannelCreate+0x16c>
4001812c:	e3a00040 	mov	r0, #64	; 0x40
40018130:	eaffffab 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40018134:	e3550005 	cmp	r5, #5
40018138:	0a000001 	beq	40018144 <CyU3PDmaMultiChannelCreate+0x17c>
4001813c:	e3550007 	cmp	r5, #7
40018140:	1a000065 	bne	400182dc <CyU3PDmaMultiChannelCreate+0x314>
40018144:	e1d601b6 	ldrh	r0, [r6, #22]
40018148:	e3500000 	cmp	r0, #0
4001814c:	0a000008 	beq	40018174 <CyU3PDmaMultiChannelCreate+0x1ac>
40018150:	e1d601b6 	ldrh	r0, [r6, #22]
40018154:	e1d610b2 	ldrh	r1, [r6, #2]
40018158:	e1500001 	cmp	r0, r1
4001815c:	aa000002 	bge	4001816c <CyU3PDmaMultiChannelCreate+0x1a4>
40018160:	e1d600b2 	ldrh	r0, [r6, #2]
40018164:	e350001f 	cmp	r0, #31
40018168:	da000001 	ble	40018174 <CyU3PDmaMultiChannelCreate+0x1ac>
4001816c:	e3a00040 	mov	r0, #64	; 0x40
40018170:	eaffff9b 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40018174:	e3a09000 	mov	r9, #0
40018178:	ea00002b 	b	4001822c <CyU3PDmaMultiChannelCreate+0x264>
4001817c:	e2860006 	add	r0, r6, #6
40018180:	e0800089 	add	r0, r0, r9, lsl #1
40018184:	e1d000b0 	ldrh	r0, [r0]
40018188:	e3a0103f 	mov	r1, #63	; 0x3f
4001818c:	e0018440 	and	r8, r1, r0, asr #8
40018190:	e2860006 	add	r0, r6, #6
40018194:	e0800089 	add	r0, r0, r9, lsl #1
40018198:	e1d000b0 	ldrh	r0, [r0]
4001819c:	e20070ff 	and	r7, r0, #255	; 0xff
400181a0:	e2861006 	add	r1, r6, #6
400181a4:	e0811089 	add	r1, r1, r9, lsl #1
400181a8:	e1d100b0 	ldrh	r0, [r1]
400181ac:	ebfff3c4 	bl	400150c4 <CyU3PDmaSocketIsValidProducer>
400181b0:	e3500000 	cmp	r0, #0
400181b4:	1a000001 	bne	400181c0 <CyU3PDmaMultiChannelCreate+0x1f8>
400181b8:	e3a00040 	mov	r0, #64	; 0x40
400181bc:	eaffff88 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400181c0:	e59f0538 	ldr	r0, [pc, #1336]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
400181c4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400181c8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400181cc:	e3500000 	cmp	r0, #0
400181d0:	0a000001 	beq	400181dc <CyU3PDmaMultiChannelCreate+0x214>
400181d4:	e3a00040 	mov	r0, #64	; 0x40
400181d8:	eaffff81 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400181dc:	e2890001 	add	r0, r9, #1
400181e0:	e200a0ff 	and	sl, r0, #255	; 0xff
400181e4:	ea00000b 	b	40018218 <CyU3PDmaMultiChannelCreate+0x250>
400181e8:	e2860006 	add	r0, r6, #6
400181ec:	e0800089 	add	r0, r0, r9, lsl #1
400181f0:	e1d000b0 	ldrh	r0, [r0]
400181f4:	e2861006 	add	r1, r6, #6
400181f8:	e081108a 	add	r1, r1, sl, lsl #1
400181fc:	e1d110b0 	ldrh	r1, [r1]
40018200:	e1500001 	cmp	r0, r1
40018204:	1a000001 	bne	40018210 <CyU3PDmaMultiChannelCreate+0x248>
40018208:	e3a00040 	mov	r0, #64	; 0x40
4001820c:	eaffff74 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40018210:	e28a0001 	add	r0, sl, #1
40018214:	e200a0ff 	and	sl, r0, #255	; 0xff
40018218:	e1d600b4 	ldrh	r0, [r6, #4]
4001821c:	e150000a 	cmp	r0, sl
40018220:	cafffff0 	bgt	400181e8 <CyU3PDmaMultiChannelCreate+0x220>
40018224:	e2890001 	add	r0, r9, #1
40018228:	e20090ff 	and	r9, r0, #255	; 0xff
4001822c:	e1d600b4 	ldrh	r0, [r6, #4]
40018230:	e1500009 	cmp	r0, r9
40018234:	caffffd0 	bgt	4001817c <CyU3PDmaMultiChannelCreate+0x1b4>
40018238:	e1d600be 	ldrh	r0, [r6, #14]
4001823c:	e3a0103f 	mov	r1, #63	; 0x3f
40018240:	e0018440 	and	r8, r1, r0, asr #8
40018244:	e1d600be 	ldrh	r0, [r6, #14]
40018248:	e20070ff 	and	r7, r0, #255	; 0xff
4001824c:	e1d600be 	ldrh	r0, [r6, #14]
40018250:	ebfff363 	bl	40014fe4 <CyU3PDmaSocketIsValidConsumer>
40018254:	e3500000 	cmp	r0, #0
40018258:	1a000001 	bne	40018264 <CyU3PDmaMultiChannelCreate+0x29c>
4001825c:	e3a00040 	mov	r0, #64	; 0x40
40018260:	eaffff5f 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40018264:	e59f0494 	ldr	r0, [pc, #1172]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
40018268:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001826c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018270:	e3500000 	cmp	r0, #0
40018274:	0a000001 	beq	40018280 <CyU3PDmaMultiChannelCreate+0x2b8>
40018278:	e3a00040 	mov	r0, #64	; 0x40
4001827c:	eaffff58 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40018280:	e59f0478 	ldr	r0, [pc, #1144]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
40018284:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018288:	e7804107 	str	r4, [r0, r7, lsl #2]
4001828c:	e3a09000 	mov	r9, #0
40018290:	ea00000d 	b	400182cc <CyU3PDmaMultiChannelCreate+0x304>
40018294:	e2860006 	add	r0, r6, #6
40018298:	e0800089 	add	r0, r0, r9, lsl #1
4001829c:	e1d000b0 	ldrh	r0, [r0]
400182a0:	e3a0103f 	mov	r1, #63	; 0x3f
400182a4:	e0018440 	and	r8, r1, r0, asr #8
400182a8:	e2860006 	add	r0, r6, #6
400182ac:	e0800089 	add	r0, r0, r9, lsl #1
400182b0:	e1d000b0 	ldrh	r0, [r0]
400182b4:	e20070ff 	and	r7, r0, #255	; 0xff
400182b8:	e59f0440 	ldr	r0, [pc, #1088]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
400182bc:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400182c0:	e7804107 	str	r4, [r0, r7, lsl #2]
400182c4:	e2890001 	add	r0, r9, #1
400182c8:	e20090ff 	and	r9, r0, #255	; 0xff
400182cc:	e1d600b4 	ldrh	r0, [r6, #4]
400182d0:	e1500009 	cmp	r0, r9
400182d4:	caffffee 	bgt	40018294 <CyU3PDmaMultiChannelCreate+0x2cc>
400182d8:	ea00005d 	b	40018454 <CyU3PDmaMultiChannelCreate+0x48c>
400182dc:	e1d601b6 	ldrh	r0, [r6, #22]
400182e0:	e3500000 	cmp	r0, #0
400182e4:	0a000001 	beq	400182f0 <CyU3PDmaMultiChannelCreate+0x328>
400182e8:	e3a00040 	mov	r0, #64	; 0x40
400182ec:	eaffff3c 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400182f0:	e3a09000 	mov	r9, #0
400182f4:	ea00002b 	b	400183a8 <CyU3PDmaMultiChannelCreate+0x3e0>
400182f8:	e286000e 	add	r0, r6, #14
400182fc:	e0800089 	add	r0, r0, r9, lsl #1
40018300:	e1d000b0 	ldrh	r0, [r0]
40018304:	e3a0103f 	mov	r1, #63	; 0x3f
40018308:	e0018440 	and	r8, r1, r0, asr #8
4001830c:	e286000e 	add	r0, r6, #14
40018310:	e0800089 	add	r0, r0, r9, lsl #1
40018314:	e1d000b0 	ldrh	r0, [r0]
40018318:	e20070ff 	and	r7, r0, #255	; 0xff
4001831c:	e286100e 	add	r1, r6, #14
40018320:	e0811089 	add	r1, r1, r9, lsl #1
40018324:	e1d100b0 	ldrh	r0, [r1]
40018328:	ebfff32d 	bl	40014fe4 <CyU3PDmaSocketIsValidConsumer>
4001832c:	e3500000 	cmp	r0, #0
40018330:	1a000001 	bne	4001833c <CyU3PDmaMultiChannelCreate+0x374>
40018334:	e3a00040 	mov	r0, #64	; 0x40
40018338:	eaffff29 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
4001833c:	e59f03bc 	ldr	r0, [pc, #956]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
40018340:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018344:	e7900107 	ldr	r0, [r0, r7, lsl #2]
40018348:	e3500000 	cmp	r0, #0
4001834c:	0a000001 	beq	40018358 <CyU3PDmaMultiChannelCreate+0x390>
40018350:	e3a00040 	mov	r0, #64	; 0x40
40018354:	eaffff22 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
40018358:	e2890001 	add	r0, r9, #1
4001835c:	e200a0ff 	and	sl, r0, #255	; 0xff
40018360:	ea00000b 	b	40018394 <CyU3PDmaMultiChannelCreate+0x3cc>
40018364:	e286000e 	add	r0, r6, #14
40018368:	e0800089 	add	r0, r0, r9, lsl #1
4001836c:	e1d000b0 	ldrh	r0, [r0]
40018370:	e286100e 	add	r1, r6, #14
40018374:	e081108a 	add	r1, r1, sl, lsl #1
40018378:	e1d110b0 	ldrh	r1, [r1]
4001837c:	e1500001 	cmp	r0, r1
40018380:	1a000001 	bne	4001838c <CyU3PDmaMultiChannelCreate+0x3c4>
40018384:	e3a00040 	mov	r0, #64	; 0x40
40018388:	eaffff15 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
4001838c:	e28a0001 	add	r0, sl, #1
40018390:	e200a0ff 	and	sl, r0, #255	; 0xff
40018394:	e1d600b4 	ldrh	r0, [r6, #4]
40018398:	e150000a 	cmp	r0, sl
4001839c:	cafffff0 	bgt	40018364 <CyU3PDmaMultiChannelCreate+0x39c>
400183a0:	e2890001 	add	r0, r9, #1
400183a4:	e20090ff 	and	r9, r0, #255	; 0xff
400183a8:	e1d600b4 	ldrh	r0, [r6, #4]
400183ac:	e1500009 	cmp	r0, r9
400183b0:	caffffd0 	bgt	400182f8 <CyU3PDmaMultiChannelCreate+0x330>
400183b4:	e1d600b6 	ldrh	r0, [r6, #6]
400183b8:	e3a0103f 	mov	r1, #63	; 0x3f
400183bc:	e0018440 	and	r8, r1, r0, asr #8
400183c0:	e1d600b6 	ldrh	r0, [r6, #6]
400183c4:	e20070ff 	and	r7, r0, #255	; 0xff
400183c8:	e1d600b6 	ldrh	r0, [r6, #6]
400183cc:	ebfff33c 	bl	400150c4 <CyU3PDmaSocketIsValidProducer>
400183d0:	e3500000 	cmp	r0, #0
400183d4:	1a000001 	bne	400183e0 <CyU3PDmaMultiChannelCreate+0x418>
400183d8:	e3a00040 	mov	r0, #64	; 0x40
400183dc:	eaffff00 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400183e0:	e59f0318 	ldr	r0, [pc, #792]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
400183e4:	e7900108 	ldr	r0, [r0, r8, lsl #2]
400183e8:	e7900107 	ldr	r0, [r0, r7, lsl #2]
400183ec:	e3500000 	cmp	r0, #0
400183f0:	0a000001 	beq	400183fc <CyU3PDmaMultiChannelCreate+0x434>
400183f4:	e3a00040 	mov	r0, #64	; 0x40
400183f8:	eafffef9 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400183fc:	e59f02fc 	ldr	r0, [pc, #764]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
40018400:	e7900108 	ldr	r0, [r0, r8, lsl #2]
40018404:	e7804107 	str	r4, [r0, r7, lsl #2]
40018408:	e3a09000 	mov	r9, #0
4001840c:	ea00000d 	b	40018448 <CyU3PDmaMultiChannelCreate+0x480>
40018410:	e286000e 	add	r0, r6, #14
40018414:	e0800089 	add	r0, r0, r9, lsl #1
40018418:	e1d000b0 	ldrh	r0, [r0]
4001841c:	e3a0103f 	mov	r1, #63	; 0x3f
40018420:	e0018440 	and	r8, r1, r0, asr #8
40018424:	e286000e 	add	r0, r6, #14
40018428:	e0800089 	add	r0, r0, r9, lsl #1
4001842c:	e1d000b0 	ldrh	r0, [r0]
40018430:	e20070ff 	and	r7, r0, #255	; 0xff
40018434:	e59f02c4 	ldr	r0, [pc, #708]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
40018438:	e7900108 	ldr	r0, [r0, r8, lsl #2]
4001843c:	e7804107 	str	r4, [r0, r7, lsl #2]
40018440:	e2890001 	add	r0, r9, #1
40018444:	e20090ff 	and	r9, r0, #255	; 0xff
40018448:	e1d600b4 	ldrh	r0, [r6, #4]
4001844c:	e1500009 	cmp	r0, r9
40018450:	caffffee 	bgt	40018410 <CyU3PDmaMultiChannelCreate+0x448>
40018454:	e1c450b4 	strh	r5, [r4, #4]
40018458:	e1d600b0 	ldrh	r0, [r6]
4001845c:	e1c400b6 	strh	r0, [r4, #6]
40018460:	e1d600b2 	ldrh	r0, [r6, #2]
40018464:	e1c400b8 	strh	r0, [r4, #8]
40018468:	e1d601b6 	ldrh	r0, [r6, #22]
4001846c:	e1c405b4 	strh	r0, [r4, #84]	; 0x54
40018470:	e1d600b4 	ldrh	r0, [r6, #4]
40018474:	e1c400ba 	strh	r0, [r4, #10]
40018478:	e3a09000 	mov	r9, #0
4001847c:	ea000014 	b	400184d4 <CyU3PDmaMultiChannelCreate+0x50c>
40018480:	e2860006 	add	r0, r6, #6
40018484:	e0800089 	add	r0, r0, r9, lsl #1
40018488:	e1d000b0 	ldrh	r0, [r0]
4001848c:	e2841024 	add	r1, r4, #36	; 0x24
40018490:	e0811089 	add	r1, r1, r9, lsl #1
40018494:	e1c100b0 	strh	r0, [r1]
40018498:	e286000e 	add	r0, r6, #14
4001849c:	e0800089 	add	r0, r0, r9, lsl #1
400184a0:	e1d000b0 	ldrh	r0, [r0]
400184a4:	e284102c 	add	r1, r4, #44	; 0x2c
400184a8:	e0811089 	add	r1, r1, r9, lsl #1
400184ac:	e1c100b0 	strh	r0, [r1]
400184b0:	e3a00000 	mov	r0, #0
400184b4:	e284105c 	add	r1, r4, #92	; 0x5c
400184b8:	e0811089 	add	r1, r1, r9, lsl #1
400184bc:	e1c100b0 	strh	r0, [r1]
400184c0:	e2841064 	add	r1, r4, #100	; 0x64
400184c4:	e0811089 	add	r1, r1, r9, lsl #1
400184c8:	e1c100b0 	strh	r0, [r1]
400184cc:	e2890001 	add	r0, r9, #1
400184d0:	e20090ff 	and	r9, r0, #255	; 0xff
400184d4:	e3590004 	cmp	r9, #4
400184d8:	baffffe8 	blt	40018480 <CyU3PDmaMultiChannelCreate+0x4b8>
400184dc:	e1d601b8 	ldrh	r0, [r6, #24]
400184e0:	e1c404be 	strh	r0, [r4, #78]	; 0x4e
400184e4:	e1d601ba 	ldrh	r0, [r6, #26]
400184e8:	e1c405b0 	strh	r0, [r4, #80]	; 0x50
400184ec:	e1d601bc 	ldrh	r0, [r6, #28]
400184f0:	e1c405b2 	strh	r0, [r4, #82]	; 0x52
400184f4:	e5d6001e 	ldrb	r0, [r6, #30]
400184f8:	e1c405b6 	strh	r0, [r4, #86]	; 0x56
400184fc:	e5960020 	ldr	r0, [r6, #32]
40018500:	e584006c 	str	r0, [r4, #108]	; 0x6c
40018504:	e3a03038 	mov	r3, #56	; 0x38
40018508:	e3a02000 	mov	r2, #0
4001850c:	e1a01002 	mov	r1, r2
40018510:	e2840078 	add	r0, r4, #120	; 0x78
40018514:	ebffc6e9 	bl	4000a0c0 <_txe_mutex_create>
40018518:	e3a02028 	mov	r2, #40	; 0x28
4001851c:	e3a01000 	mov	r1, #0
40018520:	e28400b0 	add	r0, r4, #176	; 0xb0
40018524:	ebffc62b 	bl	40009dd8 <_txe_event_flags_create>
40018528:	e5960024 	ldr	r0, [r6, #36]	; 0x24
4001852c:	e58400d8 	str	r0, [r4, #216]	; 0xd8
40018530:	e59f01cc 	ldr	r0, [pc, #460]	; 40018704 <CyU3PDmaMultiChannelCreate+0x73c>
40018534:	e5900000 	ldr	r0, [r0]
40018538:	e5840074 	str	r0, [r4, #116]	; 0x74
4001853c:	e2450005 	sub	r0, r5, #5
40018540:	e3500005 	cmp	r0, #5
40018544:	308ff100 	addcc	pc, pc, r0, lsl #2
40018548:	ea00001d 	b	400185c4 <CyU3PDmaMultiChannelCreate+0x5fc>
4001854c:	ea000003 	b	40018560 <CyU3PDmaMultiChannelCreate+0x598>
40018550:	ea000008 	b	40018578 <CyU3PDmaMultiChannelCreate+0x5b0>
40018554:	ea000003 	b	40018568 <CyU3PDmaMultiChannelCreate+0x5a0>
40018558:	ea000008 	b	40018580 <CyU3PDmaMultiChannelCreate+0x5b8>
4001855c:	ea00000b 	b	40018590 <CyU3PDmaMultiChannelCreate+0x5c8>
40018560:	e1a00000 	nop			; (mov r0, r0)
40018564:	e1a00000 	nop			; (mov r0, r0)
40018568:	e1a00004 	mov	r0, r4
4001856c:	ebfffd1c 	bl	400179e4 <CyU3PDmaMultiChannelConfigure_TypeManyToOne>
40018570:	e1a0b000 	mov	fp, r0
40018574:	ea000015 	b	400185d0 <CyU3PDmaMultiChannelCreate+0x608>
40018578:	e1a00000 	nop			; (mov r0, r0)
4001857c:	e1a00000 	nop			; (mov r0, r0)
40018580:	e1a00004 	mov	r0, r4
40018584:	ebfffdd1 	bl	40017cd0 <CyU3PDmaMultiChannelConfigure_TypeOneToMany>
40018588:	e1a0b000 	mov	fp, r0
4001858c:	ea00000f 	b	400185d0 <CyU3PDmaMultiChannelCreate+0x608>
40018590:	e1a00000 	nop			; (mov r0, r0)
40018594:	e59f016c 	ldr	r0, [pc, #364]	; 40018708 <CyU3PDmaMultiChannelCreate+0x740>
40018598:	e5900000 	ldr	r0, [r0]
4001859c:	e3500000 	cmp	r0, #0
400185a0:	1a000001 	bne	400185ac <CyU3PDmaMultiChannelCreate+0x5e4>
400185a4:	e3a0b047 	mov	fp, #71	; 0x47
400185a8:	ea000004 	b	400185c0 <CyU3PDmaMultiChannelCreate+0x5f8>
400185ac:	e1a00004 	mov	r0, r4
400185b0:	e59f1150 	ldr	r1, [pc, #336]	; 40018708 <CyU3PDmaMultiChannelCreate+0x740>
400185b4:	e5911000 	ldr	r1, [r1]
400185b8:	e12fff31 	blx	r1
400185bc:	e1a0b000 	mov	fp, r0
400185c0:	ea000002 	b	400185d0 <CyU3PDmaMultiChannelCreate+0x608>
400185c4:	e1a00000 	nop			; (mov r0, r0)
400185c8:	e3a0b040 	mov	fp, #64	; 0x40
400185cc:	e1a00000 	nop			; (mov r0, r0)
400185d0:	e1a00000 	nop			; (mov r0, r0)
400185d4:	e35b0000 	cmp	fp, #0
400185d8:	1a000002 	bne	400185e8 <CyU3PDmaMultiChannelCreate+0x620>
400185dc:	e3a00001 	mov	r0, #1
400185e0:	e5840000 	str	r0, [r4]
400185e4:	ea000042 	b	400186f4 <CyU3PDmaMultiChannelCreate+0x72c>
400185e8:	e2840078 	add	r0, r4, #120	; 0x78
400185ec:	ebffc711 	bl	4000a238 <_txe_mutex_delete>
400185f0:	e28400b0 	add	r0, r4, #176	; 0xb0
400185f4:	ebffc647 	bl	40009f18 <_txe_event_flags_delete>
400185f8:	e3550005 	cmp	r5, #5
400185fc:	0a000001 	beq	40018608 <CyU3PDmaMultiChannelCreate+0x640>
40018600:	e3550007 	cmp	r5, #7
40018604:	1a00001d 	bne	40018680 <CyU3PDmaMultiChannelCreate+0x6b8>
40018608:	e1d600be 	ldrh	r0, [r6, #14]
4001860c:	e3a0103f 	mov	r1, #63	; 0x3f
40018610:	e0018440 	and	r8, r1, r0, asr #8
40018614:	e1d600be 	ldrh	r0, [r6, #14]
40018618:	e20070ff 	and	r7, r0, #255	; 0xff
4001861c:	e3a00000 	mov	r0, #0
40018620:	e59f10d8 	ldr	r1, [pc, #216]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
40018624:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018628:	e7810107 	str	r0, [r1, r7, lsl #2]
4001862c:	e3a09000 	mov	r9, #0
40018630:	ea00000e 	b	40018670 <CyU3PDmaMultiChannelCreate+0x6a8>
40018634:	e2860006 	add	r0, r6, #6
40018638:	e0800089 	add	r0, r0, r9, lsl #1
4001863c:	e1d000b0 	ldrh	r0, [r0]
40018640:	e3a0103f 	mov	r1, #63	; 0x3f
40018644:	e0018440 	and	r8, r1, r0, asr #8
40018648:	e2860006 	add	r0, r6, #6
4001864c:	e0800089 	add	r0, r0, r9, lsl #1
40018650:	e1d000b0 	ldrh	r0, [r0]
40018654:	e20070ff 	and	r7, r0, #255	; 0xff
40018658:	e3a00000 	mov	r0, #0
4001865c:	e59f109c 	ldr	r1, [pc, #156]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
40018660:	e7911108 	ldr	r1, [r1, r8, lsl #2]
40018664:	e7810107 	str	r0, [r1, r7, lsl #2]
40018668:	e2890001 	add	r0, r9, #1
4001866c:	e20090ff 	and	r9, r0, #255	; 0xff
40018670:	e1d600b4 	ldrh	r0, [r6, #4]
40018674:	e1500009 	cmp	r0, r9
40018678:	caffffed 	bgt	40018634 <CyU3PDmaMultiChannelCreate+0x66c>
4001867c:	ea00001c 	b	400186f4 <CyU3PDmaMultiChannelCreate+0x72c>
40018680:	e1d600b6 	ldrh	r0, [r6, #6]
40018684:	e3a0103f 	mov	r1, #63	; 0x3f
40018688:	e0018440 	and	r8, r1, r0, asr #8
4001868c:	e1d600b6 	ldrh	r0, [r6, #6]
40018690:	e20070ff 	and	r7, r0, #255	; 0xff
40018694:	e3a00000 	mov	r0, #0
40018698:	e59f1060 	ldr	r1, [pc, #96]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
4001869c:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400186a0:	e7810107 	str	r0, [r1, r7, lsl #2]
400186a4:	e3a09000 	mov	r9, #0
400186a8:	ea00000e 	b	400186e8 <CyU3PDmaMultiChannelCreate+0x720>
400186ac:	e286000e 	add	r0, r6, #14
400186b0:	e0800089 	add	r0, r0, r9, lsl #1
400186b4:	e1d000b0 	ldrh	r0, [r0]
400186b8:	e3a0103f 	mov	r1, #63	; 0x3f
400186bc:	e0018440 	and	r8, r1, r0, asr #8
400186c0:	e286000e 	add	r0, r6, #14
400186c4:	e0800089 	add	r0, r0, r9, lsl #1
400186c8:	e1d000b0 	ldrh	r0, [r0]
400186cc:	e20070ff 	and	r7, r0, #255	; 0xff
400186d0:	e3a00000 	mov	r0, #0
400186d4:	e59f1024 	ldr	r1, [pc, #36]	; 40018700 <CyU3PDmaMultiChannelCreate+0x738>
400186d8:	e7911108 	ldr	r1, [r1, r8, lsl #2]
400186dc:	e7810107 	str	r0, [r1, r7, lsl #2]
400186e0:	e2890001 	add	r0, r9, #1
400186e4:	e20090ff 	and	r9, r0, #255	; 0xff
400186e8:	e1d600b4 	ldrh	r0, [r6, #4]
400186ec:	e1500009 	cmp	r0, r9
400186f0:	caffffed 	bgt	400186ac <CyU3PDmaMultiChannelCreate+0x6e4>
400186f4:	e1a0000b 	mov	r0, fp
400186f8:	eafffe39 	b	40017fe4 <CyU3PDmaMultiChannelCreate+0x1c>
400186fc:	0000fff0 	.word	0x0000fff0
40018700:	40030d00 	.word	0x40030d00
40018704:	40030c64 	.word	0x40030c64
40018708:	40030cec 	.word	0x40030cec

Disassembly of section i.CyU3PDmaMultiChannelReset:

4001870c <CyU3PDmaMultiChannelReset>:
4001870c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40018710:	e1a04000 	mov	r4, r0
40018714:	e3e01000 	mvn	r1, #0
40018718:	e1a00004 	mov	r0, r4
4001871c:	ebfffbab 	bl	400175d0 <CyU3PDmaMultiChannelAcquireLock>
40018720:	e1a06000 	mov	r6, r0
40018724:	e3560000 	cmp	r6, #0
40018728:	0a000001 	beq	40018734 <CyU3PDmaMultiChannelReset+0x28>
4001872c:	e1a00006 	mov	r0, r6
40018730:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40018734:	e1d400b4 	ldrh	r0, [r4, #4]
40018738:	e2400005 	sub	r0, r0, #5
4001873c:	e3500005 	cmp	r0, #5
40018740:	308ff100 	addcc	pc, pc, r0, lsl #2
40018744:	ea00001a 	b	400187b4 <CyU3PDmaMultiChannelReset+0xa8>
40018748:	ea000003 	b	4001875c <CyU3PDmaMultiChannelReset+0x50>
4001874c:	ea000007 	b	40018770 <CyU3PDmaMultiChannelReset+0x64>
40018750:	ea000003 	b	40018764 <CyU3PDmaMultiChannelReset+0x58>
40018754:	ea000007 	b	40018778 <CyU3PDmaMultiChannelReset+0x6c>
40018758:	ea000009 	b	40018784 <CyU3PDmaMultiChannelReset+0x78>
4001875c:	e1a00000 	nop			; (mov r0, r0)
40018760:	e1a00000 	nop			; (mov r0, r0)
40018764:	e1a00004 	mov	r0, r4
40018768:	eb00003c 	bl	40018860 <CyU3PDmaMultiChannelReset_TypeManyToOne>
4001876c:	ea000012 	b	400187bc <CyU3PDmaMultiChannelReset+0xb0>
40018770:	e1a00000 	nop			; (mov r0, r0)
40018774:	e1a00000 	nop			; (mov r0, r0)
40018778:	e1a00004 	mov	r0, r4
4001877c:	eb000083 	bl	40018990 <CyU3PDmaMultiChannelReset_TypeOneToMany>
40018780:	ea00000d 	b	400187bc <CyU3PDmaMultiChannelReset+0xb0>
40018784:	e1a00000 	nop			; (mov r0, r0)
40018788:	e59f00cc 	ldr	r0, [pc, #204]	; 4001885c <CyU3PDmaMultiChannelReset+0x150>
4001878c:	e5900000 	ldr	r0, [r0]
40018790:	e3500000 	cmp	r0, #0
40018794:	1a000001 	bne	400187a0 <CyU3PDmaMultiChannelReset+0x94>
40018798:	e3a00047 	mov	r0, #71	; 0x47
4001879c:	eaffffe3 	b	40018730 <CyU3PDmaMultiChannelReset+0x24>
400187a0:	e1a00004 	mov	r0, r4
400187a4:	e59f10b0 	ldr	r1, [pc, #176]	; 4001885c <CyU3PDmaMultiChannelReset+0x150>
400187a8:	e5911000 	ldr	r1, [r1]
400187ac:	e12fff31 	blx	r1
400187b0:	ea000001 	b	400187bc <CyU3PDmaMultiChannelReset+0xb0>
400187b4:	e1a00000 	nop			; (mov r0, r0)
400187b8:	e1a00000 	nop			; (mov r0, r0)
400187bc:	e1a00000 	nop			; (mov r0, r0)
400187c0:	ebffc0a7 	bl	40008a64 <_tx_thread_identify>
400187c4:	e1a05000 	mov	r5, r0
400187c8:	e3550000 	cmp	r5, #0
400187cc:	0a000003 	beq	400187e0 <CyU3PDmaMultiChannelReset+0xd4>
400187d0:	e1a0200d 	mov	r2, sp
400187d4:	e3a01002 	mov	r1, #2
400187d8:	e1a00005 	mov	r0, r5
400187dc:	ebffc8ae 	bl	4000aa9c <_txe_thread_priority_change>
400187e0:	e3a02002 	mov	r2, #2
400187e4:	e3e01047 	mvn	r1, #71	; 0x47
400187e8:	e28400b0 	add	r0, r4, #176	; 0xb0
400187ec:	ebffc619 	bl	4000a058 <_txe_event_flags_set>
400187f0:	e3a02000 	mov	r2, #0
400187f4:	e3a01020 	mov	r1, #32
400187f8:	e28400b0 	add	r0, r4, #176	; 0xb0
400187fc:	ebffc615 	bl	4000a058 <_txe_event_flags_set>
40018800:	e3a00001 	mov	r0, #1
40018804:	e5840000 	str	r0, [r4]
40018808:	e2840078 	add	r0, r4, #120	; 0x78
4001880c:	ebffc6de 	bl	4000a38c <_txe_mutex_put>
40018810:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
40018814:	e3500000 	cmp	r0, #0
40018818:	0a000007 	beq	4001883c <CyU3PDmaMultiChannelReset+0x130>
4001881c:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
40018820:	e3100020 	tst	r0, #32
40018824:	0a000004 	beq	4001883c <CyU3PDmaMultiChannelReset+0x130>
40018828:	e3a02000 	mov	r2, #0
4001882c:	e3a01020 	mov	r1, #32
40018830:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
40018834:	e1a00004 	mov	r0, r4
40018838:	e12fff33 	blx	r3
4001883c:	e3550000 	cmp	r5, #0
40018840:	0a000003 	beq	40018854 <CyU3PDmaMultiChannelReset+0x148>
40018844:	e1a0200d 	mov	r2, sp
40018848:	e1a00005 	mov	r0, r5
4001884c:	e59d1000 	ldr	r1, [sp]
40018850:	ebffc891 	bl	4000aa9c <_txe_thread_priority_change>
40018854:	e3a00000 	mov	r0, #0
40018858:	eaffffb4 	b	40018730 <CyU3PDmaMultiChannelReset+0x24>
4001885c:	40030cf4 	.word	0x40030cf4

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeManyToOne:

40018860 <CyU3PDmaMultiChannelReset_TypeManyToOne>:
40018860:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018864:	e1a04000 	mov	r4, r0
40018868:	e1a00004 	mov	r0, r4
4001886c:	eb000215 	bl	400190c8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>
40018870:	e1d451bc 	ldrh	r5, [r4, #28]
40018874:	e1d400b8 	ldrh	r0, [r4, #8]
40018878:	e1d410ba 	ldrh	r1, [r4, #10]
4001887c:	e0000091 	mul	r0, r1, r0
40018880:	e1a06800 	lsl	r6, r0, #16
40018884:	e1a06826 	lsr	r6, r6, #16
40018888:	ea00000c 	b	400188c0 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x60>
4001888c:	e1a0100d 	mov	r1, sp
40018890:	e1a00005 	mov	r0, r5
40018894:	eb002807 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40018898:	e59d000c 	ldr	r0, [sp, #12]
4001889c:	e59f10e4 	ldr	r1, [pc, #228]	; 40018988 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
400188a0:	e0000001 	and	r0, r0, r1
400188a4:	e58d000c 	str	r0, [sp, #12]
400188a8:	e1a0100d 	mov	r1, sp
400188ac:	e1a00005 	mov	r0, r5
400188b0:	eb00281b 	bl	40022924 <CyU3PDmaDscrSetConfig>
400188b4:	e59d0008 	ldr	r0, [sp, #8]
400188b8:	e1a05800 	lsl	r5, r0, #16
400188bc:	e1a05825 	lsr	r5, r5, #16
400188c0:	e1b00006 	movs	r0, r6
400188c4:	e2461001 	sub	r1, r6, #1
400188c8:	e1a06801 	lsl	r6, r1, #16
400188cc:	e1a06826 	lsr	r6, r6, #16
400188d0:	1affffed 	bne	4001888c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x2c>
400188d4:	e1d400b4 	ldrh	r0, [r4, #4]
400188d8:	e3500007 	cmp	r0, #7
400188dc:	1a000021 	bne	40018968 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x108>
400188e0:	e3a07000 	mov	r7, #0
400188e4:	ea00001c 	b	4001895c <CyU3PDmaMultiChannelReset_TypeManyToOne+0xfc>
400188e8:	e2840014 	add	r0, r4, #20
400188ec:	e0800087 	add	r0, r0, r7, lsl #1
400188f0:	e1d000b0 	ldrh	r0, [r0]
400188f4:	e284103e 	add	r1, r4, #62	; 0x3e
400188f8:	e0811087 	add	r1, r1, r7, lsl #1
400188fc:	e1c100b0 	strh	r0, [r1]
40018900:	e1a05000 	mov	r5, r0
40018904:	e3a06000 	mov	r6, #0
40018908:	ea00000e 	b	40018948 <CyU3PDmaMultiChannelReset_TypeManyToOne+0xe8>
4001890c:	e1a0100d 	mov	r1, sp
40018910:	e1a00005 	mov	r0, r5
40018914:	eb0027e7 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40018918:	e59d000c 	ldr	r0, [sp, #12]
4001891c:	e59f1064 	ldr	r1, [pc, #100]	; 40018988 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x128>
40018920:	e0000001 	and	r0, r0, r1
40018924:	e58d000c 	str	r0, [sp, #12]
40018928:	e1a0100d 	mov	r1, sp
4001892c:	e1a00005 	mov	r0, r5
40018930:	eb0027fb 	bl	40022924 <CyU3PDmaDscrSetConfig>
40018934:	e59d0008 	ldr	r0, [sp, #8]
40018938:	e59f104c 	ldr	r1, [pc, #76]	; 4001898c <CyU3PDmaMultiChannelReset_TypeManyToOne+0x12c>
4001893c:	e0015820 	and	r5, r1, r0, lsr #16
40018940:	e2860001 	add	r0, r6, #1
40018944:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018948:	e1d400b8 	ldrh	r0, [r4, #8]
4001894c:	e1500006 	cmp	r0, r6
40018950:	caffffed 	bgt	4001890c <CyU3PDmaMultiChannelReset_TypeManyToOne+0xac>
40018954:	e2870001 	add	r0, r7, #1
40018958:	e3c07801 	bic	r7, r0, #65536	; 0x10000
4001895c:	e1d400ba 	ldrh	r0, [r4, #10]
40018960:	e1500007 	cmp	r0, r7
40018964:	caffffdf 	bgt	400188e8 <CyU3PDmaMultiChannelReset_TypeManyToOne+0x88>
40018968:	e1d401b4 	ldrh	r0, [r4, #20]
4001896c:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018970:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018974:	e1d401bc 	ldrh	r0, [r4, #28]
40018978:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
4001897c:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018980:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018984:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018988:	0000fff0 	.word	0x0000fff0
4001898c:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelReset_TypeOneToMany:

40018990 <CyU3PDmaMultiChannelReset_TypeOneToMany>:
40018990:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40018994:	e1a04000 	mov	r4, r0
40018998:	e1a00004 	mov	r0, r4
4001899c:	eb000229 	bl	40019248 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>
400189a0:	e1d451b4 	ldrh	r5, [r4, #20]
400189a4:	e1d400b8 	ldrh	r0, [r4, #8]
400189a8:	e1d410ba 	ldrh	r1, [r4, #10]
400189ac:	e0000091 	mul	r0, r1, r0
400189b0:	e1a06800 	lsl	r6, r0, #16
400189b4:	e1a06826 	lsr	r6, r6, #16
400189b8:	ea00000c 	b	400189f0 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x60>
400189bc:	e1a0100d 	mov	r1, sp
400189c0:	e1a00005 	mov	r0, r5
400189c4:	eb0027bb 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400189c8:	e59d000c 	ldr	r0, [sp, #12]
400189cc:	e59f10e4 	ldr	r1, [pc, #228]	; 40018ab8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
400189d0:	e0000001 	and	r0, r0, r1
400189d4:	e58d000c 	str	r0, [sp, #12]
400189d8:	e1a0100d 	mov	r1, sp
400189dc:	e1a00005 	mov	r0, r5
400189e0:	eb0027cf 	bl	40022924 <CyU3PDmaDscrSetConfig>
400189e4:	e59d0008 	ldr	r0, [sp, #8]
400189e8:	e59f10cc 	ldr	r1, [pc, #204]	; 40018abc <CyU3PDmaMultiChannelReset_TypeOneToMany+0x12c>
400189ec:	e0015820 	and	r5, r1, r0, lsr #16
400189f0:	e1b00006 	movs	r0, r6
400189f4:	e2461001 	sub	r1, r6, #1
400189f8:	e1a06801 	lsl	r6, r1, #16
400189fc:	e1a06826 	lsr	r6, r6, #16
40018a00:	1affffed 	bne	400189bc <CyU3PDmaMultiChannelReset_TypeOneToMany+0x2c>
40018a04:	e1d400b4 	ldrh	r0, [r4, #4]
40018a08:	e3500008 	cmp	r0, #8
40018a0c:	1a000021 	bne	40018a98 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x108>
40018a10:	e3a07000 	mov	r7, #0
40018a14:	ea00001c 	b	40018a8c <CyU3PDmaMultiChannelReset_TypeOneToMany+0xfc>
40018a18:	e284001c 	add	r0, r4, #28
40018a1c:	e0800087 	add	r0, r0, r7, lsl #1
40018a20:	e1d000b0 	ldrh	r0, [r0]
40018a24:	e2841046 	add	r1, r4, #70	; 0x46
40018a28:	e0811087 	add	r1, r1, r7, lsl #1
40018a2c:	e1c100b0 	strh	r0, [r1]
40018a30:	e1a05000 	mov	r5, r0
40018a34:	e3a06000 	mov	r6, #0
40018a38:	ea00000e 	b	40018a78 <CyU3PDmaMultiChannelReset_TypeOneToMany+0xe8>
40018a3c:	e1a0100d 	mov	r1, sp
40018a40:	e1a00005 	mov	r0, r5
40018a44:	eb00279b 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40018a48:	e59d000c 	ldr	r0, [sp, #12]
40018a4c:	e59f1064 	ldr	r1, [pc, #100]	; 40018ab8 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x128>
40018a50:	e0000001 	and	r0, r0, r1
40018a54:	e58d000c 	str	r0, [sp, #12]
40018a58:	e1a0100d 	mov	r1, sp
40018a5c:	e1a00005 	mov	r0, r5
40018a60:	eb0027af 	bl	40022924 <CyU3PDmaDscrSetConfig>
40018a64:	e59d0008 	ldr	r0, [sp, #8]
40018a68:	e1a05800 	lsl	r5, r0, #16
40018a6c:	e1a05825 	lsr	r5, r5, #16
40018a70:	e2860001 	add	r0, r6, #1
40018a74:	e3c06801 	bic	r6, r0, #65536	; 0x10000
40018a78:	e1d400b8 	ldrh	r0, [r4, #8]
40018a7c:	e1500006 	cmp	r0, r6
40018a80:	caffffed 	bgt	40018a3c <CyU3PDmaMultiChannelReset_TypeOneToMany+0xac>
40018a84:	e2870001 	add	r0, r7, #1
40018a88:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018a8c:	e1d400ba 	ldrh	r0, [r4, #10]
40018a90:	e1500007 	cmp	r0, r7
40018a94:	caffffdf 	bgt	40018a18 <CyU3PDmaMultiChannelReset_TypeOneToMany+0x88>
40018a98:	e1d401b4 	ldrh	r0, [r4, #20]
40018a9c:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
40018aa0:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018aa4:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018aa8:	e1d401bc 	ldrh	r0, [r4, #28]
40018aac:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018ab0:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018ab4:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
40018ab8:	0000fff0 	.word	0x0000fff0
40018abc:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiChannelSetXfer:

40018ac0 <CyU3PDmaMultiChannelSetXfer>:
40018ac0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018ac4:	e1a04000 	mov	r4, r0
40018ac8:	e1a05001 	mov	r5, r1
40018acc:	e1a06002 	mov	r6, r2
40018ad0:	e3e01000 	mvn	r1, #0
40018ad4:	e1a00004 	mov	r0, r4
40018ad8:	ebfffabc 	bl	400175d0 <CyU3PDmaMultiChannelAcquireLock>
40018adc:	e1a07000 	mov	r7, r0
40018ae0:	e3570000 	cmp	r7, #0
40018ae4:	0a000001 	beq	40018af0 <CyU3PDmaMultiChannelSetXfer+0x30>
40018ae8:	e1a00007 	mov	r0, r7
40018aec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40018af0:	e5940000 	ldr	r0, [r4]
40018af4:	e3500001 	cmp	r0, #1
40018af8:	0a000000 	beq	40018b00 <CyU3PDmaMultiChannelSetXfer+0x40>
40018afc:	e3a07043 	mov	r7, #67	; 0x43
40018b00:	e1d400ba 	ldrh	r0, [r4, #10]
40018b04:	e1500006 	cmp	r0, r6
40018b08:	ca000000 	bgt	40018b10 <CyU3PDmaMultiChannelSetXfer+0x50>
40018b0c:	e3a07040 	mov	r7, #64	; 0x40
40018b10:	e1d400b4 	ldrh	r0, [r4, #4]
40018b14:	e3500009 	cmp	r0, #9
40018b18:	1a000002 	bne	40018b28 <CyU3PDmaMultiChannelSetXfer+0x68>
40018b1c:	e3560000 	cmp	r6, #0
40018b20:	0a000000 	beq	40018b28 <CyU3PDmaMultiChannelSetXfer+0x68>
40018b24:	e3a07040 	mov	r7, #64	; 0x40
40018b28:	e3570000 	cmp	r7, #0
40018b2c:	1a00002d 	bne	40018be8 <CyU3PDmaMultiChannelSetXfer+0x128>
40018b30:	e3a02002 	mov	r2, #2
40018b34:	e3e01027 	mvn	r1, #39	; 0x27
40018b38:	e28400b0 	add	r0, r4, #176	; 0xb0
40018b3c:	ebffc545 	bl	4000a058 <_txe_event_flags_set>
40018b40:	e5845070 	str	r5, [r4, #112]	; 0x70
40018b44:	e1d400b4 	ldrh	r0, [r4, #4]
40018b48:	e2400005 	sub	r0, r0, #5
40018b4c:	e3500005 	cmp	r0, #5
40018b50:	308ff100 	addcc	pc, pc, r0, lsl #2
40018b54:	ea000020 	b	40018bdc <CyU3PDmaMultiChannelSetXfer+0x11c>
40018b58:	ea000003 	b	40018b6c <CyU3PDmaMultiChannelSetXfer+0xac>
40018b5c:	ea000009 	b	40018b88 <CyU3PDmaMultiChannelSetXfer+0xc8>
40018b60:	ea000003 	b	40018b74 <CyU3PDmaMultiChannelSetXfer+0xb4>
40018b64:	ea000009 	b	40018b90 <CyU3PDmaMultiChannelSetXfer+0xd0>
40018b68:	ea00000d 	b	40018ba4 <CyU3PDmaMultiChannelSetXfer+0xe4>
40018b6c:	e1a00000 	nop			; (mov r0, r0)
40018b70:	e1a00000 	nop			; (mov r0, r0)
40018b74:	e1a02006 	mov	r2, r6
40018b78:	e1a01005 	mov	r1, r5
40018b7c:	e1a00004 	mov	r0, r4
40018b80:	eb00001d 	bl	40018bfc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>
40018b84:	ea000016 	b	40018be4 <CyU3PDmaMultiChannelSetXfer+0x124>
40018b88:	e1a00000 	nop			; (mov r0, r0)
40018b8c:	e1a00000 	nop			; (mov r0, r0)
40018b90:	e1a02006 	mov	r2, r6
40018b94:	e1a01005 	mov	r1, r5
40018b98:	e1a00004 	mov	r0, r4
40018b9c:	eb0000b2 	bl	40018e6c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>
40018ba0:	ea00000f 	b	40018be4 <CyU3PDmaMultiChannelSetXfer+0x124>
40018ba4:	e1a00000 	nop			; (mov r0, r0)
40018ba8:	e59f0048 	ldr	r0, [pc, #72]	; 40018bf8 <CyU3PDmaMultiChannelSetXfer+0x138>
40018bac:	e5900000 	ldr	r0, [r0]
40018bb0:	e3500000 	cmp	r0, #0
40018bb4:	1a000001 	bne	40018bc0 <CyU3PDmaMultiChannelSetXfer+0x100>
40018bb8:	e3a00047 	mov	r0, #71	; 0x47
40018bbc:	eaffffca 	b	40018aec <CyU3PDmaMultiChannelSetXfer+0x2c>
40018bc0:	e1a02006 	mov	r2, r6
40018bc4:	e1a01005 	mov	r1, r5
40018bc8:	e1a00004 	mov	r0, r4
40018bcc:	e59f3024 	ldr	r3, [pc, #36]	; 40018bf8 <CyU3PDmaMultiChannelSetXfer+0x138>
40018bd0:	e5933000 	ldr	r3, [r3]
40018bd4:	e12fff33 	blx	r3
40018bd8:	ea000001 	b	40018be4 <CyU3PDmaMultiChannelSetXfer+0x124>
40018bdc:	e1a00000 	nop			; (mov r0, r0)
40018be0:	e1a00000 	nop			; (mov r0, r0)
40018be4:	e1a00000 	nop			; (mov r0, r0)
40018be8:	e2840078 	add	r0, r4, #120	; 0x78
40018bec:	ebffc5e6 	bl	4000a38c <_txe_mutex_put>
40018bf0:	e1a00007 	mov	r0, r7
40018bf4:	eaffffbc 	b	40018aec <CyU3PDmaMultiChannelSetXfer+0x2c>
40018bf8:	40030cf8 	.word	0x40030cf8

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeManyToOne:

40018bfc <CyU3PDmaMultiChannelSetXfer_TypeManyToOne>:
40018bfc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018c00:	e24dd028 	sub	sp, sp, #40	; 0x28
40018c04:	e1a04000 	mov	r4, r0
40018c08:	e1a05001 	mov	r5, r1
40018c0c:	e1a06002 	mov	r6, r2
40018c10:	e3a00002 	mov	r0, #2
40018c14:	e5840000 	str	r0, [r4]
40018c18:	e3a07000 	mov	r7, #0
40018c1c:	ea000005 	b	40018c38 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x3c>
40018c20:	e2841024 	add	r1, r4, #36	; 0x24
40018c24:	e0811087 	add	r1, r1, r7, lsl #1
40018c28:	e1d100b0 	ldrh	r0, [r1]
40018c2c:	ebfff0ac 	bl	40014ee4 <CyU3PDmaSocketDisable>
40018c30:	e2870001 	add	r0, r7, #1
40018c34:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018c38:	e1d400ba 	ldrh	r0, [r4, #10]
40018c3c:	e1500007 	cmp	r0, r7
40018c40:	cafffff6 	bgt	40018c20 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x24>
40018c44:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018c48:	ebfff0a5 	bl	40014ee4 <CyU3PDmaSocketDisable>
40018c4c:	e1d415ba 	ldrh	r1, [r4, #90]	; 0x5a
40018c50:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018c54:	ebfff1bd 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
40018c58:	e2840014 	add	r0, r4, #20
40018c5c:	e0800086 	add	r0, r0, r6, lsl #1
40018c60:	e1d000b0 	ldrh	r0, [r0]
40018c64:	e1c403ba 	strh	r0, [r4, #58]	; 0x3a
40018c68:	e1c403b6 	strh	r0, [r4, #54]	; 0x36
40018c6c:	e3a07000 	mov	r7, #0
40018c70:	ea000040 	b	40018d78 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x17c>
40018c74:	e2841024 	add	r1, r4, #36	; 0x24
40018c78:	e0811087 	add	r1, r1, r7, lsl #1
40018c7c:	e1d100b0 	ldrh	r0, [r1]
40018c80:	e28d1010 	add	r1, sp, #16
40018c84:	ebfff0ae 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40018c88:	e3a00000 	mov	r0, #0
40018c8c:	e58d0014 	str	r0, [sp, #20]
40018c90:	e58d0018 	str	r0, [sp, #24]
40018c94:	e59d001c 	ldr	r0, [sp, #28]
40018c98:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018c9c:	e58d001c 	str	r0, [sp, #28]
40018ca0:	e59d001c 	ldr	r0, [sp, #28]
40018ca4:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40018ca8:	e58d001c 	str	r0, [sp, #28]
40018cac:	e59d001c 	ldr	r0, [sp, #28]
40018cb0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018cb4:	e58d001c 	str	r0, [sp, #28]
40018cb8:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018cbc:	e3500001 	cmp	r0, #1
40018cc0:	1a000003 	bne	40018cd4 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xd8>
40018cc4:	e59d001c 	ldr	r0, [sp, #28]
40018cc8:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018ccc:	e58d001c 	str	r0, [sp, #28]
40018cd0:	ea000002 	b	40018ce0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0xe4>
40018cd4:	e59d001c 	ldr	r0, [sp, #28]
40018cd8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018cdc:	e58d001c 	str	r0, [sp, #28]
40018ce0:	e1d405b4 	ldrh	r0, [r4, #84]	; 0x54
40018ce4:	e3500000 	cmp	r0, #0
40018ce8:	0a000006 	beq	40018d08 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x10c>
40018cec:	e1d400b8 	ldrh	r0, [r4, #8]
40018cf0:	e3800b01 	orr	r0, r0, #1024	; 0x400
40018cf4:	e1d415b4 	ldrh	r1, [r4, #84]	; 0x54
40018cf8:	e1800281 	orr	r0, r0, r1, lsl #5
40018cfc:	e59d101c 	ldr	r1, [sp, #28]
40018d00:	e1800001 	orr	r0, r0, r1
40018d04:	e58d001c 	str	r0, [sp, #28]
40018d08:	e3e00000 	mvn	r0, #0
40018d0c:	e58d0020 	str	r0, [sp, #32]
40018d10:	e1570006 	cmp	r7, r6
40018d14:	ba000004 	blt	40018d2c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x130>
40018d18:	e2840014 	add	r0, r4, #20
40018d1c:	e0800087 	add	r0, r0, r7, lsl #1
40018d20:	e1d000b0 	ldrh	r0, [r0]
40018d24:	e58d0010 	str	r0, [sp, #16]
40018d28:	ea000007 	b	40018d4c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x150>
40018d2c:	e2841014 	add	r1, r4, #20
40018d30:	e0811087 	add	r1, r1, r7, lsl #1
40018d34:	e1d100b0 	ldrh	r0, [r1]
40018d38:	e1a0100d 	mov	r1, sp
40018d3c:	eb0026dd 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40018d40:	e59d0008 	ldr	r0, [sp, #8]
40018d44:	e1a00820 	lsr	r0, r0, #16
40018d48:	e58d0010 	str	r0, [sp, #16]
40018d4c:	e284103e 	add	r1, r4, #62	; 0x3e
40018d50:	e0811087 	add	r1, r1, r7, lsl #1
40018d54:	e59d0010 	ldr	r0, [sp, #16]
40018d58:	e1c100b0 	strh	r0, [r1]
40018d5c:	e2841024 	add	r1, r4, #36	; 0x24
40018d60:	e0811087 	add	r1, r1, r7, lsl #1
40018d64:	e1d100b0 	ldrh	r0, [r1]
40018d68:	e28d1010 	add	r1, sp, #16
40018d6c:	ebfff11e 	bl	400151ec <CyU3PDmaSocketSetConfig>
40018d70:	e2870001 	add	r0, r7, #1
40018d74:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018d78:	e1d400ba 	ldrh	r0, [r4, #10]
40018d7c:	e1500007 	cmp	r0, r7
40018d80:	caffffbb 	bgt	40018c74 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x78>
40018d84:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018d88:	e28d1010 	add	r1, sp, #16
40018d8c:	ebfff06c 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40018d90:	e58d5014 	str	r5, [sp, #20]
40018d94:	e3a00000 	mov	r0, #0
40018d98:	e58d0018 	str	r0, [sp, #24]
40018d9c:	e3550000 	cmp	r5, #0
40018da0:	1a000006 	bne	40018dc0 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1c4>
40018da4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018da8:	e3c00080 	bic	r0, r0, #128	; 0x80
40018dac:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018db0:	e59d001c 	ldr	r0, [sp, #28]
40018db4:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018db8:	e58d001c 	str	r0, [sp, #28]
40018dbc:	ea000005 	b	40018dd8 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x1dc>
40018dc0:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018dc4:	e3800080 	orr	r0, r0, #128	; 0x80
40018dc8:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018dcc:	e59d001c 	ldr	r0, [sp, #28]
40018dd0:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018dd4:	e58d001c 	str	r0, [sp, #28]
40018dd8:	e59d001c 	ldr	r0, [sp, #28]
40018ddc:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018de0:	e58d001c 	str	r0, [sp, #28]
40018de4:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018de8:	e3500001 	cmp	r0, #1
40018dec:	1a000003 	bne	40018e00 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x204>
40018df0:	e59d001c 	ldr	r0, [sp, #28]
40018df4:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018df8:	e58d001c 	str	r0, [sp, #28]
40018dfc:	ea000002 	b	40018e0c <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x210>
40018e00:	e59d001c 	ldr	r0, [sp, #28]
40018e04:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018e08:	e58d001c 	str	r0, [sp, #28]
40018e0c:	e3e00000 	mvn	r0, #0
40018e10:	e58d0020 	str	r0, [sp, #32]
40018e14:	e1d481bc 	ldrh	r8, [r4, #28]
40018e18:	e3a07000 	mov	r7, #0
40018e1c:	ea000007 	b	40018e40 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x244>
40018e20:	e1a0100d 	mov	r1, sp
40018e24:	e1a00008 	mov	r0, r8
40018e28:	eb0026a2 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40018e2c:	e59d0008 	ldr	r0, [sp, #8]
40018e30:	e1a08800 	lsl	r8, r0, #16
40018e34:	e1a08828 	lsr	r8, r8, #16
40018e38:	e2870001 	add	r0, r7, #1
40018e3c:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018e40:	e1570006 	cmp	r7, r6
40018e44:	bafffff5 	blt	40018e20 <CyU3PDmaMultiChannelSetXfer_TypeManyToOne+0x224>
40018e48:	e58d8010 	str	r8, [sp, #16]
40018e4c:	e1c484b6 	strh	r8, [r4, #70]	; 0x46
40018e50:	e1c483bc 	strh	r8, [r4, #60]	; 0x3c
40018e54:	e1c483b8 	strh	r8, [r4, #56]	; 0x38
40018e58:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40018e5c:	e28d1010 	add	r1, sp, #16
40018e60:	ebfff0e1 	bl	400151ec <CyU3PDmaSocketSetConfig>
40018e64:	e28dd028 	add	sp, sp, #40	; 0x28
40018e68:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetXfer_TypeOneToMany:

40018e6c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany>:
40018e6c:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40018e70:	e24dd028 	sub	sp, sp, #40	; 0x28
40018e74:	e1a04000 	mov	r4, r0
40018e78:	e1a05001 	mov	r5, r1
40018e7c:	e1a06002 	mov	r6, r2
40018e80:	e3a00002 	mov	r0, #2
40018e84:	e5840000 	str	r0, [r4]
40018e88:	e3a07000 	mov	r7, #0
40018e8c:	ea000005 	b	40018ea8 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x3c>
40018e90:	e284102c 	add	r1, r4, #44	; 0x2c
40018e94:	e0811087 	add	r1, r1, r7, lsl #1
40018e98:	e1d100b0 	ldrh	r0, [r1]
40018e9c:	ebfff010 	bl	40014ee4 <CyU3PDmaSocketDisable>
40018ea0:	e2870001 	add	r0, r7, #1
40018ea4:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018ea8:	e1d400ba 	ldrh	r0, [r4, #10]
40018eac:	e1500007 	cmp	r0, r7
40018eb0:	cafffff6 	bgt	40018e90 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x24>
40018eb4:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018eb8:	ebfff009 	bl	40014ee4 <CyU3PDmaSocketDisable>
40018ebc:	e1d415b8 	ldrh	r1, [r4, #88]	; 0x58
40018ec0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ec4:	ebfff121 	bl	40015350 <CyU3PDmaUpdateSocketSuspendOption>
40018ec8:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018ecc:	e28d1010 	add	r1, sp, #16
40018ed0:	ebfff01b 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40018ed4:	e58d5014 	str	r5, [sp, #20]
40018ed8:	e3a00000 	mov	r0, #0
40018edc:	e58d0018 	str	r0, [sp, #24]
40018ee0:	e3550000 	cmp	r5, #0
40018ee4:	1a000006 	bne	40018f04 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x98>
40018ee8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018eec:	e3c00080 	bic	r0, r0, #128	; 0x80
40018ef0:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018ef4:	e59d001c 	ldr	r0, [sp, #28]
40018ef8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018efc:	e58d001c 	str	r0, [sp, #28]
40018f00:	ea000005 	b	40018f1c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xb0>
40018f04:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018f08:	e3800080 	orr	r0, r0, #128	; 0x80
40018f0c:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018f10:	e59d001c 	ldr	r0, [sp, #28]
40018f14:	e3800602 	orr	r0, r0, #2097152	; 0x200000
40018f18:	e58d001c 	str	r0, [sp, #28]
40018f1c:	e59d001c 	ldr	r0, [sp, #28]
40018f20:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40018f24:	e58d001c 	str	r0, [sp, #28]
40018f28:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40018f2c:	e3500001 	cmp	r0, #1
40018f30:	1a000003 	bne	40018f44 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xd8>
40018f34:	e59d001c 	ldr	r0, [sp, #28]
40018f38:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40018f3c:	e58d001c 	str	r0, [sp, #28]
40018f40:	ea000002 	b	40018f50 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xe4>
40018f44:	e59d001c 	ldr	r0, [sp, #28]
40018f48:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40018f4c:	e58d001c 	str	r0, [sp, #28]
40018f50:	e3e00000 	mvn	r0, #0
40018f54:	e58d0020 	str	r0, [sp, #32]
40018f58:	e1d481b4 	ldrh	r8, [r4, #20]
40018f5c:	e3a07000 	mov	r7, #0
40018f60:	ea000007 	b	40018f84 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x118>
40018f64:	e1a0100d 	mov	r1, sp
40018f68:	e1a00008 	mov	r0, r8
40018f6c:	eb002651 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40018f70:	e59d0008 	ldr	r0, [sp, #8]
40018f74:	e59f1148 	ldr	r1, [pc, #328]	; 400190c4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x258>
40018f78:	e0018820 	and	r8, r1, r0, lsr #16
40018f7c:	e2870001 	add	r0, r7, #1
40018f80:	e3c07801 	bic	r7, r0, #65536	; 0x10000
40018f84:	e1570006 	cmp	r7, r6
40018f88:	bafffff5 	blt	40018f64 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0xf8>
40018f8c:	e58d8010 	str	r8, [sp, #16]
40018f90:	e1c483be 	strh	r8, [r4, #62]	; 0x3e
40018f94:	e1c483ba 	strh	r8, [r4, #58]	; 0x3a
40018f98:	e1c483b6 	strh	r8, [r4, #54]	; 0x36
40018f9c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40018fa0:	e28d1010 	add	r1, sp, #16
40018fa4:	ebfff090 	bl	400151ec <CyU3PDmaSocketSetConfig>
40018fa8:	e284001c 	add	r0, r4, #28
40018fac:	e0800086 	add	r0, r0, r6, lsl #1
40018fb0:	e1d000b0 	ldrh	r0, [r0]
40018fb4:	e1c403bc 	strh	r0, [r4, #60]	; 0x3c
40018fb8:	e1c403b8 	strh	r0, [r4, #56]	; 0x38
40018fbc:	e3a07000 	mov	r7, #0
40018fc0:	ea00003a 	b	400190b0 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x244>
40018fc4:	e284102c 	add	r1, r4, #44	; 0x2c
40018fc8:	e0811087 	add	r1, r1, r7, lsl #1
40018fcc:	e1d100b0 	ldrh	r0, [r1]
40018fd0:	e28d1010 	add	r1, sp, #16
40018fd4:	ebffefda 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40018fd8:	e3a00000 	mov	r0, #0
40018fdc:	e58d0014 	str	r0, [sp, #20]
40018fe0:	e58d0018 	str	r0, [sp, #24]
40018fe4:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40018fe8:	e3c00080 	bic	r0, r0, #128	; 0x80
40018fec:	e58d0024 	str	r0, [sp, #36]	; 0x24
40018ff0:	e59d001c 	ldr	r0, [sp, #28]
40018ff4:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
40018ff8:	e58d001c 	str	r0, [sp, #28]
40018ffc:	e59d001c 	ldr	r0, [sp, #28]
40019000:	e3c00101 	bic	r0, r0, #1073741824	; 0x40000000
40019004:	e58d001c 	str	r0, [sp, #28]
40019008:	e59d001c 	ldr	r0, [sp, #28]
4001900c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019010:	e58d001c 	str	r0, [sp, #28]
40019014:	e1d405b6 	ldrh	r0, [r4, #86]	; 0x56
40019018:	e3500001 	cmp	r0, #1
4001901c:	1a000003 	bne	40019030 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1c4>
40019020:	e59d001c 	ldr	r0, [sp, #28]
40019024:	e3800202 	orr	r0, r0, #536870912	; 0x20000000
40019028:	e58d001c 	str	r0, [sp, #28]
4001902c:	ea000002 	b	4001903c <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1d0>
40019030:	e59d001c 	ldr	r0, [sp, #28]
40019034:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
40019038:	e58d001c 	str	r0, [sp, #28]
4001903c:	e3e00000 	mvn	r0, #0
40019040:	e58d0020 	str	r0, [sp, #32]
40019044:	e1570006 	cmp	r7, r6
40019048:	ba000004 	blt	40019060 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x1f4>
4001904c:	e284001c 	add	r0, r4, #28
40019050:	e0800087 	add	r0, r0, r7, lsl #1
40019054:	e1d000b0 	ldrh	r0, [r0]
40019058:	e58d0010 	str	r0, [sp, #16]
4001905c:	ea000008 	b	40019084 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x218>
40019060:	e284101c 	add	r1, r4, #28
40019064:	e0811087 	add	r1, r1, r7, lsl #1
40019068:	e1d100b0 	ldrh	r0, [r1]
4001906c:	e1a0100d 	mov	r1, sp
40019070:	eb002610 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019074:	e59d0008 	ldr	r0, [sp, #8]
40019078:	e1a00800 	lsl	r0, r0, #16
4001907c:	e1a00820 	lsr	r0, r0, #16
40019080:	e58d0010 	str	r0, [sp, #16]
40019084:	e2841046 	add	r1, r4, #70	; 0x46
40019088:	e0811087 	add	r1, r1, r7, lsl #1
4001908c:	e59d0010 	ldr	r0, [sp, #16]
40019090:	e1c100b0 	strh	r0, [r1]
40019094:	e284102c 	add	r1, r4, #44	; 0x2c
40019098:	e0811087 	add	r1, r1, r7, lsl #1
4001909c:	e1d100b0 	ldrh	r0, [r1]
400190a0:	e28d1010 	add	r1, sp, #16
400190a4:	ebfff050 	bl	400151ec <CyU3PDmaSocketSetConfig>
400190a8:	e2870001 	add	r0, r7, #1
400190ac:	e3c07801 	bic	r7, r0, #65536	; 0x10000
400190b0:	e1d400ba 	ldrh	r0, [r4, #10]
400190b4:	e1500007 	cmp	r0, r7
400190b8:	caffffc1 	bgt	40018fc4 <CyU3PDmaMultiChannelSetXfer_TypeOneToMany+0x158>
400190bc:	e28dd028 	add	sp, sp, #40	; 0x28
400190c0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400190c4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeManyToOne:

400190c8 <CyU3PDmaMultiConfigureSockets_TypeManyToOne>:
400190c8:	e92d4030 	push	{r4, r5, lr}
400190cc:	e24dd01c 	sub	sp, sp, #28
400190d0:	e1a04000 	mov	r4, r0
400190d4:	e3a05000 	mov	r5, #0
400190d8:	ea000031 	b	400191a4 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xdc>
400190dc:	e2840014 	add	r0, r4, #20
400190e0:	e0800085 	add	r0, r0, r5, lsl #1
400190e4:	e1d000b0 	ldrh	r0, [r0]
400190e8:	e284103e 	add	r1, r4, #62	; 0x3e
400190ec:	e0811085 	add	r1, r1, r5, lsl #1
400190f0:	e1c100b0 	strh	r0, [r1]
400190f4:	e2841024 	add	r1, r4, #36	; 0x24
400190f8:	e0811085 	add	r1, r1, r5, lsl #1
400190fc:	e1d100b0 	ldrh	r0, [r1]
40019100:	ebffef77 	bl	40014ee4 <CyU3PDmaSocketDisable>
40019104:	e2841024 	add	r1, r4, #36	; 0x24
40019108:	e0811085 	add	r1, r1, r5, lsl #1
4001910c:	e1d100b0 	ldrh	r0, [r1]
40019110:	e28d1004 	add	r1, sp, #4
40019114:	ebffef8a 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40019118:	e2840014 	add	r0, r4, #20
4001911c:	e0800085 	add	r0, r0, r5, lsl #1
40019120:	e1d000b0 	ldrh	r0, [r0]
40019124:	e58d0004 	str	r0, [sp, #4]
40019128:	e3a00000 	mov	r0, #0
4001912c:	e58d0008 	str	r0, [sp, #8]
40019130:	e58d000c 	str	r0, [sp, #12]
40019134:	e3a00646 	mov	r0, #73400320	; 0x4600000
40019138:	e58d0010 	str	r0, [sp, #16]
4001913c:	e2841024 	add	r1, r4, #36	; 0x24
40019140:	e0811085 	add	r1, r1, r5, lsl #1
40019144:	e1d100b0 	ldrh	r0, [r1]
40019148:	eb0006a3 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
4001914c:	e3500000 	cmp	r0, #0
40019150:	0a000002 	beq	40019160 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x98>
40019154:	e59d0010 	ldr	r0, [sp, #16]
40019158:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001915c:	e58d0010 	str	r0, [sp, #16]
40019160:	e3e00000 	mvn	r0, #0
40019164:	e58d0014 	str	r0, [sp, #20]
40019168:	e1d400b4 	ldrh	r0, [r4, #4]
4001916c:	e3500005 	cmp	r0, #5
40019170:	1a000002 	bne	40019180 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xb8>
40019174:	e3a00040 	mov	r0, #64	; 0x40
40019178:	e58d0018 	str	r0, [sp, #24]
4001917c:	ea000001 	b	40019188 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0xc0>
40019180:	e3a00041 	mov	r0, #65	; 0x41
40019184:	e58d0018 	str	r0, [sp, #24]
40019188:	e2841024 	add	r1, r4, #36	; 0x24
4001918c:	e0811085 	add	r1, r1, r5, lsl #1
40019190:	e1d100b0 	ldrh	r0, [r1]
40019194:	e28d1004 	add	r1, sp, #4
40019198:	ebfff013 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001919c:	e2850001 	add	r0, r5, #1
400191a0:	e3c05801 	bic	r5, r0, #65536	; 0x10000
400191a4:	e1d400ba 	ldrh	r0, [r4, #10]
400191a8:	e1500005 	cmp	r0, r5
400191ac:	caffffca 	bgt	400190dc <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x14>
400191b0:	e1d401bc 	ldrh	r0, [r4, #28]
400191b4:	e1c404b6 	strh	r0, [r4, #70]	; 0x46
400191b8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191bc:	ebffef48 	bl	40014ee4 <CyU3PDmaSocketDisable>
400191c0:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191c4:	e28d1004 	add	r1, sp, #4
400191c8:	ebffef5d 	bl	40014f44 <CyU3PDmaSocketGetConfig>
400191cc:	e1d401bc 	ldrh	r0, [r4, #28]
400191d0:	e58d0004 	str	r0, [sp, #4]
400191d4:	e3a00000 	mov	r0, #0
400191d8:	e58d0008 	str	r0, [sp, #8]
400191dc:	e58d000c 	str	r0, [sp, #12]
400191e0:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
400191e4:	e58d0010 	str	r0, [sp, #16]
400191e8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
400191ec:	eb00067a 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
400191f0:	e3500000 	cmp	r0, #0
400191f4:	0a000002 	beq	40019204 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x13c>
400191f8:	e59d0010 	ldr	r0, [sp, #16]
400191fc:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019200:	e58d0010 	str	r0, [sp, #16]
40019204:	e3e00000 	mvn	r0, #0
40019208:	e58d0014 	str	r0, [sp, #20]
4001920c:	e1d400b4 	ldrh	r0, [r4, #4]
40019210:	e3500005 	cmp	r0, #5
40019214:	1a000002 	bne	40019224 <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x15c>
40019218:	e3a000c0 	mov	r0, #192	; 0xc0
4001921c:	e58d0018 	str	r0, [sp, #24]
40019220:	ea000001 	b	4001922c <CyU3PDmaMultiConfigureSockets_TypeManyToOne+0x164>
40019224:	e3a000c2 	mov	r0, #194	; 0xc2
40019228:	e58d0018 	str	r0, [sp, #24]
4001922c:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
40019230:	e28d1004 	add	r1, sp, #4
40019234:	ebffefec 	bl	400151ec <CyU3PDmaSocketSetConfig>
40019238:	e3a00000 	mov	r0, #0
4001923c:	e1c406b4 	strh	r0, [r4, #100]	; 0x64
40019240:	e28dd01c 	add	sp, sp, #28
40019244:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiConfigureSockets_TypeOneToMany:

40019248 <CyU3PDmaMultiConfigureSockets_TypeOneToMany>:
40019248:	e92d4030 	push	{r4, r5, lr}
4001924c:	e24dd01c 	sub	sp, sp, #28
40019250:	e1a04000 	mov	r4, r0
40019254:	e1d401b4 	ldrh	r0, [r4, #20]
40019258:	e1c403be 	strh	r0, [r4, #62]	; 0x3e
4001925c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019260:	ebffef1f 	bl	40014ee4 <CyU3PDmaSocketDisable>
40019264:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019268:	e28d1004 	add	r1, sp, #4
4001926c:	ebffef34 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40019270:	e1d401b4 	ldrh	r0, [r4, #20]
40019274:	e58d0004 	str	r0, [sp, #4]
40019278:	e3a00000 	mov	r0, #0
4001927c:	e58d0008 	str	r0, [sp, #8]
40019280:	e58d000c 	str	r0, [sp, #12]
40019284:	e3a00646 	mov	r0, #73400320	; 0x4600000
40019288:	e58d0010 	str	r0, [sp, #16]
4001928c:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
40019290:	eb000651 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
40019294:	e3500000 	cmp	r0, #0
40019298:	0a000002 	beq	400192a8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x60>
4001929c:	e59d0010 	ldr	r0, [sp, #16]
400192a0:	e3800b01 	orr	r0, r0, #1024	; 0x400
400192a4:	e58d0010 	str	r0, [sp, #16]
400192a8:	e3e00000 	mvn	r0, #0
400192ac:	e58d0014 	str	r0, [sp, #20]
400192b0:	e1d400b4 	ldrh	r0, [r4, #4]
400192b4:	e3500006 	cmp	r0, #6
400192b8:	1a000002 	bne	400192c8 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x80>
400192bc:	e3a000c0 	mov	r0, #192	; 0xc0
400192c0:	e58d0018 	str	r0, [sp, #24]
400192c4:	ea000001 	b	400192d0 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x88>
400192c8:	e3a000c1 	mov	r0, #193	; 0xc1
400192cc:	e58d0018 	str	r0, [sp, #24]
400192d0:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
400192d4:	e28d1004 	add	r1, sp, #4
400192d8:	ebffefc3 	bl	400151ec <CyU3PDmaSocketSetConfig>
400192dc:	e3a05000 	mov	r5, #0
400192e0:	ea000035 	b	400193bc <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x174>
400192e4:	e284001c 	add	r0, r4, #28
400192e8:	e0800085 	add	r0, r0, r5, lsl #1
400192ec:	e1d000b0 	ldrh	r0, [r0]
400192f0:	e2841046 	add	r1, r4, #70	; 0x46
400192f4:	e0811085 	add	r1, r1, r5, lsl #1
400192f8:	e1c100b0 	strh	r0, [r1]
400192fc:	e284102c 	add	r1, r4, #44	; 0x2c
40019300:	e0811085 	add	r1, r1, r5, lsl #1
40019304:	e1d100b0 	ldrh	r0, [r1]
40019308:	ebffeef5 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001930c:	e284102c 	add	r1, r4, #44	; 0x2c
40019310:	e0811085 	add	r1, r1, r5, lsl #1
40019314:	e1d100b0 	ldrh	r0, [r1]
40019318:	e28d1004 	add	r1, sp, #4
4001931c:	ebffef08 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40019320:	e284001c 	add	r0, r4, #28
40019324:	e0800085 	add	r0, r0, r5, lsl #1
40019328:	e1d000b0 	ldrh	r0, [r0]
4001932c:	e58d0004 	str	r0, [sp, #4]
40019330:	e3a00000 	mov	r0, #0
40019334:	e58d0008 	str	r0, [sp, #8]
40019338:	e58d000c 	str	r0, [sp, #12]
4001933c:	e3a0064a 	mov	r0, #77594624	; 0x4a00000
40019340:	e58d0010 	str	r0, [sp, #16]
40019344:	e284102c 	add	r1, r4, #44	; 0x2c
40019348:	e0811085 	add	r1, r1, r5, lsl #1
4001934c:	e1d100b0 	ldrh	r0, [r1]
40019350:	eb000621 	bl	4001abdc <CyU3PDmaIsSockAvlEnReqd>
40019354:	e3500000 	cmp	r0, #0
40019358:	0a000002 	beq	40019368 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x120>
4001935c:	e59d0010 	ldr	r0, [sp, #16]
40019360:	e3800b01 	orr	r0, r0, #1024	; 0x400
40019364:	e58d0010 	str	r0, [sp, #16]
40019368:	e3e00000 	mvn	r0, #0
4001936c:	e58d0014 	str	r0, [sp, #20]
40019370:	e1d400b4 	ldrh	r0, [r4, #4]
40019374:	e3500006 	cmp	r0, #6
40019378:	1a000002 	bne	40019388 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x140>
4001937c:	e3a00040 	mov	r0, #64	; 0x40
40019380:	e58d0018 	str	r0, [sp, #24]
40019384:	ea000001 	b	40019390 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x148>
40019388:	e3a00042 	mov	r0, #66	; 0x42
4001938c:	e58d0018 	str	r0, [sp, #24]
40019390:	e284102c 	add	r1, r4, #44	; 0x2c
40019394:	e0811085 	add	r1, r1, r5, lsl #1
40019398:	e1d100b0 	ldrh	r0, [r1]
4001939c:	e28d1004 	add	r1, sp, #4
400193a0:	ebffef91 	bl	400151ec <CyU3PDmaSocketSetConfig>
400193a4:	e3a00000 	mov	r0, #0
400193a8:	e2841064 	add	r1, r4, #100	; 0x64
400193ac:	e0811085 	add	r1, r1, r5, lsl #1
400193b0:	e1c100b0 	strh	r0, [r1]
400193b4:	e2850001 	add	r0, r5, #1
400193b8:	e3c05801 	bic	r5, r0, #65536	; 0x10000
400193bc:	e1d400ba 	ldrh	r0, [r4, #10]
400193c0:	e1500005 	cmp	r0, r5
400193c4:	caffffc6 	bgt	400192e4 <CyU3PDmaMultiConfigureSockets_TypeOneToMany+0x9c>
400193c8:	e28dd01c 	add	sp, sp, #28
400193cc:	e8bd8030 	pop	{r4, r5, pc}

Disassembly of section i.CyU3PDmaMultiChannelSetWrapUp:

400193d0 <CyU3PDmaMultiChannelSetWrapUp>:
400193d0:	e92d4070 	push	{r4, r5, r6, lr}
400193d4:	e1a04000 	mov	r4, r0
400193d8:	e1a05001 	mov	r5, r1
400193dc:	e3e01000 	mvn	r1, #0
400193e0:	e1a00004 	mov	r0, r4
400193e4:	ebfff879 	bl	400175d0 <CyU3PDmaMultiChannelAcquireLock>
400193e8:	e1a06000 	mov	r6, r0
400193ec:	e3560000 	cmp	r6, #0
400193f0:	0a000001 	beq	400193fc <CyU3PDmaMultiChannelSetWrapUp+0x2c>
400193f4:	e1a00006 	mov	r0, r6
400193f8:	e8bd8070 	pop	{r4, r5, r6, pc}
400193fc:	e5940000 	ldr	r0, [r4]
40019400:	e3500004 	cmp	r0, #4
40019404:	0a000003 	beq	40019418 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019408:	e5940000 	ldr	r0, [r4]
4001940c:	e3500002 	cmp	r0, #2
40019410:	0a000000 	beq	40019418 <CyU3PDmaMultiChannelSetWrapUp+0x48>
40019414:	e3a06047 	mov	r6, #71	; 0x47
40019418:	e1d400b4 	ldrh	r0, [r4, #4]
4001941c:	e3500006 	cmp	r0, #6
40019420:	0a000005 	beq	4001943c <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40019424:	e1d400b4 	ldrh	r0, [r4, #4]
40019428:	e3500008 	cmp	r0, #8
4001942c:	0a000002 	beq	4001943c <CyU3PDmaMultiChannelSetWrapUp+0x6c>
40019430:	e1d400b4 	ldrh	r0, [r4, #4]
40019434:	e3500009 	cmp	r0, #9
40019438:	1a000003 	bne	4001944c <CyU3PDmaMultiChannelSetWrapUp+0x7c>
4001943c:	e3550000 	cmp	r5, #0
40019440:	0a000005 	beq	4001945c <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019444:	e3a06040 	mov	r6, #64	; 0x40
40019448:	ea000003 	b	4001945c <CyU3PDmaMultiChannelSetWrapUp+0x8c>
4001944c:	e1d400ba 	ldrh	r0, [r4, #10]
40019450:	e1500005 	cmp	r0, r5
40019454:	ca000000 	bgt	4001945c <CyU3PDmaMultiChannelSetWrapUp+0x8c>
40019458:	e3a06040 	mov	r6, #64	; 0x40
4001945c:	e3560000 	cmp	r6, #0
40019460:	1a000003 	bne	40019474 <CyU3PDmaMultiChannelSetWrapUp+0xa4>
40019464:	e2841024 	add	r1, r4, #36	; 0x24
40019468:	e0811085 	add	r1, r1, r5, lsl #1
4001946c:	e1d100b0 	ldrh	r0, [r1]
40019470:	ebffef88 	bl	40015298 <CyU3PDmaSocketSetWrapUp>
40019474:	e2840078 	add	r0, r4, #120	; 0x78
40019478:	ebffc3c3 	bl	4000a38c <_txe_mutex_put>
4001947c:	e1a00006 	mov	r0, r6
40019480:	eaffffdc 	b	400193f8 <CyU3PDmaMultiChannelSetWrapUp+0x28>

Disassembly of section i.CyU3PDmaApplicationDefine:

40019484 <CyU3PDmaApplicationDefine>:
40019484:	e92d4010 	push	{r4, lr}
40019488:	e24dd020 	sub	sp, sp, #32
4001948c:	eb000051 	bl	400195d8 <CyU3PDmaInit>
40019490:	e3a02028 	mov	r2, #40	; 0x28
40019494:	e3a01000 	mov	r1, #0
40019498:	e59f007c 	ldr	r0, [pc, #124]	; 4001951c <CyU3PDmaApplicationDefine+0x98>
4001949c:	ebffc24d 	bl	40009dd8 <_txe_event_flags_create>
400194a0:	e3a00c02 	mov	r0, #512	; 0x200
400194a4:	ebffa872 	bl	40003674 <CyU3PMemAlloc>
400194a8:	e1a04000 	mov	r4, r0
400194ac:	e3a0303c 	mov	r3, #60	; 0x3c
400194b0:	e3a02c02 	mov	r2, #512	; 0x200
400194b4:	e1cd20f0 	strd	r2, [sp]
400194b8:	e1a03004 	mov	r3, r4
400194bc:	e3a02004 	mov	r2, #4
400194c0:	e3a01000 	mov	r1, #0
400194c4:	e59f0054 	ldr	r0, [pc, #84]	; 40019520 <CyU3PDmaApplicationDefine+0x9c>
400194c8:	ebffc3d7 	bl	4000a42c <_txe_queue_create>
400194cc:	e3a00b01 	mov	r0, #1024	; 0x400
400194d0:	ebffa867 	bl	40003674 <CyU3PMemAlloc>
400194d4:	e1a04000 	mov	r4, r0
400194d8:	e3a030a8 	mov	r3, #168	; 0xa8
400194dc:	e3a02001 	mov	r2, #1
400194e0:	e3a01000 	mov	r1, #0
400194e4:	e3a00002 	mov	r0, #2
400194e8:	e28dc00c 	add	ip, sp, #12
400194ec:	e88c000f 	stm	ip, {r0, r1, r2, r3}
400194f0:	e3a02b01 	mov	r2, #1024	; 0x400
400194f4:	e1a03001 	mov	r3, r1
400194f8:	e58d2004 	str	r2, [sp, #4]
400194fc:	e59f2020 	ldr	r2, [pc, #32]	; 40019524 <CyU3PDmaApplicationDefine+0xa0>
40019500:	e28f1020 	add	r1, pc, #32
40019504:	e58d0008 	str	r0, [sp, #8]
40019508:	e59f0028 	ldr	r0, [pc, #40]	; 40019538 <CyU3PDmaApplicationDefine+0xb4>
4001950c:	e58d4000 	str	r4, [sp]
40019510:	ebffc4ab 	bl	4000a7c4 <_txe_thread_create>
40019514:	e28dd020 	add	sp, sp, #32
40019518:	e8bd8010 	pop	{r4, pc}
4001951c:	40031910 	.word	0x40031910
40019520:	40031938 	.word	0x40031938
40019524:	4001ad88 	.word	0x4001ad88
40019528:	445f3130 	.word	0x445f3130
4001952c:	545f414d 	.word	0x545f414d
40019530:	41455248 	.word	0x41455248
40019534:	00000044 	.word	0x00000044
40019538:	40031868 	.word	0x40031868

Disassembly of section i.CyU3PDmaChannelHandleError:

4001953c <CyU3PDmaChannelHandleError>:
4001953c:	e92d4010 	push	{r4, lr}
40019540:	e1a04000 	mov	r4, r0
40019544:	e3e01000 	mvn	r1, #0
40019548:	e284003c 	add	r0, r4, #60	; 0x3c
4001954c:	ebffc359 	bl	4000a2b8 <_txe_mutex_get>
40019550:	e1d400b4 	ldrh	r0, [r4, #4]
40019554:	e3500004 	cmp	r0, #4
40019558:	0a000001 	beq	40019564 <CyU3PDmaChannelHandleError+0x28>
4001955c:	e1d401b0 	ldrh	r0, [r4, #16]
40019560:	ebffee5f 	bl	40014ee4 <CyU3PDmaSocketDisable>
40019564:	e1d400b4 	ldrh	r0, [r4, #4]
40019568:	e3500003 	cmp	r0, #3
4001956c:	0a000001 	beq	40019578 <CyU3PDmaChannelHandleError+0x3c>
40019570:	e1d401b2 	ldrh	r0, [r4, #18]
40019574:	ebffee5a 	bl	40014ee4 <CyU3PDmaSocketDisable>
40019578:	e3a02002 	mov	r2, #2
4001957c:	e3e01007 	mvn	r1, #7
40019580:	e2840074 	add	r0, r4, #116	; 0x74
40019584:	ebffc2b3 	bl	4000a058 <_txe_event_flags_set>
40019588:	e3a02000 	mov	r2, #0
4001958c:	e3a01040 	mov	r1, #64	; 0x40
40019590:	e2840074 	add	r0, r4, #116	; 0x74
40019594:	ebffc2af 	bl	4000a058 <_txe_event_flags_set>
40019598:	e3a00005 	mov	r0, #5
4001959c:	e5840000 	str	r0, [r4]
400195a0:	e594009c 	ldr	r0, [r4, #156]	; 0x9c
400195a4:	e3500000 	cmp	r0, #0
400195a8:	0a000007 	beq	400195cc <CyU3PDmaChannelHandleError+0x90>
400195ac:	e5940030 	ldr	r0, [r4, #48]	; 0x30
400195b0:	e3100040 	tst	r0, #64	; 0x40
400195b4:	0a000004 	beq	400195cc <CyU3PDmaChannelHandleError+0x90>
400195b8:	e3a02000 	mov	r2, #0
400195bc:	e3a01040 	mov	r1, #64	; 0x40
400195c0:	e594309c 	ldr	r3, [r4, #156]	; 0x9c
400195c4:	e1a00004 	mov	r0, r4
400195c8:	e12fff33 	blx	r3
400195cc:	e284003c 	add	r0, r4, #60	; 0x3c
400195d0:	ebffc36d 	bl	4000a38c <_txe_mutex_put>
400195d4:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PDmaInit:

400195d8 <CyU3PDmaInit>:
400195d8:	e92d4010 	push	{r4, lr}
400195dc:	e3a02020 	mov	r2, #32
400195e0:	e3a01000 	mov	r1, #0
400195e4:	e59f006c 	ldr	r0, [pc, #108]	; 40019658 <CyU3PDmaInit+0x80>
400195e8:	ebffa832 	bl	400036b8 <CyU3PMemSet>
400195ec:	e3a02080 	mov	r2, #128	; 0x80
400195f0:	e3a01000 	mov	r1, #0
400195f4:	e59f0060 	ldr	r0, [pc, #96]	; 4001965c <CyU3PDmaInit+0x84>
400195f8:	ebffa82e 	bl	400036b8 <CyU3PMemSet>
400195fc:	e3a02020 	mov	r2, #32
40019600:	e3a01000 	mov	r1, #0
40019604:	e59f0054 	ldr	r0, [pc, #84]	; 40019660 <CyU3PDmaInit+0x88>
40019608:	ebffa82a 	bl	400036b8 <CyU3PMemSet>
4001960c:	e3a02040 	mov	r2, #64	; 0x40
40019610:	e3a01000 	mov	r1, #0
40019614:	e59f0048 	ldr	r0, [pc, #72]	; 40019664 <CyU3PDmaInit+0x8c>
40019618:	ebffa826 	bl	400036b8 <CyU3PMemSet>
4001961c:	e3a02040 	mov	r2, #64	; 0x40
40019620:	e3a01000 	mov	r1, #0
40019624:	e59f003c 	ldr	r0, [pc, #60]	; 40019668 <CyU3PDmaInit+0x90>
40019628:	ebffa822 	bl	400036b8 <CyU3PMemSet>
4001962c:	e3a00000 	mov	r0, #0
40019630:	e59f1034 	ldr	r1, [pc, #52]	; 4001966c <CyU3PDmaInit+0x94>
40019634:	e5810000 	str	r0, [r1]
40019638:	eb002462 	bl	400227c8 <CyU3PDmaDscrListCreate>
4001963c:	ebffa95e 	bl	40003bbc <CyU3PDmaBufferInit>
40019640:	e3a00000 	mov	r0, #0
40019644:	e59f1024 	ldr	r1, [pc, #36]	; 40019670 <CyU3PDmaInit+0x98>
40019648:	e1c100b0 	strh	r0, [r1]
4001964c:	e59f1020 	ldr	r1, [pc, #32]	; 40019674 <CyU3PDmaInit+0x9c>
40019650:	e1c100b0 	strh	r0, [r1]
40019654:	e8bd8010 	pop	{r4, pc}
40019658:	40031728 	.word	0x40031728
4001965c:	40031748 	.word	0x40031748
40019660:	400317c8 	.word	0x400317c8
40019664:	400317e8 	.word	0x400317e8
40019668:	40031828 	.word	0x40031828
4001966c:	40030cd4 	.word	0x40030cd4
40019670:	40030cfc 	.word	0x40030cfc
40019674:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaIntHandler_TypeAuto:

40019678 <CyU3PDmaIntHandler_TypeAuto>:
40019678:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
4001967c:	e24dd01c 	sub	sp, sp, #28
40019680:	e1a04000 	mov	r4, r0
40019684:	e5949004 	ldr	r9, [r4, #4]
40019688:	e5948008 	ldr	r8, [r4, #8]
4001968c:	e3180040 	tst	r8, #64	; 0x40
40019690:	0a000003 	beq	400196a4 <CyU3PDmaIntHandler_TypeAuto+0x2c>
40019694:	e1a00009 	mov	r0, r9
40019698:	ebffffa7 	bl	4001953c <CyU3PDmaChannelHandleError>
4001969c:	e28dd01c 	add	sp, sp, #28
400196a0:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
400196a4:	e3e01000 	mvn	r1, #0
400196a8:	e289003c 	add	r0, r9, #60	; 0x3c
400196ac:	ebffc301 	bl	4000a2b8 <_txe_mutex_get>
400196b0:	e1d901b2 	ldrh	r0, [r9, #18]
400196b4:	e5941000 	ldr	r1, [r4]
400196b8:	e1500821 	cmp	r0, r1, lsr #16
400196bc:	1a00004b 	bne	400197f0 <CyU3PDmaIntHandler_TypeAuto+0x178>
400196c0:	e1d901b2 	ldrh	r0, [r9, #18]
400196c4:	e3a0103f 	mov	r1, #63	; 0x3f
400196c8:	e0015440 	and	r5, r1, r0, asr #8
400196cc:	e1d901b2 	ldrh	r0, [r9, #18]
400196d0:	e20060ff 	and	r6, r0, #255	; 0xff
400196d4:	e594000c 	ldr	r0, [r4, #12]
400196d8:	e1a07800 	lsl	r7, r0, #16
400196dc:	e1a07827 	lsr	r7, r7, #16
400196e0:	e3180080 	tst	r8, #128	; 0x80
400196e4:	0a000012 	beq	40019734 <CyU3PDmaIntHandler_TypeAuto+0xbc>
400196e8:	e3a00001 	mov	r0, #1
400196ec:	e5890000 	str	r0, [r9]
400196f0:	e3a02000 	mov	r2, #0
400196f4:	e3a01001 	mov	r1, #1
400196f8:	e2890074 	add	r0, r9, #116	; 0x74
400196fc:	ebffc255 	bl	4000a058 <_txe_event_flags_set>
40019700:	ebffe599 	bl	40012d6c <CyU3PSysBarrierSync>
40019704:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019708:	e3500000 	cmp	r0, #0
4001970c:	0a000028 	beq	400197b4 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019710:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019714:	e3100001 	tst	r0, #1
40019718:	0a000025 	beq	400197b4 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001971c:	e3a02000 	mov	r2, #0
40019720:	e3a01001 	mov	r1, #1
40019724:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019728:	e1a00009 	mov	r0, r9
4001972c:	e12fff33 	blx	r3
40019730:	ea00001f 	b	400197b4 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019734:	e3180002 	tst	r8, #2
40019738:	0a00001d 	beq	400197b4 <CyU3PDmaIntHandler_TypeAuto+0x13c>
4001973c:	e5990000 	ldr	r0, [r9]
40019740:	e3500003 	cmp	r0, #3
40019744:	1a00001a 	bne	400197b4 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019748:	e3a00001 	mov	r0, #1
4001974c:	e5890000 	str	r0, [r9]
40019750:	e59f0284 	ldr	r0, [pc, #644]	; 400199dc <CyU3PDmaIntHandler_TypeAuto+0x364>
40019754:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019758:	e0800386 	add	r0, r0, r6, lsl #7
4001975c:	e5900014 	ldr	r0, [r0, #20]
40019760:	e3c00002 	bic	r0, r0, #2
40019764:	e59f1270 	ldr	r1, [pc, #624]	; 400199dc <CyU3PDmaIntHandler_TypeAuto+0x364>
40019768:	e7911105 	ldr	r1, [r1, r5, lsl #2]
4001976c:	e0811386 	add	r1, r1, r6, lsl #7
40019770:	e5810014 	str	r0, [r1, #20]
40019774:	e3a02000 	mov	r2, #0
40019778:	e3a01002 	mov	r1, #2
4001977c:	e2890074 	add	r0, r9, #116	; 0x74
40019780:	ebffc234 	bl	4000a058 <_txe_event_flags_set>
40019784:	ebffe578 	bl	40012d6c <CyU3PSysBarrierSync>
40019788:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
4001978c:	e3500000 	cmp	r0, #0
40019790:	0a000007 	beq	400197b4 <CyU3PDmaIntHandler_TypeAuto+0x13c>
40019794:	e5990030 	ldr	r0, [r9, #48]	; 0x30
40019798:	e3100002 	tst	r0, #2
4001979c:	0a000004 	beq	400197b4 <CyU3PDmaIntHandler_TypeAuto+0x13c>
400197a0:	e3a02000 	mov	r2, #0
400197a4:	e3a01002 	mov	r1, #2
400197a8:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400197ac:	e1a00009 	mov	r0, r9
400197b0:	e12fff33 	blx	r3
400197b4:	e3180e12 	tst	r8, #288	; 0x120
400197b8:	0a000084 	beq	400199d0 <CyU3PDmaIntHandler_TypeAuto+0x358>
400197bc:	ebffe56a 	bl	40012d6c <CyU3PSysBarrierSync>
400197c0:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400197c4:	e3500000 	cmp	r0, #0
400197c8:	0a000080 	beq	400199d0 <CyU3PDmaIntHandler_TypeAuto+0x358>
400197cc:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400197d0:	e3100c01 	tst	r0, #256	; 0x100
400197d4:	0a00007d 	beq	400199d0 <CyU3PDmaIntHandler_TypeAuto+0x358>
400197d8:	e3a02000 	mov	r2, #0
400197dc:	e3a01c01 	mov	r1, #256	; 0x100
400197e0:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400197e4:	e1a00009 	mov	r0, r9
400197e8:	e12fff33 	blx	r3
400197ec:	ea000077 	b	400199d0 <CyU3PDmaIntHandler_TypeAuto+0x358>
400197f0:	e1d901b0 	ldrh	r0, [r9, #16]
400197f4:	e3a0103f 	mov	r1, #63	; 0x3f
400197f8:	e0015440 	and	r5, r1, r0, asr #8
400197fc:	e1d901b0 	ldrh	r0, [r9, #16]
40019800:	e20060ff 	and	r6, r0, #255	; 0xff
40019804:	e594000c 	ldr	r0, [r4, #12]
40019808:	e1a07800 	lsl	r7, r0, #16
4001980c:	e1a07827 	lsr	r7, r7, #16
40019810:	e3180001 	tst	r8, #1
40019814:	0a00005f 	beq	40019998 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019818:	e5990000 	ldr	r0, [r9]
4001981c:	e3500004 	cmp	r0, #4
40019820:	0a00002b 	beq	400198d4 <CyU3PDmaIntHandler_TypeAuto+0x25c>
40019824:	e1a00000 	nop			; (mov r0, r0)
40019828:	e1d901b6 	ldrh	r0, [r9, #22]
4001982c:	e28d100c 	add	r1, sp, #12
40019830:	eb002420 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019834:	e59d000c 	ldr	r0, [sp, #12]
40019838:	e58d0000 	str	r0, [sp]
4001983c:	e59d0018 	ldr	r0, [sp, #24]
40019840:	e59f1198 	ldr	r1, [pc, #408]	; 400199e0 <CyU3PDmaIntHandler_TypeAuto+0x368>
40019844:	e0010820 	and	r0, r1, r0, lsr #16
40019848:	e1cd00b4 	strh	r0, [sp, #4]
4001984c:	e241100f 	sub	r1, r1, #15
40019850:	e59d0018 	ldr	r0, [sp, #24]
40019854:	e0000001 	and	r0, r0, r1
40019858:	e1cd00b6 	strh	r0, [sp, #6]
4001985c:	e59d0018 	ldr	r0, [sp, #24]
40019860:	e200000f 	and	r0, r0, #15
40019864:	e1cd00b8 	strh	r0, [sp, #8]
40019868:	e1811241 	orr	r1, r1, r1, asr #4
4001986c:	e59d0014 	ldr	r0, [sp, #20]
40019870:	e0010820 	and	r0, r1, r0, lsr #16
40019874:	e1c901b6 	strh	r0, [r9, #22]
40019878:	ebffe53b 	bl	40012d6c <CyU3PSysBarrierSync>
4001987c:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019880:	e3500000 	cmp	r0, #0
40019884:	0a000002 	beq	40019894 <CyU3PDmaIntHandler_TypeAuto+0x21c>
40019888:	e1dd10b6 	ldrh	r1, [sp, #6]
4001988c:	e59d0000 	ldr	r0, [sp]
40019890:	ebffe2dc 	bl	40012408 <CyU3PSysFlushDRegion>
40019894:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019898:	e3500000 	cmp	r0, #0
4001989c:	0a000007 	beq	400198c0 <CyU3PDmaIntHandler_TypeAuto+0x248>
400198a0:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400198a4:	e3100008 	tst	r0, #8
400198a8:	0a000004 	beq	400198c0 <CyU3PDmaIntHandler_TypeAuto+0x248>
400198ac:	e1a0200d 	mov	r2, sp
400198b0:	e3a01008 	mov	r1, #8
400198b4:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400198b8:	e1a00009 	mov	r0, r9
400198bc:	e12fff33 	blx	r3
400198c0:	e1d901b6 	ldrh	r0, [r9, #22]
400198c4:	e1500007 	cmp	r0, r7
400198c8:	1affffd6 	bne	40019828 <CyU3PDmaIntHandler_TypeAuto+0x1b0>
400198cc:	e1c971be 	strh	r7, [r9, #30]
400198d0:	ea000030 	b	40019998 <CyU3PDmaIntHandler_TypeAuto+0x320>
400198d4:	e1d901b4 	ldrh	r0, [r9, #20]
400198d8:	e28d100c 	add	r1, sp, #12
400198dc:	eb0023f5 	bl	400228b8 <CyU3PDmaDscrGetConfig>
400198e0:	e59d000c 	ldr	r0, [sp, #12]
400198e4:	e58d0000 	str	r0, [sp]
400198e8:	e59d0018 	ldr	r0, [sp, #24]
400198ec:	e59f10ec 	ldr	r1, [pc, #236]	; 400199e0 <CyU3PDmaIntHandler_TypeAuto+0x368>
400198f0:	e0010820 	and	r0, r1, r0, lsr #16
400198f4:	e1cd00b4 	strh	r0, [sp, #4]
400198f8:	e241100f 	sub	r1, r1, #15
400198fc:	e59d0018 	ldr	r0, [sp, #24]
40019900:	e0000001 	and	r0, r0, r1
40019904:	e1cd00b6 	strh	r0, [sp, #6]
40019908:	e59d0018 	ldr	r0, [sp, #24]
4001990c:	e200000f 	and	r0, r0, #15
40019910:	e1cd00b8 	strh	r0, [sp, #8]
40019914:	e3a00001 	mov	r0, #1
40019918:	e5890000 	str	r0, [r9]
4001991c:	e59f00b8 	ldr	r0, [pc, #184]	; 400199dc <CyU3PDmaIntHandler_TypeAuto+0x364>
40019920:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40019924:	e0800386 	add	r0, r0, r6, lsl #7
40019928:	e5900014 	ldr	r0, [r0, #20]
4001992c:	e3c00001 	bic	r0, r0, #1
40019930:	e59f10a4 	ldr	r1, [pc, #164]	; 400199dc <CyU3PDmaIntHandler_TypeAuto+0x364>
40019934:	e7911105 	ldr	r1, [r1, r5, lsl #2]
40019938:	e0811386 	add	r1, r1, r6, lsl #7
4001993c:	e5810014 	str	r0, [r1, #20]
40019940:	e5990038 	ldr	r0, [r9, #56]	; 0x38
40019944:	e3500000 	cmp	r0, #0
40019948:	0a000002 	beq	40019958 <CyU3PDmaIntHandler_TypeAuto+0x2e0>
4001994c:	e1dd10b6 	ldrh	r1, [sp, #6]
40019950:	e59d0000 	ldr	r0, [sp]
40019954:	ebffe2ab 	bl	40012408 <CyU3PSysFlushDRegion>
40019958:	e3a02000 	mov	r2, #0
4001995c:	e3a01004 	mov	r1, #4
40019960:	e2890074 	add	r0, r9, #116	; 0x74
40019964:	ebffc1bb 	bl	4000a058 <_txe_event_flags_set>
40019968:	ebffe4ff 	bl	40012d6c <CyU3PSysBarrierSync>
4001996c:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
40019970:	e3500000 	cmp	r0, #0
40019974:	0a000007 	beq	40019998 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019978:	e5990030 	ldr	r0, [r9, #48]	; 0x30
4001997c:	e3100004 	tst	r0, #4
40019980:	0a000004 	beq	40019998 <CyU3PDmaIntHandler_TypeAuto+0x320>
40019984:	e1a0200d 	mov	r2, sp
40019988:	e3a01004 	mov	r1, #4
4001998c:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
40019990:	e1a00009 	mov	r0, r9
40019994:	e12fff33 	blx	r3
40019998:	e3180020 	tst	r8, #32
4001999c:	0a00000b 	beq	400199d0 <CyU3PDmaIntHandler_TypeAuto+0x358>
400199a0:	ebffe4f1 	bl	40012d6c <CyU3PSysBarrierSync>
400199a4:	e599009c 	ldr	r0, [r9, #156]	; 0x9c
400199a8:	e3500000 	cmp	r0, #0
400199ac:	0a000007 	beq	400199d0 <CyU3PDmaIntHandler_TypeAuto+0x358>
400199b0:	e5990030 	ldr	r0, [r9, #48]	; 0x30
400199b4:	e3100080 	tst	r0, #128	; 0x80
400199b8:	0a000004 	beq	400199d0 <CyU3PDmaIntHandler_TypeAuto+0x358>
400199bc:	e3a02000 	mov	r2, #0
400199c0:	e3a01080 	mov	r1, #128	; 0x80
400199c4:	e599309c 	ldr	r3, [r9, #156]	; 0x9c
400199c8:	e1a00009 	mov	r0, r9
400199cc:	e12fff33 	blx	r3
400199d0:	e289003c 	add	r0, r9, #60	; 0x3c
400199d4:	ebffc26c 	bl	4000a38c <_txe_mutex_put>
400199d8:	eaffff2f 	b	4001969c <CyU3PDmaIntHandler_TypeAuto+0x24>
400199dc:	40030cd8 	.word	0x40030cd8
400199e0:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManual:

400199e4 <CyU3PDmaIntHandler_TypeManual>:
400199e4:	e92d40f0 	push	{r4, r5, r6, r7, lr}
400199e8:	e24dd034 	sub	sp, sp, #52	; 0x34
400199ec:	e1a04000 	mov	r4, r0
400199f0:	e5945004 	ldr	r5, [r4, #4]
400199f4:	e5946008 	ldr	r6, [r4, #8]
400199f8:	e3160040 	tst	r6, #64	; 0x40
400199fc:	0a000003 	beq	40019a10 <CyU3PDmaIntHandler_TypeManual+0x2c>
40019a00:	e1a00005 	mov	r0, r5
40019a04:	ebfffecc 	bl	4001953c <CyU3PDmaChannelHandleError>
40019a08:	e28dd034 	add	sp, sp, #52	; 0x34
40019a0c:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
40019a10:	e3e01000 	mvn	r1, #0
40019a14:	e285003c 	add	r0, r5, #60	; 0x3c
40019a18:	ebffc226 	bl	4000a2b8 <_txe_mutex_get>
40019a1c:	e1d501b2 	ldrh	r0, [r5, #18]
40019a20:	e5941000 	ldr	r1, [r4]
40019a24:	e1500821 	cmp	r0, r1, lsr #16
40019a28:	1a0000d6 	bne	40019d88 <CyU3PDmaIntHandler_TypeManual+0x3a4>
40019a2c:	e594000c 	ldr	r0, [r4, #12]
40019a30:	e1a07800 	lsl	r7, r0, #16
40019a34:	e1a07827 	lsr	r7, r7, #16
40019a38:	e3160002 	tst	r6, #2
40019a3c:	0a000060 	beq	40019bc4 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a40:	e5950000 	ldr	r0, [r5]
40019a44:	e3500003 	cmp	r0, #3
40019a48:	1a000013 	bne	40019a9c <CyU3PDmaIntHandler_TypeManual+0xb8>
40019a4c:	e3a00001 	mov	r0, #1
40019a50:	e5850000 	str	r0, [r5]
40019a54:	e3a02000 	mov	r2, #0
40019a58:	e3a01002 	mov	r1, #2
40019a5c:	e2850074 	add	r0, r5, #116	; 0x74
40019a60:	ebffc17c 	bl	4000a058 <_txe_event_flags_set>
40019a64:	e3c66080 	bic	r6, r6, #128	; 0x80
40019a68:	ebffe4bf 	bl	40012d6c <CyU3PSysBarrierSync>
40019a6c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019a70:	e3500000 	cmp	r0, #0
40019a74:	0a000052 	beq	40019bc4 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a78:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019a7c:	e3100002 	tst	r0, #2
40019a80:	0a00004f 	beq	40019bc4 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a84:	e3a02000 	mov	r2, #0
40019a88:	e3a01002 	mov	r1, #2
40019a8c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019a90:	e1a00005 	mov	r0, r5
40019a94:	e12fff33 	blx	r3
40019a98:	ea000049 	b	40019bc4 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019a9c:	e1d500b4 	ldrh	r0, [r5, #4]
40019aa0:	e3500002 	cmp	r0, #2
40019aa4:	1a000027 	bne	40019b48 <CyU3PDmaIntHandler_TypeManual+0x164>
40019aa8:	e1a00000 	nop			; (mov r0, r0)
40019aac:	e1d501ba 	ldrh	r0, [r5, #26]
40019ab0:	e28d1024 	add	r1, sp, #36	; 0x24
40019ab4:	eb00237f 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019ab8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019abc:	e59f14a8 	ldr	r1, [pc, #1192]	; 40019f6c <CyU3PDmaIntHandler_TypeManual+0x588>
40019ac0:	e0000001 	and	r0, r0, r1
40019ac4:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019ac8:	e1d501ba 	ldrh	r0, [r5, #26]
40019acc:	e28d1024 	add	r1, sp, #36	; 0x24
40019ad0:	eb002393 	bl	40022924 <CyU3PDmaDscrSetConfig>
40019ad4:	e1d511ba 	ldrh	r1, [r5, #26]
40019ad8:	e1d501b0 	ldrh	r0, [r5, #16]
40019adc:	e3a02000 	mov	r2, #0
40019ae0:	ebffedaf 	bl	400151a4 <CyU3PDmaSocketSendEvent>
40019ae4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019ae8:	e59f1480 	ldr	r1, [pc, #1152]	; 40019f70 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019aec:	e0010820 	and	r0, r1, r0, lsr #16
40019af0:	e1c501ba 	strh	r0, [r5, #26]
40019af4:	e1d502b0 	ldrh	r0, [r5, #32]
40019af8:	e28d1024 	add	r1, sp, #36	; 0x24
40019afc:	eb00236d 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019b00:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b04:	e1c502b0 	strh	r0, [r5, #32]
40019b08:	ebffe497 	bl	40012d6c <CyU3PSysBarrierSync>
40019b0c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b10:	e3500000 	cmp	r0, #0
40019b14:	0a000007 	beq	40019b38 <CyU3PDmaIntHandler_TypeManual+0x154>
40019b18:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b1c:	e3100010 	tst	r0, #16
40019b20:	0a000004 	beq	40019b38 <CyU3PDmaIntHandler_TypeManual+0x154>
40019b24:	e3a02000 	mov	r2, #0
40019b28:	e3a01010 	mov	r1, #16
40019b2c:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019b30:	e1a00005 	mov	r0, r5
40019b34:	e12fff33 	blx	r3
40019b38:	e1d502b0 	ldrh	r0, [r5, #32]
40019b3c:	e1500007 	cmp	r0, r7
40019b40:	1affffd9 	bne	40019aac <CyU3PDmaIntHandler_TypeManual+0xc8>
40019b44:	ea00001e 	b	40019bc4 <CyU3PDmaIntHandler_TypeManual+0x1e0>
40019b48:	e1a00000 	nop			; (mov r0, r0)
40019b4c:	e1d501b8 	ldrh	r0, [r5, #24]
40019b50:	e28d1024 	add	r1, sp, #36	; 0x24
40019b54:	eb002357 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019b58:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019b5c:	e3100008 	tst	r0, #8
40019b60:	1a000003 	bne	40019b74 <CyU3PDmaIntHandler_TypeManual+0x190>
40019b64:	e3a02000 	mov	r2, #0
40019b68:	e3a01010 	mov	r1, #16
40019b6c:	e2850074 	add	r0, r5, #116	; 0x74
40019b70:	ebffc138 	bl	4000a058 <_txe_event_flags_set>
40019b74:	e1d502b0 	ldrh	r0, [r5, #32]
40019b78:	e28d1024 	add	r1, sp, #36	; 0x24
40019b7c:	eb00234d 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019b80:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019b84:	e1c502b0 	strh	r0, [r5, #32]
40019b88:	ebffe477 	bl	40012d6c <CyU3PSysBarrierSync>
40019b8c:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019b90:	e3500000 	cmp	r0, #0
40019b94:	0a000007 	beq	40019bb8 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019b98:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019b9c:	e3100010 	tst	r0, #16
40019ba0:	0a000004 	beq	40019bb8 <CyU3PDmaIntHandler_TypeManual+0x1d4>
40019ba4:	e3a02000 	mov	r2, #0
40019ba8:	e3a01010 	mov	r1, #16
40019bac:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019bb0:	e1a00005 	mov	r0, r5
40019bb4:	e12fff33 	blx	r3
40019bb8:	e1d502b0 	ldrh	r0, [r5, #32]
40019bbc:	e1500007 	cmp	r0, r7
40019bc0:	1affffe1 	bne	40019b4c <CyU3PDmaIntHandler_TypeManual+0x168>
40019bc4:	e3160010 	tst	r6, #16
40019bc8:	0a000046 	beq	40019ce8 <CyU3PDmaIntHandler_TypeManual+0x304>
40019bcc:	e1d502b0 	ldrh	r0, [r5, #32]
40019bd0:	e28d1024 	add	r1, sp, #36	; 0x24
40019bd4:	eb002337 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019bd8:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019bdc:	e3100001 	tst	r0, #1
40019be0:	0a000040 	beq	40019ce8 <CyU3PDmaIntHandler_TypeManual+0x304>
40019be4:	e1d501b2 	ldrh	r0, [r5, #18]
40019be8:	ebffecbd 	bl	40014ee4 <CyU3PDmaSocketDisable>
40019bec:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019bf0:	e59f1374 	ldr	r1, [pc, #884]	; 40019f6c <CyU3PDmaIntHandler_TypeManual+0x588>
40019bf4:	e0000001 	and	r0, r0, r1
40019bf8:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019bfc:	e1d502b0 	ldrh	r0, [r5, #32]
40019c00:	e28d1024 	add	r1, sp, #36	; 0x24
40019c04:	eb002346 	bl	40022924 <CyU3PDmaDscrSetConfig>
40019c08:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019c0c:	e1c502b0 	strh	r0, [r5, #32]
40019c10:	e1d501b2 	ldrh	r0, [r5, #18]
40019c14:	e28d100c 	add	r1, sp, #12
40019c18:	ebffecc9 	bl	40014f44 <CyU3PDmaSocketGetConfig>
40019c1c:	e59d0018 	ldr	r0, [sp, #24]
40019c20:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
40019c24:	e58d0018 	str	r0, [sp, #24]
40019c28:	e59d0018 	ldr	r0, [sp, #24]
40019c2c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40019c30:	e58d0018 	str	r0, [sp, #24]
40019c34:	e3a00000 	mov	r0, #0
40019c38:	e58d001c 	str	r0, [sp, #28]
40019c3c:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019c40:	e2400001 	sub	r0, r0, #1
40019c44:	e1c502be 	strh	r0, [r5, #46]	; 0x2e
40019c48:	e1d502be 	ldrh	r0, [r5, #46]	; 0x2e
40019c4c:	e3500000 	cmp	r0, #0
40019c50:	1a000004 	bne	40019c68 <CyU3PDmaIntHandler_TypeManual+0x284>
40019c54:	e3a00010 	mov	r0, #16
40019c58:	e58d001c 	str	r0, [sp, #28]
40019c5c:	e59d0020 	ldr	r0, [sp, #32]
40019c60:	e3c00010 	bic	r0, r0, #16
40019c64:	e58d0020 	str	r0, [sp, #32]
40019c68:	e1d502b0 	ldrh	r0, [r5, #32]
40019c6c:	e58d000c 	str	r0, [sp, #12]
40019c70:	e1d501b2 	ldrh	r0, [r5, #18]
40019c74:	e28d100c 	add	r1, sp, #12
40019c78:	ebffed5b 	bl	400151ec <CyU3PDmaSocketSetConfig>
40019c7c:	e1d501ba 	ldrh	r0, [r5, #26]
40019c80:	e28d1024 	add	r1, sp, #36	; 0x24
40019c84:	eb00230b 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019c88:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019c8c:	e59f12d8 	ldr	r1, [pc, #728]	; 40019f6c <CyU3PDmaIntHandler_TypeManual+0x588>
40019c90:	e0000001 	and	r0, r0, r1
40019c94:	e58d0030 	str	r0, [sp, #48]	; 0x30
40019c98:	e1d501ba 	ldrh	r0, [r5, #26]
40019c9c:	e28d1024 	add	r1, sp, #36	; 0x24
40019ca0:	eb00231f 	bl	40022924 <CyU3PDmaDscrSetConfig>
40019ca4:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019ca8:	e3500000 	cmp	r0, #0
40019cac:	0a000004 	beq	40019cc4 <CyU3PDmaIntHandler_TypeManual+0x2e0>
40019cb0:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
40019cb4:	e59f32b0 	ldr	r3, [pc, #688]	; 40019f6c <CyU3PDmaIntHandler_TypeManual+0x588>
40019cb8:	e0021003 	and	r1, r2, r3
40019cbc:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019cc0:	ebffe1d0 	bl	40012408 <CyU3PSysFlushDRegion>
40019cc4:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019cc8:	e59f12a0 	ldr	r1, [pc, #672]	; 40019f70 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019ccc:	e0010820 	and	r0, r1, r0, lsr #16
40019cd0:	e1c501ba 	strh	r0, [r5, #26]
40019cd4:	e1d511ba 	ldrh	r1, [r5, #26]
40019cd8:	e1d501b0 	ldrh	r0, [r5, #16]
40019cdc:	e3a02000 	mov	r2, #0
40019ce0:	ebffed2f 	bl	400151a4 <CyU3PDmaSocketSendEvent>
40019ce4:	ebffe420 	bl	40012d6c <CyU3PSysBarrierSync>
40019ce8:	e3160080 	tst	r6, #128	; 0x80
40019cec:	0a000016 	beq	40019d4c <CyU3PDmaIntHandler_TypeManual+0x368>
40019cf0:	e1d500b4 	ldrh	r0, [r5, #4]
40019cf4:	e3500002 	cmp	r0, #2
40019cf8:	1a000001 	bne	40019d04 <CyU3PDmaIntHandler_TypeManual+0x320>
40019cfc:	e1d501b0 	ldrh	r0, [r5, #16]
40019d00:	ebffec77 	bl	40014ee4 <CyU3PDmaSocketDisable>
40019d04:	e3a00001 	mov	r0, #1
40019d08:	e5850000 	str	r0, [r5]
40019d0c:	e3a02000 	mov	r2, #0
40019d10:	e3a01001 	mov	r1, #1
40019d14:	e2850074 	add	r0, r5, #116	; 0x74
40019d18:	ebffc0ce 	bl	4000a058 <_txe_event_flags_set>
40019d1c:	ebffe412 	bl	40012d6c <CyU3PSysBarrierSync>
40019d20:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019d24:	e3500000 	cmp	r0, #0
40019d28:	0a000007 	beq	40019d4c <CyU3PDmaIntHandler_TypeManual+0x368>
40019d2c:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019d30:	e3100001 	tst	r0, #1
40019d34:	0a000004 	beq	40019d4c <CyU3PDmaIntHandler_TypeManual+0x368>
40019d38:	e3a02000 	mov	r2, #0
40019d3c:	e3a01001 	mov	r1, #1
40019d40:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019d44:	e1a00005 	mov	r0, r5
40019d48:	e12fff33 	blx	r3
40019d4c:	e3160e12 	tst	r6, #288	; 0x120
40019d50:	0a000082 	beq	40019f60 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d54:	ebffe404 	bl	40012d6c <CyU3PSysBarrierSync>
40019d58:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019d5c:	e3500000 	cmp	r0, #0
40019d60:	0a00007e 	beq	40019f60 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d64:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019d68:	e3100c01 	tst	r0, #256	; 0x100
40019d6c:	0a00007b 	beq	40019f60 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d70:	e3a02000 	mov	r2, #0
40019d74:	e3a01c01 	mov	r1, #256	; 0x100
40019d78:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019d7c:	e1a00005 	mov	r0, r5
40019d80:	e12fff33 	blx	r3
40019d84:	ea000075 	b	40019f60 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019d88:	e594000c 	ldr	r0, [r4, #12]
40019d8c:	e1a07800 	lsl	r7, r0, #16
40019d90:	e1a07827 	lsr	r7, r7, #16
40019d94:	e3160001 	tst	r6, #1
40019d98:	0a00005d 	beq	40019f14 <CyU3PDmaIntHandler_TypeManual+0x530>
40019d9c:	e5950000 	ldr	r0, [r5]
40019da0:	e3500004 	cmp	r0, #4
40019da4:	0a000031 	beq	40019e70 <CyU3PDmaIntHandler_TypeManual+0x48c>
40019da8:	e1a00000 	nop			; (mov r0, r0)
40019dac:	e1d501be 	ldrh	r0, [r5, #30]
40019db0:	e28d1024 	add	r1, sp, #36	; 0x24
40019db4:	eb0022bf 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019db8:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019dbc:	e58d0000 	str	r0, [sp]
40019dc0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019dc4:	e59f11a4 	ldr	r1, [pc, #420]	; 40019f70 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019dc8:	e0010820 	and	r0, r1, r0, lsr #16
40019dcc:	e1cd00b4 	strh	r0, [sp, #4]
40019dd0:	e241100f 	sub	r1, r1, #15
40019dd4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019dd8:	e0000001 	and	r0, r0, r1
40019ddc:	e1cd00b6 	strh	r0, [sp, #6]
40019de0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019de4:	e200000f 	and	r0, r0, #15
40019de8:	e1cd00b8 	strh	r0, [sp, #8]
40019dec:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019df0:	e3500000 	cmp	r0, #0
40019df4:	0a000002 	beq	40019e04 <CyU3PDmaIntHandler_TypeManual+0x420>
40019df8:	e1dd10b6 	ldrh	r1, [sp, #6]
40019dfc:	e59d0000 	ldr	r0, [sp]
40019e00:	ebffe180 	bl	40012408 <CyU3PSysFlushDRegion>
40019e04:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e08:	e3100008 	tst	r0, #8
40019e0c:	0a000003 	beq	40019e20 <CyU3PDmaIntHandler_TypeManual+0x43c>
40019e10:	e3a02000 	mov	r2, #0
40019e14:	e3a01008 	mov	r1, #8
40019e18:	e2850074 	add	r0, r5, #116	; 0x74
40019e1c:	ebffc08d 	bl	4000a058 <_txe_event_flags_set>
40019e20:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019e24:	e59f1144 	ldr	r1, [pc, #324]	; 40019f70 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019e28:	e0010820 	and	r0, r1, r0, lsr #16
40019e2c:	e1c501be 	strh	r0, [r5, #30]
40019e30:	ebffe3cd 	bl	40012d6c <CyU3PSysBarrierSync>
40019e34:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019e38:	e3500000 	cmp	r0, #0
40019e3c:	0a000007 	beq	40019e60 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019e40:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019e44:	e3100008 	tst	r0, #8
40019e48:	0a000004 	beq	40019e60 <CyU3PDmaIntHandler_TypeManual+0x47c>
40019e4c:	e1a0200d 	mov	r2, sp
40019e50:	e3a01008 	mov	r1, #8
40019e54:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019e58:	e1a00005 	mov	r0, r5
40019e5c:	e12fff33 	blx	r3
40019e60:	e1d501be 	ldrh	r0, [r5, #30]
40019e64:	e1500007 	cmp	r0, r7
40019e68:	1affffcf 	bne	40019dac <CyU3PDmaIntHandler_TypeManual+0x3c8>
40019e6c:	ea000028 	b	40019f14 <CyU3PDmaIntHandler_TypeManual+0x530>
40019e70:	e1d501b4 	ldrh	r0, [r5, #20]
40019e74:	e28d1024 	add	r1, sp, #36	; 0x24
40019e78:	eb00228e 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019e7c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
40019e80:	e58d0000 	str	r0, [sp]
40019e84:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e88:	e59f10e0 	ldr	r1, [pc, #224]	; 40019f70 <CyU3PDmaIntHandler_TypeManual+0x58c>
40019e8c:	e0010820 	and	r0, r1, r0, lsr #16
40019e90:	e1cd00b4 	strh	r0, [sp, #4]
40019e94:	e241100f 	sub	r1, r1, #15
40019e98:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019e9c:	e0000001 	and	r0, r0, r1
40019ea0:	e1cd00b6 	strh	r0, [sp, #6]
40019ea4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
40019ea8:	e200000f 	and	r0, r0, #15
40019eac:	e1cd00b8 	strh	r0, [sp, #8]
40019eb0:	e3a00001 	mov	r0, #1
40019eb4:	e5850000 	str	r0, [r5]
40019eb8:	e5950038 	ldr	r0, [r5, #56]	; 0x38
40019ebc:	e3500000 	cmp	r0, #0
40019ec0:	0a000002 	beq	40019ed0 <CyU3PDmaIntHandler_TypeManual+0x4ec>
40019ec4:	e1dd10b6 	ldrh	r1, [sp, #6]
40019ec8:	e59d0000 	ldr	r0, [sp]
40019ecc:	ebffe14d 	bl	40012408 <CyU3PSysFlushDRegion>
40019ed0:	e3a02000 	mov	r2, #0
40019ed4:	e3a01004 	mov	r1, #4
40019ed8:	e2850074 	add	r0, r5, #116	; 0x74
40019edc:	ebffc05d 	bl	4000a058 <_txe_event_flags_set>
40019ee0:	e3c66080 	bic	r6, r6, #128	; 0x80
40019ee4:	ebffe3a0 	bl	40012d6c <CyU3PSysBarrierSync>
40019ee8:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019eec:	e3500000 	cmp	r0, #0
40019ef0:	0a000007 	beq	40019f14 <CyU3PDmaIntHandler_TypeManual+0x530>
40019ef4:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019ef8:	e3100004 	tst	r0, #4
40019efc:	0a000004 	beq	40019f14 <CyU3PDmaIntHandler_TypeManual+0x530>
40019f00:	e1a0200d 	mov	r2, sp
40019f04:	e3a01004 	mov	r1, #4
40019f08:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019f0c:	e1a00005 	mov	r0, r5
40019f10:	e12fff33 	blx	r3
40019f14:	e3160080 	tst	r6, #128	; 0x80
40019f18:	0a000002 	beq	40019f28 <CyU3PDmaIntHandler_TypeManual+0x544>
40019f1c:	e3a00006 	mov	r0, #6
40019f20:	e5850000 	str	r0, [r5]
40019f24:	ebffe390 	bl	40012d6c <CyU3PSysBarrierSync>
40019f28:	e3160020 	tst	r6, #32
40019f2c:	0a00000b 	beq	40019f60 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f30:	ebffe38d 	bl	40012d6c <CyU3PSysBarrierSync>
40019f34:	e595009c 	ldr	r0, [r5, #156]	; 0x9c
40019f38:	e3500000 	cmp	r0, #0
40019f3c:	0a000007 	beq	40019f60 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f40:	e5950030 	ldr	r0, [r5, #48]	; 0x30
40019f44:	e3100080 	tst	r0, #128	; 0x80
40019f48:	0a000004 	beq	40019f60 <CyU3PDmaIntHandler_TypeManual+0x57c>
40019f4c:	e3a02000 	mov	r2, #0
40019f50:	e3a01080 	mov	r1, #128	; 0x80
40019f54:	e595309c 	ldr	r3, [r5, #156]	; 0x9c
40019f58:	e1a00005 	mov	r0, r5
40019f5c:	e12fff33 	blx	r3
40019f60:	e285003c 	add	r0, r5, #60	; 0x3c
40019f64:	ebffc108 	bl	4000a38c <_txe_mutex_put>
40019f68:	eafffea6 	b	40019a08 <CyU3PDmaIntHandler_TypeManual+0x24>
40019f6c:	0000fff0 	.word	0x0000fff0
40019f70:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaIntHandler_TypeManyToOne:

40019f74 <CyU3PDmaIntHandler_TypeManyToOne>:
40019f74:	e92d43f0 	push	{r4, r5, r6, r7, r8, r9, lr}
40019f78:	e24dd034 	sub	sp, sp, #52	; 0x34
40019f7c:	e1a04000 	mov	r4, r0
40019f80:	e5945004 	ldr	r5, [r4, #4]
40019f84:	e5946008 	ldr	r6, [r4, #8]
40019f88:	e3160040 	tst	r6, #64	; 0x40
40019f8c:	0a000003 	beq	40019fa0 <CyU3PDmaIntHandler_TypeManyToOne+0x2c>
40019f90:	e1a00005 	mov	r0, r5
40019f94:	eb00033d 	bl	4001ac90 <CyU3PDmaMultiChannelHandleError>
40019f98:	e28dd034 	add	sp, sp, #52	; 0x34
40019f9c:	e8bd83f0 	pop	{r4, r5, r6, r7, r8, r9, pc}
40019fa0:	e3e01000 	mvn	r1, #0
40019fa4:	e2850078 	add	r0, r5, #120	; 0x78
40019fa8:	ebffc0c2 	bl	4000a2b8 <_txe_mutex_get>
40019fac:	e5940000 	ldr	r0, [r4]
40019fb0:	e59f1590 	ldr	r1, [pc, #1424]	; 4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019fb4:	e0019820 	and	r9, r1, r0, lsr #16
40019fb8:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
40019fbc:	e1500009 	cmp	r0, r9
40019fc0:	1a0000d8 	bne	4001a328 <CyU3PDmaIntHandler_TypeManyToOne+0x3b4>
40019fc4:	e594000c 	ldr	r0, [r4, #12]
40019fc8:	e0007001 	and	r7, r0, r1
40019fcc:	e3160002 	tst	r6, #2
40019fd0:	0a000054 	beq	4001a128 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
40019fd4:	e5950000 	ldr	r0, [r5]
40019fd8:	e3500003 	cmp	r0, #3
40019fdc:	0a000030 	beq	4001a0a4 <CyU3PDmaIntHandler_TypeManyToOne+0x130>
40019fe0:	e1a00000 	nop			; (mov r0, r0)
40019fe4:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
40019fe8:	e28d1024 	add	r1, sp, #36	; 0x24
40019fec:	eb002231 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40019ff0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
40019ff4:	e59f154c 	ldr	r1, [pc, #1356]	; 4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
40019ff8:	e0010820 	and	r0, r1, r0, lsr #16
40019ffc:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
4001a000:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a004:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
4001a008:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a00c:	e28d1024 	add	r1, sp, #36	; 0x24
4001a010:	eb002228 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a014:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a018:	e59f152c 	ldr	r1, [pc, #1324]	; 4001a54c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a01c:	e0000001 	and	r0, r0, r1
4001a020:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a024:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a028:	e28d1024 	add	r1, sp, #36	; 0x24
4001a02c:	eb00223c 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001a030:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a034:	e59f1514 	ldr	r1, [pc, #1300]	; 4001a550 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a038:	e0000001 	and	r0, r0, r1
4001a03c:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a040:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a044:	e1a00820 	lsr	r0, r0, #16
4001a048:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a04c:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a050:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a054:	e1a00802 	lsl	r0, r2, #16
4001a058:	e1a00820 	lsr	r0, r0, #16
4001a05c:	e3a02000 	mov	r2, #0
4001a060:	ebffec4f 	bl	400151a4 <CyU3PDmaSocketSendEvent>
4001a064:	ebffe340 	bl	40012d6c <CyU3PSysBarrierSync>
4001a068:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a06c:	e3500000 	cmp	r0, #0
4001a070:	0a000007 	beq	4001a094 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a074:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a078:	e3100010 	tst	r0, #16
4001a07c:	0a000004 	beq	4001a094 <CyU3PDmaIntHandler_TypeManyToOne+0x120>
4001a080:	e3a02000 	mov	r2, #0
4001a084:	e3a01010 	mov	r1, #16
4001a088:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a08c:	e1a00005 	mov	r0, r5
4001a090:	e12fff33 	blx	r3
4001a094:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a098:	e1500007 	cmp	r0, r7
4001a09c:	1affffd0 	bne	40019fe4 <CyU3PDmaIntHandler_TypeManyToOne+0x70>
4001a0a0:	ea000020 	b	4001a128 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a0a4:	e3a00001 	mov	r0, #1
4001a0a8:	e5850000 	str	r0, [r5]
4001a0ac:	e1d500b4 	ldrh	r0, [r5, #4]
4001a0b0:	e3500005 	cmp	r0, #5
4001a0b4:	1a00000a 	bne	4001a0e4 <CyU3PDmaIntHandler_TypeManyToOne+0x170>
4001a0b8:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a0bc:	e1a0100d 	mov	r1, sp
4001a0c0:	ebffeb9f 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001a0c4:	e3a00000 	mov	r0, #0
4001a0c8:	e58d0010 	str	r0, [sp, #16]
4001a0cc:	e59d0014 	ldr	r0, [sp, #20]
4001a0d0:	e3c00002 	bic	r0, r0, #2
4001a0d4:	e58d0014 	str	r0, [sp, #20]
4001a0d8:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a0dc:	e1a0100d 	mov	r1, sp
4001a0e0:	ebffec41 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001a0e4:	e3a02000 	mov	r2, #0
4001a0e8:	e3a01002 	mov	r1, #2
4001a0ec:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a0f0:	ebffbfd8 	bl	4000a058 <_txe_event_flags_set>
4001a0f4:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a0f8:	ebffe31b 	bl	40012d6c <CyU3PSysBarrierSync>
4001a0fc:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a100:	e3500000 	cmp	r0, #0
4001a104:	0a000007 	beq	4001a128 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a108:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a10c:	e3100002 	tst	r0, #2
4001a110:	0a000004 	beq	4001a128 <CyU3PDmaIntHandler_TypeManyToOne+0x1b4>
4001a114:	e3a02000 	mov	r2, #0
4001a118:	e3a01002 	mov	r1, #2
4001a11c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a120:	e1a00005 	mov	r0, r5
4001a124:	e12fff33 	blx	r3
4001a128:	e3160010 	tst	r6, #16
4001a12c:	0a00004f 	beq	4001a270 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a130:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a134:	e28d1024 	add	r1, sp, #36	; 0x24
4001a138:	eb0021de 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a13c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a140:	e59f1400 	ldr	r1, [pc, #1024]	; 4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a144:	e0010820 	and	r0, r1, r0, lsr #16
4001a148:	e1c503ba 	strh	r0, [r5, #58]	; 0x3a
4001a14c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a150:	e3100001 	tst	r0, #1
4001a154:	0a000045 	beq	4001a270 <CyU3PDmaIntHandler_TypeManyToOne+0x2fc>
4001a158:	e1d502bc 	ldrh	r0, [r5, #44]	; 0x2c
4001a15c:	ebffeb60 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001a160:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a164:	e59f13e0 	ldr	r1, [pc, #992]	; 4001a54c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a168:	e0000001 	and	r0, r0, r1
4001a16c:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a170:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a174:	e28d1024 	add	r1, sp, #36	; 0x24
4001a178:	eb0021e9 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001a17c:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a180:	e1c503bc 	strh	r0, [r5, #60]	; 0x3c
4001a184:	e1a0100d 	mov	r1, sp
4001a188:	e1a00009 	mov	r0, r9
4001a18c:	ebffeb6c 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001a190:	e59d000c 	ldr	r0, [sp, #12]
4001a194:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a198:	e58d000c 	str	r0, [sp, #12]
4001a19c:	e59d000c 	ldr	r0, [sp, #12]
4001a1a0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a1a4:	e58d000c 	str	r0, [sp, #12]
4001a1a8:	e3a00000 	mov	r0, #0
4001a1ac:	e58d0010 	str	r0, [sp, #16]
4001a1b0:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a1b4:	e2400001 	sub	r0, r0, #1
4001a1b8:	e1c506b4 	strh	r0, [r5, #100]	; 0x64
4001a1bc:	e1d506b4 	ldrh	r0, [r5, #100]	; 0x64
4001a1c0:	e3500000 	cmp	r0, #0
4001a1c4:	1a000004 	bne	4001a1dc <CyU3PDmaIntHandler_TypeManyToOne+0x268>
4001a1c8:	e3a00010 	mov	r0, #16
4001a1cc:	e58d0010 	str	r0, [sp, #16]
4001a1d0:	e59d0014 	ldr	r0, [sp, #20]
4001a1d4:	e3c00010 	bic	r0, r0, #16
4001a1d8:	e58d0014 	str	r0, [sp, #20]
4001a1dc:	e1d503bc 	ldrh	r0, [r5, #60]	; 0x3c
4001a1e0:	e58d0000 	str	r0, [sp]
4001a1e4:	e1a0100d 	mov	r1, sp
4001a1e8:	e1a00009 	mov	r0, r9
4001a1ec:	ebffebfe 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001a1f0:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a1f4:	e28d1024 	add	r1, sp, #36	; 0x24
4001a1f8:	eb0021ae 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a1fc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a200:	e59f1344 	ldr	r1, [pc, #836]	; 4001a54c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a204:	e0000001 	and	r0, r0, r1
4001a208:	e58d0030 	str	r0, [sp, #48]	; 0x30
4001a20c:	e1d503ba 	ldrh	r0, [r5, #58]	; 0x3a
4001a210:	e28d1024 	add	r1, sp, #36	; 0x24
4001a214:	eb0021c2 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001a218:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a21c:	e3500000 	cmp	r0, #0
4001a220:	0a000004 	beq	4001a238 <CyU3PDmaIntHandler_TypeManyToOne+0x2c4>
4001a224:	e59d2030 	ldr	r2, [sp, #48]	; 0x30
4001a228:	e59f331c 	ldr	r3, [pc, #796]	; 4001a54c <CyU3PDmaIntHandler_TypeManyToOne+0x5d8>
4001a22c:	e0021003 	and	r1, r2, r3
4001a230:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a234:	ebffe073 	bl	40012408 <CyU3PSysFlushDRegion>
4001a238:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a23c:	e59f130c 	ldr	r1, [pc, #780]	; 4001a550 <CyU3PDmaIntHandler_TypeManyToOne+0x5dc>
4001a240:	e0000001 	and	r0, r0, r1
4001a244:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a248:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a24c:	e1a00820 	lsr	r0, r0, #16
4001a250:	e58d0028 	str	r0, [sp, #40]	; 0x28
4001a254:	e1d513ba 	ldrh	r1, [r5, #58]	; 0x3a
4001a258:	e59d2028 	ldr	r2, [sp, #40]	; 0x28
4001a25c:	e1a00802 	lsl	r0, r2, #16
4001a260:	e1a00820 	lsr	r0, r0, #16
4001a264:	e3a02000 	mov	r2, #0
4001a268:	ebffebcd 	bl	400151a4 <CyU3PDmaSocketSendEvent>
4001a26c:	ebffe2be 	bl	40012d6c <CyU3PSysBarrierSync>
4001a270:	e3160080 	tst	r6, #128	; 0x80
4001a274:	0a00001c 	beq	4001a2ec <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a278:	e3a08000 	mov	r8, #0
4001a27c:	ea000005 	b	4001a298 <CyU3PDmaIntHandler_TypeManyToOne+0x324>
4001a280:	e2851024 	add	r1, r5, #36	; 0x24
4001a284:	e0811088 	add	r1, r1, r8, lsl #1
4001a288:	e1d100b0 	ldrh	r0, [r1]
4001a28c:	ebffeb14 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001a290:	e2880001 	add	r0, r8, #1
4001a294:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a298:	e1d500ba 	ldrh	r0, [r5, #10]
4001a29c:	e1500008 	cmp	r0, r8
4001a2a0:	cafffff6 	bgt	4001a280 <CyU3PDmaIntHandler_TypeManyToOne+0x30c>
4001a2a4:	e3a00001 	mov	r0, #1
4001a2a8:	e5850000 	str	r0, [r5]
4001a2ac:	e3a02000 	mov	r2, #0
4001a2b0:	e3a01001 	mov	r1, #1
4001a2b4:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a2b8:	ebffbf66 	bl	4000a058 <_txe_event_flags_set>
4001a2bc:	ebffe2aa 	bl	40012d6c <CyU3PSysBarrierSync>
4001a2c0:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a2c4:	e3500000 	cmp	r0, #0
4001a2c8:	0a000007 	beq	4001a2ec <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a2cc:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a2d0:	e3100001 	tst	r0, #1
4001a2d4:	0a000004 	beq	4001a2ec <CyU3PDmaIntHandler_TypeManyToOne+0x378>
4001a2d8:	e3a02000 	mov	r2, #0
4001a2dc:	e3a01001 	mov	r1, #1
4001a2e0:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a2e4:	e1a00005 	mov	r0, r5
4001a2e8:	e12fff33 	blx	r3
4001a2ec:	e3160e12 	tst	r6, #288	; 0x120
4001a2f0:	0a000091 	beq	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a2f4:	ebffe29c 	bl	40012d6c <CyU3PSysBarrierSync>
4001a2f8:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a2fc:	e3500000 	cmp	r0, #0
4001a300:	0a00008d 	beq	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a304:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a308:	e3100c01 	tst	r0, #256	; 0x100
4001a30c:	0a00008a 	beq	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a310:	e3a02000 	mov	r2, #0
4001a314:	e3a01c01 	mov	r1, #256	; 0x100
4001a318:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a31c:	e1a00005 	mov	r0, r5
4001a320:	e12fff33 	blx	r3
4001a324:	ea000084 	b	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a328:	e594000c 	ldr	r0, [r4, #12]
4001a32c:	e1a07800 	lsl	r7, r0, #16
4001a330:	e1a07827 	lsr	r7, r7, #16
4001a334:	e3160001 	tst	r6, #1
4001a338:	0a000048 	beq	4001a460 <CyU3PDmaIntHandler_TypeManyToOne+0x4ec>
4001a33c:	e5950000 	ldr	r0, [r5]
4001a340:	e3500004 	cmp	r0, #4
4001a344:	0a00007c 	beq	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a348:	e3a08000 	mov	r8, #0
4001a34c:	ea000007 	b	4001a370 <CyU3PDmaIntHandler_TypeManyToOne+0x3fc>
4001a350:	e2850024 	add	r0, r5, #36	; 0x24
4001a354:	e0800088 	add	r0, r0, r8, lsl #1
4001a358:	e1d000b0 	ldrh	r0, [r0]
4001a35c:	e1500009 	cmp	r0, r9
4001a360:	1a000000 	bne	4001a368 <CyU3PDmaIntHandler_TypeManyToOne+0x3f4>
4001a364:	ea000004 	b	4001a37c <CyU3PDmaIntHandler_TypeManyToOne+0x408>
4001a368:	e2880001 	add	r0, r8, #1
4001a36c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a370:	e1d500ba 	ldrh	r0, [r5, #10]
4001a374:	e1500008 	cmp	r0, r8
4001a378:	cafffff4 	bgt	4001a350 <CyU3PDmaIntHandler_TypeManyToOne+0x3dc>
4001a37c:	e1a00000 	nop			; (mov r0, r0)
4001a380:	e1a00000 	nop			; (mov r0, r0)
4001a384:	e285103e 	add	r1, r5, #62	; 0x3e
4001a388:	e0811088 	add	r1, r1, r8, lsl #1
4001a38c:	e1d100b0 	ldrh	r0, [r1]
4001a390:	e28d1024 	add	r1, sp, #36	; 0x24
4001a394:	eb002147 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a398:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a39c:	e58d0018 	str	r0, [sp, #24]
4001a3a0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3a4:	e59f119c 	ldr	r1, [pc, #412]	; 4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a3a8:	e0010820 	and	r0, r1, r0, lsr #16
4001a3ac:	e1cd01bc 	strh	r0, [sp, #28]
4001a3b0:	e241100f 	sub	r1, r1, #15
4001a3b4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3b8:	e0000001 	and	r0, r0, r1
4001a3bc:	e1cd01be 	strh	r0, [sp, #30]
4001a3c0:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3c4:	e200000f 	and	r0, r0, #15
4001a3c8:	e1cd02b0 	strh	r0, [sp, #32]
4001a3cc:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a3d0:	e3500000 	cmp	r0, #0
4001a3d4:	0a000002 	beq	4001a3e4 <CyU3PDmaIntHandler_TypeManyToOne+0x470>
4001a3d8:	e1dd11be 	ldrh	r1, [sp, #30]
4001a3dc:	e59d0018 	ldr	r0, [sp, #24]
4001a3e0:	ebffe008 	bl	40012408 <CyU3PSysFlushDRegion>
4001a3e4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a3e8:	e3100008 	tst	r0, #8
4001a3ec:	0a000003 	beq	4001a400 <CyU3PDmaIntHandler_TypeManyToOne+0x48c>
4001a3f0:	e3a02000 	mov	r2, #0
4001a3f4:	e3a01008 	mov	r1, #8
4001a3f8:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a3fc:	ebffbf15 	bl	4000a058 <_txe_event_flags_set>
4001a400:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c
4001a404:	e59f113c 	ldr	r1, [pc, #316]	; 4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a408:	e0010820 	and	r0, r1, r0, lsr #16
4001a40c:	e285103e 	add	r1, r5, #62	; 0x3e
4001a410:	e0811088 	add	r1, r1, r8, lsl #1
4001a414:	e1c100b0 	strh	r0, [r1]
4001a418:	ebffe253 	bl	40012d6c <CyU3PSysBarrierSync>
4001a41c:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a420:	e3500000 	cmp	r0, #0
4001a424:	0a000007 	beq	4001a448 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a428:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a42c:	e3100008 	tst	r0, #8
4001a430:	0a000004 	beq	4001a448 <CyU3PDmaIntHandler_TypeManyToOne+0x4d4>
4001a434:	e28d2018 	add	r2, sp, #24
4001a438:	e3a01008 	mov	r1, #8
4001a43c:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a440:	e1a00005 	mov	r0, r5
4001a444:	e12fff33 	blx	r3
4001a448:	e285003e 	add	r0, r5, #62	; 0x3e
4001a44c:	e0800088 	add	r0, r0, r8, lsl #1
4001a450:	e1d000b0 	ldrh	r0, [r0]
4001a454:	e1500007 	cmp	r0, r7
4001a458:	1affffc9 	bne	4001a384 <CyU3PDmaIntHandler_TypeManyToOne+0x410>
4001a45c:	ea000036 	b	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a460:	e1d503b4 	ldrh	r0, [r5, #52]	; 0x34
4001a464:	e28d1024 	add	r1, sp, #36	; 0x24
4001a468:	eb002112 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a46c:	e59d0024 	ldr	r0, [sp, #36]	; 0x24
4001a470:	e58d0018 	str	r0, [sp, #24]
4001a474:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a478:	e59f10c8 	ldr	r1, [pc, #200]	; 4001a548 <CyU3PDmaIntHandler_TypeManyToOne+0x5d4>
4001a47c:	e0010820 	and	r0, r1, r0, lsr #16
4001a480:	e1cd01bc 	strh	r0, [sp, #28]
4001a484:	e241100f 	sub	r1, r1, #15
4001a488:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a48c:	e0000001 	and	r0, r0, r1
4001a490:	e1cd01be 	strh	r0, [sp, #30]
4001a494:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a498:	e200000f 	and	r0, r0, #15
4001a49c:	e1cd02b0 	strh	r0, [sp, #32]
4001a4a0:	e3a00001 	mov	r0, #1
4001a4a4:	e5850000 	str	r0, [r5]
4001a4a8:	e5950074 	ldr	r0, [r5, #116]	; 0x74
4001a4ac:	e3500000 	cmp	r0, #0
4001a4b0:	0a000002 	beq	4001a4c0 <CyU3PDmaIntHandler_TypeManyToOne+0x54c>
4001a4b4:	e1dd11be 	ldrh	r1, [sp, #30]
4001a4b8:	e59d0018 	ldr	r0, [sp, #24]
4001a4bc:	ebffdfd1 	bl	40012408 <CyU3PSysFlushDRegion>
4001a4c0:	e1d500b4 	ldrh	r0, [r5, #4]
4001a4c4:	e3500005 	cmp	r0, #5
4001a4c8:	1a00000a 	bne	4001a4f8 <CyU3PDmaIntHandler_TypeManyToOne+0x584>
4001a4cc:	e1a0100d 	mov	r1, sp
4001a4d0:	e1a00009 	mov	r0, r9
4001a4d4:	ebffea9a 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001a4d8:	e3a00000 	mov	r0, #0
4001a4dc:	e58d0010 	str	r0, [sp, #16]
4001a4e0:	e59d0014 	ldr	r0, [sp, #20]
4001a4e4:	e3c00001 	bic	r0, r0, #1
4001a4e8:	e58d0014 	str	r0, [sp, #20]
4001a4ec:	e1a0100d 	mov	r1, sp
4001a4f0:	e1a00009 	mov	r0, r9
4001a4f4:	ebffeb3c 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001a4f8:	e3a02000 	mov	r2, #0
4001a4fc:	e3a01004 	mov	r1, #4
4001a500:	e28500b0 	add	r0, r5, #176	; 0xb0
4001a504:	ebffbed3 	bl	4000a058 <_txe_event_flags_set>
4001a508:	e3c66080 	bic	r6, r6, #128	; 0x80
4001a50c:	ebffe216 	bl	40012d6c <CyU3PSysBarrierSync>
4001a510:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001a514:	e3500000 	cmp	r0, #0
4001a518:	0a000007 	beq	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a51c:	e595006c 	ldr	r0, [r5, #108]	; 0x6c
4001a520:	e3100004 	tst	r0, #4
4001a524:	0a000004 	beq	4001a53c <CyU3PDmaIntHandler_TypeManyToOne+0x5c8>
4001a528:	e28d2018 	add	r2, sp, #24
4001a52c:	e3a01004 	mov	r1, #4
4001a530:	e59530d8 	ldr	r3, [r5, #216]	; 0xd8
4001a534:	e1a00005 	mov	r0, r5
4001a538:	e12fff33 	blx	r3
4001a53c:	e2850078 	add	r0, r5, #120	; 0x78
4001a540:	ebffbf91 	bl	4000a38c <_txe_mutex_put>
4001a544:	eafffe93 	b	40019f98 <CyU3PDmaIntHandler_TypeManyToOne+0x24>
4001a548:	0000ffff 	.word	0x0000ffff
4001a54c:	0000fff0 	.word	0x0000fff0
4001a550:	3fff0000 	.word	0x3fff0000

Disassembly of section i.CyU3PDmaIntHandler_TypeOneToMany:

4001a554 <CyU3PDmaIntHandler_TypeOneToMany>:
4001a554:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001a558:	e24dd038 	sub	sp, sp, #56	; 0x38
4001a55c:	e1a04000 	mov	r4, r0
4001a560:	e594a004 	ldr	sl, [r4, #4]
4001a564:	e5940000 	ldr	r0, [r4]
4001a568:	e59f1664 	ldr	r1, [pc, #1636]	; 4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a56c:	e0016820 	and	r6, r1, r0, lsr #16
4001a570:	e5945008 	ldr	r5, [r4, #8]
4001a574:	e3150040 	tst	r5, #64	; 0x40
4001a578:	0a000003 	beq	4001a58c <CyU3PDmaIntHandler_TypeOneToMany+0x38>
4001a57c:	e1a0000a 	mov	r0, sl
4001a580:	eb0001c2 	bl	4001ac90 <CyU3PDmaMultiChannelHandleError>
4001a584:	e28dd038 	add	sp, sp, #56	; 0x38
4001a588:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001a58c:	e3e01000 	mvn	r1, #0
4001a590:	e28a0078 	add	r0, sl, #120	; 0x78
4001a594:	ebffbf47 	bl	4000a2b8 <_txe_mutex_get>
4001a598:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a59c:	e1500006 	cmp	r0, r6
4001a5a0:	0a0000fc 	beq	4001a998 <CyU3PDmaIntHandler_TypeOneToMany+0x444>
4001a5a4:	e594000c 	ldr	r0, [r4, #12]
4001a5a8:	e1a09800 	lsl	r9, r0, #16
4001a5ac:	e1a09829 	lsr	r9, r9, #16
4001a5b0:	e3a08000 	mov	r8, #0
4001a5b4:	ea000007 	b	4001a5d8 <CyU3PDmaIntHandler_TypeOneToMany+0x84>
4001a5b8:	e28a002c 	add	r0, sl, #44	; 0x2c
4001a5bc:	e0800088 	add	r0, r0, r8, lsl #1
4001a5c0:	e1d000b0 	ldrh	r0, [r0]
4001a5c4:	e1500006 	cmp	r0, r6
4001a5c8:	1a000000 	bne	4001a5d0 <CyU3PDmaIntHandler_TypeOneToMany+0x7c>
4001a5cc:	ea000004 	b	4001a5e4 <CyU3PDmaIntHandler_TypeOneToMany+0x90>
4001a5d0:	e2880001 	add	r0, r8, #1
4001a5d4:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4001a5d8:	e1da00ba 	ldrh	r0, [sl, #10]
4001a5dc:	e1500008 	cmp	r0, r8
4001a5e0:	cafffff4 	bgt	4001a5b8 <CyU3PDmaIntHandler_TypeOneToMany+0x64>
4001a5e4:	e1a00000 	nop			; (mov r0, r0)
4001a5e8:	e3150002 	tst	r5, #2
4001a5ec:	0a00007e 	beq	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a5f0:	e59a0000 	ldr	r0, [sl]
4001a5f4:	e3500003 	cmp	r0, #3
4001a5f8:	0a00005a 	beq	4001a768 <CyU3PDmaIntHandler_TypeOneToMany+0x214>
4001a5fc:	e1a00000 	nop			; (mov r0, r0)
4001a600:	e28a1046 	add	r1, sl, #70	; 0x46
4001a604:	e0811088 	add	r1, r1, r8, lsl #1
4001a608:	e1d100b0 	ldrh	r0, [r1]
4001a60c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a610:	eb0020a8 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a614:	e28a1046 	add	r1, sl, #70	; 0x46
4001a618:	e0811088 	add	r1, r1, r8, lsl #1
4001a61c:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a620:	e1c100b0 	strh	r0, [r1]
4001a624:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a628:	e59f15a4 	ldr	r1, [pc, #1444]	; 4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a62c:	e0017820 	and	r7, r1, r0, lsr #16
4001a630:	e28d1028 	add	r1, sp, #40	; 0x28
4001a634:	e1a00007 	mov	r0, r7
4001a638:	eb00209e 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a63c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a640:	e59f1590 	ldr	r1, [pc, #1424]	; 4001abd8 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a644:	e0000001 	and	r0, r0, r1
4001a648:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a64c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a650:	e1a00007 	mov	r0, r7
4001a654:	eb0020b2 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001a658:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a65c:	e3a02000 	mov	r2, #0
4001a660:	e1a01007 	mov	r1, r7
4001a664:	ebffeace 	bl	400151a4 <CyU3PDmaSocketSendEvent>
4001a668:	ebffe1bf 	bl	40012d6c <CyU3PSysBarrierSync>
4001a66c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a670:	e3500000 	cmp	r0, #0
4001a674:	0a000007 	beq	4001a698 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a678:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a67c:	e3100010 	tst	r0, #16
4001a680:	0a000004 	beq	4001a698 <CyU3PDmaIntHandler_TypeOneToMany+0x144>
4001a684:	e3a02000 	mov	r2, #0
4001a688:	e3a01010 	mov	r1, #16
4001a68c:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a690:	e1a0000a 	mov	r0, sl
4001a694:	e12fff33 	blx	r3
4001a698:	e28a0046 	add	r0, sl, #70	; 0x46
4001a69c:	e0800088 	add	r0, r0, r8, lsl #1
4001a6a0:	e1d000b0 	ldrh	r0, [r0]
4001a6a4:	e1500009 	cmp	r0, r9
4001a6a8:	1affffd4 	bne	4001a600 <CyU3PDmaIntHandler_TypeOneToMany+0xac>
4001a6ac:	e59a0000 	ldr	r0, [sl]
4001a6b0:	e3500006 	cmp	r0, #6
4001a6b4:	1a00004c 	bne	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a6b8:	e1da00b8 	ldrh	r0, [sl, #8]
4001a6bc:	e1da10ba 	ldrh	r1, [sl, #10]
4001a6c0:	e0000091 	mul	r0, r1, r0
4001a6c4:	e1a08800 	lsl	r8, r0, #16
4001a6c8:	e1a08828 	lsr	r8, r8, #16
4001a6cc:	e1da71b4 	ldrh	r7, [sl, #20]
4001a6d0:	ea00000c 	b	4001a708 <CyU3PDmaIntHandler_TypeOneToMany+0x1b4>
4001a6d4:	e28d1028 	add	r1, sp, #40	; 0x28
4001a6d8:	e1a00007 	mov	r0, r7
4001a6dc:	eb002075 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a6e0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a6e4:	e3100008 	tst	r0, #8
4001a6e8:	0a000000 	beq	4001a6f0 <CyU3PDmaIntHandler_TypeOneToMany+0x19c>
4001a6ec:	ea000007 	b	4001a710 <CyU3PDmaIntHandler_TypeOneToMany+0x1bc>
4001a6f0:	e2480001 	sub	r0, r8, #1
4001a6f4:	e1a08800 	lsl	r8, r0, #16
4001a6f8:	e1a08828 	lsr	r8, r8, #16
4001a6fc:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a700:	e59f14cc 	ldr	r1, [pc, #1228]	; 4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a704:	e0017820 	and	r7, r1, r0, lsr #16
4001a708:	e3580000 	cmp	r8, #0
4001a70c:	1afffff0 	bne	4001a6d4 <CyU3PDmaIntHandler_TypeOneToMany+0x180>
4001a710:	e1a00000 	nop			; (mov r0, r0)
4001a714:	e3580000 	cmp	r8, #0
4001a718:	1a000033 	bne	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a71c:	e3a00001 	mov	r0, #1
4001a720:	e58a0000 	str	r0, [sl]
4001a724:	e3a02000 	mov	r2, #0
4001a728:	e3a01001 	mov	r1, #1
4001a72c:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a730:	ebffbe48 	bl	4000a058 <_txe_event_flags_set>
4001a734:	ebffe18c 	bl	40012d6c <CyU3PSysBarrierSync>
4001a738:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a73c:	e3500000 	cmp	r0, #0
4001a740:	0a000029 	beq	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a744:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a748:	e3100001 	tst	r0, #1
4001a74c:	0a000026 	beq	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a750:	e3a02000 	mov	r2, #0
4001a754:	e3a01001 	mov	r1, #1
4001a758:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a75c:	e1a0000a 	mov	r0, sl
4001a760:	e12fff33 	blx	r3
4001a764:	ea000020 	b	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a768:	e3a00001 	mov	r0, #1
4001a76c:	e58a0000 	str	r0, [sl]
4001a770:	e1da00b4 	ldrh	r0, [sl, #4]
4001a774:	e3500006 	cmp	r0, #6
4001a778:	1a00000a 	bne	4001a7a8 <CyU3PDmaIntHandler_TypeOneToMany+0x254>
4001a77c:	e28d1004 	add	r1, sp, #4
4001a780:	e1a00006 	mov	r0, r6
4001a784:	ebffe9ee 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001a788:	e3a00000 	mov	r0, #0
4001a78c:	e58d0014 	str	r0, [sp, #20]
4001a790:	e59d0018 	ldr	r0, [sp, #24]
4001a794:	e3c00002 	bic	r0, r0, #2
4001a798:	e58d0018 	str	r0, [sp, #24]
4001a79c:	e28d1004 	add	r1, sp, #4
4001a7a0:	e1a00006 	mov	r0, r6
4001a7a4:	ebffea90 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001a7a8:	e3a02000 	mov	r2, #0
4001a7ac:	e3a01002 	mov	r1, #2
4001a7b0:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001a7b4:	ebffbe27 	bl	4000a058 <_txe_event_flags_set>
4001a7b8:	e3c55080 	bic	r5, r5, #128	; 0x80
4001a7bc:	ebffe16a 	bl	40012d6c <CyU3PSysBarrierSync>
4001a7c0:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a7c4:	e3500000 	cmp	r0, #0
4001a7c8:	0a000007 	beq	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a7cc:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a7d0:	e3100002 	tst	r0, #2
4001a7d4:	0a000004 	beq	4001a7ec <CyU3PDmaIntHandler_TypeOneToMany+0x298>
4001a7d8:	e3a02000 	mov	r2, #0
4001a7dc:	e3a01002 	mov	r1, #2
4001a7e0:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a7e4:	e1a0000a 	mov	r0, sl
4001a7e8:	e12fff33 	blx	r3
4001a7ec:	e3150010 	tst	r5, #16
4001a7f0:	0a000059 	beq	4001a95c <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a7f4:	e28a1046 	add	r1, sl, #70	; 0x46
4001a7f8:	e0811088 	add	r1, r1, r8, lsl #1
4001a7fc:	e1d100b0 	ldrh	r0, [r1]
4001a800:	e28d1028 	add	r1, sp, #40	; 0x28
4001a804:	eb00202b 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a808:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a80c:	e3100001 	tst	r0, #1
4001a810:	0a000051 	beq	4001a95c <CyU3PDmaIntHandler_TypeOneToMany+0x408>
4001a814:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a818:	e0811088 	add	r1, r1, r8, lsl #1
4001a81c:	e1d100b0 	ldrh	r0, [r1]
4001a820:	ebffe9af 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001a824:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a828:	e59f13a8 	ldr	r1, [pc, #936]	; 4001abd8 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a82c:	e0000001 	and	r0, r0, r1
4001a830:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a834:	e28a1046 	add	r1, sl, #70	; 0x46
4001a838:	e0811088 	add	r1, r1, r8, lsl #1
4001a83c:	e1d100b0 	ldrh	r0, [r1]
4001a840:	e28d1028 	add	r1, sp, #40	; 0x28
4001a844:	eb002036 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001a848:	e28a1046 	add	r1, sl, #70	; 0x46
4001a84c:	e0811088 	add	r1, r1, r8, lsl #1
4001a850:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a854:	e1c100b0 	strh	r0, [r1]
4001a858:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a85c:	e0811088 	add	r1, r1, r8, lsl #1
4001a860:	e1d100b0 	ldrh	r0, [r1]
4001a864:	e28d1004 	add	r1, sp, #4
4001a868:	ebffe9b5 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001a86c:	e59d0010 	ldr	r0, [sp, #16]
4001a870:	e3c00205 	bic	r0, r0, #1342177280	; 0x50000000
4001a874:	e58d0010 	str	r0, [sp, #16]
4001a878:	e59d0010 	ldr	r0, [sp, #16]
4001a87c:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001a880:	e58d0010 	str	r0, [sp, #16]
4001a884:	e3a00000 	mov	r0, #0
4001a888:	e58d0014 	str	r0, [sp, #20]
4001a88c:	e28a0064 	add	r0, sl, #100	; 0x64
4001a890:	e0800088 	add	r0, r0, r8, lsl #1
4001a894:	e1d000b0 	ldrh	r0, [r0]
4001a898:	e2400001 	sub	r0, r0, #1
4001a89c:	e28a1064 	add	r1, sl, #100	; 0x64
4001a8a0:	e0811088 	add	r1, r1, r8, lsl #1
4001a8a4:	e1c100b0 	strh	r0, [r1]
4001a8a8:	e28a0064 	add	r0, sl, #100	; 0x64
4001a8ac:	e0800088 	add	r0, r0, r8, lsl #1
4001a8b0:	e1d000b0 	ldrh	r0, [r0]
4001a8b4:	e3500000 	cmp	r0, #0
4001a8b8:	1a000004 	bne	4001a8d0 <CyU3PDmaIntHandler_TypeOneToMany+0x37c>
4001a8bc:	e3a00010 	mov	r0, #16
4001a8c0:	e58d0014 	str	r0, [sp, #20]
4001a8c4:	e59d0018 	ldr	r0, [sp, #24]
4001a8c8:	e3c00010 	bic	r0, r0, #16
4001a8cc:	e58d0018 	str	r0, [sp, #24]
4001a8d0:	e28a0046 	add	r0, sl, #70	; 0x46
4001a8d4:	e0800088 	add	r0, r0, r8, lsl #1
4001a8d8:	e1d000b0 	ldrh	r0, [r0]
4001a8dc:	e58d0004 	str	r0, [sp, #4]
4001a8e0:	e28a102c 	add	r1, sl, #44	; 0x2c
4001a8e4:	e0811088 	add	r1, r1, r8, lsl #1
4001a8e8:	e1d100b0 	ldrh	r0, [r1]
4001a8ec:	e28d1004 	add	r1, sp, #4
4001a8f0:	ebffea3d 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001a8f4:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001a8f8:	e59f12d4 	ldr	r1, [pc, #724]	; 4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a8fc:	e0017820 	and	r7, r1, r0, lsr #16
4001a900:	e28d1028 	add	r1, sp, #40	; 0x28
4001a904:	e1a00007 	mov	r0, r7
4001a908:	eb001fea 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a90c:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a910:	e59f12c0 	ldr	r1, [pc, #704]	; 4001abd8 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a914:	e0000001 	and	r0, r0, r1
4001a918:	e58d0034 	str	r0, [sp, #52]	; 0x34
4001a91c:	e28d1028 	add	r1, sp, #40	; 0x28
4001a920:	e1a00007 	mov	r0, r7
4001a924:	eb001ffe 	bl	40022924 <CyU3PDmaDscrSetConfig>
4001a928:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001a92c:	e3500000 	cmp	r0, #0
4001a930:	0a000004 	beq	4001a948 <CyU3PDmaIntHandler_TypeOneToMany+0x3f4>
4001a934:	e59d2034 	ldr	r2, [sp, #52]	; 0x34
4001a938:	e59f3298 	ldr	r3, [pc, #664]	; 4001abd8 <CyU3PDmaIntHandler_TypeOneToMany+0x684>
4001a93c:	e0021003 	and	r1, r2, r3
4001a940:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a944:	ebffdeaf 	bl	40012408 <CyU3PSysFlushDRegion>
4001a948:	e1da02b4 	ldrh	r0, [sl, #36]	; 0x24
4001a94c:	e3a02000 	mov	r2, #0
4001a950:	e1a01007 	mov	r1, r7
4001a954:	ebffea12 	bl	400151a4 <CyU3PDmaSocketSendEvent>
4001a958:	ebffe103 	bl	40012d6c <CyU3PSysBarrierSync>
4001a95c:	e3150020 	tst	r5, #32
4001a960:	0a000098 	beq	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a964:	ebffe100 	bl	40012d6c <CyU3PSysBarrierSync>
4001a968:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001a96c:	e3500000 	cmp	r0, #0
4001a970:	0a000094 	beq	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a974:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001a978:	e3100080 	tst	r0, #128	; 0x80
4001a97c:	0a000091 	beq	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a980:	e3a02000 	mov	r2, #0
4001a984:	e3a01080 	mov	r1, #128	; 0x80
4001a988:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001a98c:	e1a0000a 	mov	r0, sl
4001a990:	e12fff33 	blx	r3
4001a994:	ea00008b 	b	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001a998:	e594000c 	ldr	r0, [r4, #12]
4001a99c:	e1a09800 	lsl	r9, r0, #16
4001a9a0:	e1a09829 	lsr	r9, r9, #16
4001a9a4:	e3150001 	tst	r5, #1
4001a9a8:	0a00006b 	beq	4001ab5c <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001a9ac:	e59a0000 	ldr	r0, [sl]
4001a9b0:	e3500004 	cmp	r0, #4
4001a9b4:	0a000031 	beq	4001aa80 <CyU3PDmaIntHandler_TypeOneToMany+0x52c>
4001a9b8:	e1a00000 	nop			; (mov r0, r0)
4001a9bc:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001a9c0:	e28d1028 	add	r1, sp, #40	; 0x28
4001a9c4:	eb001fbb 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001a9c8:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001a9cc:	e58d001c 	str	r0, [sp, #28]
4001a9d0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9d4:	e59f11f8 	ldr	r1, [pc, #504]	; 4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001a9d8:	e0010820 	and	r0, r1, r0, lsr #16
4001a9dc:	e1cd02b0 	strh	r0, [sp, #32]
4001a9e0:	e241100f 	sub	r1, r1, #15
4001a9e4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9e8:	e0000001 	and	r0, r0, r1
4001a9ec:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001a9f0:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001a9f4:	e200000f 	and	r0, r0, #15
4001a9f8:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001a9fc:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001aa00:	e3500000 	cmp	r0, #0
4001aa04:	0a000002 	beq	4001aa14 <CyU3PDmaIntHandler_TypeOneToMany+0x4c0>
4001aa08:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001aa0c:	e59d001c 	ldr	r0, [sp, #28]
4001aa10:	ebffde7c 	bl	40012408 <CyU3PSysFlushDRegion>
4001aa14:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa18:	e3100008 	tst	r0, #8
4001aa1c:	0a000003 	beq	4001aa30 <CyU3PDmaIntHandler_TypeOneToMany+0x4dc>
4001aa20:	e3a02000 	mov	r2, #0
4001aa24:	e3a01008 	mov	r1, #8
4001aa28:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001aa2c:	ebffbd89 	bl	4000a058 <_txe_event_flags_set>
4001aa30:	e59d0030 	ldr	r0, [sp, #48]	; 0x30
4001aa34:	e59f1198 	ldr	r1, [pc, #408]	; 4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aa38:	e0010820 	and	r0, r1, r0, lsr #16
4001aa3c:	e1ca03be 	strh	r0, [sl, #62]	; 0x3e
4001aa40:	ebffe0c9 	bl	40012d6c <CyU3PSysBarrierSync>
4001aa44:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001aa48:	e3500000 	cmp	r0, #0
4001aa4c:	0a000007 	beq	4001aa70 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001aa50:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001aa54:	e3100008 	tst	r0, #8
4001aa58:	0a000004 	beq	4001aa70 <CyU3PDmaIntHandler_TypeOneToMany+0x51c>
4001aa5c:	e28d201c 	add	r2, sp, #28
4001aa60:	e3a01008 	mov	r1, #8
4001aa64:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001aa68:	e1a0000a 	mov	r0, sl
4001aa6c:	e12fff33 	blx	r3
4001aa70:	e1da03be 	ldrh	r0, [sl, #62]	; 0x3e
4001aa74:	e1500009 	cmp	r0, r9
4001aa78:	1affffcf 	bne	4001a9bc <CyU3PDmaIntHandler_TypeOneToMany+0x468>
4001aa7c:	ea000036 	b	4001ab5c <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001aa80:	e1da03b4 	ldrh	r0, [sl, #52]	; 0x34
4001aa84:	e28d1028 	add	r1, sp, #40	; 0x28
4001aa88:	eb001f8a 	bl	400228b8 <CyU3PDmaDscrGetConfig>
4001aa8c:	e59d0028 	ldr	r0, [sp, #40]	; 0x28
4001aa90:	e58d001c 	str	r0, [sp, #28]
4001aa94:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aa98:	e59f1134 	ldr	r1, [pc, #308]	; 4001abd4 <CyU3PDmaIntHandler_TypeOneToMany+0x680>
4001aa9c:	e0010820 	and	r0, r1, r0, lsr #16
4001aaa0:	e1cd02b0 	strh	r0, [sp, #32]
4001aaa4:	e241100f 	sub	r1, r1, #15
4001aaa8:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aaac:	e0000001 	and	r0, r0, r1
4001aab0:	e1cd02b2 	strh	r0, [sp, #34]	; 0x22
4001aab4:	e59d0034 	ldr	r0, [sp, #52]	; 0x34
4001aab8:	e200000f 	and	r0, r0, #15
4001aabc:	e1cd02b4 	strh	r0, [sp, #36]	; 0x24
4001aac0:	e3a00001 	mov	r0, #1
4001aac4:	e58a0000 	str	r0, [sl]
4001aac8:	e59a0074 	ldr	r0, [sl, #116]	; 0x74
4001aacc:	e3500000 	cmp	r0, #0
4001aad0:	0a000002 	beq	4001aae0 <CyU3PDmaIntHandler_TypeOneToMany+0x58c>
4001aad4:	e1dd12b2 	ldrh	r1, [sp, #34]	; 0x22
4001aad8:	e59d001c 	ldr	r0, [sp, #28]
4001aadc:	ebffde49 	bl	40012408 <CyU3PSysFlushDRegion>
4001aae0:	e1da00b4 	ldrh	r0, [sl, #4]
4001aae4:	e3500006 	cmp	r0, #6
4001aae8:	1a00000a 	bne	4001ab18 <CyU3PDmaIntHandler_TypeOneToMany+0x5c4>
4001aaec:	e28d1004 	add	r1, sp, #4
4001aaf0:	e1a00006 	mov	r0, r6
4001aaf4:	ebffe912 	bl	40014f44 <CyU3PDmaSocketGetConfig>
4001aaf8:	e3a00000 	mov	r0, #0
4001aafc:	e58d0014 	str	r0, [sp, #20]
4001ab00:	e59d0018 	ldr	r0, [sp, #24]
4001ab04:	e3c00001 	bic	r0, r0, #1
4001ab08:	e58d0018 	str	r0, [sp, #24]
4001ab0c:	e28d1004 	add	r1, sp, #4
4001ab10:	e1a00006 	mov	r0, r6
4001ab14:	ebffe9b4 	bl	400151ec <CyU3PDmaSocketSetConfig>
4001ab18:	e3a02000 	mov	r2, #0
4001ab1c:	e3a01004 	mov	r1, #4
4001ab20:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001ab24:	ebffbd4b 	bl	4000a058 <_txe_event_flags_set>
4001ab28:	e3c55080 	bic	r5, r5, #128	; 0x80
4001ab2c:	ebffe08e 	bl	40012d6c <CyU3PSysBarrierSync>
4001ab30:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ab34:	e3500000 	cmp	r0, #0
4001ab38:	0a000007 	beq	4001ab5c <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ab3c:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001ab40:	e3100004 	tst	r0, #4
4001ab44:	0a000004 	beq	4001ab5c <CyU3PDmaIntHandler_TypeOneToMany+0x608>
4001ab48:	e28d201c 	add	r2, sp, #28
4001ab4c:	e3a01004 	mov	r1, #4
4001ab50:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001ab54:	e1a0000a 	mov	r0, sl
4001ab58:	e12fff33 	blx	r3
4001ab5c:	e3150080 	tst	r5, #128	; 0x80
4001ab60:	0a000018 	beq	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ab64:	e1da00b4 	ldrh	r0, [sl, #4]
4001ab68:	e3500006 	cmp	r0, #6
4001ab6c:	1a000012 	bne	4001abbc <CyU3PDmaIntHandler_TypeOneToMany+0x668>
4001ab70:	e3a00001 	mov	r0, #1
4001ab74:	e58a0000 	str	r0, [sl]
4001ab78:	e3a02000 	mov	r2, #0
4001ab7c:	e3a01001 	mov	r1, #1
4001ab80:	e28a00b0 	add	r0, sl, #176	; 0xb0
4001ab84:	ebffbd33 	bl	4000a058 <_txe_event_flags_set>
4001ab88:	ebffe077 	bl	40012d6c <CyU3PSysBarrierSync>
4001ab8c:	e59a00d8 	ldr	r0, [sl, #216]	; 0xd8
4001ab90:	e3500000 	cmp	r0, #0
4001ab94:	0a00000b 	beq	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001ab98:	e59a006c 	ldr	r0, [sl, #108]	; 0x6c
4001ab9c:	e3100001 	tst	r0, #1
4001aba0:	0a000008 	beq	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001aba4:	e3a02000 	mov	r2, #0
4001aba8:	e3a01001 	mov	r1, #1
4001abac:	e59a30d8 	ldr	r3, [sl, #216]	; 0xd8
4001abb0:	e1a0000a 	mov	r0, sl
4001abb4:	e12fff33 	blx	r3
4001abb8:	ea000002 	b	4001abc8 <CyU3PDmaIntHandler_TypeOneToMany+0x674>
4001abbc:	e3a00006 	mov	r0, #6
4001abc0:	e58a0000 	str	r0, [sl]
4001abc4:	ebffe068 	bl	40012d6c <CyU3PSysBarrierSync>
4001abc8:	e28a0078 	add	r0, sl, #120	; 0x78
4001abcc:	ebffbdee 	bl	4000a38c <_txe_mutex_put>
4001abd0:	eafffe6b 	b	4001a584 <CyU3PDmaIntHandler_TypeOneToMany+0x30>
4001abd4:	0000ffff 	.word	0x0000ffff
4001abd8:	0000fff0 	.word	0x0000fff0

Disassembly of section i.CyU3PDmaIsSockAvlEnReqd:

4001abdc <CyU3PDmaIsSockAvlEnReqd>:
4001abdc:	e1a01000 	mov	r1, r0
4001abe0:	e3a0003f 	mov	r0, #63	; 0x3f
4001abe4:	e0000441 	and	r0, r0, r1, asr #8
4001abe8:	e3500003 	cmp	r0, #3
4001abec:	1a000004 	bne	4001ac04 <CyU3PDmaIsSockAvlEnReqd+0x28>
4001abf0:	e3a00001 	mov	r0, #1
4001abf4:	e59f203c 	ldr	r2, [pc, #60]	; 4001ac38 <CyU3PDmaIsSockAvlEnReqd+0x5c>
4001abf8:	e1d220b0 	ldrh	r2, [r2]
4001abfc:	e1120110 	tst	r2, r0, lsl r1
4001ac00:	1a000008 	bne	4001ac28 <CyU3PDmaIsSockAvlEnReqd+0x4c>
4001ac04:	e3a0003f 	mov	r0, #63	; 0x3f
4001ac08:	e0000441 	and	r0, r0, r1, asr #8
4001ac0c:	e3500004 	cmp	r0, #4
4001ac10:	1a000006 	bne	4001ac30 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001ac14:	e3a00001 	mov	r0, #1
4001ac18:	e59f201c 	ldr	r2, [pc, #28]	; 4001ac3c <CyU3PDmaIsSockAvlEnReqd+0x60>
4001ac1c:	e1d220b0 	ldrh	r2, [r2]
4001ac20:	e1120110 	tst	r2, r0, lsl r1
4001ac24:	0a000001 	beq	4001ac30 <CyU3PDmaIsSockAvlEnReqd+0x54>
4001ac28:	e3a00001 	mov	r0, #1
4001ac2c:	e12fff1e 	bx	lr
4001ac30:	e3a00000 	mov	r0, #0
4001ac34:	eafffffc 	b	4001ac2c <CyU3PDmaIsSockAvlEnReqd+0x50>
4001ac38:	40030cfc 	.word	0x40030cfc
4001ac3c:	40030cfe 	.word	0x40030cfe

Disassembly of section i.CyU3PDmaMsgSend:

4001ac40 <CyU3PDmaMsgSend>:
4001ac40:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001ac44:	e1a04000 	mov	r4, r0
4001ac48:	e1a05001 	mov	r5, r1
4001ac4c:	e1a07002 	mov	r7, r2
4001ac50:	e3570001 	cmp	r7, #1
4001ac54:	1a000005 	bne	4001ac70 <CyU3PDmaMsgSend+0x30>
4001ac58:	e1a02005 	mov	r2, r5
4001ac5c:	e1a01004 	mov	r1, r4
4001ac60:	e59f0024 	ldr	r0, [pc, #36]	; 4001ac8c <CyU3PDmaMsgSend+0x4c>
4001ac64:	ebffbe5e 	bl	4000a5e4 <_txe_queue_front_send>
4001ac68:	e1a06000 	mov	r6, r0
4001ac6c:	ea000004 	b	4001ac84 <CyU3PDmaMsgSend+0x44>
4001ac70:	e1a02005 	mov	r2, r5
4001ac74:	e1a01004 	mov	r1, r4
4001ac78:	e59f000c 	ldr	r0, [pc, #12]	; 4001ac8c <CyU3PDmaMsgSend+0x4c>
4001ac7c:	ebffbea8 	bl	4000a724 <_txe_queue_send>
4001ac80:	e1a06000 	mov	r6, r0
4001ac84:	e1a00006 	mov	r0, r6
4001ac88:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001ac8c:	40031938 	.word	0x40031938

Disassembly of section i.CyU3PDmaMultiChannelHandleError:

4001ac90 <CyU3PDmaMultiChannelHandleError>:
4001ac90:	e92d4070 	push	{r4, r5, r6, lr}
4001ac94:	e1a04000 	mov	r4, r0
4001ac98:	e3e01000 	mvn	r1, #0
4001ac9c:	e2840078 	add	r0, r4, #120	; 0x78
4001aca0:	ebffbd84 	bl	4000a2b8 <_txe_mutex_get>
4001aca4:	e1d400b4 	ldrh	r0, [r4, #4]
4001aca8:	e3500005 	cmp	r0, #5
4001acac:	0a000002 	beq	4001acbc <CyU3PDmaMultiChannelHandleError+0x2c>
4001acb0:	e1d400b4 	ldrh	r0, [r4, #4]
4001acb4:	e3500007 	cmp	r0, #7
4001acb8:	1a00000d 	bne	4001acf4 <CyU3PDmaMultiChannelHandleError+0x64>
4001acbc:	e3a05000 	mov	r5, #0
4001acc0:	ea000005 	b	4001acdc <CyU3PDmaMultiChannelHandleError+0x4c>
4001acc4:	e2841024 	add	r1, r4, #36	; 0x24
4001acc8:	e0811085 	add	r1, r1, r5, lsl #1
4001accc:	e1d100b0 	ldrh	r0, [r1]
4001acd0:	ebffe883 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001acd4:	e2850001 	add	r0, r5, #1
4001acd8:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001acdc:	e1d400ba 	ldrh	r0, [r4, #10]
4001ace0:	e1500005 	cmp	r0, r5
4001ace4:	cafffff6 	bgt	4001acc4 <CyU3PDmaMultiChannelHandleError+0x34>
4001ace8:	e1d402bc 	ldrh	r0, [r4, #44]	; 0x2c
4001acec:	ebffe87c 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001acf0:	ea00000c 	b	4001ad28 <CyU3PDmaMultiChannelHandleError+0x98>
4001acf4:	e3a05000 	mov	r5, #0
4001acf8:	ea000005 	b	4001ad14 <CyU3PDmaMultiChannelHandleError+0x84>
4001acfc:	e284102c 	add	r1, r4, #44	; 0x2c
4001ad00:	e0811085 	add	r1, r1, r5, lsl #1
4001ad04:	e1d100b0 	ldrh	r0, [r1]
4001ad08:	ebffe875 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001ad0c:	e2850001 	add	r0, r5, #1
4001ad10:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ad14:	e1d400ba 	ldrh	r0, [r4, #10]
4001ad18:	e1500005 	cmp	r0, r5
4001ad1c:	cafffff6 	bgt	4001acfc <CyU3PDmaMultiChannelHandleError+0x6c>
4001ad20:	e1d402b4 	ldrh	r0, [r4, #36]	; 0x24
4001ad24:	ebffe86e 	bl	40014ee4 <CyU3PDmaSocketDisable>
4001ad28:	e3a02002 	mov	r2, #2
4001ad2c:	e3e01007 	mvn	r1, #7
4001ad30:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ad34:	ebffbcc7 	bl	4000a058 <_txe_event_flags_set>
4001ad38:	e3a02000 	mov	r2, #0
4001ad3c:	e3a01040 	mov	r1, #64	; 0x40
4001ad40:	e28400b0 	add	r0, r4, #176	; 0xb0
4001ad44:	ebffbcc3 	bl	4000a058 <_txe_event_flags_set>
4001ad48:	e3a00005 	mov	r0, #5
4001ad4c:	e5840000 	str	r0, [r4]
4001ad50:	e59400d8 	ldr	r0, [r4, #216]	; 0xd8
4001ad54:	e3500000 	cmp	r0, #0
4001ad58:	0a000007 	beq	4001ad7c <CyU3PDmaMultiChannelHandleError+0xec>
4001ad5c:	e594006c 	ldr	r0, [r4, #108]	; 0x6c
4001ad60:	e3100040 	tst	r0, #64	; 0x40
4001ad64:	0a000004 	beq	4001ad7c <CyU3PDmaMultiChannelHandleError+0xec>
4001ad68:	e3a02000 	mov	r2, #0
4001ad6c:	e3a01040 	mov	r1, #64	; 0x40
4001ad70:	e59430d8 	ldr	r3, [r4, #216]	; 0xd8
4001ad74:	e1a00004 	mov	r0, r4
4001ad78:	e12fff33 	blx	r3
4001ad7c:	e2840078 	add	r0, r4, #120	; 0x78
4001ad80:	ebffbd81 	bl	4000a38c <_txe_mutex_put>
4001ad84:	e8bd8070 	pop	{r4, r5, r6, pc}

Disassembly of section i.CyU3PDmaThreadEntry:

4001ad88 <CyU3PDmaThreadEntry>:
4001ad88:	e92d4070 	push	{r4, r5, r6, lr}
4001ad8c:	e24dd040 	sub	sp, sp, #64	; 0x40
4001ad90:	ea00003f 	b	4001ae94 <CyU3PDmaThreadEntry+0x10c>
4001ad94:	e3e02000 	mvn	r2, #0
4001ad98:	e1a0100d 	mov	r1, sp
4001ad9c:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ae98 <CyU3PDmaThreadEntry+0x110>
4001ada0:	ebffbe37 	bl	4000a684 <_txe_queue_receive>
4001ada4:	e1a05000 	mov	r5, r0
4001ada8:	e3550000 	cmp	r5, #0
4001adac:	0a000000 	beq	4001adb4 <CyU3PDmaThreadEntry+0x2c>
4001adb0:	ea000037 	b	4001ae94 <CyU3PDmaThreadEntry+0x10c>
4001adb4:	e59d0000 	ldr	r0, [sp]
4001adb8:	e20040ff 	and	r4, r0, #255	; 0xff
4001adbc:	e3540000 	cmp	r4, #0
4001adc0:	0a000000 	beq	4001adc8 <CyU3PDmaThreadEntry+0x40>
4001adc4:	ea000032 	b	4001ae94 <CyU3PDmaThreadEntry+0x10c>
4001adc8:	e59d6004 	ldr	r6, [sp, #4]
4001adcc:	e1d600b4 	ldrh	r0, [r6, #4]
4001add0:	e350000a 	cmp	r0, #10
4001add4:	308ff100 	addcc	pc, pc, r0, lsl #2
4001add8:	ea000028 	b	4001ae80 <CyU3PDmaThreadEntry+0xf8>
4001addc:	ea000008 	b	4001ae04 <CyU3PDmaThreadEntry+0x7c>
4001ade0:	ea000009 	b	4001ae0c <CyU3PDmaThreadEntry+0x84>
4001ade4:	ea00000e 	b	4001ae24 <CyU3PDmaThreadEntry+0x9c>
4001ade8:	ea00000a 	b	4001ae18 <CyU3PDmaThreadEntry+0x90>
4001adec:	ea00000b 	b	4001ae20 <CyU3PDmaThreadEntry+0x98>
4001adf0:	ea00000e 	b	4001ae30 <CyU3PDmaThreadEntry+0xa8>
4001adf4:	ea000012 	b	4001ae44 <CyU3PDmaThreadEntry+0xbc>
4001adf8:	ea00000e 	b	4001ae38 <CyU3PDmaThreadEntry+0xb0>
4001adfc:	ea000012 	b	4001ae4c <CyU3PDmaThreadEntry+0xc4>
4001ae00:	ea000014 	b	4001ae58 <CyU3PDmaThreadEntry+0xd0>
4001ae04:	e1a00000 	nop			; (mov r0, r0)
4001ae08:	e1a00000 	nop			; (mov r0, r0)
4001ae0c:	e1a0000d 	mov	r0, sp
4001ae10:	ebfffa18 	bl	40019678 <CyU3PDmaIntHandler_TypeAuto>
4001ae14:	ea00001b 	b	4001ae88 <CyU3PDmaThreadEntry+0x100>
4001ae18:	e1a00000 	nop			; (mov r0, r0)
4001ae1c:	e1a00000 	nop			; (mov r0, r0)
4001ae20:	e1a00000 	nop			; (mov r0, r0)
4001ae24:	e1a0000d 	mov	r0, sp
4001ae28:	ebfffaed 	bl	400199e4 <CyU3PDmaIntHandler_TypeManual>
4001ae2c:	ea000015 	b	4001ae88 <CyU3PDmaThreadEntry+0x100>
4001ae30:	e1a00000 	nop			; (mov r0, r0)
4001ae34:	e1a00000 	nop			; (mov r0, r0)
4001ae38:	e1a0000d 	mov	r0, sp
4001ae3c:	ebfffc4c 	bl	40019f74 <CyU3PDmaIntHandler_TypeManyToOne>
4001ae40:	ea000010 	b	4001ae88 <CyU3PDmaThreadEntry+0x100>
4001ae44:	e1a00000 	nop			; (mov r0, r0)
4001ae48:	e1a00000 	nop			; (mov r0, r0)
4001ae4c:	e1a0000d 	mov	r0, sp
4001ae50:	ebfffdbf 	bl	4001a554 <CyU3PDmaIntHandler_TypeOneToMany>
4001ae54:	ea00000b 	b	4001ae88 <CyU3PDmaThreadEntry+0x100>
4001ae58:	e1a00000 	nop			; (mov r0, r0)
4001ae5c:	e59f0038 	ldr	r0, [pc, #56]	; 4001ae9c <CyU3PDmaThreadEntry+0x114>
4001ae60:	e5900000 	ldr	r0, [r0]
4001ae64:	e3500000 	cmp	r0, #0
4001ae68:	0a000003 	beq	4001ae7c <CyU3PDmaThreadEntry+0xf4>
4001ae6c:	e1a0000d 	mov	r0, sp
4001ae70:	e59f1024 	ldr	r1, [pc, #36]	; 4001ae9c <CyU3PDmaThreadEntry+0x114>
4001ae74:	e5911000 	ldr	r1, [r1]
4001ae78:	e12fff31 	blx	r1
4001ae7c:	ea000001 	b	4001ae88 <CyU3PDmaThreadEntry+0x100>
4001ae80:	e1a00000 	nop			; (mov r0, r0)
4001ae84:	e1a00000 	nop			; (mov r0, r0)
4001ae88:	e1a00000 	nop			; (mov r0, r0)
4001ae8c:	ebffbf2a 	bl	4000ab3c <_txe_thread_relinquish>
4001ae90:	e1a00000 	nop			; (mov r0, r0)
4001ae94:	eaffffbe 	b	4001ad94 <CyU3PDmaThreadEntry+0xc>
4001ae98:	40031938 	.word	0x40031938
4001ae9c:	40030d14 	.word	0x40030d14

Disassembly of section i.CyU3PGpifInit:

4001aea0 <CyU3PGpifInit>:
4001aea0:	e92d4010 	push	{r4, lr}
4001aea4:	e1a04000 	mov	r4, r0
4001aea8:	e3540000 	cmp	r4, #0
4001aeac:	0a000006 	beq	4001aecc <CyU3PGpifInit+0x2c>
4001aeb0:	e59f005c 	ldr	r0, [pc, #92]	; 4001af14 <CyU3PGpifInit+0x74>
4001aeb4:	e5900000 	ldr	r0, [r0]
4001aeb8:	e1a00800 	lsl	r0, r0, #16
4001aebc:	e1a00820 	lsr	r0, r0, #16
4001aec0:	e380033a 	orr	r0, r0, #-402653184	; 0xe8000000
4001aec4:	e59f1048 	ldr	r1, [pc, #72]	; 4001af14 <CyU3PGpifInit+0x74>
4001aec8:	e5810000 	str	r0, [r1]
4001aecc:	e3e00000 	mvn	r0, #0
4001aed0:	e59f1040 	ldr	r1, [pc, #64]	; 4001af18 <CyU3PGpifInit+0x78>
4001aed4:	e5810014 	str	r0, [r1, #20]
4001aed8:	e3a00000 	mov	r0, #0
4001aedc:	e5810018 	str	r0, [r1, #24]
4001aee0:	e3a00e11 	mov	r0, #272	; 0x110
4001aee4:	e1c11300 	bic	r1, r1, r0, lsl #6
4001aee8:	e5810008 	str	r0, [r1, #8]
4001aeec:	ebffdf9e 	bl	40012d6c <CyU3PSysBarrierSync>
4001aef0:	e59f001c 	ldr	r0, [pc, #28]	; 4001af14 <CyU3PGpifInit+0x74>
4001aef4:	e5900000 	ldr	r0, [r0]
4001aef8:	e1a00800 	lsl	r0, r0, #16
4001aefc:	e1a00820 	lsr	r0, r0, #16
4001af00:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001af04:	e59f1008 	ldr	r1, [pc, #8]	; 4001af14 <CyU3PGpifInit+0x74>
4001af08:	e5810000 	str	r0, [r1]
4001af0c:	e3a00000 	mov	r0, #0
4001af10:	e8bd8010 	pop	{r4, pc}
4001af14:	e0010000 	.word	0xe0010000
4001af18:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PPibApplicationDefine:

4001af1c <CyU3PPibApplicationDefine>:
4001af1c:	e92d4010 	push	{r4, lr}
4001af20:	e24dd020 	sub	sp, sp, #32
4001af24:	e3a00000 	mov	r0, #0
4001af28:	e59f10dc 	ldr	r1, [pc, #220]	; 4001b00c <CyU3PPibApplicationDefine+0xf0>
4001af2c:	e5810000 	str	r0, [r1]
4001af30:	e59f10d8 	ldr	r1, [pc, #216]	; 4001b010 <CyU3PPibApplicationDefine+0xf4>
4001af34:	e5810000 	str	r0, [r1]
4001af38:	e59f10d4 	ldr	r1, [pc, #212]	; 4001b014 <CyU3PPibApplicationDefine+0xf8>
4001af3c:	e5810000 	str	r0, [r1]
4001af40:	e59f10d0 	ldr	r1, [pc, #208]	; 4001b018 <CyU3PPibApplicationDefine+0xfc>
4001af44:	e5810000 	str	r0, [r1]
4001af48:	e59f10cc 	ldr	r1, [pc, #204]	; 4001b01c <CyU3PPibApplicationDefine+0x100>
4001af4c:	e5810000 	str	r0, [r1]
4001af50:	e59f10c8 	ldr	r1, [pc, #200]	; 4001b020 <CyU3PPibApplicationDefine+0x104>
4001af54:	e5810000 	str	r0, [r1]
4001af58:	e59f10c4 	ldr	r1, [pc, #196]	; 4001b024 <CyU3PPibApplicationDefine+0x108>
4001af5c:	e5810000 	str	r0, [r1]
4001af60:	e59f10c0 	ldr	r1, [pc, #192]	; 4001b028 <CyU3PPibApplicationDefine+0x10c>
4001af64:	e5810000 	str	r0, [r1]
4001af68:	e59f10bc 	ldr	r1, [pc, #188]	; 4001b02c <CyU3PPibApplicationDefine+0x110>
4001af6c:	e5810000 	str	r0, [r1]
4001af70:	e3a00b01 	mov	r0, #1024	; 0x400
4001af74:	ebffa1be 	bl	40003674 <CyU3PMemAlloc>
4001af78:	e1a04000 	mov	r4, r0
4001af7c:	e3a030a8 	mov	r3, #168	; 0xa8
4001af80:	e3a02001 	mov	r2, #1
4001af84:	e3a01000 	mov	r1, #0
4001af88:	e3a00004 	mov	r0, #4
4001af8c:	e28dc00c 	add	ip, sp, #12
4001af90:	e88c000f 	stm	ip, {r0, r1, r2, r3}
4001af94:	e3a02b01 	mov	r2, #1024	; 0x400
4001af98:	e1a03001 	mov	r3, r1
4001af9c:	e58d2004 	str	r2, [sp, #4]
4001afa0:	e59f2088 	ldr	r2, [pc, #136]	; 4001b030 <CyU3PPibApplicationDefine+0x114>
4001afa4:	e28f1088 	add	r1, pc, #136	; 0x88
4001afa8:	e58d0008 	str	r0, [sp, #8]
4001afac:	e59f0090 	ldr	r0, [pc, #144]	; 4001b044 <CyU3PPibApplicationDefine+0x128>
4001afb0:	e58d4000 	str	r4, [sp]
4001afb4:	ebffbe02 	bl	4000a7c4 <_txe_thread_create>
4001afb8:	e3a02028 	mov	r2, #40	; 0x28
4001afbc:	e3a01000 	mov	r1, #0
4001afc0:	e59f0080 	ldr	r0, [pc, #128]	; 4001b048 <CyU3PPibApplicationDefine+0x12c>
4001afc4:	ebffbb83 	bl	40009dd8 <_txe_event_flags_create>
4001afc8:	e3a02000 	mov	r2, #0
4001afcc:	e3a01010 	mov	r1, #16
4001afd0:	e59f0070 	ldr	r0, [pc, #112]	; 4001b048 <CyU3PPibApplicationDefine+0x12c>
4001afd4:	ebffbc1f 	bl	4000a058 <_txe_event_flags_set>
4001afd8:	e3a00040 	mov	r0, #64	; 0x40
4001afdc:	ebffa1a4 	bl	40003674 <CyU3PMemAlloc>
4001afe0:	e1a04000 	mov	r4, r0
4001afe4:	e3a0303c 	mov	r3, #60	; 0x3c
4001afe8:	e3a02040 	mov	r2, #64	; 0x40
4001afec:	e1cd20f0 	strd	r2, [sp]
4001aff0:	e1a03004 	mov	r3, r4
4001aff4:	e3a02001 	mov	r2, #1
4001aff8:	e3a01000 	mov	r1, #0
4001affc:	e59f0048 	ldr	r0, [pc, #72]	; 4001b04c <CyU3PPibApplicationDefine+0x130>
4001b000:	ebffbd09 	bl	4000a42c <_txe_queue_create>
4001b004:	e28dd020 	add	sp, sp, #32
4001b008:	e8bd8010 	pop	{r4, pc}
4001b00c:	40030d18 	.word	0x40030d18
4001b010:	40030d1c 	.word	0x40030d1c
4001b014:	40030d24 	.word	0x40030d24
4001b018:	40030d3c 	.word	0x40030d3c
4001b01c:	40030d30 	.word	0x40030d30
4001b020:	40030d34 	.word	0x40030d34
4001b024:	40030d28 	.word	0x40030d28
4001b028:	40030d2c 	.word	0x40030d2c
4001b02c:	40030d20 	.word	0x40030d20
4001b030:	4001b204 	.word	0x4001b204
4001b034:	505f3330 	.word	0x505f3330
4001b038:	545f4249 	.word	0x545f4249
4001b03c:	41455248 	.word	0x41455248
4001b040:	00000044 	.word	0x00000044
4001b044:	4003199c 	.word	0x4003199c
4001b048:	40031974 	.word	0x40031974
4001b04c:	40031a44 	.word	0x40031a44

Disassembly of section i.CyU3PPibInit:

4001b050 <CyU3PPibInit>:
4001b050:	e92d4070 	push	{r4, r5, r6, lr}
4001b054:	e1a04000 	mov	r4, r0
4001b058:	e1a05001 	mov	r5, r1
4001b05c:	e3a06000 	mov	r6, #0
4001b060:	ebffe724 	bl	40014cf8 <CyFx3DevIsGpifSupported>
4001b064:	e3500000 	cmp	r0, #0
4001b068:	1a000001 	bne	4001b074 <CyU3PPibInit+0x24>
4001b06c:	e3a00046 	mov	r0, #70	; 0x46
4001b070:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b074:	e59f0128 	ldr	r0, [pc, #296]	; 4001b1a4 <CyU3PPibInit+0x154>
4001b078:	e5900000 	ldr	r0, [r0]
4001b07c:	e3500000 	cmp	r0, #0
4001b080:	0a000001 	beq	4001b08c <CyU3PPibInit+0x3c>
4001b084:	e3a00043 	mov	r0, #67	; 0x43
4001b088:	eafffff8 	b	4001b070 <CyU3PPibInit+0x20>
4001b08c:	e3550000 	cmp	r5, #0
4001b090:	1a000001 	bne	4001b09c <CyU3PPibInit+0x4c>
4001b094:	e3a00041 	mov	r0, #65	; 0x41
4001b098:	eafffff4 	b	4001b070 <CyU3PPibInit+0x20>
4001b09c:	e5d5000c 	ldrb	r0, [r5, #12]
4001b0a0:	e3500004 	cmp	r0, #4
4001b0a4:	ba000001 	blt	4001b0b0 <CyU3PPibInit+0x60>
4001b0a8:	e3a00040 	mov	r0, #64	; 0x40
4001b0ac:	eaffffef 	b	4001b070 <CyU3PPibInit+0x20>
4001b0b0:	e1d500b0 	ldrh	r0, [r5]
4001b0b4:	e3500002 	cmp	r0, #2
4001b0b8:	ba000002 	blt	4001b0c8 <CyU3PPibInit+0x78>
4001b0bc:	e1d500b0 	ldrh	r0, [r5]
4001b0c0:	e3500b01 	cmp	r0, #1024	; 0x400
4001b0c4:	da000001 	ble	4001b0d0 <CyU3PPibInit+0x80>
4001b0c8:	e3a00040 	mov	r0, #64	; 0x40
4001b0cc:	eaffffe7 	b	4001b070 <CyU3PPibInit+0x20>
4001b0d0:	e3a00001 	mov	r0, #1
4001b0d4:	e59f10c8 	ldr	r1, [pc, #200]	; 4001b1a4 <CyU3PPibInit+0x154>
4001b0d8:	e5810000 	str	r0, [r1]
4001b0dc:	e5d5000c 	ldrb	r0, [r5, #12]
4001b0e0:	e3a01b06 	mov	r1, #6144	; 0x1800
4001b0e4:	e0010580 	and	r0, r1, r0, lsl #11
4001b0e8:	e1d510b0 	ldrh	r1, [r5]
4001b0ec:	e2411001 	sub	r1, r1, #1
4001b0f0:	e1a01b01 	lsl	r1, r1, #22
4001b0f4:	e1a01b21 	lsr	r1, r1, #22
4001b0f8:	e1800001 	orr	r0, r0, r1
4001b0fc:	e59f10a4 	ldr	r1, [pc, #164]	; 4001b1a8 <CyU3PPibInit+0x158>
4001b100:	e581000c 	str	r0, [r1, #12]
4001b104:	e5950004 	ldr	r0, [r5, #4]
4001b108:	e3500000 	cmp	r0, #0
4001b10c:	0a000003 	beq	4001b120 <CyU3PPibInit+0xd0>
4001b110:	e1a00001 	mov	r0, r1
4001b114:	e590000c 	ldr	r0, [r0, #12]
4001b118:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001b11c:	e581000c 	str	r0, [r1, #12]
4001b120:	e59f0080 	ldr	r0, [pc, #128]	; 4001b1a8 <CyU3PPibInit+0x158>
4001b124:	e590000c 	ldr	r0, [r0, #12]
4001b128:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b12c:	e59f1074 	ldr	r1, [pc, #116]	; 4001b1a8 <CyU3PPibInit+0x158>
4001b130:	e581000c 	str	r0, [r1, #12]
4001b134:	ebffe755 	bl	40014e90 <CyFx3PibPowerOn>
4001b138:	e5950008 	ldr	r0, [r5, #8]
4001b13c:	e3500000 	cmp	r0, #0
4001b140:	0a000000 	beq	4001b148 <CyU3PPibInit+0xf8>
4001b144:	ebffe732 	bl	40014e14 <CyFx3PibDllEnable>
4001b148:	e59f005c 	ldr	r0, [pc, #92]	; 4001b1ac <CyU3PPibInit+0x15c>
4001b14c:	e5900000 	ldr	r0, [r0]
4001b150:	e3500000 	cmp	r0, #0
4001b154:	0a000003 	beq	4001b168 <CyU3PPibInit+0x118>
4001b158:	e1a00004 	mov	r0, r4
4001b15c:	eb0000d4 	bl	4001b4b4 <CyU3PPmmcInit>
4001b160:	e1a06000 	mov	r6, r0
4001b164:	ea000002 	b	4001b174 <CyU3PPibInit+0x124>
4001b168:	e1a00004 	mov	r0, r4
4001b16c:	ebffff4b 	bl	4001aea0 <CyU3PGpifInit>
4001b170:	e1a06000 	mov	r6, r0
4001b174:	e3e00000 	mvn	r0, #0
4001b178:	e59f1030 	ldr	r1, [pc, #48]	; 4001b1b0 <CyU3PPibInit+0x160>
4001b17c:	e5810024 	str	r0, [r1, #36]	; 0x24
4001b180:	e3560000 	cmp	r6, #0
4001b184:	1a000004 	bne	4001b19c <CyU3PPibInit+0x14c>
4001b188:	eb000009 	bl	4001b1b4 <CyU3PPibSocketInit>
4001b18c:	e3a00007 	mov	r0, #7
4001b190:	eb001c4a 	bl	400222c0 <CyU3PVicEnableInt>
4001b194:	e3a00006 	mov	r0, #6
4001b198:	eb001c48 	bl	400222c0 <CyU3PVicEnableInt>
4001b19c:	e1a00006 	mov	r0, r6
4001b1a0:	eaffffb2 	b	4001b070 <CyU3PPibInit+0x20>
4001b1a4:	40030d18 	.word	0x40030d18
4001b1a8:	e0052000 	.word	0xe0052000
4001b1ac:	40030d1c 	.word	0x40030d1c
4001b1b0:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PPibSocketInit:

4001b1b4 <CyU3PPibSocketInit>:
4001b1b4:	e3a00000 	mov	r0, #0
4001b1b8:	ea00000d 	b	4001b1f4 <CyU3PPibSocketInit+0x40>
4001b1bc:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001b1c0:	e59f2038 	ldr	r2, [pc, #56]	; 4001b200 <CyU3PPibSocketInit+0x4c>
4001b1c4:	e0822380 	add	r2, r2, r0, lsl #7
4001b1c8:	e582100c 	str	r1, [r2, #12]
4001b1cc:	e3e01000 	mvn	r1, #0
4001b1d0:	e59f2028 	ldr	r2, [pc, #40]	; 4001b200 <CyU3PPibSocketInit+0x4c>
4001b1d4:	e0822380 	add	r2, r2, r0, lsl #7
4001b1d8:	e5821010 	str	r1, [r2, #16]
4001b1dc:	e3a01000 	mov	r1, #0
4001b1e0:	e59f2018 	ldr	r2, [pc, #24]	; 4001b200 <CyU3PPibSocketInit+0x4c>
4001b1e4:	e0822380 	add	r2, r2, r0, lsl #7
4001b1e8:	e5821014 	str	r1, [r2, #20]
4001b1ec:	e2801001 	add	r1, r0, #1
4001b1f0:	e20100ff 	and	r0, r1, #255	; 0xff
4001b1f4:	e3500020 	cmp	r0, #32
4001b1f8:	baffffef 	blt	4001b1bc <CyU3PPibSocketInit+0x8>
4001b1fc:	e12fff1e 	bx	lr
4001b200:	e0018000 	.word	0xe0018000

Disassembly of section i.CyU3PPibThreadEntry:

4001b204 <CyU3PPibThreadEntry>:
4001b204:	e92d403e 	push	{r1, r2, r3, r4, r5, lr}
4001b208:	e3a00005 	mov	r0, #5
4001b20c:	ebffe25e 	bl	40013b8c <CyU3PSysModuleInitCompleteEvt>
4001b210:	e59f0278 	ldr	r0, [pc, #632]	; 4001b490 <CyU3PPibThreadEntry+0x28c>
4001b214:	e5900000 	ldr	r0, [r0]
4001b218:	e1a00800 	lsl	r0, r0, #16
4001b21c:	e1a00820 	lsr	r0, r0, #16
4001b220:	e3800332 	orr	r0, r0, #-939524096	; 0xc8000000
4001b224:	e59f1264 	ldr	r1, [pc, #612]	; 4001b490 <CyU3PPibThreadEntry+0x28c>
4001b228:	e5810000 	str	r0, [r1]
4001b22c:	e3a000e1 	mov	r0, #225	; 0xe1
4001b230:	e59f125c 	ldr	r1, [pc, #604]	; 4001b494 <CyU3PPibThreadEntry+0x290>
4001b234:	e5810000 	str	r0, [r1]
4001b238:	ea000093 	b	4001b48c <CyU3PPibThreadEntry+0x288>
4001b23c:	e3e03000 	mvn	r3, #0
4001b240:	e58d3000 	str	r3, [sp]
4001b244:	e28d3008 	add	r3, sp, #8
4001b248:	e3a02001 	mov	r2, #1
4001b24c:	e59f0240 	ldr	r0, [pc, #576]	; 4001b494 <CyU3PPibThreadEntry+0x290>
4001b250:	e5901000 	ldr	r1, [r0]
4001b254:	e59f023c 	ldr	r0, [pc, #572]	; 4001b498 <CyU3PPibThreadEntry+0x294>
4001b258:	ebffbb4e 	bl	40009f98 <_txe_event_flags_get>
4001b25c:	e1a04000 	mov	r4, r0
4001b260:	e59f122c 	ldr	r1, [pc, #556]	; 4001b494 <CyU3PPibThreadEntry+0x290>
4001b264:	e59d0008 	ldr	r0, [sp, #8]
4001b268:	e5911000 	ldr	r1, [r1]
4001b26c:	e0000001 	and	r0, r0, r1
4001b270:	e58d0008 	str	r0, [sp, #8]
4001b274:	e3540000 	cmp	r4, #0
4001b278:	0a000000 	beq	4001b280 <CyU3PPibThreadEntry+0x7c>
4001b27c:	ea000082 	b	4001b48c <CyU3PPibThreadEntry+0x288>
4001b280:	ea00007d 	b	4001b47c <CyU3PPibThreadEntry+0x278>
4001b284:	e59d0008 	ldr	r0, [sp, #8]
4001b288:	e3100020 	tst	r0, #32
4001b28c:	0a000017 	beq	4001b2f0 <CyU3PPibThreadEntry+0xec>
4001b290:	e59f0204 	ldr	r0, [pc, #516]	; 4001b49c <CyU3PPibThreadEntry+0x298>
4001b294:	e5900000 	ldr	r0, [r0]
4001b298:	e3500000 	cmp	r0, #0
4001b29c:	0a00000b 	beq	4001b2d0 <CyU3PPibThreadEntry+0xcc>
4001b2a0:	e59f01f8 	ldr	r0, [pc, #504]	; 4001b4a0 <CyU3PPibThreadEntry+0x29c>
4001b2a4:	e5900000 	ldr	r0, [r0]
4001b2a8:	e3100002 	tst	r0, #2
4001b2ac:	0a000007 	beq	4001b2d0 <CyU3PPibThreadEntry+0xcc>
4001b2b0:	e59f01ec 	ldr	r0, [pc, #492]	; 4001b4a4 <CyU3PPibThreadEntry+0x2a0>
4001b2b4:	e5900e08 	ldr	r0, [r0, #3592]	; 0xe08
4001b2b8:	e1a01800 	lsl	r1, r0, #16
4001b2bc:	e1a01821 	lsr	r1, r1, #16
4001b2c0:	e3a00002 	mov	r0, #2
4001b2c4:	e59f21d0 	ldr	r2, [pc, #464]	; 4001b49c <CyU3PPibThreadEntry+0x298>
4001b2c8:	e5922000 	ldr	r2, [r2]
4001b2cc:	e12fff32 	blx	r2
4001b2d0:	e59f01b8 	ldr	r0, [pc, #440]	; 4001b490 <CyU3PPibThreadEntry+0x28c>
4001b2d4:	e5900000 	ldr	r0, [r0]
4001b2d8:	e3c00202 	bic	r0, r0, #536870912	; 0x20000000
4001b2dc:	e59f11ac 	ldr	r1, [pc, #428]	; 4001b490 <CyU3PPibThreadEntry+0x28c>
4001b2e0:	e5810000 	str	r0, [r1]
4001b2e4:	e59d0008 	ldr	r0, [sp, #8]
4001b2e8:	e3c00020 	bic	r0, r0, #32
4001b2ec:	e58d0008 	str	r0, [sp, #8]
4001b2f0:	e59d0008 	ldr	r0, [sp, #8]
4001b2f4:	e3100040 	tst	r0, #64	; 0x40
4001b2f8:	0a000027 	beq	4001b39c <CyU3PPibThreadEntry+0x198>
4001b2fc:	e59f0198 	ldr	r0, [pc, #408]	; 4001b49c <CyU3PPibThreadEntry+0x298>
4001b300:	e5900000 	ldr	r0, [r0]
4001b304:	e3500000 	cmp	r0, #0
4001b308:	0a000017 	beq	4001b36c <CyU3PPibThreadEntry+0x168>
4001b30c:	e59f018c 	ldr	r0, [pc, #396]	; 4001b4a0 <CyU3PPibThreadEntry+0x29c>
4001b310:	e5900000 	ldr	r0, [r0]
4001b314:	e3100004 	tst	r0, #4
4001b318:	0a000013 	beq	4001b36c <CyU3PPibThreadEntry+0x168>
4001b31c:	e59f016c 	ldr	r0, [pc, #364]	; 4001b490 <CyU3PPibThreadEntry+0x28c>
4001b320:	e5900020 	ldr	r0, [r0, #32]
4001b324:	e1a05800 	lsl	r5, r0, #16
4001b328:	e1a05825 	lsr	r5, r5, #16
4001b32c:	e2050b1f 	and	r0, r5, #31744	; 0x7c00
4001b330:	e3500a02 	cmp	r0, #8192	; 0x2000
4001b334:	1a000000 	bne	4001b33c <CyU3PPibThreadEntry+0x138>
4001b338:	e3a05a02 	mov	r5, #8192	; 0x2000
4001b33c:	e59f0164 	ldr	r0, [pc, #356]	; 4001b4a8 <CyU3PPibThreadEntry+0x2a4>
4001b340:	e5900000 	ldr	r0, [r0]
4001b344:	e3100101 	tst	r0, #1073741824	; 0x40000000
4001b348:	1a000001 	bne	4001b354 <CyU3PPibThreadEntry+0x150>
4001b34c:	e3550004 	cmp	r5, #4
4001b350:	da000004 	ble	4001b368 <CyU3PPibThreadEntry+0x164>
4001b354:	e1a01005 	mov	r1, r5
4001b358:	e3a00004 	mov	r0, #4
4001b35c:	e59f2138 	ldr	r2, [pc, #312]	; 4001b49c <CyU3PPibThreadEntry+0x298>
4001b360:	e5922000 	ldr	r2, [r2]
4001b364:	e12fff32 	blx	r2
4001b368:	e1a00000 	nop			; (mov r0, r0)
4001b36c:	e59f012c 	ldr	r0, [pc, #300]	; 4001b4a0 <CyU3PPibThreadEntry+0x29c>
4001b370:	e5900000 	ldr	r0, [r0]
4001b374:	e3100004 	tst	r0, #4
4001b378:	0a000004 	beq	4001b390 <CyU3PPibThreadEntry+0x18c>
4001b37c:	e59f010c 	ldr	r0, [pc, #268]	; 4001b490 <CyU3PPibThreadEntry+0x28c>
4001b380:	e5900008 	ldr	r0, [r0, #8]
4001b384:	e380020e 	orr	r0, r0, #-536870912	; 0xe0000000
4001b388:	e59f1100 	ldr	r1, [pc, #256]	; 4001b490 <CyU3PPibThreadEntry+0x28c>
4001b38c:	e5810008 	str	r0, [r1, #8]
4001b390:	e59d0008 	ldr	r0, [sp, #8]
4001b394:	e3c00040 	bic	r0, r0, #64	; 0x40
4001b398:	e58d0008 	str	r0, [sp, #8]
4001b39c:	e59d0008 	ldr	r0, [sp, #8]
4001b3a0:	e3100080 	tst	r0, #128	; 0x80
4001b3a4:	0a000011 	beq	4001b3f0 <CyU3PPibThreadEntry+0x1ec>
4001b3a8:	e59f00ec 	ldr	r0, [pc, #236]	; 4001b49c <CyU3PPibThreadEntry+0x298>
4001b3ac:	e5900000 	ldr	r0, [r0]
4001b3b0:	e3500000 	cmp	r0, #0
4001b3b4:	0a00000a 	beq	4001b3e4 <CyU3PPibThreadEntry+0x1e0>
4001b3b8:	e59f00e0 	ldr	r0, [pc, #224]	; 4001b4a0 <CyU3PPibThreadEntry+0x29c>
4001b3bc:	e5900000 	ldr	r0, [r0]
4001b3c0:	e3100001 	tst	r0, #1
4001b3c4:	0a000006 	beq	4001b3e4 <CyU3PPibThreadEntry+0x1e0>
4001b3c8:	ebffe6ab 	bl	40014e7c <CyFx3PibGetDllStatus>
4001b3cc:	e1a05000 	mov	r5, r0
4001b3d0:	e1a01000 	mov	r1, r0
4001b3d4:	e3a00001 	mov	r0, #1
4001b3d8:	e59f20bc 	ldr	r2, [pc, #188]	; 4001b49c <CyU3PPibThreadEntry+0x298>
4001b3dc:	e5922000 	ldr	r2, [r2]
4001b3e0:	e12fff32 	blx	r2
4001b3e4:	e59d0008 	ldr	r0, [sp, #8]
4001b3e8:	e3c00080 	bic	r0, r0, #128	; 0x80
4001b3ec:	e58d0008 	str	r0, [sp, #8]
4001b3f0:	e59d0008 	ldr	r0, [sp, #8]
4001b3f4:	e3100001 	tst	r0, #1
4001b3f8:	0a00001f 	beq	4001b47c <CyU3PPibThreadEntry+0x278>
4001b3fc:	e3a02000 	mov	r2, #0
4001b400:	e28d1004 	add	r1, sp, #4
4001b404:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b4ac <CyU3PPibThreadEntry+0x2a8>
4001b408:	ebffbc9d 	bl	4000a684 <_txe_queue_receive>
4001b40c:	e1a04000 	mov	r4, r0
4001b410:	e3540000 	cmp	r4, #0
4001b414:	1a000015 	bne	4001b470 <CyU3PPibThreadEntry+0x26c>
4001b418:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b41c:	e2000901 	and	r0, r0, #16384	; 0x4000
4001b420:	e1b00720 	lsrs	r0, r0, #14
4001b424:	0a000014 	beq	4001b47c <CyU3PPibThreadEntry+0x278>
4001b428:	e1dd00b4 	ldrh	r0, [sp, #4]
4001b42c:	e20000ff 	and	r0, r0, #255	; 0xff
4001b430:	e3500004 	cmp	r0, #4
4001b434:	1a00000a 	bne	4001b464 <CyU3PPibThreadEntry+0x260>
4001b438:	e59f0070 	ldr	r0, [pc, #112]	; 4001b4b0 <CyU3PPibThreadEntry+0x2ac>
4001b43c:	e5900000 	ldr	r0, [r0]
4001b440:	e3500000 	cmp	r0, #0
4001b444:	0a000005 	beq	4001b460 <CyU3PPibThreadEntry+0x25c>
4001b448:	e1dd20b6 	ldrh	r2, [sp, #6]
4001b44c:	e1a01442 	asr	r1, r2, #8
4001b450:	e20200ff 	and	r0, r2, #255	; 0xff
4001b454:	e59f2054 	ldr	r2, [pc, #84]	; 4001b4b0 <CyU3PPibThreadEntry+0x2ac>
4001b458:	e5922000 	ldr	r2, [r2]
4001b45c:	e12fff32 	blx	r2
4001b460:	ea000001 	b	4001b46c <CyU3PPibThreadEntry+0x268>
4001b464:	e1a00000 	nop			; (mov r0, r0)
4001b468:	e1a00000 	nop			; (mov r0, r0)
4001b46c:	ea000002 	b	4001b47c <CyU3PPibThreadEntry+0x278>
4001b470:	e59d0008 	ldr	r0, [sp, #8]
4001b474:	e3c00001 	bic	r0, r0, #1
4001b478:	e58d0008 	str	r0, [sp, #8]
4001b47c:	e59d0008 	ldr	r0, [sp, #8]
4001b480:	e3500000 	cmp	r0, #0
4001b484:	1affff7e 	bne	4001b284 <CyU3PPibThreadEntry+0x80>
4001b488:	e1a00000 	nop			; (mov r0, r0)
4001b48c:	eaffff6a 	b	4001b23c <CyU3PPibThreadEntry+0x38>
4001b490:	e0010000 	.word	0xe0010000
4001b494:	40030d24 	.word	0x40030d24
4001b498:	40031974 	.word	0x40031974
4001b49c:	40030d28 	.word	0x40030d28
4001b4a0:	40030d2c 	.word	0x40030d2c
4001b4a4:	e0017000 	.word	0xe0017000
4001b4a8:	e0014000 	.word	0xe0014000
4001b4ac:	40031a44 	.word	0x40031a44
4001b4b0:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PPmmcInit:

4001b4b4 <CyU3PPmmcInit>:
4001b4b4:	e92d4010 	push	{r4, lr}
4001b4b8:	e1a04000 	mov	r4, r0
4001b4bc:	e3540000 	cmp	r4, #0
4001b4c0:	0a000042 	beq	4001b5d0 <CyU3PPmmcInit+0x11c>
4001b4c4:	e3e00000 	mvn	r0, #0
4001b4c8:	e59f1148 	ldr	r1, [pc, #328]	; 4001b618 <CyU3PPmmcInit+0x164>
4001b4cc:	e581000c 	str	r0, [r1, #12]
4001b4d0:	e3a00000 	mov	r0, #0
4001b4d4:	e5810010 	str	r0, [r1, #16]
4001b4d8:	e2400801 	sub	r0, r0, #65536	; 0x10000
4001b4dc:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001b4e0:	e3a00000 	mov	r0, #0
4001b4e4:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001b4e8:	e5810008 	str	r0, [r1, #8]
4001b4ec:	e2810a01 	add	r0, r1, #4096	; 0x1000
4001b4f0:	e5900000 	ldr	r0, [r0]
4001b4f4:	e3c00c1e 	bic	r0, r0, #7680	; 0x1e00
4001b4f8:	e2811a01 	add	r1, r1, #4096	; 0x1000
4001b4fc:	e5810000 	str	r0, [r1]
4001b500:	e59f0114 	ldr	r0, [pc, #276]	; 4001b61c <CyU3PPmmcInit+0x168>
4001b504:	e5810048 	str	r0, [r1, #72]	; 0x48
4001b508:	e2400c92 	sub	r0, r0, #37376	; 0x9200
4001b50c:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001b510:	e3a00001 	mov	r0, #1
4001b514:	e5810050 	str	r0, [r1, #80]	; 0x50
4001b518:	e59f0100 	ldr	r0, [pc, #256]	; 4001b620 <CyU3PPmmcInit+0x16c>
4001b51c:	e5810054 	str	r0, [r1, #84]	; 0x54
4001b520:	e59f00fc 	ldr	r0, [pc, #252]	; 4001b624 <CyU3PPmmcInit+0x170>
4001b524:	e5900000 	ldr	r0, [r0]
4001b528:	e5810060 	str	r0, [r1, #96]	; 0x60
4001b52c:	e59f00f0 	ldr	r0, [pc, #240]	; 4001b624 <CyU3PPmmcInit+0x170>
4001b530:	e5900004 	ldr	r0, [r0, #4]
4001b534:	e5810064 	str	r0, [r1, #100]	; 0x64
4001b538:	e59f00e4 	ldr	r0, [pc, #228]	; 4001b624 <CyU3PPmmcInit+0x170>
4001b53c:	e5900008 	ldr	r0, [r0, #8]
4001b540:	e5810068 	str	r0, [r1, #104]	; 0x68
4001b544:	e59f00d8 	ldr	r0, [pc, #216]	; 4001b624 <CyU3PPmmcInit+0x170>
4001b548:	e590000c 	ldr	r0, [r0, #12]
4001b54c:	e581006c 	str	r0, [r1, #108]	; 0x6c
4001b550:	e59f00d0 	ldr	r0, [pc, #208]	; 4001b628 <CyU3PPmmcInit+0x174>
4001b554:	e5900000 	ldr	r0, [r0]
4001b558:	e5810078 	str	r0, [r1, #120]	; 0x78
4001b55c:	e59f00c4 	ldr	r0, [pc, #196]	; 4001b628 <CyU3PPmmcInit+0x174>
4001b560:	e5900004 	ldr	r0, [r0, #4]
4001b564:	e581007c 	str	r0, [r1, #124]	; 0x7c
4001b568:	e59f00b8 	ldr	r0, [pc, #184]	; 4001b628 <CyU3PPmmcInit+0x174>
4001b56c:	e5900008 	ldr	r0, [r0, #8]
4001b570:	e5810080 	str	r0, [r1, #128]	; 0x80
4001b574:	e59f00ac 	ldr	r0, [pc, #172]	; 4001b628 <CyU3PPmmcInit+0x174>
4001b578:	e590000c 	ldr	r0, [r0, #12]
4001b57c:	e5810084 	str	r0, [r1, #132]	; 0x84
4001b580:	e59f00a0 	ldr	r0, [pc, #160]	; 4001b628 <CyU3PPmmcInit+0x174>
4001b584:	e5900010 	ldr	r0, [r0, #16]
4001b588:	e5810088 	str	r0, [r1, #136]	; 0x88
4001b58c:	e59f0094 	ldr	r0, [pc, #148]	; 4001b628 <CyU3PPmmcInit+0x174>
4001b590:	e5900014 	ldr	r0, [r0, #20]
4001b594:	e581008c 	str	r0, [r1, #140]	; 0x8c
4001b598:	e59f008c 	ldr	r0, [pc, #140]	; 4001b62c <CyU3PPmmcInit+0x178>
4001b59c:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b5a0:	e3a00000 	mov	r0, #0
4001b5a4:	e5810074 	str	r0, [r1, #116]	; 0x74
4001b5a8:	e3a00c02 	mov	r0, #512	; 0x200
4001b5ac:	e5810038 	str	r0, [r1, #56]	; 0x38
4001b5b0:	e3a00000 	mov	r0, #0
4001b5b4:	e5810004 	str	r0, [r1, #4]
4001b5b8:	e59f0070 	ldr	r0, [pc, #112]	; 4001b630 <CyU3PPmmcInit+0x17c>
4001b5bc:	e5810010 	str	r0, [r1, #16]
4001b5c0:	e3a00008 	mov	r0, #8
4001b5c4:	e1c11480 	bic	r1, r1, r0, lsl #9
4001b5c8:	e5810008 	str	r0, [r1, #8]
4001b5cc:	ea000002 	b	4001b5dc <CyU3PPmmcInit+0x128>
4001b5d0:	e3a00000 	mov	r0, #0
4001b5d4:	e59f103c 	ldr	r1, [pc, #60]	; 4001b618 <CyU3PPmmcInit+0x164>
4001b5d8:	e5810010 	str	r0, [r1, #16]
4001b5dc:	e59f0034 	ldr	r0, [pc, #52]	; 4001b618 <CyU3PPmmcInit+0x164>
4001b5e0:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001b5e4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001b5e8:	e59f1028 	ldr	r1, [pc, #40]	; 4001b618 <CyU3PPmmcInit+0x164>
4001b5ec:	e5810070 	str	r0, [r1, #112]	; 0x70
4001b5f0:	ebffdddd 	bl	40012d6c <CyU3PSysBarrierSync>
4001b5f4:	e59f0038 	ldr	r0, [pc, #56]	; 4001b634 <CyU3PPmmcInit+0x180>
4001b5f8:	e5900000 	ldr	r0, [r0]
4001b5fc:	e3c004bf 	bic	r0, r0, #-1090519040	; 0xbf000000
4001b600:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001b604:	e3800326 	orr	r0, r0, #-1744830464	; 0x98000000
4001b608:	e59f1024 	ldr	r1, [pc, #36]	; 4001b634 <CyU3PPmmcInit+0x180>
4001b60c:	e5810000 	str	r0, [r1]
4001b610:	e3a00000 	mov	r0, #0
4001b614:	e8bd8010 	pop	{r4, pc}
4001b618:	e0011000 	.word	0xe0011000
4001b61c:	00019201 	.word	0x00019201
4001b620:	04010302 	.word	0x04010302
4001b624:	4001209c 	.word	0x4001209c
4001b628:	400120ac 	.word	0x400120ac
4001b62c:	00ff8080 	.word	0x00ff8080
4001b630:	400a00fb 	.word	0x400a00fb
4001b634:	e0010000 	.word	0xe0010000

Disassembly of section i.CyU3PMboxReset:

4001b638 <CyU3PMboxReset>:
4001b638:	e92d4010 	push	{r4, lr}
4001b63c:	e3a00002 	mov	r0, #2
4001b640:	e59f1028 	ldr	r1, [pc, #40]	; 4001b670 <CyU3PMboxReset+0x38>
4001b644:	e5810004 	str	r0, [r1, #4]
4001b648:	e3a02002 	mov	r2, #2
4001b64c:	e3a01010 	mov	r1, #16
4001b650:	e59f001c 	ldr	r0, [pc, #28]	; 4001b674 <CyU3PMboxReset+0x3c>
4001b654:	ebffba7f 	bl	4000a058 <_txe_event_flags_set>
4001b658:	e59f0010 	ldr	r0, [pc, #16]	; 4001b670 <CyU3PMboxReset+0x38>
4001b65c:	e5900008 	ldr	r0, [r0, #8]
4001b660:	e3800003 	orr	r0, r0, #3
4001b664:	e59f1004 	ldr	r1, [pc, #4]	; 4001b670 <CyU3PMboxReset+0x38>
4001b668:	e5810008 	str	r0, [r1, #8]
4001b66c:	e8bd8010 	pop	{r4, pc}
4001b670:	e0010000 	.word	0xe0010000
4001b674:	40031974 	.word	0x40031974

Disassembly of section i.CyU3PGpifConfigure:

4001b678 <CyU3PGpifConfigure>:
4001b678:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b67c:	e1a04000 	mov	r4, r0
4001b680:	e1a05001 	mov	r5, r1
4001b684:	e59f609c 	ldr	r6, [pc, #156]	; 4001b728 <CyU3PGpifConfigure+0xb0>
4001b688:	e3540000 	cmp	r4, #0
4001b68c:	0a000001 	beq	4001b698 <CyU3PGpifConfigure+0x20>
4001b690:	e3550000 	cmp	r5, #0
4001b694:	1a000001 	bne	4001b6a0 <CyU3PGpifConfigure+0x28>
4001b698:	e3a00040 	mov	r0, #64	; 0x40
4001b69c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b6a0:	ebffe585 	bl	40014cbc <CyFx3DevIsGpifConfigurable>
4001b6a4:	e3500000 	cmp	r0, #0
4001b6a8:	1a000001 	bne	4001b6b4 <CyU3PGpifConfigure+0x3c>
4001b6ac:	e3a00046 	mov	r0, #70	; 0x46
4001b6b0:	eafffff9 	b	4001b69c <CyU3PGpifConfigure+0x24>
4001b6b4:	ebffe576 	bl	40014c94 <CyFx3DevIsGpif32Supported>
4001b6b8:	e3500000 	cmp	r0, #0
4001b6bc:	1a000007 	bne	4001b6e0 <CyU3PGpifConfigure+0x68>
4001b6c0:	e3540001 	cmp	r4, #1
4001b6c4:	da000005 	ble	4001b6e0 <CyU3PGpifConfigure+0x68>
4001b6c8:	e5950004 	ldr	r0, [r5, #4]
4001b6cc:	e200000c 	and	r0, r0, #12
4001b6d0:	e3500004 	cmp	r0, #4
4001b6d4:	9a000001 	bls	4001b6e0 <CyU3PGpifConfigure+0x68>
4001b6d8:	e3a00046 	mov	r0, #70	; 0x46
4001b6dc:	eaffffee 	b	4001b69c <CyU3PGpifConfigure+0x24>
4001b6e0:	e59f0044 	ldr	r0, [pc, #68]	; 4001b72c <CyU3PGpifConfigure+0xb4>
4001b6e4:	e5900000 	ldr	r0, [r0]
4001b6e8:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b6ec:	0a000001 	beq	4001b6f8 <CyU3PGpifConfigure+0x80>
4001b6f0:	e3a00043 	mov	r0, #67	; 0x43
4001b6f4:	eaffffe8 	b	4001b69c <CyU3PGpifConfigure+0x24>
4001b6f8:	e3a07001 	mov	r7, #1
4001b6fc:	ea000002 	b	4001b70c <CyU3PGpifConfigure+0x94>
4001b700:	e7950107 	ldr	r0, [r5, r7, lsl #2]
4001b704:	e4860004 	str	r0, [r6], #4
4001b708:	e2877001 	add	r7, r7, #1
4001b70c:	e1570004 	cmp	r7, r4
4001b710:	bafffffa 	blt	4001b700 <CyU3PGpifConfigure+0x88>
4001b714:	e5950000 	ldr	r0, [r5]
4001b718:	e59f100c 	ldr	r1, [pc, #12]	; 4001b72c <CyU3PGpifConfigure+0xb4>
4001b71c:	e5810000 	str	r0, [r1]
4001b720:	e3a00000 	mov	r0, #0
4001b724:	eaffffdc 	b	4001b69c <CyU3PGpifConfigure+0x24>
4001b728:	e0014004 	.word	0xe0014004
4001b72c:	e0014000 	.word	0xe0014000

Disassembly of section i.CyU3PGpifDisable:

4001b730 <CyU3PGpifDisable>:
4001b730:	e92d4070 	push	{r4, r5, r6, lr}
4001b734:	e1a04000 	mov	r4, r0
4001b738:	e59f0070 	ldr	r0, [pc, #112]	; 4001b7b0 <CyU3PGpifDisable+0x80>
4001b73c:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b740:	e3800002 	orr	r0, r0, #2
4001b744:	e59f1064 	ldr	r1, [pc, #100]	; 4001b7b0 <CyU3PGpifDisable+0x80>
4001b748:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b74c:	e3a0000a 	mov	r0, #10
4001b750:	ebffe057 	bl	400138b4 <CyU3PBusyWait>
4001b754:	e3a00000 	mov	r0, #0
4001b758:	e59f1050 	ldr	r1, [pc, #80]	; 4001b7b0 <CyU3PGpifDisable+0x80>
4001b75c:	e5810118 	str	r0, [r1, #280]	; 0x118
4001b760:	e3540000 	cmp	r4, #0
4001b764:	0a000010 	beq	4001b7ac <CyU3PGpifDisable+0x7c>
4001b768:	e3a00e22 	mov	r0, #544	; 0x220
4001b76c:	e5810000 	str	r0, [r1]
4001b770:	e3a05000 	mov	r5, #0
4001b774:	ea000007 	b	4001b798 <CyU3PGpifDisable+0x68>
4001b778:	e3a00000 	mov	r0, #0
4001b77c:	e59f1030 	ldr	r1, [pc, #48]	; 4001b7b4 <CyU3PGpifDisable+0x84>
4001b780:	e0811205 	add	r1, r1, r5, lsl #4
4001b784:	e5810008 	str	r0, [r1, #8]
4001b788:	e59f1028 	ldr	r1, [pc, #40]	; 4001b7b8 <CyU3PGpifDisable+0x88>
4001b78c:	e0811205 	add	r1, r1, r5, lsl #4
4001b790:	e5810008 	str	r0, [r1, #8]
4001b794:	e2855001 	add	r5, r5, #1
4001b798:	e3550c01 	cmp	r5, #256	; 0x100
4001b79c:	3afffff5 	bcc	4001b778 <CyU3PGpifDisable+0x48>
4001b7a0:	e59f1014 	ldr	r1, [pc, #20]	; 4001b7bc <CyU3PGpifDisable+0x8c>
4001b7a4:	e3a0004c 	mov	r0, #76	; 0x4c
4001b7a8:	ebffffb2 	bl	4001b678 <CyU3PGpifConfigure>
4001b7ac:	e8bd8070 	pop	{r4, r5, r6, pc}
4001b7b0:	e0014000 	.word	0xe0014000
4001b7b4:	e0015000 	.word	0xe0015000
4001b7b8:	e0016000 	.word	0xe0016000
4001b7bc:	400120c4 	.word	0x400120c4

Disassembly of section i.CyU3PGpifLoad:

4001b7c0 <CyU3PGpifLoad>:
4001b7c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001b7c4:	e1a04000 	mov	r4, r0
4001b7c8:	e59f7264 	ldr	r7, [pc, #612]	; 4001ba34 <CyU3PGpifLoad+0x274>
4001b7cc:	e3540000 	cmp	r4, #0
4001b7d0:	0a000008 	beq	4001b7f8 <CyU3PGpifLoad+0x38>
4001b7d4:	e1d400b0 	ldrh	r0, [r4]
4001b7d8:	e3500000 	cmp	r0, #0
4001b7dc:	1a000007 	bne	4001b800 <CyU3PGpifLoad+0x40>
4001b7e0:	e1d400bc 	ldrh	r0, [r4, #12]
4001b7e4:	e3500000 	cmp	r0, #0
4001b7e8:	1a000004 	bne	4001b800 <CyU3PGpifLoad+0x40>
4001b7ec:	e1d401b4 	ldrh	r0, [r4, #20]
4001b7f0:	e3500000 	cmp	r0, #0
4001b7f4:	1a000001 	bne	4001b800 <CyU3PGpifLoad+0x40>
4001b7f8:	e3a00040 	mov	r0, #64	; 0x40
4001b7fc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001b800:	e59f0230 	ldr	r0, [pc, #560]	; 4001ba38 <CyU3PGpifLoad+0x278>
4001b804:	e5900000 	ldr	r0, [r0]
4001b808:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001b80c:	1a000003 	bne	4001b820 <CyU3PGpifLoad+0x60>
4001b810:	e59f0220 	ldr	r0, [pc, #544]	; 4001ba38 <CyU3PGpifLoad+0x278>
4001b814:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001b818:	e3100001 	tst	r0, #1
4001b81c:	0a000001 	beq	4001b828 <CyU3PGpifLoad+0x68>
4001b820:	e3a00043 	mov	r0, #67	; 0x43
4001b824:	eafffff4 	b	4001b7fc <CyU3PGpifLoad+0x3c>
4001b828:	ebffe523 	bl	40014cbc <CyFx3DevIsGpifConfigurable>
4001b82c:	e3500000 	cmp	r0, #0
4001b830:	1a000001 	bne	4001b83c <CyU3PGpifLoad+0x7c>
4001b834:	e3a00046 	mov	r0, #70	; 0x46
4001b838:	eaffffef 	b	4001b7fc <CyU3PGpifLoad+0x3c>
4001b83c:	ebffe514 	bl	40014c94 <CyFx3DevIsGpif32Supported>
4001b840:	e3500000 	cmp	r0, #0
4001b844:	1a00000c 	bne	4001b87c <CyU3PGpifLoad+0xbc>
4001b848:	e1d401b4 	ldrh	r0, [r4, #20]
4001b84c:	e3500002 	cmp	r0, #2
4001b850:	ba000009 	blt	4001b87c <CyU3PGpifLoad+0xbc>
4001b854:	e5940018 	ldr	r0, [r4, #24]
4001b858:	e3500000 	cmp	r0, #0
4001b85c:	0a000006 	beq	4001b87c <CyU3PGpifLoad+0xbc>
4001b860:	e5940018 	ldr	r0, [r4, #24]
4001b864:	e5900004 	ldr	r0, [r0, #4]
4001b868:	e200000c 	and	r0, r0, #12
4001b86c:	e3500004 	cmp	r0, #4
4001b870:	9a000001 	bls	4001b87c <CyU3PGpifLoad+0xbc>
4001b874:	e3a00046 	mov	r0, #70	; 0x46
4001b878:	eaffffdf 	b	4001b7fc <CyU3PGpifLoad+0x3c>
4001b87c:	e1d400b0 	ldrh	r0, [r4]
4001b880:	e3500000 	cmp	r0, #0
4001b884:	0a00003b 	beq	4001b978 <CyU3PGpifLoad+0x1b8>
4001b888:	e5940004 	ldr	r0, [r4, #4]
4001b88c:	e3500000 	cmp	r0, #0
4001b890:	1a000001 	bne	4001b89c <CyU3PGpifLoad+0xdc>
4001b894:	e3a00040 	mov	r0, #64	; 0x40
4001b898:	eaffffd7 	b	4001b7fc <CyU3PGpifLoad+0x3c>
4001b89c:	e3a05000 	mov	r5, #0
4001b8a0:	ea000031 	b	4001b96c <CyU3PGpifLoad+0x1ac>
4001b8a4:	e5940008 	ldr	r0, [r4, #8]
4001b8a8:	e3500000 	cmp	r0, #0
4001b8ac:	0a000002 	beq	4001b8bc <CyU3PGpifLoad+0xfc>
4001b8b0:	e5940008 	ldr	r0, [r4, #8]
4001b8b4:	e7d00005 	ldrb	r0, [r0, r5]
4001b8b8:	ea000000 	b	4001b8c0 <CyU3PGpifLoad+0x100>
4001b8bc:	e1a00005 	mov	r0, r5
4001b8c0:	e1a06800 	lsl	r6, r0, #16
4001b8c4:	e1a06826 	lsr	r6, r6, #16
4001b8c8:	e0861086 	add	r1, r6, r6, lsl #1
4001b8cc:	e5940004 	ldr	r0, [r4, #4]
4001b8d0:	e7900181 	ldr	r0, [r0, r1, lsl #3]
4001b8d4:	e59f1160 	ldr	r1, [pc, #352]	; 4001ba3c <CyU3PGpifLoad+0x27c>
4001b8d8:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b8dc:	e0861086 	add	r1, r6, r6, lsl #1
4001b8e0:	e5940004 	ldr	r0, [r4, #4]
4001b8e4:	e0800181 	add	r0, r0, r1, lsl #3
4001b8e8:	e5900004 	ldr	r0, [r0, #4]
4001b8ec:	e59f1148 	ldr	r1, [pc, #328]	; 4001ba3c <CyU3PGpifLoad+0x27c>
4001b8f0:	e0811205 	add	r1, r1, r5, lsl #4
4001b8f4:	e5810004 	str	r0, [r1, #4]
4001b8f8:	e0861086 	add	r1, r6, r6, lsl #1
4001b8fc:	e5940004 	ldr	r0, [r4, #4]
4001b900:	e0800181 	add	r0, r0, r1, lsl #3
4001b904:	e5900008 	ldr	r0, [r0, #8]
4001b908:	e59f112c 	ldr	r1, [pc, #300]	; 4001ba3c <CyU3PGpifLoad+0x27c>
4001b90c:	e0811205 	add	r1, r1, r5, lsl #4
4001b910:	e5810008 	str	r0, [r1, #8]
4001b914:	e0861086 	add	r1, r6, r6, lsl #1
4001b918:	e5940004 	ldr	r0, [r4, #4]
4001b91c:	e0800181 	add	r0, r0, r1, lsl #3
4001b920:	e590000c 	ldr	r0, [r0, #12]
4001b924:	e59f1114 	ldr	r1, [pc, #276]	; 4001ba40 <CyU3PGpifLoad+0x280>
4001b928:	e7810205 	str	r0, [r1, r5, lsl #4]
4001b92c:	e0861086 	add	r1, r6, r6, lsl #1
4001b930:	e5940004 	ldr	r0, [r4, #4]
4001b934:	e0800181 	add	r0, r0, r1, lsl #3
4001b938:	e5900010 	ldr	r0, [r0, #16]
4001b93c:	e59f10fc 	ldr	r1, [pc, #252]	; 4001ba40 <CyU3PGpifLoad+0x280>
4001b940:	e0811205 	add	r1, r1, r5, lsl #4
4001b944:	e5810004 	str	r0, [r1, #4]
4001b948:	e0861086 	add	r1, r6, r6, lsl #1
4001b94c:	e5940004 	ldr	r0, [r4, #4]
4001b950:	e0800181 	add	r0, r0, r1, lsl #3
4001b954:	e5900014 	ldr	r0, [r0, #20]
4001b958:	e59f10e0 	ldr	r1, [pc, #224]	; 4001ba40 <CyU3PGpifLoad+0x280>
4001b95c:	e0811205 	add	r1, r1, r5, lsl #4
4001b960:	e5810008 	str	r0, [r1, #8]
4001b964:	e2850001 	add	r0, r5, #1
4001b968:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b96c:	e1d400b0 	ldrh	r0, [r4]
4001b970:	e1500005 	cmp	r0, r5
4001b974:	caffffca 	bgt	4001b8a4 <CyU3PGpifLoad+0xe4>
4001b978:	e1d400bc 	ldrh	r0, [r4, #12]
4001b97c:	e3500000 	cmp	r0, #0
4001b980:	0a000013 	beq	4001b9d4 <CyU3PGpifLoad+0x214>
4001b984:	e5940010 	ldr	r0, [r4, #16]
4001b988:	e3500000 	cmp	r0, #0
4001b98c:	0a000002 	beq	4001b99c <CyU3PGpifLoad+0x1dc>
4001b990:	e1d400bc 	ldrh	r0, [r4, #12]
4001b994:	e3500020 	cmp	r0, #32
4001b998:	da000001 	ble	4001b9a4 <CyU3PGpifLoad+0x1e4>
4001b99c:	e3a00040 	mov	r0, #64	; 0x40
4001b9a0:	eaffff95 	b	4001b7fc <CyU3PGpifLoad+0x3c>
4001b9a4:	e3a05000 	mov	r5, #0
4001b9a8:	ea000006 	b	4001b9c8 <CyU3PGpifLoad+0x208>
4001b9ac:	e5940010 	ldr	r0, [r4, #16]
4001b9b0:	e0800085 	add	r0, r0, r5, lsl #1
4001b9b4:	e1d000b0 	ldrh	r0, [r0]
4001b9b8:	e59f1084 	ldr	r1, [pc, #132]	; 4001ba44 <CyU3PGpifLoad+0x284>
4001b9bc:	e7810105 	str	r0, [r1, r5, lsl #2]
4001b9c0:	e2850001 	add	r0, r5, #1
4001b9c4:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001b9c8:	e1d400bc 	ldrh	r0, [r4, #12]
4001b9cc:	e1500005 	cmp	r0, r5
4001b9d0:	cafffff5 	bgt	4001b9ac <CyU3PGpifLoad+0x1ec>
4001b9d4:	e1d401b4 	ldrh	r0, [r4, #20]
4001b9d8:	e3500000 	cmp	r0, #0
4001b9dc:	0a000012 	beq	4001ba2c <CyU3PGpifLoad+0x26c>
4001b9e0:	e5940018 	ldr	r0, [r4, #24]
4001b9e4:	e3500000 	cmp	r0, #0
4001b9e8:	1a000001 	bne	4001b9f4 <CyU3PGpifLoad+0x234>
4001b9ec:	e3a00040 	mov	r0, #64	; 0x40
4001b9f0:	eaffff81 	b	4001b7fc <CyU3PGpifLoad+0x3c>
4001b9f4:	e3a05001 	mov	r5, #1
4001b9f8:	ea000004 	b	4001ba10 <CyU3PGpifLoad+0x250>
4001b9fc:	e5940018 	ldr	r0, [r4, #24]
4001ba00:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ba04:	e4870004 	str	r0, [r7], #4
4001ba08:	e2850001 	add	r0, r5, #1
4001ba0c:	e3c05801 	bic	r5, r0, #65536	; 0x10000
4001ba10:	e1d401b4 	ldrh	r0, [r4, #20]
4001ba14:	e1500005 	cmp	r0, r5
4001ba18:	cafffff7 	bgt	4001b9fc <CyU3PGpifLoad+0x23c>
4001ba1c:	e5940018 	ldr	r0, [r4, #24]
4001ba20:	e5900000 	ldr	r0, [r0]
4001ba24:	e59f100c 	ldr	r1, [pc, #12]	; 4001ba38 <CyU3PGpifLoad+0x278>
4001ba28:	e5810000 	str	r0, [r1]
4001ba2c:	e3a00000 	mov	r0, #0
4001ba30:	eaffff71 	b	4001b7fc <CyU3PGpifLoad+0x3c>
4001ba34:	e0014004 	.word	0xe0014004
4001ba38:	e0014000 	.word	0xe0014000
4001ba3c:	e0015000 	.word	0xe0015000
4001ba40:	e0016000 	.word	0xe0016000
4001ba44:	e0014130 	.word	0xe0014130

Disassembly of section i.CyU3PGpifRegisterCallback:

4001ba48 <CyU3PGpifRegisterCallback>:
4001ba48:	e59f1004 	ldr	r1, [pc, #4]	; 4001ba54 <CyU3PGpifRegisterCallback+0xc>
4001ba4c:	e5810000 	str	r0, [r1]
4001ba50:	e12fff1e 	bx	lr
4001ba54:	40030d30 	.word	0x40030d30

Disassembly of section i.CyU3PGpifSMStart:

4001ba58 <CyU3PGpifSMStart>:
4001ba58:	e92d4010 	push	{r4, lr}
4001ba5c:	e1a02000 	mov	r2, r0
4001ba60:	e59f012c 	ldr	r0, [pc, #300]	; 4001bb94 <CyU3PGpifSMStart+0x13c>
4001ba64:	e5900000 	ldr	r0, [r0]
4001ba68:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001ba6c:	0a000004 	beq	4001ba84 <CyU3PGpifSMStart+0x2c>
4001ba70:	e59f0120 	ldr	r0, [pc, #288]	; 4001bb98 <CyU3PGpifSMStart+0x140>
4001ba74:	e0800202 	add	r0, r0, r2, lsl #4
4001ba78:	e5900008 	ldr	r0, [r0, #8]
4001ba7c:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001ba80:	1a000001 	bne	4001ba8c <CyU3PGpifSMStart+0x34>
4001ba84:	e3a00044 	mov	r0, #68	; 0x44
4001ba88:	e8bd8010 	pop	{r4, pc}
4001ba8c:	e59f0100 	ldr	r0, [pc, #256]	; 4001bb94 <CyU3PGpifSMStart+0x13c>
4001ba90:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001ba94:	e3100001 	tst	r0, #1
4001ba98:	0a000001 	beq	4001baa4 <CyU3PGpifSMStart+0x4c>
4001ba9c:	e3a00043 	mov	r0, #67	; 0x43
4001baa0:	eafffff8 	b	4001ba88 <CyU3PGpifSMStart+0x30>
4001baa4:	e59f00e8 	ldr	r0, [pc, #232]	; 4001bb94 <CyU3PGpifSMStart+0x13c>
4001baa8:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001baac:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001bab0:	e1800801 	orr	r0, r0, r1, lsl #16
4001bab4:	e3800001 	orr	r0, r0, #1
4001bab8:	e59f40d4 	ldr	r4, [pc, #212]	; 4001bb94 <CyU3PGpifSMStart+0x13c>
4001babc:	e5840118 	str	r0, [r4, #280]	; 0x118
4001bac0:	e1a00004 	mov	r0, r4
4001bac4:	e590e11c 	ldr	lr, [r0, #284]	; 0x11c
4001bac8:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bb9c <CyU3PGpifSMStart+0x144>
4001bacc:	e000000e 	and	r0, r0, lr
4001bad0:	e180e802 	orr	lr, r0, r2, lsl #16
4001bad4:	e1a00004 	mov	r0, r4
4001bad8:	e580e11c 	str	lr, [r0, #284]	; 0x11c
4001badc:	e590011c 	ldr	r0, [r0, #284]	; 0x11c
4001bae0:	e3800005 	orr	r0, r0, #5
4001bae4:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bae8:	e1a00004 	mov	r0, r4
4001baec:	e590c118 	ldr	ip, [r0, #280]	; 0x118
4001baf0:	e5900008 	ldr	r0, [r0, #8]
4001baf4:	e2003007 	and	r3, r0, #7
4001baf8:	e3530001 	cmp	r3, #1
4001bafc:	0a000004 	beq	4001bb14 <CyU3PGpifSMStart+0xbc>
4001bb00:	e3530002 	cmp	r3, #2
4001bb04:	0a00000b 	beq	4001bb38 <CyU3PGpifSMStart+0xe0>
4001bb08:	e3530003 	cmp	r3, #3
4001bb0c:	1a00001b 	bne	4001bb80 <CyU3PGpifSMStart+0x128>
4001bb10:	ea000011 	b	4001bb5c <CyU3PGpifSMStart+0x104>
4001bb14:	e1a00000 	nop			; (mov r0, r0)
4001bb18:	e59f0080 	ldr	r0, [pc, #128]	; 4001bba0 <CyU3PGpifSMStart+0x148>
4001bb1c:	e1ce0000 	bic	r0, lr, r0
4001bb20:	e3800005 	orr	r0, r0, #5
4001bb24:	e20c4102 	and	r4, ip, #-2147483648	; 0x80000000
4001bb28:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb2c:	e59f4060 	ldr	r4, [pc, #96]	; 4001bb94 <CyU3PGpifSMStart+0x13c>
4001bb30:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb34:	ea000013 	b	4001bb88 <CyU3PGpifSMStart+0x130>
4001bb38:	e1a00000 	nop			; (mov r0, r0)
4001bb3c:	e59f0060 	ldr	r0, [pc, #96]	; 4001bba4 <CyU3PGpifSMStart+0x14c>
4001bb40:	e1ce0000 	bic	r0, lr, r0
4001bb44:	e3800005 	orr	r0, r0, #5
4001bb48:	e20c4103 	and	r4, ip, #-1073741824	; 0xc0000000
4001bb4c:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb50:	e59f403c 	ldr	r4, [pc, #60]	; 4001bb94 <CyU3PGpifSMStart+0x13c>
4001bb54:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb58:	ea00000a 	b	4001bb88 <CyU3PGpifSMStart+0x130>
4001bb5c:	e1a00000 	nop			; (mov r0, r0)
4001bb60:	e59f0040 	ldr	r0, [pc, #64]	; 4001bba8 <CyU3PGpifSMStart+0x150>
4001bb64:	e1ce0000 	bic	r0, lr, r0
4001bb68:	e3800005 	orr	r0, r0, #5
4001bb6c:	e20c420e 	and	r4, ip, #-536870912	; 0xe0000000
4001bb70:	e1800424 	orr	r0, r0, r4, lsr #8
4001bb74:	e59f4018 	ldr	r4, [pc, #24]	; 4001bb94 <CyU3PGpifSMStart+0x13c>
4001bb78:	e584011c 	str	r0, [r4, #284]	; 0x11c
4001bb7c:	ea000001 	b	4001bb88 <CyU3PGpifSMStart+0x130>
4001bb80:	e1a00000 	nop			; (mov r0, r0)
4001bb84:	e1a00000 	nop			; (mov r0, r0)
4001bb88:	e1a00000 	nop			; (mov r0, r0)
4001bb8c:	e3a00000 	mov	r0, #0
4001bb90:	eaffffbc 	b	4001ba88 <CyU3PGpifSMStart+0x30>
4001bb94:	e0014000 	.word	0xe0014000
4001bb98:	e0015000 	.word	0xe0015000
4001bb9c:	ff00003a 	.word	0xff00003a
4001bba0:	0080ffc5 	.word	0x0080ffc5
4001bba4:	00c0ffc5 	.word	0x00c0ffc5
4001bba8:	00e0ffc5 	.word	0x00e0ffc5

Disassembly of section i.CyU3PGpifSMSwitch:

4001bbac <CyU3PGpifSMSwitch>:
4001bbac:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001bbb0:	e1a0c000 	mov	ip, r0
4001bbb4:	e59de018 	ldr	lr, [sp, #24]
4001bbb8:	e3a04000 	mov	r4, #0
4001bbbc:	e3510c01 	cmp	r1, #256	; 0x100
4001bbc0:	ba000001 	blt	4001bbcc <CyU3PGpifSMSwitch+0x20>
4001bbc4:	e3a00040 	mov	r0, #64	; 0x40
4001bbc8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001bbcc:	e59f0150 	ldr	r0, [pc, #336]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bbd0:	e5900000 	ldr	r0, [r0]
4001bbd4:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001bbd8:	1a000001 	bne	4001bbe4 <CyU3PGpifSMSwitch+0x38>
4001bbdc:	e3a00044 	mov	r0, #68	; 0x44
4001bbe0:	eafffff8 	b	4001bbc8 <CyU3PGpifSMSwitch+0x1c>
4001bbe4:	e59f0138 	ldr	r0, [pc, #312]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bbe8:	e5900008 	ldr	r0, [r0, #8]
4001bbec:	e2006007 	and	r6, r0, #7
4001bbf0:	e59f012c 	ldr	r0, [pc, #300]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bbf4:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bbf8:	e3c008ff 	bic	r0, r0, #16711680	; 0xff0000
4001bbfc:	e1800803 	orr	r0, r0, r3, lsl #16
4001bc00:	e3800001 	orr	r0, r0, #1
4001bc04:	e59f8118 	ldr	r8, [pc, #280]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bc08:	e5880118 	str	r0, [r8, #280]	; 0x118
4001bc0c:	e3a00001 	mov	r0, #1
4001bc10:	e1804801 	orr	r4, r0, r1, lsl #16
4001bc14:	e35c0c01 	cmp	ip, #256	; 0x100
4001bc18:	aa000012 	bge	4001bc68 <CyU3PGpifSMSwitch+0xbc>
4001bc1c:	e1c80000 	bic	r0, r8, r0
4001bc20:	e5900118 	ldr	r0, [r0, #280]	; 0x118
4001bc24:	e1a05c20 	lsr	r5, r0, #24
4001bc28:	e59f00f8 	ldr	r0, [pc, #248]	; 4001bd28 <CyU3PGpifSMSwitch+0x17c>
4001bc2c:	e7d00006 	ldrb	r0, [r0, r6]
4001bc30:	e0000005 	and	r0, r0, r5
4001bc34:	e59f80ec 	ldr	r8, [pc, #236]	; 4001bd28 <CyU3PGpifSMSwitch+0x17c>
4001bc38:	e7d88006 	ldrb	r8, [r8, r6]
4001bc3c:	e008800c 	and	r8, r8, ip
4001bc40:	e1500008 	cmp	r0, r8
4001bc44:	1a000001 	bne	4001bc50 <CyU3PGpifSMSwitch+0xa4>
4001bc48:	e3844004 	orr	r4, r4, #4
4001bc4c:	ea000006 	b	4001bc6c <CyU3PGpifSMSwitch+0xc0>
4001bc50:	e3a00008 	mov	r0, #8
4001bc54:	e180040c 	orr	r0, r0, ip, lsl #8
4001bc58:	e1844000 	orr	r4, r4, r0
4001bc5c:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bc60:	e580e120 	str	lr, [r0, #288]	; 0x120
4001bc64:	ea000000 	b	4001bc6c <CyU3PGpifSMSwitch+0xc0>
4001bc68:	e3844004 	orr	r4, r4, #4
4001bc6c:	e3520c01 	cmp	r2, #256	; 0x100
4001bc70:	aa000007 	bge	4001bc94 <CyU3PGpifSMSwitch+0xe8>
4001bc74:	e3a00002 	mov	r0, #2
4001bc78:	e1800c02 	orr	r0, r0, r2, lsl #24
4001bc7c:	e1844000 	orr	r4, r4, r0
4001bc80:	e59f009c 	ldr	r0, [pc, #156]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bc84:	e5900018 	ldr	r0, [r0, #24]
4001bc88:	e3800001 	orr	r0, r0, #1
4001bc8c:	e59f8090 	ldr	r8, [pc, #144]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bc90:	e5880018 	str	r0, [r8, #24]
4001bc94:	e59f0088 	ldr	r0, [pc, #136]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bc98:	e580411c 	str	r4, [r0, #284]	; 0x11c
4001bc9c:	e5907118 	ldr	r7, [r0, #280]	; 0x118
4001bca0:	e3560001 	cmp	r6, #1
4001bca4:	0a000004 	beq	4001bcbc <CyU3PGpifSMSwitch+0x110>
4001bca8:	e3560002 	cmp	r6, #2
4001bcac:	0a000009 	beq	4001bcd8 <CyU3PGpifSMSwitch+0x12c>
4001bcb0:	e3560003 	cmp	r6, #3
4001bcb4:	1a000015 	bne	4001bd10 <CyU3PGpifSMSwitch+0x164>
4001bcb8:	ea00000d 	b	4001bcf4 <CyU3PGpifSMSwitch+0x148>
4001bcbc:	e1a00000 	nop			; (mov r0, r0)
4001bcc0:	e3c40502 	bic	r0, r4, #8388608	; 0x800000
4001bcc4:	e2078102 	and	r8, r7, #-2147483648	; 0x80000000
4001bcc8:	e1800428 	orr	r0, r0, r8, lsr #8
4001bccc:	e59f8050 	ldr	r8, [pc, #80]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bcd0:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bcd4:	ea00000f 	b	4001bd18 <CyU3PGpifSMSwitch+0x16c>
4001bcd8:	e1a00000 	nop			; (mov r0, r0)
4001bcdc:	e3c40503 	bic	r0, r4, #12582912	; 0xc00000
4001bce0:	e2078103 	and	r8, r7, #-1073741824	; 0xc0000000
4001bce4:	e1800428 	orr	r0, r0, r8, lsr #8
4001bce8:	e59f8034 	ldr	r8, [pc, #52]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bcec:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bcf0:	ea000008 	b	4001bd18 <CyU3PGpifSMSwitch+0x16c>
4001bcf4:	e1a00000 	nop			; (mov r0, r0)
4001bcf8:	e3c4060e 	bic	r0, r4, #14680064	; 0xe00000
4001bcfc:	e207820e 	and	r8, r7, #-536870912	; 0xe0000000
4001bd00:	e1800428 	orr	r0, r0, r8, lsr #8
4001bd04:	e59f8018 	ldr	r8, [pc, #24]	; 4001bd24 <CyU3PGpifSMSwitch+0x178>
4001bd08:	e588011c 	str	r0, [r8, #284]	; 0x11c
4001bd0c:	ea000001 	b	4001bd18 <CyU3PGpifSMSwitch+0x16c>
4001bd10:	e1a00000 	nop			; (mov r0, r0)
4001bd14:	e1a00000 	nop			; (mov r0, r0)
4001bd18:	e1a00000 	nop			; (mov r0, r0)
4001bd1c:	e3a00000 	mov	r0, #0
4001bd20:	eaffffa8 	b	4001bbc8 <CyU3PGpifSMSwitch+0x1c>
4001bd24:	e0014000 	.word	0xe0014000
4001bd28:	400121f4 	.word	0x400121f4

Disassembly of section i.CyU3PConnectState:

4001bd2c <CyU3PConnectState>:
4001bd2c:	e92d4070 	push	{r4, r5, r6, lr}
4001bd30:	e1a04000 	mov	r4, r0
4001bd34:	e1a06001 	mov	r6, r1
4001bd38:	e59f0234 	ldr	r0, [pc, #564]	; 4001bf74 <CyU3PConnectState+0x248>
4001bd3c:	e5d00008 	ldrb	r0, [r0, #8]
4001bd40:	e3500000 	cmp	r0, #0
4001bd44:	1a000001 	bne	4001bd50 <CyU3PConnectState+0x24>
4001bd48:	e3a00042 	mov	r0, #66	; 0x42
4001bd4c:	e8bd8070 	pop	{r4, r5, r6, pc}
4001bd50:	ebffe41a 	bl	40014dc0 <CyFx3DevIsUsb3Supported>
4001bd54:	e3500000 	cmp	r0, #0
4001bd58:	1a000000 	bne	4001bd60 <CyU3PConnectState+0x34>
4001bd5c:	e3a06000 	mov	r6, #0
4001bd60:	e3a05000 	mov	r5, #0
4001bd64:	e3e01000 	mvn	r1, #0
4001bd68:	e59f0208 	ldr	r0, [pc, #520]	; 4001bf78 <CyU3PConnectState+0x24c>
4001bd6c:	ebffb951 	bl	4000a2b8 <_txe_mutex_get>
4001bd70:	e3540000 	cmp	r4, #0
4001bd74:	1a00001a 	bne	4001bde4 <CyU3PConnectState+0xb8>
4001bd78:	e59f01f4 	ldr	r0, [pc, #500]	; 4001bf74 <CyU3PConnectState+0x248>
4001bd7c:	e5d00008 	ldrb	r0, [r0, #8]
4001bd80:	e3500004 	cmp	r0, #4
4001bd84:	ba000012 	blt	4001bdd4 <CyU3PConnectState+0xa8>
4001bd88:	e59f01e4 	ldr	r0, [pc, #484]	; 4001bf74 <CyU3PConnectState+0x248>
4001bd8c:	e5d00008 	ldrb	r0, [r0, #8]
4001bd90:	e3500005 	cmp	r0, #5
4001bd94:	ba000008 	blt	4001bdbc <CyU3PConnectState+0x90>
4001bd98:	e59f11d4 	ldr	r1, [pc, #468]	; 4001bf74 <CyU3PConnectState+0x248>
4001bd9c:	e5d11009 	ldrb	r1, [r1, #9]
4001bda0:	e3510003 	cmp	r1, #3
4001bda4:	1a000001 	bne	4001bdb0 <CyU3PConnectState+0x84>
4001bda8:	e3a01001 	mov	r1, #1
4001bdac:	ea000000 	b	4001bdb4 <CyU3PConnectState+0x88>
4001bdb0:	e3a01000 	mov	r1, #0
4001bdb4:	e1a00001 	mov	r0, r1
4001bdb8:	eb00050f 	bl	4001d1fc <CyU3PUsbPhyDisable>
4001bdbc:	e3a00003 	mov	r0, #3
4001bdc0:	e59f11ac 	ldr	r1, [pc, #428]	; 4001bf74 <CyU3PConnectState+0x248>
4001bdc4:	e5c10008 	strb	r0, [r1, #8]
4001bdc8:	e3a00000 	mov	r0, #0
4001bdcc:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001bdd0:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bdd4:	e3a00000 	mov	r0, #0
4001bdd8:	e59f1194 	ldr	r1, [pc, #404]	; 4001bf74 <CyU3PConnectState+0x248>
4001bddc:	e5810044 	str	r0, [r1, #68]	; 0x44
4001bde0:	ea00005f 	b	4001bf64 <CyU3PConnectState+0x238>
4001bde4:	e59f0188 	ldr	r0, [pc, #392]	; 4001bf74 <CyU3PConnectState+0x248>
4001bde8:	e5d00008 	ldrb	r0, [r0, #8]
4001bdec:	e3500003 	cmp	r0, #3
4001bdf0:	0a00000b 	beq	4001be24 <CyU3PConnectState+0xf8>
4001bdf4:	e3500004 	cmp	r0, #4
4001bdf8:	0a000004 	beq	4001be10 <CyU3PConnectState+0xe4>
4001bdfc:	e3500005 	cmp	r0, #5
4001be00:	0a000004 	beq	4001be18 <CyU3PConnectState+0xec>
4001be04:	e3500006 	cmp	r0, #6
4001be08:	1a000051 	bne	4001bf54 <CyU3PConnectState+0x228>
4001be0c:	ea000002 	b	4001be1c <CyU3PConnectState+0xf0>
4001be10:	e1a00000 	nop			; (mov r0, r0)
4001be14:	e1a00000 	nop			; (mov r0, r0)
4001be18:	e1a00000 	nop			; (mov r0, r0)
4001be1c:	e3a05043 	mov	r5, #67	; 0x43
4001be20:	ea00004e 	b	4001bf60 <CyU3PConnectState+0x234>
4001be24:	e1a00000 	nop			; (mov r0, r0)
4001be28:	e59f0144 	ldr	r0, [pc, #324]	; 4001bf74 <CyU3PConnectState+0x248>
4001be2c:	e5d00007 	ldrb	r0, [r0, #7]
4001be30:	e3500001 	cmp	r0, #1
4001be34:	0a00000f 	beq	4001be78 <CyU3PConnectState+0x14c>
4001be38:	e59f013c 	ldr	r0, [pc, #316]	; 4001bf7c <CyU3PConnectState+0x250>
4001be3c:	e590001c 	ldr	r0, [r0, #28]
4001be40:	e3500000 	cmp	r0, #0
4001be44:	0a000007 	beq	4001be68 <CyU3PConnectState+0x13c>
4001be48:	e59f012c 	ldr	r0, [pc, #300]	; 4001bf7c <CyU3PConnectState+0x250>
4001be4c:	e5900014 	ldr	r0, [r0, #20]
4001be50:	e3500000 	cmp	r0, #0
4001be54:	0a000003 	beq	4001be68 <CyU3PConnectState+0x13c>
4001be58:	e59f011c 	ldr	r0, [pc, #284]	; 4001bf7c <CyU3PConnectState+0x250>
4001be5c:	e5900018 	ldr	r0, [r0, #24]
4001be60:	e3500000 	cmp	r0, #0
4001be64:	1a000003 	bne	4001be78 <CyU3PConnectState+0x14c>
4001be68:	e59f0108 	ldr	r0, [pc, #264]	; 4001bf78 <CyU3PConnectState+0x24c>
4001be6c:	ebffb946 	bl	4000a38c <_txe_mutex_put>
4001be70:	e3a00044 	mov	r0, #68	; 0x44
4001be74:	eaffffb4 	b	4001bd4c <CyU3PConnectState+0x20>
4001be78:	e3560000 	cmp	r6, #0
4001be7c:	0a000007 	beq	4001bea0 <CyU3PConnectState+0x174>
4001be80:	e3a00000 	mov	r0, #0
4001be84:	e59f10f4 	ldr	r1, [pc, #244]	; 4001bf80 <CyU3PConnectState+0x254>
4001be88:	e5810014 	str	r0, [r1, #20]
4001be8c:	e59f10f0 	ldr	r1, [pc, #240]	; 4001bf84 <CyU3PConnectState+0x258>
4001be90:	e5810000 	str	r0, [r1]
4001be94:	e59f10ec 	ldr	r1, [pc, #236]	; 4001bf88 <CyU3PConnectState+0x25c>
4001be98:	e5810000 	str	r0, [r1]
4001be9c:	ea000007 	b	4001bec0 <CyU3PConnectState+0x194>
4001bea0:	e59f00cc 	ldr	r0, [pc, #204]	; 4001bf74 <CyU3PConnectState+0x248>
4001bea4:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001bea8:	e3500000 	cmp	r0, #0
4001beac:	0a000003 	beq	4001bec0 <CyU3PConnectState+0x194>
4001beb0:	e59f00c0 	ldr	r0, [pc, #192]	; 4001bf78 <CyU3PConnectState+0x24c>
4001beb4:	ebffb934 	bl	4000a38c <_txe_mutex_put>
4001beb8:	e3a000ff 	mov	r0, #255	; 0xff
4001bebc:	eaffffa2 	b	4001bd4c <CyU3PConnectState+0x20>
4001bec0:	e59f00ac 	ldr	r0, [pc, #172]	; 4001bf74 <CyU3PConnectState+0x248>
4001bec4:	e5806024 	str	r6, [r0, #36]	; 0x24
4001bec8:	e3a00000 	mov	r0, #0
4001becc:	e59f10a0 	ldr	r1, [pc, #160]	; 4001bf74 <CyU3PConnectState+0x248>
4001bed0:	e5810058 	str	r0, [r1, #88]	; 0x58
4001bed4:	e2810000 	add	r0, r1, #0
4001bed8:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001bedc:	e3500000 	cmp	r0, #0
4001bee0:	0a000004 	beq	4001bef8 <CyU3PConnectState+0x1cc>
4001bee4:	e59f00a0 	ldr	r0, [pc, #160]	; 4001bf8c <CyU3PConnectState+0x260>
4001bee8:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001beec:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001bef0:	e1100001 	tst	r0, r1
4001bef4:	0a000012 	beq	4001bf44 <CyU3PConnectState+0x218>
4001bef8:	e3560000 	cmp	r6, #0
4001befc:	0a000007 	beq	4001bf20 <CyU3PConnectState+0x1f4>
4001bf00:	e3a00000 	mov	r0, #0
4001bf04:	e59f1068 	ldr	r1, [pc, #104]	; 4001bf74 <CyU3PConnectState+0x248>
4001bf08:	e5810054 	str	r0, [r1, #84]	; 0x54
4001bf0c:	e3a00001 	mov	r0, #1
4001bf10:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bf14:	e3a00000 	mov	r0, #0
4001bf18:	e5810050 	str	r0, [r1, #80]	; 0x50
4001bf1c:	ea000002 	b	4001bf2c <CyU3PConnectState+0x200>
4001bf20:	e3a00000 	mov	r0, #0
4001bf24:	e59f1048 	ldr	r1, [pc, #72]	; 4001bf74 <CyU3PConnectState+0x248>
4001bf28:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001bf2c:	e1a00006 	mov	r0, r6
4001bf30:	eb000527 	bl	4001d3d4 <CyU3PUsbPhyEnable>
4001bf34:	e3a00005 	mov	r0, #5
4001bf38:	e59f1034 	ldr	r1, [pc, #52]	; 4001bf74 <CyU3PConnectState+0x248>
4001bf3c:	e5c10008 	strb	r0, [r1, #8]
4001bf40:	ea000002 	b	4001bf50 <CyU3PConnectState+0x224>
4001bf44:	e3a00004 	mov	r0, #4
4001bf48:	e59f1024 	ldr	r1, [pc, #36]	; 4001bf74 <CyU3PConnectState+0x248>
4001bf4c:	e5c10008 	strb	r0, [r1, #8]
4001bf50:	ea000002 	b	4001bf60 <CyU3PConnectState+0x234>
4001bf54:	e1a00000 	nop			; (mov r0, r0)
4001bf58:	e3a05044 	mov	r5, #68	; 0x44
4001bf5c:	e1a00000 	nop			; (mov r0, r0)
4001bf60:	e1a00000 	nop			; (mov r0, r0)
4001bf64:	e59f000c 	ldr	r0, [pc, #12]	; 4001bf78 <CyU3PConnectState+0x24c>
4001bf68:	ebffb907 	bl	4000a38c <_txe_mutex_put>
4001bf6c:	e1a00005 	mov	r0, r5
4001bf70:	eaffff75 	b	4001bd4c <CyU3PConnectState+0x20>
4001bf74:	40031d40 	.word	0x40031d40
4001bf78:	40031ee0 	.word	0x40031ee0
4001bf7c:	40031f98 	.word	0x40031f98
4001bf80:	e0033000 	.word	0xe0033000
4001bf84:	40030d84 	.word	0x40030d84
4001bf88:	40030d88 	.word	0x40030d88
4001bf8c:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3POtgGetMode:

4001bf90 <CyU3POtgGetMode>:
4001bf90:	e59f0004 	ldr	r0, [pc, #4]	; 4001bf9c <CyU3POtgGetMode+0xc>
4001bf94:	e5d00000 	ldrb	r0, [r0]
4001bf98:	e12fff1e 	bx	lr
4001bf9c:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3POtgIsDeviceMode:

4001bfa0 <CyU3POtgIsDeviceMode>:
4001bfa0:	e3a01000 	mov	r1, #0
4001bfa4:	e59f00b4 	ldr	r0, [pc, #180]	; 4001c060 <CyU3POtgIsDeviceMode+0xc0>
4001bfa8:	e5d00000 	ldrb	r0, [r0]
4001bfac:	e3500000 	cmp	r0, #0
4001bfb0:	0a000003 	beq	4001bfc4 <CyU3POtgIsDeviceMode+0x24>
4001bfb4:	e59f00a4 	ldr	r0, [pc, #164]	; 4001c060 <CyU3POtgIsDeviceMode+0xc0>
4001bfb8:	e5d00000 	ldrb	r0, [r0]
4001bfbc:	e3500002 	cmp	r0, #2
4001bfc0:	1a000024 	bne	4001c058 <CyU3POtgIsDeviceMode+0xb8>
4001bfc4:	e59f0098 	ldr	r0, [pc, #152]	; 4001c064 <CyU3POtgIsDeviceMode+0xc4>
4001bfc8:	e5d00000 	ldrb	r0, [r0]
4001bfcc:	e3500000 	cmp	r0, #0
4001bfd0:	0a000006 	beq	4001bff0 <CyU3POtgIsDeviceMode+0x50>
4001bfd4:	e3500002 	cmp	r0, #2
4001bfd8:	0a00000c 	beq	4001c010 <CyU3POtgIsDeviceMode+0x70>
4001bfdc:	e3500004 	cmp	r0, #4
4001bfe0:	0a00000b 	beq	4001c014 <CyU3POtgIsDeviceMode+0x74>
4001bfe4:	e3500005 	cmp	r0, #5
4001bfe8:	1a00000c 	bne	4001c020 <CyU3POtgIsDeviceMode+0x80>
4001bfec:	ea000009 	b	4001c018 <CyU3POtgIsDeviceMode+0x78>
4001bff0:	e1a00000 	nop			; (mov r0, r0)
4001bff4:	e59f0064 	ldr	r0, [pc, #100]	; 4001c060 <CyU3POtgIsDeviceMode+0xc0>
4001bff8:	e5d00000 	ldrb	r0, [r0]
4001bffc:	e3500002 	cmp	r0, #2
4001c000:	1a000001 	bne	4001c00c <CyU3POtgIsDeviceMode+0x6c>
4001c004:	e3a00000 	mov	r0, #0
4001c008:	e12fff1e 	bx	lr
4001c00c:	e1a00000 	nop			; (mov r0, r0)
4001c010:	e1a00000 	nop			; (mov r0, r0)
4001c014:	e1a00000 	nop			; (mov r0, r0)
4001c018:	e3a01001 	mov	r1, #1
4001c01c:	ea000002 	b	4001c02c <CyU3POtgIsDeviceMode+0x8c>
4001c020:	e1a00000 	nop			; (mov r0, r0)
4001c024:	e3a01000 	mov	r1, #0
4001c028:	e1a00000 	nop			; (mov r0, r0)
4001c02c:	e1a00000 	nop			; (mov r0, r0)
4001c030:	e59f0030 	ldr	r0, [pc, #48]	; 4001c068 <CyU3POtgIsDeviceMode+0xc8>
4001c034:	e5900000 	ldr	r0, [r0]
4001c038:	e3500000 	cmp	r0, #0
4001c03c:	0a000005 	beq	4001c058 <CyU3POtgIsDeviceMode+0xb8>
4001c040:	e3510000 	cmp	r1, #0
4001c044:	1a000001 	bne	4001c050 <CyU3POtgIsDeviceMode+0xb0>
4001c048:	e3a00001 	mov	r0, #1
4001c04c:	ea000000 	b	4001c054 <CyU3POtgIsDeviceMode+0xb4>
4001c050:	e3a00000 	mov	r0, #0
4001c054:	e1a01000 	mov	r1, r0
4001c058:	e1a00001 	mov	r0, r1
4001c05c:	eaffffe9 	b	4001c008 <CyU3POtgIsDeviceMode+0x68>
4001c060:	40030d54 	.word	0x40030d54
4001c064:	40030d50 	.word	0x40030d50
4001c068:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsHostMode:

4001c06c <CyU3POtgIsHostMode>:
4001c06c:	e3a01000 	mov	r1, #0
4001c070:	e59f00a8 	ldr	r0, [pc, #168]	; 4001c120 <CyU3POtgIsHostMode+0xb4>
4001c074:	e5d00000 	ldrb	r0, [r0]
4001c078:	e3500001 	cmp	r0, #1
4001c07c:	0a000003 	beq	4001c090 <CyU3POtgIsHostMode+0x24>
4001c080:	e59f0098 	ldr	r0, [pc, #152]	; 4001c120 <CyU3POtgIsHostMode+0xb4>
4001c084:	e5d00000 	ldrb	r0, [r0]
4001c088:	e3500002 	cmp	r0, #2
4001c08c:	1a000021 	bne	4001c118 <CyU3POtgIsHostMode+0xac>
4001c090:	e59f008c 	ldr	r0, [pc, #140]	; 4001c124 <CyU3POtgIsHostMode+0xb8>
4001c094:	e5d00000 	ldrb	r0, [r0]
4001c098:	e3500000 	cmp	r0, #0
4001c09c:	0a000004 	beq	4001c0b4 <CyU3POtgIsHostMode+0x48>
4001c0a0:	e3500001 	cmp	r0, #1
4001c0a4:	0a00000a 	beq	4001c0d4 <CyU3POtgIsHostMode+0x68>
4001c0a8:	e3500003 	cmp	r0, #3
4001c0ac:	1a00000b 	bne	4001c0e0 <CyU3POtgIsHostMode+0x74>
4001c0b0:	ea000008 	b	4001c0d8 <CyU3POtgIsHostMode+0x6c>
4001c0b4:	e1a00000 	nop			; (mov r0, r0)
4001c0b8:	e59f0060 	ldr	r0, [pc, #96]	; 4001c120 <CyU3POtgIsHostMode+0xb4>
4001c0bc:	e5d00000 	ldrb	r0, [r0]
4001c0c0:	e3500002 	cmp	r0, #2
4001c0c4:	1a000001 	bne	4001c0d0 <CyU3POtgIsHostMode+0x64>
4001c0c8:	e3a00000 	mov	r0, #0
4001c0cc:	e12fff1e 	bx	lr
4001c0d0:	e1a00000 	nop			; (mov r0, r0)
4001c0d4:	e1a00000 	nop			; (mov r0, r0)
4001c0d8:	e3a01001 	mov	r1, #1
4001c0dc:	ea000002 	b	4001c0ec <CyU3POtgIsHostMode+0x80>
4001c0e0:	e1a00000 	nop			; (mov r0, r0)
4001c0e4:	e3a01000 	mov	r1, #0
4001c0e8:	e1a00000 	nop			; (mov r0, r0)
4001c0ec:	e1a00000 	nop			; (mov r0, r0)
4001c0f0:	e59f0030 	ldr	r0, [pc, #48]	; 4001c128 <CyU3POtgIsHostMode+0xbc>
4001c0f4:	e5900000 	ldr	r0, [r0]
4001c0f8:	e3500000 	cmp	r0, #0
4001c0fc:	0a000005 	beq	4001c118 <CyU3POtgIsHostMode+0xac>
4001c100:	e3510000 	cmp	r1, #0
4001c104:	1a000001 	bne	4001c110 <CyU3POtgIsHostMode+0xa4>
4001c108:	e3a00001 	mov	r0, #1
4001c10c:	ea000000 	b	4001c114 <CyU3POtgIsHostMode+0xa8>
4001c110:	e3a00000 	mov	r0, #0
4001c114:	e1a01000 	mov	r1, r0
4001c118:	e1a00001 	mov	r0, r1
4001c11c:	eaffffea 	b	4001c0cc <CyU3POtgIsHostMode+0x60>
4001c120:	40030d54 	.word	0x40030d54
4001c124:	40030d50 	.word	0x40030d50
4001c128:	40030d4c 	.word	0x40030d4c

Disassembly of section i.CyU3POtgIsStarted:

4001c12c <CyU3POtgIsStarted>:
4001c12c:	e59f0004 	ldr	r0, [pc, #4]	; 4001c138 <CyU3POtgIsStarted+0xc>
4001c130:	e5900000 	ldr	r0, [r0]
4001c134:	e12fff1e 	bx	lr
4001c138:	40030d48 	.word	0x40030d48

Disassembly of section i.CyU3PSetEpConfig:

4001c13c <CyU3PSetEpConfig>:
4001c13c:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001c140:	e1a04000 	mov	r4, r0
4001c144:	e1a05001 	mov	r5, r1
4001c148:	e204607f 	and	r6, r4, #127	; 0x7f
4001c14c:	e3a07000 	mov	r7, #0
4001c150:	e3a08000 	mov	r8, #0
4001c154:	e3a09000 	mov	r9, #0
4001c158:	e3a0a000 	mov	sl, #0
4001c15c:	e59f0588 	ldr	r0, [pc, #1416]	; 4001c6ec <CyU3PSetEpConfig+0x5b0>
4001c160:	e5d00008 	ldrb	r0, [r0, #8]
4001c164:	e3500000 	cmp	r0, #0
4001c168:	1a000001 	bne	4001c174 <CyU3PSetEpConfig+0x38>
4001c16c:	e3a00042 	mov	r0, #66	; 0x42
4001c170:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001c174:	e3550000 	cmp	r5, #0
4001c178:	1a000001 	bne	4001c184 <CyU3PSetEpConfig+0x48>
4001c17c:	e3a00041 	mov	r0, #65	; 0x41
4001c180:	eafffffa 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c184:	e5950000 	ldr	r0, [r5]
4001c188:	e3500000 	cmp	r0, #0
4001c18c:	0a000074 	beq	4001c364 <CyU3PSetEpConfig+0x228>
4001c190:	e1d500b8 	ldrh	r0, [r5, #8]
4001c194:	e3500b01 	cmp	r0, #1024	; 0x400
4001c198:	ca000001 	bgt	4001c1a4 <CyU3PSetEpConfig+0x68>
4001c19c:	e356000f 	cmp	r6, #15
4001c1a0:	da000001 	ble	4001c1ac <CyU3PSetEpConfig+0x70>
4001c1a4:	e3a00040 	mov	r0, #64	; 0x40
4001c1a8:	eafffff0 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c1ac:	e5d50004 	ldrb	r0, [r5, #4]
4001c1b0:	e3500000 	cmp	r0, #0
4001c1b4:	0a000002 	beq	4001c1c4 <CyU3PSetEpConfig+0x88>
4001c1b8:	e5d50004 	ldrb	r0, [r5, #4]
4001c1bc:	e3500003 	cmp	r0, #3
4001c1c0:	da000001 	ble	4001c1cc <CyU3PSetEpConfig+0x90>
4001c1c4:	e3a00040 	mov	r0, #64	; 0x40
4001c1c8:	eaffffe8 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c1cc:	e5d5000a 	ldrb	r0, [r5, #10]
4001c1d0:	e3500010 	cmp	r0, #16
4001c1d4:	ca000008 	bgt	4001c1fc <CyU3PSetEpConfig+0xc0>
4001c1d8:	e5d5000a 	ldrb	r0, [r5, #10]
4001c1dc:	e3500001 	cmp	r0, #1
4001c1e0:	da000007 	ble	4001c204 <CyU3PSetEpConfig+0xc8>
4001c1e4:	e1d500b8 	ldrh	r0, [r5, #8]
4001c1e8:	e3500b01 	cmp	r0, #1024	; 0x400
4001c1ec:	aa000004 	bge	4001c204 <CyU3PSetEpConfig+0xc8>
4001c1f0:	e1d500b8 	ldrh	r0, [r5, #8]
4001c1f4:	e3500000 	cmp	r0, #0
4001c1f8:	0a000001 	beq	4001c204 <CyU3PSetEpConfig+0xc8>
4001c1fc:	e3a00040 	mov	r0, #64	; 0x40
4001c200:	eaffffda 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c204:	e5d50004 	ldrb	r0, [r5, #4]
4001c208:	e1a00f00 	lsl	r0, r0, #30
4001c20c:	e1a08a20 	lsr	r8, r0, #20
4001c210:	e5d50004 	ldrb	r0, [r5, #4]
4001c214:	e2000003 	and	r0, r0, #3
4001c218:	e59f14d0 	ldr	r1, [pc, #1232]	; 4001c6f0 <CyU3PSetEpConfig+0x5b4>
4001c21c:	e7d1a000 	ldrb	sl, [r1, r0]
4001c220:	e5d5000a 	ldrb	r0, [r5, #10]
4001c224:	e3500000 	cmp	r0, #0
4001c228:	0a000004 	beq	4001c240 <CyU3PSetEpConfig+0x104>
4001c22c:	e5d5000a 	ldrb	r0, [r5, #10]
4001c230:	e2400001 	sub	r0, r0, #1
4001c234:	e200000f 	and	r0, r0, #15
4001c238:	e18aa400 	orr	sl, sl, r0, lsl #8
4001c23c:	ea000001 	b	4001c248 <CyU3PSetEpConfig+0x10c>
4001c240:	e3a00001 	mov	r0, #1
4001c244:	e5c5000a 	strb	r0, [r5, #10]
4001c248:	e5d50004 	ldrb	r0, [r5, #4]
4001c24c:	e3500001 	cmp	r0, #1
4001c250:	1a000013 	bne	4001c2a4 <CyU3PSetEpConfig+0x168>
4001c254:	e5950000 	ldr	r0, [r5]
4001c258:	e3500000 	cmp	r0, #0
4001c25c:	0a000010 	beq	4001c2a4 <CyU3PSetEpConfig+0x168>
4001c260:	e5d5000b 	ldrb	r0, [r5, #11]
4001c264:	e2000003 	and	r0, r0, #3
4001c268:	e1888600 	orr	r8, r8, r0, lsl #12
4001c26c:	e5d5000a 	ldrb	r0, [r5, #10]
4001c270:	e5d5100b 	ldrb	r1, [r5, #11]
4001c274:	e1600180 	smulbb	r0, r0, r1
4001c278:	e200003f 	and	r0, r0, #63	; 0x3f
4001c27c:	e18aa100 	orr	sl, sl, r0, lsl #2
4001c280:	e5d5000b 	ldrb	r0, [r5, #11]
4001c284:	e3500001 	cmp	r0, #1
4001c288:	da000005 	ble	4001c2a4 <CyU3PSetEpConfig+0x168>
4001c28c:	e3560003 	cmp	r6, #3
4001c290:	0a000003 	beq	4001c2a4 <CyU3PSetEpConfig+0x168>
4001c294:	e3560007 	cmp	r6, #7
4001c298:	0a000001 	beq	4001c2a4 <CyU3PSetEpConfig+0x168>
4001c29c:	e3a0004d 	mov	r0, #77	; 0x4d
4001c2a0:	eaffffb2 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c2a4:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2a8:	e3500000 	cmp	r0, #0
4001c2ac:	0a000004 	beq	4001c2c4 <CyU3PSetEpConfig+0x188>
4001c2b0:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2b4:	e3500b01 	cmp	r0, #1024	; 0x400
4001c2b8:	ca000001 	bgt	4001c2c4 <CyU3PSetEpConfig+0x188>
4001c2bc:	e1d500b8 	ldrh	r0, [r5, #8]
4001c2c0:	ea000000 	b	4001c2c8 <CyU3PSetEpConfig+0x18c>
4001c2c4:	e3a00b01 	mov	r0, #1024	; 0x400
4001c2c8:	e1a07800 	lsl	r7, r0, #16
4001c2cc:	e1a07827 	lsr	r7, r7, #16
4001c2d0:	e59f0414 	ldr	r0, [pc, #1044]	; 4001c6ec <CyU3PSetEpConfig+0x5b0>
4001c2d4:	e5d00008 	ldrb	r0, [r0, #8]
4001c2d8:	e3500005 	cmp	r0, #5
4001c2dc:	da00001e 	ble	4001c35c <CyU3PSetEpConfig+0x220>
4001c2e0:	e59f0404 	ldr	r0, [pc, #1028]	; 4001c6ec <CyU3PSetEpConfig+0x5b0>
4001c2e4:	e5d00009 	ldrb	r0, [r0, #9]
4001c2e8:	e3500001 	cmp	r0, #1
4001c2ec:	0a000008 	beq	4001c314 <CyU3PSetEpConfig+0x1d8>
4001c2f0:	e3500002 	cmp	r0, #2
4001c2f4:	1a000015 	bne	4001c350 <CyU3PSetEpConfig+0x214>
4001c2f8:	e5d50004 	ldrb	r0, [r5, #4]
4001c2fc:	e3500002 	cmp	r0, #2
4001c300:	1a000002 	bne	4001c310 <CyU3PSetEpConfig+0x1d4>
4001c304:	e3570c02 	cmp	r7, #512	; 0x200
4001c308:	da000000 	ble	4001c310 <CyU3PSetEpConfig+0x1d4>
4001c30c:	e3a07c02 	mov	r7, #512	; 0x200
4001c310:	ea000010 	b	4001c358 <CyU3PSetEpConfig+0x21c>
4001c314:	e1a00000 	nop			; (mov r0, r0)
4001c318:	e5d50004 	ldrb	r0, [r5, #4]
4001c31c:	e3500001 	cmp	r0, #1
4001c320:	1a000003 	bne	4001c334 <CyU3PSetEpConfig+0x1f8>
4001c324:	e3570b01 	cmp	r7, #1024	; 0x400
4001c328:	ba000001 	blt	4001c334 <CyU3PSetEpConfig+0x1f8>
4001c32c:	e59f73c0 	ldr	r7, [pc, #960]	; 4001c6f4 <CyU3PSetEpConfig+0x5b8>
4001c330:	ea000005 	b	4001c34c <CyU3PSetEpConfig+0x210>
4001c334:	e5d50004 	ldrb	r0, [r5, #4]
4001c338:	e3500001 	cmp	r0, #1
4001c33c:	0a000002 	beq	4001c34c <CyU3PSetEpConfig+0x210>
4001c340:	e3570040 	cmp	r7, #64	; 0x40
4001c344:	da000000 	ble	4001c34c <CyU3PSetEpConfig+0x210>
4001c348:	e3a07040 	mov	r7, #64	; 0x40
4001c34c:	ea000001 	b	4001c358 <CyU3PSetEpConfig+0x21c>
4001c350:	e1a00000 	nop			; (mov r0, r0)
4001c354:	e1a00000 	nop			; (mov r0, r0)
4001c358:	e1a00000 	nop			; (mov r0, r0)
4001c35c:	e3c70b3f 	bic	r0, r7, #64512	; 0xfc00
4001c360:	e1888000 	orr	r8, r8, r0
4001c364:	e3e01000 	mvn	r1, #0
4001c368:	e59f0388 	ldr	r0, [pc, #904]	; 4001c6f8 <CyU3PSetEpConfig+0x5bc>
4001c36c:	ebffb7d1 	bl	4000a2b8 <_txe_mutex_get>
4001c370:	e3140080 	tst	r4, #128	; 0x80
4001c374:	0a000062 	beq	4001c504 <CyU3PSetEpConfig+0x3c8>
4001c378:	e5950000 	ldr	r0, [r5]
4001c37c:	e3500000 	cmp	r0, #0
4001c380:	1a00001d 	bne	4001c3fc <CyU3PSetEpConfig+0x2c0>
4001c384:	e59f0370 	ldr	r0, [pc, #880]	; 4001c6fc <CyU3PSetEpConfig+0x5c0>
4001c388:	e59f1370 	ldr	r1, [pc, #880]	; 4001c700 <CyU3PSetEpConfig+0x5c4>
4001c38c:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c390:	e3a00020 	mov	r0, #32
4001c394:	e59f1368 	ldr	r1, [pc, #872]	; 4001c704 <CyU3PSetEpConfig+0x5c8>
4001c398:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c39c:	e2410c05 	sub	r0, r1, #1280	; 0x500
4001c3a0:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c3a4:	e3a01001 	mov	r1, #1
4001c3a8:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c3ac:	e59f1354 	ldr	r1, [pc, #852]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c3b0:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c3b4:	e2410a02 	sub	r0, r1, #8192	; 0x2000
4001c3b8:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c3bc:	e3a01001 	mov	r1, #1
4001c3c0:	e1c00611 	bic	r0, r0, r1, lsl r6
4001c3c4:	e59f1340 	ldr	r1, [pc, #832]	; 4001c70c <CyU3PSetEpConfig+0x5d0>
4001c3c8:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c3cc:	e3a00000 	mov	r0, #0
4001c3d0:	e0861086 	add	r1, r6, r6, lsl #1
4001c3d4:	e59f2334 	ldr	r2, [pc, #820]	; 4001c710 <CyU3PSetEpConfig+0x5d4>
4001c3d8:	e0821101 	add	r1, r2, r1, lsl #2
4001c3dc:	e5810004 	str	r0, [r1, #4]
4001c3e0:	e0861086 	add	r1, r6, r6, lsl #1
4001c3e4:	e0821101 	add	r1, r2, r1, lsl #2
4001c3e8:	e5810008 	str	r0, [r1, #8]
4001c3ec:	e59f0304 	ldr	r0, [pc, #772]	; 4001c6f8 <CyU3PSetEpConfig+0x5bc>
4001c3f0:	ebffb7e5 	bl	4000a38c <_txe_mutex_put>
4001c3f4:	e3a00000 	mov	r0, #0
4001c3f8:	eaffff5c 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c3fc:	e3a00001 	mov	r0, #1
4001c400:	e0861086 	add	r1, r6, r6, lsl #1
4001c404:	e59f2304 	ldr	r2, [pc, #772]	; 4001c710 <CyU3PSetEpConfig+0x5d4>
4001c408:	e0821101 	add	r1, r2, r1, lsl #2
4001c40c:	e5810004 	str	r0, [r1, #4]
4001c410:	e0861086 	add	r1, r6, r6, lsl #1
4001c414:	e0821101 	add	r1, r2, r1, lsl #2
4001c418:	e5810008 	str	r0, [r1, #8]
4001c41c:	e1d500b8 	ldrh	r0, [r5, #8]
4001c420:	e0861086 	add	r1, r6, r6, lsl #1
4001c424:	e0821101 	add	r1, r2, r1, lsl #2
4001c428:	e1c100b0 	strh	r0, [r1]
4001c42c:	e59f02e0 	ldr	r0, [pc, #736]	; 4001c714 <CyU3PSetEpConfig+0x5d8>
4001c430:	e7807106 	str	r7, [r0, r6, lsl #2]
4001c434:	e5d50004 	ldrb	r0, [r5, #4]
4001c438:	e3500002 	cmp	r0, #2
4001c43c:	1a000007 	bne	4001c460 <CyU3PSetEpConfig+0x324>
4001c440:	e1d500b6 	ldrh	r0, [r5, #6]
4001c444:	e3500000 	cmp	r0, #0
4001c448:	da000004 	ble	4001c460 <CyU3PSetEpConfig+0x324>
4001c44c:	e3a02001 	mov	r2, #1
4001c450:	e1a01006 	mov	r1, r6
4001c454:	e1a00004 	mov	r0, r4
4001c458:	eb00031b 	bl	4001d0cc <CyU3PUsbMapStream>
4001c45c:	e59f92b4 	ldr	r9, [pc, #692]	; 4001c718 <CyU3PSetEpConfig+0x5dc>
4001c460:	e59f02a0 	ldr	r0, [pc, #672]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c464:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c468:	e3a01001 	mov	r1, #1
4001c46c:	e1800611 	orr	r0, r0, r1, lsl r6
4001c470:	e59f1290 	ldr	r1, [pc, #656]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c474:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c478:	e38996a1 	orr	r9, r9, #168820736	; 0xa100000
4001c47c:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c480:	e59f1278 	ldr	r1, [pc, #632]	; 4001c700 <CyU3PSetEpConfig+0x5c4>
4001c484:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c488:	e3890001 	orr	r0, r9, #1
4001c48c:	e59f1270 	ldr	r1, [pc, #624]	; 4001c704 <CyU3PSetEpConfig+0x5c8>
4001c490:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c494:	e2810040 	add	r0, r1, #64	; 0x40
4001c498:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c49c:	e59f0278 	ldr	r0, [pc, #632]	; 4001c71c <CyU3PSetEpConfig+0x5e0>
4001c4a0:	e5900000 	ldr	r0, [r0]
4001c4a4:	e3500000 	cmp	r0, #0
4001c4a8:	0a00007f 	beq	4001c6ac <CyU3PSetEpConfig+0x570>
4001c4ac:	e3a00001 	mov	r0, #1
4001c4b0:	e59f1268 	ldr	r1, [pc, #616]	; 4001c720 <CyU3PSetEpConfig+0x5e4>
4001c4b4:	e5911000 	ldr	r1, [r1]
4001c4b8:	e1110610 	tst	r1, r0, lsl r6
4001c4bc:	0a00007a 	beq	4001c6ac <CyU3PSetEpConfig+0x570>
4001c4c0:	e59f0244 	ldr	r0, [pc, #580]	; 4001c70c <CyU3PSetEpConfig+0x5d0>
4001c4c4:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c4c8:	e3a01001 	mov	r1, #1
4001c4cc:	e1800611 	orr	r0, r0, r1, lsl r6
4001c4d0:	e59f1234 	ldr	r1, [pc, #564]	; 4001c70c <CyU3PSetEpConfig+0x5d0>
4001c4d4:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c4d8:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c4dc:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c4e0:	e3a01001 	mov	r1, #1
4001c4e4:	e1800611 	orr	r0, r0, r1, lsl r6
4001c4e8:	e59f1218 	ldr	r1, [pc, #536]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c4ec:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c4f0:	e59f0224 	ldr	r0, [pc, #548]	; 4001c71c <CyU3PSetEpConfig+0x5e0>
4001c4f4:	e5901000 	ldr	r1, [r0]
4001c4f8:	e1a00004 	mov	r0, r4
4001c4fc:	eb0001ba 	bl	4001cbec <CyU3PUsbEnableEpInterrupts>
4001c500:	ea000069 	b	4001c6ac <CyU3PSetEpConfig+0x570>
4001c504:	e5950000 	ldr	r0, [r5]
4001c508:	e3500000 	cmp	r0, #0
4001c50c:	1a00001e 	bne	4001c58c <CyU3PSetEpConfig+0x450>
4001c510:	e59f01e4 	ldr	r0, [pc, #484]	; 4001c6fc <CyU3PSetEpConfig+0x5c0>
4001c514:	e59f1208 	ldr	r1, [pc, #520]	; 4001c724 <CyU3PSetEpConfig+0x5e8>
4001c518:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c51c:	e3a00020 	mov	r0, #32
4001c520:	e59f1200 	ldr	r1, [pc, #512]	; 4001c728 <CyU3PSetEpConfig+0x5ec>
4001c524:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c528:	e2410c26 	sub	r0, r1, #9728	; 0x2600
4001c52c:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c530:	e2861010 	add	r1, r6, #16
4001c534:	e3a02001 	mov	r2, #1
4001c538:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c53c:	e59f11c8 	ldr	r1, [pc, #456]	; 4001c70c <CyU3PSetEpConfig+0x5d0>
4001c540:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c544:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c548:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c54c:	e2861010 	add	r1, r6, #16
4001c550:	e1c00112 	bic	r0, r0, r2, lsl r1
4001c554:	e59f11ac 	ldr	r1, [pc, #428]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c558:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c55c:	e3a00000 	mov	r0, #0
4001c560:	e0861086 	add	r1, r6, r6, lsl #1
4001c564:	e59f21c0 	ldr	r2, [pc, #448]	; 4001c72c <CyU3PSetEpConfig+0x5f0>
4001c568:	e0821101 	add	r1, r2, r1, lsl #2
4001c56c:	e5810004 	str	r0, [r1, #4]
4001c570:	e0861086 	add	r1, r6, r6, lsl #1
4001c574:	e0821101 	add	r1, r2, r1, lsl #2
4001c578:	e5810008 	str	r0, [r1, #8]
4001c57c:	e59f0174 	ldr	r0, [pc, #372]	; 4001c6f8 <CyU3PSetEpConfig+0x5bc>
4001c580:	ebffb781 	bl	4000a38c <_txe_mutex_put>
4001c584:	e3a00000 	mov	r0, #0
4001c588:	eafffef8 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c58c:	e3a00001 	mov	r0, #1
4001c590:	e0861086 	add	r1, r6, r6, lsl #1
4001c594:	e59f2190 	ldr	r2, [pc, #400]	; 4001c72c <CyU3PSetEpConfig+0x5f0>
4001c598:	e0821101 	add	r1, r2, r1, lsl #2
4001c59c:	e5810004 	str	r0, [r1, #4]
4001c5a0:	e0861086 	add	r1, r6, r6, lsl #1
4001c5a4:	e0821101 	add	r1, r2, r1, lsl #2
4001c5a8:	e5810008 	str	r0, [r1, #8]
4001c5ac:	e1d500b8 	ldrh	r0, [r5, #8]
4001c5b0:	e0861086 	add	r1, r6, r6, lsl #1
4001c5b4:	e0821101 	add	r1, r2, r1, lsl #2
4001c5b8:	e1c100b0 	strh	r0, [r1]
4001c5bc:	e59f016c 	ldr	r0, [pc, #364]	; 4001c730 <CyU3PSetEpConfig+0x5f4>
4001c5c0:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001c5c4:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
4001c5c8:	e1800007 	orr	r0, r0, r7
4001c5cc:	e59f115c 	ldr	r1, [pc, #348]	; 4001c730 <CyU3PSetEpConfig+0x5f4>
4001c5d0:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c5d4:	e5d50004 	ldrb	r0, [r5, #4]
4001c5d8:	e3500002 	cmp	r0, #2
4001c5dc:	1a00000e 	bne	4001c61c <CyU3PSetEpConfig+0x4e0>
4001c5e0:	e1d500b6 	ldrh	r0, [r5, #6]
4001c5e4:	e3500000 	cmp	r0, #0
4001c5e8:	da00000b 	ble	4001c61c <CyU3PSetEpConfig+0x4e0>
4001c5ec:	e3a02001 	mov	r2, #1
4001c5f0:	e1a01006 	mov	r1, r6
4001c5f4:	e1a00004 	mov	r0, r4
4001c5f8:	eb0002b3 	bl	4001d0cc <CyU3PUsbMapStream>
4001c5fc:	e59f0104 	ldr	r0, [pc, #260]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c600:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c604:	e2861010 	add	r1, r6, #16
4001c608:	e3a02001 	mov	r2, #1
4001c60c:	e1800112 	orr	r0, r0, r2, lsl r1
4001c610:	e59f10f0 	ldr	r1, [pc, #240]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c614:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c618:	e59f90f8 	ldr	r9, [pc, #248]	; 4001c718 <CyU3PSetEpConfig+0x5dc>
4001c61c:	e3880901 	orr	r0, r8, #16384	; 0x4000
4001c620:	e59f10fc 	ldr	r1, [pc, #252]	; 4001c724 <CyU3PSetEpConfig+0x5e8>
4001c624:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c628:	e3890001 	orr	r0, r9, #1
4001c62c:	e59f10f4 	ldr	r1, [pc, #244]	; 4001c728 <CyU3PSetEpConfig+0x5ec>
4001c630:	e7810106 	str	r0, [r1, r6, lsl #2]
4001c634:	e2810040 	add	r0, r1, #64	; 0x40
4001c638:	e780a106 	str	sl, [r0, r6, lsl #2]
4001c63c:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c71c <CyU3PSetEpConfig+0x5e0>
4001c640:	e5900000 	ldr	r0, [r0]
4001c644:	e3500000 	cmp	r0, #0
4001c648:	0a000017 	beq	4001c6ac <CyU3PSetEpConfig+0x570>
4001c64c:	e2860010 	add	r0, r6, #16
4001c650:	e3a01001 	mov	r1, #1
4001c654:	e1a00011 	lsl	r0, r1, r0
4001c658:	e59f10c0 	ldr	r1, [pc, #192]	; 4001c720 <CyU3PSetEpConfig+0x5e4>
4001c65c:	e5911000 	ldr	r1, [r1]
4001c660:	e1100001 	tst	r0, r1
4001c664:	0a000010 	beq	4001c6ac <CyU3PSetEpConfig+0x570>
4001c668:	e59f009c 	ldr	r0, [pc, #156]	; 4001c70c <CyU3PSetEpConfig+0x5d0>
4001c66c:	e5900520 	ldr	r0, [r0, #1312]	; 0x520
4001c670:	e2861010 	add	r1, r6, #16
4001c674:	e3a02001 	mov	r2, #1
4001c678:	e1800112 	orr	r0, r0, r2, lsl r1
4001c67c:	e59f1088 	ldr	r1, [pc, #136]	; 4001c70c <CyU3PSetEpConfig+0x5d0>
4001c680:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c684:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001c688:	e5900478 	ldr	r0, [r0, #1144]	; 0x478
4001c68c:	e2861010 	add	r1, r6, #16
4001c690:	e1800112 	orr	r0, r0, r2, lsl r1
4001c694:	e59f106c 	ldr	r1, [pc, #108]	; 4001c708 <CyU3PSetEpConfig+0x5cc>
4001c698:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c69c:	e59f0078 	ldr	r0, [pc, #120]	; 4001c71c <CyU3PSetEpConfig+0x5e0>
4001c6a0:	e5901000 	ldr	r1, [r0]
4001c6a4:	e1a00004 	mov	r0, r4
4001c6a8:	eb00014f 	bl	4001cbec <CyU3PUsbEnableEpInterrupts>
4001c6ac:	e59f0038 	ldr	r0, [pc, #56]	; 4001c6ec <CyU3PSetEpConfig+0x5b0>
4001c6b0:	e5d00008 	ldrb	r0, [r0, #8]
4001c6b4:	e3500005 	cmp	r0, #5
4001c6b8:	ba000007 	blt	4001c6dc <CyU3PSetEpConfig+0x5a0>
4001c6bc:	e1a00004 	mov	r0, r4
4001c6c0:	eb00040e 	bl	4001d700 <CyU3PUsbResetEp>
4001c6c4:	e1a00004 	mov	r0, r4
4001c6c8:	eb0001a4 	bl	4001cd60 <CyU3PUsbFlushEp>
4001c6cc:	e3a02001 	mov	r2, #1
4001c6d0:	e3a01000 	mov	r1, #0
4001c6d4:	e1a00004 	mov	r0, r4
4001c6d8:	eb00066c 	bl	4001e090 <CyU3PUsbStall>
4001c6dc:	e59f0014 	ldr	r0, [pc, #20]	; 4001c6f8 <CyU3PSetEpConfig+0x5bc>
4001c6e0:	ebffb729 	bl	4000a38c <_txe_mutex_put>
4001c6e4:	e3a00000 	mov	r0, #0
4001c6e8:	eafffea0 	b	4001c170 <CyU3PSetEpConfig+0x34>
4001c6ec:	40031d40 	.word	0x40031d40
4001c6f0:	400121f8 	.word	0x400121f8
4001c6f4:	000003ff 	.word	0x000003ff
4001c6f8:	40031ee0 	.word	0x40031ee0
4001c6fc:	00004040 	.word	0x00004040
4001c700:	e0031418 	.word	0xe0031418
4001c704:	e0033500 	.word	0xe0033500
4001c708:	e0033000 	.word	0xe0033000
4001c70c:	e0031000 	.word	0xe0031000
4001c710:	40031bc0 	.word	0x40031bc0
4001c714:	e0031c40 	.word	0xe0031c40
4001c718:	00400028 	.word	0x00400028
4001c71c:	40030d7c 	.word	0x40030d7c
4001c720:	40030d80 	.word	0x40030d80
4001c724:	e0031498 	.word	0xe0031498
4001c728:	e0033600 	.word	0xe0033600
4001c72c:	40031c80 	.word	0x40031c80
4001c730:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PSetUsbCoreClock:

4001c734 <CyU3PSetUsbCoreClock>:
4001c734:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
4001c738:	e1a04000 	mov	r4, r0
4001c73c:	e1a05001 	mov	r5, r1
4001c740:	eb0016d5 	bl	4002229c <CyU3PVicDisableAllInterrupts>
4001c744:	e1a06000 	mov	r6, r0
4001c748:	e59f0064 	ldr	r0, [pc, #100]	; 4001c7b4 <CyU3PSetUsbCoreClock+0x80>
4001c74c:	e5900008 	ldr	r0, [r0, #8]
4001c750:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001c754:	e59f1058 	ldr	r1, [pc, #88]	; 4001c7b4 <CyU3PSetUsbCoreClock+0x80>
4001c758:	e5810008 	str	r0, [r1, #8]
4001c75c:	e3a07014 	mov	r7, #20
4001c760:	ea000001 	b	4001c76c <CyU3PSetUsbCoreClock+0x38>
4001c764:	e1a00000 	nop			; (mov r0, r0)
4001c768:	e2477001 	sub	r7, r7, #1
4001c76c:	e3570000 	cmp	r7, #0
4001c770:	1afffffb 	bne	4001c764 <CyU3PSetUsbCoreClock+0x30>
4001c774:	e1850104 	orr	r0, r5, r4, lsl #2
4001c778:	e59f1034 	ldr	r1, [pc, #52]	; 4001c7b4 <CyU3PSetUsbCoreClock+0x80>
4001c77c:	e5810008 	str	r0, [r1, #8]
4001c780:	e1a00001 	mov	r0, r1
4001c784:	e5900008 	ldr	r0, [r0, #8]
4001c788:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001c78c:	e5810008 	str	r0, [r1, #8]
4001c790:	e3a07050 	mov	r7, #80	; 0x50
4001c794:	ea000001 	b	4001c7a0 <CyU3PSetUsbCoreClock+0x6c>
4001c798:	e1a00000 	nop			; (mov r0, r0)
4001c79c:	e2477001 	sub	r7, r7, #1
4001c7a0:	e3570000 	cmp	r7, #0
4001c7a4:	1afffffb 	bne	4001c798 <CyU3PSetUsbCoreClock+0x64>
4001c7a8:	e1a00006 	mov	r0, r6
4001c7ac:	eb0016c8 	bl	400222d4 <CyU3PVicEnableInterrupts>
4001c7b0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
4001c7b4:	e0052000 	.word	0xe0052000

Disassembly of section i.CyU3PUibInit:

4001c7b8 <CyU3PUibInit>:
4001c7b8:	e92d4010 	push	{r4, lr}
4001c7bc:	e3a04000 	mov	r4, #0
4001c7c0:	e3a00000 	mov	r0, #0
4001c7c4:	e59f117c 	ldr	r1, [pc, #380]	; 4001c948 <CyU3PUibInit+0x190>
4001c7c8:	e5810004 	str	r0, [r1, #4]
4001c7cc:	e5810008 	str	r0, [r1, #8]
4001c7d0:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001c7d4:	e2411a1d 	sub	r1, r1, #118784	; 0x1d000
4001c7d8:	e581001c 	str	r0, [r1, #28]
4001c7dc:	e3e00000 	mvn	r0, #0
4001c7e0:	e581000c 	str	r0, [r1, #12]
4001c7e4:	e5810004 	str	r0, [r1, #4]
4001c7e8:	e59f015c 	ldr	r0, [pc, #348]	; 4001c94c <CyU3PUibInit+0x194>
4001c7ec:	e5810008 	str	r0, [r1, #8]
4001c7f0:	e3a00000 	mov	r0, #0
4001c7f4:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001c7f8:	e3e00000 	mvn	r0, #0
4001c7fc:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001c800:	e59f0148 	ldr	r0, [pc, #328]	; 4001c950 <CyU3PUibInit+0x198>
4001c804:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001c808:	eb0016c4 	bl	40022320 <CyFx3Usb2PhySetup>
4001c80c:	e3e00000 	mvn	r0, #0
4001c810:	e59f113c 	ldr	r1, [pc, #316]	; 4001c954 <CyU3PUibInit+0x19c>
4001c814:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001c818:	e59f0138 	ldr	r0, [pc, #312]	; 4001c958 <CyU3PUibInit+0x1a0>
4001c81c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001c820:	e3e00000 	mvn	r0, #0
4001c824:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001c828:	e3a00000 	mov	r0, #0
4001c82c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001c830:	e3a00001 	mov	r0, #1
4001c834:	e1811680 	orr	r1, r1, r0, lsl #13
4001c838:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c83c:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c840:	e3a00043 	mov	r0, #67	; 0x43
4001c844:	e5810640 	str	r0, [r1, #1600]	; 0x640
4001c848:	e5810540 	str	r0, [r1, #1344]	; 0x540
4001c84c:	e59f0108 	ldr	r0, [pc, #264]	; 4001c95c <CyU3PUibInit+0x1a4>
4001c850:	e1c110c0 	bic	r1, r1, r0, asr #1
4001c854:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001c858:	e3a00040 	mov	r0, #64	; 0x40
4001c85c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001c860:	e1800400 	orr	r0, r0, r0, lsl #8
4001c864:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001c868:	e3a00040 	mov	r0, #64	; 0x40
4001c86c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4001c870:	e3a04001 	mov	r4, #1
4001c874:	ea000015 	b	4001c8d0 <CyU3PUibInit+0x118>
4001c878:	e1a00004 	mov	r0, r4
4001c87c:	eb000137 	bl	4001cd60 <CyU3PUsbFlushEp>
4001c880:	e59f00d8 	ldr	r0, [pc, #216]	; 4001c960 <CyU3PUibInit+0x1a8>
4001c884:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c888:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c88c:	e59f10cc 	ldr	r1, [pc, #204]	; 4001c960 <CyU3PUibInit+0x1a8>
4001c890:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c894:	e3a00000 	mov	r0, #0
4001c898:	e59f10c4 	ldr	r1, [pc, #196]	; 4001c964 <CyU3PUibInit+0x1ac>
4001c89c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c8a0:	e3840080 	orr	r0, r4, #128	; 0x80
4001c8a4:	eb00012d 	bl	4001cd60 <CyU3PUsbFlushEp>
4001c8a8:	e59f00b8 	ldr	r0, [pc, #184]	; 4001c968 <CyU3PUibInit+0x1b0>
4001c8ac:	e7900104 	ldr	r0, [r0, r4, lsl #2]
4001c8b0:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001c8b4:	e59f10ac 	ldr	r1, [pc, #172]	; 4001c968 <CyU3PUibInit+0x1b0>
4001c8b8:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c8bc:	e3a00000 	mov	r0, #0
4001c8c0:	e59f10a4 	ldr	r1, [pc, #164]	; 4001c96c <CyU3PUibInit+0x1b4>
4001c8c4:	e7810104 	str	r0, [r1, r4, lsl #2]
4001c8c8:	e2840001 	add	r0, r4, #1
4001c8cc:	e20040ff 	and	r4, r0, #255	; 0xff
4001c8d0:	e3540010 	cmp	r4, #16
4001c8d4:	baffffe7 	blt	4001c878 <CyU3PUibInit+0xc0>
4001c8d8:	e59f0090 	ldr	r0, [pc, #144]	; 4001c970 <CyU3PUibInit+0x1b8>
4001c8dc:	e5900004 	ldr	r0, [r0, #4]
4001c8e0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001c8e4:	e59f1084 	ldr	r1, [pc, #132]	; 4001c970 <CyU3PUibInit+0x1b8>
4001c8e8:	e5810004 	str	r0, [r1, #4]
4001c8ec:	e3e00000 	mvn	r0, #0
4001c8f0:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001c8f4:	e5810034 	str	r0, [r1, #52]	; 0x34
4001c8f8:	e3a00b01 	mov	r0, #1024	; 0x400
4001c8fc:	e5810038 	str	r0, [r1, #56]	; 0x38
4001c900:	e59f106c 	ldr	r1, [pc, #108]	; 4001c974 <CyU3PUibInit+0x1bc>
4001c904:	e5810074 	str	r0, [r1, #116]	; 0x74
4001c908:	e3a00015 	mov	r0, #21
4001c90c:	eb00166b 	bl	400222c0 <CyU3PVicEnableInt>
4001c910:	e59f0060 	ldr	r0, [pc, #96]	; 4001c978 <CyU3PUibInit+0x1c0>
4001c914:	e5900000 	ldr	r0, [r0]
4001c918:	e3500000 	cmp	r0, #0
4001c91c:	0a000008 	beq	4001c944 <CyU3PUibInit+0x18c>
4001c920:	e59f0054 	ldr	r0, [pc, #84]	; 4001c97c <CyU3PUibInit+0x1c4>
4001c924:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001c928:	e3100b01 	tst	r0, #1024	; 0x400
4001c92c:	0a000004 	beq	4001c944 <CyU3PUibInit+0x18c>
4001c930:	e3a01000 	mov	r1, #0
4001c934:	e3a0000b 	mov	r0, #11
4001c938:	e59f2038 	ldr	r2, [pc, #56]	; 4001c978 <CyU3PUibInit+0x1c0>
4001c93c:	e5922000 	ldr	r2, [r2]
4001c940:	e12fff32 	blx	r2
4001c944:	e8bd8010 	pop	{r4, pc}
4001c948:	e0050000 	.word	0xe0050000
4001c94c:	00038081 	.word	0x00038081
4001c950:	00004a3d 	.word	0x00004a3d
4001c954:	e0031000 	.word	0xe0031000
4001c958:	0000095c 	.word	0x0000095c
4001c95c:	00004040 	.word	0x00004040
4001c960:	e0031498 	.word	0xe0031498
4001c964:	e0033600 	.word	0xe0033600
4001c968:	e0031418 	.word	0xe0031418
4001c96c:	e0033500 	.word	0xe0033500
4001c970:	e0030000 	.word	0xe0030000
4001c974:	40031d40 	.word	0x40031d40
4001c978:	40030d9c 	.word	0x40030d9c
4001c97c:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbAckSetup:

4001c980 <CyU3PUsbAckSetup>:
4001c980:	e92d4010 	push	{r4, lr}
4001c984:	e3e01000 	mvn	r1, #0
4001c988:	e59f00fc 	ldr	r0, [pc, #252]	; 4001ca8c <CyU3PUsbAckSetup+0x10c>
4001c98c:	ebffb649 	bl	4000a2b8 <_txe_mutex_get>
4001c990:	eb000780 	bl	4001e798 <GetUsbLinkActive>
4001c994:	eb00019e 	bl	4001d014 <CyU3PUsbIsNewCtrlRqtRecvd>
4001c998:	e3500000 	cmp	r0, #0
4001c99c:	0a000002 	beq	4001c9ac <CyU3PUsbAckSetup+0x2c>
4001c9a0:	e59f00e4 	ldr	r0, [pc, #228]	; 4001ca8c <CyU3PUsbAckSetup+0x10c>
4001c9a4:	ebffb678 	bl	4000a38c <_txe_mutex_put>
4001c9a8:	e8bd8010 	pop	{r4, pc}
4001c9ac:	e3a00000 	mov	r0, #0
4001c9b0:	e59f10d8 	ldr	r1, [pc, #216]	; 4001ca90 <CyU3PUsbAckSetup+0x110>
4001c9b4:	e5810014 	str	r0, [r1, #20]
4001c9b8:	e2810000 	add	r0, r1, #0
4001c9bc:	e5d00009 	ldrb	r0, [r0, #9]
4001c9c0:	e3500003 	cmp	r0, #3
4001c9c4:	1a000026 	bne	4001ca64 <CyU3PUsbAckSetup+0xe4>
4001c9c8:	e59f00c4 	ldr	r0, [pc, #196]	; 4001ca94 <CyU3PUsbAckSetup+0x114>
4001c9cc:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001c9d0:	e3c00004 	bic	r0, r0, #4
4001c9d4:	e59f10b8 	ldr	r1, [pc, #184]	; 4001ca94 <CyU3PUsbAckSetup+0x114>
4001c9d8:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001c9dc:	e1a00001 	mov	r0, r1
4001c9e0:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001c9e4:	e3c00004 	bic	r0, r0, #4
4001c9e8:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001c9ec:	eb00162a 	bl	4002229c <CyU3PVicDisableAllInterrupts>
4001c9f0:	e1a04000 	mov	r4, r0
4001c9f4:	e3a00001 	mov	r0, #1
4001c9f8:	ebffdbad 	bl	400138b4 <CyU3PBusyWait>
4001c9fc:	e59f0090 	ldr	r0, [pc, #144]	; 4001ca94 <CyU3PUsbAckSetup+0x114>
4001ca00:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001ca04:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001ca08:	e59f1084 	ldr	r1, [pc, #132]	; 4001ca94 <CyU3PUsbAckSetup+0x114>
4001ca0c:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001ca10:	e1a00004 	mov	r0, r4
4001ca14:	eb00162e 	bl	400222d4 <CyU3PVicEnableInterrupts>
4001ca18:	e3a00c02 	mov	r0, #512	; 0x200
4001ca1c:	e59f1074 	ldr	r1, [pc, #116]	; 4001ca98 <CyU3PUsbAckSetup+0x118>
4001ca20:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001ca24:	e3a00016 	mov	r0, #22
4001ca28:	eb000ced 	bl	4001fde4 <CyU3PUsbAddToEventLog>
4001ca2c:	e59f005c 	ldr	r0, [pc, #92]	; 4001ca90 <CyU3PUsbAckSetup+0x110>
4001ca30:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001ca34:	e3500000 	cmp	r0, #0
4001ca38:	1a000010 	bne	4001ca80 <CyU3PUsbAckSetup+0x100>
4001ca3c:	e3a00001 	mov	r0, #1
4001ca40:	e59f1054 	ldr	r1, [pc, #84]	; 4001ca9c <CyU3PUsbAckSetup+0x11c>
4001ca44:	e5810000 	str	r0, [r1]
4001ca48:	e3a02000 	mov	r2, #0
4001ca4c:	e3a01064 	mov	r1, #100	; 0x64
4001ca50:	e59f0048 	ldr	r0, [pc, #72]	; 4001caa0 <CyU3PUsbAckSetup+0x120>
4001ca54:	ebffb865 	bl	4000abf0 <_txe_timer_change>
4001ca58:	e59f0040 	ldr	r0, [pc, #64]	; 4001caa0 <CyU3PUsbAckSetup+0x120>
4001ca5c:	ebffb853 	bl	4000abb0 <_txe_timer_activate>
4001ca60:	ea000006 	b	4001ca80 <CyU3PUsbAckSetup+0x100>
4001ca64:	e59f002c 	ldr	r0, [pc, #44]	; 4001ca98 <CyU3PUsbAckSetup+0x118>
4001ca68:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001ca6c:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001ca70:	e59f1020 	ldr	r1, [pc, #32]	; 4001ca98 <CyU3PUsbAckSetup+0x118>
4001ca74:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001ca78:	e3a00040 	mov	r0, #64	; 0x40
4001ca7c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4001ca80:	e59f0004 	ldr	r0, [pc, #4]	; 4001ca8c <CyU3PUsbAckSetup+0x10c>
4001ca84:	ebffb640 	bl	4000a38c <_txe_mutex_put>
4001ca88:	eaffffc6 	b	4001c9a8 <CyU3PUsbAckSetup+0x28>
4001ca8c:	40031ee0 	.word	0x40031ee0
4001ca90:	40031d40 	.word	0x40031d40
4001ca94:	e0033000 	.word	0xe0033000
4001ca98:	e0031000 	.word	0xe0031000
4001ca9c:	40030db0 	.word	0x40030db0
4001caa0:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUsbCreateDmaChannels:

4001caa4 <CyU3PUsbCreateDmaChannels>:
4001caa4:	e92d4010 	push	{r4, lr}
4001caa8:	e24dd020 	sub	sp, sp, #32
4001caac:	e3a00c02 	mov	r0, #512	; 0x200
4001cab0:	e1cd00b4 	strh	r0, [sp, #4]
4001cab4:	e3a00001 	mov	r0, #1
4001cab8:	e1cd00b6 	strh	r0, [sp, #6]
4001cabc:	e3a00000 	mov	r0, #0
4001cac0:	e1cd00bc 	strh	r0, [sp, #12]
4001cac4:	e3a00c03 	mov	r0, #768	; 0x300
4001cac8:	e1cd00ba 	strh	r0, [sp, #10]
4001cacc:	e3a00000 	mov	r0, #0
4001cad0:	e5cd0014 	strb	r0, [sp, #20]
4001cad4:	e1cd00be 	strh	r0, [sp, #14]
4001cad8:	e1cd01b0 	strh	r0, [sp, #16]
4001cadc:	e1cd01b2 	strh	r0, [sp, #18]
4001cae0:	e58d0018 	str	r0, [sp, #24]
4001cae4:	e58d001c 	str	r0, [sp, #28]
4001cae8:	e59f00ec 	ldr	r0, [pc, #236]	; 4001cbdc <CyU3PUsbCreateDmaChannels+0x138>
4001caec:	e1cd00b8 	strh	r0, [sp, #8]
4001caf0:	e28d2004 	add	r2, sp, #4
4001caf4:	e3a01004 	mov	r1, #4
4001caf8:	e59f00e0 	ldr	r0, [pc, #224]	; 4001cbe0 <CyU3PUsbCreateDmaChannels+0x13c>
4001cafc:	ebffe411 	bl	40015b48 <CyU3PDmaChannelCreate>
4001cb00:	e1a04000 	mov	r4, r0
4001cb04:	e3540000 	cmp	r4, #0
4001cb08:	0a000002 	beq	4001cb18 <CyU3PUsbCreateDmaChannels+0x74>
4001cb0c:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb10:	e28dd020 	add	sp, sp, #32
4001cb14:	e8bd8010 	pop	{r4, pc}
4001cb18:	e59f00c4 	ldr	r0, [pc, #196]	; 4001cbe4 <CyU3PUsbCreateDmaChannels+0x140>
4001cb1c:	e5900000 	ldr	r0, [r0]
4001cb20:	e3500000 	cmp	r0, #0
4001cb24:	0a000009 	beq	4001cb50 <CyU3PUsbCreateDmaChannels+0xac>
4001cb28:	e3a01001 	mov	r1, #1
4001cb2c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cbe0 <CyU3PUsbCreateDmaChannels+0x13c>
4001cb30:	ebffe274 	bl	40015508 <CyU3PDmaChannelCacheControl>
4001cb34:	e1a04000 	mov	r4, r0
4001cb38:	e3540000 	cmp	r4, #0
4001cb3c:	0a000003 	beq	4001cb50 <CyU3PUsbCreateDmaChannels+0xac>
4001cb40:	e59f0098 	ldr	r0, [pc, #152]	; 4001cbe0 <CyU3PUsbCreateDmaChannels+0x13c>
4001cb44:	ebffe4f9 	bl	40015f30 <CyU3PDmaChannelDestroy>
4001cb48:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb4c:	eaffffef 	b	4001cb10 <CyU3PUsbCreateDmaChannels+0x6c>
4001cb50:	e3a00b01 	mov	r0, #1024	; 0x400
4001cb54:	e1cd00b8 	strh	r0, [sp, #8]
4001cb58:	e3a00000 	mov	r0, #0
4001cb5c:	e58d001c 	str	r0, [sp, #28]
4001cb60:	e3a00c3f 	mov	r0, #16128	; 0x3f00
4001cb64:	e1cd00ba 	strh	r0, [sp, #10]
4001cb68:	e28d2004 	add	r2, sp, #4
4001cb6c:	e3a01003 	mov	r1, #3
4001cb70:	e59f0070 	ldr	r0, [pc, #112]	; 4001cbe8 <CyU3PUsbCreateDmaChannels+0x144>
4001cb74:	ebffe3f3 	bl	40015b48 <CyU3PDmaChannelCreate>
4001cb78:	e1a04000 	mov	r4, r0
4001cb7c:	e3540000 	cmp	r4, #0
4001cb80:	0a000003 	beq	4001cb94 <CyU3PUsbCreateDmaChannels+0xf0>
4001cb84:	e59f0054 	ldr	r0, [pc, #84]	; 4001cbe0 <CyU3PUsbCreateDmaChannels+0x13c>
4001cb88:	ebffe4e8 	bl	40015f30 <CyU3PDmaChannelDestroy>
4001cb8c:	e3a0004e 	mov	r0, #78	; 0x4e
4001cb90:	eaffffde 	b	4001cb10 <CyU3PUsbCreateDmaChannels+0x6c>
4001cb94:	e59f0048 	ldr	r0, [pc, #72]	; 4001cbe4 <CyU3PUsbCreateDmaChannels+0x140>
4001cb98:	e5900000 	ldr	r0, [r0]
4001cb9c:	e3500000 	cmp	r0, #0
4001cba0:	0a00000b 	beq	4001cbd4 <CyU3PUsbCreateDmaChannels+0x130>
4001cba4:	e3a01001 	mov	r1, #1
4001cba8:	e59f0038 	ldr	r0, [pc, #56]	; 4001cbe8 <CyU3PUsbCreateDmaChannels+0x144>
4001cbac:	ebffe255 	bl	40015508 <CyU3PDmaChannelCacheControl>
4001cbb0:	e1a04000 	mov	r4, r0
4001cbb4:	e3540000 	cmp	r4, #0
4001cbb8:	0a000005 	beq	4001cbd4 <CyU3PUsbCreateDmaChannels+0x130>
4001cbbc:	e59f001c 	ldr	r0, [pc, #28]	; 4001cbe0 <CyU3PUsbCreateDmaChannels+0x13c>
4001cbc0:	ebffe4da 	bl	40015f30 <CyU3PDmaChannelDestroy>
4001cbc4:	e59f001c 	ldr	r0, [pc, #28]	; 4001cbe8 <CyU3PUsbCreateDmaChannels+0x144>
4001cbc8:	ebffe4d8 	bl	40015f30 <CyU3PDmaChannelDestroy>
4001cbcc:	e3a0004e 	mov	r0, #78	; 0x4e
4001cbd0:	eaffffce 	b	4001cb10 <CyU3PUsbCreateDmaChannels+0x6c>
4001cbd4:	e1a00004 	mov	r0, r4
4001cbd8:	eaffffcc 	b	4001cb10 <CyU3PUsbCreateDmaChannels+0x6c>
4001cbdc:	00003f01 	.word	0x00003f01
4001cbe0:	40031a80 	.word	0x40031a80
4001cbe4:	40030c60 	.word	0x40030c60
4001cbe8:	40031b20 	.word	0x40031b20

Disassembly of section i.CyU3PUsbEnableEpInterrupts:

4001cbec <CyU3PUsbEnableEpInterrupts>:
4001cbec:	e200300f 	and	r3, r0, #15
4001cbf0:	e3100080 	tst	r0, #128	; 0x80
4001cbf4:	0a00002a 	beq	4001cca4 <CyU3PUsbEnableEpInterrupts+0xb8>
4001cbf8:	e59fc150 	ldr	ip, [pc, #336]	; 4001cd50 <CyU3PUsbEnableEpInterrupts+0x164>
4001cbfc:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cc00:	e3120901 	tst	r2, #16384	; 0x4000
4001cc04:	0a00000d 	beq	4001cc40 <CyU3PUsbEnableEpInterrupts+0x54>
4001cc08:	e3110001 	tst	r1, #1
4001cc0c:	0a000000 	beq	4001cc14 <CyU3PUsbEnableEpInterrupts+0x28>
4001cc10:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001cc14:	e3110002 	tst	r1, #2
4001cc18:	0a000000 	beq	4001cc20 <CyU3PUsbEnableEpInterrupts+0x34>
4001cc1c:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001cc20:	e3110004 	tst	r1, #4
4001cc24:	0a000000 	beq	4001cc2c <CyU3PUsbEnableEpInterrupts+0x40>
4001cc28:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001cc2c:	e3110008 	tst	r1, #8
4001cc30:	0a000000 	beq	4001cc38 <CyU3PUsbEnableEpInterrupts+0x4c>
4001cc34:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001cc38:	e59fc110 	ldr	ip, [pc, #272]	; 4001cd50 <CyU3PUsbEnableEpInterrupts+0x164>
4001cc3c:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cc40:	e59fc10c 	ldr	ip, [pc, #268]	; 4001cd54 <CyU3PUsbEnableEpInterrupts+0x168>
4001cc44:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001cc48:	e3120001 	tst	r2, #1
4001cc4c:	0a00003e 	beq	4001cd4c <CyU3PUsbEnableEpInterrupts+0x160>
4001cc50:	e3110001 	tst	r1, #1
4001cc54:	0a000000 	beq	4001cc5c <CyU3PUsbEnableEpInterrupts+0x70>
4001cc58:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cc5c:	e3110002 	tst	r1, #2
4001cc60:	0a000000 	beq	4001cc68 <CyU3PUsbEnableEpInterrupts+0x7c>
4001cc64:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cc68:	e3110004 	tst	r1, #4
4001cc6c:	0a000000 	beq	4001cc74 <CyU3PUsbEnableEpInterrupts+0x88>
4001cc70:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cc74:	e3110010 	tst	r1, #16
4001cc78:	0a000000 	beq	4001cc80 <CyU3PUsbEnableEpInterrupts+0x94>
4001cc7c:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cc80:	e3110020 	tst	r1, #32
4001cc84:	0a000000 	beq	4001cc8c <CyU3PUsbEnableEpInterrupts+0xa0>
4001cc88:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cc8c:	e3110040 	tst	r1, #64	; 0x40
4001cc90:	0a000000 	beq	4001cc98 <CyU3PUsbEnableEpInterrupts+0xac>
4001cc94:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cc98:	e59fc0b4 	ldr	ip, [pc, #180]	; 4001cd54 <CyU3PUsbEnableEpInterrupts+0x168>
4001cc9c:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cca0:	ea000029 	b	4001cd4c <CyU3PUsbEnableEpInterrupts+0x160>
4001cca4:	e59fc0ac 	ldr	ip, [pc, #172]	; 4001cd58 <CyU3PUsbEnableEpInterrupts+0x16c>
4001cca8:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001ccac:	e3120901 	tst	r2, #16384	; 0x4000
4001ccb0:	0a00000d 	beq	4001ccec <CyU3PUsbEnableEpInterrupts+0x100>
4001ccb4:	e3110001 	tst	r1, #1
4001ccb8:	0a000000 	beq	4001ccc0 <CyU3PUsbEnableEpInterrupts+0xd4>
4001ccbc:	e3822302 	orr	r2, r2, #134217728	; 0x8000000
4001ccc0:	e3110002 	tst	r1, #2
4001ccc4:	0a000000 	beq	4001cccc <CyU3PUsbEnableEpInterrupts+0xe0>
4001ccc8:	e3822202 	orr	r2, r2, #536870912	; 0x20000000
4001cccc:	e3110004 	tst	r1, #4
4001ccd0:	0a000000 	beq	4001ccd8 <CyU3PUsbEnableEpInterrupts+0xec>
4001ccd4:	e3822101 	orr	r2, r2, #1073741824	; 0x40000000
4001ccd8:	e3110008 	tst	r1, #8
4001ccdc:	0a000000 	beq	4001cce4 <CyU3PUsbEnableEpInterrupts+0xf8>
4001cce0:	e3822102 	orr	r2, r2, #-2147483648	; 0x80000000
4001cce4:	e59fc06c 	ldr	ip, [pc, #108]	; 4001cd58 <CyU3PUsbEnableEpInterrupts+0x16c>
4001cce8:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001ccec:	e59fc068 	ldr	ip, [pc, #104]	; 4001cd5c <CyU3PUsbEnableEpInterrupts+0x170>
4001ccf0:	e79c2103 	ldr	r2, [ip, r3, lsl #2]
4001ccf4:	e3120001 	tst	r2, #1
4001ccf8:	0a000013 	beq	4001cd4c <CyU3PUsbEnableEpInterrupts+0x160>
4001ccfc:	e3110001 	tst	r1, #1
4001cd00:	0a000000 	beq	4001cd08 <CyU3PUsbEnableEpInterrupts+0x11c>
4001cd04:	e3822602 	orr	r2, r2, #2097152	; 0x200000
4001cd08:	e3110002 	tst	r1, #2
4001cd0c:	0a000000 	beq	4001cd14 <CyU3PUsbEnableEpInterrupts+0x128>
4001cd10:	e3822502 	orr	r2, r2, #8388608	; 0x800000
4001cd14:	e3110004 	tst	r1, #4
4001cd18:	0a000000 	beq	4001cd20 <CyU3PUsbEnableEpInterrupts+0x134>
4001cd1c:	e3822401 	orr	r2, r2, #16777216	; 0x1000000
4001cd20:	e3110010 	tst	r1, #16
4001cd24:	0a000000 	beq	4001cd2c <CyU3PUsbEnableEpInterrupts+0x140>
4001cd28:	e3822601 	orr	r2, r2, #1048576	; 0x100000
4001cd2c:	e3110020 	tst	r1, #32
4001cd30:	0a000000 	beq	4001cd38 <CyU3PUsbEnableEpInterrupts+0x14c>
4001cd34:	e3822402 	orr	r2, r2, #33554432	; 0x2000000
4001cd38:	e3110040 	tst	r1, #64	; 0x40
4001cd3c:	0a000000 	beq	4001cd44 <CyU3PUsbEnableEpInterrupts+0x158>
4001cd40:	e3822201 	orr	r2, r2, #268435456	; 0x10000000
4001cd44:	e59fc010 	ldr	ip, [pc, #16]	; 4001cd5c <CyU3PUsbEnableEpInterrupts+0x170>
4001cd48:	e78c2103 	str	r2, [ip, r3, lsl #2]
4001cd4c:	e12fff1e 	bx	lr
4001cd50:	e0031418 	.word	0xe0031418
4001cd54:	e0033500 	.word	0xe0033500
4001cd58:	e0031498 	.word	0xe0031498
4001cd5c:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbFlushEp:

4001cd60 <CyU3PUsbFlushEp>:
4001cd60:	e92d4070 	push	{r4, r5, r6, lr}
4001cd64:	e1a04000 	mov	r4, r0
4001cd68:	e204507f 	and	r5, r4, #127	; 0x7f
4001cd6c:	e59f00a8 	ldr	r0, [pc, #168]	; 4001ce1c <CyU3PUsbFlushEp+0xbc>
4001cd70:	e5d00008 	ldrb	r0, [r0, #8]
4001cd74:	e3500000 	cmp	r0, #0
4001cd78:	1a000001 	bne	4001cd84 <CyU3PUsbFlushEp+0x24>
4001cd7c:	e3a00042 	mov	r0, #66	; 0x42
4001cd80:	e8bd8070 	pop	{r4, r5, r6, pc}
4001cd84:	e355000f 	cmp	r5, #15
4001cd88:	da000001 	ble	4001cd94 <CyU3PUsbFlushEp+0x34>
4001cd8c:	e3a00040 	mov	r0, #64	; 0x40
4001cd90:	eafffffa 	b	4001cd80 <CyU3PUsbFlushEp+0x20>
4001cd94:	e3e01000 	mvn	r1, #0
4001cd98:	e59f0080 	ldr	r0, [pc, #128]	; 4001ce20 <CyU3PUsbFlushEp+0xc0>
4001cd9c:	ebffb545 	bl	4000a2b8 <_txe_mutex_get>
4001cda0:	e3140080 	tst	r4, #128	; 0x80
4001cda4:	0a00000c 	beq	4001cddc <CyU3PUsbFlushEp+0x7c>
4001cda8:	e59f0074 	ldr	r0, [pc, #116]	; 4001ce24 <CyU3PUsbFlushEp+0xc4>
4001cdac:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cdb0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cdb4:	e59f1068 	ldr	r1, [pc, #104]	; 4001ce24 <CyU3PUsbFlushEp+0xc4>
4001cdb8:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cdbc:	e3a0000a 	mov	r0, #10
4001cdc0:	ebffdabb 	bl	400138b4 <CyU3PBusyWait>
4001cdc4:	e59f0058 	ldr	r0, [pc, #88]	; 4001ce24 <CyU3PUsbFlushEp+0xc4>
4001cdc8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cdcc:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001cdd0:	e59f104c 	ldr	r1, [pc, #76]	; 4001ce24 <CyU3PUsbFlushEp+0xc4>
4001cdd4:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cdd8:	ea00000b 	b	4001ce0c <CyU3PUsbFlushEp+0xac>
4001cddc:	e59f0044 	ldr	r0, [pc, #68]	; 4001ce28 <CyU3PUsbFlushEp+0xc8>
4001cde0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001cde4:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001cde8:	e59f1038 	ldr	r1, [pc, #56]	; 4001ce28 <CyU3PUsbFlushEp+0xc8>
4001cdec:	e7810105 	str	r0, [r1, r5, lsl #2]
4001cdf0:	e3a0000a 	mov	r0, #10
4001cdf4:	ebffdaae 	bl	400138b4 <CyU3PBusyWait>
4001cdf8:	e59f0028 	ldr	r0, [pc, #40]	; 4001ce28 <CyU3PUsbFlushEp+0xc8>
4001cdfc:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001ce00:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001ce04:	e59f101c 	ldr	r1, [pc, #28]	; 4001ce28 <CyU3PUsbFlushEp+0xc8>
4001ce08:	e7810105 	str	r0, [r1, r5, lsl #2]
4001ce0c:	e59f000c 	ldr	r0, [pc, #12]	; 4001ce20 <CyU3PUsbFlushEp+0xc0>
4001ce10:	ebffb55d 	bl	4000a38c <_txe_mutex_put>
4001ce14:	e3a00000 	mov	r0, #0
4001ce18:	eaffffd8 	b	4001cd80 <CyU3PUsbFlushEp+0x20>
4001ce1c:	40031d40 	.word	0x40031d40
4001ce20:	40031ee0 	.word	0x40031ee0
4001ce24:	e0031c40 	.word	0xe0031c40
4001ce28:	e0031c80 	.word	0xe0031c80

Disassembly of section i.CyU3PUsbGetEP0Data:

4001ce2c <CyU3PUsbGetEP0Data>:
4001ce2c:	e92d43fe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, lr}
4001ce30:	e1a04000 	mov	r4, r0
4001ce34:	e1a05001 	mov	r5, r1
4001ce38:	e1a06002 	mov	r6, r2
4001ce3c:	e59f8198 	ldr	r8, [pc, #408]	; 4001cfdc <CyU3PUsbGetEP0Data+0x1b0>
4001ce40:	e59f0198 	ldr	r0, [pc, #408]	; 4001cfe0 <CyU3PUsbGetEP0Data+0x1b4>
4001ce44:	e5d00008 	ldrb	r0, [r0, #8]
4001ce48:	e3500000 	cmp	r0, #0
4001ce4c:	1a000001 	bne	4001ce58 <CyU3PUsbGetEP0Data+0x2c>
4001ce50:	e3a00042 	mov	r0, #66	; 0x42
4001ce54:	e8bd83fe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, pc}
4001ce58:	e3550000 	cmp	r5, #0
4001ce5c:	1a000001 	bne	4001ce68 <CyU3PUsbGetEP0Data+0x3c>
4001ce60:	e3a00040 	mov	r0, #64	; 0x40
4001ce64:	eafffffa 	b	4001ce54 <CyU3PUsbGetEP0Data+0x28>
4001ce68:	e3e01000 	mvn	r1, #0
4001ce6c:	e59f0170 	ldr	r0, [pc, #368]	; 4001cfe4 <CyU3PUsbGetEP0Data+0x1b8>
4001ce70:	ebffb510 	bl	4000a2b8 <_txe_mutex_get>
4001ce74:	e284000f 	add	r0, r4, #15
4001ce78:	e59f1168 	ldr	r1, [pc, #360]	; 4001cfe8 <CyU3PUsbGetEP0Data+0x1bc>
4001ce7c:	e0004001 	and	r4, r0, r1
4001ce80:	e59f0164 	ldr	r0, [pc, #356]	; 4001cfec <CyU3PUsbGetEP0Data+0x1c0>
4001ce84:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ce88:	e3c00008 	bic	r0, r0, #8
4001ce8c:	e59f1158 	ldr	r1, [pc, #344]	; 4001cfec <CyU3PUsbGetEP0Data+0x1c0>
4001ce90:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ce94:	e59f0144 	ldr	r0, [pc, #324]	; 4001cfe0 <CyU3PUsbGetEP0Data+0x1b4>
4001ce98:	e5900018 	ldr	r0, [r0, #24]
4001ce9c:	e3500000 	cmp	r0, #0
4001cea0:	1a000002 	bne	4001ceb0 <CyU3PUsbGetEP0Data+0x84>
4001cea4:	eb00005a 	bl	4001d014 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cea8:	e3500000 	cmp	r0, #0
4001ceac:	0a000008 	beq	4001ced4 <CyU3PUsbGetEP0Data+0xa8>
4001ceb0:	e59f0134 	ldr	r0, [pc, #308]	; 4001cfec <CyU3PUsbGetEP0Data+0x1c0>
4001ceb4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ceb8:	e3800008 	orr	r0, r0, #8
4001cebc:	e59f1128 	ldr	r1, [pc, #296]	; 4001cfec <CyU3PUsbGetEP0Data+0x1c0>
4001cec0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cec4:	e59f0118 	ldr	r0, [pc, #280]	; 4001cfe4 <CyU3PUsbGetEP0Data+0x1b8>
4001cec8:	ebffb52f 	bl	4000a38c <_txe_mutex_put>
4001cecc:	e3a00051 	mov	r0, #81	; 0x51
4001ced0:	eaffffdf 	b	4001ce54 <CyU3PUsbGetEP0Data+0x28>
4001ced4:	e59f0110 	ldr	r0, [pc, #272]	; 4001cfec <CyU3PUsbGetEP0Data+0x1c0>
4001ced8:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001cedc:	e3800008 	orr	r0, r0, #8
4001cee0:	e59f1104 	ldr	r1, [pc, #260]	; 4001cfec <CyU3PUsbGetEP0Data+0x1c0>
4001cee4:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001cee8:	eb00062a 	bl	4001e798 <GetUsbLinkActive>
4001ceec:	e1cd40b6 	strh	r4, [sp, #6]
4001cef0:	e58d5000 	str	r5, [sp]
4001cef4:	e3a00000 	mov	r0, #0
4001cef8:	e1cd00b8 	strh	r0, [sp, #8]
4001cefc:	e1a0100d 	mov	r1, sp
4001cf00:	e59f00e8 	ldr	r0, [pc, #232]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1c4>
4001cf04:	ebffe75f 	bl	40016c88 <CyU3PDmaChannelSetupRecvBuffer>
4001cf08:	e20070ff 	and	r7, r0, #255	; 0xff
4001cf0c:	e59f00d0 	ldr	r0, [pc, #208]	; 4001cfe4 <CyU3PUsbGetEP0Data+0x1b8>
4001cf10:	ebffb51d 	bl	4000a38c <_txe_mutex_put>
4001cf14:	e3570000 	cmp	r7, #0
4001cf18:	1a00002d 	bne	4001cfd4 <CyU3PUsbGetEP0Data+0x1a8>
4001cf1c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001cfe0 <CyU3PUsbGetEP0Data+0x1b4>
4001cf20:	e5900014 	ldr	r0, [r0, #20]
4001cf24:	e3500000 	cmp	r0, #0
4001cf28:	0a000000 	beq	4001cf30 <CyU3PUsbGetEP0Data+0x104>
4001cf2c:	ebfffe93 	bl	4001c980 <CyU3PUsbAckSetup>
4001cf30:	ea00000e 	b	4001cf70 <CyU3PUsbGetEP0Data+0x144>
4001cf34:	e3a02064 	mov	r2, #100	; 0x64
4001cf38:	e1a0100d 	mov	r1, sp
4001cf3c:	e59f00ac 	ldr	r0, [pc, #172]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1c4>
4001cf40:	ebffe8b2 	bl	40017210 <CyU3PDmaChannelWaitForRecvBuffer>
4001cf44:	e20070ff 	and	r7, r0, #255	; 0xff
4001cf48:	e3570045 	cmp	r7, #69	; 0x45
4001cf4c:	1a000006 	bne	4001cf6c <CyU3PUsbGetEP0Data+0x140>
4001cf50:	eb00002f 	bl	4001d014 <CyU3PUsbIsNewCtrlRqtRecvd>
4001cf54:	e3500000 	cmp	r0, #0
4001cf58:	0a000001 	beq	4001cf64 <CyU3PUsbGetEP0Data+0x138>
4001cf5c:	e3a00051 	mov	r0, #81	; 0x51
4001cf60:	eaffffbb 	b	4001ce54 <CyU3PUsbGetEP0Data+0x28>
4001cf64:	e2488064 	sub	r8, r8, #100	; 0x64
4001cf68:	ea000000 	b	4001cf70 <CyU3PUsbGetEP0Data+0x144>
4001cf6c:	ea000001 	b	4001cf78 <CyU3PUsbGetEP0Data+0x14c>
4001cf70:	e3580000 	cmp	r8, #0
4001cf74:	1affffee 	bne	4001cf34 <CyU3PUsbGetEP0Data+0x108>
4001cf78:	e1a00000 	nop			; (mov r0, r0)
4001cf7c:	e3570000 	cmp	r7, #0
4001cf80:	0a00000f 	beq	4001cfc4 <CyU3PUsbGetEP0Data+0x198>
4001cf84:	e3e01000 	mvn	r1, #0
4001cf88:	e59f0054 	ldr	r0, [pc, #84]	; 4001cfe4 <CyU3PUsbGetEP0Data+0x1b8>
4001cf8c:	ebffb4c9 	bl	4000a2b8 <_txe_mutex_get>
4001cf90:	e3a01001 	mov	r1, #1
4001cf94:	e3a00000 	mov	r0, #0
4001cf98:	eb000376 	bl	4001dd78 <CyU3PUsbSetEpNak>
4001cf9c:	e3a00064 	mov	r0, #100	; 0x64
4001cfa0:	ebffda43 	bl	400138b4 <CyU3PBusyWait>
4001cfa4:	e59f0044 	ldr	r0, [pc, #68]	; 4001cff0 <CyU3PUsbGetEP0Data+0x1c4>
4001cfa8:	ebffe57b 	bl	4001659c <CyU3PDmaChannelReset>
4001cfac:	e3a01000 	mov	r1, #0
4001cfb0:	e1a00001 	mov	r0, r1
4001cfb4:	eb00036f 	bl	4001dd78 <CyU3PUsbSetEpNak>
4001cfb8:	e59f0024 	ldr	r0, [pc, #36]	; 4001cfe4 <CyU3PUsbGetEP0Data+0x1b8>
4001cfbc:	ebffb4f2 	bl	4000a38c <_txe_mutex_put>
4001cfc0:	ea000003 	b	4001cfd4 <CyU3PUsbGetEP0Data+0x1a8>
4001cfc4:	e3560000 	cmp	r6, #0
4001cfc8:	0a000001 	beq	4001cfd4 <CyU3PUsbGetEP0Data+0x1a8>
4001cfcc:	e1dd00b4 	ldrh	r0, [sp, #4]
4001cfd0:	e1c600b0 	strh	r0, [r6]
4001cfd4:	e1a00007 	mov	r0, r7
4001cfd8:	eaffff9d 	b	4001ce54 <CyU3PUsbGetEP0Data+0x28>
4001cfdc:	00001388 	.word	0x00001388
4001cfe0:	40031d40 	.word	0x40031d40
4001cfe4:	40031ee0 	.word	0x40031ee0
4001cfe8:	0000fff0 	.word	0x0000fff0
4001cfec:	e0031000 	.word	0xe0031000
4001cff0:	40031b20 	.word	0x40031b20

Disassembly of section i.CyU3PUsbGetSpeed:

4001cff4 <CyU3PUsbGetSpeed>:
4001cff4:	e59f0004 	ldr	r0, [pc, #4]	; 4001d000 <CyU3PUsbGetSpeed+0xc>
4001cff8:	e5d00009 	ldrb	r0, [r0, #9]
4001cffc:	e12fff1e 	bx	lr
4001d000:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHostIsStarted:

4001d004 <CyU3PUsbHostIsStarted>:
4001d004:	e59f0004 	ldr	r0, [pc, #4]	; 4001d010 <CyU3PUsbHostIsStarted+0xc>
4001d008:	e5900000 	ldr	r0, [r0]
4001d00c:	e12fff1e 	bx	lr
4001d010:	40030d5c 	.word	0x40030d5c

Disassembly of section i.CyU3PUsbIsNewCtrlRqtRecvd:

4001d014 <CyU3PUsbIsNewCtrlRqtRecvd>:
4001d014:	e59f0038 	ldr	r0, [pc, #56]	; 4001d054 <CyU3PUsbIsNewCtrlRqtRecvd+0x40>
4001d018:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001d01c:	e3500000 	cmp	r0, #0
4001d020:	1a000007 	bne	4001d044 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001d024:	e59f002c 	ldr	r0, [pc, #44]	; 4001d058 <CyU3PUsbIsNewCtrlRqtRecvd+0x44>
4001d028:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
4001d02c:	e3100040 	tst	r0, #64	; 0x40
4001d030:	1a000003 	bne	4001d044 <CyU3PUsbIsNewCtrlRqtRecvd+0x30>
4001d034:	e59f0020 	ldr	r0, [pc, #32]	; 4001d05c <CyU3PUsbIsNewCtrlRqtRecvd+0x48>
4001d038:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001d03c:	e3100c02 	tst	r0, #512	; 0x200
4001d040:	0a000001 	beq	4001d04c <CyU3PUsbIsNewCtrlRqtRecvd+0x38>
4001d044:	e3a00001 	mov	r0, #1
4001d048:	e12fff1e 	bx	lr
4001d04c:	e3a00000 	mov	r0, #0
4001d050:	eafffffc 	b	4001d048 <CyU3PUsbIsNewCtrlRqtRecvd+0x34>
4001d054:	40031d40 	.word	0x40031d40
4001d058:	e0031000 	.word	0xe0031000
4001d05c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbLoadBootloaderDescs:

4001d060 <CyU3PUsbLoadBootloaderDescs>:
4001d060:	e92d40f0 	push	{r4, r5, r6, r7, lr}
4001d064:	e1a04000 	mov	r4, r0
4001d068:	e3a06000 	mov	r6, #0
4001d06c:	e5940008 	ldr	r0, [r4, #8]
4001d070:	e20070ff 	and	r7, r0, #255	; 0xff
4001d074:	e1a00000 	nop			; (mov r0, r0)
4001d078:	ea00000f 	b	4001d0bc <CyU3PUsbLoadBootloaderDescs+0x5c>
4001d07c:	e2843010 	add	r3, r4, #16
4001d080:	e0833186 	add	r3, r3, r6, lsl #3
4001d084:	e5932004 	ldr	r2, [r3, #4]
4001d088:	e2843010 	add	r3, r4, #16
4001d08c:	e0833186 	add	r3, r3, r6, lsl #3
4001d090:	e5d31001 	ldrb	r1, [r3, #1]
4001d094:	e2843010 	add	r3, r4, #16
4001d098:	e7d30186 	ldrb	r0, [r3, r6, lsl #3]
4001d09c:	eb0002bf 	bl	4001dba0 <CyU3PUsbSetDesc>
4001d0a0:	e1a05000 	mov	r5, r0
4001d0a4:	e3550000 	cmp	r5, #0
4001d0a8:	0a000001 	beq	4001d0b4 <CyU3PUsbLoadBootloaderDescs+0x54>
4001d0ac:	e1a00005 	mov	r0, r5
4001d0b0:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}
4001d0b4:	e2860001 	add	r0, r6, #1
4001d0b8:	e20060ff 	and	r6, r0, #255	; 0xff
4001d0bc:	e1560007 	cmp	r6, r7
4001d0c0:	baffffed 	blt	4001d07c <CyU3PUsbLoadBootloaderDescs+0x1c>
4001d0c4:	e3a00000 	mov	r0, #0
4001d0c8:	eafffff8 	b	4001d0b0 <CyU3PUsbLoadBootloaderDescs+0x50>

Disassembly of section i.CyU3PUsbMapStream:

4001d0cc <CyU3PUsbMapStream>:
4001d0cc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001d0d0:	e1a03000 	mov	r3, r0
4001d0d4:	e203c07f 	and	ip, r3, #127	; 0x7f
4001d0d8:	e59f005c 	ldr	r0, [pc, #92]	; 4001d13c <CyU3PUsbMapStream+0x70>
4001d0dc:	e5d00008 	ldrb	r0, [r0, #8]
4001d0e0:	e3500000 	cmp	r0, #0
4001d0e4:	1a000001 	bne	4001d0f0 <CyU3PUsbMapStream+0x24>
4001d0e8:	e3a00042 	mov	r0, #66	; 0x42
4001d0ec:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001d0f0:	e35c000f 	cmp	ip, #15
4001d0f4:	da000001 	ble	4001d100 <CyU3PUsbMapStream+0x34>
4001d0f8:	e3a00040 	mov	r0, #64	; 0x40
4001d0fc:	eafffffa 	b	4001d0ec <CyU3PUsbMapStream+0x20>
4001d100:	e3130080 	tst	r3, #128	; 0x80
4001d104:	0a000005 	beq	4001d120 <CyU3PUsbMapStream+0x54>
4001d108:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d10c:	e180080c 	orr	r0, r0, ip, lsl #16
4001d110:	e1800002 	orr	r0, r0, r2
4001d114:	e59fe024 	ldr	lr, [pc, #36]	; 4001d140 <CyU3PUsbMapStream+0x74>
4001d118:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d11c:	ea000004 	b	4001d134 <CyU3PUsbMapStream+0x68>
4001d120:	e3a00102 	mov	r0, #-2147483648	; 0x80000000
4001d124:	e180080c 	orr	r0, r0, ip, lsl #16
4001d128:	e1800002 	orr	r0, r0, r2
4001d12c:	e59fe010 	ldr	lr, [pc, #16]	; 4001d144 <CyU3PUsbMapStream+0x78>
4001d130:	e78e0101 	str	r0, [lr, r1, lsl #2]
4001d134:	e3a00000 	mov	r0, #0
4001d138:	eaffffeb 	b	4001d0ec <CyU3PUsbMapStream+0x20>
4001d13c:	40031d40 	.word	0x40031d40
4001d140:	e00335c0 	.word	0xe00335c0
4001d144:	e00336c0 	.word	0xe00336c0

Disassembly of section i.CyU3PUsbOtgVbusChangeHandler:

4001d148 <CyU3PUsbOtgVbusChangeHandler>:
4001d148:	e92d4010 	push	{r4, lr}
4001d14c:	e3a04000 	mov	r4, #0
4001d150:	e59f0094 	ldr	r0, [pc, #148]	; 4001d1ec <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d154:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001d158:	e3500000 	cmp	r0, #0
4001d15c:	0a000005 	beq	4001d178 <CyU3PUsbOtgVbusChangeHandler+0x30>
4001d160:	e59f0088 	ldr	r0, [pc, #136]	; 4001d1f0 <CyU3PUsbOtgVbusChangeHandler+0xa8>
4001d164:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001d168:	e59f107c 	ldr	r1, [pc, #124]	; 4001d1ec <CyU3PUsbOtgVbusChangeHandler+0xa4>
4001d16c:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001d170:	e1100001 	tst	r0, r1
4001d174:	0a000008 	beq	4001d19c <CyU3PUsbOtgVbusChangeHandler+0x54>
4001d178:	e3a04001 	mov	r4, #1
4001d17c:	e3a00018 	mov	r0, #24
4001d180:	e59f106c 	ldr	r1, [pc, #108]	; 4001d1f4 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d184:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d188:	e1c10000 	bic	r0, r1, r0
4001d18c:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d190:	e3c00018 	bic	r0, r0, #24
4001d194:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d198:	ea000009 	b	4001d1c4 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d19c:	ebfffbb2 	bl	4001c06c <CyU3POtgIsHostMode>
4001d1a0:	e3500000 	cmp	r0, #0
4001d1a4:	0a000006 	beq	4001d1c4 <CyU3PUsbOtgVbusChangeHandler+0x7c>
4001d1a8:	e3a00018 	mov	r0, #24
4001d1ac:	e59f1040 	ldr	r1, [pc, #64]	; 4001d1f4 <CyU3PUsbOtgVbusChangeHandler+0xac>
4001d1b0:	e5810810 	str	r0, [r1, #2064]	; 0x810
4001d1b4:	e1c10000 	bic	r0, r1, r0
4001d1b8:	e5900814 	ldr	r0, [r0, #2068]	; 0x814
4001d1bc:	e3800018 	orr	r0, r0, #24
4001d1c0:	e5810814 	str	r0, [r1, #2068]	; 0x814
4001d1c4:	e59f002c 	ldr	r0, [pc, #44]	; 4001d1f8 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d1c8:	e5900004 	ldr	r0, [r0, #4]
4001d1cc:	e3500000 	cmp	r0, #0
4001d1d0:	0a000004 	beq	4001d1e8 <CyU3PUsbOtgVbusChangeHandler+0xa0>
4001d1d4:	e59f001c 	ldr	r0, [pc, #28]	; 4001d1f8 <CyU3PUsbOtgVbusChangeHandler+0xb0>
4001d1d8:	e1a01004 	mov	r1, r4
4001d1dc:	e5902004 	ldr	r2, [r0, #4]
4001d1e0:	e3a00002 	mov	r0, #2
4001d1e4:	e12fff32 	blx	r2
4001d1e8:	e8bd8010 	pop	{r4, pc}
4001d1ec:	40031d40 	.word	0x40031d40
4001d1f0:	e0051000 	.word	0xe0051000
4001d1f4:	e0031000 	.word	0xe0031000
4001d1f8:	40030d54 	.word	0x40030d54

Disassembly of section i.CyU3PUsbPhyDisable:

4001d1fc <CyU3PUsbPhyDisable>:
4001d1fc:	e92d4010 	push	{r4, lr}
4001d200:	e1a04000 	mov	r4, r0
4001d204:	e2841003 	add	r1, r4, #3
4001d208:	e20100ff 	and	r0, r1, #255	; 0xff
4001d20c:	eb000af4 	bl	4001fde4 <CyU3PUsbAddToEventLog>
4001d210:	e3a00000 	mov	r0, #0
4001d214:	e59f1184 	ldr	r1, [pc, #388]	; 4001d3a0 <CyU3PUsbPhyDisable+0x1a4>
4001d218:	e5810000 	str	r0, [r1]
4001d21c:	e59f0180 	ldr	r0, [pc, #384]	; 4001d3a4 <CyU3PUsbPhyDisable+0x1a8>
4001d220:	ebffb706 	bl	4000ae40 <_txe_timer_deactivate>
4001d224:	e3a00008 	mov	r0, #8
4001d228:	eb00141f 	bl	400222ac <CyU3PVicDisableInt>
4001d22c:	e59f0174 	ldr	r0, [pc, #372]	; 4001d3a8 <CyU3PUsbPhyDisable+0x1ac>
4001d230:	e5900004 	ldr	r0, [r0, #4]
4001d234:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001d238:	e59f1168 	ldr	r1, [pc, #360]	; 4001d3a8 <CyU3PUsbPhyDisable+0x1ac>
4001d23c:	e5810004 	str	r0, [r1, #4]
4001d240:	e3e00000 	mvn	r0, #0
4001d244:	e0411600 	sub	r1, r1, r0, lsl #12
4001d248:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d24c:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d250:	e59f0154 	ldr	r0, [pc, #340]	; 4001d3ac <CyU3PUsbPhyDisable+0x1b0>
4001d254:	ebffe4d0 	bl	4001659c <CyU3PDmaChannelReset>
4001d258:	e59f0150 	ldr	r0, [pc, #336]	; 4001d3b0 <CyU3PUsbPhyDisable+0x1b4>
4001d25c:	ebffe4ce 	bl	4001659c <CyU3PDmaChannelReset>
4001d260:	e3540000 	cmp	r4, #0
4001d264:	0a00002b 	beq	4001d318 <CyU3PUsbPhyDisable+0x11c>
4001d268:	e3a00001 	mov	r0, #1
4001d26c:	e59f1140 	ldr	r1, [pc, #320]	; 4001d3b4 <CyU3PUsbPhyDisable+0x1b8>
4001d270:	e5810060 	str	r0, [r1, #96]	; 0x60
4001d274:	ebffb630 	bl	4000ab3c <_txe_thread_relinquish>
4001d278:	e3e00000 	mvn	r0, #0
4001d27c:	e59f1134 	ldr	r1, [pc, #308]	; 4001d3b8 <CyU3PUsbPhyDisable+0x1bc>
4001d280:	e5810004 	str	r0, [r1, #4]
4001d284:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d288:	e0010000 	and	r0, r1, r0
4001d28c:	e5900014 	ldr	r0, [r0, #20]
4001d290:	e59f1124 	ldr	r1, [pc, #292]	; 4001d3bc <CyU3PUsbPhyDisable+0x1c0>
4001d294:	e5810000 	str	r0, [r1]
4001d298:	e3a00000 	mov	r0, #0
4001d29c:	e59f111c 	ldr	r1, [pc, #284]	; 4001d3c0 <CyU3PUsbPhyDisable+0x1c4>
4001d2a0:	e5810000 	str	r0, [r1]
4001d2a4:	e3a01000 	mov	r1, #0
4001d2a8:	e59f0114 	ldr	r0, [pc, #276]	; 4001d3c4 <CyU3PUsbPhyDisable+0x1c8>
4001d2ac:	eb00146d 	bl	40022468 <CyFx3UsbWritePhyReg>
4001d2b0:	e3a01002 	mov	r1, #2
4001d2b4:	e1a00001 	mov	r0, r1
4001d2b8:	ebfffd1d 	bl	4001c734 <CyU3PSetUsbCoreClock>
4001d2bc:	e3a00002 	mov	r0, #2
4001d2c0:	ebffd97b 	bl	400138b4 <CyU3PBusyWait>
4001d2c4:	e59f00fc 	ldr	r0, [pc, #252]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d2c8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d2cc:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d2d0:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d2d4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d2d8:	e3a00002 	mov	r0, #2
4001d2dc:	ebffd974 	bl	400138b4 <CyU3PBusyWait>
4001d2e0:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d2e4:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d2e8:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001d2ec:	e59f10d4 	ldr	r1, [pc, #212]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d2f0:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d2f4:	e2810a02 	add	r0, r1, #8192	; 0x2000
4001d2f8:	e590001c 	ldr	r0, [r0, #28]
4001d2fc:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001d300:	e2811a02 	add	r1, r1, #8192	; 0x2000
4001d304:	e581001c 	str	r0, [r1, #28]
4001d308:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d3cc <CyU3PUsbPhyDisable+0x1d0>
4001d30c:	e5900000 	ldr	r0, [r0]
4001d310:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d314:	ea00000e 	b	4001d354 <CyU3PUsbPhyDisable+0x158>
4001d318:	e59f00a8 	ldr	r0, [pc, #168]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d31c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d320:	e3800008 	orr	r0, r0, #8
4001d324:	e59f109c 	ldr	r1, [pc, #156]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d328:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d32c:	e3a01002 	mov	r1, #2
4001d330:	e1a00001 	mov	r0, r1
4001d334:	ebfffcfe 	bl	4001c734 <CyU3PSetUsbCoreClock>
4001d338:	e3a00002 	mov	r0, #2
4001d33c:	ebffd95c 	bl	400138b4 <CyU3PBusyWait>
4001d340:	e59f0080 	ldr	r0, [pc, #128]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d344:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d348:	e2000001 	and	r0, r0, #1
4001d34c:	e59f1074 	ldr	r1, [pc, #116]	; 4001d3c8 <CyU3PUsbPhyDisable+0x1cc>
4001d350:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d354:	e59f0074 	ldr	r0, [pc, #116]	; 4001d3d0 <CyU3PUsbPhyDisable+0x1d4>
4001d358:	e5900000 	ldr	r0, [r0]
4001d35c:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
4001d360:	e59f1068 	ldr	r1, [pc, #104]	; 4001d3d0 <CyU3PUsbPhyDisable+0x1d4>
4001d364:	e5810000 	str	r0, [r1]
4001d368:	e3a00000 	mov	r0, #0
4001d36c:	e59f1040 	ldr	r1, [pc, #64]	; 4001d3b4 <CyU3PUsbPhyDisable+0x1b8>
4001d370:	e5c10009 	strb	r0, [r1, #9]
4001d374:	ebfffb6c 	bl	4001c12c <CyU3POtgIsStarted>
4001d378:	e3500000 	cmp	r0, #0
4001d37c:	0a000006 	beq	4001d39c <CyU3PUsbPhyDisable+0x1a0>
4001d380:	e3a00064 	mov	r0, #100	; 0x64
4001d384:	ebffd94a 	bl	400138b4 <CyU3PBusyWait>
4001d388:	e59f0040 	ldr	r0, [pc, #64]	; 4001d3d0 <CyU3PUsbPhyDisable+0x1d4>
4001d38c:	e5900000 	ldr	r0, [r0]
4001d390:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d394:	e59f1034 	ldr	r1, [pc, #52]	; 4001d3d0 <CyU3PUsbPhyDisable+0x1d4>
4001d398:	e5810000 	str	r0, [r1]
4001d39c:	e8bd8010 	pop	{r4, pc}
4001d3a0:	40030db0 	.word	0x40030db0
4001d3a4:	400326a0 	.word	0x400326a0
4001d3a8:	e0030000 	.word	0xe0030000
4001d3ac:	40031a80 	.word	0x40031a80
4001d3b0:	40031b20 	.word	0x40031b20
4001d3b4:	40031d40 	.word	0x40031d40
4001d3b8:	e0033000 	.word	0xe0033000
4001d3bc:	40030d84 	.word	0x40030d84
4001d3c0:	40030db4 	.word	0x40030db4
4001d3c4:	00001005 	.word	0x00001005
4001d3c8:	e0031000 	.word	0xe0031000
4001d3cc:	40030c58 	.word	0x40030c58
4001d3d0:	e0050000 	.word	0xe0050000

Disassembly of section i.CyU3PUsbPhyEnable:

4001d3d4 <CyU3PUsbPhyEnable>:
4001d3d4:	e92d4070 	push	{r4, r5, r6, lr}
4001d3d8:	e1a04000 	mov	r4, r0
4001d3dc:	e2841005 	add	r1, r4, #5
4001d3e0:	e20100ff 	and	r0, r1, #255	; 0xff
4001d3e4:	eb000a7e 	bl	4001fde4 <CyU3PUsbAddToEventLog>
4001d3e8:	e3e00000 	mvn	r0, #0
4001d3ec:	e59f12b8 	ldr	r1, [pc, #696]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d3f0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001d3f4:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001d3f8:	e3a00008 	mov	r0, #8
4001d3fc:	eb0013af 	bl	400222c0 <CyU3PVicEnableInt>
4001d400:	e3a00009 	mov	r0, #9
4001d404:	eb0013ad 	bl	400222c0 <CyU3PVicEnableInt>
4001d408:	e59f02a0 	ldr	r0, [pc, #672]	; 4001d6b0 <CyU3PUsbPhyEnable+0x2dc>
4001d40c:	e5900004 	ldr	r0, [r0, #4]
4001d410:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001d414:	e59f1294 	ldr	r1, [pc, #660]	; 4001d6b0 <CyU3PUsbPhyEnable+0x2dc>
4001d418:	e5810004 	str	r0, [r1, #4]
4001d41c:	e2810802 	add	r0, r1, #131072	; 0x20000
4001d420:	e5900000 	ldr	r0, [r0]
4001d424:	e3800602 	orr	r0, r0, #2097152	; 0x200000
4001d428:	e2811802 	add	r1, r1, #131072	; 0x20000
4001d42c:	e5810000 	str	r0, [r1]
4001d430:	e3540000 	cmp	r4, #0
4001d434:	0a000069 	beq	4001d5e0 <CyU3PUsbPhyEnable+0x20c>
4001d438:	e2410a1d 	sub	r0, r1, #118784	; 0x1d000
4001d43c:	e5900014 	ldr	r0, [r0, #20]
4001d440:	e59f126c 	ldr	r1, [pc, #620]	; 4001d6b4 <CyU3PUsbPhyEnable+0x2e0>
4001d444:	e5810000 	str	r0, [r1]
4001d448:	e3a00000 	mov	r0, #0
4001d44c:	e59f1264 	ldr	r1, [pc, #612]	; 4001d6b8 <CyU3PUsbPhyEnable+0x2e4>
4001d450:	e5810000 	str	r0, [r1]
4001d454:	e3e00000 	mvn	r0, #0
4001d458:	e59f125c 	ldr	r1, [pc, #604]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d45c:	e5810004 	str	r0, [r1, #4]
4001d460:	e59f0258 	ldr	r0, [pc, #600]	; 4001d6c0 <CyU3PUsbPhyEnable+0x2ec>
4001d464:	e5810008 	str	r0, [r1, #8]
4001d468:	e3e00000 	mvn	r0, #0
4001d46c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001d470:	e59f024c 	ldr	r0, [pc, #588]	; 4001d6c4 <CyU3PUsbPhyEnable+0x2f0>
4001d474:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d478:	e59f0248 	ldr	r0, [pc, #584]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2f4>
4001d47c:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
4001d480:	e3500000 	cmp	r0, #0
4001d484:	0a000003 	beq	4001d498 <CyU3PUsbPhyEnable+0xc4>
4001d488:	e1a00001 	mov	r0, r1
4001d48c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d490:	e3800c01 	orr	r0, r0, #256	; 0x100
4001d494:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d498:	e3a00000 	mov	r0, #0
4001d49c:	e59f1224 	ldr	r1, [pc, #548]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2f4>
4001d4a0:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d4a4:	e59f0220 	ldr	r0, [pc, #544]	; 4001d6cc <CyU3PUsbPhyEnable+0x2f8>
4001d4a8:	e5900000 	ldr	r0, [r0]
4001d4ac:	e3500000 	cmp	r0, #0
4001d4b0:	0a000003 	beq	4001d4c4 <CyU3PUsbPhyEnable+0xf0>
4001d4b4:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
4001d4b8:	e59f11fc 	ldr	r1, [pc, #508]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d4bc:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d4c0:	ea000002 	b	4001d4d0 <CyU3PUsbPhyEnable+0xfc>
4001d4c4:	e3a00303 	mov	r0, #201326592	; 0xc000000
4001d4c8:	e59f11ec 	ldr	r1, [pc, #492]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d4cc:	e5810050 	str	r0, [r1, #80]	; 0x50
4001d4d0:	e59f01f8 	ldr	r0, [pc, #504]	; 4001d6d0 <CyU3PUsbPhyEnable+0x2fc>
4001d4d4:	e5900000 	ldr	r0, [r0]
4001d4d8:	e59f11dc 	ldr	r1, [pc, #476]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d4dc:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001d4e0:	eb00139a 	bl	40022350 <CyFx3Usb3LnkSetup>
4001d4e4:	e59f01e8 	ldr	r0, [pc, #488]	; 4001d6d4 <CyU3PUsbPhyEnable+0x300>
4001d4e8:	e59f11cc 	ldr	r1, [pc, #460]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d4ec:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d4f0:	e581041c 	str	r0, [r1, #1052]	; 0x41c
4001d4f4:	e1c10000 	bic	r0, r1, r0
4001d4f8:	e5900158 	ldr	r0, [r0, #344]	; 0x158
4001d4fc:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001d500:	e5810158 	str	r0, [r1, #344]	; 0x158
4001d504:	e3a00000 	mov	r0, #0
4001d508:	e59f11b8 	ldr	r1, [pc, #440]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2f4>
4001d50c:	e581005c 	str	r0, [r1, #92]	; 0x5c
4001d510:	e3a00212 	mov	r0, #536870913	; 0x20000001
4001d514:	e59f11a0 	ldr	r1, [pc, #416]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d518:	e581001c 	str	r0, [r1, #28]
4001d51c:	e3a01002 	mov	r1, #2
4001d520:	e1a00001 	mov	r0, r1
4001d524:	ebfffc82 	bl	4001c734 <CyU3PSetUsbCoreClock>
4001d528:	eb00135b 	bl	4002229c <CyU3PVicDisableAllInterrupts>
4001d52c:	e1a05000 	mov	r5, r0
4001d530:	e3a00000 	mov	r0, #0
4001d534:	e59f119c 	ldr	r1, [pc, #412]	; 4001d6d8 <CyU3PUsbPhyEnable+0x304>
4001d538:	e5810000 	str	r0, [r1]
4001d53c:	e3a00a01 	mov	r0, #4096	; 0x1000
4001d540:	e59f1174 	ldr	r1, [pc, #372]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d544:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d548:	e1c10080 	bic	r0, r1, r0, lsl #1
4001d54c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d550:	e3800901 	orr	r0, r0, #16384	; 0x4000
4001d554:	e2411a02 	sub	r1, r1, #8192	; 0x2000
4001d558:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d55c:	e3a00064 	mov	r0, #100	; 0x64
4001d560:	ebffd8d3 	bl	400138b4 <CyU3PBusyWait>
4001d564:	e59f0150 	ldr	r0, [pc, #336]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d568:	e5900000 	ldr	r0, [r0]
4001d56c:	e3800cf2 	orr	r0, r0, #61952	; 0xf200
4001d570:	e59f1144 	ldr	r1, [pc, #324]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d574:	e5810000 	str	r0, [r1]
4001d578:	e59f015c 	ldr	r0, [pc, #348]	; 4001d6dc <CyU3PUsbPhyEnable+0x308>
4001d57c:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001d580:	e3a01080 	mov	r1, #128	; 0x80
4001d584:	e2810ef9 	add	r0, r1, #3984	; 0xf90
4001d588:	eb0013b6 	bl	40022468 <CyFx3UsbWritePhyReg>
4001d58c:	e3a01d06 	mov	r1, #384	; 0x180
4001d590:	e59f0148 	ldr	r0, [pc, #328]	; 4001d6e0 <CyU3PUsbPhyEnable+0x30c>
4001d594:	eb0013b3 	bl	40022468 <CyFx3UsbWritePhyReg>
4001d598:	e3a01080 	mov	r1, #128	; 0x80
4001d59c:	e59f0140 	ldr	r0, [pc, #320]	; 4001d6e4 <CyU3PUsbPhyEnable+0x310>
4001d5a0:	eb0013b0 	bl	40022468 <CyFx3UsbWritePhyReg>
4001d5a4:	e1a00005 	mov	r0, r5
4001d5a8:	eb001349 	bl	400222d4 <CyU3PVicEnableInterrupts>
4001d5ac:	e59f0108 	ldr	r0, [pc, #264]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d5b0:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001d5b4:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
4001d5b8:	e59f10fc 	ldr	r1, [pc, #252]	; 4001d6bc <CyU3PUsbPhyEnable+0x2e8>
4001d5bc:	e5810054 	str	r0, [r1, #84]	; 0x54
4001d5c0:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
4001d5c4:	e581001c 	str	r0, [r1, #28]
4001d5c8:	e3a00064 	mov	r0, #100	; 0x64
4001d5cc:	ebffd8b8 	bl	400138b4 <CyU3PBusyWait>
4001d5d0:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
4001d5d4:	e59f110c 	ldr	r1, [pc, #268]	; 4001d6e8 <CyU3PUsbPhyEnable+0x314>
4001d5d8:	e5810008 	str	r0, [r1, #8]
4001d5dc:	ea000031 	b	4001d6a8 <CyU3PUsbPhyEnable+0x2d4>
4001d5e0:	e59f00e0 	ldr	r0, [pc, #224]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2f4>
4001d5e4:	e5900078 	ldr	r0, [r0, #120]	; 0x78
4001d5e8:	e3500000 	cmp	r0, #0
4001d5ec:	0a000000 	beq	4001d5f4 <CyU3PUsbPhyEnable+0x220>
4001d5f0:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d5f4:	e3a00001 	mov	r0, #1
4001d5f8:	e59f10c8 	ldr	r1, [pc, #200]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2f4>
4001d5fc:	e5c10009 	strb	r0, [r1, #9]
4001d600:	e3a00501 	mov	r0, #4194304	; 0x400000
4001d604:	e59f10e0 	ldr	r1, [pc, #224]	; 4001d6ec <CyU3PUsbPhyEnable+0x318>
4001d608:	e5810074 	str	r0, [r1, #116]	; 0x74
4001d60c:	e3a00000 	mov	r0, #0
4001d610:	e59f10b0 	ldr	r1, [pc, #176]	; 4001d6c8 <CyU3PUsbPhyEnable+0x2f4>
4001d614:	e5810044 	str	r0, [r1, #68]	; 0x44
4001d618:	e59f008c 	ldr	r0, [pc, #140]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d61c:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001d620:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d624:	e59f1080 	ldr	r1, [pc, #128]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d628:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001d62c:	e1a00001 	mov	r0, r1
4001d630:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001d634:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001d638:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001d63c:	e3a00002 	mov	r0, #2
4001d640:	ebffd89b 	bl	400138b4 <CyU3PBusyWait>
4001d644:	e59f0060 	ldr	r0, [pc, #96]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d648:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d64c:	e2000001 	and	r0, r0, #1
4001d650:	e59f1054 	ldr	r1, [pc, #84]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d654:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d658:	e1a00001 	mov	r0, r1
4001d65c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001d660:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4001d664:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001d668:	e3a00064 	mov	r0, #100	; 0x64
4001d66c:	ebffd890 	bl	400138b4 <CyU3PBusyWait>
4001d670:	eb00132a 	bl	40022320 <CyFx3Usb2PhySetup>
4001d674:	e59f0074 	ldr	r0, [pc, #116]	; 4001d6f0 <CyU3PUsbPhyEnable+0x31c>
4001d678:	e59f102c 	ldr	r1, [pc, #44]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d67c:	e5810008 	str	r0, [r1, #8]
4001d680:	e3a00050 	mov	r0, #80	; 0x50
4001d684:	ebffd88a 	bl	400138b4 <CyU3PBusyWait>
4001d688:	e3a01000 	mov	r1, #0
4001d68c:	e3a00002 	mov	r0, #2
4001d690:	ebfffc27 	bl	4001c734 <CyU3PSetUsbCoreClock>
4001d694:	e59f0010 	ldr	r0, [pc, #16]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d698:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001d69c:	e3c00008 	bic	r0, r0, #8
4001d6a0:	e59f1004 	ldr	r1, [pc, #4]	; 4001d6ac <CyU3PUsbPhyEnable+0x2d8>
4001d6a4:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001d6a8:	eaffffd0 	b	4001d5f0 <CyU3PUsbPhyEnable+0x21c>
4001d6ac:	e0031000 	.word	0xe0031000
4001d6b0:	e0030000 	.word	0xe0030000
4001d6b4:	40030d84 	.word	0x40030d84
4001d6b8:	40030db4 	.word	0x40030db4
4001d6bc:	e0033000 	.word	0xe0033000
4001d6c0:	00038081 	.word	0x00038081
4001d6c4:	00004a3d 	.word	0x00004a3d
4001d6c8:	40031d40 	.word	0x40031d40
4001d6cc:	40030d40 	.word	0x40030d40
4001d6d0:	40030d8c 	.word	0x40030d8c
4001d6d4:	00000908 	.word	0x00000908
4001d6d8:	40030d74 	.word	0x40030d74
4001d6dc:	00310418 	.word	0x00310418
4001d6e0:	00001006 	.word	0x00001006
4001d6e4:	00001024 	.word	0x00001024
4001d6e8:	e0052000 	.word	0xe0052000
4001d6ec:	e0032000 	.word	0xe0032000
4001d6f0:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbPowerOn:

4001d6f4 <CyU3PUsbPowerOn>:
4001d6f4:	e92d4010 	push	{r4, lr}
4001d6f8:	eb00133a 	bl	400223e8 <CyFx3UsbPowerOn>
4001d6fc:	e8bd8010 	pop	{r4, pc}

Disassembly of section i.CyU3PUsbResetEp:

4001d700 <CyU3PUsbResetEp>:
4001d700:	e92d4070 	push	{r4, r5, r6, lr}
4001d704:	e1a04000 	mov	r4, r0
4001d708:	e204507f 	and	r5, r4, #127	; 0x7f
4001d70c:	e59f00bc 	ldr	r0, [pc, #188]	; 4001d7d0 <CyU3PUsbResetEp+0xd0>
4001d710:	e5d00008 	ldrb	r0, [r0, #8]
4001d714:	e3500000 	cmp	r0, #0
4001d718:	1a000001 	bne	4001d724 <CyU3PUsbResetEp+0x24>
4001d71c:	e3a00042 	mov	r0, #66	; 0x42
4001d720:	e8bd8070 	pop	{r4, r5, r6, pc}
4001d724:	e355000f 	cmp	r5, #15
4001d728:	da000001 	ble	4001d734 <CyU3PUsbResetEp+0x34>
4001d72c:	e3a00040 	mov	r0, #64	; 0x40
4001d730:	eafffffa 	b	4001d720 <CyU3PUsbResetEp+0x20>
4001d734:	e3e01000 	mvn	r1, #0
4001d738:	e59f0094 	ldr	r0, [pc, #148]	; 4001d7d4 <CyU3PUsbResetEp+0xd4>
4001d73c:	ebffb2dd 	bl	4000a2b8 <_txe_mutex_get>
4001d740:	ebfffe2b 	bl	4001cff4 <CyU3PUsbGetSpeed>
4001d744:	e3500003 	cmp	r0, #3
4001d748:	1a00001c 	bne	4001d7c0 <CyU3PUsbResetEp+0xc0>
4001d74c:	e59f0084 	ldr	r0, [pc, #132]	; 4001d7d8 <CyU3PUsbResetEp+0xd8>
4001d750:	e5900704 	ldr	r0, [r0, #1796]	; 0x704
4001d754:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4001d758:	e59f1078 	ldr	r1, [pc, #120]	; 4001d7d8 <CyU3PUsbResetEp+0xd8>
4001d75c:	e5810704 	str	r0, [r1, #1796]	; 0x704
4001d760:	e3140080 	tst	r4, #128	; 0x80
4001d764:	0a00000a 	beq	4001d794 <CyU3PUsbResetEp+0x94>
4001d768:	e2810c05 	add	r0, r1, #1280	; 0x500
4001d76c:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001d770:	e3866011 	orr	r6, r6, #17
4001d774:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d778:	e3a00002 	mov	r0, #2
4001d77c:	ebffd84c 	bl	400138b4 <CyU3PBusyWait>
4001d780:	e3c60010 	bic	r0, r6, #16
4001d784:	e3806001 	orr	r6, r0, #1
4001d788:	e59f004c 	ldr	r0, [pc, #76]	; 4001d7dc <CyU3PUsbResetEp+0xdc>
4001d78c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d790:	ea00000a 	b	4001d7c0 <CyU3PUsbResetEp+0xc0>
4001d794:	e59f0044 	ldr	r0, [pc, #68]	; 4001d7e0 <CyU3PUsbResetEp+0xe0>
4001d798:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4001d79c:	e3806011 	orr	r6, r0, #17
4001d7a0:	e59f0038 	ldr	r0, [pc, #56]	; 4001d7e0 <CyU3PUsbResetEp+0xe0>
4001d7a4:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d7a8:	e3a00002 	mov	r0, #2
4001d7ac:	ebffd840 	bl	400138b4 <CyU3PBusyWait>
4001d7b0:	e3c60010 	bic	r0, r6, #16
4001d7b4:	e3806001 	orr	r6, r0, #1
4001d7b8:	e59f0020 	ldr	r0, [pc, #32]	; 4001d7e0 <CyU3PUsbResetEp+0xe0>
4001d7bc:	e7806105 	str	r6, [r0, r5, lsl #2]
4001d7c0:	e59f000c 	ldr	r0, [pc, #12]	; 4001d7d4 <CyU3PUsbResetEp+0xd4>
4001d7c4:	ebffb2f0 	bl	4000a38c <_txe_mutex_put>
4001d7c8:	e3a00000 	mov	r0, #0
4001d7cc:	eaffffd3 	b	4001d720 <CyU3PUsbResetEp+0x20>
4001d7d0:	40031d40 	.word	0x40031d40
4001d7d4:	40031ee0 	.word	0x40031ee0
4001d7d8:	e0033000 	.word	0xe0033000
4001d7dc:	e0033500 	.word	0xe0033500
4001d7e0:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendEP0Data:

4001d7e4 <CyU3PUsbSendEP0Data>:
4001d7e4:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d7e8:	e1a04000 	mov	r4, r0
4001d7ec:	e1a05001 	mov	r5, r1
4001d7f0:	e59f71ac 	ldr	r7, [pc, #428]	; 4001d9a4 <CyU3PUsbSendEP0Data+0x1c0>
4001d7f4:	e59f01ac 	ldr	r0, [pc, #428]	; 4001d9a8 <CyU3PUsbSendEP0Data+0x1c4>
4001d7f8:	e5d00008 	ldrb	r0, [r0, #8]
4001d7fc:	e3500000 	cmp	r0, #0
4001d800:	1a000001 	bne	4001d80c <CyU3PUsbSendEP0Data+0x28>
4001d804:	e3a00042 	mov	r0, #66	; 0x42
4001d808:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d80c:	e3550000 	cmp	r5, #0
4001d810:	1a000001 	bne	4001d81c <CyU3PUsbSendEP0Data+0x38>
4001d814:	e3a00040 	mov	r0, #64	; 0x40
4001d818:	eafffffa 	b	4001d808 <CyU3PUsbSendEP0Data+0x24>
4001d81c:	e3e01000 	mvn	r1, #0
4001d820:	e59f0184 	ldr	r0, [pc, #388]	; 4001d9ac <CyU3PUsbSendEP0Data+0x1c8>
4001d824:	ebffb2a3 	bl	4000a2b8 <_txe_mutex_get>
4001d828:	e59f0180 	ldr	r0, [pc, #384]	; 4001d9b0 <CyU3PUsbSendEP0Data+0x1cc>
4001d82c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d830:	e3c00008 	bic	r0, r0, #8
4001d834:	e59f1174 	ldr	r1, [pc, #372]	; 4001d9b0 <CyU3PUsbSendEP0Data+0x1cc>
4001d838:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d83c:	e59f0164 	ldr	r0, [pc, #356]	; 4001d9a8 <CyU3PUsbSendEP0Data+0x1c4>
4001d840:	e5900018 	ldr	r0, [r0, #24]
4001d844:	e3500000 	cmp	r0, #0
4001d848:	1a000002 	bne	4001d858 <CyU3PUsbSendEP0Data+0x74>
4001d84c:	ebfffdf0 	bl	4001d014 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d850:	e3500000 	cmp	r0, #0
4001d854:	0a000008 	beq	4001d87c <CyU3PUsbSendEP0Data+0x98>
4001d858:	e59f0150 	ldr	r0, [pc, #336]	; 4001d9b0 <CyU3PUsbSendEP0Data+0x1cc>
4001d85c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d860:	e3800008 	orr	r0, r0, #8
4001d864:	e59f1144 	ldr	r1, [pc, #324]	; 4001d9b0 <CyU3PUsbSendEP0Data+0x1cc>
4001d868:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d86c:	e59f0138 	ldr	r0, [pc, #312]	; 4001d9ac <CyU3PUsbSendEP0Data+0x1c8>
4001d870:	ebffb2c5 	bl	4000a38c <_txe_mutex_put>
4001d874:	e3a00000 	mov	r0, #0
4001d878:	eaffffe2 	b	4001d808 <CyU3PUsbSendEP0Data+0x24>
4001d87c:	e59f012c 	ldr	r0, [pc, #300]	; 4001d9b0 <CyU3PUsbSendEP0Data+0x1cc>
4001d880:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001d884:	e3800008 	orr	r0, r0, #8
4001d888:	e59f1120 	ldr	r1, [pc, #288]	; 4001d9b0 <CyU3PUsbSendEP0Data+0x1cc>
4001d88c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001d890:	e1a00001 	mov	r0, r1
4001d894:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d898:	e1500004 	cmp	r0, r4
4001d89c:	2a000003 	bcs	4001d8b0 <CyU3PUsbSendEP0Data+0xcc>
4001d8a0:	e1a00001 	mov	r0, r1
4001d8a4:	e5900458 	ldr	r0, [r0, #1112]	; 0x458
4001d8a8:	e1a04800 	lsl	r4, r0, #16
4001d8ac:	e1a04824 	lsr	r4, r4, #16
4001d8b0:	eb0003b8 	bl	4001e798 <GetUsbLinkActive>
4001d8b4:	e1cd40b4 	strh	r4, [sp, #4]
4001d8b8:	e284000f 	add	r0, r4, #15
4001d8bc:	e59f10f0 	ldr	r1, [pc, #240]	; 4001d9b4 <CyU3PUsbSendEP0Data+0x1d0>
4001d8c0:	e0000001 	and	r0, r0, r1
4001d8c4:	e1cd00b6 	strh	r0, [sp, #6]
4001d8c8:	e58d5000 	str	r5, [sp]
4001d8cc:	e3a00000 	mov	r0, #0
4001d8d0:	e1cd00b8 	strh	r0, [sp, #8]
4001d8d4:	e1a0100d 	mov	r1, sp
4001d8d8:	e59f00d8 	ldr	r0, [pc, #216]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1d4>
4001d8dc:	ebffe571 	bl	40016ea8 <CyU3PDmaChannelSetupSendBuffer>
4001d8e0:	e20060ff 	and	r6, r0, #255	; 0xff
4001d8e4:	e59f00c0 	ldr	r0, [pc, #192]	; 4001d9ac <CyU3PUsbSendEP0Data+0x1c8>
4001d8e8:	ebffb2a7 	bl	4000a38c <_txe_mutex_put>
4001d8ec:	e3560000 	cmp	r6, #0
4001d8f0:	1a000029 	bne	4001d99c <CyU3PUsbSendEP0Data+0x1b8>
4001d8f4:	e59f00ac 	ldr	r0, [pc, #172]	; 4001d9a8 <CyU3PUsbSendEP0Data+0x1c4>
4001d8f8:	e5900014 	ldr	r0, [r0, #20]
4001d8fc:	e3500000 	cmp	r0, #0
4001d900:	0a000000 	beq	4001d908 <CyU3PUsbSendEP0Data+0x124>
4001d904:	ebfffc1d 	bl	4001c980 <CyU3PUsbAckSetup>
4001d908:	ea00000d 	b	4001d944 <CyU3PUsbSendEP0Data+0x160>
4001d90c:	e3a01064 	mov	r1, #100	; 0x64
4001d910:	e59f00a0 	ldr	r0, [pc, #160]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1d4>
4001d914:	ebffe5f1 	bl	400170e0 <CyU3PDmaChannelWaitForCompletion>
4001d918:	e20060ff 	and	r6, r0, #255	; 0xff
4001d91c:	e3560045 	cmp	r6, #69	; 0x45
4001d920:	1a000006 	bne	4001d940 <CyU3PUsbSendEP0Data+0x15c>
4001d924:	ebfffdba 	bl	4001d014 <CyU3PUsbIsNewCtrlRqtRecvd>
4001d928:	e3500000 	cmp	r0, #0
4001d92c:	0a000001 	beq	4001d938 <CyU3PUsbSendEP0Data+0x154>
4001d930:	e3a00000 	mov	r0, #0
4001d934:	eaffffb3 	b	4001d808 <CyU3PUsbSendEP0Data+0x24>
4001d938:	e2477064 	sub	r7, r7, #100	; 0x64
4001d93c:	ea000000 	b	4001d944 <CyU3PUsbSendEP0Data+0x160>
4001d940:	ea000001 	b	4001d94c <CyU3PUsbSendEP0Data+0x168>
4001d944:	e3570000 	cmp	r7, #0
4001d948:	1affffef 	bne	4001d90c <CyU3PUsbSendEP0Data+0x128>
4001d94c:	e1a00000 	nop			; (mov r0, r0)
4001d950:	e3560000 	cmp	r6, #0
4001d954:	0a000010 	beq	4001d99c <CyU3PUsbSendEP0Data+0x1b8>
4001d958:	e3e01000 	mvn	r1, #0
4001d95c:	e59f0048 	ldr	r0, [pc, #72]	; 4001d9ac <CyU3PUsbSendEP0Data+0x1c8>
4001d960:	ebffb254 	bl	4000a2b8 <_txe_mutex_get>
4001d964:	e3a01001 	mov	r1, #1
4001d968:	e3a00080 	mov	r0, #128	; 0x80
4001d96c:	eb000101 	bl	4001dd78 <CyU3PUsbSetEpNak>
4001d970:	e3a00064 	mov	r0, #100	; 0x64
4001d974:	ebffd7ce 	bl	400138b4 <CyU3PBusyWait>
4001d978:	e59f0038 	ldr	r0, [pc, #56]	; 4001d9b8 <CyU3PUsbSendEP0Data+0x1d4>
4001d97c:	ebffe306 	bl	4001659c <CyU3PDmaChannelReset>
4001d980:	e3a00080 	mov	r0, #128	; 0x80
4001d984:	ebfffcf5 	bl	4001cd60 <CyU3PUsbFlushEp>
4001d988:	e3a01000 	mov	r1, #0
4001d98c:	e3a00080 	mov	r0, #128	; 0x80
4001d990:	eb0000f8 	bl	4001dd78 <CyU3PUsbSetEpNak>
4001d994:	e59f0010 	ldr	r0, [pc, #16]	; 4001d9ac <CyU3PUsbSendEP0Data+0x1c8>
4001d998:	ebffb27b 	bl	4000a38c <_txe_mutex_put>
4001d99c:	e1a00006 	mov	r0, r6
4001d9a0:	eaffff98 	b	4001d808 <CyU3PUsbSendEP0Data+0x24>
4001d9a4:	00001388 	.word	0x00001388
4001d9a8:	40031d40 	.word	0x40031d40
4001d9ac:	40031ee0 	.word	0x40031ee0
4001d9b0:	e0031000 	.word	0xe0031000
4001d9b4:	0000fff0 	.word	0x0000fff0
4001d9b8:	40031a80 	.word	0x40031a80

Disassembly of section i.CyU3PUsbSendErdy:

4001d9bc <CyU3PUsbSendErdy>:
4001d9bc:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001d9c0:	e1a04000 	mov	r4, r0
4001d9c4:	e1a05001 	mov	r5, r1
4001d9c8:	e1a0000d 	mov	r0, sp
4001d9cc:	e3a02000 	mov	r2, #0
4001d9d0:	e1a03002 	mov	r3, r2
4001d9d4:	e1a06002 	mov	r6, r2
4001d9d8:	e880004c 	stm	r0, {r2, r3, r6}
4001d9dc:	e204600f 	and	r6, r4, #15
4001d9e0:	e2047080 	and	r7, r4, #128	; 0x80
4001d9e4:	e59f00b4 	ldr	r0, [pc, #180]	; 4001daa0 <CyU3PUsbSendErdy+0xe4>
4001d9e8:	e5d00008 	ldrb	r0, [r0, #8]
4001d9ec:	e3500000 	cmp	r0, #0
4001d9f0:	1a000001 	bne	4001d9fc <CyU3PUsbSendErdy+0x40>
4001d9f4:	e3a00042 	mov	r0, #66	; 0x42
4001d9f8:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001d9fc:	ebfffd7c 	bl	4001cff4 <CyU3PUsbGetSpeed>
4001da00:	e3500003 	cmp	r0, #3
4001da04:	1a000004 	bne	4001da1c <CyU3PUsbSendErdy+0x60>
4001da08:	e59f0094 	ldr	r0, [pc, #148]	; 4001daa4 <CyU3PUsbSendErdy+0xe8>
4001da0c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001da10:	e200003f 	and	r0, r0, #63	; 0x3f
4001da14:	e3500010 	cmp	r0, #16
4001da18:	0a000001 	beq	4001da24 <CyU3PUsbSendErdy+0x68>
4001da1c:	e3a000ff 	mov	r0, #255	; 0xff
4001da20:	eafffff4 	b	4001d9f8 <CyU3PUsbSendErdy+0x3c>
4001da24:	e204007f 	and	r0, r4, #127	; 0x7f
4001da28:	e350000f 	cmp	r0, #15
4001da2c:	da000001 	ble	4001da38 <CyU3PUsbSendErdy+0x7c>
4001da30:	e3a00040 	mov	r0, #64	; 0x40
4001da34:	eaffffef 	b	4001d9f8 <CyU3PUsbSendErdy+0x3c>
4001da38:	e59f0064 	ldr	r0, [pc, #100]	; 4001daa4 <CyU3PUsbSendErdy+0xe8>
4001da3c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001da40:	e3a01004 	mov	r1, #4
4001da44:	e1810c80 	orr	r0, r1, r0, lsl #25
4001da48:	e58d0000 	str	r0, [sp]
4001da4c:	e3870801 	orr	r0, r7, #65536	; 0x10000
4001da50:	e3800003 	orr	r0, r0, #3
4001da54:	e1800406 	orr	r0, r0, r6, lsl #8
4001da58:	e58d0004 	str	r0, [sp, #4]
4001da5c:	e3570000 	cmp	r7, #0
4001da60:	0a000005 	beq	4001da7c <CyU3PUsbSendErdy+0xc0>
4001da64:	e59f003c 	ldr	r0, [pc, #60]	; 4001daa8 <CyU3PUsbSendErdy+0xec>
4001da68:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001da6c:	e3100008 	tst	r0, #8
4001da70:	0a000006 	beq	4001da90 <CyU3PUsbSendErdy+0xd4>
4001da74:	e58d5008 	str	r5, [sp, #8]
4001da78:	ea000004 	b	4001da90 <CyU3PUsbSendErdy+0xd4>
4001da7c:	e59f0028 	ldr	r0, [pc, #40]	; 4001daac <CyU3PUsbSendErdy+0xf0>
4001da80:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001da84:	e3100008 	tst	r0, #8
4001da88:	0a000000 	beq	4001da90 <CyU3PUsbSendErdy+0xd4>
4001da8c:	e58d5008 	str	r5, [sp, #8]
4001da90:	e1a0000d 	mov	r0, sp
4001da94:	eb00123c 	bl	4002238c <CyFx3Usb3SendTP>
4001da98:	e3a00000 	mov	r0, #0
4001da9c:	eaffffd5 	b	4001d9f8 <CyU3PUsbSendErdy+0x3c>
4001daa0:	40031d40 	.word	0x40031d40
4001daa4:	e0033000 	.word	0xe0033000
4001daa8:	e0033500 	.word	0xe0033500
4001daac:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSendNrdy:

4001dab0 <CyU3PUsbSendNrdy>:
4001dab0:	e92d40fe 	push	{r1, r2, r3, r4, r5, r6, r7, lr}
4001dab4:	e1a04000 	mov	r4, r0
4001dab8:	e1a05001 	mov	r5, r1
4001dabc:	e1a0000d 	mov	r0, sp
4001dac0:	e3a02000 	mov	r2, #0
4001dac4:	e1a03002 	mov	r3, r2
4001dac8:	e1a06002 	mov	r6, r2
4001dacc:	e880004c 	stm	r0, {r2, r3, r6}
4001dad0:	e204600f 	and	r6, r4, #15
4001dad4:	e2047080 	and	r7, r4, #128	; 0x80
4001dad8:	e59f00b0 	ldr	r0, [pc, #176]	; 4001db90 <CyU3PUsbSendNrdy+0xe0>
4001dadc:	e5d00008 	ldrb	r0, [r0, #8]
4001dae0:	e3500000 	cmp	r0, #0
4001dae4:	1a000001 	bne	4001daf0 <CyU3PUsbSendNrdy+0x40>
4001dae8:	e3a00042 	mov	r0, #66	; 0x42
4001daec:	e8bd80fe 	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
4001daf0:	ebfffd3f 	bl	4001cff4 <CyU3PUsbGetSpeed>
4001daf4:	e3500003 	cmp	r0, #3
4001daf8:	1a000004 	bne	4001db10 <CyU3PUsbSendNrdy+0x60>
4001dafc:	e59f0090 	ldr	r0, [pc, #144]	; 4001db94 <CyU3PUsbSendNrdy+0xe4>
4001db00:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001db04:	e200003f 	and	r0, r0, #63	; 0x3f
4001db08:	e3500010 	cmp	r0, #16
4001db0c:	0a000001 	beq	4001db18 <CyU3PUsbSendNrdy+0x68>
4001db10:	e3a000ff 	mov	r0, #255	; 0xff
4001db14:	eafffff4 	b	4001daec <CyU3PUsbSendNrdy+0x3c>
4001db18:	e204007f 	and	r0, r4, #127	; 0x7f
4001db1c:	e350000f 	cmp	r0, #15
4001db20:	da000001 	ble	4001db2c <CyU3PUsbSendNrdy+0x7c>
4001db24:	e3a00040 	mov	r0, #64	; 0x40
4001db28:	eaffffef 	b	4001daec <CyU3PUsbSendNrdy+0x3c>
4001db2c:	e59f0060 	ldr	r0, [pc, #96]	; 4001db94 <CyU3PUsbSendNrdy+0xe4>
4001db30:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001db34:	e3a01004 	mov	r1, #4
4001db38:	e1810c80 	orr	r0, r1, r0, lsl #25
4001db3c:	e58d0000 	str	r0, [sp]
4001db40:	e3870002 	orr	r0, r7, #2
4001db44:	e1800406 	orr	r0, r0, r6, lsl #8
4001db48:	e58d0004 	str	r0, [sp, #4]
4001db4c:	e3570000 	cmp	r7, #0
4001db50:	0a000005 	beq	4001db6c <CyU3PUsbSendNrdy+0xbc>
4001db54:	e59f003c 	ldr	r0, [pc, #60]	; 4001db98 <CyU3PUsbSendNrdy+0xe8>
4001db58:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db5c:	e3100008 	tst	r0, #8
4001db60:	0a000006 	beq	4001db80 <CyU3PUsbSendNrdy+0xd0>
4001db64:	e58d5008 	str	r5, [sp, #8]
4001db68:	ea000004 	b	4001db80 <CyU3PUsbSendNrdy+0xd0>
4001db6c:	e59f0028 	ldr	r0, [pc, #40]	; 4001db9c <CyU3PUsbSendNrdy+0xec>
4001db70:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4001db74:	e3100008 	tst	r0, #8
4001db78:	0a000000 	beq	4001db80 <CyU3PUsbSendNrdy+0xd0>
4001db7c:	e58d5008 	str	r5, [sp, #8]
4001db80:	e1a0000d 	mov	r0, sp
4001db84:	eb001200 	bl	4002238c <CyFx3Usb3SendTP>
4001db88:	e3a00000 	mov	r0, #0
4001db8c:	eaffffd6 	b	4001daec <CyU3PUsbSendNrdy+0x3c>
4001db90:	40031d40 	.word	0x40031d40
4001db94:	e0033000 	.word	0xe0033000
4001db98:	e0033500 	.word	0xe0033500
4001db9c:	e0033600 	.word	0xe0033600

Disassembly of section i.CyU3PUsbSetDesc:

4001dba0 <CyU3PUsbSetDesc>:
4001dba0:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001dba4:	e1a03000 	mov	r3, r0
4001dba8:	e3a0c000 	mov	ip, #0
4001dbac:	e59f01b8 	ldr	r0, [pc, #440]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dbb0:	e5d00008 	ldrb	r0, [r0, #8]
4001dbb4:	e3500000 	cmp	r0, #0
4001dbb8:	1a000001 	bne	4001dbc4 <CyU3PUsbSetDesc+0x24>
4001dbbc:	e3a00042 	mov	r0, #66	; 0x42
4001dbc0:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001dbc4:	e3520000 	cmp	r2, #0
4001dbc8:	1a000001 	bne	4001dbd4 <CyU3PUsbSetDesc+0x34>
4001dbcc:	e3a00040 	mov	r0, #64	; 0x40
4001dbd0:	eafffffa 	b	4001dbc0 <CyU3PUsbSetDesc+0x20>
4001dbd4:	e3530009 	cmp	r3, #9
4001dbd8:	308ff103 	addcc	pc, pc, r3, lsl #2
4001dbdc:	ea00004d 	b	4001dd18 <CyU3PUsbSetDesc+0x178>
4001dbe0:	ea000007 	b	4001dc04 <CyU3PUsbSetDesc+0x64>
4001dbe4:	ea00000a 	b	4001dc14 <CyU3PUsbSetDesc+0x74>
4001dbe8:	ea000011 	b	4001dc34 <CyU3PUsbSetDesc+0x94>
4001dbec:	ea000022 	b	4001dc7c <CyU3PUsbSetDesc+0xdc>
4001dbf0:	ea00002f 	b	4001dcb4 <CyU3PUsbSetDesc+0x114>
4001dbf4:	ea00003c 	b	4001dcec <CyU3PUsbSetDesc+0x14c>
4001dbf8:	ea000011 	b	4001dc44 <CyU3PUsbSetDesc+0xa4>
4001dbfc:	ea000008 	b	4001dc24 <CyU3PUsbSetDesc+0x84>
4001dc00:	ea000040 	b	4001dd08 <CyU3PUsbSetDesc+0x168>
4001dc04:	e1a00000 	nop			; (mov r0, r0)
4001dc08:	e59f0160 	ldr	r0, [pc, #352]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dc0c:	e5802004 	str	r2, [r0, #4]
4001dc10:	ea000043 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dc14:	e1a00000 	nop			; (mov r0, r0)
4001dc18:	e59f0150 	ldr	r0, [pc, #336]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dc1c:	e5802000 	str	r2, [r0]
4001dc20:	ea00003f 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dc24:	e1a00000 	nop			; (mov r0, r0)
4001dc28:	e59f0140 	ldr	r0, [pc, #320]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dc2c:	e580206c 	str	r2, [r0, #108]	; 0x6c
4001dc30:	ea00003b 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dc34:	e1a00000 	nop			; (mov r0, r0)
4001dc38:	e59f0130 	ldr	r0, [pc, #304]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dc3c:	e5802008 	str	r2, [r0, #8]
4001dc40:	ea000037 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dc44:	e1a00000 	nop			; (mov r0, r0)
4001dc48:	e59f0120 	ldr	r0, [pc, #288]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dc4c:	e580201c 	str	r2, [r0, #28]
4001dc50:	e5d20007 	ldrb	r0, [r2, #7]
4001dc54:	e3100040 	tst	r0, #64	; 0x40
4001dc58:	0a000003 	beq	4001dc6c <CyU3PUsbSetDesc+0xcc>
4001dc5c:	e3a00001 	mov	r0, #1
4001dc60:	e59fe104 	ldr	lr, [pc, #260]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dc64:	e5ce0006 	strb	r0, [lr, #6]
4001dc68:	ea000002 	b	4001dc78 <CyU3PUsbSetDesc+0xd8>
4001dc6c:	e3a00000 	mov	r0, #0
4001dc70:	e59fe0f4 	ldr	lr, [pc, #244]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dc74:	e5ce0006 	strb	r0, [lr, #6]
4001dc78:	ea000029 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dc7c:	e1a00000 	nop			; (mov r0, r0)
4001dc80:	e59f00e8 	ldr	r0, [pc, #232]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dc84:	e5802018 	str	r2, [r0, #24]
4001dc88:	e5d20007 	ldrb	r0, [r2, #7]
4001dc8c:	e3100040 	tst	r0, #64	; 0x40
4001dc90:	0a000003 	beq	4001dca4 <CyU3PUsbSetDesc+0x104>
4001dc94:	e3a00001 	mov	r0, #1
4001dc98:	e59fe0cc 	ldr	lr, [pc, #204]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dc9c:	e5ce0006 	strb	r0, [lr, #6]
4001dca0:	ea000002 	b	4001dcb0 <CyU3PUsbSetDesc+0x110>
4001dca4:	e3a00000 	mov	r0, #0
4001dca8:	e59fe0bc 	ldr	lr, [pc, #188]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dcac:	e5ce0006 	strb	r0, [lr, #6]
4001dcb0:	ea00001b 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dcb4:	e1a00000 	nop			; (mov r0, r0)
4001dcb8:	e59f00b0 	ldr	r0, [pc, #176]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dcbc:	e5802014 	str	r2, [r0, #20]
4001dcc0:	e5d20007 	ldrb	r0, [r2, #7]
4001dcc4:	e3100040 	tst	r0, #64	; 0x40
4001dcc8:	0a000003 	beq	4001dcdc <CyU3PUsbSetDesc+0x13c>
4001dccc:	e3a00001 	mov	r0, #1
4001dcd0:	e59fe094 	ldr	lr, [pc, #148]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dcd4:	e5ce0006 	strb	r0, [lr, #6]
4001dcd8:	ea000002 	b	4001dce8 <CyU3PUsbSetDesc+0x148>
4001dcdc:	e3a00000 	mov	r0, #0
4001dce0:	e59fe084 	ldr	lr, [pc, #132]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dce4:	e5ce0006 	strb	r0, [lr, #6]
4001dce8:	ea00000d 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dcec:	e1a00000 	nop			; (mov r0, r0)
4001dcf0:	e3510010 	cmp	r1, #16
4001dcf4:	da000000 	ble	4001dcfc <CyU3PUsbSetDesc+0x15c>
4001dcf8:	e3a0c04b 	mov	ip, #75	; 0x4b
4001dcfc:	e59f0070 	ldr	r0, [pc, #112]	; 4001dd74 <CyU3PUsbSetDesc+0x1d4>
4001dd00:	e7802101 	str	r2, [r0, r1, lsl #2]
4001dd04:	ea000006 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dd08:	e1a00000 	nop			; (mov r0, r0)
4001dd0c:	e59f005c 	ldr	r0, [pc, #92]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dd10:	e5802070 	str	r2, [r0, #112]	; 0x70
4001dd14:	ea000002 	b	4001dd24 <CyU3PUsbSetDesc+0x184>
4001dd18:	e1a00000 	nop			; (mov r0, r0)
4001dd1c:	e3a00050 	mov	r0, #80	; 0x50
4001dd20:	eaffffa6 	b	4001dbc0 <CyU3PUsbSetDesc+0x20>
4001dd24:	e1a00000 	nop			; (mov r0, r0)
4001dd28:	e59f0040 	ldr	r0, [pc, #64]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dd2c:	e5900000 	ldr	r0, [r0]
4001dd30:	e3500000 	cmp	r0, #0
4001dd34:	0a00000a 	beq	4001dd64 <CyU3PUsbSetDesc+0x1c4>
4001dd38:	e59f0030 	ldr	r0, [pc, #48]	; 4001dd70 <CyU3PUsbSetDesc+0x1d0>
4001dd3c:	e5900020 	ldr	r0, [r0, #32]
4001dd40:	e3500000 	cmp	r0, #0
4001dd44:	0a000006 	beq	4001dd64 <CyU3PUsbSetDesc+0x1c4>
4001dd48:	e59f001c 	ldr	r0, [pc, #28]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dd4c:	e5d00008 	ldrb	r0, [r0, #8]
4001dd50:	e3500003 	cmp	r0, #3
4001dd54:	aa000002 	bge	4001dd64 <CyU3PUsbSetDesc+0x1c4>
4001dd58:	e3a00003 	mov	r0, #3
4001dd5c:	e59fe008 	ldr	lr, [pc, #8]	; 4001dd6c <CyU3PUsbSetDesc+0x1cc>
4001dd60:	e5ce0008 	strb	r0, [lr, #8]
4001dd64:	e1a0000c 	mov	r0, ip
4001dd68:	eaffff94 	b	4001dbc0 <CyU3PUsbSetDesc+0x20>
4001dd6c:	40031d40 	.word	0x40031d40
4001dd70:	40031f98 	.word	0x40031f98
4001dd74:	40031fb8 	.word	0x40031fb8

Disassembly of section i.CyU3PUsbSetEpNak:

4001dd78 <CyU3PUsbSetEpNak>:
4001dd78:	e92d4070 	push	{r4, r5, r6, lr}
4001dd7c:	e1a04000 	mov	r4, r0
4001dd80:	e1a06001 	mov	r6, r1
4001dd84:	e59f0198 	ldr	r0, [pc, #408]	; 4001df24 <CyU3PUsbSetEpNak+0x1ac>
4001dd88:	e5d00008 	ldrb	r0, [r0, #8]
4001dd8c:	e3500000 	cmp	r0, #0
4001dd90:	1a000001 	bne	4001dd9c <CyU3PUsbSetEpNak+0x24>
4001dd94:	e3a00042 	mov	r0, #66	; 0x42
4001dd98:	e8bd8070 	pop	{r4, r5, r6, pc}
4001dd9c:	e204007f 	and	r0, r4, #127	; 0x7f
4001dda0:	e350000f 	cmp	r0, #15
4001dda4:	da000001 	ble	4001ddb0 <CyU3PUsbSetEpNak+0x38>
4001dda8:	e3a00040 	mov	r0, #64	; 0x40
4001ddac:	eafffff9 	b	4001dd98 <CyU3PUsbSetEpNak+0x20>
4001ddb0:	e3e01000 	mvn	r1, #0
4001ddb4:	e59f016c 	ldr	r0, [pc, #364]	; 4001df28 <CyU3PUsbSetEpNak+0x1b0>
4001ddb8:	ebffb13e 	bl	4000a2b8 <_txe_mutex_get>
4001ddbc:	e3560000 	cmp	r6, #0
4001ddc0:	0a000028 	beq	4001de68 <CyU3PUsbSetEpNak+0xf0>
4001ddc4:	e3140080 	tst	r4, #128	; 0x80
4001ddc8:	0a000012 	beq	4001de18 <CyU3PUsbSetEpNak+0xa0>
4001ddcc:	e59f0150 	ldr	r0, [pc, #336]	; 4001df24 <CyU3PUsbSetEpNak+0x1ac>
4001ddd0:	e5d00009 	ldrb	r0, [r0, #9]
4001ddd4:	e3500003 	cmp	r0, #3
4001ddd8:	1a000006 	bne	4001ddf8 <CyU3PUsbSetEpNak+0x80>
4001dddc:	e59f0148 	ldr	r0, [pc, #328]	; 4001df2c <CyU3PUsbSetEpNak+0x1b4>
4001dde0:	e204100f 	and	r1, r4, #15
4001dde4:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001dde8:	e3855003 	orr	r5, r5, #3
4001ddec:	e204100f 	and	r1, r4, #15
4001ddf0:	e7805101 	str	r5, [r0, r1, lsl #2]
4001ddf4:	ea000046 	b	4001df14 <CyU3PUsbSetEpNak+0x19c>
4001ddf8:	e59f0130 	ldr	r0, [pc, #304]	; 4001df30 <CyU3PUsbSetEpNak+0x1b8>
4001ddfc:	e204100f 	and	r1, r4, #15
4001de00:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de04:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001de08:	e59f1120 	ldr	r1, [pc, #288]	; 4001df30 <CyU3PUsbSetEpNak+0x1b8>
4001de0c:	e204200f 	and	r2, r4, #15
4001de10:	e7810102 	str	r0, [r1, r2, lsl #2]
4001de14:	ea00003e 	b	4001df14 <CyU3PUsbSetEpNak+0x19c>
4001de18:	e59f0104 	ldr	r0, [pc, #260]	; 4001df24 <CyU3PUsbSetEpNak+0x1ac>
4001de1c:	e5d00009 	ldrb	r0, [r0, #9]
4001de20:	e3500003 	cmp	r0, #3
4001de24:	1a000007 	bne	4001de48 <CyU3PUsbSetEpNak+0xd0>
4001de28:	e59f0104 	ldr	r0, [pc, #260]	; 4001df34 <CyU3PUsbSetEpNak+0x1bc>
4001de2c:	e204100f 	and	r1, r4, #15
4001de30:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de34:	e3805003 	orr	r5, r0, #3
4001de38:	e59f00f4 	ldr	r0, [pc, #244]	; 4001df34 <CyU3PUsbSetEpNak+0x1bc>
4001de3c:	e204100f 	and	r1, r4, #15
4001de40:	e7805101 	str	r5, [r0, r1, lsl #2]
4001de44:	ea000032 	b	4001df14 <CyU3PUsbSetEpNak+0x19c>
4001de48:	e59f00e8 	ldr	r0, [pc, #232]	; 4001df38 <CyU3PUsbSetEpNak+0x1c0>
4001de4c:	e204100f 	and	r1, r4, #15
4001de50:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001de54:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001de58:	e59f10d8 	ldr	r1, [pc, #216]	; 4001df38 <CyU3PUsbSetEpNak+0x1c0>
4001de5c:	e204200f 	and	r2, r4, #15
4001de60:	e7810102 	str	r0, [r1, r2, lsl #2]
4001de64:	ea00002a 	b	4001df14 <CyU3PUsbSetEpNak+0x19c>
4001de68:	e3140080 	tst	r4, #128	; 0x80
4001de6c:	0a000014 	beq	4001dec4 <CyU3PUsbSetEpNak+0x14c>
4001de70:	e59f00ac 	ldr	r0, [pc, #172]	; 4001df24 <CyU3PUsbSetEpNak+0x1ac>
4001de74:	e5d00009 	ldrb	r0, [r0, #9]
4001de78:	e3500003 	cmp	r0, #3
4001de7c:	1a000008 	bne	4001dea4 <CyU3PUsbSetEpNak+0x12c>
4001de80:	e59f00a4 	ldr	r0, [pc, #164]	; 4001df2c <CyU3PUsbSetEpNak+0x1b4>
4001de84:	e204100f 	and	r1, r4, #15
4001de88:	e7905101 	ldr	r5, [r0, r1, lsl #2]
4001de8c:	e3c50002 	bic	r0, r5, #2
4001de90:	e3805001 	orr	r5, r0, #1
4001de94:	e59f0090 	ldr	r0, [pc, #144]	; 4001df2c <CyU3PUsbSetEpNak+0x1b4>
4001de98:	e204100f 	and	r1, r4, #15
4001de9c:	e7805101 	str	r5, [r0, r1, lsl #2]
4001dea0:	ea00001b 	b	4001df14 <CyU3PUsbSetEpNak+0x19c>
4001dea4:	e59f0084 	ldr	r0, [pc, #132]	; 4001df30 <CyU3PUsbSetEpNak+0x1b8>
4001dea8:	e204100f 	and	r1, r4, #15
4001deac:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001deb0:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001deb4:	e59f1074 	ldr	r1, [pc, #116]	; 4001df30 <CyU3PUsbSetEpNak+0x1b8>
4001deb8:	e204200f 	and	r2, r4, #15
4001debc:	e7810102 	str	r0, [r1, r2, lsl #2]
4001dec0:	ea000013 	b	4001df14 <CyU3PUsbSetEpNak+0x19c>
4001dec4:	e59f0058 	ldr	r0, [pc, #88]	; 4001df24 <CyU3PUsbSetEpNak+0x1ac>
4001dec8:	e5d00009 	ldrb	r0, [r0, #9]
4001decc:	e3500003 	cmp	r0, #3
4001ded0:	1a000008 	bne	4001def8 <CyU3PUsbSetEpNak+0x180>
4001ded4:	e59f0058 	ldr	r0, [pc, #88]	; 4001df34 <CyU3PUsbSetEpNak+0x1bc>
4001ded8:	e204100f 	and	r1, r4, #15
4001dedc:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001dee0:	e3c00002 	bic	r0, r0, #2
4001dee4:	e3805001 	orr	r5, r0, #1
4001dee8:	e59f0044 	ldr	r0, [pc, #68]	; 4001df34 <CyU3PUsbSetEpNak+0x1bc>
4001deec:	e204100f 	and	r1, r4, #15
4001def0:	e7805101 	str	r5, [r0, r1, lsl #2]
4001def4:	ea000006 	b	4001df14 <CyU3PUsbSetEpNak+0x19c>
4001def8:	e59f0038 	ldr	r0, [pc, #56]	; 4001df38 <CyU3PUsbSetEpNak+0x1c0>
4001defc:	e204100f 	and	r1, r4, #15
4001df00:	e7900101 	ldr	r0, [r0, r1, lsl #2]
4001df04:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001df08:	e59f1028 	ldr	r1, [pc, #40]	; 4001df38 <CyU3PUsbSetEpNak+0x1c0>
4001df0c:	e204200f 	and	r2, r4, #15
4001df10:	e7810102 	str	r0, [r1, r2, lsl #2]
4001df14:	e59f000c 	ldr	r0, [pc, #12]	; 4001df28 <CyU3PUsbSetEpNak+0x1b0>
4001df18:	ebffb11b 	bl	4000a38c <_txe_mutex_put>
4001df1c:	e3a00000 	mov	r0, #0
4001df20:	eaffff9c 	b	4001dd98 <CyU3PUsbSetEpNak+0x20>
4001df24:	40031d40 	.word	0x40031d40
4001df28:	40031ee0 	.word	0x40031ee0
4001df2c:	e0033500 	.word	0xe0033500
4001df30:	e0031418 	.word	0xe0031418
4001df34:	e0033600 	.word	0xe0033600
4001df38:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbSetLinkPowerState:

4001df3c <CyU3PUsbSetLinkPowerState>:
4001df3c:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
4001df40:	e1a01000 	mov	r1, r0
4001df44:	e3a030ff 	mov	r3, #255	; 0xff
4001df48:	e59f0138 	ldr	r0, [pc, #312]	; 4001e088 <CyU3PUsbSetLinkPowerState+0x14c>
4001df4c:	e5d00008 	ldrb	r0, [r0, #8]
4001df50:	e3500000 	cmp	r0, #0
4001df54:	1a000001 	bne	4001df60 <CyU3PUsbSetLinkPowerState+0x24>
4001df58:	e3a00042 	mov	r0, #66	; 0x42
4001df5c:	e49df004 	pop	{pc}		; (ldr pc, [sp], #4)
4001df60:	e59f0120 	ldr	r0, [pc, #288]	; 4001e088 <CyU3PUsbSetLinkPowerState+0x14c>
4001df64:	e5d00008 	ldrb	r0, [r0, #8]
4001df68:	e3500005 	cmp	r0, #5
4001df6c:	aa000001 	bge	4001df78 <CyU3PUsbSetLinkPowerState+0x3c>
4001df70:	e3a00044 	mov	r0, #68	; 0x44
4001df74:	eafffff8 	b	4001df5c <CyU3PUsbSetLinkPowerState+0x20>
4001df78:	ebfffc1d 	bl	4001cff4 <CyU3PUsbGetSpeed>
4001df7c:	e3500003 	cmp	r0, #3
4001df80:	0a000001 	beq	4001df8c <CyU3PUsbSetLinkPowerState+0x50>
4001df84:	e3a000ff 	mov	r0, #255	; 0xff
4001df88:	eafffff3 	b	4001df5c <CyU3PUsbSetLinkPowerState+0x20>
4001df8c:	e59f00f8 	ldr	r0, [pc, #248]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001df90:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001df94:	e200203f 	and	r2, r0, #63	; 0x3f
4001df98:	e3510000 	cmp	r1, #0
4001df9c:	0a000004 	beq	4001dfb4 <CyU3PUsbSetLinkPowerState+0x78>
4001dfa0:	e3510001 	cmp	r1, #1
4001dfa4:	0a000015 	beq	4001e000 <CyU3PUsbSetLinkPowerState+0xc4>
4001dfa8:	e3510002 	cmp	r1, #2
4001dfac:	1a00002f 	bne	4001e070 <CyU3PUsbSetLinkPowerState+0x134>
4001dfb0:	ea000020 	b	4001e038 <CyU3PUsbSetLinkPowerState+0xfc>
4001dfb4:	e1a00000 	nop			; (mov r0, r0)
4001dfb8:	e59f00cc 	ldr	r0, [pc, #204]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001dfbc:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dfc0:	e3100c02 	tst	r0, #512	; 0x200
4001dfc4:	1a00000b 	bne	4001dff8 <CyU3PUsbSetLinkPowerState+0xbc>
4001dfc8:	e59f00bc 	ldr	r0, [pc, #188]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001dfcc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001dfd0:	e200203f 	and	r2, r0, #63	; 0x3f
4001dfd4:	e3520011 	cmp	r2, #17
4001dfd8:	ba000006 	blt	4001dff8 <CyU3PUsbSetLinkPowerState+0xbc>
4001dfdc:	e3520013 	cmp	r2, #19
4001dfe0:	ca000004 	bgt	4001dff8 <CyU3PUsbSetLinkPowerState+0xbc>
4001dfe4:	e59f00a0 	ldr	r0, [pc, #160]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001dfe8:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001dfec:	e3800c02 	orr	r0, r0, #512	; 0x200
4001dff0:	e59fc094 	ldr	ip, [pc, #148]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001dff4:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001dff8:	e3a03000 	mov	r3, #0
4001dffc:	ea00001e 	b	4001e07c <CyU3PUsbSetLinkPowerState+0x140>
4001e000:	e1a00000 	nop			; (mov r0, r0)
4001e004:	e3520010 	cmp	r2, #16
4001e008:	1a000009 	bne	4001e034 <CyU3PUsbSetLinkPowerState+0xf8>
4001e00c:	e59f0074 	ldr	r0, [pc, #116]	; 4001e088 <CyU3PUsbSetLinkPowerState+0x14c>
4001e010:	e5d00006 	ldrb	r0, [r0, #6]
4001e014:	e3100004 	tst	r0, #4
4001e018:	0a000005 	beq	4001e034 <CyU3PUsbSetLinkPowerState+0xf8>
4001e01c:	e59f0068 	ldr	r0, [pc, #104]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001e020:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e024:	e3800001 	orr	r0, r0, #1
4001e028:	e59fc05c 	ldr	ip, [pc, #92]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001e02c:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e030:	e3a03000 	mov	r3, #0
4001e034:	ea000010 	b	4001e07c <CyU3PUsbSetLinkPowerState+0x140>
4001e038:	e1a00000 	nop			; (mov r0, r0)
4001e03c:	e3520010 	cmp	r2, #16
4001e040:	1a000009 	bne	4001e06c <CyU3PUsbSetLinkPowerState+0x130>
4001e044:	e59f003c 	ldr	r0, [pc, #60]	; 4001e088 <CyU3PUsbSetLinkPowerState+0x14c>
4001e048:	e5d00006 	ldrb	r0, [r0, #6]
4001e04c:	e3100008 	tst	r0, #8
4001e050:	0a000005 	beq	4001e06c <CyU3PUsbSetLinkPowerState+0x130>
4001e054:	e59f0030 	ldr	r0, [pc, #48]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001e058:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4001e05c:	e3800002 	orr	r0, r0, #2
4001e060:	e59fc024 	ldr	ip, [pc, #36]	; 4001e08c <CyU3PUsbSetLinkPowerState+0x150>
4001e064:	e58c0050 	str	r0, [ip, #80]	; 0x50
4001e068:	e3a03000 	mov	r3, #0
4001e06c:	ea000002 	b	4001e07c <CyU3PUsbSetLinkPowerState+0x140>
4001e070:	e1a00000 	nop			; (mov r0, r0)
4001e074:	e3a03040 	mov	r3, #64	; 0x40
4001e078:	e1a00000 	nop			; (mov r0, r0)
4001e07c:	e1a00000 	nop			; (mov r0, r0)
4001e080:	e1a00003 	mov	r0, r3
4001e084:	eaffffb4 	b	4001df5c <CyU3PUsbSetLinkPowerState+0x20>
4001e088:	40031d40 	.word	0x40031d40
4001e08c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PUsbStall:

4001e090 <CyU3PUsbStall>:
4001e090:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
4001e094:	e1a04000 	mov	r4, r0
4001e098:	e1a05001 	mov	r5, r1
4001e09c:	e1a06002 	mov	r6, r2
4001e0a0:	e204700f 	and	r7, r4, #15
4001e0a4:	e3a08000 	mov	r8, #0
4001e0a8:	e59f0344 	ldr	r0, [pc, #836]	; 4001e3f4 <CyU3PUsbStall+0x364>
4001e0ac:	e5d00008 	ldrb	r0, [r0, #8]
4001e0b0:	e3500000 	cmp	r0, #0
4001e0b4:	1a000001 	bne	4001e0c0 <CyU3PUsbStall+0x30>
4001e0b8:	e3a00042 	mov	r0, #66	; 0x42
4001e0bc:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
4001e0c0:	e204007f 	and	r0, r4, #127	; 0x7f
4001e0c4:	e350000f 	cmp	r0, #15
4001e0c8:	da000001 	ble	4001e0d4 <CyU3PUsbStall+0x44>
4001e0cc:	e3a00040 	mov	r0, #64	; 0x40
4001e0d0:	eafffff9 	b	4001e0bc <CyU3PUsbStall+0x2c>
4001e0d4:	e3570000 	cmp	r7, #0
4001e0d8:	1a000003 	bne	4001e0ec <CyU3PUsbStall+0x5c>
4001e0dc:	e3550000 	cmp	r5, #0
4001e0e0:	1a000001 	bne	4001e0ec <CyU3PUsbStall+0x5c>
4001e0e4:	e3a00040 	mov	r0, #64	; 0x40
4001e0e8:	eafffff3 	b	4001e0bc <CyU3PUsbStall+0x2c>
4001e0ec:	e59f0300 	ldr	r0, [pc, #768]	; 4001e3f4 <CyU3PUsbStall+0x364>
4001e0f0:	e5d00009 	ldrb	r0, [r0, #9]
4001e0f4:	e3500000 	cmp	r0, #0
4001e0f8:	1a000001 	bne	4001e104 <CyU3PUsbStall+0x74>
4001e0fc:	e3a00000 	mov	r0, #0
4001e100:	eaffffed 	b	4001e0bc <CyU3PUsbStall+0x2c>
4001e104:	e3e01000 	mvn	r1, #0
4001e108:	e59f02e8 	ldr	r0, [pc, #744]	; 4001e3f8 <CyU3PUsbStall+0x368>
4001e10c:	ebffb069 	bl	4000a2b8 <_txe_mutex_get>
4001e110:	e3570000 	cmp	r7, #0
4001e114:	1a000037 	bne	4001e1f8 <CyU3PUsbStall+0x168>
4001e118:	ebfffbbd 	bl	4001d014 <CyU3PUsbIsNewCtrlRqtRecvd>
4001e11c:	e3500000 	cmp	r0, #0
4001e120:	0a000003 	beq	4001e134 <CyU3PUsbStall+0xa4>
4001e124:	e59f02cc 	ldr	r0, [pc, #716]	; 4001e3f8 <CyU3PUsbStall+0x368>
4001e128:	ebffb097 	bl	4000a38c <_txe_mutex_put>
4001e12c:	e3a00000 	mov	r0, #0
4001e130:	eaffffe1 	b	4001e0bc <CyU3PUsbStall+0x2c>
4001e134:	e59f02b8 	ldr	r0, [pc, #696]	; 4001e3f4 <CyU3PUsbStall+0x364>
4001e138:	e5d00009 	ldrb	r0, [r0, #9]
4001e13c:	e3500003 	cmp	r0, #3
4001e140:	1a00001b 	bne	4001e1b4 <CyU3PUsbStall+0x124>
4001e144:	e59f02b0 	ldr	r0, [pc, #688]	; 4001e3fc <CyU3PUsbStall+0x36c>
4001e148:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e14c:	e3800004 	orr	r0, r0, #4
4001e150:	e59f12a4 	ldr	r1, [pc, #676]	; 4001e3fc <CyU3PUsbStall+0x36c>
4001e154:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e158:	e1a00001 	mov	r0, r1
4001e15c:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e160:	e3800004 	orr	r0, r0, #4
4001e164:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e168:	eb00104b 	bl	4002229c <CyU3PVicDisableAllInterrupts>
4001e16c:	e1a0a000 	mov	sl, r0
4001e170:	e3a00001 	mov	r0, #1
4001e174:	ebffd5ce 	bl	400138b4 <CyU3PBusyWait>
4001e178:	e59f027c 	ldr	r0, [pc, #636]	; 4001e3fc <CyU3PUsbStall+0x36c>
4001e17c:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e180:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e184:	e59f1270 	ldr	r1, [pc, #624]	; 4001e3fc <CyU3PUsbStall+0x36c>
4001e188:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e18c:	e1a0000a 	mov	r0, sl
4001e190:	eb00104f 	bl	400222d4 <CyU3PVicEnableInterrupts>
4001e194:	e3a00000 	mov	r0, #0
4001e198:	e59f1260 	ldr	r1, [pc, #608]	; 4001e400 <CyU3PUsbStall+0x370>
4001e19c:	e5810000 	str	r0, [r1]
4001e1a0:	e59f125c 	ldr	r1, [pc, #604]	; 4001e404 <CyU3PUsbStall+0x374>
4001e1a4:	e5810000 	str	r0, [r1]
4001e1a8:	e59f0258 	ldr	r0, [pc, #600]	; 4001e408 <CyU3PUsbStall+0x378>
4001e1ac:	ebffb323 	bl	4000ae40 <_txe_timer_deactivate>
4001e1b0:	ea00000c 	b	4001e1e8 <CyU3PUsbStall+0x158>
4001e1b4:	e59f0250 	ldr	r0, [pc, #592]	; 4001e40c <CyU3PUsbStall+0x37c>
4001e1b8:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001e1bc:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e1c0:	e59f1244 	ldr	r1, [pc, #580]	; 4001e40c <CyU3PUsbStall+0x37c>
4001e1c4:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001e1c8:	e1a00001 	mov	r0, r1
4001e1cc:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001e1d0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e1d4:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001e1d8:	e1a00001 	mov	r0, r1
4001e1dc:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4001e1e0:	e3800301 	orr	r0, r0, #67108864	; 0x4000000
4001e1e4:	e5810400 	str	r0, [r1, #1024]	; 0x400
4001e1e8:	e59f0208 	ldr	r0, [pc, #520]	; 4001e3f8 <CyU3PUsbStall+0x368>
4001e1ec:	ebffb066 	bl	4000a38c <_txe_mutex_put>
4001e1f0:	e3a00000 	mov	r0, #0
4001e1f4:	eaffffb0 	b	4001e0bc <CyU3PUsbStall+0x2c>
4001e1f8:	e59f01f4 	ldr	r0, [pc, #500]	; 4001e3f4 <CyU3PUsbStall+0x364>
4001e1fc:	e5d00009 	ldrb	r0, [r0, #9]
4001e200:	e3500003 	cmp	r0, #3
4001e204:	1a000033 	bne	4001e2d8 <CyU3PUsbStall+0x248>
4001e208:	e3140080 	tst	r4, #128	; 0x80
4001e20c:	0a000017 	beq	4001e270 <CyU3PUsbStall+0x1e0>
4001e210:	e3550000 	cmp	r5, #0
4001e214:	0a00000a 	beq	4001e244 <CyU3PUsbStall+0x1b4>
4001e218:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e410 <CyU3PUsbStall+0x380>
4001e21c:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e220:	e3899005 	orr	r9, r9, #5
4001e224:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e228:	e1800ba0 	orr	r0, r0, r0, lsr #23
4001e22c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e230:	e1a01800 	lsl	r1, r0, #16
4001e234:	e1a01821 	lsr	r1, r1, #16
4001e238:	e1a00004 	mov	r0, r4
4001e23c:	ebfffdde 	bl	4001d9bc <CyU3PUsbSendErdy>
4001e240:	ea000041 	b	4001e34c <CyU3PUsbStall+0x2bc>
4001e244:	e59f01c4 	ldr	r0, [pc, #452]	; 4001e410 <CyU3PUsbStall+0x380>
4001e248:	e7909107 	ldr	r9, [r0, r7, lsl #2]
4001e24c:	e3899011 	orr	r9, r9, #17
4001e250:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e254:	e3a00001 	mov	r0, #1
4001e258:	ebffd595 	bl	400138b4 <CyU3PBusyWait>
4001e25c:	e3c90014 	bic	r0, r9, #20
4001e260:	e3809001 	orr	r9, r0, #1
4001e264:	e59f01a4 	ldr	r0, [pc, #420]	; 4001e410 <CyU3PUsbStall+0x380>
4001e268:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e26c:	ea000036 	b	4001e34c <CyU3PUsbStall+0x2bc>
4001e270:	e3550000 	cmp	r5, #0
4001e274:	0a00000b 	beq	4001e2a8 <CyU3PUsbStall+0x218>
4001e278:	e59f0194 	ldr	r0, [pc, #404]	; 4001e414 <CyU3PUsbStall+0x384>
4001e27c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e280:	e3809005 	orr	r9, r0, #5
4001e284:	e59f0188 	ldr	r0, [pc, #392]	; 4001e414 <CyU3PUsbStall+0x384>
4001e288:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e28c:	e28000c0 	add	r0, r0, #192	; 0xc0
4001e290:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e294:	e1a01800 	lsl	r1, r0, #16
4001e298:	e1a01821 	lsr	r1, r1, #16
4001e29c:	e1a00004 	mov	r0, r4
4001e2a0:	ebfffdc5 	bl	4001d9bc <CyU3PUsbSendErdy>
4001e2a4:	ea000028 	b	4001e34c <CyU3PUsbStall+0x2bc>
4001e2a8:	e59f0164 	ldr	r0, [pc, #356]	; 4001e414 <CyU3PUsbStall+0x384>
4001e2ac:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2b0:	e3809011 	orr	r9, r0, #17
4001e2b4:	e59f0158 	ldr	r0, [pc, #344]	; 4001e414 <CyU3PUsbStall+0x384>
4001e2b8:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e2bc:	e3a00001 	mov	r0, #1
4001e2c0:	ebffd57b 	bl	400138b4 <CyU3PBusyWait>
4001e2c4:	e3c90014 	bic	r0, r9, #20
4001e2c8:	e3809001 	orr	r9, r0, #1
4001e2cc:	e59f0140 	ldr	r0, [pc, #320]	; 4001e414 <CyU3PUsbStall+0x384>
4001e2d0:	e7809107 	str	r9, [r0, r7, lsl #2]
4001e2d4:	ea00001c 	b	4001e34c <CyU3PUsbStall+0x2bc>
4001e2d8:	e3140080 	tst	r4, #128	; 0x80
4001e2dc:	0a00000d 	beq	4001e318 <CyU3PUsbStall+0x288>
4001e2e0:	e3550000 	cmp	r5, #0
4001e2e4:	0a000005 	beq	4001e300 <CyU3PUsbStall+0x270>
4001e2e8:	e59f0128 	ldr	r0, [pc, #296]	; 4001e418 <CyU3PUsbStall+0x388>
4001e2ec:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e2f0:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e2f4:	e59f111c 	ldr	r1, [pc, #284]	; 4001e418 <CyU3PUsbStall+0x388>
4001e2f8:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e2fc:	ea000012 	b	4001e34c <CyU3PUsbStall+0x2bc>
4001e300:	e59f0110 	ldr	r0, [pc, #272]	; 4001e418 <CyU3PUsbStall+0x388>
4001e304:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e308:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e30c:	e59f1104 	ldr	r1, [pc, #260]	; 4001e418 <CyU3PUsbStall+0x388>
4001e310:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e314:	ea00000c 	b	4001e34c <CyU3PUsbStall+0x2bc>
4001e318:	e3550000 	cmp	r5, #0
4001e31c:	0a000005 	beq	4001e338 <CyU3PUsbStall+0x2a8>
4001e320:	e59f00f4 	ldr	r0, [pc, #244]	; 4001e41c <CyU3PUsbStall+0x38c>
4001e324:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e328:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001e32c:	e59f10e8 	ldr	r1, [pc, #232]	; 4001e41c <CyU3PUsbStall+0x38c>
4001e330:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e334:	ea000004 	b	4001e34c <CyU3PUsbStall+0x2bc>
4001e338:	e59f00dc 	ldr	r0, [pc, #220]	; 4001e41c <CyU3PUsbStall+0x38c>
4001e33c:	e7900107 	ldr	r0, [r0, r7, lsl #2]
4001e340:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001e344:	e59f10d0 	ldr	r1, [pc, #208]	; 4001e41c <CyU3PUsbStall+0x38c>
4001e348:	e7810107 	str	r0, [r1, r7, lsl #2]
4001e34c:	e3560000 	cmp	r6, #0
4001e350:	0a000023 	beq	4001e3e4 <CyU3PUsbStall+0x354>
4001e354:	e3550000 	cmp	r5, #0
4001e358:	1a000021 	bne	4001e3e4 <CyU3PUsbStall+0x354>
4001e35c:	e59f0090 	ldr	r0, [pc, #144]	; 4001e3f4 <CyU3PUsbStall+0x364>
4001e360:	e5d00009 	ldrb	r0, [r0, #9]
4001e364:	e3500003 	cmp	r0, #3
4001e368:	1a00000b 	bne	4001e39c <CyU3PUsbStall+0x30c>
4001e36c:	e3878101 	orr	r8, r7, #1073741824	; 0x40000000
4001e370:	e3140080 	tst	r4, #128	; 0x80
4001e374:	0a000000 	beq	4001e37c <CyU3PUsbStall+0x2ec>
4001e378:	e3888010 	orr	r8, r8, #16
4001e37c:	e59f0078 	ldr	r0, [pc, #120]	; 4001e3fc <CyU3PUsbStall+0x36c>
4001e380:	e5808440 	str	r8, [r0, #1088]	; 0x440
4001e384:	e1a00000 	nop			; (mov r0, r0)
4001e388:	e59f006c 	ldr	r0, [pc, #108]	; 4001e3fc <CyU3PUsbStall+0x36c>
4001e38c:	e5900440 	ldr	r0, [r0, #1088]	; 0x440
4001e390:	e3100102 	tst	r0, #-2147483648	; 0x80000000
4001e394:	0afffffb 	beq	4001e388 <CyU3PUsbStall+0x2f8>
4001e398:	ea000011 	b	4001e3e4 <CyU3PUsbStall+0x354>
4001e39c:	e3140080 	tst	r4, #128	; 0x80
4001e3a0:	0a000000 	beq	4001e3a8 <CyU3PUsbStall+0x318>
4001e3a4:	e3877010 	orr	r7, r7, #16
4001e3a8:	e59f005c 	ldr	r0, [pc, #92]	; 4001e40c <CyU3PUsbStall+0x37c>
4001e3ac:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e3b0:	e1a00000 	nop			; (mov r0, r0)
4001e3b4:	e59f0050 	ldr	r0, [pc, #80]	; 4001e40c <CyU3PUsbStall+0x37c>
4001e3b8:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e3bc:	e3100c01 	tst	r0, #256	; 0x100
4001e3c0:	0afffffb 	beq	4001e3b4 <CyU3PUsbStall+0x324>
4001e3c4:	e3877020 	orr	r7, r7, #32
4001e3c8:	e59f003c 	ldr	r0, [pc, #60]	; 4001e40c <CyU3PUsbStall+0x37c>
4001e3cc:	e5807414 	str	r7, [r0, #1044]	; 0x414
4001e3d0:	e1a00000 	nop			; (mov r0, r0)
4001e3d4:	e59f0030 	ldr	r0, [pc, #48]	; 4001e40c <CyU3PUsbStall+0x37c>
4001e3d8:	e5900414 	ldr	r0, [r0, #1044]	; 0x414
4001e3dc:	e3100c01 	tst	r0, #256	; 0x100
4001e3e0:	0afffffb 	beq	4001e3d4 <CyU3PUsbStall+0x344>
4001e3e4:	e59f000c 	ldr	r0, [pc, #12]	; 4001e3f8 <CyU3PUsbStall+0x368>
4001e3e8:	ebffafe7 	bl	4000a38c <_txe_mutex_put>
4001e3ec:	e3a00000 	mov	r0, #0
4001e3f0:	eaffff31 	b	4001e0bc <CyU3PUsbStall+0x2c>
4001e3f4:	40031d40 	.word	0x40031d40
4001e3f8:	40031ee0 	.word	0x40031ee0
4001e3fc:	e0033000 	.word	0xe0033000
4001e400:	40030db0 	.word	0x40030db0
4001e404:	40030db4 	.word	0x40030db4
4001e408:	400326a0 	.word	0x400326a0
4001e40c:	e0031000 	.word	0xe0031000
4001e410:	e0033500 	.word	0xe0033500
4001e414:	e0033600 	.word	0xe0033600
4001e418:	e0031418 	.word	0xe0031418
4001e41c:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbStart:

4001e420 <CyU3PUsbStart>:
4001e420:	e92d4070 	push	{r4, r5, r6, lr}
4001e424:	e59f0324 	ldr	r0, [pc, #804]	; 4001e750 <CyU3PUsbStart+0x330>
4001e428:	e5900000 	ldr	r0, [r0]
4001e42c:	e3500000 	cmp	r0, #0
4001e430:	1a000001 	bne	4001e43c <CyU3PUsbStart+0x1c>
4001e434:	e3a00010 	mov	r0, #16
4001e438:	e8bd8070 	pop	{r4, r5, r6, pc}
4001e43c:	e59f0310 	ldr	r0, [pc, #784]	; 4001e754 <CyU3PUsbStart+0x334>
4001e440:	e5d00008 	ldrb	r0, [r0, #8]
4001e444:	e3500000 	cmp	r0, #0
4001e448:	0a000001 	beq	4001e454 <CyU3PUsbStart+0x34>
4001e44c:	e3a00043 	mov	r0, #67	; 0x43
4001e450:	eafffff8 	b	4001e438 <CyU3PUsbStart+0x18>
4001e454:	e59f02fc 	ldr	r0, [pc, #764]	; 4001e758 <CyU3PUsbStart+0x338>
4001e458:	e5900000 	ldr	r0, [r0]
4001e45c:	e3500000 	cmp	r0, #0
4001e460:	0a00006b 	beq	4001e614 <CyU3PUsbStart+0x1f4>
4001e464:	e59f52f0 	ldr	r5, [pc, #752]	; 4001e75c <CyU3PUsbStart+0x33c>
4001e468:	eb00059e 	bl	4001fae8 <CyU3PUibSocketInit>
4001e46c:	ebfff98c 	bl	4001caa4 <CyU3PUsbCreateDmaChannels>
4001e470:	e1a04000 	mov	r4, r0
4001e474:	e3540000 	cmp	r4, #0
4001e478:	0a000001 	beq	4001e484 <CyU3PUsbStart+0x64>
4001e47c:	e1a00004 	mov	r0, r4
4001e480:	eaffffec 	b	4001e438 <CyU3PUsbStart+0x18>
4001e484:	e3a00001 	mov	r0, #1
4001e488:	e59f12c4 	ldr	r1, [pc, #708]	; 4001e754 <CyU3PUsbStart+0x334>
4001e48c:	e5c10008 	strb	r0, [r1, #8]
4001e490:	e5950004 	ldr	r0, [r5, #4]
4001e494:	e5c10009 	strb	r0, [r1, #9]
4001e498:	e1a00005 	mov	r0, r5
4001e49c:	ebfffaef 	bl	4001d060 <CyU3PUsbLoadBootloaderDescs>
4001e4a0:	e1a04000 	mov	r4, r0
4001e4a4:	e3540000 	cmp	r4, #0
4001e4a8:	0a000001 	beq	4001e4b4 <CyU3PUsbStart+0x94>
4001e4ac:	e1a00004 	mov	r0, r4
4001e4b0:	eaffffe0 	b	4001e438 <CyU3PUsbStart+0x18>
4001e4b4:	e3a00006 	mov	r0, #6
4001e4b8:	e59f1294 	ldr	r1, [pc, #660]	; 4001e754 <CyU3PUsbStart+0x334>
4001e4bc:	e5c10008 	strb	r0, [r1, #8]
4001e4c0:	e2810000 	add	r0, r1, #0
4001e4c4:	e5d00009 	ldrb	r0, [r0, #9]
4001e4c8:	e3500003 	cmp	r0, #3
4001e4cc:	1a000002 	bne	4001e4dc <CyU3PUsbStart+0xbc>
4001e4d0:	e3a00001 	mov	r0, #1
4001e4d4:	e59f1284 	ldr	r1, [pc, #644]	; 4001e760 <CyU3PUsbStart+0x340>
4001e4d8:	e5810000 	str	r0, [r1]
4001e4dc:	e59500d8 	ldr	r0, [r5, #216]	; 0xd8
4001e4e0:	e59f127c 	ldr	r1, [pc, #636]	; 4001e764 <CyU3PUsbStart+0x344>
4001e4e4:	e1500001 	cmp	r0, r1
4001e4e8:	1a000015 	bne	4001e544 <CyU3PUsbStart+0x124>
4001e4ec:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e4f0:	e59f1270 	ldr	r1, [pc, #624]	; 4001e768 <CyU3PUsbStart+0x348>
4001e4f4:	e1500001 	cmp	r0, r1
4001e4f8:	3a000007 	bcc	4001e51c <CyU3PUsbStart+0xfc>
4001e4fc:	e59500e0 	ldr	r0, [r5, #224]	; 0xe0
4001e500:	e3500000 	cmp	r0, #0
4001e504:	0a000001 	beq	4001e510 <CyU3PUsbStart+0xf0>
4001e508:	e3a00001 	mov	r0, #1
4001e50c:	ea000000 	b	4001e514 <CyU3PUsbStart+0xf4>
4001e510:	e3a00000 	mov	r0, #0
4001e514:	e59f1238 	ldr	r1, [pc, #568]	; 4001e754 <CyU3PUsbStart+0x334>
4001e518:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e51c:	e59500dc 	ldr	r0, [r5, #220]	; 0xdc
4001e520:	e59f1244 	ldr	r1, [pc, #580]	; 4001e76c <CyU3PUsbStart+0x34c>
4001e524:	e1500001 	cmp	r0, r1
4001e528:	3a000008 	bcc	4001e550 <CyU3PUsbStart+0x130>
4001e52c:	e59f023c 	ldr	r0, [pc, #572]	; 4001e770 <CyU3PUsbStart+0x350>
4001e530:	e5900000 	ldr	r0, [r0]
4001e534:	e3800002 	orr	r0, r0, #2
4001e538:	e59f1230 	ldr	r1, [pc, #560]	; 4001e770 <CyU3PUsbStart+0x350>
4001e53c:	e5810000 	str	r0, [r1]
4001e540:	ea000002 	b	4001e550 <CyU3PUsbStart+0x130>
4001e544:	e3a00001 	mov	r0, #1
4001e548:	e59f1204 	ldr	r1, [pc, #516]	; 4001e754 <CyU3PUsbStart+0x334>
4001e54c:	e5810024 	str	r0, [r1, #36]	; 0x24
4001e550:	e3e00000 	mvn	r0, #0
4001e554:	e59f1218 	ldr	r1, [pc, #536]	; 4001e774 <CyU3PUsbStart+0x354>
4001e558:	e5810004 	str	r0, [r1, #4]
4001e55c:	e59f0214 	ldr	r0, [pc, #532]	; 4001e778 <CyU3PUsbStart+0x358>
4001e560:	e5810008 	str	r0, [r1, #8]
4001e564:	e3e00000 	mvn	r0, #0
4001e568:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001e56c:	e59f0208 	ldr	r0, [pc, #520]	; 4001e77c <CyU3PUsbStart+0x35c>
4001e570:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e574:	e3a00000 	mov	r0, #0
4001e578:	e5810478 	str	r0, [r1, #1144]	; 0x478
4001e57c:	e3e00000 	mvn	r0, #0
4001e580:	e0811680 	add	r1, r1, r0, lsl #13
4001e584:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001e588:	e59f01f0 	ldr	r0, [pc, #496]	; 4001e780 <CyU3PUsbStart+0x360>
4001e58c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001e590:	e3e00000 	mvn	r0, #0
4001e594:	e5810524 	str	r0, [r1, #1316]	; 0x524
4001e598:	e3a00000 	mov	r0, #0
4001e59c:	e5810520 	str	r0, [r1, #1312]	; 0x520
4001e5a0:	e3a00ef3 	mov	r0, #3888	; 0xf30
4001e5a4:	e1c11080 	bic	r1, r1, r0, lsl #1
4001e5a8:	e5810004 	str	r0, [r1, #4]
4001e5ac:	e3a00008 	mov	r0, #8
4001e5b0:	eb000f42 	bl	400222c0 <CyU3PVicEnableInt>
4001e5b4:	e3a00009 	mov	r0, #9
4001e5b8:	eb000f40 	bl	400222c0 <CyU3PVicEnableInt>
4001e5bc:	ebfffa8c 	bl	4001cff4 <CyU3PUsbGetSpeed>
4001e5c0:	e1a06000 	mov	r6, r0
4001e5c4:	eb0006b5 	bl	400200a0 <CyU3PUsbEpPrepare>
4001e5c8:	e59f01a0 	ldr	r0, [pc, #416]	; 4001e770 <CyU3PUsbStart+0x350>
4001e5cc:	e5900000 	ldr	r0, [r0]
4001e5d0:	e3100002 	tst	r0, #2
4001e5d4:	1a000003 	bne	4001e5e8 <CyU3PUsbStart+0x1c8>
4001e5d8:	e3e00000 	mvn	r0, #0
4001e5dc:	e5850000 	str	r0, [r5]
4001e5e0:	e3a00000 	mov	r0, #0
4001e5e4:	e585000c 	str	r0, [r5, #12]
4001e5e8:	e3e00000 	mvn	r0, #0
4001e5ec:	e59f1190 	ldr	r1, [pc, #400]	; 4001e784 <CyU3PUsbStart+0x364>
4001e5f0:	e5810034 	str	r0, [r1, #52]	; 0x34
4001e5f4:	e3a00b01 	mov	r0, #1024	; 0x400
4001e5f8:	e5810038 	str	r0, [r1, #56]	; 0x38
4001e5fc:	e59f1150 	ldr	r1, [pc, #336]	; 4001e754 <CyU3PUsbStart+0x334>
4001e600:	e5810074 	str	r0, [r1, #116]	; 0x74
4001e604:	e3a00015 	mov	r0, #21
4001e608:	eb000f2c 	bl	400222c0 <CyU3PVicEnableInt>
4001e60c:	e3a000fe 	mov	r0, #254	; 0xfe
4001e610:	eaffff88 	b	4001e438 <CyU3PUsbStart+0x18>
4001e614:	e1a00000 	nop			; (mov r0, r0)
4001e618:	e59f0168 	ldr	r0, [pc, #360]	; 4001e788 <CyU3PUsbStart+0x368>
4001e61c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e620:	e3c00901 	bic	r0, r0, #16384	; 0x4000
4001e624:	e59f115c 	ldr	r1, [pc, #348]	; 4001e788 <CyU3PUsbStart+0x368>
4001e628:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e62c:	e3a00002 	mov	r0, #2
4001e630:	ebffd49f 	bl	400138b4 <CyU3PBusyWait>
4001e634:	e59f014c 	ldr	r0, [pc, #332]	; 4001e788 <CyU3PUsbStart+0x368>
4001e638:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e63c:	e3c00902 	bic	r0, r0, #32768	; 0x8000
4001e640:	e59f1140 	ldr	r1, [pc, #320]	; 4001e788 <CyU3PUsbStart+0x368>
4001e644:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e648:	e1a00001 	mov	r0, r1
4001e64c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001e650:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
4001e654:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e658:	e1a00001 	mov	r0, r1
4001e65c:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e660:	e3800008 	orr	r0, r0, #8
4001e664:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e668:	e2810a21 	add	r0, r1, #135168	; 0x21000
4001e66c:	e5900008 	ldr	r0, [r0, #8]
4001e670:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4001e674:	e2811a21 	add	r1, r1, #135168	; 0x21000
4001e678:	e5810008 	str	r0, [r1, #8]
4001e67c:	e3a00002 	mov	r0, #2
4001e680:	ebffd48b 	bl	400138b4 <CyU3PBusyWait>
4001e684:	ebfff645 	bl	4001bfa0 <CyU3POtgIsDeviceMode>
4001e688:	e3500000 	cmp	r0, #0
4001e68c:	0a000002 	beq	4001e69c <CyU3PUsbStart+0x27c>
4001e690:	ebfffa5b 	bl	4001d004 <CyU3PUsbHostIsStarted>
4001e694:	e3500000 	cmp	r0, #0
4001e698:	0a000001 	beq	4001e6a4 <CyU3PUsbStart+0x284>
4001e69c:	e3a00047 	mov	r0, #71	; 0x47
4001e6a0:	eaffff64 	b	4001e438 <CyU3PUsbStart+0x18>
4001e6a4:	e3a01002 	mov	r1, #2
4001e6a8:	e1a00001 	mov	r0, r1
4001e6ac:	ebfff820 	bl	4001c734 <CyU3PSetUsbCoreClock>
4001e6b0:	e59f00d4 	ldr	r0, [pc, #212]	; 4001e78c <CyU3PUsbStart+0x36c>
4001e6b4:	e59f10d4 	ldr	r1, [pc, #212]	; 4001e790 <CyU3PUsbStart+0x370>
4001e6b8:	e5810000 	str	r0, [r1]
4001e6bc:	ebfff633 	bl	4001bf90 <CyU3POtgGetMode>
4001e6c0:	e3500000 	cmp	r0, #0
4001e6c4:	1a000003 	bne	4001e6d8 <CyU3PUsbStart+0x2b8>
4001e6c8:	ebfffc09 	bl	4001d6f4 <CyU3PUsbPowerOn>
4001e6cc:	e3a00000 	mov	r0, #0
4001e6d0:	e59f10b0 	ldr	r1, [pc, #176]	; 4001e788 <CyU3PUsbStart+0x368>
4001e6d4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001e6d8:	e59f00b4 	ldr	r0, [pc, #180]	; 4001e794 <CyU3PUsbStart+0x374>
4001e6dc:	e59f10a4 	ldr	r1, [pc, #164]	; 4001e788 <CyU3PUsbStart+0x368>
4001e6e0:	e5810008 	str	r0, [r1, #8]
4001e6e4:	e00108c0 	and	r0, r1, r0, asr #17
4001e6e8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e6ec:	e3800008 	orr	r0, r0, #8
4001e6f0:	e5810408 	str	r0, [r1, #1032]	; 0x408
4001e6f4:	eb000662 	bl	40020084 <CyU3PUsbDescInit>
4001e6f8:	ebfff8e9 	bl	4001caa4 <CyU3PUsbCreateDmaChannels>
4001e6fc:	e1a04000 	mov	r4, r0
4001e700:	e3540000 	cmp	r4, #0
4001e704:	0a000001 	beq	4001e710 <CyU3PUsbStart+0x2f0>
4001e708:	e1a00004 	mov	r0, r4
4001e70c:	eaffff49 	b	4001e438 <CyU3PUsbStart+0x18>
4001e710:	e3a00001 	mov	r0, #1
4001e714:	e59f1038 	ldr	r1, [pc, #56]	; 4001e754 <CyU3PUsbStart+0x334>
4001e718:	e5c10008 	strb	r0, [r1, #8]
4001e71c:	e2810000 	add	r0, r1, #0
4001e720:	e5d00007 	ldrb	r0, [r0, #7]
4001e724:	e3500001 	cmp	r0, #1
4001e728:	1a000002 	bne	4001e738 <CyU3PUsbStart+0x318>
4001e72c:	e3a00003 	mov	r0, #3
4001e730:	e5c10008 	strb	r0, [r1, #8]
4001e734:	ea000002 	b	4001e744 <CyU3PUsbStart+0x324>
4001e738:	e3a00002 	mov	r0, #2
4001e73c:	e59f1010 	ldr	r1, [pc, #16]	; 4001e754 <CyU3PUsbStart+0x334>
4001e740:	e5c10008 	strb	r0, [r1, #8]
4001e744:	ebfff81b 	bl	4001c7b8 <CyU3PUibInit>
4001e748:	e1a00004 	mov	r0, r4
4001e74c:	eaffff39 	b	4001e438 <CyU3PUsbStart+0x18>
4001e750:	40030d60 	.word	0x40030d60
4001e754:	40031d40 	.word	0x40031d40
4001e758:	40030c68 	.word	0x40030c68
4001e75c:	40002000 	.word	0x40002000
4001e760:	40030d70 	.word	0x40030d70
4001e764:	42335846 	.word	0x42335846
4001e768:	00010101 	.word	0x00010101
4001e76c:	00010200 	.word	0x00010200
4001e770:	40030d44 	.word	0x40030d44
4001e774:	e0033000 	.word	0xe0033000
4001e778:	00038081 	.word	0x00038081
4001e77c:	00004a3d 	.word	0x00004a3d
4001e780:	0000095c 	.word	0x0000095c
4001e784:	e0051000 	.word	0xe0051000
4001e788:	e0031000 	.word	0xe0031000
4001e78c:	de001011 	.word	0xde001011
4001e790:	e0050000 	.word	0xe0050000
4001e794:	a0000011 	.word	0xa0000011

Disassembly of section i.GetUsbLinkActive:

4001e798 <GetUsbLinkActive>:
4001e798:	e92d4010 	push	{r4, lr}
4001e79c:	e59f0064 	ldr	r0, [pc, #100]	; 4001e808 <GetUsbLinkActive+0x70>
4001e7a0:	e5d00009 	ldrb	r0, [r0, #9]
4001e7a4:	e3500003 	cmp	r0, #3
4001e7a8:	1a000015 	bne	4001e804 <GetUsbLinkActive+0x6c>
4001e7ac:	e59f0058 	ldr	r0, [pc, #88]	; 4001e80c <GetUsbLinkActive+0x74>
4001e7b0:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001e7b4:	e3c00004 	bic	r0, r0, #4
4001e7b8:	e59f104c 	ldr	r1, [pc, #76]	; 4001e80c <GetUsbLinkActive+0x74>
4001e7bc:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001e7c0:	e1a00001 	mov	r0, r1
4001e7c4:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001e7c8:	e3c00004 	bic	r0, r0, #4
4001e7cc:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001e7d0:	e59f0030 	ldr	r0, [pc, #48]	; 4001e808 <GetUsbLinkActive+0x70>
4001e7d4:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001e7d8:	e3500000 	cmp	r0, #0
4001e7dc:	1a000008 	bne	4001e804 <GetUsbLinkActive+0x6c>
4001e7e0:	e1a00001 	mov	r0, r1
4001e7e4:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001e7e8:	e200403f 	and	r4, r0, #63	; 0x3f
4001e7ec:	e3540011 	cmp	r4, #17
4001e7f0:	0a000001 	beq	4001e7fc <GetUsbLinkActive+0x64>
4001e7f4:	e3540012 	cmp	r4, #18
4001e7f8:	1a000001 	bne	4001e804 <GetUsbLinkActive+0x6c>
4001e7fc:	e3a00000 	mov	r0, #0
4001e800:	ebfffdcd 	bl	4001df3c <CyU3PUsbSetLinkPowerState>
4001e804:	e8bd8010 	pop	{r4, pc}
4001e808:	40031d40 	.word	0x40031d40
4001e80c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PHsGrantIntrHandler:

4001e810 <CyU3PHsGrantIntrHandler>:
4001e810:	e92d4010 	push	{r4, lr}
4001e814:	e59f005c 	ldr	r0, [pc, #92]	; 4001e878 <CyU3PHsGrantIntrHandler+0x68>
4001e818:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4001e81c:	e3100080 	tst	r0, #128	; 0x80
4001e820:	0a000013 	beq	4001e874 <CyU3PHsGrantIntrHandler+0x64>
4001e824:	e59f0050 	ldr	r0, [pc, #80]	; 4001e87c <CyU3PHsGrantIntrHandler+0x6c>
4001e828:	e5900014 	ldr	r0, [r0, #20]
4001e82c:	e59f1048 	ldr	r1, [pc, #72]	; 4001e87c <CyU3PHsGrantIntrHandler+0x6c>
4001e830:	e581000c 	str	r0, [r1, #12]
4001e834:	e2810000 	add	r0, r1, #0
4001e838:	e5900018 	ldr	r0, [r0, #24]
4001e83c:	e5810010 	str	r0, [r1, #16]
4001e840:	e59f0038 	ldr	r0, [pc, #56]	; 4001e880 <CyU3PHsGrantIntrHandler+0x70>
4001e844:	e5900000 	ldr	r0, [r0]
4001e848:	e3500000 	cmp	r0, #0
4001e84c:	0a000004 	beq	4001e864 <CyU3PHsGrantIntrHandler+0x54>
4001e850:	e3a01001 	mov	r1, #1
4001e854:	e3a00006 	mov	r0, #6
4001e858:	e59f2020 	ldr	r2, [pc, #32]	; 4001e880 <CyU3PHsGrantIntrHandler+0x70>
4001e85c:	e5922000 	ldr	r2, [r2]
4001e860:	e12fff32 	blx	r2
4001e864:	e3a00002 	mov	r0, #2
4001e868:	e59f1014 	ldr	r1, [pc, #20]	; 4001e884 <CyU3PHsGrantIntrHandler+0x74>
4001e86c:	e5c10009 	strb	r0, [r1, #9]
4001e870:	eb00060a 	bl	400200a0 <CyU3PUsbEpPrepare>
4001e874:	e8bd8010 	pop	{r4, pc}
4001e878:	e0031000 	.word	0xe0031000
4001e87c:	40031f98 	.word	0x40031f98
4001e880:	40030d9c 	.word	0x40030d9c
4001e884:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUibApplicationDefine:

4001e888 <CyU3PUibApplicationDefine>:
4001e888:	e92d4030 	push	{r4, r5, lr}
4001e88c:	e24dd01c 	sub	sp, sp, #28
4001e890:	eb000178 	bl	4001ee78 <CyU3PUibInitVars>
4001e894:	e3a00b01 	mov	r0, #1024	; 0x400
4001e898:	ebff9375 	bl	40003674 <CyU3PMemAlloc>
4001e89c:	e1a05000 	mov	r5, r0
4001e8a0:	e3550000 	cmp	r5, #0
4001e8a4:	0a00004f 	beq	4001e9e8 <CyU3PUibApplicationDefine+0x160>
4001e8a8:	e3a030a8 	mov	r3, #168	; 0xa8
4001e8ac:	e3a02000 	mov	r2, #0
4001e8b0:	e3a00004 	mov	r0, #4
4001e8b4:	e58d000c 	str	r0, [sp, #12]
4001e8b8:	e58d2010 	str	r2, [sp, #16]
4001e8bc:	e58d2014 	str	r2, [sp, #20]
4001e8c0:	e58d3018 	str	r3, [sp, #24]
4001e8c4:	e3a02b01 	mov	r2, #1024	; 0x400
4001e8c8:	e3a03000 	mov	r3, #0
4001e8cc:	e58d2004 	str	r2, [sp, #4]
4001e8d0:	e59f2118 	ldr	r2, [pc, #280]	; 4001e9f0 <CyU3PUibApplicationDefine+0x168>
4001e8d4:	e28f1f46 	add	r1, pc, #280	; 0x118
4001e8d8:	e58d0008 	str	r0, [sp, #8]
4001e8dc:	e59f0120 	ldr	r0, [pc, #288]	; 4001ea04 <CyU3PUibApplicationDefine+0x17c>
4001e8e0:	e58d5000 	str	r5, [sp]
4001e8e4:	ebffafb6 	bl	4000a7c4 <_txe_thread_create>
4001e8e8:	e1a04000 	mov	r4, r0
4001e8ec:	e3540000 	cmp	r4, #0
4001e8f0:	1a00003c 	bne	4001e9e8 <CyU3PUibApplicationDefine+0x160>
4001e8f4:	e3a00080 	mov	r0, #128	; 0x80
4001e8f8:	ebff935d 	bl	40003674 <CyU3PMemAlloc>
4001e8fc:	e1a05000 	mov	r5, r0
4001e900:	e3550000 	cmp	r5, #0
4001e904:	0a000009 	beq	4001e930 <CyU3PUibApplicationDefine+0xa8>
4001e908:	e3a0303c 	mov	r3, #60	; 0x3c
4001e90c:	e3a02080 	mov	r2, #128	; 0x80
4001e910:	e1cd20f0 	strd	r2, [sp]
4001e914:	e1a03005 	mov	r3, r5
4001e918:	e3a02004 	mov	r2, #4
4001e91c:	e3a01000 	mov	r1, #0
4001e920:	e59f00e0 	ldr	r0, [pc, #224]	; 4001ea08 <CyU3PUibApplicationDefine+0x180>
4001e924:	ebffaec0 	bl	4000a42c <_txe_queue_create>
4001e928:	e1a04000 	mov	r4, r0
4001e92c:	ea000000 	b	4001e934 <CyU3PUibApplicationDefine+0xac>
4001e930:	e3a04010 	mov	r4, #16
4001e934:	e3540000 	cmp	r4, #0
4001e938:	1a000004 	bne	4001e950 <CyU3PUibApplicationDefine+0xc8>
4001e93c:	e3a02028 	mov	r2, #40	; 0x28
4001e940:	e3a01000 	mov	r1, #0
4001e944:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ea0c <CyU3PUibApplicationDefine+0x184>
4001e948:	ebffad22 	bl	40009dd8 <_txe_event_flags_create>
4001e94c:	e1a04000 	mov	r4, r0
4001e950:	e3540000 	cmp	r4, #0
4001e954:	1a000005 	bne	4001e970 <CyU3PUibApplicationDefine+0xe8>
4001e958:	e3a03038 	mov	r3, #56	; 0x38
4001e95c:	e3a02000 	mov	r2, #0
4001e960:	e1a01002 	mov	r1, r2
4001e964:	e59f00a4 	ldr	r0, [pc, #164]	; 4001ea10 <CyU3PUibApplicationDefine+0x188>
4001e968:	ebffadd4 	bl	4000a0c0 <_txe_mutex_create>
4001e96c:	e1a04000 	mov	r4, r0
4001e970:	e3540000 	cmp	r4, #0
4001e974:	1a00000a 	bne	4001e9a4 <CyU3PUibApplicationDefine+0x11c>
4001e978:	e3a0302c 	mov	r3, #44	; 0x2c
4001e97c:	e3a02000 	mov	r2, #0
4001e980:	e3a00064 	mov	r0, #100	; 0x64
4001e984:	e88d0005 	stm	sp, {r0, r2}
4001e988:	e1cd20f8 	strd	r2, [sp, #8]
4001e98c:	e1a03002 	mov	r3, r2
4001e990:	e59f207c 	ldr	r2, [pc, #124]	; 4001ea14 <CyU3PUibApplicationDefine+0x18c>
4001e994:	e3a01000 	mov	r1, #0
4001e998:	e59f0078 	ldr	r0, [pc, #120]	; 4001ea18 <CyU3PUibApplicationDefine+0x190>
4001e99c:	ebffb0b5 	bl	4000ac78 <_txe_timer_create>
4001e9a0:	e1a04000 	mov	r4, r0
4001e9a4:	e3540000 	cmp	r4, #0
4001e9a8:	1a00000a 	bne	4001e9d8 <CyU3PUibApplicationDefine+0x150>
4001e9ac:	e3a0302c 	mov	r3, #44	; 0x2c
4001e9b0:	e3a02001 	mov	r2, #1
4001e9b4:	e3a01ffa 	mov	r1, #1000	; 0x3e8
4001e9b8:	e58d1000 	str	r1, [sp]
4001e9bc:	e98d000e 	stmib	sp, {r1, r2, r3}
4001e9c0:	e3a03000 	mov	r3, #0
4001e9c4:	e59f2050 	ldr	r2, [pc, #80]	; 4001ea1c <CyU3PUibApplicationDefine+0x194>
4001e9c8:	e1a01003 	mov	r1, r3
4001e9cc:	e59f004c 	ldr	r0, [pc, #76]	; 4001ea20 <CyU3PUibApplicationDefine+0x198>
4001e9d0:	ebffb0a8 	bl	4000ac78 <_txe_timer_create>
4001e9d4:	e1a04000 	mov	r4, r0
4001e9d8:	e3540000 	cmp	r4, #0
4001e9dc:	1a000001 	bne	4001e9e8 <CyU3PUibApplicationDefine+0x160>
4001e9e0:	e59f001c 	ldr	r0, [pc, #28]	; 4001ea04 <CyU3PUibApplicationDefine+0x17c>
4001e9e4:	ebffb061 	bl	4000ab70 <_txe_thread_resume>
4001e9e8:	e28dd01c 	add	sp, sp, #28
4001e9ec:	e8bd8030 	pop	{r4, r5, pc}
4001e9f0:	4001fbf4 	.word	0x4001fbf4
4001e9f4:	555f3430 	.word	0x555f3430
4001e9f8:	545f4249 	.word	0x545f4249
4001e9fc:	41455248 	.word	0x41455248
4001ea00:	00000044 	.word	0x00000044
4001ea04:	40031dd4 	.word	0x40031dd4
4001ea08:	40031e7c 	.word	0x40031e7c
4001ea0c:	40031eb8 	.word	0x40031eb8
4001ea10:	40031ee0 	.word	0x40031ee0
4001ea14:	4001fb84 	.word	0x4001fb84
4001ea18:	400326a0 	.word	0x400326a0
4001ea1c:	4001ef30 	.word	0x4001ef30
4001ea20:	400326cc 	.word	0x400326cc

Disassembly of section i.CyU3PUibDevCtrlEvtHandler:

4001ea24 <CyU3PUibDevCtrlEvtHandler>:
4001ea24:	e92d4010 	push	{r4, lr}
4001ea28:	e59f01c8 	ldr	r0, [pc, #456]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea2c:	e590451c 	ldr	r4, [r0, #1308]	; 0x51c
4001ea30:	e3140c01 	tst	r4, #256	; 0x100
4001ea34:	0a000008 	beq	4001ea5c <CyU3PUibDevCtrlEvtHandler+0x38>
4001ea38:	e3a00c01 	mov	r0, #256	; 0x100
4001ea3c:	e59f11b4 	ldr	r1, [pc, #436]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea40:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea44:	eb000995 	bl	400210a0 <CyU3PUsbResumeHandler>
4001ea48:	e59f01a8 	ldr	r0, [pc, #424]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea4c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea50:	e3800c01 	orr	r0, r0, #256	; 0x100
4001ea54:	e59f119c 	ldr	r1, [pc, #412]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea58:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea5c:	e3140004 	tst	r4, #4
4001ea60:	0a000008 	beq	4001ea88 <CyU3PUibDevCtrlEvtHandler+0x64>
4001ea64:	e3a00004 	mov	r0, #4
4001ea68:	e59f1188 	ldr	r1, [pc, #392]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea6c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea70:	eb000d6c 	bl	40022028 <CyU3PUsbSuspendHandler>
4001ea74:	e59f017c 	ldr	r0, [pc, #380]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea78:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ea7c:	e3800004 	orr	r0, r0, #4
4001ea80:	e59f1170 	ldr	r1, [pc, #368]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea84:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ea88:	e3140008 	tst	r4, #8
4001ea8c:	0a000008 	beq	4001eab4 <CyU3PUibDevCtrlEvtHandler+0x90>
4001ea90:	e3a00008 	mov	r0, #8
4001ea94:	e59f115c 	ldr	r1, [pc, #348]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ea98:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001ea9c:	eb00092e 	bl	40020f5c <CyU3PUsbResetHandler>
4001eaa0:	e59f0150 	ldr	r0, [pc, #336]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eaa4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eaa8:	e3800008 	orr	r0, r0, #8
4001eaac:	e59f1144 	ldr	r1, [pc, #324]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eab0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eab4:	e3140010 	tst	r4, #16
4001eab8:	0a000008 	beq	4001eae0 <CyU3PUibDevCtrlEvtHandler+0xbc>
4001eabc:	e3a00010 	mov	r0, #16
4001eac0:	e59f1130 	ldr	r1, [pc, #304]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eac4:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eac8:	ebffff50 	bl	4001e810 <CyU3PHsGrantIntrHandler>
4001eacc:	e59f0124 	ldr	r0, [pc, #292]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ead0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ead4:	e3800010 	orr	r0, r0, #16
4001ead8:	e59f1118 	ldr	r1, [pc, #280]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eadc:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eae0:	e3140040 	tst	r4, #64	; 0x40
4001eae4:	0a000018 	beq	4001eb4c <CyU3PUibDevCtrlEvtHandler+0x128>
4001eae8:	e59f010c 	ldr	r0, [pc, #268]	; 4001ebfc <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eaec:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001eaf0:	e3c00501 	bic	r0, r0, #4194304	; 0x400000
4001eaf4:	e59f1100 	ldr	r1, [pc, #256]	; 4001ebfc <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eaf8:	e5810074 	str	r0, [r1, #116]	; 0x74
4001eafc:	e2410a01 	sub	r0, r1, #4096	; 0x1000
4001eb00:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4001eb04:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001eb08:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4001eb0c:	e5810418 	str	r0, [r1, #1048]	; 0x418
4001eb10:	e1a00001 	mov	r0, r1
4001eb14:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4001eb18:	e3c00801 	bic	r0, r0, #65536	; 0x10000
4001eb1c:	e5810498 	str	r0, [r1, #1176]	; 0x498
4001eb20:	e3a00040 	mov	r0, #64	; 0x40
4001eb24:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb28:	e3a00001 	mov	r0, #1
4001eb2c:	e59f10cc 	ldr	r1, [pc, #204]	; 4001ec00 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eb30:	e5810014 	str	r0, [r1, #20]
4001eb34:	eb000b38 	bl	4002181c <CyU3PUsbSetupCommand>
4001eb38:	e59f00b8 	ldr	r0, [pc, #184]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb3c:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb40:	e3800040 	orr	r0, r0, #64	; 0x40
4001eb44:	e59f10ac 	ldr	r1, [pc, #172]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb48:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb4c:	e3140080 	tst	r4, #128	; 0x80
4001eb50:	0a000006 	beq	4001eb70 <CyU3PUibDevCtrlEvtHandler+0x14c>
4001eb54:	e3a00080 	mov	r0, #128	; 0x80
4001eb58:	e59f1098 	ldr	r1, [pc, #152]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb5c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eb60:	e1c10000 	bic	r0, r1, r0
4001eb64:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001eb68:	e3800080 	orr	r0, r0, #128	; 0x80
4001eb6c:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001eb70:	e3140b02 	tst	r4, #2048	; 0x800
4001eb74:	0a00001e 	beq	4001ebf4 <CyU3PUibDevCtrlEvtHandler+0x1d0>
4001eb78:	e59f0080 	ldr	r0, [pc, #128]	; 4001ec00 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eb7c:	e5900044 	ldr	r0, [r0, #68]	; 0x44
4001eb80:	e3500000 	cmp	r0, #0
4001eb84:	1a000002 	bne	4001eb94 <CyU3PUibDevCtrlEvtHandler+0x170>
4001eb88:	e3a00501 	mov	r0, #4194304	; 0x400000
4001eb8c:	e59f1068 	ldr	r1, [pc, #104]	; 4001ebfc <CyU3PUibDevCtrlEvtHandler+0x1d8>
4001eb90:	e5810074 	str	r0, [r1, #116]	; 0x74
4001eb94:	e3a00b02 	mov	r0, #2048	; 0x800
4001eb98:	e59f1058 	ldr	r1, [pc, #88]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001eb9c:	e581051c 	str	r0, [r1, #1308]	; 0x51c
4001eba0:	e59f0058 	ldr	r0, [pc, #88]	; 4001ec00 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001eba4:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001eba8:	e3500000 	cmp	r0, #0
4001ebac:	0a00000b 	beq	4001ebe0 <CyU3PUibDevCtrlEvtHandler+0x1bc>
4001ebb0:	e59f004c 	ldr	r0, [pc, #76]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ebb4:	e5900000 	ldr	r0, [r0]
4001ebb8:	e3500000 	cmp	r0, #0
4001ebbc:	0a000004 	beq	4001ebd4 <CyU3PUibDevCtrlEvtHandler+0x1b0>
4001ebc0:	e3a01000 	mov	r1, #0
4001ebc4:	e3a0000a 	mov	r0, #10
4001ebc8:	e59f2034 	ldr	r2, [pc, #52]	; 4001ec04 <CyU3PUibDevCtrlEvtHandler+0x1e0>
4001ebcc:	e5922000 	ldr	r2, [r2]
4001ebd0:	e12fff32 	blx	r2
4001ebd4:	e3a00000 	mov	r0, #0
4001ebd8:	e59f1020 	ldr	r1, [pc, #32]	; 4001ec00 <CyU3PUibDevCtrlEvtHandler+0x1dc>
4001ebdc:	e5810040 	str	r0, [r1, #64]	; 0x40
4001ebe0:	e59f0010 	ldr	r0, [pc, #16]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ebe4:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
4001ebe8:	e3800b02 	orr	r0, r0, #2048	; 0x800
4001ebec:	e59f1004 	ldr	r1, [pc, #4]	; 4001ebf8 <CyU3PUibDevCtrlEvtHandler+0x1d4>
4001ebf0:	e5810518 	str	r0, [r1, #1304]	; 0x518
4001ebf4:	e8bd8010 	pop	{r4, pc}
4001ebf8:	e0031000 	.word	0xe0031000
4001ebfc:	e0032000 	.word	0xe0032000
4001ec00:	40031d40 	.word	0x40031d40
4001ec04:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUibEPEvtHandler:

4001ec08 <CyU3PUibEPEvtHandler>:
4001ec08:	e92d4070 	push	{r4, r5, r6, lr}
4001ec0c:	e59f0244 	ldr	r0, [pc, #580]	; 4001ee58 <CyU3PUibEPEvtHandler+0x250>
4001ec10:	e5900524 	ldr	r0, [r0, #1316]	; 0x524
4001ec14:	e59f123c 	ldr	r1, [pc, #572]	; 4001ee58 <CyU3PUibEPEvtHandler+0x250>
4001ec18:	e5911520 	ldr	r1, [r1, #1312]	; 0x520
4001ec1c:	e0004001 	and	r4, r0, r1
4001ec20:	e59f0234 	ldr	r0, [pc, #564]	; 4001ee5c <CyU3PUibEPEvtHandler+0x254>
4001ec24:	e5900000 	ldr	r0, [r0]
4001ec28:	e0044000 	and	r4, r4, r0
4001ec2c:	e3a05001 	mov	r5, #1
4001ec30:	ea000080 	b	4001ee38 <CyU3PUibEPEvtHandler+0x230>
4001ec34:	e3a00001 	mov	r0, #1
4001ec38:	e1140510 	tst	r4, r0, lsl r5
4001ec3c:	0a00003b 	beq	4001ed30 <CyU3PUibEPEvtHandler+0x128>
4001ec40:	e59f0218 	ldr	r0, [pc, #536]	; 4001ee60 <CyU3PUibEPEvtHandler+0x258>
4001ec44:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ec48:	e59f0214 	ldr	r0, [pc, #532]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ec4c:	e5900000 	ldr	r0, [r0]
4001ec50:	e3500000 	cmp	r0, #0
4001ec54:	0a000033 	beq	4001ed28 <CyU3PUibEPEvtHandler+0x120>
4001ec58:	e59f0208 	ldr	r0, [pc, #520]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001ec5c:	e5900000 	ldr	r0, [r0]
4001ec60:	e3100001 	tst	r0, #1
4001ec64:	0a000008 	beq	4001ec8c <CyU3PUibEPEvtHandler+0x84>
4001ec68:	e3160702 	tst	r6, #524288	; 0x80000
4001ec6c:	0a000006 	beq	4001ec8c <CyU3PUibEPEvtHandler+0x84>
4001ec70:	e3852080 	orr	r2, r5, #128	; 0x80
4001ec74:	e59f01f0 	ldr	r0, [pc, #496]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001ec78:	e5d01009 	ldrb	r1, [r0, #9]
4001ec7c:	e3a00001 	mov	r0, #1
4001ec80:	e59f31dc 	ldr	r3, [pc, #476]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ec84:	e5933000 	ldr	r3, [r3]
4001ec88:	e12fff33 	blx	r3
4001ec8c:	e59f01d4 	ldr	r0, [pc, #468]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001ec90:	e5900000 	ldr	r0, [r0]
4001ec94:	e3100002 	tst	r0, #2
4001ec98:	0a000008 	beq	4001ecc0 <CyU3PUibEPEvtHandler+0xb8>
4001ec9c:	e3160602 	tst	r6, #2097152	; 0x200000
4001eca0:	0a000006 	beq	4001ecc0 <CyU3PUibEPEvtHandler+0xb8>
4001eca4:	e3852080 	orr	r2, r5, #128	; 0x80
4001eca8:	e59f01bc 	ldr	r0, [pc, #444]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001ecac:	e5d01009 	ldrb	r1, [r0, #9]
4001ecb0:	e3a00002 	mov	r0, #2
4001ecb4:	e59f31a8 	ldr	r3, [pc, #424]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ecb8:	e5933000 	ldr	r3, [r3]
4001ecbc:	e12fff33 	blx	r3
4001ecc0:	e59f01a0 	ldr	r0, [pc, #416]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001ecc4:	e5900000 	ldr	r0, [r0]
4001ecc8:	e3100004 	tst	r0, #4
4001eccc:	0a000008 	beq	4001ecf4 <CyU3PUibEPEvtHandler+0xec>
4001ecd0:	e3160501 	tst	r6, #4194304	; 0x400000
4001ecd4:	0a000006 	beq	4001ecf4 <CyU3PUibEPEvtHandler+0xec>
4001ecd8:	e3852080 	orr	r2, r5, #128	; 0x80
4001ecdc:	e59f0188 	ldr	r0, [pc, #392]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001ece0:	e5d01009 	ldrb	r1, [r0, #9]
4001ece4:	e3a00004 	mov	r0, #4
4001ece8:	e59f3174 	ldr	r3, [pc, #372]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ecec:	e5933000 	ldr	r3, [r3]
4001ecf0:	e12fff33 	blx	r3
4001ecf4:	e59f016c 	ldr	r0, [pc, #364]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001ecf8:	e5900000 	ldr	r0, [r0]
4001ecfc:	e3100008 	tst	r0, #8
4001ed00:	0a000008 	beq	4001ed28 <CyU3PUibEPEvtHandler+0x120>
4001ed04:	e3160502 	tst	r6, #8388608	; 0x800000
4001ed08:	0a000006 	beq	4001ed28 <CyU3PUibEPEvtHandler+0x120>
4001ed0c:	e3852080 	orr	r2, r5, #128	; 0x80
4001ed10:	e59f0154 	ldr	r0, [pc, #340]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001ed14:	e5d01009 	ldrb	r1, [r0, #9]
4001ed18:	e3a00008 	mov	r0, #8
4001ed1c:	e59f3140 	ldr	r3, [pc, #320]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ed20:	e5933000 	ldr	r3, [r3]
4001ed24:	e12fff33 	blx	r3
4001ed28:	e59f0130 	ldr	r0, [pc, #304]	; 4001ee60 <CyU3PUibEPEvtHandler+0x258>
4001ed2c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ed30:	e2850010 	add	r0, r5, #16
4001ed34:	e3a01001 	mov	r1, #1
4001ed38:	e1140011 	tst	r4, r1, lsl r0
4001ed3c:	0a00003b 	beq	4001ee30 <CyU3PUibEPEvtHandler+0x228>
4001ed40:	e59f0128 	ldr	r0, [pc, #296]	; 4001ee70 <CyU3PUibEPEvtHandler+0x268>
4001ed44:	e7906105 	ldr	r6, [r0, r5, lsl #2]
4001ed48:	e59f0114 	ldr	r0, [pc, #276]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ed4c:	e5900000 	ldr	r0, [r0]
4001ed50:	e3500000 	cmp	r0, #0
4001ed54:	0a000033 	beq	4001ee28 <CyU3PUibEPEvtHandler+0x220>
4001ed58:	e59f0108 	ldr	r0, [pc, #264]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001ed5c:	e5900000 	ldr	r0, [r0]
4001ed60:	e3100001 	tst	r0, #1
4001ed64:	0a000008 	beq	4001ed8c <CyU3PUibEPEvtHandler+0x184>
4001ed68:	e3160702 	tst	r6, #524288	; 0x80000
4001ed6c:	0a000006 	beq	4001ed8c <CyU3PUibEPEvtHandler+0x184>
4001ed70:	e59f00f4 	ldr	r0, [pc, #244]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001ed74:	e5d01009 	ldrb	r1, [r0, #9]
4001ed78:	e1a02005 	mov	r2, r5
4001ed7c:	e3a00001 	mov	r0, #1
4001ed80:	e59f30dc 	ldr	r3, [pc, #220]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ed84:	e5933000 	ldr	r3, [r3]
4001ed88:	e12fff33 	blx	r3
4001ed8c:	e59f00d4 	ldr	r0, [pc, #212]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001ed90:	e5900000 	ldr	r0, [r0]
4001ed94:	e3100002 	tst	r0, #2
4001ed98:	0a000008 	beq	4001edc0 <CyU3PUibEPEvtHandler+0x1b8>
4001ed9c:	e3160602 	tst	r6, #2097152	; 0x200000
4001eda0:	0a000006 	beq	4001edc0 <CyU3PUibEPEvtHandler+0x1b8>
4001eda4:	e59f00c0 	ldr	r0, [pc, #192]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001eda8:	e5d01009 	ldrb	r1, [r0, #9]
4001edac:	e1a02005 	mov	r2, r5
4001edb0:	e3a00002 	mov	r0, #2
4001edb4:	e59f30a8 	ldr	r3, [pc, #168]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001edb8:	e5933000 	ldr	r3, [r3]
4001edbc:	e12fff33 	blx	r3
4001edc0:	e59f00a0 	ldr	r0, [pc, #160]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001edc4:	e5900000 	ldr	r0, [r0]
4001edc8:	e3100004 	tst	r0, #4
4001edcc:	0a000008 	beq	4001edf4 <CyU3PUibEPEvtHandler+0x1ec>
4001edd0:	e3160501 	tst	r6, #4194304	; 0x400000
4001edd4:	0a000006 	beq	4001edf4 <CyU3PUibEPEvtHandler+0x1ec>
4001edd8:	e59f008c 	ldr	r0, [pc, #140]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001eddc:	e5d01009 	ldrb	r1, [r0, #9]
4001ede0:	e1a02005 	mov	r2, r5
4001ede4:	e3a00004 	mov	r0, #4
4001ede8:	e59f3074 	ldr	r3, [pc, #116]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001edec:	e5933000 	ldr	r3, [r3]
4001edf0:	e12fff33 	blx	r3
4001edf4:	e59f006c 	ldr	r0, [pc, #108]	; 4001ee68 <CyU3PUibEPEvtHandler+0x260>
4001edf8:	e5900000 	ldr	r0, [r0]
4001edfc:	e3100008 	tst	r0, #8
4001ee00:	0a000008 	beq	4001ee28 <CyU3PUibEPEvtHandler+0x220>
4001ee04:	e3160502 	tst	r6, #8388608	; 0x800000
4001ee08:	0a000006 	beq	4001ee28 <CyU3PUibEPEvtHandler+0x220>
4001ee0c:	e59f0058 	ldr	r0, [pc, #88]	; 4001ee6c <CyU3PUibEPEvtHandler+0x264>
4001ee10:	e5d01009 	ldrb	r1, [r0, #9]
4001ee14:	e1a02005 	mov	r2, r5
4001ee18:	e3a00008 	mov	r0, #8
4001ee1c:	e59f3040 	ldr	r3, [pc, #64]	; 4001ee64 <CyU3PUibEPEvtHandler+0x25c>
4001ee20:	e5933000 	ldr	r3, [r3]
4001ee24:	e12fff33 	blx	r3
4001ee28:	e59f0040 	ldr	r0, [pc, #64]	; 4001ee70 <CyU3PUibEPEvtHandler+0x268>
4001ee2c:	e7806105 	str	r6, [r0, r5, lsl #2]
4001ee30:	e2850001 	add	r0, r5, #1
4001ee34:	e20050ff 	and	r5, r0, #255	; 0xff
4001ee38:	e3550010 	cmp	r5, #16
4001ee3c:	baffff7c 	blt	4001ec34 <CyU3PUibEPEvtHandler+0x2c>
4001ee40:	e59f002c 	ldr	r0, [pc, #44]	; 4001ee74 <CyU3PUibEPEvtHandler+0x26c>
4001ee44:	e5900004 	ldr	r0, [r0, #4]
4001ee48:	e3800010 	orr	r0, r0, #16
4001ee4c:	e59f1020 	ldr	r1, [pc, #32]	; 4001ee74 <CyU3PUibEPEvtHandler+0x26c>
4001ee50:	e5810004 	str	r0, [r1, #4]
4001ee54:	e8bd8070 	pop	{r4, r5, r6, pc}
4001ee58:	e0031000 	.word	0xe0031000
4001ee5c:	40030d80 	.word	0x40030d80
4001ee60:	e0031418 	.word	0xe0031418
4001ee64:	40030d78 	.word	0x40030d78
4001ee68:	40030d7c 	.word	0x40030d7c
4001ee6c:	40031d40 	.word	0x40031d40
4001ee70:	e0031498 	.word	0xe0031498
4001ee74:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibInitVars:

4001ee78 <CyU3PUibInitVars>:
4001ee78:	e92d4010 	push	{r4, lr}
4001ee7c:	e3a0207c 	mov	r2, #124	; 0x7c
4001ee80:	e3a01000 	mov	r1, #0
4001ee84:	e59f0070 	ldr	r0, [pc, #112]	; 4001eefc <CyU3PUibInitVars+0x84>
4001ee88:	ebff920a 	bl	400036b8 <CyU3PMemSet>
4001ee8c:	e3a02074 	mov	r2, #116	; 0x74
4001ee90:	e3a01000 	mov	r1, #0
4001ee94:	e59f0064 	ldr	r0, [pc, #100]	; 4001ef00 <CyU3PUibInitVars+0x88>
4001ee98:	ebff9206 	bl	400036b8 <CyU3PMemSet>
4001ee9c:	e3a00000 	mov	r0, #0
4001eea0:	e59f105c 	ldr	r1, [pc, #92]	; 4001ef04 <CyU3PUibInitVars+0x8c>
4001eea4:	e5810000 	str	r0, [r1]
4001eea8:	e59f1058 	ldr	r1, [pc, #88]	; 4001ef08 <CyU3PUibInitVars+0x90>
4001eeac:	e5810000 	str	r0, [r1]
4001eeb0:	e59f1054 	ldr	r1, [pc, #84]	; 4001ef0c <CyU3PUibInitVars+0x94>
4001eeb4:	e5810000 	str	r0, [r1]
4001eeb8:	e59f1050 	ldr	r1, [pc, #80]	; 4001ef10 <CyU3PUibInitVars+0x98>
4001eebc:	e5810000 	str	r0, [r1]
4001eec0:	e59f104c 	ldr	r1, [pc, #76]	; 4001ef14 <CyU3PUibInitVars+0x9c>
4001eec4:	e5810000 	str	r0, [r1]
4001eec8:	e59f1048 	ldr	r1, [pc, #72]	; 4001ef18 <CyU3PUibInitVars+0xa0>
4001eecc:	e5810000 	str	r0, [r1]
4001eed0:	e59f1044 	ldr	r1, [pc, #68]	; 4001ef1c <CyU3PUibInitVars+0xa4>
4001eed4:	e5810000 	str	r0, [r1]
4001eed8:	e59f1040 	ldr	r1, [pc, #64]	; 4001ef20 <CyU3PUibInitVars+0xa8>
4001eedc:	e5810000 	str	r0, [r1]
4001eee0:	e59f103c 	ldr	r1, [pc, #60]	; 4001ef24 <CyU3PUibInitVars+0xac>
4001eee4:	e5810000 	str	r0, [r1]
4001eee8:	e59f1038 	ldr	r1, [pc, #56]	; 4001ef28 <CyU3PUibInitVars+0xb0>
4001eeec:	e5810000 	str	r0, [r1]
4001eef0:	e59f1034 	ldr	r1, [pc, #52]	; 4001ef2c <CyU3PUibInitVars+0xb4>
4001eef4:	e5810000 	str	r0, [r1]
4001eef8:	e8bd8010 	pop	{r4, pc}
4001eefc:	40031d40 	.word	0x40031d40
4001ef00:	40031f98 	.word	0x40031f98
4001ef04:	40030d60 	.word	0x40030d60
4001ef08:	40030d64 	.word	0x40030d64
4001ef0c:	40030d68 	.word	0x40030d68
4001ef10:	40030db4 	.word	0x40030db4
4001ef14:	40030d9c 	.word	0x40030d9c
4001ef18:	40030da0 	.word	0x40030da0
4001ef1c:	40030da4 	.word	0x40030da4
4001ef20:	40030d78 	.word	0x40030d78
4001ef24:	40030d7c 	.word	0x40030d7c
4001ef28:	40030d80 	.word	0x40030d80
4001ef2c:	40030d40 	.word	0x40030d40

Disassembly of section i.CyU3PUibLnkErrClrTimerCb:

4001ef30 <CyU3PUibLnkErrClrTimerCb>:
4001ef30:	e92d4010 	push	{r4, lr}
4001ef34:	e1a04000 	mov	r4, r0
4001ef38:	ebfff82d 	bl	4001cff4 <CyU3PUsbGetSpeed>
4001ef3c:	e3500003 	cmp	r0, #3
4001ef40:	1a000003 	bne	4001ef54 <CyU3PUibLnkErrClrTimerCb+0x24>
4001ef44:	e59f000c 	ldr	r0, [pc, #12]	; 4001ef58 <CyU3PUibLnkErrClrTimerCb+0x28>
4001ef48:	e5900014 	ldr	r0, [r0, #20]
4001ef4c:	e59f1008 	ldr	r1, [pc, #8]	; 4001ef5c <CyU3PUibLnkErrClrTimerCb+0x2c>
4001ef50:	e5810000 	str	r0, [r1]
4001ef54:	e8bd8010 	pop	{r4, pc}
4001ef58:	e0033000 	.word	0xe0033000
4001ef5c:	40030d84 	.word	0x40030d84

Disassembly of section i.CyU3PUibLnkIntrEvtHandler:

4001ef60 <CyU3PUibLnkIntrEvtHandler>:
4001ef60:	e92d4010 	push	{r4, lr}
4001ef64:	e59f008c 	ldr	r0, [pc, #140]	; 4001eff8 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef68:	e5904004 	ldr	r4, [r0, #4]
4001ef6c:	e3140902 	tst	r4, #32768	; 0x8000
4001ef70:	0a00000b 	beq	4001efa4 <CyU3PUibLnkIntrEvtHandler+0x44>
4001ef74:	e59f0080 	ldr	r0, [pc, #128]	; 4001effc <CyU3PUibLnkIntrEvtHandler+0x9c>
4001ef78:	e5900000 	ldr	r0, [r0]
4001ef7c:	e59f1074 	ldr	r1, [pc, #116]	; 4001eff8 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef80:	e581003c 	str	r0, [r1, #60]	; 0x3c
4001ef84:	eb000859 	bl	400210f0 <CyU3PUsbSSConnecthandler>
4001ef88:	e3a00902 	mov	r0, #32768	; 0x8000
4001ef8c:	e59f1064 	ldr	r1, [pc, #100]	; 4001eff8 <CyU3PUibLnkIntrEvtHandler+0x98>
4001ef90:	e5810004 	str	r0, [r1, #4]
4001ef94:	e1c10000 	bic	r0, r1, r0
4001ef98:	e5900008 	ldr	r0, [r0, #8]
4001ef9c:	e3800902 	orr	r0, r0, #32768	; 0x8000
4001efa0:	e5810008 	str	r0, [r1, #8]
4001efa4:	e3140801 	tst	r4, #65536	; 0x10000
4001efa8:	0a000007 	beq	4001efcc <CyU3PUibLnkIntrEvtHandler+0x6c>
4001efac:	eb0008cc 	bl	400212e4 <CyU3PUsbSSDisConnecthandler>
4001efb0:	e3a00801 	mov	r0, #65536	; 0x10000
4001efb4:	e59f103c 	ldr	r1, [pc, #60]	; 4001eff8 <CyU3PUibLnkIntrEvtHandler+0x98>
4001efb8:	e5810004 	str	r0, [r1, #4]
4001efbc:	e1810000 	orr	r0, r1, r0
4001efc0:	e5900008 	ldr	r0, [r0, #8]
4001efc4:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001efc8:	e5810008 	str	r0, [r1, #8]
4001efcc:	e3140802 	tst	r4, #131072	; 0x20000
4001efd0:	0a000007 	beq	4001eff4 <CyU3PUibLnkIntrEvtHandler+0x94>
4001efd4:	eb000926 	bl	40021474 <CyU3PUsbSSReset>
4001efd8:	e3a00802 	mov	r0, #131072	; 0x20000
4001efdc:	e59f1014 	ldr	r1, [pc, #20]	; 4001eff8 <CyU3PUibLnkIntrEvtHandler+0x98>
4001efe0:	e5810004 	str	r0, [r1, #4]
4001efe4:	e1810000 	orr	r0, r1, r0
4001efe8:	e5900008 	ldr	r0, [r0, #8]
4001efec:	e3800802 	orr	r0, r0, #131072	; 0x20000
4001eff0:	e5810008 	str	r0, [r1, #8]
4001eff4:	e8bd8010 	pop	{r4, pc}
4001eff8:	e0033000 	.word	0xe0033000
4001effc:	40030d8c 	.word	0x40030d8c

Disassembly of section i.CyU3PUibProtEpIntrEvtHandler:

4001f000 <CyU3PUibProtEpIntrEvtHandler>:
4001f000:	e92d4070 	push	{r4, r5, r6, lr}
4001f004:	e59f03b4 	ldr	r0, [pc, #948]	; 4001f3c0 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001f008:	e5900474 	ldr	r0, [r0, #1140]	; 0x474
4001f00c:	e59f13ac 	ldr	r1, [pc, #940]	; 4001f3c0 <CyU3PUibProtEpIntrEvtHandler+0x3c0>
4001f010:	e5911478 	ldr	r1, [r1, #1144]	; 0x478
4001f014:	e0005001 	and	r5, r0, r1
4001f018:	e3a04001 	mov	r4, #1
4001f01c:	ea0000df 	b	4001f3a0 <CyU3PUibProtEpIntrEvtHandler+0x3a0>
4001f020:	e3a00001 	mov	r0, #1
4001f024:	e1150410 	tst	r5, r0, lsl r4
4001f028:	0a000081 	beq	4001f234 <CyU3PUibProtEpIntrEvtHandler+0x234>
4001f02c:	e59f0390 	ldr	r0, [pc, #912]	; 4001f3c4 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f030:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f034:	e3160901 	tst	r6, #16384	; 0x4000
4001f038:	0a00002a 	beq	4001f0e8 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f03c:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f040:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f044:	e3800002 	orr	r0, r0, #2
4001f048:	e59f1374 	ldr	r1, [pc, #884]	; 4001f3c4 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f04c:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f050:	e1812ba1 	orr	r2, r1, r1, lsr #23
4001f054:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f058:	e1a01802 	lsl	r1, r2, #16
4001f05c:	e1a01821 	lsr	r1, r1, #16
4001f060:	e20420ff 	and	r2, r4, #255	; 0xff
4001f064:	e3820080 	orr	r0, r2, #128	; 0x80
4001f068:	ebfffa90 	bl	4001dab0 <CyU3PUsbSendNrdy>
4001f06c:	e20410ff 	and	r1, r4, #255	; 0xff
4001f070:	e3810080 	orr	r0, r1, #128	; 0x80
4001f074:	ebfff9a1 	bl	4001d700 <CyU3PUsbResetEp>
4001f078:	e3a0000a 	mov	r0, #10
4001f07c:	ebffd20c 	bl	400138b4 <CyU3PBusyWait>
4001f080:	e59f2340 	ldr	r2, [pc, #832]	; 4001f3c8 <CyU3PUibProtEpIntrEvtHandler+0x3c8>
4001f084:	e7922104 	ldr	r2, [r2, r4, lsl #2]
4001f088:	e1a01802 	lsl	r1, r2, #16
4001f08c:	e1a01821 	lsr	r1, r1, #16
4001f090:	e20420ff 	and	r2, r4, #255	; 0xff
4001f094:	e3820080 	orr	r0, r2, #128	; 0x80
4001f098:	ebfffa47 	bl	4001d9bc <CyU3PUsbSendErdy>
4001f09c:	e3860901 	orr	r0, r6, #16384	; 0x4000
4001f0a0:	e59f131c 	ldr	r1, [pc, #796]	; 4001f3c4 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f0a4:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f0a8:	e59f031c 	ldr	r0, [pc, #796]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f0ac:	e5900000 	ldr	r0, [r0]
4001f0b0:	e3100020 	tst	r0, #32
4001f0b4:	0a00000b 	beq	4001f0e8 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f0b8:	e3a00001 	mov	r0, #1
4001f0bc:	e59f130c 	ldr	r1, [pc, #780]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f0c0:	e5911000 	ldr	r1, [r1]
4001f0c4:	e1110410 	tst	r1, r0, lsl r4
4001f0c8:	0a000006 	beq	4001f0e8 <CyU3PUibProtEpIntrEvtHandler+0xe8>
4001f0cc:	e20400ff 	and	r0, r4, #255	; 0xff
4001f0d0:	e3802080 	orr	r2, r0, #128	; 0x80
4001f0d4:	e3a01003 	mov	r1, #3
4001f0d8:	e3a00020 	mov	r0, #32
4001f0dc:	e59f32f0 	ldr	r3, [pc, #752]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f0e0:	e5933000 	ldr	r3, [r3]
4001f0e4:	e12fff33 	blx	r3
4001f0e8:	e3160801 	tst	r6, #65536	; 0x10000
4001f0ec:	0a000004 	beq	4001f104 <CyU3PUibProtEpIntrEvtHandler+0x104>
4001f0f0:	e3c60807 	bic	r0, r6, #458752	; 0x70000
4001f0f4:	e3c00cff 	bic	r0, r0, #65280	; 0xff00
4001f0f8:	e3800801 	orr	r0, r0, #65536	; 0x10000
4001f0fc:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f3c4 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f100:	e7810104 	str	r0, [r1, r4, lsl #2]
4001f104:	e3a00001 	mov	r0, #1
4001f108:	e59f12c0 	ldr	r1, [pc, #704]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f10c:	e5911000 	ldr	r1, [r1]
4001f110:	e1110410 	tst	r1, r0, lsl r4
4001f114:	0a000044 	beq	4001f22c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f118:	e59f02b4 	ldr	r0, [pc, #692]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f11c:	e5900000 	ldr	r0, [r0]
4001f120:	e3500000 	cmp	r0, #0
4001f124:	0a000040 	beq	4001f22c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f128:	e59f029c 	ldr	r0, [pc, #668]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f12c:	e5900000 	ldr	r0, [r0]
4001f130:	e3100001 	tst	r0, #1
4001f134:	0a000008 	beq	4001f15c <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f138:	e3160b01 	tst	r6, #1024	; 0x400
4001f13c:	0a000006 	beq	4001f15c <CyU3PUibProtEpIntrEvtHandler+0x15c>
4001f140:	e20400ff 	and	r0, r4, #255	; 0xff
4001f144:	e3802080 	orr	r2, r0, #128	; 0x80
4001f148:	e3a01003 	mov	r1, #3
4001f14c:	e3a00001 	mov	r0, #1
4001f150:	e59f327c 	ldr	r3, [pc, #636]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f154:	e5933000 	ldr	r3, [r3]
4001f158:	e12fff33 	blx	r3
4001f15c:	e59f0268 	ldr	r0, [pc, #616]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f160:	e5900000 	ldr	r0, [r0]
4001f164:	e3100002 	tst	r0, #2
4001f168:	0a000008 	beq	4001f190 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f16c:	e3160a01 	tst	r6, #4096	; 0x1000
4001f170:	0a000006 	beq	4001f190 <CyU3PUibProtEpIntrEvtHandler+0x190>
4001f174:	e20400ff 	and	r0, r4, #255	; 0xff
4001f178:	e3802080 	orr	r2, r0, #128	; 0x80
4001f17c:	e3a01003 	mov	r1, #3
4001f180:	e3a00002 	mov	r0, #2
4001f184:	e59f3248 	ldr	r3, [pc, #584]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f188:	e5933000 	ldr	r3, [r3]
4001f18c:	e12fff33 	blx	r3
4001f190:	e59f0234 	ldr	r0, [pc, #564]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f194:	e5900000 	ldr	r0, [r0]
4001f198:	e3100004 	tst	r0, #4
4001f19c:	0a000008 	beq	4001f1c4 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f1a0:	e3160a02 	tst	r6, #8192	; 0x2000
4001f1a4:	0a000006 	beq	4001f1c4 <CyU3PUibProtEpIntrEvtHandler+0x1c4>
4001f1a8:	e20400ff 	and	r0, r4, #255	; 0xff
4001f1ac:	e3802080 	orr	r2, r0, #128	; 0x80
4001f1b0:	e3a01003 	mov	r1, #3
4001f1b4:	e3a00004 	mov	r0, #4
4001f1b8:	e59f3214 	ldr	r3, [pc, #532]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1bc:	e5933000 	ldr	r3, [r3]
4001f1c0:	e12fff33 	blx	r3
4001f1c4:	e59f0200 	ldr	r0, [pc, #512]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f1c8:	e5900000 	ldr	r0, [r0]
4001f1cc:	e3100010 	tst	r0, #16
4001f1d0:	0a000008 	beq	4001f1f8 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f1d4:	e3160c02 	tst	r6, #512	; 0x200
4001f1d8:	0a000006 	beq	4001f1f8 <CyU3PUibProtEpIntrEvtHandler+0x1f8>
4001f1dc:	e20400ff 	and	r0, r4, #255	; 0xff
4001f1e0:	e3802080 	orr	r2, r0, #128	; 0x80
4001f1e4:	e3a01003 	mov	r1, #3
4001f1e8:	e3a00010 	mov	r0, #16
4001f1ec:	e59f31e0 	ldr	r3, [pc, #480]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f1f0:	e5933000 	ldr	r3, [r3]
4001f1f4:	e12fff33 	blx	r3
4001f1f8:	e59f01cc 	ldr	r0, [pc, #460]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f1fc:	e5900000 	ldr	r0, [r0]
4001f200:	e3100040 	tst	r0, #64	; 0x40
4001f204:	0a000008 	beq	4001f22c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f208:	e3160802 	tst	r6, #131072	; 0x20000
4001f20c:	0a000006 	beq	4001f22c <CyU3PUibProtEpIntrEvtHandler+0x22c>
4001f210:	e20400ff 	and	r0, r4, #255	; 0xff
4001f214:	e3802080 	orr	r2, r0, #128	; 0x80
4001f218:	e3a01003 	mov	r1, #3
4001f21c:	e3a00040 	mov	r0, #64	; 0x40
4001f220:	e59f31ac 	ldr	r3, [pc, #428]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f224:	e5933000 	ldr	r3, [r3]
4001f228:	e12fff33 	blx	r3
4001f22c:	e59f0190 	ldr	r0, [pc, #400]	; 4001f3c4 <CyU3PUibProtEpIntrEvtHandler+0x3c4>
4001f230:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f234:	e2840010 	add	r0, r4, #16
4001f238:	e3a01001 	mov	r1, #1
4001f23c:	e1150011 	tst	r5, r1, lsl r0
4001f240:	0a000055 	beq	4001f39c <CyU3PUibProtEpIntrEvtHandler+0x39c>
4001f244:	e59f018c 	ldr	r0, [pc, #396]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f248:	e7906104 	ldr	r6, [r0, r4, lsl #2]
4001f24c:	e2840010 	add	r0, r4, #16
4001f250:	e1a00011 	lsl	r0, r1, r0
4001f254:	e59f1174 	ldr	r1, [pc, #372]	; 4001f3d0 <CyU3PUibProtEpIntrEvtHandler+0x3d0>
4001f258:	e5911000 	ldr	r1, [r1]
4001f25c:	e1100001 	tst	r0, r1
4001f260:	0a00004b 	beq	4001f394 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f264:	e59f0168 	ldr	r0, [pc, #360]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f268:	e5900000 	ldr	r0, [r0]
4001f26c:	e3500000 	cmp	r0, #0
4001f270:	0a000047 	beq	4001f394 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f274:	e59f0150 	ldr	r0, [pc, #336]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f278:	e5900000 	ldr	r0, [r0]
4001f27c:	e3100001 	tst	r0, #1
4001f280:	0a000007 	beq	4001f2a4 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f284:	e3160b01 	tst	r6, #1024	; 0x400
4001f288:	0a000005 	beq	4001f2a4 <CyU3PUibProtEpIntrEvtHandler+0x2a4>
4001f28c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f290:	e3a01003 	mov	r1, #3
4001f294:	e3a00001 	mov	r0, #1
4001f298:	e59f3134 	ldr	r3, [pc, #308]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f29c:	e5933000 	ldr	r3, [r3]
4001f2a0:	e12fff33 	blx	r3
4001f2a4:	e59f0120 	ldr	r0, [pc, #288]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f2a8:	e5900000 	ldr	r0, [r0]
4001f2ac:	e3100002 	tst	r0, #2
4001f2b0:	0a000007 	beq	4001f2d4 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f2b4:	e3160a01 	tst	r6, #4096	; 0x1000
4001f2b8:	0a000005 	beq	4001f2d4 <CyU3PUibProtEpIntrEvtHandler+0x2d4>
4001f2bc:	e20420ff 	and	r2, r4, #255	; 0xff
4001f2c0:	e3a01003 	mov	r1, #3
4001f2c4:	e3a00002 	mov	r0, #2
4001f2c8:	e59f3104 	ldr	r3, [pc, #260]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2cc:	e5933000 	ldr	r3, [r3]
4001f2d0:	e12fff33 	blx	r3
4001f2d4:	e59f00f0 	ldr	r0, [pc, #240]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f2d8:	e5900000 	ldr	r0, [r0]
4001f2dc:	e3100004 	tst	r0, #4
4001f2e0:	0a000007 	beq	4001f304 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f2e4:	e3160a02 	tst	r6, #8192	; 0x2000
4001f2e8:	0a000005 	beq	4001f304 <CyU3PUibProtEpIntrEvtHandler+0x304>
4001f2ec:	e20420ff 	and	r2, r4, #255	; 0xff
4001f2f0:	e3a01003 	mov	r1, #3
4001f2f4:	e3a00004 	mov	r0, #4
4001f2f8:	e59f30d4 	ldr	r3, [pc, #212]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f2fc:	e5933000 	ldr	r3, [r3]
4001f300:	e12fff33 	blx	r3
4001f304:	e59f00c0 	ldr	r0, [pc, #192]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f308:	e5900000 	ldr	r0, [r0]
4001f30c:	e3100010 	tst	r0, #16
4001f310:	0a000007 	beq	4001f334 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f314:	e3160c02 	tst	r6, #512	; 0x200
4001f318:	0a000005 	beq	4001f334 <CyU3PUibProtEpIntrEvtHandler+0x334>
4001f31c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f320:	e3a01003 	mov	r1, #3
4001f324:	e3a00010 	mov	r0, #16
4001f328:	e59f30a4 	ldr	r3, [pc, #164]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f32c:	e5933000 	ldr	r3, [r3]
4001f330:	e12fff33 	blx	r3
4001f334:	e59f0090 	ldr	r0, [pc, #144]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f338:	e5900000 	ldr	r0, [r0]
4001f33c:	e3100040 	tst	r0, #64	; 0x40
4001f340:	0a000007 	beq	4001f364 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f344:	e3160802 	tst	r6, #131072	; 0x20000
4001f348:	0a000005 	beq	4001f364 <CyU3PUibProtEpIntrEvtHandler+0x364>
4001f34c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f350:	e3a01003 	mov	r1, #3
4001f354:	e3a00040 	mov	r0, #64	; 0x40
4001f358:	e59f3074 	ldr	r3, [pc, #116]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f35c:	e5933000 	ldr	r3, [r3]
4001f360:	e12fff33 	blx	r3
4001f364:	e59f0060 	ldr	r0, [pc, #96]	; 4001f3cc <CyU3PUibProtEpIntrEvtHandler+0x3cc>
4001f368:	e5900000 	ldr	r0, [r0]
4001f36c:	e3100020 	tst	r0, #32
4001f370:	0a000007 	beq	4001f394 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f374:	e3160901 	tst	r6, #16384	; 0x4000
4001f378:	0a000005 	beq	4001f394 <CyU3PUibProtEpIntrEvtHandler+0x394>
4001f37c:	e20420ff 	and	r2, r4, #255	; 0xff
4001f380:	e3a01003 	mov	r1, #3
4001f384:	e3a00020 	mov	r0, #32
4001f388:	e59f3044 	ldr	r3, [pc, #68]	; 4001f3d4 <CyU3PUibProtEpIntrEvtHandler+0x3d4>
4001f38c:	e5933000 	ldr	r3, [r3]
4001f390:	e12fff33 	blx	r3
4001f394:	e59f003c 	ldr	r0, [pc, #60]	; 4001f3d8 <CyU3PUibProtEpIntrEvtHandler+0x3d8>
4001f398:	e7806104 	str	r6, [r0, r4, lsl #2]
4001f39c:	e2844001 	add	r4, r4, #1
4001f3a0:	e3540010 	cmp	r4, #16
4001f3a4:	baffff1d 	blt	4001f020 <CyU3PUibProtEpIntrEvtHandler+0x20>
4001f3a8:	e59f002c 	ldr	r0, [pc, #44]	; 4001f3dc <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f3ac:	e5900004 	ldr	r0, [r0, #4]
4001f3b0:	e3800b01 	orr	r0, r0, #1024	; 0x400
4001f3b4:	e59f1020 	ldr	r1, [pc, #32]	; 4001f3dc <CyU3PUibProtEpIntrEvtHandler+0x3dc>
4001f3b8:	e5810004 	str	r0, [r1, #4]
4001f3bc:	e8bd8070 	pop	{r4, r5, r6, pc}
4001f3c0:	e0033000 	.word	0xe0033000
4001f3c4:	e0033500 	.word	0xe0033500
4001f3c8:	e00335c0 	.word	0xe00335c0
4001f3cc:	40030d7c 	.word	0x40030d7c
4001f3d0:	40030d80 	.word	0x40030d80
4001f3d4:	40030d78 	.word	0x40030d78
4001f3d8:	e0033600 	.word	0xe0033600
4001f3dc:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibProtIntrEvtHandler:

4001f3e0 <CyU3PUibProtIntrEvtHandler>:
4001f3e0:	e92d4010 	push	{r4, lr}
4001f3e4:	e59f00d0 	ldr	r0, [pc, #208]	; 4001f4bc <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3e8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4001f3ec:	e59f10c8 	ldr	r1, [pc, #200]	; 4001f4bc <CyU3PUibProtIntrEvtHandler+0xdc>
4001f3f0:	e5911408 	ldr	r1, [r1, #1032]	; 0x408
4001f3f4:	e0004001 	and	r4, r0, r1
4001f3f8:	e3140c02 	tst	r4, #512	; 0x200
4001f3fc:	0a000006 	beq	4001f41c <CyU3PUibProtIntrEvtHandler+0x3c>
4001f400:	e3a00c02 	mov	r0, #512	; 0x200
4001f404:	e59f10b0 	ldr	r1, [pc, #176]	; 4001f4bc <CyU3PUibProtIntrEvtHandler+0xdc>
4001f408:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f40c:	e3a00001 	mov	r0, #1
4001f410:	e59f10a8 	ldr	r1, [pc, #168]	; 4001f4c0 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f414:	e5810014 	str	r0, [r1, #20]
4001f418:	eb0008ff 	bl	4002181c <CyU3PUsbSetupCommand>
4001f41c:	e3140901 	tst	r4, #16384	; 0x4000
4001f420:	0a00000a 	beq	4001f450 <CyU3PUibProtIntrEvtHandler+0x70>
4001f424:	e59f0090 	ldr	r0, [pc, #144]	; 4001f4bc <CyU3PUibProtIntrEvtHandler+0xdc>
4001f428:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
4001f42c:	e3c00004 	bic	r0, r0, #4
4001f430:	e59f1084 	ldr	r1, [pc, #132]	; 4001f4bc <CyU3PUibProtIntrEvtHandler+0xdc>
4001f434:	e5810600 	str	r0, [r1, #1536]	; 0x600
4001f438:	e1a00001 	mov	r0, r1
4001f43c:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
4001f440:	e3c00004 	bic	r0, r0, #4
4001f444:	e5810500 	str	r0, [r1, #1280]	; 0x500
4001f448:	e3a00901 	mov	r0, #16384	; 0x4000
4001f44c:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f450:	e3140b02 	tst	r4, #2048	; 0x800
4001f454:	0a000012 	beq	4001f4a4 <CyU3PUibProtIntrEvtHandler+0xc4>
4001f458:	e59f0060 	ldr	r0, [pc, #96]	; 4001f4c0 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f45c:	e5900040 	ldr	r0, [r0, #64]	; 0x40
4001f460:	e3500000 	cmp	r0, #0
4001f464:	0a00000b 	beq	4001f498 <CyU3PUibProtIntrEvtHandler+0xb8>
4001f468:	e59f0054 	ldr	r0, [pc, #84]	; 4001f4c4 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f46c:	e5900000 	ldr	r0, [r0]
4001f470:	e3500000 	cmp	r0, #0
4001f474:	0a000004 	beq	4001f48c <CyU3PUibProtIntrEvtHandler+0xac>
4001f478:	e3a01000 	mov	r1, #0
4001f47c:	e3a0000a 	mov	r0, #10
4001f480:	e59f203c 	ldr	r2, [pc, #60]	; 4001f4c4 <CyU3PUibProtIntrEvtHandler+0xe4>
4001f484:	e5922000 	ldr	r2, [r2]
4001f488:	e12fff32 	blx	r2
4001f48c:	e3a00000 	mov	r0, #0
4001f490:	e59f1028 	ldr	r1, [pc, #40]	; 4001f4c0 <CyU3PUibProtIntrEvtHandler+0xe0>
4001f494:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f498:	e3a00b02 	mov	r0, #2048	; 0x800
4001f49c:	e59f1018 	ldr	r1, [pc, #24]	; 4001f4bc <CyU3PUibProtIntrEvtHandler+0xdc>
4001f4a0:	e5810404 	str	r0, [r1, #1028]	; 0x404
4001f4a4:	e59f001c 	ldr	r0, [pc, #28]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f4a8:	e5900004 	ldr	r0, [r0, #4]
4001f4ac:	e3800c02 	orr	r0, r0, #512	; 0x200
4001f4b0:	e59f1010 	ldr	r1, [pc, #16]	; 4001f4c8 <CyU3PUibProtIntrEvtHandler+0xe8>
4001f4b4:	e5810004 	str	r0, [r1, #4]
4001f4b8:	e8bd8010 	pop	{r4, pc}
4001f4bc:	e0033000 	.word	0xe0033000
4001f4c0:	40031d40 	.word	0x40031d40
4001f4c4:	40030d9c 	.word	0x40030d9c
4001f4c8:	e0030000 	.word	0xe0030000

Disassembly of section i.CyU3PUibSendDescr:

4001f4cc <CyU3PUibSendDescr>:
4001f4cc:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
4001f4d0:	e1a04000 	mov	r4, r0
4001f4d4:	e1a05001 	mov	r5, r1
4001f4d8:	e3a06000 	mov	r6, #0
4001f4dc:	e3a07000 	mov	r7, #0
4001f4e0:	e3a08000 	mov	r8, #0
4001f4e4:	e3a09000 	mov	r9, #0
4001f4e8:	e59f05e4 	ldr	r0, [pc, #1508]	; 4001fad4 <CyU3PUibSendDescr+0x608>
4001f4ec:	e0000825 	and	r0, r0, r5, lsr #16
4001f4f0:	e58d0000 	str	r0, [sp]
4001f4f4:	e59f05dc 	ldr	r0, [pc, #1500]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f4f8:	e5d00009 	ldrb	r0, [r0, #9]
4001f4fc:	e3500003 	cmp	r0, #3
4001f500:	1a000001 	bne	4001f50c <CyU3PUibSendDescr+0x40>
4001f504:	e3a00c02 	mov	r0, #512	; 0x200
4001f508:	ea000000 	b	4001f510 <CyU3PUibSendDescr+0x44>
4001f50c:	e3a00040 	mov	r0, #64	; 0x40
4001f510:	e1a0a800 	lsl	sl, r0, #16
4001f514:	e1a0a82a 	lsr	sl, sl, #16
4001f518:	e1a00c24 	lsr	r0, r4, #24
4001f51c:	e3500006 	cmp	r0, #6
4001f520:	0a0000b4 	beq	4001f7f8 <CyU3PUibSendDescr+0x32c>
4001f524:	ca000006 	bgt	4001f544 <CyU3PUibSendDescr+0x78>
4001f528:	e3500001 	cmp	r0, #1
4001f52c:	0a00000b 	beq	4001f560 <CyU3PUibSendDescr+0x94>
4001f530:	e3500002 	cmp	r0, #2
4001f534:	0a000020 	beq	4001f5bc <CyU3PUibSendDescr+0xf0>
4001f538:	e3500003 	cmp	r0, #3
4001f53c:	1a00013b 	bne	4001fa30 <CyU3PUibSendDescr+0x564>
4001f540:	ea00007b 	b	4001f734 <CyU3PUibSendDescr+0x268>
4001f544:	e3500007 	cmp	r0, #7
4001f548:	0a0000b8 	beq	4001f830 <CyU3PUibSendDescr+0x364>
4001f54c:	e3500009 	cmp	r0, #9
4001f550:	0a000122 	beq	4001f9e0 <CyU3PUibSendDescr+0x514>
4001f554:	e350000f 	cmp	r0, #15
4001f558:	1a000134 	bne	4001fa30 <CyU3PUibSendDescr+0x564>
4001f55c:	ea0000f6 	b	4001f93c <CyU3PUibSendDescr+0x470>
4001f560:	e1a00000 	nop			; (mov r0, r0)
4001f564:	e59f056c 	ldr	r0, [pc, #1388]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f568:	e5d00009 	ldrb	r0, [r0, #9]
4001f56c:	e3500003 	cmp	r0, #3
4001f570:	1a000008 	bne	4001f598 <CyU3PUibSendDescr+0xcc>
4001f574:	e59f0560 	ldr	r0, [pc, #1376]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f578:	e5900004 	ldr	r0, [r0, #4]
4001f57c:	e3500000 	cmp	r0, #0
4001f580:	0a00000c 	beq	4001f5b8 <CyU3PUibSendDescr+0xec>
4001f584:	e3a09001 	mov	r9, #1
4001f588:	e3a06012 	mov	r6, #18
4001f58c:	e59f0548 	ldr	r0, [pc, #1352]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f590:	e5908004 	ldr	r8, [r0, #4]
4001f594:	ea000007 	b	4001f5b8 <CyU3PUibSendDescr+0xec>
4001f598:	e59f053c 	ldr	r0, [pc, #1340]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f59c:	e5900000 	ldr	r0, [r0]
4001f5a0:	e3500000 	cmp	r0, #0
4001f5a4:	0a000003 	beq	4001f5b8 <CyU3PUibSendDescr+0xec>
4001f5a8:	e3a09001 	mov	r9, #1
4001f5ac:	e3a06012 	mov	r6, #18
4001f5b0:	e59f0524 	ldr	r0, [pc, #1316]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f5b4:	e5908000 	ldr	r8, [r0]
4001f5b8:	ea000128 	b	4001fa60 <CyU3PUibSendDescr+0x594>
4001f5bc:	e1a00000 	nop			; (mov r0, r0)
4001f5c0:	e59f0510 	ldr	r0, [pc, #1296]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f5c4:	e5d00009 	ldrb	r0, [r0, #9]
4001f5c8:	e3500002 	cmp	r0, #2
4001f5cc:	1a00001a 	bne	4001f63c <CyU3PUibSendDescr+0x170>
4001f5d0:	e59f0504 	ldr	r0, [pc, #1284]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f5d4:	e5900014 	ldr	r0, [r0, #20]
4001f5d8:	e3500000 	cmp	r0, #0
4001f5dc:	0a00004f 	beq	4001f720 <CyU3PUibSendDescr+0x254>
4001f5e0:	e3a09001 	mov	r9, #1
4001f5e4:	e59f04f0 	ldr	r0, [pc, #1264]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f5e8:	e5908014 	ldr	r8, [r0, #20]
4001f5ec:	e5900014 	ldr	r0, [r0, #20]
4001f5f0:	e5d00002 	ldrb	r0, [r0, #2]
4001f5f4:	e59f14e0 	ldr	r1, [pc, #1248]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f5f8:	e5911014 	ldr	r1, [r1, #20]
4001f5fc:	e5d11003 	ldrb	r1, [r1, #3]
4001f600:	e1800401 	orr	r0, r0, r1, lsl #8
4001f604:	e1500825 	cmp	r0, r5, lsr #16
4001f608:	2a000007 	bcs	4001f62c <CyU3PUibSendDescr+0x160>
4001f60c:	e59f04c8 	ldr	r0, [pc, #1224]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f610:	e5900014 	ldr	r0, [r0, #20]
4001f614:	e5d00002 	ldrb	r0, [r0, #2]
4001f618:	e59f14bc 	ldr	r1, [pc, #1212]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f61c:	e5911014 	ldr	r1, [r1, #20]
4001f620:	e5d11003 	ldrb	r1, [r1, #3]
4001f624:	e1800401 	orr	r0, r0, r1, lsl #8
4001f628:	ea000000 	b	4001f630 <CyU3PUibSendDescr+0x164>
4001f62c:	e1a00825 	lsr	r0, r5, #16
4001f630:	e1a06800 	lsl	r6, r0, #16
4001f634:	e1a06826 	lsr	r6, r6, #16
4001f638:	ea000038 	b	4001f720 <CyU3PUibSendDescr+0x254>
4001f63c:	e59f0494 	ldr	r0, [pc, #1172]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f640:	e5d00009 	ldrb	r0, [r0, #9]
4001f644:	e3500001 	cmp	r0, #1
4001f648:	1a00001a 	bne	4001f6b8 <CyU3PUibSendDescr+0x1ec>
4001f64c:	e59f0488 	ldr	r0, [pc, #1160]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f650:	e5900018 	ldr	r0, [r0, #24]
4001f654:	e3500000 	cmp	r0, #0
4001f658:	0a000030 	beq	4001f720 <CyU3PUibSendDescr+0x254>
4001f65c:	e3a09001 	mov	r9, #1
4001f660:	e59f0474 	ldr	r0, [pc, #1140]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f664:	e5908018 	ldr	r8, [r0, #24]
4001f668:	e5900018 	ldr	r0, [r0, #24]
4001f66c:	e5d00002 	ldrb	r0, [r0, #2]
4001f670:	e59f1464 	ldr	r1, [pc, #1124]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f674:	e5911018 	ldr	r1, [r1, #24]
4001f678:	e5d11003 	ldrb	r1, [r1, #3]
4001f67c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f680:	e1500825 	cmp	r0, r5, lsr #16
4001f684:	2a000007 	bcs	4001f6a8 <CyU3PUibSendDescr+0x1dc>
4001f688:	e59f044c 	ldr	r0, [pc, #1100]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f68c:	e5900018 	ldr	r0, [r0, #24]
4001f690:	e5d00002 	ldrb	r0, [r0, #2]
4001f694:	e59f1440 	ldr	r1, [pc, #1088]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f698:	e5911018 	ldr	r1, [r1, #24]
4001f69c:	e5d11003 	ldrb	r1, [r1, #3]
4001f6a0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6a4:	ea000000 	b	4001f6ac <CyU3PUibSendDescr+0x1e0>
4001f6a8:	e1a00825 	lsr	r0, r5, #16
4001f6ac:	e1a06800 	lsl	r6, r0, #16
4001f6b0:	e1a06826 	lsr	r6, r6, #16
4001f6b4:	ea000019 	b	4001f720 <CyU3PUibSendDescr+0x254>
4001f6b8:	e59f041c 	ldr	r0, [pc, #1052]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f6bc:	e590001c 	ldr	r0, [r0, #28]
4001f6c0:	e3500000 	cmp	r0, #0
4001f6c4:	0a000015 	beq	4001f720 <CyU3PUibSendDescr+0x254>
4001f6c8:	e3a09001 	mov	r9, #1
4001f6cc:	e59f0408 	ldr	r0, [pc, #1032]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f6d0:	e590801c 	ldr	r8, [r0, #28]
4001f6d4:	e590001c 	ldr	r0, [r0, #28]
4001f6d8:	e5d00002 	ldrb	r0, [r0, #2]
4001f6dc:	e59f13f8 	ldr	r1, [pc, #1016]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f6e0:	e591101c 	ldr	r1, [r1, #28]
4001f6e4:	e5d11003 	ldrb	r1, [r1, #3]
4001f6e8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f6ec:	e1500825 	cmp	r0, r5, lsr #16
4001f6f0:	2a000007 	bcs	4001f714 <CyU3PUibSendDescr+0x248>
4001f6f4:	e59f03e0 	ldr	r0, [pc, #992]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f6f8:	e590001c 	ldr	r0, [r0, #28]
4001f6fc:	e5d00002 	ldrb	r0, [r0, #2]
4001f700:	e59f13d4 	ldr	r1, [pc, #980]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f704:	e591101c 	ldr	r1, [r1, #28]
4001f708:	e5d11003 	ldrb	r1, [r1, #3]
4001f70c:	e1800401 	orr	r0, r0, r1, lsl #8
4001f710:	ea000000 	b	4001f718 <CyU3PUibSendDescr+0x24c>
4001f714:	e1a00825 	lsr	r0, r5, #16
4001f718:	e1a06800 	lsl	r6, r0, #16
4001f71c:	e1a06826 	lsr	r6, r6, #16
4001f720:	e3580000 	cmp	r8, #0
4001f724:	0a000001 	beq	4001f730 <CyU3PUibSendDescr+0x264>
4001f728:	e3a00002 	mov	r0, #2
4001f72c:	e5c80001 	strb	r0, [r8, #1]
4001f730:	ea0000ca 	b	4001fa60 <CyU3PUibSendDescr+0x594>
4001f734:	e1a00000 	nop			; (mov r0, r0)
4001f738:	e20408ff 	and	r0, r4, #16711680	; 0xff0000
4001f73c:	e1a0b820 	lsr	fp, r0, #16
4001f740:	e35b0010 	cmp	fp, #16
4001f744:	ca000003 	bgt	4001f758 <CyU3PUibSendDescr+0x28c>
4001f748:	e59f0390 	ldr	r0, [pc, #912]	; 4001fae0 <CyU3PUibSendDescr+0x614>
4001f74c:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f750:	e3500000 	cmp	r0, #0
4001f754:	1a000013 	bne	4001f7a8 <CyU3PUibSendDescr+0x2dc>
4001f758:	e59f0378 	ldr	r0, [pc, #888]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f75c:	e5d00007 	ldrb	r0, [r0, #7]
4001f760:	e3500001 	cmp	r0, #1
4001f764:	0a000022 	beq	4001f7f4 <CyU3PUibSendDescr+0x328>
4001f768:	e59f0374 	ldr	r0, [pc, #884]	; 4001fae4 <CyU3PUibSendDescr+0x618>
4001f76c:	e5900000 	ldr	r0, [r0]
4001f770:	e3500000 	cmp	r0, #0
4001f774:	0a00001e 	beq	4001f7f4 <CyU3PUibSendDescr+0x328>
4001f778:	e1a01005 	mov	r1, r5
4001f77c:	e1a00004 	mov	r0, r4
4001f780:	e59f235c 	ldr	r2, [pc, #860]	; 4001fae4 <CyU3PUibSendDescr+0x618>
4001f784:	e5922000 	ldr	r2, [r2]
4001f788:	e12fff32 	blx	r2
4001f78c:	e1a09000 	mov	r9, r0
4001f790:	e3590000 	cmp	r9, #0
4001f794:	0a000016 	beq	4001f7f4 <CyU3PUibSendDescr+0x328>
4001f798:	e3a00001 	mov	r0, #1
4001f79c:	e59f1334 	ldr	r1, [pc, #820]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f7a0:	e5810040 	str	r0, [r1, #64]	; 0x40
4001f7a4:	ea000012 	b	4001f7f4 <CyU3PUibSendDescr+0x328>
4001f7a8:	e59f0330 	ldr	r0, [pc, #816]	; 4001fae0 <CyU3PUibSendDescr+0x614>
4001f7ac:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f7b0:	e5d00000 	ldrb	r0, [r0]
4001f7b4:	e1500825 	cmp	r0, r5, lsr #16
4001f7b8:	2a000003 	bcs	4001f7cc <CyU3PUibSendDescr+0x300>
4001f7bc:	e59f031c 	ldr	r0, [pc, #796]	; 4001fae0 <CyU3PUibSendDescr+0x614>
4001f7c0:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f7c4:	e5d00000 	ldrb	r0, [r0]
4001f7c8:	ea000000 	b	4001f7d0 <CyU3PUibSendDescr+0x304>
4001f7cc:	e1a00825 	lsr	r0, r5, #16
4001f7d0:	e1a06800 	lsl	r6, r0, #16
4001f7d4:	e1a06826 	lsr	r6, r6, #16
4001f7d8:	e59f0300 	ldr	r0, [pc, #768]	; 4001fae0 <CyU3PUibSendDescr+0x614>
4001f7dc:	e790010b 	ldr	r0, [r0, fp, lsl #2]
4001f7e0:	e3500000 	cmp	r0, #0
4001f7e4:	0a000002 	beq	4001f7f4 <CyU3PUibSendDescr+0x328>
4001f7e8:	e3a09001 	mov	r9, #1
4001f7ec:	e59f02ec 	ldr	r0, [pc, #748]	; 4001fae0 <CyU3PUibSendDescr+0x614>
4001f7f0:	e790810b 	ldr	r8, [r0, fp, lsl #2]
4001f7f4:	ea000099 	b	4001fa60 <CyU3PUibSendDescr+0x594>
4001f7f8:	e1a00000 	nop			; (mov r0, r0)
4001f7fc:	e59f02d8 	ldr	r0, [pc, #728]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f800:	e5900008 	ldr	r0, [r0, #8]
4001f804:	e3500000 	cmp	r0, #0
4001f808:	0a000007 	beq	4001f82c <CyU3PUibSendDescr+0x360>
4001f80c:	e59f02c4 	ldr	r0, [pc, #708]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f810:	e5d00009 	ldrb	r0, [r0, #9]
4001f814:	e3500003 	cmp	r0, #3
4001f818:	0a000003 	beq	4001f82c <CyU3PUibSendDescr+0x360>
4001f81c:	e3a09001 	mov	r9, #1
4001f820:	e3a0600a 	mov	r6, #10
4001f824:	e59f02b0 	ldr	r0, [pc, #688]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f828:	e5908008 	ldr	r8, [r0, #8]
4001f82c:	ea00008b 	b	4001fa60 <CyU3PUibSendDescr+0x594>
4001f830:	e1a00000 	nop			; (mov r0, r0)
4001f834:	e59f029c 	ldr	r0, [pc, #668]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f838:	e5d00009 	ldrb	r0, [r0, #9]
4001f83c:	e3500002 	cmp	r0, #2
4001f840:	1a00001a 	bne	4001f8b0 <CyU3PUibSendDescr+0x3e4>
4001f844:	e59f0290 	ldr	r0, [pc, #656]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f848:	e5900018 	ldr	r0, [r0, #24]
4001f84c:	e3500000 	cmp	r0, #0
4001f850:	0a000034 	beq	4001f928 <CyU3PUibSendDescr+0x45c>
4001f854:	e3a09001 	mov	r9, #1
4001f858:	e59f027c 	ldr	r0, [pc, #636]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f85c:	e5908018 	ldr	r8, [r0, #24]
4001f860:	e5900018 	ldr	r0, [r0, #24]
4001f864:	e5d00002 	ldrb	r0, [r0, #2]
4001f868:	e59f126c 	ldr	r1, [pc, #620]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f86c:	e5911018 	ldr	r1, [r1, #24]
4001f870:	e5d11003 	ldrb	r1, [r1, #3]
4001f874:	e1800401 	orr	r0, r0, r1, lsl #8
4001f878:	e1500825 	cmp	r0, r5, lsr #16
4001f87c:	2a000007 	bcs	4001f8a0 <CyU3PUibSendDescr+0x3d4>
4001f880:	e59f0254 	ldr	r0, [pc, #596]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f884:	e5900018 	ldr	r0, [r0, #24]
4001f888:	e5d00002 	ldrb	r0, [r0, #2]
4001f88c:	e59f1248 	ldr	r1, [pc, #584]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f890:	e5911018 	ldr	r1, [r1, #24]
4001f894:	e5d11003 	ldrb	r1, [r1, #3]
4001f898:	e1800401 	orr	r0, r0, r1, lsl #8
4001f89c:	ea000000 	b	4001f8a4 <CyU3PUibSendDescr+0x3d8>
4001f8a0:	e1a00825 	lsr	r0, r5, #16
4001f8a4:	e1a06800 	lsl	r6, r0, #16
4001f8a8:	e1a06826 	lsr	r6, r6, #16
4001f8ac:	ea00001d 	b	4001f928 <CyU3PUibSendDescr+0x45c>
4001f8b0:	e59f0220 	ldr	r0, [pc, #544]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f8b4:	e5d00009 	ldrb	r0, [r0, #9]
4001f8b8:	e3500001 	cmp	r0, #1
4001f8bc:	1a000019 	bne	4001f928 <CyU3PUibSendDescr+0x45c>
4001f8c0:	e59f0214 	ldr	r0, [pc, #532]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f8c4:	e5900014 	ldr	r0, [r0, #20]
4001f8c8:	e3500000 	cmp	r0, #0
4001f8cc:	0a000015 	beq	4001f928 <CyU3PUibSendDescr+0x45c>
4001f8d0:	e3a09001 	mov	r9, #1
4001f8d4:	e59f0200 	ldr	r0, [pc, #512]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f8d8:	e5908014 	ldr	r8, [r0, #20]
4001f8dc:	e5900014 	ldr	r0, [r0, #20]
4001f8e0:	e5d00002 	ldrb	r0, [r0, #2]
4001f8e4:	e59f11f0 	ldr	r1, [pc, #496]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f8e8:	e5911014 	ldr	r1, [r1, #20]
4001f8ec:	e5d11003 	ldrb	r1, [r1, #3]
4001f8f0:	e1800401 	orr	r0, r0, r1, lsl #8
4001f8f4:	e1500825 	cmp	r0, r5, lsr #16
4001f8f8:	2a000007 	bcs	4001f91c <CyU3PUibSendDescr+0x450>
4001f8fc:	e59f01d8 	ldr	r0, [pc, #472]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f900:	e5900014 	ldr	r0, [r0, #20]
4001f904:	e5d00002 	ldrb	r0, [r0, #2]
4001f908:	e59f11cc 	ldr	r1, [pc, #460]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f90c:	e5911014 	ldr	r1, [r1, #20]
4001f910:	e5d11003 	ldrb	r1, [r1, #3]
4001f914:	e1800401 	orr	r0, r0, r1, lsl #8
4001f918:	ea000000 	b	4001f920 <CyU3PUibSendDescr+0x454>
4001f91c:	e1a00825 	lsr	r0, r5, #16
4001f920:	e1a06800 	lsl	r6, r0, #16
4001f924:	e1a06826 	lsr	r6, r6, #16
4001f928:	e3580000 	cmp	r8, #0
4001f92c:	0a000001 	beq	4001f938 <CyU3PUibSendDescr+0x46c>
4001f930:	e3a00007 	mov	r0, #7
4001f934:	e5c80001 	strb	r0, [r8, #1]
4001f938:	ea000048 	b	4001fa60 <CyU3PUibSendDescr+0x594>
4001f93c:	e1a00000 	nop			; (mov r0, r0)
4001f940:	e59f0194 	ldr	r0, [pc, #404]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f944:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f948:	e3500000 	cmp	r0, #0
4001f94c:	0a000022 	beq	4001f9dc <CyU3PUibSendDescr+0x510>
4001f950:	e59f0180 	ldr	r0, [pc, #384]	; 4001fad8 <CyU3PUibSendDescr+0x60c>
4001f954:	e5d00009 	ldrb	r0, [r0, #9]
4001f958:	e3500003 	cmp	r0, #3
4001f95c:	0a000008 	beq	4001f984 <CyU3PUibSendDescr+0x4b8>
4001f960:	e59f0174 	ldr	r0, [pc, #372]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f964:	e5900000 	ldr	r0, [r0]
4001f968:	e3500000 	cmp	r0, #0
4001f96c:	0a00001a 	beq	4001f9dc <CyU3PUibSendDescr+0x510>
4001f970:	e59f0164 	ldr	r0, [pc, #356]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f974:	e5900000 	ldr	r0, [r0]
4001f978:	e5d00002 	ldrb	r0, [r0, #2]
4001f97c:	e3500010 	cmp	r0, #16
4001f980:	1a000015 	bne	4001f9dc <CyU3PUibSendDescr+0x510>
4001f984:	e3a09001 	mov	r9, #1
4001f988:	e59f014c 	ldr	r0, [pc, #332]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f98c:	e590806c 	ldr	r8, [r0, #108]	; 0x6c
4001f990:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f994:	e5d00002 	ldrb	r0, [r0, #2]
4001f998:	e59f113c 	ldr	r1, [pc, #316]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f99c:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f9a0:	e5d11003 	ldrb	r1, [r1, #3]
4001f9a4:	e1800401 	orr	r0, r0, r1, lsl #8
4001f9a8:	e1500825 	cmp	r0, r5, lsr #16
4001f9ac:	2a000007 	bcs	4001f9d0 <CyU3PUibSendDescr+0x504>
4001f9b0:	e59f0124 	ldr	r0, [pc, #292]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f9b4:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
4001f9b8:	e5d00002 	ldrb	r0, [r0, #2]
4001f9bc:	e59f1118 	ldr	r1, [pc, #280]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f9c0:	e591106c 	ldr	r1, [r1, #108]	; 0x6c
4001f9c4:	e5d11003 	ldrb	r1, [r1, #3]
4001f9c8:	e1800401 	orr	r0, r0, r1, lsl #8
4001f9cc:	ea000000 	b	4001f9d4 <CyU3PUibSendDescr+0x508>
4001f9d0:	e1a00825 	lsr	r0, r5, #16
4001f9d4:	e1a06800 	lsl	r6, r0, #16
4001f9d8:	e1a06826 	lsr	r6, r6, #16
4001f9dc:	ea00001f 	b	4001fa60 <CyU3PUibSendDescr+0x594>
4001f9e0:	e1a00000 	nop			; (mov r0, r0)
4001f9e4:	e59f00f0 	ldr	r0, [pc, #240]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f9e8:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001f9ec:	e3500000 	cmp	r0, #0
4001f9f0:	0a00000d 	beq	4001fa2c <CyU3PUibSendDescr+0x560>
4001f9f4:	e3a09001 	mov	r9, #1
4001f9f8:	e59f00dc 	ldr	r0, [pc, #220]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001f9fc:	e5908070 	ldr	r8, [r0, #112]	; 0x70
4001fa00:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001fa04:	e5d00000 	ldrb	r0, [r0]
4001fa08:	e1500825 	cmp	r0, r5, lsr #16
4001fa0c:	2a000003 	bcs	4001fa20 <CyU3PUibSendDescr+0x554>
4001fa10:	e59f00c4 	ldr	r0, [pc, #196]	; 4001fadc <CyU3PUibSendDescr+0x610>
4001fa14:	e5900070 	ldr	r0, [r0, #112]	; 0x70
4001fa18:	e5d00000 	ldrb	r0, [r0]
4001fa1c:	ea000000 	b	4001fa24 <CyU3PUibSendDescr+0x558>
4001fa20:	e1a00825 	lsr	r0, r5, #16
4001fa24:	e1a06800 	lsl	r6, r0, #16
4001fa28:	e1a06826 	lsr	r6, r6, #16
4001fa2c:	ea00000b 	b	4001fa60 <CyU3PUibSendDescr+0x594>
4001fa30:	e1a00000 	nop			; (mov r0, r0)
4001fa34:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fae4 <CyU3PUibSendDescr+0x618>
4001fa38:	e5900000 	ldr	r0, [r0]
4001fa3c:	e3500000 	cmp	r0, #0
4001fa40:	0a000005 	beq	4001fa5c <CyU3PUibSendDescr+0x590>
4001fa44:	e1a01005 	mov	r1, r5
4001fa48:	e1a00004 	mov	r0, r4
4001fa4c:	e59f2090 	ldr	r2, [pc, #144]	; 4001fae4 <CyU3PUibSendDescr+0x618>
4001fa50:	e5922000 	ldr	r2, [r2]
4001fa54:	e12fff32 	blx	r2
4001fa58:	e1a09000 	mov	r9, r0
4001fa5c:	e1a00000 	nop			; (mov r0, r0)
4001fa60:	e1a00000 	nop			; (mov r0, r0)
4001fa64:	e3590001 	cmp	r9, #1
4001fa68:	1a000017 	bne	4001facc <CyU3PUibSendDescr+0x600>
4001fa6c:	e3580000 	cmp	r8, #0
4001fa70:	0a000015 	beq	4001facc <CyU3PUibSendDescr+0x600>
4001fa74:	e1a01008 	mov	r1, r8
4001fa78:	e1a00006 	mov	r0, r6
4001fa7c:	ebfff758 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
4001fa80:	e1a07000 	mov	r7, r0
4001fa84:	e3570000 	cmp	r7, #0
4001fa88:	1a000009 	bne	4001fab4 <CyU3PUibSendDescr+0x5e8>
4001fa8c:	e59d0000 	ldr	r0, [sp]
4001fa90:	e1560000 	cmp	r6, r0
4001fa94:	aa000006 	bge	4001fab4 <CyU3PUibSendDescr+0x5e8>
4001fa98:	e24a0001 	sub	r0, sl, #1
4001fa9c:	e1100006 	tst	r0, r6
4001faa0:	1a000003 	bne	4001fab4 <CyU3PUibSendDescr+0x5e8>
4001faa4:	e1a01008 	mov	r1, r8
4001faa8:	e3a00000 	mov	r0, #0
4001faac:	ebfff74c 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
4001fab0:	e1a07000 	mov	r7, r0
4001fab4:	e3570000 	cmp	r7, #0
4001fab8:	0a000003 	beq	4001facc <CyU3PUibSendDescr+0x600>
4001fabc:	e3a02000 	mov	r2, #0
4001fac0:	e3a01001 	mov	r1, #1
4001fac4:	e1a00002 	mov	r0, r2
4001fac8:	ebfff970 	bl	4001e090 <CyU3PUsbStall>
4001facc:	e1a00009 	mov	r0, r9
4001fad0:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
4001fad4:	0000ffff 	.word	0x0000ffff
4001fad8:	40031d40 	.word	0x40031d40
4001fadc:	40031f98 	.word	0x40031f98
4001fae0:	40031fb8 	.word	0x40031fb8
4001fae4:	40030da0 	.word	0x40030da0

Disassembly of section i.CyU3PUibSocketInit:

4001fae8 <CyU3PUibSocketInit>:
4001fae8:	e3a00000 	mov	r0, #0
4001faec:	ea00000d 	b	4001fb28 <CyU3PUibSocketInit+0x40>
4001faf0:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001faf4:	e59f2080 	ldr	r2, [pc, #128]	; 4001fb7c <CyU3PUibSocketInit+0x94>
4001faf8:	e0822380 	add	r2, r2, r0, lsl #7
4001fafc:	e582100c 	str	r1, [r2, #12]
4001fb00:	e3e01000 	mvn	r1, #0
4001fb04:	e59f2070 	ldr	r2, [pc, #112]	; 4001fb7c <CyU3PUibSocketInit+0x94>
4001fb08:	e0822380 	add	r2, r2, r0, lsl #7
4001fb0c:	e5821010 	str	r1, [r2, #16]
4001fb10:	e3a01000 	mov	r1, #0
4001fb14:	e59f2060 	ldr	r2, [pc, #96]	; 4001fb7c <CyU3PUibSocketInit+0x94>
4001fb18:	e0822380 	add	r2, r2, r0, lsl #7
4001fb1c:	e5821014 	str	r1, [r2, #20]
4001fb20:	e2801001 	add	r1, r0, #1
4001fb24:	e20100ff 	and	r0, r1, #255	; 0xff
4001fb28:	e3500010 	cmp	r0, #16
4001fb2c:	baffffef 	blt	4001faf0 <CyU3PUibSocketInit+0x8>
4001fb30:	e3a00000 	mov	r0, #0
4001fb34:	ea00000d 	b	4001fb70 <CyU3PUibSocketInit+0x88>
4001fb38:	e3a0164e 	mov	r1, #81788928	; 0x4e00000
4001fb3c:	e59f203c 	ldr	r2, [pc, #60]	; 4001fb80 <CyU3PUibSocketInit+0x98>
4001fb40:	e0822380 	add	r2, r2, r0, lsl #7
4001fb44:	e582100c 	str	r1, [r2, #12]
4001fb48:	e3e01000 	mvn	r1, #0
4001fb4c:	e59f202c 	ldr	r2, [pc, #44]	; 4001fb80 <CyU3PUibSocketInit+0x98>
4001fb50:	e0822380 	add	r2, r2, r0, lsl #7
4001fb54:	e5821010 	str	r1, [r2, #16]
4001fb58:	e3a01000 	mov	r1, #0
4001fb5c:	e59f201c 	ldr	r2, [pc, #28]	; 4001fb80 <CyU3PUibSocketInit+0x98>
4001fb60:	e0822380 	add	r2, r2, r0, lsl #7
4001fb64:	e5821014 	str	r1, [r2, #20]
4001fb68:	e2801001 	add	r1, r0, #1
4001fb6c:	e20100ff 	and	r0, r1, #255	; 0xff
4001fb70:	e3500010 	cmp	r0, #16
4001fb74:	baffffef 	blt	4001fb38 <CyU3PUibSocketInit+0x50>
4001fb78:	e12fff1e 	bx	lr
4001fb7c:	e0038000 	.word	0xe0038000
4001fb80:	e0048000 	.word	0xe0048000

Disassembly of section i.CyU3PUibStatusTimerCb:

4001fb84 <CyU3PUibStatusTimerCb>:
4001fb84:	e92d4010 	push	{r4, lr}
4001fb88:	e1a04000 	mov	r4, r0
4001fb8c:	e59f0050 	ldr	r0, [pc, #80]	; 4001fbe4 <CyU3PUibStatusTimerCb+0x60>
4001fb90:	e5900000 	ldr	r0, [r0]
4001fb94:	e3500000 	cmp	r0, #0
4001fb98:	0a000010 	beq	4001fbe0 <CyU3PUibStatusTimerCb+0x5c>
4001fb9c:	e59f0044 	ldr	r0, [pc, #68]	; 4001fbe8 <CyU3PUibStatusTimerCb+0x64>
4001fba0:	e5d00009 	ldrb	r0, [r0, #9]
4001fba4:	e3500003 	cmp	r0, #3
4001fba8:	1a00000c 	bne	4001fbe0 <CyU3PUibStatusTimerCb+0x5c>
4001fbac:	e59f0038 	ldr	r0, [pc, #56]	; 4001fbec <CyU3PUibStatusTimerCb+0x68>
4001fbb0:	e5900000 	ldr	r0, [r0]
4001fbb4:	e3500000 	cmp	r0, #0
4001fbb8:	0a000008 	beq	4001fbe0 <CyU3PUibStatusTimerCb+0x5c>
4001fbbc:	e3a01000 	mov	r1, #0
4001fbc0:	e1a00001 	mov	r0, r1
4001fbc4:	ebfff77c 	bl	4001d9bc <CyU3PUsbSendErdy>
4001fbc8:	e3a02000 	mov	r2, #0
4001fbcc:	e3a01064 	mov	r1, #100	; 0x64
4001fbd0:	e59f0018 	ldr	r0, [pc, #24]	; 4001fbf0 <CyU3PUibStatusTimerCb+0x6c>
4001fbd4:	ebffac05 	bl	4000abf0 <_txe_timer_change>
4001fbd8:	e59f0010 	ldr	r0, [pc, #16]	; 4001fbf0 <CyU3PUibStatusTimerCb+0x6c>
4001fbdc:	ebffabf3 	bl	4000abb0 <_txe_timer_activate>
4001fbe0:	e8bd8010 	pop	{r4, pc}
4001fbe4:	40030db0 	.word	0x40030db0
4001fbe8:	40031d40 	.word	0x40031d40
4001fbec:	40030db4 	.word	0x40030db4
4001fbf0:	400326a0 	.word	0x400326a0

Disassembly of section i.CyU3PUibThreadEntry:

4001fbf4 <CyU3PUibThreadEntry>:
4001fbf4:	e92d407c 	push	{r2, r3, r4, r5, r6, lr}
4001fbf8:	e3a05000 	mov	r5, #0
4001fbfc:	e59f505c 	ldr	r5, [pc, #92]	; 4001fc60 <CyU3PUibThreadEntry+0x6c>
4001fc00:	e3a00001 	mov	r0, #1
4001fc04:	e59f1058 	ldr	r1, [pc, #88]	; 4001fc64 <CyU3PUibThreadEntry+0x70>
4001fc08:	e5810000 	str	r0, [r1]
4001fc0c:	e3a02020 	mov	r2, #32
4001fc10:	e3a01000 	mov	r1, #0
4001fc14:	e59f004c 	ldr	r0, [pc, #76]	; 4001fc68 <CyU3PUibThreadEntry+0x74>
4001fc18:	ebff8ea6 	bl	400036b8 <CyU3PMemSet>
4001fc1c:	ea00000e 	b	4001fc5c <CyU3PUibThreadEntry+0x68>
4001fc20:	e3e03000 	mvn	r3, #0
4001fc24:	e58d3000 	str	r3, [sp]
4001fc28:	e28d3004 	add	r3, sp, #4
4001fc2c:	e3a02001 	mov	r2, #1
4001fc30:	e1a01005 	mov	r1, r5
4001fc34:	e59f0030 	ldr	r0, [pc, #48]	; 4001fc6c <CyU3PUibThreadEntry+0x78>
4001fc38:	ebffa8d6 	bl	40009f98 <_txe_event_flags_get>
4001fc3c:	e1a04000 	mov	r4, r0
4001fc40:	e3540000 	cmp	r4, #0
4001fc44:	0a000000 	beq	4001fc4c <CyU3PUibThreadEntry+0x58>
4001fc48:	ea000003 	b	4001fc5c <CyU3PUibThreadEntry+0x68>
4001fc4c:	e59d0004 	ldr	r0, [sp, #4]
4001fc50:	eb0002a1 	bl	400206dc <CyU3PUsbHandleEvents>
4001fc54:	ebffabb8 	bl	4000ab3c <_txe_thread_relinquish>
4001fc58:	e1a00000 	nop			; (mov r0, r0)
4001fc5c:	eaffffef 	b	4001fc20 <CyU3PUibThreadEntry+0x2c>
4001fc60:	073fbfe1 	.word	0x073fbfe1
4001fc64:	40030d60 	.word	0x40030d60
4001fc68:	40032680 	.word	0x40032680
4001fc6c:	40031eb8 	.word	0x40031eb8

Disassembly of section i.CyU3PUibVbusChangeHandler:

4001fc70 <CyU3PUibVbusChangeHandler>:
4001fc70:	e92d4010 	push	{r4, lr}
4001fc74:	e3a00000 	mov	r0, #0
4001fc78:	e59f114c 	ldr	r1, [pc, #332]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fc7c:	e5810060 	str	r0, [r1, #96]	; 0x60
4001fc80:	e59f0148 	ldr	r0, [pc, #328]	; 4001fdd0 <CyU3PUibVbusChangeHandler+0x160>
4001fc84:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fc88:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fc8c:	e1100001 	tst	r0, r1
4001fc90:	0a00000b 	beq	4001fcc4 <CyU3PUibVbusChangeHandler+0x54>
4001fc94:	e3a00002 	mov	r0, #2
4001fc98:	eb000051 	bl	4001fde4 <CyU3PUsbAddToEventLog>
4001fc9c:	e59f0130 	ldr	r0, [pc, #304]	; 4001fdd4 <CyU3PUibVbusChangeHandler+0x164>
4001fca0:	e5900000 	ldr	r0, [r0]
4001fca4:	e3500000 	cmp	r0, #0
4001fca8:	0a000010 	beq	4001fcf0 <CyU3PUibVbusChangeHandler+0x80>
4001fcac:	e3a01000 	mov	r1, #0
4001fcb0:	e3a0000b 	mov	r0, #11
4001fcb4:	e59f2118 	ldr	r2, [pc, #280]	; 4001fdd4 <CyU3PUibVbusChangeHandler+0x164>
4001fcb8:	e5922000 	ldr	r2, [r2]
4001fcbc:	e12fff32 	blx	r2
4001fcc0:	ea00000a 	b	4001fcf0 <CyU3PUibVbusChangeHandler+0x80>
4001fcc4:	e3a00001 	mov	r0, #1
4001fcc8:	eb000045 	bl	4001fde4 <CyU3PUsbAddToEventLog>
4001fccc:	e59f0100 	ldr	r0, [pc, #256]	; 4001fdd4 <CyU3PUibVbusChangeHandler+0x164>
4001fcd0:	e5900000 	ldr	r0, [r0]
4001fcd4:	e3500000 	cmp	r0, #0
4001fcd8:	0a000004 	beq	4001fcf0 <CyU3PUibVbusChangeHandler+0x80>
4001fcdc:	e3a01000 	mov	r1, #0
4001fce0:	e3a0000c 	mov	r0, #12
4001fce4:	e59f20e8 	ldr	r2, [pc, #232]	; 4001fdd4 <CyU3PUibVbusChangeHandler+0x164>
4001fce8:	e5922000 	ldr	r2, [r2]
4001fcec:	e12fff32 	blx	r2
4001fcf0:	e59f00d8 	ldr	r0, [pc, #216]	; 4001fdd0 <CyU3PUibVbusChangeHandler+0x160>
4001fcf4:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4001fcf8:	e59f10cc 	ldr	r1, [pc, #204]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fcfc:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4001fd00:	e1100001 	tst	r0, r1
4001fd04:	0a000022 	beq	4001fd94 <CyU3PUibVbusChangeHandler+0x124>
4001fd08:	e59f00bc 	ldr	r0, [pc, #188]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd0c:	e5d00008 	ldrb	r0, [r0, #8]
4001fd10:	e3500005 	cmp	r0, #5
4001fd14:	ba000000 	blt	4001fd1c <CyU3PUibVbusChangeHandler+0xac>
4001fd18:	eb0008d6 	bl	40022078 <HandleVbusOffEvent>
4001fd1c:	e59f00a8 	ldr	r0, [pc, #168]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd20:	e5d00008 	ldrb	r0, [r0, #8]
4001fd24:	e3500004 	cmp	r0, #4
4001fd28:	1a00001e 	bne	4001fda8 <CyU3PUibVbusChangeHandler+0x138>
4001fd2c:	e59f0098 	ldr	r0, [pc, #152]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd30:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fd34:	e59f1090 	ldr	r1, [pc, #144]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd38:	e581004c 	str	r0, [r1, #76]	; 0x4c
4001fd3c:	e2810000 	add	r0, r1, #0
4001fd40:	e5900024 	ldr	r0, [r0, #36]	; 0x24
4001fd44:	e3500000 	cmp	r0, #0
4001fd48:	0a00000a 	beq	4001fd78 <CyU3PUibVbusChangeHandler+0x108>
4001fd4c:	e3a00000 	mov	r0, #0
4001fd50:	e59f1080 	ldr	r1, [pc, #128]	; 4001fdd8 <CyU3PUibVbusChangeHandler+0x168>
4001fd54:	e5810014 	str	r0, [r1, #20]
4001fd58:	e59f107c 	ldr	r1, [pc, #124]	; 4001fddc <CyU3PUibVbusChangeHandler+0x16c>
4001fd5c:	e5810000 	str	r0, [r1]
4001fd60:	e59f1078 	ldr	r1, [pc, #120]	; 4001fde0 <CyU3PUibVbusChangeHandler+0x170>
4001fd64:	e5810000 	str	r0, [r1]
4001fd68:	e59f105c 	ldr	r1, [pc, #92]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd6c:	e5810054 	str	r0, [r1, #84]	; 0x54
4001fd70:	e5810050 	str	r0, [r1, #80]	; 0x50
4001fd74:	e5810058 	str	r0, [r1, #88]	; 0x58
4001fd78:	e59f104c 	ldr	r1, [pc, #76]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd7c:	e5910024 	ldr	r0, [r1, #36]	; 0x24
4001fd80:	ebfff593 	bl	4001d3d4 <CyU3PUsbPhyEnable>
4001fd84:	e3a00005 	mov	r0, #5
4001fd88:	e59f103c 	ldr	r1, [pc, #60]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd8c:	e5c10008 	strb	r0, [r1, #8]
4001fd90:	ea000004 	b	4001fda8 <CyU3PUibVbusChangeHandler+0x138>
4001fd94:	e59f0030 	ldr	r0, [pc, #48]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fd98:	e5d00008 	ldrb	r0, [r0, #8]
4001fd9c:	e3500005 	cmp	r0, #5
4001fda0:	ba000000 	blt	4001fda8 <CyU3PUibVbusChangeHandler+0x138>
4001fda4:	eb0008b3 	bl	40022078 <HandleVbusOffEvent>
4001fda8:	ebfff0df 	bl	4001c12c <CyU3POtgIsStarted>
4001fdac:	e3500000 	cmp	r0, #0
4001fdb0:	0a000000 	beq	4001fdb8 <CyU3PUibVbusChangeHandler+0x148>
4001fdb4:	ebfff4e3 	bl	4001d148 <CyU3PUsbOtgVbusChangeHandler>
4001fdb8:	e59f000c 	ldr	r0, [pc, #12]	; 4001fdcc <CyU3PUibVbusChangeHandler+0x15c>
4001fdbc:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4001fdc0:	e59f1008 	ldr	r1, [pc, #8]	; 4001fdd0 <CyU3PUibVbusChangeHandler+0x160>
4001fdc4:	e5810038 	str	r0, [r1, #56]	; 0x38
4001fdc8:	e8bd8010 	pop	{r4, pc}
4001fdcc:	40031d40 	.word	0x40031d40
4001fdd0:	e0051000 	.word	0xe0051000
4001fdd4:	40030d9c 	.word	0x40030d9c
4001fdd8:	e0033000 	.word	0xe0033000
4001fddc:	40030d84 	.word	0x40030d84
4001fde0:	40030d88 	.word	0x40030d88

Disassembly of section i.CyU3PUsbAddToEventLog:

4001fde4 <CyU3PUsbAddToEventLog>:
4001fde4:	e59f1058 	ldr	r1, [pc, #88]	; 4001fe44 <CyU3PUsbAddToEventLog+0x60>
4001fde8:	e5911000 	ldr	r1, [r1]
4001fdec:	e3510000 	cmp	r1, #0
4001fdf0:	0a000012 	beq	4001fe40 <CyU3PUsbAddToEventLog+0x5c>
4001fdf4:	e59f104c 	ldr	r1, [pc, #76]	; 4001fe48 <CyU3PUsbAddToEventLog+0x64>
4001fdf8:	e5911000 	ldr	r1, [r1]
4001fdfc:	e59f2044 	ldr	r2, [pc, #68]	; 4001fe48 <CyU3PUsbAddToEventLog+0x64>
4001fe00:	e5922000 	ldr	r2, [r2]
4001fe04:	e2822001 	add	r2, r2, #1
4001fe08:	e59f3038 	ldr	r3, [pc, #56]	; 4001fe48 <CyU3PUsbAddToEventLog+0x64>
4001fe0c:	e5832000 	str	r2, [r3]
4001fe10:	e59f202c 	ldr	r2, [pc, #44]	; 4001fe44 <CyU3PUsbAddToEventLog+0x60>
4001fe14:	e5922000 	ldr	r2, [r2]
4001fe18:	e7c20001 	strb	r0, [r2, r1]
4001fe1c:	e2831000 	add	r1, r3, #0
4001fe20:	e5911000 	ldr	r1, [r1]
4001fe24:	e59f2020 	ldr	r2, [pc, #32]	; 4001fe4c <CyU3PUsbAddToEventLog+0x68>
4001fe28:	e5922000 	ldr	r2, [r2]
4001fe2c:	e1510002 	cmp	r1, r2
4001fe30:	3a000002 	bcc	4001fe40 <CyU3PUsbAddToEventLog+0x5c>
4001fe34:	e3a01000 	mov	r1, #0
4001fe38:	e2832000 	add	r2, r3, #0
4001fe3c:	e5821000 	str	r1, [r2]
4001fe40:	e12fff1e 	bx	lr
4001fe44:	40030d90 	.word	0x40030d90
4001fe48:	40030d94 	.word	0x40030d94
4001fe4c:	40030d98 	.word	0x40030d98

Disassembly of section i.CyU3PUsbCheckUsb3Disconnect:

4001fe50 <CyU3PUsbCheckUsb3Disconnect>:
4001fe50:	e92d4070 	push	{r4, r5, r6, lr}
4001fe54:	e3a04e19 	mov	r4, #400	; 0x190
4001fe58:	e3a06002 	mov	r6, #2
4001fe5c:	e59f01fc 	ldr	r0, [pc, #508]	; 40020060 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fe60:	e1d000b0 	ldrh	r0, [r0]
4001fe64:	e3500001 	cmp	r0, #1
4001fe68:	da000008 	ble	4001fe90 <CyU3PUsbCheckUsb3Disconnect+0x40>
4001fe6c:	e59f01ec 	ldr	r0, [pc, #492]	; 40020060 <CyU3PUsbCheckUsb3Disconnect+0x210>
4001fe70:	e1d010b0 	ldrh	r1, [r0]
4001fe74:	e1a00004 	mov	r0, r4
4001fe78:	ebffc3bc 	bl	40010d70 <__aeabi_idivmod>
4001fe7c:	e1a04800 	lsl	r4, r0, #16
4001fe80:	e1a04824 	lsr	r4, r4, #16
4001fe84:	e2840001 	add	r0, r4, #1
4001fe88:	e3c04801 	bic	r4, r0, #65536	; 0x10000
4001fe8c:	e3a06001 	mov	r6, #1
4001fe90:	e59f01cc 	ldr	r0, [pc, #460]	; 40020064 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fe94:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fe98:	e200503f 	and	r5, r0, #63	; 0x3f
4001fe9c:	e3550010 	cmp	r5, #16
4001fea0:	ba000004 	blt	4001feb8 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001fea4:	e3550017 	cmp	r5, #23
4001fea8:	ca000002 	bgt	4001feb8 <CyU3PUsbCheckUsb3Disconnect+0x68>
4001feac:	e3a00000 	mov	r0, #0
4001feb0:	e59f11b0 	ldr	r1, [pc, #432]	; 40020068 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001feb4:	e5810000 	str	r0, [r1]
4001feb8:	e59f01a8 	ldr	r0, [pc, #424]	; 40020068 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001febc:	e5900000 	ldr	r0, [r0]
4001fec0:	e3500000 	cmp	r0, #0
4001fec4:	1a000000 	bne	4001fecc <CyU3PUsbCheckUsb3Disconnect+0x7c>
4001fec8:	e8bd8070 	pop	{r4, r5, r6, pc}
4001fecc:	ea000010 	b	4001ff14 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fed0:	e1a00006 	mov	r0, r6
4001fed4:	ebffa367 	bl	40008c78 <_tx_thread_sleep>
4001fed8:	e59f0184 	ldr	r0, [pc, #388]	; 40020064 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001fedc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4001fee0:	e200503f 	and	r5, r0, #63	; 0x3f
4001fee4:	e59f017c 	ldr	r0, [pc, #380]	; 40020068 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001fee8:	e5900000 	ldr	r0, [r0]
4001feec:	e3500000 	cmp	r0, #0
4001fef0:	0a000003 	beq	4001ff04 <CyU3PUsbCheckUsb3Disconnect+0xb4>
4001fef4:	e3550010 	cmp	r5, #16
4001fef8:	ba000005 	blt	4001ff14 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001fefc:	e3550017 	cmp	r5, #23
4001ff00:	ca000003 	bgt	4001ff14 <CyU3PUsbCheckUsb3Disconnect+0xc4>
4001ff04:	e3a00000 	mov	r0, #0
4001ff08:	e59f1158 	ldr	r1, [pc, #344]	; 40020068 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ff0c:	e5810000 	str	r0, [r1]
4001ff10:	ea000004 	b	4001ff28 <CyU3PUsbCheckUsb3Disconnect+0xd8>
4001ff14:	e1b00004 	movs	r0, r4
4001ff18:	e2441001 	sub	r1, r4, #1
4001ff1c:	e1a04801 	lsl	r4, r1, #16
4001ff20:	e1a04824 	lsr	r4, r4, #16
4001ff24:	1affffe9 	bne	4001fed0 <CyU3PUsbCheckUsb3Disconnect+0x80>
4001ff28:	e1a00000 	nop			; (mov r0, r0)
4001ff2c:	e59f0134 	ldr	r0, [pc, #308]	; 40020068 <CyU3PUsbCheckUsb3Disconnect+0x218>
4001ff30:	e5900000 	ldr	r0, [r0]
4001ff34:	e3500000 	cmp	r0, #0
4001ff38:	0a000047 	beq	4002005c <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001ff3c:	e59f0128 	ldr	r0, [pc, #296]	; 4002006c <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff40:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff44:	e3100a02 	tst	r0, #8192	; 0x2000
4001ff48:	0a000020 	beq	4001ffd0 <CyU3PUsbCheckUsb3Disconnect+0x180>
4001ff4c:	e59f0118 	ldr	r0, [pc, #280]	; 4002006c <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff50:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4001ff54:	e3c00903 	bic	r0, r0, #49152	; 0xc000
4001ff58:	e59f110c 	ldr	r1, [pc, #268]	; 4002006c <CyU3PUsbCheckUsb3Disconnect+0x21c>
4001ff5c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4001ff60:	e3a00002 	mov	r0, #2
4001ff64:	ebffce52 	bl	400138b4 <CyU3PBusyWait>
4001ff68:	e59f0100 	ldr	r0, [pc, #256]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff6c:	e5900004 	ldr	r0, [r0, #4]
4001ff70:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4001ff74:	e59f10f4 	ldr	r1, [pc, #244]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ff78:	e5810004 	str	r0, [r1, #4]
4001ff7c:	e3a00001 	mov	r0, #1
4001ff80:	ebffce4b 	bl	400138b4 <CyU3PBusyWait>
4001ff84:	e59f00d8 	ldr	r0, [pc, #216]	; 40020064 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ff88:	e590001c 	ldr	r0, [r0, #28]
4001ff8c:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4001ff90:	e59f10cc 	ldr	r1, [pc, #204]	; 40020064 <CyU3PUsbCheckUsb3Disconnect+0x214>
4001ff94:	e581001c 	str	r0, [r1, #28]
4001ff98:	e59f00d4 	ldr	r0, [pc, #212]	; 40020074 <CyU3PUsbCheckUsb3Disconnect+0x224>
4001ff9c:	e5900000 	ldr	r0, [r0]
4001ffa0:	e581002c 	str	r0, [r1, #44]	; 0x2c
4001ffa4:	e3a00001 	mov	r0, #1
4001ffa8:	ebffce41 	bl	400138b4 <CyU3PBusyWait>
4001ffac:	e59f00bc 	ldr	r0, [pc, #188]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ffb0:	e5900004 	ldr	r0, [r0, #4]
4001ffb4:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4001ffb8:	e59f10b0 	ldr	r1, [pc, #176]	; 40020070 <CyU3PUsbCheckUsb3Disconnect+0x220>
4001ffbc:	e5810004 	str	r0, [r1, #4]
4001ffc0:	e3a01000 	mov	r1, #0
4001ffc4:	e3a00002 	mov	r0, #2
4001ffc8:	ebfff1d9 	bl	4001c734 <CyU3PSetUsbCoreClock>
4001ffcc:	ea000022 	b	4002005c <CyU3PUsbCheckUsb3Disconnect+0x20c>
4001ffd0:	e59f00a0 	ldr	r0, [pc, #160]	; 40020078 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001ffd4:	e5900000 	ldr	r0, [r0]
4001ffd8:	e3500000 	cmp	r0, #0
4001ffdc:	0a000007 	beq	40020000 <CyU3PUsbCheckUsb3Disconnect+0x1b0>
4001ffe0:	e3a00000 	mov	r0, #0
4001ffe4:	e59f108c 	ldr	r1, [pc, #140]	; 40020078 <CyU3PUsbCheckUsb3Disconnect+0x228>
4001ffe8:	e5810000 	str	r0, [r1]
4001ffec:	e3a00001 	mov	r0, #1
4001fff0:	ebfff481 	bl	4001d1fc <CyU3PUsbPhyDisable>
4001fff4:	e3a00001 	mov	r0, #1
4001fff8:	ebfff4f5 	bl	4001d3d4 <CyU3PUsbPhyEnable>
4001fffc:	eaffffb1 	b	4001fec8 <CyU3PUsbCheckUsb3Disconnect+0x78>
40020000:	e59f0074 	ldr	r0, [pc, #116]	; 4002007c <CyU3PUsbCheckUsb3Disconnect+0x22c>
40020004:	e5900078 	ldr	r0, [r0, #120]	; 0x78
40020008:	e3500000 	cmp	r0, #0
4002000c:	0a000011 	beq	40020058 <CyU3PUsbCheckUsb3Disconnect+0x208>
40020010:	e3a00001 	mov	r0, #1
40020014:	ebfff478 	bl	4001d1fc <CyU3PUsbPhyDisable>
40020018:	e3a00003 	mov	r0, #3
4002001c:	e59f1058 	ldr	r1, [pc, #88]	; 4002007c <CyU3PUsbCheckUsb3Disconnect+0x22c>
40020020:	e5c10008 	strb	r0, [r1, #8]
40020024:	e3a00000 	mov	r0, #0
40020028:	e5c10009 	strb	r0, [r1, #9]
4002002c:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020030:	e59f0048 	ldr	r0, [pc, #72]	; 40020080 <CyU3PUsbCheckUsb3Disconnect+0x230>
40020034:	e5900000 	ldr	r0, [r0]
40020038:	e3500000 	cmp	r0, #0
4002003c:	0a000006 	beq	4002005c <CyU3PUsbCheckUsb3Disconnect+0x20c>
40020040:	e3a01000 	mov	r1, #0
40020044:	e3a00014 	mov	r0, #20
40020048:	e59f2030 	ldr	r2, [pc, #48]	; 40020080 <CyU3PUsbCheckUsb3Disconnect+0x230>
4002004c:	e5922000 	ldr	r2, [r2]
40020050:	e12fff32 	blx	r2
40020054:	ea000000 	b	4002005c <CyU3PUsbCheckUsb3Disconnect+0x20c>
40020058:	eb00008e 	bl	40020298 <CyU3PUsbFallBackToUsb2>
4002005c:	eaffff99 	b	4001fec8 <CyU3PUsbCheckUsb3Disconnect+0x78>
40020060:	40030db8 	.word	0x40030db8
40020064:	e0033000 	.word	0xe0033000
40020068:	40030d64 	.word	0x40030d64
4002006c:	e0031000 	.word	0xe0031000
40020070:	e0030000 	.word	0xe0030000
40020074:	40030c58 	.word	0x40030c58
40020078:	40030d74 	.word	0x40030d74
4002007c:	40031d40 	.word	0x40031d40
40020080:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbDescInit:

40020084 <CyU3PUsbDescInit>:
40020084:	e92d4010 	push	{r4, lr}
40020088:	e3a02074 	mov	r2, #116	; 0x74
4002008c:	e3a01000 	mov	r1, #0
40020090:	e59f0004 	ldr	r0, [pc, #4]	; 4002009c <CyU3PUsbDescInit+0x18>
40020094:	ebff8d87 	bl	400036b8 <CyU3PMemSet>
40020098:	e8bd8010 	pop	{r4, pc}
4002009c:	40031f98 	.word	0x40031f98

Disassembly of section i.CyU3PUsbEpPrepare:

400200a0 <CyU3PUsbEpPrepare>:
400200a0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400200a4:	e1a04000 	mov	r4, r0
400200a8:	e3a05001 	mov	r5, #1
400200ac:	ea000061 	b	40020238 <CyU3PUsbEpPrepare+0x198>
400200b0:	e59f01b8 	ldr	r0, [pc, #440]	; 40020270 <CyU3PUsbEpPrepare+0x1d0>
400200b4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400200b8:	e3100901 	tst	r0, #16384	; 0x4000
400200bc:	0a000029 	beq	40020168 <CyU3PUsbEpPrepare+0xc8>
400200c0:	e0850085 	add	r0, r5, r5, lsl #1
400200c4:	e59f11a8 	ldr	r1, [pc, #424]	; 40020274 <CyU3PUsbEpPrepare+0x1d4>
400200c8:	e0810100 	add	r0, r1, r0, lsl #2
400200cc:	e1d070b0 	ldrh	r7, [r0]
400200d0:	e59f0198 	ldr	r0, [pc, #408]	; 40020270 <CyU3PUsbEpPrepare+0x1d0>
400200d4:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400200d8:	e2000b03 	and	r0, r0, #3072	; 0xc00
400200dc:	e1a06520 	lsr	r6, r0, #10
400200e0:	e2440001 	sub	r0, r4, #1
400200e4:	e0800080 	add	r0, r0, r0, lsl #1
400200e8:	e59f1188 	ldr	r1, [pc, #392]	; 40020278 <CyU3PUsbEpPrepare+0x1d8>
400200ec:	e0810100 	add	r0, r1, r0, lsl #2
400200f0:	e2461001 	sub	r1, r6, #1
400200f4:	e7908101 	ldr	r8, [r0, r1, lsl #2]
400200f8:	e1570008 	cmp	r7, r8
400200fc:	8a000001 	bhi	40020108 <CyU3PUsbEpPrepare+0x68>
40020100:	e3570000 	cmp	r7, #0
40020104:	1a000000 	bne	4002010c <CyU3PUsbEpPrepare+0x6c>
40020108:	e1a07008 	mov	r7, r8
4002010c:	e3540003 	cmp	r4, #3
40020110:	1a000005 	bne	4002012c <CyU3PUsbEpPrepare+0x8c>
40020114:	e59f0160 	ldr	r0, [pc, #352]	; 4002027c <CyU3PUsbEpPrepare+0x1dc>
40020118:	e7900105 	ldr	r0, [r0, r5, lsl #2]
4002011c:	e3800001 	orr	r0, r0, #1
40020120:	e59f1154 	ldr	r1, [pc, #340]	; 4002027c <CyU3PUsbEpPrepare+0x1dc>
40020124:	e7810105 	str	r0, [r1, r5, lsl #2]
40020128:	ea000008 	b	40020150 <CyU3PUsbEpPrepare+0xb0>
4002012c:	e59f013c 	ldr	r0, [pc, #316]	; 40020270 <CyU3PUsbEpPrepare+0x1d0>
40020130:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020134:	e1a00520 	lsr	r0, r0, #10
40020138:	e1a00500 	lsl	r0, r0, #10
4002013c:	e1a01b07 	lsl	r1, r7, #22
40020140:	e1a01b21 	lsr	r1, r1, #22
40020144:	e1800001 	orr	r0, r0, r1
40020148:	e59f1120 	ldr	r1, [pc, #288]	; 40020270 <CyU3PUsbEpPrepare+0x1d0>
4002014c:	e7810105 	str	r0, [r1, r5, lsl #2]
40020150:	e59f0128 	ldr	r0, [pc, #296]	; 40020280 <CyU3PUsbEpPrepare+0x1e0>
40020154:	e7807105 	str	r7, [r0, r5, lsl #2]
40020158:	e3850080 	orr	r0, r5, #128	; 0x80
4002015c:	e3a02001 	mov	r2, #1
40020160:	e3a01000 	mov	r1, #0
40020164:	ebfff7c9 	bl	4001e090 <CyU3PUsbStall>
40020168:	e59f0114 	ldr	r0, [pc, #276]	; 40020284 <CyU3PUsbEpPrepare+0x1e4>
4002016c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020170:	e3100901 	tst	r0, #16384	; 0x4000
40020174:	0a00002d 	beq	40020230 <CyU3PUsbEpPrepare+0x190>
40020178:	e0850085 	add	r0, r5, r5, lsl #1
4002017c:	e59f1104 	ldr	r1, [pc, #260]	; 40020288 <CyU3PUsbEpPrepare+0x1e8>
40020180:	e0810100 	add	r0, r1, r0, lsl #2
40020184:	e1d070b0 	ldrh	r7, [r0]
40020188:	e59f00f4 	ldr	r0, [pc, #244]	; 40020284 <CyU3PUsbEpPrepare+0x1e4>
4002018c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020190:	e2000b03 	and	r0, r0, #3072	; 0xc00
40020194:	e1a06520 	lsr	r6, r0, #10
40020198:	e2440001 	sub	r0, r4, #1
4002019c:	e0800080 	add	r0, r0, r0, lsl #1
400201a0:	e59f10d0 	ldr	r1, [pc, #208]	; 40020278 <CyU3PUsbEpPrepare+0x1d8>
400201a4:	e0810100 	add	r0, r1, r0, lsl #2
400201a8:	e2461001 	sub	r1, r6, #1
400201ac:	e7908101 	ldr	r8, [r0, r1, lsl #2]
400201b0:	e1570008 	cmp	r7, r8
400201b4:	8a000001 	bhi	400201c0 <CyU3PUsbEpPrepare+0x120>
400201b8:	e3570000 	cmp	r7, #0
400201bc:	1a000000 	bne	400201c4 <CyU3PUsbEpPrepare+0x124>
400201c0:	e1a07008 	mov	r7, r8
400201c4:	e3540003 	cmp	r4, #3
400201c8:	1a000005 	bne	400201e4 <CyU3PUsbEpPrepare+0x144>
400201cc:	e59f00b8 	ldr	r0, [pc, #184]	; 4002028c <CyU3PUsbEpPrepare+0x1ec>
400201d0:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201d4:	e3800001 	orr	r0, r0, #1
400201d8:	e59f10ac 	ldr	r1, [pc, #172]	; 4002028c <CyU3PUsbEpPrepare+0x1ec>
400201dc:	e7810105 	str	r0, [r1, r5, lsl #2]
400201e0:	ea000008 	b	40020208 <CyU3PUsbEpPrepare+0x168>
400201e4:	e59f0098 	ldr	r0, [pc, #152]	; 40020284 <CyU3PUsbEpPrepare+0x1e4>
400201e8:	e7900105 	ldr	r0, [r0, r5, lsl #2]
400201ec:	e1a00520 	lsr	r0, r0, #10
400201f0:	e1a00500 	lsl	r0, r0, #10
400201f4:	e1a01b07 	lsl	r1, r7, #22
400201f8:	e1a01b21 	lsr	r1, r1, #22
400201fc:	e1800001 	orr	r0, r0, r1
40020200:	e59f107c 	ldr	r1, [pc, #124]	; 40020284 <CyU3PUsbEpPrepare+0x1e4>
40020204:	e7810105 	str	r0, [r1, r5, lsl #2]
40020208:	e59f0080 	ldr	r0, [pc, #128]	; 40020290 <CyU3PUsbEpPrepare+0x1f0>
4002020c:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40020210:	e2000101 	and	r0, r0, #1073741824	; 0x40000000
40020214:	e1800007 	orr	r0, r0, r7
40020218:	e59f1070 	ldr	r1, [pc, #112]	; 40020290 <CyU3PUsbEpPrepare+0x1f0>
4002021c:	e7810105 	str	r0, [r1, r5, lsl #2]
40020220:	e3a02001 	mov	r2, #1
40020224:	e3a01000 	mov	r1, #0
40020228:	e1a00005 	mov	r0, r5
4002022c:	ebfff797 	bl	4001e090 <CyU3PUsbStall>
40020230:	e2850001 	add	r0, r5, #1
40020234:	e20050ff 	and	r5, r0, #255	; 0xff
40020238:	e3550010 	cmp	r5, #16
4002023c:	baffff9b 	blt	400200b0 <CyU3PUsbEpPrepare+0x10>
40020240:	e3540003 	cmp	r4, #3
40020244:	1a000005 	bne	40020260 <CyU3PUsbEpPrepare+0x1c0>
40020248:	e59f1044 	ldr	r1, [pc, #68]	; 40020294 <CyU3PUsbEpPrepare+0x1f4>
4002024c:	e5911068 	ldr	r1, [r1, #104]	; 0x68
40020250:	e3510000 	cmp	r1, #0
40020254:	0a000001 	beq	40020260 <CyU3PUsbEpPrepare+0x1c0>
40020258:	e3a01001 	mov	r1, #1
4002025c:	ea000000 	b	40020264 <CyU3PUsbEpPrepare+0x1c4>
40020260:	e3a01000 	mov	r1, #0
40020264:	e1a00001 	mov	r0, r1
40020268:	eb000853 	bl	400223bc <CyFx3UsbDmaPrefetchEnable>
4002026c:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40020270:	e0031418 	.word	0xe0031418
40020274:	40031bc0 	.word	0x40031bc0
40020278:	400121fc 	.word	0x400121fc
4002027c:	e0033500 	.word	0xe0033500
40020280:	e0031c40 	.word	0xe0031c40
40020284:	e0031498 	.word	0xe0031498
40020288:	40031c80 	.word	0x40031c80
4002028c:	e0033600 	.word	0xe0033600
40020290:	e0031c80 	.word	0xe0031c80
40020294:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbFallBackToUsb2:

40020298 <CyU3PUsbFallBackToUsb2>:
40020298:	e92d4010 	push	{r4, lr}
4002029c:	e59f0234 	ldr	r0, [pc, #564]	; 400204d8 <CyU3PUsbFallBackToUsb2+0x240>
400202a0:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400202a4:	e3500000 	cmp	r0, #0
400202a8:	0a000006 	beq	400202c8 <CyU3PUsbFallBackToUsb2+0x30>
400202ac:	e59f0228 	ldr	r0, [pc, #552]	; 400204dc <CyU3PUsbFallBackToUsb2+0x244>
400202b0:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400202b4:	e59f121c 	ldr	r1, [pc, #540]	; 400204d8 <CyU3PUsbFallBackToUsb2+0x240>
400202b8:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400202bc:	e1100001 	tst	r0, r1
400202c0:	1a000000 	bne	400202c8 <CyU3PUsbFallBackToUsb2+0x30>
400202c4:	e8bd8010 	pop	{r4, pc}
400202c8:	e3a00050 	mov	r0, #80	; 0x50
400202cc:	ebfffec4 	bl	4001fde4 <CyU3PUsbAddToEventLog>
400202d0:	eb0007f1 	bl	4002229c <CyU3PVicDisableAllInterrupts>
400202d4:	e1a04000 	mov	r4, r0
400202d8:	e3a01000 	mov	r1, #0
400202dc:	e59f01fc 	ldr	r0, [pc, #508]	; 400204e0 <CyU3PUsbFallBackToUsb2+0x248>
400202e0:	eb000860 	bl	40022468 <CyFx3UsbWritePhyReg>
400202e4:	e1a00004 	mov	r0, r4
400202e8:	eb0007f9 	bl	400222d4 <CyU3PVicEnableInterrupts>
400202ec:	e3a00a01 	mov	r0, #4096	; 0x1000
400202f0:	e59f11ec 	ldr	r1, [pc, #492]	; 400204e4 <CyU3PUsbFallBackToUsb2+0x24c>
400202f4:	e5810054 	str	r0, [r1, #84]	; 0x54
400202f8:	e59f01d8 	ldr	r0, [pc, #472]	; 400204d8 <CyU3PUsbFallBackToUsb2+0x240>
400202fc:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40020300:	e2800001 	add	r0, r0, #1
40020304:	e59f11cc 	ldr	r1, [pc, #460]	; 400204d8 <CyU3PUsbFallBackToUsb2+0x240>
40020308:	e5810058 	str	r0, [r1, #88]	; 0x58
4002030c:	e3a00000 	mov	r0, #0
40020310:	e59f11d0 	ldr	r1, [pc, #464]	; 400204e8 <CyU3PUsbFallBackToUsb2+0x250>
40020314:	e5810000 	str	r0, [r1]
40020318:	e59f01cc 	ldr	r0, [pc, #460]	; 400204ec <CyU3PUsbFallBackToUsb2+0x254>
4002031c:	ebffaac7 	bl	4000ae40 <_txe_timer_deactivate>
40020320:	e3a00002 	mov	r0, #2
40020324:	ebffcd62 	bl	400138b4 <CyU3PBusyWait>
40020328:	e3a01002 	mov	r1, #2
4002032c:	e1a00001 	mov	r0, r1
40020330:	ebfff0ff 	bl	4001c734 <CyU3PSetUsbCoreClock>
40020334:	e3a00002 	mov	r0, #2
40020338:	ebffcd5d 	bl	400138b4 <CyU3PBusyWait>
4002033c:	e59f01ac 	ldr	r0, [pc, #428]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
40020340:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020344:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020348:	e59f11a0 	ldr	r1, [pc, #416]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
4002034c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020350:	e3a00002 	mov	r0, #2
40020354:	ebffcd56 	bl	400138b4 <CyU3PBusyWait>
40020358:	e59f0190 	ldr	r0, [pc, #400]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
4002035c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020360:	e3c00902 	bic	r0, r0, #32768	; 0x8000
40020364:	e59f1184 	ldr	r1, [pc, #388]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
40020368:	e581080c 	str	r0, [r1, #2060]	; 0x80c
4002036c:	e2410a01 	sub	r0, r1, #4096	; 0x1000
40020370:	e5900004 	ldr	r0, [r0, #4]
40020374:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020378:	e2411a01 	sub	r1, r1, #4096	; 0x1000
4002037c:	e5810004 	str	r0, [r1, #4]
40020380:	e2810a03 	add	r0, r1, #12288	; 0x3000
40020384:	e590001c 	ldr	r0, [r0, #28]
40020388:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
4002038c:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020390:	e581001c 	str	r0, [r1, #28]
40020394:	e59f0158 	ldr	r0, [pc, #344]	; 400204f4 <CyU3PUsbFallBackToUsb2+0x25c>
40020398:	e5900000 	ldr	r0, [r0]
4002039c:	e581002c 	str	r0, [r1, #44]	; 0x2c
400203a0:	e2810a1d 	add	r0, r1, #118784	; 0x1d000
400203a4:	e5900000 	ldr	r0, [r0]
400203a8:	e3c00602 	bic	r0, r0, #2097152	; 0x200000
400203ac:	e2811a1d 	add	r1, r1, #118784	; 0x1d000
400203b0:	e5810000 	str	r0, [r1]
400203b4:	e3a00005 	mov	r0, #5
400203b8:	ebffcd3d 	bl	400138b4 <CyU3PBusyWait>
400203bc:	e59f0134 	ldr	r0, [pc, #308]	; 400204f8 <CyU3PUsbFallBackToUsb2+0x260>
400203c0:	e5900000 	ldr	r0, [r0]
400203c4:	e3800602 	orr	r0, r0, #2097152	; 0x200000
400203c8:	e59f1128 	ldr	r1, [pc, #296]	; 400204f8 <CyU3PUsbFallBackToUsb2+0x260>
400203cc:	e5810000 	str	r0, [r1]
400203d0:	e3a0000a 	mov	r0, #10
400203d4:	ebffcd36 	bl	400138b4 <CyU3PBusyWait>
400203d8:	e3e00000 	mvn	r0, #0
400203dc:	e59f110c 	ldr	r1, [pc, #268]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
400203e0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
400203e4:	e5810524 	str	r0, [r1, #1316]	; 0x524
400203e8:	e5810810 	str	r0, [r1, #2064]	; 0x810
400203ec:	e59f0108 	ldr	r0, [pc, #264]	; 400204fc <CyU3PUsbFallBackToUsb2+0x264>
400203f0:	ebffd869 	bl	4001659c <CyU3PDmaChannelReset>
400203f4:	e59f0104 	ldr	r0, [pc, #260]	; 40020500 <CyU3PUsbFallBackToUsb2+0x268>
400203f8:	ebffd867 	bl	4001659c <CyU3PDmaChannelReset>
400203fc:	e3a00000 	mov	r0, #0
40020400:	e59f10dc 	ldr	r1, [pc, #220]	; 400204e4 <CyU3PUsbFallBackToUsb2+0x24c>
40020404:	e5810008 	str	r0, [r1, #8]
40020408:	e3e00000 	mvn	r0, #0
4002040c:	e5810004 	str	r0, [r1, #4]
40020410:	e3a00000 	mov	r0, #0
40020414:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020418:	e3e00000 	mvn	r0, #0
4002041c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020420:	e1c10820 	bic	r0, r1, r0, lsr #16
40020424:	e5900004 	ldr	r0, [r0, #4]
40020428:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
4002042c:	e2411a03 	sub	r1, r1, #12288	; 0x3000
40020430:	e5810004 	str	r0, [r1, #4]
40020434:	e2810a01 	add	r0, r1, #4096	; 0x1000
40020438:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4002043c:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020440:	e2811a01 	add	r1, r1, #4096	; 0x1000
40020444:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020448:	e1a00001 	mov	r0, r1
4002044c:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
40020450:	e3c00901 	bic	r0, r0, #16384	; 0x4000
40020454:	e5810498 	str	r0, [r1, #1176]	; 0x498
40020458:	e3a00001 	mov	r0, #1
4002045c:	e59f1074 	ldr	r1, [pc, #116]	; 400204d8 <CyU3PUsbFallBackToUsb2+0x240>
40020460:	e5c10009 	strb	r0, [r1, #9]
40020464:	e3a00000 	mov	r0, #0
40020468:	e5810044 	str	r0, [r1, #68]	; 0x44
4002046c:	e3a00501 	mov	r0, #4194304	; 0x400000
40020470:	e59f108c 	ldr	r1, [pc, #140]	; 40020504 <CyU3PUsbFallBackToUsb2+0x26c>
40020474:	e5810074 	str	r0, [r1, #116]	; 0x74
40020478:	e3a00002 	mov	r0, #2
4002047c:	ebffcd0c 	bl	400138b4 <CyU3PBusyWait>
40020480:	e59f0068 	ldr	r0, [pc, #104]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
40020484:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020488:	e3800a02 	orr	r0, r0, #8192	; 0x2000
4002048c:	e59f105c 	ldr	r1, [pc, #92]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
40020490:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020494:	e3a00064 	mov	r0, #100	; 0x64
40020498:	ebffcd05 	bl	400138b4 <CyU3PBusyWait>
4002049c:	eb00079f 	bl	40022320 <CyFx3Usb2PhySetup>
400204a0:	e59f0060 	ldr	r0, [pc, #96]	; 40020508 <CyU3PUsbFallBackToUsb2+0x270>
400204a4:	e59f1044 	ldr	r1, [pc, #68]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
400204a8:	e5810008 	str	r0, [r1, #8]
400204ac:	e3a00050 	mov	r0, #80	; 0x50
400204b0:	ebffccff 	bl	400138b4 <CyU3PBusyWait>
400204b4:	e3a01000 	mov	r1, #0
400204b8:	e3a00002 	mov	r0, #2
400204bc:	ebfff09c 	bl	4001c734 <CyU3PSetUsbCoreClock>
400204c0:	e59f0028 	ldr	r0, [pc, #40]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
400204c4:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400204c8:	e3c00008 	bic	r0, r0, #8
400204cc:	e59f101c 	ldr	r1, [pc, #28]	; 400204f0 <CyU3PUsbFallBackToUsb2+0x258>
400204d0:	e5810408 	str	r0, [r1, #1032]	; 0x408
400204d4:	eaffff7a 	b	400202c4 <CyU3PUsbFallBackToUsb2+0x2c>
400204d8:	40031d40 	.word	0x40031d40
400204dc:	e0051000 	.word	0xe0051000
400204e0:	00001005 	.word	0x00001005
400204e4:	e0033000 	.word	0xe0033000
400204e8:	40030db0 	.word	0x40030db0
400204ec:	400326a0 	.word	0x400326a0
400204f0:	e0031000 	.word	0xe0031000
400204f4:	40030c58 	.word	0x40030c58
400204f8:	e0050000 	.word	0xe0050000
400204fc:	40031a80 	.word	0x40031a80
40020500:	40031b20 	.word	0x40031b20
40020504:	e0032000 	.word	0xe0032000
40020508:	a0000011 	.word	0xa0000011

Disassembly of section i.CyU3PUsbGetEpStatus:

4002050c <CyU3PUsbGetEpStatus>:
4002050c:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020510:	e1a04000 	mov	r4, r0
40020514:	e204600f 	and	r6, r4, #15
40020518:	e59f0090 	ldr	r0, [pc, #144]	; 400205b0 <CyU3PUsbGetEpStatus+0xa4>
4002051c:	e5d00009 	ldrb	r0, [r0, #9]
40020520:	e3500003 	cmp	r0, #3
40020524:	1a00000b 	bne	40020558 <CyU3PUsbGetEpStatus+0x4c>
40020528:	e3140080 	tst	r4, #128	; 0x80
4002052c:	0a000004 	beq	40020544 <CyU3PUsbGetEpStatus+0x38>
40020530:	e59f007c 	ldr	r0, [pc, #124]	; 400205b4 <CyU3PUsbGetEpStatus+0xa8>
40020534:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020538:	e2000004 	and	r0, r0, #4
4002053c:	e58d0000 	str	r0, [sp]
40020540:	ea00000f 	b	40020584 <CyU3PUsbGetEpStatus+0x78>
40020544:	e59f006c 	ldr	r0, [pc, #108]	; 400205b8 <CyU3PUsbGetEpStatus+0xac>
40020548:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4002054c:	e2000004 	and	r0, r0, #4
40020550:	e58d0000 	str	r0, [sp]
40020554:	ea00000a 	b	40020584 <CyU3PUsbGetEpStatus+0x78>
40020558:	e3140080 	tst	r4, #128	; 0x80
4002055c:	0a000004 	beq	40020574 <CyU3PUsbGetEpStatus+0x68>
40020560:	e59f0054 	ldr	r0, [pc, #84]	; 400205bc <CyU3PUsbGetEpStatus+0xb0>
40020564:	e7900106 	ldr	r0, [r0, r6, lsl #2]
40020568:	e2000801 	and	r0, r0, #65536	; 0x10000
4002056c:	e58d0000 	str	r0, [sp]
40020570:	ea000003 	b	40020584 <CyU3PUsbGetEpStatus+0x78>
40020574:	e59f0044 	ldr	r0, [pc, #68]	; 400205c0 <CyU3PUsbGetEpStatus+0xb4>
40020578:	e7900106 	ldr	r0, [r0, r6, lsl #2]
4002057c:	e2000801 	and	r0, r0, #65536	; 0x10000
40020580:	e58d0000 	str	r0, [sp]
40020584:	e59d0000 	ldr	r0, [sp]
40020588:	e3500000 	cmp	r0, #0
4002058c:	0a000001 	beq	40020598 <CyU3PUsbGetEpStatus+0x8c>
40020590:	e3a00001 	mov	r0, #1
40020594:	e58d0000 	str	r0, [sp]
40020598:	e1a0100d 	mov	r1, sp
4002059c:	e3a00002 	mov	r0, #2
400205a0:	ebfff48f 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
400205a4:	e1a05000 	mov	r5, r0
400205a8:	e1a00005 	mov	r0, r5
400205ac:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
400205b0:	40031d40 	.word	0x40031d40
400205b4:	e0033500 	.word	0xe0033500
400205b8:	e0033600 	.word	0xe0033600
400205bc:	e0031418 	.word	0xe0031418
400205c0:	e0031498 	.word	0xe0031498

Disassembly of section i.CyU3PUsbHandleClearFeature:

400205c4 <CyU3PUsbHandleClearFeature>:
400205c4:	e92d4070 	push	{r4, r5, r6, lr}
400205c8:	e1a04000 	mov	r4, r0
400205cc:	e3a05000 	mov	r5, #0
400205d0:	e3540001 	cmp	r4, #1
400205d4:	0a000006 	beq	400205f4 <CyU3PUsbHandleClearFeature+0x30>
400205d8:	e3540002 	cmp	r4, #2
400205dc:	0a00000b 	beq	40020610 <CyU3PUsbHandleClearFeature+0x4c>
400205e0:	e3540030 	cmp	r4, #48	; 0x30
400205e4:	0a00000f 	beq	40020628 <CyU3PUsbHandleClearFeature+0x64>
400205e8:	e3540031 	cmp	r4, #49	; 0x31
400205ec:	1a00002d 	bne	400206a8 <CyU3PUsbHandleClearFeature+0xe4>
400205f0:	ea00001c 	b	40020668 <CyU3PUsbHandleClearFeature+0xa4>
400205f4:	e1a00000 	nop			; (mov r0, r0)
400205f8:	e59f00d8 	ldr	r0, [pc, #216]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
400205fc:	e5d00006 	ldrb	r0, [r0, #6]
40020600:	e3c00002 	bic	r0, r0, #2
40020604:	e59f10cc 	ldr	r1, [pc, #204]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020608:	e5c10006 	strb	r0, [r1, #6]
4002060c:	e1a00000 	nop			; (mov r0, r0)
40020610:	e59f00c0 	ldr	r0, [pc, #192]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020614:	e5d00009 	ldrb	r0, [r0, #9]
40020618:	e3500003 	cmp	r0, #3
4002061c:	0a000000 	beq	40020624 <CyU3PUsbHandleClearFeature+0x60>
40020620:	e3a05001 	mov	r5, #1
40020624:	ea000021 	b	400206b0 <CyU3PUsbHandleClearFeature+0xec>
40020628:	e1a00000 	nop			; (mov r0, r0)
4002062c:	e59f00a4 	ldr	r0, [pc, #164]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020630:	e5d00009 	ldrb	r0, [r0, #9]
40020634:	e3500003 	cmp	r0, #3
40020638:	1a000009 	bne	40020664 <CyU3PUsbHandleClearFeature+0xa0>
4002063c:	e59f0094 	ldr	r0, [pc, #148]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020640:	e5d00008 	ldrb	r0, [r0, #8]
40020644:	e3500006 	cmp	r0, #6
40020648:	1a000005 	bne	40020664 <CyU3PUsbHandleClearFeature+0xa0>
4002064c:	e59f0084 	ldr	r0, [pc, #132]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020650:	e5d00006 	ldrb	r0, [r0, #6]
40020654:	e3c00004 	bic	r0, r0, #4
40020658:	e59f1078 	ldr	r1, [pc, #120]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
4002065c:	e5c10006 	strb	r0, [r1, #6]
40020660:	e3a05001 	mov	r5, #1
40020664:	ea000011 	b	400206b0 <CyU3PUsbHandleClearFeature+0xec>
40020668:	e1a00000 	nop			; (mov r0, r0)
4002066c:	e59f0064 	ldr	r0, [pc, #100]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020670:	e5d00009 	ldrb	r0, [r0, #9]
40020674:	e3500003 	cmp	r0, #3
40020678:	1a000009 	bne	400206a4 <CyU3PUsbHandleClearFeature+0xe0>
4002067c:	e59f0054 	ldr	r0, [pc, #84]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020680:	e5d00008 	ldrb	r0, [r0, #8]
40020684:	e3500006 	cmp	r0, #6
40020688:	1a000005 	bne	400206a4 <CyU3PUsbHandleClearFeature+0xe0>
4002068c:	e59f0044 	ldr	r0, [pc, #68]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
40020690:	e5d00006 	ldrb	r0, [r0, #6]
40020694:	e3c00008 	bic	r0, r0, #8
40020698:	e59f1038 	ldr	r1, [pc, #56]	; 400206d8 <CyU3PUsbHandleClearFeature+0x114>
4002069c:	e5c10006 	strb	r0, [r1, #6]
400206a0:	e3a05001 	mov	r5, #1
400206a4:	ea000001 	b	400206b0 <CyU3PUsbHandleClearFeature+0xec>
400206a8:	e1a00000 	nop			; (mov r0, r0)
400206ac:	e1a00000 	nop			; (mov r0, r0)
400206b0:	e1a00000 	nop			; (mov r0, r0)
400206b4:	e3550000 	cmp	r5, #0
400206b8:	0a000001 	beq	400206c4 <CyU3PUsbHandleClearFeature+0x100>
400206bc:	ebfff0af 	bl	4001c980 <CyU3PUsbAckSetup>
400206c0:	ea000003 	b	400206d4 <CyU3PUsbHandleClearFeature+0x110>
400206c4:	e3a02000 	mov	r2, #0
400206c8:	e3a01001 	mov	r1, #1
400206cc:	e1a00002 	mov	r0, r2
400206d0:	ebfff66e 	bl	4001e090 <CyU3PUsbStall>
400206d4:	e8bd8070 	pop	{r4, r5, r6, pc}
400206d8:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleEvents:

400206dc <CyU3PUsbHandleEvents>:
400206dc:	e92d4070 	push	{r4, r5, r6, lr}
400206e0:	e1a04000 	mov	r4, r0
400206e4:	e3140040 	tst	r4, #64	; 0x40
400206e8:	0a000000 	beq	400206f0 <CyU3PUsbHandleEvents+0x14>
400206ec:	ebfff8cc 	bl	4001ea24 <CyU3PUibDevCtrlEvtHandler>
400206f0:	e3140020 	tst	r4, #32
400206f4:	0a000000 	beq	400206fc <CyU3PUsbHandleEvents+0x20>
400206f8:	ebfff942 	bl	4001ec08 <CyU3PUibEPEvtHandler>
400206fc:	e3140080 	tst	r4, #128	; 0x80
40020700:	0a000000 	beq	40020708 <CyU3PUsbHandleEvents+0x2c>
40020704:	ebfffa15 	bl	4001ef60 <CyU3PUibLnkIntrEvtHandler>
40020708:	e3140c01 	tst	r4, #256	; 0x100
4002070c:	0a000000 	beq	40020714 <CyU3PUsbHandleEvents+0x38>
40020710:	ebfffb32 	bl	4001f3e0 <CyU3PUibProtIntrEvtHandler>
40020714:	e3140c02 	tst	r4, #512	; 0x200
40020718:	0a000000 	beq	40020720 <CyU3PUsbHandleEvents+0x44>
4002071c:	ebfffa37 	bl	4001f000 <CyU3PUibProtEpIntrEvtHandler>
40020720:	e3140b01 	tst	r4, #1024	; 0x400
40020724:	0a000006 	beq	40020744 <CyU3PUsbHandleEvents+0x68>
40020728:	e59f0378 	ldr	r0, [pc, #888]	; 40020aa8 <CyU3PUsbHandleEvents+0x3cc>
4002072c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40020730:	e3500b02 	cmp	r0, #2048	; 0x800
40020734:	1a000001 	bne	40020740 <CyU3PUsbHandleEvents+0x64>
40020738:	e3a00ffa 	mov	r0, #1000	; 0x3e8
4002073c:	ebffa14d 	bl	40008c78 <_tx_thread_sleep>
40020740:	ebfffd4a 	bl	4001fc70 <CyU3PUibVbusChangeHandler>
40020744:	e3140b02 	tst	r4, #2048	; 0x800
40020748:	0a000000 	beq	40020750 <CyU3PUsbHandleEvents+0x74>
4002074c:	eb0003ae 	bl	4002160c <CyU3PUsbSendCompliancePatterns>
40020750:	e3140a01 	tst	r4, #4096	; 0x1000
40020754:	0a00000c 	beq	4002078c <CyU3PUsbHandleEvents+0xb0>
40020758:	e59f034c 	ldr	r0, [pc, #844]	; 40020aac <CyU3PUsbHandleEvents+0x3d0>
4002075c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020760:	e3100902 	tst	r0, #32768	; 0x8000
40020764:	0a000008 	beq	4002078c <CyU3PUsbHandleEvents+0xb0>
40020768:	e3a00001 	mov	r0, #1
4002076c:	e59f133c 	ldr	r1, [pc, #828]	; 40020ab0 <CyU3PUsbHandleEvents+0x3d4>
40020770:	e5810000 	str	r0, [r1]
40020774:	e59f1338 	ldr	r1, [pc, #824]	; 40020ab4 <CyU3PUsbHandleEvents+0x3d8>
40020778:	e5810000 	str	r0, [r1]
4002077c:	ebfffdb3 	bl	4001fe50 <CyU3PUsbCheckUsb3Disconnect>
40020780:	e3a00000 	mov	r0, #0
40020784:	e59f1328 	ldr	r1, [pc, #808]	; 40020ab4 <CyU3PUsbHandleEvents+0x3d8>
40020788:	e5810000 	str	r0, [r1]
4002078c:	e3140301 	tst	r4, #67108864	; 0x4000000
40020790:	0a000013 	beq	400207e4 <CyU3PUsbHandleEvents+0x108>
40020794:	e59f031c 	ldr	r0, [pc, #796]	; 40020ab8 <CyU3PUsbHandleEvents+0x3dc>
40020798:	e5900000 	ldr	r0, [r0]
4002079c:	e3500000 	cmp	r0, #0
400207a0:	0a000008 	beq	400207c8 <CyU3PUsbHandleEvents+0xec>
400207a4:	e59f0300 	ldr	r0, [pc, #768]	; 40020aac <CyU3PUsbHandleEvents+0x3d0>
400207a8:	e5900c00 	ldr	r0, [r0, #3072]	; 0xc00
400207ac:	e200070f 	and	r0, r0, #3932160	; 0x3c0000
400207b0:	e3a02080 	mov	r2, #128	; 0x80
400207b4:	e1821920 	orr	r1, r2, r0, lsr #18
400207b8:	e3a00012 	mov	r0, #18
400207bc:	e59f22f4 	ldr	r2, [pc, #756]	; 40020ab8 <CyU3PUsbHandleEvents+0x3dc>
400207c0:	e5922000 	ldr	r2, [r2]
400207c4:	e12fff32 	blx	r2
400207c8:	e3a00b02 	mov	r0, #2048	; 0x800
400207cc:	e59f12e8 	ldr	r1, [pc, #744]	; 40020abc <CyU3PUsbHandleEvents+0x3e0>
400207d0:	e5810000 	str	r0, [r1]
400207d4:	e1c10000 	bic	r0, r1, r0
400207d8:	e5900004 	ldr	r0, [r0, #4]
400207dc:	e3800b02 	orr	r0, r0, #2048	; 0x800
400207e0:	e5810004 	str	r0, [r1, #4]
400207e4:	e3140901 	tst	r4, #16384	; 0x4000
400207e8:	0a000008 	beq	40020810 <CyU3PUsbHandleEvents+0x134>
400207ec:	e59f02c4 	ldr	r0, [pc, #708]	; 40020ab8 <CyU3PUsbHandleEvents+0x3dc>
400207f0:	e5900000 	ldr	r0, [r0]
400207f4:	e3500000 	cmp	r0, #0
400207f8:	0a000004 	beq	40020810 <CyU3PUsbHandleEvents+0x134>
400207fc:	e3a01000 	mov	r1, #0
40020800:	e3a00003 	mov	r0, #3
40020804:	e59f22ac 	ldr	r2, [pc, #684]	; 40020ab8 <CyU3PUsbHandleEvents+0x3dc>
40020808:	e5922000 	ldr	r2, [r2]
4002080c:	e12fff32 	blx	r2
40020810:	e3140a02 	tst	r4, #8192	; 0x2000
40020814:	0a000008 	beq	4002083c <CyU3PUsbHandleEvents+0x160>
40020818:	e59f0298 	ldr	r0, [pc, #664]	; 40020ab8 <CyU3PUsbHandleEvents+0x3dc>
4002081c:	e5900000 	ldr	r0, [r0]
40020820:	e3500000 	cmp	r0, #0
40020824:	0a000004 	beq	4002083c <CyU3PUsbHandleEvents+0x160>
40020828:	e3a01000 	mov	r1, #0
4002082c:	e3a00002 	mov	r0, #2
40020830:	e59f2280 	ldr	r2, [pc, #640]	; 40020ab8 <CyU3PUsbHandleEvents+0x3dc>
40020834:	e5922000 	ldr	r2, [r2]
40020838:	e12fff32 	blx	r2
4002083c:	e3140902 	tst	r4, #32768	; 0x8000
40020840:	0a000022 	beq	400208d0 <CyU3PUsbHandleEvents+0x1f4>
40020844:	e59f0274 	ldr	r0, [pc, #628]	; 40020ac0 <CyU3PUsbHandleEvents+0x3e4>
40020848:	e5900000 	ldr	r0, [r0]
4002084c:	e3500000 	cmp	r0, #0
40020850:	0a00001e 	beq	400208d0 <CyU3PUsbHandleEvents+0x1f4>
40020854:	eb000690 	bl	4002229c <CyU3PVicDisableAllInterrupts>
40020858:	e1a06000 	mov	r6, r0
4002085c:	e3a00001 	mov	r0, #1
40020860:	ebffcc13 	bl	400138b4 <CyU3PBusyWait>
40020864:	e59f0258 	ldr	r0, [pc, #600]	; 40020ac4 <CyU3PUsbHandleEvents+0x3e8>
40020868:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
4002086c:	e3c00803 	bic	r0, r0, #196608	; 0x30000
40020870:	e59f124c 	ldr	r1, [pc, #588]	; 40020ac4 <CyU3PUsbHandleEvents+0x3e8>
40020874:	e5810400 	str	r0, [r1, #1024]	; 0x400
40020878:	e1a00006 	mov	r0, r6
4002087c:	eb000694 	bl	400222d4 <CyU3PVicEnableInterrupts>
40020880:	e3a00001 	mov	r0, #1
40020884:	ebffa0fb 	bl	40008c78 <_tx_thread_sleep>
40020888:	e3a00000 	mov	r0, #0
4002088c:	e59f122c 	ldr	r1, [pc, #556]	; 40020ac0 <CyU3PUsbHandleEvents+0x3e4>
40020890:	e5810000 	str	r0, [r1]
40020894:	e59f0228 	ldr	r0, [pc, #552]	; 40020ac4 <CyU3PUsbHandleEvents+0x3e8>
40020898:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
4002089c:	e3100c02 	tst	r0, #512	; 0x200
400208a0:	1a00000a 	bne	400208d0 <CyU3PUsbHandleEvents+0x1f4>
400208a4:	e59f01fc 	ldr	r0, [pc, #508]	; 40020aa8 <CyU3PUsbHandleEvents+0x3cc>
400208a8:	e5900044 	ldr	r0, [r0, #68]	; 0x44
400208ac:	e3500000 	cmp	r0, #0
400208b0:	1a000006 	bne	400208d0 <CyU3PUsbHandleEvents+0x1f4>
400208b4:	e59f01ec 	ldr	r0, [pc, #492]	; 40020aa8 <CyU3PUsbHandleEvents+0x3cc>
400208b8:	e590006c 	ldr	r0, [r0, #108]	; 0x6c
400208bc:	e3500000 	cmp	r0, #0
400208c0:	1a000002 	bne	400208d0 <CyU3PUsbHandleEvents+0x1f4>
400208c4:	e3a00303 	mov	r0, #201326592	; 0xc000000
400208c8:	e59f11f4 	ldr	r1, [pc, #500]	; 40020ac4 <CyU3PUsbHandleEvents+0x3e8>
400208cc:	e5810050 	str	r0, [r1, #80]	; 0x50
400208d0:	e3140401 	tst	r4, #16777216	; 0x1000000
400208d4:	0a000020 	beq	4002095c <CyU3PUsbHandleEvents+0x280>
400208d8:	e59f01e4 	ldr	r0, [pc, #484]	; 40020ac4 <CyU3PUsbHandleEvents+0x3e8>
400208dc:	e5900054 	ldr	r0, [r0, #84]	; 0x54
400208e0:	e200503f 	and	r5, r0, #63	; 0x3f
400208e4:	e3550011 	cmp	r5, #17
400208e8:	0a000001 	beq	400208f4 <CyU3PUsbHandleEvents+0x218>
400208ec:	e3550012 	cmp	r5, #18
400208f0:	1a000018 	bne	40020958 <CyU3PUsbHandleEvents+0x27c>
400208f4:	e59f01cc 	ldr	r0, [pc, #460]	; 40020ac8 <CyU3PUsbHandleEvents+0x3ec>
400208f8:	e5900000 	ldr	r0, [r0]
400208fc:	e3500000 	cmp	r0, #0
40020900:	0a000014 	beq	40020958 <CyU3PUsbHandleEvents+0x27c>
40020904:	e3a00005 	mov	r0, #5
40020908:	ebffcbe9 	bl	400138b4 <CyU3PBusyWait>
4002090c:	e59f01b0 	ldr	r0, [pc, #432]	; 40020ac4 <CyU3PUsbHandleEvents+0x3e8>
40020910:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020914:	e200503f 	and	r5, r0, #63	; 0x3f
40020918:	e3550011 	cmp	r5, #17
4002091c:	0a000001 	beq	40020928 <CyU3PUsbHandleEvents+0x24c>
40020920:	e3550012 	cmp	r5, #18
40020924:	1a000001 	bne	40020930 <CyU3PUsbHandleEvents+0x254>
40020928:	e3a00000 	mov	r0, #0
4002092c:	ebfff582 	bl	4001df3c <CyU3PUsbSetLinkPowerState>
40020930:	e3a00001 	mov	r0, #1
40020934:	ebffa0cf 	bl	40008c78 <_tx_thread_sleep>
40020938:	e59f0188 	ldr	r0, [pc, #392]	; 40020ac8 <CyU3PUsbHandleEvents+0x3ec>
4002093c:	e5900000 	ldr	r0, [r0]
40020940:	e3500000 	cmp	r0, #0
40020944:	0a000003 	beq	40020958 <CyU3PUsbHandleEvents+0x27c>
40020948:	e3a02000 	mov	r2, #0
4002094c:	e3a01401 	mov	r1, #16777216	; 0x1000000
40020950:	e59f0174 	ldr	r0, [pc, #372]	; 40020acc <CyU3PUsbHandleEvents+0x3f0>
40020954:	ebffa5bf 	bl	4000a058 <_txe_event_flags_set>
40020958:	e1a00000 	nop			; (mov r0, r0)
4002095c:	e3140402 	tst	r4, #33554432	; 0x2000000
40020960:	0a000019 	beq	400209cc <CyU3PUsbHandleEvents+0x2f0>
40020964:	e3a00052 	mov	r0, #82	; 0x52
40020968:	ebfffd1d 	bl	4001fde4 <CyU3PUsbAddToEventLog>
4002096c:	e59f1134 	ldr	r1, [pc, #308]	; 40020aa8 <CyU3PUsbHandleEvents+0x3cc>
40020970:	e5d11009 	ldrb	r1, [r1, #9]
40020974:	e3510003 	cmp	r1, #3
40020978:	1a000001 	bne	40020984 <CyU3PUsbHandleEvents+0x2a8>
4002097c:	e3a01001 	mov	r1, #1
40020980:	ea000000 	b	40020988 <CyU3PUsbHandleEvents+0x2ac>
40020984:	e3a01000 	mov	r1, #0
40020988:	e1a00001 	mov	r0, r1
4002098c:	ebfff21a 	bl	4001d1fc <CyU3PUsbPhyDisable>
40020990:	e3a00001 	mov	r0, #1
40020994:	ebffa0b7 	bl	40008c78 <_tx_thread_sleep>
40020998:	e59f0108 	ldr	r0, [pc, #264]	; 40020aa8 <CyU3PUsbHandleEvents+0x3cc>
4002099c:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400209a0:	e3500000 	cmp	r0, #0
400209a4:	0a000005 	beq	400209c0 <CyU3PUsbHandleEvents+0x2e4>
400209a8:	e59f0120 	ldr	r0, [pc, #288]	; 40020ad0 <CyU3PUsbHandleEvents+0x3f4>
400209ac:	e5900030 	ldr	r0, [r0, #48]	; 0x30
400209b0:	e59f10f0 	ldr	r1, [pc, #240]	; 40020aa8 <CyU3PUsbHandleEvents+0x3cc>
400209b4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
400209b8:	e1100001 	tst	r0, r1
400209bc:	0a000002 	beq	400209cc <CyU3PUsbHandleEvents+0x2f0>
400209c0:	e59f10e0 	ldr	r1, [pc, #224]	; 40020aa8 <CyU3PUsbHandleEvents+0x3cc>
400209c4:	e5910024 	ldr	r0, [r1, #36]	; 0x24
400209c8:	ebfff281 	bl	4001d3d4 <CyU3PUsbPhyEnable>
400209cc:	e3140801 	tst	r4, #65536	; 0x10000
400209d0:	0a000006 	beq	400209f0 <CyU3PUsbHandleEvents+0x314>
400209d4:	e59f00f8 	ldr	r0, [pc, #248]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
400209d8:	e5900000 	ldr	r0, [r0]
400209dc:	e3500000 	cmp	r0, #0
400209e0:	0a000002 	beq	400209f0 <CyU3PUsbHandleEvents+0x314>
400209e4:	e59f10e8 	ldr	r1, [pc, #232]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
400209e8:	e5910000 	ldr	r0, [r1]
400209ec:	e12fff30 	blx	r0
400209f0:	e3140802 	tst	r4, #131072	; 0x20000
400209f4:	0a000006 	beq	40020a14 <CyU3PUsbHandleEvents+0x338>
400209f8:	e59f00d4 	ldr	r0, [pc, #212]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
400209fc:	e5900004 	ldr	r0, [r0, #4]
40020a00:	e3500000 	cmp	r0, #0
40020a04:	0a000002 	beq	40020a14 <CyU3PUsbHandleEvents+0x338>
40020a08:	e59f10c4 	ldr	r1, [pc, #196]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a0c:	e5910004 	ldr	r0, [r1, #4]
40020a10:	e12fff30 	blx	r0
40020a14:	e3140701 	tst	r4, #262144	; 0x40000
40020a18:	0a000006 	beq	40020a38 <CyU3PUsbHandleEvents+0x35c>
40020a1c:	e59f00b0 	ldr	r0, [pc, #176]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a20:	e5900008 	ldr	r0, [r0, #8]
40020a24:	e3500000 	cmp	r0, #0
40020a28:	0a000002 	beq	40020a38 <CyU3PUsbHandleEvents+0x35c>
40020a2c:	e59f10a0 	ldr	r1, [pc, #160]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a30:	e5910008 	ldr	r0, [r1, #8]
40020a34:	e12fff30 	blx	r0
40020a38:	e3140702 	tst	r4, #524288	; 0x80000
40020a3c:	0a000006 	beq	40020a5c <CyU3PUsbHandleEvents+0x380>
40020a40:	e59f008c 	ldr	r0, [pc, #140]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a44:	e590000c 	ldr	r0, [r0, #12]
40020a48:	e3500000 	cmp	r0, #0
40020a4c:	0a000002 	beq	40020a5c <CyU3PUsbHandleEvents+0x380>
40020a50:	e59f107c 	ldr	r1, [pc, #124]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a54:	e591000c 	ldr	r0, [r1, #12]
40020a58:	e12fff30 	blx	r0
40020a5c:	e3140601 	tst	r4, #1048576	; 0x100000
40020a60:	0a000006 	beq	40020a80 <CyU3PUsbHandleEvents+0x3a4>
40020a64:	e59f0068 	ldr	r0, [pc, #104]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a68:	e5900010 	ldr	r0, [r0, #16]
40020a6c:	e3500000 	cmp	r0, #0
40020a70:	0a000002 	beq	40020a80 <CyU3PUsbHandleEvents+0x3a4>
40020a74:	e59f1058 	ldr	r1, [pc, #88]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a78:	e5910010 	ldr	r0, [r1, #16]
40020a7c:	e12fff30 	blx	r0
40020a80:	e3140602 	tst	r4, #2097152	; 0x200000
40020a84:	0a000006 	beq	40020aa4 <CyU3PUsbHandleEvents+0x3c8>
40020a88:	e59f0044 	ldr	r0, [pc, #68]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a8c:	e5900014 	ldr	r0, [r0, #20]
40020a90:	e3500000 	cmp	r0, #0
40020a94:	0a000002 	beq	40020aa4 <CyU3PUsbHandleEvents+0x3c8>
40020a98:	e59f1034 	ldr	r1, [pc, #52]	; 40020ad4 <CyU3PUsbHandleEvents+0x3f8>
40020a9c:	e5910014 	ldr	r0, [r1, #20]
40020aa0:	e12fff30 	blx	r0
40020aa4:	e8bd8070 	pop	{r4, r5, r6, pc}
40020aa8:	40031d40 	.word	0x40031d40
40020aac:	e0031000 	.word	0xe0031000
40020ab0:	40030d64 	.word	0x40030d64
40020ab4:	40030d68 	.word	0x40030d68
40020ab8:	40030d9c 	.word	0x40030d9c
40020abc:	e0030000 	.word	0xe0030000
40020ac0:	40030d6c 	.word	0x40030d6c
40020ac4:	e0033000 	.word	0xe0033000
40020ac8:	40030db4 	.word	0x40030db4
40020acc:	40031eb8 	.word	0x40031eb8
40020ad0:	e0051000 	.word	0xe0051000
40020ad4:	40031dbc 	.word	0x40031dbc

Disassembly of section i.CyU3PUsbHandleGetStatus:

40020ad8 <CyU3PUsbHandleGetStatus>:
40020ad8:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}
40020adc:	e1a04000 	mov	r4, r0
40020ae0:	e1a05001 	mov	r5, r1
40020ae4:	e3a07000 	mov	r7, #0
40020ae8:	e3a00000 	mov	r0, #0
40020aec:	e58d0000 	str	r0, [sp]
40020af0:	e3540000 	cmp	r4, #0
40020af4:	0a000004 	beq	40020b0c <CyU3PUsbHandleGetStatus+0x34>
40020af8:	e3540001 	cmp	r4, #1
40020afc:	0a00001e 	beq	40020b7c <CyU3PUsbHandleGetStatus+0xa4>
40020b00:	e3540002 	cmp	r4, #2
40020b04:	1a00002b 	bne	40020bb8 <CyU3PUsbHandleGetStatus+0xe0>
40020b08:	ea000023 	b	40020b9c <CyU3PUsbHandleGetStatus+0xc4>
40020b0c:	e1a00000 	nop			; (mov r0, r0)
40020b10:	e3550a0f 	cmp	r5, #61440	; 0xf000
40020b14:	1a00000d 	bne	40020b50 <CyU3PUsbHandleGetStatus+0x78>
40020b18:	ebffed1c 	bl	4001bf90 <CyU3POtgGetMode>
40020b1c:	e3500002 	cmp	r0, #2
40020b20:	1a000008 	bne	40020b48 <CyU3PUsbHandleGetStatus+0x70>
40020b24:	e59f00a0 	ldr	r0, [pc, #160]	; 40020bcc <CyU3PUsbHandleGetStatus+0xf4>
40020b28:	e5900034 	ldr	r0, [r0, #52]	; 0x34
40020b2c:	e3500000 	cmp	r0, #0
40020b30:	0a000001 	beq	40020b3c <CyU3PUsbHandleGetStatus+0x64>
40020b34:	e3a00001 	mov	r0, #1
40020b38:	ea000000 	b	40020b40 <CyU3PUsbHandleGetStatus+0x68>
40020b3c:	e3a00000 	mov	r0, #0
40020b40:	e5cd0000 	strb	r0, [sp]
40020b44:	ea00000b 	b	40020b78 <CyU3PUsbHandleGetStatus+0xa0>
40020b48:	e3a00000 	mov	r0, #0
40020b4c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}
40020b50:	e59f0074 	ldr	r0, [pc, #116]	; 40020bcc <CyU3PUsbHandleGetStatus+0xf4>
40020b54:	e5d00006 	ldrb	r0, [r0, #6]
40020b58:	e5cd0000 	strb	r0, [sp]
40020b5c:	e59f0068 	ldr	r0, [pc, #104]	; 40020bcc <CyU3PUsbHandleGetStatus+0xf4>
40020b60:	e5d00009 	ldrb	r0, [r0, #9]
40020b64:	e3500003 	cmp	r0, #3
40020b68:	1a000002 	bne	40020b78 <CyU3PUsbHandleGetStatus+0xa0>
40020b6c:	e5dd0000 	ldrb	r0, [sp]
40020b70:	e3c00002 	bic	r0, r0, #2
40020b74:	e5cd0000 	strb	r0, [sp]
40020b78:	e1a00000 	nop			; (mov r0, r0)
40020b7c:	e1a0100d 	mov	r1, sp
40020b80:	e3a00002 	mov	r0, #2
40020b84:	ebfff316 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
40020b88:	e1a06000 	mov	r6, r0
40020b8c:	e3560000 	cmp	r6, #0
40020b90:	1a000000 	bne	40020b98 <CyU3PUsbHandleGetStatus+0xc0>
40020b94:	e3a07001 	mov	r7, #1
40020b98:	ea000008 	b	40020bc0 <CyU3PUsbHandleGetStatus+0xe8>
40020b9c:	e1a00000 	nop			; (mov r0, r0)
40020ba0:	e20500ff 	and	r0, r5, #255	; 0xff
40020ba4:	ebfffe58 	bl	4002050c <CyU3PUsbGetEpStatus>
40020ba8:	e3500000 	cmp	r0, #0
40020bac:	1a000000 	bne	40020bb4 <CyU3PUsbHandleGetStatus+0xdc>
40020bb0:	e3a07001 	mov	r7, #1
40020bb4:	ea000001 	b	40020bc0 <CyU3PUsbHandleGetStatus+0xe8>
40020bb8:	e1a00000 	nop			; (mov r0, r0)
40020bbc:	e1a00000 	nop			; (mov r0, r0)
40020bc0:	e1a00000 	nop			; (mov r0, r0)
40020bc4:	e1a00007 	mov	r0, r7
40020bc8:	eaffffdf 	b	40020b4c <CyU3PUsbHandleGetStatus+0x74>
40020bcc:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbHandleSetFeature:

40020bd0 <CyU3PUsbHandleSetFeature>:
40020bd0:	e92d4070 	push	{r4, r5, r6, lr}
40020bd4:	e1a04000 	mov	r4, r0
40020bd8:	e3a05000 	mov	r5, #0
40020bdc:	e3540001 	cmp	r4, #1
40020be0:	0a000006 	beq	40020c00 <CyU3PUsbHandleSetFeature+0x30>
40020be4:	e3540002 	cmp	r4, #2
40020be8:	0a00000b 	beq	40020c1c <CyU3PUsbHandleSetFeature+0x4c>
40020bec:	e3540030 	cmp	r4, #48	; 0x30
40020bf0:	0a00000e 	beq	40020c30 <CyU3PUsbHandleSetFeature+0x60>
40020bf4:	e3540031 	cmp	r4, #49	; 0x31
40020bf8:	1a00002a 	bne	40020ca8 <CyU3PUsbHandleSetFeature+0xd8>
40020bfc:	ea00001a 	b	40020c6c <CyU3PUsbHandleSetFeature+0x9c>
40020c00:	e1a00000 	nop			; (mov r0, r0)
40020c04:	e59f00cc 	ldr	r0, [pc, #204]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c08:	e5d00006 	ldrb	r0, [r0, #6]
40020c0c:	e3800002 	orr	r0, r0, #2
40020c10:	e59f10c0 	ldr	r1, [pc, #192]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c14:	e5c10006 	strb	r0, [r1, #6]
40020c18:	e1a00000 	nop			; (mov r0, r0)
40020c1c:	ebfff0f4 	bl	4001cff4 <CyU3PUsbGetSpeed>
40020c20:	e3500003 	cmp	r0, #3
40020c24:	0a000000 	beq	40020c2c <CyU3PUsbHandleSetFeature+0x5c>
40020c28:	e3a05001 	mov	r5, #1
40020c2c:	ea00001f 	b	40020cb0 <CyU3PUsbHandleSetFeature+0xe0>
40020c30:	e1a00000 	nop			; (mov r0, r0)
40020c34:	ebfff0ee 	bl	4001cff4 <CyU3PUsbGetSpeed>
40020c38:	e3500003 	cmp	r0, #3
40020c3c:	1a000009 	bne	40020c68 <CyU3PUsbHandleSetFeature+0x98>
40020c40:	e59f0090 	ldr	r0, [pc, #144]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c44:	e5d00008 	ldrb	r0, [r0, #8]
40020c48:	e3500006 	cmp	r0, #6
40020c4c:	1a000005 	bne	40020c68 <CyU3PUsbHandleSetFeature+0x98>
40020c50:	e59f0080 	ldr	r0, [pc, #128]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c54:	e5d00006 	ldrb	r0, [r0, #6]
40020c58:	e3800004 	orr	r0, r0, #4
40020c5c:	e59f1074 	ldr	r1, [pc, #116]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c60:	e5c10006 	strb	r0, [r1, #6]
40020c64:	e3a05001 	mov	r5, #1
40020c68:	ea000010 	b	40020cb0 <CyU3PUsbHandleSetFeature+0xe0>
40020c6c:	e1a00000 	nop			; (mov r0, r0)
40020c70:	ebfff0df 	bl	4001cff4 <CyU3PUsbGetSpeed>
40020c74:	e3500003 	cmp	r0, #3
40020c78:	1a000009 	bne	40020ca4 <CyU3PUsbHandleSetFeature+0xd4>
40020c7c:	e59f0054 	ldr	r0, [pc, #84]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c80:	e5d00008 	ldrb	r0, [r0, #8]
40020c84:	e3500006 	cmp	r0, #6
40020c88:	1a000005 	bne	40020ca4 <CyU3PUsbHandleSetFeature+0xd4>
40020c8c:	e59f0044 	ldr	r0, [pc, #68]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c90:	e5d00006 	ldrb	r0, [r0, #6]
40020c94:	e3800008 	orr	r0, r0, #8
40020c98:	e59f1038 	ldr	r1, [pc, #56]	; 40020cd8 <CyU3PUsbHandleSetFeature+0x108>
40020c9c:	e5c10006 	strb	r0, [r1, #6]
40020ca0:	e3a05001 	mov	r5, #1
40020ca4:	ea000001 	b	40020cb0 <CyU3PUsbHandleSetFeature+0xe0>
40020ca8:	e1a00000 	nop			; (mov r0, r0)
40020cac:	e1a00000 	nop			; (mov r0, r0)
40020cb0:	e1a00000 	nop			; (mov r0, r0)
40020cb4:	e3550000 	cmp	r5, #0
40020cb8:	0a000001 	beq	40020cc4 <CyU3PUsbHandleSetFeature+0xf4>
40020cbc:	ebffef2f 	bl	4001c980 <CyU3PUsbAckSetup>
40020cc0:	ea000003 	b	40020cd4 <CyU3PUsbHandleSetFeature+0x104>
40020cc4:	e3a02000 	mov	r2, #0
40020cc8:	e3a01001 	mov	r1, #1
40020ccc:	e1a00002 	mov	r0, r2
40020cd0:	ebfff4ee 	bl	4001e090 <CyU3PUsbStall>
40020cd4:	e8bd8070 	pop	{r4, r5, r6, pc}
40020cd8:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbReEnableUsb3:

40020cdc <CyU3PUsbReEnableUsb3>:
40020cdc:	e92d4010 	push	{r4, lr}
40020ce0:	e3a00051 	mov	r0, #81	; 0x51
40020ce4:	ebfffc3e 	bl	4001fde4 <CyU3PUsbAddToEventLog>
40020ce8:	e59f018c 	ldr	r0, [pc, #396]	; 40020e7c <CyU3PUsbReEnableUsb3+0x1a0>
40020cec:	e5900004 	ldr	r0, [r0, #4]
40020cf0:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
40020cf4:	e59f1180 	ldr	r1, [pc, #384]	; 40020e7c <CyU3PUsbReEnableUsb3+0x1a0>
40020cf8:	e5810004 	str	r0, [r1, #4]
40020cfc:	e3e00000 	mvn	r0, #0
40020d00:	e2811a03 	add	r1, r1, #12288	; 0x3000
40020d04:	e5810004 	str	r0, [r1, #4]
40020d08:	e59f0170 	ldr	r0, [pc, #368]	; 40020e80 <CyU3PUsbReEnableUsb3+0x1a4>
40020d0c:	e5810008 	str	r0, [r1, #8]
40020d10:	e3e00000 	mvn	r0, #0
40020d14:	e5810404 	str	r0, [r1, #1028]	; 0x404
40020d18:	e59f0164 	ldr	r0, [pc, #356]	; 40020e84 <CyU3PUsbReEnableUsb3+0x1a8>
40020d1c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d20:	e59f0160 	ldr	r0, [pc, #352]	; 40020e88 <CyU3PUsbReEnableUsb3+0x1ac>
40020d24:	e590003c 	ldr	r0, [r0, #60]	; 0x3c
40020d28:	e3500000 	cmp	r0, #0
40020d2c:	0a000003 	beq	40020d40 <CyU3PUsbReEnableUsb3+0x64>
40020d30:	e1a00001 	mov	r0, r1
40020d34:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40020d38:	e3800c01 	orr	r0, r0, #256	; 0x100
40020d3c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40020d40:	e3a00000 	mov	r0, #0
40020d44:	e59f113c 	ldr	r1, [pc, #316]	; 40020e88 <CyU3PUsbReEnableUsb3+0x1ac>
40020d48:	e5810044 	str	r0, [r1, #68]	; 0x44
40020d4c:	e59f0138 	ldr	r0, [pc, #312]	; 40020e8c <CyU3PUsbReEnableUsb3+0x1b0>
40020d50:	e5900000 	ldr	r0, [r0]
40020d54:	e3500000 	cmp	r0, #0
40020d58:	0a000003 	beq	40020d6c <CyU3PUsbReEnableUsb3+0x90>
40020d5c:	e3a00103 	mov	r0, #-1073741824	; 0xc0000000
40020d60:	e59f1128 	ldr	r1, [pc, #296]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020d64:	e5810050 	str	r0, [r1, #80]	; 0x50
40020d68:	ea000002 	b	40020d78 <CyU3PUsbReEnableUsb3+0x9c>
40020d6c:	e3a00303 	mov	r0, #201326592	; 0xc000000
40020d70:	e59f1118 	ldr	r1, [pc, #280]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020d74:	e5810050 	str	r0, [r1, #80]	; 0x50
40020d78:	eb000574 	bl	40022350 <CyFx3Usb3LnkSetup>
40020d7c:	e59f0110 	ldr	r0, [pc, #272]	; 40020e94 <CyU3PUsbReEnableUsb3+0x1b8>
40020d80:	e59f1108 	ldr	r1, [pc, #264]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020d84:	e5810418 	str	r0, [r1, #1048]	; 0x418
40020d88:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40020d8c:	e1c10000 	bic	r0, r1, r0
40020d90:	e5900158 	ldr	r0, [r0, #344]	; 0x158
40020d94:	e3800b02 	orr	r0, r0, #2048	; 0x800
40020d98:	e5810158 	str	r0, [r1, #344]	; 0x158
40020d9c:	e3a00212 	mov	r0, #536870913	; 0x20000001
40020da0:	e581001c 	str	r0, [r1, #28]
40020da4:	e3a01000 	mov	r1, #0
40020da8:	e3a00001 	mov	r0, #1
40020dac:	ebffee60 	bl	4001c734 <CyU3PSetUsbCoreClock>
40020db0:	e3a0000a 	mov	r0, #10
40020db4:	ebffcabe 	bl	400138b4 <CyU3PBusyWait>
40020db8:	eb000537 	bl	4002229c <CyU3PVicDisableAllInterrupts>
40020dbc:	e1a04000 	mov	r4, r0
40020dc0:	e3a00000 	mov	r0, #0
40020dc4:	e59f10cc 	ldr	r1, [pc, #204]	; 40020e98 <CyU3PUsbReEnableUsb3+0x1bc>
40020dc8:	e5810000 	str	r0, [r1]
40020dcc:	e3a00a01 	mov	r0, #4096	; 0x1000
40020dd0:	e59f10b8 	ldr	r1, [pc, #184]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020dd4:	e5810054 	str	r0, [r1, #84]	; 0x54
40020dd8:	e1c10080 	bic	r0, r1, r0, lsl #1
40020ddc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40020de0:	e3800901 	orr	r0, r0, #16384	; 0x4000
40020de4:	e2411a02 	sub	r1, r1, #8192	; 0x2000
40020de8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40020dec:	e3a00064 	mov	r0, #100	; 0x64
40020df0:	ebffcaaf 	bl	400138b4 <CyU3PBusyWait>
40020df4:	e59f0094 	ldr	r0, [pc, #148]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020df8:	e5900000 	ldr	r0, [r0]
40020dfc:	e3c00a0f 	bic	r0, r0, #61440	; 0xf000
40020e00:	e3800cc2 	orr	r0, r0, #49664	; 0xc200
40020e04:	e59f1084 	ldr	r1, [pc, #132]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020e08:	e5810000 	str	r0, [r1]
40020e0c:	e59f0088 	ldr	r0, [pc, #136]	; 40020e9c <CyU3PUsbReEnableUsb3+0x1c0>
40020e10:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020e14:	e3a01080 	mov	r1, #128	; 0x80
40020e18:	e2810ef9 	add	r0, r1, #3984	; 0xf90
40020e1c:	eb000591 	bl	40022468 <CyFx3UsbWritePhyReg>
40020e20:	e3a01d06 	mov	r1, #384	; 0x180
40020e24:	e59f0074 	ldr	r0, [pc, #116]	; 40020ea0 <CyU3PUsbReEnableUsb3+0x1c4>
40020e28:	eb00058e 	bl	40022468 <CyFx3UsbWritePhyReg>
40020e2c:	e3a01080 	mov	r1, #128	; 0x80
40020e30:	e59f006c 	ldr	r0, [pc, #108]	; 40020ea4 <CyU3PUsbReEnableUsb3+0x1c8>
40020e34:	eb00058b 	bl	40022468 <CyFx3UsbWritePhyReg>
40020e38:	e59f003c 	ldr	r0, [pc, #60]	; 40020e7c <CyU3PUsbReEnableUsb3+0x1a0>
40020e3c:	e5900004 	ldr	r0, [r0, #4]
40020e40:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40020e44:	e59f1030 	ldr	r1, [pc, #48]	; 40020e7c <CyU3PUsbReEnableUsb3+0x1a0>
40020e48:	e5810004 	str	r0, [r1, #4]
40020e4c:	e1a00004 	mov	r0, r4
40020e50:	eb00051f 	bl	400222d4 <CyU3PVicEnableInterrupts>
40020e54:	e59f0034 	ldr	r0, [pc, #52]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020e58:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40020e5c:	e3c00a01 	bic	r0, r0, #4096	; 0x1000
40020e60:	e59f1028 	ldr	r1, [pc, #40]	; 40020e90 <CyU3PUsbReEnableUsb3+0x1b4>
40020e64:	e5810054 	str	r0, [r1, #84]	; 0x54
40020e68:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
40020e6c:	e581001c 	str	r0, [r1, #28]
40020e70:	e3a00064 	mov	r0, #100	; 0x64
40020e74:	ebffca8e 	bl	400138b4 <CyU3PBusyWait>
40020e78:	e8bd8010 	pop	{r4, pc}
40020e7c:	e0030000 	.word	0xe0030000
40020e80:	00038081 	.word	0x00038081
40020e84:	00004a3d 	.word	0x00004a3d
40020e88:	40031d40 	.word	0x40031d40
40020e8c:	40030d40 	.word	0x40030d40
40020e90:	e0033000 	.word	0xe0033000
40020e94:	00000908 	.word	0x00000908
40020e98:	40030d74 	.word	0x40030d74
40020e9c:	00310418 	.word	0x00310418
40020ea0:	00001006 	.word	0x00001006
40020ea4:	00001024 	.word	0x00001024

Disassembly of section i.CyU3PUsbRegisterEventCallback:

40020ea8 <CyU3PUsbRegisterEventCallback>:
40020ea8:	e92d4010 	push	{r4, lr}
40020eac:	e1a04000 	mov	r4, r0
40020eb0:	e59f0038 	ldr	r0, [pc, #56]	; 40020ef0 <CyU3PUsbRegisterEventCallback+0x48>
40020eb4:	e5804000 	str	r4, [r0]
40020eb8:	e59f0034 	ldr	r0, [pc, #52]	; 40020ef4 <CyU3PUsbRegisterEventCallback+0x4c>
40020ebc:	e5d00008 	ldrb	r0, [r0, #8]
40020ec0:	e3500000 	cmp	r0, #0
40020ec4:	0a000008 	beq	40020eec <CyU3PUsbRegisterEventCallback+0x44>
40020ec8:	e59f0028 	ldr	r0, [pc, #40]	; 40020ef8 <CyU3PUsbRegisterEventCallback+0x50>
40020ecc:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40020ed0:	e59f101c 	ldr	r1, [pc, #28]	; 40020ef4 <CyU3PUsbRegisterEventCallback+0x4c>
40020ed4:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40020ed8:	e1100001 	tst	r0, r1
40020edc:	0a000002 	beq	40020eec <CyU3PUsbRegisterEventCallback+0x44>
40020ee0:	e3a01000 	mov	r1, #0
40020ee4:	e3a0000b 	mov	r0, #11
40020ee8:	e12fff34 	blx	r4
40020eec:	e8bd8010 	pop	{r4, pc}
40020ef0:	40030d9c 	.word	0x40030d9c
40020ef4:	40031d40 	.word	0x40031d40
40020ef8:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbRegisterSetupCallback:

40020efc <CyU3PUsbRegisterSetupCallback>:
40020efc:	e59f2050 	ldr	r2, [pc, #80]	; 40020f54 <CyU3PUsbRegisterSetupCallback+0x58>
40020f00:	e5820000 	str	r0, [r2]
40020f04:	e3510001 	cmp	r1, #1
40020f08:	1a000003 	bne	40020f1c <CyU3PUsbRegisterSetupCallback+0x20>
40020f0c:	e3a02000 	mov	r2, #0
40020f10:	e59f3040 	ldr	r3, [pc, #64]	; 40020f58 <CyU3PUsbRegisterSetupCallback+0x5c>
40020f14:	e5c32007 	strb	r2, [r3, #7]
40020f18:	ea00000c 	b	40020f50 <CyU3PUsbRegisterSetupCallback+0x54>
40020f1c:	e3a02001 	mov	r2, #1
40020f20:	e59f3030 	ldr	r3, [pc, #48]	; 40020f58 <CyU3PUsbRegisterSetupCallback+0x5c>
40020f24:	e5c32007 	strb	r2, [r3, #7]
40020f28:	e2832000 	add	r2, r3, #0
40020f2c:	e5d22008 	ldrb	r2, [r2, #8]
40020f30:	e3520000 	cmp	r2, #0
40020f34:	da000005 	ble	40020f50 <CyU3PUsbRegisterSetupCallback+0x54>
40020f38:	e2832000 	add	r2, r3, #0
40020f3c:	e5d22008 	ldrb	r2, [r2, #8]
40020f40:	e3520003 	cmp	r2, #3
40020f44:	aa000001 	bge	40020f50 <CyU3PUsbRegisterSetupCallback+0x54>
40020f48:	e3a02003 	mov	r2, #3
40020f4c:	e5c32008 	strb	r2, [r3, #8]
40020f50:	e12fff1e 	bx	lr
40020f54:	40030da0 	.word	0x40030da0
40020f58:	40031d40 	.word	0x40031d40

Disassembly of section i.CyU3PUsbResetHandler:

40020f5c <CyU3PUsbResetHandler>:
40020f5c:	e92d4010 	push	{r4, lr}
40020f60:	e3a00001 	mov	r0, #1
40020f64:	e59f1124 	ldr	r1, [pc, #292]	; 40021090 <CyU3PUsbResetHandler+0x134>
40020f68:	e5c10009 	strb	r0, [r1, #9]
40020f6c:	e59f0120 	ldr	r0, [pc, #288]	; 40021094 <CyU3PUsbResetHandler+0x138>
40020f70:	e5900018 	ldr	r0, [r0, #24]
40020f74:	e59f1118 	ldr	r1, [pc, #280]	; 40021094 <CyU3PUsbResetHandler+0x138>
40020f78:	e581000c 	str	r0, [r1, #12]
40020f7c:	e2810000 	add	r0, r1, #0
40020f80:	e5900014 	ldr	r0, [r0, #20]
40020f84:	e5810010 	str	r0, [r1, #16]
40020f88:	e59f0108 	ldr	r0, [pc, #264]	; 40021098 <CyU3PUsbResetHandler+0x13c>
40020f8c:	e5900000 	ldr	r0, [r0]
40020f90:	e3500000 	cmp	r0, #0
40020f94:	0a000010 	beq	40020fdc <CyU3PUsbResetHandler+0x80>
40020f98:	e59f00f0 	ldr	r0, [pc, #240]	; 40021090 <CyU3PUsbResetHandler+0x134>
40020f9c:	e590002c 	ldr	r0, [r0, #44]	; 0x2c
40020fa0:	e3500000 	cmp	r0, #0
40020fa4:	1a000007 	bne	40020fc8 <CyU3PUsbResetHandler+0x6c>
40020fa8:	e3a01000 	mov	r1, #0
40020fac:	e1a00001 	mov	r0, r1
40020fb0:	e59f20e0 	ldr	r2, [pc, #224]	; 40021098 <CyU3PUsbResetHandler+0x13c>
40020fb4:	e5922000 	ldr	r2, [r2]
40020fb8:	e12fff32 	blx	r2
40020fbc:	e3a00001 	mov	r0, #1
40020fc0:	e59f10c8 	ldr	r1, [pc, #200]	; 40021090 <CyU3PUsbResetHandler+0x134>
40020fc4:	e581002c 	str	r0, [r1, #44]	; 0x2c
40020fc8:	e3a01000 	mov	r1, #0
40020fcc:	e3a00004 	mov	r0, #4
40020fd0:	e59f20c0 	ldr	r2, [pc, #192]	; 40021098 <CyU3PUsbResetHandler+0x13c>
40020fd4:	e5922000 	ldr	r2, [r2]
40020fd8:	e12fff32 	blx	r2
40020fdc:	e59f00b8 	ldr	r0, [pc, #184]	; 4002109c <CyU3PUsbResetHandler+0x140>
40020fe0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40020fe4:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
40020fe8:	e59f10ac 	ldr	r1, [pc, #172]	; 4002109c <CyU3PUsbResetHandler+0x140>
40020fec:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40020ff0:	e3a00001 	mov	r0, #1
40020ff4:	ebffca2e 	bl	400138b4 <CyU3PBusyWait>
40020ff8:	e59f009c 	ldr	r0, [pc, #156]	; 4002109c <CyU3PUsbResetHandler+0x140>
40020ffc:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
40021000:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021004:	e59f1090 	ldr	r1, [pc, #144]	; 4002109c <CyU3PUsbResetHandler+0x140>
40021008:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
4002100c:	e3a00001 	mov	r0, #1
40021010:	ebffca27 	bl	400138b4 <CyU3PBusyWait>
40021014:	e3a00040 	mov	r0, #64	; 0x40
40021018:	e59f107c 	ldr	r1, [pc, #124]	; 4002109c <CyU3PUsbResetHandler+0x140>
4002101c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021020:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021024:	e1c10000 	bic	r0, r1, r0
40021028:	e5900418 	ldr	r0, [r0, #1048]	; 0x418
4002102c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40021030:	e5810418 	str	r0, [r1, #1048]	; 0x418
40021034:	e1a00001 	mov	r0, r1
40021038:	e5900498 	ldr	r0, [r0, #1176]	; 0x498
4002103c:	e3800901 	orr	r0, r0, #16384	; 0x4000
40021040:	e5810498 	str	r0, [r1, #1176]	; 0x498
40021044:	e3a00001 	mov	r0, #1
40021048:	ebfffc14 	bl	400200a0 <CyU3PUsbEpPrepare>
4002104c:	e59f003c 	ldr	r0, [pc, #60]	; 40021090 <CyU3PUsbResetHandler+0x134>
40021050:	e590004c 	ldr	r0, [r0, #76]	; 0x4c
40021054:	e3500000 	cmp	r0, #0
40021058:	0a00000b 	beq	4002108c <CyU3PUsbResetHandler+0x130>
4002105c:	e59f002c 	ldr	r0, [pc, #44]	; 40021090 <CyU3PUsbResetHandler+0x134>
40021060:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021064:	e3500003 	cmp	r0, #3
40021068:	3a000002 	bcc	40021078 <CyU3PUsbResetHandler+0x11c>
4002106c:	e3a00000 	mov	r0, #0
40021070:	e59f1018 	ldr	r1, [pc, #24]	; 40021090 <CyU3PUsbResetHandler+0x134>
40021074:	e581004c 	str	r0, [r1, #76]	; 0x4c
40021078:	e59f001c 	ldr	r0, [pc, #28]	; 4002109c <CyU3PUsbResetHandler+0x140>
4002107c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021080:	e3100901 	tst	r0, #16384	; 0x4000
40021084:	1a000000 	bne	4002108c <CyU3PUsbResetHandler+0x130>
40021088:	ebffff13 	bl	40020cdc <CyU3PUsbReEnableUsb3>
4002108c:	e8bd8010 	pop	{r4, pc}
40021090:	40031d40 	.word	0x40031d40
40021094:	40031f98 	.word	0x40031f98
40021098:	40030d9c 	.word	0x40030d9c
4002109c:	e0031000 	.word	0xe0031000

Disassembly of section i.CyU3PUsbResumeHandler:

400210a0 <CyU3PUsbResumeHandler>:
400210a0:	e92d4010 	push	{r4, lr}
400210a4:	e59f003c 	ldr	r0, [pc, #60]	; 400210e8 <CyU3PUsbResumeHandler+0x48>
400210a8:	e5d00008 	ldrb	r0, [r0, #8]
400210ac:	e3500005 	cmp	r0, #5
400210b0:	ba00000b 	blt	400210e4 <CyU3PUsbResumeHandler+0x44>
400210b4:	e59f0030 	ldr	r0, [pc, #48]	; 400210ec <CyU3PUsbResumeHandler+0x4c>
400210b8:	e5900000 	ldr	r0, [r0]
400210bc:	e3500000 	cmp	r0, #0
400210c0:	0a000004 	beq	400210d8 <CyU3PUsbResumeHandler+0x38>
400210c4:	e3a01000 	mov	r1, #0
400210c8:	e3a00003 	mov	r0, #3
400210cc:	e59f2018 	ldr	r2, [pc, #24]	; 400210ec <CyU3PUsbResumeHandler+0x4c>
400210d0:	e5922000 	ldr	r2, [r2]
400210d4:	e12fff32 	blx	r2
400210d8:	e3a00006 	mov	r0, #6
400210dc:	e59f1004 	ldr	r1, [pc, #4]	; 400210e8 <CyU3PUsbResumeHandler+0x48>
400210e0:	e5c10008 	strb	r0, [r1, #8]
400210e4:	e8bd8010 	pop	{r4, pc}
400210e8:	40031d40 	.word	0x40031d40
400210ec:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSConnecthandler:

400210f0 <CyU3PUsbSSConnecthandler>:
400210f0:	e92d4010 	push	{r4, lr}
400210f4:	e59f01d4 	ldr	r0, [pc, #468]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
400210f8:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400210fc:	e3100a02 	tst	r0, #8192	; 0x2000
40021100:	0a00002b 	beq	400211b4 <CyU3PUsbSSConnecthandler+0xc4>
40021104:	e59f01c8 	ldr	r0, [pc, #456]	; 400212d4 <CyU3PUsbSSConnecthandler+0x1e4>
40021108:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002110c:	e200403f 	and	r4, r0, #63	; 0x3f
40021110:	ea000003 	b	40021124 <CyU3PUsbSSConnecthandler+0x34>
40021114:	ebffa688 	bl	4000ab3c <_txe_thread_relinquish>
40021118:	e59f01b4 	ldr	r0, [pc, #436]	; 400212d4 <CyU3PUsbSSConnecthandler+0x1e4>
4002111c:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021120:	e200403f 	and	r4, r0, #63	; 0x3f
40021124:	e59f01a4 	ldr	r0, [pc, #420]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
40021128:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002112c:	e3100901 	tst	r0, #16384	; 0x4000
40021130:	0a000001 	beq	4002113c <CyU3PUsbSSConnecthandler+0x4c>
40021134:	e3540008 	cmp	r4, #8
40021138:	0afffff5 	beq	40021114 <CyU3PUsbSSConnecthandler+0x24>
4002113c:	e3540017 	cmp	r4, #23
40021140:	1a00000a 	bne	40021170 <CyU3PUsbSSConnecthandler+0x80>
40021144:	e59f018c 	ldr	r0, [pc, #396]	; 400212d8 <CyU3PUsbSSConnecthandler+0x1e8>
40021148:	e5900050 	ldr	r0, [r0, #80]	; 0x50
4002114c:	e3500000 	cmp	r0, #0
40021150:	1a000002 	bne	40021160 <CyU3PUsbSSConnecthandler+0x70>
40021154:	e3a00010 	mov	r0, #16
40021158:	ebfffb21 	bl	4001fde4 <CyU3PUsbAddToEventLog>
4002115c:	eb000060 	bl	400212e4 <CyU3PUsbSSDisConnecthandler>
40021160:	e3a00003 	mov	r0, #3
40021164:	e59f116c 	ldr	r1, [pc, #364]	; 400212d8 <CyU3PUsbSSConnecthandler+0x1e8>
40021168:	e5c10009 	strb	r0, [r1, #9]
4002116c:	e8bd8010 	pop	{r4, pc}
40021170:	e59f0158 	ldr	r0, [pc, #344]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
40021174:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
40021178:	e3100901 	tst	r0, #16384	; 0x4000
4002117c:	1a000000 	bne	40021184 <CyU3PUsbSSConnecthandler+0x94>
40021180:	eafffff9 	b	4002116c <CyU3PUsbSSConnecthandler+0x7c>
40021184:	e59f0144 	ldr	r0, [pc, #324]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
40021188:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
4002118c:	e3800008 	orr	r0, r0, #8
40021190:	e59f1138 	ldr	r1, [pc, #312]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
40021194:	e5810408 	str	r0, [r1, #1032]	; 0x408
40021198:	e1a00001 	mov	r0, r1
4002119c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400211a0:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
400211a4:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400211a8:	e1a00001 	mov	r0, r1
400211ac:	e590051c 	ldr	r0, [r0, #1308]	; 0x51c
400211b0:	e581051c 	str	r0, [r1, #1308]	; 0x51c
400211b4:	e3a00116 	mov	r0, #-2147483643	; 0x80000005
400211b8:	e59f111c 	ldr	r1, [pc, #284]	; 400212dc <CyU3PUsbSSConnecthandler+0x1ec>
400211bc:	e5810008 	str	r0, [r1, #8]
400211c0:	e3a0021e 	mov	r0, #-536870911	; 0xe0000001
400211c4:	e2411a1f 	sub	r1, r1, #126976	; 0x1f000
400211c8:	e581001c 	str	r0, [r1, #28]
400211cc:	e3a00003 	mov	r0, #3
400211d0:	e59f1100 	ldr	r1, [pc, #256]	; 400212d8 <CyU3PUsbSSConnecthandler+0x1e8>
400211d4:	e5c10009 	strb	r0, [r1, #9]
400211d8:	e59f00f0 	ldr	r0, [pc, #240]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
400211dc:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400211e0:	e3800902 	orr	r0, r0, #32768	; 0x8000
400211e4:	e59f10e4 	ldr	r1, [pc, #228]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
400211e8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400211ec:	e1a00001 	mov	r0, r1
400211f0:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400211f4:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
400211f8:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400211fc:	e3a00001 	mov	r0, #1
40021200:	ebffc9ab 	bl	400138b4 <CyU3PBusyWait>
40021204:	e59f00c4 	ldr	r0, [pc, #196]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
40021208:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
4002120c:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
40021210:	e59f10b8 	ldr	r1, [pc, #184]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
40021214:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
40021218:	e3a00001 	mov	r0, #1
4002121c:	ebffc9a4 	bl	400138b4 <CyU3PBusyWait>
40021220:	e3a00000 	mov	r0, #0
40021224:	ebffeecd 	bl	4001cd60 <CyU3PUsbFlushEp>
40021228:	e3a00080 	mov	r0, #128	; 0x80
4002122c:	ebffeecb 	bl	4001cd60 <CyU3PUsbFlushEp>
40021230:	e59f009c 	ldr	r0, [pc, #156]	; 400212d4 <CyU3PUsbSSConnecthandler+0x1e4>
40021234:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021238:	e3800001 	orr	r0, r0, #1
4002123c:	e59f1090 	ldr	r1, [pc, #144]	; 400212d4 <CyU3PUsbSSConnecthandler+0x1e4>
40021240:	e5810500 	str	r0, [r1, #1280]	; 0x500
40021244:	e3a00c02 	mov	r0, #512	; 0x200
40021248:	e1c11200 	bic	r1, r1, r0, lsl #4
4002124c:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021250:	e1810200 	orr	r0, r1, r0, lsl #4
40021254:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021258:	e3800001 	orr	r0, r0, #1
4002125c:	e2811a02 	add	r1, r1, #8192	; 0x2000
40021260:	e5810600 	str	r0, [r1, #1536]	; 0x600
40021264:	e3a00c02 	mov	r0, #512	; 0x200
40021268:	e1c11200 	bic	r1, r1, r0, lsl #4
4002126c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
40021270:	e3a00000 	mov	r0, #0
40021274:	ebfff121 	bl	4001d700 <CyU3PUsbResetEp>
40021278:	e3a00000 	mov	r0, #0
4002127c:	ebffeeb7 	bl	4001cd60 <CyU3PUsbFlushEp>
40021280:	e3a00080 	mov	r0, #128	; 0x80
40021284:	ebfff11d 	bl	4001d700 <CyU3PUsbResetEp>
40021288:	e3a00080 	mov	r0, #128	; 0x80
4002128c:	ebffeeb3 	bl	4001cd60 <CyU3PUsbFlushEp>
40021290:	e3a00c02 	mov	r0, #512	; 0x200
40021294:	e59f1034 	ldr	r1, [pc, #52]	; 400212d0 <CyU3PUsbSSConnecthandler+0x1e0>
40021298:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002129c:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
400212a0:	e59f0038 	ldr	r0, [pc, #56]	; 400212e0 <CyU3PUsbSSConnecthandler+0x1f0>
400212a4:	e5900000 	ldr	r0, [r0]
400212a8:	e3500000 	cmp	r0, #0
400212ac:	0a000004 	beq	400212c4 <CyU3PUsbSSConnecthandler+0x1d4>
400212b0:	e3a01001 	mov	r1, #1
400212b4:	e3a00000 	mov	r0, #0
400212b8:	e59f2020 	ldr	r2, [pc, #32]	; 400212e0 <CyU3PUsbSSConnecthandler+0x1f0>
400212bc:	e5922000 	ldr	r2, [r2]
400212c0:	e12fff32 	blx	r2
400212c4:	e3a00003 	mov	r0, #3
400212c8:	ebfffb74 	bl	400200a0 <CyU3PUsbEpPrepare>
400212cc:	eaffffa6 	b	4002116c <CyU3PUsbSSConnecthandler+0x7c>
400212d0:	e0031000 	.word	0xe0031000
400212d4:	e0033000 	.word	0xe0033000
400212d8:	40031d40 	.word	0x40031d40
400212dc:	e0052000 	.word	0xe0052000
400212e0:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSDisConnecthandler:

400212e4 <CyU3PUsbSSDisConnecthandler>:
400212e4:	e92d4010 	push	{r4, lr}
400212e8:	e59f0164 	ldr	r0, [pc, #356]	; 40021454 <CyU3PUsbSSDisConnecthandler+0x170>
400212ec:	e5900074 	ldr	r0, [r0, #116]	; 0x74
400212f0:	e3500000 	cmp	r0, #0
400212f4:	0a000005 	beq	40021310 <CyU3PUsbSSDisConnecthandler+0x2c>
400212f8:	e59f0158 	ldr	r0, [pc, #344]	; 40021458 <CyU3PUsbSSDisConnecthandler+0x174>
400212fc:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021300:	e59f114c 	ldr	r1, [pc, #332]	; 40021454 <CyU3PUsbSSDisConnecthandler+0x170>
40021304:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021308:	e1100001 	tst	r0, r1
4002130c:	0a00004e 	beq	4002144c <CyU3PUsbSSDisConnecthandler+0x168>
40021310:	e59f013c 	ldr	r0, [pc, #316]	; 40021454 <CyU3PUsbSSDisConnecthandler+0x170>
40021314:	e5900058 	ldr	r0, [r0, #88]	; 0x58
40021318:	e2800001 	add	r0, r0, #1
4002131c:	e59f1130 	ldr	r1, [pc, #304]	; 40021454 <CyU3PUsbSSDisConnecthandler+0x170>
40021320:	e5810058 	str	r0, [r1, #88]	; 0x58
40021324:	e59f0130 	ldr	r0, [pc, #304]	; 4002145c <CyU3PUsbSSDisConnecthandler+0x178>
40021328:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002132c:	e3100a02 	tst	r0, #8192	; 0x2000
40021330:	0a000020 	beq	400213b8 <CyU3PUsbSSDisConnecthandler+0xd4>
40021334:	e59f0120 	ldr	r0, [pc, #288]	; 4002145c <CyU3PUsbSSDisConnecthandler+0x178>
40021338:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
4002133c:	e3c00903 	bic	r0, r0, #49152	; 0xc000
40021340:	e59f1114 	ldr	r1, [pc, #276]	; 4002145c <CyU3PUsbSSDisConnecthandler+0x178>
40021344:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40021348:	e3a00002 	mov	r0, #2
4002134c:	ebffc958 	bl	400138b4 <CyU3PBusyWait>
40021350:	e59f0108 	ldr	r0, [pc, #264]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x17c>
40021354:	e5900004 	ldr	r0, [r0, #4]
40021358:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
4002135c:	e59f10fc 	ldr	r1, [pc, #252]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x17c>
40021360:	e5810004 	str	r0, [r1, #4]
40021364:	e3a00001 	mov	r0, #1
40021368:	ebffc951 	bl	400138b4 <CyU3PBusyWait>
4002136c:	e59f00f0 	ldr	r0, [pc, #240]	; 40021464 <CyU3PUsbSSDisConnecthandler+0x180>
40021370:	e590001c 	ldr	r0, [r0, #28]
40021374:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
40021378:	e59f10e4 	ldr	r1, [pc, #228]	; 40021464 <CyU3PUsbSSDisConnecthandler+0x180>
4002137c:	e581001c 	str	r0, [r1, #28]
40021380:	e59f00e0 	ldr	r0, [pc, #224]	; 40021468 <CyU3PUsbSSDisConnecthandler+0x184>
40021384:	e5900000 	ldr	r0, [r0]
40021388:	e581002c 	str	r0, [r1, #44]	; 0x2c
4002138c:	e3a00001 	mov	r0, #1
40021390:	ebffc947 	bl	400138b4 <CyU3PBusyWait>
40021394:	e59f00c4 	ldr	r0, [pc, #196]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x17c>
40021398:	e5900004 	ldr	r0, [r0, #4]
4002139c:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
400213a0:	e59f10b8 	ldr	r1, [pc, #184]	; 40021460 <CyU3PUsbSSDisConnecthandler+0x17c>
400213a4:	e5810004 	str	r0, [r1, #4]
400213a8:	e3a01000 	mov	r1, #0
400213ac:	e3a00002 	mov	r0, #2
400213b0:	ebffecdf 	bl	4001c734 <CyU3PSetUsbCoreClock>
400213b4:	ea000025 	b	40021450 <CyU3PUsbSSDisConnecthandler+0x16c>
400213b8:	e3a00001 	mov	r0, #1
400213bc:	e59f1090 	ldr	r1, [pc, #144]	; 40021454 <CyU3PUsbSSDisConnecthandler+0x170>
400213c0:	e5c10009 	strb	r0, [r1, #9]
400213c4:	ebffef8c 	bl	4001d1fc <CyU3PUsbPhyDisable>
400213c8:	e59f0084 	ldr	r0, [pc, #132]	; 40021454 <CyU3PUsbSSDisConnecthandler+0x170>
400213cc:	e5900078 	ldr	r0, [r0, #120]	; 0x78
400213d0:	e3500000 	cmp	r0, #0
400213d4:	0a000019 	beq	40021440 <CyU3PUsbSSDisConnecthandler+0x15c>
400213d8:	e59f008c 	ldr	r0, [pc, #140]	; 4002146c <CyU3PUsbSSDisConnecthandler+0x188>
400213dc:	e5900000 	ldr	r0, [r0]
400213e0:	e3500000 	cmp	r0, #0
400213e4:	0a000005 	beq	40021400 <CyU3PUsbSSDisConnecthandler+0x11c>
400213e8:	e3a00000 	mov	r0, #0
400213ec:	e59f1078 	ldr	r1, [pc, #120]	; 4002146c <CyU3PUsbSSDisConnecthandler+0x188>
400213f0:	e5810000 	str	r0, [r1]
400213f4:	e3a00001 	mov	r0, #1
400213f8:	ebffeff5 	bl	4001d3d4 <CyU3PUsbPhyEnable>
400213fc:	ea000013 	b	40021450 <CyU3PUsbSSDisConnecthandler+0x16c>
40021400:	e3a00003 	mov	r0, #3
40021404:	e59f1048 	ldr	r1, [pc, #72]	; 40021454 <CyU3PUsbSSDisConnecthandler+0x170>
40021408:	e5c10008 	strb	r0, [r1, #8]
4002140c:	e3a00000 	mov	r0, #0
40021410:	e5c10009 	strb	r0, [r1, #9]
40021414:	e581002c 	str	r0, [r1, #44]	; 0x2c
40021418:	e59f0050 	ldr	r0, [pc, #80]	; 40021470 <CyU3PUsbSSDisConnecthandler+0x18c>
4002141c:	e5900000 	ldr	r0, [r0]
40021420:	e3500000 	cmp	r0, #0
40021424:	0a000009 	beq	40021450 <CyU3PUsbSSDisConnecthandler+0x16c>
40021428:	e3a01000 	mov	r1, #0
4002142c:	e3a00014 	mov	r0, #20
40021430:	e59f2038 	ldr	r2, [pc, #56]	; 40021470 <CyU3PUsbSSDisConnecthandler+0x18c>
40021434:	e5922000 	ldr	r2, [r2]
40021438:	e12fff32 	blx	r2
4002143c:	ea000003 	b	40021450 <CyU3PUsbSSDisConnecthandler+0x16c>
40021440:	e3a00000 	mov	r0, #0
40021444:	ebffefe2 	bl	4001d3d4 <CyU3PUsbPhyEnable>
40021448:	ea000000 	b	40021450 <CyU3PUsbSSDisConnecthandler+0x16c>
4002144c:	ebfffa07 	bl	4001fc70 <CyU3PUibVbusChangeHandler>
40021450:	e8bd8010 	pop	{r4, pc}
40021454:	40031d40 	.word	0x40031d40
40021458:	e0051000 	.word	0xe0051000
4002145c:	e0031000 	.word	0xe0031000
40021460:	e0030000 	.word	0xe0030000
40021464:	e0033000 	.word	0xe0033000
40021468:	40030c58 	.word	0x40030c58
4002146c:	40030d74 	.word	0x40030d74
40021470:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3PUsbSSReset:

40021474 <CyU3PUsbSSReset>:
40021474:	e92d4010 	push	{r4, lr}
40021478:	e3a04000 	mov	r4, #0
4002147c:	e59f0170 	ldr	r0, [pc, #368]	; 400215f4 <CyU3PUsbSSReset+0x180>
40021480:	e5d00009 	ldrb	r0, [r0, #9]
40021484:	e3500003 	cmp	r0, #3
40021488:	0a000000 	beq	40021490 <CyU3PUsbSSReset+0x1c>
4002148c:	e8bd8010 	pop	{r4, pc}
40021490:	e59f0160 	ldr	r0, [pc, #352]	; 400215f8 <CyU3PUsbSSReset+0x184>
40021494:	e5900000 	ldr	r0, [r0]
40021498:	e3500000 	cmp	r0, #0
4002149c:	0a000004 	beq	400214b4 <CyU3PUsbSSReset+0x40>
400214a0:	e3a01001 	mov	r1, #1
400214a4:	e3a00004 	mov	r0, #4
400214a8:	e59f2148 	ldr	r2, [pc, #328]	; 400215f8 <CyU3PUsbSSReset+0x184>
400214ac:	e5922000 	ldr	r2, [r2]
400214b0:	e12fff32 	blx	r2
400214b4:	e59f0140 	ldr	r0, [pc, #320]	; 400215fc <CyU3PUsbSSReset+0x188>
400214b8:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400214bc:	e3800203 	orr	r0, r0, #805306368	; 0x30000000
400214c0:	e59f1134 	ldr	r1, [pc, #308]	; 400215fc <CyU3PUsbSSReset+0x188>
400214c4:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400214c8:	e3a00001 	mov	r0, #1
400214cc:	ebffc8f8 	bl	400138b4 <CyU3PBusyWait>
400214d0:	e59f0124 	ldr	r0, [pc, #292]	; 400215fc <CyU3PUsbSSReset+0x188>
400214d4:	e5900c04 	ldr	r0, [r0, #3076]	; 0xc04
400214d8:	e3c00203 	bic	r0, r0, #805306368	; 0x30000000
400214dc:	e59f1118 	ldr	r1, [pc, #280]	; 400215fc <CyU3PUsbSSReset+0x188>
400214e0:	e5810c04 	str	r0, [r1, #3076]	; 0xc04
400214e4:	e3a00001 	mov	r0, #1
400214e8:	ebffc8f1 	bl	400138b4 <CyU3PBusyWait>
400214ec:	e3a00000 	mov	r0, #0
400214f0:	ebffee1a 	bl	4001cd60 <CyU3PUsbFlushEp>
400214f4:	e3a00080 	mov	r0, #128	; 0x80
400214f8:	ebffee18 	bl	4001cd60 <CyU3PUsbFlushEp>
400214fc:	e59f00fc 	ldr	r0, [pc, #252]	; 40021600 <CyU3PUsbSSReset+0x18c>
40021500:	e5900500 	ldr	r0, [r0, #1280]	; 0x500
40021504:	e3800001 	orr	r0, r0, #1
40021508:	e59f10f0 	ldr	r1, [pc, #240]	; 40021600 <CyU3PUsbSSReset+0x18c>
4002150c:	e5810500 	str	r0, [r1, #1280]	; 0x500
40021510:	e3a00c02 	mov	r0, #512	; 0x200
40021514:	e1c11200 	bic	r1, r1, r0, lsl #4
40021518:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
4002151c:	e1810200 	orr	r0, r1, r0, lsl #4
40021520:	e5900600 	ldr	r0, [r0, #1536]	; 0x600
40021524:	e3800001 	orr	r0, r0, #1
40021528:	e2811a02 	add	r1, r1, #8192	; 0x2000
4002152c:	e5810600 	str	r0, [r1, #1536]	; 0x600
40021530:	e3a00c02 	mov	r0, #512	; 0x200
40021534:	e1c11200 	bic	r1, r1, r0, lsl #4
40021538:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4002153c:	e3a00000 	mov	r0, #0
40021540:	ebfff06e 	bl	4001d700 <CyU3PUsbResetEp>
40021544:	e3a00000 	mov	r0, #0
40021548:	ebffee04 	bl	4001cd60 <CyU3PUsbFlushEp>
4002154c:	e3a00080 	mov	r0, #128	; 0x80
40021550:	ebfff06a 	bl	4001d700 <CyU3PUsbResetEp>
40021554:	e3a00080 	mov	r0, #128	; 0x80
40021558:	ebffee00 	bl	4001cd60 <CyU3PUsbFlushEp>
4002155c:	e3a00c02 	mov	r0, #512	; 0x200
40021560:	e59f1094 	ldr	r1, [pc, #148]	; 400215fc <CyU3PUsbSSReset+0x188>
40021564:	e5810c40 	str	r0, [r1, #3136]	; 0xc40
40021568:	e5810c80 	str	r0, [r1, #3200]	; 0xc80
4002156c:	e3a04001 	mov	r4, #1
40021570:	ea000019 	b	400215dc <CyU3PUsbSSReset+0x168>
40021574:	e0840084 	add	r0, r4, r4, lsl #1
40021578:	e59f1084 	ldr	r1, [pc, #132]	; 40021604 <CyU3PUsbSSReset+0x190>
4002157c:	e0810100 	add	r0, r1, r0, lsl #2
40021580:	e5900004 	ldr	r0, [r0, #4]
40021584:	e3500001 	cmp	r0, #1
40021588:	1a000005 	bne	400215a4 <CyU3PUsbSSReset+0x130>
4002158c:	e3840080 	orr	r0, r4, #128	; 0x80
40021590:	ebffedf2 	bl	4001cd60 <CyU3PUsbFlushEp>
40021594:	e3840080 	orr	r0, r4, #128	; 0x80
40021598:	e3a02001 	mov	r2, #1
4002159c:	e3a01000 	mov	r1, #0
400215a0:	ebfff2ba 	bl	4001e090 <CyU3PUsbStall>
400215a4:	e0840084 	add	r0, r4, r4, lsl #1
400215a8:	e59f1058 	ldr	r1, [pc, #88]	; 40021608 <CyU3PUsbSSReset+0x194>
400215ac:	e0810100 	add	r0, r1, r0, lsl #2
400215b0:	e5900004 	ldr	r0, [r0, #4]
400215b4:	e3500001 	cmp	r0, #1
400215b8:	1a000005 	bne	400215d4 <CyU3PUsbSSReset+0x160>
400215bc:	e1a00004 	mov	r0, r4
400215c0:	ebffede6 	bl	4001cd60 <CyU3PUsbFlushEp>
400215c4:	e3a02001 	mov	r2, #1
400215c8:	e3a01000 	mov	r1, #0
400215cc:	e1a00004 	mov	r0, r4
400215d0:	ebfff2ae 	bl	4001e090 <CyU3PUsbStall>
400215d4:	e2840001 	add	r0, r4, #1
400215d8:	e20040ff 	and	r4, r0, #255	; 0xff
400215dc:	e3540010 	cmp	r4, #16
400215e0:	baffffe3 	blt	40021574 <CyU3PUsbSSReset+0x100>
400215e4:	e3a00005 	mov	r0, #5
400215e8:	e59f1004 	ldr	r1, [pc, #4]	; 400215f4 <CyU3PUsbSSReset+0x180>
400215ec:	e5c10008 	strb	r0, [r1, #8]
400215f0:	eaffffa5 	b	4002148c <CyU3PUsbSSReset+0x18>
400215f4:	40031d40 	.word	0x40031d40
400215f8:	40030d9c 	.word	0x40030d9c
400215fc:	e0031000 	.word	0xe0031000
40021600:	e0033000 	.word	0xe0033000
40021604:	40031bc0 	.word	0x40031bc0
40021608:	40031c80 	.word	0x40031c80

Disassembly of section i.CyU3PUsbSendCompliancePatterns:

4002160c <CyU3PUsbSendCompliancePatterns>:
4002160c:	e92d4070 	push	{r4, r5, r6, lr}
40021610:	e3a04001 	mov	r4, #1
40021614:	e59f01ec 	ldr	r0, [pc, #492]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021618:	e5900054 	ldr	r0, [r0, #84]	; 0x54
4002161c:	e200503f 	and	r5, r0, #63	; 0x3f
40021620:	e3550017 	cmp	r5, #23
40021624:	0a000000 	beq	4002162c <CyU3PUsbSendCompliancePatterns+0x20>
40021628:	e8bd8070 	pop	{r4, r5, r6, pc}
4002162c:	e3a00003 	mov	r0, #3
40021630:	e59f11d4 	ldr	r1, [pc, #468]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021634:	e5c10009 	strb	r0, [r1, #9]
40021638:	e3a00001 	mov	r0, #1
4002163c:	e5810064 	str	r0, [r1, #100]	; 0x64
40021640:	e3a00000 	mov	r0, #0
40021644:	e5810060 	str	r0, [r1, #96]	; 0x60
40021648:	e3a00d57 	mov	r0, #5568	; 0x15c0
4002164c:	e59f11b4 	ldr	r1, [pc, #436]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021650:	e5810054 	str	r0, [r1, #84]	; 0x54
40021654:	e59f01b4 	ldr	r0, [pc, #436]	; 40021810 <CyU3PUsbSendCompliancePatterns+0x204>
40021658:	e5900000 	ldr	r0, [r0]
4002165c:	e3500000 	cmp	r0, #0
40021660:	0a000004 	beq	40021678 <CyU3PUsbSendCompliancePatterns+0x6c>
40021664:	e3a01000 	mov	r1, #0
40021668:	e3a00015 	mov	r0, #21
4002166c:	e59f219c 	ldr	r2, [pc, #412]	; 40021810 <CyU3PUsbSendCompliancePatterns+0x204>
40021670:	e5922000 	ldr	r2, [r2]
40021674:	e12fff32 	blx	r2
40021678:	e1a00000 	nop			; (mov r0, r0)
4002167c:	e59f0184 	ldr	r0, [pc, #388]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021680:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021684:	e3100002 	tst	r0, #2
40021688:	0a000031 	beq	40021754 <CyU3PUsbSendCompliancePatterns+0x148>
4002168c:	e59f0180 	ldr	r0, [pc, #384]	; 40021814 <CyU3PUsbSendCompliancePatterns+0x208>
40021690:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40021694:	e59f116c 	ldr	r1, [pc, #364]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021698:	e5810138 	str	r0, [r1, #312]	; 0x138
4002169c:	e3a00001 	mov	r0, #1
400216a0:	ebff9d74 	bl	40008c78 <_tx_thread_sleep>
400216a4:	e59f015c 	ldr	r0, [pc, #348]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216a8:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400216ac:	e3c00002 	bic	r0, r0, #2
400216b0:	e59f1150 	ldr	r1, [pc, #336]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216b4:	e5810064 	str	r0, [r1, #100]	; 0x64
400216b8:	e3540004 	cmp	r4, #4
400216bc:	1a000020 	bne	40021744 <CyU3PUsbSendCompliancePatterns+0x138>
400216c0:	ea00000d 	b	400216fc <CyU3PUsbSendCompliancePatterns+0xf0>
400216c4:	e59f013c 	ldr	r0, [pc, #316]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216c8:	e590001c 	ldr	r0, [r0, #28]
400216cc:	e3800008 	orr	r0, r0, #8
400216d0:	e59f1130 	ldr	r1, [pc, #304]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216d4:	e581001c 	str	r0, [r1, #28]
400216d8:	e3a0000a 	mov	r0, #10
400216dc:	ebffc874 	bl	400138b4 <CyU3PBusyWait>
400216e0:	e59f0120 	ldr	r0, [pc, #288]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216e4:	e590001c 	ldr	r0, [r0, #28]
400216e8:	e3c00008 	bic	r0, r0, #8
400216ec:	e59f1114 	ldr	r1, [pc, #276]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400216f0:	e581001c 	str	r0, [r1, #28]
400216f4:	e3a0001e 	mov	r0, #30
400216f8:	ebffc86d 	bl	400138b4 <CyU3PBusyWait>
400216fc:	e59f0104 	ldr	r0, [pc, #260]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021700:	e5900064 	ldr	r0, [r0, #100]	; 0x64
40021704:	e3100006 	tst	r0, #6
40021708:	1a00000d 	bne	40021744 <CyU3PUsbSendCompliancePatterns+0x138>
4002170c:	e59f00f8 	ldr	r0, [pc, #248]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021710:	e5900074 	ldr	r0, [r0, #116]	; 0x74
40021714:	e3500000 	cmp	r0, #0
40021718:	0a000005 	beq	40021734 <CyU3PUsbSendCompliancePatterns+0x128>
4002171c:	e59f00f4 	ldr	r0, [pc, #244]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x20c>
40021720:	e5900030 	ldr	r0, [r0, #48]	; 0x30
40021724:	e59f10e0 	ldr	r1, [pc, #224]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021728:	e5911074 	ldr	r1, [r1, #116]	; 0x74
4002172c:	e1100001 	tst	r0, r1
40021730:	0a000003 	beq	40021744 <CyU3PUsbSendCompliancePatterns+0x138>
40021734:	e59f00d0 	ldr	r0, [pc, #208]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021738:	e5900060 	ldr	r0, [r0, #96]	; 0x60
4002173c:	e3500000 	cmp	r0, #0
40021740:	0affffdf 	beq	400216c4 <CyU3PUsbSendCompliancePatterns+0xb8>
40021744:	e3a01009 	mov	r1, #9
40021748:	e2840001 	add	r0, r4, #1
4002174c:	ebffbd87 	bl	40010d70 <__aeabi_idivmod>
40021750:	e20140ff 	and	r4, r1, #255	; 0xff
40021754:	e59f00ac 	ldr	r0, [pc, #172]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
40021758:	e5900064 	ldr	r0, [r0, #100]	; 0x64
4002175c:	e3100004 	tst	r0, #4
40021760:	1a00000d 	bne	4002179c <CyU3PUsbSendCompliancePatterns+0x190>
40021764:	e59f00a0 	ldr	r0, [pc, #160]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021768:	e5900074 	ldr	r0, [r0, #116]	; 0x74
4002176c:	e3500000 	cmp	r0, #0
40021770:	0a000005 	beq	4002178c <CyU3PUsbSendCompliancePatterns+0x180>
40021774:	e59f009c 	ldr	r0, [pc, #156]	; 40021818 <CyU3PUsbSendCompliancePatterns+0x20c>
40021778:	e5900030 	ldr	r0, [r0, #48]	; 0x30
4002177c:	e59f1088 	ldr	r1, [pc, #136]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021780:	e5911074 	ldr	r1, [r1, #116]	; 0x74
40021784:	e1100001 	tst	r0, r1
40021788:	0a000003 	beq	4002179c <CyU3PUsbSendCompliancePatterns+0x190>
4002178c:	e59f0078 	ldr	r0, [pc, #120]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021790:	e5900060 	ldr	r0, [r0, #96]	; 0x60
40021794:	e3500001 	cmp	r0, #1
40021798:	1a000009 	bne	400217c4 <CyU3PUsbSendCompliancePatterns+0x1b8>
4002179c:	e59f0064 	ldr	r0, [pc, #100]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400217a0:	e5900064 	ldr	r0, [r0, #100]	; 0x64
400217a4:	e3c00004 	bic	r0, r0, #4
400217a8:	e59f1058 	ldr	r1, [pc, #88]	; 40021808 <CyU3PUsbSendCompliancePatterns+0x1fc>
400217ac:	e5810064 	str	r0, [r1, #100]	; 0x64
400217b0:	e3a00c06 	mov	r0, #1536	; 0x600
400217b4:	e5810138 	str	r0, [r1, #312]	; 0x138
400217b8:	e3a00000 	mov	r0, #0
400217bc:	e5810054 	str	r0, [r1, #84]	; 0x54
400217c0:	ea000002 	b	400217d0 <CyU3PUsbSendCompliancePatterns+0x1c4>
400217c4:	e3a00001 	mov	r0, #1
400217c8:	ebff9d2a 	bl	40008c78 <_tx_thread_sleep>
400217cc:	eaffffaa 	b	4002167c <CyU3PUsbSendCompliancePatterns+0x70>
400217d0:	e1a00000 	nop			; (mov r0, r0)
400217d4:	e59f0034 	ldr	r0, [pc, #52]	; 40021810 <CyU3PUsbSendCompliancePatterns+0x204>
400217d8:	e5900000 	ldr	r0, [r0]
400217dc:	e3500000 	cmp	r0, #0
400217e0:	0a000004 	beq	400217f8 <CyU3PUsbSendCompliancePatterns+0x1ec>
400217e4:	e3a01000 	mov	r1, #0
400217e8:	e3a00016 	mov	r0, #22
400217ec:	e59f201c 	ldr	r2, [pc, #28]	; 40021810 <CyU3PUsbSendCompliancePatterns+0x204>
400217f0:	e5922000 	ldr	r2, [r2]
400217f4:	e12fff32 	blx	r2
400217f8:	e3a00000 	mov	r0, #0
400217fc:	e59f1008 	ldr	r1, [pc, #8]	; 4002180c <CyU3PUsbSendCompliancePatterns+0x200>
40021800:	e5810064 	str	r0, [r1, #100]	; 0x64
40021804:	eaffff87 	b	40021628 <CyU3PUsbSendCompliancePatterns+0x1c>
40021808:	e0033000 	.word	0xe0033000
4002180c:	40031d40 	.word	0x40031d40
40021810:	40030d9c 	.word	0x40030d9c
40021814:	40012220 	.word	0x40012220
40021818:	e0051000 	.word	0xe0051000

Disassembly of section i.CyU3PUsbSetupCommand:

4002181c <CyU3PUsbSetupCommand>:
4002181c:	e92d4ffe 	push	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
40021820:	e3a06000 	mov	r6, #0
40021824:	e3a07000 	mov	r7, #0
40021828:	e59f07c0 	ldr	r0, [pc, #1984]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
4002182c:	e5d00009 	ldrb	r0, [r0, #9]
40021830:	e3500003 	cmp	r0, #3
40021834:	1a00001a 	bne	400218a4 <CyU3PUsbSetupCommand+0x88>
40021838:	e59f07b4 	ldr	r0, [pc, #1972]	; 40021ff4 <CyU3PUsbSetupCommand+0x7d8>
4002183c:	e5904438 	ldr	r4, [r0, #1080]	; 0x438
40021840:	e590543c 	ldr	r5, [r0, #1084]	; 0x43c
40021844:	e3a00001 	mov	r0, #1
40021848:	e59f17a0 	ldr	r1, [pc, #1952]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
4002184c:	e5810050 	str	r0, [r1, #80]	; 0x50
40021850:	e3a00000 	mov	r0, #0
40021854:	e59f179c 	ldr	r1, [pc, #1948]	; 40021ff8 <CyU3PUsbSetupCommand+0x7dc>
40021858:	e5810000 	str	r0, [r1]
4002185c:	e59f0798 	ldr	r0, [pc, #1944]	; 40021ffc <CyU3PUsbSetupCommand+0x7e0>
40021860:	ebffa576 	bl	4000ae40 <_txe_timer_deactivate>
40021864:	e3a00b02 	mov	r0, #2048	; 0x800
40021868:	e59f1784 	ldr	r1, [pc, #1924]	; 40021ff4 <CyU3PUsbSetupCommand+0x7d8>
4002186c:	e5810404 	str	r0, [r1, #1028]	; 0x404
40021870:	e1c10000 	bic	r0, r1, r0
40021874:	e5900054 	ldr	r0, [r0, #84]	; 0x54
40021878:	e200603f 	and	r6, r0, #63	; 0x3f
4002187c:	e3560011 	cmp	r6, #17
40021880:	0a000001 	beq	4002188c <CyU3PUsbSetupCommand+0x70>
40021884:	e3560012 	cmp	r6, #18
40021888:	1a000003 	bne	4002189c <CyU3PUsbSetupCommand+0x80>
4002188c:	e3a02000 	mov	r2, #0
40021890:	e3a01401 	mov	r1, #16777216	; 0x1000000
40021894:	e59f0764 	ldr	r0, [pc, #1892]	; 40022000 <CyU3PUsbSetupCommand+0x7e4>
40021898:	ebffa1ee 	bl	4000a058 <_txe_event_flags_set>
4002189c:	e3a06000 	mov	r6, #0
400218a0:	ea00000d 	b	400218dc <CyU3PUsbSetupCommand+0xc0>
400218a4:	e59f0744 	ldr	r0, [pc, #1860]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
400218a8:	e5900024 	ldr	r0, [r0, #36]	; 0x24
400218ac:	e3500000 	cmp	r0, #0
400218b0:	0a000006 	beq	400218d0 <CyU3PUsbSetupCommand+0xb4>
400218b4:	e59f0734 	ldr	r0, [pc, #1844]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
400218b8:	e5900058 	ldr	r0, [r0, #88]	; 0x58
400218bc:	e3500003 	cmp	r0, #3
400218c0:	2a000002 	bcs	400218d0 <CyU3PUsbSetupCommand+0xb4>
400218c4:	e3a00001 	mov	r0, #1
400218c8:	e59f1720 	ldr	r1, [pc, #1824]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
400218cc:	e581004c 	str	r0, [r1, #76]	; 0x4c
400218d0:	e59f072c 	ldr	r0, [pc, #1836]	; 40022004 <CyU3PUsbSetupCommand+0x7e8>
400218d4:	e590440c 	ldr	r4, [r0, #1036]	; 0x40c
400218d8:	e5905410 	ldr	r5, [r0, #1040]	; 0x410
400218dc:	e3a01064 	mov	r1, #100	; 0x64
400218e0:	e59f0720 	ldr	r0, [pc, #1824]	; 40022008 <CyU3PUsbSetupCommand+0x7ec>
400218e4:	ebffd5fd 	bl	400170e0 <CyU3PDmaChannelWaitForCompletion>
400218e8:	e1a06000 	mov	r6, r0
400218ec:	e3560000 	cmp	r6, #0
400218f0:	0a00000b 	beq	40021924 <CyU3PUsbSetupCommand+0x108>
400218f4:	e3560042 	cmp	r6, #66	; 0x42
400218f8:	0a000009 	beq	40021924 <CyU3PUsbSetupCommand+0x108>
400218fc:	e3a01001 	mov	r1, #1
40021900:	e3a00000 	mov	r0, #0
40021904:	ebfff11b 	bl	4001dd78 <CyU3PUsbSetEpNak>
40021908:	e3a00064 	mov	r0, #100	; 0x64
4002190c:	ebffc7e8 	bl	400138b4 <CyU3PBusyWait>
40021910:	e59f06f0 	ldr	r0, [pc, #1776]	; 40022008 <CyU3PUsbSetupCommand+0x7ec>
40021914:	ebffd320 	bl	4001659c <CyU3PDmaChannelReset>
40021918:	e3a01000 	mov	r1, #0
4002191c:	e1a00001 	mov	r0, r1
40021920:	ebfff114 	bl	4001dd78 <CyU3PUsbSetEpNak>
40021924:	e3a01064 	mov	r1, #100	; 0x64
40021928:	e59f06dc 	ldr	r0, [pc, #1756]	; 4002200c <CyU3PUsbSetupCommand+0x7f0>
4002192c:	ebffd5eb 	bl	400170e0 <CyU3PDmaChannelWaitForCompletion>
40021930:	e1a06000 	mov	r6, r0
40021934:	e3560000 	cmp	r6, #0
40021938:	0a00000d 	beq	40021974 <CyU3PUsbSetupCommand+0x158>
4002193c:	e3560042 	cmp	r6, #66	; 0x42
40021940:	0a00000b 	beq	40021974 <CyU3PUsbSetupCommand+0x158>
40021944:	e3a01001 	mov	r1, #1
40021948:	e3a00080 	mov	r0, #128	; 0x80
4002194c:	ebfff109 	bl	4001dd78 <CyU3PUsbSetEpNak>
40021950:	e3a00064 	mov	r0, #100	; 0x64
40021954:	ebffc7d6 	bl	400138b4 <CyU3PBusyWait>
40021958:	e59f06ac 	ldr	r0, [pc, #1708]	; 4002200c <CyU3PUsbSetupCommand+0x7f0>
4002195c:	ebffd30e 	bl	4001659c <CyU3PDmaChannelReset>
40021960:	e3a00080 	mov	r0, #128	; 0x80
40021964:	ebffecfd 	bl	4001cd60 <CyU3PUsbFlushEp>
40021968:	e3a01000 	mov	r1, #0
4002196c:	e3a00080 	mov	r0, #128	; 0x80
40021970:	ebfff100 	bl	4001dd78 <CyU3PUsbSetEpNak>
40021974:	e3a06000 	mov	r6, #0
40021978:	e20490ff 	and	r9, r4, #255	; 0xff
4002197c:	e209a060 	and	sl, r9, #96	; 0x60
40021980:	e2090003 	and	r0, r9, #3
40021984:	e58d0008 	str	r0, [sp, #8]
40021988:	e2040cff 	and	r0, r4, #65280	; 0xff00
4002198c:	e1a08420 	lsr	r8, r0, #8
40021990:	e59f0678 	ldr	r0, [pc, #1656]	; 40022010 <CyU3PUsbSetupCommand+0x7f4>
40021994:	e000b824 	and	fp, r0, r4, lsr #16
40021998:	e0050000 	and	r0, r5, r0
4002199c:	e58d0004 	str	r0, [sp, #4]
400219a0:	e59f0668 	ldr	r0, [pc, #1640]	; 40022010 <CyU3PUsbSetupCommand+0x7f4>
400219a4:	e0000825 	and	r0, r0, r5, lsr #16
400219a8:	e58d0000 	str	r0, [sp]
400219ac:	e3140080 	tst	r4, #128	; 0x80
400219b0:	0a000003 	beq	400219c4 <CyU3PUsbSetupCommand+0x1a8>
400219b4:	e59d0000 	ldr	r0, [sp]
400219b8:	e59f1644 	ldr	r1, [pc, #1604]	; 40022004 <CyU3PUsbSetupCommand+0x7e8>
400219bc:	e5810458 	str	r0, [r1, #1112]	; 0x458
400219c0:	ea000002 	b	400219d0 <CyU3PUsbSetupCommand+0x1b4>
400219c4:	e59d0000 	ldr	r0, [sp]
400219c8:	e59f1634 	ldr	r1, [pc, #1588]	; 40022004 <CyU3PUsbSetupCommand+0x7e8>
400219cc:	e58104d8 	str	r0, [r1, #1240]	; 0x4d8
400219d0:	e3a00000 	mov	r0, #0
400219d4:	e59f1614 	ldr	r1, [pc, #1556]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
400219d8:	e5810040 	str	r0, [r1, #64]	; 0x40
400219dc:	e59f0620 	ldr	r0, [pc, #1568]	; 40022004 <CyU3PUsbSetupCommand+0x7e8>
400219e0:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
400219e4:	e3c00008 	bic	r0, r0, #8
400219e8:	e59f1614 	ldr	r1, [pc, #1556]	; 40022004 <CyU3PUsbSetupCommand+0x7e8>
400219ec:	e5810518 	str	r0, [r1, #1304]	; 0x518
400219f0:	e3a00000 	mov	r0, #0
400219f4:	e59f15f4 	ldr	r1, [pc, #1524]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
400219f8:	e5810018 	str	r0, [r1, #24]
400219fc:	e5810070 	str	r0, [r1, #112]	; 0x70
40021a00:	e59f05fc 	ldr	r0, [pc, #1532]	; 40022004 <CyU3PUsbSetupCommand+0x7e8>
40021a04:	e5900518 	ldr	r0, [r0, #1304]	; 0x518
40021a08:	e3800008 	orr	r0, r0, #8
40021a0c:	e59f15f0 	ldr	r1, [pc, #1520]	; 40022004 <CyU3PUsbSetupCommand+0x7e8>
40021a10:	e5810518 	str	r0, [r1, #1304]	; 0x518
40021a14:	e59f05d4 	ldr	r0, [pc, #1492]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021a18:	e5d00007 	ldrb	r0, [r0, #7]
40021a1c:	e3500001 	cmp	r0, #1
40021a20:	0a000001 	beq	40021a2c <CyU3PUsbSetupCommand+0x210>
40021a24:	e35a0000 	cmp	sl, #0
40021a28:	0a000024 	beq	40021ac0 <CyU3PUsbSetupCommand+0x2a4>
40021a2c:	e35a0000 	cmp	sl, #0
40021a30:	1a000012 	bne	40021a80 <CyU3PUsbSetupCommand+0x264>
40021a34:	e3580009 	cmp	r8, #9
40021a38:	1a000010 	bne	40021a80 <CyU3PUsbSetupCommand+0x264>
40021a3c:	e35b0001 	cmp	fp, #1
40021a40:	1a00000b 	bne	40021a74 <CyU3PUsbSetupCommand+0x258>
40021a44:	e59f15a4 	ldr	r1, [pc, #1444]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021a48:	e5d10009 	ldrb	r0, [r1, #9]
40021a4c:	ebfff993 	bl	400200a0 <CyU3PUsbEpPrepare>
40021a50:	e3a00006 	mov	r0, #6
40021a54:	e59f1594 	ldr	r1, [pc, #1428]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021a58:	e5c10008 	strb	r0, [r1, #8]
40021a5c:	e5c1b00c 	strb	fp, [r1, #12]
40021a60:	e2810000 	add	r0, r1, #0
40021a64:	e5d00006 	ldrb	r0, [r0, #6]
40021a68:	e2000001 	and	r0, r0, #1
40021a6c:	e5c10006 	strb	r0, [r1, #6]
40021a70:	ea000002 	b	40021a80 <CyU3PUsbSetupCommand+0x264>
40021a74:	e3a00005 	mov	r0, #5
40021a78:	e59f1570 	ldr	r1, [pc, #1392]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021a7c:	e5c10008 	strb	r0, [r1, #8]
40021a80:	e59f058c 	ldr	r0, [pc, #1420]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021a84:	e5900000 	ldr	r0, [r0]
40021a88:	e3500000 	cmp	r0, #0
40021a8c:	0a000005 	beq	40021aa8 <CyU3PUsbSetupCommand+0x28c>
40021a90:	e1a01005 	mov	r1, r5
40021a94:	e1a00004 	mov	r0, r4
40021a98:	e59f2574 	ldr	r2, [pc, #1396]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021a9c:	e5922000 	ldr	r2, [r2]
40021aa0:	e12fff32 	blx	r2
40021aa4:	e1a07000 	mov	r7, r0
40021aa8:	e3570001 	cmp	r7, #1
40021aac:	1a000003 	bne	40021ac0 <CyU3PUsbSetupCommand+0x2a4>
40021ab0:	e3a00001 	mov	r0, #1
40021ab4:	e59f1534 	ldr	r1, [pc, #1332]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021ab8:	e5810040 	str	r0, [r1, #64]	; 0x40
40021abc:	e8bd8ffe 	pop	{r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
40021ac0:	e35a0000 	cmp	sl, #0
40021ac4:	1a000140 	bne	40021fcc <CyU3PUsbSetupCommand+0x7b0>
40021ac8:	e3580009 	cmp	r8, #9
40021acc:	0a0000b1 	beq	40021d98 <CyU3PUsbSetupCommand+0x57c>
40021ad0:	ca00000b 	bgt	40021b04 <CyU3PUsbSetupCommand+0x2e8>
40021ad4:	e3580009 	cmp	r8, #9
40021ad8:	308ff108 	addcc	pc, pc, r8, lsl #2
40021adc:	ea000137 	b	40021fc0 <CyU3PUsbSetupCommand+0x7a4>
40021ae0:	ea000014 	b	40021b38 <CyU3PUsbSetupCommand+0x31c>
40021ae4:	ea000029 	b	40021b90 <CyU3PUsbSetupCommand+0x374>
40021ae8:	ea000134 	b	40021fc0 <CyU3PUsbSetupCommand+0x7a4>
40021aec:	ea000057 	b	40021c50 <CyU3PUsbSetupCommand+0x434>
40021af0:	ea000132 	b	40021fc0 <CyU3PUsbSetupCommand+0x7a4>
40021af4:	ea000131 	b	40021fc0 <CyU3PUsbSetupCommand+0x7a4>
40021af8:	ea000099 	b	40021d64 <CyU3PUsbSetupCommand+0x548>
40021afc:	ea00012f 	b	40021fc0 <CyU3PUsbSetupCommand+0x7a4>
40021b00:	ea00009d 	b	40021d7c <CyU3PUsbSetupCommand+0x560>
40021b04:	e358000c 	cmp	r8, #12
40021b08:	0a0000fb 	beq	40021efc <CyU3PUsbSetupCommand+0x6e0>
40021b0c:	ca000004 	bgt	40021b24 <CyU3PUsbSetupCommand+0x308>
40021b10:	e358000a 	cmp	r8, #10
40021b14:	0a0000c5 	beq	40021e30 <CyU3PUsbSetupCommand+0x614>
40021b18:	e358000b 	cmp	r8, #11
40021b1c:	1a000127 	bne	40021fc0 <CyU3PUsbSetupCommand+0x7a4>
40021b20:	ea0000d6 	b	40021e80 <CyU3PUsbSetupCommand+0x664>
40021b24:	e3580030 	cmp	r8, #48	; 0x30
40021b28:	0a0000f7 	beq	40021f0c <CyU3PUsbSetupCommand+0x6f0>
40021b2c:	e3580031 	cmp	r8, #49	; 0x31
40021b30:	1a000122 	bne	40021fc0 <CyU3PUsbSetupCommand+0x7a4>
40021b34:	ea000114 	b	40021f8c <CyU3PUsbSetupCommand+0x770>
40021b38:	e1a00000 	nop			; (mov r0, r0)
40021b3c:	e59d0008 	ldr	r0, [sp, #8]
40021b40:	e3500001 	cmp	r0, #1
40021b44:	1a00000c 	bne	40021b7c <CyU3PUsbSetupCommand+0x360>
40021b48:	e59f04c4 	ldr	r0, [pc, #1220]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021b4c:	e5900000 	ldr	r0, [r0]
40021b50:	e3500000 	cmp	r0, #0
40021b54:	0a000008 	beq	40021b7c <CyU3PUsbSetupCommand+0x360>
40021b58:	e1a01005 	mov	r1, r5
40021b5c:	e1a00004 	mov	r0, r4
40021b60:	e59f24ac 	ldr	r2, [pc, #1196]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021b64:	e5922000 	ldr	r2, [r2]
40021b68:	e12fff32 	blx	r2
40021b6c:	e1a07000 	mov	r7, r0
40021b70:	e3570000 	cmp	r7, #0
40021b74:	0a000000 	beq	40021b7c <CyU3PUsbSetupCommand+0x360>
40021b78:	ea000112 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021b7c:	e59d0008 	ldr	r0, [sp, #8]
40021b80:	e59d1004 	ldr	r1, [sp, #4]
40021b84:	ebfffbd3 	bl	40020ad8 <CyU3PUsbHandleGetStatus>
40021b88:	e1a07000 	mov	r7, r0
40021b8c:	ea00010d 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021b90:	e1a00000 	nop			; (mov r0, r0)
40021b94:	e59d0008 	ldr	r0, [sp, #8]
40021b98:	e3500000 	cmp	r0, #0
40021b9c:	1a000002 	bne	40021bac <CyU3PUsbSetupCommand+0x390>
40021ba0:	e20b00ff 	and	r0, fp, #255	; 0xff
40021ba4:	ebfffa86 	bl	400205c4 <CyU3PUsbHandleClearFeature>
40021ba8:	eaffffc3 	b	40021abc <CyU3PUsbSetupCommand+0x2a0>
40021bac:	e3a07000 	mov	r7, #0
40021bb0:	e59f0438 	ldr	r0, [pc, #1080]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021bb4:	e5d00007 	ldrb	r0, [r0, #7]
40021bb8:	e3500000 	cmp	r0, #0
40021bbc:	1a00000e 	bne	40021bfc <CyU3PUsbSetupCommand+0x3e0>
40021bc0:	e59f044c 	ldr	r0, [pc, #1100]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021bc4:	e5900000 	ldr	r0, [r0]
40021bc8:	e3500000 	cmp	r0, #0
40021bcc:	0a00000a 	beq	40021bfc <CyU3PUsbSetupCommand+0x3e0>
40021bd0:	e1a01005 	mov	r1, r5
40021bd4:	e1a00004 	mov	r0, r4
40021bd8:	e59f2434 	ldr	r2, [pc, #1076]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021bdc:	e5922000 	ldr	r2, [r2]
40021be0:	e12fff32 	blx	r2
40021be4:	e1a07000 	mov	r7, r0
40021be8:	e3570000 	cmp	r7, #0
40021bec:	0a000002 	beq	40021bfc <CyU3PUsbSetupCommand+0x3e0>
40021bf0:	e3a00001 	mov	r0, #1
40021bf4:	e59f13f4 	ldr	r1, [pc, #1012]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021bf8:	e5810040 	str	r0, [r1, #64]	; 0x40
40021bfc:	e3570000 	cmp	r7, #0
40021c00:	1a000011 	bne	40021c4c <CyU3PUsbSetupCommand+0x430>
40021c04:	e59d0008 	ldr	r0, [sp, #8]
40021c08:	e3500002 	cmp	r0, #2
40021c0c:	1a00000e 	bne	40021c4c <CyU3PUsbSetupCommand+0x430>
40021c10:	e35b0000 	cmp	fp, #0
40021c14:	1a00000c 	bne	40021c4c <CyU3PUsbSetupCommand+0x430>
40021c18:	e59d1004 	ldr	r1, [sp, #4]
40021c1c:	e20100ff 	and	r0, r1, #255	; 0xff
40021c20:	e3a02001 	mov	r2, #1
40021c24:	e3a01000 	mov	r1, #0
40021c28:	ebfff118 	bl	4001e090 <CyU3PUsbStall>
40021c2c:	e3500000 	cmp	r0, #0
40021c30:	1a000005 	bne	40021c4c <CyU3PUsbSetupCommand+0x430>
40021c34:	e59d1004 	ldr	r1, [sp, #4]
40021c38:	e20100ff 	and	r0, r1, #255	; 0xff
40021c3c:	ebffeeaf 	bl	4001d700 <CyU3PUsbResetEp>
40021c40:	ebffeb4e 	bl	4001c980 <CyU3PUsbAckSetup>
40021c44:	e3a07001 	mov	r7, #1
40021c48:	ea0000de 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021c4c:	ea0000dd 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021c50:	e1a00000 	nop			; (mov r0, r0)
40021c54:	e59d0008 	ldr	r0, [sp, #8]
40021c58:	e3500000 	cmp	r0, #0
40021c5c:	1a00001b 	bne	40021cd0 <CyU3PUsbSetupCommand+0x4b4>
40021c60:	e35b0003 	cmp	fp, #3
40021c64:	0a000004 	beq	40021c7c <CyU3PUsbSetupCommand+0x460>
40021c68:	e35b0004 	cmp	fp, #4
40021c6c:	0a000002 	beq	40021c7c <CyU3PUsbSetupCommand+0x460>
40021c70:	e20b00ff 	and	r0, fp, #255	; 0xff
40021c74:	ebfffbd5 	bl	40020bd0 <CyU3PUsbHandleSetFeature>
40021c78:	eaffff8f 	b	40021abc <CyU3PUsbSetupCommand+0x2a0>
40021c7c:	e59f036c 	ldr	r0, [pc, #876]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021c80:	e5d00007 	ldrb	r0, [r0, #7]
40021c84:	e3500000 	cmp	r0, #0
40021c88:	1a00000f 	bne	40021ccc <CyU3PUsbSetupCommand+0x4b0>
40021c8c:	e59f0380 	ldr	r0, [pc, #896]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021c90:	e5900000 	ldr	r0, [r0]
40021c94:	e3500000 	cmp	r0, #0
40021c98:	0a00000b 	beq	40021ccc <CyU3PUsbSetupCommand+0x4b0>
40021c9c:	e1a01005 	mov	r1, r5
40021ca0:	e1a00004 	mov	r0, r4
40021ca4:	e59f2368 	ldr	r2, [pc, #872]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021ca8:	e5922000 	ldr	r2, [r2]
40021cac:	e12fff32 	blx	r2
40021cb0:	e1a07000 	mov	r7, r0
40021cb4:	e3570000 	cmp	r7, #0
40021cb8:	0a000003 	beq	40021ccc <CyU3PUsbSetupCommand+0x4b0>
40021cbc:	e3a00001 	mov	r0, #1
40021cc0:	e59f1328 	ldr	r1, [pc, #808]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021cc4:	e5810040 	str	r0, [r1, #64]	; 0x40
40021cc8:	eaffff7b 	b	40021abc <CyU3PUsbSetupCommand+0x2a0>
40021ccc:	ea0000bd 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021cd0:	e3a07000 	mov	r7, #0
40021cd4:	e59f0314 	ldr	r0, [pc, #788]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021cd8:	e5d00007 	ldrb	r0, [r0, #7]
40021cdc:	e3500000 	cmp	r0, #0
40021ce0:	1a00000e 	bne	40021d20 <CyU3PUsbSetupCommand+0x504>
40021ce4:	e59f0328 	ldr	r0, [pc, #808]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021ce8:	e5900000 	ldr	r0, [r0]
40021cec:	e3500000 	cmp	r0, #0
40021cf0:	0a00000a 	beq	40021d20 <CyU3PUsbSetupCommand+0x504>
40021cf4:	e1a01005 	mov	r1, r5
40021cf8:	e1a00004 	mov	r0, r4
40021cfc:	e59f2310 	ldr	r2, [pc, #784]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021d00:	e5922000 	ldr	r2, [r2]
40021d04:	e12fff32 	blx	r2
40021d08:	e1a07000 	mov	r7, r0
40021d0c:	e3570000 	cmp	r7, #0
40021d10:	0a000002 	beq	40021d20 <CyU3PUsbSetupCommand+0x504>
40021d14:	e3a00001 	mov	r0, #1
40021d18:	e59f12d0 	ldr	r1, [pc, #720]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021d1c:	e5810040 	str	r0, [r1, #64]	; 0x40
40021d20:	e3570000 	cmp	r7, #0
40021d24:	1a00000d 	bne	40021d60 <CyU3PUsbSetupCommand+0x544>
40021d28:	e59d0008 	ldr	r0, [sp, #8]
40021d2c:	e3500002 	cmp	r0, #2
40021d30:	1a00000a 	bne	40021d60 <CyU3PUsbSetupCommand+0x544>
40021d34:	e35b0000 	cmp	fp, #0
40021d38:	1a000008 	bne	40021d60 <CyU3PUsbSetupCommand+0x544>
40021d3c:	e59d1004 	ldr	r1, [sp, #4]
40021d40:	e20100ff 	and	r0, r1, #255	; 0xff
40021d44:	e3a02000 	mov	r2, #0
40021d48:	e3a01001 	mov	r1, #1
40021d4c:	ebfff0cf 	bl	4001e090 <CyU3PUsbStall>
40021d50:	e3500000 	cmp	r0, #0
40021d54:	1a000001 	bne	40021d60 <CyU3PUsbSetupCommand+0x544>
40021d58:	ebffeb08 	bl	4001c980 <CyU3PUsbAckSetup>
40021d5c:	e3a07001 	mov	r7, #1
40021d60:	ea000098 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021d64:	e1a00000 	nop			; (mov r0, r0)
40021d68:	e1a01005 	mov	r1, r5
40021d6c:	e1a00004 	mov	r0, r4
40021d70:	ebfff5d5 	bl	4001f4cc <CyU3PUibSendDescr>
40021d74:	e1a07000 	mov	r7, r0
40021d78:	ea000092 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021d7c:	e1a00000 	nop			; (mov r0, r0)
40021d80:	e3a07001 	mov	r7, #1
40021d84:	e59f128c 	ldr	r1, [pc, #652]	; 40022018 <CyU3PUsbSetupCommand+0x7fc>
40021d88:	e3a00001 	mov	r0, #1
40021d8c:	ebffee94 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
40021d90:	e1a06000 	mov	r6, r0
40021d94:	ea00008b 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021d98:	e1a00000 	nop			; (mov r0, r0)
40021d9c:	e3a07001 	mov	r7, #1
40021da0:	e35b0000 	cmp	fp, #0
40021da4:	0a000005 	beq	40021dc0 <CyU3PUsbSetupCommand+0x5a4>
40021da8:	e35b0001 	cmp	fp, #1
40021dac:	1a00001a 	bne	40021e1c <CyU3PUsbSetupCommand+0x600>
40021db0:	e59f1238 	ldr	r1, [pc, #568]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021db4:	e5d10009 	ldrb	r0, [r1, #9]
40021db8:	ebfff8b8 	bl	400200a0 <CyU3PUsbEpPrepare>
40021dbc:	e1a00000 	nop			; (mov r0, r0)
40021dc0:	e35b0000 	cmp	fp, #0
40021dc4:	1a000001 	bne	40021dd0 <CyU3PUsbSetupCommand+0x5b4>
40021dc8:	e3a00005 	mov	r0, #5
40021dcc:	ea000000 	b	40021dd4 <CyU3PUsbSetupCommand+0x5b8>
40021dd0:	e3a00006 	mov	r0, #6
40021dd4:	e59f1214 	ldr	r1, [pc, #532]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021dd8:	e5c10008 	strb	r0, [r1, #8]
40021ddc:	e5c1b00c 	strb	fp, [r1, #12]
40021de0:	e2810000 	add	r0, r1, #0
40021de4:	e5d00006 	ldrb	r0, [r0, #6]
40021de8:	e2000001 	and	r0, r0, #1
40021dec:	e5c10006 	strb	r0, [r1, #6]
40021df0:	e59f0224 	ldr	r0, [pc, #548]	; 4002201c <CyU3PUsbSetupCommand+0x800>
40021df4:	e5900000 	ldr	r0, [r0]
40021df8:	e3500000 	cmp	r0, #0
40021dfc:	0a000004 	beq	40021e14 <CyU3PUsbSetupCommand+0x5f8>
40021e00:	e1a0100b 	mov	r1, fp
40021e04:	e3a00005 	mov	r0, #5
40021e08:	e59f220c 	ldr	r2, [pc, #524]	; 4002201c <CyU3PUsbSetupCommand+0x800>
40021e0c:	e5922000 	ldr	r2, [r2]
40021e10:	e12fff32 	blx	r2
40021e14:	ebffead9 	bl	4001c980 <CyU3PUsbAckSetup>
40021e18:	ea000002 	b	40021e28 <CyU3PUsbSetupCommand+0x60c>
40021e1c:	e1a00000 	nop			; (mov r0, r0)
40021e20:	e3a06040 	mov	r6, #64	; 0x40
40021e24:	e1a00000 	nop			; (mov r0, r0)
40021e28:	e1a00000 	nop			; (mov r0, r0)
40021e2c:	ea000065 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021e30:	e1a00000 	nop			; (mov r0, r0)
40021e34:	e59f01d8 	ldr	r0, [pc, #472]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021e38:	e5900000 	ldr	r0, [r0]
40021e3c:	e3500000 	cmp	r0, #0
40021e40:	0a000008 	beq	40021e68 <CyU3PUsbSetupCommand+0x64c>
40021e44:	e1a01005 	mov	r1, r5
40021e48:	e1a00004 	mov	r0, r4
40021e4c:	e59f21c0 	ldr	r2, [pc, #448]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021e50:	e5922000 	ldr	r2, [r2]
40021e54:	e12fff32 	blx	r2
40021e58:	e1a07000 	mov	r7, r0
40021e5c:	e3570000 	cmp	r7, #0
40021e60:	0a000000 	beq	40021e68 <CyU3PUsbSetupCommand+0x64c>
40021e64:	ea000057 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021e68:	e3a07001 	mov	r7, #1
40021e6c:	e59f11ac 	ldr	r1, [pc, #428]	; 40022020 <CyU3PUsbSetupCommand+0x804>
40021e70:	e3a00001 	mov	r0, #1
40021e74:	ebffee5a 	bl	4001d7e4 <CyU3PUsbSendEP0Data>
40021e78:	e1a06000 	mov	r6, r0
40021e7c:	ea000051 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021e80:	e1a00000 	nop			; (mov r0, r0)
40021e84:	e59f0188 	ldr	r0, [pc, #392]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021e88:	e5900000 	ldr	r0, [r0]
40021e8c:	e3500000 	cmp	r0, #0
40021e90:	0a000008 	beq	40021eb8 <CyU3PUsbSetupCommand+0x69c>
40021e94:	e1a01005 	mov	r1, r5
40021e98:	e1a00004 	mov	r0, r4
40021e9c:	e59f2170 	ldr	r2, [pc, #368]	; 40022014 <CyU3PUsbSetupCommand+0x7f8>
40021ea0:	e5922000 	ldr	r2, [r2]
40021ea4:	e12fff32 	blx	r2
40021ea8:	e1a07000 	mov	r7, r0
40021eac:	e3570000 	cmp	r7, #0
40021eb0:	0a000000 	beq	40021eb8 <CyU3PUsbSetupCommand+0x69c>
40021eb4:	ea000043 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021eb8:	e59f1130 	ldr	r1, [pc, #304]	; 40021ff0 <CyU3PUsbSetupCommand+0x7d4>
40021ebc:	e5c1b00d 	strb	fp, [r1, #13]
40021ec0:	e59f0154 	ldr	r0, [pc, #340]	; 4002201c <CyU3PUsbSetupCommand+0x800>
40021ec4:	e5900000 	ldr	r0, [r0]
40021ec8:	e3500000 	cmp	r0, #0
40021ecc:	0a000007 	beq	40021ef0 <CyU3PUsbSetupCommand+0x6d4>
40021ed0:	e20b00ff 	and	r0, fp, #255	; 0xff
40021ed4:	e59d2004 	ldr	r2, [sp, #4]
40021ed8:	e1800402 	orr	r0, r0, r2, lsl #8
40021edc:	e3c018ff 	bic	r1, r0, #16711680	; 0xff0000
40021ee0:	e3a00007 	mov	r0, #7
40021ee4:	e59f2130 	ldr	r2, [pc, #304]	; 4002201c <CyU3PUsbSetupCommand+0x800>
40021ee8:	e5922000 	ldr	r2, [r2]
40021eec:	e12fff32 	blx	r2
40021ef0:	e3a07001 	mov	r7, #1
40021ef4:	ebffeaa1 	bl	4001c980 <CyU3PUsbAckSetup>
40021ef8:	ea000032 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021efc:	e1a00000 	nop			; (mov r0, r0)
40021f00:	e3a07001 	mov	r7, #1
40021f04:	ebffea9d 	bl	4001c980 <CyU3PUsbAckSetup>
40021f08:	ea00002e 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021f0c:	e1a00000 	nop			; (mov r0, r0)
40021f10:	ebffec37 	bl	4001cff4 <CyU3PUsbGetSpeed>
40021f14:	e3500003 	cmp	r0, #3
40021f18:	1a000019 	bne	40021f84 <CyU3PUsbSetupCommand+0x768>
40021f1c:	e35b0000 	cmp	fp, #0
40021f20:	1a000017 	bne	40021f84 <CyU3PUsbSetupCommand+0x768>
40021f24:	e59d0004 	ldr	r0, [sp, #4]
40021f28:	e3500000 	cmp	r0, #0
40021f2c:	1a000014 	bne	40021f84 <CyU3PUsbSetupCommand+0x768>
40021f30:	e59d0000 	ldr	r0, [sp]
40021f34:	e3500006 	cmp	r0, #6
40021f38:	1a000011 	bne	40021f84 <CyU3PUsbSetupCommand+0x768>
40021f3c:	e3a07001 	mov	r7, #1
40021f40:	e3a02000 	mov	r2, #0
40021f44:	e59f10d8 	ldr	r1, [pc, #216]	; 40022024 <CyU3PUsbSetupCommand+0x808>
40021f48:	e3a00020 	mov	r0, #32
40021f4c:	ebffebb6 	bl	4001ce2c <CyU3PUsbGetEP0Data>
40021f50:	e1a06000 	mov	r6, r0
40021f54:	e59f00c0 	ldr	r0, [pc, #192]	; 4002201c <CyU3PUsbSetupCommand+0x800>
40021f58:	e5900000 	ldr	r0, [r0]
40021f5c:	e3500000 	cmp	r0, #0
40021f60:	0a000008 	beq	40021f88 <CyU3PUsbSetupCommand+0x76c>
40021f64:	e3560000 	cmp	r6, #0
40021f68:	1a000006 	bne	40021f88 <CyU3PUsbSetupCommand+0x76c>
40021f6c:	e3a01000 	mov	r1, #0
40021f70:	e3a00008 	mov	r0, #8
40021f74:	e59f20a0 	ldr	r2, [pc, #160]	; 4002201c <CyU3PUsbSetupCommand+0x800>
40021f78:	e5922000 	ldr	r2, [r2]
40021f7c:	e12fff32 	blx	r2
40021f80:	ea000000 	b	40021f88 <CyU3PUsbSetupCommand+0x76c>
40021f84:	e3a07000 	mov	r7, #0
40021f88:	ea00000e 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021f8c:	e1a00000 	nop			; (mov r0, r0)
40021f90:	ebffec17 	bl	4001cff4 <CyU3PUsbGetSpeed>
40021f94:	e3500003 	cmp	r0, #3
40021f98:	1a000007 	bne	40021fbc <CyU3PUsbSetupCommand+0x7a0>
40021f9c:	e59d0004 	ldr	r0, [sp, #4]
40021fa0:	e3500000 	cmp	r0, #0
40021fa4:	1a000004 	bne	40021fbc <CyU3PUsbSetupCommand+0x7a0>
40021fa8:	e59d0000 	ldr	r0, [sp]
40021fac:	e3500000 	cmp	r0, #0
40021fb0:	1a000001 	bne	40021fbc <CyU3PUsbSetupCommand+0x7a0>
40021fb4:	e3a07001 	mov	r7, #1
40021fb8:	ebffea70 	bl	4001c980 <CyU3PUsbAckSetup>
40021fbc:	ea000001 	b	40021fc8 <CyU3PUsbSetupCommand+0x7ac>
40021fc0:	e1a00000 	nop			; (mov r0, r0)
40021fc4:	e1a00000 	nop			; (mov r0, r0)
40021fc8:	e1a00000 	nop			; (mov r0, r0)
40021fcc:	e3570001 	cmp	r7, #1
40021fd0:	1a000001 	bne	40021fdc <CyU3PUsbSetupCommand+0x7c0>
40021fd4:	e3560000 	cmp	r6, #0
40021fd8:	0a000003 	beq	40021fec <CyU3PUsbSetupCommand+0x7d0>
40021fdc:	e3a02000 	mov	r2, #0
40021fe0:	e3a01001 	mov	r1, #1
40021fe4:	e1a00002 	mov	r0, r2
40021fe8:	ebfff028 	bl	4001e090 <CyU3PUsbStall>
40021fec:	eafffeb2 	b	40021abc <CyU3PUsbSetupCommand+0x2a0>
40021ff0:	40031d40 	.word	0x40031d40
40021ff4:	e0033000 	.word	0xe0033000
40021ff8:	40030db0 	.word	0x40030db0
40021ffc:	400326a0 	.word	0x400326a0
40022000:	40031eb8 	.word	0x40031eb8
40022004:	e0031000 	.word	0xe0031000
40022008:	40031b20 	.word	0x40031b20
4002200c:	40031a80 	.word	0x40031a80
40022010:	0000ffff 	.word	0x0000ffff
40022014:	40030da0 	.word	0x40030da0
40022018:	40031d4c 	.word	0x40031d4c
4002201c:	40030d9c 	.word	0x40030d9c
40022020:	40031d4d 	.word	0x40031d4d
40022024:	40032680 	.word	0x40032680

Disassembly of section i.CyU3PUsbSuspendHandler:

40022028 <CyU3PUsbSuspendHandler>:
40022028:	e92d4010 	push	{r4, lr}
4002202c:	e59f003c 	ldr	r0, [pc, #60]	; 40022070 <CyU3PUsbSuspendHandler+0x48>
40022030:	e5d00008 	ldrb	r0, [r0, #8]
40022034:	e3500005 	cmp	r0, #5
40022038:	ba00000b 	blt	4002206c <CyU3PUsbSuspendHandler+0x44>
4002203c:	e59f0030 	ldr	r0, [pc, #48]	; 40022074 <CyU3PUsbSuspendHandler+0x4c>
40022040:	e5900000 	ldr	r0, [r0]
40022044:	e3500000 	cmp	r0, #0
40022048:	0a000004 	beq	40022060 <CyU3PUsbSuspendHandler+0x38>
4002204c:	e3a01000 	mov	r1, #0
40022050:	e3a00002 	mov	r0, #2
40022054:	e59f2018 	ldr	r2, [pc, #24]	; 40022074 <CyU3PUsbSuspendHandler+0x4c>
40022058:	e5922000 	ldr	r2, [r2]
4002205c:	e12fff32 	blx	r2
40022060:	e3a00005 	mov	r0, #5
40022064:	e59f1004 	ldr	r1, [pc, #4]	; 40022070 <CyU3PUsbSuspendHandler+0x48>
40022068:	e5c10008 	strb	r0, [r1, #8]
4002206c:	e8bd8010 	pop	{r4, pc}
40022070:	40031d40 	.word	0x40031d40
40022074:	40030d9c 	.word	0x40030d9c

Disassembly of section i.HandleVbusOffEvent:

40022078 <HandleVbusOffEvent>:
40022078:	e92d4010 	push	{r4, lr}
4002207c:	e59f00e0 	ldr	r0, [pc, #224]	; 40022164 <HandleVbusOffEvent+0xec>
40022080:	e5d00009 	ldrb	r0, [r0, #9]
40022084:	e3500003 	cmp	r0, #3
40022088:	1a000002 	bne	40022098 <HandleVbusOffEvent+0x20>
4002208c:	e3a00001 	mov	r0, #1
40022090:	ebffec59 	bl	4001d1fc <CyU3PUsbPhyDisable>
40022094:	ea000022 	b	40022124 <HandleVbusOffEvent+0xac>
40022098:	e59f00c8 	ldr	r0, [pc, #200]	; 40022168 <HandleVbusOffEvent+0xf0>
4002209c:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400220a0:	e3100901 	tst	r0, #16384	; 0x4000
400220a4:	0a00001c 	beq	4002211c <HandleVbusOffEvent+0xa4>
400220a8:	e59f00b8 	ldr	r0, [pc, #184]	; 40022168 <HandleVbusOffEvent+0xf0>
400220ac:	e590080c 	ldr	r0, [r0, #2060]	; 0x80c
400220b0:	e3c00903 	bic	r0, r0, #49152	; 0xc000
400220b4:	e59f10ac 	ldr	r1, [pc, #172]	; 40022168 <HandleVbusOffEvent+0xf0>
400220b8:	e581080c 	str	r0, [r1, #2060]	; 0x80c
400220bc:	e3a00002 	mov	r0, #2
400220c0:	ebffc5fb 	bl	400138b4 <CyU3PBusyWait>
400220c4:	e59f00a0 	ldr	r0, [pc, #160]	; 4002216c <HandleVbusOffEvent+0xf4>
400220c8:	e5900004 	ldr	r0, [r0, #4]
400220cc:	e3c00ef3 	bic	r0, r0, #3888	; 0xf30
400220d0:	e59f1094 	ldr	r1, [pc, #148]	; 4002216c <HandleVbusOffEvent+0xf4>
400220d4:	e5810004 	str	r0, [r1, #4]
400220d8:	e3a00001 	mov	r0, #1
400220dc:	ebffc5f4 	bl	400138b4 <CyU3PBusyWait>
400220e0:	e59f0088 	ldr	r0, [pc, #136]	; 40022170 <HandleVbusOffEvent+0xf8>
400220e4:	e590001c 	ldr	r0, [r0, #28]
400220e8:	e3c0020e 	bic	r0, r0, #-536870912	; 0xe0000000
400220ec:	e59f107c 	ldr	r1, [pc, #124]	; 40022170 <HandleVbusOffEvent+0xf8>
400220f0:	e581001c 	str	r0, [r1, #28]
400220f4:	e59f0078 	ldr	r0, [pc, #120]	; 40022174 <HandleVbusOffEvent+0xfc>
400220f8:	e5900000 	ldr	r0, [r0]
400220fc:	e581002c 	str	r0, [r1, #44]	; 0x2c
40022100:	e3a00001 	mov	r0, #1
40022104:	ebffc5ea 	bl	400138b4 <CyU3PBusyWait>
40022108:	e59f005c 	ldr	r0, [pc, #92]	; 4002216c <HandleVbusOffEvent+0xf4>
4002210c:	e5900004 	ldr	r0, [r0, #4]
40022110:	e3800ef3 	orr	r0, r0, #3888	; 0xf30
40022114:	e59f1050 	ldr	r1, [pc, #80]	; 4002216c <HandleVbusOffEvent+0xf4>
40022118:	e5810004 	str	r0, [r1, #4]
4002211c:	e3a00000 	mov	r0, #0
40022120:	ebffec35 	bl	4001d1fc <CyU3PUsbPhyDisable>
40022124:	e3a01000 	mov	r1, #0
40022128:	e3a00001 	mov	r0, #1
4002212c:	e59f2044 	ldr	r2, [pc, #68]	; 40022178 <HandleVbusOffEvent+0x100>
40022130:	e5922000 	ldr	r2, [r2]
40022134:	e12fff32 	blx	r2
40022138:	e3a00000 	mov	r0, #0
4002213c:	e59f1020 	ldr	r1, [pc, #32]	; 40022164 <HandleVbusOffEvent+0xec>
40022140:	e581002c 	str	r0, [r1, #44]	; 0x2c
40022144:	e3a00004 	mov	r0, #4
40022148:	e5c10008 	strb	r0, [r1, #8]
4002214c:	e3a00000 	mov	r0, #0
40022150:	e5c10009 	strb	r0, [r1, #9]
40022154:	e5810054 	str	r0, [r1, #84]	; 0x54
40022158:	e5810058 	str	r0, [r1, #88]	; 0x58
4002215c:	e5810048 	str	r0, [r1, #72]	; 0x48
40022160:	e8bd8010 	pop	{r4, pc}
40022164:	40031d40 	.word	0x40031d40
40022168:	e0031000 	.word	0xe0031000
4002216c:	e0030000 	.word	0xe0030000
40022170:	e0033000 	.word	0xe0033000
40022174:	40030c58 	.word	0x40030c58
40022178:	40030d9c 	.word	0x40030d9c

Disassembly of section i.CyU3POsTimerInit:

4002217c <CyU3POsTimerInit>:
4002217c:	e92d4070 	push	{r4, r5, r6, lr}
40022180:	e1a04000 	mov	r4, r0
40022184:	e3a00004 	mov	r0, #4
40022188:	eb000047 	bl	400222ac <CyU3PVicDisableInt>
4002218c:	e59f00f0 	ldr	r0, [pc, #240]	; 40022284 <CyU3POsTimerInit+0x108>
40022190:	e5905014 	ldr	r5, [r0, #20]
40022194:	e3a00064 	mov	r0, #100	; 0x64
40022198:	ebffc5c5 	bl	400138b4 <CyU3PBusyWait>
4002219c:	e3850c03 	orr	r0, r5, #768	; 0x300
400221a0:	e59f10dc 	ldr	r1, [pc, #220]	; 40022284 <CyU3POsTimerInit+0x108>
400221a4:	e5810014 	str	r0, [r1, #20]
400221a8:	e3a00064 	mov	r0, #100	; 0x64
400221ac:	ebffc5c0 	bl	400138b4 <CyU3PBusyWait>
400221b0:	e59f00cc 	ldr	r0, [pc, #204]	; 40022284 <CyU3POsTimerInit+0x108>
400221b4:	e5905014 	ldr	r5, [r0, #20]
400221b8:	e3540000 	cmp	r4, #0
400221bc:	0a000001 	beq	400221c8 <CyU3POsTimerInit+0x4c>
400221c0:	e3540ffa 	cmp	r4, #1000	; 0x3e8
400221c4:	da000006 	ble	400221e4 <CyU3POsTimerInit+0x68>
400221c8:	e3a00001 	mov	r0, #1
400221cc:	e59f10b4 	ldr	r1, [pc, #180]	; 40022288 <CyU3POsTimerInit+0x10c>
400221d0:	e1c100b0 	strh	r0, [r1]
400221d4:	e3a00020 	mov	r0, #32
400221d8:	e59f10ac 	ldr	r1, [pc, #172]	; 4002228c <CyU3POsTimerInit+0x110>
400221dc:	e5810000 	str	r0, [r1]
400221e0:	ea000004 	b	400221f8 <CyU3POsTimerInit+0x7c>
400221e4:	e59f009c 	ldr	r0, [pc, #156]	; 40022288 <CyU3POsTimerInit+0x10c>
400221e8:	e1c040b0 	strh	r4, [r0]
400221ec:	e1a00284 	lsl	r0, r4, #5
400221f0:	e59f1094 	ldr	r1, [pc, #148]	; 4002228c <CyU3POsTimerInit+0x110>
400221f4:	e5810000 	str	r0, [r1]
400221f8:	e59f008c 	ldr	r0, [pc, #140]	; 4002228c <CyU3POsTimerInit+0x110>
400221fc:	e5900000 	ldr	r0, [r0]
40022200:	e2400007 	sub	r0, r0, #7
40022204:	e59f1080 	ldr	r1, [pc, #128]	; 4002228c <CyU3POsTimerInit+0x110>
40022208:	e5810000 	str	r0, [r1]
4002220c:	e3a06000 	mov	r6, #0
40022210:	ea000001 	b	4002221c <CyU3POsTimerInit+0xa0>
40022214:	e2860001 	add	r0, r6, #1
40022218:	e20060ff 	and	r6, r0, #255	; 0xff
4002221c:	e3a00001 	mov	r0, #1
40022220:	e1a00610 	lsl	r0, r0, r6
40022224:	e59f1060 	ldr	r1, [pc, #96]	; 4002228c <CyU3POsTimerInit+0x110>
40022228:	e5911000 	ldr	r1, [r1]
4002222c:	e1500001 	cmp	r0, r1
40022230:	9afffff7 	bls	40022214 <CyU3POsTimerInit+0x98>
40022234:	e59f0050 	ldr	r0, [pc, #80]	; 4002228c <CyU3POsTimerInit+0x110>
40022238:	e5900000 	ldr	r0, [r0]
4002223c:	e59f1040 	ldr	r1, [pc, #64]	; 40022284 <CyU3POsTimerInit+0x108>
40022240:	e581001c 	str	r0, [r1, #28]
40022244:	e3a00064 	mov	r0, #100	; 0x64
40022248:	ebffc599 	bl	400138b4 <CyU3PBusyWait>
4002224c:	e3a00004 	mov	r0, #4
40022250:	eb00001a 	bl	400222c0 <CyU3PVicEnableInt>
40022254:	e59f0028 	ldr	r0, [pc, #40]	; 40022284 <CyU3POsTimerInit+0x108>
40022258:	e5900014 	ldr	r0, [r0, #20]
4002225c:	e3c05c03 	bic	r5, r0, #768	; 0x300
40022260:	e3a00b01 	mov	r0, #1024	; 0x400
40022264:	e1800586 	orr	r0, r0, r6, lsl #11
40022268:	e1855000 	orr	r5, r5, r0
4002226c:	e3855c01 	orr	r5, r5, #256	; 0x100
40022270:	e3a00064 	mov	r0, #100	; 0x64
40022274:	ebffc58e 	bl	400138b4 <CyU3PBusyWait>
40022278:	e59f0004 	ldr	r0, [pc, #4]	; 40022284 <CyU3POsTimerInit+0x108>
4002227c:	e5805014 	str	r5, [r0, #20]
40022280:	e8bd8070 	pop	{r4, r5, r6, pc}
40022284:	e0050000 	.word	0xe0050000
40022288:	40030db8 	.word	0x40030db8
4002228c:	40030dbc 	.word	0x40030dbc

Disassembly of section i.CyU3PVicClearInt:

40022290 <CyU3PVicClearInt>:
40022290:	e3a00000 	mov	r0, #0
40022294:	e5000100 	str	r0, [r0, #-256]	; 0xffffff00
40022298:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableAllInterrupts:

4002229c <CyU3PVicDisableAllInterrupts>:
4002229c:	e3a01000 	mov	r1, #0
400222a0:	e5110ff0 	ldr	r0, [r1, #-4080]	; 0xfffff010
400222a4:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
400222a8:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicDisableInt:

400222ac <CyU3PVicDisableInt>:
400222ac:	e3a01001 	mov	r1, #1
400222b0:	e1a01011 	lsl	r1, r1, r0
400222b4:	e3a02000 	mov	r2, #0
400222b8:	e5021fec 	str	r1, [r2, #-4076]	; 0xfffff014
400222bc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInt:

400222c0 <CyU3PVicEnableInt>:
400222c0:	e3a01001 	mov	r1, #1
400222c4:	e1a01011 	lsl	r1, r1, r0
400222c8:	e3a02000 	mov	r2, #0
400222cc:	e5021ff0 	str	r1, [r2, #-4080]	; 0xfffff010
400222d0:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicEnableInterrupts:

400222d4 <CyU3PVicEnableInterrupts>:
400222d4:	e3a01000 	mov	r1, #0
400222d8:	e5010ff0 	str	r0, [r1, #-4080]	; 0xfffff010
400222dc:	e12fff1e 	bx	lr

Disassembly of section i.CyU3PVicInit:

400222e0 <CyU3PVicInit>:
400222e0:	e92d4010 	push	{r4, lr}
400222e4:	ee114f10 	mrc	15, 0, r4, cr1, cr0, {0}
400222e8:	e3c44a02 	bic	r4, r4, #8192	; 0x2000
400222ec:	ee014f10 	mcr	15, 0, r4, cr1, cr0, {0}
400222f0:	e3e00000 	mvn	r0, #0
400222f4:	e3a01000 	mov	r1, #0
400222f8:	e5010fec 	str	r0, [r1, #-4076]	; 0xfffff014
400222fc:	e3a00000 	mov	r0, #0
40022300:	e5104fec 	ldr	r4, [r0, #-4076]	; 0xfffff014
40022304:	e5000ff4 	str	r0, [r0, #-4084]	; 0xfffff00c
40022308:	ebffffe0 	bl	40022290 <CyU3PVicClearInt>
4002230c:	eb000001 	bl	40022318 <__CyU3PVicSetupIntVectors_veneer>
40022310:	e8bd8010 	pop	{r4, pc}
40022314:	00000000 	andeq	r0, r0, r0

40022318 <__CyU3PVicSetupIntVectors_veneer>:
40022318:	e51ff004 	ldr	pc, [pc, #-4]	; 4002231c <__CyU3PVicSetupIntVectors_veneer+0x4>
4002231c:	0000181c 	.word	0x0000181c

Disassembly of section i.CyFx3Usb2PhySetup:

40022320 <CyFx3Usb2PhySetup>:
40022320:	e59f0008 	ldr	r0, [pc, #8]	; 40022330 <CyFx3Usb2PhySetup+0x10>
40022324:	e59f1008 	ldr	r1, [pc, #8]	; 40022334 <CyFx3Usb2PhySetup+0x14>
40022328:	e581000c 	str	r0, [r1, #12]
4002232c:	e12fff1e 	bx	lr
40022330:	00d4a480 	.word	0x00d4a480
40022334:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3Usb3LnkRelaxHpTimeout:

40022338 <CyFx3Usb3LnkRelaxHpTimeout>:
40022338:	e59f0008 	ldr	r0, [pc, #8]	; 40022348 <CyFx3Usb3LnkRelaxHpTimeout+0x10>
4002233c:	e59f1008 	ldr	r1, [pc, #8]	; 4002234c <CyFx3Usb3LnkRelaxHpTimeout+0x14>
40022340:	e58100c4 	str	r0, [r1, #196]	; 0xc4
40022344:	e12fff1e 	bx	lr
40022348:	000009c4 	.word	0x000009c4
4002234c:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3Usb3LnkSetup:

40022350 <CyFx3Usb3LnkSetup>:
40022350:	e59f1024 	ldr	r1, [pc, #36]	; 4002237c <CyFx3Usb3LnkSetup+0x2c>
40022354:	e59f0024 	ldr	r0, [pc, #36]	; 40022380 <CyFx3Usb3LnkSetup+0x30>
40022358:	e580109c 	str	r1, [r0, #156]	; 0x9c
4002235c:	e5801080 	str	r1, [r0, #128]	; 0x80
40022360:	e59f101c 	ldr	r1, [pc, #28]	; 40022384 <CyFx3Usb3LnkSetup+0x34>
40022364:	e5801084 	str	r1, [r0, #132]	; 0x84
40022368:	e59f1018 	ldr	r1, [pc, #24]	; 40022388 <CyFx3Usb3LnkSetup+0x38>
4002236c:	e58010c4 	str	r1, [r0, #196]	; 0xc4
40022370:	e3a0107d 	mov	r1, #125	; 0x7d
40022374:	e5801078 	str	r1, [r0, #120]	; 0x78
40022378:	e12fff1e 	bx	lr
4002237c:	00002710 	.word	0x00002710
40022380:	e0033000 	.word	0xe0033000
40022384:	00fa004b 	.word	0x00fa004b
40022388:	00000177 	.word	0x00000177

Disassembly of section i.CyFx3Usb3SendTP:

4002238c <CyFx3Usb3SendTP>:
4002238c:	e5902000 	ldr	r2, [r0]
40022390:	e59f1020 	ldr	r1, [pc, #32]	; 400223b8 <CyFx3Usb3SendTP+0x2c>
40022394:	e5812450 	str	r2, [r1, #1104]	; 0x450
40022398:	e5902004 	ldr	r2, [r0, #4]
4002239c:	e5812454 	str	r2, [r1, #1108]	; 0x454
400223a0:	e5900008 	ldr	r0, [r0, #8]
400223a4:	e5810458 	str	r0, [r1, #1112]	; 0x458
400223a8:	e5910460 	ldr	r0, [r1, #1120]	; 0x460
400223ac:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
400223b0:	e5810460 	str	r0, [r1, #1120]	; 0x460
400223b4:	e12fff1e 	bx	lr
400223b8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyFx3UsbDmaPrefetchEnable:

400223bc <CyFx3UsbDmaPrefetchEnable>:
400223bc:	e3500000 	cmp	r0, #0
400223c0:	e59f001c 	ldr	r0, [pc, #28]	; 400223e4 <CyFx3UsbDmaPrefetchEnable+0x28>
400223c4:	e3a01206 	mov	r1, #1610612736	; 0x60000000
400223c8:	e5902ff8 	ldr	r2, [r0, #4088]	; 0xff8
400223cc:	12811a09 	addne	r1, r1, #36864	; 0x9000
400223d0:	e3c22903 	bic	r2, r2, #49152	; 0xc000
400223d4:	e3c22dff 	bic	r2, r2, #16320	; 0x3fc0
400223d8:	e1811002 	orr	r1, r1, r2
400223dc:	e5801ff8 	str	r1, [r0, #4088]	; 0xff8
400223e0:	e12fff1e 	bx	lr
400223e4:	e003f000 	.word	0xe003f000

Disassembly of section i.CyFx3UsbPowerOn:

400223e8 <CyFx3UsbPowerOn>:
400223e8:	e92d4010 	push	{r4, lr}
400223ec:	e59f406c 	ldr	r4, [pc, #108]	; 40022460 <CyFx3UsbPowerOn+0x78>
400223f0:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
400223f4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
400223f8:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
400223fc:	e3a0000a 	mov	r0, #10
40022400:	ebffca78 	bl	40014de8 <CyFx3BusyWait>
40022404:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
40022408:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002240c:	e5840f04 	str	r0, [r4, #3844]	; 0xf04
40022410:	e3a00064 	mov	r0, #100	; 0x64
40022414:	ebffca73 	bl	40014de8 <CyFx3BusyWait>
40022418:	e5940f04 	ldr	r0, [r4, #3844]	; 0xf04
4002241c:	e3100001 	tst	r0, #1
40022420:	0afffffc 	beq	40022418 <CyFx3UsbPowerOn+0x30>
40022424:	ebffca65 	bl	40014dc0 <CyFx3DevIsUsb3Supported>
40022428:	e59f4034 	ldr	r4, [pc, #52]	; 40022464 <CyFx3UsbPowerOn+0x7c>
4002242c:	e3500000 	cmp	r0, #0
40022430:	03a00102 	moveq	r0, #-2147483648	; 0x80000000
40022434:	0584080c 	streq	r0, [r4, #2060]	; 0x80c
40022438:	03a0000a 	moveq	r0, #10
4002243c:	0bffca69 	bleq	40014de8 <CyFx3BusyWait>
40022440:	ebffca40 	bl	40014d48 <CyFx3DevIsOtgSupported>
40022444:	e3500000 	cmp	r0, #0
40022448:	18bd8010 	popne	{r4, pc}
4002244c:	e3a00101 	mov	r0, #1073741824	; 0x40000000
40022450:	e584080c 	str	r0, [r4, #2060]	; 0x80c
40022454:	e8bd4010 	pop	{r4, lr}
40022458:	e3a0000a 	mov	r0, #10
4002245c:	eaffca61 	b	40014de8 <CyFx3BusyWait>
40022460:	e0037000 	.word	0xe0037000
40022464:	e0031000 	.word	0xe0031000

Disassembly of section i.CyFx3UsbWritePhyReg:

40022468 <CyFx3UsbWritePhyReg>:
40022468:	e59f2084 	ldr	r2, [pc, #132]	; 400224f4 <CyFx3UsbWritePhyReg+0x8c>
4002246c:	e592280c 	ldr	r2, [r2, #2060]	; 0x80c
40022470:	e3120901 	tst	r2, #16384	; 0x4000
40022474:	012fff1e 	bxeq	lr
40022478:	e59f2078 	ldr	r2, [pc, #120]	; 400224f8 <CyFx3UsbWritePhyReg+0x90>
4002247c:	e5820024 	str	r0, [r2, #36]	; 0x24
40022480:	e3803801 	orr	r3, r0, #65536	; 0x10000
40022484:	e5823024 	str	r3, [r2, #36]	; 0x24
40022488:	e5923028 	ldr	r3, [r2, #40]	; 0x28
4002248c:	e3130801 	tst	r3, #65536	; 0x10000
40022490:	0afffffc 	beq	40022488 <CyFx3UsbWritePhyReg+0x20>
40022494:	e5820024 	str	r0, [r2, #36]	; 0x24
40022498:	e5920028 	ldr	r0, [r2, #40]	; 0x28
4002249c:	e3100801 	tst	r0, #65536	; 0x10000
400224a0:	1afffffc 	bne	40022498 <CyFx3UsbWritePhyReg+0x30>
400224a4:	e5821024 	str	r1, [r2, #36]	; 0x24
400224a8:	e3810802 	orr	r0, r1, #131072	; 0x20000
400224ac:	e5820024 	str	r0, [r2, #36]	; 0x24
400224b0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224b4:	e3100801 	tst	r0, #65536	; 0x10000
400224b8:	0afffffc 	beq	400224b0 <CyFx3UsbWritePhyReg+0x48>
400224bc:	e5821024 	str	r1, [r2, #36]	; 0x24
400224c0:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224c4:	e3100801 	tst	r0, #65536	; 0x10000
400224c8:	1afffffc 	bne	400224c0 <CyFx3UsbWritePhyReg+0x58>
400224cc:	e3810702 	orr	r0, r1, #524288	; 0x80000
400224d0:	e5820024 	str	r0, [r2, #36]	; 0x24
400224d4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224d8:	e3100801 	tst	r0, #65536	; 0x10000
400224dc:	0afffffc 	beq	400224d4 <CyFx3UsbWritePhyReg+0x6c>
400224e0:	e5821024 	str	r1, [r2, #36]	; 0x24
400224e4:	e5920028 	ldr	r0, [r2, #40]	; 0x28
400224e8:	e3100801 	tst	r0, #65536	; 0x10000
400224ec:	1afffffc 	bne	400224e4 <CyFx3UsbWritePhyReg+0x7c>
400224f0:	e12fff1e 	bx	lr
400224f4:	e0031000 	.word	0xe0031000
400224f8:	e0033000 	.word	0xe0033000

Disassembly of section i.CyU3PDmaDscrChainCreate:

400224fc <CyU3PDmaDscrChainCreate>:
400224fc:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}
40022500:	e24dd018 	sub	sp, sp, #24
40022504:	e1a04000 	mov	r4, r0
40022508:	e1a05001 	mov	r5, r1
4002250c:	e1a06002 	mov	r6, r2
40022510:	e1a07003 	mov	r7, r3
40022514:	e3a0a000 	mov	sl, #0
40022518:	eb0000a6 	bl	400227b8 <CyU3PDmaDscrGetFreeCount>
4002251c:	e1500005 	cmp	r0, r5
40022520:	aa000002 	bge	40022530 <CyU3PDmaDscrChainCreate+0x34>
40022524:	e3a00010 	mov	r0, #16
40022528:	e28dd018 	add	sp, sp, #24
4002252c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
40022530:	e3540000 	cmp	r4, #0
40022534:	1a000001 	bne	40022540 <CyU3PDmaDscrChainCreate+0x44>
40022538:	e3a00040 	mov	r0, #64	; 0x40
4002253c:	eafffff9 	b	40022528 <CyU3PDmaDscrChainCreate+0x2c>
40022540:	e3550000 	cmp	r5, #0
40022544:	1a000001 	bne	40022550 <CyU3PDmaDscrChainCreate+0x54>
40022548:	e3a00040 	mov	r0, #64	; 0x40
4002254c:	eafffff5 	b	40022528 <CyU3PDmaDscrChainCreate+0x2c>
40022550:	e1a09005 	mov	r9, r5
40022554:	e1a00004 	mov	r0, r4
40022558:	eb00005e 	bl	400226d8 <CyU3PDmaDscrGet>
4002255c:	e1d480b0 	ldrh	r8, [r4]
40022560:	ea000029 	b	4002260c <CyU3PDmaDscrChainCreate+0x110>
40022564:	e3590000 	cmp	r9, #0
40022568:	0a000002 	beq	40022578 <CyU3PDmaDscrChainCreate+0x7c>
4002256c:	e28d0014 	add	r0, sp, #20
40022570:	eb000058 	bl	400226d8 <CyU3PDmaDscrGet>
40022574:	ea000001 	b	40022580 <CyU3PDmaDscrChainCreate+0x84>
40022578:	e1d400b0 	ldrh	r0, [r4]
4002257c:	e58d0014 	str	r0, [sp, #20]
40022580:	e3560000 	cmp	r6, #0
40022584:	0a000015 	beq	400225e0 <CyU3PDmaDscrChainCreate+0xe4>
40022588:	e35a0000 	cmp	sl, #0
4002258c:	1a000013 	bne	400225e0 <CyU3PDmaDscrChainCreate+0xe4>
40022590:	e1a00006 	mov	r0, r6
40022594:	ebff85f3 	bl	40003d68 <CyU3PDmaBufferAlloc>
40022598:	e58d0004 	str	r0, [sp, #4]
4002259c:	e59f00a0 	ldr	r0, [pc, #160]	; 40022644 <CyU3PDmaDscrChainCreate+0x148>
400225a0:	e0000006 	and	r0, r0, r6
400225a4:	e58d0010 	str	r0, [sp, #16]
400225a8:	e59d0004 	ldr	r0, [sp, #4]
400225ac:	e3500000 	cmp	r0, #0
400225b0:	1a000000 	bne	400225b8 <CyU3PDmaDscrChainCreate+0xbc>
400225b4:	e3a0a010 	mov	sl, #16
400225b8:	e59d0004 	ldr	r0, [sp, #4]
400225bc:	e3500101 	cmp	r0, #1073741824	; 0x40000000
400225c0:	3a000004 	bcc	400225d8 <CyU3PDmaDscrChainCreate+0xdc>
400225c4:	e59d0004 	ldr	r0, [sp, #4]
400225c8:	e0800006 	add	r0, r0, r6
400225cc:	e59f1074 	ldr	r1, [pc, #116]	; 40022648 <CyU3PDmaDscrChainCreate+0x14c>
400225d0:	e1500001 	cmp	r0, r1
400225d4:	3a000004 	bcc	400225ec <CyU3PDmaDscrChainCreate+0xf0>
400225d8:	e3a0a010 	mov	sl, #16
400225dc:	ea000002 	b	400225ec <CyU3PDmaDscrChainCreate+0xf0>
400225e0:	e3a00000 	mov	r0, #0
400225e4:	e58d0004 	str	r0, [sp, #4]
400225e8:	e58d0010 	str	r0, [sp, #16]
400225ec:	e58d7008 	str	r7, [sp, #8]
400225f0:	e1dd01b4 	ldrh	r0, [sp, #20]
400225f4:	e1800800 	orr	r0, r0, r0, lsl #16
400225f8:	e58d000c 	str	r0, [sp, #12]
400225fc:	e28d1004 	add	r1, sp, #4
40022600:	e1a00008 	mov	r0, r8
40022604:	eb0000c6 	bl	40022924 <CyU3PDmaDscrSetConfig>
40022608:	e1dd81b4 	ldrh	r8, [sp, #20]
4002260c:	e1b00009 	movs	r0, r9
40022610:	e2491001 	sub	r1, r9, #1
40022614:	e1a09801 	lsl	r9, r1, #16
40022618:	e1a09829 	lsr	r9, r9, #16
4002261c:	1affffd0 	bne	40022564 <CyU3PDmaDscrChainCreate+0x68>
40022620:	e35a0000 	cmp	sl, #0
40022624:	0a000004 	beq	4002263c <CyU3PDmaDscrChainCreate+0x140>
40022628:	e1d400b0 	ldrh	r0, [r4]
4002262c:	e3a03001 	mov	r3, #1
40022630:	e1a02003 	mov	r2, r3
40022634:	e1a01005 	mov	r1, r5
40022638:	eb000003 	bl	4002264c <CyU3PDmaDscrChainDestroy>
4002263c:	e1a0000a 	mov	r0, sl
40022640:	eaffffb8 	b	40022528 <CyU3PDmaDscrChainCreate+0x2c>
40022644:	0000fff0 	.word	0x0000fff0
40022648:	40080000 	.word	0x40080000

Disassembly of section i.CyU3PDmaDscrChainDestroy:

4002264c <CyU3PDmaDscrChainDestroy>:
4002264c:	e92d41ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
40022650:	e1a04000 	mov	r4, r0
40022654:	e1a05001 	mov	r5, r1
40022658:	e1a06002 	mov	r6, r2
4002265c:	e1a07003 	mov	r7, r3
40022660:	ea000015 	b	400226bc <CyU3PDmaDscrChainDestroy+0x70>
40022664:	e1a0100d 	mov	r1, sp
40022668:	e1a00004 	mov	r0, r4
4002266c:	eb000091 	bl	400228b8 <CyU3PDmaDscrGetConfig>
40022670:	e3570000 	cmp	r7, #0
40022674:	0a000004 	beq	4002268c <CyU3PDmaDscrChainDestroy+0x40>
40022678:	e59d0000 	ldr	r0, [sp]
4002267c:	e3500000 	cmp	r0, #0
40022680:	0a000001 	beq	4002268c <CyU3PDmaDscrChainDestroy+0x40>
40022684:	e59d0000 	ldr	r0, [sp]
40022688:	ebff8619 	bl	40003ef4 <CyU3PDmaBufferFree>
4002268c:	e3560000 	cmp	r6, #0
40022690:	0a000003 	beq	400226a4 <CyU3PDmaDscrChainDestroy+0x58>
40022694:	e59d0008 	ldr	r0, [sp, #8]
40022698:	e59f1034 	ldr	r1, [pc, #52]	; 400226d4 <CyU3PDmaDscrChainDestroy+0x88>
4002269c:	e0018820 	and	r8, r1, r0, lsr #16
400226a0:	ea000002 	b	400226b0 <CyU3PDmaDscrChainDestroy+0x64>
400226a4:	e59d0008 	ldr	r0, [sp, #8]
400226a8:	e1a08800 	lsl	r8, r0, #16
400226ac:	e1a08828 	lsr	r8, r8, #16
400226b0:	e1a00004 	mov	r0, r4
400226b4:	eb000058 	bl	4002281c <CyU3PDmaDscrPut>
400226b8:	e1a04008 	mov	r4, r8
400226bc:	e1b00005 	movs	r0, r5
400226c0:	e2451001 	sub	r1, r5, #1
400226c4:	e1a05801 	lsl	r5, r1, #16
400226c8:	e1a05825 	lsr	r5, r5, #16
400226cc:	1affffe4 	bne	40022664 <CyU3PDmaDscrChainDestroy+0x18>
400226d0:	e8bd81ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, pc}
400226d4:	0000ffff 	.word	0x0000ffff

Disassembly of section i.CyU3PDmaDscrGet:

400226d8 <CyU3PDmaDscrGet>:
400226d8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
400226dc:	e1a04000 	mov	r4, r0
400226e0:	e3a08000 	mov	r8, #0
400226e4:	e3540000 	cmp	r4, #0
400226e8:	1a000001 	bne	400226f4 <CyU3PDmaDscrGet+0x1c>
400226ec:	e3a00040 	mov	r0, #64	; 0x40
400226f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400226f4:	e3e01000 	mvn	r1, #0
400226f8:	e59f00ac 	ldr	r0, [pc, #172]	; 400227ac <CyU3PDmaDscrGet+0xd4>
400226fc:	ebff9eed 	bl	4000a2b8 <_txe_mutex_get>
40022700:	e59f00a8 	ldr	r0, [pc, #168]	; 400227b0 <CyU3PDmaDscrGet+0xd8>
40022704:	e1d000b0 	ldrh	r0, [r0]
40022708:	e3500000 	cmp	r0, #0
4002270c:	0a000022 	beq	4002279c <CyU3PDmaDscrGet+0xc4>
40022710:	e3a06000 	mov	r6, #0
40022714:	ea00001e 	b	40022794 <CyU3PDmaDscrGet+0xbc>
40022718:	e59f0094 	ldr	r0, [pc, #148]	; 400227b4 <CyU3PDmaDscrGet+0xdc>
4002271c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022720:	e3750001 	cmn	r5, #1
40022724:	0a000017 	beq	40022788 <CyU3PDmaDscrGet+0xb0>
40022728:	e3a07001 	mov	r7, #1
4002272c:	ea000012 	b	4002277c <CyU3PDmaDscrGet+0xa4>
40022730:	e1150007 	tst	r5, r7
40022734:	1a00000d 	bne	40022770 <CyU3PDmaDscrGet+0x98>
40022738:	e1850007 	orr	r0, r5, r7
4002273c:	e59f1070 	ldr	r1, [pc, #112]	; 400227b4 <CyU3PDmaDscrGet+0xdc>
40022740:	e7810106 	str	r0, [r1, r6, lsl #2]
40022744:	e2410004 	sub	r0, r1, #4
40022748:	e1c080b2 	strh	r8, [r0, #2]
4002274c:	e1d000b0 	ldrh	r0, [r0]
40022750:	e2400001 	sub	r0, r0, #1
40022754:	e2411004 	sub	r1, r1, #4
40022758:	e1c100b0 	strh	r0, [r1]
4002275c:	e1c480b0 	strh	r8, [r4]
40022760:	e2810044 	add	r0, r1, #68	; 0x44
40022764:	ebff9f08 	bl	4000a38c <_txe_mutex_put>
40022768:	e3a00000 	mov	r0, #0
4002276c:	eaffffdf 	b	400226f0 <CyU3PDmaDscrGet+0x18>
40022770:	e1a07087 	lsl	r7, r7, #1
40022774:	e2880001 	add	r0, r8, #1
40022778:	e3c08801 	bic	r8, r0, #65536	; 0x10000
4002277c:	e3570000 	cmp	r7, #0
40022780:	1affffea 	bne	40022730 <CyU3PDmaDscrGet+0x58>
40022784:	ea000001 	b	40022790 <CyU3PDmaDscrGet+0xb8>
40022788:	e2880020 	add	r0, r8, #32
4002278c:	e3c08801 	bic	r8, r0, #65536	; 0x10000
40022790:	e2866001 	add	r6, r6, #1
40022794:	e3560010 	cmp	r6, #16
40022798:	3affffde 	bcc	40022718 <CyU3PDmaDscrGet+0x40>
4002279c:	e59f0008 	ldr	r0, [pc, #8]	; 400227ac <CyU3PDmaDscrGet+0xd4>
400227a0:	ebff9ef9 	bl	4000a38c <_txe_mutex_put>
400227a4:	e3a0004a 	mov	r0, #74	; 0x4a
400227a8:	eaffffd0 	b	400226f0 <CyU3PDmaDscrGet+0x18>
400227ac:	4003273c 	.word	0x4003273c
400227b0:	400326f8 	.word	0x400326f8
400227b4:	400326fc 	.word	0x400326fc

Disassembly of section i.CyU3PDmaDscrGetFreeCount:

400227b8 <CyU3PDmaDscrGetFreeCount>:
400227b8:	e59f0004 	ldr	r0, [pc, #4]	; 400227c4 <CyU3PDmaDscrGetFreeCount+0xc>
400227bc:	e1d000b0 	ldrh	r0, [r0]
400227c0:	e12fff1e 	bx	lr
400227c4:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrListCreate:

400227c8 <CyU3PDmaDscrListCreate>:
400227c8:	e92d4010 	push	{r4, lr}
400227cc:	e3a02040 	mov	r2, #64	; 0x40
400227d0:	e3a01000 	mov	r1, #0
400227d4:	e59f0034 	ldr	r0, [pc, #52]	; 40022810 <CyU3PDmaDscrListCreate+0x48>
400227d8:	ebff83b6 	bl	400036b8 <CyU3PMemSet>
400227dc:	e3a00001 	mov	r0, #1
400227e0:	e59f102c 	ldr	r1, [pc, #44]	; 40022814 <CyU3PDmaDscrListCreate+0x4c>
400227e4:	e5810004 	str	r0, [r1, #4]
400227e8:	e3e00cfe 	mvn	r0, #65024	; 0xfe00
400227ec:	e1c100b0 	strh	r0, [r1]
400227f0:	e3a00001 	mov	r0, #1
400227f4:	e1c100b2 	strh	r0, [r1, #2]
400227f8:	e3a03038 	mov	r3, #56	; 0x38
400227fc:	e3a02000 	mov	r2, #0
40022800:	e1a01002 	mov	r1, r2
40022804:	e59f000c 	ldr	r0, [pc, #12]	; 40022818 <CyU3PDmaDscrListCreate+0x50>
40022808:	ebff9e2c 	bl	4000a0c0 <_txe_mutex_create>
4002280c:	e8bd8010 	pop	{r4, pc}
40022810:	400326fc 	.word	0x400326fc
40022814:	400326f8 	.word	0x400326f8
40022818:	4003273c 	.word	0x4003273c

Disassembly of section i.CyU3PDmaDscrPut:

4002281c <CyU3PDmaDscrPut>:
4002281c:	e92d4070 	push	{r4, r5, r6, lr}
40022820:	e1a04000 	mov	r4, r0
40022824:	e3540c02 	cmp	r4, #512	; 0x200
40022828:	aa000001 	bge	40022834 <CyU3PDmaDscrPut+0x18>
4002282c:	e3540000 	cmp	r4, #0
40022830:	1a000001 	bne	4002283c <CyU3PDmaDscrPut+0x20>
40022834:	e3a00040 	mov	r0, #64	; 0x40
40022838:	e8bd8070 	pop	{r4, r5, r6, pc}
4002283c:	e3e01000 	mvn	r1, #0
40022840:	e59f0064 	ldr	r0, [pc, #100]	; 400228ac <CyU3PDmaDscrPut+0x90>
40022844:	ebff9e9b 	bl	4000a2b8 <_txe_mutex_get>
40022848:	e1a00004 	mov	r0, r4
4002284c:	e1a01fc4 	asr	r1, r4, #31
40022850:	e0841da1 	add	r1, r4, r1, lsr #27
40022854:	e1a062c1 	asr	r6, r1, #5
40022858:	e59f0050 	ldr	r0, [pc, #80]	; 400228b0 <CyU3PDmaDscrPut+0x94>
4002285c:	e7905106 	ldr	r5, [r0, r6, lsl #2]
40022860:	e1a00004 	mov	r0, r4
40022864:	e1a01fc4 	asr	r1, r4, #31
40022868:	e0841da1 	add	r1, r4, r1, lsr #27
4002286c:	e1a012c1 	asr	r1, r1, #5
40022870:	e0441281 	sub	r1, r4, r1, lsl #5
40022874:	e3a02001 	mov	r2, #1
40022878:	e1c55112 	bic	r5, r5, r2, lsl r1
4002287c:	e59f002c 	ldr	r0, [pc, #44]	; 400228b0 <CyU3PDmaDscrPut+0x94>
40022880:	e7805106 	str	r5, [r0, r6, lsl #2]
40022884:	e2400004 	sub	r0, r0, #4
40022888:	e1d000b0 	ldrh	r0, [r0]
4002288c:	e2800001 	add	r0, r0, #1
40022890:	e3c00801 	bic	r0, r0, #65536	; 0x10000
40022894:	e59f1018 	ldr	r1, [pc, #24]	; 400228b4 <CyU3PDmaDscrPut+0x98>
40022898:	e1c100b0 	strh	r0, [r1]
4002289c:	e2810044 	add	r0, r1, #68	; 0x44
400228a0:	ebff9eb9 	bl	4000a38c <_txe_mutex_put>
400228a4:	e3a00000 	mov	r0, #0
400228a8:	eaffffe2 	b	40022838 <CyU3PDmaDscrPut+0x1c>
400228ac:	4003273c 	.word	0x4003273c
400228b0:	400326fc 	.word	0x400326fc
400228b4:	400326f8 	.word	0x400326f8

Disassembly of section i.CyU3PDmaDscrGetConfig:

400228b8 <CyU3PDmaDscrGetConfig>:
400228b8:	e92d4070 	push	{r4, r5, r6, lr}
400228bc:	e1a05000 	mov	r5, r0
400228c0:	e1a04001 	mov	r4, r1
400228c4:	e3550c02 	cmp	r5, #512	; 0x200
400228c8:	aa000001 	bge	400228d4 <CyU3PDmaDscrGetConfig+0x1c>
400228cc:	e3550000 	cmp	r5, #0
400228d0:	1a000001 	bne	400228dc <CyU3PDmaDscrGetConfig+0x24>
400228d4:	e3a00040 	mov	r0, #64	; 0x40
400228d8:	e8bd8070 	pop	{r4, r5, r6, pc}
400228dc:	e3540000 	cmp	r4, #0
400228e0:	1a000001 	bne	400228ec <CyU3PDmaDscrGetConfig+0x34>
400228e4:	e3a00040 	mov	r0, #64	; 0x40
400228e8:	eafffffa 	b	400228d8 <CyU3PDmaDscrGetConfig+0x20>
400228ec:	e59f102c 	ldr	r1, [pc, #44]	; 40022920 <CyU3PDmaDscrGetConfig+0x68>
400228f0:	e5911000 	ldr	r1, [r1]
400228f4:	e0810205 	add	r0, r1, r5, lsl #4
400228f8:	e3a01010 	mov	r1, #16
400228fc:	ebffbea5 	bl	40012398 <CyU3PSysClearDRegion>
40022900:	ebffc119 	bl	40012d6c <CyU3PSysBarrierSync>
40022904:	e59f0014 	ldr	r0, [pc, #20]	; 40022920 <CyU3PDmaDscrGetConfig+0x68>
40022908:	e5900000 	ldr	r0, [r0]
4002290c:	e0800205 	add	r0, r0, r5, lsl #4
40022910:	e890004e 	ldm	r0, {r1, r2, r3, r6}
40022914:	e884004e 	stm	r4, {r1, r2, r3, r6}
40022918:	e3a00000 	mov	r0, #0
4002291c:	eaffffed 	b	400228d8 <CyU3PDmaDscrGetConfig+0x20>
40022920:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaDscrSetConfig:

40022924 <CyU3PDmaDscrSetConfig>:
40022924:	e92d4070 	push	{r4, r5, r6, lr}
40022928:	e1a04000 	mov	r4, r0
4002292c:	e1a05001 	mov	r5, r1
40022930:	e3540c02 	cmp	r4, #512	; 0x200
40022934:	aa000001 	bge	40022940 <CyU3PDmaDscrSetConfig+0x1c>
40022938:	e3540000 	cmp	r4, #0
4002293c:	1a000001 	bne	40022948 <CyU3PDmaDscrSetConfig+0x24>
40022940:	e3a00040 	mov	r0, #64	; 0x40
40022944:	e8bd8070 	pop	{r4, r5, r6, pc}
40022948:	e3550000 	cmp	r5, #0
4002294c:	1a000001 	bne	40022958 <CyU3PDmaDscrSetConfig+0x34>
40022950:	e3a00040 	mov	r0, #64	; 0x40
40022954:	eafffffa 	b	40022944 <CyU3PDmaDscrSetConfig+0x20>
40022958:	e59f002c 	ldr	r0, [pc, #44]	; 4002298c <CyU3PDmaDscrSetConfig+0x68>
4002295c:	e5900000 	ldr	r0, [r0]
40022960:	e0800204 	add	r0, r0, r4, lsl #4
40022964:	e895004e 	ldm	r5, {r1, r2, r3, r6}
40022968:	e880004e 	stm	r0, {r1, r2, r3, r6}
4002296c:	e59f1018 	ldr	r1, [pc, #24]	; 4002298c <CyU3PDmaDscrSetConfig+0x68>
40022970:	e5911000 	ldr	r1, [r1]
40022974:	e0810204 	add	r0, r1, r4, lsl #4
40022978:	e3a01010 	mov	r1, #16
4002297c:	ebffbe85 	bl	40012398 <CyU3PSysClearDRegion>
40022980:	ebffc0f9 	bl	40012d6c <CyU3PSysBarrierSync>
40022984:	e3a00000 	mov	r0, #0
40022988:	eaffffed 	b	40022944 <CyU3PDmaDscrSetConfig+0x20>
4002298c:	40030dc0 	.word	0x40030dc0

Disassembly of section i.CyU3PDmaIntHandler:

40022990 <CyU3PDmaIntHandler>:
40022990:	e92d47ff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
40022994:	e1a04000 	mov	r4, r0
40022998:	e1a05001 	mov	r5, r1
4002299c:	e204003f 	and	r0, r4, #63	; 0x3f
400229a0:	e1857400 	orr	r7, r5, r0, lsl #8
400229a4:	e59f0150 	ldr	r0, [pc, #336]	; 40022afc <CyU3PDmaIntHandler+0x16c>
400229a8:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229ac:	e0800385 	add	r0, r0, r5, lsl #7
400229b0:	e5900010 	ldr	r0, [r0, #16]
400229b4:	e59f1140 	ldr	r1, [pc, #320]	; 40022afc <CyU3PDmaIntHandler+0x16c>
400229b8:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400229bc:	e0811385 	add	r1, r1, r5, lsl #7
400229c0:	e5911014 	ldr	r1, [r1, #20]
400229c4:	e0009001 	and	r9, r0, r1
400229c8:	e59f0130 	ldr	r0, [pc, #304]	; 40022b00 <CyU3PDmaIntHandler+0x170>
400229cc:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229d0:	e7906105 	ldr	r6, [r0, r5, lsl #2]
400229d4:	e3560000 	cmp	r6, #0
400229d8:	0a000038 	beq	40022ac0 <CyU3PDmaIntHandler+0x130>
400229dc:	e1a00000 	nop			; (mov r0, r0)
400229e0:	e59f0114 	ldr	r0, [pc, #276]	; 40022afc <CyU3PDmaIntHandler+0x16c>
400229e4:	e7900104 	ldr	r0, [r0, r4, lsl #2]
400229e8:	e0800385 	add	r0, r0, r5, lsl #7
400229ec:	e5900010 	ldr	r0, [r0, #16]
400229f0:	e59f1104 	ldr	r1, [pc, #260]	; 40022afc <CyU3PDmaIntHandler+0x16c>
400229f4:	e7911104 	ldr	r1, [r1, r4, lsl #2]
400229f8:	e0811385 	add	r1, r1, r5, lsl #7
400229fc:	e5911014 	ldr	r1, [r1, #20]
40022a00:	e0000001 	and	r0, r0, r1
40022a04:	e1899000 	orr	r9, r9, r0
40022a08:	e2098e12 	and	r8, r9, #288	; 0x120
40022a0c:	e59f00e8 	ldr	r0, [pc, #232]	; 40022afc <CyU3PDmaIntHandler+0x16c>
40022a10:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a14:	e0800385 	add	r0, r0, r5, lsl #7
40022a18:	e5900014 	ldr	r0, [r0, #20]
40022a1c:	e1c00008 	bic	r0, r0, r8
40022a20:	e59f10d4 	ldr	r1, [pc, #212]	; 40022afc <CyU3PDmaIntHandler+0x16c>
40022a24:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a28:	e0811385 	add	r1, r1, r5, lsl #7
40022a2c:	e5810014 	str	r0, [r1, #20]
40022a30:	e1c90008 	bic	r0, r9, r8
40022a34:	e59f10c0 	ldr	r1, [pc, #192]	; 40022afc <CyU3PDmaIntHandler+0x16c>
40022a38:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a3c:	e0811385 	add	r1, r1, r5, lsl #7
40022a40:	e5810010 	str	r0, [r1, #16]
40022a44:	e59f00b0 	ldr	r0, [pc, #176]	; 40022afc <CyU3PDmaIntHandler+0x16c>
40022a48:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a4c:	e7900385 	ldr	r0, [r0, r5, lsl #7]
40022a50:	e1a00800 	lsl	r0, r0, #16
40022a54:	e1a00820 	lsr	r0, r0, #16
40022a58:	e58d000c 	str	r0, [sp, #12]
40022a5c:	e59f0098 	ldr	r0, [pc, #152]	; 40022afc <CyU3PDmaIntHandler+0x16c>
40022a60:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022a64:	e0800385 	add	r0, r0, r5, lsl #7
40022a68:	e5900010 	ldr	r0, [r0, #16]
40022a6c:	e59f1088 	ldr	r1, [pc, #136]	; 40022afc <CyU3PDmaIntHandler+0x16c>
40022a70:	e7911104 	ldr	r1, [r1, r4, lsl #2]
40022a74:	e0811385 	add	r1, r1, r5, lsl #7
40022a78:	e5911014 	ldr	r1, [r1, #20]
40022a7c:	e0008001 	and	r8, r0, r1
40022a80:	e3580000 	cmp	r8, #0
40022a84:	1affffd5 	bne	400229e0 <CyU3PDmaIntHandler+0x50>
40022a88:	e3a00901 	mov	r0, #16384	; 0x4000
40022a8c:	e58d0000 	str	r0, [sp]
40022a90:	e59d0000 	ldr	r0, [sp]
40022a94:	e58d0000 	str	r0, [sp]
40022a98:	e59d0000 	ldr	r0, [sp]
40022a9c:	e1800807 	orr	r0, r0, r7, lsl #16
40022aa0:	e58d0000 	str	r0, [sp]
40022aa4:	e58d6004 	str	r6, [sp, #4]
40022aa8:	e58d9008 	str	r9, [sp, #8]
40022aac:	e3a02000 	mov	r2, #0
40022ab0:	e1a01002 	mov	r1, r2
40022ab4:	e1a0000d 	mov	r0, sp
40022ab8:	ebffe060 	bl	4001ac40 <CyU3PDmaMsgSend>
40022abc:	ea00000d 	b	40022af8 <CyU3PDmaIntHandler+0x168>
40022ac0:	e59f003c 	ldr	r0, [pc, #60]	; 40022b04 <CyU3PDmaIntHandler+0x174>
40022ac4:	e5900000 	ldr	r0, [r0]
40022ac8:	e3500000 	cmp	r0, #0
40022acc:	0a000005 	beq	40022ae8 <CyU3PDmaIntHandler+0x158>
40022ad0:	e1a01009 	mov	r1, r9
40022ad4:	e1a00007 	mov	r0, r7
40022ad8:	e59f2024 	ldr	r2, [pc, #36]	; 40022b04 <CyU3PDmaIntHandler+0x174>
40022adc:	e5922000 	ldr	r2, [r2]
40022ae0:	e12fff32 	blx	r2
40022ae4:	ea000003 	b	40022af8 <CyU3PDmaIntHandler+0x168>
40022ae8:	e59f000c 	ldr	r0, [pc, #12]	; 40022afc <CyU3PDmaIntHandler+0x16c>
40022aec:	e7900104 	ldr	r0, [r0, r4, lsl #2]
40022af0:	e0800385 	add	r0, r0, r5, lsl #7
40022af4:	e5809010 	str	r9, [r0, #16]
40022af8:	e8bd87ff 	pop	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, pc}
40022afc:	40030cd8 	.word	0x40030cd8
40022b00:	40030d00 	.word	0x40030d00
40022b04:	40030cd4 	.word	0x40030cd4

Disassembly of section i.CyU3PGpioInit:

40022b08 <CyU3PGpioInit>:
40022b08:	e92d4070 	push	{r4, r5, r6, lr}
40022b0c:	e1a04000 	mov	r4, r0
40022b10:	e1a06001 	mov	r6, r1
40022b14:	e59f00fc 	ldr	r0, [pc, #252]	; 40022c18 <CyU3PGpioInit+0x110>
40022b18:	e5900000 	ldr	r0, [r0]
40022b1c:	e3500000 	cmp	r0, #0
40022b20:	0a000001 	beq	40022b2c <CyU3PGpioInit+0x24>
40022b24:	e3a00043 	mov	r0, #67	; 0x43
40022b28:	e8bd8070 	pop	{r4, r5, r6, pc}
40022b2c:	e3540000 	cmp	r4, #0
40022b30:	1a000001 	bne	40022b3c <CyU3PGpioInit+0x34>
40022b34:	e3a00041 	mov	r0, #65	; 0x41
40022b38:	eafffffa 	b	40022b28 <CyU3PGpioInit+0x20>
40022b3c:	e1a00006 	mov	r0, r6
40022b40:	eb00013b 	bl	40023034 <CyU3PRegisterGpioCallBack>
40022b44:	ebffc552 	bl	40014094 <CyU3PLppGpioBlockIsOn>
40022b48:	e3500000 	cmp	r0, #0
40022b4c:	0a000003 	beq	40022b60 <CyU3PGpioInit+0x58>
40022b50:	e59f00c4 	ldr	r0, [pc, #196]	; 40022c1c <CyU3PGpioInit+0x114>
40022b54:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022b58:	e3100001 	tst	r0, #1
40022b5c:	1a000020 	bne	40022be4 <CyU3PGpioInit+0xdc>
40022b60:	e1a00004 	mov	r0, r4
40022b64:	ebffc4a8 	bl	40013e0c <CyU3PGpioSetClock>
40022b68:	e1a05000 	mov	r5, r0
40022b6c:	e3550000 	cmp	r5, #0
40022b70:	0a000001 	beq	40022b7c <CyU3PGpioInit+0x74>
40022b74:	e1a00005 	mov	r0, r5
40022b78:	eaffffea 	b	40022b28 <CyU3PGpioInit+0x20>
40022b7c:	e59f109c 	ldr	r1, [pc, #156]	; 40022c20 <CyU3PGpioInit+0x118>
40022b80:	e3a00004 	mov	r0, #4
40022b84:	ebffc546 	bl	400140a4 <CyU3PLppInit>
40022b88:	e1a05000 	mov	r5, r0
40022b8c:	e3550000 	cmp	r5, #0
40022b90:	0a000001 	beq	40022b9c <CyU3PGpioInit+0x94>
40022b94:	e1a00005 	mov	r0, r5
40022b98:	eaffffe2 	b	40022b28 <CyU3PGpioInit+0x20>
40022b9c:	e59f0078 	ldr	r0, [pc, #120]	; 40022c1c <CyU3PGpioInit+0x114>
40022ba0:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022ba4:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40022ba8:	e59f106c 	ldr	r1, [pc, #108]	; 40022c1c <CyU3PGpioInit+0x114>
40022bac:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022bb0:	e3a0000a 	mov	r0, #10
40022bb4:	ebffc33e 	bl	400138b4 <CyU3PBusyWait>
40022bb8:	e59f005c 	ldr	r0, [pc, #92]	; 40022c1c <CyU3PGpioInit+0x114>
40022bbc:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022bc0:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40022bc4:	e59f1050 	ldr	r1, [pc, #80]	; 40022c1c <CyU3PGpioInit+0x114>
40022bc8:	e58103f4 	str	r0, [r1, #1012]	; 0x3f4
40022bcc:	e1a00000 	nop			; (mov r0, r0)
40022bd0:	e59f0044 	ldr	r0, [pc, #68]	; 40022c1c <CyU3PGpioInit+0x114>
40022bd4:	e59003f4 	ldr	r0, [r0, #1012]	; 0x3f4
40022bd8:	e3100001 	tst	r0, #1
40022bdc:	0afffffb 	beq	40022bd0 <CyU3PGpioInit+0xc8>
40022be0:	ea000007 	b	40022c04 <CyU3PGpioInit+0xfc>
40022be4:	e59f1034 	ldr	r1, [pc, #52]	; 40022c20 <CyU3PGpioInit+0x118>
40022be8:	e3a00004 	mov	r0, #4
40022bec:	ebffc52c 	bl	400140a4 <CyU3PLppInit>
40022bf0:	e1a05000 	mov	r5, r0
40022bf4:	e3550000 	cmp	r5, #0
40022bf8:	0a000001 	beq	40022c04 <CyU3PGpioInit+0xfc>
40022bfc:	e1a00005 	mov	r0, r5
40022c00:	eaffffc8 	b	40022b28 <CyU3PGpioInit+0x20>
40022c04:	e3a00001 	mov	r0, #1
40022c08:	e59f1008 	ldr	r1, [pc, #8]	; 40022c18 <CyU3PGpioInit+0x110>
40022c0c:	e5810000 	str	r0, [r1]
40022c10:	e3a00000 	mov	r0, #0
40022c14:	eaffffc3 	b	40022b28 <CyU3PGpioInit+0x20>
40022c18:	40030ed8 	.word	0x40030ed8
40022c1c:	e0001000 	.word	0xe0001000
40022c20:	40022c24 	.word	0x40022c24

Disassembly of section i.CyU3PGpioInt_Handler:

40022c24 <CyU3PGpioInt_Handler>:
40022c24:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022c28:	e3a06000 	mov	r6, #0
40022c2c:	e3a05000 	mov	r5, #0
40022c30:	e3a04001 	mov	r4, #1
40022c34:	ea000029 	b	40022ce0 <CyU3PGpioInt_Handler+0xbc>
40022c38:	e59f0198 	ldr	r0, [pc, #408]	; 40022dd8 <CyU3PGpioInt_Handler+0x1b4>
40022c3c:	e59003e8 	ldr	r0, [r0, #1000]	; 0x3e8
40022c40:	e1100004 	tst	r0, r4
40022c44:	0a000021 	beq	40022cd0 <CyU3PGpioInt_Handler+0xac>
40022c48:	e59f0188 	ldr	r0, [pc, #392]	; 40022dd8 <CyU3PGpioInt_Handler+0x1b4>
40022c4c:	e7900205 	ldr	r0, [r0, r5, lsl #4]
40022c50:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022c54:	e59f117c 	ldr	r1, [pc, #380]	; 40022dd8 <CyU3PGpioInt_Handler+0x1b4>
40022c58:	e7810205 	str	r0, [r1, r5, lsl #4]
40022c5c:	e59f0178 	ldr	r0, [pc, #376]	; 40022ddc <CyU3PGpioInt_Handler+0x1b8>
40022c60:	e5900000 	ldr	r0, [r0]
40022c64:	e3500000 	cmp	r0, #0
40022c68:	0a000018 	beq	40022cd0 <CyU3PGpioInt_Handler+0xac>
40022c6c:	e1a06005 	mov	r6, r5
40022c70:	e1a07005 	mov	r7, r5
40022c74:	ea00000e 	b	40022cb4 <CyU3PGpioInt_Handler+0x90>
40022c78:	e1a00007 	mov	r0, r7
40022c7c:	ebffc098 	bl	40012ee4 <CyU3PIsGpioComplexIOConfigured>
40022c80:	e3500000 	cmp	r0, #0
40022c84:	0a000001 	beq	40022c90 <CyU3PGpioInt_Handler+0x6c>
40022c88:	e1a06007 	mov	r6, r7
40022c8c:	ea00000a 	b	40022cbc <CyU3PGpioInt_Handler+0x98>
40022c90:	e2870020 	add	r0, r7, #32
40022c94:	ebffc092 	bl	40012ee4 <CyU3PIsGpioComplexIOConfigured>
40022c98:	e3500000 	cmp	r0, #0
40022c9c:	0a000002 	beq	40022cac <CyU3PGpioInt_Handler+0x88>
40022ca0:	e2870020 	add	r0, r7, #32
40022ca4:	e20060ff 	and	r6, r0, #255	; 0xff
40022ca8:	ea000003 	b	40022cbc <CyU3PGpioInt_Handler+0x98>
40022cac:	e2870008 	add	r0, r7, #8
40022cb0:	e20070ff 	and	r7, r0, #255	; 0xff
40022cb4:	e3570020 	cmp	r7, #32
40022cb8:	baffffee 	blt	40022c78 <CyU3PGpioInt_Handler+0x54>
40022cbc:	e1a00000 	nop			; (mov r0, r0)
40022cc0:	e1a00006 	mov	r0, r6
40022cc4:	e59f1110 	ldr	r1, [pc, #272]	; 40022ddc <CyU3PGpioInt_Handler+0x1b8>
40022cc8:	e5911000 	ldr	r1, [r1]
40022ccc:	e12fff31 	blx	r1
40022cd0:	e59f0108 	ldr	r0, [pc, #264]	; 40022de0 <CyU3PGpioInt_Handler+0x1bc>
40022cd4:	e0004084 	and	r4, r0, r4, lsl #1
40022cd8:	e2850001 	add	r0, r5, #1
40022cdc:	e20050ff 	and	r5, r0, #255	; 0xff
40022ce0:	e3540080 	cmp	r4, #128	; 0x80
40022ce4:	9affffd3 	bls	40022c38 <CyU3PGpioInt_Handler+0x14>
40022ce8:	e59f00e8 	ldr	r0, [pc, #232]	; 40022dd8 <CyU3PGpioInt_Handler+0x1b4>
40022cec:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022cf0:	e3500000 	cmp	r0, #0
40022cf4:	0a000017 	beq	40022d58 <CyU3PGpioInt_Handler+0x134>
40022cf8:	e3a05000 	mov	r5, #0
40022cfc:	ea000013 	b	40022d50 <CyU3PGpioInt_Handler+0x12c>
40022d00:	e59f00d0 	ldr	r0, [pc, #208]	; 40022dd8 <CyU3PGpioInt_Handler+0x1b4>
40022d04:	e59003e0 	ldr	r0, [r0, #992]	; 0x3e0
40022d08:	e3a01001 	mov	r1, #1
40022d0c:	e1100511 	tst	r0, r1, lsl r5
40022d10:	0a00000c 	beq	40022d48 <CyU3PGpioInt_Handler+0x124>
40022d14:	e59f00c8 	ldr	r0, [pc, #200]	; 40022de4 <CyU3PGpioInt_Handler+0x1c0>
40022d18:	e7900105 	ldr	r0, [r0, r5, lsl #2]
40022d1c:	e3800302 	orr	r0, r0, #134217728	; 0x8000000
40022d20:	e59f10bc 	ldr	r1, [pc, #188]	; 40022de4 <CyU3PGpioInt_Handler+0x1c0>
40022d24:	e7810105 	str	r0, [r1, r5, lsl #2]
40022d28:	e59f00ac 	ldr	r0, [pc, #172]	; 40022ddc <CyU3PGpioInt_Handler+0x1b8>
40022d2c:	e5900000 	ldr	r0, [r0]
40022d30:	e3500000 	cmp	r0, #0
40022d34:	0a000003 	beq	40022d48 <CyU3PGpioInt_Handler+0x124>
40022d38:	e1a00005 	mov	r0, r5
40022d3c:	e59f1098 	ldr	r1, [pc, #152]	; 40022ddc <CyU3PGpioInt_Handler+0x1b8>
40022d40:	e5911000 	ldr	r1, [r1]
40022d44:	e12fff31 	blx	r1
40022d48:	e2850001 	add	r0, r5, #1
40022d4c:	e20050ff 	and	r5, r0, #255	; 0xff
40022d50:	e3550020 	cmp	r5, #32
40022d54:	baffffe9 	blt	40022d00 <CyU3PGpioInt_Handler+0xdc>
40022d58:	e59f0078 	ldr	r0, [pc, #120]	; 40022dd8 <CyU3PGpioInt_Handler+0x1b4>
40022d5c:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022d60:	e3500000 	cmp	r0, #0
40022d64:	0a00001a 	beq	40022dd4 <CyU3PGpioInt_Handler+0x1b0>
40022d68:	e3a05000 	mov	r5, #0
40022d6c:	ea000016 	b	40022dcc <CyU3PGpioInt_Handler+0x1a8>
40022d70:	e59f0060 	ldr	r0, [pc, #96]	; 40022dd8 <CyU3PGpioInt_Handler+0x1b4>
40022d74:	e59003e4 	ldr	r0, [r0, #996]	; 0x3e4
40022d78:	e3a01001 	mov	r1, #1
40022d7c:	e1100511 	tst	r0, r1, lsl r5
40022d80:	0a00000f 	beq	40022dc4 <CyU3PGpioInt_Handler+0x1a0>
40022d84:	e59f0058 	ldr	r0, [pc, #88]	; 40022de4 <CyU3PGpioInt_Handler+0x1c0>
40022d88:	e2851020 	add	r1, r5, #32
40022d8c:	e7900101 	ldr	r0, [r0, r1, lsl #2]
40022d90:	e3801302 	orr	r1, r0, #134217728	; 0x8000000
40022d94:	e59f0048 	ldr	r0, [pc, #72]	; 40022de4 <CyU3PGpioInt_Handler+0x1c0>
40022d98:	e2852020 	add	r2, r5, #32
40022d9c:	e7801102 	str	r1, [r0, r2, lsl #2]
40022da0:	e59f0034 	ldr	r0, [pc, #52]	; 40022ddc <CyU3PGpioInt_Handler+0x1b8>
40022da4:	e5900000 	ldr	r0, [r0]
40022da8:	e3500000 	cmp	r0, #0
40022dac:	0a000004 	beq	40022dc4 <CyU3PGpioInt_Handler+0x1a0>
40022db0:	e2851020 	add	r1, r5, #32
40022db4:	e20100ff 	and	r0, r1, #255	; 0xff
40022db8:	e59f101c 	ldr	r1, [pc, #28]	; 40022ddc <CyU3PGpioInt_Handler+0x1b8>
40022dbc:	e5911000 	ldr	r1, [r1]
40022dc0:	e12fff31 	blx	r1
40022dc4:	e2850001 	add	r0, r5, #1
40022dc8:	e20050ff 	and	r5, r0, #255	; 0xff
40022dcc:	e3550020 	cmp	r5, #32
40022dd0:	baffffe6 	blt	40022d70 <CyU3PGpioInt_Handler+0x14c>
40022dd4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022dd8:	e0001000 	.word	0xe0001000
40022ddc:	40030edc 	.word	0x40030edc
40022de0:	0000ffff 	.word	0x0000ffff
40022de4:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetSimpleConfig:

40022de8 <CyU3PGpioSetSimpleConfig>:
40022de8:	e92d4070 	push	{r4, r5, r6, lr}
40022dec:	e1a04000 	mov	r4, r0
40022df0:	e1a05001 	mov	r5, r1
40022df4:	e3a06000 	mov	r6, #0
40022df8:	e59f00d0 	ldr	r0, [pc, #208]	; 40022ed0 <CyU3PGpioSetSimpleConfig+0xe8>
40022dfc:	e5900000 	ldr	r0, [r0]
40022e00:	e3500000 	cmp	r0, #0
40022e04:	1a000001 	bne	40022e10 <CyU3PGpioSetSimpleConfig+0x28>
40022e08:	e3a00042 	mov	r0, #66	; 0x42
40022e0c:	e8bd8070 	pop	{r4, r5, r6, pc}
40022e10:	e1a00004 	mov	r0, r4
40022e14:	ebffc03e 	bl	40012f14 <CyU3PIsGpioValid>
40022e18:	e3500000 	cmp	r0, #0
40022e1c:	1a000001 	bne	40022e28 <CyU3PGpioSetSimpleConfig+0x40>
40022e20:	e3a00040 	mov	r0, #64	; 0x40
40022e24:	eafffff8 	b	40022e0c <CyU3PGpioSetSimpleConfig+0x24>
40022e28:	e3550000 	cmp	r5, #0
40022e2c:	1a000001 	bne	40022e38 <CyU3PGpioSetSimpleConfig+0x50>
40022e30:	e3a00041 	mov	r0, #65	; 0x41
40022e34:	eafffff4 	b	40022e0c <CyU3PGpioSetSimpleConfig+0x24>
40022e38:	e5d50010 	ldrb	r0, [r5, #16]
40022e3c:	e3500005 	cmp	r0, #5
40022e40:	da000001 	ble	40022e4c <CyU3PGpioSetSimpleConfig+0x64>
40022e44:	e3a00040 	mov	r0, #64	; 0x40
40022e48:	eaffffef 	b	40022e0c <CyU3PGpioSetSimpleConfig+0x24>
40022e4c:	e1a00004 	mov	r0, r4
40022e50:	ebffc029 	bl	40012efc <CyU3PIsGpioSimpleIOConfigured>
40022e54:	e3500000 	cmp	r0, #0
40022e58:	1a000001 	bne	40022e64 <CyU3PGpioSetSimpleConfig+0x7c>
40022e5c:	e3a00044 	mov	r0, #68	; 0x44
40022e60:	eaffffe9 	b	40022e0c <CyU3PGpioSetSimpleConfig+0x24>
40022e64:	e595000c 	ldr	r0, [r5, #12]
40022e68:	e3500000 	cmp	r0, #0
40022e6c:	0a000000 	beq	40022e74 <CyU3PGpioSetSimpleConfig+0x8c>
40022e70:	e3866040 	orr	r6, r6, #64	; 0x40
40022e74:	e5950004 	ldr	r0, [r5, #4]
40022e78:	e3500000 	cmp	r0, #0
40022e7c:	0a000000 	beq	40022e84 <CyU3PGpioSetSimpleConfig+0x9c>
40022e80:	e3866010 	orr	r6, r6, #16
40022e84:	e5950008 	ldr	r0, [r5, #8]
40022e88:	e3500000 	cmp	r0, #0
40022e8c:	0a000000 	beq	40022e94 <CyU3PGpioSetSimpleConfig+0xac>
40022e90:	e3866020 	orr	r6, r6, #32
40022e94:	e5950000 	ldr	r0, [r5]
40022e98:	e3500000 	cmp	r0, #0
40022e9c:	0a000000 	beq	40022ea4 <CyU3PGpioSetSimpleConfig+0xbc>
40022ea0:	e3866001 	orr	r6, r6, #1
40022ea4:	e5d50010 	ldrb	r0, [r5, #16]
40022ea8:	e3a01407 	mov	r1, #117440512	; 0x7000000
40022eac:	e0010c00 	and	r0, r1, r0, lsl #24
40022eb0:	e1866000 	orr	r6, r6, r0
40022eb4:	e3866302 	orr	r6, r6, #134217728	; 0x8000000
40022eb8:	e3866102 	orr	r6, r6, #-2147483648	; 0x80000000
40022ebc:	e59f0010 	ldr	r0, [pc, #16]	; 40022ed4 <CyU3PGpioSetSimpleConfig+0xec>
40022ec0:	e7806104 	str	r6, [r0, r4, lsl #2]
40022ec4:	e7906104 	ldr	r6, [r0, r4, lsl #2]
40022ec8:	e3a00000 	mov	r0, #0
40022ecc:	eaffffce 	b	40022e0c <CyU3PGpioSetSimpleConfig+0x24>
40022ed0:	40030ed8 	.word	0x40030ed8
40022ed4:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PGpioSetValue:

40022ed8 <CyU3PGpioSetValue>:
40022ed8:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40022edc:	e1a04000 	mov	r4, r0
40022ee0:	e1a05001 	mov	r5, r1
40022ee4:	e59f00b8 	ldr	r0, [pc, #184]	; 40022fa4 <CyU3PGpioSetValue+0xcc>
40022ee8:	e5900000 	ldr	r0, [r0]
40022eec:	e3500000 	cmp	r0, #0
40022ef0:	1a000001 	bne	40022efc <CyU3PGpioSetValue+0x24>
40022ef4:	e3a00042 	mov	r0, #66	; 0x42
40022ef8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40022efc:	e1a00004 	mov	r0, r4
40022f00:	ebffc003 	bl	40012f14 <CyU3PIsGpioValid>
40022f04:	e3500000 	cmp	r0, #0
40022f08:	1a000001 	bne	40022f14 <CyU3PGpioSetValue+0x3c>
40022f0c:	e3a00040 	mov	r0, #64	; 0x40
40022f10:	eafffff8 	b	40022ef8 <CyU3PGpioSetValue+0x20>
40022f14:	e1a00004 	mov	r0, r4
40022f18:	ebffbff7 	bl	40012efc <CyU3PIsGpioSimpleIOConfigured>
40022f1c:	e3500000 	cmp	r0, #0
40022f20:	0a000002 	beq	40022f30 <CyU3PGpioSetValue+0x58>
40022f24:	e59f007c 	ldr	r0, [pc, #124]	; 40022fa8 <CyU3PGpioSetValue+0xd0>
40022f28:	e0807104 	add	r7, r0, r4, lsl #2
40022f2c:	ea00000d 	b	40022f68 <CyU3PGpioSetValue+0x90>
40022f30:	e1a00004 	mov	r0, r4
40022f34:	ebffbfea 	bl	40012ee4 <CyU3PIsGpioComplexIOConfigured>
40022f38:	e3500000 	cmp	r0, #0
40022f3c:	0a000007 	beq	40022f60 <CyU3PGpioSetValue+0x88>
40022f40:	e1a00004 	mov	r0, r4
40022f44:	e1a01fc4 	asr	r1, r4, #31
40022f48:	e0841ea1 	add	r1, r4, r1, lsr #29
40022f4c:	e1a011c1 	asr	r1, r1, #3
40022f50:	e0441181 	sub	r1, r4, r1, lsl #3
40022f54:	e59f2050 	ldr	r2, [pc, #80]	; 40022fac <CyU3PGpioSetValue+0xd4>
40022f58:	e0827201 	add	r7, r2, r1, lsl #4
40022f5c:	ea000001 	b	40022f68 <CyU3PGpioSetValue+0x90>
40022f60:	e3a00044 	mov	r0, #68	; 0x44
40022f64:	eaffffe3 	b	40022ef8 <CyU3PGpioSetValue+0x20>
40022f68:	e5970000 	ldr	r0, [r7]
40022f6c:	e3c06302 	bic	r6, r0, #134217728	; 0x8000000
40022f70:	e3160102 	tst	r6, #-2147483648	; 0x80000000
40022f74:	1a000001 	bne	40022f80 <CyU3PGpioSetValue+0xa8>
40022f78:	e3a00044 	mov	r0, #68	; 0x44
40022f7c:	eaffffdd 	b	40022ef8 <CyU3PGpioSetValue+0x20>
40022f80:	e3550000 	cmp	r5, #0
40022f84:	0a000001 	beq	40022f90 <CyU3PGpioSetValue+0xb8>
40022f88:	e3866001 	orr	r6, r6, #1
40022f8c:	ea000000 	b	40022f94 <CyU3PGpioSetValue+0xbc>
40022f90:	e3c66001 	bic	r6, r6, #1
40022f94:	e5876000 	str	r6, [r7]
40022f98:	e5976000 	ldr	r6, [r7]
40022f9c:	e3a00000 	mov	r0, #0
40022fa0:	eaffffd4 	b	40022ef8 <CyU3PGpioSetValue+0x20>
40022fa4:	40030ed8 	.word	0x40030ed8
40022fa8:	e0001100 	.word	0xe0001100
40022fac:	e0001000 	.word	0xe0001000

Disassembly of section i.CyU3PGpioSimpleGetValue:

40022fb0 <CyU3PGpioSimpleGetValue>:
40022fb0:	e92d4070 	push	{r4, r5, r6, lr}
40022fb4:	e1a04000 	mov	r4, r0
40022fb8:	e1a06001 	mov	r6, r1
40022fbc:	e59f0068 	ldr	r0, [pc, #104]	; 4002302c <CyU3PGpioSimpleGetValue+0x7c>
40022fc0:	e5900000 	ldr	r0, [r0]
40022fc4:	e3500000 	cmp	r0, #0
40022fc8:	1a000001 	bne	40022fd4 <CyU3PGpioSimpleGetValue+0x24>
40022fcc:	e3a00042 	mov	r0, #66	; 0x42
40022fd0:	e8bd8070 	pop	{r4, r5, r6, pc}
40022fd4:	e1a00004 	mov	r0, r4
40022fd8:	ebffbfcd 	bl	40012f14 <CyU3PIsGpioValid>
40022fdc:	e3500000 	cmp	r0, #0
40022fe0:	1a000001 	bne	40022fec <CyU3PGpioSimpleGetValue+0x3c>
40022fe4:	e3a00040 	mov	r0, #64	; 0x40
40022fe8:	eafffff8 	b	40022fd0 <CyU3PGpioSimpleGetValue+0x20>
40022fec:	e3560000 	cmp	r6, #0
40022ff0:	1a000001 	bne	40022ffc <CyU3PGpioSimpleGetValue+0x4c>
40022ff4:	e3a00041 	mov	r0, #65	; 0x41
40022ff8:	eafffff4 	b	40022fd0 <CyU3PGpioSimpleGetValue+0x20>
40022ffc:	e59f002c 	ldr	r0, [pc, #44]	; 40023030 <CyU3PGpioSimpleGetValue+0x80>
40023000:	e7905104 	ldr	r5, [r0, r4, lsl #2]
40023004:	e3150040 	tst	r5, #64	; 0x40
40023008:	0a000003 	beq	4002301c <CyU3PGpioSimpleGetValue+0x6c>
4002300c:	e2050002 	and	r0, r5, #2
40023010:	e1a000a0 	lsr	r0, r0, #1
40023014:	e5860000 	str	r0, [r6]
40023018:	ea000001 	b	40023024 <CyU3PGpioSimpleGetValue+0x74>
4002301c:	e2050001 	and	r0, r5, #1
40023020:	e5860000 	str	r0, [r6]
40023024:	e3a00000 	mov	r0, #0
40023028:	eaffffe8 	b	40022fd0 <CyU3PGpioSimpleGetValue+0x20>
4002302c:	40030ed8 	.word	0x40030ed8
40023030:	e0001100 	.word	0xe0001100

Disassembly of section i.CyU3PRegisterGpioCallBack:

40023034 <CyU3PRegisterGpioCallBack>:
40023034:	e59f1004 	ldr	r1, [pc, #4]	; 40023040 <CyU3PRegisterGpioCallBack+0xc>
40023038:	e5810000 	str	r0, [r1]
4002303c:	e12fff1e 	bx	lr
40023040:	40030edc 	.word	0x40030edc

Disassembly of section i.CyU3PRegisterUartCallBack:

40023044 <CyU3PRegisterUartCallBack>:
40023044:	e59f1004 	ldr	r1, [pc, #4]	; 40023050 <CyU3PRegisterUartCallBack+0xc>
40023048:	e5810000 	str	r0, [r1]
4002304c:	e12fff1e 	bx	lr
40023050:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartGetLock:

40023054 <CyU3PUartGetLock>:
40023054:	e92d4010 	push	{r4, lr}
40023058:	e3a04000 	mov	r4, #0
4002305c:	e59f0044 	ldr	r0, [pc, #68]	; 400230a8 <CyU3PUartGetLock+0x54>
40023060:	e5900000 	ldr	r0, [r0]
40023064:	e3500000 	cmp	r0, #0
40023068:	1a000001 	bne	40023074 <CyU3PUartGetLock+0x20>
4002306c:	e3a00044 	mov	r0, #68	; 0x44
40023070:	e8bd8010 	pop	{r4, pc}
40023074:	ebff967a 	bl	40008a64 <_tx_thread_identify>
40023078:	e3500000 	cmp	r0, #0
4002307c:	0a000000 	beq	40023084 <CyU3PUartGetLock+0x30>
40023080:	e3e04000 	mvn	r4, #0
40023084:	e1a01004 	mov	r1, r4
40023088:	e59f001c 	ldr	r0, [pc, #28]	; 400230ac <CyU3PUartGetLock+0x58>
4002308c:	ebff9c89 	bl	4000a2b8 <_txe_mutex_get>
40023090:	e3500000 	cmp	r0, #0
40023094:	0a000001 	beq	400230a0 <CyU3PUartGetLock+0x4c>
40023098:	e3a0001d 	mov	r0, #29
4002309c:	eafffff3 	b	40023070 <CyU3PUartGetLock+0x1c>
400230a0:	e3a00000 	mov	r0, #0
400230a4:	eafffff1 	b	40023070 <CyU3PUartGetLock+0x1c>
400230a8:	40030ee8 	.word	0x40030ee8
400230ac:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartInit:

400230b0 <CyU3PUartInit>:
400230b0:	e92d4010 	push	{r4, lr}
400230b4:	e3a00003 	mov	r0, #3
400230b8:	ebffbf9c 	bl	40012f30 <CyU3PIsLppIOConfigured>
400230bc:	e3500000 	cmp	r0, #0
400230c0:	1a000001 	bne	400230cc <CyU3PUartInit+0x1c>
400230c4:	e3a00044 	mov	r0, #68	; 0x44
400230c8:	e8bd8010 	pop	{r4, pc}
400230cc:	e59f00b8 	ldr	r0, [pc, #184]	; 4002318c <CyU3PUartInit+0xdc>
400230d0:	e5900000 	ldr	r0, [r0]
400230d4:	e3500000 	cmp	r0, #0
400230d8:	0a000001 	beq	400230e4 <CyU3PUartInit+0x34>
400230dc:	e3a00043 	mov	r0, #67	; 0x43
400230e0:	eafffff8 	b	400230c8 <CyU3PUartInit+0x18>
400230e4:	e3a03038 	mov	r3, #56	; 0x38
400230e8:	e3a02000 	mov	r2, #0
400230ec:	e1a01002 	mov	r1, r2
400230f0:	e59f0098 	ldr	r0, [pc, #152]	; 40023190 <CyU3PUartInit+0xe0>
400230f4:	ebff9bf1 	bl	4000a0c0 <_txe_mutex_create>
400230f8:	e3a00d96 	mov	r0, #9600	; 0x2580
400230fc:	ebffc506 	bl	4001451c <CyU3PUartSetClock>
40023100:	e1a04000 	mov	r4, r0
40023104:	e3540000 	cmp	r4, #0
40023108:	0a000001 	beq	40023114 <CyU3PUartInit+0x64>
4002310c:	e1a00004 	mov	r0, r4
40023110:	eaffffec 	b	400230c8 <CyU3PUartInit+0x18>
40023114:	e59f1078 	ldr	r1, [pc, #120]	; 40023194 <CyU3PUartInit+0xe4>
40023118:	e3a00003 	mov	r0, #3
4002311c:	ebffc3e0 	bl	400140a4 <CyU3PLppInit>
40023120:	e1a04000 	mov	r4, r0
40023124:	e3540000 	cmp	r4, #0
40023128:	0a000001 	beq	40023134 <CyU3PUartInit+0x84>
4002312c:	e1a00004 	mov	r0, r4
40023130:	eaffffe4 	b	400230c8 <CyU3PUartInit+0x18>
40023134:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023138:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
4002313c:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023140:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023144:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40023148:	e3a0000a 	mov	r0, #10
4002314c:	ebffc1d8 	bl	400138b4 <CyU3PBusyWait>
40023150:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023154:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023158:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002315c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023160:	e5810bf4 	str	r0, [r1, #3060]	; 0xbf4
40023164:	e1a00000 	nop			; (mov r0, r0)
40023168:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002316c:	e5900bf4 	ldr	r0, [r0, #3060]	; 0xbf4
40023170:	e3100001 	tst	r0, #1
40023174:	0afffffb 	beq	40023168 <CyU3PUartInit+0xb8>
40023178:	e3a00001 	mov	r0, #1
4002317c:	e59f1008 	ldr	r1, [pc, #8]	; 4002318c <CyU3PUartInit+0xdc>
40023180:	e5810000 	str	r0, [r1]
40023184:	e3a00000 	mov	r0, #0
40023188:	eaffffce 	b	400230c8 <CyU3PUartInit+0x18>
4002318c:	40030ee8 	.word	0x40030ee8
40023190:	40032e1c 	.word	0x40032e1c
40023194:	40023198 	.word	0x40023198

Disassembly of section i.CyU3PUartInt_ThreadHandler:

40023198 <CyU3PUartInt_ThreadHandler>:
40023198:	e92d4070 	push	{r4, r5, r6, lr}
4002319c:	ebffffac 	bl	40023054 <CyU3PUartGetLock>
400231a0:	e1a05000 	mov	r5, r0
400231a4:	e3550000 	cmp	r5, #0
400231a8:	0a000000 	beq	400231b0 <CyU3PUartInt_ThreadHandler+0x18>
400231ac:	e8bd8070 	pop	{r4, r5, r6, pc}
400231b0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231b4:	e5900808 	ldr	r0, [r0, #2056]	; 0x808
400231b8:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400231bc:	e591180c 	ldr	r1, [r1, #2060]	; 0x80c
400231c0:	e0004001 	and	r4, r0, r1
400231c4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400231c8:	e5804808 	str	r4, [r0, #2056]	; 0x808
400231cc:	e59f0078 	ldr	r0, [pc, #120]	; 4002324c <CyU3PUartInt_ThreadHandler+0xb4>
400231d0:	e5900000 	ldr	r0, [r0]
400231d4:	e3500000 	cmp	r0, #0
400231d8:	1a000001 	bne	400231e4 <CyU3PUartInt_ThreadHandler+0x4c>
400231dc:	eb00001b 	bl	40023250 <CyU3PUartReleaseLock>
400231e0:	eafffff1 	b	400231ac <CyU3PUartInt_ThreadHandler+0x14>
400231e4:	e3140001 	tst	r4, #1
400231e8:	0a000004 	beq	40023200 <CyU3PUartInt_ThreadHandler+0x68>
400231ec:	e3a01000 	mov	r1, #0
400231f0:	e1a00001 	mov	r0, r1
400231f4:	e59f2050 	ldr	r2, [pc, #80]	; 4002324c <CyU3PUartInt_ThreadHandler+0xb4>
400231f8:	e5922000 	ldr	r2, [r2]
400231fc:	e12fff32 	blx	r2
40023200:	e3140008 	tst	r4, #8
40023204:	0a000004 	beq	4002321c <CyU3PUartInt_ThreadHandler+0x84>
40023208:	e3a01000 	mov	r1, #0
4002320c:	e3a00001 	mov	r0, #1
40023210:	e59f2034 	ldr	r2, [pc, #52]	; 4002324c <CyU3PUartInt_ThreadHandler+0xb4>
40023214:	e5922000 	ldr	r2, [r2]
40023218:	e12fff32 	blx	r2
4002321c:	e3140c02 	tst	r4, #512	; 0x200
40023220:	0a000007 	beq	40023244 <CyU3PUartInt_ThreadHandler+0xac>
40023224:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023228:	e5900804 	ldr	r0, [r0, #2052]	; 0x804
4002322c:	e200040f 	and	r0, r0, #251658240	; 0xf000000
40023230:	e1a01c20 	lsr	r1, r0, #24
40023234:	e3a00002 	mov	r0, #2
40023238:	e59f200c 	ldr	r2, [pc, #12]	; 4002324c <CyU3PUartInt_ThreadHandler+0xb4>
4002323c:	e5922000 	ldr	r2, [r2]
40023240:	e12fff32 	blx	r2
40023244:	eb000001 	bl	40023250 <CyU3PUartReleaseLock>
40023248:	eaffffd7 	b	400231ac <CyU3PUartInt_ThreadHandler+0x14>
4002324c:	40030eec 	.word	0x40030eec

Disassembly of section i.CyU3PUartReleaseLock:

40023250 <CyU3PUartReleaseLock>:
40023250:	e92d4010 	push	{r4, lr}
40023254:	e59f0030 	ldr	r0, [pc, #48]	; 4002328c <CyU3PUartReleaseLock+0x3c>
40023258:	e5900000 	ldr	r0, [r0]
4002325c:	e3500000 	cmp	r0, #0
40023260:	1a000001 	bne	4002326c <CyU3PUartReleaseLock+0x1c>
40023264:	e3a00044 	mov	r0, #68	; 0x44
40023268:	e8bd8010 	pop	{r4, pc}
4002326c:	e59f001c 	ldr	r0, [pc, #28]	; 40023290 <CyU3PUartReleaseLock+0x40>
40023270:	ebff9c45 	bl	4000a38c <_txe_mutex_put>
40023274:	e3500000 	cmp	r0, #0
40023278:	0a000001 	beq	40023284 <CyU3PUartReleaseLock+0x34>
4002327c:	e3a0001d 	mov	r0, #29
40023280:	eafffff8 	b	40023268 <CyU3PUartReleaseLock+0x18>
40023284:	e3a00000 	mov	r0, #0
40023288:	eafffff6 	b	40023268 <CyU3PUartReleaseLock+0x18>
4002328c:	40030ee8 	.word	0x40030ee8
40023290:	40032e1c 	.word	0x40032e1c

Disassembly of section i.CyU3PUartSetConfig:

40023294 <CyU3PUartSetConfig>:
40023294:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023298:	e1a04000 	mov	r4, r0
4002329c:	e1a05001 	mov	r5, r1
400232a0:	e3a07000 	mov	r7, #0
400232a4:	e59f01f0 	ldr	r0, [pc, #496]	; 4002349c <CyU3PUartSetConfig+0x208>
400232a8:	e5900000 	ldr	r0, [r0]
400232ac:	e3500000 	cmp	r0, #0
400232b0:	1a000001 	bne	400232bc <CyU3PUartSetConfig+0x28>
400232b4:	e3a00042 	mov	r0, #66	; 0x42
400232b8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
400232bc:	e3540000 	cmp	r4, #0
400232c0:	1a000001 	bne	400232cc <CyU3PUartSetConfig+0x38>
400232c4:	e3a00041 	mov	r0, #65	; 0x41
400232c8:	eafffffa 	b	400232b8 <CyU3PUartSetConfig+0x24>
400232cc:	e5940004 	ldr	r0, [r4, #4]
400232d0:	e5941000 	ldr	r1, [r4]
400232d4:	e1900001 	orrs	r0, r0, r1
400232d8:	1a000001 	bne	400232e4 <CyU3PUartSetConfig+0x50>
400232dc:	e3a00040 	mov	r0, #64	; 0x40
400232e0:	eafffff4 	b	400232b8 <CyU3PUartSetConfig+0x24>
400232e4:	e5d40015 	ldrb	r0, [r4, #21]
400232e8:	e3500003 	cmp	r0, #3
400232ec:	ba000001 	blt	400232f8 <CyU3PUartSetConfig+0x64>
400232f0:	e3a00040 	mov	r0, #64	; 0x40
400232f4:	eaffffef 	b	400232b8 <CyU3PUartSetConfig+0x24>
400232f8:	e5d40014 	ldrb	r0, [r4, #20]
400232fc:	e3500001 	cmp	r0, #1
40023300:	0a000004 	beq	40023318 <CyU3PUartSetConfig+0x84>
40023304:	e5d40014 	ldrb	r0, [r4, #20]
40023308:	e3500002 	cmp	r0, #2
4002330c:	0a000001 	beq	40023318 <CyU3PUartSetConfig+0x84>
40023310:	e3a00040 	mov	r0, #64	; 0x40
40023314:	eaffffe7 	b	400232b8 <CyU3PUartSetConfig+0x24>
40023318:	e594000c 	ldr	r0, [r4, #12]
4002331c:	e3500000 	cmp	r0, #0
40023320:	1a000003 	bne	40023334 <CyU3PUartSetConfig+0xa0>
40023324:	e3550000 	cmp	r5, #0
40023328:	0a000001 	beq	40023334 <CyU3PUartSetConfig+0xa0>
4002332c:	e3a00040 	mov	r0, #64	; 0x40
40023330:	eaffffe0 	b	400232b8 <CyU3PUartSetConfig+0x24>
40023334:	ebffff46 	bl	40023054 <CyU3PUartGetLock>
40023338:	e1a06000 	mov	r6, r0
4002333c:	e3560000 	cmp	r6, #0
40023340:	0a000001 	beq	4002334c <CyU3PUartSetConfig+0xb8>
40023344:	e3a0001d 	mov	r0, #29
40023348:	eaffffda 	b	400232b8 <CyU3PUartSetConfig+0x24>
4002334c:	e5940010 	ldr	r0, [r4, #16]
40023350:	ebffc471 	bl	4001451c <CyU3PUartSetClock>
40023354:	e1a06000 	mov	r6, r0
40023358:	e3560000 	cmp	r6, #0
4002335c:	0a000002 	beq	4002336c <CyU3PUartSetConfig+0xd8>
40023360:	ebffffba 	bl	40023250 <CyU3PUartReleaseLock>
40023364:	e1a00006 	mov	r0, r6
40023368:	eaffffd2 	b	400232b8 <CyU3PUartSetConfig+0x24>
4002336c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023370:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023374:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
40023378:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002337c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023380:	e5940004 	ldr	r0, [r4, #4]
40023384:	e3500000 	cmp	r0, #0
40023388:	0a000001 	beq	40023394 <CyU3PUartSetConfig+0x100>
4002338c:	e3877a01 	orr	r7, r7, #4096	; 0x1000
40023390:	e3877001 	orr	r7, r7, #1
40023394:	e5940000 	ldr	r0, [r4]
40023398:	e3500000 	cmp	r0, #0
4002339c:	0a000000 	beq	400233a4 <CyU3PUartSetConfig+0x110>
400233a0:	e3877002 	orr	r7, r7, #2
400233a4:	e5940008 	ldr	r0, [r4, #8]
400233a8:	e3500000 	cmp	r0, #0
400233ac:	0a000000 	beq	400233b4 <CyU3PUartSetConfig+0x120>
400233b0:	e3877a06 	orr	r7, r7, #24576	; 0x6000
400233b4:	e594000c 	ldr	r0, [r4, #12]
400233b8:	e3500000 	cmp	r0, #0
400233bc:	0a000004 	beq	400233d4 <CyU3PUartSetConfig+0x140>
400233c0:	e3877b01 	orr	r7, r7, #1024	; 0x400
400233c4:	e3a00001 	mov	r0, #1
400233c8:	e59f10d0 	ldr	r1, [pc, #208]	; 400234a0 <CyU3PUartSetConfig+0x20c>
400233cc:	e5810000 	str	r0, [r1]
400233d0:	ea000002 	b	400233e0 <CyU3PUartSetConfig+0x14c>
400233d4:	e3a00000 	mov	r0, #0
400233d8:	e59f10c0 	ldr	r1, [pc, #192]	; 400234a0 <CyU3PUartSetConfig+0x20c>
400233dc:	e5810000 	str	r0, [r1]
400233e0:	e5d40014 	ldrb	r0, [r4, #20]
400233e4:	e3a01c03 	mov	r1, #768	; 0x300
400233e8:	e0010400 	and	r0, r1, r0, lsl #8
400233ec:	e1877000 	orr	r7, r7, r0
400233f0:	e5d40015 	ldrb	r0, [r4, #21]
400233f4:	e3500001 	cmp	r0, #1
400233f8:	0a000002 	beq	40023408 <CyU3PUartSetConfig+0x174>
400233fc:	e3500002 	cmp	r0, #2
40023400:	1a000006 	bne	40023420 <CyU3PUartSetConfig+0x18c>
40023404:	ea000002 	b	40023414 <CyU3PUartSetConfig+0x180>
40023408:	e1a00000 	nop			; (mov r0, r0)
4002340c:	e3877008 	orr	r7, r7, #8
40023410:	ea000004 	b	40023428 <CyU3PUartSetConfig+0x194>
40023414:	e1a00000 	nop			; (mov r0, r0)
40023418:	e3877018 	orr	r7, r7, #24
4002341c:	ea000001 	b	40023428 <CyU3PUartSetConfig+0x194>
40023420:	e1a00000 	nop			; (mov r0, r0)
40023424:	e1a00000 	nop			; (mov r0, r0)
40023428:	e1a00000 	nop			; (mov r0, r0)
4002342c:	e3877807 	orr	r7, r7, #458752	; 0x70000
40023430:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023434:	e5807800 	str	r7, [r0, #2048]	; 0x800
40023438:	e59f0064 	ldr	r0, [pc, #100]	; 400234a4 <CyU3PUartSetConfig+0x210>
4002343c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023440:	e5810818 	str	r0, [r1, #2072]	; 0x818
40023444:	e1a00005 	mov	r0, r5
40023448:	ebfffefd 	bl	40023044 <CyU3PRegisterUartCallBack>
4002344c:	e3550000 	cmp	r5, #0
40023450:	0a000003 	beq	40023464 <CyU3PUartSetConfig+0x1d0>
40023454:	e59f004c 	ldr	r0, [pc, #76]	; 400234a8 <CyU3PUartSetConfig+0x214>
40023458:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002345c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023460:	ea000002 	b	40023470 <CyU3PUartSetConfig+0x1dc>
40023464:	e3a00000 	mov	r0, #0
40023468:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002346c:	e581080c 	str	r0, [r1, #2060]	; 0x80c
40023470:	e3a00001 	mov	r0, #1
40023474:	e59f1030 	ldr	r1, [pc, #48]	; 400234ac <CyU3PUartSetConfig+0x218>
40023478:	e5810000 	str	r0, [r1]
4002347c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023480:	e5900800 	ldr	r0, [r0, #2048]	; 0x800
40023484:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023488:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002348c:	e5810800 	str	r0, [r1, #2048]	; 0x800
40023490:	ebffff6e 	bl	40023250 <CyU3PUartReleaseLock>
40023494:	e3a00000 	mov	r0, #0
40023498:	eaffff86 	b	400232b8 <CyU3PUartSetConfig+0x24>
4002349c:	40030ee8 	.word	0x40030ee8
400234a0:	40030ee0 	.word	0x40030ee0
400234a4:	00000603 	.word	0x00000603
400234a8:	00000309 	.word	0x00000309
400234ac:	40030ee4 	.word	0x40030ee4

Disassembly of section i.CyU3PUartTxSetBlockXfer:

400234b0 <CyU3PUartTxSetBlockXfer>:
400234b0:	e92d4070 	push	{r4, r5, r6, lr}
400234b4:	e1a05000 	mov	r5, r0
400234b8:	e59f003c 	ldr	r0, [pc, #60]	; 400234fc <CyU3PUartTxSetBlockXfer+0x4c>
400234bc:	e5900000 	ldr	r0, [r0]
400234c0:	e3500000 	cmp	r0, #0
400234c4:	1a000001 	bne	400234d0 <CyU3PUartTxSetBlockXfer+0x20>
400234c8:	e3a00044 	mov	r0, #68	; 0x44
400234cc:	e8bd8070 	pop	{r4, r5, r6, pc}
400234d0:	ebfffedf 	bl	40023054 <CyU3PUartGetLock>
400234d4:	e1a04000 	mov	r4, r0
400234d8:	e3540000 	cmp	r4, #0
400234dc:	0a000001 	beq	400234e8 <CyU3PUartTxSetBlockXfer+0x38>
400234e0:	e1a00004 	mov	r0, r4
400234e4:	eafffff8 	b	400234cc <CyU3PUartTxSetBlockXfer+0x1c>
400234e8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400234ec:	e5805820 	str	r5, [r0, #2080]	; 0x820
400234f0:	ebffff56 	bl	40023250 <CyU3PUartReleaseLock>
400234f4:	e3a00000 	mov	r0, #0
400234f8:	eafffff3 	b	400234cc <CyU3PUartTxSetBlockXfer+0x1c>
400234fc:	40030ee0 	.word	0x40030ee0

Disassembly of section i.CyU3PI2cErrorRecovery:

40023500 <CyU3PI2cErrorRecovery>:
40023500:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023504:	e1a04000 	mov	r4, r0
40023508:	e3a07000 	mov	r7, #0
4002350c:	e3a08000 	mov	r8, #0
40023510:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023514:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023518:	e59f1164 	ldr	r1, [pc, #356]	; 40023684 <CyU3PI2cErrorRecovery+0x184>
4002351c:	e5810000 	str	r0, [r1]
40023520:	e59f5160 	ldr	r5, [pc, #352]	; 40023688 <CyU3PI2cErrorRecovery+0x188>
40023524:	e1a00000 	nop			; (mov r0, r0)
40023528:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002352c:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023530:	e3100201 	tst	r0, #268435456	; 0x10000000
40023534:	0a000002 	beq	40023544 <CyU3PI2cErrorRecovery+0x44>
40023538:	e1b00005 	movs	r0, r5
4002353c:	e2455001 	sub	r5, r5, #1
40023540:	1afffff8 	bne	40023528 <CyU3PI2cErrorRecovery+0x28>
40023544:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023548:	e590640c 	ldr	r6, [r0, #1036]	; 0x40c
4002354c:	e3a00000 	mov	r0, #0
40023550:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023554:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023558:	e3e00000 	mvn	r0, #0
4002355c:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023560:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023564:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023568:	e3c00102 	bic	r0, r0, #-2147483648	; 0x80000000
4002356c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023570:	e3a00005 	mov	r0, #5
40023574:	ebffc0ce 	bl	400138b4 <CyU3PBusyWait>
40023578:	e3540000 	cmp	r4, #0
4002357c:	0a000032 	beq	4002364c <CyU3PI2cErrorRecovery+0x14c>
40023580:	e3a00000 	mov	r0, #0
40023584:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023588:	e5810438 	str	r0, [r1, #1080]	; 0x438
4002358c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023590:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023594:	e3100008 	tst	r0, #8
40023598:	1a000000 	bne	400235a0 <CyU3PI2cErrorRecovery+0xa0>
4002359c:	e3a07101 	mov	r7, #1073741824	; 0x40000000
400235a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235a4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235a8:	e3100002 	tst	r0, #2
400235ac:	0a000000 	beq	400235b4 <CyU3PI2cErrorRecovery+0xb4>
400235b0:	e3a07202 	mov	r7, #536870912	; 0x20000000
400235b4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235b8:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
400235bc:	e1800007 	orr	r0, r0, r7
400235c0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
400235c4:	e5810400 	str	r0, [r1, #1024]	; 0x400
400235c8:	e1e05741 	mvn	r5, r1, asr #14
400235cc:	ea000004 	b	400235e4 <CyU3PI2cErrorRecovery+0xe4>
400235d0:	e1b00005 	movs	r0, r5
400235d4:	e2455001 	sub	r5, r5, #1
400235d8:	1a000001 	bne	400235e4 <CyU3PI2cErrorRecovery+0xe4>
400235dc:	e3a08054 	mov	r8, #84	; 0x54
400235e0:	ea000003 	b	400235f4 <CyU3PI2cErrorRecovery+0xf4>
400235e4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400235e8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400235ec:	e3100008 	tst	r0, #8
400235f0:	0afffff6 	beq	400235d0 <CyU3PI2cErrorRecovery+0xd0>
400235f4:	e1a00000 	nop			; (mov r0, r0)
400235f8:	e3580000 	cmp	r8, #0
400235fc:	1a00000b 	bne	40023630 <CyU3PI2cErrorRecovery+0x130>
40023600:	e59f5080 	ldr	r5, [pc, #128]	; 40023688 <CyU3PI2cErrorRecovery+0x188>
40023604:	ea000004 	b	4002361c <CyU3PI2cErrorRecovery+0x11c>
40023608:	e1b00005 	movs	r0, r5
4002360c:	e2455001 	sub	r5, r5, #1
40023610:	1a000001 	bne	4002361c <CyU3PI2cErrorRecovery+0x11c>
40023614:	e3a08054 	mov	r8, #84	; 0x54
40023618:	ea000003 	b	4002362c <CyU3PI2cErrorRecovery+0x12c>
4002361c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023620:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023624:	e3100002 	tst	r0, #2
40023628:	1afffff6 	bne	40023608 <CyU3PI2cErrorRecovery+0x108>
4002362c:	e1a00000 	nop			; (mov r0, r0)
40023630:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023634:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023638:	e3c00206 	bic	r0, r0, #1610612736	; 0x60000000
4002363c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023640:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023644:	e3a00001 	mov	r0, #1
40023648:	ebffc099 	bl	400138b4 <CyU3PBusyWait>
4002364c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023650:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023654:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023658:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002365c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023660:	e3a00005 	mov	r0, #5
40023664:	ebffc092 	bl	400138b4 <CyU3PBusyWait>
40023668:	e3e00000 	mvn	r0, #0
4002366c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023670:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023674:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023678:	e580640c 	str	r6, [r0, #1036]	; 0x40c
4002367c:	e1a00008 	mov	r0, r8
40023680:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023684:	40030f00 	.word	0x40030f00
40023688:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cGetLock:

4002368c <CyU3PI2cGetLock>:
4002368c:	e92d4010 	push	{r4, lr}
40023690:	e3a04000 	mov	r4, #0
40023694:	e59f0044 	ldr	r0, [pc, #68]	; 400236e0 <CyU3PI2cGetLock+0x54>
40023698:	e5900000 	ldr	r0, [r0]
4002369c:	e3500000 	cmp	r0, #0
400236a0:	1a000001 	bne	400236ac <CyU3PI2cGetLock+0x20>
400236a4:	e3a00044 	mov	r0, #68	; 0x44
400236a8:	e8bd8010 	pop	{r4, pc}
400236ac:	ebff94ec 	bl	40008a64 <_tx_thread_identify>
400236b0:	e3500000 	cmp	r0, #0
400236b4:	0a000000 	beq	400236bc <CyU3PI2cGetLock+0x30>
400236b8:	e3e04000 	mvn	r4, #0
400236bc:	e1a01004 	mov	r1, r4
400236c0:	e59f001c 	ldr	r0, [pc, #28]	; 400236e4 <CyU3PI2cGetLock+0x58>
400236c4:	ebff9afb 	bl	4000a2b8 <_txe_mutex_get>
400236c8:	e3500000 	cmp	r0, #0
400236cc:	0a000001 	beq	400236d8 <CyU3PI2cGetLock+0x4c>
400236d0:	e3a0001d 	mov	r0, #29
400236d4:	eafffff3 	b	400236a8 <CyU3PI2cGetLock+0x1c>
400236d8:	e3a00000 	mov	r0, #0
400236dc:	eafffff1 	b	400236a8 <CyU3PI2cGetLock+0x1c>
400236e0:	40030ef8 	.word	0x40030ef8
400236e4:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cInit:

400236e8 <CyU3PI2cInit>:
400236e8:	e92d4010 	push	{r4, lr}
400236ec:	e3a00000 	mov	r0, #0
400236f0:	ebffbe0e 	bl	40012f30 <CyU3PIsLppIOConfigured>
400236f4:	e3500000 	cmp	r0, #0
400236f8:	1a000001 	bne	40023704 <CyU3PI2cInit+0x1c>
400236fc:	e3a00044 	mov	r0, #68	; 0x44
40023700:	e8bd8010 	pop	{r4, pc}
40023704:	e59f00bc 	ldr	r0, [pc, #188]	; 400237c8 <CyU3PI2cInit+0xe0>
40023708:	e5900000 	ldr	r0, [r0]
4002370c:	e3500000 	cmp	r0, #0
40023710:	0a000001 	beq	4002371c <CyU3PI2cInit+0x34>
40023714:	e3a00043 	mov	r0, #67	; 0x43
40023718:	eafffff8 	b	40023700 <CyU3PI2cInit+0x18>
4002371c:	e59f00a8 	ldr	r0, [pc, #168]	; 400237cc <CyU3PI2cInit+0xe4>
40023720:	ebffc1f8 	bl	40013f08 <CyU3PI2cSetClock>
40023724:	e1a04000 	mov	r4, r0
40023728:	e3540000 	cmp	r4, #0
4002372c:	0a000001 	beq	40023738 <CyU3PI2cInit+0x50>
40023730:	e1a00004 	mov	r0, r4
40023734:	eafffff1 	b	40023700 <CyU3PI2cInit+0x18>
40023738:	e59f1090 	ldr	r1, [pc, #144]	; 400237d0 <CyU3PI2cInit+0xe8>
4002373c:	e3a00000 	mov	r0, #0
40023740:	ebffc257 	bl	400140a4 <CyU3PLppInit>
40023744:	e1a04000 	mov	r4, r0
40023748:	e3540000 	cmp	r4, #0
4002374c:	0a000001 	beq	40023758 <CyU3PI2cInit+0x70>
40023750:	e1a00004 	mov	r0, r4
40023754:	eaffffe9 	b	40023700 <CyU3PI2cInit+0x18>
40023758:	e3a03038 	mov	r3, #56	; 0x38
4002375c:	e3a02000 	mov	r2, #0
40023760:	e1a01002 	mov	r1, r2
40023764:	e59f0068 	ldr	r0, [pc, #104]	; 400237d4 <CyU3PI2cInit+0xec>
40023768:	ebff9a54 	bl	4000a0c0 <_txe_mutex_create>
4002376c:	e3a00000 	mov	r0, #0
40023770:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023774:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023778:	e3a0000a 	mov	r0, #10
4002377c:	ebffc04c 	bl	400138b4 <CyU3PBusyWait>
40023780:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023784:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
40023788:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
4002378c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023790:	e58107f4 	str	r0, [r1, #2036]	; 0x7f4
40023794:	e1a00000 	nop			; (mov r0, r0)
40023798:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002379c:	e59007f4 	ldr	r0, [r0, #2036]	; 0x7f4
400237a0:	e3100001 	tst	r0, #1
400237a4:	0afffffb 	beq	40023798 <CyU3PI2cInit+0xb0>
400237a8:	e3a00000 	mov	r0, #0
400237ac:	e59f1024 	ldr	r1, [pc, #36]	; 400237d8 <CyU3PI2cInit+0xf0>
400237b0:	e5810000 	str	r0, [r1]
400237b4:	e3a00001 	mov	r0, #1
400237b8:	e2411008 	sub	r1, r1, #8
400237bc:	e5810000 	str	r0, [r1]
400237c0:	e3a00000 	mov	r0, #0
400237c4:	eaffffcd 	b	40023700 <CyU3PI2cInit+0x18>
400237c8:	40030ef8 	.word	0x40030ef8
400237cc:	000186a0 	.word	0x000186a0
400237d0:	400237dc 	.word	0x400237dc
400237d4:	40032e54 	.word	0x40032e54
400237d8:	40030f00 	.word	0x40030f00

Disassembly of section i.CyU3PI2cInt_ThreadHandler:

400237dc <CyU3PI2cInt_ThreadHandler>:
400237dc:	e92d4070 	push	{r4, r5, r6, lr}
400237e0:	ebffffa9 	bl	4002368c <CyU3PI2cGetLock>
400237e4:	e1a05000 	mov	r5, r0
400237e8:	e3550000 	cmp	r5, #0
400237ec:	0a000000 	beq	400237f4 <CyU3PI2cInt_ThreadHandler+0x18>
400237f0:	e8bd8070 	pop	{r4, r5, r6, pc}
400237f4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400237f8:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
400237fc:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023800:	e591140c 	ldr	r1, [r1, #1036]	; 0x40c
40023804:	e0004001 	and	r4, r0, r1
40023808:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
4002380c:	e5804408 	str	r4, [r0, #1032]	; 0x408
40023810:	e59f00b0 	ldr	r0, [pc, #176]	; 400238c8 <CyU3PI2cInt_ThreadHandler+0xec>
40023814:	e5900000 	ldr	r0, [r0]
40023818:	e3500000 	cmp	r0, #0
4002381c:	1a000001 	bne	40023828 <CyU3PI2cInt_ThreadHandler+0x4c>
40023820:	eb000098 	bl	40023a88 <CyU3PI2cReleaseLock>
40023824:	eafffff1 	b	400237f0 <CyU3PI2cInt_ThreadHandler+0x14>
40023828:	e3140001 	tst	r4, #1
4002382c:	0a000004 	beq	40023844 <CyU3PI2cInt_ThreadHandler+0x68>
40023830:	e3a01000 	mov	r1, #0
40023834:	e1a00001 	mov	r0, r1
40023838:	e59f2088 	ldr	r2, [pc, #136]	; 400238c8 <CyU3PI2cInt_ThreadHandler+0xec>
4002383c:	e5922000 	ldr	r2, [r2]
40023840:	e12fff32 	blx	r2
40023844:	e3140008 	tst	r4, #8
40023848:	0a000004 	beq	40023860 <CyU3PI2cInt_ThreadHandler+0x84>
4002384c:	e3a01000 	mov	r1, #0
40023850:	e3a00001 	mov	r0, #1
40023854:	e59f206c 	ldr	r2, [pc, #108]	; 400238c8 <CyU3PI2cInt_ThreadHandler+0xec>
40023858:	e5922000 	ldr	r2, [r2]
4002385c:	e12fff32 	blx	r2
40023860:	e3140040 	tst	r4, #64	; 0x40
40023864:	0a000004 	beq	4002387c <CyU3PI2cInt_ThreadHandler+0xa0>
40023868:	e3a01000 	mov	r1, #0
4002386c:	e3a00002 	mov	r0, #2
40023870:	e59f2050 	ldr	r2, [pc, #80]	; 400238c8 <CyU3PI2cInt_ThreadHandler+0xec>
40023874:	e5922000 	ldr	r2, [r2]
40023878:	e12fff32 	blx	r2
4002387c:	e3140080 	tst	r4, #128	; 0x80
40023880:	0a000004 	beq	40023898 <CyU3PI2cInt_ThreadHandler+0xbc>
40023884:	e3a01000 	mov	r1, #0
40023888:	e3a00003 	mov	r0, #3
4002388c:	e59f2034 	ldr	r2, [pc, #52]	; 400238c8 <CyU3PI2cInt_ThreadHandler+0xec>
40023890:	e5922000 	ldr	r2, [r2]
40023894:	e12fff32 	blx	r2
40023898:	e3140c01 	tst	r4, #256	; 0x100
4002389c:	0a000007 	beq	400238c0 <CyU3PI2cInt_ThreadHandler+0xe4>
400238a0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400238a4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400238a8:	e200040f 	and	r0, r0, #251658240	; 0xf000000
400238ac:	e1a01c20 	lsr	r1, r0, #24
400238b0:	e3a00004 	mov	r0, #4
400238b4:	e59f200c 	ldr	r2, [pc, #12]	; 400238c8 <CyU3PI2cInt_ThreadHandler+0xec>
400238b8:	e5922000 	ldr	r2, [r2]
400238bc:	e12fff32 	blx	r2
400238c0:	eb000070 	bl	40023a88 <CyU3PI2cReleaseLock>
400238c4:	eaffffc9 	b	400237f0 <CyU3PI2cInt_ThreadHandler+0x14>
400238c8:	40030efc 	.word	0x40030efc

Disassembly of section i.CyU3PI2cReceiveBytes:

400238cc <CyU3PI2cReceiveBytes>:
400238cc:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
400238d0:	e1a04000 	mov	r4, r0
400238d4:	e1a05001 	mov	r5, r1
400238d8:	e1a06002 	mov	r6, r2
400238dc:	e1a07003 	mov	r7, r3
400238e0:	e59f0194 	ldr	r0, [pc, #404]	; 40023a7c <CyU3PI2cReceiveBytes+0x1b0>
400238e4:	e5900000 	ldr	r0, [r0]
400238e8:	e3500000 	cmp	r0, #0
400238ec:	1a000001 	bne	400238f8 <CyU3PI2cReceiveBytes+0x2c>
400238f0:	e3a00044 	mov	r0, #68	; 0x44
400238f4:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
400238f8:	e59f0180 	ldr	r0, [pc, #384]	; 40023a80 <CyU3PI2cReceiveBytes+0x1b4>
400238fc:	e5900000 	ldr	r0, [r0]
40023900:	e3500000 	cmp	r0, #0
40023904:	0a000001 	beq	40023910 <CyU3PI2cReceiveBytes+0x44>
40023908:	e3a00044 	mov	r0, #68	; 0x44
4002390c:	eafffff8 	b	400238f4 <CyU3PI2cReceiveBytes+0x28>
40023910:	e3550000 	cmp	r5, #0
40023914:	0a000001 	beq	40023920 <CyU3PI2cReceiveBytes+0x54>
40023918:	e3540000 	cmp	r4, #0
4002391c:	1a000001 	bne	40023928 <CyU3PI2cReceiveBytes+0x5c>
40023920:	e3a00041 	mov	r0, #65	; 0x41
40023924:	eafffff2 	b	400238f4 <CyU3PI2cReceiveBytes+0x28>
40023928:	e5d40008 	ldrb	r0, [r4, #8]
4002392c:	e3500000 	cmp	r0, #0
40023930:	0a000002 	beq	40023940 <CyU3PI2cReceiveBytes+0x74>
40023934:	e5d40008 	ldrb	r0, [r4, #8]
40023938:	e3500008 	cmp	r0, #8
4002393c:	da000001 	ble	40023948 <CyU3PI2cReceiveBytes+0x7c>
40023940:	e3a00040 	mov	r0, #64	; 0x40
40023944:	eaffffea 	b	400238f4 <CyU3PI2cReceiveBytes+0x28>
40023948:	e3560000 	cmp	r6, #0
4002394c:	1a000001 	bne	40023958 <CyU3PI2cReceiveBytes+0x8c>
40023950:	e3a00000 	mov	r0, #0
40023954:	eaffffe6 	b	400238f4 <CyU3PI2cReceiveBytes+0x28>
40023958:	ebffff4b 	bl	4002368c <CyU3PI2cGetLock>
4002395c:	e1a08000 	mov	r8, r0
40023960:	e3580000 	cmp	r8, #0
40023964:	0a000001 	beq	40023970 <CyU3PI2cReceiveBytes+0xa4>
40023968:	e1a00008 	mov	r0, r8
4002396c:	eaffffe0 	b	400238f4 <CyU3PI2cReceiveBytes+0x28>
40023970:	e3a0bd07 	mov	fp, #448	; 0x1c0
40023974:	e1a00000 	nop			; (mov r0, r0)
40023978:	e3a02001 	mov	r2, #1
4002397c:	e1a01006 	mov	r1, r6
40023980:	e1a00004 	mov	r0, r4
40023984:	eb000166 	bl	40023f24 <MyI2cSendCommand>
40023988:	e1a08000 	mov	r8, r0
4002398c:	e3580000 	cmp	r8, #0
40023990:	0a000000 	beq	40023998 <CyU3PI2cReceiveBytes+0xcc>
40023994:	ea00002a 	b	40023a44 <CyU3PI2cReceiveBytes+0x178>
40023998:	e3a0a000 	mov	sl, #0
4002399c:	ea000020 	b	40023a24 <CyU3PI2cReceiveBytes+0x158>
400239a0:	e59f00dc 	ldr	r0, [pc, #220]	; 40023a84 <CyU3PI2cReceiveBytes+0x1b8>
400239a4:	e58d0000 	str	r0, [sp]
400239a8:	ea000006 	b	400239c8 <CyU3PI2cReceiveBytes+0xfc>
400239ac:	e59d0000 	ldr	r0, [sp]
400239b0:	e2401001 	sub	r1, r0, #1
400239b4:	e3500000 	cmp	r0, #0
400239b8:	e58d1000 	str	r1, [sp]
400239bc:	1a000001 	bne	400239c8 <CyU3PI2cReceiveBytes+0xfc>
400239c0:	e3a08055 	mov	r8, #85	; 0x55
400239c4:	ea000004 	b	400239dc <CyU3PI2cReceiveBytes+0x110>
400239c8:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239cc:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239d0:	e38b1002 	orr	r1, fp, #2
400239d4:	e1100001 	tst	r0, r1
400239d8:	0afffff3 	beq	400239ac <CyU3PI2cReceiveBytes+0xe0>
400239dc:	e1a00000 	nop			; (mov r0, r0)
400239e0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
400239e4:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
400239e8:	e110000b 	tst	r0, fp
400239ec:	0a000000 	beq	400239f4 <CyU3PI2cReceiveBytes+0x128>
400239f0:	e3a0804a 	mov	r8, #74	; 0x4a
400239f4:	e3580000 	cmp	r8, #0
400239f8:	0a000005 	beq	40023a14 <CyU3PI2cReceiveBytes+0x148>
400239fc:	e3a00001 	mov	r0, #1
40023a00:	ebfffebe 	bl	40023500 <CyU3PI2cErrorRecovery>
40023a04:	e3500000 	cmp	r0, #0
40023a08:	0a000000 	beq	40023a10 <CyU3PI2cReceiveBytes+0x144>
40023a0c:	e3a08054 	mov	r8, #84	; 0x54
40023a10:	ea000005 	b	40023a2c <CyU3PI2cReceiveBytes+0x160>
40023a14:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a18:	e5900430 	ldr	r0, [r0, #1072]	; 0x430
40023a1c:	e7c5000a 	strb	r0, [r5, sl]
40023a20:	e28aa001 	add	sl, sl, #1
40023a24:	e15a0006 	cmp	sl, r6
40023a28:	3affffdc 	bcc	400239a0 <CyU3PI2cReceiveBytes+0xd4>
40023a2c:	e1a00000 	nop			; (mov r0, r0)
40023a30:	e3580000 	cmp	r8, #0
40023a34:	0a000002 	beq	40023a44 <CyU3PI2cReceiveBytes+0x178>
40023a38:	e1b00007 	movs	r0, r7
40023a3c:	e2477001 	sub	r7, r7, #1
40023a40:	1affffcc 	bne	40023978 <CyU3PI2cReceiveBytes+0xac>
40023a44:	e1a00000 	nop			; (mov r0, r0)
40023a48:	e358004a 	cmp	r8, #74	; 0x4a
40023a4c:	1a000007 	bne	40023a70 <CyU3PI2cReceiveBytes+0x1a4>
40023a50:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023a54:	e5909404 	ldr	r9, [r0, #1028]	; 0x404
40023a58:	e3190040 	tst	r9, #64	; 0x40
40023a5c:	0a000000 	beq	40023a64 <CyU3PI2cReceiveBytes+0x198>
40023a60:	e3a08045 	mov	r8, #69	; 0x45
40023a64:	e3190080 	tst	r9, #128	; 0x80
40023a68:	0a000000 	beq	40023a70 <CyU3PI2cReceiveBytes+0x1a4>
40023a6c:	e3a08055 	mov	r8, #85	; 0x55
40023a70:	eb000004 	bl	40023a88 <CyU3PI2cReleaseLock>
40023a74:	e1a00008 	mov	r0, r8
40023a78:	eaffff9d 	b	400238f4 <CyU3PI2cReceiveBytes+0x28>
40023a7c:	40030ef4 	.word	0x40030ef4
40023a80:	40030ef0 	.word	0x40030ef0
40023a84:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PI2cReleaseLock:

40023a88 <CyU3PI2cReleaseLock>:
40023a88:	e92d4010 	push	{r4, lr}
40023a8c:	e59f0030 	ldr	r0, [pc, #48]	; 40023ac4 <CyU3PI2cReleaseLock+0x3c>
40023a90:	e5900000 	ldr	r0, [r0]
40023a94:	e3500000 	cmp	r0, #0
40023a98:	1a000001 	bne	40023aa4 <CyU3PI2cReleaseLock+0x1c>
40023a9c:	e3a00044 	mov	r0, #68	; 0x44
40023aa0:	e8bd8010 	pop	{r4, pc}
40023aa4:	e59f001c 	ldr	r0, [pc, #28]	; 40023ac8 <CyU3PI2cReleaseLock+0x40>
40023aa8:	ebff9a37 	bl	4000a38c <_txe_mutex_put>
40023aac:	e3500000 	cmp	r0, #0
40023ab0:	0a000001 	beq	40023abc <CyU3PI2cReleaseLock+0x34>
40023ab4:	e3a0001d 	mov	r0, #29
40023ab8:	eafffff8 	b	40023aa0 <CyU3PI2cReleaseLock+0x18>
40023abc:	e3a00000 	mov	r0, #0
40023ac0:	eafffff6 	b	40023aa0 <CyU3PI2cReleaseLock+0x18>
40023ac4:	40030ef8 	.word	0x40030ef8
40023ac8:	40032e54 	.word	0x40032e54

Disassembly of section i.CyU3PI2cSetConfig:

40023acc <CyU3PI2cSetConfig>:
40023acc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
40023ad0:	e1a04000 	mov	r4, r0
40023ad4:	e1a05001 	mov	r5, r1
40023ad8:	e59f01e0 	ldr	r0, [pc, #480]	; 40023cc0 <CyU3PI2cSetConfig+0x1f4>
40023adc:	e5900000 	ldr	r0, [r0]
40023ae0:	e3500000 	cmp	r0, #0
40023ae4:	1a000001 	bne	40023af0 <CyU3PI2cSetConfig+0x24>
40023ae8:	e3a00042 	mov	r0, #66	; 0x42
40023aec:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}
40023af0:	e3540000 	cmp	r4, #0
40023af4:	1a000001 	bne	40023b00 <CyU3PI2cSetConfig+0x34>
40023af8:	e3a00041 	mov	r0, #65	; 0x41
40023afc:	eafffffa 	b	40023aec <CyU3PI2cSetConfig+0x20>
40023b00:	e5940004 	ldr	r0, [r4, #4]
40023b04:	e3500000 	cmp	r0, #0
40023b08:	1a000003 	bne	40023b1c <CyU3PI2cSetConfig+0x50>
40023b0c:	e3550000 	cmp	r5, #0
40023b10:	0a000001 	beq	40023b1c <CyU3PI2cSetConfig+0x50>
40023b14:	e3a00040 	mov	r0, #64	; 0x40
40023b18:	eafffff3 	b	40023aec <CyU3PI2cSetConfig+0x20>
40023b1c:	ebfffeda 	bl	4002368c <CyU3PI2cGetLock>
40023b20:	e1a06000 	mov	r6, r0
40023b24:	e3560000 	cmp	r6, #0
40023b28:	0a000001 	beq	40023b34 <CyU3PI2cSetConfig+0x68>
40023b2c:	e1a00006 	mov	r0, r6
40023b30:	eaffffed 	b	40023aec <CyU3PI2cSetConfig+0x20>
40023b34:	e3a00000 	mov	r0, #0
40023b38:	e59f1184 	ldr	r1, [pc, #388]	; 40023cc4 <CyU3PI2cSetConfig+0x1f8>
40023b3c:	e5810000 	str	r0, [r1]
40023b40:	e5940000 	ldr	r0, [r4]
40023b44:	ebffc0ef 	bl	40013f08 <CyU3PI2cSetClock>
40023b48:	e1a06000 	mov	r6, r0
40023b4c:	e3560000 	cmp	r6, #0
40023b50:	1a00000e 	bne	40023b90 <CyU3PI2cSetConfig+0xc4>
40023b54:	e3a00206 	mov	r0, #1610612736	; 0x60000000
40023b58:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023b5c:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023b60:	e1e07741 	mvn	r7, r1, asr #14
40023b64:	ea000004 	b	40023b7c <CyU3PI2cSetConfig+0xb0>
40023b68:	e1b00007 	movs	r0, r7
40023b6c:	e2477001 	sub	r7, r7, #1
40023b70:	1a000001 	bne	40023b7c <CyU3PI2cSetConfig+0xb0>
40023b74:	e3a06054 	mov	r6, #84	; 0x54
40023b78:	ea000003 	b	40023b8c <CyU3PI2cSetConfig+0xc0>
40023b7c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023b80:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023b84:	e3100008 	tst	r0, #8
40023b88:	0afffff6 	beq	40023b68 <CyU3PI2cSetConfig+0x9c>
40023b8c:	e1a00000 	nop			; (mov r0, r0)
40023b90:	e3560000 	cmp	r6, #0
40023b94:	1a00000b 	bne	40023bc8 <CyU3PI2cSetConfig+0xfc>
40023b98:	e59f7128 	ldr	r7, [pc, #296]	; 40023cc8 <CyU3PI2cSetConfig+0x1fc>
40023b9c:	ea000004 	b	40023bb4 <CyU3PI2cSetConfig+0xe8>
40023ba0:	e1b00007 	movs	r0, r7
40023ba4:	e2477001 	sub	r7, r7, #1
40023ba8:	1a000001 	bne	40023bb4 <CyU3PI2cSetConfig+0xe8>
40023bac:	e3a06054 	mov	r6, #84	; 0x54
40023bb0:	ea000003 	b	40023bc4 <CyU3PI2cSetConfig+0xf8>
40023bb4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023bb8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023bbc:	e3100002 	tst	r0, #2
40023bc0:	1afffff6 	bne	40023ba0 <CyU3PI2cSetConfig+0xd4>
40023bc4:	e1a00000 	nop			; (mov r0, r0)
40023bc8:	e3560000 	cmp	r6, #0
40023bcc:	0a000002 	beq	40023bdc <CyU3PI2cSetConfig+0x110>
40023bd0:	ebffffac 	bl	40023a88 <CyU3PI2cReleaseLock>
40023bd4:	e1a00006 	mov	r0, r6
40023bd8:	eaffffc3 	b	40023aec <CyU3PI2cSetConfig+0x20>
40023bdc:	e3a00000 	mov	r0, #0
40023be0:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023be4:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023be8:	e3a06000 	mov	r6, #0
40023bec:	e5940000 	ldr	r0, [r4]
40023bf0:	e59f10d4 	ldr	r1, [pc, #212]	; 40023ccc <CyU3PI2cSetConfig+0x200>
40023bf4:	e1500001 	cmp	r0, r1
40023bf8:	8a000000 	bhi	40023c00 <CyU3PI2cSetConfig+0x134>
40023bfc:	e3a06004 	mov	r6, #4
40023c00:	e5940004 	ldr	r0, [r4, #4]
40023c04:	e3500000 	cmp	r0, #0
40023c08:	0a000007 	beq	40023c2c <CyU3PI2cSetConfig+0x160>
40023c0c:	e3866001 	orr	r6, r6, #1
40023c10:	e3a00001 	mov	r0, #1
40023c14:	e59f10b4 	ldr	r1, [pc, #180]	; 40023cd0 <CyU3PI2cSetConfig+0x204>
40023c18:	e5810000 	str	r0, [r1]
40023c1c:	e1d400bc 	ldrh	r0, [r4, #12]
40023c20:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c24:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023c28:	ea000005 	b	40023c44 <CyU3PI2cSetConfig+0x178>
40023c2c:	e3a00000 	mov	r0, #0
40023c30:	e59f1098 	ldr	r1, [pc, #152]	; 40023cd0 <CyU3PI2cSetConfig+0x204>
40023c34:	e5810000 	str	r0, [r1]
40023c38:	e59f0094 	ldr	r0, [pc, #148]	; 40023cd4 <CyU3PI2cSetConfig+0x208>
40023c3c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c40:	e5810414 	str	r0, [r1, #1044]	; 0x414
40023c44:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023c48:	e5806400 	str	r6, [r0, #1024]	; 0x400
40023c4c:	e59f0084 	ldr	r0, [pc, #132]	; 40023cd8 <CyU3PI2cSetConfig+0x20c>
40023c50:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c54:	e5810440 	str	r0, [r1, #1088]	; 0x440
40023c58:	e5940008 	ldr	r0, [r4, #8]
40023c5c:	e5810410 	str	r0, [r1, #1040]	; 0x410
40023c60:	e3e00000 	mvn	r0, #0
40023c64:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023c68:	e1a00005 	mov	r0, r5
40023c6c:	eb0000a8 	bl	40023f14 <CyU3PRegisterI2cCallBack>
40023c70:	e3550000 	cmp	r5, #0
40023c74:	0a000003 	beq	40023c88 <CyU3PI2cSetConfig+0x1bc>
40023c78:	e59f005c 	ldr	r0, [pc, #92]	; 40023cdc <CyU3PI2cSetConfig+0x210>
40023c7c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c80:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023c84:	ea000002 	b	40023c94 <CyU3PI2cSetConfig+0x1c8>
40023c88:	e3a00000 	mov	r0, #0
40023c8c:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023c90:	e581040c 	str	r0, [r1, #1036]	; 0x40c
40023c94:	e3a00001 	mov	r0, #1
40023c98:	e59f1040 	ldr	r1, [pc, #64]	; 40023ce0 <CyU3PI2cSetConfig+0x214>
40023c9c:	e5810000 	str	r0, [r1]
40023ca0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ca4:	e5900400 	ldr	r0, [r0, #1024]	; 0x400
40023ca8:	e3800102 	orr	r0, r0, #-2147483648	; 0x80000000
40023cac:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023cb0:	e5810400 	str	r0, [r1, #1024]	; 0x400
40023cb4:	ebffff73 	bl	40023a88 <CyU3PI2cReleaseLock>
40023cb8:	e3a00000 	mov	r0, #0
40023cbc:	eaffff8a 	b	40023aec <CyU3PI2cSetConfig+0x20>
40023cc0:	40030ef8 	.word	0x40030ef8
40023cc4:	40030f00 	.word	0x40030f00
40023cc8:	00007fff 	.word	0x00007fff
40023ccc:	000186a0 	.word	0x000186a0
40023cd0:	40030ef0 	.word	0x40030ef0
40023cd4:	0000ffff 	.word	0x0000ffff
40023cd8:	00000502 	.word	0x00000502
40023cdc:	000001c9 	.word	0x000001c9
40023ce0:	40030ef4 	.word	0x40030ef4

Disassembly of section i.CyU3PI2cTransmitBytes:

40023ce4 <CyU3PI2cTransmitBytes>:
40023ce4:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
40023ce8:	e1a04000 	mov	r4, r0
40023cec:	e1a05001 	mov	r5, r1
40023cf0:	e1a06002 	mov	r6, r2
40023cf4:	e59f020c 	ldr	r0, [pc, #524]	; 40023f08 <CyU3PI2cTransmitBytes+0x224>
40023cf8:	e5900000 	ldr	r0, [r0]
40023cfc:	e3500000 	cmp	r0, #0
40023d00:	1a000002 	bne	40023d10 <CyU3PI2cTransmitBytes+0x2c>
40023d04:	e3a00044 	mov	r0, #68	; 0x44
40023d08:	e28dd010 	add	sp, sp, #16
40023d0c:	e8bd9ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}
40023d10:	e59f01f4 	ldr	r0, [pc, #500]	; 40023f0c <CyU3PI2cTransmitBytes+0x228>
40023d14:	e5900000 	ldr	r0, [r0]
40023d18:	e3500000 	cmp	r0, #0
40023d1c:	0a000001 	beq	40023d28 <CyU3PI2cTransmitBytes+0x44>
40023d20:	e3a00044 	mov	r0, #68	; 0x44
40023d24:	eafffff7 	b	40023d08 <CyU3PI2cTransmitBytes+0x24>
40023d28:	e3550000 	cmp	r5, #0
40023d2c:	0a000001 	beq	40023d38 <CyU3PI2cTransmitBytes+0x54>
40023d30:	e3540000 	cmp	r4, #0
40023d34:	1a000001 	bne	40023d40 <CyU3PI2cTransmitBytes+0x5c>
40023d38:	e3a00041 	mov	r0, #65	; 0x41
40023d3c:	eafffff1 	b	40023d08 <CyU3PI2cTransmitBytes+0x24>
40023d40:	e5d40008 	ldrb	r0, [r4, #8]
40023d44:	e3500000 	cmp	r0, #0
40023d48:	0a000002 	beq	40023d58 <CyU3PI2cTransmitBytes+0x74>
40023d4c:	e5d40008 	ldrb	r0, [r4, #8]
40023d50:	e3500008 	cmp	r0, #8
40023d54:	da000001 	ble	40023d60 <CyU3PI2cTransmitBytes+0x7c>
40023d58:	e3a00040 	mov	r0, #64	; 0x40
40023d5c:	eaffffe9 	b	40023d08 <CyU3PI2cTransmitBytes+0x24>
40023d60:	e3560000 	cmp	r6, #0
40023d64:	1a000001 	bne	40023d70 <CyU3PI2cTransmitBytes+0x8c>
40023d68:	e3a00000 	mov	r0, #0
40023d6c:	eaffffe5 	b	40023d08 <CyU3PI2cTransmitBytes+0x24>
40023d70:	ebfffe45 	bl	4002368c <CyU3PI2cGetLock>
40023d74:	e1a07000 	mov	r7, r0
40023d78:	e3570000 	cmp	r7, #0
40023d7c:	0a000001 	beq	40023d88 <CyU3PI2cTransmitBytes+0xa4>
40023d80:	e1a00007 	mov	r0, r7
40023d84:	eaffffdf 	b	40023d08 <CyU3PI2cTransmitBytes+0x24>
40023d88:	e3a0ad07 	mov	sl, #448	; 0x1c0
40023d8c:	e1a00000 	nop			; (mov r0, r0)
40023d90:	e3a07000 	mov	r7, #0
40023d94:	e5d50000 	ldrb	r0, [r5]
40023d98:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023d9c:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023da0:	e3a02000 	mov	r2, #0
40023da4:	e1a01006 	mov	r1, r6
40023da8:	e1a00004 	mov	r0, r4
40023dac:	eb00005c 	bl	40023f24 <MyI2cSendCommand>
40023db0:	e1a07000 	mov	r7, r0
40023db4:	e3570000 	cmp	r7, #0
40023db8:	0a000000 	beq	40023dc0 <CyU3PI2cTransmitBytes+0xdc>
40023dbc:	ea000043 	b	40023ed0 <CyU3PI2cTransmitBytes+0x1ec>
40023dc0:	e3a08001 	mov	r8, #1
40023dc4:	ea000018 	b	40023e2c <CyU3PI2cTransmitBytes+0x148>
40023dc8:	e59f9140 	ldr	r9, [pc, #320]	; 40023f10 <CyU3PI2cTransmitBytes+0x22c>
40023dcc:	ea000004 	b	40023de4 <CyU3PI2cTransmitBytes+0x100>
40023dd0:	e1b00009 	movs	r0, r9
40023dd4:	e2499001 	sub	r9, r9, #1
40023dd8:	1a000001 	bne	40023de4 <CyU3PI2cTransmitBytes+0x100>
40023ddc:	e3a07055 	mov	r7, #85	; 0x55
40023de0:	ea000004 	b	40023df8 <CyU3PI2cTransmitBytes+0x114>
40023de4:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023de8:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023dec:	e38a1010 	orr	r1, sl, #16
40023df0:	e1100001 	tst	r0, r1
40023df4:	0afffff5 	beq	40023dd0 <CyU3PI2cTransmitBytes+0xec>
40023df8:	e1a00000 	nop			; (mov r0, r0)
40023dfc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e00:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023e04:	e110000a 	tst	r0, sl
40023e08:	0a000000 	beq	40023e10 <CyU3PI2cTransmitBytes+0x12c>
40023e0c:	e3a0704a 	mov	r7, #74	; 0x4a
40023e10:	e3570000 	cmp	r7, #0
40023e14:	0a000000 	beq	40023e1c <CyU3PI2cTransmitBytes+0x138>
40023e18:	ea000005 	b	40023e34 <CyU3PI2cTransmitBytes+0x150>
40023e1c:	e7d50008 	ldrb	r0, [r5, r8]
40023e20:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023e24:	e581042c 	str	r0, [r1, #1068]	; 0x42c
40023e28:	e2888001 	add	r8, r8, #1
40023e2c:	e1580006 	cmp	r8, r6
40023e30:	3affffe4 	bcc	40023dc8 <CyU3PI2cTransmitBytes+0xe4>
40023e34:	e1a00000 	nop			; (mov r0, r0)
40023e38:	e1560008 	cmp	r6, r8
40023e3c:	1a000013 	bne	40023e90 <CyU3PI2cTransmitBytes+0x1ac>
40023e40:	e3570000 	cmp	r7, #0
40023e44:	1a000011 	bne	40023e90 <CyU3PI2cTransmitBytes+0x1ac>
40023e48:	e59f90c0 	ldr	r9, [pc, #192]	; 40023f10 <CyU3PI2cTransmitBytes+0x22c>
40023e4c:	ea000004 	b	40023e64 <CyU3PI2cTransmitBytes+0x180>
40023e50:	e1b00009 	movs	r0, r9
40023e54:	e2499001 	sub	r9, r9, #1
40023e58:	1a000001 	bne	40023e64 <CyU3PI2cTransmitBytes+0x180>
40023e5c:	e3a07055 	mov	r7, #85	; 0x55
40023e60:	ea000004 	b	40023e78 <CyU3PI2cTransmitBytes+0x194>
40023e64:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e68:	e5900408 	ldr	r0, [r0, #1032]	; 0x408
40023e6c:	e38a1008 	orr	r1, sl, #8
40023e70:	e1100001 	tst	r0, r1
40023e74:	0afffff5 	beq	40023e50 <CyU3PI2cTransmitBytes+0x16c>
40023e78:	e1a00000 	nop			; (mov r0, r0)
40023e7c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023e80:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023e84:	e110000a 	tst	r0, sl
40023e88:	0a000000 	beq	40023e90 <CyU3PI2cTransmitBytes+0x1ac>
40023e8c:	e3a0704a 	mov	r7, #74	; 0x4a
40023e90:	e3570000 	cmp	r7, #0
40023e94:	0a000006 	beq	40023eb4 <CyU3PI2cTransmitBytes+0x1d0>
40023e98:	e3a00001 	mov	r0, #1
40023e9c:	ebfffd97 	bl	40023500 <CyU3PI2cErrorRecovery>
40023ea0:	e3500000 	cmp	r0, #0
40023ea4:	0a000002 	beq	40023eb4 <CyU3PI2cTransmitBytes+0x1d0>
40023ea8:	ebfffef6 	bl	40023a88 <CyU3PI2cReleaseLock>
40023eac:	e3a00054 	mov	r0, #84	; 0x54
40023eb0:	eaffff94 	b	40023d08 <CyU3PI2cTransmitBytes+0x24>
40023eb4:	e3570000 	cmp	r7, #0
40023eb8:	0a000004 	beq	40023ed0 <CyU3PI2cTransmitBytes+0x1ec>
40023ebc:	e59d000c 	ldr	r0, [sp, #12]
40023ec0:	e2401001 	sub	r1, r0, #1
40023ec4:	e3500000 	cmp	r0, #0
40023ec8:	e58d100c 	str	r1, [sp, #12]
40023ecc:	1affffaf 	bne	40023d90 <CyU3PI2cTransmitBytes+0xac>
40023ed0:	e1a00000 	nop			; (mov r0, r0)
40023ed4:	e357004a 	cmp	r7, #74	; 0x4a
40023ed8:	1a000007 	bne	40023efc <CyU3PI2cTransmitBytes+0x218>
40023edc:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ee0:	e590b404 	ldr	fp, [r0, #1028]	; 0x404
40023ee4:	e31b0040 	tst	fp, #64	; 0x40
40023ee8:	0a000000 	beq	40023ef0 <CyU3PI2cTransmitBytes+0x20c>
40023eec:	e3a07045 	mov	r7, #69	; 0x45
40023ef0:	e31b0080 	tst	fp, #128	; 0x80
40023ef4:	0a000000 	beq	40023efc <CyU3PI2cTransmitBytes+0x218>
40023ef8:	e3a07055 	mov	r7, #85	; 0x55
40023efc:	ebfffee1 	bl	40023a88 <CyU3PI2cReleaseLock>
40023f00:	e1a00007 	mov	r0, r7
40023f04:	eaffff7f 	b	40023d08 <CyU3PI2cTransmitBytes+0x24>
40023f08:	40030ef4 	.word	0x40030ef4
40023f0c:	40030ef0 	.word	0x40030ef0
40023f10:	00007fff 	.word	0x00007fff

Disassembly of section i.CyU3PRegisterI2cCallBack:

40023f14 <CyU3PRegisterI2cCallBack>:
40023f14:	e59f1004 	ldr	r1, [pc, #4]	; 40023f20 <CyU3PRegisterI2cCallBack+0xc>
40023f18:	e5810000 	str	r0, [r1]
40023f1c:	e12fff1e 	bx	lr
40023f20:	40030efc 	.word	0x40030efc

Disassembly of section i.MyI2cSendCommand:

40023f24 <MyI2cSendCommand>:
40023f24:	e92d41fc 	push	{r2, r3, r4, r5, r6, r7, r8, lr}
40023f28:	e1a04000 	mov	r4, r0
40023f2c:	e1a06001 	mov	r6, r1
40023f30:	e1a07002 	mov	r7, r2
40023f34:	e3a00000 	mov	r0, #0
40023f38:	e59f1108 	ldr	r1, [pc, #264]	; 40024048 <MyI2cSendCommand+0x124>
40023f3c:	e5810000 	str	r0, [r1]
40023f40:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f44:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f48:	e3100202 	tst	r0, #536870912	; 0x20000000
40023f4c:	0a000006 	beq	40023f6c <MyI2cSendCommand+0x48>
40023f50:	e3a00000 	mov	r0, #0
40023f54:	ebfffd69 	bl	40023500 <CyU3PI2cErrorRecovery>
40023f58:	e1a05000 	mov	r5, r0
40023f5c:	e3550000 	cmp	r5, #0
40023f60:	0a000001 	beq	40023f6c <MyI2cSendCommand+0x48>
40023f64:	e1a00005 	mov	r0, r5
40023f68:	e8bd81fc 	pop	{r2, r3, r4, r5, r6, r7, r8, pc}
40023f6c:	e59f80d8 	ldr	r8, [pc, #216]	; 4002404c <MyI2cSendCommand+0x128>
40023f70:	e1a00000 	nop			; (mov r0, r0)
40023f74:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f78:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f7c:	e3100203 	tst	r0, #805306368	; 0x30000000
40023f80:	0a000002 	beq	40023f90 <MyI2cSendCommand+0x6c>
40023f84:	e1b00008 	movs	r0, r8
40023f88:	e2488001 	sub	r8, r8, #1
40023f8c:	1afffff8 	bne	40023f74 <MyI2cSendCommand+0x50>
40023f90:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023f94:	e5900404 	ldr	r0, [r0, #1028]	; 0x404
40023f98:	e3100203 	tst	r0, #805306368	; 0x30000000
40023f9c:	0a000001 	beq	40023fa8 <MyI2cSendCommand+0x84>
40023fa0:	e3a00045 	mov	r0, #69	; 0x45
40023fa4:	eaffffef 	b	40023f68 <MyI2cSendCommand+0x44>
40023fa8:	e3a00000 	mov	r0, #0
40023fac:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023fb0:	e5810424 	str	r0, [r1, #1060]	; 0x424
40023fb4:	e5d42008 	ldrb	r2, [r4, #8]
40023fb8:	e1a01004 	mov	r1, r4
40023fbc:	e1a0000d 	mov	r0, sp
40023fc0:	ebff7e43 	bl	400038d4 <CyU3PMemCopy>
40023fc4:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40023fc8:	e59d0000 	ldr	r0, [sp]
40023fcc:	e581041c 	str	r0, [r1, #1052]	; 0x41c
40023fd0:	e59d0004 	ldr	r0, [sp, #4]
40023fd4:	e5810420 	str	r0, [r1, #1056]	; 0x420
40023fd8:	e3a00000 	mov	r0, #0
40023fdc:	e5810428 	str	r0, [r1, #1064]	; 0x428
40023fe0:	e3e00000 	mvn	r0, #0
40023fe4:	e5810408 	str	r0, [r1, #1032]	; 0x408
40023fe8:	e3a00d07 	mov	r0, #448	; 0x1c0
40023fec:	e5810404 	str	r0, [r1, #1028]	; 0x404
40023ff0:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40023ff4:	e5806438 	str	r6, [r0, #1080]	; 0x438
40023ff8:	e1d400ba 	ldrh	r0, [r4, #10]
40023ffc:	e5810418 	str	r0, [r1, #1048]	; 0x418
40024000:	e3570000 	cmp	r7, #0
40024004:	0a000004 	beq	4002401c <MyI2cSendCommand+0xf8>
40024008:	e5d40008 	ldrb	r0, [r4, #8]
4002400c:	e3800201 	orr	r0, r0, #268435456	; 0x10000000
40024010:	e38000e0 	orr	r0, r0, #224	; 0xe0
40024014:	e5810428 	str	r0, [r1, #1064]	; 0x428
40024018:	ea000003 	b	4002402c <MyI2cSendCommand+0x108>
4002401c:	e5d40008 	ldrb	r0, [r4, #8]
40024020:	e38000c0 	orr	r0, r0, #192	; 0xc0
40024024:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
40024028:	e5810428 	str	r0, [r1, #1064]	; 0x428
4002402c:	e3a0020e 	mov	r0, #-536870912	; 0xe0000000
40024030:	e5900428 	ldr	r0, [r0, #1064]	; 0x428
40024034:	e3800010 	orr	r0, r0, #16
40024038:	e3a0120e 	mov	r1, #-536870912	; 0xe0000000
4002403c:	e5810428 	str	r0, [r1, #1064]	; 0x428
40024040:	e3a00000 	mov	r0, #0
40024044:	eaffffc7 	b	40023f68 <MyI2cSendCommand+0x44>
40024048:	40030f00 	.word	0x40030f00
4002404c:	00007fff 	.word	0x00007fff
